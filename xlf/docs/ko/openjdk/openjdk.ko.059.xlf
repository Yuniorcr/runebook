<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="7869e54a8a266e7c8f959b53d911dda28445f675" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;HTMLDocument&lt;/code&gt; object.</source>
          <target state="translated">새로운 &lt;code&gt;HTMLDocument&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="41077822641618130ec0bedfaf21b31638589ccb" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;NodeList&lt;/code&gt; object containing all the matched &lt;code&gt;Elements&lt;/code&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;NodeList&lt;/code&gt; 를에 일치하는 모든 포함 된 개체 &lt;code&gt;Elements&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8323ebc1e0ab1a61c592a7a03b8de3a77fc401c4" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Predicate&lt;/code&gt; object may be set at any time. This has the effect of changing constraints on the &lt;code&gt;RowSet&lt;/code&gt; object's data. In addition, modifying the filter at runtime presents issues whereby multiple components may be operating on one &lt;code&gt;FilteredRowSet&lt;/code&gt; object. Application developers must take responsibility for managing multiple handles to &lt;code&gt;FilteredRowSet&lt;/code&gt; objects when their underling &lt;code&gt;Predicate&lt;/code&gt; objects change.</source>
          <target state="translated">새 &lt;code&gt;Predicate&lt;/code&gt; 개체는 언제든지 설정할 수 있습니다. 이것은 &lt;code&gt;RowSet&lt;/code&gt; 객체의 데이터 에 대한 제약 조건을 변경하는 효과가 있습니다. 또한 런타임에 필터를 수정하면 하나의 &lt;code&gt;FilteredRowSet&lt;/code&gt; 개체 에서 여러 구성 요소가 작동 할 수있는 문제가 발생 합니다. 응용 프로그램 개발자는 기본 &lt;code&gt;Predicate&lt;/code&gt; 개체가 변경 될 때 &lt;code&gt;FilteredRowSet&lt;/code&gt; 개체에 대한 여러 핸들을 관리해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5a0818fae3b102f2598d388007a8a9be75f48b7f" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ProtectionDomain&lt;/code&gt; instance is created for each &lt;code&gt;ProtectionDomain&lt;/code&gt; in the</source>
          <target state="translated">새 &lt;code&gt;ProtectionDomain&lt;/code&gt; 인스턴스는 각 &lt;code&gt;ProtectionDomain&lt;/code&gt; 에 대해</target>
        </trans-unit>
        <trans-unit id="40e23dc949c192b9bab658bd0f0a73dd00053a29" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ProtectionDomain&lt;/code&gt; instance is created for each non-static &lt;code&gt;ProtectionDomain&lt;/code&gt; ( (staticPermissionsOnly() == false) in the &lt;code&gt;currentDomains&lt;/code&gt; array. Each new &lt;code&gt;ProtectionDomain&lt;/code&gt; instance is created using the &lt;code&gt;CodeSource&lt;/code&gt;, &lt;code&gt;Permission&lt;/code&gt;s and &lt;code&gt;ClassLoader&lt;/code&gt; from the corresponding &lt;code&gt;ProtectionDomain&lt;/code&gt; in &lt;code&gt;currentDomains&lt;/code&gt;, as well as with the Principals from the &lt;code&gt;Subject&lt;/code&gt; associated with this &lt;code&gt;SubjectDomainCombiner&lt;/code&gt;. Static ProtectionDomains are combined as-is and no new instance is created.</source>
          <target state="translated">새 &lt;code&gt;ProtectionDomain&lt;/code&gt; 인스턴스는 각각의 비 정적 생성된다 &lt;code&gt;ProtectionDomain&lt;/code&gt; 에 에서) ((staticPermissionsOnly () == false를 &lt;code&gt;currentDomains&lt;/code&gt; 의 배열. 각각의 새 &lt;code&gt;ProtectionDomain&lt;/code&gt; 인스턴스 사용하여 생성된다 &lt;code&gt;CodeSource&lt;/code&gt; 에 , &lt;code&gt;Permission&lt;/code&gt; 들 및 &lt;code&gt;ClassLoader&lt;/code&gt; 해당 행 &lt;code&gt;ProtectionDomain&lt;/code&gt; 에 &lt;code&gt;currentDomains&lt;/code&gt; 뿐만 아니라 이 &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; 와 연관된 &lt;code&gt;Subject&lt;/code&gt; 의 프린시 펄 과 함께 정적 ProtectionDomain은있는 그대로 결합되며 새 인스턴스가 작성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a95239ece3f57681e7656c554da453f9592e1013" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ScriptEngine&lt;/code&gt; instance.</source>
          <target state="translated">새로운 &lt;code&gt;ScriptEngine&lt;/code&gt; 인스턴스</target>
        </trans-unit>
        <trans-unit id="1f109b8d7e453b9671d1212247ac664691653bfb" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;SecureRandom&lt;/code&gt; object encapsulating the &lt;code&gt;SecureRandomSpi&lt;/code&gt; implementation from the specified &lt;code&gt;Provider&lt;/code&gt; object is returned. Note that the specified &lt;code&gt;Provider&lt;/code&gt; object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 &lt;code&gt;Provider&lt;/code&gt; 개체 에서 &lt;code&gt;SecureRandomSpi&lt;/code&gt; 구현을 캡슐화 하는 새 &lt;code&gt;SecureRandom&lt;/code&gt; 개체가 반환됩니다. 지정된 &lt;code&gt;Provider&lt;/code&gt; 개체는 공급자 목록에 등록 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="4443aab9ef82b062faadc57d2fdcdb83ef1aabc1" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;SecureRandom&lt;/code&gt; object encapsulating the &lt;code&gt;SecureRandomSpi&lt;/code&gt; implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 공급자 의 &lt;code&gt;SecureRandomSpi&lt;/code&gt; 구현을 캡슐화 하는 새 &lt;code&gt;SecureRandom&lt;/code&gt; 개체 가 반환됩니다. 지정된 공급자는 보안 공급자 목록에 등록되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="5c35c1a4d858abd970e2d3b67ff470296be409e5" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;TIFFField&lt;/code&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;TIFFField&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eda082cce43bbb1d4dd772771575be56b104b4ff" translate="yes" xml:space="preserve">
          <source>A new AlgorithmParameterGenerator object encapsulating the AlgorithmParameterGeneratorSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체에서 AlgorithmParameterGeneratorSpi 구현을 캡슐화하는 새로운 AlgorithmParameterGenerator 객체가 반환됩니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="0096921d89846c0cf2763feccbd6997a0ca057e4" translate="yes" xml:space="preserve">
          <source>A new AlgorithmParameterGenerator object encapsulating the AlgorithmParameterGeneratorSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 AlgorithmParameterGeneratorSpi 구현을 캡슐화하는 새로운 AlgorithmParameterGenerator 객체가 리턴됩니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="c8db4ef5023ec47dffbc295585ed2ee725e8ec7e" translate="yes" xml:space="preserve">
          <source>A new AlgorithmParameters object encapsulating the AlgorithmParametersSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체에서 AlgorithmParametersSpi 구현을 캡슐화하는 새로운 AlgorithmParameters 객체가 반환됩니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="05e564e535bfdce60132adece41bae9a47113364" translate="yes" xml:space="preserve">
          <source>A new AlgorithmParameters object encapsulating the AlgorithmParametersSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 AlgorithmParametersSpi 구현을 캡슐화하는 새로운 AlgorithmParameters 객체가 돌려 주어집니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="b3342f984e42a6e4f6ed42ef5ed905af22a601ad" translate="yes" xml:space="preserve">
          <source>A new CSS style sheet.</source>
          <target state="translated">새로운 CSS 스타일 시트.</target>
        </trans-unit>
        <trans-unit id="0f1d7452ea04f9c2afe99ae652273776235855e7" translate="yes" xml:space="preserve">
          <source>A new CertPathBuilder object encapsulating the CertPathBuilderSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체로부터 CertPathBuilderSpi 구현을 캡슐화하는 새로운 CertPathBuilder 객체가 돌려 주어집니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="4813f80297b39ee0005052624b5afe1227d8ba78" translate="yes" xml:space="preserve">
          <source>A new CertPathBuilder object encapsulating the CertPathBuilderSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 CertPathBuilderSpi 구현을 캡슐화하는 새로운 CertPathBuilder 객체가 돌려 주어집니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="f4f6e5d465fe4439ee8d90eb2dc3dbe6fb7f98e1" translate="yes" xml:space="preserve">
          <source>A new CertPathValidator object encapsulating the CertPathValidatorSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체로부터 CertPathValidatorSpi 구현을 캡슐화하는 새로운 CertPathValidator 객체가 돌려 주어집니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="c47b2e857fd28f65e29dfe763089c7fad02932d8" translate="yes" xml:space="preserve">
          <source>A new CertPathValidator object encapsulating the CertPathValidatorSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 CertPathValidatorSpi 구현을 캡슐화하는 새로운 CertPathValidator 객체가 돌려 주어집니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="7bd4645178202c99207e926685878b815ba8fce2" translate="yes" xml:space="preserve">
          <source>A new CertStore object encapsulating the CertStoreSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체로부터 CertStoreSpi 구현을 캡슐화하는 새로운 CertStore 객체가 돌려 주어집니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="8d8f6a7b01df83b2a9a8122afb18b83d00dd1d65" translate="yes" xml:space="preserve">
          <source>A new CertStore object encapsulating the CertStoreSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 CertStoreSpi 구현을 캡슐화하는 새로운 CertStore 객체가 돌려 주어집니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="3ffe740d37d58dd03d186ad8aaf4cc29b54a3ee6" translate="yes" xml:space="preserve">
          <source>A new CertificateFactory object encapsulating the CertificateFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체로부터 CertificateFactorySpi 구현을 캡슐화하는 새로운 CertificateFactory 객체가 돌려 주어집니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="667c5edd8de2720b23e0df06dc2169efc2ffbf6e" translate="yes" xml:space="preserve">
          <source>A new CertificateFactory object encapsulating the CertificateFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 CertificateFactorySpi 구현을 캡슐화하는 새로운 CertificateFactory 객체가 돌려 주어집니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="13f5262b3e58b67e449bf85fb8910c0c65651876" translate="yes" xml:space="preserve">
          <source>A new Cipher object encapsulating the CipherSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체에서 CipherSpi 구현을 캡슐화하는 새로운 Cipher 객체가 반환됩니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="a779576cecf11550d340570f7b289b329b69e9c0" translate="yes" xml:space="preserve">
          <source>A new Cipher object encapsulating the CipherSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 CipherSpi 구현을 캡슐화하는 새로운 Cipher 객체가 돌려 주어집니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="e6ef251d1ad08ddaf631fcd2060e3b3a5e0f46c5" translate="yes" xml:space="preserve">
          <source>A new Configuration object encapsulating the ConfigurationSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체에서 ConfigurationSpi 구현을 캡슐화하는 새로운 Configuration 객체가 반환됩니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="fa463bab5fbb393507e91ecd483b38008a3795b7" translate="yes" xml:space="preserve">
          <source>A new Configuration object encapsulating the ConfigurationSpi implementation from the specified provider is returned. The specified provider must be registered in the provider list.</source>
          <target state="translated">지정된 공급자의 ConfigurationSpi 구현을 캡슐화하는 새로운 Configuration 개체가 반환됩니다. 지정된 제공자는 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="268558c1e911108ef6beb8616f773d3b457cd85a" translate="yes" xml:space="preserve">
          <source>A new DOM Document object.</source>
          <target state="translated">새로운 DOM 문서 객체.</target>
        </trans-unit>
        <trans-unit id="3d7bca7783460fdcbe766d8afa49d507dd57fce6" translate="yes" xml:space="preserve">
          <source>A new ExemptionMechanism object encapsulating the ExemptionMechanismSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체에서 ExemptionMechanismSpi 구현을 캡슐화하는 새로운 ExemptionMechanism 객체가 반환됩니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="7d01edec86d421f499b113f481dc2188c1235265" translate="yes" xml:space="preserve">
          <source>A new ExemptionMechanism object encapsulating the ExemptionMechanismSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 공급자로부터 ExemptionMechanismSpi 구현을 캡슐화하는 새로운 ExemptionMechanism 객체가 반환됩니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="eb9a359af290bd0355a7a6eb076732d3c75c73d0" translate="yes" xml:space="preserve">
          <source>A new InputSource or null for the default.</source>
          <target state="translated">새 InputSource 또는 기본값은 null입니다.</target>
        </trans-unit>
        <trans-unit id="3a8f176dc13128dc7727dc967e2effffb4fd2d1e" translate="yes" xml:space="preserve">
          <source>A new KeyAgreement object encapsulating the KeyAgreementSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체에서 KeyAgreementSpi 구현을 캡슐화하는 새로운 KeyAgreement 객체가 반환됩니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="abfdca351b763735030c6ffa741e09a2e267a2fe" translate="yes" xml:space="preserve">
          <source>A new KeyAgreement object encapsulating the KeyAgreementSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 KeyAgreementSpi 구현을 캡슐화하는 새로운 KeyAgreement 객체가 돌려 주어집니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="84931dacf7f4308bf76b01043d9e1d1952f0c0e2" translate="yes" xml:space="preserve">
          <source>A new KeyFactory object encapsulating the KeyFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체로부터 KeyFactorySpi 구현을 캡슐화하는 새로운 KeyFactory 객체가 돌려 주어집니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="17be658cae2f4ca28d3a636c2fb89480fddc80e2" translate="yes" xml:space="preserve">
          <source>A new KeyFactory object encapsulating the KeyFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 KeyFactorySpi 구현을 캡슐화하는 새로운 KeyFactory 객체가 돌려 주어집니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="726b9be3aa361c7a1a6a8904841d210166b70e4a" translate="yes" xml:space="preserve">
          <source>A new KeyGenerator object encapsulating the KeyGeneratorSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체에서 KeyGeneratorSpi 구현을 캡슐화하는 새로운 KeyGenerator 객체가 반환됩니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="601bd47706449db33537347d94064978f2eacaea" translate="yes" xml:space="preserve">
          <source>A new KeyGenerator object encapsulating the KeyGeneratorSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 KeyGeneratorSpi 구현을 캡슐화하는 새로운 KeyGenerator 객체가 돌려 주어집니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="bb1a75f50c4c8029b580cf3a428319dbb0999447" translate="yes" xml:space="preserve">
          <source>A new KeyManagerFactory object encapsulating the KeyManagerFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체로부터 KeyManagerFactorySpi 구현을 캡슐화하는 새로운 KeyManagerFactory 객체가 돌려 주어집니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="4797fb2c6d23e5bab123bb7103d87927153a81fa" translate="yes" xml:space="preserve">
          <source>A new KeyManagerFactory object encapsulating the KeyManagerFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 KeyManagerFactorySpi 구현을 캡슐화하는 새로운 KeyManagerFactory 객체가 돌려 주어집니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="bd15c6ed2e3240f50d98657c044e44c22458ebd1" translate="yes" xml:space="preserve">
          <source>A new KeyPairGenerator object encapsulating the KeyPairGeneratorSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체로부터 KeyPairGeneratorSpi 구현을 캡슐화하는 새로운 KeyPairGenerator 객체가 리턴됩니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="12c4ce735c8941f25ce3934bcb5bb865e73a5782" translate="yes" xml:space="preserve">
          <source>A new KeyPairGenerator object encapsulating the KeyPairGeneratorSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 KeyPairGeneratorSpi 구현을 캡슐화하는 새로운 KeyPairGenerator 객체가 리턴됩니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="8ab07cbfc7499c36532bc293c456c29f325598e5" translate="yes" xml:space="preserve">
          <source>A new KeyStore object encapsulating the KeyStoreSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체로부터 KeyStoreSpi 구현을 캡슐화하는 새로운 KeyStore 객체가 돌려 주어집니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="1c8dfdc36199a332249519eeeea1609560b4aada" translate="yes" xml:space="preserve">
          <source>A new KeyStore object encapsulating the KeyStoreSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 KeyStoreSpi 구현을 캡슐화하는 새로운 KeyStore 객체가 돌려 주어집니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="efcee39721eebc8fee884a81cb101c715d642357" translate="yes" xml:space="preserve">
          <source>A new Mac object encapsulating the MacSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체에서 MacSpi 구현을 캡슐화하는 새로운 Mac 객체가 반환됩니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="3df5f1db3255acb1b4aec4415fe60b9d47e4877d" translate="yes" xml:space="preserve">
          <source>A new Mac object encapsulating the MacSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 공급자로부터 MacSpi 구현을 캡슐화하는 새로운 Mac 객체가 반환됩니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="3e0370abbf39cd0a1720174664441cdfa936cded" translate="yes" xml:space="preserve">
          <source>A new MessageDigest object encapsulating the MessageDigestSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체에서 MessageDigestSpi 구현을 캡슐화하는 새로운 MessageDigest 객체가 반환됩니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="2b3460499c4fc8e488a6d3199e9febda0e668b3b" translate="yes" xml:space="preserve">
          <source>A new MessageDigest object encapsulating the MessageDigestSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 MessageDigestSpi 구현을 캡슐화하는 새로운 MessageDigest 객체가 돌려 주어집니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="e951b0d1178624f88694988cc856af7f8e4eb0d7" translate="yes" xml:space="preserve">
          <source>A new Policy object encapsulating the PolicySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체에서 PolicySpi 구현을 캡슐화하는 새로운 Policy 객체가 반환됩니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="af2d9c29be422703f6d5f565cf9b2fa602f5114a" translate="yes" xml:space="preserve">
          <source>A new Policy object encapsulating the PolicySpi implementation from the specified provider is returned. The specified provider must be registered in the provider list.</source>
          <target state="translated">지정된 공급자의 PolicySpi 구현을 캡슐화하는 새로운 정책 개체가 반환됩니다. 지정된 제공자는 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="d9d27f15fa2eaa2e07308aeaaa9a7b228887c0fa" translate="yes" xml:space="preserve">
          <source>A new SCTP channel</source>
          <target state="translated">새로운 SCTP 채널</target>
        </trans-unit>
        <trans-unit id="0b834545dca96977dca042ccbb9f2de90cd38017" translate="yes" xml:space="preserve">
          <source>A new SCTP channel connected to the given address</source>
          <target state="translated">주어진 주소에 연결된 새 SCTP 채널</target>
        </trans-unit>
        <trans-unit id="2c8ea109e0a3d78661aab99484893b3ffd867b9b" translate="yes" xml:space="preserve">
          <source>A new SCTP multi channel</source>
          <target state="translated">새로운 SCTP 다중 채널</target>
        </trans-unit>
        <trans-unit id="6e77c7a9292e2a6938c28335b3ee2156241d5b23" translate="yes" xml:space="preserve">
          <source>A new SCTP server channel</source>
          <target state="translated">새로운 SCTP 서버 채널</target>
        </trans-unit>
        <trans-unit id="7858bf11a432c416daff7336874533473b29ac41" translate="yes" xml:space="preserve">
          <source>A new SSLContext object encapsulating the SSLContextSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체에서 SSLContextSpi 구현을 캡슐화하는 새로운 SSLContext 객체가 반환됩니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="c8fb01cecb27c91b6b8cf68e13eff80f90e7c94f" translate="yes" xml:space="preserve">
          <source>A new SSLContext object encapsulating the SSLContextSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 SSLContextSpi 구현을 캡슐화하는 새로운 SSLContext 객체가 돌려 주어집니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="125b51a284735009e0587e15b1957037a70f2802" translate="yes" xml:space="preserve">
          <source>A new SecretKeyFactory object encapsulating the SecretKeyFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체에서 SecretKeyFactorySpi 구현을 캡슐화하는 새로운 SecretKeyFactory 객체가 반환됩니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="a40ee33baacc8bc5aa95c3f9ea8fbb1bb62b66e8" translate="yes" xml:space="preserve">
          <source>A new SecretKeyFactory object encapsulating the SecretKeyFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 SecretKeyFactorySpi 구현을 캡슐화하는 새로운 SecretKeyFactory 객체가 돌려 주어집니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="a0ad3fe577ac3de904aa73bfe5d0324bc87a0ef2" translate="yes" xml:space="preserve">
          <source>A new SecureRandom object encapsulating the SecureRandomSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체에서 SecureRandomSpi 구현을 캡슐화하는 새로운 SecureRandom 객체가 반환됩니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="7cbd31f6dffe090270edeb2c56d25020ed9dc191" translate="yes" xml:space="preserve">
          <source>A new SecureRandom object encapsulating the SecureRandomSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 프로 바이더로부터 SecureRandomSpi 구현을 캡슐화하는 새로운 SecureRandom 객체가 돌려 주어집니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="828cbcea91bf56c9036fa8b7931cff18275cc27b" translate="yes" xml:space="preserve">
          <source>A new Signature object encapsulating the SignatureSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체에서 SignatureSpi 구현을 캡슐화하는 새로운 Signature 객체가 반환됩니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="ce3264e462754c18f1da3742ab2d57ae7b1dd714" translate="yes" xml:space="preserve">
          <source>A new Signature object encapsulating the SignatureSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 공급자의 SignatureSpi 구현을 캡슐화하는 새로운 Signature 객체가 반환됩니다. 지정된 제공자는 보안 제공자 목록에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="ad638694a4b1174b1e24a42aa6da4815fa5435e1" translate="yes" xml:space="preserve">
          <source>A new Socket &lt;code&gt;s&lt;/code&gt; is created and, if there is a security manager, the security manager's &lt;code&gt;checkAccept&lt;/code&gt; method is called with &lt;code&gt;s.getInetAddress().getHostAddress()&lt;/code&gt; and &lt;code&gt;s.getPort()&lt;/code&gt; as its arguments to ensure the operation is allowed. This could result in a SecurityException.</source>
          <target state="translated">새로운 소켓 &lt;code&gt;s&lt;/code&gt; 보안 관리자가 보안 관리자의 존재하는 경우, 생성됩니다 &lt;code&gt;checkAccept&lt;/code&gt; 메소드가 불려 &lt;code&gt;s.getInetAddress().getHostAddress()&lt;/code&gt; 및 &lt;code&gt;s.getPort()&lt;/code&gt; 작동을 보장하기 위해 인수를 허용한다. 이로 인해 SecurityException이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66204968ac98a71fc6ee269f8a995331d559448a" translate="yes" xml:space="preserve">
          <source>A new TerminalFactory object encapsulating the TerminalFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">지정된 공급자의 TerminalFactorySpi 구현을 캡슐화하는 새 TerminalFactory 개체가 반환됩니다. 지정된 공급자는 보안 공급자 목록에 등록되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="84dfef1c1eaa14da4b2dc8e38eb215a181632e26" translate="yes" xml:space="preserve">
          <source>A new TerminalFactory object encapsulating the TerminalFactorySpi implementation from the specified provider object is returned. Note that the specified provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 공급자 개체에서 TerminalFactorySpi 구현을 캡슐화하는 새 TerminalFactory 개체가 반환됩니다. 지정된 공급자 개체는 공급자 목록에 등록 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="97302852d3f597f8d52fdf01ec03933350e6ae95" translate="yes" xml:space="preserve">
          <source>A new TrustManagerFactory object encapsulating the TrustManagerFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">지정된 Provider 객체로부터 TrustManagerFactorySpi 구현을 캡슐화하는 새로운 TrustManagerFactory 객체가 돌려 주어집니다. 지정된 제공자 오브젝트를 제공자 목록에 등록 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="23fe331bb6446dd58e24f97a053114136ed0249e" translate="yes" xml:space="preserve">
          <source>A new URI is constructed with this URI's scheme and the given URI's query and fragment components.</source>
          <target state="translated">이 URI의 체계와 지정된 URI의 쿼리 및 조각 구성 요소로 새 URI가 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="157a34a241ea1b952cd99032a77ba64cbe69bb79" translate="yes" xml:space="preserve">
          <source>A new XML reader.</source>
          <target state="translated">새로운 XML 리더.</target>
        </trans-unit>
        <trans-unit id="bce4d13997e8b5057b928f0e4624b6a29692cdb6" translate="yes" xml:space="preserve">
          <source>A new association is now ready and data may be exchanged with this peer.</source>
          <target state="translated">이제 새 연결이 준비되었으며이 피어와 데이터를 교환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06f9613f699e6fa12d911001309fb89e22f8dd9e" translate="yes" xml:space="preserve">
          <source>A new asynchronous channel group</source>
          <target state="translated">새로운 비동기 채널 그룹</target>
        </trans-unit>
        <trans-unit id="f9986c93c068befdf1d67a7439a7159a62fd88b3" translate="yes" xml:space="preserve">
          <source>A new asynchronous file channel</source>
          <target state="translated">새로운 비동기 파일 채널</target>
        </trans-unit>
        <trans-unit id="0cbc57d6c284b1dd12c94be8622f616e240f8834" translate="yes" xml:space="preserve">
          <source>A new asynchronous server socket channel</source>
          <target state="translated">새로운 비동기 서버 소켓 채널</target>
        </trans-unit>
        <trans-unit id="9c56f1e622819c89f8e6fae5048bfb4464aa4589" translate="yes" xml:space="preserve">
          <source>A new asynchronous socket channel</source>
          <target state="translated">새로운 비동기 소켓 채널</target>
        </trans-unit>
        <trans-unit id="629499fc782a69be656b125acbccb40f74208a4a" translate="yes" xml:space="preserve">
          <source>A new builder</source>
          <target state="translated">새로운 빌더</target>
        </trans-unit>
        <trans-unit id="9fad74d240d25d378558b1255b34f70560a228bf" translate="yes" xml:space="preserve">
          <source>A new builder that builds an automatic module</source>
          <target state="translated">자동 모듈을 구축하는 새로운 빌더</target>
        </trans-unit>
        <trans-unit id="e92d9957909a8d005975568fba3a9c49448141f9" translate="yes" xml:space="preserve">
          <source>A new builder that builds an open module</source>
          <target state="translated">오픈 모듈을 빌드하는 새로운 빌더</target>
        </trans-unit>
        <trans-unit id="25ee34a403c6700c546a4108cc328ae600591c3e" translate="yes" xml:space="preserve">
          <source>A new certificate handling package is created in the Java platform.</source>
          <target state="translated">Java 플랫폼에서 새 인증서 처리 패키지가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="718f2b8bbf1587dde6bb38de3b6d608243e6dea2" translate="yes" xml:space="preserve">
          <source>A new certificate handling package is created in the Java platform. This Certificate interface is entirely deprecated and is here to allow for a smooth transition to the new package.</source>
          <target state="translated">Java 플랫폼에서 새 인증서 처리 패키지가 작성됩니다. 이 인증서 인터페이스는 완전히 사용되지 않으며 새 패키지로 원활하게 전환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26ac536ddec39c76615631278c13e054fe68ed0b" translate="yes" xml:space="preserve">
          <source>A new char buffer</source>
          <target state="translated">새로운 문자 버퍼</target>
        </trans-unit>
        <trans-unit id="01d9b805add68dab9a76c40af460390f4da7fb91" translate="yes" xml:space="preserve">
          <source>A new client connection has been opened.</source>
          <target state="translated">새로운 클라이언트 연결이 열렸습니다.</target>
        </trans-unit>
        <trans-unit id="cc2a294dd99b3c03dbf54cdf085be4e65bab5b13" translate="yes" xml:space="preserve">
          <source>A new collation rules string can be created by concatenating rules strings. For example, the rules returned by &lt;a href=&quot;#getRules()&quot;&gt;&lt;code&gt;getRules()&lt;/code&gt;&lt;/a&gt; could be concatenated to combine multiple &lt;code&gt;RuleBasedCollator&lt;/code&gt;s.</source>
          <target state="translated">규칙 문자열을 연결하여 새 데이터 정렬 규칙 문자열을 만들 수 있습니다. 예를 들어, &lt;a href=&quot;#getRules()&quot;&gt; &lt;code&gt;getRules()&lt;/code&gt; &lt;/a&gt; 반환 된 규칙을 연결하여 여러 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 를 결합 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="827e2087bb76a0b88fc51994d48a3006017e8bae" translate="yes" xml:space="preserve">
          <source>A new collation rules string can be created by concatenating rules strings. For example, the rules returned by &lt;a href=&quot;rulebasedcollator#getRules--&quot;&gt;&lt;code&gt;getRules()&lt;/code&gt;&lt;/a&gt; could be concatenated to combine multiple &lt;code&gt;RuleBasedCollator&lt;/code&gt;s.</source>
          <target state="translated">규칙 문자열을 연결하여 새로운 데이터 정렬 규칙 문자열을 만들 수 있습니다. 예를 들어, &lt;a href=&quot;rulebasedcollator#getRules--&quot;&gt; &lt;code&gt;getRules()&lt;/code&gt; &lt;/a&gt; 의해 리턴 된 규칙 은 여러 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 를 결합하도록 연결될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0c8e2bfcf83550d90a8829fb36311408b5e67747" translate="yes" xml:space="preserve">
          <source>A new datagram channel</source>
          <target state="translated">새로운 데이터 그램 채널</target>
        </trans-unit>
        <trans-unit id="e0b8ebf717a254cbd0e710cad36b3aa7cf6b47c8" translate="yes" xml:space="preserve">
          <source>A new decoder for this charset</source>
          <target state="translated">이 캐릭터 세트의 새로운 디코더</target>
        </trans-unit>
        <trans-unit id="a58078311df4687b197e1dcc8ca8cfde78caada0" translate="yes" xml:space="preserve">
          <source>A new double buffer</source>
          <target state="translated">새로운 더블 버퍼</target>
        </trans-unit>
        <trans-unit id="c7e6b0b71de9de9ede7aea10272874373ea2cfbf" translate="yes" xml:space="preserve">
          <source>A new encoder for this charset</source>
          <target state="translated">이 문자셋을위한 새로운 인코더</target>
        </trans-unit>
        <trans-unit id="07ae51599dd6fc63f812a77e6f211c732ee4f105" translate="yes" xml:space="preserve">
          <source>A new exception has been created for exceptions specific to these XPath interfaces.</source>
          <target state="translated">이러한 XPath 인터페이스와 관련된 예외에 대해 새로운 예외가 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="95bd182773eb0d36bbf9f3deb8094b7bc400b85f" translate="yes" xml:space="preserve">
          <source>A new exception has been created for exceptions specific to these XPath interfaces. See also &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-3-XPath/&quot;&gt; Document Object Model (DOM) Level 3 XPath Specification, Version 1.0, W3C Working Group Note 26 February 2004&lt;/a&gt; Note that this class came from Document Object Model (DOM) Level 3 XPath Specification, Working Draft 20 August 2002 where the values of &lt;a href=&quot;#INVALID_EXPRESSION_ERR&quot;&gt;&lt;code&gt;INVALID_EXPRESSION_ERR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#TYPE_ERR&quot;&gt;&lt;code&gt;TYPE_ERR&lt;/code&gt;&lt;/a&gt; are 1 and 2 respectively (instead of 51 and 52 as in the 2004 version).</source>
          <target state="translated">이러한 XPath 인터페이스와 관련된 예외에 대해 새로운 예외가 생성되었습니다. 도 참조 &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-3-XPath/&quot;&gt;문서 객체 모델 (DOM) 레벨 3의 XPath 사양, 버전 1.0, W3C 워킹 그룹 노트 2004년 2월 26일&lt;/a&gt; 이 클래스는 문서 객체 모델 (DOM) 레벨 3의 XPath 사양에서 온 것을 참고, 작업 초안 2002년 8월 20일 곳의 값 &lt;a href=&quot;#INVALID_EXPRESSION_ERR&quot;&gt; &lt;code&gt;INVALID_EXPRESSION_ERR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#TYPE_ERR&quot;&gt; &lt;code&gt;TYPE_ERR&lt;/code&gt; &lt;/a&gt; 은 각각 1과 2입니다 (2004 버전의 51과 52 대신).</target>
        </trans-unit>
        <trans-unit id="7a12be5620980a642f2d62bb55b1169fe7d2f9c0" translate="yes" xml:space="preserve">
          <source>A new file channel</source>
          <target state="translated">새로운 파일 채널</target>
        </trans-unit>
        <trans-unit id="7a03fc9b6fe7f9f50a8b588d5c2839f795d5cfa3" translate="yes" xml:space="preserve">
          <source>A new file system</source>
          <target state="translated">새로운 파일 시스템</target>
        </trans-unit>
        <trans-unit id="2c72f7dbc539aca73a65ca87d61f96c62f44ab73" translate="yes" xml:space="preserve">
          <source>A new float buffer</source>
          <target state="translated">새로운 플로트 버퍼</target>
        </trans-unit>
        <trans-unit id="07e3279021ba77f5ae5155347ef02546bd534253" translate="yes" xml:space="preserve">
          <source>A new input stream</source>
          <target state="translated">새로운 입력 스트림</target>
        </trans-unit>
        <trans-unit id="aa02ce4bf632eab35c8c2d8de16eb028c133b493" translate="yes" xml:space="preserve">
          <source>A new instance of &lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt; is created every time when invoking the &lt;a href=&quot;urlstreamhandler#openConnection(java.net.URL)&quot;&gt;URLStreamHandler.openConnection(URL)&lt;/a&gt; method of the protocol handler for this URL.</source>
          <target state="translated">이 URL에 대한 프로토콜 처리기 의 &lt;a href=&quot;urlstreamhandler#openConnection(java.net.URL)&quot;&gt;URLStreamHandler.openConnection (URL)&lt;/a&gt; 메서드를 호출 할 때마다 &lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt; 의 새 인스턴스 가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="c28559dd6b37c82370a2d6d36b273e27af024dea" translate="yes" xml:space="preserve">
          <source>A new instance of &lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt; is created every time when invoking the &lt;a href=&quot;urlstreamhandler#openConnection-java.net.URL-&quot;&gt;URLStreamHandler.openConnection(URL)&lt;/a&gt; method of the protocol handler for this URL.</source>
          <target state="translated">이 URL에 대한 프로토콜 핸들러 의 &lt;a href=&quot;urlstreamhandler#openConnection-java.net.URL-&quot;&gt;URLStreamHandler.openConnection (URL)&lt;/a&gt; 메소드를 호출 할 때마다 &lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt; 의 새 인스턴스 가 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="09ee83524a2a6cec8de09ad6addfbae7e314cdce" translate="yes" xml:space="preserve">
          <source>A new instance of a &lt;code&gt;DOMImplementation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMImplementation&lt;/code&gt; 의 새 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="d4961957f719848f8638762dfcd734c9efac8219" translate="yes" xml:space="preserve">
          <source>A new instance of a CachedRowSet.</source>
          <target state="translated">CachedRowSet의 새 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="faafe4152486969e7c281c1445dc75ff92829b56" translate="yes" xml:space="preserve">
          <source>A new instance of a DOM Document object.</source>
          <target state="translated">DOM 문서 객체의 새 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="63baa74073afc7903bcfd521ce76950ab24c3358" translate="yes" xml:space="preserve">
          <source>A new instance of a DocumentBuilder.</source>
          <target state="translated">DocumentBuilder의 새 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="43aeb569dfa12312d98c1df99b0b9c5a57a1cecb" translate="yes" xml:space="preserve">
          <source>A new instance of a FilteredRowSet.</source>
          <target state="translated">FilteredRowSet의 새 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="457ed6ba0799b2cad0030abf99f554a8d05119f5" translate="yes" xml:space="preserve">
          <source>A new instance of a JdbcRowSet.</source>
          <target state="translated">JdbcRowSet의 새 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="c288ef954fd9c070a9e9c45378da1f7bfaa440ee" translate="yes" xml:space="preserve">
          <source>A new instance of a JoinRowSet.</source>
          <target state="translated">JoinRowSet의 새 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="dba82889fa35016045565b66ab8e267b901eb25b" translate="yes" xml:space="preserve">
          <source>A new instance of a SAXParser.</source>
          <target state="translated">SAXParser의 새 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="0ed0e50c9ee23a426d83efb31df4a7ea91a7cc07" translate="yes" xml:space="preserve">
          <source>A new instance of a SAXParserFactory.</source>
          <target state="translated">SAXParserFactory의 새 인스턴스.</target>
        </trans-unit>
        <trans-unit id="69c4e380a0d626dbb5eb47b86877ca603ed20145" translate="yes" xml:space="preserve">
          <source>A new instance of a WebRowSet.</source>
          <target state="translated">WebRowSet의 새 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="02ba29b9df798f29678c5c4004096be3513a4ab9" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;DatatypeFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">&lt;code&gt;DatatypeFactory&lt;/code&gt; 내장 시스템 기본 구현 의 새 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="f1aefd1dfdb46b9d062c77a9d2289f8c0e987db0" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;DatatypeFactory&lt;/code&gt; is created through the &lt;a href=&quot;#newInstance()&quot;&gt;&lt;code&gt;newInstance()&lt;/code&gt;&lt;/a&gt; method that uses the following implementation resolution mechanisms to determine an implementation:</source>
          <target state="translated">&lt;code&gt;DatatypeFactory&lt;/code&gt; 의 새 인스턴스 는 다음 구현 확인 메커니즘을 사용하여 구현을 결정하는 &lt;a href=&quot;#newInstance()&quot;&gt; &lt;code&gt;newInstance()&lt;/code&gt; &lt;/a&gt; 메서드를 통해 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="2b4c941aa0181945e0c3f753d40c3a6d40a28985" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">&lt;code&gt;DocumentBuilderFactory&lt;/code&gt; 내장 시스템 기본 구현 의 새 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="5c7faa9209326d962b653b314cdf02fc955e6995" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;SAXParserFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">&lt;code&gt;SAXParserFactory&lt;/code&gt; 내장 시스템 기본 구현 의 새 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="cc6a464fa02bcd202d11de377703e73d7c138591" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;SchemaFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">&lt;code&gt;SchemaFactory&lt;/code&gt; 내장 시스템 기본 구현 의 새 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="68ad9849a89b512e82c82da5570806181e8f22e5" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;TransformerFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">&lt;code&gt;TransformerFactory&lt;/code&gt; 내장 시스템 기본 구현 의 새 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="85f9777c8930827dfb2a70b7ad32691eadf2f90d" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;XMLEventFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">&lt;code&gt;XMLEventFactory&lt;/code&gt; 내장 시스템 기본 구현 의 새 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="84b3a1e6cc940512457d4f097a81448949bc0ea1" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;XMLInputFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">&lt;code&gt;XMLInputFactory&lt;/code&gt; 내장 시스템 기본 구현 의 새 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="b689f28162c5d08b1ec2167897e085e171f388cb" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;XMLOutputFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">&lt;code&gt;XMLOutputFactory&lt;/code&gt; 내장 시스템 기본 구현 의 새 인스턴스 .</target>
        </trans-unit>
        <trans-unit id="c07fed8aa7432ea5be5cf7464e7669f77adbc594" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;XPathFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">&lt;code&gt;XPathFactory&lt;/code&gt; 내장 시스템 기본 구현 의 새 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="70dd79cc189d68c5b9c4748ef1fbf76c508ca55d" translate="yes" xml:space="preserve">
          <source>A new int buffer</source>
          <target state="translated">새로운 int 버퍼</target>
        </trans-unit>
        <trans-unit id="4cab229378aefd95620182bd2e26e42daed2a585" translate="yes" xml:space="preserve">
          <source>A new key representing the registration of the given channel with this selector</source>
          <target state="translated">이 선택기로 주어진 채널의 등록을 나타내는 새로운 키</target>
        </trans-unit>
        <trans-unit id="eb82ef1bb373c9a76bbed75b19d1396c6c0475f9" translate="yes" xml:space="preserve">
          <source>A new long buffer</source>
          <target state="translated">새로운 긴 버퍼</target>
        </trans-unit>
        <trans-unit id="2378edf28d0f7cd090a51aaa3253aba996f08c6c" translate="yes" xml:space="preserve">
          <source>A new matcher for this pattern</source>
          <target state="translated">이 패턴에 대한 새로운 매처</target>
        </trans-unit>
        <trans-unit id="370091f3315fb7e9620cc6ef2c7174e7f8b439d4" translate="yes" xml:space="preserve">
          <source>A new output stream</source>
          <target state="translated">새로운 출력 스트림</target>
        </trans-unit>
        <trans-unit id="fc00dcf9a6f1431f2f4900621a30444a41c3f824" translate="yes" xml:space="preserve">
          <source>A new pipe</source>
          <target state="translated">새로운 파이프</target>
        </trans-unit>
        <trans-unit id="195dbfc34817c71b0ac77609e1a68b8637c20709" translate="yes" xml:space="preserve">
          <source>A new private implementation of an MBeanServer.</source>
          <target state="translated">MBeanServer의 새로운 개인 구현</target>
        </trans-unit>
        <trans-unit id="c1bba2ce8a1736ca41dee666c238188a8f3968a5" translate="yes" xml:space="preserve">
          <source>A new readable byte channel</source>
          <target state="translated">읽을 수있는 새로운 바이트 채널</target>
        </trans-unit>
        <trans-unit id="227964ba0cdb00d556590c57b5b512186bc50f84" translate="yes" xml:space="preserve">
          <source>A new reader</source>
          <target state="translated">새로운 독자</target>
        </trans-unit>
        <trans-unit id="a987f16a3add20d096c2dc2279a462557da4b375" translate="yes" xml:space="preserve">
          <source>A new selector</source>
          <target state="translated">새로운 선택기</target>
        </trans-unit>
        <trans-unit id="f414cd40bc587b5cb076112120f1a32f7542e237" translate="yes" xml:space="preserve">
          <source>A new sequential &lt;code&gt;IntStream&lt;/code&gt;</source>
          <target state="translated">새로운 순차 &lt;code&gt;IntStream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6938f1e9b7120bf66ba9f32b912fe7a3bb90330" translate="yes" xml:space="preserve">
          <source>A new service is available from the nesting BeanContext.</source>
          <target state="translated">중첩 BeanContext에서 새 서비스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f53d0dbb2fa07c0c02c96d61beb2e8a31523487e" translate="yes" xml:space="preserve">
          <source>A new service is available from the nesting BeanContext. Subclasses may override this method in order to implement their own behaviors</source>
          <target state="translated">중첩 BeanContext에서 새 서비스를 사용할 수 있습니다. 자체 클래스를 구현하기 위해 서브 클래스가이 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc5510b8ee23c196414d7a41911a0b2d8c8655c7" translate="yes" xml:space="preserve">
          <source>A new service loader</source>
          <target state="translated">새로운 서비스 로더</target>
        </trans-unit>
        <trans-unit id="7a598ad4eff5223742f9071b01244341dbae324b" translate="yes" xml:space="preserve">
          <source>A new short buffer</source>
          <target state="translated">새로운 짧은 버퍼</target>
        </trans-unit>
        <trans-unit id="92e48cdd5d234dfa3d6e9af022c9d12a72a40f16" translate="yes" xml:space="preserve">
          <source>A new socket channel</source>
          <target state="translated">새로운 소켓 채널</target>
        </trans-unit>
        <trans-unit id="c2bfe947053d6f456f491bb701491ac9de2d9d69" translate="yes" xml:space="preserve">
          <source>A new table header element (&lt;code&gt;THEAD&lt;/code&gt; ).</source>
          <target state="translated">새로운 테이블 헤더 요소 ( &lt;code&gt;THEAD&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ad8acabd40cadf9e1fc83439d4cacc467728413a" translate="yes" xml:space="preserve">
          <source>A new volatile variable &lt;code&gt;V&lt;/code&gt; is created, and written by the current thread. As defined by the JMM, this write is a global synchronization event.</source>
          <target state="translated">새로운 휘발성 변수 &lt;code&gt;V&lt;/code&gt; 가 작성되어 현재 스레드에 의해 작성됩니다. JMM에서 정의한대로이 쓰기는 글로벌 동기화 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="fae76c304ef49fc476ffd8e6ab0bb7e6f610c034" translate="yes" xml:space="preserve">
          <source>A new writable byte channel</source>
          <target state="translated">새로운 쓰기 가능한 바이트 채널</target>
        </trans-unit>
        <trans-unit id="f9a4767fbb8f8aed5b2928cb74b7c92f9ba2c665" translate="yes" xml:space="preserve">
          <source>A new writer</source>
          <target state="translated">새로운 작가</target>
        </trans-unit>
        <trans-unit id="96a14b87d6769803187b54bde0e78433cf67339d" translate="yes" xml:space="preserve">
          <source>A new, and connected, socket channel</source>
          <target state="translated">새로운 연결 소켓 채널</target>
        </trans-unit>
        <trans-unit id="2595cfcee208226807eae38461417b358c37d2c5" translate="yes" xml:space="preserve">
          <source>A newLine() method is provided, which uses the platform's own notion of line separator as defined by the system property &lt;code&gt;line.separator&lt;/code&gt;. Not all platforms use the newline character ('\n') to terminate lines. Calling this method to terminate each output line is therefore preferred to writing a newline character directly.</source>
          <target state="translated">시스템 특성 &lt;code&gt;line.separator&lt;/code&gt; 에 의해 정의 된대로 플랫폼 자체의 선 구분 기호 개념을 사용하는 newLine () 메소드가 제공됩니다 . 모든 플랫폼이 개행 문자 ( '\ n')를 사용하여 행을 종료하는 것은 아닙니다. 따라서이 메소드를 호출하여 각 출력 행을 종료하는 것이 개행 문자를 직접 작성하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d618578a9393e1dd96591434db2110ed0c362143" translate="yes" xml:space="preserve">
          <source>A newline (line feed) character (&lt;code&gt;'\n'&lt;/code&gt;),</source>
          <target state="translated">줄 바꿈 (줄 바꿈) 문자 ( &lt;code&gt;'\n'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8b5f06c0531c3ba4c791f46b68dc5d8317f9ec88" translate="yes" xml:space="preserve">
          <source>A newline character (the character '\n' in Java) is replaced by a backslash followed by the character '\n'.</source>
          <target state="translated">줄 바꿈 문자 (Java에서 문자 '\ n')는 백 슬래시와 문자 '\ n'으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="ad7e79fbc80b15ff80930a2bd90a4d857f0a8809" translate="yes" xml:space="preserve">
          <source>A newly allocated Packer engine.</source>
          <target state="translated">새로 할당 된 Packer 엔진.</target>
        </trans-unit>
        <trans-unit id="ae89a8172fee4e06f55daa88ca36ec1e21275ab3" translate="yes" xml:space="preserve">
          <source>A newly allocated Unpacker engine.</source>
          <target state="translated">새로 할당 된 Unpacker 엔진.</target>
        </trans-unit>
        <trans-unit id="cbbf204fae9ef1bb37d44b20447a2eddb6f441bb" translate="yes" xml:space="preserve">
          <source>A newly created PRNG &lt;code&gt;SecureRandom&lt;/code&gt; object is not seeded (except if it is created by &lt;a href=&quot;#%3Cinit%3E(byte%5B%5D)&quot;&gt;&lt;code&gt;SecureRandom(byte[])&lt;/code&gt;&lt;/a&gt;). The first call to &lt;code&gt;nextBytes&lt;/code&gt; will force it to seed itself from an implementation- specific entropy source. This self-seeding will not occur if &lt;code&gt;setSeed&lt;/code&gt; was previously called.</source>
          <target state="translated">새로 생성 된 PRNG &lt;code&gt;SecureRandom&lt;/code&gt; 개체는 시드되지 않습니다 ( &lt;a href=&quot;#%3Cinit%3E(byte%5B%5D)&quot;&gt; &lt;code&gt;SecureRandom(byte[])&lt;/code&gt; &lt;/a&gt; 의해 생성 된 경우 제외 ). &lt;code&gt;nextBytes&lt;/code&gt; 에 대한 첫 번째 호출 은 구현 특정 엔트로피 소스에서 자체적으로 시드하도록 강제합니다. 이 자체 시딩은 &lt;code&gt;setSeed&lt;/code&gt; 가 이전에 호출 된 경우 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8b80c97bcfe5a4a65eb9c92b0531e7e15f76ad83" translate="yes" xml:space="preserve">
          <source>A newly created recording is in the &lt;a href=&quot;recordingstate#NEW&quot;&gt;&lt;code&gt;RecordingState.NEW&lt;/code&gt;&lt;/a&gt; state. To start the recording, invoke the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">새로 생성 된 녹음은 &lt;a href=&quot;recordingstate#NEW&quot;&gt; &lt;code&gt;RecordingState.NEW&lt;/code&gt; &lt;/a&gt; 상태입니다. 기록을 시작하려면 start &lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="f749a2698aa7b3fe7595ce4fe494aefb6961a78f" translate="yes" xml:space="preserve">
          <source>A newly-allocated byte array containing the decoded bytes.</source>
          <target state="translated">디코딩 된 바이트를 포함하는 새로 할당 된 바이트 배열입니다.</target>
        </trans-unit>
        <trans-unit id="4500d02e284d7deca5c46a49dd59c877a9687edf" translate="yes" xml:space="preserve">
          <source>A newly-allocated byte array containing the resulting encoded bytes.</source>
          <target state="translated">결과 인코딩 된 바이트를 포함하는 새로 할당 된 바이트 배열입니다.</target>
        </trans-unit>
        <trans-unit id="ad405c747b824e9ef58d7c88b72e9eb7cc3efb65" translate="yes" xml:space="preserve">
          <source>A newly-allocated byte buffer containing the decoded bytes</source>
          <target state="translated">디코딩 된 바이트를 포함하는 새로 할당 된 바이트 버퍼</target>
        </trans-unit>
        <trans-unit id="91f70710f376acb4f8c9553c4de7e523904b6303" translate="yes" xml:space="preserve">
          <source>A newly-allocated byte buffer containing the encoded bytes.</source>
          <target state="translated">인코딩 된 바이트를 포함하는 새로 할당 된 바이트 버퍼.</target>
        </trans-unit>
        <trans-unit id="8c318ea698e58c2b2e4ebdafd737b67d00e3f939" translate="yes" xml:space="preserve">
          <source>A newly-allocated byte buffer containing the result of the encoding operation. The buffer's position will be zero and its limit will follow the last byte written.</source>
          <target state="translated">인코딩 작업의 결과를 포함하는 새로 할당 된 바이트 버퍼입니다. 버퍼의 위치는 0이되고 한계는 마지막으로 쓴 바이트를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="e1af1e5437c51808c4a8a1190c196a71f76d20e4" translate="yes" xml:space="preserve">
          <source>A newly-allocated character buffer containing the result of the decoding operation. The buffer's position will be zero and its limit will follow the last character written.</source>
          <target state="translated">디코딩 작업의 결과를 포함하는 새로 할당 된 문자 버퍼. 버퍼의 위치는 0이되고 한계는 마지막으로 쓴 문자를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="14848075c6a2bf1c1cd5881b071a496387811f42" translate="yes" xml:space="preserve">
          <source>A newly-created buffer always has a position of zero and a mark that is undefined. The initial limit may be zero, or it may be some other value that depends upon the type of the buffer and the manner in which it is constructed. Each element of a newly-allocated buffer is initialized to zero.</source>
          <target state="translated">새로 작성된 버퍼는 항상 0의 위치와 정의되지 않은 표시를 갖습니다. 초기 한계는 0 일 수 있거나, 버퍼의 유형 및 그것이 구성되는 방식에 의존하는 다른 값일 수있다. 새로 할당 된 버퍼의 각 요소는 0으로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="aed6f82b71caffa13cc936a03a53581159ec9c9c" translate="yes" xml:space="preserve">
          <source>A newly-created channel is connected by invoking its &lt;a href=&quot;#connect(java.net.SocketAddress,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method; once connected, a channel remains connected until it is closed. Whether or not a socket channel is connected may be determined by invoking its &lt;a href=&quot;#getRemoteAddress()&quot;&gt;&lt;code&gt;getRemoteAddress&lt;/code&gt;&lt;/a&gt; method. An attempt to invoke an I/O operation upon an unconnected channel will cause a &lt;a href=&quot;notyetconnectedexception&quot;&gt;&lt;code&gt;NotYetConnectedException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">새로 생성 된 채널은 &lt;a href=&quot;#connect(java.net.SocketAddress,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하여 연결 됩니다. 일단 연결되면 채널은 닫힐 때까지 연결된 상태로 유지됩니다. 소켓 채널이 연결되었는지 여부는 &lt;a href=&quot;#getRemoteAddress()&quot;&gt; &lt;code&gt;getRemoteAddress&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 판별 할 수 있습니다 . 연결되지 않은 채널에서 I / O 작업을 호출하려고하면 &lt;a href=&quot;notyetconnectedexception&quot;&gt; &lt;code&gt;NotYetConnectedException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="12e02aa878755e8bc2b352a4b4027c3700104164" translate="yes" xml:space="preserve">
          <source>A newly-created channel is connected by invoking its &lt;a href=&quot;asynchronoussocketchannel#connect-java.net.SocketAddress-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method; once connected, a channel remains connected until it is closed. Whether or not a socket channel is connected may be determined by invoking its &lt;a href=&quot;asynchronoussocketchannel#getRemoteAddress--&quot;&gt;&lt;code&gt;getRemoteAddress&lt;/code&gt;&lt;/a&gt; method. An attempt to invoke an I/O operation upon an unconnected channel will cause a &lt;a href=&quot;notyetconnectedexception&quot;&gt;&lt;code&gt;NotYetConnectedException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">새로 작성된 채널은 &lt;a href=&quot;asynchronoussocketchannel#connect-java.net.SocketAddress-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 방법 을 호출하여 연결 됩니다. 연결되면 채널은 닫힐 때까지 연결된 상태로 유지됩니다. 소켓 채널의 연결 여부는 &lt;a href=&quot;asynchronoussocketchannel#getRemoteAddress--&quot;&gt; &lt;code&gt;getRemoteAddress&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 판별 할 수 있습니다 . 연결되지 않은 채널에서 I / O 작업을 호출하려고하면 &lt;a href=&quot;notyetconnectedexception&quot;&gt; &lt;code&gt;NotYetConnectedException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="da1a847e03b38daa625c581b5c50ecbf191ba107" translate="yes" xml:space="preserve">
          <source>A newly-created connector server is &lt;em&gt;inactive&lt;/em&gt;, and does not yet listen for connections. Only when its &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method has been called does it start listening for connections.</source>
          <target state="translated">새로 생성 된 커넥터 서버는 &lt;em&gt;비활성 상태&lt;/em&gt; 이며 아직 연결을 수신하지 않습니다. &lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; 메서드가 호출 된 경우에만 연결 수신을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="3937dfeb6f50d8b3801a4e97455d079ce3003278" translate="yes" xml:space="preserve">
          <source>A newly-created connector server is &lt;em&gt;inactive&lt;/em&gt;, and does not yet listen for connections. Only when its &lt;a href=&quot;jmxconnectorservermbean#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method has been called does it start listening for connections.</source>
          <target state="translated">새로 작성된 커넥터 서버가 &lt;em&gt;비활성 상태&lt;/em&gt; 이며 아직 연결을 청취하지 않습니다. &lt;a href=&quot;jmxconnectorservermbean#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; 메소드가 호출 된 경우에만 연결 청취를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="bf5b745265e7a08cb2b6dd796bea5742ede1db26" translate="yes" xml:space="preserve">
          <source>A newly-created object of this type is unconnected. Its &lt;a href=&quot;#connect()&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method must be called before it can be used. However, objects created by &lt;a href=&quot;jmxconnectorfactory#connect(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt;&lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt;&lt;/a&gt; are already connected.</source>
          <target state="translated">이 유형의 새로 생성 된 개체는 연결되지 않습니다. 그것의 &lt;a href=&quot;#connect()&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 사용하기 전에 메서드를 호출 할 필요가 있습니다. 그러나 &lt;a href=&quot;jmxconnectorfactory#connect(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt; &lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt; &lt;/a&gt; 에 의해 생성 된 객체 는 이미 연결되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="9320a55b7ef50489ba9462b8018314f21d3b82a1" translate="yes" xml:space="preserve">
          <source>A newly-created object of this type is unconnected. Its &lt;a href=&quot;jmxconnector#connect--&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method must be called before it can be used. However, objects created by &lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt;&lt;/a&gt; are already connected.</source>
          <target state="translated">이 유형의 새로 작성된 오브젝트는 연결되어 있지 않습니다. 그것의 &lt;a href=&quot;jmxconnector#connect--&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 사용하기 전에 메서드를 호출 할 필요가 있습니다. 그러나 &lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt; &lt;/a&gt; 에 의해 작성된 오브젝트 는 이미 연결되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d920ab1e496d0ab22784661132c5d8cba8bb07a7" translate="yes" xml:space="preserve">
          <source>A next-line character (&lt;code&gt;'\u0085'&lt;/code&gt;),</source>
          <target state="translated">다음 줄 문자 ( &lt;code&gt;'\u0085'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3ad327a430dd79283b9f13832e1f8c1e8b07e851" translate="yes" xml:space="preserve">
          <source>A nexus for I/O operations</source>
          <target state="translated">I / O 작업을위한 넥서스</target>
        </trans-unit>
        <trans-unit id="30b96666137ff956b13f29c122ff2067f45da9e4" translate="yes" xml:space="preserve">
          <source>A nexus for I/O operations.</source>
          <target state="translated">I / O 작업을위한 연결.</target>
        </trans-unit>
        <trans-unit id="32d94d48baeb48749abc6e461ec1568849d96888" translate="yes" xml:space="preserve">
          <source>A node</source>
          <target state="translated">노드</target>
        </trans-unit>
        <trans-unit id="6d1ab6e4231c9fd824e59dacc81a7b8495e33cd8" translate="yes" xml:space="preserve">
          <source>A node in a hierarchical collection of preference data.</source>
          <target state="translated">기본 설정 데이터의 계층 적 콜렉션에있는 노드입니다.</target>
        </trans-unit>
        <trans-unit id="0d390cb60da6e421d230a106d5ce284bbd479bfd" translate="yes" xml:space="preserve">
          <source>A node in a hierarchical collection of preference data. This class allows applications to store and retrieve user and system preference and configuration data. This data is stored persistently in an implementation-dependent backing store. Typical implementations include flat files, OS-specific registries, directory servers and SQL databases. The user of this class needn't be concerned with details of the backing store.</source>
          <target state="translated">기본 설정 데이터의 계층 적 콜렉션에있는 노드입니다. 이 클래스를 통해 응용 프로그램은 사용자 및 시스템 환경 설정 및 구성 데이터를 저장하고 검색 할 수 있습니다. 이 데이터는 구현 종속 백업 저장소에 지속적으로 저장됩니다. 일반적인 구현에는 플랫 파일, OS 특정 레지스트리, 디렉토리 서버 및 SQL 데이터베이스가 포함됩니다. 이 클래스의 사용자는 백업 저장소의 세부 사항에 대해 걱정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="2ba931555b23ae0a3a5783daf9e71de13b0827ba" translate="yes" xml:space="preserve">
          <source>A non-&lt;code&gt;null&lt;/code&gt; valid &lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Duration&lt;/code&gt; 의 &lt;code&gt;null&lt;/code&gt; 이 아닌 유효한 &lt;code&gt;String&lt;/code&gt; 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="17f20ba92b650ae0774012f30e1f13c144cd223e" translate="yes" xml:space="preserve">
          <source>A non-&lt;code&gt;null&lt;/code&gt; valid &lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 의 &lt;code&gt;null&lt;/code&gt; 이 아닌 유효한 &lt;code&gt;String&lt;/code&gt; 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="30b479c5d53f929d5b3781486075a91492453c50" translate="yes" xml:space="preserve">
          <source>A non-ASCII character c for which &lt;a href=&quot;../lang/character#isDigit(char)&quot;&gt;&lt;code&gt;Character.isDigit&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(c)&lt;/code&gt; returns true</source>
          <target state="translated">&lt;a href=&quot;../lang/character#isDigit(char)&quot;&gt; &lt;code&gt;Character.isDigit&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(c)&lt;/code&gt; 가 true를 리턴 하는 비 ASCII 문자 c</target>
        </trans-unit>
        <trans-unit id="34276e6cf55ed986512c9b4e3783654205d06d95" translate="yes" xml:space="preserve">
          <source>A non-ASCII character c for which &lt;a href=&quot;../lang/character#isDigit-char-&quot;&gt;&lt;code&gt;Character.isDigit&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(c)&lt;/code&gt; returns true</source>
          <target state="translated">&lt;a href=&quot;../lang/character#isDigit-char-&quot;&gt; &lt;code&gt;Character.isDigit&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(c)&lt;/code&gt; 가 true를 리턴 하는 비 ASCII 문자 c</target>
        </trans-unit>
        <trans-unit id="2f60e868b739d55dc0d3cd5caebc70e7bfdd560f" translate="yes" xml:space="preserve">
          <source>A non-blocking connection operation is initiated by placing a socket channel in non-blocking mode and then invoking its &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method. Once the connection is established, or the attempt has failed, the socket channel will become connectable and this method may be invoked to complete the connection sequence. If the connection operation failed then invoking this method will cause an appropriate &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">비 차단 연결 작업은 소켓 채널을 비 차단 모드로 설정 한 다음 해당 &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하여 시작 됩니다 . 연결이 설정되거나 시도가 실패하면 소켓 채널을 연결할 수있게되고이 메서드를 호출하여 연결 시퀀스를 완료 할 수 있습니다. 연결 작업이 실패한 경우이 메서드를 호출하면 적절한 &lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="49951378a32d6d7aa2f164737d4577800b20cbd4" translate="yes" xml:space="preserve">
          <source>A non-blocking connection operation is initiated by placing a socket channel in non-blocking mode and then invoking its &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method. Once the connection is established, or the attempt has failed, the socket channel will become connectable and this method may be invoked to complete the connection sequence. If the connection operation failed then invoking this method will cause an appropriate &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">비 차단 연결 작업은 소켓 채널을 비 차단 모드로 설정 한 다음 &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 방법 을 호출하여 시작 됩니다 . 연결이 설정되거나 시도가 실패하면 소켓 채널이 연결 가능 해지고 연결 순서를 완료하기 위해이 메소드가 호출 될 수 있습니다. 연결 조작이 실패한 경우이 메소드를 호출하면 적절한 &lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="31243b280aaefbb0af907d96861648e7aaceb40c" translate="yes" xml:space="preserve">
          <source>A non-blocking connection operation is initiated by placing a socket channel in non-blocking mode and then invoking one of its &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; methods. Once the connection is established, or the attempt has failed, the channel will become connectable and this method may be invoked to complete the connection sequence. If the connection operation failed then invoking this method will cause an appropriate &lt;a href=&quot;../../../../../java.base/java/io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">비 차단 연결 작업은 소켓 채널을 비 차단 모드로 설정 한 다음 &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 메서드 중 하나를 호출하여 시작됩니다 . 연결이 설정되거나 시도가 실패하면 채널을 연결할 수있게되고이 메서드를 호출하여 연결 시퀀스를 완료 할 수 있습니다. 연결 작업이 실패한 경우이 메서드를 호출하면 적절한 &lt;a href=&quot;../../../../../java.base/java/io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="afbca2e0eedaf99a74c0ec68c4e06c16da62d429" translate="yes" xml:space="preserve">
          <source>A non-constant call site may be &lt;em&gt;relinked&lt;/em&gt; by changing its target. The new target must have the same &lt;a href=&quot;methodhandle#type()&quot;&gt;type&lt;/a&gt; as the previous target. Thus, though a call site can be relinked to a series of successive targets, it cannot change its type.</source>
          <target state="translated">상수가 아닌 호출 사이트는 대상을 변경하여 &lt;em&gt;다시 연결할&lt;/em&gt; 수 있습니다 . 새 대상은 이전 대상 과 동일한 &lt;a href=&quot;methodhandle#type()&quot;&gt;유형&lt;/a&gt; 이어야합니다 . 따라서 호출 사이트를 일련의 연속 대상에 다시 연결할 수 있지만 유형을 변경할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="bc767860690d8c24cb88c960e15a4973d9558857" translate="yes" xml:space="preserve">
          <source>A non-constant call site may be &lt;em&gt;relinked&lt;/em&gt; by changing its target. The new target must have the same &lt;a href=&quot;methodhandle#type--&quot;&gt;type&lt;/a&gt; as the previous target. Thus, though a call site can be relinked to a series of successive targets, it cannot change its type.</source>
          <target state="translated">일정하지 않은 통화 사이트는 대상을 변경하여 &lt;em&gt;다시 연결할&lt;/em&gt; 수 있습니다 . 새 대상은 이전 대상 과 동일한 &lt;a href=&quot;methodhandle#type--&quot;&gt;유형&lt;/a&gt; 이어야합니다 . 따라서 콜 사이트를 일련의 연속 대상으로 다시 연결할 수 있지만 유형을 변경할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="ac6825da8adbf85d254ecf0727fccd99ee289ca9" translate="yes" xml:space="preserve">
          <source>A non-digit: &lt;code&gt;[^0-9]&lt;/code&gt;</source>
          <target state="translated">숫자가 아닌 숫자 : &lt;code&gt;[^0-9]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41ae39581d83b8afbf8fbfd5ce8d03c1bf3a0325" translate="yes" xml:space="preserve">
          <source>A non-digit: &lt;code&gt;[^\d]&lt;/code&gt;</source>
          <target state="translated">숫자가 아닌 숫자 : &lt;code&gt;[^\d]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb2d73400cb4d52c72018a1f210b1e270d329614" translate="yes" xml:space="preserve">
          <source>A non-empty and unmodifiable list of the fully qualified class names of the providers or provider factories</source>
          <target state="translated">공급자 또는 공급자 팩토리의 정규화 된 클래스 이름의 비어 있지 않고 수정할 수없는 목록</target>
        </trans-unit>
        <trans-unit id="eabbd7a5ea7b535624280794aea261db5d7739a3" translate="yes" xml:space="preserve">
          <source>A non-escaped begin-quote which precedes a component must be matched by a non-escaped end-quote at the end of the component. A component thus quoted is referred to as a &lt;em&gt;quoted component&lt;/em&gt;. It is parsed by removing the being- and end- quotes, and by treating the intervening characters as ordinary characters unless one of the rules involving quoted components listed below applies.</source>
          <target state="translated">구성 요소 앞에 나오는 이스케이프되지 않은 시작 인용 부호는 구성 요소 끝에있는 이스케이프 처리되지 않은 끝 인용 부호와 일치해야합니다. 따라서, 인용 된 구성 요소는라고 &lt;em&gt;인용 성분&lt;/em&gt; . 아래 인용 된 구성 요소와 관련된 규칙 중 하나가 적용되지 않는 한, 존재하는 인용 부호와 종료 인용 부호를 제거하고 중간 문자를 일반 문자로 취급하여 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="8576c5a3fc4ecf47e4a0d11fd6e03315dba7c325" translate="yes" xml:space="preserve">
          <source>A non-horizontal whitespace character: &lt;code&gt;[^\h]&lt;/code&gt;</source>
          <target state="translated">수평이 아닌 공백 문자 : &lt;code&gt;[^\h]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d58c0f6e6b46f4925dee1a29c717b5cd776d604" translate="yes" xml:space="preserve">
          <source>A non-null &lt;code&gt;DirContext&lt;/code&gt; object for continuing the operation.</source>
          <target state="translated">작업을 계속하기위한 null 이외의 &lt;code&gt;DirContext&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="29be16e17e34f62bfdebf51ad0e122d23c628721" translate="yes" xml:space="preserve">
          <source>A non-null &lt;code&gt;LdapContext&lt;/code&gt; instance.</source>
          <target state="translated">널이 아닌 &lt;code&gt;LdapContext&lt;/code&gt; 인스턴스.</target>
        </trans-unit>
        <trans-unit id="a64ff7fe321a188f5c04bb6cdea604c663889254" translate="yes" xml:space="preserve">
          <source>A non-null Context object for continuing the operation.</source>
          <target state="translated">조작을 계속하기위한 null 이외의 Context 객체</target>
        </trans-unit>
        <trans-unit id="c1b55005a4d78a4f993dfd1b675db095e662505c" translate="yes" xml:space="preserve">
          <source>A non-null DirStateFactory.Result containing the object and attributes to be bound. If no state factory returns a non-null answer, the result will contain the object (&lt;code&gt;obj&lt;/code&gt;) itself with the original attributes.</source>
          <target state="translated">바인딩 할 개체와 특성을 포함하는 null이 아닌 DirStateFactory.Result. 상태 팩토리가 널이 아닌 응답을 리턴하지 않으면 결과는 원래 속성을 가진 오브젝트 ( &lt;code&gt;obj&lt;/code&gt; ) 자체를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="f705e9073287cf92793fe2b86b035e32a5be310b" translate="yes" xml:space="preserve">
          <source>A non-null array containing a IANA-registered SASL mechanism names.</source>
          <target state="translated">IANA 등록 SASL 메커니즘 이름을 포함하는 null이 아닌 배열입니다.</target>
        </trans-unit>
        <trans-unit id="a10e64472867840475c1ab4209b86ea2f64b0ad1" translate="yes" xml:space="preserve">
          <source>A non-null byte array containing the decoded bytes.</source>
          <target state="translated">디코딩 된 바이트를 포함하는 널이 아닌 바이트 배열.</target>
        </trans-unit>
        <trans-unit id="256fd2e37df2c810fe693bf60b371e4fae6dc77b" translate="yes" xml:space="preserve">
          <source>A non-null byte array containing the encoded bytes.</source>
          <target state="translated">인코딩 된 바이트를 포함하는 널이 아닌 바이트 배열.</target>
        </trans-unit>
        <trans-unit id="f52a76285fcf3e42442c6aa14b1b84b86a9555fd" translate="yes" xml:space="preserve">
          <source>A non-null copy of the attribute.</source>
          <target state="translated">속성의 null 이외의 카피</target>
        </trans-unit>
        <trans-unit id="c350742e8171824a76f2140a837bb27a02d36bfd" translate="yes" xml:space="preserve">
          <source>A non-null copy of this attribute set.</source>
          <target state="translated">이 속성 세트의 null 이외의 카피</target>
        </trans-unit>
        <trans-unit id="2834f16d4197dd5885969de3f6e1c06d9fe27c3e" translate="yes" xml:space="preserve">
          <source>A non-null copy of this composite name.</source>
          <target state="translated">이 컴퍼 짓 이름의 null 이외의 카피</target>
        </trans-unit>
        <trans-unit id="a28c689ba0a9cd3cad130669a4a31f8d6e1c8750" translate="yes" xml:space="preserve">
          <source>A non-null copy of this compound name.</source>
          <target state="translated">이 복합 명의 null 이외의 카피</target>
        </trans-unit>
        <trans-unit id="680d7ced3578bebfbe3b008f6d9acabd436bed7a" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of known factories for producing &lt;code&gt;SaslClient&lt;/code&gt;.</source>
          <target state="translated">하기위한 기존 공장의 null 이외의 열거 &lt;code&gt;SaslClient&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0931c1e3c651dc8eb96435df64758f9fd1218389" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of known factories for producing &lt;code&gt;SaslServer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SaslServer&lt;/code&gt; 생성을위한 알려진 팩토리의 널이 아닌 열거 .</target>
        </trans-unit>
        <trans-unit id="0d1e9cc0831144a125442fbc119f960b9a802adc" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the attribute's values. Each element of the enumeration is a possibly null Object. The object's class is the class of the attribute value. The element is null if the attribute's value is null. If the attribute has zero values, an empty enumeration is returned.</source>
          <target state="translated">속성 값의 null 이외의 열거 열거의 각 요소는 가능한 null 객체입니다. 객체의 클래스는 속성 값의 클래스입니다. 속성 값이 null 인 경우 요소는 null입니다. 속성 값이 0이면 빈 열거 형이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7363de214e3d6c461c5bb6736dc9ee64e081aa40" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the attributes in this attribute set. Each element of the enumeration is of class &lt;code&gt;Attribute&lt;/code&gt;. If attribute set has zero attributes, an empty enumeration is returned.</source>
          <target state="translated">이 속성 세트의 속성의 null 이외의 열거 열거의 각 요소는 &lt;code&gt;Attribute&lt;/code&gt; 클래스 입니다. 속성 집합에 속성이 0이면 빈 열거 형이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="afe8669ca17e96be8a453b66dfc469a28ebe6a0d" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the attributes' ids in this attribute set. Each element of the enumeration is of class String. If attribute set has zero attributes, an empty enumeration is returned.</source>
          <target state="translated">이 속성 세트에있는 속성의 ID가 null 이외의 열거입니다. 열거의 각 요소는 String 클래스입니다. 속성 집합에 속성이 0이면 빈 열거 형이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5f1cbc6763def1c45342a437b1a688c40133ab7a" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the components of this LDAP name. Each element of the enumeration is of class String.</source>
          <target state="translated">이 LDAP 명의 컴퍼넌트의 null 이외의 열거 열거의 각 요소는 String 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="ebf81c0a1c1c74ed4f4d400b71c358f46266c099" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the components of this composite name. Each element of the enumeration is of class String.</source>
          <target state="translated">이 컴퍼 짓 이름의 컴퍼넌트의 null 이외의 열거 열거의 각 요소는 String 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="2340ea0fb4f1270c0668eb4bfc3dc9c9cf277715" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the components of this compound name. Each element of the enumeration is of class String.</source>
          <target state="translated">이 컴퍼 짓 이름의 컴퍼넌트의 null 이외의 열거 열거의 각 요소는 String 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="8bfa2f9be14187c9f14ce39d8d833d7f1175f5dc" translate="yes" xml:space="preserve">
          <source>A non-null initial context factory.</source>
          <target state="translated">널이 아닌 초기 컨텍스트 팩토리.</target>
        </trans-unit>
        <trans-unit id="1e608221c5c5ea8c18e363465c0a5d025612f0d6" translate="yes" xml:space="preserve">
          <source>A non-null initial context object that implements the Context interface.</source>
          <target state="translated">컨텍스트 인터페이스를 구현하는 널이 아닌 초기 컨텍스트 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="37954dbe9bab921b1deb6369decc49588a641fb7" translate="yes" xml:space="preserve">
          <source>A non-null initial context.</source>
          <target state="translated">널이 아닌 초기 컨텍스트.</target>
        </trans-unit>
        <trans-unit id="4730b465f4124443538b5e1770c8811274893fee" translate="yes" xml:space="preserve">
          <source>A non-null new instance of an ObjectFactory.</source>
          <target state="translated">null 이외의 ObjectFactory의 새로운 인스턴스</target>
        </trans-unit>
        <trans-unit id="c59410b08adf864ea948e598b03f608227631233" translate="yes" xml:space="preserve">
          <source>A non-null object.</source>
          <target state="translated">null 이외의 객체</target>
        </trans-unit>
        <trans-unit id="1f31f2d546f056d9729de73a8c0cafbb3add9b69" translate="yes" xml:space="preserve">
          <source>A non-null parsed form of the name using the naming convention of this parser.</source>
          <target state="translated">이 구문 분석기의 이름 지정 규칙을 사용하여 널이 아닌 구문 분석 형식의 이름.</target>
        </trans-unit>
        <trans-unit id="365024c158fc56fbd24149913e4847bff4e1c7ff" translate="yes" xml:space="preserve">
          <source>A non-null reference to a TransformerHandler, that may be used as a ContentHandler for SAX parse events.</source>
          <target state="translated">SAX 구문 분석 이벤트에 대한 ContentHandler로 사용할 수있는 TransformerHandler에 대한 널이 아닌 참조입니다.</target>
        </trans-unit>
        <trans-unit id="a5e68f3dd8aaf605a6de850303de002c47d88269" translate="yes" xml:space="preserve">
          <source>A non-null string listing the contents of this attribute set.</source>
          <target state="translated">이 속성 세트의 내용을 나타내는 null 이외의 캐릭터 라인</target>
        </trans-unit>
        <trans-unit id="caf496ddea9cd135d401dcca1f2054b18dc2ecf2" translate="yes" xml:space="preserve">
          <source>A non-null string representation of this composite name.</source>
          <target state="translated">이 컴퍼 짓 이름의 null 이외의 캐릭터 라인 표현</target>
        </trans-unit>
        <trans-unit id="15ce034bc6811eedfe9b677a32692e3f0462b11c" translate="yes" xml:space="preserve">
          <source>A non-null string representation of this compound name.</source>
          <target state="translated">이 복합 명의 null 이외의 캐릭터 라인 표현</target>
        </trans-unit>
        <trans-unit id="08d28ae2c79b56daa709959f3d79d9d06c131b29" translate="yes" xml:space="preserve">
          <source>A non-null string representing the IANA-registered mechanism name.</source>
          <target state="translated">IANA 등록 메커니즘 이름을 나타내는 null이 아닌 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="78220fa45f4e95f9c02602526ce9d9ddf420ba59" translate="yes" xml:space="preserve">
          <source>A non-static method consumes an extra argument for the object on which the method is called.</source>
          <target state="translated">비 정적 메소드는 메소드가 호출 된 오브젝트에 대해 추가 인수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="fcf1b695e4b7e1236a6443caec6fe36bb0b9f17e" translate="yes" xml:space="preserve">
          <source>A non-vertical whitespace character: &lt;code&gt;[^\v]&lt;/code&gt;</source>
          <target state="translated">수직이 아닌 공백 문자 : &lt;code&gt;[^\v]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7d3d3ab514a35cbfee9f849f4b37cf780906329" translate="yes" xml:space="preserve">
          <source>A non-virtual method handle to a specific virtual method implementation can also be created. These do not perform virtual lookup based on receiver type. Such a method handle simulates the effect of an &lt;code&gt;invokespecial&lt;/code&gt; instruction to the same method.</source>
          <target state="translated">특정 가상 메소드 구현에 대한 비가 상 메소드 핸들도 작성할 수 있습니다. 수신자 유형에 따라 가상 검색을 수행하지 않습니다. 이러한 메소드 핸들은 &lt;code&gt;invokespecial&lt;/code&gt; 명령이 동일한 메소드에 미치는 영향을 시뮬레이션합니다 .</target>
        </trans-unit>
        <trans-unit id="885d1aed7578ee9fc33b80a7c8cbd5afdaa172b8" translate="yes" xml:space="preserve">
          <source>A non-virtual method handle to a specific virtual method implementation can also be created. These do not perform virtual lookup based on receiver type. Such a method handle simulates the effect of an &lt;code&gt;invokespecial&lt;/code&gt; instruction to the same method. A non-virtual method handle can also be created to simulate the effect of an &lt;code&gt;invokevirtual&lt;/code&gt; or &lt;code&gt;invokeinterface&lt;/code&gt; instruction on a private method (as applicable).</source>
          <target state="translated">특정 가상 메서드 구현에 대한 비가 상 메서드 핸들도 만들 수 있습니다. 수신자 유형에 따라 가상 조회를 수행하지 않습니다. 이러한 메서드 핸들 은 동일한 메서드 에 대한 &lt;code&gt;invokespecial&lt;/code&gt; 명령어 의 효과를 시뮬레이션합니다 . 비가 상 메서드 핸들을 만들어 개인 메서드에 대한 &lt;code&gt;invokevirtual&lt;/code&gt; 또는 &lt;code&gt;invokeinterface&lt;/code&gt; 명령 의 효과를 시뮬레이션 할 수도 있습니다 (해당되는 경우).</target>
        </trans-unit>
        <trans-unit id="490d23f83a66805dcb270127052997bab3cbcef3" translate="yes" xml:space="preserve">
          <source>A non-whitespace character: &lt;code&gt;[^\s]&lt;/code&gt;</source>
          <target state="translated">공백이 아닌 문자 : &lt;code&gt;[^\s]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71faa00612f3246b69dff10b33a7b4956ad1ded0" translate="yes" xml:space="preserve">
          <source>A non-word boundary</source>
          <target state="translated">단어가 아닌 경계</target>
        </trans-unit>
        <trans-unit id="5a3963613c4e2b85a2160538fa0a3ebf78d4cb53" translate="yes" xml:space="preserve">
          <source>A non-word character: &lt;code&gt;[^\w]&lt;/code&gt;</source>
          <target state="translated">단어가 아닌 문자 : &lt;code&gt;[^\w]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="874565c5d6a9c9f23443edff0392ef0747a48ce4" translate="yes" xml:space="preserve">
          <source>A non-zero winding rule for determining the interior of a path.</source>
          <target state="translated">경로의 내부를 결정하기위한 0이 아닌 굴곡 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="27473e4260d3933f83b4103875121ed003b122d3" translate="yes" xml:space="preserve">
          <source>A nonzero value gives a time as the number of milliseconds since January 1, 1970, GMT. The object is fetched only if it has been modified more recently than that time.</source>
          <target state="translated">0이 아닌 값은 1970 년 1 월 1 일 GMT 이후의 시간을 밀리 초 단위로 제공합니다. 해당 시간보다 최근에 수정 된 경우에만 객체를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="bd0bbc8c17597d3479d33d00df124b35420e9bee" translate="yes" xml:space="preserve">
          <source>A normalized path will begin with one or more &lt;code&gt;&quot;..&quot;&lt;/code&gt; segments if there were insufficient non-&lt;code&gt;&quot;..&quot;&lt;/code&gt; segments preceding them to allow their removal. A normalized path will begin with a &lt;code&gt;&quot;.&quot;&lt;/code&gt; segment if one was inserted by step 3 above. Otherwise, a normalized path will not contain any &lt;code&gt;&quot;.&quot;&lt;/code&gt; or &lt;code&gt;&quot;..&quot;&lt;/code&gt; segments.</source>
          <target state="translated">비정규 화 된 &lt;code&gt;&quot;..&quot;&lt;/code&gt; 세그먼트 앞에 제거 할 수없는 세그먼트 가 충분하지 않은 경우 정규화 된 경로는 하나 이상의 &lt;code&gt;&quot;..&quot;&lt;/code&gt; 세그먼트로 시작합니다 . 정규화 된 경로는 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 로 시작합니다 . 위의 3 단계에서 삽입 한 경우 세그먼트. 그렇지 않으면 정규화 된 경로에 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 가 포함되지 않습니다 . 또는 &lt;code&gt;&quot;..&quot;&lt;/code&gt; 세그먼트.</target>
        </trans-unit>
        <trans-unit id="43ea19dae1574fbcbb421f7bdfe875197a55c7d2" translate="yes" xml:space="preserve">
          <source>A notification can be included in the result if its sequence number is no less than &lt;code&gt;clientSequenceNumber&lt;/code&gt; and this client has registered at least one listener for the MBean generating the notification, with a filter that accepts the notification. Each listener that is interested in the notification is identified by an Integer ID that was returned by &lt;a href=&quot;#addNotificationListeners(javax.management.ObjectName%5B%5D,java.rmi.MarshalledObject%5B%5D,javax.security.auth.Subject%5B%5D)&quot;&gt;&lt;code&gt;addNotificationListeners(ObjectName[],
 MarshalledObject[], Subject[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">시퀀스 번호가 &lt;code&gt;clientSequenceNumber&lt;/code&gt; 이상 이고이 클라이언트가 알림을 허용하는 필터와 함께 알림을 생성하는 MBean에 대해 적어도 하나의 리스너를 등록한 경우 알림이 결과에 포함될 수 있습니다 . 알림에 관심이있는 각 리스너는 &lt;a href=&quot;#addNotificationListeners(javax.management.ObjectName%5B%5D,java.rmi.MarshalledObject%5B%5D,javax.security.auth.Subject%5B%5D)&quot;&gt; &lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt; 의해 반환 된 정수 ID로 식별됩니다 .</target>
        </trans-unit>
        <trans-unit id="c3a10557374749dd3612c700569d8d4fbfff6337" translate="yes" xml:space="preserve">
          <source>A notification can be included in the result if its sequence number is no less than &lt;code&gt;clientSequenceNumber&lt;/code&gt; and this client has registered at least one listener for the MBean generating the notification, with a filter that accepts the notification. Each listener that is interested in the notification is identified by an Integer ID that was returned by &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[],
 MarshalledObject[], Subject[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순서 번호가 &lt;code&gt;clientSequenceNumber&lt;/code&gt; 이상 이고이 클라이언트가 통지를 승인하는 필터와 함께 통지를 생성하는 MBean에 대해 하나 이상의 리스너를 등록한 경우 통지를 결과에 포함 할 수 있습니다 . 알림에 관심이있는 각 리스너는 &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt; 의해 리턴 된 정수 ID로 식별됩니다 .</target>
        </trans-unit>
        <trans-unit id="6f81cc48a1476843cb589c0a6edfffa3c877abc8" translate="yes" xml:space="preserve">
          <source>A notification can be included in the result if its sequence number is no less than &lt;code&gt;clientSequenceNumber&lt;/code&gt; and this client has registered at least one listener for the MBean generating the notification, with a filter that accepts the notification. Each listener that is interested in the notification is identified by an Integer ID that was returned by &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;addNotificationListeners(ObjectName[],
 MarshalledObject[], Subject[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순서 번호가 &lt;code&gt;clientSequenceNumber&lt;/code&gt; 이상 이고이 클라이언트가 통지를 승인하는 필터와 함께 통지를 생성하는 MBean에 대해 하나 이상의 리스너를 등록한 경우 통지를 결과에 포함 할 수 있습니다 . 통지에 관심이있는 각 리스너는 &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt; 의해 리턴 된 정수 ID로 식별됩니다 .</target>
        </trans-unit>
        <trans-unit id="eb2316273427642a12c2dde2fb02858156d5200b" translate="yes" xml:space="preserve">
          <source>A notification emitted by an MBean will be forwarded by the MBeanServer to the listener. If the source of the notification is a reference to an MBean object, the MBean server will replace it by that MBean's ObjectName. Otherwise the source is unchanged.</source>
          <target state="translated">MBean에 의해 발행 된 통지는 MBeanServer에 의해 리스너에게 전달됩니다. 통지의 소스가 MBean 객체에의 참조 인 경우, MBean 서버는 그것을 MBean의 ObjectName로 교체합니다. 그렇지 않으면 소스가 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1e3d44553c12c0a3daa6e9ba421da4d078fe84ca" translate="yes" xml:space="preserve">
          <source>A notification from the SCTP stack.</source>
          <target state="translated">SCTP 스택의 알림입니다.</target>
        </trans-unit>
        <trans-unit id="9fbf4137e454e66ee8d25e83c4c38921d7f02cf7" translate="yes" xml:space="preserve">
          <source>A notification of a change in the Relation Service.</source>
          <target state="translated">관계 서비스 변경 알림</target>
        </trans-unit>
        <trans-unit id="74b1df702f3bc581785499dd02ae0b69bee54ca0" translate="yes" xml:space="preserve">
          <source>A notification of a change in the Relation Service. A RelationNotification notification is sent when a relation is created via the Relation Service, or an MBean is added as a relation in the Relation Service, or a role is updated in a relation, or a relation is removed from the Relation Service.</source>
          <target state="translated">관계 서비스 변경 알림 RelationNotification 알림은 관계 서비스를 통해 관계가 작성되거나 MBean이 관계 서비스에서 관계로 추가되거나 관계에서 역할이 업데이트되거나 관계 서비스에서 관계가 제거 될 때 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="0c1558f34233517f554f73489411d5286d199edd" translate="yes" xml:space="preserve">
          <source>A number can be formatted in the compact forms with two different styles, &lt;a href=&quot;numberformat.style#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numberformat.style#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;numberformat#getCompactNumberInstance(java.util.Locale,java.text.NumberFormat.Style)&quot;&gt;&lt;code&gt;NumberFormat.getCompactNumberInstance(Locale, Style)&lt;/code&gt;&lt;/a&gt; for formatting and parsing a number in &lt;a href=&quot;numberformat.style#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;numberformat.style#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt; compact form, where the given &lt;code&gt;Style&lt;/code&gt; parameter requests the desired format. A &lt;a href=&quot;numberformat.style#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt; style compact number instance in the &lt;a href=&quot;../util/locale#US&quot;&gt;&lt;code&gt;US locale&lt;/code&gt;&lt;/a&gt; formats &lt;code&gt;10000&lt;/code&gt; as &lt;code&gt;&quot;10K&quot;&lt;/code&gt;. However, a &lt;a href=&quot;numberformat.style#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt; style instance in same locale formats &lt;code&gt;10000&lt;/code&gt; as &lt;code&gt;&quot;10 thousand&quot;&lt;/code&gt;.</source>
          <target state="translated">숫자는 &lt;a href=&quot;numberformat.style#SHORT&quot;&gt; &lt;code&gt;SHORT&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;numberformat.style#LONG&quot;&gt; &lt;code&gt;LONG&lt;/code&gt; 의&lt;/a&gt; 두 가지 다른 스타일을 사용하여 간결한 형식으로 서식을 지정할 수 있습니다 . &lt;a href=&quot;numberformat#getCompactNumberInstance(java.util.Locale,java.text.NumberFormat.Style)&quot;&gt; &lt;code&gt;NumberFormat.getCompactNumberInstance(Locale, Style)&lt;/code&gt; &lt;/a&gt; 를 사용 하여 숫자를 &lt;a href=&quot;numberformat.style#SHORT&quot;&gt; &lt;code&gt;SHORT&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;numberformat.style#LONG&quot;&gt; &lt;code&gt;LONG&lt;/code&gt; &lt;/a&gt; 압축 형식으로 형식화하고 구문 분석합니다 . 여기서 주어진 &lt;code&gt;Style&lt;/code&gt; 매개 변수는 원하는 형식을 요청합니다. &lt;a href=&quot;../util/locale#US&quot;&gt; &lt;code&gt;US locale&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;numberformat.style#SHORT&quot;&gt; &lt;code&gt;SHORT&lt;/code&gt; &lt;/a&gt; 스타일 압축 숫자 인스턴스는 &lt;code&gt;10000&lt;/code&gt; 을 &lt;code&gt;&quot;10K&quot;&lt;/code&gt; 형식 으로 지정 합니다. 그러나 동일한 로케일 의 &lt;a href=&quot;numberformat.style#LONG&quot;&gt; &lt;code&gt;LONG&lt;/code&gt; &lt;/a&gt; 스타일 인스턴스는 &lt;code&gt;10000&lt;/code&gt; 을 &lt;code&gt;&quot;10 thousand&quot;&lt;/code&gt; 형식 으로 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="22785490df6714e09892f6f374dc243111e67d32" translate="yes" xml:space="preserve">
          <source>A number format style.</source>
          <target state="translated">숫자 형식 스타일.</target>
        </trans-unit>
        <trans-unit id="b8184adc49569973f8d66fd10bb3be15b129fd5e" translate="yes" xml:space="preserve">
          <source>A number greater than or equal to zero -- indicates that the command was processed successfully and is an update count giving the number of rows in the database that were affected by the command's execution</source>
          <target state="translated">0보다 크거나 같은 숫자-명령이 성공적으로 처리되었음을 나타내며 명령 실행의 영향을받은 데이터베이스의 행 수를 제공하는 업데이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="42830d8bbd4ec7a36ac1600fbdb97fe7829814c8" translate="yes" xml:space="preserve">
          <source>A number of &lt;code&gt;ShortMessage&lt;/code&gt; methods have integer parameters by which you specify a MIDI status or data byte. If you know the numeric value, you can express it directly. For system common and system real-time messages, you can often use the corresponding fields of &lt;code&gt;ShortMessage&lt;/code&gt;, such as &lt;a href=&quot;#SYSTEM_RESET&quot;&gt;&lt;code&gt;SYSTEM_RESET&lt;/code&gt;&lt;/a&gt;. For channel messages, the upper four bits of the status byte are specified by a command value and the lower four bits are specified by a MIDI channel number. To convert incoming MIDI data bytes that are in the form of Java's signed bytes, you can use the &lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;conversion code&lt;/a&gt; given in the &lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt; class description.</source>
          <target state="translated">많은 &lt;code&gt;ShortMessage&lt;/code&gt; 메서드에는 MIDI 상태 또는 데이터 바이트를 지정하는 정수 매개 변수가 있습니다. 숫자 값을 알고 있으면 직접 표현할 수 있습니다. 시스템 공통 및 시스템 실시간 메시지의 경우 &lt;a href=&quot;#SYSTEM_RESET&quot;&gt; &lt;code&gt;SYSTEM_RESET&lt;/code&gt; &lt;/a&gt; 과 같은 &lt;code&gt;ShortMessage&lt;/code&gt; 의 해당 필드를 자주 사용할 수 있습니다 . 채널 메시지의 경우 상태 바이트의 상위 4 비트는 명령 값으로 지정되고 하위 4 비트는 MIDI 채널 번호로 지정됩니다. Java의 부호있는 바이트 형식으로 들어오는 MIDI 데이터 바이트를 변환하려면 &lt;a href=&quot;midimessage&quot;&gt; &lt;code&gt;MidiMessage&lt;/code&gt; &lt;/a&gt; 클래스 설명에 제공된 &lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;변환 코드를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="43f0f3abe1ddd97507c9365666da42e829d29184" translate="yes" xml:space="preserve">
          <source>A number of &lt;code&gt;ShortMessage&lt;/code&gt; methods have integer parameters by which you specify a MIDI status or data byte. If you know the numeric value, you can express it directly. For system common and system real-time messages, you can often use the corresponding fields of &lt;code&gt;ShortMessage&lt;/code&gt;, such as &lt;a href=&quot;shortmessage#SYSTEM_RESET&quot;&gt;&lt;code&gt;SYSTEM_RESET&lt;/code&gt;&lt;/a&gt;. For channel messages, the upper four bits of the status byte are specified by a command value and the lower four bits are specified by a MIDI channel number. To convert incoming MIDI data bytes that are in the form of Java's signed bytes, you can use the &lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;conversion code&lt;/a&gt; given in the &lt;code&gt;&lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class description.</source>
          <target state="translated">많은 &lt;code&gt;ShortMessage&lt;/code&gt; 메소드에는 MIDI 상태 또는 데이터 바이트를 지정하는 정수 매개 변수가 있습니다. 숫자 값을 알고 있으면 직접 표현할 수 있습니다. 시스템 공통 및 시스템 실시간 메시지의 경우 종종 &lt;a href=&quot;shortmessage#SYSTEM_RESET&quot;&gt; &lt;code&gt;SYSTEM_RESET&lt;/code&gt; &lt;/a&gt; 과 같은 해당 &lt;code&gt;ShortMessage&lt;/code&gt; 필드를 사용할 수 있습니다 . 채널 메시지의 경우 상태 바이트의 상위 4 비트는 명령 값으로 지정되고 하위 4 비트는 MIDI 채널 번호로 지정됩니다. Java의 부호있는 바이트 형식 인 수신 MIDI 데이터 바이트를 변환하려면 &lt;code&gt;&lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 클래스 설명에 제공된 &lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;변환 코드를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88ef82d7a1acf5551302d1f421428c6310badc2a" translate="yes" xml:space="preserve">
          <source>A number of classes in the java.net package do provide for a much higher level of abstraction and allow for easy access to resources on the network. The classes are:</source>
          <target state="translated">java.net 패키지의 많은 클래스는 훨씬 더 높은 수준의 추상화를 제공하며 네트워크의 자원에 쉽게 액세스 할 수 있습니다. 수업은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a7de7e6ccbddf2e2c4cb0823e652873980328bfe" translate="yes" xml:space="preserve">
          <source>A package exported by a module, may be qualified or unqualified.</source>
          <target state="translated">모듈에서 내 보낸 패키지는 규정되거나 규정되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26a5315e56bbc0b1a41c272ad0788f786e5e99a8" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API containing the plug-in interfaces for readers, writers, transcoders, and streams, and a runtime registry.</source>
          <target state="translated">리더, 라이터, 트랜스 코더 및 스트림을위한 플러그인 인터페이스와 런타임 레지스트리를 포함하는 Java Image I / O API 패키지.</target>
        </trans-unit>
        <trans-unit id="3d1474ec8064f4048b349e060bd17d481f91abb7" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API dealing with low-level I/O from files and streams.</source>
          <target state="translated">파일 및 스트림의 저수준 I / O를 처리하는 Java Image I / O API 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="fcd25d02098be8fe912d200eda69fa86ba44c8a4" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API dealing with reading and writing metadata.</source>
          <target state="translated">메타 데이터 읽기 및 쓰기를 처리하는 Java Image I / O API 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="1e50c13e656800213a2b38221ce5d3c67a302d08" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API dealing with synchronous notification of events during the reading and writing of images.</source>
          <target state="translated">이미지를 읽고 쓰는 동안 이벤트의 동기 알림을 처리하는 Java Image I / O API 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="d42aa5ab351834ccda11ab2bfcd667dbe42adf2b" translate="yes" xml:space="preserve">
          <source>A package opened by a module, may be qualified or unqualified.</source>
          <target state="translated">모듈에 의해 개봉 된 패키지는 자격이 있거나 자격이 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="75aceaead5894b1564163cdca6dffc56df070c4d" translate="yes" xml:space="preserve">
          <source>A package.</source>
          <target state="translated">소포.</target>
        </trans-unit>
        <trans-unit id="4a8f716a9e97e115398b05095b7ce1a98aec7a10" translate="yes" xml:space="preserve">
          <source>A padding layout constant with size of eight bytes.</source>
          <target state="translated">크기가 8 바이트 인 패딩 레이아웃 상수입니다.</target>
        </trans-unit>
        <trans-unit id="9d23232ec5dcfda5c4a81696ce1896998df414de" translate="yes" xml:space="preserve">
          <source>A padding layout constant with size of four bytes.</source>
          <target state="translated">크기가 4 바이트 인 패딩 레이아웃 상수입니다.</target>
        </trans-unit>
        <trans-unit id="39cfa2449c39a87a5d9236ebe6f7467828195605" translate="yes" xml:space="preserve">
          <source>A padding layout constant with size of one byte.</source>
          <target state="translated">크기가 1 바이트 인 패딩 레이아웃 상수입니다.</target>
        </trans-unit>
        <trans-unit id="59f3ea51b603377270c457d2e14db3f8b8b474dc" translate="yes" xml:space="preserve">
          <source>A padding layout constant with size of two bytes.</source>
          <target state="translated">크기가 2 바이트 인 패딩 레이아웃 상수입니다.</target>
        </trans-unit>
        <trans-unit id="7c290b5fad84f553582133ce9e6b636bf6feff60" translate="yes" xml:space="preserve">
          <source>A painting delegate.</source>
          <target state="translated">페인팅 델리게이트.</target>
        </trans-unit>
        <trans-unit id="21af00cd67fa2e76c463e609ff882f8a21333f75" translate="yes" xml:space="preserve">
          <source>A painting delegate. The Painter interface defines exactly one method, &lt;code&gt;paint&lt;/code&gt;. It is used in situations where the developer can change the painting routine of a component without having to resort to subclassing the component. It is also generically useful when doing any form of painting delegation.</source>
          <target state="translated">페인팅 델리게이트. Painter 인터페이스는 정확히 하나의 메서드 인 &lt;code&gt;paint&lt;/code&gt; 를 정의합니다 . 개발자가 컴포넌트를 서브 클래 싱하지 않고도 컴포넌트의 페인팅 루틴을 변경할 수있는 상황에서 사용됩니다. 또한 어떤 형태의 페인팅 위임을 할 때도 일반적으로 유용합니다.</target>
        </trans-unit>
        <trans-unit id="9c561483e1216a136545d701b9a0c6a84ebc7b7e" translate="yes" xml:space="preserve">
          <source>A pair of channels that implements a unidirectional pipe.</source>
          <target state="translated">단방향 파이프를 구현하는 한 쌍의 채널.</target>
        </trans-unit>
        <trans-unit id="161fbf388971c0361a60ca23423fec42d8bf9028" translate="yes" xml:space="preserve">
          <source>A pane that allows the user to navigate through and select the contents of a directory.</source>
          <target state="translated">사용자가 디렉토리 내용을 탐색하고 선택할 수있는 창입니다.</target>
        </trans-unit>
        <trans-unit id="9e71a15ef7f8252ea4263584f6871d18af429f54" translate="yes" xml:space="preserve">
          <source>A pane that allows the user to navigate through and select the contents of a directory. May be used by a file chooser.</source>
          <target state="translated">사용자가 디렉토리 내용을 탐색하고 선택할 수있는 창입니다. 파일 선택기에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c18b24461f8ae6e47402d8230e4c8763f210c6d" translate="yes" xml:space="preserve">
          <source>A pane that is guaranteed to be painted on top of all panes beneath it.</source>
          <target state="translated">그 아래의 모든 창 위에 그려지는 창이 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="f67f98001b0f165dfe2a20beea6cabadb769f87c" translate="yes" xml:space="preserve">
          <source>A pane that supports internal frames and iconified versions of those internal frames.</source>
          <target state="translated">내부 프레임 및 해당 내부 프레임의 아이콘 화 된 버전을 지원하는 창입니다.</target>
        </trans-unit>
        <trans-unit id="7bf40754fba93eba6040ef587e633d26738db0e1" translate="yes" xml:space="preserve">
          <source>A panel that starts in row 0 and ends in row 1. The panel has a baseline-resize behavior of &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt; and has an anchor of &lt;code&gt;BASELINE&lt;/code&gt;. As the baseline-resize behavior is &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt; the prevailing row for the panel is row 1.</source>
          <target state="translated">0 행에서 시작하여 1 행에서 끝나는 패널입니다. 패널에는 &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt; 의 기준선 크기 조정 동작 이 있으며 &lt;code&gt;BASELINE&lt;/code&gt; 앵커가 있습니다. 기준선 크기 조정 동작이 &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt; 이므로 패널의 일반적인 행은 행 1입니다.</target>
        </trans-unit>
        <trans-unit id="040482871b1b9f2a69ca18b4cced684c121757c7" translate="yes" xml:space="preserve">
          <source>A paragraph-separator character (&lt;code&gt;'\u2029'&lt;/code&gt;).</source>
          <target state="translated">단락 구분 문자 ( &lt;code&gt;'\u2029'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="394c92f3379723469af1d8636c4eaf9565783905" translate="yes" xml:space="preserve">
          <source>A paragraph-separator character (&lt;code&gt;'\u2029&lt;/code&gt;).</source>
          <target state="translated">단락 구분 문자 ( &lt;code&gt;'\u2029&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="79368f8d53ce66ea9334edbe3b72f58f6e497a54" translate="yes" xml:space="preserve">
          <source>A parameter of a method or constructor.</source>
          <target state="translated">메소드 또는 생성자의 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="58b36826d2d44021fe02b6a2abe751fe9a54079c" translate="yes" xml:space="preserve">
          <source>A parameter of an exception handler.</source>
          <target state="translated">예외 처리기의 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="3585600fff66d07c254c460c9422920ddb647135" translate="yes" xml:space="preserve">
          <source>A parameter that contains a URI pointing to data intended for a PolicySpi or ConfigurationSpi implementation.</source>
          <target state="translated">PolicySpi 또는 ConfigurationSpi 구현 용 데이터를 가리키는 URI가 포함 된 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="d7213d466d72a10b28057b3ef7fb4aba4a50d958" translate="yes" xml:space="preserve">
          <source>A parameter that has been set with setParameter.</source>
          <target state="translated">setParameter로 설정된 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="d63cf425fcd35e454243a434211b0e6d1a9b20cd" translate="yes" xml:space="preserve">
          <source>A parameter's name is &quot;&quot;, or contains an illegal character</source>
          <target state="translated">매개 변수 이름이 &quot;&quot;이거나 잘못된 문자를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="a6e2c142abe93ec8b1941b8de767b406102f08b5" translate="yes" xml:space="preserve">
          <source>A parameterized type is created the first time it is needed by a reflective method, as specified in this package. When a parameterized type p is created, the generic type declaration that p instantiates is resolved, and all type arguments of p are created recursively. See &lt;a href=&quot;typevariable&quot;&gt;&lt;code&gt;TypeVariable&lt;/code&gt;&lt;/a&gt; for details on the creation process for type variables. Repeated creation of a parameterized type has no effect.</source>
          <target state="translated">매개 변수화 된 유형은이 패키지에 지정된 반사 방법으로 처음 필요할 때 작성됩니다. 매개 변수화 된 유형 p가 작성되면 p가 인스턴스화하는 일반 유형 선언이 해결되고 p의 모든 유형 인수가 재귀 적으로 작성됩니다. 유형 변수 생성 프로세스에 대한 자세한 내용 은 &lt;a href=&quot;typevariable&quot;&gt; &lt;code&gt;TypeVariable&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 . 매개 변수화 된 유형을 반복해서 작성해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="207968ed3b02650fd3f0f90772b619beb100c1b9" translate="yes" xml:space="preserve">
          <source>A parameters object for X509KeyManagers that encapsulates a List of KeyStore.Builders.</source>
          <target state="translated">KeyStore.Builders 목록을 캡슐화하는 X509KeyManagers의 parameters 객체입니다.</target>
        </trans-unit>
        <trans-unit id="b990f88485fa5da93f0c0e3138f89eab0ed06e86" translate="yes" xml:space="preserve">
          <source>A parser must be able to work with any &lt;a href=&quot;../validation/schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; implementation. However, parsers and schemas are allowed to use implementation-specific custom mechanisms as long as they yield the result described in the specification.</source>
          <target state="translated">파서는 모든 &lt;a href=&quot;../validation/schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt; 구현 과 함께 작동 할 수 있어야합니다 . 그러나 파서와 스키마는 사양에 설명 된 결과를 생성하는 한 구현 별 사용자 지정 메커니즘을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="725b605d7b96e538c4444b6cc65519d2a9564a59" translate="yes" xml:space="preserve">
          <source>A partially complete temporal is used to allow the chronology and zone to be queried. In general, only the chronology will be needed. Querying items other than the zone or chronology is undefined and must not be relied on. The behavior of other methods such as &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;getLong&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt; and &lt;code&gt;isSupported&lt;/code&gt; is unpredictable and the results undefined.</source>
          <target state="translated">연대기 및 영역을 쿼리 할 수 ​​있도록 부분적으로 완전한 시간이 사용됩니다. 일반적으로 연대기 만 필요합니다. 영역 또는 연대기 이외의 항목에 대한 쿼리는 정의되어 있지 않으며 의존해서는 안됩니다. &lt;code&gt;get&lt;/code&gt; , &lt;code&gt;getLong&lt;/code&gt; , &lt;code&gt;range&lt;/code&gt; 및 &lt;code&gt;isSupported&lt;/code&gt; 와 같은 다른 메소드의 동작 은 예측할 수 없으며 결과는 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="231fb54b3d3de5027a6b56f9c783ef40b879816a" translate="yes" xml:space="preserve">
          <source>A particular Java platform may support zero or more hierarchically-organized file systems. Each file system has a &lt;code&gt;root&lt;/code&gt; directory from which all other files in that file system can be reached. Windows platforms, for example, have a root directory for each active drive; UNIX platforms have a single root directory, namely &lt;code&gt;&quot;/&quot;&lt;/code&gt;. The set of available filesystem roots is affected by various system-level operations such as the insertion or ejection of removable media and the disconnecting or unmounting of physical or virtual disk drives.</source>
          <target state="translated">특정 Java 플랫폼은 0 개 이상의 계층 적으로 구성된 파일 시스템을 지원할 수 있습니다. 각 파일 시스템에는 해당 파일 시스템의 다른 모든 파일에 도달 할 수 있는 &lt;code&gt;root&lt;/code&gt; 디렉토리가 있습니다. 예를 들어, Windows 플랫폼에는 각 활성 드라이브에 대한 루트 디렉토리가 있습니다. UNIX 플랫폼에는 단일 루트 디렉토리 (예 : &lt;code&gt;&quot;/&quot;&lt;/code&gt; )가 있습니다. 사용 가능한 파일 시스템 루트 세트는 이동식 매체 삽입 또는 배출, 물리적 또는 가상 디스크 드라이브 연결 해제 또는 마운트 해제와 같은 다양한 시스템 레벨 작업의 영향을받습니다.</target>
        </trans-unit>
        <trans-unit id="fd8b964ffc07e97c0b3abadf486dd40ac2b3354b" translate="yes" xml:space="preserve">
          <source>A particular program might use more than one &lt;code&gt;GraphicsDevice&lt;/code&gt; in a &lt;code&gt;GraphicsEnvironment&lt;/code&gt;. This method returns a &lt;code&gt;String&lt;/code&gt; identifying a particular &lt;code&gt;GraphicsDevice&lt;/code&gt; in the local &lt;code&gt;GraphicsEnvironment&lt;/code&gt;. Although there is no public method to set this &lt;code&gt;String&lt;/code&gt;, a programmer can use the &lt;code&gt;String&lt;/code&gt; for debugging purposes. Vendors of the Java Runtime Environment can format the return value of the &lt;code&gt;String&lt;/code&gt;. To determine how to interpret the value of the &lt;code&gt;String&lt;/code&gt;, contact the vendor of your Java Runtime. To find out who the vendor is, from your program, call the &lt;a href=&quot;../../../java.base/java/lang/system#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;getProperty&lt;/code&gt;&lt;/a&gt; method of the System class with &quot;java.vendor&quot;.</source>
          <target state="translated">특정 프로그램은 더 이상 사용할 수 &lt;code&gt;GraphicsDevice&lt;/code&gt; A의 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 로 . 이 메서드는 로컬 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 에서 특정 &lt;code&gt;GraphicsDevice&lt;/code&gt; 를 식별 하는 &lt;code&gt;String&lt;/code&gt; 반환합니다 . 이 &lt;code&gt;String&lt;/code&gt; 을 설정하는 공용 메서드는 없지만 프로그래머는 디버깅 목적으로 &lt;code&gt;String&lt;/code&gt; 을 사용할 수 있습니다 . Java Runtime Environment 공급 업체는 &lt;code&gt;String&lt;/code&gt; 의 반환 값을 형식화 할 수 있습니다 . &lt;code&gt;String&lt;/code&gt; 값을 해석하는 방법을 결정하려면 Java Runtime 공급 업체에 문의하십시오. 공급 업체가 누구인지 알아 보려면 프로그램에서 &lt;a href=&quot;../../../java.base/java/lang/system#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;getProperty&lt;/code&gt; 를&lt;/a&gt; 호출하십시오. &quot;java.vendor&quot;가있는 System 클래스의 메소드.</target>
        </trans-unit>
        <trans-unit id="d4bb33f76e6351bd10c04bd56de264c4d2ad32c2" translate="yes" xml:space="preserve">
          <source>A particular program might use more than one &lt;code&gt;GraphicsDevice&lt;/code&gt; in a &lt;code&gt;GraphicsEnvironment&lt;/code&gt;. This method returns a &lt;code&gt;String&lt;/code&gt; identifying a particular &lt;code&gt;GraphicsDevice&lt;/code&gt; in the local &lt;code&gt;GraphicsEnvironment&lt;/code&gt;. Although there is no public method to set this &lt;code&gt;String&lt;/code&gt;, a programmer can use the &lt;code&gt;String&lt;/code&gt; for debugging purposes. Vendors of the Java&amp;trade; Runtime Environment can format the return value of the &lt;code&gt;String&lt;/code&gt;. To determine how to interpret the value of the &lt;code&gt;String&lt;/code&gt;, contact the vendor of your Java Runtime. To find out who the vendor is, from your program, call the &lt;a href=&quot;../../../java.base/java/lang/system#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;getProperty&lt;/code&gt;&lt;/a&gt; method of the System class with &quot;java.vendor&quot;.</source>
          <target state="translated">특정 프로그램은 더 이상 사용할 수 &lt;code&gt;GraphicsDevice&lt;/code&gt; A의 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 로 . 이 메서드는 로컬 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 에서 특정 &lt;code&gt;GraphicsDevice&lt;/code&gt; 를 식별 하는 &lt;code&gt;String&lt;/code&gt; 반환합니다 . 이 &lt;code&gt;String&lt;/code&gt; 을 설정하는 공용 메서드는 없지만 프로그래머는 디버깅 목적으로 &lt;code&gt;String&lt;/code&gt; 을 사용할 수 있습니다 . Java &amp;trade; Runtime Environment 공급 업체는 &lt;code&gt;String&lt;/code&gt; 의 반환 값을 형식화 할 수 있습니다 . &lt;code&gt;String&lt;/code&gt; 값을 해석하는 방법을 결정하려면 Java 런타임 공급 업체에 문의하십시오. 공급 업체가 누구인지 알아 보려면 프로그램에서 &lt;a href=&quot;../../../java.base/java/lang/system#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;getProperty&lt;/code&gt; 를&lt;/a&gt; 호출하십시오. &quot;java.vendor&quot;가있는 System 클래스의 메소드.</target>
        </trans-unit>
        <trans-unit id="71a0ac78cd9ceaa2a9fc0b0cb9d6019ef6ea7cf1" translate="yes" xml:space="preserve">
          <source>A password may be given to unlock the keystore (e.g. the keystore resides on a hardware token device), or to check the integrity of the keystore data. If a password is not given for integrity checking, then integrity checking is not performed.</source>
          <target state="translated">키 저장소를 잠금 해제하거나 (예 : 키 저장소가 하드웨어 토큰 장치에 상주 함) 키 저장소 데이터의 무결성을 확인하기 위해 비밀번호가 제공 될 수 있습니다. 무결성 검사를 위해 암호를 제공하지 않으면 무결성 검사가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b6843fa2f0f5e030f8851019b802cd205df0f080" translate="yes" xml:space="preserve">
          <source>A password-based implementation of &lt;code&gt;ProtectionParameter&lt;/code&gt;.</source>
          <target state="translated">암호 기반의 &lt;code&gt;ProtectionParameter&lt;/code&gt; 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="908320b79b8166bd80f9cebf314b01f668d00b9a" translate="yes" xml:space="preserve">
          <source>A path matcher that may be used to match paths against the pattern</source>
          <target state="translated">패턴과 경로를 일치시키는 데 사용될 수있는 경로 매처</target>
        </trans-unit>
        <trans-unit id="10a69809d6425afdae673593f997192bd8466d1c" translate="yes" xml:space="preserve">
          <source>A path of tree nodes, typically used to represent the sequence of ancestor nodes of a tree node up to the top level CompilationUnitTree node.</source>
          <target state="translated">일반적으로 최상위 CompilationUnitTree 노드까지 트리 노드의 상위 노드 시퀀스를 나타내는 데 사용되는 트리 노드의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="b9ba1d969b58a40f006261d68b7d78af05a0386d" translate="yes" xml:space="preserve">
          <source>A path of tree nodes, typically used to represent the sequence of ancestor nodes of a tree node up to the top level DocCommentTree node.</source>
          <target state="translated">일반적으로 최상위 DocCommentTree 노드까지 트리 노드의 상위 노드 시퀀스를 나타내는 데 사용되는 트리 노드의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="d85fde803e63c0cf6393894b140cc32d5687a2ce" translate="yes" xml:space="preserve">
          <source>A path to a &lt;em&gt;packaged module&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;패키지 된 모듈&lt;/em&gt; 의 경로 입니다.</target>
        </trans-unit>
        <trans-unit id="2b0819bf63dd9fa7b1fd54499fec7e783701f6f3" translate="yes" xml:space="preserve">
          <source>A path to a directory of modules.</source>
          <target state="translated">모듈 디렉토리 경로입니다.</target>
        </trans-unit>
        <trans-unit id="08c72e1f94e0e16813faf52803c0753413ad7077" translate="yes" xml:space="preserve">
          <source>A path to the &lt;em&gt;top-level&lt;/em&gt; directory of an &lt;em&gt;exploded module&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;분해 된 모듈&lt;/em&gt; 의 &lt;em&gt;최상위&lt;/em&gt; 디렉토리 경로 입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="495e2a31b97782811793ec1239e0bd3fee0e7177" translate="yes" xml:space="preserve">
          <source>A pathname consisting of a single &quot;*&quot; indicates all the files in the current directory, while a pathname consisting of a single &quot;-&quot; indicates all the files in the current directory and (recursively) all files and subdirectories contained in the current directory.</source>
          <target state="translated">단일 &quot;*&quot;로 구성된 경로 이름은 현재 디렉토리의 모든 파일을 나타내고, 단일 &quot;-&quot;로 구성된 경로 이름은 현재 디렉토리의 모든 파일과 현재 디렉토리에 포함 된 모든 파일 및 하위 디렉토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c54c539bec42d509854d232101160918495a25ef" translate="yes" xml:space="preserve">
          <source>A pathname consisting of the special token &quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot; matches &lt;b&gt;any&lt;/b&gt; file.</source>
          <target state="translated">경로명에 특수한 토큰 「&amp;lt;&amp;lt; ALL FILES &amp;gt;&amp;gt;」는 일치하는 &lt;b&gt;모든&lt;/b&gt; 파일을.</target>
        </trans-unit>
        <trans-unit id="3ef23e9c497a7b25e957caaacc361e940805dd1a" translate="yes" xml:space="preserve">
          <source>A pathname containing an empty string represents an empty path.</source>
          <target state="translated">빈 문자열을 포함하는 경로 이름은 빈 경로를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="46eef1d82fd391592dc0d8c3e69cce9707760548" translate="yes" xml:space="preserve">
          <source>A pathname that ends in &quot;/*&quot; (where &quot;/&quot; is the file separator character, &lt;code&gt;File.separatorChar&lt;/code&gt;) indicates all the files and directories contained in that directory. A pathname that ends with &quot;/-&quot; indicates (recursively) all files and subdirectories contained in that directory. The special pathname &quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot; matches any file.</source>
          <target state="translated">&quot;/ *&quot;로 끝나는 경로 이름 (여기서 &quot;/&quot;는 파일 구분 문자 &lt;code&gt;File.separatorChar&lt;/code&gt; )은 해당 디렉토리에 포함 된 모든 파일과 디렉토리를 나타냅니다. &quot;/-&quot;로 끝나는 경로 이름은 해당 디렉토리에 포함 된 모든 파일과 하위 디렉토리를 (재귀 적으로) 나타냅니다. 특수 경로 이름 &quot;&amp;lt;&amp;lt; ALL FILES &amp;gt;&amp;gt;&quot;는 모든 파일과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="572f17ed8ee918ab0ba5d0eea653f440ba45e9f6" translate="yes" xml:space="preserve">
          <source>A pathname, whether abstract or in string form, may be either &lt;em&gt;absolute&lt;/em&gt; or &lt;em&gt;relative&lt;/em&gt;. An absolute pathname is complete in that no other information is required in order to locate the file that it denotes. A relative pathname, in contrast, must be interpreted in terms of information taken from some other pathname. By default the classes in the &lt;code&gt;java.io&lt;/code&gt; package always resolve relative pathnames against the current user directory. This directory is named by the system property &lt;code&gt;user.dir&lt;/code&gt;, and is typically the directory in which the Java virtual machine was invoked.</source>
          <target state="translated">추상이든 문자열이든 경로 이름은 &lt;em&gt;absolute&lt;/em&gt; 또는 &lt;em&gt;relative&lt;/em&gt; 일 수 있습니다 . 표시되는 파일을 찾기 위해 다른 정보가 필요하지 않으므로 절대 경로 이름이 완성됩니다. 반대로 상대 경로 이름은 다른 경로 이름에서 가져온 정보로 해석해야합니다. 기본적으로 &lt;code&gt;java.io&lt;/code&gt; 패키지 의 클래스는 항상 현재 사용자 디렉토리에 대한 상대 경로 이름을 분석합니다. 이 디렉토리는 시스템 특성 &lt;code&gt;user.dir&lt;/code&gt; 에 의해 이름이 지정되며 일반적으로 Java 가상 머신이 호출 된 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="885061eeba719408d460722e0592847141de0a81" translate="yes" xml:space="preserve">
          <source>A pattern consists of a string that includes the following special components that will be replaced at runtime:</source>
          <target state="translated">패턴은 런타임에 대체 될 다음과 같은 특수 구성 요소를 포함하는 문자열로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="23e634c9f52d19b23f4b0e9f966b570e032a1f4f" translate="yes" xml:space="preserve">
          <source>A peer will signal its intent to close by sending its own closure handshake message. After this message has been received and processed by the local &lt;code&gt;SSLEngine&lt;/code&gt;'s &lt;code&gt;unwrap()&lt;/code&gt; call, the application can detect the close by calling &lt;code&gt;unwrap()&lt;/code&gt; and looking for a &lt;code&gt;SSLEngineResult&lt;/code&gt; with status &quot;CLOSED&quot;, or if &lt;a href=&quot;#isInboundDone()&quot;&gt;&lt;code&gt;isInboundDone()&lt;/code&gt;&lt;/a&gt; returns true. If for some reason the peer closes the communication link without sending the proper SSL/TLS/DTLS closure message, the application can detect the end-of-stream and can signal the engine via &lt;a href=&quot;#closeInbound()&quot;&gt;&lt;code&gt;closeInbound()&lt;/code&gt;&lt;/a&gt; that there will no more inbound messages to process. Some applications might choose to require orderly shutdown messages from a peer, in which case they can check that the closure was generated by a handshake message and not by an end-of-stream condition.</source>
          <target state="translated">피어는 자체 클로저 핸드 셰이크 메시지를 보내 클로징 의도를 알립니다. 이 메시지가 로컬에 의해 수신되어 처리 된 후 &lt;code&gt;SSLEngine&lt;/code&gt; 의 의 &lt;code&gt;unwrap()&lt;/code&gt; 호출 응용 프로그램이 호출 가까이 감지 할 수 &lt;code&gt;unwrap()&lt;/code&gt; A에 대한 찾고 &lt;code&gt;SSLEngineResult&lt;/code&gt; 의 상태 &quot;CLOSED&quot;을 경우, 또는 &lt;a href=&quot;#isInboundDone()&quot;&gt; &lt;code&gt;isInboundDone()&lt;/code&gt; &lt;/a&gt; true를 반환합니다. 어떤 이유로 피어가 적절한 SSL / TLS / DTLS 종료 메시지를 보내지 않고 통신 링크를 닫으면 애플리케이션이 스트림 끝을 감지하고 &lt;a href=&quot;#closeInbound()&quot;&gt; &lt;code&gt;closeInbound()&lt;/code&gt; &lt;/a&gt; 를 통해 엔진에 신호를 보낼 수 있습니다.더 이상 처리 할 인바운드 메시지가 없습니다. 일부 애플리케이션은 피어에서 순서대로 종료 메시지를 요구하도록 선택할 수 있습니다.이 경우 종료가 스트림 종료 조건이 아닌 핸드 셰이크 메시지에 의해 생성되었는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="877d121efe20f3c4d49a6cefb7ce0cdf6c5af580" translate="yes" xml:space="preserve">
          <source>A peer will signal its intent to close by sending its own closure handshake message. After this message has been received and processed by the local &lt;code&gt;SSLEngine&lt;/code&gt;'s &lt;code&gt;unwrap()&lt;/code&gt; call, the application can detect the close by calling &lt;code&gt;unwrap()&lt;/code&gt; and looking for a &lt;code&gt;SSLEngineResult&lt;/code&gt; with status &quot;CLOSED&quot;, or if &lt;a href=&quot;sslengine#isInboundDone--&quot;&gt;&lt;code&gt;isInboundDone()&lt;/code&gt;&lt;/a&gt; returns true. If for some reason the peer closes the communication link without sending the proper SSL/TLS closure message, the application can detect the end-of-stream and can signal the engine via &lt;a href=&quot;sslengine#closeInbound--&quot;&gt;&lt;code&gt;closeInbound()&lt;/code&gt;&lt;/a&gt; that there will no more inbound messages to process. Some applications might choose to require orderly shutdown messages from a peer, in which case they can check that the closure was generated by a handshake message and not by an end-of-stream condition.</source>
          <target state="translated">피어는 자체 폐쇄 핸드 셰이크 메시지를 보내 종료 의사를 알립니다. 이 메시지가 로컬에 의해 수신되어 처리 된 후 &lt;code&gt;SSLEngine&lt;/code&gt; 의 의 &lt;code&gt;unwrap()&lt;/code&gt; 호출 응용 프로그램이 호출 가까이 감지 할 수 &lt;code&gt;unwrap()&lt;/code&gt; A에 대한 찾고 &lt;code&gt;SSLEngineResult&lt;/code&gt; 의 상태 &quot;CLOSED&quot;을 경우, 또는 &lt;a href=&quot;sslengine#isInboundDone--&quot;&gt; &lt;code&gt;isInboundDone()&lt;/code&gt; &lt;/a&gt; true를 반환합니다. 어떤 이유로 피어가 적절한 SSL / TLS 클로저 메시지를 보내지 않고 통신 링크를 닫으면 응용 프로그램은 스트림 끝을 감지하고 &lt;a href=&quot;sslengine#closeInbound--&quot;&gt; &lt;code&gt;closeInbound()&lt;/code&gt; &lt;/a&gt; 를 통해 엔진에 신호를 보낼 수 있습니다더 이상 처리 할 인바운드 메시지가 없습니다. 일부 응용 프로그램은 피어에서 순서대로 종료 메시지를 요구할 수 있습니다.이 경우 스트림 종료 조건이 아니라 핸드 셰이크 메시지로 클로저가 생성되었는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e58fce6d080ff09ddf93b4ff27940663ef5768af" translate="yes" xml:space="preserve">
          <source>A period may also be &lt;code&gt;&quot;everyChunk&quot;&lt;/code&gt; to specify that it occurs at least once for every recording file. The number of events that are emitted depends on how many times the file rotations occur when data is recorded.</source>
          <target state="translated">마침표는 모든 녹음 파일에 대해 적어도 한 번 발생하도록 지정하는 &lt;code&gt;&quot;everyChunk&quot;&lt;/code&gt; 일 수도 있습니다 . 생성되는 이벤트 수는 데이터가 기록 될 때 파일 회전이 발생하는 횟수에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="f74d302862e125b69bc267a370b3b88ac734b569" translate="yes" xml:space="preserve">
          <source>A permission for Smart Card operations.</source>
          <target state="translated">스마트 카드 작업에 대한 권한입니다.</target>
        </trans-unit>
        <trans-unit id="707e5bbc35496e227fb6de4e5c43b03f60c75eec" translate="yes" xml:space="preserve">
          <source>A permission for Smart Card operations. A CardPermission consists of the name of the card terminal the permission applies to and a set of actions that are valid for that terminal.</source>
          <target state="translated">스마트 카드 작업에 대한 권한입니다. CardPermission은 권한이 적용되는 카드 터미널의 이름과 해당 터미널에 유효한 일련의 작업으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="969bb0afd4cc1ecb553f172a9b57b2ef0c780de7" translate="yes" xml:space="preserve">
          <source>A permission that includes the &lt;code&gt;queryMBeans&lt;/code&gt; action is considered to include &lt;code&gt;queryNames&lt;/code&gt; as well.</source>
          <target state="translated">&lt;code&gt;queryMBeans&lt;/code&gt; 조치 를 포함하는 권한 은 &lt;code&gt;queryNames&lt;/code&gt; 도 포함하는 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="ec560e192b242915e4dfe0257d2eeeae0a4b7bcb" translate="yes" xml:space="preserve">
          <source>A persistence delegate is then looked up by the name composed of the fully qualified name of the given type and the &quot;PersistenceDelegate&quot; postfix. For example, a persistence delegate for the &lt;code&gt;Bean&lt;/code&gt; class should be named &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; and located in the same package.</source>
          <target state="translated">그런 다음 지속성 위임은 지정된 유형의 정규화 된 이름과 &quot;PersistenceDelegate&quot;접미사로 구성된 이름으로 조회됩니다. 예를 들어, &lt;code&gt;Bean&lt;/code&gt; 클래스 의 지속성 위임은 &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; 라는 이름을 지정 하고 동일한 패키지에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="4a747ab8a03910b849e698f017fbb3fba8116a99" translate="yes" xml:space="preserve">
          <source>A persistence delegate is then looked up by the name composed of the the fully qualified name of the given type and the &quot;PersistenceDelegate&quot; postfix. For example, a persistence delegate for the &lt;code&gt;Bean&lt;/code&gt; class should be named &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; and located in the same package.</source>
          <target state="translated">그런 다음 지정된 유형의 정규화 된 이름과 &quot;PersistenceDelegate&quot;접미사로 구성된 이름으로 지속성 위임을 찾습니다. 예를 들어, &lt;code&gt;Bean&lt;/code&gt; 클래스 의 지속성 위임의 이름은 &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; 이며 동일한 패키지에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="06a66f678af1d95ca12f674489cbec8275ebe7ad" translate="yes" xml:space="preserve">
          <source>A persistence delegate, may take control of all aspects of the persistence of an object including:</source>
          <target state="translated">지속성 위임은 다음을 포함하여 객체 지속성의 모든 측면을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c10812bf1787199ce6eca01fbb20d15dd5f8ea49" translate="yes" xml:space="preserve">
          <source>A physical duration could be of infinite length. For practicality, the duration is stored with constraints similar to &lt;a href=&quot;instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt;. The duration uses nanosecond resolution with a maximum value of the seconds that can be held in a &lt;code&gt;long&lt;/code&gt;. This is greater than the current estimated age of the universe.</source>
          <target state="translated">물리적 지속 시간은 무한 길이 일 수 있습니다. 실제로는 기간이 &lt;a href=&quot;instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt; 와 비슷한 제약 조건으로 저장됩니다 . 지속 시간은 &lt;code&gt;long&lt;/code&gt; 유지할 수있는 초의 최대 값으로 나노초 해상도를 사용합니다 . 이것은 현재 예상 우주 나이보다 큽니다.</target>
        </trans-unit>
        <trans-unit id="36b1ca833d9b775798b2b79389f6705127a184c0" translate="yes" xml:space="preserve">
          <source>A physical structure, that represents the flow. The children of this view are where the pieces of of the logical views are placed to create the flow.</source>
          <target state="translated">흐름을 나타내는 물리적 구조입니다. 이 뷰의 자식은 흐름을 생성하기 위해 논리적 뷰의 일부가 배치되는 곳입니다.</target>
        </trans-unit>
        <trans-unit id="474cd8ad0927115718f8e3c65460d787fc470758" translate="yes" xml:space="preserve">
          <source>A pipe consists of a pair of channels: A writable &lt;a href=&quot;pipe.sinkchannel&quot;&gt;&lt;code&gt;sink&lt;/code&gt;&lt;/a&gt; channel and a readable &lt;a href=&quot;pipe.sourcechannel&quot;&gt;&lt;code&gt;source&lt;/code&gt;&lt;/a&gt; channel. Once some bytes are written to the sink channel they can be read from source channel in exactlyAthe order in which they were written.</source>
          <target state="translated">파이프는 쓰기 가능한 &lt;a href=&quot;pipe.sinkchannel&quot;&gt; &lt;code&gt;sink&lt;/code&gt; &lt;/a&gt; 채널과 읽을 수있는 &lt;a href=&quot;pipe.sourcechannel&quot;&gt; &lt;code&gt;source&lt;/code&gt; &lt;/a&gt; 채널 의 한 쌍의 채널로 구성됩니다 . 일부 바이트가 싱크 채널에 기록되면 소스 채널에서 작성된 순서대로 정확하게 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdca98e95b727ac559547251115701579a131ca6" translate="yes" xml:space="preserve">
          <source>A pipe consists of a pair of channels: A writable &lt;a href=&quot;pipe.sinkchannel&quot;&gt;&lt;code&gt;sink&lt;/code&gt;&lt;/a&gt; channel and a readable &lt;a href=&quot;pipe.sourcechannel&quot;&gt;&lt;code&gt;source&lt;/code&gt;&lt;/a&gt; channel. Once some bytes are written to the sink channel they can be read from the source channel in exactly the order in which they were written.</source>
          <target state="translated">파이프는 한 쌍의 채널, 즉 쓰기 가능한 &lt;a href=&quot;pipe.sinkchannel&quot;&gt; &lt;code&gt;sink&lt;/code&gt; &lt;/a&gt; 채널과 읽을 수있는 &lt;a href=&quot;pipe.sourcechannel&quot;&gt; &lt;code&gt;source&lt;/code&gt; &lt;/a&gt; 채널로 구성됩니다. 싱크 채널에 일부 바이트가 기록되면 기록 된 순서대로 소스 채널에서 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92f903dde552d28725344ada00e056a459750979" translate="yes" xml:space="preserve">
          <source>A piped input stream should be connected to a piped output stream; the piped input stream then provides whatever data bytes are written to the piped output stream.</source>
          <target state="translated">파이프 입력 스트림은 파이프 출력 스트림에 연결해야합니다. 파이프 된 입력 스트림은 파이프 된 출력 스트림에 기록되는 모든 데이터 바이트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="22e3b0ccd9bb00ef03434cdb0908f8ff33f745cf" translate="yes" xml:space="preserve">
          <source>A piped input stream should be connected to a piped output stream; the piped input stream then provides whatever data bytes are written to the piped output stream. Typically, data is read from a &lt;code&gt;PipedInputStream&lt;/code&gt; object by one thread and data is written to the corresponding &lt;code&gt;PipedOutputStream&lt;/code&gt; by some other thread. Attempting to use both objects from a single thread is not recommended, as it may deadlock the thread. The piped input stream contains a buffer, decoupling read operations from write operations, within limits. A pipe is said to be &lt;a id=&quot;BROKEN&quot;&gt; &lt;i&gt;broken&lt;/i&gt; &lt;/a&gt; if a thread that was providing data bytes to the connected piped output stream is no longer alive.</source>
          <target state="translated">파이프 된 입력 스트림은 파이프 된 출력 스트림에 연결되어야합니다. 파이프 된 입력 스트림은 파이프 된 출력 스트림에 기록되는 데이터 바이트를 제공합니다. 일반적으로 한 스레드 는 &lt;code&gt;PipedInputStream&lt;/code&gt; 객체 에서 데이터를 읽고 다른 스레드 는 해당 &lt;code&gt;PipedOutputStream&lt;/code&gt; 에 데이터를 기록합니다 . 단일 스레드에서 두 개체를 모두 사용하려고하면 스레드가 교착 상태가 될 수 있으므로 권장되지 않습니다. 파이프 된 입력 스트림에는 제한 내에서 쓰기 작업에서 읽기 작업을 분리하는 버퍼가 포함됩니다. 연결된 파이프 된 출력 스트림에 데이터 바이트를 제공하는 스레드가 더 이상 살아 있지 않으면 파이프가 &lt;a id=&quot;BROKEN&quot;&gt;&lt;i&gt;끊어진&lt;/i&gt;&lt;/a&gt; 다고합니다. &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="3a7a8e42632b42753977c34a60b9299f0d427714" translate="yes" xml:space="preserve">
          <source>A piped input stream should be connected to a piped output stream; the piped input stream then provides whatever data bytes are written to the piped output stream. Typically, data is read from a &lt;code&gt;PipedInputStream&lt;/code&gt; object by one thread and data is written to the corresponding &lt;code&gt;PipedOutputStream&lt;/code&gt; by some other thread. Attempting to use both objects from a single thread is not recommended, as it may deadlock the thread. The piped input stream contains a buffer, decoupling read operations from write operations, within limits. A pipe is said to be &lt;a name=&quot;BROKEN&quot;&gt; &lt;i&gt;broken&lt;/i&gt; &lt;/a&gt; if a thread that was providing data bytes to the connected piped output stream is no longer alive.</source>
          <target state="translated">파이프 입력 스트림은 파이프 출력 스트림에 연결해야합니다. 파이프 된 입력 스트림은 파이프 된 출력 스트림에 기록되는 모든 데이터 바이트를 제공합니다. 일반적으로 데이터는 하나의 스레드에 의해 &lt;code&gt;PipedInputStream&lt;/code&gt; 객체 에서 읽히고 다른 스레드에 의해 해당 &lt;code&gt;PipedOutputStream&lt;/code&gt; 에 데이터가 기록됩니다 . 스레드를 교착 상태로 만들 수 있으므로 단일 스레드에서 두 개체를 모두 사용하지 않는 것이 좋습니다. 파이프 된 입력 스트림에는 쓰기 작업에서 읽기 작업을 분리하는 버퍼가 포함되어 있습니다. 연결된 파이프 출력 스트림에 데이터 바이트를 제공하는 스레드가 더 이상 존재하지 않으면 파이프가 &lt;a name=&quot;BROKEN&quot;&gt;&lt;i&gt;고장&lt;/i&gt;&lt;/a&gt; 났다고합니다. &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="cd38b92f37a0ada0b98eaec7dc581aa518272443" translate="yes" xml:space="preserve">
          <source>A piped output stream can be connected to a piped input stream to create a communications pipe.</source>
          <target state="translated">파이프 출력 스트림을 파이프 입력 스트림에 연결하여 통신 파이프를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="023fba44ac2abe34fd2b0a51cbb3d847d4f8ef75" translate="yes" xml:space="preserve">
          <source>A piped output stream can be connected to a piped input stream to create a communications pipe. The piped output stream is the sending end of the pipe. Typically, data is written to a &lt;code&gt;PipedOutputStream&lt;/code&gt; object by one thread and data is read from the connected &lt;code&gt;PipedInputStream&lt;/code&gt; by some other thread. Attempting to use both objects from a single thread is not recommended as it may deadlock the thread. The pipe is said to be &lt;a id=&quot;BROKEN&quot;&gt; &lt;i&gt;broken&lt;/i&gt; &lt;/a&gt; if a thread that was reading data bytes from the connected piped input stream is no longer alive.</source>
          <target state="translated">파이프 된 출력 스트림을 파이프 된 입력 스트림에 연결하여 통신 파이프를 만들 수 있습니다. 파이프 된 출력 스트림은 파이프의 송신 끝입니다. 일반적으로 데이터는 한 스레드에 의해 &lt;code&gt;PipedOutputStream&lt;/code&gt; 개체에 기록 되고 데이터는 다른 스레드에 의해 연결된 &lt;code&gt;PipedInputStream&lt;/code&gt; 에서 읽혀집니다 . 단일 스레드에서 두 개체를 모두 사용하려는 시도는 스레드를 교착 상태로 만들 수 있으므로 권장되지 않습니다. 연결된 파이프 된 입력 스트림에서 데이터 바이트를 읽는 스레드가 더 이상 살아 있지 않으면 파이프가 &lt;a id=&quot;BROKEN&quot;&gt;&lt;i&gt;끊어 졌다고&lt;/i&gt;&lt;/a&gt; 합니다. &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="34df202afec2bc7805e61d26ed892f959fd0e25d" translate="yes" xml:space="preserve">
          <source>A piped output stream can be connected to a piped input stream to create a communications pipe. The piped output stream is the sending end of the pipe. Typically, data is written to a &lt;code&gt;PipedOutputStream&lt;/code&gt; object by one thread and data is read from the connected &lt;code&gt;PipedInputStream&lt;/code&gt; by some other thread. Attempting to use both objects from a single thread is not recommended as it may deadlock the thread. The pipe is said to be &lt;a name=&quot;BROKEN&quot;&gt; &lt;i&gt;broken&lt;/i&gt; &lt;/a&gt; if a thread that was reading data bytes from the connected piped input stream is no longer alive.</source>
          <target state="translated">파이프 출력 스트림을 파이프 입력 스트림에 연결하여 통신 파이프를 만들 수 있습니다. 파이프 출력 스트림은 파이프의 전송 끝입니다. 일반적으로 데이터는 하나의 스레드에 의해 &lt;code&gt;PipedOutputStream&lt;/code&gt; 객체에 기록되고 다른 스레드에 의해 연결된 &lt;code&gt;PipedInputStream&lt;/code&gt; 에서 데이터를 읽습니다 . 스레드를 교착 상태로 만들 수 있으므로 단일 스레드에서 두 개체를 모두 사용하지 않는 것이 좋습니다. 연결된 파이프 입력 스트림에서 데이터 바이트를 읽는 스레드가 더 이상 존재하지 않으면 파이프가 &lt;a name=&quot;BROKEN&quot;&gt;&lt;i&gt;끊어 졌다고&lt;/i&gt;&lt;/a&gt; 합니다. &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="798d1201127d1ac81dc17055fb3b4b7964b2be68" translate="yes" xml:space="preserve">
          <source>A pixel value represented as an int.</source>
          <target state="translated">int로 표시되는 픽셀 값입니다.</target>
        </trans-unit>
        <trans-unit id="ef8f66f756ed31cd7f35ff8fc4b2aca2a5dba0b2" translate="yes" xml:space="preserve">
          <source>A place holder for any comments that the code generator may want to include in the generated code.</source>
          <target state="translated">코드 생성기가 생성 된 코드에 포함시키려는 주석에 대한 자리 표시 자입니다.</target>
        </trans-unit>
        <trans-unit id="8b850fa45adaf916f79135c2f78e1f9c565e0fde" translate="yes" xml:space="preserve">
          <source>A place within a document view that represents where things can be inserted into the document model.</source>
          <target state="translated">문서 모델에 항목을 삽입 할 수있는 위치를 나타내는 문서보기 내의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="6a6bedfdfa6a3153774b70b35c4fe9236c060f81" translate="yes" xml:space="preserve">
          <source>A place within a document view that represents where things can be inserted into the document model. A caret has a position in the document referred to as a dot. The dot is where the caret is currently located in the model. There is a second position maintained by the caret that represents the other end of a selection called mark. If there is no selection the dot and mark will be equal. If a selection exists, the two values will be different.</source>
          <target state="translated">문서 모델에 항목을 삽입 할 수있는 위치를 나타내는 문서보기 내의 위치입니다. 캐럿은 문서에서 점이라고하는 위치를가집니다. 점은 현재 모델에서 캐럿이있는 위치입니다. 마크라고하는 선택의 다른 끝을 나타내는 캐럿에 의해 유지되는 두 번째 위치가 있습니다. 선택이 없으면 점과 표시가 동일합니다. 선택 항목이 있으면 두 값이 달라집니다.</target>
        </trans-unit>
        <trans-unit id="de87852618eefb009cf6c0cba1e55255498cb3a9" translate="yes" xml:space="preserve">
          <source>A plain document that maintains no character attributes.</source>
          <target state="translated">문자 속성을 유지하지 않는 일반 문서입니다.</target>
        </trans-unit>
        <trans-unit id="1ed962f7594d9b0aaf2fd92836eb4f4276e2ed1f" translate="yes" xml:space="preserve">
          <source>A plain document that maintains no character attributes. The default element structure for this document is a map of the lines in the text. The Element returned by getDefaultRootElement is a map of the lines, and each child element represents a line. This model does not maintain any character level attributes, but each line can be tagged with an arbitrary set of attributes. Line to offset, and offset to line translations can be quickly performed using the default root element. The structure information of the DocumentEvent's fired by edits will indicate the line structure changes.</source>
          <target state="translated">문자 속성을 유지하지 않는 일반 문서입니다. 이 문서의 기본 요소 구조는 텍스트 줄의 맵입니다. getDefaultRootElement가 반환하는 요소는 선의 맵이며 각 하위 요소는 선을 나타냅니다. 이 모델은 문자 레벨 속성을 유지하지 않지만 각 행에 임의의 속성 세트로 태그를 지정할 수 있습니다. 기본 루트 요소를 사용하여 라인에서 오프셋으로, 오프셋에서 라인으로 변환을 빠르게 수행 할 수 있습니다. 편집에 의해 발생한 DocumentEvent의 구조 정보는 라인 구조 변경을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="aac89ff6b50355b8985ee22ca69704cd3ffe07e5" translate="yes" xml:space="preserve">
          <source>A platform MXBean is a</source>
          <target state="translated">플랫폼 MXBean은</target>
        </trans-unit>
        <trans-unit id="ae7baf93b58a02927f0c5ac6c93762b9d4eb05d5" translate="yes" xml:space="preserve">
          <source>A platform managed object is a &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; for monitoring and managing a component in the Java platform.</source>
          <target state="translated">플랫폼 관리 객체는 Java 플랫폼에서 구성 요소를 모니터링하고 관리하기위한 &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0373a84e67ed7b2fbc747fa93eba7c97a79aeaa4" translate="yes" xml:space="preserve">
          <source>A platform managed object is a &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; for monitoring and managing a component in the Java platform. Each platform managed object has a unique &lt;a href=&quot;managementfactory#MXBean&quot;&gt;object name&lt;/a&gt; for the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;platform MBeanServer&lt;/a&gt; access. All platform MXBeans will implement this interface.</source>
          <target state="translated">플랫폼 관리 객체는 Java 플랫폼에서 구성 요소를 모니터링하고 관리하기위한 &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; 입니다. 각 플랫폼 관리 객체에는 &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;플랫폼 MBeanServer&lt;/a&gt; 액세스에 대한 고유 한 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;객체 이름&lt;/a&gt; 이 있습니다. 모든 플랫폼 MXBean은이 인터페이스를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="8ac220ef46f8e70af4b6538f40d0a40b8ec9c7a3" translate="yes" xml:space="preserve">
          <source>A platform managed object is a &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; for monitoring and managing a component in the Java platform. Each platform managed object has a unique &lt;a href=&quot;managementfactory#MXBean&quot;&gt;object name&lt;/a&gt; for the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;platform MBeanServer&lt;/a&gt; access. All platform MXBeans will implement this interface.</source>
          <target state="translated">플랫폼 관리 객체는 Java 플랫폼에서 구성 요소를 모니터링하고 관리하기위한 &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; 입니다. 각 플랫폼 관리 객체에는 &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;플랫폼 MBeanServer&lt;/a&gt; 액세스를 위한 고유 한 &lt;a href=&quot;managementfactory#MXBean&quot;&gt;객체 이름&lt;/a&gt; 이 있습니다. 모든 플랫폼 MXBeans가이 인터페이스를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="3f604f47af08bbf1b066c304748b624ec493c21d" translate="yes" xml:space="preserve">
          <source>A plug-in for a specific image format may define a subclass of this class, and return objects of that class from the &lt;code&gt;getDefaultWriteParam&lt;/code&gt; method of its &lt;code&gt;ImageWriter&lt;/code&gt; implementation. For example, the built-in JPEG writer plug-in will return instances of &lt;code&gt;javax.imageio.plugins.jpeg.JPEGImageWriteParam&lt;/code&gt;.</source>
          <target state="translated">특정 이미지 형식의 플러그인은이 클래스의 서브 클래스를 정의하고 해당 &lt;code&gt;ImageWriter&lt;/code&gt; 구현 의 &lt;code&gt;getDefaultWriteParam&lt;/code&gt; 메소드 에서 해당 클래스의 오브젝트를 리턴 할 수 있습니다. 예를 들어 내장 JPEG 작성기 플러그인은 &lt;code&gt;javax.imageio.plugins.jpeg.JPEGImageWriteParam&lt;/code&gt; 의 인스턴스를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6a2003419f5141b20190f0b518c601c38a095c5e" translate="yes" xml:space="preserve">
          <source>A plugin can schedule its own GUI update and this method will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">플러그인은 자체 GUI 업데이트를 예약 할 수 있으며이 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="ea60af700e77459ce247da0751be37d919023ae2" translate="yes" xml:space="preserve">
          <source>A point representing a location in &lt;code&gt;(x,y)&lt;/code&gt; coordinate space, specified in integer precision.</source>
          <target state="translated">&lt;code&gt;(x,y)&lt;/code&gt; 좌표 공간 에서 위치를 나타내는 점으로 , 정수 정밀도로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="8605ee167db4cce3e1d0ecff548e20b2c0ad50f7" translate="yes" xml:space="preserve">
          <source>A point within the executing code of the target VM.</source>
          <target state="translated">대상 VM의 실행 코드 내 지점입니다.</target>
        </trans-unit>
        <trans-unit id="9b4ac2a6597d63a8f3129646d77075298ca1b25a" translate="yes" xml:space="preserve">
          <source>A point within the executing code of the target VM. Locations are used to identify the current position of a suspended thread (analogous to an instruction pointer or program counter register in native programs). They are also used to identify the position at which to set a breakpoint.</source>
          <target state="translated">대상 VM의 실행 코드 내 지점입니다. 위치는 일시 중단 된 스레드의 현재 위치를 식별하는 데 사용됩니다 (기본 프로그램의 명령어 포인터 또는 프로그램 카운터 레지스터와 유사 함). 또한 중단 점을 설정할 위치를 식별하는데도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="165a4c2f23d394915829e76b0aa46e76c935e20d" translate="yes" xml:space="preserve">
          <source>A pool of strings, initially empty, is maintained privately by the class &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">초기에 비어있는 문자열 풀은 &lt;code&gt;String&lt;/code&gt; 클래스에 의해 개인적으로 유지 보수됩니다 .</target>
        </trans-unit>
        <trans-unit id="a673c7501ae563e1de03f56a1e3b7dfdbfdd639d" translate="yes" xml:space="preserve">
          <source>A pool of styles and their associated resources.</source>
          <target state="translated">스타일 및 관련 리소스 풀입니다.</target>
        </trans-unit>
        <trans-unit id="30edefc000c3a873b47d52219ee9e65bd567eeb2" translate="yes" xml:space="preserve">
          <source>A pool of styles and their associated resources. This class determines the lifetime of a group of resources by being a container that holds caches for various resources such as font and color that get reused by the various style definitions. This can be shared by multiple documents if desired to maximize the sharing of related resources.</source>
          <target state="translated">스타일 및 관련 리소스 풀입니다. 이 클래스는 다양한 스타일 정의에 의해 재사용되는 글꼴 및 색상과 같은 다양한 리소스에 대한 캐시를 보유하는 컨테이너가되어 리소스 그룹의 수명을 결정합니다. 관련 리소스의 공유를 극대화하기 위해 원하는 경우 여러 문서에서이를 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="128dd75570ce997ed9a753681d7a778b041f2309" translate="yes" xml:space="preserve">
          <source>A pool that is no longer referenced in a program &lt;em&gt;AND&lt;/em&gt; has no remaining threads may be reclaimed (garbage collected) without being explicitly shutdown. You can configure a pool to allow all unused threads to eventually die by setting appropriate keep-alive times, using a lower bound of zero core threads and/or setting &lt;a href=&quot;#allowCoreThreadTimeOut(boolean)&quot;&gt;&lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">더 이상 프로그램에서 참조되지 않는 풀 &lt;em&gt;과&lt;/em&gt; 남아있는 스레드가 명시 적으로 종료하지 않고 (쓰레기 수집) 재생 될 수있다. 적절한 연결 유지 시간을 설정하고 0 코어 스레드의 하한을 사용하거나 &lt;a href=&quot;#allowCoreThreadTimeOut(boolean)&quot;&gt; &lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt; &lt;/a&gt; 설정하여 사용하지 않는 모든 스레드가 결국 죽도록 풀을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b2b519b0588855194323e10504c01bce562add21" translate="yes" xml:space="preserve">
          <source>A pool that is no longer referenced in a program &lt;em&gt;AND&lt;/em&gt; has no remaining threads will be &lt;code&gt;shutdown&lt;/code&gt; automatically. If you would like to ensure that unreferenced pools are reclaimed even if users forget to call &lt;a href=&quot;threadpoolexecutor#shutdown--&quot;&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/a&gt;, then you must arrange that unused threads eventually die, by setting appropriate keep-alive times, using a lower bound of zero core threads and/or setting &lt;a href=&quot;threadpoolexecutor#allowCoreThreadTimeOut-boolean-&quot;&gt;&lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">더 이상 프로그램에서 참조되지 않는 풀 &lt;em&gt;과&lt;/em&gt; 남아있는 스레드가 없을 것이 &lt;code&gt;shutdown&lt;/code&gt; 자동으로. 사용자가 &lt;a href=&quot;threadpoolexecutor#shutdown--&quot;&gt; &lt;code&gt;shutdown()&lt;/code&gt; &lt;/a&gt; 호출을 잊어 버린 경우에도 참조되지 않은 풀을 회수 하려면 0 코어 스레드 및 / 또는 하한을 사용하여 적절한 연결 유지 시간을 설정하여 사용하지 않는 스레드가 결국 종료 되도록해야합니다. 설정 &lt;a href=&quot;threadpoolexecutor#allowCoreThreadTimeOut-boolean-&quot;&gt; &lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c3454b978da77d5d554c43d542e8ad957b271b7" translate="yes" xml:space="preserve">
          <source>A popup menu listener</source>
          <target state="translated">A popup menu listener</target>
        </trans-unit>
        <trans-unit id="edcd72f355b260a04334396db494a19dc24f4e95" translate="yes" xml:space="preserve">
          <source>A popup menu-specific separator.</source>
          <target state="translated">A popup menu-specific separator.</target>
        </trans-unit>
        <trans-unit id="00aa3f03debf8302deefd1c78bcc91a3181918cc" translate="yes" xml:space="preserve">
          <source>A port number of &lt;code&gt;-1&lt;/code&gt; indicates that the calling method is attempting to determine the IP address of the specified host name.</source>
          <target state="translated">포트 번호 &lt;code&gt;-1&lt;/code&gt; 은 호출 방법이 지정된 호스트 이름의 IP 주소를 판별하려고 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f80ddc74f8958b7e436c32feec5a751ce8a69e52" translate="yes" xml:space="preserve">
          <source>A port number of &lt;code&gt;0&lt;/code&gt; creates a socket on any free port.</source>
          <target state="translated">포트 번호 &lt;code&gt;0&lt;/code&gt; 은 사용 가능한 포트에 소켓을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="35615ca4598d9eecf42ce2db729cf259c04879fb" translate="yes" xml:space="preserve">
          <source>A position is a zero-based character offset from the beginning of a file. Negative values (except &lt;a href=&quot;#NOPOS&quot;&gt;&lt;code&gt;NOPOS&lt;/code&gt;&lt;/a&gt;) are not valid positions.</source>
          <target state="translated">A position is a zero-based character offset from the beginning of a file. Negative values (except &lt;a href=&quot;#NOPOS&quot;&gt; &lt;code&gt;NOPOS&lt;/code&gt; &lt;/a&gt;) are not valid positions.</target>
        </trans-unit>
        <trans-unit id="e8b0b7e20e8e674dbd959f23bbf61c572c82ceaa" translate="yes" xml:space="preserve">
          <source>A position is a zero-based character offset from the beginning of a file. Negative values (except &lt;a href=&quot;diagnostic#NOPOS&quot;&gt;&lt;code&gt;NOPOS&lt;/code&gt;&lt;/a&gt;) are not valid positions.</source>
          <target state="translated">위치는 파일 시작부터 0부터 시작하는 문자 오프셋입니다. 음수 값 ( &lt;a href=&quot;diagnostic#NOPOS&quot;&gt; &lt;code&gt;NOPOS&lt;/code&gt; &lt;/a&gt; 제외 )은 유효한 위치가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="c89c7c9a5603a80f43f8c7d681dfea5607b9b851" translate="yes" xml:space="preserve">
          <source>A positive &lt;code&gt;long&lt;/code&gt; value.</source>
          <target state="translated">양수 &lt;code&gt;long&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="e6aaa4c5ca50c97ca7f61bd39daf4cf6ca61d72d" translate="yes" xml:space="preserve">
          <source>A positive value indicates that the cookie will expire after that many seconds have passed. Note that the value is the</source>
          <target state="translated">양수 값은 몇 초가 지난 후에 쿠키가 만료됨을 나타냅니다. 값은</target>
        </trans-unit>
        <trans-unit id="2df7b31d1a8d5aec6270f4dce3668da500b1f018" translate="yes" xml:space="preserve">
          <source>A possible return value for the method &lt;code&gt;DatabaseMetaData.getSQLStateType&lt;/code&gt; which is used to indicate whether the value returned by the method &lt;code&gt;SQLException.getSQLState&lt;/code&gt; is an SQL99 SQLSTATE value.</source>
          <target state="translated">A possible return value for the method &lt;code&gt;DatabaseMetaData.getSQLStateType&lt;/code&gt; which is used to indicate whether the value returned by the method &lt;code&gt;SQLException.getSQLState&lt;/code&gt; is an SQL99 SQLSTATE value.</target>
        </trans-unit>
        <trans-unit id="5b4a1e5fe8b922de16c143764a6574c4e625c57e" translate="yes" xml:space="preserve">
          <source>A possible return value for the method &lt;code&gt;DatabaseMetaData.getSQLStateType&lt;/code&gt; which is used to indicate whether the value returned by the method &lt;code&gt;SQLException.getSQLState&lt;/code&gt; is an SQLSTATE value.</source>
          <target state="translated">A possible return value for the method &lt;code&gt;DatabaseMetaData.getSQLStateType&lt;/code&gt; which is used to indicate whether the value returned by the method &lt;code&gt;SQLException.getSQLState&lt;/code&gt; is an SQLSTATE value.</target>
        </trans-unit>
        <trans-unit id="452198fc0aecb7e1278ac929cf6833f35066c0ea" translate="yes" xml:space="preserve">
          <source>A possible return value for the method &lt;code&gt;DatabaseMetaData.getSQLStateType&lt;/code&gt; which is used to indicate whether the value returned by the method &lt;code&gt;SQLException.getSQLState&lt;/code&gt; is an X/Open (now know as Open Group) SQL CLI SQLSTATE value.</source>
          <target state="translated">A possible return value for the method &lt;code&gt;DatabaseMetaData.getSQLStateType&lt;/code&gt; which is used to indicate whether the value returned by the method &lt;code&gt;SQLException.getSQLState&lt;/code&gt; is an X/Open (now know as Open Group) SQL CLI SQLSTATE value.</target>
        </trans-unit>
        <trans-unit id="7a56fc162b549294ef4b0c0faa6c19c6284ad87e" translate="yes" xml:space="preserve">
          <source>A possible value for column &lt;code&gt;FUNCTION_TYPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getFunctions&lt;/code&gt;.</source>
          <target state="translated">A possible value for column &lt;code&gt;FUNCTION_TYPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getFunctions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="100dbd70591ff171d8bfc0228c514e7e9da492f0" translate="yes" xml:space="preserve">
          <source>A possible value for column &lt;code&gt;NULLABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getTypeInfo&lt;/code&gt;.</source>
          <target state="translated">A possible value for column &lt;code&gt;NULLABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getTypeInfo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b02cbbbc973fa4295b1015de7cf17203bb75b9a4" translate="yes" xml:space="preserve">
          <source>A possible value for column &lt;code&gt;PROCEDURE_TYPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getProcedures&lt;/code&gt;.</source>
          <target state="translated">A possible value for column &lt;code&gt;PROCEDURE_TYPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getProcedures&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bcb0b1dabb9be62218b4e5c443b9758b4e9868f" translate="yes" xml:space="preserve">
          <source>A possible value for column &lt;code&gt;SEARCHABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getTypeInfo&lt;/code&gt;.</source>
          <target state="translated">A possible value for column &lt;code&gt;SEARCHABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getTypeInfo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a58889964f71630bc2cae7b99d6fd5a92cbf3af" translate="yes" xml:space="preserve">
          <source>A possible value for column &lt;code&gt;TYPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getIndexInfo&lt;/code&gt;.</source>
          <target state="translated">A possible value for column &lt;code&gt;TYPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getIndexInfo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fc687b329ad9b99c0f8a7388d7340977ec4456e" translate="yes" xml:space="preserve">
          <source>A possible value for getDirection.</source>
          <target state="translated">A possible value for getDirection.</target>
        </trans-unit>
        <trans-unit id="2ddb28b41a27e1c9714388c0acb6c2c67b642431" translate="yes" xml:space="preserve">
          <source>A possible value for getDirection. This specifies that the data associated with this record should be joined to the fractured element.</source>
          <target state="translated">A possible value for getDirection. This specifies that the data associated with this record should be joined to the fractured element.</target>
        </trans-unit>
        <trans-unit id="5b3df2ffff75c3ff6310c5af77406c7bef332c29" translate="yes" xml:space="preserve">
          <source>A possible value for getDirection. This specifies that the data associated with this record should be joined to what follows it.</source>
          <target state="translated">A possible value for getDirection. This specifies that the data associated with this record should be joined to what follows it.</target>
        </trans-unit>
        <trans-unit id="8dc8011fd65db1f2d2dce2ac1c59be3b3eb9ab86" translate="yes" xml:space="preserve">
          <source>A possible value for getDirection. This specifies that the data associated with this record should be joined to what precedes it.</source>
          <target state="translated">A possible value for getDirection. This specifies that the data associated with this record should be joined to what precedes it.</target>
        </trans-unit>
        <trans-unit id="475c1d945860ac45772fc0f36c58d2bd6a343053" translate="yes" xml:space="preserve">
          <source>A possible value for getDirection. This specifies that the data associated with this record should be used to originate a new element. This would be the normal value.</source>
          <target state="translated">A possible value for getDirection. This specifies that the data associated with this record should be used to originate a new element. This would be the normal value.</target>
        </trans-unit>
        <trans-unit id="ec64a1871853aab070fa5ef804bb284fba4e6ec9" translate="yes" xml:space="preserve">
          <source>A possible value for getType.</source>
          <target state="translated">A possible value for getType.</target>
        </trans-unit>
        <trans-unit id="4903fc095639ffca984ac7afef2796dd6a586ced" translate="yes" xml:space="preserve">
          <source>A possible value for getType. This specifies that this record type is a end tag and represents markup that specifies the end of an element.</source>
          <target state="translated">A possible value for getType. This specifies that this record type is a end tag and represents markup that specifies the end of an element.</target>
        </trans-unit>
        <trans-unit id="7678089a9ba50da5f6de032f98186b261df907f6" translate="yes" xml:space="preserve">
          <source>A possible value for getType. This specifies that this record type is a start tag and represents markup that specifies the start of an element.</source>
          <target state="translated">A possible value for getType. This specifies that this record type is a start tag and represents markup that specifies the start of an element.</target>
        </trans-unit>
        <trans-unit id="5f0018d0639595c4bb7c2523ebe02c5a95694bc0" translate="yes" xml:space="preserve">
          <source>A possible value for getType. This specifies that this record type represents content.</source>
          <target state="translated">A possible value for getType. This specifies that this record type represents content.</target>
        </trans-unit>
        <trans-unit id="7472789d24c842697672c4e16b40f61af0caf1f6" translate="yes" xml:space="preserve">
          <source>A possible value for paragraph alignment.</source>
          <target state="translated">A possible value for paragraph alignment.</target>
        </trans-unit>
        <trans-unit id="d3099a340d2890db545796b73021b1ce61bd46bc" translate="yes" xml:space="preserve">
          <source>A possible value for paragraph alignment. This specifies that extra whitespace should be spread out through the rows of the paragraph with the text lined up with the left and right indent except on the last line which should be aligned to the left.</source>
          <target state="translated">A possible value for paragraph alignment. This specifies that extra whitespace should be spread out through the rows of the paragraph with the text lined up with the left and right indent except on the last line which should be aligned to the left.</target>
        </trans-unit>
        <trans-unit id="1a7c857263f96fb2f49a10115369a52498162793" translate="yes" xml:space="preserve">
          <source>A possible value for paragraph alignment. This specifies that the text is aligned to the center and extra whitespace should be placed equally on the left and right.</source>
          <target state="translated">A possible value for paragraph alignment. This specifies that the text is aligned to the center and extra whitespace should be placed equally on the left and right.</target>
        </trans-unit>
        <trans-unit id="95c5d13ba99cec885ddf1ee6d82e66fe3a60ae52" translate="yes" xml:space="preserve">
          <source>A possible value for paragraph alignment. This specifies that the text is aligned to the left indent and extra whitespace should be placed on the right.</source>
          <target state="translated">A possible value for paragraph alignment. This specifies that the text is aligned to the left indent and extra whitespace should be placed on the right.</target>
        </trans-unit>
        <trans-unit id="3d476ef4a7d2dcff0916df694c0aa7370e322851" translate="yes" xml:space="preserve">
          <source>A possible value for paragraph alignment. This specifies that the text is aligned to the right indent and extra whitespace should be placed on the left.</source>
          <target state="translated">A possible value for paragraph alignment. This specifies that the text is aligned to the right indent and extra whitespace should be placed on the left.</target>
        </trans-unit>
        <trans-unit id="c6fea784ab6411719f4cd697efe55ef4ac2c2d20" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;COLUMN_TYPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; returned by the method &lt;code&gt;getFunctionColumns&lt;/code&gt;.</source>
          <target state="translated">A possible value for the column &lt;code&gt;COLUMN_TYPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; returned by the method &lt;code&gt;getFunctionColumns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cadca5dfbee9e18815b448f81c18f74c3cefd9ed" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;COLUMN_TYPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; returned by the method &lt;code&gt;getProcedureColumns&lt;/code&gt;.</source>
          <target state="translated">A possible value for the column &lt;code&gt;COLUMN_TYPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; returned by the method &lt;code&gt;getProcedureColumns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee0812b81f0dfe80485592f9fec4f66a8cc4d914" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;DEFERRABILITY&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; objects returned by the methods &lt;code&gt;getImportedKeys&lt;/code&gt;, &lt;code&gt;getExportedKeys&lt;/code&gt;, and &lt;code&gt;getCrossReference&lt;/code&gt;.</source>
          <target state="translated">A possible value for the column &lt;code&gt;DEFERRABILITY&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; objects returned by the methods &lt;code&gt;getImportedKeys&lt;/code&gt; , &lt;code&gt;getExportedKeys&lt;/code&gt; , and &lt;code&gt;getCrossReference&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a8b142684ee8c55dd99ad0ff72ebf269db0ba62" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;NULLABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getAttributes&lt;/code&gt;.</source>
          <target state="translated">A possible value for the column &lt;code&gt;NULLABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getAttributes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="edd3147a379827d85946be4645add62ed61f6440" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;NULLABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getFunctionColumns&lt;/code&gt;.</source>
          <target state="translated">A possible value for the column &lt;code&gt;NULLABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getFunctionColumns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a558d8888e81cd6c55f83b0c85fd3039cf19aa6" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;NULLABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getProcedureColumns&lt;/code&gt;.</source>
          <target state="translated">A possible value for the column &lt;code&gt;NULLABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getProcedureColumns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26e07b58bea46495e2abeac577a35becde602c6b" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;NULLABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; returned by the method &lt;code&gt;getColumns&lt;/code&gt;.</source>
          <target state="translated">A possible value for the column &lt;code&gt;NULLABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; returned by the method &lt;code&gt;getColumns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67f4995efedac102ee574536f44ea6ed2660e95f" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;PSEUDO_COLUMN&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getBestRowIdentifier&lt;/code&gt;.</source>
          <target state="translated">A possible value for the column &lt;code&gt;PSEUDO_COLUMN&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getBestRowIdentifier&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5b7973cafe6db61ebabc5f012f99340fb3ded7a" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;PSEUDO_COLUMN&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getVersionColumns&lt;/code&gt;.</source>
          <target state="translated">A possible value for the column &lt;code&gt;PSEUDO_COLUMN&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getVersionColumns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b0376528d84c25c872b46e84e494b5d2367d13d" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;SCOPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getBestRowIdentifier&lt;/code&gt;.</source>
          <target state="translated">A possible value for the column &lt;code&gt;SCOPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getBestRowIdentifier&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6bbfeaf3753056bc518ada3ba369420cc5d1b50" translate="yes" xml:space="preserve">
          <source>A possible value for the columns &lt;code&gt;UPDATE_RULE&lt;/code&gt; and &lt;code&gt;DELETE_RULE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; objects returned by the methods &lt;code&gt;getImportedKeys&lt;/code&gt;, &lt;code&gt;getExportedKeys&lt;/code&gt;, and &lt;code&gt;getCrossReference&lt;/code&gt;.</source>
          <target state="translated">A possible value for the columns &lt;code&gt;UPDATE_RULE&lt;/code&gt; and &lt;code&gt;DELETE_RULE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; objects returned by the methods &lt;code&gt;getImportedKeys&lt;/code&gt; , &lt;code&gt;getExportedKeys&lt;/code&gt; , and &lt;code&gt;getCrossReference&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5742d3d0514030a93b77a55b1d30d4a198749704" translate="yes" xml:space="preserve">
          <source>A possibly empty string describing this configuration</source>
          <target state="translated">A possibly empty string describing this configuration</target>
        </trans-unit>
        <trans-unit id="07ea3a60d8da1b312e18b6b9ce43b92283457262" translate="yes" xml:space="preserve">
          <source>A possibly empty string describing this module layer</source>
          <target state="translated">A possibly empty string describing this module layer</target>
        </trans-unit>
        <trans-unit id="d2705dcae935877bd3fe557ef24f1985c8bb781a" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslClient&lt;/code&gt; created using the parameters supplied. If null, cannot find a &lt;code&gt;SaslClientFactory&lt;/code&gt; that will produce one.</source>
          <target state="translated">제공된 매개 변수를 사용하여 생성 된 null &lt;code&gt;SaslClient&lt;/code&gt; null의 경우, 생성 하는 &lt;code&gt;SaslClientFactory&lt;/code&gt; 를 찾을 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="66f5e7d6cc182293efa2a5e37b7d7d480692c79f" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslClient&lt;/code&gt; created using the parameters supplied. If null, this factory cannot produce a &lt;code&gt;SaslClient&lt;/code&gt; using the parameters supplied.</source>
          <target state="translated">제공된 매개 변수를 사용하여 생성 된 null &lt;code&gt;SaslClient&lt;/code&gt; null의 경우,이 팩토리는, 지정된 파라미터를 사용해 &lt;code&gt;SaslClient&lt;/code&gt; 를 생성 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="0b05743f60c3de6a64646f3c940516bebe032910" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslServer&lt;/code&gt; created using the parameters supplied. If null, cannot find a &lt;code&gt;SaslServerFactory&lt;/code&gt; that will produce one.</source>
          <target state="translated">제공된 매개 변수를 사용하여 작성된 널 &lt;code&gt;SaslServer&lt;/code&gt; 입니다. null의 경우, 생성 하는 &lt;code&gt;SaslServerFactory&lt;/code&gt; 를 찾을 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="91226546474985c1813acbe9067ef1cb7e39da27" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslServer&lt;/code&gt; created using the parameters supplied. If null, this factory cannot produce a &lt;code&gt;SaslServer&lt;/code&gt; using the parameters supplied.</source>
          <target state="translated">제공된 매개 변수를 사용하여 작성된 널 &lt;code&gt;SaslServer&lt;/code&gt; 입니다. null의 경우,이 팩토리는 제공된 파라미터를 사용해 &lt;code&gt;SaslServer&lt;/code&gt; 를 생성 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="1635e9f91cb5a2fc226360f1e119ac246ca5d453" translate="yes" xml:space="preserve">
          <source>A possibly null Control.</source>
          <target state="translated">null 가능성이있는 Control</target>
        </trans-unit>
        <trans-unit id="62cc797a2835818cc3df56acf7ab8b6325cb3231" translate="yes" xml:space="preserve">
          <source>A possibly null array of &lt;code&gt;Control&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;Control&lt;/code&gt; 개체 의 null 배열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3eaf96564ec411ef60ad1fd3b372e06ddcd7849e" translate="yes" xml:space="preserve">
          <source>A possibly null array of controls. If null, the previous method invoked on this context did not produce any controls.</source>
          <target state="translated">가능한 null 배열의 컨트롤 null의 경우,이 문맥으로 호출 된 이전의 메소드는 컨트롤을 생성하지 않았다</target>
        </trans-unit>
        <trans-unit id="10560282de64ca60d43ecb4532547224bfd08f41" translate="yes" xml:space="preserve">
          <source>A possibly null array of referrals, each of which is represented by a URL string. If null, no referral was sent by the server.</source>
          <target state="translated">null의 가능성이있는 참조 배열로, 각각은 URL 문자열로 표시됩니다. 널인 경우, 서버가 조회를 보내지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="548f5fe8a9ae8019a49683831f0b805ce09abf74" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the ASN.1 BER encoded contents of the LDAP &lt;code&gt;ExtendedRequest.requestValue&lt;/code&gt; component.</source>
          <target state="translated">LDAP &lt;code&gt;ExtendedRequest.requestValue&lt;/code&gt; 구성 요소 의 ASN.1 BER 인코딩 컨텐츠를 나타내는 null 바이트 배열 입니다.</target>
        </trans-unit>
        <trans-unit id="92c9a272a4d931c152db068d54ac6953b393b197" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the ASN.1 BER encoded contents of the LDAP &lt;code&gt;ExtendedResponse.response&lt;/code&gt; component.</source>
          <target state="translated">LDAP &lt;code&gt;ExtendedResponse.response&lt;/code&gt; 구성 요소 의 ASN.1 BER 인코딩 컨텐츠를 나타내는 null 바이트 배열 입니다.</target>
        </trans-unit>
        <trans-unit id="ff87ab073a8cd5077c343bb00b812a40971e003c" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the ASN.1 BER encoded value of the LDAP control.</source>
          <target state="translated">LDAP 컨트롤의 ASN.1 BER 인코딩 값을 나타내는 null 바이트 배열입니다.</target>
        </trans-unit>
        <trans-unit id="3cb6aa987b78522dc1bd9466de9d784c88462a4d" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the control's ASN.1 BER encoded value. It is not cloned - any changes to the returned value will affect the contents of the control.</source>
          <target state="translated">컨트롤의 ASN.1 BER 인코딩 값을 나타내는 null 바이트 배열입니다. 복제되지 않습니다. 반환 된 값을 변경하면 컨트롤의 내용에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="6f4c5a21811c6ddca2738adff04cd26dfcb12c23" translate="yes" xml:space="preserve">
          <source>A possibly null exception as constructed using information sent by the server. If null, a &quot;success&quot; status was indicated by the server.</source>
          <target state="translated">서버가 보낸 정보를 사용하여 생성 된 null 예외 일 수 있습니다. 널인 경우, &quot;성공&quot;상태가 서버에 의해 표시되었습니다.</target>
        </trans-unit>
        <trans-unit id="0f7fa00e800c3389f9a5a0fd2fa9263309a7211d" translate="yes" xml:space="preserve">
          <source>A possibly null object identifier string representing the LDAP &lt;code&gt;ExtendedResponse.responseName&lt;/code&gt; component.</source>
          <target state="translated">LDAP &lt;code&gt;ExtendedResponse.responseName&lt;/code&gt; 구성 요소를 나타내는 null 개체 식별자 문자열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f670ba264fb7faa8a1f0ec6bd95fc42234981c4c" translate="yes" xml:space="preserve">
          <source>A possibly null object representing one of the attribute's value. It is null if the attribute's value is null.</source>
          <target state="translated">속성 값 중 하나를 나타내는 null 개체 일 수 있습니다. 속성 값이 null 인 경우는 null</target>
        </trans-unit>
        <trans-unit id="75864d255d1129c4e9ba827299b5b1f56ddbef6d" translate="yes" xml:space="preserve">
          <source>A possibly null server-generated cookie. It is not cloned - any changes to the cookie will update the control's state and thus are not recommended.</source>
          <target state="translated">서버에서 생성 된 쿠키 일 수 있습니다. 쿠키는 복제되지 않습니다. 쿠키를 변경하면 컨트롤의 상태가 업데이트되므로 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d289ab04881c9cc6e50eeaa00f1d309da5a304b2" translate="yes" xml:space="preserve">
          <source>A possibly null string containing class name of object bound.</source>
          <target state="translated">객체 바운드의 클래스 이름을 포함하는 null 문자열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba4bd9394d23efbf4a0ec852e64071b2ced6cf44" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable list of this layer's parents</source>
          <target state="translated">이 레이어의 부모에 대한 수정 불가능한 비어있을 수있는 목록</target>
        </trans-unit>
        <trans-unit id="09d313ea042cccab3d2d68f091298db7e73ec824" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable list of this parent configurations</source>
          <target state="translated">A possibly-empty unmodifiable list of this parent configurations</target>
        </trans-unit>
        <trans-unit id="a7e954e6445a7dc20bc29d02db865e4a020dba9b" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of &lt;a href=&quot;moduledescriptor.requires&quot;&gt;&lt;code&gt;ModuleDescriptor.Requires&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="translated">A possibly-empty unmodifiable set of &lt;a href=&quot;moduledescriptor.requires&quot;&gt; &lt;code&gt;ModuleDescriptor.Requires&lt;/code&gt; &lt;/a&gt; objects</target>
        </trans-unit>
        <trans-unit id="413d05c453d600fec510ccfce320f22a0fc19240" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of exported packages</source>
          <target state="translated">A possibly-empty unmodifiable set of exported packages</target>
        </trans-unit>
        <trans-unit id="7a1d1eadc95544c75c66396a7ffeea7cb275b20e" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of modifiers</source>
          <target state="translated">A possibly-empty unmodifiable set of modifiers</target>
        </trans-unit>
        <trans-unit id="b1700d612b6d632f6c1ab15120592579b1226e7a" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of open packages</source>
          <target state="translated">A possibly-empty unmodifiable set of open packages</target>
        </trans-unit>
        <trans-unit id="d020f8ff0123f784ba9c0e600c6ddc9e32f7a826" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of resolved modules that this resolved module reads</source>
          <target state="translated">A possibly-empty unmodifiable set of resolved modules that this resolved module reads</target>
        </trans-unit>
        <trans-unit id="0da34a73ce39bfee2724ccd6220ae788d2e58338" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of the fully qualified class names of the service types used</source>
          <target state="translated">A possibly-empty unmodifiable set of the fully qualified class names of the service types used</target>
        </trans-unit>
        <trans-unit id="34264365c707c54406bd8c9a5de69616751ebf4f" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of the modules in this layer</source>
          <target state="translated">A possibly-empty unmodifiable set of the modules in this layer</target>
        </trans-unit>
        <trans-unit id="7fc162c8aaffb72dd0844c5bb94e7066643a3e5a" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of the packages in the module</source>
          <target state="translated">A possibly-empty unmodifiable set of the packages in the module</target>
        </trans-unit>
        <trans-unit id="daf079b0a8ace37d2ca0a3a14448ee8a4c2346d3" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of the resolved modules in this configuration</source>
          <target state="translated">A possibly-empty unmodifiable set of the resolved modules in this configuration</target>
        </trans-unit>
        <trans-unit id="f338409feb2fbcb63d411bfd4c693f31bbca7bb3" translate="yes" xml:space="preserve">
          <source>A possibly-null array of controls. null means no connect controls have been set for this context.</source>
          <target state="translated">가능한 null 배열의 컨트롤. null은이 컨텍스트에 대해 연결 제어가 설정되지 않았 음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="7fa4b5a7bed1fba6b58d93ff7e5647f0aeb57e8f" translate="yes" xml:space="preserve">
          <source>A possibly-null array of controls. null means no request controls have been set for this context.</source>
          <target state="translated">가능한 null 배열의 컨트롤. null은이 컨텍스트에 요청 제어가 설정되지 않았 음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="730ac49d56e8e1ccd13312ac160e86633d88ab3a" translate="yes" xml:space="preserve">
          <source>A prefix can only be bound to a &lt;strong&gt;single&lt;/strong&gt; Namespace URI in the current scope.</source>
          <target state="translated">A prefix can only be bound to a &lt;strong&gt;single&lt;/strong&gt; Namespace URI in the current scope.</target>
        </trans-unit>
        <trans-unit id="f31dbe96d4db13e76c30f32678d5834aac89d5e8" translate="yes" xml:space="preserve">
          <source>A principal identified by a distinguished name as specified by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253에&lt;/a&gt; 지정된 고유 이름으로 식별되는 프린시 펄 .</target>
        </trans-unit>
        <trans-unit id="2cd88c57d871d10e3857456422efd3a1926101bc" translate="yes" xml:space="preserve">
          <source>A printable area attribute's values are stored internally as integers in units of micrometers (&amp;micro;m), where 1 micrometer = 10&lt;sup&gt;-6&lt;/sup&gt; meter = 1/1000 millimeter = 1/25400 inch. This permits dimensions to be represented exactly to a precision of 1/1000 mm (= 1 &amp;micro;m) or 1/100 inch (= 254 &amp;micro;m). If fractional inches are expressed in negative powers of two, this permits dimensions to be represented exactly to a precision of 1/8 inch (= 3175 &amp;micro;m) but not 1/16 inch (because 1/16 inch does not equal an integral number of &amp;micro;m).</source>
          <target state="translated">인쇄 가능 영역 속성의 값은 1 마이크로 미터 = 10 &lt;sup&gt;-6&lt;/sup&gt; 미터 = 1/1000 밀리미터 = 1/25400 인치 인 마이크로 미터 (&amp;micro;m) 단위로 내부적으로 정수로 저장됩니다 . 따라서 치수를 1 / 1000mm (= 1&amp;micro;m) 또는 1/100 인치 (= 254&amp;micro;m)의 정밀도로 정확하게 표현할 수 있습니다. 분수 인치를 2의 음의 거듭 제곱으로 표현하면 치수가 1/8 인치 (= 3175 &amp;micro;m)의 정밀도로 정확하게 표현 될 수 있지만 1/16 인치는 아닙니다 (1/1 인치는 정수의 정수와 같지 않기 때문) &amp;micro;m).</target>
        </trans-unit>
        <trans-unit id="be66df4e815359ec0b5eef7a696fe6041abe763a" translate="yes" xml:space="preserve">
          <source>A printable character: &lt;code&gt;[\p{Graph}\p{Blank}&amp;amp;&amp;amp;[^\p{Cntrl}]]&lt;/code&gt;</source>
          <target state="translated">인쇄 가능한 문자 : &lt;code&gt;[\p{Graph}\p{Blank}&amp;amp;&amp;amp;[^\p{Cntrl}]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8c4ade06a319d7219ac2d5f3da9ef84eb8f62b6" translate="yes" xml:space="preserve">
          <source>A printable character: &lt;code&gt;[\p{Graph}\x20]&lt;/code&gt;</source>
          <target state="translated">인쇄 가능한 문자 : &lt;code&gt;[\p{Graph}\x20]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b011c8875e9789d560b27f5f5612aab64a93b938" translate="yes" xml:space="preserve">
          <source>A printing client application will typically not need to use all the printing attribute classes in package javax.print.attribute.standard, just the ones that pertain to the application.</source>
          <target state="translated">인쇄 클라이언트 응용 프로그램은 일반적으로 패키지 javax.print.attribute.standard의 모든 인쇄 속성 클래스를 사용할 필요는 없으며 응용 프로그램과 관련된 클래스 만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="662af875884ebefa284b1a1e34a6e15368a2d6e9" translate="yes" xml:space="preserve">
          <source>A priority queue is unbounded, but has an internal</source>
          <target state="translated">우선 순위 큐는 제한이 없지만 내부가 있습니다.</target>
        </trans-unit>
        <trans-unit id="381989bf2d570f7f1f4f7b1b95948985c86b2aae" translate="yes" xml:space="preserve">
          <source>A private key.</source>
          <target state="translated">개인 키.</target>
        </trans-unit>
        <trans-unit id="80cd6ff76b285191349b9609ddca29ae75c86455" translate="yes" xml:space="preserve">
          <source>A private key. The purpose of this interface is to group (and provide type safety for) all private key interfaces.</source>
          <target state="translated">개인 키. 이 인터페이스의 목적은 모든 개인 키 인터페이스를 그룹화 (및 유형 안전성을 제공)하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="314a966a0b9cf0a0fbba464d660ae3bb061d0e3e" translate="yes" xml:space="preserve">
          <source>A problem with mapping &lt;em&gt;from&lt;/em&gt; Java types &lt;em&gt;to&lt;/em&gt; Open types is signaled with an &lt;a href=&quot;openmbean/opendataexception&quot;&gt;&lt;code&gt;OpenDataException&lt;/code&gt;&lt;/a&gt;. This can happen when an MXBean interface is being analyzed, for example if it references a type like &lt;a href=&quot;../../../java.base/java/util/random&quot;&gt;&lt;code&gt;java.util.Random&lt;/code&gt;&lt;/a&gt; that has no getters. Or it can happen when an instance is being converted (a return value from a method in an MXBean or a parameter to a method in an MXBean proxy), for example when converting from &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; to &lt;code&gt;
      String[]&lt;/code&gt; if the &lt;code&gt;SortedSet&lt;/code&gt; has a non-null &lt;code&gt;
      Comparator&lt;/code&gt;.</source>
          <target state="translated">A problem with mapping &lt;em&gt;from&lt;/em&gt; Java types &lt;em&gt;to&lt;/em&gt; Open types is signaled with an &lt;a href=&quot;openmbean/opendataexception&quot;&gt; &lt;code&gt;OpenDataException&lt;/code&gt; &lt;/a&gt;. This can happen when an MXBean interface is being analyzed, for example if it references a type like &lt;a href=&quot;../../../java.base/java/util/random&quot;&gt; &lt;code&gt;java.util.Random&lt;/code&gt; &lt;/a&gt; that has no getters. Or it can happen when an instance is being converted (a return value from a method in an MXBean or a parameter to a method in an MXBean proxy), for example when converting from &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; to &lt;code&gt; String[]&lt;/code&gt; if the &lt;code&gt;SortedSet&lt;/code&gt; has a non-null &lt;code&gt; Comparator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18e6596f2d36107df44bd1e141716f0c3c917709" translate="yes" xml:space="preserve">
          <source>A problem with mapping &lt;em&gt;from&lt;/em&gt; Java types &lt;em&gt;to&lt;/em&gt; Open types is signaled with an &lt;a href=&quot;openmbean/opendataexception&quot;&gt;&lt;code&gt;OpenDataException&lt;/code&gt;&lt;/a&gt;. This can happen when an MXBean interface is being analyzed, for example if it references a type like &lt;a href=&quot;../../java/util/random&quot;&gt;&lt;code&gt;java.util.Random&lt;/code&gt;&lt;/a&gt; that has no getters. Or it can happen when an instance is being converted (a return value from a method in an MXBean or a parameter to a method in an MXBean proxy), for example when converting from &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; to &lt;code&gt;String[]&lt;/code&gt; if the &lt;code&gt;SortedSet&lt;/code&gt; has a non-null &lt;code&gt;Comparator&lt;/code&gt;.</source>
          <target state="translated">매핑 문제 &lt;em&gt;에서&lt;/em&gt; Java 유형 &lt;em&gt;에&lt;/em&gt; 열기 종류는 함께 신호입니다 &lt;a href=&quot;openmbean/opendataexception&quot;&gt; &lt;code&gt;OpenDataException&lt;/code&gt; 입니다&lt;/a&gt; . MXBean 인터페이스를 분석 할 때 (예 : getter가없는 &lt;a href=&quot;../../java/util/random&quot;&gt; &lt;code&gt;java.util.Random&lt;/code&gt; &lt;/a&gt; 과 같은 유형을 참조하는 경우) 발생할 수 있습니다. 변환 할 때, 인스턴스, 예를 들어 (MXBean에있는 방법 또는 MXBean의 프록시에있어서의 파라미터로부터의 리턴 값)로 변환 될 때 아니면 일어날 수 &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; 에 &lt;code&gt;String[]&lt;/code&gt; 경우 생성 &lt;code&gt;SortedSet&lt;/code&gt; A가 들어 널이 아닌 &lt;code&gt;Comparator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="593665f64816caa9d2b947ba33063505f3f9d016" translate="yes" xml:space="preserve">
          <source>A problem with mapping &lt;em&gt;to&lt;/em&gt; Java types &lt;em&gt;from&lt;/em&gt; Open types is signaled with an &lt;a href=&quot;../../../java.base/java/io/invalidobjectexception&quot;&gt;&lt;code&gt;InvalidObjectException&lt;/code&gt;&lt;/a&gt;. This can happen when an MXBean interface is being analyzed, for example if it references a type that is not &lt;em&gt;reconstructible&lt;/em&gt; according to the rules above, in a context where a reconstructible type is required. Or it can happen when an instance is being converted (a parameter to a method in an MXBean or a return value from a method in an MXBean proxy), for example from a String to an Enum if there is no Enum constant with that name.</source>
          <target state="translated">A problem with mapping &lt;em&gt;to&lt;/em&gt; Java types &lt;em&gt;from&lt;/em&gt; Open types is signaled with an &lt;a href=&quot;../../../java.base/java/io/invalidobjectexception&quot;&gt; &lt;code&gt;InvalidObjectException&lt;/code&gt; &lt;/a&gt;. This can happen when an MXBean interface is being analyzed, for example if it references a type that is not &lt;em&gt;reconstructible&lt;/em&gt; according to the rules above, in a context where a reconstructible type is required. Or it can happen when an instance is being converted (a parameter to a method in an MXBean or a return value from a method in an MXBean proxy), for example from a String to an Enum if there is no Enum constant with that name.</target>
        </trans-unit>
        <trans-unit id="608ca4427acb530ce5f60d17ee3ff5bf4f6bb7c2" translate="yes" xml:space="preserve">
          <source>A problem with mapping &lt;em&gt;to&lt;/em&gt; Java types &lt;em&gt;from&lt;/em&gt; Open types is signaled with an &lt;a href=&quot;../../java/io/invalidobjectexception&quot;&gt;&lt;code&gt;InvalidObjectException&lt;/code&gt;&lt;/a&gt;. This can happen when an MXBean interface is being analyzed, for example if it references a type that is not &lt;em&gt;reconstructible&lt;/em&gt; according to the rules above, in a context where a reconstructible type is required. Or it can happen when an instance is being converted (a parameter to a method in an MXBean or a return value from a method in an MXBean proxy), for example from a String to an Enum if there is no Enum constant with that name.</source>
          <target state="translated">매핑 문제 &lt;em&gt;에 대한&lt;/em&gt; Java 유형 &lt;em&gt;에서&lt;/em&gt; 열기 종류는 함께 신호입니다 &lt;a href=&quot;../../java/io/invalidobjectexception&quot;&gt; &lt;code&gt;InvalidObjectException&lt;/code&gt; 를&lt;/a&gt; . MXBean 인터페이스를 분석 할 때 (예 : 재구성 가능한 유형이 필요한 상황에서 위의 규칙에 따라 &lt;em&gt;재구성&lt;/em&gt; 할 수 없는 유형을 참조하는 경우) 발생할 수 있습니다. 또는 인스턴스가 변환 될 때 (MXBean의 메소드로 매개 변수 또는 MXBean 프록시의 메소드에서 리턴 값), 예를 들어 해당 이름의 Enum 상수가없는 경우 String에서 Enum으로 변환 될 때 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71b8d17d460b2ad2e4811d7dcf631d6c45589003" translate="yes" xml:space="preserve">
          <source>A processor that checks an XML document against &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A processor that checks an XML document against &lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0f8e10c349007fd0c3629a3ada34d39c6cc98f87" translate="yes" xml:space="preserve">
          <source>A producer of items (and related control messages) received by Subscribers.</source>
          <target state="translated">A producer of items (and related control messages) received by Subscribers.</target>
        </trans-unit>
        <trans-unit id="7a0fa7687dc37746f505813275fed11b61db657b" translate="yes" xml:space="preserve">
          <source>A producer of items (and related control messages) received by Subscribers. Each current &lt;a href=&quot;flow.subscriber&quot;&gt;&lt;code&gt;Flow.Subscriber&lt;/code&gt;&lt;/a&gt; receives the same items (via method &lt;code&gt;onNext&lt;/code&gt;) in the same order, unless drops or errors are encountered. If a Publisher encounters an error that does not allow items to be issued to a Subscriber, that Subscriber receives &lt;code&gt;onError&lt;/code&gt;, and then receives no further messages. Otherwise, when it is known that no further messages will be issued to it, a subscriber receives &lt;code&gt;
 onComplete&lt;/code&gt;. Publishers ensure that Subscriber method invocations for each subscription are strictly ordered in &lt;a href=&quot;package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;happens-before&lt;/i&gt;&lt;/a&gt; order.</source>
          <target state="translated">A producer of items (and related control messages) received by Subscribers. Each current &lt;a href=&quot;flow.subscriber&quot;&gt; &lt;code&gt;Flow.Subscriber&lt;/code&gt; &lt;/a&gt; receives the same items (via method &lt;code&gt;onNext&lt;/code&gt; ) in the same order, unless drops or errors are encountered. If a Publisher encounters an error that does not allow items to be issued to a Subscriber, that Subscriber receives &lt;code&gt;onError&lt;/code&gt; , and then receives no further messages. Otherwise, when it is known that no further messages will be issued to it, a subscriber receives &lt;code&gt; onComplete&lt;/code&gt; . Publishers ensure that Subscriber method invocations for each subscription are strictly ordered in &lt;a href=&quot;package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;happens-before&lt;/i&gt;&lt;/a&gt; order.</target>
        </trans-unit>
        <trans-unit id="863a7b5ff487b000efd9430f609d5071a7879a4c" translate="yes" xml:space="preserve">
          <source>A product specific name that this resource should be mapped to. The name of this resource, as defined by the &lt;code&gt;name&lt;/code&gt; element or defaulted, is a name that is local to the application component using the resource. (It's a name in the JNDI &lt;code&gt;java:comp/env&lt;/code&gt; namespace.) Many application servers provide a way to map these local names to names of resources known to the application server. This mapped name is often a</source>
          <target state="translated">이 자원이 맵핑되어야하는 제품 특정 이름. &lt;code&gt;name&lt;/code&gt; 요소에 의해 정의 되거나 기본값 으로 지정된이 자원의 이름은 자원 을 사용하는 응용 프로그램 구성 요소의 로컬 이름입니다. (JNDI &lt;code&gt;java:comp/env&lt;/code&gt; 네임 스페이스의 이름입니다.) 많은 애플리케이션 서버는 이러한 로컬 이름을 애플리케이션 서버에 알려진 자원의 이름에 맵핑하는 방법을 제공합니다. 이 매핑 된 이름은 종종</target>
        </trans-unit>
        <trans-unit id="7c8aa32e24563541016e30b5439a78f801db23c1" translate="yes" xml:space="preserve">
          <source>A program element annotated &lt;code&gt;@Deprecated&lt;/code&gt; is one that programmers are discouraged from using.</source>
          <target state="translated">A program element annotated &lt;code&gt;@Deprecated&lt;/code&gt; is one that programmers are discouraged from using.</target>
        </trans-unit>
        <trans-unit id="6639fdc9658de44d820953822aa829a29c5f54f0" translate="yes" xml:space="preserve">
          <source>A program element annotated &lt;code&gt;@Deprecated&lt;/code&gt; is one that programmers are discouraged from using. An element may be deprecated for any of several reasons, for example, its usage is likely to lead to errors; it may be changed incompatibly or removed in a future version; it has been superseded by a newer, usually preferable alternative; or it is obsolete.</source>
          <target state="translated">A program element annotated &lt;code&gt;@Deprecated&lt;/code&gt; is one that programmers are discouraged from using. An element may be deprecated for any of several reasons, for example, its usage is likely to lead to errors; it may be changed incompatibly or removed in a future version; it has been superseded by a newer, usually preferable alternative; or it is obsolete.</target>
        </trans-unit>
        <trans-unit id="8804679a0fee9a658ffe4f33c5d2ed6e2e4fd43d" translate="yes" xml:space="preserve">
          <source>A program element annotated @Deprecated is one that programmers are discouraged from using, typically because it is dangerous, or because a better alternative exists.</source>
          <target state="translated">@Deprecated로 주석이 달린 프로그램 요소는 프로그래머가 일반적으로 위험하거나 더 나은 대안이 있기 때문에 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c4be47f7b0b0635e030d8f171a0806ef7b2856b7" translate="yes" xml:space="preserve">
          <source>A program element annotated @Deprecated is one that programmers are discouraged from using, typically because it is dangerous, or because a better alternative exists. Compilers warn when a deprecated program element is used or overridden in non-deprecated code.</source>
          <target state="translated">@Deprecated로 주석이 달린 프로그램 요소는 프로그래머가 일반적으로 위험하거나 더 나은 대안이 있기 때문에 사용하지 않는 것이 좋습니다. 더 이상 사용되지 않는 프로그램 요소가 사용되지 않거나 사용되지 않는 코드에서 재정의되면 컴파일러에서 경고합니다.</target>
        </trans-unit>
        <trans-unit id="057bf28839a5c9afb90f791cbbdb5e59889e92eb" translate="yes" xml:space="preserve">
          <source>A program may request to be notified of changes in an object's reachability by &lt;em&gt;registering&lt;/em&gt; an appropriate reference object with a &lt;em&gt;reference queue&lt;/em&gt; at the time the reference object is created. Some time after the garbage collector determines that the reachability of the referent has changed to the value corresponding to the type of the reference, it will clear the reference and add it to the associated queue. At this point, the reference is considered to be &lt;em&gt;enqueued&lt;/em&gt;. The program may remove references from a queue either by polling or by blocking until a reference becomes available. Reference queues are implemented by the &lt;a href=&quot;referencequeue&quot;&gt;&lt;code&gt;ReferenceQueue&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">프로그램은 참조 개체가 생성 될 때 &lt;em&gt;참조 큐&lt;/em&gt; 에 적절한 참조 개체를 &lt;em&gt;등록&lt;/em&gt; 하여 개체의 도달 가능성 변경에 대한 알림을 요청할 수 있습니다 . 가비지 수집기가 참조 대상의 도달 가능성이 참조 유형에 해당하는 값으로 변경되었음을 확인한 후 얼마 후에 참조를 지우고 연결된 큐에 추가합니다. 이 시점에서 참조는 &lt;em&gt;대기열에 포함 된&lt;/em&gt; 것으로 간주 &lt;em&gt;됩니다&lt;/em&gt; . 프로그램은 참조를 사용할 수있을 때까지 폴링하거나 차단하여 대기열에서 참조를 제거 할 수 있습니다. 참조 대기열은 &lt;a href=&quot;referencequeue&quot;&gt; &lt;code&gt;ReferenceQueue&lt;/code&gt; &lt;/a&gt; 클래스에 의해 구현됩니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2de66be4819f2c9dcd7bc09e76cc228c9194121b" translate="yes" xml:space="preserve">
          <source>A program would use then these classes as follows:</source>
          <target state="translated">프로그램은 다음과 같이 이러한 클래스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f199fddb7cb98fec44ccf9e86b3406817feca422" translate="yes" xml:space="preserve">
          <source>A programmer assertion that the body of the annotated method or constructor does not perform potentially unsafe operations on its varargs parameter.</source>
          <target state="translated">어노테이션이있는 메소드 또는 생성자의 본문이 varargs 매개 변수에 대해 잠재적으로 안전하지 않은 조작을 수행하지 않는다는 프로그래머의 주장.</target>
        </trans-unit>
        <trans-unit id="8f5e77f61722434f91b66e7d1bdf03aa10ba7a2a" translate="yes" xml:space="preserve">
          <source>A programmer assertion that the body of the annotated method or constructor does not perform potentially unsafe operations on its varargs parameter. Applying this annotation to a method or constructor suppresses unchecked warnings about a</source>
          <target state="translated">어노테이션이있는 메소드 또는 생성자의 본문이 varargs 매개 변수에 대해 잠재적으로 안전하지 않은 조작을 수행하지 않는다는 프로그래머의 주장. 이 어노테이션을 메소드 또는 생성자에 적용하면 확인되지 않은 경고가 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d7381f2d94724d8a0fdcfa438a2beb549f2fdf9e" translate="yes" xml:space="preserve">
          <source>A programmer defines the mapping by implementing the interface &lt;code&gt;SQLData&lt;/code&gt;. For example, if an SQL structured type named AUTHORS has the attributes NAME, TITLE, and PUBLISHER, it could be mapped to a Java class named Authors. The Authors class could have the fields name, title, and publisher, to which the attributes of AUTHORS are mapped. In such a case, the implementation of &lt;code&gt;SQLData&lt;/code&gt; could look like the following:</source>
          <target state="translated">A programmer defines the mapping by implementing the interface &lt;code&gt;SQLData&lt;/code&gt; . For example, if an SQL structured type named AUTHORS has the attributes NAME, TITLE, and PUBLISHER, it could be mapped to a Java class named Authors. The Authors class could have the fields name, title, and publisher, to which the attributes of AUTHORS are mapped. In such a case, the implementation of &lt;code&gt;SQLData&lt;/code&gt; could look like the following:</target>
        </trans-unit>
        <trans-unit id="cc64b915a35a6cb9d915399919c9c32d2a394819" translate="yes" xml:space="preserve">
          <source>A progressive pass is a re-encoding of the entire image, generally at progressively higher effective resolutions, but requiring greater transmission bandwidth. The most common use of progressive encoding is found in the JPEG format, where successive passes include more detailed representations of the high-frequency image content.</source>
          <target state="translated">프로그레시브 패스는 일반적으로 점진적으로 더 높은 유효 해상도로 더 큰 전송 대역폭을 요구하는 전체 이미지의 재 인코딩입니다. 프로그레시브 인코딩의 가장 일반적인 용도는 JPEG 형식으로 제공되며, 연속적인 패스에는 고주파 이미지 내용에 대한 자세한 표현이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e86c918437b0ef4c87896f835e92bc1ba37fb22a" translate="yes" xml:space="preserve">
          <source>A property &quot;&amp;lt;logger&amp;gt;.handlers&quot;. This defines a whitespace or comma separated list of class names for handlers classes to load and register as handlers to the specified logger. Each class name must be for a Handler class which has a default constructor. Note that these Handlers may be created lazily, when they are first used.</source>
          <target state="translated">&quot;&amp;lt;logger&amp;gt; .handlers&quot;속성입니다. 핸들러 클래스가 지정된 로거에 핸들러로로드 및 등록 할 공백 또는 쉼표로 구분 된 클래스 이름 목록을 정의합니다. 각 클래스 이름은 기본 생성자가있는 핸들러 클래스 여야합니다. 이러한 핸들러는 처음 사용될 때 느리게 생성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23a2e445ef32408e0086baf8f15b6adb3e3487e5" translate="yes" xml:space="preserve">
          <source>A property &quot;&amp;lt;logger&amp;gt;.handlers.ensureCloseOnReset&quot;. This defines a a boolean value. If &quot;&amp;lt;logger&amp;gt;.handlers&quot; is not defined or is empty, this property is ignored. Otherwise it defaults to &lt;code&gt;true&lt;/code&gt;. When the value is &lt;code&gt;true&lt;/code&gt;, the handlers associated with the logger are guaranteed to be closed on &lt;a href=&quot;#reset()&quot;&gt;reset()&lt;/a&gt; and shutdown. This can be turned off by explicitly setting &quot;&amp;lt;logger&amp;gt;.handlers.ensureCloseOnReset=false&quot; in the configuration. Note that turning this property off causes the risk of introducing a resource leak, as the logger may get garbage collected before &lt;code&gt;reset()&lt;/code&gt; is called, thus preventing its handlers from being closed on &lt;code&gt;reset()&lt;/code&gt;. In that case it is the responsibility of the application to ensure that the handlers are closed before the logger is garbage collected.</source>
          <target state="translated">A property &quot;&amp;lt;logger&amp;gt;.handlers.ensureCloseOnReset&quot;. This defines a a boolean value. If &quot;&amp;lt;logger&amp;gt;.handlers&quot; is not defined or is empty, this property is ignored. Otherwise it defaults to &lt;code&gt;true&lt;/code&gt; . When the value is &lt;code&gt;true&lt;/code&gt; , the handlers associated with the logger are guaranteed to be closed on &lt;a href=&quot;#reset()&quot;&gt;reset()&lt;/a&gt; and shutdown. This can be turned off by explicitly setting &quot;&amp;lt;logger&amp;gt;.handlers.ensureCloseOnReset=false&quot; in the configuration. Note that turning this property off causes the risk of introducing a resource leak, as the logger may get garbage collected before &lt;code&gt;reset()&lt;/code&gt; is called, thus preventing its handlers from being closed on &lt;code&gt;reset()&lt;/code&gt; . In that case it is the responsibility of the application to ensure that the handlers are closed before the logger is garbage collected.</target>
        </trans-unit>
        <trans-unit id="9b8333a093b6d7d47a6c333412eb84aa3f692950" translate="yes" xml:space="preserve">
          <source>A property &quot;&amp;lt;logger&amp;gt;.useParentHandlers&quot;. This defines a boolean value. By default every logger calls its parent in addition to handling the logging message itself, this often result in messages being handled by the root logger as well. When setting this property to false a Handler needs to be configured for this logger otherwise no logging messages are delivered.</source>
          <target state="translated">&quot;&amp;lt;logger&amp;gt; .useParentHandlers&quot;속성입니다. 부울 값을 정의합니다. 기본적으로 모든 로거는 로깅 메시지 자체를 처리하는 것 외에도 부모를 호출하므로 루트 로거가 메시지를 처리하는 경우가 종종 있습니다. 이 특성을 false로 설정하면이 로거에 대해 핸들러를 구성해야합니다. 그렇지 않으면 로깅 메시지가 전달되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a48195330c65c4b01249ae0f45a46a4b74f2ba95" translate="yes" xml:space="preserve">
          <source>A property &quot;config&quot;. This property is intended to allow arbitrary configuration code to be run. The property defines a whitespace or comma separated list of class names. A new instance will be created for each named class. The default constructor of each class may execute arbitrary code to update the logging configuration, such as setting logger levels, adding handlers, adding filters, etc.</source>
          <target state="translated">&quot;config&quot;속성 이 특성은 임의의 구성 코드를 실행할 수 있도록하기위한 것입니다. 이 속성은 공백 또는 쉼표로 구분 된 클래스 이름 목록을 정의합니다. 명명 된 각 클래스마다 새 인스턴스가 생성됩니다. 각 클래스의 기본 생성자는 로거 레벨 설정, 핸들러 추가, 필터 추가 등과 같은 로깅 구성을 업데이트하기 위해 임의의 코드를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="afdce71ac9851b08feb1aedc934d6974d465ffd9" translate="yes" xml:space="preserve">
          <source>A property &quot;handlers&quot;. This defines a whitespace or comma separated list of class names for handler classes to load and register as handlers on the root Logger (the Logger named &quot;&quot;). Each class name must be for a Handler class which has a default constructor. Note that these Handlers may be created lazily, when they are first used.</source>
          <target state="translated">&quot;핸들러&quot;속성. 이것은 처리기 클래스가 루트 로거 ( &quot;&quot;라는 이름의 로거)에 핸들러로로드하고 등록하기위한 공백 또는 쉼표로 구분 된 클래스 이름 목록을 정의합니다. 각 클래스 이름은 기본 생성자가있는 핸들러 클래스 여야합니다. 이러한 핸들러는 처음 사용될 때 느리게 생성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfd2111a7f7686bcd848b77a1c5c405eb80b6bc4" translate="yes" xml:space="preserve">
          <source>A property change handler.</source>
          <target state="translated">A property change handler.</target>
        </trans-unit>
        <trans-unit id="40cd905b82ea9f19a546d51718933bdbbabbbf69" translate="yes" xml:space="preserve">
          <source>A property list can contain another property list as its &quot;defaults&quot;; this second property list is searched if the property key is not found in the original property list.</source>
          <target state="translated">속성 목록에는 &quot;기본값&quot;으로 다른 속성 목록이 포함될 수 있습니다. 이 두 번째 속성 목록은 속성 키가 원래 속성 목록에없는 경우 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="f2eed07f01afb2d91e36f7bb664109ed92d22708" translate="yes" xml:space="preserve">
          <source>A property list that contains default values for any keys not found in this property list.</source>
          <target state="translated">이 속성 목록에없는 키의 기본값이 포함 된 속성 목록입니다.</target>
        </trans-unit>
        <trans-unit id="de5415dd74c54a74b9c685ab428e47618ba7f200" translate="yes" xml:space="preserve">
          <source>A protocol error occurred in the resource manager.</source>
          <target state="translated">A protocol error occurred in the resource manager.</target>
        </trans-unit>
        <trans-unit id="f41aeb00b26c7224e4373696562512e945d54b66" translate="yes" xml:space="preserve">
          <source>A protocol library such as one for LDAP gets an instance of this class in order to perform authentication defined by a specific SASL mechanism. Invoking methods on the &lt;code&gt;SaslClient&lt;/code&gt; instance process challenges and create responses according to the SASL mechanism implemented by the &lt;code&gt;SaslClient&lt;/code&gt;. As the authentication proceeds, the instance encapsulates the state of a SASL client's authentication exchange.</source>
          <target state="translated">LDAP 용 프로토콜 라이브러리와 같은 프로토콜 라이브러리는 특정 SASL 메커니즘으로 정의 된 인증을 수행하기 위해이 클래스의 인스턴스를 가져옵니다. 온 메소드 호출 &lt;code&gt;SaslClient&lt;/code&gt; 인스턴스 프로세스 과제 및하면에 의해 구현 SASL기구에 따라 응답을 작성 &lt;code&gt;SaslClient&lt;/code&gt; 나 . 인증이 진행되면 인스턴스는 SASL 클라이언트의 인증 교환 상태를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="03d9f1368bc1efbeeb3a53c6794c4e7df365d4bf" translate="yes" xml:space="preserve">
          <source>A provider can provide more than one services, each of which is a service for a resource bundle of a different base name.</source>
          <target state="translated">A provider can provide more than one services, each of which is a service for a resource bundle of a different base name.</target>
        </trans-unit>
        <trans-unit id="580caa29929fc4de9f05bdba16e0354f5e586e20" translate="yes" xml:space="preserve">
          <source>A provider cannot be added if it is already installed.</source>
          <target state="translated">이미 설치되어 있으면 공급자를 추가 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e63d614e8049932752e3aebb56b8bccf35052ea3" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector clients using a given protocol.</source>
          <target state="translated">지정된 프로토콜을 사용하여 JMX API 커넥터 클라이언트를 작성하기위한 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="dd3870d903b805021db933da406f8b8d00d4f589" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector clients using a given protocol. Instances of this interface are created by &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; as part of its &lt;a href=&quot;jmxconnectorfactory#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt;&lt;code&gt;newJMXConnector&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">A provider for creating JMX API connector clients using a given protocol. Instances of this interface are created by &lt;a href=&quot;jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt; as part of its &lt;a href=&quot;jmxconnectorfactory#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt; &lt;code&gt;newJMXConnector&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="614fb95349aea53f10863cad93d2aa6c404516c9" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector clients using a given protocol. Instances of this interface are created by &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; as part of its &lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;newJMXConnector&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">지정된 프로토콜을 사용하여 JMX API 커넥터 클라이언트를 작성하기위한 제공자입니다. 이 인터페이스의 인스턴스는 &lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;newJMXConnector&lt;/code&gt; &lt;/a&gt; 메소드의 일부로 &lt;a href=&quot;jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; 에&lt;/a&gt; 의해 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="bae1e5320493d0b1d17c1ed489f2965c61b5f471" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector servers using a given protocol.</source>
          <target state="translated">지정된 프로토콜을 사용하여 JMX API 커넥터 서버를 작성하기위한 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="ff0ded45ff8549e8dd9fd95358b0da7d9446916f" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector servers using a given protocol. Instances of this interface are created by &lt;a href=&quot;jmxconnectorserverfactory&quot;&gt;&lt;code&gt;JMXConnectorServerFactory&lt;/code&gt;&lt;/a&gt; as part of its &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt;&lt;code&gt;newJMXConnectorServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">A provider for creating JMX API connector servers using a given protocol. Instances of this interface are created by &lt;a href=&quot;jmxconnectorserverfactory&quot;&gt; &lt;code&gt;JMXConnectorServerFactory&lt;/code&gt; &lt;/a&gt; as part of its &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt; &lt;code&gt;newJMXConnectorServer&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="36ad26d0e92f5776ffe09050557ac6b961677cf9" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector servers using a given protocol. Instances of this interface are created by &lt;a href=&quot;jmxconnectorserverfactory&quot;&gt;&lt;code&gt;JMXConnectorServerFactory&lt;/code&gt;&lt;/a&gt; as part of its &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;newJMXConnectorServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">지정된 프로토콜을 사용하여 JMX API 커넥터 서버를 작성하기위한 제공자입니다. 이 인터페이스의 인스턴스는 &lt;a href=&quot;jmxconnectorserverfactory&quot;&gt; &lt;code&gt;JMXConnectorServerFactory&lt;/code&gt; 에&lt;/a&gt; 의해 &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;newJMXConnectorServer&lt;/code&gt; &lt;/a&gt; 메소드의 일부로 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="07cd4ccaedc374d5f011dad9b41e1a309a488a32" translate="yes" xml:space="preserve">
          <source>A provider for parameter names when the parameter names are not determined from a reliable source, like a classfile.</source>
          <target state="translated">매개 변수 이름이 클래스 파일과 같은 신뢰할 수있는 소스에서 결정되지 않은 경우 매개 변수 이름에 대한 제공자.</target>
        </trans-unit>
        <trans-unit id="bfd9bc1e3d95ebcb6e6b052c07b48556f84f21d3" translate="yes" xml:space="preserve">
          <source>A provider is a factory for one or more &lt;a href=&quot;../filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; instances. Each file system is identified by a &lt;code&gt;URI&lt;/code&gt; where the URI's scheme matches the provider's &lt;a href=&quot;#getScheme()&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt;. The default file system, for example, is identified by the URI &lt;code&gt;&quot;file:///&quot;&lt;/code&gt;. A memory-based file system, for example, may be identified by a URI such as &lt;code&gt;&quot;memory:///?name=logfs&quot;&lt;/code&gt;. The &lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem&lt;/code&gt;&lt;/a&gt; method may be used to create a file system, and the &lt;a href=&quot;#getFileSystem(java.net.URI)&quot;&gt;&lt;code&gt;getFileSystem&lt;/code&gt;&lt;/a&gt; method may be used to obtain a reference to an existing file system created by the provider. Where a provider is the factory for a single file system then it is provider dependent if the file system is created when the provider is initialized, or later when the &lt;code&gt;newFileSystem&lt;/code&gt; method is invoked. In the case of the default provider, the &lt;code&gt;FileSystem&lt;/code&gt; is created when the provider is initialized.</source>
          <target state="translated">A provider is a factory for one or more &lt;a href=&quot;../filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt; instances. Each file system is identified by a &lt;code&gt;URI&lt;/code&gt; where the URI's scheme matches the provider's &lt;a href=&quot;#getScheme()&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;. The default file system, for example, is identified by the URI &lt;code&gt;&quot;file:///&quot;&lt;/code&gt; . A memory-based file system, for example, may be identified by a URI such as &lt;code&gt;&quot;memory:///?name=logfs&quot;&lt;/code&gt; . The &lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem&lt;/code&gt; &lt;/a&gt; method may be used to create a file system, and the &lt;a href=&quot;#getFileSystem(java.net.URI)&quot;&gt; &lt;code&gt;getFileSystem&lt;/code&gt; &lt;/a&gt; method may be used to obtain a reference to an existing file system created by the provider. Where a provider is the factory for a single file system then it is provider dependent if the file system is created when the provider is initialized, or later when the &lt;code&gt;newFileSystem&lt;/code&gt; method is invoked. In the case of the default provider, the &lt;code&gt;FileSystem&lt;/code&gt; is created when the provider is initialized.</target>
        </trans-unit>
        <trans-unit id="17b083606c40562aa588292f9a8978d30059dfc5" translate="yes" xml:space="preserve">
          <source>A provider is a factory for one or more &lt;a href=&quot;../filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; instances. Each file system is identified by a &lt;code&gt;URI&lt;/code&gt; where the URI's scheme matches the provider's &lt;a href=&quot;filesystemprovider#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt;. The default file system, for example, is identified by the URI &lt;code&gt;&quot;file:///&quot;&lt;/code&gt;. A memory-based file system, for example, may be identified by a URI such as &lt;code&gt;&quot;memory:///?name=logfs&quot;&lt;/code&gt;. The &lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem&lt;/code&gt;&lt;/a&gt; method may be used to create a file system, and the &lt;a href=&quot;filesystemprovider#getFileSystem-java.net.URI-&quot;&gt;&lt;code&gt;getFileSystem&lt;/code&gt;&lt;/a&gt; method may be used to obtain a reference to an existing file system created by the provider. Where a provider is the factory for a single file system then it is provider dependent if the file system is created when the provider is initialized, or later when the &lt;code&gt;newFileSystem&lt;/code&gt; method is invoked. In the case of the default provider, the &lt;code&gt;FileSystem&lt;/code&gt; is created when the provider is initialized.</source>
          <target state="translated">제공자는 하나 이상의 &lt;a href=&quot;../filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt; 인스턴스에 대한 팩토리입니다 . 각 파일 시스템은 URI의 체계가 공급자의 &lt;a href=&quot;filesystemprovider#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt; 와 일치 하는 &lt;code&gt;URI&lt;/code&gt; 로 식별됩니다 . 예를 들어, 기본 파일 시스템은 URI &lt;code&gt;&quot;file:///&quot;&lt;/code&gt; 로 식별됩니다 . 예를 들어, 메모리 기반 파일 시스템은 &lt;code&gt;&quot;memory:///?name=logfs&quot;&lt;/code&gt; 와 같은 URI로 식별 될 수 있습니다 . &lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem&lt;/code&gt; 의&lt;/a&gt; 방법은 파일 시스템을 만드는 데 사용 될 수 있으며, &lt;a href=&quot;filesystemprovider#getFileSystem-java.net.URI-&quot;&gt; &lt;code&gt;getFileSystem&lt;/code&gt; &lt;/a&gt;방법은 제공자에 의해 생성 된 기존 파일 시스템에 대한 참조를 얻는 데 사용될 수 있습니다. 제공자가 단일 파일 시스템의 팩토리 인 경우 제공자가 초기화 될 때 또는 나중에 &lt;code&gt;newFileSystem&lt;/code&gt; 메소드가 호출 될 때 파일 시스템이 작성되면 제공자에 따라 다릅니다 . 기본 제공자의 경우 제공자가 초기화 될 때 &lt;code&gt;FileSystem&lt;/code&gt; 이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="c8661e42b7c7bc483d855be05578549a86088067" translate="yes" xml:space="preserve">
          <source>A provider may supply a separate class for each combination of</source>
          <target state="translated">제공자는 각 조합에 대해 별도의 클래스를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8df104aa5c6516e068d95f227ce6f358ff53a542" translate="yes" xml:space="preserve">
          <source>A provider of execution engines which run in the same process as JShell.</source>
          <target state="translated">JShell과 동일한 프로세스에서 실행되는 실행 엔진 제공 업체입니다.</target>
        </trans-unit>
        <trans-unit id="9c75d084f1fdf212a3f3c3cc424d49b444ba6980" translate="yes" xml:space="preserve">
          <source>A provider of remote JDI-controlled execution engines.</source>
          <target state="translated">원격 JDI 제어 실행 엔진의 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="a60a915be1b89d2839a779fb959759ac9c3b3cb4" translate="yes" xml:space="preserve">
          <source>A provider or factory for a particular mixer type.</source>
          <target state="translated">특정 믹서 유형의 공급자 또는 공장입니다.</target>
        </trans-unit>
        <trans-unit id="44f8d9d0aaa9571934a90484486f900c4a13b7b8" translate="yes" xml:space="preserve">
          <source>A provider or factory for a particular mixer type. This mechanism allows the implementation to determine how resources are managed in creation / management of a mixer.</source>
          <target state="translated">특정 믹서 유형의 공급자 또는 공장입니다. 이 메커니즘을 통해 구현은 믹서의 생성 / 관리에서 리소스가 관리되는 방식을 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4878c3885cb6d9f28d6699e6f5ecb8e8c822919b" translate="yes" xml:space="preserve">
          <source>A provider satisfies the specified selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service.</source>
          <target state="translated">제공자는 지정된 암호화 서비스에 대해 지정된 알고리즘 또는 유형을 구현할 경우 지정된 선택 기준을 충족합니다.</target>
        </trans-unit>
        <trans-unit id="ef46e43cda72b7adf9af9a571bcf11a8355d0f12" translate="yes" xml:space="preserve">
          <source>A provider satisfies this selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service and its implementation meets the constraint expressed by the specified attribute name/value pair.</source>
          <target state="translated">제공자는 지정된 암호화 서비스에 대해 지정된 알고리즘 또는 유형을 구현하고 해당 구현이 지정된 속성 이름 / 값 쌍으로 표시되는 제한 조건을 충족하는 경우이 선택 기준을 충족합니다.</target>
        </trans-unit>
        <trans-unit id="fc949cead6b5737ed8a2378bb803e40cc0308221" translate="yes" xml:space="preserve">
          <source>A provider satisfies this selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service.</source>
          <target state="translated">제공자는 지정된 암호화 서비스에 대해 지정된 알고리즘 또는 유형을 구현할 경우이 선택 기준을 충족합니다.</target>
        </trans-unit>
        <trans-unit id="e6ced3920c677959d9711013953a9334773b2c03" translate="yes" xml:space="preserve">
          <source>A provider should document all the key specifications supported by its key factory.</source>
          <target state="translated">공급자는 키 팩토리에서 지원하는 모든 주요 사양을 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="26b19895da8d88f1c088d3d43c523eea1300e61e" translate="yes" xml:space="preserve">
          <source>A provider should document all the key specifications supported by its secret key factory. For example, the DES secret-key factory supplied by the &quot;SunJCE&quot; provider supports &lt;code&gt;DESKeySpec&lt;/code&gt; as a transparent representation of DES keys, and that provider's secret-key factory for Triple DES keys supports &lt;code&gt;DESedeKeySpec&lt;/code&gt; as a transparent representation of Triple DES keys.</source>
          <target state="translated">공급자는 비밀 키 팩토리에서 지원하는 모든 키 사양을 문서화해야합니다. 예를 들어, &quot;SunJCE&quot;공급자가 제공 한 DES 비밀 키 팩토리 는 DES 키의 투명한 표현으로 &lt;code&gt;DESKeySpec&lt;/code&gt; 을 지원 하고 트리플 DES 키에 대한 해당 제공자의 비밀 키 팩토리는 트리플 DES 키 의 투명한 표현으로 &lt;code&gt;DESedeKeySpec&lt;/code&gt; 을 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="b667809afd8c34cefc7f762bfd6fab51fb3ce561" translate="yes" xml:space="preserve">
          <source>A proxy class extends &lt;code&gt;java.lang.reflect.Proxy&lt;/code&gt;.</source>
          <target state="translated">프록시 클래스는 &lt;code&gt;java.lang.reflect.Proxy&lt;/code&gt; 를 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="615f960dcbdaeb0ef796b32f2cd08b6cb43be786" translate="yes" xml:space="preserve">
          <source>A proxy class has the following properties:</source>
          <target state="translated">프록시 클래스에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2869cfe379beab005c79c443e4b3f14fb769af4" translate="yes" xml:space="preserve">
          <source>A proxy class implements exactly the interfaces specified at its creation, in the same order.</source>
          <target state="translated">프록시 클래스는 생성시 지정된 인터페이스를 동일한 순서로 정확하게 구현합니다.</target>
        </trans-unit>
        <trans-unit id="7e49ce6f2d6d424cc20eb3e0490979d0fa2b555b" translate="yes" xml:space="preserve">
          <source>A proxy class implements exactly the interfaces specified at its creation, in the same order. Invoking &lt;a href=&quot;../class#getInterfaces()&quot;&gt;&lt;code&gt;getInterfaces&lt;/code&gt;&lt;/a&gt; on its &lt;code&gt;Class&lt;/code&gt; object will return an array containing the same list of interfaces (in the order specified at its creation), invoking &lt;a href=&quot;../class#getMethods()&quot;&gt;&lt;code&gt;getMethods&lt;/code&gt;&lt;/a&gt; on its &lt;code&gt;Class&lt;/code&gt; object will return an array of &lt;code&gt;Method&lt;/code&gt; objects that include all of the methods in those interfaces, and invoking &lt;code&gt;getMethod&lt;/code&gt; will find methods in the proxy interfaces as would be expected.</source>
          <target state="translated">A proxy class implements exactly the interfaces specified at its creation, in the same order. Invoking &lt;a href=&quot;../class#getInterfaces()&quot;&gt; &lt;code&gt;getInterfaces&lt;/code&gt; &lt;/a&gt; on its &lt;code&gt;Class&lt;/code&gt; object will return an array containing the same list of interfaces (in the order specified at its creation), invoking &lt;a href=&quot;../class#getMethods()&quot;&gt; &lt;code&gt;getMethods&lt;/code&gt; &lt;/a&gt; on its &lt;code&gt;Class&lt;/code&gt; object will return an array of &lt;code&gt;Method&lt;/code&gt; objects that include all of the methods in those interfaces, and invoking &lt;code&gt;getMethod&lt;/code&gt; will find methods in the proxy interfaces as would be expected.</target>
        </trans-unit>
        <trans-unit id="5c7b32e6843f0bd8df4ce07e9e983f9c2dd4530e" translate="yes" xml:space="preserve">
          <source>A proxy class is &lt;em&gt;final and non-abstract&lt;/em&gt;.</source>
          <target state="translated">A proxy class is &lt;em&gt;final and non-abstract&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="4d78fbca7a5f7f9302beb9340d42fda5f7c8acaa" translate="yes" xml:space="preserve">
          <source>A proxy instance has the following properties:</source>
          <target state="translated">프록시 인스턴스에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8123f85683d160c7b20d5bea816c6a9cdd93243" translate="yes" xml:space="preserve">
          <source>A proxy is typically used to access an MXBean in a remote Java virtual machine. An alternative way to create an MXBean proxy is:</source>
          <target state="translated">프록시는 일반적으로 원격 Java 가상 머신에서 MXBean에 액세스하는 데 사용됩니다. MXBean 프록시를 생성하는 다른 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bc8d12b54b7b01acc09783b19f78291f8efcc6f7" translate="yes" xml:space="preserve">
          <source>A proxy selector that always return &lt;a href=&quot;../../../../java.base/java/net/proxy#NO_PROXY&quot;&gt;&lt;code&gt;Proxy.NO_PROXY&lt;/code&gt;&lt;/a&gt; implying a direct connection.</source>
          <target state="translated">A proxy selector that always return &lt;a href=&quot;../../../../java.base/java/net/proxy#NO_PROXY&quot;&gt; &lt;code&gt;Proxy.NO_PROXY&lt;/code&gt; &lt;/a&gt; implying a direct connection.</target>
        </trans-unit>
        <trans-unit id="e833755637b0729921268ab65962c62924b0857a" translate="yes" xml:space="preserve">
          <source>A proxy setting that represents a &lt;code&gt;DIRECT&lt;/code&gt; connection, basically telling the protocol handler not to use any proxying.</source>
          <target state="translated">A proxy setting that represents a &lt;code&gt;DIRECT&lt;/code&gt; connection, basically telling the protocol handler not to use any proxying.</target>
        </trans-unit>
        <trans-unit id="f354b17dc51832b6d211186d5cf971a120bb6b70" translate="yes" xml:space="preserve">
          <source>A proxy setting that represents a &lt;code&gt;DIRECT&lt;/code&gt; connection, basically telling the protocol handler not to use any proxying. Used, for instance, to create sockets bypassing any other global proxy settings (like SOCKS):</source>
          <target state="translated">&lt;code&gt;DIRECT&lt;/code&gt; 연결 을 나타내는 프록시 설정 으로, 기본적으로 프로토콜 핸들러가 프록시를 사용하지 않도록 지시합니다. 예를 들어 SOCKS와 같은 다른 전역 프록시 설정을 우회하는 소켓을 만드는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="99a860b6a990a0681ec3117ce91eb22fbbf2d3ca" translate="yes" xml:space="preserve">
          <source>A proxy used by a debugger to examine or manipulate some entity in another virtual machine.</source>
          <target state="translated">디버거에서 다른 가상 머신의 일부 엔티티를 검사하거나 조작하는 데 사용하는 프록시입니다.</target>
        </trans-unit>
        <trans-unit id="407c40d7e11e903a347fcdb9aa198d91da8d8c8d" translate="yes" xml:space="preserve">
          <source>A proxy used by a debugger to examine or manipulate some entity in another virtual machine. Mirror is the root of the interface hierarchy for this package. Mirrors can be proxies for objects in the target VM (&lt;a href=&quot;objectreference&quot;&gt;&lt;code&gt;ObjectReference&lt;/code&gt;&lt;/a&gt;), primitive values (for example, &lt;a href=&quot;integervalue&quot;&gt;&lt;code&gt;IntegerValue&lt;/code&gt;&lt;/a&gt;), types (for example, &lt;a href=&quot;referencetype&quot;&gt;&lt;code&gt;ReferenceType&lt;/code&gt;&lt;/a&gt;), dynamic application state (for example, &lt;a href=&quot;stackframe&quot;&gt;&lt;code&gt;StackFrame&lt;/code&gt;&lt;/a&gt;), and even debugger-specific constructs (for example, &lt;a href=&quot;request/breakpointrequest&quot;&gt;&lt;code&gt;BreakpointRequest&lt;/code&gt;&lt;/a&gt;). The &lt;a href=&quot;virtualmachine&quot;&gt;&lt;code&gt;VirtualMachine&lt;/code&gt;&lt;/a&gt; itself is also considered a mirror, representing the composite state of the target VM.</source>
          <target state="translated">디버거에서 다른 가상 머신의 일부 엔티티를 검사하거나 조작하는 데 사용하는 프록시입니다. 미러는이 패키지에 대한 인터페이스 계층의 루트입니다. 미러는 대상 VM ( &lt;a href=&quot;objectreference&quot;&gt; &lt;code&gt;ObjectReference&lt;/code&gt; &lt;/a&gt; ), 기본 값 (예 : &lt;a href=&quot;integervalue&quot;&gt; &lt;code&gt;IntegerValue&lt;/code&gt; &lt;/a&gt; ), 유형 (예 : &lt;a href=&quot;referencetype&quot;&gt; &lt;code&gt;ReferenceType&lt;/code&gt; &lt;/a&gt; ), 동적 애플리케이션 상태 (예 : &lt;a href=&quot;stackframe&quot;&gt; &lt;code&gt;StackFrame&lt;/code&gt; &lt;/a&gt; ), 심지어 디버거 관련 구성 (예 : , &lt;a href=&quot;request/breakpointrequest&quot;&gt; &lt;code&gt;BreakpointRequest&lt;/code&gt; &lt;/a&gt; ). &lt;a href=&quot;virtualmachine&quot;&gt; &lt;code&gt;VirtualMachine&lt;/code&gt; &lt;/a&gt; 자체는 타겟 VM의 복합 상태를 나타내는 거울 여겨진다.</target>
        </trans-unit>
        <trans-unit id="8c4cab0842d32adc16d520b73ddea98843a4d9d3" translate="yes" xml:space="preserve">
          <source>A pseudo-type corresponding to a module element.</source>
          <target state="translated">A pseudo-type corresponding to a module element.</target>
        </trans-unit>
        <trans-unit id="b46f91bed61e24e029ef85159c86eda25e3a71d6" translate="yes" xml:space="preserve">
          <source>A pseudo-type corresponding to a package element.</source>
          <target state="translated">패키지 요소에 해당하는 의사 유형입니다.</target>
        </trans-unit>
        <trans-unit id="b486b8bfaac8ddad76cc95e09326ce8a1f46face" translate="yes" xml:space="preserve">
          <source>A pseudo-type used where no actual type is appropriate.</source>
          <target state="translated">실제 유형이 적절하지 않은 경우 사용되는 의사 유형입니다.</target>
        </trans-unit>
        <trans-unit id="52de26ecb9825b14655caee56f2634bb6a83b2cb" translate="yes" xml:space="preserve">
          <source>A pseudo-type used where no actual type is appropriate. The kinds of &lt;code&gt;NoType&lt;/code&gt; are:</source>
          <target state="translated">실제 유형이 적절하지 않은 경우 사용되는 의사 유형입니다. &lt;code&gt;NoType&lt;/code&gt; 의 종류는 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1e90dd032f01e32199ad98aa872c3903457e7668" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;double&lt;/code&gt; value is generated as if it's the result of calling the following method with the origin and bound:</source>
          <target state="translated">의사 난수 &lt;code&gt;double&lt;/code&gt; 값은 원점과 바운드를 사용하여 다음 메소드를 호출 한 결과 인 것처럼 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="349ffb27395bde59db0d5155ee5147ad53454fa3" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;double&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;#nextDouble()&quot;&gt;&lt;code&gt;nextDouble()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A pseudorandom &lt;code&gt;double&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;#nextDouble()&quot;&gt; &lt;code&gt;nextDouble()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="75364c69974740760e2102258d4f572653c09fb6" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;double&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;random#nextDouble--&quot;&gt;&lt;code&gt;nextDouble()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의사 난수 &lt;code&gt;double&lt;/code&gt; 값은 &lt;a href=&quot;random#nextDouble--&quot;&gt; &lt;code&gt;nextDouble()&lt;/code&gt; &lt;/a&gt; 메서드를 호출 한 결과 인 것처럼 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="8c5dd8c02c45a4aab3524fd4b010df013ea9b7dd" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;int&lt;/code&gt; value is generated as if it's the result of calling the following method with the origin and bound:</source>
          <target state="translated">pseudorandom &lt;code&gt;int&lt;/code&gt; 값은 원점과 바운드를 사용하여 다음 메소드를 호출 한 결과 인 것처럼 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="0dd125df8816f1887b3e27c620c70d2aeb9eb4b9" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;int&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;#nextInt()&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A pseudorandom &lt;code&gt;int&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;#nextInt()&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a03e42a450e90fb0c78448bd8feae33961e15d83" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;int&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;random#nextInt--&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의사 난수 &lt;code&gt;int&lt;/code&gt; 값은 &lt;a href=&quot;random#nextInt--&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt; 메소드를 호출 한 결과 인 것처럼 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="eb87283f032efcc5874617e4e0bcc58f671273aa" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;long&lt;/code&gt; value is generated as if it's the result of calling the following method with the origin and bound:</source>
          <target state="translated">의사 난수 &lt;code&gt;long&lt;/code&gt; 값은 원점과 바운드를 사용하여 다음 메소드를 호출 한 결과 인 것처럼 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="d6a9a90a44896a0e623f7cbe825147ffe76770ff" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;long&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;#nextLong()&quot;&gt;&lt;code&gt;nextLong()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A pseudorandom &lt;code&gt;long&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;#nextLong()&quot;&gt; &lt;code&gt;nextLong()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9449755c8e0ca71a1c153368e6816b2ee3278550" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;long&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;random#nextLong--&quot;&gt;&lt;code&gt;nextLong()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의사 난수 &lt;code&gt;long&lt;/code&gt; 값은 &lt;a href=&quot;random#nextLong--&quot;&gt; &lt;code&gt;nextLong()&lt;/code&gt; &lt;/a&gt; 메소드를 호출 한 결과 인 것처럼 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="4f1ff8a1809138d2eb69bc96f4ac2d5f1cf560bd" translate="yes" xml:space="preserve">
          <source>A public key.</source>
          <target state="translated">공개 키</target>
        </trans-unit>
        <trans-unit id="a5d3e3595d61df29206b582a495aec470cfa967b" translate="yes" xml:space="preserve">
          <source>A public key. This interface contains no methods or constants. It merely serves to group (and provide type safety for) all public key interfaces. Note: The specialized public key interfaces extend this interface. See, for example, the DSAPublicKey interface in &lt;code&gt;java.security.interfaces&lt;/code&gt;.</source>
          <target state="translated">공개 키 이 인터페이스에는 메서드 나 상수가 없습니다. 단지 모든 공개 키 인터페이스를 그룹화 (및 유형 안전성 제공)하는 역할을합니다. 참고 : 특수화 된 공개 키 인터페이스는이 인터페이스를 확장합니다. 예를 들어 &lt;code&gt;java.security.interfaces&lt;/code&gt; 의 DSAPublicKey 인터페이스를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="be30ebbd81a1cfdbda79a76e9443ffeed1d31c97" translate="yes" xml:space="preserve">
          <source>A punctuation character:&lt;code&gt;\p{IsPunctuation}&lt;/code&gt;</source>
          <target state="translated">A punctuation character: &lt;code&gt;\p{IsPunctuation}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa53fec930a563b793cfb3b06ebddd3b17d2fcf1" translate="yes" xml:space="preserve">
          <source>A punctuation character:&lt;code&gt;p{IsPunctuation}&lt;/code&gt;</source>
          <target state="translated">문장 부호 문자 : &lt;code&gt;p{IsPunctuation}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7b8c68356b73af1d1b0e8cbecec217a783ebc4b" translate="yes" xml:space="preserve">
          <source>A push promise is accepted by invoking the given &lt;code&gt;acceptor&lt;/code&gt; function. The &lt;code&gt;acceptor&lt;/code&gt; function must be passed a non-null &lt;code&gt;BodyHandler&lt;/code&gt;, that is to be used to handle the promise's response body. The acceptor function will return a &lt;code&gt;
 CompletableFuture&lt;/code&gt; that completes with the promise's response.</source>
          <target state="translated">A push promise is accepted by invoking the given &lt;code&gt;acceptor&lt;/code&gt; function. The &lt;code&gt;acceptor&lt;/code&gt; function must be passed a non-null &lt;code&gt;BodyHandler&lt;/code&gt; , that is to be used to handle the promise's response body. The acceptor function will return a &lt;code&gt; CompletableFuture&lt;/code&gt; that completes with the promise's response.</target>
        </trans-unit>
        <trans-unit id="474d0f3770e0a424c841e6c0e3d8b4ae0d793058" translate="yes" xml:space="preserve">
          <source>A push promise request may be received up to the point where the response body of the initiating client-sent request has been fully received. The delivery of a push promise response, however, is not coordinated with the delivery of the response to the initiating client-sent request.</source>
          <target state="translated">A push promise request may be received up to the point where the response body of the initiating client-sent request has been fully received. The delivery of a push promise response, however, is not coordinated with the delivery of the response to the initiating client-sent request.</target>
        </trans-unit>
        <trans-unit id="6345c5205d2ee64bf3674e06e8049f6b5c645a44" translate="yes" xml:space="preserve">
          <source>A quadratic parametric curve segment specified with &lt;code&gt;double&lt;/code&gt; coordinates.</source>
          <target state="translated">A quadratic parametric curve segment specified with &lt;code&gt;double&lt;/code&gt; coordinates.</target>
        </trans-unit>
        <trans-unit id="5ce6936437b74b218a5472b128a58a32603d7516" translate="yes" xml:space="preserve">
          <source>A quadratic parametric curve segment specified with &lt;code&gt;float&lt;/code&gt; coordinates.</source>
          <target state="translated">A quadratic parametric curve segment specified with &lt;code&gt;float&lt;/code&gt; coordinates.</target>
        </trans-unit>
        <trans-unit id="9e9bc11f3589016e70368844a4f5c6189fa59bdb" translate="yes" xml:space="preserve">
          <source>A query expression that represents the matching constraint on the string argument. The returned object will be serialized as an instance of the non-public class  javax.management.MatchQueryExp.</source>
          <target state="translated">문자열 인수에 대한 일치 제약 조건을 나타내는 쿼리 식입니다. 리턴 된 오브젝트는 비 공용 클래스 javax.management.MatchQueryExp의 인스턴스로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="c48bac1c38528cf0a0bea5f56a7e9f98b9da11a9" translate="yes" xml:space="preserve">
          <source>A query expression that represents the matching constraint on the string argument. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.MatchQueryExp&quot;&gt; javax.management.MatchQueryExp&lt;/a&gt;.</source>
          <target state="translated">A query expression that represents the matching constraint on the string argument. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.MatchQueryExp&quot;&gt; javax.management.MatchQueryExp&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c147e56073938eebcaba2066ea21a82ae0b6089a" translate="yes" xml:space="preserve">
          <source>A query expression that represents the matching constraint on the string argument. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.MatchQueryExp&quot;&gt; javax.management.MatchQueryExp&lt;/a&gt;.</source>
          <target state="translated">문자열 인수에 대한 일치 제약 조건을 나타내는 쿼리 식입니다. 반환 된 객체는 비공개 클래스 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.MatchQueryExp&quot;&gt;javax.management.MatchQueryExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="fd87aace87b360fadc902a07b6f6724a955ccd18" translate="yes" xml:space="preserve">
          <source>A query for &lt;code&gt;LocalDate&lt;/code&gt; returning null if not found.</source>
          <target state="translated">찾을 수없는 경우 null을 반환 하는 &lt;code&gt;LocalDate&lt;/code&gt; 에 대한 쿼리입니다 .</target>
        </trans-unit>
        <trans-unit id="9c5fdb320f9fd010e6fc84437fd7efbd9ae2a4f3" translate="yes" xml:space="preserve">
          <source>A query for &lt;code&gt;LocalTime&lt;/code&gt; returning null if not found.</source>
          <target state="translated">찾을 수없는 경우 &lt;code&gt;LocalTime&lt;/code&gt; 에 대한 쿼리가 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ac9a2eb18e7bfdca419913ea159a721ab7b01523" translate="yes" xml:space="preserve">
          <source>A query for &lt;code&gt;ZoneOffset&lt;/code&gt; returning null if not found.</source>
          <target state="translated">찾을 수없는 경우 null을 반환 하는 &lt;code&gt;ZoneOffset&lt;/code&gt; 에 대한 쿼리입니다 .</target>
        </trans-unit>
        <trans-unit id="3e78bc82f9e8f94bc5a735382871c83937265df6" translate="yes" xml:space="preserve">
          <source>A query for the &lt;code&gt;Chronology&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Chronology&lt;/code&gt; 대한 쿼리 .</target>
        </trans-unit>
        <trans-unit id="39ef1890e85fb1c7facf128d46625e4303c5b931" translate="yes" xml:space="preserve">
          <source>A query for the smallest supported unit.</source>
          <target state="translated">가장 작은 지원 단위에 대한 쿼리입니다.</target>
        </trans-unit>
        <trans-unit id="3f82a322a0e451ead6caf980f1c2ed3196a64f4a" translate="yes" xml:space="preserve">
          <source>A query that provides access to the excess days that were parsed.</source>
          <target state="translated">구문 분석 된 초과 일에 액세스 할 수있는 쿼리입니다.</target>
        </trans-unit>
        <trans-unit id="5678eed1c14504f0290f034574f9688caebd613d" translate="yes" xml:space="preserve">
          <source>A query that provides access to whether a leap-second was parsed.</source>
          <target state="translated">윤초가 구문 분석되었는지 여부에 대한 액세스를 제공하는 쿼리입니다.</target>
        </trans-unit>
        <trans-unit id="af8411cd20f4aa32f91510c63957b78c82b0ec10" translate="yes" xml:space="preserve">
          <source>A question mark ('?') is replaced by a backslash (\) followed by a question mark.</source>
          <target state="translated">물음표 ( '?')는 백 슬래시 (\)와 물음표로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="e084d41cca85f9090522df2231bb663388166177" translate="yes" xml:space="preserve">
          <source>A question mark (?) or asterisk (*). The two characters represent a question mark or asterisk respectively.</source>
          <target state="translated">물음표 (?) 또는 별표 (*). 두 문자는 각각 물음표 또는 별표를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e26d6e4309bdbd3df7b06b56fefc1c673ddfd4ff" translate="yes" xml:space="preserve">
          <source>A queue of text layout tasks.</source>
          <target state="translated">A queue of text layout tasks.</target>
        </trans-unit>
        <trans-unit id="c991703c3435fc38e1efa1e781b165d3a35e83cc" translate="yes" xml:space="preserve">
          <source>A quote ('&quot;') is replaced by a backslash (\) followed by a quote.</source>
          <target state="translated">따옴표 ( ' &quot;')는 백 슬래시 (\)와 따옴표로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="65e06fc75c0ec78c2fc622e557a9e1f653f35d84" translate="yes" xml:space="preserve">
          <source>A quote may not appear inside a quoted value except immediately after an odd number of consecutive backslashes.</source>
          <target state="translated">홀수의 연속 백 슬래시 직후를 제외하고 따옴표는 따옴표 안에 표시되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b264de8abb8722f7f6da9ae38453e8ae94eeb0aa" translate="yes" xml:space="preserve">
          <source>A quote. The two characters represent a quote, and that quote is not considered to terminate the quoted value. An ending closing quote must be present for the quoted value to be valid.</source>
          <target state="translated">인용문. 두 문자는 따옴표를 나타내며 따옴표는 따옴표로 묶은 것으로 간주되지 않습니다. 따옴표로 묶은 값이 유효하려면 끝 닫는 따옴표가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="e9a2d077ef11a8cc558d4862f60b67ce7ff22169" translate="yes" xml:space="preserve">
          <source>A random number generator isolated to the current thread.</source>
          <target state="translated">현재 스레드에 격리 된 난수 생성기입니다.</target>
        </trans-unit>
        <trans-unit id="33185ac95e8bc4fa75b311844397235baffc14d0" translate="yes" xml:space="preserve">
          <source>A random number generator isolated to the current thread. Like the global &lt;a href=&quot;../random&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt; generator used by the &lt;a href=&quot;../../lang/math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt; class, a &lt;code&gt;ThreadLocalRandom&lt;/code&gt; is initialized with an internally generated seed that may not otherwise be modified. When applicable, use of &lt;code&gt;ThreadLocalRandom&lt;/code&gt; rather than shared &lt;code&gt;Random&lt;/code&gt; objects in concurrent programs will typically encounter much less overhead and contention. Use of &lt;code&gt;ThreadLocalRandom&lt;/code&gt; is particularly appropriate when multiple tasks (for example, each a &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;) use random numbers in parallel in thread pools.</source>
          <target state="translated">현재 스레드에 격리 된 난수 생성기입니다. &lt;a href=&quot;../../lang/math&quot;&gt; &lt;code&gt;Math&lt;/code&gt; &lt;/a&gt; 클래스에서 사용 하는 전역 &lt;a href=&quot;../random&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt; 생성기 와 마찬가지로 &lt;code&gt;ThreadLocalRandom&lt;/code&gt; 은 내부적으로 생성 된 시드로 초기화되며 다른 방법으로는 수정할 수 없습니다. 적용 가능한 경우, 동시 프로그램에서 공유 &lt;code&gt;Random&lt;/code&gt; 오브젝트가 아닌 &lt;code&gt;ThreadLocalRandom&lt;/code&gt; 을 사용하면 오버 헤드와 경합이 훨씬 줄어 듭니다. &lt;code&gt;ThreadLocalRandom&lt;/code&gt; 의 사용은 여러 작업 (예 : 각각의 &lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt; )이 스레드 풀에서 임의의 숫자를 병렬로 사용할 때 특히 적합합니다 .</target>
        </trans-unit>
        <trans-unit id="488c64596c97d4a88323f5f0259654cb1b84108c" translate="yes" xml:space="preserve">
          <source>A randomly generated &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">임의로 생성 된 &lt;code&gt;UUID&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5a4c830c8ae43497d1af863a0e08fd5560aa7cb" translate="yes" xml:space="preserve">
          <source>A read operation might not fill the buffer, and in fact it might not read any bytes at all. Whether or not it does so depends upon the nature and state of the channel. A socket channel in non-blocking mode, for example, cannot read any more bytes than are immediately available from the socket's input buffer; similarly, a file channel cannot read any more bytes than remain in the file. It is guaranteed, however, that if a channel is in blocking mode and there is at least one byte remaining in the buffer then this method will block until at least one byte is read.</source>
          <target state="translated">읽기 작업이 버퍼를 채우지 못할 수 있으며 실제로는 바이트를 전혀 읽지 못할 수 있습니다. 그렇게하는지 여부는 채널의 특성과 상태에 따라 다릅니다. 예를 들어, 비 블로킹 모드의 소켓 채널은 소켓의 입력 버퍼에서 즉시 사용 가능한 것보다 더 많은 바이트를 읽을 수 없습니다. 마찬가지로 파일 채널은 파일에 남아있는 것보다 더 많은 바이트를 읽을 수 없습니다. 그러나 채널이 차단 모드에 있고 버퍼에 하나 이상의 바이트가 남아 있으면이 방법은 하나 이상의 바이트를 읽을 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="9d0a9dce3565a63964117ea0a8dfaa902858d525" translate="yes" xml:space="preserve">
          <source>A read-only empty PermissionCollection instance.</source>
          <target state="translated">읽기 전용의 빈 PermissionCollection 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="cf318b54832df39f518feb3e2d157a2264341c15" translate="yes" xml:space="preserve">
          <source>A read-only view of a set of HTTP headers.</source>
          <target state="translated">A read-only view of a set of HTTP headers.</target>
        </trans-unit>
        <trans-unit id="3c1a14e276d6d75e03c30962d46fa74775569f4b" translate="yes" xml:space="preserve">
          <source>A read-write lock allows for a greater level of concurrency in accessing shared data than that permitted by a mutual exclusion lock. It exploits the fact that while only a single thread at a time (a &lt;em&gt;writer&lt;/em&gt; thread) can modify the shared data, in many cases any number of threads can concurrently read the data (hence &lt;em&gt;reader&lt;/em&gt; threads). In theory, the increase in concurrency permitted by the use of a read-write lock will lead to performance improvements over the use of a mutual exclusion lock. In practice this increase in concurrency will only be fully realized on a multi-processor, and then only if the access patterns for the shared data are suitable.</source>
          <target state="translated">읽기-쓰기 잠금은 상호 배제 잠금에 의해 허용되는 것보다 공유 데이터에 액세스 할 때 더 높은 수준의 동시성을 허용합니다. 한 번에 하나의 스레드 ( &lt;em&gt;작성자&lt;/em&gt; 스레드) 만 공유 데이터를 수정할 수 있지만 많은 수의 스레드가 동시에 데이터를 읽을 수 있기 때문에 &lt;em&gt;독자&lt;/em&gt; 스레드가 있습니다. 이론적으로, 읽기 / 쓰기 잠금을 사용하여 허용되는 동시성 증가는 상호 배제 잠금을 사용하는 것보다 성능이 향상됩니다. 실제로 이러한 동시성 증가는 다중 프로세서에서만 완전히 실현되고 공유 데이터의 액세스 패턴이 적합한 경우에만 실현됩니다.</target>
        </trans-unit>
        <trans-unit id="6a884474a7fd8fa15566b3c46e080db6b54715b1" translate="yes" xml:space="preserve">
          <source>A reader for which all images are guaranteed to be tiled, or are guaranteed not to be tiled, may return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; respectively without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">모든 이미지가 바둑판 식으로 배열되거나 바둑판 식으로 표시되지 않는 판독기는 이미지 데이터에 액세스하지 않고 각각 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다 . 이러한 경우 입력 소스가 설정되지 않았거나 이미지 색인이 범위를 벗어난 경우에도 예외를 발생시킬 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a119cfd299dd82f3eb2b90d7f7893712a9085897" translate="yes" xml:space="preserve">
          <source>A reader for which all images are guaranteed to support easy random access, or are guaranteed not to support easy random access, may return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; respectively without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">모든 이미지가 쉬운 임의 액세스를 지원한다고 보장되거나 쉬운 임의 액세스를 지원하지 않는 리더는 이미지 데이터에 액세스하지 않고 각각 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다 . 이러한 경우 입력 소스가 설정되지 않았거나 이미지 색인이 범위를 벗어난 경우에도 예외를 발생시킬 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="35dcd41910e274aca3f1af552f0db2276e3cea66" translate="yes" xml:space="preserve">
          <source>A reader for which the tile grid X offset always has the same value (usually 0), may return the value without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">타일 ​​그리드 X 오프셋이 항상 같은 값 (보통 0) 인 판독기는 이미지 데이터에 액세스하지 않고 값을 반환 할 수 있습니다. 이러한 경우 입력 소스가 설정되지 않았거나 이미지 색인이 범위를 벗어난 경우에도 예외를 발생시킬 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="bbd67a5d6af16685ac4e9d2bf54d0e78864b1b1b" translate="yes" xml:space="preserve">
          <source>A reader for which the tile grid Y offset always has the same value (usually 0), may return the value without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">타일 ​​그리드 Y 오프셋이 항상 같은 값 (보통 0)을 가진 판독기는 이미지 데이터에 액세스하지 않고 값을 반환 할 수 있습니다. 이러한 경우 입력 소스가 설정되지 않았거나 이미지 색인이 범위를 벗어난 경우에도 예외를 발생시킬 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="867f5bd8fc867c56578d5a8159e1e056b1f3cc25" translate="yes" xml:space="preserve">
          <source>A reader plug-in may choose whether or not to expose tiling that is present in the image as it is stored. It may even choose to advertise tiling when none is explicitly present. In general, tiling should only be advertised if there is some advantage (in speed or space) to accessing individual tiles. Regardless of whether the reader advertises tiling, it must be capable of reading an arbitrary rectangular region specified in an &lt;code&gt;ImageReadParam&lt;/code&gt;.</source>
          <target state="translated">리더 플러그인은 이미지가 저장 될 때 이미지에 나타나는 타일링을 노출할지 여부를 선택할 수 있습니다. 명시 적으로 존재하지 않는 경우 타일링을 알리도록 선택할 수도 있습니다. 일반적으로 타일링은 개별 타일에 액세스하는 데 속도 나 공간이 유리한 경우에만 알려야합니다. 리더가 타일링을 광고하는지 여부에 관계없이 &lt;code&gt;ImageReadParam&lt;/code&gt; 에 지정된 임의의 사각형 영역을 읽을 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="651daf6a92d260dfff9f7294e86a24dc3c2c6a16" translate="yes" xml:space="preserve">
          <source>A reader that does not support thumbnails need not implement any of the thumbnail-related methods.</source>
          <target state="translated">썸네일을 지원하지 않는 리더는 썸네일 관련 방법을 구현할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a06621c1400cf9d03f59eb5e3390fe1231798330" translate="yes" xml:space="preserve">
          <source>A receive method is any of the &lt;code&gt;onText&lt;/code&gt;, &lt;code&gt;onBinary&lt;/code&gt;, &lt;code&gt;onPing&lt;/code&gt;, &lt;code&gt;onPong&lt;/code&gt; and &lt;code&gt;onClose&lt;/code&gt; methods of &lt;code&gt;Listener&lt;/code&gt;. WebSocket initiates a receive operation by invoking a receive method on the listener. The listener then must return a &lt;code&gt;CompletionStage&lt;/code&gt; which completes once the operation has completed.</source>
          <target state="translated">A receive method is any of the &lt;code&gt;onText&lt;/code&gt; , &lt;code&gt;onBinary&lt;/code&gt; , &lt;code&gt;onPing&lt;/code&gt; , &lt;code&gt;onPong&lt;/code&gt; and &lt;code&gt;onClose&lt;/code&gt; methods of &lt;code&gt;Listener&lt;/code&gt; . WebSocket initiates a receive operation by invoking a receive method on the listener. The listener then must return a &lt;code&gt;CompletionStage&lt;/code&gt; which completes once the operation has completed.</target>
        </trans-unit>
        <trans-unit id="fff4915720e9d39d5a867ff36537e4bf3f12933c" translate="yes" xml:space="preserve">
          <source>A receiver of messages.</source>
          <target state="translated">A receiver of messages.</target>
        </trans-unit>
        <trans-unit id="634e66ef5722485160455f61a91123b81040660a" translate="yes" xml:space="preserve">
          <source>A receiver of messages. The methods in this interface are invoked in strict sequential order for each &lt;a href=&quot;flow.subscription&quot;&gt;&lt;code&gt;Flow.Subscription&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A receiver of messages. The methods in this interface are invoked in strict sequential order for each &lt;a href=&quot;flow.subscription&quot;&gt; &lt;code&gt;Flow.Subscription&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4e72e270ec9d9703b4faefd370a4178908ca5444" translate="yes" xml:space="preserve">
          <source>A record class has the following mandated members: a &lt;em&gt;canonical constructor&lt;/em&gt;, which must provide at least as much access as the record class and whose descriptor is the same as the record descriptor; a private final field corresponding to each component, whose name and type are the same as that of the component; a public accessor method corresponding to each component, whose name and return type are the same as that of the component. If not explicitly declared in the body of the record, implicit implementations for these members are provided.</source>
          <target state="translated">레코드 클래스에는 다음과 같은 필수 멤버가 있습니다. 최소한 레코드 클래스만큼의 액세스를 제공해야하며 설명자가 레코드 설명자와 동일한 &lt;em&gt;표준 생성자&lt;/em&gt; ; 각 구성 요소에 해당하는 비공개 최종 필드로 구성 요소의 이름과 유형이 동일합니다. 이름과 반환 유형이 구성 요소의 것과 동일한 각 구성 요소에 해당하는 공용 접근 자 메서드입니다. 레코드 본문에 명시 적으로 선언되지 않은 경우 이러한 멤버에 대한 암시 적 구현이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="f7cda256eb4e027f8fdfa944cc73e68db59be8b7" translate="yes" xml:space="preserve">
          <source>A record class that &lt;code&gt;implements&lt;/code&gt;&lt;a href=&quot;../io/serializable&quot;&gt;&lt;code&gt;Serializable&lt;/code&gt;&lt;/a&gt; is said to be a</source>
          <target state="translated">&lt;a href=&quot;../io/serializable&quot;&gt; &lt;code&gt;Serializable&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;implements&lt;/code&gt; 하는 레코드 클래스 는</target>
        </trans-unit>
        <trans-unit id="c5f71c1d92a94033a326f188b1311147da11d35c" translate="yes" xml:space="preserve">
          <source>A record component of a &lt;code&gt;record&lt;/code&gt;.</source>
          <target state="translated">(A)의 기록 구성 요소 &lt;code&gt;record&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bc92466136dd557f1efda1977cd4103f7088de0" translate="yes" xml:space="preserve">
          <source>A record declaration.</source>
          <target state="translated">기록 선언.</target>
        </trans-unit>
        <trans-unit id="cc4c68eda808a541ab1e9c00de08f2d0f0f35fd4" translate="yes" xml:space="preserve">
          <source>A record declaration. A &lt;code&gt;SubKind&lt;/code&gt; of &lt;a href=&quot;snippet.kind#TYPE_DECL&quot;&gt;&lt;code&gt;Snippet.Kind.TYPE_DECL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기록 선언. A는 &lt;code&gt;SubKind&lt;/code&gt; 의 &lt;a href=&quot;snippet.kind#TYPE_DECL&quot;&gt; &lt;code&gt;Snippet.Kind.TYPE_DECL&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="448d5462aa764cf8ed2433b656ac7a8922e5d984" translate="yes" xml:space="preserve">
          <source>A record representing the layout state of a child view.</source>
          <target state="translated">A record representing the layout state of a child view.</target>
        </trans-unit>
        <trans-unit id="66101c9ba2e0e8a9722b3d56a8f3dd1dde9f491c" translate="yes" xml:space="preserve">
          <source>A record representing the layout state of a child view. It is runnable as a task on another thread. All access to the child view that is based upon a read-lock on the model should synchronize on this object (i.e. The layout thread and the GUI thread can both have a read lock on the model at the same time and are not protected from each other). Access to a child view hierarchy is serialized via synchronization on the ChildState instance.</source>
          <target state="translated">A record representing the layout state of a child view. It is runnable as a task on another thread. All access to the child view that is based upon a read-lock on the model should synchronize on this object (i.e. The layout thread and the GUI thread can both have a read lock on the model at the same time and are not protected from each other). Access to a child view hierarchy is serialized via synchronization on the ChildState instance.</target>
        </trans-unit>
        <trans-unit id="6584f15329fdd87f7ecf990a95341032cd0f7196" translate="yes" xml:space="preserve">
          <source>A record type.</source>
          <target state="translated">레코드 유형.</target>
        </trans-unit>
        <trans-unit id="0f82aa7af0668141b02456a973f05eb6d228285d" translate="yes" xml:space="preserve">
          <source>A recorded Java class loader.</source>
          <target state="translated">기록 된 Java 클래스 로더.</target>
        </trans-unit>
        <trans-unit id="61ba0c567bb8ec27adfb1ba4f0e91e83829dbf42" translate="yes" xml:space="preserve">
          <source>A recorded Java thread group.</source>
          <target state="translated">기록 된 Java 스레드 그룹입니다.</target>
        </trans-unit>
        <trans-unit id="14c71389dd06639ee8e1a65973a21423ec9b7ed2" translate="yes" xml:space="preserve">
          <source>A recorded Java type, such as a class or an interface.</source>
          <target state="translated">클래스 또는 인터페이스와 같은 기록 된 Java 유형입니다.</target>
        </trans-unit>
        <trans-unit id="4ac12da9e32862457c542ec13d583943a1eb33f1" translate="yes" xml:space="preserve">
          <source>A recorded event.</source>
          <target state="translated">녹화 된 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="b3755c86aaa0fe04fd6f029ab7a03f84e67d21f9" translate="yes" xml:space="preserve">
          <source>A recorded frame in a stack trace.</source>
          <target state="translated">스택 추적에 기록 된 프레임입니다.</target>
        </trans-unit>
        <trans-unit id="b7a26e4a58c745ab9b460a44345fb8fc15862f32" translate="yes" xml:space="preserve">
          <source>A recorded method.</source>
          <target state="translated">기록 된 방법.</target>
        </trans-unit>
        <trans-unit id="da1f6883f68596628dbf06de4741075f2bf3b3a1" translate="yes" xml:space="preserve">
          <source>A recorded stack trace.</source>
          <target state="translated">기록 된 스택 추적.</target>
        </trans-unit>
        <trans-unit id="2bd0a498d0ba95b8b611b998317684d90fe8d526" translate="yes" xml:space="preserve">
          <source>A recorded thread.</source>
          <target state="translated">녹음 된 스레드.</target>
        </trans-unit>
        <trans-unit id="1cd15cdc95a079e01307d4fb1077f058b0e8b0ad" translate="yes" xml:space="preserve">
          <source>A recording becomes available when it is created. It becomes unavailable when it is in the &lt;code&gt;CLOSED&lt;/code&gt; state, typically after a call to &lt;a href=&quot;recording#close()&quot;&gt;&lt;code&gt;Recording.close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">녹음이 만들어지면 사용할 수있게됩니다. 일반적으로 &lt;a href=&quot;recording#close()&quot;&gt; &lt;code&gt;Recording.close()&lt;/code&gt; &lt;/a&gt; 호출 한 후 &lt;code&gt;CLOSED&lt;/code&gt; 상태 에 있으면 사용할 수 없게됩니다 .</target>
        </trans-unit>
        <trans-unit id="90bb1816477c407c365782a26d8950b3715c80d0" translate="yes" xml:space="preserve">
          <source>A recording file.</source>
          <target state="translated">녹음 파일.</target>
        </trans-unit>
        <trans-unit id="5fc29b5fbf9f70378211c52387d29f6578870f17" translate="yes" xml:space="preserve">
          <source>A recording stream produces events from the current JVM (Java Virtual Machine).</source>
          <target state="translated">레코딩 스트림은 현재 JVM (Java Virtual Machine)에서 이벤트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="cd21b117a7dbcda45861fd498219269592d37e17" translate="yes" xml:space="preserve">
          <source>A recording that is stopped can't be restarted.</source>
          <target state="translated">중지 된 녹음은 다시 시작할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f2ba4c734e819af6071d0e01b9a0b47db20258b7" translate="yes" xml:space="preserve">
          <source>A rectangle indicating this component's bounds; &lt;code&gt;null&lt;/code&gt; if this object is not on the screen.</source>
          <target state="translated">A rectangle indicating this component's bounds; &lt;code&gt;null&lt;/code&gt; if this object is not on the screen.</target>
        </trans-unit>
        <trans-unit id="116350179f1209d5b8e48e44fe5d6ce7864fde75" translate="yes" xml:space="preserve">
          <source>A rectangle indicating this component's bounds; null if this object is not on the screen.</source>
          <target state="translated">A rectangle indicating this component's bounds; null if this object is not on the screen.</target>
        </trans-unit>
        <trans-unit id="7e38e744edc750586d21b1f410ff770f04b9e587" translate="yes" xml:space="preserve">
          <source>A rectangle used for general layout calculations in order to avoid constructing many new Rectangles on the fly.</source>
          <target state="translated">A rectangle used for general layout calculations in order to avoid constructing many new Rectangles on the fly.</target>
        </trans-unit>
        <trans-unit id="0be2b7ed75dd5db4a77d4eb6f31175f72790f46b" translate="yes" xml:space="preserve">
          <source>A recursive result-bearing &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">재귀 결과 베어링 &lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a81fc059d2c4f24cc38eba91bff7746f9766fc6" translate="yes" xml:space="preserve">
          <source>A recursive resultless &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">재귀 resultless &lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6300992022ef59137e609e78d48653dc142fae21" translate="yes" xml:space="preserve">
          <source>A recursive resultless &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;. This class establishes conventions to parameterize resultless actions as &lt;code&gt;Void&lt;/code&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;s. Because &lt;code&gt;null&lt;/code&gt; is the only valid value of type &lt;code&gt;Void&lt;/code&gt;, methods such as &lt;code&gt;join&lt;/code&gt; always return &lt;code&gt;null&lt;/code&gt; upon completion.</source>
          <target state="translated">재귀 resultless &lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt; . 이 클래스는 결과없는 조치를 &lt;code&gt;Void&lt;/code&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; 로 매개 변수화하는 규칙을 설정 합니다. 때문에 &lt;code&gt;null&lt;/code&gt; 타입의 유일한 유효 값이 &lt;code&gt;Void&lt;/code&gt; , 방법과 같은 &lt;code&gt;join&lt;/code&gt; 항상 반환 &lt;code&gt;null&lt;/code&gt; 완료시.</target>
        </trans-unit>
        <trans-unit id="1cb5a53925a15d8d640449158f0ca3038779f2ad" translate="yes" xml:space="preserve">
          <source>A reentrant mutual exclusion &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; with the same basic behavior and semantics as the implicit monitor lock accessed using &lt;code&gt;synchronized&lt;/code&gt; methods and statements, but with extended capabilities.</source>
          <target state="translated">&lt;code&gt;synchronized&lt;/code&gt; 메소드 및 명령문을 사용하여 액세스 된 암시 적 모니터 잠금과 동일한 기본 동작 및 의미를 갖는 재진입 상호 배제 &lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="04ecfdbafe40a0c89cc49b68848d977d5074ada4" translate="yes" xml:space="preserve">
          <source>A reference object, blocking until one becomes available</source>
          <target state="translated">참조 객체, 사용 가능해질 때까지 차단</target>
        </trans-unit>
        <trans-unit id="672ba6654ac391d503ee81be4f5c402100ae4a62" translate="yes" xml:space="preserve">
          <source>A reference object, if one was available within the specified timeout period, otherwise &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">지정된 시간 초과 기간 내에 사용 가능한 참조 객체 인 경우 그렇지 않은 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06af76cd96533be1c41483691d0275d471641b26" translate="yes" xml:space="preserve">
          <source>A reference object, if one was immediately available, otherwise &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">참조 객체 (즉시 사용 가능한 경우) &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8919f8790ed9d4c040586b362295a1be11a5f8d5" translate="yes" xml:space="preserve">
          <source>A reference to a java class is written in the form &amp;lt;class&amp;gt;javax.swing.JButton&amp;lt;/class&amp;gt;.</source>
          <target state="translated">Java 클래스에 대한 참조는 &amp;lt;class&amp;gt; javax.swing.JButton &amp;lt;/ class&amp;gt; 형식으로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="4ae50ec50d9246a70bb6c354fb878049cf49f660" translate="yes" xml:space="preserve">
          <source>A reference to a module with the given name or an empty &lt;code&gt;Optional&lt;/code&gt; if not found</source>
          <target state="translated">A reference to a module with the given name or an empty &lt;code&gt;Optional&lt;/code&gt; if not found</target>
        </trans-unit>
        <trans-unit id="e10b42e6b6db14161464cbda75b773fc826c31d1" translate="yes" xml:space="preserve">
          <source>A reference to a module's content.</source>
          <target state="translated">A reference to a module's content.</target>
        </trans-unit>
        <trans-unit id="3f2dbcaad020f19ddb81ac705d49ea2f43e55135" translate="yes" xml:space="preserve">
          <source>A reference to a service used by a module.</source>
          <target state="translated">A reference to a service used by a module.</target>
        </trans-unit>
        <trans-unit id="350f2c6afc92d7c05299564aab42eafe038acf67" translate="yes" xml:space="preserve">
          <source>A reference to an array is written using the &quot;array&quot; tag. The &quot;class&quot; and &quot;length&quot; attributes specify the sub-type of the array and its length respectively.</source>
          <target state="translated">배열에 대한 참조는 &quot;array&quot;태그를 사용하여 작성됩니다. &quot;class&quot;및 &quot;length&quot;속성은 배열의 하위 유형과 길이를 각각 지정합니다.</target>
        </trans-unit>
        <trans-unit id="73826c2a6d54068c63f0249d63bcc67824b94724" translate="yes" xml:space="preserve">
          <source>A reference to the Exception if one was thrown; null if no Exception was thrown or if this InvocationEvent does not catch exceptions</source>
          <target state="translated">A reference to the Exception if one was thrown; null if no Exception was thrown or if this InvocationEvent does not catch exceptions</target>
        </trans-unit>
        <trans-unit id="87179d74d1fc8f43458ebcda85a770e65a5a5b74" translate="yes" xml:space="preserve">
          <source>A reference to the Throwable if one was thrown; null if no Throwable was thrown or if this InvocationEvent does not catch Throwables</source>
          <target state="translated">A reference to the Throwable if one was thrown; null if no Throwable was thrown or if this InvocationEvent does not catch Throwables</target>
        </trans-unit>
        <trans-unit id="fce9f2f5a454ee93f2c297c9ee7fb38e95a6dd71" translate="yes" xml:space="preserve">
          <source>A reference to this &lt;code&gt;Appendable&lt;/code&gt;</source>
          <target state="translated">이 &lt;code&gt;Appendable&lt;/code&gt; 대한 참조</target>
        </trans-unit>
        <trans-unit id="40f77ba4ee06e2db8298d41927f9ba32b14c39a0" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile int&lt;/code&gt; fields of designated classes.</source>
          <target state="translated">지정된 클래스의 지정된 &lt;code&gt;volatile int&lt;/code&gt; 필드에 대한 원자 업데이트를 가능하게하는 리플렉션 기반 유틸리티</target>
        </trans-unit>
        <trans-unit id="7e2b53980b1820a7ffe2d6d89f81034a3f52c1d8" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile int&lt;/code&gt; fields of designated classes. This class is designed for use in atomic data structures in which several fields of the same node are independently subject to atomic updates.</source>
          <target state="translated">지정된 클래스의 지정된 &lt;code&gt;volatile int&lt;/code&gt; 필드에 대한 원자 업데이트를 가능하게하는 리플렉션 기반 유틸리티 이 클래스는 동일한 노드의 여러 필드가 독립적으로 원자 업데이트되는 원자 데이터 구조에 사용하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="62ef22f6088afcedd2b57259a251e15a91d2a19a" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile long&lt;/code&gt; fields of designated classes.</source>
          <target state="translated">지정된 클래스의 지정된 &lt;code&gt;volatile long&lt;/code&gt; 필드에 대한 원자 업데이트를 가능하게하는 리플렉션 기반 유틸리티입니다 .</target>
        </trans-unit>
        <trans-unit id="f64d3fe565b074349f8d34af10a23fad8d736a9d" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile long&lt;/code&gt; fields of designated classes. This class is designed for use in atomic data structures in which several fields of the same node are independently subject to atomic updates.</source>
          <target state="translated">지정된 클래스의 지정된 &lt;code&gt;volatile long&lt;/code&gt; 필드에 대한 원자 업데이트를 가능하게하는 리플렉션 기반 유틸리티입니다 . 이 클래스는 동일한 노드의 여러 필드가 독립적으로 원자 업데이트되는 원자 데이터 구조에 사용하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="c5bba777cabc2754604b16f480628e723025c315" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile&lt;/code&gt; reference fields of designated classes.</source>
          <target state="translated">지정된 클래스의 지정된 &lt;code&gt;volatile&lt;/code&gt; 참조 필드에 대한 원자 업데이트를 가능하게하는 리플렉션 기반 유틸리티입니다 .</target>
        </trans-unit>
        <trans-unit id="00892eb028af7eaca0b0c67c0879a21e04e9cf9a" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile&lt;/code&gt; reference fields of designated classes. This class is designed for use in atomic data structures in which several reference fields of the same node are independently subject to atomic updates. For example, a tree node might be declared as</source>
          <target state="translated">지정된 클래스의 지정된 &lt;code&gt;volatile&lt;/code&gt; 참조 필드에 대한 원자 업데이트를 가능하게하는 리플렉션 기반 유틸리티입니다 . 이 클래스는 동일한 노드의 여러 참조 필드가 독립적으로 원자 업데이트되는 원자 데이터 구조에 사용하도록 설계되었습니다. 예를 들어, 트리 노드는 다음과 같이 선언 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96f55a10be3cecb8fb51d4417ac62c4173ae8d9b" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;#lock(long,long,boolean,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; against access by other programs.</source>
          <target state="translated">A region of a file may be &lt;a href=&quot;#lock(long,long,boolean,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; against access by other programs.</target>
        </trans-unit>
        <trans-unit id="19a6ca7d310b007f30dbfe6771f3c05ce7388326" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt;&lt;code&gt;&lt;i&gt;mapped&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; directly into memory; for large files this is often much more efficient than invoking the usual &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt; methods.</source>
          <target state="translated">A region of a file may be &lt;a href=&quot;#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt; &lt;code&gt;&lt;i&gt;mapped&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; directly into memory; for large files this is often much more efficient than invoking the usual &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt; methods.</target>
        </trans-unit>
        <trans-unit id="7aef73b938bec112bb6e27f046c620bbab3f13f5" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; against access by other programs.</source>
          <target state="translated">파일의 영역이 다른 프로그램의 액세스에 대해 &lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="986e19cabf09c2b5bb8f5bb41c5057eff866eba5" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt;&lt;code&gt;&lt;i&gt;mapped&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; directly into memory; for large files this is often much more efficient than invoking the usual &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt; methods.</source>
          <target state="translated">파일의 영역은 메모리 &lt;a href=&quot;filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt; &lt;code&gt;&lt;i&gt;mapped&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 직접 &lt;i&gt;매핑&lt;/i&gt; 될 수 있습니다 . 큰 파일의 경우 이것은 일반적인 &lt;code&gt;read&lt;/code&gt; 또는 &lt;code&gt;write&lt;/code&gt; 메소드를 호출하는 것보다 훨씬 효율적 입니다.</target>
        </trans-unit>
        <trans-unit id="6ed5fce3c0b65ae32c0e5d7426d44ead13fd5ca7" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; against access by other programs.</source>
          <target state="translated">파일의 영역이 다른 프로그램의 액세스에 대해 &lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b5ff16856ff2869ff88908e4046d1b1be295d7f" translate="yes" xml:space="preserve">
          <source>A region of a file may be mapped into memory in one of three modes:</source>
          <target state="translated">파일의 영역은 다음 세 가지 모드 중 하나로 메모리에 매핑 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59bf8d4bec6d055663cd61607002845b757308c9" translate="yes" xml:space="preserve">
          <source>A registered event class can write data to Flight Recorder and event metadata can be obtained by invoking &lt;a href=&quot;flightrecorder#getEventTypes()&quot;&gt;&lt;code&gt;FlightRecorder.getEventTypes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">등록 된 이벤트 클래스는 Flight Recorder에 데이터를 쓸 수 있으며 &lt;a href=&quot;flightrecorder#getEventTypes()&quot;&gt; &lt;code&gt;FlightRecorder.getEventTypes()&lt;/code&gt; &lt;/a&gt; 를 호출하여 이벤트 메타 데이터를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e9f74d623670ef8ac431e94f0bb98af4e602455a" translate="yes" xml:space="preserve">
          <source>A registered listener becomes deregistered when:</source>
          <target state="translated">다음과 같은 경우 등록 된 리스너가 등록 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="2adeb89f45dc07b4400a747cef47b81ffecf1049" translate="yes" xml:space="preserve">
          <source>A registry for Image I/O service provider instances.</source>
          <target state="translated">A registry for Image I/O service provider instances.</target>
        </trans-unit>
        <trans-unit id="8c505d5b7a0d2f089f5e07f0d38ee3be4e6de6a0" translate="yes" xml:space="preserve">
          <source>A registry for Image I/O service provider instances. Service provider classes may be discovered at runtime by the mechanisms documented in &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;. The intent is that it be relatively inexpensive to load and inspect all available Image I/O service provider classes. These classes may then be used to locate and instantiate more heavyweight classes that will perform actual work, in this case instances of &lt;code&gt;ImageReader&lt;/code&gt;, &lt;code&gt;ImageWriter&lt;/code&gt;, &lt;code&gt;ImageTranscoder&lt;/code&gt;, &lt;code&gt;ImageInputStream&lt;/code&gt;, and &lt;code&gt;ImageOutputStream&lt;/code&gt;. Service providers included in the Java runtime are automatically loaded as soon as this class is instantiated.</source>
          <target state="translated">A registry for Image I/O service provider instances. Service provider classes may be discovered at runtime by the mechanisms documented in &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;. The intent is that it be relatively inexpensive to load and inspect all available Image I/O service provider classes. These classes may then be used to locate and instantiate more heavyweight classes that will perform actual work, in this case instances of &lt;code&gt;ImageReader&lt;/code&gt; , &lt;code&gt;ImageWriter&lt;/code&gt; , &lt;code&gt;ImageTranscoder&lt;/code&gt; , &lt;code&gt;ImageInputStream&lt;/code&gt; , and &lt;code&gt;ImageOutputStream&lt;/code&gt; . Service providers included in the Java runtime are automatically loaded as soon as this class is instantiated.</target>
        </trans-unit>
        <trans-unit id="f6ea3557db4d25afb8913a2730c6bdafbafc851d" translate="yes" xml:space="preserve">
          <source>A registry for service provider instances for Image I/O service types.</source>
          <target state="translated">A registry for service provider instances for Image I/O service types.</target>
        </trans-unit>
        <trans-unit id="796ce01fe357cfe1131906cfe0da8f399d6b1c53" translate="yes" xml:space="preserve">
          <source>A registry for service provider instances.</source>
          <target state="translated">서비스 제공자 인스턴스의 레지스트리.</target>
        </trans-unit>
        <trans-unit id="8cc7ea1f17a9b34b3a301d78fcc3206b01129af0" translate="yes" xml:space="preserve">
          <source>A registry for service provider instances. Service provider classes may be detected at run time by means of meta-information in the JAR files containing them. The intent is that it be relatively inexpensive to load and inspect all available service provider classes. These classes may them be used to locate and instantiate more heavyweight classes that will perform actual work, in this case instances of &lt;code&gt;ImageReader&lt;/code&gt;, &lt;code&gt;ImageWriter&lt;/code&gt;, &lt;code&gt;ImageTranscoder&lt;/code&gt;, &lt;code&gt;ImageInputStream&lt;/code&gt;, and &lt;code&gt;ImageOutputStream&lt;/code&gt;.</source>
          <target state="translated">서비스 제공자 인스턴스의 레지스트리. 서비스 제공자 클래스는이를 포함하는 JAR 파일에서 메타 정보를 통해 런타임에 감지 될 수 있습니다. 사용 가능한 모든 서비스 공급자 클래스를로드하고 검사하는 것이 상대적으로 저렴합니다. 이러한 클래스는 실제 작업을 수행하는 더 무거운 클래스 (이 경우 &lt;code&gt;ImageReader&lt;/code&gt; , &lt;code&gt;ImageWriter&lt;/code&gt; , &lt;code&gt;ImageTranscoder&lt;/code&gt; , &lt;code&gt;ImageInputStream&lt;/code&gt; 및 &lt;code&gt;ImageOutputStream&lt;/code&gt; ) 를 찾고 인스턴스화하는 데 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b06c31cba6df7f439a79aa3ae1390ce3824b0549" translate="yes" xml:space="preserve">
          <source>A regular expression, specified as a string, must first be compiled into an instance of this class. The resulting pattern can then be used to create a &lt;a href=&quot;matcher&quot;&gt;&lt;code&gt;Matcher&lt;/code&gt;&lt;/a&gt; object that can match arbitrary &lt;a href=&quot;../../lang/charsequence&quot;&gt;character sequences&lt;/a&gt; against the regular expression. All of the state involved in performing a match resides in the matcher, so many matchers can share the same pattern.</source>
          <target state="translated">문자열로 지정된 정규식을 먼저이 클래스의 인스턴스로 컴파일해야합니다. 그런 다음 결과 패턴을 사용하여 임의의 &lt;a href=&quot;../../lang/charsequence&quot;&gt;문자 시퀀스&lt;/a&gt; 를 정규식 과 일치시킬 수 있는 &lt;a href=&quot;matcher&quot;&gt; &lt;code&gt;Matcher&lt;/code&gt; &lt;/a&gt; 객체 를 만들 수 있습니다 . 매치를 수행하는 데 관련된 모든 상태는 매처에 상주하므로 많은 매 처가 동일한 패턴을 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfbdeb6516079093b7ec45a50b1b3abe285be4b9" translate="yes" xml:space="preserve">
          <source>A relation instance can be created explicitly, as an object implementing the &lt;a href=&quot;relation&quot;&gt;&lt;code&gt;Relation&lt;/code&gt;&lt;/a&gt; interface, typically a &lt;a href=&quot;relationsupport&quot;&gt;&lt;code&gt;RelationSupport&lt;/code&gt;&lt;/a&gt;. (A &lt;code&gt;RelationSupport&lt;/code&gt; is itself a valid MBean, so it can be registered in the MBean Server, though this is not required.) Alternatively, a relation instance can be created implicitly using the Relation Service's &lt;a href=&quot;relationservicembean#createRelation(java.lang.String,java.lang.String,javax.management.relation.RoleList)&quot;&gt;&lt;code&gt;createRelation&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">A relation instance can be created explicitly, as an object implementing the &lt;a href=&quot;relation&quot;&gt; &lt;code&gt;Relation&lt;/code&gt; &lt;/a&gt; interface, typically a &lt;a href=&quot;relationsupport&quot;&gt; &lt;code&gt;RelationSupport&lt;/code&gt; &lt;/a&gt;. (A &lt;code&gt;RelationSupport&lt;/code&gt; is itself a valid MBean, so it can be registered in the MBean Server, though this is not required.) Alternatively, a relation instance can be created implicitly using the Relation Service's &lt;a href=&quot;relationservicembean#createRelation(java.lang.String,java.lang.String,javax.management.relation.RoleList)&quot;&gt; &lt;code&gt;createRelation&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="84baa6ec0a9b50f4bedf3f108bed7c1a5d83f975" translate="yes" xml:space="preserve">
          <source>A relation instance can be created explicitly, as an object implementing the &lt;a href=&quot;relation&quot;&gt;&lt;code&gt;Relation&lt;/code&gt;&lt;/a&gt; interface, typically a &lt;a href=&quot;relationsupport&quot;&gt;&lt;code&gt;RelationSupport&lt;/code&gt;&lt;/a&gt;. (A &lt;code&gt;RelationSupport&lt;/code&gt; is itself a valid MBean, so it can be registered in the MBean Server, though this is not required.) Alternatively, a relation instance can be created implicitly using the Relation Service's &lt;a href=&quot;relationservicembean#createRelation-java.lang.String-java.lang.String-javax.management.relation.RoleList-&quot;&gt;&lt;code&gt;createRelation&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">릴레이션 인스턴스가 실행 대상으로서 명시 생성 될 수 &lt;a href=&quot;relation&quot;&gt; &lt;code&gt;Relation&lt;/code&gt; &lt;/a&gt; 인터페이스, 전형적으로 &lt;a href=&quot;relationsupport&quot;&gt; &lt;code&gt;RelationSupport&lt;/code&gt; &lt;/a&gt; . ( &lt;code&gt;RelationSupport&lt;/code&gt; 자체는 유효한 MBean이므로 필수는 아니지만 MBean 서버에 등록 할 수 있습니다.) 또는 관계 서비스의 &lt;a href=&quot;relationservicembean#createRelation-java.lang.String-java.lang.String-javax.management.relation.RoleList-&quot;&gt; &lt;code&gt;createRelation&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 관계 인스턴스를 내재적으로 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e34ea165e026e514c6feec0e60a888d6555eca96" translate="yes" xml:space="preserve">
          <source>A relation or reset character not followed by a text-argument (e.g. &quot;a &amp;lt; ,b&quot;).</source>
          <target state="translated">텍스트 인수가없는 관계 또는 재설정 문자 (예 : &quot;a &amp;lt;, b&quot;)</target>
        </trans-unit>
        <trans-unit id="94200c0502fdfc147b5924ea45eb6f684df09894" translate="yes" xml:space="preserve">
          <source>A relation type can be created explicitly, as an object implementing the &lt;a href=&quot;relationtype&quot;&gt;&lt;code&gt;RelationType&lt;/code&gt;&lt;/a&gt; interface, typically a &lt;a href=&quot;relationtypesupport&quot;&gt;&lt;code&gt;RelationTypeSupport&lt;/code&gt;&lt;/a&gt;. Alternatively, it can be created implicitly using the Relation Service's &lt;a href=&quot;relationservicembean#createRelationType(java.lang.String,javax.management.relation.RoleInfo%5B%5D)&quot;&gt;&lt;code&gt;createRelationType&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">A relation type can be created explicitly, as an object implementing the &lt;a href=&quot;relationtype&quot;&gt; &lt;code&gt;RelationType&lt;/code&gt; &lt;/a&gt; interface, typically a &lt;a href=&quot;relationtypesupport&quot;&gt; &lt;code&gt;RelationTypeSupport&lt;/code&gt; &lt;/a&gt;. Alternatively, it can be created implicitly using the Relation Service's &lt;a href=&quot;relationservicembean#createRelationType(java.lang.String,javax.management.relation.RoleInfo%5B%5D)&quot;&gt; &lt;code&gt;createRelationType&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="9b5292f74c4969e9f524b42a1578d24ee29625b3" translate="yes" xml:space="preserve">
          <source>A relation type can be created explicitly, as an object implementing the &lt;a href=&quot;relationtype&quot;&gt;&lt;code&gt;RelationType&lt;/code&gt;&lt;/a&gt; interface, typically a &lt;a href=&quot;relationtypesupport&quot;&gt;&lt;code&gt;RelationTypeSupport&lt;/code&gt;&lt;/a&gt;. Alternatively, it can be created implicitly using the Relation Service's &lt;a href=&quot;relationservicembean#createRelationType-java.lang.String-javax.management.relation.RoleInfo:A-&quot;&gt;&lt;code&gt;createRelationType&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">관계형은 구현 개체로서 명시 적으로 생성 될 수 &lt;a href=&quot;relationtype&quot;&gt; &lt;code&gt;RelationType&lt;/code&gt; 의&lt;/a&gt; 인터페이스, 전형적 &lt;a href=&quot;relationtypesupport&quot;&gt; &lt;code&gt;RelationTypeSupport&lt;/code&gt; 를&lt;/a&gt; . 또는 관계 서비스의 &lt;a href=&quot;relationservicembean#createRelationType-java.lang.String-javax.management.relation.RoleInfo:A-&quot;&gt; &lt;code&gt;createRelationType&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 내재적으로 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cca4085b34ffc8b6117aabd0f662f58af45f6ef2" translate="yes" xml:space="preserve">
          <source>A relation type has to be declared in the Relation Service:</source>
          <target state="translated">관계 유형은 관계 서비스에서 선언되어야합니다.</target>
        </trans-unit>
        <trans-unit id="7f4eb7687a7b917a5f779c8905e8aba99535587f" translate="yes" xml:space="preserve">
          <source>A relation type includes a relation type name and a list of role infos (represented by RoleInfo objects).</source>
          <target state="translated">관계 유형에는 관계 유형 이름과 역할 정보 목록 (RoleInfo 객체로 표시)이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="226f45ce68149948ca7688394eb2884406a796ce" translate="yes" xml:space="preserve">
          <source>A relinkable call site that implements a polymorphic inline caching strategy.</source>
          <target state="translated">다형성 인라인 캐싱 전략을 구현하는 재 연결 가능한 호출 사이트입니다.</target>
        </trans-unit>
        <trans-unit id="fee6c1fc7389590db7248bc954c1878ba0d54c1e" translate="yes" xml:space="preserve">
          <source>A relinkable call site that implements a polymorphic inline caching strategy. It remembers up to 8 &lt;a href=&quot;../linker/guardedinvocation&quot;&gt;&lt;code&gt;GuardedInvocation&lt;/code&gt;&lt;/a&gt;s it was linked with, and on each relink request builds a cascading chain of method handles of one invocation falling back to the next one. The number of remembered invocations can be customized by overriding &lt;a href=&quot;#getMaxChainLength()&quot;&gt;&lt;code&gt;getMaxChainLength()&lt;/code&gt;&lt;/a&gt; in a subclass. When this call site is relinked with a new invocation and the length of the chain is already at the maximum, it will throw away the oldest invocation. Invocations with invalidated switch points and ones for which their invalidating exception triggered are removed eagerly from the chain. The invocations are never reordered; the most recently linked method handle is always at the start of the chain and the least recently linked at its end. The call site can be safely relinked on more than one thread concurrently. Race conditions in linking are resolved by throwing away the &lt;a href=&quot;../linker/guardedinvocation&quot;&gt;&lt;code&gt;GuardedInvocation&lt;/code&gt;&lt;/a&gt; produced on the losing thread without incorporating it into the chain, so it can lead to repeated linking for the same arguments.</source>
          <target state="translated">다형성 인라인 캐싱 전략을 구현하는 재 연결 가능한 호출 사이트입니다. 연결된 &lt;a href=&quot;../linker/guardedinvocation&quot;&gt; &lt;code&gt;GuardedInvocation&lt;/code&gt; 을&lt;/a&gt; 최대 8 개까지 기억하고 각 재 연결 요청에서 다음 호출로 돌아가는 하나의 호출에 대한 메서드 핸들의 계단식 체인을 구축합니다. 기억 된 호출 수는 &lt;a href=&quot;#getMaxChainLength()&quot;&gt; &lt;code&gt;getMaxChainLength()&lt;/code&gt; &lt;/a&gt; 를 재정 의하여 사용자 정의 할 수 있습니다.하위 클래스에서. 이 호출 사이트가 새 호출로 다시 연결되고 체인 길이가 이미 최대 값에 도달하면 가장 오래된 호출을 버립니다. 무효화 된 스위치 포인트가있는 호출과 무효화 예외가 트리거 된 호출은 체인에서 열심히 제거됩니다. 호출은 순서가 변경되지 않습니다. 가장 최근에 연결된 메서드 핸들은 항상 체인의 시작 부분에 있고 가장 최근에 연결된 메서드 핸들은 끝 부분에 있습니다. 호출 사이트는 동시에 둘 이상의 스레드에서 안전하게 다시 연결할 수 있습니다. 연결의 경쟁 조건 은 손실 된 스레드에서 생성 된 &lt;a href=&quot;../linker/guardedinvocation&quot;&gt; &lt;code&gt;GuardedInvocation&lt;/code&gt; 을&lt;/a&gt; 체인에 통합하지 않고 버림 으로써 해결 되므로 동일한 인수에 대해 반복되는 연결로 이어질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80e93a3ef2fd2ed326132307f67851d61fa0020b" translate="yes" xml:space="preserve">
          <source>A relinkable call site that implements monomorphic inline caching strategy, only being linked to a single &lt;a href=&quot;../linker/guardedinvocation&quot;&gt;&lt;code&gt;GuardedInvocation&lt;/code&gt;&lt;/a&gt; at any given time.</source>
          <target state="translated">모노 모픽 인라인 캐싱 전략을 구현하는 재 연결 가능한 호출 사이트로, 주어진 시간에 단일 &lt;a href=&quot;../linker/guardedinvocation&quot;&gt; &lt;code&gt;GuardedInvocation&lt;/code&gt; &lt;/a&gt; 에만 연결됩니다 .</target>
        </trans-unit>
        <trans-unit id="6b594fc22f4471ce397104f7a5fc6dc5fe0f5a4c" translate="yes" xml:space="preserve">
          <source>A relinkable call site that implements monomorphic inline caching strategy, only being linked to a single &lt;a href=&quot;../linker/guardedinvocation&quot;&gt;&lt;code&gt;GuardedInvocation&lt;/code&gt;&lt;/a&gt; at any given time. If the guard of that single invocation fails, or it has an invalidated switch point, or its invalidating exception triggered, then the call site will throw it away and ask its associated &lt;a href=&quot;../dynamiclinker&quot;&gt;&lt;code&gt;DynamicLinker&lt;/code&gt;&lt;/a&gt; to relink it.</source>
          <target state="translated">모노 모픽 인라인 캐싱 전략을 구현하는 재 연결 가능한 호출 사이트로, 주어진 시간에 단일 &lt;a href=&quot;../linker/guardedinvocation&quot;&gt; &lt;code&gt;GuardedInvocation&lt;/code&gt; &lt;/a&gt; 에만 연결됩니다 . 해당 단일 호출의 가드가 실패하거나 무효화 된 스위치 포인트가 있거나 무효화 예외가 트리거 된 경우 호출 사이트는이를 버리고 연관된 &lt;a href=&quot;../dynamiclinker&quot;&gt; &lt;code&gt;DynamicLinker&lt;/code&gt; &lt;/a&gt; 에게 다시 링크 하도록 요청 합니다.</target>
        </trans-unit>
        <trans-unit id="233dd220dfbf332ba6c54ef6b64c345e5c6e09cb" translate="yes" xml:space="preserve">
          <source>A remote object implementation should implement the &lt;code&gt;Unreferenced&lt;/code&gt; interface to receive notification when there are no more clients that reference that remote object.</source>
          <target state="translated">원격 객체 구현은 해당 원격 객체를 참조하는 클라이언트가 더 이상 없을 때 알림을 받기 위해 &lt;code&gt;Unreferenced&lt;/code&gt; 인터페이스를 구현해야 합니다.</target>
        </trans-unit>
        <trans-unit id="91a4fd1fac8ab7b48e8bfde72207ecf2502ecda3" translate="yes" xml:space="preserve">
          <source>A renderer component must override isShowing() and unconditionally return true to work correctly because the Swing paint does nothing for components with isShowing false.</source>
          <target state="translated">렌더러 구성 요소는 isShowing ()을 재정의하고 스윙 페인트가 isShowing이 false 인 구성 요소에 대해 아무 작업도하지 않기 때문에 올바르게 작동하려면 무조건 true를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="e416d1b9bbad3251aba861210072b4207a2080fc" translate="yes" xml:space="preserve">
          <source>A replacement is legal if, and only if, it is a legal sequence of bytes in this encoder's charset; that is, it must be possible to decode the replacement into one or more sixteen-bit Unicode characters.</source>
          <target state="translated">이 엔코더의 문자셋에서 유효한 바이트 시퀀스 인 경우에만 대체가 가능합니다. 즉, 대체를 하나 이상의 16 비트 유니 코드 문자로 디코딩 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9621585bd05248c7bbaa827c2bc4c50cf8bb5e38" translate="yes" xml:space="preserve">
          <source>A representation of</source>
          <target state="translated">의 표현</target>
        </trans-unit>
        <trans-unit id="caf8ca6be1bfb9f68b61b3ec2a2254ddb247de49" translate="yes" xml:space="preserve">
          <source>A representation of a &lt;code&gt;Data&lt;/code&gt; type containing an octet stream.</source>
          <target state="translated">옥텟 스트림을 포함하는 &lt;code&gt;Data&lt;/code&gt; 유형 의 표현 .</target>
        </trans-unit>
        <trans-unit id="347dc03263c18a2d333cb15952a66d27aa4d22d3" translate="yes" xml:space="preserve">
          <source>A representation of a content model.</source>
          <target state="translated">콘텐츠 모델의 표현입니다.</target>
        </trans-unit>
        <trans-unit id="6f2288f82bc135c481df3ef4c7236dffa9759880" translate="yes" xml:space="preserve">
          <source>A representation of a content model. A content model is basically a restricted BNF expression. It is restricted in the sense that it must be deterministic. This means that you don't have to represent it as a finite state automaton.</source>
          <target state="translated">콘텐츠 모델의 표현입니다. 콘텐츠 모델은 기본적으로 제한된 BNF 표현입니다. 결정적이어야한다는 의미에서 제한됩니다. 이것은 유한 상태 자동화로 표현할 필요가 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="1d2b22873912e7b2000dbd32116f7917cc96cfde" translate="yes" xml:space="preserve">
          <source>A representation of a version string for an implementation of the Java SE Platform.</source>
          <target state="translated">Java SE 플랫폼 구현을위한 버전 문자열 표현입니다.</target>
        </trans-unit>
        <trans-unit id="b48578f284fe1829fc49df6d070b0fe70ae64905" translate="yes" xml:space="preserve">
          <source>A representation of a version string for an implementation of the Java SE Platform. A version string consists of a version number optionally followed by pre-release and build information.</source>
          <target state="translated">Java SE 플랫폼 구현을위한 버전 문자열 표현입니다. 버전 문자열은 버전 번호와 선택적으로 출시 전 및 빌드 정보로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="e76d771ac918cfc90bcbd838e9a32b7b5ce20c54" translate="yes" xml:space="preserve">
          <source>A representation of an XML structure from any namespace.</source>
          <target state="translated">모든 네임 스페이스의 XML 구조 표현입니다.</target>
        </trans-unit>
        <trans-unit id="acec4d0c8b94ed217cd3fe41ef2d40edcd78e19a" translate="yes" xml:space="preserve">
          <source>A representation of an XML structure from any namespace. The purpose of this interface is to group (and provide type safety for) all representations of XML structures.</source>
          <target state="translated">모든 네임 스페이스의 XML 구조 표현입니다. 이 인터페이스의 목적은 XML 구조의 모든 표현을 그룹화하고 형식 안전성을 제공하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="2857ce0d362aad98dbd585c51c0a76d355fb1c52" translate="yes" xml:space="preserve">
          <source>A representation of color profile data for device independent and device dependent color spaces based on the International Color Consortium Specification ICC.1:2001-12, File Format for Color Profiles, (see &lt;a href=&quot;http://www.color.org&quot;&gt; http://www.color.org&lt;/a&gt;).</source>
          <target state="translated">International Color Consortium Specification ICC.1 : 2001-12, File Format for Color Profiles ( &lt;a href=&quot;http://www.color.org&quot;&gt;http://www.color.org 참조&lt;/a&gt; )를 기반으로하는 장치 독립 및 장치 종속 색상 공간에 대한 색상 프로필 데이터 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="921dfd456139552f7840b7ef2467b270bf16502b" translate="yes" xml:space="preserve">
          <source>A representation of the &lt;code&gt;Reference&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 &lt;code&gt;Reference&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="8b48379d931119eb270af5a0b7424785770591c5" translate="yes" xml:space="preserve">
          <source>A representation of the &lt;code&gt;Reference&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML schema is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 &lt;code&gt;Reference&lt;/code&gt; 요소 의 표현입니다 . XML 스키마는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="d5e807978ed603aaa26b06f3569a9670673bc685" translate="yes" xml:space="preserve">
          <source>A representation of the &lt;code&gt;Reference&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 &lt;code&gt;Reference&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="aa80f3b0afd47ed1e50f460a11786ce4ff06671d" translate="yes" xml:space="preserve">
          <source>A representation of the &lt;code&gt;Reference&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML schema is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 &lt;code&gt;Reference&lt;/code&gt; 요소 의 표현입니다 . XML 스키마는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="9e9393d42398a123d8d189d5e11c9d80c61c70c4" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;CanonicalizationMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;CanonicalizationMethod&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="818501983ab439975e98f6e216bf5040b873ab2a" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;CanonicalizationMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;CanonicalizationMethod&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="f72b2baec8a234012c33cacdb86c2281149e84e1" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;CanonicalizationMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;CanonicalizationMethod&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="3cad14cca6f75d22040c6320992291c0a294eda2" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;CanonicalizationMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;CanonicalizationMethod&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="d71daa67e9f5695316a208165aa5abe94b6100ec" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;DigestMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;DigestMethod&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="843f8ce7b0ba73da08e55c45b256274671794ad1" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;DigestMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;DigestMethod&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="3027ab288370b93fa59f3eb9d0436ae932c461a7" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;DigestMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;DigestMethod&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="a407c3e50674b67cc1284abd26beb1010eafe3b5" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;DigestMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;DigestMethod&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="15b62629781107835ade69f4f233652f3b428d42" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyInfo&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;KeyInfo&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="33dc54be4c0ef258b3df6722a0518e4c9dc5bc58" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyInfo&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;KeyInfo&lt;/code&gt; contains a list of &lt;a href=&quot;../../xmlstructure&quot;&gt;&lt;code&gt;XMLStructure&lt;/code&gt;&lt;/a&gt;s, each of which contain information that enables the recipient(s) to obtain the key needed to validate an XML signature. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;KeyInfo&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;KeyInfo&lt;/code&gt; 목록을 포함 &lt;a href=&quot;../../xmlstructure&quot;&gt; &lt;code&gt;XMLStructure&lt;/code&gt; &lt;/a&gt; 의, XML 서명의 유효성을 검사하는 데 필요한 키를 얻기 위해받는 사람 (들)을 가능하게 정보를 포함하고 각각을. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="6192b5dd6d083a9645f58c6febb0ddc07d7d47cf" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyInfo&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;KeyInfo&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="2bd2b8994a5a85bf2bac5c477514ddc44d497f29" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyInfo&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;KeyInfo&lt;/code&gt; contains a list of &lt;a href=&quot;../../xmlstructure&quot;&gt;&lt;code&gt;XMLStructure&lt;/code&gt;&lt;/a&gt;s, each of which contain information that enables the recipient(s) to obtain the key needed to validate an XML signature. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;KeyInfo&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;KeyInfo&lt;/code&gt; 목록을 포함 &lt;a href=&quot;../../xmlstructure&quot;&gt; &lt;code&gt;XMLStructure&lt;/code&gt; &lt;/a&gt; 의, XML 서명의 유효성을 검사하는 데 필요한 키를 얻기 위해받는 사람 (들)을 가능하게 정보를 포함하고 각각을. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="79ce1e1b621dd95613ee8e80548a8a6e38d0e68e" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyName&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;KeyName&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="6d56bd6ce8a62c3ee25de03a052161bbc9dcbee2" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyName&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;KeyName&lt;/code&gt; object contains a string value which may be used by the signer to communicate a key identifier to the recipient. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;KeyName&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;KeyName&lt;/code&gt; 목적은 수신자의 키 식별자를 전달하기 위해 서명자에 의해 사용될 수있는 스트링 값을 포함한다. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="e8fa8baacd2f03c46552a32cdc8b62ceaaeeab13" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyName&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;KeyName&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="1c68cd4ed5c490d2a8c7d0d836e03cc033e80d3c" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyName&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;KeyName&lt;/code&gt; object contains a string value which may be used by the signer to communicate a key identifier to the recipient. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;KeyName&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;KeyName&lt;/code&gt; 목적은 수신자의 키 식별자를 전달하기 위해 서명자에 의해 사용될 수있는 스트링 값을 포함한다. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="30293ecb5cd4b4749024497b34f010008558a016" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyValue&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;KeyValue&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="aaffc6a7cf02ed6263009eed5a06c969a5e95211" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyValue&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;KeyValue&lt;/code&gt; object contains a single public key that may be useful in validating the signature. The XML schema definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;KeyValue&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;KeyValue&lt;/code&gt; 객체는 서명을 확인하는 데 유용 할 수있는 하나의 공개 키가 포함되어 있습니다. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="fa2e2d3959b04fc438ede5956d79a058b4017933" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyValue&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;KeyValue&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="4f33282efd5c65cff82842419a14656b5b5ca9b1" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyValue&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;KeyValue&lt;/code&gt; object contains a single public key that may be useful in validating the signature. The XML schema definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;KeyValue&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;KeyValue&lt;/code&gt; 객체는 서명을 확인하는 데 유용 할 수있는 하나의 공개 키가 포함되어 있습니다. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="e18bf2a9d1d2649cf4889b2a82b1944dfcb78706" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Manifest&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;Manifest&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="cba18e6cbfd4e1a4be2e659c51f826279f81e7c7" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Manifest&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;Manifest&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="232e87c9402275d97be549c055467207b316b836" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Manifest&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;Manifest&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="c76885dbf5ee78ce59ee4bf62bf8720f75c4d43a" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Manifest&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;Manifest&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="7ebebd89897aca83c8c23298c03986093af420f9" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Object&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;Object&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="ffc89dfbfe4de26bd6f1086b52d91604e3c019b1" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Object&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. An &lt;code&gt;XMLObject&lt;/code&gt; may contain any data and may include optional MIME type, ID, and encoding attributes. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;Object&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;XMLObject&lt;/code&gt; 모든 데이터를 포함 할 수 있으며, 옵션 MIME 유형, ID, 및 인코딩 속성을 포함 할 수있다. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="3484e073466c9e7b644b98c1aa6f0b486b500a18" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Object&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;Object&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="2db25bb1eec7e8f0ead4afe359c19d80c0b7e7b3" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Object&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. An &lt;code&gt;XMLObject&lt;/code&gt; may contain any data and may include optional MIME type, ID, and encoding attributes. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;Object&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;XMLObject&lt;/code&gt; 모든 데이터를 포함 할 수 있으며, 옵션 MIME 유형, ID, 및 인코딩 속성을 포함 할 수있다. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="c8dc14274479c27c29e82b16337e6944f2ad67cf" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;PGPData&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;PGPData&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="c031c75e0269b4ac7bda340cf53a29c6662e1276" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;PGPData&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;PGPData&lt;/code&gt; object is used to convey information related to PGP public key pairs and signatures on such keys. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;PGPData&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;PGPData&lt;/code&gt; 객체는 키를 PGP 공개 키 쌍 및 서명에 관한 정보를 전달하는 데 사용됩니다. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="de7daf8ac079c8dae3059005c2d1b04537dc8240" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;PGPData&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;PGPData&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="806a7a86ee6b23a8662a1bd510651c2c33f1ac35" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;PGPData&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;PGPData&lt;/code&gt; object is used to convey information related to PGP public key pairs and signatures on such keys. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;PGPData&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;PGPData&lt;/code&gt; 객체는 키를 PGP 공개 키 쌍 및 서명에 관한 정보를 전달하는 데 사용됩니다. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="aa6fdf04a0367c5c5eb8f1a6efa5e9361b3ac1da" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;RetrievalMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;RetrievalMethod&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="e68a4b7f2652386782c1b6174726422935f79c88" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;RetrievalMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;RetrievalMethod&lt;/code&gt; object is used to convey a reference to &lt;code&gt;KeyInfo&lt;/code&gt; information that is stored at another location. The XML schema definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;RetrievalMethod&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;RetrievalMethod&lt;/code&gt; 의의 오브젝트에 대한 참조 전달하는 데 사용 &lt;code&gt;KeyInfo&lt;/code&gt; 다른 위치에 저장되는 정보. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="794e25e14503f70ccb7a196788702f0bc7f70062" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;RetrievalMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;RetrievalMethod&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="8a4e19318f893c30c61ecd1868a51fa84313067d" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;RetrievalMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;RetrievalMethod&lt;/code&gt; object is used to convey a reference to &lt;code&gt;KeyInfo&lt;/code&gt; information that is stored at another location. The XML schema definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;RetrievalMethod&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;RetrievalMethod&lt;/code&gt; 의의 오브젝트에 대한 참조 전달하는 데 사용 &lt;code&gt;KeyInfo&lt;/code&gt; 다른 위치에 저장되는 정보. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="2f52d394a4745b86b588fa41fd298f54c9477767" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Signature&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;Signature&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="71ab40f0a8e3ae7919b4af6178e23fbf2e86ca6a" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Signature&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. This class contains methods for signing and validating XML signatures with behavior as defined by the W3C specification. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;Signature&lt;/code&gt; 요소 의 표현입니다 . 이 클래스에는 W3C 사양에 정의 된 동작으로 XML 서명을 서명하고 유효성을 검사하는 메서드가 포함되어 있습니다. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="0990539e2fcd347ccf0e016dc65c0ebd4eabd5dc" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Signature&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;Signature&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="18009f92423636fa5e25d7d7d9246384f0d394be" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Signature&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. This class contains methods for signing and validating XML signatures with behavior as defined by the W3C specification. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;Signature&lt;/code&gt; 요소 의 표현입니다 . 이 클래스에는 W3C 사양에 정의 된 동작을 사용하여 XML 서명을 서명하고 유효성을 검사하는 메서드가 포함되어 있습니다. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="dcf6df54d7de0f0a70478f64bcd771d8c6eb2c1c" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureMethod&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="1242db1c319c32f0daa009d51adf8357840239ed" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureMethod&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="b7784962aa26b25903e7a05bef5a17accffd5a40" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureMethod&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="30585f327ac9e035658eeacab7c9cd6dbeac5a18" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureMethod&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="1a5f8bf2ba1cc0ade2e47f2eff79dc1a866c4b9a" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperties&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureProperties&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="662a0e378668c7984acdbc2ad414a262359eff09" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperties&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureProperties&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="072340d90f758808a8e2fc2561ba6f66c79266b0" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperties&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureProperties&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="9f66bcc83144ded3d38d6a5f2fde30127bcb252a" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperties&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureProperties&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="76b7cc6d8f4f93cfcd1bc225fc3b7c3bf8415277" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperty&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureProperty&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="09f60cfc123ffcfc5cdd28b4386c6bde7d9b6b7a" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperty&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureProperty&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="d9544fe0c4d81bb0f58e97616bb7ffebff518789" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperty&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureProperty&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="4693800872e05341df4e7d8a5ec59ac9f2b52f60" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperty&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureProperty&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="1fd6af6658250cbe761409599e740b518da84b93" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureValue&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureValue&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="f0beaae6c06450414e34f7eedafae1ae75edb50e" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureValue&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureValue&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="bbf86cf9bf5530129fc7d44260dc2583aef42dd8" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureValue&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureValue&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="30a1e8bfec48dbc19eec529bdcdd0d0dc748da0f" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureValue&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignatureValue&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="6bbce451009a5c484fba4ec910223836924ff006" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Transform&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;Transform&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="65f8244c6e7a764a0cf179e722835a8b11234d9a" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Transform&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;Transform&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="cfa156e41ea38f59b1291b71fe37917c9fb934e7" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Transform&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;Transform&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="96b849d25ffee64acb6cb32e5c5e77c3aba63d43" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Transform&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;Transform&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="7170cbbee270dda1b5f2e8376ded625eec55f1de" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509Data&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;X509Data&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="b64b36913b0b5b874e3604e7e7632ca33a7ad6aa" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509Data&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. An &lt;code&gt;X509Data&lt;/code&gt; object contains one or more identifers of keys or X.509 certificates (or certificates' identifiers or a revocation list). The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;W3C Recommendation for XML-Signature Syntax and Processing에&lt;/a&gt; 정의 된 XML &lt;code&gt;X509Data&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;X509Data&lt;/code&gt; 객체는 키 하나 개 이상의 식별자 또는 X.509 인증서 (또는 인증서 '식별자 또는 해지 목록)가 포함되어 있습니다. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="6c0e0f1631ca411e460ba541ca6e244a9d79d990" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509Data&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;X509Data&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="205b41c97145fc1a32258ad89ef42ae769e61487" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509Data&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. An &lt;code&gt;X509Data&lt;/code&gt; object contains one or more identifers of keys or X.509 certificates (or certificates' identifiers or a revocation list). The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;X509Data&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;X509Data&lt;/code&gt; 객체는 키 하나 개 이상의 식별자 또는 X.509 인증서 (또는 인증서 '식별자 또는 해지 목록)가 포함되어 있습니다. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="763cfc754a3485a01a83fa9cd1647f4e6cc8afbe" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509IssuerSerial&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;X509IssuerSerial&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="298a9a222ddf149eb678257fccc8c66b55774c5f" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509IssuerSerial&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. An &lt;code&gt;X509IssuerSerial&lt;/code&gt; object contains an X.509 issuer distinguished name (DN) and serial number pair. The XML schema definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;X509IssuerSerial&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;X509IssuerSerial&lt;/code&gt; 요소의 개체 식별 이름 (DN) 및 시리얼 번호 쌍 발급자 X.509를 포함한다. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="c315b1d21beb485bea395330bd7bc41d92cd7b9c" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509IssuerSerial&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;X509IssuerSerial&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="e90f4f0c3eb905a2d12424b8d1c605f1c80d8a0e" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509IssuerSerial&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. An &lt;code&gt;X509IssuerSerial&lt;/code&gt; object contains an X.509 issuer distinguished name (DN) and serial number pair. The XML schema definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;X509IssuerSerial&lt;/code&gt; 요소 의 표현입니다 . &lt;code&gt;X509IssuerSerial&lt;/code&gt; 요소의 개체 식별 이름 (DN) 및 시리얼 번호 쌍 발급자 X.509를 포함한다. XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="b3dc0189e67c7a5026631ed6ce29049a5d812ebd" translate="yes" xml:space="preserve">
          <source>A request body publisher that reads its data from an &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt; 에서 데이터를 읽는 요청 본문 게시자입니다 .</target>
        </trans-unit>
        <trans-unit id="d89e64ee2d7418973e41335a098c1451433eb651" translate="yes" xml:space="preserve">
          <source>A request body publisher that reads its data from an &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;. A &lt;a href=&quot;../../../../java.base/java/util/function/supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;InputStream&lt;/code&gt; is used in case the request needs to be repeated, as the content is not buffered. The &lt;code&gt;Supplier&lt;/code&gt; may return &lt;code&gt;null&lt;/code&gt; on subsequent attempts, in which case the request fails.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt; 에서 데이터를 읽는 요청 본문 게시자입니다 . &lt;a href=&quot;../../../../java.base/java/util/function/supplier&quot;&gt; &lt;code&gt;Supplier&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;InputStream&lt;/code&gt; 요청 콘텐트 버퍼링되지 않는 반복해야하는 경우에 사용된다. &lt;code&gt;Supplier&lt;/code&gt; 반환 할 수 있습니다 &lt;code&gt;null&lt;/code&gt; 요청이 실패하는 경우 후속 시도에.</target>
        </trans-unit>
        <trans-unit id="a36f08211a431d531d51ff4283938c1b3f9cd6f7" translate="yes" xml:space="preserve">
          <source>A request body publisher that takes data from an &lt;code&gt;Iterable&lt;/code&gt; of byte arrays.</source>
          <target state="translated">바이트 배열 의 &lt;code&gt;Iterable&lt;/code&gt; 에서 데이터를 가져 오는 요청 본문 게시자입니다 .</target>
        </trans-unit>
        <trans-unit id="c50eb190198f19296a3e32912c3c5e1e94519c3b" translate="yes" xml:space="preserve">
          <source>A request body publisher that takes data from an &lt;code&gt;Iterable&lt;/code&gt; of byte arrays. An &lt;a href=&quot;../../../../java.base/java/lang/iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt; is provided which supplies &lt;a href=&quot;../../../../java.base/java/util/iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; instances. Each attempt to send the request results in one invocation of the &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="translated">바이트 배열 의 &lt;code&gt;Iterable&lt;/code&gt; 에서 데이터를 가져 오는 요청 본문 게시자입니다 . &lt;a href=&quot;../../../../java.base/java/util/iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인스턴스를 제공 하는 &lt;a href=&quot;../../../../java.base/java/lang/iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt; 이 제공됩니다 . 요청을 보내려고 할 때마다 &lt;code&gt;Iterable&lt;/code&gt; 이 한 번 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="ce746c80a9872a5dbae6a3556fa6f3036702067b" translate="yes" xml:space="preserve">
          <source>A request body publisher that takes data from the contents of a File.</source>
          <target state="translated">파일 콘텐츠에서 데이터를 가져 오는 요청 본문 게시자입니다.</target>
        </trans-unit>
        <trans-unit id="7e5043988cb35e2b047e7b108992486164169925" translate="yes" xml:space="preserve">
          <source>A request body publisher which sends no request body.</source>
          <target state="translated">요청 본문을 보내지 않는 요청 본문 게시자입니다.</target>
        </trans-unit>
        <trans-unit id="21ca3ddcf1176e64b427cc5f56e932899f576fbd" translate="yes" xml:space="preserve">
          <source>A reserved key, &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt;, whose value describes the behavior of the engine with respect to concurrent execution of scripts and maintenance of state is also defined. These values for the &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt; key are:</source>
          <target state="translated">스크립트의 동시 실행 및 상태 유지와 관련하여 엔진의 동작을 설명 하는 예약 된 키 &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt; 도 정의됩니다. &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt; 키의 값 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="590b8281eb0b5afdb158b730620721f0d18ca9e1" translate="yes" xml:space="preserve">
          <source>A reset where the text-argument (or an initial substring of the text-argument) is not already in the sequence. (e.g. &quot;a &amp;lt; b &amp;amp; e &amp;lt; f&quot;)</source>
          <target state="translated">텍스트 인수 (또는 텍스트 인수의 초기 하위 문자열)가 시퀀스에없는 재설정 (예 : &quot;a &amp;lt;b &amp;amp; e &amp;lt;f&quot;)</target>
        </trans-unit>
        <trans-unit id="50daa7cabce84af2b1a2640df3c79d87fb279761" translate="yes" xml:space="preserve">
          <source>A resolution attribute's cross feed direction resolution and feed direction resolution values are stored internally using units of dots per 100 inches (dphi). Storing the values in dphi rather than, say, metric units allows precise integer arithmetic conversions between dpi and dphi and between dpcm and dphi: 1 dpi = 100 dphi, 1 dpcm = 254 dphi. Thus, the values can be stored into and retrieved back from a resolution attribute in either units with no loss of precision. This would not be guaranteed if a floating point representation were used. However, roundoff error will in general occur if a resolution attribute's values are created in one units and retrieved in different units; for example, 600 dpi will be rounded to 236 dpcm, whereas the true value (to five figures) is 236.22 dpcm.</source>
          <target state="translated">해상도 속성의 교차 피드 방향 해상도 및 피드 방향 해상도 값은 100 인치당 도트 단위 (dphi)를 사용하여 내부적으로 저장됩니다. 예를 들어, 미터법 단위가 아닌 dphi로 값을 저장하면 dpi와 dphi 사이 및 dpcm와 dphi 사이의 정확한 정수 산술 변환이 가능합니다 : 1 dpi = 100 dphi, 1 dpcm = 254 dphi. 따라서, 값은 정밀도 손실없이 어느 단위로든 분해능 속성에 저장되어 다시 검색 될 수 있습니다. 부동 소수점 표현이 사용 된 경우 이것이 보장되지 않습니다. 그러나 일반적으로 해결 속성의 값이 한 단위로 작성되고 다른 단위로 검색되면 반올림 오류가 발생합니다. 예를 들어 600dpi는 236dpcm으로 반올림되는 반면 실제 값 (5 자리)은 236.22dpdp입니다.</target>
        </trans-unit>
        <trans-unit id="1baa20fe3c1a9aac887e84d03e98e4157adb439d" translate="yes" xml:space="preserve">
          <source>A resolution attribute's value consists of two items, the cross feed direction resolution and the feed direction resolution. A resolution attribute may be constructed by supplying the two values and indicating the units in which the values are measured. Methods are provided to return a resolution attribute's values, indicating the units in which the values are to be returned. The two most common resolution units are dots per inch (dpi) and dots per centimeter (dpcm), and exported constants &lt;a href=&quot;#DPI&quot;&gt;&lt;code&gt;DPI&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#DPCM&quot;&gt;&lt;code&gt;DPCM&lt;/code&gt;&lt;/a&gt; are provided for indicating those units.</source>
          <target state="translated">해상도 속성의 값은 교차 피드 방향 해상도와 피드 방향 해상도의 두 항목으로 구성됩니다. 해상도 속성은 두 값을 제공하고 값이 측정되는 단위를 표시하여 구성 될 수 있습니다. 값이 반환되는 단위를 나타내는 해상도 속성의 값을 반환하는 메서드가 제공됩니다. 가장 일반적인 두 가지 해상도 단위는 인치당 도트 수 (dpi)와 센티미터 당 도트 수 (dpcm)이며 이러한 단위를 나타 내기 위해 내 보낸 상수 &lt;a href=&quot;#DPI&quot;&gt; &lt;code&gt;DPI&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#DPCM&quot;&gt; &lt;code&gt;DPCM&lt;/code&gt; &lt;/a&gt; 이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="232557dedfb9f95c832486a5c16bc160b4258876" translate="yes" xml:space="preserve">
          <source>A resolution attribute's value consists of two items, the cross feed direction resolution and the feed direction resolution. A resolution attribute may be constructed by supplying the two values and indicating the units in which the values are measured. Methods are provided to return a resolution attribute's values, indicating the units in which the values are to be returned. The two most common resolution units are dots per inch (dpi) and dots per centimeter (dpcm), and exported constants &lt;a href=&quot;resolutionsyntax#DPI&quot;&gt;&lt;code&gt;DPI&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;resolutionsyntax#DPCM&quot;&gt;&lt;code&gt;DPCM&lt;/code&gt;&lt;/a&gt; are provided for indicating those units.</source>
          <target state="translated">해상도 속성 값은 교차 피드 방향 해상도와 피드 방향 해상도의 두 항목으로 구성됩니다. 2 개의 값을 제공하고 값이 측정되는 단위를 표시함으로써 해상도 속성이 구성 될 수있다. 값이 리턴되는 단위를 나타내는 분석 속성 값을 리턴하는 메소드가 제공됩니다. 가장 일반적인 두 가지 해상도 단위는 dpi (인치당 도트 수) 및 센티미터 당 도트 수 (dpcm)이며, 이러한 단위를 나타 내기 위해 내 보낸 상수 &lt;a href=&quot;resolutionsyntax#DPI&quot;&gt; &lt;code&gt;DPI&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;resolutionsyntax#DPCM&quot;&gt; &lt;code&gt;DPCM&lt;/code&gt; &lt;/a&gt; 이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="ab3fe46f616d216e29cf942182454f02c73a0392" translate="yes" xml:space="preserve">
          <source>A resource bundle containing the localized strings in the accessibility package. This is meant only for internal use by Java Accessibility and is not meant to be used by assistive technologies or applications.</source>
          <target state="translated">접근성 패키지의 현지화 된 문자열이 포함 된 리소스 번들입니다. 이것은 Java Accessibility의 내부 사용만을위한 것이며 보조 기술이나 응용 프로그램에서 사용하기위한 것이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="6ff9e22e7c0d8f14107b03781274d53b7cf0c6c8" translate="yes" xml:space="preserve">
          <source>A resource bundle provider may package its resource bundles in the same package as the base name of the resource bundle if the package is not split among other named modules. If there are more than one bundle providers providing the resource bundle of a given base name, the resource bundles can be packaged with per-language grouping or per-region grouping to eliminate the split packages.</source>
          <target state="translated">리소스 번들 공급자는 패키지가 다른 명명 된 모듈로 분할되지 않은 경우 리소스 번들의 기본 이름과 동일한 패키지에 리소스 번들을 패키지 할 수 있습니다. 지정된 기본 이름의 리소스 번들을 제공하는 번들 공급자가 둘 이상있는 경우 리소스 번들을 언어 별 그룹화 또는 지역별 그룹화로 패키지화하여 분할 된 패키지를 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c58ce90554a2b8133e3f817425c72a1b4c47fbed" translate="yes" xml:space="preserve">
          <source>A resource in a module is identified by an abstract name that is a '&lt;code&gt;/&lt;/code&gt;'-separated path string. For example, module &lt;code&gt;java.base&lt;/code&gt; may have a resource &quot;&lt;code&gt;java/lang/Object.class&lt;/code&gt;&quot; that, by convention, is the class file for &lt;code&gt;java.lang.Object&lt;/code&gt;. A module reader may treat directories in the module content as resources (whether it does or not is module reader specific). Where the module content contains a directory that can be located as a resource then its name ends with a slash ('/'). The directory can also be located with a name that drops the trailing slash.</source>
          <target state="translated">모듈의 리소스는 ' &lt;code&gt;/&lt;/code&gt; '로 구분 된 경로 문자열 인 추상 이름으로 식별됩니다 . 예를 들어, 모듈 &lt;code&gt;java.base&lt;/code&gt; 에는 규칙에 따라 &lt;code&gt;java.lang.Object&lt;/code&gt; 의 클래스 파일 인 &quot; &lt;code&gt;java/lang/Object.class&lt;/code&gt; &quot; 자원이있을 수 있습니다 . 모듈 판독기는 모듈 콘텐츠의 디렉토리를 리소스로 취급 할 수 있습니다 (모듈 판독기 특정 여부에 관계없이). 모듈 콘텐츠에 리소스로 찾을 수있는 디렉터리가 포함 된 경우 이름은 슬래시 ( '/')로 끝납니다. 디렉토리는 후행 슬래시를 삭제하는 이름으로 찾을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="885457801b55bcd35186250de0f06e9f3e81746b" translate="yes" xml:space="preserve">
          <source>A resource in a named module may be &lt;em&gt;encapsulated&lt;/em&gt; so that it cannot be located by code in other modules. Whether a resource can be located or not is determined as follows:</source>
          <target state="translated">명명 된 모듈의 리소스는 다른 모듈의 코드로 찾을 수 없도록 &lt;em&gt;캡슐화&lt;/em&gt; 될 수 있습니다 . 리소스를 찾을 수 있는지 여부는 다음과 같이 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="8d19983ed6e851519af2fba1e14038db814cbf99" translate="yes" xml:space="preserve">
          <source>A resource key for the description of this element. In conjunction with the &lt;code&gt;descriptionResourceBundleBaseName&lt;/code&gt;, this can be used to find a localized version of the description. The meaning of this field is defined by this specification but the field is not set or used by the JMX API itself.</source>
          <target state="translated">이 요소에 대한 설명을위한 리소스 키. &lt;code&gt;descriptionResourceBundleBaseName&lt;/code&gt; 과 함께 현지화 된 버전의 설명을 찾는 데 사용할 수 있습니다. 이 필드의 의미는이 스펙에서 정의되지만 JMX API 자체에서 필드를 설정하거나 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0b99a2680a2dc7338e7d2fda6cb75d54652f1e91" translate="yes" xml:space="preserve">
          <source>A resource manager error has occurred in the transaction branch.</source>
          <target state="translated">트랜잭션 분기에서 자원 관리자 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="a1c92d012b2d6d045733551835589fbd0dda258c" translate="yes" xml:space="preserve">
          <source>A resource variable.</source>
          <target state="translated">자원 변수.</target>
        </trans-unit>
        <trans-unit id="2d6a4cf4a25dacc9a49fd10df45f04e77045343a" translate="yes" xml:space="preserve">
          <source>A response APDU as defined in ISO/IEC 7816-4.</source>
          <target state="translated">ISO / IEC 7816-4에 정의 된 응답 APDU.</target>
        </trans-unit>
        <trans-unit id="20f1c826adb8d440a0da48dae4cf2d11ee8796db" translate="yes" xml:space="preserve">
          <source>A response APDU as defined in ISO/IEC 7816-4. It consists of a conditional body and a two byte trailer. This class does not attempt to verify that the APDU encodes a semantically valid response.</source>
          <target state="translated">ISO / IEC 7816-4에 정의 된 응답 APDU. 조건부 본문과 2 바이트 트레일러로 구성됩니다. 이 클래스는 APDU가 의미 상 유효한 응답을 인코딩하는지 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="de9ad4d31c04704c6314136940a250d11cf0088a" translate="yes" xml:space="preserve">
          <source>A return value greater than zero indicates the address of the byte at the index is misaligned for the unit size, and the value's quantity indicates how much the index should be rounded up or down to locate a byte at an aligned address. Otherwise, a value of &lt;code&gt;0&lt;/code&gt; indicates that the address of the byte at the index is aligned for the unit size.</source>
          <target state="translated">0보다 큰 반환 값은 인덱스의 바이트 주소가 단위 크기에 대해 잘못 정렬되었음을 나타내고 값의 양은 정렬 된 주소에서 바이트를 찾기 위해 인덱스를 올림 또는 내림해야하는 정도를 나타냅니다. 그렇지 않으면 &lt;code&gt;0&lt;/code&gt; 값은 인덱스의 바이트 주소가 단위 크기에 맞게 정렬됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="33a35b43cdd2a8ec3716337336b82b3a20416697" translate="yes" xml:space="preserve">
          <source>A return value of -1 indicates that the line segment must turn in the direction that takes the positive X axis towards the positive Y axis. In the default coordinate system, this direction is clockwise.</source>
          <target state="translated">반환 값 -1은 선 세그먼트가 양의 X 축을 양의 Y 축을 향하는 방향으로 회전해야 함을 나타냅니다. 기본 좌표계에서이 방향은 시계 방향입니다.</target>
        </trans-unit>
        <trans-unit id="afccea5744e2cd919f4e91681aeca67f76485fd4" translate="yes" xml:space="preserve">
          <source>A return value of -1 is used to distinguish a constant equation that might be always 0 or never 0 from an equation that has no zeroes.</source>
          <target state="translated">-1의 반환 값은 항상 0이거나 0이 아닐 수있는 상수 방정식을 0이없는 방정식과 구별하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9ee71285335fcc84fa138d65ab97bc8f46144421" translate="yes" xml:space="preserve">
          <source>A return value of 0 indicates that the point lies exactly on the line segment. Note that an indicator value of 0 is rare and not useful for determining collinearity because of floating point rounding issues.</source>
          <target state="translated">반환 값 0은 점이 선분에 정확히 있음을 나타냅니다. 표시기 값 0은 드물고 부동 소수점 반올림 문제로 인해 공선 성을 결정하는 데 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3bf0d642bfc686c6a1001aa7d5e4923bc186c344" translate="yes" xml:space="preserve">
          <source>A return value of 1 indicates that the line segment must turn in the direction that takes the positive X axis towards the negative Y axis. In the default coordinate system used by Java 2D, this direction is counterclockwise.</source>
          <target state="translated">반환 값 1은 선 세그먼트가 양의 X 축을 음의 Y 축을 향하는 방향으로 회전해야 함을 나타냅니다. Java 2D에서 사용하는 기본 좌표계에서이 방향은 시계 반대 방향입니다.</target>
        </trans-unit>
        <trans-unit id="84af5de42d5c3f20192a5d147905689af4ad95cb" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;-1&lt;/code&gt; is used to distinguish a constant equation, which might be always 0 or never 0, from an equation that has no zeroes.</source>
          <target state="translated">반환 값 &lt;code&gt;-1&lt;/code&gt; 은 항상 0이거나 0이 아닌 상수 방정식을 0이없는 방정식과 구별하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7b1f23249fe7b4699a5516b95a8bf7b0e266b418" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;null&lt;/code&gt; does not</source>
          <target state="translated">반환 값 &lt;code&gt;null&lt;/code&gt; 가 되지 않습니다</target>
        </trans-unit>
        <trans-unit id="f259f86e0e8f2cc50d690a37c6402df4349962b6" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;null&lt;/code&gt; does not &lt;em&gt;necessarily&lt;/em&gt; indicate that the map contains no mapping for the key; it's also possible that the map explicitly maps the key to &lt;code&gt;null&lt;/code&gt;. The &lt;a href=&quot;#containsKey(java.lang.Object)&quot;&gt;&lt;code&gt;containsKey&lt;/code&gt;&lt;/a&gt; operation may be used to distinguish these two cases.</source>
          <target state="translated">반환 값이 &lt;code&gt;null&lt;/code&gt; 이라고해서 &lt;em&gt;반드시&lt;/em&gt; 맵에 키에 대한 매핑이 포함되어 있지 않음을 나타내는 것은 아닙니다 . 지도가 명시 적으로 키를 &lt;code&gt;null&lt;/code&gt; 로 매핑 할 수도 있습니다 . &lt;a href=&quot;#containsKey(java.lang.Object)&quot;&gt; &lt;code&gt;containsKey&lt;/code&gt; 의&lt;/a&gt; 작업은이 두 경우를 구별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e67060fc3a5c293f1477fca093e79e4ac15cb79a" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;null&lt;/code&gt; does not &lt;em&gt;necessarily&lt;/em&gt; indicate that the map contains no mapping for the key; it's also possible that the map explicitly maps the key to &lt;code&gt;null&lt;/code&gt;. The &lt;a href=&quot;treemap#containsKey-java.lang.Object-&quot;&gt;&lt;code&gt;containsKey&lt;/code&gt;&lt;/a&gt; operation may be used to distinguish these two cases.</source>
          <target state="translated">반환 값 &lt;code&gt;null&lt;/code&gt; 가 되지 않습니다 &lt;em&gt;반드시&lt;/em&gt; 맵이 키의 매핑을 포함하지 않는 것을 나타냅니다; 맵이 키를 &lt;code&gt;null&lt;/code&gt; 에 명시 적으로 매핑 할 수도 있습니다 . &lt;a href=&quot;treemap#containsKey-java.lang.Object-&quot;&gt; &lt;code&gt;containsKey&lt;/code&gt; 의&lt;/a&gt; 작업은이 두 경우를 구별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="abc6e6f41022bd529fd1b135f0a016d0d7518def" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;true&lt;/code&gt; implies that it is highly likely that all of the data in this buffer is resident in physical memory and may therefore be accessed without incurring any virtual-memory page faults or I/O operations. A return value of &lt;code&gt;false&lt;/code&gt; does not necessarily imply that the buffer's content is not resident in physical memory.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 값을 리턴 하면이 버퍼의 모든 데이터가 실제 메모리에 상주하므로 가상 메모리 페이지 결함이나 I / O 조작없이 액세스 할 수 있음을 의미합니다. 반환 값이 &lt;code&gt;false&lt;/code&gt; 라고해서 반드시 버퍼의 내용이 실제 메모리에 상주하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="aae1f6ee5d60ae1f03e6e4e821571fa35d516eb9" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;true&lt;/code&gt; implies that it is highly likely that all of the data in this segment is resident in physical memory and may therefore be accessed without incurring any virtual-memory page faults or I/O operations. A return value of &lt;code&gt;false&lt;/code&gt; does not necessarily imply that the segment's content is not resident in physical memory.</source>
          <target state="translated">반환 값이 &lt;code&gt;true&lt;/code&gt; 이면 이 세그먼트의 모든 데이터가 실제 메모리에 상주하므로 가상 메모리 페이지 오류 또는 I / O 작업을 발생시키지 않고 액세스 할 수 있음을 의미합니다. 반환 값이 &lt;code&gt;false&lt;/code&gt; 라고해서 반드시 세그먼트의 내용이 실제 메모리에 상주하지 않음을 의미하는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="e09ce668b6b379eac10e99c1ee1b21763ceab49e" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;true&lt;/code&gt; is not an absolute guarantee of successful encoding; the encoding process may still produce errors due to factors such as I/O errors, inconsistent or malformed data structures, etc. The intent is that a reasonable inspection of the basic structure of the image be performed in order to determine if it is within the scope of the encoding format. For example, a service provider for a format that can only encode greyscale would return &lt;code&gt;false&lt;/code&gt; if handed an RGB &lt;code&gt;BufferedImage&lt;/code&gt;. Similarly, a service provider for a format that can encode 8-bit RGB imagery might refuse to encode an image with an associated alpha channel.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 값을 반환 한다고해서 성공적인 인코딩이 보장되는 것은 아닙니다. 인코딩 프로세스는 I / O 오류, 불일치 또는 잘못된 데이터 구조 등과 같은 요소로 인해 여전히 오류를 생성 할 수 있습니다. 인코딩 형식의 범위. 예를 들어, 그레이 스케일 만 인코딩 할 수있는 형식의 서비스 공급자 는 RGB &lt;code&gt;BufferedImage&lt;/code&gt; 를 전달하면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다. 마찬가지로 8 비트 RGB 이미지를 인코딩 할 수있는 형식의 서비스 공급자는 관련 알파 채널을 사용하여 이미지 인코딩을 거부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="504a971e6f5bcef8918be0b18a900ddb2e703fb7" translate="yes" xml:space="preserve">
          <source>A return value of true indicates &lt;code&gt;anEdit&lt;/code&gt; was incorporated into this edit. A return value of false indicates &lt;code&gt;anEdit&lt;/code&gt; may not be incorporated into this edit.</source>
          <target state="translated">반환 값이 true이면 &lt;code&gt;anEdit&lt;/code&gt; 가이 편집에 통합 되었음을 나타냅니다 . 반환 값이 false &lt;code&gt;anEdit&lt;/code&gt; 가이 편집에 통합되지 않을 수 있음을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="51198ce5afdd2d38acd4913a60836bf4bdde059f" translate="yes" xml:space="preserve">
          <source>A reusable synchronization barrier, similar in functionality to &lt;a href=&quot;cyclicbarrier&quot;&gt;&lt;code&gt;CyclicBarrier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;countdownlatch&quot;&gt;&lt;code&gt;CountDownLatch&lt;/code&gt;&lt;/a&gt; but supporting more flexible usage.</source>
          <target state="translated">재사용 가능한 동기화 장벽으로 &lt;a href=&quot;cyclicbarrier&quot;&gt; &lt;code&gt;CyclicBarrier&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;countdownlatch&quot;&gt; &lt;code&gt;CountDownLatch&lt;/code&gt; &lt;/a&gt; 와 기능은 유사 하지만보다 유연한 사용을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="8679b4982b232bceade418fede48eb8cef0230e7" translate="yes" xml:space="preserve">
          <source>A role indicating the object acts as a formula for calculating a value.</source>
          <target state="translated">객체를 나타내는 역할은 값을 계산하는 공식 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="670c7e74eaf400ef328bacfb4f58476c04552663" translate="yes" xml:space="preserve">
          <source>A role indicating the object acts as a formula for calculating a value. An example is a formula in a spreadsheet cell.</source>
          <target state="translated">객체를 나타내는 역할은 값을 계산하는 공식 역할을합니다. 예를 들어 스프레드 시트 셀의 수식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf6eeab1b1cb986bfcc6858dee2fea120fb8a7fc" translate="yes" xml:space="preserve">
          <source>A role indicating the object monitors the progress of some operation.</source>
          <target state="translated">개체를 나타내는 역할은 일부 작업의 진행 상황을 모니터링합니다.</target>
        </trans-unit>
        <trans-unit id="5b631d43cddaaf01022a11d89762e0b4164b9855" translate="yes" xml:space="preserve">
          <source>A root module, or a direct or transitive dependency, is not found.</source>
          <target state="translated">루트 모듈 또는 직접 또는 전이 종속성을 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a638760142903f5f949520565470983b944227f3" translate="yes" xml:space="preserve">
          <source>A row in a table.</source>
          <target state="translated">테이블의 행.</target>
        </trans-unit>
        <trans-unit id="0d76c2d9a6b09b38c1041615cad858c0f196860e" translate="yes" xml:space="preserve">
          <source>A row in a table. See the TR element definition in HTML 4.0.</source>
          <target state="translated">테이블의 행. HTML 4.0의 TR 요소 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ceba2bc58203f255151640dbd994659d2a124026" translate="yes" xml:space="preserve">
          <source>A rule expressing how to create a transition.</source>
          <target state="translated">전환을 만드는 방법을 나타내는 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="fbe2fbe6bac379ab6561e26f9691cc3c401e88ae" translate="yes" xml:space="preserve">
          <source>A rule implementation may or may not store full information about historic and future transitions, and the information stored is only as accurate as that supplied to the implementation by the rules provider. Applications should treat the data provided as representing the best information available to the implementation of this rule.</source>
          <target state="translated">규칙 구현은 기록 및 향후 전환에 대한 전체 정보를 저장하거나 저장하지 않을 수 있으며 저장된 정보는 규칙 공급자가 구현에 제공 한 정보만큼 정확합니다. 응용 프로그램은이 규칙을 구현하는 데 사용할 수있는 최상의 정보를 나타내는 것으로 제공된 데이터를 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="394798c7c3b7c754a460dee69be099dc1e1805d3" translate="yes" xml:space="preserve">
          <source>A ruler is an object used to measure distance.</source>
          <target state="translated">눈금자는 거리를 측정하는 데 사용되는 물체입니다.</target>
        </trans-unit>
        <trans-unit id="f28f01779dec56117901078530808f10f343aa0d" translate="yes" xml:space="preserve">
          <source>A runtime exception for Provider exceptions (such as misconfiguration errors or unrecoverable internal errors), which may be subclassed by Providers to throw specialized, provider-specific runtime errors.</source>
          <target state="translated">프로 바이더가 특수한 프로 바이더 별 런타임 오류를 발생시키기 위해 서브 클래 싱 할 수있는 프로 바이더 예외 (예 : 구성 오류 또는 복구 할 수없는 내부 오류)에 대한 런타임 예외.</target>
        </trans-unit>
        <trans-unit id="b78afb182078db8bb940fb9530c4da469af94761" translate="yes" xml:space="preserve">
          <source>A sample implementation would look something like this:</source>
          <target state="translated">샘플 구현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="81c10e58416fe365c33722061e35ff0670d87792" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;../navigableset&quot;&gt;&lt;code&gt;NavigableSet&lt;/code&gt;&lt;/a&gt; implementation based on a &lt;a href=&quot;concurrentskiplistmap&quot;&gt;&lt;code&gt;ConcurrentSkipListMap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;concurrentskiplistmap&quot;&gt; &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; 에&lt;/a&gt; 기반한 확장 가능한 동시 &lt;a href=&quot;../navigableset&quot;&gt; &lt;code&gt;NavigableSet&lt;/code&gt; &lt;/a&gt; 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="372f3a18469e872de04d341a2be746f10cb1c924" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;../navigableset&quot;&gt;&lt;code&gt;NavigableSet&lt;/code&gt;&lt;/a&gt; implementation based on a &lt;a href=&quot;concurrentskiplistmap&quot;&gt;&lt;code&gt;ConcurrentSkipListMap&lt;/code&gt;&lt;/a&gt;. The elements of the set are kept sorted according to their &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt;, or by a &lt;a href=&quot;../comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; provided at set creation time, depending on which constructor is used.</source>
          <target state="translated">&lt;a href=&quot;concurrentskiplistmap&quot;&gt; &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; 에&lt;/a&gt; 기반한 확장 가능한 동시 &lt;a href=&quot;../navigableset&quot;&gt; &lt;code&gt;NavigableSet&lt;/code&gt; &lt;/a&gt; 구현입니다 . 세트의 요소 는 사용 된 생성자에 따라 &lt;a href=&quot;../../lang/comparable&quot;&gt;자연 순서&lt;/a&gt; 에 따라 또는 세트 작성 시간에 제공된 &lt;a href=&quot;../comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; 에 따라 정렬되어 유지 됩니다.</target>
        </trans-unit>
        <trans-unit id="39408f44242f692b61c660267d1f4eb72674c1a2" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;concurrentnavigablemap&quot;&gt;&lt;code&gt;ConcurrentNavigableMap&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">확장 가능한 동시 &lt;a href=&quot;concurrentnavigablemap&quot;&gt; &lt;code&gt;ConcurrentNavigableMap&lt;/code&gt; &lt;/a&gt; 구현입니다.</target>
        </trans-unit>
        <trans-unit id="d12e6fbfc6ba72b83d61bd03fcce224dcf14db27" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;concurrentnavigablemap&quot;&gt;&lt;code&gt;ConcurrentNavigableMap&lt;/code&gt;&lt;/a&gt; implementation. The map is sorted according to the &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; of its keys, or by a &lt;a href=&quot;../comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; provided at map creation time, depending on which constructor is used.</source>
          <target state="translated">확장 가능한 동시 &lt;a href=&quot;concurrentnavigablemap&quot;&gt; &lt;code&gt;ConcurrentNavigableMap&lt;/code&gt; &lt;/a&gt; 구현입니다. 맵 은 사용 된 생성자에 따라 키 의 &lt;a href=&quot;../../lang/comparable&quot;&gt;자연 순서&lt;/a&gt; 에 따라 또는 맵 생성시 제공된 &lt;a href=&quot;../comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; 에 따라 정렬 됩니다.</target>
        </trans-unit>
        <trans-unit id="6222159f73ef72435df37cb8cb38479210dd895d" translate="yes" xml:space="preserve">
          <source>A scaled version of an image will not necessarily be available immediately just because an unscaled version of the image has been constructed for this output device. Each size of the image may be cached separately and generated from the original data in a separate image production sequence.</source>
          <target state="translated">이 출력 장치에 대해 크기가 조정되지 않은 이미지 버전이 생성 되었기 때문에 크기가 조정 된 이미지 버전을 즉시 사용할 수있는 것은 아닙니다. 이미지의 각 크기는 개별적으로 캐시되고 별도의 이미지 생성 시퀀스에서 원본 데이터로부터 생성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea6b7d26a3126c02ae3789681655ab1667d94bd2" translate="yes" xml:space="preserve">
          <source>A scanner can read text from any object which implements the &lt;a href=&quot;../lang/readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; interface. If an invocation of the underlying readable's &lt;a href=&quot;../lang/readable#read(java.nio.CharBuffer)&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; method throws an &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; then the scanner assumes that the end of the input has been reached. The most recent &lt;code&gt;IOException&lt;/code&gt; thrown by the underlying readable can be retrieved via the &lt;a href=&quot;#ioException()&quot;&gt;&lt;code&gt;ioException()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">스캐너는 &lt;a href=&quot;../lang/readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt; 인터페이스 를 구현하는 모든 개체에서 텍스트를 읽을 수 있습니다. 기본 읽기 가능의 &lt;a href=&quot;../lang/readable#read(java.nio.CharBuffer)&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt; 메소드 호출이 &lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; 을 던지면 스캐너는 입력의 끝에 도달했다고 가정합니다. &lt;a href=&quot;#ioException()&quot;&gt; &lt;code&gt;ioException()&lt;/code&gt; &lt;/a&gt; 메서드 를 통해 읽을 수있는 기본에 의해 발생한 가장 최근의 &lt;code&gt;IOException&lt;/code&gt; 을 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f38edc3f196c2ee8906d274bacf229a64607e0e" translate="yes" xml:space="preserve">
          <source>A scanner can read text from any object which implements the &lt;a href=&quot;../lang/readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; interface. If an invocation of the underlying readable's &lt;a href=&quot;../lang/readable#read-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;Readable.read(java.nio.CharBuffer)&lt;/code&gt;&lt;/a&gt; method throws an &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; then the scanner assumes that the end of the input has been reached. The most recent &lt;code&gt;IOException&lt;/code&gt; thrown by the underlying readable can be retrieved via the &lt;a href=&quot;scanner#ioException--&quot;&gt;&lt;code&gt;ioException()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">스캐너는 &lt;a href=&quot;../lang/readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt; 인터페이스 를 구현하는 모든 개체에서 텍스트를 읽을 수 있습니다. 기본이되는 readable. &lt;a href=&quot;../lang/readable#read-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;Readable.read(java.nio.CharBuffer)&lt;/code&gt; &lt;/a&gt; 메소드 의 호출이 &lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; 을 Throw하면 (자) , 스캐너는 입력의 마지막에 이르렀다 고 가정합니다. 기본 읽기 가능 파일에 의해 발생 된 최신 &lt;code&gt;IOException&lt;/code&gt; 은 &lt;a href=&quot;scanner#ioException--&quot;&gt; &lt;code&gt;ioException()&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="10fc0e1a03bd857972a6f4fd2c866bc2fc840c27" translate="yes" xml:space="preserve">
          <source>A scanner will default to interpreting numbers as decimal unless a different radix has been set by using the &lt;a href=&quot;#useRadix(int)&quot;&gt;&lt;code&gt;useRadix(int)&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's radix to &lt;code&gt;10&lt;/code&gt; regardless of whether it was previously changed.</source>
          <target state="translated">&lt;a href=&quot;#useRadix(int)&quot;&gt; &lt;code&gt;useRadix(int)&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 다른 기수가 설정되지 않은 경우 스캐너는 기본적으로 숫자를 10 진수로 해석합니다 . &lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메소드는 스캐너의 기수의 값을 초기화한다 &lt;code&gt;10&lt;/code&gt; 에 상관없이 이전에 변경되었는지 여부.</target>
        </trans-unit>
        <trans-unit id="ffcbdc51bd89316399f57b450091b94d78f24a31" translate="yes" xml:space="preserve">
          <source>A scanner will default to interpreting numbers as decimal unless a different radix has been set by using the &lt;a href=&quot;scanner#useRadix-int-&quot;&gt;&lt;code&gt;useRadix(int)&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's radix to &lt;code&gt;10&lt;/code&gt; regardless of whether it was previously changed.</source>
          <target state="translated">&lt;a href=&quot;scanner#useRadix-int-&quot;&gt; &lt;code&gt;useRadix(int)&lt;/code&gt; &lt;/a&gt; 사용하여 다른 기수가 설정되어 있지 않으면 스캐너는 기본적으로 숫자를 10 진수로 해석합니다. 메소드를 . &lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메소드는 스캐너의 기수의 값을 초기화한다 &lt;code&gt;10&lt;/code&gt; 에 상관없이 이전에 변경되었는지 여부.</target>
        </trans-unit>
        <trans-unit id="1025b7e845ba46f157b11fb807dc46312c48f8f9" translate="yes" xml:space="preserve">
          <source>A scanner will never search more than &lt;code&gt;horizon&lt;/code&gt; code points beyond its current position. Note that a match may be clipped by the horizon; that is, an arbitrary match result may have been different if the horizon had been larger. The scanner treats the horizon as a transparent, non-anchoring bound (see &lt;a href=&quot;regex/matcher#useTransparentBounds(boolean)&quot;&gt;&lt;code&gt;Matcher.useTransparentBounds(boolean)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;regex/matcher#useAnchoringBounds(boolean)&quot;&gt;&lt;code&gt;Matcher.useAnchoringBounds(boolean)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">스캐너는 현재 위치를 넘어서는 &lt;code&gt;horizon&lt;/code&gt; 코드 포인트 이상을 검색하지 않습니다 . 일치는 수평선에 의해 잘릴 수 있습니다. 즉, 수평선이 더 큰 경우 임의의 일치 결과가 다를 수 있습니다. 스캐너는 수평선을 고정되지 않은 투명 경계로 처리합니다 ( &lt;a href=&quot;regex/matcher#useTransparentBounds(boolean)&quot;&gt; &lt;code&gt;Matcher.useTransparentBounds(boolean)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;regex/matcher#useAnchoringBounds(boolean)&quot;&gt; &lt;code&gt;Matcher.useAnchoringBounds(boolean)&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4823d12d1bfba50c42ac074f1c596841b76be69c" translate="yes" xml:space="preserve">
          <source>A scanner will never search more than &lt;code&gt;horizon&lt;/code&gt; code points beyond its current position. Note that a match may be clipped by the horizon; that is, an arbitrary match result may have been different if the horizon had been larger. The scanner treats the horizon as a transparent, non-anchoring bound (see &lt;a href=&quot;regex/matcher#useTransparentBounds-boolean-&quot;&gt;&lt;code&gt;Matcher.useTransparentBounds(boolean)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;regex/matcher#useAnchoringBounds-boolean-&quot;&gt;&lt;code&gt;Matcher.useAnchoringBounds(boolean)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">스캐너는 현재 위치를 넘어 &lt;code&gt;horizon&lt;/code&gt; 코드 포인트 이상을 검색하지 않습니다 . 경기는 수평선에 의해 잘릴 수 있습니다. 즉, 수평선이 더 크면 임의의 일치 결과가 다를 수 있습니다. 스캐너는 수평선을 투명하고 고정되지 않은 경계로 처리합니다 ( &lt;a href=&quot;regex/matcher#useTransparentBounds-boolean-&quot;&gt; &lt;code&gt;Matcher.useTransparentBounds(boolean)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;regex/matcher#useAnchoringBounds-boolean-&quot;&gt; &lt;code&gt;Matcher.useAnchoringBounds(boolean)&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="920c53cb62be380ece95aa01040d89688a85bb11" translate="yes" xml:space="preserve">
          <source>A scanner's locale affects many elements of its default primitive matching regular expressions; see &lt;a href=&quot;#localized-numbers&quot;&gt;localized numbers&lt;/a&gt; above.</source>
          <target state="translated">스캐너 로케일은 기본 기본 일치 정규식의 여러 요소에 영향을줍니다. 위의 &lt;a href=&quot;#localized-numbers&quot;&gt;현지화 된 숫자를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="de441a89b0a90c8710d2440914bdcf80aaf3748e" translate="yes" xml:space="preserve">
          <source>A scanner's radix affects elements of its default number matching regular expressions; see &lt;a href=&quot;#localized-numbers&quot;&gt;localized numbers&lt;/a&gt; above.</source>
          <target state="translated">스캐너의 기수는 정규식과 일치하는 기본 숫자의 요소에 영향을줍니다. 위의 &lt;a href=&quot;#localized-numbers&quot;&gt;현지화 된 숫자를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="463f9dc1adcec0b3ab8ad69db9ae10fbeb89d5de" translate="yes" xml:space="preserve">
          <source>A scanning operation may block waiting for input.</source>
          <target state="translated">스캔 작업으로 인해 입력 대기가 차단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b0b46d40ab08311925752f3627c1f3228773cb7" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작으로 프로그램 요소의 검색 방문자 .</target>
        </trans-unit>
        <trans-unit id="fa6a46f6deb681f0e34f3ec4a59f01aa7b7ee01d" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작으로 프로그램 요소의 검색 방문자 . 이 클래스 의 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; 메소드 는 개별 메소드 사양에 표시된대로 포함 &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;된 요소&lt;/a&gt; , &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;매개 변수&lt;/a&gt; 등에 대해 &lt;code&gt;scan&lt;/code&gt; 을 호출하여 구성 요소 요소를 스캔 합니다 . 하위 클래스는 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; &lt;i&gt;Xyz&lt;/i&gt; 메서드를 재정 의하여 요소가 방문되는 순서를 제어 할 수 있습니다 . 스캐너의 클라이언트 는 관심있는 루트 개체에서 &lt;code&gt;v.visit(e, p)&lt;/code&gt; 대신 &lt;code&gt;v.scan(e, p)&lt;/code&gt; 를 호출하여 원하는 동작을 얻을 수 있습니다 .&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="95ad775e8e884e9119819e830ba28de6a123cbf9" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작으로 프로그램 요소의 검색 방문자 .</target>
        </trans-unit>
        <trans-unit id="b027e9a381fe13c97e6102ad6355d73a3b753fa7" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작으로 프로그램 요소의 검색 방문자 . 이 클래스 의 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; 메소드 는 개별 메소드 사양에 표시된대로 포함 &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;된 요소&lt;/a&gt; , &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;매개 변수&lt;/a&gt; 등에 대해 &lt;code&gt;scan&lt;/code&gt; 을 호출하여 구성 요소 요소를 스캔 합니다 . 하위 클래스는 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; &lt;i&gt;Xyz&lt;/i&gt; 메서드를 재정 의하여 요소가 방문되는 순서를 제어 할 수 있습니다 . 스캐너의 클라이언트 는 관심있는 루트 개체에서 &lt;code&gt;v.visit(e, p)&lt;/code&gt; 대신 &lt;code&gt;v.scan(e, p)&lt;/code&gt; 를 호출하여 원하는 동작을 얻을 수 있습니다 .&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="5a892f678bf1f5e2745d00de921fc7d84cd33ca5" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작으로 프로그램 요소의 검색 방문자 .</target>
        </trans-unit>
        <trans-unit id="e5bfdb412f0f643e45e585c51a554465d2141ee0" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작으로 프로그램 요소의 검색 방문자 . 이 클래스 의 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; 메소드 는 개별 메소드 사양에 표시된대로 포함 &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;된 요소&lt;/a&gt; , &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;매개 변수&lt;/a&gt; 등에 대해 &lt;code&gt;scan&lt;/code&gt; 을 호출하여 구성 요소 요소를 스캔 합니다 . 하위 클래스는 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; &lt;i&gt;Xyz&lt;/i&gt; 메서드를 재정 의하여 요소가 방문되는 순서를 제어 할 수 있습니다 . 스캐너의 클라이언트 는 관심있는 루트 개체에서 &lt;code&gt;v.visit(e, p)&lt;/code&gt; 대신 &lt;code&gt;v.scan(e, p)&lt;/code&gt; 를 호출하여 원하는 동작을 얻을 수 있습니다 .&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="d3f0091492e10ac229bb434cc10a5fde50bc5549" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 프로그램 요소의 스캔 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="852306c9c7b8cbb47df106edc4f858eeb5e9d7a0" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 프로그램 요소의 스캔 방문자입니다 . &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 이 클래스의 메소드를 호출하여 그 구성 요소를 스캔 &lt;code&gt;scan&lt;/code&gt; 자신에 &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;둘러싸인 소자&lt;/a&gt; , &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;파라미터&lt;/a&gt; 개별 방법 규격에 표시된 바와 같이, 등. 서브 클래스는 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 메소드를 대체하여 방문 요소 순서를 제어 할 수 있습니다 . 스캐너의 클라이언트는 원하는 루트 객체에서 &lt;code&gt;v.visit(e, p)&lt;/code&gt; 아닌 &lt;code&gt;v.scan(e, p)&lt;/code&gt; 호출하여 원하는 동작을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e3e3a645379e6a0b5ea1c9daaaf35c3adfdbd240" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 사용하는 프로그램 요소의 검색 방문자 . 이 클래스 의 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; 메소드 는 개별 메소드 사양에 표시된대로 포함 &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;된 요소&lt;/a&gt; , &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;매개 변수&lt;/a&gt; 등에 대해 &lt;code&gt;scan&lt;/code&gt; 을 호출하여 구성 요소 요소를 스캔 합니다 . 하위 클래스는 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; &lt;i&gt;Xyz&lt;/i&gt; 메서드를 재정 의하여 요소가 방문되는 순서를 제어 할 수 있습니다 . 스캐너의 클라이언트 는 관심있는 루트 개체에서 &lt;code&gt;v.visit(e, p)&lt;/code&gt; 대신 &lt;code&gt;v.scan(e, p)&lt;/code&gt; 를 호출하여 원하는 동작을 얻을 수 있습니다 .&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="3489191155cf64520e82e726b24cf95135015862" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 프로그램 요소의 스캔 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="668bcc88064b6a81b73a0380b603d056d1e1f1b0" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 프로그램 요소의 스캔 방문자입니다 . &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 이 클래스의 메소드를 호출하여 그 구성 요소를 스캔 &lt;code&gt;scan&lt;/code&gt; 자신에 &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;둘러싸인 소자&lt;/a&gt; , &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;파라미터&lt;/a&gt; 개별 방법 규격에 표시된 바와 같이, 등. 서브 클래스는 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 메소드를 대체하여 방문 요소 순서를 제어 할 수 있습니다 . 스캐너의 클라이언트는 원하는 루트 객체에서 &lt;code&gt;v.visit(e, p)&lt;/code&gt; 아닌 &lt;code&gt;v.scan(e, p)&lt;/code&gt; 호출하여 원하는 동작을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="05d7dbdb286de3308233507bef3c217c06035931" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 사용하는 프로그램 요소의 검색 방문자 . 이 클래스 의 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; 메소드 는 개별 메소드 사양에 표시된대로 포함 &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;된 요소&lt;/a&gt; , &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;매개 변수&lt;/a&gt; 등에 대해 &lt;code&gt;scan&lt;/code&gt; 을 호출하여 구성 요소 요소를 스캔 합니다 . 하위 클래스는 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; &lt;i&gt;Xyz&lt;/i&gt; 메서드를 재정 의하여 요소가 방문되는 순서를 제어 할 수 있습니다 . 스캐너의 클라이언트 는 관심있는 루트 개체에서 &lt;code&gt;v.visit(e, p)&lt;/code&gt; 대신 &lt;code&gt;v.scan(e, p)&lt;/code&gt; 를 호출하여 원하는 동작을 얻을 수 있습니다 .&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="6b9c02b84b9c03296e920e9a1becaeb673d23b06" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 프로그램 요소의 스캔 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="8fbec827facc498332d8a19639919f86b254ab3f" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 프로그램 요소의 스캔 방문자입니다 . &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 이 클래스의 메소드를 호출하여 그 구성 요소를 스캔 &lt;code&gt;scan&lt;/code&gt; 자신에 &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;둘러싸인 소자&lt;/a&gt; , &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;파라미터&lt;/a&gt; 개별 방법 규격에 표시된 바와 같이, 등. 서브 클래스는 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 메소드를 대체하여 방문 요소 순서를 제어 할 수 있습니다 . 스캐너의 클라이언트는 원하는 루트 객체에서 &lt;code&gt;v.visit(e, p)&lt;/code&gt; 아닌 &lt;code&gt;v.scan(e, p)&lt;/code&gt; 호출하여 원하는 동작을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0f1acb297fb22d32851fb084fd5a8bdb68e0126" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 사용하는 프로그램 요소의 검색 방문자 . 이 클래스 의 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; 메소드 는 개별 메소드 사양에 표시된대로 포함 &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;된 요소&lt;/a&gt; , &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;매개 변수&lt;/a&gt; 등에 대해 &lt;code&gt;scan&lt;/code&gt; 을 호출하여 구성 요소 요소를 스캔 합니다 . 하위 클래스는 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; &lt;i&gt;Xyz&lt;/i&gt; 메서드를 재정 의하여 요소가 방문되는 순서를 제어 할 수 있습니다 . 스캐너의 클라이언트 는 관심있는 루트 개체에서 &lt;code&gt;v.visit(e, p)&lt;/code&gt; 대신 &lt;code&gt;v.scan(e, p)&lt;/code&gt; 를 호출하여 원하는 동작을 얻을 수 있습니다 .&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="85d47bde242f3713bbddb8020c7a6cd6d258eedc" translate="yes" xml:space="preserve">
          <source>A second &lt;code&gt;boolean&lt;/code&gt; parameter allows you to specify whether or not to perform printing in an interactive mode. If &lt;code&gt;true&lt;/code&gt;, a modal progress dialog, with an abort option, is displayed for the duration of printing . This dialog also prevents any user action which may affect the table. However, it can not prevent the table from being modified by code (for example, another thread that posts updates using &lt;code&gt;SwingUtilities.invokeLater&lt;/code&gt;). It is therefore the responsibility of the developer to ensure that no other code modifies the table in any way during printing (invalid modifications include changes in: size, renderers, or underlying data). Printing behavior is undefined when the table is changed during printing.</source>
          <target state="translated">두 번째 &lt;code&gt;boolean&lt;/code&gt; 매개 변수를 사용하면 대화식 모드에서 인쇄를 수행할지 여부를 지정할 수 있습니다. 경우 &lt;code&gt;true&lt;/code&gt; , 중지 판단 옵션 모달 진행 대화 상자는 인쇄의 기간 동안 표시됩니다. 이 대화 상자는 또한 테이블에 영향을 줄 수있는 사용자 작업을 방지합니다. 그러나 코드 (예 : &lt;code&gt;SwingUtilities.invokeLater&lt;/code&gt; 를 사용하여 업데이트를 게시하는 다른 스레드)에 의해 테이블이 수정되는 것을 막을 수는 없습니다 . 따라서 인쇄 중에 다른 코드가 테이블을 수정하지 않도록하는 것은 개발자의 책임입니다 (잘못된 수정에는 크기, 렌더러 또는 기본 데이터의 변경이 포함됩니다). 인쇄 중 테이블이 변경되면 인쇄 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b5c03eca2ae7ca372fa888d6c322d4d60b58c453" translate="yes" xml:space="preserve">
          <source>A second is represented by an integer from 0 to 61; the values 60 and 61 occur only for leap seconds and even then only in Java implementations that actually track leap seconds correctly. Because of the manner in which leap seconds are currently introduced, it is extremely unlikely that two leap seconds will occur in the same minute, but this specification follows the date and time conventions for ISO C.</source>
          <target state="translated">초는 0에서 61까지의 정수로 표시됩니다. 값 60과 61은 윤초 동안 만 발생하며 실제로 윤초를 정확하게 추적하는 Java 구현에서만 발생합니다. 현재 윤초가 도입되는 방식으로 인해 동일한 분에 2 초 윤초가 발생할 가능성은 거의 없지만이 사양은 ISO C의 날짜 및 시간 규칙을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="05cceae07fc485786b496bde2a28218d5f2af2b9" translate="yes" xml:space="preserve">
          <source>A second major use for &lt;code&gt;CachedRowSet&lt;/code&gt; objects is to provide scrolling and updating for &lt;code&gt;ResultSet&lt;/code&gt; objects that do not provide these capabilities themselves. In other words, a &lt;code&gt;CachedRowSet&lt;/code&gt; object can be used to augment the capabilities of a JDBC technology-enabled driver (hereafter called a &quot;JDBC driver&quot;) when the DBMS does not provide full support for scrolling and updating. To achieve the effect of making a non-scrollable and read-only &lt;code&gt;ResultSet&lt;/code&gt; object scrollable and updatable, a programmer simply needs to create a &lt;code&gt;CachedRowSet&lt;/code&gt; object populated with that &lt;code&gt;ResultSet&lt;/code&gt; object's data. This is demonstrated in the following code fragment, where &lt;code&gt;stmt&lt;/code&gt; is a &lt;code&gt;Statement&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; 객체 의 두 번째 주요 용도 는 이러한 기능 자체를 제공하지 않는 &lt;code&gt;ResultSet&lt;/code&gt; 객체에 대한 스크롤링 및 업데이트를 제공하는 것입니다. 즉, DBMS가 스크롤 및 업데이트를 완전히 지원하지 않을 때 &lt;code&gt;CachedRowSet&lt;/code&gt; 개체를 사용하여 JDBC 기술 사용 드라이버 (이하 &quot;JDBC 드라이버&quot;라고 함)의 기능을 확장 할 수 있습니다. 스크롤 불가능하고 읽기 전용 인 &lt;code&gt;ResultSet&lt;/code&gt; 오브젝트를 스크롤 가능하고 업데이트 가능 하게 만드는 효과를 얻으려면 프로그래머 는 해당 &lt;code&gt;ResultSet&lt;/code&gt; 오브젝트의 데이터로 채워진 &lt;code&gt;CachedRowSet&lt;/code&gt; 오브젝트 를 작성하기 만하면 됩니다. 이것은 다음 코드 조각에서 설명됩니다. 여기서 &lt;code&gt;stmt&lt;/code&gt; 는 &lt;code&gt;Statement&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="87438e78fd5bcd6ab505456e32aa2e20beacb314" translate="yes" xml:space="preserve">
          <source>A second reason that a throwable may have a cause is that the method that throws it must conform to a general-purpose interface that does not permit the method to throw the cause directly. For example, suppose a persistent collection conforms to the &lt;a href=&quot;../util/collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; interface, and that its persistence is implemented atop &lt;code&gt;java.io&lt;/code&gt;. Suppose the internals of the &lt;code&gt;add&lt;/code&gt; method can throw an &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;. The implementation can communicate the details of the &lt;code&gt;IOException&lt;/code&gt; to its caller while conforming to the &lt;code&gt;Collection&lt;/code&gt; interface by wrapping the &lt;code&gt;IOException&lt;/code&gt; in an appropriate unchecked exception. (The specification for the persistent collection should indicate that it is capable of throwing such exceptions.)</source>
          <target state="translated">던질 수있는 원인이있을 수있는 두 번째 이유는 던지는 방법이 원인을 직접 던질 수없는 범용 인터페이스를 준수해야하기 때문입니다. 예를 들어, 지속적 콜렉션이 &lt;a href=&quot;../util/collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt; 인터페이스를 준수 하고 해당 지속성이 &lt;code&gt;java.io&lt;/code&gt; 위에 구현되었다고 가정하십시오 . &lt;code&gt;add&lt;/code&gt; 메소드 의 내부 에서 &lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; 이&lt;/a&gt; 발생할 수 있다고 가정하십시오 . 구현의 세부 사항 통신 할 수 &lt;code&gt;IOException&lt;/code&gt; 가 받는 부합하는 동안 호출자에 &lt;code&gt;Collection&lt;/code&gt; 인터페이스 포장에 의해 &lt;code&gt;IOException&lt;/code&gt; 가적절한 점검되지 않은 예외. (영구 컬렉션에 대한 사양은 그러한 예외를 던질 수 있음을 나타내야합니다.)</target>
        </trans-unit>
        <trans-unit id="a817d2be903587b47f518798cb8077cc06c4f5b5" translate="yes" xml:space="preserve">
          <source>A secret (symmetric) key.</source>
          <target state="translated">비밀 (대칭) 키.</target>
        </trans-unit>
        <trans-unit id="c237bbe6413c8ab00dab0a0e7d560d3daf37974b" translate="yes" xml:space="preserve">
          <source>A secret (symmetric) key. The purpose of this interface is to group (and provide type safety for) all secret key interfaces.</source>
          <target state="translated">비밀 (대칭) 키. 이 인터페이스의 목적은 모든 비밀 키 인터페이스를 그룹화 (및 유형 안전성을 제공)하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c0d3c60bd51a3d192358969519ffb0d96d1d1455" translate="yes" xml:space="preserve">
          <source>A security context typically maintains sequencing and replay detection information about the tokens it processes. Therefore, the sequence in which any tokens are presented to this context for processing can be important. Also note that none of the methods in this interface are synchronized. Therefore, it is not advisable to share a &lt;code&gt;GSSContext&lt;/code&gt; among several threads unless some application level synchronization is in place.</source>
          <target state="translated">보안 컨텍스트는 일반적으로 처리하는 토큰에 대한 시퀀싱 및 재생 감지 정보를 유지합니다. 따라서 처리를 위해 토큰이이 컨텍스트에 제공되는 순서가 중요 할 수 있습니다. 또한이 인터페이스의 어떤 메소드도 동기화되지 않습니다. 따라서 일부 응용 프로그램 수준 동기화가 적용되지 않는 한 여러 스레드간에 &lt;code&gt;GSSContext&lt;/code&gt; 를 공유하지 않는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="c3d2644a9159ed5f5bb5808e4cc0a44de2991792" translate="yes" xml:space="preserve">
          <source>A security provider for SaslClientFactory registers with the JCA Security Provider Framework keys of the form</source>
          <target state="translated">SaslClientFactory의 보안 제공자는 양식의 JCA 보안 제공자 프레임 워크 키에 등록합니다.</target>
        </trans-unit>
        <trans-unit id="49483787f2aaf0382ae93042774782d1f84f67d3" translate="yes" xml:space="preserve">
          <source>A security provider for SaslServerFactory registers with the JCA Security Provider Framework keys of the form</source>
          <target state="translated">SaslServerFactory의 보안 제공자는 양식의 JCA 보안 제공자 프레임 워크 키에 등록합니다.</target>
        </trans-unit>
        <trans-unit id="33797f519554324efd3fbbabc9ead2638c73d31a" translate="yes" xml:space="preserve">
          <source>A seekable byte channel is connected to an entity, typically a file, that contains a variable-length sequence of bytes that can be read and written. The current position can be &lt;a href=&quot;#position()&quot;&gt;&lt;code&gt;&lt;i&gt;queried&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#position(long)&quot;&gt;&lt;code&gt;&lt;i&gt;modified&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;. The channel also provides access to the current</source>
          <target state="translated">검색 가능한 바이트 채널은 읽고 쓸 수있는 가변 길이 바이트 시퀀스를 포함하는 엔티티 (일반적으로 파일)에 연결됩니다. 현재 위치를 &lt;a href=&quot;#position()&quot;&gt; &lt;code&gt;&lt;i&gt;queried&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;#position(long)&quot;&gt; &lt;code&gt;&lt;i&gt;modified&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 수 있습니다 . 채널은 또한 현재</target>
        </trans-unit>
        <trans-unit id="e3b98fbb0484864c2f0ee936ac85470708e6b590" translate="yes" xml:space="preserve">
          <source>A seekable byte channel is connected to an entity, typically a file, that contains a variable-length sequence of bytes that can be read and written. The current position can be &lt;a href=&quot;seekablebytechannel#position--&quot;&gt;&lt;code&gt;&lt;i&gt;queried&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt;&lt;code&gt;&lt;i&gt;modified&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;. The channel also provides access to the current</source>
          <target state="translated">검색 가능한 바이트 채널은 읽고 쓸 수있는 가변 길이의 바이트 시퀀스를 포함하는 엔티티 (일반적으로 파일)에 연결됩니다. 현재 위치를 &lt;a href=&quot;seekablebytechannel#position--&quot;&gt; &lt;code&gt;&lt;i&gt;queried&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt; &lt;code&gt;&lt;i&gt;modified&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 수 있습니다 . 채널은 또한 현재에 대한 액세스를 제공합니다</target>
        </trans-unit>
        <trans-unit id="0dafd90c42f612ddec3147173ec7fc806e70baca" translate="yes" xml:space="preserve">
          <source>A seekable input stream interface for use by &lt;code&gt;ImageReader&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 에 의해 사용되는 검색 가능한 입력 스트림 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="ba782d2a1d637b5de1068ad44a37d773d8474b58" translate="yes" xml:space="preserve">
          <source>A seekable input stream interface for use by &lt;code&gt;ImageReader&lt;/code&gt;s. Various input sources, such as &lt;code&gt;InputStream&lt;/code&gt;s and &lt;code&gt;File&lt;/code&gt;s, as well as future fast I/O sources may be &quot;wrapped&quot; by a suitable implementation of this interface for use by the Image I/O API.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 에 의해 사용되는 검색 가능한 입력 스트림 인터페이스입니다 . 미래의 빠른 I / O 소스뿐만 아니라 &lt;code&gt;InputStream&lt;/code&gt; 및 &lt;code&gt;File&lt;/code&gt; 과 같은 다양한 입력 소스 는 Image I / O API에서 사용하기 위해이 인터페이스를 적절히 구현하여 &quot;랩핑&quot;될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="420b8375b8044645c2b87d9f7d013503ade55328" translate="yes" xml:space="preserve">
          <source>A seekable output stream interface for use by &lt;code&gt;ImageWriter&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; 에 의해 사용되는 검색 가능한 출력 스트림 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="0559d0aab7f214134c5d385a37d401994991c253" translate="yes" xml:space="preserve">
          <source>A seekable output stream interface for use by &lt;code&gt;ImageWriter&lt;/code&gt;s. Various output destinations, such as &lt;code&gt;OutputStream&lt;/code&gt;s and &lt;code&gt;File&lt;/code&gt;s, as well as future fast I/O destinations may be &quot;wrapped&quot; by a suitable implementation of this interface for use by the Image I/O API.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; 에 의해 사용되는 검색 가능한 출력 스트림 인터페이스입니다 . 향후 I / O 대상뿐만 아니라 &lt;code&gt;OutputStream&lt;/code&gt; 및 &lt;code&gt;File&lt;/code&gt; 과 같은 다양한 출력 대상 이 Image I / O API에서 사용하기 위해이 인터페이스의 적절한 구현으로 &quot;랩핑&quot;될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fe29e6b6f7d3d3ea721525709d5bf04ea0e32cc" translate="yes" xml:space="preserve">
          <source>A segment of a character array representing a fragment of text.</source>
          <target state="translated">텍스트 조각을 나타내는 문자 배열의 세그먼트입니다.</target>
        </trans-unit>
        <trans-unit id="a59186c1147d987adcf842608717c58f8e110ab3" translate="yes" xml:space="preserve">
          <source>A segment of a character array representing a fragment of text. It should be treated as immutable even though the array is directly accessible. This gives fast access to fragments of text without the overhead of copying around characters. This is effectively an unprotected String.</source>
          <target state="translated">텍스트 조각을 나타내는 문자 배열의 세그먼트입니다. 배열에 직접 액세스 할 수 있더라도 불변으로 처리되어야합니다. 이렇게하면 문자를 복사하는 오버 헤드없이 텍스트 조각에 빠르게 액세스 할 수 있습니다. 이것은 사실상 보호되지 않는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="64d400f849295bb1951332f2c7b335031cd5c6d5" translate="yes" xml:space="preserve">
          <source>A selectable channel for datagram-oriented sockets.</source>
          <target state="translated">데이터 그램 지향 소켓을위한 선택 가능한 채널.</target>
        </trans-unit>
        <trans-unit id="25788cbc3a8e74eca33a39dc8147f04f2e587e37" translate="yes" xml:space="preserve">
          <source>A selectable channel for message-oriented SCTP sockets.</source>
          <target state="translated">메시지 지향 SCTP 소켓을위한 선택 가능한 채널입니다.</target>
        </trans-unit>
        <trans-unit id="9fbce4dd8382814beee496c6bb7dd33ac84cee0c" translate="yes" xml:space="preserve">
          <source>A selectable channel for message-oriented connected SCTP sockets.</source>
          <target state="translated">메시지 지향 연결된 SCTP 소켓을위한 선택 가능한 채널입니다.</target>
        </trans-unit>
        <trans-unit id="2a3559a3428442c22b9882817afa35e26d10fe14" translate="yes" xml:space="preserve">
          <source>A selectable channel for message-oriented listening SCTP sockets.</source>
          <target state="translated">메시지 지향 청취 SCTP 소켓을위한 선택 가능한 채널.</target>
        </trans-unit>
        <trans-unit id="294cc4bcb77e12b57025cbb0ece7e211718e94a6" translate="yes" xml:space="preserve">
          <source>A selectable channel for stream-oriented connecting sockets.</source>
          <target state="translated">스트림 지향 연결 소켓을위한 선택 가능한 채널.</target>
        </trans-unit>
        <trans-unit id="b728ffbec5c64eeb349e6de4c123ad56b7acf105" translate="yes" xml:space="preserve">
          <source>A selectable channel for stream-oriented listening sockets.</source>
          <target state="translated">스트림 지향 청취 소켓을위한 선택 가능한 채널.</target>
        </trans-unit>
        <trans-unit id="9362a7bc4fca8f31f56d56d236671209b1da656c" translate="yes" xml:space="preserve">
          <source>A selectable channel is either in</source>
          <target state="translated">선택 가능한 채널이</target>
        </trans-unit>
        <trans-unit id="636e98895c2a95d724549916a54492420384f6e4" translate="yes" xml:space="preserve">
          <source>A selectable channel's registration with a selector is represented by a &lt;a href=&quot;selectionkey&quot;&gt;&lt;code&gt;SelectionKey&lt;/code&gt;&lt;/a&gt; object. A selector maintains three sets of selection keys:</source>
          <target state="translated">셀렉터로 선택 가능한 채널의 등록은 &lt;a href=&quot;selectionkey&quot;&gt; &lt;code&gt;SelectionKey&lt;/code&gt; &lt;/a&gt; 객체로 표시됩니다 . 선택기는 세 가지 선택 키 세트를 유지 관리합니다.</target>
        </trans-unit>
        <trans-unit id="09e3d856bea6a14417269785e48c8ad006d47ebf" translate="yes" xml:space="preserve">
          <source>A selectable choice.</source>
          <target state="translated">선택 가능한 선택.</target>
        </trans-unit>
        <trans-unit id="a97b84a9f3924d6a20536da195f62a7d10b51b69" translate="yes" xml:space="preserve">
          <source>A selectable choice. See the OPTION element definition in HTML 4.0.</source>
          <target state="translated">선택 가능한 선택. HTML 4.0의 OPTION 요소 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1ba1a20d34aca94b42a82eaad99a53440fc17d0c" translate="yes" xml:space="preserve">
          <source>A selection key contains two</source>
          <target state="translated">선택 키에는 두 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebb61dbc6918d903ead46334d746e8f148efb98c" translate="yes" xml:space="preserve">
          <source>A selection key is created each time a channel is registered with a selector. A key remains valid until it is</source>
          <target state="translated">셀렉터에 채널을 등록 할 때마다 선택 키가 생성됩니다. 키는 유효 할 때까지 유효합니다.</target>
        </trans-unit>
        <trans-unit id="dae512fd515f76ba829deb8776b7ac3a8ccc48fb" translate="yes" xml:space="preserve">
          <source>A selection listener.</source>
          <target state="translated">선택 리스너.</target>
        </trans-unit>
        <trans-unit id="81e316e458dc6a879ab3f16d5fd137968705200d" translate="yes" xml:space="preserve">
          <source>A selection of common adjustments is provided in &lt;a href=&quot;temporal/temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. These include finding the &quot;last day of the month&quot; and &quot;next Wednesday&quot;. Key date-time classes also implement the &lt;code&gt;TemporalAdjuster&lt;/code&gt; interface, such as &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;monthday&quot;&gt;&lt;code&gt;MonthDay&lt;/code&gt;&lt;/a&gt;. The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt; 에서 공통 조정을 선택할 수 있습니다. 여기에는 &quot;매월 마지막 날&quot;과 &quot;다음 수요일&quot;찾기가 포함됩니다. 주요 날짜-시간 클래스는 &lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;monthday&quot;&gt; &lt;code&gt;MonthDay&lt;/code&gt; &lt;/a&gt; 와 같은 &lt;code&gt;TemporalAdjuster&lt;/code&gt; 인터페이스 도 구현합니다 . 조정자는 다양한 월 및 윤년과 같은 특수 사례를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="7588dd2d8efca4317d50709fc74f6cd77ed57a06" translate="yes" xml:space="preserve">
          <source>A selection operation queries the underlying operating system for an update as to the readiness of each registered channel to perform any of the operations identified by its key's interest set. There are two forms of selection operation:</source>
          <target state="translated">선택 작업은 키의 관심 세트로 식별 된 작업을 수행하기 위해 등록 된 각 채널의 준비 상태에 대한 업데이트를 기본 운영 체제에 쿼리합니다. 선택 작업에는 두 가지 형태가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f62d1292911a6d3cd1bbbb407a90097746eead15" translate="yes" xml:space="preserve">
          <source>A selector may be created by invoking the &lt;a href=&quot;#open()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class, which will use the system's default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;selector provider&lt;/code&gt;&lt;/a&gt; to create a new selector. A selector may also be created by invoking the &lt;a href=&quot;spi/selectorprovider#openSelector()&quot;&gt;&lt;code&gt;openSelector&lt;/code&gt;&lt;/a&gt; method of a custom selector provider. A selector remains open until it is closed via its &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 클래스 의 &lt;a href=&quot;#open()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 &lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;selector provider&lt;/code&gt; &lt;/a&gt; 를 만들 수 있으며 , 시스템의 기본 선택기 공급자 를 사용하여 새 선택기를 만들 수 있습니다. 사용자 지정 선택기 공급자 의 &lt;a href=&quot;spi/selectorprovider#openSelector()&quot;&gt; &lt;code&gt;openSelector&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 선택기를 만들 수도 있습니다 . 선택기는 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 닫힐 때까지 열려 있습니다.</target>
        </trans-unit>
        <trans-unit id="529eabf472953fee9eac462096b584cb588e3f87" translate="yes" xml:space="preserve">
          <source>A selector may be created by invoking the &lt;a href=&quot;selector#open--&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class, which will use the system's default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;selector provider&lt;/code&gt;&lt;/a&gt; to create a new selector. A selector may also be created by invoking the &lt;a href=&quot;spi/selectorprovider#openSelector--&quot;&gt;&lt;code&gt;openSelector&lt;/code&gt;&lt;/a&gt; method of a custom selector provider. A selector remains open until it is closed via its &lt;a href=&quot;selector#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 클래스 의 &lt;a href=&quot;selector#open--&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 &lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;selector provider&lt;/code&gt; &lt;/a&gt; 를 작성할 수 있습니다. 이 메소드는 시스템의 기본 선택기 제공자 를 사용하여 새 선택기를 작성합니다. 사용자 정의 선택기 제공자 의 &lt;a href=&quot;spi/selectorprovider#openSelector--&quot;&gt; &lt;code&gt;openSelector&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 선택기를 작성할 수도 있습니다 . 선택기는 &lt;a href=&quot;selector#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 방법을 통해 닫힐 때까지 열려 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d4a598974064bcc68117159019e785eef71e12f" translate="yes" xml:space="preserve">
          <source>A selector provider is a concrete subclass of this class that has a zero-argument constructor and implements the abstract methods specified below. A given invocation of the Java virtual machine maintains a single system-wide default provider instance, which is returned by the &lt;a href=&quot;#provider()&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; method. The first invocation of that method will locate the default provider as specified below.</source>
          <target state="translated">선택기 공급자는 인수가없는 생성자를 가지며 아래에 지정된 추상 메서드를 구현하는이 클래스의 구체적인 하위 클래스입니다. Java 가상 머신의 특정 호출은 &lt;a href=&quot;#provider()&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt; 메소드에 의해 리턴되는 단일 시스템 전체 기본 제공자 인스턴스를 유지합니다 . 해당 메서드의 첫 번째 호출은 아래 지정된대로 기본 공급자를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="b8e91fb710d83f831c9944823f9ccb9a3dcf00f6" translate="yes" xml:space="preserve">
          <source>A selector provider is a concrete subclass of this class that has a zero-argument constructor and implements the abstract methods specified below. A given invocation of the Java virtual machine maintains a single system-wide default provider instance, which is returned by the &lt;a href=&quot;selectorprovider#provider--&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; method. The first invocation of that method will locate the default provider as specified below.</source>
          <target state="translated">선택자 제공자는 인수가 0 인 생성자가 있고 아래에 지정된 추상 메소드를 구현하는이 클래스의 구체적 서브 클래스입니다. Java 가상 머신의 지정된 호출은 단일 시스템 전체의 기본 제공자 인스턴스를 유지 보수하며 &lt;a href=&quot;selectorprovider#provider--&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt; 메소드에 의해 리턴됩니다 . 해당 메소드의 첫 번째 호출은 아래 지정된 기본 제공자를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="f16d692c1bed5dbaa178690d4f26577abbfa32bb" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;CRL&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;CRL&lt;/code&gt; 선택을위한 일련의 기준을 정의하는 선택기 .</target>
        </trans-unit>
        <trans-unit id="96dcfefce65daa4016e98d79692d6ef1eadcc6d1" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;CRL&lt;/code&gt;s. Classes that implement this interface are often used to specify which &lt;code&gt;CRL&lt;/code&gt;s should be retrieved from a &lt;code&gt;CertStore&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CRL&lt;/code&gt; 선택을위한 일련의 기준을 정의하는 선택기 . 이 인터페이스를 구현하는 클래스 는 &lt;code&gt;CertStore&lt;/code&gt; 로부터 검색 되는 &lt;code&gt;CRL&lt;/code&gt; 을 지정하는데 자주 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="5efa2476c58d33df64d3c36e52bfb9214af66291" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;Certificate&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;Certificate&lt;/code&gt; 선택을위한 일련의 기준을 정의하는 선택기입니다 .</target>
        </trans-unit>
        <trans-unit id="1ef721d9efbaa77ffd30a26a6c943321c341cb56" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;Certificate&lt;/code&gt;s. Classes that implement this interface are often used to specify which &lt;code&gt;Certificate&lt;/code&gt;s should be retrieved from a &lt;code&gt;CertStore&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Certificate&lt;/code&gt; 선택을위한 일련의 기준을 정의하는 선택기입니다 . 이 인터페이스를 구현하는 클래스 는 &lt;code&gt;CertStore&lt;/code&gt; 로부터 &lt;code&gt;Certificate&lt;/code&gt; 할 Certificate 를 지정하는데 자주 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="91779c8f979a4082ed2dbde2cad2c1d6ec6c0e26" translate="yes" xml:space="preserve">
          <source>A selector that finds and returns a key using the data contained in a &lt;a href=&quot;dsig/keyinfo/keyinfo&quot;&gt;&lt;code&gt;KeyInfo&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;dsig/keyinfo/keyinfo&quot;&gt; &lt;code&gt;KeyInfo&lt;/code&gt; &lt;/a&gt; 개체에 포함 된 데이터를 사용하여 키를 찾아 반환하는 선택기입니다 .</target>
        </trans-unit>
        <trans-unit id="3aef79ecca91fbda6a291eb014a46d70b6d9398d" translate="yes" xml:space="preserve">
          <source>A selector that finds and returns a key using the data contained in a &lt;a href=&quot;dsig/keyinfo/keyinfo&quot;&gt;&lt;code&gt;KeyInfo&lt;/code&gt;&lt;/a&gt; object. An example of an implementation of this class is one that searches a &lt;a href=&quot;../../../../java.base/java/security/keystore&quot;&gt;&lt;code&gt;KeyStore&lt;/code&gt;&lt;/a&gt; for trusted keys that match information contained in a &lt;code&gt;KeyInfo&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;dsig/keyinfo/keyinfo&quot;&gt; &lt;code&gt;KeyInfo&lt;/code&gt; &lt;/a&gt; 개체에 포함 된 데이터를 사용하여 키를 찾아 반환하는 선택기입니다 . 이 클래스의 구현 예 는 &lt;code&gt;KeyInfo&lt;/code&gt; 에 포함 된 정보와 일치하는 신뢰할 수있는 키에 대해 &lt;a href=&quot;../../../../java.base/java/security/keystore&quot;&gt; &lt;code&gt;KeyStore&lt;/code&gt; &lt;/a&gt; 를 검색하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="f22a4ab2da39ad855ad083364d5b62eb28dc3380" translate="yes" xml:space="preserve">
          <source>A selector's key and selected-key sets are not, in general, safe for use by multiple concurrent threads. If such a thread might modify one of these sets directly then access should be controlled by synchronizing on the set itself. The iterators returned by these sets' &lt;a href=&quot;../../util/set#iterator--&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; methods are</source>
          <target state="translated">선택기의 키와 선택한 키 세트는 일반적으로 여러 개의 동시 스레드에서 사용하기에 안전하지 않습니다. 그러한 스레드가 이러한 세트 중 하나를 직접 수정할 수있는 경우 세트 자체를 동기화하여 액세스를 제어해야합니다. 이 세트의 &lt;a href=&quot;../../util/set#iterator--&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 메소드가 리턴 한 반복자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b8334ea638f59aa7d6798dd1a8168313a63c1a64" translate="yes" xml:space="preserve">
          <source>A selector's selected-key set is not, in general, safe for use by multiple concurrent threads. If such a thread might modify the set directly then access should be controlled by synchronizing on the set itself. The iterators returned by the set's &lt;a href=&quot;../../util/set#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; methods are</source>
          <target state="translated">선택기의 선택 키 세트는 일반적으로 여러 동시 스레드에서 사용하기에 안전하지 않습니다. 그러한 스레드가 세트를 직접 수정할 수 있다면 세트 자체에서 동기화하여 액세스를 제어해야합니다. 집합의 &lt;a href=&quot;../../util/set#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 메서드 에서 반환하는 반복기 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e3c4dc236c48859eac104a9399b07835e951ccee" translate="yes" xml:space="preserve">
          <source>A self-intersecting &lt;code&gt;Shape&lt;/code&gt; may be split into two (or more) sub-paths each enclosing one of the non-intersecting portions of the original path.</source>
          <target state="translated">자체 교차하는 &lt;code&gt;Shape&lt;/code&gt; 은 원래 경로의 교차하지 않는 부분 중 하나를 각각 둘러싸는 두 개 (또는 그 이상의) 하위 경로로 분할 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="334b82373bd598492fcd4d5391a307b77c8365a8" translate="yes" xml:space="preserve">
          <source>A semantic event which indicates that a component-defined action occurred.</source>
          <target state="translated">구성 요소 정의 작업이 발생했음을 나타내는 의미 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="6091e56d1be4e9bb99b55035937c08cfe0e0e0b4" translate="yes" xml:space="preserve">
          <source>A semantic event which indicates that a component-defined action occurred. This high-level event is generated by a component (such as a &lt;code&gt;Button&lt;/code&gt;) when the component-specific action occurs (such as being pressed). The event is passed to every &lt;code&gt;ActionListener&lt;/code&gt; object that registered to receive such events using the component's &lt;code&gt;addActionListener&lt;/code&gt; method.</source>
          <target state="translated">구성 요소 정의 작업이 발생했음을 나타내는 의미 이벤트입니다. 이 고급 이벤트는 구성 요소 별 작업 (예 : 누르기)이 발생할 때 구성 요소 (예 : &lt;code&gt;Button&lt;/code&gt; )에 의해 생성됩니다 . 이벤트는 구성 요소의 &lt;code&gt;addActionListener&lt;/code&gt; 메서드를 사용하여 이러한 이벤트를 수신하도록 등록 된 모든 &lt;code&gt;ActionListener&lt;/code&gt; 개체에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="f6776be63b6e7e7498af12ec576fe6f5b2dce6d7" translate="yes" xml:space="preserve">
          <source>A semantic event which indicates that an item was selected or deselected.</source>
          <target state="translated">항목이 선택되거나 선택 취소되었음을 나타내는 의미 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="bb96a366e9ef1ea4a26febbdbaaef665f6637e4b" translate="yes" xml:space="preserve">
          <source>A semantic event which indicates that an item was selected or deselected. This high-level event is generated by an ItemSelectable object (such as a List) when an item is selected or deselected by the user. The event is passed to every &lt;code&gt;ItemListener&lt;/code&gt; object which registered to receive such events using the component's &lt;code&gt;addItemListener&lt;/code&gt; method.</source>
          <target state="translated">항목이 선택되거나 선택 취소되었음을 나타내는 의미 이벤트입니다. 이 상위 수준 이벤트는 사용자가 항목을 선택하거나 선택 취소 할 때 ItemSelectable 개체 (예 : List)에 의해 생성됩니다. 이벤트는 컴포넌트의 &lt;code&gt;addItemListener&lt;/code&gt; 메소드를 사용하여 이러한 이벤트를 수신하도록 등록 된 모든 &lt;code&gt;ItemListener&lt;/code&gt; 객체 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="1ae154760407f31ba4bb6e437fb4b5de9f05cc33" translate="yes" xml:space="preserve">
          <source>A semantic event which indicates that an object's text changed.</source>
          <target state="translated">객체의 텍스트가 변경되었음을 나타내는 시맨틱 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="e5332302df3fd056e9adc556649c0e8ce8ba9a49" translate="yes" xml:space="preserve">
          <source>A semantic event which indicates that an object's text changed. This high-level event is generated by an object (such as a TextComponent) when its text changes. The event is passed to every &lt;code&gt;TextListener&lt;/code&gt; object which registered to receive such events using the component's &lt;code&gt;addTextListener&lt;/code&gt; method.</source>
          <target state="translated">객체의 텍스트가 변경되었음을 나타내는 시맨틱 이벤트입니다. 이 고급 이벤트는 텍스트가 변경 될 때 개체 (예 : TextComponent)에 의해 생성됩니다. 이벤트는 컴포넌트의 &lt;code&gt;addTextListener&lt;/code&gt; 메소드를 사용하여 이러한 이벤트를 수신하도록 등록 된 모든 &lt;code&gt;TextListener&lt;/code&gt; 객체 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="5b623b9a65e5387b97a4845cffc20bddeb53b2c2" translate="yes" xml:space="preserve">
          <source>A semaphore initialized to one, and which is used such that it only has at most one permit available, can serve as a mutual exclusion lock. This is more commonly known as a &lt;em&gt;binary semaphore&lt;/em&gt;, because it only has two states: one permit available, or zero permits available. When used in this way, the binary semaphore has the property (unlike many &lt;a href=&quot;locks/lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; implementations), that the &quot;lock&quot; can be released by a thread other than the owner (as semaphores have no notion of ownership). This can be useful in some specialized contexts, such as deadlock recovery.</source>
          <target state="translated">하나로 초기화 된 세마포어는 최대 하나의 허가 만 가질 수 있도록 사용되며 상호 배제 잠금 역할을 할 수 있습니다. 이것은 일반적으로 &lt;em&gt;2 개의 세마포어&lt;/em&gt; 로 알려져 있는데, 하나의 사용 가능한 허가 또는 0 개의 사용 가능한 허가의 두 가지 상태 만 있기 때문입니다. 이 방식으로 사용될 때, 이진 세마포어는 많은 &lt;a href=&quot;locks/lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt; 구현 과 달리이 속성을 가지고 있으며 , &quot;잠금&quot;은 소유자 이외의 스레드에 의해 해제 될 수 있습니다 (세마포어에는 소유권 개념이 없음). 교착 상태 복구와 같은 특수한 상황에서 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfe55cc397ef460f5c889dc133061a7121daf9d5" translate="yes" xml:space="preserve">
          <source>A semicolon-delimited list of URIs to locate the catalog files. The URIs must be absolute and have a URL protocol handler for the URI scheme.</source>
          <target state="translated">카탈로그 파일을 찾기위한 세미콜론으로 구분 된 URI 목록입니다. URI는 절대적이어야하며 URI 체계에 대한 URL 프로토콜 처리기가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="57cbd2cc899c4d7354c19c5e826073dcf54eb6ad" translate="yes" xml:space="preserve">
          <source>A send failed notification indicates that a message cannot be delivered. Typically this is because the association has been shutdown with unsent data in the socket output buffer, or in the case of a &lt;a href=&quot;sctpmultichannel&quot;&gt;&lt;code&gt;SctpMultiChannel&lt;/code&gt;&lt;/a&gt; the association failed to setup.</source>
          <target state="translated">전송 실패 알림은 메시지를 전달할 수 없음을 나타냅니다. 일반적으로 이는 소켓 출력 버퍼에서 전송되지 않은 데이터로 연결이 종료되었거나 &lt;a href=&quot;sctpmultichannel&quot;&gt; &lt;code&gt;SctpMultiChannel&lt;/code&gt; 의&lt;/a&gt; 경우 연결 설정에 실패 했기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="41cccf6500a071907b9eb72d92e38d355eb41827" translate="yes" xml:space="preserve">
          <source>A send method is any of the &lt;code&gt;sendText&lt;/code&gt;, &lt;code&gt;sendBinary&lt;/code&gt;, &lt;code&gt;sendPing&lt;/code&gt;, &lt;code&gt;sendPong&lt;/code&gt; and &lt;code&gt;sendClose&lt;/code&gt; methods of &lt;code&gt;WebSocket&lt;/code&gt;. A send method initiates a send operation and returns a &lt;code&gt;CompletableFuture&lt;/code&gt; which completes once the operation has completed. If the &lt;code&gt;CompletableFuture&lt;/code&gt; completes normally the operation is considered succeeded. If the &lt;code&gt;CompletableFuture&lt;/code&gt; completes exceptionally, the operation is considered failed. An operation that has been initiated but not yet completed is considered pending.</source>
          <target state="translated">send 메소드는 &lt;code&gt;WebSocket&lt;/code&gt; 의 &lt;code&gt;sendText&lt;/code&gt; , &lt;code&gt;sendBinary&lt;/code&gt; , &lt;code&gt;sendPing&lt;/code&gt; , &lt;code&gt;sendPong&lt;/code&gt; 및 &lt;code&gt;sendClose&lt;/code&gt; 메소드 중 하나 입니다. send 메서드는 보내기 작업을 시작 하고 작업이 완료되면 완료 되는 &lt;code&gt;CompletableFuture&lt;/code&gt; 를 반환합니다 . 는 IF &lt;code&gt;CompletableFuture&lt;/code&gt; 가 정상적으로 완료 작업이 성공한 것으로 간주됩니다. 는 IF &lt;code&gt;CompletableFuture&lt;/code&gt; 가 매우 완료, 작업이 실패로 간주됩니다. 시작되었지만 아직 완료되지 않은 작업은 보류중인 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="75dfb2ddac9ba66cde0cc5d2e0e8d23090dacd69" translate="yes" xml:space="preserve">
          <source>A sentence is a string of words which expresses an assertion, a question, a command, a wish, an exclamation, or the performance of an action. In English locales, the string usually begins with a capital letter and concludes with appropriate end punctuation; such as a period, question or exclamation mark. Other locales may use different capitalization and/or punctuation.</source>
          <target state="translated">문장은 주장, 질문, 명령, 소원, 느낌표 또는 행동 수행을 표현하는 일련의 단어입니다. 영어 로케일에서 문자열은 일반적으로 대문자로 시작하고 적절한 끝 구두점으로 끝납니다. 마침표, 물음표 또는 느낌표와 같은 다른 로케일에서는 다른 대문자 및 / 또는 구두점을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a4024ca87b0e41c736b446c52d375fe63e34854" translate="yes" xml:space="preserve">
          <source>A separator that is escaped or appears between non-escaped quotes is treated as an ordinary string and not a separator.</source>
          <target state="translated">이스케이프되지 않은 따옴표 사이에 이스케이프되거나 나타나는 구분 기호는 구분 기호가 아닌 일반 문자열로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="01b124416a0a30f20b408c560dfe65358649bfaf" translate="yes" xml:space="preserve">
          <source>A separator, quote or escape is escaped if preceded immediately (on the left) by the escape.</source>
          <target state="translated">이스케이프 바로 앞 (왼쪽)에 있으면 구분 기호, 따옴표 또는 이스케이프가 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="86e291d962b95b1c93a7ca49a38e6694703fc0f8" translate="yes" xml:space="preserve">
          <source>A sequence layout.</source>
          <target state="translated">시퀀스 레이아웃.</target>
        </trans-unit>
        <trans-unit id="b3780a80dd310c8a76833ddf1b0c52b83a2a8e48" translate="yes" xml:space="preserve">
          <source>A sequence layout. A sequence layout is used to denote a repetition of a given layout, also called the sequence layout's &lt;em&gt;element layout&lt;/em&gt;. The repetition count, where it exists (e.g. for &lt;em&gt;finite&lt;/em&gt; sequence layouts) is said to be the the sequence layout's &lt;em&gt;element count&lt;/em&gt;. A finite sequence layout can be thought of as a group layout where the sequence layout's element layout is repeated a number of times that is equal to the sequence layout's element count. In other words this layout:</source>
          <target state="translated">시퀀스 레이아웃. 시퀀스 레이아웃은 주어진 레이아웃의 반복을 나타내는 데 사용되며 시퀀스 레이아웃의 &lt;em&gt;요소 레이아웃&lt;/em&gt; 이라고도합니다 . 반복 횟수 (예 : &lt;em&gt;유한&lt;/em&gt; 시퀀스 레이아웃의 경우)는 시퀀스 레이아웃의 &lt;em&gt;요소 수라고&lt;/em&gt; 합니다. 유한 시퀀스 레이아웃은 시퀀스 레이아웃의 요소 레이아웃이 시퀀스 레이아웃의 요소 수와 동일한 횟수만큼 반복되는 그룹 레이아웃으로 생각할 수 있습니다. 즉,이 레이아웃 :</target>
        </trans-unit>
        <trans-unit id="5c095fc1ea1ab99d90aeb7439bb40d6d0578ec8d" translate="yes" xml:space="preserve">
          <source>A sequence of elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">순차적 및 병렬 집계 작업을 지원하는 일련의 요소.</target>
        </trans-unit>
        <trans-unit id="74d541b5fb0fc977f7e96dec6427dfabfa44bb9f" translate="yes" xml:space="preserve">
          <source>A sequence of elements supporting sequential and parallel aggregate operations. The following example illustrates an aggregate operation using &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;intstream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">순차적 및 병렬 집계 작업을 지원하는 일련의 요소. 다음 예제는 &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;intstream&quot;&gt; &lt;code&gt;IntStream&lt;/code&gt; 을&lt;/a&gt; 사용한 집계 작업을 보여 줍니다 .</target>
        </trans-unit>
        <trans-unit id="358da7cc7e138c726dddf5d6bf791a177ee226e4" translate="yes" xml:space="preserve">
          <source>A sequence of escaped octets is</source>
          <target state="translated">이스케이프 된 옥텟의 순서는</target>
        </trans-unit>
        <trans-unit id="3118269324fb4d8a0f521763d19e0c888308cb53" translate="yes" xml:space="preserve">
          <source>A sequence of paged-results can be abandoned by setting the pageSize to zero and setting the cookie to the last cookie received from the server.</source>
          <target state="translated">pageSize를 0으로 설정하고 쿠키를 서버에서받은 마지막 쿠키로 설정하여 일련의 페이지 결과를 버릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dab07824e99cfb5e02e843ed82bbe3b25e18cd89" translate="yes" xml:space="preserve">
          <source>A sequence of primitive double-valued elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">순차적 및 병렬 집계 작업을 지원하는 기본 이중 값 요소 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="dd38ae6cbee6c6c6706f6ce740cdd0b1045aa7f7" translate="yes" xml:space="preserve">
          <source>A sequence of primitive double-valued elements supporting sequential and parallel aggregate operations. This is the &lt;code&gt;double&lt;/code&gt; primitive specialization of &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순차적 및 병렬 집계 작업을 지원하는 기본 이중 값 요소 시퀀스입니다. 이것은 &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;double&lt;/code&gt; 기본 전문입니다 .</target>
        </trans-unit>
        <trans-unit id="b0bc9099810c1c57955f5aca4c4eb7d70a76615d" translate="yes" xml:space="preserve">
          <source>A sequence of primitive int-valued elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">순차 및 병렬 집계 연산을 지원하는 기본 int 값 요소 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="8fee8c2b13ede73fce1cfe060f8001dafa9861cb" translate="yes" xml:space="preserve">
          <source>A sequence of primitive int-valued elements supporting sequential and parallel aggregate operations. This is the &lt;code&gt;int&lt;/code&gt; primitive specialization of &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순차 및 병렬 집계 연산을 지원하는 기본 int 값 요소 시퀀스입니다. 이것은 &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;int&lt;/code&gt; 원시적 전문화입니다 .</target>
        </trans-unit>
        <trans-unit id="6de23a8a2d8e62c995b4c353905c0b49141b77cb" translate="yes" xml:space="preserve">
          <source>A sequence of primitive long-valued elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">순차 및 병렬 집계 연산을 지원하는 기본 값이 긴 요소 시퀀스.</target>
        </trans-unit>
        <trans-unit id="cc36d24e0030ab7c2344629316bea9f22cd8fbb5" translate="yes" xml:space="preserve">
          <source>A sequence of primitive long-valued elements supporting sequential and parallel aggregate operations. This is the &lt;code&gt;long&lt;/code&gt; primitive specialization of &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">순차 및 병렬 집계 연산을 지원하는 기본 값이 긴 요소 시퀀스. 이것은 &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;long&lt;/code&gt; 원시 전문화입니다 .</target>
        </trans-unit>
        <trans-unit id="2cf40afdb4242b7b337744c3ab9d56c266f5d8f2" translate="yes" xml:space="preserve">
          <source>A sequence of the form &quot;</source>
          <target state="translated">&quot;&quot;형식의 순서</target>
        </trans-unit>
        <trans-unit id="a5efd38607b007cf2b67f23ed31a731c1e8122d7" translate="yes" xml:space="preserve">
          <source>A sequence of zero or more string &lt;em&gt;names&lt;/em&gt;.</source>
          <target state="translated">문자열 &lt;em&gt;이름&lt;/em&gt; 이 0 이상인 시퀀스 .</target>
        </trans-unit>
        <trans-unit id="620944fe500ad55b62f932ecb24120b5a1cd6b81" translate="yes" xml:space="preserve">
          <source>A sequencer's loop end point defaults to -1, meaning the end of the sequence.</source>
          <target state="translated">시퀀서의 루프 끝점은 기본적으로 -1로 설정되어 시퀀스의 끝을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="1eb517c15a6e4b5522f6f202e23a3b2d5ae47666" translate="yes" xml:space="preserve">
          <source>A sequencer's loop start point defaults to start of the sequence.</source>
          <target state="translated">시퀀서의 루프 시작점은 기본적으로 시퀀스가 ​​시작됩니다.</target>
        </trans-unit>
        <trans-unit id="5382e3c4e988e005dbe0a0c61116b3b66567fc0b" translate="yes" xml:space="preserve">
          <source>A sequential implementation of a reduction using a collector would create a single result container using the supplier function, and invoke the accumulator function once for each input element. A parallel implementation would partition the input, create a result container for each partition, accumulate the contents of each partition into a subresult for that partition, and then use the combiner function to merge the subresults into a combined result.</source>
          <target state="translated">콜렉터를 사용하여 순차적으로 축소를 구현하면 공급자 함수를 사용하여 단일 결과 컨테이너를 작성하고 각 입력 요소에 대해 누산기 함수를 한 번 호출합니다. 병렬 구현은 입력을 분할하고 각 파티션에 대한 결과 컨테이너를 생성하고 각 파티션의 내용을 해당 파티션에 대한 하위 결과로 누적 한 다음 결합기 함수를 사용하여 하위 결과를 결합 된 결과로 병합합니다.</target>
        </trans-unit>
        <trans-unit id="dda6eade1c0494ca8765d5d8bedf50345c9c5b79" translate="yes" xml:space="preserve">
          <source>A serializable mapping between the SQL REF type and the Java programming language.</source>
          <target state="translated">SQL REF 유형과 Java 프로그래밍 언어 간의 직렬화 가능한 매핑입니다.</target>
        </trans-unit>
        <trans-unit id="6bdf56b9dc9159f7f02833d73cd4bbeeb7755bd0" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL &lt;code&gt;JAVA_OBJECT&lt;/code&gt; value.</source>
          <target state="translated">SQL &lt;code&gt;JAVA_OBJECT&lt;/code&gt; 값 의 Java 프로그래밍 언어로 된 직렬화 가능한 매핑입니다 .</target>
        </trans-unit>
        <trans-unit id="ba852e67063a4f199bbeffe1eb3a8cee2e71bc73" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL &lt;code&gt;JAVA_OBJECT&lt;/code&gt; value. Assuming the Java object implements the &lt;code&gt;Serializable&lt;/code&gt; interface, this class simply wraps the serialization process.</source>
          <target state="translated">SQL &lt;code&gt;JAVA_OBJECT&lt;/code&gt; 값 의 Java 프로그래밍 언어로 된 직렬화 가능한 매핑입니다 . Java 객체가 &lt;code&gt;Serializable&lt;/code&gt; 인터페이스를 구현한다고 가정하면 이 클래스는 단순히 직렬화 프로세스를 래핑합니다.</target>
        </trans-unit>
        <trans-unit id="fb676939567f2384d7b37e19095a9745c4458314" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL ARRAY value.</source>
          <target state="translated">SQL ARRAY 값의 Java 프로그래밍 언어로 된 직렬화 가능한 매핑입니다.</target>
        </trans-unit>
        <trans-unit id="46b6f8afc7ba7da1a9bdb33dddeba0f901e53505" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL BLOB value.</source>
          <target state="translated">SQL BLOB 값의 Java 프로그래밍 언어로 된 직렬화 가능한 매핑입니다.</target>
        </trans-unit>
        <trans-unit id="191d9822e2db1c907a0f0ddb92f12026692e3767" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL CLOB value.</source>
          <target state="translated">SQL CLOB 값의 Java 프로그래밍 언어로 된 직렬화 가능한 매핑입니다.</target>
        </trans-unit>
        <trans-unit id="d244e48b9e4839e435092c164e7332ed04755c46" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL DATALINK value. A DATALINK value references a file outside of the underlying data source that the originating data source manages.</source>
          <target state="translated">SQL DATALINK 값의 Java 프로그래밍 언어로 된 직렬화 가능한 매핑입니다. DATALINK 값은 원본 데이터 원본이 관리하는 기본 데이터 원본 외부의 파일을 참조합니다.</target>
        </trans-unit>
        <trans-unit id="6757ae90a40c9eb88a312ed54b9461592ee29fc1" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL JAVA_OBJECT value. Assuming the Java object instance implements the Serializable interface, this simply wraps the serialization process.</source>
          <target state="translated">SQL JAVA_OBJECT 값의 Java 프로그래밍 언어로 된 직렬화 가능한 매핑입니다. Java 객체 인스턴스가 Serializable 인터페이스를 구현한다고 가정하면 이것은 단순히 직렬화 프로세스를 래핑합니다.</target>
        </trans-unit>
        <trans-unit id="8edb96c691fc88839a39cd5c905f6875996d145c" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL structured type. Each attribute that is not already serializable is mapped to a serializable form, and if an attribute is itself a structured type, each of its attributes that is not already serializable is mapped to a serializable form.</source>
          <target state="translated">SQL 구조화 유형의 Java 프로그래밍 언어로 된 직렬화 가능한 매핑입니다. 아직 직렬화 할 수없는 각 속성은 직렬화 가능한 형식에 매핑되고, 속성 자체가 구조화 된 유형이면 아직 직렬화 할 수없는 각 속성은 직렬화 가능한 형식에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="5f9617d70f33a9a95533241c2dc12338e800d429" translate="yes" xml:space="preserve">
          <source>A serialized mapping in the Java programming language of an SQL &lt;code&gt;BLOB&lt;/code&gt; value.</source>
          <target state="translated">SQL &lt;code&gt;BLOB&lt;/code&gt; 값 의 Java 프로그래밍 언어로 된 직렬화 된 매핑입니다 .</target>
        </trans-unit>
        <trans-unit id="e3f7085aa94717a5c1b012f3180189ac844564c7" translate="yes" xml:space="preserve">
          <source>A serialized mapping in the Java programming language of an SQL &lt;code&gt;CLOB&lt;/code&gt; value.</source>
          <target state="translated">SQL &lt;code&gt;CLOB&lt;/code&gt; 값 의 Java 프로그래밍 언어로 된 직렬화 된 매핑입니다 .</target>
        </trans-unit>
        <trans-unit id="dd39982ad2640e417a4e8d9ca7c12b5e2c98ba3e" translate="yes" xml:space="preserve">
          <source>A serialized mapping in the Java programming language of an SQL &lt;code&gt;DATALINK&lt;/code&gt; value.</source>
          <target state="translated">SQL &lt;code&gt;DATALINK&lt;/code&gt; 값 의 Java 프로그래밍 언어로 된 직렬화 된 매핑입니다 .</target>
        </trans-unit>
        <trans-unit id="ac79d78131f98a0e7769168602093b2f0cee72e2" translate="yes" xml:space="preserve">
          <source>A serialized mapping in the Java programming language of an SQL &lt;code&gt;DATALINK&lt;/code&gt; value. A &lt;code&gt;DATALINK&lt;/code&gt; value references a file outside of the underlying data source that the data source manages.</source>
          <target state="translated">SQL &lt;code&gt;DATALINK&lt;/code&gt; 값 의 Java 프로그래밍 언어로 된 직렬화 된 매핑입니다 . &lt;code&gt;DATALINK&lt;/code&gt; 의 값 참조 데이터 소스가 관리하는 기본 데이터 소스의 파일 밖에.</target>
        </trans-unit>
        <trans-unit id="61f86604319679fced44960b47144ca66141fc98" translate="yes" xml:space="preserve">
          <source>A serialized mapping in the Java programming language of an SQL structured type.</source>
          <target state="translated">SQL 구조화 유형의 Java 프로그래밍 언어로 된 직렬화 된 매핑입니다.</target>
        </trans-unit>
        <trans-unit id="7b213dcd90b43df7f003ad1432b9d79b4b3af1c8" translate="yes" xml:space="preserve">
          <source>A serialized mapping in the Java programming language of an SQL structured type. Each attribute that is not already serialized is mapped to a serialized form, and if an attribute is itself a structured type, each of its attributes that is not already serialized is mapped to a serialized form.</source>
          <target state="translated">SQL 구조화 유형의 Java 프로그래밍 언어로 된 직렬화 된 매핑입니다. 아직 직렬화되지 않은 각 속성은 직렬화 된 양식에 매핑되며, 속성 자체가 구조화 된 유형 인 경우 아직 직렬화되지 않은 각 속성은 직렬화 된 양식에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="a3fa54d48abb870b8ba140f5d44362894738850f" translate="yes" xml:space="preserve">
          <source>A serialized mapping of a &lt;code&gt;Ref&lt;/code&gt; object, which is the mapping in the Java programming language of an SQL &lt;code&gt;REF&lt;/code&gt; value.</source>
          <target state="translated">SQL &lt;code&gt;REF&lt;/code&gt; 값 의 Java 프로그래밍 언어로 된 매핑 인 &lt;code&gt;Ref&lt;/code&gt; 개체 의 직렬화 된 매핑입니다 .</target>
        </trans-unit>
        <trans-unit id="ce223f9b091bca8de12ee40fc6b0db067e3bf2ee" translate="yes" xml:space="preserve">
          <source>A serialized version of an &lt;code&gt;Array&lt;/code&gt; object, which is the mapping in the Java programming language of an SQL &lt;code&gt;ARRAY&lt;/code&gt; value.</source>
          <target state="translated">SQL &lt;code&gt;ARRAY&lt;/code&gt; 값 의 Java 프로그래밍 언어 매핑 인 &lt;code&gt;Array&lt;/code&gt; 개체 의 직렬화 된 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="c4cb95a3c7de9058ef04032fddc913b35b387ce7" translate="yes" xml:space="preserve">
          <source>A server socket associated with this channel</source>
          <target state="translated">이 채널과 관련된 서버 소켓</target>
        </trans-unit>
        <trans-unit id="3e97f5795c3714f846bc6d2802f7304d9062e768" translate="yes" xml:space="preserve">
          <source>A server socket will have a channel if, and only if, the channel itself was created via the &lt;a href=&quot;../nio/channels/serversocketchannel#open()&quot;&gt;&lt;code&gt;ServerSocketChannel.open&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">서버 소켓은 채널 자체가 &lt;a href=&quot;../nio/channels/serversocketchannel#open()&quot;&gt; &lt;code&gt;ServerSocketChannel.open&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 생성 된 경우에만 채널을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="19b8fedb1f2e7f8b6be482b6484af0b393aefcd5" translate="yes" xml:space="preserve">
          <source>A server socket will have a channel if, and only if, the channel itself was created via the &lt;a href=&quot;../nio/channels/serversocketchannel#open--&quot;&gt;&lt;code&gt;ServerSocketChannel.open&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">서버 소켓은 채널 자체가 &lt;a href=&quot;../nio/channels/serversocketchannel#open--&quot;&gt; &lt;code&gt;ServerSocketChannel.open&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 작성된 경우에만 채널을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="217ca6ed6eb7e56975f986b6bacb1cc86c4191fb" translate="yes" xml:space="preserve">
          <source>A server such an LDAP server gets an instance of this class in order to perform authentication defined by a specific SASL mechanism. Invoking methods on the &lt;code&gt;SaslServer&lt;/code&gt; instance generates challenges according to the SASL mechanism implemented by the &lt;code&gt;SaslServer&lt;/code&gt;. As the authentication proceeds, the instance encapsulates the state of a SASL server's authentication exchange.</source>
          <target state="translated">LDAP 서버와 같은 서버는 특정 SASL 메커니즘으로 정의 된 인증을 수행하기 위해이 클래스의 인스턴스를 가져옵니다. 상의 메소드를 호출 &lt;code&gt;SaslServer&lt;/code&gt; 인스턴스 것은 의해 구현 SASL기구에있어서 문제를 발생 &lt;code&gt;SaslServer&lt;/code&gt; . 인증이 진행되면 인스턴스는 SASL 서버의 인증 교환 상태를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="f5ec809b416bf5d0d7ed7fb39a1fc177c77ae8bc" translate="yes" xml:space="preserve">
          <source>A server-socket channel is created by invoking the &lt;a href=&quot;#open()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class. It is not possible to create a channel for an arbitrary, pre-existing &lt;a href=&quot;../../net/serversocket&quot;&gt;&lt;code&gt;ServerSocket&lt;/code&gt;&lt;/a&gt;. A newly-created server-socket channel is open but not yet bound. An attempt to invoke the &lt;a href=&quot;#accept()&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method of an unbound server-socket channel will cause a &lt;a href=&quot;notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; to be thrown. A server-socket channel can be bound by invoking one of the &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; methods defined by this class.</source>
          <target state="translated">이 클래스 의 &lt;a href=&quot;#open()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 서버 소켓 채널을 만듭니다. 임의의 기존 &lt;a href=&quot;../../net/serversocket&quot;&gt; &lt;code&gt;ServerSocket&lt;/code&gt; 에&lt;/a&gt; 대한 채널을 생성 할 수 없습니다 . 새로 생성 된 서버 소켓 채널이 열려 있지만 아직 바인딩되지 않았습니다. 바인딩되지 않은 서버 소켓 채널 의 &lt;a href=&quot;#accept()&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하려고 하면 &lt;a href=&quot;notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다. 서버 소켓 채널은 이 클래스에 정의 된 &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 메소드 중 하나를 호출하여 바인드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="249a63a83f63482c4009b60fb838c05f9e627d36" translate="yes" xml:space="preserve">
          <source>A server-socket channel is created by invoking the &lt;a href=&quot;serversocketchannel#open--&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class. It is not possible to create a channel for an arbitrary, pre-existing &lt;a href=&quot;../../net/serversocket&quot;&gt;&lt;code&gt;ServerSocket&lt;/code&gt;&lt;/a&gt;. A newly-created server-socket channel is open but not yet bound. An attempt to invoke the &lt;a href=&quot;serversocketchannel#accept--&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method of an unbound server-socket channel will cause a &lt;a href=&quot;notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; to be thrown. A server-socket channel can be bound by invoking one of the &lt;a href=&quot;serversocketchannel#bind-java.net.SocketAddress-int-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; methods defined by this class.</source>
          <target state="translated">서버 소켓 채널은 이 클래스 의 &lt;a href=&quot;serversocketchannel#open--&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 작성됩니다 . 임의의 기존 &lt;a href=&quot;../../net/serversocket&quot;&gt; &lt;code&gt;ServerSocket&lt;/code&gt; 에&lt;/a&gt; 대한 채널을 생성 할 수 없습니다 . 새로 작성된 서버 소켓 채널이 열려 있지만 아직 바인드되지 않았습니다. 언 바운드 서버 소켓 채널 의 &lt;a href=&quot;serversocketchannel#accept--&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하려고 하면 &lt;a href=&quot;notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 이 클래스에 의해 정의 된 &lt;a href=&quot;serversocketchannel#bind-java.net.SocketAddress-int-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 메소드 중 하나를 호출하여 서버 소켓 채널을 바인드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bce7c70b019d348d961d460879d8a9b75189f27b" translate="yes" xml:space="preserve">
          <source>A service for a resource bundle of a given &lt;em&gt;&lt;code&gt;baseName&lt;/code&gt;&lt;/em&gt; must have a fully-qualified class name of the form:</source>
          <target state="translated">지정된 &lt;em&gt; &lt;code&gt;baseName&lt;/code&gt; &lt;/em&gt; 의 리소스 번들에 대한 서비스 에는 다음 형식의 정규화 된 클래스 이름이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="0d3ff54774240d09be6a43e7359d4c4c2f2e5176" translate="yes" xml:space="preserve">
          <source>A service is a single type, usually an interface or abstract class. A concrete class can be used, but this is not recommended. The type may have any accessibility. The methods of a service are highly domain-specific, so this API specification cannot give concrete advice about their form or function. However, there are two general guidelines:</source>
          <target state="translated">서비스는 일반적으로 인터페이스 또는 추상 클래스 인 단일 유형입니다. 구체적인 클래스를 사용할 수 있지만 권장하지 않습니다. 유형에 액세스 가능성이있을 수 있습니다. 서비스의 메서드는 도메인에 따라 다르므로이 API 사양은 형식이나 기능에 대한 구체적인 조언을 제공 할 수 없습니다. 그러나 두 가지 일반적인 지침이 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd7f13dbab6e888b83035eb38dfede73265746b2" translate="yes" xml:space="preserve">
          <source>A service loader can be used to locate and instantiate providers of the service by means of the &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;ServiceLoader&lt;/code&gt; also defines the &lt;a href=&quot;#stream()&quot;&gt;&lt;code&gt;stream&lt;/code&gt;&lt;/a&gt; method to obtain a stream of providers that can be inspected and filtered without instantiating them.</source>
          <target state="translated">서비스 로더는 &lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 서비스 제공자를 찾고 인스턴스화하는 데 사용할 수 있습니다 . &lt;code&gt;ServiceLoader&lt;/code&gt; 는 또한 인스턴스화하지 않고 검사 및 필터링 할 수있는 공급자 스트림을 가져 오는 &lt;a href=&quot;#stream()&quot;&gt; &lt;code&gt;stream&lt;/code&gt; &lt;/a&gt; 메서드를 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="e5be03a3bcea05f5cf9332e8caca8a5edf8812eb" translate="yes" xml:space="preserve">
          <source>A service loader will instantiate &lt;code&gt;StandardCodecs&lt;/code&gt; via its constructor, and will instantiate &lt;code&gt;ExtendedCodecsFactory&lt;/code&gt; by invoking its &lt;code&gt;provider&lt;/code&gt; method. The requirement that the provider constructor or provider method is public helps to document the intent that the class (that is, the service provider) will be instantiated by an entity (that is, a service loader) which is outside the class's package.</source>
          <target state="translated">서비스 로더는 생성자를 통해 &lt;code&gt;StandardCodecs&lt;/code&gt; 를 인스턴스화 하고 &lt;code&gt;provider&lt;/code&gt; 메서드 를 호출하여 &lt;code&gt;ExtendedCodecsFactory&lt;/code&gt; 를 인스턴스화 합니다. 제공자 생성자 또는 제공자 메소드가 공용이라는 요구 사항은 클래스 (즉, 서비스 제공자)가 클래스 패키지 외부에있는 엔티티 (즉, 서비스 로더)에 의해 인스턴스화 될 의도를 문서화하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="c24aae90727af4acf4d73a6391df43e7c724bca3" translate="yes" xml:space="preserve">
          <source>A service provided by the nesting BeanContext has been revoked.</source>
          <target state="translated">중첩 BeanContext에서 제공 한 서비스가 취소되었습니다.</target>
        </trans-unit>
        <trans-unit id="ea781e133d496aaae66b4384fc8cf8471b5ed3e7" translate="yes" xml:space="preserve">
          <source>A service provided by the nesting BeanContext has been revoked. Subclasses may override this method in order to implement their own behaviors.</source>
          <target state="translated">중첩 BeanContext에서 제공 한 서비스가 취소되었습니다. 서브 클래스는 자신의 동작을 구현하기 위해이 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6e6c35c902672e1aeaf13aecbd1340098d41cdb" translate="yes" xml:space="preserve">
          <source>A service provider and its supporting code may be developed in a module, which is then deployed on the application module path or in a modular image. Alternatively, a service provider and its supporting code may be packaged as a JAR file and deployed on the application class path. The advantage of developing a service provider in a module is that the provider can be fully encapsulated to hide all details of its implementation.</source>
          <target state="translated">서비스 제공자 및 지원 코드는 모듈에서 개발 될 수 있으며, 그런 다음 애플리케이션 모듈 경로 또는 모듈 식 이미지에 배치됩니다. 또는 서비스 공급자 및 지원 코드를 JAR 파일로 패키지화하고 애플리케이션 클래스 경로에 배포 할 수 있습니다. 모듈에서 서비스 공급자를 개발할 때의 장점은 공급자를 완전히 캡슐화하여 구현의 모든 세부 정보를 숨길 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a881b01ec7de22d0659bbbcee6cb1246a3fbbc59" translate="yes" xml:space="preserve">
          <source>A service provider cannot be loaded;</source>
          <target state="translated">서비스 제공 업체를로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8fea6b18d5888128fd44d804099fa9a487e3621f" translate="yes" xml:space="preserve">
          <source>A service provider implementation SHOULD use underlying JCA engine classes, such as &lt;a href=&quot;../../../../../java.base/java/security/signature&quot;&gt;&lt;code&gt;Signature&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../../../java.base/java/security/messagedigest&quot;&gt;&lt;code&gt;MessageDigest&lt;/code&gt;&lt;/a&gt; to perform cryptographic operations.</source>
          <target state="translated">서비스 공급자 구현은 암호화 작업을 수행하기 위해 &lt;a href=&quot;../../../../../java.base/java/security/signature&quot;&gt; &lt;code&gt;Signature&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../../../../java.base/java/security/messagedigest&quot;&gt; &lt;code&gt;MessageDigest&lt;/code&gt; &lt;/a&gt; 와 같은 기본 JCA 엔진 클래스를 사용해야합니다 (SHOULD) .</target>
        </trans-unit>
        <trans-unit id="561615b43a4e09c9dcd11e73dfd2a418520d3966" translate="yes" xml:space="preserve">
          <source>A service provider is a concrete implementation of the abstract &lt;a href=&quot;xmlsignaturefactory&quot;&gt;&lt;code&gt;XMLSignatureFactory&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;keyinfo/keyinfofactory&quot;&gt;&lt;code&gt;KeyInfoFactory&lt;/code&gt;&lt;/a&gt; classes and is responsible for creating objects and algorithms that parse, generate and validate XML Signatures and KeyInfo structures. A concrete implementation of &lt;code&gt;XMLSignatureFactory&lt;/code&gt; MUST provide support for each of the REQUIRED algorithms as specified by the W3C recommendation for XML Signatures. It MAY support other algorithms as defined by the W3C recommendation or other specifications.</source>
          <target state="translated">서비스 공급자는 추상 &lt;a href=&quot;xmlsignaturefactory&quot;&gt; &lt;code&gt;XMLSignatureFactory&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;keyinfo/keyinfofactory&quot;&gt; &lt;code&gt;KeyInfoFactory&lt;/code&gt; &lt;/a&gt; 클래스 의 구체적인 구현이며 XML 서명 및 KeyInfo 구조를 구문 분석, 생성 및 확인하는 객체 및 알고리즘을 생성합니다. &lt;code&gt;XMLSignatureFactory&lt;/code&gt; 의 구체적인 구현은 XML 서명에 대한 W3C 권장 사항에 지정된대로 각 REQUIRED 알고리즘에 대한 지원을 제공해야합니다. W3C 권장 사항 또는 기타 사양에 정의 된대로 다른 알고리즘을 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19c7ff0f5baa4e32df7f5afc42174df749dfe3f8" translate="yes" xml:space="preserve">
          <source>A service provider is a single type, usually a concrete class. An interface or abstract class is permitted because it may declare a static provider method, discussed later. The type must be public and must not be an inner class.</source>
          <target state="translated">서비스 공급자는 단일 유형이며 일반적으로 구체적인 클래스입니다. 인터페이스 또는 추상 클래스는 나중에 설명 할 정적 공급자 메서드를 선언 할 수 있으므로 허용됩니다. 유형은 공용이어야하며 내부 클래스가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="9ad627c084b0b6a4e4946629877d1735e55492f3" translate="yes" xml:space="preserve">
          <source>A service provider is not assignable to the service's interface or class, or does not define a provider constructor, or cannot be instantiated.</source>
          <target state="translated">서비스 공급자는 서비스의 인터페이스 또는 클래스에 할당 할 수 없거나 공급자 생성자를 정의하지 않거나 인스턴스화 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="650fe805b03811763c088b57de06f81516067f20" translate="yes" xml:space="preserve">
          <source>A service provider provides a subclass of &lt;code&gt;ReferralException&lt;/code&gt; by providing implementations for &lt;code&gt;getReferralInfo()&lt;/code&gt; and &lt;code&gt;getReferralContext()&lt;/code&gt; (and appropriate constructors and/or corresponding &quot;set&quot; methods).</source>
          <target state="translated">서비스 프로 바이더는 &lt;code&gt;getReferralInfo()&lt;/code&gt; 및 &lt;code&gt;getReferralContext()&lt;/code&gt; (및 적절한 생성자 및 / 또는 대응하는 「세트」메소드)의 구현을 제공하는 &lt;code&gt;ReferralException&lt;/code&gt; 의 서브 클래스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="d4bc2d0b97b8b122ac6e9b670e174b403a866ed9" translate="yes" xml:space="preserve">
          <source>A service provider supports connection and context request controls in the following ways. Context request controls must be associated on a per context instance basis while connection request controls must be associated on a per connection instance basis. The service provider must look for the connection request controls in the environment property &quot;java.naming.ldap.control.connect&quot; and pass this environment property on to context instances that it creates.</source>
          <target state="translated">서비스 제공자는 다음과 같은 방식으로 연결 및 컨텍스트 요청 제어를 지원합니다. 컨텍스트 요청 컨트롤은 컨텍스트 인스턴스별로 연결되어야하지만 연결 요청 컨트롤은 연결 인스턴스별로 연결되어야합니다. 서비스 제공자는 환경 특성 &quot;java.naming.ldap.control.connect&quot;에서 연결 요청 제어를 찾고이 환경 특성을 작성된 컨텍스트 인스턴스에 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="05fc8c0d38b5925dd12d88f9a4d864964eb1a23e" translate="yes" xml:space="preserve">
          <source>A service provider that is deployed as an &lt;a href=&quot;../lang/module/moduledescriptor#isAutomatic()&quot;&gt;automatic module&lt;/a&gt; on the application module path must have a provider constructor. There is no support for a provider method in this case.</source>
          <target state="translated">응용 프로그램 모듈 경로에 &lt;a href=&quot;../lang/module/moduledescriptor#isAutomatic()&quot;&gt;자동 모듈&lt;/a&gt; 로 배포되는 서비스 공급자 에는 공급자 생성자가 있어야합니다. 이 경우 공급자 메서드가 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="21e629d9b986d98aad5b172d7b134cbdb20bc42c" translate="yes" xml:space="preserve">
          <source>A service provider that is developed in a module has no control over when it is instantiated, since that occurs at the behest of the application, but it does have control over how it is instantiated:</source>
          <target state="translated">모듈에서 개발 된 서비스 공급자는 응용 프로그램의 요청에 따라 발생하기 때문에 인스턴스화시기를 제어 할 수 없지만 인스턴스화 방법은 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb3bd9e359015e93378204e4fc0d5cef15a4e1d8" translate="yes" xml:space="preserve">
          <source>A service provider that is developed in a module must be specified in a</source>
          <target state="translated">모듈에서 개발 된 서비스 공급자는</target>
        </trans-unit>
        <trans-unit id="a105491d46a576702eaa9bd293b3166772de8571" translate="yes" xml:space="preserve">
          <source>A service provider that is mentioned in a provider-configuration file may be located in the same JAR file as the provider-configuration file or in a different JAR file. The service provider must be visible from the class loader that is initially queried to locate the provider-configuration file; this is not necessarily the class loader which ultimately locates the provider-configuration file.</source>
          <target state="translated">공급자 구성 파일에 언급 된 서비스 공급자는 공급자 구성 파일과 동일한 JAR 파일 또는 다른 JAR 파일에있을 수 있습니다. 서비스 공급자는 공급자 구성 파일을 찾기 위해 처음 쿼리 된 클래스 로더에서 볼 수 있어야합니다. 이것은 궁극적으로 공급자 구성 파일을 찾는 클래스 로더 일 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="8b3ae2431f01165c4d6223d3345a0467408a54bc" translate="yes" xml:space="preserve">
          <source>A service provider that is packaged as a JAR file for the class path is identified by placing a</source>
          <target state="translated">클래스 경로에 대한 JAR 파일로 패키지 된 서비스 공급자는</target>
        </trans-unit>
        <trans-unit id="90b6c596a514c8a3e3a8e0d7147721a54f817a8c" translate="yes" xml:space="preserve">
          <source>A service should declare as many methods as needed to allow service providers to communicate their domain-specific properties and other quality-of-implementation factors. An application which obtains a service loader for the service may then invoke these methods on each instance of a service provider, in order to choose the best provider for the application.</source>
          <target state="translated">서비스는 서비스 공급자가 도메인 별 속성 및 기타 구현 품질 요소를 전달할 수 있도록 필요한만큼 메서드를 선언해야합니다. 서비스에 대한 서비스 로더를 얻는 애플리케이션은 애플리케이션에 가장 적합한 제공자를 선택하기 위해 서비스 제공자의 각 인스턴스에서 이러한 메소드를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f558c682d82a78f65971b8aa59cc9663eb4bdbc7" translate="yes" xml:space="preserve">
          <source>A service should express whether its service providers are intended to be direct implementations of the service or to be an indirection mechanism such as a &quot;proxy&quot; or a &quot;factory&quot;. Service providers tend to be indirection mechanisms when domain-specific objects are relatively expensive to instantiate; in this case, the service should be designed so that service providers are abstractions which create the &quot;real&quot; implementation on demand. For example, the &lt;code&gt;CodecFactory&lt;/code&gt; service expresses through its name that its service providers are factories for codecs, rather than codecs themselves, because it may be expensive or complicated to produce certain codecs.</source>
          <target state="translated">서비스는 서비스 제공자가 서비스를 직접 구현할 것인지 아니면 &quot;프록시&quot;또는 &quot;팩토리&quot;와 같은 간접 메커니즘인지를 표현해야합니다. 서비스 공급자는 도메인 특정 개체가 인스턴스화하는 데 상대적으로 비용이 많이 드는 경우 간접 메커니즘 인 경향이 있습니다. 이 경우 서비스 제공 업체가 요청시 &quot;실제&quot;구현을 생성하는 추상화가되도록 서비스를 설계해야합니다. 예를 들어, &lt;code&gt;CodecFactory&lt;/code&gt; 서비스는 특정 코덱을 생성하는 데 비용이 많이 들거나 복잡 할 수 있기 때문에 서비스 공급자가 코덱 자체가 아니라 코덱의 팩토리라는 이름을 통해 표현합니다.</target>
        </trans-unit>
        <trans-unit id="107c1281d843d21812c9753f1e240a4807a7bfa6" translate="yes" xml:space="preserve">
          <source>A service that a module provides one or more implementations of.</source>
          <target state="translated">모듈이 하나 이상의 구현을 제공하는 서비스입니다.</target>
        </trans-unit>
        <trans-unit id="21de0eefa91f1991f4ee8f78f789abc2d6a632c8" translate="yes" xml:space="preserve">
          <source>A service that decouples the production of new asynchronous tasks from the consumption of the results of completed tasks.</source>
          <target state="translated">완료된 작업의 결과를 소비하는 것과 새로운 비동기 작업의 생성을 분리하는 서비스입니다.</target>
        </trans-unit>
        <trans-unit id="4fc784edd2a04b2cf1ba0e1aff303c3c41157426" translate="yes" xml:space="preserve">
          <source>A service that decouples the production of new asynchronous tasks from the consumption of the results of completed tasks. Producers &lt;code&gt;submit&lt;/code&gt; tasks for execution. Consumers &lt;code&gt;take&lt;/code&gt; completed tasks and process their results in the order they complete. A &lt;code&gt;CompletionService&lt;/code&gt; can for example be used to manage asynchronous I/O, in which tasks that perform reads are submitted in one part of a program or system, and then acted upon in a different part of the program when the reads complete, possibly in a different order than they were requested.</source>
          <target state="translated">완료된 작업의 결과를 소비하는 것과 새로운 비동기 작업의 생성을 분리하는 서비스입니다. 생산자 는 실행할 작업을 &lt;code&gt;submit&lt;/code&gt; 합니다. 소비자 &lt;code&gt;take&lt;/code&gt; 완료된 작업을 수행하고 완료된 순서대로 결과를 처리합니다. &lt;code&gt;CompletionService&lt;/code&gt; 입니다은 예를 들어, 비동기 I / O를 관리하는 데 사용할 수있는가에 가능, 완벽한 읽을 때 프로그램의 다른 부분에 프로그램 또는 시스템의 한 부분으로 제출하고 행동 읽기를 수행 할 작업 그들이 요청한 것과 다른 순서.</target>
        </trans-unit>
        <trans-unit id="7bdaf453a964a1c776e674e18188b8bca8aaecb7" translate="yes" xml:space="preserve">
          <source>A session can be retrieved based on its session id, and all session id's in a &lt;code&gt;SSLSessionContext&lt;/code&gt; can be listed.</source>
          <target state="translated">세션 ID를 기반으로 세션을 검색 할 수 있으며 &lt;code&gt;SSLSessionContext&lt;/code&gt; 의 모든 세션 ID를 나열 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6646ee6a4df183df2ff9597fe94d2c392713265" translate="yes" xml:space="preserve">
          <source>A set containing one entry per MLET tag in the m-let text file loaded. Each entry specifies either the ObjectInstance for the created MBean, or a throwable object (that is, an error or an exception) if the MBean could not be created.</source>
          <target state="translated">로드 된 m-let 텍스트 파일에서 MLET 태그 당 하나의 항목을 포함하는 세트. 각 항목은 작성된 MBean의 ObjectInstance 또는 MBean을 작성할 수없는 경우 던질 수있는 오브젝트 (오류 또는 예외)를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="823c29ca4332f839f05f46d7bec1bff3ba2dfd93" translate="yes" xml:space="preserve">
          <source>A set containing the &lt;code&gt;ObjectInstance&lt;/code&gt; objects for the selected MBeans. If no MBean satisfies the query an empty list is returned.</source>
          <target state="translated">선택된 MBean에 대한 &lt;code&gt;ObjectInstance&lt;/code&gt; 객체를 포함하는 세트 . MBean이 쿼리를 만족하지 않으면 빈 목록이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="18f09420b43907da1e09c08ba83a8436b485f82a" translate="yes" xml:space="preserve">
          <source>A set containing the ObjectNames for the MBeans selected. If no MBean satisfies the query, an empty list is returned.</source>
          <target state="translated">선택된 MBean의 ObjectName를 포함한 세트입니다. MBean이 쿼리를 만족하지 않으면 빈 목록이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="1d269b0bcb9953bd64c968e8a8983b8bb0830c94" translate="yes" xml:space="preserve">
          <source>A set of attributes which control a print job.</source>
          <target state="translated">인쇄 작업을 제어하는 ​​속성 집합입니다.</target>
        </trans-unit>
        <trans-unit id="dc6807396a2cea1c95e0ec79617cbf32ea12d98e" translate="yes" xml:space="preserve">
          <source>A set of attributes which control the output of a printed page.</source>
          <target state="translated">인쇄 된 페이지의 출력을 제어하는 ​​속성 세트입니다.</target>
        </trans-unit>
        <trans-unit id="4e23b85f028bc038f2d1717150dfac0e8f5e8889" translate="yes" xml:space="preserve">
          <source>A set of date fields that provide access to Julian Days.</source>
          <target state="translated">Julian Days에 대한 액세스를 제공하는 일련의 날짜 필드입니다.</target>
        </trans-unit>
        <trans-unit id="fc2466ca66e5a6f6082b0cee1ceed5a8907bc032" translate="yes" xml:space="preserve">
          <source>A set of methods alternatively take a &quot;msgSupplier&quot; instead of a &quot;msg&quot; argument. These methods take a &lt;a href=&quot;../../../../java.base/java/util/function/supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;String&amp;gt;&lt;/code&gt; function which is invoked to construct the desired log message only when the message actually is to be logged based on the effective log level thus eliminating unnecessary message construction. For example, if the developer wants to log system health status for diagnosis, with the String-accepting version, the code would look like:</source>
          <target state="translated">메소드 세트는 &quot;msg&quot;인수 대신 &quot;msgSupplier&quot;를 사용합니다. 이러한 메서드 는 유효한 로그 수준을 기반으로 메시지가 실제로 기록 될 때만 원하는 로그 메시지를 구성하기 위해 호출되는 &lt;a href=&quot;../../../../java.base/java/util/function/supplier&quot;&gt; &lt;code&gt;Supplier&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;String&amp;gt;&lt;/code&gt; 함수를 사용하여 불필요한 메시지 구성을 제거합니다. 예를 들어 개발자가 진단을 위해 시스템 상태를 문자열 허용 버전으로 기록하려는 경우 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3817554a50f654a740b263526282ded9c6886b68" translate="yes" xml:space="preserve">
          <source>A set of methods alternatively take a &quot;msgSupplier&quot; instead of a &quot;msg&quot; argument. These methods take a &lt;a href=&quot;../function/supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;String&amp;gt;&lt;/code&gt; function which is invoked to construct the desired log message only when the message actually is to be logged based on the effective log level thus eliminating unnecessary message construction. For example, if the developer wants to log system health status for diagnosis, with the String-accepting version, the code would look like:</source>
          <target state="translated">메소드 세트는 &quot;msg&quot;인수 대신 &quot;msgSupplier&quot;를 사용합니다. 이러한 메소드는 &lt;a href=&quot;../function/supplier&quot;&gt; &lt;code&gt;Supplier&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;String&amp;gt;&lt;/code&gt; 함수를 사용하여 유효 로그 레벨을 기반으로 메시지가 실제로 로그 될 때만 원하는 로그 메시지를 구성하여 불필요한 메시지 구성을 제거합니다. 예를 들어, 개발자가 String-accepting 버전으로 진단을 위해 시스템 상태를 기록하려는 경우 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e66d63e3312e34b5660af451cc8fa239aa214c82" translate="yes" xml:space="preserve">
          <source>A set of the socket options supported by this channel</source>
          <target state="translated">이 채널이 지원하는 소켓 옵션 세트</target>
        </trans-unit>
        <trans-unit id="c5c42e67a0e9d6da7205778a238c6a49cf727721" translate="yes" xml:space="preserve">
          <source>A set of the socket options supported by this socket. This set may be empty if the socket's DatagramSocketImpl cannot be created.</source>
          <target state="translated">이 소켓에서 지원하는 소켓 옵션 세트입니다. 소켓의 DatagramSocketImpl을 만들 수없는 경우이 집합은 비어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1031839763e2c7f13b8fc5dce54eb4dc33216742" translate="yes" xml:space="preserve">
          <source>A set of the socket options supported by this socket. This set may be empty if the socket's SocketImpl cannot be created.</source>
          <target state="translated">이 소켓에서 지원하는 소켓 옵션 세트입니다. 소켓의 SocketImpl을 작성할 수없는 경우이 세트는 비어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4999fb77acf1811b58e8846e7ae1e7c4207cb24b" translate="yes" xml:space="preserve">
          <source>A set of updater methods were added to this interface in the JDBC 2.0 API (Java 2 SDK, Standard Edition, version 1.2). The comments regarding parameters to the getter methods also apply to parameters to the updater methods.</source>
          <target state="translated">JDBC 2.0 API (Java 2 SDK, Standard Edition, 버전 1.2)에서이 인터페이스에 업데이터 메소드 세트가 추가되었습니다. getter 메서드에 대한 매개 변수에 대한 설명은 업데이트 프로그램 메서드에 대한 매개 변수에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="582b5ca50c72ee8d9aa10c8467ea260e2ee2c4ee" translate="yes" xml:space="preserve">
          <source>A set of updater methods were added to this interface in the JDBC 2.0 API (Java&amp;trade; 2 SDK, Standard Edition, version 1.2). The comments regarding parameters to the getter methods also apply to parameters to the updater methods.</source>
          <target state="translated">JDBC 2.0 API (Java &amp;trade; 2 SDK, Standard Edition, 버전 1.2)의이 인터페이스에 업데이터 메소드 세트가 추가되었습니다. getter 메서드에 대한 매개 변수에 대한 설명은 업데이트 프로그램 메서드에 대한 매개 변수에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c6a8aee71dd0a287720f66b38e0678adc0b95290" translate="yes" xml:space="preserve">
          <source>A setting consists of a name/value pair, where &lt;em&gt;name&lt;/em&gt; specifies the event and setting to configure, and the &lt;em&gt;value&lt;/em&gt; specifies what to set it to.</source>
          <target state="translated">설정은 이름 / 값 쌍으로 구성됩니다. 여기서 &lt;em&gt;name&lt;/em&gt; 은 구성 할 이벤트 및 설정을 지정 하고 &lt;em&gt;값&lt;/em&gt; 은 설정할 대상을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="853cf41c51f43dfcfcc6e4eea887defa338da481" translate="yes" xml:space="preserve">
          <source>A shape to use for the child allocation to avoid creating a lot of garbage.</source>
          <target state="translated">많은 쓰레기를 만들지 않도록 자식 할당에 사용할 모양입니다.</target>
        </trans-unit>
        <trans-unit id="409fae66175b060955443e215504e840fd35b167" translate="yes" xml:space="preserve">
          <source>A shared superclass for the common functionality of &lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; &lt;/a&gt; 의 공통 기능을위한 공유 수퍼 클래스 .</target>
        </trans-unit>
        <trans-unit id="9b8b7e58b2a0c688355809db08681d6a34f0257c" translate="yes" xml:space="preserve">
          <source>A short buffer is not comparable to any other type of object.</source>
          <target state="translated">짧은 버퍼는 다른 유형의 객체와 비교할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="220cedae5cee73eb5e77033cce955a3ec7558f65" translate="yes" xml:space="preserve">
          <source>A short buffer is not equal to any other type of object.</source>
          <target state="translated">짧은 버퍼는 다른 유형의 객체와 같지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ac3d240d57cfeafb5db637c36dbd59837d8c439c" translate="yes" xml:space="preserve">
          <source>A short buffer.</source>
          <target state="translated">짧은 버퍼.</target>
        </trans-unit>
        <trans-unit id="0a0590d6a1827598168fafe48b6065118e07ebb4" translate="yes" xml:space="preserve">
          <source>A significant part of dealing with dates and times is the localization. This class acts as a central point for accessing the information.</source>
          <target state="translated">날짜와 시간을 다루는 데있어 중요한 부분은 현지화입니다. 이 클래스는 정보에 액세스하기위한 중심점 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="e0e06d4fda3d87cee17ba970f4abb3153d8c7e1d" translate="yes" xml:space="preserve">
          <source>A similar example, using a helper object to hold a loop parameter:</source>
          <target state="translated">비슷한 예, 도우미 개체를 사용하여 루프 매개 변수를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="4ebcbcfb752d1d5a18e55afabc1c6fe6cefc14a1" translate="yes" xml:space="preserve">
          <source>A similar technique can be used to generate an</source>
          <target state="translated">비슷한 기술을 사용하여</target>
        </trans-unit>
        <trans-unit id="b81bc43037857ed85f56a7ae603dd69e2aeafc77" translate="yes" xml:space="preserve">
          <source>A similar technique can be used to generate an &lt;em&gt;open range&lt;/em&gt; (which contains neither endpoint). The following idiom obtains a view containing all of the key-value mappings in &lt;code&gt;m&lt;/code&gt; whose keys are between &lt;code&gt;low&lt;/code&gt; and &lt;code&gt;high&lt;/code&gt;, exclusive:</source>
          <target state="translated">유사한 기술을 사용하여 &lt;em&gt;개방 범위&lt;/em&gt; (끝점을 포함하지 않음) 를 생성 할 수 있습니다 . 다음 관용구의 키 값의 매핑을 모두 포함하는 뷰 취득 &lt;code&gt;m&lt;/code&gt; 키 사이 &lt;code&gt;low&lt;/code&gt; 및 &lt;code&gt;high&lt;/code&gt; , 배타적 :</target>
        </trans-unit>
        <trans-unit id="3d57dee7a20af84e7fe2e9596414a5131168b917" translate="yes" xml:space="preserve">
          <source>A similar, but simpler, situation occurs for the Japanese calendar system. The locale &quot;jp_JP_JP&quot; has previously been used to access the calendar. However, unlike the Thai locale, &quot;ja_JP_JP&quot; is automatically converted by &lt;code&gt;Locale&lt;/code&gt; to the modern and recommended form of &quot;ja-JP-u-ca-japanese&quot;. Thus, there is no difference in behavior between this method and &lt;code&gt;Calendar#getInstance(Locale)&lt;/code&gt;.</source>
          <target state="translated">일본어 달력 시스템에서도 비슷하지만 더 간단한 상황이 발생합니다. 로케일 &quot;jp_JP_JP&quot;는 이전에 달력에 액세스하는 데 사용되었습니다. 그러나, 타이어의 로케일과는 달리, &quot;ja_JP_JP&quot;이 자동으로 변환됩니다 &lt;code&gt;Locale&lt;/code&gt; &quot;에서 ja-JP-U-CA-일본어&quot;현대 권장 형성한다. 따라서이 메서드와 &lt;code&gt;Calendar#getInstance(Locale)&lt;/code&gt; 사이에는 동작에 차이가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="9ea5396860b484237672382fe5f7f9f7be841a20" translate="yes" xml:space="preserve">
          <source>A simple DTD-driven HTML parser.</source>
          <target state="translated">간단한 DTD 기반 HTML 파서.</target>
        </trans-unit>
        <trans-unit id="b6cedbf85f4d4faa780a9796e11f7f8fce05def1" translate="yes" xml:space="preserve">
          <source>A simple DTD-driven HTML parser. The parser reads an HTML file from an InputStream and calls various methods (which should be overridden in a subclass) when tags and data are encountered.</source>
          <target state="translated">간단한 DTD 기반 HTML 파서. 파서는 InputStream에서 HTML 파일을 읽고 태그와 데이터가 발견되면 다양한 메서드 (서브 클래스에서 재정의되어야 함)를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="1c197409545388baeb2215de4f002e5dfb62b00f" translate="yes" xml:space="preserve">
          <source>A simple SQL identifier or a delimited identifier</source>
          <target state="translated">간단한 SQL 식별자 또는 구분 된 식별자</target>
        </trans-unit>
        <trans-unit id="12a111d3d26ed80b7a5d0975eed77cb4f5b76771" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the hour field. A more complex adjuster might set the time to the last hour of the day.</source>
          <target state="translated">간단한 조정자는 단순히 시간 필드와 같은 필드 중 하나를 설정할 수 있습니다. 더 복잡한 조정자가 시간을 하루 중 마지막 시간으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23a02b1085ad689bf3c6002c5e392214239fa5f6" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month.</source>
          <target state="translated">간단한 조정자가 연도 필드와 같은 필드 중 하나를 간단하게 설정할 수 있습니다. 더 복잡한 조정자는 날짜를 해당 월의 마지막 날로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a318603867fd35924e66b179c67d0767587c5ec3" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month. A selection of common adjustments is provided in &lt;a href=&quot;temporal/temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. These include finding the &quot;last day of the month&quot; and &quot;next Wednesday&quot;. Key date-time classes also implement the &lt;code&gt;TemporalAdjuster&lt;/code&gt; interface, such as &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;monthday&quot;&gt;&lt;code&gt;MonthDay&lt;/code&gt;&lt;/a&gt;. The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years.</source>
          <target state="translated">간단한 조정자가 연도 필드와 같은 필드 중 하나를 간단하게 설정할 수 있습니다. 더 복잡한 조정자는 날짜를 해당 월의 마지막 날로 설정할 수 있습니다. &lt;a href=&quot;temporal/temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt; 에서 공통 조정을 선택할 수 있습니다. 여기에는 &quot;매월 마지막 날&quot;과 &quot;다음 수요일&quot;찾기가 포함됩니다. 주요 날짜-시간 클래스는 &lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;monthday&quot;&gt; &lt;code&gt;MonthDay&lt;/code&gt; &lt;/a&gt; 와 같은 &lt;code&gt;TemporalAdjuster&lt;/code&gt; 인터페이스 도 구현합니다 . 조정자는 다양한 월 및 윤년과 같은 특수 사례를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="fa3fc5f3d04680138bbeab26dcb646d5fbc7391e" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the year-month to the next month that Halley's comet will pass the Earth.</source>
          <target state="translated">간단한 조정자가 연도 필드와 같은 필드 중 하나를 간단하게 설정할 수 있습니다. 더 복잡한 조정자가 할리의 혜성이 지구를 통과하는 한 달을 다음 달로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1aa5f5faff34dd4e9c4de55734ce4de58db0d760" translate="yes" xml:space="preserve">
          <source>A simple base class for more specialized editors that displays a read-only view of the model's current value with a &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; 를 사용하여 모델의 현재 값에 대한 읽기 전용보기를 표시하는보다 전문화 된 편집기를위한 간단한 기본 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="2764835975cd700dbd46170965facdc08a19a6da" translate="yes" xml:space="preserve">
          <source>A simple base class for more specialized editors that displays a read-only view of the model's current value with a &lt;code&gt;JFormattedTextField&lt;/code&gt;. Subclasses can configure the &lt;code&gt;JFormattedTextField&lt;/code&gt; to create an editor that's appropriate for the type of model they support and they may want to override the &lt;code&gt;stateChanged&lt;/code&gt; and &lt;code&gt;propertyChanged&lt;/code&gt; methods, which keep the model and the text field in sync.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; 를 사용하여 모델의 현재 값에 대한 읽기 전용보기를 표시하는보다 전문화 된 편집기를위한 간단한 기본 클래스입니다 . 서브 클래스는 &lt;code&gt;JFormattedTextField&lt;/code&gt; 를 구성하여 지원하는 모델 유형에 적합한 편집기를 만들 수 있으며 모델과 텍스트 필드를 동기화 상태로 유지하는 &lt;code&gt;stateChanged&lt;/code&gt; 및 &lt;code&gt;propertyChanged&lt;/code&gt; 메서드 를 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9de12e02d5d783055af2cac617c1cf13b79e9aa4" translate="yes" xml:space="preserve">
          <source>A simple container class to aggregate an image, a set of thumbnail (preview) images, and an object representing metadata associated with the image.</source>
          <target state="translated">이미지, 썸네일 (미리보기) 이미지 세트 및 이미지와 연관된 메타 데이터를 나타내는 객체를 집계하는 간단한 컨테이너 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="57b83c054e36e07ed7927586bfadbcbca8585267" translate="yes" xml:space="preserve">
          <source>A simple example HTML invocation is:</source>
          <target state="translated">간단한 HTML 호출의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3afcb20906076980f2d654a99ba0b5aea04cc852" translate="yes" xml:space="preserve">
          <source>A simple example of using the API is:</source>
          <target state="translated">API 사용의 간단한 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="af4d653de33053860dff4b70bc99a12fe289e16b" translate="yes" xml:space="preserve">
          <source>A simple filter interface used by &lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; to select providers matching an arbitrary criterion.</source>
          <target state="translated">&lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; 에서 임의 기준과 일치하는 공급자를 선택하기 위해 사용하는 간단한 필터 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="44205ac3fc78148a74f195a9ff2af55f58512ea8" translate="yes" xml:space="preserve">
          <source>A simple filter interface used by &lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; to select providers matching an arbitrary criterion. Classes that implement this interface should be defined in order to make use of the &lt;code&gt;getServiceProviders&lt;/code&gt; method of &lt;code&gt;ServiceRegistry&lt;/code&gt; that takes a &lt;code&gt;Filter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; 에서 임의 기준과 일치하는 공급자를 선택하기 위해 사용하는 간단한 필터 인터페이스 입니다. &lt;code&gt;Filter&lt;/code&gt; 를 취하는 &lt;code&gt;ServiceRegistry&lt;/code&gt; 의 &lt;code&gt;getServiceProviders&lt;/code&gt; 메소드를 사용하려면이 인터페이스를 구현하는 클래스를 정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="94df5a8b03faa139f9cbff5fbd9a6312ad0d8813" translate="yes" xml:space="preserve">
          <source>A simple implementation of &lt;code&gt;SpinnerModel&lt;/code&gt; whose values are defined by an array or a &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">값이 배열 또는 &lt;code&gt;List&lt;/code&gt; 로 정의되는 &lt;code&gt;SpinnerModel&lt;/code&gt; 의 간단한 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="fbec365ef8d24ee111e97b44c56f8ad7334a3295" translate="yes" xml:space="preserve">
          <source>A simple implementation of &lt;code&gt;SpinnerModel&lt;/code&gt; whose values are defined by an array or a &lt;code&gt;List&lt;/code&gt;. For example to create a model defined by an array of the names of the days of the week:</source>
          <target state="translated">값이 배열 또는 &lt;code&gt;List&lt;/code&gt; 로 정의되는 &lt;code&gt;SpinnerModel&lt;/code&gt; 의 간단한 구현입니다 . 예를 들어 요일의 이름 배열로 정의 된 모델을 만들려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="74fccd3ff6f46074f0af84c8344a7d990571dd3b" translate="yes" xml:space="preserve">
          <source>A simple implementation of Bindings backed by a &lt;code&gt;HashMap&lt;/code&gt; or some other specified &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HashMap&lt;/code&gt; 또는 기타 지정된 &lt;code&gt;Map&lt;/code&gt; 에 의해 지원되는 간단한 바인딩 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="044c6c729ff49ba0ec97fdf1cefbf0c1c70b1c60" translate="yes" xml:space="preserve">
          <source>A simple interface which provides a mechanism to map between a file name and a MIME type string.</source>
          <target state="translated">파일 이름과 MIME 유형 문자열 사이를 매핑하는 메커니즘을 제공하는 간단한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="abe9a18b4467c717ef8e29a957d65d71806ed58c" translate="yes" xml:space="preserve">
          <source>A simple minded look and feel change: ask each node in the tree to &lt;code&gt;updateUI()&lt;/code&gt; -- that is, to initialize its UI property with the current look and feel.</source>
          <target state="translated">단순한 룩앤필 변경 : 트리의 각 노드에 &lt;code&gt;updateUI()&lt;/code&gt; 를 요청합니다. 즉, UI 속성을 현재 룩앤필로 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="dacb2fcc771630cbdcbfdcac18166570cba477e7" translate="yes" xml:space="preserve">
          <source>A simple service-provider loading facility.</source>
          <target state="translated">간단한 서비스 제공 업체 로딩 시설.</target>
        </trans-unit>
        <trans-unit id="9897440ed3077a40719adee1662c352b9509dee5" translate="yes" xml:space="preserve">
          <source>A simple text scanner which can parse primitive types and strings using regular expressions.</source>
          <target state="translated">정규식을 사용하여 기본 유형과 문자열을 구문 분석 할 수있는 간단한 텍스트 스캐너입니다.</target>
        </trans-unit>
        <trans-unit id="ae874b7118ac1c7c8f04bbfdc0b8de5f7c2a2ea4" translate="yes" xml:space="preserve">
          <source>A simple tree data model that uses TreeNodes.</source>
          <target state="translated">TreeNode를 사용하는 간단한 트리 데이터 모델.</target>
        </trans-unit>
        <trans-unit id="45d44698bb1d06d4aa5fb4d2294938388eff7c04" translate="yes" xml:space="preserve">
          <source>A simple tree data model that uses TreeNodes. For further information and examples that use DefaultTreeModel, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">TreeNode를 사용하는 간단한 트리 데이터 모델. DefaultTreeModel을 사용하는 자세한 정보와 예제는 &lt;em&gt;Java Tutorial의 &lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; 를 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e9c5ab7d2ea188da068945af78755a1530998e41" translate="yes" xml:space="preserve">
          <source>A simple tree data model that uses TreeNodes. For further information and examples that use DefaultTreeModel, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">TreeNode를 사용하는 간단한 트리 데이터 모델. DefaultTreeModel을 사용하는 자세한 정보와 예제는 &lt;em&gt;Java Tutorial의 &lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; 를 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b88ff9658e5d7f037e733665708343d02e33a44b" translate="yes" xml:space="preserve">
          <source>A simple variable reference expression.</source>
          <target state="translated">간단한 변수 참조 표현식입니다.</target>
        </trans-unit>
        <trans-unit id="e40948c5ede78bf4873b1e0de13ad97b985ff659" translate="yes" xml:space="preserve">
          <source>A simple variable reference expression. A &lt;code&gt;SubKind&lt;/code&gt; of &lt;a href=&quot;snippet.kind#EXPRESSION&quot;&gt;&lt;code&gt;Snippet.Kind.EXPRESSION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">간단한 변수 참조 표현식입니다. A는 &lt;code&gt;SubKind&lt;/code&gt; 의 &lt;a href=&quot;snippet.kind#EXPRESSION&quot;&gt; &lt;code&gt;Snippet.Kind.EXPRESSION&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1b7697eeae7e8a85a77f1d29578e893238176fe6" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for source version &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 주석 값에 대한 단순 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="6d76f08d7ead833d12daf71d69f5f1f7bf210f23" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for source version &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 주석 값에 대한 단순 방문자입니다 . 방문 방법은 전화 &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt; 자신의 인수를 전달 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="65e004a9f7f87001654c5cd8c72b219513788048" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 주석 값에 대한 단순 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="4833a91bff0c81247a7e00e63ce274190b4154fd" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 주석 값에 대한 단순 방문자입니다 . 방문 방법은 전화 &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt; 자신의 인수를 전달 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="01d653778a792e460a6d6e30bffabcbfe49c41b8" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 주석 값에 대한 단순 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="d9a4de84eef81a73dfc067699d11ff07246db5da" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 주석 값에 대한 단순 방문자입니다 . 방문 방법은 전화 &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt; 자신의 인수를 전달 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b4993ee4561a785ce855a86900bd6ffb63898f32" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작의 주석 값에 대한 간단한 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="4b8f8d0a43e8d95977d4d3424c5d0724cc2baf4e" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;#defaultAction(java.lang.Object,P)&quot;&gt;&lt;code&gt;defaultAction(java.lang.Object, P)&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작이있는 주석 값에 대한 단순 방문자입니다 . 방문 메소드는 &lt;a href=&quot;#defaultAction(java.lang.Object,P)&quot;&gt; &lt;code&gt;defaultAction(java.lang.Object, P)&lt;/code&gt; &lt;/a&gt; 을 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="74d2b0cb45a8d6b85ec8418c78bfe850754e1244" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt;&lt;code&gt;defaultAction(java.lang.Object, P)&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작의 주석 값에 대한 간단한 방문자입니다 . 방문 메소드는 &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt; &lt;code&gt;defaultAction(java.lang.Object, P)&lt;/code&gt; &lt;/a&gt; 를 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="3a340b7d1f1ecb42981a58df07ae2fdd15745b96" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작의 주석 값에 대한 간단한 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="9bb81c4428c42130a3e02aa3e7936cb6982ad8ab" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작이있는 주석 값에 대한 단순 방문자입니다 . 방문 방법은 전화 &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt; 자신의 인수를 전달 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4b125219b094017b502ca392996fc23070ae3133" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작의 주석 값에 대한 간단한 방문자입니다 . 방문 메소드는 &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt; 을 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="ce1c8160aa409675b3e7293b8a25c0f8f37af5fa" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작의 주석 값에 대한 간단한 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="e7752124381faae30a107ff5b1ecb0becfa36b8d" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작이있는 주석 값에 대한 단순 방문자입니다 . 방문 방법은 전화 &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt; 자신의 인수를 전달 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="370ae61f068e3d0befb7ba82b76e41070cc91849" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작의 주석 값에 대한 간단한 방문자입니다 . 방문 메소드는 &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt; 을 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="e7ee39c6a254232af84eaa6e36e150249585d87e" translate="yes" xml:space="preserve">
          <source>A simple visitor for tree nodes.</source>
          <target state="translated">트리 노드에 대한 간단한 방문자.</target>
        </trans-unit>
        <trans-unit id="adf4c935c49a215c1522962a622225250ad8f65f" translate="yes" xml:space="preserve">
          <source>A simple visitor of files with default behavior to visit all files and to re-throw I/O errors.</source>
          <target state="translated">모든 파일을 방문하고 I / O 오류를 다시 발생시키는 기본 동작을 가진 파일의 간단한 방문자입니다.</target>
        </trans-unit>
        <trans-unit id="44e8ad802c43be3b8eb93c7a5f3b876d5718e696" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 프로그램 요소의 단순 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="7ff78ebcb82231c4d95f568ef19dbb80a1ce337b" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;. Visit methods corresponding to &lt;code&gt;RELEASE_9&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 프로그램 요소의 단순 방문자입니다 . &lt;code&gt;RELEASE_9&lt;/code&gt; 및 이전 언어 구성에 해당하는 방문 메소드 는 &lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 해당 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="3527b83d67468ba9ccf3da87cbadbdca40ce29a6" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 프로그램 요소의 단순 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="998f15efe7775a010a70030d649cc824de24c514" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;. Visit methods corresponding to &lt;code&gt;RELEASE_9&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 프로그램 요소의 단순 방문자입니다 . &lt;code&gt;RELEASE_9&lt;/code&gt; 및 이전 언어 구성에 해당하는 방문 메소드 는 &lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 해당 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="17c83a3aca3f35d922f88edba139802a56b01594" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작이있는 프로그램 요소의 단순 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="3d28e7a8b6ee1f98694fa4930b80048dbd81dc41" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_14&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작이있는 프로그램 요소의 단순 방문자입니다 . &lt;code&gt;RELEASE_14&lt;/code&gt; 및 이전 언어 구문에 해당하는 방문 메소드 는 &lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 해당 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="fb2d80e9354651a601d59bd203681f6387e39885" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 간단한 프로그램 요소 방문자 .</target>
        </trans-unit>
        <trans-unit id="101d5370d496d9e005f69d0668a6c96fad110315" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_6&lt;/code&gt; language constructs call &lt;a href=&quot;#defaultAction(javax.lang.model.element.Element,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters. For constructs introduced in &lt;code&gt;RELEASE_7&lt;/code&gt; and later, &lt;code&gt;
 visitUnknown&lt;/code&gt; is called instead.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작이있는 프로그램 요소의 단순 방문자입니다 . &lt;code&gt;RELEASE_6&lt;/code&gt; 언어 구문에 해당하는 방문 메소드 는 &lt;a href=&quot;#defaultAction(javax.lang.model.element.Element,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 해당 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 . &lt;code&gt;RELEASE_7&lt;/code&gt; 이상에 도입 된 구성의 경우 , &lt;code&gt; visitUnknown&lt;/code&gt; 이 대신 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="dfd6c813f680eb0eb2b148ef59c82b8c4e4359c4" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_6&lt;/code&gt; language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters. For constructs introduced in &lt;code&gt;RELEASE_7&lt;/code&gt; and later, &lt;code&gt;visitUnknown&lt;/code&gt; is called instead.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 간단한 프로그램 요소 방문자 . &lt;code&gt;RELEASE_6&lt;/code&gt; 언어에 해당하는 방문 메소드 는 &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 . &lt;code&gt;RELEASE_7&lt;/code&gt; 이상 에서 도입 된 구문의 경우 &lt;code&gt;visitUnknown&lt;/code&gt; 이 대신 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e3373e9dccc63693aae9881930a32a20b82e9811" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 간단한 프로그램 요소 방문자 .</target>
        </trans-unit>
        <trans-unit id="8a4d09fbfc475ad368df8073ad122838040b4e55" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작이있는 프로그램 요소의 단순 방문자입니다 . &lt;code&gt;RELEASE_7&lt;/code&gt; 및 이전 언어 구문에 해당하는 방문 메소드 는 &lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 해당 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="5a9e01744c954dab0e145fbb2c53749ff339a922" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 간단한 프로그램 요소 방문자 . &lt;code&gt;RELEASE_7&lt;/code&gt; 및 이전 언어 구성에 해당하는 방문 메소드 는 &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="b099cc857f551b44dc082f6a80406e3138ee957d" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 간단한 프로그램 요소 방문자 .</target>
        </trans-unit>
        <trans-unit id="e7d6a229b08e1e44605fe070804b3ddce33409b5" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 간단한 프로그램 요소 방문자 . &lt;code&gt;RELEASE_7&lt;/code&gt; 및 이전 언어 구성에 해당하는 방문 메소드 는 &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="ba2e1f45a9ceb72bc32ea4ba300c907f91dfbe8f" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_8&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작이있는 프로그램 요소의 간단한 방문자 . &lt;code&gt;RELEASE_8&lt;/code&gt; 및 이전 언어 구문에 해당하는 방문 메소드 는 &lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 해당 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="db2dc64e156431074ba648505cc3bc9c174b052f" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for source version &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 유형의 단순 방문자 .</target>
        </trans-unit>
        <trans-unit id="a7665a45ab25fc01621d095aa13f15c2aedac3b6" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for source version &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;. Visit methods corresponding to &lt;code&gt;RELEASE_14&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 유형의 단순 방문자 . &lt;code&gt;RELEASE_14&lt;/code&gt; 및 이전 언어 구문에 해당하는 방문 메소드 는 &lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 해당 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="61dae6fd4f79b4cbf671c3ce7384d3c2ba0568f1" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 유형의 단순 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="c8658f42d024df63620147ca3787df083e222cbe" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;. Visit methods corresponding to &lt;code&gt;RELEASE_9&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 유형의 단순 방문자입니다 . &lt;code&gt;RELEASE_9&lt;/code&gt; 및 이전 언어 구성에 해당하는 방문 메소드 는 &lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 해당 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="311dbf4c5221893edfc8b49b7bcd1f7401550833" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 유형의 단순 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="1ce3e96e21af8bd3acc4ed588598dae7d2d1d0d1" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;. Visit methods corresponding to &lt;code&gt;RELEASE_9&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 유형의 단순 방문자입니다 . &lt;code&gt;RELEASE_9&lt;/code&gt; 및 이전 언어 구성에 해당하는 방문 메소드 는 &lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 해당 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="bd6b288f070274c1f886b7e33f653c4e09d1dc67" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 단순 유형 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="e98f8f710d31e351f7f5c8fa436c101c4d6e42be" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_6&lt;/code&gt; language constructs call &lt;a href=&quot;#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters. For constructs introduced in &lt;code&gt;RELEASE_7&lt;/code&gt; and later, &lt;code&gt;
 visitUnknown&lt;/code&gt; is called instead.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작이있는 유형의 단순 방문자입니다 . &lt;code&gt;RELEASE_6&lt;/code&gt; 언어 구문에 해당하는 방문 메소드 는 &lt;a href=&quot;#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 해당 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 . &lt;code&gt;RELEASE_7&lt;/code&gt; 이상에 도입 된 구성의 경우 , &lt;code&gt; visitUnknown&lt;/code&gt; 이 대신 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="14f78ab027f770fa626cdd8b7cc1dd584ae81dc9" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_6&lt;/code&gt; language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters. For constructs introduced in &lt;code&gt;RELEASE_7&lt;/code&gt; and later, &lt;code&gt;visitUnknown&lt;/code&gt; is called instead.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 단순 유형 방문자입니다 . &lt;code&gt;RELEASE_6&lt;/code&gt; 언어에 해당하는 방문 메소드 는 &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 . &lt;code&gt;RELEASE_7&lt;/code&gt; 에 도입 된 구문 이상 경우 &lt;code&gt;visitUnknown&lt;/code&gt; 이 대신 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="12025ce7a60019adcb9c20a5090ddc6e37570ea8" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작을 가진 단순 유형 방문자 소스 버전에 .</target>
        </trans-unit>
        <trans-unit id="06a2ce26685a08cf8055455f7890dceec17389a8" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작이있는 유형의 단순 방문자입니다 . &lt;code&gt;RELEASE_7&lt;/code&gt; 및 이전 언어 구문에 해당하는 방문 메소드 는 &lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 해당 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="849853eaa5c273ebf168ac87e3f6a56a25686a1c" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 단순 유형 방문자입니다 . &lt;code&gt;RELEASE_7&lt;/code&gt; 및 이전 언어 구성에 해당하는 방문 메소드 는 &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="25f34fa41739f34143ba43abe69ed1d5a4dc9fcb" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_8&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 단순 유형 방문자입니다 . &lt;code&gt;RELEASE_8&lt;/code&gt; 및 이전 언어 구성에 해당하는 방문 메소드 는 &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="6b0b83cf0b3f755e0c2bdc71df4f14be5483533a" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작이있는 유형의 단순 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="d5c544960d687501d74bdd5e629c9c68f84e3e8a" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_8&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작이있는 유형의 단순 방문자입니다 . &lt;code&gt;RELEASE_8&lt;/code&gt; 및 이전 언어 구문에 해당하는 방문 메소드 는 &lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; 을&lt;/a&gt; 호출 하여 해당 인수를 &lt;code&gt;defaultAction&lt;/code&gt; 의 해당 매개 변수에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="eb99826c504dae90d446de297127f2014189c3d5" translate="yes" xml:space="preserve">
          <source>A simplified example of how this method might be used in a listener:</source>
          <target state="translated">리스너에서이 메서드를 사용하는 방법에 대한 간단한 예 :</target>
        </trans-unit>
        <trans-unit id="27f519c264f7975e082fbd89a92d6831c2d15d4b" translate="yes" xml:space="preserve">
          <source>A single &lt;code&gt;int&lt;/code&gt; pixel representation is valid for all objects of this class since it is always possible to represent pixel values used with this class in a single &lt;code&gt;int&lt;/code&gt;. Therefore, methods that use this representation do not throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; due to an invalid pixel value.</source>
          <target state="translated">단일 &lt;code&gt;int&lt;/code&gt; 픽셀 표현은이 클래스와 함께 사용되는 픽셀 값을 단일 &lt;code&gt;int&lt;/code&gt; 로 항상 표현할 수 있기 때문에이 클래스의 모든 객체에 대해 유효합니다 . 따라서이 표현을 사용하는 메서드 는 잘못된 픽셀 값으로 인해 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을 throw하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8dea3bc059af1940a58646316042a1585ba6e27d" translate="yes" xml:space="preserve">
          <source>A single SubmissionPublisher may be shared among multiple sources. Actions in a source thread prior to publishing an item or issuing a signal &lt;a href=&quot;package-summary#MemoryVisibility&quot;&gt; &lt;i&gt;happen-before&lt;/i&gt;&lt;/a&gt; actions subsequent to the corresponding access by each subscriber. But reported estimates of lag and demand are designed for use in monitoring, not for synchronization control, and may reflect stale or inaccurate views of progress.</source>
          <target state="translated">단일 SubmissionPublisher를 여러 소스간에 공유 할 수 있습니다. 항목을 게시하거나 신호를 발행하기 전 소스 스레드의 작업은 각 구독자의 해당 액세스 이후 작업 &lt;a href=&quot;package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;이 발생하기 전에 발생&lt;/i&gt;&lt;/a&gt; 합니다. 그러나보고 된 지연 및 수요 추정치는 동기화 제어용이 아닌 모니터링 용으로 설계되었으며 진척 상황에 대한 부실하거나 부정확 한보기를 반영 할 수 있습니다. &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="27ff022f3fd1a6d7569af1ad3bd234c09b43c80a" translate="yes" xml:space="preserve">
          <source>A single character access key to give access to the form control.</source>
          <target state="translated">양식 컨트롤에 대한 액세스를 제공하는 단일 문자 액세스 키입니다.</target>
        </trans-unit>
        <trans-unit id="1ae1810794423c6849fc74878d0eec623a0e4b9a" translate="yes" xml:space="preserve">
          <source>A single character access key to give access to the form control. See the accesskey attribute definition in HTML 4.0.</source>
          <target state="translated">양식 컨트롤에 대한 액세스를 제공하는 단일 문자 액세스 키입니다. HTML 4.0의 accesskey 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c2cda915d5b8ed6e97732e93b873a1aae2252327" translate="yes" xml:space="preserve">
          <source>A single input source for an XML entity.</source>
          <target state="translated">XML 엔터티에 대한 단일 입력 소스입니다.</target>
        </trans-unit>
        <trans-unit id="eca9f0ce09e9d0b271156fb1f94d95b2015e0045" translate="yes" xml:space="preserve">
          <source>A single int pixel representation is valid for all objects of this class, since it is always possible to represent pixel values used with this class in a single int. Therefore, methods which use this representation will not throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; due to an invalid pixel value.</source>
          <target state="translated">단일 int 픽셀 표현은이 클래스의 모든 객체에 대해 유효합니다.이 클래스와 함께 사용되는 픽셀 값을 단일 int로 표현할 수 있기 때문입니다. 따라서이 표현을 사용하는 메서드 는 잘못된 픽셀 값으로 인해 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을 throw 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="680031280f170e37befabd82b15dfb57834e2df4" translate="yes" xml:space="preserve">
          <source>A single line input field that lets the user select a number or an object value from an ordered sequence.</source>
          <target state="translated">사용자가 순서가 지정된 순서에서 숫자 또는 개체 값을 선택할 수있는 한 줄 입력 필드입니다.</target>
        </trans-unit>
        <trans-unit id="faf61db4003f7e8791a833e8ec2047f6b731952d" translate="yes" xml:space="preserve">
          <source>A single line input field that lets the user select a number or an object value from an ordered sequence. Spinners typically provide a pair of tiny arrow buttons for stepping through the elements of the sequence. The keyboard up/down arrow keys also cycle through the elements. The user may also be allowed to type a (legal) value directly into the spinner. Although combo boxes provide similar functionality, spinners are sometimes preferred because they don't require a drop down list that can obscure important data.</source>
          <target state="translated">사용자가 순서가 지정된 순서에서 숫자 또는 개체 값을 선택할 수있는 한 줄 입력 필드입니다. 스피너는 일반적으로 시퀀스 요소를 단계별로 이동할 수있는 한 쌍의 작은 화살표 버튼을 제공합니다. 키보드 위쪽 / 아래쪽 화살표 키도 요소를 순환합니다. 사용자는 스피너에 직접 (법적) 값을 입력 할 수도 있습니다. 콤보 상자는 유사한 기능을 제공하지만 중요한 데이터를 가릴 수있는 드롭 다운 목록이 필요하지 않기 때문에 스피너가 선호되는 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="16a31a5d1604a416d595ff17f4a7f21267ce2012" translate="yes" xml:space="preserve">
          <source>A single strikethrough.</source>
          <target state="translated">취소 선 하나.</target>
        </trans-unit>
        <trans-unit id="37f2833a23b911df059b18a6bb18e4f13e04daa4" translate="yes" xml:space="preserve">
          <source>A single switch point may be used to control any number of method handles. (Indirectly, therefore, it can control any number of call sites.) This is done by using the single switch point as a factory for combining any number of guarded method handle pairs into guarded delegators.</source>
          <target state="translated">단일 스위치 포인트를 사용하여 여러 메소드 핸들을 제어 할 수 있습니다. (따라서 간접적으로, 그것은 많은 호출 사이트를 제어 할 수 있습니다.) 이것은 하나의 스위치 포인트를 팩토리로 사용하여 보호 된 메소드 핸들 쌍을 보호 된 위임자로 결합하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="5fd8f82617aca923d0120e50ad83d10f1ea4dd35" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;module&lt;/code&gt; access (default access), which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 결과에 기여할 수있는 &lt;code&gt;module&lt;/code&gt; 액세스 (기본 액세스)를 나타내는 단일 비트 마스크 입니다.</target>
        </trans-unit>
        <trans-unit id="23f0d6af86ce12d16fc99dd073d73e389160aa51" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;module&lt;/code&gt; access (default access), which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value is &lt;code&gt;0x10&lt;/code&gt;, which does not correspond meaningfully to any particular &lt;a href=&quot;../reflect/modifier&quot;&gt;modifier bit&lt;/a&gt;. In conjunction with the &lt;code&gt;PUBLIC&lt;/code&gt; modifier bit, a &lt;code&gt;Lookup&lt;/code&gt; with this lookup mode can access all public types in the module of the lookup class and public types in packages exported by other modules to the module of the lookup class.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 결과에 기여할 수있는 &lt;code&gt;module&lt;/code&gt; 액세스 (기본 액세스)를 나타내는 단일 비트 마스크 입니다. 값은 &lt;code&gt;0x10&lt;/code&gt; 으로 , 특정 &lt;a href=&quot;../reflect/modifier&quot;&gt;수정 자 비트에&lt;/a&gt; 의미있게 대응하지 않습니다 . 와 결합 &lt;code&gt;PUBLIC&lt;/code&gt; 의 변경자 비트하는 &lt;code&gt;Lookup&lt;/code&gt; 룩업 모드 룩업 클래스 모듈과 다른 모듈에 의해 익스포트 패키지 룩업 클래스 공공 타입의 모듈의 모든 공용 유형을 액세스 할 수있다.</target>
        </trans-unit>
        <trans-unit id="61ce969f29fa23f45e9da2d879d776b501ee1b63" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;module&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;module&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 입니다.</target>
        </trans-unit>
        <trans-unit id="7898fdd9a5d4a984aeeba70257ada4e4cd4d9e29" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;module&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value is &lt;code&gt;0x10&lt;/code&gt;, which does not correspond meaningfully to any particular &lt;a href=&quot;../reflect/modifier&quot;&gt;modifier bit&lt;/a&gt;. In conjunction with the &lt;code&gt;PUBLIC&lt;/code&gt; modifier bit, a &lt;code&gt;Lookup&lt;/code&gt; with this lookup mode can access all public types in the module of the lookup class and public types in packages exported by other modules to the module of the lookup class.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;module&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 입니다. 값은 &lt;code&gt;0x10&lt;/code&gt; 으로 , 특정 &lt;a href=&quot;../reflect/modifier&quot;&gt;수정 자 비트에&lt;/a&gt; 의미있게 대응하지 않습니다 . 와 결합 &lt;code&gt;PUBLIC&lt;/code&gt; 의 변경자 비트하는 &lt;code&gt;Lookup&lt;/code&gt; 룩업 모드 룩업 클래스 모듈과 다른 모듈에 의해 익스포트 패키지 룩업 클래스 공공 타입의 모듈의 모든 공용 유형을 액세스 할 수있다.</target>
        </trans-unit>
        <trans-unit id="8f40d8597fa0b7098c4a4924b114897ae5217614" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;package&lt;/code&gt; access (default access), which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;package&lt;/code&gt; 액세스 (기본 액세스)를 나타내는 단일 비트 마스크 입니다.</target>
        </trans-unit>
        <trans-unit id="96b76990ea7c53c5cde9f73d37a83315e3583738" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;package&lt;/code&gt; access (default access), which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value is &lt;code&gt;0x08&lt;/code&gt;, which does not correspond meaningfully to any particular &lt;a href=&quot;../reflect/modifier&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;package&lt;/code&gt; 액세스 (기본 액세스)를 나타내는 단일 비트 마스크 입니다. 값은 &lt;code&gt;0x08&lt;/code&gt; 이며, 특정 &lt;a href=&quot;../reflect/modifier&quot;&gt;수정 자 비트에&lt;/a&gt; 의미있게 대응하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d7c2fd6b3301b8d285d0ce1608b58da62b7dae7d" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;package&lt;/code&gt; access (default access), which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value is &lt;code&gt;0x08&lt;/code&gt;, which does not correspond meaningfully to any particular &lt;a href=&quot;../reflect/modifier&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;package&lt;/code&gt; 액세스 (기본 액세스)를 나타내는 단일 비트 마스크 입니다. 값은 &lt;code&gt;0x08&lt;/code&gt; 이며 특정 &lt;a href=&quot;../reflect/modifier&quot;&gt;수정 자 비트&lt;/a&gt; 와 의미가 일치하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1d60ef699bf7531de21f69b855312c3df75a11cb" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;private&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;private&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 입니다.</target>
        </trans-unit>
        <trans-unit id="c730e8d4a73b677a27e5243b54ddcc6d565955f0" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;private&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x02&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;private&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PRIVATE&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;private&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 입니다. 값 &lt;code&gt;0x02&lt;/code&gt; 는 &lt;code&gt;private&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PRIVATE&quot;&gt;수정 자 비트&lt;/a&gt; 값과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="aab2c145c9e99fcde58657d8b8993565ce707011" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;private&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x02&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;private&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PRIVATE&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 영향을 줄 수있는 &lt;code&gt;private&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 . 값 &lt;code&gt;0x02&lt;/code&gt; 는 &lt;code&gt;private&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PRIVATE&quot;&gt;수정 자 비트&lt;/a&gt; 의 값과 같습니다. .</target>
        </trans-unit>
        <trans-unit id="6d5604f21cc5b5fae8d0c14aab06963a959fcaf6" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;protected&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;protected&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 입니다.</target>
        </trans-unit>
        <trans-unit id="4f70c8fe1c028c0a88efaad9c798c715b34ddf85" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;protected&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x04&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;protected&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PROTECTED&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;protected&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 입니다. 값 &lt;code&gt;0x04&lt;/code&gt; 는 &lt;code&gt;protected&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PROTECTED&quot;&gt;수정 자 비트&lt;/a&gt; 값과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="75861a8addccd707397aa313351031da0f3eeb06" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;protected&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x04&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;protected&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PROTECTED&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 영향을 줄 수있는 &lt;code&gt;protected&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 . 값 &lt;code&gt;0x04&lt;/code&gt; 상기의 값과 동일하게 발생하는 &lt;code&gt;protected&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PROTECTED&quot;&gt;변경자 비트&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="898bcf9e6c18648d81924d6a9ae3a6e8c68b1c26" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;public&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;public&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 입니다.</target>
        </trans-unit>
        <trans-unit id="90e88dda8f59625b9c9e079ffc52a9bab4d3f2d7" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;public&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x01&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;public&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PUBLIC&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;public&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 입니다. 값 &lt;code&gt;0x01&lt;/code&gt; 은 &lt;code&gt;public&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PUBLIC&quot;&gt;modifier bit&lt;/a&gt; 값과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="33a784f92c517ec5da50f4e97141428b4852cfe0" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;public&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x01&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;public&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PUBLIC&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;public&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 . 값 &lt;code&gt;0x01&lt;/code&gt; 은 &lt;code&gt;public&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PUBLIC&quot;&gt;수정 자 비트&lt;/a&gt; 의 값과 같습니다. .</target>
        </trans-unit>
        <trans-unit id="23196278b94fe5dcd92d5653a9fea883c5c2deca" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;unconditional&lt;/code&gt; access which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;unconditional&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 입니다.</target>
        </trans-unit>
        <trans-unit id="a5890ecf3f460a211994e215884e29d1609f8197" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;unconditional&lt;/code&gt; access which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value is &lt;code&gt;0x20&lt;/code&gt;, which does not correspond meaningfully to any particular &lt;a href=&quot;../reflect/modifier&quot;&gt;modifier bit&lt;/a&gt;. A &lt;code&gt;Lookup&lt;/code&gt; with this lookup mode assumes &lt;a href=&quot;../module#canRead(java.lang.Module)&quot;&gt;readability&lt;/a&gt;. In conjunction with the &lt;code&gt;PUBLIC&lt;/code&gt; modifier bit, a &lt;code&gt;Lookup&lt;/code&gt; with this lookup mode can access all public members of public types of all modules where the type is in a package that is &lt;a href=&quot;../module#isExported(java.lang.String)&quot;&gt;&lt;code&gt;exported unconditionally&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;unconditional&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 입니다. 값은 &lt;code&gt;0x20&lt;/code&gt; 으로 , 특정 &lt;a href=&quot;../reflect/modifier&quot;&gt;수정 자 비트에&lt;/a&gt; 의미있게 대응하지 않습니다 . &lt;code&gt;Lookup&lt;/code&gt; 이 조회 모드는 가정 &lt;a href=&quot;../module#canRead(java.lang.Module)&quot;&gt;가독성을&lt;/a&gt; . 와 결합 &lt;code&gt;PUBLIC&lt;/code&gt; 의 변경자 비트하는 &lt;code&gt;Lookup&lt;/code&gt; 룩업 모드의 유형이 패키지에 모든 모듈 공개 종류의 모든 공개 멤버 액세스 할 &lt;a href=&quot;../module#isExported(java.lang.String)&quot;&gt; &lt;code&gt;exported unconditionally&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="df372d9b0b2b5d791daede695ab02994d0519b59" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;unconditional&lt;/code&gt; access which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value is &lt;code&gt;0x20&lt;/code&gt;, which does not correspond meaningfully to any particular &lt;a href=&quot;../reflect/modifier&quot;&gt;modifier bit&lt;/a&gt;. A &lt;code&gt;Lookup&lt;/code&gt; with this lookup mode assumes &lt;a href=&quot;../module#canRead(java.lang.Module)&quot;&gt;readability&lt;/a&gt;. This lookup mode can access all public members of public types of all modules when the type is in a package that is &lt;a href=&quot;../module#isExported(java.lang.String)&quot;&gt;&lt;code&gt;exported unconditionally&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt; 의 결과에 기여할 수있는 &lt;code&gt;unconditional&lt;/code&gt; 액세스를 나타내는 단일 비트 마스크 입니다. 값은 &lt;code&gt;0x20&lt;/code&gt; 이며 특정 &lt;a href=&quot;../reflect/modifier&quot;&gt;수정 자 비트에&lt;/a&gt; 의미있게 대응하지 않습니다 . &lt;code&gt;Lookup&lt;/code&gt; 이 조회 모드는 가정 &lt;a href=&quot;../module#canRead(java.lang.Module)&quot;&gt;가독성을&lt;/a&gt; . 이 조회 모드는 유형이 &lt;a href=&quot;../module#isExported(java.lang.String)&quot;&gt; &lt;code&gt;exported unconditionally&lt;/code&gt; &lt;/a&gt; 패키지에있을 때 모든 모듈의 공용 유형의 모든 공용 멤버에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ed214545845c4b26dd59fcb0bad818698aade4f2" translate="yes" xml:space="preserve">
          <source>A single-element array, initially containing &lt;code&gt;ImageInputStream.class&lt;/code&gt;, to be returned from &lt;code&gt;getInputTypes&lt;/code&gt;.</source>
          <target state="translated">초기에 포함하는 단일 요소 배열 &lt;code&gt;ImageInputStream.class&lt;/code&gt; 로부터 반환되는 &lt;code&gt;getInputTypes&lt;/code&gt; 로 .</target>
        </trans-unit>
        <trans-unit id="f0e479a9e928d59e951c78a85ad7039004c2e049" translate="yes" xml:space="preserve">
          <source>A single-element array, initially containing &lt;code&gt;ImageOutputStream.class&lt;/code&gt;, to be returned from &lt;code&gt;getOutputTypes&lt;/code&gt;.</source>
          <target state="translated">초기에 포함하는 단일 요소의 배열, &lt;code&gt;ImageOutputStream.class&lt;/code&gt; 는 로부터 반환되는 &lt;code&gt;getOutputTypes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c625757b04b47e99f17d9514d26323d3a1641c0b" translate="yes" xml:space="preserve">
          <source>A single-method interface is an interface which declares a uniquely named method. When determining the uniquely named method of a single-method interface, the public &lt;code&gt;Object&lt;/code&gt; methods (&lt;code&gt;toString&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt;) are disregarded as are any default (non-abstract) methods. For example, &lt;a href=&quot;../../util/comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; is a single-method interface, even though it re-declares the &lt;code&gt;Object.equals&lt;/code&gt; method and also declares default methods, such as &lt;code&gt;Comparator.reverse&lt;/code&gt;.</source>
          <target state="translated">단일 메서드 인터페이스는 고유하게 명명 된 메서드를 선언하는 인터페이스입니다. 단일 메서드 인터페이스의 고유하게 명명 된 메서드를 결정할 때 공용 &lt;code&gt;Object&lt;/code&gt; 메서드 ( &lt;code&gt;toString&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; , &lt;code&gt;hashCode&lt;/code&gt; )는 기본 (비추 상) 메서드와 마찬가지로 무시됩니다. 예를 들어 &lt;a href=&quot;../../util/comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;Object.equals&lt;/code&gt; 메서드를 다시 선언하고 &lt;code&gt;Comparator.reverse&lt;/code&gt; 와 같은 기본 메서드도 선언 하더라도 단일 메서드 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="aefe0d2395a63e490922c441c227d14b1061d43a" translate="yes" xml:space="preserve">
          <source>A single-method interface is an interface which declares a uniquely named method. When determining the uniquely named method of a single-method interface, the public &lt;code&gt;Object&lt;/code&gt; methods (&lt;code&gt;toString&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt;) are disregarded. For example, &lt;a href=&quot;../../util/comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; is a single-method interface, even though it re-declares the &lt;code&gt;Object.equals&lt;/code&gt; method.</source>
          <target state="translated">단일 메소드 인터페이스는 고유 한 이름의 메소드를 선언하는 인터페이스입니다. 단일 메소드 인터페이스의 고유 한 이름 지정된 메소드를 판별 할 때 공용 &lt;code&gt;Object&lt;/code&gt; 메소드 ( &lt;code&gt;toString&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; , &lt;code&gt;hashCode&lt;/code&gt; )는 무시됩니다. 예를 들어 &lt;a href=&quot;../../util/comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;Object.equals&lt;/code&gt; 메서드를 다시 선언하더라도 단일 메서드 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="f9756371d6371d1875d5c52f3bf36b1d5637b9b5" translate="yes" xml:space="preserve">
          <source>A size .</source>
          <target state="translated">크기입니다.</target>
        </trans-unit>
        <trans-unit id="39edc0c4306908356478bc36b02ee9a168a76abf" translate="yes" xml:space="preserve">
          <source>A size.</source>
          <target state="translated">크기.</target>
        </trans-unit>
        <trans-unit id="f4e200d70880492b9d55231ae7bcd427acc35445" translate="yes" xml:space="preserve">
          <source>A skeletal handler that consumes notifications and continues.</source>
          <target state="translated">알림을 소비하고 계속되는 스켈 레탈 핸들러.</target>
        </trans-unit>
        <trans-unit id="34eb976ae54cd909a7fcad83adeb73ef97f212b5" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for source version &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 주석 값에 대한 골격 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="ad1c3b389a92427821da01aef166f1deac49d539" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 주석 값에 대한 골격 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="a0c890be9cf7f582d0d14bcf76660cf4b59022fd" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 주석 값에 대한 골격 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="5e4099f3970266bb2672ded3b9721ca4be35f299" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 어노테이션 값의 골격 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="fe7dbc5fcfbb5518a6b2081de359d0acd5e86643" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작의 주석 값에 대한 골격 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="a2017f2e2ac05aab0d403430f762896858b4c682" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 소스 버전에 적합한 기본 동작을 가진 주석 값에 대한 골격 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="2bcae0dd4f1fd4d3ce538903968b298c21aea5c5" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 프로그램 요소의 골격 방문자입니다 .</target>
        </trans-unit>
        <trans-unit id="253b0042b2606f01d3c9e27db336b705c72fa68a" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 버전 &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; ~ &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt; &lt;code&gt;RELEASE_14&lt;/code&gt; 에&lt;/a&gt; 적합한 기본 동작이있는 프로그램 요소의 골격 방문자입니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
