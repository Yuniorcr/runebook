<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="9c7be5f46b9993beedafe18d1daa7444f7e43eb1" translate="yes" xml:space="preserve">
          <source>An estimate of the total capacity of the buffers in this pool in bytes</source>
          <target state="translated">이 풀의 버퍼 총 용량 추정치 (바이트)</target>
        </trans-unit>
        <trans-unit id="dcee934079c93a6663a7d12ea517f10308a431a9" translate="yes" xml:space="preserve">
          <source>An etched border UI resource.</source>
          <target state="translated">에칭 된 테두리 UI 리소스입니다.</target>
        </trans-unit>
        <trans-unit id="a7cd1c6c9191e374812a4e569c5f204b15898e6d" translate="yes" xml:space="preserve">
          <source>An even-odd winding rule for determining the interior of a path.</source>
          <target state="translated">경로의 내부를 결정하기위한 짝수 홀수 굴곡 규칙.</target>
        </trans-unit>
        <trans-unit id="6c81d97c6dccc30340a15355e34ff8e97b7403ed" translate="yes" xml:space="preserve">
          <source>An event emitted by a &lt;code&gt;Preferences&lt;/code&gt; node to indicate that a child of that node has been added or removed.</source>
          <target state="translated">해당 노드의 하위가 추가 또는 제거되었음을 표시하기 위해 &lt;code&gt;Preferences&lt;/code&gt; 노드가 생성 한 이벤트 .</target>
        </trans-unit>
        <trans-unit id="06c96077886494750aabd7c2320ccfb76b17746e" translate="yes" xml:space="preserve">
          <source>An event emitted by a &lt;code&gt;Preferences&lt;/code&gt; node to indicate that a preference has been added, removed or has had its value changed.</source>
          <target state="translated">환경 설정이 추가, 제거 또는 값이 변경되었음을 표시하기 위해 &lt;code&gt;Preferences&lt;/code&gt; 노드가 생성 한 이벤트 .</target>
        </trans-unit>
        <trans-unit id="04d558491dd736a8c703c8d4137060a56c89dc82" translate="yes" xml:space="preserve">
          <source>An event indicating that an operation which can be undone has occurred.</source>
          <target state="translated">취소 할 수있는 작업이 발생했음을 나타내는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="282e2ba6326540f5db6b1623230bf3fbe382bc8a" translate="yes" xml:space="preserve">
          <source>An event is classified by its &lt;a href=&quot;#kind()&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; and has a &lt;a href=&quot;#count()&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; to indicate the number of times that the event has been observed. This allows for efficient representation of repeated events. The &lt;a href=&quot;#context()&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; method returns any context associated with the event. In the case of a repeated event then the context is the same for all events.</source>
          <target state="translated">이벤트는에 의해 분류 &lt;a href=&quot;#kind()&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt; 와이 &lt;a href=&quot;#count()&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; 이벤트가 관찰 된 횟수를 표시 할 수 있습니다. 이를 통해 반복되는 이벤트를 효율적으로 표현할 수 있습니다. &lt;a href=&quot;#context()&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt; 방법은 이벤트와 관련된 컨텍스트를 반환합니다. 반복되는 이벤트의 경우 컨텍스트는 모든 이벤트에 대해 동일합니다.</target>
        </trans-unit>
        <trans-unit id="9f5e54c6bf6e5cb8c0aad4f8bf44cffe32722464" translate="yes" xml:space="preserve">
          <source>An event is classified by its &lt;a href=&quot;watchevent#kind--&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; and has a &lt;a href=&quot;watchevent#count--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; to indicate the number of times that the event has been observed. This allows for efficient representation of repeated events. The &lt;a href=&quot;watchevent#context--&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; method returns any context associated with the event. In the case of a repeated event then the context is the same for all events.</source>
          <target state="translated">이벤트는에 의해 분류 &lt;a href=&quot;watchevent#kind--&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt; 와이 &lt;a href=&quot;watchevent#count--&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; 이벤트가 관찰 된 횟수를 표시 할 수 있습니다. 이를 통해 반복되는 이벤트를 효율적으로 표현할 수 있습니다. &lt;a href=&quot;watchevent#context--&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt; 방법은 이벤트와 관련된 컨텍스트를 반환합니다. 반복되는 이벤트의 경우 컨텍스트는 모든 이벤트에 대해 동일합니다.</target>
        </trans-unit>
        <trans-unit id="e419c0a367c0952c77049429cb02258e2eeee887" translate="yes" xml:space="preserve">
          <source>An event kind, for the purposes of identification.</source>
          <target state="translated">식별을위한 이벤트 종류.</target>
        </trans-unit>
        <trans-unit id="15f065001a5c026588b520e089120d59c698781d" translate="yes" xml:space="preserve">
          <source>An event modifier that qualifies how a &lt;a href=&quot;watchable&quot;&gt;&lt;code&gt;Watchable&lt;/code&gt;&lt;/a&gt; is registered with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 자격은 어떻게하는 것이 이벤트 수정 &lt;a href=&quot;watchable&quot;&gt; &lt;code&gt;Watchable&lt;/code&gt; &lt;/a&gt; 에 등록되어 &lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d3c2026b10e715c2c07e83b29999c1d04110c221" translate="yes" xml:space="preserve">
          <source>An event or a repeated event for an object that is registered with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; 에&lt;/a&gt; 등록 된 객체에 대한 이벤트 또는 반복 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="eaa866bbbceec3694667362fb059460ba9e2a202" translate="yes" xml:space="preserve">
          <source>An event reported to a child component that originated from an ancestor in the component hierarchy.</source>
          <target state="translated">구성 요소 계층 구조의 조상에서 시작된 하위 구성 요소에보고 된 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="d686f847c2b54ec5ed578041a97ae28c8f068475" translate="yes" xml:space="preserve">
          <source>An event source may send a null object as the name to indicate that an arbitrary set of if its properties have changed. In this case the old and new values should also be null.</source>
          <target state="translated">이벤트 소스는 속성으로 임의의 세트가 변경되었음을 나타내는 널 오브젝트를 이름으로 보낼 수 있습니다. 이 경우 이전 값과 새 값도 null이어야합니다.</target>
        </trans-unit>
        <trans-unit id="26aa59554694adf8e7ed286d8ac1c037112ef997" translate="yes" xml:space="preserve">
          <source>An event that characterizes a change in selection.</source>
          <target state="translated">선택 변경을 특징으로하는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="896712288c4a0b9a20bdeeeb5e2bf21d577404e3" translate="yes" xml:space="preserve">
          <source>An event that characterizes a change in selection. The change is limited to a a single inclusive interval. The selection of at least one index within the range will have changed. A decent &lt;code&gt;ListSelectionModel&lt;/code&gt; implementation will keep the range as small as possible. &lt;code&gt;ListSelectionListeners&lt;/code&gt; will generally query the source of the event for the new selected status of each potentially changed row.</source>
          <target state="translated">선택 변경을 특징으로하는 이벤트입니다. 변경은 단일 포함 간격으로 제한됩니다. 범위 내에서 하나 이상의 인덱스 선택이 변경됩니다. 적절한 &lt;code&gt;ListSelectionModel&lt;/code&gt; 구현은 범위를 가능한 한 작게 유지합니다. &lt;code&gt;ListSelectionListeners&lt;/code&gt; 는 일반적으로 잠재적으로 변경된 각 행의 새로 선택된 상태에 대해 이벤트 소스를 쿼리합니다.</target>
        </trans-unit>
        <trans-unit id="0248e0950e47fd55b01c78efcb8541d03fdf48e8" translate="yes" xml:space="preserve">
          <source>An event that characterizes a change in the current selection.</source>
          <target state="translated">현재 선택의 변경을 특징으로하는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="e1fa060ce495a1babb59f2ae7a5a0372e80523e1" translate="yes" xml:space="preserve">
          <source>An event that characterizes a change in the current selection. The change is based on any number of paths. TreeSelectionListeners will generally query the source of the event for the new selected status of each potentially changed row.</source>
          <target state="translated">현재 선택의 변경을 특징으로하는 이벤트입니다. 변경은 경로 수를 기반으로합니다. TreeSelectionListeners는 일반적으로 잠재적으로 변경된 각 행의 새로 선택된 상태에 대해 이벤트 소스를 쿼리합니다.</target>
        </trans-unit>
        <trans-unit id="c5b61cabf66d75cb1bbaeac2e194f66f194da3d7" translate="yes" xml:space="preserve">
          <source>An event used to identify a single path in a tree.</source>
          <target state="translated">트리에서 단일 경로를 식별하는 데 사용되는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="e7393bb3557d2d0e2a11d72b0ec0cdcf48fa375f" translate="yes" xml:space="preserve">
          <source>An event used to identify a single path in a tree. The source returned by &lt;b&gt;getSource&lt;/b&gt; will be an instance of JTree.</source>
          <target state="translated">트리에서 단일 경로를 식별하는 데 사용되는 이벤트입니다. &lt;b&gt;getSource&lt;/b&gt; 가 반환하는 소스 는 JTree의 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="e10dbfff72f6f17201771dc21ad8044981bd65fd" translate="yes" xml:space="preserve">
          <source>An event which executes the &lt;code&gt;run()&lt;/code&gt; method on a &lt;code&gt;Runnable
 &lt;/code&gt; when dispatched by the AWT event dispatcher thread.</source>
          <target state="translated">AWT 이벤트 디스패처 스레드에 의해 전달 될 때 &lt;code&gt;Runnable &lt;/code&gt; 에서 &lt;code&gt;run()&lt;/code&gt; 메서드 를 실행하는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="50605879fa1adc5a2e983156b4f55e7260546062" translate="yes" xml:space="preserve">
          <source>An event which executes the &lt;code&gt;run()&lt;/code&gt; method on a &lt;code&gt;Runnable
 &lt;/code&gt; when dispatched by the AWT event dispatcher thread. This class can be used as a reference implementation of &lt;code&gt;ActiveEvent&lt;/code&gt; rather than declaring a new class and defining &lt;code&gt;dispatch()&lt;/code&gt;.</source>
          <target state="translated">AWT 이벤트 디스패처 스레드에 의해 전달 될 때 &lt;code&gt;Runnable &lt;/code&gt; 에서 &lt;code&gt;run()&lt;/code&gt; 메서드 를 실행하는 이벤트입니다 . 이 클래스는 새 클래스를 선언하고 &lt;code&gt;dispatch()&lt;/code&gt; 정의하는 대신 &lt;code&gt;ActiveEvent&lt;/code&gt; 의 참조 구현으로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="06f8f57a66f53efff7a9621c6e8b3ff1a48e68c9" translate="yes" xml:space="preserve">
          <source>An event which indicates a change to the &lt;code&gt;Component&lt;/code&gt; hierarchy to which &lt;code&gt;Component&lt;/code&gt; belongs.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; 가 속한 &lt;code&gt;Component&lt;/code&gt; 계층 의 변경을 나타내는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="d1bee5f36c1751ee7475abdc51fc82965a2048ae" translate="yes" xml:space="preserve">
          <source>An event which indicates that a keystroke occurred in a component.</source>
          <target state="translated">구성 요소에서 키 입력이 발생했음을 나타내는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="a896869c7ea1c755a16f34ba3ea21c511b4471ab" translate="yes" xml:space="preserve">
          <source>An event which indicates that a mouse action occurred in a component.</source>
          <target state="translated">컴포넌트에서 마우스 동작이 발생했음을 나타내는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="c7f62ef3a2c23c52ea64bb9a248c4f0487b93a84" translate="yes" xml:space="preserve">
          <source>An event which indicates that a mouse action occurred in a component. A mouse action is considered to occur in a particular component if and only if the mouse cursor is over the unobscured part of the component's bounds when the action happens. For lightweight components, such as Swing's components, mouse events are only dispatched to the component if the mouse event type has been enabled on the component. A mouse event type is enabled by adding the appropriate mouse-based &lt;code&gt;EventListener&lt;/code&gt; to the component (&lt;a href=&quot;mouselistener&quot;&gt;&lt;code&gt;MouseListener&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mousemotionlistener&quot;&gt;&lt;code&gt;MouseMotionListener&lt;/code&gt;&lt;/a&gt;), or by invoking &lt;a href=&quot;../component#enableEvents(long)&quot;&gt;&lt;code&gt;Component.enableEvents(long)&lt;/code&gt;&lt;/a&gt; with the appropriate mask parameter (&lt;code&gt;AWTEvent.MOUSE_EVENT_MASK&lt;/code&gt; or &lt;code&gt;AWTEvent.MOUSE_MOTION_EVENT_MASK&lt;/code&gt;). If the mouse event type has not been enabled on the component, the corresponding mouse events are dispatched to the first ancestor that has enabled the mouse event type.</source>
          <target state="translated">컴포넌트에서 마우스 동작이 발생했음을 나타내는 이벤트입니다. 마우스 동작은 동작이 발생할 때 마우스 커서가 컴포넌트 경계의 가려지지 않은 부분 위에있는 경우에만 특정 컴포넌트에서 발생하는 것으로 간주됩니다. Swing의 구성 요소와 같은 경량 구성 요소의 경우 마우스 이벤트 유형이 구성 요소에서 활성화 된 경우에만 마우스 이벤트가 구성 요소로 전달됩니다. 마우스 이벤트 유형은 적절한 마우스 기반 &lt;code&gt;EventListener&lt;/code&gt; 를 컴포넌트 ( &lt;a href=&quot;mouselistener&quot;&gt; &lt;code&gt;MouseListener&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;mousemotionlistener&quot;&gt; &lt;code&gt;MouseMotionListener&lt;/code&gt; &lt;/a&gt; )에 추가하거나 적절한 마스크 매개 변수 ( &lt;code&gt;AWTEvent.MOUSE_EVENT_MASK&lt;/code&gt; 또는 &lt;code&gt;AWTEvent.MOUSE_MOTION_EVENT_MASK&lt;/code&gt; &lt;a href=&quot;../component#enableEvents(long)&quot;&gt; &lt;code&gt;Component.enableEvents(long)&lt;/code&gt; &lt;/a&gt; 와 함께 Component.enableEvents (long) 를 호출 하여 활성화됩니다.). 구성 요소에서 마우스 이벤트 유형이 활성화되지 않은 경우 해당 마우스 이벤트는 마우스 이벤트 유형을 활성화 한 첫 번째 조상에게 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="b237f4be590c9535f6a8931556284368d5ea0a0b" translate="yes" xml:space="preserve">
          <source>An event which indicates that the mouse wheel was rotated in a component.</source>
          <target state="translated">컴포넌트에서 마우스 휠이 회전했음을 나타내는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="1c58667598e54fdb2f24f8569a3872e9e89ca801" translate="yes" xml:space="preserve">
          <source>An example is grammatical information attached to a sentence: For the previous sentence, you can say that &quot;an example&quot; is the subject, but you cannot say the same about &quot;an&quot;, &quot;example&quot;, or &quot;exam&quot;. When the text is changed, the grammatical information typically becomes invalid. Another example is Japanese reading information (yomi).</source>
          <target state="translated">예는 문장에 첨부 된 문법 정보입니다. 이전 문장의 경우 &quot;예&quot;가 주제라고 말할 수 있지만 &quot;an&quot;, &quot;example&quot;또는 &quot;exam&quot;에 대해서는 동일하게 말할 수 없습니다. 텍스트가 변경되면 문법 정보는 일반적으로 유효하지 않습니다. 또 다른 예는 일본어 읽기 정보 (yomi)입니다.</target>
        </trans-unit>
        <trans-unit id="8314e4f5c5e80547f95424d5dfb5afb0daf701ff" translate="yes" xml:space="preserve">
          <source>An example of a binary reference address is an BER X.500 presentation address. Another example of a binary reference address is a serialized form of a service's object handle.</source>
          <target state="translated">이진 참조 주소의 예는 BER X.500 프레젠테이션 주소입니다. 이진 참조 주소의 또 다른 예는 직렬화 된 형식의 서비스 개체 핸들입니다.</target>
        </trans-unit>
        <trans-unit id="c422262ad662671c77308969717b4f574d8e6288" translate="yes" xml:space="preserve">
          <source>An example of a string reference address is a host name. Another example of a string reference address is a URL.</source>
          <target state="translated">문자열 참조 주소의 예는 호스트 이름입니다. 문자열 참조 주소의 다른 예는 URL입니다.</target>
        </trans-unit>
        <trans-unit id="eac2cd99333f0b1bbe1830270bc0354a7c3a971c" translate="yes" xml:space="preserve">
          <source>An example of setting this property is to invoke Java with &lt;code&gt;-Djavax.accessibility.assistive_technologies=MyServiceProvider&lt;/code&gt;. In addition to MyServiceProvider other service providers can be specified using a comma separated list. Service providers are loaded after the AWT toolkit is created. All errors are handled via an AWTError exception.</source>
          <target state="translated">이 속성을 설정하는 예는 &lt;code&gt;-Djavax.accessibility.assistive_technologies=MyServiceProvider&lt;/code&gt; 를 사용하여 Java를 호출하는 것 입니다. MyServiceProvider 외에도 쉼표로 구분 된 목록을 사용하여 다른 서비스 공급자를 지정할 수 있습니다. 서비스 제공자는 AWT 툴킷이 작성된 후로드됩니다. 모든 오류는 AWTError 예외를 통해 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="bf6bc6d487fd537c1cdb763dfa71d56f909edc8d" translate="yes" xml:space="preserve">
          <source>An example of using a VolatileImage object follows:</source>
          <target state="translated">VolatileImage 객체를 사용하는 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="db5da4ac02ef7c65a5dc16ef28a9ba5d3add4e7d" translate="yes" xml:space="preserve">
          <source>An example of using this method on a legacy throwable type without other support for setting the cause is:</source>
          <target state="translated">원인 설정에 대한 다른 지원없이 레거시 Throwable 유형에서이 방법을 사용하는 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9135abf2557d130e528a795718b735e7528d8a4c" translate="yes" xml:space="preserve">
          <source>An excellent tutorial and overview of regular expressions is &lt;a href=&quot;http://www.oreilly.com/catalog/regex/&quot;&gt;&lt;i&gt;Mastering Regular Expressions&lt;/i&gt;, Jeffrey E. F. Friedl, O'Reilly and Associates, 1997.&lt;/a&gt;</source>
          <target state="translated">정규 표현식에 대한 훌륭한 튜토리얼과 개요는 &lt;a href=&quot;http://www.oreilly.com/catalog/regex/&quot;&gt;&lt;i&gt;Mastering Regular Expressions&lt;/i&gt; , Jeffrey EF Friedl, O'Reilly and Associates, 1997입니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e585cb095bdaba25a8339e18cc96d48bcd0f705" translate="yes" xml:space="preserve">
          <source>An exception can have both a cause and one or more suppressed exceptions:</source>
          <target state="translated">예외는 원인과 하나 이상의 억제 된 예외를 모두 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c76da232b28c630a45be3d12fbb935c81a92db4" translate="yes" xml:space="preserve">
          <source>An exception class used for signaling run-time failure of reading and writing operations.</source>
          <target state="translated">읽기 및 쓰기 작업의 런타임 실패를 알리는 데 사용되는 예외 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="55f4b8c4d30adf266f2f50abeef89fe2c653a3f3" translate="yes" xml:space="preserve">
          <source>An exception encountered while trying to add an element may result in only some of the elements having been successfully added when the associated exception is thrown.</source>
          <target state="translated">요소를 추가하는 동안 예외가 발생하면 연관된 예외가 throw 될 때 일부 요소 만 성공적으로 추가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36426bb10473750780024705d86e053d5bf31ab5" translate="yes" xml:space="preserve">
          <source>An exception indicating one of a variety of problems encountered when building a certification path with a &lt;code&gt;CertPathBuilder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CertPathBuilder&lt;/code&gt; 로 인증 경로를 구축 할 때 발생하는 다양한 문제 중 하나를 나타내는 예외 입니다.</target>
        </trans-unit>
        <trans-unit id="01bff7fd7d4a32814d6a5362737e0607d8446049" translate="yes" xml:space="preserve">
          <source>An exception indicating one of a variety of problems encountered when validating a certification path.</source>
          <target state="translated">인증 경로를 확인할 때 발생하는 다양한 문제 중 하나를 나타내는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="827b6a6c54d1f1c48aecd7390decd0af34678563" translate="yes" xml:space="preserve">
          <source>An exception indicating one of a variety of problems retrieving certificates and CRLs from a &lt;code&gt;CertStore&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CertStore&lt;/code&gt; 로부터 증명서와 CRL를 가져 오는 다양한 문제의 하나를 나타내는 예외 입니다.</target>
        </trans-unit>
        <trans-unit id="5fa7086714c8ef389fe52703a7ff049f7e46769c" translate="yes" xml:space="preserve">
          <source>An exception is thrown if there is an ambiguity, for example, if the object is of a class implementing more than one of these interfaces.</source>
          <target state="translated">예를 들어 객체가 이러한 인터페이스 중 두 개 이상을 구현하는 클래스 인 경우 모호한 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="539a0257d7fb54af59d0655a04e9605a2871fae6" translate="yes" xml:space="preserve">
          <source>An exception is thrown while collecting information about the events. That is, when the listener receives a &lt;code&gt;NamingExceptionEvent&lt;/code&gt;.</source>
          <target state="translated">이벤트에 대한 정보를 수집하는 중에 예외가 발생합니다. 수신기는 수신 한 경우 즉, &lt;code&gt;NamingExceptionEvent&lt;/code&gt; 가이 .</target>
        </trans-unit>
        <trans-unit id="a0d0592d1b01dc12413c57ea90c27fe3a483f573" translate="yes" xml:space="preserve">
          <source>An exception may have suppressed exceptions while also being caused by another exception. Whether or not an exception has a cause is semantically known at the time of its creation, unlike whether or not an exception will suppress other exceptions which is typically only determined after an exception is thrown.</source>
          <target state="translated">예외는 다른 예외로 인해 예외를 억제했을 수 있습니다. 예외가 원인을 갖는지 여부는 예외가 예외가 발생한 후에 만 ​​결정되는 다른 예외를 억제하는지 여부와 달리, 작성 당시 의미 적으로 알려져 있습니다.</target>
        </trans-unit>
        <trans-unit id="53beaa837ddc7ceb7ee67f542711dcb85c2b2b5a" translate="yes" xml:space="preserve">
          <source>An exception occurred during the introspection of an MBean.</source>
          <target state="translated">MBean의 내부 검사 중에 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="d875fe6048b3e5126d3cdd14afc5d8aa9a9088b5" translate="yes" xml:space="preserve">
          <source>An exception of type &lt;code&gt;NumberFormatException&lt;/code&gt; is thrown if any of the following situations occurs:</source>
          <target state="translated">다음 상황 중 하나가 발생하면 &lt;code&gt;NumberFormatException&lt;/code&gt; 유형의 예외 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="26e5ef4037e4c60c7276617440fb680055be6bd6" translate="yes" xml:space="preserve">
          <source>An exception that indicates an X.509 certificate is revoked.</source>
          <target state="translated">X.509 인증서를 나타내는 예외가 취소되었습니다.</target>
        </trans-unit>
        <trans-unit id="eb2cb5367acdec595b1cf7be61b81bd4e9f62194" translate="yes" xml:space="preserve">
          <source>An exception that indicates an X.509 certificate is revoked. A &lt;code&gt;CertificateRevokedException&lt;/code&gt; contains additional information about the revoked certificate, such as the date on which the certificate was revoked and the reason it was revoked.</source>
          <target state="translated">X.509 인증서를 나타내는 예외가 취소되었습니다. &lt;code&gt;CertificateRevokedException&lt;/code&gt; 이 같은 인증서가 취소 된 날짜 및이 취소 된 이유와 해지 된 인증서에 대한 자세한 정보가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1157e088807d425904f8b0a2ffdf99ca95857e4a" translate="yes" xml:space="preserve">
          <source>An exception that indicates the requested look &amp;amp; feel management classes are not present on the user's system.</source>
          <target state="translated">요청 된 룩앤필 관리 클래스가 사용자 시스템에 없음을 나타내는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="1112cce34009ed8112d963c1429cbdb8eef2167c" translate="yes" xml:space="preserve">
          <source>An exception that provides information on a database access error or other errors.</source>
          <target state="translated">데이터베이스 액세스 오류 또는 기타 오류에 대한 정보를 제공하는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="54e79e952314986864c1ea29e3466a3c5255e1d9" translate="yes" xml:space="preserve">
          <source>An exception that provides information on database access warnings.</source>
          <target state="translated">데이터베이스 액세스 경고에 대한 정보를 제공하는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="7df787dce29b90bf8caed974b6ffa760a840a94b" translate="yes" xml:space="preserve">
          <source>An exception that provides information on database access warnings. Warnings are silently chained to the object whose method caused it to be reported.</source>
          <target state="translated">데이터베이스 액세스 경고에 대한 정보를 제공하는 예외입니다. 경고는 해당 메서드로 인해보고 된 개체에 자동으로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="27c84afce513eedfc3d41795104aa3b376531267" translate="yes" xml:space="preserve">
          <source>An exception thrown as a &lt;code&gt;DataTruncation&lt;/code&gt; exception (on writes) or reported as a &lt;code&gt;DataTruncation&lt;/code&gt; warning (on reads) when a data values is unexpectedly truncated for reasons other than its having exceeded &lt;code&gt;MaxFieldSize&lt;/code&gt;.</source>
          <target state="translated">데이터 값이 &lt;code&gt;MaxFieldSize&lt;/code&gt; 초과 이외의 이유로 예기치 않게 잘린 경우 &lt;code&gt;DataTruncation&lt;/code&gt; 예외 (쓰기시) 로 throw 되거나 &lt;code&gt;DataTruncation&lt;/code&gt; 경고 (읽기시) 로보고 되는 예외 입니다.</target>
        </trans-unit>
        <trans-unit id="2f160d97246c78d81ce29bd33cee54f7227c87cc" translate="yes" xml:space="preserve">
          <source>An exception thrown when an error occurs during parsing.</source>
          <target state="translated">구문 분석 중 오류가 발생하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="568073553e60a50c6f3c7444d5cb67c4ef8ab555" translate="yes" xml:space="preserve">
          <source>An exception will be thrown if the application attempts to write more data than the indicated content-length, or if the application closes the OutputStream before writing the indicated amount.</source>
          <target state="translated">애플리케이션이 표시된 콘텐츠 길이보다 많은 데이터를 쓰려고 시도하거나 애플리케이션이 표시된 양을 쓰기 전에 OutputStream을 닫는 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cc5c3fd5dfd0748548f77b57c9e8da871d50cb82" translate="yes" xml:space="preserve">
          <source>An execution of the task throws an exception. In this case calling &lt;a href=&quot;future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; on the returned future will throw &lt;a href=&quot;executionexception&quot;&gt;&lt;code&gt;ExecutionException&lt;/code&gt;&lt;/a&gt;, holding the exception as its cause.</source>
          <target state="translated">작업을 실행하면 예외가 발생합니다. 이 경우 반환 된 future에 대해 &lt;a href=&quot;future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 을 호출 하면 &lt;a href=&quot;executionexception&quot;&gt; &lt;code&gt;ExecutionException&lt;/code&gt; &lt;/a&gt; 이 발생하여 예외가 원인으로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="80feca58e1cfcb4b9f1f7db5eedba7837a9849b1" translate="yes" xml:space="preserve">
          <source>An expected per-message token was not received.</source>
          <target state="translated">예상되는 메시지 당 토큰이 수신되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="42304778ae5dde1bb4a4b78fe1d47f543dc93e08" translate="yes" xml:space="preserve">
          <source>An expected per-message token was not received. This is a fatal error code that may occur during context establishment. It is not used to indicate supplementary status values. The MessageProp object is used for that purpose.</source>
          <target state="translated">예상되는 메시지 당 토큰이 수신되지 않았습니다. 이는 컨텍스트 설정 중에 발생할 수있는 치명적인 오류 코드입니다. 보충 상태 값을 나타내는 데 사용되지 않습니다. MessageProp 개체는 이러한 목적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="93a26116f3df8d3f260ee17d5c240a1a6577cc24" translate="yes" xml:space="preserve">
          <source>An explicit close always closes the device, even if it also has been opened implicitly. A subsequent implicit close has no further effect.</source>
          <target state="translated">명시 적 닫기는 장치가 암시 적으로 열린 경우에도 항상 장치를 닫습니다. 후속 암시 적 닫기는 더 이상 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f5d17e70e49152ff51418006e025110f3fe751bd" translate="yes" xml:space="preserve">
          <source>An exported package of a module.</source>
          <target state="translated">모듈의 내 보낸 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="e3986466cb3d0bca4cf9d2636b3186e85275a4aa" translate="yes" xml:space="preserve">
          <source>An expression whose value is &lt;code&gt;oldInstance&lt;/code&gt;.</source>
          <target state="translated">값이 &lt;code&gt;oldInstance&lt;/code&gt; 인 표현식입니다 .</target>
        </trans-unit>
        <trans-unit id="4fcf498738c23d34965ea0019639e6cd7f8d0099" translate="yes" xml:space="preserve">
          <source>An extended version of &lt;code&gt;java.applet.Applet&lt;/code&gt; that adds support for the JFC/Swing component architecture. You can find task-oriented documentation about using &lt;code&gt;JApplet&lt;/code&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;, in the section &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/applet.html&quot;&gt;How to Make Applets&lt;/a&gt;.</source>
          <target state="translated">JFC / Swing 컴포넌트 아키텍처에 대한 지원을 추가하는 &lt;code&gt;java.applet.Applet&lt;/code&gt; 의 확장 버전입니다 . 당신은 사용에 관한 태스크 지향의 문서는 찾을 수 &lt;code&gt;JApplet&lt;/code&gt; 에을 의 &lt;em&gt;자바 튜토리얼&lt;/em&gt; 섹션에서, &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/applet.html&quot;&gt;애플릿을 만드는 방법&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f02bb9a7cf551ac06197e67ffd00d66609d15d77" translate="yes" xml:space="preserve">
          <source>An extended version of &lt;code&gt;java.awt.Frame&lt;/code&gt; that adds support for the JFC/Swing component architecture.</source>
          <target state="translated">JFC / Swing 구성 요소 아키텍처에 대한 지원을 추가하는 &lt;code&gt;java.awt.Frame&lt;/code&gt; 의 확장 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="9be0e0b21a1097c655cb607197cdb52005e1311a" translate="yes" xml:space="preserve">
          <source>An extended version of &lt;code&gt;java.awt.Frame&lt;/code&gt; that adds support for the JFC/Swing component architecture. You can find task-oriented documentation about using &lt;code&gt;JFrame&lt;/code&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;, in the section &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/frame.html&quot;&gt;How to Make Frames&lt;/a&gt;.</source>
          <target state="translated">JFC / Swing 구성 요소 아키텍처에 대한 지원을 추가하는 &lt;code&gt;java.awt.Frame&lt;/code&gt; 의 확장 버전입니다 . 당신은 사용에 관한 태스크 지향의 문서는 찾을 수 &lt;code&gt;JFrame&lt;/code&gt; 의를 에 &lt;em&gt;자바 튜토리얼&lt;/em&gt; 섹션에서, &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/frame.html&quot;&gt;프레임을 만드는 방법&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c84356e231444d9c5b994cb84e59c5e343d748b3" translate="yes" xml:space="preserve">
          <source>An extending class need only implement &lt;a href=&quot;spliterator#tryAdvance(java.util.function.Consumer)&quot;&gt;&lt;code&gt;tryAdvance&lt;/code&gt;&lt;/a&gt;. The extending class should override &lt;a href=&quot;spliterator#forEachRemaining(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEachRemaining&lt;/code&gt;&lt;/a&gt; if it can provide a more performant implementation.</source>
          <target state="translated">확장 클래스는 &lt;a href=&quot;spliterator#tryAdvance(java.util.function.Consumer)&quot;&gt; &lt;code&gt;tryAdvance&lt;/code&gt; &lt;/a&gt; 만 구현 하면 됩니다. 확장 클래스는 더 성능이 좋은 구현을 제공 할 수있는 경우 &lt;a href=&quot;spliterator#forEachRemaining(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEachRemaining&lt;/code&gt; &lt;/a&gt; 을 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5eb6c2a45ba0c27df9207c6ea74c881a9c847b7d" translate="yes" xml:space="preserve">
          <source>An extending class need only implement &lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt;&lt;code&gt;tryAdvance&lt;/code&gt;&lt;/a&gt;. The extending class should override &lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/a&gt; if it can provide a more performant implementation.</source>
          <target state="translated">확장 클래스는 &lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt; &lt;code&gt;tryAdvance&lt;/code&gt; &lt;/a&gt; 만 구현 하면 됩니다. 보다 성능이 뛰어난 구현을 제공 할 수있는 경우 확장 클래스는 &lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt; &lt;code&gt;forEach&lt;/code&gt; &lt;/a&gt; 를 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4983932ee5f711dbc13c0df7b47fb26e4cabc60a" translate="yes" xml:space="preserve">
          <source>An extensible implementation of &lt;code&gt;ListUI&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ListUI&lt;/code&gt; 의 확장 가능한 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="7ddf4101e555acdf4dd7af427583c4802a01aff8" translate="yes" xml:space="preserve">
          <source>An extension of &lt;code&gt;SQLException&lt;/code&gt; that provides information about database warnings set on &lt;code&gt;RowSet&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 개체에 설정된 데이터베이스 경고에 대한 정보를 제공 하는 &lt;code&gt;SQLException&lt;/code&gt; 의 확장입니다 .</target>
        </trans-unit>
        <trans-unit id="69b0bd0c6b12b7c0779bb216e0873768ddad668c" translate="yes" xml:space="preserve">
          <source>An extension of &lt;code&gt;SQLException&lt;/code&gt; that provides information about database warnings set on &lt;code&gt;RowSet&lt;/code&gt; objects. Warnings are silently chained to the object whose method call caused it to be reported. This class complements the &lt;code&gt;SQLWarning&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 개체에 설정된 데이터베이스 경고에 대한 정보를 제공 하는 &lt;code&gt;SQLException&lt;/code&gt; 의 확장입니다 . 경고는 메서드 호출로 인해보고 된 개체에 자동으로 연결됩니다. 이 클래스는 &lt;code&gt;SQLWarning&lt;/code&gt; 클래스를 보완합니다 .</target>
        </trans-unit>
        <trans-unit id="9171732ddcc7644c3065146d75395b18ad8d6f3e" translate="yes" xml:space="preserve">
          <source>An external class calls the &lt;code&gt;push&lt;/code&gt; method explicitly.</source>
          <target state="translated">외부 클래스는 &lt;code&gt;push&lt;/code&gt; 메소드를 명시 적으로 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="993583be52f1a02a2dd2850ffd00c88502a808b0" translate="yes" xml:space="preserve">
          <source>An extra heavy weight.</source>
          <target state="translated">더 무거운 무게.</target>
        </trans-unit>
        <trans-unit id="033bf48169520099efc15604736ebca1567af09f" translate="yes" xml:space="preserve">
          <source>An hour is represented by an integer from 0 to 23. Thus, the hour from midnight to 1 a.m. is hour 0, and the hour from noon to 1 p.m. is hour 12.</source>
          <target state="translated">시간은 0에서 23까지의 정수로 표시됩니다. 따라서 자정에서 오전 1 시까 지의 시간은 0시이고 정오에서 오후 1 시까 지의 시간은 12시입니다.</target>
        </trans-unit>
        <trans-unit id="b3995eb5999fe6ba3246c0409d631780b82579df" translate="yes" xml:space="preserve">
          <source>An icon that is passed a &lt;code&gt;SynthContext&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SynthContext&lt;/code&gt; 를 전달받은 아이콘 .</target>
        </trans-unit>
        <trans-unit id="e228c1f08f4eb6a6a64065d6d174be947b133e8c" translate="yes" xml:space="preserve">
          <source>An icon that is passed a &lt;code&gt;SynthContext&lt;/code&gt;. Subclasses need only implement the variants that take a &lt;code&gt;SynthContext&lt;/code&gt;, but must be prepared for the &lt;code&gt;SynthContext&lt;/code&gt; to be null.</source>
          <target state="translated">&lt;code&gt;SynthContext&lt;/code&gt; 를 전달받은 아이콘 . 서브 클래스는 &lt;code&gt;SynthContext&lt;/code&gt; 를받는 변형 만 구현하면 되지만 &lt;code&gt;SynthContext&lt;/code&gt; 가 null이 되도록 준비해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8ba096353fa6bb84e2a97f84b937f1449dc7fe1f" translate="yes" xml:space="preserve">
          <source>An iconified internal frame in a &lt;code&gt;DESKTOP_PANE&lt;/code&gt;.</source>
          <target state="translated">An iconified internal frame in a &lt;code&gt;DESKTOP_PANE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e6fb89d83ee7150b4f2c48fb629fec0aefac2d8" translate="yes" xml:space="preserve">
          <source>An ideal &lt;code&gt;trySplit&lt;/code&gt; method efficiently (without traversal) divides its elements exactly in half, allowing balanced parallel computation. Many departures from this ideal remain highly effective; for example, only approximately splitting an approximately balanced tree, or for a tree in which leaf nodes may contain either one or two elements, failing to further split these nodes. However, large deviations in balance and/or overly inefficient &lt;code&gt;
 trySplit&lt;/code&gt; mechanics typically result in poor parallel performance.</source>
          <target state="translated">An ideal &lt;code&gt;trySplit&lt;/code&gt; method efficiently (without traversal) divides its elements exactly in half, allowing balanced parallel computation. Many departures from this ideal remain highly effective; for example, only approximately splitting an approximately balanced tree, or for a tree in which leaf nodes may contain either one or two elements, failing to further split these nodes. However, large deviations in balance and/or overly inefficient &lt;code&gt; trySplit&lt;/code&gt; mechanics typically result in poor parallel performance.</target>
        </trans-unit>
        <trans-unit id="b79a12129245be08c85e4cc35ed8664d573a28c7" translate="yes" xml:space="preserve">
          <source>An ideal &lt;code&gt;trySplit&lt;/code&gt; method efficiently (without traversal) divides its elements exactly in half, allowing balanced parallel computation. Many departures from this ideal remain highly effective; for example, only approximately splitting an approximately balanced tree, or for a tree in which leaf nodes may contain either one or two elements, failing to further split these nodes. However, large deviations in balance and/or overly inefficient &lt;code&gt;trySplit&lt;/code&gt; mechanics typically result in poor parallel performance.</source>
          <target state="translated">이상적인 &lt;code&gt;trySplit&lt;/code&gt; 방법은 트래버스없이 효율적으로 요소를 정확히 반으로 나누므로 균형 잡힌 병렬 계산이 가능합니다. 이 이상으로부터의 많은 이탈은 여전히 ​​효과적이다. 예를 들어, 대략적으로 균형 잡힌 나무 또는 잎 노드가 하나 또는 두 개의 요소를 포함 할 수있는 나무에 대해서만 대략 분할하는 경우 이러한 노드를 더 이상 분할하지 못합니다. 그러나 균형 및 / 또는 지나치게 비효율적 인 &lt;code&gt;trySplit&lt;/code&gt; 역학의 편차가 큰 경우 일반적으로 병렬 성능이 저하됩니다.</target>
        </trans-unit>
        <trans-unit id="41d0c98191c8e0cd3f8eae5d99c11cbb42071020" translate="yes" xml:space="preserve">
          <source>An identifier for a set of interfaces (typically belonging to different nodes). A packet sent to a multicast address is delivered to all interfaces identified by that address.</source>
          <target state="translated">인터페이스 집합에 대한 식별자입니다 (일반적으로 다른 노드에 속함). 멀티 캐스트 주소로 전송 된 패킷은 해당 주소로 식별 된 모든 인터페이스로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="4dcf1db7e714dcdb9b3413181423df3a906152b8" translate="yes" xml:space="preserve">
          <source>An identifier for a single interface. A packet sent to a unicast address is delivered to the interface identified by that address.</source>
          <target state="translated">단일 인터페이스의 식별자입니다. 유니 캐스트 주소로 전송 된 패킷은 해당 주소로 식별 된 인터페이스로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="c7b3ff5ff9fb693f688e56288aa4f3c2362b1456" translate="yes" xml:space="preserve">
          <source>An illegal character is</source>
          <target state="translated">불법 캐릭터는</target>
        </trans-unit>
        <trans-unit id="1e56c26e424d69f528048e3514f89769c7494760" translate="yes" xml:space="preserve">
          <source>An image encoded as part of a file or stream may be thought of extending out in multiple dimensions: the spatial dimensions of width and height, a number of bands, and a number of progressive decoding passes. This class allows a contiguous (hyper)rectangular subarea of the image in all of these dimensions to be selected for decoding. Additionally, the spatial dimensions may be subsampled discontinuously. Finally, color and format conversions may be specified by controlling the &lt;code&gt;ColorModel&lt;/code&gt; and &lt;code&gt;SampleModel&lt;/code&gt; of the destination image, either by providing a &lt;code&gt;BufferedImage&lt;/code&gt; or by using an &lt;code&gt;ImageTypeSpecifier&lt;/code&gt;.</source>
          <target state="translated">파일 또는 스트림의 일부로서 인코딩 된 이미지는 폭 및 높이의 공간 차원, 다수의 대역 및 다수의 점진적 디코딩 패스와 같은 다수의 차원으로 확장되는 것으로 생각 될 수있다. 이 클래스를 사용하면 이러한 모든 차원에서 이미지의 연속 된 (사각형) 사각형 하위 영역을 디코딩 할 수 있습니다. 또한, 공간 치수는 불 연속적으로 서브 샘플링 될 수있다. 마지막으로 &lt;code&gt;BufferedImage&lt;/code&gt; 를 제공 하거나 &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; 를 사용하여 대상 이미지 의 &lt;code&gt;ColorModel&lt;/code&gt; 및 &lt;code&gt;SampleModel&lt;/code&gt; 을 제어하여 색상 및 형식 변환을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a5fa1ed4a59ac72a93ee0120d48b28d44b817329" translate="yes" xml:space="preserve">
          <source>An image filter that &quot;disables&quot; an image by turning it into a grayscale image, and brightening the pixels in the image.</source>
          <target state="translated">An image filter that &quot;disables&quot; an image by turning it into a grayscale image, and brightening the pixels in the image.</target>
        </trans-unit>
        <trans-unit id="d4845e25210ee70553ececdd28685bb4b7b511f4" translate="yes" xml:space="preserve">
          <source>An image filter that &quot;disables&quot; an image by turning it into a grayscale image, and brightening the pixels in the image. Used by buttons to create an image for a disabled button.</source>
          <target state="translated">An image filter that &quot;disables&quot; an image by turning it into a grayscale image, and brightening the pixels in the image. Used by buttons to create an image for a disabled button.</target>
        </trans-unit>
        <trans-unit id="bde7bd7802caa9ee827718228b3f392524575ca2" translate="yes" xml:space="preserve">
          <source>An immutable &lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt;&lt;code&gt;TypeInfo&lt;/code&gt;&lt;/a&gt; object that represents the type of the current element. Note that the caller can keep references to the obtained &lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt;&lt;code&gt;TypeInfo&lt;/code&gt;&lt;/a&gt; longer than the callback scope. Otherwise, this method returns null if the validator is unable to determine the type of the current element for some reason (for example, if the validator is recovering from an earlier error.)</source>
          <target state="translated">An immutable &lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt; &lt;code&gt;TypeInfo&lt;/code&gt; &lt;/a&gt; object that represents the type of the current element. Note that the caller can keep references to the obtained &lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt; &lt;code&gt;TypeInfo&lt;/code&gt; &lt;/a&gt; longer than the callback scope. Otherwise, this method returns null if the validator is unable to determine the type of the current element for some reason (for example, if the validator is recovering from an earlier error.)</target>
        </trans-unit>
        <trans-unit id="f47eadf08dcb4d909ac4b0a4ba98b7435acdcb35" translate="yes" xml:space="preserve">
          <source>An immutable &lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt;&lt;code&gt;TypeInfo&lt;/code&gt;&lt;/a&gt; object that represents the type of the specified attribute. Note that the caller can keep references to the obtained &lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt;&lt;code&gt;TypeInfo&lt;/code&gt;&lt;/a&gt; longer than the callback scope. Otherwise, this method returns null if the validator is unable to determine the type.</source>
          <target state="translated">An immutable &lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt; &lt;code&gt;TypeInfo&lt;/code&gt; &lt;/a&gt; object that represents the type of the specified attribute. Note that the caller can keep references to the obtained &lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt; &lt;code&gt;TypeInfo&lt;/code&gt; &lt;/a&gt; longer than the callback scope. Otherwise, this method returns null if the validator is unable to determine the type.</target>
        </trans-unit>
        <trans-unit id="fe0553838112e0cf625c3b61ad5d079c23786605" translate="yes" xml:space="preserve">
          <source>An immutable Map from response header field names to lists of field values. The status line has null as its field name.</source>
          <target state="translated">응답 헤더 필드 이름에서 필드 값 목록으로의 불변 맵. 상태 표시 줄에 필드 이름으로 널이 있습니다.</target>
        </trans-unit>
        <trans-unit id="309749b311138b7f3bec40d7451870c2df26158a" translate="yes" xml:space="preserve">
          <source>An immutable descriptor.</source>
          <target state="translated">불변의 기술자.</target>
        </trans-unit>
        <trans-unit id="2111ab463a21040ddacb00a296f71ac5f3327414" translate="yes" xml:space="preserve">
          <source>An immutable policy qualifier represented by the ASN.1 PolicyQualifierInfo structure.</source>
          <target state="translated">ASN.1 PolicyQualifierInfo 구조로 표현되는 불변의 정책 수식 자입니다.</target>
        </trans-unit>
        <trans-unit id="2393eb39797e342496739136a00756f2eb32faa0" translate="yes" xml:space="preserve">
          <source>An immutable sequence of certificates (a certification path).</source>
          <target state="translated">불변의 인증서 순서 (인증 경로).</target>
        </trans-unit>
        <trans-unit id="2cbbbd823fdfe74ee0208df70396dc16cfefa5d9" translate="yes" xml:space="preserve">
          <source>An immutable sequence of characters.</source>
          <target state="translated">불변의 문자 순서.</target>
        </trans-unit>
        <trans-unit id="45cd11652bb49b91bbf6e2d5686c0ef4277288f0" translate="yes" xml:space="preserve">
          <source>An immutable sequence of characters. When created by the same implementation, objects implementing this interface must obey the general &lt;a href=&quot;../../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;equals contract&lt;/a&gt; when compared with each other. Therefore, &lt;code&gt;Name&lt;/code&gt; objects from the same implementation are usable in collections while &lt;code&gt;Name&lt;/code&gt;s from different implementations may not work properly in collections.</source>
          <target state="translated">An immutable sequence of characters. When created by the same implementation, objects implementing this interface must obey the general &lt;a href=&quot;../../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;equals contract&lt;/a&gt; when compared with each other. Therefore, &lt;code&gt;Name&lt;/code&gt; objects from the same implementation are usable in collections while &lt;code&gt;Name&lt;/code&gt; s from different implementations may not work properly in collections.</target>
        </trans-unit>
        <trans-unit id="d488a1fff9862fa2cfb517a44dc0a8320f94ea54" translate="yes" xml:space="preserve">
          <source>An immutable sequence of characters. When created by the same implementation, objects implementing this interface must obey the general &lt;a href=&quot;../../../../java/lang/object#equals-java.lang.Object-&quot;&gt;equals contract&lt;/a&gt; when compared with each other. Therefore, &lt;code&gt;Name&lt;/code&gt; objects from the same implementation are usable in collections while &lt;code&gt;Name&lt;/code&gt;s from different implementations may not work properly in collections.</source>
          <target state="translated">불변의 문자 순서. 동일한 구현으로 작성 될 때이 인터페이스를 구현하는 오브젝트 는 서로 비교할 때 일반 &lt;a href=&quot;../../../../java/lang/object#equals-java.lang.Object-&quot;&gt;동등 계약을&lt;/a&gt; 준수해야합니다 . 따라서 동일한 구현의 &lt;code&gt;Name&lt;/code&gt; 객체는 컬렉션에서 사용할 수 있지만 다른 구현의 &lt;code&gt;Name&lt;/code&gt; 은 컬렉션에서 제대로 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfe828311e3aadf4efbe903c5a4d3dae8f803152" translate="yes" xml:space="preserve">
          <source>An immutable set of this charset's aliases</source>
          <target state="translated">이 캐릭터 세트의 별명의 불변의 세트</target>
        </trans-unit>
        <trans-unit id="8ae6ae36d10d08e667bd8bef5f395ff3be01ce79" translate="yes" xml:space="preserve">
          <source>An immutable transient object containing contextual information about a &lt;code&gt;Region&lt;/code&gt;.</source>
          <target state="translated">An immutable transient object containing contextual information about a &lt;code&gt;Region&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5de6b49079f55452582421cb3525debb3e6fc09c" translate="yes" xml:space="preserve">
          <source>An immutable transient object containing contextual information about a &lt;code&gt;Region&lt;/code&gt;. A &lt;code&gt;SynthContext&lt;/code&gt; should only be considered valid for the duration of the method it is passed to. In other words you should not cache a &lt;code&gt;SynthContext&lt;/code&gt; that is passed to you and expect it to remain valid.</source>
          <target state="translated">An immutable transient object containing contextual information about a &lt;code&gt;Region&lt;/code&gt; . A &lt;code&gt;SynthContext&lt;/code&gt; should only be considered valid for the duration of the method it is passed to. In other words you should not cache a &lt;code&gt;SynthContext&lt;/code&gt; that is passed to you and expect it to remain valid.</target>
        </trans-unit>
        <trans-unit id="86774acac7eb69d01bec215a163a97ba1edd8cd1" translate="yes" xml:space="preserve">
          <source>An immutable valid policy tree node as defined by the PKIX certification path validation algorithm.</source>
          <target state="translated">PKIX 인증 경로 유효성 검증 알고리즘으로 정의 된 변경 불가능한 유효한 정책 트리 노드.</target>
        </trans-unit>
        <trans-unit id="11def7fe2970e531f4ea239ac44939945341968a" translate="yes" xml:space="preserve">
          <source>An immutable, case-insensitive map from canonical charset names to charset objects</source>
          <target state="translated">표준 문자셋 이름에서 문자셋 객체로의 대소 문자를 구분하지 않는 불변의 맵</target>
        </trans-unit>
        <trans-unit id="61c4bc8591375b6023f191ee8eb62f932f7e18ed" translate="yes" xml:space="preserve">
          <source>An implementation MUST minimally support the default mechanism type: DOM.</source>
          <target state="translated">An implementation MUST minimally support the default mechanism type: DOM.</target>
        </trans-unit>
        <trans-unit id="eb9cc79bd83c6e949c779f14d227a24a0648498f" translate="yes" xml:space="preserve">
          <source>An implementation allows this socket option to be set before the socket is bound or connected. Changing the value of this socket option after the socket is bound has no effect.</source>
          <target state="translated">An implementation allows this socket option to be set before the socket is bound or connected. Changing the value of this socket option after the socket is bound has no effect.</target>
        </trans-unit>
        <trans-unit id="c5e4c656812f06ae210159024d8f8491f2ba594c" translate="yes" xml:space="preserve">
          <source>An implementation allows this socket option to be set before the socket is bound or connected. Changing the value of this socket option after the socket is bound has no effect. The default value of this socket option is system dependent.</source>
          <target state="translated">구현에서는 소켓이 바인드 또는 연결되기 전에이 소켓 옵션을 설정할 수 있습니다. 소켓이 바인드 된 후이 소켓 옵션의 값을 변경해도 아무런 영향이 없습니다. 이 소켓 옵션의 기본값은 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="13b0ed2338768498271a0575928eef5780873aab" translate="yes" xml:space="preserve">
          <source>An implementation allows this socket option to be set before the socket is bound or connected. Whether an implementation allows the socket receive buffer to be changed after the socket is bound is system dependent.</source>
          <target state="translated">구현에서는 소켓이 바인드 또는 연결되기 전에이 소켓 옵션을 설정할 수 있습니다. 소켓이 바인드 된 후 구현이 소켓 수신 버퍼를 변경할 수 있는지 여부는 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5677116f123d9765077b0c39d1986e1989e1d683" translate="yes" xml:space="preserve">
          <source>An implementation allows this socket option to be set before the socket is bound or connected. Whether an implementation allows the socket send buffer to be changed after the socket is bound is system dependent.</source>
          <target state="translated">구현에서는 소켓이 바인드 또는 연결되기 전에이 소켓 옵션을 설정할 수 있습니다. 소켓이 바인드 된 후 구현이 소켓 송신 버퍼를 변경할 수 있는지 여부는 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="efc8d388f194b1630ca29c5a6c8bc7749a3434e1" translate="yes" xml:space="preserve">
          <source>An implementation can favor responding to an interrupt over normal method return in response to a signal, or over indicating the elapse of the specified waiting time. In either case the implementation must ensure that the signal is redirected to another waiting thread, if there is one.</source>
          <target state="translated">구현은 신호에 응답하여 정상 메소드 리턴에 대한 인터럽트에 응답하거나 지정된 대기 시간의 경과를 표시하는 것을 선호 할 수 있습니다. 두 경우 모두 구현시 신호가 대기중인 다른 스레드로 리디렉션되는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="f982d4312ab2106d3754d438d5420cf313e7b9f9" translate="yes" xml:space="preserve">
          <source>An implementation can favor responding to an interrupt over normal method return in response to a signal, or over indicating the passing of the specified deadline. In either case the implementation must ensure that the signal is redirected to another waiting thread, if there is one.</source>
          <target state="translated">구현은 신호에 대한 응답으로 정상 메소드 리턴에 대한 인터럽트에 응답하거나 지정된 최종 기한이 지났음을 표시하는 데 유리할 수 있습니다. 두 경우 모두 구현시 신호가 대기중인 다른 스레드로 리디렉션되는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="9a5e48fc4c01a2371f770cac59b3f2c703b41ac3" translate="yes" xml:space="preserve">
          <source>An implementation can favor responding to an interrupt over normal method return in response to a signal. In that case the implementation must ensure that the signal is redirected to another waiting thread, if there is one.</source>
          <target state="translated">구현은 신호에 응답하여 정상적인 메소드 리턴에 대한 인터럽트에 응답하는 것을 선호 할 수 있습니다. 이 경우 구현시 신호가있는 경우 대기중인 다른 스레드로 신호가 리디렉션되도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="f4df28dda59592a04017409234d63cb3dd6b1727" translate="yes" xml:space="preserve">
          <source>An implementation can favor responding to an interrupt over normal method return, or reporting a timeout.</source>
          <target state="translated">구현시 정상적인 메소드 리턴에 대한 인터럽트에 응답하거나 시간 종료를보고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e7cc878bc068e369c8f0fc0e46fc6a6baeef6c1" translate="yes" xml:space="preserve">
          <source>An implementation can favor responding to an interrupt over normal method return.</source>
          <target state="translated">구현은 일반적인 메소드 리턴에 대한 인터럽트에 응답하는 것을 선호 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93e212df67647ddbcb4f696108e2a8c1903f5358" translate="yes" xml:space="preserve">
          <source>An implementation dependent warning that may be raised if the configuration parameter &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-namespaces&quot;&gt;namespaces&lt;/a&gt;&quot; is set to &lt;code&gt;true&lt;/code&gt; and an unbound namespace prefix is encountered in an entity's replacement text. Raising this warning is not enforced since some existing parsers may not recognize unbound namespace prefixes in the replacement text of entities.</source>
          <target state="translated">An implementation dependent warning that may be raised if the configuration parameter &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-namespaces&quot;&gt;namespaces&lt;/a&gt;&quot; is set to &lt;code&gt;true&lt;/code&gt; and an unbound namespace prefix is encountered in an entity's replacement text. Raising this warning is not enforced since some existing parsers may not recognize unbound namespace prefixes in the replacement text of entities.</target>
        </trans-unit>
        <trans-unit id="7c602f6bb25368c8e0c15076fee4398ae8b72f85" translate="yes" xml:space="preserve">
          <source>An implementation is not required to provide a way to start agents from the command-line interface. When it does, then it supports the &lt;code&gt;-javaagent&lt;/code&gt; option as specified above. The &lt;code&gt;-javaagent&lt;/code&gt; option may be used multiple times on the same command-line, thus starting multiple agents. The &lt;code&gt;premain&lt;/code&gt; methods will be called in the order that the agents are specified on the command line. More than one agent may use the same</source>
          <target state="translated">An implementation is not required to provide a way to start agents from the command-line interface. When it does, then it supports the &lt;code&gt;-javaagent&lt;/code&gt; option as specified above. The &lt;code&gt;-javaagent&lt;/code&gt; option may be used multiple times on the same command-line, thus starting multiple agents. The &lt;code&gt;premain&lt;/code&gt; methods will be called in the order that the agents are specified on the command line. More than one agent may use the same</target>
        </trans-unit>
        <trans-unit id="5858553ccba5ec8f867c82d8df384e89f65bed29" translate="yes" xml:space="preserve">
          <source>An implementation is required to clearly document the semantics and guarantees provided by each of the waiting methods, and when an implementation does support interruption of thread suspension then it must obey the interruption semantics as defined in this interface.</source>
          <target state="translated">각 대기 메소드에서 제공하는 시맨틱과 보증을 명확하게 문서화하려면 구현이 필요하며 구현이 스레드 일시 중단 중단을 지원하는 경우이 인터페이스에 정의 된대로 중단 시맨틱을 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="0806c07fac13f63c8b1e90d2d509f3dc707dff61" translate="yes" xml:space="preserve">
          <source>An implementation is required to read XML documents that use the &quot;&lt;code&gt;UTF-8&lt;/code&gt;&quot; or &quot;&lt;code&gt;UTF-16&lt;/code&gt;&quot; encoding. An implementation may support additional encodings.</source>
          <target state="translated">&quot; &lt;code&gt;UTF-8&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;UTF-16&lt;/code&gt; &quot;인코딩 을 사용하는 XML 문서를 읽으려면 구현이 필요합니다 . 구현은 추가 인코딩을 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f45e1c3ce65854544563be57c2c76070474b3489" translate="yes" xml:space="preserve">
          <source>An implementation is required to support writing of XML documents that use the &quot;&lt;code&gt;UTF-8&lt;/code&gt;&quot; or &quot;&lt;code&gt;UTF-16&lt;/code&gt;&quot; encoding. An implementation may support additional encodings.</source>
          <target state="translated">&quot; &lt;code&gt;UTF-8&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;UTF-16&lt;/code&gt; &quot;인코딩 을 사용하는 XML 문서 작성을 지원하려면 구현이 필요합니다 . 구현은 추가 인코딩을 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e986ed5deb00dacb1c6c0232c9a9be22e07f8aef" translate="yes" xml:space="preserve">
          <source>An implementation may (and typically does) require that the current thread hold the lock associated with this &lt;code&gt;
 Condition&lt;/code&gt; when this method is called. Implementations must document this precondition and any actions taken if the lock is not held. Typically, an exception such as &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt;&lt;code&gt;IllegalMonitorStateException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">An implementation may (and typically does) require that the current thread hold the lock associated with this &lt;code&gt; Condition&lt;/code&gt; when this method is called. Implementations must document this precondition and any actions taken if the lock is not held. Typically, an exception such as &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt; &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; &lt;/a&gt; will be thrown.</target>
        </trans-unit>
        <trans-unit id="be6da1cc0616bc7c03ac504057b911b61246909d" translate="yes" xml:space="preserve">
          <source>An implementation may (and typically does) require that the current thread hold the lock associated with this &lt;code&gt;Condition&lt;/code&gt; when this method is called. Implementations must document this precondition and any actions taken if the lock is not held. Typically, an exception such as &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt;&lt;code&gt;IllegalMonitorStateException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">구현 &lt;code&gt;Condition&lt;/code&gt; 메소드가 호출 될 때 현재 스레드가이 조건 과 연관된 잠금을 보유하도록 요구할 수 있습니다. 구현시이 전제 조건과 잠금이 유지되지 않은 경우 취한 조치를 문서화해야합니다. 일반적으로 &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt; &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; &lt;/a&gt; 과 같은 예외 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5674f0612dc6454a818f8c8028668e0f78a363f5" translate="yes" xml:space="preserve">
          <source>An implementation may also recognize additional address syntaxes, for example:</source>
          <target state="translated">구현은 다음과 같은 추가 주소 구문을 인식 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="db29138847f18d7621c563e7db7a5d5353025aeb" translate="yes" xml:space="preserve">
          <source>An implementation may also support additional implementation specific options.</source>
          <target state="translated">구현은 추가 구현 특정 옵션을 지원할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="49ba47636f3a8455cca62c8db213ba1b0cdfad7d" translate="yes" xml:space="preserve">
          <source>An implementation may also support additional options.</source>
          <target state="translated">구현은 추가 옵션을 지원할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="271eb22768cd477b98c8cfc2cce961505b2a9b5c" translate="yes" xml:space="preserve">
          <source>An implementation may choose to not execute the stream pipeline (either sequentially or in parallel) if it is capable of computing the count directly from the stream source. In such cases no source elements will be traversed and no intermediate operations will be evaluated. Behavioral parameters with side-effects, which are strongly discouraged except for harmless cases such as debugging, may be affected. For example, consider the following stream:</source>
          <target state="translated">An implementation may choose to not execute the stream pipeline (either sequentially or in parallel) if it is capable of computing the count directly from the stream source. In such cases no source elements will be traversed and no intermediate operations will be evaluated. Behavioral parameters with side-effects, which are strongly discouraged except for harmless cases such as debugging, may be affected. For example, consider the following stream:</target>
        </trans-unit>
        <trans-unit id="ac04f5d1f67a31c75ed5f5120bd6faaf12c31915" translate="yes" xml:space="preserve">
          <source>An implementation may choose to restrict some header names or values, as the HTTP Client may determine their value itself. For example, &quot;Content-Length&quot;, which will be determined by the request Publisher. In such a case, an implementation of &lt;code&gt;HttpRequest.Builder&lt;/code&gt; may choose to throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if such a header is passed to the builder.</source>
          <target state="translated">An implementation may choose to restrict some header names or values, as the HTTP Client may determine their value itself. For example, &quot;Content-Length&quot;, which will be determined by the request Publisher. In such a case, an implementation of &lt;code&gt;HttpRequest.Builder&lt;/code&gt; may choose to throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if such a header is passed to the builder.</target>
        </trans-unit>
        <trans-unit id="7563b4f7798b6925941631e4c4b01cffff67feb7" translate="yes" xml:space="preserve">
          <source>An implementation may offer better algorithmic performance when &lt;code&gt;val == this&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;val == this&lt;/code&gt; 때 구현이 더 나은 알고리즘 성능을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="26f8a864fcbdbf2b0f5bade7248bb11b973249fe" translate="yes" xml:space="preserve">
          <source>An implementation may provide a mechanism to start agents sometime after the the VM has started. The details as to how this is initiated are implementation specific but typically the application has already started and its &lt;code&gt;main&lt;/code&gt; method has already been invoked. In cases where an implementation supports the starting of agents after the VM has started the following applies:</source>
          <target state="translated">An implementation may provide a mechanism to start agents sometime after the the VM has started. The details as to how this is initiated are implementation specific but typically the application has already started and its &lt;code&gt;main&lt;/code&gt; method has already been invoked. In cases where an implementation supports the starting of agents after the VM has started the following applies:</target>
        </trans-unit>
        <trans-unit id="91f70497f45992b4879cd204e0d29502a43966f1" translate="yes" xml:space="preserve">
          <source>An implementation may require to examine the file to determine if the file is a directory. Consequently this method may not be atomic with respect to other file system operations. If the file is a symbolic link then the symbolic link itself, not the final target of the link, is deleted.</source>
          <target state="translated">구현시 파일을 검사하여 파일이 디렉토리인지 판별해야 할 수 있습니다. 결과적으로이 방법은 다른 파일 시스템 작업과 관련하여 원 자성이 아닐 수 있습니다. 파일이 기호 링크 인 경우 링크의 최종 대상이 아닌 기호 링크 자체가 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="d26dadc4b9be5b8e0091d9bbf03a3d2eefaa535f" translate="yes" xml:space="preserve">
          <source>An implementation may support a mechanism to start agents some time after the VM has started. For example, an implementation may provide a mechanism that allows a tool to</source>
          <target state="translated">An implementation may support a mechanism to start agents some time after the VM has started. For example, an implementation may provide a mechanism that allows a tool to</target>
        </trans-unit>
        <trans-unit id="02efbc7035ebd990de6c92ec623b7b7ebaa5ca50" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt; supporting similar semantics to &lt;a href=&quot;reentrantlock&quot;&gt;&lt;code&gt;ReentrantLock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;reentrantlock&quot;&gt; &lt;code&gt;ReentrantLock&lt;/code&gt; &lt;/a&gt; 과 유사한 의미를 지원하는 &lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; &lt;/a&gt; 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="b01dbbc2a96ae53b9f60dfa54646cfb2beaae3a3" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;DataSource&lt;/code&gt; must include a public no-arg constructor.</source>
          <target state="translated">An implementation of &lt;code&gt;DataSource&lt;/code&gt; must include a public no-arg constructor.</target>
        </trans-unit>
        <trans-unit id="c2e80a2534da583fb526ca186688e896ccb4a018" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;FileFilter&lt;/code&gt; that filters using a specified set of extensions.</source>
          <target state="translated">An implementation of &lt;code&gt;FileFilter&lt;/code&gt; that filters using a specified set of extensions.</target>
        </trans-unit>
        <trans-unit id="0ba8b61d9f4fc97c9290e497e8ef3b93c9ebfaa2" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;FileFilter&lt;/code&gt; that filters using a specified set of extensions. The extension for a file is the portion of the file name after the last &quot;.&quot;. Files whose name does not contain a &quot;.&quot; have no file name extension. File name extension comparisons are case insensitive.</source>
          <target state="translated">An implementation of &lt;code&gt;FileFilter&lt;/code&gt; that filters using a specified set of extensions. The extension for a file is the portion of the file name after the last &quot;.&quot;. Files whose name does not contain a &quot;.&quot; have no file name extension. File name extension comparisons are case insensitive.</target>
        </trans-unit>
        <trans-unit id="9c6f6844bf601599a7869871061f029063cd1eb3" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageInputStream&lt;/code&gt; that gets its input from a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;RandomAccessFile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; 또는 &lt;code&gt;RandomAccessFile&lt;/code&gt; 에서 입력을 가져 오는 &lt;code&gt;ImageInputStream&lt;/code&gt; 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="059bd6ffc3f987d067381ad60a8520569cc67527" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageInputStream&lt;/code&gt; that gets its input from a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;RandomAccessFile&lt;/code&gt;. The file contents are assumed to be stable during the lifetime of the object.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; 또는 &lt;code&gt;RandomAccessFile&lt;/code&gt; 에서 입력을 가져 오는 &lt;code&gt;ImageInputStream&lt;/code&gt; 구현입니다 . 파일 내용은 객체 수명 동안 안정적인 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="457993776e649ccb2e8fc664bf34b54846ba04c4" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageInputStream&lt;/code&gt; that gets its input from a regular &lt;code&gt;InputStream&lt;/code&gt;.</source>
          <target state="translated">일반 &lt;code&gt;InputStream&lt;/code&gt; 로부터 입력을 얻는 &lt;code&gt;ImageInputStream&lt;/code&gt; 의 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="4daf5309026dfdbfacc05ada44d49361ca2d6e6d" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageInputStream&lt;/code&gt; that gets its input from a regular &lt;code&gt;InputStream&lt;/code&gt;. A file is used to cache previously read data.</source>
          <target state="translated">일반 &lt;code&gt;InputStream&lt;/code&gt; 로부터 입력을 얻는 &lt;code&gt;ImageInputStream&lt;/code&gt; 의 구현입니다 . 파일은 이전에 읽은 데이터를 캐시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a229238fcd71b555a42b98e4ade47edb39ab3d74" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageInputStream&lt;/code&gt; that gets its input from a regular &lt;code&gt;InputStream&lt;/code&gt;. A memory buffer is used to cache at least the data between the discard position and the current read position.</source>
          <target state="translated">일반 &lt;code&gt;InputStream&lt;/code&gt; 로부터 입력을 얻는 &lt;code&gt;ImageInputStream&lt;/code&gt; 의 구현입니다 . 메모리 버퍼는 적어도 폐기 위치와 현재 판독 위치 사이의 데이터를 캐시하는데 사용된다.</target>
        </trans-unit>
        <trans-unit id="1715700fc056d15ae81a2b83b6833150a0a8b005" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageOutputStream&lt;/code&gt; that writes its output directly to a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;RandomAccessFile&lt;/code&gt;.</source>
          <target state="translated">출력을 &lt;code&gt;File&lt;/code&gt; 또는 &lt;code&gt;RandomAccessFile&lt;/code&gt; 에 직접 쓰는 &lt;code&gt;ImageOutputStream&lt;/code&gt; 의 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="1c6863765c682444215abf8678d6537ccb4b2a2e" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageOutputStream&lt;/code&gt; that writes its output to a regular &lt;code&gt;OutputStream&lt;/code&gt;.</source>
          <target state="translated">출력을 정규의 &lt;code&gt;OutputStream&lt;/code&gt; 에 기입 하는 &lt;code&gt;ImageOutputStream&lt;/code&gt; 의 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="836f27e664c9096fb0c70651125110bfbc6cc92a" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageOutputStream&lt;/code&gt; that writes its output to a regular &lt;code&gt;OutputStream&lt;/code&gt;. A file is used to cache data until it is flushed to the output stream.</source>
          <target state="translated">출력을 정규의 &lt;code&gt;OutputStream&lt;/code&gt; 에 기입 하는 &lt;code&gt;ImageOutputStream&lt;/code&gt; 의 구현입니다 . 파일은 출력 스트림으로 플러시 될 때까지 데이터를 캐시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c31a52b9996547c44a62ef393d4ed635876f5dc6" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageOutputStream&lt;/code&gt; that writes its output to a regular &lt;code&gt;OutputStream&lt;/code&gt;. A memory buffer is used to cache at least the data between the discard position and the current write position. The only constructor takes an &lt;code&gt;OutputStream&lt;/code&gt;, so this class may not be used for read/modify/write operations. Reading can occur only on parts of the stream that have already been written to the cache and not yet flushed.</source>
          <target state="translated">출력을 정규의 &lt;code&gt;OutputStream&lt;/code&gt; 에 기입 하는 &lt;code&gt;ImageOutputStream&lt;/code&gt; 의 구현입니다 . 메모리 버퍼는 적어도 폐기 위치와 현재 기록 위치 사이의 데이터를 캐시하는데 사용된다. 유일한 생성자는 &lt;code&gt;OutputStream&lt;/code&gt; 을 취 하므로이 클래스는 읽기 / 수정 / 쓰기 작업에 사용될 수 없습니다. 읽기는 이미 캐시에 기록되었지만 아직 플러시되지 않은 스트림 부분에서만 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0db832f36b766fb48883b9a9e5b1cd2cd667b21" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;JFormattedTextField.AbstractFormatterFactory&lt;/code&gt;.</source>
          <target state="translated">An implementation of &lt;code&gt;JFormattedTextField.AbstractFormatterFactory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a5016866cc31ee826eca5f628eb482c15c9f8a3" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;JFormattedTextField.AbstractFormatterFactory&lt;/code&gt;. &lt;code&gt;DefaultFormatterFactory&lt;/code&gt; allows specifying a number of different &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt;s that are to be used. The most important one is the default one (&lt;code&gt;setDefaultFormatter&lt;/code&gt;). The default formatter will be used if a more specific formatter could not be found. The following process is used to determine the appropriate formatter to use.</source>
          <target state="translated">An implementation of &lt;code&gt;JFormattedTextField.AbstractFormatterFactory&lt;/code&gt; . &lt;code&gt;DefaultFormatterFactory&lt;/code&gt; allows specifying a number of different &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; s that are to be used. The most important one is the default one ( &lt;code&gt;setDefaultFormatter&lt;/code&gt; ). The default formatter will be used if a more specific formatter could not be found. The following process is used to determine the appropriate formatter to use.</target>
        </trans-unit>
        <trans-unit id="f46d72e992c29a8e1337050e72514b28178c792d" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;LoggerFinder&lt;/code&gt; may override this method, for example, when the underlying logging backend provides its own mechanism for localizing log messages, then such a &lt;code&gt;LoggerFinder&lt;/code&gt; would be free to return a logger that makes direct use of the mechanism provided by the backend.</source>
          <target state="translated">An implementation of &lt;code&gt;LoggerFinder&lt;/code&gt; may override this method, for example, when the underlying logging backend provides its own mechanism for localizing log messages, then such a &lt;code&gt;LoggerFinder&lt;/code&gt; would be free to return a logger that makes direct use of the mechanism provided by the backend.</target>
        </trans-unit>
        <trans-unit id="6cde0f952178cceb7ef2b91373a41819902268a3" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; is responsible for adding the ignored exceptions to the list.</source>
          <target state="translated">&lt;code&gt;PKIXRevocationChecker&lt;/code&gt; 의 구현은 무시 된 예외를 목록에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="8003b1eeafc8e148a9bad9c5baaa649725ee318b" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;RowSorter&lt;/code&gt; that provides sorting and filtering around a grid-based data model.</source>
          <target state="translated">An implementation of &lt;code&gt;RowSorter&lt;/code&gt; that provides sorting and filtering around a grid-based data model.</target>
        </trans-unit>
        <trans-unit id="3e9e120e3a2edf72feb0bffa2c636d000282dcbb" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;RowSorter&lt;/code&gt; that provides sorting and filtering around a grid-based data model. Beyond creating and installing a &lt;code&gt;RowSorter&lt;/code&gt;, you very rarely need to interact with one directly. Refer to &lt;a href=&quot;table/tablerowsorter&quot;&gt;&lt;code&gt;TableRowSorter&lt;/code&gt;&lt;/a&gt; for a concrete implementation of &lt;code&gt;RowSorter&lt;/code&gt; for &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">An implementation of &lt;code&gt;RowSorter&lt;/code&gt; that provides sorting and filtering around a grid-based data model. Beyond creating and installing a &lt;code&gt;RowSorter&lt;/code&gt; , you very rarely need to interact with one directly. Refer to &lt;a href=&quot;table/tablerowsorter&quot;&gt; &lt;code&gt;TableRowSorter&lt;/code&gt; &lt;/a&gt; for a concrete implementation of &lt;code&gt;RowSorter&lt;/code&gt; for &lt;code&gt;JTable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41b3fb3bf374a24a9f0b16096683575463fb9994" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;RowSorter&lt;/code&gt; that provides sorting and filtering using a &lt;code&gt;TableModel&lt;/code&gt;.</source>
          <target state="translated">An implementation of &lt;code&gt;RowSorter&lt;/code&gt; that provides sorting and filtering using a &lt;code&gt;TableModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e6d208abd872a41406eef73de76e93199913990" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;RowSorter&lt;/code&gt; that provides sorting and filtering using a &lt;code&gt;TableModel&lt;/code&gt;. The following example shows adding sorting to a &lt;code&gt;JTable&lt;/code&gt;:</source>
          <target state="translated">An implementation of &lt;code&gt;RowSorter&lt;/code&gt; that provides sorting and filtering using a &lt;code&gt;TableModel&lt;/code&gt; . The following example shows adding sorting to a &lt;code&gt;JTable&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bed752009c1d8decb535a1a8e86e77d63dfdc073" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;XADataSource&lt;/code&gt; must include a public no-arg constructor.</source>
          <target state="translated">An implementation of &lt;code&gt;XADataSource&lt;/code&gt; must include a public no-arg constructor.</target>
        </trans-unit>
        <trans-unit id="230f5799328e42d5a42c84c53b9b672a9b7cb297" translate="yes" xml:space="preserve">
          <source>An implementation of ElementChange that can be added to the document event.</source>
          <target state="translated">An implementation of ElementChange that can be added to the document event.</target>
        </trans-unit>
        <trans-unit id="c86688d8cfc8932559f66cc39e18b770c5e376ed" translate="yes" xml:space="preserve">
          <source>An implementation of a &quot;push&quot; button.</source>
          <target state="translated">An implementation of a &quot;push&quot; button.</target>
        </trans-unit>
        <trans-unit id="81bea02edd862fb16571504b7d949cb5b6cdb00b" translate="yes" xml:space="preserve">
          <source>An implementation of a check box -- an item that can be selected or deselected, and which displays its state to the user.</source>
          <target state="translated">An implementation of a check box -- an item that can be selected or deselected, and which displays its state to the user.</target>
        </trans-unit>
        <trans-unit id="3acae839db8fef76f73838aedf0fed8093e0e798" translate="yes" xml:space="preserve">
          <source>An implementation of a check box -- an item that can be selected or deselected, and which displays its state to the user. By convention, any number of check boxes in a group can be selected. See &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt; for examples and information on using check boxes.</source>
          <target state="translated">An implementation of a check box -- an item that can be selected or deselected, and which displays its state to the user. By convention, any number of check boxes in a group can be selected. See &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt; for examples and information on using check boxes.</target>
        </trans-unit>
        <trans-unit id="586159ca1762c09e77c1c88b78d72b4bbd682588" translate="yes" xml:space="preserve">
          <source>An implementation of a lightweight component that participates in layout but has no view.</source>
          <target state="translated">An implementation of a lightweight component that participates in layout but has no view.</target>
        </trans-unit>
        <trans-unit id="96a0c8056f9e3eea2788f5cf53e3d629c07ec298" translate="yes" xml:space="preserve">
          <source>An implementation of a menu -- a popup window containing &lt;code&gt;JMenuItem&lt;/code&gt;s that is displayed when the user selects an item on the &lt;code&gt;JMenuBar&lt;/code&gt;.</source>
          <target state="translated">An implementation of a menu -- a popup window containing &lt;code&gt;JMenuItem&lt;/code&gt; s that is displayed when the user selects an item on the &lt;code&gt;JMenuBar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6514438eae6c4edbad5855314475fdf1e7a12e79" translate="yes" xml:space="preserve">
          <source>An implementation of a menu -- a popup window containing &lt;code&gt;JMenuItem&lt;/code&gt;s that is displayed when the user selects an item on the &lt;code&gt;JMenuBar&lt;/code&gt;. In addition to &lt;code&gt;JMenuItem&lt;/code&gt;s, a &lt;code&gt;JMenu&lt;/code&gt; can also contain &lt;code&gt;JSeparator&lt;/code&gt;s.</source>
          <target state="translated">An implementation of a menu -- a popup window containing &lt;code&gt;JMenuItem&lt;/code&gt; s that is displayed when the user selects an item on the &lt;code&gt;JMenuBar&lt;/code&gt; . In addition to &lt;code&gt;JMenuItem&lt;/code&gt; s, a &lt;code&gt;JMenu&lt;/code&gt; can also contain &lt;code&gt;JSeparator&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="8f44527aa4060f76b655211d0f3c1b923816b38e" translate="yes" xml:space="preserve">
          <source>An implementation of a menu bar.</source>
          <target state="translated">An implementation of a menu bar.</target>
        </trans-unit>
        <trans-unit id="855ca660250e40e2a1d204b4a2224b20ebf2f50a" translate="yes" xml:space="preserve">
          <source>An implementation of a menu bar. You add &lt;code&gt;JMenu&lt;/code&gt; objects to the menu bar to construct a menu. When the user selects a &lt;code&gt;JMenu&lt;/code&gt; object, its associated &lt;code&gt;JPopupMenu&lt;/code&gt; is displayed, allowing the user to select one of the &lt;code&gt;JMenuItems&lt;/code&gt; on it.</source>
          <target state="translated">An implementation of a menu bar. You add &lt;code&gt;JMenu&lt;/code&gt; objects to the menu bar to construct a menu. When the user selects a &lt;code&gt;JMenu&lt;/code&gt; object, its associated &lt;code&gt;JPopupMenu&lt;/code&gt; is displayed, allowing the user to select one of the &lt;code&gt;JMenuItems&lt;/code&gt; on it.</target>
        </trans-unit>
        <trans-unit id="8b4b12f64dc6816e8330b5e16fcb3b3c27fc1956" translate="yes" xml:space="preserve">
          <source>An implementation of a popup menu -- a small window that pops up and displays a series of choices.</source>
          <target state="translated">An implementation of a popup menu -- a small window that pops up and displays a series of choices.</target>
        </trans-unit>
        <trans-unit id="49218303b341dd47dadefc58769c786893b21d83" translate="yes" xml:space="preserve">
          <source>An implementation of a popup menu -- a small window that pops up and displays a series of choices. A &lt;code&gt;JPopupMenu&lt;/code&gt; is used for the menu that appears when the user selects an item on the menu bar. It is also used for &quot;pull-right&quot; menu that appears when the selects a menu item that activates it. Finally, a &lt;code&gt;JPopupMenu&lt;/code&gt; can also be used anywhere else you want a menu to appear. For example, when the user right-clicks in a specified area.</source>
          <target state="translated">An implementation of a popup menu -- a small window that pops up and displays a series of choices. A &lt;code&gt;JPopupMenu&lt;/code&gt; is used for the menu that appears when the user selects an item on the menu bar. It is also used for &quot;pull-right&quot; menu that appears when the selects a menu item that activates it. Finally, a &lt;code&gt;JPopupMenu&lt;/code&gt; can also be used anywhere else you want a menu to appear. For example, when the user right-clicks in a specified area.</target>
        </trans-unit>
        <trans-unit id="f604d75fa51a12bc6f38cc8f6431f5eb80d35dab" translate="yes" xml:space="preserve">
          <source>An implementation of a radio button -- an item that can be selected or deselected, and which displays its state to the user.</source>
          <target state="translated">An implementation of a radio button -- an item that can be selected or deselected, and which displays its state to the user.</target>
        </trans-unit>
        <trans-unit id="2b6aaab62273a9c418c019e524acd3d15dae3319" translate="yes" xml:space="preserve">
          <source>An implementation of a radio button -- an item that can be selected or deselected, and which displays its state to the user. Used with a &lt;a href=&quot;buttongroup&quot;&gt;&lt;code&gt;ButtonGroup&lt;/code&gt;&lt;/a&gt; object to create a group of buttons in which only one button at a time can be selected. (Create a ButtonGroup object and use its &lt;code&gt;add&lt;/code&gt; method to include the JRadioButton objects in the group.)</source>
          <target state="translated">An implementation of a radio button -- an item that can be selected or deselected, and which displays its state to the user. Used with a &lt;a href=&quot;buttongroup&quot;&gt; &lt;code&gt;ButtonGroup&lt;/code&gt; &lt;/a&gt; object to create a group of buttons in which only one button at a time can be selected. (Create a ButtonGroup object and use its &lt;code&gt;add&lt;/code&gt; method to include the JRadioButton objects in the group.)</target>
        </trans-unit>
        <trans-unit id="239da6fe4a0d364987ba87bd481fb3405bc03aa9" translate="yes" xml:space="preserve">
          <source>An implementation of a radio button menu item.</source>
          <target state="translated">An implementation of a radio button menu item.</target>
        </trans-unit>
        <trans-unit id="a877a65608e32d5e750021d152bc78e270800c59" translate="yes" xml:space="preserve">
          <source>An implementation of a radio button menu item. A &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; is a menu item that is part of a group of menu items in which only one item in the group can be selected. The selected item displays its selected state. Selecting it causes any other selected item to switch to the unselected state. To control the selected state of a group of radio button menu items, use a &lt;code&gt;ButtonGroup&lt;/code&gt; object.</source>
          <target state="translated">An implementation of a radio button menu item. A &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; is a menu item that is part of a group of menu items in which only one item in the group can be selected. The selected item displays its selected state. Selecting it causes any other selected item to switch to the unselected state. To control the selected state of a group of radio button menu items, use a &lt;code&gt;ButtonGroup&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="83e16ff908d7a7b9a44c42bc9ef5552caf56f976" translate="yes" xml:space="preserve">
          <source>An implementation of a scrollbar.</source>
          <target state="translated">An implementation of a scrollbar.</target>
        </trans-unit>
        <trans-unit id="9349bf7b6e31b8c0bd493d81ab8784054ee9d603" translate="yes" xml:space="preserve">
          <source>An implementation of a scrollbar. The user positions the knob in the scrollbar to determine the contents of the viewing area. The program typically adjusts the display so that the end of the scrollbar represents the end of the displayable contents, or 100% of the contents. The start of the scrollbar is the beginning of the displayable contents, or 0%. The position of the knob within those bounds then translates to the corresponding percentage of the displayable contents.</source>
          <target state="translated">An implementation of a scrollbar. The user positions the knob in the scrollbar to determine the contents of the viewing area. The program typically adjusts the display so that the end of the scrollbar represents the end of the displayable contents, or 100% of the contents. The start of the scrollbar is the beginning of the displayable contents, or 0%. The position of the knob within those bounds then translates to the corresponding percentage of the displayable contents.</target>
        </trans-unit>
        <trans-unit id="013f78343a814056cc801ac60a2695977a1a39dd" translate="yes" xml:space="preserve">
          <source>An implementation of a service provided by a module.</source>
          <target state="translated">An implementation of a service provided by a module.</target>
        </trans-unit>
        <trans-unit id="60b37e7d32c7e18cc92fcb89e563e9ca9a706b27" translate="yes" xml:space="preserve">
          <source>An implementation of a two-state button.</source>
          <target state="translated">An implementation of a two-state button.</target>
        </trans-unit>
        <trans-unit id="b2456412fcc2a95dfd0fbc17ec85190ef60dd249" translate="yes" xml:space="preserve">
          <source>An implementation of a two-state button. The &lt;code&gt;JRadioButton&lt;/code&gt; and &lt;code&gt;JCheckBox&lt;/code&gt; classes are subclasses of this class. For information on using them see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">An implementation of a two-state button. The &lt;code&gt;JRadioButton&lt;/code&gt; and &lt;code&gt;JCheckBox&lt;/code&gt; classes are subclasses of this class. For information on using them see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="e2d7e46b4a3c1e092f15da2e8d9c1f07ca46f14f" translate="yes" xml:space="preserve">
          <source>An implementation of an item in a menu.</source>
          <target state="translated">An implementation of an item in a menu.</target>
        </trans-unit>
        <trans-unit id="93572bb53f96007d4347786046697c6e31bb6ae2" translate="yes" xml:space="preserve">
          <source>An implementation of an item in a menu. A menu item is essentially a button sitting in a list. When the user selects the &quot;button&quot;, the action associated with the menu item is performed. A &lt;code&gt;JMenuItem&lt;/code&gt; contained in a &lt;code&gt;JPopupMenu&lt;/code&gt; performs exactly that function.</source>
          <target state="translated">An implementation of an item in a menu. A menu item is essentially a button sitting in a list. When the user selects the &quot;button&quot;, the action associated with the menu item is performed. A &lt;code&gt;JMenuItem&lt;/code&gt; contained in a &lt;code&gt;JPopupMenu&lt;/code&gt; performs exactly that function.</target>
        </trans-unit>
        <trans-unit id="64f1cb142516dfd57994c2f3220b5f90f4e6add5" translate="yes" xml:space="preserve">
          <source>An implementation of the &lt;code&gt;InvocationHandler&lt;/code&gt; interface for use with Java Remote Method Invocation (Java RMI).</source>
          <target state="translated">An implementation of the &lt;code&gt;InvocationHandler&lt;/code&gt; interface for use with Java Remote Method Invocation (Java RMI).</target>
        </trans-unit>
        <trans-unit id="b835531fdc052f784056f6cca934fcb6ac347c7f" translate="yes" xml:space="preserve">
          <source>An implementation of the &lt;code&gt;InvocationHandler&lt;/code&gt; interface for use with Java Remote Method Invocation (Java RMI). This invocation handler can be used in conjunction with a dynamic proxy instance as a replacement for a pregenerated stub class.</source>
          <target state="translated">An implementation of the &lt;code&gt;InvocationHandler&lt;/code&gt; interface for use with Java Remote Method Invocation (Java RMI). This invocation handler can be used in conjunction with a dynamic proxy instance as a replacement for a pregenerated stub class.</target>
        </trans-unit>
        <trans-unit id="cb76c2bbb6d4388d959e0ce9996f398b1e4a7c7f" translate="yes" xml:space="preserve">
          <source>An implementation of the AbstractDocument.Content interface implemented using a gapped buffer similar to that used by emacs.</source>
          <target state="translated">An implementation of the AbstractDocument.Content interface implemented using a gapped buffer similar to that used by emacs.</target>
        </trans-unit>
        <trans-unit id="4e3bbfb97051cb40468add04f97d563b6af55f32" translate="yes" xml:space="preserve">
          <source>An implementation of the AbstractDocument.Content interface implemented using a gapped buffer similar to that used by emacs. The underlying storage is a array of unicode characters with a gap somewhere. The gap is moved to the location of changes to take advantage of common behavior where most changes are in the same location. Changes that occur at a gap boundary are generally cheap and moving the gap is generally cheaper than moving the array contents directly to accommodate the change.</source>
          <target state="translated">An implementation of the AbstractDocument.Content interface implemented using a gapped buffer similar to that used by emacs. The underlying storage is a array of unicode characters with a gap somewhere. The gap is moved to the location of changes to take advantage of common behavior where most changes are in the same location. Changes that occur at a gap boundary are generally cheap and moving the gap is generally cheaper than moving the array contents directly to accommodate the change.</target>
        </trans-unit>
        <trans-unit id="3971323a368da59e53ab8f0f88e5069b9f919701" translate="yes" xml:space="preserve">
          <source>An implementation of the AbstractDocument.Content interface that is a brute force implementation that is useful for relatively small documents and/or debugging.</source>
          <target state="translated">An implementation of the AbstractDocument.Content interface that is a brute force implementation that is useful for relatively small documents and/or debugging.</target>
        </trans-unit>
        <trans-unit id="be326d41db13de5593b60d826dc128edd75be431" translate="yes" xml:space="preserve">
          <source>An implementation of the AbstractDocument.Content interface that is a brute force implementation that is useful for relatively small documents and/or debugging. It manages the character content as a simple character array. It is also quite inefficient.</source>
          <target state="translated">An implementation of the AbstractDocument.Content interface that is a brute force implementation that is useful for relatively small documents and/or debugging. It manages the character content as a simple character array. It is also quite inefficient.</target>
        </trans-unit>
        <trans-unit id="69ed823f36724189db7fd62243604631efe57d0e" translate="yes" xml:space="preserve">
          <source>An implementation of the Icon interface that paints Icons from Images.</source>
          <target state="translated">An implementation of the Icon interface that paints Icons from Images.</target>
        </trans-unit>
        <trans-unit id="a7177d173f2e8a1a6abe4f50c9e7a797a6dd934f" translate="yes" xml:space="preserve">
          <source>An implementation of the Icon interface that paints Icons from Images. Images that are created from a URL, filename or byte array are preloaded using MediaTracker to monitor the loaded state of the image.</source>
          <target state="translated">An implementation of the Icon interface that paints Icons from Images. Images that are created from a URL, filename or byte array are preloaded using MediaTracker to monitor the loaded state of the image.</target>
        </trans-unit>
        <trans-unit id="96df4d6c9314ffee9e9b2c1ebcfd74ffab3cd3e3" translate="yes" xml:space="preserve">
          <source>An implementation of the document interface to serve as a basis for implementing various kinds of documents.</source>
          <target state="translated">An implementation of the document interface to serve as a basis for implementing various kinds of documents.</target>
        </trans-unit>
        <trans-unit id="7a86febcf3a11aad32fbab52b8d0f7a2bdb98755" translate="yes" xml:space="preserve">
          <source>An implementation of the document interface to serve as a basis for implementing various kinds of documents. At this level there is very little policy, so there is a corresponding increase in difficulty of use.</source>
          <target state="translated">An implementation of the document interface to serve as a basis for implementing various kinds of documents. At this level there is very little policy, so there is a corresponding increase in difficulty of use.</target>
        </trans-unit>
        <trans-unit id="5756aff0e44958a2c776a7455c2712790e18167b" translate="yes" xml:space="preserve">
          <source>An implementation of this interface may prohibit truncation when connected to an entity, typically a file, opened with the &lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt;&lt;code&gt;APPEND&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">이 인터페이스의 구현은 엔티티, 일반적으로 &lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt; &lt;code&gt;APPEND&lt;/code&gt; &lt;/a&gt; 옵션으로 열린 파일에 연결될 때 잘림을 금지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ba7010f6739cb6575395956999483b72deadec7" translate="yes" xml:space="preserve">
          <source>An implementation of this interface may support additional implementation specific options.</source>
          <target state="translated">이 인터페이스의 구현은 추가 구현 특정 옵션을 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9987dbb34795ed4f7e78e9ccc836ab83c4edcc75" translate="yes" xml:space="preserve">
          <source>An implementation of this interface must define a &lt;code&gt;compareTo&lt;/code&gt; method that provides an ordering consistent with its &lt;code&gt;getDelay&lt;/code&gt; method.</source>
          <target state="translated">이 인터페이스의 구현은 &lt;code&gt;getDelay&lt;/code&gt; 메소드 와 일치하는 순서를 제공하는 &lt;code&gt;compareTo&lt;/code&gt; 메소드를 정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="684ed5694e213a18d64f9066d1d2f267305a6153" translate="yes" xml:space="preserve">
          <source>An implementation of this interface should be serializable and should implement &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;true&lt;/code&gt; when passed an instance that represents the same (functionally equivalent) client socket factory, and &lt;code&gt;false&lt;/code&gt; otherwise (and it should also implement &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; consistently with its &lt;code&gt;Object.equals&lt;/code&gt; implementation).</source>
          <target state="translated">An implementation of this interface should be serializable and should implement &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt; to return &lt;code&gt;true&lt;/code&gt; when passed an instance that represents the same (functionally equivalent) client socket factory, and &lt;code&gt;false&lt;/code&gt; otherwise (and it should also implement &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; consistently with its &lt;code&gt;Object.equals&lt;/code&gt; implementation).</target>
        </trans-unit>
        <trans-unit id="c417482fd05c70e7cd9181484ddd23fb19d04ce5" translate="yes" xml:space="preserve">
          <source>An implementation of this interface should implement &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;true&lt;/code&gt; when passed an instance that represents the same (functionally equivalent) server socket factory, and &lt;code&gt;false&lt;/code&gt; otherwise (and it should also implement &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; consistently with its &lt;code&gt;Object.equals&lt;/code&gt; implementation).</source>
          <target state="translated">An implementation of this interface should implement &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt; to return &lt;code&gt;true&lt;/code&gt; when passed an instance that represents the same (functionally equivalent) server socket factory, and &lt;code&gt;false&lt;/code&gt; otherwise (and it should also implement &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; consistently with its &lt;code&gt;Object.equals&lt;/code&gt; implementation).</target>
        </trans-unit>
        <trans-unit id="351575b04c66e198d4cc717d82c655e6119d7292" translate="yes" xml:space="preserve">
          <source>An implementation of this method may perform arbitrary lookahead by returning &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt;&lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt;&lt;/a&gt; until it receives sufficient input.</source>
          <target state="translated">이 메소드의 구현은 충분한 입력을받을 때까지 &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt; &lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt; &lt;/a&gt; 를 리턴하여 임의의 미리보기를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dac848b4c389f4f581fc3bdf751e940dc491fd9b" translate="yes" xml:space="preserve">
          <source>An implementation of this method might remove/destroy a Subject's Principals and Credentials.</source>
          <target state="translated">이 방법을 구현하면 주체의 교장 및 자격 증명을 제거 / 파기 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3029e0ce474354a0401e8451128e358790559db" translate="yes" xml:space="preserve">
          <source>An implementation of this method must arrange for any other thread that is blocked in a selection operation upon this selector to return immediately as if by invoking the &lt;a href=&quot;../selector#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">An implementation of this method must arrange for any other thread that is blocked in a selection operation upon this selector to return immediately as if by invoking the &lt;a href=&quot;../selector#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="7ff47ed40388a7cf01eea84e2772e1cb2fe9d5a0" translate="yes" xml:space="preserve">
          <source>An implementation of this method must arrange for any other thread that is blocked in a selection operation upon this selector to return immediately as if by invoking the &lt;a href=&quot;../selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드의 구현은,이 셀렉터의 선택 조작으로 블록 된 다른 thread가 &lt;a href=&quot;../selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하는 것처럼, 즉시 복귀하도록 배치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="38484a30e2ef54b7a5a25f0a9d10fcdf555fdf96" translate="yes" xml:space="preserve">
          <source>An implementation of this method must arrange for any other thread that is blocked in an I/O operation upon this channel to return immediately, either by throwing an exception or by returning normally.</source>
          <target state="translated">이 메소드의 구현은이 채널에서 I / O 조작으로 차단 된 다른 스레드가 예외를 발생 시키거나 정상적으로 리턴함으로써 즉시 리턴되도록 배열해야합니다.</target>
        </trans-unit>
        <trans-unit id="95d8b4dd7dc3c5da67e9a53ccd1f149ce3543cbc" translate="yes" xml:space="preserve">
          <source>An implementation of this method must either return a class with the given name or throw an exception.</source>
          <target state="translated">An implementation of this method must either return a class with the given name or throw an exception.</target>
        </trans-unit>
        <trans-unit id="a718bfa3486d11fe42ba8cb39e7ab90c482e82b6" translate="yes" xml:space="preserve">
          <source>An implementation of this method must either return a proxy class that implements the named interfaces or throw an exception.</source>
          <target state="translated">An implementation of this method must either return a proxy class that implements the named interfaces or throw an exception.</target>
        </trans-unit>
        <trans-unit id="10551bcca1cdf5948cc92052f64f3152c034394b" translate="yes" xml:space="preserve">
          <source>An implementation should attempt to comply with the maximum packet size configuration. However, if the maximum packet size is too small to hold a minimal record, an implementation may try to generate as minimal records as possible. This may cause a generated packet to be larger than the maximum packet size.</source>
          <target state="translated">An implementation should attempt to comply with the maximum packet size configuration. However, if the maximum packet size is too small to hold a minimal record, an implementation may try to generate as minimal records as possible. This may cause a generated packet to be larger than the maximum packet size.</target>
        </trans-unit>
        <trans-unit id="a9d9e1f95ab78f9e1c8d216a363e650fa41f57e1" translate="yes" xml:space="preserve">
          <source>An implementation specific string describing the error that occurred.</source>
          <target state="translated">An implementation specific string describing the error that occurred.</target>
        </trans-unit>
        <trans-unit id="aeaa1f4673b0627db8074edb4f1929d0257d797e" translate="yes" xml:space="preserve">
          <source>An implementation that has the desired features, or &lt;code&gt;null&lt;/code&gt; if none found.</source>
          <target state="translated">An implementation that has the desired features, or &lt;code&gt;null&lt;/code&gt; if none found.</target>
        </trans-unit>
        <trans-unit id="e6d74063ebc6bfb730b3825fc3dc30d6474bdc77" translate="yes" xml:space="preserve">
          <source>An implementation when choosing whether to apply any of the LCD text hint values may take into account factors including requiring color depth of the destination to be at least 15 bits per pixel (ie 5 bits per color component), characteristics of a font such as whether embedded bitmaps may produce better results, or when displaying to a non-local networked display device enabling it only if suitable protocols are available, or ignoring the hint if performing very high resolution rendering or the target device is not appropriate: eg when printing.</source>
          <target state="translated">An implementation when choosing whether to apply any of the LCD text hint values may take into account factors including requiring color depth of the destination to be at least 15 bits per pixel (ie 5 bits per color component), characteristics of a font such as whether embedded bitmaps may produce better results, or when displaying to a non-local networked display device enabling it only if suitable protocols are available, or ignoring the hint if performing very high resolution rendering or the target device is not appropriate: eg when printing.</target>
        </trans-unit>
        <trans-unit id="d77c0671baecd4b2e337ef2dfa7017c12fdde83d" translate="yes" xml:space="preserve">
          <source>An implementation-reserved element.</source>
          <target state="translated">An implementation-reserved element.</target>
        </trans-unit>
        <trans-unit id="58fda3455b3a038c0f6e68de6cb19fc938bbe7ea" translate="yes" xml:space="preserve">
          <source>An implementation-reserved element. This is not the element you are looking for.</source>
          <target state="translated">구현 예약 요소. 이것은 당신이 찾고있는 요소가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="ab78c901c447955df90aba2467177e73e28b91db" translate="yes" xml:space="preserve">
          <source>An implementation-reserved type.</source>
          <target state="translated">An implementation-reserved type.</target>
        </trans-unit>
        <trans-unit id="8bd0e138fb5948f3b621a84e0a7a6553ab374e64" translate="yes" xml:space="preserve">
          <source>An implementation-reserved type. This is not the type you are looking for.</source>
          <target state="translated">구현 예약 유형입니다. 찾고있는 유형이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="8e4e654ee8bd8f105367159f12e9bbb79f615f72" translate="yes" xml:space="preserve">
          <source>An implementer receives notification when the app is asked to show its about dialog.</source>
          <target state="translated">An implementer receives notification when the app is asked to show its about dialog.</target>
        </trans-unit>
        <trans-unit id="690c7a8983eb65d3669a77410070d6e8894cd3f5" translate="yes" xml:space="preserve">
          <source>An implementor can respond to requests to print documents that the app has been registered to handle.</source>
          <target state="translated">An implementor can respond to requests to print documents that the app has been registered to handle.</target>
        </trans-unit>
        <trans-unit id="fc3b7a5209bc81a870f20eaf79db612ad4748309" translate="yes" xml:space="preserve">
          <source>An implementor determines if requests to quit this application should proceed or cancel.</source>
          <target state="translated">An implementor determines if requests to quit this application should proceed or cancel.</target>
        </trans-unit>
        <trans-unit id="2b28119b328676d09c96a310999fefb3d8c8546e" translate="yes" xml:space="preserve">
          <source>An implementor is notified when the app is asked to show its preferences UI.</source>
          <target state="translated">An implementor is notified when the app is asked to show its preferences UI.</target>
        </trans-unit>
        <trans-unit id="8206702e7c6afe0996171e308e22656debc11a0a" translate="yes" xml:space="preserve">
          <source>An implementor is notified when the application is asked to open a URI.</source>
          <target state="translated">An implementor is notified when the application is asked to open a URI.</target>
        </trans-unit>
        <trans-unit id="2f72cafecfc588eb0d58d7055d013f519d3fdfae" translate="yes" xml:space="preserve">
          <source>An implementor is notified when the application is asked to open a list of files.</source>
          <target state="translated">An implementor is notified when the application is asked to open a list of files.</target>
        </trans-unit>
        <trans-unit id="68522838b88bf64e4e84ba893135c5e8bf4b299d" translate="yes" xml:space="preserve">
          <source>An important method that must be implemented by each subclass is the &lt;code&gt;implies&lt;/code&gt; method to compare Permissions. Basically, &quot;permission p1 implies permission p2&quot; means that if one is granted permission p1, one is naturally granted permission p2. Thus, this is not an equality test, but rather more of a subset test.</source>
          <target state="translated">각 서브 클래스에 의해 구현되어야하는 중요한 방법은 권한을 비교하는 방법을 &lt;code&gt;implies&lt;/code&gt; 합니다. 기본적으로 &quot;권한 p1은 권한 p2를 의미합니다&quot;는 권한 p1이 부여되면 당연히 권한 p2가 부여됨을 의미합니다. 따라서, 이것은 평등 테스트가 아니라 부분 집합 테스트입니다.</target>
        </trans-unit>
        <trans-unit id="b43a06b6bc405b50e28d4bfa44c4fc2d3089b683" translate="yes" xml:space="preserve">
          <source>An important method to define is the &lt;a href=&quot;#getPropertyPrefix()&quot;&gt;&lt;code&gt;getPropertyPrefix()&lt;/code&gt;&lt;/a&gt; method which is used as the basis of the keys used to fetch defaults from the UIManager. The string should reflect the type of TextUI (eg. TextField, TextArea, etc) without the particular LAF part of the name (eg Metal, Motif, etc).</source>
          <target state="translated">An important method to define is the &lt;a href=&quot;#getPropertyPrefix()&quot;&gt; &lt;code&gt;getPropertyPrefix()&lt;/code&gt; &lt;/a&gt; method which is used as the basis of the keys used to fetch defaults from the UIManager. The string should reflect the type of TextUI (eg. TextField, TextArea, etc) without the particular LAF part of the name (eg Metal, Motif, etc).</target>
        </trans-unit>
        <trans-unit id="79721f1b5e66f2c7a3ae4d7c973db543278e32d6" translate="yes" xml:space="preserve">
          <source>An important property of the directory stream's &lt;code&gt;Iterator&lt;/code&gt; is that its &lt;a href=&quot;../../util/iterator#hasNext()&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; method is guaranteed to read-ahead by at least one element. If &lt;code&gt;hasNext&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;, and is followed by a call to the &lt;code&gt;next&lt;/code&gt; method, it is guaranteed that the &lt;code&gt;next&lt;/code&gt; method will not throw an exception due to an I/O error, or because the stream has been &lt;a href=&quot;../../io/closeable#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Iterator&lt;/code&gt; does not support the &lt;a href=&quot;../../util/iterator#remove()&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; operation.</source>
          <target state="translated">An important property of the directory stream's &lt;code&gt;Iterator&lt;/code&gt; is that its &lt;a href=&quot;../../util/iterator#hasNext()&quot;&gt; &lt;code&gt;hasNext&lt;/code&gt; &lt;/a&gt; method is guaranteed to read-ahead by at least one element. If &lt;code&gt;hasNext&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; , and is followed by a call to the &lt;code&gt;next&lt;/code&gt; method, it is guaranteed that the &lt;code&gt;next&lt;/code&gt; method will not throw an exception due to an I/O error, or because the stream has been &lt;a href=&quot;../../io/closeable#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;. The &lt;code&gt;Iterator&lt;/code&gt; does not support the &lt;a href=&quot;../../util/iterator#remove()&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt; operation.</target>
        </trans-unit>
        <trans-unit id="266b129cb42c0c5ae325fff8527f94dd650750e2" translate="yes" xml:space="preserve">
          <source>An important property of the directory stream's &lt;code&gt;Iterator&lt;/code&gt; is that its &lt;a href=&quot;../../util/iterator#hasNext--&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; method is guaranteed to read-ahead by at least one element. If &lt;code&gt;hasNext&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;, and is followed by a call to the &lt;code&gt;next&lt;/code&gt; method, it is guaranteed that the &lt;code&gt;next&lt;/code&gt; method will not throw an exception due to an I/O error, or because the stream has been &lt;a href=&quot;../../io/closeable#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Iterator&lt;/code&gt; does not support the &lt;a href=&quot;../../util/iterator#remove--&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; operation.</source>
          <target state="translated">디렉토리 스트림의의 중요한 특성 &lt;code&gt;Iterator&lt;/code&gt; 그 때문이다 &lt;a href=&quot;../../util/iterator#hasNext--&quot;&gt; &lt;code&gt;hasNext&lt;/code&gt; 의&lt;/a&gt; 방법은 미리 읽기 위해 적어도 하나 개의 요소에 의해 보장된다. 경우 &lt;code&gt;hasNext&lt;/code&gt; 의 방법은 반환 &lt;code&gt;true&lt;/code&gt; 과의 호출에 의해 다음에 &lt;code&gt;next&lt;/code&gt; 방법, 보장되어 &lt;code&gt;next&lt;/code&gt; 스트림이되어 있기 때문에 방법으로 인해 I / O 오류로 예외를 던지거나하지 않습니다 &lt;a href=&quot;../../io/closeable#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Iterator&lt;/code&gt; 지원하지 않습니다 &lt;a href=&quot;../../util/iterator#remove--&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt; 작업을.</target>
        </trans-unit>
        <trans-unit id="5f2d5128152fd4379f7fdc6772521870216ccc2b" translate="yes" xml:space="preserve">
          <source>An incoming &lt;code&gt;LogRecord&lt;/code&gt; has a type that is greater than a pre-defined level, the &lt;code&gt;pushLevel&lt;/code&gt;.</source>
          <target state="translated">들어오는 &lt;code&gt;LogRecord&lt;/code&gt; 의 유형은 사전 정의 된 레벨 인 &lt;code&gt;pushLevel&lt;/code&gt; 보다 큽니다 .</target>
        </trans-unit>
        <trans-unit id="661e7a84e5a7fe4804ae49cc3aa7fd00e80e1b93" translate="yes" xml:space="preserve">
          <source>An independent &lt;code&gt;ImageTranscoder&lt;/code&gt; essentially takes on the same role as the writer plug-in in the above examples. It must be familiar with the private interfaces used by both the reader and writer plug-ins, and manually instantiate an object that will be usable by the writer. The resulting metadata objects may be used by the writer directly.</source>
          <target state="translated">독립적 인 &lt;code&gt;ImageTranscoder&lt;/code&gt; 는 기본적으로 위 예제의 작성기 플러그인과 동일한 역할을 수행합니다. 리더 및 라이터 플러그인에서 사용하는 개인 인터페이스에 익숙해야하며 라이터가 사용할 수있는 오브젝트를 수동으로 인스턴스화해야합니다. 결과 메타 데이터 개체는 기록기에서 직접 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05d96f63a136332d81209172b895e9b34f9012dd" translate="yes" xml:space="preserve">
          <source>An independently generated &lt;code&gt;UID&lt;/code&gt; instance is unique over time with respect to the host it is generated on as long as the host requires more than one millisecond to reboot and its system clock is never set backward. A globally unique identifier can be constructed by pairing a &lt;code&gt;UID&lt;/code&gt; instance with a unique host identifier, such as an IP address.</source>
          <target state="translated">An independently generated &lt;code&gt;UID&lt;/code&gt; instance is unique over time with respect to the host it is generated on as long as the host requires more than one millisecond to reboot and its system clock is never set backward. A globally unique identifier can be constructed by pairing a &lt;code&gt;UID&lt;/code&gt; instance with a unique host identifier, such as an IP address.</target>
        </trans-unit>
        <trans-unit id="8c180fe4b44c4db4386f2c8f4fb4fbde76583571" translate="yes" xml:space="preserve">
          <source>An indexed property may also provide simple non-indexed read and write methods. If these are present, they read and write arrays of the type returned by the indexed read method.</source>
          <target state="translated">인덱싱 된 속성은 간단한 비 인덱스 읽기 및 쓰기 방법을 제공 할 수도 있습니다. 이들이 존재하면 인덱스 된 read 메소드가 리턴 한 유형의 배열을 읽고 씁니다.</target>
        </trans-unit>
        <trans-unit id="1909650ffded906938461fc87443840f926f9fd9" translate="yes" xml:space="preserve">
          <source>An indication that this element of the information model is no longer recommended for use. A set of MBeans defined by an application is collectively called an &lt;em&gt;information model&lt;/em&gt;. The convention is for the value of this field to contain a string that is the version of the model in which the element was first deprecated, followed by a space, followed by an explanation of the deprecation, for example &lt;code&gt;&quot;1.3 Replaced by the Capacity
 attribute&quot;&lt;/code&gt;.</source>
          <target state="translated">정보 모델의이 요소가 더 이상 사용되지 않는 것을 나타냅니다. 어플리케이션에 의해 정의 된 MBean 세트를 통칭하여 &lt;em&gt;정보 모델&lt;/em&gt; 이라고합니다 . 이 필드의 값은 요소가 먼저 사용되지 않는 모델의 버전 인 문자열을 포함하고 그 뒤에 공백이 있고 사용되지 않는 설명 (예 : &lt;code&gt;&quot;1.3 Replaced by the Capacity attribute&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="123ee2691b2456ef7899c00acbffd8004ea1bc3a" translate="yes" xml:space="preserve">
          <source>An information message</source>
          <target state="translated">An information message</target>
        </trans-unit>
        <trans-unit id="84111983447f98a00f462c48c3a8b61889803fe8" translate="yes" xml:space="preserve">
          <source>An informative annotation type used to indicate that an interface type declaration is intended to be a</source>
          <target state="translated">인터페이스 유형 선언이 의도 된 것임을 나타내는 데 사용되는 정보 주석 유형</target>
        </trans-unit>
        <trans-unit id="807d79486c916efb57382f35de4f4bd60e687255" translate="yes" xml:space="preserve">
          <source>An infrastructure for painting that includes double buffering and support for borders. For more information see &lt;a href=&quot;http://www.oracle.com/technetwork/java/painting-140037.html#swing&quot;&gt;Painting&lt;/a&gt; and &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/border.html&quot;&gt;How to Use Borders&lt;/a&gt;, both of which are sections in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">An infrastructure for painting that includes double buffering and support for borders. For more information see &lt;a href=&quot;http://www.oracle.com/technetwork/java/painting-140037.html#swing&quot;&gt;Painting&lt;/a&gt; and &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/border.html&quot;&gt;How to Use Borders&lt;/a&gt;, both of which are sections in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="1dc654963ffe8d960aedcdd054f9d84c6189e372" translate="yes" xml:space="preserve">
          <source>An input method that is enabled for composition interprets incoming events for both composition and control purposes, while a disabled input method does not interpret events for composition. Note however that events are passed on to the input method regardless whether it is enabled or not, and that an input method that is disabled for composition may still interpret events for control purposes, including to enable or disable itself for composition.</source>
          <target state="translated">An input method that is enabled for composition interprets incoming events for both composition and control purposes, while a disabled input method does not interpret events for composition. Note however that events are passed on to the input method regardless whether it is enabled or not, and that an input method that is disabled for composition may still interpret events for control purposes, including to enable or disable itself for composition.</target>
        </trans-unit>
        <trans-unit id="4e928c4464b8227ec8c5cb0c2a41ce000766e206" translate="yes" xml:space="preserve">
          <source>An input stream for reading the resource or &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">An input stream for reading the resource or &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89b936e093f962e369dc465cd09398f51ef3fd1f" translate="yes" xml:space="preserve">
          <source>An input stream for reading the resource, or &lt;code&gt;null&lt;/code&gt; if the resource could not be found</source>
          <target state="translated">리소스를 읽기위한 입력 스트림. 리소스를 찾을 수없는 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8fe4f71a0cdebcdad9e0bd3113ba606830111696" translate="yes" xml:space="preserve">
          <source>An input stream for reading the resource, or null if the resource could not be found</source>
          <target state="translated">리소스를 읽기위한 입력 스트림. 리소스를 찾을 수없는 경우 null</target>
        </trans-unit>
        <trans-unit id="a101557b7b9608ea50fb5af7b6be52b362f412f5" translate="yes" xml:space="preserve">
          <source>An input stream for reading the resource; &lt;code&gt;null&lt;/code&gt; if the resource could not be found, the resource is in a package that is not opened unconditionally, or access to the resource is denied by the security manager.</source>
          <target state="translated">An input stream for reading the resource; &lt;code&gt;null&lt;/code&gt; if the resource could not be found, the resource is in a package that is not opened unconditionally, or access to the resource is denied by the security manager.</target>
        </trans-unit>
        <trans-unit id="c63b970bd0ed0ceae17f2ea9684a00b977d2a1c2" translate="yes" xml:space="preserve">
          <source>An input stream that also maintains a checksum of the data being read.</source>
          <target state="translated">읽고있는 데이터의 체크섬을 유지하는 입력 스트림.</target>
        </trans-unit>
        <trans-unit id="b046fe3a3ebcdbc149d1ebd516a7345ecba04d64" translate="yes" xml:space="preserve">
          <source>An input stream that also maintains a checksum of the data being read. The checksum can then be used to verify the integrity of the input data.</source>
          <target state="translated">읽고있는 데이터의 체크섬을 유지하는 입력 스트림. 그런 다음 체크섬을 사용하여 입력 데이터의 무결성을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93eaf3563f42e0b669553d20572655a49b714900" translate="yes" xml:space="preserve">
          <source>An input stream that contains a stream of values representing an instance of an SQL structured type or an SQL distinct type.</source>
          <target state="translated">An input stream that contains a stream of values representing an instance of an SQL structured type or an SQL distinct type.</target>
        </trans-unit>
        <trans-unit id="6542cd0c8b333f572f834026b67a174491ee31f5" translate="yes" xml:space="preserve">
          <source>An input stream that contains a stream of values representing an instance of an SQL structured type or an SQL distinct type. This interface, used only for custom mapping, is used by the driver behind the scenes, and a programmer never directly invokes &lt;code&gt;SQLInput&lt;/code&gt; methods. The</source>
          <target state="translated">An input stream that contains a stream of values representing an instance of an SQL structured type or an SQL distinct type. This interface, used only for custom mapping, is used by the driver behind the scenes, and a programmer never directly invokes &lt;code&gt;SQLInput&lt;/code&gt; methods. The</target>
        </trans-unit>
        <trans-unit id="42c78579682dbcae939f075491a7f518a354fc2b" translate="yes" xml:space="preserve">
          <source>An input stream to read the resource or an empty &lt;code&gt;Optional&lt;/code&gt; if not found</source>
          <target state="translated">An input stream to read the resource or an empty &lt;code&gt;Optional&lt;/code&gt; if not found</target>
        </trans-unit>
        <trans-unit id="f48190790d32ffb7eb6140bf04397841789e7795" translate="yes" xml:space="preserve">
          <source>An input stream used for custom mapping user-defined types (UDTs).</source>
          <target state="translated">An input stream used for custom mapping user-defined types (UDTs).</target>
        </trans-unit>
        <trans-unit id="7a8edba511e7de625652b452ec422ef0524a1330" translate="yes" xml:space="preserve">
          <source>An input stream used for custom mapping user-defined types (UDTs). An &lt;code&gt;SQLInputImpl&lt;/code&gt; object is an input stream that contains a stream of values that are the attributes of a UDT.</source>
          <target state="translated">An input stream used for custom mapping user-defined types (UDTs). An &lt;code&gt;SQLInputImpl&lt;/code&gt; object is an input stream that contains a stream of values that are the attributes of a UDT.</target>
        </trans-unit>
        <trans-unit id="60c1e14adfebaf1589be1877c42b3efed57e311d" translate="yes" xml:space="preserve">
          <source>An input stream used for custom mapping user-defined types (UDTs). An &lt;code&gt;SQLInputImpl&lt;/code&gt; object is an input stream that contains a stream of values that are the attributes of a UDT. This class is used by the driver behind the scenes when the method &lt;code&gt;getObject&lt;/code&gt; is called on an SQL structured or distinct type that has a custom mapping; a programmer never invokes &lt;code&gt;SQLInputImpl&lt;/code&gt; methods directly.</source>
          <target state="translated">An input stream used for custom mapping user-defined types (UDTs). An &lt;code&gt;SQLInputImpl&lt;/code&gt; object is an input stream that contains a stream of values that are the attributes of a UDT. This class is used by the driver behind the scenes when the method &lt;code&gt;getObject&lt;/code&gt; is called on an SQL structured or distinct type that has a custom mapping; a programmer never invokes &lt;code&gt;SQLInputImpl&lt;/code&gt; methods directly.</target>
        </trans-unit>
        <trans-unit id="cbb5c21484a86a086f164d6835290dafafd6ca84" translate="yes" xml:space="preserve">
          <source>An instance created with this constructor cannot be used in a query.</source>
          <target state="translated">An instance created with this constructor cannot be used in a query.</target>
        </trans-unit>
        <trans-unit id="10e0ef8fdd647a154368b89804fb15cd0997512e" translate="yes" xml:space="preserve">
          <source>An instance implementing this interface must conform to</source>
          <target state="translated">이 인터페이스를 구현하는 인스턴스는 다음을 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="33f9efa50517c9254c9fa7703576b4056122b7d8" translate="yes" xml:space="preserve">
          <source>An instance initializer.</source>
          <target state="translated">인스턴스 이니셜 라이저.</target>
        </trans-unit>
        <trans-unit id="820192a3f7b4ec34a053de23b328df7b031a1589" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;../../../../java.base/java/util/gregoriancalendar&quot;&gt;&lt;code&gt;GregorianCalendar&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">An instance of &lt;a href=&quot;../../../../java.base/java/util/gregoriancalendar&quot;&gt; &lt;code&gt;GregorianCalendar&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d0765d8e5a8989317f357c51d744396e7b88c40c" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;DataFlavor&lt;/code&gt; encapsulates a content type as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt; and &lt;a href=&quot;http://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC 2046&lt;/a&gt;. A content type is typically referred to as a MIME type.</source>
          <target state="translated">An instance of &lt;code&gt;DataFlavor&lt;/code&gt; encapsulates a content type as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt; and &lt;a href=&quot;http://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC 2046&lt;/a&gt;. A content type is typically referred to as a MIME type.</target>
        </trans-unit>
        <trans-unit id="19a2366adf07d053397df3b88416af72bf0c1d9e" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;HashMap&lt;/code&gt; has two parameters that affect its performance:</source>
          <target state="translated">&lt;code&gt;HashMap&lt;/code&gt; 의 인스턴스에는 성능에 영향을주는 두 가지 매개 변수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9ef1be25739cbfd11c07da46cd5070a585fc279" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;Hashtable&lt;/code&gt; has two parameters that affect its performance:</source>
          <target state="translated">&lt;code&gt;Hashtable&lt;/code&gt; 인스턴스에는 성능에 영향을주는 두 가지 매개 변수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="866643f6e9b12b81170b9418630816aff698de6b" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;JTextField&lt;/code&gt;.</source>
          <target state="translated">An instance of &lt;code&gt;JTextField&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e271d20b1969fdb8d1f5d3487af29f542ed5b34" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;LdapName&lt;/code&gt; consisting of the components at indexes in the range [0,posn). If posn is zero, an empty LDAP name is returned.</source>
          <target state="translated">[0, posn) 범위의 인덱스에있는 구성 요소로 구성된 &lt;code&gt;LdapName&lt;/code&gt; 인스턴스입니다 . posn이 0이면 빈 LDAP 이름이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="efb5b0e591a40b3a51301a06032e298cfe247108" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;LdapName&lt;/code&gt; consisting of the components at indexes in the range [posn,size()). If posn is equal to size(), an empty LDAP name is returned.</source>
          <target state="translated">[posn, size ()) 범위의 인덱스에있는 구성 요소로 구성된 &lt;code&gt;LdapName&lt;/code&gt; 인스턴스입니다 . posn이 size ()와 같으면 빈 LDAP 이름이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="922ca83f5ecb090d0fb6534bfc5bb215b81d10ae" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;MBeanInfo&lt;/code&gt; allowing all attributes and actions exposed by this Dynamic MBean to be retrieved.</source>
          <target state="translated">이 Dynamic MBean에 의해 공개되는 모든 속성과 액션 을 &lt;code&gt;MBeanInfo&lt;/code&gt; 할 수 있는 MBeanInfo 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="f94f9a1e7ef6be69efac27449c54ac8552f8c170" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;MBeanInfo&lt;/code&gt; allowing the retrieval of all attributes and operations of this MBean.</source>
          <target state="translated">이 MBean의 모든 속성과 오퍼레이션 을 &lt;code&gt;MBeanInfo&lt;/code&gt; 할 수있는 MBeanInfo 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="c358c01703692af8c8f28c76777acb1d74106d65" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;Point&lt;/code&gt; representing the top-left corner of the object's bounds in the coordinate space of the screen; &lt;code&gt;null&lt;/code&gt; if this object or its parent are not on the screen</source>
          <target state="translated">An instance of &lt;code&gt;Point&lt;/code&gt; representing the top-left corner of the object's bounds in the coordinate space of the screen; &lt;code&gt;null&lt;/code&gt; if this object or its parent are not on the screen</target>
        </trans-unit>
        <trans-unit id="51a9d945754f6a0b885d5b7571460016bbef00a4" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;StringTokenizer&lt;/code&gt; behaves in one of two ways, depending on whether it was created with the &lt;code&gt;returnDelims&lt;/code&gt; flag having the value &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;StringTokenizer&lt;/code&gt; 인스턴스는 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 값을 갖는 &lt;code&gt;returnDelims&lt;/code&gt; 플래그 로 작성되었는지 여부에 따라 두 가지 방법 중 하나로 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="4d992cc6775d487c75f88c627c202ad84aa69c64" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;ThreadDeath&lt;/code&gt; is thrown in the victim thread when the (deprecated) &lt;a href=&quot;thread#stop()&quot;&gt;&lt;code&gt;Thread.stop()&lt;/code&gt;&lt;/a&gt; method is invoked.</source>
          <target state="translated">An instance of &lt;code&gt;ThreadDeath&lt;/code&gt; is thrown in the victim thread when the (deprecated) &lt;a href=&quot;thread#stop()&quot;&gt; &lt;code&gt;Thread.stop()&lt;/code&gt; &lt;/a&gt; method is invoked.</target>
        </trans-unit>
        <trans-unit id="4e5841bfa5594bb54259f2a2f9bb9a7e4a3e8d76" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;ThreadDeath&lt;/code&gt; is thrown in the victim thread when the (deprecated) &lt;a href=&quot;thread#stop--&quot;&gt;&lt;code&gt;Thread.stop()&lt;/code&gt;&lt;/a&gt; method is invoked.</source>
          <target state="translated">(더 이상 사용되지 않는) &lt;a href=&quot;thread#stop--&quot;&gt; &lt;code&gt;Thread.stop()&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 때 대상 스레드에서 &lt;code&gt;ThreadDeath&lt;/code&gt; 인스턴스 가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="f3ba992956d51c64959ad0f9e1116a3e4d9fe2ec" translate="yes" xml:space="preserve">
          <source>An instance of &lt;em&gt;J&lt;/em&gt; is reconstructed by calling a constructor with the appropriate reconstructed items from the &lt;code&gt;CompositeData&lt;/code&gt;. The constructor to be called will be determined at runtime based on the items actually present in the &lt;code&gt;CompositeData&lt;/code&gt;, given that this &lt;code&gt;
        CompositeData&lt;/code&gt; might come from an earlier version of &lt;em&gt;J&lt;/em&gt; where not all the items were present. A constructor is &lt;em&gt;applicable&lt;/em&gt; if all the properties named in its &lt;code&gt;@ConstructorParameters&lt;/code&gt; or &lt;code&gt;@ConstructorProperties&lt;/code&gt; annotation are present as items in the &lt;code&gt;CompositeData&lt;/code&gt;. If no constructor is applicable, then the attempt to reconstruct &lt;em&gt;J&lt;/em&gt; fails.</source>
          <target state="translated">An instance of &lt;em&gt;J&lt;/em&gt; is reconstructed by calling a constructor with the appropriate reconstructed items from the &lt;code&gt;CompositeData&lt;/code&gt; . The constructor to be called will be determined at runtime based on the items actually present in the &lt;code&gt;CompositeData&lt;/code&gt; , given that this &lt;code&gt; CompositeData&lt;/code&gt; might come from an earlier version of &lt;em&gt;J&lt;/em&gt; where not all the items were present. A constructor is &lt;em&gt;applicable&lt;/em&gt; if all the properties named in its &lt;code&gt;@ConstructorParameters&lt;/code&gt; or &lt;code&gt;@ConstructorProperties&lt;/code&gt; annotation are present as items in the &lt;code&gt;CompositeData&lt;/code&gt; . If no constructor is applicable, then the attempt to reconstruct &lt;em&gt;J&lt;/em&gt; fails.</target>
        </trans-unit>
        <trans-unit id="47ac091b99d498a0cb4fc92e75e5628fa385361d" translate="yes" xml:space="preserve">
          <source>An instance of &lt;em&gt;J&lt;/em&gt; is reconstructed by calling a constructor with the appropriate reconstructed items from the &lt;code&gt;CompositeData&lt;/code&gt;. The constructor to be called will be determined at runtime based on the items actually present in the &lt;code&gt;CompositeData&lt;/code&gt;, given that this &lt;code&gt;CompositeData&lt;/code&gt; might come from an earlier version of &lt;em&gt;J&lt;/em&gt; where not all the items were present. A constructor is &lt;em&gt;applicable&lt;/em&gt; if all the properties named in its &lt;code&gt;ConstructorProperties&lt;/code&gt; annotation are present as items in the &lt;code&gt;CompositeData&lt;/code&gt;. If no constructor is applicable, then the attempt to reconstruct &lt;em&gt;J&lt;/em&gt; fails.</source>
          <target state="translated">&lt;em&gt;J&lt;/em&gt; 의 인스턴스 는 &lt;code&gt;CompositeData&lt;/code&gt; 에서 적절한 재구성 된 항목으로 생성자를 호출하여 재구성됩니다 . 호출되는 생성자는 &lt;code&gt;CompositeData&lt;/code&gt; 에 실제로 존재하는 항목을 기반으로 런타임에 결정됩니다. 단 ,이 &lt;code&gt;CompositeData&lt;/code&gt; 는 모든 항목이 존재하지 않는 이전 버전의 &lt;em&gt;J&lt;/em&gt; 에서 올 수 있습니다 . &lt;code&gt;ConstructorProperties&lt;/code&gt; 주석에 이름이 지정된 모든 특성 이 &lt;code&gt;CompositeData&lt;/code&gt; 에 항목으로 존재 하는 경우 생성자가 &lt;em&gt;적용 가능&lt;/em&gt; 합니다 . 적용 가능한 생성자가 없으면 &lt;em&gt;J&lt;/em&gt; 를 재구성하려는 시도가 실패합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="829ed3db20241841f89453dc963921956452ce30" translate="yes" xml:space="preserve">
          <source>An instance of ModelMBeanInfo allowing retrieval all attributes, operations, and Notifications of this MBean.</source>
          <target state="translated">이 MBean의 모든 속성, 오퍼레이션 및 통지를 취득 할 수있는 ModelMBeanInfo 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="bc38c3c6d9d64be8b06e7c601d02aef42e02a890" translate="yes" xml:space="preserve">
          <source>An instance of Point representing the top-left corner of the object's bounds in the coordinate space of the screen; null if this object or its parent are not on the screen</source>
          <target state="translated">An instance of Point representing the top-left corner of the object's bounds in the coordinate space of the screen; null if this object or its parent are not on the screen</target>
        </trans-unit>
        <trans-unit id="ab3d2c174495ec561e6dabbe574b8bbe2b8f2270" translate="yes" xml:space="preserve">
          <source>An instance of a &lt;code&gt;Name&lt;/code&gt; may not be synchronized against concurrent multithreaded access if that access is not read-only.</source>
          <target state="translated">액세스가 읽기 전용이 아닌 경우 &lt;code&gt;Name&lt;/code&gt; 의 인스턴스는 동시 멀티 스레드 액세스와 동기화되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfba31fab178a2825633d83dd9c4b41758948065" translate="yes" xml:space="preserve">
          <source>An instance of a subclass of &lt;code&gt;CompiledScript&lt;/code&gt; to be executed later using one of its &lt;code&gt;eval&lt;/code&gt; methods of &lt;code&gt;CompiledScript&lt;/code&gt;.</source>
          <target state="translated">서브 클래스의 인스턴스 &lt;code&gt;CompiledScript&lt;/code&gt; 를들은 후 그 중 하나를 사용하여 실행되는 &lt;code&gt;eval&lt;/code&gt; 방법 &lt;code&gt;CompiledScript&lt;/code&gt; 를이 .</target>
        </trans-unit>
        <trans-unit id="e32bd5f78d7ce6e5bd2dde8ae781793f9a5cfe68" translate="yes" xml:space="preserve">
          <source>An instance of a subclass of &lt;code&gt;CompiledScript&lt;/code&gt; to be executed later using one of the &lt;code&gt;eval&lt;/code&gt; methods of &lt;code&gt;CompiledScript&lt;/code&gt;.</source>
          <target state="translated">서브 클래스의 인스턴스 &lt;code&gt;CompiledScript&lt;/code&gt; 를는 이후 중 하나를 사용하여 실행되는 &lt;code&gt;eval&lt;/code&gt; 방법 &lt;code&gt;CompiledScript&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="12670c655454d6cc906c7e42fdf38c2307aa12de" translate="yes" xml:space="preserve">
          <source>An instance of requested interface - null if the requested interface is unavailable, i. e. if compiled functions in the &lt;code&gt;ScriptEngine&lt;/code&gt; cannot be found matching the ones in the requested interface.</source>
          <target state="translated">요청 된 인터페이스의 인스턴스-요청 된 인터페이스를 사용할 수없는 경우, 즉 요청 된 인터페이스의 함수와 일치하는 &lt;code&gt;ScriptEngine&lt;/code&gt; 의 컴파일 된 함수를 찾을 수없는 경우 널 입니다.</target>
        </trans-unit>
        <trans-unit id="36803e60de529456b8ea1571671498d8c810d8d5" translate="yes" xml:space="preserve">
          <source>An instance of requested interface - null if the requested interface is unavailable, i. e. if compiled methods in the &lt;code&gt;ScriptEngine&lt;/code&gt; cannot be found matching the ones in the requested interface.</source>
          <target state="translated">요청 된 인터페이스의 인스턴스-요청 된 인터페이스를 사용할 수없는 경우 (예 : &lt;code&gt;ScriptEngine&lt;/code&gt; 의 컴파일 된 메소드를 요청 된 인터페이스의 메소드와 일치하는 것으로 찾을 수없는 경우)</target>
        </trans-unit>
        <trans-unit id="8e86ce0b7fec5deeecf8ca3a5100e75b8b0fb6c4" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;a href=&quot;pattern&quot;&gt;&lt;code&gt;Pattern&lt;/code&gt;&lt;/a&gt; class represents a regular expression that is specified in string form in a syntax similar to that used by Perl.</source>
          <target state="translated">&lt;a href=&quot;pattern&quot;&gt; &lt;code&gt;Pattern&lt;/code&gt; &lt;/a&gt; 클래스 의 인스턴스는 Perl에서 사용되는 구문과 유사한 구문으로 문자열 형식으로 지정된 정규식을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="829975f1f8d6e054d19ccd326eb7be36519c42b0" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;a href=&quot;url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; class, by contrast, represents the syntactic components of a URL together with some of the information required to access the resource that it describes. A URL must be absolute, that is, it must always specify a scheme. A URL string is parsed according to its scheme. A stream handler is always established for a URL, and in fact it is impossible to create a URL instance for a scheme for which no handler is available. Equality and hashing depend upon both the scheme and the Internet address of the host, if any; comparison is not defined. In other words, a URL is a structured string that supports the syntactic operation of resolution as well as the network I/O operations of looking up the host and opening a connection to the specified resource.</source>
          <target state="translated">반대로 &lt;a href=&quot;url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt; 클래스 의 인스턴스는 URL 의 구문 구성 요소와 설명하는 리소스에 액세스하는 데 필요한 일부 정보를 나타냅니다. URL은 절대적이어야합니다. 즉, 항상 체계를 지정해야합니다. URL 문자열은 해당 체계에 따라 구문 분석됩니다. 스트림 핸들러는 항상 URL에 대해 설정되며 실제로 핸들러를 사용할 수없는 체계에 대한 URL 인스턴스를 작성하는 것은 불가능합니다. 동일성과 해시는 호스트의 체계와 인터넷 주소 (있는 경우)에 따라 다릅니다. 비교가 정의되지 않았습니다. 즉, URL은 호스트의 조회 및 지정된 자원에 대한 연결을 여는 네트워크 I / O 조작뿐만 아니라 분석의 구문 조작 조작을 지원하는 구조화 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="8d8b348576ef3a363f54463b191b10c2fe34cbf3" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;AudioFileFormat&lt;/code&gt; class describes an audio file, including the file type, the file's length in bytes, the length in sample frames of the audio data contained in the file, and the format of the audio data.</source>
          <target state="translated">&lt;code&gt;AudioFileFormat&lt;/code&gt; 클래스 의 인스턴스는 파일 형식, 파일 길이 (바이트), 파일에 포함 된 오디오 데이터의 샘플 프레임 길이 및 오디오 데이터 형식을 포함하여 오디오 파일을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="a25922f31e1f2c2c824dd4d7100eaf591f63a2e4" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;BooleanControl.Type&lt;/code&gt; class identifies one kind of boolean control.</source>
          <target state="translated">&lt;code&gt;BooleanControl.Type&lt;/code&gt; 클래스 의 인스턴스는 한 종류의 부울 컨트롤을 식별 합니다 .</target>
        </trans-unit>
        <trans-unit id="dcb763debf3b5ee573b97b18af18a45a2f427519" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;BooleanControl.Type&lt;/code&gt; class identifies one kind of boolean control. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;BooleanControl.Type&lt;/code&gt; 클래스 의 인스턴스는 한 종류의 부울 컨트롤을 식별 합니다 . 정적 유형은 공통 유형에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="340f53d7be605024230df931e122f021460e07bd" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;CompoundControl.Type&lt;/code&gt; inner class identifies one kind of compound control.</source>
          <target state="translated">&lt;code&gt;CompoundControl.Type&lt;/code&gt; 내부 클래스 의 인스턴스는 한 종류의 복합 컨트롤을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="9037c8dcbd6d04c236d0a37b55011fae1af01ae8" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;CompoundControl.Type&lt;/code&gt; inner class identifies one kind of compound control. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;CompoundControl.Type&lt;/code&gt; 내부 클래스 의 인스턴스는 한 종류의 복합 컨트롤을 식별합니다. 정적 유형은 공통 유형에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="c8fc9b324b216b7afb95cfe339c3befeb519150d" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;EnumControl.Type&lt;/code&gt; inner class identifies one kind of enumerated control.</source>
          <target state="translated">&lt;code&gt;EnumControl.Type&lt;/code&gt; 내부 클래스 의 인스턴스는 한 종류의 열거 된 컨트롤을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="75545e40aa5c53d8773e5c01cd0e585b5868df57" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;EnumControl.Type&lt;/code&gt; inner class identifies one kind of enumerated control. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;EnumControl.Type&lt;/code&gt; 내부 클래스 의 인스턴스는 한 종류의 열거 된 컨트롤을 식별합니다. 정적 유형은 공통 유형에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="0e3cd6bc4a528475f8bbff9c32494251819c2131" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;FloatControl.Type&lt;/code&gt; inner class identifies one kind of float control.</source>
          <target state="translated">&lt;code&gt;FloatControl.Type&lt;/code&gt; 내부 클래스 의 인스턴스는 한 종류의 부동 제어를 식별합니다.</target>
        </trans-unit>
        <trans-unit id="c705d7a2e420aa5361515c55beee571e48109dc2" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;FloatControl.Type&lt;/code&gt; inner class identifies one kind of float control. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;FloatControl.Type&lt;/code&gt; 내부 클래스 의 인스턴스는 한 종류의 부동 제어를 식별합니다. 정적 유형은 공통 유형에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="b645efcd3edbd0569af6f31d52a839f29c578839" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Spring&lt;/code&gt; class can be visualized as a mechanical spring that provides a corrective force as the spring is compressed or stretched away from its preferred value. This force is modelled as linear function of the distance from the preferred value, but with two different constants -- one for the compressional force and one for the tensional one. Those constants are specified by the minimum and maximum values of the spring such that a spring at its minimum value produces an equal and opposite force to that which is created when it is at its maximum value. The difference between the &lt;em&gt;preferred&lt;/em&gt; and &lt;em&gt;minimum&lt;/em&gt; values, therefore, represents the ease with which the spring can be compressed and the difference between its &lt;em&gt;maximum&lt;/em&gt; and &lt;em&gt;preferred&lt;/em&gt; values, indicates the ease with which the &lt;code&gt;Spring&lt;/code&gt; can be extended. See the &lt;a href=&quot;#sum(javax.swing.Spring,javax.swing.Spring)&quot;&gt;&lt;code&gt;sum(javax.swing.Spring, javax.swing.Spring)&lt;/code&gt;&lt;/a&gt; method for details.</source>
          <target state="translated">&lt;code&gt;Spring&lt;/code&gt; 클래스 의 인스턴스는 스프링이 선호하는 값에서 압축되거나 늘어나면서 교정력을 제공하는 기계적 스프링으로 시각화 될 수 있습니다. 이 힘은 선호하는 값으로부터의 거리의 선형 함수로 모델링되지만 두 개의 다른 상수 (압축력과 인장력에 대한 하나)가 있습니다. 이러한 상수는 스프링의 최소값과 최대 값으로 지정되어 최소값의 스프링이 최대 값에있을 때 생성되는 힘과 같고 반대되는 힘을 생성합니다. 사이의 차이가 &lt;em&gt;바람직&lt;/em&gt; 하고 &lt;em&gt;최소&lt;/em&gt; 값은 따라서, 상기 스프링은 압축 될 수있는 용이성과의 차이 나타내는 &lt;em&gt;최대&lt;/em&gt;및 &lt;em&gt;선호&lt;/em&gt; 값은 &lt;code&gt;Spring&lt;/code&gt; 이 확장 될 수있는 용이성을 나타냅니다 . 자세한 내용은 &lt;a href=&quot;#sum(javax.swing.Spring,javax.swing.Spring)&quot;&gt; &lt;code&gt;sum(javax.swing.Spring, javax.swing.Spring)&lt;/code&gt; &lt;/a&gt; 메서드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cf0e2f078d65756e4ad0fe742cb9df763cda5aa0" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Spring&lt;/code&gt; class holds three properties that characterize its behavior: the &lt;em&gt;minimum&lt;/em&gt;, &lt;em&gt;preferred&lt;/em&gt;, and &lt;em&gt;maximum&lt;/em&gt; values.</source>
          <target state="translated">&lt;code&gt;Spring&lt;/code&gt; 클래스 의 인스턴스는 그 동작을 특징 짓는 세 가지 속성을 가지고 있습니다 : &lt;em&gt;minimum&lt;/em&gt; , &lt;em&gt;preferred&lt;/em&gt; , &lt;em&gt;maximum&lt;/em&gt; 값.</target>
        </trans-unit>
        <trans-unit id="c0b77e462a7219e85256ea71ea9f4f3cdf82cfe3" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Spring&lt;/code&gt; class holds three properties that characterize its behavior: the &lt;em&gt;minimum&lt;/em&gt;, &lt;em&gt;preferred&lt;/em&gt;, and &lt;em&gt;maximum&lt;/em&gt; values. Each of these properties may be involved in defining its fourth, &lt;em&gt;value&lt;/em&gt;, property based on a series of rules.</source>
          <target state="translated">&lt;code&gt;Spring&lt;/code&gt; 클래스 의 인스턴스는 그 동작을 특징 짓는 세 가지 속성을 가지고 있습니다 : &lt;em&gt;minimum&lt;/em&gt; , &lt;em&gt;preferred&lt;/em&gt; , &lt;em&gt;maximum&lt;/em&gt; 값. 이러한 각 속성은 일련의 규칙을 기반으로 네 번째 &lt;em&gt;값인&lt;/em&gt; 속성 을 정의하는 데 관여 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ecd45e4b9d53ccaa53d9a3356b79820e8be583f1" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Type&lt;/code&gt; class represents one of the standard types of audio file.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 클래스 의 인스턴스는 표준 유형의 오디오 파일 중 하나를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d4ea4b1285ed5bd1ba43f4bd5f18b0d928041f68" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Type&lt;/code&gt; class represents one of the standard types of audio file. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 클래스 의 인스턴스는 표준 유형의 오디오 파일 중 하나를 나타냅니다. 정적 유형은 공통 유형에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="327b4d9c3db6a3abd8fb05e940d637f8eb455eb3" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Type&lt;/code&gt; class represents the type of the control.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 클래스 의 인스턴스 는 컨트롤의 유형을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="07eccc9b35085aee1266610ec826ac1783b928ca" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Type&lt;/code&gt; class represents the type of the control. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; 클래스 의 인스턴스 는 컨트롤의 유형을 나타냅니다. 정적 유형은 공통 유형에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="76407322c9056796745859de5a160d5232c84e27" translate="yes" xml:space="preserve">
          <source>An instance of the default &lt;code&gt;GSSManager&lt;/code&gt; subclass may be obtained through the static method &lt;a href=&quot;#getInstance()&quot;&gt;&lt;code&gt;getInstance&lt;/code&gt;&lt;/a&gt;, but applications are free to instantiate other subclasses of &lt;code&gt;GSSManager&lt;/code&gt;. The default &lt;code&gt;GSSManager&lt;/code&gt; instance will support the Kerberos v5 GSS-API mechanism in addition to any others. This mechanism is identified by the Oid &quot;1.2.840.113554.1.2.2&quot; and is defined in RFC 1964.</source>
          <target state="translated">기본 &lt;code&gt;GSSManager&lt;/code&gt; 하위 클래스 의 인스턴스는 정적 메소드 &lt;a href=&quot;#getInstance()&quot;&gt; &lt;code&gt;getInstance&lt;/code&gt; 를&lt;/a&gt; 통해 얻을 수 있지만 응용 프로그램은 &lt;code&gt;GSSManager&lt;/code&gt; 의 다른 하위 클래스를 자유롭게 인스턴스화 할 수 있습니다 . 기본 &lt;code&gt;GSSManager&lt;/code&gt; 인스턴스는 다른 모든 것 외에도 Kerberos v5 GSS-API 메커니즘을 지원합니다. 이 메커니즘은 Oid &quot;1.2.840.113554.1.2.2&quot;로 식별되며 RFC 1964에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="27a8f1587bb50acf28271aa7e6c6bc94f4b86110" translate="yes" xml:space="preserve">
          <source>An instance of the provider.</source>
          <target state="translated">공급자의 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="8a97d89ec1fc3b81eb0cc9cdbede3340e2501c30" translate="yes" xml:space="preserve">
          <source>An instance of this abstract class can transform a source tree into a result tree.</source>
          <target state="translated">이 추상 클래스의 인스턴스는 소스 트리를 결과 트리로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35318f12a2c91905211720e824ceedda9d471749" translate="yes" xml:space="preserve">
          <source>An instance of this class can be obtained from the &lt;a href=&quot;documentbuilderfactory#newDocumentBuilder()&quot;&gt;&lt;code&gt;DocumentBuilderFactory.newDocumentBuilder()&lt;/code&gt;&lt;/a&gt; method. Once an instance of this class is obtained, XML can be parsed from a variety of input sources. These input sources are InputStreams, Files, URLs, and SAX InputSources.</source>
          <target state="translated">이 클래스의 인스턴스는 &lt;a href=&quot;documentbuilderfactory#newDocumentBuilder()&quot;&gt; &lt;code&gt;DocumentBuilderFactory.newDocumentBuilder()&lt;/code&gt; &lt;/a&gt; 메서드 에서 얻을 수 있습니다 . 이 클래스의 인스턴스를 얻으면 다양한 입력 소스에서 XML을 구문 분석 할 수 있습니다. 이러한 입력 소스는 InputStreams, 파일, URL 및 SAX InputSources입니다.</target>
        </trans-unit>
        <trans-unit id="9d5703479805c709016e06e99400ab70a2c4d220" translate="yes" xml:space="preserve">
          <source>An instance of this class can be obtained with the &lt;a href=&quot;transformerfactory#newTransformer(javax.xml.transform.Source)&quot;&gt;&lt;code&gt;TransformerFactory.newTransformer&lt;/code&gt;&lt;/a&gt; method. This instance may then be used to process XML from a variety of sources and write the transformation output to a variety of sinks.</source>
          <target state="translated">이 클래스의 인스턴스는 &lt;a href=&quot;transformerfactory#newTransformer(javax.xml.transform.Source)&quot;&gt; &lt;code&gt;TransformerFactory.newTransformer&lt;/code&gt; &lt;/a&gt; 메서드 로 얻을 수 있습니다 . 그런 다음이 인스턴스를 사용하여 다양한 소스의 XML을 처리하고 다양한 싱크에 변환 출력을 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d76dd5b485ada222054050140b9c0c8104672a0d" translate="yes" xml:space="preserve">
          <source>An instance of this class can be used to represent:</source>
          <target state="translated">이 클래스의 인스턴스는 다음을 나타내는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6a287f367374571f30b8d21224d3a0f4449049f" translate="yes" xml:space="preserve">
          <source>An instance of this class encapsulates the information needed to instantiate and initialize a KeyStore object. That process is triggered when the &lt;a href=&quot;#getKeyStore()&quot;&gt;getKeyStore()&lt;/a&gt; method is called.</source>
          <target state="translated">이 클래스의 인스턴스는 KeyStore 객체를 인스턴스화하고 초기화하는 데 필요한 정보를 캡슐화합니다. 이 프로세스는 &lt;a href=&quot;#getKeyStore()&quot;&gt;getKeyStore ()&lt;/a&gt; 메서드가 호출 될 때 트리거됩니다 .</target>
        </trans-unit>
        <trans-unit id="2724595f32e58a6ac42e1786a7aa387f2ad61c6f" translate="yes" xml:space="preserve">
          <source>An instance of this class encapsulates the information needed to instantiate and initialize a KeyStore object. That process is triggered when the &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt;getKeyStore()&lt;/a&gt; method is called.</source>
          <target state="translated">이 클래스의 인스턴스는 KeyStore 객체를 인스턴스화하고 초기화하는 데 필요한 정보를 캡슐화합니다. &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt;getKeyStore ()&lt;/a&gt; 메소드가 호출 될 때 해당 프로세스가 트리거됩니다 .</target>
        </trans-unit>
        <trans-unit id="50891e22fd7aa51c5f4769671e63e52a7d2f3335" translate="yes" xml:space="preserve">
          <source>An instance of this class is capable of scanning numbers in the standard formats as well as in the formats of the scanner's locale. A scanner's &lt;a id=&quot;initial-locale&quot;&gt;initial locale &lt;/a&gt;is the value returned by the &lt;a href=&quot;locale#getDefault(java.util.Locale.Category)&quot;&gt;&lt;code&gt;Locale.getDefault(Locale.Category.FORMAT)&lt;/code&gt;&lt;/a&gt; method; it may be changed via the &lt;a href=&quot;#useLocale(java.util.Locale)&quot;&gt;&lt;code&gt;useLocale()&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's locale to the initial locale regardless of whether it was previously changed.</source>
          <target state="translated">이 클래스의 인스턴스는 스캐너의 로케일 형식뿐만 아니라 표준 형식의 숫자를 스캔 할 수 있습니다. 스캐너의 &lt;a id=&quot;initial-locale&quot;&gt;초기 로케일&lt;/a&gt; 은 &lt;a href=&quot;locale#getDefault(java.util.Locale.Category)&quot;&gt; &lt;code&gt;Locale.getDefault(Locale.Category.FORMAT)&lt;/code&gt; &lt;/a&gt; 메소드에 의해 리턴 된 값입니다 . &lt;a href=&quot;#useLocale(java.util.Locale)&quot;&gt; &lt;code&gt;useLocale()&lt;/code&gt; &lt;/a&gt; 메서드 를 통해 변경할 수 있습니다 . &lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메소드에 상관없이 이전에 변경되었는지 여부의 초기 로케일 스캐너의 로케일의 값을 재설정한다.</target>
        </trans-unit>
        <trans-unit id="1317216bbeb3dff374e60ed4cee85c92ce39d700" translate="yes" xml:space="preserve">
          <source>An instance of this class is capable of scanning numbers in the standard formats as well as in the formats of the scanner's locale. A scanner's &lt;a name=&quot;initial-locale&quot;&gt;initial locale &lt;/a&gt;is the value returned by the &lt;a href=&quot;locale#getDefault-java.util.Locale.Category-&quot;&gt;&lt;code&gt;Locale.getDefault(Locale.Category.FORMAT)&lt;/code&gt;&lt;/a&gt; method; it may be changed via the &lt;a href=&quot;scanner#useLocale-java.util.Locale-&quot;&gt;&lt;code&gt;useLocale(java.util.Locale)&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's locale to the initial locale regardless of whether it was previously changed.</source>
          <target state="translated">이 클래스의 인스턴스는 표준 형식과 스캐너 로케일 형식으로 숫자를 스캔 할 수 있습니다. 스캐너의 &lt;a name=&quot;initial-locale&quot;&gt;초기 로캘&lt;/a&gt; 은 &lt;a href=&quot;locale#getDefault-java.util.Locale.Category-&quot;&gt; &lt;code&gt;Locale.getDefault(Locale.Category.FORMAT)&lt;/code&gt; &lt;/a&gt; 메서드 에서 반환 된 값입니다 . &lt;a href=&quot;scanner#useLocale-java.util.Locale-&quot;&gt; &lt;code&gt;useLocale(java.util.Locale)&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 변경 될 수 있습니다 . &lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메소드에 상관없이 이전에 변경되었는지 여부의 초기 로케일 스캐너의 로케일의 값을 재설정한다.</target>
        </trans-unit>
        <trans-unit id="4ae8f72aaf1e5f6296834affcdbb30c205b9e0b4" translate="yes" xml:space="preserve">
          <source>An instance of this class is used to generate a stream of pseudorandom numbers.</source>
          <target state="translated">이 클래스의 인스턴스는 의사 난수 스트림을 생성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d39558516c859afad90cc4d1dc1323cc6b3d6721" translate="yes" xml:space="preserve">
          <source>An instance of this class is used to generate a stream of pseudorandom numbers. The class uses a 48-bit seed, which is modified using a linear congruential formula. (See Donald Knuth,</source>
          <target state="translated">이 클래스의 인스턴스는 의사 난수 스트림을 생성하는 데 사용됩니다. 이 클래스는 48 비트 시드를 사용하며 선형 일치 수식을 사용하여 수정됩니다. (도널드 크 누스,</target>
        </trans-unit>
        <trans-unit id="28f83ccf2a715e519fc03e240f1b5b775b12be7c" translate="yes" xml:space="preserve">
          <source>An instance of this class represents a URI reference in the syntactic sense defined by RFC 2396. A URI may be either absolute or relative. A URI string is parsed according to the generic syntax without regard to the scheme, if any, that it specifies. No lookup of the host, if any, is performed, and no scheme-dependent stream handler is constructed. Equality, hashing, and comparison are defined strictly in terms of the character content of the instance. In other words, a URI instance is little more than a structured string that supports the syntactic, scheme-independent operations of comparison, normalization, resolution, and relativization.</source>
          <target state="translated">이 클래스의 인스턴스는 RFC 2396에 의해 정의 된 구문 의미에서 URI 참조를 나타냅니다. URI는 절대적이거나 상대적 일 수 있습니다. URI 문자열은 지정된 스키마 (있는 경우)와 상관없이 일반 구문에 따라 구문 분석됩니다. 호스트가있는 경우에는 조회가 수행되지 않으며 스키마 종속 스트림 핸들러가 구성되지 않습니다. 동일성, 해싱 및 비교는 인스턴스의 문자 내용 측면에서 엄격하게 정의됩니다. 다시 말해, URI 인스턴스는 구문, 체계 독립적 인 비교, 정규화, 해상도 및 상대 성화 작업을 지원하는 구조화 된 문자열에 지나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a0dce4c53441c449127a7c6fbd50fdf0237d5be0" translate="yes" xml:space="preserve">
          <source>An instance of this concrete sub-class is then registered with the system by calling &lt;a href=&quot;#setDefault(java.net.Authenticator)&quot;&gt;&lt;code&gt;setDefault(Authenticator)&lt;/code&gt;&lt;/a&gt;. When authentication is required, the system will invoke one of the requestPasswordAuthentication() methods which in turn will call the getPasswordAuthentication() method of the registered object.</source>
          <target state="translated">이 구체적인 하위 클래스의 인스턴스는 &lt;a href=&quot;#setDefault(java.net.Authenticator)&quot;&gt; &lt;code&gt;setDefault(Authenticator)&lt;/code&gt; &lt;/a&gt; 호출하여 시스템에 등록됩니다 . 인증이 필요한 경우 시스템은 requestPasswordAuthentication () 메서드 중 하나를 호출하여 등록 된 개체의 getPasswordAuthentication () 메서드를 차례로 호출합니다.</target>
        </trans-unit>
        <trans-unit id="7db157449a4bd8c71ffcdbcd29cbdf95c91b7f80" translate="yes" xml:space="preserve">
          <source>An instance of this concrete sub-class is then registered with the system by calling &lt;a href=&quot;authenticator#setDefault-java.net.Authenticator-&quot;&gt;&lt;code&gt;setDefault(Authenticator)&lt;/code&gt;&lt;/a&gt;. When authentication is required, the system will invoke one of the requestPasswordAuthentication() methods which in turn will call the getPasswordAuthentication() method of the registered object.</source>
          <target state="translated">그런 다음이 구체적 서브 클래스의 인스턴스는 &lt;a href=&quot;authenticator#setDefault-java.net.Authenticator-&quot;&gt; &lt;code&gt;setDefault(Authenticator)&lt;/code&gt; &lt;/a&gt; 호출하여 시스템에 등록됩니다 . 인증이 필요한 경우, 시스템은 requestPasswordAuthentication () 메소드 중 하나를 호출하여 등록 된 오브젝트의 getPasswordAuthentication () 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="c982a64b6639cd335370d5f6441f493f10b35c3b" translate="yes" xml:space="preserve">
          <source>An instance of this interface represents the unit itself, rather than an amount of the unit. See &lt;a href=&quot;../period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; for a class that represents an amount in terms of the common units.</source>
          <target state="translated">이 인터페이스의 인스턴스는 단위의 양이 아니라 단위 자체를 나타냅니다. 공통 단위로 금액을 나타내는 클래스에 대해서는 &lt;a href=&quot;../period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d94759c354f168b793821326256dda20d0d04793" translate="yes" xml:space="preserve">
          <source>An instantaneous point on the time-line.</source>
          <target state="translated">타임 라인의 순간.</target>
        </trans-unit>
        <trans-unit id="7158fc9acc202c4cf5095b847cad9b1065934a82" translate="yes" xml:space="preserve">
          <source>An instrument is a sound-synthesis algorithm with certain parameter settings, usually designed to emulate a specific real-world musical instrument or to achieve a specific sort of sound effect.</source>
          <target state="translated">악기는 특정 파라미터 설정을 갖는 사운드 합성 알고리즘으로, 일반적으로 특정 실제 악기를 에뮬레이트하거나 특정 종류의 사운드 효과를 달성하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="97992030c3ea768748c4bdeea51f69ffae9a4afb" translate="yes" xml:space="preserve">
          <source>An instrument is a sound-synthesis algorithm with certain parameter settings, usually designed to emulate a specific real-world musical instrument or to achieve a specific sort of sound effect. Instruments are typically stored in collections called soundbanks. Before the instrument can be used to play notes, it must first be loaded onto a synthesizer, and then it must be selected for use on one or more channels, via a program-change command. MIDI notes that are subsequently received on those channels will be played using the sound of the selected instrument.</source>
          <target state="translated">악기는 특정 파라미터 설정을 갖는 사운드 합성 알고리즘으로, 일반적으로 특정 실제 악기를 에뮬레이트하거나 특정 종류의 사운드 효과를 달성하도록 설계되었습니다. 악기는 일반적으로 사운드 뱅크라는 컬렉션에 저장됩니다. 악기를 사용하여 음을 연주하려면 먼저 신디사이저에로드 한 다음 프로그램 변경 명령을 통해 하나 이상의 채널에서 사용하도록 선택해야합니다. 해당 채널에서 이후에 수신되는 MIDI 음표는 선택한 악기의 사운드를 사용하여 재생됩니다.</target>
        </trans-unit>
        <trans-unit id="56ea8c144840715d69a960aeb55ec5417f7c23c9" translate="yes" xml:space="preserve">
          <source>An int buffer.</source>
          <target state="translated">int 버퍼</target>
        </trans-unit>
        <trans-unit id="adecc75be41392880cba1ab1c43f1140e74a9554" translate="yes" xml:space="preserve">
          <source>An int representing the hash code of this Rdn.</source>
          <target state="translated">이 Rdn 해시 코드를 나타내는 int</target>
        </trans-unit>
        <trans-unit id="f46c446cab1141d9642aaa8704b1fb79b9b9cd49" translate="yes" xml:space="preserve">
          <source>An int representing the hash code of this name.</source>
          <target state="translated">이 이름의 해시 코드를 나타내는 int입니다.</target>
        </trans-unit>
        <trans-unit id="0f02c72f761f7b569b3ba5ae42abbad4a0d5abe1" translate="yes" xml:space="preserve">
          <source>An integer hashcode</source>
          <target state="translated">정수 해시 코드</target>
        </trans-unit>
        <trans-unit id="1b040fcbf539cbe7573564cb6c7757f2d140a9d8" translate="yes" xml:space="preserve">
          <source>An integer representing the column number, or -1 if none is available.</source>
          <target state="translated">열 번호를 나타내는 정수 또는 사용할 수없는 경우 -1입니다.</target>
        </trans-unit>
        <trans-unit id="de218f232456536bc8a170ff5f6b8acf15dbb204" translate="yes" xml:space="preserve">
          <source>An integer representing the line number, or -1 if none is available.</source>
          <target state="translated">줄 번호를 나타내는 정수 또는 사용할 수없는 경우 -1입니다.</target>
        </trans-unit>
        <trans-unit id="182c9c1145c16fa13c04d28f5d57abb85e3d50e9" translate="yes" xml:space="preserve">
          <source>An integer specifying the number of clicks needed to start editing.</source>
          <target state="translated">편집을 시작하는 데 필요한 클릭 수를 지정하는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="6c2d6e4de986d2941bd375a431f66df6ce6a329d" translate="yes" xml:space="preserve">
          <source>An integer specifying the number of clicks needed to start editing. Even if &lt;code&gt;clickCountToStart&lt;/code&gt; is defined as zero, it will not initiate until a click occurs.</source>
          <target state="translated">편집을 시작하는 데 필요한 클릭 수를 지정하는 정수입니다. &lt;code&gt;clickCountToStart&lt;/code&gt; 가 0으로 정의되어 있어도 클릭이 발생할 때까지 시작되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3ee1ae581e11140a3f88720b1eaca6fa372cae12" translate="yes" xml:space="preserve">
          <source>An integer that stands for an unknown numeric value.</source>
          <target state="translated">알 수없는 숫자 값을 나타내는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="69bfe90e2bce383610cf905b6db7ea9336e5f593" translate="yes" xml:space="preserve">
          <source>An integer that stands for an unknown numeric value. This value is appropriate only for signed quantities that do not normally take negative values. Examples include file sizes, frame sizes, buffer sizes, and sample rates. A number of Java Sound constructors accept a value of &lt;code&gt;NOT_SPECIFIED&lt;/code&gt; for such parameters. Other methods may also accept or return this value, as documented.</source>
          <target state="translated">알 수없는 숫자 값을 나타내는 정수입니다. 이 값은 일반적으로 음수 값을 갖지 않는 부호있는 수량에만 적합합니다. 예를 들어 파일 크기, 프레임 크기, 버퍼 크기 및 샘플 속도가 있습니다. 많은 Java Sound 생성자 가 이러한 매개 변수 에 &lt;code&gt;NOT_SPECIFIED&lt;/code&gt; 값을 허용합니다 . 문서화 된 다른 방법들도이 값을 받아들이거나 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4edf062f1c20f1e4c18bf37fdbdd1e1bdd2f7eb0" translate="yes" xml:space="preserve">
          <source>An integer value signifying that a property value has not yet been calculated.</source>
          <target state="translated">속성 값이 아직 계산되지 않았 음을 나타내는 정수 값입니다.</target>
        </trans-unit>
        <trans-unit id="ef7bc3b72674e27cace9fb77180a9e01d814504e" translate="yes" xml:space="preserve">
          <source>An interface for an elliptic curve private key as defined by RFC 7748.</source>
          <target state="translated">RFC 7748에 정의 된 타원 곡선 개인 키에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="a74f80fbd0fa6dd98374b240335bf63fb5dce598" translate="yes" xml:space="preserve">
          <source>An interface for an elliptic curve private key as defined by RFC 7748. These keys are distinct from the keys represented by &lt;code&gt;ECPrivateKey&lt;/code&gt;, and they are intended for use with algorithms based on RFC 7748 such as the XDH &lt;code&gt;KeyAgreement&lt;/code&gt; algorithm. An XEC private key is an encoded scalar value as described in RFC 7748. The decoding procedure defined in this RFC includes an operation that forces certain bits of the key to either 1 or 0. This operation is known as &quot;pruning&quot; or &quot;clamping&quot; the private key. Arrays returned by this interface are unpruned, and implementations will need to prune the array before using it in any numerical operations.</source>
          <target state="translated">RFC 7748에 정의 된 타원 곡선 개인 키에 대한 인터페이스입니다. 이러한 키는 &lt;code&gt;ECPrivateKey&lt;/code&gt; 로 표시되는 키와 구별되며 XDH &lt;code&gt;KeyAgreement&lt;/code&gt; 알고리즘 과 같은 RFC 7748 기반 알고리즘과 함께 사용하기위한 것입니다 . XEC 개인 키는 RFC 7748에 설명 된대로 인코딩 된 스칼라 값입니다.이 RFC에 정의 된 디코딩 절차에는 키의 특정 비트를 1 또는 0으로 강제하는 작업이 포함됩니다.이 작업을 &quot;프 루닝&quot;또는 &quot;클램핑&quot;이라고합니다. 개인 키. 이 인터페이스에서 반환 된 배열은 정리되지 않으며, 구현시 숫자 연산에서 배열을 사용하기 전에 배열을 정리해야합니다.</target>
        </trans-unit>
        <trans-unit id="44d95aaadb0b3951be3e4de379eedb2cd8fb34e4" translate="yes" xml:space="preserve">
          <source>An interface for an elliptic curve public key as defined by RFC 7748.</source>
          <target state="translated">RFC 7748에 정의 된 타원 곡선 공개 키에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="d526404220893bed78c77ee687e8918f98e3482a" translate="yes" xml:space="preserve">
          <source>An interface for an elliptic curve public key as defined by RFC 7748. These keys are distinct from the keys represented by &lt;code&gt;ECPublicKey&lt;/code&gt;, and they are intended for use with algorithms based on RFC 7748 such as the XDH &lt;code&gt;KeyAgreement&lt;/code&gt; algorithm. An XEC public key is a particular point on the curve, which is represented using only its u-coordinate as described in RFC 7748. A u-coordinate is an element of the field of integers modulo some value that is determined by the algorithm parameters. This field element is represented by a BigInteger which may hold any value. That is, the BigInteger is not restricted to the range of canonical field elements.</source>
          <target state="translated">RFC 7748에서 정의한 타원 곡선 공개 키에 대한 인터페이스입니다. 이러한 키는 &lt;code&gt;ECPublicKey&lt;/code&gt; 로 표시되는 키와 구별되며 XDH &lt;code&gt;KeyAgreement&lt;/code&gt; 알고리즘 과 같은 RFC 7748 기반 알고리즘과 함께 사용하기위한 것입니다 . XEC 공개 키는 RFC 7748에 설명 된대로 u 좌표 만 사용하여 표시되는 곡선의 특정 지점입니다. u 좌표는 알고리즘 매개 변수에 의해 결정되는 일부 값을 모듈로하는 정수 필드의 요소입니다. 이 필드 요소는 모든 값을 보유 할 수있는 BigInteger로 표시됩니다. 즉, BigInteger는 표준 필드 요소의 범위로 제한되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="10af9cb63f7c680bde311e1f5dfc0a16cc82d1e4" translate="yes" xml:space="preserve">
          <source>An interface for an elliptic curve public/private key as defined by RFC 7748.</source>
          <target state="translated">RFC 7748에 정의 된 타원 곡선 공개 / 개인 키에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="beb8c30339ab67ea4b5470bb2b06c8816e34b47e" translate="yes" xml:space="preserve">
          <source>An interface for an elliptic curve public/private key as defined by RFC 7748. These keys are distinct from the keys represented by &lt;code&gt;ECKey&lt;/code&gt;, and they are intended for use with algorithms based on RFC 7748 such as the XDH &lt;code&gt;KeyAgreement&lt;/code&gt; algorithm. This interface allows access to the algorithm parameters associated with the key.</source>
          <target state="translated">RFC 7748에 정의 된 타원 곡선 공개 / 개인 키에 대한 인터페이스입니다. 이러한 키는 &lt;code&gt;ECKey&lt;/code&gt; 로 표시되는 키와 구별되며 XDH &lt;code&gt;KeyAgreement&lt;/code&gt; 알고리즘 과 같은 RFC 7748 기반 알고리즘과 함께 사용하기위한 것입니다 . 이 인터페이스를 통해 키와 관련된 알고리즘 매개 변수에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c1aade49578b7ef4a2fa43fe2d04f2a5e547665" translate="yes" xml:space="preserve">
          <source>An interface for an object that allows one to mark up the background with colored areas.</source>
          <target state="translated">색상 영역으로 배경을 표시 할 수있는 개체 용 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="398bb5b2cafc974baa723ef7da0a42a6bfc8a7f6" translate="yes" xml:space="preserve">
          <source>An interface for command-line tools to provide a way to be invoked without necessarily starting a new VM.</source>
          <target state="translated">새 VM을 시작하지 않고도 호출 할 수있는 방법을 제공하는 명령 줄 도구 용 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="068a41ae48ca5ac4dfaebfce8f3df19f98c875c8" translate="yes" xml:space="preserve">
          <source>An interface for comment events</source>
          <target state="translated">댓글 이벤트를위한 인터페이스</target>
        </trans-unit>
        <trans-unit id="ea3f725adfeb6b59c89c6dc71c97ee20fd66fbdf" translate="yes" xml:space="preserve">
          <source>An interface for creating instances of &lt;code&gt;SaslClient&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SaslClient&lt;/code&gt; 의 인스턴스를 작성하기위한 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="3e70918611d207981e2b3ebda02810f8197697d4" translate="yes" xml:space="preserve">
          <source>An interface for creating instances of &lt;code&gt;SaslClient&lt;/code&gt;. A class that implements this interface must be thread-safe and handle multiple simultaneous requests. It must also have a public constructor that accepts no argument.</source>
          <target state="translated">&lt;code&gt;SaslClient&lt;/code&gt; 의 인스턴스를 작성하기위한 인터페이스입니다 . 이 인터페이스를 구현하는 클래스는 스레드로부터 안전해야하며 여러 동시 요청을 처리해야합니다. 또한 인수를 허용하지 않는 공용 생성자가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="fe1107bf7a74cb228073a4fd38a65ab1ac9cc7bf" translate="yes" xml:space="preserve">
          <source>An interface for creating instances of &lt;code&gt;SaslServer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SaslServer&lt;/code&gt; 인스턴스를 작성하기위한 인터페이스 입니다 .</target>
        </trans-unit>
        <trans-unit id="fc5ac59285f38f4e202a2d8b65c366fd57798cff" translate="yes" xml:space="preserve">
          <source>An interface for creating instances of &lt;code&gt;SaslServer&lt;/code&gt;. A class that implements this interface must be thread-safe and handle multiple simultaneous requests. It must also have a public constructor that accepts no argument.</source>
          <target state="translated">&lt;code&gt;SaslServer&lt;/code&gt; 인스턴스를 작성하기위한 인터페이스 입니다 . 이 인터페이스를 구현하는 클래스는 스레드로부터 안전해야하며 여러 동시 요청을 처리해야합니다. 또한 인수를 허용하지 않는 공용 생성자가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="7361d3f939c2dd774dbd1fad03a79207df8412b9" translate="yes" xml:space="preserve">
          <source>An interface for events that know how to dispatch themselves.</source>
          <target state="translated">자신을 전달하는 방법을 알고있는 이벤트 용 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="258098630dffa0a37552a442348860869a8b9cb1" translate="yes" xml:space="preserve">
          <source>An interface for events that know how to dispatch themselves. By implementing this interface an event can be placed upon the event queue and its &lt;code&gt;dispatch()&lt;/code&gt; method will be called when the event is dispatched, using the &lt;code&gt;EventDispatchThread&lt;/code&gt;.</source>
          <target state="translated">자신을 전달하는 방법을 알고있는 이벤트 용 인터페이스입니다. 이 인터페이스를 구현하면 이벤트를 이벤트 큐에 배치 할 수 있으며 &lt;code&gt;EventDispatchThread&lt;/code&gt; 를 사용하여 이벤트가 전달 될 때 &lt;code&gt;dispatch()&lt;/code&gt; 메서드가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="a0176fb4fc0f366170df59f85898f2256f8388a7" translate="yes" xml:space="preserve">
          <source>An interface for handling Entity Declarations This interface is used to record and report unparsed entity declarations.</source>
          <target state="translated">엔티티 선언을 처리하기위한 인터페이스이 인터페이스는 구문 분석되지 않은 엔티티 선언을 기록하고보고하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b6223117d60e1c97bc7ffcad72ba3d09a600177e" translate="yes" xml:space="preserve">
          <source>An interface for handling Entity events.</source>
          <target state="translated">엔티티 이벤트를 처리하기위한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="6ee9b3812f8fd526ee9494c1ffc2c030011533c9" translate="yes" xml:space="preserve">
          <source>An interface for handling Entity events. This event reports entities that have not been resolved and reports their replacement text unprocessed (if available). This event will be reported if javax.xml.stream.isReplacingEntityReferences is set to false. If javax.xml.stream.isReplacingEntityReferences is set to true entity references will be resolved transparently. Entities are handled in two possible ways: (1) If javax.xml.stream.isReplacingEntityReferences is set to true all entity references are resolved and reported as markup transparently. (2) If javax.xml.stream.isReplacingEntityReferences is set to false Entity references are reported as an EntityReference Event.</source>
          <target state="translated">엔티티 이벤트를 처리하기위한 인터페이스입니다. 이 이벤트는 해결되지 않은 엔티티를보고하고 처리되지 않은 대체 텍스트를보고합니다 (사용 가능한 경우). 이 이벤트는 javax.xml.stream.isReplacingEntityReferences가 false로 설정된 경우보고됩니다. javax.xml.stream.isReplacingEntityReferences가 true로 설정되면 엔티티 참조가 투명하게 해결됩니다. 엔티티는 가능한 두 가지 방법으로 처리됩니다. (1) javax.xml.stream.isReplacingEntityReferences가 true로 설정되면 모든 엔티티 참조가 해결되고 마크 업으로 투명하게보고됩니다. (2) javax.xml.stream.isReplacingEntityReferences가 false로 설정된 경우 엔티티 참조는 EntityReference 이벤트로보고됩니다.</target>
        </trans-unit>
        <trans-unit id="714c7072bd69b114af0aefd548d6bfa128ed7d1e" translate="yes" xml:space="preserve">
          <source>An interface for handling Notation Declarations Receive notification of a notation declaration event.</source>
          <target state="translated">표기법 선언을 처리하기위한 인터페이스 표기법 선언 이벤트의 알림을받습니다.</target>
        </trans-unit>
        <trans-unit id="48bd8e4f7e4d3027304213d99227014afe517e68" translate="yes" xml:space="preserve">
          <source>An interface for handling Notation Declarations Receive notification of a notation declaration event. It is up to the application to record the notation for later reference, At least one of publicId and systemId must be non-null. There is no guarantee that the notation declaration will be reported before any unparsed entities that use it.</source>
          <target state="translated">표기법 선언을 처리하기위한 인터페이스 표기법 선언 이벤트의 알림을받습니다. 나중에 참조 할 수 있도록 표기법을 기록하는 것은 애플리케이션에 달려 있습니다. publicId 및 systemId 중 적어도 하나는 null이 아니어야합니다. 표기법 선언이이를 사용하는 구문 분석되지 않은 엔티티보다 먼저보고된다는 보장은 없습니다.</target>
        </trans-unit>
        <trans-unit id="ab46c5b425938dd67f92d797e86e3cf84a9b4e6a" translate="yes" xml:space="preserve">
          <source>An interface for objects that wish to be informed when tiles of a WritableRenderedImage become modifiable by some writer via a call to getWritableTile, and when they become unmodifiable via the last call to releaseWritableTile.</source>
          <target state="translated">일부 작성자가 getWritableTile 호출을 통해 WritableRenderedImage의 타일을 수정할 수있을 때와 releaseWritableTile에 대한 마지막 호출을 통해 수정할 수 없게 될 때 알림을 받고자하는 객체를위한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="a981bf36813561e61b68482771213f0f7f36b1d2" translate="yes" xml:space="preserve">
          <source>An interface for service providers that provide implementations of &lt;a href=&quot;../resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt; 구현을 제공하는 서비스 프로 바이더를위한 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="b15746309a1409994f6a09c581bfb913a53b1ee2" translate="yes" xml:space="preserve">
          <source>An interface for service providers that provide implementations of &lt;a href=&quot;../resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;../resourcebundle#default_behavior&quot;&gt;default resource bundle loading behavior&lt;/a&gt; of the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; factory methods that take no &lt;a href=&quot;../resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; instance can be modified with &lt;code&gt;
 ResourceBundleControlProvider&lt;/code&gt; implementations.</source>
          <target state="translated">&lt;a href=&quot;../resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt; 구현을 제공하는 서비스 공급자 용 인터페이스입니다 . &lt;a href=&quot;../resourcebundle#default_behavior&quot;&gt;기본 리소스 번들로드 동작&lt;/a&gt; 의 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 는 전혀 취하지 팩토리 메소드 &lt;a href=&quot;../resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt; 인스턴스를 수정할 수 있습니다 &lt;code&gt; ResourceBundleControlProvider&lt;/code&gt; 구현.</target>
        </trans-unit>
        <trans-unit id="115bb31c1d259eeea81bb4a6b2e448ffe36f0308" translate="yes" xml:space="preserve">
          <source>An interface for service providers that provide implementations of &lt;a href=&quot;../resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;../resourcebundle#default_behavior&quot;&gt;default resource bundle loading behavior&lt;/a&gt; of the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; factory methods that take no &lt;a href=&quot;../resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; instance can be modified with &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt; implementations.</source>
          <target state="translated">&lt;a href=&quot;../resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt; 구현을 제공하는 서비스 프로 바이더를위한 인터페이스입니다 . &lt;a href=&quot;../resourcebundle#default_behavior&quot;&gt;기본 리소스 번들로드 동작&lt;/a&gt; 의 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 는 전혀 취하지 팩토리 메소드 &lt;a href=&quot;../resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt; 인스턴스를 수정할 수 있습니다 &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt; 구현.</target>
        </trans-unit>
        <trans-unit id="93f3cf3e4ddedb05f2203560a3fe46b91d44d9c8" translate="yes" xml:space="preserve">
          <source>An interface for service providers that provide implementations of &lt;a href=&quot;java/util/resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;java/util/resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt; 구현을 제공하는 서비스 공급자 용 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="8dc6aa2c6eacbe13e66c39c2fb5e3e0eb55f834f" translate="yes" xml:space="preserve">
          <source>An interface for the end element event.</source>
          <target state="translated">끝 요소 이벤트에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="2ed001799366e244aa046f8be8fb078d8eca5d17" translate="yes" xml:space="preserve">
          <source>An interface for the end element event. An EndElement is reported for each End Tag in the document.</source>
          <target state="translated">끝 요소 이벤트에 대한 인터페이스입니다. 문서의 각 종료 태그에 대해 EndElement가보고됩니다.</target>
        </trans-unit>
        <trans-unit id="069fcb223301b7c7e5f75c5bd0e99d6813168fc9" translate="yes" xml:space="preserve">
          <source>An interface for the start document event</source>
          <target state="translated">문서 시작 이벤트를위한 인터페이스</target>
        </trans-unit>
        <trans-unit id="23b24c5df819233595347053838f0f22e865b3bb" translate="yes" xml:space="preserve">
          <source>An interface method invocation on a proxy instance will be encoded and dispatched to the invocation handler's &lt;a href=&quot;invocationhandler#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method as described in the documentation for that method.</source>
          <target state="translated">프록시 인스턴스에 대한 인터페이스 메서드 호출 은 해당 메서드에 대한 설명서에 설명 된대로 인코딩되고 호출 처리기의 &lt;a href=&quot;invocationhandler#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; 메서드로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="5792c6841af96adda012e355035f6475f4b57d5c" translate="yes" xml:space="preserve">
          <source>An interface method invocation on a proxy instance will be encoded and dispatched to the invocation handler's &lt;a href=&quot;invocationhandler#invoke-java.lang.Object-java.lang.reflect.Method-java.lang.Object:A-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method as described in the documentation for that method.</source>
          <target state="translated">프록시 인스턴스의 인터페이스 메소드 호출 은 해당 메소드의 문서에 설명 된대로 호출 핸들러의 &lt;a href=&quot;invocationhandler#invoke-java.lang.Object-java.lang.reflect.Method-java.lang.Object:A-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; 메소드로 인코딩 및 디스패치됩니다 .</target>
        </trans-unit>
        <trans-unit id="b812301ff3bad4a7e52cd7f68461ee3bd3b53697" translate="yes" xml:space="preserve">
          <source>An interface not described by a more specific kind (like &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;ANNOTATION_TYPE&lt;/code&gt; 과 같은 더 구체적인 종류로 설명되지 않은 인터페이스 .</target>
        </trans-unit>
        <trans-unit id="ba9e40d4336ce336c4f7cdd70f4185fa8bf68762" translate="yes" xml:space="preserve">
          <source>An interface providing metadata transcoding capability.</source>
          <target state="translated">메타 데이터 코드 변환 기능을 제공하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="587dba713ea99dac60c398f96852ddc5d90dbffb" translate="yes" xml:space="preserve">
          <source>An interface representing a data checksum.</source>
          <target state="translated">데이터 체크섬을 나타내는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="341b0bdcf8228dba24a6d93a4b06396b882ed3d6" translate="yes" xml:space="preserve">
          <source>An interface that can be used to allow MutableAttributeSet implementations to use pluggable attribute compression techniques.</source>
          <target state="translated">MutableAttributeSet 구현이 플러그 가능한 속성 압축 기술을 사용하도록 허용하는 데 사용할 수있는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="02f39c54a9e3e7c54e07a330946d18d6555c31d1" translate="yes" xml:space="preserve">
          <source>An interface that can be used to allow MutableAttributeSet implementations to use pluggable attribute compression techniques. Each mutation of the attribute set can be used to exchange a previous AttributeSet instance with another, preserving the possibility of the AttributeSet remaining immutable. An implementation is provided by the StyleContext class. The Element implementations provided by this class use this interface to provide their MutableAttributeSet implementations, so that different AttributeSet compression techniques can be employed. The method &lt;code&gt;getAttributeContext&lt;/code&gt; should be implemented to return the object responsible for implementing the desired compression technique.</source>
          <target state="translated">MutableAttributeSet 구현이 플러그 가능한 속성 압축 기술을 사용하도록 허용하는 데 사용할 수있는 인터페이스입니다. 속성 집합의 각 변형을 사용하여 이전 AttributeSet 인스턴스를 다른 인스턴스와 교환 할 수 있으므로 AttributeSet이 변경 불가능한 상태로 남아있을 가능성이 유지됩니다. StyleContext 클래스에서 구현을 제공합니다. 이 클래스에서 제공하는 Element 구현은이 인터페이스를 사용하여 MutableAttributeSet 구현을 제공하므로 다른 AttributeSet 압축 기술을 사용할 수 있습니다. &lt;code&gt;getAttributeContext&lt;/code&gt; 메소드 는 원하는 압축 기술 구현을 담당하는 객체를 반환하도록 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="67a864cce41735ad67c5cce854773965ba456fe6" translate="yes" xml:space="preserve">
          <source>An interface that contains information about a namespace.</source>
          <target state="translated">네임 스페이스에 대한 정보가 포함 된 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="8233a5852b8192ec45b92fcf3b2b07e10df191bb" translate="yes" xml:space="preserve">
          <source>An interface that contains information about a namespace. Namespaces are accessed from a StartElement.</source>
          <target state="translated">네임 스페이스에 대한 정보가 포함 된 인터페이스입니다. 네임 스페이스는 StartElement에서 액세스됩니다.</target>
        </trans-unit>
        <trans-unit id="95e3fdcaf288df9e9c1b2a324c44fdd660311a0d" translate="yes" xml:space="preserve">
          <source>An interface that contains information about an attribute.</source>
          <target state="translated">속성에 대한 정보가 포함 된 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="a1118214d213349c38d769f995b459760d3aac16" translate="yes" xml:space="preserve">
          <source>An interface that contains information about an attribute. Attributes are reported as a set of events accessible from a StartElement. Other applications may report Attributes as first-order events, for example as the results of an XPath expression.</source>
          <target state="translated">속성에 대한 정보가 포함 된 인터페이스입니다. 속성은 StartElement에서 액세스 할 수있는 이벤트 세트로보고됩니다. 다른 애플리케이션은 속성을 1 차 이벤트 (예 : XPath 표현식의 결과)로보고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ba0559b3e10dca421b8c1e9e6688f5006938904" translate="yes" xml:space="preserve">
          <source>An interface that defines the implementation of a factory that is used to obtain different types of &lt;code&gt;RowSet&lt;/code&gt; implementations.</source>
          <target state="translated">다른 유형의 &lt;code&gt;RowSet&lt;/code&gt; 구현 을 가져 오는 데 사용되는 팩토리의 구현을 정의하는 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="c9254ce3496326ed1c49a73f2d70994dc91cf597" translate="yes" xml:space="preserve">
          <source>An interface that describes the data found in processing instructions</source>
          <target state="translated">처리 명령에서 찾은 데이터를 설명하는 인터페이스</target>
        </trans-unit>
        <trans-unit id="65020abdc59d5f06255e2eaa3210edca3ee4b442" translate="yes" xml:space="preserve">
          <source>An interface that is implemented by objects that decide if a directory entry should be accepted or filtered.</source>
          <target state="translated">디렉토리 항목을 승인 또는 필터링해야하는지 여부를 결정하는 개체로 구현되는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="05c4e79434d5e8e87a7488e00e2f7ec93b2e66ce" translate="yes" xml:space="preserve">
          <source>An interface that is implemented by objects that decide if a directory entry should be accepted or filtered. A &lt;code&gt;Filter&lt;/code&gt; is passed as the parameter to the &lt;a href=&quot;files#newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream.Filter)&quot;&gt;&lt;code&gt;Files.newDirectoryStream(Path,DirectoryStream.Filter)&lt;/code&gt;&lt;/a&gt; method when opening a directory to iterate over the entries in the directory.</source>
          <target state="translated">디렉터리 항목을 허용할지 필터링 할지를 결정하는 개체에 의해 구현되는 인터페이스입니다. &lt;code&gt;Filter&lt;/code&gt; 받는 매개 변수로 전달됩니다 &lt;a href=&quot;files#newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream.Filter)&quot;&gt; &lt;code&gt;Files.newDirectoryStream(Path,DirectoryStream.Filter)&lt;/code&gt; &lt;/a&gt; 디렉토리의 항목을 반복 디렉토리를 열 때 방법.</target>
        </trans-unit>
        <trans-unit id="213f4f0b9107046878b9b259b674746876a69b64" translate="yes" xml:space="preserve">
          <source>An interface that is implemented by objects that decide if a directory entry should be accepted or filtered. A &lt;code&gt;Filter&lt;/code&gt; is passed as the parameter to the &lt;a href=&quot;files#newDirectoryStream-java.nio.file.Path-java.nio.file.DirectoryStream.Filter-&quot;&gt;&lt;code&gt;Files.newDirectoryStream(Path,DirectoryStream.Filter)&lt;/code&gt;&lt;/a&gt; method when opening a directory to iterate over the entries in the directory.</source>
          <target state="translated">디렉토리 항목을 승인 또는 필터링해야하는지 여부를 결정하는 개체로 구현되는 인터페이스 &lt;code&gt;Filter&lt;/code&gt; 받는 매개 변수로 전달됩니다 &lt;a href=&quot;files#newDirectoryStream-java.nio.file.Path-java.nio.file.DirectoryStream.Filter-&quot;&gt; &lt;code&gt;Files.newDirectoryStream(Path,DirectoryStream.Filter)&lt;/code&gt; &lt;/a&gt; 디렉토리의 항목을 반복 디렉토리를 열 때 방법.</target>
        </trans-unit>
        <trans-unit id="1adc466cfc9b43998c9a1ad60f52d2b00c0d0f84" translate="yes" xml:space="preserve">
          <source>An interface that is implemented by objects that perform match operations on paths.</source>
          <target state="translated">경로에서 일치 작업을 수행하는 객체로 구현되는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="c2bfe211ec29dc0236d6e1aed315458c3bf5423f" translate="yes" xml:space="preserve">
          <source>An interface that must be implemented by a component that wants to be notified when a significant event happens in the life of a &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 개체 의 수명에서 중요한 이벤트가 발생할 때 알림을 받고자하는 구성 요소에 의해 구현되어야하는 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="34b3052d7c2f1d2ad77cc2f0c433a9289431cf97" translate="yes" xml:space="preserve">
          <source>An interface that must be implemented by a component that wants to be notified when a significant event happens in the life of a &lt;code&gt;RowSet&lt;/code&gt; object. A component becomes a listener by being registered with a &lt;code&gt;RowSet&lt;/code&gt; object via the method &lt;code&gt;RowSet.addRowSetListener&lt;/code&gt;. How a registered component implements this interface determines what it does when it is notified of an event.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 개체 의 수명에서 중요한 이벤트가 발생할 때 알림을 받고자하는 구성 요소에 의해 구현되어야하는 인터페이스입니다 . 컴포넌트는 &lt;code&gt;RowSet.addRowSetListener&lt;/code&gt; 메소드를 통해 &lt;code&gt;RowSet&lt;/code&gt; 객체 에 등록되어 리스너가됩니다 . 등록 된 구성 요소가이 인터페이스를 구현하는 방법은 이벤트 알림을받을 때 수행하는 작업을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="9249bb83807fdd62bddcf5d5b707312c19287ec6" translate="yes" xml:space="preserve">
          <source>An interface that must be implemented when a &lt;a href=&quot;driver&quot;&gt;Driver&lt;/a&gt; wants to be notified by &lt;code&gt;DriverManager&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;driver&quot;&gt;Driver&lt;/a&gt; 가 &lt;code&gt;DriverManager&lt;/code&gt; 에 의해 알림을 받기를 원할 때 구현되어야하는 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="f7f92b2354babb0936bbdb055dc8923a9ee6f1d5" translate="yes" xml:space="preserve">
          <source>An interface that provides information to a scrolling container like JScrollPane.</source>
          <target state="translated">JScrollPane과 같은 스크롤 컨테이너에 정보를 제공하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="5253eb76151b260a171dbcbe0cbf1a4b1f3069d0" translate="yes" xml:space="preserve">
          <source>An interface that provides information to a scrolling container like JScrollPane. A complex component that's likely to be used as a viewing a JScrollPane viewport (or other scrolling container) should implement this interface.</source>
          <target state="translated">JScrollPane과 같은 스크롤 컨테이너에 정보를 제공하는 인터페이스입니다. JScrollPane 뷰포트 (또는 기타 스크롤 컨테이너)를 보는 데 사용되는 복잡한 구성 요소는이 인터페이스를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="e1903fd7150010bfbc980ed8d61474219e48a6e7" translate="yes" xml:space="preserve">
          <source>An interface to an object capable of generating DSA key pairs.</source>
          <target state="translated">DSA 키 쌍을 생성 할 수있는 객체에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="0d7b7e4df14a0d5abedaeef88449f90498b27070" translate="yes" xml:space="preserve">
          <source>An interface to an object that is able to build, or augment, a DOM tree from various input sources.</source>
          <target state="translated">다양한 입력 소스에서 DOM 트리를 빌드하거나 보강 할 수있는 객체에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="1a178a3c731cebf9a3ef5d36850578656dedcae8" translate="yes" xml:space="preserve">
          <source>An interface to be implemented by objects that can determine the settings of an &lt;code&gt;IIOMetadata&lt;/code&gt; object, either by putting up a GUI to obtain values from a user, or by other means.</source>
          <target state="translated">사용자로부터 값을 얻기 위해 GUI를 배치하거나 다른 방법으로 &lt;code&gt;IIOMetadata&lt;/code&gt; 객체 의 설정을 결정할 수있는 객체에 의해 구현되는 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="2831b22b41e665a79ed547f74e4bf773b5fa2fb9" translate="yes" xml:space="preserve">
          <source>An interface to be implemented by objects that can determine the settings of an &lt;code&gt;IIOMetadata&lt;/code&gt; object, either by putting up a GUI to obtain values from a user, or by other means. This interface merely specifies a generic &lt;code&gt;activate&lt;/code&gt; method that invokes the controller, without regard for how the controller obtains values (</source>
          <target state="translated">사용자로부터 값을 얻기 위해 GUI를 배치하거나 다른 방법으로 &lt;code&gt;IIOMetadata&lt;/code&gt; 객체 의 설정을 결정할 수있는 객체에 의해 구현되는 인터페이스 입니다. 이 인터페이스 는 컨트롤러가 값을 얻는 방법에 관계없이 컨트롤러를 호출 하는 일반 &lt;code&gt;activate&lt;/code&gt; 메소드 만 지정 합니다 (</target>
        </trans-unit>
        <trans-unit id="c072fd163a223eb059d12c6bf22f968e1bd8d08f" translate="yes" xml:space="preserve">
          <source>An interface to be implemented by objects that can determine the settings of an &lt;code&gt;IIOParam&lt;/code&gt; object, either by putting up a GUI to obtain values from a user, or by other means.</source>
          <target state="translated">사용자로부터 값을 얻기 위해 GUI를 배치하거나 다른 방법으로 &lt;code&gt;IIOParam&lt;/code&gt; 객체 의 설정을 결정할 수있는 객체에 의해 구현되는 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="704614bcc91fbb9d9d9d8aa837b4790c38756fef" translate="yes" xml:space="preserve">
          <source>An interface to be implemented by objects that can determine the settings of an &lt;code&gt;IIOParam&lt;/code&gt; object, either by putting up a GUI to obtain values from a user, or by other means. This interface merely specifies a generic &lt;code&gt;activate&lt;/code&gt; method that invokes the controller, without regard for how the controller obtains values (</source>
          <target state="translated">사용자로부터 값을 얻기 위해 GUI를 배치하거나 다른 방법으로 &lt;code&gt;IIOParam&lt;/code&gt; 객체 의 설정을 결정할 수있는 객체에 의해 구현되는 인터페이스 입니다. 이 인터페이스 는 컨트롤러가 값을 얻는 방법에 관계없이 컨트롤러를 호출 하는 일반 &lt;code&gt;activate&lt;/code&gt; 메소드 만 지정 합니다 (</target>
        </trans-unit>
        <trans-unit id="958b0e201b12034deea574084c623f01786e64b4" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageReader&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of pixel updates.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 구현에서 픽셀 업데이트의 이미지 및 썸네일 읽기 방법을 호출자에게 알리기 위해 사용하는 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="5d421100f8ff77e709f5a29de3f264cd0725ab7a" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageReader&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of progress.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 구현에서 호출자에게 이미지 및 썸네일 읽기 진행 방법을 알리기 위해 사용하는 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="8c69e1e6c460866a883a4d9f5a86b0213afc74b1" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageReader&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of warnings (non-fatal errors).</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 구현에서 호출자에게 이미지 및 썸네일 읽기 방법 경고 (치명적이지 않은 오류)를 알리기 위해 사용하는 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="e9184487a9ba25caed0da69072956f441d66d8dd" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageReader&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of warnings (non-fatal errors). Fatal errors cause the relevant read method to throw an &lt;code&gt;IIOException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 구현에서 호출자에게 이미지 및 썸네일 읽기 방법 경고 (치명적이지 않은 오류)를 알리기 위해 사용하는 인터페이스 입니다. 치명적인 오류로 인해 관련 읽기 메소드에서 &lt;code&gt;IIOException&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="4999dd91a8ac2dbce03e6e230634b78004e7043f" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageWriter&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of warnings (non-fatal errors).</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; 구현에서 호출자의 이미지 및 썸네일 읽기 방법 경고 (치명적이지 않은 오류)를 알리기 위해 사용하는 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="16fd410b089b3792b23fa854a31a1000a4975534" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageWriter&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of warnings (non-fatal errors). Fatal errors cause the relevant read method to throw an &lt;code&gt;IIOException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; 구현에서 호출자의 이미지 및 썸네일 읽기 방법 경고 (치명적이지 않은 오류)를 알리기 위해 사용하는 인터페이스 입니다. 치명적인 오류로 인해 관련 읽기 메소드에서 &lt;code&gt;IIOException&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="8095214fd7fa66bb3c5c13b76c917e45bbb8dc4f" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageWriter&lt;/code&gt; implementations to notify callers of their image writing methods of progress.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; 구현에서 호출자에게 이미지 작성 방법을 알리기 위해 사용하는 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="198c2e226d97a781d7d80cfc4dcc281225d59170" translate="yes" xml:space="preserve">
          <source>An intermediate weight between &lt;code&gt;WEIGHT_LIGHT&lt;/code&gt; and &lt;code&gt;WEIGHT_STANDARD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WEIGHT_LIGHT&lt;/code&gt; 및 &lt;code&gt;WEIGHT_STANDARD&lt;/code&gt; 사이의 중간 가중치 입니다.</target>
        </trans-unit>
        <trans-unit id="50cde2de178fb34f0c0b71441c533a84c9bbf8d4" translate="yes" xml:space="preserve">
          <source>An intermediate weight between &lt;code&gt;WEIGHT_REGULAR&lt;/code&gt; and &lt;code&gt;WEIGHT_BOLD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WEIGHT_REGULAR&lt;/code&gt; 과 &lt;code&gt;WEIGHT_BOLD&lt;/code&gt; 사이의 중간 가중치 .</target>
        </trans-unit>
        <trans-unit id="c679ec33508648309245518691c0555b479d3a43" translate="yes" xml:space="preserve">
          <source>An interpreter for printf-style format strings.</source>
          <target state="translated">printf 스타일 형식 문자열을위한 인터프리터.</target>
        </trans-unit>
        <trans-unit id="1be3701be43fb57dc89fa26d9a9b2eb934eb287f" translate="yes" xml:space="preserve">
          <source>An interpreter for printf-style format strings. This class provides support for layout justification and alignment, common formats for numeric, string, and date/time data, and locale-specific output. Common Java types such as &lt;code&gt;byte&lt;/code&gt;, &lt;a href=&quot;../math/bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; are supported. Limited formatting customization for arbitrary user types is provided through the &lt;a href=&quot;formattable&quot;&gt;&lt;code&gt;Formattable&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">printf 스타일 형식 문자열을위한 인터프리터. 이 클래스는 레이아웃 정렬 및 정렬, 숫자, 문자열 및 날짜 / 시간 데이터의 공통 형식 및 로케일 별 출력을 지원합니다. &lt;code&gt;byte&lt;/code&gt; , &lt;a href=&quot;../math/bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 와 같은 일반적인 Java 유형 이 지원됩니다. 임의의 사용자 유형에 대한 제한된 형식 사용자 정의는 &lt;a href=&quot;formattable&quot;&gt; &lt;code&gt;Formattable&lt;/code&gt; &lt;/a&gt; 인터페이스를 통해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="b2bc212b1f9739b742dda5b63173a4389d4313d8" translate="yes" xml:space="preserve">
          <source>An interpreter resource is unavailable (e.g., font, form).</source>
          <target state="translated">통역사 리소스를 사용할 수 없습니다 (예 : 글꼴, 양식).</target>
        </trans-unit>
        <trans-unit id="b70efde1e9f9def01cc58530942fe1eb9d3337d2" translate="yes" xml:space="preserve">
          <source>An intersection type can be either implicitly or explicitly declared in a program. For example, the bound of the type parameter &lt;code&gt;&amp;lt;T extends Number &amp;amp; Runnable&amp;gt;&lt;/code&gt; is an (implicit) intersection type. As of &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt;, this is represented by an &lt;code&gt;IntersectionType&lt;/code&gt; with &lt;code&gt;Number&lt;/code&gt; and &lt;code&gt;Runnable&lt;/code&gt; as its bounds.</source>
          <target state="translated">교차 유형은 프로그램에서 암시 적으로 또는 명시 적으로 선언 될 수 있습니다. 예를 들어, 유형 매개 변수 &lt;code&gt;&amp;lt;T extends Number &amp;amp; Runnable&amp;gt;&lt;/code&gt; 의 경계 는 (암시 적) 교차 유형입니다. 현재 &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; ,이은으로 표시됩니다 &lt;code&gt;IntersectionType&lt;/code&gt; 와 &lt;code&gt;Number&lt;/code&gt; 와 &lt;code&gt;Runnable&lt;/code&gt; 의 경계있다.</target>
        </trans-unit>
        <trans-unit id="8fb6758df7e84cf28e603a0746619b1b48eaf6d0" translate="yes" xml:space="preserve">
          <source>An intersection type can be either implicitly or explicitly declared in a program. For example, the bound of the type parameter &lt;code&gt;&amp;lt;T extends Number &amp;amp; Runnable&amp;gt;&lt;/code&gt; is an (implicit) intersection type. This is represented by an &lt;code&gt;IntersectionType&lt;/code&gt; with &lt;code&gt;Number&lt;/code&gt; and &lt;code&gt;Runnable&lt;/code&gt; as its bounds.</source>
          <target state="translated">교차 유형은 프로그램에서 내재적으로 또는 명시 적으로 선언 될 수 있습니다. 예를 들어, 유형 매개 변수 &lt;code&gt;&amp;lt;T extends Number &amp;amp; Runnable&amp;gt;&lt;/code&gt; 의 경계 는 (암시 적) 교차 유형입니다. 이것은 경계로 &lt;code&gt;Number&lt;/code&gt; 및 &lt;code&gt;Runnable&lt;/code&gt; 을 갖는 &lt;code&gt;IntersectionType&lt;/code&gt; 으로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="5a0034aa1f871363656f40b2d647a5fa4c475af2" translate="yes" xml:space="preserve">
          <source>An intersection type.</source>
          <target state="translated">교차로 유형.</target>
        </trans-unit>
        <trans-unit id="f56f7cbbb1fbc99462be0959719b6e07a2cc3aae" translate="yes" xml:space="preserve">
          <source>An invalid &lt;code&gt;FilePermission&lt;/code&gt; does not imply any object except for itself. An invalid &lt;code&gt;FilePermission&lt;/code&gt; is not implied by any object except for itself or a &lt;code&gt;FilePermission&lt;/code&gt; on &quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot; whose actions is a superset of this invalid &lt;code&gt;FilePermission&lt;/code&gt;. Even if two &lt;code&gt;FilePermission&lt;/code&gt; are created with the same invalid path, one does not imply the other.</source>
          <target state="translated">유효하지 않은 &lt;code&gt;FilePermission&lt;/code&gt; 은 자신을 제외한 어떤 개체도 의미하지 않습니다. 유효하지 않은 &lt;code&gt;FilePermission&lt;/code&gt; 은 자체 또는 조치가이 유효하지 않은 &lt;code&gt;FilePermission&lt;/code&gt; 의 수퍼 세트 인 &quot;&amp;lt;&amp;lt; ALL FILES &amp;gt;&amp;gt;&quot;의 &lt;code&gt;FilePermission&lt;/code&gt; 을 제외한 모든 오브젝트에 의해 암시되지 않습니다 . 두 개의 &lt;code&gt;FilePermission&lt;/code&gt; 이 동일한 유효하지 않은 경로로 생성 되더라도 하나는 다른 하나를 의미하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="18e4f95ce83cbdf52576efe50401011128c2e385" translate="yes" xml:space="preserve">
          <source>An invocation of the &lt;code&gt;hashCode&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, or &lt;code&gt;toString&lt;/code&gt; methods declared in &lt;code&gt;java.lang.Object&lt;/code&gt; on a proxy instance will be encoded and dispatched to the invocation handler's &lt;code&gt;invoke&lt;/code&gt; method in the same manner as interface method invocations are encoded and dispatched, as described above. The declaring class of the &lt;code&gt;Method&lt;/code&gt; object passed to &lt;code&gt;invoke&lt;/code&gt; will be &lt;code&gt;java.lang.Object&lt;/code&gt;. Other public methods of a proxy instance inherited from &lt;code&gt;java.lang.Object&lt;/code&gt; are not overridden by a proxy class, so invocations of those methods behave like they do for instances of &lt;code&gt;java.lang.Object&lt;/code&gt;.</source>
          <target state="translated">의 호출 &lt;code&gt;hashCode&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; 하거나 &lt;code&gt;toString&lt;/code&gt; 선언 방법 &lt;code&gt;java.lang.Object&lt;/code&gt; 상위 프록시 인스턴스는 인코딩 호출 핸들러의 파견 될 &lt;code&gt;invoke&lt;/code&gt; 상술 한 바와 같은 인터페이스 메소드 호출은, 인코딩 전달되는 것과 동일한 방식으로하는 방법. 의 선언 클래스 &lt;code&gt;Method&lt;/code&gt; 객체에 전달 &lt;code&gt;invoke&lt;/code&gt; 될 것입니다 &lt;code&gt;java.lang.Object&lt;/code&gt; 상위 . &lt;code&gt;java.lang.Object&lt;/code&gt; 에서 상속 된 프록시 인스턴스의 다른 공용 메소드는 프록시 클래스로 대체되지 않으므로 해당 메소드의 호출은 &lt;code&gt;java.lang.Object&lt;/code&gt; 인스턴스에서와 같이 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="a087ff4a4c71801565929f0f7742d008e4b347de" translate="yes" xml:space="preserve">
          <source>An invocation of the form &lt;code&gt;InvocationEvent(source, runnable, notifier, catchThrowables)&lt;/code&gt; behaves in exactly the same way as the invocation of &lt;a href=&quot;#%3Cinit%3E(java.lang.Object,int,java.lang.Runnable,java.lang.Object,boolean)&quot;&gt;&lt;code&gt;InvocationEvent(source, InvocationEvent.INVOCATION_DEFAULT, runnable, notifier, catchThrowables)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">폼의 호출 &lt;code&gt;InvocationEvent(source, runnable, notifier, catchThrowables)&lt;/code&gt; 의 호출과 완전히 같게 &lt;a href=&quot;#%3Cinit%3E(java.lang.Object,int,java.lang.Runnable,java.lang.Object,boolean)&quot;&gt; &lt;code&gt;InvocationEvent(source, InvocationEvent.INVOCATION_DEFAULT, runnable, notifier, catchThrowables)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02084ccd089fb9ba5b34684811be92c7932968bb" translate="yes" xml:space="preserve">
          <source>An invocation of this convenience method of the form</source>
          <target state="translated">이 형태의 편리한 방법의 호출</target>
        </trans-unit>
        <trans-unit id="064f9f6a19cc9c72a3813d06f85698074abdf4d5" translate="yes" xml:space="preserve">
          <source>An invocation of this method attempts to read up to</source>
          <target state="translated">이 메소드를 호출하면</target>
        </trans-unit>
        <trans-unit id="2082ad63b5802a83d96d686800f26ae018172330" translate="yes" xml:space="preserve">
          <source>An invocation of this method behaves in exactly the same manner as the invocation:</source>
          <target state="translated">이 메소드의 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="914d92637999d05b5f5ecc129be8343bcdbb2cd1" translate="yes" xml:space="preserve">
          <source>An invocation of this method behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드의 호출은 호출과 정확히 같은 방식으로 작동합니다</target>
        </trans-unit>
        <trans-unit id="cbe9ce1edab8686cdc43a5ccce3acb01a0faf5a4" translate="yes" xml:space="preserve">
          <source>An invocation of this method has exactly the same effect as invoking &lt;code&gt;decode(src.getBytes(StandardCharsets.ISO_8859_1))&lt;/code&gt;</source>
          <target state="translated">이 메소드를 호출하면, &lt;code&gt;decode(src.getBytes(StandardCharsets.ISO_8859_1))&lt;/code&gt; 를 호출하는 것과 같은 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7caa32a4808cce065e4e67e7f8d27283bfccb723" translate="yes" xml:space="preserve">
          <source>An invocation of this method is equivalent to (but may be more efficient than):</source>
          <target state="translated">이 메소드의 호출은 다음과 같습니다 (그러나보다 효율적일 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="ee88916f6b06f87c913bca5d248ecc94b669f687" translate="yes" xml:space="preserve">
          <source>An invocation of this method is equivalent to the following:</source>
          <target state="translated">이 메소드의 호출은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1a2f1bee3ab00a9d52855db99b989f2944f21f97" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form</source>
          <target state="translated">이 형식의 메소드의 호출</target>
        </trans-unit>
        <trans-unit id="1d1056e77880b717013e83c03c632b834d5cf7bb" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;c.read(dsts)&lt;/code&gt; behaves in exactly the same manner as the invocation</source>
          <target state="translated">&lt;code&gt;c.read(dsts)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="4c20b726689975f079a92979ce6e5fe5611cb235" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;c.write(srcs)&lt;/code&gt; behaves in exactly the same manner as the invocation</source>
          <target state="translated">&lt;code&gt;c.write(srcs)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="fda405a4af30c2b03897dcc6cc855f80942b96dc" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;ch.lock(att,handler)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;ch.lock(att,handler)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="9d5dfcd8417b5ff81efec1d6ae8b29ed3601a18c" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;ch.tryLock()&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;ch.tryLock()&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="2380cd4d3291f9c4d72c90298c350afad394f8f6" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;con.printf(format, args)&lt;/code&gt; behaves in exactly the same way as the invocation of</source>
          <target state="translated">&lt;code&gt;con.printf(format, args)&lt;/code&gt; 의이 메소드를 호출 하면 다음과 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="825b80b9cfc2f18e17ab5a08098b4e1e2da5e131" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;dst.append(c)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;dst.append(c)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="9896ff401379f09fbde427b627bab0e00790374f" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;dst.append(csq)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;dst.append(csq)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ab71ff13231d956725be26918c42cd1489165111" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;dst.append(csq, start,
 end)&lt;/code&gt; when &lt;code&gt;csq&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;csq&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 &lt;code&gt;dst.append(csq, start, end)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ee689af01b8cc0aa10d632365cc4ab2b45e2e2c7" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;fc.lock()&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;fc.lock()&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="f377deea6a4f8bbc62edf414a6c182fd4c6bbb9c" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;fc.tryLock()&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;fc.tryLock()&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="4ddf845efd15bb861512809660e2c070a8b138f8" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;file.setExcutable(arg)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;file.setExcutable(arg)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="9451e2d715a0fc54ac9ec4934e338274cd043a56" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;file.setReadable(arg)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;file.setReadable(arg)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a93d60baf3849e3dd8ae08e1f3ca220670edba3f" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;file.setWritable(arg)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;file.setWritable(arg)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="65b93562e93cd954b7c6ef7537a13a065d128669" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;findInLine(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;findInLine(Pattern.compile(pattern))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;findInLine(pattern)&lt;/code&gt; 형식의이 메소드 호출은 &lt;code&gt;findInLine(Pattern.compile(pattern))&lt;/code&gt; 호출 과 정확히 동일한 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="231464552e119acac1df2df52fc2e73d4a39b504" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;findWithinHorizon(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;findWithinHorizon(Pattern.compile(pattern), horizon)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;findWithinHorizon(pattern)&lt;/code&gt; 형식의이 메소드 호출은 &lt;code&gt;findWithinHorizon(Pattern.compile(pattern), horizon)&lt;/code&gt; 호출과 정확히 동일한 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="2f473aa7c335182d7080b89c3e57c9a2e57017ea" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;findWithinHorizon(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;findWithinHorizon(Pattern.compile(pattern, horizon))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;findWithinHorizon(pattern)&lt;/code&gt; 형식의이 메소드 호출은 &lt;code&gt;findWithinHorizon(Pattern.compile(pattern, horizon))&lt;/code&gt; 호출과 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="f9b7f1b8e4b46490a2a029e1e7ea5416d8963aa9" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;hasNext(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;hasNext(Pattern.compile(pattern))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hasNext(pattern)&lt;/code&gt; 형식의이 메소드 호출은 호출 &lt;code&gt;hasNext(Pattern.compile(pattern))&lt;/code&gt; 정확히 동일한 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="70aae180cd60cc8ded23f320fe8576b655ce52b3" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;k.isAcceptable()&lt;/code&gt; behaves in exactly the same way as the expression</source>
          <target state="translated">&lt;code&gt;k.isAcceptable()&lt;/code&gt; 형식의이 메소드를 호출 하면 표현식과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d578285c972d7adc4e4be45a2ecd03e40cee60b3" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;k.isConnectable()&lt;/code&gt; behaves in exactly the same way as the expression</source>
          <target state="translated">&lt;code&gt;k.isConnectable()&lt;/code&gt; 형식의이 메소드를 호출 하면 표현식과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="1ced57ab5937e0f66c8de408564c99106fd4f148" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;k.isReadable()&lt;/code&gt; behaves in exactly the same way as the expression</source>
          <target state="translated">&lt;code&gt;k.isReadable()&lt;/code&gt; 형식의이 메소드 호출은 표현식과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="0bf7e78e722c8d1bd930c76c36c947e4667debb8" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;k.isWritable()&lt;/code&gt; behaves in exactly the same way as the expression</source>
          <target state="translated">&lt;code&gt;k.isWritable()&lt;/code&gt; 형식의이 메소드 호출은 표현식과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="036d6cd9a12f156945ebdc197bdfa4fa439c5531" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;next(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;next(Pattern.compile(pattern))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;next(pattern)&lt;/code&gt; 형식의이 메소드 호출은 &lt;code&gt;next(Pattern.compile(pattern))&lt;/code&gt; 호출과 정확히 같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="34fe06dc7aca7204f15104b3ee1a52a6e98dec05" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextBigInteger()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;nextBigInteger(radix)&lt;/code&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">&lt;code&gt;nextBigInteger()&lt;/code&gt; 형식의이 메소드 호출은 &lt;code&gt;nextBigInteger(radix)&lt;/code&gt; 호출과 정확히 동일한 방식으로 작동합니다 . 여기서 &lt;code&gt;radix&lt;/code&gt; 는이 스캐너의 기본 기수입니다.</target>
        </trans-unit>
        <trans-unit id="472566cc72fdeb223f84db15e98f11bc1e99c972" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextByte()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;nextByte(radix)&lt;/code&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">&lt;code&gt;nextByte()&lt;/code&gt; 형식의이 메소드 호출은 호출 &lt;code&gt;nextByte(radix)&lt;/code&gt; 와 정확히 동일한 방식으로 작동합니다 . 여기서 &lt;code&gt;radix&lt;/code&gt; 는이 스캐너의 기본 기수입니다.</target>
        </trans-unit>
        <trans-unit id="dedac706fed45923934acf3a9494812d3bbaa943" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextInt()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;nextInt(radix)&lt;/code&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">&lt;code&gt;nextInt()&lt;/code&gt; 형식의이 메소드 호출은 호출 &lt;code&gt;nextInt(radix)&lt;/code&gt; 와 정확히 같은 방식으로 작동합니다 . 여기서 &lt;code&gt;radix&lt;/code&gt; 는이 스캐너의 기본 기수입니다.</target>
        </trans-unit>
        <trans-unit id="7c3f3951a44b5a3e4ec43bd770efb6d214085940" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextLong()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;nextLong(radix)&lt;/code&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">&lt;code&gt;nextLong()&lt;/code&gt; 형식의이 메소드 호출은 호출 &lt;code&gt;nextLong(radix)&lt;/code&gt; 와 정확히 동일한 방식으로 작동합니다 . 여기서 &lt;code&gt;radix&lt;/code&gt; 는이 스캐너의 기본 기수입니다.</target>
        </trans-unit>
        <trans-unit id="680c6e4204c37076a31821df6bd40f43857cf718" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextShort()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;#nextShort(int)&quot;&gt;&lt;code&gt;nextShort(radix)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">&lt;code&gt;nextShort()&lt;/code&gt; 양식의이 메소드 호출은 &lt;a href=&quot;#nextShort(int)&quot;&gt; &lt;code&gt;nextShort(radix)&lt;/code&gt; &lt;/a&gt; 호출과 정확히 동일한 방식으로 작동합니다 . 여기서 &lt;code&gt;radix&lt;/code&gt; 는이 스캐너의 기본 기수입니다.</target>
        </trans-unit>
        <trans-unit id="afd5481a1c02a9b69e6e566cb3371754672cea3d" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextShort()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;nextShort(radix)&lt;/code&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">&lt;code&gt;nextShort()&lt;/code&gt; 형식의이 메소드 호출은 &lt;code&gt;nextShort(radix)&lt;/code&gt; 호출과 정확히 같은 방식으로 작동합니다 . 여기서 &lt;code&gt;radix&lt;/code&gt; 는이 스캐너의 기본 기수입니다.</target>
        </trans-unit>
        <trans-unit id="893399664374adc89d8dfe7abbae4a835e1e9862" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.append(c)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;out.append(c)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="2548c2b619458b8bafd604b0b872b084b8292f78" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.append(csq)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;out.append(csq)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d1ee2fe3ba11afd1b66036ed9094637f79174c89" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.append(csq, start, end)&lt;/code&gt; when &lt;code&gt;csq&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;csq&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 &lt;code&gt;out.append(csq, start, end)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="78af4601a4ce79cffb952b57d010bfe36afa6733" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.append(csq, start, end)&lt;/code&gt; when &lt;code&gt;csq&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, behaves in exactly the same way as the invocation</source>
          <target state="translated">폼의 메소드 호출 &lt;code&gt;out.append(csq, start, end)&lt;/code&gt; 경우 &lt;code&gt;csq&lt;/code&gt; 아닌 &lt;code&gt;null&lt;/code&gt; , 호출과 완전히 같게</target>
        </trans-unit>
        <trans-unit id="6a46581a8ed3a280aaf0b0a8f51523b4742cdfa8" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.printf(format, args)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;out.printf(format, args)&lt;/code&gt; 의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ddb522558fd6be4d10499d897876d013e970f368" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.printf(l, format, args)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;out.printf(l, format, args)&lt;/code&gt; 의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="4f1f4ec34f54274c3c3a16a3253635894d21da2c" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;props.storeToXML(os,
 comment)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;props.storeToXML(os, comment, &quot;UTF-8&quot;);&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;props.storeToXML(os, comment)&lt;/code&gt; 형식의이 메소드 호출은 호출 &lt;code&gt;props.storeToXML(os, comment, &quot;UTF-8&quot;);&lt;/code&gt; 과 정확히 동일한 방식으로 작동합니다 . .</target>
        </trans-unit>
        <trans-unit id="5c396b3c9e7518659888b7c624ec71d35ec4afe5" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;scanner.reset()&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;scanner.reset()&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="11038a7482ef7ed4c1596f8daf3aafdfed957002" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;skip(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;skip(Pattern.compile(pattern))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;skip(pattern)&lt;/code&gt; 형식의이 메소드 호출은 &lt;code&gt;skip(Pattern.compile(pattern))&lt;/code&gt; 호출과 정확히 동일한 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="39ff8d11d6f443b74aed3b92fe6fdf4ee20f7674" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;useDelimiter(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;useDelimiter(Pattern.compile(pattern))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;useDelimiter(pattern)&lt;/code&gt; 형식의이 메소드 호출은 호출 &lt;code&gt;useDelimiter(Pattern.compile(pattern))&lt;/code&gt; 정확히 동일한 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="2268c27779cfcec451ddef119960d7558d618889" translate="yes" xml:space="preserve">
          <source>An invocation of this method upon a charset &lt;code&gt;cs&lt;/code&gt; returns the same result as the expression</source>
          <target state="translated">문자셋 &lt;code&gt;cs&lt;/code&gt; 에서이 메소드를 호출 하면 표현식과 동일한 결과가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="067cfb030a3c6a3432a1c639d9a8ee76c48dc1f8" translate="yes" xml:space="preserve">
          <source>An invocation of this method will block until the region can be locked, this channel is closed, or the invoking thread is interrupted, whichever comes first.</source>
          <target state="translated">이 메소드의 호출은 영역을 잠글 수 있거나이 채널이 닫히거나 호출 스레드가 중단 될 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="e1754bf6e026ade7a16c8dc51da7ee9fb56f4055" translate="yes" xml:space="preserve">
          <source>An item in a list has been deselected.</source>
          <target state="translated">목록의 항목이 선택 취소되었습니다.</target>
        </trans-unit>
        <trans-unit id="dbcc66f4685252c775c85b016dc0d474bf972e49" translate="yes" xml:space="preserve">
          <source>An item in a list has been selected.</source>
          <target state="translated">목록의 항목이 선택되었습니다.</target>
        </trans-unit>
        <trans-unit id="46a2f4efe8282faea0a43bc45ee5cde11de48441" translate="yes" xml:space="preserve">
          <source>An iterator</source>
          <target state="translated">반복자</target>
        </trans-unit>
        <trans-unit id="30c01ec48c8c3133042063ed2bec050cbe411f81" translate="yes" xml:space="preserve">
          <source>An iterator for lists that allows the programmer to traverse the list in either direction, modify the list during iteration, and obtain the iterator's current position in the list.</source>
          <target state="translated">프로그래머가 목록을 어느 방향 으로든 통과하고, 반복하는 동안 목록을 수정하고, 목록에서 반복자의 현재 위치를 얻을 수있는 목록의 반복자입니다.</target>
        </trans-unit>
        <trans-unit id="7163e2066dcdc4e7346bf1c7042e31171b6beb79" translate="yes" xml:space="preserve">
          <source>An iterator for lists that allows the programmer to traverse the list in either direction, modify the list during iteration, and obtain the iterator's current position in the list. A &lt;code&gt;ListIterator&lt;/code&gt; has no current element; its</source>
          <target state="translated">프로그래머가 목록을 어느 방향 으로든 통과하고, 반복하는 동안 목록을 수정하고, 목록에서 반복자의 현재 위치를 얻을 수있는 목록의 반복자입니다. &lt;code&gt;ListIterator&lt;/code&gt; 전류가 소자를 갖고; 이것의</target>
        </trans-unit>
        <trans-unit id="7b40a777cfe8e56812070cdfa36c6603ecb5508e" translate="yes" xml:space="preserve">
          <source>An iterator over a collection.</source>
          <target state="translated">컬렉션에 대한 반복자입니다.</target>
        </trans-unit>
        <trans-unit id="c65f0de922f07a3303c77f47ed4081799ddd53b0" translate="yes" xml:space="preserve">
          <source>An iterator over a collection. &lt;code&gt;Iterator&lt;/code&gt; takes the place of &lt;a href=&quot;enumeration&quot;&gt;&lt;code&gt;Enumeration&lt;/code&gt;&lt;/a&gt; in the Java Collections Framework. Iterators differ from enumerations in two ways:</source>
          <target state="translated">컬렉션에 대한 반복자입니다. &lt;code&gt;Iterator&lt;/code&gt; 는 Java Collections Framework에서 &lt;a href=&quot;enumeration&quot;&gt; &lt;code&gt;Enumeration&lt;/code&gt; &lt;/a&gt; 를 대신 합니다. 반복자는 두 가지 측면에서 열거와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="7a65630601f41a0c9113e2d5b5206c583073dfc0" translate="yes" xml:space="preserve">
          <source>An iterator providing access to the text and its attributes.</source>
          <target state="translated">텍스트 및 해당 속성에 대한 액세스를 제공하는 반복자입니다.</target>
        </trans-unit>
        <trans-unit id="3f76c08e46cf2960a1257a02fdadfd7779d2904e" translate="yes" xml:space="preserve">
          <source>An iterator that lazily loads providers for this loader's service</source>
          <target state="translated">이 로더 서비스에 대한 제공자를 느리게로드하는 반복자</target>
        </trans-unit>
        <trans-unit id="23afedeacde9a9bed2fa5c31e151d21af2f2e4ab" translate="yes" xml:space="preserve">
          <source>An iterator to iterate over a particular type of tag.</source>
          <target state="translated">특정 유형의 태그를 반복하는 반복기입니다.</target>
        </trans-unit>
        <trans-unit id="e126859df76b9d3e65b7cdda664fd4ec93c4fe58" translate="yes" xml:space="preserve">
          <source>An iterator to iterate over a particular type of tag. The iterator is not thread safe. If reliable access to the document is not already ensured by the context under which the iterator is being used, its use should be performed under the protection of Document.render.</source>
          <target state="translated">특정 유형의 태그를 반복하는 반복기입니다. 반복자는 스레드로부터 안전하지 않습니다. 반복기가 사용되는 컨텍스트에 의해 문서에 대한 안정적인 액세스가 아직 보장되지 않은 경우 Document.render의 보호하에 사용을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="c3857a07c2fe4bc7a3d37d27ab1a441e369abaf1" translate="yes" xml:space="preserve">
          <source>An non-null enumeration of the addresses (&lt;code&gt;RefAddr&lt;/code&gt;) in this reference. If this reference has zero addresses, an enumeration with zero elements is returned.</source>
          <target state="translated">이 참조 내의 null 이외의 주소 ( &lt;code&gt;RefAddr&lt;/code&gt; ) 이 참조에 주소가 0이면 요소가 0 인 열거가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f4e0656df485f239fd79a7e41b58a4c00eebb2fd" translate="yes" xml:space="preserve">
          <source>An object can be registered to listen to multiple lines. The event it receives in its &lt;code&gt;update&lt;/code&gt; method will specify which line created the event, what type of event it was (&lt;code&gt;OPEN&lt;/code&gt;, &lt;code&gt;CLOSE&lt;/code&gt;, &lt;code&gt;START&lt;/code&gt;, or &lt;code&gt;STOP&lt;/code&gt;), and how many sample frames the line had processed at the time the event occurred.</source>
          <target state="translated">여러 줄을들을 수 있도록 객체를 등록 할 수 있습니다. &lt;code&gt;update&lt;/code&gt; 메소드 에서 수신되는 이벤트 는 이벤트를 작성한 행, 이벤트 유형 ( &lt;code&gt;OPEN&lt;/code&gt; , &lt;code&gt;CLOSE&lt;/code&gt; , &lt;code&gt;START&lt;/code&gt; 또는 &lt;code&gt;STOP&lt;/code&gt; ) 및 이벤트가 발생했을 때 행이 처리 한 샘플 프레임 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="67d5e20df3e00be89dea2fbc83d556b4aa655ffd" translate="yes" xml:space="preserve">
          <source>An object containing a collection of &lt;code&gt;Accessibles&lt;/code&gt; that together represents &lt;code&gt;HTML&lt;/code&gt; content.</source>
          <target state="translated">&lt;code&gt;HTML&lt;/code&gt; 콘텐츠 를 함께 나타내는 &lt;code&gt;Accessibles&lt;/code&gt; 컬렉션을 포함하는 개체 입니다.</target>
        </trans-unit>
        <trans-unit id="798dfab615a54ab4e98b8fcc9b3daedf86fc2744" translate="yes" xml:space="preserve">
          <source>An object containing a collection of &lt;code&gt;Accessibles&lt;/code&gt; that together represents &lt;code&gt;HTML&lt;/code&gt; content. The child &lt;code&gt;Accessibles&lt;/code&gt; would include objects implementing &lt;code&gt;AccessibleText&lt;/code&gt;, &lt;code&gt;AccessibleHypertext&lt;/code&gt;, &lt;code&gt;AccessibleIcon&lt;/code&gt;, and other interfaces.</source>
          <target state="translated">&lt;code&gt;HTML&lt;/code&gt; 콘텐츠 를 함께 나타내는 &lt;code&gt;Accessibles&lt;/code&gt; 컬렉션을 포함하는 개체 입니다. 자식 &lt;code&gt;Accessibles&lt;/code&gt; 에는 &lt;code&gt;AccessibleText&lt;/code&gt; , &lt;code&gt;AccessibleHypertext&lt;/code&gt; , &lt;code&gt;AccessibleIcon&lt;/code&gt; 및 기타 인터페이스를 구현하는 객체가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="44d1ab8265abc27d4c2b33ceead8243e2955e00f" translate="yes" xml:space="preserve">
          <source>An object created using &lt;code&gt;refInfo&lt;/code&gt; and &lt;code&gt;attrs&lt;/code&gt;; or &lt;code&gt;refInfo&lt;/code&gt; if an object cannot be created by a factory.</source>
          <target state="translated">&lt;code&gt;refInfo&lt;/code&gt; 와 &lt;code&gt;attrs&lt;/code&gt; 를 사용하여 생성 된 객체 ; 나 &lt;code&gt;refInfo&lt;/code&gt; 객체는 공장에서 생성 할 수없는 경우.</target>
        </trans-unit>
        <trans-unit id="378e15d1e59f59f0e04a9fb9f800f5ea92710fd2" translate="yes" xml:space="preserve">
          <source>An object created using &lt;code&gt;refInfo&lt;/code&gt;; or &lt;code&gt;refInfo&lt;/code&gt; if an object cannot be created using the algorithm described above.</source>
          <target state="translated">&lt;code&gt;refInfo&lt;/code&gt; 를 사용하여 생성 된 객체 ; 또는 위에서 설명한 알고리즘을 사용하여 객체를 만들 수없는 경우 &lt;code&gt;refInfo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4be5a63b4d53c1802650fc0935a9efa7af1aeb66" translate="yes" xml:space="preserve">
          <source>An object describing the structure of metadata documents returned from &lt;code&gt;IIOMetadata.getAsTree&lt;/code&gt; and passed to &lt;code&gt;IIOMetadata.setFromTree&lt;/code&gt; and &lt;code&gt;mergeTree&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IIOMetadata.getAsTree&lt;/code&gt; 에서 리턴 되어 &lt;code&gt;IIOMetadata.setFromTree&lt;/code&gt; 및 &lt;code&gt;mergeTree&lt;/code&gt; 로 전달 된 메타 데이터 문서의 구조를 설명하는 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="7b3264c7f6084a3ed78f6fe84f90435fb80c17e2" translate="yes" xml:space="preserve">
          <source>An object describing the structure of metadata documents returned from &lt;code&gt;IIOMetadata.getAsTree&lt;/code&gt; and passed to &lt;code&gt;IIOMetadata.setFromTree&lt;/code&gt; and &lt;code&gt;mergeTree&lt;/code&gt;. Document structures are described by a set of constraints on the type and number of child elements that may belong to a given parent element type, the names, types, and values of attributes that may belong to an element, and the type and values of &lt;code&gt;Object&lt;/code&gt; reference that may be stored at a node.</source>
          <target state="translated">&lt;code&gt;IIOMetadata.getAsTree&lt;/code&gt; 에서 리턴 되어 &lt;code&gt;IIOMetadata.setFromTree&lt;/code&gt; 및 &lt;code&gt;mergeTree&lt;/code&gt; 로 전달 된 메타 데이터 문서의 구조를 설명하는 객체 입니다. 문서 구조는 주어진 상위 요소 유형에 속할 수있는 하위 요소의 유형 및 수, 요소에 속할 수있는 속성의 이름, 유형 및 값, &lt;code&gt;Object&lt;/code&gt; 의 유형 및 값에 대한 제한 조건 세트로 설명됩니다. 노드에 저장 될 수있는 참조.</target>
        </trans-unit>
        <trans-unit id="e013aacb044b75863c3c6acea31e44936e2953c3" translate="yes" xml:space="preserve">
          <source>An object factory must implement the &lt;code&gt;ObjectFactory&lt;/code&gt; interface. In addition, the factory class must be public and must have a public constructor that accepts no parameters.</source>
          <target state="translated">객체 팩토리는 &lt;code&gt;ObjectFactory&lt;/code&gt; 인터페이스를 구현해야합니다 . 또한 팩토리 클래스는 공용이어야하며 매개 변수를 허용하지 않는 공용 생성자가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="f57634087343f8a40efb2049249c6421bcf47b94" translate="yes" xml:space="preserve">
          <source>An object factory must implement the &lt;code&gt;ObjectFactory&lt;/code&gt; interface. In addition, the factory class must be public and must have a public constructor that accepts no parameters. Note that in cases where the factory is in a named module then it must be in a package which is exported by that module to the &lt;code&gt;java.naming&lt;/code&gt; module.</source>
          <target state="translated">오브젝트 팩토리는 &lt;code&gt;ObjectFactory&lt;/code&gt; 인터페이스를 구현해야합니다 . 또한 팩토리 클래스는 공용이어야하며 매개 변수를 허용하지 않는 공용 생성자가 있어야합니다. 팩토리가 명명 된 모듈에있는 경우 해당 모듈에서 &lt;code&gt;java.naming&lt;/code&gt; 모듈 로 내보내는 패키지에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="089ae733cee7448ee497359bd6a4038caf4d787a" translate="yes" xml:space="preserve">
          <source>An object for traversing and partitioning elements of a source.</source>
          <target state="translated">소스의 요소를 순회 및 파티셔닝하기위한 객체입니다.</target>
        </trans-unit>
        <trans-unit id="ec4893d8dba0a2ced11efda016fb64cd6463063a" translate="yes" xml:space="preserve">
          <source>An object for traversing and partitioning elements of a source. The source of elements covered by a Spliterator could be, for example, an array, a &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt;, an IO channel, or a generator function.</source>
          <target state="translated">소스의 요소를 순회 및 파티셔닝하기위한 객체입니다. Spliterator가 다루는 요소의 소스는 예를 들어 배열, &lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt; , IO 채널 또는 생성기 함수일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae0ffd8803b4902460cf76067a1df00f7a716c56" translate="yes" xml:space="preserve">
          <source>An object implementing this interface might not have an address at a given moment. This is indicated by a null return value from &lt;a href=&quot;#getAddress()&quot;&gt;&lt;code&gt;getAddress()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스를 구현하는 객체에는 주어진 순간에 주소가 없을 수 있습니다. 이는 &lt;a href=&quot;#getAddress()&quot;&gt; &lt;code&gt;getAddress()&lt;/code&gt; &lt;/a&gt; 의 null 반환 값으로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="822c4cff800d653b1d1750b80615e8884e56a9e9" translate="yes" xml:space="preserve">
          <source>An object implementing this interface might not have an address at a given moment. This is indicated by a null return value from &lt;a href=&quot;jmxaddressable#getAddress--&quot;&gt;&lt;code&gt;getAddress()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스를 구현하는 객체에는 주어진 순간에 주소가 없을 수 있습니다. 이것은 &lt;a href=&quot;jmxaddressable#getAddress--&quot;&gt; &lt;code&gt;getAddress()&lt;/code&gt; &lt;/a&gt; 의 null 반환 값으로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="b5e76341f33e31cb5825ebfd987cffad5cfcfff6" translate="yes" xml:space="preserve">
          <source>An object name</source>
          <target state="translated">객체 이름</target>
        </trans-unit>
        <trans-unit id="433c19c3e71b265e5f820d8f91a6f1feddfb77c3" translate="yes" xml:space="preserve">
          <source>An object name consists of two parts, the domain and the key properties.</source>
          <target state="translated">객체 이름은 도메인과 키 속성의 두 부분으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="fd629ac5ff0470aa5c363300117872323e52e0a0" translate="yes" xml:space="preserve">
          <source>An object name is a pattern if its domain contains a wildcard or if the object name is a property pattern.</source>
          <target state="translated">도메인에 와일드 카드가 포함되어 있거나 객체 이름이 속성 패턴 인 경우 객체 이름은 패턴입니다.</target>
        </trans-unit>
        <trans-unit id="05470ddffcb8a35ab6b96946eef277986e02cfcd" translate="yes" xml:space="preserve">
          <source>An object name is a pattern on the key properties if it is a pattern on the key property list (e.g. &quot;d:k=v,*&quot;) or on the property values (e.g. &quot;d:k=*&quot;) or on both (e.g. &quot;d:k=*,*&quot;).</source>
          <target state="translated">키 이름 목록 (예 : &quot;d : k = v, *&quot;) 또는 속성 값 (예 : &quot;d : k = *&quot;) 또는 둘 모두의 패턴 인 경우 객체 이름은 키 속성의 패턴입니다. (예 : &quot;d : k = *, *&quot;).</target>
        </trans-unit>
        <trans-unit id="1cf02b2bea44bfe8dfb70b6e7da917173f69cf17" translate="yes" xml:space="preserve">
          <source>An object name pattern, within the context of a query</source>
          <target state="translated">쿼리 컨텍스트 내에서 개체 이름 패턴</target>
        </trans-unit>
        <trans-unit id="837f61ef5bacedbc57cc34635bd28def1073a601" translate="yes" xml:space="preserve">
          <source>An object obtained from the &lt;a href=&quot;mbeanserverfactory#createMBeanServer(java.lang.String)&quot;&gt;&lt;code&gt;createMBeanServer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mbeanserverfactory#newMBeanServer(java.lang.String)&quot;&gt;&lt;code&gt;newMBeanServer&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; class applies security checks to its methods, as follows.</source>
          <target state="translated">&lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; &lt;/a&gt; 클래스 의 &lt;a href=&quot;mbeanserverfactory#createMBeanServer(java.lang.String)&quot;&gt; &lt;code&gt;createMBeanServer&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;mbeanserverfactory#newMBeanServer(java.lang.String)&quot;&gt; &lt;code&gt;newMBeanServer&lt;/code&gt; &lt;/a&gt; 메소드 에서 얻은 객체 는 다음과 같이 해당 메소드에 보안 검사를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="8cb0d83d9f78c2d1fb7ca4ca8d0a5dc38abb04ac" translate="yes" xml:space="preserve">
          <source>An object obtained from the &lt;a href=&quot;mbeanserverfactory#createMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;createMBeanServer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mbeanserverfactory#newMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;newMBeanServer&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; class applies security checks to its methods, as follows.</source>
          <target state="translated">&lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;mbeanserverfactory#createMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;createMBeanServer&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;mbeanserverfactory#newMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;newMBeanServer&lt;/code&gt; &lt;/a&gt; 메소드 로부터 취득 된 객체 클래스 는 다음과 같이 해당 메소드에 보안 점검을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="dd1deddcc8809957374bc776a45093ed0177833e" translate="yes" xml:space="preserve">
          <source>An object of this class implements the MBeanServer interface and wraps another object that also implements that interface.</source>
          <target state="translated">이 클래스의 객체는 MBeanServer 인터페이스를 구현하고 해당 인터페이스를 구현하는 다른 객체를 래핑합니다.</target>
        </trans-unit>
        <trans-unit id="0dce6e4c3869afcda8eddc6634096332fbd35bbb" translate="yes" xml:space="preserve">
          <source>An object of this class implements the MBeanServer interface and wraps another object that also implements that interface. Typically, an implementation of this interface performs some action in some or all methods of the &lt;code&gt;MBeanServer&lt;/code&gt; interface before and/or after forwarding the method to the wrapped object. Examples include security checking and logging.</source>
          <target state="translated">이 클래스의 객체는 MBeanServer 인터페이스를 구현하고 해당 인터페이스를 구현하는 다른 객체를 래핑합니다. 일반적으로이 인터페이스의 구현은 &lt;code&gt;MBeanServer&lt;/code&gt; 의 일부 또는 모든 메소드에서 일부 조치를 수행합니다. 메소드를 랩핑 된 오브젝트에 전달하기 전 및 / 또는 후에 인터페이스 합니다. 예를 들어 보안 검사 및 로깅이 있습니다.</target>
        </trans-unit>
        <trans-unit id="48ab386810c92e6abe6f1370449e8ebba2c7330a" translate="yes" xml:space="preserve">
          <source>An object of this class may not be used in multiple threads running concurrently. Different Transformers may be used concurrently by different threads.</source>
          <target state="translated">이 클래스의 객체는 동시에 실행되는 여러 스레드에서 사용할 수 없습니다. 다른 스레드에서 다른 Transformer를 동시에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="240a8f206940b1e43169eefe880290b86f0b943d" translate="yes" xml:space="preserve">
          <source>An object of this interface is not required to support multi-threaded access, that is, be synchronized. However, it must support concurrent access to different file objects created by this object.</source>
          <target state="translated">이 인터페이스의 객체는 멀티 스레드 액세스를 지원하는 데 필요하지 않습니다. 그러나이 오브젝트가 작성한 다른 파일 오브젝트에 대한 동시 액세스를 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="53e1907bb5670cf7de3b399b28ac0c952d32b275" translate="yes" xml:space="preserve">
          <source>An object reference that may be updated atomically.</source>
          <target state="translated">원자 적으로 업데이트 될 수있는 객체 참조.</target>
        </trans-unit>
        <trans-unit id="b282f1acf58b5c0007ce02dce4a3c7759eebee94" translate="yes" xml:space="preserve">
          <source>An object reference that may be updated atomically. See the &lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; specification for descriptions of the properties of atomic accesses.</source>
          <target state="translated">원자 적으로 업데이트 할 수있는 개체 참조입니다. 원자 적 액세스 속성에 대한 설명은 &lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt; 사양을 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="f67a5489963349154cda78c5255744fe3bf0a4c8" translate="yes" xml:space="preserve">
          <source>An object reference that may be updated atomically. See the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.atomic&lt;/code&gt;&lt;/a&gt; package specification for description of the properties of atomic variables.</source>
          <target state="translated">원자 적으로 업데이트 될 수있는 객체 참조. &lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;java.util.concurrent.atomic&lt;/code&gt; 을&lt;/a&gt; 참조하십시오원자 변수의 특성에 대한 설명은 패키지 스펙을 .</target>
        </trans-unit>
        <trans-unit id="ab19b2ba153a4e5fd72459733d7e0291c256a1b4" translate="yes" xml:space="preserve">
          <source>An object reference to an array of type defined by getTransferType() with the requested pixel data.</source>
          <target state="translated">요청 된 픽셀 데이터로 getTransferType ()에 의해 정의 된 유형의 배열에 대한 객체 참조입니다.</target>
        </trans-unit>
        <trans-unit id="a54a2ac6fb925677d004e71dbb11ce5bdf1ad37f" translate="yes" xml:space="preserve">
          <source>An object that allows a user to incrementally view a large amount of information.</source>
          <target state="translated">사용자가 많은 양의 정보를 점진적으로 볼 수 있도록하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="eddaca345a8359e17a63ead6e93561d7395e916d" translate="yes" xml:space="preserve">
          <source>An object that allows a user to incrementally view a large amount of information. Its children can include scroll bars and a viewport.</source>
          <target state="translated">사용자가 많은 양의 정보를 점진적으로 볼 수 있도록하는 개체입니다. 하위 항목에는 스크롤 막대와 뷰포트가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b9ec020697674c45121e41df9aec985f5a16b05" translate="yes" xml:space="preserve">
          <source>An object that allows the user to select from a bounded range.</source>
          <target state="translated">사용자가 제한된 범위에서 선택할 수 있도록하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="162caf430131a58d85eb72ef4bae96bb0571f50c" translate="yes" xml:space="preserve">
          <source>An object that allows the user to select from a bounded range. For example, a slider might be used to select a number between 0 and 100.</source>
          <target state="translated">사용자가 제한된 범위에서 선택할 수 있도록하는 개체입니다. 예를 들어 슬라이더를 사용하여 0에서 100 사이의 숫자를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="748e457c961fa0e96242cb71b37113485f4c30ea" translate="yes" xml:space="preserve">
          <source>An object that can be used to get information about the types and properties for each parameter marker in a &lt;code&gt;PreparedStatement&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;PreparedStatement&lt;/code&gt; 개체의 각 매개 변수 표식에 대한 유형 및 속성에 대한 정보를 가져 오는 데 사용할 수있는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="81ee5e80e8bf57eedfe2e2956ed70028df73e78e" translate="yes" xml:space="preserve">
          <source>An object that can be used to get information about the types and properties for each parameter marker in a &lt;code&gt;PreparedStatement&lt;/code&gt; object. For some queries and driver implementations, the data that would be returned by a &lt;code&gt;ParameterMetaData&lt;/code&gt; object may not be available until the &lt;code&gt;PreparedStatement&lt;/code&gt; has been executed.</source>
          <target state="translated">&lt;code&gt;PreparedStatement&lt;/code&gt; 개체의 각 매개 변수 표식에 대한 유형 및 속성에 대한 정보를 가져 오는 데 사용할 수있는 개체입니다. 일부 쿼리 및 드라이버 구현의 경우 &lt;code&gt;PreparedStatement&lt;/code&gt; 가 실행될 때까지 &lt;code&gt;ParameterMetaData&lt;/code&gt; 개체에서 반환되는 데이터를 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="bbb153ce913758173257a36075496cb8879b487e" translate="yes" xml:space="preserve">
          <source>An object that can be used to get information about the types and properties of the columns in a &lt;code&gt;ResultSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; 개체 에있는 열의 유형 및 속성에 대한 정보를 가져 오는 데 사용할 수있는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="d12b4cf46f80d94225bc06e4f4c863c951df9141" translate="yes" xml:space="preserve">
          <source>An object that can be used to get information about the types and properties of the columns in a &lt;code&gt;ResultSet&lt;/code&gt; object. The following code fragment creates the &lt;code&gt;ResultSet&lt;/code&gt; object rs, creates the &lt;code&gt;ResultSetMetaData&lt;/code&gt; object rsmd, and uses rsmd to find out how many columns rs has and whether the first column in rs can be used in a &lt;code&gt;WHERE&lt;/code&gt; clause.</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; 개체 에있는 열의 유형 및 속성에 대한 정보를 가져 오는 데 사용할 수있는 개체입니다. 다음 코드 조각은 &lt;code&gt;ResultSet&lt;/code&gt; 개체 rs를 만들고 &lt;code&gt;ResultSetMetaData&lt;/code&gt; 개체 rsmd를 만들고 rsmd를 사용하여 rs에있는 열 수와 rs의 첫 번째 열을 &lt;code&gt;WHERE&lt;/code&gt; 절 에서 사용할 수 있는지 여부를 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="b73a5104122da833a98317f27239fc3e4154b0ba" translate="yes" xml:space="preserve">
          <source>An object that configures how to copy or move a file.</source>
          <target state="translated">파일을 복사하거나 이동하는 방법을 구성하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="0c5a8aa3a347dba34a3344510991043eb9879ec6" translate="yes" xml:space="preserve">
          <source>An object that configures how to open or create a file.</source>
          <target state="translated">파일을 열거 나 만드는 방법을 구성하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="4acc9994b8b892b5aa8072fb18595bec81840247" translate="yes" xml:space="preserve">
          <source>An object that contains information about the columns in a &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 개체 의 열에 대한 정보를 포함하는 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="e3bd94db86d65efb597e6baa0d6fe51759f14f6a" translate="yes" xml:space="preserve">
          <source>An object that contains information about the columns in a &lt;code&gt;RowSet&lt;/code&gt; object. This interface is an extension of the &lt;code&gt;ResultSetMetaData&lt;/code&gt; interface with methods for setting the values in a &lt;code&gt;RowSetMetaData&lt;/code&gt; object. When a &lt;code&gt;RowSetReader&lt;/code&gt; object reads data into a &lt;code&gt;RowSet&lt;/code&gt; object, it creates a &lt;code&gt;RowSetMetaData&lt;/code&gt; object and initializes it using the methods in the &lt;code&gt;RowSetMetaData&lt;/code&gt; interface. Then the reader passes the &lt;code&gt;RowSetMetaData&lt;/code&gt; object to the rowset.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 개체 의 열에 대한 정보를 포함하는 개체입니다 . 이 인터페이스는 &lt;code&gt;RowSetMetaData&lt;/code&gt; 객체 의 값을 설정하기위한 메소드 가있는 &lt;code&gt;ResultSetMetaData&lt;/code&gt; 인터페이스 의 확장입니다 . &lt;code&gt;RowSetReader&lt;/code&gt; 객체가 &lt;code&gt;RowSet&lt;/code&gt; 객체 로 데이터를 읽을 때 &lt;code&gt;RowSetMetaData&lt;/code&gt; 객체를 생성 하고 &lt;code&gt;RowSetMetaData&lt;/code&gt; 인터페이스 의 메소드를 사용하여 초기화합니다 . 그런 다음 판독기는 &lt;code&gt;RowSetMetaData&lt;/code&gt; 개체를 행 집합에 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="baa73d9cb6577c25eeaf1bbcdbea53e363a73739" translate="yes" xml:space="preserve">
          <source>An object that creates new threads on demand.</source>
          <target state="translated">요청시 새 스레드를 작성하는 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="e2e5598cc79e2405a2ab0a29cc9e835864281803" translate="yes" xml:space="preserve">
          <source>An object that creates new threads on demand. Using thread factories removes hardwiring of calls to &lt;a href=&quot;../../lang/thread#%3Cinit%3E(java.lang.Runnable)&quot;&gt;&lt;code&gt;new Thread&lt;/code&gt;&lt;/a&gt;, enabling applications to use special thread subclasses, priorities, etc.</source>
          <target state="translated">요청시 새 스레드를 만드는 개체입니다. 스레드 팩토리를 사용하면 &lt;a href=&quot;../../lang/thread#%3Cinit%3E(java.lang.Runnable)&quot;&gt; &lt;code&gt;new Thread&lt;/code&gt; &lt;/a&gt; 대한 호출의 하드와 이어링이 제거 되어 애플리케이션이 특수 스레드 하위 클래스, 우선 순위 등을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fecb9ccdca9a57efe7bf24ddea3d86d99e52eaad" translate="yes" xml:space="preserve">
          <source>An object that creates new threads on demand. Using thread factories removes hardwiring of calls to &lt;a href=&quot;../../lang/thread#Thread-java.lang.Runnable-&quot;&gt;&lt;code&gt;new Thread&lt;/code&gt;&lt;/a&gt;, enabling applications to use special thread subclasses, priorities, etc.</source>
          <target state="translated">요청시 새 스레드를 작성하는 오브젝트입니다. 스레드 팩토리를 사용하면 &lt;a href=&quot;../../lang/thread#Thread-java.lang.Runnable-&quot;&gt; &lt;code&gt;new Thread&lt;/code&gt; &lt;/a&gt; 대한 호출의 배선이 제거됩니다. 되어 응용 프로그램에서 특수 스레드 하위 클래스, 우선 순위 등을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="691c459c3cc70c54b0121137887f2b4c76ab1ed8" translate="yes" xml:space="preserve">
          <source>An object that encapsulates the value of a file attribute that can be set atomically when creating a new file or directory by invoking the &lt;a href=&quot;../files#createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;createFile&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../files#createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;createDirectory&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../files#createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;createFile&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../files#createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;createDirectory&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 새 파일 또는 디렉터리를 만들 때 원자 적으로 설정할 수있는 파일 속성의 값을 캡슐화하는 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="68795f2f7e60b01783194bdbeb5daaf7c88c509a" translate="yes" xml:space="preserve">
          <source>An object that encapsulates the value of a file attribute that can be set atomically when creating a new file or directory by invoking the &lt;a href=&quot;../files#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createFile&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../files#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createDirectory&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../files#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createFile&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../files#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createDirectory&lt;/code&gt; 를&lt;/a&gt; 호출하여 새 파일 또는 디렉토리를 작성할 때 원자 적으로 설정할 수있는 파일 속성의 값을 캡슐화하는 오브젝트 메소드를 .</target>
        </trans-unit>
        <trans-unit id="7e8ced9a706b96ed0aa5b962f302609cb380b77d" translate="yes" xml:space="preserve">
          <source>An object that executes submitted &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; tasks.</source>
          <target state="translated">제출 된 &lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt; 작업 을 실행하는 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="f176fdc8e2dbfeaf0ddb3d17a694eac710a60664" translate="yes" xml:space="preserve">
          <source>An object that executes submitted &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; tasks. This interface provides a way of decoupling task submission from the mechanics of how each task will be run, including details of thread use, scheduling, etc. An &lt;code&gt;Executor&lt;/code&gt; is normally used instead of explicitly creating threads. For example, rather than invoking &lt;code&gt;new Thread(new RunnableTask()).start()&lt;/code&gt; for each of a set of tasks, you might use:</source>
          <target state="translated">제출 된 &lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt; 작업 을 실행하는 개체입니다 . 이 인터페이스는 스레드 사용, 예약 등에 대한 세부 정보를 포함하여 각 작업이 실행되는 방식의 메커니즘에서 작업 제출을 분리하는 방법을 제공합니다. 일반적으로 스레드를 명시 적으로 생성하는 대신 &lt;code&gt;Executor&lt;/code&gt; 가 사용됩니다. 예를 들어, 각 작업 집합에 대해 &lt;code&gt;new Thread(new RunnableTask()).start()&lt;/code&gt; 를 호출하는 대신 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e4b40b397a01cef4b65e5f0953de042b9dd08a3" translate="yes" xml:space="preserve">
          <source>An object that executes submitted &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; tasks. This interface provides a way of decoupling task submission from the mechanics of how each task will be run, including details of thread use, scheduling, etc. An &lt;code&gt;Executor&lt;/code&gt; is normally used instead of explicitly creating threads. For example, rather than invoking &lt;code&gt;new Thread(new(RunnableTask())).start()&lt;/code&gt; for each of a set of tasks, you might use:</source>
          <target state="translated">제출 된 &lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt; 작업 을 실행하는 개체입니다 . 이 인터페이스는 스레드 사용, 스케줄링 등의 세부 사항을 포함하여 각 태스크 실행 방법의 메커니즘에서 태스크 제출을 분리하는 방법을 제공합니다. &lt;code&gt;Executor&lt;/code&gt; 는 일반적으로 스레드를 명시 적으로 작성하는 대신 사용됩니다. 예를 들어, &lt;code&gt;new Thread(new(RunnableTask())).start()&lt;/code&gt; 호출하는 대신 각 작업 세트에 대해 를 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="855b9f0415a9765b27d32947725b30a3dada1470" translate="yes" xml:space="preserve">
          <source>An object that fills up space in a user interface.</source>
          <target state="translated">사용자 인터페이스에서 공간을 채우는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="98ec68e9b95957ec318581471c0366b9a6c2bb1f" translate="yes" xml:space="preserve">
          <source>An object that fills up space in a user interface. It is often used in interfaces to tweak the spacing between components, but serves no other purpose.</source>
          <target state="translated">사용자 인터페이스에서 공간을 채우는 개체입니다. 구성 요소 사이의 간격을 조정하기 위해 인터페이스에서 자주 사용되지만 다른 용도로는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="61b817a9a63e896b175b8e326cc30a2eae903326" translate="yes" xml:space="preserve">
          <source>An object that implements the &lt;code&gt;Blob&lt;/code&gt; interface</source>
          <target state="translated">&lt;code&gt;Blob&lt;/code&gt; 인터페이스 를 구현하는 개체</target>
        </trans-unit>
        <trans-unit id="3ea86d35803b3082e850d983d87b87054c2df524" translate="yes" xml:space="preserve">
          <source>An object that implements the &lt;code&gt;Clob&lt;/code&gt; interface</source>
          <target state="translated">&lt;code&gt;Clob&lt;/code&gt; 인터페이스 를 구현하는 객체</target>
        </trans-unit>
        <trans-unit id="f403d13c35bfa4370583ca25bc8ee38f7e0c0910" translate="yes" xml:space="preserve">
          <source>An object that implements the &lt;code&gt;NClob&lt;/code&gt; interface</source>
          <target state="translated">&lt;code&gt;NClob&lt;/code&gt; 인터페이스 를 구현하는 객체</target>
        </trans-unit>
        <trans-unit id="9c087c306c94391c1d3de7e5e0375c22e98aef60" translate="yes" xml:space="preserve">
          <source>An object that implements the &lt;code&gt;RowSetWriter&lt;/code&gt; interface, called a</source>
          <target state="translated">&lt;code&gt;RowSetWriter&lt;/code&gt; 인터페이스 를 구현하는 개체 ,</target>
        </trans-unit>
        <trans-unit id="f03dd2a535f2b4ed4c560f71033db9105f1dad87" translate="yes" xml:space="preserve">
          <source>An object that implements the &lt;code&gt;SQLXML&lt;/code&gt; interface</source>
          <target state="translated">&lt;code&gt;SQLXML&lt;/code&gt; 인터페이스 를 구현하는 객체</target>
        </trans-unit>
        <trans-unit id="fbb8ac550e63caad681d90c054d0fa20987b5087" translate="yes" xml:space="preserve">
          <source>An object that implements the Enumeration interface generates a series of elements, one at a time.</source>
          <target state="translated">Enumeration 인터페이스를 구현하는 개체는 한 번에 하나씩 일련의 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="99c80014816ae83e53dc8ddea1c90482dd825a2c" translate="yes" xml:space="preserve">
          <source>An object that implements the Enumeration interface generates a series of elements, one at a time. Successive calls to the &lt;code&gt;nextElement&lt;/code&gt; method return successive elements of the series.</source>
          <target state="translated">Enumeration 인터페이스를 구현하는 개체는 한 번에 하나씩 일련의 요소를 생성합니다. &lt;code&gt;nextElement&lt;/code&gt; 메소드 에 대한 연속 호출 은 시리즈의 연속 요소를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="229ce0f1ebfe2565553fe4a4cc5259e2249015e2" translate="yes" xml:space="preserve">
          <source>An object that implements the URIResolver interface, or null.</source>
          <target state="translated">URIResolver 인터페이스를 구현하는 개체 또는 null입니다.</target>
        </trans-unit>
        <trans-unit id="b283989836bdc01baed1caa1aa166affff6f61ac" translate="yes" xml:space="preserve">
          <source>An object that implements this interface contains the information needed to act as source input (XML source or transformation instructions).</source>
          <target state="translated">이 인터페이스를 구현하는 개체에는 소스 입력 (XML 소스 또는 변환 지침)으로 작동하는 데 필요한 정보가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffa45c27f787bf82652a4d0de822dcda408f5ff2" translate="yes" xml:space="preserve">
          <source>An object that implements this interface contains the information needed to build a transformation result tree.</source>
          <target state="translated">이 인터페이스를 구현하는 개체에는 변환 결과 트리를 작성하는 데 필요한 정보가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="685a4060e3af7943d32ab64fa788f3d12b3ff5fd" translate="yes" xml:space="preserve">
          <source>An object that implements this interface is the runtime representation of processed transformation instructions.</source>
          <target state="translated">이 인터페이스를 구현하는 객체는 처리 된 변환 명령의 런타임 표현입니다.</target>
        </trans-unit>
        <trans-unit id="fcf0139849a0d7277c7a84ad7a67be207e2a9b1e" translate="yes" xml:space="preserve">
          <source>An object that implements this interface that can be called by the processor to turn a URI used in document(), xsl:import, or xsl:include into a Source object.</source>
          <target state="translated">document (), xsl : import 또는 xsl : include에 사용 된 URI를 Source 객체로 변환하기 위해 프로세서에서 호출 할 수있는이 인터페이스를 구현하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="14fd745504f4a3c7a3d98ca92ff8ff2d8ea7dd4f" translate="yes" xml:space="preserve">
          <source>An object that is a child of a page tab list.</source>
          <target state="translated">페이지 탭 목록의 하위 개체입니다.</target>
        </trans-unit>
        <trans-unit id="7c2dcf99f7e6ce85eab050570c01504a7c02f33a" translate="yes" xml:space="preserve">
          <source>An object that is a child of a page tab list. Its sole child is the panel that is to be presented to the user when the user selects the page tab from the list of tabs in the page tab list.</source>
          <target state="translated">페이지 탭 목록의 하위 개체입니다. 유일한 하위는 사용자가 페이지 탭 목록의 탭 목록에서 페이지 탭을 선택할 때 사용자에게 표시되는 패널입니다.</target>
        </trans-unit>
        <trans-unit id="41a0378a08e284b7ca3cf3cd75b9e62aee796b22" translate="yes" xml:space="preserve">
          <source>An object that is a hyperlink should support the &lt;a href=&quot;accessiblehyperlink&quot;&gt;AccessibleHyperlink&lt;/a&gt; interface. An object that implements this interface will be returned by calling the getLink method on an &lt;a href=&quot;#AccessibleHypertext&quot;&gt;AccessibleHypertext&lt;/a&gt; object.</source>
          <target state="translated">하이퍼 링크 인 개체는 &lt;a href=&quot;accessiblehyperlink&quot;&gt;AccessibleHyperlink&lt;/a&gt; 인터페이스를 지원해야합니다 . 이 인터페이스를 구현하는 객체는 &lt;a href=&quot;#AccessibleHypertext&quot;&gt;AccessibleHypertext&lt;/a&gt; 객체 에서 getLink 메소드를 호출하여 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="9b90af666e802aa7db22ef2cc2830cedd5c17274" translate="yes" xml:space="preserve">
          <source>An object that is used to identify a generic SQL type, called a JDBC type or a vendor specific data type.</source>
          <target state="translated">JDBC 유형 또는 공급 업체 특정 데이터 유형이라고하는 일반 SQL 유형을 식별하는 데 사용되는 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="c62fc483de76bbde6310a4b617fe933a48084fd9" translate="yes" xml:space="preserve">
          <source>An object that maps keys to values.</source>
          <target state="translated">키를 값에 매핑하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="bba440e18e500e6a4eb82cadff113d789d16d140" translate="yes" xml:space="preserve">
          <source>An object that maps keys to values. A map cannot contain duplicate keys; each key can map to at most one value.</source>
          <target state="translated">키를 값에 매핑하는 객체입니다. 맵에는 중복 키가 포함될 수 없습니다. 각 키는 최대 하나의 값으로 매핑 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95b6564de4e961b7d6860dcbd492ab6718ccccd5" translate="yes" xml:space="preserve">
          <source>An object that may be registered with a watch service so that it can be &lt;em&gt;watched&lt;/em&gt; for changes and events.</source>
          <target state="translated">변경 및 이벤트를 &lt;em&gt;감시&lt;/em&gt; 할 수 있도록 감시 서비스에 등록 될 수있는 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="c85afa040116ca1b1324df2e9f54a59ea1660f59" translate="yes" xml:space="preserve">
          <source>An object that may be used to locate a file in a file system.</source>
          <target state="translated">파일 시스템에서 파일을 찾는 데 사용할 수있는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="f62715cd392fb8062bde89dca57a59b321bb38f2" translate="yes" xml:space="preserve">
          <source>An object that may be used to locate a file in a file system. It will typically represent a system dependent file path.</source>
          <target state="translated">파일 시스템에서 파일을 찾는 데 사용할 수있는 객체입니다. 일반적으로 시스템 종속 파일 경로를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="383ddb1c9e1c609174e1d6571a912022d6ee489a" translate="yes" xml:space="preserve">
          <source>An object that may hold resources (such as file or socket handles) until it is closed.</source>
          <target state="translated">리소스가 닫힐 때까지 파일 또는 소켓 핸들과 같은 리소스를 보유 할 수있는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="cc95e80ba51ca040410b220081244e2ec6005541" translate="yes" xml:space="preserve">
          <source>An object that may hold resources (such as file or socket handles) until it is closed. The &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method of an &lt;code&gt;AutoCloseable&lt;/code&gt; object is called automatically when exiting a &lt;code&gt;
 try&lt;/code&gt;-with-resources block for which the object has been declared in the resource specification header. This construction ensures prompt release, avoiding resource exhaustion exceptions and errors that may otherwise occur.</source>
          <target state="translated">닫힐 때까지 리소스 (예 : 파일 또는 소켓 핸들)를 보유 할 수있는 개체입니다. &lt;code&gt;AutoCloseable&lt;/code&gt; 개체 의 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메서드는 개체가 리소스 사양 헤더에 선언 된 &lt;code&gt; try&lt;/code&gt; -with-resources 블록을 종료 할 때 자동으로 호출됩니다 . 이 구조는 즉각적인 릴리스를 보장하여 리소스 고갈 예외 및 그렇지 않으면 발생할 수있는 오류를 방지합니다.</target>
        </trans-unit>
        <trans-unit id="65c7adf181c0da78229a911c614313de0051416f" translate="yes" xml:space="preserve">
          <source>An object that may hold resources (such as file or socket handles) until it is closed. The &lt;a href=&quot;autocloseable#close--&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method of an &lt;code&gt;AutoCloseable&lt;/code&gt; object is called automatically when exiting a &lt;code&gt;try&lt;/code&gt;-with-resources block for which the object has been declared in the resource specification header. This construction ensures prompt release, avoiding resource exhaustion exceptions and errors that may otherwise occur.</source>
          <target state="translated">리소스가 닫힐 때까지 파일 또는 소켓 핸들과 같은 리소스를 보유 할 수있는 개체 자원 스펙 헤더에 오브젝트가 선언 된 &lt;code&gt;try&lt;/code&gt; -with-resources 블록을 종료 하면 &lt;code&gt;AutoCloseable&lt;/code&gt; 오브젝트 의 &lt;a href=&quot;autocloseable#close--&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메소드가 자동으로 호출됩니다 . 이 구조는 자원 소진 예외 및 다른 방식으로 발생할 수있는 오류를 피하면서 즉각적인 릴리스를 보장합니다.</target>
        </trans-unit>
        <trans-unit id="6052652d66a1927639c96789cf28f3f73be035c7" translate="yes" xml:space="preserve">
          <source>An object that presents a list of objects to the user and allows the user to select one or more of them.</source>
          <target state="translated">사용자에게 개체 목록을 제공하고 사용자가 하나 이상의 개체를 선택할 수 있도록하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="74c163902cfa6ae17892c8a53c434500912d3355" translate="yes" xml:space="preserve">
          <source>An object that presents a list of objects to the user and allows the user to select one or more of them. A list is usually contained within a scroll pane.</source>
          <target state="translated">사용자에게 개체 목록을 제공하고 사용자가 하나 이상의 개체를 선택할 수 있도록하는 개체입니다. 목록은 일반적으로 스크롤 창에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="3a73fdffc5dc2f73308f9f693295e313badbde34" translate="yes" xml:space="preserve">
          <source>An object that presents a series of panels (or page tabs), one at a time, through some mechanism provided by the object.</source>
          <target state="translated">개체에서 제공하는 일부 메커니즘을 통해 한 번에 하나씩 일련의 패널 (또는 페이지 탭)을 표시하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="7b13dd1417701bd36e098a181db7d0a7f5fad0e6" translate="yes" xml:space="preserve">
          <source>An object that presents a series of panels (or page tabs), one at a time, through some mechanism provided by the object. The most common mechanism is a list of tabs at the top of the panel. The children of a page tab list are all page tabs.</source>
          <target state="translated">개체에서 제공하는 일부 메커니즘을 통해 한 번에 하나씩 일련의 패널 (또는 페이지 탭)을 표시하는 개체입니다. 가장 일반적인 메커니즘은 패널 상단에있는 탭 목록입니다. 페이지 탭 목록의 하위는 모두 페이지 탭입니다.</target>
        </trans-unit>
        <trans-unit id="45fd55d512e6fe8b7303c6195e241414108649b8" translate="yes" xml:space="preserve">
          <source>An object that presents an element in a list.</source>
          <target state="translated">목록에 요소를 표시하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="e3b1a708920df63e28292915adf24898791ed534" translate="yes" xml:space="preserve">
          <source>An object that presents an element in a list. A list is usually contained within a scroll pane.</source>
          <target state="translated">목록에 요소를 표시하는 개체입니다. 목록은 일반적으로 스크롤 창에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="db5d99fdea838bc6969f0f59a3c325d88f3d6a2f" translate="yes" xml:space="preserve">
          <source>An object that presents text to the user.</source>
          <target state="translated">사용자에게 텍스트를 표시하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="8f676601e32b8726a2abb96aae29db3f90d33c06" translate="yes" xml:space="preserve">
          <source>An object that presents text to the user. The text is usually editable by the user as opposed to a label.</source>
          <target state="translated">사용자에게 텍스트를 표시하는 개체입니다. 텍스트는 일반적으로 레이블이 아닌 사용자가 편집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6b1fd0c0c3293cf8862df8dfdfd80a0d0a4a12a" translate="yes" xml:space="preserve">
          <source>An object that provides a read-only or updatable &lt;em&gt;view&lt;/em&gt; of non-opaque values associated with an object in a filesystem.</source>
          <target state="translated">읽기 전용 또는 업데이트 가능한 &lt;em&gt;보기&lt;/em&gt; 를 제공하는 객체&lt;em&gt;&lt;/em&gt;파일 시스템의 객체와 관련된 불투명하지 않은 값에 .</target>
        </trans-unit>
        <trans-unit id="3ba87fb1d278ad83f994b8b49e0132de8a36d1f5" translate="yes" xml:space="preserve">
          <source>An object that provides a read-only or updatable &lt;em&gt;view&lt;/em&gt; of non-opaque values associated with an object in a filesystem. This interface is extended or implemented by specific attribute views that define the attributes supported by the view. A specific attribute view will typically define type-safe methods to read or update the attributes that it supports.</source>
          <target state="translated">읽기 전용 또는 업데이트 가능한 &lt;em&gt;보기&lt;/em&gt; 를 제공하는 객체&lt;em&gt;&lt;/em&gt;파일 시스템의 객체와 관련된 불투명하지 않은 값에 . 이 인터페이스는보기에서 지원하는 속성을 정의하는 특정 속성보기로 확장되거나 구현됩니다. 특정 속성보기는 일반적으로 지원되는 속성을 읽거나 업데이트하기 위해 형식에 안전한 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="17589a90543acbf0df396fa1396e966b73e4bce6" translate="yes" xml:space="preserve">
          <source>An object that provides hooks for connection pool management.</source>
          <target state="translated">연결 풀 관리를위한 후크를 제공하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="2e430cc441c926c021b32c42415c696e246df256" translate="yes" xml:space="preserve">
          <source>An object that provides hooks for connection pool management. A &lt;code&gt;PooledConnection&lt;/code&gt; object represents a physical connection to a data source. The connection can be recycled rather than being closed when an application is finished with it, thus reducing the number of connections that need to be made.</source>
          <target state="translated">연결 풀 관리를위한 후크를 제공하는 개체입니다. &lt;code&gt;PooledConnection&lt;/code&gt; 목적은 데이터 소스의 물리적 인 연결을 나타낸다. 연결은 응용 프로그램이 완료 될 때 닫히지 않고 재활용 될 수 있으므로 만들어야하는 연결 수를 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b410003f6efcf97d2b66c43178427a36a8665643" translate="yes" xml:space="preserve">
          <source>An object that provides information about another object.</source>
          <target state="translated">다른 개체에 대한 정보를 제공하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="810e393998198bb0f25e49b5288567dd7aa75aae" translate="yes" xml:space="preserve">
          <source>An object that provides information about another object. The &lt;code&gt;accessibleDescription&lt;/code&gt; property of the tool tip is often displayed to the user in a small &quot;help bubble&quot; when the user causes the mouse to hover over the object associated with the tool tip.</source>
          <target state="translated">다른 개체에 대한 정보를 제공하는 개체입니다. 도구 설명 의 &lt;code&gt;accessibleDescription&lt;/code&gt; 속성은 사용자가 도구 설명과 관련된 개체 위로 마우스를 가져 가도록 할 때 작은 &quot;도움말 풍선&quot;으로 사용자에게 표시되는 경우가 많습니다.</target>
        </trans-unit>
        <trans-unit id="6ac59cdd95a546661618c2adbc88dd5fba276354" translate="yes" xml:space="preserve">
          <source>An object that provides support for distributed transactions.</source>
          <target state="translated">분산 트랜잭션을 지원하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="964d92f6f62a07b984ad32ee0fddd8e87d762dcc" translate="yes" xml:space="preserve">
          <source>An object that provides support for distributed transactions. An &lt;code&gt;XAConnection&lt;/code&gt; object may be enlisted in a distributed transaction by means of an &lt;code&gt;XAResource&lt;/code&gt; object. A transaction manager, usually part of a middle tier server, manages an &lt;code&gt;XAConnection&lt;/code&gt; object through the &lt;code&gt;XAResource&lt;/code&gt; object.</source>
          <target state="translated">분산 트랜잭션을 지원하는 개체입니다. &lt;code&gt;XAConnection&lt;/code&gt; 의 목적은에 의해 분산 트랜잭션에 참여 될 수 &lt;code&gt;XAResource&lt;/code&gt; 개체. 일반적으로 중간 계층 서버의 일부인 트랜잭션 관리자 는 &lt;code&gt;XAResource&lt;/code&gt; 개체를 통해 &lt;code&gt;XAConnection&lt;/code&gt; 개체를 관리 합니다.</target>
        </trans-unit>
        <trans-unit id="e14024531945125221ea41a27d90d69319b5569d" translate="yes" xml:space="preserve">
          <source>An object that registers to be notified of events generated by a &lt;code&gt;PooledConnection&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;PooledConnection&lt;/code&gt; 개체에 의해 생성 된 이벤트에 대한 알림을 받기 위해 등록하는 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="74cc18b35276daba7d177fc9547bafa4381476bf" translate="yes" xml:space="preserve">
          <source>An object that registers to be notified of events that occur on PreparedStatements that are in the Statement pool.</source>
          <target state="translated">Statement 풀에있는 PreparedStatements에서 발생하는 이벤트에 대한 알림을 받기 위해 등록하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="b3f3754944261599d5ecfa75a2d22b6cf042ab80" translate="yes" xml:space="preserve">
          <source>An object that represents a precompiled SQL statement.</source>
          <target state="translated">사전 컴파일 된 SQL 문을 나타내는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="b7be4bad260f7284a2572d5c93f98849e8766f27" translate="yes" xml:space="preserve">
          <source>An object the user can manipulate to tell the application to do something.</source>
          <target state="translated">사용자가 조작하여 응용 프로그램에 작업을 지시 할 수있는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="12ce0520bbb14ca92b232fc62a665ddcefde91f2" translate="yes" xml:space="preserve">
          <source>An object to iterate over the backing file stores</source>
          <target state="translated">백업 파일 저장소를 반복하는 오브젝트</target>
        </trans-unit>
        <trans-unit id="c17dbb394b4d9793e9e3fb0adb29084e11852761" translate="yes" xml:space="preserve">
          <source>An object to iterate over the entries in a directory.</source>
          <target state="translated">디렉토리의 항목을 반복 할 객체입니다.</target>
        </trans-unit>
        <trans-unit id="1c3bffd48c68457858c84b5a158500e905f2b872" translate="yes" xml:space="preserve">
          <source>An object to iterate over the entries in a directory. A directory stream allows for the convenient use of the for-each construct to iterate over a directory.</source>
          <target state="translated">디렉토리의 항목을 반복 할 객체입니다. 디렉토리 스트림은 for-each 구문을 편리하게 사용하여 디렉토리를 반복 할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="a65c99705d1233884e767c156f9a0bfc18083b83" translate="yes" xml:space="preserve">
          <source>An object to iterate over the root directories</source>
          <target state="translated">루트 디렉토리를 반복하는 객체</target>
        </trans-unit>
        <trans-unit id="010152e0daeec860f12dd25c1c67742eb288570b" translate="yes" xml:space="preserve">
          <source>An object to lookup user and group principals by name.</source>
          <target state="translated">이름으로 사용자 및 그룹 프린시 펄을 검색하는 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="3f1783309b43122bb1f676943e7dcf9013d02997" translate="yes" xml:space="preserve">
          <source>An object to lookup user and group principals by name. A &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; represents an identity that may be used to determine access rights to objects in a file system. A &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt; represents a &lt;em&gt;group identity&lt;/em&gt;. A &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; defines methods to lookup identities by name or group name (which are typically user or account names). Whether names and group names are case sensitive or not depends on the implementation. The exact definition of a group is implementation specific but typically a group represents an identity created for administrative purposes so as to determine the access rights for the members of the group. In particular it is implementation specific if the &lt;em&gt;namespace&lt;/em&gt; for names and groups is the same or is distinct. To ensure consistent and correct behavior across platforms it is recommended that this API be used as if the namespaces are distinct. In other words, the &lt;a href=&quot;#lookupPrincipalByName(java.lang.String)&quot;&gt;&lt;code&gt;lookupPrincipalByName&lt;/code&gt;&lt;/a&gt; should be used to lookup users, and &lt;a href=&quot;#lookupPrincipalByGroupName(java.lang.String)&quot;&gt;&lt;code&gt;lookupPrincipalByGroupName&lt;/code&gt;&lt;/a&gt; should be used to lookup groups.</source>
          <target state="translated">사용자 및 그룹 보안 주체를 이름으로 조회하는 개체입니다. &lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; 는&lt;/a&gt; 파일 시스템에있는 객체에 대한 액세스 권한을 결정하는 데 사용 될 수있는 정체성을 나타냅니다. &lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; 는&lt;/a&gt; 대표하는 &lt;em&gt;그룹 ID를&lt;/em&gt; . &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; 는 (일반적으로 사용자 또는 계정 이름) 이름 또는 그룹 이름 ID를 조회하는 방법을 정의한다. 이름과 그룹 이름이 대소 문자를 구분하는지 여부는 구현에 따라 다릅니다. 그룹의 정확한 정의는 구현별로 다르지만 일반적으로 그룹은 그룹 구성원의 액세스 권한을 결정하기 위해 관리 목적으로 생성 된 ID를 나타냅니다. 특히 &lt;em&gt;네임 스페이스가&lt;/em&gt;이름과 그룹은 동일하거나 구별됩니다. 플랫폼간에 일관되고 올바른 동작을 보장하려면이 API를 네임 스페이스가 별 개인 것처럼 사용하는 것이 좋습니다. 즉, &lt;a href=&quot;#lookupPrincipalByName(java.lang.String)&quot;&gt; &lt;code&gt;lookupPrincipalByName&lt;/code&gt; &lt;/a&gt; 을 사용하여 사용자를 조회하고 &lt;a href=&quot;#lookupPrincipalByGroupName(java.lang.String)&quot;&gt; &lt;code&gt;lookupPrincipalByGroupName&lt;/code&gt; &lt;/a&gt; 을 사용하여 그룹을 조회해야합니다.</target>
        </trans-unit>
        <trans-unit id="3484639742f489dbbabdc989d42eb70f9eba3ef3" translate="yes" xml:space="preserve">
          <source>An object to lookup user and group principals by name. A &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; represents an identity that may be used to determine access rights to objects in a file system. A &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt; represents a &lt;em&gt;group identity&lt;/em&gt;. A &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; defines methods to lookup identities by name or group name (which are typically user or account names). Whether names and group names are case sensitive or not depends on the implementation. The exact definition of a group is implementation specific but typically a group represents an identity created for administrative purposes so as to determine the access rights for the members of the group. In particular it is implementation specific if the &lt;em&gt;namespace&lt;/em&gt; for names and groups is the same or is distinct. To ensure consistent and correct behavior across platforms it is recommended that this API be used as if the namespaces are distinct. In other words, the &lt;a href=&quot;userprincipallookupservice#lookupPrincipalByName-java.lang.String-&quot;&gt;&lt;code&gt;lookupPrincipalByName&lt;/code&gt;&lt;/a&gt; should be used to lookup users, and &lt;a href=&quot;userprincipallookupservice#lookupPrincipalByGroupName-java.lang.String-&quot;&gt;&lt;code&gt;lookupPrincipalByGroupName&lt;/code&gt;&lt;/a&gt; should be used to lookup groups.</source>
          <target state="translated">이름으로 사용자 및 그룹 프린시 펄을 검색하는 오브젝트입니다. &lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; 는&lt;/a&gt; 파일 시스템에있는 객체에 대한 액세스 권한을 결정하는 데 사용 될 수있는 정체성을 나타냅니다. &lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; 는&lt;/a&gt; 대표하는 &lt;em&gt;그룹 ID를&lt;/em&gt; . &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; (일반적으로 사용자 또는 계정 이름) 이름 또는 그룹 이름 ID를 조회하는 방법을 정의한다. 이름과 그룹 이름이 대소 문자를 구분하는지 여부는 구현에 따라 다릅니다. 그룹의 정확한 정의는 구현에 따라 다르지만 일반적으로 그룹은 그룹 구성원의 액세스 권한을 판별하기 위해 관리 목적으로 작성된 ID를 나타냅니다. 특히 &lt;em&gt;네임 스페이스의&lt;/em&gt; 경우 구현에 따라 다릅니다.&lt;em&gt;&lt;/em&gt;이름과 그룹은 동일하거나 다릅니다. 플랫폼간에 일관되고 올바른 동작을 보장하려면 네임 스페이스가 고유 한 것처럼이 API를 사용하는 것이 좋습니다. 즉, &lt;a href=&quot;userprincipallookupservice#lookupPrincipalByName-java.lang.String-&quot;&gt; &lt;code&gt;lookupPrincipalByName&lt;/code&gt; &lt;/a&gt; 을 사용하여 사용자를 찾아야 하고 &lt;a href=&quot;userprincipallookupservice#lookupPrincipalByGroupName-java.lang.String-&quot;&gt; &lt;code&gt;lookupPrincipalByGroupName&lt;/code&gt; &lt;/a&gt; 을 사용하여 그룹을 찾아야합니다.</target>
        </trans-unit>
        <trans-unit id="959444642dc2ceda55ae42142da09ad092051bd9" translate="yes" xml:space="preserve">
          <source>An object to which &lt;code&gt;char&lt;/code&gt; sequences and values can be appended.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 시퀀스 및 값을 추가 할 수 있는 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="2b4af51a3c1eeeded7c6a1d69e220f5e26d511ce" translate="yes" xml:space="preserve">
          <source>An object to which &lt;code&gt;char&lt;/code&gt; sequences and values can be appended. The &lt;code&gt;Appendable&lt;/code&gt; interface must be implemented by any class whose instances are intended to receive formatted output from a &lt;a href=&quot;../util/formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 시퀀스 및 값을 추가 할 수 있는 객체 입니다. &lt;code&gt;Appendable&lt;/code&gt; 에 인터페이스는 그 인스턴스 A로부터 포맷 된 출력을 수신하도록 구성하는 모든 클래스에 의해 구현해야 &lt;a href=&quot;../util/formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3daebc4dade78be5a92e17bbf7de784fee272f28" translate="yes" xml:space="preserve">
          <source>An object used to indicate how much of a task has been completed.</source>
          <target state="translated">완료된 작업의 양을 나타내는 데 사용되는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="cab6707936a6c3c66f5236f6918a68aab7d4ca75" translate="yes" xml:space="preserve">
          <source>An object used to present an icon or short string in an interface.</source>
          <target state="translated">인터페이스에서 아이콘 또는 짧은 문자열을 표시하는 데 사용되는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="12c2067a391128c2a61aa259ba553977a662e1f5" translate="yes" xml:space="preserve">
          <source>An object used to present hierarchical information to the user.</source>
          <target state="translated">사용자에게 계층 적 정보를 제공하는 데 사용되는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="5b36e2cb772c98ce0c3f204ff16459ce3ee6d4c1" translate="yes" xml:space="preserve">
          <source>An object used to present hierarchical information to the user. The individual nodes in the tree can be collapsed and expanded to provide selective disclosure of the tree's contents.</source>
          <target state="translated">사용자에게 계층 적 정보를 제공하는 데 사용되는 개체입니다. 트리의 개별 노드를 축소 및 확장하여 트리 내용을 선택적으로 공개 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3c069e18a3afd8cb18cac6d8ffcc1c06d45de3c" translate="yes" xml:space="preserve">
          <source>An object used to present information in terms of rows and columns.</source>
          <target state="translated">행과 열로 정보를 표시하는 데 사용되는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="3c500a5abb7b1c8129268be1bedd0adc6dcd4e72" translate="yes" xml:space="preserve">
          <source>An object used to present information in terms of rows and columns. An example might include a spreadsheet application.</source>
          <target state="translated">행과 열로 정보를 표시하는 데 사용되는 개체입니다. 예를 들어 스프레드 시트 애플리케이션이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fdc0074e70f7838175765bd8cf3915fef4db0df" translate="yes" xml:space="preserve">
          <source>An object usually contained in a menu that presents an action the user can choose.</source>
          <target state="translated">일반적으로 사용자가 선택할 수있는 작업을 제공하는 메뉴에 포함 된 개체입니다.</target>
        </trans-unit>
        <trans-unit id="d23e184daddb3e4c3811ef5ad8fe229c8b2775c2" translate="yes" xml:space="preserve">
          <source>An object usually contained in a menu that presents an action the user can choose. For example, the &quot;Cut&quot; menu item in an &quot;Edit&quot; menu would be an action the user can select to cut the selected area of text in a document.</source>
          <target state="translated">일반적으로 사용자가 선택할 수있는 작업을 제공하는 메뉴에 포함 된 개체입니다. 예를 들어, &quot;편집&quot;메뉴의 &quot;잘라 내기&quot;메뉴 항목은 사용자가 문서에서 선택한 텍스트 영역을 잘라 내기 위해 선택할 수있는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="f1a55b11c6d0c0b180605fefbbc96492b1fbd655" translate="yes" xml:space="preserve">
          <source>An object usually contained in a menu to provide a visual and logical separation of the contents in a menu.</source>
          <target state="translated">메뉴의 내용을 시각적이고 논리적으로 분리하기 위해 일반적으로 메뉴에 포함 된 개체입니다.</target>
        </trans-unit>
        <trans-unit id="423d08afbbe8717b4c9b83eb09e07922e8767107" translate="yes" xml:space="preserve">
          <source>An object usually contained in a menu to provide a visual and logical separation of the contents in a menu. For example, the &quot;File&quot; menu of an application might contain menu items for &quot;Open,&quot; &quot;Close,&quot; and &quot;Exit,&quot; and will place a separator between &quot;Close&quot; and &quot;Exit&quot; menu items.</source>
          <target state="translated">메뉴의 내용을 시각적이고 논리적으로 분리하기 위해 일반적으로 메뉴에 포함 된 개체입니다. 예를 들어, 응용 프로그램의 &quot;파일&quot;메뉴에는 &quot;열기&quot;, &quot;닫기&quot;및 &quot;종료&quot;에 대한 메뉴 항목이 포함될 수 있으며 &quot;닫기&quot;및 &quot;종료&quot;메뉴 항목 사이에 구분 기호를 배치합니다.</target>
        </trans-unit>
        <trans-unit id="596d15ab68756f49f05a365e19aa508b6e75c646" translate="yes" xml:space="preserve">
          <source>An object usually drawn at the top of the primary dialog box of an application that contains a list of menus the user can choose from.</source>
          <target state="translated">일반적으로 사용자가 선택할 수있는 메뉴 목록이 포함 된 응용 프로그램의 기본 대화 상자 맨 위에 그려지는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="00b5ddcd7875dd3ad27f162350ef8b10137977c4" translate="yes" xml:space="preserve">
          <source>An object usually drawn at the top of the primary dialog box of an application that contains a list of menus the user can choose from. For example, a menu bar might contain menus for &quot;File,&quot; &quot;Edit,&quot; and &quot;Help.&quot;</source>
          <target state="translated">일반적으로 사용자가 선택할 수있는 메뉴 목록이 포함 된 응용 프로그램의 기본 대화 상자 맨 위에 그려지는 개체입니다. 예를 들어 메뉴 모음에는 &quot;파일&quot;, &quot;편집&quot;및 &quot;도움말&quot;에 대한 메뉴가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2720fad1b0cfb2e8e19d32af2aa341192036a1b4" translate="yes" xml:space="preserve">
          <source>An object usually found inside a menu bar that contains a list of actions the user can choose from.</source>
          <target state="translated">일반적으로 사용자가 선택할 수있는 작업 목록이 포함 된 메뉴 모음 내부에있는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="423f0eb1bce1a5f5a290c78958e5ab0581a62daf" translate="yes" xml:space="preserve">
          <source>An object usually found inside a menu bar that contains a list of actions the user can choose from. A menu can have any object as its children, but most often they are menu items, other menus, or rudimentary objects such as radio buttons, check boxes, or separators. For example, an application may have an &quot;Edit&quot; menu that contains menu items for &quot;Cut&quot; and &quot;Paste.&quot;</source>
          <target state="translated">일반적으로 사용자가 선택할 수있는 작업 목록이 포함 된 메뉴 모음 내부에있는 개체입니다. 메뉴는 모든 개체를 자식으로 가질 수 있지만 대부분 메뉴 항목, 기타 메뉴 또는 라디오 단추, 확인란 또는 구분 기호와 같은 기본 개체입니다. 예를 들어, 응용 프로그램에는 &quot;잘라 내기&quot;및 &quot;붙여 넣기&quot;에 대한 메뉴 항목이 포함 된 &quot;편집&quot;메뉴가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e85ef4c91e161385341615b1aa590796ee7e59f3" translate="yes" xml:space="preserve">
          <source>An object usually used in a scroll pane.</source>
          <target state="translated">일반적으로 스크롤 창에서 사용되는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="236ec955480ac52bcc9a59045158f6d159d97476" translate="yes" xml:space="preserve">
          <source>An object usually used in a scroll pane. It represents the portion of the entire data that the user can see. As the user manipulates the scroll bars, the contents of the viewport can change.</source>
          <target state="translated">일반적으로 스크롤 창에서 사용되는 개체입니다. 전체 데이터에서 사용자가 볼 수있는 부분을 나타냅니다. 사용자가 스크롤 막대를 조작하면 뷰포트의 내용이 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45acea629a9787d462962bb08a4c4b506281c944" translate="yes" xml:space="preserve">
          <source>An object usually used to allow a user to incrementally view a large amount of data.</source>
          <target state="translated">일반적으로 사용자가 많은 양의 데이터를 점진적으로 볼 수 있도록하는 데 사용되는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="26bed49f4efc2b24ec7ef2caacc4b3f5eaf2f83b" translate="yes" xml:space="preserve">
          <source>An object usually used to allow a user to incrementally view a large amount of data. Usually used only by a scroll pane.</source>
          <target state="translated">일반적으로 사용자가 많은 양의 데이터를 점진적으로 볼 수 있도록하는 데 사용되는 개체입니다. 일반적으로 스크롤 창에서만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a5051884957123c1491c2ecaee3f9cfe7eeba271" translate="yes" xml:space="preserve">
          <source>An object whose monitor is used to lock this node.</source>
          <target state="translated">이 노드를 잠그는 데 모니터가 사용되는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="867fa1c5780093cb05521a0541ff91f691ce18cf" translate="yes" xml:space="preserve">
          <source>An object whose monitor is used to lock this node. This object is used in preference to the node itself to reduce the likelihood of intentional or unintentional denial of service due to a locked node. To avoid deadlock, a node is</source>
          <target state="translated">이 노드를 잠그는 데 모니터가 사용되는 오브젝트입니다. 이 오브젝트는 노드 자체보다 우선적으로 사용되어 잠긴 노드로 인한 고의적 또는 비 의도적 서비스 거부 가능성을 줄입니다. 교착 상태를 피하기 위해 노드는</target>
        </trans-unit>
        <trans-unit id="5156ec2dbf3a7eb9898018cb7d1ff204869b419f" translate="yes" xml:space="preserve">
          <source>An object written via writeUnshared is always serialized in the same manner as a newly appearing object (an object that has not been written to the stream yet), regardless of whether or not the object has been written previously.</source>
          <target state="translated">writeUnshared를 통해 작성된 객체는 객체가 이전에 기록되었는지 여부에 관계없이 항상 새로 나타나는 객체 (스트림에 아직 기록되지 않은 객체)와 동일한 방식으로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="05dede121dec23068bf7dc7aa4bc5b63031d767f" translate="yes" xml:space="preserve">
          <source>An object/attributes pair for returning the result of DirStateFactory.getStateToBind().</source>
          <target state="translated">DirStateFactory.getStateToBind ()의 결과를 리턴하기위한 오브젝트 / 속성 쌍입니다.</target>
        </trans-unit>
        <trans-unit id="4b3b6f73f430dfd37dfc4895f39308be277b8ca8" translate="yes" xml:space="preserve">
          <source>An observable object can have one or more observers. An observer may be any object that implements interface &lt;code&gt;Observer&lt;/code&gt;. After an observable instance changes, an application calling the &lt;code&gt;Observable&lt;/code&gt;'s &lt;code&gt;notifyObservers&lt;/code&gt; method causes all of its observers to be notified of the change by a call to their &lt;code&gt;update&lt;/code&gt; method.</source>
          <target state="translated">관찰 가능한 객체에는 하나 이상의 관찰자가있을 수 있습니다. 옵저버는 &lt;code&gt;Observer&lt;/code&gt; 인터페이스를 구현하는 객체 일 수 있습니다 . 관찰 가능 인스턴스가 변경된 후 &lt;code&gt;Observable&lt;/code&gt; 의 &lt;code&gt;notifyObservers&lt;/code&gt; 메소드를 호출하는 응용 프로그램 은 모든 관찰자에게 &lt;code&gt;update&lt;/code&gt; 메소드 호출로 변경 사항을 통지합니다 .</target>
        </trans-unit>
        <trans-unit id="92b0cc1de79c8dce6d1243f2399ae493023fc146" translate="yes" xml:space="preserve">
          <source>An obsolete subclass of &lt;a href=&quot;exportexception&quot;&gt;&lt;code&gt;ExportException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;exportexception&quot;&gt; &lt;code&gt;ExportException&lt;/code&gt; &lt;/a&gt; 의 사용되지 않는 하위 클래스 입니다 .</target>
        </trans-unit>
        <trans-unit id="dbc7105bed01e2f84d73c2b99d0b079e7f2fde14" translate="yes" xml:space="preserve">
          <source>An opaque component paints every pixel within its rectangular bounds. A non-opaque component paints only a subset of its pixels or none at all, allowing the pixels underneath it to &quot;show through&quot;. Therefore, a component that does not fully paint its pixels provides a degree of transparency.</source>
          <target state="translated">불투명 한 구성 요소는 직사각형 경계 내의 모든 픽셀을 그립니다. 불투명하지 않은 구성 요소는 픽셀의 하위 집합 만 칠하거나 전혀 칠하지 않으므로 그 아래의 픽셀이 &quot;비쳐 보이게&quot;됩니다. 따라서 픽셀을 완전히 칠하지 않는 구성 요소는 어느 정도의 투명도를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dbbd38d1b9d12de71b7ca0e6ce17f4c092aefa92" translate="yes" xml:space="preserve">
          <source>An opaque component paints every pixel within its rectangular region. A non-opaque component paints only some of its pixels, allowing the pixels underneath it to &quot;show through&quot;. A component that does not fully paint its pixels therefore provides a degree of transparency.</source>
          <target state="translated">불투명 구성 요소는 직사각형 영역 내의 모든 픽셀을 그립니다. 불투명하지 않은 구성 요소는 픽셀 중 일부만 페인트하여 그 아래의 픽셀이 &quot;비쳐 보이게&quot;합니다. 따라서 픽셀을 완전히 칠하지 않는 구성 요소는 투명도를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="df38a540c07e2c196d383530f872a887067d054d" translate="yes" xml:space="preserve">
          <source>An open module.</source>
          <target state="translated">개방형 모듈.</target>
        </trans-unit>
        <trans-unit id="30d533cc7d344e75799a951205d156552d7f5ae3" translate="yes" xml:space="preserve">
          <source>An open module. An open module does not declare any open packages but the resulting module is treated as if all packages are open.</source>
          <target state="translated">개방형 모듈. 열린 모듈은 열린 패키지를 선언하지 않지만 결과 모듈은 모든 패키지가 열린 것처럼 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="0e95bd79d2b4a37c8eeeee3e6d367466571f50fa" translate="yes" xml:space="preserve">
          <source>An open square bracket '['.</source>
          <target state="translated">열린 대괄호 '['.</target>
        </trans-unit>
        <trans-unit id="cbac19fcb3975ebd12ad90dcc49acd1d939d09b0" translate="yes" xml:space="preserve">
          <source>An opened package of a module.</source>
          <target state="translated">모듈의 열린 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="ceda6b4c7e200993657f9f718217dfb49ccd97e1" translate="yes" xml:space="preserve">
          <source>An operator or function &lt;code&gt;op&lt;/code&gt; is &lt;em&gt;associative&lt;/em&gt; if the following holds:</source>
          <target state="translated">다음과 같은 경우 연산자 또는 함수 &lt;code&gt;op&lt;/code&gt; 가 &lt;em&gt;연관&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="fa22ce96ff7b79fbc60eaf0b00e7c4a417143e9e" translate="yes" xml:space="preserve">
          <source>An opportunity to lazily evaluate desktop property values.</source>
          <target state="translated">데스크톱 속성 값을 느리게 평가할 수있는 기회입니다.</target>
        </trans-unit>
        <trans-unit id="3cd6d9f79ed5b612f637bc441858d525f27504d1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;ImageWriteParam&lt;/code&gt; may be supplied for cases where it may affect the structure of the image metadata.</source>
          <target state="translated">이미지 메타 데이터의 구조에 영향을 줄 수있는 경우 선택적 &lt;code&gt;ImageWriteParam&lt;/code&gt; 이 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d843bc323fd59eb5d77b8c7220aa652604db68bc" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;ImageWriteParam&lt;/code&gt; may be supplied for cases where it may affect the structure of the stream metadata.</source>
          <target state="translated">스트림 메타 데이터의 구조에 영향을 줄 수있는 경우 선택적 &lt;code&gt;ImageWriteParam&lt;/code&gt; 이 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="02f257627119dfd12596e5337d8d99969e1d9c38" translate="yes" xml:space="preserve">
          <source>An optional interface that may be provided by service provider objects that will be registered with a &lt;code&gt;ServiceRegistry&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ServiceRegistry&lt;/code&gt; 에 등록 될 서비스 제공자 오브젝트가 제공 할 수있는 선택적 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="9b921ecdde7eeae6029b64068f26048a77e8b061" translate="yes" xml:space="preserve">
          <source>An optional interface that may be provided by service provider objects that will be registered with a &lt;code&gt;ServiceRegistry&lt;/code&gt;. If this interface is present, notification of registration and deregistration will be performed.</source>
          <target state="translated">&lt;code&gt;ServiceRegistry&lt;/code&gt; 에 등록 될 서비스 제공자 오브젝트가 제공 할 수있는 선택적 인터페이스입니다 . 이 인터페이스가 있으면 등록 및 등록 취소 알림이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="e12e309322d19a54686a0b1cb8a25508fe836ba2" translate="yes" xml:space="preserve">
          <source>An optional string that can be displayed on the progress bar.</source>
          <target state="translated">진행률 표시 줄에 표시 할 수있는 선택적 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="b6c1658a47b557037a49a203a57b76c7ca40b753" translate="yes" xml:space="preserve">
          <source>An optional string that can be displayed on the progress bar. The default is &lt;code&gt;null&lt;/code&gt;. Setting this to a non-&lt;code&gt;null&lt;/code&gt; value does not imply that the string will be displayed. To display the string, &lt;code&gt;paintString&lt;/code&gt; must be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">진행률 표시 줄에 표시 할 수있는 선택적 문자열입니다. 기본값은 &lt;code&gt;null&lt;/code&gt; 입니다. 이것을 &lt;code&gt;null&lt;/code&gt; 이 아닌 값으로 설정 한다고해서 문자열이 표시된다는 의미는 아닙니다. 문자열을 표시하려면 &lt;code&gt;paintString&lt;/code&gt; 이 &lt;code&gt;true&lt;/code&gt; 여야 합니다 .</target>
        </trans-unit>
        <trans-unit id="84208ed60f2ce35a01ff406ec29db5c927a5a583" translate="yes" xml:space="preserve">
          <source>An optional system-dependent &lt;em&gt;prefix&lt;/em&gt; string, such as a disk-drive specifier, &lt;code&gt;&quot;/&quot;&lt;/code&gt; for the UNIX root directory, or &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt; for a Microsoft Windows UNC pathname, and</source>
          <target state="translated">디스크 드라이브 지정자, UNIX 루트 디렉토리의 경우 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 또는 Microsoft Windows UNC 경로 이름의 경우 &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt; 와 같은 선택적 시스템 종속 &lt;em&gt;접 두부&lt;/em&gt; 문자열</target>
        </trans-unit>
        <trans-unit id="ad286a3bc8ddc6906b24395b9d3aa1a01523ec8d" translate="yes" xml:space="preserve">
          <source>An optionally-bounded &lt;a href=&quot;blockingdeque&quot;&gt;blocking deque&lt;/a&gt; based on linked nodes.</source>
          <target state="translated">연결된 노드를 기반으로 선택적으로 제한되는 &lt;a href=&quot;blockingdeque&quot;&gt;블로킹 큐&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="72e104385ffe4e121f6dd8458bfde27cb89dd0ad" translate="yes" xml:space="preserve">
          <source>An optionally-bounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; based on linked nodes.</source>
          <target state="translated">연결된 노드를 기반으로 선택적으로 제한되는 &lt;a href=&quot;blockingqueue&quot;&gt;블로킹 큐&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6b7cf7d68de5564c1d07ba461e999de0f387a708" translate="yes" xml:space="preserve">
          <source>An optionally-bounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; based on linked nodes. This queue orders elements FIFO (first-in-first-out). The &lt;em&gt;head&lt;/em&gt; of the queue is that element that has been on the queue the longest time. The &lt;em&gt;tail&lt;/em&gt; of the queue is that element that has been on the queue the shortest time. New elements are inserted at the tail of the queue, and the queue retrieval operations obtain elements at the head of the queue. Linked queues typically have higher throughput than array-based queues but less predictable performance in most concurrent applications.</source>
          <target state="translated">연결된 노드를 기반으로 선택적으로 제한되는 &lt;a href=&quot;blockingqueue&quot;&gt;블로킹 큐&lt;/a&gt; 입니다. 이 대기열은 FIFO (선입 선출) 요소를 주문합니다. 큐 의 &lt;em&gt;헤드&lt;/em&gt; 는 큐에 가장 오래 있었던 요소입니다. 대기열 의 &lt;em&gt;꼬리&lt;/em&gt; 는 대기열에 가장 짧은 시간에 있었던 요소입니다. 새 요소가 큐의 끝에 삽입되고 큐 검색 조작이 큐의 헤드에서 요소를 얻습니다. 연결된 대기열은 일반적으로 어레이 기반 대기열보다 처리량이 많지만 대부분의 동시 응용 프로그램에서 예측 가능한 성능은 떨어집니다.</target>
        </trans-unit>
        <trans-unit id="51fdf42d83ac859a6bd23e4d46714fe53b369d93" translate="yes" xml:space="preserve">
          <source>An ordered collection (also known as a</source>
          <target state="translated">주문 된 컬렉션 (또는</target>
        </trans-unit>
        <trans-unit id="ac0047bd24c7a76ae8c02017f6f834ba3ee5f7cf" translate="yes" xml:space="preserve">
          <source>An output location may be used to write files in either a package-oriented organization or in a module-oriented organization.</source>
          <target state="translated">출력 위치는 패키지 지향 조직 또는 모듈 지향 조직에서 파일을 작성하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc0cfb544beabd824a9b068e3577ef63414cd145" translate="yes" xml:space="preserve">
          <source>An output stream that also maintains a checksum of the data being written.</source>
          <target state="translated">기록되는 데이터의 체크섬을 유지하는 출력 스트림.</target>
        </trans-unit>
        <trans-unit id="ebc7a8ace7bfe211d1f520cf563d36c675003f7c" translate="yes" xml:space="preserve">
          <source>An output stream that also maintains a checksum of the data being written. The checksum can then be used to verify the integrity of the output data.</source>
          <target state="translated">기록되는 데이터의 체크섬을 유지하는 출력 스트림. 그런 다음 체크섬을 사용하여 출력 데이터의 무결성을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f17e4136b1ae1ac17e838c9935e2688fa6a6bdb3" translate="yes" xml:space="preserve">
          <source>An representation of the XML &lt;code&gt;SignedInfo&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignedInfo&lt;/code&gt; 요소 의 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="4dcfb57fccd47f63eeca6aa701d137c9ee30375b" translate="yes" xml:space="preserve">
          <source>An representation of the XML &lt;code&gt;SignedInfo&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML 서명 구문 및 처리를위한 W3C 권장 사항에&lt;/a&gt; 정의 된 XML &lt;code&gt;SignedInfo&lt;/code&gt; 요소 의 표현입니다 . XML 스키마 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="2e3ff4c6d5a29267c7491ef773098b6d20617bcd" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; of &lt;code&gt;Delayed&lt;/code&gt; elements, in which an element can only be taken when its delay has expired.</source>
          <target state="translated">바운드 &lt;a href=&quot;blockingqueue&quot;&gt;블록 큐&lt;/a&gt; 의 &lt;code&gt;Delayed&lt;/code&gt; 지연 시간이 경과 된 요소에만 수행 될 수있는 요소.</target>
        </trans-unit>
        <trans-unit id="607e41e984edd66f6d58df72af9fb617e35f2405" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; of &lt;code&gt;Delayed&lt;/code&gt; elements, in which an element can only be taken when its delay has expired. The &lt;em&gt;head&lt;/em&gt; of the queue is that &lt;code&gt;Delayed&lt;/code&gt; element whose delay expired furthest in the past. If no delay has expired there is no head and &lt;code&gt;poll&lt;/code&gt; will return &lt;code&gt;null&lt;/code&gt;. Expiration occurs when an element's &lt;code&gt;getDelay(TimeUnit.NANOSECONDS)&lt;/code&gt; method returns a value less than or equal to zero. Even though unexpired elements cannot be removed using &lt;code&gt;take&lt;/code&gt; or &lt;code&gt;poll&lt;/code&gt;, they are otherwise treated as normal elements. For example, the &lt;code&gt;size&lt;/code&gt; method returns the count of both expired and unexpired elements. This queue does not permit null elements.</source>
          <target state="translated">바운드 &lt;a href=&quot;blockingqueue&quot;&gt;블록 큐&lt;/a&gt; 의 &lt;code&gt;Delayed&lt;/code&gt; 지연 시간이 경과 된 요소에만 수행 될 수있는 요소. 큐 의 &lt;em&gt;헤드&lt;/em&gt; 는 지연이 과거에 가장 오래 &lt;code&gt;Delayed&lt;/code&gt; 요소입니다. 지연이 만료되지 않으면 head가없고 &lt;code&gt;poll&lt;/code&gt; 은 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다. 요소의 &lt;code&gt;getDelay(TimeUnit.NANOSECONDS)&lt;/code&gt; 메소드가 0보다 작거나 같은 값을 리턴하면 만기가 발생합니다 . 만료되지 않은 요소는 &lt;code&gt;take&lt;/code&gt; 또는 &lt;code&gt;poll&lt;/code&gt; 을 사용하여 제거 할 수 없지만 그렇지 않은 경우 일반 요소로 처리됩니다. 예를 들어, &lt;code&gt;size&lt;/code&gt; 메소드는 만료 된 요소와 만료되지 않은 요소의 개수를 반환합니다. 이 큐는 널 요소를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4867f0af45dc7bd49cf8437f6b72d1e8876f3b4c" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; that uses the same ordering rules as class &lt;a href=&quot;../priorityqueue&quot;&gt;&lt;code&gt;PriorityQueue&lt;/code&gt;&lt;/a&gt; and supplies blocking retrieval operations.</source>
          <target state="translated">&lt;a href=&quot;../priorityqueue&quot;&gt; &lt;code&gt;PriorityQueue&lt;/code&gt; &lt;/a&gt; 클래스와 동일한 순서 규칙을 사용하고 차단 검색 작업을 제공 하는 무제한 &lt;a href=&quot;blockingqueue&quot;&gt;블로킹 대기열&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="5d095c9bb69381950ab2d46bf615aa051a67635d" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; that uses the same ordering rules as class &lt;a href=&quot;../priorityqueue&quot;&gt;&lt;code&gt;PriorityQueue&lt;/code&gt;&lt;/a&gt; and supplies blocking retrieval operations. While this queue is logically unbounded, attempted additions may fail due to resource exhaustion (causing &lt;code&gt;OutOfMemoryError&lt;/code&gt;). This class does not permit &lt;code&gt;null&lt;/code&gt; elements. A priority queue relying on &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; also does not permit insertion of non-comparable objects (doing so results in &lt;code&gt;ClassCastException&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;../priorityqueue&quot;&gt; &lt;code&gt;PriorityQueue&lt;/code&gt; &lt;/a&gt; 클래스와 동일한 순서 규칙을 사용하고 차단 검색 작업을 제공 하는 무제한 &lt;a href=&quot;blockingqueue&quot;&gt;블로킹 대기열&lt;/a&gt; 입니다 . 이 큐가 논리적으로 제한되지 않은 동안 &lt;code&gt;OutOfMemoryError&lt;/code&gt; 를 유발하는 리소스 소모로 인해 추가 시도가 실패 할 수 있습니다 . 이 클래스는 &lt;code&gt;null&lt;/code&gt; 요소를 허용하지 않습니다 . &lt;a href=&quot;../../lang/comparable&quot;&gt;자연 순서&lt;/a&gt; 에 의존하는 우선 순위 대기열 은 비교할 수없는 객체의 삽입을 허용하지 않으므로 &lt;code&gt;ClassCastException&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="fcaf51b05fe12df113e579d4ccb39654b56971e5" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;transferqueue&quot;&gt;&lt;code&gt;TransferQueue&lt;/code&gt;&lt;/a&gt; based on linked nodes.</source>
          <target state="translated">링크 된 노드를 기반으로 하는 무제한 &lt;a href=&quot;transferqueue&quot;&gt; &lt;code&gt;TransferQueue&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b74d3cb04027b36108a5a8e923b773d7c06be9f" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;transferqueue&quot;&gt;&lt;code&gt;TransferQueue&lt;/code&gt;&lt;/a&gt; based on linked nodes. This queue orders elements FIFO (first-in-first-out) with respect to any given producer. The &lt;em&gt;head&lt;/em&gt; of the queue is that element that has been on the queue the longest time for some producer. The &lt;em&gt;tail&lt;/em&gt; of the queue is that element that has been on the queue the shortest time for some producer.</source>
          <target state="translated">링크 된 노드를 기반으로 하는 무제한 &lt;a href=&quot;transferqueue&quot;&gt; &lt;code&gt;TransferQueue&lt;/code&gt; &lt;/a&gt;이 대기열은 특정 생산자와 관련하여 FIFO (선입 선출) 요소를 주문합니다. 큐 의 &lt;em&gt;헤드&lt;/em&gt; 는 일부 생산자에 대해 큐에서 가장 오랜 시간 동안 있었던 요소입니다. 대기열 의 &lt;em&gt;꼬리&lt;/em&gt; 는 일부 생산자에게 가장 짧은 시간 동안 대기열에 있었던 요소입니다.</target>
        </trans-unit>
        <trans-unit id="4afa63dbafd71f3f862f6b0c0f513d766954929c" translate="yes" xml:space="preserve">
          <source>An unbounded concurrent &lt;a href=&quot;../deque&quot;&gt;deque&lt;/a&gt; based on linked nodes.</source>
          <target state="translated">링크 된 노드를 기반으로 하는 무제한 동시 &lt;a href=&quot;../deque&quot;&gt;큐&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8fa2b6fe53f815e6194eb30fd512618a3c74f17" translate="yes" xml:space="preserve">
          <source>An unbounded concurrent &lt;a href=&quot;../deque&quot;&gt;deque&lt;/a&gt; based on linked nodes. Concurrent insertion, removal, and access operations execute safely across multiple threads. A &lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt; is an appropriate choice when many threads will share access to a common collection. Like most other concurrent collection implementations, this class does not permit the use of &lt;code&gt;null&lt;/code&gt; elements.</source>
          <target state="translated">링크 된 노드를 기반으로 하는 무제한 동시 &lt;a href=&quot;../deque&quot;&gt;큐&lt;/a&gt; . 동시 삽입, 제거 및 액세스 작업은 여러 스레드에서 안전하게 실행됩니다. &lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt; 는 많은 스레드가 공통의 컬렉션에 대한 액세스를 공유 적절한 선택이 될 것입니다. 대부분의 다른 동시 콜렉션 구현과 마찬가지로이 클래스는 &lt;code&gt;null&lt;/code&gt; 요소 의 사용을 허용하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="e6addc60c8c5b238985f15c71d8cd178652b1298" translate="yes" xml:space="preserve">
          <source>An unbounded priority &lt;a href=&quot;queue&quot;&gt;queue&lt;/a&gt; based on a priority heap.</source>
          <target state="translated">우선 순위 힙을 기반으로 하는 무제한 우선 순위 &lt;a href=&quot;queue&quot;&gt;큐&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="90f856f7007f7cacf437367979c243adb01380a5" translate="yes" xml:space="preserve">
          <source>An unbounded priority &lt;a href=&quot;queue&quot;&gt;queue&lt;/a&gt; based on a priority heap. The elements of the priority queue are ordered according to their &lt;a href=&quot;../lang/comparable&quot;&gt;natural ordering&lt;/a&gt;, or by a &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; provided at queue construction time, depending on which constructor is used. A priority queue does not permit &lt;code&gt;null&lt;/code&gt; elements. A priority queue relying on natural ordering also does not permit insertion of non-comparable objects (doing so may result in &lt;code&gt;ClassCastException&lt;/code&gt;).</source>
          <target state="translated">우선 순위 힙을 기반으로 하는 무제한 우선 순위 &lt;a href=&quot;queue&quot;&gt;큐&lt;/a&gt; . 우선 순위 대기열의 요소 는 사용 된 생성자에 따라 &lt;a href=&quot;../lang/comparable&quot;&gt;자연 순서&lt;/a&gt; 에 따라 또는 대기열 생성시 제공된 &lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; 에 의해 정렬 됩니다. 우선 순위 큐는 &lt;code&gt;null&lt;/code&gt; 요소를 허용하지 않습니다 . 자연 순서에 의존하는 우선 순위 대기열은 비교할 수없는 객체의 삽입을 허용하지 않습니다 ( &lt;code&gt;ClassCastException&lt;/code&gt; 이 발생할 수 있음 ).</target>
        </trans-unit>
        <trans-unit id="ab9ac02fa6477cb6f322a4ea3ea620ecacb4bb53" translate="yes" xml:space="preserve">
          <source>An unbounded thread-safe &lt;a href=&quot;../queue&quot;&gt;queue&lt;/a&gt; based on linked nodes.</source>
          <target state="translated">링크 된 노드를 기반으로 하는 무제한 스레드 안전 &lt;a href=&quot;../queue&quot;&gt;큐&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e7cfdd27caa4bf67980b26f0622aa9f9b07b86b3" translate="yes" xml:space="preserve">
          <source>An unbounded thread-safe &lt;a href=&quot;../queue&quot;&gt;queue&lt;/a&gt; based on linked nodes. This queue orders elements FIFO (first-in-first-out). The &lt;em&gt;head&lt;/em&gt; of the queue is that element that has been on the queue the longest time. The &lt;em&gt;tail&lt;/em&gt; of the queue is that element that has been on the queue the shortest time. New elements are inserted at the tail of the queue, and the queue retrieval operations obtain elements at the head of the queue. A &lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt; is an appropriate choice when many threads will share access to a common collection. Like most other concurrent collection implementations, this class does not permit the use of &lt;code&gt;null&lt;/code&gt; elements.</source>
          <target state="translated">링크 된 노드를 기반으로 하는 무제한 스레드 안전 &lt;a href=&quot;../queue&quot;&gt;큐&lt;/a&gt; . 이 대기열은 FIFO (선입 선출) 요소를 주문합니다. 큐 의 &lt;em&gt;헤드&lt;/em&gt; 는 큐에 가장 오래 있었던 요소입니다. 대기열 의 &lt;em&gt;꼬리&lt;/em&gt; 는 대기열에 가장 짧은 시간에 있었던 요소입니다. 새 요소가 큐의 끝에 삽입되고 큐 검색 조작이 큐의 헤드에서 요소를 얻습니다. &lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt; 를이 많은 스레드가 공통의 컬렉션에 대한 액세스를 공유 적절한 선택이 될 것입니다. 대부분의 다른 동시 콜렉션 구현과 마찬가지로이 클래스는 &lt;code&gt;null&lt;/code&gt; 요소 의 사용을 허용하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1fd4a8a201c5545e3e616e856ea3623043d3957b" translate="yes" xml:space="preserve">
          <source>An underlying security service specifies this as the &lt;code&gt;optionType&lt;/code&gt; to a &lt;code&gt;ConfirmationCallback&lt;/code&gt; constructor if it requires a confirmation which can be answered with either &lt;code&gt;OK&lt;/code&gt; or &lt;code&gt;CANCEL&lt;/code&gt;.</source>
          <target state="translated">기본 보안 서비스 는 &lt;code&gt;OK&lt;/code&gt; 또는 &lt;code&gt;CANCEL&lt;/code&gt; 로 응답 할 수있는 확인이 필요한 경우 &lt;code&gt;ConfirmationCallback&lt;/code&gt; 생성자에 &lt;code&gt;optionType&lt;/code&gt; 으로 이를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="94cb18ef2e4f46eb678ef7c3adb087a6261a1efb" translate="yes" xml:space="preserve">
          <source>An underlying security service specifies this as the &lt;code&gt;optionType&lt;/code&gt; to a &lt;code&gt;ConfirmationCallback&lt;/code&gt; constructor if it requires a confirmation which can be answered with either &lt;code&gt;YES&lt;/code&gt; or &lt;code&gt;NO&lt;/code&gt;.</source>
          <target state="translated">기본 보안 서비스 는 &lt;code&gt;YES&lt;/code&gt; 또는 &lt;code&gt;NO&lt;/code&gt; 로 응답 할 수있는 확인이 필요한 경우 &lt;code&gt;ConfirmationCallback&lt;/code&gt; 생성자에 &lt;code&gt;optionType&lt;/code&gt; 으로 이를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="b96889588e816039c27b1ab683976945061fb20b" translate="yes" xml:space="preserve">
          <source>An underlying security service specifies this as the &lt;code&gt;optionType&lt;/code&gt; to a &lt;code&gt;ConfirmationCallback&lt;/code&gt; constructor if it requires a confirmation which can be answered with either &lt;code&gt;YES&lt;/code&gt;, &lt;code&gt;NO&lt;/code&gt; or &lt;code&gt;CANCEL&lt;/code&gt;.</source>
          <target state="translated">기본 보안 서비스 는 &lt;code&gt;YES&lt;/code&gt; , &lt;code&gt;NO&lt;/code&gt; 또는 &lt;code&gt;CANCEL&lt;/code&gt; 로 응답 할 수있는 확인이 필요한 경우 &lt;code&gt;ConfirmationCallback&lt;/code&gt; 생성자에 &lt;code&gt;optionType&lt;/code&gt; 으로 이를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="307c523fe6d49009fabfdd6ff9c1bbceb540727b" translate="yes" xml:space="preserve">
          <source>An undoable edit happened</source>
          <target state="translated">취소 할 수없는 편집이 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="94a8c907e991acf161c329a51612fdbe263dfdaf" translate="yes" xml:space="preserve">
          <source>An unlock (&lt;code&gt;synchronized&lt;/code&gt; block or method exit) of a monitor</source>
          <target state="translated">모니터 의 잠금 해제 ( &lt;code&gt;synchronized&lt;/code&gt; 블록 또는 메소드 종료)</target>
        </trans-unit>
        <trans-unit id="6b42d292474cd71baf77f99e3abcbb9ad5ade445" translate="yes" xml:space="preserve">
          <source>An unmodifiable collection is not necessarily immutable. If the contained elements are mutable, the entire collection is clearly mutable, even though it might be unmodifiable. For example, consider two unmodifiable lists containing mutable elements. The result of calling &lt;code&gt;list1.equals(list2)&lt;/code&gt; might differ from one call to the next if the elements had been mutated, even though both lists are unmodifiable. However, if an unmodifiable collection contains all immutable elements, it can be considered effectively immutable.</source>
          <target state="translated">수정할 수없는 컬렉션이 반드시 변경 불가능한 것은 아닙니다. 포함 된 요소가 변경 가능한 경우 전체 컬렉션은 수정할 수 없더라도 명확하게 변경할 수 있습니다. 예를 들어, 변경 가능한 요소를 포함하는 두 개의 수정 불가능한 목록을 고려하십시오. &lt;code&gt;list1.equals(list2)&lt;/code&gt; 를 호출 한 결과는 두 목록이 모두 수정 불가능 하더라도 요소가 변경된 경우 다음 호출마다 다를 수 있습니다. 그러나 수정 불가능한 컬렉션에 모든 불변 요소가 포함되어 있으면 사실상 불변으로 간주 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f65cbc25e935ca91c24a63ae0eba8ef13873e820" translate="yes" xml:space="preserve">
          <source>An unmodifiable list containing the names of the file's user-defined</source>
          <target state="translated">파일의 사용자 정의 이름을 포함하는 수정 불가능한 목록</target>
        </trans-unit>
        <trans-unit id="010ce5af1d40f9caf0f78742b228aa248647626b" translate="yes" xml:space="preserve">
          <source>An unmodifiable list of the installed file system providers. The list contains at least one element, that is the default file system provider</source>
          <target state="translated">설치된 파일 시스템 제공자의 수정 불가능한 목록. 이 목록에는 하나 이상의 요소 (기본 파일 시스템 제공자)가 포함됩니다</target>
        </trans-unit>
        <trans-unit id="82656c1468342d867c059c454573a13a2b7eb90b" translate="yes" xml:space="preserve">
          <source>An unmodifiable list of the integers represented in the version number</source>
          <target state="translated">버전 번호로 표시되는 수정 불가능한 정수 목록</target>
        </trans-unit>
        <trans-unit id="c70df95edff16a6ccc9d6fe69ee837c0c57b6ae2" translate="yes" xml:space="preserve">
          <source>An unmodifiable set of the names of the supported file attribute views</source>
          <target state="translated">지원되는 파일 속성보기의 이름을 수정할 수없는 세트</target>
        </trans-unit>
        <trans-unit id="f9efff225f0e1ee712304ee1fb2d3b7fe0840e00" translate="yes" xml:space="preserve">
          <source>An unnamed module does not have a name. There is an unnamed module for each &lt;a href=&quot;classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt;, obtained by invoking its &lt;a href=&quot;classloader#getUnnamedModule()&quot;&gt;&lt;code&gt;getUnnamedModule&lt;/code&gt;&lt;/a&gt; method. All types that are not in a named module are members of their defining class loader's unnamed module.</source>
          <target state="translated">이름이 지정되지 않은 모듈에는 이름이 없습니다. &lt;a href=&quot;classloader#getUnnamedModule()&quot;&gt; &lt;code&gt;getUnnamedModule&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 얻은 각 &lt;a href=&quot;classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; 에&lt;/a&gt; 대한 이름없는 모듈이 있습니다 . 명명 된 모듈에없는 모든 유형은 정의하는 클래스 로더의 명명되지 않은 모듈의 멤버입니다.</target>
        </trans-unit>
        <trans-unit id="5401cca5ae5d56885b8c25b85dff3e8321062395" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;ActionEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;ACTION_FIRST&lt;/code&gt; to &lt;code&gt;ACTION_LAST&lt;/code&gt;.</source>
          <target state="translated">특정 &lt;code&gt;ActionEvent&lt;/code&gt; 인스턴스 의 &lt;code&gt;id&lt;/code&gt; 매개 변수가 &lt;code&gt;ACTION_FIRST&lt;/code&gt; 에서 &lt;code&gt;ACTION_LAST&lt;/code&gt; 범위에 있지 않으면 지정되지 않은 동작이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="b4a5babb9ff4f76cda96166fec379af2518cfb01" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;AdjustmentEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;ADJUSTMENT_FIRST&lt;/code&gt; to &lt;code&gt;ADJUSTMENT_LAST&lt;/code&gt;.</source>
          <target state="translated">경우 생성 불특정 문제가 야기 될 것이다 &lt;code&gt;id&lt;/code&gt; 특정의 파라미터 &lt;code&gt;AdjustmentEvent&lt;/code&gt; 는의 인스턴스의 범위에없는 &lt;code&gt;ADJUSTMENT_FIRST&lt;/code&gt; 에 &lt;code&gt;ADJUSTMENT_LAST&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a362cc58cb5cb4fcdc36cbab1fda1ed7fba567ba" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;ComponentEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;COMPONENT_FIRST&lt;/code&gt; to &lt;code&gt;COMPONENT_LAST&lt;/code&gt;.</source>
          <target state="translated">경우 생성 불특정 문제가 야기 될 것이다 &lt;code&gt;id&lt;/code&gt; 특정의 파라미터 &lt;code&gt;ComponentEvent&lt;/code&gt; 인스턴스의 범위에 있지 &lt;code&gt;COMPONENT_FIRST&lt;/code&gt; 에 &lt;code&gt;COMPONENT_LAST&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="434570329ebb3129a4237618ff1b0aaba87688e3" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;ContainerEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;CONTAINER_FIRST&lt;/code&gt; to &lt;code&gt;CONTAINER_LAST&lt;/code&gt;.</source>
          <target state="translated">경우 생성 불특정 문제가 야기 될 것이다 &lt;code&gt;id&lt;/code&gt; 특정의 파라미터 &lt;code&gt;ContainerEvent&lt;/code&gt; 의 인스턴스의 범위에 있지 &lt;code&gt;CONTAINER_FIRST&lt;/code&gt; 에 &lt;code&gt;CONTAINER_LAST&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d00cd9cdac2fb110d7e0d024ce553849b284795" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;FocusEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;FOCUS_FIRST&lt;/code&gt; to &lt;code&gt;FOCUS_LAST&lt;/code&gt;.</source>
          <target state="translated">특정 &lt;code&gt;FocusEvent&lt;/code&gt; 인스턴스 의 &lt;code&gt;id&lt;/code&gt; 매개 변수가 &lt;code&gt;FOCUS_FIRST&lt;/code&gt; ~ &lt;code&gt;FOCUS_LAST&lt;/code&gt; 범위에 있지 않으면 지정되지 않은 동작이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="4a94ce65b555fd58b219b9340b8c04f39c891884" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;HierarchyEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;HIERARCHY_FIRST&lt;/code&gt; to &lt;code&gt;HIERARCHY_LAST&lt;/code&gt;.</source>
          <target state="translated">경우 생성 불특정 문제가 야기 될 것이다 &lt;code&gt;id&lt;/code&gt; 특정의 파라미터 &lt;code&gt;HierarchyEvent&lt;/code&gt; 의 인스턴스의 범위에 있지 &lt;code&gt;HIERARCHY_FIRST&lt;/code&gt; 에 &lt;code&gt;HIERARCHY_LAST&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df782745ebeed6c05281b1e70aa17eca38cd2116" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;InvocationEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;INVOCATION_FIRST&lt;/code&gt; to &lt;code&gt;INVOCATION_LAST&lt;/code&gt;.</source>
          <target state="translated">특정 &lt;code&gt;InvocationEvent&lt;/code&gt; 인스턴스 의 &lt;code&gt;id&lt;/code&gt; 매개 변수가 &lt;code&gt;INVOCATION_FIRST&lt;/code&gt; ~ &lt;code&gt;INVOCATION_LAST&lt;/code&gt; 범위에 있지 않으면 지정되지 않은 동작이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="4260708fcaf74b2bd6bf21e4a00db495d69286b9" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;ItemEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;ITEM_FIRST&lt;/code&gt; to &lt;code&gt;ITEM_LAST&lt;/code&gt;.</source>
          <target state="translated">특정 &lt;code&gt;ItemEvent&lt;/code&gt; 인스턴스 의 &lt;code&gt;id&lt;/code&gt; 매개 변수가 &lt;code&gt;ITEM_FIRST&lt;/code&gt; 에서 &lt;code&gt;ITEM_LAST&lt;/code&gt; 범위에 있지 않으면 지정되지 않은 동작이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="86f00aec54b59a906f1420e664fc779537fbb9cc" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;KeyEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;KEY_FIRST&lt;/code&gt; to &lt;code&gt;KEY_LAST&lt;/code&gt;.</source>
          <target state="translated">특정 &lt;code&gt;KeyEvent&lt;/code&gt; 인스턴스 의 &lt;code&gt;id&lt;/code&gt; 매개 변수가 &lt;code&gt;KEY_FIRST&lt;/code&gt; ~ &lt;code&gt;KEY_LAST&lt;/code&gt; 범위에 있지 않으면 지정되지 않은 동작이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="534ea0625b2fa3dc0ab068a5d2a8cf9e83f1857c" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;MouseEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;MOUSE_FIRST&lt;/code&gt; to &lt;code&gt;MOUSE_LAST&lt;/code&gt;-1 (&lt;code&gt;MOUSE_WHEEL&lt;/code&gt; is not acceptable).</source>
          <target state="translated">특정 &lt;code&gt;MouseEvent&lt;/code&gt; 인스턴스 의 &lt;code&gt;id&lt;/code&gt; 매개 변수가 &lt;code&gt;MOUSE_FIRST&lt;/code&gt; 에서 &lt;code&gt;MOUSE_LAST&lt;/code&gt; -1 ( &lt;code&gt;MOUSE_WHEEL&lt;/code&gt; 은 허용되지 않음) 범위에 있지 않으면 지정되지 않은 동작이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="2599e04b2b64a3db14ced11dd0cd19136b875ae7" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;PaintEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;PAINT_FIRST&lt;/code&gt; to &lt;code&gt;PAINT_LAST&lt;/code&gt;.</source>
          <target state="translated">경우 생성 불특정 문제가 야기 될 것이다 &lt;code&gt;id&lt;/code&gt; 특정의 파라미터 &lt;code&gt;PaintEvent&lt;/code&gt; 의 인스턴스의 범위에 있지 &lt;code&gt;PAINT_FIRST&lt;/code&gt; 에 &lt;code&gt;PAINT_LAST&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7065cf7516aa921508c4974b1942db791c7aef62" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;TextEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;TEXT_FIRST&lt;/code&gt; to &lt;code&gt;TEXT_LAST&lt;/code&gt;.</source>
          <target state="translated">특정 &lt;code&gt;TextEvent&lt;/code&gt; 인스턴스 의 &lt;code&gt;id&lt;/code&gt; 매개 변수가 &lt;code&gt;TEXT_FIRST&lt;/code&gt; 에서 &lt;code&gt;TEXT_LAST&lt;/code&gt; 범위에 있지 않으면 지정되지 않은 동작이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="82560231d45f0618e5bfbd43ed20332b96bb440d" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;WindowEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;WINDOW_FIRST&lt;/code&gt; to &lt;code&gt;WINDOW_LAST&lt;/code&gt;.</source>
          <target state="translated">특정 &lt;code&gt;WindowEvent&lt;/code&gt; 인스턴스 의 &lt;code&gt;id&lt;/code&gt; 매개 변수가 &lt;code&gt;WINDOW_FIRST&lt;/code&gt; 에서 &lt;code&gt;WINDOW_LAST&lt;/code&gt; 범위에 있지 않으면 지정되지 않은 동작이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="bf8b86c039129ba0283a786f276beef7d9548326" translate="yes" xml:space="preserve">
          <source>An up-cycle focus traversal action.</source>
          <target state="translated">업 사이클 포커스 탐색 작업입니다.</target>
        </trans-unit>
        <trans-unit id="15ac5ee269410a4e8ddf82762d6d56660b43a988" translate="yes" xml:space="preserve">
          <source>An upper-case alphabetic character:&lt;code&gt;[A-Z]&lt;/code&gt;</source>
          <target state="translated">대문자 알파벳 문자 : &lt;code&gt;[A-Z]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ee4ae8773db8655dc7d2b77c08252af7f35fda0" translate="yes" xml:space="preserve">
          <source>An uppercase character:&lt;code&gt;\p{IsUppercase}&lt;/code&gt;</source>
          <target state="translated">대문자 : &lt;code&gt;\p{IsUppercase}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="836e938c8248e1c4c050bd6b99b16892ca02bd24" translate="yes" xml:space="preserve">
          <source>An uppercase letter (&lt;a href=&quot;#ucc&quot;&gt;category&lt;/a&gt;)</source>
          <target state="translated">대문자 ( &lt;a href=&quot;#ucc&quot;&gt;범주&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="5b483df2f7efcdbdb7b4c015fd7882889db8ce6f" translate="yes" xml:space="preserve">
          <source>Analagous to &lt;code&gt;java.lang.ClassLoader.getResource()&lt;/code&gt;, this method allows a &lt;code&gt;BeanContext&lt;/code&gt; implementation to interpose behavior between the child &lt;code&gt;Component&lt;/code&gt; and underlying &lt;code&gt;ClassLoader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;java.lang.ClassLoader.getResource()&lt;/code&gt; 와 유사하게이 메소드는 &lt;code&gt;BeanContext&lt;/code&gt; 구현이 하위 &lt;code&gt;Component&lt;/code&gt; 와 기본 &lt;code&gt;ClassLoader&lt;/code&gt; 사이의 작동을 삽입 할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="34f7b411e1213aeb51e56648278e0b9efcd1de1b" translate="yes" xml:space="preserve">
          <source>Analagous to &lt;code&gt;java.lang.ClassLoader.getResourceAsStream()&lt;/code&gt;, this method allows a &lt;code&gt;BeanContext&lt;/code&gt; implementation to interpose behavior between the child &lt;code&gt;Component&lt;/code&gt; and underlying &lt;code&gt;ClassLoader&lt;/code&gt;.</source>
          <target state="translated">행와 똑같이 &lt;code&gt;java.lang.ClassLoader.getResourceAsStream()&lt;/code&gt; ,이 방법은 허용 &lt;code&gt;BeanContext&lt;/code&gt; 자식을 사이 사이에 동작의 구현 &lt;code&gt;Component&lt;/code&gt; 와 하부를 &lt;code&gt;ClassLoader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d596b903fde7a868a8caa87f3d1f291d2d69b2fb" translate="yes" xml:space="preserve">
          <source>Analogous to how NamingException captures name resolution information, LinkException captures &quot;link&quot;-name resolution information pinpointing the problem encountered while resolving a link. All these fields may be null.</source>
          <target state="translated">NamingException이 이름 확인 정보를 캡처하는 방법과 유사하게, LinkException은 링크를 해결하는 동안 발생하는 문제를 나타내는 &quot;링크&quot;이름 확인 정보를 캡처합니다. 이러한 모든 필드는 null 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b3256e9474fb93f150a75cbf71a6ef5a80750e1" translate="yes" xml:space="preserve">
          <source>Analogous to the &lt;a href=&quot;../../../lang/thread#holdsLock(java.lang.Object)&quot;&gt;&lt;code&gt;Thread.holdsLock(Object)&lt;/code&gt;&lt;/a&gt; method for built-in monitor locks, this method is typically used for debugging and testing. For example, a method that should only be called while a lock is held can assert that this is the case:</source>
          <target state="translated">기본 제공 모니터 잠금에 대한 &lt;a href=&quot;../../../lang/thread#holdsLock(java.lang.Object)&quot;&gt; &lt;code&gt;Thread.holdsLock(Object)&lt;/code&gt; &lt;/a&gt; 메서드 와 유사 하게이 메서드는 일반적으로 디버깅 및 테스트에 사용됩니다. 예를 들어, 잠금이 유지되는 동안에 만 호출되어야하는 메서드는 다음과 같은 경우라고 주장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9457b6e00d2879454343feb2509c157b3a5fb9d0" translate="yes" xml:space="preserve">
          <source>Analogous to the &lt;a href=&quot;../../../lang/thread#holdsLock-java.lang.Object-&quot;&gt;&lt;code&gt;Thread.holdsLock(Object)&lt;/code&gt;&lt;/a&gt; method for built-in monitor locks, this method is typically used for debugging and testing. For example, a method that should only be called while a lock is held can assert that this is the case:</source>
          <target state="translated">&lt;a href=&quot;../../../lang/thread#holdsLock-java.lang.Object-&quot;&gt; &lt;code&gt;Thread.holdsLock(Object)&lt;/code&gt; &lt;/a&gt; 와 유사내장 모니터 잠금에 대한 메소드 메소드는 일반적으로 디버깅 및 테스트에 사용됩니다. 예를 들어, 잠금이 유지되는 동안에 만 호출해야하는 메소드는 다음과 같은 경우를 주장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28812ed968bdcdc5429aa52045610b2d8b565e91" translate="yes" xml:space="preserve">
          <source>Analogously to how NamingException captures name resolution information, LinkException captures &quot;link&quot;-name resolution information pinpointing the problem encountered while resolving a link. All these fields may be null.</source>
          <target state="translated">NamingException이 이름 확인 정보를 캡처하는 방법과 유사하게 LinkException은 링크를 해결하는 동안 발생한 문제를 정확히 나타내는 &quot;링크&quot;이름 확인 정보를 캡처합니다. 이러한 모든 필드는 null 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b201dc50980a40dde2cc728e64726d30111d9b4d" translate="yes" xml:space="preserve">
          <source>Ancestor Reshape Events (HierarchyBoundsListener)</source>
          <target state="translated">조상 재구성 이벤트 (HierarchyBoundsListener)</target>
        </trans-unit>
        <trans-unit id="3dab2d5cd2e0453a98d75d0bf0e0bafdca38bf27" translate="yes" xml:space="preserve">
          <source>AncestorEvent</source>
          <target state="translated">AncestorEvent</target>
        </trans-unit>
        <trans-unit id="84ad42df358d30ffc3c9f2595fd5d55c01f397d1" translate="yes" xml:space="preserve">
          <source>AncestorListener</source>
          <target state="translated">AncestorListener</target>
        </trans-unit>
        <trans-unit id="971352e40895325c6746743b55d9828b2d79654a" translate="yes" xml:space="preserve">
          <source>AncestorListener Interface to support notification when changes occur to a JComponent or one of its ancestors.</source>
          <target state="translated">AncestorListener 인터페이스는 JComponent 또는 그 조상 중 하나가 변경 될 때 알림을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="63862c42c57f01e5ac9021bd27043013c02e989b" translate="yes" xml:space="preserve">
          <source>AncestorListener Interface to support notification when changes occur to a JComponent or one of its ancestors. These include movement and when the component becomes visible or invisible, either by the setVisible() method or by being added or removed from the component hierarchy.</source>
          <target state="translated">AncestorListener 인터페이스는 JComponent 또는 그 조상 중 하나가 변경 될 때 알림을 지원합니다. 여기에는 이동 및 구성 요소가 setVisible () 메서드에 의해 또는 구성 요소 계층 구조에서 추가 또는 제거되어 표시되거나 표시되지 않는 경우가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="fb8d794b78a3e48757b734b3d97a084152b328c2" translate="yes" xml:space="preserve">
          <source>And &lt;code&gt;subdir/myentity.ent&lt;/code&gt; contains:</source>
          <target state="translated">그리고 &lt;code&gt;subdir/myentity.ent&lt;/code&gt; 에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9c4d0e91d63250fc01a00067c5dc48ab711d7212" translate="yes" xml:space="preserve">
          <source>And finally subclasses may define a set of constants to identify the various fields in the formatted output. These constants are used to create a FieldPosition object which identifies what information is contained in the field and its position in the formatted result. These constants should be named &lt;code&gt;&lt;em&gt;item&lt;/em&gt;_FIELD&lt;/code&gt; where &lt;code&gt;&lt;em&gt;item&lt;/em&gt;&lt;/code&gt; identifies the field. For examples of these constants, see &lt;code&gt;ERA_FIELD&lt;/code&gt; and its friends in &lt;a href=&quot;dateformat&quot;&gt;&lt;code&gt;DateFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">마지막으로 서브 클래스는 형식화 된 출력에서 ​​다양한 필드를 식별하기 위해 상수 세트를 정의 할 수 있습니다. 이 상수는 필드에 포함 된 정보와 형식화 된 결과에서 해당 위치를 식별하는 FieldPosition 객체를 만드는 데 사용됩니다. 이 상수는 &lt;code&gt;&lt;em&gt;item&lt;/em&gt;_FIELD&lt;/code&gt; 로 이름을 지정해야 합니다. 여기서 &lt;code&gt;&lt;em&gt;item&lt;/em&gt;&lt;/code&gt; 은 필드를 식별합니다. 이러한 상수의 예는 &lt;code&gt;ERA_FIELD&lt;/code&gt; 및&lt;a href=&quot;dateformat&quot;&gt; &lt;code&gt;DateFormat&lt;/code&gt; 의&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="58759bfd2892e37bb3901e696b6c651fee68a315" translate="yes" xml:space="preserve">
          <source>And in German,</source>
          <target state="translated">그리고 독일어로</target>
        </trans-unit>
        <trans-unit id="03285a5043012d5173706f365f991bcc3c693427" translate="yes" xml:space="preserve">
          <source>And the JAR protocol:</source>
          <target state="translated">그리고 JAR 프로토콜 :</target>
        </trans-unit>
        <trans-unit id="81a61343b0a4eef0a90772c149b2379b3f4da9cc" translate="yes" xml:space="preserve">
          <source>And the child will be added to the &lt;code&gt;contentPane&lt;/code&gt;. The &lt;code&gt;contentPane&lt;/code&gt; will always be non-&lt;code&gt;null&lt;/code&gt;. Attempting to set it to &lt;code&gt;null&lt;/code&gt; will cause the &lt;code&gt;JApplet&lt;/code&gt; to throw an exception. The default &lt;code&gt;contentPane&lt;/code&gt; will have a &lt;code&gt;BorderLayout&lt;/code&gt; manager set on it. Refer to &lt;a href=&quot;rootpanecontainer&quot;&gt;&lt;code&gt;RootPaneContainer&lt;/code&gt;&lt;/a&gt; for details on adding, removing and setting the &lt;code&gt;LayoutManager&lt;/code&gt; of a &lt;code&gt;JApplet&lt;/code&gt;.</source>
          <target state="translated">그리고 자식이 &lt;code&gt;contentPane&lt;/code&gt; 에 추가됩니다 . &lt;code&gt;contentPane&lt;/code&gt; 항상 아닌 것 &lt;code&gt;null&lt;/code&gt; . &lt;code&gt;null&lt;/code&gt; 로 설정하려고 하면 &lt;code&gt;JApplet&lt;/code&gt; 에서 예외가 발생합니다. 기본 &lt;code&gt;contentPane&lt;/code&gt; 에는 &lt;code&gt;BorderLayout&lt;/code&gt; 관리자가 설정되어 있습니다. 를 참조하십시오 &lt;a href=&quot;rootpanecontainer&quot;&gt; &lt;code&gt;RootPaneContainer&lt;/code&gt; 를&lt;/a&gt; 추가, 제거 및 설정에 대한 자세한 내용은 &lt;code&gt;LayoutManager&lt;/code&gt; 에 의 &lt;code&gt;JApplet&lt;/code&gt; 에를 .</target>
        </trans-unit>
        <trans-unit id="e7901df291848d673ab909e4976a26c879b5d3b6" translate="yes" xml:space="preserve">
          <source>And the child will be added to the contentPane. The &lt;code&gt;contentPane&lt;/code&gt; is always non-&lt;code&gt;null&lt;/code&gt;. Attempting to set it to &lt;code&gt;null&lt;/code&gt; generates an exception. The default &lt;code&gt;contentPane&lt;/code&gt; has a &lt;code&gt;BorderLayout&lt;/code&gt; manager set on it. Refer to &lt;a href=&quot;rootpanecontainer&quot;&gt;&lt;code&gt;RootPaneContainer&lt;/code&gt;&lt;/a&gt; for details on adding, removing and setting the &lt;code&gt;LayoutManager&lt;/code&gt; of a &lt;code&gt;JDialog&lt;/code&gt;.</source>
          <target state="translated">그리고 자식이 contentPane에 추가됩니다. &lt;code&gt;contentPane&lt;/code&gt; 항상 비입니다 &lt;code&gt;null&lt;/code&gt; . &lt;code&gt;null&lt;/code&gt; 로 설정하려고 하면 예외가 생성됩니다. 기본 &lt;code&gt;contentPane&lt;/code&gt; 에는 &lt;code&gt;BorderLayout&lt;/code&gt; 관리자가 설정되어 있습니다. 를 참조하십시오 &lt;a href=&quot;rootpanecontainer&quot;&gt; &lt;code&gt;RootPaneContainer&lt;/code&gt; 를&lt;/a&gt; 추가, 제거 및 설정에 대한 자세한 내용은 &lt;code&gt;LayoutManager&lt;/code&gt; 에 의 &lt;code&gt;JDialog&lt;/code&gt; 를을 .</target>
        </trans-unit>
        <trans-unit id="d4f9a196f62769df6e77a0030bd84667022eef02" translate="yes" xml:space="preserve">
          <source>And the child will be added to the contentPane. The &lt;code&gt;contentPane&lt;/code&gt; will always be non-&lt;code&gt;null&lt;/code&gt;. Attempting to set it to &lt;code&gt;null&lt;/code&gt; will cause the &lt;code&gt;JWindow&lt;/code&gt; to throw an exception. The default &lt;code&gt;contentPane&lt;/code&gt; will have a &lt;code&gt;BorderLayout&lt;/code&gt; manager set on it. Refer to &lt;a href=&quot;rootpanecontainer&quot;&gt;&lt;code&gt;RootPaneContainer&lt;/code&gt;&lt;/a&gt; for details on adding, removing and setting the &lt;code&gt;LayoutManager&lt;/code&gt; of a &lt;code&gt;JWindow&lt;/code&gt;.</source>
          <target state="translated">그리고 자식이 contentPane에 추가됩니다. &lt;code&gt;contentPane&lt;/code&gt; 항상 아닌 것 &lt;code&gt;null&lt;/code&gt; . &lt;code&gt;null&lt;/code&gt; 로 설정하려고 하면 &lt;code&gt;JWindow&lt;/code&gt; 에서 예외가 발생합니다. 기본 &lt;code&gt;contentPane&lt;/code&gt; 에는 &lt;code&gt;BorderLayout&lt;/code&gt; 관리자가 설정되어 있습니다. 를 참조하십시오 &lt;a href=&quot;rootpanecontainer&quot;&gt; &lt;code&gt;RootPaneContainer&lt;/code&gt; 를&lt;/a&gt; 추가, 제거 및 설정에 대한 자세한 내용은 &lt;code&gt;LayoutManager&lt;/code&gt; 에 의 &lt;code&gt;JWindow&lt;/code&gt; 의를 .</target>
        </trans-unit>
        <trans-unit id="b7c257a9a5f6258c050e5f2b96be91ebbf3bf3a2" translate="yes" xml:space="preserve">
          <source>And the child will be added to the contentPane. The content pane is actually managed by an instance of &lt;code&gt;JRootPane&lt;/code&gt;, which also manages a layout pane, glass pane, and optional menu bar for the internal frame. Please see the &lt;code&gt;JRootPane&lt;/code&gt; documentation for a complete description of these components. Refer to &lt;a href=&quot;rootpanecontainer&quot;&gt;&lt;code&gt;RootPaneContainer&lt;/code&gt;&lt;/a&gt; for details on adding, removing and setting the &lt;code&gt;LayoutManager&lt;/code&gt; of a &lt;code&gt;JInternalFrame&lt;/code&gt;.</source>
          <target state="translated">그리고 자식이 contentPane에 추가됩니다. 콘텐츠 창은 실제로 내부 프레임에 대한 레이아웃 창, 유리 창 및 선택적 메뉴 모음을 관리하는 &lt;code&gt;JRootPane&lt;/code&gt; 인스턴스에 의해 관리됩니다 . 이러한 구성 요소에 대한 전체 설명은 &lt;code&gt;JRootPane&lt;/code&gt; 설명서를 참조하십시오 . 를 참조하십시오 &lt;a href=&quot;rootpanecontainer&quot;&gt; &lt;code&gt;RootPaneContainer&lt;/code&gt; 를&lt;/a&gt; 추가, 제거 및 설정에 대한 자세한 내용은 &lt;code&gt;LayoutManager&lt;/code&gt; 의 (A)의 &lt;code&gt;JInternalFrame&lt;/code&gt; 의를 .</target>
        </trans-unit>
        <trans-unit id="d88ff6bd1af1455a5015091d765784499214487d" translate="yes" xml:space="preserve">
          <source>And the child will be added to the contentPane. The content pane will always be non-null. Attempting to set it to null will cause the JFrame to throw an exception. The default content pane will have a BorderLayout manager set on it. Refer to &lt;a href=&quot;rootpanecontainer&quot;&gt;&lt;code&gt;RootPaneContainer&lt;/code&gt;&lt;/a&gt; for details on adding, removing and setting the &lt;code&gt;LayoutManager&lt;/code&gt; of a &lt;code&gt;JFrame&lt;/code&gt;.</source>
          <target state="translated">그리고 자식이 contentPane에 추가됩니다. 콘텐츠 창은 항상 null이 아닙니다. null로 설정하려고하면 JFrame에서 예외가 발생합니다. 기본 콘텐츠 창에는 BorderLayout 관리자가 설정되어 있습니다. 를 참조하십시오 &lt;a href=&quot;rootpanecontainer&quot;&gt; &lt;code&gt;RootPaneContainer&lt;/code&gt; 를&lt;/a&gt; 추가, 제거 및 설정에 대한 자세한 내용은 &lt;code&gt;LayoutManager&lt;/code&gt; 에 의 &lt;code&gt;JFrame&lt;/code&gt; 의를 .</target>
        </trans-unit>
        <trans-unit id="3b7aa00a81c72b8aecaff1e5f4972131bf3dd875" translate="yes" xml:space="preserve">
          <source>And the file &lt;code&gt;java.text.spi.DateFormatProvider&lt;/code&gt; should have a line such as:</source>
          <target state="translated">그리고 파일 &lt;code&gt;java.text.spi.DateFormatProvider&lt;/code&gt; 에는 다음과 같은 행이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="6e5610006c9239d4cb336c2c7d577aba9f78227d" translate="yes" xml:space="preserve">
          <source>And the following piece of code which is equivalent to the one listed above would also produce the same output:</source>
          <target state="translated">그리고 위에 나열된 코드와 동등한 다음 코드도 동일한 출력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="d6ba9b1501fa8e89bbc275bbffc2ddb998e120d5" translate="yes" xml:space="preserve">
          <source>And the following produces a &lt;code&gt;ConcurrentMap&lt;/code&gt; mapping a unique identifier to students:</source>
          <target state="translated">그리고 다음은 학생에게 고유 한 식별자를 매핑 하는 &lt;code&gt;ConcurrentMap&lt;/code&gt; 을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="eadfc00610c56c5450e03359483df454e3c7b3ae" translate="yes" xml:space="preserve">
          <source>And the following produces a &lt;code&gt;Map&lt;/code&gt; mapping a unique identifier to students:</source>
          <target state="translated">그리고 다음은 &lt;code&gt;Map&lt;/code&gt; 생성합니다 고유 식별자를 학생에게 매핑 .</target>
        </trans-unit>
        <trans-unit id="ebfeebb6a2ed5661409db202d47594952d75a6a8" translate="yes" xml:space="preserve">
          <source>And the output result would be like the following:</source>
          <target state="translated">출력 결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f9aca319efba42c1261cd7b6aebe23668ebc420d" translate="yes" xml:space="preserve">
          <source>Angled</source>
          <target state="translated">Angled</target>
        </trans-unit>
        <trans-unit id="88fac44e867c1873c40382241256375ba9f8ae23" translate="yes" xml:space="preserve">
          <source>Annex C: Compatibility Properties</source>
          <target state="translated">부록 C : 호환성 속성</target>
        </trans-unit>
        <trans-unit id="d1443be703d91abac6a85fe311fc11e9f8658347" translate="yes" xml:space="preserve">
          <source>Anno Hijrah (AH)</source>
          <target state="translated">안노 히즈라 (AH)</target>
        </trans-unit>
        <trans-unit id="39a3c021a6592dfd08c18bc0f34ba1f7c10d56d9" translate="yes" xml:space="preserve">
          <source>AnnotatedArrayType</source>
          <target state="translated">AnnotatedArrayType</target>
        </trans-unit>
        <trans-unit id="89ab8136e9a5ba18bc9f00db735c01db3596a810" translate="yes" xml:space="preserve">
          <source>AnnotatedArrayType.getAnnotatedGenericComponentType()</source>
          <target state="translated">AnnotatedArrayType.getAnnotatedGenericComponentType()</target>
        </trans-unit>
        <trans-unit id="898c7a7c1fc4017ba193ae0d14c7ba2693d10175" translate="yes" xml:space="preserve">
          <source>AnnotatedConstruct</source>
          <target state="translated">AnnotatedConstruct</target>
        </trans-unit>
        <trans-unit id="e918d82cbd1ba19481047d349462baec2df8ab3a" translate="yes" xml:space="preserve">
          <source>AnnotatedConstruct.getAnnotation()</source>
          <target state="translated">AnnotatedConstruct.getAnnotation()</target>
        </trans-unit>
        <trans-unit id="95613154ff1651f054757fad1337dcb6c703b6eb" translate="yes" xml:space="preserve">
          <source>AnnotatedConstruct.getAnnotationMirrors()</source>
          <target state="translated">AnnotatedConstruct.getAnnotationMirrors()</target>
        </trans-unit>
        <trans-unit id="6df52c0d2731e865cb51147bf7bc635087e2e034" translate="yes" xml:space="preserve">
          <source>AnnotatedConstruct.getAnnotationsByType()</source>
          <target state="translated">AnnotatedConstruct.getAnnotationsByType()</target>
        </trans-unit>
        <trans-unit id="6584aa691c0cadc0b86fb3490fd9ae2ba540e603" translate="yes" xml:space="preserve">
          <source>AnnotatedElement</source>
          <target state="translated">AnnotatedElement</target>
        </trans-unit>
        <trans-unit id="1e47eef6a22a56a5262567dd4bdbad6e88c744d0" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getAnnotation()</source>
          <target state="translated">AnnotatedElement.getAnnotation()</target>
        </trans-unit>
        <trans-unit id="58532747f94ef8fd11ad6f1399270b2d661604af" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getAnnotations()</source>
          <target state="translated">AnnotatedElement.getAnnotations()</target>
        </trans-unit>
        <trans-unit id="2110e67d2c7ca30804040720a5465fe95719121a" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getAnnotationsByType()</source>
          <target state="translated">AnnotatedElement.getAnnotationsByType()</target>
        </trans-unit>
        <trans-unit id="b95fe124533e0be817be43ef3f607ae91fd69b6e" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getDeclaredAnnotation()</source>
          <target state="translated">AnnotatedElement.getDeclaredAnnotation()</target>
        </trans-unit>
        <trans-unit id="c2b3e852cda8e3d2a83088a97d848ddf44f9df00" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getDeclaredAnnotations()</source>
          <target state="translated">AnnotatedElement.getDeclaredAnnotations()</target>
        </trans-unit>
        <trans-unit id="d5695304cf5abbea91a53fbc07f24c4aaa5d193a" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getDeclaredAnnotationsByType()</source>
          <target state="translated">AnnotatedElement.getDeclaredAnnotationsByType()</target>
        </trans-unit>
        <trans-unit id="c42bff3a16d7811a0b3d0f50dc0c32d58614e6b8" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.isAnnotationPresent()</source>
          <target state="translated">AnnotatedElement.isAnnotationPresent()</target>
        </trans-unit>
        <trans-unit id="4100e35c02e1ed895766f501d3b6456edef792d2" translate="yes" xml:space="preserve">
          <source>AnnotatedParameterizedType</source>
          <target state="translated">AnnotatedParameterizedType</target>
        </trans-unit>
        <trans-unit id="40b578a952041350afde6fadd54a76ffa696f218" translate="yes" xml:space="preserve">
          <source>AnnotatedParameterizedType.getAnnotatedActualTypeArguments()</source>
          <target state="translated">AnnotatedParameterizedType.getAnnotatedActualTypeArguments()</target>
        </trans-unit>
        <trans-unit id="58aa1b064819f6773e9b52c96e210a9a393b17fc" translate="yes" xml:space="preserve">
          <source>AnnotatedType</source>
          <target state="translated">AnnotatedType</target>
        </trans-unit>
        <trans-unit id="85da65647ba9a5b3dcab9b7610fb9c943879abfa" translate="yes" xml:space="preserve">
          <source>AnnotatedType.getType()</source>
          <target state="translated">AnnotatedType.getType()</target>
        </trans-unit>
        <trans-unit id="9ded471795dd45492f925c4e5632633221f1c52b" translate="yes" xml:space="preserve">
          <source>AnnotatedTypeVariable</source>
          <target state="translated">AnnotatedTypeVariable</target>
        </trans-unit>
        <trans-unit id="be86402646208c2da6911b25b33ad677c6bd9b65" translate="yes" xml:space="preserve">
          <source>AnnotatedTypeVariable.getAnnotatedBounds()</source>
          <target state="translated">AnnotatedTypeVariable.getAnnotatedBounds()</target>
        </trans-unit>
        <trans-unit id="fea2f58a0d3ec33ace7f258ab7a46dcfd7705830" translate="yes" xml:space="preserve">
          <source>AnnotatedWildcardType</source>
          <target state="translated">AnnotatedWildcardType</target>
        </trans-unit>
        <trans-unit id="27ab6888c5a54622d2ab697cb51ece28dc887dbb" translate="yes" xml:space="preserve">
          <source>AnnotatedWildcardType.getAnnotatedLowerBounds()</source>
          <target state="translated">AnnotatedWildcardType.getAnnotatedLowerBounds()</target>
        </trans-unit>
        <trans-unit id="417220be86907df18ec684a1b12e08edcccfcd25" translate="yes" xml:space="preserve">
          <source>AnnotatedWildcardType.getAnnotatedUpperBounds()</source>
          <target state="translated">AnnotatedWildcardType.getAnnotatedUpperBounds()</target>
        </trans-unit>
        <trans-unit id="de3b78b64190965365f72568ffbe049d4ba32c22" translate="yes" xml:space="preserve">
          <source>Annotation</source>
          <target state="translated">Annotation</target>
        </trans-unit>
        <trans-unit id="1dad3896014873ba94c10c7fa13561327e7f8704" translate="yes" xml:space="preserve">
          <source>Annotation Type</source>
          <target state="translated">주석 유형</target>
        </trans-unit>
        <trans-unit id="91140b325cb3770e998227c1bbe84232fff137e1" translate="yes" xml:space="preserve">
          <source>Annotation Type BeanProperty</source>
          <target state="translated">주석 유형 BeanProperty</target>
        </trans-unit>
        <trans-unit id="927f5c92664e03ff46c741bb2403895c437d88c1" translate="yes" xml:space="preserve">
          <source>Annotation Type ConstructorParameters</source>
          <target state="translated">주석 유형 생성자 매개 변수</target>
        </trans-unit>
        <trans-unit id="5e7309dbabddcdae19191dd9f02369f0c7352ff8" translate="yes" xml:space="preserve">
          <source>Annotation Type ConstructorProperties</source>
          <target state="translated">주석 타입 생성자</target>
        </trans-unit>
        <trans-unit id="0973863efc52d8a4673cbc271c706041689e63b2" translate="yes" xml:space="preserve">
          <source>Annotation Type Deprecated</source>
          <target state="translated">더 이상 사용되지 않는 주석 유형</target>
        </trans-unit>
        <trans-unit id="6bbe1f4e8bf695876324ef0c6bc3c2b2c3217906" translate="yes" xml:space="preserve">
          <source>Annotation Type DescriptorKey</source>
          <target state="translated">주석 유형 설명자 키</target>
        </trans-unit>
        <trans-unit id="4cd10749e72864bb37da45e69f73ed72cae7b0d1" translate="yes" xml:space="preserve">
          <source>Annotation Type Documented</source>
          <target state="translated">주석 유형 문서화</target>
        </trans-unit>
        <trans-unit id="03d417f6d05e2c064e12f9f18fa1c01eab72a891" translate="yes" xml:space="preserve">
          <source>Annotation Type FunctionalInterface</source>
          <target state="translated">주석 유형 FunctionalInterface</target>
        </trans-unit>
        <trans-unit id="117f7536bb0626bf476eaedf75423d02ca0894f4" translate="yes" xml:space="preserve">
          <source>Annotation Type Generated</source>
          <target state="translated">주석 유형 생성</target>
        </trans-unit>
        <trans-unit id="9e2518c862c81f112d8515353db31490e21cece6" translate="yes" xml:space="preserve">
          <source>Annotation Type Inherited</source>
          <target state="translated">상속 된 주석 유형</target>
        </trans-unit>
        <trans-unit id="ccded0748d1fd50884e18bda658ce2869d185137" translate="yes" xml:space="preserve">
          <source>Annotation Type JavaBean</source>
          <target state="translated">주석 유형 JavaBean</target>
        </trans-unit>
        <trans-unit id="98b657a4a671b6d18319992ce70cd2a2f11b917b" translate="yes" xml:space="preserve">
          <source>Annotation Type MXBean</source>
          <target state="translated">주석 형 MXBean</target>
        </trans-unit>
        <trans-unit id="70621484999741d9f315043f8570d4aba80962ef" translate="yes" xml:space="preserve">
          <source>Annotation Type Native</source>
          <target state="translated">주석 유형 기본</target>
        </trans-unit>
        <trans-unit id="7c033aecd1b5c11b0d69bb685063a683d9613c94" translate="yes" xml:space="preserve">
          <source>Annotation Type Override</source>
          <target state="translated">주석 유형 재정의</target>
        </trans-unit>
        <trans-unit id="3ef21c93cf4a092920e6ff2de215611e1628a787" translate="yes" xml:space="preserve">
          <source>Annotation Type PostConstruct</source>
          <target state="translated">주석 유형 PostConstruct</target>
        </trans-unit>
        <trans-unit id="d2cd78a6e8de7a472ef52824e6191f52951087e6" translate="yes" xml:space="preserve">
          <source>Annotation Type PreDestroy</source>
          <target state="translated">주석 유형 사전 파괴</target>
        </trans-unit>
        <trans-unit id="ed08037a1c561f837dfeead83fc5c657f1d27616" translate="yes" xml:space="preserve">
          <source>Annotation Type Repeatable</source>
          <target state="translated">주석 유형 반복 가능</target>
        </trans-unit>
        <trans-unit id="4b2eb3ae86e651034661ca2cfda35d2b601d9f98" translate="yes" xml:space="preserve">
          <source>Annotation Type Resource</source>
          <target state="translated">주석 유형 자원</target>
        </trans-unit>
        <trans-unit id="da7f20358dc7ccc13073c2c513d22507af6d51a0" translate="yes" xml:space="preserve">
          <source>Annotation Type Resources</source>
          <target state="translated">주석 유형 리소스</target>
        </trans-unit>
        <trans-unit id="522b30d04006bf09c1e705a865739b1be10e2407" translate="yes" xml:space="preserve">
          <source>Annotation Type Retention</source>
          <target state="translated">주석 유형 보유</target>
        </trans-unit>
        <trans-unit id="5fcf6454526e1e7187b20dbefdd90612de4ded80" translate="yes" xml:space="preserve">
          <source>Annotation Type SafeVarargs</source>
          <target state="translated">주석 유형 SafeVarargs</target>
        </trans-unit>
        <trans-unit id="3fb381fd9596294abd9697d5d0b277feded00621" translate="yes" xml:space="preserve">
          <source>Annotation Type SupportedAnnotationTypes</source>
          <target state="translated">지원되는 주석 유형</target>
        </trans-unit>
        <trans-unit id="4edf3467cb5f0a661bf135b2c8839cf0a3817b99" translate="yes" xml:space="preserve">
          <source>Annotation Type SupportedOptions</source>
          <target state="translated">주석 유형 지원되는 옵션</target>
        </trans-unit>
        <trans-unit id="4680725098084c8006daca170fba946d1a1fb0f7" translate="yes" xml:space="preserve">
          <source>Annotation Type SupportedSourceVersion</source>
          <target state="translated">주석 유형 지원됨</target>
        </trans-unit>
        <trans-unit id="4614b646799fcfc4639d9396b7093414b63a4a6d" translate="yes" xml:space="preserve">
          <source>Annotation Type SuppressWarnings</source>
          <target state="translated">주석 유형 억제</target>
        </trans-unit>
        <trans-unit id="01ccad2c7e97941aafb1506e591dc51356c07eee" translate="yes" xml:space="preserve">
          <source>Annotation Type SwingContainer</source>
          <target state="translated">주석 유형 SwingContainer</target>
        </trans-unit>
        <trans-unit id="928166330dec85307dd2322795148f4d3e93e3af" translate="yes" xml:space="preserve">
          <source>Annotation Type Target</source>
          <target state="translated">주석 유형 대상</target>
        </trans-unit>
        <trans-unit id="4cf6f7c37998b022a9ac6a66e99ccba885fe437d" translate="yes" xml:space="preserve">
          <source>Annotation Type Transient</source>
          <target state="translated">주석 유형 과도</target>
        </trans-unit>
        <trans-unit id="451ef479320c3e9eb4b5bc9bfe70003464bef8ad" translate="yes" xml:space="preserve">
          <source>Annotation Types Summary</source>
          <target state="translated">주석 유형 요약</target>
        </trans-unit>
        <trans-unit id="47b3096e195e22b59f31814830a501e220efb3a8" translate="yes" xml:space="preserve">
          <source>Annotation element</source>
          <target state="translated">주석 요소</target>
        </trans-unit>
        <trans-unit id="5d331e0399ee71b4e6131cf5e506aba1258ec8f3" translate="yes" xml:space="preserve">
          <source>Annotation processing happens in a sequence of &lt;a href=&quot;roundenvironment&quot;&gt;rounds&lt;/a&gt;. On each round, a processor may be asked to &lt;a href=&quot;#process(java.util.Set,javax.annotation.processing.RoundEnvironment)&quot;&gt;process&lt;/a&gt; a subset of the annotations found on the source and class files produced by a prior round. The inputs to the first round of processing are the initial inputs to a run of the tool; these initial inputs can be regarded as the output of a virtual zeroth round of processing. If a processor was asked to process on a given round, it will be asked to process on subsequent rounds, including the last round, even if there are no annotations for it to process. The tool infrastructure may also ask a processor to process files generated implicitly by the tool's operation.</source>
          <target state="translated">주석 처리는 일련의 &lt;a href=&quot;roundenvironment&quot;&gt;라운드&lt;/a&gt; 에서 발생합니다 . 각 라운드에서 프로세서는 이전 라운드에서 생성 된 소스 및 클래스 파일에서 발견 된 주석의 하위 집합 을 &lt;a href=&quot;#process(java.util.Set,javax.annotation.processing.RoundEnvironment)&quot;&gt;처리&lt;/a&gt; 하도록 요청할 수 있습니다 . 첫 번째 처리 단계에 대한 입력은 도구 실행에 대한 초기 입력입니다. 이러한 초기 입력은 가상 제로 처리 처리의 출력으로 간주 될 수 있습니다. 프로세서가 주어진 라운드에서 처리하도록 요청받은 경우 처리 할 주석이 없더라도 마지막 라운드를 포함하여 후속 라운드에서 처리하도록 요청됩니다. 도구 인프라는 또한 도구의 작동에 의해 암시 적으로 생성 된 파일을 처리하도록 프로세서에 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be50acfea380665f34607b8c61b0962e638cd617" translate="yes" xml:space="preserve">
          <source>Annotation processing happens in a sequence of &lt;a href=&quot;roundenvironment&quot;&gt;rounds&lt;/a&gt;. On each round, a processor may be asked to &lt;a href=&quot;processor#process-java.util.Set-javax.annotation.processing.RoundEnvironment-&quot;&gt;process&lt;/a&gt; a subset of the annotations found on the source and class files produced by a prior round. The inputs to the first round of processing are the initial inputs to a run of the tool; these initial inputs can be regarded as the output of a virtual zeroth round of processing. If a processor was asked to process on a given round, it will be asked to process on subsequent rounds, including the last round, even if there are no annotations for it to process. The tool infrastructure may also ask a processor to process files generated implicitly by the tool's operation.</source>
          <target state="translated">주석 처리는 일련의 &lt;a href=&quot;roundenvironment&quot;&gt;라운드&lt;/a&gt; 에서 발생합니다 . 각 라운드에서 프로세서는 이전 라운드에서 생성 된 소스 및 클래스 파일에서 찾은 주석의 서브 세트 를 &lt;a href=&quot;processor#process-java.util.Set-javax.annotation.processing.RoundEnvironment-&quot;&gt;처리&lt;/a&gt; 하도록 요청받을 수 있습니다 . 첫 번째 가공 라운드에 대한 입력은 공구 실행에 대한 초기 입력입니다. 이러한 초기 입력은 가상 제로 라운드 처리의 출력으로 간주 될 수 있습니다. 프로세서가 지정된 라운드에서 처리하도록 요청한 경우 처리 할 주석이없는 경우에도 마지막 라운드를 포함하여 후속 라운드에서 처리하도록 요청됩니다. 툴 인프라 스트럭처는 프로세서가 툴 조작에 의해 내재적으로 생성 된 파일을 처리하도록 요청할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="36032bca93b9fd303800cf36031e61dda7d83a46" translate="yes" xml:space="preserve">
          <source>Annotation retention policy.</source>
          <target state="translated">주석 보존 정책.</target>
        </trans-unit>
        <trans-unit id="68bab41822f51e69130a0f167746a4786a92e23e" translate="yes" xml:space="preserve">
          <source>Annotation retention policy. The constants of this enumerated type describe the various policies for retaining annotations. They are used in conjunction with the &lt;a href=&quot;retention&quot;&gt;&lt;code&gt;Retention&lt;/code&gt;&lt;/a&gt; meta-annotation type to specify how long annotations are to be retained.</source>
          <target state="translated">주석 보존 정책. 이 열거 유형의 상수는 주석을 유지하기위한 다양한 정책을 설명합니다. 주석을 보유 할 기간을 지정하기 위해 &lt;a href=&quot;retention&quot;&gt; &lt;code&gt;Retention&lt;/code&gt; &lt;/a&gt; 메타 주석 유형 과 함께 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="7d9e15e21739f0c37df18fe55093427929a50ed4" translate="yes" xml:space="preserve">
          <source>Annotation to mark an interface explicitly as being an MXBean interface, or as not being an MXBean interface.</source>
          <target state="translated">인터페이스를 MXBean 인터페이스 또는 MXBean 인터페이스가 아닌 것으로 명시 적으로 표시하는 주석</target>
        </trans-unit>
        <trans-unit id="7b83e64a16ac8cf35bd04e39f1d8331bd14a60ab" translate="yes" xml:space="preserve">
          <source>Annotation to mark an interface explicitly as being an MXBean interface, or as not being an MXBean interface. By default, an interface is an MXBean interface if it is public and its name ends with &lt;code&gt;MXBean&lt;/code&gt;, as in &lt;code&gt;SomethingMXBean&lt;/code&gt;. The following interfaces are MXBean interfaces:</source>
          <target state="translated">인터페이스를 MXBean 인터페이스 또는 MXBean 인터페이스가 아닌 것으로 명시 적으로 표시하는 주석 기본적으로 인터페이스는 공용이고 이름이 &lt;code&gt;SomethingMXBean&lt;/code&gt; 에서처럼 &lt;code&gt;MXBean&lt;/code&gt; 으로 끝나는 경우 MXBean 인터페이스 입니다. 다음 인터페이스는 MXBean 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="025e39182f3ae2735d0e2ea25030ac8165d4b17d" translate="yes" xml:space="preserve">
          <source>Annotation type declaration</source>
          <target state="translated">주석 타입 선언</target>
        </trans-unit>
        <trans-unit id="cdafcdb0e1b335218cd9bc9be4f7136516e71436" translate="yes" xml:space="preserve">
          <source>Annotation.annotationType()</source>
          <target state="translated">Annotation.annotationType()</target>
        </trans-unit>
        <trans-unit id="5d9365cab2f09820f22553419c174082c8d89589" translate="yes" xml:space="preserve">
          <source>Annotation.equals()</source>
          <target state="translated">Annotation.equals()</target>
        </trans-unit>
        <trans-unit id="69c0da2206576aeac601bff1fc4a41f210c1bf90" translate="yes" xml:space="preserve">
          <source>Annotation.getValue()</source>
          <target state="translated">Annotation.getValue()</target>
        </trans-unit>
        <trans-unit id="1bd37ef007a85a0f0456532cba2f6c45fe9fc8cf" translate="yes" xml:space="preserve">
          <source>Annotation.hashCode()</source>
          <target state="translated">Annotation.hashCode()</target>
        </trans-unit>
        <trans-unit id="6aabb1fd40179c01b8df7e2b9959dbafbb5cc444" translate="yes" xml:space="preserve">
          <source>Annotation.toString()</source>
          <target state="translated">Annotation.toString()</target>
        </trans-unit>
        <trans-unit id="3613b17c28715389eeed5fce4e5a109bd2347db1" translate="yes" xml:space="preserve">
          <source>AnnotationFormatError</source>
          <target state="translated">AnnotationFormatError</target>
        </trans-unit>
        <trans-unit id="df37178bdef41ca29b231974228a2c68e5e69896" translate="yes" xml:space="preserve">
          <source>AnnotationMirror</source>
          <target state="translated">AnnotationMirror</target>
        </trans-unit>
        <trans-unit id="07ba8e6efa3764e78a8b59af7fea8ba432d96ef2" translate="yes" xml:space="preserve">
          <source>AnnotationMirror.getAnnotationType()</source>
          <target state="translated">AnnotationMirror.getAnnotationType()</target>
        </trans-unit>
        <trans-unit id="6a8327d9b5d300413d53669b7adfd12b0df65347" translate="yes" xml:space="preserve">
          <source>AnnotationMirror.getElementValues()</source>
          <target state="translated">AnnotationMirror.getElementValues()</target>
        </trans-unit>
        <trans-unit id="f3517af06b31fb4f89a1525ec83ea9eb9b874f31" translate="yes" xml:space="preserve">
          <source>AnnotationTypeMismatchException</source>
          <target state="translated">AnnotationTypeMismatchException</target>
        </trans-unit>
        <trans-unit id="7c01e67f70dc87eb9c4b52854c3698cde397c1ed" translate="yes" xml:space="preserve">
          <source>AnnotationTypeMismatchException.element()</source>
          <target state="translated">AnnotationTypeMismatchException.element()</target>
        </trans-unit>
        <trans-unit id="eae418a343bf145d24e68c5d69f35c3f5055b886" translate="yes" xml:space="preserve">
          <source>AnnotationTypeMismatchException.foundType()</source>
          <target state="translated">AnnotationTypeMismatchException.foundType()</target>
        </trans-unit>
        <trans-unit id="960198ba8987994e62e70b303ff3d860fd2ab3ba" translate="yes" xml:space="preserve">
          <source>AnnotationValue</source>
          <target state="translated">AnnotationValue</target>
        </trans-unit>
        <trans-unit id="acea91a385d6f873924c6a0f8b6b8f75d1fa0fb7" translate="yes" xml:space="preserve">
          <source>AnnotationValue.accept()</source>
          <target state="translated">AnnotationValue.accept()</target>
        </trans-unit>
        <trans-unit id="16ea73c05fb0c14b4bdce70d38231ac5e125bf4c" translate="yes" xml:space="preserve">
          <source>AnnotationValue.getValue()</source>
          <target state="translated">AnnotationValue.getValue()</target>
        </trans-unit>
        <trans-unit id="6c81782afcd998c9b0af20135bdb018242411ec5" translate="yes" xml:space="preserve">
          <source>AnnotationValue.toString()</source>
          <target state="translated">AnnotationValue.toString()</target>
        </trans-unit>
        <trans-unit id="1ed8eaf9a8bef688d61b799cc07602c070e82f6f" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor</source>
          <target state="translated">AnnotationValueVisitor</target>
        </trans-unit>
        <trans-unit id="6a45e78e4c0c5d01c00a83b95c8dbe76498db4ae" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visit()</source>
          <target state="translated">AnnotationValueVisitor.visit()</target>
        </trans-unit>
        <trans-unit id="523b83e220960acffd30ba65228e79f35b1965d8" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitAnnotation()</source>
          <target state="translated">AnnotationValueVisitor.visitAnnotation()</target>
        </trans-unit>
        <trans-unit id="8b1df36003a32e4d36f0ffd338ecf7f692f77b5c" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitArray()</source>
          <target state="translated">AnnotationValueVisitor.visitArray()</target>
        </trans-unit>
        <trans-unit id="d740dbc376935b262567b7c3135ccfd30a40065b" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitBoolean()</source>
          <target state="translated">AnnotationValueVisitor.visitBoolean()</target>
        </trans-unit>
        <trans-unit id="6a89ce619973c8ba110a8c38753c1030adccef84" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitByte()</source>
          <target state="translated">AnnotationValueVisitor.visitByte()</target>
        </trans-unit>
        <trans-unit id="394ae0210ea79c54bd391fe46cc2b38160110c98" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitChar()</source>
          <target state="translated">AnnotationValueVisitor.visitChar()</target>
        </trans-unit>
        <trans-unit id="13ae0fd2b031485a2d1390a2927d8b6d9a432945" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitDouble()</source>
          <target state="translated">AnnotationValueVisitor.visitDouble()</target>
        </trans-unit>
        <trans-unit id="ffa372abefce66f565ea0bc6974940d06e30dd99" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitEnumConstant()</source>
          <target state="translated">AnnotationValueVisitor.visitEnumConstant()</target>
        </trans-unit>
        <trans-unit id="e67dc62a6441cab770ef1bc955bb582ed726f5dc" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitFloat()</source>
          <target state="translated">AnnotationValueVisitor.visitFloat()</target>
        </trans-unit>
        <trans-unit id="bca97cecf5f8a531ef04bf8fa2a79389e4b0c906" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitInt()</source>
          <target state="translated">AnnotationValueVisitor.visitInt()</target>
        </trans-unit>
        <trans-unit id="9f49821481e0d17a1d85975f1bd965b7b089f9bb" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitLong()</source>
          <target state="translated">AnnotationValueVisitor.visitLong()</target>
        </trans-unit>
        <trans-unit id="344a5f99e63230e5b051089d7ca38f5f0c44c571" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitShort()</source>
          <target state="translated">AnnotationValueVisitor.visitShort()</target>
        </trans-unit>
        <trans-unit id="cd9118788c44c75a89de5a225225446a0d5e9f48" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitString()</source>
          <target state="translated">AnnotationValueVisitor.visitString()</target>
        </trans-unit>
        <trans-unit id="c9f06379c4f791e847fa15ef16498f0827682c08" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitType()</source>
          <target state="translated">AnnotationValueVisitor.visitType()</target>
        </trans-unit>
        <trans-unit id="f06a4569c4dcb83da0d6e5422c4b19c872fd738e" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitUnknown()</source>
          <target state="translated">AnnotationValueVisitor.visitUnknown()</target>
        </trans-unit>
        <trans-unit id="e8b5bd27f3a36c748abdedba1f16ff6c9c2678a1" translate="yes" xml:space="preserve">
          <source>Annotations are to be discarded by the compiler.</source>
          <target state="translated">주석은 컴파일러에서 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="fcc96b27c544d1550c22513fdbd0edf50def224f" translate="yes" xml:space="preserve">
          <source>Annotations are to be recorded in the class file by the compiler and retained by the VM at run time, so they may be read reflectively.</source>
          <target state="translated">주석은 컴파일러에 의해 클래스 파일에 기록되고 런타임에 VM에 의해 유지되므로 반영 적으로 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70872368984e0f0c89ad764e6fafe52a9949499f" translate="yes" xml:space="preserve">
          <source>Annotations are to be recorded in the class file by the compiler but need not be retained by the VM at run time.</source>
          <target state="translated">주석은 컴파일러에 의해 클래스 파일에 기록되지만 런타임에 VM에 의해 유지 될 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="9d8124fad57e48f0e3ee85e7c849ccd8f9f98d49" translate="yes" xml:space="preserve">
          <source>Annotations are to be recorded in the class file by the compiler but need not be retained by the VM at run time. This is the default behavior.</source>
          <target state="translated">주석은 컴파일러에 의해 클래스 파일에 기록되지만 런타임시 VM에 의해 유지 될 필요는 없습니다. 이것이 기본 동작입니다.</target>
        </trans-unit>
        <trans-unit id="19be655b8de3fb7644a8c5771c95a9f545b96d4d" translate="yes" xml:space="preserve">
          <source>Annotations for the run-time package are read from &lt;code&gt;package-info.class&lt;/code&gt; at the same code source as classes in the run-time package.</source>
          <target state="translated">런타임 패키지의 주석은 런타임 패키지의 클래스와 동일한 코드 소스의 &lt;code&gt;package-info.class&lt;/code&gt; 에서 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="5b257d13a4cb5ee69822d716a40f9b26917338f8" translate="yes" xml:space="preserve">
          <source>Annotations should be compared using the &lt;code&gt;equals&lt;/code&gt; method. There is no guarantee that any particular annotation will always be represented by the same object.</source>
          <target state="translated">주석은 &lt;code&gt;equals&lt;/code&gt; 방법을 사용하여 비교해야합니다 . 특정 주석이 항상 동일한 객체로 표현된다는 보장은 없습니다.</target>
        </trans-unit>
        <trans-unit id="25a4283ecfc000007f29f3e083fe439e1dd2826c" translate="yes" xml:space="preserve">
          <source>Annotations.</source>
          <target state="translated">Annotations.</target>
        </trans-unit>
        <trans-unit id="7d269679a5e554dfd36b51d1e8f021933d74b3b4" translate="yes" xml:space="preserve">
          <source>Anonymous (&lt;a href=&quot;http://www.ietf.org/rfc/rfc2245.txt&quot;&gt;RFC 2245&lt;/a&gt;). This mechanism is anonymous authentication in which no credentials are necessary.</source>
          <target state="translated">익명 ( &lt;a href=&quot;http://www.ietf.org/rfc/rfc2245.txt&quot;&gt;RFC 2245&lt;/a&gt; ). 이 메커니즘은 자격 증명이 필요없는 익명 인증입니다.</target>
        </trans-unit>
        <trans-unit id="80443dcea716447aafb7f6ce889459b9ed69341c" translate="yes" xml:space="preserve">
          <source>Another advantage of a &lt;code&gt;JdbcRowSet&lt;/code&gt; object is that it can be used to make a &lt;code&gt;ResultSet&lt;/code&gt; object scrollable and updatable. All &lt;code&gt;RowSet&lt;/code&gt; objects are by default scrollable and updatable. If the driver and database being used do not support scrolling and/or updating of result sets, an application can populate a &lt;code&gt;JdbcRowSet&lt;/code&gt; object with the data of a &lt;code&gt;ResultSet&lt;/code&gt; object and then operate on the &lt;code&gt;JdbcRowSet&lt;/code&gt; object as if it were the &lt;code&gt;ResultSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;JdbcRowSet&lt;/code&gt; 객체 의 또 다른 장점은 &lt;code&gt;ResultSet&lt;/code&gt; 객체를 스크롤 및 업데이트 가능 하게 만드는 데 사용할 수 있다는 것 입니다. 모든 &lt;code&gt;RowSet&lt;/code&gt; 객체는 기본적으로 스크롤 및 업데이트 가능합니다. 드라이버 및 데이터베이스 스크롤 및 / 또는 결과 집합의 업데이트를 지원하지 않는 사용하는 경우, 응용 프로그램은 채울 수 있습니다 &lt;code&gt;JdbcRowSet&lt;/code&gt; a의 데이터 객체 &lt;code&gt;ResultSet&lt;/code&gt; 객체를과에서 작동 다음 &lt;code&gt;JdbcRowSet&lt;/code&gt; 는 것처럼 객체 &lt;code&gt;ResultSet&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="ff8219a463455ffb7548de8cc3face127d2629b9" translate="yes" xml:space="preserve">
          <source>Another advantage of the &lt;code&gt;CachedRowSet&lt;/code&gt; class is that it makes it possible to retrieve and store data from sources other than a relational database. The reader for a rowset can be implemented to read and populate its rowset with data from any tabular data source, including a spreadsheet or flat file. Because both a &lt;code&gt;CachedRowSet&lt;/code&gt; object and its metadata can be created from scratch, a component that acts as a factory for rowsets can use this capability to create a rowset containing data from non-SQL data sources. Nevertheless, it is expected that most of the time, &lt;code&gt;CachedRowSet&lt;/code&gt; objects will contain data that was fetched from an SQL database using the JDBC API.</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; 클래스 의 또 다른 장점은 관계형 데이터베이스가 아닌 소스에서 데이터를 검색하고 저장할 수 있다는 것입니다. 행 집합의 판독기는 스프레드 시트 또는 플랫 파일을 포함하여 모든 테이블 형식 데이터 원본의 데이터를 읽고 해당 행 집합을 채우도록 구현할 수 있습니다. 둘 다를 때문에 &lt;code&gt;CachedRowSet&lt;/code&gt; 객체와 메타 데이터는 행 집합이 아닌 SQL 데이터 소스로부터 데이터를 포함하는 행 집합을 만들려면이 기능을 사용할 수 있습니다에 대한 공장 역할을하는 구성 요소, 처음부터 만들 수 있습니다. 그럼에도 불구하고 대부분의 경우 &lt;code&gt;CachedRowSet&lt;/code&gt; 개체는 JDBC API를 사용하여 SQL 데이터베이스에서 가져온 데이터를 포함 할 것으로 예상 됩니다.</target>
        </trans-unit>
        <trans-unit id="278caaf450748a718e3292c7dc0d8d1844dc77fc" translate="yes" xml:space="preserve">
          <source>Another backslash. The second backslash has no special meaning and the two characters represent a single backslash.</source>
          <target state="translated">또 다른 백 슬래시. 두 번째 백 슬래시는 특별한 의미가 없으며 두 문자는 단일 백 슬래시를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0773c82784af8397dee0d17482ab4483eb974aa6" translate="yes" xml:space="preserve">
          <source>Another example would be a multi-column component, such as a &lt;code&gt;JTable&lt;/code&gt;, in which the column sizes are not all equal. The &lt;code&gt;JTable&lt;/code&gt; might use a single &lt;code&gt;SizeSequence&lt;/code&gt; object to store the widths and X positions of all the columns. The &lt;code&gt;JTable&lt;/code&gt; could then use the &lt;code&gt;SizeSequence&lt;/code&gt; object to find the column corresponding to a certain position. The &lt;code&gt;JTable&lt;/code&gt; could update the &lt;code&gt;SizeSequence&lt;/code&gt; object whenever one or more column sizes changed.</source>
          <target state="translated">또 다른 예는 열 크기가 모두 같지 않은 &lt;code&gt;JTable&lt;/code&gt; 과 같은 다중 열 구성 요소 입니다. &lt;code&gt;JTable&lt;/code&gt; 는, 단일 사용할 수 &lt;code&gt;SizeSequence&lt;/code&gt; 모든 열의 폭과 X 위치를 저장하는 객체. &lt;code&gt;JTable&lt;/code&gt; 는, 다음 사용할 수 &lt;code&gt;SizeSequence&lt;/code&gt; 특정 위치에 해당하는 열을 찾기 위해 개체를. &lt;code&gt;JTable&lt;/code&gt; 는, 업데이트 할 수 &lt;code&gt;SizeSequence&lt;/code&gt; 하나 이상의 열이 변경 지정 크기가 될 때마다 개체를.</target>
        </trans-unit>
        <trans-unit id="b67e639149fb9f851818ff99c6391314dd0e4fa4" translate="yes" xml:space="preserve">
          <source>Another job for the cell renderer is in helping to determine sizing information for the list. By default, the list's &lt;code&gt;ListUI&lt;/code&gt; determines the size of cells by asking the cell renderer for its preferred size for each list item. This can be expensive for large lists of items. To avoid these calculations, you can set a &lt;code&gt;fixedCellWidth&lt;/code&gt; and &lt;code&gt;fixedCellHeight&lt;/code&gt; on the list, or have these values calculated automatically based on a single prototype value:</source>
          <target state="translated">셀 렌더러의 또 다른 작업은 목록의 크기 정보를 결정하는 것입니다. 기본적으로 목록의 &lt;code&gt;ListUI&lt;/code&gt; 는 셀 렌더러에게 각 목록 항목에 대해 선호하는 크기를 요청하여 셀 크기를 결정합니다. 많은 항목 목록의 경우 비용이 많이들 수 있습니다. 이러한 계산을 방지하려면 목록에서 &lt;code&gt;fixedCellWidth&lt;/code&gt; 및 &lt;code&gt;fixedCellHeight&lt;/code&gt; 를 설정 하거나 단일 프로토 타입 값을 기반으로 이러한 값을 자동으로 계산 하도록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dc4a3301cd9c4d3efdf3b80d753c3d4f2e526481" translate="yes" xml:space="preserve">
          <source>Another provider may implement a class for each of the above modes (i.e., one class for</source>
          <target state="translated">다른 제공자는 위의 각 모드에 대한 클래스를 구현할 수 있습니다 (예 :</target>
        </trans-unit>
        <trans-unit id="e4fc4288d6a922879eeb09c9a460d7c8fbe940b0" translate="yes" xml:space="preserve">
          <source>Another thing to note about these examples is how they use the method &lt;code&gt;acceptChanges&lt;/code&gt;. It is this method that propagates changes in a &lt;code&gt;CachedRowSet&lt;/code&gt; object back to the underlying data source, calling on the &lt;code&gt;RowSet&lt;/code&gt; object's writer internally to write changes to the data source. To do this, the writer has to incur the expense of establishing a connection with that data source. The preceding two code fragments call the method &lt;code&gt;acceptChanges&lt;/code&gt; immediately after calling &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt;. However, when there are multiple rows being changed, it is more efficient to call &lt;code&gt;acceptChanges&lt;/code&gt; after all calls to &lt;code&gt;updateRow&lt;/code&gt; and &lt;code&gt;insertRow&lt;/code&gt; have been made. If &lt;code&gt;acceptChanges&lt;/code&gt; is called only once, only one connection needs to be established.</source>
          <target state="translated">이 예제에서 주목해야 할 또 다른 사항은 &lt;code&gt;acceptChanges&lt;/code&gt; 메소드를 사용하는 방법 입니다. 이 메서드는 &lt;code&gt;CachedRowSet&lt;/code&gt; 개체의 변경 사항을 기본 데이터 소스로 다시 전파 하고 &lt;code&gt;RowSet&lt;/code&gt; 개체의 작성기를 내부적으로 호출 하여 데이터 소스에 변경 사항을 기록합니다. 이렇게하려면 작성자가 해당 데이터 소스와의 연결을 설정하는 데 드는 비용이 발생해야합니다. 앞의 두 코드 조각은 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 를 호출 한 직후 &lt;code&gt;acceptChanges&lt;/code&gt; 메서드를 호출합니다 . 그러나 변경되는 행이 여러 개인 경우 &lt;code&gt;updateRow&lt;/code&gt; 및 &lt;code&gt;insertRow&lt;/code&gt; 에 대한 모든 호출 후에 &lt;code&gt;acceptChanges&lt;/code&gt; 를 호출하는 것이 더 효율적입니다.만들어졌습니다. 경우 &lt;code&gt;acceptChanges&lt;/code&gt; 한 번만 호출되어, 하나의 연결이 설정 될 필요가있다.</target>
        </trans-unit>
        <trans-unit id="5e1c5b1e5bb69ff0cf31d51e349c75af553a6629" translate="yes" xml:space="preserve">
          <source>Another thread notifies threads waiting on this object's monitor to wake up either through a call to the &lt;code&gt;notify&lt;/code&gt; method or the &lt;code&gt;notifyAll&lt;/code&gt; method.</source>
          <target state="translated">(가)에이 객체의 모니터에 대기중인 또 다른 스레드 통지 스레드 호출을 통해 중 하나를 깨울 &lt;code&gt;notify&lt;/code&gt; 방법이나 &lt;code&gt;notifyAll&lt;/code&gt; 방법을.</target>
        </trans-unit>
        <trans-unit id="ef72d3480b46154c6b0f3e93a6925ade124026af" translate="yes" xml:space="preserve">
          <source>Another typical usage would be to divide a problem into N parts, describe each part with a Runnable that executes that portion and counts down on the latch, and queue all the Runnables to an Executor. When all sub-parts are complete, the coordinating thread will be able to pass through await. (When threads must repeatedly count down in this way, instead use a &lt;a href=&quot;cyclicbarrier&quot;&gt;&lt;code&gt;CyclicBarrier&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">또 다른 일반적인 사용법은 문제를 N 부분으로 나누고 해당 부분을 실행하고 래치에서 카운트 다운하는 Runnable을 사용하여 각 부분을 설명하고 모든 Runnable을 Executor에 대기시키는 것입니다. 모든 하위 부품이 완료되면 조정 스레드가 대기를 통과 할 수 있습니다. (이러한 방식으로 스레드가 반복해서 카운트 다운해야하는 경우 &lt;a href=&quot;cyclicbarrier&quot;&gt; &lt;code&gt;CyclicBarrier&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .)</target>
        </trans-unit>
        <trans-unit id="d411ee31ab6712a63ad89e9b23b92978ad7f9d9c" translate="yes" xml:space="preserve">
          <source>Another use of dynamically typesafe views is debugging. Suppose a program fails with a &lt;code&gt;ClassCastException&lt;/code&gt;, indicating that an incorrectly typed element was put into a parameterized collection. Unfortunately, the exception can occur at any time after the erroneous element is inserted, so it typically provides little or no information as to the real source of the problem. If the problem is reproducible, one can quickly determine its source by temporarily modifying the program to wrap the collection with a dynamically typesafe view. For example, this declaration:</source>
          <target state="translated">동적 형식 안전 뷰의 또 다른 사용은 디버깅입니다. 잘못된 유형의 요소가 매개 변수화 된 콜렉션에 입력되었음을 나타내는 &lt;code&gt;ClassCastException&lt;/code&gt; 과 함께 프로그램이 실패한다고 가정하십시오 . 불행히도, 잘못된 요소가 삽입 된 후 언제라도 예외가 발생할 수 있으므로 일반적으로 문제의 실제 원인에 대한 정보를 거의 또는 전혀 제공하지 않습니다. 문제를 재현 할 수 있으면 동적으로 형식이 안전한보기로 컬렉션을 래핑하도록 프로그램을 일시적으로 수정하여 소스를 신속하게 확인할 수 있습니다. 예를 들어,이 선언은 :</target>
        </trans-unit>
        <trans-unit id="cf5b5f29e525592e822d0c201a49d7d5d3ca85fd" translate="yes" xml:space="preserve">
          <source>Another way the character set can be specified is in the document itself. This requires reading the document prior to determining the character set that is desired. To handle this, it is expected that the &lt;code&gt;EditorKit&lt;/code&gt;.read operation throw a &lt;code&gt;ChangedCharSetException&lt;/code&gt; which will be caught. The read is then restarted with a new Reader that uses the character set specified in the &lt;code&gt;ChangedCharSetException&lt;/code&gt; (which is an &lt;code&gt;IOException&lt;/code&gt;).</source>
          <target state="translated">문자 집합을 지정할 수있는 또 다른 방법은 문서 자체에 있습니다. 이를 위해서는 원하는 문자 집합을 결정하기 전에 문서를 읽어야합니다. 이를 처리하기 위해 &lt;code&gt;EditorKit&lt;/code&gt; .read 작업 이 catch 될 &lt;code&gt;ChangedCharSetException&lt;/code&gt; 을 throw해야합니다 . 그런 다음 &lt;code&gt;ChangedCharSetException&lt;/code&gt; ( &lt;code&gt;IOException&lt;/code&gt; )에 지정된 문자 집합을 사용하는 새 판독기로 읽기가 다시 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="9a9d24a4302c6890a261ac379b2ab6b218b70ead" translate="yes" xml:space="preserve">
          <source>Another way to reference arguments by position is to use the &lt;code&gt;'&amp;lt;'&lt;/code&gt; (&lt;code&gt;'\u003c'&lt;/code&gt;) flag, which causes the argument for the previous format specifier to be re-used. For example, the following two statements would produce identical strings:</source>
          <target state="translated">위치별로 인수를 참조하는 다른 방법은 &lt;code&gt;'&amp;lt;'&lt;/code&gt; ( &lt;code&gt;'\u003c'&lt;/code&gt; ) 플래그를 사용하여 이전 형식 지정자에 대한 인수를 재사용하는 것입니다. 예를 들어 다음 두 명령문은 동일한 문자열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e690f2b9f492d7ad15a6f9500894187f74c75846" translate="yes" xml:space="preserve">
          <source>Anti-aliasing and Fractional-metrics specified by an application can also affect the size of a character because of rounding to pixel boundaries.</source>
          <target state="translated">응용 프로그램에서 지정한 앤티 앨리어싱 및 분수 메트릭도 픽셀 경계로 반올림하기 때문에 문자 크기에 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af7b0399ae948c4137d8bd19cc77647f184464f6" translate="yes" xml:space="preserve">
          <source>Antialiasing hint key.</source>
          <target state="translated">앤티 앨리어싱 힌트 키.</target>
        </trans-unit>
        <trans-unit id="5fb0219fe3f2b0b0e83c2dbbbe288c78901772d8" translate="yes" xml:space="preserve">
          <source>Antialiasing hint key. The &lt;code&gt;ANTIALIASING&lt;/code&gt; hint controls whether or not the geometry rendering methods of a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; object will attempt to reduce aliasing artifacts along the edges of shapes.</source>
          <target state="translated">앤티 앨리어싱 힌트 키. &lt;code&gt;ANTIALIASING&lt;/code&gt; 힌트 컨트롤이 있는지 여부를 방법 렌더링 형상 &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt; 객체는 모양의 가장자리를 따라 앨리어싱을 줄이기 위해 시도합니다.</target>
        </trans-unit>
        <trans-unit id="9ad6fddbd526275d637766aaafef517eb3cb16b8" translate="yes" xml:space="preserve">
          <source>Antialiasing hint value -- rendering is done with a default antialiasing mode chosen by the implementation.</source>
          <target state="translated">앤티 앨리어싱 힌트 값-구현에서 선택한 기본 앤티 앨리어싱 모드로 렌더링이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="c28d264bf30ce8dbdeb2af2accb27ae64064aba7" translate="yes" xml:space="preserve">
          <source>Antialiasing hint value -- rendering is done with antialiasing.</source>
          <target state="translated">앤티 앨리어싱 힌트 값-렌더링은 앤티 앨리어싱으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="6fdda8d26f7d98fd62fa8463969dd96dc8b3bf0a" translate="yes" xml:space="preserve">
          <source>Antialiasing hint value -- rendering is done without antialiasing.</source>
          <target state="translated">앤티 앨리어싱 힌트 값-앤티 앨리어싱없이 렌더링이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="322444d3bb52c341f429ca0454f292dc242f315b" translate="yes" xml:space="preserve">
          <source>Any</source>
          <target state="translated">Any</target>
        </trans-unit>
        <trans-unit id="e837efa7866b70ea4964a47451fd0dbed3e145c7" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;#addConfigurationListener(java.lang.Runnable)&quot;&gt;registered configuration listener&lt;/a&gt; will be invoked after the properties are read.</source>
          <target state="translated">모든 &lt;a href=&quot;#addConfigurationListener(java.lang.Runnable)&quot;&gt;등록 된 구성 리스너는&lt;/a&gt; 속성이 읽기 후에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="fba7cd04166193720f264e86c165094f4b6e86f2" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;../util/timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#isLenient()&quot;&gt;leniency&lt;/a&gt; values that have previously been set are overwritten by &lt;code&gt;newCalendar&lt;/code&gt;'s values.</source>
          <target state="translated">이전에 설정된 모든 &lt;a href=&quot;../util/timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#isLenient()&quot;&gt;leniency&lt;/a&gt; 값은 &lt;code&gt;newCalendar&lt;/code&gt; 의 값으로 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="1c7b3876d1999e760b72c75a1e6a3ce121a0a890" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;../util/timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;dateformat#isLenient--&quot;&gt;leniency&lt;/a&gt; values that have previously been set are overwritten by &lt;code&gt;newCalendar&lt;/code&gt;'s values.</source>
          <target state="translated">이전에 설정된 모든 &lt;a href=&quot;../util/timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;dateformat#isLenient--&quot;&gt;leniency&lt;/a&gt; 값은 &lt;code&gt;newCalendar&lt;/code&gt; 의 값으로 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="2b3256f0600177855700faf9f163b41812c45a5f" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;blockingqueue&quot;&gt;&lt;code&gt;BlockingQueue&lt;/code&gt;&lt;/a&gt; may be used to transfer and hold submitted tasks. The use of this queue interacts with pool sizing:</source>
          <target state="translated">제출 된 작업을 전송하고 보류하는 데 모든 &lt;a href=&quot;blockingqueue&quot;&gt; &lt;code&gt;BlockingQueue&lt;/code&gt; 를&lt;/a&gt; 사용할 수 있습니다. 이 큐의 사용은 풀 크기와 상호 작용합니다.</target>
        </trans-unit>
        <trans-unit id="50469ac64f74c9042a2f53f3b43c5ba42017ea3f" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;RowSet&lt;/code&gt; object can be added to a &lt;code&gt;JoinRowSet&lt;/code&gt; object to become part of an SQL &lt;code&gt;JOIN&lt;/code&gt; relationship. This means that both connected and disconnected &lt;code&gt;RowSet&lt;/code&gt; objects can be part of a &lt;code&gt;JOIN&lt;/code&gt;. &lt;code&gt;RowSet&lt;/code&gt; objects operating in a connected environment (&lt;code&gt;JdbcRowSet&lt;/code&gt; objects) are encouraged to use the database to which they are already connected to establish SQL &lt;code&gt;JOIN&lt;/code&gt; relationships between tables directly. However, it is possible for a &lt;code&gt;JdbcRowSet&lt;/code&gt; object to be added to a &lt;code&gt;JoinRowSet&lt;/code&gt; object if necessary.</source>
          <target state="translated">모든 &lt;code&gt;RowSet&lt;/code&gt; 개체를 &lt;code&gt;JoinRowSet&lt;/code&gt; 개체에 추가 하여 SQL &lt;code&gt;JOIN&lt;/code&gt; 관계의 일부가 될 수 있습니다 . 이것은 연결 및 연결 해제 된 &lt;code&gt;RowSet&lt;/code&gt; 객체 모두 가 &lt;code&gt;JOIN&lt;/code&gt; 의 일부가 될 수 있음을 의미합니다 . 연결된 환경 ( &lt;code&gt;JdbcRowSet&lt;/code&gt; 개체) 에서 작동하는 &lt;code&gt;RowSet&lt;/code&gt; 개체 는 이미 연결되어있는 데이터베이스를 사용하여 테이블 간의 SQL &lt;code&gt;JOIN&lt;/code&gt; 관계를 직접 설정하는 것이 좋습니다. 그러나 필요한 경우 &lt;code&gt;JdbcRowSet&lt;/code&gt; 객체를 &lt;code&gt;JoinRowSet&lt;/code&gt; 객체에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d8f632a305ba4cb37f219678fe07ce21c5d52181" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;XPath&lt;/code&gt; objects constructed from this factory will use the specified resolver by default.</source>
          <target state="translated">이 팩토리에서 생성 된 모든 &lt;code&gt;XPath&lt;/code&gt; 개체는 기본적으로 지정된 확인자를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e7fc9ad7ac0770ee3d5715933ad7bf4aa69c504f" translate="yes" xml:space="preserve">
          <source>Any BeanInfo associated with the specified &lt;code&gt;beanClass&lt;/code&gt; or any of its parent classes will be ignored.</source>
          <target state="translated">지정된 &lt;code&gt;beanClass&lt;/code&gt; 또는 그 부모 클래스 와 연관된 BeanInfo 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="f2d5679ee729395da001ae24b1893709e43f6232" translate="yes" xml:space="preserve">
          <source>Any BeanInfo associated with the specified &lt;code&gt;beanClass&lt;/code&gt; will be ignored.</source>
          <target state="translated">지정된 &lt;code&gt;beanClass&lt;/code&gt; 와 관련된 모든 BeanInfo 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="36b34d235f90d366fbbaab3130d43207599fb97f" translate="yes" xml:space="preserve">
          <source>Any BeanInfo that can be discovered will be used.</source>
          <target state="translated">발견 될 수있는 모든 BeanInfo가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="91fc4fe270878de4be10043a0f7d6405fc46ffdd" translate="yes" xml:space="preserve">
          <source>Any Java object of a class that implements the &lt;a href=&quot;dynamicmbean&quot;&gt;&lt;code&gt;DynamicMBean&lt;/code&gt;&lt;/a&gt; interface is a Dynamic MBean.</source>
          <target state="translated">&lt;a href=&quot;dynamicmbean&quot;&gt; &lt;code&gt;DynamicMBean&lt;/code&gt; &lt;/a&gt; 인터페이스 를 구현하는 클래스의 모든 Java 객체 는 Dynamic MBean입니다.</target>
        </trans-unit>
        <trans-unit id="5fc658248a98dbf0fafef8e2b3c16e220147a8b7" translate="yes" xml:space="preserve">
          <source>Any Source can be transformed to a Result using the identity transform specified by calling newTransformer():</source>
          <target state="translated">newTransformer ()를 호출하여 지정된 ID 변환을 사용하여 모든 소스를 결과로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc3cdec7678ab879e9cb60b6c23ed0638862794a" translate="yes" xml:space="preserve">
          <source>Any Unicode extended grapheme cluster</source>
          <target state="translated">모든 유니 코드 확장 자소 클러스터</target>
        </trans-unit>
        <trans-unit id="878dd2b27c0d7871e861dcee06c80435d7ef637a" translate="yes" xml:space="preserve">
          <source>Any Unicode linebreak sequence, is equivalent to &lt;code&gt;\u000D\u000A|[\u000A\u000B\u000C\u000D\u0085\u2028\u2029]
     &lt;/code&gt;</source>
          <target state="translated">모든 유니 코드 줄 &lt;code&gt;\u000D\u000A|[\u000A\u000B\u000C\u000D\u0085\u2028\u2029] &lt;/code&gt; 순서는 \ u000D \ u000A | [\ u000A \ u000B \ u000C \ u000D \ u0085 \ u2028 \ u2029]와 같습니다.</target>
        </trans-unit>
        <trans-unit id="9849c8a7dbc780ccac41131fe99fc9bd5646c016" translate="yes" xml:space="preserve">
          <source>Any additional output is written to the output buffer beginning at its current position. At most &lt;a href=&quot;../buffer#remaining()&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be written. The buffer's position will be advanced appropriately, but its mark and limit will not be modified.</source>
          <target state="translated">추가 출력은 현재 위치에서 시작하는 출력 버퍼에 기록됩니다. 최대 &lt;a href=&quot;../buffer#remaining()&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt; 바이트가 기록됩니다. 버퍼의 위치는 적절하게 진행되지만 표시와 한계는 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="07a38a08c76f5eb76a6e6d26b38c57c8ada2f5d5" translate="yes" xml:space="preserve">
          <source>Any additional output is written to the output buffer beginning at its current position. At most &lt;a href=&quot;../buffer#remaining()&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; characters will be written. The buffer's position will be advanced appropriately, but its mark and limit will not be modified.</source>
          <target state="translated">추가 출력은 현재 위치에서 시작하는 출력 버퍼에 기록됩니다. 최대 &lt;a href=&quot;../buffer#remaining()&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt; 문자가 기록됩니다. 버퍼의 위치는 적절하게 진행되지만 표시와 한계는 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6fc08c383238f31e74ec6a951c51dbf45488276e" translate="yes" xml:space="preserve">
          <source>Any additional output is written to the output buffer beginning at its current position. At most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be written. The buffer's position will be advanced appropriately, but its mark and limit will not be modified.</source>
          <target state="translated">추가 출력은 현재 위치에서 시작하여 출력 버퍼에 기록됩니다. 최대 &lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt; 바이트가 기록됩니다. 버퍼의 위치는 적절하게 진행되지만 마크와 한계는 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d89160ec853025a7dd13ded262eb18b4ba5238af" translate="yes" xml:space="preserve">
          <source>Any additional output is written to the output buffer beginning at its current position. At most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; characters will be written. The buffer's position will be advanced appropriately, but its mark and limit will not be modified.</source>
          <target state="translated">추가 출력은 현재 위치에서 시작하여 출력 버퍼에 기록됩니다. 최대 &lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt; 문자가 기록됩니다. 버퍼의 위치는 적절하게 진행되지만 마크와 한계는 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a8934b5a18a25867373a75d27592862e54f3f40d" translate="yes" xml:space="preserve">
          <source>Any algorithm parameters that may be used in the encryption operation are stored inside of the new &lt;code&gt;SealedObject&lt;/code&gt;.</source>
          <target state="translated">암호화 작업에 사용될 수있는 모든 알고리즘 매개 변수는 새로운 &lt;code&gt;SealedObject&lt;/code&gt; 안에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="41bfb73786fd6a5996fa5fd6d71d907fff0fd9de" translate="yes" xml:space="preserve">
          <source>Any annotations on the package are read from &lt;code&gt;package-info.class&lt;/code&gt; as specified above.</source>
          <target state="translated">패키지의 모든 주석은 위에 지정된대로 &lt;code&gt;package-info.class&lt;/code&gt; 에서 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="28217249ea650a59594510440b99e6b2835b9e11" translate="yes" xml:space="preserve">
          <source>Any arbitrary value used to indicate a variation of a &lt;code&gt;Locale&lt;/code&gt;. Where there are two or more variant values each indicating its own semantics, these values should be ordered by importance, with most important first, separated by underscore('_'). The variant field is case sensitive.</source>
          <target state="translated">&lt;code&gt;Locale&lt;/code&gt; 의 변형을 나타내는 데 사용되는 임의의 값 입니다. 각각 고유 한 의미를 나타내는 둘 이상의 변형 값이있는 경우이 값은 중요도에 따라 순서대로 정렬해야하며 가장 중요하게는 밑줄 ( '_')로 구분해야합니다. 변형 필드는 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="d33437a7454c1b83f35333b24c59b541971ca8bc" translate="yes" xml:space="preserve">
          <source>Any argument to a stage's computation is the outcome of a triggering stage's computation.</source>
          <target state="translated">단계 계산에 대한 모든 인수는 트리거 단계 계산의 결과입니다.</target>
        </trans-unit>
        <trans-unit id="89fc821443d8cad046dd54102e3989ffae181623" translate="yes" xml:space="preserve">
          <source>Any array elements following the last element in the Vector are null.</source>
          <target state="translated">Vector의 마지막 요소 다음에 오는 배열 요소는 모두 null입니다.</target>
        </trans-unit>
        <trans-unit id="8d95a184a347e367ac7b88c589e32e30708dd89e" translate="yes" xml:space="preserve">
          <source>Any attempt to modify the resulting buffer will cause a &lt;a href=&quot;../readonlybufferexception&quot;&gt;&lt;code&gt;ReadOnlyBufferException&lt;/code&gt;&lt;/a&gt; to be thrown. (&lt;a href=&quot;filechannel.mapmode#READ_ONLY&quot;&gt;&lt;code&gt;MapMode.READ_ONLY&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">결과 버퍼를 수정하려고하면 &lt;a href=&quot;../readonlybufferexception&quot;&gt; &lt;code&gt;ReadOnlyBufferException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. ( &lt;a href=&quot;filechannel.mapmode#READ_ONLY&quot;&gt; &lt;code&gt;MapMode.READ_ONLY&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="33fa846a103fcbcc838ecd8d6c108c0babb01059" translate="yes" xml:space="preserve">
          <source>Any attempt to read object data which exceeds the boundaries of the custom data written by the corresponding writeObject method will cause an OptionalDataException to be thrown with an eof field value of true. Non-object reads which exceed the end of the allotted data will reflect the end of data in the same way that they would indicate the end of the stream: bytewise reads will return -1 as the byte read or number of bytes read, and primitive reads will throw EOFExceptions. If there is no corresponding writeObject method, then the end of default serialized data marks the end of the allotted data.</source>
          <target state="translated">해당 writeObject 메소드로 작성된 사용자 정의 데이터의 경계를 초과하는 오브젝트 데이터를 읽으려고하면 eof 필드 값이 true 인 OptionalDataException이 발생합니다. 할당 된 데이터의 끝을 초과하는 객체가 아닌 읽기는 스트림의 끝을 나타내는 것과 같은 방식으로 데이터의 끝을 반영합니다. 바이트 단위 읽기는 바이트 읽기 또는 읽은 바이트 수로 -1을 반환하고 기본입니다. 읽기는 EOFException을 발생시킵니다. 해당 writeObject 메소드가 없으면 기본 직렬화 된 데이터의 끝이 할당 된 데이터의 끝을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="d03391cf9563966b46dad3f5b96b7ea721c93a92" translate="yes" xml:space="preserve">
          <source>Any attributes associated with the name are removed. Intermediate contexts are not changed.</source>
          <target state="translated">이름과 관련된 모든 속성이 제거됩니다. 중급 컨텍스트는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="138d1be4feab75eed27dc6edb1cbf148dd5f2c2c" translate="yes" xml:space="preserve">
          <source>Any bytes buffered by the encapsulated cipher and waiting to be processed by it will not be written out. For example, if the encapsulated cipher is a block cipher, and the total number of bytes written using one of the &lt;code&gt;write&lt;/code&gt; methods is less than the cipher's block size, no bytes will be written out.</source>
          <target state="translated">캡슐화 된 암호로 버퍼링되고 처리 대기중인 바이트는 기록되지 않습니다. 예를 들어, 캡슐화 된 암호가 블록 암호이고 &lt;code&gt;write&lt;/code&gt; 방법 중 하나를 사용하여 쓴 총 바이트 수가 암호의 블록 크기보다 작 으면 바이트가 기록되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="39a820f00362e925dafb543212bc53cf357b3423" translate="yes" xml:space="preserve">
          <source>Any character (&lt;code&gt;Character.isLetter&lt;/code&gt;).</source>
          <target state="translated">모든 문자 ( &lt;code&gt;Character.isLetter&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8c39424e745701104576ae6ba7879913313418bc" translate="yes" xml:space="preserve">
          <source>Any character (&lt;code&gt;Character.isLetter&lt;/code&gt;). All lowercase letters are mapped to upper case.</source>
          <target state="translated">모든 문자 ( &lt;code&gt;Character.isLetter&lt;/code&gt; ). 모든 소문자는 대문자로 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="191f98256be111f82699767f2f37ae315ad6c589" translate="yes" xml:space="preserve">
          <source>Any character (&lt;code&gt;Character.isLetter&lt;/code&gt;). All upper case letters are mapped to lower case.</source>
          <target state="translated">모든 문자 ( &lt;code&gt;Character.isLetter&lt;/code&gt; ). 모든 대문자는 소문자로 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="36abd7da00f31ca22008ea2a36d64beb6a6bb085" translate="yes" xml:space="preserve">
          <source>Any character (may or may not match &lt;a href=&quot;#lt&quot;&gt;line terminators&lt;/a&gt;)</source>
          <target state="translated">모든 문자 ( &lt;a href=&quot;#lt&quot;&gt;줄 종결 자&lt;/a&gt; 와 일치하거나 일치하지 않을 수 있음 )</target>
        </trans-unit>
        <trans-unit id="dd877acbce59891c71e45cab4d13e03529950c59" translate="yes" xml:space="preserve">
          <source>Any character except &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, or &lt;code&gt;c&lt;/code&gt; (negation)</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; 또는 &lt;code&gt;c&lt;/code&gt; 를 제외한 모든 문자 (음수)</target>
        </trans-unit>
        <trans-unit id="6eb20b4b210d809cc20ecc02e27a12d61731ee77" translate="yes" xml:space="preserve">
          <source>Any character except one in the Greek block (negation)</source>
          <target state="translated">그리스어 블록에서 하나를 제외한 모든 문자 (음수)</target>
        </trans-unit>
        <trans-unit id="2100078a047c7a03eb060da42289872c8a92cf81" translate="yes" xml:space="preserve">
          <source>Any character of the string is not a digit of the specified radix, except that the first character may be a minus sign &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002D'&lt;/code&gt;) or plus sign &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt;'\u002B'&lt;/code&gt;) provided that the string is longer than length 1.</source>
          <target state="translated">문자열의 모든 문자는 지정된 기수의 숫자가 아닙니다. 단, 첫 번째 문자는 빼기 부호 &lt;code&gt;'-'&lt;/code&gt; ( &lt;code&gt;'\u002D'&lt;/code&gt; ) 또는 더하기 부호 &lt;code&gt;'+'&lt;/code&gt; ( &lt;code&gt;'\u002B'&lt;/code&gt; ) 일 수 있습니다. 길이 1보다 깁니다.</target>
        </trans-unit>
        <trans-unit id="972566481eda3ca2cffb1512537d2746e1ad6383" translate="yes" xml:space="preserve">
          <source>Any character of the string is not a digit of the specified radix, except that the first character may be a minus sign &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002d'&lt;/code&gt;) or plus sign &lt;code&gt;
 '+'&lt;/code&gt; (&lt;code&gt;'\u002B'&lt;/code&gt;) provided that the string is longer than length 1.</source>
          <target state="translated">문자열의 모든 문자는 지정된 기수의 숫자가 아닙니다. 단, 첫 번째 문자는 문자열이 다음과 같은 경우 마이너스 기호 &lt;code&gt;'-'&lt;/code&gt; ( &lt;code&gt;'\u002d'&lt;/code&gt; ) 또는 더하기 기호 &lt;code&gt; '+'&lt;/code&gt; ( &lt;code&gt;'\u002B'&lt;/code&gt; ) 일 수 있습니다. 길이 1보다 깁니다.</target>
        </trans-unit>
        <trans-unit id="24d5c44faeee009aacd3ba1efed06335674ee1c9" translate="yes" xml:space="preserve">
          <source>Any character of the string is not a digit of the specified radix, except that the first character may be a minus sign &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002d'&lt;/code&gt;) or plus sign &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt;'\u002B'&lt;/code&gt;) provided that the string is longer than length 1.</source>
          <target state="translated">문자열의 모든 문자는 지정된 기수의 숫자가 아닙니다. 단, 첫 번째 문자는 빼기 부호 &lt;code&gt;'-'&lt;/code&gt; ( &lt;code&gt;'\u002d'&lt;/code&gt; ) 또는 더하기 부호 &lt;code&gt;'+'&lt;/code&gt; ( &lt;code&gt;'\u002B'&lt;/code&gt; ) 일 수 있습니다. 길이 1보다 깁니다.</target>
        </trans-unit>
        <trans-unit id="848625b2dffb8bb084ffcf88acbefa1cfb501ea3" translate="yes" xml:space="preserve">
          <source>Any character of the string is not a digit of the specified radix, except that the first character may be a plus sign &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt;'\u002B'&lt;/code&gt;) provided that the string is longer than length 1.</source>
          <target state="translated">문자열의 길이가 1보다 긴 경우 첫 번째 문자가 더하기 부호 &lt;code&gt;'+'&lt;/code&gt; ( &lt;code&gt;'\u002B'&lt;/code&gt; ) 일 수 있다는 점을 제외하고 문자열의 모든 문자는 지정된 기수의 숫자가 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="3456fcd6928498a4f50bda1a7dd6fbf16647bfac" translate="yes" xml:space="preserve">
          <source>Any character or number (&lt;code&gt;Character.isLetter&lt;/code&gt; or &lt;code&gt;Character.isDigit&lt;/code&gt;).</source>
          <target state="translated">임의의 문자 또는 숫자 ( &lt;code&gt;Character.isLetter&lt;/code&gt; 또는 &lt;code&gt;Character.isDigit&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="db7ee7ebd2a4d171b9dfb2df75389b650d4d615e" translate="yes" xml:space="preserve">
          <source>Any characters not explicitly defined as conversions are illegal and are reserved for future extensions.</source>
          <target state="translated">변환으로 명시 적으로 정의되지 않은 모든 문자는 불법이며 향후 확장을 위해 예약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ec3cbd03ef7918daa50cbb2d1828b3a04a0f027" translate="yes" xml:space="preserve">
          <source>Any characters not explicitly defined as conversions, date/time conversion suffixes, or flags are illegal and are reserved for future extensions. Use of such a character in a format string will cause an &lt;a href=&quot;unknownformatconversionexception&quot;&gt;&lt;code&gt;UnknownFormatConversionException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;unknownformatflagsexception&quot;&gt;&lt;code&gt;UnknownFormatFlagsException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">변환, 날짜 / 시간 변환 접미사 또는 플래그로 명시 적으로 정의되지 않은 모든 문자는 유효하지 않으며 향후 확장을 위해 예약되어 있습니다. 형식 문자열에서 이러한 문자를 사용하면 &lt;a href=&quot;unknownformatconversionexception&quot;&gt; &lt;code&gt;UnknownFormatConversionException&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;unknownformatflagsexception&quot;&gt; &lt;code&gt;UnknownFormatFlagsException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8e7c8cf885c250b76bb650597023d16c94098393" translate="yes" xml:space="preserve">
          <source>Any characters not explicitly defined as date/time conversion suffixes are illegal and are reserved for future extensions.</source>
          <target state="translated">날짜 / 시간 변환 접미사로 명시 적으로 정의되지 않은 문자는 유효하지 않으며 향후 확장을 위해 예약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0fcbabc5347d639b48a80ddb7365cfb03683852" translate="yes" xml:space="preserve">
          <source>Any characters not explicitly defined as flags are illegal and are reserved for future extensions.</source>
          <target state="translated">플래그로 명시 적으로 정의되지 않은 모든 문자는 유효하지 않으며 향후 확장을 위해 예약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd779da135d1030729e05b50fff842ff80101eac" translate="yes" xml:space="preserve">
          <source>Any class name provided as a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; parameter to methods in &lt;code&gt;ClassLoader&lt;/code&gt; must be a binary name as defined by</source>
          <target state="translated">&lt;code&gt;ClassLoader&lt;/code&gt; 의 메소드에 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 매개 변수로 제공된 클래스 이름 은 다음에 의해 정의 된 2 진 이름이어야합니다.</target>
        </trans-unit>
        <trans-unit id="211c8f330f5d9f1c2416e1315a205a004d5bb5cd" translate="yes" xml:space="preserve">
          <source>Any class name provided as a &lt;code&gt;String&lt;/code&gt; parameter to methods in &lt;code&gt;ClassLoader&lt;/code&gt; must be a binary name as defined by</source>
          <target state="translated">&lt;code&gt;ClassLoader&lt;/code&gt; 의 메소드에 &lt;code&gt;String&lt;/code&gt; 매개 변수로 제공되는 모든 클래스 이름 은 다음에 정의 된대로 이진 이름이어야합니다.</target>
        </trans-unit>
        <trans-unit id="ccc1fa95d3d532e917ea9ab4015ee92f9f75f837" translate="yes" xml:space="preserve">
          <source>Any classes that the agent arranges to be defined by the bootstrap class loader to be members of its unnamed module.</source>
          <target state="translated">에이전트가 이름이 지정되지 않은 모듈의 멤버가되도록 부트 스트랩 클래스 로더에 의해 정의되도록 배열하는 모든 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="3202031da98f83117409120cb1bca1b8fa188339" translate="yes" xml:space="preserve">
          <source>Any component that can be placed into a menu should implement this interface.</source>
          <target state="translated">메뉴에 배치 할 수있는 모든 구성 요소는이 인터페이스를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="457dc10136e33a15c4e2b14753f494e9a9748f3c" translate="yes" xml:space="preserve">
          <source>Any component that can be placed into a menu should implement this interface. This interface is used by &lt;code&gt;MenuSelectionManager&lt;/code&gt; to handle selection and navigation in menu hierarchies.</source>
          <target state="translated">메뉴에 배치 할 수있는 모든 구성 요소는이 인터페이스를 구현해야합니다. 이 인터페이스는 &lt;code&gt;MenuSelectionManager&lt;/code&gt; 에서 메뉴 계층 구조에서 선택 및 탐색을 처리 하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="5aa26838f6fdb18f70bc359cbf6cb2b658203c68" translate="yes" xml:space="preserve">
          <source>Any contiguous text segments having the same attributes (the same set of attribute/value pairs) are treated as separate runs if the attributes have been given to those text segments separately.</source>
          <target state="translated">동일한 속성 (동일한 속성 / 값 쌍 세트)을 가진 연속 된 텍스트 세그먼트는 속성이 해당 텍스트 세그먼트에 개별적으로 제공된 경우 별도의 실행으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="56c62a3f42717964cceae562372d37a55e105932" translate="yes" xml:space="preserve">
          <source>Any curly braces within an unquoted pattern must be balanced. For example, &lt;code&gt;&quot;ab {0} de&quot;&lt;/code&gt; and &lt;code&gt;&quot;ab '}' de&quot;&lt;/code&gt; are valid patterns, but &lt;code&gt;&quot;ab {0'}' de&quot;&lt;/code&gt;, &lt;code&gt;&quot;ab } de&quot;&lt;/code&gt; and &lt;code&gt;&quot;''{''&quot;&lt;/code&gt; are not.</source>
          <target state="translated">따옴표가없는 패턴 내의 모든 중괄호는 균형을 유지해야합니다. 예를 들어 &lt;code&gt;&quot;ab {0} de&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;ab '}' de&quot;&lt;/code&gt; 는 유효한 패턴이지만 &lt;code&gt;&quot;ab {0'}' de&quot;&lt;/code&gt; , &lt;code&gt;&quot;ab } de&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;''{''&quot;&lt;/code&gt; 은 유효 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2294e2ac17f729acd480ef14e8d0abe7327b68c1" translate="yes" xml:space="preserve">
          <source>Any exception (except the cases described above) occurs when trying to get the value of the observed attribute.</source>
          <target state="translated">관찰 된 속성의 값을 가져 오려고 할 때 예외가 발생합니다 (위에서 설명한 경우 제외).</target>
        </trans-unit>
        <trans-unit id="7d6302a0f2db1ce6581d2d3299da1c1a422b7bc0" translate="yes" xml:space="preserve">
          <source>Any exception that occurs while deserializing an object will be caught by the ObjectInputStream and abort the reading process.</source>
          <target state="translated">객체를 직렬화 해제하는 동안 발생하는 예외는 ObjectInputStream에 의해 포착되어 읽기 프로세스를 중단합니다.</target>
        </trans-unit>
        <trans-unit id="2f1f820dee5a20c4c2c6dd0ca8b217f346302256" translate="yes" xml:space="preserve">
          <source>Any exception thrown by the &lt;code&gt;finalize&lt;/code&gt; method causes the finalization of this object to be halted, but is otherwise ignored.</source>
          <target state="translated">&lt;code&gt;finalize&lt;/code&gt; 메소드에 의해 예외가 발생 하면이 오브젝트의 종료가 중지되지만 그렇지 않으면 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="2a97358d1fb1964469bc5111d160cf25063c2721" translate="yes" xml:space="preserve">
          <source>Any exception thrown by this method will be ignored by the Java Virtual Machine.</source>
          <target state="translated">이 메소드에 의해 발생 된 예외는 Java Virtual Machine에 의해 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="bbe7d65e4ad502738d3dc8e64c4affcb97f035da" translate="yes" xml:space="preserve">
          <source>Any exceptions thrown during evaluation of either predicate are relayed to the caller; if evaluation of this predicate throws an exception, the &lt;code&gt;other&lt;/code&gt; predicate will not be evaluated.</source>
          <target state="translated">술어 평가 중에 발생한 예외는 호출자에게 전달됩니다. 이 술어의 평가에서 예외가 발생하면 &lt;code&gt;other&lt;/code&gt; 술어는 평가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c41eebe53d771812bc41581b7c863684efc0c724" translate="yes" xml:space="preserve">
          <source>Any existing binding using the same &lt;code&gt;name&lt;/code&gt; is replaced. If the new (or existing) &lt;code&gt;value&lt;/code&gt; implements the &lt;code&gt;SSLSessionBindingListener&lt;/code&gt; interface, the object represented by &lt;code&gt;value&lt;/code&gt; is notified appropriately.</source>
          <target state="translated">동일한 &lt;code&gt;name&lt;/code&gt; 사용하는 기존 바인딩 이 바뀝니다. 새로운 (또는 기존) &lt;code&gt;value&lt;/code&gt; 이 &lt;code&gt;SSLSessionBindingListener&lt;/code&gt; 인터페이스를 구현하면 &lt;code&gt;value&lt;/code&gt; 로 표시되는 오브젝트에 적절하게 알립니다.</target>
        </trans-unit>
        <trans-unit id="d71ed851abc3904241c5eefda5d469bce8ffc3ab" translate="yes" xml:space="preserve">
          <source>Any explicit PropertyEditor Class that has been registered for this property. Normally this will return &quot;null&quot;, indicating that no special editor has been registered, so the PropertyEditorManager should be used to locate a suitable PropertyEditor.</source>
          <target state="translated">이 속성에 등록 된 명시 적 PropertyEditor 클래스 일반적으로 &quot;null&quot;을 반환하여 특수 편집기가 등록되지 않았 음을 나타내므로 PropertyEditorManager를 사용하여 적합한 PropertyEditor를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="53a4eb722044afd1ba5b140da6b8e460dd218ac9" translate="yes" xml:space="preserve">
          <source>Any failure results in an &lt;code&gt;IllegalArgumentException&lt;/code&gt; being thrown; success results in the method returning silently.</source>
          <target state="translated">실패하면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생합니다. 성공하면 메소드가 자동으로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="de797d25402b48c501fdac042d0b2c62c125a0ba" translate="yes" xml:space="preserve">
          <source>Any fields that are not &lt;code&gt;ChronoField&lt;/code&gt; are processed. This is achieved using &lt;a href=&quot;../temporal/temporalfield#resolve(java.util.Map,java.time.temporal.TemporalAccessor,java.time.format.ResolverStyle)&quot;&gt;&lt;code&gt;TemporalField.resolve(Map, TemporalAccessor, ResolverStyle)&lt;/code&gt;&lt;/a&gt;. Documentation about field resolution is located in the implementation of &lt;code&gt;TemporalField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ChronoField&lt;/code&gt; 가 아닌 모든 필드 가 처리됩니다. 이는 &lt;a href=&quot;../temporal/temporalfield#resolve(java.util.Map,java.time.temporal.TemporalAccessor,java.time.format.ResolverStyle)&quot;&gt; &lt;code&gt;TemporalField.resolve(Map, TemporalAccessor, ResolverStyle)&lt;/code&gt; &lt;/a&gt; 사용하여 수행됩니다 . 필드 확인에 대한 문서는 &lt;code&gt;TemporalField&lt;/code&gt; 구현에 있습니다.</target>
        </trans-unit>
        <trans-unit id="43a1cff76d61261e59675bd5733a3761511cfbef" translate="yes" xml:space="preserve">
          <source>Any fields that are not &lt;code&gt;ChronoField&lt;/code&gt; are processed. This is achieved using &lt;a href=&quot;../temporal/temporalfield#resolve-java.util.Map-java.time.temporal.TemporalAccessor-java.time.format.ResolverStyle-&quot;&gt;&lt;code&gt;TemporalField.resolve(Map, TemporalAccessor, ResolverStyle)&lt;/code&gt;&lt;/a&gt;. Documentation about field resolution is located in the implementation of &lt;code&gt;TemporalField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ChronoField&lt;/code&gt; 가 아닌 모든 필드 가 처리됩니다. 이것은 &lt;a href=&quot;../temporal/temporalfield#resolve-java.util.Map-java.time.temporal.TemporalAccessor-java.time.format.ResolverStyle-&quot;&gt; &lt;code&gt;TemporalField.resolve(Map, TemporalAccessor, ResolverStyle)&lt;/code&gt; &lt;/a&gt; 사용하여 달성됩니다 . 필드 분석에 대한 문서는 &lt;code&gt;TemporalField&lt;/code&gt; 구현에 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a6fce68bd86d51f6441e73a14771b3fd990b2f6" translate="yes" xml:space="preserve">
          <source>Any fractional parts of this &lt;code&gt;Duration&lt;/code&gt; object beyond milliseconds will be simply ignored. For example, if this duration is &quot;P1.23456S&quot;, then 1 is added to SECONDS, 234 is added to MILLISECONDS, and the rest will be unused.</source>
          <target state="translated">밀리 초를 초과 하는이 &lt;code&gt;Duration&lt;/code&gt; 객체 의 분수 부분은 무시됩니다. 예를 들어이 기간이 &quot;P1.23456S&quot;이면 SECONDS에 1이 추가되고 MILLISECONDS에 234가 추가되고 나머지는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c1da4485ec2f07c1aee36712a3606d987c5f6aa7" translate="yes" xml:space="preserve">
          <source>Any hex character (0-9, a-f or A-F).</source>
          <target state="translated">모든 16 진수 문자 (0-9, af 또는 AF).</target>
        </trans-unit>
        <trans-unit id="45b3bab1075ac8e42b42283e784fd96fea9bed27" translate="yes" xml:space="preserve">
          <source>Any image may be transcoded (written to a different format than the one it was originally stored in) simply by performing a read operation followed by a write operation. However, loss of data may occur in this process due to format differences.</source>
          <target state="translated">단순히 읽기 작업을 수행 한 다음 쓰기 작업을 수행하여 이미지를 트랜스 코딩 (원래 저장된 이미지와 다른 형식으로 기록) 할 수 있습니다. 그러나이 프로세스에서는 형식 차이로 인해 데이터가 손실 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bb94b9736316750211463bb48dfecb25de6b533" translate="yes" xml:space="preserve">
          <source>Any letter except an uppercase letter (subtraction)</source>
          <target state="translated">대문자를 제외한 모든 문자 (빼기)</target>
        </trans-unit>
        <trans-unit id="107e845776e2ec9d398888797921f4899d010ba7" translate="yes" xml:space="preserve">
          <source>Any listener can throw a &lt;code&gt;PropertyVetoException&lt;/code&gt; to veto the update. If one of the listeners vetoes the update, this method passes a new &quot;undo&quot; &lt;code&gt;PropertyChangeEvent&lt;/code&gt; that reverts to the old value to all listeners that already confirmed this update and throws the &lt;code&gt;PropertyVetoException&lt;/code&gt; again.</source>
          <target state="translated">모든 리스너는 업데이트를 거부하기 위해 &lt;code&gt;PropertyVetoException&lt;/code&gt; 을 발생 시킬 수 있습니다 . 리스너 중 하나가 업데이트를 거부하면이 메소드는 새 &quot;실행 취소&quot; &lt;code&gt;PropertyChangeEvent&lt;/code&gt; 를 전달하여 이전 값으로이 업데이트를 이미 확인한 모든 리스너로 되돌리고 &lt;code&gt;PropertyVetoException&lt;/code&gt; 을 다시 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="c218a420e7a7272f5f9f2950987da9ef7a7468d9" translate="yes" xml:space="preserve">
          <source>Any log level definitions in the new configuration file will be applied using Logger.setLevel(), if the target Logger exists.</source>
          <target state="translated">대상 로거가 존재하는 경우 새 구성 파일의 모든 로그 수준 정의는 Logger.setLevel ()을 사용하여 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="d9989a669eff20f7f8dfd94edbd772da8a73e9b3" translate="yes" xml:space="preserve">
          <source>Any method that converts directly or implicitly from a local date-time to an instant by obtaining the offset has the potential to be complicated.</source>
          <target state="translated">오프셋을 가져 와서 로컬 날짜-시간에서 순간으로 직접 또는 암시 적으로 변환하는 방법은 복잡 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e5ee0c44d1728d11cbb240937d0fd20878a15fb" translate="yes" xml:space="preserve">
          <source>Any methods/properties/events in the &lt;code&gt;stopClass&lt;/code&gt; or in its parent classes will be ignored in the analysis.</source>
          <target state="translated">&lt;code&gt;stopClass&lt;/code&gt; 또는 상위 클래스의 모든 메소드 / 속성 / 이벤트 는 분석에서 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="65303be8bede48c7776ff3e681e443cc57e37acb" translate="yes" xml:space="preserve">
          <source>Any models subclassed from this class and used in conjunction with a text component that has a look and feel implementation that is derived from BasicTextUI may be safely updated asynchronously, because all access to the View hierarchy is serialized by BasicTextUI if the document is of type &lt;code&gt;AbstractDocument&lt;/code&gt;. The locking assumes that an independent thread will access the View hierarchy only from the DocumentListener methods, and that there will be only one event thread active at a time.</source>
          <target state="translated">문서가 &lt;code&gt;AbstractDocument&lt;/code&gt; 유형 인 경우보기 계층 구조에 대한 모든 액세스가 BasicTextUI에 의해 직렬화되기 때문에이 클래스에서 서브 클래 싱되고 BasicTextUI에서 파생 된 룩앤필 구현이있는 텍스트 구성 요소와 함께 사용되는 모든 모델은 비동기 적으로 안전하게 업데이트 될 수 있습니다. . 잠금은 독립 스레드가 DocumentListener 메서드에서만 View 계층에 액세스하고 한 번에 하나의 이벤트 스레드 만 활성화된다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="84cbca756ca2e1cdcf21b868af21ee683f1aad0f" translate="yes" xml:space="preserve">
          <source>Any module whose name is given by a 'requires' directive with the 'transitive' modifier is not observable.</source>
          <target state="translated">'transitive'수정자가있는 'requires'지시문에 의해 이름이 지정된 모듈은 관찰 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="adffc5f0c791cef37b5f4d963df7ea1ffcf34345" translate="yes" xml:space="preserve">
          <source>Any non-ASCII characters in the filter string should be represented by the appropriate Java (Unicode) characters, and not encoded as UTF-8 octets. Alternately, the &quot;backslash-hexcode&quot; notation described in RFC 2254 may be used.</source>
          <target state="translated">필터 문자열의 ASCII가 아닌 문자는 적절한 Java (유니 코드) 문자로 나타내야하며 UTF-8 8 진수로 인코딩되지 않아야합니다. 대안 적으로, RFC 2254에 기술 된 &quot;백 슬래시-헥스 코드&quot;표기법이 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="300191ca8fb6c66816fbb3f73db3afa08a125eba" translate="yes" xml:space="preserve">
          <source>Any non-negative integer smaller than or equal to the value returned by this method is guaranteed to be a valid group index for this matcher.</source>
          <target state="translated">이 메소드가 돌려주는 값 이하의 음이 아닌 정수는,이 정규 표현 엔진의 유효한 그룹 인덱스가 보증됩니다.</target>
        </trans-unit>
        <trans-unit id="1feabd1f2f378927881c93594ec631fb315af8d4" translate="yes" xml:space="preserve">
          <source>Any number of &lt;code&gt;RowSet&lt;/code&gt; objects can be added to an instance of &lt;code&gt;JoinRowSet&lt;/code&gt; provided that they can be related in an SQL &lt;code&gt;JOIN&lt;/code&gt;. By definition, the SQL &lt;code&gt;JOIN&lt;/code&gt; statement is used to combine the data contained in two or more relational database tables based upon a common attribute. The &lt;code&gt;Joinable&lt;/code&gt; interface provides the methods for establishing a common attribute, which is done by setting a</source>
          <target state="translated">SQL &lt;code&gt;JOIN&lt;/code&gt; 에서 관련 될 수 있다면 원하는 수 의 &lt;code&gt;RowSet&lt;/code&gt; 개체를 &lt;code&gt;JoinRowSet&lt;/code&gt; 인스턴스에 추가 할 수 있습니다 . 정의에 따라 SQL &lt;code&gt;JOIN&lt;/code&gt; 문은 공통 속성을 기반으로 두 개 이상의 관계형 데이터베이스 테이블에 포함 된 데이터를 결합하는 데 사용됩니다. &lt;code&gt;Joinable&lt;/code&gt; 인터페이스 설정 (a)에 의해 공통 속성을위한 방법을 제공</target>
        </trans-unit>
        <trans-unit id="9f683bf3bc4218bc8c956b780518408ebd4b0368" translate="yes" xml:space="preserve">
          <source>Any number of listeners can be added with this method. The same listener can be added more than once with the same or different values for the filter and handback. There is no special treatment of a duplicate entry. For example, if a listener is registered twice with no filter, then its &lt;code&gt;handleNotification&lt;/code&gt; method will be called twice for each notification.</source>
          <target state="translated">이 메소드를 사용하여 여러 리스너를 추가 할 수 있습니다. 필터 및 핸드백에 대해 동일하거나 다른 값으로 동일한 리스너를 두 번 이상 추가 할 수 있습니다. 중복 항목에 대한 특별한 대우는 없습니다. 예를 들어, 리스너가 필터없이 두 번 등록 된 경우 각 알림에 대해 &lt;code&gt;handleNotification&lt;/code&gt; 메소드가 두 번 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1a8596ed5a72baffa1ce8f2e0b945afa99d6ce78" translate="yes" xml:space="preserve">
          <source>Any number of these empty spaces can be replaced by using the &lt;code&gt;setCorner&lt;/code&gt; method to add a component to a particular corner. (Note: The same component cannot be added to multiple corners.) This is useful if there's some extra decoration or function you'd like to add to the scroll pane. The size of each corner component is entirely determined by the size of the headers and/or scroll bars that surround it.</source>
          <target state="translated">&lt;code&gt;setCorner&lt;/code&gt; 메서드를 사용하여 특정 모서리에 구성 요소를 추가하면 이러한 빈 공간을 원하는 만큼 바꿀 수 있습니다 . (참고 : 동일한 구성 요소를 여러 모서리에 추가 할 수 없습니다.) 스크롤 창에 추가하려는 추가 장식이나 기능이있는 경우 유용합니다. 각 모서리 구성 요소의 크기는이를 둘러싼 헤더 및 / 또는 스크롤 막대의 크기에 의해 전적으로 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="35ecb095281b8d9c13a0a2946576330e114e733d" translate="yes" xml:space="preserve">
          <source>Any object that wishes to be notified of changes to the scroll bar's value should implement &lt;code&gt;AdjustmentListener&lt;/code&gt;, an interface defined in the package &lt;code&gt;java.awt.event&lt;/code&gt;. Listeners can be added and removed dynamically by calling the methods &lt;code&gt;addAdjustmentListener&lt;/code&gt; and &lt;code&gt;removeAdjustmentListener&lt;/code&gt;.</source>
          <target state="translated">스크롤 바의 값에 대한 변경을 알리고 자하는 모든 객체는 &lt;code&gt;java.awt.event&lt;/code&gt; 패키지에 정의 된 인터페이스 인 &lt;code&gt;AdjustmentListener&lt;/code&gt; 를 구현해야합니다 . 리스너는 &lt;code&gt;addAdjustmentListener&lt;/code&gt; 및 &lt;code&gt;removeAdjustmentListener&lt;/code&gt; 메소드를 호출하여 동적으로 추가 및 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4ea5d57e1412c6f0ff23fd2f5e9d40128335d2ea" translate="yes" xml:space="preserve">
          <source>Any object with a reference to a context may examine that context's environment. Sensitive information such as clear-text passwords should not be stored there unless the implementation is known to protect it.</source>
          <target state="translated">컨텍스트를 참조하는 모든 객체는 해당 컨텍스트의 환경을 검사 할 수 있습니다. 일반 텍스트 비밀번호와 같은 민감한 정보는 구현시이를 보호하는 것으로 알려진 경우가 아니면 저장하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="96ec2551dee0560db77417e8e7ac1460fc24f71f" translate="yes" xml:space="preserve">
          <source>Any occurrence of a leading quote, an escape preceding any meta character, an escape at the end of a component, or a component separator character in an unquoted component must be preceded by an escape character when that component is being composed into a composite name string. Alternatively, to avoid adding escape characters as described, the entire component can be quoted using matching single quotes or matching double quotes. A single quote occurring within a double-quoted component is not considered a meta character (and need not be escaped), and vice versa.</source>
          <target state="translated">선행 인용 부호, 메타 문자 앞의 이스케이프, 구성 요소 끝의 이스케이프 또는 인용되지 않은 구성 요소의 구성 요소 구분 문자 앞에는 해당 구성 요소가 복합 이름 문자열로 구성 될 때 이스케이프 문자가 와야합니다. . 또는 설명대로 이스케이프 문자를 추가하지 않으려면 일치하는 작은 따옴표 또는 큰 따옴표를 사용하여 전체 구성 요소를 따옴표로 묶을 수 있습니다. 큰 따옴표로 묶인 구성 요소 내에서 발생하는 작은 따옴표는 메타 문자로 간주되지 않으며 이스케이프 할 필요가 없으며 그 반대의 경우도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="902a5b9291454be0816f2b27af759d61562ef082" translate="yes" xml:space="preserve">
          <source>Any of the family of CMY color spaces.</source>
          <target state="translated">모든 CMY 색상 공간 제품군.</target>
        </trans-unit>
        <trans-unit id="4ed3957eb77019c336010a24839d87dce0fc436c" translate="yes" xml:space="preserve">
          <source>Any of the family of CMYK color spaces.</source>
          <target state="translated">모든 CMYK 색상 공간 계열.</target>
        </trans-unit>
        <trans-unit id="2bcfb96fe15db70dc2f00d12ee59a5a4cfc93900" translate="yes" xml:space="preserve">
          <source>Any of the family of GRAY color spaces.</source>
          <target state="translated">GREY 색상 공간 계열입니다.</target>
        </trans-unit>
        <trans-unit id="a1350067b86c775d78d8df90046d8f8ea1b61350" translate="yes" xml:space="preserve">
          <source>Any of the family of HLS color spaces.</source>
          <target state="translated">모든 HLS 색상 공간 제품군.</target>
        </trans-unit>
        <trans-unit id="4797934a10861288a9dce9cdc3ed2a362897c676" translate="yes" xml:space="preserve">
          <source>Any of the family of HSV color spaces.</source>
          <target state="translated">모든 HSV 색상 공간 제품군.</target>
        </trans-unit>
        <trans-unit id="04223bf51436215d39bad1371bb114595139d08b" translate="yes" xml:space="preserve">
          <source>Any of the family of Lab color spaces.</source>
          <target state="translated">Lab 색상 공간 제품군 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="4300cf5941d1d7b7ab1b6329452cad15d2c9f6a7" translate="yes" xml:space="preserve">
          <source>Any of the family of Luv color spaces.</source>
          <target state="translated">모든 Luv 색상 공간 제품군.</target>
        </trans-unit>
        <trans-unit id="0662aab687b31ed678bbb4f4793ea76052d61d91" translate="yes" xml:space="preserve">
          <source>Any of the family of RGB color spaces.</source>
          <target state="translated">모든 RGB 색상 공간 제품군.</target>
        </trans-unit>
        <trans-unit id="4bf5ac24a08a1641006d014c25e61178a62bb8d5" translate="yes" xml:space="preserve">
          <source>Any of the family of XYZ color spaces.</source>
          <target state="translated">모든 XYZ 색상 공간 제품군.</target>
        </trans-unit>
        <trans-unit id="0efb017a2e1aab6d440a6457c7fa1fb9041c1752" translate="yes" xml:space="preserve">
          <source>Any of the family of YCbCr color spaces.</source>
          <target state="translated">모든 YCbCr 색상 공간 제품군.</target>
        </trans-unit>
        <trans-unit id="3061bd239a03f893ca747e312863fe4a51c7778f" translate="yes" xml:space="preserve">
          <source>Any of the family of Yxy color spaces.</source>
          <target state="translated">Yxy 색상 공간 계열입니다.</target>
        </trans-unit>
        <trans-unit id="cf65ceb97fa17d8693f3c92ccbda2a56f1101545" translate="yes" xml:space="preserve">
          <source>Any option can be disabled using this method with a Boolean(false):</source>
          <target state="translated">이 방법으로 부울 (false)을 사용하여 모든 옵션을 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d740644a3c7d0e15d0f3d25377b2edf4dd82c1d" translate="yes" xml:space="preserve">
          <source>Any option can be disabled using this method with a Boolean.FALSE:</source>
          <target state="translated">이 메서드를 Boolean.FALSE와 함께 사용하면 모든 옵션을 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2c98461f812fd8834a6e7db40fd417885f3e4fe" translate="yes" xml:space="preserve">
          <source>Any or all of these may be provided, depending on the values of the &lt;var&gt;http://xml.org/sax/features/namespaces&lt;/var&gt; and the &lt;var&gt;http://xml.org/sax/features/namespace-prefixes&lt;/var&gt; properties:</source>
          <target state="translated">&lt;var&gt;http://xml.org/sax/features/namespaces&lt;/var&gt; 및 &lt;var&gt;http://xml.org/sax/features/namespace-prefixes&lt;/var&gt; 속성 의 값에 따라 이들 중 일부 또는 전부가 제공 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="83222d6a6a8be24824517f515b053860a796eb09" translate="yes" xml:space="preserve">
          <source>Any other attribute settings for the characters in the specified range are cleared.</source>
          <target state="translated">지정된 범위의 문자에 대한 다른 속성 설정이 지워집니다.</target>
        </trans-unit>
        <trans-unit id="9efddb73bbf24fe55be9d68529e3d46d5f711dac" translate="yes" xml:space="preserve">
          <source>Any other attribute settings for the specified character are cleared.</source>
          <target state="translated">지정된 문자에 대한 다른 속성 설정이 지워집니다.</target>
        </trans-unit>
        <trans-unit id="1f78004cd873ef1a410b3680ee50209be7ffeeb6" translate="yes" xml:space="preserve">
          <source>Any other kind.</source>
          <target state="translated">다른 종류.</target>
        </trans-unit>
        <trans-unit id="d9c86e4eb6f621b42958b1a843ad72185d41b2ef" translate="yes" xml:space="preserve">
          <source>Any other type</source>
          <target state="translated">다른 유형</target>
        </trans-unit>
        <trans-unit id="f72c8a69ec9a5cc711562afe34cb7c379b769815" translate="yes" xml:space="preserve">
          <source>Any other value for the &lt;code&gt;scrollbars&lt;/code&gt; argument is invalid and will result in this text area being created with scrollbar visibility equal to the default value of &lt;a href=&quot;#SCROLLBARS_BOTH&quot;&gt;&lt;code&gt;SCROLLBARS_BOTH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;scrollbars&lt;/code&gt; 인수에 대한 다른 값 은 유효하지 않으며이 텍스트 영역이 스크롤바 가시성을 기본 값인 &lt;a href=&quot;#SCROLLBARS_BOTH&quot;&gt; &lt;code&gt;SCROLLBARS_BOTH&lt;/code&gt; &lt;/a&gt; 와 동일하게 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="851fbda97d1409c17bdb24e7ea6918c7d4aa30c9" translate="yes" xml:space="preserve">
          <source>Any other value of scope defined in the default &lt;code&gt;ScriptContext&lt;/code&gt; of the &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="translated">기본에 정의 된 범위의 다른 값 &lt;code&gt;ScriptContext&lt;/code&gt; 의 &lt;code&gt;ScriptEngine&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="427b697236ab7d686bcc7fd3ee6905d90b435ae0" translate="yes" xml:space="preserve">
          <source>Any other views in the &lt;code&gt;JRootPane&lt;/code&gt; view hierarchy are ignored.</source>
          <target state="translated">&lt;code&gt;JRootPane&lt;/code&gt; 뷰 계층 의 다른 뷰 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="dedeb302c3a6428810deb8991543f254ecef1760" translate="yes" xml:space="preserve">
          <source>Any out of range field values are either normalized in lenient mode or detected as an invalid value in non-lenient mode.</source>
          <target state="translated">범위를 벗어난 필드 값은 무자비 모드에서 정규화되거나 무자비 모드에서 유효하지 않은 값으로 감지됩니다.</target>
        </trans-unit>
        <trans-unit id="041c0ffef05e50b7d6de996b906938b626d2c58a" translate="yes" xml:space="preserve">
          <source>Any outstanding asynchronous operations upon this channel will complete with the exception &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;. After a channel is closed, further attempts to initiate asynchronous I/O operations complete immediately with cause &lt;a href=&quot;closedchannelexception&quot;&gt;&lt;code&gt;ClosedChannelException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 채널에서 미해결 비동기 작업은 &lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt; 예외로 완료됩니다 . 채널이 닫힌 후 &lt;a href=&quot;closedchannelexception&quot;&gt; &lt;code&gt;ClosedChannelException&lt;/code&gt; &lt;/a&gt; 을 발생 시키면서 즉시 비동기 I / O 작업을 시작하려고 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="578d72d969f2ba7722261a1e5499a4c82b000dec" translate="yes" xml:space="preserve">
          <source>Any package name provided as a &lt;code&gt;String&lt;/code&gt; parameter to methods in &lt;code&gt;ClassLoader&lt;/code&gt; must be either the empty string (denoting an unnamed package) or a fully qualified name as defined by</source>
          <target state="translated">&lt;code&gt;ClassLoader&lt;/code&gt; 의 메서드에 &lt;code&gt;String&lt;/code&gt; 매개 변수로 제공되는 모든 패키지 이름 은 빈 문자열 (이름이 지정되지 않은 패키지를 나타냄)이거나 다음에 의해 정의 된 정규화 된 이름이어야합니다.</target>
        </trans-unit>
        <trans-unit id="53c63060d7bd1b7bfcd91dd7d32915aac6b137c5" translate="yes" xml:space="preserve">
          <source>Any parameter that is not set (or is set to &lt;code&gt;null&lt;/code&gt;) will be set to the default value for that parameter.</source>
          <target state="translated">설정되지 않은 (또는 &lt;code&gt;null&lt;/code&gt; 로 설정된) 모든 매개 변수는 해당 매개 변수의 기본값으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="2a775b13110119846aa06fa7be3ccd97e1c6e616" translate="yes" xml:space="preserve">
          <source>Any parameter that is not set (or is set to &lt;code&gt;null&lt;/code&gt;) will be set to the default value for that parameter. The default value for the &lt;code&gt;date&lt;/code&gt; parameter is &lt;code&gt;null&lt;/code&gt;, which indicates the current time when the path is validated. The default for the remaining parameters is the least constrained.</source>
          <target state="translated">설정되지 않은 (또는 &lt;code&gt;null&lt;/code&gt; 로 설정된) 모든 매개 변수는 해당 매개 변수의 기본값으로 설정됩니다. &lt;code&gt;date&lt;/code&gt; 매개 변수 의 기본값 은 &lt;code&gt;null&lt;/code&gt; 이며 경로의 유효성이 검사되는 현재 시간을 나타냅니다. 나머지 매개 변수의 기본값은 최소 제한입니다.</target>
        </trans-unit>
        <trans-unit id="db628c194bd82b19e213d28412a78c7e9fed989e" translate="yes" xml:space="preserve">
          <source>Any registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt; objects will be notified by calling their &lt;code&gt;imageStarted&lt;/code&gt; method, followed by calls to their &lt;code&gt;imageProgress&lt;/code&gt; method as the read progresses. Finally their &lt;code&gt;imageComplete&lt;/code&gt; method will be called. &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; objects may be updated at other times during the read as pixels are decoded. Finally, &lt;code&gt;IIOReadWarningListener&lt;/code&gt; objects will receive notification of any non-fatal warnings that occur during decoding.</source>
          <target state="translated">등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 객체는 &lt;code&gt;imageStarted&lt;/code&gt; 메소드를 호출 한 다음 읽기가 진행됨 에 따라 &lt;code&gt;imageProgress&lt;/code&gt; 메소드를 호출하여 알림을받습니다 . 마지막으로 그들의 &lt;code&gt;imageComplete&lt;/code&gt; 메소드가 호출됩니다. 픽셀이 디코딩 될 때 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 객체는 판독 동안 다른 시간에 업데이트 될 수있다. 드디어, &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 객체는 디코딩 중에 발생하는 치명적이지 않은 경고에 대한 알림을받습니다.</target>
        </trans-unit>
        <trans-unit id="62102b698a71e4c9c4abbbe7b44786ce0be217d2" translate="yes" xml:space="preserve">
          <source>Any registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt; objects will be notified by calling their &lt;code&gt;sequenceStarted&lt;/code&gt; method once. Then, for each image decoded, there will be a call to &lt;code&gt;imageStarted&lt;/code&gt;, followed by calls to &lt;code&gt;imageProgress&lt;/code&gt; as the read progresses, and finally to &lt;code&gt;imageComplete&lt;/code&gt;. The &lt;code&gt;sequenceComplete&lt;/code&gt; method will be called after the last image has been decoded. &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; objects may be updated at other times during the read as pixels are decoded. Finally, &lt;code&gt;IIOReadWarningListener&lt;/code&gt; objects will receive notification of any non-fatal warnings that occur during decoding.</source>
          <target state="translated">등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 객체는 &lt;code&gt;sequenceStarted&lt;/code&gt; 메소드를 한 번 호출하여 알립니다 . 그런 다음 디코딩 된 각 이미지에 대해 &lt;code&gt;imageStarted&lt;/code&gt; 에 대한 호출이 있고 , 읽기가 진행됨에 따라 &lt;code&gt;imageProgress&lt;/code&gt; 에 대한 호출이 있으며 마지막으로 &lt;code&gt;imageComplete&lt;/code&gt; 가 호출됩니다 . &lt;code&gt;sequenceComplete&lt;/code&gt; 의 마지막 이미지가 디코딩 된 후 메서드가 호출됩니다. 픽셀이 디코딩 될 때 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 객체는 판독 동안 다른 시간에 업데이트 될 수있다. 드디어, &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 객체는 디코딩 중에 발생하는 치명적이지 않은 경고에 대한 알림을받습니다.</target>
        </trans-unit>
        <trans-unit id="ca39857de74e7ac39381439fd87061deb726042b" translate="yes" xml:space="preserve">
          <source>Any registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt; objects will be notified by calling their &lt;code&gt;thumbnailStarted&lt;/code&gt;, &lt;code&gt;thumbnailProgress&lt;/code&gt;, and &lt;code&gt;thumbnailComplete&lt;/code&gt; methods.</source>
          <target state="translated">등록 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 객체는 &lt;code&gt;thumbnailStarted&lt;/code&gt; , &lt;code&gt;thumbnailProgress&lt;/code&gt; 및 &lt;code&gt;thumbnailComplete&lt;/code&gt; 메소드 합니다.</target>
        </trans-unit>
        <trans-unit id="4bf5fadfcf39f0c4fec28894e22751ad7ab67a31" translate="yes" xml:space="preserve">
          <source>Any registered &lt;code&gt;readUpdateListener&lt;/code&gt;s are ignored, as there is no &lt;code&gt;BufferedImage&lt;/code&gt;, but all other listeners are called exactly as they are for the &lt;a href=&quot;#read(int)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;BufferedImage&lt;/code&gt; 가 없기 때문에 등록 된 &lt;code&gt;readUpdateListener&lt;/code&gt; 는 무시 되지만 다른 모든 리스너는 &lt;a href=&quot;#read(int)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 메소드 와 동일하게 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="7f95041bb4c646e50368fd20b19a88ebfd0d55c8" translate="yes" xml:space="preserve">
          <source>Any registered &lt;code&gt;readUpdateListener&lt;/code&gt;s are ignored, as there is no &lt;code&gt;BufferedImage&lt;/code&gt;, but all other listeners are called exactly as they are for the &lt;a href=&quot;imagereader#read-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;BufferedImage&lt;/code&gt; 가 없기 때문에 등록 된 &lt;code&gt;readUpdateListener&lt;/code&gt; 는 무시됩니다 만, 다른 모든 청취자는 &lt;a href=&quot;imagereader#read-int-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 메소드 와 동일하게 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="c78248efbf9c981993e62077641980159251de68" translate="yes" xml:space="preserve">
          <source>Any remaining milliseconds after determining the day, hour, minute and second are discarded.</source>
          <target state="translated">일,시, 분 및 초를 결정한 후 남은 밀리 초는 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="81134606234ad6f705d457d6b3f396fa0608210c" translate="yes" xml:space="preserve">
          <source>Any remaining milliseconds after determining the year and month are discarded.</source>
          <target state="translated">연도와 월을 결정한 후 남은 밀리 초는 버려집니다.</target>
        </trans-unit>
        <trans-unit id="52628168a10f8f650801369636aafa55a88fc3b6" translate="yes" xml:space="preserve">
          <source>Any remaining types &lt;code&gt;BQ+1..BX&lt;/code&gt; (if &lt;code&gt;Q&amp;lt;X&lt;/code&gt;) will determine the resulting loop handle's parameter types &lt;code&gt;(A...)&lt;/code&gt;.</source>
          <target state="translated">나머지 유형 &lt;code&gt;BQ+1..BX&lt;/code&gt; ( &lt;code&gt;Q&amp;lt;X&lt;/code&gt; )는 결과 루프 핸들의 매개 변수 유형 &lt;code&gt;(A...)&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="87d13eda094f0ad03e413e4b5c65a1a29a6cef8b" translate="yes" xml:space="preserve">
          <source>Any remaining unresolved fields are cross-checked against any date and/or time that was resolved. Thus, an earlier stage would resolve (year + month + day-of-month) to a date, and this stage would check that day-of-week was valid for the date.</source>
          <target state="translated">남아있는 해결되지 않은 필드는 해결 된 날짜 및 / 또는 시간과 비교하여 교차 점검됩니다. 따라서 이전 단계는 (연도 + 월 + 일)를 날짜로 해결하고이 단계는 날짜가 해당 날짜에 유효했는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="12b02dc3b0f90a23f032388475be0cd10ca0d871" translate="yes" xml:space="preserve">
          <source>Any root module is not observable.</source>
          <target state="translated">어떤 루트 모듈도 관찰 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="dfd48c26a3b03a78e7860a060e2b4a38c377670f" translate="yes" xml:space="preserve">
          <source>Any sequence of letters not specified above, unrecognized letter or reserved character will throw an exception. Future versions may add to the set of patterns. It is recommended to use single quotes around all characters that you want to output directly to ensure that future changes do not break your application.</source>
          <target state="translated">위에 지정되지 않은 문자, 인식 할 수없는 문자 또는 예약 문자는 예외를 발생시킵니다. 향후 버전은 패턴 세트에 추가 될 수 있습니다. 향후 변경으로 인해 응용 프로그램이 중단되지 않도록하려면 직접 출력하려는 ​​모든 문자에 작은 따옴표를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6c895026ae591f1f0b12597467a4242ab6e35c3c" translate="yes" xml:space="preserve">
          <source>Any standard &lt;code&gt;RowSet&lt;/code&gt; implementation &lt;b&gt;may&lt;/b&gt; implement the &lt;code&gt;Joinable&lt;/code&gt; interface in order to be added to a &lt;code&gt;JoinRowSet&lt;/code&gt; object. Implementing this interface gives a &lt;code&gt;RowSet&lt;/code&gt; object the ability to use &lt;code&gt;Joinable&lt;/code&gt; methods, which set, retrieve, and get information about match columns. An application may add a &lt;code&gt;RowSet&lt;/code&gt; object that has not implemented the &lt;code&gt;Joinable&lt;/code&gt; interface to a &lt;code&gt;JoinRowSet&lt;/code&gt; object, but to do so it must use one of the &lt;code&gt;JoinRowSet.addRowSet&lt;/code&gt; methods that takes both a &lt;code&gt;RowSet&lt;/code&gt; object and a match column or an array of &lt;code&gt;RowSet&lt;/code&gt; objects and an array of match columns.</source>
          <target state="translated">표준 &lt;code&gt;RowSet&lt;/code&gt; 구현 &lt;b&gt;할 수있다&lt;/b&gt; 구현 &lt;code&gt;Joinable&lt;/code&gt; 위해 인터페이스는에 추가 할 &lt;code&gt;JoinRowSet&lt;/code&gt; 객체입니다. 이 인터페이스를 구현하면 &lt;code&gt;RowSet&lt;/code&gt; 개체에 &lt;code&gt;Joinable&lt;/code&gt; 메서드 를 사용하여 일치 열에 대한 정보를 설정, 검색 및 가져 오는 기능이 제공됩니다. 응용 프로그램은 &lt;code&gt;Joinable&lt;/code&gt; 인터페이스를 구현하지 않은 &lt;code&gt;RowSet&lt;/code&gt; 개체를 &lt;code&gt;JoinRowSet&lt;/code&gt; 개체에 추가 할 수 있지만 그렇게하려면 &lt;code&gt;RowSet&lt;/code&gt; 개체와 일치 열 또는 &lt;code&gt;RowSet&lt;/code&gt; 배열을 모두 사용하는 &lt;code&gt;JoinRowSet.addRowSet&lt;/code&gt; 메서드 중 하나를 사용해야합니다. 개체 및 일치 열의 배열.</target>
        </trans-unit>
        <trans-unit id="1e4b548423b731dfdca8d68f94ebd1cb5cfb2e28" translate="yes" xml:space="preserve">
          <source>Any string that conforms to these two rules is a valid path name.</source>
          <target state="translated">이 두 규칙을 따르는 모든 문자열은 유효한 경로 이름입니다.</target>
        </trans-unit>
        <trans-unit id="2ca901414688669c24d183f78f2686680a0b8ab7" translate="yes" xml:space="preserve">
          <source>Any thread currently blocked in &lt;a href=&quot;#receive(java.net.DatagramPacket)&quot;&gt;&lt;code&gt;receive(java.net.DatagramPacket)&lt;/code&gt;&lt;/a&gt; upon this socket will throw a &lt;a href=&quot;socketexception&quot;&gt;&lt;code&gt;SocketException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 소켓의 &lt;a href=&quot;#receive(java.net.DatagramPacket)&quot;&gt; &lt;code&gt;receive(java.net.DatagramPacket)&lt;/code&gt; &lt;/a&gt; 에서 현재 차단 된 모든 스레드 는 &lt;a href=&quot;socketexception&quot;&gt; &lt;code&gt;SocketException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="9387c14f4843584ad117916bb7bbe50f5a1ee787" translate="yes" xml:space="preserve">
          <source>Any thread currently blocked in &lt;a href=&quot;datagramsocket#receive-java.net.DatagramPacket-&quot;&gt;&lt;code&gt;receive(java.net.DatagramPacket)&lt;/code&gt;&lt;/a&gt; upon this socket will throw a &lt;a href=&quot;socketexception&quot;&gt;&lt;code&gt;SocketException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 소켓에 대해 &lt;a href=&quot;datagramsocket#receive-java.net.DatagramPacket-&quot;&gt; &lt;code&gt;receive(java.net.DatagramPacket)&lt;/code&gt; &lt;/a&gt; 에서 현재 차단 된 스레드 는 &lt;a href=&quot;socketexception&quot;&gt; &lt;code&gt;SocketException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="c2cd774b4060d3bb9dddf39a9b8028c51a677bb5" translate="yes" xml:space="preserve">
          <source>Any thread currently blocked in an I/O operation upon this channel will receive an &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 채널에서 I / O 작업으로 현재 차단 된 스레드는 &lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt; 을받습니다 .</target>
        </trans-unit>
        <trans-unit id="72c0c2f205092d5072a2a22f3791eb0db65dc7f2" translate="yes" xml:space="preserve">
          <source>Any thread currently blocked in an I/O operation upon this socket will throw a &lt;a href=&quot;socketexception&quot;&gt;&lt;code&gt;SocketException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 소켓에서 I / O 작업으로 현재 차단 된 스레드는 &lt;a href=&quot;socketexception&quot;&gt; &lt;code&gt;SocketException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="c7def5ed765c4cd8fd2045b0b963a1dbe08909c9" translate="yes" xml:space="preserve">
          <source>Any top-level window can be marked not to be blocked by modal dialogs.</source>
          <target state="translated">모든 최상위 창은 모달 대화 상자에 의해 차단되지 않도록 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4e59ce04c6dd520c15b4e9089752398b20b00d3" translate="yes" xml:space="preserve">
          <source>Any top-level window can be marked not to be blocked by modal dialogs. This is called &quot;modal exclusion&quot;. This enum specifies the possible modal exclusion types.</source>
          <target state="translated">모든 최상위 창은 모달 대화 상자에 의해 차단되지 않도록 표시 할 수 있습니다. 이를 &quot;모달 배제&quot;라고합니다. 이 열거 형은 가능한 모달 제외 유형을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="84f338b5f3f8f35b0812890eee7f76af4ffbf9e2" translate="yes" xml:space="preserve">
          <source>Any type that represents any of the 5 other types listed below.</source>
          <target state="translated">아래 나열된 5 개의 다른 유형 중 하나를 나타내는 모든 유형.</target>
        </trans-unit>
        <trans-unit id="2abca19251a65ad85e46e581a9e108cbfa3f160a" translate="yes" xml:space="preserve">
          <source>Any type that represents any of the 5 other types listed below. Maps to &lt;a href=&quot;xpathevaluationresult&quot;&gt;&lt;code&gt;XPathEvaluationResult&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">아래 나열된 5 개의 다른 유형 중 하나를 나타내는 모든 유형. 에지도 &lt;a href=&quot;xpathevaluationresult&quot;&gt; &lt;code&gt;XPathEvaluationResult&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c7c34381609cdca760a9db8c60f4a96439aea3e" translate="yes" xml:space="preserve">
          <source>Any uncancelled keys still associated with this selector are invalidated, their channels are deregistered, and any other resources associated with this selector are released.</source>
          <target state="translated">여전히이 선택기와 연관된 취소되지 않은 키는 무효화되고 해당 채널이 등록 취소되며이 선택기와 연관된 기타 자원이 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="628ebfd2922c6acc3de30c04be5a4bf2c671e263" translate="yes" xml:space="preserve">
          <source>Any unmatched quote is treated as closed at the end of the given pattern. For example, pattern string &lt;code&gt;&quot;'{0}&quot;&lt;/code&gt; is treated as pattern &lt;code&gt;&quot;'{0}'&quot;&lt;/code&gt;.</source>
          <target state="translated">일치하지 않는 인용 부호는 주어진 패턴의 끝에서 닫힌 것으로 처리됩니다. 예를 들어, 패턴 문자열 &lt;code&gt;&quot;'{0}&quot;&lt;/code&gt; 은 패턴 &lt;code&gt;&quot;'{0}'&quot;&lt;/code&gt; 으로 처리 됩니다.</target>
        </trans-unit>
        <trans-unit id="dd27d9a68564e0eae294e240b071760491439b1b" translate="yes" xml:space="preserve">
          <source>Any unrecognized letter is an error. Any non-letter character, other than '[', ']', '{', '}', '#' and the single quote will be output directly. Despite this, it is recommended to use single quotes around all characters that you want to output directly to ensure that future changes do not break your application.</source>
          <target state="translated">인식 할 수없는 문자는 오류입니다. '[', ']', '{', '}', '#'이외의 문자가 아닌 문자와 작은 따옴표는 직접 출력됩니다. 그럼에도 불구하고 향후 변경으로 인해 응용 프로그램이 중단되지 않도록하려면 직접 출력하려는 ​​모든 문자에 작은 따옴표를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="56e1bb417b1be069d45397dd523654de5fec992f" translate="yes" xml:space="preserve">
          <source>Any unsupported key read from the keytab is ignored and not included in the result.</source>
          <target state="translated">키탭에서 읽은 지원되지 않는 키는 무시되며 결과에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2d33e9c5d74b29c3232e3f8df6855114a3d05c39" translate="yes" xml:space="preserve">
          <source>Any valid number, uses &lt;code&gt;Character.isDigit&lt;/code&gt;.</source>
          <target state="translated">모든 유효한 숫자는 &lt;code&gt;Character.isDigit&lt;/code&gt; 을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="0598d0c2ee3f195ed041631bfb7386ddfa3d1f2a" translate="yes" xml:space="preserve">
          <source>Any word that matches &lt;code&gt;EST, CST, MST&lt;/code&gt;, or &lt;code&gt;PST&lt;/code&gt;, ignoring case, is recognized as referring to the time zone in North America that is five, six, seven, or eight hours west of Greenwich, respectively. Any word that matches &lt;code&gt;EDT, CDT,
     MDT&lt;/code&gt;, or &lt;code&gt;PDT&lt;/code&gt;, ignoring case, is recognized as referring to the same time zone, respectively, during daylight saving time.</source>
          <target state="translated">대소 문자를 무시하고 &lt;code&gt;EST, CST, MST&lt;/code&gt; 또는 &lt;code&gt;PST&lt;/code&gt; 와 일치하는 단어 는 각각 그리니치에서 서쪽으로 5 시간, 6 시간, 7 시간 또는 8 시간 인 북미 시간대를 나타내는 것으로 인식됩니다. 대소 문자를 무시하고 &lt;code&gt;EDT, CDT, MDT&lt;/code&gt; 또는 &lt;code&gt;PDT&lt;/code&gt; 와 일치하는 단어는 일광 절약 시간 동안 각각 동일한 시간대를 나타내는 것으로 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="7030d1cd7acca10773e929a59ec13d7ff20286b7" translate="yes" xml:space="preserve">
          <source>Any word that matches &lt;code&gt;GMT, UT&lt;/code&gt;, or &lt;code&gt;UTC&lt;/code&gt;, ignoring case, is treated as referring to UTC.</source>
          <target state="translated">대소 문자를 무시하고 &lt;code&gt;GMT, UT&lt;/code&gt; 또는 &lt;code&gt;UTC&lt;/code&gt; 와 일치하는 단어는 UTC 를 나타내는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="2123a2eaebb51f29f226114e59a7745c38e91e04" translate="yes" xml:space="preserve">
          <source>Any word that matches any prefix of &lt;code&gt;SUNDAY, MONDAY, TUESDAY,
     WEDNESDAY, THURSDAY, FRIDAY&lt;/code&gt;, or &lt;code&gt;SATURDAY&lt;/code&gt;, ignoring case, is ignored. For example, &lt;code&gt;sat, Friday, TUE&lt;/code&gt;, and &lt;code&gt;Thurs&lt;/code&gt; are ignored.</source>
          <target state="translated">대소 문자를 무시하고 &lt;code&gt;SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY&lt;/code&gt; 또는 &lt;code&gt;SATURDAY&lt;/code&gt; 접두어와 일치하는 단어 는 무시됩니다. 예를 들어 &lt;code&gt;sat, Friday, TUE&lt;/code&gt; 및 &lt;code&gt;Thurs&lt;/code&gt; 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c6ba3dc148f57db8be95e4c2fa2f1edfb4a7a581" translate="yes" xml:space="preserve">
          <source>Anything else results in an invalid edit</source>
          <target state="translated">그 밖의 모든 항목은 잘못된 편집 결과를 초래합니다.</target>
        </trans-unit>
        <trans-unit id="a6bec8012819af464e982a2be00327bdd102a7e2" translate="yes" xml:space="preserve">
          <source>Anything.</source>
          <target state="translated">Anything.</target>
        </trans-unit>
        <trans-unit id="616df408d0e2b2d9480d2eee4a38d314edf1739e" translate="yes" xml:space="preserve">
          <source>Apart from the checking of type descriptors, a method handle's capability to call its underlying method is unrestricted. If a method handle is formed on a non-public method by a class that has access to that method, the resulting handle can be used in any place by any caller who receives a reference to it.</source>
          <target state="translated">형식 설명자를 확인하는 것 외에도 기본 메서드를 호출하는 메서드 핸들의 기능에는 제한이 없습니다. 메소드 핸들이 해당 메소드에 액세스 할 수있는 클래스에 의해 비 공용 메소드에서 형성되는 경우, 결과 핸들은 참조를 수신 한 모든 호출자가 어디서나 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f3c987fd16951ed9ef076cbe389086af81b0a21" translate="yes" xml:space="preserve">
          <source>Apart from type descriptor checks, a VarHandles's capability to access it's variables is unrestricted. If a VarHandle is formed on a non-public variable by a class that has access to that variable, the resulting VarHandle can be used in any place by any caller who receives a reference to it.</source>
          <target state="translated">형식 설명자 검사와는 별도로 변수에 액세스하는 VarHandles의 기능은 제한되지 않습니다. 해당 변수에 대한 액세스 권한이있는 클래스에 의해 public이 아닌 변수에 VarHandle이 형성되는 경우 결과 VarHandle은 해당 변수에 대한 참조를받는 모든 호출자가 어느 곳에서나 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd7fb665ed2af8b57b3122b97cdf88d89ff3e161" translate="yes" xml:space="preserve">
          <source>Apart from type descriptor checks, a method handle's capability to call its underlying method is unrestricted. If a method handle is formed on a non-public method by a class that has access to that method, the resulting handle can be used in any place by any caller who receives a reference to it.</source>
          <target state="translated">형식 설명자 검사와 별도로 기본 메서드를 호출하는 메서드 핸들의 기능은 제한되지 않습니다. 메서드 핸들이 해당 메서드에 대한 액세스 권한이있는 클래스에 의해 public이 아닌 메서드에 형성되는 경우 결과 핸들은 해당 메서드에 대한 참조를받는 모든 호출자가 어느 위치에서나 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa35f1d1815459e2c58aacf0ac9c9edc56fedf53" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry</source>
          <target state="translated">AppConfigurationEntry</target>
        </trans-unit>
        <trans-unit id="6de33db1728597244fb7ba55a556b20fae04eacd" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry.LoginModuleControlFlag</source>
          <target state="translated">AppConfigurationEntry.LoginModuleControlFlag</target>
        </trans-unit>
        <trans-unit id="b7a0952a5172ce435de0ecaf57798e494da965f9" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry.LoginModuleControlFlag.toString()</source>
          <target state="translated">AppConfigurationEntry.LoginModuleControlFlag.toString()</target>
        </trans-unit>
        <trans-unit id="69adaf2fe191bb0a039f8cac2bf5f99b1257d28e" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry.getControlFlag()</source>
          <target state="translated">AppConfigurationEntry.getControlFlag()</target>
        </trans-unit>
        <trans-unit id="2e4d30a8a676f100270662efd541b4f9aa55b24e" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry.getLoginModuleName()</source>
          <target state="translated">AppConfigurationEntry.getLoginModuleName()</target>
        </trans-unit>
        <trans-unit id="80a74f497ea859c38bc9ed5e62395b51d8a16d44" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry.getOptions()</source>
          <target state="translated">AppConfigurationEntry.getOptions()</target>
        </trans-unit>
        <trans-unit id="1133f5a7a91a8a4e0dfc31a94b2fdb75169ce247" translate="yes" xml:space="preserve">
          <source>AppEvent</source>
          <target state="translated">AppEvent</target>
        </trans-unit>
        <trans-unit id="8d2f5a21fa25a307765850c84c799a156ef0f688" translate="yes" xml:space="preserve">
          <source>AppEvents are sent to listeners and handlers installed on the &lt;a href=&quot;../desktop&quot;&gt;&lt;code&gt;Desktop&lt;/code&gt;&lt;/a&gt; instance of the current desktop context.</source>
          <target state="translated">AppEvents는 현재 데스크톱 컨텍스트 의 &lt;a href=&quot;../desktop&quot;&gt; &lt;code&gt;Desktop&lt;/code&gt; &lt;/a&gt; 인스턴스에 설치된 리스너 및 핸들러로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="4ba03e6683015e3237b02b1527fedd2970069e51" translate="yes" xml:space="preserve">
          <source>AppForegroundEvent</source>
          <target state="translated">AppForegroundEvent</target>
        </trans-unit>
        <trans-unit id="1f2a1b22b3bb066f731ceb7c2c097b71fbd78bbb" translate="yes" xml:space="preserve">
          <source>AppForegroundListener</source>
          <target state="translated">AppForegroundListener</target>
        </trans-unit>
        <trans-unit id="c7c18235c3879736eff8ae19132e21f3fe444b3b" translate="yes" xml:space="preserve">
          <source>AppHiddenEvent</source>
          <target state="translated">AppHiddenEvent</target>
        </trans-unit>
        <trans-unit id="35ba4dc6d44eaee63282dde6a500ab644e2bd78c" translate="yes" xml:space="preserve">
          <source>AppHiddenListener</source>
          <target state="translated">AppHiddenListener</target>
        </trans-unit>
        <trans-unit id="8b88900088340255880002f17872ca6a6bf2b344" translate="yes" xml:space="preserve">
          <source>AppReopenedEvent</source>
          <target state="translated">AppReopenedEvent</target>
        </trans-unit>
        <trans-unit id="f39034bf48af4a2a7e0007af959e946b8879dbb4" translate="yes" xml:space="preserve">
          <source>AppReopenedListener</source>
          <target state="translated">AppReopenedListener</target>
        </trans-unit>
        <trans-unit id="9873539fcb88f7ee0879938f9466d38e937cdb68" translate="yes" xml:space="preserve">
          <source>Append the result of the parse operation as children of the context node.</source>
          <target state="translated">구문 분석 작업의 결과를 컨텍스트 노드의 자식으로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="15c56a67e3dda4c7838f309123141818a20ad999" translate="yes" xml:space="preserve">
          <source>Append the result of the parse operation as children of the context node. For this action to work, the context node must be an &lt;code&gt;Element&lt;/code&gt; or a &lt;code&gt;DocumentFragment&lt;/code&gt;.</source>
          <target state="translated">구문 분석 작업의 결과를 컨텍스트 노드의 자식으로 추가합니다. 이 작업이 작동하려면 컨텍스트 노드가 &lt;code&gt;Element&lt;/code&gt; 또는 &lt;code&gt;DocumentFragment&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="a31784e9c8345c607c1c12178975f37bc948add9" translate="yes" xml:space="preserve">
          <source>Append the string to the end of the character data of the node.</source>
          <target state="translated">노드의 문자 데이터 끝에 문자열을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3917518f5c9fea6b1131ac35ce9e11bb2cc20d36" translate="yes" xml:space="preserve">
          <source>Append the string to the end of the character data of the node. Upon success, &lt;code&gt;data&lt;/code&gt; provides access to the concatenation of &lt;code&gt;data&lt;/code&gt; and the &lt;code&gt;DOMString&lt;/code&gt; specified.</source>
          <target state="translated">노드의 문자 데이터 끝에 문자열을 추가합니다. 성공하면 &lt;code&gt;data&lt;/code&gt; 는 지정된 &lt;code&gt;data&lt;/code&gt; 와 &lt;code&gt;DOMString&lt;/code&gt; 의 연결에 대한 액세스를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="e96335f31dca923971fca83bb7d266b9f6649b68" translate="yes" xml:space="preserve">
          <source>Appendable</source>
          <target state="translated">Appendable</target>
        </trans-unit>
        <trans-unit id="11a860f1c6b7689ad6a213a9174bafe276cbd0d1" translate="yes" xml:space="preserve">
          <source>Appendable.append()</source>
          <target state="translated">Appendable.append()</target>
        </trans-unit>
        <trans-unit id="d53172897c9eb8037d26348365a16f64403f724a" translate="yes" xml:space="preserve">
          <source>Appendables are not necessarily safe for multithreaded access. Thread safety is the responsibility of classes that extend and implement this interface.</source>
          <target state="translated">부록은 멀티 스레드 액세스에 반드시 안전한 것은 아닙니다. 스레드 안전성은이 인터페이스를 확장하고 구현하는 클래스의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="b09231380953cd773284db8286106f113bc2ca0e" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the &lt;code&gt;tableColumns&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;tableColumns&lt;/code&gt; 배열 의 끝에 &lt;code&gt;aColumn&lt;/code&gt; 을 추가 합니다 .</target>
        </trans-unit>
        <trans-unit id="1688fd5bea0983b4b83dfd3baaa4d7720e1d952d" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the &lt;code&gt;tableColumns&lt;/code&gt; array. This method also posts the &lt;code&gt;columnAdded&lt;/code&gt; event to its listeners.</source>
          <target state="translated">&lt;code&gt;tableColumns&lt;/code&gt; 배열 의 끝에 &lt;code&gt;aColumn&lt;/code&gt; 을 추가 합니다 . 이 메서드는 또한 리스너에 &lt;code&gt;columnAdded&lt;/code&gt; 이벤트를 게시합니다 .</target>
        </trans-unit>
        <trans-unit id="476900224e8db0b4b4f41494325e92b48ca6273c" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the &lt;code&gt;tableColumns&lt;/code&gt; array. This method posts a &lt;code&gt;columnAdded&lt;/code&gt; event to its listeners.</source>
          <target state="translated">&lt;code&gt;tableColumns&lt;/code&gt; 배열 의 끝에 &lt;code&gt;aColumn&lt;/code&gt; 을 추가 합니다 . 이 메서드 는 리스너에 &lt;code&gt;columnAdded&lt;/code&gt; 이벤트를 게시합니다 .</target>
        </trans-unit>
        <trans-unit id="ac2e41223a5c3cc2e0a60d340e62a21e0747258e" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the array of columns held by this &lt;code&gt;JTable&lt;/code&gt;'s column model.</source>
          <target state="translated">이 &lt;code&gt;JTable&lt;/code&gt; 열 모델 이 보유한 열 배열 끝에 &lt;code&gt;aColumn&lt;/code&gt; 을 추가 합니다 .</target>
        </trans-unit>
        <trans-unit id="f157f9c6e2ae9b0e021c2ef3135d57f3d7e45417" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the array of columns held by this &lt;code&gt;JTable&lt;/code&gt;'s column model. If the column name of &lt;code&gt;aColumn&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, sets the column name of &lt;code&gt;aColumn&lt;/code&gt; to the name returned by &lt;code&gt;getModel().getColumnName()&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;JTable&lt;/code&gt; 열 모델 이 보유한 열 배열 끝에 &lt;code&gt;aColumn&lt;/code&gt; 을 추가 합니다 . &lt;code&gt;aColumn&lt;/code&gt; 의 열 이름 이 &lt;code&gt;null&lt;/code&gt; 이면aColumn 의 열 이름을 &lt;code&gt;getModel().getColumnName()&lt;/code&gt; 반환 한 이름으로 &lt;code&gt;aColumn&lt;/code&gt; 합니다 .</target>
        </trans-unit>
        <trans-unit id="b3567a175fb0562baf41d927b02a10bc057a7dc2" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;numPages&lt;/code&gt; pages to the end of this &lt;code&gt;Book&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Book&lt;/code&gt; 의 끝에 &lt;code&gt;numPages&lt;/code&gt; 페이지를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="d963ea9ab0cdb9378e2ac779b39f6651a5f9f417" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;numPages&lt;/code&gt; pages to the end of this &lt;code&gt;Book&lt;/code&gt;. Each of the pages is associated with &lt;code&gt;page&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Book&lt;/code&gt; 의 끝에 &lt;code&gt;numPages&lt;/code&gt; 페이지를 추가합니다 . 각 페이지는 &lt;code&gt;page&lt;/code&gt; 와 연결됩니다 .</target>
        </trans-unit>
        <trans-unit id="8f98fb3d99eb6387339869d14cad794715865769" translate="yes" xml:space="preserve">
          <source>Appends a character literal to the formatter.</source>
          <target state="translated">포맷터에 문자 리터럴을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6077317e32c454c82c629234a15fe3257661a4b8" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream consisting of a single image with default metadata and thumbnails to the output.</source>
          <target state="translated">기본 메타 데이터 및 축소판이있는 단일 이미지로 구성된 전체 이미지 스트림을 출력에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="281820819f429504ff3a6174eb989801d1b94191" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream consisting of a single image with default metadata and thumbnails to the output. This method is a shorthand for &lt;code&gt;write(null, new IIOImage(image, null, null), null)&lt;/code&gt;.</source>
          <target state="translated">기본 메타 데이터 및 축소판이 포함 된 단일 이미지로 구성된 완전한 이미지 스트림을 출력에 추가합니다. 이 메소드는 &lt;code&gt;write(null, new IIOImage(image, null, null), null)&lt;/code&gt; 의 약어입니다 .</target>
        </trans-unit>
        <trans-unit id="b394e8311dbe84884c0c6a05ef5d485f0b50e3f4" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream containing a single image and associated stream and image metadata and thumbnails to the output.</source>
          <target state="translated">단일 이미지와 관련 스트림, 이미지 메타 데이터 및 축소판을 포함하는 전체 이미지 스트림을 출력에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="082ed2fbeb6ea36a03039ae30cc1f13d37c03cf6" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream containing a single image and associated stream and image metadata and thumbnails to the output. Any necessary header information is included. If the output is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, its existing contents prior to the current seek position are not affected, and need not be readable or writable.</source>
          <target state="translated">단일 이미지와 관련 스트림 및 이미지 메타 데이터 및 썸네일을 포함하는 완전한 이미지 스트림을 출력에 추가합니다. 필요한 헤더 정보가 포함되어 있습니다. 출력이 &lt;code&gt;ImageOutputStream&lt;/code&gt; 인 경우, 현재 탐색 위치 이전의 기존 내용은 영향을받지 않으며 읽기 또는 쓰기가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0bc06e5906435d3b2053668b21081e0932a459aa" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream containing a single image with default metadata and thumbnails to the output.</source>
          <target state="translated">기본 메타 데이터 및 축소판이있는 단일 이미지가 포함 된 전체 이미지 스트림을 출력에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="18ebb8ee6ccf16d140e00b450c04c71131d11a2b" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream containing a single image with default metadata and thumbnails to the output. This method is a shorthand for &lt;code&gt;write(null, image, null)&lt;/code&gt;.</source>
          <target state="translated">기본 메타 데이터 및 축소판이 포함 된 단일 이미지가 포함 된 완전한 이미지 스트림을 출력에 추가합니다. 이 메소드는 &lt;code&gt;write(null, image, null)&lt;/code&gt; 의 약어입니다 .</target>
        </trans-unit>
        <trans-unit id="a941db26292911f29d227015e8b2cb9bcadbb060" translate="yes" xml:space="preserve">
          <source>Appends a component to the end of this menu.</source>
          <target state="translated">이 메뉴의 끝에 구성 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="808ac411923619c4b90b8bd0ac2575ed6da65d24" translate="yes" xml:space="preserve">
          <source>Appends a component to the end of this menu. Returns the component added.</source>
          <target state="translated">이 메뉴의 끝에 구성 요소를 추가합니다. 추가 된 구성 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="abca56478705acafda5962bca0f06124d244612d" translate="yes" xml:space="preserve">
          <source>Appends a default value for a field to the formatter for use in parsing.</source>
          <target state="translated">구문 분석에 사용하기 위해 필드의 기본값을 포맷터에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6d0408587bdab66748506d5ccffef80210dda614" translate="yes" xml:space="preserve">
          <source>Appends a formatter to the builder which will optionally format/parse.</source>
          <target state="translated">선택적으로 형식화 / 구문 분석을 작성기에 빌더를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="bb68160d57d05f66cb98ca9aaf61f00cc94fc06a" translate="yes" xml:space="preserve">
          <source>Appends a localized date-time pattern to the formatter.</source>
          <target state="translated">현지화 된 날짜-시간 패턴을 포맷터에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="1217504978e2795be7500740649dfe70a7b13e32" translate="yes" xml:space="preserve">
          <source>Appends a menu item to the end of this menu.</source>
          <target state="translated">이 메뉴의 끝에 메뉴 항목을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b4b3ed5abd41c4c60aeac7fd96fdd7ac2b4c42c8" translate="yes" xml:space="preserve">
          <source>Appends a menu item to the end of this menu. Returns the menu item added.</source>
          <target state="translated">이 메뉴의 끝에 메뉴 항목을 추가합니다. 추가 된 메뉴 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="69a66bcc78d7ab6960539eb87b2e7c284c5faf97" translate="yes" xml:space="preserve">
          <source>Appends a new menu item to the end of the menu which dispatches the specified &lt;code&gt;Action&lt;/code&gt; object.</source>
          <target state="translated">지정된 &lt;code&gt;Action&lt;/code&gt; 객체 를 전달하는 메뉴 끝에 새 메뉴 항목을 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="a2e9e468420caf2ebccb84f1a57d9ce3d161a486" translate="yes" xml:space="preserve">
          <source>Appends a new separator at the end of the menu.</source>
          <target state="translated">메뉴 끝에 새 구분 기호를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b19f1cad37d90822685ed81c99d8cf72dabc9b8d" translate="yes" xml:space="preserve">
          <source>Appends a new separator to the end of the menu.</source>
          <target state="translated">메뉴 끝에 새 구분 기호를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="d2ecd751a6b29f51496d9df2f46576cc0ad6758f" translate="yes" xml:space="preserve">
          <source>Appends a separator of a specified size to the end of the tool bar.</source>
          <target state="translated">도구 모음 끝에 지정된 크기의 구분 기호를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5e0b21445319456c84c04eb01921af34bb5d2f57" translate="yes" xml:space="preserve">
          <source>Appends a separator of default size to the end of the tool bar.</source>
          <target state="translated">도구 모음 끝에 기본 크기의 구분 기호를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6d55718779625090d2139598847a3396a06b2336" translate="yes" xml:space="preserve">
          <source>Appends a separator of default size to the end of the tool bar. The default size is determined by the current look and feel.</source>
          <target state="translated">도구 모음 끝에 기본 크기의 구분 기호를 추가합니다. 기본 크기는 현재 모양과 느낌에 따라 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="c23cc498bc3000b0c783d67f3bcbeae4de95b95e" translate="yes" xml:space="preserve">
          <source>Appends a single child view.</source>
          <target state="translated">단일 하위보기를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="cd121f6528c5a509555f199c51d3705ccdc31c89" translate="yes" xml:space="preserve">
          <source>Appends a single child view. This is a convenience call to &lt;code&gt;replace&lt;/code&gt;.</source>
          <target state="translated">단일 하위보기를 추가합니다. 이것은의 편의를 위해 전화입니다 &lt;code&gt;replace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f928a001c97be018da4b9e617c36c02b4a7c574b" translate="yes" xml:space="preserve">
          <source>Appends a single image and possibly associated metadata and thumbnails, to the output.</source>
          <target state="translated">단일 이미지와 관련 메타 데이터 및 축소판을 출력에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="7246f1a135cf1661873c64195d4d1ddf2e277ebc" translate="yes" xml:space="preserve">
          <source>Appends a single image and possibly associated metadata and thumbnails, to the output. If the output is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, the existing contents of the output prior to the current seek position may be flushed, and need not be readable or writable, unless the plug-in needs to be able to patch up the header information when &lt;code&gt;endWriteSequence&lt;/code&gt; is called (</source>
          <target state="translated">단일 이미지와 관련 메타 데이터 및 썸네일을 출력에 추가합니다. 출력이 &lt;code&gt;ImageOutputStream&lt;/code&gt; 인 경우, &lt;code&gt;endWriteSequence&lt;/code&gt; 가 호출 될 때 플러그인 이 헤더 정보를 패치 할 수 있어야하는 경우가 아니라면 현재 탐색 위치 이전의 출력의 기존 컨텐츠가 플러시 될 수 있으며 읽기 또는 쓰기가 필요하지 않습니다. (</target>
        </trans-unit>
        <trans-unit id="1f5864b4be5e5e7f2cf21d57d680ea8ccba362f9" translate="yes" xml:space="preserve">
          <source>Appends a single page to the end of this &lt;code&gt;Book&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Book&lt;/code&gt; 의 끝에 한 페이지를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="32d3b6c48828d9d8a5d3b4841f37611b121fbd03" translate="yes" xml:space="preserve">
          <source>Appends a string literal to the formatter.</source>
          <target state="translated">포맷터에 문자열 리터럴을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f3de7accc40cc007982752ee97a632514266c812" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified &lt;code&gt;CharSequence&lt;/code&gt; to this sequence.</source>
          <target state="translated">지정된 &lt;code&gt;CharSequence&lt;/code&gt; 의 서브 순서를이 순서에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="0e356f7ac511797cc61434da9df3dfdcd3a70dd3" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this &lt;code&gt;Appendable&lt;/code&gt;.</source>
          <target state="translated">지정된 문자 순서의 서브 순서를이 &lt;code&gt;Appendable&lt;/code&gt; 에 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="7befa15893242af110648efcab30eacc7923163f" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this buffer</source>
          <target state="translated">지정된 문자 순서의 서브 순서를이 버퍼에 추가합니다</target>
        </trans-unit>
        <trans-unit id="c3cf7e5ef845ab525de4a8d21ed77f112d2fe332" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this output stream.</source>
          <target state="translated">지정된 문자 순서의 서브 순서를이 출력 스트림에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f81662094bc46ddeeaa6f7e0f83ca0ae28c7e885" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this writer.</source>
          <target state="translated">지정된 문자 순서의 서브 시퀀스를이 라이터에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="277fcdbc9374c81d3075ff361cb702c1a8a0e406" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this writer. &lt;code&gt;Appendable&lt;/code&gt;.</source>
          <target state="translated">지정된 문자 순서의 서브 시퀀스를이 라이터에 추가합니다. &lt;code&gt;Appendable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="201900c26f23aec90ffceb602d72d0077dd68d68" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified Collection to the end of this Vector, in the order that they are returned by the specified Collection's Iterator.</source>
          <target state="translated">지정된 Collection의 Iterator에서 반환하는 순서대로 지정된 Collection의 모든 요소를이 Vector의 끝에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0574c7f0a86f5650f0f8ef583a0603eae42daad2" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified Collection to the end of this Vector, in the order that they are returned by the specified Collection's Iterator. The behavior of this operation is undefined if the specified Collection is modified while the operation is in progress. (This implies that the behavior of this call is undefined if the specified Collection is this Vector, and this Vector is nonempty.)</source>
          <target state="translated">지정된 컬렉션의 모든 요소를 ​​지정된 컬렉션의 반복자에서 반환하는 순서대로이 Vector의 끝에 추가합니다. 작업이 진행되는 동안 지정된 컬렉션이 수정되면이 작업의 동작이 정의되지 않습니다. (이는 지정된 Collection이이 Vector이고이 Vector가 비어 있지 않으면이 호출의 동작이 정의되지 않았 음을 의미합니다.)</target>
        </trans-unit>
        <trans-unit id="bb43596870d59b0e0d3cf29a0529c953b660e5d6" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection that are not already contained in this list, to the end of this list, in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">이리스트에 포함되어 있지 않은, 지정된 콜렉션 내의 모든 요소를, 지정된 콜렉션의 반복자에 의해 돌려 주어지는 순서로리스트의 마지막에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="aea405c8cb63d25bc7f6636c9d53ff5bac903ed1" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this deque, in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">지정된 컬렉션의 반복자가 반환하는 순서대로 지정된 컬렉션의 모든 요소를이 deque의 끝에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="dcda93a6791cda5e9c4f7954cfea2259b46bfd83" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this deque, in the order that they are returned by the specified collection's iterator. Attempts to &lt;code&gt;addAll&lt;/code&gt; of a deque to itself result in &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">지정된 컬렉션의 모든 요소를 ​​지정된 컬렉션의 반복자에 의해 반환되는 순서대로,이 deque의 말미에 추가합니다. 에 대한 시도 &lt;code&gt;addAll&lt;/code&gt; 자체에 양단 큐의이 결과 &lt;code&gt;IllegalArgumentException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4d846522feb2c1927702595ce16b699ee76751f" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's Iterator.</source>
          <target state="translated">지정된 컬렉션의 Iterator에서 반환 한 순서대로 지정된 컬렉션의 모든 요소를이 목록의 끝에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="397d3730ee19812406d353adf8610e6cd03599c1" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's Iterator. The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (This implies that the behavior of this call is undefined if the specified collection is this list, and this list is nonempty.)</source>
          <target state="translated">지정된 컬렉션의 모든 요소를 ​​지정된 컬렉션의 반복자에서 반환하는 순서대로이 목록의 끝에 추가합니다. 작업이 진행되는 동안 지정된 컬렉션이 수정되면이 작업의 동작이 정의되지 않습니다. 지정된 컬렉션이이 목록이고이 목록이 비어 있지 않으면이 호출의 동작이 정의되지 않았 음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="c17ff44c3173f7dfe8e30253d0f04ed6b1630484" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator (optional operation).</source>
          <target state="translated">지정된 컬렉션의 반복자가 반환하는 순서대로 지정된 컬렉션의 모든 요소를이 목록의 끝에 추가합니다 (선택적 작업).</target>
        </trans-unit>
        <trans-unit id="95d62f71c6304dbb7e65e70d817dc7c858d790ce" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator (optional operation). The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (Note that this will occur if the specified collection is this list, and it's nonempty.)</source>
          <target state="translated">지정된 컬렉션의 모든 요소를 ​​지정된 컬렉션의 반복자에 의해 반환되는 순서대로이 목록의 끝에 추가합니다 (선택적 작업). 작업이 진행되는 동안 지정된 컬렉션이 수정되면이 작업의 동작이 정의되지 않습니다. 지정된 컬렉션이이 목록이고 비어 있지 않은 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="849f59f09a7e7d4b1d5f159fb019f744f182b6f2" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">지정된 컬렉션의 모든 요소를 ​​지정된 컬렉션의 반복자가 반환하는 순서대로이 목록의 끝에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="50dc125948b2483e5ca1254bc5728d97989acc9b" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator. The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (Note that this will occur if the specified collection is this list, and it's nonempty.)</source>
          <target state="translated">지정된 컬렉션의 모든 요소를 ​​지정된 컬렉션의 반복자가 반환하는 순서대로이 목록의 끝에 추가합니다. 작업이 진행되는 동안 지정된 컬렉션이 수정되면이 작업의 동작이 정의되지 않습니다. 지정된 컬렉션이이 목록이고 비어 있지 않은 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b2e8ea05b088e4e262c2838e587c14ebed395923" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this queue, in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">지정된 컬렉션의 반복자가 반환하는 순서대로 지정된 컬렉션의 모든 요소를이 큐의 끝에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="fc09be9b9a0a1d52de670a92bd12013c7ad6f7f3" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this queue, in the order that they are returned by the specified collection's iterator. Attempts to &lt;code&gt;addAll&lt;/code&gt; of a queue to itself result in &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">지정된 컬렉션의 모든 요소를 ​​지정된 컬렉션의 반복자가 반환하는 순서대로이 큐의 끝에 추가합니다. 에 대한 시도 &lt;code&gt;addAll&lt;/code&gt; 자체에 대기열이 발생 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가 .</target>
        </trans-unit>
        <trans-unit id="9fe0cf973e8832dacac57cf537cd2dab762e757b" translate="yes" xml:space="preserve">
          <source>Appends all the elements in the &lt;code&gt;AttributeList&lt;/code&gt; specified to the end of the list, in the order in which they are returned by the Iterator of the &lt;code&gt;AttributeList&lt;/code&gt; specified.</source>
          <target state="translated">의 모든 요소에 추가 &lt;code&gt;AttributeList&lt;/code&gt; 의가 반복자에 의해 반환되는 차례로리스트의 말미에 지정 &lt;code&gt;AttributeList&lt;/code&gt; 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c7ac69fdd545a8295e9282388ba7c224995c8342" translate="yes" xml:space="preserve">
          <source>Appends all the elements in the RoleList specified to the end of the list, in the order in which they are returned by the Iterator of the RoleList specified.</source>
          <target state="translated">지정된 RoleList의 모든 요소를 ​​지정된 RoleList의 반복자가 리턴 한 순서대로 목록의 끝에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b6eae929bd5fa510fc8fc2b75f2780993eb58230" translate="yes" xml:space="preserve">
          <source>Appends all the elements in the RoleUnresolvedList specified to the end of the list, in the order in which they are returned by the Iterator of the RoleUnresolvedList specified.</source>
          <target state="translated">지정된 RoleUnresolvedList의 모든 요소를 ​​지정된 RoleUnresolvedList의 반복자가 리턴 한 순서대로 목록 끝에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="45f1980f0df46580be48f61880766db0755d50d9" translate="yes" xml:space="preserve">
          <source>Appends all the elements of a formatter to the builder.</source>
          <target state="translated">포맷터의 모든 요소를 ​​빌더에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="31b641689af075ef5c48a0639be6ca8ac79d50a2" translate="yes" xml:space="preserve">
          <source>Appends an instant using ISO-8601 to the formatter with control over the number of fractional digits.</source>
          <target state="translated">ISO-8601을 사용하는 순간을 소수 자릿수를 제어하여 포맷터에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="57800dac739f3809ff175f6143b1b045f21851d4" translate="yes" xml:space="preserve">
          <source>Appends an instant using ISO-8601 to the formatter, formatting fractional digits in groups of three.</source>
          <target state="translated">ISO-8601을 사용하는 순간을 포맷터에 추가하고 소수를 3 개의 그룹으로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="b8b255024c76d062ff8b118ac6eca861d7631194" translate="yes" xml:space="preserve">
          <source>Appends the chronology ID, such as 'ISO' or 'ThaiBuddhist', to the formatter.</source>
          <target state="translated">'ISO'또는 'ThaiBuddhist'와 같은 연대기 ID를 포맷터에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="37cdd5a8434d4d4e821fd8cc820f46ad90144d63" translate="yes" xml:space="preserve">
          <source>Appends the chronology name to the formatter.</source>
          <target state="translated">연대기 이름을 포맷터에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0c71eddcbc6b0d34240cdfe59e9946e4d6649e1f" translate="yes" xml:space="preserve">
          <source>Appends the element, if not present.</source>
          <target state="translated">없는 경우 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6b894f08dc1016bbdc27bc779c7964129fbe006d" translate="yes" xml:space="preserve">
          <source>Appends the elements defined by the specified pattern to the builder.</source>
          <target state="translated">지정된 패턴으로 정의 된 요소를 빌더에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e38b63f8db7af830809ba065e424033c6009df43" translate="yes" xml:space="preserve">
          <source>Appends the fractional value of a date-time field to the formatter.</source>
          <target state="translated">날짜-시간 필드의 분수 값을 포맷터에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ca79df163842e89277b503f9e16670dc70a94ee7" translate="yes" xml:space="preserve">
          <source>Appends the generic time-zone name, such as 'Pacific Time', to the formatter.</source>
          <target state="translated">'Pacific Time'과 같은 일반 시간대 이름을 포맷터에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b115ddbe12a96262baae96eb719e21b0e9300014" translate="yes" xml:space="preserve">
          <source>Appends the geometry of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; object to the path, possibly connecting the new geometry to the existing path segments with a line segment.</source>
          <target state="translated">지정된 &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt; 객체 의 지오메트리를 경로에 추가하여 새 지오메트리를 기존 경로 세그먼트에 선 세그먼트로 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58cf85acb76194155c4c6ba58cfda8c9daa2bb52" translate="yes" xml:space="preserve">
          <source>Appends the geometry of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; object to the path, possibly connecting the new geometry to the existing path segments with a line segment. If the &lt;code&gt;connect&lt;/code&gt; parameter is &lt;code&gt;true&lt;/code&gt; and the path is not empty then any initial &lt;code&gt;moveTo&lt;/code&gt; in the geometry of the appended &lt;code&gt;Shape&lt;/code&gt; is turned into a &lt;code&gt;lineTo&lt;/code&gt; segment. If the destination coordinates of such a connecting &lt;code&gt;lineTo&lt;/code&gt; segment match the ending coordinates of a currently open subpath then the segment is omitted as superfluous. The winding rule of the specified &lt;code&gt;Shape&lt;/code&gt; is ignored and the appended geometry is governed by the winding rule specified for this path.</source>
          <target state="translated">지정된 &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt; 객체 의 지오메트리를 경로에 추가하여 새 지오메트리를 기존 경로 세그먼트에 선 세그먼트로 연결할 수 있습니다. 상기 중간 &lt;code&gt;connect&lt;/code&gt; 매개 변수가 &lt;code&gt;true&lt;/code&gt; 과 경로가 비어 있지 않은 다음 어떤 초기 &lt;code&gt;moveTo&lt;/code&gt; 첨부의 형상의 &lt;code&gt;Shape&lt;/code&gt; 으로 켜져 &lt;code&gt;lineTo&lt;/code&gt; 세그먼트. 이러한 연결 &lt;code&gt;lineTo&lt;/code&gt; 세그먼트 의 대상 좌표가 현재 열려있는 하위 경로의 끝 좌표와 일치하면 세그먼트가 불필요하게 생략됩니다. 지정된 &lt;code&gt;Shape&lt;/code&gt; 의 굴곡 규칙 은 무시되고 추가 된 형상은이 경로에 지정된 굴곡 규칙에 의해 제어됩니다.</target>
        </trans-unit>
        <trans-unit id="5f507763da8834f1035539ee1d697fe9174b721e" translate="yes" xml:space="preserve">
          <source>Appends the geometry of the specified &lt;code&gt;Shape&lt;/code&gt; object to the path, possibly connecting the new geometry to the existing path segments with a line segment.</source>
          <target state="translated">지정된 &lt;code&gt;Shape&lt;/code&gt; 객체 의 지오메트리를 경로에 추가하여 새 지오메트리를 선 세그먼트를 사용하여 기존 경로 세그먼트에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d45717ffd1956dece97af594637a5042761e9da" translate="yes" xml:space="preserve">
          <source>Appends the geometry of the specified &lt;code&gt;Shape&lt;/code&gt; object to the path, possibly connecting the new geometry to the existing path segments with a line segment. If the &lt;code&gt;connect&lt;/code&gt; parameter is &lt;code&gt;true&lt;/code&gt; and the path is not empty then any initial &lt;code&gt;moveTo&lt;/code&gt; in the geometry of the appended &lt;code&gt;Shape&lt;/code&gt; is turned into a &lt;code&gt;lineTo&lt;/code&gt; segment. If the destination coordinates of such a connecting &lt;code&gt;lineTo&lt;/code&gt; segment match the ending coordinates of a currently open subpath then the segment is omitted as superfluous. The winding rule of the specified &lt;code&gt;Shape&lt;/code&gt; is ignored and the appended geometry is governed by the winding rule specified for this path.</source>
          <target state="translated">지정된 &lt;code&gt;Shape&lt;/code&gt; 객체 의 지오메트리를 경로에 추가하여 새 지오메트리를 선 세그먼트를 사용하여 기존 경로 세그먼트에 연결할 수 있습니다. 상기 중간 &lt;code&gt;connect&lt;/code&gt; 매개 변수가 &lt;code&gt;true&lt;/code&gt; 과 경로가 비어 있지 않은 다음 어떤 초기 &lt;code&gt;moveTo&lt;/code&gt; 첨부의 형상의 &lt;code&gt;Shape&lt;/code&gt; 으로 켜져 &lt;code&gt;lineTo&lt;/code&gt; 세그먼트. 이러한 연결 &lt;code&gt;lineTo&lt;/code&gt; 세그먼트 의 대상 좌표가 현재 열려있는 하위 경로의 끝 좌표와 일치하면 세그먼트가 불필요하게 생략됩니다. 지정된 &lt;code&gt;Shape&lt;/code&gt; 의 굴곡 규칙 은 무시되고 추가 된 형상은이 경로에 지정된 굴곡 규칙에 의해 제어됩니다.</target>
        </trans-unit>
        <trans-unit id="aee95d38f44b67f4da37bd848a96f3178d59e5a8" translate="yes" xml:space="preserve">
          <source>Appends the given text to the end of the document.</source>
          <target state="translated">주어진 텍스트를 문서 끝에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="374f5fe01edbae6815e4ed307b24e4dbd22508c6" translate="yes" xml:space="preserve">
          <source>Appends the given text to the end of the document. Does nothing if the model is null or the string is null or empty.</source>
          <target state="translated">주어진 텍스트를 문서 끝에 추가합니다. 모델이 null이거나 문자열이 null이거나 비어 있으면 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fbe1e3e6ccbf0420c766b7d5fe40a86470a1d25d" translate="yes" xml:space="preserve">
          <source>Appends the given text to the text area's current text.</source>
          <target state="translated">주어진 텍스트를 텍스트 영역의 현재 텍스트에 추가합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
