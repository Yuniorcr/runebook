<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="4ef17679c4a14877e4c6f13b5e377031a7e72b1b" translate="yes" xml:space="preserve">
          <source>LOGGING_MXBEAN_NAME</source>
          <target state="translated">LOGGING_MXBEAN_NAME</target>
        </trans-unit>
        <trans-unit id="03918ad8df4e066d43a18c57d37bf87aa12f5202" translate="yes" xml:space="preserve">
          <source>LOGICAL_STYLE_ACTION</source>
          <target state="translated">LOGICAL_STYLE_ACTION</target>
        </trans-unit>
        <trans-unit id="26038021d9c96f8331868f50d54fff24145e2c07" translate="yes" xml:space="preserve">
          <source>LOG_OPTION</source>
          <target state="translated">LOG_OPTION</target>
        </trans-unit>
        <trans-unit id="a4ab30ac59152c7cdac425098a0e91bddb57dee0" translate="yes" xml:space="preserve">
          <source>LONG</source>
          <target state="translated">LONG</target>
        </trans-unit>
        <trans-unit id="952136244f39b2037da37fe7402732912497034b" translate="yes" xml:space="preserve">
          <source>LONGITUDE_REF_EAST</source>
          <target state="translated">LONGITUDE_REF_EAST</target>
        </trans-unit>
        <trans-unit id="27bc60a7a235037c20305e5c421d5e874758b278" translate="yes" xml:space="preserve">
          <source>LONGITUDE_REF_WEST</source>
          <target state="translated">LONGITUDE_REF_WEST</target>
        </trans-unit>
        <trans-unit id="2e290de07882ab2c06212782be1da274a64fe21c" translate="yes" xml:space="preserve">
          <source>LONGNVARCHAR</source>
          <target state="translated">LONGNVARCHAR</target>
        </trans-unit>
        <trans-unit id="54ea5bb96c19d4a715deb5c1e4c856fdc2c10c4d" translate="yes" xml:space="preserve">
          <source>LONGVARBINARY</source>
          <target state="translated">LONGVARBINARY</target>
        </trans-unit>
        <trans-unit id="e326d228a2888b804eb75a4a7a13f332527b2066" translate="yes" xml:space="preserve">
          <source>LONGVARCHAR</source>
          <target state="translated">LONGVARCHAR</target>
        </trans-unit>
        <trans-unit id="860140489f1e71f231cbece02b28bec35627ec43" translate="yes" xml:space="preserve">
          <source>LONG_DESCRIPTION</source>
          <target state="translated">LONG_DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="a20ac16aa0cf89b6dcd93549a831f6ee2d669dbc" translate="yes" xml:space="preserve">
          <source>LONG_FORMAT</source>
          <target state="translated">LONG_FORMAT</target>
        </trans-unit>
        <trans-unit id="5011c160da423f43bfedb69e8134e0f3b7a0de3c" translate="yes" xml:space="preserve">
          <source>LONG_STANDALONE</source>
          <target state="translated">LONG_STANDALONE</target>
        </trans-unit>
        <trans-unit id="2987e3e2023345191fe3cc183d7e917e09a00d29" translate="yes" xml:space="preserve">
          <source>LOOP_CONTINUOUSLY</source>
          <target state="translated">LOOP_CONTINUOUSLY</target>
        </trans-unit>
        <trans-unit id="7813cd57149bcef91e409fa25798741b5a92a133" translate="yes" xml:space="preserve">
          <source>LOST_FOCUS</source>
          <target state="translated">LOST_FOCUS</target>
        </trans-unit>
        <trans-unit id="99de6ad7c4876501b047c66fac1fc218394c8386" translate="yes" xml:space="preserve">
          <source>LOWERCASE_LETTER</source>
          <target state="translated">LOWERCASE_LETTER</target>
        </trans-unit>
        <trans-unit id="9aa692c6106a785505560d0604322a60204cc701" translate="yes" xml:space="preserve">
          <source>LOWERED</source>
          <target state="translated">LOWERED</target>
        </trans-unit>
        <trans-unit id="0805742fd567cacdbc992efe3c51addbee0e74f2" translate="yes" xml:space="preserve">
          <source>LOWER_LEADING_CORNER</source>
          <target state="translated">LOWER_LEADING_CORNER</target>
        </trans-unit>
        <trans-unit id="6b7daa7cdc272616ca5f87f487dca642d519cbc2" translate="yes" xml:space="preserve">
          <source>LOWER_LEFT_CORNER</source>
          <target state="translated">LOWER_LEFT_CORNER</target>
        </trans-unit>
        <trans-unit id="e0b3382496537f770efb3b192b6e7d77b0334a41" translate="yes" xml:space="preserve">
          <source>LOWER_RIGHT_CORNER</source>
          <target state="translated">LOWER_RIGHT_CORNER</target>
        </trans-unit>
        <trans-unit id="336c7d31fa700512fdc6d5ea7bb5b43228aaa088" translate="yes" xml:space="preserve">
          <source>LOWER_TRAILING_CORNER</source>
          <target state="translated">LOWER_TRAILING_CORNER</target>
        </trans-unit>
        <trans-unit id="733ea72de7e9d51e91852c3e1c34d7a4a88e30d4" translate="yes" xml:space="preserve">
          <source>LOWSRC</source>
          <target state="translated">LOWSRC</target>
        </trans-unit>
        <trans-unit id="6e771a215f26c831ce71feb09b438af4e2a34e4d" translate="yes" xml:space="preserve">
          <source>LOW_SURROGATES</source>
          <target state="translated">LOW_SURROGATES</target>
        </trans-unit>
        <trans-unit id="9f249dfd0fb572b34b9920f0b3443dc7df690b58" translate="yes" xml:space="preserve">
          <source>LSException</source>
          <target state="translated">LSException</target>
        </trans-unit>
        <trans-unit id="244b90f4045cbf35516257263a49fe8fe6227bba" translate="yes" xml:space="preserve">
          <source>LSInput</source>
          <target state="translated">LSInput</target>
        </trans-unit>
        <trans-unit id="d6e11253cf1d9b6919679b6315bbc13b1090c186" translate="yes" xml:space="preserve">
          <source>LSLoadEvent</source>
          <target state="translated">LSLoadEvent</target>
        </trans-unit>
        <trans-unit id="8910c32128bcde1ee56e3612ba5f1ff1ff345641" translate="yes" xml:space="preserve">
          <source>LSOutput</source>
          <target state="translated">LSOutput</target>
        </trans-unit>
        <trans-unit id="f00873f7a5e1b4f3570f6859238b8dfaa870783e" translate="yes" xml:space="preserve">
          <source>LSParser</source>
          <target state="translated">LSParser</target>
        </trans-unit>
        <trans-unit id="7227db6febb961b52c2c2817b132817118d1185d" translate="yes" xml:space="preserve">
          <source>LSParserFilter</source>
          <target state="translated">LSParserFilter</target>
        </trans-unit>
        <trans-unit id="a64a6899a4980aa96b9645eb800482945a723d3d" translate="yes" xml:space="preserve">
          <source>LSProgressEvent</source>
          <target state="translated">LSProgressEvent</target>
        </trans-unit>
        <trans-unit id="5ef0ec24fde0cded79aeb55284237b0b34db9913" translate="yes" xml:space="preserve">
          <source>LSResourceResolver</source>
          <target state="translated">LSResourceResolver</target>
        </trans-unit>
        <trans-unit id="f96cfc0f32b7ee7264ccbc34da4ffe343331dff4" translate="yes" xml:space="preserve">
          <source>LSSerializer</source>
          <target state="translated">LSSerializer</target>
        </trans-unit>
        <trans-unit id="92916b34c81a9dd7e249d230c0f21aed15385eaf" translate="yes" xml:space="preserve">
          <source>LSSerializerFilter</source>
          <target state="translated">LSSerializerFilter</target>
        </trans-unit>
        <trans-unit id="6c62fb7313eb9d28efbca3e61ff13801b5b45a0a" translate="yes" xml:space="preserve">
          <source>LT</source>
          <target state="translated">LT</target>
        </trans-unit>
        <trans-unit id="28d544b3402dde884c67364cc1b27207092874ce" translate="yes" xml:space="preserve">
          <source>LT - Western Europe (optional for Japanese, Chinese, Korean)</source>
          <target state="translated">LT - Western Europe (optional for Japanese, Chinese, Korean)</target>
        </trans-unit>
        <trans-unit id="4497f6a39fbf3ab619fb55dabd7ca42a32a475aa" translate="yes" xml:space="preserve">
          <source>LYCIAN</source>
          <target state="translated">LYCIAN</target>
        </trans-unit>
        <trans-unit id="4466052437025788aeb1c9d1dee61f33178c424c" translate="yes" xml:space="preserve">
          <source>LYDIAN</source>
          <target state="translated">LYDIAN</target>
        </trans-unit>
        <trans-unit id="74341e3c271df3c784e595b804b1f90be0f80429" translate="yes" xml:space="preserve">
          <source>Label</source>
          <target state="translated">Label</target>
        </trans-unit>
        <trans-unit id="bdeadf973f4e32996921807b7edb017b38a9a177" translate="yes" xml:space="preserve">
          <source>Label rectangle</source>
          <target state="translated">Label rectangle</target>
        </trans-unit>
        <trans-unit id="1c05ef0c432f87fff54ecd0b8b98dc1c2b355427" translate="yes" xml:space="preserve">
          <source>Label region.</source>
          <target state="translated">Label region.</target>
        </trans-unit>
        <trans-unit id="ca0fbf55961af2e04ec456b15a95d81eb5d8b7fa" translate="yes" xml:space="preserve">
          <source>Label region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;Label&lt;/code&gt;.</source>
          <target state="translated">Label region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;Label&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f577f2e9904f32a17cbd18a23de9ba8cef21c35a" translate="yes" xml:space="preserve">
          <source>Label.AccessibleAWTLabel</source>
          <target state="translated">Label.AccessibleAWTLabel</target>
        </trans-unit>
        <trans-unit id="4bb5444b7d8683f01c8c33aa722bdbcf4a27d9ec" translate="yes" xml:space="preserve">
          <source>LabelUI</source>
          <target state="translated">LabelUI</target>
        </trans-unit>
        <trans-unit id="02ce54d1e63b5e61915115a45901b57acd43e113" translate="yes" xml:space="preserve">
          <source>LabelUI object</source>
          <target state="translated">LabelUI object</target>
        </trans-unit>
        <trans-unit id="a1d7ffd4b6e04617e48c00043f3de7aa16f7ddd1" translate="yes" xml:space="preserve">
          <source>LabelView</source>
          <target state="translated">LabelView</target>
        </trans-unit>
        <trans-unit id="f8b6d872c2a9199d5ff13efe8baf04cedbe4aed7" translate="yes" xml:space="preserve">
          <source>LambdaConversionException</source>
          <target state="translated">LambdaConversionException</target>
        </trans-unit>
        <trans-unit id="5c3be7c4e2938d4496d52aa9f5c32262ed561f05" translate="yes" xml:space="preserve">
          <source>LambdaMetafactory</source>
          <target state="translated">LambdaMetafactory</target>
        </trans-unit>
        <trans-unit id="dec59ad22ceb4d29f171c1ebdce6da2366c46fea" translate="yes" xml:space="preserve">
          <source>LambdaMetafactory.altMetafactory()</source>
          <target state="translated">LambdaMetafactory.altMetafactory()</target>
        </trans-unit>
        <trans-unit id="c5756514eeb142c08b62d160df375d462dc2cbf9" translate="yes" xml:space="preserve">
          <source>LambdaMetafactory.metafactory()</source>
          <target state="translated">LambdaMetafactory.metafactory()</target>
        </trans-unit>
        <trans-unit id="f26010449a62e19df7f135eac1d9313722aabcaa" translate="yes" xml:space="preserve">
          <source>Language Code of Locale</source>
          <target state="translated">로캘의 언어 코드</target>
        </trans-unit>
        <trans-unit id="041e1cd74369527fa7e914722a726e613bf61103" translate="yes" xml:space="preserve">
          <source>Language Priority List: &lt;code&gt;&quot;de-*-DE&quot;&lt;/code&gt;</source>
          <target state="translated">언어 우선 순위 목록 : &lt;code&gt;&quot;de-*-DE&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1309a15a66c4851f2cb01812aa2177d05f86e9e" translate="yes" xml:space="preserve">
          <source>Language Priority List: &lt;code&gt;&quot;de-DE&quot;&lt;/code&gt;</source>
          <target state="translated">언어 우선 순위 목록 : &lt;code&gt;&quot;de-DE&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eca88d973b933ced234c5a1a3b3bc9797a7061b7" translate="yes" xml:space="preserve">
          <source>Language is always lower case, country is always upper case, script is always title case, and extensions are always lower case. Extensions and private use subtags will be in canonical order as explained in &lt;a href=&quot;#toLanguageTag()&quot;&gt;&lt;code&gt;toLanguageTag()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Language is always lower case, country is always upper case, script is always title case, and extensions are always lower case. Extensions and private use subtags will be in canonical order as explained in &lt;a href=&quot;#toLanguageTag()&quot;&gt; &lt;code&gt;toLanguageTag()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="46feac3094d2d6bca7b8495d438d27c17d7f8452" translate="yes" xml:space="preserve">
          <source>Language is always lower case, country is always upper case, script is always title case, and extensions are always lower case. Extensions and private use subtags will be in canonical order as explained in &lt;a href=&quot;locale#toLanguageTag--&quot;&gt;&lt;code&gt;toLanguageTag()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">언어는 항상 소문자, 국가는 항상 대문자, 스크립트는 항상 제목, 확장은 항상 소문자입니다. 확장 및 개인용 &lt;a href=&quot;locale#toLanguageTag--&quot;&gt; &lt;code&gt;toLanguageTag()&lt;/code&gt; &lt;/a&gt; 태그는 toLanguageTag ()에 설명 된대로 정식 순서로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="981a438029b7c8882290f59e7915ebb680d6691e" translate="yes" xml:space="preserve">
          <source>LanguageCallback</source>
          <target state="translated">LanguageCallback</target>
        </trans-unit>
        <trans-unit id="43d5dbe4813b6c345ab3e52fa1d4be645761fad3" translate="yes" xml:space="preserve">
          <source>LanguageCallback.getLocale()</source>
          <target state="translated">LanguageCallback.getLocale()</target>
        </trans-unit>
        <trans-unit id="ca1dae2757e7320716e2b3eed2dfc1c108eaa89d" translate="yes" xml:space="preserve">
          <source>LanguageCallback.setLocale()</source>
          <target state="translated">LanguageCallback.setLocale()</target>
        </trans-unit>
        <trans-unit id="71222bde100c7cbec5b6dfaf1f76bdb517a6432e" translate="yes" xml:space="preserve">
          <source>LanguageRange</source>
          <target state="translated">LanguageRange</target>
        </trans-unit>
        <trans-unit id="deb32110082117bc2ed28b2f7acce747ad202749" translate="yes" xml:space="preserve">
          <source>Large fonts can support different writing systems, and each system can use a different baseline. The character argument determines the writing system to use. Clients should not assume all characters use the same baseline.</source>
          <target state="translated">Large fonts can support different writing systems, and each system can use a different baseline. The character argument determines the writing system to use. Clients should not assume all characters use the same baseline.</target>
        </trans-unit>
        <trans-unit id="f6a76eeefc32f0256f3df4693690e6894643c3cb" translate="yes" xml:space="preserve">
          <source>Large key</source>
          <target state="translated">Large key</target>
        </trans-unit>
        <trans-unit id="ee4a5ee6cf4160b362ce6982742bd9fe58491e9a" translate="yes" xml:space="preserve">
          <source>Large scale</source>
          <target state="translated">Large scale</target>
        </trans-unit>
        <trans-unit id="6766ed1ca9e0344b7f73c5bea6ba540102a5ad01" translate="yes" xml:space="preserve">
          <source>Larger documents involve a lot of parsing and take some time to load. By default, this kit produces documents that will be loaded asynchronously if loaded using &lt;code&gt;JEditorPane.setPage&lt;/code&gt;. This is controlled by a property on the document. The method &lt;a href=&quot;#createDefaultDocument()&quot;&gt;&lt;code&gt;createDefaultDocument&lt;/code&gt;&lt;/a&gt; can be overriden to change this. The batching of work is done by the &lt;code&gt;HTMLDocument.HTMLReader&lt;/code&gt; class. The actual work is done by the &lt;code&gt;DefaultStyledDocument&lt;/code&gt; and &lt;code&gt;AbstractDocument&lt;/code&gt; classes in the text package.</source>
          <target state="translated">Larger documents involve a lot of parsing and take some time to load. By default, this kit produces documents that will be loaded asynchronously if loaded using &lt;code&gt;JEditorPane.setPage&lt;/code&gt; . This is controlled by a property on the document. The method &lt;a href=&quot;#createDefaultDocument()&quot;&gt; &lt;code&gt;createDefaultDocument&lt;/code&gt; &lt;/a&gt; can be overriden to change this. The batching of work is done by the &lt;code&gt;HTMLDocument.HTMLReader&lt;/code&gt; class. The actual work is done by the &lt;code&gt;DefaultStyledDocument&lt;/code&gt; and &lt;code&gt;AbstractDocument&lt;/code&gt; classes in the text package.</target>
        </trans-unit>
        <trans-unit id="16a60e98c06380b16374dea1ec2b0676417fe708" translate="yes" xml:space="preserve">
          <source>Last Element (Tail)</source>
          <target state="translated">Last Element (Tail)</target>
        </trans-unit>
        <trans-unit id="f926fc8ccbf146e33d5a608766714e71942f744b" translate="yes" xml:space="preserve">
          <source>Last path that was added.</source>
          <target state="translated">Last path that was added.</target>
        </trans-unit>
        <trans-unit id="ff71e63473cd5cecd6553302b88ec8d051da3733" translate="yes" xml:space="preserve">
          <source>Last path that was selected.</source>
          <target state="translated">Last path that was selected.</target>
        </trans-unit>
        <trans-unit id="e6934318a74f6a57fda5ac0dbe862118bacbe345" translate="yes" xml:space="preserve">
          <source>Last tag value.</source>
          <target state="translated">마지막 태그 값.</target>
        </trans-unit>
        <trans-unit id="d75bb42d54485a28feb75a21f5a29816d8514516" translate="yes" xml:space="preserve">
          <source>Last two digits of the year, formatted with leading zeros as necessary, i.e. &lt;code&gt;00 - 99&lt;/code&gt;.</source>
          <target state="translated">연도의 마지막 두 자리 숫자 (필요한 경우 앞에 0) (예 : &lt;code&gt;00 - 99&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ca793e8360f9a32a334955fcda628cbbfd91c15" translate="yes" xml:space="preserve">
          <source>Last valid value</source>
          <target state="translated">Last valid value</target>
        </trans-unit>
        <trans-unit id="9263dba478495a813cd964d0190bbf4199a9c8db" translate="yes" xml:space="preserve">
          <source>LastOwnerException</source>
          <target state="translated">LastOwnerException</target>
        </trans-unit>
        <trans-unit id="31303b7268f28a00c76777a5486d49dc10e3c12c" translate="yes" xml:space="preserve">
          <source>Late Delay (ms)</source>
          <target state="translated">늦은 지연 (ms)</target>
        </trans-unit>
        <trans-unit id="9e4c027eeb8dff52101fba719d7fec761d02cdf5" translate="yes" xml:space="preserve">
          <source>Late Intensity (dB)</source>
          <target state="translated">늦은 강도 (dB)</target>
        </trans-unit>
        <trans-unit id="7b7ff7584049f71a9beb45351dece015728bbe1e" translate="yes" xml:space="preserve">
          <source>Late binding narrows the window during which interference can affect the calculation; fail-fast detects, on a best-effort basis, that structural interference has occurred after traversal has commenced and throws &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. For example, &lt;a href=&quot;arraylist&quot;&gt;&lt;code&gt;ArrayList&lt;/code&gt;&lt;/a&gt;, and many other non-concurrent &lt;code&gt;Collection&lt;/code&gt; classes in the JDK, provide a late-binding, fail-fast spliterator.</source>
          <target state="translated">후기 바인딩은 간섭이 계산에 영향을 줄 수있는 기간을 좁 힙니다. fail-fast는 순회가 시작된 후 구조적 간섭이 발생하고 &lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 을&lt;/a&gt; 발생시킨 후 최선의 노력으로 감지 합니다. 예를 들어, JDK의 &lt;a href=&quot;arraylist&quot;&gt; &lt;code&gt;ArrayList&lt;/code&gt; &lt;/a&gt; 및 기타 많은 비 동시 &lt;code&gt;Collection&lt;/code&gt; 클래스는 후기 바인딩, 페일 패스트 스플리터를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6b803874ced1783b8258c9abeffbef8ca61a0e9c" translate="yes" xml:space="preserve">
          <source>Later eras have sequentially higher values.</source>
          <target state="translated">후기는 순차적으로 더 높은 값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="c5d6838464339bfe3f52e5cfd3181c2250d4341e" translate="yes" xml:space="preserve">
          <source>Later, when code calls AccessController.checkPermission on a permission of a type that was previously unresolved, but whose class has since been loaded, previously-unresolved permissions of that type are &quot;resolved&quot;. That is, for each such UnresolvedPermission, a new object of the appropriate class type is instantiated, based on the information in the UnresolvedPermission.</source>
          <target state="translated">나중에 코드가 이전에 해결되지 않았지만 클래스가로드 된 유형의 권한에 대해 AccessController.checkPermission을 호출하면 해당 유형의 이전에 해결되지 않은 권한이 &quot;해결&quot;됩니다. 즉, 이러한 UnresolvedPermission 각각에 대해 UnresolvedPermission의 정보를 기반으로 적절한 클래스 유형의 새 객체가 인스턴스화됩니다.</target>
        </trans-unit>
        <trans-unit id="1ed9f38eef0359febbdda1b206a9babf424d861e" translate="yes" xml:space="preserve">
          <source>Launches the associated application to open the file.</source>
          <target state="translated">Launches the associated application to open the file.</target>
        </trans-unit>
        <trans-unit id="e52d246c616aa00128d8c3d71a0c8fbbd0caaa67" translate="yes" xml:space="preserve">
          <source>Launches the associated editor application and opens a file for editing.</source>
          <target state="translated">Launches the associated editor application and opens a file for editing.</target>
        </trans-unit>
        <trans-unit id="beb392b4a0b770aac3722c49ba02e67cc831e10c" translate="yes" xml:space="preserve">
          <source>Launches the default browser to display a &lt;code&gt;URI&lt;/code&gt;.</source>
          <target state="translated">Launches the default browser to display a &lt;code&gt;URI&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7ff20ca1f4f43c55f8d3b5aaa23a27789477556" translate="yes" xml:space="preserve">
          <source>Launches the default browser to display a &lt;code&gt;URI&lt;/code&gt;. If the default browser is not able to handle the specified &lt;code&gt;URI&lt;/code&gt;, the application registered for handling &lt;code&gt;URIs&lt;/code&gt; of the specified type is invoked. The application is determined from the protocol and path of the &lt;code&gt;URI&lt;/code&gt;, as defined by the &lt;code&gt;URI&lt;/code&gt; class.</source>
          <target state="translated">Launches the default browser to display a &lt;code&gt;URI&lt;/code&gt; . If the default browser is not able to handle the specified &lt;code&gt;URI&lt;/code&gt; , the application registered for handling &lt;code&gt;URIs&lt;/code&gt; of the specified type is invoked. The application is determined from the protocol and path of the &lt;code&gt;URI&lt;/code&gt; , as defined by the &lt;code&gt;URI&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="2672ad3100cfb708610b789f22eff7a7f2749d6a" translate="yes" xml:space="preserve">
          <source>Launches the mail composing window of the user default mail client, filling the message fields specified by a &lt;code&gt;
 mailto:&lt;/code&gt; URI.</source>
          <target state="translated">Launches the mail composing window of the user default mail client, filling the message fields specified by a &lt;code&gt; mailto:&lt;/code&gt; URI.</target>
        </trans-unit>
        <trans-unit id="348ba1f96cb7993f383e7add5c4da3901a17b45b" translate="yes" xml:space="preserve">
          <source>Launches the mail composing window of the user default mail client.</source>
          <target state="translated">Launches the mail composing window of the user default mail client.</target>
        </trans-unit>
        <trans-unit id="d7b5887bf036c72e189b4815e5eecebf8e5cfbf3" translate="yes" xml:space="preserve">
          <source>LayerInstantiationException</source>
          <target state="translated">LayerInstantiationException</target>
        </trans-unit>
        <trans-unit id="fa83eac08e39bdde3d0145ba5777738ed426fa7c" translate="yes" xml:space="preserve">
          <source>LayerPainter</source>
          <target state="translated">LayerPainter</target>
        </trans-unit>
        <trans-unit id="390e7178b94206fbe7f1d060741a0dfcd46933de" translate="yes" xml:space="preserve">
          <source>LayerUI</source>
          <target state="translated">LayerUI</target>
        </trans-unit>
        <trans-unit id="44454921220dae36a90db05bcae5957bbe292ee6" translate="yes" xml:space="preserve">
          <source>Layered highlight renderer.</source>
          <target state="translated">Layered highlight renderer.</target>
        </trans-unit>
        <trans-unit id="f226250ff11c420857932cdf51bfac53d482c87e" translate="yes" xml:space="preserve">
          <source>LayeredHighlighter</source>
          <target state="translated">LayeredHighlighter</target>
        </trans-unit>
        <trans-unit id="c177758d84ca6b9005687ce66c3b219f16169386" translate="yes" xml:space="preserve">
          <source>LayeredHighlighter.LayerPainter</source>
          <target state="translated">LayeredHighlighter.LayerPainter</target>
        </trans-unit>
        <trans-unit id="ef734d44d3447465f84daf2f010e7dff8f09a5bc" translate="yes" xml:space="preserve">
          <source>Layout Orientation</source>
          <target state="translated">Layout Orientation</target>
        </trans-unit>
        <trans-unit id="2fdd3915d067567d5abdbfc2502ec04a783a7ce8" translate="yes" xml:space="preserve">
          <source>Layout for each axis is handled separately by the methods &lt;code&gt;layoutMajorAxis&lt;/code&gt; and &lt;code&gt;layoutMinorAxis&lt;/code&gt;. Subclasses can change the layout algorithm by reimplementing these methods. These methods will be called as necessary depending upon whether or not there is cached layout information and the cache is considered valid. These methods are typically called if the given size along the axis changes, or if &lt;code&gt;layoutChanged&lt;/code&gt; is called to force an updated layout. The &lt;code&gt;layoutChanged&lt;/code&gt; method invalidates cached layout information, if there is any. The requirements published to the parent view are calculated by the methods &lt;code&gt;calculateMajorAxisRequirements&lt;/code&gt; and &lt;code&gt;calculateMinorAxisRequirements&lt;/code&gt;. If the layout algorithm is changed, these methods will likely need to be reimplemented.</source>
          <target state="translated">Layout for each axis is handled separately by the methods &lt;code&gt;layoutMajorAxis&lt;/code&gt; and &lt;code&gt;layoutMinorAxis&lt;/code&gt; . Subclasses can change the layout algorithm by reimplementing these methods. These methods will be called as necessary depending upon whether or not there is cached layout information and the cache is considered valid. These methods are typically called if the given size along the axis changes, or if &lt;code&gt;layoutChanged&lt;/code&gt; is called to force an updated layout. The &lt;code&gt;layoutChanged&lt;/code&gt; method invalidates cached layout information, if there is any. The requirements published to the parent view are calculated by the methods &lt;code&gt;calculateMajorAxisRequirements&lt;/code&gt; and &lt;code&gt;calculateMinorAxisRequirements&lt;/code&gt; . If the layout algorithm is changed, these methods will likely need to be reimplemented.</target>
        </trans-unit>
        <trans-unit id="5556dc0954699a2f974c09413e17f6bdc636bc31" translate="yes" xml:space="preserve">
          <source>Layout requires bidi analysis, as performed by &lt;code&gt;Bidi&lt;/code&gt;, and should only be performed on text that has a uniform direction. The direction is indicated in the flags parameter,by using LAYOUT_RIGHT_TO_LEFT to indicate a right-to-left (Arabic and Hebrew) run direction, or LAYOUT_LEFT_TO_RIGHT to indicate a left-to-right (English) run direction.</source>
          <target state="translated">Layout requires bidi analysis, as performed by &lt;code&gt;Bidi&lt;/code&gt; , and should only be performed on text that has a uniform direction. The direction is indicated in the flags parameter,by using LAYOUT_RIGHT_TO_LEFT to indicate a right-to-left (Arabic and Hebrew) run direction, or LAYOUT_LEFT_TO_RIGHT to indicate a left-to-right (English) run direction.</target>
        </trans-unit>
        <trans-unit id="b58a6a895cde12e9afe3712f63d8f4b55fe1e05b" translate="yes" xml:space="preserve">
          <source>Layout-related changes, such as bounds of the validate root descendants, do not affect the layout of the validate root parent. This peculiarity enables the &lt;code&gt;invalidate()&lt;/code&gt; method to stop invalidating the component hierarchy when the method encounters a validate root. However, to preserve backward compatibility this new optimized behavior is enabled only when the &lt;code&gt;java.awt.smartInvalidate&lt;/code&gt; system property value is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Layout-related changes, such as bounds of the validate root descendants, do not affect the layout of the validate root parent. This peculiarity enables the &lt;code&gt;invalidate()&lt;/code&gt; method to stop invalidating the component hierarchy when the method encounters a validate root. However, to preserve backward compatibility this new optimized behavior is enabled only when the &lt;code&gt;java.awt.smartInvalidate&lt;/code&gt; system property value is set to &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81584151e8304db0bfa0f36db4696ef8b9635780" translate="yes" xml:space="preserve">
          <source>LayoutFocusTraversalPolicy</source>
          <target state="translated">LayoutFocusTraversalPolicy</target>
        </trans-unit>
        <trans-unit id="465517c926203fd8b587eb6db6dba7455176c8ae" translate="yes" xml:space="preserve">
          <source>LayoutManager</source>
          <target state="translated">LayoutManager</target>
        </trans-unit>
        <trans-unit id="9a841fb43857ec7396a9d6801b9cb7b19cb0b876" translate="yes" xml:space="preserve">
          <source>LayoutManager for JSplitPanes that have an orientation of HORIZONTAL_SPLIT.</source>
          <target state="translated">LayoutManager for JSplitPanes that have an orientation of HORIZONTAL_SPLIT.</target>
        </trans-unit>
        <trans-unit id="7207149371f358a4d1ab5d92c57822a92d90bdcc" translate="yes" xml:space="preserve">
          <source>LayoutManager that is created and placed into the split pane.</source>
          <target state="translated">LayoutManager that is created and placed into the split pane.</target>
        </trans-unit>
        <trans-unit id="895caaed931a9d97fbc39c94e6df1946f8b86843" translate="yes" xml:space="preserve">
          <source>LayoutManager used for JSplitPanes with an orientation of VERTICAL_SPLIT.</source>
          <target state="translated">LayoutManager used for JSplitPanes with an orientation of VERTICAL_SPLIT.</target>
        </trans-unit>
        <trans-unit id="dc089eb77ccd6d75e6f7a81e67385b6f29973217" translate="yes" xml:space="preserve">
          <source>LayoutManager2</source>
          <target state="translated">LayoutManager2</target>
        </trans-unit>
        <trans-unit id="187b81245de92f1db3ef67d43c1a9ced71ee0160" translate="yes" xml:space="preserve">
          <source>LayoutPath</source>
          <target state="translated">LayoutPath</target>
        </trans-unit>
        <trans-unit id="35720abdf18bb39f2da68f1e68a249a7e5aa4dce" translate="yes" xml:space="preserve">
          <source>LayoutPath provides a mapping between locations relative to the baseline and points in user space.</source>
          <target state="translated">LayoutPath provides a mapping between locations relative to the baseline and points in user space.</target>
        </trans-unit>
        <trans-unit id="489d9ba8895a35fc5d8754b6a2926255e0340825" translate="yes" xml:space="preserve">
          <source>LayoutPath provides a mapping between locations relative to the baseline and points in user space. Locations consist of an advance along the baseline, and an offset perpendicular to the baseline at the advance. Positive values along the perpendicular are in the direction that is 90 degrees clockwise from the baseline vector. Locations are represented as a &lt;code&gt;Point2D&lt;/code&gt;, where x is the advance and y is the offset.</source>
          <target state="translated">LayoutPath provides a mapping between locations relative to the baseline and points in user space. Locations consist of an advance along the baseline, and an offset perpendicular to the baseline at the advance. Positive values along the perpendicular are in the direction that is 90 degrees clockwise from the baseline vector. Locations are represented as a &lt;code&gt;Point2D&lt;/code&gt; , where x is the advance and y is the offset.</target>
        </trans-unit>
        <trans-unit id="5a4e99bab65446c1b2fed4925727c838cbf19158" translate="yes" xml:space="preserve">
          <source>LayoutQueue</source>
          <target state="translated">LayoutQueue</target>
        </trans-unit>
        <trans-unit id="bf6ece6fdf4db2188e727b270cdeb0ccef6d813e" translate="yes" xml:space="preserve">
          <source>LayoutStyle</source>
          <target state="translated">LayoutStyle</target>
        </trans-unit>
        <trans-unit id="d4fa76acfa5202e862bb404b5645123b78ec03aa" translate="yes" xml:space="preserve">
          <source>LayoutStyle implementing the Java look and feel design guidelines</source>
          <target state="translated">LayoutStyle implementing the Java look and feel design guidelines</target>
        </trans-unit>
        <trans-unit id="551bd8f0fe8e5a0aa0817057d24b7b27324f59c5" translate="yes" xml:space="preserve">
          <source>LayoutStyle.ComponentPlacement</source>
          <target state="translated">LayoutStyle.ComponentPlacement</target>
        </trans-unit>
        <trans-unit id="ac9367f86a9b4c520c00d1d8ab8018b15f141a35" translate="yes" xml:space="preserve">
          <source>Lays out text and an icon returning, by reference, the location to place the icon and text.</source>
          <target state="translated">Lays out text and an icon returning, by reference, the location to place the icon and text.</target>
        </trans-unit>
        <trans-unit id="fa924832e3ce9a360f624c5c2258dcebbd45d7c9" translate="yes" xml:space="preserve">
          <source>Lays out the &lt;code&gt;JComboBox&lt;/code&gt; in the &lt;code&gt;parent&lt;/code&gt; container.</source>
          <target state="translated">Lays out the &lt;code&gt;JComboBox&lt;/code&gt; in the &lt;code&gt;parent&lt;/code&gt; container.</target>
        </trans-unit>
        <trans-unit id="2d967b11fb743952e0346ace6170273f969f7462" translate="yes" xml:space="preserve">
          <source>Lays out the &lt;code&gt;JSplitPane&lt;/code&gt; layout based on the preferred size of the children components.</source>
          <target state="translated">Lays out the &lt;code&gt;JSplitPane&lt;/code&gt; layout based on the preferred size of the children components.</target>
        </trans-unit>
        <trans-unit id="0cf5a721894a5d91910f1353de3dcc138f4c5c05" translate="yes" xml:space="preserve">
          <source>Lays out the &lt;code&gt;JSplitPane&lt;/code&gt; layout based on the preferred size of the children components. This will likely result in changing the divider location.</source>
          <target state="translated">Lays out the &lt;code&gt;JSplitPane&lt;/code&gt; layout based on the preferred size of the children components. This will likely result in changing the divider location.</target>
        </trans-unit>
        <trans-unit id="bb376808f343384e8c03993ac96475749cbb491f" translate="yes" xml:space="preserve">
          <source>Lays out the children.</source>
          <target state="translated">Lays out the children.</target>
        </trans-unit>
        <trans-unit id="a3854b3dc3cd2db018a1d9f42a9b56efca0bdef0" translate="yes" xml:space="preserve">
          <source>Lays out the children. If the span along the flow axis has changed, layout is marked as invalid which which will cause the superclass behavior to recalculate the layout along the box axis. The FlowStrategy.layout method will be called to rebuild the flow rows as appropriate. If the height of this view changes (determined by the preferred size along the box axis), a preferenceChanged is called. Following all of that, the normal box layout of the superclass is performed.</source>
          <target state="translated">Lays out the children. If the span along the flow axis has changed, layout is marked as invalid which which will cause the superclass behavior to recalculate the layout along the box axis. The FlowStrategy.layout method will be called to rebuild the flow rows as appropriate. If the height of this view changes (determined by the preferred size along the box axis), a preferenceChanged is called. Following all of that, the normal box layout of the superclass is performed.</target>
        </trans-unit>
        <trans-unit id="479066cd305121c5ef29afa4f8af7f05be8356eb" translate="yes" xml:space="preserve">
          <source>Lays out the columns to fit within the given target span.</source>
          <target state="translated">Lays out the columns to fit within the given target span.</target>
        </trans-unit>
        <trans-unit id="3519f8685da6e55d5fea5470c31c1dc644c9382a" translate="yes" xml:space="preserve">
          <source>Lays out the columns to fit within the given target span. Returns the results through &lt;code&gt;offsets&lt;/code&gt; and &lt;code&gt;spans&lt;/code&gt;.</source>
          <target state="translated">Lays out the columns to fit within the given target span. Returns the results through &lt;code&gt;offsets&lt;/code&gt; and &lt;code&gt;spans&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1612a70ee017cd19e8a7183d4aa6ec7232d9bf25" translate="yes" xml:space="preserve">
          <source>Lays out the container argument using this border layout.</source>
          <target state="translated">Lays out the container argument using this border layout.</target>
        </trans-unit>
        <trans-unit id="43aa26af538ef5aacfd6fda889b6f6cb0ebe840c" translate="yes" xml:space="preserve">
          <source>Lays out the container so that it uses the minimum space needed to display its contents.</source>
          <target state="translated">Lays out the container so that it uses the minimum space needed to display its contents.</target>
        </trans-unit>
        <trans-unit id="50027f26997b7462d1e00a87375590419ce5a5bc" translate="yes" xml:space="preserve">
          <source>Lays out the container.</source>
          <target state="translated">Lays out the container.</target>
        </trans-unit>
        <trans-unit id="31e2b0221c82405cb326159fe9b861c456367edd" translate="yes" xml:space="preserve">
          <source>Lays out the container. This method lets each</source>
          <target state="translated">Lays out the container. This method lets each</target>
        </trans-unit>
        <trans-unit id="a793b4e86b71fb519ffa57b74b6aaf1ca4cbc9dc" translate="yes" xml:space="preserve">
          <source>Lays out the grid.</source>
          <target state="translated">Lays out the grid.</target>
        </trans-unit>
        <trans-unit id="15ae8754206a712a43d6cf4eb44ce1bf415ebc93" translate="yes" xml:space="preserve">
          <source>Lays out the grid. This method should only be used internally by &lt;code&gt;GridBagLayout&lt;/code&gt;.</source>
          <target state="translated">Lays out the grid. This method should only be used internally by &lt;code&gt;GridBagLayout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84910f92057fe4d9838b3871584e4767a3d6d176" translate="yes" xml:space="preserve">
          <source>Lays out the parent container.</source>
          <target state="translated">Lays out the parent container.</target>
        </trans-unit>
        <trans-unit id="d7591b4c1a87ca92203de6cdad2038ce921763e0" translate="yes" xml:space="preserve">
          <source>Lays out the scrollpane.</source>
          <target state="translated">Lays out the scrollpane.</target>
        </trans-unit>
        <trans-unit id="efdf726da7ce960d756772043ce0378070709712" translate="yes" xml:space="preserve">
          <source>Lays out the scrollpane. The positioning of components depends on the following constraints:</source>
          <target state="translated">Lays out the scrollpane. The positioning of components depends on the following constraints:</target>
        </trans-unit>
        <trans-unit id="2aab51ddc025c58f7d7efeb154c7c479e7d77009" translate="yes" xml:space="preserve">
          <source>Lays out the slider.</source>
          <target state="translated">Lays out the slider.</target>
        </trans-unit>
        <trans-unit id="ef0e654c508f0e35b66596edfb92d4d1e5f10afe" translate="yes" xml:space="preserve">
          <source>Lays out the specified container using this card layout.</source>
          <target state="translated">Lays out the specified container using this card layout.</target>
        </trans-unit>
        <trans-unit id="325fe6fb26dbee1d67502060521d4939cf89545a" translate="yes" xml:space="preserve">
          <source>Lays out the specified container using this grid bag layout.</source>
          <target state="translated">Lays out the specified container using this grid bag layout.</target>
        </trans-unit>
        <trans-unit id="a1bd999de7a8047abd2f76c7d2000e74142f13c2" translate="yes" xml:space="preserve">
          <source>Lays out the specified container using this grid bag layout. This method reshapes components in the specified container in order to satisfy the constraints of this &lt;code&gt;GridBagLayout&lt;/code&gt; object.</source>
          <target state="translated">Lays out the specified container using this grid bag layout. This method reshapes components in the specified container in order to satisfy the constraints of this &lt;code&gt;GridBagLayout&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="a16b1e5a27d3c04a824379dfca00c1650f0d6b37" translate="yes" xml:space="preserve">
          <source>Lays out the specified container using this layout.</source>
          <target state="translated">Lays out the specified container using this layout.</target>
        </trans-unit>
        <trans-unit id="221fce21c7c66169cd01d475bf76c6bfa34260b7" translate="yes" xml:space="preserve">
          <source>Lays out the specified container.</source>
          <target state="translated">Lays out the specified container.</target>
        </trans-unit>
        <trans-unit id="0ed38168b69f89e62f6a00f71972014c55955032" translate="yes" xml:space="preserve">
          <source>Lays out this &lt;code&gt;Container&lt;/code&gt;.</source>
          <target state="translated">Lays out this &lt;code&gt;Container&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0405eaf0b08f197c431f2cf54d1845c1c99e43be" translate="yes" xml:space="preserve">
          <source>Lays out this &lt;code&gt;Container&lt;/code&gt;. If editing, the editor will be placed at &lt;code&gt;offset&lt;/code&gt; in the x direction and 0 for y.</source>
          <target state="translated">Lays out this &lt;code&gt;Container&lt;/code&gt; . If editing, the editor will be placed at &lt;code&gt;offset&lt;/code&gt; in the x direction and 0 for y.</target>
        </trans-unit>
        <trans-unit id="f0a277332a7b1ef9cb22bee77b248dbbb27fbe14" translate="yes" xml:space="preserve">
          <source>Lays out this container by resizing its child to its preferred size.</source>
          <target state="translated">Lays out this container by resizing its child to its preferred size.</target>
        </trans-unit>
        <trans-unit id="383d736c6c6fb6c31be3988e9177b0e37ce4917d" translate="yes" xml:space="preserve">
          <source>Lays out this container by resizing its child to its preferred size. If the new preferred size of the child causes the current scroll position to be invalid, the scroll position is set to the closest valid position.</source>
          <target state="translated">Lays out this container by resizing its child to its preferred size. If the new preferred size of the child causes the current scroll position to be invalid, the scroll position is set to the closest valid position.</target>
        </trans-unit>
        <trans-unit id="bbdf56e281b608abe6500274a904c68a6b370fa7" translate="yes" xml:space="preserve">
          <source>Laysout a label.</source>
          <target state="translated">Laysout a label.</target>
        </trans-unit>
        <trans-unit id="fdc40c7d5bba30fc9e5ee854a42c91f4fba09682" translate="yes" xml:space="preserve">
          <source>Laysouts a vertical scroll bar.</source>
          <target state="translated">Laysouts a vertical scroll bar.</target>
        </trans-unit>
        <trans-unit id="e786d94f357d5685301fa6e6315ad461467de851" translate="yes" xml:space="preserve">
          <source>Lazily associate a computed value with (potentially) every type.</source>
          <target state="translated">계산 된 값을 모든 유형 (잠재적으로)과 느리게 연결합니다.</target>
        </trans-unit>
        <trans-unit id="fc9095879a82303c4a9ae68069ed916ccd246209" translate="yes" xml:space="preserve">
          <source>Lazily associate a computed value with (potentially) every type. For example, if a dynamic language needs to construct a message dispatch table for each class encountered at a message send call site, it can use a &lt;code&gt;ClassValue&lt;/code&gt; to cache information needed to perform the message send quickly, for each class encountered.</source>
          <target state="translated">계산 된 값을 모든 유형 (잠재적으로)과 느리게 연결합니다. 예를 들어, 동적 언어가 메시지 전송 호출 사이트에서 발생한 각 클래스에 대해 메시지 디스패치 테이블을 구성 &lt;code&gt;ClassValue&lt;/code&gt; 경우 ClassValue 를 사용하여 발생한 각 클래스에 대해 메시지 전송을 빠르게 수행하는 데 필요한 정보를 캐시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="23f832356daa7a4fe56867d25f34fead91179d43" translate="yes" xml:space="preserve">
          <source>Lazily loads the available providers of this loader's service.</source>
          <target state="translated">이 로더 서비스의 사용 가능한 공급자를 Lazily로로드합니다.</target>
        </trans-unit>
        <trans-unit id="248d12bb4e3f68f16208e174b4bd09110af3daed" translate="yes" xml:space="preserve">
          <source>Laziness-seeking. Many stream operations, such as filtering, mapping, or duplicate removal, can be implemented lazily, exposing opportunities for optimization. For example, &quot;find the first &lt;code&gt;String&lt;/code&gt; with three consecutive vowels&quot; need not examine all the input strings. Stream operations are divided into intermediate (&lt;code&gt;Stream&lt;/code&gt;-producing) operations and terminal (value- or side-effect-producing) operations. Intermediate operations are always lazy.</source>
          <target state="translated">게으름을 찾는. 필터링, 매핑 또는 중복 제거와 같은 많은 스트림 작업을 느리게 구현하여 최적화 기회를 제공 할 수 있습니다. 예를 들어, &quot; 세 개의 연속 모음으로 첫 번째 &lt;code&gt;String&lt;/code&gt; 찾기 &quot;는 모든 입력 문자열을 검사 할 필요는 없습니다. 스트림 작업은 중간 ( &lt;code&gt;Stream&lt;/code&gt; 생성) 작업과 터미널 (값 또는 부작용 발생) 작업으로 구분됩니다. 중간 작업은 항상 게으르다.</target>
        </trans-unit>
        <trans-unit id="b01255dbb33c38c13f15948dc204b8ca64c073fd" translate="yes" xml:space="preserve">
          <source>LazyInputMap</source>
          <target state="translated">LazyInputMap</target>
        </trans-unit>
        <trans-unit id="2f926593de0851ef7fa0be0fe8ce62fab0399d99" translate="yes" xml:space="preserve">
          <source>LdapContext</source>
          <target state="translated">LdapContext</target>
        </trans-unit>
        <trans-unit id="d6e202f837eda063752e14cc8daa04186d6f31ed" translate="yes" xml:space="preserve">
          <source>LdapContext.extendedOperation()</source>
          <target state="translated">LdapContext.extendedOperation()</target>
        </trans-unit>
        <trans-unit id="814c370c1c117001e0f436585baa1e423fd5a4fd" translate="yes" xml:space="preserve">
          <source>LdapContext.getConnectControls()</source>
          <target state="translated">LdapContext.getConnectControls()</target>
        </trans-unit>
        <trans-unit id="7a38dd465b5e996f57043670e75a733fa0084556" translate="yes" xml:space="preserve">
          <source>LdapContext.getRequestControls()</source>
          <target state="translated">LdapContext.getRequestControls()</target>
        </trans-unit>
        <trans-unit id="2e9ee124facb63f63374b77b13b86926d0d0504b" translate="yes" xml:space="preserve">
          <source>LdapContext.getResponseControls()</source>
          <target state="translated">LdapContext.getResponseControls()</target>
        </trans-unit>
        <trans-unit id="d6e1d90bbf087417c1eae73660e55b776b449fa5" translate="yes" xml:space="preserve">
          <source>LdapContext.newInstance()</source>
          <target state="translated">LdapContext.newInstance()</target>
        </trans-unit>
        <trans-unit id="12ded058ec0628a80efe0c60f9f5d2a420b3b406" translate="yes" xml:space="preserve">
          <source>LdapContext.reconnect()</source>
          <target state="translated">LdapContext.reconnect()</target>
        </trans-unit>
        <trans-unit id="f8bcdcaa843623c92049d2836d626ce036ef072c" translate="yes" xml:space="preserve">
          <source>LdapContext.setRequestControls()</source>
          <target state="translated">LdapContext.setRequestControls()</target>
        </trans-unit>
        <trans-unit id="99d5a23d2097f2c93c789ee9e7045f63234e53c0" translate="yes" xml:space="preserve">
          <source>LdapName</source>
          <target state="translated">LdapName</target>
        </trans-unit>
        <trans-unit id="27f6b46d79eba11a107219e1633f997bf86c6348" translate="yes" xml:space="preserve">
          <source>LdapName.add()</source>
          <target state="translated">LdapName.add()</target>
        </trans-unit>
        <trans-unit id="e0cbd16102f72e7240b4aea107f9df1c1f16668e" translate="yes" xml:space="preserve">
          <source>LdapName.addAll()</source>
          <target state="translated">LdapName.addAll()</target>
        </trans-unit>
        <trans-unit id="b5d2db9821b658525ff9b258747383f8c9543fef" translate="yes" xml:space="preserve">
          <source>LdapName.clone()</source>
          <target state="translated">LdapName.clone()</target>
        </trans-unit>
        <trans-unit id="6afa20b2883d6e552aad9442780f21c5733081f3" translate="yes" xml:space="preserve">
          <source>LdapName.compareTo()</source>
          <target state="translated">LdapName.compareTo()</target>
        </trans-unit>
        <trans-unit id="d043007de996cd08db5e45ee38e4cba3593c525c" translate="yes" xml:space="preserve">
          <source>LdapName.endsWith()</source>
          <target state="translated">LdapName.endsWith()</target>
        </trans-unit>
        <trans-unit id="6a9b61a5034456062c535b255520be87214ea173" translate="yes" xml:space="preserve">
          <source>LdapName.equals()</source>
          <target state="translated">LdapName.equals()</target>
        </trans-unit>
        <trans-unit id="8714436c79dc36cce5cf1e7a6c9f21600c0cbdce" translate="yes" xml:space="preserve">
          <source>LdapName.get()</source>
          <target state="translated">LdapName.get()</target>
        </trans-unit>
        <trans-unit id="33c75d6e4f193a5f6e6c6f6556ad54c69cc6fdf9" translate="yes" xml:space="preserve">
          <source>LdapName.getAll()</source>
          <target state="translated">LdapName.getAll()</target>
        </trans-unit>
        <trans-unit id="e14d12cfddf4a88daba32f7cb0d5de28327dbfec" translate="yes" xml:space="preserve">
          <source>LdapName.getPrefix()</source>
          <target state="translated">LdapName.getPrefix()</target>
        </trans-unit>
        <trans-unit id="8ab510e3d5205c74f046ffb032e8ceb70e6113b1" translate="yes" xml:space="preserve">
          <source>LdapName.getRdn()</source>
          <target state="translated">LdapName.getRdn()</target>
        </trans-unit>
        <trans-unit id="d87afbd0d9c0c10b12c9467b90e18fe5dc1028a5" translate="yes" xml:space="preserve">
          <source>LdapName.getRdns()</source>
          <target state="translated">LdapName.getRdns()</target>
        </trans-unit>
        <trans-unit id="a3153d219be1baca764e617e32ecb16912dfbab0" translate="yes" xml:space="preserve">
          <source>LdapName.getSuffix()</source>
          <target state="translated">LdapName.getSuffix()</target>
        </trans-unit>
        <trans-unit id="525112b95b7686c5a5e4a94992ff2cd5d999aef0" translate="yes" xml:space="preserve">
          <source>LdapName.hashCode()</source>
          <target state="translated">LdapName.hashCode()</target>
        </trans-unit>
        <trans-unit id="299eeaf17f26642d4de799fb3c977f07c1953a45" translate="yes" xml:space="preserve">
          <source>LdapName.isEmpty()</source>
          <target state="translated">LdapName.isEmpty()</target>
        </trans-unit>
        <trans-unit id="2aebfa249cdc84745a37130da54912d2e9e10b94" translate="yes" xml:space="preserve">
          <source>LdapName.remove()</source>
          <target state="translated">LdapName.remove()</target>
        </trans-unit>
        <trans-unit id="fd53a77c8c48dfefc7daac3fbdbeebbab00e65a8" translate="yes" xml:space="preserve">
          <source>LdapName.size()</source>
          <target state="translated">LdapName.size()</target>
        </trans-unit>
        <trans-unit id="f547fc1d55e40ee46a33a32518082de4e701c6ad" translate="yes" xml:space="preserve">
          <source>LdapName.startsWith()</source>
          <target state="translated">LdapName.startsWith()</target>
        </trans-unit>
        <trans-unit id="c1d8e5e86896f2a0617dc3d71c544277d8eb8be2" translate="yes" xml:space="preserve">
          <source>LdapName.toString()</source>
          <target state="translated">LdapName.toString()</target>
        </trans-unit>
        <trans-unit id="89699f9db03577802917f4545b1370645877db5b" translate="yes" xml:space="preserve">
          <source>LdapReferralException</source>
          <target state="translated">LdapReferralException</target>
        </trans-unit>
        <trans-unit id="31d7a2a12c3f5cd0c980043e02413961b56e63e1" translate="yes" xml:space="preserve">
          <source>LdapReferralException.getReferralContext()</source>
          <target state="translated">LdapReferralException.getReferralContext()</target>
        </trans-unit>
        <trans-unit id="b2d0e20ef96393c8774110d83ccccc2f4d1b6f9e" translate="yes" xml:space="preserve">
          <source>Lead dots</source>
          <target state="translated">Lead dots</target>
        </trans-unit>
        <trans-unit id="a23adefd3c3b9b04bc52bfd388dece3d30961c4a" translate="yes" xml:space="preserve">
          <source>Lead equals</source>
          <target state="translated">리드가 같음</target>
        </trans-unit>
        <trans-unit id="512d7e4f9f1083327230b0cec40717055ae68aa7" translate="yes" xml:space="preserve">
          <source>Lead hyphens</source>
          <target state="translated">리드 하이픈</target>
        </trans-unit>
        <trans-unit id="90ea1b43020b77280a7864d13aeda96bc3f9e90a" translate="yes" xml:space="preserve">
          <source>Lead none</source>
          <target state="translated">리드 없음</target>
        </trans-unit>
        <trans-unit id="711a5b31de1d3b427237a4bf38bc1c0afba064eb" translate="yes" xml:space="preserve">
          <source>Lead row.</source>
          <target state="translated">리드 행.</target>
        </trans-unit>
        <trans-unit id="eb0b3f6ffc9e1ca94aef5bd562ce4be63c0600fe" translate="yes" xml:space="preserve">
          <source>Lead thickline</source>
          <target state="translated">납 굵은 선</target>
        </trans-unit>
        <trans-unit id="03c73df0e61cdac2a5e1a0f962a7efe43f15b3e2" translate="yes" xml:space="preserve">
          <source>Lead underline</source>
          <target state="translated">리드 밑줄</target>
        </trans-unit>
        <trans-unit id="64fe1193e910192ff1bf69270be124c63144252f" translate="yes" xml:space="preserve">
          <source>Leading and trailing white space characters are removed from non-hexadecimal attribute values (unless the value consists entirely of white space characters)</source>
          <target state="translated">선행 및 후행 공백 문자는 16 진수가 아닌 속성 값에서 제거됩니다 (값이 공백 문자로 완전히 구성되지 않은 경우)</target>
        </trans-unit>
        <trans-unit id="c43fd8a6075d9219d86182a1c859123215815421" translate="yes" xml:space="preserve">
          <source>Leading and trailing whitespace characters in &lt;code&gt;s&lt;/code&gt; are ignored. Whitespace is removed as if by the &lt;a href=&quot;string#trim()&quot;&gt;&lt;code&gt;String.trim()&lt;/code&gt;&lt;/a&gt; method; that is, both ASCII space and control characters are removed. The rest of &lt;code&gt;s&lt;/code&gt; should constitute a</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 의 선행 및 후행 공백 문자 는 무시됩니다. 공백은 &lt;a href=&quot;string#trim()&quot;&gt; &lt;code&gt;String.trim()&lt;/code&gt; &lt;/a&gt; 메서드에 의해 제거됩니다 . 즉, ASCII 공백과 제어 문자가 모두 제거됩니다. 의 나머지 부분 &lt;code&gt;s&lt;/code&gt; 를 구성해야</target>
        </trans-unit>
        <trans-unit id="17e228df1596918b53f03cb2c9cf50dbbd603fea" translate="yes" xml:space="preserve">
          <source>Leading and trailing whitespace characters in &lt;code&gt;s&lt;/code&gt; are ignored. Whitespace is removed as if by the &lt;a href=&quot;string#trim--&quot;&gt;&lt;code&gt;String.trim()&lt;/code&gt;&lt;/a&gt; method; that is, both ASCII space and control characters are removed. The rest of &lt;code&gt;s&lt;/code&gt; should constitute a</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 의 선행 및 후행 공백 문자 는 무시됩니다. 공백은 마치 &lt;a href=&quot;string#trim--&quot;&gt; &lt;code&gt;String.trim()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 제거됩니다 . 즉, ASCII 공간과 제어 문자가 모두 제거됩니다. 의 나머지 부분 &lt;code&gt;s&lt;/code&gt; 를 구성해야</target>
        </trans-unit>
        <trans-unit id="1135cd7d26b733b2d32cd74c08ecd2da994f36a2" translate="yes" xml:space="preserve">
          <source>Leading period&lt;code&gt;/&lt;/code&gt;dot characters in file name are treated as regular characters in match operations. For example, the &lt;code&gt;&quot;*&quot;&lt;/code&gt; glob pattern matches file name &lt;code&gt;&quot;.login&quot;&lt;/code&gt;. The &lt;a href=&quot;files#isHidden(java.nio.file.Path)&quot;&gt;&lt;code&gt;Files.isHidden(java.nio.file.Path)&lt;/code&gt;&lt;/a&gt; method may be used to test whether a file is considered hidden.</source>
          <target state="translated">파일 이름의 선행 마침표 &lt;code&gt;/&lt;/code&gt; 점 문자는 일치 작업에서 일반 문자로 처리됩니다. 예를 들어, &lt;code&gt;&quot;*&quot;&lt;/code&gt; glob 패턴은 파일 이름 &lt;code&gt;&quot;.login&quot;&lt;/code&gt; 과 일치합니다 . &lt;a href=&quot;files#isHidden(java.nio.file.Path)&quot;&gt; &lt;code&gt;Files.isHidden(java.nio.file.Path)&lt;/code&gt; &lt;/a&gt; 파일이 숨겨진 것으로 간주되는지 여부는 시험 방법에 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="1177291c038ece887e7e67f698371d75bfa1c149" translate="yes" xml:space="preserve">
          <source>Leading period&lt;code&gt;/&lt;/code&gt;dot characters in file name are treated as regular characters in match operations. For example, the &lt;code&gt;&quot;*&quot;&lt;/code&gt; glob pattern matches file name &lt;code&gt;&quot;.login&quot;&lt;/code&gt;. The &lt;a href=&quot;files#isHidden-java.nio.file.Path-&quot;&gt;&lt;code&gt;Files.isHidden(java.nio.file.Path)&lt;/code&gt;&lt;/a&gt; method may be used to test whether a file is considered hidden.</source>
          <target state="translated">파일 이름의 선행 마침표 &lt;code&gt;/&lt;/code&gt; 점 문자는 일치 작업에서 일반 문자로 취급됩니다. 예를 들어 &lt;code&gt;&quot;*&quot;&lt;/code&gt; glob 패턴은 파일 이름 &lt;code&gt;&quot;.login&quot;&lt;/code&gt; 과 일치합니다 . &lt;a href=&quot;files#isHidden-java.nio.file.Path-&quot;&gt; &lt;code&gt;Files.isHidden(java.nio.file.Path)&lt;/code&gt; &lt;/a&gt; 파일이 숨겨진 것으로 간주되는지 여부는 시험 방법에 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="4ac83d7345c01abe88cd9a45646608891c898387" translate="yes" xml:space="preserve">
          <source>Leading zeros are removed from attribute types that are encoded as dotted decimal OIDs</source>
          <target state="translated">점으로 구분 된 10 진수 OID로 인코딩 된 속성 유형에서 선행 0이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="1683f548d3aa2536d0795fa473cc212b3359a2ec" translate="yes" xml:space="preserve">
          <source>LeafElement</source>
          <target state="translated">LeafElement</target>
        </trans-unit>
        <trans-unit id="b24ef8c7cc03f17142ed2723d0619273ed293cca" translate="yes" xml:space="preserve">
          <source>Lease</source>
          <target state="translated">Lease</target>
        </trans-unit>
        <trans-unit id="9f6eb69be0b208fd258cc00e35802147e69cc4c5" translate="yes" xml:space="preserve">
          <source>Leave a multicast group on a specified local interface.</source>
          <target state="translated">멀티 캐스트 그룹을 지정된 로컬 인터페이스에 두십시오.</target>
        </trans-unit>
        <trans-unit id="062135bccc4fb8381e10842d607a1504bd5fde53" translate="yes" xml:space="preserve">
          <source>Leave a multicast group.</source>
          <target state="translated">멀티 캐스트 그룹을 떠나십시오.</target>
        </trans-unit>
        <trans-unit id="02b6d67ce96b3d487785f98089110b8596e0d177" translate="yes" xml:space="preserve">
          <source>Leave a multicast group. Its behavior may be affected by &lt;code&gt;setInterface&lt;/code&gt; or &lt;code&gt;setNetworkInterface&lt;/code&gt;.</source>
          <target state="translated">멀티 캐스트 그룹을 떠나십시오. 동작은 &lt;code&gt;setInterface&lt;/code&gt; 또는 &lt;code&gt;setNetworkInterface&lt;/code&gt; 의 영향을받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="450888c86fecf54eb6712dce9081b2b0ebda1557" translate="yes" xml:space="preserve">
          <source>Leave the multicast group.</source>
          <target state="translated">멀티 캐스트 그룹을 떠나십시오.</target>
        </trans-unit>
        <trans-unit id="1d8669b383c7166984f1f01718a397b8f14ba6e0" translate="yes" xml:space="preserve">
          <source>Leaving the existing model in place means that the old view will be torn down, and a new view created, where replacing the document would avoid the tear down of the old view.</source>
          <target state="translated">기존 모델을 그대로두면 이전 뷰가 해체되고 새 뷰가 생성되어 문서를 교체하면 이전 뷰가 해체되는 것을 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07a0d41aa9a5f790fb956c94fe7e8164b91b9fa6" translate="yes" xml:space="preserve">
          <source>Left justifies the output. Spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) will be added at the end of the converted value as required to fill the minimum width of the field. If the width is not provided, then a &lt;a href=&quot;missingformatwidthexception&quot;&gt;&lt;code&gt;MissingFormatWidthException&lt;/code&gt;&lt;/a&gt; will be thrown. If this flag is not given then the output will be right-justified.</source>
          <target state="translated">왼쪽은 출력을 정당화합니다. 필드의 최소 너비를 채우는 데 필요한대로 변환 된 값의 끝에 공백 ( &lt;code&gt;'\u0020'&lt;/code&gt; )이 추가됩니다. 너비가 제공되지 않으면 &lt;a href=&quot;missingformatwidthexception&quot;&gt; &lt;code&gt;MissingFormatWidthException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 이 플래그를 지정하지 않으면 출력이 오른쪽 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="ca17c7d8756e5ac9055d108c5bf7f09686003f52" translate="yes" xml:space="preserve">
          <source>Left-justifies the output.</source>
          <target state="translated">출력을 왼쪽 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="880c6932aadf8b86bc07a4552cc2eeb3dc3ba0b4" translate="yes" xml:space="preserve">
          <source>Left-justifies the output. Spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) will be added at the end of the converted value as required to fill the minimum width of the field. If this flag is not set then the output will be right-justified.</source>
          <target state="translated">출력을 왼쪽으로 맞 춥니 다. 필드의 최소 너비를 채우는 데 필요한대로 변환 된 값의 끝에 공백 ( &lt;code&gt;'\u0020'&lt;/code&gt; )이 추가됩니다. 이 플래그를 설정하지 않으면 출력이 오른쪽 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="b477b613f737e4568a6d43015f0e210cf36726c6" translate="yes" xml:space="preserve">
          <source>Left-to-right cache</source>
          <target state="translated">왼쪽에서 오른쪽으로 캐시</target>
        </trans-unit>
        <trans-unit id="a62baa20970aad0f3f49fed7a5a8a58fced1b5e9" translate="yes" xml:space="preserve">
          <source>Left-to-right run direction.</source>
          <target state="translated">왼쪽에서 오른쪽 실행 방향.</target>
        </trans-unit>
        <trans-unit id="1d45ccf124e62392ef3b243a7d5de2ef030c8652" translate="yes" xml:space="preserve">
          <source>LeftIndent</source>
          <target state="translated">LeftIndent</target>
        </trans-unit>
        <trans-unit id="8779e3785a7a63a7e184d9f193e004a8c14be600" translate="yes" xml:space="preserve">
          <source>Legacy language codes</source>
          <target state="translated">레거시 언어 코드</target>
        </trans-unit>
        <trans-unit id="9a63cd2e77cc47217c11115437dd4f1ea44f4d2a" translate="yes" xml:space="preserve">
          <source>Legacy method testing if some key maps into the specified value in this table. This method is identical in functionality to &lt;a href=&quot;concurrenthashmap#containsValue-java.lang.Object-&quot;&gt;&lt;code&gt;containsValue(Object)&lt;/code&gt;&lt;/a&gt;, and exists solely to ensure full compatibility with class &lt;a href=&quot;../hashtable&quot;&gt;&lt;code&gt;Hashtable&lt;/code&gt;&lt;/a&gt;, which supported this method prior to introduction of the Java Collections framework.</source>
          <target state="translated">일부 키가이 테이블의 지정된 값에 매핑되는지 여부를 레거시 메서드 테스트 이 메소드는 기능적으로 &lt;a href=&quot;concurrenthashmap#containsValue-java.lang.Object-&quot;&gt; &lt;code&gt;containsValue(Object)&lt;/code&gt; &lt;/a&gt; 와 동일하며 , Java Collections 프레임 워크를 도입하기 전에이 메소드를 지원 한 &lt;a href=&quot;../hashtable&quot;&gt; &lt;code&gt;Hashtable&lt;/code&gt; &lt;/a&gt; 클래스와의 완전한 호환성을 보장하기 위해서만 존재합니다 .</target>
        </trans-unit>
        <trans-unit id="24418ad2a9a333550355b98ebd26d6d873f96002" translate="yes" xml:space="preserve">
          <source>Legal and illegal values are defined in RFC 2253. This method is generous in accepting the values and does not catch all illegal values. Therefore, passing in an illegal value might not necessarily trigger an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">법적 및 불법 가치는 RFC 2253에 정의되어 있습니다.이 방법은 가치를 받아들이는 데 관대하며 모든 불법 가치를 포착하지는 않습니다. 따라서 잘못된 값을 전달하면 반드시 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 트리거 될 필요는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="f5b53b44cc491ea78c0b2b13fdf834f80366af84" translate="yes" xml:space="preserve">
          <source>Legal characters</source>
          <target state="translated">법적 문자</target>
        </trans-unit>
        <trans-unit id="d400856e17d19f1efcdb980014b5b84f678fcd7c" translate="yes" xml:space="preserve">
          <source>Legal values for an attribute or parameter. See &lt;a href=&quot;openmbean/package-summary&quot;&gt;&lt;code&gt;javax.management.openmbean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">속성 또는 매개 변수의 올바른 값 &lt;a href=&quot;openmbean/package-summary&quot;&gt; &lt;code&gt;javax.management.openmbean&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2cd662234cf999bf7939ccb1808cfd346209e3c9" translate="yes" xml:space="preserve">
          <source>Length of input buffer.</source>
          <target state="translated">입력 버퍼 길이.</target>
        </trans-unit>
        <trans-unit id="72390f05353a8f5e9abf35d4bff7ddcfc3c37d78" translate="yes" xml:space="preserve">
          <source>Length of the byte array</source>
          <target state="translated">바이트 배열의 길이</target>
        </trans-unit>
        <trans-unit id="8f8917c6be983b9133ef2f87a1702d17142e1be2" translate="yes" xml:space="preserve">
          <source>Length of the character array x 2</source>
          <target state="translated">문자 배열의 길이 x 2</target>
        </trans-unit>
        <trans-unit id="c8914de649cae9bc9c7aac4862da8a20530c0cc8" translate="yes" xml:space="preserve">
          <source>Length of the string x 2</source>
          <target state="translated">끈의 길이 x 2</target>
        </trans-unit>
        <trans-unit id="2d3130567e41543d03fa43e53dfe2f5f3cfdf556" translate="yes" xml:space="preserve">
          <source>Leniency</source>
          <target state="translated">Leniency</target>
        </trans-unit>
        <trans-unit id="ef5fe1edf37940bd463fee8eda068dc8d66b0f8a" translate="yes" xml:space="preserve">
          <source>Let</source>
          <target state="translated">Let</target>
        </trans-unit>
        <trans-unit id="97e8c0fee835338758f9ef5104dd9331486d93f0" translate="yes" xml:space="preserve">
          <source>Let &lt;em&gt;T0&lt;/em&gt; and &lt;em&gt;T1&lt;/em&gt; be corresponding new and old parameter types, or old and new return types. Specifically, for some valid index &lt;code&gt;i&lt;/code&gt;, let &lt;em&gt;T0&lt;/em&gt;&lt;code&gt;=newType.parameterType(i)&lt;/code&gt; and &lt;em&gt;T1&lt;/em&gt;&lt;code&gt;=this.type().parameterType(i)&lt;/code&gt;. Or else, going the other way for return values, let &lt;em&gt;T0&lt;/em&gt;&lt;code&gt;=this.type().returnType()&lt;/code&gt; and &lt;em&gt;T1&lt;/em&gt;&lt;code&gt;=newType.returnType()&lt;/code&gt;. If the types are the same, the new method handle makes no change to the corresponding argument or return value (if any). Otherwise, one of the following conversions is applied if possible:</source>
          <target state="translated">하자 &lt;em&gt;T0&lt;/em&gt; 와 &lt;em&gt;T1은&lt;/em&gt; 신규 및 기존 매개 변수 유형, 또는 과거와 반환 형식에 해당합니다. 특히 유효한 인덱스 &lt;code&gt;i&lt;/code&gt; 의 경우 &lt;em&gt;T0 &lt;/em&gt; &lt;code&gt;=newType.parameterType(i)&lt;/code&gt; 및 &lt;em&gt;T1 &lt;/em&gt; &lt;code&gt;=this.type().parameterType(i)&lt;/code&gt; . 또는 다른 방법으로 반환 값을 &lt;code&gt;=this.type().returnType()&lt;/code&gt; &lt;em&gt;T0 &lt;/em&gt;= this.type (). returnType () 및 &lt;em&gt;T1 &lt;/em&gt; &lt;code&gt;=newType.returnType()&lt;/code&gt; . 유형이 동일한 경우 새 메소드 핸들은 해당 인수 또는 리턴 값 (있는 경우)을 변경하지 않습니다. 그렇지 않으면 가능한 경우 다음 변환 중 하나가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="2a979d2e95e7ec2419c02578612ecae4cf54b0c8" translate="yes" xml:space="preserve">
          <source>Let CookieManager be the default &lt;a href=&quot;cookiehandler&quot;&gt;&lt;code&gt;CookieHandler&lt;/code&gt;&lt;/a&gt; implementation, but implement user's own &lt;a href=&quot;cookiestore&quot;&gt;&lt;code&gt;CookieStore&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cookiepolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; and tell default CookieManager to use them:</source>
          <target state="translated">CookieManager를 기본 &lt;a href=&quot;cookiehandler&quot;&gt; &lt;code&gt;CookieHandler&lt;/code&gt; &lt;/a&gt; 구현 으로 설정 하고 사용자 자신의 &lt;a href=&quot;cookiestore&quot;&gt; &lt;code&gt;CookieStore&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;cookiepolicy&quot;&gt; &lt;code&gt;CookiePolicy&lt;/code&gt; 를&lt;/a&gt; 구현 하고 기본 CookieManager에이를 사용하도록 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="327bfcf496b36eac5ca741f928db0bf0dbc61446" translate="yes" xml:space="preserve">
          <source>Let CookieManager be the default &lt;a href=&quot;cookiehandler&quot;&gt;&lt;code&gt;CookieHandler&lt;/code&gt;&lt;/a&gt; implementation, but use customized &lt;a href=&quot;cookiepolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">CookieManager를 기본 &lt;a href=&quot;cookiehandler&quot;&gt; &lt;code&gt;CookieHandler&lt;/code&gt; &lt;/a&gt; 구현으로 설정하고 사용자 정의 된 &lt;a href=&quot;cookiepolicy&quot;&gt; &lt;code&gt;CookiePolicy&lt;/code&gt; 를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee14050617b7b58e17aabccd61c241ccdafc6379" translate="yes" xml:space="preserve">
          <source>Letter</source>
          <target state="translated">Letter</target>
        </trans-unit>
        <trans-unit id="bf2ba364cc3c6b4c5134d77c6cdc6757d411db98" translate="yes" xml:space="preserve">
          <source>Letter &lt;em&gt;L&lt;/em&gt; produces the standalone form of month names.</source>
          <target state="translated">문자 &lt;em&gt;L&lt;/em&gt; 은 독립형 월 이름 형식을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="b8ffc35338c567e275ace385148cb2c9445595f2" translate="yes" xml:space="preserve">
          <source>Letter &lt;em&gt;M&lt;/em&gt; produces context-sensitive month names, such as the embedded form of names. If a &lt;code&gt;DateFormatSymbols&lt;/code&gt; has been set explicitly with constructor &lt;a href=&quot;simpledateformat#SimpleDateFormat-java.lang.String-java.text.DateFormatSymbols-&quot;&gt;&lt;code&gt;SimpleDateFormat(String,
         DateFormatSymbols)&lt;/code&gt;&lt;/a&gt; or method &lt;a href=&quot;simpledateformat#setDateFormatSymbols-java.text.DateFormatSymbols-&quot;&gt;&lt;code&gt;setDateFormatSymbols(DateFormatSymbols)&lt;/code&gt;&lt;/a&gt;, the month names given by the &lt;code&gt;DateFormatSymbols&lt;/code&gt; are used.</source>
          <target state="translated">문자 &lt;em&gt;M&lt;/em&gt; 은 포함 된 이름 형식과 같이 상황에 맞는 월 이름을 생성합니다. 생성자 &lt;a href=&quot;simpledateformat#SimpleDateFormat-java.lang.String-java.text.DateFormatSymbols-&quot;&gt; &lt;code&gt;SimpleDateFormat(String, DateFormatSymbols)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;simpledateformat#setDateFormatSymbols-java.text.DateFormatSymbols-&quot;&gt; &lt;code&gt;setDateFormatSymbols(DateFormatSymbols)&lt;/code&gt; &lt;/a&gt; 메소드를 사용 하여 &lt;code&gt;DateFormatSymbols&lt;/code&gt; 를 명시 적으로 설정 한 경우 &lt;code&gt;DateFormatSymbols&lt;/code&gt; 에서 제공 한 월 이름 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="97cc671d8fb4c41c8191fdd7eab96ccf9a3b3f86" translate="yes" xml:space="preserve">
          <source>Letter &lt;em&gt;M&lt;/em&gt; produces context-sensitive month names, such as the embedded form of names. Letter &lt;em&gt;M&lt;/em&gt; is context-sensitive in the sense that when it is used in the standalone pattern, for example, &quot;MMMM&quot;, it gives the standalone form of a month name and when it is used in the pattern containing other field(s), for example, &quot;d MMMM&quot;, it gives the format form of a month name. For example, January in the Catalan language is &quot;de gener&quot; in the format form while it is &quot;gener&quot; in the standalone form. In this case, &quot;MMMM&quot; will produce &quot;gener&quot; and the month part of the &quot;d MMMM&quot; will produce &quot;de gener&quot;. If a &lt;code&gt;DateFormatSymbols&lt;/code&gt; has been set explicitly with constructor &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.text.DateFormatSymbols)&quot;&gt;&lt;code&gt;SimpleDateFormat(String,DateFormatSymbols)&lt;/code&gt;&lt;/a&gt; or method &lt;a href=&quot;#setDateFormatSymbols(java.text.DateFormatSymbols)&quot;&gt;&lt;code&gt;setDateFormatSymbols(DateFormatSymbols)&lt;/code&gt;&lt;/a&gt;, the month names given by the &lt;code&gt;DateFormatSymbols&lt;/code&gt; are used.</source>
          <target state="translated">문자 &lt;em&gt;M&lt;/em&gt; 은 이름의 포함 된 형식과 같이 상황에 맞는 월 이름을 생성합니다. 문자 &lt;em&gt;M&lt;/em&gt; 은 독립형 패턴 (예 : &quot;MMMM&quot;)에서 사용될 때 월 이름의 독립형 형태를 제공하고 다른 필드를 포함하는 패턴에서 사용될 때 문맥에 민감합니다. 예를 들어 &quot;d MMMM&quot;은 월 이름의 형식을 제공합니다. 예를 들어, 카탈로니아 어로 1 월은 형식 형식에서 &quot;de gener&quot;이고 독립 실행 형 형식에서는 &quot;gener&quot;입니다. 이 경우 &quot;MMMM&quot;은 &quot;gener&quot;를 생성하고 &quot;d MMMM&quot;의 월 부분은 &quot;de gener&quot;를 생성합니다. 경우 &lt;code&gt;DateFormatSymbols&lt;/code&gt; 생성자를 명시 적으로 설정되어있는 &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.text.DateFormatSymbols)&quot;&gt; &lt;code&gt;SimpleDateFormat(String,DateFormatSymbols)&lt;/code&gt; &lt;/a&gt;DateFormatSymbols) 또는 메서드&lt;a href=&quot;#setDateFormatSymbols(java.text.DateFormatSymbols)&quot;&gt; &lt;code&gt;setDateFormatSymbols(DateFormatSymbols)&lt;/code&gt; &lt;/a&gt; ,에 의해 주어진 달 이름 &lt;code&gt;DateFormatSymbols&lt;/code&gt; 사용된다.</target>
        </trans-unit>
        <trans-unit id="7c7f5d049fad2569721d446c4a811f9bd5da5393" translate="yes" xml:space="preserve">
          <source>Level</source>
          <target state="translated">Level</target>
        </trans-unit>
        <trans-unit id="c6e4c7482a71f0a109214c654d187bda37b43545" translate="yes" xml:space="preserve">
          <source>Level.equals()</source>
          <target state="translated">Level.equals()</target>
        </trans-unit>
        <trans-unit id="feb28ff338f3eeb1c6901d34468e66bf986d7f7c" translate="yes" xml:space="preserve">
          <source>Level.getLocalizedName()</source>
          <target state="translated">Level.getLocalizedName()</target>
        </trans-unit>
        <trans-unit id="5c4cd8c9cf58e27437fabb8d7f12bb7b8da1e961" translate="yes" xml:space="preserve">
          <source>Level.getName()</source>
          <target state="translated">Level.getName()</target>
        </trans-unit>
        <trans-unit id="620d8b53d52291c08617b324e02e139755c61d42" translate="yes" xml:space="preserve">
          <source>Level.getResourceBundleName()</source>
          <target state="translated">Level.getResourceBundleName()</target>
        </trans-unit>
        <trans-unit id="23c6f64b498a76441661421a7dcca4cc0d53beb6" translate="yes" xml:space="preserve">
          <source>Level.hashCode()</source>
          <target state="translated">Level.hashCode()</target>
        </trans-unit>
        <trans-unit id="ba7695b9441c0f023647a202ec632c1922cd5572" translate="yes" xml:space="preserve">
          <source>Level.intValue()</source>
          <target state="translated">Level.intValue()</target>
        </trans-unit>
        <trans-unit id="1cfb11c8e9ad9ce4dd0c07ac8293313517ebab34" translate="yes" xml:space="preserve">
          <source>Level.parse()</source>
          <target state="translated">Level.parse()</target>
        </trans-unit>
        <trans-unit id="0d1487e976785c40fa9123cce4a4eb4170cb8ab3" translate="yes" xml:space="preserve">
          <source>Level.toString()</source>
          <target state="translated">Level.toString()</target>
        </trans-unit>
        <trans-unit id="8c4cebe43ba4d9125712c6a82c16d5f4295c47de" translate="yes" xml:space="preserve">
          <source>Lexical token streams.</source>
          <target state="translated">어휘 토큰 스트림.</target>
        </trans-unit>
        <trans-unit id="8873a21df96b14924d6c3492beabdefc206ccb48" translate="yes" xml:space="preserve">
          <source>LexicalHandler</source>
          <target state="translated">LexicalHandler</target>
        </trans-unit>
        <trans-unit id="0cf152fa327336fad3a1f8b3cb418cf75bdf9f0f" translate="yes" xml:space="preserve">
          <source>Libraries and classes that only need loggers to produce log messages should not attempt to configure loggers by themselves, as that would make them dependent from a specific implementation of the &lt;code&gt;LoggerFinder&lt;/code&gt; service.</source>
          <target state="translated">로그 메시지를 생성하기 위해 로거 만 필요한 라이브러리와 클래스는 &lt;code&gt;LoggerFinder&lt;/code&gt; 서비스 의 특정 구현에 종속되게 만들 수 있으므로 로거를 스스로 구성하지 않아야 합니다.</target>
        </trans-unit>
        <trans-unit id="20294bdfb9dbfe6bee77cf2b3c74b2a242816410" translate="yes" xml:space="preserve">
          <source>Libraries that implement reduction based on &lt;code&gt;Collector&lt;/code&gt;, such as &lt;a href=&quot;stream#collect(java.util.stream.Collector)&quot;&gt;&lt;code&gt;Stream.collect(Collector)&lt;/code&gt;&lt;/a&gt;, must adhere to the following constraints:</source>
          <target state="translated">&lt;a href=&quot;stream#collect(java.util.stream.Collector)&quot;&gt; &lt;code&gt;Stream.collect(Collector)&lt;/code&gt; &lt;/a&gt; 와 같이 &lt;code&gt;Collector&lt;/code&gt; 를 기반으로 축소를 구현하는 라이브러리 는 다음 제약 조건을 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="4bbcc5e32cacd2ee7820a882ee68a56f7004c838" translate="yes" xml:space="preserve">
          <source>Libraries that implement reduction based on &lt;code&gt;Collector&lt;/code&gt;, such as &lt;a href=&quot;stream#collect-java.util.stream.Collector-&quot;&gt;&lt;code&gt;Stream.collect(Collector)&lt;/code&gt;&lt;/a&gt;, must adhere to the following constraints:</source>
          <target state="translated">&lt;a href=&quot;stream#collect-java.util.stream.Collector-&quot;&gt; &lt;code&gt;Stream.collect(Collector)&lt;/code&gt; &lt;/a&gt; 와 같이 &lt;code&gt;Collector&lt;/code&gt; 기반의 축소를 구현하는 라이브러리 는 다음 제약 조건을 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="abac7177d51531db621c5da227c08e6d90472274" translate="yes" xml:space="preserve">
          <source>Licensed under the GNU General Public License, version 2, with the Classpath Exception.</source>
          <target state="translated">Classpath Exception과 함께 GNU General Public License, 버전 2에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="084075b0eef12991c9ec180c5e604167bc9b78b0" translate="yes" xml:space="preserve">
          <source>Lifetime of Registration</source>
          <target state="translated">등록 평생</target>
        </trans-unit>
        <trans-unit id="c96cf24270d9c499a589a4886438ba6e7d3500bb" translate="yes" xml:space="preserve">
          <source>Ligature caret.</source>
          <target state="translated">합자 캐럿.</target>
        </trans-unit>
        <trans-unit id="46c5bac764bcc69a9135abc3f69463818e54e250" translate="yes" xml:space="preserve">
          <source>Ligature caret. Table tag &quot;lcar&quot; in the Open Type Specification.</source>
          <target state="translated">합자 캐럿. Open Type 사양의 테이블 태그 「lcar」입니다.</target>
        </trans-unit>
        <trans-unit id="64a553bd7185885cc1e2e24fa7317b1be1abfdfb" translate="yes" xml:space="preserve">
          <source>Ligatures required by the writing system are always enabled.</source>
          <target state="translated">쓰기 시스템에 필요한 합자는 항상 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="df67c5132808e52c19e79f4704f40fa5452b636f" translate="yes" xml:space="preserve">
          <source>Light highlight color</source>
          <target state="translated">밝은 하이라이트 색상</target>
        </trans-unit>
        <trans-unit id="2f94b6e86c1a16ab8d13ce2d826c958d2ef30548" translate="yes" xml:space="preserve">
          <source>Lightweight and heavyweight components may be mixed in a single component hierarchy. However, for correct operating of such a mixed hierarchy of components, the whole hierarchy must be valid. When the hierarchy gets invalidated, like after changing the bounds of components, or adding/removing components to/from containers, the whole hierarchy must be validated afterwards by means of the &lt;a href=&quot;container#validate()&quot;&gt;&lt;code&gt;Container.validate()&lt;/code&gt;&lt;/a&gt; method invoked on the top-most invalid container of the hierarchy.</source>
          <target state="translated">경량 및 중량 구성 요소는 단일 구성 요소 계층에서 혼합 될 수 있습니다. 그러나 이러한 혼합 된 구성 요소 계층 구조를 올바르게 작동하려면 전체 계층 구조가 유효해야합니다. 구성 요소의 경계를 변경하거나 컨테이너에 구성 요소를 추가 / 제거한 후와 같이 계층 구조가 무효화되면 이후에 가장 잘못된 컨테이너에서 호출 된 &lt;a href=&quot;container#validate()&quot;&gt; &lt;code&gt;Container.validate()&lt;/code&gt; &lt;/a&gt; 메서드를 통해 전체 계층 구조의 유효성을 검사해야합니다. 계층.</target>
        </trans-unit>
        <trans-unit id="78e27887ebe6a6a525209be6fa34668692cb367b" translate="yes" xml:space="preserve">
          <source>Lightweight popup enabled.</source>
          <target state="translated">경량 팝업이 활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="e4a13ab63d6adc0f8c359f51ad04568dd0de4c57" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#characters(char%5B%5D,int,int)&quot;&gt;&lt;code&gt;characters()&lt;/code&gt;&lt;/a&gt;, attribute values may have characters that need more than one &lt;code&gt;char&lt;/code&gt; value.</source>
          <target state="translated">&lt;a href=&quot;#characters(char%5B%5D,int,int)&quot;&gt; &lt;code&gt;characters()&lt;/code&gt; &lt;/a&gt; 와 마찬가지로 속성 값에는 둘 이상의 &lt;code&gt;char&lt;/code&gt; 값 이 필요한 문자가있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9ee44ca961b41dafbf9504c56d1c549bad7dac2b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#characters(char%5B%5D,int,int)&quot;&gt;&lt;code&gt;characters()&lt;/code&gt;&lt;/a&gt;, processing instruction data may have characters that need more than one &lt;code&gt;char&lt;/code&gt; value.</source>
          <target state="translated">&lt;a href=&quot;#characters(char%5B%5D,int,int)&quot;&gt; &lt;code&gt;characters()&lt;/code&gt; &lt;/a&gt; 와 마찬가지로 처리 명령 데이터에는 둘 이상의 &lt;code&gt;char&lt;/code&gt; 값 이 필요한 문자가있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ae7e893720e6f0bfe7239b2a48cef517da9275cd" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#getHandshakeSession()&quot;&gt;&lt;code&gt;getHandshakeSession()&lt;/code&gt;&lt;/a&gt;, a connection may be in the middle of a handshake. The application protocol may or may not yet be available.</source>
          <target state="translated">&lt;a href=&quot;#getHandshakeSession()&quot;&gt; &lt;code&gt;getHandshakeSession()&lt;/code&gt; &lt;/a&gt; 과 마찬가지로 연결이 핸드 셰이크 중간에있을 수 있습니다. 응용 프로그램 프로토콜은 아직 사용 가능할 수도 있고 사용 가능하지 않을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="498b9d25e3ee82d3e94c092ab9bd0a14104f9368" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#reduce(T,java.util.function.BinaryOperator)&quot;&gt;&lt;code&gt;reduce(Object, BinaryOperator)&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;collect&lt;/code&gt; operations can be parallelized without requiring additional synchronization.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#reduce(T,java.util.function.BinaryOperator)&quot;&gt; &lt;code&gt;reduce(Object, BinaryOperator)&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;collect&lt;/code&gt; 작업이 추가로 동기화 할 필요없이 병렬화 될 수있다.</target>
        </trans-unit>
        <trans-unit id="28f5953153877ca2b19e3e2d074e4e72cd58f9d2" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#reduce(double,java.util.function.DoubleBinaryOperator)&quot;&gt;&lt;code&gt;reduce(double, DoubleBinaryOperator)&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;collect&lt;/code&gt; operations can be parallelized without requiring additional synchronization.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#reduce(double,java.util.function.DoubleBinaryOperator)&quot;&gt; &lt;code&gt;reduce(double, DoubleBinaryOperator)&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;collect&lt;/code&gt; 작업이 추가로 동기화 할 필요없이 병렬화 될 수있다.</target>
        </trans-unit>
        <trans-unit id="13681c4310a6c2476efb5225a30d0381d7b75ce1" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#reduce(int,java.util.function.IntBinaryOperator)&quot;&gt;&lt;code&gt;reduce(int, IntBinaryOperator)&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;collect&lt;/code&gt; operations can be parallelized without requiring additional synchronization.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#reduce(int,java.util.function.IntBinaryOperator)&quot;&gt; &lt;code&gt;reduce(int, IntBinaryOperator)&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;collect&lt;/code&gt; 작업이 추가로 동기화 할 필요없이 병렬화 될 수있다.</target>
        </trans-unit>
        <trans-unit id="cb58bc8675a1b5eb3c065c8f59c0401cd53e13eb" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#reduce(long,java.util.function.LongBinaryOperator)&quot;&gt;&lt;code&gt;reduce(long, LongBinaryOperator)&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;collect&lt;/code&gt; operations can be parallelized without requiring additional synchronization.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#reduce(long,java.util.function.LongBinaryOperator)&quot;&gt; &lt;code&gt;reduce(long, LongBinaryOperator)&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;collect&lt;/code&gt; 작업이 추가로 동기화 할 필요없이 병렬화 될 수있다.</target>
        </trans-unit>
        <trans-unit id="b85e07a22c2809c456ee6cd7b370a40b255246c6" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../hashtable&quot;&gt;&lt;code&gt;Hashtable&lt;/code&gt;&lt;/a&gt; but unlike &lt;a href=&quot;../hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt;, this class does &lt;em&gt;not&lt;/em&gt; allow &lt;code&gt;null&lt;/code&gt; to be used as a key or value.</source>
          <target state="translated">&lt;a href=&quot;../hashtable&quot;&gt; &lt;code&gt;Hashtable&lt;/code&gt; &lt;/a&gt; 과 유사 하지만 &lt;a href=&quot;../hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; 과 달리이 클래스는 &lt;code&gt;null&lt;/code&gt; 을 키 또는 값으로 사용할 수 &lt;em&gt;없습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="826b0b199766d647532014bccd6e7f03a8fc5d32" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../integer#valueOf(java.lang.String,int)&quot;&gt;&lt;code&gt;Integer.valueOf&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;asInterfaceInstance&lt;/code&gt; is a factory method whose results are defined by their behavior. It is not guaranteed to return a new instance for every call.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;../integer#valueOf(java.lang.String,int)&quot;&gt; &lt;code&gt;Integer.valueOf&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;asInterfaceInstance&lt;/code&gt; 는 그 결과 그들의 행동에 의해 정의된다 팩토리 메소드입니다. 모든 호출에 대해 새 인스턴스를 반환하는 것은 보장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="795c82c66282afeef8eaf593a38087e77229da56" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../integer#valueOf-java.lang.String-int-&quot;&gt;&lt;code&gt;Integer.valueOf&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;asInterfaceInstance&lt;/code&gt; is a factory method whose results are defined by their behavior. It is not guaranteed to return a new instance for every call.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;../integer#valueOf-java.lang.String-int-&quot;&gt; &lt;code&gt;Integer.valueOf&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;asInterfaceInstance&lt;/code&gt; 는 그 결과 그들의 행동에 의해 정의된다 팩토리 메소드입니다. 모든 통화에 대해 새 인스턴스를 반환한다고 보장 할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="50b4d029dd3a0957c6b7156e55efe45d4c604d37" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../semaphore&quot;&gt;&lt;code&gt;Semaphore&lt;/code&gt;&lt;/a&gt;, but unlike most &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; implementations, StampedLocks have no notion of ownership. Locks acquired in one thread can be released or converted in another.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;../semaphore&quot;&gt; &lt;code&gt;Semaphore&lt;/code&gt; &lt;/a&gt; 하지만, 대부분의 달리 &lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt; 구현, StampedLocks 소유하는 개념이 없습니다. 한 스레드에서 획득 한 잠금을 해제하거나 다른 스레드에서 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b6bce669ec08e3ce7312385dff95efc2d010ff7" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;doublestream#reduce-double-java.util.function.DoubleBinaryOperator-&quot;&gt;&lt;code&gt;reduce(double, DoubleBinaryOperator)&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;collect&lt;/code&gt; operations can be parallelized without requiring additional synchronization.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;doublestream#reduce-double-java.util.function.DoubleBinaryOperator-&quot;&gt; &lt;code&gt;reduce(double, DoubleBinaryOperator)&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;collect&lt;/code&gt; 작업이 추가로 동기화 할 필요없이 병렬화 될 수있다.</target>
        </trans-unit>
        <trans-unit id="62e2781c0afba19245ea58b5b8df929f48f086ca" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;intstream#reduce-int-java.util.function.IntBinaryOperator-&quot;&gt;&lt;code&gt;reduce(int, IntBinaryOperator)&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;collect&lt;/code&gt; operations can be parallelized without requiring additional synchronization.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;intstream#reduce-int-java.util.function.IntBinaryOperator-&quot;&gt; &lt;code&gt;reduce(int, IntBinaryOperator)&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;collect&lt;/code&gt; 작업이 추가로 동기화 할 필요없이 병렬화 될 수있다.</target>
        </trans-unit>
        <trans-unit id="dea415a60d02a44640428a026e6bb2ded41820de" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;longstream#reduce-long-java.util.function.LongBinaryOperator-&quot;&gt;&lt;code&gt;reduce(long, LongBinaryOperator)&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;collect&lt;/code&gt; operations can be parallelized without requiring additional synchronization.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;longstream#reduce-long-java.util.function.LongBinaryOperator-&quot;&gt; &lt;code&gt;reduce(long, LongBinaryOperator)&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;collect&lt;/code&gt; 작업이 추가로 동기화 할 필요없이 병렬화 될 수있다.</target>
        </trans-unit>
        <trans-unit id="1d8b8acd87e37a2a48fc272a13d647281bc4f951" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;stream#reduce-T-java.util.function.BinaryOperator-&quot;&gt;&lt;code&gt;reduce(Object, BinaryOperator)&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;collect&lt;/code&gt; operations can be parallelized without requiring additional synchronization.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;stream#reduce-T-java.util.function.BinaryOperator-&quot;&gt; &lt;code&gt;reduce(Object, BinaryOperator)&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;collect&lt;/code&gt; 작업이 추가로 동기화 할 필요없이 병렬화 될 수있다.</target>
        </trans-unit>
        <trans-unit id="fa86efbbd441ae8a66ccb21dca5df1d8aabe14dc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Context&lt;/code&gt; instances in general, instances of &lt;code&gt;EventContext&lt;/code&gt; are not guaranteed to be thread-safe. Care must be taken when multiple threads are accessing the same &lt;code&gt;EventContext&lt;/code&gt; concurrently. See the &lt;a href=&quot;package-summary#THREADING&quot;&gt;package description&lt;/a&gt; for more information on threading issues.</source>
          <target state="translated">일반적으로 &lt;code&gt;Context&lt;/code&gt; 인스턴스 와 마찬가지로 &lt;code&gt;EventContext&lt;/code&gt; 인스턴스는 스레드로부터 안전하지 않을 수 있습니다. 여러 스레드가 동일한 &lt;code&gt;EventContext&lt;/code&gt; 에 동시에 액세스하는 경우주의해야합니다 . 스레딩 문제에 대한 자세한 내용은 &lt;a href=&quot;package-summary#THREADING&quot;&gt;패키지 설명&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="785850c2049ce36c4e19fa4f9ea1f480c158bab9" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;java.sql.Date.toString()&lt;/code&gt; returns the contents of its DATE as the &lt;code&gt;String&lt;/code&gt; &quot;2004-03-17&quot; rather than as DATE literal in SQL (which would have been the &lt;code&gt;String&lt;/code&gt; DATE &quot;2004-03-17&quot;), toString() returns the contents of its ROWID in a form specific to the driver supplying the connection, and possibly not as a &lt;code&gt;ROWID&lt;/code&gt; literal.</source>
          <target state="translated">&lt;code&gt;java.sql.Date.toString()&lt;/code&gt; 과 마찬가지로 SQL의 DATE 리터럴 ( &lt;code&gt;String&lt;/code&gt; DATE &quot;2004-03-17&quot;)이 아닌 &lt;code&gt;String&lt;/code&gt; &quot;2004-03-17&quot; 로 DATE의 내용을 반환합니다 . toString ()은 &lt;code&gt;ROWID&lt;/code&gt; 리터럴 이 아닌 연결을 제공하는 드라이버에 특정한 형식으로 ROWID의 내용을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b54548b92723dc13080090aacc94af8c5bd9f073" translate="yes" xml:space="preserve">
          <source>Like C's &lt;code&gt;sprintf(3)&lt;/code&gt;, Strings may be formatted using the static method &lt;a href=&quot;../lang/string#format(java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;String.format&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">C의 &lt;code&gt;sprintf(3)&lt;/code&gt; 와 마찬가지로 Strings는 정적 메서드 &lt;a href=&quot;../lang/string#format(java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;String.format&lt;/code&gt; 을&lt;/a&gt; 사용하여 형식을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cbd400f15508ab0d61e88450d282848c8d9b16b1" translate="yes" xml:space="preserve">
          <source>Like C's &lt;code&gt;sprintf(3)&lt;/code&gt;, Strings may be formatted using the static method &lt;a href=&quot;../lang/string#format-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;String.format&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">C의 &lt;code&gt;sprintf(3)&lt;/code&gt; 과 마찬가지로 문자열은 정적 메서드 &lt;a href=&quot;../lang/string#format-java.lang.String-java.lang.Object...-&quot;&gt; &lt;code&gt;String.format&lt;/code&gt; 을&lt;/a&gt; 사용하여 형식을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="98363c01d42175a19cee456a5f236810f5941d81" translate="yes" xml:space="preserve">
          <source>Like a byte buffer, a char buffer is either &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; or &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt;. A char buffer created via the &lt;code&gt;wrap&lt;/code&gt; methods of this class will be non-direct. A char buffer created as a view of a byte buffer will be direct if, and only if, the byte buffer itself is direct. Whether or not a char buffer is direct may be determined by invoking the &lt;a href=&quot;#isDirect()&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">바이트 버퍼와 마찬가지로 char 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; 또는 &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt; 입니다. 이 클래스 의 &lt;code&gt;wrap&lt;/code&gt; 메소드를 통해 생성 된 char 버퍼 는 간접적입니다. 바이트 버퍼의 뷰로 생성 된 char 버퍼는 바이트 버퍼 자체가 직접적 일 경우에만 직접적입니다. char 버퍼가 직접인지 여부는 &lt;a href=&quot;#isDirect()&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="73ee787feca9c87a77ce3ea2a1afd775f3dd0a7d" translate="yes" xml:space="preserve">
          <source>Like a byte buffer, a char buffer is either &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; or &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt;. A char buffer created via the &lt;code&gt;wrap&lt;/code&gt; methods of this class will be non-direct. A char buffer created as a view of a byte buffer will be direct if, and only if, the byte buffer itself is direct. Whether or not a char buffer is direct may be determined by invoking the &lt;a href=&quot;charbuffer#isDirect--&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">바이트 버퍼와 마찬가지로 char 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; 또는 &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt; 입니다. 이 클래스 의 &lt;code&gt;wrap&lt;/code&gt; 메소드를 통해 작성된 char 버퍼 는 직접적이지 않습니다. 바이트 버퍼의 뷰로 생성 된 문자 버퍼는 바이트 버퍼 자체가 직접 인 경우에만 직접 사용됩니다. 문자 버퍼가 직접인지 여부는 &lt;a href=&quot;charbuffer#isDirect--&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 판별 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="33e263b04e127e6779161152d297e1b49cab0e05" translate="yes" xml:space="preserve">
          <source>Like a byte buffer, a double buffer is either &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; or &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt;. A double buffer created via the &lt;code&gt;wrap&lt;/code&gt; methods of this class will be non-direct. A double buffer created as a view of a byte buffer will be direct if, and only if, the byte buffer itself is direct. Whether or not a double buffer is direct may be determined by invoking the &lt;a href=&quot;#isDirect()&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">바이트 버퍼와 마찬가지로 이중 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; 또는 &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt; 입니다. 이 클래스 의 &lt;code&gt;wrap&lt;/code&gt; 메서드를 통해 생성 된 이중 버퍼 는 간접적입니다. 바이트 버퍼의 뷰로 생성 된 이중 버퍼는 바이트 버퍼 자체가 직접적 일 경우에만 직접적입니다. 이중 버퍼가 직접인지 여부는 &lt;a href=&quot;#isDirect()&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하여 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f935ec239126182c893954f682d294a4d96647a5" translate="yes" xml:space="preserve">
          <source>Like a byte buffer, a double buffer is either &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; or &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt;. A double buffer created via the &lt;code&gt;wrap&lt;/code&gt; methods of this class will be non-direct. A double buffer created as a view of a byte buffer will be direct if, and only if, the byte buffer itself is direct. Whether or not a double buffer is direct may be determined by invoking the &lt;a href=&quot;doublebuffer#isDirect--&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">바이트 버퍼와 마찬가지로 더블 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; 또는 &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt; 입니다. 이 클래스 의 &lt;code&gt;wrap&lt;/code&gt; 메소드를 통해 작성된 이중 버퍼 는 비 직접적입니다. 바이트 버퍼의 뷰로 생성 된 더블 버퍼는 바이트 버퍼 자체가 직접 인 경우에만 직접 사용됩니다. 이중 버퍼가 직접인지 여부는 &lt;a href=&quot;doublebuffer#isDirect--&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 판별 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5d96757c84042a29e257a1af665a679c3a4447f2" translate="yes" xml:space="preserve">
          <source>Like a byte buffer, a float buffer is either &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; or &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt;. A float buffer created via the &lt;code&gt;wrap&lt;/code&gt; methods of this class will be non-direct. A float buffer created as a view of a byte buffer will be direct if, and only if, the byte buffer itself is direct. Whether or not a float buffer is direct may be determined by invoking the &lt;a href=&quot;#isDirect()&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">바이트 버퍼와 마찬가지로 부동 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;직접&lt;/i&gt; 또는 &lt;i&gt;간접&lt;/i&gt;&lt;/a&gt; 입니다. 이 클래스 의 &lt;code&gt;wrap&lt;/code&gt; 메소드를 통해 생성 된 float 버퍼 는 간접적입니다. 바이트 버퍼의 뷰로 생성 된 부동 버퍼는 바이트 버퍼 자체가 직접적 일 경우에만 직접적입니다. 부동 버퍼가 직접인지 여부는 &lt;a href=&quot;#isDirect()&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하여 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="662ff7edaa566fe78f900ad688986e7bdec6eaa0" translate="yes" xml:space="preserve">
          <source>Like a byte buffer, a float buffer is either &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; or &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt;. A float buffer created via the &lt;code&gt;wrap&lt;/code&gt; methods of this class will be non-direct. A float buffer created as a view of a byte buffer will be direct if, and only if, the byte buffer itself is direct. Whether or not a float buffer is direct may be determined by invoking the &lt;a href=&quot;floatbuffer#isDirect--&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">바이트 버퍼와 마찬가지로 플로트 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; 또는 &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt; 입니다. 이 클래스 의 &lt;code&gt;wrap&lt;/code&gt; 메소드를 통해 작성된 플로트 버퍼 는 직접적이지 않습니다. 바이트 버퍼의 뷰로 작성된 부동 버퍼는 바이트 버퍼 자체가 직접 인 경우에만 직접적입니다. 플로트 버퍼가 직접인지 여부는 다음을 호출하여 확인할 수 있습니다.&lt;a href=&quot;floatbuffer#isDirect--&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; 메소드.</target>
        </trans-unit>
        <trans-unit id="6e941dae24fcc2452cdf8163f09601aa473b192a" translate="yes" xml:space="preserve">
          <source>Like a byte buffer, a long buffer is either &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; or &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt;. A long buffer created via the &lt;code&gt;wrap&lt;/code&gt; methods of this class will be non-direct. A long buffer created as a view of a byte buffer will be direct if, and only if, the byte buffer itself is direct. Whether or not a long buffer is direct may be determined by invoking the &lt;a href=&quot;#isDirect()&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">바이트 버퍼와 마찬가지로 긴 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; 또는 &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt; 입니다. 이 클래스 의 &lt;code&gt;wrap&lt;/code&gt; 메서드를 통해 생성 된 긴 버퍼 는 간접적입니다. 바이트 버퍼의 뷰로 생성 된 긴 버퍼는 바이트 버퍼 자체가 직접적 일 경우에만 직접적입니다. 긴 버퍼가 직접인지 여부는 &lt;a href=&quot;#isDirect()&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1d27c906794ecc16994052e9d8c15b0514eebcb5" translate="yes" xml:space="preserve">
          <source>Like a byte buffer, a long buffer is either &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; or &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt;. A long buffer created via the &lt;code&gt;wrap&lt;/code&gt; methods of this class will be non-direct. A long buffer created as a view of a byte buffer will be direct if, and only if, the byte buffer itself is direct. Whether or not a long buffer is direct may be determined by invoking the &lt;a href=&quot;longbuffer#isDirect--&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">바이트 버퍼와 마찬가지로 긴 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; 또는 &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt; 입니다. 이 클래스 의 &lt;code&gt;wrap&lt;/code&gt; 메소드를 통해 작성된 긴 버퍼 는 직접적이지 않습니다. 바이트 버퍼의 뷰로 작성된 긴 버퍼는 바이트 버퍼 자체가 직접 인 경우에만 직접적입니다. 긴 버퍼가 직접인지 여부는 &lt;a href=&quot;longbuffer#isDirect--&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 판별 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="27be7d206e5b69aaa4bd1862caec57e7a94d15ae" translate="yes" xml:space="preserve">
          <source>Like a byte buffer, a short buffer is either &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; or &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt;. A short buffer created via the &lt;code&gt;wrap&lt;/code&gt; methods of this class will be non-direct. A short buffer created as a view of a byte buffer will be direct if, and only if, the byte buffer itself is direct. Whether or not a short buffer is direct may be determined by invoking the &lt;a href=&quot;#isDirect()&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">바이트 버퍼와 마찬가지로 짧은 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; 또는 &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt; 입니다. 이 클래스 의 &lt;code&gt;wrap&lt;/code&gt; 메소드를 통해 생성 된 짧은 버퍼 는 간접적입니다. 바이트 버퍼의 뷰로 생성 된 짧은 버퍼는 바이트 버퍼 자체가 직접적 일 경우에만 직접적입니다. 짧은 버퍼가 직접인지 아닌지는 &lt;a href=&quot;#isDirect()&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="46e51b0c32e8f5c5f1aae01079479fe8ba3d2617" translate="yes" xml:space="preserve">
          <source>Like a byte buffer, a short buffer is either &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; or &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt;. A short buffer created via the &lt;code&gt;wrap&lt;/code&gt; methods of this class will be non-direct. A short buffer created as a view of a byte buffer will be direct if, and only if, the byte buffer itself is direct. Whether or not a short buffer is direct may be determined by invoking the &lt;a href=&quot;shortbuffer#isDirect--&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">바이트 버퍼와 마찬가지로 짧은 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; 또는 &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt; 입니다. 이 클래스 의 &lt;code&gt;wrap&lt;/code&gt; 메소드를 통해 작성된 짧은 버퍼 는 직접적이지 않습니다. 바이트 버퍼의 뷰로 생성 된 짧은 버퍼는 바이트 버퍼 자체가 직접 인 경우에만 직접적입니다. 짧은 버퍼가 직접인지 여부는 &lt;a href=&quot;shortbuffer#isDirect--&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 판별 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b4673071f5125f061eafe340f45b0d6c23f4fe6" translate="yes" xml:space="preserve">
          <source>Like a byte buffer, an int buffer is either &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; or &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt;. A int buffer created via the &lt;code&gt;wrap&lt;/code&gt; methods of this class will be non-direct. An int buffer created as a view of a byte buffer will be direct if, and only if, the byte buffer itself is direct. Whether or not an int buffer is direct may be determined by invoking the &lt;a href=&quot;#isDirect()&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">바이트 버퍼와 마찬가지로 int 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; 또는 &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt; 입니다. 이 클래스 의 &lt;code&gt;wrap&lt;/code&gt; 메소드를 통해 생성 된 int 버퍼 는 간접적입니다. 바이트 버퍼의 뷰로 생성 된 int 버퍼는 바이트 버퍼 자체가 직접적 일 경우에만 직접적입니다. int 버퍼가 직접인지 여부는 &lt;a href=&quot;#isDirect()&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하여 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="080a9fbd979183f26520dda0f64fd464f96c73ff" translate="yes" xml:space="preserve">
          <source>Like a byte buffer, an int buffer is either &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; or &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt;. A int buffer created via the &lt;code&gt;wrap&lt;/code&gt; methods of this class will be non-direct. An int buffer created as a view of a byte buffer will be direct if, and only if, the byte buffer itself is direct. Whether or not an int buffer is direct may be determined by invoking the &lt;a href=&quot;intbuffer#isDirect--&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">바이트 버퍼와 마찬가지로 int 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; 또는 &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt; 입니다. 이 클래스 의 &lt;code&gt;wrap&lt;/code&gt; 메소드를 통해 작성된 int 버퍼 는 직접적이지 않습니다. 바이트 버퍼의 뷰로 생성 된 int 버퍼는 바이트 버퍼 자체가 직접 인 경우에만 직접 사용됩니다. int 버퍼가 직접인지 여부는 &lt;a href=&quot;intbuffer#isDirect--&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; 를 호출하여 확인할 수 있습니다. 메소드 .</target>
        </trans-unit>
        <trans-unit id="7b4f04cda8307be3b06f84651fd7d0eb7aaf74d0" translate="yes" xml:space="preserve">
          <source>Like all &lt;code&gt;JComponent&lt;/code&gt; classes, you can use &lt;a href=&quot;inputmap&quot;&gt;&lt;code&gt;InputMap&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;actionmap&quot;&gt;&lt;code&gt;ActionMap&lt;/code&gt;&lt;/a&gt; to associate an &lt;a href=&quot;action&quot;&gt;&lt;code&gt;Action&lt;/code&gt;&lt;/a&gt; object with a &lt;a href=&quot;keystroke&quot;&gt;&lt;code&gt;KeyStroke&lt;/code&gt;&lt;/a&gt; and execute the action under specified conditions.</source>
          <target state="translated">모든 &lt;code&gt;JComponent&lt;/code&gt; 클래스 와 마찬가지로 &lt;a href=&quot;inputmap&quot;&gt; &lt;code&gt;InputMap&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;actionmap&quot;&gt; &lt;code&gt;ActionMap&lt;/code&gt; &lt;/a&gt; 을 사용 하여 &lt;a href=&quot;action&quot;&gt; &lt;code&gt;Action&lt;/code&gt; &lt;/a&gt; 객체를 &lt;a href=&quot;keystroke&quot;&gt; &lt;code&gt;KeyStroke&lt;/code&gt; &lt;/a&gt; 와 연결하고 지정된 조건에서 작업을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6c817e1c4105574248876d56289dc9703162ed4" translate="yes" xml:space="preserve">
          <source>Like any &lt;a href=&quot;blockingqueue&quot;&gt;&lt;code&gt;BlockingQueue&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;BlockingDeque&lt;/code&gt; is thread safe, does not permit null elements, and may (or may not) be capacity-constrained.</source>
          <target state="translated">어떤처럼 &lt;a href=&quot;blockingqueue&quot;&gt; &lt;code&gt;BlockingQueue&lt;/code&gt; 를&lt;/a&gt; 하는 &lt;code&gt;BlockingDeque&lt;/code&gt; 를 널 요소를 허가하지 않는 스레드 안전 및 (또는되지 않을 수 있음), 용량 제한 될 수있다.</target>
        </trans-unit>
        <trans-unit id="8d49a815189915d94a34aa00963acef839e2f53c" translate="yes" xml:space="preserve">
          <source>Like block except that it's expected that the element will be used with a paragraph view so a paragraph element won't need to be synthesized.</source>
          <target state="translated">요소가 단락보기와 함께 사용될 것으로 예상된다는 점을 제외하면 블록과 유사하므로 단락 요소를 합성 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="910ff13b4b091187420e274b10b9dca9b7e4fa9b" translate="yes" xml:space="preserve">
          <source>Like classes and strings, method handles that correspond to accessible fields, methods, and constructors can also be represented directly in a class file's constant pool as constants to be loaded by &lt;code&gt;ldc&lt;/code&gt; bytecodes. A new type of constant pool entry, &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt;, refers directly to an associated &lt;code&gt;CONSTANT_Methodref&lt;/code&gt;, &lt;code&gt;CONSTANT_InterfaceMethodref&lt;/code&gt;, or &lt;code&gt;CONSTANT_Fieldref&lt;/code&gt; constant pool entry. (For full details on method handle constants, see sections 4.4.8 and 5.4.3.5 of the Java Virtual Machine Specification.)</source>
          <target state="translated">클래스 및 문자열과 같이 액세스 가능한 필드, 메서드 및 생성자에 해당하는 메서드 핸들은 클래스 파일의 상수 풀에서 &lt;code&gt;ldc&lt;/code&gt; 바이트 코드에 의해로드되는 상수로 직접 표시 될 수도 있습니다 . 새로운 유형의 상수 풀 항목 인 &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; 은 연관된 &lt;code&gt;CONSTANT_Methodref&lt;/code&gt; , &lt;code&gt;CONSTANT_InterfaceMethodref&lt;/code&gt; 또는 &lt;code&gt;CONSTANT_Fieldref&lt;/code&gt; 상수 풀 항목을 직접 참조합니다 . (메소드 핸들 상수에 대한 자세한 내용은 Java Virtual Machine Specification의 4.4.8 및 5.4.3.5 단원을 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="a7cb7bdbff492c8b5f7b52724a21bad0d563fb6d" translate="yes" xml:space="preserve">
          <source>Like classes and strings, method types can also be represented directly in a class file's constant pool as constants. A method type may be loaded by an &lt;code&gt;ldc&lt;/code&gt; instruction which refers to a suitable &lt;code&gt;CONSTANT_MethodType&lt;/code&gt; constant pool entry. The entry refers to a &lt;code&gt;CONSTANT_Utf8&lt;/code&gt; spelling for the descriptor string. (For full details on method type constants, see sections 4.4.8 and 5.4.3.5 of the Java Virtual Machine Specification.)</source>
          <target state="translated">클래스 및 문자열과 마찬가지로 메소드 유형은 클래스 파일의 상수 풀에서 상수로 직접 표현 될 수도 있습니다. 적절한 &lt;code&gt;CONSTANT_MethodType&lt;/code&gt; 상수 풀 항목 을 참조 하는 &lt;code&gt;ldc&lt;/code&gt; 명령 으로 메소드 유형을로드 할 수 있습니다 . 항목은 &lt;code&gt;CONSTANT_Utf8&lt;/code&gt; 을 나타냅니다. 설명자 문자열에 대한 철자를 . (메소드 유형 상수에 대한 자세한 내용은 Java Virtual Machine Specification의 4.4.8 및 5.4.3.5 섹션을 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="240f63a003ec483324f9a5ea4f99f30a77463061" translate="yes" xml:space="preserve">
          <source>Like environment properties, connection request controls of a context &lt;em&gt;are inherited&lt;/em&gt; by contexts that are derived from it. Typically, you initialize the connection request controls using the &lt;code&gt;InitialLdapContext&lt;/code&gt; constructor or &lt;code&gt;LdapReferralContext.getReferralContext()&lt;/code&gt;. These connection request controls are inherited by contexts that share the same connection--that is, contexts derived from the initial or referral contexts.</source>
          <target state="translated">환경 속성과 마찬가지로 컨텍스트의 연결 요청 컨트롤은 해당 컨텍스트 에서 파생 된 컨텍스트에 의해 &lt;em&gt;상속&lt;/em&gt; 됩니다. 일반적으로 &lt;code&gt;InitialLdapContext&lt;/code&gt; 생성자 또는 &lt;code&gt;LdapReferralContext.getReferralContext()&lt;/code&gt; 사용하여 연결 요청 제어를 초기화합니다 . 이러한 연결 요청 제어는 동일한 연결을 공유하는 컨텍스트, 즉 초기 또는 참조 컨텍스트에서 파생 된 컨텍스트에 의해 상속됩니다.</target>
        </trans-unit>
        <trans-unit id="e41795338245914581d48d4cca69d65b5f303630" translate="yes" xml:space="preserve">
          <source>Like most collection classes, this class is not synchronized. A synchronized &lt;code&gt;WeakHashMap&lt;/code&gt; may be constructed using the &lt;a href=&quot;collections#synchronizedMap(java.util.Map)&quot;&gt;&lt;code&gt;Collections.synchronizedMap&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">대부분의 컬렉션 클래스와 마찬가지로이 클래스는 동기화되지 않습니다. 동기화 된 &lt;code&gt;WeakHashMap&lt;/code&gt; 은 &lt;a href=&quot;collections#synchronizedMap(java.util.Map)&quot;&gt; &lt;code&gt;Collections.synchronizedMap&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6e4487bf82d573768e63b4c8eba15154fe137be9" translate="yes" xml:space="preserve">
          <source>Like most collection classes, this class is not synchronized. A synchronized &lt;code&gt;WeakHashMap&lt;/code&gt; may be constructed using the &lt;a href=&quot;collections#synchronizedMap-java.util.Map-&quot;&gt;&lt;code&gt;Collections.synchronizedMap&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">대부분의 컬렉션 클래스와 마찬가지로이 클래스는 동기화되지 않습니다. 동기화 된 &lt;code&gt;WeakHashMap&lt;/code&gt; 은 &lt;a href=&quot;collections#synchronizedMap-java.util.Map-&quot;&gt; &lt;code&gt;Collections.synchronizedMap&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 구성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dbf309de912bc98d67e16c61f88f5b50dd61d6f5" translate="yes" xml:space="preserve">
          <source>Like most collection implementations &lt;code&gt;EnumMap&lt;/code&gt; is not synchronized. If multiple threads access an enum map concurrently, and at least one of the threads modifies the map, it should be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the enum map. If no such object exists, the map should be &quot;wrapped&quot; using the &lt;a href=&quot;collections#synchronizedMap(java.util.Map)&quot;&gt;&lt;code&gt;Collections.synchronizedMap(java.util.Map&amp;lt;K, V&amp;gt;)&lt;/code&gt;&lt;/a&gt; method. This is best done at creation time, to prevent accidental unsynchronized access:</source>
          <target state="translated">대부분의 컬렉션 구현과 마찬가지로 &lt;code&gt;EnumMap&lt;/code&gt; 은 동기화되지 않습니다. 여러 스레드가 동시에 열거 형 맵에 액세스하고 스레드 중 하나 이상이 맵을 수정하는 경우 외부에서 동기화해야합니다. 이는 일반적으로 enum 맵을 자연스럽게 캡슐화하는 일부 객체에서 동기화하여 수행됩니다. 이러한 객체가 없으면 &lt;a href=&quot;collections#synchronizedMap(java.util.Map)&quot;&gt; &lt;code&gt;Collections.synchronizedMap(java.util.Map&amp;lt;K, V&amp;gt;)&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 맵을 &quot;래핑&quot;해야합니다 . 이는 실수로 동기화되지 않은 액세스를 방지하기 위해 생성시 가장 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="399614ced5707b8e6b8c48cd847188071e48d8bf" translate="yes" xml:space="preserve">
          <source>Like most collection implementations &lt;code&gt;EnumMap&lt;/code&gt; is not synchronized. If multiple threads access an enum map concurrently, and at least one of the threads modifies the map, it should be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the enum map. If no such object exists, the map should be &quot;wrapped&quot; using the &lt;a href=&quot;collections#synchronizedMap-java.util.Map-&quot;&gt;&lt;code&gt;Collections.synchronizedMap(java.util.Map&amp;lt;K, V&amp;gt;)&lt;/code&gt;&lt;/a&gt; method. This is best done at creation time, to prevent accidental unsynchronized access:</source>
          <target state="translated">대부분의 컬렉션 구현과 마찬가지로 &lt;code&gt;EnumMap&lt;/code&gt; 은 동기화되지 않습니다. 여러 스레드가 동시에 열거 형 맵에 액세스하고 하나 이상의 스레드가 맵을 수정하는 경우 외부 적으로 동기화되어야합니다. 이것은 일반적으로 열거 형 맵을 자연스럽게 캡슐화하는 일부 객체를 동기화하여 수행됩니다. 그러한 오브젝트가 존재하지 않는 경우는 &lt;a href=&quot;collections#synchronizedMap-java.util.Map-&quot;&gt; &lt;code&gt;Collections.synchronizedMap(java.util.Map&amp;lt;K, V&amp;gt;)&lt;/code&gt; &lt;/a&gt; 메소드를 사용해 맵을 랩 해주세요 . 우발적 인 비동기 액세스를 방지하기 위해 생성시 가장 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="c207198b516ac4e45afaa21f88641b24af099a20" translate="yes" xml:space="preserve">
          <source>Like most collection implementations, &lt;code&gt;EnumSet&lt;/code&gt; is not synchronized. If multiple threads access an enum set concurrently, and at least one of the threads modifies the set, it should be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the enum set. If no such object exists, the set should be &quot;wrapped&quot; using the &lt;a href=&quot;collections#synchronizedSet(java.util.Set)&quot;&gt;&lt;code&gt;Collections.synchronizedSet(java.util.Set&amp;lt;T&amp;gt;)&lt;/code&gt;&lt;/a&gt; method. This is best done at creation time, to prevent accidental unsynchronized access:</source>
          <target state="translated">대부분의 컬렉션 구현과 마찬가지로 &lt;code&gt;EnumSet&lt;/code&gt; 은 동기화되지 않습니다. 여러 스레드가 동시에 열거 세트에 액세스하고 스레드 중 하나 이상이 세트를 수정하는 경우 외부에서 동기화되어야합니다. 이것은 일반적으로 enum 집합을 자연스럽게 캡슐화하는 일부 개체에서 동기화하여 수행됩니다. 이러한 개체가 없으면 &lt;a href=&quot;collections#synchronizedSet(java.util.Set)&quot;&gt; &lt;code&gt;Collections.synchronizedSet(java.util.Set&amp;lt;T&amp;gt;)&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 집합을 &quot;래핑&quot;해야합니다 . 이는 실수로 동기화되지 않은 액세스를 방지하기 위해 생성시 가장 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="d43decb755ca5fa78264a9b628d4765c8e39561c" translate="yes" xml:space="preserve">
          <source>Like most collection implementations, &lt;code&gt;EnumSet&lt;/code&gt; is not synchronized. If multiple threads access an enum set concurrently, and at least one of the threads modifies the set, it should be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the enum set. If no such object exists, the set should be &quot;wrapped&quot; using the &lt;a href=&quot;collections#synchronizedSet-java.util.Set-&quot;&gt;&lt;code&gt;Collections.synchronizedSet(java.util.Set&amp;lt;T&amp;gt;)&lt;/code&gt;&lt;/a&gt; method. This is best done at creation time, to prevent accidental unsynchronized access:</source>
          <target state="translated">대부분의 컬렉션 구현과 마찬가지로 &lt;code&gt;EnumSet&lt;/code&gt; 은 동기화되지 않습니다. 여러 스레드가 동시에 열거 집합에 액세스하고 하나 이상의 스레드가 집합을 수정하는 경우 외부에서 동기화되어야합니다. 이것은 일반적으로 열거 세트를 자연스럽게 캡슐화하는 일부 객체를 동기화하여 수행됩니다. 그러한 오브젝트가 존재하지 않는 경우는 &lt;a href=&quot;collections#synchronizedSet-java.util.Set-&quot;&gt; &lt;code&gt;Collections.synchronizedSet(java.util.Set&amp;lt;T&amp;gt;)&lt;/code&gt; &lt;/a&gt; 메소드를 사용해 세트를 &quot;랩&quot;할 필요가 있습니다 . 우발적 인 비동기 액세스를 방지하기 위해 생성시 가장 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="be7078d8fe7c7850e5fd68efccc46a2ac2813c6f" translate="yes" xml:space="preserve">
          <source>Like most connectors in the JMX Remote API, an RMI connector usually has an address, which is a &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt;. The protocol part of this address is &lt;code&gt;rmi&lt;/code&gt; for a connector that uses the default RMI transport (JRMP).</source>
          <target state="translated">JMX Remote API의 대부분의 커넥터와 마찬가지로 RMI 커넥터에는 일반적으로 &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;/a&gt; 주소가 있습니다. 이 주소의 프로토콜 부분은 기본 RMI 전송 (JRMP)을 사용하는 커넥터의 &lt;code&gt;rmi&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5429500f165837f3cc2515056849bdb877f82560" translate="yes" xml:space="preserve">
          <source>Like most connectors in the JMX Remote API, an RMI connector usually has an address, which is a &lt;a href=&quot;../jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt;. The protocol part of this address is &lt;code&gt;rmi&lt;/code&gt; for a connector that uses the default RMI transport (JRMP), or &lt;code&gt;iiop&lt;/code&gt; for a connector that uses RMI/IIOP.</source>
          <target state="translated">JMX Remote API의 대부분의 커넥터와 마찬가지로 RMI 커넥터에는 일반적으로 &lt;a href=&quot;../jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; 인&lt;/a&gt; 주소가 있습니다. 이 주소의 프로토콜 부분은 기본 RMI 전송 (JRMP)을 사용하는 커넥터의 경우 &lt;code&gt;rmi&lt;/code&gt; 이거나 RMI / IIOP를 사용하는 커넥터의 경우 &lt;code&gt;iiop&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0405492e967eac57e79d071aff40577fc502aee3" translate="yes" xml:space="preserve">
          <source>Like other blocking queues, a &lt;code&gt;TransferQueue&lt;/code&gt; may be capacity bounded. If so, an attempted transfer operation may initially block waiting for available space, and/or subsequently block waiting for reception by a consumer. Note that in a queue with zero capacity, such as &lt;a href=&quot;synchronousqueue&quot;&gt;&lt;code&gt;SynchronousQueue&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;put&lt;/code&gt; and &lt;code&gt;transfer&lt;/code&gt; are effectively synonymous.</source>
          <target state="translated">다른 블로킹 큐와 마찬가지로 &lt;code&gt;TransferQueue&lt;/code&gt; 는 용량이 제한 될 수 있습니다. 만약 그렇다면, 시도 된 전송 동작은 초기에 이용 가능한 공간을 기다리는 것을 차단하고 그리고 / 또는 소비자에 의한 수신을 기다리는 것을 차단할 수있다. &lt;a href=&quot;synchronousqueue&quot;&gt; &lt;code&gt;SynchronousQueue&lt;/code&gt; &lt;/a&gt; 와 같이 용량이 0 인 큐 에서 &lt;code&gt;put&lt;/code&gt; 및 &lt;code&gt;transfer&lt;/code&gt; 은 사실상 동의어입니다.</target>
        </trans-unit>
        <trans-unit id="0880efd58dab13bc824d3ca3268aa962fe904ea0" translate="yes" xml:space="preserve">
          <source>Like other locale-sensitive classes, &lt;code&gt;Calendar&lt;/code&gt; provides a class method, &lt;code&gt;getInstance&lt;/code&gt;, for getting a generally useful object of this type. &lt;code&gt;Calendar&lt;/code&gt;'s &lt;code&gt;getInstance&lt;/code&gt; method returns a &lt;code&gt;Calendar&lt;/code&gt; object whose calendar fields have been initialized with the current date and time:</source>
          <target state="translated">다른 로케일 구분 클래스와 마찬가지로 &lt;code&gt;Calendar&lt;/code&gt; 는 이 유형의 일반적으로 유용한 객체를 가져 오기위한 클래스 메소드 인 &lt;code&gt;getInstance&lt;/code&gt; 를 제공합니다 . &lt;code&gt;Calendar&lt;/code&gt; 의 &lt;code&gt;getInstance&lt;/code&gt; 메소드는 달력 필드가 현재 날짜 및 시간으로 초기화 된 &lt;code&gt;Calendar&lt;/code&gt; 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2a0094711231f693a7d19e1040142aba17ce7036" translate="yes" xml:space="preserve">
          <source>Like other locale-sensitive classes, you can use the static factory method, &lt;code&gt;getInstance&lt;/code&gt;, to obtain the appropriate &lt;code&gt;Collator&lt;/code&gt; object for a given locale. You will only need to look at the subclasses of &lt;code&gt;Collator&lt;/code&gt; if you need to understand the details of a particular collation strategy or if you need to modify that strategy.</source>
          <target state="translated">다른 로케일 구분 클래스와 마찬가지로 정적 팩토리 메소드 인 &lt;code&gt;getInstance&lt;/code&gt; 를 사용하여 지정된 로케일에 적합한 &lt;code&gt;Collator&lt;/code&gt; 오브젝트 를 얻을 수 있습니다. 특정 데이터 정렬 전략의 세부 사항을 이해해야하거나 해당 전략을 수정해야하는 경우 &lt;code&gt;Collator&lt;/code&gt; 의 서브 클래스 만 살펴 봐야합니다 .</target>
        </trans-unit>
        <trans-unit id="3d7b3d2b8c0527b90af242c511fdd4e5a0c05d46" translate="yes" xml:space="preserve">
          <source>Like socket factories, server Socket factory instances have methods used to create sockets. There is also an environment specific default server socket factory; frameworks will often use their own customized factory.</source>
          <target state="translated">소켓 팩토리와 마찬가지로 서버 소켓 팩토리 인스턴스에는 소켓을 작성하는 데 사용되는 메소드가 있습니다. 환경 특정 기본 서버 소켓 팩토리도 있습니다. 프레임 워크는 종종 자체 맞춤형 공장을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="71b435e2aa73addc2898a6bf2c95323d41c05dd7" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;#matches()&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method, this method always starts at the beginning of the region; unlike that method, it does not require that the entire region be matched.</source>
          <target state="translated">&lt;a href=&quot;#matches()&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt; 메서드 와 마찬가지로이 메서드는 항상 영역의 시작 부분에서 시작합니다. 이 방법과 달리 전체 영역을 일치시킬 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="21ddbb223a4f0c26fa5a0a5dbeeb4bb956d390f3" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;#toArray()&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;#toArray()&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메서드 와 마찬가지로이 메서드는 배열 기반 API와 컬렉션 기반 API 사이의 다리 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a87de3460112cd4942a0b0dcc051838e0f3ca4b" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;../collection#toArray--&quot;&gt;&lt;code&gt;Collection.toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;../collection#toArray--&quot;&gt; &lt;code&gt;Collection.toArray()&lt;/code&gt; &lt;/a&gt; 메서드 와 마찬가지로이 메서드는 배열 기반 API와 컬렉션 기반 API 간의 브리지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a938cbb173fa07644bd5c108d4fc4ab8afc47dec" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;arrayblockingqueue#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;arrayblockingqueue#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b4e9043a36aa53532138e4d7d3d8e4d540f8be0" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;arraydeque#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;arraydeque#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2412248ac5ac2d916709930629e9e549acde7db3" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;collection#toArray--&quot;&gt;&lt;code&gt;Collection.toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;collection#toArray--&quot;&gt; &lt;code&gt;Collection.toArray()&lt;/code&gt; &lt;/a&gt; 메서드 와 마찬가지로이 메서드는 배열 기반 API와 컬렉션 기반 API 간의 브리지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f9fa895a1d3cd24f7703a53c7f5458d79dbdfdf" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;collection#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;collection#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="298ebaedc509493df413defd50d08d516a684b34" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;concurrentlinkeddeque#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;concurrentlinkeddeque#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e9fcc4c451f51211a43dc13cd7e3a8a35bb3a6b" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;concurrentlinkedqueue#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;concurrentlinkedqueue#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f924712492fccae7f052df188c37183a4c1a5f0f" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;copyonwritearraylist#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;copyonwritearraylist#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62334731ec6eebdcc442e0bdd68bcc201bd24db4" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;copyonwritearrayset#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;copyonwritearrayset#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57cabfba9ecb4c88150dc1fa130f1b56adfd69ae" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;delayqueue#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;delayqueue#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b732dcf1343abee83a37119e2a05f3298f17d04" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;linkedblockingdeque#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;linkedblockingdeque#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6131069917e6bc7e5bf2a7a9fa94ec95649056f" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;linkedblockingqueue#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;linkedblockingqueue#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3a9474609ae67350c522ec1d068663b19fe3d8f" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;linkedlist#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;linkedlist#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fcb0bf7f8df7d4a3b0f8f42664cc903319eb97a6" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;list#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;list#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86fc895338a3933faf358303628afb15a24acec0" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;matcher#matches--&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method, this method always starts at the beginning of the region; unlike that method, it does not require that the entire region be matched.</source>
          <target state="translated">&lt;a href=&quot;matcher#matches--&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 항상 영역의 시작 부분에서 시작합니다. 이 방법과 달리 전체 지역을 일치시킬 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="45865f44d4099df0cde9e28d38c781dad3c04c46" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;priorityblockingqueue#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;priorityblockingqueue#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c91fe96787a8cb46cc07d6ff725602082e321b20" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;priorityqueue#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;priorityqueue#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fad3d6cc7fd0f7213dd4e8b0d54f739ebc85c39" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;set#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;set#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5309486a6f43c715f7988ceb202be9ea143542ad" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;insertNodeInto&lt;/code&gt; method in the &lt;code&gt;DefaultTreeModel&lt;/code&gt; class, &lt;code&gt;insertElementAt&lt;/code&gt; appends to the &lt;code&gt;Vector&lt;/code&gt; when the index matches the size of the vector. So you can use &lt;code&gt;insertElementAt(Integer, 0)&lt;/code&gt; even when the vector is empty.</source>
          <target state="translated">&lt;code&gt;DefaultTreeModel&lt;/code&gt; 클래스 의 &lt;code&gt;insertNodeInto&lt;/code&gt; 메서드 와 마찬가지로 &lt;code&gt;insertElementAt&lt;/code&gt; 은 인덱스가 벡터의 크기와 일치 할 때 &lt;code&gt;Vector&lt;/code&gt; 에 추가됩니다 . 따라서 벡터가 비어있는 경우에도 &lt;code&gt;insertElementAt(Integer, 0)&lt;/code&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="82554899eeef235659854dd41f98a70ce5644ff6" translate="yes" xml:space="preserve">
          <source>Like the above techniques this class holds an array of N integers internally but uses a hybrid encoding, which is halfway between the size-based and positional-based approaches. The result is a data structure that takes the same space to store the information but can perform most operations in Log(N) time instead of O(N), where N is the number of entries in the list.</source>
          <target state="translated">위의 기술과 같이이 클래스는 내부적으로 N 개의 정수 배열을 보유하지만 크기 기반 접근 방식과 위치 기반 접근 방식의 중간 인 하이브리드 인코딩을 사용합니다. 결과는 정보를 저장하는 데 동일한 공간을 사용하지만 대부분의 작업을 O (N) 대신 Log (N) 시간에 수행 할 수있는 데이터 구조입니다. 여기서 N은 목록의 항목 수입니다.</target>
        </trans-unit>
        <trans-unit id="0dc7d93d9dc634812d67fd5f4c30c5f5727d4f29" translate="yes" xml:space="preserve">
          <source>Like the backing map, the &lt;code&gt;Map.Entry&lt;/code&gt; objects in the set returned by this method define key and value equality as reference-equality rather than object-equality. This affects the behavior of the &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; methods of these &lt;code&gt;Map.Entry&lt;/code&gt; objects. A reference-equality based &lt;code&gt;Map.Entry
 e&lt;/code&gt; is equal to an object &lt;code&gt;o&lt;/code&gt; if and only if &lt;code&gt;o&lt;/code&gt; is a &lt;code&gt;Map.Entry&lt;/code&gt; and &lt;code&gt;e.getKey()==o.getKey() &amp;amp;&amp;amp;
 e.getValue()==o.getValue()&lt;/code&gt;. To accommodate these equals semantics, the &lt;code&gt;hashCode&lt;/code&gt; method returns &lt;code&gt;System.identityHashCode(e.getKey()) ^
 System.identityHashCode(e.getValue())&lt;/code&gt;.</source>
          <target state="translated">지원지도와 마찬가지로이 메소드에 의해 반환 된 집합 의 &lt;code&gt;Map.Entry&lt;/code&gt; 객체는 키와 값 평등을 객체 평등이 아닌 참조 평등으로 정의합니다. 이는 이러한 &lt;code&gt;Map.Entry&lt;/code&gt; 객체 의 &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;hashCode&lt;/code&gt; 메서드 동작에 영향을줍니다 . 참조 평등 기반 &lt;code&gt;Map.Entry e&lt;/code&gt; 는 &lt;code&gt;o&lt;/code&gt; 가 &lt;code&gt;Map.Entry&lt;/code&gt; 이고 &lt;code&gt;e.getKey()==o.getKey() &amp;amp;&amp;amp; e.getValue()==o.getValue()&lt;/code&gt; 경우에만 객체 &lt;code&gt;o&lt;/code&gt; 와 같습니다. ) . 이러한 &lt;code&gt;System.identityHashCode(e.getKey()) ^ System.identityHashCode(e.getValue())&lt;/code&gt; 의미를 수용하기 위해 &lt;code&gt;hashCode&lt;/code&gt; 메소드는 System.identityHashCode (e.getKey ()) ^ System.identityHashCode (e.getValue ())를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="89a9ae0c8778fc3e322a919a538ae5b7fe1123d2" translate="yes" xml:space="preserve">
          <source>Likewise, a suppressed exception can have a cause:</source>
          <target state="translated">마찬가지로, 억제 된 예외는 원인이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34d035f6e36568d5ecba9fb448d7bbfc07310b63" translate="yes" xml:space="preserve">
          <source>Likewise, if &lt;code&gt;T&lt;/code&gt; or &lt;code&gt;MT&lt;/code&gt; is not symbolically accessible from the lookup class's loader, the lookup can still succeed. For example, lookups for &lt;code&gt;MethodHandle.invokeExact&lt;/code&gt; and &lt;code&gt;MethodHandle.invoke&lt;/code&gt; will always succeed, regardless of requested type.</source>
          <target state="translated">마찬가지로, 조회 클래스의 로더에서 &lt;code&gt;T&lt;/code&gt; 또는 &lt;code&gt;MT&lt;/code&gt; 에 기호로 액세스 할 수없는 경우 에도 조회가 성공할 수 있습니다. 예를 들어 &lt;code&gt;MethodHandle.invokeExact&lt;/code&gt; 및 &lt;code&gt;MethodHandle.invoke&lt;/code&gt; 에 대한 조회 는 요청 된 유형에 관계없이 항상 성공합니다.</target>
        </trans-unit>
        <trans-unit id="f418d477f7b685e4b17ea2ab1d113ddf4243f779" translate="yes" xml:space="preserve">
          <source>Likewise, parsing with a &lt;code&gt;MessageFormat&lt;/code&gt; object using patterns containing multiple occurrences of the same argument would return the last match. For example,</source>
          <target state="translated">마찬가지로, 동일한 인수가 여러 번 포함 된 패턴을 사용하여 &lt;code&gt;MessageFormat&lt;/code&gt; 객체로 구문 분석 하면 마지막 일치 항목이 반환됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="256b23d1240d2a8778c8bf44a0d694ba5e61bc0e" translate="yes" xml:space="preserve">
          <source>Likewise, the parameter list of &lt;code&gt;end&lt;/code&gt; must be effectively identical to the external parameter list.</source>
          <target state="translated">마찬가지로 &lt;code&gt;end&lt;/code&gt; 의 매개 변수 목록은 외부 매개 변수 목록과 사실상 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="24d948e4bdbe5b8224bbc0dfbab1923fab00b98e" translate="yes" xml:space="preserve">
          <source>Limit</source>
          <target state="translated">Limit</target>
        </trans-unit>
        <trans-unit id="7bf0ce9512b5fd591a792aacddfd46119dbf5e99" translate="yes" xml:space="preserve">
          <source>Limit determines the maximum or minimum amount by which the glyph can change. Left and right sides of the glyph can have different limits.</source>
          <target state="translated">제한은 글리프가 변경할 수있는 최대 또는 최소 양을 결정합니다. 글리프의 왼쪽과 오른쪽에는 다른 제한이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6bf6451f1e7f515be086e47cf39ff6a4bc80a3e" translate="yes" xml:space="preserve">
          <source>LimitExceededException</source>
          <target state="translated">LimitExceededException</target>
        </trans-unit>
        <trans-unit id="ea9676003762818513c636984faeaa0ae356839a" translate="yes" xml:space="preserve">
          <source>Line</source>
          <target state="translated">Line</target>
        </trans-unit>
        <trans-unit id="8063848dd725bd56f98d4d78213b9bcdc4a7dc13" translate="yes" xml:space="preserve">
          <source>Line Separator</source>
          <target state="translated">선 구분자</target>
        </trans-unit>
        <trans-unit id="eb139fd278adbcec100f27124aa9ca974e374402" translate="yes" xml:space="preserve">
          <source>Line and column numbers begin at 1. Negative values (except &lt;a href=&quot;#NOPOS&quot;&gt;&lt;code&gt;NOPOS&lt;/code&gt;&lt;/a&gt;) and 0 are not valid line or column numbers.</source>
          <target state="translated">행 및 열 번호는 1에서 시작합니다. 음수 값 ( &lt;a href=&quot;#NOPOS&quot;&gt; &lt;code&gt;NOPOS&lt;/code&gt; &lt;/a&gt; 제외 ) 및 0은 유효한 행 또는 열 번호가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="cdbde4652d7d9766d615a52e779607ef96fa9bda" translate="yes" xml:space="preserve">
          <source>Line and column numbers begin at 1. Negative values (except &lt;a href=&quot;diagnostic#NOPOS&quot;&gt;&lt;code&gt;NOPOS&lt;/code&gt;&lt;/a&gt;) and 0 are not valid line or column numbers.</source>
          <target state="translated">행 및 열 번호는 1부터 시작합니다. 음수 값 ( &lt;a href=&quot;diagnostic#NOPOS&quot;&gt; &lt;code&gt;NOPOS&lt;/code&gt; &lt;/a&gt; 제외 ) 및 0은 유효한 행 또는 열 번호가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="7d49b9c52f6bf974aade77d67e236637ac6a55e6" translate="yes" xml:space="preserve">
          <source>Line boundary analysis determines where a text string can be broken when line-wrapping. The mechanism correctly handles punctuation and hyphenated words. Actual line breaking needs to also consider the available line width and is handled by higher-level software.</source>
          <target state="translated">줄 바꿈 분석은 줄 바꿈시 텍스트 문자열이 끊길 수있는 위치를 결정합니다. 이 메커니즘은 구두점과 하이픈이있는 단어를 올바르게 처리합니다. 실제 줄 바꿈도 사용 가능한 줄 너비를 고려해야하며 고급 소프트웨어에서 처리합니다.</target>
        </trans-unit>
        <trans-unit id="32dad465313c55d0967dce08b85facfd7c9c1f32" translate="yes" xml:space="preserve">
          <source>Line separator (&quot;\n&quot; on UNIX)</source>
          <target state="translated">줄 구분 기호 (UNIX의 경우 &quot;\ n&quot;)</target>
        </trans-unit>
        <trans-unit id="39a07c43d4457edd1e1b2f9cc8d3cb3bdafc23c5" translate="yes" xml:space="preserve">
          <source>Line stride (in data array elements) of the region of image data described by this ComponentSampleModel.</source>
          <target state="translated">이 ComponentSampleModel에 의해 기술 된 이미지 데이터 영역의 선 보폭 (데이터 배열 요소).</target>
        </trans-unit>
        <trans-unit id="aa3ba830ebf0f8ac5651680deb0ea80de3efc5f2" translate="yes" xml:space="preserve">
          <source>Line terminators</source>
          <target state="translated">줄 종결 자</target>
        </trans-unit>
        <trans-unit id="c72f1d323f6744511b003450f4ca7afb4a0ad632" translate="yes" xml:space="preserve">
          <source>Line.Info</source>
          <target state="translated">Line.Info</target>
        </trans-unit>
        <trans-unit id="61b4bea62205083d9f24f7b8bb74c0a8f26d6a16" translate="yes" xml:space="preserve">
          <source>Line.Info.getLineClass()</source>
          <target state="translated">Line.Info.getLineClass()</target>
        </trans-unit>
        <trans-unit id="acb3c20251614dad92275d591dd78e1b1f08ae85" translate="yes" xml:space="preserve">
          <source>Line.Info.matches()</source>
          <target state="translated">Line.Info.matches()</target>
        </trans-unit>
        <trans-unit id="d26926c0847bc7c2a5a751fb4c24fc2ab7c6047f" translate="yes" xml:space="preserve">
          <source>Line.Info.toString()</source>
          <target state="translated">Line.Info.toString()</target>
        </trans-unit>
        <trans-unit id="0f6c4bf686450895074f6f3f956e571deb85b070" translate="yes" xml:space="preserve">
          <source>Line.addLineListener()</source>
          <target state="translated">Line.addLineListener()</target>
        </trans-unit>
        <trans-unit id="e918747b3b44d77eee43e349816345442739acad" translate="yes" xml:space="preserve">
          <source>Line.close()</source>
          <target state="translated">Line.close()</target>
        </trans-unit>
        <trans-unit id="e76a77cc927184581bc57d5a0243bf8cd39635df" translate="yes" xml:space="preserve">
          <source>Line.getControl()</source>
          <target state="translated">Line.getControl()</target>
        </trans-unit>
        <trans-unit id="3206cd3eb2cd23cb9b27609e0c11d1eed41fe338" translate="yes" xml:space="preserve">
          <source>Line.getControls()</source>
          <target state="translated">Line.getControls()</target>
        </trans-unit>
        <trans-unit id="9d52fddf96ccdb30961577dac6a2d31aafc358da" translate="yes" xml:space="preserve">
          <source>Line.getLineInfo()</source>
          <target state="translated">Line.getLineInfo()</target>
        </trans-unit>
        <trans-unit id="7c37f1cb67603ac70035d035cf8c979a69dc7239" translate="yes" xml:space="preserve">
          <source>Line.isControlSupported()</source>
          <target state="translated">Line.isControlSupported()</target>
        </trans-unit>
        <trans-unit id="72daef6793473478427afd1e857680dcb8862bf2" translate="yes" xml:space="preserve">
          <source>Line.isOpen()</source>
          <target state="translated">Line.isOpen()</target>
        </trans-unit>
        <trans-unit id="ea7e3bf0293c22f7ab34396b378c116c6522c296" translate="yes" xml:space="preserve">
          <source>Line.open()</source>
          <target state="translated">Line.open()</target>
        </trans-unit>
        <trans-unit id="b599b9ab65f566d79d5d94ca78fea442a4ee92cb" translate="yes" xml:space="preserve">
          <source>Line.removeLineListener()</source>
          <target state="translated">Line.removeLineListener()</target>
        </trans-unit>
        <trans-unit id="01eaf6e4bb877601ca79bca9b07ed3a2f0e8240c" translate="yes" xml:space="preserve">
          <source>Line2D</source>
          <target state="translated">Line2D</target>
        </trans-unit>
        <trans-unit id="d9092a789d18f053d57d2033d41c24be27417c0c" translate="yes" xml:space="preserve">
          <source>Line2D.Double</source>
          <target state="translated">Line2D.Double</target>
        </trans-unit>
        <trans-unit id="d44bf1bec7a3e2122f9f90c1f097b6b656ca46c8" translate="yes" xml:space="preserve">
          <source>Line2D.Float</source>
          <target state="translated">Line2D.Float</target>
        </trans-unit>
        <trans-unit id="0e51a59691b784b258b993ca40e3cc3c97b2f293" translate="yes" xml:space="preserve">
          <source>LineBorder</source>
          <target state="translated">LineBorder</target>
        </trans-unit>
        <trans-unit id="d27c1bc7a2b84e01785ea2e7615bc95966e4a079" translate="yes" xml:space="preserve">
          <source>LineBorderUIResource</source>
          <target state="translated">LineBorderUIResource</target>
        </trans-unit>
        <trans-unit id="ee119f6b31fb52ab7c9edc306581d2479bf1e629" translate="yes" xml:space="preserve">
          <source>LineBreakMeasurer</source>
          <target state="translated">LineBreakMeasurer</target>
        </trans-unit>
        <trans-unit id="724b5d6ce9e29aeda9ebee895650012b807d59eb" translate="yes" xml:space="preserve">
          <source>LineEvent</source>
          <target state="translated">LineEvent</target>
        </trans-unit>
        <trans-unit id="c4a300637c0cee6fa0c096f7345d56597f2f7d33" translate="yes" xml:space="preserve">
          <source>LineEvent.Type</source>
          <target state="translated">LineEvent.Type</target>
        </trans-unit>
        <trans-unit id="be264b67d7b3e582d9383118f3fe02969de24f59" translate="yes" xml:space="preserve">
          <source>LineEvent.Type.equals()</source>
          <target state="translated">LineEvent.Type.equals()</target>
        </trans-unit>
        <trans-unit id="fe8220a555036b93f846519d4dd0b62ac5662643" translate="yes" xml:space="preserve">
          <source>LineEvent.Type.hashCode()</source>
          <target state="translated">LineEvent.Type.hashCode()</target>
        </trans-unit>
        <trans-unit id="f6ef0b8f90018406a9c0efb1e79512b8daba9565" translate="yes" xml:space="preserve">
          <source>LineEvent.Type.toString()</source>
          <target state="translated">LineEvent.Type.toString()</target>
        </trans-unit>
        <trans-unit id="3c7b2fe56d7d22bc7fd199e96a6558c87314ce89" translate="yes" xml:space="preserve">
          <source>LineEvent.getFramePosition()</source>
          <target state="translated">LineEvent.getFramePosition()</target>
        </trans-unit>
        <trans-unit id="b131e08b760e058826b972a13cf7ffaf0d9dc45b" translate="yes" xml:space="preserve">
          <source>LineEvent.getLine()</source>
          <target state="translated">LineEvent.getLine()</target>
        </trans-unit>
        <trans-unit id="cd66a84ba8eb421aca4993c48a06b77f57a32aee" translate="yes" xml:space="preserve">
          <source>LineEvent.getType()</source>
          <target state="translated">LineEvent.getType()</target>
        </trans-unit>
        <trans-unit id="52f26eea7e797fa2929752f2374bf9c204447e0e" translate="yes" xml:space="preserve">
          <source>LineEvent.toString()</source>
          <target state="translated">LineEvent.toString()</target>
        </trans-unit>
        <trans-unit id="045699cbf056ad75bce05f6ce044fa8f6293da03" translate="yes" xml:space="preserve">
          <source>LineListener</source>
          <target state="translated">LineListener</target>
        </trans-unit>
        <trans-unit id="5ccb49506878c8ad2a594fa48402d555dc79322d" translate="yes" xml:space="preserve">
          <source>LineListener.update()</source>
          <target state="translated">LineListener.update()</target>
        </trans-unit>
        <trans-unit id="6b20b9a7632852f4e033ba2b6fd163f6bd0829ff" translate="yes" xml:space="preserve">
          <source>LineMetrics</source>
          <target state="translated">LineMetrics</target>
        </trans-unit>
        <trans-unit id="9a39f2c960533af9dcb05b41272a5064cc8a3df8" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream</source>
          <target state="translated">LineNumberInputStream</target>
        </trans-unit>
        <trans-unit id="37174ded010b926c7bb437da578b85ff3ecb035b" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream.available()</source>
          <target state="translated">LineNumberInputStream.available()</target>
        </trans-unit>
        <trans-unit id="cf9d2c03feda6676ec8416179ad93d84e3ec4ad8" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream.getLineNumber()</source>
          <target state="translated">LineNumberInputStream.getLineNumber()</target>
        </trans-unit>
        <trans-unit id="6762255921713e66a719b67e18eab942863aa63f" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream.mark()</source>
          <target state="translated">LineNumberInputStream.mark()</target>
        </trans-unit>
        <trans-unit id="c4d3ca40f7cac1667242073b54c69f1917f697d3" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream.read()</source>
          <target state="translated">LineNumberInputStream.read()</target>
        </trans-unit>
        <trans-unit id="8d39540d63d0d35e5a41b9b0ac8ba440c6f32c8c" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream.reset()</source>
          <target state="translated">LineNumberInputStream.reset()</target>
        </trans-unit>
        <trans-unit id="c0eaa188ae29a8ab90ad3b7c7f137490cf978716" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream.setLineNumber()</source>
          <target state="translated">LineNumberInputStream.setLineNumber()</target>
        </trans-unit>
        <trans-unit id="442cf4e425e5a8e2e967bd24e110ae637bdc30aa" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream.skip()</source>
          <target state="translated">LineNumberInputStream.skip()</target>
        </trans-unit>
        <trans-unit id="3bbf27c6948402d0ec3a2d5abc9a87c3c3c409e9" translate="yes" xml:space="preserve">
          <source>LineNumberReader</source>
          <target state="translated">LineNumberReader</target>
        </trans-unit>
        <trans-unit id="42b11a4e3b5e28e6aebc7094b98e098982e08f83" translate="yes" xml:space="preserve">
          <source>LineNumberReader.getLineNumber()</source>
          <target state="translated">LineNumberReader.getLineNumber()</target>
        </trans-unit>
        <trans-unit id="780218a7b87574088e5ebeb6942bb437bef6e2e0" translate="yes" xml:space="preserve">
          <source>LineNumberReader.mark()</source>
          <target state="translated">LineNumberReader.mark()</target>
        </trans-unit>
        <trans-unit id="d67ad8af807e6f2eb96abd235b795d04785affe5" translate="yes" xml:space="preserve">
          <source>LineNumberReader.read()</source>
          <target state="translated">LineNumberReader.read()</target>
        </trans-unit>
        <trans-unit id="55a436f1801c055c23f8d529a1b010ff93486629" translate="yes" xml:space="preserve">
          <source>LineNumberReader.readLine()</source>
          <target state="translated">LineNumberReader.readLine()</target>
        </trans-unit>
        <trans-unit id="e8f6152b388d669befa40c4f2f45f6e78b1a237f" translate="yes" xml:space="preserve">
          <source>LineNumberReader.reset()</source>
          <target state="translated">LineNumberReader.reset()</target>
        </trans-unit>
        <trans-unit id="302b253394cda6336d8b3c9f443e268fff49b2cb" translate="yes" xml:space="preserve">
          <source>LineNumberReader.setLineNumber()</source>
          <target state="translated">LineNumberReader.setLineNumber()</target>
        </trans-unit>
        <trans-unit id="effc7e0170e2be3a45c6eefdd9a2d51787135e9e" translate="yes" xml:space="preserve">
          <source>LineNumberReader.skip()</source>
          <target state="translated">LineNumberReader.skip()</target>
        </trans-unit>
        <trans-unit id="0ca89a5dfd114f45c57b759a97713586e6672ac3" translate="yes" xml:space="preserve">
          <source>LineSpacing</source>
          <target state="translated">LineSpacing</target>
        </trans-unit>
        <trans-unit id="48bc6ffd0b85cfbd0a98dfdefc70ae8fcac6ef16" translate="yes" xml:space="preserve">
          <source>LineUnavailableException</source>
          <target state="translated">LineUnavailableException</target>
        </trans-unit>
        <trans-unit id="992208350b1d139e3d1d5fd3d7151218508bea65" translate="yes" xml:space="preserve">
          <source>Linear threshold.</source>
          <target state="translated">선형 임계 값.</target>
        </trans-unit>
        <trans-unit id="03ce85ff2ef9b1dca0cd08583d332362f8bd4df2" translate="yes" xml:space="preserve">
          <source>Linear threshold. Table tag &quot;LTSH&quot; in the Open Type Specification.</source>
          <target state="translated">선형 임계 값. Open Type 사양의 테이블 태그 「LTSH」입니다.</target>
        </trans-unit>
        <trans-unit id="1841ac97b63a024ec045a117df1ddfaa5f20ee34" translate="yes" xml:space="preserve">
          <source>LinearGradientPaint</source>
          <target state="translated">LinearGradientPaint</target>
        </trans-unit>
        <trans-unit id="f5fbcfed116a959c83c46b7e5626dc162570af39" translate="yes" xml:space="preserve">
          <source>Linebreak matcher</source>
          <target state="translated">줄 바꿈 매처</target>
        </trans-unit>
        <trans-unit id="4268e063226b060e3cde8b881f1bf249e1dbca2a" translate="yes" xml:space="preserve">
          <source>Lines and paths stroked using the &lt;code&gt;BasicStroke&lt;/code&gt; object may be &quot;normalized&quot; to provide consistent rendering of the outlines when positioned at various points on the drawable and whether drawn with aliased or antialiased rendering. This normalization process is controlled by the &lt;a href=&quot;renderinghints#KEY_STROKE_CONTROL&quot;&gt;&lt;code&gt;KEY_STROKE_CONTROL&lt;/code&gt;&lt;/a&gt; hint. The exact normalization algorithm is not specified, but the goals of this normalization are to ensure that lines are rendered with consistent visual appearance regardless of how they fall on the pixel grid and to promote more solid horizontal and vertical lines in antialiased mode so that they resemble their non-antialiased counterparts more closely. A typical normalization step might promote antialiased line endpoints to pixel centers to reduce the amount of blending or adjust the subpixel positioning of non-antialiased lines so that the floating point line widths round to even or odd pixel counts with equal likelihood. This process can move endpoints by up to half a pixel (usually towards positive infinity along both axes) to promote these consistent results.</source>
          <target state="translated">&lt;code&gt;BasicStroke&lt;/code&gt; 개체를 사용하여 스트로크 한 선과 경로 는 드로어 블의 다양한 지점에 배치 될 때 그리고 앨리어스 렌더링 또는 앤티 앨리어싱 렌더링으로 그릴 때 윤곽선의 일관된 렌더링을 제공하기 위해 &quot;정규화&quot;될 수 있습니다. 이 정규화 프로세스는 &lt;a href=&quot;renderinghints#KEY_STROKE_CONTROL&quot;&gt; &lt;code&gt;KEY_STROKE_CONTROL&lt;/code&gt; 에&lt;/a&gt; 의해 제어됩니다.힌트. 정확한 정규화 알고리즘은 지정되어 있지 않지만,이 정규화의 목표는 선이 픽셀 그리드에 떨어지는 방식에 관계없이 일관된 시각적 모양으로 렌더링되도록하고 앤티 앨리어싱 모드에서 더 단색의 가로 및 세로 선을 닮아서 닮도록 만드는 것입니다. 안티 앨리어싱되지 않은 대응 물이 더 가깝습니다. 일반적인 정규화 단계에서는 안티 앨리어싱 된 라인 끝점을 픽셀 중심으로 승격하여 블렌딩 양을 줄이거 나 비 앤티 앨리어싱되지 않은 라인의 하위 픽셀 위치를 조정하여 부동 소수점 라인 너비가 동일한 가능성으로 짝수 또는 홀수 픽셀 수로 반올림되도록 할 수 있습니다. 이 프로세스는 이러한 일관된 결과를 촉진하기 위해 끝점을 최대 1/2 픽셀 (일반적으로 두 축을 따라 양의 무한대 방향)까지 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="754138967f5ff0660266c24a09ee542e47a9b2b3" translate="yes" xml:space="preserve">
          <source>Lines exist in various states at different times. When a line opens, it reserves system resources for itself, and when it closes, these resources are freed for other objects or applications. The &lt;a href=&quot;#isOpen()&quot;&gt;&lt;code&gt;isOpen()&lt;/code&gt;&lt;/a&gt; method lets you discover whether a line is open or closed. An open line need not be processing data, however. Such processing is typically initiated by subinterface methods such as &lt;a href=&quot;sourcedataline#write(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;SourceDataLine.write&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;targetdataline#read(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;TargetDataLine.read&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선은 여러 상태에서 서로 다른 시간에 존재합니다. 라인이 열리면 자체 시스템 리소스를 예약하고 닫히면 다른 개체 또는 응용 프로그램을 위해 이러한 리소스가 해제됩니다. &lt;a href=&quot;#isOpen()&quot;&gt; &lt;code&gt;isOpen()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하면 라인의 개폐 여부를 발견 할 수 있습니다. 그러나 열린 라인이 데이터를 처리 할 필요는 없습니다. 이러한 처리는 일반적으로 &lt;a href=&quot;sourcedataline#write(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;SourceDataLine.write&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;targetdataline#read(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;TargetDataLine.read&lt;/code&gt; &lt;/a&gt; 와 같은 하위 인터페이스 메서드에 의해 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="a621582d055b826790bedb93da6d6921a769187c" translate="yes" xml:space="preserve">
          <source>Lines exist in various states at different times. When a line opens, it reserves system resources for itself, and when it closes, these resources are freed for other objects or applications. The &lt;code&gt;&lt;a href=&quot;line#isOpen--&quot;&gt;&lt;code&gt;isOpen()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method lets you discover whether a line is open or closed. An open line need not be processing data, however. Such processing is typically initiated by subinterface methods such as &lt;code&gt;&lt;a href=&quot;sourcedataline#write-byte:A-int-int-&quot;&gt;&lt;code&gt;SourceDataLine.write&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;targetdataline#read-byte:A-int-int-&quot;&gt;&lt;code&gt;TargetDataLine.read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">라인은 다른 시간에 다양한 상태로 존재합니다. 라인이 열리면 시스템 리소스 자체를 예약하고 닫으면이 리소스는 다른 개체 나 응용 프로그램에 사용할 수있게됩니다. &lt;code&gt;&lt;a href=&quot;line#isOpen--&quot;&gt;&lt;code&gt;isOpen()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메서드를 사용하면 라인의 개폐 여부를 발견 할 수 있습니다. 그러나 개방 라인은 데이터를 처리 할 필요가 없습니다. 이러한 처리는 일반적으로 &lt;code&gt;&lt;a href=&quot;sourcedataline#write-byte:A-int-int-&quot;&gt;&lt;code&gt;SourceDataLine.write&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;targetdataline#read-byte:A-int-int-&quot;&gt;&lt;code&gt;TargetDataLine.read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 와 같은 하위 인터페이스 메소드에 의해 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="951c4efcac4bc4208721f130e8d57b017997130e" translate="yes" xml:space="preserve">
          <source>Linger on close if data is present (when configured in blocking mode only)</source>
          <target state="translated">데이터가있는 경우 닫힘 상태가됩니다 (차단 모드에서만 구성된 경우).</target>
        </trans-unit>
        <trans-unit id="0f7369e1e17a1a7dff465183f33076af6a9e8682" translate="yes" xml:space="preserve">
          <source>Linger on close if data is present.</source>
          <target state="translated">데이터가있는 경우 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="b5ad1b59b8b582e35abdbd7ea521496dfaa02fed" translate="yes" xml:space="preserve">
          <source>Link Explanation. Detail explaining why link resolution failed.</source>
          <target state="translated">링크 설명. 링크 확인에 실패한 이유를 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="00e71118c7f05faf044fe9ebed91e610ee3586f8" translate="yes" xml:space="preserve">
          <source>Link Remaining Name. Portion of link name that has not been resolved.</source>
          <target state="translated">링크 남은 이름. 해결되지 않은 링크 이름 부분.</target>
        </trans-unit>
        <trans-unit id="74a76eeb7cf63935be0038f0f5b6ca3d0cf49be2" translate="yes" xml:space="preserve">
          <source>Link Resolved Name. Portion of link name that has been resolved.</source>
          <target state="translated">링크 확인 이름. 해결 된 링크 이름의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="bd225f5870e45a82923f73cdb4f52119e7cbb4e3" translate="yes" xml:space="preserve">
          <source>Link Resolved Object. Object to which resolution of link name proceeded.</source>
          <target state="translated">링크 해결 오브젝트. 링크 명의 해결이 진행된 객체.</target>
        </trans-unit>
        <trans-unit id="c160bf434c4deef228f8cd6cbbf24c831863944d" translate="yes" xml:space="preserve">
          <source>Link object encapsulating the nth link(s)</source>
          <target state="translated">n 번째 링크를 캡슐화하는 링크 객체</target>
        </trans-unit>
        <trans-unit id="9320d778ef52830e58ccb4e3c317d4e5a0be033f" translate="yes" xml:space="preserve">
          <source>Link-local</source>
          <target state="translated">Link-local</target>
        </trans-unit>
        <trans-unit id="b00bda10609f9a62e51102787408f221e9275c0f" translate="yes" xml:space="preserve">
          <source>Link-time checks</source>
          <target state="translated">링크 타임 체크</target>
        </trans-unit>
        <trans-unit id="89edd8b25be903a11a16dd9afa92020babfd02d3" translate="yes" xml:space="preserve">
          <source>LinkAction</source>
          <target state="translated">LinkAction</target>
        </trans-unit>
        <trans-unit id="06ef6797fe04713c356570c1190265f9f09e063d" translate="yes" xml:space="preserve">
          <source>LinkController</source>
          <target state="translated">LinkController</target>
        </trans-unit>
        <trans-unit id="af7063f0339e3b557739990d307e78cb8a50e3e8" translate="yes" xml:space="preserve">
          <source>LinkException</source>
          <target state="translated">LinkException</target>
        </trans-unit>
        <trans-unit id="26a2f1688f2bda45833599a500c4051568ab0b64" translate="yes" xml:space="preserve">
          <source>LinkException.getLinkExplanation()</source>
          <target state="translated">LinkException.getLinkExplanation()</target>
        </trans-unit>
        <trans-unit id="3f1b472b0c4d27eb9720134e56c8ea1e9c610b8d" translate="yes" xml:space="preserve">
          <source>LinkException.getLinkRemainingName()</source>
          <target state="translated">LinkException.getLinkRemainingName()</target>
        </trans-unit>
        <trans-unit id="83c983eeeb1190bc7cc8a5c1a1f15144c3f07ffe" translate="yes" xml:space="preserve">
          <source>LinkException.getLinkResolvedName()</source>
          <target state="translated">LinkException.getLinkResolvedName()</target>
        </trans-unit>
        <trans-unit id="7e8303f64feafac1dba2a5c5c0d195bc43c8c394" translate="yes" xml:space="preserve">
          <source>LinkException.getLinkResolvedObj()</source>
          <target state="translated">LinkException.getLinkResolvedObj()</target>
        </trans-unit>
        <trans-unit id="720fa0a044a912c19758f480cd9aca398d22fc2e" translate="yes" xml:space="preserve">
          <source>LinkException.setLinkExplanation()</source>
          <target state="translated">LinkException.setLinkExplanation()</target>
        </trans-unit>
        <trans-unit id="c8119780b2febfee0e31e171eab800d1c4fc4f8f" translate="yes" xml:space="preserve">
          <source>LinkException.setLinkRemainingName()</source>
          <target state="translated">LinkException.setLinkRemainingName()</target>
        </trans-unit>
        <trans-unit id="c675915a75c5622f955ffd9e6f9b8ff118b7655c" translate="yes" xml:space="preserve">
          <source>LinkException.setLinkResolvedName()</source>
          <target state="translated">LinkException.setLinkResolvedName()</target>
        </trans-unit>
        <trans-unit id="12048302afa1e5981f204dbced7d30941f634b1b" translate="yes" xml:space="preserve">
          <source>LinkException.setLinkResolvedObj()</source>
          <target state="translated">LinkException.setLinkResolvedObj()</target>
        </trans-unit>
        <trans-unit id="ff29a2c2b666fd901b07bd75d7777bad6a5fa453" translate="yes" xml:space="preserve">
          <source>LinkException.toString()</source>
          <target state="translated">LinkException.toString()</target>
        </trans-unit>
        <trans-unit id="c46f6162f43f81ffdf4cd92adbe46ea85c866d8f" translate="yes" xml:space="preserve">
          <source>LinkLoopException</source>
          <target state="translated">LinkLoopException</target>
        </trans-unit>
        <trans-unit id="64061dc31b0c169da1e21ae1dcdec18265c4bcf0" translate="yes" xml:space="preserve">
          <source>LinkOption</source>
          <target state="translated">LinkOption</target>
        </trans-unit>
        <trans-unit id="48bfe686b0c07b52e4a8df6611b09e5179c8f513" translate="yes" xml:space="preserve">
          <source>LinkOption.valueOf()</source>
          <target state="translated">LinkOption.valueOf()</target>
        </trans-unit>
        <trans-unit id="c4b3ed3d6c19bf4f218a0f0344d9366ba5b2c557" translate="yes" xml:space="preserve">
          <source>LinkOption.values()</source>
          <target state="translated">LinkOption.values()</target>
        </trans-unit>
        <trans-unit id="811070fb749f711358d5411a65ccf874f40841b9" translate="yes" xml:space="preserve">
          <source>LinkPermission</source>
          <target state="translated">LinkPermission</target>
        </trans-unit>
        <trans-unit id="3f0ececbf3f3edc2a7787b19bcf8277e54b467a2" translate="yes" xml:space="preserve">
          <source>LinkRef</source>
          <target state="translated">LinkRef</target>
        </trans-unit>
        <trans-unit id="e2a50b8b02cfeed7d866e071e008388c4a601137" translate="yes" xml:space="preserve">
          <source>LinkRef is bound to a name using the normal Context.bind()/rebind(), and DirContext.bind()/rebind(). Context.lookupLink() is used to retrieve the link itself if the terminal atomic name is bound to a link.</source>
          <target state="translated">LinkRef는 일반 Context.bind () / rebind () 및 DirContext.bind () / rebind ()를 사용하여 이름에 바인딩됩니다. Context.lookupLink ()는 터미널 원자 이름이 링크에 바인딩 된 경우 링크 자체를 검색하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="73376f89dc578ca93aa3fc03e76d2e67973a761a" translate="yes" xml:space="preserve">
          <source>LinkRef.getLinkName()</source>
          <target state="translated">LinkRef.getLinkName()</target>
        </trans-unit>
        <trans-unit id="2f9a7237759d3e871c0145a4324a81ace9bc1c70" translate="yes" xml:space="preserve">
          <source>LinkageError</source>
          <target state="translated">LinkageError</target>
        </trans-unit>
        <trans-unit id="a41efea32e4d3ca1d9ebc5f1c2b8ecbacf3bce48" translate="yes" xml:space="preserve">
          <source>Linked &lt;code&gt;Component&lt;/code&gt;s are not be resizable.</source>
          <target state="translated">연결된 &lt;code&gt;Component&lt;/code&gt; 는 크기를 조정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="71a5267f0d7f1db3cdd0c04c5e6674e08c4dbe28" translate="yes" xml:space="preserve">
          <source>Linked Components are not be resizable.</source>
          <target state="translated">연결된 구성 요소는 크기를 조정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6a13825e6f6af09d5b012273d4580e42ec390c90" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque</source>
          <target state="translated">LinkedBlockingDeque</target>
        </trans-unit>
        <trans-unit id="3cf9a6be40c8ed48a5f203cbf125a9579f5227c0" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.add()</source>
          <target state="translated">LinkedBlockingDeque.add()</target>
        </trans-unit>
        <trans-unit id="770e47398c3b1cb8a070d1544c7f3f884873ce7d" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.addFirst()</source>
          <target state="translated">LinkedBlockingDeque.addFirst()</target>
        </trans-unit>
        <trans-unit id="99e30e84dedd4bceed9b94236fdfd77a8541fc2e" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.addLast()</source>
          <target state="translated">LinkedBlockingDeque.addLast()</target>
        </trans-unit>
        <trans-unit id="c921c6afdde9db45f2f2a537aab626090c0635c8" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.clear()</source>
          <target state="translated">LinkedBlockingDeque.clear()</target>
        </trans-unit>
        <trans-unit id="8eb33db16044ec8249cbdb500a582ddeab59e680" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.contains()</source>
          <target state="translated">LinkedBlockingDeque.contains()</target>
        </trans-unit>
        <trans-unit id="ba7aad7be393da5a5be17a67b8efe29d9ce055e7" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.descendingIterator()</source>
          <target state="translated">LinkedBlockingDeque.descendingIterator()</target>
        </trans-unit>
        <trans-unit id="eaf88da7552f10e830bb7273122f02778cf111d7" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.drainTo()</source>
          <target state="translated">LinkedBlockingDeque.drainTo()</target>
        </trans-unit>
        <trans-unit id="3c194cdb3342bf7e59f604440f37b722f995dc42" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.element()</source>
          <target state="translated">LinkedBlockingDeque.element()</target>
        </trans-unit>
        <trans-unit id="e6a92a9f4a456731ed3002e5c6ffd7858fc52444" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.getFirst()</source>
          <target state="translated">LinkedBlockingDeque.getFirst()</target>
        </trans-unit>
        <trans-unit id="f895f28c2752456c58d8efcac1c9a86beacc6bf5" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.getLast()</source>
          <target state="translated">LinkedBlockingDeque.getLast()</target>
        </trans-unit>
        <trans-unit id="2d1e065f50a1ca8c8f8d3f43616187558a67c5a0" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.iterator()</source>
          <target state="translated">LinkedBlockingDeque.iterator()</target>
        </trans-unit>
        <trans-unit id="3c7c33e1482e0491f33bbb73eb274b5c8d0fd1ef" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.offer()</source>
          <target state="translated">LinkedBlockingDeque.offer()</target>
        </trans-unit>
        <trans-unit id="b141f661ea967ce8b9ad832864fbdbaf1f96f342" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.offerFirst()</source>
          <target state="translated">LinkedBlockingDeque.offerFirst()</target>
        </trans-unit>
        <trans-unit id="24f2615c15b953a51acf83feaf1ea6b4e69c97cc" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.offerLast()</source>
          <target state="translated">LinkedBlockingDeque.offerLast()</target>
        </trans-unit>
        <trans-unit id="fb16c249f5f7ff7f35ef5a821508179ba5822710" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.peek()</source>
          <target state="translated">LinkedBlockingDeque.peek()</target>
        </trans-unit>
        <trans-unit id="6456f011c9c16ae2fe202ce6a92aa5802e472b0d" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.peekFirst()</source>
          <target state="translated">LinkedBlockingDeque.peekFirst()</target>
        </trans-unit>
        <trans-unit id="71ac6aedad3d42ed2b1c6492a2f2f947a5aded02" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.peekLast()</source>
          <target state="translated">LinkedBlockingDeque.peekLast()</target>
        </trans-unit>
        <trans-unit id="3fd84703715f76a4b6f7791f39a94d8fa1415718" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.poll()</source>
          <target state="translated">LinkedBlockingDeque.poll()</target>
        </trans-unit>
        <trans-unit id="2eb4bfdb994d6e7a92982269528a3708f8e94d70" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.pollFirst()</source>
          <target state="translated">LinkedBlockingDeque.pollFirst()</target>
        </trans-unit>
        <trans-unit id="eb1b472536d2163e7c93da9eccac0b9ecee010f0" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.pollLast()</source>
          <target state="translated">LinkedBlockingDeque.pollLast()</target>
        </trans-unit>
        <trans-unit id="d798fd55b96316d022ea4c5e3c81ac3643cf4da9" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.pop()</source>
          <target state="translated">LinkedBlockingDeque.pop()</target>
        </trans-unit>
        <trans-unit id="b7f175caa7cf8c7614d8d489387b2da9a69aa4b3" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.push()</source>
          <target state="translated">LinkedBlockingDeque.push()</target>
        </trans-unit>
        <trans-unit id="368b1909eddd5193ec7668bdadf26b291e85b4ae" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.put()</source>
          <target state="translated">LinkedBlockingDeque.put()</target>
        </trans-unit>
        <trans-unit id="462860d11be018789b58c26bedc28bd82ef8e57c" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.putFirst()</source>
          <target state="translated">LinkedBlockingDeque.putFirst()</target>
        </trans-unit>
        <trans-unit id="6934a39de32d4b0c7a3168162044e790a249a369" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.putLast()</source>
          <target state="translated">LinkedBlockingDeque.putLast()</target>
        </trans-unit>
        <trans-unit id="d5eb7fd97b76bf92a990791e48bfc62bd86e9731" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.remainingCapacity()</source>
          <target state="translated">LinkedBlockingDeque.remainingCapacity()</target>
        </trans-unit>
        <trans-unit id="95f3d0d75655f5d14dc4e5d22196df46f10b639a" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.remove()</source>
          <target state="translated">LinkedBlockingDeque.remove()</target>
        </trans-unit>
        <trans-unit id="764addd2a72b8b636aa46ae0711c9e2834cc873d" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.removeFirst()</source>
          <target state="translated">LinkedBlockingDeque.removeFirst()</target>
        </trans-unit>
        <trans-unit id="97442da99b9a5800569b1e8eaf5c5068db0ce87a" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.removeFirstOccurrence()</source>
          <target state="translated">LinkedBlockingDeque.removeFirstOccurrence()</target>
        </trans-unit>
        <trans-unit id="828062c8eb098a749f6de135f18f5bfb7c947106" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.removeLast()</source>
          <target state="translated">LinkedBlockingDeque.removeLast()</target>
        </trans-unit>
        <trans-unit id="eae89207701e401741558ae17fd83d9fbbac48c1" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.removeLastOccurrence()</source>
          <target state="translated">LinkedBlockingDeque.removeLastOccurrence()</target>
        </trans-unit>
        <trans-unit id="7fb909d268af52bdd251b238f2ec27c6c5bcabf6" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.size()</source>
          <target state="translated">LinkedBlockingDeque.size()</target>
        </trans-unit>
        <trans-unit id="9f06759e285fe8158599603b4febdbfbeeb3ea52" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.spliterator()</source>
          <target state="translated">LinkedBlockingDeque.spliterator()</target>
        </trans-unit>
        <trans-unit id="635dc95159e5ddd6606dc9dc8462a4f23590109a" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.take()</source>
          <target state="translated">LinkedBlockingDeque.take()</target>
        </trans-unit>
        <trans-unit id="ebafcc93091d5668fee59efc7621078961746cb4" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.takeFirst()</source>
          <target state="translated">LinkedBlockingDeque.takeFirst()</target>
        </trans-unit>
        <trans-unit id="20553c0294259ba7cd06591ad7977ecbdb484113" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.takeLast()</source>
          <target state="translated">LinkedBlockingDeque.takeLast()</target>
        </trans-unit>
        <trans-unit id="6b7c1a73cd622265f11edecdec6a5104666d060f" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.toArray()</source>
          <target state="translated">LinkedBlockingDeque.toArray()</target>
        </trans-unit>
        <trans-unit id="a0c58c50be17085c9229eccbf1454146d9b097e6" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.toString()</source>
          <target state="translated">LinkedBlockingDeque.toString()</target>
        </trans-unit>
        <trans-unit id="066499461f256046611637e1fd378ead37e235d2" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue</source>
          <target state="translated">LinkedBlockingQueue</target>
        </trans-unit>
        <trans-unit id="f9b5317338c0f82f6d59d37a083b4a25e3aa8d30" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.clear()</source>
          <target state="translated">LinkedBlockingQueue.clear()</target>
        </trans-unit>
        <trans-unit id="bcfabd74fc0921d624fe9244c9233144e27a4909" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.contains()</source>
          <target state="translated">LinkedBlockingQueue.contains()</target>
        </trans-unit>
        <trans-unit id="599ea2323db62503391e99af78d6ae66b91f6447" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.drainTo()</source>
          <target state="translated">LinkedBlockingQueue.drainTo()</target>
        </trans-unit>
        <trans-unit id="43e1f1e69467094fa8ba64617e2eff6ab751b5d3" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.iterator()</source>
          <target state="translated">LinkedBlockingQueue.iterator()</target>
        </trans-unit>
        <trans-unit id="4a4e5c2026225c409fa1932f2698e20bd7eaf69f" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.offer()</source>
          <target state="translated">LinkedBlockingQueue.offer()</target>
        </trans-unit>
        <trans-unit id="077e9f28329ba9c7d0c4baceb37c4d9f060f57b6" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.peek()</source>
          <target state="translated">LinkedBlockingQueue.peek()</target>
        </trans-unit>
        <trans-unit id="33edea03339c7543cb63bade2413ce1b40fd62aa" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.poll()</source>
          <target state="translated">LinkedBlockingQueue.poll()</target>
        </trans-unit>
        <trans-unit id="9b96b4ac255a4829c58fa21bd063826749d17951" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.put()</source>
          <target state="translated">LinkedBlockingQueue.put()</target>
        </trans-unit>
        <trans-unit id="ef801346567996d4702a02aa83a9cef1d3591927" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.remainingCapacity()</source>
          <target state="translated">LinkedBlockingQueue.remainingCapacity()</target>
        </trans-unit>
        <trans-unit id="a09038af9a7b5e31fe4d87099a44df50496f2f37" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.remove()</source>
          <target state="translated">LinkedBlockingQueue.remove()</target>
        </trans-unit>
        <trans-unit id="a0b11f3ee42eba5d17da8b4af8b04fc1dc6ec76a" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.size()</source>
          <target state="translated">LinkedBlockingQueue.size()</target>
        </trans-unit>
        <trans-unit id="999208ef703e5db90ebbe86d4a93c17164fcfecf" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.spliterator()</source>
          <target state="translated">LinkedBlockingQueue.spliterator()</target>
        </trans-unit>
        <trans-unit id="ac2294fbddbacb598be9f6fa874c993480acc391" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.take()</source>
          <target state="translated">LinkedBlockingQueue.take()</target>
        </trans-unit>
        <trans-unit id="9235e180105e767fd851c8c17330379b85ba1c77" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.toArray()</source>
          <target state="translated">LinkedBlockingQueue.toArray()</target>
        </trans-unit>
        <trans-unit id="73b0ec8976fa4467335096905c9fa18ef995a1c4" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.toString()</source>
          <target state="translated">LinkedBlockingQueue.toString()</target>
        </trans-unit>
        <trans-unit id="07410b317023eeb58eba0c065fa4e8416575a68f" translate="yes" xml:space="preserve">
          <source>LinkedHashMap</source>
          <target state="translated">LinkedHashMap</target>
        </trans-unit>
        <trans-unit id="1d200b3fbab139396a0d514714432976f03c8017" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.clear()</source>
          <target state="translated">LinkedHashMap.clear()</target>
        </trans-unit>
        <trans-unit id="911c5d71833cb1cc77468812fc577358849e5b7c" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.containsValue()</source>
          <target state="translated">LinkedHashMap.containsValue()</target>
        </trans-unit>
        <trans-unit id="6215d1083f88c932b184bd3618c3529f3df8332d" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.entrySet()</source>
          <target state="translated">LinkedHashMap.entrySet()</target>
        </trans-unit>
        <trans-unit id="2ca8d0cad2f8c8647ecfeeea7d24aad73add40d9" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.forEach()</source>
          <target state="translated">LinkedHashMap.forEach()</target>
        </trans-unit>
        <trans-unit id="8e472a363902b50ac8293b2da1bea41c3c9ecb5c" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.get()</source>
          <target state="translated">LinkedHashMap.get()</target>
        </trans-unit>
        <trans-unit id="1dc7c7684ed11c201375c2effca5590121632a0a" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.getOrDefault()</source>
          <target state="translated">LinkedHashMap.getOrDefault()</target>
        </trans-unit>
        <trans-unit id="083934af6c0a7d758d147e514bd9fc3ed82a1d3a" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.keySet()</source>
          <target state="translated">LinkedHashMap.keySet()</target>
        </trans-unit>
        <trans-unit id="bf6fab29844959660fe2c3423414552a9a4273b9" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.removeEldestEntry()</source>
          <target state="translated">LinkedHashMap.removeEldestEntry()</target>
        </trans-unit>
        <trans-unit id="1fbb6473ee5fa99273a0baf6bc9f8aca9efa0201" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.replaceAll()</source>
          <target state="translated">LinkedHashMap.replaceAll()</target>
        </trans-unit>
        <trans-unit id="94f7b97337f4b917238bf2113b289db2f3d59703" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.values()</source>
          <target state="translated">LinkedHashMap.values()</target>
        </trans-unit>
        <trans-unit id="9e6a957a7c69081b233af13d7e01702499988584" translate="yes" xml:space="preserve">
          <source>LinkedHashSet</source>
          <target state="translated">LinkedHashSet</target>
        </trans-unit>
        <trans-unit id="c1d32d76efe1a9127888a929d1eee14dd5ffed63" translate="yes" xml:space="preserve">
          <source>LinkedHashSet.spliterator()</source>
          <target state="translated">LinkedHashSet.spliterator()</target>
        </trans-unit>
        <trans-unit id="bab055db373c2bd47845a4b8346d451b92d62d04" translate="yes" xml:space="preserve">
          <source>LinkedList</source>
          <target state="translated">LinkedList</target>
        </trans-unit>
        <trans-unit id="5b5db6f014c0cf47a567ce2ccc94c8d5407410af" translate="yes" xml:space="preserve">
          <source>LinkedList.add()</source>
          <target state="translated">LinkedList.add()</target>
        </trans-unit>
        <trans-unit id="36eaf5f50cd4bb2b004bf7146bb926cbfb7b722b" translate="yes" xml:space="preserve">
          <source>LinkedList.addAll()</source>
          <target state="translated">LinkedList.addAll()</target>
        </trans-unit>
        <trans-unit id="e710ccde696acb23f02ae7578a1d173ece911fb7" translate="yes" xml:space="preserve">
          <source>LinkedList.addFirst()</source>
          <target state="translated">LinkedList.addFirst()</target>
        </trans-unit>
        <trans-unit id="54eae1aa1cca5ee928b1003f1f59e89c8ee0eed6" translate="yes" xml:space="preserve">
          <source>LinkedList.addLast()</source>
          <target state="translated">LinkedList.addLast()</target>
        </trans-unit>
        <trans-unit id="33559a3383cb0e03fafe66cfd5bb300e02cb4da0" translate="yes" xml:space="preserve">
          <source>LinkedList.clear()</source>
          <target state="translated">LinkedList.clear()</target>
        </trans-unit>
        <trans-unit id="0e3757cb8042cd3c3d811ee6aa4d2270df2c2d44" translate="yes" xml:space="preserve">
          <source>LinkedList.clone()</source>
          <target state="translated">LinkedList.clone()</target>
        </trans-unit>
        <trans-unit id="4f1ba1cf2ce029e711039c4098bb0e044c1bbbc8" translate="yes" xml:space="preserve">
          <source>LinkedList.contains()</source>
          <target state="translated">LinkedList.contains()</target>
        </trans-unit>
        <trans-unit id="91af535333263bb31c6bd796a1ac737b6c24164b" translate="yes" xml:space="preserve">
          <source>LinkedList.descendingIterator()</source>
          <target state="translated">LinkedList.descendingIterator()</target>
        </trans-unit>
        <trans-unit id="b34d3aedb5df78048b90678b9ef06c20380e1ede" translate="yes" xml:space="preserve">
          <source>LinkedList.element()</source>
          <target state="translated">LinkedList.element()</target>
        </trans-unit>
        <trans-unit id="404b9a74ad1657b9f0f9b1e40e91a7c1b77b7677" translate="yes" xml:space="preserve">
          <source>LinkedList.get()</source>
          <target state="translated">LinkedList.get()</target>
        </trans-unit>
        <trans-unit id="d868d56a01271d186afbe3ac69c3078250075b5b" translate="yes" xml:space="preserve">
          <source>LinkedList.getFirst()</source>
          <target state="translated">LinkedList.getFirst()</target>
        </trans-unit>
        <trans-unit id="3fb3a05ace635f1beea0e8e73f2d099152f5a693" translate="yes" xml:space="preserve">
          <source>LinkedList.getLast()</source>
          <target state="translated">LinkedList.getLast()</target>
        </trans-unit>
        <trans-unit id="c2cd74e6b7d36ae83fa2b154a29b5a3cb8398431" translate="yes" xml:space="preserve">
          <source>LinkedList.indexOf()</source>
          <target state="translated">LinkedList.indexOf()</target>
        </trans-unit>
        <trans-unit id="320e2114a6b742b7f8f85046f3b6cada9dbae9be" translate="yes" xml:space="preserve">
          <source>LinkedList.lastIndexOf()</source>
          <target state="translated">LinkedList.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="51a9f4ffd62c58493c90cf69d3740ad623cfee16" translate="yes" xml:space="preserve">
          <source>LinkedList.listIterator()</source>
          <target state="translated">LinkedList.listIterator()</target>
        </trans-unit>
        <trans-unit id="abb776507e599593d3407eb5f2b0aac35673cf8d" translate="yes" xml:space="preserve">
          <source>LinkedList.offer()</source>
          <target state="translated">LinkedList.offer()</target>
        </trans-unit>
        <trans-unit id="c91bc9e1de6de503efb7b98a07fccb3d9c2b5fc9" translate="yes" xml:space="preserve">
          <source>LinkedList.offerFirst()</source>
          <target state="translated">LinkedList.offerFirst()</target>
        </trans-unit>
        <trans-unit id="9294be2c795b9ba475b53176dd4dd105dd2f5b25" translate="yes" xml:space="preserve">
          <source>LinkedList.offerLast()</source>
          <target state="translated">LinkedList.offerLast()</target>
        </trans-unit>
        <trans-unit id="79785fc8f14078a4de3f9033965f871c0892b627" translate="yes" xml:space="preserve">
          <source>LinkedList.peek()</source>
          <target state="translated">LinkedList.peek()</target>
        </trans-unit>
        <trans-unit id="4c0f87c07e752c874fee990a843d6e419a9e852d" translate="yes" xml:space="preserve">
          <source>LinkedList.peekFirst()</source>
          <target state="translated">LinkedList.peekFirst()</target>
        </trans-unit>
        <trans-unit id="a02c49fed817e1ce3835b083342411cb9cf581e9" translate="yes" xml:space="preserve">
          <source>LinkedList.peekLast()</source>
          <target state="translated">LinkedList.peekLast()</target>
        </trans-unit>
        <trans-unit id="f093620323375893248dba7bbc5246cadba7c703" translate="yes" xml:space="preserve">
          <source>LinkedList.poll()</source>
          <target state="translated">LinkedList.poll()</target>
        </trans-unit>
        <trans-unit id="212551ddf0ee0a96585693db502d00a9cd8935d5" translate="yes" xml:space="preserve">
          <source>LinkedList.pollFirst()</source>
          <target state="translated">LinkedList.pollFirst()</target>
        </trans-unit>
        <trans-unit id="e52ce7d37ccac0f3202ef13f224ab01cf3e06a03" translate="yes" xml:space="preserve">
          <source>LinkedList.pollLast()</source>
          <target state="translated">LinkedList.pollLast()</target>
        </trans-unit>
        <trans-unit id="2f4ddb23b698cd9a5090d13d59ffeb66ef652486" translate="yes" xml:space="preserve">
          <source>LinkedList.pop()</source>
          <target state="translated">LinkedList.pop()</target>
        </trans-unit>
        <trans-unit id="4c6fce40d8d8bf8ee79e13753b0f88fc0610966b" translate="yes" xml:space="preserve">
          <source>LinkedList.push()</source>
          <target state="translated">LinkedList.push()</target>
        </trans-unit>
        <trans-unit id="0f803f88958ece1606e2444425bbe2949d045549" translate="yes" xml:space="preserve">
          <source>LinkedList.remove()</source>
          <target state="translated">LinkedList.remove()</target>
        </trans-unit>
        <trans-unit id="e202bb2f66376441fe25df5049da5c77ca7a71f1" translate="yes" xml:space="preserve">
          <source>LinkedList.removeFirst()</source>
          <target state="translated">LinkedList.removeFirst()</target>
        </trans-unit>
        <trans-unit id="4410be95bad2c1f32ddfc126a91992d35b0ff04e" translate="yes" xml:space="preserve">
          <source>LinkedList.removeFirstOccurrence()</source>
          <target state="translated">LinkedList.removeFirstOccurrence()</target>
        </trans-unit>
        <trans-unit id="56a18d021312ac21b1c2f9b3b7e4ada06d5f12f4" translate="yes" xml:space="preserve">
          <source>LinkedList.removeLast()</source>
          <target state="translated">LinkedList.removeLast()</target>
        </trans-unit>
        <trans-unit id="42b150ab93b951f38749ecd169538fd91113d1ea" translate="yes" xml:space="preserve">
          <source>LinkedList.removeLastOccurrence()</source>
          <target state="translated">LinkedList.removeLastOccurrence()</target>
        </trans-unit>
        <trans-unit id="d12a0395140855f2dddc8c1c31c3cbfb288cc0e4" translate="yes" xml:space="preserve">
          <source>LinkedList.set()</source>
          <target state="translated">LinkedList.set()</target>
        </trans-unit>
        <trans-unit id="d4ed663cb8e64d28c000471e2173a83d9e511761" translate="yes" xml:space="preserve">
          <source>LinkedList.size()</source>
          <target state="translated">LinkedList.size()</target>
        </trans-unit>
        <trans-unit id="590ba7590ab0b25855ec502c04525824d9c7f31d" translate="yes" xml:space="preserve">
          <source>LinkedList.spliterator()</source>
          <target state="translated">LinkedList.spliterator()</target>
        </trans-unit>
        <trans-unit id="7b1c32dedcc1aeab1b5f7847d986179baa8d9fab" translate="yes" xml:space="preserve">
          <source>LinkedList.toArray()</source>
          <target state="translated">LinkedList.toArray()</target>
        </trans-unit>
        <trans-unit id="939a184cb6be9f092ccc163c519812fbd2202ca6" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue</source>
          <target state="translated">LinkedTransferQueue</target>
        </trans-unit>
        <trans-unit id="f715110237b81f645b4d6a59f676e1c563bbeb8c" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.add()</source>
          <target state="translated">LinkedTransferQueue.add()</target>
        </trans-unit>
        <trans-unit id="223be7778ded6aaa76b37108572b53ed37c229e8" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.contains()</source>
          <target state="translated">LinkedTransferQueue.contains()</target>
        </trans-unit>
        <trans-unit id="b9755eb06ea92a0c99a9c2da69369914cbc367d4" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.drainTo()</source>
          <target state="translated">LinkedTransferQueue.drainTo()</target>
        </trans-unit>
        <trans-unit id="2d0718ad305441f1c0ca5fb663d640f27d127da6" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.getWaitingConsumerCount()</source>
          <target state="translated">LinkedTransferQueue.getWaitingConsumerCount()</target>
        </trans-unit>
        <trans-unit id="0105c87c72e25e610b5d2462bcdb0751924e06db" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.hasWaitingConsumer()</source>
          <target state="translated">LinkedTransferQueue.hasWaitingConsumer()</target>
        </trans-unit>
        <trans-unit id="24bc98860e44519db08f437430936c3d11b7e0cc" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.isEmpty()</source>
          <target state="translated">LinkedTransferQueue.isEmpty()</target>
        </trans-unit>
        <trans-unit id="0f3d49e5af3144789cad6884b50f058de2371823" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.iterator()</source>
          <target state="translated">LinkedTransferQueue.iterator()</target>
        </trans-unit>
        <trans-unit id="f8151a538a3dc2ae5889435dca1a47cf7fa5a3fa" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.offer()</source>
          <target state="translated">LinkedTransferQueue.offer()</target>
        </trans-unit>
        <trans-unit id="dabe674b4977ad9d3f421e991acd566730203337" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.peek()</source>
          <target state="translated">LinkedTransferQueue.peek()</target>
        </trans-unit>
        <trans-unit id="66d35930d3381f0c5cee2be8cd2e1ace30bc3806" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.poll()</source>
          <target state="translated">LinkedTransferQueue.poll()</target>
        </trans-unit>
        <trans-unit id="738474e85a1b6c47434498045b0bb29cb46dbfc9" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.put()</source>
          <target state="translated">LinkedTransferQueue.put()</target>
        </trans-unit>
        <trans-unit id="120c476701053a7a0acd9169d2713655b6c4e437" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.remainingCapacity()</source>
          <target state="translated">LinkedTransferQueue.remainingCapacity()</target>
        </trans-unit>
        <trans-unit id="620ac2b94bb4b900410ece8aadd27e2c3c571d03" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.remove()</source>
          <target state="translated">LinkedTransferQueue.remove()</target>
        </trans-unit>
        <trans-unit id="dac65e6846e7508c881bca96aff689e329f5a243" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.size()</source>
          <target state="translated">LinkedTransferQueue.size()</target>
        </trans-unit>
        <trans-unit id="c22900277946f3d5a8806a3e3829b74f908a56cb" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.spliterator()</source>
          <target state="translated">LinkedTransferQueue.spliterator()</target>
        </trans-unit>
        <trans-unit id="51d9fdac8ea52e8519ad71462b34348d121f75a5" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.take()</source>
          <target state="translated">LinkedTransferQueue.take()</target>
        </trans-unit>
        <trans-unit id="e2458e06ff64c78f7c654d465b9dc5cde4b7e9a4" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.transfer()</source>
          <target state="translated">LinkedTransferQueue.transfer()</target>
        </trans-unit>
        <trans-unit id="bb735262f70983167f59f4e12814c496452e4dd4" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.tryTransfer()</source>
          <target state="translated">LinkedTransferQueue.tryTransfer()</target>
        </trans-unit>
        <trans-unit id="84bc4ceb44d72c0085207da88d2b4aceb48a242d" translate="yes" xml:space="preserve">
          <source>Linking starts with resolving the constant pool entry for the bootstrap method, and resolving a &lt;a href=&quot;methodtype&quot;&gt;&lt;code&gt;MethodType&lt;/code&gt;&lt;/a&gt; object for the type descriptor of the dynamic call site. This resolution process may trigger class loading. It may therefore throw an error if a class fails to load. This error becomes the abnormal termination of the dynamic call site execution. Linkage does not trigger class initialization.</source>
          <target state="translated">연결은 부트 스트랩 메서드의 상수 풀 항목을 확인 하고 동적 호출 사이트의 형식 설명자를위한 &lt;a href=&quot;methodtype&quot;&gt; &lt;code&gt;MethodType&lt;/code&gt; &lt;/a&gt; 개체를 확인하는 것으로 시작 합니다. 이 해결 프로세스는 클래스로드를 트리거 할 수 있습니다. 따라서 클래스를로드하지 못하면 오류가 발생할 수 있습니다. 이 오류는 동적 호출 사이트 실행의 비정상 종료가됩니다. 연결은 클래스 초기화를 트리거하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3bb01b2e1ebc6058cbeb234860c856644824bcb1" translate="yes" xml:space="preserve">
          <source>Links edge &lt;code&gt;e1&lt;/code&gt; of component &lt;code&gt;c1&lt;/code&gt; to edge &lt;code&gt;e2&lt;/code&gt; of component &lt;code&gt;c2&lt;/code&gt;, with a fixed distance between the edges.</source>
          <target state="translated">구성 요소 &lt;code&gt;c1&lt;/code&gt; 의 가장자리 &lt;code&gt;e1&lt;/code&gt; 을 구성 요소 &lt;code&gt;c2&lt;/code&gt; 의 가장자리 &lt;code&gt;e2&lt;/code&gt; 에 연결하고 가장자리 사이에 고정 된 거리를 둡니다.</target>
        </trans-unit>
        <trans-unit id="6f3fcd428b4822c749716dd1a6a0f4f370ad70a4" translate="yes" xml:space="preserve">
          <source>Links edge &lt;code&gt;e1&lt;/code&gt; of component &lt;code&gt;c1&lt;/code&gt; to edge &lt;code&gt;e2&lt;/code&gt; of component &lt;code&gt;c2&lt;/code&gt;, with a fixed distance between the edges. This constraint will cause the assignment</source>
          <target state="translated">구성 요소 &lt;code&gt;c1&lt;/code&gt; 의 가장자리 &lt;code&gt;e1&lt;/code&gt; 을 구성 요소 &lt;code&gt;c2&lt;/code&gt; 의 가장자리 &lt;code&gt;e2&lt;/code&gt; 에 연결하고 가장자리 사이에 고정 된 거리를 둡니다. 이 제약으로 인해</target>
        </trans-unit>
        <trans-unit id="725eea6948d64e0fc49210ec155bf768e9d8c730" translate="yes" xml:space="preserve">
          <source>Links edge &lt;code&gt;e1&lt;/code&gt; of component &lt;code&gt;c1&lt;/code&gt; to edge &lt;code&gt;e2&lt;/code&gt; of component &lt;code&gt;c2&lt;/code&gt;.</source>
          <target state="translated">구성 요소 &lt;code&gt;c1&lt;/code&gt; 의 가장자리 &lt;code&gt;e1&lt;/code&gt; 을 구성 요소 &lt;code&gt;c2&lt;/code&gt; 의 가장자리 &lt;code&gt;e2&lt;/code&gt; 에 연결합니다 .</target>
        </trans-unit>
        <trans-unit id="b9fb9b2a3a15b412ab1f98ee473b5789a26d8f1b" translate="yes" xml:space="preserve">
          <source>Links edge &lt;code&gt;e1&lt;/code&gt; of component &lt;code&gt;c1&lt;/code&gt; to edge &lt;code&gt;e2&lt;/code&gt; of component &lt;code&gt;c2&lt;/code&gt;. As edge &lt;code&gt;(e2, c2)&lt;/code&gt; changes value, edge &lt;code&gt;(e1, c1)&lt;/code&gt; will be calculated by taking the (spring) sum of &lt;code&gt;(e2, c2)&lt;/code&gt; and &lt;code&gt;s&lt;/code&gt;. Each edge must have one of the following values: &lt;code&gt;SpringLayout.NORTH&lt;/code&gt;, &lt;code&gt;SpringLayout.SOUTH&lt;/code&gt;, &lt;code&gt;SpringLayout.EAST&lt;/code&gt;, &lt;code&gt;SpringLayout.WEST&lt;/code&gt;, &lt;code&gt;SpringLayout.VERTICAL_CENTER&lt;/code&gt;, &lt;code&gt;SpringLayout.HORIZONTAL_CENTER&lt;/code&gt; or &lt;code&gt;SpringLayout.BASELINE&lt;/code&gt;.</source>
          <target state="translated">구성 요소 &lt;code&gt;c1&lt;/code&gt; 의 가장자리 &lt;code&gt;e1&lt;/code&gt; 을 구성 요소 &lt;code&gt;c2&lt;/code&gt; 의 가장자리 &lt;code&gt;e2&lt;/code&gt; 에 연결합니다 . 모서리 &lt;code&gt;(e2, c2)&lt;/code&gt; 가 값을 변경하면 모서리 &lt;code&gt;(e1, c1)&lt;/code&gt; 는 &lt;code&gt;(e2, c2)&lt;/code&gt; 와 &lt;code&gt;s&lt;/code&gt; 의 (스프링) 합을 취하여 계산됩니다 . 각 에지에는 &lt;code&gt;SpringLayout.NORTH&lt;/code&gt; , &lt;code&gt;SpringLayout.SOUTH&lt;/code&gt; , &lt;code&gt;SpringLayout.EAST&lt;/code&gt; , &lt;code&gt;SpringLayout.WEST&lt;/code&gt; , &lt;code&gt;SpringLayout.VERTICAL_CENTER&lt;/code&gt; , &lt;code&gt;SpringLayout.HORIZONTAL_CENTER&lt;/code&gt; 또는 &lt;code&gt;SpringLayout.BASELINE&lt;/code&gt; 값 중 하나가 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="d31498951e70a9c4ec24e739dccda72677242c86" translate="yes" xml:space="preserve">
          <source>Links the specified class.</source>
          <target state="translated">지정된 클래스를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="0139e71a9eda98e6eed3b701660c87507f56dfff" translate="yes" xml:space="preserve">
          <source>Links the specified class. This (misleadingly named) method may be used by a class loader to link a class. If the class &lt;code&gt;c&lt;/code&gt; has already been linked, then this method simply returns. Otherwise, the class is linked as described in the &quot;Execution&quot; chapter of</source>
          <target state="translated">지정된 클래스를 연결합니다. 클래스 로더가 클래스를 연결하는 데이 이름이 잘못 지정 될 수 있습니다. 클래스 &lt;code&gt;c&lt;/code&gt; 가 이미 링크 된 경우이 메소드는 단순히 리턴합니다. 그렇지 않으면 클래스는 &quot;실행&quot;장에 설명 된대로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="9a4b9200875e5d32b242f72c7d988e9eaa98cf86" translate="yes" xml:space="preserve">
          <source>Linux support is currently limited to Unity. However to make these features work on Unity, the app should be run from a .desktop file with specified &lt;code&gt;java.desktop.appName&lt;/code&gt; system property set to this .desktop file name: &lt;code&gt;Exec=java -Djava.desktop.appName=MyApp.desktop -jar /path/to/myapp.jar&lt;/code&gt; see &lt;a href=&quot;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles&quot;&gt; https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles&lt;/a&gt;</source>
          <target state="translated">Linux 지원은 현재 Unity로 제한됩니다. 그러나 이러한 기능이 Unity에서 작동하도록하려면 지정된 &lt;code&gt;java.desktop.appName&lt;/code&gt; 시스템 속성이 다음 .desktop 파일 이름으로 설정된 .desktop 파일에서 앱을 실행해야합니다 . &lt;code&gt;Exec=java -Djava.desktop.appName=MyApp.desktop -jar /path/to/myapp.jar&lt;/code&gt; 참조 &lt;a href=&quot;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles&quot;&gt;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1fffaaafb7cc996685bceb829c053cc4f7de43d" translate="yes" xml:space="preserve">
          <source>List</source>
          <target state="translated">List</target>
        </trans-unit>
        <trans-unit id="178ac1cb841dff8c17d24ef7eece0b0030034548" translate="yes" xml:space="preserve">
          <source>List Data Listener contents changed method.</source>
          <target state="translated">List Data Listener 내용 변경 방법.</target>
        </trans-unit>
        <trans-unit id="ee68ea3edce40fb811ac3446e892ba0d852f4902" translate="yes" xml:space="preserve">
          <source>List Data Listener contents changed method. Used to fire the visible data property change</source>
          <target state="translated">List Data Listener 내용 변경 방법. 가시적 인 데이터 속성 변경을 시작하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d3972f9598e942aeca8901e37e89677aa59e0aad" translate="yes" xml:space="preserve">
          <source>List Data Listener interval added method.</source>
          <target state="translated">List Data Listener 간격 추가 방법.</target>
        </trans-unit>
        <trans-unit id="3b31ba43958920c5a902d6cee4036d320132d367" translate="yes" xml:space="preserve">
          <source>List Data Listener interval added method. Used to fire the visible data property change</source>
          <target state="translated">List Data Listener 간격 추가 방법. 가시적 인 데이터 속성 변경을 시작하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b50b4a59cb5b3bac204e9bf2646698d90ae3245f" translate="yes" xml:space="preserve">
          <source>List Data Listener interval removed method.</source>
          <target state="translated">List Data Listener 간격 제거 방법.</target>
        </trans-unit>
        <trans-unit id="d9e405d8dd8d8a3d1b5c7ba62261e80ab0a8ca1a" translate="yes" xml:space="preserve">
          <source>List Data Listener interval removed method. Used to fire the visible data property change</source>
          <target state="translated">List Data Listener 간격 제거 방법. 가시적 인 데이터 속성 변경을 시작하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b6f3b2d1e680dd7c12ca74a48f81cb8df21d1d0c" translate="yes" xml:space="preserve">
          <source>List Item</source>
          <target state="translated">목록 항목</target>
        </trans-unit>
        <trans-unit id="f60c52ba9cf4f20e3194599b233efa6b9d7a6ee2" translate="yes" xml:space="preserve">
          <source>List Selection Listener value change method.</source>
          <target state="translated">목록 선택 리스너 값 변경 방법.</target>
        </trans-unit>
        <trans-unit id="b94eb620ed0425e36217e343ebe63b5676519ccb" translate="yes" xml:space="preserve">
          <source>List Selection Listener value change method. Used to fire the property change</source>
          <target state="translated">목록 선택 리스너 값 변경 방법. 속성 변경을 시작하는 데 사용</target>
        </trans-unit>
        <trans-unit id="a12f563fc0c9848cf3a2ab3ceb0db5fcbef9bf65" translate="yes" xml:space="preserve">
          <source>List of &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt; ownable synchronizers&lt;/a&gt; locked by the thread.</source>
          <target state="translated">스레드가 잠글 수 있는 &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;소유 가능한 동기화 프로그램&lt;/a&gt; 목록</target>
        </trans-unit>
        <trans-unit id="e6cdf747e889c73bc6d076b41dbea9f617c23996" translate="yes" xml:space="preserve">
          <source>List of &lt;code&gt;BeanContextServicesListener&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;BeanContextServicesListener&lt;/code&gt; 객체의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="558d268fc6e4f8e7df1615838ba30af4aa5de44f" translate="yes" xml:space="preserve">
          <source>List of TableColumnModelListener</source>
          <target state="translated">TableColumnModelListener 목록</target>
        </trans-unit>
        <trans-unit id="525a978c2a773c373ea96c01f28eb5b6d960742d" translate="yes" xml:space="preserve">
          <source>List of all discovered &lt;code&gt;ScriptEngineFactory&lt;/code&gt;s.</source>
          <target state="translated">발견 된 모든 &lt;code&gt;ScriptEngineFactory&lt;/code&gt; 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="644e7c1b9c5e17ffaff3d7216cb311a375ef4cd1" translate="yes" xml:space="preserve">
          <source>List of listeners</source>
          <target state="translated">청취자 목록</target>
        </trans-unit>
        <trans-unit id="b53f4e099d930013ae75999f6a2a190b68fce17b" translate="yes" xml:space="preserve">
          <source>List of object monitors locked by the thread.</source>
          <target state="translated">스레드에 의해 잠긴 오브젝트 모니터 목록.</target>
        </trans-unit>
        <trans-unit id="e23810a7f1311462b9876303932b3892b8a9aa31" translate="yes" xml:space="preserve">
          <source>List of paths to search when loading libraries</source>
          <target state="translated">라이브러리를로드 할 때 검색 할 경로 목록</target>
        </trans-unit>
        <trans-unit id="91527673d332a547df705e4a0a69ac84f2bb8363" translate="yes" xml:space="preserve">
          <source>List of provided features.</source>
          <target state="translated">제공되는 기능 목록입니다.</target>
        </trans-unit>
        <trans-unit id="f6ec32bc74f0125b81a40257c01b148676e2aace" translate="yes" xml:space="preserve">
          <source>List of provided features. Each platform supports a different set of features. You may use the &lt;a href=&quot;taskbar#isSupported(java.awt.Taskbar.Feature)&quot;&gt;&lt;code&gt;Taskbar.isSupported(java.awt.Taskbar.Feature)&lt;/code&gt;&lt;/a&gt; method to determine if the given feature is supported by the current platform.</source>
          <target state="translated">제공되는 기능 목록입니다. 각 플랫폼은 서로 다른 기능 세트를 지원합니다. 당신은 사용할 수 있습니다 &lt;a href=&quot;taskbar#isSupported(java.awt.Taskbar.Feature)&quot;&gt; &lt;code&gt;Taskbar.isSupported(java.awt.Taskbar.Feature)&lt;/code&gt; &lt;/a&gt; 주어진 기능은 현재 플랫폼에서 지원되는지 확인하는 방법을.</target>
        </trans-unit>
        <trans-unit id="ff80a40bbb375c2b17fb7d010558bfe89a922cb9" translate="yes" xml:space="preserve">
          <source>List of the fully qualified names of the Java classes allowed for open data values.</source>
          <target state="translated">열린 데이터 값에 허용되는 Java 클래스의 완전한 이름 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d4eed648c7bea14b9f5ebe1ed61d6f216541973e" translate="yes" xml:space="preserve">
          <source>List of the fully qualified names of the Java classes allowed for open data values. A multidimensional array of any one of these classes or their corresponding primitive types is also an allowed class for open data values.</source>
          <target state="translated">열린 데이터 값에 허용되는 Java 클래스의 완전한 이름 목록입니다. 이러한 클래스 중 하나 또는 해당 기본 유형의 다차원 배열도 열린 데이터 값에 허용되는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="551aabb6984e71f7e395389214b231c232f409cc" translate="yes" xml:space="preserve">
          <source>List region.</source>
          <target state="translated">목록 지역.</target>
        </trans-unit>
        <trans-unit id="29eca64f0b775845ed932ba2083b3cc85aea77ce" translate="yes" xml:space="preserve">
          <source>List region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">목록 지역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 &lt;code&gt;List&lt;/code&gt; 라는 이름을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f2ae7cd3983f80b85317d38659b7fc79324aad1d" translate="yes" xml:space="preserve">
          <source>List the available filesystem roots.</source>
          <target state="translated">사용 가능한 파일 시스템 루트를 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="b6b890c40b834e7344a192d92cfa122bc7b6e012" translate="yes" xml:space="preserve">
          <source>List view icon</source>
          <target state="translated">목록보기 아이콘</target>
        </trans-unit>
        <trans-unit id="46da90d5143dc8362cee0f6b4c9388ea7a92476f" translate="yes" xml:space="preserve">
          <source>List.AccessibleAWTList</source>
          <target state="translated">List.AccessibleAWTList</target>
        </trans-unit>
        <trans-unit id="1f73922b71c42f08979d7b40a4fa432705d6d784" translate="yes" xml:space="preserve">
          <source>List.AccessibleAWTList.AccessibleAWTListChild</source>
          <target state="translated">List.AccessibleAWTList.AccessibleAWTListChild</target>
        </trans-unit>
        <trans-unit id="d14b7c0f12440628dcaefb1e2f628f5c7f28ddde" translate="yes" xml:space="preserve">
          <source>List.add()</source>
          <target state="translated">List.add()</target>
        </trans-unit>
        <trans-unit id="86d488c350fa52e3da1f277bfcba7e7507001a36" translate="yes" xml:space="preserve">
          <source>List.addAll()</source>
          <target state="translated">List.addAll()</target>
        </trans-unit>
        <trans-unit id="1a84b0d8d4b6a09ca8b34c444b8c7376621f0f85" translate="yes" xml:space="preserve">
          <source>List.clear()</source>
          <target state="translated">List.clear()</target>
        </trans-unit>
        <trans-unit id="750836ee21c241608e78f31c473b209f6ccf13f4" translate="yes" xml:space="preserve">
          <source>List.contains()</source>
          <target state="translated">List.contains()</target>
        </trans-unit>
        <trans-unit id="3b2c0bff4f12709c8da887a84be5655107060466" translate="yes" xml:space="preserve">
          <source>List.containsAll()</source>
          <target state="translated">List.containsAll()</target>
        </trans-unit>
        <trans-unit id="644809e4138ce92dcfabee0b4f02d5d216405788" translate="yes" xml:space="preserve">
          <source>List.equals()</source>
          <target state="translated">List.equals()</target>
        </trans-unit>
        <trans-unit id="86a7fc9a68715e2611d9c85d3044c4a0df69fc29" translate="yes" xml:space="preserve">
          <source>List.get()</source>
          <target state="translated">List.get()</target>
        </trans-unit>
        <trans-unit id="3b310f93e5895573de436e7c5c8da76a99bca0ec" translate="yes" xml:space="preserve">
          <source>List.hashCode()</source>
          <target state="translated">List.hashCode()</target>
        </trans-unit>
        <trans-unit id="0cac228b9b3e3fa36ea1e0a08a25f070b733e14f" translate="yes" xml:space="preserve">
          <source>List.indexOf()</source>
          <target state="translated">List.indexOf()</target>
        </trans-unit>
        <trans-unit id="eb4f897db91be5ed91613dfe895e372fc2625367" translate="yes" xml:space="preserve">
          <source>List.isEmpty()</source>
          <target state="translated">List.isEmpty()</target>
        </trans-unit>
        <trans-unit id="374e236e19bedfd585542bc4f7611e6535386ae6" translate="yes" xml:space="preserve">
          <source>List.iterator()</source>
          <target state="translated">List.iterator()</target>
        </trans-unit>
        <trans-unit id="0c6be73180f3499d1cbd278adb992056b23842c9" translate="yes" xml:space="preserve">
          <source>List.lastIndexOf()</source>
          <target state="translated">List.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="0b95f40b030070ae8fb75d46e7f4c5fbd659b700" translate="yes" xml:space="preserve">
          <source>List.listIterator()</source>
          <target state="translated">List.listIterator()</target>
        </trans-unit>
        <trans-unit id="91244face8cde1eefcf1019ecb2c39865751c226" translate="yes" xml:space="preserve">
          <source>List.remove()</source>
          <target state="translated">List.remove()</target>
        </trans-unit>
        <trans-unit id="ccdbb9a6e2ffd61ef3a8c762016eb8537a1376a3" translate="yes" xml:space="preserve">
          <source>List.removeAll()</source>
          <target state="translated">List.removeAll()</target>
        </trans-unit>
        <trans-unit id="14f087d77f78b3c1abd4432bc118b7c1b03d25c5" translate="yes" xml:space="preserve">
          <source>List.replaceAll()</source>
          <target state="translated">List.replaceAll()</target>
        </trans-unit>
        <trans-unit id="d61e26b7dc8657d8c1c449c4655e03ded15fa4ab" translate="yes" xml:space="preserve">
          <source>List.retainAll()</source>
          <target state="translated">List.retainAll()</target>
        </trans-unit>
        <trans-unit id="fa12ade1cf76b01cc144428a12f18c55b710572c" translate="yes" xml:space="preserve">
          <source>List.set()</source>
          <target state="translated">List.set()</target>
        </trans-unit>
        <trans-unit id="cd4362128a00a8f09c127fb2deaddc8859e69d49" translate="yes" xml:space="preserve">
          <source>List.size()</source>
          <target state="translated">List.size()</target>
        </trans-unit>
        <trans-unit id="69353b05fa9995563a59d6363a8eb36ae6a2bc68" translate="yes" xml:space="preserve">
          <source>List.sort()</source>
          <target state="translated">List.sort()</target>
        </trans-unit>
        <trans-unit id="43bd389aea250e9be1afc7329a8041930a089833" translate="yes" xml:space="preserve">
          <source>List.spliterator()</source>
          <target state="translated">List.spliterator()</target>
        </trans-unit>
        <trans-unit id="8b585401dc6bf10345ead40a70ff641f6d5c99c4" translate="yes" xml:space="preserve">
          <source>List.subList()</source>
          <target state="translated">List.subList()</target>
        </trans-unit>
        <trans-unit id="101d82f3a15011eb520b02011a496e6bfdf1fd60" translate="yes" xml:space="preserve">
          <source>List.toArray()</source>
          <target state="translated">List.toArray()</target>
        </trans-unit>
        <trans-unit id="c04522bcfea57a90f9ee3fab44374010d438898e" translate="yes" xml:space="preserve">
          <source>ListCellRenderer</source>
          <target state="translated">ListCellRenderer</target>
        </trans-unit>
        <trans-unit id="787952dbe8887838a51dfb610409ecc10955d783" translate="yes" xml:space="preserve">
          <source>ListDataEvent</source>
          <target state="translated">ListDataEvent</target>
        </trans-unit>
        <trans-unit id="18b10d59b078940957f75793022d11dea092c59b" translate="yes" xml:space="preserve">
          <source>ListDataHandler</source>
          <target state="translated">ListDataHandler</target>
        </trans-unit>
        <trans-unit id="b9e41e9732168868caf117fd826b70cb36771784" translate="yes" xml:space="preserve">
          <source>ListDataListener</source>
          <target state="translated">ListDataListener</target>
        </trans-unit>
        <trans-unit id="02644711fd77bac3e2e3f9f231f44735cf5f6cf9" translate="yes" xml:space="preserve">
          <source>ListEditor</source>
          <target state="translated">ListEditor</target>
        </trans-unit>
        <trans-unit id="48fb7de1e7f4ec62a77ab4aa73ec82916ebe8c3e" translate="yes" xml:space="preserve">
          <source>ListIterator</source>
          <target state="translated">ListIterator</target>
        </trans-unit>
        <trans-unit id="60f3c82d74017925c19b1eae46f766407e6e1039" translate="yes" xml:space="preserve">
          <source>ListIterator.add()</source>
          <target state="translated">ListIterator.add()</target>
        </trans-unit>
        <trans-unit id="2411b084b7bad65e23d03c66bf1e2cc96ea38fbc" translate="yes" xml:space="preserve">
          <source>ListIterator.hasNext()</source>
          <target state="translated">ListIterator.hasNext()</target>
        </trans-unit>
        <trans-unit id="6ffee08c778d13571d4a34ada644b98929305dcc" translate="yes" xml:space="preserve">
          <source>ListIterator.hasPrevious()</source>
          <target state="translated">ListIterator.hasPrevious()</target>
        </trans-unit>
        <trans-unit id="3e6cb2e7851a6af258d24b859d783e4581adde25" translate="yes" xml:space="preserve">
          <source>ListIterator.next()</source>
          <target state="translated">ListIterator.next()</target>
        </trans-unit>
        <trans-unit id="938993f6a0817d1be09ce1d489ca458f8b00606e" translate="yes" xml:space="preserve">
          <source>ListIterator.nextIndex()</source>
          <target state="translated">ListIterator.nextIndex()</target>
        </trans-unit>
        <trans-unit id="ac0b364ef9d29af3525c5711a052a4080c8db754" translate="yes" xml:space="preserve">
          <source>ListIterator.previous()</source>
          <target state="translated">ListIterator.previous()</target>
        </trans-unit>
        <trans-unit id="4dfcc435848b35f3ef5feb82066dc9b58fc1e958" translate="yes" xml:space="preserve">
          <source>ListIterator.previousIndex()</source>
          <target state="translated">ListIterator.previousIndex()</target>
        </trans-unit>
        <trans-unit id="a614bfe4514cc47b62efbd3eaf68ec84876bbfcb" translate="yes" xml:space="preserve">
          <source>ListIterator.remove()</source>
          <target state="translated">ListIterator.remove()</target>
        </trans-unit>
        <trans-unit id="f498edcf18ba213558c7ceaa1fc659b96ca6644b" translate="yes" xml:space="preserve">
          <source>ListIterator.set()</source>
          <target state="translated">ListIterator.set()</target>
        </trans-unit>
        <trans-unit id="061d3b992f6158640413b2f5971a4f53e514906b" translate="yes" xml:space="preserve">
          <source>ListModel</source>
          <target state="translated">ListModel</target>
        </trans-unit>
        <trans-unit id="50e22e0ed4622d8a5730267e5cff6cf930ecdf16" translate="yes" xml:space="preserve">
          <source>ListMouseHandler</source>
          <target state="translated">ListMouseHandler</target>
        </trans-unit>
        <trans-unit id="26da898464a5933d2c51b9a6c4f0c02284c8fd83" translate="yes" xml:space="preserve">
          <source>ListMouseMotionHandler</source>
          <target state="translated">ListMouseMotionHandler</target>
        </trans-unit>
        <trans-unit id="a42fe9a3aa5cd7b3189fe72dbd1d73b8108f10ae" translate="yes" xml:space="preserve">
          <source>ListResourceBundle</source>
          <target state="translated">ListResourceBundle</target>
        </trans-unit>
        <trans-unit id="dd82776e1d25fe9c5f13cd64a5c77e117c2dbb05" translate="yes" xml:space="preserve">
          <source>ListResourceBundle.getContents()</source>
          <target state="translated">ListResourceBundle.getContents()</target>
        </trans-unit>
        <trans-unit id="5727d27ee4452a339210ea7bc1d60551128ecdd0" translate="yes" xml:space="preserve">
          <source>ListResourceBundle.getKeys()</source>
          <target state="translated">ListResourceBundle.getKeys()</target>
        </trans-unit>
        <trans-unit id="ad6310738f3bc17348348d7bae67d2b9528545a4" translate="yes" xml:space="preserve">
          <source>ListResourceBundle.handleGetObject()</source>
          <target state="translated">ListResourceBundle.handleGetObject()</target>
        </trans-unit>
        <trans-unit id="bdeb43b2cd5c72a540a8f241cf3b990eb31e8e9d" translate="yes" xml:space="preserve">
          <source>ListResourceBundle.handleKeySet()</source>
          <target state="translated">ListResourceBundle.handleKeySet()</target>
        </trans-unit>
        <trans-unit id="4647191cd62930bbba3adf2c88749575da4526fa" translate="yes" xml:space="preserve">
          <source>ListSelectionEvent</source>
          <target state="translated">ListSelectionEvent</target>
        </trans-unit>
        <trans-unit id="f7ba7cdd25e1359ccbf3da165f7746fba5566ffc" translate="yes" xml:space="preserve">
          <source>ListSelectionHandler</source>
          <target state="translated">ListSelectionHandler</target>
        </trans-unit>
        <trans-unit id="80e31c1d65412c24ffb358ea7e4b24436997e086" translate="yes" xml:space="preserve">
          <source>ListSelectionListener</source>
          <target state="translated">ListSelectionListener</target>
        </trans-unit>
        <trans-unit id="824c2cfc8d483e5d1c4516e150a274b868dd1b24" translate="yes" xml:space="preserve">
          <source>ListSelectionModel</source>
          <target state="translated">ListSelectionModel</target>
        </trans-unit>
        <trans-unit id="f071d3303c6b2ad280bed75afeaddc6500524dcd" translate="yes" xml:space="preserve">
          <source>ListUI</source>
          <target state="translated">ListUI</target>
        </trans-unit>
        <trans-unit id="192847b15c33bd4913e8c554131ed60b7aeaed65" translate="yes" xml:space="preserve">
          <source>ListView</source>
          <target state="translated">ListView</target>
        </trans-unit>
        <trans-unit id="834d80d282b3b4e2c8e4ae98d722230fda58074b" translate="yes" xml:space="preserve">
          <source>Listen to all AWT events, system-wide</source>
          <target state="translated">시스템 전체의 모든 AWT 이벤트 수신</target>
        </trans-unit>
        <trans-unit id="a61750aa4a7a74392ee0d6a43288cb60500ad7c6" translate="yes" xml:space="preserve">
          <source>Listener Implementations</source>
          <target state="translated">리스너 구현</target>
        </trans-unit>
        <trans-unit id="5bcdc195fcd4daa56a7e6374be529710bb123614" translate="yes" xml:space="preserve">
          <source>Listener for changes in the caret position of a text component.</source>
          <target state="translated">텍스트 구성 요소의 캐럿 위치 변경에 대한 리스너.</target>
        </trans-unit>
        <trans-unit id="fd67db307593e1fde2586181cd1ac443dbfeece4" translate="yes" xml:space="preserve">
          <source>Listener for cursor keys.</source>
          <target state="translated">커서 키에 대한 리스너.</target>
        </trans-unit>
        <trans-unit id="a8cc2ef24291ddbec36b260c739ddaf0d5ffcfe6" translate="yes" xml:space="preserve">
          <source>Listener for resizing events.</source>
          <target state="translated">이벤트 크기 조정을위한 리스너.</target>
        </trans-unit>
        <trans-unit id="7ccfd8877c148dbff1790ade1e0ca63b828f22cc" translate="yes" xml:space="preserve">
          <source>Listener for scrolling events initiated in the &lt;code&gt;ScrollPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScrollPane&lt;/code&gt; 에서 시작된 스크롤 이벤트에 대한 리스너 입니다 .</target>
        </trans-unit>
        <trans-unit id="dc4e1333ba7ee92ed7065dc36f2747f8ac3a2098" translate="yes" xml:space="preserve">
          <source>Listener for viewport events.</source>
          <target state="translated">뷰포트 이벤트에 대한 리스너.</target>
        </trans-unit>
        <trans-unit id="d920acb02b07e609862f2bdcdc684639ff83453e" translate="yes" xml:space="preserve">
          <source>Listener on the TreeSelectionModel, resets the row selection if any of the properties of the model change.</source>
          <target state="translated">TreeSelectionModel의 리스너는 모델의 속성이 변경되면 행 선택을 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="584ca45076ad3421f7fb62984b6d91102f0478b1" translate="yes" xml:space="preserve">
          <source>Listener responsible for getting cell editing events and updating the tree accordingly.</source>
          <target state="translated">셀 편집 이벤트를 가져오고 그에 따라 트리를 업데이트하는 리스너입니다.</target>
        </trans-unit>
        <trans-unit id="a30e675062855ac326466a9ae10b534dec1f06a1" translate="yes" xml:space="preserve">
          <source>ListenerNotFoundException</source>
          <target state="translated">ListenerNotFoundException</target>
        </trans-unit>
        <trans-unit id="c4fb8e9aeec04daf7ee2dcb7ff00f9baaa26d8ea" translate="yes" xml:space="preserve">
          <source>Listeners registered on the Component by this Recognizer shall record all Events that are recognized as part of the series of Events that go to comprise a Drag and Drop initiating gesture via this API.</source>
          <target state="translated">이 인식기에 의해 구성 요소에 등록 된 리스너는이 API를 통해 드래그 앤 드롭 시작 제스처를 구성하는 일련의 이벤트의 일부로 인식되는 모든 이벤트를 기록해야합니다.</target>
        </trans-unit>
        <trans-unit id="e1527172f174621faf02df878c6ce52ffaee2070" translate="yes" xml:space="preserve">
          <source>Listeners that are attached to the &lt;code&gt;JTable&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 에 첨부 된 리스너</target>
        </trans-unit>
        <trans-unit id="ff6aff4b6828a8489b25246a7e2ff0e70f0b2923" translate="yes" xml:space="preserve">
          <source>Listeners.</source>
          <target state="translated">Listeners.</target>
        </trans-unit>
        <trans-unit id="378d711be1e591490f11c0967f745f5cca0cf145" translate="yes" xml:space="preserve">
          <source>Listens for a connection to be made to this socket and accepts it.</source>
          <target state="translated">이 소켓에 대한 연결을 수신하고 수락합니다.</target>
        </trans-unit>
        <trans-unit id="4cd97db32d4b4800a395279c05e5f05bf11af6a0" translate="yes" xml:space="preserve">
          <source>Listens for a connection to be made to this socket and accepts it. The method blocks until a connection is made.</source>
          <target state="translated">이 소켓에 대한 연결을 청취하고 승인합니다. 연결될 때까지 메소드가 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="3bc6ccc3238144e2537870fa861eb88d0a723355" translate="yes" xml:space="preserve">
          <source>Listens for border adjustments.</source>
          <target state="translated">테두리 조정을 수신합니다.</target>
        </trans-unit>
        <trans-unit id="de650eb75b4425c5a22b3250ac7c3fc57291a651" translate="yes" xml:space="preserve">
          <source>Listens for change events sent by the progress bar's model, redispatching them to change-event listeners registered upon this progress bar.</source>
          <target state="translated">진행률 표시 줄의 모델에서 보낸 변경 이벤트를 수신하여이 진행률 표시 줄에 등록 된 변경 이벤트 리스너에 다시 배포합니다.</target>
        </trans-unit>
        <trans-unit id="b3fe133b5c597d8c6d76b272d83da7956152a5e8" translate="yes" xml:space="preserve">
          <source>Listens for changes in the selection model and updates the display accordingly.</source>
          <target state="translated">선택 모델의 변경 사항을 수신하고 그에 따라 디스플레이를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="b886d7a8adfb6158de18707b85183f82426457c4" translate="yes" xml:space="preserve">
          <source>Listens for mouse movements and acts on them.</source>
          <target state="translated">마우스 움직임을 듣고 그에 따라 행동합니다.</target>
        </trans-unit>
        <trans-unit id="d27c9ccd23fd212949a866f0233df34b95e96337" translate="yes" xml:space="preserve">
          <source>Listens for mouse movements and acts on them. This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;BasicDesktopIconUI&lt;/code&gt;.</source>
          <target state="translated">마우스 움직임을 듣고 그에 따라 행동합니다. 이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. &lt;code&gt;BasicDesktopIconUI&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="666bb8907eb7cef27440a7c586373c05260b02a7" translate="yes" xml:space="preserve">
          <source>Listens to the model and updates the &lt;code&gt;expandedState&lt;/code&gt; accordingly when nodes are removed, or changed.</source>
          <target state="translated">Listens to the model and updates the &lt;code&gt;expandedState&lt;/code&gt; accordingly when nodes are removed, or changed.</target>
        </trans-unit>
        <trans-unit id="3b0e2865d02b1b2d4fb7e4536d8fdb392ff0576d" translate="yes" xml:space="preserve">
          <source>Lists (and arrays) of objects that implement this interface can be sorted automatically by &lt;a href=&quot;../util/collections#sort(java.util.List)&quot;&gt;&lt;code&gt;Collections.sort&lt;/code&gt;&lt;/a&gt; (and &lt;a href=&quot;../util/arrays#sort(java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt;). Objects that implement this interface can be used as keys in a &lt;a href=&quot;../util/sortedmap&quot;&gt;sorted map&lt;/a&gt; or as elements in a &lt;a href=&quot;../util/sortedset&quot;&gt;sorted set&lt;/a&gt;, without the need to specify a &lt;a href=&quot;../util/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">Lists (and arrays) of objects that implement this interface can be sorted automatically by &lt;a href=&quot;../util/collections#sort(java.util.List)&quot;&gt; &lt;code&gt;Collections.sort&lt;/code&gt; &lt;/a&gt; (and &lt;a href=&quot;../util/arrays#sort(java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;). Objects that implement this interface can be used as keys in a &lt;a href=&quot;../util/sortedmap&quot;&gt;sorted map&lt;/a&gt; or as elements in a &lt;a href=&quot;../util/sortedset&quot;&gt;sorted set&lt;/a&gt;, without the need to specify a &lt;a href=&quot;../util/comparator&quot;&gt;comparator&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="874cd864744bb917501ff21c350aed8ed1bffd71" translate="yes" xml:space="preserve">
          <source>Lists (and arrays) of objects that implement this interface can be sorted automatically by &lt;a href=&quot;../util/collections#sort-java.util.List-&quot;&gt;&lt;code&gt;Collections.sort&lt;/code&gt;&lt;/a&gt; (and &lt;a href=&quot;../util/arrays#sort-java.lang.Object:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt;). Objects that implement this interface can be used as keys in a &lt;a href=&quot;../util/sortedmap&quot;&gt;sorted map&lt;/a&gt; or as elements in a &lt;a href=&quot;../util/sortedset&quot;&gt;sorted set&lt;/a&gt;, without the need to specify a &lt;a href=&quot;../util/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스를 구현하는 객체의 목록 (및 배열)은 &lt;a href=&quot;../util/collections#sort-java.util.List-&quot;&gt; &lt;code&gt;Collections.sort&lt;/code&gt; &lt;/a&gt; (및 &lt;a href=&quot;../util/arrays#sort-java.lang.Object:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt; )로 자동 정렬 할 수 있습니다 . 이 인터페이스를 구현하는 객체 는 &lt;a href=&quot;../util/comparator&quot;&gt;비교기&lt;/a&gt; 를 지정할 필요없이 &lt;a href=&quot;../util/sortedset&quot;&gt;정렬 &lt;/a&gt;&lt;a href=&quot;../util/sortedmap&quot;&gt;된 맵의&lt;/a&gt; 키 또는 정렬 된 세트의 요소 로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c72f8d1c24ee261405afc826484cfeae5b3b7d84" translate="yes" xml:space="preserve">
          <source>Lists all file objects matching the given criteria in the given location. List file objects in &quot;subpackages&quot; if recurse is true.</source>
          <target state="translated">주어진 위치에서 주어진 기준과 일치하는 모든 파일 객체를 나열합니다. 재귀가 참이면 &quot;하위 패키지&quot;에 파일 객체를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="564905151ae25bfefdc3aaabcde077d9c5b8dc6e" translate="yes" xml:space="preserve">
          <source>Lists all file objects matching the given criteria in the given package-oriented location.</source>
          <target state="translated">Lists all file objects matching the given criteria in the given package-oriented location.</target>
        </trans-unit>
        <trans-unit id="b808558fda64fb70c0505395f807e4dfa59930ea" translate="yes" xml:space="preserve">
          <source>Lists all file objects matching the given criteria in the given package-oriented location. List file objects in &quot;subpackages&quot; if recurse is true.</source>
          <target state="translated">Lists all file objects matching the given criteria in the given package-oriented location. List file objects in &quot;subpackages&quot; if recurse is true.</target>
        </trans-unit>
        <trans-unit id="58bc9776f1f5c9bb209a1ed6e015019246ae1529" translate="yes" xml:space="preserve">
          <source>Lists all printing attributes as described above</source>
          <target state="translated">Lists all printing attributes as described above</target>
        </trans-unit>
        <trans-unit id="ea1f62b300873a3e888aa2c127dcac134b9a8dd9" translate="yes" xml:space="preserve">
          <source>Lists all the alias names of this keystore.</source>
          <target state="translated">이 키 스토어의 별명을 모두 나열합니다.</target>
        </trans-unit>
        <trans-unit id="2a543225f5fd96be9c05c2ed0309c7ae5d0cefae" translate="yes" xml:space="preserve">
          <source>Lists all the locales that are supported.</source>
          <target state="translated">지원되는 모든 로케일을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="ee2deac880b84efa67c4b2a0de437f0857ce30bf" translate="yes" xml:space="preserve">
          <source>Lists asynchronous channels and their descriptions</source>
          <target state="translated">Lists asynchronous channels and their descriptions</target>
        </trans-unit>
        <trans-unit id="dfad21aa8dfba61cc86071cc93781ce6277a8c5a" translate="yes" xml:space="preserve">
          <source>Lists channels and their descriptions</source>
          <target state="translated">Lists channels and their descriptions</target>
        </trans-unit>
        <trans-unit id="73ff85812b51e1601a75e7c040ed9461072dcba3" translate="yes" xml:space="preserve">
          <source>Lists file channels and their descriptions</source>
          <target state="translated">Lists file channels and their descriptions</target>
        </trans-unit>
        <trans-unit id="d089a35c0ec1b893bd4a6fd68f30896fa10fa42e" translate="yes" xml:space="preserve">
          <source>Lists multiplexed, non-blocking channels and their descriptions</source>
          <target state="translated">Lists multiplexed, non-blocking channels and their descriptions</target>
        </trans-unit>
        <trans-unit id="af3b4c75532bf3fdf22186041ff98ac2c54eefa8" translate="yes" xml:space="preserve">
          <source>Lists of format names, file suffixes, and MIME types associated with the service may be obtained by means of the &lt;code&gt;getFormatNames&lt;/code&gt;, &lt;code&gt;getFileSuffixes&lt;/code&gt;, and &lt;code&gt;getMIMEType&lt;/code&gt; methods. These methods may be used to identify candidate &lt;code&gt;ImageWriter&lt;/code&gt;s for writing a particular file or stream based on manual format selection, file naming, or MIME associations.</source>
          <target state="translated">서비스와 연관된 형식 이름, 파일 접미 부 및 MIME 유형 목록은 &lt;code&gt;getFormatNames&lt;/code&gt; , &lt;code&gt;getFileSuffixes&lt;/code&gt; 및 &lt;code&gt;getMIMEType&lt;/code&gt; 메소드를 통해 얻을 수 있습니다 . 이러한 방법은 수동 형식 선택, 파일 이름 지정 또는 MIME 연결을 기반으로 특정 파일 또는 스트림을 작성 하기위한 후보 &lt;code&gt;ImageWriter&lt;/code&gt; 를 식별하는 데 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc15977cead4837ca92bcff24d000ddcfb15a0a9" translate="yes" xml:space="preserve">
          <source>Lists of format names, file suffixes, and MIME types associated with the service may be obtained by means of the &lt;code&gt;getFormatNames&lt;/code&gt;, &lt;code&gt;getFileSuffixes&lt;/code&gt;, and &lt;code&gt;getMIMETypes&lt;/code&gt; methods. These methods may be used to identify candidate &lt;code&gt;ImageReader&lt;/code&gt;s for decoding a particular file or stream based on manual format selection, file naming, or MIME associations (for example, when accessing a file over HTTP or as an email attachment).</source>
          <target state="translated">서비스와 관련된 형식 이름, 파일 접미사 및 MIME 유형 목록은 &lt;code&gt;getFormatNames&lt;/code&gt; 를 통해 얻을 수 있습니다. , &lt;code&gt;getFileSuffixes&lt;/code&gt; 및 &lt;code&gt;getMIMETypes&lt;/code&gt; 메소드를 . 이러한 방법은 수동 형식 선택, 파일 이름 지정 또는 MIME 연결 (예 : HTTP를 통해 또는 전자 메일 첨부 파일로 파일에 액세스 할 때)을 기반으로 특정 파일 또는 스트림을 디코딩 하기위한 후보 &lt;code&gt;ImageReader&lt;/code&gt; 를 식별하는 데 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d72a1c820321b37b2cd44b18c2a9a8064b9f393" translate="yes" xml:space="preserve">
          <source>Lists that support this operation may place limitations on what elements may be added to this list. In particular, some lists will refuse to add null elements, and others will impose restrictions on the type of elements that may be added. List classes should clearly specify in their documentation any restrictions on what elements may be added.</source>
          <target state="translated">이 작업을 지원하는 목록은이 목록에 추가 할 수있는 요소를 제한 할 수 있습니다. 특히 일부 목록은 null 요소 추가를 거부하고 다른 목록은 추가 할 수있는 요소 유형에 제한을 부과합니다. 목록 클래스는 추가 할 수있는 요소에 대한 제한 사항을 문서에 명확하게 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="3e41efe9466acee5d9ea137d3f80ffb544094da1" translate="yes" xml:space="preserve">
          <source>Lists the contents of the module, returning a stream of elements that are the names of all resources in the module.</source>
          <target state="translated">Lists the contents of the module, returning a stream of elements that are the names of all resources in the module.</target>
        </trans-unit>
        <trans-unit id="62c50eaf2c94937be34f06930634d4cf357884d8" translate="yes" xml:space="preserve">
          <source>Lists the contents of the module, returning a stream of elements that are the names of all resources in the module. Whether the stream of elements includes names corresponding to directories in the module is module reader specific.</source>
          <target state="translated">Lists the contents of the module, returning a stream of elements that are the names of all resources in the module. Whether the stream of elements includes names corresponding to directories in the module is module reader specific.</target>
        </trans-unit>
        <trans-unit id="f81cf690496984d2f93a3945e8df0671c385d12a" translate="yes" xml:space="preserve">
          <source>Lists the locations for all the modules in a module-oriented location or an output location.</source>
          <target state="translated">Lists the locations for all the modules in a module-oriented location or an output location.</target>
        </trans-unit>
        <trans-unit id="a294ef16adc828f7b4bd8bb3499808a4bd9ca9d2" translate="yes" xml:space="preserve">
          <source>Lists the locations for all the modules in a module-oriented location or an output location. The locations that are returned will be output locations if the given location is an output, or it will be a package-oriented locations.</source>
          <target state="translated">Lists the locations for all the modules in a module-oriented location or an output location. The locations that are returned will be output locations if the given location is an output, or it will be a package-oriented locations.</target>
        </trans-unit>
        <trans-unit id="aa17540c491cfa1af3a83cac849fe03eade7510f" translate="yes" xml:space="preserve">
          <source>Literal - a text literal</source>
          <target state="translated">리터럴-텍스트 리터럴</target>
        </trans-unit>
        <trans-unit id="d41128d7466666ea32239a9cd35fdfe368ccaac5" translate="yes" xml:space="preserve">
          <source>Literal escape</source>
          <target state="translated">리터럴 탈출</target>
        </trans-unit>
        <trans-unit id="fb7195c4801078e413be30a704f3665bdee97fa5" translate="yes" xml:space="preserve">
          <source>Literal newline between</source>
          <target state="translated">Literal newline between</target>
        </trans-unit>
        <trans-unit id="fffcec8f7b9073e63a6da3ff9ff8cff409663410" translate="yes" xml:space="preserve">
          <source>Load a class, using the given &lt;a href=&quot;classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt; if the class is not found in this MLet's URLs.</source>
          <target state="translated">Load a class, using the given &lt;a href=&quot;classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; &lt;/a&gt; if the class is not found in this MLet's URLs.</target>
        </trans-unit>
        <trans-unit id="bce462f98eeb37a8b4d63421834eb6a727bd64c0" translate="yes" xml:space="preserve">
          <source>Load a class, using the given &lt;a href=&quot;classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt; if the class is not found in this MLet's URLs. The given ClassLoaderRepository can be null, in which case a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; occurs immediately if the class is not found in this MLet's URLs.</source>
          <target state="translated">Load a class, using the given &lt;a href=&quot;classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; &lt;/a&gt; if the class is not found in this MLet's URLs. The given ClassLoaderRepository can be null, in which case a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; occurs immediately if the class is not found in this MLet's URLs.</target>
        </trans-unit>
        <trans-unit id="9469a7f635b720685d8b2608cbc38445fd3ea572" translate="yes" xml:space="preserve">
          <source>Load a class, using the given &lt;a href=&quot;classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt; if the class is not found in this MLet's URLs. The given ClassLoaderRepository can be null, in which case a &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; occurs immediately if the class is not found in this MLet's URLs.</source>
          <target state="translated">이 MLet의 URL에서 클래스를 찾을 수없는 경우 제공된 &lt;a href=&quot;classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; 를&lt;/a&gt; 사용하여 클래스를로드하십시오 . 주어진 ClassLoaderRepository는 null 일 수 있습니다.&lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; 클래스가이 MLet의 URL에서 발견되지 않으면 즉시 발생합니다.</target>
        </trans-unit>
        <trans-unit id="28a8fac4b1d201e392a6f613ff2950eff4258429" translate="yes" xml:space="preserve">
          <source>Load the first available service provider of this loader's service.</source>
          <target state="translated">Load the first available service provider of this loader's service.</target>
        </trans-unit>
        <trans-unit id="8427c845df4a4e557951573599a8672fec957ea4" translate="yes" xml:space="preserve">
          <source>Load the first available service provider of this loader's service. This convenience method is equivalent to invoking the &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator()&lt;/code&gt;&lt;/a&gt; method and obtaining the first element. It therefore returns the first element from the provider cache if possible, it otherwise attempts to load and instantiate the first provider.</source>
          <target state="translated">Load the first available service provider of this loader's service. This convenience method is equivalent to invoking the &lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator()&lt;/code&gt; &lt;/a&gt; method and obtaining the first element. It therefore returns the first element from the provider cache if possible, it otherwise attempts to load and instantiate the first provider.</target>
        </trans-unit>
        <trans-unit id="658e7b0d855acd0afb5101cf2b9e2c30ebb2faa5" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders, excluding the given one.</source>
          <target state="translated">Load the given class name through the list of class loaders, excluding the given one.</target>
        </trans-unit>
        <trans-unit id="d3d323181aa4fb7b1d6949d86ef162d9a19757e9" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders, excluding the given one. Each ClassLoader in turn from the ClassLoaderRepository, except &lt;code&gt;exclude&lt;/code&gt;, is asked to load the class via its &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt;&lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the end of the list is reached, a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Load the given class name through the list of class loaders, excluding the given one. Each ClassLoader in turn from the ClassLoaderRepository, except &lt;code&gt;exclude&lt;/code&gt; , is asked to load the class via its &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt; &lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the end of the list is reached, a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="1f23e5b904dd3c0fac045713fd872c9880e690bc" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders, excluding the given one. Each ClassLoader in turn from the ClassLoaderRepository, except &lt;code&gt;exclude&lt;/code&gt;, is asked to load the class via its &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt;&lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the end of the list is reached, a &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">주어진 클래스 이름을 제외하고 클래스 로더 목록을 통해 주어진 클래스 이름을로드하십시오. &lt;code&gt;exclude&lt;/code&gt; 를 제외 하고 ClassLoaderRepository에서 차례로 각 ClassLoader 는 &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 클래스를로드하도록 요청됩니다 . &lt;a href=&quot;../../../java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 객체를 성공적으로 반환하면 이 메서드의 결과입니다. &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; 을&lt;/a&gt; 던지면 다음 ClassLoader로 계속 검색합니다. 다른 예외가 발생하면이 메소드에서 예외가 전파됩니다. 목록의 끝에 도달하면 &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="345b50cce6b16271472ed792f7e98256ff75c2a9" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders, stopping at the given one.</source>
          <target state="translated">Load the given class name through the list of class loaders, stopping at the given one.</target>
        </trans-unit>
        <trans-unit id="af76bce10284474b884f000c4cf71c34d0a91c0d" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders, stopping at the given one. Each ClassLoader in turn from the ClassLoaderRepository is asked to load the class via its &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt;&lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the search reaches &lt;code&gt;stop&lt;/code&gt; or the end of the list, a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Load the given class name through the list of class loaders, stopping at the given one. Each ClassLoader in turn from the ClassLoaderRepository is asked to load the class via its &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt; &lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the search reaches &lt;code&gt;stop&lt;/code&gt; or the end of the list, a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="7b832557c4e69a1fed3fdcdad81d4fb3eef05927" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders, stopping at the given one. Each ClassLoader in turn from the ClassLoaderRepository is asked to load the class via its &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt;&lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the search reaches &lt;code&gt;stop&lt;/code&gt; or the end of the list, a &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">주어진 클래스 이름을 클래스 로더 목록을 통해로드하고 주어진 클래스 이름에서 중지하십시오. ClassLoaderRepository에서 차례로 각 ClassLoader는 &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 클래스를로드하도록 요청됩니다 . &lt;a href=&quot;../../../java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 객체를 성공적으로 반환하면 이 메서드의 결과입니다. &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; 을&lt;/a&gt; 던지면 다음 ClassLoader로 계속 검색합니다. 다른 예외가 발생하면이 메소드에서 예외가 전파됩니다. 검색이 &lt;code&gt;stop&lt;/code&gt; 또는 목록 끝에 도달하면 &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="af90db68f950d7610de18799f629456deada5471" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders.</source>
          <target state="translated">Load the given class name through the list of class loaders.</target>
        </trans-unit>
        <trans-unit id="e11f7ebfdff1bb3718a7bf2203cb01b0b6f00ce7" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders. Each ClassLoader in turn from the ClassLoaderRepository is asked to load the class via its &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt;&lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the end of the list is reached, a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Load the given class name through the list of class loaders. Each ClassLoader in turn from the ClassLoaderRepository is asked to load the class via its &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt; &lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the end of the list is reached, a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="e97c76b474b56a0c4e3a424b967cd03791a5a98d" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders. Each ClassLoader in turn from the ClassLoaderRepository is asked to load the class via its &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt;&lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the end of the list is reached, a &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">클래스 로더 목록을 통해 주어진 클래스 이름을로드하십시오. ClassLoaderRepository에서 차례로 각 ClassLoader는 &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 클래스를로드하도록 요청됩니다 . &lt;a href=&quot;../../../java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 객체를 성공적으로 반환하면 이 메서드의 결과입니다. &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; 을&lt;/a&gt; 던지면 다음 ClassLoader로 계속 검색합니다. 다른 예외가 발생하면이 메소드에서 예외가 전파됩니다. 목록의 끝에 도달하면 &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c38861d24c9e6b09eac9871771910eb0e8f9ed83" translate="yes" xml:space="preserve">
          <source>Load the local class equivalent of the specified stream class description.</source>
          <target state="translated">Load the local class equivalent of the specified stream class description.</target>
        </trans-unit>
        <trans-unit id="4a4c9e1e1b00f3be881a46f6171d234a6c95f647" translate="yes" xml:space="preserve">
          <source>Load the local class equivalent of the specified stream class description. Subclasses may implement this method to allow classes to be fetched from an alternate source.</source>
          <target state="translated">지정된 스트림 클래스 설명과 동등한 로컬 클래스를로드하십시오. 서브 클래스는이 메소드를 구현하여 대체 소스에서 클래스를 페치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cc4857f1704a4b9d5da8ba5b91f239c09774e56" translate="yes" xml:space="preserve">
          <source>LoaderHandler</source>
          <target state="translated">LoaderHandler</target>
        </trans-unit>
        <trans-unit id="472c7ff8018c0979faa36f9e6d20685b65f942b2" translate="yes" xml:space="preserve">
          <source>Loading Input Methods</source>
          <target state="translated">Loading Input Methods</target>
        </trans-unit>
        <trans-unit id="bb18ecf29fa9bd5d67e025d4576d247ef8002765" translate="yes" xml:space="preserve">
          <source>Loading agent classes and the modules/classes available to the agent class</source>
          <target state="translated">Loading agent classes and the modules/classes available to the agent class</target>
        </trans-unit>
        <trans-unit id="945e2f8867c9fb2ea7acb5e56e52419d8691e6ca" translate="yes" xml:space="preserve">
          <source>Loads a class from a URL.</source>
          <target state="translated">Loads a class from a URL.</target>
        </trans-unit>
        <trans-unit id="2e4b9ee4fa1a87385555685c9be57c2a1d720521" translate="yes" xml:space="preserve">
          <source>Loads a class from a codebase URL path, optionally using the supplied loader.</source>
          <target state="translated">Loads a class from a codebase URL path, optionally using the supplied loader.</target>
        </trans-unit>
        <trans-unit id="25ddd2024f629eb1d61bd0d9bab74ec821aef35f" translate="yes" xml:space="preserve">
          <source>Loads a class from a codebase URL path, optionally using the supplied loader. This method should be used when the caller would like to make available to the provider implementation an additional contextual class loader to consider, such as the loader of a caller on the stack. Typically, a provider implementation will attempt to resolve the named class using the given &lt;code&gt;defaultLoader&lt;/code&gt;, if specified, before attempting to resolve the class from the codebase URL path.</source>
          <target state="translated">Loads a class from a codebase URL path, optionally using the supplied loader. This method should be used when the caller would like to make available to the provider implementation an additional contextual class loader to consider, such as the loader of a caller on the stack. Typically, a provider implementation will attempt to resolve the named class using the given &lt;code&gt;defaultLoader&lt;/code&gt; , if specified, before attempting to resolve the class from the codebase URL path.</target>
        </trans-unit>
        <trans-unit id="8079956628d84b1fd93def1d73ca86c9fdbf78c9" translate="yes" xml:space="preserve">
          <source>Loads a class from a codebase URL path.</source>
          <target state="translated">Loads a class from a codebase URL path.</target>
        </trans-unit>
        <trans-unit id="cd4b2b9daf134f650c2d3d3a87876fa5ea5a0a31" translate="yes" xml:space="preserve">
          <source>Loads a class from a codebase URL.</source>
          <target state="translated">Loads a class from a codebase URL.</target>
        </trans-unit>
        <trans-unit id="f2a72f4dbb934302a925a5b82327f91d61e9bca8" translate="yes" xml:space="preserve">
          <source>Loads a class from a codebase URL. If &lt;code&gt;codebase&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then this method will behave the same as &lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadClass(String,String)&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;null&lt;/code&gt;&lt;code&gt;codebase&lt;/code&gt; and the given class name.</source>
          <target state="translated">Loads a class from a codebase URL. If &lt;code&gt;codebase&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; , then this method will behave the same as &lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadClass(String,String)&lt;/code&gt; &lt;/a&gt; with a &lt;code&gt;null&lt;/code&gt; &lt;code&gt;codebase&lt;/code&gt; and the given class name.</target>
        </trans-unit>
        <trans-unit id="04229e7612c6a41dd56366a4f8153d1325b7576e" translate="yes" xml:space="preserve">
          <source>Loads a class from the location specified by the &lt;code&gt;java.rmi.server.codebase&lt;/code&gt; property.</source>
          <target state="translated">Loads a class from the location specified by the &lt;code&gt;java.rmi.server.codebase&lt;/code&gt; property.</target>
        </trans-unit>
        <trans-unit id="36e49a878b7d43076f1617015398b6d46f601a30" translate="yes" xml:space="preserve">
          <source>Loads a dynamic proxy class (see &lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt;) that implements a set of interfaces with the given names from a codebase URL path.</source>
          <target state="translated">Loads a dynamic proxy class (see &lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt;) that implements a set of interfaces with the given names from a codebase URL path.</target>
        </trans-unit>
        <trans-unit id="9d8e102dca2587574f53c25291ad3a2b32c55c90" translate="yes" xml:space="preserve">
          <source>Loads a keymap with a bunch of bindings.</source>
          <target state="translated">Loads a keymap with a bunch of bindings.</target>
        </trans-unit>
        <trans-unit id="96d6c7444c98ebb0088dd684b66cf0033381fc2a" translate="yes" xml:space="preserve">
          <source>Loads a keymap with a bunch of bindings. This can be used to take a static table of definitions and load them into some keymap. The following example illustrates an example of binding some keys to the cut, copy, and paste actions associated with a JTextComponent. A code fragment to accomplish this might look as follows:</source>
          <target state="translated">Loads a keymap with a bunch of bindings. This can be used to take a static table of definitions and load them into some keymap. The following example illustrates an example of binding some keys to the cut, copy, and paste actions associated with a JTextComponent. A code fragment to accomplish this might look as follows:</target>
        </trans-unit>
        <trans-unit id="6196501276a50025a6af41341fab178d5fa57136" translate="yes" xml:space="preserve">
          <source>Loads a set of rules that have been specified in terms of CSS1 grammar.</source>
          <target state="translated">Loads a set of rules that have been specified in terms of CSS1 grammar.</target>
        </trans-unit>
        <trans-unit id="e3c8c8fca2587d1b75c68eb232aa83e84b2b0f8a" translate="yes" xml:space="preserve">
          <source>Loads a set of rules that have been specified in terms of CSS1 grammar. If there are collisions with existing rules, the newly specified rule will win.</source>
          <target state="translated">Loads a set of rules that have been specified in terms of CSS1 grammar. If there are collisions with existing rules, the newly specified rule will win.</target>
        </trans-unit>
        <trans-unit id="785666987f7058256595056a513ed22f937729b5" translate="yes" xml:space="preserve">
          <source>Loads a text file containing MLET tags that define the MBeans to be added to the MBean server.</source>
          <target state="translated">Loads a text file containing MLET tags that define the MBeans to be added to the MBean server.</target>
        </trans-unit>
        <trans-unit id="727a1c4bd962db5d5c6c735da6df8e79d3b8d4b7" translate="yes" xml:space="preserve">
          <source>Loads a text file containing MLET tags that define the MBeans to be added to the MBean server. The location of the text file is specified by a URL. The MBeans specified in the MLET file will be instantiated and registered in the MBean server.</source>
          <target state="translated">MBean 서버에 추가 할 MBean을 정의하는 MLET 태그가 포함 된 텍스트 파일을로드합니다. 텍스트 파일의 위치는 URL로 지정됩니다. MLET 파일에 지정된 MBean이 인스턴스화되고 MBean 서버에 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="27a15151275d5be624a5bf1dbe71ef245e90e6e6" translate="yes" xml:space="preserve">
          <source>Loads a text file containing MLET tags that define the MBeans to be added to the MBean server. The location of the text file is specified by a URL. The text file is read using the UTF-8 encoding. The MBeans specified in the MLET file will be instantiated and registered in the MBean server.</source>
          <target state="translated">MBean 서버에 추가 할 MBean을 정의하는 MLET 태그가 포함 된 텍스트 파일을로드합니다. 텍스트 파일의 위치는 URL로 지정됩니다. 텍스트 파일은 UTF-8 인코딩을 사용하여 읽습니다. MLET 파일에 지정된 MBean이 인스턴스화되고 MBean 서버에 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="609b42d0b7c0a99323dae870a91aaac9c45d490e" translate="yes" xml:space="preserve">
          <source>Loads all catalogs[5].</source>
          <target state="translated">Loads all catalogs[5].</target>
        </trans-unit>
        <trans-unit id="20fc2c68b36cb9b1e0cf4213dd4fe668ef90ae1e" translate="yes" xml:space="preserve">
          <source>Loads all of the children to initialize the view.</source>
          <target state="translated">Loads all of the children to initialize the view.</target>
        </trans-unit>
        <trans-unit id="35c251fbc3fc9e479cd68a353e60023848d2a233" translate="yes" xml:space="preserve">
          <source>Loads all of the children to initialize the view. This is called by the &lt;a href=&quot;#setParent(javax.swing.text.View)&quot;&gt;&lt;code&gt;setParent(javax.swing.text.View)&lt;/code&gt;&lt;/a&gt; method. Subclasses can reimplement this to initialize their child views in a different manner. The default implementation creates a child view for each child element.</source>
          <target state="translated">Loads all of the children to initialize the view. This is called by the &lt;a href=&quot;#setParent(javax.swing.text.View)&quot;&gt; &lt;code&gt;setParent(javax.swing.text.View)&lt;/code&gt; &lt;/a&gt; method. Subclasses can reimplement this to initialize their child views in a different manner. The default implementation creates a child view for each child element.</target>
        </trans-unit>
        <trans-unit id="e614c1087b421daf10a196f7f32d5a4f9c9db9be" translate="yes" xml:space="preserve">
          <source>Loads all of the children to initialize the view. This is called by the &lt;a href=&quot;#setParent(javax.swing.text.View)&quot;&gt;&lt;code&gt;setParent&lt;/code&gt;&lt;/a&gt; method. Subclasses can reimplement this to initialize their child views in a different manner. The default implementation creates a child view for each child element.</source>
          <target state="translated">Loads all of the children to initialize the view. This is called by the &lt;a href=&quot;#setParent(javax.swing.text.View)&quot;&gt; &lt;code&gt;setParent&lt;/code&gt; &lt;/a&gt; method. Subclasses can reimplement this to initialize their child views in a different manner. The default implementation creates a child view for each child element.</target>
        </trans-unit>
        <trans-unit id="da5ce979cee445ad97136f7f53b878af6f3faa5a" translate="yes" xml:space="preserve">
          <source>Loads all of the children to initialize the view. This is called by the &lt;code&gt;setParent&lt;/code&gt; method. Subclasses can reimplement this to initialize their child views in a different manner. The default implementation creates a child view for each child element.</source>
          <target state="translated">Loads all of the children to initialize the view. This is called by the &lt;code&gt;setParent&lt;/code&gt; method. Subclasses can reimplement this to initialize their child views in a different manner. The default implementation creates a child view for each child element.</target>
        </trans-unit>
        <trans-unit id="2484979590c8d58794faf13559c476c30f0d03b2" translate="yes" xml:space="preserve">
          <source>Loads all of the children to initialize the view. This is called by the &lt;code&gt;setParent&lt;/code&gt; method. This is reimplemented to not load any children directly (as they are created by the zones). This method creates the initial set of zones. Zones don't actually get populated however until an attempt is made to display them or to do model/view coordinate translation.</source>
          <target state="translated">Loads all of the children to initialize the view. This is called by the &lt;code&gt;setParent&lt;/code&gt; method. This is reimplemented to not load any children directly (as they are created by the zones). This method creates the initial set of zones. Zones don't actually get populated however until an attempt is made to display them or to do model/view coordinate translation.</target>
        </trans-unit>
        <trans-unit id="701d39b9e0a700ceb3914005a31f591f78b053e3" translate="yes" xml:space="preserve">
          <source>Loads all of the children to initialize the view. This is called by the &lt;code&gt;setParent&lt;/code&gt; method. This is reimplemented to not load any children directly (as they are created in the process of formatting). If the layoutPool variable is null, an instance of LogicalView is created to represent the logical view that is used in the process of formatting.</source>
          <target state="translated">Loads all of the children to initialize the view. This is called by the &lt;code&gt;setParent&lt;/code&gt; method. This is reimplemented to not load any children directly (as they are created in the process of formatting). If the layoutPool variable is null, an instance of LogicalView is created to represent the logical view that is used in the process of formatting.</target>
        </trans-unit>
        <trans-unit id="51dcece53870b1eeb48f32eeb7e4665fb719599a" translate="yes" xml:space="preserve">
          <source>Loads all of the properties represented by the XML document on the specified input stream into this properties table.</source>
          <target state="translated">지정된 입력 스트림에서 XML 문서로 표시되는 모든 특성을이 특성 테이블로로드합니다.</target>
        </trans-unit>
        <trans-unit id="d2f136032441c2af3277429ed2f1a7ba7c72dd6d" translate="yes" xml:space="preserve">
          <source>Loads alternative catalogs as needed.</source>
          <target state="translated">Loads alternative catalogs as needed.</target>
        </trans-unit>
        <trans-unit id="3a1881bcd85845b6051b76684a601b300c1608c3" translate="yes" xml:space="preserve">
          <source>Loads filename map (a mimetable) from a data file.</source>
          <target state="translated">Loads filename map (a mimetable) from a data file.</target>
        </trans-unit>
        <trans-unit id="ae1da7716239378399cffc3cea04b0a5606e7d40" translate="yes" xml:space="preserve">
          <source>Loads filename map (a mimetable) from a data file. It will first try to load the user-specific table, defined by &quot;content.types.user.table&quot; property. If that fails, it tries to load the default built-in table.</source>
          <target state="translated">데이터 파일에서 파일 이름 맵 (모방 가능)을로드합니다. 먼저 &quot;content.types.user.table&quot;속성으로 정의 된 사용자 별 테이블을로드하려고합니다. 실패하면 기본 내장 테이블을로드하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="73d54f5c0ac65830b39cc69988a3b601b6f82614" translate="yes" xml:space="preserve">
          <source>Loads onto the &lt;code&gt;Synthesizer&lt;/code&gt; all instruments contained in the specified &lt;code&gt;Soundbank&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;Soundbank&lt;/code&gt; 에 포함 된 모든 악기를 &lt;code&gt;Synthesizer&lt;/code&gt; 로드 합니다 .</target>
        </trans-unit>
        <trans-unit id="9da44c1e93b4fe8d59833105003e2a8e6b7565fc" translate="yes" xml:space="preserve">
          <source>Loads the &lt;code&gt;LookAndFeel&lt;/code&gt; specified by the given class name, using the current thread's context class loader, and passes it to &lt;code&gt;setLookAndFeel(LookAndFeel)&lt;/code&gt;.</source>
          <target state="translated">Loads the &lt;code&gt;LookAndFeel&lt;/code&gt; specified by the given class name, using the current thread's context class loader, and passes it to &lt;code&gt;setLookAndFeel(LookAndFeel)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a21629a334fe93c37a12fa9db537123452c1378" translate="yes" xml:space="preserve">
          <source>Loads the children based on &lt;code&gt;childValue&lt;/code&gt;.</source>
          <target state="translated">Loads the children based on &lt;code&gt;childValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fb60082c2be03325cc33d21b252fbb3841e88d5" translate="yes" xml:space="preserve">
          <source>Loads the children based on &lt;code&gt;childValue&lt;/code&gt;. If &lt;code&gt;childValue&lt;/code&gt; is a &lt;code&gt;Vector&lt;/code&gt; or array each element is added as a child, if &lt;code&gt;childValue&lt;/code&gt; is a &lt;code&gt;Hashtable&lt;/code&gt; each key/value pair is added in the order that &lt;code&gt;Enumeration&lt;/code&gt; returns the keys.</source>
          <target state="translated">Loads the children based on &lt;code&gt;childValue&lt;/code&gt; . If &lt;code&gt;childValue&lt;/code&gt; is a &lt;code&gt;Vector&lt;/code&gt; or array each element is added as a child, if &lt;code&gt;childValue&lt;/code&gt; is a &lt;code&gt;Hashtable&lt;/code&gt; each key/value pair is added in the order that &lt;code&gt;Enumeration&lt;/code&gt; returns the keys.</target>
        </trans-unit>
        <trans-unit id="fa92e1ea217d352cc027b5054a997c2eb7ec4117" translate="yes" xml:space="preserve">
          <source>Loads the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;.</source>
          <target state="translated">Loads the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="59854fe197fd775c3c0853c83d4b0f8c45c6afc2" translate="yes" xml:space="preserve">
          <source>Loads the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;. The default implementation of this method searches for classes in the following order:</source>
          <target state="translated">Loads the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;. The default implementation of this method searches for classes in the following order:</target>
        </trans-unit>
        <trans-unit id="4e098f085977641acd757343c8d7d21a0867b153" translate="yes" xml:space="preserve">
          <source>Loads the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;. This method searches for classes in the same manner as the &lt;a href=&quot;#loadClass(java.lang.String,boolean)&quot;&gt;&lt;code&gt;loadClass(String, boolean)&lt;/code&gt;&lt;/a&gt; method. It is invoked by the Java virtual machine to resolve class references. Invoking this method is equivalent to invoking &lt;a href=&quot;#loadClass(java.lang.String,boolean)&quot;&gt;&lt;code&gt;loadClass(name,
 false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Loads the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;. This method searches for classes in the same manner as the &lt;a href=&quot;#loadClass(java.lang.String,boolean)&quot;&gt; &lt;code&gt;loadClass(String, boolean)&lt;/code&gt; &lt;/a&gt; method. It is invoked by the Java virtual machine to resolve class references. Invoking this method is equivalent to invoking &lt;a href=&quot;#loadClass(java.lang.String,boolean)&quot;&gt; &lt;code&gt;loadClass(name, false)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="23008203d12b23dee0e597bf4f96db47e96bb80f" translate="yes" xml:space="preserve">
          <source>Loads the class with the specified &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt;. The default implementation of this method searches for classes in the following order:</source>
          <target state="translated">지정된 &lt;a href=&quot;#name&quot;&gt;이진 이름으로&lt;/a&gt; 클래스를로드합니다 . 이 메소드의 기본 구현은 다음 순서로 클래스를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="d662bb835d64e8f4d18945f724326e1ef86c49e9" translate="yes" xml:space="preserve">
          <source>Loads the class with the specified &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt;. This method searches for classes in the same manner as the &lt;a href=&quot;classloader#loadClass-java.lang.String-boolean-&quot;&gt;&lt;code&gt;loadClass(String, boolean)&lt;/code&gt;&lt;/a&gt; method. It is invoked by the Java virtual machine to resolve class references. Invoking this method is equivalent to invoking &lt;a href=&quot;classloader#loadClass-java.lang.String-boolean-&quot;&gt;&lt;code&gt;&lt;code&gt;loadClass(name,
 false)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;#name&quot;&gt;이진 이름으로&lt;/a&gt; 클래스를로드합니다 . 이 메소드는 &lt;a href=&quot;classloader#loadClass-java.lang.String-boolean-&quot;&gt; &lt;code&gt;loadClass(String, boolean)&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 방식으로 클래스를 검색합니다 . Java 가상 머신에 의해 호출되어 클래스 참조를 해결합니다. 이 메소드를 호출하는 것은 &lt;a href=&quot;classloader#loadClass-java.lang.String-boolean-&quot;&gt; &lt;code&gt;&lt;code&gt;loadClass(name, false)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="00313b7bf3ca3ba34d6a8d762d963313d9d997bb" translate="yes" xml:space="preserve">
          <source>Loads the class with the specified &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">Loads the class with the specified &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4a64b29d081b2f35a31ac4af6b616d96c96767b" translate="yes" xml:space="preserve">
          <source>Loads the image, returning only when the image is loaded.</source>
          <target state="translated">Loads the image, returning only when the image is loaded.</target>
        </trans-unit>
        <trans-unit id="0aacfd45a97d7357a069d4db4a2bce935e33e14a" translate="yes" xml:space="preserve">
          <source>Loads the instruments referenced by the specified patches, from the specified &lt;code&gt;Soundbank&lt;/code&gt;.</source>
          <target state="translated">Loads the instruments referenced by the specified patches, from the specified &lt;code&gt;Soundbank&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30078e6ddd9c1f8920d19f9378c8ee5583a27277" translate="yes" xml:space="preserve">
          <source>Loads the instruments referenced by the specified patches, from the specified &lt;code&gt;Soundbank&lt;/code&gt;. Each of the &lt;code&gt;Patch&lt;/code&gt; objects indicates a bank and program number; the &lt;code&gt;Instrument&lt;/code&gt; that has the matching &lt;code&gt;Patch&lt;/code&gt; is loaded into that bank and program location.</source>
          <target state="translated">지정된 &lt;code&gt;Soundbank&lt;/code&gt; 에서 지정된 패치로 참조되는 악기를로드 합니다 . 각 &lt;code&gt;Patch&lt;/code&gt; 객체는 뱅크와 프로그램 번호를 나타냅니다. 일치하는 &lt;code&gt;Patch&lt;/code&gt; 가 있는 &lt;code&gt;Instrument&lt;/code&gt; 가 해당 뱅크 및 프로그램 위치에로드됩니다.</target>
        </trans-unit>
        <trans-unit id="89e9c49d67a086a8903a40759fe1d182ae603eb0" translate="yes" xml:space="preserve">
          <source>Loads the keystore from the given input stream.</source>
          <target state="translated">주어진 입력 스트림에서 키 저장소를로드합니다.</target>
        </trans-unit>
        <trans-unit id="d05e853ecdc5b8e1e89e8dc8a2a38e277de6c7b7" translate="yes" xml:space="preserve">
          <source>Loads the keystore using the given &lt;code&gt;KeyStore.LoadStoreParameter&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;KeyStore.LoadStoreParameter&lt;/code&gt; 를 사용해 키 스토어를로드합니다 .</target>
        </trans-unit>
        <trans-unit id="027dc8829373fd6ff56d51ca11a3549cc2859f55" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the &lt;code&gt;libname&lt;/code&gt; argument.</source>
          <target state="translated">Loads the native library specified by the &lt;code&gt;libname&lt;/code&gt; argument.</target>
        </trans-unit>
        <trans-unit id="c6c5859d25da0d2a2fe2ee3f65751e1f9d3614cb" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the &lt;code&gt;libname&lt;/code&gt; argument. The &lt;code&gt;libname&lt;/code&gt; argument must not contain any platform specific prefix, file extension or path. If a native library called &lt;code&gt;libname&lt;/code&gt; is statically linked with the VM, then the JNI_OnLoad_&lt;code&gt;libname&lt;/code&gt; function exported by the library is invoked. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jni/index.html&quot;&gt; JNI Specification&lt;/a&gt; for more details. Otherwise, the libname argument is loaded from a system library location and mapped to a native library image in an implementation- dependent manner.</source>
          <target state="translated">Loads the native library specified by the &lt;code&gt;libname&lt;/code&gt; argument. The &lt;code&gt;libname&lt;/code&gt; argument must not contain any platform specific prefix, file extension or path. If a native library called &lt;code&gt;libname&lt;/code&gt; is statically linked with the VM, then the JNI_OnLoad_ &lt;code&gt;libname&lt;/code&gt; function exported by the library is invoked. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jni/index.html&quot;&gt; JNI Specification&lt;/a&gt; for more details. Otherwise, the libname argument is loaded from a system library location and mapped to a native library image in an implementation- dependent manner.</target>
        </trans-unit>
        <trans-unit id="2fbd0fe0755eaa272dcd51f896317cf9ac166e52" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the &lt;code&gt;libname&lt;/code&gt; argument. The &lt;code&gt;libname&lt;/code&gt; argument must not contain any platform specific prefix, file extension or path. If a native library called &lt;code&gt;libname&lt;/code&gt; is statically linked with the VM, then the JNI_OnLoad_&lt;code&gt;libname&lt;/code&gt; function exported by the library is invoked. See the JNI Specification for more details. Otherwise, the libname argument is loaded from a system library location and mapped to a native library image in an implementation- dependent manner.</source>
          <target state="translated">&lt;code&gt;libname&lt;/code&gt; 인수로 지정된 기본 라이브러리를로드합니다 . &lt;code&gt;libname&lt;/code&gt; 인수는 플랫폼 특정 접두사, 파일 확장자 또는 경로를 포함 할 수 없습니다. &lt;code&gt;libname&lt;/code&gt; 이라는 기본 라이브러리 가 VM과 정적으로 링크 된 경우 JNI_OnLoad_ &lt;code&gt;libname&lt;/code&gt; 된 경우 라이브러리에서 내 보낸 함수가 호출됩니다. 자세한 내용은 JNI 사양을 참조하십시오. 그렇지 않으면, libname 인수는 시스템 라이브러리 위치에서로드되고 구현 종속 방식으로 기본 라이브러리 이미지에 맵핑됩니다.</target>
        </trans-unit>
        <trans-unit id="823a4a788b1f94f6b27ba48057b02b7772cad47f" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the filename argument.</source>
          <target state="translated">Loads the native library specified by the filename argument.</target>
        </trans-unit>
        <trans-unit id="5f41071d483602d5ad3525d452b2400947b52711" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the filename argument. The filename argument must be an absolute path name. (for example &lt;code&gt;Runtime.getRuntime().load(&quot;/home/avh/lib/libX11.so&quot;);&lt;/code&gt;). If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jni/index.html&quot;&gt; JNI Specification&lt;/a&gt; for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner.</source>
          <target state="translated">Loads the native library specified by the filename argument. The filename argument must be an absolute path name. (for example &lt;code&gt;Runtime.getRuntime().load(&quot;/home/avh/lib/libX11.so&quot;);&lt;/code&gt; ). If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jni/index.html&quot;&gt; JNI Specification&lt;/a&gt; for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner.</target>
        </trans-unit>
        <trans-unit id="b2f13f632b47f9c11fa71496cbeb2c610c91dab7" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the filename argument. The filename argument must be an absolute path name. (for example &lt;code&gt;Runtime.getRuntime().load(&quot;/home/avh/lib/libX11.so&quot;);&lt;/code&gt;). If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the JNI Specification for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner.</source>
          <target state="translated">filename 인수로 지정된 기본 라이브러리를로드합니다. filename 인수는 절대 경로 이름이어야합니다. (예 : &lt;code&gt;Runtime.getRuntime().load(&quot;/home/avh/lib/libX11.so&quot;);&lt;/code&gt; ). 플랫폼 별 라이브러리 접두어, 경로 및 파일 확장자를 제거 할 때 filename 인수가 이름이 L 인 라이브러리를 나타내고 L이라는 기본 라이브러리가 VM과 정적으로 링크 된 경우 JNI_OnLoad_L 함수 동적 라이브러리를로드하려고 시도하지 않고 라이브러리에서 내 보냅니다. 인수와 일치하는 파일 이름이 파일 시스템에 존재할 필요는 없습니다. 자세한 내용은 JNI 사양을 참조하십시오. 그렇지 않으면 filename 인수는 구현에 따라 네이티브 라이브러리 이미지에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="e7984e5a7b6d235b676063c8d896cf96221359e5" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the filename argument. The filename argument must be an absolute path name. If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jni/index.html&quot;&gt; JNI Specification&lt;/a&gt; for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner.</source>
          <target state="translated">Loads the native library specified by the filename argument. The filename argument must be an absolute path name. If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jni/index.html&quot;&gt; JNI Specification&lt;/a&gt; for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner.</target>
        </trans-unit>
        <trans-unit id="5a6c56924d887a5df24871806a75bf01e71ea640" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the filename argument. The filename argument must be an absolute path name. If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the JNI Specification for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner.</source>
          <target state="translated">filename 인수로 지정된 기본 라이브러리를로드합니다. filename 인수는 절대 경로 이름이어야합니다. 플랫폼 별 라이브러리 접두어, 경로 및 파일 확장자를 제거 할 때 filename 인수가 이름이 L 인 라이브러리를 나타내고 L이라는 기본 라이브러리가 VM과 정적으로 링크 된 경우 JNI_OnLoad_L 함수 동적 라이브러리를로드하려고 시도하지 않고 라이브러리에서 내 보냅니다. 인수와 일치하는 파일 이름이 파일 시스템에 존재할 필요는 없습니다. 자세한 내용은 JNI 사양을 참조하십시오. 그렇지 않으면 filename 인수는 구현에 따라 네이티브 라이브러리 이미지에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="d43fc97a57e175c9ef659a36a1656728546c76b4" translate="yes" xml:space="preserve">
          <source>Loads the set of &lt;code&gt;SynthStyle&lt;/code&gt;s that will be used by this &lt;code&gt;SynthLookAndFeel&lt;/code&gt;.</source>
          <target state="translated">Loads the set of &lt;code&gt;SynthStyle&lt;/code&gt; s that will be used by this &lt;code&gt;SynthLookAndFeel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d8b9ccb8fd072381c9fb824f02960a12e21ef9f" translate="yes" xml:space="preserve">
          <source>Loads the set of &lt;code&gt;SynthStyle&lt;/code&gt;s that will be used by this &lt;code&gt;SynthLookAndFeel&lt;/code&gt;. &lt;code&gt;resourceBase&lt;/code&gt; is used to resolve any path based resources, for example an &lt;code&gt;Image&lt;/code&gt; would be resolved by &lt;code&gt;resourceBase.getResource(path)&lt;/code&gt;. Refer to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format&lt;/a&gt; for more information.</source>
          <target state="translated">Loads the set of &lt;code&gt;SynthStyle&lt;/code&gt; s that will be used by this &lt;code&gt;SynthLookAndFeel&lt;/code&gt; . &lt;code&gt;resourceBase&lt;/code&gt; is used to resolve any path based resources, for example an &lt;code&gt;Image&lt;/code&gt; would be resolved by &lt;code&gt;resourceBase.getResource(path)&lt;/code&gt; . Refer to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format&lt;/a&gt; for more information.</target>
        </trans-unit>
        <trans-unit id="ef445b09c2db6bceaa2367d73d24e7a862f4e0a7" translate="yes" xml:space="preserve">
          <source>Loads the set of &lt;code&gt;SynthStyle&lt;/code&gt;s that will be used by this &lt;code&gt;SynthLookAndFeel&lt;/code&gt;. Path based resources are resolved relatively to the specified &lt;code&gt;URL&lt;/code&gt; of the style. For example an &lt;code&gt;Image&lt;/code&gt; would be resolved by &lt;code&gt;new URL(synthFile, path)&lt;/code&gt;. Refer to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format&lt;/a&gt; for more information.</source>
          <target state="translated">Loads the set of &lt;code&gt;SynthStyle&lt;/code&gt; s that will be used by this &lt;code&gt;SynthLookAndFeel&lt;/code&gt; . Path based resources are resolved relatively to the specified &lt;code&gt;URL&lt;/code&gt; of the style. For example an &lt;code&gt;Image&lt;/code&gt; would be resolved by &lt;code&gt;new URL(synthFile, path)&lt;/code&gt; . Refer to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format&lt;/a&gt; for more information.</target>
        </trans-unit>
        <trans-unit id="0c757e1fee19ce59a15e83baab1b7a532d129cad" translate="yes" xml:space="preserve">
          <source>Loads this KeyStore from the given input stream.</source>
          <target state="translated">지정된 입력 스트림로부터이 키 스토어를로드합니다.</target>
        </trans-unit>
        <trans-unit id="2921302fa101967d155cee4c42bfb62e65a48166" translate="yes" xml:space="preserve">
          <source>Loads this buffer's content into physical memory.</source>
          <target state="translated">이 버퍼의 내용을 실제 메모리에로드합니다.</target>
        </trans-unit>
        <trans-unit id="261c7b72fa521f57ddf180274784afae1a4d6f0f" translate="yes" xml:space="preserve">
          <source>Loads this keystore using the given &lt;code&gt;LoadStoreParameter&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;LoadStoreParameter&lt;/code&gt; 를 사용해이 키 스토어를로드 합니다 .</target>
        </trans-unit>
        <trans-unit id="cabdaf4560a1f723610848d646044ec710cf7620" translate="yes" xml:space="preserve">
          <source>Local state is defined as any state associated with a Connection that is local to the current Connection either in the client or the database that is not transparently reproducible.</source>
          <target state="translated">Local state is defined as any state associated with a Connection that is local to the current Connection either in the client or the database that is not transparently reproducible.</target>
        </trans-unit>
        <trans-unit id="71a6a865968d7d4051dd7b61526b62907374868b" translate="yes" xml:space="preserve">
          <source>Local variable declaration</source>
          <target state="translated">지역 변수 선언</target>
        </trans-unit>
        <trans-unit id="7108edd79cd419273bb16ccfa33646c6bc5ae360" translate="yes" xml:space="preserve">
          <source>LocalDate</source>
          <target state="translated">LocalDate</target>
        </trans-unit>
        <trans-unit id="087c4ff7d5d0149ec4aaea679ec48ef46bc3681e" translate="yes" xml:space="preserve">
          <source>LocalDate.adjustInto()</source>
          <target state="translated">LocalDate.adjustInto()</target>
        </trans-unit>
        <trans-unit id="8343e360130d7d351538ec2290ef10a9ab8fc10d" translate="yes" xml:space="preserve">
          <source>LocalDate.atStartOfDay()</source>
          <target state="translated">LocalDate.atStartOfDay()</target>
        </trans-unit>
        <trans-unit id="74e43b3bf9d31628fb13bb05550f5e451ba73348" translate="yes" xml:space="preserve">
          <source>LocalDate.atTime()</source>
          <target state="translated">LocalDate.atTime()</target>
        </trans-unit>
        <trans-unit id="5fc9d0298524001a85f33780126217e9e5ee8c52" translate="yes" xml:space="preserve">
          <source>LocalDate.compareTo()</source>
          <target state="translated">LocalDate.compareTo()</target>
        </trans-unit>
        <trans-unit id="a85c4a56922e16a13c61bd8c9f17ac0a4cdc10ec" translate="yes" xml:space="preserve">
          <source>LocalDate.equals()</source>
          <target state="translated">LocalDate.equals()</target>
        </trans-unit>
        <trans-unit id="c012c5ead40c7b4d757637b103f902d5588a2762" translate="yes" xml:space="preserve">
          <source>LocalDate.format()</source>
          <target state="translated">LocalDate.format()</target>
        </trans-unit>
        <trans-unit id="ae960a0fab47b0f7d4caa1e3b3a104f085fa8c48" translate="yes" xml:space="preserve">
          <source>LocalDate.from()</source>
          <target state="translated">LocalDate.from()</target>
        </trans-unit>
        <trans-unit id="cf9e801a7c95a0c047d42a959edcefd236de23a8" translate="yes" xml:space="preserve">
          <source>LocalDate.get()</source>
          <target state="translated">LocalDate.get()</target>
        </trans-unit>
        <trans-unit id="2c0e40d041803bedc027a0d55129e0fe1116248b" translate="yes" xml:space="preserve">
          <source>LocalDate.getChronology()</source>
          <target state="translated">LocalDate.getChronology()</target>
        </trans-unit>
        <trans-unit id="1796695534df5c7d292039fe6b0b5dfdd510ad81" translate="yes" xml:space="preserve">
          <source>LocalDate.getDayOfMonth()</source>
          <target state="translated">LocalDate.getDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="0e4851d6596b7f40b5aa1bfe448bb3f3d74c0f56" translate="yes" xml:space="preserve">
          <source>LocalDate.getDayOfWeek()</source>
          <target state="translated">LocalDate.getDayOfWeek()</target>
        </trans-unit>
        <trans-unit id="97743e36aae03f9b149db99c7147539e770b4981" translate="yes" xml:space="preserve">
          <source>LocalDate.getDayOfYear()</source>
          <target state="translated">LocalDate.getDayOfYear()</target>
        </trans-unit>
        <trans-unit id="1e8bbff2b73e0139a5e7c1c3d278fec38bf24305" translate="yes" xml:space="preserve">
          <source>LocalDate.getEra()</source>
          <target state="translated">LocalDate.getEra()</target>
        </trans-unit>
        <trans-unit id="f7d7b4b708a9908ab5dc47bc6bef466feaf1fd70" translate="yes" xml:space="preserve">
          <source>LocalDate.getLong()</source>
          <target state="translated">LocalDate.getLong()</target>
        </trans-unit>
        <trans-unit id="6fbced2dd02f23b597cdb572d828ead09d11250a" translate="yes" xml:space="preserve">
          <source>LocalDate.getMonth()</source>
          <target state="translated">LocalDate.getMonth()</target>
        </trans-unit>
        <trans-unit id="a3ac6c3e8f00ced32a0e397a6751f9c06ab94848" translate="yes" xml:space="preserve">
          <source>LocalDate.getMonthValue()</source>
          <target state="translated">LocalDate.getMonthValue()</target>
        </trans-unit>
        <trans-unit id="90529eb88cb6be740bc6d0acde7f5685dc8be466" translate="yes" xml:space="preserve">
          <source>LocalDate.getYear()</source>
          <target state="translated">LocalDate.getYear()</target>
        </trans-unit>
        <trans-unit id="8fb00c640b511e0b942455402d1ac5a191234575" translate="yes" xml:space="preserve">
          <source>LocalDate.hashCode()</source>
          <target state="translated">LocalDate.hashCode()</target>
        </trans-unit>
        <trans-unit id="9b1b535df6bab792fa8c88c5c904e1c1eb999a86" translate="yes" xml:space="preserve">
          <source>LocalDate.isAfter()</source>
          <target state="translated">LocalDate.isAfter()</target>
        </trans-unit>
        <trans-unit id="104753de9bb27906e70851713307a4eafc02473b" translate="yes" xml:space="preserve">
          <source>LocalDate.isBefore()</source>
          <target state="translated">LocalDate.isBefore()</target>
        </trans-unit>
        <trans-unit id="8b2bdc1043360f9155587a4e1186e58ef62fa01e" translate="yes" xml:space="preserve">
          <source>LocalDate.isEqual()</source>
          <target state="translated">LocalDate.isEqual()</target>
        </trans-unit>
        <trans-unit id="966b757e98360d5e950c41b08f370565403f37d8" translate="yes" xml:space="preserve">
          <source>LocalDate.isLeapYear()</source>
          <target state="translated">LocalDate.isLeapYear()</target>
        </trans-unit>
        <trans-unit id="21b33388394208697f945fdc9c95d6a734f8b3e7" translate="yes" xml:space="preserve">
          <source>LocalDate.isSupported()</source>
          <target state="translated">LocalDate.isSupported()</target>
        </trans-unit>
        <trans-unit id="8f86c1b133cd556b969d3068ca2dbc7a845028fb" translate="yes" xml:space="preserve">
          <source>LocalDate.lengthOfMonth()</source>
          <target state="translated">LocalDate.lengthOfMonth()</target>
        </trans-unit>
        <trans-unit id="26e567e8d59556acc86199fa64c6fa6c02ca5bfd" translate="yes" xml:space="preserve">
          <source>LocalDate.lengthOfYear()</source>
          <target state="translated">LocalDate.lengthOfYear()</target>
        </trans-unit>
        <trans-unit id="a8e2618638ae65132002386e11ce95a0181faf48" translate="yes" xml:space="preserve">
          <source>LocalDate.minus()</source>
          <target state="translated">LocalDate.minus()</target>
        </trans-unit>
        <trans-unit id="f7269336ec55529f78dd0469b04dddea9639e7f8" translate="yes" xml:space="preserve">
          <source>LocalDate.minusDays()</source>
          <target state="translated">LocalDate.minusDays()</target>
        </trans-unit>
        <trans-unit id="d119dca31f5e1d5dcb70305a16be97a33950cc48" translate="yes" xml:space="preserve">
          <source>LocalDate.minusMonths()</source>
          <target state="translated">LocalDate.minusMonths()</target>
        </trans-unit>
        <trans-unit id="8c380980b0a294b3d1df8c8db91ebaf87da0fc3e" translate="yes" xml:space="preserve">
          <source>LocalDate.minusWeeks()</source>
          <target state="translated">LocalDate.minusWeeks()</target>
        </trans-unit>
        <trans-unit id="5f544e5e6587bb57a858402aeffa4afd403b7467" translate="yes" xml:space="preserve">
          <source>LocalDate.minusYears()</source>
          <target state="translated">LocalDate.minusYears()</target>
        </trans-unit>
        <trans-unit id="6622d8c43b5f5584ea8295f96649d2c7613689e9" translate="yes" xml:space="preserve">
          <source>LocalDate.now()</source>
          <target state="translated">LocalDate.now()</target>
        </trans-unit>
        <trans-unit id="3becd83c78ed67f80e93323743cd542642c39390" translate="yes" xml:space="preserve">
          <source>LocalDate.of()</source>
          <target state="translated">LocalDate.of()</target>
        </trans-unit>
        <trans-unit id="8460847e7023e89ad6e3e78b4018a7fad28468fb" translate="yes" xml:space="preserve">
          <source>LocalDate.ofEpochDay()</source>
          <target state="translated">LocalDate.ofEpochDay()</target>
        </trans-unit>
        <trans-unit id="767f73bdbca6fd71e1e4170ec7740b4ed0c21908" translate="yes" xml:space="preserve">
          <source>LocalDate.ofYearDay()</source>
          <target state="translated">LocalDate.ofYearDay()</target>
        </trans-unit>
        <trans-unit id="5cd0c72129e0bdd3d30ae0b7797082f68566e643" translate="yes" xml:space="preserve">
          <source>LocalDate.parse()</source>
          <target state="translated">LocalDate.parse()</target>
        </trans-unit>
        <trans-unit id="5bf01f805b5c33e54382e1d60d3ba2dac3641aa0" translate="yes" xml:space="preserve">
          <source>LocalDate.plus()</source>
          <target state="translated">LocalDate.plus()</target>
        </trans-unit>
        <trans-unit id="60c163271fba4bf9653ea1ea379508d79b69a278" translate="yes" xml:space="preserve">
          <source>LocalDate.plusDays()</source>
          <target state="translated">LocalDate.plusDays()</target>
        </trans-unit>
        <trans-unit id="47a0f7409ef24298289eaa4497d65d1dde277014" translate="yes" xml:space="preserve">
          <source>LocalDate.plusMonths()</source>
          <target state="translated">LocalDate.plusMonths()</target>
        </trans-unit>
        <trans-unit id="ccc6d6bc63082ae1a346d074096dab9bc4da6193" translate="yes" xml:space="preserve">
          <source>LocalDate.plusWeeks()</source>
          <target state="translated">LocalDate.plusWeeks()</target>
        </trans-unit>
        <trans-unit id="39e129fb9dd3993fbc1f1f8435098ed5b5ab11a5" translate="yes" xml:space="preserve">
          <source>LocalDate.plusYears()</source>
          <target state="translated">LocalDate.plusYears()</target>
        </trans-unit>
        <trans-unit id="75209b9c6be6b708716e8b56e818a2e96b227160" translate="yes" xml:space="preserve">
          <source>LocalDate.query()</source>
          <target state="translated">LocalDate.query()</target>
        </trans-unit>
        <trans-unit id="f1ae54f72a7fcfc447781b1b12ceab8d6a901a15" translate="yes" xml:space="preserve">
          <source>LocalDate.range()</source>
          <target state="translated">LocalDate.range()</target>
        </trans-unit>
        <trans-unit id="404f23f315db048c64f45b4a1db2bb17d43bda47" translate="yes" xml:space="preserve">
          <source>LocalDate.toEpochDay()</source>
          <target state="translated">LocalDate.toEpochDay()</target>
        </trans-unit>
        <trans-unit id="4102079a48fc09f9067fabc53c161af5093ba72e" translate="yes" xml:space="preserve">
          <source>LocalDate.toString()</source>
          <target state="translated">LocalDate.toString()</target>
        </trans-unit>
        <trans-unit id="505e57d8abb889726027219aa7c048c51f0a55be" translate="yes" xml:space="preserve">
          <source>LocalDate.until()</source>
          <target state="translated">LocalDate.until()</target>
        </trans-unit>
        <trans-unit id="2260aa0e31684df9abe863264c95442e4003212d" translate="yes" xml:space="preserve">
          <source>LocalDate.with()</source>
          <target state="translated">LocalDate.with()</target>
        </trans-unit>
        <trans-unit id="ab3710c8a83a4505592af325b2c66943c66810aa" translate="yes" xml:space="preserve">
          <source>LocalDate.withDayOfMonth()</source>
          <target state="translated">LocalDate.withDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="ef6e1793f9dfcb452fafb95a1ce9fda0fe723b2a" translate="yes" xml:space="preserve">
          <source>LocalDate.withDayOfYear()</source>
          <target state="translated">LocalDate.withDayOfYear()</target>
        </trans-unit>
        <trans-unit id="2550a33355e7fbd3fa64c7c9c234df9e537829fd" translate="yes" xml:space="preserve">
          <source>LocalDate.withMonth()</source>
          <target state="translated">LocalDate.withMonth()</target>
        </trans-unit>
        <trans-unit id="9e8e1e4a0a17b41fdcf63f9008f068695127de9f" translate="yes" xml:space="preserve">
          <source>LocalDate.withYear()</source>
          <target state="translated">LocalDate.withYear()</target>
        </trans-unit>
        <trans-unit id="5f5fbc92aa09673c24f21ed0f797dcb8377f5be7" translate="yes" xml:space="preserve">
          <source>LocalDateTime</source>
          <target state="translated">LocalDateTime</target>
        </trans-unit>
        <trans-unit id="dfdc49741d10c06d383da415c9e903fa0bf5ced6" translate="yes" xml:space="preserve">
          <source>LocalDateTime.adjustInto()</source>
          <target state="translated">LocalDateTime.adjustInto()</target>
        </trans-unit>
        <trans-unit id="c75a3cc696254575da88106fde9c5214a7f407a0" translate="yes" xml:space="preserve">
          <source>LocalDateTime.atOffset()</source>
          <target state="translated">LocalDateTime.atOffset()</target>
        </trans-unit>
        <trans-unit id="59f4cac7877e4bcf4c60810fb3c99cfd6784e079" translate="yes" xml:space="preserve">
          <source>LocalDateTime.atZone()</source>
          <target state="translated">LocalDateTime.atZone()</target>
        </trans-unit>
        <trans-unit id="da29f8384558d634262ad8a2ce64067bc460b32d" translate="yes" xml:space="preserve">
          <source>LocalDateTime.compareTo()</source>
          <target state="translated">LocalDateTime.compareTo()</target>
        </trans-unit>
        <trans-unit id="ead187b775600893e0e1b987fd730653154dc810" translate="yes" xml:space="preserve">
          <source>LocalDateTime.equals()</source>
          <target state="translated">LocalDateTime.equals()</target>
        </trans-unit>
        <trans-unit id="b3bbff4dbeb3a91071536777eba6cfd0a5f8f1d4" translate="yes" xml:space="preserve">
          <source>LocalDateTime.format()</source>
          <target state="translated">LocalDateTime.format()</target>
        </trans-unit>
        <trans-unit id="d51bd34dd019331f8b7efbcdd92cd09bc5c5fff8" translate="yes" xml:space="preserve">
          <source>LocalDateTime.from()</source>
          <target state="translated">LocalDateTime.from()</target>
        </trans-unit>
        <trans-unit id="b9678cf52ab36d0df87b340b5cf89f58fff173e5" translate="yes" xml:space="preserve">
          <source>LocalDateTime.get()</source>
          <target state="translated">LocalDateTime.get()</target>
        </trans-unit>
        <trans-unit id="fa96cc722c36ae1bca512b5f57d128688869b408" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getDayOfMonth()</source>
          <target state="translated">LocalDateTime.getDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="fa5236e87d05ffc9d00385909a5848fd17ef6ce1" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getDayOfWeek()</source>
          <target state="translated">LocalDateTime.getDayOfWeek()</target>
        </trans-unit>
        <trans-unit id="d991e833b9ff567bedff4a42509fb7e75c2802e9" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getDayOfYear()</source>
          <target state="translated">LocalDateTime.getDayOfYear()</target>
        </trans-unit>
        <trans-unit id="1d66fc1316c3ca0dc18f29cd37bb5b87b7e714d5" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getHour()</source>
          <target state="translated">LocalDateTime.getHour()</target>
        </trans-unit>
        <trans-unit id="629c8bf69c9a31538eac970d91b8dc17299dd6c0" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getLong()</source>
          <target state="translated">LocalDateTime.getLong()</target>
        </trans-unit>
        <trans-unit id="d8cf94ec0fbef8afa1074d4e32813a67041e771e" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getMinute()</source>
          <target state="translated">LocalDateTime.getMinute()</target>
        </trans-unit>
        <trans-unit id="ba307f1ec5fcb0810b411567a95e1497778b204b" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getMonth()</source>
          <target state="translated">LocalDateTime.getMonth()</target>
        </trans-unit>
        <trans-unit id="d15e9ab0a56a0725fbe29a11dcadada59ae1de0c" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getMonthValue()</source>
          <target state="translated">LocalDateTime.getMonthValue()</target>
        </trans-unit>
        <trans-unit id="0da1b9f7e16544a45af994c29592474a8120c248" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getNano()</source>
          <target state="translated">LocalDateTime.getNano()</target>
        </trans-unit>
        <trans-unit id="d4920d0484026d3dd04a430c47344595b17b62c3" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getSecond()</source>
          <target state="translated">LocalDateTime.getSecond()</target>
        </trans-unit>
        <trans-unit id="d471f9de255185e1c37427ecf10185db5c840500" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getYear()</source>
          <target state="translated">LocalDateTime.getYear()</target>
        </trans-unit>
        <trans-unit id="b2a5a218f8f83984cb6e37aadf6ea230406cb9dc" translate="yes" xml:space="preserve">
          <source>LocalDateTime.hashCode()</source>
          <target state="translated">LocalDateTime.hashCode()</target>
        </trans-unit>
        <trans-unit id="9e64af14fb5e205db60ce0e495ceab9f62e8f5d5" translate="yes" xml:space="preserve">
          <source>LocalDateTime.isAfter()</source>
          <target state="translated">LocalDateTime.isAfter()</target>
        </trans-unit>
        <trans-unit id="97f2bf8c22d4947ecc1ab35a81054c2876ea3f84" translate="yes" xml:space="preserve">
          <source>LocalDateTime.isBefore()</source>
          <target state="translated">LocalDateTime.isBefore()</target>
        </trans-unit>
        <trans-unit id="865eb51f28c5bbe661610bee105d06fa23270e25" translate="yes" xml:space="preserve">
          <source>LocalDateTime.isEqual()</source>
          <target state="translated">LocalDateTime.isEqual()</target>
        </trans-unit>
        <trans-unit id="b777c50f4e156e09184880c17df2100c7ede04d9" translate="yes" xml:space="preserve">
          <source>LocalDateTime.isSupported()</source>
          <target state="translated">LocalDateTime.isSupported()</target>
        </trans-unit>
        <trans-unit id="89122c727d65be4d570eff1cd30f3e370381b1df" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minus()</source>
          <target state="translated">LocalDateTime.minus()</target>
        </trans-unit>
        <trans-unit id="dbea58bda6f6f5ee8584cb8f6827df435de2d4ff" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusDays()</source>
          <target state="translated">LocalDateTime.minusDays()</target>
        </trans-unit>
        <trans-unit id="e626cabb8e081a3c64a90771e90769527b0fc466" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusHours()</source>
          <target state="translated">LocalDateTime.minusHours()</target>
        </trans-unit>
        <trans-unit id="61ab7b3bdb91f3d4a569cd9117a1dca9d54a96f4" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusMinutes()</source>
          <target state="translated">LocalDateTime.minusMinutes()</target>
        </trans-unit>
        <trans-unit id="b0355f445909d8447c0f8a22dcbc0aa389829444" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusMonths()</source>
          <target state="translated">LocalDateTime.minusMonths()</target>
        </trans-unit>
        <trans-unit id="f40fe4b5003ec78ca4f0871895ff4e864e8711d3" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusNanos()</source>
          <target state="translated">LocalDateTime.minusNanos()</target>
        </trans-unit>
        <trans-unit id="2b46f4efe2d28aa545aa24095fa70176d51161e4" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusSeconds()</source>
          <target state="translated">LocalDateTime.minusSeconds()</target>
        </trans-unit>
        <trans-unit id="c2def8998d79b247d08d4b2ad4da058895f0d717" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusWeeks()</source>
          <target state="translated">LocalDateTime.minusWeeks()</target>
        </trans-unit>
        <trans-unit id="26c6aa1d24669fac2960d588fab602f76c0de079" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusYears()</source>
          <target state="translated">LocalDateTime.minusYears()</target>
        </trans-unit>
        <trans-unit id="436d3a5cd66b5240585ce45e6892b4332f98c41e" translate="yes" xml:space="preserve">
          <source>LocalDateTime.now()</source>
          <target state="translated">LocalDateTime.now()</target>
        </trans-unit>
        <trans-unit id="1c1280fede904868e631f0ef600462726c8023e4" translate="yes" xml:space="preserve">
          <source>LocalDateTime.of()</source>
          <target state="translated">LocalDateTime.of()</target>
        </trans-unit>
        <trans-unit id="c67a4741118107310522de71072546df17c594d9" translate="yes" xml:space="preserve">
          <source>LocalDateTime.ofEpochSecond()</source>
          <target state="translated">LocalDateTime.ofEpochSecond()</target>
        </trans-unit>
        <trans-unit id="76a35b37dead8285202f94a2736a20d01a429f21" translate="yes" xml:space="preserve">
          <source>LocalDateTime.ofInstant()</source>
          <target state="translated">LocalDateTime.ofInstant()</target>
        </trans-unit>
        <trans-unit id="f66ed82d969993f34715a922cf310d51dc86c6fd" translate="yes" xml:space="preserve">
          <source>LocalDateTime.parse()</source>
          <target state="translated">LocalDateTime.parse()</target>
        </trans-unit>
        <trans-unit id="a5ce7216f7b3398aa6eab936eff0a19d046210bd" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plus()</source>
          <target state="translated">LocalDateTime.plus()</target>
        </trans-unit>
        <trans-unit id="ba0a36f168f0bb6f7ec87b4587f67814dc190b5d" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusDays()</source>
          <target state="translated">LocalDateTime.plusDays()</target>
        </trans-unit>
        <trans-unit id="b694b701a34f16cc15b74789b3485ba4c4bd2d1f" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusHours()</source>
          <target state="translated">LocalDateTime.plusHours()</target>
        </trans-unit>
        <trans-unit id="b3ffe3e6729c3ab363f13595512e86f47cdd3164" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusMinutes()</source>
          <target state="translated">LocalDateTime.plusMinutes()</target>
        </trans-unit>
        <trans-unit id="78738327ede1762f3ef3b4b808c5a8e140195ec9" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusMonths()</source>
          <target state="translated">LocalDateTime.plusMonths()</target>
        </trans-unit>
        <trans-unit id="00ec6e91931df177166b26e766fc506b11af04fe" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusNanos()</source>
          <target state="translated">LocalDateTime.plusNanos()</target>
        </trans-unit>
        <trans-unit id="d7059a474134fcde156dc6d8cef80755c505624c" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusSeconds()</source>
          <target state="translated">LocalDateTime.plusSeconds()</target>
        </trans-unit>
        <trans-unit id="729c2d9a2582138c19d768c106196b968a670908" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusWeeks()</source>
          <target state="translated">LocalDateTime.plusWeeks()</target>
        </trans-unit>
        <trans-unit id="39b25f57e2b87bbc52d2f31877c45ea968f10d4c" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusYears()</source>
          <target state="translated">LocalDateTime.plusYears()</target>
        </trans-unit>
        <trans-unit id="3507cf7574484f4246d3b23dba0f0f1bb73b791e" translate="yes" xml:space="preserve">
          <source>LocalDateTime.query()</source>
          <target state="translated">LocalDateTime.query()</target>
        </trans-unit>
        <trans-unit id="2a05ab0a9ebac298c0ccf30ca90ba1cfe704ce49" translate="yes" xml:space="preserve">
          <source>LocalDateTime.range()</source>
          <target state="translated">LocalDateTime.range()</target>
        </trans-unit>
        <trans-unit id="48d9a49fab1ed1cc472702a5a37fda1f0c6974c3" translate="yes" xml:space="preserve">
          <source>LocalDateTime.toLocalDate()</source>
          <target state="translated">LocalDateTime.toLocalDate()</target>
        </trans-unit>
        <trans-unit id="7b7572ad23b284177a135edbc111271169a44221" translate="yes" xml:space="preserve">
          <source>LocalDateTime.toLocalTime()</source>
          <target state="translated">LocalDateTime.toLocalTime()</target>
        </trans-unit>
        <trans-unit id="7767be4f81afd67f504983d59c16249d28371ea8" translate="yes" xml:space="preserve">
          <source>LocalDateTime.toString()</source>
          <target state="translated">LocalDateTime.toString()</target>
        </trans-unit>
        <trans-unit id="21d24561ff1cfab1bfca94ae4a3cbd25b7c40c0c" translate="yes" xml:space="preserve">
          <source>LocalDateTime.truncatedTo()</source>
          <target state="translated">LocalDateTime.truncatedTo()</target>
        </trans-unit>
        <trans-unit id="1c71c4aa7104135eaee517ef57cb4a075370de14" translate="yes" xml:space="preserve">
          <source>LocalDateTime.until()</source>
          <target state="translated">LocalDateTime.until()</target>
        </trans-unit>
        <trans-unit id="8f30e78516ab90e60399d0d99d5fb618d7246705" translate="yes" xml:space="preserve">
          <source>LocalDateTime.with()</source>
          <target state="translated">LocalDateTime.with()</target>
        </trans-unit>
        <trans-unit id="28d961a092665af37bc153ef166cc8efd6976368" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withDayOfMonth()</source>
          <target state="translated">LocalDateTime.withDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="7a74c1753aafb45cc96493887509ac6964e883c7" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withDayOfYear()</source>
          <target state="translated">LocalDateTime.withDayOfYear()</target>
        </trans-unit>
        <trans-unit id="bdc32eaeb908d6562c487482f6d9aa44f511ad76" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withHour()</source>
          <target state="translated">LocalDateTime.withHour()</target>
        </trans-unit>
        <trans-unit id="b62addd08fa12a30ce8e7d7f482e69d6fc99f9e1" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withMinute()</source>
          <target state="translated">LocalDateTime.withMinute()</target>
        </trans-unit>
        <trans-unit id="2bec4a8db0fa5642d704520797a1b26a13a49ffb" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withMonth()</source>
          <target state="translated">LocalDateTime.withMonth()</target>
        </trans-unit>
        <trans-unit id="07fd5c5fd714ea10fd07157bb95c11fdabe343f3" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withNano()</source>
          <target state="translated">LocalDateTime.withNano()</target>
        </trans-unit>
        <trans-unit id="4bd9131c5639c92df40047ba8271f596f83fda67" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withSecond()</source>
          <target state="translated">LocalDateTime.withSecond()</target>
        </trans-unit>
        <trans-unit id="c5e19927aad5591cefc1d09771f6615c34e60433" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withYear()</source>
          <target state="translated">LocalDateTime.withYear()</target>
        </trans-unit>
        <trans-unit id="3c75895502e44be6868b66878bbbfef5367dc0b0" translate="yes" xml:space="preserve">
          <source>LocalDecimalSeparator</source>
          <target state="translated">LocalDecimalSeparator</target>
        </trans-unit>
        <trans-unit id="c7409b8146fab43a6144d9f868e62cc581fc2daa" translate="yes" xml:space="preserve">
          <source>LocalGroupSeparator</source>
          <target state="translated">LocalGroupSeparator</target>
        </trans-unit>
        <trans-unit id="d6b1404a9a5f7d9a38210ecdbde2b977a93b409c" translate="yes" xml:space="preserve">
          <source>LocalInfinity</source>
          <target state="translated">LocalInfinity</target>
        </trans-unit>
        <trans-unit id="40d8e5f537e2123950f9b34e993b5a363acf1940" translate="yes" xml:space="preserve">
          <source>LocalNaN</source>
          <target state="translated">LocalNaN</target>
        </trans-unit>
        <trans-unit id="4dd0753daf8e6ea0e093cb1015142ac4c0d5887e" translate="yes" xml:space="preserve">
          <source>LocalNan</source>
          <target state="translated">LocalNan</target>
        </trans-unit>
        <trans-unit id="8d786b8928ffd6e5ce290b020093668ef69d894b" translate="yes" xml:space="preserve">
          <source>LocalNegativePrefix</source>
          <target state="translated">LocalNegativePrefix</target>
        </trans-unit>
        <trans-unit id="f9c753c0bba5382908ea5ac39b093b6c87728ed9" translate="yes" xml:space="preserve">
          <source>LocalNegativeSuffix</source>
          <target state="translated">LocalNegativeSuffix</target>
        </trans-unit>
        <trans-unit id="994191e05a1bb7fe4f53b173cf5d1b6501dec4d2" translate="yes" xml:space="preserve">
          <source>LocalPositivePrefix</source>
          <target state="translated">LocalPositivePrefix</target>
        </trans-unit>
        <trans-unit id="46aea75eb520a0454637a2239beb4d39d7b6770a" translate="yes" xml:space="preserve">
          <source>LocalPositiveSuffix</source>
          <target state="translated">LocalPositiveSuffix</target>
        </trans-unit>
        <trans-unit id="9cb40f7cd87e6348d6d2464d28eeaa1636f17835" translate="yes" xml:space="preserve">
          <source>LocalTime</source>
          <target state="translated">LocalTime</target>
        </trans-unit>
        <trans-unit id="e8808741ecf12e18c397ad9462ba3dbdc483280f" translate="yes" xml:space="preserve">
          <source>LocalTime.adjustInto()</source>
          <target state="translated">LocalTime.adjustInto()</target>
        </trans-unit>
        <trans-unit id="1c7824982c5d35a064166ceb10b84495ebe83d53" translate="yes" xml:space="preserve">
          <source>LocalTime.atDate()</source>
          <target state="translated">LocalTime.atDate()</target>
        </trans-unit>
        <trans-unit id="2ed1dca0ea9fd70ad21f90ec72d0b5f2c0444975" translate="yes" xml:space="preserve">
          <source>LocalTime.atOffset()</source>
          <target state="translated">LocalTime.atOffset()</target>
        </trans-unit>
        <trans-unit id="f0330bba05076ce675234874319e1552aafe6ca0" translate="yes" xml:space="preserve">
          <source>LocalTime.compareTo()</source>
          <target state="translated">LocalTime.compareTo()</target>
        </trans-unit>
        <trans-unit id="44cc8bf7898c91dc233c3252adb44906eb63aa4d" translate="yes" xml:space="preserve">
          <source>LocalTime.equals()</source>
          <target state="translated">LocalTime.equals()</target>
        </trans-unit>
        <trans-unit id="d057cc4360cd0af30f397f80fbf31d595b357748" translate="yes" xml:space="preserve">
          <source>LocalTime.format()</source>
          <target state="translated">LocalTime.format()</target>
        </trans-unit>
        <trans-unit id="7d5f73f35148f14bc39ea1e39d1c01aa336433c2" translate="yes" xml:space="preserve">
          <source>LocalTime.from()</source>
          <target state="translated">LocalTime.from()</target>
        </trans-unit>
        <trans-unit id="577362adf38545d2867c9f3e9cfb20c7a7f73681" translate="yes" xml:space="preserve">
          <source>LocalTime.get()</source>
          <target state="translated">LocalTime.get()</target>
        </trans-unit>
        <trans-unit id="b6f135d24982ec4be87172f7c1022cd340db7fbd" translate="yes" xml:space="preserve">
          <source>LocalTime.getHour()</source>
          <target state="translated">LocalTime.getHour()</target>
        </trans-unit>
        <trans-unit id="d6def79cf77248387eb5c451d70218b8739788a5" translate="yes" xml:space="preserve">
          <source>LocalTime.getLong()</source>
          <target state="translated">LocalTime.getLong()</target>
        </trans-unit>
        <trans-unit id="e910445f5d70be995b2755d7eb34e691827c833b" translate="yes" xml:space="preserve">
          <source>LocalTime.getMinute()</source>
          <target state="translated">LocalTime.getMinute()</target>
        </trans-unit>
        <trans-unit id="4fc68b3dd147597f7caf50ebf9110f02b1ce611d" translate="yes" xml:space="preserve">
          <source>LocalTime.getNano()</source>
          <target state="translated">LocalTime.getNano()</target>
        </trans-unit>
        <trans-unit id="60a3e614b0305083003ef6d7c3df9d62b8127904" translate="yes" xml:space="preserve">
          <source>LocalTime.getSecond()</source>
          <target state="translated">LocalTime.getSecond()</target>
        </trans-unit>
        <trans-unit id="267ae954121c6aa07be0605ba6b2383fc9e4deb7" translate="yes" xml:space="preserve">
          <source>LocalTime.hashCode()</source>
          <target state="translated">LocalTime.hashCode()</target>
        </trans-unit>
        <trans-unit id="c54e4fc62ccad3ec0ea950d8b1ce9facbf0c7c35" translate="yes" xml:space="preserve">
          <source>LocalTime.isAfter()</source>
          <target state="translated">LocalTime.isAfter()</target>
        </trans-unit>
        <trans-unit id="fdf8ed7c582f253df8543d57512ee5d4e5eb4597" translate="yes" xml:space="preserve">
          <source>LocalTime.isBefore()</source>
          <target state="translated">LocalTime.isBefore()</target>
        </trans-unit>
        <trans-unit id="e055d7424d076517f8997f1b0ccf43ea0f3c4ac0" translate="yes" xml:space="preserve">
          <source>LocalTime.isSupported()</source>
          <target state="translated">LocalTime.isSupported()</target>
        </trans-unit>
        <trans-unit id="ec891756942aa65f43d611517d974023590f23d1" translate="yes" xml:space="preserve">
          <source>LocalTime.minus()</source>
          <target state="translated">LocalTime.minus()</target>
        </trans-unit>
        <trans-unit id="6e4f43b8933c1e847136688f836731ee9df4acf8" translate="yes" xml:space="preserve">
          <source>LocalTime.minusHours()</source>
          <target state="translated">LocalTime.minusHours()</target>
        </trans-unit>
        <trans-unit id="143b97f31c6cf6dcbe088810627fb97eca9aaa82" translate="yes" xml:space="preserve">
          <source>LocalTime.minusMinutes()</source>
          <target state="translated">LocalTime.minusMinutes()</target>
        </trans-unit>
        <trans-unit id="647a1d739224e96ed343eee0d094bab2c836cb34" translate="yes" xml:space="preserve">
          <source>LocalTime.minusNanos()</source>
          <target state="translated">LocalTime.minusNanos()</target>
        </trans-unit>
        <trans-unit id="a460128558e56b020387bba334c6e8b028f55990" translate="yes" xml:space="preserve">
          <source>LocalTime.minusSeconds()</source>
          <target state="translated">LocalTime.minusSeconds()</target>
        </trans-unit>
        <trans-unit id="7b8a6797f3978e62963442167a65d25111480fb6" translate="yes" xml:space="preserve">
          <source>LocalTime.now()</source>
          <target state="translated">LocalTime.now()</target>
        </trans-unit>
        <trans-unit id="91f640b82886cbb3b99905c9c3251c0cc705f559" translate="yes" xml:space="preserve">
          <source>LocalTime.of()</source>
          <target state="translated">LocalTime.of()</target>
        </trans-unit>
        <trans-unit id="668b0fba3aa03166c57a33c4563b88522d2a07d3" translate="yes" xml:space="preserve">
          <source>LocalTime.ofNanoOfDay()</source>
          <target state="translated">LocalTime.ofNanoOfDay()</target>
        </trans-unit>
        <trans-unit id="3eb4394e78e255176d45a398865e9deb237a9552" translate="yes" xml:space="preserve">
          <source>LocalTime.ofSecondOfDay()</source>
          <target state="translated">LocalTime.ofSecondOfDay()</target>
        </trans-unit>
        <trans-unit id="a6feaecfe1197297c5645150b298486386b05ddb" translate="yes" xml:space="preserve">
          <source>LocalTime.parse()</source>
          <target state="translated">LocalTime.parse()</target>
        </trans-unit>
        <trans-unit id="94fdaee4b85f85caff15b91c52f81d4edc768b42" translate="yes" xml:space="preserve">
          <source>LocalTime.plus()</source>
          <target state="translated">LocalTime.plus()</target>
        </trans-unit>
        <trans-unit id="d70f7edac7eae46f6cfe060b6aa560b2a9dbd99f" translate="yes" xml:space="preserve">
          <source>LocalTime.plusHours()</source>
          <target state="translated">LocalTime.plusHours()</target>
        </trans-unit>
        <trans-unit id="6edf298c07641438ff0e020fc32188f57ccdde27" translate="yes" xml:space="preserve">
          <source>LocalTime.plusMinutes()</source>
          <target state="translated">LocalTime.plusMinutes()</target>
        </trans-unit>
        <trans-unit id="ad8ae5810bde99124e1bbb90b289ca59c45a7b4a" translate="yes" xml:space="preserve">
          <source>LocalTime.plusNanos()</source>
          <target state="translated">LocalTime.plusNanos()</target>
        </trans-unit>
        <trans-unit id="47f23a2e6be2743fdad11ab507b3fb96da79c24b" translate="yes" xml:space="preserve">
          <source>LocalTime.plusSeconds()</source>
          <target state="translated">LocalTime.plusSeconds()</target>
        </trans-unit>
        <trans-unit id="9390b343e1ba98c00b9aa257793751bbc62437d7" translate="yes" xml:space="preserve">
          <source>LocalTime.query()</source>
          <target state="translated">LocalTime.query()</target>
        </trans-unit>
        <trans-unit id="b9c1434c0959ff4a57bf015627794503e5397380" translate="yes" xml:space="preserve">
          <source>LocalTime.range()</source>
          <target state="translated">LocalTime.range()</target>
        </trans-unit>
        <trans-unit id="0d6415c90042cc5668eedba48fab1dc46317a305" translate="yes" xml:space="preserve">
          <source>LocalTime.toNanoOfDay()</source>
          <target state="translated">LocalTime.toNanoOfDay()</target>
        </trans-unit>
        <trans-unit id="fff38ab5c0df0a8fa4983302dfc58a3f46190257" translate="yes" xml:space="preserve">
          <source>LocalTime.toSecondOfDay()</source>
          <target state="translated">LocalTime.toSecondOfDay()</target>
        </trans-unit>
        <trans-unit id="e99518ff53e7ac3f2f1809fbc4686b271cc8b246" translate="yes" xml:space="preserve">
          <source>LocalTime.toString()</source>
          <target state="translated">LocalTime.toString()</target>
        </trans-unit>
        <trans-unit id="977a0c801de76aa744b7a374625231d5fc97da4d" translate="yes" xml:space="preserve">
          <source>LocalTime.truncatedTo()</source>
          <target state="translated">LocalTime.truncatedTo()</target>
        </trans-unit>
        <trans-unit id="1c321f783d91159217d590941dd8c98bcd3ff113" translate="yes" xml:space="preserve">
          <source>LocalTime.until()</source>
          <target state="translated">LocalTime.until()</target>
        </trans-unit>
        <trans-unit id="42bf4dd305c142ab88274b3baca6a305fd8b1e42" translate="yes" xml:space="preserve">
          <source>LocalTime.with()</source>
          <target state="translated">LocalTime.with()</target>
        </trans-unit>
        <trans-unit id="a730bc743c790caa4974a1b819862f8e661f66e3" translate="yes" xml:space="preserve">
          <source>LocalTime.withHour()</source>
          <target state="translated">LocalTime.withHour()</target>
        </trans-unit>
        <trans-unit id="105f689fbf4254f191e003b1df77bd66cf6c95fa" translate="yes" xml:space="preserve">
          <source>LocalTime.withMinute()</source>
          <target state="translated">LocalTime.withMinute()</target>
        </trans-unit>
        <trans-unit id="3f8f2e5cb771e3b4ae0cffe2425883e9e059ea4f" translate="yes" xml:space="preserve">
          <source>LocalTime.withNano()</source>
          <target state="translated">LocalTime.withNano()</target>
        </trans-unit>
        <trans-unit id="fadaff9c3cbf1c8d52c19e092c9bdb771c70c0e0" translate="yes" xml:space="preserve">
          <source>LocalTime.withSecond()</source>
          <target state="translated">LocalTime.withSecond()</target>
        </trans-unit>
        <trans-unit id="8970f0e691a0a23a47517698017c997507efd496" translate="yes" xml:space="preserve">
          <source>Locale</source>
          <target state="translated">Locale</target>
        </trans-unit>
        <trans-unit id="61237bfd5226019442d5ea67069f1d703ba3dd9a" translate="yes" xml:space="preserve">
          <source>Locale Constants</source>
          <target state="translated">로케일 상수</target>
        </trans-unit>
        <trans-unit id="1289c157645e650762e71775cb1d92b223d6a49a" translate="yes" xml:space="preserve">
          <source>Locale Matching</source>
          <target state="translated">로케일 일치</target>
        </trans-unit>
        <trans-unit id="b6fe4b6fb4ee6f43b73a4ad131aa0c279ef71640" translate="yes" xml:space="preserve">
          <source>Locale extension, see &lt;a href=&quot;../../util/locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">로캘 확장, &lt;a href=&quot;../../util/locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="4287a5bbcd2eb91200cc074a5811700df975a801" translate="yes" xml:space="preserve">
          <source>Locale sensitive factory methods and methods for name retrieval in the &lt;code&gt;java.text&lt;/code&gt; and &lt;code&gt;java.util&lt;/code&gt; packages invoke service provider methods when needed to support the requested locale. The methods first check whether the Java runtime environment itself supports the requested locale, and use its support if available. Otherwise, they call the &lt;a href=&quot;#isSupportedLocale(java.util.Locale)&quot;&gt;&lt;code&gt;isSupportedLocale&lt;/code&gt;&lt;/a&gt; methods of installed providers for the appropriate interface to find one that supports the requested locale. If such a provider is found, its other methods are called to obtain the requested object or name. When checking whether a locale is supported, the &lt;a href=&quot;../locale#def_extensions&quot;&gt; locale's extensions&lt;/a&gt; are ignored by default. (If locale's extensions should also be checked, the &lt;code&gt;isSupportedLocale&lt;/code&gt; method must be overridden.) If neither the Java runtime environment itself nor an installed provider supports the requested locale, the methods go through a list of candidate locales and repeat the availability check for each until a match is found. The algorithm used for creating a list of candidate locales is same as the one used by &lt;code&gt;ResourceBundle&lt;/code&gt; by default (see &lt;a href=&quot;../resourcebundle.control#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;getCandidateLocales&lt;/code&gt;&lt;/a&gt; for the details). Even if a locale is resolved from the candidate list, methods that return requested objects or names are invoked with the original requested locale including &lt;code&gt;Locale&lt;/code&gt; extensions. The Java runtime environment must support the root locale for all locale sensitive services in order to guarantee that this process terminates.</source>
          <target state="translated">Locale sensitive factory methods and methods for name retrieval in the &lt;code&gt;java.text&lt;/code&gt; and &lt;code&gt;java.util&lt;/code&gt; packages invoke service provider methods when needed to support the requested locale. The methods first check whether the Java runtime environment itself supports the requested locale, and use its support if available. Otherwise, they call the &lt;a href=&quot;#isSupportedLocale(java.util.Locale)&quot;&gt; &lt;code&gt;isSupportedLocale&lt;/code&gt; &lt;/a&gt; methods of installed providers for the appropriate interface to find one that supports the requested locale. If such a provider is found, its other methods are called to obtain the requested object or name. When checking whether a locale is supported, the &lt;a href=&quot;../locale#def_extensions&quot;&gt; locale's extensions&lt;/a&gt; are ignored by default. (If locale's extensions should also be checked, the &lt;code&gt;isSupportedLocale&lt;/code&gt; method must be overridden.) If neither the Java runtime environment itself nor an installed provider supports the requested locale, the methods go through a list of candidate locales and repeat the availability check for each until a match is found. The algorithm used for creating a list of candidate locales is same as the one used by &lt;code&gt;ResourceBundle&lt;/code&gt; by default (see &lt;a href=&quot;../resourcebundle.control#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;getCandidateLocales&lt;/code&gt; &lt;/a&gt; for the details). Even if a locale is resolved from the candidate list, methods that return requested objects or names are invoked with the original requested locale including &lt;code&gt;Locale&lt;/code&gt; extensions. The Java runtime environment must support the root locale for all locale sensitive services in order to guarantee that this process terminates.</target>
        </trans-unit>
        <trans-unit id="f090f5825fe693818b3a532132c5f4f57fb9f315" translate="yes" xml:space="preserve">
          <source>Locale sensitive factory methods and methods for name retrieval in the &lt;code&gt;java.text&lt;/code&gt; and &lt;code&gt;java.util&lt;/code&gt; packages invoke service provider methods when needed to support the requested locale. The methods first check whether the Java runtime environment itself supports the requested locale, and use its support if available. Otherwise, they call the &lt;a href=&quot;localeserviceprovider#isSupportedLocale-java.util.Locale-&quot;&gt;&lt;code&gt;isSupportedLocale&lt;/code&gt;&lt;/a&gt; methods of installed providers for the appropriate interface to find one that supports the requested locale. If such a provider is found, its other methods are called to obtain the requested object or name. When checking whether a locale is supported, the &lt;a href=&quot;../locale#def_extensions&quot;&gt; locale's extensions&lt;/a&gt; are ignored by default. (If locale's extensions should also be checked, the &lt;code&gt;isSupportedLocale&lt;/code&gt; method must be overridden.) If neither the Java runtime environment itself nor an installed provider supports the requested locale, the methods go through a list of candidate locales and repeat the availability check for each until a match is found. The algorithm used for creating a list of candidate locales is same as the one used by &lt;code&gt;ResourceBundle&lt;/code&gt; by default (see &lt;a href=&quot;../resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;getCandidateLocales&lt;/code&gt;&lt;/a&gt; for the details). Even if a locale is resolved from the candidate list, methods that return requested objects or names are invoked with the original requested locale including &lt;code&gt;Locale&lt;/code&gt; extensions. The Java runtime environment must support the root locale for all locale sensitive services in order to guarantee that this process terminates.</source>
          <target state="translated">&lt;code&gt;java.text&lt;/code&gt; 및 &lt;code&gt;java.util&lt;/code&gt; 패키지 에서 이름 검색을위한 로케일 구분 팩토리 메소드 및 메소드 는 요청 된 로케일을 지원해야 할 때 서비스 제공자 메소드를 호출합니다. 메소드는 먼저 Java 런타임 환경 자체가 요청 된 로케일을 지원하는지 확인하고 사용 가능한 경우 해당 지원을 사용합니다. 그렇지 않으면, 적절한 인터페이스에 대해 설치된 제공자 의 &lt;a href=&quot;localeserviceprovider#isSupportedLocale-java.util.Locale-&quot;&gt; &lt;code&gt;isSupportedLocale&lt;/code&gt; &lt;/a&gt; 메소드를 호출 하여 요청 된 로케일을 지원하는 인터페이스를 찾습니다. 그러한 제공자를 찾으면 요청 된 오브젝트 또는 이름을 얻기 위해 다른 메소드가 호출됩니다. 로케일이 지원되는지 여부를 확인하면 &lt;a href=&quot;../locale#def_extensions&quot;&gt;로케일의 확장자&lt;/a&gt; 는 기본적으로 무시됩니다. 로캘의 확장명도 확인해야하는 경우 &lt;code&gt;isSupportedLocale&lt;/code&gt; Java 런타임 환경 자체 또는 설치된 제공자가 요청 된 로케일을 지원하지 않는 경우, 메소드는 후보 로케일 목록을 통과하고 일치 사항이 발견 될 때까지 각각에 대한 가용성 점검을 반복합니다. 후보 로케일 목록을 작성하는 데 사용되는 알고리즘은 기본적 으로 &lt;code&gt;ResourceBundle&lt;/code&gt; 에서 사용하는 알고리즘과 동일 합니다 (자세한 내용 은 &lt;a href=&quot;../resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;getCandidateLocales&lt;/code&gt; &lt;/a&gt; 참조). 후보 목록에서 로케일이 분석 되더라도 요청 된 오브젝트 또는 이름을 리턴하는 메소드는 &lt;code&gt;Locale&lt;/code&gt; 확장자를 포함하여 원래 요청 된 로케일로 호출됩니다 . 이 프로세스가 종료되도록하려면 Java 런타임 환경이 모든 로케일 구분 서비스에 대한 루트 로케일을 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="9cb6eacb2fcb4dc4f8b6dd0aba0b10c533fb75bb" translate="yes" xml:space="preserve">
          <source>Locale sensitive service provider interfaces are interfaces that correspond to locale sensitive classes in the &lt;code&gt;java.text&lt;/code&gt; and &lt;code&gt;java.util&lt;/code&gt; packages. The interfaces enable the construction of locale sensitive objects and the retrieval of localized names for these packages. Locale sensitive factory methods and methods for name retrieval in the &lt;code&gt;java.text&lt;/code&gt; and &lt;code&gt;java.util&lt;/code&gt; packages use implementations of the provider interfaces to offer support for locales beyond the set of locales supported by the Java runtime environment itself.</source>
          <target state="translated">로케일 구분 서비스 제공자 인터페이스는 &lt;code&gt;java.text&lt;/code&gt; 및 &lt;code&gt;java.util&lt;/code&gt; 패키지 의 로케일 구분 클래스에 해당하는 인터페이스입니다 . 인터페이스를 통해 로케일 구분 오브젝트를 구성하고 해당 패키지의 현지화 된 이름을 검색 할 수 있습니다. &lt;code&gt;java.text&lt;/code&gt; 및 &lt;code&gt;java.util&lt;/code&gt; 패키지 에서 이름 검색을위한 로케일 구분 팩토리 메소드 및 메소드 는 제공자 인터페이스의 구현을 사용하여 Java 런타임 환경 자체가 지원하는 로케일 세트 이외의 로케일을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="863f8cdf7109664ebb3c98307a12f520a3754083" translate="yes" xml:space="preserve">
          <source>Locale's constructor has always converted three language codes to their earlier, obsoleted forms: &lt;code&gt;he&lt;/code&gt; maps to &lt;code&gt;iw&lt;/code&gt;, &lt;code&gt;yi&lt;/code&gt; maps to &lt;code&gt;ji&lt;/code&gt;, and &lt;code&gt;id&lt;/code&gt; maps to &lt;code&gt;in&lt;/code&gt;. This continues to be the case, in order to not break backwards compatibility.</source>
          <target state="translated">로케일의 생성자는 항상 이전, 폐기 형태로 세 가지 언어 코드를 변환했습니다 &lt;code&gt;he&lt;/code&gt; 매핑 &lt;code&gt;iw&lt;/code&gt; , &lt;code&gt;yi&lt;/code&gt; 에 매핑 &lt;code&gt;ji&lt;/code&gt; , 그리고 &lt;code&gt;id&lt;/code&gt; 매핑 &lt;code&gt;in&lt;/code&gt; . 이전 버전과의 호환성을 유지하지 않기 위해 계속해서 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="243ae215fc31d30ae4fe53e0a5a6dd8551012fdd" translate="yes" xml:space="preserve">
          <source>Locale(&quot;de&quot;, &quot;DE&quot;)</source>
          <target state="translated">로케일 ( &quot;de&quot;, &quot;DE&quot;)</target>
        </trans-unit>
        <trans-unit id="c0be06b40a45b336138a75cd90a28217da13036b" translate="yes" xml:space="preserve">
          <source>Locale(&quot;en&quot;, &quot;US&quot;)</source>
          <target state="translated">로케일 ( &quot;en&quot;, &quot;US&quot;)</target>
        </trans-unit>
        <trans-unit id="86e9c81f7aade762c56e6c4136f2ba7d07dbc61f" translate="yes" xml:space="preserve">
          <source>Locale(&quot;es&quot;, &quot;ES&quot;)</source>
          <target state="translated">로케일 ( &quot;es&quot;, &quot;ES&quot;)</target>
        </trans-unit>
        <trans-unit id="a97655e334ddb4c5487b591ef029614c493b8016" translate="yes" xml:space="preserve">
          <source>Locale(&quot;fr&quot;, &quot;CH&quot;)</source>
          <target state="translated">로케일 ( &quot;fr&quot;, &quot;CH&quot;)</target>
        </trans-unit>
        <trans-unit id="4034a7335c208b4775683b81c9cda7930ea294b9" translate="yes" xml:space="preserve">
          <source>Locale(&quot;fr&quot;, &quot;FR&quot;)</source>
          <target state="translated">로케일 ( &quot;fr&quot;, &quot;FR&quot;)</target>
        </trans-unit>
        <trans-unit id="f1fbe8845594d38db5d5a76bf101327b21ffeb93" translate="yes" xml:space="preserve">
          <source>Locale(&quot;ja&quot;, &quot;JP&quot;, &quot;JP&quot;) is treated as &quot;ja-JP-u-ca-japanese&quot;</source>
          <target state="translated">로케일 ( &quot;ja&quot;, &quot;JP&quot;, &quot;JP&quot;)은 &quot;ja-JP-u-ca-japanese&quot;로 취급됩니다.</target>
        </trans-unit>
        <trans-unit id="992ec2a52350f06318d588b6d466b1ea3a091c5f" translate="yes" xml:space="preserve">
          <source>Locale(&quot;no&quot;, &quot;NO&quot;, &quot;NY&quot;) is treated as &quot;nn-NO&quot;</source>
          <target state="translated">로케일 ( &quot;no&quot;, &quot;NO&quot;, &quot;NY&quot;)은 &quot;nn-NO&quot;로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="f6a87a37786864fb4f05bbc02409c9a40d93cb0b" translate="yes" xml:space="preserve">
          <source>Locale(&quot;th&quot;, &quot;TH&quot;, &quot;TH&quot;) is treated as &quot;th-TH-u-nu-thai&quot;</source>
          <target state="translated">로케일 ( &quot;th&quot;, &quot;TH&quot;, &quot;TH&quot;)은 &quot;th-TH-u-nu-thai&quot;로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="9ad087e0c56b70d5770ff24a313405aab295a699" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings()&quot;&gt;morning or afternoon&lt;/a&gt; marker in lower case, e.g.&quot;&lt;code&gt;am&lt;/code&gt;&quot; or &quot;&lt;code&gt;pm&lt;/code&gt;&quot;. Use of the conversion prefix &lt;code&gt;'T'&lt;/code&gt; forces this output to upper case.</source>
          <target state="translated">Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings()&quot;&gt;morning or afternoon&lt;/a&gt; marker in lower case, e.g.&quot; &lt;code&gt;am&lt;/code&gt; &quot; or &quot; &lt;code&gt;pm&lt;/code&gt; &quot;. Use of the conversion prefix &lt;code&gt;'T'&lt;/code&gt; forces this output to upper case.</target>
        </trans-unit>
        <trans-unit id="6eb76f63b721147189c27faaeb4452deb33e08b5" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings()&quot;&gt;morning or afternoon&lt;/a&gt; marker in lower case, e.g.&quot;&lt;code&gt;am&lt;/code&gt;&quot; or &quot;&lt;code&gt;pm&lt;/code&gt;&quot;. Use of the conversion prefix &lt;code&gt;'T'&lt;/code&gt; forces this output to upper case. (Note that &lt;code&gt;'p'&lt;/code&gt; produces lower-case output. This is different from GNU &lt;code&gt;date&lt;/code&gt; and POSIX &lt;code&gt;strftime(3c)&lt;/code&gt; which produce upper-case output.)</source>
          <target state="translated">Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings()&quot;&gt;morning or afternoon&lt;/a&gt; marker in lower case, e.g.&quot; &lt;code&gt;am&lt;/code&gt; &quot; or &quot; &lt;code&gt;pm&lt;/code&gt; &quot;. Use of the conversion prefix &lt;code&gt;'T'&lt;/code&gt; forces this output to upper case. (Note that &lt;code&gt;'p'&lt;/code&gt; produces lower-case output. This is different from GNU &lt;code&gt;date&lt;/code&gt; and POSIX &lt;code&gt;strftime(3c)&lt;/code&gt; which produce upper-case output.)</target>
        </trans-unit>
        <trans-unit id="f39dcae9e8a4ca18412d4a664b964241bee0a01d" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings--&quot;&gt;morning or afternoon&lt;/a&gt; marker in lower case, e.g.&quot;&lt;code&gt;am&lt;/code&gt;&quot; or &quot;&lt;code&gt;pm&lt;/code&gt;&quot;. Use of the conversion prefix &lt;code&gt;'T'&lt;/code&gt; forces this output to upper case.</source>
          <target state="translated">소문자의 로케일 별 &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings--&quot;&gt;오전 또는 오후&lt;/a&gt; 마커 (예 : &quot; &lt;code&gt;am&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;pm&lt;/code&gt; &quot;). 변환 접두사 &lt;code&gt;'T'&lt;/code&gt; 를 사용하면이 출력이 대문자가됩니다.</target>
        </trans-unit>
        <trans-unit id="f5bef63e4ee4d89d915f489eef5a6b25bd49c187" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings--&quot;&gt;morning or afternoon&lt;/a&gt; marker in lower case, e.g.&quot;&lt;code&gt;am&lt;/code&gt;&quot; or &quot;&lt;code&gt;pm&lt;/code&gt;&quot;. Use of the conversion prefix &lt;code&gt;'T'&lt;/code&gt; forces this output to upper case. (Note that &lt;code&gt;'p'&lt;/code&gt; produces lower-case output. This is different from GNU &lt;code&gt;date&lt;/code&gt; and POSIX &lt;code&gt;strftime(3c)&lt;/code&gt; which produce upper-case output.)</source>
          <target state="translated">소문자의 로케일 별 &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings--&quot;&gt;오전 또는 오후&lt;/a&gt; 마커 (예 : &quot; &lt;code&gt;am&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;pm&lt;/code&gt; &quot;). 변환 접두사 &lt;code&gt;'T'&lt;/code&gt; 를 사용하면이 출력이 대문자가됩니다. ( &lt;code&gt;'p'&lt;/code&gt; 는 소문자 출력을 생성합니다. 이것은 대문자 출력을 생성하는 GNU &lt;code&gt;date&lt;/code&gt; 및 POSIX &lt;code&gt;strftime(3c)&lt;/code&gt; 와 다릅니다 .)</target>
        </trans-unit>
        <trans-unit id="dcb4050ac1658c533abe753dc17b497ffa8ee009" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getMonths()&quot;&gt;full month name&lt;/a&gt;, e.g. &lt;code&gt;&quot;January&quot;&lt;/code&gt;, &lt;code&gt;&quot;February&quot;&lt;/code&gt;.</source>
          <target state="translated">Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getMonths()&quot;&gt;full month name&lt;/a&gt;, e.g. &lt;code&gt;&quot;January&quot;&lt;/code&gt; , &lt;code&gt;&quot;February&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18626f22a95760ef08f34af9d16775543bb7bd24" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getMonths--&quot;&gt;full month name&lt;/a&gt;, e.g. &lt;code&gt;&quot;January&quot;&lt;/code&gt;, &lt;code&gt;&quot;February&quot;&lt;/code&gt;.</source>
          <target state="translated">로케일 고유의 &lt;a href=&quot;../text/dateformatsymbols#getMonths--&quot;&gt;전체 월 이름&lt;/a&gt; , 예를 들어 &lt;code&gt;&quot;January&quot;&lt;/code&gt; , &lt;code&gt;&quot;February&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2bdd2aba9a5f6c5d988110d636cdc5a91042a9b" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getShortMonths()&quot;&gt;abbreviated month name&lt;/a&gt;, e.g. &lt;code&gt;&quot;Jan&quot;&lt;/code&gt;, &lt;code&gt;&quot;Feb&quot;&lt;/code&gt;.</source>
          <target state="translated">Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getShortMonths()&quot;&gt;abbreviated month name&lt;/a&gt;, e.g. &lt;code&gt;&quot;Jan&quot;&lt;/code&gt; , &lt;code&gt;&quot;Feb&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="396f1a408b4c148f44c63807a5067c4e444eb6f3" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getShortMonths--&quot;&gt;abbreviated month name&lt;/a&gt;, e.g. &lt;code&gt;&quot;Jan&quot;&lt;/code&gt;, &lt;code&gt;&quot;Feb&quot;&lt;/code&gt;.</source>
          <target state="translated">로케일 별 &lt;a href=&quot;../text/dateformatsymbols#getShortMonths--&quot;&gt;약식 월 이름&lt;/a&gt; (예 : &lt;code&gt;&quot;Jan&quot;&lt;/code&gt; , &lt;code&gt;&quot;Feb&quot;&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="d2d58cdf43e521ac075e3a8fb40465e4478fd7a2" translate="yes" xml:space="preserve">
          <source>Locale-specific full name of the &lt;a href=&quot;../text/dateformatsymbols#getWeekdays()&quot;&gt;day of the week&lt;/a&gt;, e.g. &lt;code&gt;&quot;Sunday&quot;&lt;/code&gt;, &lt;code&gt;&quot;Monday&quot;&lt;/code&gt;</source>
          <target state="translated">Locale-specific full name of the &lt;a href=&quot;../text/dateformatsymbols#getWeekdays()&quot;&gt;day of the week&lt;/a&gt;, e.g. &lt;code&gt;&quot;Sunday&quot;&lt;/code&gt; , &lt;code&gt;&quot;Monday&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9ce920cbc2a07ed2e914ac9ceee1cf41546b7a2" translate="yes" xml:space="preserve">
          <source>Locale-specific full name of the &lt;a href=&quot;../text/dateformatsymbols#getWeekdays--&quot;&gt;day of the week&lt;/a&gt;, e.g. &lt;code&gt;&quot;Sunday&quot;&lt;/code&gt;, &lt;code&gt;&quot;Monday&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../text/dateformatsymbols#getWeekdays--&quot;&gt;요일의&lt;/a&gt; 로케일 별 전체 이름 ( 예 : &lt;code&gt;&quot;Sunday&quot;&lt;/code&gt; , &lt;code&gt;&quot;Monday&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a174ef1ddf2238e47aef3b6270453ecbb64c5d43" translate="yes" xml:space="preserve">
          <source>Locale-specific short name of the &lt;a href=&quot;../text/dateformatsymbols#getShortWeekdays()&quot;&gt;day of the week&lt;/a&gt;, e.g. &lt;code&gt;&quot;Sun&quot;&lt;/code&gt;, &lt;code&gt;&quot;Mon&quot;&lt;/code&gt;</source>
          <target state="translated">Locale-specific short name of the &lt;a href=&quot;../text/dateformatsymbols#getShortWeekdays()&quot;&gt;day of the week&lt;/a&gt;, e.g. &lt;code&gt;&quot;Sun&quot;&lt;/code&gt; , &lt;code&gt;&quot;Mon&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df82a835aa03a280dfb47c8ec1b16f048f32958f" translate="yes" xml:space="preserve">
          <source>Locale-specific short name of the &lt;a href=&quot;../text/dateformatsymbols#getShortWeekdays--&quot;&gt;day of the week&lt;/a&gt;, e.g. &lt;code&gt;&quot;Sun&quot;&lt;/code&gt;, &lt;code&gt;&quot;Mon&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../text/dateformatsymbols#getShortWeekdays--&quot;&gt;요일의&lt;/a&gt; 로케일 별 짧은 이름 ( 예 : &lt;code&gt;&quot;Sun&quot;&lt;/code&gt; , &lt;code&gt;&quot;Mon&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1157f099a21dd4e871f56628a58ba3a019e3938d" translate="yes" xml:space="preserve">
          <source>Locale.Builder</source>
          <target state="translated">Locale.Builder</target>
        </trans-unit>
        <trans-unit id="ef003eb1302f0b3a70278e8495026ae856ae6788" translate="yes" xml:space="preserve">
          <source>Locale.Builder.addUnicodeLocaleAttribute()</source>
          <target state="translated">Locale.Builder.addUnicodeLocaleAttribute()</target>
        </trans-unit>
        <trans-unit id="f27f43cdd5751a9bcdad1c6a41744acc5f8fdba9" translate="yes" xml:space="preserve">
          <source>Locale.Builder.build()</source>
          <target state="translated">Locale.Builder.build()</target>
        </trans-unit>
        <trans-unit id="6a2ac33ebf17c4468ebfa06d86844fbc9c558fc2" translate="yes" xml:space="preserve">
          <source>Locale.Builder.clear()</source>
          <target state="translated">Locale.Builder.clear()</target>
        </trans-unit>
        <trans-unit id="9b0f5bf729f9cb6f0502fbb86b5492b2ad5168d4" translate="yes" xml:space="preserve">
          <source>Locale.Builder.clearExtensions()</source>
          <target state="translated">Locale.Builder.clearExtensions()</target>
        </trans-unit>
        <trans-unit id="4e48237c6341e89751792adfded1643be6d44107" translate="yes" xml:space="preserve">
          <source>Locale.Builder.removeUnicodeLocaleAttribute()</source>
          <target state="translated">Locale.Builder.removeUnicodeLocaleAttribute()</target>
        </trans-unit>
        <trans-unit id="cd74c4456202f9c2591dee53e23f2301a4834f2c" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setExtension()</source>
          <target state="translated">Locale.Builder.setExtension()</target>
        </trans-unit>
        <trans-unit id="0d3359bd47adfc70c4fdbabfb4f686cbfb1b9690" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setLanguage()</source>
          <target state="translated">Locale.Builder.setLanguage()</target>
        </trans-unit>
        <trans-unit id="833d8cdf0dce57bbb228b68443b036e3d1d7849e" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setLanguageTag()</source>
          <target state="translated">Locale.Builder.setLanguageTag()</target>
        </trans-unit>
        <trans-unit id="8299bdfee8020b424dcac5e5cbe0c71baf54abd6" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setLocale()</source>
          <target state="translated">Locale.Builder.setLocale()</target>
        </trans-unit>
        <trans-unit id="5bc2f44b685498ea18bab289b879c7b6a36ae4df" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setRegion()</source>
          <target state="translated">Locale.Builder.setRegion()</target>
        </trans-unit>
        <trans-unit id="c5e82f7c9f9db59945f954f3971b000e5b577cb3" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setScript()</source>
          <target state="translated">Locale.Builder.setScript()</target>
        </trans-unit>
        <trans-unit id="a9df16fd71296e3cf9357168975ba373171d3d3b" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setUnicodeLocaleKeyword()</source>
          <target state="translated">Locale.Builder.setUnicodeLocaleKeyword()</target>
        </trans-unit>
        <trans-unit id="f6b522bf6c569d653950757499ac35c37b73fb3c" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setVariant()</source>
          <target state="translated">Locale.Builder.setVariant()</target>
        </trans-unit>
        <trans-unit id="17a951d395c0a71c6cb0aa8284583c11c3226691" translate="yes" xml:space="preserve">
          <source>Locale.Category</source>
          <target state="translated">Locale.Category</target>
        </trans-unit>
        <trans-unit id="16791b8a8b4bb2e50ef2ccfb229888101e05ae23" translate="yes" xml:space="preserve">
          <source>Locale.Category.valueOf()</source>
          <target state="translated">Locale.Category.valueOf()</target>
        </trans-unit>
        <trans-unit id="1eca5fd6dcdfb950862d6c527000bf07e9626325" translate="yes" xml:space="preserve">
          <source>Locale.Category.values()</source>
          <target state="translated">Locale.Category.values()</target>
        </trans-unit>
        <trans-unit id="6e1f003d405fdfe78d8d48d3d0b13d1fb4c8995b" translate="yes" xml:space="preserve">
          <source>Locale.FilteringMode</source>
          <target state="translated">Locale.FilteringMode</target>
        </trans-unit>
        <trans-unit id="33b973c04da7233a2030331bf76cf677fbe7ae2e" translate="yes" xml:space="preserve">
          <source>Locale.FilteringMode.valueOf()</source>
          <target state="translated">Locale.FilteringMode.valueOf()</target>
        </trans-unit>
        <trans-unit id="8b4b6ea4ef5c3c82f082d4331212f8d0fd1339c5" translate="yes" xml:space="preserve">
          <source>Locale.FilteringMode.values()</source>
          <target state="translated">Locale.FilteringMode.values()</target>
        </trans-unit>
        <trans-unit id="c93ff35044071cf2bb2690b7258b8d9ce136436c" translate="yes" xml:space="preserve">
          <source>Locale.IsoCountryCode</source>
          <target state="translated">Locale.IsoCountryCode</target>
        </trans-unit>
        <trans-unit id="b1c97f35128849450c894f87a5d44a5e5a0022a1" translate="yes" xml:space="preserve">
          <source>Locale.LanguageRange</source>
          <target state="translated">Locale.LanguageRange</target>
        </trans-unit>
        <trans-unit id="9547f14e1a7fbfeafd451096bb0e4cdf0450d86c" translate="yes" xml:space="preserve">
          <source>Locale.LanguageRange.equals()</source>
          <target state="translated">Locale.LanguageRange.equals()</target>
        </trans-unit>
        <trans-unit id="85481da5ca24bac20ea7a718cff3fcf2ea48370c" translate="yes" xml:space="preserve">
          <source>Locale.LanguageRange.getRange()</source>
          <target state="translated">Locale.LanguageRange.getRange()</target>
        </trans-unit>
        <trans-unit id="0ccd55e37e5e68d9fa92b779e64d664c363c5ae4" translate="yes" xml:space="preserve">
          <source>Locale.LanguageRange.getWeight()</source>
          <target state="translated">Locale.LanguageRange.getWeight()</target>
        </trans-unit>
        <trans-unit id="5caf48af9657ed999d93f19a29e7dad088b48a28" translate="yes" xml:space="preserve">
          <source>Locale.LanguageRange.hashCode()</source>
          <target state="translated">Locale.LanguageRange.hashCode()</target>
        </trans-unit>
        <trans-unit id="e2d731b21fb86880665249da8acee3c71d890728" translate="yes" xml:space="preserve">
          <source>Locale.LanguageRange.mapEquivalents()</source>
          <target state="translated">Locale.LanguageRange.mapEquivalents()</target>
        </trans-unit>
        <trans-unit id="468bb036ab29891969dc202d7ba7593cb78f6150" translate="yes" xml:space="preserve">
          <source>Locale.LanguageRange.parse()</source>
          <target state="translated">Locale.LanguageRange.parse()</target>
        </trans-unit>
        <trans-unit id="ebb88a25d873523ef21321251f62984b42533d3f" translate="yes" xml:space="preserve">
          <source>Locale.clone()</source>
          <target state="translated">Locale.clone()</target>
        </trans-unit>
        <trans-unit id="17ec9f55870ca9698ec750e876770a69b0bed256" translate="yes" xml:space="preserve">
          <source>Locale.equals()</source>
          <target state="translated">Locale.equals()</target>
        </trans-unit>
        <trans-unit id="0720cdf00f1127038ab715c7b08dce6be5f579d5" translate="yes" xml:space="preserve">
          <source>Locale.filter()</source>
          <target state="translated">Locale.filter()</target>
        </trans-unit>
        <trans-unit id="22f2eaea6b1a9f6b8385e383056c40f005accd11" translate="yes" xml:space="preserve">
          <source>Locale.filterTags()</source>
          <target state="translated">Locale.filterTags()</target>
        </trans-unit>
        <trans-unit id="f9950fc3325c1e8792d4f895daf479069efc30ec" translate="yes" xml:space="preserve">
          <source>Locale.forLanguageTag()</source>
          <target state="translated">Locale.forLanguageTag()</target>
        </trans-unit>
        <trans-unit id="0ad2bedd4145ea364ad52a39908dc88b5dd50551" translate="yes" xml:space="preserve">
          <source>Locale.getAvailableLocales()</source>
          <target state="translated">Locale.getAvailableLocales()</target>
        </trans-unit>
        <trans-unit id="fc8869750660578a6f909f0793b204771d180f5f" translate="yes" xml:space="preserve">
          <source>Locale.getCountry()</source>
          <target state="translated">Locale.getCountry()</target>
        </trans-unit>
        <trans-unit id="462cbdfe0f59d86975b13e543df859d154fae556" translate="yes" xml:space="preserve">
          <source>Locale.getDefault()</source>
          <target state="translated">Locale.getDefault()</target>
        </trans-unit>
        <trans-unit id="0eeb393d2301c544edb78036ab40584768a6484a" translate="yes" xml:space="preserve">
          <source>Locale.getDisplayCountry()</source>
          <target state="translated">Locale.getDisplayCountry()</target>
        </trans-unit>
        <trans-unit id="7b6a2c6adf3c91c4f83fab2982c995632f2d6c67" translate="yes" xml:space="preserve">
          <source>Locale.getDisplayLanguage()</source>
          <target state="translated">Locale.getDisplayLanguage()</target>
        </trans-unit>
        <trans-unit id="868ef7415e7e1be75489876028cb101f80e02675" translate="yes" xml:space="preserve">
          <source>Locale.getDisplayName()</source>
          <target state="translated">Locale.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="a14c933588f17cc3dcee1680093c021f2f387432" translate="yes" xml:space="preserve">
          <source>Locale.getDisplayScript()</source>
          <target state="translated">Locale.getDisplayScript()</target>
        </trans-unit>
        <trans-unit id="5fffc7cafddfb31cba2be82218acc1e8d04b7a4a" translate="yes" xml:space="preserve">
          <source>Locale.getDisplayVariant()</source>
          <target state="translated">Locale.getDisplayVariant()</target>
        </trans-unit>
        <trans-unit id="f9d16bb6c2df7f91c6a1301084b964b19f8c9f6a" translate="yes" xml:space="preserve">
          <source>Locale.getExtension()</source>
          <target state="translated">Locale.getExtension()</target>
        </trans-unit>
        <trans-unit id="091ff86a4efeddeaf1e48849005787e0ac8d08d8" translate="yes" xml:space="preserve">
          <source>Locale.getExtensionKeys()</source>
          <target state="translated">Locale.getExtensionKeys()</target>
        </trans-unit>
        <trans-unit id="7d0eeb4e2fd771d37bd836b1f143f4ef45d737c0" translate="yes" xml:space="preserve">
          <source>Locale.getISO3Country()</source>
          <target state="translated">Locale.getISO3Country()</target>
        </trans-unit>
        <trans-unit id="a574bcb341b19220f61133ecabf12fc260bf1c14" translate="yes" xml:space="preserve">
          <source>Locale.getISO3Language()</source>
          <target state="translated">Locale.getISO3Language()</target>
        </trans-unit>
        <trans-unit id="7c53b5862a9d9ca1798b144a78e7cc56d8c454dc" translate="yes" xml:space="preserve">
          <source>Locale.getISOCountries()</source>
          <target state="translated">Locale.getISOCountries()</target>
        </trans-unit>
        <trans-unit id="11e40f3d665f78fae873d5008642c7f070d49f2f" translate="yes" xml:space="preserve">
          <source>Locale.getISOLanguages()</source>
          <target state="translated">Locale.getISOLanguages()</target>
        </trans-unit>
        <trans-unit id="768482a0d945ba5a3decc05032028627d6e4bf40" translate="yes" xml:space="preserve">
          <source>Locale.getLanguage()</source>
          <target state="translated">Locale.getLanguage()</target>
        </trans-unit>
        <trans-unit id="6170a78ebdaa46440c06a459cdc580b180887d33" translate="yes" xml:space="preserve">
          <source>Locale.getScript()</source>
          <target state="translated">Locale.getScript()</target>
        </trans-unit>
        <trans-unit id="5fa322cf209a061f0faf16fe985f1cd3c431cd49" translate="yes" xml:space="preserve">
          <source>Locale.getUnicodeLocaleAttributes()</source>
          <target state="translated">Locale.getUnicodeLocaleAttributes()</target>
        </trans-unit>
        <trans-unit id="5c89a609670a96816236b0b64fb29c4048dc5824" translate="yes" xml:space="preserve">
          <source>Locale.getUnicodeLocaleKeys()</source>
          <target state="translated">Locale.getUnicodeLocaleKeys()</target>
        </trans-unit>
        <trans-unit id="509f3a30a91d1ca7dca4c18e1704be76f9784ad0" translate="yes" xml:space="preserve">
          <source>Locale.getUnicodeLocaleType()</source>
          <target state="translated">Locale.getUnicodeLocaleType()</target>
        </trans-unit>
        <trans-unit id="7db520fe29c8136d4e446b3bad352a23a069824b" translate="yes" xml:space="preserve">
          <source>Locale.getVariant()</source>
          <target state="translated">Locale.getVariant()</target>
        </trans-unit>
        <trans-unit id="09494eb167a5b634ed8a4c6586eeb6fc5e44c889" translate="yes" xml:space="preserve">
          <source>Locale.hasExtensions()</source>
          <target state="translated">Locale.hasExtensions()</target>
        </trans-unit>
        <trans-unit id="56469256be9bc3f3480ba12d5c262c20fb74609d" translate="yes" xml:space="preserve">
          <source>Locale.hashCode()</source>
          <target state="translated">Locale.hashCode()</target>
        </trans-unit>
        <trans-unit id="4ee9a55a1e470c0e688c56824977c4a59ab2bbc7" translate="yes" xml:space="preserve">
          <source>Locale.lookup()</source>
          <target state="translated">Locale.lookup()</target>
        </trans-unit>
        <trans-unit id="959ba06fe8e44dcfa1b69b874b42dd91373d126f" translate="yes" xml:space="preserve">
          <source>Locale.lookupTag()</source>
          <target state="translated">Locale.lookupTag()</target>
        </trans-unit>
        <trans-unit id="f925bdbf811ef52ac252e3e0c8ee2883f4f1e84a" translate="yes" xml:space="preserve">
          <source>Locale.setDefault()</source>
          <target state="translated">Locale.setDefault()</target>
        </trans-unit>
        <trans-unit id="9c48306a96ad29d131f7badef3390bd02426a63d" translate="yes" xml:space="preserve">
          <source>Locale.stripExtensions()</source>
          <target state="translated">Locale.stripExtensions()</target>
        </trans-unit>
        <trans-unit id="522fe59559edb072a41b5d41e2814e37e12aa622" translate="yes" xml:space="preserve">
          <source>Locale.toLanguageTag()</source>
          <target state="translated">Locale.toLanguageTag()</target>
        </trans-unit>
        <trans-unit id="2ef0c9a78b0b580a8b094a05d9487f907c1ba15c" translate="yes" xml:space="preserve">
          <source>Locale.toString()</source>
          <target state="translated">Locale.toString()</target>
        </trans-unit>
        <trans-unit id="76bb9707a89087119b5dbffefb0453e0b2ff867d" translate="yes" xml:space="preserve">
          <source>LocaleNameProvider</source>
          <target state="translated">LocaleNameProvider</target>
        </trans-unit>
        <trans-unit id="00dd403e2802140de3bbc34ebaf41cb2c7a0ac91" translate="yes" xml:space="preserve">
          <source>LocaleNameProvider.getDisplayCountry()</source>
          <target state="translated">LocaleNameProvider.getDisplayCountry()</target>
        </trans-unit>
        <trans-unit id="c54749d473a2dcd85570968727aa2fd42d572a1a" translate="yes" xml:space="preserve">
          <source>LocaleNameProvider.getDisplayLanguage()</source>
          <target state="translated">LocaleNameProvider.getDisplayLanguage()</target>
        </trans-unit>
        <trans-unit id="5ac556a29ecf777528bb05c604dafe39bb67c39d" translate="yes" xml:space="preserve">
          <source>LocaleNameProvider.getDisplayScript()</source>
          <target state="translated">LocaleNameProvider.getDisplayScript()</target>
        </trans-unit>
        <trans-unit id="8af23ac39e8f803d33686086d0c50ecad1fdd9fb" translate="yes" xml:space="preserve">
          <source>LocaleNameProvider.getDisplayVariant()</source>
          <target state="translated">LocaleNameProvider.getDisplayVariant()</target>
        </trans-unit>
        <trans-unit id="b584890e0aa4a3366e623392c21cd3ab2382f053" translate="yes" xml:space="preserve">
          <source>LocaleServiceProvider</source>
          <target state="translated">LocaleServiceProvider</target>
        </trans-unit>
        <trans-unit id="f0a3a4d1f1246dbc053dd91208de9a88b94cedb9" translate="yes" xml:space="preserve">
          <source>LocaleServiceProvider.getAvailableLocales()</source>
          <target state="translated">LocaleServiceProvider.getAvailableLocales()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
