<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="cfc5f284c55f0850787d4daf099cb8d1f252d53e" translate="yes" xml:space="preserve">
          <source>The byte order of a short buffer created by allocation or by wrapping an existing &lt;code&gt;short&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a short buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">할당 또는 기존의 &lt;code&gt;short&lt;/code&gt; 배열 을 래핑하여 생성 된 짧은 버퍼의 바이트 순서 는 기본 하드웨어 의 &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt; 입니다. 바이트 버퍼의 &lt;a href=&quot;bytebuffer#views&quot;&gt;뷰로&lt;/a&gt; 생성 된 짧은 버퍼의 바이트 순서 는 뷰가 생성되는 순간의 바이트 버퍼 의 바이트 순서입니다 .</target>
        </trans-unit>
        <trans-unit id="d329e5f47c9a84dc8e2b980d1c0c0a36a749cba2" translate="yes" xml:space="preserve">
          <source>The byte order of a view buffer is fixed to be that of its byte buffer at the time that the view is created.</source>
          <target state="translated">뷰 버퍼의 바이트 순서는 뷰가 생성 될 때 바이트 버퍼의 바이트 순서로 고정됩니다.</target>
        </trans-unit>
        <trans-unit id="a9ba71648d412782d19f790e89eb67c7021e14fa" translate="yes" xml:space="preserve">
          <source>The byte order of an int buffer created by allocation or by wrapping an existing &lt;code&gt;int&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of an int buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">할당 또는 기존 &lt;code&gt;int&lt;/code&gt; 배열 을 래핑하여 만든 int 버퍼의 바이트 순서 는 기본 하드웨어 의 &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt; 입니다. 바이트 버퍼의 &lt;a href=&quot;bytebuffer#views&quot;&gt;뷰로&lt;/a&gt; 생성 된 int 버퍼의 바이트 순서 는 뷰가 생성되는 순간의 바이트 버퍼의 순서입니다.</target>
        </trans-unit>
        <trans-unit id="7e6b38e4e4aefc9d62ff65054f43aab5864326e1" translate="yes" xml:space="preserve">
          <source>The byte order of an int buffer created by allocation or by wrapping an existing &lt;code&gt;int&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of an int buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">할당 또는 기존 &lt;code&gt;int&lt;/code&gt; 배열 을 래핑하여 생성 된 int 버퍼의 바이트 순서 는 기본 하드웨어 의 &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt; 입니다. 바이트 버퍼의 &lt;a href=&quot;bytebuffer#views&quot;&gt;뷰로&lt;/a&gt; 생성 된 int 버퍼의 바이트 순서 는 뷰가 생성되는 순간의 바이트 버퍼 의 바이트 순서입니다 .</target>
        </trans-unit>
        <trans-unit id="9ab3e7d600ccaa7f8b9bff966dc767547c526082" translate="yes" xml:space="preserve">
          <source>The byte order of the stream as an instance of the enumeration class &lt;code&gt;java.nio.ByteOrder&lt;/code&gt;, where &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; indicates network byte order and &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; indicates the reverse order.</source>
          <target state="translated">열거 클래스 &lt;code&gt;java.nio.ByteOrder&lt;/code&gt; 의 인스턴스로서 스트림의 바이트 순서 . 여기서 &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; 은 네트워크 바이트 순서를 나타내고 &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; 은 역순을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="922b6475bb7c93120f18c536157006a342e40842" translate="yes" xml:space="preserve">
          <source>The byte order of the stream as an instance of the enumeration class &lt;code&gt;java.nio.ByteOrder&lt;/code&gt;, where &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; indicates network byte order and &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; indicates the reverse order. By default, the value is &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt;.</source>
          <target state="translated">열거 클래스 &lt;code&gt;java.nio.ByteOrder&lt;/code&gt; 의 인스턴스 인 스트림의 바이트 순서 . 여기서 &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; 은 네트워크 바이트 순서를, &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; 은 역순을 나타냅니다. 기본적으로 값은 &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3ac99f08420b0a24dc629e953b4fd8055fd1229b" translate="yes" xml:space="preserve">
          <source>The byte order of the stream has no effect on this method. The return value of this method is constructed as though the bits were read one at a time, and shifted into the right side of the return value, as shown by the following pseudo-code:</source>
          <target state="translated">스트림의 바이트 순서는이 메소드에 영향을 미치지 않습니다. 이 메서드의 반환 값은 비트가 한 번에 하나씩 읽은 것처럼 구성되며 다음 의사 코드로 표시되는 것처럼 반환 값의 오른쪽으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="08e17269998e47630b6abbde51c8a7614a01ba4b" translate="yes" xml:space="preserve">
          <source>The byte stream that was set with setByteStream, or null if setByteStream or the ByteStream constructor was not called.</source>
          <target state="translated">setByteStream으로 설정된 바이트 스트림. setByteStream 또는 ByteStream 생성자가 호출되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="17672dad032d8fba9c2ddea23057f29a9f6fd3f2" translate="yes" xml:space="preserve">
          <source>The byte stream that was set with setOutputStream, or null if setOutputStream or the ByteStream constructor was not called.</source>
          <target state="translated">setOutputStream으로 설정된 바이트 스트림. setOutputStream 또는 ByteStream 생성자가 호출되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="3c1b269d444d43a3624f3eeb02b5c0c28d452db7" translate="yes" xml:space="preserve">
          <source>The byte stream, or null if none was supplied.</source>
          <target state="translated">바이트 스트림 또는 제공되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="fe9e7e57fe9d5209751608e3672edda5b746da18" translate="yes" xml:space="preserve">
          <source>The bytecode behavior for a &lt;code&gt;findClass&lt;/code&gt; operation is a load of a constant class, as if by &lt;code&gt;ldc CONSTANT_Class&lt;/code&gt;. The behavior is represented, not as a method handle, but directly as a &lt;code&gt;Class&lt;/code&gt; constant.</source>
          <target state="translated">&lt;code&gt;findClass&lt;/code&gt; 작업에 대한 바이트 코드 동작은 &lt;code&gt;ldc CONSTANT_Class&lt;/code&gt; 에서처럼 상수 클래스의로드입니다 . 동작은 메서드 핸들이 아니라 &lt;code&gt;Class&lt;/code&gt; 상수 로 직접 표현됩니다 .</target>
        </trans-unit>
        <trans-unit id="d7739f1fe93cb52885acb54bce104115051ed89e" translate="yes" xml:space="preserve">
          <source>The bytecodes for the class.</source>
          <target state="translated">클래스의 바이트 코드.</target>
        </trans-unit>
        <trans-unit id="e98750b98cb578117e4a7b03d9689b363791d254" translate="yes" xml:space="preserve">
          <source>The bytes between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the byte at index</source>
          <target state="translated">버퍼의 현재 위치와 한계 사이의 바이트는 버퍼의 시작 부분에 복사됩니다. 즉, 인덱스의 바이트</target>
        </trans-unit>
        <trans-unit id="605bdb9768c8cdd5277446afd564abb5d9175bca" translate="yes" xml:space="preserve">
          <source>The bytes in given byte buffer will be fully consumed by this method. On return, its position will equal its limit.</source>
          <target state="translated">주어진 바이트 버퍼의 바이트는이 메서드에 의해 완전히 사용됩니다. 돌아올 때 그 위치는 한계와 같습니다.</target>
        </trans-unit>
        <trans-unit id="fdb617b55c781ce6016c87e15df5a36aff81d4fc" translate="yes" xml:space="preserve">
          <source>The bytes in the &lt;code&gt;input&lt;/code&gt; buffer are processed, and the result is stored in a new buffer.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 버퍼 의 바이트 가 처리되고 결과는 새 버퍼에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="c3be3ee4e2ba1705b0819316619d526cd4ca38d3" translate="yes" xml:space="preserve">
          <source>The bytes in the &lt;code&gt;input&lt;/code&gt; buffer, and any input bytes that may have been buffered during a previous &lt;code&gt;update&lt;/code&gt; operation, are processed, with padding (if requested) being applied. If an AEAD mode such as GCM/CCM is being used, the authentication tag is appended in the case of encryption, or verified in the case of decryption. The result is stored in a new buffer.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 버퍼 의 바이트 및 이전 &lt;code&gt;update&lt;/code&gt; 작업 중에 버퍼링 될 수있는 모든 입력 바이트는 패딩 (요청 된 경우)이 적용되어 처리됩니다. GCM / CCM과 같은 AEAD 모드를 사용중인 경우 암호화의 경우 인증 태그가 추가되거나 암호 해독의 경우 확인됩니다. 결과는 새로운 버퍼에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="e8477b1431e21fbd46bb1ccf3bf62d71fd8b63b6" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the DES key are those between &lt;code&gt;key[0]&lt;/code&gt; and &lt;code&gt;key[7]&lt;/code&gt; inclusive.</source>
          <target state="translated">DES 키를 구성하는 바이트는 &lt;code&gt;key[0]&lt;/code&gt; 과 &lt;code&gt;key[7]&lt;/code&gt; 사이의 바이트입니다 .</target>
        </trans-unit>
        <trans-unit id="a3f2da7875cad1eeed18f83a8d95ae13c715aa4e" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the DES key are those between &lt;code&gt;key[offset]&lt;/code&gt; and &lt;code&gt;key[offset+7]&lt;/code&gt; inclusive.</source>
          <target state="translated">DES 키를 구성하는 바이트는 &lt;code&gt;key[offset]&lt;/code&gt; 와 &lt;code&gt;key[offset+7]&lt;/code&gt; 사이의 바이트입니다 .</target>
        </trans-unit>
        <trans-unit id="f4fa0678e8609555f8143e63e8b2f158ff878621" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the DES-EDE key are those between &lt;code&gt;key[0]&lt;/code&gt; and &lt;code&gt;key[23]&lt;/code&gt; inclusive</source>
          <target state="translated">DES-EDE 키를 구성하는 바이트 사이들이다 &lt;code&gt;key[0]&lt;/code&gt; 및 &lt;code&gt;key[23]&lt;/code&gt; 을 포함</target>
        </trans-unit>
        <trans-unit id="13305bd13aac1472ef1037068afe772ad0fb4273" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the DES-EDE key are those between &lt;code&gt;key[offset]&lt;/code&gt; and &lt;code&gt;key[offset+23]&lt;/code&gt; inclusive.</source>
          <target state="translated">DES-EDE 키를 구성하는 바이트는 &lt;code&gt;key[offset]&lt;/code&gt; 와 &lt;code&gt;key[offset+23]&lt;/code&gt; 사이의 바이트입니다 .</target>
        </trans-unit>
        <trans-unit id="3067e974cc7fdd3a9dfe76018048100635f25890" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the IV are those between &lt;code&gt;iv[0]&lt;/code&gt; and &lt;code&gt;iv[7]&lt;/code&gt; inclusive.</source>
          <target state="translated">IV를 구성하는 바이트는 &lt;code&gt;iv[0]&lt;/code&gt; 와 &lt;code&gt;iv[7]&lt;/code&gt; 사이의 바이트입니다 .</target>
        </trans-unit>
        <trans-unit id="e88aa68f8ceb389a17299b0b745903e72581ad9c" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the IV are those between &lt;code&gt;iv[offset]&lt;/code&gt; and &lt;code&gt;iv[offset+len-1]&lt;/code&gt; inclusive.</source>
          <target state="translated">IV를 구성하는 바이트는 &lt;code&gt;iv[offset]&lt;/code&gt; 와 &lt;code&gt;iv[offset+len-1]&lt;/code&gt; 사이의 바이트입니다 .</target>
        </trans-unit>
        <trans-unit id="c171e0871451b5bcb88b7ecb2eba3ec410b4a9a1" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the secret key are those between &lt;code&gt;key[offset]&lt;/code&gt; and &lt;code&gt;key[offset+len-1]&lt;/code&gt; inclusive.</source>
          <target state="translated">비밀 키를 구성하는 바이트는 &lt;code&gt;key[offset]&lt;/code&gt; 와 &lt;code&gt;key[offset+len-1]&lt;/code&gt; 사이의 바이트입니다 .</target>
        </trans-unit>
        <trans-unit id="732aef137cc3f962420a0257f8a4816a031faa63" translate="yes" xml:space="preserve">
          <source>The bytes will be written to the stream number that is specified by &lt;a href=&quot;messageinfo#streamNumber()&quot;&gt;&lt;code&gt;streamNumber&lt;/code&gt;&lt;/a&gt; in the given &lt;code&gt;
 messageInfo&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt; messageInfo&lt;/code&gt; 에서 &lt;a href=&quot;messageinfo#streamNumber()&quot;&gt; &lt;code&gt;streamNumber&lt;/code&gt; &lt;/a&gt; 에 의해 지정된 스트림 번호에 바이트가 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="a5b7d43b7dabc9df1454a8ff820a35700bfc1b23" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readChar&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt; , which will then return a &lt;code&gt;char&lt;/code&gt; equal to &lt;code&gt;(char)v&lt;/code&gt;.</source>
          <target state="translated">이 메소드에 의해 쓰여진 바이트는 &lt;code&gt;DataInput&lt;/code&gt; 인터페이스 의 &lt;code&gt;readChar&lt;/code&gt; 메소드에 의해 읽힐 수 있으며 , 그러면 &lt;code&gt;(char)v&lt;/code&gt; 와 같은 &lt;code&gt;char&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="eec394fb90b2031d2f1a685d7b2dba0e529b32b3" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readChar&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;char&lt;/code&gt; equal to &lt;code&gt;(char)v&lt;/code&gt;.</source>
          <target state="translated">이 메서드가 쓴 바이트는 &lt;code&gt;DataInput&lt;/code&gt; 인터페이스 의 &lt;code&gt;readChar&lt;/code&gt; 메서드에서 읽을 수 있으며 , 그러면 &lt;code&gt;(char)v&lt;/code&gt; 와 같은 &lt;code&gt;char&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0b95387b94a86af5779949aa0a20e886731ea4d4" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readInt&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt; , which will then return an &lt;code&gt;int&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">이 메소드에 의해 쓰여진 바이트는 &lt;code&gt;DataInput&lt;/code&gt; 인터페이스 의 &lt;code&gt;readInt&lt;/code&gt; 메소드에 의해 읽힐 수 있으며 , 그러면 &lt;code&gt;v&lt;/code&gt; 와 동일한 &lt;code&gt;int&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="9f40c78ca0000ce4b4a8dc6136d8f3d8d4dc7994" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readInt&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return an &lt;code&gt;int&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">이 메서드가 쓴 바이트는 &lt;code&gt;DataInput&lt;/code&gt; 인터페이스 의 &lt;code&gt;readInt&lt;/code&gt; 메서드에서 읽을 수 있으며 &lt;code&gt;v&lt;/code&gt; 와 같은 &lt;code&gt;int&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b00736a5ccdb8c5c715cbbbfdd29b8aa3e9af1ac" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readLong&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt; , which will then return a &lt;code&gt;long&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">이 메소드에 의해 쓰여진 바이트는 &lt;code&gt;DataInput&lt;/code&gt; 인터페이스 의 &lt;code&gt;readLong&lt;/code&gt; 메소드에 의해 읽힐 수 있으며 , &lt;code&gt;v&lt;/code&gt; 와 같은 &lt;code&gt;long&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="872152a2a3b7325be4176597f667f430885d7d80" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readLong&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;long&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">이 메서드가 쓴 바이트는 &lt;code&gt;DataInput&lt;/code&gt; 인터페이스 의 &lt;code&gt;readLong&lt;/code&gt; 메서드에서 읽을 수 있으며 &lt;code&gt;v&lt;/code&gt; 와 동일한 &lt;code&gt;long&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3565a4ba0097da0e53b33f2f269c8a9843ebdfdd" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readShort&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt; , which will then return a &lt;code&gt;short&lt;/code&gt; equal to &lt;code&gt;(short)v&lt;/code&gt;.</source>
          <target state="translated">이 메소드에 의해 쓰여진 바이트는 &lt;code&gt;DataInput&lt;/code&gt; 인터페이스 의 &lt;code&gt;readShort&lt;/code&gt; 메소드에 의해 읽힐 수 있으며 , 그러면 &lt;code&gt;(short)v&lt;/code&gt; 와 동일한 &lt;code&gt;short&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="76799f098c714964b37a80aec745be74c3c967d8" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readShort&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;short&lt;/code&gt; equal to &lt;code&gt;(short)v&lt;/code&gt;.</source>
          <target state="translated">이 메서드가 쓴 바이트는 &lt;code&gt;DataInput&lt;/code&gt; 인터페이스 의 &lt;code&gt;readShort&lt;/code&gt; 메서드에서 읽을 수 있으며 , 그러면 &lt;code&gt;(short)v&lt;/code&gt; 와 같은 &lt;code&gt;short&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="594b8e0f4367854f5fec1f1e47e81634970cee0b" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readUTF&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt; , which will then return a &lt;code&gt;String&lt;/code&gt; equal to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">이 메소드에 의해 쓰여진 바이트는 &lt;code&gt;DataInput&lt;/code&gt; 인터페이스 의 &lt;code&gt;readUTF&lt;/code&gt; 메소드에 의해 읽힐 수 있으며 , 그러면 &lt;code&gt;s&lt;/code&gt; 와 같은 &lt;code&gt;String&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="d4ceb3e2c737fd9eaed355761ef88872a8455989" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readUTF&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;String&lt;/code&gt; equal to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">이 메서드가 쓴 바이트는 &lt;code&gt;DataInput&lt;/code&gt; 인터페이스 의 &lt;code&gt;readUTF&lt;/code&gt; 메서드에서 읽을 수 있으며 , 그러면 &lt;code&gt;s&lt;/code&gt; 와 같은 &lt;code&gt;String&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="31fa5f9fc9eed95eef4be0210ae43d26c7263f6c" translate="yes" xml:space="preserve">
          <source>The cache may reside in main memory or on disk. Setting this flag to &lt;code&gt;false&lt;/code&gt; disallows the use of disk for future streams, which may be advantageous when working with small images, as the overhead of creating and destroying files is removed.</source>
          <target state="translated">캐시는 주 메모리 나 디스크에있을 수 있습니다. 이 플래그를 &lt;code&gt;false&lt;/code&gt; 로 설정하면 향후 스트림에 디스크를 사용할 수 없습니다. 이는 파일 작성 및 삭제의 오버 헤드가 제거되므로 작은 이미지로 작업 할 때 유리할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2bc9e50f825b3431afd7e5a709accec3607181e7" translate="yes" xml:space="preserve">
          <source>The cached MBeanInfo for that MBean, if not null, or a newly built MBeanInfo if none was cached.</source>
          <target state="translated">널이 아닌 경우 해당 MBean에 대해 캐시 된 MBeanInfo 또는 캐시되지 않은 경우 새로 빌드 된 MBeanInfo</target>
        </trans-unit>
        <trans-unit id="0ab46aaa358cbc9d48861d7c404420fc26ce55fe" translate="yes" xml:space="preserve">
          <source>The cached MBeanInfo, or null if no MBeanInfo is cached.</source>
          <target state="translated">캐쉬 된 MBeanInfo. 캐쉬되어 있지 않은 경우는 null</target>
        </trans-unit>
        <trans-unit id="b2259efff9c9fa7b9d00ac309cbb633be1c4e418" translate="yes" xml:space="preserve">
          <source>The cached minimum preferred size.</source>
          <target state="translated">캐시 된 최소 기본 크기입니다.</target>
        </trans-unit>
        <trans-unit id="83d21569e8013b0c639bdc2607401a7867030a12" translate="yes" xml:space="preserve">
          <source>The caching flag is designed to allow provider implementations to prevent the rules being cached in &lt;code&gt;ZoneId&lt;/code&gt;. Under normal circumstances, the caching of zone rules is highly desirable as it will provide greater performance. However, there is a use case where the caching would not be desirable, see &lt;a href=&quot;#provideRules(java.lang.String,boolean)&quot;&gt;&lt;code&gt;provideRules(java.lang.String, boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">캐싱 플래그는 공급자 구현이 규칙이 &lt;code&gt;ZoneId&lt;/code&gt; 에 캐시되는 것을 방지하도록 설계되었습니다 . 정상적인 상황에서 영역 규칙의 캐싱은 더 나은 성능을 제공하므로 매우 바람직합니다. 그러나 캐싱이 바람직하지 않은 사용 사례가 있습니다. &lt;a href=&quot;#provideRules(java.lang.String,boolean)&quot;&gt; &lt;code&gt;provideRules(java.lang.String, boolean)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b831b6b8d71a342113c94aa040943ab0817aea9b" translate="yes" xml:space="preserve">
          <source>The caching flag is designed to allow provider implementations to prevent the rules being cached in &lt;code&gt;ZoneId&lt;/code&gt;. Under normal circumstances, the caching of zone rules is highly desirable as it will provide greater performance. However, there is a use case where the caching would not be desirable, see &lt;a href=&quot;zonerulesprovider#provideRules-java.lang.String-boolean-&quot;&gt;&lt;code&gt;provideRules(java.lang.String, boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">캐싱 플래그는 공급자 구현이 규칙이 &lt;code&gt;ZoneId&lt;/code&gt; 에 캐시되지 않도록하기 위해 설계되었습니다 . 정상적인 상황에서는 영역 규칙을 캐싱하는 것이 성능이 향상되므로 매우 바람직합니다. 그러나 캐싱이 바람직하지 않은 사용 사례가 있습니다. &lt;a href=&quot;zonerulesprovider#provideRules-java.lang.String-boolean-&quot;&gt; &lt;code&gt;provideRules(java.lang.String, boolean)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b0e896df123d4b65bbbe5a4dafe244dbddcdea17" translate="yes" xml:space="preserve">
          <source>The calculation for date and time units differ.</source>
          <target state="translated">날짜 및 시간 단위에 대한 계산이 다릅니다.</target>
        </trans-unit>
        <trans-unit id="12cacecff5d3a90852567654a9cd056e41f9ed9b" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo(java.time.temporal.Temporal)&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">계산은 &lt;a href=&quot;temporal/temporalamount#addTo(java.time.temporal.Temporal)&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; &lt;/a&gt; 호출하여 amount 객체에 위임됩니다 . 금액 구현은 원하는 방식으로 추가를 구현할 수 있지만 일반적으로 &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 다시 호출합니다 . 금액이 성공적으로 추가 될 수 있는지 확인하려면 금액 구현 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3f9bfb97f566a996492a90ed855eda8eef86861b" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 금액 구현은 원하는 방식으로 추가를 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 으로 다시 호출합니다 . 금액 구현 문서를 참조하여 추가 할 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d36a13c282a1a0db204d6e433edc37043d6d0a0c" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 금액 구현은 원하는 방식으로 추가를 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 으로 다시 호출합니다 . 금액 구현 문서를 참조하여 추가 할 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="405fd7a334255c2eb1f7b060d385c4b26c0c094f" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 금액 구현은 원하는 방식으로 추가를 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 으로 다시 호출합니다 . 금액 구현 문서를 참조하여 추가 할 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="337784a3c16463d8f2a1d05d69b5de99101c53f9" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 금액 구현은 원하는 방식으로 추가를 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 으로 다시 호출합니다 . 금액 구현 문서를 참조하여 추가 할 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8944e4ffa7476e40cdbb6ed5d28a69895c14f3d9" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 금액 구현은 원하는 방식으로 추가를 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 으로 다시 호출합니다 . 금액 구현 문서를 참조하여 추가 할 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5fc94b4fc685ed04a2ebd12ecf82c33d700c679e" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 금액 구현은 원하는 방식으로 추가를 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 으로 다시 호출합니다 . 금액 구현 문서를 참조하여 추가 할 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1cfef65ed1bb6a95bbe63ebf74cdcb10c5ecd139" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 금액 구현은 원하는 방식으로 추가를 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 으로 다시 호출합니다 . 금액 구현 문서를 참조하여 추가 할 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7e99f6027203570f1c45a91326691927a052b5f7" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 금액 구현은 원하는 방식으로 추가를 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 으로 다시 호출합니다 . 금액 구현 문서를 참조하여 추가 할 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="994428485f2ea149263e9c2fb513da76194ad0b8" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 금액 구현은 원하는 방식으로 추가를 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 으로 다시 호출합니다 . 금액 구현 문서를 참조하여 추가 할 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a3b93fd296752b78aa6bf5c6f05eb5aa9188bee9" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom(java.time.temporal.Temporal)&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">계산은 &lt;a href=&quot;temporal/temporalamount#subtractFrom(java.time.temporal.Temporal)&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 amount 객체에 위임됩니다 . 금액 구현은 원하는 방식으로 빼기를 구현할 수 있지만 일반적으로 &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 으로 다시 호출합니다 . 금액을 성공적으로 뺄 수 있는지 확인하려면 금액 구현 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="72beecfb4b4380d1395896cd556f2fd5f887329f" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;instant#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 양 구현은 원하는 방식으로 뺄셈을 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;instant#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 성공적으로 뺄 수 있는지 확인하려면 금액 구현 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="63d8dfd01dd14bee40f150a8512f195b82961be7" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;localdate#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 양 구현은 원하는 방식으로 뺄셈을 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;localdate#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 성공적으로 뺄 수 있는지 확인하려면 금액 구현 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ef7bf705802a1c00c21142d8479c79f5ad4f4ad9" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;localdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 양 구현은 원하는 방식으로 뺄셈을 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;localdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 성공적으로 뺄 수 있는지 확인하려면 금액 구현 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9f83917a4b3043dc83a8a121229cd2c84588523d" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;localtime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 양 구현은 원하는 방식으로 뺄셈을 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;localtime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 성공적으로 뺄 수 있는지 확인하려면 금액 구현 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9735318a5ee7c236f2a3824643d883272d024629" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;offsetdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 양 구현은 원하는 방식으로 뺄셈을 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;offsetdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 성공적으로 뺄 수 있는지 확인하려면 금액 구현 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4678787b4640ffb19d6e0e843874079614a6c590" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;offsettime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 양 구현은 원하는 방식으로 뺄셈을 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;offsettime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 성공적으로 뺄 수 있는지 확인하려면 금액 구현 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="76574227f521761bf4b8e3a70c0d6e0fd5a48f77" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;year#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 양 구현은 원하는 방식으로 뺄셈을 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;year#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 성공적으로 뺄 수 있는지 확인하려면 금액 구현 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6a606f8f745f376a82afb4bf3b9cfaaf4b5e04e7" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;yearmonth#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 양 구현은 원하는 방식으로 뺄셈을 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;yearmonth#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 성공적으로 뺄 수 있는지 확인하려면 금액 구현 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fb583766018df0a002e06f9ff6b85c52184760b5" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;zoneddatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; &lt;/a&gt; 을 호출하여 계산이 amount 객체에 위임됩니다 . 양 구현은 원하는 방식으로 뺄셈을 자유롭게 구현할 수 있지만 일반적으로 &lt;a href=&quot;zoneddatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 성공적으로 뺄 수 있는지 확인하려면 금액 구현 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1cd315c0454258ad07a59eebbecac5190d877bf3" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;../temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;DAYS&lt;/code&gt;, &lt;code&gt;WEEKS&lt;/code&gt;, &lt;code&gt;MONTHS&lt;/code&gt;, &lt;code&gt;YEARS&lt;/code&gt;, &lt;code&gt;DECADES&lt;/code&gt;, &lt;code&gt;CENTURIES&lt;/code&gt;, &lt;code&gt;MILLENNIA&lt;/code&gt; and &lt;code&gt;ERAS&lt;/code&gt; should be supported by all implementations. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; &lt;/a&gt; 에 대해이 방법으로 계산이 구현됩니다 . 단위의 &lt;code&gt;DAYS&lt;/code&gt; , &lt;code&gt;WEEKS&lt;/code&gt; , &lt;code&gt;MONTHS&lt;/code&gt; , &lt;code&gt;YEARS&lt;/code&gt; , &lt;code&gt;DECADES&lt;/code&gt; , &lt;code&gt;CENTURIES&lt;/code&gt; , &lt;code&gt;MILLENNIA&lt;/code&gt; 와 &lt;code&gt;ERAS&lt;/code&gt; 모든 구현에 의해 지원 될 필요가 있습니다. 다른 &lt;code&gt;ChronoUnit&lt;/code&gt; 값은 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="2c40729f65e17fa53bc32e56e2b68deecbce35f4" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;DAYS&lt;/code&gt;, &lt;code&gt;WEEKS&lt;/code&gt;, &lt;code&gt;MONTHS&lt;/code&gt;, &lt;code&gt;YEARS&lt;/code&gt;, &lt;code&gt;DECADES&lt;/code&gt;, &lt;code&gt;CENTURIES&lt;/code&gt;, &lt;code&gt;MILLENNIA&lt;/code&gt; and &lt;code&gt;ERAS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; &lt;/a&gt; 에 대해이 방법으로 계산이 구현됩니다 . 단위의 &lt;code&gt;DAYS&lt;/code&gt; , &lt;code&gt;WEEKS&lt;/code&gt; , &lt;code&gt;MONTHS&lt;/code&gt; , &lt;code&gt;YEARS&lt;/code&gt; , &lt;code&gt;DECADES&lt;/code&gt; , &lt;code&gt;CENTURIES&lt;/code&gt; , &lt;code&gt;MILLENNIA&lt;/code&gt; 와 &lt;code&gt;ERAS&lt;/code&gt; 지원됩니다. 다른 &lt;code&gt;ChronoUnit&lt;/code&gt; 값은 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="19b9a5d378177e9c9b3a71840adcb16f0f886bde" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;MONTHS&lt;/code&gt;, &lt;code&gt;YEARS&lt;/code&gt;, &lt;code&gt;DECADES&lt;/code&gt;, &lt;code&gt;CENTURIES&lt;/code&gt;, &lt;code&gt;MILLENNIA&lt;/code&gt; and &lt;code&gt;ERAS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; &lt;/a&gt; 에 대해이 방법으로 계산이 구현됩니다 . 단위의 &lt;code&gt;MONTHS&lt;/code&gt; , &lt;code&gt;YEARS&lt;/code&gt; , &lt;code&gt;DECADES&lt;/code&gt; , &lt;code&gt;CENTURIES&lt;/code&gt; , &lt;code&gt;MILLENNIA&lt;/code&gt; 와 &lt;code&gt;ERAS&lt;/code&gt; 지원됩니다. 다른 &lt;code&gt;ChronoUnit&lt;/code&gt; 값은 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="e230aa95d014e34ceda792a8275bb6a6a1650561" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;NANOS&lt;/code&gt;, &lt;code&gt;MICROS&lt;/code&gt;, &lt;code&gt;MILLIS&lt;/code&gt;, &lt;code&gt;SECONDS&lt;/code&gt;, &lt;code&gt;MINUTES&lt;/code&gt;, &lt;code&gt;HOURS&lt;/code&gt; and &lt;code&gt;HALF_DAYS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; &lt;/a&gt; 에 대해이 방법으로 계산이 구현됩니다 . 단위는 &lt;code&gt;NANOS&lt;/code&gt; , &lt;code&gt;MICROS&lt;/code&gt; 은 , &lt;code&gt;MILLIS&lt;/code&gt; , &lt;code&gt;SECONDS&lt;/code&gt; , &lt;code&gt;MINUTES&lt;/code&gt; , &lt;code&gt;HOURS&lt;/code&gt; 및 &lt;code&gt;HALF_DAYS&lt;/code&gt; 이 지원됩니다. 다른 &lt;code&gt;ChronoUnit&lt;/code&gt; 값은 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="1507d23c8a6f8c72a31bd26e1e7810e4719336ab" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;NANOS&lt;/code&gt;, &lt;code&gt;MICROS&lt;/code&gt;, &lt;code&gt;MILLIS&lt;/code&gt;, &lt;code&gt;SECONDS&lt;/code&gt;, &lt;code&gt;MINUTES&lt;/code&gt;, &lt;code&gt;HOURS&lt;/code&gt; and &lt;code&gt;HALF_DAYS&lt;/code&gt;, &lt;code&gt;DAYS&lt;/code&gt;, &lt;code&gt;WEEKS&lt;/code&gt;, &lt;code&gt;MONTHS&lt;/code&gt;, &lt;code&gt;YEARS&lt;/code&gt;, &lt;code&gt;DECADES&lt;/code&gt;, &lt;code&gt;CENTURIES&lt;/code&gt;, &lt;code&gt;MILLENNIA&lt;/code&gt; and &lt;code&gt;ERAS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; &lt;/a&gt; 에 대해이 방법으로 계산이 구현됩니다 . 단위는 &lt;code&gt;NANOS&lt;/code&gt; , &lt;code&gt;MICROS&lt;/code&gt; 는 , &lt;code&gt;MILLIS&lt;/code&gt; , &lt;code&gt;SECONDS&lt;/code&gt; , &lt;code&gt;MINUTES&lt;/code&gt; , &lt;code&gt;HOURS&lt;/code&gt; 및 &lt;code&gt;HALF_DAYS&lt;/code&gt; 은 , &lt;code&gt;DAYS&lt;/code&gt; , &lt;code&gt;WEEKS&lt;/code&gt; , &lt;code&gt;MONTHS&lt;/code&gt; , &lt;code&gt;YEARS&lt;/code&gt; , &lt;code&gt;DECADES&lt;/code&gt; , &lt;code&gt;CENTURIES&lt;/code&gt; , &lt;code&gt;MILLENNIA&lt;/code&gt; 및 &lt;code&gt;ERAS&lt;/code&gt; 지원된다. 다른 &lt;code&gt;ChronoUnit&lt;/code&gt; 값은 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="a944bb9e5a6fb6bb71bb5754d803740edba2e7e6" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;NANOS&lt;/code&gt;, &lt;code&gt;MICROS&lt;/code&gt;, &lt;code&gt;MILLIS&lt;/code&gt;, &lt;code&gt;SECONDS&lt;/code&gt;, &lt;code&gt;MINUTES&lt;/code&gt;, &lt;code&gt;HOURS&lt;/code&gt;, &lt;code&gt;HALF_DAYS&lt;/code&gt; and &lt;code&gt;DAYS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; &lt;/a&gt; 에 대해이 방법으로 계산이 구현됩니다 . 단위는 &lt;code&gt;NANOS&lt;/code&gt; , &lt;code&gt;MICROS&lt;/code&gt; 은 , &lt;code&gt;MILLIS&lt;/code&gt; , &lt;code&gt;SECONDS&lt;/code&gt; , &lt;code&gt;MINUTES&lt;/code&gt; , &lt;code&gt;HOURS&lt;/code&gt; , &lt;code&gt;HALF_DAYS&lt;/code&gt; 과 &lt;code&gt;DAYS&lt;/code&gt; 지원됩니다. 다른 &lt;code&gt;ChronoUnit&lt;/code&gt; 값은 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="1d36fea63293e397176d95e77b5737ce1cf421eb" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;YEARS&lt;/code&gt;, &lt;code&gt;DECADES&lt;/code&gt;, &lt;code&gt;CENTURIES&lt;/code&gt;, &lt;code&gt;MILLENNIA&lt;/code&gt; and &lt;code&gt;ERAS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; &lt;/a&gt; 에 대해이 방법으로 계산이 구현됩니다 . 단위의 &lt;code&gt;YEARS&lt;/code&gt; , &lt;code&gt;DECADES&lt;/code&gt; , &lt;code&gt;CENTURIES&lt;/code&gt; , &lt;code&gt;MILLENNIA&lt;/code&gt; 와 &lt;code&gt;ERAS&lt;/code&gt; 지원됩니다. 다른 &lt;code&gt;ChronoUnit&lt;/code&gt; 값은 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="de396f35f1beb4dec84fd96c5c0bc128000c53b5" translate="yes" xml:space="preserve">
          <source>The calculation is performed using the ISO calendar system. If necessary, the input date will be converted to ISO.</source>
          <target state="translated">계산은 ISO 캘린더 시스템을 사용하여 수행됩니다. 필요한 경우 입력 날짜가 ISO로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="5c8b7a9e75b18aac11374fa27a65860ce2cba5ee" translate="yes" xml:space="preserve">
          <source>The calculation is performed using the chronology of this date. If necessary, the input date will be converted to match.</source>
          <target state="translated">이 날짜의 연대기를 사용하여 계산이 수행됩니다. 필요한 경우 입력 날짜가 일치하도록 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="a18a3925fc70243cd9c7e703ff805ee959f8b1b2" translate="yes" xml:space="preserve">
          <source>The calculation is proleptic - applying the same rules into the far future and far past. This is historically inaccurate, but is correct for the ISO-8601 standard.</source>
          <target state="translated">먼 미래와 먼 과거에 같은 규칙을 적용하여 계산이 어렵습니다. 역사적으로 부정확하지만 ISO-8601 표준에 맞습니다.</target>
        </trans-unit>
        <trans-unit id="a77397163b78a04fe04dd941420d69ad173ac41a" translate="yes" xml:space="preserve">
          <source>The calculation operates as follows. First, the chronology of the temporal is checked to ensure it is ISO chronology or null. Second, if the months are zero, the years are added if non-zero, otherwise the combination of years and months is added if non-zero. Finally, any days are added.</source>
          <target state="translated">계산은 다음과 같이 작동합니다. 먼저, 시간적 연대기를 확인하여 ISO 연대기 또는 null인지 확인합니다. 둘째, 월이 0이면 연도가 0이 아닌 경우 추가되고, 그렇지 않으면 연도 및 월의 조합이 0이 아닌 경우 추가됩니다. 마지막으로 모든 요일이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="c263030716ce91a128cf8f90575be9c8fd437b13" translate="yes" xml:space="preserve">
          <source>The calculation operates as follows. First, the chronology of the temporal is checked to ensure it is ISO chronology or null. Second, if the months are zero, the years are subtracted if non-zero, otherwise the combination of years and months is subtracted if non-zero. Finally, any days are subtracted.</source>
          <target state="translated">계산은 다음과 같이 작동합니다. 먼저, 시간적 연대기를 확인하여 ISO 연대기 또는 null인지 확인합니다. 둘째, 월이 0이면 0이 아닌 경우 연도를 빼고, 0이 아닌 경우 연도 및 월의 조합을 뺍니다. 마지막으로 모든 요일을 뺍니다.</target>
        </trans-unit>
        <trans-unit id="fdb1636ed39215073f821c5aa121f59d7ee4d527" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two date-times. For example, the amount in months between 2012-06-15T00:00 and 2012-08-14T23:59 will only be one month as it is one minute short of two months.</source>
          <target state="translated">계산은 두 날짜-시간 사이의 전체 단위 수를 나타내는 정수를 반환합니다. 예를 들어 2012-06-15T00 : 00과 2012-08-14T23 : 59 사이의 월 단위 금액은 2 개월보다 1 분 짧으므로 1 개월 만됩니다.</target>
        </trans-unit>
        <trans-unit id="ec9af07e807db86ba031ee502751cd0c38c69a71" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two date-times. For example, the amount in months between 2012-06-15T00:00Z and 2012-08-14T23:59Z will only be one month as it is one minute short of two months.</source>
          <target state="translated">계산은 두 날짜-시간 사이의 전체 단위 수를 나타내는 정수를 반환합니다. 예를 들어, 2012-06-15T00 : 00Z와 2012-08-14T23 : 59Z 사이의 월 단위 금액은 2 개월보다 1 분 짧으므로 1 개월 만됩니다.</target>
        </trans-unit>
        <trans-unit id="2a40c5deaf847238353378cb61b47570a274c9ac" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two dates. For example, the amount in months between 2012-06-15 and 2012-08-14 will only be one month as it is one day short of two months.</source>
          <target state="translated">계산은 두 날짜 사이의 완전한 단위 수를 나타내는 정수를 반환합니다. 예를 들어, 2012-06-15와 2012-08-14 사이의 월 단위 금액은 하루가 2 개월 부족하기 때문에 한 달만됩니다.</target>
        </trans-unit>
        <trans-unit id="4e4af59e77647dd6907c8a296e775e0a0d836e8c" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two temporals. For example, the amount in hours between the times 11:30 and 13:29 will only be one hour as it is one minute short of two hours.</source>
          <target state="translated">계산은 두 시간 사이의 완전한 단위 수를 나타내는 정수를 반환합니다. 예를 들어, 11:30과 13:29 사이의 시간 단위 시간은 2 시간보다 1 분 짧으므로 1 시간 만됩니다.</target>
        </trans-unit>
        <trans-unit id="e6909d5ca1c4c3ff219ad8a02bf77193f0655754" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two times. For example, the amount in hours between 11:30 and 13:29 will only be one hour as it is one minute short of two hours.</source>
          <target state="translated">이 계산은 두 번의 완전한 단위 수를 나타내는 정수를 반환합니다. 예를 들어, 11:30과 13:29 사이의 시간 단위 시간은 2 시간보다 1 분 짧으므로 1 시간입니다.</target>
        </trans-unit>
        <trans-unit id="c9e0270c645839bc297b8d8461abd213cdea0773" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two times. For example, the amount in hours between 11:30Z and 13:29Z will only be one hour as it is one minute short of two hours.</source>
          <target state="translated">이 계산은 두 번의 완전한 단위 수를 나타내는 정수를 반환합니다. 예를 들어, 11 : 30Z에서 13 : 29Z 사이의 시간 단위 시간은 2 시간보다 1 분 짧으므로 1 시간 만됩니다.</target>
        </trans-unit>
        <trans-unit id="b40e1be73246aecc1325d0ab24225f79366c3cea" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two year-months. For example, the amount in decades between 2012-06 and 2032-05 will only be one decade as it is one month short of two decades.</source>
          <target state="translated">이 계산은 2 년 간의 완전한 단위 수를 나타내는 정수를 반환합니다. 예를 들어, 2012-06 년에서 2032-05 년 사이에 수십 년 동안의 금액은 20 년보다 한 달 짧으므로 10 년에 불과합니다.</target>
        </trans-unit>
        <trans-unit id="ccc4ff471f21d9f7ba0907b139abcc2e7896bd76" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two years. For example, the amount in decades between 2012 and 2031 will only be one decade as it is one year short of two decades.</source>
          <target state="translated">이 계산은 2 년 사이의 전체 단위 수를 나타내는 정수를 반환합니다. 예를 들어, 2012 년에서 2031 년 사이에 수십 년 동안의 금액은 20 년보다 1 년 짧으므로 10 년에 불과합니다.</target>
        </trans-unit>
        <trans-unit id="58e5423c597dc35b389e5d938496ce0de4d9778f" translate="yes" xml:space="preserve">
          <source>The calculation rolls around the end of the week from Sunday to Monday. The specified period may be negative.</source>
          <target state="translated">계산은 일요일부터 월요일까지 매주 끝납니다. 지정된 기간이 음수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="668d9a3e3fa4c9967805f1a3678a36f85651608a" translate="yes" xml:space="preserve">
          <source>The calculation rolls around the end of the year from December to January. The specified period may be negative.</source>
          <target state="translated">12 월에서 1 월까지 연말에 계산이 시작됩니다. 지정된 기간이 음수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c563b5a653779db71d45290b934e9ad07e26260f" translate="yes" xml:space="preserve">
          <source>The calculation rolls around the start of the year from January to December. The specified period may be negative.</source>
          <target state="translated">계산은 1 월부터 12 월까지 연중 시작됩니다. 지정된 기간이 음수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7212e045d02e1d66ae352530c884f838bcd75d4" translate="yes" xml:space="preserve">
          <source>The calculation rolls around the start of the year from Monday to Sunday. The specified period may be negative.</source>
          <target state="translated">계산은 월요일부터 일요일까지 연중 시작됩니다. 지정된 기간이 음수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec7c17cc8ccefb501b5beef5a7c7ae8a3150c74f" translate="yes" xml:space="preserve">
          <source>The calculation will add the seconds, then nanos. Only non-zero amounts will be added.</source>
          <target state="translated">계산에 초와 나노가 추가됩니다. 0이 아닌 금액 만 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="16e7549a22a253997bf53ac9cf0c75a51b0bbc3b" translate="yes" xml:space="preserve">
          <source>The calculation will subtract the seconds, then nanos. Only non-zero amounts will be added.</source>
          <target state="translated">계산은 초를 뺀 다음 나노를 뺍니다. 0이 아닌 금액 만 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="82a4f3f7a39babbf366ad326d064056956101ac1" translate="yes" xml:space="preserve">
          <source>The calendar field values can be set by calling the &lt;code&gt;set&lt;/code&gt; methods. Any field values set in a &lt;code&gt;Calendar&lt;/code&gt; will not be interpreted until it needs to calculate its time value (milliseconds from the Epoch) or values of the calendar fields. Calling the &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;getTimeInMillis&lt;/code&gt;, &lt;code&gt;getTime&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;roll&lt;/code&gt; involves such calculation.</source>
          <target state="translated">달력 필드 값은 &lt;code&gt;set&lt;/code&gt; 메소드 를 호출하여 설정할 수 있습니다 . &lt;code&gt;Calendar&lt;/code&gt; 설정된 모든 필드 값 은 시간 값 (Epoch에서 밀리 초) 또는 달력 필드 값을 계산해야 할 때까지 해석되지 않습니다. &lt;code&gt;get&lt;/code&gt; , &lt;code&gt;getTimeInMillis&lt;/code&gt; , &lt;code&gt;getTime&lt;/code&gt; , &lt;code&gt;add&lt;/code&gt; 및 &lt;code&gt;roll&lt;/code&gt; 호출 에는 이러한 계산이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="8dfa36ab7bd611cdb8f405d4e9a617cb059bfbc2" translate="yes" xml:space="preserve">
          <source>The calendar field values for the currently set time for this calendar.</source>
          <target state="translated">이 달력에 대해 현재 설정된 시간에 대한 달력 필드 값입니다.</target>
        </trans-unit>
        <trans-unit id="865d4b04e7b37220faeadf26dcf5654c73ef78a9" translate="yes" xml:space="preserve">
          <source>The calendar field values for the currently set time for this calendar. This is an array of &lt;code&gt;FIELD_COUNT&lt;/code&gt; integers, with index values &lt;code&gt;ERA&lt;/code&gt; through &lt;code&gt;DST_OFFSET&lt;/code&gt;.</source>
          <target state="translated">이 캘린더에 현재 설정된 시간의 캘린더 필드 값입니다. 인덱스 값이 &lt;code&gt;ERA&lt;/code&gt; ~ &lt;code&gt;DST_OFFSET&lt;/code&gt; 인 &lt;code&gt;FIELD_COUNT&lt;/code&gt; 정수 의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="77dba84a172780be492cbe77a232ee1219c79321" translate="yes" xml:space="preserve">
          <source>The calendar fields can be changed using three methods: &lt;code&gt;set()&lt;/code&gt;, &lt;code&gt;add()&lt;/code&gt;, and &lt;code&gt;roll()&lt;/code&gt;.</source>
          <target state="translated">달력 필드는 &lt;code&gt;set()&lt;/code&gt; , &lt;code&gt;add()&lt;/code&gt; 및 &lt;code&gt;roll()&lt;/code&gt; 세 가지 방법을 사용하여 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="93ce9ec5e026f012a845bb7044250795eb5e3784" translate="yes" xml:space="preserve">
          <source>The calendar system name will be output during a format. If the chronology cannot be obtained then an exception will be thrown.</source>
          <target state="translated">달력 시스템 이름은 형식 중에 출력됩니다. 연대기를 얻을 수 없으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="962278d560a441566052e9e275cc29395fdebae6" translate="yes" xml:space="preserve">
          <source>The calendar type</source>
          <target state="translated">캘린더 유형</target>
        </trans-unit>
        <trans-unit id="98eaf2920920ec6aeadc95b5dbd8a45b16626887" translate="yes" xml:space="preserve">
          <source>The calendar type is an identifier defined by the &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specification. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of(java.lang.String)&quot;&gt;&lt;code&gt;Chronology.of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">달력 유형은 &lt;em&gt;LDML (Unicode Locale Data Markup Language)&lt;/em&gt; 사양에 정의 된 식별자 입니다. 이는 조회하는데 사용될 수있다 &lt;code&gt;Chronology&lt;/code&gt; 사용 &lt;a href=&quot;chronology#of(java.lang.String)&quot;&gt; &lt;code&gt;Chronology.of(String)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ffa7966fe840f77dd8ac98c4a6ac666feca3d8f6" translate="yes" xml:space="preserve">
          <source>The calendar type is an identifier defined by the &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specification. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of(java.lang.String)&quot;&gt;&lt;code&gt;Chronology.of(String)&lt;/code&gt;&lt;/a&gt;. It can also be used as part of a locale, accessible via &lt;a href=&quot;../../util/locale#getUnicodeLocaleType(java.lang.String)&quot;&gt;&lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt;&lt;/a&gt; with the key 'ca'.</source>
          <target state="translated">달력 유형은 &lt;em&gt;LDML (Unicode Locale Data Markup Language)&lt;/em&gt; 사양에 정의 된 식별자 입니다. 이는 조회하는데 사용될 수있다 &lt;code&gt;Chronology&lt;/code&gt; 사용 &lt;a href=&quot;chronology#of(java.lang.String)&quot;&gt; &lt;code&gt;Chronology.of(String)&lt;/code&gt; &lt;/a&gt; . 또한 'ca'키를 사용하여 &lt;a href=&quot;../../util/locale#getUnicodeLocaleType(java.lang.String)&quot;&gt; &lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt; &lt;/a&gt; 을 통해 액세스 할 수있는 로케일의 일부로 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4446eadd3978a37be2e9479e866319a200f662b6" translate="yes" xml:space="preserve">
          <source>The calendar type is an identifier defined by the &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specification. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;Chronology.of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">달력 유형은 &lt;em&gt;LDML (Unicode Locale Data Markup Language)&lt;/em&gt; 사양으로 정의 된 식별자 입니다. 이는 조회하는데 사용될 수있다 &lt;code&gt;Chronology&lt;/code&gt; 사용 &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;Chronology.of(String)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9ed929db1a5de6f998e10698419063ed967ca06" translate="yes" xml:space="preserve">
          <source>The calendar type is an identifier defined by the &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specification. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;Chronology.of(String)&lt;/code&gt;&lt;/a&gt;. It can also be used as part of a locale, accessible via &lt;a href=&quot;../../util/locale#getUnicodeLocaleType-java.lang.String-&quot;&gt;&lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt;&lt;/a&gt; with the key 'ca'.</source>
          <target state="translated">달력 유형은 &lt;em&gt;LDML (Unicode Locale Data Markup Language)&lt;/em&gt; 사양으로 정의 된 식별자 입니다. 이는 조회하는데 사용될 수있다 &lt;code&gt;Chronology&lt;/code&gt; 사용 &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;Chronology.of(String)&lt;/code&gt; &lt;/a&gt; . 또한 'ca'키가있는 &lt;a href=&quot;../../util/locale#getUnicodeLocaleType-java.lang.String-&quot;&gt; &lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt; &lt;/a&gt; 을 통해 액세스 가능한 로케일의 일부로 사용될 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5fc183cf3291b70fe7d13ce84678bde8c535e01b" translate="yes" xml:space="preserve">
          <source>The calendar type is an identifier defined by the CLDR and &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specifications to uniquely identification a calendar. The &lt;code&gt;getCalendarType&lt;/code&gt; is the concatenation of the CLDR calendar type and the variant, if applicable, is appended separated by &quot;-&quot;. The calendar type is used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">캘린더 유형은 캘린더 를 고유하게 식별하기 위해 CLDR 및 &lt;em&gt;LDML (Unicode Locale Data Markup Language)&lt;/em&gt; 사양으로 정의 된 식별자입니다. &lt;code&gt;getCalendarType&lt;/code&gt; 는 CLDR 캘린더 형식 및 변형, 적용 가능한 경우, 추가로 분리된다의 연결은 &quot;-&quot;. 달력 유형은 &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;of(String)&lt;/code&gt; &lt;/a&gt; 사용 하여 &lt;code&gt;Chronology&lt;/code&gt; 를 조회하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ecf49c80d144080449d596a16686f8ca5914884c" translate="yes" xml:space="preserve">
          <source>The calendar type is an identifier defined by the CLDR and &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specifications to uniquely identify a calendar. The &lt;code&gt;getCalendarType&lt;/code&gt; is the concatenation of the CLDR calendar type and the variant, if applicable, is appended separated by &quot;-&quot;. The calendar type is used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;#of(java.lang.String)&quot;&gt;&lt;code&gt;of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">달력 유형은 달력 을 고유하게 식별하기 위해 CLDR 및 &lt;em&gt;유니 코드 LDML (Locale Data Markup Language)&lt;/em&gt; 사양에서 정의한 식별자 입니다. &lt;code&gt;getCalendarType&lt;/code&gt; 는 CLDR 캘린더 형식 및 변형, 적용 가능한 경우, 추가로 분리된다의 연결은 &quot;-&quot;. 달력 유형은 &lt;a href=&quot;#of(java.lang.String)&quot;&gt; &lt;code&gt;of(String)&lt;/code&gt; &lt;/a&gt; 사용 하여 &lt;code&gt;Chronology&lt;/code&gt; 를 조회하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b6a0060fcedfd8a68377b3d1eb2b5aba06d7d975" translate="yes" xml:space="preserve">
          <source>The call</source>
          <target state="translated">호출</target>
        </trans-unit>
        <trans-unit id="bfa957c4639eb6b0b522562bf5068bd4ec5c04a3" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;System.exit(n)&lt;/code&gt; is effectively equivalent to the call:</source>
          <target state="translated">&lt;code&gt;System.exit(n)&lt;/code&gt; 호출 은 사실상 호출과 같습니다.</target>
        </trans-unit>
        <trans-unit id="76511f462f4300cf033c5338feb8d0cddaa72576" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;System.gc()&lt;/code&gt; is effectively equivalent to the call:</source>
          <target state="translated">&lt;code&gt;System.gc()&lt;/code&gt; 호출 은 사실상 다음 호출과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b690e13d2eb683913812a8e26357b9092be90125" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;System.load(name)&lt;/code&gt; is effectively equivalent to the call:</source>
          <target state="translated">&lt;code&gt;System.load(name)&lt;/code&gt; 호출 은 사실상 호출과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1eb7ec99c5609280be9a3083224b7fba9909e0ca" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;System.loadLibrary(name)&lt;/code&gt; is effectively equivalent to the call</source>
          <target state="translated">&lt;code&gt;System.loadLibrary(name)&lt;/code&gt; 호출 은 사실상 호출과 같습니다.</target>
        </trans-unit>
        <trans-unit id="44ca22e66f70469f3b06955ad110de6c45f398d4" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;System.runFinalization()&lt;/code&gt; is effectively equivalent to the call:</source>
          <target state="translated">&lt;code&gt;System.runFinalization()&lt;/code&gt; 호출 은 사실상 다음 호출과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e36a0559239de87755b7f3e15a71516f5fc282f3" translate="yes" xml:space="preserve">
          <source>The call spuriously (that is, for no reason) returns.</source>
          <target state="translated">가짜 호출 (즉, 아무 이유없이)이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d4d15ed9ec3b7821f87167a2d4c1dc15a7458567" translate="yes" xml:space="preserve">
          <source>The call to &lt;code&gt;reset&lt;/code&gt; may throw an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reset&lt;/code&gt; 호출 하면 &lt;code&gt;IOException&lt;/code&gt; 이 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="51a9739eb1d472912d696c50422ab32a98c1f94d" translate="yes" xml:space="preserve">
          <source>The callback is sent during the processing of the snippet and the Snippet and the state as a whole are not stable. No calls to change system state (including Snippet state) should be made. Queries of Snippet may be made except to &lt;a href=&quot;snippet#id()&quot;&gt;&lt;code&gt;Snippet.id()&lt;/code&gt;&lt;/a&gt;. No calls on the &lt;code&gt;JShell&lt;/code&gt; instance may be made from the callback, except to &lt;a href=&quot;jshell#status(jdk.jshell.Snippet)&quot;&gt;&lt;code&gt;status(Snippet)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">스 니펫을 처리하는 동안 콜백이 전송되고 스 니펫과 상태가 전체적으로 안정적이지 않습니다. 시스템 상태 (스 니펫 상태 포함)를 변경하기 위해 호출해서는 안됩니다. &lt;a href=&quot;snippet#id()&quot;&gt; &lt;code&gt;Snippet.id()&lt;/code&gt; &lt;/a&gt; 제외하고 Snippet 쿼리를 만들 수 있습니다 . &lt;a href=&quot;jshell#status(jdk.jshell.Snippet)&quot;&gt; &lt;code&gt;status(Snippet)&lt;/code&gt; &lt;/a&gt; 제외하고는 콜백에서 &lt;code&gt;JShell&lt;/code&gt; 인스턴스를 호출 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="4736c2783a9c6145fee79a2ca2122ded0aad72e0" translate="yes" xml:space="preserve">
          <source>The callback is sent during the processing of the snippet, the JShell state is not stable. No calls whatsoever on the &lt;code&gt;JShell&lt;/code&gt; instance may be made from the callback.</source>
          <target state="translated">스 니펫을 처리하는 동안 콜백이 전송되며 JShell 상태가 안정적이지 않습니다. 콜백에서 &lt;code&gt;JShell&lt;/code&gt; 인스턴스 에 대한 호출을 수행 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="371a9227bc28c91038c213842aa2dbe1d27efd69" translate="yes" xml:space="preserve">
          <source>The called method must be a non-native Java programming language method. Forcing return on a thread with only one frame on the stack causes the thread to exit when resumed.</source>
          <target state="translated">호출 된 메소드는 비원시 Java 프로그래밍 언어 메소드 여야합니다. 스택에 프레임이 하나만있는 스레드에서 강제로 리턴하면 스레드가 재개 될 때 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="318e87ac7cadb4f840a1d335aa357e0736d9869c" translate="yes" xml:space="preserve">
          <source>The callee will read all the &lt;a href=&quot;../transform/source&quot;&gt;&lt;code&gt;Source&lt;/code&gt;&lt;/a&gt;s and combine them into a single schema. The exact semantics of the combination depends on the schema language that this &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; object is created for.</source>
          <target state="translated">피 호출자는 모든 &lt;a href=&quot;../transform/source&quot;&gt; &lt;code&gt;Source&lt;/code&gt; &lt;/a&gt; 를 읽고 단일 스키마로 결합합니다. 조합의 정확한 의미는이 &lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt; 객체가 생성 되는 스키마 언어에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="768c012ad804fb9a864a4db4525b259baaf8487d" translate="yes" xml:space="preserve">
          <source>The caller can use the result to determine if it should fallback to another mechanism to read the keys.</source>
          <target state="translated">호출자는 결과를 사용하여 키를 읽는 다른 메커니즘으로 폴백해야하는지 여부를 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d96dcf01d9183b3af787b40b613a5ceb1004752a" translate="yes" xml:space="preserve">
          <source>The caller initiating the security context must determine the appropriate channel binding values to set in the GSSContext object. The acceptor must provide an identical binding in order to validate that received tokens possess correct channel-related characteristics.</source>
          <target state="translated">보안 컨텍스트를 시작하는 호출자는 GSSContext 개체에 설정할 적절한 채널 바인딩 값을 결정해야합니다. 수락자는 수신 된 토큰이 올바른 채널 관련 특성을 보유하고 있는지 확인하기 위해 동일한 바인딩을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="b977e67614620619d4c2948e2fd09a45fa29cdbf" translate="yes" xml:space="preserve">
          <source>The caller lookup object must have &lt;a href=&quot;methodhandles.lookup#PRIVATE&quot;&gt;&lt;code&gt;PRIVATE&lt;/code&gt;&lt;/a&gt; access. (This is because an application intending to share intra-module access using &lt;a href=&quot;methodhandles.lookup#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt; alone will inadvertently also share deep reflection to its own module.)</source>
          <target state="translated">호출자 조회 개체에는 &lt;a href=&quot;methodhandles.lookup#PRIVATE&quot;&gt; &lt;code&gt;PRIVATE&lt;/code&gt; &lt;/a&gt; 액세스 권한이 있어야합니다 . (이것은 &lt;a href=&quot;methodhandles.lookup#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt; 만 사용하여 모듈 내 액세스를 공유하려는 응용 프로그램 이 실수로 자체 모듈에 대한 깊은 반사를 공유하기 때문입니다.)</target>
        </trans-unit>
        <trans-unit id="b75bc95ca53a2fee3159432f8861419fa85c527a" translate="yes" xml:space="preserve">
          <source>The caller lookup object must have &lt;a href=&quot;methodhandles.lookup#hasFullPrivilegeAccess()&quot;&gt;full privilege access&lt;/a&gt;. Specifically:</source>
          <target state="translated">호출자 조회 개체에는 &lt;a href=&quot;methodhandles.lookup#hasFullPrivilegeAccess()&quot;&gt;전체 권한 액세스 권한이&lt;/a&gt; 있어야합니다 . 구체적으로 특별히:</target>
        </trans-unit>
        <trans-unit id="93876d97281b8ec8406ac686ba5dd5f2c07cce6e" translate="yes" xml:space="preserve">
          <source>The caller lookup object must have the &lt;a href=&quot;methodhandles.lookup#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt; lookup mode. (This is because otherwise there would be no way to ensure the original lookup creator was a member of any particular module, and so any subsequent checks for readability and qualified exports would become ineffective.)</source>
          <target state="translated">호출자 조회 개체에는 &lt;a href=&quot;methodhandles.lookup#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt; 조회 모드 가 있어야 합니다. (그렇지 않으면 원래 조회 작성자가 특정 모듈의 구성원인지 확인할 수있는 방법이 없으므로 가독성 및 적격 내보내기에 대한 후속 검사가 효과가 없게되기 때문입니다.)</target>
        </trans-unit>
        <trans-unit id="e0feb3d7dc8972a6d68bd6753ebf291ec5f284a0" translate="yes" xml:space="preserve">
          <source>The caller must close the recording when access to the data is no longer needed.</source>
          <target state="translated">데이터에 대한 액세스가 더 이상 필요하지 않으면 발신자는 녹음을 닫아야합니다.</target>
        </trans-unit>
        <trans-unit id="d04140412c1fb225a44054ba343d90b9017cec04" translate="yes" xml:space="preserve">
          <source>The caller must have permission to access all of the requested Credentials, or a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown.</source>
          <target state="translated">호출자는 요청 된 모든 자격 증명에 액세스 할 수있는 권한이 있어야합니다. 그렇지 않으면 &lt;code&gt;SecurityException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="aa92adff6514811ab419f1227d3ed5e4ce614299" translate="yes" xml:space="preserve">
          <source>The caller principal must be an owner of the ACL in order to invoke this method.</source>
          <target state="translated">이 메소드를 호출하려면 호출자 프린시 펄이 ACL의 소유자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="9af10b071d26e95fd329201957fb34bf923bd4a9" translate="yes" xml:space="preserve">
          <source>The caller should not make any changes to the object returned: their effect on the context is undefined. The environment of this context may be changed using &lt;code&gt;addToEnvironment()&lt;/code&gt; and &lt;code&gt;removeFromEnvironment()&lt;/code&gt;.</source>
          <target state="translated">호출자는 반환 된 객체를 변경해서는 안됩니다. 컨텍스트에 미치는 영향은 정의되어 있지 않습니다. 이 컨텍스트의 환경은 &lt;code&gt;addToEnvironment()&lt;/code&gt; 및 &lt;code&gt;removeFromEnvironment()&lt;/code&gt; 사용하여 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8cd6ba60b3eac7216be485ec7f97649dd91f55ac" translate="yes" xml:space="preserve">
          <source>The caller type must provides as least enough arguments, and of the correct type, to satisfy the target's requirement for positional arguments before the trailing array argument. Thus, the caller must supply, at a minimum, &lt;code&gt;N-1&lt;/code&gt; arguments, where &lt;code&gt;N&lt;/code&gt; is the arity of the target. Also, there must exist conversions from the incoming arguments to the target's arguments. As with other uses of plain &lt;code&gt;invoke&lt;/code&gt;, if these basic requirements are not fulfilled, a &lt;code&gt;WrongMethodTypeException&lt;/code&gt; may be thrown.</source>
          <target state="translated">호출자 유형은 후행 배열 인수 앞에 위치 인수에 대한 대상의 요구 사항을 충족시키기에 충분한 인수 및 올바른 유형을 제공해야합니다. 따라서 호출자는 최소한 &lt;code&gt;N-1&lt;/code&gt; 개의 인수를 제공해야합니다 . 여기서 &lt;code&gt;N&lt;/code&gt; 은 대상의 arity입니다. 또한 수신 인수에서 대상 인수로의 변환이 있어야합니다. 다른 일반 &lt;code&gt;invoke&lt;/code&gt; 사용과 마찬가지로 이러한 기본 요구 사항이 충족되지 않으면 &lt;code&gt;WrongMethodTypeException&lt;/code&gt; 이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e678c4c34a7e5ad339f2ef0d335da6e8fc8e199b" translate="yes" xml:space="preserve">
          <source>The calling &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; factory method calls this method on the &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instance used for its current invocation, not on the instance used in the invocation that originally loaded the resource bundle.</source>
          <target state="translated">호출 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 팩토리 메소드는 원래 자원 번들을로드 한 호출에 사용 된 인스턴스가 아니라 현재 호출에 사용 된 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 인스턴스 에서이 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="295d4fb4a3cfad392bf258af4796a9b85656d164" translate="yes" xml:space="preserve">
          <source>The calling application sees the authentication process as a single operation. However, the authentication process within the &lt;code&gt;LoginModule&lt;/code&gt; proceeds in two distinct phases. In the first phase, the LoginModule's &lt;code&gt;login&lt;/code&gt; method gets invoked by the LoginContext's &lt;code&gt;login&lt;/code&gt; method. The &lt;code&gt;login&lt;/code&gt; method for the &lt;code&gt;LoginModule&lt;/code&gt; then performs the actual authentication (prompt for and verify a password for example) and saves its authentication status as private state information. Once finished, the LoginModule's &lt;code&gt;login&lt;/code&gt; method either returns &lt;code&gt;true&lt;/code&gt; (if it succeeded) or &lt;code&gt;false&lt;/code&gt; (if it should be ignored), or throws a &lt;code&gt;LoginException&lt;/code&gt; to specify a failure. In the failure case, the &lt;code&gt;LoginModule&lt;/code&gt; must not retry the authentication or introduce delays. The responsibility of such tasks belongs to the application. If the application attempts to retry the authentication, the LoginModule's &lt;code&gt;login&lt;/code&gt; method will be called again.</source>
          <target state="translated">호출 응용 프로그램은 인증 프로세스를 단일 작업으로 간주합니다. 그러나 &lt;code&gt;LoginModule&lt;/code&gt; 내의 인증 프로세스 는 두 가지 단계로 진행됩니다. 첫 번째 단계에서 LoginModule의 &lt;code&gt;login&lt;/code&gt; 메소드는 LoginContext의 &lt;code&gt;login&lt;/code&gt; 메소드에 의해 호출됩니다 . 그런 다음 &lt;code&gt;LoginModule&lt;/code&gt; 의 &lt;code&gt;login&lt;/code&gt; 방법 은 실제 인증을 수행하고 (예 : 비밀번호 프롬프트 및 확인) 인증 상태를 개인 상태 정보로 저장합니다. 완료되면 LoginModule의 &lt;code&gt;login&lt;/code&gt; 메소드는 &lt;code&gt;true&lt;/code&gt; (성공한 경우) 또는 &lt;code&gt;false&lt;/code&gt; (무시해야하는 경우 )를 리턴 하거나 &lt;code&gt;LoginException&lt;/code&gt; 을 발생시킵니다.실패를 지정합니다. 실패한 경우 &lt;code&gt;LoginModule&lt;/code&gt; 은 인증을 재 시도하거나 지연을 발생시키지 않아야합니다. 이러한 작업의 책임은 응용 프로그램에 있습니다. 응용 프로그램이 인증을 다시 시도하면 LoginModule의 &lt;code&gt;login&lt;/code&gt; 메소드가 다시 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1c3fe9fba10b534da227fa8d485a94dde30e127c" translate="yes" xml:space="preserve">
          <source>The cancelled-key set</source>
          <target state="translated">취소 된 키 세트</target>
        </trans-unit>
        <trans-unit id="667a74dd5f8c4d2f19880b01489cc31ccfa182f0" translate="yes" xml:space="preserve">
          <source>The candidate continuation of the given user's input.</source>
          <target state="translated">주어진 사용자 입력의 후보 연속입니다.</target>
        </trans-unit>
        <trans-unit id="1f0d05d11fafed55715e8743f958047cb4d86b64" translate="yes" xml:space="preserve">
          <source>The canonical form derived from the version parameter is &lt;code&gt;Runtime.Version.parse(Integer.toString(n))&lt;/code&gt; where &lt;code&gt;n&lt;/code&gt; is &lt;code&gt;Math.max(version.feature(), JarFile.baseVersion().feature())&lt;/code&gt;.</source>
          <target state="translated">버전 매개 변수에서 파생 된 표준 형식은 &lt;code&gt;Runtime.Version.parse(Integer.toString(n))&lt;/code&gt; 이며 여기서 &lt;code&gt;n&lt;/code&gt; 은 &lt;code&gt;Math.max(version.feature(), JarFile.baseVersion().feature())&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7705f65a7bdd439c114a9df9b4c5a1d7648e03b2" translate="yes" xml:space="preserve">
          <source>The canonical form of the name.</source>
          <target state="translated">정식 형태의 이름.</target>
        </trans-unit>
        <trans-unit id="a1104158561eadc7967dd83f5b89d12e9b6c57d4" translate="yes" xml:space="preserve">
          <source>The canonical key property list string. This string is independent of whether the ObjectName is a pattern.</source>
          <target state="translated">표준 키 속성 목록 문자열 이 문자열은 ObjectName이 패턴인지 여부와 무관합니다.</target>
        </trans-unit>
        <trans-unit id="791454749861f9eb0692973f9cadb5f0f1a53c91" translate="yes" xml:space="preserve">
          <source>The canonical name of this charset</source>
          <target state="translated">이 문자셋의 정식 이름</target>
        </trans-unit>
        <trans-unit id="210de0ba154cb7e2b8b0b68265e90339f4d9d26d" translate="yes" xml:space="preserve">
          <source>The canonical pathname of a file that resides on some other machine and is accessed via a remote-filesystem protocol such as SMB or NFS may or may not begin with one of the roots returned by this method. If the pathname of a remote file is syntactically indistinguishable from the pathname of a local file then it will begin with one of the roots returned by this method. Thus, for example, &lt;code&gt;File&lt;/code&gt; objects denoting the root directories of the mapped network drives of a Windows platform will be returned by this method, while &lt;code&gt;File&lt;/code&gt; objects containing UNC pathnames will not be returned by this method.</source>
          <target state="translated">다른 시스템에 상주하고 SMB 또는 NFS와 같은 원격 파일 시스템 프로토콜을 통해 액세스되는 파일의 정식 경로 이름은이 방법으로 반환 된 루트 중 하나로 시작하거나 시작하지 않을 수 있습니다. 리모트 파일의 경로명이 구문 적으로 로컬 파일의 경로명과 구별 할 수없는 경우,이 메소드가 리턴 한 루트 중 하나로 시작합니다. 예를 들어, Windows 플랫폼의 매핑 된 네트워크 드라이브의 루트 디렉토리를 나타내는 &lt;code&gt;File&lt;/code&gt; 객체는이 방법으로 반환되지만 UNC 경로 이름이 포함 된 &lt;code&gt;File&lt;/code&gt; 객체는이 방법으로 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="de6a0ba5b090b016962ea6aeaab45878b7d009d1" translate="yes" xml:space="preserve">
          <source>The canonical pathname string denoting the same file or directory as this abstract pathname</source>
          <target state="translated">이 추상 경로명과 동일한 파일 또는 디렉토리를 나타내는 표준 경로명 문자열</target>
        </trans-unit>
        <trans-unit id="f3002d045225be82bcb986e5cc5054510e6d33e1" translate="yes" xml:space="preserve">
          <source>The capability of determining the location of text in the view is provided. There are two methods, &lt;a href=&quot;#modelToView(int)&quot;&gt;&lt;code&gt;modelToView(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#viewToModel(java.awt.Point)&quot;&gt;&lt;code&gt;viewToModel(java.awt.Point)&lt;/code&gt;&lt;/a&gt; for determining this information.</source>
          <target state="translated">보기에서 텍스트의 위치를 ​​결정하는 기능이 제공됩니다. 이 정보를 결정하기위한 두 가지 메소드, &lt;a href=&quot;#modelToView(int)&quot;&gt; &lt;code&gt;modelToView(int)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#viewToModel(java.awt.Point)&quot;&gt; &lt;code&gt;viewToModel(java.awt.Point)&lt;/code&gt; &lt;/a&gt; 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2dd69bbf6aa755d82287b8178393cdb4e9dc5d14" translate="yes" xml:space="preserve">
          <source>The capacity of this buffer</source>
          <target state="translated">이 버퍼의 용량</target>
        </trans-unit>
        <trans-unit id="e6ddf569c4f9f11da3f1c096e2d9563ba72d6331" translate="yes" xml:space="preserve">
          <source>The captured image</source>
          <target state="translated">캡처 된 이미지</target>
        </trans-unit>
        <trans-unit id="5f754be5b922ce10c49466dd844dfc855b60ce26" translate="yes" xml:space="preserve">
          <source>The captured input associated with a group is always the subsequence that the group most recently matched. If a group is evaluated a second time because of quantification then its previously-captured value, if any, will be retained if the second evaluation fails. Matching the string &lt;code&gt;&quot;aba&quot;&lt;/code&gt; against the expression &lt;code&gt;(a(b)?)+&lt;/code&gt;, for example, leaves group two set to &lt;code&gt;&quot;b&quot;&lt;/code&gt;. All captured input is discarded at the beginning of each match.</source>
          <target state="translated">그룹과 연관된 캡처 된 입력은 항상 그룹이 가장 최근에 일치 한 하위 순서입니다. 정량화로 인해 그룹이 두 번째로 평가되는 경우 두 번째 평가에 실패하면 이전에 캡처 된 값 (있는 경우)이 유지됩니다. 예를 들어, 문자열 &lt;code&gt;&quot;aba&quot;&lt;/code&gt; 를 표현식 &lt;code&gt;(a(b)?)+&lt;/code&gt; 와 일치 시키면 그룹 2는 &lt;code&gt;&quot;b&quot;&lt;/code&gt; 로 설정됩니다 . 캡처 된 모든 입력은 각 경기가 시작될 때 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="f654b268e7aa116ea7c684306472b0ca1ad3bd65" translate="yes" xml:space="preserve">
          <source>The caret acts as a mouse and focus listener on the text component it has been installed in, and defines the caret semantics based upon those events. The listener methods can be reimplemented to change the semantics. By default, the first mouse button will be used to set focus and caret position. Dragging the mouse pointer with the first mouse button will sweep out a selection that is contiguous in the model. If the associated text component is editable, the caret will become visible when focus is gained, and invisible when focus is lost.</source>
          <target state="translated">캐럿은 설치된 텍스트 구성 요소에서 마우스 및 포커스 리스너 역할을하며 해당 이벤트를 기반으로 캐럿 의미를 정의합니다. 의미 체계를 변경하기 위해 리스너 메서드를 다시 구현할 수 있습니다. 기본적으로 첫 번째 마우스 버튼은 포커스와 캐럿 위치를 설정하는 데 사용됩니다. 첫 번째 마우스 버튼으로 마우스 포인터를 끌면 모델에서 연속 된 선택이 제거됩니다. 관련 텍스트 구성 요소를 편집 할 수있는 경우 포커스를 얻었을 때 캐럿이 표시되고 포커스를 잃으면 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1f33dab989db11d55d3bacf177757859513b84af" translate="yes" xml:space="preserve">
          <source>The caret is a pluggable object in swing text components. Notification of changes to the caret position and the selection are sent to implementations of the &lt;code&gt;CaretListener&lt;/code&gt; interface that have been registered with the text component. The UI will install a default caret unless a customized caret has been set.</source>
          <target state="translated">캐럿은 스윙 텍스트 구성 요소의 플러그 가능한 개체입니다. 캐럿 위치 및 선택에 대한 변경 알림은 텍스트 구성 요소에 등록 된 &lt;code&gt;CaretListener&lt;/code&gt; 인터페이스의 구현으로 전송됩니다 . 사용자 정의 캐럿이 설정되어 있지 않으면 UI는 기본 캐럿을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="86fa7a262c868582bc5ac9ee61d205350adc5a62" translate="yes" xml:space="preserve">
          <source>The caret is painted.</source>
          <target state="translated">캐럿이 그려져 있습니다.</target>
        </trans-unit>
        <trans-unit id="454d106b2ed5373abf97288cbbf46f7fa9aede72" translate="yes" xml:space="preserve">
          <source>The carriage-return character (&lt;code&gt;'\u000D'&lt;/code&gt;)</source>
          <target state="translated">캐리지 리턴 문자 ( &lt;code&gt;'\u000D'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bf62c1f85c8322515dc2cf5ea1cf81604ccad3fb" translate="yes" xml:space="preserve">
          <source>The case of names is significant. All names should be treated as case-sensitive. For example, some file systems have case-insensitive, case-aware file names. File objects representing such files should take care to preserve case by using &lt;a href=&quot;../../../java.base/java/io/file#getCanonicalFile()&quot;&gt;&lt;code&gt;File.getCanonicalFile()&lt;/code&gt;&lt;/a&gt; or similar means. If the system is not case-aware, file objects must use other means to preserve case.</source>
          <target state="translated">이름의 대소 문자가 중요합니다. 모든 이름은 대소 문자를 구분해야합니다. 예를 들어 일부 파일 시스템에는 대소 문자를 구분하지 않고 대소 문자를 인식하는 파일 이름이 있습니다. 이러한 파일을 나타내는 파일 객체는 &lt;a href=&quot;../../../java.base/java/io/file#getCanonicalFile()&quot;&gt; &lt;code&gt;File.getCanonicalFile()&lt;/code&gt; &lt;/a&gt; 또는 유사한 수단 을 사용하여 대소 문자를 유지하도록주의해야 합니다. 시스템이 대소 문자를 인식하지 않는 경우 파일 객체는 대소 문자를 유지하기 위해 다른 수단을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a336e54edba2db7b0d45359eec9f772478b631f0" translate="yes" xml:space="preserve">
          <source>The case of names is significant. All names should be treated as case-sensitive. For example, some file systems have case-insensitive, case-aware file names. File objects representing such files should take care to preserve case by using &lt;a href=&quot;../../java/io/file#getCanonicalFile--&quot;&gt;&lt;code&gt;File.getCanonicalFile()&lt;/code&gt;&lt;/a&gt; or similar means. If the system is not case-aware, file objects must use other means to preserve case.</source>
          <target state="translated">이름의 경우는 중요합니다. 모든 이름은 대소 문자를 구분하여 처리해야합니다. 예를 들어, 일부 파일 시스템에는 대소 문자를 구분하지 않고 대소 문자를 구분하는 파일 이름이 있습니다. 이러한 파일을 나타내는 파일 객체는 &lt;a href=&quot;../../java/io/file#getCanonicalFile--&quot;&gt; &lt;code&gt;File.getCanonicalFile()&lt;/code&gt; &lt;/a&gt; 또는 이와 유사한 방법 을 사용하여 대 / 소문자를 보존해야 합니다. 시스템이 대소 문자를 구분하지 않는 경우 파일 객체는 다른 방법을 사용하여 대소 문자를 유지해야합니다.</target>
        </trans-unit>
        <trans-unit id="8fa76ae4c3a9a054d0b180c034bb5ab398342f9e" translate="yes" xml:space="preserve">
          <source>The catalog column is:</source>
          <target state="translated">카탈로그 열은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ad3d3e56a6e46220a7204a7374a1fa1133754370" translate="yes" xml:space="preserve">
          <source>The category determines how an event is presented to the user. Events that are in the same category are typically displayed together in graphs and trees. To avoid the overlap of durational events in graphical representations, overlapping events must be in separate categories.</source>
          <target state="translated">카테고리는 이벤트가 사용자에게 표시되는 방법을 결정합니다. 동일한 카테고리에있는 이벤트는 일반적으로 그래프와 트리로 함께 표시됩니다. 그래픽 표현에서 기간 이벤트의 겹침을 방지하려면 겹치는 이벤트는 별도의 범주에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a68a56f85f50d4a3bd11e0630615e26f7f282680" translate="yes" xml:space="preserve">
          <source>The cause of the activation exception.</source>
          <target state="translated">활성화 예외의 원인입니다.</target>
        </trans-unit>
        <trans-unit id="735c24ada71f9c0a910f8d211c119bd92a6c307f" translate="yes" xml:space="preserve">
          <source>The cause of the exception.</source>
          <target state="translated">예외의 원인입니다.</target>
        </trans-unit>
        <trans-unit id="b6a385e0589dfa30513e590d19a0dd44571ddc9e" translate="yes" xml:space="preserve">
          <source>The cause of the garbage collection action.</source>
          <target state="translated">가비지 콜렉션 조치의 원인입니다.</target>
        </trans-unit>
        <trans-unit id="72733aae3de9acb183baaab1a9525b354c63a3a6" translate="yes" xml:space="preserve">
          <source>The cause of the remote exception.</source>
          <target state="translated">원격 예외의 원인입니다.</target>
        </trans-unit>
        <trans-unit id="950b8ee7732eb08f5ae8f7c10e0fbf2805346d12" translate="yes" xml:space="preserve">
          <source>The cell used to draw nodes.</source>
          <target state="translated">노드를 그리는 데 사용되는 셀입니다.</target>
        </trans-unit>
        <trans-unit id="bed6f946252235f638a5c558ea2264b1004e064a" translate="yes" xml:space="preserve">
          <source>The cell used to draw nodes. If &lt;code&gt;null&lt;/code&gt;, the UI uses a default &lt;code&gt;cellRenderer&lt;/code&gt;.</source>
          <target state="translated">노드를 그리는 데 사용되는 셀입니다. 경우 &lt;code&gt;null&lt;/code&gt; , UI는 기본 사용 &lt;code&gt;cellRenderer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21385f52060e6b3b1820318af4439ce11e0ea9c3" translate="yes" xml:space="preserve">
          <source>The cells from (firstRow, column) to (lastRow, column) have been changed.</source>
          <target state="translated">(firstRow, column)에서 (lastRow, column)까지의 셀이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="4f4febe22a4ac9250eebeae2e09a0ccc8854abf4" translate="yes" xml:space="preserve">
          <source>The cells from (firstRow, column) to (lastRow, column) have been changed. The</source>
          <target state="translated">(firstRow, column)에서 (lastRow, column)까지의 셀이 변경되었습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="0e663c6d1cb7f2148cb7a048469122118729985a" translate="yes" xml:space="preserve">
          <source>The cells in column</source>
          <target state="translated">열의 셀</target>
        </trans-unit>
        <trans-unit id="d6aac3d3a62bf0fb9ebd69ea942c8b185d7753f2" translate="yes" xml:space="preserve">
          <source>The center layout constraint (middle of container).</source>
          <target state="translated">중앙 레이아웃 제약 (컨테이너 중간).</target>
        </trans-unit>
        <trans-unit id="bb3b1cd6db2267bff743c80e17b1be7434e1c0b8" translate="yes" xml:space="preserve">
          <source>The center of the arc is the center of the rectangle whose origin is (</source>
          <target state="translated">호의 중심은 원점이 () 인 직사각형의 중심입니다.</target>
        </trans-unit>
        <trans-unit id="a18ae82107d7074e97f5e1bfd9b5c68cb340a111" translate="yes" xml:space="preserve">
          <source>The central abstractions of the NIO APIs are:</source>
          <target state="translated">NIO API의 주요 추상화는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eea9d66af2319420cb90b9153a7f48fc60a2109b" translate="yes" xml:space="preserve">
          <source>The central authority, after computing the parameters, must send this information to the parties looking to agree on a secret key.</source>
          <target state="translated">중앙 기관은 매개 변수를 계산 한 후 비밀 키에 동의하려는 당사자에게이 정보를 보내야합니다.</target>
        </trans-unit>
        <trans-unit id="31bbd318f66267e19a59875dc86d02599fff6ad3" translate="yes" xml:space="preserve">
          <source>The central position in an area.</source>
          <target state="translated">지역의 중심 위치.</target>
        </trans-unit>
        <trans-unit id="0c044d2527674844aeb7838cafb455cbbf0e7d17" translate="yes" xml:space="preserve">
          <source>The central position in an area. Used for both compass-direction constants (NORTH, etc.) and box-orientation constants (TOP, etc.).</source>
          <target state="translated">지역의 중심 위치. 나침반 방향 상수 (NORTH 등)와 상자 방향 상수 (TOP 등) 모두에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c22f0301e2c96e02c998d11f05a81bda7ec13023" translate="yes" xml:space="preserve">
          <source>The certificate contains one or more unrecognized critical extensions.</source>
          <target state="translated">인증서에 인식 할 수없는 하나 이상의 중요한 확장이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3f88fc74a60569eaa011ebfe60b8bb781fd8d80" translate="yes" xml:space="preserve">
          <source>The certificate does not chain correctly.</source>
          <target state="translated">인증서가 올바르게 연결되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="b25d26b01801270f07001113d7e2c75485deab07" translate="yes" xml:space="preserve">
          <source>The certificate is expired.</source>
          <target state="translated">인증서가 만료되었습니다.</target>
        </trans-unit>
        <trans-unit id="6e2ff8ce341f5930215309008c9e9de70d1648b6" translate="yes" xml:space="preserve">
          <source>The certificate is not a CA certificate.</source>
          <target state="translated">인증서가 CA 인증서가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="8b796401164cf6fe5dbe9be3e622da059437350d" translate="yes" xml:space="preserve">
          <source>The certificate is not yet valid.</source>
          <target state="translated">인증서가 아직 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ee1a1d0d8304f8fa5e5065bbc09eefcc09be7d06" translate="yes" xml:space="preserve">
          <source>The certificate is revoked.</source>
          <target state="translated">인증서가 해지되었습니다.</target>
        </trans-unit>
        <trans-unit id="e3899819dea82e37e000988814aa79fa88a75e2d" translate="yes" xml:space="preserve">
          <source>The certificate's key usage is invalid.</source>
          <target state="translated">인증서의 키 사용법이 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b384fb743347a5a12dacd02a3d76e6f93ee0b1f3" translate="yes" xml:space="preserve">
          <source>The certificates supplied must be of a type supported by the &lt;code&gt;CertificateFactory&lt;/code&gt;. They will be copied out of the supplied &lt;code&gt;List&lt;/code&gt; object.</source>
          <target state="translated">제공된 인증서는 &lt;code&gt;CertificateFactory&lt;/code&gt; 가 지원하는 유형이어야합니다 . 제공된 &lt;code&gt;List&lt;/code&gt; 객체 에서 복사됩니다 .</target>
        </trans-unit>
        <trans-unit id="c8b00d4d4f4b86477d55b6e145457b3ceca2ef79" translate="yes" xml:space="preserve">
          <source>The change event for the model.</source>
          <target state="translated">모델의 변경 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="eff2515cf3660b511336c271115d60c3d25266db" translate="yes" xml:space="preserve">
          <source>The change event for the model. Only one ChangeEvent is needed per model instance since the event's only (read-only) state is the source property. The source of events generated here is always &quot;this&quot;.</source>
          <target state="translated">모델의 변경 이벤트입니다. 이벤트의 유일한 (읽기 전용) 상태가 소스 속성이므로 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다. 여기에서 생성되는 이벤트의 소스는 항상 &quot;this&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="8e35a9d4c22f210e2a5a10cf8dd793f7216c1761" translate="yes" xml:space="preserve">
          <source>The change event.</source>
          <target state="translated">변경 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="956ae8d2236a24f62640100e8b1e007288c60360" translate="yes" xml:space="preserve">
          <source>The change listeners for the model.</source>
          <target state="translated">모델의 변경 리스너입니다.</target>
        </trans-unit>
        <trans-unit id="7b98e8e58f22b3caa2eb436eb57fa4ba86980758" translate="yes" xml:space="preserve">
          <source>The change to</source>
          <target state="translated">로 변경</target>
        </trans-unit>
        <trans-unit id="d6e6681b8ed8b2fabf6b1b1685ceba0031ebea2a" translate="yes" xml:space="preserve">
          <source>The changeListener (no suffix) is the listener we add to the slider's model.</source>
          <target state="translated">changeListener (접미사 없음)는 슬라이더의 모델에 추가하는 리스너입니다.</target>
        </trans-unit>
        <trans-unit id="784a0ab0404a20c47ad0e34d28e6554225379520" translate="yes" xml:space="preserve">
          <source>The changeListener (no suffix) is the listener we add to the slider's model. This listener is initialized to the &lt;code&gt;ChangeListener&lt;/code&gt; returned from &lt;code&gt;createChangeListener&lt;/code&gt;, which by default just forwards events to &lt;code&gt;ChangeListener&lt;/code&gt;s (if any) added directly to the slider.</source>
          <target state="translated">changeListener (접미사 없음)는 슬라이더의 모델에 추가하는 리스너입니다. 이 리스너는 &lt;code&gt;createChangeListener&lt;/code&gt; 에서 반환 된 &lt;code&gt;ChangeListener&lt;/code&gt; 로 초기화 되며 기본적으로 이벤트를 슬라이더에 직접 추가 된 &lt;code&gt;ChangeListener&lt;/code&gt; (있는 경우)로 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="4fdc013cd02b34bb628674b8ff4bd551ff228166" translate="yes" xml:space="preserve">
          <source>The changing of the component hierarchy will touch the component lock, which is the one thing that is not safe from the View hierarchy. Therefore, this functionality is executed immediately if on the event thread, or is queued on the event queue if called from another thread (notification of change from an asynchronous update).</source>
          <target state="translated">구성 요소 계층 구조의 변경은 구성 요소 잠금에 영향을 미치며 이는 뷰 계층 구조에서 안전하지 않은 한 가지입니다. 따라서이 기능은 이벤트 스레드에있는 경우 즉시 실행되고 다른 스레드에서 호출 된 경우 이벤트 큐에 대기됩니다 ​​(비동기 업데이트에서 변경 알림).</target>
        </trans-unit>
        <trans-unit id="3ef63324777b7b14fe754d2696b2ef9060c9840d" translate="yes" xml:space="preserve">
          <source>The channel</source>
          <target state="translated">채널</target>
        </trans-unit>
        <trans-unit id="273f3a154b1e12746a05f884c9cef9ece2560ed9" translate="yes" xml:space="preserve">
          <source>The channel upon whose file this lock was acquired.</source>
          <target state="translated">이 잠금을 획득 한 파일의 채널입니다.</target>
        </trans-unit>
        <trans-unit id="1e0652fa3fbb3d765369e9f411541094bc17eda1" translate="yes" xml:space="preserve">
          <source>The channel's socket is configured so that it can receive datagrams from, and sends datagrams to, any remote address so long as the security manager, if installed, permits it.</source>
          <target state="translated">채널의 소켓은 보안 관리자 (설치된 경우)가 허용하는 한 모든 원격 주소에서 데이터 그램을 수신하고 데이터 그램을 전송할 수 있도록 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="118fc18fddf3f99946425aa7c2e5b6561b28a981" translate="yes" xml:space="preserve">
          <source>The channel's socket is configured so that it only receives datagrams from, and sends datagrams to, the given remote</source>
          <target state="translated">채널의 소켓은 지정된 리모콘에서만 데이터 그램을 수신하고 데이터 그램을 전송하도록 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="577f4a4bd9f1a525a92f81820c6bbda92b62eb43" translate="yes" xml:space="preserve">
          <source>The channel's socket should be bound to the &lt;a href=&quot;../../net/inetaddress#isAnyLocalAddress()&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address. If the socket is bound to a specific address, rather than the wildcard address then it is implementation specific if multicast datagrams are received by the socket.</source>
          <target state="translated">채널의 소켓은 &lt;a href=&quot;../../net/inetaddress#isAnyLocalAddress()&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt; 주소에 바인딩되어야합니다 . 소켓이 와일드 카드 주소가 아닌 특정 주소에 바인딩 된 경우 소켓에서 멀티 캐스트 데이터 그램을 수신하면 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="4c3b4f4f803181b3afa3181177892230a023a909" translate="yes" xml:space="preserve">
          <source>The channel's socket should be bound to the &lt;a href=&quot;../../net/inetaddress#isAnyLocalAddress--&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address. If the socket is bound to a specific address, rather than the wildcard address then it is implementation specific if multicast datagrams are received by the socket.</source>
          <target state="translated">채널의 소켓은 &lt;a href=&quot;../../net/inetaddress#isAnyLocalAddress--&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt; 주소에 바인딩되어야합니다 . 소켓이 와일드 카드 주소가 아닌 특정 주소에 바인드 된 경우 소켓이 멀티 캐스트 데이터 그램을 수신하면 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="a699f56014d87844a8ee4bb207efd8389c233bcd" translate="yes" xml:space="preserve">
          <source>The channel, once created, is not dependent upon the directory stream used to create it. Closing this directory stream has no effect upon the channel.</source>
          <target state="translated">한 번 작성된 채널은 채널을 작성하는 데 사용 된 디렉토리 스트림에 종속되지 않습니다. 이 디렉토리 스트림을 닫아도 채널에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="39a6f005d3b2a7ce9af757d87e217ca0deda5d34" translate="yes" xml:space="preserve">
          <source>The char array of data.</source>
          <target state="translated">데이터의 문자 배열입니다.</target>
        </trans-unit>
        <trans-unit id="7290d5e1f93c0657c60681207491c9d4282f5969" translate="yes" xml:space="preserve">
          <source>The char at the buffer's current position</source>
          <target state="translated">버퍼의 현재 위치에있는 문자</target>
        </trans-unit>
        <trans-unit id="54b64de4dceefa74c52963cd7e8709b225830d3a" translate="yes" xml:space="preserve">
          <source>The char at the given index</source>
          <target state="translated">주어진 인덱스의 문자</target>
        </trans-unit>
        <trans-unit id="0fb8540e46e037f0a55ee7cdb05c6a02e8b3244a" translate="yes" xml:space="preserve">
          <source>The char value at the buffer's current position</source>
          <target state="translated">버퍼의 현재 위치의 문자 값</target>
        </trans-unit>
        <trans-unit id="38f5117adec7b8930b5b6167a3b737d62ce6af18" translate="yes" xml:space="preserve">
          <source>The char value at the given index</source>
          <target state="translated">주어진 인덱스의 문자 값</target>
        </trans-unit>
        <trans-unit id="861556c9f709a544627b4ec57f4cad7a37448510" translate="yes" xml:space="preserve">
          <source>The character</source>
          <target state="translated">캐릭터</target>
        </trans-unit>
        <trans-unit id="a31e6336561cb067818ee6d07b56859cf4a07e52" translate="yes" xml:space="preserve">
          <source>The character 'n'. The two characters represent a newline ('\n' in Java).</source>
          <target state="translated">문자 'n'. 두 문자는 개행 (Java에서 '\ n')을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="99fe90d5b42df4311043f886ab6c19c1e8b75bb8" translate="yes" xml:space="preserve">
          <source>The character at index</source>
          <target state="translated">색인의 문자</target>
        </trans-unit>
        <trans-unit id="add7c9db1597ce73e7b64c0b4d75b5e5f46580e5" translate="yes" xml:space="preserve">
          <source>The character at index &lt;code&gt;position() + index&lt;/code&gt;</source>
          <target state="translated">인덱스 &lt;code&gt;position() + index&lt;/code&gt; 의 문자</target>
        </trans-unit>
        <trans-unit id="7913fbf250e90f8c3ebaa828e0ccf95027ea7dac" translate="yes" xml:space="preserve">
          <source>The character at index &lt;code&gt;position()&amp;nbsp;+&amp;nbsp;index&lt;/code&gt;</source>
          <target state="translated">인덱스 &lt;code&gt;position()&amp;nbsp;+&amp;nbsp;index&lt;/code&gt; 의 문자</target>
        </trans-unit>
        <trans-unit id="2df8f2bba1b114eddf895aae602e96bbb49d0161" translate="yes" xml:space="preserve">
          <source>The character at the specified index is set to &lt;code&gt;ch&lt;/code&gt;.</source>
          <target state="translated">지정된 인덱스의 문자는 &lt;code&gt;ch&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="05cb1c2e1ff664b4468546f04c60b5ac72c5839e" translate="yes" xml:space="preserve">
          <source>The character at the specified index is set to &lt;code&gt;ch&lt;/code&gt;. This sequence is altered to represent a new character sequence that is identical to the old character sequence, except that it contains the character &lt;code&gt;ch&lt;/code&gt; at position &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">지정된 인덱스의 문자는 &lt;code&gt;ch&lt;/code&gt; 로 설정됩니다 . 이 순서는 위치 &lt;code&gt;index&lt;/code&gt; 에 문자 &lt;code&gt;ch&lt;/code&gt; 가 포함되어 있다는 점을 제외하면 이전 문자 순서와 동일한 새 문자 순서를 나타내도록 변경됩니다 .</target>
        </trans-unit>
        <trans-unit id="60ad5395dc1ff483a8ff68c1464584af5830cab2" translate="yes" xml:space="preserve">
          <source>The character buffer.</source>
          <target state="translated">문자 버퍼</target>
        </trans-unit>
        <trans-unit id="70f203f41b9c452844aa256ef0bb4e81a6005ccc" translate="yes" xml:space="preserve">
          <source>The character data of the node that implements this interface.</source>
          <target state="translated">이 인터페이스를 구현하는 노드의 문자 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="a45523bab125a86352ac449c7a46dae9cfa3064c" translate="yes" xml:space="preserve">
          <source>The character data of the node that implements this interface. The DOM implementation may not put arbitrary limits on the amount of data that may be stored in a &lt;code&gt;CharacterData&lt;/code&gt; node. However, implementation limits may mean that the entirety of a node's data may not fit into a single &lt;code&gt;DOMString&lt;/code&gt;. In such cases, the user may call &lt;code&gt;substringData&lt;/code&gt; to retrieve the data in appropriately sized pieces.</source>
          <target state="translated">이 인터페이스를 구현하는 노드의 문자 데이터입니다. DOM 구현은 &lt;code&gt;CharacterData&lt;/code&gt; 노드에 저장 될 수있는 데이터의 양에 임의의 제한을 두지 않을 수 있습니다 . 그러나 구현 제한은 노드의 전체 데이터가 단일 &lt;code&gt;DOMString&lt;/code&gt; 에 맞지 않을 수 있음을 의미 할 수 있습니다 . 이러한 경우 사용자는 &lt;code&gt;substringData&lt;/code&gt; 를 호출 하여 적절한 크기의 데이터를 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="edcc95bd1f7f55da0b2e5a9e4e293c0c971720d9" translate="yes" xml:space="preserve">
          <source>The character encoding of the linked resource.</source>
          <target state="translated">연결된 리소스의 문자 인코딩입니다.</target>
        </trans-unit>
        <trans-unit id="7c930ceead20b69b3e799fab1304027f760e0e50" translate="yes" xml:space="preserve">
          <source>The character encoding of the linked resource. See the charset attribute definition in HTML 4.0.</source>
          <target state="translated">연결된 리소스의 문자 인코딩입니다. HTML 4.0의 charset 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4f64f8c80ee81188510bead30f9e61fa5ed6218c" translate="yes" xml:space="preserve">
          <source>The character encoding of the resource being linked to.</source>
          <target state="translated">링크되는 리소스의 문자 인코딩입니다.</target>
        </trans-unit>
        <trans-unit id="0feb32158754d0fc1e8c086b3c2dd6959ce6b48e" translate="yes" xml:space="preserve">
          <source>The character encoding of the resource being linked to. See the charset attribute definition in HTML 4.0.</source>
          <target state="translated">링크되는 리소스의 문자 인코딩입니다. HTML 4.0의 charset 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="718c1608eb642e79984b1c33db929e47a46949af" translate="yes" xml:space="preserve">
          <source>The character encoding to use for the output.</source>
          <target state="translated">출력에 사용할 문자 인코딩입니다.</target>
        </trans-unit>
        <trans-unit id="f5d0f39150aed7cebe9518370ff00134deff7b43" translate="yes" xml:space="preserve">
          <source>The character encoding to use for the output. The encoding must be a string acceptable for an XML encoding declaration ([&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;] section 4.3.3 &quot;Character Encoding in Entities&quot;), it is recommended that character encodings registered (as charsets) with the Internet Assigned Numbers Authority [&lt;a href=&quot;ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets&quot;&gt;IANA-CHARSETS&lt;/a&gt;] should be referred to using their registered names.</source>
          <target state="translated">출력에 사용할 문자 인코딩입니다. 인코딩은 XML 인코딩 선언 ([ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt; ] 섹션 4.3.3 &quot;엔티티의 문자 인코딩&quot;)에 허용되는 문자열이어야합니다. 문자 인코딩은 Internet Assigned Numbers Authority [ &lt;a href=&quot;ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets&quot;&gt;IANA-CHARSETS에&lt;/a&gt; 등록 (문자 집합으로))하는 것이 좋습니다. ]는 등록 된 이름을 사용하여 참조되어야합니다.</target>
        </trans-unit>
        <trans-unit id="174dfc28a0bff8f3001a9c347e3cc19fd6f136cf" translate="yes" xml:space="preserve">
          <source>The character encoding to use for the output. The encoding must be a string acceptable for an XML encoding declaration ([&lt;a href=&quot;https://www.w3.org/TR/xml/&quot;&gt;XML 1.0&lt;/a&gt;] section 4.3.3 &quot;Character Encoding in Entities&quot;), it is recommended that character encodings registered (as charsets) with the Internet Assigned Numbers Authority [&lt;a href=&quot;https://www.iana.org/assignments/character-sets/character-sets.xhtml&quot;&gt;IANA-CHARSETS&lt;/a&gt;] should be referred to using their registered names.</source>
          <target state="translated">출력에 사용할 문자 인코딩입니다. 인코딩은 XML 인코딩 선언 ([ &lt;a href=&quot;https://www.w3.org/TR/xml/&quot;&gt;XML 1.0&lt;/a&gt; ] 섹션 4.3.3 &quot;엔티티의 문자 인코딩&quot;)에 허용되는 문자열이어야합니다. 문자 인코딩은 Internet Assigned Numbers Authority [ &lt;a href=&quot;https://www.iana.org/assignments/character-sets/character-sets.xhtml&quot;&gt;IANA-CHARSETS에&lt;/a&gt; 등록 (문자 집합으로))하는 것이 좋습니다. ]는 등록 된 이름을 사용하여 참조되어야합니다.</target>
        </trans-unit>
        <trans-unit id="b1b3c9f4165d65582f7f43545ad013dca4e32be8" translate="yes" xml:space="preserve">
          <source>The character encoding, if known.</source>
          <target state="translated">알려진 경우 문자 인코딩입니다.</target>
        </trans-unit>
        <trans-unit id="7c8d321ef1e971aa674156adc969397230fe588a" translate="yes" xml:space="preserve">
          <source>The character encoding, if known. The encoding must be a string acceptable for an XML encoding declaration ([&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;] section 4.3.3 &quot;Character Encoding in Entities&quot;).</source>
          <target state="translated">알려진 경우 문자 인코딩입니다. 인코딩은 XML 인코딩 선언에 사용할 수있는 문자열이어야합니다 ([ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt; ] 섹션 4.3.3 &quot;엔티티의 문자 인코딩&quot;).</target>
        </trans-unit>
        <trans-unit id="7a30c2f925ce60321f483534a732bfafe9cab358" translate="yes" xml:space="preserve">
          <source>The character encoding, if known. The encoding must be a string acceptable for an XML encoding declaration ([&lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;] section 4.3.3 &quot;Character Encoding in Entities&quot;).</source>
          <target state="translated">알려진 경우 문자 인코딩입니다. 인코딩은 XML 인코딩 선언에 허용되는 문자열이어야합니다 ([ &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt; ] 섹션 4.3.3 &quot;엔티티의 문자 인코딩&quot;).</target>
        </trans-unit>
        <trans-unit id="f53810bc7c23ad757010d0dee9a2d3f2d0f88c86" translate="yes" xml:space="preserve">
          <source>The character index of the first text boundary.</source>
          <target state="translated">첫 번째 텍스트 경계의 문자 색인입니다.</target>
        </trans-unit>
        <trans-unit id="bf1cc285cf8f3350802731f918ab3a751880522f" translate="yes" xml:space="preserve">
          <source>The character index of the last text boundary.</source>
          <target state="translated">마지막 텍스트 경계의 문자 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="fbb25d884c4b95970cd226381775257633d22616" translate="yes" xml:space="preserve">
          <source>The character index of the next text boundary or &lt;code&gt;BreakIterator.DONE&lt;/code&gt; if the current boundary is the last text boundary. Equivalent to next(1).</source>
          <target state="translated">다음 텍스트 경계의 문자 인덱스 또는 현재 경계가 마지막 텍스트 경계인 경우 &lt;code&gt;BreakIterator.DONE&lt;/code&gt; next (1)과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8f936cd2ad0aa613f11cba5c34739fa3c3541469" translate="yes" xml:space="preserve">
          <source>The character index of the nth boundary from the current position or &lt;code&gt;BreakIterator.DONE&lt;/code&gt; if either first or last text boundary has been reached.</source>
          <target state="translated">첫 번째 또는 마지막 텍스트 경계에 도달 한 경우 현재 위치 또는 &lt;code&gt;BreakIterator.DONE&lt;/code&gt; 에서 n 번째 경계의 문자 색인입니다 .</target>
        </trans-unit>
        <trans-unit id="2e9038b2d54c15a81fe437312a391d350ec427b8" translate="yes" xml:space="preserve">
          <source>The character index of the previous text boundary or &lt;code&gt;BreakIterator.DONE&lt;/code&gt; if the current boundary is the first text boundary.</source>
          <target state="translated">이전 텍스트 경계의 문자 인덱스 또는 현재 경계가 첫 번째 텍스트 경계인 경우 &lt;code&gt;BreakIterator.DONE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85a238174f4550c34f72f6ae6bc1bc6a516a69c0" translate="yes" xml:space="preserve">
          <source>The character is one of the fullwidth lowercase Latin letters a (&lt;code&gt;'\uFF41'&lt;/code&gt;) through z (&lt;code&gt;'\uFF5A'&lt;/code&gt;) and its code is less than &lt;code&gt;radix + '\uFF41' - 10&lt;/code&gt;. In this case, &lt;code&gt;ch - '\uFF41' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">문자는 전각 소문자 라틴 문자 a ( &lt;code&gt;'\uFF41'&lt;/code&gt; ) ~ z ( &lt;code&gt;'\uFF5A'&lt;/code&gt; ) 중 하나이며 코드는 &lt;code&gt;radix + '\uFF41' - 10&lt;/code&gt; 보다 작습니다 . 이 경우 &lt;code&gt;ch - '\uFF41' + 10&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="393a621e1493451e2055126ad0ce9ab6f642949f" translate="yes" xml:space="preserve">
          <source>The character is one of the fullwidth lowercase Latin letters a (&lt;code&gt;'\uFF41'&lt;/code&gt;) through z (&lt;code&gt;'\uFF5A'&lt;/code&gt;) and its code is less than &lt;code&gt;radix + '\uFF41'- 10&lt;/code&gt;. In this case, &lt;code&gt;codePoint - '\uFF41' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">문자는 전각 소문자 라틴 문자 a ( &lt;code&gt;'\uFF41'&lt;/code&gt; )에서 z ( &lt;code&gt;'\uFF5A'&lt;/code&gt; ) 중 하나이며 코드는 &lt;code&gt;radix + '\uFF41'- 10&lt;/code&gt; 보다 작습니다 . 이 경우 &lt;code&gt;codePoint - '\uFF41' + 10&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="57d9c7164d71a3374ba8edd927a1bf0f75b1189e" translate="yes" xml:space="preserve">
          <source>The character is one of the fullwidth uppercase Latin letters A (&lt;code&gt;'\uFF21'&lt;/code&gt;) through Z (&lt;code&gt;'\uFF3A'&lt;/code&gt;) and its code is less than &lt;code&gt;radix + '\uFF21' - 10&lt;/code&gt;. In this case, &lt;code&gt;ch - '\uFF21' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">문자는 대문자 대문자 라틴 문자 A ( &lt;code&gt;'\uFF21'&lt;/code&gt; )에서 Z ( &lt;code&gt;'\uFF3A'&lt;/code&gt; ) 중 하나이며 코드는 &lt;code&gt;radix + '\uFF21' - 10&lt;/code&gt; 보다 작습니다 . 이 경우 &lt;code&gt;ch - '\uFF21' + 10&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="732e1fdb20043b7a30607a5f809fab9e87fcf502" translate="yes" xml:space="preserve">
          <source>The character is one of the fullwidth uppercase Latin letters A (&lt;code&gt;'\uFF21'&lt;/code&gt;) through Z (&lt;code&gt;'\uFF3A'&lt;/code&gt;) and its code is less than &lt;code&gt;radix + '\uFF21' - 10&lt;/code&gt;. In this case, &lt;code&gt;codePoint - '\uFF21' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">문자는 대문자 대문자 라틴 문자 A ( &lt;code&gt;'\uFF21'&lt;/code&gt; )에서 Z ( &lt;code&gt;'\uFF3A'&lt;/code&gt; ) 중 하나이며 코드는 &lt;code&gt;radix + '\uFF21' - 10&lt;/code&gt; 보다 작습니다 . 이 경우 &lt;code&gt;codePoint - '\uFF21' + 10&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1eb711d346697b7b7850b866e9e676aabf15ad34" translate="yes" xml:space="preserve">
          <source>The character is one of the lowercase Latin letters &lt;code&gt;'a'&lt;/code&gt; through &lt;code&gt;'z'&lt;/code&gt; and its code is less than &lt;code&gt;radix + 'a' - 10&lt;/code&gt;. In this case, &lt;code&gt;ch - 'a' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">문자는 라틴 소문자 중 하나 인 &lt;code&gt;'a'&lt;/code&gt; 를 통해 &lt;code&gt;'z'&lt;/code&gt; 와 그 코드 미만이다 &lt;code&gt;radix + 'a' - 10&lt;/code&gt; . 이 경우 &lt;code&gt;ch - 'a' + 10&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d4985c1ad0a3e0ebca4f21ca205a752bc0f9e0b1" translate="yes" xml:space="preserve">
          <source>The character is one of the lowercase Latin letters &lt;code&gt;'a'&lt;/code&gt; through &lt;code&gt;'z'&lt;/code&gt; and its code is less than &lt;code&gt;radix + 'a' - 10&lt;/code&gt;. In this case, &lt;code&gt;codePoint - 'a' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">문자는 라틴 소문자 중 하나 인 &lt;code&gt;'a'&lt;/code&gt; 를 통해 &lt;code&gt;'z'&lt;/code&gt; 와 그 코드 미만이다 &lt;code&gt;radix + 'a' - 10&lt;/code&gt; . 이 경우 &lt;code&gt;codePoint - 'a' + 10&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="68f10c8de5bc4401e5a790943a291b720bd020f5" translate="yes" xml:space="preserve">
          <source>The character is one of the uppercase Latin letters &lt;code&gt;'A'&lt;/code&gt; through &lt;code&gt;'Z'&lt;/code&gt; and its code is less than &lt;code&gt;radix + 'A' - 10&lt;/code&gt;. In this case, &lt;code&gt;ch - 'A' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">문자는 라틴 대문자 중 하나 인 &lt;code&gt;'A'&lt;/code&gt; 를 통해 &lt;code&gt;'Z'&lt;/code&gt; 와 그 코드 미만이다 &lt;code&gt;radix + 'A' - 10&lt;/code&gt; . 이 경우 &lt;code&gt;ch - 'A' + 10&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6fe9401de4bc97d32c2a8728ad43d7b3a78b4e99" translate="yes" xml:space="preserve">
          <source>The character is one of the uppercase Latin letters &lt;code&gt;'A'&lt;/code&gt; through &lt;code&gt;'Z'&lt;/code&gt; and its code is less than &lt;code&gt;radix + 'A' - 10&lt;/code&gt;. In this case, &lt;code&gt;codePoint - 'A' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">문자는 라틴 대문자 중 하나 인 &lt;code&gt;'A'&lt;/code&gt; 를 통해 &lt;code&gt;'Z'&lt;/code&gt; 와 그 코드 미만이다 &lt;code&gt;radix + 'A' - 10&lt;/code&gt; . 이 경우 &lt;code&gt;codePoint - 'A' + 10&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e076b3a7eea32ed0dc7dc561e359383aa33f70c6" translate="yes" xml:space="preserve">
          <source>The character offset in the original text corresponding to the collation element that will be returned by the next call to next().</source>
          <target state="translated">다음 번에 next ()를 호출하여 반환되는 데이터 정렬 요소에 해당하는 원본 텍스트의 문자 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="4f6c553fcebe232a97d93a16c79fbcc14fc8b0ec" translate="yes" xml:space="preserve">
          <source>The character outlines are filled as indicated above under &lt;a href=&quot;#rendershape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt; operations&lt;/a&gt;.</source>
          <target state="translated">문자 윤곽선은 &lt;a href=&quot;#rendershape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; 작업에서&lt;/a&gt; 위에 표시된대로 채워집니다 .</target>
        </trans-unit>
        <trans-unit id="3a9b42a0d833d89c7e1ee55beda05f13b1e9a664" translate="yes" xml:space="preserve">
          <source>The character pair carriage return-line feed (CR-LF) means &quot;go to column 1 of the next line.&quot;</source>
          <target state="translated">문자 쌍 캐리지 리턴 라인 피드 (CR-LF)는 &quot;다음 라인의 1 열로 이동&quot;을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="b579f6aaeea5b3484a7d5e231a38a6bf7bee9f9b" translate="yes" xml:space="preserve">
          <source>The character read, as an integer in the range 0 to 65535 (&lt;code&gt;0x00-0xffff&lt;/code&gt;), or -1 if the end of the stream has been reached</source>
          <target state="translated">0에서 65535 ( &lt;code&gt;0x00-0xffff&lt;/code&gt; ) 범위의 정수로 읽은 문자 또는 스트림의 끝에 도달 한 경우 -1</target>
        </trans-unit>
        <trans-unit id="b93b563951bc4c436a534356e0d109368effc806" translate="yes" xml:space="preserve">
          <source>The character read, or -1 if the end of the stream has been reached</source>
          <target state="translated">읽은 문자 또는 스트림의 끝에 도달 한 경우 -1</target>
        </trans-unit>
        <trans-unit id="062f61a88c5bf0196c78c2d594f19eddc5f72256" translate="yes" xml:space="preserve">
          <source>The character sequence &lt;code&gt;\b&lt;/code&gt; does</source>
          <target state="translated">문자 시퀀스 &lt;code&gt;\b&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="703dc856fffc1553773b2e4aaa4dcea5eb152f1f" translate="yes" xml:space="preserve">
          <source>The character sequence must not be modified until the &lt;code&gt;CompletableFuture&lt;/code&gt; returned from this method has completed.</source>
          <target state="translated">이 메서드에서 반환 된 &lt;code&gt;CompletableFuture&lt;/code&gt; 가 완료 될 때까지 문자 시퀀스를 수정해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="520302b6502eda745dea8b408d47b01c64d806b1" translate="yes" xml:space="preserve">
          <source>The character stream shall not include a byte order mark.</source>
          <target state="translated">문자 스트림은 바이트 순서 표시를 포함하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="d030fffe75db9d3054a32099cf89361ef6145242" translate="yes" xml:space="preserve">
          <source>The character stream that was set with setReader, or null if setReader or the Reader constructor was not called.</source>
          <target state="translated">setReader로 설정된 문자 스트림. setReader 또는 Reader 생성자가 호출되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="0ef31aca4c6b3c377a869e55d96e7a48d9da70e4" translate="yes" xml:space="preserve">
          <source>The character stream that was set with setWriter, or null if setWriter or the Writer constructor was not called.</source>
          <target state="translated">setWriter로 설정된 문자 스트림. setWriter 또는 Writer 생성자가 호출되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="181146e59244eecb57af67b761c04a714d0bd1e3" translate="yes" xml:space="preserve">
          <source>The character stream, or null if none was supplied.</source>
          <target state="translated">문자 스트림. 제공되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="11959f2e3bfff894e61388267b4d1d1ae5d3c0ba" translate="yes" xml:space="preserve">
          <source>The character used for the decimal point,</source>
          <target state="translated">소수점에 사용되는 문자</target>
        </trans-unit>
        <trans-unit id="54a8a31a27f0561fd4d1442ec2d72b795702bba8" translate="yes" xml:space="preserve">
          <source>The character used to represent a decimal point may vary by culture. This method specifies the character to use.</source>
          <target state="translated">소수점을 나타내는 데 사용되는 문자는 문화권에 따라 다를 수 있습니다. 이 방법은 사용할 문자를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b22f85c7da2590e363e7946610cf7ddeef47bdd8" translate="yes" xml:space="preserve">
          <source>The character used to represent a negative number may vary by culture. This method specifies the character to use.</source>
          <target state="translated">음수를 나타내는 데 사용되는 문자는 문화에 따라 다를 수 있습니다. 이 방법은 사용할 문자를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c3ef2b6ccf9ecfa410067e8549aece2c7416b126" translate="yes" xml:space="preserve">
          <source>The character used to represent a positive number may vary by culture. This method specifies the character to use.</source>
          <target state="translated">양수를 나타내는 데 사용되는 문자는 문화에 따라 다를 수 있습니다. 이 방법은 사용할 문자를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="26f9cc43b601122c17d2fd77c4849184eb0350df" translate="yes" xml:space="preserve">
          <source>The character used to represent digits may vary by culture. This method specifies the zero character to use, which implies the characters for one to nine.</source>
          <target state="translated">숫자를 나타내는 데 사용되는 문자는 문화에 따라 다를 수 있습니다. 이 방법은 사용할 0 문자를 지정합니다. 1에서 9까지의 문자를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a005f0c7035b2bf5efb6b65407b084e0584a607c" translate="yes" xml:space="preserve">
          <source>The character used to separate thousands groups,</source>
          <target state="translated">수천 그룹을 분리하는 데 사용되는 캐릭터</target>
        </trans-unit>
        <trans-unit id="722bba4da3817532e1483dc8e58474bb30ced17f" translate="yes" xml:space="preserve">
          <source>The character with Unicode character name</source>
          <target state="translated">유니 코드 문자 이름을 가진 문자</target>
        </trans-unit>
        <trans-unit id="1edb505c87a80b6cf210744640fa626208a69fbc" translate="yes" xml:space="preserve">
          <source>The character with hexadecimal value &lt;code&gt;0x&lt;/code&gt;</source>
          <target state="translated">16 진수 값이 &lt;code&gt;0x&lt;/code&gt; 인 문자</target>
        </trans-unit>
        <trans-unit id="c84b095cdf29086ff619529958524051e0271274" translate="yes" xml:space="preserve">
          <source>The character with octal value &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">8 진 값이 &lt;code&gt;0&lt;/code&gt; 인 문자</target>
        </trans-unit>
        <trans-unit id="231dc1e1b18639700a12a25bbd2a2a272ff1fa38" translate="yes" xml:space="preserve">
          <source>The character-to-digit mapping is provided by &lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt;&lt;code&gt;Character.digit(char, int)&lt;/code&gt;&lt;/a&gt; set to convert to radix 10. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">문자 대 숫자 매핑은 기수 10으로 변환하도록 설정된 &lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt; &lt;code&gt;Character.digit(char, int)&lt;/code&gt; &lt;/a&gt; 의해 제공됩니다 . 문자열에는 관련없는 문자 (예 : 공백)가 포함될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="82172894cc0762c353026f8ba1c885f10551b86a" translate="yes" xml:space="preserve">
          <source>The character-to-digit mapping is provided by &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt;&lt;code&gt;Character.digit(char, int)&lt;/code&gt;&lt;/a&gt; set to convert to radix 10. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">문자 대 숫자 맵핑은 기수 10으로 변환하도록 설정된 &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt; &lt;code&gt;Character.digit(char, int)&lt;/code&gt; &lt;/a&gt; 의해 제공됩니다 . 문자열에는 외부 문자 (예 : 공백)가 포함될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8f4bb0757c762aa0af3f827ae218712137600c6b" translate="yes" xml:space="preserve">
          <source>The characteristics of a given spliterator before splitting may differ from the characteristics after splitting. For specific examples see the characteristic values &lt;a href=&quot;#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#CONCURRENT&quot;&gt;&lt;code&gt;CONCURRENT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">분할 전 주어진 분할 자의 특성은 분할 후의 특성과 다를 수 있습니다. 구체적으로는 참조 특성치는 &lt;a href=&quot;#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#CONCURRENT&quot;&gt; &lt;code&gt;CONCURRENT&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="435d5181f703f0ee95ddc2bbae114562f2df9834" translate="yes" xml:space="preserve">
          <source>The characteristics of a given spliterator before splitting may differ from the characteristics after splitting. For specific examples see the characteristic values &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#CONCURRENT&quot;&gt;&lt;code&gt;CONCURRENT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">분할 전 주어진 스플리터의 특성은 분할 후의 특성과 다를 수 있습니다. 구체적으로는 참조 특성치는 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;spliterator#CONCURRENT&quot;&gt; &lt;code&gt;CONCURRENT&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ab6b7294df45ceef62a80e9cea125eac0330917" translate="yes" xml:space="preserve">
          <source>The characters are white space (see [XML], 2.10 &quot;White Space Handling&quot;).</source>
          <target state="translated">문자는 공백입니다 ([XML], 2.10 &quot;공백 처리&quot;참조).</target>
        </trans-unit>
        <trans-unit id="d4c239d068f43613e278b2404d04072112a6d4fc" translate="yes" xml:space="preserve">
          <source>The characters are white space (see [XML], 2.10 &quot;White Space Handling&quot;). Events are only reported as SPACE if they are ignorable white space. Otherwise they are reported as CHARACTERS.</source>
          <target state="translated">문자는 공백입니다 ([XML], 2.10 &quot;공백 처리&quot;참조). 이벤트는 무시할 수있는 공백 인 경우에만 SPACE로보고됩니다. 그렇지 않으면 CHARACTERS로보고됩니다.</target>
        </trans-unit>
        <trans-unit id="28dbbf3eadec14e8427d691728ace1fef26d6786" translate="yes" xml:space="preserve">
          <source>The characters in the string &lt;code&gt;&quot;,;:$&amp;amp;+=&quot;&lt;/code&gt;</source>
          <target state="translated">문자열 &lt;code&gt;&quot;,;:$&amp;amp;+=&quot;&lt;/code&gt; 의 문자</target>
        </trans-unit>
        <trans-unit id="30cd469e4707a34de20913da0df9601ef8663134" translate="yes" xml:space="preserve">
          <source>The characters listed here are used in non-localized patterns. Localized patterns use the corresponding characters taken from this formatter's &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object instead, and these characters lose their special status. Two exceptions are the currency sign and quote, which are not localized.</source>
          <target state="translated">여기에 나열된 문자는 지역화되지 않은 패턴으로 사용됩니다. 현지화 된 패턴은이 포맷터의 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 객체 에서 가져온 해당 문자를 대신 사용 하며이 문자는 특수 상태를 잃습니다. 현지화되지 않은 통화 부호와 따옴표는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="99f9de68302286576fe3ff6f67c73b8ba839df97" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;CharSequence&lt;/code&gt; argument are appended, in order, increasing the length of this sequence by the length of the argument.</source>
          <target state="translated">&lt;code&gt;CharSequence&lt;/code&gt; 인수 의 문자가 순서대로 추가 되어이 시퀀스의 길이가 인수의 길이만큼 증가합니다.</target>
        </trans-unit>
        <trans-unit id="131a3485d970889cbd1a189397eb208a790f9256" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;CharSequence&lt;/code&gt; argument are inserted, in order, into this sequence at the indicated offset, moving up any characters originally above that position and increasing the length of this sequence by the length of the argument s.</source>
          <target state="translated">&lt;code&gt;CharSequence&lt;/code&gt; 인수 의 문자는 표시된 오프셋에서이 시퀀스에 순서대로 삽입되어 해당 위치 위에있는 문자를 위로 이동하고이 시퀀스의 길이를 인수 s만큼 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="f293b85c86723e9d3bf915086157971fe6916192" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;String&lt;/code&gt; argument are appended, in order, increasing the length of this sequence by the length of the argument. If &lt;code&gt;str&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 인수 의 문자가 순서대로 추가되어이 시퀀스의 길이가 인수의 길이만큼 증가합니다. 경우 &lt;code&gt;str&lt;/code&gt; 있다 &lt;code&gt;null&lt;/code&gt; , 4 개 문자 &lt;code&gt;&quot;null&quot;&lt;/code&gt; 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="4608ed44802d04c08139f51bfa64aeda4d30bd74" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;String&lt;/code&gt; argument are inserted, in order, into this sequence at the indicated offset, moving up any characters originally above that position and increasing the length of this sequence by the length of the argument. If &lt;code&gt;str&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are inserted into this sequence.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 인수 의 문자는 표시된 오프셋에서이 순서로 순서대로 삽입되어 원래 해당 위치 위에있는 문자를 위로 이동시키고 인수의 길이만큼이 순서의 길이를 증가시킵니다. 경우 &lt;code&gt;str&lt;/code&gt; 있다 &lt;code&gt;null&lt;/code&gt; , 4 개 문자 &lt;code&gt;&quot;null&quot;&lt;/code&gt; 이 순서에 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="79d83c330c94a3aa502af5b18cdbaab8bce643e4" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;StringBuffer&lt;/code&gt; argument are appended, in order, to the contents of this &lt;code&gt;StringBuffer&lt;/code&gt;, increasing the length of this &lt;code&gt;StringBuffer&lt;/code&gt; by the length of the argument. If &lt;code&gt;sb&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended to this &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">의 문자 &lt;code&gt;StringBuffer&lt;/code&gt; 와의 인수는 이것의 내용을 순서대로 추가됩니다 &lt;code&gt;StringBuffer&lt;/code&gt; 를 이의 길이 증가, &lt;code&gt;StringBuffer&lt;/code&gt; 를을 인수의 길이. &lt;code&gt;sb&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 의 경우 , 4 개의 문자 &lt;code&gt;&quot;null&quot;&lt;/code&gt; 가이 &lt;code&gt;StringBuffer&lt;/code&gt; 에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="7edc50505e461cd6fdf61331e374acd6a8173601" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;StringBuffer&lt;/code&gt; argument are appended, in order, to this sequence, increasing the length of this sequence by the length of the argument. If &lt;code&gt;sb&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended to this sequence.</source>
          <target state="translated">&lt;code&gt;StringBuffer&lt;/code&gt; 인수 의 문자 가이 순서에 순서대로 추가 되어이 순서의 길이가 인수의 길이만큼 증가합니다. &lt;code&gt;sb&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 의 경우 , 이 순서에 4 개의 문자 &lt;code&gt;&quot;null&quot;&lt;/code&gt; 이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="5790ab1c515a529581222483c7c357bb2b14a2d7" translate="yes" xml:space="preserve">
          <source>The characters of the array argument are appended, in order, to the contents of this sequence. The length of this sequence increases by the length of the argument.</source>
          <target state="translated">배열 인수의 문자는이 순서의 내용에 순서대로 추가됩니다. 이 순서의 길이는 인수의 길이만큼 증가합니다.</target>
        </trans-unit>
        <trans-unit id="44ce3e7b31696b9d255c03623ddf7ab6eef4959a" translate="yes" xml:space="preserve">
          <source>The characters of the array argument are inserted into the contents of this sequence at the position indicated by &lt;code&gt;offset&lt;/code&gt;. The length of this sequence increases by the length of the argument.</source>
          <target state="translated">array 인수의 문자는 &lt;code&gt;offset&lt;/code&gt; 으로 표시된 위치에서이 시퀀스의 내용에 삽입됩니다 . 이 순서의 길이는 인수의 길이만큼 증가합니다.</target>
        </trans-unit>
        <trans-unit id="a2e130797df8bfbb83081b72694f55f678e4cdeb" translate="yes" xml:space="preserve">
          <source>The characters to be appended should be valid Unicode characters as described in &lt;a href=&quot;character#unicode&quot;&gt;Unicode Character Representation&lt;/a&gt;. Note that supplementary characters may be composed of multiple 16-bit &lt;code&gt;char&lt;/code&gt; values.</source>
          <target state="translated">추가 할 문자는 &lt;a href=&quot;character#unicode&quot;&gt;유니 코드 문자 표현에&lt;/a&gt; 설명 된대로 유효한 유니 코드 문자 여야합니다 . 보충 문자는 여러 16 비트 &lt;code&gt;char&lt;/code&gt; 값 으로 구성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2a2ed22fca7e3896fc3bc86e089e89c687ca7a5b" translate="yes" xml:space="preserve">
          <source>The chars between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the char at index</source>
          <target state="translated">버퍼의 현재 위치와 한계 (있는 경우) 사이의 문자가 버퍼의 시작 부분에 복사됩니다. 즉, 인덱스의 문자</target>
        </trans-unit>
        <trans-unit id="6128e80448b0188f85071bb3edbcecfd33c87c6a" translate="yes" xml:space="preserve">
          <source>The charset &quot;unicode&quot; is not well-defined. &quot;unicode&quot; implies a particular platform's implementation of Unicode, not a cross-platform implementation</source>
          <target state="translated">문자 세트 &quot;유니 코드&quot;가 잘 정의되지 않았습니다. &quot;유니 코드&quot;는 크로스 플랫폼 구현이 아닌 특정 플랫폼의 유니 코드 구현을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="2eb67236cbfc275c0a8a4f77193881e74832ba7b" translate="yes" xml:space="preserve">
          <source>The charset detected by this auto-detecting decoder, or &lt;code&gt;null&lt;/code&gt; if the charset has not yet been determined</source>
          <target state="translated">이 자동 검출 디코더로 검출 된 캐릭터 세트. 캐릭터 세트가 아직 결정되지 않은 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9bf522e403515c42a05b0e6a6281e1678fafb075" translate="yes" xml:space="preserve">
          <source>The charset used is the &lt;a href=&quot;../nio/charset/charset#defaultCharset()&quot;&gt;default charset&lt;/a&gt; for this instance of the Java virtual machine.</source>
          <target state="translated">사용 된 문자 &lt;a href=&quot;../nio/charset/charset#defaultCharset()&quot;&gt;세트&lt;/a&gt; 는이 Java 가상 머신 인스턴스에 대한 기본 문자 세트 입니다.</target>
        </trans-unit>
        <trans-unit id="024b1b6be1629de97b24774ad57c6eda0415a449" translate="yes" xml:space="preserve">
          <source>The charset used is the &lt;a href=&quot;../nio/charset/charset#defaultCharset--&quot;&gt;default charset&lt;/a&gt; for this instance of the Java virtual machine.</source>
          <target state="translated">사용 된 문자 &lt;a href=&quot;../nio/charset/charset#defaultCharset--&quot;&gt;세트&lt;/a&gt; 는이 Java 가상 머신 인스턴스의 기본 문자 세트 입니다.</target>
        </trans-unit>
        <trans-unit id="27c52d3d4af9cf537e83a0b9e73130183130379f" translate="yes" xml:space="preserve">
          <source>The check icon.</source>
          <target state="translated">체크 아이콘.</target>
        </trans-unit>
        <trans-unit id="c0a456a1576ddacef3768fa05e856a92c9cb556f" translate="yes" xml:space="preserve">
          <source>The child may have been removed from the view hierarchy.</source>
          <target state="translated">하위가 뷰 계층에서 제거되었을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c41c3114b7d8a252c53203b0408c37766a3abe07" translate="yes" xml:space="preserve">
          <source>The child may have been updated by a higher priority operation (i.e. the child may have become visible).</source>
          <target state="translated">하위가 더 높은 우선 순위 작업에 의해 업데이트되었을 수 있습니다 (예 : 하위가 표시되었을 수 있음).</target>
        </trans-unit>
        <trans-unit id="da0656ba3d8191056faf936bafe12efaf237139d" translate="yes" xml:space="preserve">
          <source>The child node before which the result nodes will be inserted.</source>
          <target state="translated">결과 노드가 삽입되기 전에 자식 노드입니다.</target>
        </trans-unit>
        <trans-unit id="62341cca1f132566b4380d71fb764695d802bba0" translate="yes" xml:space="preserve">
          <source>The children of a &lt;code&gt;DocumentFragment&lt;/code&gt; node are zero or more nodes representing the tops of any sub-trees defining the structure of the document. &lt;code&gt;DocumentFragment&lt;/code&gt; nodes do not need to be well-formed XML documents (although they do need to follow the rules imposed upon well-formed XML parsed entities, which can have multiple top nodes). For example, a &lt;code&gt;DocumentFragment&lt;/code&gt; might have only one child and that child node could be a &lt;code&gt;Text&lt;/code&gt; node. Such a structure model represents neither an HTML document nor a well-formed XML document.</source>
          <target state="translated">&lt;code&gt;DocumentFragment&lt;/code&gt; 노드 의 자식은 문서 의 구조를 정의하는 하위 트리 의 맨 위를 나타내는 0 개 이상의 노드입니다. &lt;code&gt;DocumentFragment&lt;/code&gt; 노드는 올바른 형식의 XML 문서 일 필요는 없습니다 (여러 최상위 노드를 가질 수있는 올바른 형식의 XML 구문 분석 된 엔티티에 적용되는 규칙을 따라야하지만). 예를 들어 &lt;code&gt;DocumentFragment&lt;/code&gt; 에는 자식이 하나만있을 수 있으며 해당 자식 노드는 &lt;code&gt;Text&lt;/code&gt; 노드 가 될 수 있습니다 . 그러한 구조 모델은 HTML 문서 나 잘 구성된 XML 문서를 나타내지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c8fd2435042ade2989834d385b33d7983d058f57" translate="yes" xml:space="preserve">
          <source>The children of an element must conform to one of a few simple patterns, described in the documentation for the &lt;code&gt;CHILD_*&lt;/code&gt; constants;</source>
          <target state="translated">요소의 자식은 &lt;code&gt;CHILD_*&lt;/code&gt; 상수 에 대한 설명서에 설명 된 몇 가지 간단한 패턴 중 하나를 따라야합니다 .</target>
        </trans-unit>
        <trans-unit id="5ed4829be2fc8be2f19b67a2fdfd7c5f6f6f875e" translate="yes" xml:space="preserve">
          <source>The choice should be made based on which makes the code more readable.</source>
          <target state="translated">코드를 더 읽기 쉽도록 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="79f74e45aaf7c0f85ebcbcdac20621c5958045d8" translate="yes" xml:space="preserve">
          <source>The chooserPanel array property name.</source>
          <target state="translated">chooserPanel 배열 속성 이름입니다.</target>
        </trans-unit>
        <trans-unit id="81abce803b2b576873096c050698e84ce7b2adb3" translate="yes" xml:space="preserve">
          <source>The chronology is determined. The chronology of the result is either the chronology that was parsed, or if no chronology was parsed, it is the chronology set on this class, or if that is null, it is &lt;code&gt;IsoChronology&lt;/code&gt;.</source>
          <target state="translated">연대기가 결정됩니다. 결과의 연대기는 구문 분석 된 연대기이거나 구문 분석되지 않은 경우이 클래스에 설정된 연대기이거나, null 인 경우 &lt;code&gt;IsoChronology&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a16292e267ee8e923f5ad107d6d91fc2c30e6c22" translate="yes" xml:space="preserve">
          <source>The chronology may be a system chronology or a chronology provided by the application via ServiceLoader configuration.</source>
          <target state="translated">연대기는 시스템 연대기 또는 ServiceLoader 구성을 통해 응용 프로그램에서 제공 한 연대기 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de1734dbd2ea904560b6d9da0267c5e3bc7d2d75" translate="yes" xml:space="preserve">
          <source>The chronology of the first date is used. The chronology of the second date is ignored, with the date being converted to the target chronology system before the calculation starts.</source>
          <target state="translated">첫 번째 날짜의 연대기가 사용됩니다. 두 번째 날짜의 연대기는 무시되고 계산이 시작되기 전에 날짜가 대상 연대기 시스템으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="77c2678fd3eab80325fb8588b7d1ef1c45ba73ba" translate="yes" xml:space="preserve">
          <source>The chunk-length when using chunked encoding streaming mode for output.</source>
          <target state="translated">출력에 청크 인코딩 스트리밍 모드를 사용할 때 청크 길이입니다.</target>
        </trans-unit>
        <trans-unit id="782f61b1130e60fa0fb037f8e4955382779eb421" translate="yes" xml:space="preserve">
          <source>The chunk-length when using chunked encoding streaming mode for output. A value of &lt;code&gt;-1&lt;/code&gt; means chunked encoding is disabled for output.</source>
          <target state="translated">출력에 청크 인코딩 스트리밍 모드를 사용할 때 청크 길이입니다. 값이 &lt;code&gt;-1&lt;/code&gt; 이면 청크 인코딩이 출력에 사용되지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="b625f56a9aa5a9cfd0dba0b4ba26b41f91c3d8d0" translate="yes" xml:space="preserve">
          <source>The cipher is initialized for one of the following four operations: encryption, decryption, key wrapping or key unwrapping, depending on the value of &lt;code&gt;opmode&lt;/code&gt;.</source>
          <target state="translated">암호는 &lt;code&gt;opmode&lt;/code&gt; 값에 따라 암호화, 암호 해독, 키 랩핑 또는 키 언 랩핑의 네 가지 작업 중 하나에 대해 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="173002f079d69036a5e31eb46675498add7c46e8" translate="yes" xml:space="preserve">
          <source>The cipher suite used is established by a negotiation process called &quot;handshaking&quot;. The goal of this process is to create or rejoin a &quot;session&quot;, which may protect many connections over time. After handshaking has completed, you can access session attributes by using the &lt;a href=&quot;#getSession()&quot;&gt;&lt;code&gt;getSession()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">사용되는 암호 스위트는 &quot;핸드 쉐이킹&quot;이라는 협상 프로세스에 의해 설정됩니다. 이 프로세스의 목표는 시간이 지남에 따라 많은 연결을 보호 할 수있는 &quot;세션&quot;을 만들거나 다시 참여하는 것입니다. 핸드 셰이 킹이 완료된 후 &lt;a href=&quot;#getSession()&quot;&gt; &lt;code&gt;getSession()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 세션 속성에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a7062f5c31a9aefcc821d9d0c94628fe97a3602f" translate="yes" xml:space="preserve">
          <source>The cipher suite used is established by a negotiation process called &quot;handshaking&quot;. The goal of this process is to create or rejoin a &quot;session&quot;, which may protect many connections over time. After handshaking has completed, you can access session attributes by using the &lt;a href=&quot;sslengine#getSession--&quot;&gt;&lt;code&gt;getSession()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">사용 된 암호 스위트는 &quot;핸드 셰이 킹&quot;이라는 협상 프로세스에 의해 설정됩니다. 이 프로세스의 목표는 시간이 지남에 따라 많은 연결을 보호 할 수있는 &quot;세션&quot;을 작성하거나 다시 참여시키는 것입니다. 핸드 쉐이킹이 완료되면 &lt;a href=&quot;sslengine#getSession--&quot;&gt; &lt;code&gt;getSession()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 세션 속성에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b4991f1ddbcd690dbea95abe4922ab873f65fad7" translate="yes" xml:space="preserve">
          <source>The cipher suite used is established by a negotiation process called &quot;handshaking&quot;. The goal of this process is to create or rejoin a &quot;session&quot;, which may protect many connections over time. After handshaking has completed, you can access session attributes by using the &lt;em&gt;getSession&lt;/em&gt; method. The initial handshake on this connection can be initiated in one of three ways:</source>
          <target state="translated">사용 된 암호 스위트는 &quot;핸드 셰이 킹&quot;이라는 협상 프로세스에 의해 설정됩니다. 이 프로세스의 목표는 시간이 지남에 따라 많은 연결을 보호 할 수있는 &quot;세션&quot;을 작성하거나 다시 참여시키는 것입니다. 핸드 쉐이킹이 완료되면 &lt;em&gt;getSession&lt;/em&gt; 메소드 를 사용하여 세션 속성에 액세스 할 수 있습니다 . 이 연결의 초기 핸드 셰이크는 다음 세 가지 방법 중 하나로 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83ac4045333504efe877655bdd2b37e50cb50200" translate="yes" xml:space="preserve">
          <source>The cipher suites must have been listed by getSupportedCipherSuites() as being supported. Following a successful call to this method, only suites listed in the &lt;code&gt;suites&lt;/code&gt; parameter are enabled for use.</source>
          <target state="translated">암호화 된 스위트는 getSupportedCipherSuites ()에 의해 지원되는 것으로 나열되어 있어야합니다. 이 메소드를 성공적으로 호출하면 &lt;code&gt;suites&lt;/code&gt; 매개 변수에 나열된 스위트 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1dff289b9d5493dc4b93e102227e4045f5c8b60" translate="yes" xml:space="preserve">
          <source>The circular buffer into which incoming data is placed.</source>
          <target state="translated">들어오는 데이터가 배치되는 순환 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="614cf5ba9f056fa7e5ca2805e4ef8d98f0bd7391" translate="yes" xml:space="preserve">
          <source>The class &lt;a href=&quot;httprequest.bodypublishers&quot;&gt;&lt;code&gt;BodyPublishers&lt;/code&gt;&lt;/a&gt; provides implementations of many common publishers. Alternatively, a custom &lt;code&gt;BodyPublisher&lt;/code&gt; implementation can be used.</source>
          <target state="translated">&lt;a href=&quot;httprequest.bodypublishers&quot;&gt; &lt;code&gt;BodyPublishers&lt;/code&gt; &lt;/a&gt; 클래스 는 많은 일반 게시자의 구현을 제공합니다. 또는 사용자 지정 &lt;code&gt;BodyPublisher&lt;/code&gt; 구현을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79591cc158e2d587f71e1a7c15b55cee4ffd047e" translate="yes" xml:space="preserve">
          <source>The class &lt;a href=&quot;httpresponse.bodyhandlers&quot;&gt;&lt;code&gt;BodyHandlers&lt;/code&gt;&lt;/a&gt; provides implementations of many common response handlers. Alternatively, a custom &lt;code&gt;BodyHandler&lt;/code&gt; implementation can be used.</source>
          <target state="translated">&lt;a href=&quot;httpresponse.bodyhandlers&quot;&gt; &lt;code&gt;BodyHandlers&lt;/code&gt; &lt;/a&gt; 클래스 는 많은 공통 응답 핸들러의 구현을 제공합니다. 또는 사용자 지정 &lt;code&gt;BodyHandler&lt;/code&gt; 구현을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2f5972a5da0630a3ea1ce16a259ac7e2bc027c1" translate="yes" xml:space="preserve">
          <source>The class &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt; contains &lt;a href=&quot;methodhandle#sigpoly&quot;&gt;signature polymorphic methods&lt;/a&gt; which can be linked regardless of their type descriptor. Normally, method linkage requires exact matching of type descriptors.</source>
          <target state="translated">&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt; 클래스 에는 형식 설명자와 관계없이 연결할 수있는 &lt;a href=&quot;methodhandle#sigpoly&quot;&gt;서명 다형성 메서드&lt;/a&gt; 가 포함되어 있습니다 . 일반적으로 메서드 연결에는 형식 설명자와 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="eab9997c80610f9c64f20b81263d0bcfad837f30" translate="yes" xml:space="preserve">
          <source>The class &lt;a href=&quot;requiredmodelmbean&quot;&gt;&lt;code&gt;RequiredModelMBean&lt;/code&gt;&lt;/a&gt; provides a standard Model MBean implementation.</source>
          <target state="translated">&lt;a href=&quot;requiredmodelmbean&quot;&gt; &lt;code&gt;RequiredModelMBean&lt;/code&gt; &lt;/a&gt; 클래스 는 표준 Model MBean 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e2db3d1c22a729a290e85045bcd4bfe1eb80a35a" translate="yes" xml:space="preserve">
          <source>The class &lt;a href=&quot;streamsupport&quot;&gt;&lt;code&gt;StreamSupport&lt;/code&gt;&lt;/a&gt; has a number of low-level methods for creating a stream, all using some form of a &lt;a href=&quot;../spliterator&quot;&gt;&lt;code&gt;Spliterator&lt;/code&gt;&lt;/a&gt;. A spliterator is the parallel analogue of an &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;; it describes a (possibly infinite) collection of elements, with support for sequentially advancing, bulk traversal, and splitting off some portion of the input into another spliterator which can be processed in parallel. At the lowest level, all streams are driven by a spliterator.</source>
          <target state="translated">&lt;a href=&quot;streamsupport&quot;&gt; &lt;code&gt;StreamSupport&lt;/code&gt; &lt;/a&gt; 클래스 에는 스트림을 작성하기위한 여러 가지 저수준 메소드가 있으며 모두 &lt;a href=&quot;../spliterator&quot;&gt; &lt;code&gt;Spliterator&lt;/code&gt; &lt;/a&gt; 형식을 사용합니다 . 스플리터는 &lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 의 병렬 아날로그입니다 . 그것은 순차적으로 전진, 대량 순회, 그리고 입력의 일부를 병렬로 처리 될 수있는 다른 스플리터로 분리하는 것을 지원하는 (아마도 무한한) 요소들의 집합을 기술한다. 가장 낮은 수준에서 모든 스트림은 스플리터로 구동됩니다.</target>
        </trans-unit>
        <trans-unit id="bc13dbbc594701f7f20cadcc07caf6f91d3d0815" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;AWTEventMonitor&lt;/code&gt; implements a suite of listeners that are conditionally installed on every AWT component instance in the Java Virtual Machine.</source>
          <target state="translated">&lt;code&gt;AWTEventMonitor&lt;/code&gt; 클래스 는 Java Virtual Machine의 모든 AWT 구성 요소 인스턴스에 조건부로 설치된 리스너 모음을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="0a5539de3a3c369e368209a3ab110860ebb87790" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;AccessibilityEventMonitor&lt;/code&gt; implements a PropertyChange listener on every UI object that implements interface &lt;code&gt;Accessible&lt;/code&gt; in the Java Virtual Machine.</source>
          <target state="translated">&lt;code&gt;AccessibilityEventMonitor&lt;/code&gt; 클래스 는 Java Virtual Machine에서 &lt;code&gt;Accessible&lt;/code&gt; 인터페이스를 구현하는 모든 UI 객체에 PropertyChange 리스너를 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="684f89869c3a9936722182499d56cdcd4cbcf40a" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Date&lt;/code&gt; represents a specific instant in time, with millisecond precision.</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; 클래스 는 특정 순간을 밀리 초 단위로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8a6d064d4ecc74cc1e43b31f7ed128b2048d5c2f" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;EventQueueMonitor&lt;/code&gt; provides key core functionality for Assistive Technologies (and other system-level technologies that need some of the same things that Assistive Technology needs).</source>
          <target state="translated">&lt;code&gt;EventQueueMonitor&lt;/code&gt; 클래스 는 보조 기술 (및 보조 기술에 필요한 것과 동일한 일부가 필요한 기타 시스템 수준 기술)에 대한 핵심 핵심 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f304ba88bc19705d6cbe2036bbfe4f2d2fdb0d77" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Exception&lt;/code&gt; and any subclasses that are not also subclasses of &lt;a href=&quot;runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; are &lt;em&gt;checked exceptions&lt;/em&gt;. Checked exceptions need to be declared in a method or constructor's &lt;code&gt;throws&lt;/code&gt; clause if they can be thrown by the execution of the method or constructor and propagate outside the method or constructor boundary.</source>
          <target state="translated">클래스 &lt;code&gt;Exception&lt;/code&gt; 도의 서브 클래스 아니며, 서브 클래스 &lt;a href=&quot;runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt; 되는 &lt;em&gt;예외를 확인&lt;/em&gt; . 확인 된 예외는 메소드 또는 생성자의 실행으로 발생하고 메소드 또는 생성자 경계 외부로 전파 될 수있는 경우 메소드 또는 생성자의 &lt;code&gt;throws&lt;/code&gt; 절 에서 선언해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b63ddbb8255c4c5cc301a4d4eeaca5eac941924c" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Exception&lt;/code&gt; and its subclasses are a form of &lt;code&gt;Throwable&lt;/code&gt; that indicates conditions that a reasonable application might want to catch.</source>
          <target state="translated">&lt;code&gt;Exception&lt;/code&gt; 클래스 와 그 서브 클래스는 합리적인 응용 프로그램이 잡을 수있는 조건을 나타내는 &lt;code&gt;Throwable&lt;/code&gt; 형식입니다 .</target>
        </trans-unit>
        <trans-unit id="690c5f3da265a415109fd3011e41d9d5ea3c3c22" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;FilterOutputStream&lt;/code&gt; itself simply overrides all methods of &lt;code&gt;OutputStream&lt;/code&gt; with versions that pass all requests to the underlying output stream. Subclasses of &lt;code&gt;FilterOutputStream&lt;/code&gt; may further override some of these methods as well as provide additional methods and fields.</source>
          <target state="translated">&lt;code&gt;FilterOutputStream&lt;/code&gt; 클래스 자체는 단순히 모든 요청을 기본 출력 스트림으로 전달하는 버전 으로 &lt;code&gt;OutputStream&lt;/code&gt; 의 모든 메소드를 대체 합니다. &lt;code&gt;FilterOutputStream&lt;/code&gt; 의 서브 클래스는 이러한 메소드 중 일부를 추가로 재정의하고 추가 메소드 및 필드를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="414fe30b18cfd07334d7b5869c1668b0e29afc18" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;GUIInitializedMulticaster&lt;/code&gt; is used to maintain a list of &lt;code&gt;GUIInitializedListener&lt;/code&gt; classes which are used by the &lt;code&gt;EventQueueMonitor&lt;/code&gt; class to notify an interested party when the GUI subsystem has been initialized. Note that this class is intended to be used primarily for internal support in the &lt;code&gt;EventQueueMonitor&lt;/code&gt; class, and is not intended to be used by classes outside the Java Accessibility Utility package.</source>
          <target state="translated">클래스 &lt;code&gt;GUIInitializedMulticaster&lt;/code&gt; 는 목록을 유지하는 데 사용되는 &lt;code&gt;GUIInitializedListener&lt;/code&gt; 에 의해 사용되는 클래스 &lt;code&gt;EventQueueMonitor&lt;/code&gt; 의 GUI를 서브 시스템이 초기화 된 때 이해 관계인에게 통지 클래스를. 이 클래스는 주로 &lt;code&gt;EventQueueMonitor&lt;/code&gt; 클래스의 내부 지원 을 위해 사용되며 Java Accessibility Utility 패키지 외부의 클래스에서 사용하기위한 것이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="aa85724edba155c1163af251f7e5b2a8e32a3730" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Math&lt;/code&gt; contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions.</source>
          <target state="translated">&lt;code&gt;Math&lt;/code&gt; 클래스 에는 기본 지수, 로그, 제곱근 및 삼각 함수와 같은 기본 숫자 연산을 수행하기위한 메소드가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1a0cb7c448078442d89f1a37fe7dd237cc2a88e" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Math&lt;/code&gt; provides commonly used mathematical functions such as sine, cosine, and square root. The classes &lt;code&gt;
 String&lt;/code&gt;, &lt;code&gt;StringBuffer&lt;/code&gt;, and &lt;code&gt;StringBuilder&lt;/code&gt; similarly provide commonly used operations on character strings.</source>
          <target state="translated">&lt;code&gt;Math&lt;/code&gt; 클래스 는 사인, 코사인 및 제곱근과 같이 일반적으로 사용되는 수학 함수를 제공합니다. &lt;code&gt; String&lt;/code&gt; , &lt;code&gt;StringBuffer&lt;/code&gt; 및 &lt;code&gt;StringBuilder&lt;/code&gt; 클래스는 유사하게 문자열에 대해 일반적으로 사용되는 작업을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e1871b5ab32d2e12a446537bb7460fb5726d74b1" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Math&lt;/code&gt; provides commonly used mathematical functions such as sine, cosine, and square root. The classes &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;StringBuffer&lt;/code&gt;, and &lt;code&gt;StringBuilder&lt;/code&gt; similarly provide commonly used operations on character strings.</source>
          <target state="translated">&lt;code&gt;Math&lt;/code&gt; 클래스 는 사인, 코사인 및 제곱근과 같이 일반적으로 사용되는 수학 함수를 제공합니다. &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;StringBuffer&lt;/code&gt; 및 &lt;code&gt;StringBuilder&lt;/code&gt; 클래스는 문자열 에서 일반적으로 사용되는 작업을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3791863b130a0f270b24ef71c5a66eb3739e86ed" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Object&lt;/code&gt; does not itself implement the interface &lt;code&gt;Cloneable&lt;/code&gt;, so calling the &lt;code&gt;clone&lt;/code&gt; method on an object whose class is &lt;code&gt;Object&lt;/code&gt; will result in throwing an exception at run time.</source>
          <target state="translated">클래스 &lt;code&gt;Object&lt;/code&gt; 자체는 &lt;code&gt;Cloneable&lt;/code&gt; 인터페이스를 구현하지 않으므로 클래스가 &lt;code&gt;Object&lt;/code&gt; 인 오브젝트 에서 &lt;code&gt;clone&lt;/code&gt; 메소드를 호출하면 런타임시 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0624cc2712e980f0b92fbdb7083e89abc8924f4c" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;StrictMath&lt;/code&gt; contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions.</source>
          <target state="translated">&lt;code&gt;StrictMath&lt;/code&gt; 클래스 에는 기본 지수, 로그, 제곱근 및 삼각 함수와 같은 기본 숫자 연산을 수행하기위한 메소드가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0402c5931dd701f0cf78b33e69e39d00d48ee21d" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;String&lt;/code&gt; includes methods for examining individual characters of the sequence, for comparing strings, for searching strings, for extracting substrings, and for creating a copy of a string with all characters translated to uppercase or to lowercase. Case mapping is based on the Unicode Standard version specified by the &lt;a href=&quot;character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 클래스 에는 시퀀스의 개별 문자를 검사하고, 문자열을 비교하고, 문자열을 검색하고, 하위 문자열을 추출하고, 모든 문자가 대문자 또는 소문자로 변환 된 문자열의 사본을 작성하기위한 메소드가 포함되어 있습니다. 대소 &lt;a href=&quot;character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt; 매핑은 Character 클래스에서 지정한 유니 코드 표준 버전을 기반으로합니다 .</target>
        </trans-unit>
        <trans-unit id="80143e8afecc78bd12223d3f72b7f11e99582efa" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;SwingEventMonitor&lt;/code&gt; extends &lt;code&gt;AWTEventMonitor&lt;/code&gt; by adding a suite of listeners conditionally installed on every Swing component instance in the Java Virtual Machine.</source>
          <target state="translated">&lt;code&gt;SwingEventMonitor&lt;/code&gt; 클래스 는 Java Virtual Machine의 모든 Swing 구성 요소 인스턴스에 조건부로 설치된 리스너 세트를 추가하여 &lt;code&gt;AWTEventMonitor&lt;/code&gt; 를 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="4f0e14063482da03a9517e0315c86c6d5e0da2a1" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;ThreadDeath&lt;/code&gt; is specifically a subclass of &lt;code&gt;Error&lt;/code&gt; rather than &lt;code&gt;Exception&lt;/code&gt;, even though it is a &quot;normal occurrence&quot;, because many applications catch all occurrences of &lt;code&gt;Exception&lt;/code&gt; and then discard the exception.</source>
          <target state="translated">많은 어플리케이션이 &lt;code&gt;Exception&lt;/code&gt; 의 모든 발생을 포착하고 예외 를 버리기 때문에 &lt;code&gt;ThreadDeath&lt;/code&gt; 클래스 는 &quot;정상 발생&quot;이지만 &lt;code&gt;Exception&lt;/code&gt; 이 아닌 &lt;code&gt;Error&lt;/code&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="0c94af1c0242c797fd9816041000e11695d87fd6" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;TopLevelWindowMulticaster&lt;/code&gt; is used to maintain a list of &lt;code&gt;TopLevelWindowListener&lt;/code&gt; classes which are used by the &lt;code&gt;EventQueueMonitor&lt;/code&gt; class to notify an interested party when a top level window is created or destroyed in the Java Virtual Machine Note that this class is intended to be used primarily for internal support in the &lt;code&gt;EventQueueMonitor&lt;/code&gt; class, and is not intended to be used by classes outside the Java Accessibility Utility package.</source>
          <target state="translated">클래스 &lt;code&gt;TopLevelWindowMulticaster&lt;/code&gt; 는 목록을 유지하는 데 사용되는 &lt;code&gt;TopLevelWindowListener&lt;/code&gt; 에 의해 사용되는 클래스 &lt;code&gt;EventQueueMonitor&lt;/code&gt; 의 최고 레벨 창을 만들거나이 클래스는 내부에 주로 사용하기위한 것입니다있는 자바 가상 머신 참고 파괴 될 때 이해 관계인에게 통지 클래스를 &lt;code&gt;EventQueueMonitor&lt;/code&gt; 클래스 에서 지원되며 Java Accessibility Utility 패키지 외부의 클래스에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="38d762473a35d6850145a9bede9ef982ef3b0ee0" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Translator&lt;/code&gt; provides a translation to interface &lt;code&gt;Accessible&lt;/code&gt; for objects that do not implement interface &lt;code&gt;Accessible&lt;/code&gt;.</source>
          <target state="translated">클래스 &lt;code&gt;Translator&lt;/code&gt; 인터페이스의 번역을 제공하는 &lt;code&gt;Accessible&lt;/code&gt; 인터페이스를 구현하지 않는 개체에 대한 &lt;code&gt;Accessible&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ed9f55caeaa2d309bd40ff62b6a14ba0f7f4c18" translate="yes" xml:space="preserve">
          <source>The class Authenticator represents an object that knows how to obtain authentication for a network connection.</source>
          <target state="translated">Authenticator 클래스는 네트워크 연결에 대한 인증을 얻는 방법을 알고있는 객체를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="73f3f95a1b4468727a1f47724f198e0b3a19ce9c" translate="yes" xml:space="preserve">
          <source>The class Authenticator represents an object that knows how to obtain authentication for a network connection. Usually, it will do this by prompting the user for information.</source>
          <target state="translated">Authenticator 클래스는 네트워크 연결에 대한 인증을 얻는 방법을 알고있는 객체를 나타냅니다. 일반적으로 사용자에게 정보를 묻는 메시지를 표시하여이 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="3ec0063817bf0bc470163e5295aa4de585ae7fe9" translate="yes" xml:space="preserve">
          <source>The class PasswordAuthentication is a data holder that is used by Authenticator.</source>
          <target state="translated">PasswordAuthentication 클래스는 Authenticator에서 사용하는 데이터 홀더입니다.</target>
        </trans-unit>
        <trans-unit id="5dab3bdf681d65e4650c5df8d97994c50a3f16e6" translate="yes" xml:space="preserve">
          <source>The class PasswordAuthentication is a data holder that is used by Authenticator. It is simply a repository for a user name and a password.</source>
          <target state="translated">PasswordAuthentication 클래스는 Authenticator에서 사용하는 데이터 홀더입니다. 단순히 사용자 이름과 비밀번호를 저장하는 저장소입니다.</target>
        </trans-unit>
        <trans-unit id="cd64afbe8c33eacaf935632da9801738700fd23f" translate="yes" xml:space="preserve">
          <source>The class also exposes various methods for discovery of available property and method names on classes and class instances, as well as access to per-class linkers using the &lt;a href=&quot;#getLinkerForClass(java.lang.Class)&quot;&gt;&lt;code&gt;getLinkerForClass(Class)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 클래스는 또한 클래스 및 클래스 인스턴스에서 사용 가능한 속성 및 메서드 이름을 검색하기위한 다양한 메서드를 제공하고 &lt;a href=&quot;#getLinkerForClass(java.lang.Class)&quot;&gt; &lt;code&gt;getLinkerForClass(Class)&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 클래스 별 링커에 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="26afb3f34e19b6dd2d9b7a7cbd9df2a19bd4ff5c" translate="yes" xml:space="preserve">
          <source>The class also has methods for reading files, streams, and URLs that contain standard MIDI file data or soundbanks. You can query the &lt;code&gt;MidiSystem&lt;/code&gt; for the format of a specified MIDI file.</source>
          <target state="translated">이 클래스에는 표준 MIDI 파일 데이터 또는 사운드 뱅크가 포함 된 파일, 스트림 및 URL을 읽는 방법도 있습니다. 지정된 MIDI 파일의 형식에 대해 &lt;code&gt;MidiSystem&lt;/code&gt; 을 쿼리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="8eec387ca6bcd129da5be587045e11a4e69c7d0e" translate="yes" xml:space="preserve">
          <source>The class also provides additional fields and methods for implementing a concrete calendar system outside the package. Those fields and methods are defined as &lt;code&gt;protected&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 패키지 외부의 구체적인 달력 시스템을 구현하기위한 추가 필드 및 메소드도 제공합니다. 이러한 필드와 방법은 &lt;code&gt;protected&lt;/code&gt; 로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="a83c31be57eb77d002f6fb8561dbfe1c5447ab07" translate="yes" xml:space="preserve">
          <source>The class also provides two methods to map between its constants and the corresponding Calendar constants.</source>
          <target state="translated">이 클래스는 상수와 해당 Calendar 상수간에 매핑하는 두 가지 방법도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="167f8ce2cd6f064aac9008cb6744c7584871b16a" translate="yes" xml:space="preserve">
          <source>The class attribute of the element.</source>
          <target state="translated">요소의 클래스 속성입니다.</target>
        </trans-unit>
        <trans-unit id="518e97216d08655d57b8ae3e5eb6ba45928eadd9" translate="yes" xml:space="preserve">
          <source>The class attribute of the element. This attribute has been renamed due to conflicts with the &quot;class&quot; keyword exposed by many languages. See the class attribute definition in HTML 4.0.</source>
          <target state="translated">요소의 클래스 속성입니다. 이 속성은 여러 언어에서 노출 된 &quot;class&quot;키워드와의 충돌로 인해 이름이 변경되었습니다. HTML 4.0의 클래스 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9d313501a82f92b26a3e6cf1bf80484b0ab03c45" translate="yes" xml:space="preserve">
          <source>The class contains unknown datatypes</source>
          <target state="translated">클래스에 알 수없는 데이터 유형이 포함되어 있습니다</target>
        </trans-unit>
        <trans-unit id="13d93d9b734d66221117665181f602c5532671b0" translate="yes" xml:space="preserve">
          <source>The class declares methods with the name given by &lt;code&gt;invokedName&lt;/code&gt;, and the signature given by &lt;code&gt;samMethodType&lt;/code&gt; and additional signatures given by &lt;code&gt;bridges&lt;/code&gt;</source>
          <target state="translated">이 클래스에 의해 주어진 이름을 가진 방법을 선언 &lt;code&gt;invokedName&lt;/code&gt; , 그리고에 의해 주어진 서명 &lt;code&gt;samMethodType&lt;/code&gt; 에 의해 주어진 추가 서명 &lt;code&gt;bridges&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b60cd2a193307541db7fa376009f616ad9f49e04" translate="yes" xml:space="preserve">
          <source>The class does not have an accessible no-arg constructor</source>
          <target state="translated">이 클래스에는 접근 가능한 no-arg 생성자가 없습니다.</target>
        </trans-unit>
        <trans-unit id="59b077bf044d1c55506d17e622df77c1410c77a1" translate="yes" xml:space="preserve">
          <source>The class extends &lt;a href=&quot;securelookupsupplier&quot;&gt;&lt;code&gt;SecureLookupSupplier&lt;/code&gt;&lt;/a&gt; for security-checked access to the &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; object it carries. This lookup should be used to find method handles to set as targets of the call site described by this descriptor.</source>
          <target state="translated">이 클래스 는 자신이 전달 하는 &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; 개체에 대한 보안 확인 액세스를 위해 &lt;a href=&quot;securelookupsupplier&quot;&gt; &lt;code&gt;SecureLookupSupplier&lt;/code&gt; &lt;/a&gt; 를 확장 합니다. 이 조회는이 설명자가 설명하는 호출 사이트의 대상으로 설정할 메서드 핸들을 찾는 데 사용되어야합니다.</target>
        </trans-unit>
        <trans-unit id="cff5ea3c8c8e7aecbb4dbea85724a31e5e8e8645" translate="yes" xml:space="preserve">
          <source>The class fingerprint that is set to indicate serialization compatibility since J2SE 1.4.</source>
          <target state="translated">J2SE 1.4 이후의 직렬화 호환성을 나타내도록 설정된 클래스 지문입니다.</target>
        </trans-unit>
        <trans-unit id="3e56e7ff07bb8781fefafcc3605938ed932d77d3" translate="yes" xml:space="preserve">
          <source>The class fingerprint that is set to indicate serialization compatibility with a previous version of the class.</source>
          <target state="translated">이전 버전의 클래스와의 직렬화 호환성을 나타내도록 설정된 클래스 지문입니다.</target>
        </trans-unit>
        <trans-unit id="a00aa6be9da30f0a48df242c586c275d828683b4" translate="yes" xml:space="preserve">
          <source>The class fingerprint that is set to indicate serialization compatibility.</source>
          <target state="translated">직렬화 호환성을 나타내도록 설정된 클래스 지문입니다.</target>
        </trans-unit>
        <trans-unit id="135e02082cd84a88b5861571042a7fe763a97717" translate="yes" xml:space="preserve">
          <source>The class implements a buffered output stream.</source>
          <target state="translated">이 클래스는 버퍼링 된 출력 스트림을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="8460a541a46a3829ad6445b112d205f85871207c" translate="yes" xml:space="preserve">
          <source>The class implements a buffered output stream. By setting up such an output stream, an application can write bytes to the underlying output stream without necessarily causing a call to the underlying system for each byte written.</source>
          <target state="translated">이 클래스는 버퍼링 된 출력 스트림을 구현합니다. 이러한 출력 스트림을 설정하면 응용 프로그램은 기록 된 각 바이트마다 기본 시스템을 호출하지 않고도 기본 출력 스트림에 바이트를 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dfc1a1ea31b195bebaa4b8045733e43e88ceaec" translate="yes" xml:space="preserve">
          <source>The class implements the interface named by the return type of &lt;code&gt;invokedType&lt;/code&gt; and any interfaces named by &lt;code&gt;markerInterfaces&lt;/code&gt;</source>
          <target state="translated">이 클래스는 &lt;code&gt;invokedType&lt;/code&gt; 의 반환 유형으로 명명 된 인터페이스와 &lt;code&gt;markerInterfaces&lt;/code&gt; 로 명명 된 모든 인터페이스를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="4d6705a53cda97bf2651a6b87e2017e005a77404" translate="yes" xml:space="preserve">
          <source>The class implies a maximum level of access permission, but the permissions may be additionally limited by the bitmask &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;, which controls whether non-public members can be accessed.</source>
          <target state="translated">클래스는 최대 수준의 액세스 권한을 의미하지만, 권한은 비 public 멤버에 액세스 할 수 있는지 여부를 제어 하는 비트 마스크 &lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; 에&lt;/a&gt; 의해 추가로 제한 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89aaf05f9154c5d639e3b220e9a279db91a285c9" translate="yes" xml:space="preserve">
          <source>The class implies a maximum level of access permission, but the permissions may be additionally limited by the bitmask &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;, which controls whether non-public members can be accessed.</source>
          <target state="translated">이 클래스는 최대 수준의 액세스 권한을 암시하지만 비트 마스크 &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; 에&lt;/a&gt; 의해 권한이 추가로 제한 될 수 있습니다. 비공개 멤버에 액세스 할 수 있는지 여부를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="07a936057fd298f90ef4620016e6ba3d49dac02a" translate="yes" xml:space="preserve">
          <source>The class is designed so that there's never more than one &lt;code&gt;Currency&lt;/code&gt; instance for any given currency. Therefore, there's no public constructor. You obtain a &lt;code&gt;Currency&lt;/code&gt; instance using the &lt;code&gt;getInstance&lt;/code&gt; methods.</source>
          <target state="translated">이 클래스는 주어진 통화에 대해 하나 이상의 &lt;code&gt;Currency&lt;/code&gt; 인스턴스 가 없도록 설계되었습니다 . 따라서 공개 생성자가 없습니다. &lt;code&gt;getInstance&lt;/code&gt; 를 사용하여 &lt;code&gt;Currency&lt;/code&gt; 인스턴스를 얻습니다. 메소드를 .</target>
        </trans-unit>
        <trans-unit id="4ba87f5fbbddbc4d6864e72595ed2ed1025acbc6" translate="yes" xml:space="preserve">
          <source>The class is examined for getters using the conventions &lt;a href=&quot;#naming-conv&quot;&gt;above&lt;/a&gt;. (Getters must be public instance methods.) If there are no getters, or if any getter has a type that is not convertible, then &lt;em&gt;J&lt;/em&gt; is not convertible.</source>
          <target state="translated">클래스는 &lt;a href=&quot;#naming-conv&quot;&gt;위&lt;/a&gt; 의 규칙을 사용하여 getter를 검사합니다 . (게터는 퍼블릭 인스턴스 메소드 여야합니다.) 게터가 없거나 변환 가능한 유형이없는 게터는 &lt;em&gt;J&lt;/em&gt; 를 변환 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0556140d639dee4aeced0e2d16ae076f246116ea" translate="yes" xml:space="preserve">
          <source>The class listens for component events.</source>
          <target state="translated">클래스는 구성 요소 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="cbeb5c64a7f821c5e507e34ceac6d354f6b329f5" translate="yes" xml:space="preserve">
          <source>The class listens for focus events.</source>
          <target state="translated">클래스는 포커스 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="282e26d8566ede0aa84b99a5e9533eb2324e2ea8" translate="yes" xml:space="preserve">
          <source>The class listens for property changed events.</source>
          <target state="translated">클래스는 속성 변경 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="90084390ddd75ee262a42b490ac6031708964d0a" translate="yes" xml:space="preserve">
          <source>The class listens for window events.</source>
          <target state="translated">클래스는 창 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="05bcd59f5760ca731c5e5d15e20de3accf563530" translate="yes" xml:space="preserve">
          <source>The class loader created by this method implements &lt;em&gt;direct delegation&lt;/em&gt; when loading classes from modules. If the &lt;a href=&quot;classloader#loadClass(java.lang.String,boolean)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method is invoked to load a class then it uses the package name of the class to map it to a module. This may be a module in this layer and hence defined to the same class loader. It may be a package in a module in a parent layer that is exported to one or more of the modules in this layer. The class loader delegates to the class loader of the module, throwing &lt;code&gt;
 ClassNotFoundException&lt;/code&gt; if not found by that class loader. When &lt;code&gt;loadClass&lt;/code&gt; is invoked to load classes that do not map to a module then it delegates to the parent class loader.</source>
          <target state="translated">이 메서드에 의해 생성 된 클래스 로더 는 모듈에서 클래스를로드 할 때 &lt;em&gt;직접 위임을&lt;/em&gt; 구현 합니다. 는 IF &lt;a href=&quot;classloader#loadClass(java.lang.String,boolean)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt; 메소드는 클래스의로드를 호출 다음은 모듈에 매핑 할 클래스의 패키지 이름을 사용합니다. 이것은이 계층의 모듈 일 수 있으므로 동일한 클래스 로더에 정의됩니다. 이 계층에있는 하나 이상의 모듈로 내 보내진 상위 계층의 모듈에있는 패키지 일 수 있습니다. 클래스 로더는 모듈의 클래스 로더에 위임하여 해당 클래스 로더에서 찾을 수없는 경우 &lt;code&gt; ClassNotFoundException&lt;/code&gt; 을 발생시킵니다. 모듈에 매핑되지 않는 클래스를로드하기 위해 &lt;code&gt;loadClass&lt;/code&gt; 가 호출 되면 부모 클래스 로더에 위임됩니다.</target>
        </trans-unit>
        <trans-unit id="cfbce1456f53eb48b9c1245f2e54ee3b686f7cc6" translate="yes" xml:space="preserve">
          <source>The class loader created by this method locates resources (&lt;a href=&quot;classloader#getResource(java.lang.String)&quot;&gt;&lt;code&gt;getResource&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;classloader#getResources(java.lang.String)&quot;&gt;&lt;code&gt;getResources&lt;/code&gt;&lt;/a&gt;, and other resource methods) in all modules in the layer before searching the parent class loader.</source>
          <target state="translated">이 메소드로 생성 된 클래스 로더는 상위 클래스 로더를 검색하기 전에 레이어의 모든 모듈에서 리소스 ( &lt;a href=&quot;classloader#getResource(java.lang.String)&quot;&gt; &lt;code&gt;getResource&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;classloader#getResources(java.lang.String)&quot;&gt; &lt;code&gt;getResources&lt;/code&gt; &lt;/a&gt; 및 기타 리소스 메소드)를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="258c74d3131960d404800da270fe020fa27dbebb" translate="yes" xml:space="preserve">
          <source>The class loader delegation implemented by the class loaders must respect module readability. The class loaders should be &lt;a href=&quot;classloader#registerAsParallelCapable()&quot;&gt;&lt;code&gt;parallel-capable&lt;/code&gt;&lt;/a&gt; so as to avoid deadlocks during class loading. In addition, the entity creating a new layer with this method should arrange that the class loaders be ready to load from these modules before there are any attempts to load classes or resources.</source>
          <target state="translated">클래스 로더에 의해 구현 된 클래스 로더 위임은 모듈 가독성을 존중해야합니다. 클래스 로더는 클래스로드 중 교착 상태를 방지하기 위해 &lt;a href=&quot;classloader#registerAsParallelCapable()&quot;&gt; &lt;code&gt;parallel-capable&lt;/code&gt; &lt;/a&gt; 해야합니다 . 또한이 메서드를 사용하여 새 계층을 생성하는 엔티티는 클래스 또는 리소스를로드하려고 시도하기 전에 클래스 로더가 이러한 모듈에서로드 할 준비가되었는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="326261e6f6cbb96bde83ba980d663285f4766b99" translate="yes" xml:space="preserve">
          <source>The class loader for this module</source>
          <target state="translated">이 모듈의 클래스 로더</target>
        </trans-unit>
        <trans-unit id="8bbdf2509f29c5a7692e0e647c6562d6eb109c7e" translate="yes" xml:space="preserve">
          <source>The class loader returned is the class loader that the &lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadClass(String,String)&lt;/code&gt;&lt;/a&gt; method would use to load classes for the same &lt;code&gt;codebase&lt;/code&gt; argument.</source>
          <target state="translated">반환 된 클래스 로더는 &lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadClass(String,String)&lt;/code&gt; &lt;/a&gt; 메서드가 동일한 &lt;code&gt;codebase&lt;/code&gt; 인수에 대한 클래스를로드하는 데 사용할 클래스 로더입니다 .</target>
        </trans-unit>
        <trans-unit id="fab82d392bdcac6117cd4e8e850bd2d53fbeb1df" translate="yes" xml:space="preserve">
          <source>The class loaders created by this method implement &lt;em&gt;direct delegation&lt;/em&gt; when loading classes from modules. If the &lt;a href=&quot;classloader#loadClass(java.lang.String,boolean)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method is invoked to load a class then it uses the package name of the class to map it to a module. The package may be in the module defined to the class loader. The package may be exported by another module in this layer to the module defined to the class loader. It may be in a package exported by a module in a parent layer. The class loader delegates to the class loader of the module, throwing &lt;code&gt;ClassNotFoundException&lt;/code&gt; if not found by that class loader. When &lt;code&gt;loadClass&lt;/code&gt; is invoked to load a class that does not map to a module then it delegates to the parent class loader.</source>
          <target state="translated">이 메서드로 만든 클래스 로더 는 모듈에서 클래스를로드 할 때 &lt;em&gt;직접 위임을&lt;/em&gt; 구현 합니다. 는 IF &lt;a href=&quot;classloader#loadClass(java.lang.String,boolean)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt; 메소드는 클래스의로드를 호출 다음은 모듈에 매핑 할 클래스의 패키지 이름을 사용합니다. 패키지는 클래스 로더에 정의 된 모듈에있을 수 있습니다. 패키지는이 계층의 다른 모듈에서 클래스 로더에 정의 된 모듈로 내보낼 수 있습니다. 상위 계층의 모듈에서 내 보낸 패키지에있을 수 있습니다. 클래스 로더는 모듈의 클래스 로더에 위임하여 해당 클래스 로더에서 찾을 수없는 경우 &lt;code&gt;ClassNotFoundException&lt;/code&gt; 을 발생시킵니다. 모듈에 매핑되지 않는 클래스를로드하기 위해 &lt;code&gt;loadClass&lt;/code&gt; 가 호출 되면 부모 클래스 로더에 위임됩니다.</target>
        </trans-unit>
        <trans-unit id="f70a839a344030b06998e453d9fdb88f614bd640" translate="yes" xml:space="preserve">
          <source>The class loaders created by this method locate resources (&lt;a href=&quot;classloader#getResource(java.lang.String)&quot;&gt;&lt;code&gt;getResource&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;classloader#getResources(java.lang.String)&quot;&gt;&lt;code&gt;getResources&lt;/code&gt;&lt;/a&gt;, and other resource methods) in the module defined to the class loader before searching the parent class loader.</source>
          <target state="translated">이 메소드로 생성 된 클래스 로더는 상위 클래스 로더를 검색하기 전에 클래스 로더에 정의 된 모듈에서 리소스 ( &lt;a href=&quot;classloader#getResource(java.lang.String)&quot;&gt; &lt;code&gt;getResource&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;classloader#getResources(java.lang.String)&quot;&gt; &lt;code&gt;getResources&lt;/code&gt; &lt;/a&gt; 및 기타 리소스 메서드)를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="6a46a2bceba51e26038bcf8bf9c04983b0c81d03" translate="yes" xml:space="preserve">
          <source>The class may override methods from &lt;code&gt;Object&lt;/code&gt;, and may implement methods related to serialization.</source>
          <target state="translated">클래스는 &lt;code&gt;Object&lt;/code&gt; 의 메소드를 대체 하고 직렬화와 관련된 메소드를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6eb7d47c9875da75274f0ffa32e24741e2b6b2d" translate="yes" xml:space="preserve">
          <source>The class name of the factory that creates the resulting context has the naming convention</source>
          <target state="translated">결과 컨텍스트를 생성하는 팩토리의 클래스 이름에는 명명 규칙이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c25a269dccdba35102f1daa8f57a9b2dd312ae31" translate="yes" xml:space="preserve">
          <source>The class name, member and object name parameters define a target name of the form &quot;&lt;code&gt;className#member[objectName]&lt;/code&gt;&quot; where each part is optional. This will be the result of &lt;a href=&quot;../../../java.base/java/security/permission#getName()&quot;&gt;&lt;code&gt;Permission.getName()&lt;/code&gt;&lt;/a&gt; on the resultant MBeanPermission.</source>
          <target state="translated">클래스 이름, 멤버 및 개체 이름 매개 변수는 &quot; &lt;code&gt;className#member[objectName]&lt;/code&gt; &quot; 형식의 대상 이름을 정의합니다 . 여기서 각 부분은 선택 사항입니다. 이것은 결과 MBeanPermission에 대한 &lt;a href=&quot;../../../java.base/java/security/permission#getName()&quot;&gt; &lt;code&gt;Permission.getName()&lt;/code&gt; &lt;/a&gt; 의 결과입니다.</target>
        </trans-unit>
        <trans-unit id="32fd5d586f202bbf77341f1d00fc8fc880091605" translate="yes" xml:space="preserve">
          <source>The class name, member and object name parameters define a target name of the form &quot;&lt;code&gt;className#member[objectName]&lt;/code&gt;&quot; where each part is optional. This will be the result of &lt;a href=&quot;../../java/security/permission#getName--&quot;&gt;&lt;code&gt;Permission.getName()&lt;/code&gt;&lt;/a&gt; on the resultant MBeanPermission.</source>
          <target state="translated">클래스 이름, 멤버 및 오브젝트 이름 매개 변수는 &quot; &lt;code&gt;className#member[objectName]&lt;/code&gt; &quot; 형식의 대상 이름을 정의합니다 . 여기서 각 파트는 선택 사항입니다. 이것은 &lt;a href=&quot;../../java/security/permission#getName--&quot;&gt; &lt;code&gt;Permission.getName()&lt;/code&gt; &lt;/a&gt; 의 결과입니다. 결과 MBeanPermission합니다.</target>
        </trans-unit>
        <trans-unit id="f9608e6fec316aa026228e36333ed7b4a4a46e0c" translate="yes" xml:space="preserve">
          <source>The class name, member, and object name can be written together as a single string, which is the &lt;em&gt;name&lt;/em&gt; of this permission. The name of the permission is the string returned by &lt;a href=&quot;../../../java.base/java/security/permission#getName()&quot;&gt;&lt;code&gt;getName()&lt;/code&gt;&lt;/a&gt;. The format of the string is:</source>
          <target state="translated">클래스 이름, 멤버 및 개체 &lt;em&gt;이름&lt;/em&gt; 은이 권한 의 &lt;em&gt;이름&lt;/em&gt; 인 단일 문자열로 함께 쓸 수 있습니다 . 권한의 이름은 &lt;a href=&quot;../../../java.base/java/security/permission#getName()&quot;&gt; &lt;code&gt;getName()&lt;/code&gt; &lt;/a&gt; 반환 한 문자열 입니다. 문자열의 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e7f527e6a2e74f94312874345a4b4bb09466dc5d" translate="yes" xml:space="preserve">
          <source>The class name, member, and object name can be written together as a single string, which is the &lt;em&gt;name&lt;/em&gt; of this permission. The name of the permission is the string returned by &lt;a href=&quot;../../java/security/permission#getName--&quot;&gt;&lt;code&gt;getName()&lt;/code&gt;&lt;/a&gt;. The format of the string is:</source>
          <target state="translated">클래스 이름, 멤버 및 개체 &lt;em&gt;이름&lt;/em&gt; 은이 권한 의 &lt;em&gt;이름&lt;/em&gt; 인 단일 문자열로 함께 쓸 수 있습니다 . 권한의 이름은 &lt;a href=&quot;../../java/security/permission#getName--&quot;&gt; &lt;code&gt;getName()&lt;/code&gt; &lt;/a&gt; 반환 한 문자열 입니다. 문자열의 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="386c4da46833767828efb663588fa86f0b351c05" translate="yes" xml:space="preserve">
          <source>The class name.</source>
          <target state="translated">클래스 이름.</target>
        </trans-unit>
        <trans-unit id="24463e4dd2161bdd8170d4d26693be82652a2840" translate="yes" xml:space="preserve">
          <source>The class names of the exceptions that can be thrown when invoking a constructor or operation, or getting an attribute. The meaning of this field is defined by this specification but the field is not set or used by the JMX API itself. Exceptions thrown when setting an attribute are specified by the field &lt;a href=&quot;#setExceptions&quot;&gt;&lt;code&gt;setExceptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">생성자 또는 작업을 호출하거나 속성을 가져올 때 발생할 수있는 예외의 클래스 이름입니다. 이 필드의 의미는이 스펙에서 정의되지만 JMX API 자체에서 필드를 설정하거나 사용하지 않습니다. 속성을 설정할 때 발생하는 예외는 &lt;a href=&quot;#setExceptions&quot;&gt; &lt;code&gt;setExceptions&lt;/code&gt; &lt;/a&gt; 필드에 의해 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="4f558354362711f7f870366ca77457f25ec982e1" translate="yes" xml:space="preserve">
          <source>The class names of the exceptions that can be thrown when setting an attribute. The meaning of this field is defined by this specification but the field is not set or used by the JMX API itself. Exceptions thrown when getting an attribute are specified by the field &lt;a href=&quot;#exceptions&quot;&gt;&lt;code&gt;exceptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">속성을 설정할 때 발생할 수있는 예외의 클래스 이름입니다. 이 필드의 의미는이 스펙에서 정의되지만 JMX API 자체에서 필드를 설정하거나 사용하지 않습니다. 속성을 가져올 때 발생하는 &lt;a href=&quot;#exceptions&quot;&gt; &lt;code&gt;exceptions&lt;/code&gt; &lt;/a&gt; 는 필드 예외 로 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="1f9b8f032b0167ba6e6300e5b684930ecc1fd72b" translate="yes" xml:space="preserve">
          <source>The class of an object being deserialized.</source>
          <target state="translated">역 직렬화되는 개체의 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="2740e15772572f35c505dbc760b86f3a12d87415" translate="yes" xml:space="preserve">
          <source>The class of an object being deserialized. For arrays, it is the array type. For example, the array class name of a 2 dimensional array of strings is &quot;&lt;code&gt;[[Ljava.lang.String;&lt;/code&gt;&quot;. To check the array's element type, iteratively use &lt;a href=&quot;../lang/class#getComponentType()&quot;&gt;&lt;code&gt;Class.getComponentType&lt;/code&gt;&lt;/a&gt; while the result is an array and then check the class. The &lt;code&gt;serialClass is null&lt;/code&gt; in the case where a new object is not being created and to give the filter a chance to check the depth, number of references to existing objects, and the stream size.</source>
          <target state="translated">역 직렬화되는 개체의 클래스입니다. 배열의 경우 배열 유형입니다. 예를 들어, 2 차원 문자열 배열의 배열 클래스 이름은 &quot; &lt;code&gt;[[Ljava.lang.String;&lt;/code&gt; &quot;입니다. 배열의 요소 유형을 확인하려면 결과가 배열 인 동안 &lt;a href=&quot;../lang/class#getComponentType()&quot;&gt; &lt;code&gt;Class.getComponentType&lt;/code&gt; &lt;/a&gt; 을 반복적으로 사용한 다음 클래스를 확인합니다. &lt;code&gt;serialClass is null&lt;/code&gt; 새로운 객체가 생성되지 않고, 필터를 기존 객체에 대한 참조 번호의 깊이를 확인할 수있는 기회와, 스트림의 크기를 제공하는 경우이다.</target>
        </trans-unit>
        <trans-unit id="67a17c362d3e1b1c120d30ec1c8988dcf8590e9f" translate="yes" xml:space="preserve">
          <source>The class of the implementation of this Standard MBean (or MXBean).</source>
          <target state="translated">이 Standard MBean (또는 MXBean)의 구현 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="aafaead25ed357736f7fa6d9e43fd8e44d23e040" translate="yes" xml:space="preserve">
          <source>The class of the mismatched argument</source>
          <target state="translated">일치하지 않는 인수의 클래스</target>
        </trans-unit>
        <trans-unit id="9f9c1e95a29aed3cd3487891bc5c2b07f99d1d46" translate="yes" xml:space="preserve">
          <source>The class or interface name</source>
          <target state="translated">클래스 또는 인터페이스 이름</target>
        </trans-unit>
        <trans-unit id="44304895a585b89945688e9c72aebcae6d5a4912" translate="yes" xml:space="preserve">
          <source>The class overview describes how incoming request URIs are &lt;a href=&quot;#mapping_description&quot;&gt;mapped&lt;/a&gt; to HttpContext instances.</source>
          <target state="translated">클래스 개요는 들어오는 요청 URI가 HttpContext 인스턴스에 &lt;a href=&quot;#mapping_description&quot;&gt;매핑&lt;/a&gt; 되는 방법을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="f007715f4909fdab76de81c8cd8ec93dac588cf5" translate="yes" xml:space="preserve">
          <source>The class provides an implementation of the Java Accessibility API appropriate to table cells.</source>
          <target state="translated">이 클래스는 테이블 셀에 적합한 Java Accessibility API의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="286267cd7c2dadf8f4f24d53925a0ddb0cc6af1d" translate="yes" xml:space="preserve">
          <source>The class represents a tree leaf icon.</source>
          <target state="translated">클래스는 나무 잎 아이콘을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8b77a5b0d4e4154f18193bc6fbbf51abd2feba82" translate="yes" xml:space="preserve">
          <source>The class represents the 3D border.</source>
          <target state="translated">클래스는 3D 테두리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6839be2ec33b78e827e2d1987980afbaf909e1a3" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JButton&lt;/code&gt;.</source>
          <target state="translated">클래스는 &lt;code&gt;JButton&lt;/code&gt; 의 경계를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="6e7cf833e911bdb723121693cf19ffd36e4a7f56" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JInternalFrame&lt;/code&gt;.</source>
          <target state="translated">클래스는 &lt;code&gt;JInternalFrame&lt;/code&gt; 의 경계를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="ac514f9d438d9dc3f63c070f0f195568ddbe73d5" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JMenuBar&lt;/code&gt;.</source>
          <target state="translated">클래스는 &lt;code&gt;JMenuBar&lt;/code&gt; 의 경계를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="f988bc863af25b2cdc6f590ca4c93d2573c389a1" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JMenuItem&lt;/code&gt;.</source>
          <target state="translated">클래스는 &lt;code&gt;JMenuItem&lt;/code&gt; 의 경계를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="6ca0ccd64022eb7039d05fcc7f5d27910100c513" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JPopupMenu&lt;/code&gt;.</source>
          <target state="translated">클래스는 &lt;code&gt;JPopupMenu&lt;/code&gt; 의 경계를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="450acedb236f56cbe5dff9c77f50b10c2ec8b1f2" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JScrollPane&lt;/code&gt;.</source>
          <target state="translated">클래스는 &lt;code&gt;JScrollPane&lt;/code&gt; 의 경계를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="6d1b06a7803bfe5ea260aec6f6a6cba057af6fd6" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JTestField&lt;/code&gt;.</source>
          <target state="translated">클래스는 &lt;code&gt;JTestField&lt;/code&gt; 의 경계를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="92a84daf1534fb790532a9fe6ccd488a42c15d1e" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JToolBar&lt;/code&gt;.</source>
          <target state="translated">클래스는 &lt;code&gt;JToolBar&lt;/code&gt; 의 경계를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="33777a2cbf90e63d04b2bf1136625e688a5e6ae2" translate="yes" xml:space="preserve">
          <source>The class represents the border of a rollover &lt;code&gt;Button&lt;/code&gt;.</source>
          <target state="translated">클래스는 롤오버 &lt;code&gt;Button&lt;/code&gt; 의 테두리를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="db9baa563ca4c8e66488ed12859d61eef33e98ac" translate="yes" xml:space="preserve">
          <source>The class represents the border of an option dialog.</source>
          <target state="translated">클래스는 옵션 대화 상자의 테두리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1a2c9a0f65f1fbe34eeec41acff28d1714f07806" translate="yes" xml:space="preserve">
          <source>The class that defines the constants that are used to identify generic SQL types, called JDBC types.</source>
          <target state="translated">JDBC 유형이라고하는 일반 SQL 유형을 식별하는 데 사용되는 상수를 정의하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="9916676bdcf31c8c5f801880ee36b6ab011a90ed" translate="yes" xml:space="preserve">
          <source>The class that is interested in monitoring AWT events implements this interface, and the object created with that class is registered with the Toolkit, using the Toolkit's &lt;code&gt;addAWTEventListener&lt;/code&gt; method. When an event is dispatched anywhere in the AWT, that object's &lt;code&gt;eventDispatched&lt;/code&gt; method is invoked.</source>
          <target state="translated">AWT 이벤트 모니터링에 관심이있는 클래스가이 인터페이스를 구현하고 해당 클래스로 생성 된 객체는 툴킷의 &lt;code&gt;addAWTEventListener&lt;/code&gt; 메소드를 사용하여 툴킷에 등록됩니다 . 이벤트가 AWT의 어디로 든 전달되면 해당 객체의 &lt;code&gt;eventDispatched&lt;/code&gt; 메서드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7beb96be1aa1e8cd73a29cb0be379483ac84fffa" translate="yes" xml:space="preserve">
          <source>The class that is interested in processing a mouse event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;MouseAdapter&lt;/code&gt; class (overriding only the methods of interest).</source>
          <target state="translated">마우스 이벤트 처리에 관심이있는 클래스는이 인터페이스 (및 포함 된 모든 메서드)를 구현하거나 추상 &lt;code&gt;MouseAdapter&lt;/code&gt; 클래스를 확장합니다 (관심있는 메서드 만 재정의).</target>
        </trans-unit>
        <trans-unit id="64773e4c6790fc9845cb53b1da9e016383c63a54" translate="yes" xml:space="preserve">
          <source>The class that is interested in processing a mouse motion event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;MouseMotionAdapter&lt;/code&gt; class (overriding only the methods of interest).</source>
          <target state="translated">마우스 모션 이벤트 처리에 관심이있는 클래스는이 인터페이스 (및 여기에 포함 된 모든 메서드)를 구현하거나 추상 &lt;code&gt;MouseMotionAdapter&lt;/code&gt; 클래스 (관심있는 메서드 만 재정 의)를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="56d5c773bc59e865c1a0b3e9b30ba5a6d6a4f0ef" translate="yes" xml:space="preserve">
          <source>The class that is interested in processing a mouse wheel event implements this interface (and all the methods it contains).</source>
          <target state="translated">마우스 휠 이벤트 처리에 관심이있는 클래스는이 인터페이스 (및 포함 된 모든 메서드)를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="0af3e588c9bd003a135038de3c9d7c5c596ab936" translate="yes" xml:space="preserve">
          <source>The class that is interested in processing a window state event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;WindowAdapter&lt;/code&gt; class (overriding only the methods of interest).</source>
          <target state="translated">창 상태 이벤트 처리에 관심이있는 클래스는이 인터페이스 (및 포함 된 모든 메서드)를 구현하거나 추상 &lt;code&gt;WindowAdapter&lt;/code&gt; 클래스를 확장합니다 (관심있는 메서드 만 재정의).</target>
        </trans-unit>
        <trans-unit id="40526c10f584dacf65d48b1c288c31afec545385" translate="yes" xml:space="preserve">
          <source>The class that is interested in processing mouse motion events during a drag operation either implements this interface or extends the abstract &lt;code&gt;DragSourceAdapter&lt;/code&gt; class (overriding only the methods of interest).</source>
          <target state="translated">드래그 작업 중 마우스 모션 이벤트 처리에 관심이있는 클래스는이 인터페이스를 구현하거나 추상 &lt;code&gt;DragSourceAdapter&lt;/code&gt; 클래스를 확장합니다 (관심있는 메서드 만 재정의).</target>
        </trans-unit>
        <trans-unit id="8adf9ffee8fa29a5a58a6deb1d3be82bab882a76" translate="yes" xml:space="preserve">
          <source>The class that manages a basic title bar</source>
          <target state="translated">기본 제목 표시 줄을 관리하는 클래스</target>
        </trans-unit>
        <trans-unit id="9e0fc3532f2d6f01a6ea69c31f9dd3f6b79f0e1c" translate="yes" xml:space="preserve">
          <source>The class to be activated and the special activation constructor are both public, and the class resides in a package that is &lt;a href=&quot;../../../../java.base/java/lang/module#isExported(java.lang.String,java.lang.Module)&quot;&gt;exported&lt;/a&gt; to at least the &lt;code&gt;java.rmi&lt;/code&gt; module; or</source>
          <target state="translated">활성화 할 클래스와 특수 활성화 생성자는 모두 공용이며 클래스는 최소한 &lt;code&gt;java.rmi&lt;/code&gt; 모듈로 &lt;a href=&quot;../../../../java.base/java/lang/module#isExported(java.lang.String,java.lang.Module)&quot;&gt;내 보내진&lt;/a&gt; 패키지에 있습니다 . 또는</target>
        </trans-unit>
        <trans-unit id="a2985ee19fb1ba59bf43a79f9385704f37a81b93" translate="yes" xml:space="preserve">
          <source>The class to be activated resides in a package that is &lt;a href=&quot;../../../../java.base/java/lang/module#isOpen(java.lang.String,java.lang.Module)&quot;&gt;open&lt;/a&gt; to at least the &lt;code&gt;java.rmi&lt;/code&gt; module.</source>
          <target state="translated">활성화 될 클래스 는 최소한 &lt;code&gt;java.rmi&lt;/code&gt; 모듈에 &lt;a href=&quot;../../../../java.base/java/lang/module#isOpen(java.lang.String,java.lang.Module)&quot;&gt;열려&lt;/a&gt; 있는 패키지에 있습니다.</target>
        </trans-unit>
        <trans-unit id="458470aec10b5efb991e16f76cc406030e1671eb" translate="yes" xml:space="preserve">
          <source>The class used for the default look and feel is chosen in the following manner:</source>
          <target state="translated">기본 룩앤필에 사용되는 클래스는 다음과 같은 방식으로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="fccb7f1f0fc8e9637c0fc6b879e925d95c35e3be" translate="yes" xml:space="preserve">
          <source>The class used to obtain the accessible role for this object, as well as implementing many of the methods in the AccessibleContainer interface.</source>
          <target state="translated">이 개체에 대한 액세스 가능한 역할을 가져오고 AccessibleContainer 인터페이스에서 많은 메서드를 구현하는 데 사용되는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="0ce9bfae0074ac7b078c71e5fcb0954fed4da723" translate="yes" xml:space="preserve">
          <source>The class used to obtain the accessible role for this object.</source>
          <target state="translated">이 개체에 대한 액세스 가능한 역할을 얻는 데 사용되는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="b654b49876bc0c4e9c2764844b998a4518610818" translate="yes" xml:space="preserve">
          <source>The class-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.class&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 를 포함하는 클래스 전용 형식 &lt;code&gt;List&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0429235745a3b457b0c546403aed40bddedcce9d" translate="yes" xml:space="preserve">
          <source>The class-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.class&quot;&lt;/code&gt;. This &lt;code&gt;List&lt;/code&gt; is &lt;a href=&quot;collections#unmodifiableList-java.util.List-&quot;&gt;unmodifiable&lt;/a&gt;.</source>
          <target state="translated">클래스 전용 형식의 &lt;code&gt;List&lt;/code&gt; 포함 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; . 이 &lt;code&gt;List&lt;/code&gt; 은 &lt;a href=&quot;collections#unmodifiableList-java.util.List-&quot;&gt;수정할 수 없습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81b9436050ee4309c9801830af9ef66d77d8aff6" translate="yes" xml:space="preserve">
          <source>The class-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.class&quot;&lt;/code&gt;. This &lt;code&gt;List&lt;/code&gt; is unmodifiable.</source>
          <target state="translated">&lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 를 포함하는 클래스 전용 형식 &lt;code&gt;List&lt;/code&gt; 입니다. 이 &lt;code&gt;List&lt;/code&gt; 은 수정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="951f885ca705190ee66dda1a5c90080539c69c07" translate="yes" xml:space="preserve">
          <source>The classes &lt;a href=&quot;localdate&quot;&gt;&lt;code&gt;LocalDate&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localtime&quot;&gt;&lt;code&gt;LocalTime&lt;/code&gt;&lt;/a&gt; implement &lt;code&gt;TemporalAdjuster&lt;/code&gt;, thus this method can be used to change the date, time or offset:</source>
          <target state="translated">&lt;a href=&quot;localdate&quot;&gt; &lt;code&gt;LocalDate&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;localtime&quot;&gt; &lt;code&gt;LocalTime&lt;/code&gt; &lt;/a&gt; 클래스 는 &lt;code&gt;TemporalAdjuster&lt;/code&gt; 를 구현 하므로이 메소드를 사용하여 날짜, 시간 또는 오프셋을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91f35168bb8ac0d14680d3e7a283896058efa32f" translate="yes" xml:space="preserve">
          <source>The classes &lt;a href=&quot;localdate&quot;&gt;&lt;code&gt;LocalDate&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;localtime&quot;&gt;&lt;code&gt;LocalTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset&quot;&gt;&lt;code&gt;ZoneOffset&lt;/code&gt;&lt;/a&gt; implement &lt;code&gt;TemporalAdjuster&lt;/code&gt;, thus this method can be used to change the date, time or offset:</source>
          <target state="translated">&lt;a href=&quot;localdate&quot;&gt; &lt;code&gt;LocalDate&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;localtime&quot;&gt; &lt;code&gt;LocalTime&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;zoneoffset&quot;&gt; &lt;code&gt;ZoneOffset&lt;/code&gt; &lt;/a&gt; 클래스 는 &lt;code&gt;TemporalAdjuster&lt;/code&gt; 를 구현 하므로이 메소드를 사용하여 날짜, 시간 또는 오프셋을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="667e2b33474bdab83bd95b94b5fc3ee8acc932ff" translate="yes" xml:space="preserve">
          <source>The classes &lt;a href=&quot;localtime&quot;&gt;&lt;code&gt;LocalTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset&quot;&gt;&lt;code&gt;ZoneOffset&lt;/code&gt;&lt;/a&gt; implement &lt;code&gt;TemporalAdjuster&lt;/code&gt;, thus this method can be used to change the time or offset:</source>
          <target state="translated">&lt;a href=&quot;localtime&quot;&gt; &lt;code&gt;LocalTime&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;zoneoffset&quot;&gt; &lt;code&gt;ZoneOffset&lt;/code&gt; &lt;/a&gt; 클래스 는 &lt;code&gt;TemporalAdjuster&lt;/code&gt; 를 구현 하므로이 메소드를 사용하여 시간 또는 오프셋을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24aa3822bc347747ad82d2ce89e741c89424ad3f" translate="yes" xml:space="preserve">
          <source>The classes &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; contain &lt;a href=&quot;methodhandle#sigpoly&quot;&gt;signature polymorphic methods&lt;/a&gt; which can be linked regardless of their type descriptor. Normally, method linkage requires exact matching of type descriptors.</source>
          <target state="translated">&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt; 클래스 에는 형식 설명자에 관계없이 연결될 수 있는 &lt;a href=&quot;methodhandle#sigpoly&quot;&gt;시그니처 다형성 메서드&lt;/a&gt; 가 포함되어 있습니다 . 일반적으로 메서드 연결에는 형식 설명 자의 정확한 일치가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="722234831f395f0d9b64e2955ad52bebceec69b0" translate="yes" xml:space="preserve">
          <source>The classes &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; contain &lt;a href=&quot;methodhandle#sigpoly&quot;&gt;signature polymorphic methods&lt;/a&gt; which can be linked regardless of their type descriptor. Normally, method linkage requires exact matching of type descriptors.</source>
          <target state="translated">&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt; 클래스 에는 형식 설명자에 관계없이 연결할 수 있는 &lt;a href=&quot;methodhandle#sigpoly&quot;&gt;서명 다형성 메서드&lt;/a&gt; 가 포함되어 있습니다 . 일반적으로 메서드 연결에는 형식 설명 자의 정확한 일치가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="cec24830f5c82c9cf576c48a3e99008285d79599" translate="yes" xml:space="preserve">
          <source>The classes and interfaces in this package have been deprecated.</source>
          <target state="translated">이 패키지의 클래스와 인터페이스는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5e8bdfe5f8a605c6118dd5500287b4e9ccf0f1bf" translate="yes" xml:space="preserve">
          <source>The classes and interfaces in this package have been deprecated. New classes should not be added to this package. The &lt;code&gt;java.security&lt;/code&gt; package contains suitable replacements. See &lt;a href=&quot;../policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; and related classes for details. This package is subject to removal in a future version of Java SE.</source>
          <target state="translated">이 패키지의 클래스와 인터페이스는 더 이상 사용되지 않습니다. 이 패키지에 새 클래스를 추가하면 안됩니다. &lt;code&gt;java.security&lt;/code&gt; 에 패키지는 적절한 대체를 포함한다. 자세한 내용은 &lt;a href=&quot;../policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt; 및 관련 클래스를 참조하십시오. 이 패키지는 향후 Java SE 버전에서 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80a1b2807e3c199a522ca9fc26f06689a6f68c38" translate="yes" xml:space="preserve">
          <source>The classes and interfaces in this package have been superseded by classes in the java.security package.</source>
          <target state="translated">이 패키지의 클래스와 인터페이스는 java.security 패키지의 클래스로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="ed5a6af1e3f7c3411e84709c3cbf34764ac2efbf" translate="yes" xml:space="preserve">
          <source>The classes and interfaces in this package have been superseded by classes in the java.security package. See that package and, for example, java.security.Permission for details.</source>
          <target state="translated">이 패키지의 클래스와 인터페이스는 java.security 패키지의 클래스로 대체되었습니다. 세부 사항은 해당 패키지 및 예를 들어 java.security.Permission을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b9635c921806c4e935892a31449185b3439db682" translate="yes" xml:space="preserve">
          <source>The classes and interfaces used for connection pooling are:</source>
          <target state="translated">연결 풀링에 사용되는 클래스와 인터페이스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4c51a617893f735aff590cb84b679bd5d0f64b0e" translate="yes" xml:space="preserve">
          <source>The classes and interfaces used for distributed transactions are:</source>
          <target state="translated">분산 트랜잭션에 사용되는 클래스와 인터페이스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8cc8dc37d5486db6b4ddadb26ec74de8ff37fc86" translate="yes" xml:space="preserve">
          <source>The classes defined here represent the principle date-time concepts, including instants, durations, dates, times, time-zones and periods. They are based on the ISO calendar system, which is the</source>
          <target state="translated">여기에 정의 된 클래스는 인스턴트, 지속 시간, 날짜, 시간, 시간대 및 기간을 포함한 주요 날짜-시간 개념을 나타냅니다. ISO 캘린더 시스템을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="9a46ae30bb17480a7a5450f23f683c7092a86400" translate="yes" xml:space="preserve">
          <source>The classes in packages exported by the modules in the &lt;a href=&quot;../../../../java.base/java/lang/modulelayer#boot()&quot;&gt;boot layer&lt;/a&gt;. Whether the boot layer contains all platform modules or not will depend on the initial module or how the application was started.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/lang/modulelayer#boot()&quot;&gt;부트 계층&lt;/a&gt; 의 모듈에서 내 보낸 패키지의 클래스 . 부팅 계층에 모든 플랫폼 모듈이 포함되어 있는지 여부는 초기 모듈 또는 응용 프로그램이 시작된 방법에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="e4a3d24e24dec1a03bba4e516753734ea707166b" translate="yes" xml:space="preserve">
          <source>The classes in this package were initially specified by Netscape, and are the de facto standard mechanism for calling JavaScript from the Java runtime.</source>
          <target state="translated">이 패키지의 클래스는 처음에 Netscape에 의해 지정되었으며 Java 런타임에서 JavaScript를 호출하기위한 사실상의 표준 메커니즘입니다.</target>
        </trans-unit>
        <trans-unit id="f1ddc966da7eb209890b6b98e471fd102a3dbfd7" translate="yes" xml:space="preserve">
          <source>The classes that are loaded are by default granted permission only to access the URLs specified when the URLClassLoader was created.</source>
          <target state="translated">로드 된 클래스는 기본적으로 URLClassLoader를 만들 때 지정된 URL에 액세스 할 수있는 권한 만 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="2ed60e3a4caf143027d587104b1f044774f6e21d" translate="yes" xml:space="preserve">
          <source>The classes that can be defined by the system class loader (typically the class path) to be members of its unnamed module.</source>
          <target state="translated">시스템 클래스 로더 (일반적으로 클래스 경로)에서 이름이 지정되지 않은 모듈의 멤버가되도록 정의 할 수있는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="238f24052324a21a82637cf730180fbba8927382" translate="yes" xml:space="preserve">
          <source>The classes visible to the agent class are the classes visible to the system class loader and minimally include:</source>
          <target state="translated">에이전트 클래스에 표시되는 클래스는 시스템 클래스 로더에 표시되는 클래스이며 최소한 다음을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="a4f20c0c81d3fcf5f113e63defaf1a7e721b263f" translate="yes" xml:space="preserve">
          <source>The classification function maps elements to some key type &lt;code&gt;K&lt;/code&gt;. The collector produces a &lt;code&gt;ConcurrentMap&amp;lt;K, List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; whose keys are the values resulting from applying the classification function to the input elements, and whose corresponding values are &lt;code&gt;List&lt;/code&gt;s containing the input elements which map to the associated key under the classification function.</source>
          <target state="translated">분류 함수는 요소를 일부 키 유형 &lt;code&gt;K&lt;/code&gt; 에 맵핑합니다 . 콜렉터는 키가 입력 요소에 분류 기능을 적용한 결과 값이고 해당 값이 &lt;code&gt;List&lt;/code&gt; 인 &lt;code&gt;ConcurrentMap&amp;lt;K, List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 를 생성합니다. 분류 함수 아래 연관된 키에 맵핑되는 입력 요소를 포함하는 s 합니다. .</target>
        </trans-unit>
        <trans-unit id="f7b6ff72cdcfcbf34cc479a3dd8ccba88f465aff" translate="yes" xml:space="preserve">
          <source>The classification function maps elements to some key type &lt;code&gt;K&lt;/code&gt;. The collector produces a &lt;code&gt;Map&amp;lt;K, List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; whose keys are the values resulting from applying the classification function to the input elements, and whose corresponding values are &lt;code&gt;List&lt;/code&gt;s containing the input elements which map to the associated key under the classification function.</source>
          <target state="translated">분류 함수는 요소를 일부 키 유형 &lt;code&gt;K&lt;/code&gt; 에 맵핑합니다 . 콜렉터는 분류 함수를 입력 요소에 적용한 결과 값이 키이고 해당 값이 분류 함수 아래의 연관된 키에 맵핑되는 입력 요소를 포함하는 &lt;code&gt;List&lt;/code&gt; 인 &lt;code&gt;Map&amp;lt;K, List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 를 생성 합니다. .</target>
        </trans-unit>
        <trans-unit id="3727ee55f4157c61233f7b056c889b66016de950" translate="yes" xml:space="preserve">
          <source>The classification function maps elements to some key type &lt;code&gt;K&lt;/code&gt;. The downstream collector operates on elements of type &lt;code&gt;T&lt;/code&gt; and produces a result of type &lt;code&gt;D&lt;/code&gt;. The resulting collector produces a &lt;code&gt;ConcurrentMap&amp;lt;K, D&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">분류 기능은 요소를 일부 키 유형 &lt;code&gt;K&lt;/code&gt; 에 매핑합니다 . 다운 스트림 콜렉터는 &lt;code&gt;T&lt;/code&gt; 유형의 요소에서 작동하며 &lt;code&gt;D&lt;/code&gt; 유형의 결과를 생성합니다 . 결과 수집기는 &lt;code&gt;ConcurrentMap&amp;lt;K, D&amp;gt;&lt;/code&gt; 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="8dcf0f47762fae0e87c464f9581d648ea3ae1c54" translate="yes" xml:space="preserve">
          <source>The classification function maps elements to some key type &lt;code&gt;K&lt;/code&gt;. The downstream collector operates on elements of type &lt;code&gt;T&lt;/code&gt; and produces a result of type &lt;code&gt;D&lt;/code&gt;. The resulting collector produces a &lt;code&gt;Map&amp;lt;K, D&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">분류 함수는 요소를 일부 키 유형 &lt;code&gt;K&lt;/code&gt; 에 맵핑합니다 . 다운 스트림 콜렉터는 유형 &lt;code&gt;T&lt;/code&gt; 의 요소에서 작동하며 유형 &lt;code&gt;D&lt;/code&gt; 의 결과를 생성합니다 . 결과 수집기는 &lt;code&gt;Map&amp;lt;K, D&amp;gt;&lt;/code&gt; 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="a9e51511b8fecf450953e01c011e33402e8e04f0" translate="yes" xml:space="preserve">
          <source>The clause array (of type &lt;code&gt;MethodHandle[][]&lt;/code&gt;) must be non-&lt;code&gt;null&lt;/code&gt; and contain at least one element.</source>
          <target state="translated">&lt;code&gt;MethodHandle[][]&lt;/code&gt; 유형의 절 배열은 &lt;code&gt;null&lt;/code&gt; 이아니 어야하며 하나 이상의 요소를 포함 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c0cb4102e442d6ca5287e2670473db4ab91082d5" translate="yes" xml:space="preserve">
          <source>The clause array may not contain &lt;code&gt;null&lt;/code&gt;s or sub-arrays longer than four elements.</source>
          <target state="translated">절 배열은 4 개 요소보다 긴 &lt;code&gt;null&lt;/code&gt; 또는 하위 배열을 포함 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b1785a2b6e3d5ba51ec1c9cfb9aee9bc00c0be0e" translate="yes" xml:space="preserve">
          <source>The clean call removes the 'vmid' from the reference list of each remote object indicated in 'id's.</source>
          <target state="translated">clean 호출은 'id'에 표시된 각 원격 개체의 참조 목록에서 'vmid'를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="a8ec795cf12da5dab298d48a6c632ec8fb265b5a" translate="yes" xml:space="preserve">
          <source>The clean call removes the 'vmid' from the reference list of each remote object indicated in 'id's. The sequence number is used to detect late clean calls. If the argument 'strong' is true, then the clean call is a result of a failed dirty call, thus the sequence number for the client 'vmid' needs to be remembered.</source>
          <target state="translated">clean 호출은 'id'에 표시된 각 원격 개체의 참조 목록에서 'vmid'를 제거합니다. 시퀀스 번호는 늦은 클린 호출을 감지하는 데 사용됩니다. 인수 'strong'이 참이면 클린 호출은 실패한 더티 호출의 결과이므로 클라이언트 'vmid'의 시퀀스 번호를 기억해야합니다.</target>
        </trans-unit>
        <trans-unit id="282642815fbef3f3ce01e449943b340705977b72" translate="yes" xml:space="preserve">
          <source>The cleaner creates a &lt;a href=&quot;../thread#setDaemon(boolean)&quot;&gt;&lt;code&gt;daemon thread&lt;/code&gt;&lt;/a&gt; to process the phantom reachable objects and to invoke cleaning actions. The &lt;a href=&quot;../thread#getContextClassLoader()&quot;&gt;context class loader&lt;/a&gt; of the thread is set to the &lt;a href=&quot;../classloader#getSystemClassLoader()&quot;&gt;&lt;code&gt;system class loader&lt;/code&gt;&lt;/a&gt;. The thread has no permissions, enforced only if a &lt;a href=&quot;../system#setSecurityManager(java.lang.SecurityManager)&quot;&gt;&lt;code&gt;SecurityManager is set&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">클리너 는 팬텀에 도달 할 수있는 개체를 처리하고 정리 작업을 호출 하는 &lt;a href=&quot;../thread#setDaemon(boolean)&quot;&gt; &lt;code&gt;daemon thread&lt;/code&gt; &lt;/a&gt; 를 만듭니다 . 스레드 의 &lt;a href=&quot;../thread#getContextClassLoader()&quot;&gt;컨텍스트 클래스 로더&lt;/a&gt; 는 &lt;a href=&quot;../classloader#getSystemClassLoader()&quot;&gt; &lt;code&gt;system class loader&lt;/code&gt; &lt;/a&gt; 설정됩니다 . 스레드에는 권한이 없으며 &lt;a href=&quot;../system#setSecurityManager(java.lang.SecurityManager)&quot;&gt; &lt;code&gt;SecurityManager is set&lt;/code&gt; &lt;/a&gt; 경우에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d3ab61fdfe6ebfe36da9949cd933ac5b8e6fd103" translate="yes" xml:space="preserve">
          <source>The cleaner terminates when it is phantom reachable and all of the registered cleaning actions are complete.</source>
          <target state="translated">클리너는 팬텀에 도달 할 수 있고 등록 된 모든 청소 작업이 완료되면 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="d81d720db79742e038cb81cd7c69dcda1aade83b" translate="yes" xml:space="preserve">
          <source>The cleaning action could be a lambda but all too easily will capture the object reference, by referring to fields of the object being cleaned, preventing the object from becoming phantom reachable. Using a static nested class, as above, will avoid accidentally retaining the object reference.</source>
          <target state="translated">청소 작업은 람다 일 수 있지만 청소중인 개체의 필드를 참조하여 개체 참조를 너무 쉽게 캡처하여 개체가 팬텀에 도달 할 수 없게됩니다. 위와 같이 정적 중첩 클래스를 사용하면 실수로 개체 참조가 유지되는 것을 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00e35b50f749ac6712b40f22d8edda156c5309cd" translate="yes" xml:space="preserve">
          <source>The cleaning action is invoked only after the associated object becomes phantom reachable, so it is important that the object implementing the cleaning action does not hold references to the object. In this example, a static class encapsulates the cleaning state and action. An &quot;inner&quot; class, anonymous or not, must not be used because it implicitly contains a reference to the outer instance, preventing it from becoming phantom reachable. The choice of a new cleaner or sharing an existing cleaner is determined by the use case.</source>
          <target state="translated">정리 작업은 연결된 개체가 팬텀에 도달 할 수있게 된 후에 만 ​​호출되므로 정리 작업을 구현하는 개체가 개체에 대한 참조를 보유하지 않는 것이 중요합니다. 이 예제에서 정적 클래스는 청소 상태 및 작업을 캡슐화합니다. &quot;내부&quot;클래스 (익명 여부에 관계없이)는 외부 인스턴스에 대한 참조를 암시 적으로 포함하여 팬텀에 도달 할 수 없게하므로 사용해서는 안됩니다. 새로운 클리너의 선택 또는 기존 클리너의 공유는 사용 사례에 따라 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="d66802f538547bc49310f369abc46f7fe953b16a" translate="yes" xml:space="preserve">
          <source>The client can always specify any &lt;a href=&quot;jobpriority&quot;&gt;&lt;code&gt;JobPriority&lt;/code&gt;&lt;/a&gt; value from 1 to 100 for a job. However, the Print Service instance may support fewer than 100 different job priority levels. If this is the case, the Print Service instance automatically maps the client-specified job priority value to one of the supported job priority levels, dividing the 100 job priority values equally among the available job priority levels.</source>
          <target state="translated">클라이언트는 항상 작업에 대해 &lt;a href=&quot;jobpriority&quot;&gt; &lt;code&gt;JobPriority&lt;/code&gt; &lt;/a&gt; 값을 1에서 100까지 지정할 수 있습니다 . 그러나 인쇄 서비스 인스턴스는 100 가지 미만의 다른 작업 우선 순위 수준을 지원할 수 있습니다. 이 경우 인쇄 서비스 인스턴스는 클라이언트가 지정한 작업 우선 순위 값을 지원되는 작업 우선 순위 수준 중 하나로 자동 매핑하여 사용 가능한 작업 우선 순위 수준간에 100 개의 작업 우선 순위 값을 동일하게 나눕니다.</target>
        </trans-unit>
        <trans-unit id="f54e74b6cf6d674d95124793f818122cb381114e" translate="yes" xml:space="preserve">
          <source>The client can always specify any job priority value from 1 to 100 for a job. However, a Print Service instance may support fewer than 100 different job priority levels. If this is the case, the Print Service instance automatically maps the client-specified job priority value to one of the supported job priority levels, dividing the 100 job priority values equally among the available job priority levels.</source>
          <target state="translated">클라이언트는 항상 작업에 대해 작업 우선 순위 값을 1-100으로 지정할 수 있습니다. 그러나 인쇄 서비스 인스턴스는 100 가지 미만의 다른 작업 우선 순위 수준을 지원할 수 있습니다. 이 경우 인쇄 서비스 인스턴스는 클라이언트가 지정한 작업 우선 순위 값을 지원되는 작업 우선 순위 수준 중 하나로 자동 매핑하여 사용 가능한 작업 우선 순위 수준간에 100 개의 작업 우선 순위 값을 동일하게 나눕니다.</target>
        </trans-unit>
        <trans-unit id="e36327ca2d0b7f027e93c0c6830f31c98a8858f0" translate="yes" xml:space="preserve">
          <source>The client code shown here is slightly more complicated for the MXBean client. But, if the client does in fact know the model, here the interface &lt;code&gt;MemoryPoolMXBean&lt;/code&gt; and the class &lt;code&gt;MemoryUsage&lt;/code&gt;, then it can construct a &lt;em&gt;proxy&lt;/em&gt;. This is the recommended way to interact with managed objects when you know the model beforehand, regardless of whether you are using Standard MBeans or MXBeans:</source>
          <target state="translated">여기에 표시된 클라이언트 코드는 MXBean 클라이언트에 대해 약간 더 복잡합니다. 그러나 클라이언트가 실제로 모델을 알고 있다면 여기에서 인터페이스 &lt;code&gt;MemoryPoolMXBean&lt;/code&gt; 과 클래스 &lt;code&gt;MemoryUsage&lt;/code&gt; 있다면 &lt;em&gt;프록시를&lt;/em&gt; 생성 할 수 있습니다 . 이는 표준 MBean을 사용하는지 또는 MXBean을 사용하는지에 관계없이 모델을 미리 알고있을 때 관리 객체와 상호 작용하는 권장 방법입니다.</target>
        </trans-unit>
        <trans-unit id="c82a5d98728343602350f3acf815500ea1c5ee2c" translate="yes" xml:space="preserve">
          <source>The client end of a JMX API connector.</source>
          <target state="translated">JMX API 커넥터의 클라이언트 끝</target>
        </trans-unit>
        <trans-unit id="b4488646dd7bc568328ca00d7c96cdc5b511b54e" translate="yes" xml:space="preserve">
          <source>The client end of a JMX API connector. An object of this type can be used to establish a connection to a connector server.</source>
          <target state="translated">JMX API 커넥터의 클라이언트 끝 이 유형의 오브젝트를 사용하여 커넥터 서버에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e056ca88cf2a5987bb9340e8778e9152047e0db4" translate="yes" xml:space="preserve">
          <source>The client info property could not be set for some unknown reason</source>
          <target state="translated">알 수없는 이유로 클라이언트 정보 속성을 설정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4af7f3abc38c45da431d9cf62afd2acdb99a1a23" translate="yes" xml:space="preserve">
          <source>The client info property name specified was not a recognized property name.</source>
          <target state="translated">지정된 클라이언트 정보 속성 이름이 인식 된 속성 이름이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="f6d8cb5abcc9dba2b35caaa1100aa8007bd4f05d" translate="yes" xml:space="preserve">
          <source>The client must itself perform all plain text print data formatting not addressed by the above requirements.</source>
          <target state="translated">클라이언트 자체는 위의 요구 사항으로 해결되지 않은 모든 일반 텍스트 인쇄 데이터 형식을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="c5917a71094953288955570740d71ebfddac98fc" translate="yes" xml:space="preserve">
          <source>The client's TGT will be retrieved from the ticket cache and added to the &lt;code&gt;Subject&lt;/code&gt;'s private credentials. If the TGT is not available in the ticket cache, or the TGT's client name does not match the principal name, Java will use a secret key to obtain the TGT using the authentication exchange and added to the Subject's private credentials. This secret key will be first retrieved from the keytab. If the key is not available, the user will be prompted for the password. In either case, the key derived from the password will be added to the Subject's private credentials set.</source>
          <target state="translated">클라이언트의 TGT는 티켓 캐시에서 검색되고 &lt;code&gt;Subject&lt;/code&gt; 의 개인 자격 증명에 추가됩니다 . 티켓 캐시에서 TGT를 사용할 수 없거나 TGT의 클라이언트 이름이 주체 이름과 일치하지 않는 경우 Java는 비밀 키를 사용하여 인증 교환을 사용하여 TGT를 얻고 주체의 개인 자격 증명에 추가합니다. 이 비밀 키는 먼저 키 탭에서 검색됩니다. 키를 사용할 수없는 경우 사용자에게 암호를 입력하라는 메시지가 표시됩니다. 두 경우 모두 암호에서 파생 된 키가 주제의 개인 자격 증명 세트에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="61622044c23d1dc5bf6a5c87f1e0670101adac2f" translate="yes" xml:space="preserve">
          <source>The clock implementation provided here is based on &lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;. That method provides little to no guarantee about the accuracy of the clock. Applications requiring a more accurate clock must implement this abstract class themselves using a different external clock, such as an NTP server.</source>
          <target state="translated">여기에 제공된 시계 구현은 &lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt; 기반으로합니다. . 이 방법은 클럭의 정확성에 대해 거의 또는 전혀 보장하지 않습니다. 보다 정확한 클럭이 필요한 응용 프로그램은 NTP 서버와 같은 다른 외부 클럭을 사용하여이 추상 클래스 자체를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="60f70e9c0e75c2b841ccf57e9e8a8750236f14b8" translate="yes" xml:space="preserve">
          <source>The clock implementation provided here is based on the same underlying clock as &lt;a href=&quot;../lang/system#currentTimeMillis()&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;, but may have a precision finer than milliseconds if available. However, little to no guarantee is provided about the accuracy of the underlying clock. Applications requiring a more accurate clock must implement this abstract class themselves using a different external clock, such as an NTP server.</source>
          <target state="translated">여기에 제공된 클럭 구현은 &lt;a href=&quot;../lang/system#currentTimeMillis()&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt; 와 동일한 기본 클럭을 기반으로 하지만 가능한 경우 밀리 초보다 더 미세한 정밀도를 가질 수 있습니다. 그러나 기본 클록의 정확성에 대해서는 거의 또는 전혀 보장하지 않습니다. 보다 정확한 클럭이 필요한 애플리케이션은 NTP 서버와 같은 다른 외부 클럭을 사용하여이 추상 클래스를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="25e6815aa00a334e2bd9ee8bdf69f008eb1d1606" translate="yes" xml:space="preserve">
          <source>The clock sequence of this &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">이 &lt;code&gt;UUID&lt;/code&gt; 의 시계 순서</target>
        </trans-unit>
        <trans-unit id="4927698d61ddc5d19e93d88deb9e42d15dbacd87" translate="yes" xml:space="preserve">
          <source>The clock sequence value associated with this UUID.</source>
          <target state="translated">이 UUID와 관련된 시계 시퀀스 값입니다.</target>
        </trans-unit>
        <trans-unit id="5d1b1f6ea1a364b40310f013d2e4ede7c72b865f" translate="yes" xml:space="preserve">
          <source>The clock-hour-of-am-pm.</source>
          <target state="translated">시계 시간.</target>
        </trans-unit>
        <trans-unit id="d9d6945b9a1ccb1b98abde4cb5b49e528dae6fda" translate="yes" xml:space="preserve">
          <source>The clock-hour-of-day.</source>
          <target state="translated">하루 중 시간입니다.</target>
        </trans-unit>
        <trans-unit id="f99a4a21e3cbbe9ed012eae5ee38148685f4c0a2" translate="yes" xml:space="preserve">
          <source>The clone method of &lt;code&gt;ParameterBlock&lt;/code&gt; has been defined to perform a clone of both the source and parameter Vectors for this reason. A standard, shallow clone is available as shallowClone.</source>
          <target state="translated">이러한 이유로 &lt;code&gt;ParameterBlock&lt;/code&gt; 의 복제 방법은 소스 및 매개 변수 벡터의 복제를 수행하도록 정의되었습니다. 표준 얕은 클론은 shallowClone으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1b7c80996a5e85fd8320fb1c8404949dc7f534a" translate="yes" xml:space="preserve">
          <source>The cloned recording contains the same recording data as the original, but it has a new ID and a name prefixed with &lt;code&gt;&quot;Clone of recording&quot;&lt;/code&gt;. If the original recording is running, then the clone is also running.</source>
          <target state="translated">복제 된 레코딩에는 원본과 동일한 레코딩 데이터가 포함되어 있지만 새 ID와 &lt;code&gt;&quot;Clone of recording&quot;&lt;/code&gt; 접두사가 붙은 이름이 있습니다. 원본 레코딩이 실행 중이면 클론도 실행 중입니다.</target>
        </trans-unit>
        <trans-unit id="d29ef91f5598635f832c0c367c1938a13aaa5119" translate="yes" xml:space="preserve">
          <source>The close button text property.</source>
          <target state="translated">닫기 버튼 텍스트 속성입니다.</target>
        </trans-unit>
        <trans-unit id="6d57647df9ab28bd7a91edbfabcfa0167bacdd81" translate="yes" xml:space="preserve">
          <source>The close button.</source>
          <target state="translated">닫기 버튼.</target>
        </trans-unit>
        <trans-unit id="d2af3b0194ee94870d3a705f6f087b87ffb73e03" translate="yes" xml:space="preserve">
          <source>The close icon.</source>
          <target state="translated">닫기 아이콘.</target>
        </trans-unit>
        <trans-unit id="67da0df2a20add6c7e78cab2dd3884834bc5386c" translate="yes" xml:space="preserve">
          <source>The close method will perform a &lt;code&gt;flush&lt;/code&gt; and then close the &lt;code&gt;Handler&lt;/code&gt;. After close has been called this &lt;code&gt;Handler&lt;/code&gt; should no longer be used. Method calls may either be silently ignored or may throw runtime exceptions.</source>
          <target state="translated">close 메소드는 &lt;code&gt;flush&lt;/code&gt; 를 수행 한 다음 &lt;code&gt;Handler&lt;/code&gt; 를 닫습니다 . close가 호출 된 후에는이 &lt;code&gt;Handler&lt;/code&gt; 를 더 이상 사용하지 않아야합니다. 메소드 호출은 자동으로 무시되거나 런타임 예외를 발생시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a278df20a4194f01149ab1f3b134649f546b181a" translate="yes" xml:space="preserve">
          <source>The closing of a &lt;code&gt;ResultSet&lt;/code&gt; object does &lt;strong&gt;not&lt;/strong&gt; close the &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt; or &lt;code&gt;NClob&lt;/code&gt; objects created by the &lt;code&gt;ResultSet&lt;/code&gt;. &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt; or &lt;code&gt;NClob&lt;/code&gt; objects remain valid for at least the duration of the transaction in which they are created, unless their &lt;code&gt;free&lt;/code&gt; method is invoked.</source>
          <target state="translated">(A)의 폐쇄 &lt;code&gt;ResultSet&lt;/code&gt; 오브젝트 수행 &lt;strong&gt;하지&lt;/strong&gt; 가까운 &lt;code&gt;Blob&lt;/code&gt; , &lt;code&gt;Clob&lt;/code&gt; 또는 &lt;code&gt;NClob&lt;/code&gt; 에 의해 생성 된 객체 &lt;code&gt;ResultSet&lt;/code&gt; . &lt;code&gt;Blob&lt;/code&gt; , &lt;code&gt;Clob&lt;/code&gt; 또는 &lt;code&gt;NClob&lt;/code&gt; 개체는 &lt;code&gt;free&lt;/code&gt; 메서드가 호출 되지 않는 한 적어도 생성 된 트랜잭션 기간 동안 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="18c7e6c960afbbeecf9e874b2c23ef37988a06f8" translate="yes" xml:space="preserve">
          <source>The closure type for an arc closed by drawing a straight line segment from the start of the arc segment to the end of the arc segment.</source>
          <target state="translated">호 세그먼트의 시작에서 호 세그먼트의 끝까지 직선 세그먼트를 그려 닫힌 호의 마감 유형입니다.</target>
        </trans-unit>
        <trans-unit id="4c39613051bf7d0c4295a311b805c0c3ccbc1f93" translate="yes" xml:space="preserve">
          <source>The closure type for an arc closed by drawing straight line segments from the start of the arc segment to the center of the full ellipse and from that point to the end of the arc segment.</source>
          <target state="translated">호 세그먼트의 시작에서 전체 타원의 중심까지 그리고 해당 지점에서 호 세그먼트의 끝까지 직선 세그먼트를 그려 닫힌 호의 마감 유형입니다.</target>
        </trans-unit>
        <trans-unit id="a03faa6189392649c5e4b049d8285ee21de43d50" translate="yes" xml:space="preserve">
          <source>The closure type for an open arc with no path segments connecting the two ends of the arc segment.</source>
          <target state="translated">호 세그먼트의 두 끝을 연결하는 경로 세그먼트가없는 열린 호의 마감 유형입니다.</target>
        </trans-unit>
        <trans-unit id="4fd1533908a49f3a3287d84ea06d505a13b12494" translate="yes" xml:space="preserve">
          <source>The code above would remain correct even if the &lt;code&gt;onSpinWait&lt;/code&gt; method was not called at all. However on some architectures the Java Virtual Machine may issue the processor instructions to address such code patterns in a more beneficial way.</source>
          <target state="translated">위의 코드는 &lt;code&gt;onSpinWait&lt;/code&gt; 메서드가 전혀 호출되지 않은 경우에도 올바르게 유지 됩니다. 그러나 일부 아키텍처에서는 Java Virtual Machine이 이러한 코드 패턴을보다 유익한 방식으로 처리하기 위해 프로세서 명령을 발행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1433e4121635551dd14010c6b704bba7b5e5e75" translate="yes" xml:space="preserve">
          <source>The code base URL.</source>
          <target state="translated">코드 기본 URL입니다.</target>
        </trans-unit>
        <trans-unit id="d704a02142327979b6f7a982175f4ea4d53045b2" translate="yes" xml:space="preserve">
          <source>The code for this applet is as follows:</source>
          <target state="translated">이 애플릿의 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="56ce6ef2114da8b3480773fc41a5bba91e0be358" translate="yes" xml:space="preserve">
          <source>The code fragment should be context free and must be a legal Java expression as specified by the JLS.</source>
          <target state="translated">코드 단편은 컨텍스트가 없어야하며 JLS에서 지정한대로 올바른 Java 표현식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="7551fda94d924a51c214eacfb5d20ee1569ef738" translate="yes" xml:space="preserve">
          <source>The code sample in &lt;a href=&quot;pagedresultscontrol&quot;&gt;&lt;code&gt;PagedResultsControl&lt;/code&gt;&lt;/a&gt; shows how this class may be used.</source>
          <target state="translated">&lt;a href=&quot;pagedresultscontrol&quot;&gt; &lt;code&gt;PagedResultsControl&lt;/code&gt; &lt;/a&gt; 의 코드 샘플은 이 클래스를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2d9000efa3a911a92cbde4578c40faa3825deb27" translate="yes" xml:space="preserve">
          <source>The code sample in &lt;a href=&quot;sortcontrol&quot;&gt;&lt;code&gt;SortControl&lt;/code&gt;&lt;/a&gt; shows how this class may be used.</source>
          <target state="translated">&lt;a href=&quot;sortcontrol&quot;&gt; &lt;code&gt;SortControl&lt;/code&gt; &lt;/a&gt; 의 코드 샘플은 이 클래스를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="71f14a2b64370084990ba267c7b13cea9da68ef3" translate="yes" xml:space="preserve">
          <source>The collapsed icon.</source>
          <target state="translated">접힌 아이콘.</target>
        </trans-unit>
        <trans-unit id="30d83691e8c4e45b8fe52bdd6fd725a184c8ca07" translate="yes" xml:space="preserve">
          <source>The collation table is composed of a list of collation rules, where each rule is of one of three forms:</source>
          <target state="translated">데이터 정렬 테이블은 데이터 정렬 규칙 목록으로 구성되며 각 규칙은 다음 세 가지 형식 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="e39acbc9ca1e56a207a412ecefdd26632bd0c65e" translate="yes" xml:space="preserve">
          <source>The collection implementations that are public classes (such as &lt;code&gt;ArrayList&lt;/code&gt; or &lt;code&gt;HashMap&lt;/code&gt;) are declared to implement the &lt;code&gt;Serializable&lt;/code&gt; interface if they are in fact serializable. Some collections implementations are not public classes, such as the &lt;a href=&quot;#unmodifiable&quot;&gt;unmodifiable collections.&lt;/a&gt; In such cases, the serializability of such collections is described in the specification of the method that creates them, or in some other suitable place. In cases where the serializability of a collection is not specified, there is no guarantee about the serializability of such collections. In particular, many &lt;a href=&quot;#view&quot;&gt;view collections&lt;/a&gt; are not serializable.</source>
          <target state="translated">공용 클래스 (예 : &lt;code&gt;ArrayList&lt;/code&gt; 또는 &lt;code&gt;HashMap&lt;/code&gt; ) 인 컬렉션 구현 은 실제로 직렬화 가능한 경우 &lt;code&gt;Serializable&lt;/code&gt; 인터페이스 를 구현하도록 선언됩니다 . 일부 컬렉션 구현은 &lt;a href=&quot;#unmodifiable&quot;&gt;수정할 수없는 컬렉션&lt;/a&gt; 과 같은 공용 클래스가 아닙니다 . 이러한 경우 이러한 컬렉션의 직렬화 가능성은 컬렉션을 만드는 메서드의 사양이나 다른 적절한 위치에 설명되어 있습니다. 컬렉션의 직렬화 가능성이 지정되지 않은 경우 해당 컬렉션의 직렬화 가능성에 대한 보장이 없습니다. 특히 많은 &lt;a href=&quot;#view&quot;&gt;뷰 컬렉션&lt;/a&gt; 은 직렬화 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7c1827d597c9c77ae6e1e11339356cf0f6e7e02e" translate="yes" xml:space="preserve">
          <source>The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. If the map is modified while an iteration over the collection is in progress (except through the iterator's own &lt;code&gt;remove&lt;/code&gt; operation), the results of the iteration are undefined. The collection supports element removal, which removes the corresponding mapping from the map, via the &lt;code&gt;Iterator.remove&lt;/code&gt;, &lt;code&gt;Collection.remove&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt; and &lt;code&gt;clear&lt;/code&gt; operations. It does not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;addAll&lt;/code&gt; operations.</source>
          <target state="translated">컬렉션은 맵에 의해 지원되므로 맵에 대한 변경 사항은 컬렉션에 반영되며 그 반대도 마찬가지입니다. 컬렉션에 대한 반복이 진행되는 동안 맵이 수정되면 (반복자의 자체 &lt;code&gt;remove&lt;/code&gt; 작업을 제외하고 ) 반복 결과는 정의되지 않습니다. 이 컬렉션은 &lt;code&gt;Iterator.remove&lt;/code&gt; , &lt;code&gt;Collection.remove&lt;/code&gt; , &lt;code&gt;removeAll&lt;/code&gt; , &lt;code&gt;retainAll&lt;/code&gt; 및 &lt;code&gt;clear&lt;/code&gt; 작업을 통해 맵에서 해당 매핑을 제거하는 요소 제거를 지원 합니다. &lt;code&gt;add&lt;/code&gt; 또는 &lt;code&gt;addAll&lt;/code&gt; 조작을 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="08a9f493e12bc421d71667070210c7e0b80be588" translate="yes" xml:space="preserve">
          <source>The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. The collection supports element removal, which removes the corresponding mapping from the map, via the &lt;code&gt;Iterator.remove&lt;/code&gt;, &lt;code&gt;Collection.remove&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt; and &lt;code&gt;clear&lt;/code&gt; operations. It does not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;addAll&lt;/code&gt; operations.</source>
          <target state="translated">컬렉션은 맵에 의해 지원되므로 맵에 대한 변경 사항은 컬렉션에 반영되며 그 반대도 마찬가지입니다. 이 컬렉션은 &lt;code&gt;Iterator.remove&lt;/code&gt; , &lt;code&gt;Collection.remove&lt;/code&gt; , &lt;code&gt;removeAll&lt;/code&gt; , &lt;code&gt;retainAll&lt;/code&gt; 및 &lt;code&gt;clear&lt;/code&gt; 작업을 통해 맵에서 해당 매핑을 제거하는 요소 제거를 지원 합니다. &lt;code&gt;add&lt;/code&gt; 또는 &lt;code&gt;addAll&lt;/code&gt; 조작을 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="0ae6cac46e4d7c9b4fdc7934d10d1e2d1a73c597" translate="yes" xml:space="preserve">
          <source>The collection is created the first time this method is called, and returned in response to all subsequent calls. No synchronization is performed, so there is a slight chance that multiple calls to this method will not all return the same collection.</source>
          <target state="translated">콜렉션은이 메소드가 처음 호출 될 때 작성되며 모든 후속 호출에 대한 응답으로 리턴됩니다. 동기화가 수행되지 않으므로이 메소드에 대한 여러 호출이 모두 동일한 콜렉션을 리턴하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="30318c54ab2c84d8396b6c98c9741aa6ec814e20" translate="yes" xml:space="preserve">
          <source>The collection of &lt;code&gt;OPTION&lt;/code&gt; elements contained by this element.</source>
          <target state="translated">이 요소에 포함 된 &lt;code&gt;OPTION&lt;/code&gt; 요소 의 컬렉션입니다 .</target>
        </trans-unit>
        <trans-unit id="f191f447c47d7dfe057061f96c5ef872bcbd1f83" translate="yes" xml:space="preserve">
          <source>The collection of &lt;code&gt;UndoableEdit&lt;/code&gt;s undone/redone en masse by this &lt;code&gt;CompoundEdit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;UndoableEdit&lt;/code&gt; 컬렉션은 이 &lt;code&gt;CompoundEdit&lt;/code&gt; 에 의해 한꺼번에 취소 / 재실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="eba9bad189903fe8ec166dd781cadcf5a9f6cd7b" translate="yes" xml:space="preserve">
          <source>The collection of cells in this row.</source>
          <target state="translated">이 행의 셀 모음입니다.</target>
        </trans-unit>
        <trans-unit id="346407db4e0cffd7947837447d691abd899e03aa" translate="yes" xml:space="preserve">
          <source>The collection of registered listeners</source>
          <target state="translated">등록 된 리스너 컬렉션</target>
        </trans-unit>
        <trans-unit id="f48427e777dd6d5ef7f716d7b117f81b431f580c" translate="yes" xml:space="preserve">
          <source>The collection of rows in this table section.</source>
          <target state="translated">이 테이블 섹션의 행 컬렉션입니다.</target>
        </trans-unit>
        <trans-unit id="c5c3e34cded6e5734738b1e1b8b06c8233974e12" translate="yes" xml:space="preserve">
          <source>The collection should not be modified (see &lt;a href=&quot;#add(java.security.Permission)&quot;&gt;&lt;code&gt;add(java.security.Permission)&lt;/code&gt;&lt;/a&gt;) during the execution of the terminal stream operation. Otherwise, the result of the terminal stream operation is undefined.</source>
          <target state="translated">컬렉션은 터미널 스트림 작업을 실행하는 동안 수정 ( &lt;a href=&quot;#add(java.security.Permission)&quot;&gt; &lt;code&gt;add(java.security.Permission)&lt;/code&gt; &lt;/a&gt; 참조)해서는 안됩니다 . 그렇지 않으면 터미널 스트림 작업의 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8bf124bacc13ad53500c93100391bd683fd0dda8" translate="yes" xml:space="preserve">
          <source>The collection usage threshold crossing checking is enabled in this memory pool if the threshold is set to a positive value. The collection usage threshold crossing checking is disabled if it is set to zero.</source>
          <target state="translated">임계 값이 양수로 설정되면이 메모리 풀에서 콜렉션 사용 임계 값 교차 점검이 사용 가능합니다. 콜렉션 사용 임계 값 교차 점검이 0으로 설정되면 사용 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="9156660a2ac7aa98ef313cabffe7060e8aa35409" translate="yes" xml:space="preserve">
          <source>The collection usage threshold is designed for monitoring the memory usage after the Java virtual machine has expended effort in reclaiming memory space. The collection usage could also be monitored by the polling and threshold notification mechanism described above for the &lt;a href=&quot;#UsageThreshold&quot;&gt;usage threshold&lt;/a&gt; in a similar fashion.</source>
          <target state="translated">콜렉션 사용 임계 값은 JVM (Java Virtual Machine)이 메모리 공간을 확보하기 위해 노력한 후 메모리 사용을 모니터하기 위해 설계되었습니다. 수집 사용량은 유사한 방식으로 &lt;a href=&quot;#UsageThreshold&quot;&gt;사용량 임계 값&lt;/a&gt; 에 대해 전술 한 폴링 및 임계 값 통지 메커니즘에 의해 모니터링 될 수도있다 .</target>
        </trans-unit>
        <trans-unit id="0e2883e94761fa22e846a8f32267f5142a06c8d2" translate="yes" xml:space="preserve">
          <source>The collection's iterator returns the values in ascending order of the corresponding keys. The collection's spliterator is &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;fail-fast&lt;/em&gt;, and additionally reports &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt; with an encounter order that is ascending order of the corresponding keys.</source>
          <target state="translated">컬렉션의 반복자는 해당 키의 오름차순으로 값을 반환합니다. 컬렉션의 스플리터는 &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt; , &lt;em&gt;fail-fast&lt;/em&gt; 이며 추가로 해당 키의 오름차순으로 발생 순서가있는 &lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt; 를 보고 합니다.</target>
        </trans-unit>
        <trans-unit id="ea1bd030966840638731efedafac9a0ec7782728" translate="yes" xml:space="preserve">
          <source>The collection's iterator returns the values in ascending order of the corresponding keys. The collections's spliterator additionally reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, with an encounter order that is ascending order of the corresponding keys.</source>
          <target state="translated">컬렉션의 반복자는 해당 키의 오름차순으로 값을 반환합니다. 컬렉션의 스플리터는 추가로 해당 키의 오름차순 인 발생 순서와 함께 &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; 를&lt;/a&gt; 보고 합니다.</target>
        </trans-unit>
        <trans-unit id="e274436db22ea8e689c8f92c1a625157a2ad4161" translate="yes" xml:space="preserve">
          <source>The collector has the &lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt;&lt;code&gt;Collector.Characteristics.CONCURRENT&lt;/code&gt;&lt;/a&gt; characteristic, and;</source>
          <target state="translated">수집기는 &lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt; &lt;code&gt;Collector.Characteristics.CONCURRENT&lt;/code&gt; &lt;/a&gt; 특성을 가지며;</target>
        </trans-unit>
        <trans-unit id="91ec48482e2398b213123b4670de324887cddaf6" translate="yes" xml:space="preserve">
          <source>The colon character &lt;code&gt;':'&lt;/code&gt; (&lt;code&gt;'\u003a'&lt;/code&gt;, &lt;small&gt;COLON&lt;/small&gt;), and</source>
          <target state="translated">콜론 문자 &lt;code&gt;':'&lt;/code&gt; ( &lt;code&gt;'\u003a'&lt;/code&gt; , &lt;small&gt;COLON&lt;/small&gt; ) 및</target>
        </trans-unit>
        <trans-unit id="9fd1379c9afe56acbb2fb69be0fad0a683d98a4f" translate="yes" xml:space="preserve">
          <source>The colon separator need not be present if the request headers list is empty. No white-space is permitted in the actions string. The action strings supplied to the URLPermission constructors are case-insensitive and are normalized by converting method names to upper-case and header names to the form defines in RFC2616 (lower case with initial letter of each word capitalized). Either list can contain a wild-card '*' character which signifies all request methods or headers respectively.</source>
          <target state="translated">요청 헤더 목록이 비어 있으면 콜론 구분 기호가 없어도됩니다. 조치 문자열에는 공백이 허용되지 않습니다. URLPermission 생성자에 제공된 조치 문자열은 대소 문자를 구분하지 않으며 메소드 이름을 대문자로 변환하고 헤더 이름을 RFC2616에 정의 된 양식으로 변환하여 정규화됩니다 (소문자는 각 단어의 첫 문자가 대문자로 표시됨). 목록 중 하나는 와일드 카드 '*'문자를 포함 할 수 있으며 모든 요청 메소드 또는 헤더를 각각 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="68ba72595a28be58ad484f9969b1561a3533d484" translate="yes" xml:space="preserve">
          <source>The color black.</source>
          <target state="translated">색상은 검정색입니다.</target>
        </trans-unit>
        <trans-unit id="9351a475c4876bc4a8139bd04708c9c02d950e4a" translate="yes" xml:space="preserve">
          <source>The color black. In the default sRGB space.</source>
          <target state="translated">색상은 검정색입니다. 기본 sRGB 공간.</target>
        </trans-unit>
        <trans-unit id="94d08170b466b38e4ff184e42121bece2d6e5f50" translate="yes" xml:space="preserve">
          <source>The color blue.</source>
          <target state="translated">파란색입니다.</target>
        </trans-unit>
        <trans-unit id="e3ca3c9170007b59c5fffaf29b108c837f98c528" translate="yes" xml:space="preserve">
          <source>The color blue. In the default sRGB space.</source>
          <target state="translated">파란색입니다. 기본 sRGB 공간.</target>
        </trans-unit>
        <trans-unit id="4687f5ae22be6b4fc7eae766669df876fd9d4220" translate="yes" xml:space="preserve">
          <source>The color cyan.</source>
          <target state="translated">청록색.</target>
        </trans-unit>
        <trans-unit id="62cbf8e961f0f6bcb5ef066647827f848eccfa43" translate="yes" xml:space="preserve">
          <source>The color cyan. In the default sRGB space.</source>
          <target state="translated">청록색. 기본 sRGB 공간.</target>
        </trans-unit>
        <trans-unit id="62fb1aac2f951bcbbc0d263363f154cedccd14df" translate="yes" xml:space="preserve">
          <source>The color dark gray.</source>
          <target state="translated">색상은 진한 회색입니다.</target>
        </trans-unit>
        <trans-unit id="4afc1c3a9e95ae885b7c529889ebd65674fecb21" translate="yes" xml:space="preserve">
          <source>The color dark gray. In the default sRGB space.</source>
          <target state="translated">색상은 진한 회색입니다. 기본 sRGB 공간.</target>
        </trans-unit>
        <trans-unit id="b652c6399322a315c91091c14b17a0a928605190" translate="yes" xml:space="preserve">
          <source>The color gray.</source>
          <target state="translated">회색.</target>
        </trans-unit>
        <trans-unit id="3b1ee35324073f5340ab18472ef18601f6c1a46c" translate="yes" xml:space="preserve">
          <source>The color gray. In the default sRGB space.</source>
          <target state="translated">회색. 기본 sRGB 공간.</target>
        </trans-unit>
        <trans-unit id="244815b6ae3c4d80a77a22feed060a5551010f7c" translate="yes" xml:space="preserve">
          <source>The color green.</source>
          <target state="translated">녹색입니다.</target>
        </trans-unit>
        <trans-unit id="b6e57a4c9a15edaf29ab93a2c9c0e191bb5a8294" translate="yes" xml:space="preserve">
          <source>The color green. In the default sRGB space.</source>
          <target state="translated">녹색입니다. 기본 sRGB 공간.</target>
        </trans-unit>
        <trans-unit id="7ded0b43eed8c2c56789f69d87ecca1126db35c7" translate="yes" xml:space="preserve">
          <source>The color light gray.</source>
          <target state="translated">밝은 회색 색상입니다.</target>
        </trans-unit>
        <trans-unit id="24fdeb5f31a624ae0805c1404de09e707fa42094" translate="yes" xml:space="preserve">
          <source>The color light gray. In the default sRGB space.</source>
          <target state="translated">밝은 회색 색상입니다. 기본 sRGB 공간.</target>
        </trans-unit>
        <trans-unit id="618d2ce311bed621ad2dc8ae7c1f95741b8a6306" translate="yes" xml:space="preserve">
          <source>The color magenta.</source>
          <target state="translated">마젠타 색상입니다.</target>
        </trans-unit>
        <trans-unit id="a97e1d5d35f5930a5ebb1fdab89dd1c63d806304" translate="yes" xml:space="preserve">
          <source>The color magenta. In the default sRGB space.</source>
          <target state="translated">마젠타 색상입니다. 기본 sRGB 공간.</target>
        </trans-unit>
        <trans-unit id="c9df8b5810acfa9f70dbf00d5cfbf02dd558f9bc" translate="yes" xml:space="preserve">
          <source>The color of a disabled text.</source>
          <target state="translated">비활성화 된 텍스트의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="dac16cf3dd8b3f34864a59ad6ed136749d58d52c" translate="yes" xml:space="preserve">
          <source>The color of a focused toggle button.</source>
          <target state="translated">초점이 맞춰진 토글 버튼의 ​​색상입니다.</target>
        </trans-unit>
        <trans-unit id="9bb1c1c85d69cbe420aa8e7c8771ce6003b6f6f2" translate="yes" xml:space="preserve">
          <source>The color of a not selected text.</source>
          <target state="translated">선택되지 않은 텍스트의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="e130dff1a1a77424ef685d3041b4e33df52d20f8" translate="yes" xml:space="preserve">
          <source>The color of a not selected title.</source>
          <target state="translated">선택되지 않은 제목의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="eb6f5f316f2810a23c5bcea9a31cb9d1750f0ab5" translate="yes" xml:space="preserve">
          <source>The color of a selected button.</source>
          <target state="translated">선택한 버튼의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="2c95c4c54c3003d98cdbba0d81013cced2cfb03b" translate="yes" xml:space="preserve">
          <source>The color of a selected text.</source>
          <target state="translated">선택한 텍스트의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="1b8d522744d37311d86d157e531405a934b8e65c" translate="yes" xml:space="preserve">
          <source>The color of a selected title.</source>
          <target state="translated">선택한 타이틀의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="9d15dece56bff8e66e223bf72d1560e52eb7773e" translate="yes" xml:space="preserve">
          <source>The color of a thumb</source>
          <target state="translated">엄지 손가락의 색</target>
        </trans-unit>
        <trans-unit id="e7351bb9dc833bba5b6675ab65dad66b0b19bfc2" translate="yes" xml:space="preserve">
          <source>The color of dark shadow.</source>
          <target state="translated">어두운 그림자의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="c0fb24555b2a49c851fcc0e585c3a919800e3918" translate="yes" xml:space="preserve">
          <source>The color of highlight</source>
          <target state="translated">하이라이트 색상</target>
        </trans-unit>
        <trans-unit id="b55b17f589c04df6ec55438be252029f40604801" translate="yes" xml:space="preserve">
          <source>The color of highlight.</source>
          <target state="translated">하이라이트 색상입니다.</target>
        </trans-unit>
        <trans-unit id="74ab3ae6bd267db764b2db3a7e4e8e8c2da9522e" translate="yes" xml:space="preserve">
          <source>The color of highlighting.</source>
          <target state="translated">강조 표시의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="61913ca0aef1dcdb076a892e703a07e2f8276fa6" translate="yes" xml:space="preserve">
          <source>The color of light highlight.</source>
          <target state="translated">밝은 부분의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="cce3119ec861405d3f9b3b9c4b6fe2db50169799" translate="yes" xml:space="preserve">
          <source>The color of shadow</source>
          <target state="translated">그림자의 색</target>
        </trans-unit>
        <trans-unit id="70fc9e4b387e4c6e3e5a9255f1fe68fdb908fccb" translate="yes" xml:space="preserve">
          <source>The color of shadow.</source>
          <target state="translated">그림자의 색.</target>
        </trans-unit>
        <trans-unit id="07a9a00c25b33779e039088100991c3d7b931629" translate="yes" xml:space="preserve">
          <source>The color of tab's background.</source>
          <target state="translated">탭의 배경색입니다.</target>
        </trans-unit>
        <trans-unit id="2797099178306e56b9ccc7212af5a27a3dd06ea8" translate="yes" xml:space="preserve">
          <source>The color of the &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; 의 색상입니다 .</target>
        </trans-unit>
        <trans-unit id="89be517ecf62e9c4d68959a954d7534a16f5855e" translate="yes" xml:space="preserve">
          <source>The color of the accelerator foreground.</source>
          <target state="translated">가속기 전경의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="d0168136a09f5e47a94cee2eabfa5be87d797f7c" translate="yes" xml:space="preserve">
          <source>The color of the accelerator selection.</source>
          <target state="translated">가속기 선택 색상입니다.</target>
        </trans-unit>
        <trans-unit id="0c48146b84e4f4a08bab2c8533faa0de8e3dea35" translate="yes" xml:space="preserve">
          <source>The color of the disabled color.</source>
          <target state="translated">비활성화 된 색상의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="cc6c22d1a991d3cd1b320708e2be87563899301e" translate="yes" xml:space="preserve">
          <source>The color of the disabled foreground.</source>
          <target state="translated">비활성화 된 전경의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="06f674d86c2b3b574a64a974a97059572ca503bb" translate="yes" xml:space="preserve">
          <source>The color of the docking border.</source>
          <target state="translated">도킹 테두리의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="e500ae03acce7f2e5f867c075c681876ecdfc2f2" translate="yes" xml:space="preserve">
          <source>The color of the focused button.</source>
          <target state="translated">초점이 맞춰진 버튼의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="5f511100678adb7fe8e176564acb1d95848544b1" translate="yes" xml:space="preserve">
          <source>The color of the focused radio button.</source>
          <target state="translated">포커스가있는 라디오 버튼의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="93a938386695418b44a9dd31464af9b1ea2207b9" translate="yes" xml:space="preserve">
          <source>The color of the grid.</source>
          <target state="translated">그리드의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="dca51a4fa17a87781e904454f544f2faa6778134" translate="yes" xml:space="preserve">
          <source>The color of the highlight.</source>
          <target state="translated">하이라이트의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="86cd7e9871235defb143bd365e646839074b4b82" translate="yes" xml:space="preserve">
          <source>The color of the highlighting.</source>
          <target state="translated">강조 표시의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="68dfa593a45554e1f57b83045528737bfae8df91" translate="yes" xml:space="preserve">
          <source>The color of the not docking border.</source>
          <target state="translated">고정되지 않은 테두리의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="eaa79c38506780c2c880a597ad9a4c5dab7274d0" translate="yes" xml:space="preserve">
          <source>The color of the selected button.</source>
          <target state="translated">선택한 버튼의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="c7aadb72c536d5d9b0fd80d6def297652c894e22" translate="yes" xml:space="preserve">
          <source>The color of the selected pane.</source>
          <target state="translated">선택한 창의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="d81f3abb63de1aeb0f2f584658c56d291027b7f8" translate="yes" xml:space="preserve">
          <source>The color of the selected radio button.</source>
          <target state="translated">선택한 라디오 버튼의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="a1e72920ae27745e8cb629c80b7a825f51bf90eb" translate="yes" xml:space="preserve">
          <source>The color of the selection background.</source>
          <target state="translated">선택 배경의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="d26fb6269c3652a691572f829a4a4ce93b7f6164" translate="yes" xml:space="preserve">
          <source>The color of the selection foreground.</source>
          <target state="translated">선택 전경의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="9e53e8d06b966cfcfb27cde9767af94501e73a00" translate="yes" xml:space="preserve">
          <source>The color of the shadow.</source>
          <target state="translated">그림자의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="8cc2421dc7c0fcc193ceb4e34e0cd757a8fe8514" translate="yes" xml:space="preserve">
          <source>The color of the title.</source>
          <target state="translated">제목의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="5df2c133cc4ba4e246550aad08ec190c9913234b" translate="yes" xml:space="preserve">
          <source>The color orange.</source>
          <target state="translated">주황색입니다.</target>
        </trans-unit>
        <trans-unit id="4667f9a9b9261452b63e3aa4ae8a2b2a7a6a5c96" translate="yes" xml:space="preserve">
          <source>The color orange. In the default sRGB space.</source>
          <target state="translated">주황색입니다. 기본 sRGB 공간.</target>
        </trans-unit>
        <trans-unit id="8a6bff0b3dfd1453a6812a74d3056ba8d8230a0f" translate="yes" xml:space="preserve">
          <source>The color pink.</source>
          <target state="translated">핑크색.</target>
        </trans-unit>
        <trans-unit id="ef56f15c7590160ad4b7169e0205fdc4eaeba7ba" translate="yes" xml:space="preserve">
          <source>The color pink. In the default sRGB space.</source>
          <target state="translated">핑크색. 기본 sRGB 공간.</target>
        </trans-unit>
        <trans-unit id="7e17f139ecfe650f733673528029a01dc810cf2b" translate="yes" xml:space="preserve">
          <source>The color red.</source>
          <target state="translated">빨간색입니다.</target>
        </trans-unit>
        <trans-unit id="1db1f131057a2cc99275fff3c62087a86d3d0e1d" translate="yes" xml:space="preserve">
          <source>The color red. In the default sRGB space.</source>
          <target state="translated">빨간색입니다. 기본 sRGB 공간.</target>
        </trans-unit>
        <trans-unit id="73dc6c175e96343aeac36f3c1ba689f45f21d4c0" translate="yes" xml:space="preserve">
          <source>The color rendered for dark shadow areas on 3D control objects, such as pushbuttons.</source>
          <target state="translated">푸시 버튼과 같은 3D 제어 개체의 어두운 그림자 영역에 대해 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="470a67d1a353f89ccc801b2bbbce110851397128" translate="yes" xml:space="preserve">
          <source>The color rendered for dark shadow areas on 3D control objects, such as pushbuttons. This color is typically derived from the &lt;code&gt;control&lt;/code&gt; background color to provide a 3D effect.</source>
          <target state="translated">푸시 버튼과 같은 3D 제어 개체의 어두운 그림자 영역에 대해 렌더링 된 색상입니다. 이 색상은 일반적으로 3D 효과를 제공하기 위해 &lt;code&gt;control&lt;/code&gt; 배경 색상 에서 파생됩니다 .</target>
        </trans-unit>
        <trans-unit id="f6b1d595a7532e8d56127a76db05b3d8aac9ac54" translate="yes" xml:space="preserve">
          <source>The color rendered for highlight areas of 3D control objects, such as pushbuttons.</source>
          <target state="translated">푸시 버튼과 같은 3D 제어 개체의 강조 영역에 대해 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="907c2eceaaf260a7f594c2030d51e1e5893151dd" translate="yes" xml:space="preserve">
          <source>The color rendered for highlight areas of 3D control objects, such as pushbuttons. This color is typically derived from the &lt;code&gt;control&lt;/code&gt; background color to provide a 3D effect.</source>
          <target state="translated">푸시 버튼과 같은 3D 제어 개체의 강조 영역에 대해 렌더링 된 색상입니다. 이 색상은 일반적으로 3D 효과를 제공하기 위해 &lt;code&gt;control&lt;/code&gt; 배경 색상 에서 파생됩니다 .</target>
        </trans-unit>
        <trans-unit id="46258c1bb708e0b97d3387f84e326825aae32a3f" translate="yes" xml:space="preserve">
          <source>The color rendered for light areas of 3D control objects, such as pushbuttons.</source>
          <target state="translated">푸시 버튼과 같은 3D 컨트롤 개체의 밝은 영역에 대해 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="2b5fc66e3c159e5025318736304bbbb0938cb701" translate="yes" xml:space="preserve">
          <source>The color rendered for light areas of 3D control objects, such as pushbuttons. This color is typically derived from the &lt;code&gt;control&lt;/code&gt; background color to provide a 3D effect.</source>
          <target state="translated">푸시 버튼과 같은 3D 컨트롤 개체의 밝은 영역에 대해 렌더링 된 색상입니다. 이 색상은 일반적으로 3D 효과를 제공하기 위해 &lt;code&gt;control&lt;/code&gt; 배경 색상 에서 파생됩니다 .</target>
        </trans-unit>
        <trans-unit id="02e44af3a6d64b651c997de7dc5c40fd5deb610a" translate="yes" xml:space="preserve">
          <source>The color rendered for shadow areas of 3D control objects, such as pushbuttons.</source>
          <target state="translated">푸시 버튼과 같은 3D 컨트롤 개체의 그림자 영역에 대해 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="8f8d3fb8cdbca739a5271ee5aa07d4c024931b6a" translate="yes" xml:space="preserve">
          <source>The color rendered for shadow areas of 3D control objects, such as pushbuttons. This color is typically derived from the &lt;code&gt;control&lt;/code&gt; background color to provide a 3D effect.</source>
          <target state="translated">푸시 버튼과 같은 3D 컨트롤 개체의 그림자 영역에 대해 렌더링 된 색상입니다. 이 색상은 일반적으로 3D 효과를 제공하기 위해 &lt;code&gt;control&lt;/code&gt; 배경 색상 에서 파생됩니다 .</target>
        </trans-unit>
        <trans-unit id="12dc2438f875a6d4833a57632f2fe2d98eb81d69" translate="yes" xml:space="preserve">
          <source>The color rendered for text of interior regions inside windows.</source>
          <target state="translated">창 내부 내부 영역의 텍스트에 대해 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="fd3b53f20d1337804908f3096e2a8b8a9cd1df78" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of control panels and control objects, such as pushbuttons.</source>
          <target state="translated">제어 패널 및 제어 개체 (예 : 누름 단추)의 배경에 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="4dbb4f735b101125078febd0d4ed06f15fd6c140" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of interior regions inside windows.</source>
          <target state="translated">창 내부 내부 영역의 배경에 대해 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="c9b8ed53190d130e017ba8e2169aba6242d8c8b9" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of menus.</source>
          <target state="translated">메뉴의 배경에 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="dca9fd6c09c5551c427b43dc65b34112d3e0b73e" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of scrollbars.</source>
          <target state="translated">스크롤바의 배경에 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="24ed2f15963e7871e4f2c2ecb3b368352afcd21e" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of selected items, such as in menus, comboboxes, and text.</source>
          <target state="translated">메뉴, 콤보 상자 및 텍스트와 같이 선택한 항목의 배경에 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="fc6fa9fc483be06c8030f2157702aaeab540d4bb" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of text control objects, such as textfields and comboboxes.</source>
          <target state="translated">텍스트 필드 및 콤보 상자와 같은 텍스트 제어 개체의 배경에 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="0f8c83507adeeaf4cf3fffab874f860bdf5be545" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of the desktop.</source>
          <target state="translated">데스크탑의 배경에 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="96192e517b77d2af5363caf88579f1dd01c9710e" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of tooltips or spot help.</source>
          <target state="translated">도구 설명 또는 별색 도움말의 배경에 대해 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="f7b8c56bb3e38974d48617687207184ff68cf35b" translate="yes" xml:space="preserve">
          <source>The color rendered for the border around inactive windows.</source>
          <target state="translated">비활성 창 주변의 테두리에 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="5f86e95f5ff4db6f772c51fc548c271d60c83047" translate="yes" xml:space="preserve">
          <source>The color rendered for the border around interior regions inside windows.</source>
          <target state="translated">창 내부 내부 영역 주변의 테두리에 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="9f421708674555c1142db905208f7c0fa2c8ba4e" translate="yes" xml:space="preserve">
          <source>The color rendered for the border around the currently active window.</source>
          <target state="translated">현재 활성 창 주위의 테두리에 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="d66f344824886da965c169f2a17acbe683c4f211" translate="yes" xml:space="preserve">
          <source>The color rendered for the border.</source>
          <target state="translated">테두리에 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="b422b0db2c88e4fca50d05f505aa105ff194f90d" translate="yes" xml:space="preserve">
          <source>The color rendered for the text of control panels and control objects, such as pushbuttons.</source>
          <target state="translated">푸시 버튼과 같은 컨트롤 패널 및 컨트롤 개체의 텍스트에 대해 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="104d7225b577be1ea8c3937a81a5f39842403842" translate="yes" xml:space="preserve">
          <source>The color rendered for the text of inactive items, such as in menus.</source>
          <target state="translated">메뉴와 같이 비활성 항목의 텍스트에 대해 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="ba7e55b358318312c5ae6754525c1245dbd50be2" translate="yes" xml:space="preserve">
          <source>The color rendered for the text of menus.</source>
          <target state="translated">메뉴 텍스트에 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="e9f852db88c1376538f6916c80da4b6384bfa762" translate="yes" xml:space="preserve">
          <source>The color rendered for the text of selected items, such as in menus, comboboxes, and text.</source>
          <target state="translated">메뉴, 콤보 상자 및 텍스트와 같이 선택한 항목의 텍스트에 대해 렌더링되는 색상입니다.</target>
        </trans-unit>
        <trans-unit id="bc776176a896265cb8a273ca25c7814f8e2e9e42" translate="yes" xml:space="preserve">
          <source>The color rendered for the text of text control objects, such as textfields and comboboxes.</source>
          <target state="translated">텍스트 필드 및 콤보 상자와 같은 텍스트 제어 개체의 텍스트에 대해 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="3e05a00a84289466743383ea0f2aa1a3a0c83b3b" translate="yes" xml:space="preserve">
          <source>The color rendered for the text of tooltips or spot help.</source>
          <target state="translated">도구 설명 또는 별색 도움말의 텍스트에 대해 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="007e5cdd6dffd12010de712b755381079673ec1c" translate="yes" xml:space="preserve">
          <source>The color rendered for the window-title background of inactive windows.</source>
          <target state="translated">비활성 창의 창 제목 배경에 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="1b801891828ce688cb4cc8b14d2c8242277053ff" translate="yes" xml:space="preserve">
          <source>The color rendered for the window-title background of the currently active window.</source>
          <target state="translated">현재 활성 창의 창 제목 배경에 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="08127243343bad81741fd74ba59e624879275a39" translate="yes" xml:space="preserve">
          <source>The color rendered for the window-title text of inactive windows.</source>
          <target state="translated">비활성 창의 창 제목 텍스트에 대해 렌더링되는 색상입니다.</target>
        </trans-unit>
        <trans-unit id="9f1e33c4c1e806122c67931a7f5c7088d006baf6" translate="yes" xml:space="preserve">
          <source>The color rendered for the window-title text of the currently active window.</source>
          <target state="translated">현재 활성 창의 창 제목 텍스트에 대해 렌더링 된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="a3a7bcb5c4910004d209ce12b8781ff77931645b" translate="yes" xml:space="preserve">
          <source>The color space in which to perform the gradient interpolation.</source>
          <target state="translated">그라디언트 보간을 수행 할 색상 공간입니다.</target>
        </trans-unit>
        <trans-unit id="cbc0abf4fd430d4226f1fa06c9b1dca5fa506046" translate="yes" xml:space="preserve">
          <source>The color that was obtained from the component or defaultColor</source>
          <target state="translated">구성 요소 또는 defaultColor에서 가져온 색상</target>
        </trans-unit>
        <trans-unit id="71e0739ec1fb0243f8596167e9d23eb416fc7cc3" translate="yes" xml:space="preserve">
          <source>The color to use for the bevel inner highlight.</source>
          <target state="translated">베벨 내부 강조 표시에 사용할 색상입니다.</target>
        </trans-unit>
        <trans-unit id="39c0d5b49c1a23dbedbf004a2cab865bdd5f0c2d" translate="yes" xml:space="preserve">
          <source>The color to use for the bevel inner shadow.</source>
          <target state="translated">베벨 내부 그림자에 사용할 색상입니다.</target>
        </trans-unit>
        <trans-unit id="e14f88b840e7d46ca638321ba169d0ac6c697ef2" translate="yes" xml:space="preserve">
          <source>The color to use for the bevel outer highlight.</source>
          <target state="translated">베벨 외부 강조 표시에 사용할 색상입니다.</target>
        </trans-unit>
        <trans-unit id="ec0689a17e07037d8efc19243899a02d1c92c502" translate="yes" xml:space="preserve">
          <source>The color to use for the etched highlight.</source>
          <target state="translated">에칭 된 하이라이트에 사용할 색상입니다.</target>
        </trans-unit>
        <trans-unit id="3fcc57eb2f61973e01e9de14f1c14831b2d16f71" translate="yes" xml:space="preserve">
          <source>The color to use for the etched shadow.</source>
          <target state="translated">에칭 된 그림자에 사용할 색상입니다.</target>
        </trans-unit>
        <trans-unit id="28cbe33d3265b3fe7dcc5600e903ea50781848f5" translate="yes" xml:space="preserve">
          <source>The color white.</source>
          <target state="translated">흰색입니다.</target>
        </trans-unit>
        <trans-unit id="a173cf1ac4bb53c14dc31dc411b0a59f768506be" translate="yes" xml:space="preserve">
          <source>The color white. In the default sRGB space.</source>
          <target state="translated">흰색입니다. 기본 sRGB 공간.</target>
        </trans-unit>
        <trans-unit id="1993de3c64baa7899edae484cdec8ade56469407" translate="yes" xml:space="preserve">
          <source>The color yellow.</source>
          <target state="translated">노란색입니다.</target>
        </trans-unit>
        <trans-unit id="a04d19a271ffdb434a80776c2e800b2f4bc5cd2a" translate="yes" xml:space="preserve">
          <source>The color yellow. In the default sRGB space.</source>
          <target state="translated">노란색입니다. 기본 sRGB 공간.</target>
        </trans-unit>
        <trans-unit id="3dc56f3ed9ae9e2fb93f85527809fc80f9e72639" translate="yes" xml:space="preserve">
          <source>The color/alpha components for the specified pixel, as an int.</source>
          <target state="translated">지정된 픽셀의 색상 / 알파 구성 요소 (정수)입니다.</target>
        </trans-unit>
        <trans-unit id="3935fe9b5f8b6e65597c15e80f805a38771c1ae3" translate="yes" xml:space="preserve">
          <source>The colorSpace parameter allows the user to specify in which colorspace the interpolation should be performed, default sRGB or linearized RGB.</source>
          <target state="translated">colorSpace 매개 변수를 사용하면 사용자가 보간을 수행해야하는 색상 공간, 기본 sRGB 또는 선형화 된 RGB를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="40db39679e9d3b4fa0c8e2c5c408e66cf7c192fb" translate="yes" xml:space="preserve">
          <source>The colors that the renderers for JList and JTable use are specified by way of the list and table Regions. The following XML fragment illustrates how to specify red on white, when selected, and white on red when not selected:</source>
          <target state="translated">JList 및 JTable 용 렌더러가 사용하는 색상은 목록 및 테이블 영역을 통해 지정됩니다. 다음 XML 조각은 선택하면 흰색에 빨간색을 지정하고 선택하지 않으면 빨간색을 흰색으로 지정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d34589d6edd1ce50973e2a77d9cc51eba722e510" translate="yes" xml:space="preserve">
          <source>The colors used for the highlighting effect are determined based on the current color. The resulting rectangle covers an area that is &lt;code&gt;width&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels wide by &lt;code&gt;height&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels tall.</source>
          <target state="translated">강조 효과에 사용되는 색상은 현재 색상을 기준으로 결정됩니다. 결과 사각형은 &lt;code&gt;width&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; 픽셀 x &lt;code&gt;height&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; 1 픽셀 의 영역을 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="a7c61a37de1d16209fac97ae4ee0e2c7f970a5c2" translate="yes" xml:space="preserve">
          <source>The colors used for the highlighting effect are determined based on the current color. The resulting rectangle covers an area that is &lt;code&gt;width&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels wide by &lt;code&gt;height&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels tall. This method uses the current &lt;code&gt;Color&lt;/code&gt; exclusively and ignores the current &lt;code&gt;Paint&lt;/code&gt;.</source>
          <target state="translated">강조 효과에 사용되는 색상은 현재 색상을 기준으로 결정됩니다. 결과 사각형은 &lt;code&gt;width&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; 픽셀 x &lt;code&gt;height&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; 1 픽셀 의 영역을 포함합니다 . 이 메서드는 현재 &lt;code&gt;Color&lt;/code&gt; 만 사용 하고 현재 &lt;code&gt;Paint&lt;/code&gt; 는 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="56629a58e5fe5272fa7306a76e51650e0b57f115" translate="yes" xml:space="preserve">
          <source>The column for the event.</source>
          <target state="translated">이벤트의 열입니다.</target>
        </trans-unit>
        <trans-unit id="9474accc7200b4d22482bbeb8e9f64c870b5b415" translate="yes" xml:space="preserve">
          <source>The column header child.</source>
          <target state="translated">열 헤더 하위입니다.</target>
        </trans-unit>
        <trans-unit id="bc83a77d79aa3eda2dbe6388c9733a0b510fa7e7" translate="yes" xml:space="preserve">
          <source>The column header child. Default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">열 헤더 하위입니다. 기본값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6d809e6014f6964c67cc50cd480442d58f8706b7" translate="yes" xml:space="preserve">
          <source>The column header, if present and visible, gets its preferred height and the viewport's width.</source>
          <target state="translated">열 머리글이 있고 표시되는 경우 선호하는 높이와 뷰포트의 너비를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="463d672504438607f798baca7856266e00fa0fc4" translate="yes" xml:space="preserve">
          <source>The column number as an integer, or -1 if none is available.</source>
          <target state="translated">정수로 된 열 번호 또는 사용할 수없는 경우 -1입니다.</target>
        </trans-unit>
        <trans-unit id="624f495fa964e3206459763f8c58471630eb5cd8" translate="yes" xml:space="preserve">
          <source>The column number of the end of the text where the exception occurred.</source>
          <target state="translated">예외가 발생한 텍스트 끝의 열 번호입니다.</target>
        </trans-unit>
        <trans-unit id="b358f75861d99243c580150b53058a5a38068c2f" translate="yes" xml:space="preserve">
          <source>The column number this locator is pointing to, or &lt;code&gt;-1&lt;/code&gt; if there is no column number available.</source>
          <target state="translated">이 로케이터가 가리키는 열 번호 또는 사용 가능한 열 번호가없는 경우 &lt;code&gt;-1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0e9bc506f5e2d7a1a67fd012b7903fac45c5da3e" translate="yes" xml:space="preserve">
          <source>The column number, or -1 if none is available.</source>
          <target state="translated">열 번호 또는 사용할 수없는 경우 -1입니다.</target>
        </trans-unit>
        <trans-unit id="2e641ea6fe64f0b8a19aa6317da464694488bcba" translate="yes" xml:space="preserve">
          <source>The column number. Returns -1 if a column number is unavailable.</source>
          <target state="translated">열 번호 열 번호를 사용할 수없는 경우 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f59b440a5dce5861e4bd83979917698dd94ef608" translate="yes" xml:space="preserve">
          <source>The combination day-of-week and day-of-month (&quot;Friday the 13th&quot;) should not implement this interface. It does not represent a contiguous set of fields, as days to weeks overlaps days to months.</source>
          <target state="translated">요일 및 월 조합 ( &quot;금요일 13 일&quot;)은이 인터페이스를 구현하지 않아야합니다. 일에서 주가 일에서 월로 겹치므로 연속 된 필드 세트를 나타내지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e565904e8f36cdfb0561232e8a61e5fd3a583b87" translate="yes" xml:space="preserve">
          <source>The combination of keystrokes and conditions lets you define high level (semantic) action events for a specified keystroke+modifier combination (using the KeyStroke class) and direct to a parent or child of a component that has the focus, or to the component itself. In other words, in any hierarchical structure of components, an arbitrary key-combination can be immediately directed to the appropriate component in the hierarchy, and cause a specific method to be invoked (usually by way of adapter objects).</source>
          <target state="translated">키 입력과 조건의 조합을 사용하면 지정된 키 입력 + 수정 자 조합 (KeyStroke 클래스 사용)에 대한 상위 수준 (의미 적) 작업 이벤트를 정의하고 포커스가있는 구성 요소의 부모 나 자식 또는 구성 요소 자체에 연결할 수 있습니다. 즉, 구성 요소의 계층 구조에서 임의의 키 조합이 계층 구조의 적절한 구성 요소로 즉시 전달 될 수 있으며 특정 메서드가 호출되도록 할 수 있습니다 (일반적으로 어댑터 개체를 통해).</target>
        </trans-unit>
        <trans-unit id="9a95804740becaea21fb0fb96083c1c9566eaf00" translate="yes" xml:space="preserve">
          <source>The combination of the 'before' date-time and offset represents the same instant as the 'after' date-time and offset.</source>
          <target state="translated">'이전'날짜-시간 및 오프셋의 조합은 '이후'날짜-시간 및 오프셋과 동일한 순간을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="eeb7f12dcdc1b38ae56fe22eab8edc4e52262d56" translate="yes" xml:space="preserve">
          <source>The combine method takes two arguments. The first argument represents an array of ProtectionDomains from the current execution Thread, since the most recent call to &lt;code&gt;AccessController.doPrivileged&lt;/code&gt;. If no call to doPrivileged was made, then the first argument will contain all the ProtectionDomains from the current execution Thread. The second argument represents an array of inherited ProtectionDomains, which may be &lt;code&gt;null&lt;/code&gt;. ProtectionDomains may be inherited from a parent Thread, or from a privileged context. If no call to doPrivileged was made, then the second argument will contain the ProtectionDomains inherited from the parent Thread. If one or more calls to doPrivileged were made, and the most recent call was to doPrivileged(action, context), then the second argument will contain the ProtectionDomains from the privileged context. If the most recent call was to doPrivileged(action), then there is no privileged context, and the second argument will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">결합 방법에는 두 가지 인수가 사용됩니다. 첫 번째 인수는 가장 최근의 &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; 호출 이후 현재 실행 스레드의 ProtectionDomain 배열을 나타냅니다 . doPrivileged를 호출하지 않은 경우 첫 번째 인수는 현재 실행 스레드의 모든 ProtectionDomain을 포함합니다. 두 번째 인수는 상속 된 ProtectionDomain의 배열을 나타냅니다. &lt;code&gt;null&lt;/code&gt; . ProtectionDomains는 부모 스레드 또는 권한있는 컨텍스트에서 상속 될 수 있습니다. doPrivileged를 호출하지 않은 경우 두 번째 인수는 상위 스레드에서 상속 된 ProtectionDomain을 포함합니다. doPrivileged를 하나 이상 호출하고 가장 최근에 doPrivileged (action, context)를 호출 한 경우 두 번째 인수는 권한있는 컨텍스트의 ProtectionDomain을 포함합니다. 가장 최근의 호출이 doPrivileged (action)에 대한 호출 인 경우 특권 컨텍스트가 없으며 두 번째 인수는 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a94254d17a88e72bc6f1dc24f661a80d3329ca92" translate="yes" xml:space="preserve">
          <source>The combined list consisting of iteration variable types followed by the external parameter types is called the &quot;internal parameter list&quot;.</source>
          <target state="translated">반복 변수 유형과 외부 매개 변수 유형으로 구성된 결합 목록을 &quot;내부 매개 변수 목록&quot;이라고합니다.</target>
        </trans-unit>
        <trans-unit id="8f2ff4150d41df826e2c4cc87725174b36d8f91b" translate="yes" xml:space="preserve">
          <source>The combo box is a compound component which means that it is an aggregate of many simpler components. This class creates and manages the listeners on the combo box and the combo box model. These listeners update the user interface in response to changes in the properties and state of the combo box.</source>
          <target state="translated">콤보 상자는 복합 구성 요소로, 더 간단한 구성 요소의 집합체입니다. 이 클래스는 콤보 상자 및 콤보 상자 모델에서 리스너를 만들고 관리합니다. 이러한 리스너는 콤보 상자의 속성 및 상태 변경에 대한 응답으로 사용자 인터페이스를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="196a9079c3535248d3b46004d5c735399a406de8" translate="yes" xml:space="preserve">
          <source>The command buffer must contain valid command APDU data starting at &lt;code&gt;command.position()&lt;/code&gt; and the APDU must be &lt;code&gt;command.remaining()&lt;/code&gt; bytes long. Upon return, the command buffer's position will be equal to its limit; its limit will not have changed. The output buffer will have received the response APDU bytes. Its position will have advanced by the number of bytes received, which is also the return value of this method.</source>
          <target state="translated">명령 버퍼는 &lt;code&gt;command.position()&lt;/code&gt; 에서 시작하는 유효한 명령 APDU 데이터를 포함 해야하며 APDU는 &lt;code&gt;command.remaining()&lt;/code&gt; 바이트 길이 여야합니다 . 리턴시 명령 버퍼의 위치는 한계와 같습니다. 제한은 변경되지 않습니다. 출력 버퍼는 응답 APDU 바이트를 수신합니다. 이 메서드의 반환 값이기도 한 수신 된 바이트 수만큼 위치가 증가합니다.</target>
        </trans-unit>
        <trans-unit id="41569b2c41260c5c394d1fdef3990b12a0eaf463" translate="yes" xml:space="preserve">
          <source>The command is not implemented.</source>
          <target state="translated">명령이 구현되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="b3f0053f84641db4ff6667d76c084be1f101fb90" translate="yes" xml:space="preserve">
          <source>The command is used by the &lt;code&gt;RowSet&lt;/code&gt; object's reader to obtain a &lt;code&gt;ResultSet&lt;/code&gt; object. The reader then reads the data from the &lt;code&gt;ResultSet&lt;/code&gt; object and uses it to to populate this &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">이 명령은 &lt;code&gt;RowSet&lt;/code&gt; 개체의 판독기가 &lt;code&gt;ResultSet&lt;/code&gt; 개체 를 가져 오는 데 사용됩니다 . 그런 다음 판독기는 &lt;code&gt;ResultSet&lt;/code&gt; 개체 에서 데이터를 읽고 이를 사용하여이 &lt;code&gt;RowSet&lt;/code&gt; 개체 를 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="ecf45dade386c4129ed8fa21f1f00dc54e14a1be" translate="yes" xml:space="preserve">
          <source>The command-line arguments. May be null.</source>
          <target state="translated">명령 줄 인수입니다. null 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a16f5e65d2f83a96835a56079d0447983bf6e15" translate="yes" xml:space="preserve">
          <source>The comment element is a place holder for any comments that the code generator may want to include in the generated code.</source>
          <target state="translated">comment 요소는 코드 생성기가 생성 된 코드에 포함 할 수있는 모든 주석의 자리 표시 자입니다.</target>
        </trans-unit>
        <trans-unit id="5b433409894f5c34e3b5e4e1f349233ce16b0dc9" translate="yes" xml:space="preserve">
          <source>The comment for the &lt;code&gt;SyncResolver&lt;/code&gt; interface has more detail.</source>
          <target state="translated">에 대한 코멘트 &lt;code&gt;SyncResolver&lt;/code&gt; 인터페이스는 자세한 내용을 가지고있다.</target>
        </trans-unit>
        <trans-unit id="f1aa4318100af0e60a66c19ea23c4f6ead396bad" translate="yes" xml:space="preserve">
          <source>The comment to display when the cursor is over the component, also known as a &quot;value tip&quot;, &quot;flyover help&quot;, or &quot;flyover label&quot;.</source>
          <target state="translated">커서가 구성 요소 위에있을 때 표시 할 주석으로, &quot;값 팁&quot;, &quot;플라이 오버 도움말&quot;또는 &quot;플라이 오버 레이블&quot;이라고도합니다.</target>
        </trans-unit>
        <trans-unit id="ec6554f126ed61be6eed4aa31b343d560b310358" translate="yes" xml:space="preserve">
          <source>The commit occurs when the statement completes. The time when the statement completes depends on the type of SQL Statement:</source>
          <target state="translated">명령문이 완료되면 커미트가 발생합니다. 명령문이 완료되는 시간은 SQL 문 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="7cc3e34fc55f9b2b57ce4d53e61e6d6e9418fed9" translate="yes" xml:space="preserve">
          <source>The common definition of a week that starts on Sunday and the first week has a minimum of 1 day.</source>
          <target state="translated">일요일과 첫 주에 시작되는 주에 대한 공통 정의는 최소 1 일입니다.</target>
        </trans-unit>
        <trans-unit id="54934fd2df13abeb43116e909517bf162f57134b" translate="yes" xml:space="preserve">
          <source>The common interface extended by all annotation types.</source>
          <target state="translated">모든 주석 유형으로 확장 된 공통 인터페이스</target>
        </trans-unit>
        <trans-unit id="1314aec14eff7f99258639556043ab2235382bb2" translate="yes" xml:space="preserve">
          <source>The common interface extended by all annotation types. Note that an interface that manually extends this one does</source>
          <target state="translated">모든 주석 유형으로 확장 된 공통 인터페이스 이 인터페이스를 수동으로 확장하는 인터페이스는</target>
        </trans-unit>
        <trans-unit id="be8eec3709c1b7ba220252bd3ee06454fbc63cce" translate="yes" xml:space="preserve">
          <source>The common pool is by default constructed with default parameters, but these may be controlled by setting three &lt;a href=&quot;../../lang/system#getProperty-java.lang.String-&quot;&gt;system properties&lt;/a&gt;:</source>
          <target state="translated">공통 풀은 기본적으로 기본 매개 변수로 구성되지만 다음 세 가지 &lt;a href=&quot;../../lang/system#getProperty-java.lang.String-&quot;&gt;시스템 특성&lt;/a&gt; 을 설정하여 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c18e1e314bdb3585227ef54e7b57e96bd4334b85" translate="yes" xml:space="preserve">
          <source>The commonly accepted way of representing a &lt;code&gt;QName&lt;/code&gt; as a &lt;code&gt;String&lt;/code&gt; was &lt;a href=&quot;http://jclark.com/xml/xmlns.htm&quot;&gt;defined&lt;/a&gt; by James Clark. Although this is not a &lt;em&gt;standard&lt;/em&gt; specification, it is in common use, e.g. &lt;a href=&quot;../transform/transformer#setParameter(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;Transformer.setParameter(String name, Object value)&lt;/code&gt;&lt;/a&gt;. This implementation parses a &lt;code&gt;String&lt;/code&gt; formatted as: &quot;{&quot; + Namespace URI + &quot;}&quot; + local part. If the Namespace URI &lt;code&gt;.equals(XMLConstants.NULL_NS_URI)&lt;/code&gt;, only the local part should be provided.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 을 &lt;code&gt;String&lt;/code&gt; 로 표현하는 일반적으로 허용되는 방법은 James Clark에 의해 &lt;a href=&quot;http://jclark.com/xml/xmlns.htm&quot;&gt;정의&lt;/a&gt; 되었습니다. &lt;em&gt;표준&lt;/em&gt; 사양 은 아니지만 &lt;a href=&quot;../transform/transformer#setParameter(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;Transformer.setParameter(String name, Object value)&lt;/code&gt; &lt;/a&gt; 와 같이 일반적으로 사용 됩니다. 이 구현은 &quot;{&quot;+ 네임 스페이스 URI + &quot;}&quot;+ 로컬 부분으로 형식이 지정된 &lt;code&gt;String&lt;/code&gt; 구문 분석합니다 . 네임 스페이스 URI &lt;code&gt;.equals(XMLConstants.NULL_NS_URI)&lt;/code&gt; 이면 로컬 부분 만 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="b1afca0435e978f4c963375b2f60ca3bdb23d563" translate="yes" xml:space="preserve">
          <source>The commonly accepted way of representing a &lt;code&gt;QName&lt;/code&gt; as a &lt;code&gt;String&lt;/code&gt; was &lt;a href=&quot;http://jclark.com/xml/xmlns.htm&quot;&gt;defined&lt;/a&gt; by James Clark. Although this is not a &lt;em&gt;standard&lt;/em&gt; specification, it is in common use, e.g. &lt;a href=&quot;../transform/transformer#setParameter(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;Transformer.setParameter(String name, Object value)&lt;/code&gt;&lt;/a&gt;. This implementation represents a &lt;code&gt;QName&lt;/code&gt; as: &quot;{&quot; + Namespace URI + &quot;}&quot; + local part. If the Namespace URI &lt;code&gt;.equals(XMLConstants.NULL_NS_URI)&lt;/code&gt;, only the local part is returned. An appropriate use of this method is for debugging or logging for human consumption.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 을 &lt;code&gt;String&lt;/code&gt; 로 표현하는 일반적으로 허용되는 방법은 James Clark에 의해 &lt;a href=&quot;http://jclark.com/xml/xmlns.htm&quot;&gt;정의&lt;/a&gt; 되었습니다. &lt;em&gt;표준&lt;/em&gt; 사양 은 아니지만 &lt;a href=&quot;../transform/transformer#setParameter(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;Transformer.setParameter(String name, Object value)&lt;/code&gt; &lt;/a&gt; 와 같이 일반적으로 사용 됩니다. 이 구현은 &lt;code&gt;QName&lt;/code&gt; 을 &quot;{&quot;+ 네임 스페이스 URI + &quot;}&quot;+ 로컬 부분으로 나타냅니다. 네임 스페이스 URI &lt;code&gt;.equals(XMLConstants.NULL_NS_URI)&lt;/code&gt; 이면 로컬 부분 만 반환됩니다. 이 방법의 적절한 사용은 사람이 소비하기위한 디버깅 또는 로깅입니다.</target>
        </trans-unit>
        <trans-unit id="0099c3925a187d03ec00f123f64ffc38c31f76fd" translate="yes" xml:space="preserve">
          <source>The compact number patterns are represented in a series of patterns where each pattern is used to format a range of numbers. An example of &lt;a href=&quot;numberformat.style#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt; styled compact number patterns for the &lt;a href=&quot;../util/locale#US&quot;&gt;&lt;code&gt;US locale&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;{&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;0K&quot;,
 &quot;00K&quot;, &quot;000K&quot;, &quot;0M&quot;, &quot;00M&quot;, &quot;000M&quot;, &quot;0B&quot;, &quot;00B&quot;, &quot;000B&quot;, &quot;0T&quot;, &quot;00T&quot;, &quot;000T&quot;}&lt;/code&gt;, ranging from &lt;code&gt;10&lt;/code&gt;&lt;sup&gt;&lt;code&gt;0&lt;/code&gt;&lt;/sup&gt; to &lt;code&gt;10&lt;/code&gt;&lt;sup&gt;&lt;code&gt;14&lt;/code&gt;&lt;/sup&gt;. There can be any number of patterns and they are strictly index based starting from the range &lt;code&gt;10&lt;/code&gt;&lt;sup&gt;&lt;code&gt;0&lt;/code&gt;&lt;/sup&gt;. For example, in the above patterns, pattern at index 3 (&lt;code&gt;&quot;0K&quot;&lt;/code&gt;) is used for formatting &lt;code&gt;number &amp;gt;= 1000 and number &amp;lt; 10000&lt;/code&gt;, pattern at index 4 (&lt;code&gt;&quot;00K&quot;&lt;/code&gt;) is used for formatting &lt;code&gt;number &amp;gt;= 10000 and number &amp;lt; 100000&lt;/code&gt; and so on. In most of the locales, patterns with the range &lt;code&gt;10&lt;/code&gt;&lt;sup&gt;&lt;code&gt;0&lt;/code&gt;&lt;/sup&gt;-&lt;code&gt;10&lt;/code&gt;&lt;sup&gt;&lt;code&gt;2&lt;/code&gt;&lt;/sup&gt; are empty strings, which implicitly means a special pattern &lt;code&gt;&quot;0&quot;&lt;/code&gt;. A special pattern &lt;code&gt;&quot;0&quot;&lt;/code&gt; is used for any range which does not contain a compact pattern. This special pattern can appear explicitly for any specific range, or considered as a default pattern for an empty string.</source>
          <target state="translated">간결한 숫자 패턴은 일련의 패턴으로 표현되며 각 패턴은 숫자 범위의 형식을 지정하는 데 사용됩니다. &lt;a href=&quot;../util/locale#US&quot;&gt; &lt;code&gt;US locale&lt;/code&gt; &lt;/a&gt; 대한 &lt;a href=&quot;numberformat.style#SHORT&quot;&gt; &lt;code&gt;SHORT&lt;/code&gt; &lt;/a&gt; 스타일의 간결한 숫자 패턴 의 예 는 &lt;code&gt;{&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;0K&quot;, &quot;00K&quot;, &quot;000K&quot;, &quot;0M&quot;, &quot;00M&quot;, &quot;000M&quot;, &quot;0B&quot;, &quot;00B&quot;, &quot;000B&quot;, &quot;0T&quot;, &quot;00T&quot;, &quot;000T&quot;}&lt;/code&gt; , 범위는 &lt;code&gt;10&lt;/code&gt; &lt;sup&gt; &lt;code&gt;0&lt;/code&gt; &lt;/sup&gt; ~ &lt;code&gt;10&lt;/code&gt; &lt;sup&gt; &lt;code&gt;14&lt;/code&gt; &lt;/sup&gt; 입니다. 패턴의 수에는 제한이 없으며 &lt;code&gt;10&lt;/code&gt; &lt;sup&gt; &lt;code&gt;0&lt;/code&gt; &lt;/sup&gt; 범위에서 시작하여 엄격하게 인덱스를 기반으로합니다 . 예를 들어, 위의 패턴에서 인덱스 3의 패턴 ( &lt;code&gt;&quot;0K&quot;&lt;/code&gt; )는 &lt;code&gt;number &amp;gt;= 1000 and number &amp;lt; 10000&lt;/code&gt; , 인덱스 4의 패턴 ( &lt;code&gt;&quot;00K&quot;&lt;/code&gt; &lt;sup&gt;&lt;/sup&gt;&lt;sup&gt;&lt;/sup&gt;&lt;sup&gt;&lt;/sup&gt;)는 &lt;code&gt;number &amp;gt;= 10000 and number &amp;lt; 100000&lt;/code&gt; 등의 형식을 지정하는 데 사용 됩니다. 범위와 로케일 대부분의 패턴에서 &lt;code&gt;10&lt;/code&gt; &lt;sup&gt; &lt;code&gt;0&lt;/code&gt; &lt;/sup&gt; - &lt;code&gt;10&lt;/code&gt; &lt;sup&gt; &lt;code&gt;2&lt;/code&gt; &lt;/sup&gt; 암시 적으로 특별한 패턴을 의미 빈 문자열이다 &lt;code&gt;&quot;0&quot;&lt;/code&gt; . 압축 패턴을 포함하지 않는 범위 에는 특수 패턴 &lt;code&gt;&quot;0&quot;&lt;/code&gt; 이 사용됩니다. 이 특수 패턴은 특정 범위에 대해 명시 적으로 나타나거나 빈 문자열의 기본 패턴으로 간주 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="40472696caa6671c3ae2d8a764be134346c666a2" translate="yes" xml:space="preserve">
          <source>The comparison is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 정의 된 &quot;일치와 일치&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="4c4d0f709f7d7ce6947e98b41460f7696db0d06f" translate="yes" xml:space="preserve">
          <source>The comparison is achieved via the &lt;code&gt;implies&lt;/code&gt; method. The implementation of the &lt;code&gt;implies&lt;/code&gt; method determines whether this object &quot;implies&quot; the specified &lt;code&gt;Subject&lt;/code&gt;. One example application of this method may be for a &quot;group&quot; object to imply a particular &lt;code&gt;Subject&lt;/code&gt; if that &lt;code&gt;Subject&lt;/code&gt; belongs to the group. Another example application of this method would be for &quot;role&quot; object to imply a particular &lt;code&gt;Subject&lt;/code&gt; if that &lt;code&gt;Subject&lt;/code&gt; is currently acting in that role.</source>
          <target state="translated">비교는 &lt;code&gt;implies&lt;/code&gt; 메소드 를 통해 이루어집니다 . &lt;code&gt;implies&lt;/code&gt; 메소드 의 구현은 이 객체가 지정된 &lt;code&gt;Subject&lt;/code&gt; 를 &quot;내포&quot;하는지 여부를 결정합니다 . 이 방법의 한 가지 예제 응용 프로그램은 해당 &lt;code&gt;Subject&lt;/code&gt; 그룹에 속하는 경우 &quot;그룹&quot;객체가 특정 &lt;code&gt;Subject&lt;/code&gt; 를 암시하는 것일 수 있습니다 . 이 방법의 또 다른 적용 예는 &quot;역할&quot;객체가 해당 &lt;code&gt;Subject&lt;/code&gt; 가 현재 해당 역할을 수행하고있는 경우 특정 &lt;code&gt;Subject&lt;/code&gt; 를 암시하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="7544553cbef2741d51df7e2448ec9b3d30bfc038" translate="yes" xml:space="preserve">
          <source>The comparison is based first on the UTC equivalent instant, then on the local time. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 먼저 UTC에 해당하는 순간을 기준으로 한 다음 현지 시간을 기준으로합니다. &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 정의 된대로 &quot;일치와 일치&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="a9f1c042dcb61fa1cd287abce64f4635e9b92eae" translate="yes" xml:space="preserve">
          <source>The comparison is based first on the instant, then on the local date-time, then on the zone ID, then on the chronology. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 먼저 인스턴트, 로컬 날짜-시간, 영역 ID, 연대기를 기준으로합니다. &lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 정의 된대로 &quot;일치와 일치&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="ec2151de3ebbbe7f15e922252583edd296181fa3" translate="yes" xml:space="preserve">
          <source>The comparison is based first on the underlying time-line date, then on the chronology. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 먼저 기본 타임 라인 날짜를 기준으로 한 다음 연대기를 기준으로합니다. &lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 정의 된대로 &quot;일치와 일치&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="85c7e6fc1e00fe1d64177c565a13d627754ef76f" translate="yes" xml:space="preserve">
          <source>The comparison is based first on the underlying time-line date-time, then on the chronology. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 먼저 기본 타임 라인 날짜-시간을 기준으로 한 다음 연대기를 기준으로합니다. &lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 정의 된대로 &quot;일치와 일치&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="bc9c161855c82e99812fb51724a912bec4af797a" translate="yes" xml:space="preserve">
          <source>The comparison is based first on the value of the year, then on the value of the month. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 먼저 연도 값을 기준으로 한 다음 월 값을 기준으로합니다. &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 정의 된대로 &quot;일치와 일치&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="a8022e23d05bb51e89c64c6b0e9af30219a8fdac" translate="yes" xml:space="preserve">
          <source>The comparison is based first on value of the month, then on the value of the day. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 먼저 월 값을 기준으로 한 다음 날짜 값을 기준으로합니다. &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 정의 된대로 &quot;일치와 일치&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="1235f74256f8786279bbc14ae61bc796d7600d41" translate="yes" xml:space="preserve">
          <source>The comparison is based on the ID.</source>
          <target state="translated">비교는 ID를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="fc65394da81a692e7946a055c22f7463a6a84557" translate="yes" xml:space="preserve">
          <source>The comparison is based on the amount of the offset in seconds. This is equivalent to a comparison by ID.</source>
          <target state="translated">비교는 초 단위의 오프셋 양을 기준으로합니다. 이는 ID 별 비교와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="b18c89c7d60fa0dae17d459068542c53d7e25964" translate="yes" xml:space="preserve">
          <source>The comparison is based on the entire state of the object.</source>
          <target state="translated">비교는 객체의 전체 상태를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="5af66c17bf64182c96c3f385062b0126edaa4e54" translate="yes" xml:space="preserve">
          <source>The comparison is based on the entire state of the rules, which is the first day-of-week and minimal days.</source>
          <target state="translated">비교는 규칙의 전체 상태 (첫 번째 요일 및 최소 날짜)를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="192da957c0f4b80479e196d424d4d3775beb904f" translate="yes" xml:space="preserve">
          <source>The comparison is based on the four values, minimum, largest minimum, smallest maximum and maximum. Only objects of type &lt;code&gt;ValueRange&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">비교는 최소값, 최대 값 최소값, 최소값 최대 값 및 최대 값의 네 가지 값을 기반으로합니다. &lt;code&gt;ValueRange&lt;/code&gt; 유형의 객체 만 비교하고 다른 유형은 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cba93eebbdf4e98ed715ba844e1f105f1a12c788" translate="yes" xml:space="preserve">
          <source>The comparison is based on the instant then on the local date-time. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 현지 날짜-시간을 기준으로 한 순간을 기준으로합니다. &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 정의 된대로 &quot;일치와 일치&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="034257456036c497bfe5291e68e9c84c7944d29e" translate="yes" xml:space="preserve">
          <source>The comparison is based on the local date-time and the offset. To compare for the same instant on the time-line, use &lt;a href=&quot;#isEqual(java.time.OffsetDateTime)&quot;&gt;&lt;code&gt;isEqual(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt;. Only objects of type &lt;code&gt;OffsetDateTime&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">비교는 로컬 날짜-시간 및 오프셋을 기반으로합니다. 타임 라인에서 동일한 순간을 비교하려면 &lt;a href=&quot;#isEqual(java.time.OffsetDateTime)&quot;&gt; &lt;code&gt;isEqual(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;OffsetDateTime&lt;/code&gt; 유형의 객체 만 비교되고 다른 유형은 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="737cc9ee0e95935301bdbf824b243f30aec93c53" translate="yes" xml:space="preserve">
          <source>The comparison is based on the local date-time and the offset. To compare for the same instant on the time-line, use &lt;a href=&quot;offsetdatetime#isEqual-java.time.OffsetDateTime-&quot;&gt;&lt;code&gt;isEqual(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt;. Only objects of type &lt;code&gt;OffsetDateTime&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">비교는 현지 날짜-시간 및 오프셋을 기준으로합니다. 타임 라인에서 동일한 인스턴트를 비교하려면 &lt;a href=&quot;offsetdatetime#isEqual-java.time.OffsetDateTime-&quot;&gt; &lt;code&gt;isEqual(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;OffsetDateTime&lt;/code&gt; 유형의 객체 만 비교하고 다른 유형은 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aaddf76274d3ce1a00ecf4394d88322b1057587d" translate="yes" xml:space="preserve">
          <source>The comparison is based on the local-time and the offset. To compare for the same instant on the time-line, use &lt;a href=&quot;#isEqual(java.time.OffsetTime)&quot;&gt;&lt;code&gt;isEqual(OffsetTime)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 현지 시간과 오프셋을 기반으로합니다. 타임 라인에서 동일한 순간을 비교하려면 &lt;a href=&quot;#isEqual(java.time.OffsetTime)&quot;&gt; &lt;code&gt;isEqual(OffsetTime)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5a831b02c02275b1518078d06b087841d7f2158" translate="yes" xml:space="preserve">
          <source>The comparison is based on the local-time and the offset. To compare for the same instant on the time-line, use &lt;a href=&quot;offsettime#isEqual-java.time.OffsetTime-&quot;&gt;&lt;code&gt;isEqual(OffsetTime)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 현지 시간과 오프셋을 기준으로합니다. 타임 라인에서 동일한 인스턴트를 비교하려면 &lt;a href=&quot;offsettime#isEqual-java.time.OffsetTime-&quot;&gt; &lt;code&gt;isEqual(OffsetTime)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="82e0667693e86c110e3044cc93f2d394e82a5c9b" translate="yes" xml:space="preserve">
          <source>The comparison is based on the offset date-time and the zone. Only objects of type &lt;code&gt;ZonedDateTime&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">비교는 오프셋 날짜-시간 및 영역을 기준으로합니다. &lt;code&gt;ZonedDateTime&lt;/code&gt; 유형의 객체 만 비교하고 다른 유형은 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f113f9daa8f2381ead62d12e55c9496c98efaa3d" translate="yes" xml:space="preserve">
          <source>The comparison is based on the offset date-time and the zone. To compare for the same instant on the time-line, use &lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt;. Only objects of type &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">비교는 오프셋 날짜-시간 및 영역을 기반으로합니다. 타임 라인에서 동일한 순간을 비교하려면 &lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; 유형의 개체 만 비교되고 다른 유형은 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="33b5a7379f272963b1231d6f7fe31e6ce7f2e169" translate="yes" xml:space="preserve">
          <source>The comparison is based on the offset date-time and the zone. To compare for the same instant on the time-line, use &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt;. Only objects of type &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">비교는 오프셋 날짜-시간 및 영역을 기준으로합니다. 타임 라인에서 동일한 인스턴트를 비교하려면 &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; 유형의 개체 만 비교하고 다른 유형은 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="89ee64a765fb07b058f4c38bb5d7dd8adeb5ae39" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the instants.</source>
          <target state="translated">비교는 인스턴트의 타임 라인 위치를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="16b8d94d368fe5302d9f95a3fac584848bf6c823" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the instants. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 인스턴트의 타임 라인 위치를 기준으로합니다. &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 정의 된대로 &quot;일치와 일치&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="c62e4664e20e19bb86140431a4348f682732596c" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the local times within a day. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 하루 중 현지 시간의 타임 라인 위치를 기준으로합니다. &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 정의 된대로 &quot;일치와 일치&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="596c353f32239015bd0dfaedc67872f34772e8a0" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the month-day within a year.</source>
          <target state="translated">비교는 1 년 내 월-일의 타임 라인 위치를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="4d10c99bef52962cda140baf526e052de919b106" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the time within a day.</source>
          <target state="translated">비교는 하루 중 시간의 타임 라인 위치를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="bc4d73aa624f4c73d652784336ae68fda81a83f5" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the year-months.</source>
          <target state="translated">비교는 연도의 타임 라인 위치를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="16bbd8a5d59cacd64bc82e497b6806c5905521a7" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the years.</source>
          <target state="translated">비교는 연도의 타임 라인 위치를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="687b4a5a03f3d03cd8074b28705f197dbd61474d" translate="yes" xml:space="preserve">
          <source>The comparison is based on the total length of the durations.</source>
          <target state="translated">비교는 총 지속 시간 길이를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="147c6ea90ff33076d2c31d50f28390aa314b97fa" translate="yes" xml:space="preserve">
          <source>The comparison is based on the total length of the durations. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 총 지속 시간 길이를 기준으로합니다. &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 정의 된대로 &quot;일치와 일치&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="dc1a66e5ec71f197e7d88a905f435f0152a887f3" translate="yes" xml:space="preserve">
          <source>The comparison is based on the type &lt;code&gt;Period&lt;/code&gt; and each of the three amounts. To be equal, the years, months and days units must be individually equal. Note that this means that a period of &quot;15 Months&quot; is not equal to a period of &quot;1 Year and 3 Months&quot;.</source>
          <target state="translated">비교는 &lt;code&gt;Period&lt;/code&gt; 유형 과 세 금액 각각을 기준으로합니다 . 동일하게하려면 년, 월 및 일 단위가 개별적으로 같아야합니다. 이는 &quot;15 개월&quot;기간이 &quot;1 년 3 개월&quot;기간과 같지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="463960db060f3465393d7aee55fa6982b411192d" translate="yes" xml:space="preserve">
          <source>The comparison is based on the value of the year. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 연도 값을 기준으로합니다. &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 정의 된대로 &quot;일치와 일치&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="0f54efe8752b32e6e8eacc75bfeee74ae6761886" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(boolean%5B%5D,boolean%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(boolean%5B%5D,boolean%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음과 같은 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="49b0be5a16b1a376e93cf7bd5b72ef7a825a398a" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(boolean%5B%5D,int,int,boolean%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(boolean%5B%5D,int,int,boolean%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 다음은 지정된 범위가 각각 [ &lt;code&gt;aFromIndex&lt;/code&gt; , &lt;code&gt;atoIndex&lt;/code&gt; ) 및 [ &lt;code&gt;bFromIndex&lt;/code&gt; , &lt;code&gt;btoIndex&lt;/code&gt; ) 인 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="03b64a12dc926fe6f09e8a748eab22f3d55cef0c" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(byte%5B%5D,byte%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(byte%5B%5D,byte%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음과 같은 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="50047cff115b8f736afee26eeca5323d4025fd16" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(byte%5B%5D,int,int,byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(byte%5B%5D,int,int,byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 다음은 지정된 범위가 각각 [ &lt;code&gt;aFromIndex&lt;/code&gt; , &lt;code&gt;atoIndex&lt;/code&gt; ) 및 [ &lt;code&gt;bFromIndex&lt;/code&gt; , &lt;code&gt;btoIndex&lt;/code&gt; ) 인 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="716d9b54e30d768c747d6859c1eefe682f37f850" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(char%5B%5D,char%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(char%5B%5D,char%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음과 같은 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="c799b986a6a5b1811c8c670eb63ceeee4b2ecaaf" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(char%5B%5D,int,int,char%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(char%5B%5D,int,int,char%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 다음은 지정된 범위가 각각 [ &lt;code&gt;aFromIndex&lt;/code&gt; , &lt;code&gt;atoIndex&lt;/code&gt; ) 및 [ &lt;code&gt;bFromIndex&lt;/code&gt; , &lt;code&gt;btoIndex&lt;/code&gt; ) 인 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="8cd310a41049b7688f6ce9081ee8d378c5a50dfb" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(double%5B%5D,double%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(double%5B%5D,double%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음과 같은 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="8314033aa3f904c28d650dc4b875a96c3b829ff2" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(double%5B%5D,int,int,double%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(double%5B%5D,int,int,double%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 다음은 지정된 범위가 각각 [ &lt;code&gt;aFromIndex&lt;/code&gt; , &lt;code&gt;atoIndex&lt;/code&gt; ) 및 [ &lt;code&gt;bFromIndex&lt;/code&gt; , &lt;code&gt;btoIndex&lt;/code&gt; ) 인 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f99217490e549482f5468dde7e2d3a4b0b3c7b11" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(float%5B%5D,float%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(float%5B%5D,float%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음과 같은 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="2c389626c4e64682d6c05f8aca5a75f9dd5a9f30" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(float%5B%5D,int,int,float%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(float%5B%5D,int,int,float%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 다음은 지정된 범위가 각각 [ &lt;code&gt;aFromIndex&lt;/code&gt; , &lt;code&gt;atoIndex&lt;/code&gt; ) 및 [ &lt;code&gt;bFromIndex&lt;/code&gt; , &lt;code&gt;btoIndex&lt;/code&gt; ) 인 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="fe28f7e960119b42514409cf2b3a9182f7110b66" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(int%5B%5D,int%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(int%5B%5D,int%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음과 같은 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="5b832c3cebf3ca36a50ab324c60f5ed31a51a657" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(int%5B%5D,int,int,int%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(int%5B%5D,int,int,int%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 다음은 지정된 범위가 각각 [ &lt;code&gt;aFromIndex&lt;/code&gt; , &lt;code&gt;atoIndex&lt;/code&gt; ) 및 [ &lt;code&gt;bFromIndex&lt;/code&gt; , &lt;code&gt;btoIndex&lt;/code&gt; ) 인 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="eb53e9a6aa745a2c8cd17e4565d0e414244b9e44" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(java.lang.Object%5B%5D,int,int,java.lang.Object%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(java.lang.Object%5B%5D,int,int,java.lang.Object%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 다음은 지정된 범위가 각각 [ &lt;code&gt;aFromIndex&lt;/code&gt; , &lt;code&gt;atoIndex&lt;/code&gt; ) 및 [ &lt;code&gt;bFromIndex&lt;/code&gt; , &lt;code&gt;btoIndex&lt;/code&gt; ) 인 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b39e0dec192b8c145e2a2089bd151f84bb4b8384" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(java.lang.Object%5B%5D,java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(java.lang.Object%5B%5D,java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음과 같은 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="f540020af9ce2b573180569b60eef6cf738982f3" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(long%5B%5D,int,int,long%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(long%5B%5D,int,int,long%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 다음은 지정된 범위가 각각 [ &lt;code&gt;aFromIndex&lt;/code&gt; , &lt;code&gt;atoIndex&lt;/code&gt; ) 및 [ &lt;code&gt;bFromIndex&lt;/code&gt; , &lt;code&gt;btoIndex&lt;/code&gt; ) 인 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="620dbd913357373fadfdf1e9d089360a5077d3b2" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(long%5B%5D,long%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(long%5B%5D,long%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음과 같은 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="13fdfc1118a3fae8a910c0a9bac261aacc401c4c" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(short%5B%5D,int,int,short%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(short%5B%5D,int,int,short%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 다음은 지정된 범위가 각각 [ &lt;code&gt;aFromIndex&lt;/code&gt; , &lt;code&gt;atoIndex&lt;/code&gt; ) 및 [ &lt;code&gt;bFromIndex&lt;/code&gt; , &lt;code&gt;btoIndex&lt;/code&gt; ) 인 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="fc98d98a9828848d75a5fdc4acfdc636f273dd58" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(short%5B%5D,short%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">비교는 &lt;a href=&quot;#equals(short%5B%5D,short%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 와&lt;/a&gt; 일치합니다 .보다 구체적으로 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에 대해 다음과 같은 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="62f16067b7a90f0f4f245f000991fe2df5b1a555" translate="yes" xml:space="preserve">
          <source>The comparison is primarily based on the date, from earliest to latest. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 주로 가장 빠른 날짜부터 최신 날짜까지를 기준으로합니다. &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 정의 된대로 &quot;일치와 일치&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="706f98b3cb9aba1254b020ff959b8465ce325b8c" translate="yes" xml:space="preserve">
          <source>The comparison is primarily based on the date-time, from earliest to latest. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비교는 주로 가장 빠른 날짜부터 최신 날짜까지 시간을 기준으로합니다. &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 정의 된대로 &quot;일치와 일치&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="0062aa5848822076fe3842237a04acbf5acbd21a" translate="yes" xml:space="preserve">
          <source>The comparison order first by the chronology ID string, then by any additional information specific to the subclass. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">먼저 연대기 ID 문자열을 기준으로 한 다음 하위 클래스와 관련된 추가 정보를 기준으로 비교 순서를 지정합니다. &lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 에&lt;/a&gt; 정의 된대로 &quot;일치와 일치&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="4b887ac3828fac2d60c4593ad4da8bc48178daaf" translate="yes" xml:space="preserve">
          <source>The compiled form of the XPath expression.</source>
          <target state="translated">XPath 표현식의 컴파일 된 형식입니다.</target>
        </trans-unit>
        <trans-unit id="e51ae022ed297aaa4ea1f258f7ef88e5acc67791" translate="yes" xml:space="preserve">
          <source>The compiler might generate diagnostics during compilation (for example, error messages). If a diagnostic listener is provided, the diagnostics will be supplied to the listener. If no listener is provided, the diagnostics will be formatted in an unspecified format and written to the default output, which is &lt;code&gt;
 System.err&lt;/code&gt; unless otherwise specified. Even if a diagnostic listener is supplied, some diagnostics might not fit in a &lt;code&gt;
 Diagnostic&lt;/code&gt; and will be written to the default output.</source>
          <target state="translated">컴파일러는 컴파일 중에 진단을 생성 할 수 있습니다 (예 : 오류 메시지). 진단 리스너가 제공되면 진단이 리스너에 제공됩니다. 리스너가 제공되지 않으면 진단은 지정되지 않은 형식으로 형식화되고 별도로 지정되지 않는 한 &lt;code&gt; System.err&lt;/code&gt; 인 기본 출력에 기록 됩니다. 진단 리스너가 공급되는 경우에도, 일부 진단은에 적합하지 않을 수 있습니다 &lt;code&gt; Diagnostic&lt;/code&gt; 및 기본 출력에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="3d38b5f16eb7a1039fb7fb049c7f6b1ebb31b6e6" translate="yes" xml:space="preserve">
          <source>The compiler might generate diagnostics during compilation (for example, error messages). If a diagnostic listener is provided, the diagnostics will be supplied to the listener. If no listener is provided, the diagnostics will be formatted in an unspecified format and written to the default output, which is &lt;code&gt;System.err&lt;/code&gt; unless otherwise specified. Even if a diagnostic listener is supplied, some diagnostics might not fit in a &lt;code&gt;Diagnostic&lt;/code&gt; and will be written to the default output.</source>
          <target state="translated">컴파일러는 컴파일 중에 진단 (예 : 오류 메시지)을 생성 할 수 있습니다. 진단 리스너가 제공되면 리스너에 진단이 제공됩니다. 리스너가 제공되지 않으면 진단은 지정되지 않은 형식으로 형식화되고 달리 지정하지 않는 한 기본 출력 ( &lt;code&gt;System.err&lt;/code&gt; )에 기록 됩니다. 진단 리스너가 공급되는 경우에도, 일부 진단은에 적합하지 않을 수 있습니다 &lt;code&gt;Diagnostic&lt;/code&gt; 및 기본 출력에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="381f14496e56d0ef9908dc1f0d9bb14c74a2832d" translate="yes" xml:space="preserve">
          <source>The compiler relies on two services: &lt;a href=&quot;diagnosticlistener&quot;&gt;diagnostic listener&lt;/a&gt; and &lt;a href=&quot;javafilemanager&quot;&gt;file manager&lt;/a&gt;. Although most classes and interfaces in this package defines an API for compilers (and tools in general) the interfaces &lt;a href=&quot;diagnosticlistener&quot;&gt;DiagnosticListener&lt;/a&gt;, &lt;a href=&quot;javafilemanager&quot;&gt;JavaFileManager&lt;/a&gt;, &lt;a href=&quot;fileobject&quot;&gt;FileObject&lt;/a&gt;, and &lt;a href=&quot;javafileobject&quot;&gt;JavaFileObject&lt;/a&gt; are not intended to be used in applications. Instead these interfaces are intended to be implemented and used to provide customized services for a compiler and thus defines an SPI for compilers.</source>
          <target state="translated">컴파일러는 &lt;a href=&quot;diagnosticlistener&quot;&gt;진단 리스너&lt;/a&gt; 와 &lt;a href=&quot;javafilemanager&quot;&gt;파일 관리자의&lt;/a&gt; 두 가지 서비스 를 사용 합니다 . 이 패키지의 대부분의 클래스와 인터페이스는 컴파일러 (및 일반적으로 도구)에 대한 API를 정의하지만 &lt;a href=&quot;diagnosticlistener&quot;&gt;DiagnosticListener&lt;/a&gt; , &lt;a href=&quot;javafilemanager&quot;&gt;JavaFileManager&lt;/a&gt; , &lt;a href=&quot;fileobject&quot;&gt;FileObject&lt;/a&gt; 및 &lt;a href=&quot;javafileobject&quot;&gt;JavaFileObject&lt;/a&gt; 인터페이스 는 응용 프로그램에서 사용하도록 설계되지 않았습니다. 대신 이러한 인터페이스는 구현되어 컴파일러에 대한 사용자 정의 서비스를 제공하기 위해 사용되므로 컴파일러에 대한 SPI를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="362286647cd635d5481f683398fcaef1fc4da1f8" translate="yes" xml:space="preserve">
          <source>The complement of the specified set in this set</source>
          <target state="translated">이 세트에서 지정된 세트의 보수</target>
        </trans-unit>
        <trans-unit id="c51adb959f1e02debaf43bd57eaa5f921a627f37" translate="yes" xml:space="preserve">
          <source>The complete URI of the document.</source>
          <target state="translated">문서의 전체 URI입니다.</target>
        </trans-unit>
        <trans-unit id="a5e446a959aa30fea4f31ea3c5f55e40725fce89" translate="yes" xml:space="preserve">
          <source>The complete date is expressed using three fields:</source>
          <target state="translated">완료 날짜는 세 가지 필드를 사용하여 표현됩니다.</target>
        </trans-unit>
        <trans-unit id="2609040dc1c1bf30c73930b7eb53396d79f341f3" translate="yes" xml:space="preserve">
          <source>The complete set of transitions for this rules instance is defined by this method and &lt;a href=&quot;#getTransitionRules()&quot;&gt;&lt;code&gt;getTransitionRules()&lt;/code&gt;&lt;/a&gt;. This method returns those transitions that have been fully defined. These are typically historical, but may be in the future.</source>
          <target state="translated">이 규칙 인스턴스에 대한 전체 전환 세트는이 메소드와 &lt;a href=&quot;#getTransitionRules()&quot;&gt; &lt;code&gt;getTransitionRules()&lt;/code&gt; &lt;/a&gt; 의해 정의됩니다 . 이 메서드는 완전히 정의 된 전환을 반환합니다. 이는 일반적으로 역사적이지만 미래에있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c695d11429ec73735c5d91048db870c4106233b" translate="yes" xml:space="preserve">
          <source>The complete set of transitions for this rules instance is defined by this method and &lt;a href=&quot;#getTransitions()&quot;&gt;&lt;code&gt;getTransitions()&lt;/code&gt;&lt;/a&gt;. This method returns instances of &lt;a href=&quot;zoneoffsettransitionrule&quot;&gt;&lt;code&gt;ZoneOffsetTransitionRule&lt;/code&gt;&lt;/a&gt; that define an algorithm for when transitions will occur.</source>
          <target state="translated">이 규칙 인스턴스에 대한 전체 전환 세트는이 메서드와 &lt;a href=&quot;#getTransitions()&quot;&gt; &lt;code&gt;getTransitions()&lt;/code&gt; &lt;/a&gt; 의해 정의됩니다 . 이 메서드는 전환이 발생할 때 알고리즘을 정의하는 &lt;a href=&quot;zoneoffsettransitionrule&quot;&gt; &lt;code&gt;ZoneOffsetTransitionRule&lt;/code&gt; 의&lt;/a&gt; 인스턴스를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="62ccc62c3b00948e20f42cc9c3131d69e90ab141" translate="yes" xml:space="preserve">
          <source>The complete set of transitions for this rules instance is defined by this method and &lt;a href=&quot;zonerules#getTransitionRules--&quot;&gt;&lt;code&gt;getTransitionRules()&lt;/code&gt;&lt;/a&gt;. This method returns those transitions that have been fully defined. These are typically historical, but may be in the future.</source>
          <target state="translated">이 규칙 인스턴스의 전이 세트는이 메소드와 &lt;a href=&quot;zonerules#getTransitionRules--&quot;&gt; &lt;code&gt;getTransitionRules()&lt;/code&gt; &lt;/a&gt; 의해 정의됩니다 . 이 메소드는 완전히 정의 된 전환을 반환합니다. 이들은 일반적으로 역사적이지만 미래에있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3cbe2850875a6f72ed6ab4a88952848315078e96" translate="yes" xml:space="preserve">
          <source>The complete set of transitions for this rules instance is defined by this method and &lt;a href=&quot;zonerules#getTransitions--&quot;&gt;&lt;code&gt;getTransitions()&lt;/code&gt;&lt;/a&gt;. This method returns instances of &lt;a href=&quot;zoneoffsettransitionrule&quot;&gt;&lt;code&gt;ZoneOffsetTransitionRule&lt;/code&gt;&lt;/a&gt; that define an algorithm for when transitions will occur.</source>
          <target state="translated">이 규칙 인스턴스에 대한 전체 전환 세트는이 메소드와 &lt;a href=&quot;zonerules#getTransitions--&quot;&gt; &lt;code&gt;getTransitions()&lt;/code&gt; &lt;/a&gt; 의해 정의됩니다 . 이 메소드는 전환이 발생할시기에 대한 알고리즘을 정의하는 &lt;a href=&quot;zoneoffsettransitionrule&quot;&gt; &lt;code&gt;ZoneOffsetTransitionRule&lt;/code&gt; &lt;/a&gt; 인스턴스를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="5161a27cd66d982702633fd50ab5d0c10fd8d5a7" translate="yes" xml:space="preserve">
          <source>The completeness of the input could not be determined because it contains errors.</source>
          <target state="translated">입력에 오류가있어 완성도를 확인할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bfd228686782663b66a689143fe0858f460361a8" translate="yes" xml:space="preserve">
          <source>The completeness of the input could not be determined because it contains errors. Error detection is not a goal of completeness analysis, however errors interfered with determining its completeness. The input is considered complete because evaluating is the best mechanism to get error information.</source>
          <target state="translated">입력에 오류가있어 완성도를 확인할 수 없습니다. 오류 감지는 완전성 분석의 목표가 아니지만 오류가 완전성 결정을 방해했습니다. 평가는 오류 정보를 얻는 가장 좋은 메커니즘이기 때문에 입력이 완료된 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="524c842350764043be1381deb4e7a75d9303361c" translate="yes" xml:space="preserve">
          <source>The completion handler for an I/O operation initiated on a channel bound to a group is guaranteed to be invoked by one of the pooled threads in the group. This ensures that the completion handler is run by a thread with the expected &lt;em&gt;identity&lt;/em&gt;.</source>
          <target state="translated">그룹에 바인드 된 채널에서 시작된 I / O 조작의 완료 핸들러는 그룹의 풀링 된 스레드 중 하나에 의해 호출되도록 보장됩니다. 이것은 완료 핸들러가 예상 &lt;em&gt;ID&lt;/em&gt; 가있는 스레드에 의해 실행되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="0d8a524b8f0bfc14d5b33c03393a926327201c05" translate="yes" xml:space="preserve">
          <source>The component at index posn.</source>
          <target state="translated">인덱스 위치의 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="321beb39093f29d2f1844869134bf472de0dc315" translate="yes" xml:space="preserve">
          <source>The component comes after the last line of the layout's content.</source>
          <target state="translated">구성 요소는 레이아웃 내용의 마지막 줄 뒤에옵니다.</target>
        </trans-unit>
        <trans-unit id="e26a2430d578c99c6167b88d0c2c1db04933f6a7" translate="yes" xml:space="preserve">
          <source>The component comes after the last line of the layout's content. For Western, left-to-right and top-to-bottom orientations, this is equivalent to SOUTH.</source>
          <target state="translated">구성 요소는 레이아웃 내용의 마지막 줄 뒤에옵니다. 서양식, 왼쪽에서 오른쪽 및 위에서 아래로 방향의 경우 SOUTH와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="38629b8ee0afc40f5f2853e3dec3e5dc7298f69d" translate="yes" xml:space="preserve">
          <source>The component comes before the first line of the layout's content.</source>
          <target state="translated">구성 요소는 레이아웃 콘텐츠의 첫 번째 줄 앞에 있습니다.</target>
        </trans-unit>
        <trans-unit id="af6a2af1898d81c481440b3cd8640aaf640a422b" translate="yes" xml:space="preserve">
          <source>The component comes before the first line of the layout's content. For Western, left-to-right and top-to-bottom orientations, this is equivalent to NORTH.</source>
          <target state="translated">구성 요소는 레이아웃 콘텐츠의 첫 번째 줄 앞에 있습니다. 서양, 왼쪽에서 오른쪽 및 위에서 아래 방향의 경우 이는 NORTH와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="c6ca63c44af0debf2bf58f6314ef6eb8595cba1d" translate="yes" xml:space="preserve">
          <source>The component configures some of its properties to match the &lt;code&gt;Action&lt;/code&gt;.</source>
          <target state="translated">구성 요소는 &lt;code&gt;Action&lt;/code&gt; 과 일치하도록 일부 속성을 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="e2dd08aa02937510bce78896eb46f9c0281fb581" translate="yes" xml:space="preserve">
          <source>The component given is the actual component used by the JTextPane. Since components cannot be a child of more than one container, this method should not be used in situations where the model is shared by text components.</source>
          <target state="translated">주어진 컴포넌트는 JTextPane에서 사용하는 실제 컴포넌트입니다. 구성 요소는 둘 이상의 컨테이너의 자식이 될 수 없으므로 모델이 텍스트 구성 요소에서 공유되는 상황에서는이 방법을 사용하면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="357e717a3867058012bcfcad4afa0fdbac1206ab" translate="yes" xml:space="preserve">
          <source>The component goes at the beginning of the line direction for the layout.</source>
          <target state="translated">구성 요소는 레이아웃의 선 방향 시작 부분에 있습니다.</target>
        </trans-unit>
        <trans-unit id="74e6099840a74dc7f8fd860a0a4c41b7373c5631" translate="yes" xml:space="preserve">
          <source>The component goes at the beginning of the line direction for the layout. For Western, left-to-right and top-to-bottom orientations, this is equivalent to WEST.</source>
          <target state="translated">구성 요소는 레이아웃의 선 방향 시작 부분에 있습니다. 서양식, 왼쪽에서 오른쪽 및 위에서 아래 방향의 경우 이것은 WEST와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="22ccddc9737aced85a20683366e6b89ddfb58af0" translate="yes" xml:space="preserve">
          <source>The component goes at the end of the line direction for the layout.</source>
          <target state="translated">구성 요소는 레이아웃의 선 방향 끝으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="2a5b339f24ae082855aeddaaecacbe04571f14f1" translate="yes" xml:space="preserve">
          <source>The component goes at the end of the line direction for the layout. For Western, left-to-right and top-to-bottom orientations, this is equivalent to EAST.</source>
          <target state="translated">구성 요소는 레이아웃의 선 방향 끝으로 이동합니다. 서양식, 왼쪽에서 오른쪽 및 위에서 아래 방향의 경우 이는 EAST와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="e51b1a86d675ea435b4d48af53e1bf2606cf91f0" translate="yes" xml:space="preserve">
          <source>The component in the currently selected path which contains sourcePoint (relative to the source component's coordinate space. If sourcePoint is not inside a component on the currently selected path, null is returned.</source>
          <target state="translated">sourcePoint를 포함하는 현재 선택된 경로의 구성 요소 (소스 구성 요소의 좌표 공간에 상대적입니다. sourcePoint가 현재 선택한 경로의 구성 요소 내부에 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="93ff1a34a8d24b885af3bc77651d96f52e2bb611" translate="yes" xml:space="preserve">
          <source>The component installs a &lt;code&gt;PropertyChangeListener&lt;/code&gt; on the &lt;code&gt;Action&lt;/code&gt; so that the component can change its properties to reflect changes in the &lt;code&gt;Action&lt;/code&gt;'s properties.</source>
          <target state="translated">구성 요소는 &lt;code&gt;Action&lt;/code&gt; 에 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 를 설치 하여 구성 요소가 해당 속성을 변경하여 &lt;code&gt;Action&lt;/code&gt; 속성의 변경 사항을 반영 할 수 있도록 합니다.</target>
        </trans-unit>
        <trans-unit id="3d8fabcefb52aa83a5f6e083956a8ffb77011074" translate="yes" xml:space="preserve">
          <source>The component is added to the button row directly.</source>
          <target state="translated">구성 요소가 버튼 행에 직접 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="1e531d252c893d215889244b2c27a8217c3a4709" translate="yes" xml:space="preserve">
          <source>The component is placed relative to the text baseline according to the value returned by &lt;code&gt;Component.getAlignmentY&lt;/code&gt;. For Swing components this value can be conveniently set using the method &lt;code&gt;JComponent.setAlignmentY&lt;/code&gt;. For example, setting a value of &lt;code&gt;0.75&lt;/code&gt; will cause 75 percent of the component to be above the baseline, and 25 percent of the component to be below the baseline.</source>
          <target state="translated">컴포넌트는 &lt;code&gt;Component.getAlignmentY&lt;/code&gt; 에서 반환 된 값에 따라 텍스트 기준선을 기준으로 배치됩니다 . Swing 컴포넌트의 경우이 값은 &lt;code&gt;JComponent.setAlignmentY&lt;/code&gt; 메소드를 사용하여 편리하게 설정할 수 있습니다 . 예를 들어 값을 &lt;code&gt;0.75&lt;/code&gt; 로 설정 하면 구성 요소의 75 %가 기준선 위에 있고 구성 요소의 25 %가 기준선 아래에있게됩니다.</target>
        </trans-unit>
        <trans-unit id="6353bf9fb6b5c395dc80e83b16932093c258f2dc" translate="yes" xml:space="preserve">
          <source>The component removed (a String).</source>
          <target state="translated">구성 요소가 제거되었습니다 (문자열).</target>
        </trans-unit>
        <trans-unit id="8d33f83809006866b17b180cd392b443af959e82" translate="yes" xml:space="preserve">
          <source>The component should either descend from &lt;code&gt;JComponent&lt;/code&gt; or be another kind of lightweight component. A lightweight component is one whose &quot;lightweight&quot; property (returned by the &lt;code&gt;Component&lt;/code&gt;&lt;code&gt;isLightweight&lt;/code&gt; method) is true. If the Component is not lightweight, bad things map happen: crashes, exceptions, painting problems...</source>
          <target state="translated">컴포넌트는 &lt;code&gt;JComponent&lt;/code&gt; 의 후손 이거나 다른 종류의 경량 컴포넌트 여야합니다 . 경량 구성 요소는 &quot;경량&quot;속성 ( &lt;code&gt;Component&lt;/code&gt; &lt;code&gt;isLightweight&lt;/code&gt; 메서드에 의해 반환 됨 )이 true 인 구성 요소 입니다. 컴포넌트가 경량이 아닌 경우, 충돌, 예외, 페인팅 문제 등 나쁜 일이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1376ca272698913ec6989854da54425e8d439c9b" translate="yes" xml:space="preserve">
          <source>The component that gets acted upon by the action will be the source of the ActionEvent if the source can be narrowed to a JEditorPane type. If the source can't be narrowed, the most recently focused text component is changed. If neither of these are the case, the action cannot be performed.</source>
          <target state="translated">소스가 JEditorPane 유형으로 좁혀 질 수있는 경우 액션에 의해 작동되는 컴포넌트는 ActionEvent의 소스가됩니다. 소스를 좁힐 수없는 경우 가장 최근에 초점을 맞춘 텍스트 구성 요소가 변경됩니다. 둘 다 해당되지 않으면 작업을 수행 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="067c52924cb281f6221e68a53f34b1dfc8b6c1ab" translate="yes" xml:space="preserve">
          <source>The component that was focused.</source>
          <target state="translated">집중된 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="83787bea9a3b9d7919539b97e1a25b1a69bf1001" translate="yes" xml:space="preserve">
          <source>The component to display in the lower left corner.</source>
          <target state="translated">왼쪽 하단에 표시 할 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="60f1167b3c36e8998bceb2d1149062ad990f2e07" translate="yes" xml:space="preserve">
          <source>The component to display in the lower left corner. Default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">왼쪽 하단에 표시 할 구성 요소입니다. 기본값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0ff34819478ff80a2f1081e4195a8bad93d175b3" translate="yes" xml:space="preserve">
          <source>The component to display in the lower right corner.</source>
          <target state="translated">오른쪽 하단에 표시 할 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="4a4b7ad0d3b671d851ff3715009f49e51e41019a" translate="yes" xml:space="preserve">
          <source>The component to display in the lower right corner. Default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">오른쪽 하단에 표시 할 구성 요소입니다. 기본값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="74f16643d9e3602845c27d833e43c30495a95c51" translate="yes" xml:space="preserve">
          <source>The component to display in the upper left corner.</source>
          <target state="translated">왼쪽 상단 모서리에 표시 할 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="e9ed964a6910f13d3da2e9bf1d787e81760caca3" translate="yes" xml:space="preserve">
          <source>The component to display in the upper left corner. Default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">왼쪽 상단 모서리에 표시 할 구성 요소입니다. 기본값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6ae9c445ae7df434e1134c10ad2ea7ed2dcfd2e8" translate="yes" xml:space="preserve">
          <source>The component to display in the upper right corner.</source>
          <target state="translated">오른쪽 상단 모서리에 표시 할 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="b1d50dbaf19c8a5e71d3378ea1bce6a8a20b74fe" translate="yes" xml:space="preserve">
          <source>The component to display in the upper right corner. Default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">오른쪽 상단 모서리에 표시 할 구성 요소입니다. 기본값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1f538daac3e9cc0d4de608e6fa542fe6f5abaea4" translate="yes" xml:space="preserve">
          <source>The component used is determined by the return value of the createComponent method. The default implementation of this method is to return the component held as an attribute of the element (by calling StyleConstants.getComponent). A limitation of this behavior is that the component cannot be used by more than one text component (i.e. with a shared model). Subclasses can remove this constraint by implementing the createComponent to actually create a component based upon some kind of specification contained in the attributes. The ObjectView class in the html package is an example of a ComponentView implementation that supports multiple component views of a shared model.</source>
          <target state="translated">사용되는 구성 요소는 createComponent 메서드의 반환 값에 의해 결정됩니다. 이 메소드의 기본 구현은 StyleConstants.getComponent를 호출하여 요소의 속성으로 보유 된 구성 요소를 리턴하는 것입니다. 이 동작의 제한 사항은 하나 이상의 텍스트 구성 요소 (예 : 공유 모델)에서 구성 요소를 사용할 수 없다는 것입니다. 서브 클래스는 속성에 포함 된 어떤 종류의 사양을 기반으로 실제로 컴포넌트를 생성하기 위해 createComponent를 구현함으로써이 제약을 제거 할 수 있습니다. html 패키지의 ObjectView 클래스는 공유 모델의 여러 구성 요소보기를 지원하는 ComponentView 구현의 예입니다.</target>
        </trans-unit>
        <trans-unit id="143da0a2808725f1c84cf860b5e15e2363b0ba85" translate="yes" xml:space="preserve">
          <source>The component-level paint event.</source>
          <target state="translated">구성 요소 수준 페인트 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="dbccbafebfec9e845027b128d81666afafa24267" translate="yes" xml:space="preserve">
          <source>The component-level paint event. This event is a special type which is used to ensure that paint/update method calls are serialized along with the other events delivered from the event queue. This event is not designed to be used with the Event Listener model; programs should continue to override paint/update methods in order render themselves properly.</source>
          <target state="translated">구성 요소 수준 페인트 이벤트입니다. 이 이벤트는 페인트 / 업데이트 메서드 호출이 이벤트 큐에서 전달 된 다른 이벤트와 함께 직렬화되도록하는 데 사용되는 특수 유형입니다. 이 이벤트는 이벤트 리스너 모델과 함께 사용하도록 설계되지 않았습니다. 프로그램은 스스로를 적절하게 렌더링하기 위해 계속해서 paint / update 메소드를 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="f651357a4d9c2ca3a9b8efd0570128b8a66e1e93" translate="yes" xml:space="preserve">
          <source>The components are aligned as specified by each component's X or Y alignment value.</source>
          <target state="translated">구성 요소는 각 구성 요소의 X 또는 Y 정렬 값에 지정된대로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="83604b63fc3a0513d1ff51b63849fd7ce52faa0c" translate="yes" xml:space="preserve">
          <source>The components are laid out according to their preferred sizes and the constraints of the container's size. The &lt;code&gt;NORTH&lt;/code&gt; and &lt;code&gt;SOUTH&lt;/code&gt; components may be stretched horizontally; the &lt;code&gt;EAST&lt;/code&gt; and &lt;code&gt;WEST&lt;/code&gt; components may be stretched vertically; the &lt;code&gt;CENTER&lt;/code&gt; component may stretch both horizontally and vertically to fill any space left over.</source>
          <target state="translated">구성 요소는 선호하는 크기와 컨테이너 크기의 제약에 따라 배치됩니다. &lt;code&gt;NORTH&lt;/code&gt; 및 &lt;code&gt;SOUTH&lt;/code&gt; 성분은 가로 연신 될 수있다; &lt;code&gt;EAST&lt;/code&gt; 와 &lt;code&gt;WEST&lt;/code&gt; 성분은 세로 연신 될 수있다; &lt;code&gt;CENTER&lt;/code&gt; 구성 요소는 남아있는 공간을 채우기 위해 가로와 세로 모두를 늘릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e667b0bc3fd41f695744e24b79fc8cf2ad44fe04" translate="yes" xml:space="preserve">
          <source>The components are placed end-to-end, starting either at coordinate 0 (the leftmost or topmost position) or at the coordinate representing the end of the allocated span (the rightmost or bottommost position).</source>
          <target state="translated">구성 요소는 좌표 0 (가장 왼쪽 또는 맨 위 위치) 또는 할당 된 범위의 끝을 나타내는 좌표 (가장 오른쪽 또는 맨 아래 위치)에서 시작하여 종단 간 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="25fb25c047d9f44ab67872f561d0f23915685cc0" translate="yes" xml:space="preserve">
          <source>The components are returned in the same order that they are declared in the record header. The array is empty if this record class has no components. If the class is not a record class, that is &lt;a href=&quot;#isRecord()&quot;&gt;&lt;code&gt;isRecord()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;, then this method returns &lt;code&gt;null&lt;/code&gt;. Conversely, if &lt;a href=&quot;#isRecord()&quot;&gt;&lt;code&gt;isRecord()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;, then this method returns a non-null value.</source>
          <target state="translated">구성 요소는 레코드 헤더에 선언 된 것과 동일한 순서로 반환됩니다. 이 레코드 클래스에 구성 요소가 없으면 배열이 비어 있습니다. 클래스가 레코드 클래스가 아닌 경우 즉, &lt;a href=&quot;#isRecord()&quot;&gt; &lt;code&gt;isRecord()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;false&lt;/code&gt; 를 반환하고이 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 반대로 &lt;a href=&quot;#isRecord()&quot;&gt; &lt;code&gt;isRecord()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 반환하면이 메서드는 null이 아닌 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8b20b5cd486b73d090e372acf6686be11fed43f5" translate="yes" xml:space="preserve">
          <source>The components array.</source>
          <target state="translated">구성 요소 배열입니다.</target>
        </trans-unit>
        <trans-unit id="551e179ff0a1f6b74371033d523205c16478c234" translate="yes" xml:space="preserve">
          <source>The components of a LDAP name, that is, RDNs, are numbered. The indexes of a LDAP name with n RDNs range from 0 to n-1. This range may be written as [0,n). The right most RDN is at index 0, and the left most RDN is at index n-1. For example, the distinguished name: &quot;CN=Steve Kille, O=Isode Limited, C=GB&quot; is numbered in the following sequence ranging from 0 to 2: {C=GB, O=Isode Limited, CN=Steve Kille}. An empty LDAP name is represented by an empty RDN list.</source>
          <target state="translated">LDAP 이름의 구성 요소, 즉 RDN은 번호가 매겨집니다. n 개의 RDN이있는 LDAP 이름의 인덱스는 0에서 n-1 사이입니다. 이 범위는 [0, n)으로 작성 될 수 있습니다. 가장 오른쪽에있는 RDN은 인덱스 0에 있고 가장 왼쪽에있는 RDN은 인덱스 n-1에 있습니다. 예를 들어, 고유 이름 &quot;CN = Steve Kille, O = Isode Limited, C = GB&quot;는 0에서 2까지의 순서로 번호가 매겨집니다. {C = GB, O = Isode Limited, CN = Steve Kille}. 빈 LDAP 이름은 빈 RDN 목록으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="5dc21cc1b67ef648051518375f8f7207d80d43fb" translate="yes" xml:space="preserve">
          <source>The components of a composite name are numbered. The indexes of a composite name with N components range from 0 up to, but not including, N. This range may be written as [0,N). The most significant component is at index 0. An empty composite name has no components.</source>
          <target state="translated">합성 이름의 구성 요소는 번호가 매겨져 있습니다. N 개의 구성 요소를 갖는 복합 이름의 색인은 0에서 N까지 포함하지 않습니다.이 범위는 [0, N)으로 작성 될 수 있습니다. 가장 중요한 구성 요소는 인덱스 0입니다. 빈 복합 이름에는 구성 요소가 없습니다.</target>
        </trans-unit>
        <trans-unit id="14a1f972f1e3053de3d05dc8a5b4d01708c7f345" translate="yes" xml:space="preserve">
          <source>The components of a compound name are numbered. The indexes of a compound name with N components range from 0 up to, but not including, N. This range may be written as [0,N). The most significant component is at index 0. An empty compound name has no components.</source>
          <target state="translated">복합 이름의 구성 요소는 번호가 매겨져 있습니다. N 성분을 가진 화합물 이름의 인덱스는 0에서 N까지 포함하지 않습니다.이 범위는 [0, N)으로 쓰여질 수 있습니다. 가장 중요한 구성 요소는 인덱스 0입니다. 빈 복합 이름에는 구성 요소가 없습니다.</target>
        </trans-unit>
        <trans-unit id="3bfe595dae00ecadd506655e42ccf5b0136b9bf1" translate="yes" xml:space="preserve">
          <source>The components of a name are numbered. The indexes of a name with N components range from 0 up to, but not including, N. This range may be written as [0,N). The most significant component is at index 0. An empty name has no components.</source>
          <target state="translated">이름의 구성 요소는 번호가 매겨져 있습니다. N 성분을 가진 이름의 인덱스는 0에서 N까지는 포함하지 않습니다.이 범위는 [0, N)으로 쓰여질 수 있습니다. 가장 중요한 구성 요소는 인덱스 0입니다. 빈 이름에는 구성 요소가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a53895bd7db05674c11082dd6d7f96a64be863b9" translate="yes" xml:space="preserve">
          <source>The components.</source>
          <target state="translated">구성 요소.</target>
        </trans-unit>
        <trans-unit id="f9f1515300716b621407634206b763efbbba541c" translate="yes" xml:space="preserve">
          <source>The compound edit.</source>
          <target state="translated">복합 편집.</target>
        </trans-unit>
        <trans-unit id="5352c3728b0e0385e152a82e295d498e4fb174ac" translate="yes" xml:space="preserve">
          <source>The compression type strings and the image type(s) each supports are listed in the following table:</source>
          <target state="translated">압축 유형 문자열 및 이미지 유형 각각은 다음 표에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9412d65799f7d144a7050330acbbbef5abfaf9b" translate="yes" xml:space="preserve">
          <source>The computation is specified in &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#adding-durations-to-dateTimes&quot;&gt;XML Schema 1.0 Part 2, Appendix E, &lt;i&gt;Adding durations to dateTimes&lt;/i&gt;&lt;/a&gt;. &lt;a href=&quot;#datetimefieldmapping&quot;&gt;date/time field mapping table&lt;/a&gt; defines the mapping from XML Schema 1.0 &lt;code&gt;dateTime&lt;/code&gt; fields to this class' representation of those fields.</source>
          <target state="translated">계산은 &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#adding-durations-to-dateTimes&quot;&gt;XML Schema 1.0 Part 2, 부록 E, &lt;i&gt;dateTimes에 기간 추가에&lt;/i&gt;&lt;/a&gt; 지정되어 있습니다. &lt;a href=&quot;#datetimefieldmapping&quot;&gt;날짜 / 시간 필드 매핑 테이블&lt;/a&gt; 은 XML Schema 1.0 &lt;code&gt;dateTime&lt;/code&gt; 필드에서 해당 필드의이 클래스 표현으로 의 매핑을 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="86bd257f43c20889ee2778baa285ea3831ac55f4" translate="yes" xml:space="preserve">
          <source>The computation is specified in &lt;a href=&quot;https://www.w3.org/TR/xmlschema-2/#adding-durations-to-dateTimes&quot;&gt;XML Schema 1.0 Part 2, Appendix E, &lt;i&gt;Adding durations to dateTimes&lt;/i&gt;&lt;/a&gt;. &lt;a href=&quot;#datetimefieldmapping&quot;&gt;date/time field mapping table&lt;/a&gt; defines the mapping from XML Schema 1.0 &lt;code&gt;dateTime&lt;/code&gt; fields to this class' representation of those fields.</source>
          <target state="translated">계산은 &lt;a href=&quot;https://www.w3.org/TR/xmlschema-2/#adding-durations-to-dateTimes&quot;&gt;XML Schema 1.0 Part 2, 부록 E, &lt;i&gt;dateTimes에 기간 추가에&lt;/i&gt;&lt;/a&gt; 지정되어 있습니다. &lt;a href=&quot;#datetimefieldmapping&quot;&gt;날짜 / 시간 필드 매핑 테이블&lt;/a&gt; 은 XML Schema 1.0 &lt;code&gt;dateTime&lt;/code&gt; 필드에서 해당 필드의이 클래스 표현으로 의 매핑을 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="982bc19242c5ed0c7f0eea7d10d969d4bfd2f401" translate="yes" xml:space="preserve">
          <source>The computation of the value returned by this method is similar to that of the value returned by &lt;a href=&quot;list#hashCode()&quot;&gt;&lt;code&gt;List.hashCode()&lt;/code&gt;&lt;/a&gt; on a list containing the same elements as &lt;code&gt;a&lt;/code&gt; in the same order, with one difference: If an element &lt;code&gt;e&lt;/code&gt; of &lt;code&gt;a&lt;/code&gt; is itself an array, its hash code is computed not by calling &lt;code&gt;e.hashCode()&lt;/code&gt;, but as by calling the appropriate overloading of &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; if &lt;code&gt;e&lt;/code&gt; is an array of a primitive type, or as by calling &lt;code&gt;Arrays.deepHashCode(e)&lt;/code&gt; recursively if &lt;code&gt;e&lt;/code&gt; is an array of a reference type. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">이러한 방법에 의해 리턴 된 값의 계산에 의해 리턴 된 값과 유사하다 &lt;a href=&quot;list#hashCode()&quot;&gt; &lt;code&gt;List.hashCode()&lt;/code&gt; &lt;/a&gt; 와 동일한 요소에 포함 된 목록 &lt;code&gt;a&lt;/code&gt; 하나 개의 차이와 동일한 순서로 : 소자 경우 &lt;code&gt;e&lt;/code&gt; 의 &lt;code&gt;a&lt;/code&gt; 그 자체 인 배열에서 해시 코드는 &lt;code&gt;e.hashCode()&lt;/code&gt; 를 호출하지 않고 &lt;code&gt;e&lt;/code&gt; 가 기본 유형의 배열 인 경우 &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; 의 적절한 오버로딩을 호출하거나 &lt;code&gt;Arrays.deepHashCode(e)&lt;/code&gt; 호출하여 계산됩니다. &lt;code&gt;e&lt;/code&gt; 가 참조 유형의 배열 인 경우 재귀 적으로 . 경우 &lt;code&gt;a&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; ,이 메소드는 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="de48d26fe33c726460e7d2fda077c5a4d41c831c" translate="yes" xml:space="preserve">
          <source>The computation of the value returned by this method is similar to that of the value returned by &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;List.hashCode()&lt;/code&gt;&lt;/a&gt; on a list containing the same elements as &lt;code&gt;a&lt;/code&gt; in the same order, with one difference: If an element &lt;code&gt;e&lt;/code&gt; of &lt;code&gt;a&lt;/code&gt; is itself an array, its hash code is computed not by calling &lt;code&gt;e.hashCode()&lt;/code&gt;, but as by calling the appropriate overloading of &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; if &lt;code&gt;e&lt;/code&gt; is an array of a primitive type, or as by calling &lt;code&gt;Arrays.deepHashCode(e)&lt;/code&gt; recursively if &lt;code&gt;e&lt;/code&gt; is an array of a reference type. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">이러한 방법에 의해 리턴 된 값의 계산에 의해 리턴 된 값과 유사하다 &lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;List.hashCode()&lt;/code&gt; &lt;/a&gt; 와 동일한 요소에 포함 된 목록 &lt;code&gt;a&lt;/code&gt; 하나 개의 차이와 동일한 순서로 : 소자 경우 &lt;code&gt;e&lt;/code&gt; 의 &lt;code&gt;a&lt;/code&gt; 그 자체 인 배열의 해시 코드는 &lt;code&gt;e.hashCode()&lt;/code&gt; 를 호출하지 않고 &lt;code&gt;e&lt;/code&gt; 가 기본 유형의 배열 인 경우 &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; 의 적절한 오버로드를 호출하거나 &lt;code&gt;Arrays.deepHashCode(e)&lt;/code&gt; 호출하여 계산합니다. &lt;code&gt;e&lt;/code&gt; 가 참조 유형의 배열 인 경우 재귀 적으로 . 경우 &lt;code&gt;a&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; ,이 메소드는 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="214bb0bb62df51550823153b8ce29f6dab115c3a" translate="yes" xml:space="preserve">
          <source>The computation performed by a stage may be expressed as a Function, Consumer, or Runnable (using methods with names including &lt;em&gt;apply&lt;/em&gt;, &lt;em&gt;accept&lt;/em&gt;, or &lt;em&gt;run&lt;/em&gt;, respectively) depending on whether it requires arguments and/or produces results. For example, &lt;code&gt;stage.thenApply(x -&amp;gt; square(x)).thenAccept(x -&amp;gt;
 System.out.print(x)).thenRun(() -&amp;gt; System.out.println())&lt;/code&gt;. An additional form (&lt;em&gt;compose&lt;/em&gt;) applies functions of stages themselves, rather than their results.</source>
          <target state="translated">스테이지에 의해 수행 된 계산 은 인수가 필요한지 및 / 또는 결과를 생성하는지에 따라 함수, 소비자 또는 Runnable ( 각각 &lt;em&gt;apply&lt;/em&gt; , &lt;em&gt;accept&lt;/em&gt; 또는 &lt;em&gt;run&lt;/em&gt; 등의 이름을 가진 메소드 사용)로 표현 될 수 있습니다 . 예를 들어, &lt;code&gt;stage.thenApply(x -&amp;gt; square(x)).thenAccept(x -&amp;gt; System.out.print(x)).thenRun(() -&amp;gt; System.out.println())&lt;/code&gt; . 추가 양식 ( &lt;em&gt;compose&lt;/em&gt; )은 결과 대신 스테이지 자체의 기능을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="5fb29aadd15fe6f9ced78a3f9d83f727b656a835" translate="yes" xml:space="preserve">
          <source>The computation performed by a stage may be expressed as a Function, Consumer, or Runnable (using methods with names including &lt;em&gt;apply&lt;/em&gt;, &lt;em&gt;accept&lt;/em&gt;, or &lt;em&gt;run&lt;/em&gt;, respectively) depending on whether it requires arguments and/or produces results. For example:</source>
          <target state="translated">단계에서 수행되는 계산 은 인수가 필요한지 및 / 또는 결과를 생성하는지 여부에 따라 Function, Consumer 또는 Runnable ( 각각 &lt;em&gt;apply&lt;/em&gt; , &lt;em&gt;accept&lt;/em&gt; 또는 &lt;em&gt;run을&lt;/em&gt; 포함하는 이름의 메서드 사용)으로 표현 될 수 있습니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="1691fd27bc6e097f4599ed6bb1fc28887a525083" translate="yes" xml:space="preserve">
          <source>The computations for day-of-week, week-of-month, and week-of-year are based on the &lt;a href=&quot;chronofield#YEAR&quot;&gt;proleptic-year&lt;/a&gt;, &lt;a href=&quot;chronofield#MONTH_OF_YEAR&quot;&gt;month-of-year&lt;/a&gt;, &lt;a href=&quot;chronofield#DAY_OF_MONTH&quot;&gt;day-of-month&lt;/a&gt;, and &lt;a href=&quot;chronofield#DAY_OF_WEEK&quot;&gt;ISO day-of-week&lt;/a&gt; which are based on the &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;epoch-day&lt;/a&gt; and the chronology. The values may not be aligned with the &lt;a href=&quot;chronofield#YEAR_OF_ERA&quot;&gt;year-of-Era&lt;/a&gt; depending on the Chronology.</source>
          <target state="translated">요일에 대한 계산은, 주 개월, 그리고 일주일의 년은 기반으로 &lt;a href=&quot;chronofield#YEAR&quot;&gt;예 기적 년&lt;/a&gt; , &lt;a href=&quot;chronofield#MONTH_OF_YEAR&quot;&gt;달의 년&lt;/a&gt; , &lt;a href=&quot;chronofield#DAY_OF_MONTH&quot;&gt;하루의 달&lt;/a&gt; , 및 &lt;a href=&quot;chronofield#DAY_OF_WEEK&quot;&gt;ISO는 요일&lt;/a&gt; 있는 &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;시대&lt;/a&gt; 와 연대기를 기반으로합니다 . 연대기에 따라 값이 &lt;a href=&quot;chronofield#YEAR_OF_ERA&quot;&gt;연도&lt;/a&gt; 와 정렬되지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ddb607d0cbc2d88b925fbad2202c59f052a09097" translate="yes" xml:space="preserve">
          <source>The computed average can vary numerically and have the special case behavior as computing the sum; see &lt;a href=&quot;#getSum()&quot;&gt;&lt;code&gt;getSum()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">계산 된 평균은 수치 적으로 다양 할 수 있으며 합계를 계산하는 것과 같은 특수한 경우 동작을 가질 수 있습니다. 자세한 내용은 &lt;a href=&quot;#getSum()&quot;&gt; &lt;code&gt;getSum()&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a1dceb73e2dcd8fada2a458e771cdcb91f02b518" translate="yes" xml:space="preserve">
          <source>The computed average can vary numerically and have the special case behavior as computing the sum; see &lt;a href=&quot;#sum()&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">계산 된 평균은 수치 적으로 다양 할 수 있으며 합계를 계산하는 것과 같은 특수한 경우 동작을 가질 수 있습니다. 자세한 내용은 &lt;a href=&quot;#sum()&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e0a314c28965a5184605c91a9dd77e2a63a6282c" translate="yes" xml:space="preserve">
          <source>The computed result must be within 1 ulp of the exact result.</source>
          <target state="translated">계산 결과는 정확한 결과의 1ulp 내에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="778968ebec250a920a57d7938e53b3467b9d8fb1" translate="yes" xml:space="preserve">
          <source>The computed result must be within 1 ulp of the exact result. If one parameter is held constant, the results must be semi-monotonic in the other parameter.</source>
          <target state="translated">계산 결과는 정확한 결과의 1ulp 내에 있어야합니다. 한 매개 변수가 일정하게 유지되면 다른 매개 변수의 결과는 반-단조 여야합니다.</target>
        </trans-unit>
        <trans-unit id="a6674b79e473f3879ed7bc38a2aea8ceb42331e7" translate="yes" xml:space="preserve">
          <source>The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.</source>
          <target state="translated">계산 결과는 정확한 결과의 1ulp 내에 있어야합니다. 결과는 반 단조이어야합니다.</target>
        </trans-unit>
        <trans-unit id="a95667f460b33082c1f4875f29adeb6b10893583" translate="yes" xml:space="preserve">
          <source>The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic. The result of &lt;code&gt;expm1&lt;/code&gt; for any finite input must be greater than or equal to &lt;code&gt;-1.0&lt;/code&gt;. Note that once the exact result of</source>
          <target state="translated">계산 결과는 정확한 결과의 1ulp 내에 있어야합니다. 결과는 반 단조이어야합니다. 유한 입력에 대한 &lt;code&gt;expm1&lt;/code&gt; 의 결과는 &lt;code&gt;-1.0&lt;/code&gt; 보다 크거나 같아야합니다 . 한 번의 정확한 결과는</target>
        </trans-unit>
        <trans-unit id="051083ed8bd5eb53cc6b0a3e3e4e3a859c790084" translate="yes" xml:space="preserve">
          <source>The computed result must be within 2 ulps of the exact result. Results must be semi-monotonic.</source>
          <target state="translated">계산 결과는 정확한 결과의 2 ulps 내에 있어야합니다. 결과는 반 단조이어야합니다.</target>
        </trans-unit>
        <trans-unit id="8e8d50f4531c22cdf1c57032345e12f930311bee" translate="yes" xml:space="preserve">
          <source>The computed result must be within 2.5 ulps of the exact result.</source>
          <target state="translated">계산 결과는 정확한 결과의 2.5ulps 내에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="5716b70a97e32988d2cb0c294378ce7e42458ba1" translate="yes" xml:space="preserve">
          <source>The computed result must be within 2.5 ulps of the exact result. The result of &lt;code&gt;tanh&lt;/code&gt; for any finite input must have an absolute value less than or equal to 1. Note that once the exact result of tanh is within 1/2 of an ulp of the limit value of &amp;plusmn;1, correctly signed &amp;plusmn;&lt;code&gt;1.0&lt;/code&gt; should be returned.</source>
          <target state="translated">계산 결과는 정확한 결과의 2.5ulps 내에 있어야합니다. 유한 입력에 대한 &lt;code&gt;tanh&lt;/code&gt; 의 결과 는 절대 값이 1 이하 여야합니다. tanh의 정확한 결과가 한계 값 &amp;plusmn; 1의 ulp의 1/2 내에 있으면 정확하게 부호있는 &amp;plusmn; &lt;code&gt;1.0&lt;/code&gt; 이어야합니다. 돌아왔다.</target>
        </trans-unit>
        <trans-unit id="2a6345d2e4176464c694f26d08973b587dbf9467" translate="yes" xml:space="preserve">
          <source>The computed style. The &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; is read-only and contains only absolute values.</source>
          <target state="translated">계산 된 스타일. &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; 읽기 전용이며 절대적인 값을 포함한다.</target>
        </trans-unit>
        <trans-unit id="caefa96ef052b328b6ab54a78509cbcd82bb3a6d" translate="yes" xml:space="preserve">
          <source>The concatenation &lt;em&gt;recipe&lt;/em&gt; is a String description for the way to construct a concatenated String from the arguments and constants. The recipe is processed from left to right, and each character represents an input to concatenation. Recipe characters mean:</source>
          <target state="translated">연결 &lt;em&gt;레시피&lt;/em&gt; 는 인수와 상수에서 연결된 문자열을 구성하는 방법에 대한 문자열 설명입니다. 레시피는 왼쪽에서 오른쪽으로 처리되며 각 문자는 연결에 대한 입력을 나타냅니다. 레시피 문자는 다음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="e44ba5b29ec6b29fa13a1c0b35b2b236c3e56f08" translate="yes" xml:space="preserve">
          <source>The concepts are easier to understand by comparison with the Standard MBean concept. Here is how a managed object might be represented as a Standard MBean, and as an MXBean:</source>
          <target state="translated">표준 MBean 개념과 비교하여 개념을 이해하기가 더 쉽습니다. 관리 대상 객체를 표준 MBean 및 MXBean으로 표시하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="406e4cef7e07251a93d230aa3d12ee538ab9badb" translate="yes" xml:space="preserve">
          <source>The conceptual distinction between URIs and URLs is reflected in the differences between this class and the &lt;a href=&quot;url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">URI와 URL의 개념적 차이는이 클래스와 &lt;a href=&quot;url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt; 클래스 의 차이점에 반영됩니다 .</target>
        </trans-unit>
        <trans-unit id="07517dfd669419de18de761dd5d44e2d407cd858" translate="yes" xml:space="preserve">
          <source>The concurrency properties of bulk operations follow from those of ConcurrentHashMap: Any non-null result returned from &lt;code&gt;get(key)&lt;/code&gt; and related access methods bears a happens-before relation with the associated insertion or update. The result of any bulk operation reflects the composition of these per-element relations (but is not necessarily atomic with respect to the map as a whole unless it is somehow known to be quiescent). Conversely, because keys and values in the map are never null, null serves as a reliable atomic indicator of the current lack of any result. To maintain this property, null serves as an implicit basis for all non-scalar reduction operations. For the double, long, and int versions, the basis should be one that, when combined with any other value, returns that other value (more formally, it should be the identity element for the reduction). Most common reductions have these properties; for example, computing a sum with basis 0 or a minimum with basis MAX_VALUE.</source>
          <target state="translated">대량 작업의 동시성 속성은 ConcurrentHashMap의 동시성 속성을 따릅니다. &lt;code&gt;get(key)&lt;/code&gt; 에서 반환되는 null이 아닌 결과관련 액세스 방법은 관련 삽입 또는 업데이트와 관련하여 발생한다. 벌크 연산의 결과는 이러한 요소 별 관계의 구성을 반영합니다 (그러나 완전히 정지 된 것으로 알려지지 않은 한 맵 전체에 대해 반드시 원자적인 것은 아님). 반대로 맵의 키와 값은 절대로 null이 아니기 때문에 null은 현재 결과가 없다는 신뢰할 수있는 원자 표시기 역할을합니다. 이 속성을 유지하기 위해 null은 모든 비-스칼라 축소 연산에 대한 암시 적 기준으로 사용됩니다. double, long 및 int 버전의 경우 기본은 다른 값과 결합 될 때 다른 값을 리턴하는 것이어야합니다 (더 공식적으로는 축소의 식별 요소 여야 함). 가장 일반적인 감소에는 다음과 같은 특성이 있습니다. 예를 들어기준이 0 인 기준 또는 MAX_VALUE를 기준으로 최소값을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="0177e5099b5a24620627e890b703a5635812dcbd" translate="yes" xml:space="preserve">
          <source>The condition &quot;at least one&quot;, allows for the stream to represent a single OpenType/TrueType font. That is, it does not have to be a collection. Each &lt;code&gt;Font&lt;/code&gt; element of the returned array is created with a point size of 1 and style &lt;a href=&quot;#PLAIN&quot;&gt;&lt;code&gt;PLAIN&lt;/code&gt;&lt;/a&gt;. This base font can then be used with the &lt;code&gt;deriveFont&lt;/code&gt; methods in this class to derive new &lt;code&gt;Font&lt;/code&gt; objects with varying sizes, styles, transforms and font features.</source>
          <target state="translated">&quot;적어도 하나&quot;라는 조건은 스트림이 단일 OpenType / TrueType 글꼴을 나타낼 수 있도록합니다. 즉, 컬렉션 일 필요는 없습니다. 반환 된 배열의 각 &lt;code&gt;Font&lt;/code&gt; 요소는 포인트 크기 1 및 스타일 &lt;a href=&quot;#PLAIN&quot;&gt; &lt;code&gt;PLAIN&lt;/code&gt; 으로 생성&lt;/a&gt; 됩니다. 그런 다음이 기본 글꼴 을이 클래스 의 &lt;code&gt;deriveFont&lt;/code&gt; 메서드 와 함께 사용 하여 다양한 크기, 스타일, 변형 및 글꼴 기능을 가진 새 &lt;code&gt;Font&lt;/code&gt; 객체 를 파생 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="695bcb81bf8921f2b489db3866dc5c4b73eb01e2" translate="yes" xml:space="preserve">
          <source>The conditional constructs &lt;code&gt;(?(&lt;/code&gt;</source>
          <target state="translated">조건부 구성 &lt;code&gt;(?(&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="864572f9bec4f019a74cbad9ef31289d70008785" translate="yes" xml:space="preserve">
          <source>The configuration entry for &lt;code&gt;Krb5LoginModule&lt;/code&gt; has several options that control the authentication process and additions to the &lt;code&gt;Subject&lt;/code&gt;'s private credential set. Irrespective of these options, the &lt;code&gt;Subject&lt;/code&gt;'s principal set and private credentials set are updated only when &lt;code&gt;commit&lt;/code&gt; is called. When &lt;code&gt;commit&lt;/code&gt; is called, the &lt;code&gt;KerberosPrincipal&lt;/code&gt; is added to the &lt;code&gt;Subject&lt;/code&gt;'s principal set (unless the &lt;code&gt;principal&lt;/code&gt; is specified as &quot;*&quot;). If &lt;code&gt;isInitiator&lt;/code&gt; is true, the &lt;code&gt;KerberosTicket&lt;/code&gt; is added to the &lt;code&gt;Subject&lt;/code&gt;'s private credentials.</source>
          <target state="translated">&lt;code&gt;Krb5LoginModule&lt;/code&gt; 의 구성 항목 에는 인증 프로세스를 제어하는 ​​여러 옵션과 &lt;code&gt;Subject&lt;/code&gt; 의 개인 자격 증명 집합 에 대한 추가가 있습니다. 이러한 옵션에 관계없이 &lt;code&gt;Subject&lt;/code&gt; 의 주체 집합 및 개인 자격 증명 집합은 &lt;code&gt;commit&lt;/code&gt; 이 호출 될 때만 업데이트됩니다 . 때 &lt;code&gt;commit&lt;/code&gt; 이라고는 &lt;code&gt;KerberosPrincipal&lt;/code&gt; 를이 받는 추가 &lt;code&gt;Subject&lt;/code&gt; 합니다 (하지 않는 한 '주요 설정을 s의 &lt;code&gt;principal&lt;/code&gt; &quot;*&quot;로 지정됩니다). 경우 &lt;code&gt;isInitiator&lt;/code&gt; 이 사실은 &lt;code&gt;KerberosTicket&lt;/code&gt; 를이 받는 추가 &lt;code&gt;Subject&lt;/code&gt; 의 비공개 자격.</target>
        </trans-unit>
        <trans-unit id="8f9289d113f06c7752017512ddee95d8472dadf4" translate="yes" xml:space="preserve">
          <source>The configuration files and their corresponding implementation classes must be accessible to the calling thread's context class loader.</source>
          <target state="translated">구성 파일 및 해당 구현 클래스는 호출 스레드의 컨텍스트 클래스 로더에 액세스 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="67915cac37b5ed3df9143b84fd02ccd029e4fef0" translate="yes" xml:space="preserve">
          <source>The configuration for this layer</source>
          <target state="translated">이 레이어의 구성</target>
        </trans-unit>
        <trans-unit id="0f361888b109e8c913f00ae10a06fe242e04b593" translate="yes" xml:space="preserve">
          <source>The configuration properties are the same as those specified on the command line when starting the JMX management agent. In the same way as on the command line, you need to specify at least the &lt;code&gt;com.sun.management.jmxremote.port&lt;/code&gt; property.</source>
          <target state="translated">구성 속성은 JMX 관리 에이전트를 시작할 때 명령 줄에 지정된 속성과 동일합니다. 명령 줄에서와 같은 방법으로 최소한 &lt;code&gt;com.sun.management.jmxremote.port&lt;/code&gt; 등록 정보 를 지정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="ee1d4244258a7844f4caf65bc867fdf0a05186e8" translate="yes" xml:space="preserve">
          <source>The configuration syntax supported by this implementation is exactly that syntax specified in the &lt;code&gt;javax.security.auth.login.Configuration&lt;/code&gt; class. In addition, the security property</source>
          <target state="translated">이 구현에서 지원하는 구성 구문은 정확히 &lt;code&gt;javax.security.auth.login.Configuration&lt;/code&gt; 클래스에 지정된 구문 입니다. 또한 보안 속성</target>
        </trans-unit>
        <trans-unit id="7cf1b97986252f8182b0494aee4713a2ba71b725" translate="yes" xml:space="preserve">
          <source>The configuration that is the result of resolving the given root modules</source>
          <target state="translated">주어진 루트 모듈을 해결 한 결과 인 구성</target>
        </trans-unit>
        <trans-unit id="460b076b9564463bd67cc2aa7ccd2428240d42e4" translate="yes" xml:space="preserve">
          <source>The configuration that is the result of resolving, with service binding, the given root modules</source>
          <target state="translated">서비스 바인딩을 통해 지정된 루트 모듈을 확인한 결과 인 구성</target>
        </trans-unit>
        <trans-unit id="87ddf802905b04393ef126f10b00b5349dee42e7" translate="yes" xml:space="preserve">
          <source>The configuration that this resolved module is in</source>
          <target state="translated">이 해결 된 모듈이있는 구성</target>
        </trans-unit>
        <trans-unit id="cd4ed8e3b11b7499b708bf5b280daf2c93be9437" translate="yes" xml:space="preserve">
          <source>The configuration used when &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; is invoked.</source>
          <target state="translated">&lt;code&gt;Document.normalizeDocument()&lt;/code&gt; 가 호출 될 때 사용되는 구성 입니다.</target>
        </trans-unit>
        <trans-unit id="0bd8196d8a21097374666c4e69a129e9d0dc940d" translate="yes" xml:space="preserve">
          <source>The conjunction of the two arguments. The returned object will be serialized as an instance of the non-public class  javax.management.AndQueryExp.</source>
          <target state="translated">두 논쟁의 결합. 리턴 된 오브젝트는 비 공용 클래스 javax.management.AndQueryExp의 인스턴스로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="df8419feaf868f19c89f57a3cf0c6c1df8342b7a" translate="yes" xml:space="preserve">
          <source>The conjunction of the two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.AndQueryExp&quot;&gt; javax.management.AndQueryExp&lt;/a&gt;.</source>
          <target state="translated">두 인수의 결합입니다. 반환 된 객체는 비공개 클래스 &lt;a href=&quot;../../serialized-form#javax.management.AndQueryExp&quot;&gt;javax.management.AndQueryExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="36d26c2086aadd05ddc1b475df185a2e95367672" translate="yes" xml:space="preserve">
          <source>The conjunction of the two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.AndQueryExp&quot;&gt; javax.management.AndQueryExp&lt;/a&gt;.</source>
          <target state="translated">두 인수의 결합입니다. 반환 된 객체는 비공개 클래스 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.AndQueryExp&quot;&gt;javax.management.AndQueryExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="fb86bc8294f16c5649875c6782a7b1a216e845cc" translate="yes" xml:space="preserve">
          <source>The connection ID to which this notification pertains.</source>
          <target state="translated">이 알림과 관련된 연결 ID입니다.</target>
        </trans-unit>
        <trans-unit id="d133592537232391e49c8a161e6fd29e1470e177" translate="yes" xml:space="preserve">
          <source>The connection has been successfully established.</source>
          <target state="translated">연결이 성공적으로 설정되었습니다.</target>
        </trans-unit>
        <trans-unit id="88ca935c245d1f103b12a553ae7266a7280ce26e" translate="yes" xml:space="preserve">
          <source>The connection is being attempted.</source>
          <target state="translated">연결을 시도하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f1333f703284ac3447568cf04dfa131b985aa2e" translate="yes" xml:space="preserve">
          <source>The connection marked as closed</source>
          <target state="translated">닫힌 것으로 표시된 연결</target>
        </trans-unit>
        <trans-unit id="77a8462c229d42343c33ea746d63cf832a294cb2" translate="yes" xml:space="preserve">
          <source>The connection object is created by invoking the &lt;a href=&quot;url#openConnection()&quot;&gt;&lt;code&gt;openConnection&lt;/code&gt;&lt;/a&gt; method on a URL.</source>
          <target state="translated">연결 개체는 URL 에서 &lt;a href=&quot;url#openConnection()&quot;&gt; &lt;code&gt;openConnection&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="f8ff508fdc1ac8bc4959ca20489757c5f0a674de" translate="yes" xml:space="preserve">
          <source>The connection object is created by invoking the &lt;code&gt;openConnection&lt;/code&gt; method on a URL.</source>
          <target state="translated">연결 오브젝트는 URL 에서 &lt;code&gt;openConnection&lt;/code&gt; 메소드를 호출하여 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="6b706255d25f867144ee0aea048db9671e2656fd" translate="yes" xml:space="preserve">
          <source>The connection pool caches &lt;code&gt;PooledConnection&lt;/code&gt; objects</source>
          <target state="translated">연결 풀은 &lt;code&gt;PooledConnection&lt;/code&gt; 개체를 캐시 합니다.</target>
        </trans-unit>
        <trans-unit id="8b2513222bb14fcd13a9a5198558492e851f386e" translate="yes" xml:space="preserve">
          <source>The connection pool manager, a facility in the middle tier of a three-tier architecture, uses these classes and interfaces behind the scenes. When a &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; object is called on to create a &lt;code&gt;PooledConnection&lt;/code&gt; object, the connection pool manager will register as a &lt;code&gt;ConnectionEventListener&lt;/code&gt; object with the new &lt;code&gt;PooledConnection&lt;/code&gt; object. When the connection is closed or there is an error, the connection pool manager (being a listener) gets a notification that includes a &lt;code&gt;ConnectionEvent&lt;/code&gt; object.</source>
          <target state="translated">3 계층 아키텍처의 중간 계층에있는 시설 인 연결 풀 관리자는 이러한 클래스와 인터페이스를 배후에서 사용합니다. 시 &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; 객체가 생성에 호출 &lt;code&gt;PooledConnection&lt;/code&gt; 객체를 연결 풀 관리자는로 등록합니다 &lt;code&gt;ConnectionEventListener&lt;/code&gt; 새와 목적 &lt;code&gt;PooledConnection&lt;/code&gt; 객체입니다. 연결이 닫히거나 오류가있는 경우 연결 풀 관리자 (리스너)는 &lt;code&gt;ConnectionEvent&lt;/code&gt; 객체 를 포함하는 알림을받습니다 .</target>
        </trans-unit>
        <trans-unit id="05f67c24a463f860503de09a41c8bd605d5134fa" translate="yes" xml:space="preserve">
          <source>The connection pool manager, typically the application server, maintains a pool of &lt;code&gt;PooledConnection&lt;/code&gt; objects. If there is a &lt;code&gt;PooledConnection&lt;/code&gt; object available in the pool, the connection pool manager returns a &lt;code&gt;Connection&lt;/code&gt; object that is a handle to that physical connection. If no &lt;code&gt;PooledConnection&lt;/code&gt; object is available, the connection pool manager calls the &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; method &lt;code&gt;getPoolConnection&lt;/code&gt; to create a new physical connection. The JDBC driver implementing &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; creates a new &lt;code&gt;PooledConnection&lt;/code&gt; object and returns a handle to it.</source>
          <target state="translated">일반적으로 응용 프로그램 서버 인 연결 풀 관리자는 &lt;code&gt;PooledConnection&lt;/code&gt; 개체 의 풀을 유지 합니다. 풀에서 사용 가능한 &lt;code&gt;PooledConnection&lt;/code&gt; 개체 가있는 경우 연결 풀 관리자는 해당 물리적 ​​연결에 대한 핸들 인 &lt;code&gt;Connection&lt;/code&gt; 개체를 반환 합니다. &lt;code&gt;PooledConnection&lt;/code&gt; 객체를 사용할 수 없는 경우 연결 풀 관리자는 &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; 메서드 &lt;code&gt;getPoolConnection&lt;/code&gt; 을 호출하여 새 물리적 연결을 만듭니다. &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; 를 구현하는 JDBC 드라이버 는 새 &lt;code&gt;PooledConnection&lt;/code&gt; 객체를 만들고 이에 대한 핸들을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4bf3f0b24f5fc2578f012d12e58c3560045b0a7b" translate="yes" xml:space="preserve">
          <source>The connection to the JAR file URL, if the connection has been initiated.</source>
          <target state="translated">연결이 시작된 경우 JAR 파일 URL에 대한 연결입니다.</target>
        </trans-unit>
        <trans-unit id="c2f7f112153c54fb4cda2b130cddc1d8821a798f" translate="yes" xml:space="preserve">
          <source>The connection to the JAR file URL, if the connection has been initiated. This should be set by connect.</source>
          <target state="translated">연결이 시작된 경우 JAR 파일 URL에 대한 연결 연결로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="2fdbc77cf21a62029729ae4d767690b0796a4208" translate="yes" xml:space="preserve">
          <source>The connector server will generate an &lt;code&gt;RMIServerImpl&lt;/code&gt; based on the protocol (&lt;code&gt;rmi&lt;/code&gt; or &lt;code&gt;iiop&lt;/code&gt;) and, for &lt;code&gt;rmi&lt;/code&gt;, the &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; if any. When the connector server is started, it will derive a stub from this object using its &lt;a href=&quot;rmiserverimpl#toStub--&quot;&gt;&lt;code&gt;toStub&lt;/code&gt;&lt;/a&gt; method and store the object using the given &lt;code&gt;&lt;em&gt;jndi-name&lt;/em&gt;&lt;/code&gt;. The properties defined by the JNDI API are consulted as usual.</source>
          <target state="translated">커넥터 서버가 생성 &lt;code&gt;RMIServerImpl&lt;/code&gt; 프로토콜 (에 기초 &lt;code&gt;rmi&lt;/code&gt; 또는 &lt;code&gt;iiop&lt;/code&gt; 용) 및 &lt;code&gt;rmi&lt;/code&gt; 의 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 가있는 경우. 커넥터 서버가 시작되면 &lt;a href=&quot;rmiserverimpl#toStub--&quot;&gt; &lt;code&gt;toStub&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여이 오브젝트에서 스텁을 파생 시키고 주어진 &lt;code&gt;&lt;em&gt;jndi-name&lt;/em&gt;&lt;/code&gt; 을 사용하여 오브젝트를 저장합니다 . JNDI API에 의해 정의 된 특성은 평소와 같이 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="597a246dc02ad6af93aee81a400210fcabff15c5" translate="yes" xml:space="preserve">
          <source>The connector server will generate an &lt;code&gt;RMIServerImpl&lt;/code&gt; based on the protocol (&lt;code&gt;rmi&lt;/code&gt;) and the &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; if any. When the connector server is started, it will derive a stub from this object using its &lt;a href=&quot;rmiserverimpl#toStub()&quot;&gt;&lt;code&gt;toStub&lt;/code&gt;&lt;/a&gt; method and store the object using the given &lt;code&gt;&lt;em&gt;jndi-name&lt;/em&gt;&lt;/code&gt;. The properties defined by the JNDI API are consulted as usual.</source>
          <target state="translated">커넥터 서버는 프로토콜 ( &lt;code&gt;rmi&lt;/code&gt; ) 및 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 경우 )를 기반으로 &lt;code&gt;RMIServerImpl&lt;/code&gt; 을 생성 합니다. 커넥터 서버가 시작되면 &lt;a href=&quot;rmiserverimpl#toStub()&quot;&gt; &lt;code&gt;toStub&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여이 객체에서 스텁을 파생 하고 주어진 &lt;code&gt;&lt;em&gt;jndi-name&lt;/em&gt;&lt;/code&gt; 을 사용하여 객체를 저장합니다 . JNDI API에 의해 정의 된 속성은 평소와 같이 참조됩니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b557d6073d16ff792945a0c2052af16e98787fde" translate="yes" xml:space="preserve">
          <source>The connector uses the given argument map in attaching the application. These arguments will include addressing information that identifies the VM. The argument map associates argument name strings to instances of &lt;a href=&quot;connector.argument&quot;&gt;&lt;code&gt;Connector.Argument&lt;/code&gt;&lt;/a&gt;. The default argument map for a connector can be obtained through &lt;a href=&quot;connector#defaultArguments()&quot;&gt;&lt;code&gt;Connector.defaultArguments()&lt;/code&gt;&lt;/a&gt;. Argument map values can be changed, but map entries should not be added or deleted.</source>
          <target state="translated">커넥터는 애플리케이션을 연결할 때 지정된 인수 맵을 사용합니다. 이러한 인수에는 VM을 식별하는 주소 지정 정보가 포함됩니다. 인수 맵은 인수 이름 문자열을 &lt;a href=&quot;connector.argument&quot;&gt; &lt;code&gt;Connector.Argument&lt;/code&gt; &lt;/a&gt; 인스턴스에 연결 합니다. 커넥터의 기본 인수 맵은 &lt;a href=&quot;connector#defaultArguments()&quot;&gt; &lt;code&gt;Connector.defaultArguments()&lt;/code&gt; &lt;/a&gt; 를 통해 얻을 수 있습니다 . 인수 맵 값은 변경할 수 있지만 맵 항목을 추가하거나 삭제하면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="9dd5ae6d1e3cade50eb6caf2c268a1278764c4fb" translate="yes" xml:space="preserve">
          <source>The console-read methods return &lt;code&gt;null&lt;/code&gt; when the end of the console input stream is reached, for example by typing control-D on Unix or control-Z on Windows. Subsequent read operations will succeed if additional characters are later entered on the console's input device.</source>
          <target state="translated">콘솔 입력 스트림의 끝에 도달하면 콘솔 읽기 메소드는 &lt;code&gt;null&lt;/code&gt; 리턴 합니다 (예 : Unix에서 control-D를 입력하거나 Windows에서 control-Z를 입력). 나중에 콘솔의 입력 장치에 추가 문자를 입력하면 후속 읽기 작업이 성공합니다.</target>
        </trans-unit>
        <trans-unit id="bbceea72f03400ac03f5cf54635d41e749e41beb" translate="yes" xml:space="preserve">
          <source>The constant &lt;a href=&quot;#TYPE_USE&quot;&gt;&lt;code&gt;TYPE_USE&lt;/code&gt;&lt;/a&gt; corresponds to the type contexts in JLS 4.11, as well as to two declaration contexts: type declarations (including annotation type declarations) and type parameter declarations.</source>
          <target state="translated">상수 &lt;a href=&quot;#TYPE_USE&quot;&gt; &lt;code&gt;TYPE_USE&lt;/code&gt; &lt;/a&gt; 는 JLS 4.11의 유형 컨텍스트와 유형 선언 (주석 유형 선언 포함) 및 유형 매개 변수 선언의 두 선언 컨텍스트에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="bf3c6b7bb1907894e51344d6616a6e7cb10386dc" translate="yes" xml:space="preserve">
          <source>The constant &lt;a href=&quot;elementtype#TYPE_USE&quot;&gt;&lt;code&gt;TYPE_USE&lt;/code&gt;&lt;/a&gt; corresponds to the 15 type contexts in JLS 4.11, as well as to two declaration contexts: type declarations (including annotation type declarations) and type parameter declarations.</source>
          <target state="translated">상수 &lt;a href=&quot;elementtype#TYPE_USE&quot;&gt; &lt;code&gt;TYPE_USE&lt;/code&gt; &lt;/a&gt; 는 JLS 4.11의 15 가지 유형 컨텍스트와 유형 선언 (주석 유형 선언 포함) 및 유형 매개 변수 선언과 같은 두 가지 선언 컨텍스트에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="a9849d91e204ee300c9a505f6ac5aae8791e465f" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language that identifies the generic SQL value &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 값 &lt;code&gt;NULL&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수입니다 .</target>
        </trans-unit>
        <trans-unit id="4a2baf97c4a8212ee0c2130a4eac22ba4871c97a" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language that indicates that the SQL type is database-specific and gets mapped to a Java object that can be accessed via the methods &lt;code&gt;getObject&lt;/code&gt; and &lt;code&gt;setObject&lt;/code&gt;.</source>
          <target state="translated">SQL 유형이 데이터베이스에 따라 &lt;code&gt;setObject&lt;/code&gt; &lt;code&gt;getObject&lt;/code&gt; 및 setObject 메소드를 통해 액세스 할 수있는 Java 객체에 매핑됨을 나타내는 Java 프로그래밍 언어의 상수입니다 .</target>
        </trans-unit>
        <trans-unit id="e9b34b17b9fadcdab08ee0a67c1c58f5c1d67b99" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;ARRAY&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;ARRAY&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="efd5d93e142e2167fe9c9f1900126b23d13a6435" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;BIGINT&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;BIGINT&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="6aabb2d467b4a4fb56551c5a3a6b5dbacd2362fe" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;BINARY&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;BINARY&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="4610b2dcb887998d571fb7b3badc63fe134e81a6" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;BIT&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;BIT&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="8bdfffe4be538ee2a4c0c9f7043ccd5fb19d21eb" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;BLOB&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;BLOB&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="63436c20c1c5a1b8ba2d6cf0e69e94dffeca9ffb" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;BOOLEAN&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;BOOLEAN&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="131f315071e884813376644ebcffc1638878155c" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;CHAR&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;CHAR&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="08948cf88f5959eb4650f96302135816effba259" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;CLOB&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;CLOB&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="2c801ff0b2b9bbd717c9c47504d9aaadd81206cb" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;DATALINK&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;DATALINK&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="87009228d84461f533423c0551908ae99a774058" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;DATE&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;DATE&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="a7f6f88f97e7b4a3d1310d66ba86013f71b38e6f" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;DECIMAL&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;DECIMAL&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="70c178e69ab1081be7d66dfb7d0480ccacc9ee89" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;DISTINCT&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;DISTINCT&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="df790144e14be5e5dc5b5bbadd577b0e46864fb2" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;DOUBLE&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;DOUBLE&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="e7ce1652610d1e801fd0d7c3b5bf92660f9dd0c1" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;FLOAT&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;FLOAT&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="fedc3c1c37b0fc8b48afd8fcdbe32cdf000fe97f" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;INTEGER&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;INTEGER&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="7e02d0ce8a4f06c97628c40061f186f1c74ab284" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;JAVA_OBJECT&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;JAVA_OBJECT&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="fc1fe159924fa984d54bf27e151d848f1fedcf3b" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;LONGNVARCHAR&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;LONGNVARCHAR&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="13b4d954fbab9bb37ce708d2bd9ee16d97fcb3ca" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;LONGVARBINARY&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;LONGVARBINARY&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="05a59f5558ab08aae4f7b11f7868590637f7dfba" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;LONGVARCHAR&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;LONGVARCHAR&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="02de06597adff96858bb3c1af129679230494a59" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;NCHAR&lt;/code&gt;</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;NCHAR&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함)</target>
        </trans-unit>
        <trans-unit id="e47a9be0e85e54c324177811aa47af5d83f5c82a" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;NCLOB&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;NCLOB&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="d715a7573195bb84903b60e4f39038f0ba1078cf" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;NUMERIC&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;NUMERIC&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="985dc7b26354c3b6e28bf3548bc9f547cfa593ac" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;NVARCHAR&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;NVARCHAR&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="63a9960427d7d4deeea4c62d55aa787679ff7ac7" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;REAL&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;REAL&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="72ba4a3927cd6ebdf674609af3227b323ddf1c67" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;REF CURSOR&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;REF CURSOR&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="2f829ef54e8127993158d9916ec759e970d686f0" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;REF&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;REF&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="6c2f8da00f54808618ee1a654687c7c4bdbdc9ad" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;ROWID&lt;/code&gt;</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;ROWID&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함)</target>
        </trans-unit>
        <trans-unit id="540844afe7db33f8bdcc3c0a7c8198fb17c890dc" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;SMALLINT&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;SMALLINT&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="4f87ed83e0c15393c32fd3a7dbb7f959726057cf" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;STRUCT&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;STRUCT&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="60bab42f3f50297acd1ceed97962f6a7bff20366" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;TIME WITH TIMEZONE&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;TIME WITH TIMEZONE&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="c172a9e9f1dfa3cc55f26397955cb600145972e6" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;TIME&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;TIME&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="d9225cab1ea49f895cb19ccd4468750c6b47fd9e" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;TIMESTAMP WITH TIMEZONE&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;TIMESTAMP WITH TIMEZONE&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="8e3220b9d58eaff4ce20a24877336d2b81e1ded7" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;TIMESTAMP&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;TIMESTAMP&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="8c5082a5b254a81634234f10520e7621d0280408" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;TINYINT&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;TINYINT&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="3d0750f7b1e673a8254ffc0f9b5e8bd1cd1915f2" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;VARBINARY&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;VARBINARY&lt;/code&gt; 를 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="69fc1628f409fe4954b0e0a40b89721b061e9c05" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;VARCHAR&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;VARCHAR&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="a1c62a47d53ffa764ef0ad0e464193511951617a" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;XML&lt;/code&gt;.</source>
          <target state="translated">일반 SQL 유형 &lt;code&gt;XML&lt;/code&gt; 을 식별하는 Java 프로그래밍 언어의 상수 (유형 코드라고도 함) .</target>
        </trans-unit>
        <trans-unit id="8b40d38576f45830376617cb3e28d171f6c44522" translate="yes" xml:space="preserve">
          <source>The constant indicated by &lt;code&gt;this_class&lt;/code&gt; is permitted to specify a name that includes a single &lt;code&gt;&quot;.&quot;&lt;/code&gt; character, even though this is not a valid binary class or interface name in internal form.</source>
          <target state="translated">&lt;code&gt;this_class&lt;/code&gt; 로 표시된 상수는 단일 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 를 포함하는 이름을 지정할 수 있습니다 . 이진 클래스 또는 내부 형식의 인터페이스 이름이 아니더라도 문자입니다.</target>
        </trans-unit>
        <trans-unit id="c2386d7ab05423670d391f9dafbed5c40430742c" translate="yes" xml:space="preserve">
          <source>The constant indicating that a batch statement executed successfully but that no count of the number of rows it affected is available.</source>
          <target state="translated">일괄 처리 문이 성공적으로 실행되었지만 영향을받은 행 수를 사용할 수 없음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="e4e5b2475b435594a8df4aef9b03809b0309c536" translate="yes" xml:space="preserve">
          <source>The constant indicating that a column allows &lt;code&gt;NULL&lt;/code&gt; values.</source>
          <target state="translated">열이 &lt;code&gt;NULL&lt;/code&gt; 값을 허용 함을 나타내는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="b08604a64723930d2c059b0b25d5e9144ac0d5c5" translate="yes" xml:space="preserve">
          <source>The constant indicating that a column does not allow &lt;code&gt;NULL&lt;/code&gt; values.</source>
          <target state="translated">열이 &lt;code&gt;NULL&lt;/code&gt; 값을 허용하지 않음을 나타내는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="13366f0d0a238bcd6cf99ccc80f7022f7ffa47a2" translate="yes" xml:space="preserve">
          <source>The constant indicating that a parameter will allow &lt;code&gt;NULL&lt;/code&gt; values.</source>
          <target state="translated">매개 변수가 &lt;code&gt;NULL&lt;/code&gt; 값 을 허용 함을 나타내는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="31a26baf1979336d68c4adec486c6b2bedd1b311" translate="yes" xml:space="preserve">
          <source>The constant indicating that a parameter will not allow &lt;code&gt;NULL&lt;/code&gt; values.</source>
          <target state="translated">매개 변수가 &lt;code&gt;NULL&lt;/code&gt; 값을 허용하지 않음을 나타내는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="6c4030c13ecd838d1005c9b9485bcf5352fa94c4" translate="yes" xml:space="preserve">
          <source>The constant indicating that all &lt;code&gt;ResultSet&lt;/code&gt; objects that have previously been kept open should be closed when calling &lt;code&gt;getMoreResults&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getMoreResults&lt;/code&gt; 를 호출 할 때 이전에 열린 상태로 유지되었던 모든 &lt;code&gt;ResultSet&lt;/code&gt; 객체를 닫아야 함을 나타내는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="c16afd5e570b2d16ebe611dd39624026462ab2a9" translate="yes" xml:space="preserve">
          <source>The constant indicating that an error occurred while executing a batch statement.</source>
          <target state="translated">배치 문을 실행하는 동안 오류가 발생했음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="bfcb6c49e3f6502fec85f91521cc72c8b06021ea" translate="yes" xml:space="preserve">
          <source>The constant indicating that generated keys should be made available for retrieval.</source>
          <target state="translated">생성 된 키를 검색에 사용할 수 있어야 함을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="6d0317879c06502bf1865bdfc1f5b1c6635057c0" translate="yes" xml:space="preserve">
          <source>The constant indicating that generated keys should not be made available for retrieval.</source>
          <target state="translated">생성 된 키를 검색에 사용할 수 없음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="d7482cb325c00ab3e0c7c6e798308f7f353ada58" translate="yes" xml:space="preserve">
          <source>The constant indicating that open &lt;code&gt;ResultSet&lt;/code&gt; objects with this holdability will be closed when the current transaction is committed.</source>
          <target state="translated">이 유지 가능성이있는 열린 &lt;code&gt;ResultSet&lt;/code&gt; 오브젝트가 현재 트랜잭션이 커미트 될 때 닫힘을 나타내는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="c5226b746936fc27ed6fb4d893e8037021959276" translate="yes" xml:space="preserve">
          <source>The constant indicating that open &lt;code&gt;ResultSet&lt;/code&gt; objects with this holdability will remain open when the current transaction is committed.</source>
          <target state="translated">이 유지 가능성이 있는 열린 &lt;code&gt;ResultSet&lt;/code&gt; 오브젝트가 현재 트랜잭션이 커미트 될 때 열린 상태로 유지됨을 나타내는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="04bc781319fbf605c931394e0d1a8d7692c13a51" translate="yes" xml:space="preserve">
          <source>The constant indicating that the current &lt;code&gt;ResultSet&lt;/code&gt; object should be closed when calling &lt;code&gt;getMoreResults&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getMoreResults&lt;/code&gt; 를 호출 할 때 현재 &lt;code&gt;ResultSet&lt;/code&gt; 객체를 닫아야 함을 나타내는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="385a7b3d0ac10f92d3820ff91e45eac12f92e48b" translate="yes" xml:space="preserve">
          <source>The constant indicating that the current &lt;code&gt;ResultSet&lt;/code&gt; object should not be closed when calling &lt;code&gt;getMoreResults&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getMoreResults&lt;/code&gt; 를 호출 할 때 현재 &lt;code&gt;ResultSet&lt;/code&gt; 객체를 닫지 않아야 함을 나타내는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="c74dfb5f942b323b600e7efb019f04c8250b5554" translate="yes" xml:space="preserve">
          <source>The constant indicating that the mode of the parameter is unknown.</source>
          <target state="translated">매개 변수 모드를 알 수 없음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="13e89c11658c6b1e65c6bebedaf92e6a66653dc9" translate="yes" xml:space="preserve">
          <source>The constant indicating that the nullability of a column's values is unknown.</source>
          <target state="translated">열 값의 Null 허용 여부를 알 수 없음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="bf3206cce57b1307df9075db2972b9f35f54a25c" translate="yes" xml:space="preserve">
          <source>The constant indicating that the nullability of a parameter is unknown.</source>
          <target state="translated">매개 변수의 널 허용 여부를 알 수 없음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="b47f5fc7e5273e8a0dbc406316e899d5169ce0bb" translate="yes" xml:space="preserve">
          <source>The constant indicating that the order in which rows in a result set will be processed is unknown.</source>
          <target state="translated">결과 집합의 행이 처리되는 순서를 알 수 없음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="3a050840ccdc7f361e9e9fd7cd7d9f334b5a887c" translate="yes" xml:space="preserve">
          <source>The constant indicating that the order in which rows in a result set will be processed is unknown. This constant is used by the method &lt;code&gt;setFetchDirection&lt;/code&gt; as a hint to the driver, which the driver may ignore.</source>
          <target state="translated">결과 집합의 행이 처리되는 순서를 알 수 없음을 나타내는 상수입니다. 이 상수는 &lt;code&gt;setFetchDirection&lt;/code&gt; 메소드에서 드라이버 에 대한 힌트로 사용되며 드라이버가 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa5ca12a30b4ef820e4c646eb12aad84051c97ea" translate="yes" xml:space="preserve">
          <source>The constant indicating that the parameter's mode is IN.</source>
          <target state="translated">매개 변수의 모드가 IN임을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="e6ac6bf161432ec52b7efdc16c2ec0519d1c7de1" translate="yes" xml:space="preserve">
          <source>The constant indicating that the parameter's mode is INOUT.</source>
          <target state="translated">매개 변수의 모드가 INOUT임을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="6dc63595c2f4fac43ed2940d69c38fe0d5fc1f4d" translate="yes" xml:space="preserve">
          <source>The constant indicating that the parameter's mode is OUT.</source>
          <target state="translated">파라미터 모드가 OUT임을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="d3eb26feac1860a905c279007af0bd3bbdea32f5" translate="yes" xml:space="preserve">
          <source>The constant indicating that the rows in a result set will be processed in a forward direction; first-to-last.</source>
          <target state="translated">결과 집합의 행이 정방향으로 처리됨을 나타내는 상수입니다. 처음부터 마지막까지.</target>
        </trans-unit>
        <trans-unit id="3c94eec7c4cb53c8a248e822eb41d80fa102b157" translate="yes" xml:space="preserve">
          <source>The constant indicating that the rows in a result set will be processed in a forward direction; first-to-last. This constant is used by the method &lt;code&gt;setFetchDirection&lt;/code&gt; as a hint to the driver, which the driver may ignore.</source>
          <target state="translated">결과 집합의 행이 정방향으로 처리됨을 나타내는 상수입니다. 처음부터 마지막까지. 이 상수는 &lt;code&gt;setFetchDirection&lt;/code&gt; 메소드에서 드라이버 에 대한 힌트로 사용되며 드라이버가 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f3f0ed476e52eb33aa41c17c1be12ef7b3827f2" translate="yes" xml:space="preserve">
          <source>The constant indicating that the rows in a result set will be processed in a reverse direction; last-to-first.</source>
          <target state="translated">결과 집합의 행이 역방향으로 처리됨을 나타내는 상수입니다. 마지막에서 처음으로.</target>
        </trans-unit>
        <trans-unit id="dc0eecdee4995564e253db4e49a36415307aa214" translate="yes" xml:space="preserve">
          <source>The constant indicating that the rows in a result set will be processed in a reverse direction; last-to-first. This constant is used by the method &lt;code&gt;setFetchDirection&lt;/code&gt; as a hint to the driver, which the driver may ignore.</source>
          <target state="translated">결과 집합의 행이 역방향으로 처리됨을 나타내는 상수입니다. 마지막에서 처음으로. 이 상수는 &lt;code&gt;setFetchDirection&lt;/code&gt; 메소드에서 드라이버 에 대한 힌트로 사용되며 드라이버가 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c810e92925752768154e4f32141efadd8dc3db0" translate="yes" xml:space="preserve">
          <source>The constant indicating the concurrency mode for a &lt;code&gt;ResultSet&lt;/code&gt; object that may NOT be updated.</source>
          <target state="translated">업데이트되지 않을 수 있는 &lt;code&gt;ResultSet&lt;/code&gt; 개체 의 동시성 모드를 나타내는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="ddadf855e90f8eaacf202ec23a46e944e0622f44" translate="yes" xml:space="preserve">
          <source>The constant indicating the concurrency mode for a &lt;code&gt;ResultSet&lt;/code&gt; object that may be updated.</source>
          <target state="translated">업데이트 할 수 있는 &lt;code&gt;ResultSet&lt;/code&gt; 개체 의 동시성 모드를 나타내는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="9bca282b75c5d2e745de99763077285e3b1192ec" translate="yes" xml:space="preserve">
          <source>The constant indicating the type for a &lt;code&gt;ResultSet&lt;/code&gt; object that is scrollable and generally sensitive to changes to the data that underlies the &lt;code&gt;ResultSet&lt;/code&gt;.</source>
          <target state="translated">스크롤 가능하고 일반적으로 &lt;code&gt;ResultSet&lt;/code&gt; 의 기초가되는 데이터의 변경에 민감한 &lt;code&gt;ResultSet&lt;/code&gt; 오브젝트 의 유형을 나타내는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="8214aedcfde30343d223ee7ebb5cb8e2876a3bf3" translate="yes" xml:space="preserve">
          <source>The constant indicating the type for a &lt;code&gt;ResultSet&lt;/code&gt; object that is scrollable but generally not sensitive to changes to the data that underlies the &lt;code&gt;ResultSet&lt;/code&gt;.</source>
          <target state="translated">스크롤 가능하지만 일반적으로 &lt;code&gt;ResultSet&lt;/code&gt; 의 기초가되는 데이터의 변경 사항에 민감하지 않은 &lt;code&gt;ResultSet&lt;/code&gt; 오브젝트 의 유형을 나타내는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="f437cb3f61575214fea420fa2f64e97ba3cdee67" translate="yes" xml:space="preserve">
          <source>The constant indicating the type for a &lt;code&gt;ResultSet&lt;/code&gt; object whose cursor may move only forward.</source>
          <target state="translated">커서가 앞으로 만 이동할 수 있는 &lt;code&gt;ResultSet&lt;/code&gt; 개체 의 유형을 나타내는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="5c6a9dce79c0b6034323c38e7e9849f0bf6d7091" translate="yes" xml:space="preserve">
          <source>The constant pool may contain constants tagged &lt;code&gt;CONSTANT_Dynamic&lt;/code&gt;, equipped with bootstrap methods which perform their resolution. Such a &lt;em&gt;dynamic constant&lt;/em&gt; is originally in an unresolved state. Before the JVM can use a dynamically-computed constant, it must first be &lt;em&gt;resolved&lt;/em&gt;. Dynamically-computed constant resolution is accomplished by calling a &lt;em&gt;bootstrap method&lt;/em&gt; which is given the static information content of the constant, and which must produce a value of the constant's statically declared type.</source>
          <target state="translated">상수 풀은 &lt;code&gt;CONSTANT_Dynamic&lt;/code&gt; 태그가 붙은 상수를 포함 할 수 있으며 , 해결을 수행하는 부트 스트랩 메서드를 갖추고 있습니다. 이러한 &lt;em&gt;동적 상수&lt;/em&gt; 는 원래 미해결 상태입니다. JVM이 동적으로 계산 된 상수를 사용하려면 먼저 &lt;em&gt;해결&lt;/em&gt; 해야합니다 . 동적으로 계산 된 상수 확인은 상수 의 정적 정보 콘텐츠가 제공되고 상수의 정적으로 선언 된 유형의 값을 생성해야하는 &lt;em&gt;부트 스트랩 메서드&lt;/em&gt; 를 호출하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="84d7a73412c8c00b8128d66b5085f457ec427565" translate="yes" xml:space="preserve">
          <source>The constant value &lt;a href=&quot;#KERNING_ON&quot;&gt;&lt;code&gt;KERNING_ON&lt;/code&gt;&lt;/a&gt; is provided.</source>
          <target state="translated">상수 값 &lt;a href=&quot;#KERNING_ON&quot;&gt; &lt;code&gt;KERNING_ON&lt;/code&gt; &lt;/a&gt; 이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="e4c3623d0d053114984b1dfcb858c757394c800f" translate="yes" xml:space="preserve">
          <source>The constant value &lt;a href=&quot;#LIGATURES_ON&quot;&gt;&lt;code&gt;LIGATURES_ON&lt;/code&gt;&lt;/a&gt; is defined.</source>
          <target state="translated">&lt;a href=&quot;#LIGATURES_ON&quot;&gt; &lt;code&gt;LIGATURES_ON&lt;/code&gt; &lt;/a&gt; 상수 값 이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="ca2ee3b848ad5eb2176a5ea75502cd43e88bc7d5" translate="yes" xml:space="preserve">
          <source>The constant value &lt;a href=&quot;#STRIKETHROUGH_ON&quot;&gt;&lt;code&gt;STRIKETHROUGH_ON&lt;/code&gt;&lt;/a&gt; is provided.</source>
          <target state="translated">상수 값 &lt;a href=&quot;#STRIKETHROUGH_ON&quot;&gt; &lt;code&gt;STRIKETHROUGH_ON&lt;/code&gt; &lt;/a&gt; 이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="23565ccfc19e7d9a7220a6065e7d4ce228dcfe05" translate="yes" xml:space="preserve">
          <source>The constant value &lt;a href=&quot;#SWAP_COLORS_ON&quot;&gt;&lt;code&gt;SWAP_COLORS_ON&lt;/code&gt;&lt;/a&gt; is defined.</source>
          <target state="translated">상수 값 &lt;a href=&quot;#SWAP_COLORS_ON&quot;&gt; &lt;code&gt;SWAP_COLORS_ON&lt;/code&gt; &lt;/a&gt; 이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="098f42948f7cc5d6726df08db4c3f07a94e53e4e" translate="yes" xml:space="preserve">
          <source>The constant value &lt;a href=&quot;#UNDERLINE_ON&quot;&gt;&lt;code&gt;UNDERLINE_ON&lt;/code&gt;&lt;/a&gt; is provided.</source>
          <target state="translated">상수 값 &lt;a href=&quot;#UNDERLINE_ON&quot;&gt; &lt;code&gt;UNDERLINE_ON&lt;/code&gt; &lt;/a&gt; 이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="fd7d21b839d915be854999ae3895c9fc0775c58b" translate="yes" xml:space="preserve">
          <source>The constant value of this field is the largest value of type &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;'\uFFFF'&lt;/code&gt;.</source>
          <target state="translated">이 필드의 정수 값은 입력의 최대 값 인 &lt;code&gt;char&lt;/code&gt; , &lt;code&gt;'\uFFFF'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13a3d4f9e90fafbe487863d61e2c681b40a76e07" translate="yes" xml:space="preserve">
          <source>The constant value of this field is the smallest value of type &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;'\u0000'&lt;/code&gt;.</source>
          <target state="translated">이 필드의 정수 값은 타입의 최소값 인 &lt;code&gt;char&lt;/code&gt; , &lt;code&gt;'\u0000'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60251b00bf4fd5f5ce3ebddb97c3f733d992b028" translate="yes" xml:space="preserve">
          <source>The constant values &lt;a href=&quot;#TRACKING_TIGHT&quot;&gt;&lt;code&gt;TRACKING_TIGHT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#TRACKING_LOOSE&quot;&gt;&lt;code&gt;TRACKING_LOOSE&lt;/code&gt;&lt;/a&gt; are provided.</source>
          <target state="translated">상수 값 &lt;a href=&quot;#TRACKING_TIGHT&quot;&gt; &lt;code&gt;TRACKING_TIGHT&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#TRACKING_LOOSE&quot;&gt; &lt;code&gt;TRACKING_LOOSE&lt;/code&gt; &lt;/a&gt; 가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="a5c3ae86c80c0ffd5751f1bcac0fbdd026305053" translate="yes" xml:space="preserve">
          <source>The constant which defines the length of a DES key in bytes.</source>
          <target state="translated">DES 키의 길이를 바이트 단위로 정의하는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="2c331109070150d080aecfe00c315900d5ffe214" translate="yes" xml:space="preserve">
          <source>The constant which defines the length of a DESede key in bytes.</source>
          <target state="translated">DESede 키의 길이를 바이트 단위로 정의하는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="8a3567f6e124d3231577f51734ce5ae593e4d5d4" translate="yes" xml:space="preserve">
          <source>The constants &lt;a href=&quot;#ANNOTATION_TYPE&quot;&gt;&lt;code&gt;ANNOTATION_TYPE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#CONSTRUCTOR&quot;&gt;&lt;code&gt;CONSTRUCTOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#FIELD&quot;&gt;&lt;code&gt;FIELD&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#LOCAL_VARIABLE&quot;&gt;&lt;code&gt;LOCAL_VARIABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#METHOD&quot;&gt;&lt;code&gt;METHOD&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#PARAMETER&quot;&gt;&lt;code&gt;PARAMETER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#TYPE&quot;&gt;&lt;code&gt;TYPE&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#TYPE_PARAMETER&quot;&gt;&lt;code&gt;TYPE_PARAMETER&lt;/code&gt;&lt;/a&gt; correspond to the declaration contexts in JLS 9.6.4.1.</source>
          <target state="translated">&lt;a href=&quot;#ANNOTATION_TYPE&quot;&gt; &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#CONSTRUCTOR&quot;&gt; &lt;code&gt;CONSTRUCTOR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#FIELD&quot;&gt; &lt;code&gt;FIELD&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#LOCAL_VARIABLE&quot;&gt; &lt;code&gt;LOCAL_VARIABLE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#METHOD&quot;&gt; &lt;code&gt;METHOD&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#PARAMETER&quot;&gt; &lt;code&gt;PARAMETER&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#TYPE&quot;&gt; &lt;code&gt;TYPE&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#TYPE_PARAMETER&quot;&gt; &lt;code&gt;TYPE_PARAMETER&lt;/code&gt; &lt;/a&gt; 상수 는 JLS 9.6.4.1의 선언 컨텍스트에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="923e5f8c7d790243956aee8bd73d5ed48e985525" translate="yes" xml:space="preserve">
          <source>The constants &lt;a href=&quot;#JUSTIFICATION_FULL&quot;&gt;&lt;code&gt;JUSTIFICATION_FULL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#JUSTIFICATION_NONE&quot;&gt;&lt;code&gt;JUSTIFICATION_NONE&lt;/code&gt;&lt;/a&gt; are provided.</source>
          <target state="translated">&lt;a href=&quot;#JUSTIFICATION_FULL&quot;&gt; &lt;code&gt;JUSTIFICATION_FULL&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#JUSTIFICATION_NONE&quot;&gt; &lt;code&gt;JUSTIFICATION_NONE&lt;/code&gt; &lt;/a&gt; 상수 가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="0d18ca5cc6633941b6057f038afb440f473ca161" translate="yes" xml:space="preserve">
          <source>The constants &lt;a href=&quot;#RUN_DIRECTION_RTL&quot;&gt;&lt;code&gt;RUN_DIRECTION_RTL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#RUN_DIRECTION_LTR&quot;&gt;&lt;code&gt;RUN_DIRECTION_LTR&lt;/code&gt;&lt;/a&gt; are provided.</source>
          <target state="translated">상수 &lt;a href=&quot;#RUN_DIRECTION_RTL&quot;&gt; &lt;code&gt;RUN_DIRECTION_RTL&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#RUN_DIRECTION_LTR&quot;&gt; &lt;code&gt;RUN_DIRECTION_LTR&lt;/code&gt; &lt;/a&gt; 이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="e3144d771789e4d26a103912ef85edcf80e38dfe" translate="yes" xml:space="preserve">
          <source>The constants &lt;a href=&quot;elementtype#ANNOTATION_TYPE&quot;&gt;&lt;code&gt;ANNOTATION_TYPE&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#CONSTRUCTOR&quot;&gt;&lt;code&gt;CONSTRUCTOR&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#FIELD&quot;&gt;&lt;code&gt;FIELD&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#LOCAL_VARIABLE&quot;&gt;&lt;code&gt;LOCAL_VARIABLE&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#METHOD&quot;&gt;&lt;code&gt;METHOD&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#PARAMETER&quot;&gt;&lt;code&gt;PARAMETER&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#TYPE&quot;&gt;&lt;code&gt;TYPE&lt;/code&gt;&lt;/a&gt; , and &lt;a href=&quot;elementtype#TYPE_PARAMETER&quot;&gt;&lt;code&gt;TYPE_PARAMETER&lt;/code&gt;&lt;/a&gt; correspond to the declaration contexts in JLS 9.6.4.1.</source>
          <target state="translated">상수 &lt;a href=&quot;elementtype#ANNOTATION_TYPE&quot;&gt; &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementtype#CONSTRUCTOR&quot;&gt; &lt;code&gt;CONSTRUCTOR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementtype#FIELD&quot;&gt; &lt;code&gt;FIELD&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementtype#LOCAL_VARIABLE&quot;&gt; &lt;code&gt;LOCAL_VARIABLE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementtype#METHOD&quot;&gt; &lt;code&gt;METHOD&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementtype#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementtype#PARAMETER&quot;&gt; &lt;code&gt;PARAMETER&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementtype#TYPE&quot;&gt; &lt;code&gt;TYPE&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;elementtype#TYPE_PARAMETER&quot;&gt; &lt;code&gt;TYPE_PARAMETER&lt;/code&gt; &lt;/a&gt; 는 JLS 9.6.4.1의 선언 컨텍스트에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="ab696badae0b7beaf1abeefc926f6fd55883c9d4" translate="yes" xml:space="preserve">
          <source>The constants in this class present a strongly typed enumeration of common object roles. A public constructor for this class has been purposely omitted and applications should use one of the constants from this class. Although this class pre-defines a large list of standard roles, it is extensible so additional, programmer-defined roles can be added in the future without needing to modify the base class.</source>
          <target state="translated">이 클래스의 상수는 일반적인 개체 역할의 강력한 형식 열거를 나타냅니다. 이 클래스의 공용 생성자는 의도적으로 생략되었으며 응용 프로그램은이 클래스의 상수 중 하나를 사용해야합니다. 이 클래스는 표준 역할의 큰 목록을 미리 정의하지만 확장 가능하므로 나중에 기본 클래스를 수정할 필요없이 프로그래머가 정의한 추가 역할을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1bc72d418c9f0b95e1f477df6a36cedab27fbf50" translate="yes" xml:space="preserve">
          <source>The constants in this class present a strongly typed enumeration of common object roles. A public constructor for this class has been purposely omitted and applications should use one of the constants from this class. If the constants in this class are not sufficient to describe the role of an object, a subclass should be generated from this class and it should provide constants in a similar manner.</source>
          <target state="translated">이 클래스의 상수는 일반적인 개체 역할의 강력한 형식 열거를 나타냅니다. 이 클래스의 공용 생성자는 의도적으로 생략되었으며 응용 프로그램은이 클래스의 상수 중 하나를 사용해야합니다. 이 클래스의 상수가 객체의 역할을 설명하기에 충분하지 않은 경우이 클래스에서 하위 클래스를 생성해야하며 유사한 방식으로 상수를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="64dd747eb34d780d39e1cda712ecf83a4b94f4bc" translate="yes" xml:space="preserve">
          <source>The constants in this class present a strongly typed enumeration of common object roles. If the constants in this class are not sufficient to describe the role of an object, a subclass should be generated from this class and it should provide constants in a similar manner.</source>
          <target state="translated">이 클래스의 상수는 일반적인 개체 역할의 강력한 형식 열거를 나타냅니다. 이 클래스의 상수가 객체의 역할을 설명하기에 충분하지 않은 경우이 클래스에서 하위 클래스를 생성해야하며 유사한 방식으로 상수를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="5c6db25e66548268914c017d479808b70cf00b1c" translate="yes" xml:space="preserve">
          <source>The constants of this enumerated type provide a simple classification of the syntactic locations where annotations may appear in a Java program.</source>
          <target state="translated">이 열거 유형의 상수는 주석이 Java 프로그램에 나타날 수있는 구문 위치의 간단한 분류를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="008d84f84709ba1d20ea14026b2e0495beac045f" translate="yes" xml:space="preserve">
          <source>The constants of this enumerated type provide a simple classification of the syntactic locations where annotations may appear in a Java program. These constants are used in &lt;a href=&quot;target&quot;&gt;&lt;code&gt;Target&lt;/code&gt;&lt;/a&gt; meta-annotations to specify where it is legal to write annotations of a given type.</source>
          <target state="translated">이 열거 유형의 상수는 주석이 Java 프로그램에 나타날 수있는 구문 위치의 간단한 분류를 제공합니다. 이러한 상수는 지정된 유형의 주석을 작성할 수있는 위치를 지정하기 위해 &lt;a href=&quot;target&quot;&gt; &lt;code&gt;Target&lt;/code&gt; &lt;/a&gt; 메타 주석에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="feb4cacf066dccc67c2a1e1cd57d17bf146fe670" translate="yes" xml:space="preserve">
          <source>The constants of this enumerated type provide a simple classification of the syntactic locations where annotations may appear in a Java program. These constants are used in &lt;a href=&quot;target&quot;&gt;&lt;code&gt;java.lang.annotation.Target&lt;/code&gt;&lt;/a&gt; meta-annotations to specify where it is legal to write annotations of a given type.</source>
          <target state="translated">이 열거 유형의 상수는 주석이 Java 프로그램에 나타날 수있는 구문 위치의 간단한 분류를 제공합니다. 이 상수는 &lt;a href=&quot;target&quot;&gt; &lt;code&gt;java.lang.annotation.Target&lt;/code&gt; &lt;/a&gt; 메타 주석에서 사용되어 주어진 유형의 주석을 작성하는 것이 적합한 위치를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1ba5b51bbcde9c4b95b98a38c2cb44b2c7b551b5" translate="yes" xml:space="preserve">
          <source>The constants used here are defined in [&lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt;] .</source>
          <target state="translated">여기서 사용되는 상수는 [ &lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt; ]에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8a9e3731d3b267ea8e3fd8453e861846ef7350f" translate="yes" xml:space="preserve">
          <source>The constants used here are defined in [&lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt;].</source>
          <target state="translated">여기서 사용되는 상수는 [ &lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt; ]에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="231f229a15c682b4b2a5dc21131d224047508796" translate="yes" xml:space="preserve">
          <source>The constants used here are defined in [&lt;a href=&quot;https://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt;] .</source>
          <target state="translated">여기에 사용 된 상수는 [ &lt;a href=&quot;https://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt; ]에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="62b4a6b96cedb6cdb07de70f1c8fa98b6abef971" translate="yes" xml:space="preserve">
          <source>The constants used here are defined in [&lt;a href=&quot;https://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt;].</source>
          <target state="translated">여기에 사용 된 상수는 [ &lt;a href=&quot;https://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt; ]에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba3ca4b2e56262c71dbe0a15263e988db1d00eb8" translate="yes" xml:space="preserve">
          <source>The constraint that a matches s. The returned object will be serialized as an instance of the non-public class  javax.management.MatchQueryExp.</source>
          <target state="translated">에 일치하는 제약 조건 리턴 된 오브젝트는 비 공용 클래스 javax.management.MatchQueryExp의 인스턴스로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="0dc78ded7dea94c59386c5d251d615ad75643db7" translate="yes" xml:space="preserve">
          <source>The constraint that a matches s. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.MatchQueryExp&quot;&gt; javax.management.MatchQueryExp&lt;/a&gt;.</source>
          <target state="translated">a가 s와 일치하는 제약 조건입니다. 반환 된 객체는 비 공용 클래스 &lt;a href=&quot;../../serialized-form#javax.management.MatchQueryExp&quot;&gt;javax.management.MatchQueryExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="6ee7aea40c3ed710bfed04f847d82406f6479026" translate="yes" xml:space="preserve">
          <source>The constraint that a matches s. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.MatchQueryExp&quot;&gt; javax.management.MatchQueryExp&lt;/a&gt;.</source>
          <target state="translated">a가 s와 일치하는 제약 조건입니다. 반환 된 객체는 비공개 클래스 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.MatchQueryExp&quot;&gt;javax.management.MatchQueryExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="6d919fe4516cb983d55f9db338ccc9c7dde1f1b9" translate="yes" xml:space="preserve">
          <source>The constraint that v1 lies between v2 and v3. The returned object will be serialized as an instance of the non-public class  javax.management.BetweenQueryExp.</source>
          <target state="translated">v1의 제약 조건은 v2와 v3 사이에 있습니다. 리턴 된 오브젝트는 비 공용 클래스 javax.management.BetweenQueryExp의 인스턴스로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="b90df5090a1bbe4199fe0844363d2a20a96d1513" translate="yes" xml:space="preserve">
          <source>The constraint that v1 lies between v2 and v3. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BetweenQueryExp&quot;&gt; javax.management.BetweenQueryExp&lt;/a&gt;.</source>
          <target state="translated">v1이 v2와 v3 사이에 있다는 제약입니다. 반환 된 객체는 public이 아닌 클래스 &lt;a href=&quot;../../serialized-form#javax.management.BetweenQueryExp&quot;&gt;javax.management.BetweenQueryExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="2c26d2d0e284bd8afc09a8d5d6ff25ef66f29cf7" translate="yes" xml:space="preserve">
          <source>The constraint that v1 lies between v2 and v3. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BetweenQueryExp&quot;&gt; javax.management.BetweenQueryExp&lt;/a&gt;.</source>
          <target state="translated">v1이 v2와 v3 사이에 있다는 제약입니다. 반환 된 객체는 public이 아닌 클래스 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BetweenQueryExp&quot;&gt;javax.management.BetweenQueryExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="02e64359684a178386b52858059552ffc6551516" translate="yes" xml:space="preserve">
          <source>The constraints are defined by the particular layout manager being used. For example, the &lt;code&gt;BorderLayout&lt;/code&gt; class defines five constraints: &lt;code&gt;BorderLayout.NORTH&lt;/code&gt;, &lt;code&gt;BorderLayout.SOUTH&lt;/code&gt;, &lt;code&gt;BorderLayout.EAST&lt;/code&gt;, &lt;code&gt;BorderLayout.WEST&lt;/code&gt;, and &lt;code&gt;BorderLayout.CENTER&lt;/code&gt;.</source>
          <target state="translated">제약 조건은 사용중인 특정 레이아웃 관리자에 의해 정의됩니다. 예를 들어 &lt;code&gt;BorderLayout&lt;/code&gt; 클래스는 &lt;code&gt;BorderLayout.NORTH&lt;/code&gt; , &lt;code&gt;BorderLayout.SOUTH&lt;/code&gt; , &lt;code&gt;BorderLayout.EAST&lt;/code&gt; , &lt;code&gt;BorderLayout.WEST&lt;/code&gt; 및 &lt;code&gt;BorderLayout.CENTER&lt;/code&gt; 의 다섯 가지 제약 조건을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="ce728ee475604b475214c6f958e81f956fe69a08" translate="yes" xml:space="preserve">
          <source>The construction and throw of this exception is embedded in code generated by the JShell core implementation in such a way that, upon executing a &lt;a href=&quot;../snippet.status#RECOVERABLE_DEFINED&quot;&gt;&lt;code&gt;RECOVERABLE_DEFINED&lt;/code&gt;&lt;/a&gt; user method, this exception is thrown.</source>
          <target state="translated">이 예외의 생성 및 throw는 &lt;a href=&quot;../snippet.status#RECOVERABLE_DEFINED&quot;&gt; &lt;code&gt;RECOVERABLE_DEFINED&lt;/code&gt; &lt;/a&gt; 사용자 메서드 를 실행할 때이 예외가 throw 되는 방식으로 JShell 핵심 구현에 의해 생성 된 코드에 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="3d680dfab2d7cf7f3941527a50827dfaf79d9cb1" translate="yes" xml:space="preserve">
          <source>The constructor checks that all the constraints listed below for each parameter are satisfied, and throws the appropriate exception if they are not.</source>
          <target state="translated">생성자는 각 매개 변수에 대해 아래에 나열된 모든 제한 조건이 충족되는지 확인하고 해당되지 않는 경우 적절한 예외를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="d9e2554056245c482985e2824f96d7f07d4107f6" translate="yes" xml:space="preserve">
          <source>The constructor does nothing.</source>
          <target state="translated">생성자는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e5cd3d79bf2bb3af2291728bef40e188974573c5" translate="yes" xml:space="preserve">
          <source>The constructor for &lt;code&gt;ActivationID&lt;/code&gt; takes a single argument, activator, that specifies a remote reference to the activator responsible for activating the object associated with this identifier.</source>
          <target state="translated">&lt;code&gt;ActivationID&lt;/code&gt; 의 생성자는 이 식별자와 연결된 개체를 활성화하는 활성 자에 대한 원격 참조를 지정하는 단일 인수 activator를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f315c66ee9bc0baa5f0d43eca37d2fcad1edb9d8" translate="yes" xml:space="preserve">
          <source>The constructor for &lt;code&gt;ActivationID&lt;/code&gt; takes a single argument, activator, that specifies a remote reference to the activator responsible for activating the object associated with this identifier. An instance of &lt;code&gt;ActivationID&lt;/code&gt; is globally unique.</source>
          <target state="translated">&lt;code&gt;ActivationID&lt;/code&gt; 의 생성자는 이 식별자와 연결된 개체를 활성화하는 활성 자에 대한 원격 참조를 지정하는 단일 인수 activator를 사용합니다. &lt;code&gt;ActivationID&lt;/code&gt; 의 인스턴스 는 전역 적으로 고유합니다.</target>
        </trans-unit>
        <trans-unit id="b0815ab8cb5067b6921bc917cf277069e52d0c8d" translate="yes" xml:space="preserve">
          <source>The constructor for this class accepts an optional &lt;em&gt;fairness&lt;/em&gt; parameter. When set &lt;code&gt;true&lt;/code&gt;, under contention, locks favor granting access to the longest-waiting thread. Otherwise this lock does not guarantee any particular access order. Programs using fair locks accessed by many threads may display lower overall throughput (i.e., are slower; often much slower) than those using the default setting, but have smaller variances in times to obtain locks and guarantee lack of starvation. Note however, that fairness of locks does not guarantee fairness of thread scheduling. Thus, one of many threads using a fair lock may obtain it multiple times in succession while other active threads are not progressing and not currently holding the lock. Also note that the untimed &lt;a href=&quot;#tryLock()&quot;&gt;&lt;code&gt;tryLock()&lt;/code&gt;&lt;/a&gt; method does not honor the fairness setting. It will succeed if the lock is available even if other threads are waiting.</source>
          <target state="translated">이 클래스의 생성자는 선택적 &lt;em&gt;공정성&lt;/em&gt; 매개 변수를 허용합니다 . &lt;code&gt;true&lt;/code&gt; 로 설정되면 경합 상태에서 잠금은 가장 오래 대기중인 스레드에 대한 액세스 권한을 부여하는 데 유리합니다. 그렇지 않으면이 잠금이 특정 액세스 순서를 보장하지 않습니다. 많은 스레드에서 액세스하는 공정한 잠금을 사용하는 프로그램은 기본 설정을 사용하는 프로그램보다 전체 처리량이 더 낮을 수 있지만 (즉, 더 느리고 종종 훨씬 더 느림) 잠금을 획득하고 기아 부족을 보장하는 데 걸리는 시간 차이가 더 적습니다. 그러나 잠금의 공정성은 스레드 스케줄링의 공정성을 보장하지 않습니다. 따라서 공정 잠금을 사용하는 여러 스레드 중 하나는 다른 활성 스레드가 진행 중이 아니고 현재 잠금을 유지하지 않는 동안 연속해서 여러 번 얻을 수 있습니다. 또한 시간이 지정되지 않은 &lt;a href=&quot;#tryLock()&quot;&gt; &lt;code&gt;tryLock()&lt;/code&gt; &lt;/a&gt;메서드는 공정성 설정을 따르지 않습니다. 다른 스레드가 대기 중이더라도 잠금을 사용할 수 있으면 성공합니다.</target>
        </trans-unit>
        <trans-unit id="55c1cac93e10dcceae66fd36ab495f0d17064a67" translate="yes" xml:space="preserve">
          <source>The constructor for this class accepts an optional &lt;em&gt;fairness&lt;/em&gt; parameter. When set &lt;code&gt;true&lt;/code&gt;, under contention, locks favor granting access to the longest-waiting thread. Otherwise this lock does not guarantee any particular access order. Programs using fair locks accessed by many threads may display lower overall throughput (i.e., are slower; often much slower) than those using the default setting, but have smaller variances in times to obtain locks and guarantee lack of starvation. Note however, that fairness of locks does not guarantee fairness of thread scheduling. Thus, one of many threads using a fair lock may obtain it multiple times in succession while other active threads are not progressing and not currently holding the lock. Also note that the untimed &lt;a href=&quot;reentrantlock#tryLock--&quot;&gt;&lt;code&gt;tryLock()&lt;/code&gt;&lt;/a&gt; method does not honor the fairness setting. It will succeed if the lock is available even if other threads are waiting.</source>
          <target state="translated">이 클래스의 생성자는 선택적 &lt;em&gt;공정성&lt;/em&gt; 매개 변수를 승인합니다 . &lt;code&gt;true&lt;/code&gt; 로 설정되면 경합에서 잠금은 가장 오래 기다리는 스레드에 대한 액세스 권한을 부여합니다. 그렇지 않으면이 잠금은 특정 액세스 순서를 보장하지 않습니다. 많은 스레드가 액세스하는 페어 잠금을 사용하는 프로그램은 기본 설정을 사용하는 프로그램보다 전체 처리량이 낮을 수 있습니다 (즉, 느리지 만 종종 훨씬 느림). 그러나 잠금을 획득하고 기아 부족을 보장하기 위해 시간의 차이가 더 작습니다. 그러나 잠금의 공정성이 스레드 스케줄링의 공정성을 보장하지는 않습니다. 따라서 페어 잠금을 사용하는 많은 스레드 중 하나가 여러 번 스레드를 연속해서 얻을 수 있지만 다른 활성 스레드는 진행되지 않고 현재 잠금을 유지하지 않습니다. 또한 시간이 초과되지 않은 &lt;a href=&quot;reentrantlock#tryLock--&quot;&gt; &lt;code&gt;tryLock()&lt;/code&gt; &lt;/a&gt;방법은 공정성 설정을 존중하지 않습니다. 다른 스레드가 대기중인 경우에도 잠금을 사용할 수 있으면 성공합니다.</target>
        </trans-unit>
        <trans-unit id="e241afd05a20d90f27c2cc27ff98efcd6c8511d1" translate="yes" xml:space="preserve">
          <source>The constructor for this class optionally accepts a &lt;em&gt;fairness&lt;/em&gt; parameter. When set false, this class makes no guarantees about the order in which threads acquire permits. In particular, &lt;em&gt;barging&lt;/em&gt; is permitted, that is, a thread invoking &lt;a href=&quot;#acquire()&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; can be allocated a permit ahead of a thread that has been waiting - logically the new thread places itself at the head of the queue of waiting threads. When fairness is set true, the semaphore guarantees that threads invoking any of the &lt;a href=&quot;#acquire()&quot;&gt;&lt;code&gt;acquire&lt;/code&gt;&lt;/a&gt; methods are selected to obtain permits in the order in which their invocation of those methods was processed (first-in-first-out; FIFO). Note that FIFO ordering necessarily applies to specific internal points of execution within these methods. So, it is possible for one thread to invoke &lt;code&gt;acquire&lt;/code&gt; before another, but reach the ordering point after the other, and similarly upon return from the method. Also note that the untimed &lt;a href=&quot;#tryAcquire()&quot;&gt;&lt;code&gt;tryAcquire&lt;/code&gt;&lt;/a&gt; methods do not honor the fairness setting, but will take any permits that are available.</source>
          <target state="translated">이 클래스의 생성자는 선택적으로 &lt;em&gt;공정성&lt;/em&gt; 매개 변수를 허용합니다 . false로 설정되면이 클래스는 스레드가 허가를 획득하는 순서를 보장하지 않습니다. 특히, &lt;em&gt;끼어 들기&lt;/em&gt; 가 허용됩니다. 즉, &lt;a href=&quot;#acquire()&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt; 를 호출 하는 스레드는 대기중인 스레드보다 먼저 허용이 할당 될 수 있습니다. 논리적으로 새 스레드는 대기중인 스레드의 대기열 맨 위에 위치합니다. 공정성이 참으로 설정되면 세마포어는 스레드가 &lt;a href=&quot;#acquire()&quot;&gt; &lt;code&gt;acquire&lt;/code&gt; &lt;/a&gt;메서드는 해당 메서드의 호출이 처리 된 순서대로 허가를 얻기 위해 선택됩니다 (선입 선출, FIFO). FIFO 순서는 이러한 메서드 내의 특정 내부 실행 지점에 반드시 적용됩니다. 따라서 한 스레드가 다른 스레드 보다 먼저 &lt;code&gt;acquire&lt;/code&gt; 을 호출 할 수 있지만 다른 스레드 이후 순서 지정 지점에 도달 할 수 있습니다. 마찬가지로 메서드에서 반환 될 때도 마찬가지 입니다. 또한 시간 이 지정되지 않은 &lt;a href=&quot;#tryAcquire()&quot;&gt; &lt;code&gt;tryAcquire&lt;/code&gt; &lt;/a&gt; 메서드는 공정성 설정을 따르지 않지만 사용 가능한 모든 허가를받습니다.</target>
        </trans-unit>
        <trans-unit id="cabf2c65732e2de463fc3500f56a6de7aadab8e6" translate="yes" xml:space="preserve">
          <source>The constructor for this class optionally accepts a &lt;em&gt;fairness&lt;/em&gt; parameter. When set false, this class makes no guarantees about the order in which threads acquire permits. In particular, &lt;em&gt;barging&lt;/em&gt; is permitted, that is, a thread invoking &lt;a href=&quot;semaphore#acquire--&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; can be allocated a permit ahead of a thread that has been waiting - logically the new thread places itself at the head of the queue of waiting threads. When fairness is set true, the semaphore guarantees that threads invoking any of the &lt;a href=&quot;semaphore#acquire--&quot;&gt;&lt;code&gt;acquire&lt;/code&gt;&lt;/a&gt; methods are selected to obtain permits in the order in which their invocation of those methods was processed (first-in-first-out; FIFO). Note that FIFO ordering necessarily applies to specific internal points of execution within these methods. So, it is possible for one thread to invoke &lt;code&gt;acquire&lt;/code&gt; before another, but reach the ordering point after the other, and similarly upon return from the method. Also note that the untimed &lt;a href=&quot;semaphore#tryAcquire--&quot;&gt;&lt;code&gt;tryAcquire&lt;/code&gt;&lt;/a&gt; methods do not honor the fairness setting, but will take any permits that are available.</source>
          <target state="translated">이 클래스의 생성자는 선택적으로 &lt;em&gt;공정성&lt;/em&gt; 매개 변수를 승인합니다 . false로 설정하면이 클래스는 스레드가 허가를 얻는 순서를 보증하지 않습니다. 특히, &lt;em&gt;참여 (barging)&lt;/em&gt; 가 허용됩니다. 즉, &lt;a href=&quot;semaphore#acquire--&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt; 를 호출 하는 스레드가 대기중인 스레드보다 먼저 허용을 할당 할 수 있습니다. 논리적으로 새 스레드는 대기 스레드 큐의 헤드에 배치됩니다. 공정성이 true로 설정되면 세마포어는 스레드가 &lt;a href=&quot;semaphore#acquire--&quot;&gt; &lt;code&gt;acquire&lt;/code&gt; &lt;/a&gt; 호출하는 스레드를 보장합니다.이러한 방법의 호출이 처리 된 순서대로 허가를 얻기 위해 방법이 선택됩니다 (선입 선출 (FIFO)). FIFO 순서는 반드시 이러한 방법 내에서 특정 내부 실행 지점에 적용됩니다. 따라서 하나의 스레드가 다른 스레드 보다 먼저 &lt;code&gt;acquire&lt;/code&gt; 을 호출 할 수 있지만 다른 지점에서 순서대로 도달하고 메소드에서 리턴 될 때와 유사하게 도달 할 수 있습니다. 또한 시간 제한 이없는 &lt;a href=&quot;semaphore#tryAcquire--&quot;&gt; &lt;code&gt;tryAcquire&lt;/code&gt; &lt;/a&gt; 메소드는 공정성 설정을 따르지 않지만 사용 가능한 모든 허가를받습니다.</target>
        </trans-unit>
        <trans-unit id="2f82cef178c196bbec6e0156b69c44428cb62da4" translate="yes" xml:space="preserve">
          <source>The constructor to reflect is the public constructor of the class represented by this &lt;code&gt;Class&lt;/code&gt; object whose formal parameter types match those specified by &lt;code&gt;parameterTypes&lt;/code&gt;.</source>
          <target state="translated">반영 할 생성자는 형식 매개 변수 유형이 &lt;code&gt;parameterTypes&lt;/code&gt; 로 지정된 유형과 일치하는 이 &lt;code&gt;Class&lt;/code&gt; 객체가 나타내는 클래스의 공용 생성자입니다 .</target>
        </trans-unit>
        <trans-unit id="8c8aba2ba395722e4ea3c87db833df539dc5124e" translate="yes" xml:space="preserve">
          <source>The constructors of built-in &lt;a href=&quot;relinkablecallsite&quot;&gt;&lt;code&gt;RelinkableCallSite&lt;/code&gt;&lt;/a&gt; implementations all take a call site descriptor.</source>
          <target state="translated">기본 제공 &lt;a href=&quot;relinkablecallsite&quot;&gt; &lt;code&gt;RelinkableCallSite&lt;/code&gt; &lt;/a&gt; 구현 의 생성자는 모두 호출 사이트 설명자를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ee0852712d5ff7fe80470478a94e9a96247f3720" translate="yes" xml:space="preserve">
          <source>The constructors of this class are protected. To instantiate a WritableRaster, use one of the createWritableRaster factory methods in the Raster class.</source>
          <target state="translated">이 클래스의 생성자는 보호됩니다. WritableRaster를 인스턴스화하려면 Raster 클래스에서 createWritableRaster 팩토리 메서드 중 하나를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1da2d1fc58bcce9ec33d91f159cb8bc7fb6a5519" translate="yes" xml:space="preserve">
          <source>The consumer of the particular image data stream for which this instance of the ImageFilter is filtering data.</source>
          <target state="translated">이 ImageFilter 인스턴스가 데이터를 필터링하는 특정 이미지 데이터 스트림의 소비자입니다.</target>
        </trans-unit>
        <trans-unit id="0fbb50554bed7b206d06fdeeecd4715cecdc9c45" translate="yes" xml:space="preserve">
          <source>The consumer of the particular image data stream for which this instance of the ImageFilter is filtering data. It is not initialized during the constructor, but rather during the getFilterInstance() method call when the FilteredImageSource is creating a unique instance of this object for a particular image data stream.</source>
          <target state="translated">이 ImageFilter 인스턴스가 데이터를 필터링하는 특정 이미지 데이터 스트림의 소비자입니다. 생성자 중에 초기화되지 않고 FilteredImageSource가 특정 이미지 데이터 스트림에 대해이 객체의 고유 인스턴스를 만들 때 getFilterInstance () 메서드 호출 중에 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="dc091f884e5b69128c7db36ffbfe76ae011df98f" translate="yes" xml:space="preserve">
          <source>The content and representation of an attribute and its values is defined by the attribute's &lt;em&gt;schema&lt;/em&gt;. The schema contains information about the attribute's syntax and other properties about the attribute. See &lt;code&gt;getAttributeDefinition()&lt;/code&gt; and &lt;code&gt;getAttributeSyntaxDefinition()&lt;/code&gt; for details regarding how to get schema information about an attribute if the underlying directory service supports schemas.</source>
          <target state="translated">속성과 그 값의 내용과 표현은 속성의 &lt;em&gt;schema에&lt;/em&gt; 의해 정의됩니다 . 스키마에는 속성 구문에 대한 정보와 속성에 대한 기타 속성이 포함됩니다. 기본 디렉토리 서비스가 스키마를 지원하는 경우 속성에 대한 스키마 정보를 얻는 방법에 대한 자세한 내용 은 &lt;code&gt;getAttributeDefinition()&lt;/code&gt; 및 &lt;code&gt;getAttributeSyntaxDefinition()&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6357c946697be0a298155cd7760a94664b1c39d0" translate="yes" xml:space="preserve">
          <source>The content bytes. May be null.</source>
          <target state="translated">콘텐츠 바이트입니다. null 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d706cd64d7347fbe0907548af2463f15b628d97" translate="yes" xml:space="preserve">
          <source>The content length set by invoking this method takes precedence over any value set by &lt;a href=&quot;#setFixedLengthStreamingMode(int)&quot;&gt;&lt;code&gt;setFixedLengthStreamingMode(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드를 호출하여 설정된 콘텐츠 길이는 &lt;a href=&quot;#setFixedLengthStreamingMode(int)&quot;&gt; &lt;code&gt;setFixedLengthStreamingMode(int)&lt;/code&gt; &lt;/a&gt; 설정된 값보다 우선 합니다.</target>
        </trans-unit>
        <trans-unit id="49afb606fcc1a4b8c1a572ebc7a3f8d0b1697947" translate="yes" xml:space="preserve">
          <source>The content length set by invoking this method takes precedence over any value set by &lt;a href=&quot;#setFixedLengthStreamingMode(long)&quot;&gt;&lt;code&gt;setFixedLengthStreamingMode(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드를 호출하여 설정된 콘텐츠 길이는 &lt;a href=&quot;#setFixedLengthStreamingMode(long)&quot;&gt; &lt;code&gt;setFixedLengthStreamingMode(int)&lt;/code&gt; &lt;/a&gt; 설정된 값보다 우선 합니다.</target>
        </trans-unit>
        <trans-unit id="fcaf947eb04b0f9c4537af81320b15e8bade372f" translate="yes" xml:space="preserve">
          <source>The content length set by invoking this method takes precedence over any value set by &lt;a href=&quot;httpurlconnection#setFixedLengthStreamingMode-int-&quot;&gt;&lt;code&gt;setFixedLengthStreamingMode(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드를 호출하여 설정된 컨텐츠 길이는 &lt;a href=&quot;httpurlconnection#setFixedLengthStreamingMode-int-&quot;&gt; &lt;code&gt;setFixedLengthStreamingMode(int)&lt;/code&gt; &lt;/a&gt; 의해 설정된 값보다 우선 합니다.</target>
        </trans-unit>
        <trans-unit id="a995a1fdac8b5e6ff0108cba8dae30ab6b91f5cd" translate="yes" xml:space="preserve">
          <source>The content model</source>
          <target state="translated">콘텐츠 모델</target>
        </trans-unit>
        <trans-unit id="c448b92e4ca498c50532fd1d3d39aa14a291fb13" translate="yes" xml:space="preserve">
          <source>The content model will consist of the string &quot;EMPTY&quot;, the string &quot;ANY&quot;, or a parenthesised group, optionally followed by an occurrence indicator. The model will be normalized so that all parameter entities are fully resolved and all whitespace is removed,and will include the enclosing parentheses. Other normalization (such as removing redundant parentheses or simplifying occurrence indicators) is at the discretion of the parser.</source>
          <target state="translated">컨텐츠 모델은 문자열 &quot;EMPTY&quot;, 문자열 &quot;ANY&quot;또는 괄호로 묶인 그룹으로 구성되며 선택적으로 발생 표시기가 뒤 따릅니다. 모델은 모든 매개 변수 엔티티가 완전히 해결되고 모든 공백이 제거되고 둘러싸는 괄호를 포함하도록 정규화됩니다. 기타 정규화 (예 : 중복 괄호 제거 또는 발생 표시기 단순화)는 파서의 재량에 따릅니다.</target>
        </trans-unit>
        <trans-unit id="571ca938b3faeb08721ed17e39715453eb020c82" translate="yes" xml:space="preserve">
          <source>The content of a mapped byte buffer can change at any time, for example if the content of the corresponding region of the mapped file is changed by this program or another. Whether or not such changes occur, and when they occur, is operating-system dependent and therefore unspecified.</source>
          <target state="translated">맵핑 된 바이트 버퍼의 내용은 예를 들어 맵핑 된 파일의 해당 영역의 내용이이 프로그램 또는 다른 프로그램에 의해 변경되는 경우 언제든지 변경 될 수 있습니다. 이러한 변경 발생 여부와 변경시기는 운영 체제에 따라 다르므로 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="135d9faab6bbc3eaa6d7f9caa3aef5c4173a4d6d" translate="yes" xml:space="preserve">
          <source>The content of a mapped memory segment can change at any time, for example if the content of the corresponding region of the mapped file is changed by this (or another) program. Whether or not such changes occur, and when they occur, is operating-system dependent and therefore unspecified. All or part of a mapped memory segment may become inaccessible at any time, for example if the backing mapped file is truncated. An attempt to access an inaccessible region of a mapped memory segment will not change the segment's content and will cause an unspecified exception to be thrown either at the time of the access or at some later time. It is therefore strongly recommended that appropriate precautions be taken to avoid the manipulation of a mapped file by this (or another) program, except to read or write the file's content.</source>
          <target state="translated">매핑 된 메모리 세그먼트의 내용은 예를 들어 매핑 된 파일의 해당 영역의 내용이이 (또는 다른) 프로그램에 의해 변경되는 경우 언제든지 변경 될 수 있습니다. 이러한 변경이 발생하는지 여부와 발생시기는 운영 체제에 따라 다르므로 지정되지 않습니다. 매핑 된 메모리 세그먼트의 전체 또는 일부는 예를 들어 백업 매핑 된 파일이 잘린 경우 언제든지 액세스 할 수 없게 될 수 있습니다. 매핑 된 메모리 세그먼트의 액세스 할 수없는 영역에 액세스하려는 시도는 세그먼트의 내용을 변경하지 않으며 액세스시 또는 나중에 지정되지 않은 예외가 throw됩니다. 따라서 파일 내용을 읽거나 쓰는 경우를 제외하고이 (또는 다른) 프로그램이 매핑 된 파일을 조작하지 않도록 적절한 예방 조치를 취하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="8ec1fd8ede78cb7ef9de2d4323ba7216c5e957fd" translate="yes" xml:space="preserve">
          <source>The content of the new buffer will be that of this buffer. Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent.</source>
          <target state="translated">새 버퍼의 내용은이 버퍼의 내용입니다. 이 버퍼의 내용에 대한 변경 사항은 새 버퍼에서 볼 수 있으며 그 반대도 마찬가지입니다. 두 버퍼의 위치, 한계 및 마크 값은 독립적입니다.</target>
        </trans-unit>
        <trans-unit id="b52924f0667cd93dbfd903475fcb1b22e1203c6d" translate="yes" xml:space="preserve">
          <source>The content of the new buffer will be that of this buffer. Changes to this buffer's content will be visible in the new buffer; the new buffer itself, however, will be read-only and will not allow the shared content to be modified. The two buffers' position, limit, and mark values will be independent.</source>
          <target state="translated">새 버퍼의 내용은이 버퍼의 내용입니다. 이 버퍼의 내용에 대한 변경 사항은 새 버퍼에서 볼 수 있습니다. 그러나 새 버퍼 자체는 읽기 전용이며 공유 컨텐츠를 수정할 수 없습니다. 두 버퍼의 위치, 한계 및 마크 값은 독립적입니다.</target>
        </trans-unit>
        <trans-unit id="87d340244850591eac3568c10b2648c5606bf0b4" translate="yes" xml:space="preserve">
          <source>The content of the new buffer will start at position &lt;code&gt;index&lt;/code&gt; in this buffer, and will contain &lt;code&gt;length&lt;/code&gt; elements. Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent.</source>
          <target state="translated">새 버퍼의 내용은 이 버퍼의 위치 &lt;code&gt;index&lt;/code&gt; 에서 시작하며 &lt;code&gt;length&lt;/code&gt; 요소 를 포함 합니다. 이 버퍼의 내용에 대한 변경 사항은 새 버퍼에 표시되며 그 반대의 경우도 마찬가지입니다. 두 버퍼의 위치, 한계 및 표시 값은 독립적입니다.</target>
        </trans-unit>
        <trans-unit id="7b1d4314ceabde41e5b0b6b394b82a68318c7a87" translate="yes" xml:space="preserve">
          <source>The content of the new buffer will start at this buffer's current position rounded up to the index of the nearest aligned byte for the given unit size, and end at this buffer's limit rounded down to the index of the nearest aligned byte for the given unit size. If rounding results in out-of-bound values then the new buffer's capacity and limit will be zero. If rounding is within bounds the following expressions will be true for a new buffer &lt;code&gt;nb&lt;/code&gt; and unit size &lt;code&gt;unitSize&lt;/code&gt;:</source>
          <target state="translated">새 버퍼의 내용은 주어진 단위 크기에 대해 가장 가까운 정렬 된 바이트의 인덱스로 반올림 된이 버퍼의 현재 위치에서 시작하고 주어진 단위 크기에 대해 가장 가까운 정렬 된 바이트의 인덱스로 내림 된이 버퍼의 한계에서 끝납니다. . 반올림 결과 범위를 벗어난 값이 발생하면 새 버퍼의 용량과 제한은 0이됩니다. 반올림이 범위 내에 있으면 새 버퍼 &lt;code&gt;nb&lt;/code&gt; 및 단위 크기 &lt;code&gt;unitSize&lt;/code&gt; 에 대해 다음 표현식이 참이됩니다 .</target>
        </trans-unit>
        <trans-unit id="8be5a548cfa9fe9bb9c255c2eb6075bfe2f8e059" translate="yes" xml:space="preserve">
          <source>The content of the new buffer will start at this buffer's current position. Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent.</source>
          <target state="translated">새 버퍼의 내용은이 버퍼의 현재 위치에서 시작됩니다. 이 버퍼의 내용에 대한 변경 사항은 새 버퍼에서 볼 수 있으며 그 반대도 마찬가지입니다. 두 버퍼의 위치, 한계 및 마크 값은 독립적입니다.</target>
        </trans-unit>
        <trans-unit id="cefde5877ed78f05c3cd681ed1cfc50dc6c6dc4c" translate="yes" xml:space="preserve">
          <source>The content of the new, read-only buffer will be the content of the given character sequence. The buffer's capacity will be &lt;code&gt;csq.length()&lt;/code&gt;, its position will be &lt;code&gt;start&lt;/code&gt;, its limit will be &lt;code&gt;end&lt;/code&gt;, and its mark will be undefined.</source>
          <target state="translated">새로운 읽기 전용 버퍼의 내용은 주어진 문자 순서의 내용입니다. 버퍼의 용량은 &lt;code&gt;csq.length()&lt;/code&gt; 이고, 위치는 &lt;code&gt;start&lt;/code&gt; 이며, 제한은 &lt;code&gt;end&lt;/code&gt; 이며 마크는 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="26c3cb709632b1f3d492bb30e289e528ee9018bc" translate="yes" xml:space="preserve">
          <source>The content of the new, read-only buffer will be the content of the given character sequence. The new buffer's capacity and limit will be &lt;code&gt;csq.length()&lt;/code&gt;, its position will be zero, and its mark will be undefined.</source>
          <target state="translated">새로운 읽기 전용 버퍼의 내용은 주어진 문자 순서의 내용입니다. 새 버퍼의 용량과 한계는 &lt;code&gt;csq.length()&lt;/code&gt; 이고 위치는 0이며 마크는 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="74948663ea9fc210edaba7a229133e9ad8796433" translate="yes" xml:space="preserve">
          <source>The content of this processing instruction.</source>
          <target state="translated">이 처리 명령의 내용입니다.</target>
        </trans-unit>
        <trans-unit id="9bd0d8b7305a2d4c56de9c62425fe68436144eac" translate="yes" xml:space="preserve">
          <source>The content of this processing instruction. This is from the first non white space character after the target to the character immediately preceding the &lt;code&gt;?&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">이 처리 명령의 내용입니다. 이것은 대상 뒤의 첫 번째 공백이 아닌 문자에서 &lt;code&gt;?&amp;gt;&lt;/code&gt; 바로 앞의 문자까지 입니다.</target>
        </trans-unit>
        <trans-unit id="021d368c57420163c43028320242ba50a5ecf8eb" translate="yes" xml:space="preserve">
          <source>The content pane.</source>
          <target state="translated">콘텐츠 창.</target>
        </trans-unit>
        <trans-unit id="d1100472fa7c153e1a266dac9d6f95a96b771406" translate="yes" xml:space="preserve">
          <source>The content type can be used to determine how the setting should be rendered in a graphical user interface.</source>
          <target state="translated">콘텐츠 유형은 그래픽 사용자 인터페이스에서 설정을 렌더링하는 방법을 결정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7af81925356d9326d970998ba5413043e77043f" translate="yes" xml:space="preserve">
          <source>The content type of the file, or &lt;code&gt;null&lt;/code&gt; if the content type cannot be determined</source>
          <target state="translated">파일의 컨텐츠 타입. 컨텐츠 타입을 판정 할 수없는 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b4075c8ed6df898e6cc588fb0b8e6c1bdf590a35" translate="yes" xml:space="preserve">
          <source>The content type of the script language.</source>
          <target state="translated">스크립트 언어의 콘텐츠 유형입니다.</target>
        </trans-unit>
        <trans-unit id="2610b1037bad4153f25440813b90a505af91d1af" translate="yes" xml:space="preserve">
          <source>The content type of the script language. See the type attribute definition in HTML 4.0.</source>
          <target state="translated">스크립트 언어의 콘텐츠 유형입니다. HTML 4.0의 유형 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="24683e33089b3cdf61eb4aabae815e602eb1bb73" translate="yes" xml:space="preserve">
          <source>The content type of the submitted form, generally &quot;application/x-www-form-urlencoded&quot;.</source>
          <target state="translated">제출 된 양식의 콘텐츠 유형, 일반적으로 &quot;application / x-www-form-urlencoded&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="f9626d1753820e17639008f2ea562490e66e6733" translate="yes" xml:space="preserve">
          <source>The content type of the submitted form, generally &quot;application/x-www-form-urlencoded&quot;. See the enctype attribute definition in HTML 4.0.</source>
          <target state="translated">제출 된 양식의 콘텐츠 유형, 일반적으로 &quot;application / x-www-form-urlencoded&quot;입니다. HTML 4.0의 enctype 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fefa96213a0f4f4a20404355dc88109a3b19df22" translate="yes" xml:space="preserve">
          <source>The content type or &lt;code&gt;null&lt;/code&gt; if the file type is not recognized</source>
          <target state="translated">컨텐츠 타입 . 파일 타입이 인식되지 않는 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5d0e8e9b28567b3040f11a99a10aac692e31ae2" translate="yes" xml:space="preserve">
          <source>The content type pf the style sheet language.</source>
          <target state="translated">스타일 시트 언어의 컨텐츠 유형입니다.</target>
        </trans-unit>
        <trans-unit id="5b4036ec1b0697399b887daffbff8cf7d26ef91e" translate="yes" xml:space="preserve">
          <source>The content type pf the style sheet language. See the type attribute definition in HTML 4.0.</source>
          <target state="translated">스타일 시트 언어의 컨텐츠 유형입니다. HTML 4.0의 유형 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="dc59a148955516ec4b579f1da10c937b05110d17" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the long edge of the medium, but in the opposite manner from landscape.</source>
          <target state="translated">콘텐츠는 매체의 긴 가장자리에 걸쳐 이미지가 생성되지만 가로 방향과는 반대입니다.</target>
        </trans-unit>
        <trans-unit id="66f44833c6467f09c644d9346944666f84828bc6" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the long edge of the medium, but in the opposite manner from landscape. Reverse-landscape is defined to be a rotation of the print-stream page to be imaged by -90 degrees with respect to the medium (i.e. clockwise) from the portrait orientation.</source>
          <target state="translated">내용은 매체의 긴 가장자리를 가로 지르지 만 가로 방향과 반대 방향으로 이미지화됩니다. 역 가로는 세로 방향에서 매체 (즉, 시계 방향)에 대해 -90 도로 이미지를 인쇄 할 인쇄 스트림 페이지의 회전으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="3e7a816918ae729437621b4ae4fdce0b55d3cfbc" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the long edge of the medium.</source>
          <target state="translated">콘텐츠는 매체의 긴 가장자리에 걸쳐 이미지화됩니다.</target>
        </trans-unit>
        <trans-unit id="a6abed47322b2de7552654f3f1b6131fb26ff966" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the long edge of the medium. Landscape is defined to be a rotation of the print-stream page to be imaged by +90 degrees with respect to the medium (i.e. anti-clockwise) from the portrait orientation.</source>
          <target state="translated">내용은 매체의 긴 가장자리에 걸쳐 이미지로 표시됩니다. 가로 방향은 세로 방향에서 매체 (즉, 시계 반대 방향)에 대해 +90도 이미지가 인쇄되는 인쇄 스트림 페이지의 회전으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="32a811781efdca4ccfc250c9bf66ab598db8e2cd" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the short edge of the medium, but in the opposite manner from portrait.</source>
          <target state="translated">콘텐츠는 매체의 짧은 가장자리에 걸쳐 이미지가 생성되지만 세로와는 반대입니다.</target>
        </trans-unit>
        <trans-unit id="785e00c1b7145d81a8620ade1cef3fdb93caa602" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the short edge of the medium, but in the opposite manner from portrait. Reverse-portrait is defined to be a rotation of the print-stream page to be imaged by 180 degrees with respect to the medium from the portrait orientation.</source>
          <target state="translated">내용은 매체의 짧은 가장자리를 가로 질러 이미지화되지만 세로와 반대의 방식으로 이미지화됩니다. 역 화상은 세로 방향에서 매체에 대해 180도 이미지가 인쇄되는 인쇄 스트림 페이지의 회전으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="6852f939963698fc0410e778b02bf61dab00e768" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the short edge of the medium.</source>
          <target state="translated">내용은 매체의 짧은 가장자리에 걸쳐 이미지로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="b7fbb4e571bdfb18ee27b8258fa6c9a017747700" translate="yes" xml:space="preserve">
          <source>The content.</source>
          <target state="translated">내용.</target>
        </trans-unit>
        <trans-unit id="6990de53515048fc24b7fd5e1afaad92bd31947e" translate="yes" xml:space="preserve">
          <source>The content. Either an Element or a ContentModel.</source>
          <target state="translated">내용. Element 또는 ContentModel 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="639eea9474f50230d9aa820f8cf5f588dbf94408" translate="yes" xml:space="preserve">
          <source>The contentPane may not be null.</source>
          <target state="translated">contentPane은 null 일 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bc28f755e5915277d2988d4a6013aea7ae1c7b98" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;legalValues&lt;/code&gt; are copied, so subsequent modifications of the array referenced by &lt;code&gt;legalValues&lt;/code&gt; have no impact on this &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;legalValues&lt;/code&gt; 의 내용 이 복사되므로 &lt;code&gt;legalValues&lt;/code&gt; 가 참조하는 배열의 후속 수정은 이 &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; 인스턴스 에 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1946580fff472131e18b708943cd99d690b0e519" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;legalValues&lt;/code&gt; are copied, so subsequent modifications of the array referenced by &lt;code&gt;legalValues&lt;/code&gt; have no impact on this &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;legalValues&lt;/code&gt; 의 내용 이 복사되므로 &lt;code&gt;legalValues&lt;/code&gt; 가 참조하는 배열의 후속 수정은 이 &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 인스턴스 에 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c325ca178e48547f71dba766d1fb7d18b3def496" translate="yes" xml:space="preserve">
          <source>The contents of all files are valid (that is, public non-abstract subclasses of &lt;code&gt;ResourceBundle&lt;/code&gt; for the &quot;.class&quot; files, syntactically correct &quot;.properties&quot; files). The default locale is &lt;code&gt;Locale(&quot;en&quot;, &quot;GB&quot;)&lt;/code&gt;.</source>
          <target state="translated">모든 파일의 내용이 유효합니다 (즉 , &quot;.class&quot;파일에 대해 &lt;code&gt;ResourceBundle&lt;/code&gt; 의 공개 비추 상 서브 클래스 , 구문 상 올바른 &quot;.properties&quot;파일). 기본 로캘은 &lt;code&gt;Locale(&quot;en&quot;, &quot;GB&quot;)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7042e6a9a03e92b7ccb4accd0d856b41fbb3e6fb" translate="yes" xml:space="preserve">
          <source>The contents of entries starting with &lt;code&gt;
     META-INF/services/&lt;/code&gt; are assumed to be service configuration files (see &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;). If the name of a file (that follows &lt;code&gt;META-INF/services/&lt;/code&gt;) is a legal class name then it is assumed to be the fully-qualified class name of a service type. The entries in the file are assumed to be the fully-qualified class names of provider classes.</source>
          <target state="translated">&lt;code&gt; META-INF/services/&lt;/code&gt; 로 시작하는 항목의 내용은 서비스 구성 파일로 간주됩니다 ( &lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; 참조 ). 파일 이름 ( &lt;code&gt;META-INF/services/&lt;/code&gt; 뒤에 오는)이 유효한 클래스 이름이면 서비스 유형의 완전한 클래스 이름으로 간주됩니다. 파일의 항목은 공급자 클래스의 정규화 된 클래스 이름으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="83269b44f34ab52d511039f26b8037bc2bdb6f8a" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;code&gt;MBeanInfo&lt;/code&gt; for a Dynamic MBean are determined by its &lt;a href=&quot;dynamicmbean#getMBeanInfo()&quot;&gt;&lt;code&gt;getMBeanInfo()&lt;/code&gt;&lt;/a&gt; method. This includes Open MBeans and Model MBeans, which are kinds of Dynamic MBeans.</source>
          <target state="translated">Dynamic MBean 에 대한 &lt;code&gt;MBeanInfo&lt;/code&gt; 의 내용은 &lt;a href=&quot;dynamicmbean#getMBeanInfo()&quot;&gt; &lt;code&gt;getMBeanInfo()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 결정됩니다 . 여기에는 동적 MBean의 일종 인 Open MBean과 Model MBean이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="ebac3c238a1391d9c3c39bf23e530a85063ac59c" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;code&gt;MBeanInfo&lt;/code&gt; for a Dynamic MBean are determined by its &lt;a href=&quot;dynamicmbean#getMBeanInfo--&quot;&gt;&lt;code&gt;getMBeanInfo()&lt;/code&gt;&lt;/a&gt; method. This includes Open MBeans and Model MBeans, which are kinds of Dynamic MBeans.</source>
          <target state="translated">동적 MBean 에 대한 &lt;code&gt;MBeanInfo&lt;/code&gt; 의 내용은 &lt;a href=&quot;dynamicmbean#getMBeanInfo--&quot;&gt; &lt;code&gt;getMBeanInfo()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 결정됩니다 . 여기에는 동적 MBean의 일종 인 Open MBean 및 Model MBean이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d848a8a7bfa54e24e5b7fcaf3feddaaa4c47c842" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;code&gt;MBeanInfo&lt;/code&gt; for a Standard MBean are determined by the MBean server as follows:</source>
          <target state="translated">표준 MBean 에 대한 &lt;code&gt;MBeanInfo&lt;/code&gt; 의 내용은 다음과 같이 MBean 서버에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="af743abf5d160073126c0152d63b2dc17a6f2567" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;code&gt;message&lt;/code&gt; argument are copied; subsequent modification of the byte array does not affect the newly created object.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; 인수 의 내용 이 복사됩니다. 이후의 바이트 배열 수정은 새로 생성 된 객체에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="641fc24cc38af987f1aefc7e151309eea4ad0ec1" translate="yes" xml:space="preserve">
          <source>The contents of the CDATA section will be reported through the regular &lt;a href=&quot;../contenthandler#characters(char%5B%5D,int,int)&quot;&gt;&lt;code&gt;characters&lt;/code&gt;&lt;/a&gt; event; this event is intended only to report the boundary.</source>
          <target state="translated">CDATA 섹션의 내용은 일반 &lt;a href=&quot;../contenthandler#characters(char%5B%5D,int,int)&quot;&gt; &lt;code&gt;characters&lt;/code&gt; &lt;/a&gt; 이벤트를 통해보고됩니다 . 이 이벤트는 경계를보고하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="2cb367ce10fdd3c0a6ce88ea6ecba270fbaf6c8d" translate="yes" xml:space="preserve">
          <source>The contents of the Range.</source>
          <target state="translated">범위의 내용입니다.</target>
        </trans-unit>
        <trans-unit id="6b894cb8f2eb423a6336bc47537c202aa64f2631" translate="yes" xml:space="preserve">
          <source>The contents of the byte array are copied; subsequent modification of the byte array does not affect the newly created key.</source>
          <target state="translated">바이트 배열의 내용이 복사됩니다. 이후의 바이트 배열 수정은 새로 생성 된 키에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b0b4c7cdb43c1b320218f1d15b6496c67a3847fe" translate="yes" xml:space="preserve">
          <source>The contents of the located files indicate the names of actual implementation classes which implement the aforementioned service provider interfaces; the default class loader is then used to load each of these classes and to instantiate an instance of each class, which is then placed into the registry for later retrieval.</source>
          <target state="translated">찾은 파일의 내용은 위에서 언급 한 서비스 제공자 인터페이스를 구현하는 실제 구현 클래스의 이름을 나타냅니다. 그런 다음 기본 클래스 로더를 사용하여 이러한 각 클래스를로드하고 각 클래스의 인스턴스를 인스턴스화하고 나중에 검색 할 수 있도록 레지스트리에 배치합니다.</target>
        </trans-unit>
        <trans-unit id="c577bd9582fc897c748292b336e567c8a4b33c18" translate="yes" xml:space="preserve">
          <source>The contents of the stream can be filtered during deserialization. If a &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt;filter is set&lt;/a&gt; on an ObjectInputStream, the &lt;a href=&quot;objectinputfilter&quot;&gt;&lt;code&gt;ObjectInputFilter&lt;/code&gt;&lt;/a&gt; can check that the classes, array lengths, number of references in the stream, depth, and number of bytes consumed from the input stream are allowed and if not, can terminate deserialization. A &lt;a href=&quot;objectinputfilter.config#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt;process-wide filter&lt;/a&gt; can be configured that is applied to each &lt;code&gt;ObjectInputStream&lt;/code&gt; unless replaced using &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;setObjectInputFilter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">직렬화 해제 중에 스트림의 내용을 필터링 할 수 있습니다. 경우 &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt;필터 설정&lt;/a&gt; ObjectInputStream에에서 &lt;a href=&quot;objectinputfilter&quot;&gt; &lt;code&gt;ObjectInputFilter&lt;/code&gt; 이&lt;/a&gt; 클래스는, 배열 길이가, 상기 입력 스트림에서 소비되는 바이트 스트림 깊이 및 다수의 참조 번호가 허용되어 있는지 확인하고 있지 않은 경우, 직렬화를 종료 할 수있다. &lt;a href=&quot;objectinputfilter.config#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt;프로세스는 와이드 필터&lt;/a&gt; 각각에인가하도록 구성 될 수 &lt;code&gt;ObjectInputStream&lt;/code&gt; 를 사용하지 않는 대신 &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;setObjectInputFilter&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a438bf4c380f180712e047a7397074ff151e2de8" translate="yes" xml:space="preserve">
          <source>The contents of the stream can be filtered during deserialization. If a &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt;filter is set&lt;/a&gt; on an ObjectInputStream, the &lt;a href=&quot;objectinputfilter&quot;&gt;&lt;code&gt;ObjectInputFilter&lt;/code&gt;&lt;/a&gt; can check that the classes, array lengths, number of references in the stream, depth, and number of bytes consumed from the input stream are allowed and if not, can terminate deserialization. A &lt;a href=&quot;objectinputfilter.config#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt;system-wide filter&lt;/a&gt; can be configured that is applied to each &lt;code&gt;ObjectInputStream&lt;/code&gt; unless replaced using &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;setObjectInputFilter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">직렬화 해제 중에 스트림의 내용을 필터링 할 수 있습니다. 경우 &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt;필터 설정&lt;/a&gt; ObjectInputStream에에서 &lt;a href=&quot;objectinputfilter&quot;&gt; &lt;code&gt;ObjectInputFilter&lt;/code&gt; 이&lt;/a&gt; 클래스는, 배열 길이가, 상기 입력 스트림에서 소비되는 바이트 스트림 깊이 및 다수의 참조 번호가 허용되어 있는지 확인하고 있지 않은 경우, 직렬화를 종료 할 수있다. &lt;a href=&quot;objectinputfilter.config#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt;시스템 전체 필터&lt;/a&gt; 각각에인가하도록 구성 될 수 &lt;code&gt;ObjectInputStream&lt;/code&gt; 를 사용하지 않는 대신 &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;setObjectInputFilter&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="388f439246bd0e7a4c23e29d7ee51483d463dcb8" translate="yes" xml:space="preserve">
          <source>The context class loader is used by system code and extensions when they need to lookup resources that might not exist in the system class loader. Granting enableContextClassLoaderOverride permission would allow a subclass of Thread to override the methods that are used to get or set the context class loader for a particular thread.</source>
          <target state="translated">컨텍스트 클래스 로더는 시스템 클래스 로더에 없을 수있는 자원을 찾아야 할 때 시스템 코드 및 확장에서 사용됩니다. enableContextClassLoaderOverride 권한을 부여하면 Thread의 서브 클래스가 특정 스레드에 대한 컨텍스트 클래스 로더를 가져 오거나 설정하는 데 사용되는 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="590a02352e6b07386297ba1df528c88dc41306dc" translate="yes" xml:space="preserve">
          <source>The context class loader is used by system code and extensions when they need to lookup resources that might not exist in the system class loader. Granting setContextClassLoader permission would allow code to change which context class loader is used for a particular thread, including system threads.</source>
          <target state="translated">컨텍스트 클래스 로더는 시스템 클래스 로더에 없을 수있는 자원을 찾아야 할 때 시스템 코드 및 확장에서 사용됩니다. setContextClassLoader 권한을 부여하면 코드가 시스템 스레드를 포함하여 특정 스레드에 사용되는 컨텍스트 클래스 로더를 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a700d5065f6712b03f8838226dcd3bb123177951" translate="yes" xml:space="preserve">
          <source>The context establishment occurs in a loop where the initiator calls &lt;a href=&quot;#initSecContext(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;initSecContext&lt;/code&gt;&lt;/a&gt; and the acceptor calls &lt;a href=&quot;#acceptSecContext(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;acceptSecContext&lt;/code&gt;&lt;/a&gt; until the context is established. While in this loop the &lt;code&gt;initSecContext&lt;/code&gt; and &lt;code&gt;acceptSecContext&lt;/code&gt; methods produce tokens that the application sends over to the peer. The peer passes any such token as input to its &lt;code&gt;acceptSecContext&lt;/code&gt; or &lt;code&gt;initSecContext&lt;/code&gt; as the case may be.</source>
          <target state="translated">컨텍스트 설정은 개시자가 &lt;a href=&quot;#initSecContext(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;initSecContext&lt;/code&gt; 를&lt;/a&gt; 호출 하고 수락 자가 컨텍스트가 설정 될 때까지 &lt;a href=&quot;#acceptSecContext(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;acceptSecContext&lt;/code&gt; 를&lt;/a&gt; 호출하는 루프에서 발생합니다 . 이 루프에서 &lt;code&gt;initSecContext&lt;/code&gt; 및 &lt;code&gt;acceptSecContext&lt;/code&gt; 메서드는 응용 프로그램이 피어에게 보내는 토큰을 생성합니다. 피어는 경우에 따라 입력과 같은 토큰을 &lt;code&gt;acceptSecContext&lt;/code&gt; 또는 &lt;code&gt;initSecContext&lt;/code&gt; 에 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="5c382ea0f6e622d8b8b41c104555d098f7b132c4" translate="yes" xml:space="preserve">
          <source>The context in which the service has become available</source>
          <target state="translated">서비스가 이용 가능한 상황</target>
        </trans-unit>
        <trans-unit id="7e89d3aadd2fc133242406bab583a28ade056edc" translate="yes" xml:space="preserve">
          <source>The context relative to which &lt;code&gt;altName&lt;/code&gt; is named. If null, then the default initial context is implied.</source>
          <target state="translated">&lt;code&gt;altName&lt;/code&gt; 과 관련된 컨텍스트 입니다. null의 경우, 디폴트의 초기 문맥이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9ce2783e4e5dd5cbc5de3a3c2791fe493d1b5b93" translate="yes" xml:space="preserve">
          <source>The control character corresponding to</source>
          <target state="translated">에 해당하는 제어 문자</target>
        </trans-unit>
        <trans-unit id="8ebc77b5a7e9757374e4c417a6e4467934327a93" translate="yes" xml:space="preserve">
          <source>The control is unavailable in this context.</source>
          <target state="translated">이 컨텍스트에서는 컨트롤을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="46c18f78d9384dbe7bddde79f8f8b932a4c9c940" translate="yes" xml:space="preserve">
          <source>The control is unavailable in this context. See the disabled attribute definition in HTML 4.0.</source>
          <target state="translated">이 컨텍스트에서는 컨트롤을 사용할 수 없습니다. HTML 4.0의 비활성화 된 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9370f04a5544f51098edcb0f278d5570b1dac651" translate="yes" xml:space="preserve">
          <source>The control modifier.</source>
          <target state="translated">제어 수정 자입니다.</target>
        </trans-unit>
        <trans-unit id="5362b5a3c930f71b9b4eacd2f3f2bd885237f036" translate="yes" xml:space="preserve">
          <source>The control modifier. An indicator that the control key was held down during the event.</source>
          <target state="translated">제어 수정 자입니다. 이벤트 중에 컨트롤 키를 눌렀 음을 나타내는 표시기입니다.</target>
        </trans-unit>
        <trans-unit id="e74ab6fbf2fbd58d08490c2d7480131e843f9403" translate="yes" xml:space="preserve">
          <source>The control's ASN.1 BER encoded value.</source>
          <target state="translated">컨트롤의 ASN.1 BER 인코딩 값.</target>
        </trans-unit>
        <trans-unit id="10a80369bf3b0a07e4be4b96341c9aa03850a503" translate="yes" xml:space="preserve">
          <source>The control's criticality.</source>
          <target state="translated">컨트롤의 중요성</target>
        </trans-unit>
        <trans-unit id="55775f89e5178f6ddda32a06da33c39badc6c01e" translate="yes" xml:space="preserve">
          <source>The control's object identifier string.</source>
          <target state="translated">컨트롤의 개체 식별자 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="5d6d978d47d58f71c7f1271ddd066ad095c8e7b6" translate="yes" xml:space="preserve">
          <source>The conversion</source>
          <target state="translated">전환</target>
        </trans-unit>
        <trans-unit id="75d2a2e015ea330e6ecba09a56f23a1a380c1c54" translate="yes" xml:space="preserve">
          <source>The conversion creates a &lt;code&gt;LocalDateTime&lt;/code&gt; that represents the same year, month, day of month, hours, minutes, seconds and nanos date-time value as this &lt;code&gt;Timestamp&lt;/code&gt; in the local time zone.</source>
          <target state="translated">변환은 현지 시간대 의이 &lt;code&gt;Timestamp&lt;/code&gt; 와 동일한 연도, 월, 일,시, 분, 초 및 나노 날짜-시간 값을 나타내는 &lt;code&gt;LocalDateTime&lt;/code&gt; 을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="90396444982f1d638d80c0a4ec00a3515e1db96f" translate="yes" xml:space="preserve">
          <source>The conversion creates a &lt;code&gt;LocalTime&lt;/code&gt; that represents the same hour, minute, and second time value as this &lt;code&gt;Time&lt;/code&gt;. The nanosecond &lt;code&gt;LocalTime&lt;/code&gt; field will be set to zero.</source>
          <target state="translated">변환은 이 &lt;code&gt;Time&lt;/code&gt; 과 동일한 시간, 분 및 초 시간 값을 나타내는 &lt;code&gt;LocalTime&lt;/code&gt; 을 작성합니다 . 나노초 &lt;code&gt;LocalTime&lt;/code&gt; 필드는 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="270e247fd88eb7860b4d0a63df4b9c814a6bf3d7" translate="yes" xml:space="preserve">
          <source>The conversion creates an &lt;code&gt;Instant&lt;/code&gt; that represents the same point on the time-line as this &lt;code&gt;Calendar&lt;/code&gt;.</source>
          <target state="translated">변환은 타임 라인에서이 &lt;code&gt;Calendar&lt;/code&gt; 와 동일한 지점을 나타내는 &lt;code&gt;Instant&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="efd60f8e9860e6d830f6fe82f385538e552bf494" translate="yes" xml:space="preserve">
          <source>The conversion creates an &lt;code&gt;Instant&lt;/code&gt; that represents the same point on the time-line as this &lt;code&gt;Date&lt;/code&gt;.</source>
          <target state="translated">변환은 타임 라인에서이 &lt;code&gt;Date&lt;/code&gt; 와 동일한 지점을 나타내는 &lt;code&gt;Instant&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="54a6f4f7aad035dfcc7a40e216ebf648682262d6" translate="yes" xml:space="preserve">
          <source>The conversion creates an &lt;code&gt;Instant&lt;/code&gt; that represents the same point on the time-line as this &lt;code&gt;FileTime&lt;/code&gt;.</source>
          <target state="translated">변환은 타임 라인에서이 &lt;code&gt;FileTime&lt;/code&gt; 과 동일한 지점을 나타내는 &lt;code&gt;Instant&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="d7789558a9e8bded9caf3402daf4673312af21d2" translate="yes" xml:space="preserve">
          <source>The conversion creates an &lt;code&gt;Instant&lt;/code&gt; that represents the same point on the time-line as this &lt;code&gt;Timestamp&lt;/code&gt;.</source>
          <target state="translated">변환은 이 &lt;code&gt;Timestamp&lt;/code&gt; 와 같은 타임 라인의 지점을 나타내는 &lt;code&gt;Instant&lt;/code&gt; 을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="0d9ef9299b2fb831504cc2147231f846f711cd03" translate="yes" xml:space="preserve">
          <source>The conversion does not correspond to any argument.</source>
          <target state="translated">변환은 인수와 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="12582e3813a1ad56415e3e99c5a9269b04638260" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the &lt;code&gt;ChronoLocalDate&lt;/code&gt; and the &lt;code&gt;LocalTime&lt;/code&gt; from the temporal object. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects. The result uses this chronology.</source>
          <target state="translated">변환 은 시간 개체에서 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 와 &lt;code&gt;LocalTime&lt;/code&gt; 을 추출하고 결합 합니다. 구현시 관련 개체에 해당하는 필드에 액세스하는 등의 최적화를 수행 할 수 있습니다. 결과는이 연대기를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4b54547f5841ed450737930c04beb5ec751b5128" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the &lt;code&gt;LocalDate&lt;/code&gt; and the &lt;code&gt;LocalTime&lt;/code&gt; from the temporal object. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">변환 은 임시 객체에서 &lt;code&gt;LocalDate&lt;/code&gt; 및 &lt;code&gt;LocalTime&lt;/code&gt; 을 추출하고 결합 합니다. 구현시 관련 개체에 해당하는 필드에 액세스하는 등의 최적화를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70498ef0a69b6eab342c7fac47172341588c109c" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the &lt;code&gt;ZoneOffset&lt;/code&gt; and the &lt;code&gt;LocalTime&lt;/code&gt; from the temporal object. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">변환 은 임시 객체에서 &lt;code&gt;ZoneOffset&lt;/code&gt; 및 &lt;code&gt;LocalTime&lt;/code&gt; 을 추출하고 결합 합니다. 구현시 관련 개체에 해당하는 필드에 액세스하는 등의 최적화를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2bd237ed7933aea397ad0c05b7728ea1d9cef865" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the chronology and the date from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#date(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">변환은 시간 개체에서 연대기와 날짜를 추출하고 결합합니다. 이 동작은 추출 된 연대기와 함께 &lt;a href=&quot;chronology#date(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 를 사용하는 것과 동일합니다 . 구현은 관련 객체에 해당하는 필드에 액세스하는 것과 같은 최적화를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b826735171361928b376c1342132346dd4ef147" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the chronology and the date from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#date-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">변환은 시간 객체에서 시간과 날짜를 추출하고 결합합니다. 이 동작은 추출 된 연대기 를 &lt;a href=&quot;chronology#date-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 와 함께 사용하는 것과 같습니다 . 구현시 관련 개체에 해당하는 필드에 액세스하는 등의 최적화를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7548e99ac707ebd95e7154d06d1c9ffd11706cf8" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the chronology and the date-time from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#localDateTime(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;Chronology.localDateTime(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">변환은 시간 개체에서 연대기와 날짜-시간을 추출하고 결합합니다. 이 동작은 추출 된 연대기와 함께 &lt;a href=&quot;chronology#localDateTime(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;Chronology.localDateTime(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 을 사용하는 것과 동일합니다 . 구현은 관련 객체에 해당하는 필드에 액세스하는 것과 같은 최적화를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b3b87af7f6d662b2b8b6d102b13718c4e5b2e3a" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the chronology and the date-time from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#localDateTime-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;Chronology.localDateTime(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">변환은 시간 객체에서 시간과 날짜-시간을 추출하고 결합합니다. 이 동작은 추출 된 연대기 를 사용하여 &lt;a href=&quot;chronology#localDateTime-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;Chronology.localDateTime(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 를 사용하는 것과 같습니다 . 구현시 관련 개체에 해당하는 필드에 액세스하는 등의 최적화를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e42ac87a10c0d630374d88d42e6ce627f20518e" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the chronology, date, time and zone from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#zonedDateTime(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;Chronology.zonedDateTime(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">변환은 시간 개체에서 연대기, 날짜, 시간 및 영역을 추출하고 결합합니다. 이 동작은 추출 된 연대기와 함께 &lt;a href=&quot;chronology#zonedDateTime(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;Chronology.zonedDateTime(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 을 사용하는 것과 동일합니다 . 구현은 관련 객체에 해당하는 필드에 액세스하는 것과 같은 최적화를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc0526ed650fd16edcc91d9d9d4f4c192d585a6f" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the chronology, date, time and zone from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#zonedDateTime-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;Chronology.zonedDateTime(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">변환은 시간 객체에서 연대기, 날짜, 시간 및 영역을 추출하고 결합합니다. 이 동작은 추출 된 연대기 를 사용하여 &lt;a href=&quot;chronology#zonedDateTime-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;Chronology.zonedDateTime(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 를 사용하는 것과 같습니다 . 구현시 관련 개체에 해당하는 필드에 액세스하는 등의 최적화를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1d03bf26e9a6cb1c5b95c5f95bbe5b5411246d5" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">변환은 &lt;a href=&quot;temporal/chronofield#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt; 필드를 추출합니다 .</target>
        </trans-unit>
        <trans-unit id="fa783f0d9bec9cbce0330f54aae9cb879d9ade79" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; fields.</source>
          <target state="translated">변환은 &lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt; 필드를 추출 합니다.</target>
        </trans-unit>
        <trans-unit id="0b804266d47675c8fff80578d89c9217652722e5" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronofield#DAY_OF_MONTH&quot;&gt;&lt;code&gt;DAY_OF_MONTH&lt;/code&gt;&lt;/a&gt; fields. The extraction is only permitted if the temporal object has an ISO chronology, or can be converted to a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">변환은 &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;temporal/chronofield#DAY_OF_MONTH&quot;&gt; &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; &lt;/a&gt; 필드를 추출 합니다. 임시 오브젝트에 ISO 시간이 있거나 &lt;code&gt;LocalDate&lt;/code&gt; 로 변환 될 수있는 경우에만 추출이 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="81623a2ca823b67f80d520c5c052168f4c759622" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;&lt;/a&gt; field. The extraction is only permitted if the temporal object has an ISO chronology, or can be converted to a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">변환은 &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; &lt;/a&gt; 필드를 추출합니다 . 임시 오브젝트에 ISO 시간이 있거나 &lt;code&gt;LocalDate&lt;/code&gt; 로 변환 될 수있는 경우에만 추출이 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9820f4411a835c958ac7328575c291589f31326f" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;&lt;/a&gt; fields. The extraction is only permitted if the temporal object has an ISO chronology, or can be converted to a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">변환은 &lt;a href=&quot;temporal/chronofield#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; &lt;/a&gt; 필드를 추출 합니다. 임시 오브젝트에 ISO 시간이 있거나 &lt;code&gt;LocalDate&lt;/code&gt; 로 변환 될 수있는 경우에만 추출이 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="41faf7243bccfcf6675028684c04068be4e78524" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#YEAR&quot;&gt;&lt;code&gt;year&lt;/code&gt;&lt;/a&gt; field. The extraction is only permitted if the temporal object has an ISO chronology, or can be converted to a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">변환은 &lt;a href=&quot;temporal/chronofield#YEAR&quot;&gt; &lt;code&gt;year&lt;/code&gt; &lt;/a&gt; 필드를 추출합니다 . 임시 오브젝트에 ISO 시간이 있거나 &lt;code&gt;LocalDate&lt;/code&gt; 로 변환 될 수있는 경우에만 추출이 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="6499ccce5fd40cb40838d7075f78094ebeb01d21" translate="yes" xml:space="preserve">
          <source>The conversion loops around the set of units from the amount and uses the &lt;a href=&quot;temporal/chronounit#YEARS&quot;&gt;&lt;code&gt;YEARS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;temporal/chronounit#MONTHS&quot;&gt;&lt;code&gt;MONTHS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt; units to create a period. If any other units are found then an exception is thrown.</source>
          <target state="translated">변환은 금액에서 단위 집합을 순환하며 &lt;a href=&quot;temporal/chronounit#YEARS&quot;&gt; &lt;code&gt;YEARS&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;temporal/chronounit#MONTHS&quot;&gt; &lt;code&gt;MONTHS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; &lt;/a&gt; 단위를 사용하여 기간을 만듭니다. 다른 단위가 발견되면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3ddd488943b48f0d8ffd75f000f91af91af30040" translate="yes" xml:space="preserve">
          <source>The conversion loops around the set of units from the amount and uses the &lt;a href=&quot;temporal/temporalunit#getDuration()&quot;&gt;duration&lt;/a&gt; of the unit to calculate the total &lt;code&gt;Duration&lt;/code&gt;. Only a subset of units are accepted by this method. The unit must either have an &lt;a href=&quot;temporal/temporalunit#isDurationEstimated()&quot;&gt;exact duration&lt;/a&gt; or be &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;ChronoUnit.DAYS&lt;/code&gt;&lt;/a&gt; which is treated as 24 hours. If any other units are found then an exception is thrown.</source>
          <target state="translated">변환은 금액에서 단위 집합을 반복하고 단위 &lt;a href=&quot;temporal/temporalunit#getDuration()&quot;&gt;기간&lt;/a&gt; 을 사용 하여 총 &lt;code&gt;Duration&lt;/code&gt; 을 계산합니다 . 이 방법에서는 일부 단위 만 허용됩니다. 단위는 &lt;a href=&quot;temporal/temporalunit#isDurationEstimated()&quot;&gt;정확한 기간&lt;/a&gt; 이거나 24 시간으로 처리되는 &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;ChronoUnit.DAYS&lt;/code&gt; &lt;/a&gt; 여야합니다 . 다른 단위가 발견되면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d2027683d68cc5bd618e3f017b9f0057b1248599" translate="yes" xml:space="preserve">
          <source>The conversion loops around the set of units from the amount and uses the &lt;a href=&quot;temporal/temporalunit#getDuration--&quot;&gt;duration&lt;/a&gt; of the unit to calculate the total &lt;code&gt;Duration&lt;/code&gt;. Only a subset of units are accepted by this method. The unit must either have an &lt;a href=&quot;temporal/temporalunit#isDurationEstimated--&quot;&gt;exact duration&lt;/a&gt; or be &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;ChronoUnit.DAYS&lt;/code&gt;&lt;/a&gt; which is treated as 24 hours. If any other units are found then an exception is thrown.</source>
          <target state="translated">변환은 양에서 단위 집합 주위를 반복하고 단위 &lt;a href=&quot;temporal/temporalunit#getDuration--&quot;&gt;기간&lt;/a&gt; 을 사용 하여 총 &lt;code&gt;Duration&lt;/code&gt; 를 계산합니다 . 이 방법에서는 단위의 하위 집합 만 허용됩니다. 단위는 &lt;a href=&quot;temporal/temporalunit#isDurationEstimated--&quot;&gt;정확한 기간을&lt;/a&gt; 갖거나 24 시간으로 처리되는 &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;ChronoUnit.DAYS&lt;/code&gt; &lt;/a&gt; 여야합니다 . 다른 단위가 발견되면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="de374e2fe38f8f6723cc9d835befd0090683f98b" translate="yes" xml:space="preserve">
          <source>The conversion of a pathname string to or from an abstract pathname is inherently system-dependent. When an abstract pathname is converted into a pathname string, each name is separated from the next by a single copy of the default &lt;em&gt;separator character&lt;/em&gt;. The default name-separator character is defined by the system property &lt;code&gt;file.separator&lt;/code&gt;, and is made available in the public static fields &lt;a href=&quot;#separator&quot;&gt;&lt;code&gt;separator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#separatorChar&quot;&gt;&lt;code&gt;separatorChar&lt;/code&gt;&lt;/a&gt; of this class. When a pathname string is converted into an abstract pathname, the names within it may be separated by the default name-separator character or by any other name-separator character that is supported by the underlying system.</source>
          <target state="translated">추상 경로 이름과의 경로 이름 문자열 변환은 본질적으로 시스템에 따라 다릅니다. 추상 경로 이름이 경로 이름 문자열로 변환 될 때 각 이름은 기본 &lt;em&gt;구분 문자&lt;/em&gt; 의 단일 복사본으로 다음 이름과 구분됩니다 . 기본 이름 구분 문자는 시스템 속성 &lt;code&gt;file.separator&lt;/code&gt; 에 의해 정의 되며이 클래스 의 공용 정적 필드 &lt;a href=&quot;#separator&quot;&gt; &lt;code&gt;separator&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#separatorChar&quot;&gt; &lt;code&gt;separatorChar&lt;/code&gt; &lt;/a&gt; 에서 사용할 수 있습니다 . 경로 이름 문자열이 추상 경로 이름으로 변환 될 때 그 안의 이름은 기본 이름 구분 문자 또는 기본 시스템에서 지원하는 다른 이름 구분 문자로 구분 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="adb8598ff9c8ce94abf829e4e923229b7296bb69" translate="yes" xml:space="preserve">
          <source>The conversion of a pathname string to or from an abstract pathname is inherently system-dependent. When an abstract pathname is converted into a pathname string, each name is separated from the next by a single copy of the default &lt;em&gt;separator character&lt;/em&gt;. The default name-separator character is defined by the system property &lt;code&gt;file.separator&lt;/code&gt;, and is made available in the public static fields &lt;code&gt;&lt;a href=&quot;file#separator&quot;&gt;&lt;code&gt;separator&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;file#separatorChar&quot;&gt;&lt;code&gt;separatorChar&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; of this class. When a pathname string is converted into an abstract pathname, the names within it may be separated by the default name-separator character or by any other name-separator character that is supported by the underlying system.</source>
          <target state="translated">경로 이름 문자열을 추상 경로 이름으로 또는 추상 경로 이름으로 변환하는 것은 본질적으로 시스템에 따라 다릅니다. 추상 경로 이름이 경로 이름 문자열로 변환되면 각 이름은 기본 &lt;em&gt;구분 문자&lt;/em&gt; 의 단일 사본으로 다음 이름과 구분됩니다 . 기본 이름 구분 문자는 시스템 특성 &lt;code&gt;file.separator&lt;/code&gt; 에 의해 정의 되며이 클래스 의 공용 정적 필드 &lt;code&gt;&lt;a href=&quot;file#separator&quot;&gt;&lt;code&gt;separator&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;file#separatorChar&quot;&gt;&lt;code&gt;separatorChar&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 에서 사용 가능합니다. 경로 이름 문자열이 추상 경로 이름으로 변환 될 때 기본 이름 구분 문자 또는 기본 시스템에서 지원하는 다른 이름 구분 문자로 경로 이름이 분리 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f9ba598909cafcafc84e677c238200abf9bf623" translate="yes" xml:space="preserve">
          <source>The conversion process is the reverse of that used by the URLEncoder class. It is assumed that all characters in the encoded string are one of the following: &quot;&lt;code&gt;a&lt;/code&gt;&quot; through &quot;&lt;code&gt;z&lt;/code&gt;&quot;, &quot;&lt;code&gt;A&lt;/code&gt;&quot; through &quot;&lt;code&gt;Z&lt;/code&gt;&quot;, &quot;&lt;code&gt;0&lt;/code&gt;&quot; through &quot;&lt;code&gt;9&lt;/code&gt;&quot;, and &quot;&lt;code&gt;-&lt;/code&gt;&quot;, &quot;&lt;code&gt;_&lt;/code&gt;&quot;, &quot;&lt;code&gt;.&lt;/code&gt;&quot;, and &quot;&lt;code&gt;*&lt;/code&gt;&quot;. The character &quot;&lt;code&gt;%&lt;/code&gt;&quot; is allowed but is interpreted as the start of a special escaped sequence.</source>
          <target state="translated">변환 프로세스는 URLEncoder 클래스에서 사용하는 프로세스와 반대입니다. 인코딩 된 문자열의 모든 문자는 &quot; &lt;code&gt;a&lt;/code&gt; &quot;~ &quot; &lt;code&gt;z&lt;/code&gt; &quot;, &quot; &lt;code&gt;A&lt;/code&gt; &quot;~ &quot; &lt;code&gt;Z&lt;/code&gt; &quot;, &quot; &lt;code&gt;0&lt;/code&gt; &quot;~ &quot; &lt;code&gt;9&lt;/code&gt; &quot;및 &quot; &lt;code&gt;-&lt;/code&gt; &quot;, &quot; &lt;code&gt;_&lt;/code&gt; &quot;, &quot;중 하나라고 가정합니다. &lt;code&gt;.&lt;/code&gt; &quot;및&quot; &lt;code&gt;*&lt;/code&gt; &quot;. 문자 &quot; &lt;code&gt;%&lt;/code&gt; &quot;는 허용되지만 특수 이스케이프 된 시퀀스의 시작으로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="d9df38eb05556485f863486b970a591e4776043a" translate="yes" xml:space="preserve">
          <source>The conversion state for the text range - RAW_TEXT or CONVERTED_TEXT.</source>
          <target state="translated">텍스트 범위의 변환 상태-RAW_TEXT 또는 CONVERTED_TEXT</target>
        </trans-unit>
        <trans-unit id="fb1ff74c5aed55df321b5f69eb36786f520db7dc" translate="yes" xml:space="preserve">
          <source>The conversion typically uses the &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt; field, which is standardized across calendar systems.</source>
          <target state="translated">변환은 일반적으로 달력 시스템에서 표준화 된 &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 필드를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="91ef23b79edd0ee7ecba7d34b31c55ea64ca7d3f" translate="yes" xml:space="preserve">
          <source>The conversion uses the &lt;a href=&quot;temporal/temporalqueries#localDate()&quot;&gt;&lt;code&gt;TemporalQueries.localDate()&lt;/code&gt;&lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">변환은 &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 필드 추출에 의존 하는 &lt;a href=&quot;temporal/temporalqueries#localDate()&quot;&gt; &lt;code&gt;TemporalQueries.localDate()&lt;/code&gt; &lt;/a&gt; 쿼리를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="cbfdcd807f9acab66a49b1ca8f9b0af23d70ee42" translate="yes" xml:space="preserve">
          <source>The conversion uses the &lt;a href=&quot;temporal/temporalqueries#localDate--&quot;&gt;&lt;code&gt;TemporalQueries.localDate()&lt;/code&gt;&lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">변환은 &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 필드 추출에 의존 하는 &lt;a href=&quot;temporal/temporalqueries#localDate--&quot;&gt; &lt;code&gt;TemporalQueries.localDate()&lt;/code&gt; &lt;/a&gt; 쿼리를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="75c09d569ddb4be209738f9e5466154e768cc101" translate="yes" xml:space="preserve">
          <source>The conversion uses the &lt;a href=&quot;temporal/temporalqueries#localTime()&quot;&gt;&lt;code&gt;TemporalQueries.localTime()&lt;/code&gt;&lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">변환은 &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;NANO_OF_DAY&lt;/code&gt; &lt;/a&gt; 필드 추출에 의존 하는 &lt;a href=&quot;temporal/temporalqueries#localTime()&quot;&gt; &lt;code&gt;TemporalQueries.localTime()&lt;/code&gt; &lt;/a&gt; 쿼리를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="dbddf0561d8a6eecdccec00ea1f9dc5a0286620b" translate="yes" xml:space="preserve">
          <source>The conversion uses the &lt;a href=&quot;temporal/temporalqueries#localTime--&quot;&gt;&lt;code&gt;TemporalQueries.localTime()&lt;/code&gt;&lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">변환은 &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;NANO_OF_DAY&lt;/code&gt; &lt;/a&gt; 필드 추출에 의존 하는 &lt;a href=&quot;temporal/temporalqueries#localTime--&quot;&gt; &lt;code&gt;TemporalQueries.localTime()&lt;/code&gt; &lt;/a&gt; 쿼리를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="4823cbb58569805026b0df6490f23ca04cc32228" translate="yes" xml:space="preserve">
          <source>The conversion uses the &lt;a href=&quot;temporal/temporalqueries#offset()&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt;&lt;code&gt;OFFSET_SECONDS&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">변환은 &lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt; &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; &lt;/a&gt; 필드 추출에 의존 하는 &lt;a href=&quot;temporal/temporalqueries#offset()&quot;&gt; &lt;code&gt;TemporalQueries.offset()&lt;/code&gt; &lt;/a&gt; 쿼리를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="3ab0f44ea5fc468726fdc2960c4ee1963521f34d" translate="yes" xml:space="preserve">
          <source>The conversion uses the &lt;a href=&quot;temporal/temporalqueries#offset--&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt;&lt;code&gt;OFFSET_SECONDS&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">변환은 &lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt; &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; &lt;/a&gt; 필드 추출에 의존 하는 &lt;a href=&quot;temporal/temporalqueries#offset--&quot;&gt; &lt;code&gt;TemporalQueries.offset()&lt;/code&gt; &lt;/a&gt; 쿼리를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="b208e5c531e20f8176aafb88407764919d7c63ff" translate="yes" xml:space="preserve">
          <source>The conversion will first obtain a &lt;code&gt;ZoneId&lt;/code&gt; from the temporal object, falling back to a &lt;code&gt;ZoneOffset&lt;/code&gt; if necessary. It will then try to obtain an &lt;code&gt;Instant&lt;/code&gt;, falling back to a &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; if necessary. The result will be either the combination of &lt;code&gt;ZoneId&lt;/code&gt; or &lt;code&gt;ZoneOffset&lt;/code&gt; with &lt;code&gt;Instant&lt;/code&gt; or &lt;code&gt;ChronoLocalDateTime&lt;/code&gt;. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects. The result uses this chronology.</source>
          <target state="translated">변환은 먼저 얻 &lt;code&gt;ZoneId&lt;/code&gt; 를 (A)에 위로 떨어지는 물체로부터 시간적 &lt;code&gt;ZoneOffset&lt;/code&gt; 필요. 그런 다음 &lt;code&gt;Instant&lt;/code&gt; 를 얻으려고 시도하고 필요한 경우 &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; 으로 돌아갑니다 . 결과는 &lt;code&gt;ZoneId&lt;/code&gt; 또는 &lt;code&gt;ZoneOffset&lt;/code&gt; 과 &lt;code&gt;Instant&lt;/code&gt; 또는 &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; 의 조합입니다 . 구현시 관련 개체에 해당하는 필드에 액세스하는 등의 최적화를 수행 할 수 있습니다. 결과는이 연대기를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="571d73d0d2e70c92b228d6825ccb709402d177e7" translate="yes" xml:space="preserve">
          <source>The conversion will first obtain a &lt;code&gt;ZoneId&lt;/code&gt; from the temporal object, falling back to a &lt;code&gt;ZoneOffset&lt;/code&gt; if necessary. It will then try to obtain an &lt;code&gt;Instant&lt;/code&gt;, falling back to a &lt;code&gt;LocalDateTime&lt;/code&gt; if necessary. The result will be either the combination of &lt;code&gt;ZoneId&lt;/code&gt; or &lt;code&gt;ZoneOffset&lt;/code&gt; with &lt;code&gt;Instant&lt;/code&gt; or &lt;code&gt;LocalDateTime&lt;/code&gt;. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">변환은 먼저 얻 &lt;code&gt;ZoneId&lt;/code&gt; 를 (A)에 위로 떨어지는 물체로부터 시간적 &lt;code&gt;ZoneOffset&lt;/code&gt; 필요. 그런 다음 &lt;code&gt;Instant&lt;/code&gt; 를 얻으려고 시도하고 필요한 경우 &lt;code&gt;LocalDateTime&lt;/code&gt; 으로 돌아갑니다 . 결과는 &lt;code&gt;ZoneId&lt;/code&gt; 또는 &lt;code&gt;ZoneOffset&lt;/code&gt; 과 &lt;code&gt;Instant&lt;/code&gt; 또는 &lt;code&gt;LocalDateTime&lt;/code&gt; 의 조합입니다 . 구현시 관련 개체에 해당하는 필드에 액세스하는 등의 최적화를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4e422bfc9d1ec4b2959561dc366330dfb858376" translate="yes" xml:space="preserve">
          <source>The conversion will first obtain a &lt;code&gt;ZoneOffset&lt;/code&gt; from the temporal object. It will then try to obtain a &lt;code&gt;LocalDateTime&lt;/code&gt;, falling back to an &lt;code&gt;Instant&lt;/code&gt; if necessary. The result will be the combination of &lt;code&gt;ZoneOffset&lt;/code&gt; with either with &lt;code&gt;LocalDateTime&lt;/code&gt; or &lt;code&gt;Instant&lt;/code&gt;. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">변환은 먼저 시간 개체에서 &lt;code&gt;ZoneOffset&lt;/code&gt; 을 얻습니다 . 그런 다음 &lt;code&gt;LocalDateTime&lt;/code&gt; 을 얻으려고 시도하고 필요한 경우 &lt;code&gt;Instant&lt;/code&gt; 로 돌아갑니다 . 결과는 &lt;code&gt;ZoneOffset&lt;/code&gt; 과 &lt;code&gt;LocalDateTime&lt;/code&gt; 또는 &lt;code&gt;Instant&lt;/code&gt; 의 조합입니다 . 구현시 관련 개체에 해당하는 필드에 액세스하는 등의 최적화를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b496942fe294ba32639139266b2d6f7dad507a32" translate="yes" xml:space="preserve">
          <source>The conversion will obtain the chronology using &lt;a href=&quot;../temporal/temporalqueries#chronology()&quot;&gt;&lt;code&gt;TemporalQueries.chronology()&lt;/code&gt;&lt;/a&gt;. If the specified temporal object does not have a chronology, &lt;a href=&quot;isochronology&quot;&gt;&lt;code&gt;IsoChronology&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">변환은 &lt;a href=&quot;../temporal/temporalqueries#chronology()&quot;&gt; &lt;code&gt;TemporalQueries.chronology()&lt;/code&gt; &lt;/a&gt; 사용하여 연대기를 얻습니다 . 지정된 시간 개체에 연대기가 없으면 &lt;a href=&quot;isochronology&quot;&gt; &lt;code&gt;IsoChronology&lt;/code&gt; &lt;/a&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6956bf86f5d6bf1d33c22f2f54c601f1ab0adbc0" translate="yes" xml:space="preserve">
          <source>The conversion will obtain the chronology using &lt;a href=&quot;../temporal/temporalqueries#chronology--&quot;&gt;&lt;code&gt;TemporalQueries.chronology()&lt;/code&gt;&lt;/a&gt;. If the specified temporal object does not have a chronology, &lt;a href=&quot;isochronology&quot;&gt;&lt;code&gt;IsoChronology&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">변환은 &lt;a href=&quot;../temporal/temporalqueries#chronology--&quot;&gt; &lt;code&gt;TemporalQueries.chronology()&lt;/code&gt; &lt;/a&gt; 사용하여 연대기를 얻습니다 . 지정된 시간 객체에 연대기가 없으면 &lt;a href=&quot;isochronology&quot;&gt; &lt;code&gt;IsoChronology&lt;/code&gt; &lt;/a&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="fe7f61d1b35eb9e27b70264bc79f5cd3f1a74eaa" translate="yes" xml:space="preserve">
          <source>The conversion will try to obtain the zone in a way that favours region-based zones over offset-based zones using &lt;a href=&quot;temporal/temporalqueries#zone()&quot;&gt;&lt;code&gt;TemporalQueries.zone()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">변환은 &lt;a href=&quot;temporal/temporalqueries#zone()&quot;&gt; &lt;code&gt;TemporalQueries.zone()&lt;/code&gt; &lt;/a&gt; 사용하여 오프셋 기반 영역보다 지역 기반 영역을 선호하는 방식으로 영역을 얻으려고 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="fc6ad7ff706fd21e39acd2de086b03b0801af3a8" translate="yes" xml:space="preserve">
          <source>The conversion will try to obtain the zone in a way that favours region-based zones over offset-based zones using &lt;a href=&quot;temporal/temporalqueries#zone--&quot;&gt;&lt;code&gt;TemporalQueries.zone()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">변환은 &lt;a href=&quot;temporal/temporalqueries#zone--&quot;&gt; &lt;code&gt;TemporalQueries.zone()&lt;/code&gt; &lt;/a&gt; 사용하여 오프셋 기반 영역보다 영역 기반 영역을 선호하는 방식으로 영역을 가져 오려고 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="0e4e66f19f40297928ec5dc7bae299a63edfb950" translate="yes" xml:space="preserve">
          <source>The conversions cannot be compared.</source>
          <target state="translated">전환을 비교할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="047a76b73af3eddf4a664a5aabf56f3f19a4cb48" translate="yes" xml:space="preserve">
          <source>The cookie is visible to all the pages in the directory you specify, and all the pages in that directory's subdirectories. A cookie's path must include the servlet that set the cookie, for example,</source>
          <target state="translated">쿠키는 지정한 디렉토리의 모든 페이지와 해당 디렉토리의 하위 디렉토리에있는 모든 페이지에서 볼 수 있습니다. 쿠키의 경로에는 쿠키를 설정 한 서블릿이 포함되어야합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="66b1159976a51fc97489bf7eeb58040ea93896f8" translate="yes" xml:space="preserve">
          <source>The cookies associated with this document.</source>
          <target state="translated">이 문서와 관련된 쿠키입니다.</target>
        </trans-unit>
        <trans-unit id="8e3c19248068419434758caed0697299adaf718d" translate="yes" xml:space="preserve">
          <source>The cookies associated with this document. If there are none, the value is an empty string. Otherwise, the value is a string: a semicolon-delimited list of &quot;name, value&quot; pairs for all the cookies associated with the page. For example, &lt;code&gt;name=value;expires=date&lt;/code&gt; .</source>
          <target state="translated">이 문서와 관련된 쿠키입니다. 없는 경우 값은 빈 문자열입니다. 그렇지 않으면 값은 문자열입니다. 페이지와 관련된 모든 쿠키에 대한 &quot;이름, 값&quot;쌍의 세미콜론으로 구분 된 목록입니다. 예 : &lt;code&gt;name=value;expires=date&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a24a3a0bfe8047ac7ffaf6eabdeb93c18e0cb5e0" translate="yes" xml:space="preserve">
          <source>The coordinate system is the same as the hosting &lt;code&gt;Component&lt;/code&gt; (i.e. the &lt;code&gt;Component&lt;/code&gt; returned by the &lt;a href=&quot;#getContainer()&quot;&gt;&lt;code&gt;getContainer&lt;/code&gt;&lt;/a&gt; method). This means a child view lives in the same coordinate system as the parent view unless the parent has explicitly changed the coordinate system. To schedule itself to be repainted a view can call repaint on the hosting &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">좌표계는 호스팅 &lt;code&gt;Component&lt;/code&gt; (즉 , &lt;a href=&quot;#getContainer()&quot;&gt; &lt;code&gt;getContainer&lt;/code&gt; &lt;/a&gt; 메서드에서 반환 된 &lt;code&gt;Component&lt;/code&gt; 요소) 와 동일합니다 . 이는 상위가 명시 적으로 좌표계를 변경하지 않는 한 하위 뷰가 상위 뷰와 동일한 좌표계에 있음을 의미합니다. 다시 그려 지도록 예약하기 위해 뷰는 호스팅하는 &lt;code&gt;Component&lt;/code&gt; 에서 repaint를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="77627fa15f66ec6fd6725232a0b575f22d919cf6" translate="yes" xml:space="preserve">
          <source>The coordinates of the rectangle returned by &lt;code&gt;getBounds2D(BufferedImage)&lt;/code&gt; are not necessarily the same as the coordinates of the &lt;code&gt;BufferedImage&lt;/code&gt; returned by this method. If the upper-left corner coordinates of the rectangle are negative then this part of the rectangle is not drawn. If the upper-left corner coordinates of the rectangle are positive then the filtered image is drawn at that position in the destination &lt;code&gt;BufferedImage&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getBounds2D(BufferedImage)&lt;/code&gt; 의해 반환 된 사각형 의 좌표는이 &lt;code&gt;BufferedImage&lt;/code&gt; 반환 된 BufferedImage 의 좌표와 반드시 동일하지는 않습니다 . 사각형의 왼쪽 위 모서리 좌표가 음수이면 사각형의이 부분이 그려지지 않습니다. 사각형의 왼쪽 위 모서리 좌표가 양수이면 필터링 된 이미지가 대상 &lt;code&gt;BufferedImage&lt;/code&gt; 의 해당 위치에 그려집니다 .</target>
        </trans-unit>
        <trans-unit id="409a92b61b3937edfa43794f73fe03408f3a9070" translate="yes" xml:space="preserve">
          <source>The coordinates of the rectangle returned by &lt;code&gt;getBounds2D(Raster)&lt;/code&gt; are not necessarily the same as the coordinates of the &lt;code&gt;WritableRaster&lt;/code&gt; returned by this method. If the upper-left corner coordinates of rectangle are negative then this part of the rectangle is not drawn. If the coordinates of the rectangle are positive then the filtered image is drawn at that position in the destination &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getBounds2D(Raster)&lt;/code&gt; 의해 반환 된 사각형 의 좌표는 이 메서드에서 반환 된 &lt;code&gt;WritableRaster&lt;/code&gt; 의 좌표와 반드시 같을 필요는 없습니다 . 사각형의 왼쪽 위 모서리 좌표가 음수이면 사각형의이 부분이 그려지지 않습니다. 사각형의 좌표가 양수이면 필터링 된 이미지가 대상 &lt;code&gt;Raster&lt;/code&gt; 의 해당 위치에 그려집니다 .</target>
        </trans-unit>
        <trans-unit id="c8fb12c6825c7fd13f722aba14ab559325916e2b" translate="yes" xml:space="preserve">
          <source>The core responsibility of a FocusTraversalPolicy is to provide algorithms determining the next and previous Components to focus when traversing forward or backward in a UI. Each FocusTraversalPolicy must also provide algorithms for determining the first, last, and default Components in a traversal cycle. First and last Components are used when normal forward and backward traversal, respectively, wraps. The default Component is the first to receive focus when traversing down into a new focus traversal cycle. A FocusTraversalPolicy can optionally provide an algorithm for determining a Window's initial Component. The initial Component is the first to receive focus when a Window is first made visible.</source>
          <target state="translated">FocusTraversalPolicy의 핵심 책임은 UI에서 앞뒤로 이동할 때 초점을 맞출 다음 및 이전 구성 요소를 결정하는 알고리즘을 제공하는 것입니다. 각 FocusTraversalPolicy는 순회주기의 첫 번째, 마지막 및 기본 구성 요소를 결정하기위한 알고리즘도 제공해야합니다. 첫 번째 및 마지막 구성 요소는 각각 일반 순회 및 역방향 순회가 래핑 될 때 사용됩니다. 기본 구성 요소는 새 포커스 탐색 주기로 이동할 때 포커스를받는 첫 번째 구성 요소입니다. FocusTraversalPolicy는 선택적으로 Window의 초기 구성 요소를 결정하는 알고리즘을 제공 할 수 있습니다. 초기 구성 요소는 Window가 처음 표시 될 때 가장 먼저 포커스를받습니다.</target>
        </trans-unit>
        <trans-unit id="f6480e7240464b4a2342f02bbc08ff5cfc819e6e" translate="yes" xml:space="preserve">
          <source>The core specification describes attributes of the &lt;code&gt;Node&lt;/code&gt; interface that are different for different node node types but does not describe &lt;code&gt;XPATH_NAMESPACE_NODE&lt;/code&gt;, so here is a description of those attributes for this node type. All attributes of &lt;code&gt;Node&lt;/code&gt; not described in this section have a &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; value.</source>
          <target state="translated">핵심 사양은 노드 노드 유형에 따라 다르지만 &lt;code&gt;XPATH_NAMESPACE_NODE&lt;/code&gt; 를 설명하지 않는 &lt;code&gt;Node&lt;/code&gt; 인터페이스의 속성을 설명 하므로 여기에이 노드 유형에 대한 속성에 대한 설명이 있습니다. 이 섹션에 설명되지 않은 &lt;code&gt;Node&lt;/code&gt; 의 모든 속성은 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="a564f760f6b0979aedc01dc69a6463047e73f522" translate="yes" xml:space="preserve">
          <source>The corner components, if provided, are aligned with the ends of the scrollbars and headers. If there is a vertical scrollbar, the right corners appear; if there is a horizontal scrollbar, the lower corners appear; a row header gets left corners, and a column header gets upper corners.</source>
          <target state="translated">모서리 구성 요소 (제공된 경우)는 스크롤 막대 및 머리글의 끝과 정렬됩니다. 수직 스크롤바가 있으면 오른쪽 모서리가 나타납니다. 수평 스크롤바가 있으면 하단 모서리가 나타납니다. 행 머리글은 왼쪽 모서리가되고 열 머리글은 위쪽 모서리가됩니다.</target>
        </trans-unit>
        <trans-unit id="356cb558fb1125bf97bfd4f9a42b1040449cfb5d" translate="yes" xml:space="preserve">
          <source>The corresponding &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; should be checked for the version that was actually used. If the version is not set in a request, then the version requested will be that of the sending &lt;a href=&quot;httpclient&quot;&gt;&lt;code&gt;HttpClient&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">해당 &lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 에서 실제로 사용 된 버전을 확인해야합니다. 요청에 버전이 설정되지 않은 경우 요청 된 버전은 전송하는 &lt;a href=&quot;httpclient&quot;&gt; &lt;code&gt;HttpClient&lt;/code&gt; &lt;/a&gt; 의 버전이됩니다 .</target>
        </trans-unit>
        <trans-unit id="67cce5ff929f9bdadcc685d8ff1ecd96493940f0" translate="yes" xml:space="preserve">
          <source>The corresponding &lt;code&gt;Bindings&lt;/code&gt;.</source>
          <target state="translated">해당 &lt;code&gt;Bindings&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b480994a7091e3426c5edaa423c4f82d133e2289" translate="yes" xml:space="preserve">
          <source>The corresponding &lt;code&gt;TIFFTag&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">해당 &lt;code&gt;TIFFTag&lt;/code&gt; 또는 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5b5694ff96b1243a80d829371f5c9fdf5f42a256" translate="yes" xml:space="preserve">
          <source>The corresponding &lt;code&gt;refKind&lt;/code&gt; value for this kind of method handle, as defined by &lt;a href=&quot;../invoke/methodhandleinfo&quot;&gt;&lt;code&gt;MethodHandleInfo&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../invoke/methodhandleinfo&quot;&gt; &lt;code&gt;MethodHandleInfo&lt;/code&gt; 에&lt;/a&gt; 의해 정의 된 이러한 종류의 메서드 핸들에 해당하는 &lt;code&gt;refKind&lt;/code&gt; 값</target>
        </trans-unit>
        <trans-unit id="b70155a38b4df111e6e3074a162bafc1ae94748e" translate="yes" xml:space="preserve">
          <source>The corresponding Open Type, &lt;em&gt;opentype(J)&lt;/em&gt;. This is an instance of a subclass of &lt;a href=&quot;openmbean/opentype&quot;&gt;&lt;code&gt;OpenType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">해당 오픈 타입, &lt;em&gt;오픈 타입 (J)&lt;/em&gt; . 이것은 &lt;a href=&quot;openmbean/opentype&quot;&gt; &lt;code&gt;OpenType&lt;/code&gt; &lt;/a&gt; 의 서브 클래스 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="0c40dcf63722a8c192ee371c1356c058acb3b36f" translate="yes" xml:space="preserve">
          <source>The corresponding method in &lt;code&gt;ObjectInputStream&lt;/code&gt; is &lt;code&gt;resolveProxyClass&lt;/code&gt;. For a given subclass of &lt;code&gt;ObjectOutputStream&lt;/code&gt; that overrides this method, the &lt;code&gt;resolveProxyClass&lt;/code&gt; method in the corresponding subclass of &lt;code&gt;ObjectInputStream&lt;/code&gt; must read any data or objects written by &lt;code&gt;annotateProxyClass&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ObjectInputStream&lt;/code&gt; 의 해당 메소드 는 &lt;code&gt;resolveProxyClass&lt;/code&gt; 입니다. 이 메소드를 대체 하는 지정된 &lt;code&gt;ObjectOutputStream&lt;/code&gt; 서브 클래스의 경우, &lt;code&gt;ObjectInputStream&lt;/code&gt; 의 해당 서브 클래스에 있는 &lt;code&gt;resolveProxyClass&lt;/code&gt; 메소드는 &lt;code&gt;annotateProxyClass&lt;/code&gt; 로 작성된 데이터 또는 오브젝트를 읽어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c30c5d8c1a677f64708a87d05ecef9aaa2803beb" translate="yes" xml:space="preserve">
          <source>The corresponding method in &lt;code&gt;ObjectOutputStream&lt;/code&gt; is &lt;code&gt;annotateClass&lt;/code&gt;. This method will be invoked only once for each unique class in the stream. This method can be implemented by subclasses to use an alternate loading mechanism but must return a &lt;code&gt;Class&lt;/code&gt; object. Once returned, if the class is not an array class, its serialVersionUID is compared to the serialVersionUID of the serialized class, and if there is a mismatch, the deserialization fails and an &lt;a href=&quot;invalidclassexception&quot;&gt;&lt;code&gt;InvalidClassException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;ObjectOutputStream&lt;/code&gt; 의 해당 메소드 는 &lt;code&gt;annotateClass&lt;/code&gt; 입니다. 이 메소드는 스트림의 각 고유 클래스에 대해 한 번만 호출됩니다. 이 메소드는 대체 로딩 메커니즘을 사용하기 위해 서브 클래스에 의해 구현 될 수 있지만 &lt;code&gt;Class&lt;/code&gt; 오브젝트를 리턴해야 합니다. 반환 된 클래스가 배열 클래스가 아닌 경우 serialVersionUID는 직렬화 된 클래스의 serialVersionUID와 비교되며 일치하지 않는 경우 역 직렬화가 실패하고 &lt;a href=&quot;invalidclassexception&quot;&gt; &lt;code&gt;InvalidClassException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3ac5720f125cacb45fafbd1b321034291ac3311a" translate="yes" xml:space="preserve">
          <source>The corresponding method in &lt;code&gt;ObjectOutputStream&lt;/code&gt; is &lt;code&gt;annotateProxyClass&lt;/code&gt;. For a given subclass of &lt;code&gt;ObjectInputStream&lt;/code&gt; that overrides this method, the &lt;code&gt;annotateProxyClass&lt;/code&gt; method in the corresponding subclass of &lt;code&gt;ObjectOutputStream&lt;/code&gt; must write any data or objects read by this method.</source>
          <target state="translated">&lt;code&gt;ObjectOutputStream&lt;/code&gt; 의 해당 메소드 는 &lt;code&gt;annotateProxyClass&lt;/code&gt; 입니다. 이 메소드를 대체 하는 지정된 &lt;code&gt;ObjectInputStream&lt;/code&gt; 서브 클래스의 경우, &lt;code&gt;ObjectOutputStream&lt;/code&gt; 의 해당 서브 클래스에 있는 &lt;code&gt;annotateProxyClass&lt;/code&gt; 메소드는 이 메소드가 읽는 데이터 또는 오브젝트를 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="0abe9c5fa30d544cee3d19e6e84e698aa8e83f99" translate="yes" xml:space="preserve">
          <source>The count must be at least 1.</source>
          <target state="translated">개수는 1 이상이어야합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
