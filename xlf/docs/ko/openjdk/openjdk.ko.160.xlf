<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="9bbd13add8ba126043071ece75b6a53958168b5c" translate="yes" xml:space="preserve">
          <source>Thrown when an attempt is made to apply either of the following: A subquery expression to an MBean or a qualified attribute expression to an MBean of the wrong class.</source>
          <target state="translated">다음 중 하나를 적용하려고 시도 할 때 발생합니다. 서브 쿼리 표현식을 MBean에 또는 규정 된 속성 표현식을 잘못된 클래스의 MBean에 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="e2f5ccd6d74e1e11b46464103f4bd32cb8d0e745" translate="yes" xml:space="preserve">
          <source>Thrown when an attempt is made to apply either of the following: A subquery expression to an MBean or a qualified attribute expression to an MBean of the wrong class. This exception is used internally by JMX during the evaluation of a query. User code does not usually see it.</source>
          <target state="translated">다음 중 하나를 적용하려고 시도 할 때 발생합니다. 서브 쿼리 표현식을 MBean에 또는 규정 된 속성 표현식을 잘못된 클래스의 MBean에 적용하십시오. 이 예외는 쿼리 평가 중에 JMX에서 내부적으로 사용됩니다. 사용자 코드는 보통 그것을 보지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5d8f8ddb11e46f4a61f57676c0712e4c59869f15" translate="yes" xml:space="preserve">
          <source>Thrown when an exception happens during Introspection.</source>
          <target state="translated">내부 검사 중에 예외가 발생하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cdf4b1fcd2c1835e34a0b539588da56420cfbfe4" translate="yes" xml:space="preserve">
          <source>Thrown when an exceptional arithmetic condition has occurred.</source>
          <target state="translated">예외적 인 산술 조건이 발생하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a9bb4ab12ab75f88250315d9db590482589a471c" translate="yes" xml:space="preserve">
          <source>Thrown when an exceptional arithmetic condition has occurred. For example, an integer &quot;divide by zero&quot; throws an instance of this class. &lt;code&gt;ArithmeticException&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="translated">예외적 인 산술 조건이 발생했을 때 발생합니다. 예를 들어 정수 &quot;0으로 나누기&quot;는이 클래스의 인스턴스를 던집니다. &lt;code&gt;ArithmeticException&lt;/code&gt; 객체는 &lt;a href=&quot;throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;억제가 비활성화되었거나 스택 추적이 쓰기 불가능한&lt;/a&gt; 것처럼 가상 머신에 의해 생성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5e4095093e5e2e1f08f1094f0cb7cdc298b4807f" translate="yes" xml:space="preserve">
          <source>Thrown when an exceptional arithmetic condition has occurred. For example, an integer &quot;divide by zero&quot; throws an instance of this class. &lt;code&gt;ArithmeticException&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="translated">예외적 인 산술 조건이 발생하면 발생합니다. 예를 들어 정수 &quot;0으로 나누기&quot;는이 클래스의 인스턴스를 발생시킵니다. &lt;code&gt;ArithmeticException&lt;/code&gt; 객체는, &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;억제를 무효로하거나 스택 트레이스를 쓸 수없는&lt;/a&gt; 것처럼 가상 머신에 의해 구축 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e4c3b51563fba6681b56fff23ad6e3f7caa032a5" translate="yes" xml:space="preserve">
          <source>Thrown when an incompatible class change has occurred to some class definition.</source>
          <target state="translated">일부 클래스 정의에 호환되지 않는 클래스 변경이 발생한 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d03dbcc1ff09820ec670644adf9fb836fd881505" translate="yes" xml:space="preserve">
          <source>Thrown when an incompatible class change has occurred to some class definition. The definition of some class, on which the currently executing method depends, has since changed.</source>
          <target state="translated">일부 클래스 정의에 호환되지 않는 클래스 변경이 발생한 경우 발생합니다. 현재 실행중인 메소드가 의존하는 일부 클래스의 정의가 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="859c313b24fee600258c58da585f738aa69eefda" translate="yes" xml:space="preserve">
          <source>Thrown when an instance is required to have a Serializable interface.</source>
          <target state="translated">인스턴스에 직렬화 가능 인터페이스가 필요한 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8212e9b4f24451f5d6042e552f5a1924bf917b44" translate="yes" xml:space="preserve">
          <source>Thrown when an instance is required to have a Serializable interface. The serialization runtime or the class of the instance can throw this exception. The argument should be the name of the class.</source>
          <target state="translated">인스턴스에 직렬화 가능 인터페이스가 필요한 경우에 발생합니다. 직렬화 런타임 또는 인스턴스 클래스에서이 예외가 발생할 수 있습니다. 인수는 클래스 이름이어야합니다.</target>
        </trans-unit>
        <trans-unit id="68caee0d2483ccee0c8bedc33ef0d8c32c01186f" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid MBean attribute is passed to a query constructing method.</source>
          <target state="translated">유효하지 않은 MBean 속성이 쿼리 생성 메소드에 전달 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5b4924793bd0e16d66f4de3676bc5bc92d8b866d" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid MBean attribute is passed to a query constructing method. This exception is used internally by JMX during the evaluation of a query. User code does not usually see it.</source>
          <target state="translated">유효하지 않은 MBean 속성이 쿼리 생성 메소드에 전달 될 때 발생합니다. 이 예외는 쿼리 평가 중에 JMX에서 내부적으로 사용됩니다. 사용자 코드는 보통 그것을 보지 않습니다.</target>
        </trans-unit>
        <trans-unit id="65027c2cbefb9a86f7e5896157d0a564dc68c8a2" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid expression is passed to a method for constructing a query.</source>
          <target state="translated">쿼리를 작성하기위한 메소드에 유효하지 않은 표현식이 전달 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="612fd061d4632211a9f42160d42efe19a4953464" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid expression is passed to a method for constructing a query. This exception is used internally by JMX during the evaluation of a query. User code does not usually see it.</source>
          <target state="translated">쿼리를 작성하기위한 메소드에 유효하지 않은 표현식이 전달 될 때 발생합니다. 이 예외는 쿼리 평가 중에 JMX에서 내부적으로 사용됩니다. 사용자 코드는 보통 그것을 보지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d5156c265aa48ef9e6123c4e2b94e041b51d8612" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid string operation is passed to a method for constructing a query.</source>
          <target state="translated">유효하지 않은 문자열 연산이 쿼리를 생성하는 메소드에 전달 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1a721eac456b7c9447845cc8c07c5d51ce86fd74" translate="yes" xml:space="preserve">
          <source>Thrown when an unknown but serious exception has occurred in the Java Virtual Machine.</source>
          <target state="translated">Java Virtual Machine에서 알 수 없지만 심각한 예외가 발생한 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a14a40e60ef7d4bb5ace0b7a526297fb2ebdee8e" translate="yes" xml:space="preserve">
          <source>Thrown when code that is dependent on a keyboard, display, or mouse is called in an environment that does not support a keyboard, display, or mouse.</source>
          <target state="translated">키보드, 디스플레이 또는 마우스를 지원하지 않는 환경에서 키보드, 디스플레이 또는 마우스에 종속 된 코드가 호출 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="25db40a8d175cc35f11aff538e81340fae831424" translate="yes" xml:space="preserve">
          <source>Thrown when code that is dependent on a keyboard, display, or mouse is called in an environment that does not support a keyboard, display, or mouse. Any code that depends on any of those devices should firstly ensure their availability using the &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; method and throw &lt;code&gt;HeadlessException&lt;/code&gt; if the latter returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">키보드, 디스플레이 또는 마우스를 지원하지 않는 환경에서 키보드, 디스플레이 또는 마우스에 종속 된 코드가 호출 될 때 발생합니다. 이러한 장치에 의존하는 모든 코드는 먼저 &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; 메서드를 사용하여 가용성을 확인하고 후자가 &lt;code&gt;true&lt;/code&gt; 를 반환하면 &lt;code&gt;HeadlessException&lt;/code&gt; 을 throw 해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="99f0535770ad610db510a22dd91b17d0ecb07058" translate="yes" xml:space="preserve">
          <source>Thrown when control information that was read from an object stream violates internal consistency checks.</source>
          <target state="translated">객체 스트림에서 읽은 제어 정보가 내부 일관성 검사를 위반할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="10a32691a8fe8b29ae84b519d5eecc4ef5977d3a" translate="yes" xml:space="preserve">
          <source>Thrown when creating a &lt;a href=&quot;modulelayer&quot;&gt;module layer&lt;/a&gt; fails.</source>
          <target state="translated">&lt;a href=&quot;modulelayer&quot;&gt;모듈 계층&lt;/a&gt; 생성이 실패 할 때 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="99ebcfaf6131629d5267e51aab4164218dddbe86" translate="yes" xml:space="preserve">
          <source>Thrown when reading a module descriptor and the module descriptor is found to be malformed or otherwise cannot be interpreted as a module descriptor.</source>
          <target state="translated">모듈 설명자를 읽을 때 발생하며 모듈 설명자가 잘못된 형식으로 발견되거나 그렇지 않으면 모듈 설명 자로 해석 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bf20b9e4ffc2c2b1f8881fb05d4f62d7e499651b" translate="yes" xml:space="preserve">
          <source>Thrown when resolving a set of modules, or resolving a set of modules with service binding, fails.</source>
          <target state="translated">모듈 세트를 해석하거나 서비스 바인딩을 사용하여 모듈 세트를 해석 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a6d94c66beac535279aeecb37d1880f959ac08af" translate="yes" xml:space="preserve">
          <source>Thrown when serialization or deserialization is not active.</source>
          <target state="translated">직렬화 또는 역 직렬화가 활성화되지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5d46bdd3f1bde41e39251582589cfaad576ea3a9" translate="yes" xml:space="preserve">
          <source>Thrown when the &quot;verifier&quot; detects that a class file, though well formed, contains some sort of internal inconsistency or security problem.</source>
          <target state="translated">&quot;검증 자&quot;가 클래스 파일에 잘 구성되어 있지만 일종의 내부 불일치 또는 보안 문제가 있음을 감지하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e008bbf65d9a350656cb038f08e70432f6f069f3" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine attempts to read a class file and determines that the file is malformed or otherwise cannot be interpreted as a class file.</source>
          <target state="translated">JVM (Java Virtual Machine)이 클래스 파일을 읽으려고 시도하고 파일이 잘못되었거나 클래스 파일로 해석 될 수 없음을 판별하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8dc1214c2d99c634bec6c595d0849d6c2fe5591c" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine attempts to read a class file and determines that the major and minor version numbers in the file are not supported.</source>
          <target state="translated">JVM (Java Virtual Machine)이 클래스 파일을 읽으려고 시도하고 파일의 주 버전 및 부 버전 번호가 지원되지 않는 것으로 판명 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="225d524010f1bd6efec2c88237f9c71cbb8350e3" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector.</source>
          <target state="translated">JVM (Java Virtual Machine)에 메모리가 부족하여 오브젝트를 할당 할 수없고 가비지 콜렉터가 더 이상 메모리를 사용할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9bb8f05d665e17abfa0a50b22f1a9f2c8b5e6512" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector. &lt;code&gt;OutOfMemoryError&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="translated">Java Virtual Machine이 메모리가 부족하여 객체를 할당 할 수없고 가비지 수집기가 더 이상 메모리를 사용할 수 없을 때 발생합니다. &lt;code&gt;OutOfMemoryError&lt;/code&gt; 개체는 &lt;a href=&quot;throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;억제가 비활성화되었거나 스택 추적이 쓰기 불가능한&lt;/a&gt; 것처럼 가상 머신에 의해 생성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc64fdd683025546acfff552400f086c70aac922" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector. &lt;code&gt;OutOfMemoryError&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="translated">JVM (Java Virtual Machine)에 메모리가 부족하여 오브젝트를 할당 할 수없고 가비지 콜렉터가 더 이상 메모리를 사용할 수 없을 때 발생합니다. &lt;code&gt;OutOfMemoryError&lt;/code&gt; 객체는 &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;억제가 비활성화되거나 스택 추적이 쓰기 가능하지 않은&lt;/a&gt; 것처럼 가상 시스템에 의해 구성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="031c30cc5094ce5c4a0da5e119a594f2fec0e626" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine detects a circularity in the superclass hierarchy of a class being loaded.</source>
          <target state="translated">Java Virtual Machine이로드중인 클래스의 수퍼 클래스 계층에서 순환 성을 감지하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="212e011343d58000abfbc7c33228a1c8770b4591" translate="yes" xml:space="preserve">
          <source>Thrown when the Serialization runtime detects one of the following problems with a Class.</source>
          <target state="translated">직렬화 런타임이 클래스에 대해 다음 문제점 중 하나를 발견하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="268d43717775e9a46e419decbb0b34f324b2fc13" translate="yes" xml:space="preserve">
          <source>Thrown when the annotation parser attempts to read an annotation from a class file and determines that the annotation is malformed.</source>
          <target state="translated">주석 파서가 클래스 파일에서 주석을 읽으려고 시도하고 주석이 잘못되었다고 판단 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c2d93b2e90840d752626ad4f57ce3e02d72ee34d" translate="yes" xml:space="preserve">
          <source>Thrown when the annotation parser attempts to read an annotation from a class file and determines that the annotation is malformed. This error can be thrown by the &lt;a href=&quot;../reflect/annotatedelement&quot;&gt;API used to read annotations reflectively&lt;/a&gt;.</source>
          <target state="translated">주석 파서가 클래스 파일에서 주석을 읽으려고 시도하고 주석이 잘못되었다고 판단 할 때 발생합니다. 이 오류는 &lt;a href=&quot;../reflect/annotatedelement&quot;&gt;주석을 반사적으로 읽는 데 사용되는 API에&lt;/a&gt; 의해 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dd4f259c02812b99fbe9dbe5ae49cd400c3a3c49" translate="yes" xml:space="preserve">
          <source>Thrown when the opening handshake has failed.</source>
          <target state="translated">여는 악수가 실패했을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c6589574e8059517df6273b7c1514557652f47ad" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;</source>
          <target state="translated">예외 &lt;a href=&quot;../../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;는 UnsupportedOperationException가&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc7e5f5a07e99c66c5fe5b4b682ce8c11ab4f35b" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">예외 &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f7cc30911f6bc18ccf83a3d8c0de18fcd8f93d5" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../clonenotsupportedexception&quot;&gt;&lt;code&gt;CloneNotSupportedException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">예외 &lt;a href=&quot;../clonenotsupportedexception&quot;&gt; &lt;code&gt;CloneNotSupportedException&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="429c4123a0cc6f16fc81f54e7a3b4a289f835ca3" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../clonenotsupportedexception&quot;&gt;&lt;code&gt;CloneNotSupportedException&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;Reference&lt;/code&gt; cannot be meaningfully cloned. Construct a new &lt;code&gt;Reference&lt;/code&gt; instead.</source>
          <target state="translated">예외 &lt;a href=&quot;../clonenotsupportedexception&quot;&gt; &lt;code&gt;CloneNotSupportedException&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Reference&lt;/code&gt; 의미 복제 할 수 없습니다. 대신 새로운 &lt;code&gt;Reference&lt;/code&gt; 를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="37fd660c53c5155458a03c531cf971e59cbb246d" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; because &lt;code&gt;&quot;de-*-DE&quot;&lt;/code&gt; is not a valid basic language range.</source>
          <target state="translated">예외 &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가&lt;/a&gt; 있기 때문에 &lt;code&gt;&quot;de-*-DE&quot;&lt;/code&gt; 유효한 기본 언어 범위가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="b6bcd658de7adf03be526b1f4c13b4043b6de281" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;nosuchmethoderror&quot;&gt;&lt;code&gt;NoSuchMethodError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">예외 &lt;a href=&quot;nosuchmethoderror&quot;&gt; &lt;code&gt;NoSuchMethodError&lt;/code&gt; 가&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="47a244c730ca2429da9b0cbcb0f69a2f7cc754b8" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;CannotRedoException&lt;/code&gt; if &lt;code&gt;canRedo&lt;/code&gt; returns false.</source>
          <target state="translated">예외 &lt;code&gt;CannotRedoException&lt;/code&gt; 를을 경우 &lt;code&gt;canRedo&lt;/code&gt; 가 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="678411bd7a7bd98e55c8df57bb4e6f1115938ea9" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;CannotRedoException&lt;/code&gt; if &lt;code&gt;canRedo&lt;/code&gt; returns false. Sets &lt;code&gt;hasBeenDone&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. Subclasses should override to redo the operation represented by this edit. Override should begin with a call to super.</source>
          <target state="translated">예외 &lt;code&gt;CannotRedoException&lt;/code&gt; 를을 경우 &lt;code&gt;canRedo&lt;/code&gt; 가 false를 반환합니다. &lt;code&gt;hasBeenDone&lt;/code&gt; 을 &lt;code&gt;true&lt;/code&gt; 로 설정 합니다 . 이 편집으로 표시된 작업을 다시 실행하려면 하위 클래스를 재정의해야합니다. 재정의는 super에 대한 호출로 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="3790f33e502d2f90b642c2efac55dd5898b137df" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;CannotUndoException&lt;/code&gt; if &lt;code&gt;canUndo&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">예외 &lt;code&gt;CannotUndoException&lt;/code&gt; 를을 경우 &lt;code&gt;canUndo&lt;/code&gt; 반환 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fff7793826f72d71730a8ab6f9c30caeba72e7b2" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;CannotUndoException&lt;/code&gt; if &lt;code&gt;canUndo&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. Sets &lt;code&gt;hasBeenDone&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. Subclasses should override to undo the operation represented by this edit. Override should begin with a call to super.</source>
          <target state="translated">예외 &lt;code&gt;CannotUndoException&lt;/code&gt; 를을 경우 &lt;code&gt;canUndo&lt;/code&gt; 반환 &lt;code&gt;false&lt;/code&gt; . &lt;code&gt;hasBeenDone&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 설정 합니다 . 이 편집으로 표시된 작업을 실행 취소하려면 하위 클래스를 재정의해야합니다. 재정의는 super에 대한 호출로 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="f4eb1b7e95ca67674015b9400cf0bd76a61969be" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt; because &lt;code&gt;ReadLocks&lt;/code&gt; do not support conditions.</source>
          <target state="translated">예외 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 하기 때문에 &lt;code&gt;ReadLocks&lt;/code&gt; 이 조건을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="866a4b95987c85cee1e61367384eb97fddc2254b" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="71463ab935ff7965f4bb58554d2f740ad341d01d" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. Setting seeds in this generator is not supported.</source>
          <target state="translated">&lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 던집니다 . 이 생성기에서 시드 설정은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6bd07e55edb2f5f0a06b2b16c924ab0ed07d91cf" translate="yes" xml:space="preserve">
          <source>Throws CatalogException if there is no match.</source>
          <target state="translated">일치하는 항목이 없으면 CatalogException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="05e2c5607fdd5eb923bca4220eeb994a9887f667" translate="yes" xml:space="preserve">
          <source>Throws CloneNotSupportedException as a Thread can not be meaningfully cloned.</source>
          <target state="translated">스레드를 의미있게 복제 할 수 없기 때문에 CloneNotSupportedException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="78c5180f23af8ef04642e893263bb662bb2d9ce1" translate="yes" xml:space="preserve">
          <source>Throws CloneNotSupportedException as a Thread can not be meaningfully cloned. Construct a new Thread instead.</source>
          <target state="translated">스레드를 의미있게 복제 할 수 없으므로 CloneNotSupportedException이 발생합니다. 대신 새 스레드를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="586a2bda3b8f60777f049d843c966a5984b6bee6" translate="yes" xml:space="preserve">
          <source>Throws CloneNotSupportedException.</source>
          <target state="translated">CloneNotSupportedException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d7906d41002453e852ec1ee359aac34142c9c10e" translate="yes" xml:space="preserve">
          <source>Throws CloneNotSupportedException. This guarantees that enums are never cloned, which is necessary to preserve their &quot;singleton&quot; status.</source>
          <target state="translated">CloneNotSupportedException을 던집니다. 이렇게하면 열거 형이 복제되지 않으며 &quot;단일&quot;상태를 유지하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ef933213f30747ab820a8ac6fc361588a2855817" translate="yes" xml:space="preserve">
          <source>Throws SocketException if the option is unrecognized, the socket is closed, or some low-level error occurred</source>
          <target state="translated">옵션이 인식되지 않거나 소켓이 닫히거나 일부 하위 레벨 오류가 발생한 경우 SocketException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="be311179773fef72b8e322098317b5607696664e" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access members.</source>
          <target state="translated">예외 &lt;code&gt;SecurityException&lt;/code&gt; 호출 스레드 멤버에의 액세스가 허가되어 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="b0a483d1a1cce3c98637f041f03044671cbe2e89" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access or modify the system properties.</source>
          <target state="translated">호출 스레드가 시스템 특성에 액세스하거나 시스템 특성을 수정할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="74f7c6fbaf9a2607bc25a6acc5fa0c8f060a9989" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the AWT event queue.</source>
          <target state="translated">예외 &lt;code&gt;SecurityException&lt;/code&gt; 호출 스레드가 AWT 이벤트 큐에의 액세스가 허가되어 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="58a41bc1c166f380713d9ba97b29c985e0e4a579" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the package specified by the argument.</source>
          <target state="translated">호출 스레드가 인수로 지정된 패키지에 액세스 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="e0002bb078911e2b80574cebba133bac4b5326a6" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the specified package.</source>
          <target state="translated">호출 스레드가 지정된 패키지에 액세스 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 throw 합니다.</target>
        </trans-unit>
        <trans-unit id="f496850217aa0260833640ec37d1833905978aad" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the system clipboard.</source>
          <target state="translated">호출중인 스레드가 시스템 클립 보드에 액세스 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="ee651fa0fe2ac3ba0abb353dbe90d4880e5f272d" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the system property with the specified &lt;code&gt;key&lt;/code&gt; name.</source>
          <target state="translated">호출하는 스레드가 지정된 &lt;code&gt;key&lt;/code&gt; 이름으로 시스템 특성에 액세스 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="8e0f42f7ce4bc6efbaa975a76c42159794ec73ff" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to cause the Java Virtual Machine to halt with the specified status code.</source>
          <target state="translated">호출중인 스레드가 지정된 상태 코드로 Java 가상 머신을 정지시킬 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="1f1ea61f78b2cd6b2339492e62dcd23635cf3fd1" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to create a new class loader.</source>
          <target state="translated">호출하는 스레드가 새 클래스 로더를 작성하도록 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="8a6dbdd3781f34d5c9960948cde79f67a33094d0" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to create a subprocess.</source>
          <target state="translated">호출중인 스레드가 서브 프로세스를 작성할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="94f119cb4bb17d984742723135c67fd80d9a5479" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to define classes in the package specified by the argument.</source>
          <target state="translated">호출 스레드가 인수로 지정된 패키지에서 클래스를 정의 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="881e352a7390cf2597612b7b60df1167a12a6216" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to define classes in the specified package.</source>
          <target state="translated">호출 스레드가 지정된 패키지의 클래스를 정의 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 throw 합니다.</target>
        </trans-unit>
        <trans-unit id="93928659d55c05442babb348bde7f9097f9e3bb9" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to delete the specified file.</source>
          <target state="translated">호출중인 스레드가 지정된 파일을 삭제하도록 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="f113bc6b4e60e02159410376302a1c656658a90f" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to dynamic link the library code specified by the string argument file.</source>
          <target state="translated">호출 스레드가 문자열 인수 파일에 지정된 라이브러리 코드를 동적으로 링크 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 throw 합니다.</target>
        </trans-unit>
        <trans-unit id="a44b9f9df6244dd1cedb020ade27ffd9d377ac2f" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to dynamic link the library code specified by the string argument file. The argument is either a simple library name or a complete filename.</source>
          <target state="translated">호출중인 스레드가 문자열 인수 파일에 의해 지정된 라이브러리 코드를 동적으로 링크 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 . 인수는 간단한 라이브러리 이름이거나 완전한 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="18eb7ec4e7cf6dd8f0810f8fbd3de11dda2ab520" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to initiate a print job request.</source>
          <target state="translated">예외 &lt;code&gt;SecurityException&lt;/code&gt; 호출 스레드가 인쇄 작업 요구의 개시가 허가되어 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="a5f1abf24c7ec33534c68edc39f44985b7130de5" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to modify the thread argument.</source>
          <target state="translated">호출중인 스레드가 스레드 인수를 수정하도록 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="9c82afd4e3102f2b30f0f490f95269fcefb1ea11" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to modify the thread group argument.</source>
          <target state="translated">호출중인 스레드가 스레드 그룹 인수를 수정하도록 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="9348c9c27c4d0b27be635ebd4243b5159774bd3c" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to open a socket connection to the specified host and port number.</source>
          <target state="translated">호출중인 스레드가 지정된 호스트 및 포트 번호에 대한 소켓 연결을 열 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="bd511dcc00428d20e199d504e5a62cf049f420e6" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to read from the specified file descriptor.</source>
          <target state="translated">지정된 파일 기술자로부터 호출 측의 thread를 읽을 수없는 경우 에 &lt;code&gt;SecurityException&lt;/code&gt; 을 Throw합니다 .</target>
        </trans-unit>
        <trans-unit id="613665d6a7892ee299b4b9a41dd7850681647520" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to read the file specified by the string argument.</source>
          <target state="translated">호출중인 스레드가 문자열 인수로 지정된 파일을 읽을 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="04b4f2564e11bd9010431ad73cb7dbcb64671417" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to set the socket factory used by &lt;code&gt;ServerSocket&lt;/code&gt; or &lt;code&gt;Socket&lt;/code&gt;, or the stream handler factory used by &lt;code&gt;URL&lt;/code&gt;.</source>
          <target state="translated">호출하는 스레드가 &lt;code&gt;ServerSocket&lt;/code&gt; 또는 &lt;code&gt;Socket&lt;/code&gt; 에서 사용하는 소켓 팩토리 또는 &lt;code&gt;URL&lt;/code&gt; 에서 사용하는 스트림 핸들러 팩토리 를 설정하도록 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="a992423182e7fd2f0c68a6e3399d48fb61a2c4ea" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to use (join/leave/send/receive) IP multicast.</source>
          <target state="translated">예외 &lt;code&gt;SecurityException&lt;/code&gt; 호출 스레드가 사용 (가입 / 휴가 / 전송 / 수신) IP 멀티 캐스트에 허가되어 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="42179baf69e295d476e665b60f38e3b57c0d823e" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to wait for a connection request on the specified local port number.</source>
          <target state="translated">호출중인 스레드가 지정된 로컬 포트 ​​번호에서 연결 요청을 기다릴 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="c6c71db3bcf9f3e867fee15210966a56b5576646" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to write to the file specified by the string argument.</source>
          <target state="translated">호출중인 스레드가 문자열 인수에 의해 지정된 파일에 쓰도록 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="33b59151923ebac69423a301ee1ca0d61eea1f8b" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to write to the specified file descriptor.</source>
          <target state="translated">호출중인 스레드가 지정된 파일 디스크립터에 쓸 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="fa607d3467b07e33aa5dbab627a8cb509730651e" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not permitted to accept a socket connection from the specified host and port number.</source>
          <target state="translated">호출중인 스레드가 지정된 호스트 및 포트 번호에서 소켓 연결을 허용하도록 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="3911c97d748b3105f51a1c90495fee8541f38427" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the requested access, specified by the given permission, is not permitted based on the security policy currently in effect.</source>
          <target state="translated">주어진 권한으로 지정된 요청 된 액세스가 현재 유효한 보안 정책에 따라 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="eba2327c676431952552ab77f84ca7655867ddd5" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is denied access to the resource specified by the given permission.</source>
          <target state="translated">지정된 보안 컨텍스트가 지정된 권한으로 지정된 리소스에 대한 액세스가 거부 된 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 throw합니다 .</target>
        </trans-unit>
        <trans-unit id="6d182175e27ba08a0b9e896a7124bd7728f59f68" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is denied access to the resource specified by the given permission. The context must be a security context returned by a previous call to &lt;code&gt;getSecurityContext&lt;/code&gt; and the access control decision is based upon the configured security policy for that security context.</source>
          <target state="translated">지정된 보안 컨텍스트가 지정된 권한으로 지정된 자원에 대한 액세스가 거부 된 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 . 컨텍스트는 &lt;code&gt;getSecurityContext&lt;/code&gt; 에 대한 이전 호출에서 리턴 한 보안 컨텍스트 여야하며 액세스 제어 결정은 해당 보안 컨텍스트에 대해 구성된 보안 정책을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="4f0a8e2aad645347a8283d1be96e9faf74fb172f" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is not allowed to open a socket connection to the specified host and port number.</source>
          <target state="translated">지정된 보안 컨텍스트가 지정된 호스트 및 포트 번호에 대한 소켓 연결을 열 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="f41c19487968a975b17314af7d85473c24c704cf" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is not allowed to read the file specified by the string argument.</source>
          <target state="translated">지정된 보안 컨텍스트가 문자열 인수로 지정된 파일을 읽을 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 throw합니다 .</target>
        </trans-unit>
        <trans-unit id="2fe7a014c93f4282d4cf240fe9f4785ceeb3567c" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is not allowed to read the file specified by the string argument. The context must be a security context returned by a previous call to &lt;code&gt;getSecurityContext&lt;/code&gt;.</source>
          <target state="translated">지정된 보안 컨텍스트가 문자열 인수로 지정된 파일을 읽을 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 . 컨텍스트는 이전의 &lt;code&gt;getSecurityContext&lt;/code&gt; 호출로 리턴 된 보안 컨텍스트 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="08fc4c3667cf82918abc80f384e841bb901427fd" translate="yes" xml:space="preserve">
          <source>Throws an &lt;code&gt;IOException&lt;/code&gt; if the stream has been closed.</source>
          <target state="translated">예외 &lt;code&gt;IOException&lt;/code&gt; 가 스트림이 닫고있는 경우.</target>
        </trans-unit>
        <trans-unit id="304bfe57b073a4145ee415402af9e5b48a0f327f" translate="yes" xml:space="preserve">
          <source>Throws an &lt;code&gt;IOException&lt;/code&gt; if the stream has been closed. Subclasses may call this method from any of their methods that require the stream not to be closed.</source>
          <target state="translated">예외 &lt;code&gt;IOException&lt;/code&gt; 가 스트림이 닫고있는 경우. 서브 클래스는 스트림을 닫지 않아야하는 모든 메소드에서이 메소드를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="609bcdb27dcdc809a9bd509b8703d67998b69572" translate="yes" xml:space="preserve">
          <source>Throws an AWTError, since a Box can use only a BoxLayout.</source>
          <target state="translated">Box는 BoxLayout 만 사용할 수 있으므로 AWTError를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="4f451515ac1645688e90d030ff9b7ee8761a8ad3" translate="yes" xml:space="preserve">
          <source>Throws an exception appropriate to the result described by this object.</source>
          <target state="translated">이 객체가 기술 한 결과에 적절한 예외를 Throw합니다.</target>
        </trans-unit>
        <trans-unit id="e05991524e70c9e9c8187b002469b800e945b108" translate="yes" xml:space="preserve">
          <source>Throws exception</source>
          <target state="translated">Throws exception</target>
        </trans-unit>
        <trans-unit id="9c1b3e348c5e658c9f04296e21ad3e2315006119" translate="yes" xml:space="preserve">
          <source>Throws:</source>
          <target state="translated">Throws:</target>
        </trans-unit>
        <trans-unit id="a30856303a88309d99f53e90a911f2241ad88676" translate="yes" xml:space="preserve">
          <source>Ths default is &quot;sticky&quot;, being a part of the static state of all URLConnections. This flag applies to the next, and all following URLConnections that are created.</source>
          <target state="translated">기본값은 &quot;sticky&quot;이며 모든 URLConnection의 정적 상태의 일부입니다. 이 플래그는 생성 된 다음 URLConnection과 다음 URLConnection에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5637b858eb0b17bd5112c0aee97f263d368b4dd9" translate="yes" xml:space="preserve">
          <source>Thumb color</source>
          <target state="translated">Thumb color</target>
        </trans-unit>
        <trans-unit id="805b9e010fa1abe503c1b09648cad64a3c037b98" translate="yes" xml:space="preserve">
          <source>Thumb dark shadow color</source>
          <target state="translated">Thumb dark shadow color</target>
        </trans-unit>
        <trans-unit id="fba611dd71adc1ff044e39366915000d1e76b2f7" translate="yes" xml:space="preserve">
          <source>Thumb highlight color</source>
          <target state="translated">Thumb highlight color</target>
        </trans-unit>
        <trans-unit id="77dbaec2c57d69e7ef56cf8cde6575a9c2bf55a3" translate="yes" xml:space="preserve">
          <source>Thumb light shadow color</source>
          <target state="translated">Thumb light shadow color</target>
        </trans-unit>
        <trans-unit id="f1d2e4e187f8fbaf4ec2112c91df35d27eaa8f08" translate="yes" xml:space="preserve">
          <source>Thumb of the ScrollBar.</source>
          <target state="translated">Thumb of the ScrollBar.</target>
        </trans-unit>
        <trans-unit id="fc844e823ec4889ad648b13d48433f663f74844d" translate="yes" xml:space="preserve">
          <source>Thumb of the ScrollBar. The thumb is the region of the ScrollBar that gives a graphical depiction of what percentage of the View is currently visible. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ScrollBarThumb&lt;/code&gt;.</source>
          <target state="translated">Thumb of the ScrollBar. The thumb is the region of the ScrollBar that gives a graphical depiction of what percentage of the View is currently visible. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ScrollBarThumb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1de6ffdc504e5df5941eb577d236d9daa60e2bb5" translate="yes" xml:space="preserve">
          <source>Thumb of the Slider.</source>
          <target state="translated">Thumb of the Slider.</target>
        </trans-unit>
        <trans-unit id="ed33cf3c2ea8dac658c7db1ce37c52d9b0257521" translate="yes" xml:space="preserve">
          <source>Thumb of the Slider. The thumb of the Slider identifies the current value. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;SliderThumb&lt;/code&gt;.</source>
          <target state="translated">Thumb of the Slider. The thumb of the Slider identifies the current value. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;SliderThumb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5b9d3c9cd3ceb2320a9d20c152aef3f0b66a967" translate="yes" xml:space="preserve">
          <source>Thumb rectangle</source>
          <target state="translated">Thumb rectangle</target>
        </trans-unit>
        <trans-unit id="7050380a0757ca93c6160fb310b67b6ebbd5740d" translate="yes" xml:space="preserve">
          <source>Thumbnails will be returned in their entirety regardless of the region settings.</source>
          <target state="translated">지역 설정에 관계없이 썸네일 전체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="76031ddf92450ba52c1e3945097079807a9065c2" translate="yes" xml:space="preserve">
          <source>Thursday</source>
          <target state="translated">Thursday</target>
        </trans-unit>
        <trans-unit id="3d04b20ba0bec439ae9bc45463e71ca3adffc239" translate="yes" xml:space="preserve">
          <source>Thus &quot;FooBah&quot; becomes &quot;fooBah&quot; and &quot;X&quot; becomes &quot;x&quot;, but &quot;URL&quot; stays as &quot;URL&quot;.</source>
          <target state="translated">따라서 &quot;FooBah&quot;는 &quot;fooBah&quot;가되고 &quot;X&quot;는 &quot;x&quot;가되지만 &quot;URL&quot;은 &quot;URL&quot;로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="1406418bbdae0badf2726e6c650822f58e9a9bc5" translate="yes" xml:space="preserve">
          <source>Thus any implementation of ModelMBeanInfo should always add those two notifications in addition to those specified by the application.</source>
          <target state="translated">따라서 ModelMBeanInfo의 구현은 항상 애플리케이션에 의해 지정된 알림 외에이 두 개의 알림을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="8ecb3e422cd1d28153f56d873a84dcc58af876d1" translate="yes" xml:space="preserve">
          <source>Thus for a class such as &quot;sun.xyz.OurButton&quot; we would first look for a BeanInfo class called &quot;sun.xyz.OurButtonBeanInfo&quot; and if that failed we'd look in each package in the BeanInfo search path for an OurButtonBeanInfo class. With the default search path, this would mean looking for &quot;sun.beans.infos.OurButtonBeanInfo&quot;.</source>
          <target state="translated">따라서 &quot;sun.xyz.OurButton&quot;과 같은 클래스의 경우 먼저 &quot;sun.xyz.OurButtonBeanInfo&quot;라는 BeanInfo 클래스를 찾은 다음 실패하면 BeanInfo 검색 경로에서 OurButtonBeanInfo 클래스의 각 패키지를 찾습니다. 기본 검색 경로를 사용하면 &quot;sun.beans.infos.OurButtonBeanInfo&quot;를 찾는 것입니다.</target>
        </trans-unit>
        <trans-unit id="39eb837b9fc8b3cfe8f618eade937385de94fe08" translate="yes" xml:space="preserve">
          <source>Thus for example a pattern of &quot;%t/java%g.log&quot; with a count of 2 would typically cause log files to be written on Solaris to /var/tmp/java0.log and /var/tmp/java1.log whereas on Windows 95 they would be typically written to C:\TEMP\java0.log and C:\TEMP\java1.log</source>
          <target state="translated">따라서 예를 들어 카운트가 2 인 &quot;% t / java % g.log&quot;패턴은 일반적으로 로그 파일이 Solaris에서 /var/tmp/java0.log 및 /var/tmp/java1.log에 기록됩니다. Windows 95에서는 일반적으로 C : \ TEMP \ java0.log 및 C : \ TEMP \ java1.log에 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="c9bec96d1db6450dc1a885bd7b05bf79842923ad" translate="yes" xml:space="preserve">
          <source>Thus if the argument name is &quot;fred&quot;, it will assume that there is an indexed reader method &quot;getFred&quot;, a non-indexed (array) reader method also called &quot;getFred&quot;, an indexed writer method &quot;setFred&quot;, and finally a non-indexed writer method &quot;setFred&quot;.</source>
          <target state="translated">따라서 인수 이름이 &quot;fred&quot;인 경우 색인화 된 판독기 메소드 &quot;getFred&quot;, 색인화되지 않은 (배열) 판독기 메소드 인 &quot;getFred&quot;, 색인화 된 기록기 메소드 &quot;setFred&quot;, 마지막으로 색인화되지 않은 기록기 메소드 &quot;setFred&quot;.</target>
        </trans-unit>
        <trans-unit id="9c0eef772246048b29012102df64202a5a3b0e9f" translate="yes" xml:space="preserve">
          <source>Thus if three processes were all trying to log to fred%u.%g.txt then they might end up using fred0.0.txt, fred1.0.txt, fred2.0.txt as the first file in their rotating sequences.</source>
          <target state="translated">따라서 세 프로세스가 모두 fred % u. % g.txt에 기록하려고하면 회전 시퀀스의 첫 번째 파일로 fred0.0.txt, fred1.0.txt, fred2.0.txt를 사용하게됩니다.</target>
        </trans-unit>
        <trans-unit id="b30bef851397fcfa834b5d84559d2fc29425fcce" translate="yes" xml:space="preserve">
          <source>Thus these two notifications are always added to those specified by the application.</source>
          <target state="translated">따라서이 두 알림은 항상 응용 프로그램에서 지정한 알림에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="175a69d195bb39a6e49e26db6468a1cc4c4f0c15" translate="yes" xml:space="preserve">
          <source>Thus, a method type mismatch which might show up as a linkage error in a statically typed program can show up as a dynamic &lt;code&gt;WrongMethodTypeException&lt;/code&gt; in a program which uses method handles.</source>
          <target state="translated">따라서 정적 형식의 프로그램에서 연결 오류로 표시 될 수있는 메서드 형식 불일치 는 메서드 핸들을 사용하는 프로그램에서 동적 &lt;code&gt;WrongMethodTypeException&lt;/code&gt; 으로 표시 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e801b41bba098969fbeab29984849586fd477148" translate="yes" xml:space="preserve">
          <source>Thus, an access mode type mismatch which might show up as a linkage error in a statically typed program can show up as a dynamic &lt;code&gt;WrongMethodTypeException&lt;/code&gt; in a program which uses VarHandles.</source>
          <target state="translated">Thus, an access mode type mismatch which might show up as a linkage error in a statically typed program can show up as a dynamic &lt;code&gt;WrongMethodTypeException&lt;/code&gt; in a program which uses VarHandles.</target>
        </trans-unit>
        <trans-unit id="72b7967722f4e5fa58e816e3be6b2e8e809e07b7" translate="yes" xml:space="preserve">
          <source>Thus, byte values between &lt;code&gt;0x00&lt;/code&gt; and &lt;code&gt;0x7f&lt;/code&gt; are simply returned as integer values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;127&lt;/code&gt;. Values between &lt;code&gt;0x80&lt;/code&gt; and &lt;code&gt;0xff&lt;/code&gt;, which normally represent negative &lt;code&gt;byte&lt;/code&gt; values, will be mapped into positive integers between &lt;code&gt;128&lt;/code&gt; and &lt;code&gt;255&lt;/code&gt;.</source>
          <target state="translated">Thus, byte values between &lt;code&gt;0x00&lt;/code&gt; and &lt;code&gt;0x7f&lt;/code&gt; are simply returned as integer values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;127&lt;/code&gt; . Values between &lt;code&gt;0x80&lt;/code&gt; and &lt;code&gt;0xff&lt;/code&gt; , which normally represent negative &lt;code&gt;byte&lt;/code&gt; values, will be mapped into positive integers between &lt;code&gt;128&lt;/code&gt; and &lt;code&gt;255&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1c7f4c120a26932bbddcc1fc1d6486b24537a52" translate="yes" xml:space="preserve">
          <source>Thus, byte values between &lt;code&gt;0x00&lt;/code&gt; and &lt;code&gt;0x7f&lt;/code&gt; are simply returned as integer values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;127&lt;/code&gt;. Values between &lt;code&gt;0x80&lt;/code&gt; and &lt;code&gt;0xff&lt;/code&gt;, which normally represent negative &lt;code&gt;byte&lt;/code&gt;values, will be mapped into positive integers between &lt;code&gt;128&lt;/code&gt; and &lt;code&gt;255&lt;/code&gt;.</source>
          <target state="translated">따라서 &lt;code&gt;0x00&lt;/code&gt; 과 &lt;code&gt;0x7f&lt;/code&gt; 사이의 바이트 값 은 단순히 &lt;code&gt;0&lt;/code&gt; 과 &lt;code&gt;127&lt;/code&gt; 사이의 정수 값으로 반환됩니다 . 일반적으로 음의 &lt;code&gt;byte&lt;/code&gt; 값을 나타내는 &lt;code&gt;0x80&lt;/code&gt; 과 &lt;code&gt;0xff&lt;/code&gt; 사이의 값은 &lt;code&gt;128&lt;/code&gt; 과 &lt;code&gt;255&lt;/code&gt; 사이의 양의 정수로 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="d8d5d9388d642541526ec7a4d22824785e336cf7" translate="yes" xml:space="preserve">
          <source>Thus, for any given local date-time there can be zero, one or two valid offsets. This method returns that list of valid offsets, which is a list of size 0, 1 or 2. In the case where there are two offsets, the earlier offset is returned at index 0 and the later offset at index 1.</source>
          <target state="translated">따라서, 주어진 현지 날짜-시간에 대해 0, 1 또는 2 개의 유효한 오프셋이있을 수 있습니다. 이 메소드는 유효한 오프셋 목록 (크기 0, 1 또는 2의 목록)을 리턴합니다. 두 개의 오프셋이있는 경우, 이전 오프셋은 색인 0에서 리턴되고 이후 오프셋은 색인 1에서 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="ecac47baa2a0453ec61d9b7f00a6b3be988dfffb" translate="yes" xml:space="preserve">
          <source>Thus, for any given local date-time there can be zero, one or two valid offsets. This method returns the single offset in the Normal case, and in the Gap or Overlap case it returns the offset before the transition.</source>
          <target state="translated">따라서, 주어진 현지 날짜-시간에 대해 0, 1 또는 2 개의 유효한 오프셋이있을 수 있습니다. 이 메서드는 일반 경우 단일 오프셋을 반환하고 갭 또는 오버랩 경우 전환 전의 오프셋을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a05cc43cc27a279b762a0084bba5cae97c6ea3f3" translate="yes" xml:space="preserve">
          <source>Thus, handles to non-public methods, or to methods in non-public classes, should generally be kept secret. They should not be passed to untrusted code unless their use from the untrusted code would be harmless.</source>
          <target state="translated">따라서 비 공용 메서드 또는 비 공용 클래스의 메서드에 대한 핸들은 일반적으로 비밀로 유지해야합니다. 신뢰할 수없는 코드에서 사용하는 것이 무해하지 않는 한 신뢰할 수없는 코드로 전달되어서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="ffd17657c1d0440eb89690887c93cacc2d6efb86" translate="yes" xml:space="preserve">
          <source>Thus, the purpose of AccessControlContext is for those situations where a security check that should be made within a given context actually needs to be done from within a</source>
          <target state="translated">따라서 AccessControlContext의 목적은 주어진 컨텍스트 내에서 수행해야하는 보안 점검이 실제로는</target>
        </trans-unit>
        <trans-unit id="98476dff4d031897aba6eab3b7fd173f84c35a5b" translate="yes" xml:space="preserve">
          <source>Thus, two &lt;code&gt;Date&lt;/code&gt; objects are equal if and only if the &lt;code&gt;getTime&lt;/code&gt; method returns the same &lt;code&gt;long&lt;/code&gt; value for both.</source>
          <target state="translated">따라서 &lt;code&gt;getTime&lt;/code&gt; 메소드가 둘 다에 대해 동일한 &lt;code&gt;long&lt;/code&gt; 값을 리턴하는 경우에만 두 개의 &lt;code&gt;Date&lt;/code&gt; 오브젝트가 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="72260e824fb4c4e7adfb4bb0b1b8958b7c6930a2" translate="yes" xml:space="preserve">
          <source>Thus, when a &lt;code&gt;Locale&lt;/code&gt; object contains Unicode locale attributes and keywords, &lt;code&gt;getExtension(UNICODE_LOCALE_EXTENSION)&lt;/code&gt; will return a String representing this information, for example, &quot;nu-thai&quot;. The &lt;code&gt;Locale&lt;/code&gt; class also provides &lt;a href=&quot;#getUnicodeLocaleAttributes()&quot;&gt;&lt;code&gt;getUnicodeLocaleAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getUnicodeLocaleKeys()&quot;&gt;&lt;code&gt;getUnicodeLocaleKeys()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getUnicodeLocaleType(java.lang.String)&quot;&gt;&lt;code&gt;getUnicodeLocaleType(java.lang.String)&lt;/code&gt;&lt;/a&gt; which allow you to access Unicode locale attributes and key/type pairs directly. When represented as a string, the Unicode Locale Extension lists attributes alphabetically, followed by key/type sequences with keys listed alphabetically (the order of subtags comprising a key's type is fixed when the type is defined)</source>
          <target state="translated">Thus, when a &lt;code&gt;Locale&lt;/code&gt; object contains Unicode locale attributes and keywords, &lt;code&gt;getExtension(UNICODE_LOCALE_EXTENSION)&lt;/code&gt; will return a String representing this information, for example, &quot;nu-thai&quot;. The &lt;code&gt;Locale&lt;/code&gt; class also provides &lt;a href=&quot;#getUnicodeLocaleAttributes()&quot;&gt; &lt;code&gt;getUnicodeLocaleAttributes()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#getUnicodeLocaleKeys()&quot;&gt; &lt;code&gt;getUnicodeLocaleKeys()&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;#getUnicodeLocaleType(java.lang.String)&quot;&gt; &lt;code&gt;getUnicodeLocaleType(java.lang.String)&lt;/code&gt; &lt;/a&gt; which allow you to access Unicode locale attributes and key/type pairs directly. When represented as a string, the Unicode Locale Extension lists attributes alphabetically, followed by key/type sequences with keys listed alphabetically (the order of subtags comprising a key's type is fixed when the type is defined)</target>
        </trans-unit>
        <trans-unit id="92c3d429db909b0bed898ed1c23e12a0253ff1c8" translate="yes" xml:space="preserve">
          <source>Thus, when a &lt;code&gt;Locale&lt;/code&gt; object contains Unicode locale attributes and keywords, &lt;code&gt;getExtension(UNICODE_LOCALE_EXTENSION)&lt;/code&gt; will return a String representing this information, for example, &quot;nu-thai&quot;. The &lt;code&gt;Locale&lt;/code&gt; class also provides &lt;a href=&quot;locale#getUnicodeLocaleAttributes--&quot;&gt;&lt;code&gt;getUnicodeLocaleAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;locale#getUnicodeLocaleKeys--&quot;&gt;&lt;code&gt;getUnicodeLocaleKeys()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;locale#getUnicodeLocaleType-java.lang.String-&quot;&gt;&lt;code&gt;getUnicodeLocaleType(java.lang.String)&lt;/code&gt;&lt;/a&gt; which allow you to access Unicode locale attributes and key/type pairs directly. When represented as a string, the Unicode Locale Extension lists attributes alphabetically, followed by key/type sequences with keys listed alphabetically (the order of subtags comprising a key's type is fixed when the type is defined)</source>
          <target state="translated">따라서 &lt;code&gt;Locale&lt;/code&gt; 객체에 유니 코드 로캘 속성 및 키워드가 포함 된 경우 &lt;code&gt;getExtension(UNICODE_LOCALE_EXTENSION)&lt;/code&gt; 은이 정보를 나타내는 문자열 (예 : &quot;nu-thai&quot; ) 을 반환합니다. &lt;code&gt;Locale&lt;/code&gt; 클래스는 제공 &lt;a href=&quot;locale#getUnicodeLocaleAttributes--&quot;&gt; &lt;code&gt;getUnicodeLocaleAttributes()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;locale#getUnicodeLocaleKeys--&quot;&gt; &lt;code&gt;getUnicodeLocaleKeys()&lt;/code&gt; &lt;/a&gt; 하고, &lt;a href=&quot;locale#getUnicodeLocaleType-java.lang.String-&quot;&gt; &lt;code&gt;getUnicodeLocaleType(java.lang.String)&lt;/code&gt; &lt;/a&gt; 직접 액세스 유니 코드 로켈의 속성과 키 / 타입 쌍을 수 있습니다. 문자열로 표현 될 때, 유니 코드 로케일 확장은 속성을 알파벳순으로 나열한 다음 키가 알파벳순으로 나열된 키 / 타입 순서를 나열합니다 (키 유형을 포함하는 서브 태그의 순서는 유형이 정의 될 때 고정됨)</target>
        </trans-unit>
        <trans-unit id="6a4b3369e6a303ed019539a3ace8efe19456477d" translate="yes" xml:space="preserve">
          <source>Thus, when copying an integral type source to an integral type destination, if the source sample size is greater than the destination sample size for a particular band, the high order bits of the source sample are truncated. If the source sample size is less than the destination size for a particular band, the high order bits of the destination are zero-extended or sign-extended depending on whether srcRaster's SampleModel treats the sample as a signed or unsigned quantity.</source>
          <target state="translated">Thus, when copying an integral type source to an integral type destination, if the source sample size is greater than the destination sample size for a particular band, the high order bits of the source sample are truncated. If the source sample size is less than the destination size for a particular band, the high order bits of the destination are zero-extended or sign-extended depending on whether srcRaster's SampleModel treats the sample as a signed or unsigned quantity.</target>
        </trans-unit>
        <trans-unit id="866e086146681ed6c2109e5f79647c0874300c87" translate="yes" xml:space="preserve">
          <source>Tick rectangle</source>
          <target state="translated">Tick rectangle</target>
        </trans-unit>
        <trans-unit id="8e5f0e67c1a46279f15bfa1668ff92355a0291ed" translate="yes" xml:space="preserve">
          <source>TileObserver</source>
          <target state="translated">TileObserver</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="0e6784f4bdace33c20dfec97fb8e85a458830053" translate="yes" xml:space="preserve">
          <source>Time formatted for the 12-hour clock as &lt;code&gt;&quot;%tI:%tM:%tS %Tp&quot;&lt;/code&gt;. The location of the morning or afternoon marker (&lt;code&gt;'%Tp'&lt;/code&gt;) may be locale-dependent.</source>
          <target state="translated">12 시간제 형식의 시간은 &lt;code&gt;&quot;%tI:%tM:%tS %Tp&quot;&lt;/code&gt; 됩니다. 오전 또는 오후 마커의 위치 ( &lt;code&gt;'%Tp'&lt;/code&gt; )는 로캘에 따라 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac0fcf04a794ce3095e0649fe7de98b0aa7efd9c" translate="yes" xml:space="preserve">
          <source>Time formatted for the 24-hour clock as &lt;code&gt;&quot;%tH:%tM&quot;&lt;/code&gt;</source>
          <target state="translated">24 시간 제로 포맷 된 시간은 &lt;code&gt;&quot;%tH:%tM&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de6d94004f978d6098c423e1892852b097c9b10b" translate="yes" xml:space="preserve">
          <source>Time formatted for the 24-hour clock as &lt;code&gt;&quot;%tH:%tM:%tS&quot;&lt;/code&gt;.</source>
          <target state="translated">24 시간제 형식의 시간은 &lt;code&gt;&quot;%tH:%tM:%tS&quot;&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="fabfafbde1bcee333b2792b5a75b20bd748367c1" translate="yes" xml:space="preserve">
          <source>Time unit representing one second</source>
          <target state="translated">1 초를 나타내는 시간 단위</target>
        </trans-unit>
        <trans-unit id="c9dbcaa261c78b418e4aebabb43ab10eb5d2c894" translate="yes" xml:space="preserve">
          <source>Time unit representing one second.</source>
          <target state="translated">Time unit representing one second.</target>
        </trans-unit>
        <trans-unit id="0427592ba03900f5b05775749a82fa6413478361" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a microsecond</source>
          <target state="translated">1000 분의 1 초를 나타내는 시간 단위</target>
        </trans-unit>
        <trans-unit id="87480b4cfcc3a722c27cbf068afa4dbd8a4442c1" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a microsecond.</source>
          <target state="translated">Time unit representing one thousandth of a microsecond.</target>
        </trans-unit>
        <trans-unit id="61bb947eb596cc0808ba5a6e9ecb5e1f991eafa8" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a millisecond</source>
          <target state="translated">천분의 일 밀리 초를 나타내는 시간 단위</target>
        </trans-unit>
        <trans-unit id="93479bfc7155f5bf2fd0382e7286186abecc0f97" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a millisecond.</source>
          <target state="translated">Time unit representing one thousandth of a millisecond.</target>
        </trans-unit>
        <trans-unit id="c50f471fb69b28b20b8e59aff81ba82cdfda6dba" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a second</source>
          <target state="translated">천분의 일을 나타내는 시간 단위</target>
        </trans-unit>
        <trans-unit id="e31e8bb6df6dd7121d4255ecf461003237d9881a" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a second.</source>
          <target state="translated">Time unit representing one thousandth of a second.</target>
        </trans-unit>
        <trans-unit id="eab70b98a2301e438690d8226a7540fb93a18051" translate="yes" xml:space="preserve">
          <source>Time unit representing sixty minutes</source>
          <target state="translated">60 분을 나타내는 시간 단위</target>
        </trans-unit>
        <trans-unit id="5dc18d0258a296e4d566c9eb552f6b976086ebc4" translate="yes" xml:space="preserve">
          <source>Time unit representing sixty minutes.</source>
          <target state="translated">Time unit representing sixty minutes.</target>
        </trans-unit>
        <trans-unit id="25db4b139768b0c095e63a33f97da9c2ced0a3e6" translate="yes" xml:space="preserve">
          <source>Time unit representing sixty seconds</source>
          <target state="translated">60 초를 나타내는 시간 단위</target>
        </trans-unit>
        <trans-unit id="8a76eb2dbfa240231ca05866a99810c9b86a64b8" translate="yes" xml:space="preserve">
          <source>Time unit representing sixty seconds.</source>
          <target state="translated">Time unit representing sixty seconds.</target>
        </trans-unit>
        <trans-unit id="020cbda4d020d26de73dea56e6abbaa04d2631e6" translate="yes" xml:space="preserve">
          <source>Time unit representing twenty four hours</source>
          <target state="translated">24 시간을 나타내는 시간 단위</target>
        </trans-unit>
        <trans-unit id="f6c409a4954de100948bf0e3d90e770c6acc66b5" translate="yes" xml:space="preserve">
          <source>Time unit representing twenty four hours.</source>
          <target state="translated">Time unit representing twenty four hours.</target>
        </trans-unit>
        <trans-unit id="89f57c9112e204a7e40fe8299e9501ca95885d1f" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The calculation effectively converts both zoned date-times to instants and then calculates the period between the instants. For example, the period from noon on day 1 to noon the following day in hours may be 23, 24 or 25 hours (or some other amount) depending on whether there was a daylight savings change or not.</source>
          <target state="translated">시간 단위는 즉시 타임 라인에서 작동합니다. 계산은 두 영역 화 된 날짜-시간을 모두 순간으로 효과적으로 변환 한 다음 순간 사이의 기간을 계산합니다. 예를 들어, 1 일 정오부터 다음 날 정오까지의 시간은 일광 절약 시간제 변경의 유무에 따라 23, 24 또는 25 시간 (또는 다른 금액) 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d70941fb95500a6268aa8269ce17251e959f5659" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The period is first added to the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;#ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt;&lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt; with the offset before the addition.</source>
          <target state="translated">Time units operate on the instant time-line. The period is first added to the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;#ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt; &lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt; with the offset before the addition.</target>
        </trans-unit>
        <trans-unit id="9ed6b3c9aeefe2bc6282eff254e96b8c3817061f" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The period is first added to the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;zoneddatetime#ofInstant-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt;&lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt; with the offset before the addition.</source>
          <target state="translated">시간 단위는 즉시 타임 라인에서 작동합니다. 기간은 먼저 현지 날짜-시간에 추가 된 다음 지역 ID를 사용하여 지역 날짜-시간으로 다시 변환됩니다. 변환은 추가 전 오프셋과 함께 &lt;a href=&quot;zoneddatetime#ofInstant-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt; &lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt; 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4e1cfd464b999bed036579c41e7890f35be3c7a8" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The period is first subtracted from the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;#ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt;&lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt; with the offset before the subtraction.</source>
          <target state="translated">Time units operate on the instant time-line. The period is first subtracted from the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;#ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt; &lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt; with the offset before the subtraction.</target>
        </trans-unit>
        <trans-unit id="831e64c683b21b66a0babbd03d6b96ebea1847d5" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The period is first subtracted from the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;zoneddatetime#ofInstant-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt;&lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt; with the offset before the subtraction.</source>
          <target state="translated">시간 단위는 즉시 타임 라인에서 작동합니다. 먼저 지역 날짜-시간에서 기간을 뺀 다음 영역 ID를 사용하여 지역 날짜-시간으로 다시 변환합니다. 변환은 빼기 전의 오프셋과 함께 &lt;a href=&quot;zoneddatetime#ofInstant-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt; &lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt; 사용합니다.</target>
        </trans-unit>
        <trans-unit id="050590f9af11ee8fbb6d37006b75678e145d12dd" translate="yes" xml:space="preserve">
          <source>Time with offset</source>
          <target state="translated">오프셋 시간</target>
        </trans-unit>
        <trans-unit id="caa53650ff34d0afa2cc90c62149dba0ee3a43b8" translate="yes" xml:space="preserve">
          <source>Time with or without offset</source>
          <target state="translated">오프셋이 있거나없는 시간</target>
        </trans-unit>
        <trans-unit id="71a771812f6037b30385960c0fae367957acff4a" translate="yes" xml:space="preserve">
          <source>Time without offset</source>
          <target state="translated">오프셋없는 시간</target>
        </trans-unit>
        <trans-unit id="eea79afd832854a3b24153b928ee9c62c7457dbe" translate="yes" xml:space="preserve">
          <source>Time zone</source>
          <target state="translated">시간대</target>
        </trans-unit>
        <trans-unit id="8bb54ab1e88ff1d025269859104bf56b528ef8af" translate="yes" xml:space="preserve">
          <source>Time zone names are supported by &lt;a href=&quot;timezonenameprovider&quot;&gt;&lt;code&gt;TimeZoneNameProvider&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">시간대 이름은 &lt;a href=&quot;timezonenameprovider&quot;&gt; &lt;code&gt;TimeZoneNameProvider&lt;/code&gt; 에서&lt;/a&gt; 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="3f4878b36a0d9264640a70315c2a5bb65e680e2f" translate="yes" xml:space="preserve">
          <source>Time zone rules are expressed in one of three ways:</source>
          <target state="translated">시간대 규칙은 다음 세 가지 방법 중 하나로 표현됩니다.</target>
        </trans-unit>
        <trans-unit id="29a5c476992123ec99f71484fedd2849b8aecb7b" translate="yes" xml:space="preserve">
          <source>Time-consuming tasks should not be run on the</source>
          <target state="translated">Time-consuming tasks should not be run on the</target>
        </trans-unit>
        <trans-unit id="8e881d4f0c8acf36a5646394d4530435fc6c9f4a" translate="yes" xml:space="preserve">
          <source>Time-scale</source>
          <target state="translated">Time-scale</target>
        </trans-unit>
        <trans-unit id="8830a64163772ea12b0403c9616e1650d28ab38b" translate="yes" xml:space="preserve">
          <source>Time-zone IDs</source>
          <target state="translated">시간대 ID</target>
        </trans-unit>
        <trans-unit id="33ded71aae7cb19513a319ece1e1ed4533d56bc6" translate="yes" xml:space="preserve">
          <source>Time-zone rules are defined by governments and change frequently. There are a number of organizations, known here as groups, that monitor time-zone changes and collate them. The default group is the IANA Time Zone Database (TZDB). Other organizations include IATA (the airline industry body) and Microsoft.</source>
          <target state="translated">시간대 규칙은 정부에 의해 정의되며 자주 변경됩니다. 여기에서 그룹이라고하는 여러 조직이 표준 시간대 변경을 모니터링하고 수집합니다. 기본 그룹은 IANA 시간대 데이터베이스 (TZDB)입니다. 다른 조직으로는 IATA (항공 산업 기관) 및 Microsoft가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6137849a9f17f87165fee1499b4099d6a4fd65ee" translate="yes" xml:space="preserve">
          <source>Time-zone rules are political, thus the data can change at any time. Each provider will provide the latest rules for each zone ID, but they may also provide the history of how the rules changed.</source>
          <target state="translated">시간대 규칙은 정치적이므로 데이터는 언제든지 변경 될 수 있습니다. 각 공급자는 각 영역 ID에 대한 최신 규칙을 제공하지만 규칙 변경 방법에 대한 기록을 제공 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="090fb0c18ce47a2edb59226eb740058c265f757b" translate="yes" xml:space="preserve">
          <source>Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may not be midnight.</source>
          <target state="translated">일광 절약 시간제와 같은 시간대 규칙은 모든 지역 날짜-시간이 지정된 지역에 대해 유효한 것은 아니므로 현지 날짜-시간이 자정이 아닐 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b065bea6629d2bcd6f2aa65275a8270e77ac97d" translate="yes" xml:space="preserve">
          <source>Time-zone rules, such as daylight savings, mean that not every time on the local time-line exists. If the local date-time is in a gap or overlap according to the rules then a resolver is used to determine the resultant local time and offset. This method uses &lt;a href=&quot;zoneddatetime#ofLocal(java.time.LocalDateTime,java.time.ZoneId,java.time.ZoneOffset)&quot;&gt;&lt;code&gt;ZonedDateTime.ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt;&lt;/a&gt; to retain the offset from this instance if possible.</source>
          <target state="translated">Time-zone rules, such as daylight savings, mean that not every time on the local time-line exists. If the local date-time is in a gap or overlap according to the rules then a resolver is used to determine the resultant local time and offset. This method uses &lt;a href=&quot;zoneddatetime#ofLocal(java.time.LocalDateTime,java.time.ZoneId,java.time.ZoneOffset)&quot;&gt; &lt;code&gt;ZonedDateTime.ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt; &lt;/a&gt; to retain the offset from this instance if possible.</target>
        </trans-unit>
        <trans-unit id="69d8919b61a4696f2edbdb1a0ffd8942c9a32cd6" translate="yes" xml:space="preserve">
          <source>Time-zone rules, such as daylight savings, mean that not every time on the local time-line exists. If the local date-time is in a gap or overlap according to the rules then a resolver is used to determine the resultant local time and offset. This method uses &lt;a href=&quot;zoneddatetime#ofLocal-java.time.LocalDateTime-java.time.ZoneId-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;ZonedDateTime.ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt;&lt;/a&gt; to retain the offset from this instance if possible.</source>
          <target state="translated">일광 절약 시간제와 같은 시간대 규칙은 현지 타임 라인의 모든 시간이 존재하지 않음을 의미합니다. 로컬 날짜-시간이 규칙에 따라 차이가 있거나 겹치는 경우 결과 로컬 시간 및 오프셋을 결정하기 위해 리졸버가 사용됩니다. 이 메서드는 가능한 경우 &lt;a href=&quot;zoneddatetime#ofLocal-java.time.LocalDateTime-java.time.ZoneId-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;ZonedDateTime.ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt; &lt;/a&gt; 을 사용하여이 인스턴스의 오프셋을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="626b62a0eab63d8138cbffcf2c050e1dbc225369" translate="yes" xml:space="preserve">
          <source>Time-zones are defined by governments and change frequently. This method allows applications to find the history of changes to the rules for a single zone ID. The map is keyed by a string, which is the version string associated with the rules.</source>
          <target state="translated">시간대는 정부에 의해 정의되며 자주 변경됩니다. 이 방법을 통해 응용 프로그램은 단일 영역 ID에 대한 규칙 변경 기록을 찾을 수 있습니다. 맵에는 규칙과 연관된 버전 문자열 인 문자열이 입력됩니다.</target>
        </trans-unit>
        <trans-unit id="0de905fd055ac463c8b08925d00ee67eebc8d728" translate="yes" xml:space="preserve">
          <source>TimeLimitExceededException</source>
          <target state="translated">TimeLimitExceededException</target>
        </trans-unit>
        <trans-unit id="df40c3b93b006f00eef205beea090efa3f7e9e8d" translate="yes" xml:space="preserve">
          <source>TimeUnit</source>
          <target state="translated">TimeUnit</target>
        </trans-unit>
        <trans-unit id="dc6d78829b2f8c3106a4bdf822f751696435efcb" translate="yes" xml:space="preserve">
          <source>TimeUnit.convert()</source>
          <target state="translated">TimeUnit.convert()</target>
        </trans-unit>
        <trans-unit id="830cc0bd2e0a2fe9eac0e502ef3b5b9156d31f8b" translate="yes" xml:space="preserve">
          <source>TimeUnit.sleep()</source>
          <target state="translated">TimeUnit.sleep()</target>
        </trans-unit>
        <trans-unit id="83f017325323a2fb1c3d3b6db20dd4b319aa7f08" translate="yes" xml:space="preserve">
          <source>TimeUnit.timedJoin()</source>
          <target state="translated">TimeUnit.timedJoin()</target>
        </trans-unit>
        <trans-unit id="5f6deaa8e8a85d9852e3e80f21a713e5ffac59c6" translate="yes" xml:space="preserve">
          <source>TimeUnit.timedWait()</source>
          <target state="translated">TimeUnit.timedWait()</target>
        </trans-unit>
        <trans-unit id="c8e371532ae3111ecdf8ef29a5548ddd918cb4f1" translate="yes" xml:space="preserve">
          <source>TimeUnit.toDays()</source>
          <target state="translated">TimeUnit.toDays()</target>
        </trans-unit>
        <trans-unit id="99b0f5def87732225751e7031078408f4f134430" translate="yes" xml:space="preserve">
          <source>TimeUnit.toHours()</source>
          <target state="translated">TimeUnit.toHours()</target>
        </trans-unit>
        <trans-unit id="ef73133eee66e8d60b240f6c276328790c87d794" translate="yes" xml:space="preserve">
          <source>TimeUnit.toMicros()</source>
          <target state="translated">TimeUnit.toMicros()</target>
        </trans-unit>
        <trans-unit id="c68987acb22a0f1133564c2feeec03d3e5d7b531" translate="yes" xml:space="preserve">
          <source>TimeUnit.toMillis()</source>
          <target state="translated">TimeUnit.toMillis()</target>
        </trans-unit>
        <trans-unit id="3730ed7851bf04f1d33d3ff0080311423a464267" translate="yes" xml:space="preserve">
          <source>TimeUnit.toMinutes()</source>
          <target state="translated">TimeUnit.toMinutes()</target>
        </trans-unit>
        <trans-unit id="4dd5c6566718095f94c4b947cdb8e61d5741f1d9" translate="yes" xml:space="preserve">
          <source>TimeUnit.toNanos()</source>
          <target state="translated">TimeUnit.toNanos()</target>
        </trans-unit>
        <trans-unit id="a79b9e1c9998086855c45b2ecd7a5f4c333edfe8" translate="yes" xml:space="preserve">
          <source>TimeUnit.toSeconds()</source>
          <target state="translated">TimeUnit.toSeconds()</target>
        </trans-unit>
        <trans-unit id="57ef650399f2712bf741a27ec482a93a859abb4a" translate="yes" xml:space="preserve">
          <source>TimeUnit.valueOf()</source>
          <target state="translated">TimeUnit.valueOf()</target>
        </trans-unit>
        <trans-unit id="a359ca57ee573718caff5b8c3e63b5fc924bf389" translate="yes" xml:space="preserve">
          <source>TimeUnit.values()</source>
          <target state="translated">TimeUnit.values()</target>
        </trans-unit>
        <trans-unit id="a4208dd784207f8d84ef4fa31bd30bdd2b432c1d" translate="yes" xml:space="preserve">
          <source>TimeZone</source>
          <target state="translated">TimeZone</target>
        </trans-unit>
        <trans-unit id="cb3863b86450493de455ba45e15ac953362436e0" translate="yes" xml:space="preserve">
          <source>TimeZone for this.</source>
          <target state="translated">TimeZone for this.</target>
        </trans-unit>
        <trans-unit id="e9cbb9369e1389fce6fec9ee7402639ce40b5d8a" translate="yes" xml:space="preserve">
          <source>TimeZone.clone()</source>
          <target state="translated">TimeZone.clone()</target>
        </trans-unit>
        <trans-unit id="d2c14798f600f15426d37393363602c92fa2a2f2" translate="yes" xml:space="preserve">
          <source>TimeZone.getAvailableIDs()</source>
          <target state="translated">TimeZone.getAvailableIDs()</target>
        </trans-unit>
        <trans-unit id="b37d04d3329436f7f71234e48d7d2bc525eef972" translate="yes" xml:space="preserve">
          <source>TimeZone.getDSTSavings()</source>
          <target state="translated">TimeZone.getDSTSavings()</target>
        </trans-unit>
        <trans-unit id="a36b3c7befab558d8c90ba31a7714dde07f2d526" translate="yes" xml:space="preserve">
          <source>TimeZone.getDefault()</source>
          <target state="translated">TimeZone.getDefault()</target>
        </trans-unit>
        <trans-unit id="6c480eb94416dc3381f7dd97c7c459c72e05d9aa" translate="yes" xml:space="preserve">
          <source>TimeZone.getDisplayName()</source>
          <target state="translated">TimeZone.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="79e758338012138895c385e324e812e297c7e960" translate="yes" xml:space="preserve">
          <source>TimeZone.getID()</source>
          <target state="translated">TimeZone.getID()</target>
        </trans-unit>
        <trans-unit id="5cef88fd890c75151720b6f231afd2108cb8f294" translate="yes" xml:space="preserve">
          <source>TimeZone.getOffset()</source>
          <target state="translated">TimeZone.getOffset()</target>
        </trans-unit>
        <trans-unit id="89330dcc6b6c1d1c028fe320c5f593c5b989fe9e" translate="yes" xml:space="preserve">
          <source>TimeZone.getRawOffset()</source>
          <target state="translated">TimeZone.getRawOffset()</target>
        </trans-unit>
        <trans-unit id="10d1274880ae857877db690d3c0220040aff62da" translate="yes" xml:space="preserve">
          <source>TimeZone.getTimeZone()</source>
          <target state="translated">TimeZone.getTimeZone()</target>
        </trans-unit>
        <trans-unit id="1b8c437f45170fda63fafc1a7c082d45c20fced2" translate="yes" xml:space="preserve">
          <source>TimeZone.hasSameRules()</source>
          <target state="translated">TimeZone.hasSameRules()</target>
        </trans-unit>
        <trans-unit id="ff334a3e562bd71e91ec01e6fe9899d37c05c857" translate="yes" xml:space="preserve">
          <source>TimeZone.inDaylightTime()</source>
          <target state="translated">TimeZone.inDaylightTime()</target>
        </trans-unit>
        <trans-unit id="1f697c26f417f7d9d7cdfbd4587c9d2fcd681320" translate="yes" xml:space="preserve">
          <source>TimeZone.observesDaylightTime()</source>
          <target state="translated">TimeZone.observesDaylightTime()</target>
        </trans-unit>
        <trans-unit id="a0c48fd39e019f85ce0aab5d72e0b366c8359b4d" translate="yes" xml:space="preserve">
          <source>TimeZone.setDefault()</source>
          <target state="translated">TimeZone.setDefault()</target>
        </trans-unit>
        <trans-unit id="626b6b713b4bdcd72171c0a543c3568bf7e9b7d9" translate="yes" xml:space="preserve">
          <source>TimeZone.setID()</source>
          <target state="translated">TimeZone.setID()</target>
        </trans-unit>
        <trans-unit id="1eb9d165355823bccfd58e6ad48f0bf613215d5c" translate="yes" xml:space="preserve">
          <source>TimeZone.setRawOffset()</source>
          <target state="translated">TimeZone.setRawOffset()</target>
        </trans-unit>
        <trans-unit id="05df22f63337599f3180142338eb2e7d8e3d4163" translate="yes" xml:space="preserve">
          <source>TimeZone.toZoneId()</source>
          <target state="translated">TimeZone.toZoneId()</target>
        </trans-unit>
        <trans-unit id="a64731e93346a78a35c5c19948993596c27b8261" translate="yes" xml:space="preserve">
          <source>TimeZone.useDaylightTime()</source>
          <target state="translated">TimeZone.useDaylightTime()</target>
        </trans-unit>
        <trans-unit id="16f1ab458f74bc6b63fec460f972ba78af52cb77" translate="yes" xml:space="preserve">
          <source>TimeZoneNameProvider</source>
          <target state="translated">TimeZoneNameProvider</target>
        </trans-unit>
        <trans-unit id="2cb73024ec0e6f28e0a0dcc16ab5bd51ad99c21a" translate="yes" xml:space="preserve">
          <source>TimeZoneNameProvider.getDisplayName()</source>
          <target state="translated">TimeZoneNameProvider.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="d4eec88fceb36fe86366dd0d4aadff59ad8c78c7" translate="yes" xml:space="preserve">
          <source>TimeZoneNameProvider.getGenericDisplayName()</source>
          <target state="translated">TimeZoneNameProvider.getGenericDisplayName()</target>
        </trans-unit>
        <trans-unit id="3188114969e7bc52ee2de7d28da57b1a4e07a31e" translate="yes" xml:space="preserve">
          <source>TimeoutException</source>
          <target state="translated">TimeoutException</target>
        </trans-unit>
        <trans-unit id="27a4f2c5a6aa7d957af2668e0ec53e32944aba26" translate="yes" xml:space="preserve">
          <source>Timeouts</source>
          <target state="translated">Timeouts</target>
        </trans-unit>
        <trans-unit id="9d9cec22f36fd2bb99d5fe8c4723347bec202ca5" translate="yes" xml:space="preserve">
          <source>Timer</source>
          <target state="translated">Timer</target>
        </trans-unit>
        <trans-unit id="b20460a8965f21d19e98c04e87d17f50bd2afc59" translate="yes" xml:space="preserve">
          <source>Timer used when inside a scrollpane and the scrollbar is adjusting.</source>
          <target state="translated">Timer used when inside a scrollpane and the scrollbar is adjusting.</target>
        </trans-unit>
        <trans-unit id="81883e3bc6886077cba970d3d858196e709beb20" translate="yes" xml:space="preserve">
          <source>Timer.addNotification()</source>
          <target state="translated">Timer.addNotification()</target>
        </trans-unit>
        <trans-unit id="4896acdf5c63a6f47b6f6e5849ec30459d3397c8" translate="yes" xml:space="preserve">
          <source>Timer.cancel()</source>
          <target state="translated">Timer.cancel()</target>
        </trans-unit>
        <trans-unit id="9bb39f74d2e3a29a5d75b90c5890df232ec8a798" translate="yes" xml:space="preserve">
          <source>Timer.getAllNotificationIDs()</source>
          <target state="translated">Timer.getAllNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="97ea8e20a2d0daef8655419765a1ff27524f3f68" translate="yes" xml:space="preserve">
          <source>Timer.getDate()</source>
          <target state="translated">Timer.getDate()</target>
        </trans-unit>
        <trans-unit id="2af097df8af116002578d5ede08febd3159da119" translate="yes" xml:space="preserve">
          <source>Timer.getFixedRate()</source>
          <target state="translated">Timer.getFixedRate()</target>
        </trans-unit>
        <trans-unit id="1df4cccd4d4a572b241065bce89ac0d714bf31c2" translate="yes" xml:space="preserve">
          <source>Timer.getNbNotifications()</source>
          <target state="translated">Timer.getNbNotifications()</target>
        </trans-unit>
        <trans-unit id="529f55d399ba2c6c3ad532c17a0040d4bcbabf41" translate="yes" xml:space="preserve">
          <source>Timer.getNbOccurences()</source>
          <target state="translated">Timer.getNbOccurences()</target>
        </trans-unit>
        <trans-unit id="337e7f895c06efc9798f62fade28c2c7bc75afb0" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationIDs()</source>
          <target state="translated">Timer.getNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="dc7343a202131d19a3692f24d648b04ebe01ace1" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationInfo()</source>
          <target state="translated">Timer.getNotificationInfo()</target>
        </trans-unit>
        <trans-unit id="b7078c5612fe13ddc75429a66eef5a6cf51c7f79" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationMessage()</source>
          <target state="translated">Timer.getNotificationMessage()</target>
        </trans-unit>
        <trans-unit id="df06bf539a64e1d86be94d1f6c21668177afed89" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationType()</source>
          <target state="translated">Timer.getNotificationType()</target>
        </trans-unit>
        <trans-unit id="029175da9ac93fd9fe81c7afedd7c0a95ef244e3" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationUserData()</source>
          <target state="translated">Timer.getNotificationUserData()</target>
        </trans-unit>
        <trans-unit id="57357051a09d379f81cc559540f30392aaeb31ea" translate="yes" xml:space="preserve">
          <source>Timer.getPeriod()</source>
          <target state="translated">Timer.getPeriod()</target>
        </trans-unit>
        <trans-unit id="f78b87ef04f0bb00580e579f2fcd11ab4279366c" translate="yes" xml:space="preserve">
          <source>Timer.getSendPastNotifications()</source>
          <target state="translated">Timer.getSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="4446979211b5db6ce570fbcb22219fbb9c77aae8" translate="yes" xml:space="preserve">
          <source>Timer.isActive()</source>
          <target state="translated">Timer.isActive()</target>
        </trans-unit>
        <trans-unit id="87706d3abfd020bfef2fb744b330e323bcddc5a8" translate="yes" xml:space="preserve">
          <source>Timer.isEmpty()</source>
          <target state="translated">Timer.isEmpty()</target>
        </trans-unit>
        <trans-unit id="79df4ac63affeeebf92910d568c126ee51c99e46" translate="yes" xml:space="preserve">
          <source>Timer.postDeregister()</source>
          <target state="translated">Timer.postDeregister()</target>
        </trans-unit>
        <trans-unit id="7b5f54b95af92a706d03f83f7098c293894eca3f" translate="yes" xml:space="preserve">
          <source>Timer.postRegister()</source>
          <target state="translated">Timer.postRegister()</target>
        </trans-unit>
        <trans-unit id="447f824bc2e0b6f94331da66e273cf93caaa4ea8" translate="yes" xml:space="preserve">
          <source>Timer.preDeregister()</source>
          <target state="translated">Timer.preDeregister()</target>
        </trans-unit>
        <trans-unit id="a7234e331e0c317bc0dcc660197a94021b492954" translate="yes" xml:space="preserve">
          <source>Timer.preRegister()</source>
          <target state="translated">Timer.preRegister()</target>
        </trans-unit>
        <trans-unit id="469a71915f47f697b0dbc948b29da72d062b3076" translate="yes" xml:space="preserve">
          <source>Timer.purge()</source>
          <target state="translated">Timer.purge()</target>
        </trans-unit>
        <trans-unit id="60bbc2e3fb8c12e5c337cff4039fb8100605ec93" translate="yes" xml:space="preserve">
          <source>Timer.removeAllNotifications()</source>
          <target state="translated">Timer.removeAllNotifications()</target>
        </trans-unit>
        <trans-unit id="f6d90aa3f0b109727d4e7aff37653de419bf0d73" translate="yes" xml:space="preserve">
          <source>Timer.removeNotification()</source>
          <target state="translated">Timer.removeNotification()</target>
        </trans-unit>
        <trans-unit id="230ad18a70470f6b72de5c59f28a6bcb0da1496a" translate="yes" xml:space="preserve">
          <source>Timer.removeNotifications()</source>
          <target state="translated">Timer.removeNotifications()</target>
        </trans-unit>
        <trans-unit id="56182922191e990b74ab5db444640f9b00561de9" translate="yes" xml:space="preserve">
          <source>Timer.schedule()</source>
          <target state="translated">Timer.schedule()</target>
        </trans-unit>
        <trans-unit id="fa0c7e4a2fb9be5aeebfe683e8eb7a3969fb53ab" translate="yes" xml:space="preserve">
          <source>Timer.scheduleAtFixedRate()</source>
          <target state="translated">Timer.scheduleAtFixedRate()</target>
        </trans-unit>
        <trans-unit id="dae275a30a1987fa3697a4e86ae79c78c06b14f3" translate="yes" xml:space="preserve">
          <source>Timer.setSendPastNotifications()</source>
          <target state="translated">Timer.setSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="68fca54c892ed8115fe16a2ca295987b82732716" translate="yes" xml:space="preserve">
          <source>Timer.start()</source>
          <target state="translated">Timer.start()</target>
        </trans-unit>
        <trans-unit id="464ee22a6605fc707ee61cbe4b6acf2a62a27242" translate="yes" xml:space="preserve">
          <source>Timer.stop()</source>
          <target state="translated">Timer.stop()</target>
        </trans-unit>
        <trans-unit id="4745ab42c374b6ddd2749572dda476df993af964" translate="yes" xml:space="preserve">
          <source>TimerMBean</source>
          <target state="translated">TimerMBean</target>
        </trans-unit>
        <trans-unit id="ab45a18791516a0d8b992c386c17f0a94fc001c7" translate="yes" xml:space="preserve">
          <source>TimerMBean.addNotification()</source>
          <target state="translated">TimerMBean.addNotification()</target>
        </trans-unit>
        <trans-unit id="cabf14affb9bb3d2bbc0f2c10e3cb6215380a957" translate="yes" xml:space="preserve">
          <source>TimerMBean.getAllNotificationIDs()</source>
          <target state="translated">TimerMBean.getAllNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="f2f0224a15f20d7056f6b466379a8ebc59bedc03" translate="yes" xml:space="preserve">
          <source>TimerMBean.getDate()</source>
          <target state="translated">TimerMBean.getDate()</target>
        </trans-unit>
        <trans-unit id="57ad433c1188325131ba6d348a3fc9160a47240e" translate="yes" xml:space="preserve">
          <source>TimerMBean.getFixedRate()</source>
          <target state="translated">TimerMBean.getFixedRate()</target>
        </trans-unit>
        <trans-unit id="4ea1d519219b502c595dfa0c65a4889379e40649" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNbNotifications()</source>
          <target state="translated">TimerMBean.getNbNotifications()</target>
        </trans-unit>
        <trans-unit id="4f12890f2f9cac3684436b6c5b0a1bdec58ece20" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNbOccurences()</source>
          <target state="translated">TimerMBean.getNbOccurences()</target>
        </trans-unit>
        <trans-unit id="636fbad0075124d3cabcdf71e9c9f9391391709d" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationIDs()</source>
          <target state="translated">TimerMBean.getNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="8999c51a2b18d4699c6dda98c540926c265aa3a8" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationMessage()</source>
          <target state="translated">TimerMBean.getNotificationMessage()</target>
        </trans-unit>
        <trans-unit id="6c0efd75ba28af29bcdd7915bb0d7897f6ccf178" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationType()</source>
          <target state="translated">TimerMBean.getNotificationType()</target>
        </trans-unit>
        <trans-unit id="eb83d72bf4861b48f7b70f189221cda6219db761" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationUserData()</source>
          <target state="translated">TimerMBean.getNotificationUserData()</target>
        </trans-unit>
        <trans-unit id="08c496ea5938bf04aa0cdb99f985c2885382ca33" translate="yes" xml:space="preserve">
          <source>TimerMBean.getPeriod()</source>
          <target state="translated">TimerMBean.getPeriod()</target>
        </trans-unit>
        <trans-unit id="843bcdc502f986de4d2ac74ff6b6441a45eaf612" translate="yes" xml:space="preserve">
          <source>TimerMBean.getSendPastNotifications()</source>
          <target state="translated">TimerMBean.getSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="2e80500c146295abc08326321704a668cb47dbd0" translate="yes" xml:space="preserve">
          <source>TimerMBean.isActive()</source>
          <target state="translated">TimerMBean.isActive()</target>
        </trans-unit>
        <trans-unit id="b529b73caf402e506be7a04417d98526209f1c60" translate="yes" xml:space="preserve">
          <source>TimerMBean.isEmpty()</source>
          <target state="translated">TimerMBean.isEmpty()</target>
        </trans-unit>
        <trans-unit id="31caa0e6959c22a72c11796f5c3053213f1bb25c" translate="yes" xml:space="preserve">
          <source>TimerMBean.removeAllNotifications()</source>
          <target state="translated">TimerMBean.removeAllNotifications()</target>
        </trans-unit>
        <trans-unit id="06443e5fc2f1bcca44edf9fe88470effe45f27e0" translate="yes" xml:space="preserve">
          <source>TimerMBean.removeNotification()</source>
          <target state="translated">TimerMBean.removeNotification()</target>
        </trans-unit>
        <trans-unit id="36084ae3698c86f6e82e72e8816e56d3e3f031e0" translate="yes" xml:space="preserve">
          <source>TimerMBean.removeNotifications()</source>
          <target state="translated">TimerMBean.removeNotifications()</target>
        </trans-unit>
        <trans-unit id="41852f9f70d5bf0ec98d16d92088277a4daaa735" translate="yes" xml:space="preserve">
          <source>TimerMBean.setSendPastNotifications()</source>
          <target state="translated">TimerMBean.setSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="e691dc971ee42a7b95439844a5ac2c29fb25dd0a" translate="yes" xml:space="preserve">
          <source>TimerMBean.start()</source>
          <target state="translated">TimerMBean.start()</target>
        </trans-unit>
        <trans-unit id="2499248a5c4c8fea79097eec24a71eb010236fd9" translate="yes" xml:space="preserve">
          <source>TimerMBean.stop()</source>
          <target state="translated">TimerMBean.stop()</target>
        </trans-unit>
        <trans-unit id="1e50eeda781ceb9ef85731b34490acd306b91521" translate="yes" xml:space="preserve">
          <source>TimerNotification</source>
          <target state="translated">TimerNotification</target>
        </trans-unit>
        <trans-unit id="df5b02b9b175d4b10e997bf48fda3ed1c1208b04" translate="yes" xml:space="preserve">
          <source>TimerNotification.getNotificationID()</source>
          <target state="translated">TimerNotification.getNotificationID()</target>
        </trans-unit>
        <trans-unit id="db860929e828fe0641ac766efabe87b45c980daf" translate="yes" xml:space="preserve">
          <source>TimerTask</source>
          <target state="translated">TimerTask</target>
        </trans-unit>
        <trans-unit id="9d8bbad39e66d5ec2b1a732a23c2e6f13ecb6887" translate="yes" xml:space="preserve">
          <source>TimerTask.cancel()</source>
          <target state="translated">TimerTask.cancel()</target>
        </trans-unit>
        <trans-unit id="792a79da08a7e0bb591e07d3e8064893b257bd69" translate="yes" xml:space="preserve">
          <source>TimerTask.run()</source>
          <target state="translated">TimerTask.run()</target>
        </trans-unit>
        <trans-unit id="78dadea3be55e36f60d5fbec8b0b892eca60f6cb" translate="yes" xml:space="preserve">
          <source>TimerTask.scheduledExecutionTime()</source>
          <target state="translated">TimerTask.scheduledExecutionTime()</target>
        </trans-unit>
        <trans-unit id="7fb217f30f6443cf3e16104e905101256d5e1626" translate="yes" xml:space="preserve">
          <source>Times out</source>
          <target state="translated">Times out</target>
        </trans-unit>
        <trans-unit id="6c6d476a98f07f16e0d6e2bcb3f917bd62a38d93" translate="yes" xml:space="preserve">
          <source>TimesRoman (use Serif)</source>
          <target state="translated">TimesRoman (use Serif)</target>
        </trans-unit>
        <trans-unit id="19eabc961735d78f12fc7be906ffcb033853cf85" translate="yes" xml:space="preserve">
          <source>Timestamp</source>
          <target state="translated">Timestamp</target>
        </trans-unit>
        <trans-unit id="94cdc1fe977cba1c2d58d57a70bae983f620006e" translate="yes" xml:space="preserve">
          <source>Timestamp.equals()</source>
          <target state="translated">Timestamp.equals()</target>
        </trans-unit>
        <trans-unit id="f317887dcb89cda6b356ea42eade8c2b5e28868f" translate="yes" xml:space="preserve">
          <source>Timestamp.getSignerCertPath()</source>
          <target state="translated">Timestamp.getSignerCertPath()</target>
        </trans-unit>
        <trans-unit id="69059e7deee2c95ea43368902a077e27ccf8cf59" translate="yes" xml:space="preserve">
          <source>Timestamp.getTimestamp()</source>
          <target state="translated">Timestamp.getTimestamp()</target>
        </trans-unit>
        <trans-unit id="fa5ebbc5912e10adb01112392bbc56892ec74298" translate="yes" xml:space="preserve">
          <source>Timestamp.hashCode()</source>
          <target state="translated">Timestamp.hashCode()</target>
        </trans-unit>
        <trans-unit id="e6f9a7710e9367ff6d7245db561ce54c3724dacd" translate="yes" xml:space="preserve">
          <source>Timestamp.toString()</source>
          <target state="translated">Timestamp.toString()</target>
        </trans-unit>
        <trans-unit id="098024dc5537ca3623978ac7c0a6140ce39062b8" translate="yes" xml:space="preserve">
          <source>Timing</source>
          <target state="translated">Timing</target>
        </trans-unit>
        <trans-unit id="91f5ff61d2144f29c14b3d41f7b5f57a180a71d4" translate="yes" xml:space="preserve">
          <source>Timing of provider discovery</source>
          <target state="translated">Timing of provider discovery</target>
        </trans-unit>
        <trans-unit id="9d83d547ddd2a9519402e1cc1af3a4263caa9c55" translate="yes" xml:space="preserve">
          <source>Timing of resolution</source>
          <target state="translated">Timing of resolution</target>
        </trans-unit>
        <trans-unit id="3557cf461c922fb358962f7a3908fc79d1e1829c" translate="yes" xml:space="preserve">
          <source>Tip for Trouble-shooting</source>
          <target state="translated">Tip for Trouble-shooting</target>
        </trans-unit>
        <trans-unit id="e936a2368fae0dcade82992da382e3a7afc79b6f" translate="yes" xml:space="preserve">
          <source>Tip for Trouble-shooting:</source>
          <target state="translated">Tip for Trouble-shooting:</target>
        </trans-unit>
        <trans-unit id="17aee4a357c6012617a8c4c54a1dae2faaa490a2" translate="yes" xml:space="preserve">
          <source>Title pane</source>
          <target state="translated">Title pane</target>
        </trans-unit>
        <trans-unit id="eabf432b886231bee9b726c95c050e5a2a1d31ef" translate="yes" xml:space="preserve">
          <source>TitleAction</source>
          <target state="translated">TitleAction</target>
        </trans-unit>
        <trans-unit id="fe5417f8737103c29740c880d9fd9c6024616a01" translate="yes" xml:space="preserve">
          <source>TitlePane of an InternalFrame.</source>
          <target state="translated">TitlePane of an InternalFrame.</target>
        </trans-unit>
        <trans-unit id="43f37db998e81dade60d568fc93ec6e092904810" translate="yes" xml:space="preserve">
          <source>TitlePane of an InternalFrame. The TitlePane typically shows a menu, title, widgets to manipulate the internal frame. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;InternalFrameTitlePane&lt;/code&gt;.</source>
          <target state="translated">TitlePane of an InternalFrame. The TitlePane typically shows a menu, title, widgets to manipulate the internal frame. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;InternalFrameTitlePane&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11bd1d7a27634107404c3d967ee797adfb9a5e1e" translate="yes" xml:space="preserve">
          <source>TitlePaneLayout</source>
          <target state="translated">TitlePaneLayout</target>
        </trans-unit>
        <trans-unit id="c60032656c5e7157b36fdae4781cadecc7aa36f1" translate="yes" xml:space="preserve">
          <source>TitleProperty</source>
          <target state="translated">TitleProperty</target>
        </trans-unit>
        <trans-unit id="f7fb128ab2b2b606667607db6ec0f87259f7a1e5" translate="yes" xml:space="preserve">
          <source>Titlecase</source>
          <target state="translated">Titlecase</target>
        </trans-unit>
        <trans-unit id="232c897822eee0aa4be2243715c458e7a161bdd9" translate="yes" xml:space="preserve">
          <source>TitledBorder</source>
          <target state="translated">TitledBorder</target>
        </trans-unit>
        <trans-unit id="bf10f7d2eec21fc0a918ed3e9f24675f67ee71e7" translate="yes" xml:space="preserve">
          <source>TitledBorderUIResource</source>
          <target state="translated">TitledBorderUIResource</target>
        </trans-unit>
        <trans-unit id="ae79ea1e9c6391a9ed83a2e18a031b835feec0c9" translate="yes" xml:space="preserve">
          <source>To</source>
          <target state="translated">To</target>
        </trans-unit>
        <trans-unit id="5f14923c5999c9e1a81cbb61d2e7edb34d0b3030" translate="yes" xml:space="preserve">
          <source>To &quot;run&quot; as a particular &lt;code&gt;Principal&lt;/code&gt;, code invokes the &lt;code&gt;Subject.doAs(subject, ...)&lt;/code&gt; method. After invoking that method, the code runs as all the Principals associated with the specified &lt;code&gt;Subject&lt;/code&gt;. Note that this &lt;code&gt;Policy&lt;/code&gt; (and the Permissions granted in this &lt;code&gt;Policy&lt;/code&gt;) only become effective after the call to &lt;code&gt;Subject.doAs&lt;/code&gt; has occurred.</source>
          <target state="translated">특정 &lt;code&gt;Principal&lt;/code&gt; 로 &quot;실행&quot;하기 위해 코드는 &lt;code&gt;Subject.doAs(subject, ...)&lt;/code&gt; 메소드를 호출합니다 . 해당 메소드를 호출 한 후 코드는 지정된 &lt;code&gt;Subject&lt;/code&gt; 와 연관된 모든 프린시 펄로 실행됩니다 . 이 &lt;code&gt;Policy&lt;/code&gt; (및이 &lt;code&gt;Policy&lt;/code&gt; 에서 부여 된 권한 ) 은 &lt;code&gt;Subject.doAs&lt;/code&gt; 에 대한 호출 이 발생한 후에 만 적용 됩니다.</target>
        </trans-unit>
        <trans-unit id="57af1372f17114a8bcc2db8d5516bec385ce0653" translate="yes" xml:space="preserve">
          <source>To a user of your program, however, both of these sequences should be treated as the same &quot;user-level&quot; character &quot;A with acute accent&quot;. When you are searching or comparing text, you must ensure that these two sequences are treated as equivalent. In addition, you must handle characters with more than one accent. Sometimes the order of a character's combining accents is significant, while in other cases accent sequences in different orders are really equivalent.</source>
          <target state="translated">그러나 프로그램 사용자에게이 두 시퀀스는 모두 동일한 &quot;사용자 수준&quot;문자 &quot;급성 악센트가있는 A&quot;로 취급되어야합니다. 텍스트를 검색하거나 비교할 때이 두 시퀀스가 ​​동등한 것으로 취급되는지 확인해야합니다. 또한 둘 이상의 악센트가있는 문자를 처리해야합니다. 때로는 캐릭터의 결합 악센트 순서가 중요하지만 다른 경우에는 다른 순서의 악센트 순서가 실제로 동일합니다.</target>
        </trans-unit>
        <trans-unit id="5c1897506b00f2472473c7bf16938a123ff47b08" translate="yes" xml:space="preserve">
          <source>To access the next page (chunk of data), an application calls the method &lt;code&gt;nextPage&lt;/code&gt;. This method creates a new &lt;code&gt;CachedRowSet&lt;/code&gt; object and fills it with the next page of data. For example, assume that the &lt;code&gt;CachedRowSet&lt;/code&gt; object's command returns a &lt;code&gt;ResultSet&lt;/code&gt; object</source>
          <target state="translated">To access the next page (chunk of data), an application calls the method &lt;code&gt;nextPage&lt;/code&gt; . This method creates a new &lt;code&gt;CachedRowSet&lt;/code&gt; object and fills it with the next page of data. For example, assume that the &lt;code&gt;CachedRowSet&lt;/code&gt; object's command returns a &lt;code&gt;ResultSet&lt;/code&gt; object</target>
        </trans-unit>
        <trans-unit id="ca231756d4836a985dd44e4c864318e7cb7e548f" translate="yes" xml:space="preserve">
          <source>To achieve laziness the actual work of locating and instantiating providers is done by the iterator itself. Its &lt;a href=&quot;iterator#hasNext()&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator#next()&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; methods can therefore throw a &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; for any of the reasons specified in the &lt;a href=&quot;#errors&quot;&gt;Errors&lt;/a&gt; section above. To write robust code it is only necessary to catch &lt;code&gt;ServiceConfigurationError&lt;/code&gt; when using the iterator. If an error is thrown then subsequent invocations of the iterator will make a best effort to locate and instantiate the next available provider, but in general such recovery cannot be guaranteed.</source>
          <target state="translated">To achieve laziness the actual work of locating and instantiating providers is done by the iterator itself. Its &lt;a href=&quot;iterator#hasNext()&quot;&gt; &lt;code&gt;hasNext&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;iterator#next()&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; methods can therefore throw a &lt;a href=&quot;serviceconfigurationerror&quot;&gt; &lt;code&gt;ServiceConfigurationError&lt;/code&gt; &lt;/a&gt; for any of the reasons specified in the &lt;a href=&quot;#errors&quot;&gt;Errors&lt;/a&gt; section above. To write robust code it is only necessary to catch &lt;code&gt;ServiceConfigurationError&lt;/code&gt; when using the iterator. If an error is thrown then subsequent invocations of the iterator will make a best effort to locate and instantiate the next available provider, but in general such recovery cannot be guaranteed.</target>
        </trans-unit>
        <trans-unit id="4a36173cb289a14da668f4851982702ec5e661c1" translate="yes" xml:space="preserve">
          <source>To achieve laziness the actual work of locating providers is done when processing the stream. If a service provider cannot be loaded for any of the reasons specified in the &lt;a href=&quot;#errors&quot;&gt;Errors&lt;/a&gt; section above then &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; is thrown by whatever method caused the service provider to be loaded.</source>
          <target state="translated">To achieve laziness the actual work of locating providers is done when processing the stream. If a service provider cannot be loaded for any of the reasons specified in the &lt;a href=&quot;#errors&quot;&gt;Errors&lt;/a&gt; section above then &lt;a href=&quot;serviceconfigurationerror&quot;&gt; &lt;code&gt;ServiceConfigurationError&lt;/code&gt; &lt;/a&gt; is thrown by whatever method caused the service provider to be loaded.</target>
        </trans-unit>
        <trans-unit id="2e64d08ea8166d722ce0f8580516aea74cb7327d" translate="yes" xml:space="preserve">
          <source>To achieve laziness the actual work of parsing the available provider-configuration files and instantiating providers must be done by the iterator itself. Its &lt;a href=&quot;iterator#hasNext--&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator#next--&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; methods can therefore throw a &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; if a provider-configuration file violates the specified format, or if it names a provider class that cannot be found and instantiated, or if the result of instantiating the class is not assignable to the service type, or if any other kind of exception or error is thrown as the next provider is located and instantiated. To write robust code it is only necessary to catch &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; when using a service iterator.</source>
          <target state="translated">게으름을 얻으려면 사용 가능한 공급자 구성 파일을 구문 분석하고 공급자를 인스턴스화하는 실제 작업은 반복자 자체에서 수행해야합니다. 그 &lt;a href=&quot;iterator#hasNext--&quot;&gt; &lt;code&gt;hasNext&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;iterator#next--&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; 방법을 따라서 던질 수있는 &lt;a href=&quot;serviceconfigurationerror&quot;&gt; &lt;code&gt;ServiceConfigurationError&lt;/code&gt; &lt;/a&gt; 바이더 구성 파일이 지정된 형식을 위반하는 경우, 또는이 이름이 클래스의 인스턴스의 결과가 서비스 유형에 할당 할 수없는 경우 발견하고 인스턴스화, 또는 할 수없는 프로 바이더 클래스를하는 경우 또는 다음 공급자를 찾아 인스턴스화 할 때 다른 종류의 예외 나 오류가 발생하는 경우. 강력한 코드를 작성하려면 서비스 반복기를 사용할 때 &lt;a href=&quot;serviceconfigurationerror&quot;&gt; &lt;code&gt;ServiceConfigurationError&lt;/code&gt; &lt;/a&gt; 를 잡아야 합니다.</target>
        </trans-unit>
        <trans-unit id="f660f1fdf02f0b0c53d2e6bfb4da162ba2db350d" translate="yes" xml:space="preserve">
          <source>To add a border around the main viewport, you can use &lt;code&gt;setViewportBorder&lt;/code&gt;. (Of course, you can also add a border around the whole scroll pane using &lt;code&gt;setBorder&lt;/code&gt;.)</source>
          <target state="translated">To add a border around the main viewport, you can use &lt;code&gt;setViewportBorder&lt;/code&gt; . (Of course, you can also add a border around the whole scroll pane using &lt;code&gt;setBorder&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="588767c38b0b444c375dc69fcf2cc26802572150" translate="yes" xml:space="preserve">
          <source>To add a column to this &lt;code&gt;JTable&lt;/code&gt; to display the &lt;code&gt;modelColumn&lt;/code&gt;'th column of data in the model with a given &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;cellRenderer&lt;/code&gt;, and &lt;code&gt;cellEditor&lt;/code&gt; you can use:</source>
          <target state="translated">To add a column to this &lt;code&gt;JTable&lt;/code&gt; to display the &lt;code&gt;modelColumn&lt;/code&gt; 'th column of data in the model with a given &lt;code&gt;width&lt;/code&gt; , &lt;code&gt;cellRenderer&lt;/code&gt; , and &lt;code&gt;cellEditor&lt;/code&gt; you can use:</target>
        </trans-unit>
        <trans-unit id="863cc423d428bb677b96e6a9d670999f85be2783" translate="yes" xml:space="preserve">
          <source>To add a coordinate transform, use the &lt;code&gt;transform&lt;/code&gt;, &lt;code&gt;rotate&lt;/code&gt;, &lt;code&gt;scale&lt;/code&gt;, or &lt;code&gt;shear&lt;/code&gt; methods. The &lt;code&gt;setTransform&lt;/code&gt; method is intended only for restoring the original &lt;code&gt;Graphics2D&lt;/code&gt; transform after rendering, as shown in this example:</source>
          <target state="translated">To add a coordinate transform, use the &lt;code&gt;transform&lt;/code&gt; , &lt;code&gt;rotate&lt;/code&gt; , &lt;code&gt;scale&lt;/code&gt; , or &lt;code&gt;shear&lt;/code&gt; methods. The &lt;code&gt;setTransform&lt;/code&gt; method is intended only for restoring the original &lt;code&gt;Graphics2D&lt;/code&gt; transform after rendering, as shown in this example:</target>
        </trans-unit>
        <trans-unit id="e906cc18369f863dd230411fdde5ac28d756e1c8" translate="yes" xml:space="preserve">
          <source>To add a new attribute node with a qualified name and namespace URI, use the &lt;code&gt;setAttributeNodeNS&lt;/code&gt; method.</source>
          <target state="translated">규정 된 이름과 네임 스페이스 URI를 사용하여 새 속성 노드를 추가하려면 &lt;code&gt;setAttributeNodeNS&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="dff0f41b75b6bfc32af4b34fb312dcecad708cec" translate="yes" xml:space="preserve">
          <source>To add components to the &lt;code&gt;JRootPane&lt;/code&gt; (other than the optional menu bar), you add the object to the &lt;code&gt;contentPane&lt;/code&gt; of the &lt;code&gt;JRootPane&lt;/code&gt;, like this:</source>
          <target state="translated">To add components to the &lt;code&gt;JRootPane&lt;/code&gt; (other than the optional menu bar), you add the object to the &lt;code&gt;contentPane&lt;/code&gt; of the &lt;code&gt;JRootPane&lt;/code&gt; , like this:</target>
        </trans-unit>
        <trans-unit id="878ec0869f8701c9d2e6abc0d34c545132ce4951" translate="yes" xml:space="preserve">
          <source>To address this problem, and to simplify the design of clients providing multiple docs to a Print Job, every Print Service proxy that supports multidoc print jobs is required to access a &lt;code&gt;MultiDoc&lt;/code&gt; object using the interleaved pattern. That is, given a &lt;code&gt;MultiDoc&lt;/code&gt; object, the print service proxy will call &lt;a href=&quot;#getDoc()&quot;&gt;&lt;code&gt;getDoc()&lt;/code&gt;&lt;/a&gt; one or more times until it successfully obtains the current &lt;code&gt;Doc&lt;/code&gt; object. The print service proxy will then obtain the current doc's print data, not proceeding until all the print data is obtained or an unrecoverable error occurs. If it is able to continue, the print service proxy will then call &lt;a href=&quot;#next()&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; one or more times until it successfully obtains either the next &lt;code&gt;MultiDoc&lt;/code&gt; object or an indication that there are no more. An implementation of interface &lt;code&gt;MultiDoc&lt;/code&gt; can assume the print service proxy will follow this interleaved pattern; for any other pattern of usage, the &lt;code&gt;MultiDoc&lt;/code&gt; implementation's behavior is unspecified.</source>
          <target state="translated">To address this problem, and to simplify the design of clients providing multiple docs to a Print Job, every Print Service proxy that supports multidoc print jobs is required to access a &lt;code&gt;MultiDoc&lt;/code&gt; object using the interleaved pattern. That is, given a &lt;code&gt;MultiDoc&lt;/code&gt; object, the print service proxy will call &lt;a href=&quot;#getDoc()&quot;&gt; &lt;code&gt;getDoc()&lt;/code&gt; &lt;/a&gt; one or more times until it successfully obtains the current &lt;code&gt;Doc&lt;/code&gt; object. The print service proxy will then obtain the current doc's print data, not proceeding until all the print data is obtained or an unrecoverable error occurs. If it is able to continue, the print service proxy will then call &lt;a href=&quot;#next()&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt; one or more times until it successfully obtains either the next &lt;code&gt;MultiDoc&lt;/code&gt; object or an indication that there are no more. An implementation of interface &lt;code&gt;MultiDoc&lt;/code&gt; can assume the print service proxy will follow this interleaved pattern; for any other pattern of usage, the &lt;code&gt;MultiDoc&lt;/code&gt; implementation's behavior is unspecified.</target>
        </trans-unit>
        <trans-unit id="0901ef1364b0bc7003aefcc673f8da9f739ccaea" translate="yes" xml:space="preserve">
          <source>To address this problem, and to simplify the design of clients providing multiple docs to a Print Job, every Print Service proxy that supports multidoc print jobs is required to access a MultiDoc object using the interleaved pattern. That is, given a MultiDoc object, the print service proxy will call &lt;a href=&quot;multidoc#getDoc--&quot;&gt;&lt;code&gt;getDoc()&lt;/code&gt;&lt;/a&gt; one or more times until it successfully obtains the current Doc object. The print service proxy will then obtain the current doc's print data, not proceeding until all the print data is obtained or an unrecoverable error occurs. If it is able to continue, the print service proxy will then call &lt;a href=&quot;multidoc#next--&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; one or more times until it successfully obtains either the next MultiDoc object or an indication that there are no more. An implementation of interface MultiDoc can assume the print service proxy will follow this interleaved pattern; for any other pattern of usage, the MultiDoc implementation's behavior is unspecified.</source>
          <target state="translated">이 문제를 해결하고 인쇄 작업에 여러 문서를 제공하는 클라이언트의 설계를 단순화하기 위해, 다중 문서 인쇄 작업을 지원하는 모든 인쇄 서비스 프록시는 인터리브 패턴을 사용하여 MultiDoc 개체에 액세스해야합니다. 즉, MultiDoc 객체가 주어지면 인쇄 서비스 프록시는 현재 Doc 객체를 성공적으로 얻을 때까지 &lt;a href=&quot;multidoc#getDoc--&quot;&gt; &lt;code&gt;getDoc()&lt;/code&gt; &lt;/a&gt; 한 번 이상 호출 합니다. 그런 다음 인쇄 서비스 프록시는 모든 인쇄 데이터를 얻거나 복구 할 수없는 오류가 발생할 때까지 진행하지 않고 현재 문서의 인쇄 데이터를 얻습니다. 계속할 수 있으면 인쇄 서비스 프록시는 &lt;a href=&quot;multidoc#next--&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt; 를 호출합니다.다음 MultiDoc 오브젝트를 얻거나 더 이상 존재하지 않음을 표시 할 때까지 한 번 이상. MultiDoc 인터페이스의 구현은 인쇄 서비스 프록시가이 인터리브 패턴을 따를 것이라고 가정 할 수 있습니다. 다른 사용 패턴의 경우 MultiDoc 구현의 동작은 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3114b61fabbaf8f1204ff4e332d1d6b4ad9fa1cd" translate="yes" xml:space="preserve">
          <source>To align elements along the baseline you &lt;code&gt;createBaselineGroup&lt;/code&gt;, or &lt;code&gt;createParallelGroup&lt;/code&gt; with an alignment of &lt;code&gt;BASELINE&lt;/code&gt;. If the group was not created with a baseline alignment, and you attempt to add an element specifying a baseline alignment, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">To align elements along the baseline you &lt;code&gt;createBaselineGroup&lt;/code&gt; , or &lt;code&gt;createParallelGroup&lt;/code&gt; with an alignment of &lt;code&gt;BASELINE&lt;/code&gt; . If the group was not created with a baseline alignment, and you attempt to add an element specifying a baseline alignment, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="f7c5b88ac19ad6f7230d27dffbaf4dac3bda87a9" translate="yes" xml:space="preserve">
          <source>To allow attribute values to contain both single and double quotes, the apostrophe or single-quote character (') may be represented as &quot;&amp;amp;apos;&quot;, and the double-quote character (&quot;) as &quot;&amp;amp;quot;&quot;. New line characters and other characters that cannot be represented directly in attribute values in the output character encoding are serialized as a numeric character reference.</source>
          <target state="translated">To allow attribute values to contain both single and double quotes, the apostrophe or single-quote character (') may be represented as &quot;&amp;amp;apos;&quot;, and the double-quote character (&quot;) as &quot;&amp;amp;quot;&quot;. New line characters and other characters that cannot be represented directly in attribute values in the output character encoding are serialized as a numeric character reference.</target>
        </trans-unit>
        <trans-unit id="7a153e650f00cf6ae0dd2b8b108821031836e76a" translate="yes" xml:space="preserve">
          <source>To allow for concurrent handling of new connections, the completion handler is not invoked directly by the initiating thread when a new connection is accepted immediately (see &lt;a href=&quot;asynchronouschannelgroup#threading&quot;&gt;Threading&lt;/a&gt;).</source>
          <target state="translated">새 연결을 동시에 처리 할 수 ​​있도록 새 연결이 즉시 수락 될 때 시작 스레드가 완료 핸들러를 직접 호출하지 않습니다 ( &lt;a href=&quot;asynchronouschannelgroup#threading&quot;&gt;스레딩&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="be5a74187e5d5e88e2eac45e5fd470fc826ba10d" translate="yes" xml:space="preserve">
          <source>To allow for upgrading/overriding of modules defined to the platform class loader, and where upgraded modules read modules defined to class loaders other than the platform class loader and its ancestors, then the platform class loader may have to delegate to other class loaders, the application class loader for example. In other words, classes in named modules defined to class loaders other than the platform class loader and its ancestors may be visible to the platform class loader.</source>
          <target state="translated">To allow for upgrading/overriding of modules defined to the platform class loader, and where upgraded modules read modules defined to class loaders other than the platform class loader and its ancestors, then the platform class loader may have to delegate to other class loaders, the application class loader for example. In other words, classes in named modules defined to class loaders other than the platform class loader and its ancestors may be visible to the platform class loader.</target>
        </trans-unit>
        <trans-unit id="b0149ec9554c159ccbe058966b05df35f3701f32" translate="yes" xml:space="preserve">
          <source>To allow subtypes of non-serializable classes to be serialized, the subtype may assume responsibility for saving and restoring the state of the supertype's public, protected, and (if accessible) package fields. The subtype may assume this responsibility only if the class it extends has an accessible no-arg constructor to initialize the class's state. It is an error to declare a class Serializable if this is not the case. The error will be detected at runtime.</source>
          <target state="translated">직렬화 할 수없는 클래스의 하위 유형을 직렬화하기 위해 하위 유형은 수퍼 유형의 공용, 보호 및 (액세스 가능한 경우) 패키지 필드의 상태를 저장하고 복원해야 할 책임이 있습니다. 서브 타입은 그것이 확장하는 클래스가 클래스의 상태를 초기화하기 위해 접근 가능한 no-arg 생성자를 가지고있는 경우에만이 책임을 맡을 수 있습니다. 그렇지 않은 경우 Serializable 클래스를 선언하는 것은 오류입니다. 런타임시 오류가 감지됩니다.</target>
        </trans-unit>
        <trans-unit id="04b02950d208e8aeb726121c4232fee22a90ca25" translate="yes" xml:space="preserve">
          <source>To allow the Relation Service to maintain the consistency (in case of MBean unregistration) and to be able to perform queries, this method must be called when a role is updated.</source>
          <target state="translated">관계 서비스가 일관성을 유지하고 (MBean 등록 취소의 경우) 쿼리를 수행 할 수있게하려면 역할이 업데이트 될 때이 메소드를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="18f203586f552a8bf3e85ed2fd04ae6a1ec1b0c1" translate="yes" xml:space="preserve">
          <source>To assign a specific &lt;code&gt;ProtectionDomain&lt;/code&gt; to the class, use the &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/a&gt; method that takes a &lt;code&gt;ProtectionDomain&lt;/code&gt; as one of its arguments.</source>
          <target state="translated">To assign a specific &lt;code&gt;ProtectionDomain&lt;/code&gt; to the class, use the &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt; &lt;code&gt;defineClass&lt;/code&gt; &lt;/a&gt; method that takes a &lt;code&gt;ProtectionDomain&lt;/code&gt; as one of its arguments.</target>
        </trans-unit>
        <trans-unit id="098cffcdc8ae98f9e73fb6b3bc4c693ece84d5b2" translate="yes" xml:space="preserve">
          <source>To assign a specific &lt;code&gt;ProtectionDomain&lt;/code&gt; to the class, use the &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-java.security.ProtectionDomain-&quot;&gt;&lt;code&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method that takes a &lt;code&gt;ProtectionDomain&lt;/code&gt; as one of its arguments.</source>
          <target state="translated">특정의 지정하려면 &lt;code&gt;ProtectionDomain&lt;/code&gt; 클래스에, 사용 &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-java.security.ProtectionDomain-&quot;&gt; &lt;code&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/code&gt; 는의&lt;/a&gt; 걸리는 방법 &lt;code&gt;ProtectionDomain&lt;/code&gt; 인수 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="cb62f55eef3213cfdfd6d6c4b5d133a0d8886c48" translate="yes" xml:space="preserve">
          <source>To attempt to retain the values of the fields, use &lt;a href=&quot;#atZoneSimilarLocal(java.time.ZoneId)&quot;&gt;&lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;#toZonedDateTime()&quot;&gt;&lt;code&gt;toZonedDateTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To attempt to retain the values of the fields, use &lt;a href=&quot;#atZoneSimilarLocal(java.time.ZoneId)&quot;&gt; &lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt; &lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;#toZonedDateTime()&quot;&gt; &lt;code&gt;toZonedDateTime()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7963056aeb1e3fe7d72c198290f32b36c2c30f8b" translate="yes" xml:space="preserve">
          <source>To attempt to retain the values of the fields, use &lt;a href=&quot;offsetdatetime#atZoneSimilarLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;offsetdatetime#toZonedDateTime--&quot;&gt;&lt;code&gt;toZonedDateTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">필드 값을 유지하려면 &lt;a href=&quot;offsetdatetime#atZoneSimilarLocal-java.time.ZoneId-&quot;&gt; &lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt; &lt;/a&gt; . 영역 ID로 오프셋을 사용하려면 &lt;a href=&quot;offsetdatetime#toZonedDateTime--&quot;&gt; &lt;code&gt;toZonedDateTime()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c860b82be316c2ebd5b8042b5f2ae32cc26ebbd8" translate="yes" xml:space="preserve">
          <source>To avoid &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;#normalizeWith(java.util.Calendar)&quot;&gt;&lt;code&gt;normalizeWith(Calendar)&lt;/code&gt;&lt;/a&gt; method to remove the years and months fields.</source>
          <target state="translated">To avoid &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;, use the &lt;a href=&quot;#normalizeWith(java.util.Calendar)&quot;&gt; &lt;code&gt;normalizeWith(Calendar)&lt;/code&gt; &lt;/a&gt; method to remove the years and months fields.</target>
        </trans-unit>
        <trans-unit id="6ad427fbbb14d96dd25df6d7ec64c8e355ba9449" translate="yes" xml:space="preserve">
          <source>To avoid calling this method on an invalid string and having a &lt;code&gt;NumberFormatException&lt;/code&gt; be thrown, the documentation for &lt;a href=&quot;double#valueOf(java.lang.String)&quot;&gt;&lt;code&gt;Double.valueOf&lt;/code&gt;&lt;/a&gt; lists a regular expression which can be used to screen the input.</source>
          <target state="translated">To avoid calling this method on an invalid string and having a &lt;code&gt;NumberFormatException&lt;/code&gt; be thrown, the documentation for &lt;a href=&quot;double#valueOf(java.lang.String)&quot;&gt; &lt;code&gt;Double.valueOf&lt;/code&gt; &lt;/a&gt; lists a regular expression which can be used to screen the input.</target>
        </trans-unit>
        <trans-unit id="42d51c18a01968c9e81085024407b1e88d5039d3" translate="yes" xml:space="preserve">
          <source>To avoid calling this method on an invalid string and having a &lt;code&gt;NumberFormatException&lt;/code&gt; be thrown, the documentation for &lt;a href=&quot;double#valueOf-java.lang.String-&quot;&gt;&lt;code&gt;Double.valueOf&lt;/code&gt;&lt;/a&gt; lists a regular expression which can be used to screen the input.</source>
          <target state="translated">유효하지 않은 문자열에서이 메소드를 호출하지 않고 &lt;code&gt;NumberFormatException&lt;/code&gt; 이 발생 하지 않도록하기 위해 &lt;a href=&quot;double#valueOf-java.lang.String-&quot;&gt; &lt;code&gt;Double.valueOf&lt;/code&gt; 에&lt;/a&gt; 대한 문서 에는 입력을 선별하는 데 사용할 수있는 정규식이 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5563f0afb09a3844b6d08118ec1a1c5fc780d991" translate="yes" xml:space="preserve">
          <source>To avoid calling this method on an invalid string and having a &lt;code&gt;NumberFormatException&lt;/code&gt; be thrown, the regular expression below can be used to screen the input string:</source>
          <target state="translated">유효하지 않은 문자열에서이 메소드를 호출하지 않고 &lt;code&gt;NumberFormatException&lt;/code&gt; 이 발생 하지 않도록하기 위해 아래 정규식을 사용하여 입력 문자열을 스크리닝 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="668d902875e5660f744a686581109ccac6b67276" translate="yes" xml:space="preserve">
          <source>To avoid collisions between MBeans supplied by different vendors, a useful convention is to begin the domain name with the reverse DNS name of the organization that specifies the MBeans, followed by a period and a string whose interpretation is determined by that organization. For example, MBeans specified by &lt;code&gt;example.com&lt;/code&gt; would have domains such as &lt;code&gt;com.example.MyDomain&lt;/code&gt;. This is essentially the same convention as for Java-language package names.</source>
          <target state="translated">다른 벤더가 제공 한 MBean 간의 충돌을 피하려면 유용한 규칙은 도메인 이름을 MBean을 지정하는 조직의 역방향 DNS 이름으로 시작한 다음 마침표와 문자열이 해당 조직에 의해 결정됩니다. 예를 들어 &lt;code&gt;example.com&lt;/code&gt; 으로 지정된 MBean 에는 &lt;code&gt;com.example.MyDomain&lt;/code&gt; 과 같은 도메인이 있습니다 . 이것은 본질적으로 Java 언어 패키지 이름과 동일한 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="b11ede55a71c6248b71e81342253042ee5847dea" translate="yes" xml:space="preserve">
          <source>To avoid infinite recursion, if the specified array contains itself as an element, or contains an indirect reference to itself through one or more levels of arrays, the self-reference is converted to the string &lt;code&gt;&quot;[...]&quot;&lt;/code&gt;. For example, an array containing only a reference to itself would be rendered as &lt;code&gt;&quot;[[...]]&quot;&lt;/code&gt;.</source>
          <target state="translated">무한 재귀를 피하기 위해, 지정된 배열 자체를 요소로 포함하거나 하나 이상의 배열 레벨을 통한 간접 참조를 포함하는 경우 자체 참조는 문자열 &lt;code&gt;&quot;[...]&quot;&lt;/code&gt; 로 변환됩니다 . 예를 들어, 자신에 대한 참조 만 포함하는 배열은 &lt;code&gt;&quot;[[...]]&quot;&lt;/code&gt; 로 렌더링됩니다 .</target>
        </trans-unit>
        <trans-unit id="eb9f7d7071e28faad12ca6077ede6939f3bbcb22" translate="yes" xml:space="preserve">
          <source>To avoid race conditions, calls to &lt;code&gt;setTarget&lt;/code&gt; and &lt;code&gt;syncAll&lt;/code&gt; should generally be performed under some sort of mutual exclusion. Note that reader threads may observe an updated target as early as the &lt;code&gt;setTarget&lt;/code&gt; call that install the value (and before the &lt;code&gt;syncAll&lt;/code&gt; that confirms the value). On the other hand, reader threads may observe previous versions of the target until the &lt;code&gt;syncAll&lt;/code&gt; call returns (and after the &lt;code&gt;setTarget&lt;/code&gt; that attempts to convey the updated version).</source>
          <target state="translated">경쟁 조건을 피하려면 &lt;code&gt;setTarget&lt;/code&gt; 및 &lt;code&gt;syncAll&lt;/code&gt; 호출 은 일반적으로 일종의 상호 배제 하에서 수행되어야합니다. 판독기 스레드는 값을 설치하는 &lt;code&gt;setTarget&lt;/code&gt; 호출과 값 을 확인하는 &lt;code&gt;syncAll&lt;/code&gt; 전에 업데이트 된 대상을 관찰 할 수 있습니다 . 한편, 판독기 스레드는 &lt;code&gt;syncAll&lt;/code&gt; 호출이 리턴 될 때까지 (그리고 업데이트 된 버전을 전달하려는 &lt;code&gt;setTarget&lt;/code&gt; 이후) 대상의 이전 버전을 관찰 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2403bf2edea6a88cd7277e157f919db06ae3dfc9" translate="yes" xml:space="preserve">
          <source>To avoid subsequent errors, the contents of the class file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion()&quot;&gt;source version&lt;/a&gt; being used for this run.</source>
          <target state="translated">To avoid subsequent errors, the contents of the class file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion()&quot;&gt;source version&lt;/a&gt; being used for this run.</target>
        </trans-unit>
        <trans-unit id="0b2f4c173618b481634504b07869653ce32189fe" translate="yes" xml:space="preserve">
          <source>To avoid subsequent errors, the contents of the class file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion--&quot;&gt;source version&lt;/a&gt; being used for this run.</source>
          <target state="translated">후속 오류를 피하려면 클래스 파일의 내용 이이 실행에 사용되는 &lt;a href=&quot;processingenvironment#getSourceVersion--&quot;&gt;소스 버전&lt;/a&gt; 과 호환되어야 합니다.</target>
        </trans-unit>
        <trans-unit id="fbf4073a8f6efcb281074255c73dab8cf60b1111" translate="yes" xml:space="preserve">
          <source>To avoid subsequent errors, the contents of the source file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion()&quot;&gt;source version&lt;/a&gt; being used for this run.</source>
          <target state="translated">To avoid subsequent errors, the contents of the source file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion()&quot;&gt;source version&lt;/a&gt; being used for this run.</target>
        </trans-unit>
        <trans-unit id="1aceb19707e74a7f2174ca9ab49548d039860ecb" translate="yes" xml:space="preserve">
          <source>To avoid subsequent errors, the contents of the source file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion--&quot;&gt;source version&lt;/a&gt; being used for this run.</source>
          <target state="translated">후속 오류를 피하려면 소스 파일의 내용 이이 실행에 사용되는 &lt;a href=&quot;processingenvironment#getSourceVersion--&quot;&gt;소스 버전&lt;/a&gt; 과 호환되어야 합니다.</target>
        </trans-unit>
        <trans-unit id="dd35ab6a8c06d360cbb65355b85d9fbf1af619f6" translate="yes" xml:space="preserve">
          <source>To be added as a relation, the MBean must conform to the following:</source>
          <target state="translated">관계로 추가하려면 MBean이 다음을 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="369feee215b2d206e27e067d4a8327d9b7ec460b" translate="yes" xml:space="preserve">
          <source>To be compliant with the spec, the implementation is only required to support W3C XML Schema 1.0. However, if it chooses to support other schema languages listed here, it must conform to the relevant behaviors described in this spec.</source>
          <target state="translated">To be compliant with the spec, the implementation is only required to support W3C XML Schema 1.0. However, if it chooses to support other schema languages listed here, it must conform to the relevant behaviors described in this spec.</target>
        </trans-unit>
        <trans-unit id="bfee6b585f8f264404435c5e1eb3afcaa0fe2b44" translate="yes" xml:space="preserve">
          <source>To be functional, the filter should allow at least all the concrete types in the transitive closure of all objects that might get serialized when serializing all JMX classes referred as parameters in the &lt;a href=&quot;rmiconnection&quot;&gt;&lt;code&gt;RMIConnection&lt;/code&gt;&lt;/a&gt; interface, plus all classes that a &lt;a href=&quot;rmiconnector&quot;&gt;&lt;code&gt;client&lt;/code&gt;&lt;/a&gt; might need to transmit wrapped in &lt;a href=&quot;../../../../../java.rmi/java/rmi/marshalledobject&quot;&gt;marshalled objects&lt;/a&gt; in order to interoperate with the MBeans registered in the &lt;code&gt;MBeanServer&lt;/code&gt;. That would potentially include all the concrete &lt;a href=&quot;../../../../../java.management/javax/management/openmbean/package-summary&quot;&gt;JMX OpenTypes&lt;/a&gt; and the classes they use in their serial form.</source>
          <target state="translated">To be functional, the filter should allow at least all the concrete types in the transitive closure of all objects that might get serialized when serializing all JMX classes referred as parameters in the &lt;a href=&quot;rmiconnection&quot;&gt; &lt;code&gt;RMIConnection&lt;/code&gt; &lt;/a&gt; interface, plus all classes that a &lt;a href=&quot;rmiconnector&quot;&gt; &lt;code&gt;client&lt;/code&gt; &lt;/a&gt; might need to transmit wrapped in &lt;a href=&quot;../../../../../java.rmi/java/rmi/marshalledobject&quot;&gt;marshalled objects&lt;/a&gt; in order to interoperate with the MBeans registered in the &lt;code&gt;MBeanServer&lt;/code&gt; . That would potentially include all the concrete &lt;a href=&quot;../../../../../java.management/javax/management/openmbean/package-summary&quot;&gt;JMX OpenTypes&lt;/a&gt; and the classes they use in their serial form.</target>
        </trans-unit>
        <trans-unit id="c929685592eb7dd72839b0b7ddca865cf01e746f" translate="yes" xml:space="preserve">
          <source>To be handled as a relation, the &lt;code&gt;RelationSupport&lt;/code&gt; object has to be added to the Relation Service using the Relation Service method addRelation().</source>
          <target state="translated">관계로 처리하려면 &lt;code&gt;RelationSupport&lt;/code&gt; 오브젝트 addRelation ()을 사용하여 RelationSupport 오브젝트를 관계 서비스에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="a748dd0e04f95aff698fcdef2145934fa8ff1739" translate="yes" xml:space="preserve">
          <source>To be implemented by a any class acting as a notification filter.</source>
          <target state="translated">알림 필터 역할을하는 모든 클래스에 의해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="0bea40cd4dd3d35083217eb1e5827a09e2816a62" translate="yes" xml:space="preserve">
          <source>To be implemented by a any class acting as a notification filter. It allows a registered notification listener to filter the notifications of interest.</source>
          <target state="translated">알림 필터 역할을하는 모든 클래스에 의해 구현됩니다. 등록 된 알림 리스너가 관심있는 알림을 필터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fa1f94f9b6a662f59e0397dd2d57a3b1cf7527b" translate="yes" xml:space="preserve">
          <source>To be robust when running in different tool implementations, an annotation processor should have the following properties:</source>
          <target state="translated">다른 도구 구현에서 강력하게 실행하려면 주석 프로세서에 다음 속성이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="7365d81ddb8a3e13e3c1703bdd0a47167098d97a" translate="yes" xml:space="preserve">
          <source>To be useful across a wide range of contexts, this class provides many adjustable parameters and extensibility hooks. However, programmers are urged to use the more convenient &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; factory methods &lt;a href=&quot;executors#newCachedThreadPool()&quot;&gt;&lt;code&gt;Executors.newCachedThreadPool()&lt;/code&gt;&lt;/a&gt; (unbounded thread pool, with automatic thread reclamation), &lt;a href=&quot;executors#newFixedThreadPool(int)&quot;&gt;&lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt;&lt;/a&gt; (fixed size thread pool) and &lt;a href=&quot;executors#newSingleThreadExecutor()&quot;&gt;&lt;code&gt;Executors.newSingleThreadExecutor()&lt;/code&gt;&lt;/a&gt; (single background thread), that preconfigure settings for the most common usage scenarios. Otherwise, use the following guide when manually configuring and tuning this class:</source>
          <target state="translated">To be useful across a wide range of contexts, this class provides many adjustable parameters and extensibility hooks. However, programmers are urged to use the more convenient &lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt; factory methods &lt;a href=&quot;executors#newCachedThreadPool()&quot;&gt; &lt;code&gt;Executors.newCachedThreadPool()&lt;/code&gt; &lt;/a&gt; (unbounded thread pool, with automatic thread reclamation), &lt;a href=&quot;executors#newFixedThreadPool(int)&quot;&gt; &lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt; &lt;/a&gt; (fixed size thread pool) and &lt;a href=&quot;executors#newSingleThreadExecutor()&quot;&gt; &lt;code&gt;Executors.newSingleThreadExecutor()&lt;/code&gt; &lt;/a&gt; (single background thread), that preconfigure settings for the most common usage scenarios. Otherwise, use the following guide when manually configuring and tuning this class:</target>
        </trans-unit>
        <trans-unit id="88dbdb72a8dc5710ba81907c1d505d6f93d8a007" translate="yes" xml:space="preserve">
          <source>To be useful across a wide range of contexts, this class provides many adjustable parameters and extensibility hooks. However, programmers are urged to use the more convenient &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; factory methods &lt;a href=&quot;executors#newCachedThreadPool--&quot;&gt;&lt;code&gt;Executors.newCachedThreadPool()&lt;/code&gt;&lt;/a&gt; (unbounded thread pool, with automatic thread reclamation), &lt;a href=&quot;executors#newFixedThreadPool-int-&quot;&gt;&lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt;&lt;/a&gt; (fixed size thread pool) and &lt;a href=&quot;executors#newSingleThreadExecutor--&quot;&gt;&lt;code&gt;Executors.newSingleThreadExecutor()&lt;/code&gt;&lt;/a&gt; (single background thread), that preconfigure settings for the most common usage scenarios. Otherwise, use the following guide when manually configuring and tuning this class:</source>
          <target state="translated">광범위한 컨텍스트에서 유용하도록이 클래스는 많은 조정 가능한 매개 변수 및 확장 성 후크를 제공합니다. 그러나 프로그래머는보다 편리한 &lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt; 팩토리 메소드 인 &lt;a href=&quot;executors#newCachedThreadPool--&quot;&gt; &lt;code&gt;Executors.newCachedThreadPool()&lt;/code&gt; &lt;/a&gt; (자동 스레드 교정이있는 언 바운드 스레드 풀), &lt;a href=&quot;executors#newFixedThreadPool-int-&quot;&gt; &lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt; &lt;/a&gt; (고정 크기 스레드 풀) 및 &lt;a href=&quot;executors#newSingleThreadExecutor--&quot;&gt; &lt;code&gt;Executors.newSingleThreadExecutor()&lt;/code&gt; &lt;/a&gt; (단일 백그라운드 ) 를 사용해야합니다. 가장 일반적인 사용 시나리오에 대한 설정을 사전 구성합니다. 그렇지 않으면이 클래스를 수동으로 구성하고 조정할 때 다음 안내서를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2af1c11afc8cfc4b7a8797ee836b3f9f4ad2b42e" translate="yes" xml:space="preserve">
          <source>To be useful, an MBean must be registered in an &lt;em&gt;MBean Server&lt;/em&gt;. An MBean Server is a repository of MBeans. Usually the only access to the MBeans is through the MBean Server. In other words, code no longer accesses the Java object implementing the MBean directly, but instead accesses the MBean by name through the MBean Server. Each MBean has a unique name within the MBean Server, defined by the &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">유용하려면 &lt;em&gt;MBean이 MBean Server에&lt;/em&gt; 등록되어 있어야합니다 . MBean 서버는 MBean의 저장소입니다. 일반적으로 MBean에 대한 유일한 액세스는 MBean 서버를 통한 것입니다. 즉, 코드는 더 이상 MBean을 직접 구현하는 Java 객체에 액세스하지 않고 대신 MBean 서버를 통해 이름으로 MBean에 액세스합니다. 각 MBean은 &lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; 클래스에 의해 정의 된 MBean 서버 내에서 고유 한 이름을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="d7d65dc6887ac1dd59675099ed4d4af3e8a59cf9" translate="yes" xml:space="preserve">
          <source>To be valid, the local date-time must not be in a gap and the offset must match one of the valid offsets.</source>
          <target state="translated">유효하려면 로컬 날짜-시간이 차이가 없어야하며 오프셋이 유효한 오프셋 중 하나와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="595d2bea644f826bf905ff99aa32537c17280ff0" translate="yes" xml:space="preserve">
          <source>To build a view of the model, one of the following strategies can be employed.</source>
          <target state="translated">To build a view of the model, one of the following strategies can be employed.</target>
        </trans-unit>
        <trans-unit id="54feb46700524af6a40f21fc6cd8b80d114ab55c" translate="yes" xml:space="preserve">
          <source>To cancel the remapping reload instrument &lt;code&gt;from&lt;/code&gt; by invoking one of &lt;a href=&quot;#loadInstrument(javax.sound.midi.Instrument)&quot;&gt;&lt;code&gt;loadInstrument(javax.sound.midi.Instrument)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#loadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch%5B%5D)&quot;&gt;&lt;code&gt;loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#loadAllInstruments(javax.sound.midi.Soundbank)&quot;&gt;&lt;code&gt;loadAllInstruments(javax.sound.midi.Soundbank)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To cancel the remapping reload instrument &lt;code&gt;from&lt;/code&gt; by invoking one of &lt;a href=&quot;#loadInstrument(javax.sound.midi.Instrument)&quot;&gt; &lt;code&gt;loadInstrument(javax.sound.midi.Instrument)&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#loadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch%5B%5D)&quot;&gt; &lt;code&gt;loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#loadAllInstruments(javax.sound.midi.Soundbank)&quot;&gt; &lt;code&gt;loadAllInstruments(javax.sound.midi.Soundbank)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4d1dda8f60be6ccdd68366fa5b3526dbaaf5e344" translate="yes" xml:space="preserve">
          <source>To cancel the remapping reload instrument &lt;code&gt;from&lt;/code&gt; by invoking one of &lt;a href=&quot;synthesizer#loadInstrument-javax.sound.midi.Instrument-&quot;&gt;&lt;code&gt;loadInstrument(javax.sound.midi.Instrument)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;synthesizer#loadInstruments-javax.sound.midi.Soundbank-javax.sound.midi.Patch:A-&quot;&gt;&lt;code&gt;loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;synthesizer#loadAllInstruments-javax.sound.midi.Soundbank-&quot;&gt;&lt;code&gt;loadAllInstruments(javax.sound.midi.Soundbank)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">리 맵핑기구를 장전 취소 &lt;code&gt;from&lt;/code&gt; 하나 호출하여 &lt;a href=&quot;synthesizer#loadInstrument-javax.sound.midi.Instrument-&quot;&gt; &lt;code&gt;loadInstrument(javax.sound.midi.Instrument)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;synthesizer#loadInstruments-javax.sound.midi.Soundbank-javax.sound.midi.Patch:A-&quot;&gt; &lt;code&gt;loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;synthesizer#loadAllInstruments-javax.sound.midi.Soundbank-&quot;&gt; &lt;code&gt;loadAllInstruments(javax.sound.midi.Soundbank)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3c755469e1f8e95c5db1f4257371feede4267c06" translate="yes" xml:space="preserve">
          <source>To change the offset while keeping the local time, use &lt;a href=&quot;#withZoneSameLocal(java.time.ZoneId)&quot;&gt;&lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To change the offset while keeping the local time, use &lt;a href=&quot;#withZoneSameLocal(java.time.ZoneId)&quot;&gt; &lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9be8336b7115a72362232acff67cab5d31ad64ab" translate="yes" xml:space="preserve">
          <source>To change the offset while keeping the local time, use &lt;a href=&quot;chronozoneddatetime#withZoneSameLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현지 시간을 유지하면서 오프셋을 변경하려면 &lt;a href=&quot;chronozoneddatetime#withZoneSameLocal-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ba22c3c91be7bb4a1b614e70312b432e314453d5" translate="yes" xml:space="preserve">
          <source>To change the offset while keeping the local time, use &lt;a href=&quot;zoneddatetime#withZoneSameLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현지 시간을 유지하면서 오프셋을 변경하려면 &lt;a href=&quot;zoneddatetime#withZoneSameLocal-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="28e48054f0c3e60dffb2e6a36bf0cd3e64b7398f" translate="yes" xml:space="preserve">
          <source>To change the offset without adjusting the local time use &lt;a href=&quot;#withOffsetSameLocal(java.time.ZoneOffset)&quot;&gt;&lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To change the offset without adjusting the local time use &lt;a href=&quot;#withOffsetSameLocal(java.time.ZoneOffset)&quot;&gt; &lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3fec9c95a4da51399394703581f182ba52a20925" translate="yes" xml:space="preserve">
          <source>To change the offset without adjusting the local time use &lt;a href=&quot;offsetdatetime#withOffsetSameLocal-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현지 시간을 조정하지 않고 오프셋을 변경하려면 &lt;a href=&quot;offsetdatetime#withOffsetSameLocal-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a8364aad1736c04d486c11667371207fe4ea657" translate="yes" xml:space="preserve">
          <source>To change the offset without adjusting the local time use &lt;a href=&quot;offsettime#withOffsetSameLocal-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현지 시간을 조정하지 않고 오프셋을 변경하려면 &lt;a href=&quot;offsettime#withOffsetSameLocal-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="147c0b430daa82e45aff80a01b0bd18d8fedb718" translate="yes" xml:space="preserve">
          <source>To change the returned value it is necessary to set the &lt;code&gt;sun.awt.enableExtraMouseButtons&lt;/code&gt; property before the &lt;code&gt;Toolkit&lt;/code&gt; class initialization. This setting could be done on the application startup by the following command:</source>
          <target state="translated">To change the returned value it is necessary to set the &lt;code&gt;sun.awt.enableExtraMouseButtons&lt;/code&gt; property before the &lt;code&gt;Toolkit&lt;/code&gt; class initialization. This setting could be done on the application startup by the following command:</target>
        </trans-unit>
        <trans-unit id="624f42a2ec9597a5fa8bf860e5c53714b80e1ade" translate="yes" xml:space="preserve">
          <source>To change the zone and adjust the local date-time, use &lt;a href=&quot;#withZoneSameInstant(java.time.ZoneId)&quot;&gt;&lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To change the zone and adjust the local date-time, use &lt;a href=&quot;#withZoneSameInstant(java.time.ZoneId)&quot;&gt; &lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="54d53b327a76d23201fb03d673f3a5e3ba6d80dc" translate="yes" xml:space="preserve">
          <source>To change the zone and adjust the local date-time, use &lt;a href=&quot;chronozoneddatetime#withZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">영역을 변경하고 현지 날짜-시간을 조정하려면 &lt;a href=&quot;chronozoneddatetime#withZoneSameInstant-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2bb8e9dce97fedd17ba93b900abfb561816c1a4" translate="yes" xml:space="preserve">
          <source>To change the zone and adjust the local date-time, use &lt;a href=&quot;zoneddatetime#withZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">영역을 변경하고 현지 날짜-시간을 조정하려면 &lt;a href=&quot;zoneddatetime#withZoneSameInstant-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e2c58b787e33fb2498ddf879b308c08f5de4333" translate="yes" xml:space="preserve">
          <source>To compare elapsed time against a timeout, use</source>
          <target state="translated">To compare elapsed time against a timeout, use</target>
        </trans-unit>
        <trans-unit id="c019e479f28fa520e4b25c1389f58c638560ba3a" translate="yes" xml:space="preserve">
          <source>To compare the dates of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, including dates in two different chronologies, use &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">두 개의 다른 연대기 날짜를 포함하여 두 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 날짜를 비교하려면 &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe4f722fe3026ef77704c6c722d1dd4b2c998af4" translate="yes" xml:space="preserve">
          <source>To compare the underlying local time of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, use &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">두 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 기본 로컬 시간을 비교하려면 &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="245c4d91674938b9243301b17cdfbec11707bbd6" translate="yes" xml:space="preserve">
          <source>To compare two nanoTime values</source>
          <target state="translated">두 nanoTime 값을 비교하려면</target>
        </trans-unit>
        <trans-unit id="d78c279d229f78f77095561ee9065cfa4d49c959" translate="yes" xml:space="preserve">
          <source>To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest input stream's &lt;a href=&quot;#read()&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest input stream's &lt;a href=&quot;#read()&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; methods.</target>
        </trans-unit>
        <trans-unit id="db54c8f8a02c8d006edd754b51f4c637374eadf8" translate="yes" xml:space="preserve">
          <source>To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest input stream's &lt;a href=&quot;digestinputstream#read--&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">메시지 요약 계산을 완료하려면 이 요약 입력 스트림의 &lt;a href=&quot;digestinputstream#read--&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 메소드 중 하나를 호출 한 후 연관된 메시지 요약 에서 &lt;code&gt;digest&lt;/code&gt; 메소드 중 하나를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="39e64b299ba8072e1d29e749493f1e4a0a967d71" translate="yes" xml:space="preserve">
          <source>To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest output stream's &lt;a href=&quot;#write(int)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest output stream's &lt;a href=&quot;#write(int)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; methods.</target>
        </trans-unit>
        <trans-unit id="6ca822c9d032e884c819b5572500df5caeb9a899" translate="yes" xml:space="preserve">
          <source>To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest output stream's &lt;a href=&quot;digestoutputstream#write-int-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">메시지 요약 계산을 완료하려면 이 요약 출력 스트림의 &lt;a href=&quot;digestoutputstream#write-int-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 메소드 중 하나를 호출 한 후 연관된 메시지 요약 에서 &lt;code&gt;digest&lt;/code&gt; 메소드 중 하나를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="2842855a6f62843707f8d500baadc11f1c0ff16e" translate="yes" xml:space="preserve">
          <source>To completely reinitialize a configuration, an application can first call &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; to fully remove the old configuration, followed by &lt;code&gt;updateConfiguration&lt;/code&gt; to initialize the new configuration.</source>
          <target state="translated">To completely reinitialize a configuration, an application can first call &lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt; to fully remove the old configuration, followed by &lt;code&gt;updateConfiguration&lt;/code&gt; to initialize the new configuration.</target>
        </trans-unit>
        <trans-unit id="1ab7339ad50ef1a66106e4edb66c156331356176" translate="yes" xml:space="preserve">
          <source>To compute the return value's &lt;code&gt;TimeZone&lt;/code&gt; field,</source>
          <target state="translated">To compute the return value's &lt;code&gt;TimeZone&lt;/code&gt; field,</target>
        </trans-unit>
        <trans-unit id="3f9547964c2738ed3c0c39daef4a026c54f8594a" translate="yes" xml:space="preserve">
          <source>To conform with the definition of SQL &lt;code&gt;DATE&lt;/code&gt;, the millisecond values wrapped by a &lt;code&gt;java.sql.Date&lt;/code&gt; instance must be 'normalized' by setting the hours, minutes, seconds, and milliseconds to zero in the particular time zone with which the instance is associated.</source>
          <target state="translated">To conform with the definition of SQL &lt;code&gt;DATE&lt;/code&gt; , the millisecond values wrapped by a &lt;code&gt;java.sql.Date&lt;/code&gt; instance must be 'normalized' by setting the hours, minutes, seconds, and milliseconds to zero in the particular time zone with which the instance is associated.</target>
        </trans-unit>
        <trans-unit id="adf07d8e8c9cb7ddafb1c87b428791695f534b6e" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtCompleted attribute. To convert a &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; attribute.</source>
          <target state="translated">To construct a &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object to construct the DateTimeAtCompleted attribute. To convert a &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; from the &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; attribute.</target>
        </trans-unit>
        <trans-unit id="441fb7b971ccd667f32f69486a486691e495eadd" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;DateTimeAtCreation&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtCreation attribute. To convert a &lt;code&gt;DateTimeAtCreation&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;DateTimeAtCreation&lt;/code&gt; attribute.</source>
          <target state="translated">To construct a &lt;code&gt;DateTimeAtCreation&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object to construct the DateTimeAtCreation attribute. To convert a &lt;code&gt;DateTimeAtCreation&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; from the &lt;code&gt;DateTimeAtCreation&lt;/code&gt; attribute.</target>
        </trans-unit>
        <trans-unit id="286b9b18c7f4ba8aa3dfde3d3505bcf887aed71a" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtProcessing attribute. To convert a &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; attribute.</source>
          <target state="translated">To construct a &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object to construct the DateTimeAtProcessing attribute. To convert a &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; from the &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; attribute.</target>
        </trans-unit>
        <trans-unit id="a2d2e3b87007882e866b73b9b88a688504813bb1" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute. To convert a &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute.</source>
          <target state="translated">To construct a &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object to construct the &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute. To convert a &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; from the &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute.</target>
        </trans-unit>
        <trans-unit id="4e85b1ac5bb1ea53e984d6388f99052847f6c694" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;SimpleTimeZone&lt;/code&gt; with a daylight saving time schedule, the schedule can be described with a set of rules, &lt;em&gt;start-rule&lt;/em&gt; and &lt;em&gt;end-rule&lt;/em&gt;. A day when daylight saving time starts or ends is specified by a combination of &lt;em&gt;month&lt;/em&gt;, &lt;em&gt;day-of-month&lt;/em&gt;, and &lt;em&gt;day-of-week&lt;/em&gt; values. The &lt;em&gt;month&lt;/em&gt; value is represented by a Calendar &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field value, such as &lt;a href=&quot;calendar#MARCH&quot;&gt;&lt;code&gt;Calendar.MARCH&lt;/code&gt;&lt;/a&gt;. The &lt;em&gt;day-of-week&lt;/em&gt; value is represented by a Calendar &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; value, such as &lt;a href=&quot;calendar#SUNDAY&quot;&gt;&lt;code&gt;SUNDAY&lt;/code&gt;&lt;/a&gt;. The meanings of value combinations are as follows.</source>
          <target state="translated">일광 절약 시간제 스케줄 로 &lt;code&gt;SimpleTimeZone&lt;/code&gt; 을 구성하기 위해 스케줄, &lt;em&gt;시작 규칙&lt;/em&gt; 및 &lt;em&gt;종료&lt;/em&gt; 규칙 세트로 스케줄을 설명 할 수 있습니다 . 일광 절약 시간 제가 시작되거나 끝나는 &lt;em&gt;요일&lt;/em&gt; 은 &lt;em&gt;month&lt;/em&gt; , &lt;em&gt;day-of-month&lt;/em&gt; 및 &lt;em&gt;day-of-week&lt;/em&gt; 값 의 조합으로 지정됩니다 . &lt;em&gt;개월의&lt;/em&gt; 값은 달력에 의해 표현되는 &lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt; 다음과 같은 필드 값, &lt;a href=&quot;calendar#MARCH&quot;&gt; &lt;code&gt;Calendar.MARCH&lt;/code&gt; &lt;/a&gt; . &lt;em&gt;요일&lt;/em&gt; 값은 달력에 의해 표현된다 &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; 에&lt;/a&gt; 같은 값, &lt;a href=&quot;calendar#SUNDAY&quot;&gt; &lt;code&gt;SUNDAY&lt;/code&gt; &lt;/a&gt; . 값 조합의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="25bcc41bb9be6142d4b382a35be675feb6b382ec" translate="yes" xml:space="preserve">
          <source>To construct a DateTimeAtCompleted attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtCompleted attribute. To convert a DateTimeAtCompleted attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the DateTimeAtCompleted attribute.</source>
          <target state="translated">년, 월, 일,시, 분 등의 별도 값에서 DateTimeAtCompleted 속성을 구성하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 사용하여 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 구성한 다음 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 사용 하여 DateTimeAtCompleted 속성을 구성하십시오. DateTimeAtCompleted 속성을 년, 월, 일,시, 분 등의 값으로 분리하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 만들고 DateTimeAtCompleted 속성에서 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; 로&lt;/a&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa286d2c9331083538f7b2483ba40d01066c7be7" translate="yes" xml:space="preserve">
          <source>To construct a DateTimeAtCreation attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtCreation attribute. To convert a DateTimeAtCreation attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the DateTimeAtCreation attribute.</source>
          <target state="translated">년, 월, 일,시, 분 등의 별도 값에서 DateTimeAtCreation 속성을 구성하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 사용하여 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 구성한 다음 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 사용 하여 DateTimeAtCreation 속성을 구성하십시오. DateTimeAtCreation 속성을 년, 월, 일,시, 분 등의 별도 값으로 변환하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 만들고 DateTimeAtCreation 속성에서 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; 로&lt;/a&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="74dd642a97b53fdc97dc32a69febd07a2a41f613" translate="yes" xml:space="preserve">
          <source>To construct a DateTimeAtProcessing attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtProcessing attribute. To convert a DateTimeAtProcessing attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the DateTimeAtProcessing attribute.</source>
          <target state="translated">년, 월, 일,시, 분 등의 별도 값에서 DateTimeAtProcessing 속성을 구성하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 사용하여 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 구성한 다음 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 사용 하여 DateTimeAtProcessing 속성을 구성하십시오. DateTimeAtProcessing 속성을 년, 월, 일,시, 분 등의 별도 값으로 변환하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 만들고 DateTimeAtProcessing 속성에서 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; 로&lt;/a&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="d51e72cb883d367f9e951d82f4b8bfada0f7edfe" translate="yes" xml:space="preserve">
          <source>To construct a JobHoldUntil attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the JobHoldUntil attribute. To convert a JobHoldUntil attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the JobHoldUntil attribute.</source>
          <target state="translated">년, 월, 일,시, 분 등의 별도 값에서 JobHoldUntil 속성을 구성하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 사용하여 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 구성한 다음 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 사용 하여 JobHoldUntil 속성을 구성하십시오. JobHoldUntil 속성을 년, 월, 일,시, 분 등의 별도 값으로 변환하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 만들고 JobHoldUntil 속성에서 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; 로&lt;/a&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="69c0b94087d4d39699cf7eb51758827f396e268e" translate="yes" xml:space="preserve">
          <source>To construct a date-time attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;code&gt;java.util.Calendar&lt;/code&gt; object to construct a &lt;code&gt;java.util.Date&lt;/code&gt; object, then use the &lt;code&gt;java.util.Date&lt;/code&gt; object to construct the date-time attribute. To convert a date-time attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;code&gt;java.util.Calendar&lt;/code&gt; object and set it to the &lt;code&gt;java.util.Date&lt;/code&gt; from the date-time attribute. Class &lt;code&gt;DateTimeSyntax&lt;/code&gt; stores its value in the form of a &lt;code&gt;java.util.Date&lt;/code&gt; rather than a &lt;code&gt;java.util.Calendar&lt;/code&gt; because it typically takes less memory to store and less time to compare a &lt;code&gt;java.util.Date&lt;/code&gt; than a &lt;code&gt;java.util.Calendar&lt;/code&gt;.</source>
          <target state="translated">To construct a date-time attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;code&gt;java.util.Calendar&lt;/code&gt; object to construct a &lt;code&gt;java.util.Date&lt;/code&gt; object, then use the &lt;code&gt;java.util.Date&lt;/code&gt; object to construct the date-time attribute. To convert a date-time attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;code&gt;java.util.Calendar&lt;/code&gt; object and set it to the &lt;code&gt;java.util.Date&lt;/code&gt; from the date-time attribute. Class &lt;code&gt;DateTimeSyntax&lt;/code&gt; stores its value in the form of a &lt;code&gt;java.util.Date&lt;/code&gt; rather than a &lt;code&gt;java.util.Calendar&lt;/code&gt; because it typically takes less memory to store and less time to compare a &lt;code&gt;java.util.Date&lt;/code&gt; than a &lt;code&gt;java.util.Calendar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db92a2c6c7f08bf559d61fcd335d1b352eb04511" translate="yes" xml:space="preserve">
          <source>To construct a date-time attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;code&gt;java.util.Calendar&lt;/code&gt; object to construct a &lt;code&gt;java.util.Date&lt;/code&gt; object, then use the &lt;code&gt;java.util.Date&lt;/code&gt; object to construct the date-time attribute. To convert a date-time attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;code&gt;java.util.Calendar&lt;/code&gt; object and set it to the &lt;code&gt;java.util.Date&lt;/code&gt; from the date-time attribute. Class DateTimeSyntax stores its value in the form of a &lt;code&gt;java.util.Date
 &lt;/code&gt; rather than a &lt;code&gt;java.util.Calendar&lt;/code&gt; because it typically takes less memory to store and less time to compare a &lt;code&gt;java.util.Date&lt;/code&gt; than a &lt;code&gt;java.util.Calendar&lt;/code&gt;.</source>
          <target state="translated">등등 년, 월, 일,시, 분 등 개개의 값으로부터 일자와 시각 속성을 구축하고하려면 사용 &lt;code&gt;java.util.Calendar&lt;/code&gt; 구성하는 객체를 &lt;code&gt;java.util.Date&lt;/code&gt; 의 다음 사용하여 객체를 &lt;code&gt;java.util.Date&lt;/code&gt; 객체는 일자와 시각 속성을 구축합니다. 날짜-시간 속성을 년, 월, 일,시, 분 등의 값으로 분리하려면 &lt;code&gt;java.util.Calendar&lt;/code&gt; 오브젝트를 작성 하고 날짜-시간 속성에서 &lt;code&gt;java.util.Date&lt;/code&gt; 로 설정하십시오. . DateTimeSyntax 클래스는의 형태로 그 값을 저장 &lt;code&gt;java.util.Date &lt;/code&gt; 보다는 &lt;code&gt;java.util.Calendar&lt;/code&gt; 의 는 일반적으로 저장하고 비교하는 더 적은 시간에 더 적은 메모리 걸리기 때문에 &lt;code&gt;java.util.Date&lt;/code&gt; 를 &lt;code&gt;java.util.Calendar&lt;/code&gt; 보다 .</target>
        </trans-unit>
        <trans-unit id="087aae889fb70843b3991a318cba4a5735f9cb01" translate="yes" xml:space="preserve">
          <source>To continue the operation, the client program should re-invoke the method using the same arguments as the original invocation.</source>
          <target state="translated">작업을 계속하려면 클라이언트 프로그램이 원래 호출과 동일한 인수를 사용하여 메소드를 다시 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="e7a3e03976d269ce626f879a0166b160687d59f1" translate="yes" xml:space="preserve">
          <source>To control receiving of messages, a WebSocket maintains an &lt;a id=&quot;counter&quot;&gt;internal counter&lt;/a&gt;. This counter's value is a number of times the WebSocket has yet to invoke a receive method. While this counter is zero the WebSocket does not invoke receive methods. The counter is incremented by &lt;code&gt;n&lt;/code&gt; when &lt;code&gt;request(n)&lt;/code&gt; is called. The counter is decremented by one when the WebSocket invokes a receive method. &lt;code&gt;onOpen&lt;/code&gt; and &lt;code&gt;onError&lt;/code&gt; are not receive methods. WebSocket invokes &lt;code&gt;onOpen&lt;/code&gt; prior to any other methods on the listener. WebSocket invokes &lt;code&gt;onOpen&lt;/code&gt; at most once. WebSocket may invoke &lt;code&gt;onError&lt;/code&gt; at any given time. If the WebSocket invokes &lt;code&gt;onError&lt;/code&gt; or &lt;code&gt;onClose&lt;/code&gt;, then no further listener's methods will be invoked, no matter the value of the counter. For a newly built WebSocket the counter is zero.</source>
          <target state="translated">To control receiving of messages, a WebSocket maintains an &lt;a id=&quot;counter&quot;&gt;internal counter&lt;/a&gt;. This counter's value is a number of times the WebSocket has yet to invoke a receive method. While this counter is zero the WebSocket does not invoke receive methods. The counter is incremented by &lt;code&gt;n&lt;/code&gt; when &lt;code&gt;request(n)&lt;/code&gt; is called. The counter is decremented by one when the WebSocket invokes a receive method. &lt;code&gt;onOpen&lt;/code&gt; and &lt;code&gt;onError&lt;/code&gt; are not receive methods. WebSocket invokes &lt;code&gt;onOpen&lt;/code&gt; prior to any other methods on the listener. WebSocket invokes &lt;code&gt;onOpen&lt;/code&gt; at most once. WebSocket may invoke &lt;code&gt;onError&lt;/code&gt; at any given time. If the WebSocket invokes &lt;code&gt;onError&lt;/code&gt; or &lt;code&gt;onClose&lt;/code&gt; , then no further listener's methods will be invoked, no matter the value of the counter. For a newly built WebSocket the counter is zero.</target>
        </trans-unit>
        <trans-unit id="0cf80006582d17ab05fdb596ec329a7499abd75c" translate="yes" xml:space="preserve">
          <source>To control the time-zone used, see &lt;a href=&quot;#atZoneSameInstant(java.time.ZoneId)&quot;&gt;&lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#atZoneSimilarLocal(java.time.ZoneId)&quot;&gt;&lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To control the time-zone used, see &lt;a href=&quot;#atZoneSameInstant(java.time.ZoneId)&quot;&gt; &lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#atZoneSimilarLocal(java.time.ZoneId)&quot;&gt; &lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="23e44dbd2456435fa91cf79de7a65d5d719ff213" translate="yes" xml:space="preserve">
          <source>To control the time-zone used, see &lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsetdatetime#atZoneSimilarLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용 된 시간대를 제어하려면 &lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt; &lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;offsetdatetime#atZoneSimilarLocal-java.time.ZoneId-&quot;&gt; &lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="376d8c3e1efda9f05146c9c2cd711c194b274e43" translate="yes" xml:space="preserve">
          <source>To convert to a specific time in a given time-zone call &lt;a href=&quot;#atTime(java.time.LocalTime)&quot;&gt;&lt;code&gt;atTime(LocalTime)&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;localdatetime#atZone(java.time.ZoneId)&quot;&gt;&lt;code&gt;LocalDateTime.atZone(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To convert to a specific time in a given time-zone call &lt;a href=&quot;#atTime(java.time.LocalTime)&quot;&gt; &lt;code&gt;atTime(LocalTime)&lt;/code&gt; &lt;/a&gt; followed by &lt;a href=&quot;localdatetime#atZone(java.time.ZoneId)&quot;&gt; &lt;code&gt;LocalDateTime.atZone(ZoneId)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8dd8a7b4f5dab34349b3a4318dd855c7abbe2237" translate="yes" xml:space="preserve">
          <source>To convert to a specific time in a given time-zone call &lt;a href=&quot;localdate#atTime-java.time.LocalTime-&quot;&gt;&lt;code&gt;atTime(LocalTime)&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;localdatetime#atZone-java.time.ZoneId-&quot;&gt;&lt;code&gt;LocalDateTime.atZone(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진 시간대 호출 &lt;a href=&quot;localdate#atTime-java.time.LocalTime-&quot;&gt; &lt;code&gt;atTime(LocalTime)&lt;/code&gt; &lt;/a&gt; 다음에 &lt;a href=&quot;localdatetime#atZone-java.time.ZoneId-&quot;&gt; &lt;code&gt;LocalDateTime.atZone(ZoneId)&lt;/code&gt; &lt;/a&gt; 에서 특정 시간으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="04c0fcc1d36b488dceb3eb03800fffb2574fb9a1" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;RuleBasedCollator&lt;/code&gt; object with specialized rules tailored to your needs, you construct the &lt;code&gt;RuleBasedCollator&lt;/code&gt; with the rules contained in a &lt;code&gt;String&lt;/code&gt; object. For example:</source>
          <target state="translated">필요에 맞게 특수화 된 규칙 을 사용하여 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 오브젝트 를 작성하려면 &lt;code&gt;String&lt;/code&gt; 오브젝트에 포함 된 규칙으로 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 를 구성하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5e6448c217bd1036f514fd3babb0cb8df35bdea4" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;SpinnerNumberModel&lt;/code&gt; for the integer range zero to one hundred, with fifty as the initial value, one could write:</source>
          <target state="translated">To create a &lt;code&gt;SpinnerNumberModel&lt;/code&gt; for the integer range zero to one hundred, with fifty as the initial value, one could write:</target>
        </trans-unit>
        <trans-unit id="937c1d166731d3f66caa2bdf2a846465ed1fe1ce" translate="yes" xml:space="preserve">
          <source>To create a DOMSource from a DOMResult:</source>
          <target state="translated">To create a DOMSource from a DOMResult:</target>
        </trans-unit>
        <trans-unit id="e9eb6315376b4cd30a3d04f3b5c315ba3a13eeb0" translate="yes" xml:space="preserve">
          <source>To create a new Raster that contains a subregion of the current Raster, but shares its coordinate system and bands, this method should be called with childMinX equal to parentX, childMinY equal to parentY, and bandList equal to null.</source>
          <target state="translated">To create a new Raster that contains a subregion of the current Raster, but shares its coordinate system and bands, this method should be called with childMinX equal to parentX, childMinY equal to parentY, and bandList equal to null.</target>
        </trans-unit>
        <trans-unit id="d32d63274f2cbf4036683fa92a83776446845000" translate="yes" xml:space="preserve">
          <source>To create a new WritableRaster that contains a subregion of the current WritableRaster, but shares its coordinate system and bands, this method should be called with childMinX equal to parentX, childMinY equal to parentY, and bandList equal to null.</source>
          <target state="translated">To create a new WritableRaster that contains a subregion of the current WritableRaster, but shares its coordinate system and bands, this method should be called with childMinX equal to parentX, childMinY equal to parentY, and bandList equal to null.</target>
        </trans-unit>
        <trans-unit id="b4d8e3aa230fd8d328cb50849ff011b721e8d563" translate="yes" xml:space="preserve">
          <source>To create a new border class, subclass AbstractBorder.</source>
          <target state="translated">To create a new border class, subclass AbstractBorder.</target>
        </trans-unit>
        <trans-unit id="a32afc764b311a6d840f4a6d3c91f1a4e91e603a" translate="yes" xml:space="preserve">
          <source>To create a node changed event for the root node, specify the parent and the child indices as &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">To create a node changed event for the root node, specify the parent and the child indices as &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="791b72a8d90e2e2ec1bac7e05d883ff1e653d19d" translate="yes" xml:space="preserve">
          <source>To create a proxy for some interface &lt;code&gt;Foo&lt;/code&gt;:</source>
          <target state="translated">일부 인터페이스 &lt;code&gt;Foo&lt;/code&gt; 에 대한 프록시를 작성하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="0dc7f689cdf1bba3e94d6df9657ba2feff02c34a" translate="yes" xml:space="preserve">
          <source>To create a set of &lt;code&gt;n&lt;/code&gt; tasks using a tree of phasers, you could use code of the following form, assuming a Task class with a constructor accepting a &lt;code&gt;Phaser&lt;/code&gt; that it registers with upon construction. After invocation of &lt;code&gt;build(new Task[n], 0, n,
 new Phaser())&lt;/code&gt;, these tasks could then be started, for example by submitting to a pool:</source>
          <target state="translated">페이저 트리를 사용하여 &lt;code&gt;n&lt;/code&gt; 개의 작업 세트를 작성하려면 생성 시 등록한 &lt;code&gt;Phaser&lt;/code&gt; 를 승인하는 생성자가있는 Task 클래스를 가정하여 다음 형식의 코드를 사용할 수 있습니다 . &lt;code&gt;build(new Task[n], 0, n, new Phaser())&lt;/code&gt; 호출 한 후 풀에 제출하여 이러한 태스크를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76fa5103ec809c37c86b48faae54a31800d4d1c4" translate="yes" xml:space="preserve">
          <source>To create a zoned date-time at the same instant irrespective of the local time-line, use &lt;a href=&quot;#atZoneSameInstant(java.time.ZoneId)&quot;&gt;&lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;#toZonedDateTime()&quot;&gt;&lt;code&gt;toZonedDateTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To create a zoned date-time at the same instant irrespective of the local time-line, use &lt;a href=&quot;#atZoneSameInstant(java.time.ZoneId)&quot;&gt; &lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;#toZonedDateTime()&quot;&gt; &lt;code&gt;toZonedDateTime()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="21cef35b7895ed0dec80ac99d3f5fda763229008" translate="yes" xml:space="preserve">
          <source>To create a zoned date-time at the same instant irrespective of the local time-line, use &lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;offsetdatetime#toZonedDateTime--&quot;&gt;&lt;code&gt;toZonedDateTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">로컬 타임 라인에 상관없이 동일한 순간에 존 날짜-시간을 작성하려면 &lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt; &lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt; . 영역 ID로 오프셋을 사용하려면 &lt;a href=&quot;offsetdatetime#toZonedDateTime--&quot;&gt; &lt;code&gt;toZonedDateTime()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="60baa4fa76cf50ff7c38d2a22f008a79c85d01d7" translate="yes" xml:space="preserve">
          <source>To create an &lt;code&gt;ActionListener&lt;/code&gt; that sets the the text of a &lt;code&gt;JLabel&lt;/code&gt; to the text value of the &lt;code&gt;JTextField&lt;/code&gt; source of the incoming event, you can use the following code:</source>
          <target state="translated">&lt;code&gt;JLabel&lt;/code&gt; 의 텍스트를 수신 이벤트 의 &lt;code&gt;JTextField&lt;/code&gt; 소스의 텍스트 값으로 설정 하는 &lt;code&gt;ActionListener&lt;/code&gt; 를 작성하려면 다음 코드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45312066937624f899610291c457e6f409e99be8" translate="yes" xml:space="preserve">
          <source>To create an &lt;code&gt;ActionListener&lt;/code&gt; that shows a &lt;code&gt;JDialog&lt;/code&gt; with &lt;code&gt;dialog.show()&lt;/code&gt;, one can write:</source>
          <target state="translated">&lt;code&gt;dialog.show()&lt;/code&gt; 와 함께 &lt;code&gt;JDialog&lt;/code&gt; 를 표시 하는 &lt;code&gt;ActionListener&lt;/code&gt; 를 작성하려면 다음을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ee8a21417c0231b6df257f281fdd95449cee6d1" translate="yes" xml:space="preserve">
          <source>To create an attribute with a qualified name and namespace URI, use the &lt;code&gt;createAttributeNS&lt;/code&gt; method.</source>
          <target state="translated">To create an attribute with a qualified name and namespace URI, use the &lt;code&gt;createAttributeNS&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="321d9a78ad904102d13153b2f25df867969dcc2f" translate="yes" xml:space="preserve">
          <source>To create an element with a qualified name and namespace URI, use the &lt;code&gt;createElementNS&lt;/code&gt; method.</source>
          <target state="translated">To create an element with a qualified name and namespace URI, use the &lt;code&gt;createElementNS&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="2f18a394ec1d00d632fa8ea8c9678ed1d607d136" translate="yes" xml:space="preserve">
          <source>To create an empty keystore using the above &lt;code&gt;load&lt;/code&gt; method, pass &lt;code&gt;null&lt;/code&gt; as the &lt;code&gt;InputStream&lt;/code&gt; argument.</source>
          <target state="translated">위의 &lt;code&gt;load&lt;/code&gt; 메소드 를 사용하여 빈 키 저장소를 작성하려면 &lt;code&gt;InputStream&lt;/code&gt; 인수 로 &lt;code&gt;null&lt;/code&gt; 을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="8af718b63d7e37600b3d65dd7cbfbaf8c854d52b" translate="yes" xml:space="preserve">
          <source>To create and use an &lt;code&gt;JOptionPane&lt;/code&gt; directly, the standard pattern is roughly as follows:</source>
          <target state="translated">To create and use an &lt;code&gt;JOptionPane&lt;/code&gt; directly, the standard pattern is roughly as follows:</target>
        </trans-unit>
        <trans-unit id="8dea388bdca9f830fe55c273e0d4866e5bd285b2" translate="yes" xml:space="preserve">
          <source>To create localized string representations of a floating-point value, use subclasses of &lt;a href=&quot;../text/numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">부동 소수점 값의 현지화 된 문자열 표현을 작성하려면 &lt;a href=&quot;../text/numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; 의&lt;/a&gt; 서브 클래스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="808da32e3a261ba4ac89ef37045a1f29ac0fb890" translate="yes" xml:space="preserve">
          <source>To create the new file, the prefix and the suffix may first be adjusted to fit the limitations of the underlying platform. If the prefix is too long then it will be truncated, but its first three characters will always be preserved. If the suffix is too long then it too will be truncated, but if it begins with a period character (&lt;code&gt;'.'&lt;/code&gt;) then the period and the first three characters following it will always be preserved. Once these adjustments have been made the name of the new file will be generated by concatenating the prefix, five or more internally-generated characters, and the suffix.</source>
          <target state="translated">새 파일을 만들려면 먼저 기본 플랫폼의 제한에 맞게 접두사와 접미사를 조정할 수 있습니다. 접두사가 너무 길면 잘리지 만 처음 세 문자는 항상 유지됩니다. 접미사가 너무 길면 잘리지 만, 마침표 문자 ( &lt;code&gt;'.'&lt;/code&gt; )로 시작하면 마침표와 그 뒤의 첫 세 문자는 항상 유지됩니다. 이러한 조정이 이루어지면 접두사, 내부적으로 생성 된 5 개 이상의 문자 및 접미사를 연결하여 새 파일의 이름이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="3e4a062b070484f1c27e4ca896fe630eef6f8d83" translate="yes" xml:space="preserve">
          <source>To declare a feature non-transient in a class whose superclass declares it transient, use &lt;code&gt;@Transient(false)&lt;/code&gt;. In all cases, the &lt;a href=&quot;introspector&quot;&gt;&lt;code&gt;Introspector&lt;/code&gt;&lt;/a&gt; decides if a feature is transient by referring to the annotation on the most specific superclass. If no &lt;code&gt;Transient&lt;/code&gt; annotation is present in any superclass the feature is not transient.</source>
          <target state="translated">수퍼 클래스가 일시적인 것으로 선언하는 클래스에서 일시적이지 않은 기능을 선언하려면 &lt;code&gt;@Transient(false)&lt;/code&gt; . 모든 경우에 &lt;a href=&quot;introspector&quot;&gt; &lt;code&gt;Introspector&lt;/code&gt; &lt;/a&gt; 는 가장 구체적인 수퍼 클래스의 주석을 참조하여 기능이 일시적인지 결정합니다. 수퍼 클래스에 &lt;code&gt;Transient&lt;/code&gt; 주석이 없으면 이 기능은 과도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="57fd356f7d95a14f5404eeb90ff5031af2abdc3b" translate="yes" xml:space="preserve">
          <source>To declare a service provider, a &lt;code&gt;services&lt;/code&gt; subdirectory is placed within the &lt;code&gt;META-INF&lt;/code&gt; directory that is present in every JAR file. This directory contains a file for each service provider interface that has one or more implementation classes present in the JAR file. For example, if the JAR file contained a class named &lt;code&gt;com.mycompany.mypkg.MyServiceImpl&lt;/code&gt; which implements the &lt;code&gt;javax.someapi.SomeService&lt;/code&gt; interface, the JAR file would contain a file named:</source>
          <target state="translated">서비스 제공자를 선언하기 위해 &lt;code&gt;services&lt;/code&gt; 서브 디렉토리는 모든 JAR 파일에 있는 &lt;code&gt;META-INF&lt;/code&gt; 디렉토리 내에 있습니다. 이 디렉토리에는 JAR 파일에 하나 이상의 구현 클래스가있는 각 서비스 제공자 인터페이스에 대한 파일이 있습니다. 예를 들어, JAR 파일 에 &lt;code&gt;javax.someapi.SomeService&lt;/code&gt; 인터페이스 를 구현하는 &lt;code&gt;com.mycompany.mypkg.MyServiceImpl&lt;/code&gt; 이라는 클래스 가 포함 된 경우 JAR 파일에는 다음과 같은 이름의 파일이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="8d5f427026a3bffd1cf9d8eaa3798b47dd458e0e" translate="yes" xml:space="preserve">
          <source>To declare the default element Namespace, use the empty string as the prefix.</source>
          <target state="translated">To declare the default element Namespace, use the empty string as the prefix.</target>
        </trans-unit>
        <trans-unit id="7283b113e7c0164d77d2a8c9fb8573fa56cef93b" translate="yes" xml:space="preserve">
          <source>To define a new attribute category, a vendor defines a new attribute class. This attribute class, like the standard attribute classes, implements &lt;code&gt;Attribute&lt;/code&gt; or one of its subinterfaces and extends an abstract syntax class. The vendor can either use an existing abstract syntax class or define a new one. The new vendor-defined attribute can be used wherever an &lt;code&gt;Attribute&lt;/code&gt; is used, such as in an &lt;code&gt;AttributeSet&lt;/code&gt;.</source>
          <target state="translated">새로운 속성 범주를 정의하기 위해 공급 업체는 새로운 속성 클래스를 정의합니다. 이 속성 클래스는 표준 속성 클래스와 마찬가지로 &lt;code&gt;Attribute&lt;/code&gt; 또는 해당 서브 인터페이스 중 하나를 구현 하고 추상 구문 클래스를 확장합니다. 공급 업체는 기존 추상 구문 클래스를 사용하거나 새로운 추상 구문 클래스를 정의 할 수 있습니다. 목적지 새로운 벤더 정의 속성을 사용할 수있는 &lt;code&gt;Attribute&lt;/code&gt; 그러한 같이 사용되는 &lt;code&gt;AttributeSet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e347f14baa8fe4d897360a51c83aed5e5fbc4b76" translate="yes" xml:space="preserve">
          <source>To define a new value for an attribute, a client can construct instances of such attributes with arbitrary values at runtime. However, an enumerated attribute using an abstract syntax class of &lt;code&gt;EnumSyntax&lt;/code&gt; specifies all the possible attribute values at compile time as singleton instances of the attribute class. This means that new enumerated values cannot be constructed at run time. To define new vendor-specific values for a standard enumerated attribute, the vendor must define a new attribute class specifying the new singleton instances. To ensure that the new attribute values fall in the same category as the standard attribute values, the new attribute class must be a subclass of the standard attribute class.</source>
          <target state="translated">속성에 대한 새로운 값을 정의하기 위해 클라이언트는 런타임에 임의의 값으로 속성의 인스턴스를 구성 할 수 있습니다. 그러나 &lt;code&gt;EnumSyntax&lt;/code&gt; 의 추상 구문 클래스를 사용하여 열거 된 특성 은 컴파일 타임에 가능한 모든 특성 값을 특성 클래스의 단일 인스턴스로 지정합니다. 즉, 새로운 열거 값을 런타임에 구성 할 수 없습니다. 표준 열거 속성에 대해 새로운 공급 업체별 값을 정의하려면 공급 업체는 새 싱글 톤 인스턴스를 지정하는 새로운 속성 클래스를 정의해야합니다. 새 속성 값이 표준 속성 값과 동일한 범주에 속하도록하려면 새 속성 클래스는 표준 속성 클래스의 서브 클래스 여야합니다.</target>
        </trans-unit>
        <trans-unit id="7be390e424352119396aca90952aa3eb2e129ceb" translate="yes" xml:space="preserve">
          <source>To detect if a MidiDevice represents a hardware MIDI port, the following programming technique can be used:</source>
          <target state="translated">MidiDevice가 하드웨어 MIDI 포트를 나타내는 지 감지하려면 다음 프로그래밍 기술을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e676ccd071b538464ec0f5bba24430555e2f6906" translate="yes" xml:space="preserve">
          <source>To determine certificate equality, this method only compares actual signer certificates. Supporting certificate chains are not taken into consideration by this method.</source>
          <target state="translated">인증서 동등성을 확인하기 위해이 방법은 실제 서명자 인증서 만 비교합니다. 이 방법에서는 지원 인증서 체인을 고려하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ff5817879da34db4f56fdd68b526d292ae2a611c" translate="yes" xml:space="preserve">
          <source>To determine if your environment is a virtual device environment, call &lt;code&gt;getBounds&lt;/code&gt; on all of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; objects in your system. If any of the origins of the returned bounds is not (0, 0), your environment is a virtual device environment.</source>
          <target state="translated">To determine if your environment is a virtual device environment, call &lt;code&gt;getBounds&lt;/code&gt; on all of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; objects in your system. If any of the origins of the returned bounds is not (0, 0), your environment is a virtual device environment.</target>
        </trans-unit>
        <trans-unit id="902c6e685e894ad6aedb9e2a7a97d5aa77dd6669" translate="yes" xml:space="preserve">
          <source>To disable a traversal key, use an empty &lt;code&gt;Set&lt;/code&gt;; &lt;code&gt;Collections.EMPTY_SET&lt;/code&gt; is recommended.</source>
          <target state="translated">To disable a traversal key, use an empty &lt;code&gt;Set&lt;/code&gt; ; &lt;code&gt;Collections.EMPTY_SET&lt;/code&gt; is recommended.</target>
        </trans-unit>
        <trans-unit id="e816b46eabb2d9327b82c3318740e2a587020d84" translate="yes" xml:space="preserve">
          <source>To disable a traversal key, use an empty Set; Collections.EMPTY_SET is recommended.</source>
          <target state="translated">To disable a traversal key, use an empty Set; Collections.EMPTY_SET is recommended.</target>
        </trans-unit>
        <trans-unit id="521d4df1fdecc5d9afbb280c6d01cbb8e8131919" translate="yes" xml:space="preserve">
          <source>To display the selected item, &lt;code&gt;aRenderer.getListCellRendererComponent&lt;/code&gt; is called, passing the list object and an index of -1.</source>
          <target state="translated">To display the selected item, &lt;code&gt;aRenderer.getListCellRendererComponent&lt;/code&gt; is called, passing the list object and an index of -1.</target>
        </trans-unit>
        <trans-unit id="e0c996f0050be7ce5d2c546057a7079bb77afcba" translate="yes" xml:space="preserve">
          <source>To enable sorting and filtering of rows, use a &lt;code&gt;RowSorter&lt;/code&gt;. You can set up a row sorter in either of two ways:</source>
          <target state="translated">To enable sorting and filtering of rows, use a &lt;code&gt;RowSorter&lt;/code&gt; . You can set up a row sorter in either of two ways:</target>
        </trans-unit>
        <trans-unit id="ab978687241b79866b127e3c7c6ff7a942b26599" translate="yes" xml:space="preserve">
          <source>To enable the &lt;code&gt;AWTEvent&lt;/code&gt;s of a particular type, you call &lt;a href=&quot;../jlayer#setLayerEventMask(long)&quot;&gt;&lt;code&gt;JLayer.setLayerEventMask(long)&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;#installUI(javax.swing.JComponent)&quot;&gt;&lt;code&gt;installUI(javax.swing.JComponent)&lt;/code&gt;&lt;/a&gt; and set the layer event mask to &lt;code&gt;0&lt;/code&gt; in &lt;a href=&quot;#uninstallUI(javax.swing.JComponent)&quot;&gt;&lt;code&gt;uninstallUI(javax.swing.JComponent)&lt;/code&gt;&lt;/a&gt; after that. By default this method calls the appropriate &lt;code&gt;process&amp;lt;event&lt;/code&gt;&lt;code&gt;type&amp;gt;Event&lt;/code&gt; method for the given class of event.</source>
          <target state="translated">To enable the &lt;code&gt;AWTEvent&lt;/code&gt; s of a particular type, you call &lt;a href=&quot;../jlayer#setLayerEventMask(long)&quot;&gt; &lt;code&gt;JLayer.setLayerEventMask(long)&lt;/code&gt; &lt;/a&gt; in &lt;a href=&quot;#installUI(javax.swing.JComponent)&quot;&gt; &lt;code&gt;installUI(javax.swing.JComponent)&lt;/code&gt; &lt;/a&gt; and set the layer event mask to &lt;code&gt;0&lt;/code&gt; in &lt;a href=&quot;#uninstallUI(javax.swing.JComponent)&quot;&gt; &lt;code&gt;uninstallUI(javax.swing.JComponent)&lt;/code&gt; &lt;/a&gt; after that. By default this method calls the appropriate &lt;code&gt;process&amp;lt;event&lt;/code&gt; &lt;code&gt;type&amp;gt;Event&lt;/code&gt; method for the given class of event.</target>
        </trans-unit>
        <trans-unit id="9d4331aca8bde50509f15e66b1dc895741884c03" translate="yes" xml:space="preserve">
          <source>To ensure consistency in conversion implementations, the new &lt;code&gt;GregorianCalendar&lt;/code&gt; should be instantiated in following manner.</source>
          <target state="translated">To ensure consistency in conversion implementations, the new &lt;code&gt;GregorianCalendar&lt;/code&gt; should be instantiated in following manner.</target>
        </trans-unit>
        <trans-unit id="ec3f3d2e8b8da37d059135bf9927030dc1a93310" translate="yes" xml:space="preserve">
          <source>To ensure progress, the supplied function must arrange eventual completion of its result.</source>
          <target state="translated">To ensure progress, the supplied function must arrange eventual completion of its result.</target>
        </trans-unit>
        <trans-unit id="fbf6d3ab4a41188c49c32e545df6afa5e97c91be" translate="yes" xml:space="preserve">
          <source>To ensure reasonable behavior in the face of concurrency, the event is dispatched after the mutation has occurred. This means that by the time a notification of removal is dispatched, the document has already been updated and any marks created by &lt;code&gt;createPosition&lt;/code&gt; have already changed. For a removal, the end of the removal range is collapsed down to the start of the range, and any marks in the removal range are collapsed down to the start of the range.</source>
          <target state="translated">To ensure reasonable behavior in the face of concurrency, the event is dispatched after the mutation has occurred. This means that by the time a notification of removal is dispatched, the document has already been updated and any marks created by &lt;code&gt;createPosition&lt;/code&gt; have already changed. For a removal, the end of the removal range is collapsed down to the start of the range, and any marks in the removal range are collapsed down to the start of the range.</target>
        </trans-unit>
        <trans-unit id="11643c6ea43dfed43359a63e34cfeec2c468e235" translate="yes" xml:space="preserve">
          <source>To ensure that all resources associated with the corresponding HTTP exchange are properly released, an implementation of &lt;code&gt;
 BodySubscriber&lt;/code&gt; should ensure to &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt; more data until one of &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onComplete()&quot;&gt;&lt;code&gt;onComplete&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt;&lt;code&gt;onError&lt;/code&gt;&lt;/a&gt; are signalled, or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; its &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;subscription&lt;/a&gt; if unable or unwilling to do so. Calling &lt;code&gt;cancel&lt;/code&gt; before exhausting the response body data may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</source>
          <target state="translated">To ensure that all resources associated with the corresponding HTTP exchange are properly released, an implementation of &lt;code&gt; BodySubscriber&lt;/code&gt; should ensure to &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt; &lt;code&gt;request&lt;/code&gt; &lt;/a&gt; more data until one of &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onComplete()&quot;&gt; &lt;code&gt;onComplete&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt; &lt;code&gt;onError&lt;/code&gt; &lt;/a&gt; are signalled, or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt; its &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;subscription&lt;/a&gt; if unable or unwilling to do so. Calling &lt;code&gt;cancel&lt;/code&gt; before exhausting the response body data may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</target>
        </trans-unit>
        <trans-unit id="5f3eff81a66d8962e609b1164941f2aa109e279a" translate="yes" xml:space="preserve">
          <source>To ensure that all resources associated with the corresponding exchange are properly released the caller must ensure that the provided publisher is subscribed once, and either &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;requests&lt;/a&gt; all bytes until &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onComplete()&quot;&gt;&lt;code&gt;onComplete&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt;&lt;code&gt;onError&lt;/code&gt;&lt;/a&gt; are invoked, or cancel the provided &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;subscription&lt;/a&gt; if it is unable or unwilling to do so. Note that depending on the actual HTTP protocol &lt;a href=&quot;httpclient.version&quot;&gt;version&lt;/a&gt; used for the exchange, cancelling the subscription instead of exhausting the flow may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</source>
          <target state="translated">To ensure that all resources associated with the corresponding exchange are properly released the caller must ensure that the provided publisher is subscribed once, and either &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;requests&lt;/a&gt; all bytes until &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onComplete()&quot;&gt; &lt;code&gt;onComplete&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt; &lt;code&gt;onError&lt;/code&gt; &lt;/a&gt; are invoked, or cancel the provided &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;subscription&lt;/a&gt; if it is unable or unwilling to do so. Note that depending on the actual HTTP protocol &lt;a href=&quot;httpclient.version&quot;&gt;version&lt;/a&gt; used for the exchange, cancelling the subscription instead of exhausting the flow may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</target>
        </trans-unit>
        <trans-unit id="9745d3a736e887f0e3c7f8472f10fe34a71ab4a4" translate="yes" xml:space="preserve">
          <source>To ensure that all resources associated with the corresponding exchange are properly released the caller must ensure to either read all bytes until EOF is reached, or call &lt;a href=&quot;../../../../java.base/java/io/inputstream#close()&quot;&gt;&lt;code&gt;InputStream.close()&lt;/code&gt;&lt;/a&gt; if it is unable or unwilling to do so. Calling &lt;code&gt;close&lt;/code&gt; before exhausting the stream may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</source>
          <target state="translated">To ensure that all resources associated with the corresponding exchange are properly released the caller must ensure to either read all bytes until EOF is reached, or call &lt;a href=&quot;../../../../java.base/java/io/inputstream#close()&quot;&gt; &lt;code&gt;InputStream.close()&lt;/code&gt; &lt;/a&gt; if it is unable or unwilling to do so. Calling &lt;code&gt;close&lt;/code&gt; before exhausting the stream may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</target>
        </trans-unit>
        <trans-unit id="fa53fd89d6c9264fb3e331487b71d7d22e61aa13" translate="yes" xml:space="preserve">
          <source>To ensure that all resources associated with the corresponding exchange are properly released the caller must ensure to either read all lines until the stream is exhausted, or call &lt;a href=&quot;../../../../java.base/java/util/stream/basestream#close()&quot;&gt;&lt;code&gt;BaseStream.close()&lt;/code&gt;&lt;/a&gt; if it is unable or unwilling to do so. Calling &lt;code&gt;close&lt;/code&gt; before exhausting the stream may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</source>
          <target state="translated">해당 교환과 관련된 모든 리소스가 적절하게 해제되었는지 확인하기 위해 호출자는 스트림이 소진 될 때까지 모든 행을 읽 거나 그렇게 할 수 없거나 원하지 않는 경우 &lt;a href=&quot;../../../../java.base/java/util/stream/basestream#close()&quot;&gt; &lt;code&gt;BaseStream.close()&lt;/code&gt; &lt;/a&gt; 호출 해야합니다. 스트림을 소진하기 전에 &lt;code&gt;close&lt;/code&gt; 를 호출 하면 기본 HTTP 연결이 닫히고 후속 작업에 다시 사용되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="740785de36acfcfa114524f1b3afbf22d481fdba" translate="yes" xml:space="preserve">
          <source>To ensure that client parameters will be deserialized at the server side with the correct classloader, client parameters such as parameters used to invoke a method are wrapped in a &lt;a href=&quot;../../../../../java.rmi/java/rmi/marshalledobject&quot;&gt;&lt;code&gt;MarshalledObject&lt;/code&gt;&lt;/a&gt;. An implementation of this interface must first get the appropriate class loader for the operation and its target, then deserialize the marshalled parameters with this classloader. Except as noted, a parameter that is a &lt;code&gt;MarshalledObject&lt;/code&gt; or &lt;code&gt;MarshalledObject[]&lt;/code&gt; must not be null; the behavior is unspecified if it is.</source>
          <target state="translated">클라이언트 매개 변수가 올바른 클래스 로더를 사용하여 서버 측에서 역 직렬화되도록하기 위해 메서드를 호출하는 데 사용되는 매개 변수와 같은 클라이언트 매개 변수는 &lt;a href=&quot;../../../../../java.rmi/java/rmi/marshalledobject&quot;&gt; &lt;code&gt;MarshalledObject&lt;/code&gt; 에&lt;/a&gt; 래핑됩니다 . 이 인터페이스의 구현은 먼저 작업과 대상에 대한 적절한 클래스 로더를 가져온 다음이 클래스 로더를 사용하여 마샬링 된 매개 변수를 역 직렬화해야합니다. 언급 된 경우를 제외하고 &lt;code&gt;MarshalledObject&lt;/code&gt; 또는 &lt;code&gt;MarshalledObject[]&lt;/code&gt; 매개 변수는 null이 아니어야합니다. 그럴 경우 동작은 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b59757c043cfb960c17c98e1a8dd7ce3314ad5d3" translate="yes" xml:space="preserve">
          <source>To ensure that client parameters will be deserialized at the server side with the correct classloader, client parameters such as parameters used to invoke a method are wrapped in a &lt;a href=&quot;/openjdk~8_web/java/rmi/marshalledobject&quot;&gt;&lt;code&gt;MarshalledObject&lt;/code&gt;&lt;/a&gt;. An implementation of this interface must first get the appropriate class loader for the operation and its target, then deserialize the marshalled parameters with this classloader. Except as noted, a parameter that is a &lt;code&gt;MarshalledObject&lt;/code&gt; or &lt;code&gt;MarshalledObject[]&lt;/code&gt; must not be null; the behavior is unspecified if it is.</source>
          <target state="translated">클라이언트 클래스가 올바른 클래스 로더를 사용하여 서버 측에서 직렬화 해제되도록하기 위해 메소드를 호출하는 데 사용되는 매개 변수와 같은 클라이언트 매개 변수는 &lt;a href=&quot;/openjdk~8_web/java/rmi/marshalledobject&quot;&gt; &lt;code&gt;MarshalledObject&lt;/code&gt; 에&lt;/a&gt; 랩됩니다 . 이 인터페이스의 구현은 먼저 조작 및 해당 대상에 적합한 클래스 로더를 확보 한 후이 클래스 로더로 마샬링 된 매개 변수를 직렬화 해제해야합니다. 언급 된 것을 제외하고 &lt;code&gt;MarshalledObject&lt;/code&gt; 또는 &lt;code&gt;MarshalledObject[]&lt;/code&gt; 매개 변수는 널이 아니어야합니다. 있는 경우 동작이 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f2abea5f649f3db3eea3bbf55598ba6f03b42815" translate="yes" xml:space="preserve">
          <source>To ensure that keystore entries are uniquely identified, each entry's alias is prefixed by its &lt;code&gt;keystoreName&lt;/code&gt; followed by the entry name separator and each &lt;code&gt;keystoreName&lt;/code&gt; must be unique within its domain. Entry name prefixes are omitted when storing a keystore.</source>
          <target state="translated">키 저장소 항목을 고유하게 식별하려면 각 항목의 별명 앞에 &lt;code&gt;keystoreName&lt;/code&gt; 이오고 그 뒤에 항목 이름 구분 기호가오고 각 &lt;code&gt;keystoreName&lt;/code&gt; 이름 은 해당 도메인 내에서 고유해야합니다. 키 저장소를 저장할 때 항목 이름 접 두부가 생략됩니다.</target>
        </trans-unit>
        <trans-unit id="7533c6ef00ad28237e37b969dc3e84fa760e069f" translate="yes" xml:space="preserve">
          <source>To ensure that sequential and parallel executions produce equivalent results, the collector functions must satisfy an &lt;em&gt;identity&lt;/em&gt; and an &lt;a href=&quot;package-summary#Associativity&quot;&gt;associativity&lt;/a&gt; constraints.</source>
          <target state="translated">순차적 및 병렬 실행이 동등한 결과를 생성하도록하려면 콜렉터 함수가 &lt;em&gt;ID&lt;/em&gt; 및 &lt;a href=&quot;package-summary#Associativity&quot;&gt;연관성&lt;/a&gt; 제한 조건을 충족시켜야합니다 .</target>
        </trans-unit>
        <trans-unit id="00fe0fe22981250465b7707614b837e155640b61" translate="yes" xml:space="preserve">
          <source>To ensure the integrity of time-zones already created, there is no way to deregister providers.</source>
          <target state="translated">이미 생성 된 시간대의 무결성을 보장하기 위해 공급자를 등록 취소 할 수있는 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="5106a2defd4e990de3915bb1a3bd513a8478ebfd" translate="yes" xml:space="preserve">
          <source>To fill in default values, use &lt;a href=&quot;../util/elements#getElementValuesWithDefaults(javax.lang.model.element.AnnotationMirror)&quot;&gt;&lt;code&gt;getElementValuesWithDefaults&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본값을 채우려면 &lt;a href=&quot;../util/elements#getElementValuesWithDefaults(javax.lang.model.element.AnnotationMirror)&quot;&gt; &lt;code&gt;getElementValuesWithDefaults&lt;/code&gt; 를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="054a915983e4b95e8f0a7fc17e50da04ce361fd5" translate="yes" xml:space="preserve">
          <source>To fill in default values, use &lt;a href=&quot;../util/elements#getElementValuesWithDefaults-javax.lang.model.element.AnnotationMirror-&quot;&gt;&lt;code&gt;getElementValuesWithDefaults&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본값을 채우려면 &lt;a href=&quot;../util/elements#getElementValuesWithDefaults-javax.lang.model.element.AnnotationMirror-&quot;&gt; &lt;code&gt;getElementValuesWithDefaults&lt;/code&gt; 를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1b1f92d50f9e865c5004f64d2a4f404c52a1d655" translate="yes" xml:space="preserve">
          <source>To find a &lt;code&gt;SchemaFactory&lt;/code&gt; object for a given schema language, this method looks the following places in the following order where &quot;the class loader&quot; refers to the context class loader:</source>
          <target state="translated">주어진 스키마 언어에 대한 &lt;code&gt;SchemaFactory&lt;/code&gt; 개체 를 찾기 위해이 메서드는 &quot;클래스 로더&quot;가 컨텍스트 클래스 로더를 참조하는 다음 순서로 다음 위치를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="9b8775d414d5739e2553eeb95758778f1b1162a5" translate="yes" xml:space="preserve">
          <source>To find a &lt;code&gt;XPathFactory&lt;/code&gt; object, this method looks the following places in the following order where &quot;the class loader&quot; refers to the context class loader:</source>
          <target state="translated">&lt;code&gt;XPathFactory&lt;/code&gt; 객체 를 찾기 위해이 메소드는 &quot;클래스 로더&quot;가 컨텍스트 클래스 로더를 참조하는 다음 순서로 다음 위치를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="e7a2eb21d729f289e381419913e34035d0572aa1" translate="yes" xml:space="preserve">
          <source>To find a matching method in a class or interface C: If C declares exactly one public method with the specified name and exactly the same formal parameter types, that is the method reflected. If more than one such method is found in C, and one of these methods has a return type that is more specific than any of the others, that method is reflected; otherwise one of the methods is chosen arbitrarily.</source>
          <target state="translated">클래스 또는 인터페이스 C에서 일치하는 메소드를 찾으려면 : C가 지정된 이름과 정확히 동일한 형식 매개 변수 유형으로 정확히 하나의 공용 메소드를 선언하는 경우 해당 메소드가 반영됩니다. C에서 두 개 이상의 이러한 메소드가 발견되고이 메소드 중 하나가 다른 메소드보다 더 구체적인 리턴 유형을 갖는 경우 해당 메소드가 반영됩니다. 그렇지 않으면 방법 중 하나가 임의로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="18affa8e6289d316bfbb65fcc90a0d84436fb4e2" translate="yes" xml:space="preserve">
          <source>To force a complete SSL/TLS session renegotiation, the current session should be invalidated prior to calling this method.</source>
          <target state="translated">완전한 SSL / TLS 세션 재협상을 강제하려면이 메소드를 호출하기 전에 현재 세션을 무효화해야합니다.</target>
        </trans-unit>
        <trans-unit id="47932eadf2a2f5b763ff01f0e64c92e2c7a1f269" translate="yes" xml:space="preserve">
          <source>To force a complete SSL/TLS/DTLS session renegotiation, the current session should be invalidated prior to calling this method.</source>
          <target state="translated">완전한 SSL / TLS / DTLS 세션 재협상을 강제하려면이 메서드를 호출하기 전에 현재 세션을 무효화해야합니다.</target>
        </trans-unit>
        <trans-unit id="023592bd128d50677e7012f1fdf88fec752749f6" translate="yes" xml:space="preserve">
          <source>To format a date for a different Locale, specify it in the call to &lt;a href=&quot;#getDateInstance(int,java.util.Locale)&quot;&gt;&lt;code&gt;getDateInstance()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다른 로케일의 날짜 형식을 지정하려면 &lt;a href=&quot;#getDateInstance(int,java.util.Locale)&quot;&gt; &lt;code&gt;getDateInstance()&lt;/code&gt; &lt;/a&gt; 호출에서 날짜를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="23a173b3cd0da62e49a4c6312b7effbebcf70a1d" translate="yes" xml:space="preserve">
          <source>To format a date for a different Locale, specify it in the call to &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateInstance()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다른 로케일의 날짜를 형식화하려면 &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateInstance()&lt;/code&gt; &lt;/a&gt; 호출에서 날짜를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="31c56dc41650b703b7585ee73957c79da8a6ebd8" translate="yes" xml:space="preserve">
          <source>To format a date for the current Locale, use one of the static factory methods:</source>
          <target state="translated">현재 로케일의 날짜를 형식화하려면 정적 팩토리 메소드 중 하나를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1efc90fec6b3d2be588385321c3b066f49b91be9" translate="yes" xml:space="preserve">
          <source>To format a number for a different Locale, specify it in the call to &lt;code&gt;getInstance&lt;/code&gt;.</source>
          <target state="translated">다른 로케일의 숫자를 형식화하려면 &lt;code&gt;getInstance&lt;/code&gt; 호출에서 해당 숫자를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8abc2244a33eeafa86f7a9eab9d0022e187c943" translate="yes" xml:space="preserve">
          <source>To format a number for the current Locale, use one of the factory class methods:</source>
          <target state="translated">현재 로케일의 숫자를 형식화하려면 팩토리 클래스 메소드 중 하나를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="66a7e5e7c134d63a47be4ac7fd3cecaecbe5eb3b" translate="yes" xml:space="preserve">
          <source>To generate the new &lt;code&gt;Map&lt;/code&gt;, first the &lt;code&gt;Font&lt;/code&gt; is obtained from the &lt;code&gt;FONT&lt;/code&gt; attribute, and &lt;em&gt;all&lt;/em&gt; of its attributes extracted into a new &lt;code&gt;Map&lt;/code&gt;. Then only the &lt;em&gt;secondary&lt;/em&gt; attributes from the original &lt;code&gt;Map&lt;/code&gt; are added to those in the new &lt;code&gt;Map&lt;/code&gt;. Thus the values of primary attributes come solely from the &lt;code&gt;Font&lt;/code&gt;, and the values of secondary attributes originate with the &lt;code&gt;Font&lt;/code&gt; but can be overridden by other values in the &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">새 &lt;code&gt;Map&lt;/code&gt; 을 생성하려면 먼저 &lt;code&gt;FONT&lt;/code&gt; 속성 에서 &lt;code&gt;Font&lt;/code&gt; 를 가져 오고 &lt;em&gt;모든&lt;/em&gt; 속성을 새 &lt;code&gt;Map&lt;/code&gt; 으로 추출 합니다. 그런 다음 원래 &lt;code&gt;Map&lt;/code&gt; 의 &lt;em&gt;보조&lt;/em&gt; 속성 만 새 &lt;code&gt;Map&lt;/code&gt; 속성 에 추가됩니다 . 따라서 기본 속성의 값은 전적으로 &lt;code&gt;Font&lt;/code&gt; 에서 가져오고 보조 속성의 값은 &lt;code&gt;Font&lt;/code&gt; 에서 시작 되지만 &lt;code&gt;Map&lt;/code&gt; 의 다른 값에 의해 재정의 될 수 있습니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7068f16c1368da1e38328378e79e407c5026688" translate="yes" xml:space="preserve">
          <source>To get access to the methods in the &lt;code&gt;Joinable&lt;/code&gt; interface, a &lt;code&gt;RowSet&lt;/code&gt; object implements at least one of the five standard &lt;code&gt;RowSet&lt;/code&gt; interfaces and also implements the &lt;code&gt;Joinable&lt;/code&gt; interface. In addition, most &lt;code&gt;RowSet&lt;/code&gt; objects extend the &lt;code&gt;BaseRowSet&lt;/code&gt; class. For example:</source>
          <target state="translated">&lt;code&gt;Joinable&lt;/code&gt; 인터페이스 의 메소드에 액세스하기 위해 &lt;code&gt;RowSet&lt;/code&gt; 객체는 5 개의 표준 &lt;code&gt;RowSet&lt;/code&gt; 인터페이스 중 하나 이상 을 구현하고 &lt;code&gt;Joinable&lt;/code&gt; 인터페이스 도 구현합니다 . 또한 대부분의 &lt;code&gt;RowSet&lt;/code&gt; 객체는 &lt;code&gt;BaseRowSet&lt;/code&gt; 클래스를 확장합니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="52b92f4e22e96872d0eeaf2d39a7292f5d628910" translate="yes" xml:space="preserve">
          <source>To get all prefixes bound to a Namespace URI in the current scope, use &lt;a href=&quot;#getPrefixes(java.lang.String)&quot;&gt;&lt;code&gt;getPrefixes(String namespaceURI)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 범위에서 네임 스페이스 URI에 바인딩 된 모든 접두사를 가져 오려면 &lt;a href=&quot;#getPrefixes(java.lang.String)&quot;&gt; &lt;code&gt;getPrefixes(String namespaceURI)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="d0c3f50bdc8e06b0b1c0cba75b086eb2e0b2a934" translate="yes" xml:space="preserve">
          <source>To get all the print data for a multidoc print job, a Print Service proxy could use either of two patterns:</source>
          <target state="translated">다중 문서 인쇄 작업에 대한 모든 인쇄 데이터를 가져 오기 위해 인쇄 서비스 프록시는 다음 두 패턴 중 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db85f570d409f6ee337c4648a89a556a12485b24" translate="yes" xml:space="preserve">
          <source>To get inherited annotations as well, use &lt;a href=&quot;../util/elements#getAllAnnotationMirrors(javax.lang.model.element.Element)&quot;&gt;&lt;code&gt;getAllAnnotationMirrors&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상속 된 주석도 얻으려면 &lt;a href=&quot;../util/elements#getAllAnnotationMirrors(javax.lang.model.element.Element)&quot;&gt; &lt;code&gt;getAllAnnotationMirrors&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="53f9c125af6f96d56cd5afcb02f4e6777d74a3ee" translate="yes" xml:space="preserve">
          <source>To get inherited annotations as well, use &lt;a href=&quot;../util/elements#getAllAnnotationMirrors-javax.lang.model.element.Element-&quot;&gt;&lt;code&gt;getAllAnnotationMirrors&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상속 된 주석도 얻으려면 &lt;a href=&quot;../util/elements#getAllAnnotationMirrors-javax.lang.model.element.Element-&quot;&gt; &lt;code&gt;getAllAnnotationMirrors&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c0d6c5ca9be6faabe7c5c4b78779fe5ee5e0974e" translate="yes" xml:space="preserve">
          <source>To get the full nanosecond resolution event time, use &lt;a href=&quot;#getInstant()&quot;&gt;&lt;code&gt;getInstant()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">전체 나노초 해상도 이벤트 시간을 얻으려면 &lt;a href=&quot;#getInstant()&quot;&gt; &lt;code&gt;getInstant()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0edf530fac42c6b9feda41e41a432619d4db95aa" translate="yes" xml:space="preserve">
          <source>To get the pseudo-type corresponding to a package or module, call &lt;code&gt;asType()&lt;/code&gt; on the element modeling the &lt;a href=&quot;../element/packageelement&quot;&gt;package&lt;/a&gt; or &lt;a href=&quot;../element/moduleelement&quot;&gt;module&lt;/a&gt;. Names can be converted to elements for packages or modules using &lt;a href=&quot;elements#getPackageElement(java.lang.CharSequence)&quot;&gt;&lt;code&gt;Elements.getPackageElement(CharSequence)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;elements#getModuleElement(java.lang.CharSequence)&quot;&gt;&lt;code&gt;Elements.getModuleElement(CharSequence)&lt;/code&gt;&lt;/a&gt;, respectively.</source>
          <target state="translated">패키지 또는 모듈 호출에 해당하는 의사 형 얻으려면 &lt;code&gt;asType()&lt;/code&gt; 모델링 요소에 &lt;a href=&quot;../element/packageelement&quot;&gt;패키지&lt;/a&gt; 또는 &lt;a href=&quot;../element/moduleelement&quot;&gt;모듈을&lt;/a&gt; . 이름은 각각 &lt;a href=&quot;elements#getPackageElement(java.lang.CharSequence)&quot;&gt; &lt;code&gt;Elements.getPackageElement(CharSequence)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;elements#getModuleElement(java.lang.CharSequence)&quot;&gt; &lt;code&gt;Elements.getModuleElement(CharSequence)&lt;/code&gt; &lt;/a&gt; 사용하여 패키지 또는 모듈의 요소로 변환 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8be391c458cb78822f7c5bfc69617ab46cc68a26" translate="yes" xml:space="preserve">
          <source>To get the usable bounds of a single display, use &lt;code&gt;GraphicsConfiguration.getBounds()&lt;/code&gt; and &lt;code&gt;Toolkit.getScreenInsets()&lt;/code&gt;.</source>
          <target state="translated">단일 디스플레이의 사용 가능한 경계를 얻으려면 &lt;code&gt;GraphicsConfiguration.getBounds()&lt;/code&gt; 및 &lt;code&gt;Toolkit.getScreenInsets()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="734faec3693f1b81c8049c2b2612c8bba8fe7efe" translate="yes" xml:space="preserve">
          <source>To give the &quot;backup&quot; service a proxiable nfs service ticket the target permission might be specified:</source>
          <target state="translated">&quot;백업&quot;서비스에 프록시 가능 nfs 서비스 티켓을 제공하려면 대상 권한을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c844926cf4aa3b93bd05012b27600af333a76db" translate="yes" xml:space="preserve">
          <source>To have an exception thrown if the conversion is inexact (in other words if a nonzero fractional part is discarded), use the &lt;a href=&quot;#toBigIntegerExact()&quot;&gt;&lt;code&gt;toBigIntegerExact()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">변환이 정확하지 않은 경우 (즉, 0이 아닌 소수 부분이 삭제 된 경우) 예외가 발생하도록하려면 &lt;a href=&quot;#toBigIntegerExact()&quot;&gt; &lt;code&gt;toBigIntegerExact()&lt;/code&gt; &lt;/a&gt; 메서드를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="4efd0f5f6873e8bf5dda3afa59ebf8833c4b8c6e" translate="yes" xml:space="preserve">
          <source>To have an exception thrown if the conversion is inexact (in other words if a nonzero fractional part is discarded), use the &lt;a href=&quot;bigdecimal#toBigIntegerExact--&quot;&gt;&lt;code&gt;toBigIntegerExact()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">변환이 정확하지 않은 경우 (즉, 0이 아닌 소수 부분을 버린 경우) 예외를 발생 시키려면 &lt;a href=&quot;bigdecimal#toBigIntegerExact--&quot;&gt; &lt;code&gt;toBigIntegerExact()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="7cd77572030e4bc183f87ba9e0b647921b604b65" translate="yes" xml:space="preserve">
          <source>To help ensure portability of Java programs, the definitions of some of the numeric functions in this package require that they produce the same results as certain published algorithms. These algorithms are available from the well-known network library &lt;code&gt;netlib&lt;/code&gt; as the package &quot;Freely Distributable Math Library,&quot; &lt;a href=&quot;ftp://ftp.netlib.org/fdlibm.tar&quot;&gt;&lt;code&gt;fdlibm&lt;/code&gt;&lt;/a&gt;. These algorithms, which are written in the C programming language, are then to be understood as executed with all floating-point operations following the rules of Java floating-point arithmetic.</source>
          <target state="translated">Java 프로그램의 이식성을 보장하기 위해이 패키지의 일부 숫자 함수를 정의하려면 공개 된 특정 알고리즘과 동일한 결과를 생성해야합니다. 이 알고리즘은 잘 알려진 네트워크 라이브러리 &lt;code&gt;netlib&lt;/code&gt; 에서 &quot;Freely Distributable Math Library&quot; &lt;a href=&quot;ftp://ftp.netlib.org/fdlibm.tar&quot;&gt; &lt;code&gt;fdlibm&lt;/code&gt; &lt;/a&gt; 패키지 로 제공 됩니다. C 프로그래밍 언어로 작성된 이러한 알고리즘은 Java 부동 소수점 산술 규칙에 따라 모든 부동 소수점 연산으로 실행되는 것으로 이해됩니다.</target>
        </trans-unit>
        <trans-unit id="5e4c97873af70f0195b146c1979f0db569946b5a" translate="yes" xml:space="preserve">
          <source>To implement a list the programmer needs only to extend this class and provide implementations for the &lt;code&gt;listIterator&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; methods. For an unmodifiable list, the programmer need only implement the list iterator's &lt;code&gt;hasNext&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;hasPrevious&lt;/code&gt;, &lt;code&gt;previous&lt;/code&gt; and &lt;code&gt;index&lt;/code&gt; methods.</source>
          <target state="translated">리스트를 구현하려면 프로그래머는이 클래스를 확장하고 &lt;code&gt;listIterator&lt;/code&gt; 및 &lt;code&gt;size&lt;/code&gt; 메소드에 대한 구현 만 제공하면 됩니다. 수정 불가능한리스트의 경우, 프로그래머는리스트 반복자의 &lt;code&gt;hasNext&lt;/code&gt; , &lt;code&gt;next&lt;/code&gt; , &lt;code&gt;hasPrevious&lt;/code&gt; , &lt;code&gt;previous&lt;/code&gt; 및 &lt;code&gt;index&lt;/code&gt; 메소드 만 구현하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="86969fc9fa9ff65fcf2df680df949b538474ae52" translate="yes" xml:space="preserve">
          <source>To implement a modifiable collection, the programmer must additionally override this class's &lt;code&gt;add&lt;/code&gt; method (which otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;), and the iterator returned by the &lt;code&gt;iterator&lt;/code&gt; method must additionally implement its &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">수정 가능한 컬렉션을 구현하려면 프로그래머가이 클래스의 &lt;code&gt;add&lt;/code&gt; 메서드를 추가로 재정의해야하며 (그렇지 않으면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 ) &lt;code&gt;iterator&lt;/code&gt; 메서드에서 반환 된 반복자 는 &lt;code&gt;remove&lt;/code&gt; 메서드를 추가로 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b1560ee47843b7bf3309272a76f86d437bc8f046" translate="yes" xml:space="preserve">
          <source>To implement a modifiable list, the programmer must additionally override the &lt;a href=&quot;#set(int,E)&quot;&gt;&lt;code&gt;set(int, E)&lt;/code&gt;&lt;/a&gt; method (which otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;). If the list is variable-size the programmer must additionally override the &lt;a href=&quot;#add(int,E)&quot;&gt;&lt;code&gt;add(int, E)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#remove(int)&quot;&gt;&lt;code&gt;remove(int)&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">수정 가능한 목록을 구현하려면 프로그래머는 &lt;a href=&quot;#set(int,E)&quot;&gt; &lt;code&gt;set(int, E)&lt;/code&gt; &lt;/a&gt; 메서드를 추가로 재정의해야합니다 (그렇지 않으면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다). 목록이 가변 크기 인 경우 프로그래머는 &lt;a href=&quot;#add(int,E)&quot;&gt; &lt;code&gt;add(int, E)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#remove(int)&quot;&gt; &lt;code&gt;remove(int)&lt;/code&gt; &lt;/a&gt; 메서드를 추가로 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9decea476179857efb8167e4eb3423dfe587d678" translate="yes" xml:space="preserve">
          <source>To implement a modifiable list, the programmer must additionally override the &lt;a href=&quot;abstractlist#set-int-E-&quot;&gt;&lt;code&gt;set(int, E)&lt;/code&gt;&lt;/a&gt; method (which otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;). If the list is variable-size the programmer must additionally override the &lt;a href=&quot;abstractlist#add-int-E-&quot;&gt;&lt;code&gt;add(int, E)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;abstractlist#remove-int-&quot;&gt;&lt;code&gt;remove(int)&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">수정 가능한 목록을 구현하려면 프로그래머가 &lt;a href=&quot;abstractlist#set-int-E-&quot;&gt; &lt;code&gt;set(int, E)&lt;/code&gt; &lt;/a&gt; 메서드를 추가로 재정의해야합니다 (그렇지 않으면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 발생 ). 리스트가 가변 크기 인 경우 프로그래머는 &lt;a href=&quot;abstractlist#add-int-E-&quot;&gt; &lt;code&gt;add(int, E)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;abstractlist#remove-int-&quot;&gt; &lt;code&gt;remove(int)&lt;/code&gt; &lt;/a&gt; 메소드를 추가로 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="aa7303ac29218f70d971d81a83ee93b68db42140" translate="yes" xml:space="preserve">
          <source>To implement a modifiable map, the programmer must additionally override this class's &lt;code&gt;put&lt;/code&gt; method (which otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;), and the iterator returned by &lt;code&gt;entrySet().iterator()&lt;/code&gt; must additionally implement its &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">수정 가능한 맵을 구현하려면 프로그래머가이 클래스의 &lt;code&gt;put&lt;/code&gt; 메소드를 추가로 재정의해야하며 (그렇지 않으면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 ), &lt;code&gt;entrySet().iterator()&lt;/code&gt; 의해 리턴 된 반복자 는 &lt;code&gt;remove&lt;/code&gt; 메소드를 추가로 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f4f28c36fafbaae1ba1c6b2a0d879b13be8b6d8f" translate="yes" xml:space="preserve">
          <source>To implement a spliterator an extending class need only implement &lt;a href=&quot;spliterator.ofdouble#tryAdvance-java.util.function.DoubleConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfDouble.tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt; tryAdvance}. The extending class should override &lt;a href=&quot;spliterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfDouble.forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt; forEach} if it can provide a more performant implementation.</source>
          <target state="translated">스플리터를 구현하려면 확장 클래스는 &lt;a href=&quot;spliterator.ofdouble#tryAdvance-java.util.function.DoubleConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfDouble.tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt; tryAdvance} 만 구현 하면 됩니다. 확장 클래스는 성능이 뛰어난 구현을 제공 할 수있는 경우 &lt;a href=&quot;spliterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfDouble.forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt; forEach}를 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5cc0eceff27a04f1eb4e78d0fa0f239a31937f3c" translate="yes" xml:space="preserve">
          <source>To implement a spliterator an extending class need only implement &lt;a href=&quot;spliterator.ofint#tryAdvance-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfInt.tryAdvance(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt; tryAdvance}. The extending class should override &lt;a href=&quot;spliterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt; forEach} if it can provide a more performant implementation.</source>
          <target state="translated">스플리터를 구현하려면 확장 클래스는 &lt;a href=&quot;spliterator.ofint#tryAdvance-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfInt.tryAdvance(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt; tryAdvance} 만 구현 하면 됩니다. 확장 클래스는 성능이 뛰어난 구현을 제공 할 수있는 경우 &lt;a href=&quot;spliterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt; forEach}를 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9d003ef038d7bc2222c0d7ed292f23107be6608e" translate="yes" xml:space="preserve">
          <source>To implement a spliterator an extending class need only implement &lt;a href=&quot;spliterator.oflong#tryAdvance-java.util.function.LongConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfLong.tryAdvance(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt; tryAdvance}. The extending class should override &lt;a href=&quot;spliterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfLong.forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt; forEach} if it can provide a more performant implementation.</source>
          <target state="translated">스플리터를 구현하려면 확장 클래스는 &lt;a href=&quot;spliterator.oflong#tryAdvance-java.util.function.LongConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfLong.tryAdvance(java.util.function.LongConsumer)&lt;/code&gt; &lt;/a&gt; tryAdvance} 만 구현 하면 됩니다. 확장 클래스는 성능이 뛰어난 구현을 제공 할 수있는 경우 &lt;a href=&quot;spliterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfLong.forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt; &lt;/a&gt; forEach}를 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f78b953d621ef8dd5612e1e265c23844fa76bede" translate="yes" xml:space="preserve">
          <source>To implement a spliterator an extending class need only implement &lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt;&lt;code&gt;tryAdvance&lt;/code&gt;&lt;/a&gt;. The extending class should override &lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt;&lt;code&gt;forEachRemaining&lt;/code&gt;&lt;/a&gt; if it can provide a more performant implementation.</source>
          <target state="translated">분할자를 구현하려면 확장 클래스는 tryAdvance 만 구현 &lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt; &lt;code&gt;tryAdvance&lt;/code&gt; &lt;/a&gt; 됩니다. 확장 클래스는 더 성능이 좋은 구현을 제공 할 수있는 경우 &lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt; &lt;code&gt;forEachRemaining&lt;/code&gt; &lt;/a&gt; 을 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="671463582399b1ae06cf4aed172d63ff06a22dcf" translate="yes" xml:space="preserve">
          <source>To implement an unmodifiable collection, the programmer needs only to extend this class and provide implementations for the &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; methods. (The iterator returned by the &lt;code&gt;iterator&lt;/code&gt; method must implement &lt;code&gt;hasNext&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt;.)</source>
          <target state="translated">수정 불가능한 콜렉션을 구현하려면 프로그래머는이 클래스를 확장하고 &lt;code&gt;iterator&lt;/code&gt; 및 &lt;code&gt;size&lt;/code&gt; 메소드에 대한 구현 만 제공하면 됩니다 . (반복자에 의해 반환 된 &lt;code&gt;iterator&lt;/code&gt; 구현해야하는 방법 &lt;code&gt;hasNext&lt;/code&gt; 및 &lt;code&gt;next&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="616c7f95abdc4cbce8cbe5c6d1a139815d544745" translate="yes" xml:space="preserve">
          <source>To implement an unmodifiable list, the programmer needs only to extend this class and provide implementations for the &lt;a href=&quot;#get(int)&quot;&gt;&lt;code&gt;get(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;list#size()&quot;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">수정할 수없는 목록을 구현하려면 프로그래머는이 클래스를 확장하고 &lt;a href=&quot;#get(int)&quot;&gt; &lt;code&gt;get(int)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;list#size()&quot;&gt; &lt;code&gt;size()&lt;/code&gt; &lt;/a&gt; 메서드에 대한 구현을 제공하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="5430a4e8b9de5cc4540fc3c7ac301e5ebbad4405" translate="yes" xml:space="preserve">
          <source>To implement an unmodifiable list, the programmer needs only to extend this class and provide implementations for the &lt;a href=&quot;abstractlist#get-int-&quot;&gt;&lt;code&gt;get(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;list#size--&quot;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">수정 불가능한 목록을 구현하려면 프로그래머는이 클래스를 확장하고 &lt;a href=&quot;abstractlist#get-int-&quot;&gt; &lt;code&gt;get(int)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;list#size--&quot;&gt; &lt;code&gt;size()&lt;/code&gt; &lt;/a&gt; 메소드에 대한 구현 만 제공하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="e46f4737bb04074017c53a93c53e20d7d872b78c" translate="yes" xml:space="preserve">
          <source>To implement an unmodifiable map, the programmer needs only to extend this class and provide an implementation for the &lt;code&gt;entrySet&lt;/code&gt; method, which returns a set-view of the map's mappings. Typically, the returned set will, in turn, be implemented atop &lt;code&gt;AbstractSet&lt;/code&gt;. This set should not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;remove&lt;/code&gt; methods, and its iterator should not support the &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">수정 불가능한 맵을 구현하려면 프로그래머는이 클래스를 확장하고 &lt;code&gt;entrySet&lt;/code&gt; 메소드에 대한 구현 만 제공하면됩니다.이 메소드는 맵 맵핑의 설정보기를 리턴합니다. 일반적으로 반환 된 세트는 &lt;code&gt;AbstractSet&lt;/code&gt; 위에 구현 됩니다. 이 세트는 &lt;code&gt;add&lt;/code&gt; 또는 &lt;code&gt;remove&lt;/code&gt; 메소드를 지원하지 않아야하며 반복자는 &lt;code&gt;remove&lt;/code&gt; 메소드를 지원하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="b60c40eb41f5b2d0799d39deb0d1ec4e177d5ce6" translate="yes" xml:space="preserve">
          <source>To implement operations based on the class of an &lt;code&gt;
 Element&lt;/code&gt; object, either use a &lt;a href=&quot;elementvisitor&quot;&gt;visitor&lt;/a&gt; or use the result of the &lt;a href=&quot;#getKind()&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;
 instanceof&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; necessarily a reliable idiom for determining the effective class of an object in this modeling hierarchy since an implementation may choose to have a single object implement multiple &lt;code&gt;Element&lt;/code&gt; subinterfaces.</source>
          <target state="translated">&lt;code&gt; Element&lt;/code&gt; 객체 의 클래스를 기반으로 작업을 구현하려면 &lt;a href=&quot;elementvisitor&quot;&gt;방문자를&lt;/a&gt; 사용하거나 &lt;a href=&quot;#getKind()&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt; 메서드 의 결과를 사용합니다 . 구현시 단일 개체가 여러 &lt;code&gt;Element&lt;/code&gt; 하위 인터페이스를 구현하도록 선택할 수 있으므로 &lt;code&gt; instanceof&lt;/code&gt; 를 사용 하는 것이이 모델링 계층 구조에서 개체의 효과적인 클래스를 결정하는 데 반드시 신뢰할 수있는 관용구 는 &lt;em&gt;아닙니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="37b7894324f4a64e553c356ad8a34880b8ee98eb" translate="yes" xml:space="preserve">
          <source>To implement operations based on the class of an &lt;code&gt;
 TypeMirror&lt;/code&gt; object, either use a &lt;a href=&quot;typevisitor&quot;&gt;visitor&lt;/a&gt; or use the result of the &lt;a href=&quot;#getKind()&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;
 instanceof&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; necessarily a reliable idiom for determining the effective class of an object in this modeling hierarchy since an implementation may choose to have a single object implement multiple &lt;code&gt;TypeMirror&lt;/code&gt; subinterfaces.</source>
          <target state="translated">&lt;code&gt; TypeMirror&lt;/code&gt; 객체 의 클래스를 기반으로 작업을 구현하려면 &lt;a href=&quot;typevisitor&quot;&gt;방문자를&lt;/a&gt; 사용하거나 &lt;a href=&quot;#getKind()&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt; 메서드 의 결과를 사용합니다 . 구현시 단일 개체가 여러 &lt;code&gt;TypeMirror&lt;/code&gt; 하위 인터페이스를 구현하도록 선택할 수 있으므로 &lt;code&gt; instanceof&lt;/code&gt; 를 사용 하는 것이이 모델링 계층 구조에서 개체의 효과적인 클래스를 결정하는 데 반드시 신뢰할 수있는 관용구 는 &lt;em&gt;아닙니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="4da9eb624b21389bac68e88ef77ffb98422a9b5d" translate="yes" xml:space="preserve">
          <source>To implement operations based on the class of an &lt;code&gt;Element&lt;/code&gt; object, either use a &lt;a href=&quot;elementvisitor&quot;&gt;visitor&lt;/a&gt; or use the result of the &lt;a href=&quot;element#getKind--&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;instanceof&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; necessarily a reliable idiom for determining the effective class of an object in this modeling hierarchy since an implementation may choose to have a single object implement multiple &lt;code&gt;Element&lt;/code&gt; subinterfaces.</source>
          <target state="translated">&lt;code&gt;Element&lt;/code&gt; 객체 의 클래스를 기반으로 작업을 구현하려면 &lt;a href=&quot;elementvisitor&quot;&gt;방문자를&lt;/a&gt; 사용하거나 &lt;a href=&quot;element#getKind--&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt; 메서드 의 결과를 사용하십시오 . 구현시 단일 객체가 여러 &lt;code&gt;Element&lt;/code&gt; 서브 인터페이스를 구현하도록 선택할 수 있으므로 &lt;code&gt;instanceof&lt;/code&gt; 를 사용 하는 것이이 모델링 계층에서 객체의 유효 클래스를 결정하는 데 반드시 신뢰할만한 관용구 는 &lt;em&gt;아닙니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="56c3983484a828bf0458dd2e79533731da677b55" translate="yes" xml:space="preserve">
          <source>To implement operations based on the class of an &lt;code&gt;TypeMirror&lt;/code&gt; object, either use a &lt;a href=&quot;typevisitor&quot;&gt;visitor&lt;/a&gt; or use the result of the &lt;a href=&quot;typemirror#getKind--&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;instanceof&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; necessarily a reliable idiom for determining the effective class of an object in this modeling hierarchy since an implementation may choose to have a single object implement multiple &lt;code&gt;TypeMirror&lt;/code&gt; subinterfaces.</source>
          <target state="translated">&lt;code&gt;TypeMirror&lt;/code&gt; 객체 의 클래스를 기반으로 작업을 구현하려면 &lt;a href=&quot;typevisitor&quot;&gt;방문자를&lt;/a&gt; 사용하거나 &lt;a href=&quot;typemirror#getKind--&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt; 메서드 의 결과를 사용하십시오 . 구현시 단일 객체가 여러 &lt;code&gt;TypeMirror&lt;/code&gt; 하위 인터페이스를 구현하도록 선택할 수 있으므로 &lt;code&gt;instanceof&lt;/code&gt; 를 사용 하는 것이이 모델링 계층에서 객체의 유효 클래스를 결정하는 데 반드시 신뢰할만한 관용구 는 &lt;em&gt;아닙니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="420dda2755911b0bdb93ee79ff62073e76ad6d16" translate="yes" xml:space="preserve">
          <source>To incorporate a new &lt;code&gt;DragSourceContext&lt;/code&gt; subclass, subclass &lt;code&gt;DragSource&lt;/code&gt; and override this method.</source>
          <target state="translated">새 &lt;code&gt;DragSourceContext&lt;/code&gt; 하위 클래스 를 통합하려면 DragSource를 하위 클래스로 &lt;code&gt;DragSource&lt;/code&gt; 메서드를 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="48cdf821a79e1d7eb2270bd4ff092652154a8722" translate="yes" xml:space="preserve">
          <source>To indicate that a task of unknown length is executing, you can put a progress bar into indeterminate mode. While the bar is in indeterminate mode, it animates constantly to show that work is occurring. As soon as you can determine the task's length and amount of progress, you should update the progress bar's value and switch it back to determinate mode.</source>
          <target state="translated">길이를 알 수없는 작업이 실행 중임을 나타 내기 위해 진행률 표시 줄을 미정 모드로 설정할 수 있습니다. 막대가 불확정 모드에있는 동안 작업이 진행되고 있음을 보여주기 위해 지속적으로 애니메이션됩니다. 작업의 길이와 진행 정도를 확인할 수있는 즉시 진행률 표시 줄의 값을 업데이트하고 결정 모드로 다시 전환해야합니다.</target>
        </trans-unit>
        <trans-unit id="09fd84430bb7e24aa792b7ad96e5b6fdd76e61a4" translate="yes" xml:space="preserve">
          <source>To indicate the root has changed, childIndices and children will be null.</source>
          <target state="translated">루트가 변경되었음을 나타 내기 위해 childIndices 및 children은 null이됩니다.</target>
        </trans-unit>
        <trans-unit id="b4be84618ead6d10538cc9ccc258161cb330d82f" translate="yes" xml:space="preserve">
          <source>To instantiate a &lt;code&gt;PKIXBuilderParameters&lt;/code&gt; object, an application must specify one or more</source>
          <target state="translated">&lt;code&gt;PKIXBuilderParameters&lt;/code&gt; 객체 를 인스턴스화하려면 응용 프로그램에서 하나 이상을 지정해야합니다</target>
        </trans-unit>
        <trans-unit id="a1248ff0d2cedefb6820edb5e4b125b407119479" translate="yes" xml:space="preserve">
          <source>To instantiate a &lt;code&gt;PKIXParameters&lt;/code&gt; object, an application must specify one or more</source>
          <target state="translated">&lt;code&gt;PKIXParameters&lt;/code&gt; 객체 를 인스턴스화하려면 응용 프로그램에서 하나 이상을 지정해야합니다</target>
        </trans-unit>
        <trans-unit id="e7a2a17113f40ab1a2b8b839f4be030b470dc7d9" translate="yes" xml:space="preserve">
          <source>To instantiate the new class, UnresolvedPermission assumes the class provides a zero, one, and/or two-argument constructor. The zero-argument constructor would be used to instantiate a permission without a name and without actions. A one-arg constructor is assumed to take a &lt;code&gt;String&lt;/code&gt; name as input, and a two-arg constructor is assumed to take a &lt;code&gt;String&lt;/code&gt; name and &lt;code&gt;String&lt;/code&gt; actions as input. UnresolvedPermission may invoke a constructor with a &lt;code&gt;null&lt;/code&gt; name and/or actions. If an appropriate permission constructor is not available, the UnresolvedPermission is ignored and the relevant permission will not be granted to executing code.</source>
          <target state="translated">새 클래스를 인스턴스화하기 위해 UnresolvedPermission은 클래스가 0, 1 및 / 또는 2 인수 생성자를 제공한다고 가정합니다. 인수없는 생성자는 이름과 동작없이 권한을 인스턴스화하는 데 사용됩니다. 1 개 인수 생성자는 &lt;code&gt;String&lt;/code&gt; 이름을 입력으로 사용하고 2 개 인수 생성자는 &lt;code&gt;String&lt;/code&gt; 이름과 &lt;code&gt;String&lt;/code&gt; 작업을 입력으로 사용 한다고 가정합니다 . UnresolvedPermission은 &lt;code&gt;null&lt;/code&gt; 이름 및 / 또는 작업 으로 생성자를 호출 할 수 있습니다 . 적절한 권한 생성자를 사용할 수 없으면 UnresolvedPermission이 무시되고 관련 권한이 코드 실행에 부여되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="59dd951cff89541b8bd5f93b0411b551c7798c0c" translate="yes" xml:space="preserve">
          <source>To interpret localized string representations of a floating-point value, use subclasses of &lt;a href=&quot;../text/numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">부동 소수점 값의 지역화 된 문자열 표현을 해석하려면 &lt;a href=&quot;../text/numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; 의&lt;/a&gt; 서브 클래스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4db3a57d60a5194adb7c2304e016a6c3b230f081" translate="yes" xml:space="preserve">
          <source>To issue a complete symbolic type descriptor, the compiler must also determine the return type (if polymorphic). This is based on a cast on the method invocation expression, if there is one, or else &lt;code&gt;Object&lt;/code&gt; if the invocation is an expression, or else &lt;code&gt;void&lt;/code&gt; if the invocation is a statement. The cast may be to a primitive type (but not &lt;code&gt;void&lt;/code&gt;).</source>
          <target state="translated">완전한 기호 유형 설명자를 발행하려면 컴파일러가 반환 유형도 결정해야합니다 (다형성 인 경우). 하나, 또는 다른이 경우는, 메소드 호출 식의 캐스트를 기반으로 &lt;code&gt;Object&lt;/code&gt; 호출이 식, 또는 다른 경우 &lt;code&gt;void&lt;/code&gt; 호출이 성명 경우. 캐스트는 기본 유형일 수 있습니다 (그러나 &lt;code&gt;void&lt;/code&gt; 가 아님).</target>
        </trans-unit>
        <trans-unit id="5466cc76778431e496f99d3381063b005b2172db" translate="yes" xml:space="preserve">
          <source>To issue a complete symbolic type descriptor, the compiler must also determine the return type. This is based on a cast on the method invocation expression, if there is one, or else &lt;code&gt;Object&lt;/code&gt; if the invocation is an expression or else &lt;code&gt;void&lt;/code&gt; if the invocation is a statement. The cast may be to a primitive type (but not &lt;code&gt;void&lt;/code&gt;).</source>
          <target state="translated">완전한 기호 유형 설명자를 발행하려면 컴파일러도 리턴 유형을 결정해야합니다. 이것은 메소드 호출 표현식 (있는 경우)에 대한 캐스트 또는 호출이 표현식 인 경우 &lt;code&gt;Object&lt;/code&gt; 또는 호출이 명령문 인 경우 &lt;code&gt;void&lt;/code&gt; 를 기반으로합니다. 캐스트는 기본 유형이 될 수 있지만 &lt;code&gt;void&lt;/code&gt; 는 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="aa22a0c21e50c88f222e2494533202bc0996e2a1" translate="yes" xml:space="preserve">
          <source>To issue a complete symbolic type descriptor, the compiler must also determine the return type. This is based on a cast on the method invocation expression, if there is one, or else &lt;code&gt;Object&lt;/code&gt; if the invocation is an expression, or else &lt;code&gt;void&lt;/code&gt; if the invocation is a statement. The cast may be to a primitive type (but not &lt;code&gt;void&lt;/code&gt;).</source>
          <target state="translated">완전한 기호 형식 설명자를 발행하려면 컴파일러에서 반환 형식도 결정해야합니다. 하나, 또는 다른이 경우는, 메소드 호출 식의 캐스트를 기반으로 &lt;code&gt;Object&lt;/code&gt; 호출이 식, 또는 다른 경우 &lt;code&gt;void&lt;/code&gt; 호출이 성명 경우. 캐스트는 기본 유형일 수 있습니다 (그러나 &lt;code&gt;void&lt;/code&gt; 가 아님).</target>
        </trans-unit>
        <trans-unit id="3862489804c9e4ccfb61d25cb12af67885cc894f" translate="yes" xml:space="preserve">
          <source>To iterate over the &lt;code&gt;true&lt;/code&gt; bits in a &lt;code&gt;BitSet&lt;/code&gt;, use the following loop:</source>
          <target state="translated">&lt;code&gt;BitSet&lt;/code&gt; 에서 &lt;code&gt;true&lt;/code&gt; 비트 를 반복하려면 다음 루프를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="32cbb9d1a2fb3260f1ec41175195b4ba0e499ea7" translate="yes" xml:space="preserve">
          <source>To learn what ports are available, you can retrieve port info objects through the &lt;a href=&quot;mixer#getSourceLineInfo()&quot;&gt;&lt;code&gt;getSourceLineInfo&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mixer#getTargetLineInfo()&quot;&gt;&lt;code&gt;getTargetLineInfo&lt;/code&gt;&lt;/a&gt; methods of the &lt;code&gt;Mixer&lt;/code&gt; interface. Instances of the &lt;code&gt;Port.Info&lt;/code&gt; class may also be constructed and used to obtain lines matching the parameters specified in the &lt;code&gt;Port.Info&lt;/code&gt; object.</source>
          <target state="translated">사용 가능한 포트를 알아 보려면 &lt;code&gt;Mixer&lt;/code&gt; 인터페이스 의 &lt;a href=&quot;mixer#getSourceLineInfo()&quot;&gt; &lt;code&gt;getSourceLineInfo&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;mixer#getTargetLineInfo()&quot;&gt; &lt;code&gt;getTargetLineInfo&lt;/code&gt; &lt;/a&gt; 메서드를 통해 포트 정보 개체를 검색 할 수 있습니다. &lt;code&gt;Port.Info&lt;/code&gt; 클래스의 인스턴스를 구성하여 &lt;code&gt;Port.Info&lt;/code&gt; 개체에 지정된 매개 변수와 일치하는 줄을 얻을 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7d94124009c8104d9400754da5bae70b65e77522" translate="yes" xml:space="preserve">
          <source>To learn what ports are available, you can retrieve port info objects through the &lt;code&gt;&lt;a href=&quot;mixer#getSourceLineInfo--&quot;&gt;&lt;code&gt;getSourceLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mixer#getTargetLineInfo--&quot;&gt;&lt;code&gt;getTargetLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; methods of the &lt;code&gt;Mixer&lt;/code&gt; interface. Instances of the &lt;code&gt;Port.Info&lt;/code&gt; class may also be constructed and used to obtain lines matching the parameters specified in the &lt;code&gt;Port.Info&lt;/code&gt; object.</source>
          <target state="translated">사용 가능한 포트를 배우기 위해 &lt;code&gt;Mixer&lt;/code&gt; 인터페이스 의 &lt;code&gt;&lt;a href=&quot;mixer#getSourceLineInfo--&quot;&gt;&lt;code&gt;getSourceLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mixer#getTargetLineInfo--&quot;&gt;&lt;code&gt;getTargetLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드를 통해 포트 정보 오브젝트를 검색 할 수 있습니다. &lt;code&gt;Port.Info&lt;/code&gt; 클래스의 인스턴스를 구성하여 &lt;code&gt;Port.Info&lt;/code&gt; 객체에 지정된 매개 변수와 일치하는 줄을 얻을 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cca5ea87ce09aec7665e06c31b2fdc7ff940f7d1" translate="yes" xml:space="preserve">
          <source>To locate an encoder for a given encoding name it defines a static factory method which iterates through the known and available providers, returning only when it has located a suitable encoder or has run out of providers.</source>
          <target state="translated">지정된 인코딩 이름의 인코더를 찾기 위해 알려진 인코더와 사용 가능한 제공자를 반복하는 정적 팩토리 메소드를 정의하여 적합한 인코더를 찾거나 제공자가 부족한 경우에만 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ac598dff30c7e6f4b3338e570c1a2ac571c32ca6" translate="yes" xml:space="preserve">
          <source>To logout the Subject, the caller calls the &lt;code&gt;logout&lt;/code&gt; method. As with the &lt;code&gt;login&lt;/code&gt; method, this &lt;code&gt;logout&lt;/code&gt; method invokes the &lt;code&gt;logout&lt;/code&gt; method for the configured modules.</source>
          <target state="translated">주제를 로그 아웃하기 위해 호출자는 &lt;code&gt;logout&lt;/code&gt; 메소드를 호출합니다 . 와 같이 &lt;code&gt;login&lt;/code&gt; 에있어서,이 &lt;code&gt;logout&lt;/code&gt; 방법은 호출 &lt;code&gt;logout&lt;/code&gt; 구성된 모듈을위한 방법.</target>
        </trans-unit>
        <trans-unit id="200a036ad4ef503032cd273e2682a3988e5db7e4" translate="yes" xml:space="preserve">
          <source>To maintain compatibility with applications that listen to key events but are not aware of input method events, the input method handling in stage 4 provides a compatibility mode for components that do not process input method events. For these components, the committed text is converted to keyTyped key events and processed in the key event pipeline starting at stage 3 instead of in the input method event pipeline.</source>
          <target state="translated">주요 이벤트를 수신하지만 입력 방법 이벤트를 인식하지 못하는 응용 프로그램과의 호환성을 유지하기 위해 4 단계의 입력 방법 처리는 입력 방법 이벤트를 처리하지 않는 구성 요소에 대한 호환성 모드를 제공합니다. 이러한 구성 요소의 경우 커밋 된 텍스트는 keyTyped 키 이벤트로 변환되고 입력 메서드 이벤트 파이프 라인 대신 3 단계에서 시작하는 키 이벤트 파이프 라인에서 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="a565dd907d36cc8d69fe9d44176d38b32a8e625f" translate="yes" xml:space="preserve">
          <source>To maintain the specified guarantees, default implementations of methods including &lt;a href=&quot;#putIfAbsent(K,V)&quot;&gt;&lt;code&gt;putIfAbsent(K, V)&lt;/code&gt;&lt;/a&gt; inherited from &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; must be overridden by implementations of this interface. Similarly, implementations of the collections returned by methods &lt;a href=&quot;../map#keySet()&quot;&gt;&lt;code&gt;Map.keySet()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../map#values()&quot;&gt;&lt;code&gt;Map.values()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../map#entrySet()&quot;&gt;&lt;code&gt;Map.entrySet()&lt;/code&gt;&lt;/a&gt; must override methods such as &lt;code&gt;removeIf&lt;/code&gt; when necessary to preserve atomicity guarantees.</source>
          <target state="translated">지정된 보증을 유지하려면 &lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 에서 상속 된 &lt;a href=&quot;#putIfAbsent(K,V)&quot;&gt; &lt;code&gt;putIfAbsent(K, V)&lt;/code&gt; &lt;/a&gt; 포함한 메서드의 기본 구현을이 인터페이스의 구현으로 재정의해야합니다. 마찬가지로, 모음의 구현 방법에 의해 리턴 &lt;a href=&quot;../map#keySet()&quot;&gt; &lt;code&gt;Map.keySet()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../map#values()&quot;&gt; &lt;code&gt;Map.values()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../map#entrySet()&quot;&gt; &lt;code&gt;Map.entrySet()&lt;/code&gt; &lt;/a&gt; 다음과 같은 방법을 무시해야 &lt;code&gt;removeIf&lt;/code&gt; 을 자성 보증을 유지하기 위해 필요한 경우.</target>
        </trans-unit>
        <trans-unit id="af0222657df4f703bd845c942bc994a362ebce7f" translate="yes" xml:space="preserve">
          <source>To make MBean implementation simple, the JMX API includes the notion of &lt;em&gt;Standard MBeans&lt;/em&gt;. A Standard MBean is one whose attributes and operations are deduced from a Java interface using certain naming patterns, similar to those used by JavaBeans&amp;trade;. For example, consider an interface like this:</source>
          <target state="translated">MBean 구현을 간단하게 만들기 위해 JMX API에는 &lt;em&gt;Standard MBeans&lt;/em&gt; 개념이 포함되어 있습니다. Standard MBean은 JavaBeans &amp;trade;에서 사용하는 것과 유사한 특정 이름 지정 패턴을 사용하여 Java 인터페이스에서 속성 및 작업을 추론하는 MBean입니다. 예를 들어 다음과 같은 인터페이스를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="8370a551b9ecf25330a7b4809b220f9b66585147" translate="yes" xml:space="preserve">
          <source>To make MBean implementation simple, the JMX API includes the notion of &lt;em&gt;Standard MBeans&lt;/em&gt;. A Standard MBean is one whose attributes and operations are deduced from a Java interface using certain naming patterns, similar to those used by JavaBeans&lt;sup&gt;TM&lt;/sup&gt;. For example, consider an interface like this:</source>
          <target state="translated">MBean 구현을 단순하게하기 위해 JMX API에는 &lt;em&gt;표준 MBean&lt;/em&gt; 개념이 포함되어 있습니다. 표준 MBean은 JavaBeans &lt;sup&gt;TM에서&lt;/sup&gt; 사용되는 것과 유사한 특정 이름 지정 패턴을 사용하여 Java 인터페이스에서 속성과 조작을 추론하는 것 입니다. 예를 들어 다음과 같은 인터페이스를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="8dc4298fbcae4cb70b048b2b3ee0e77d114153ad" translate="yes" xml:space="preserve">
          <source>To make each &lt;code&gt;Font&lt;/code&gt; available to Font constructors it must be registered in the &lt;code&gt;GraphicsEnvironment&lt;/code&gt; by calling &lt;a href=&quot;graphicsenvironment#registerFont(java.awt.Font)&quot;&gt;&lt;code&gt;registerFont(Font)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Font 생성자에서 각 &lt;code&gt;Font&lt;/code&gt; 를 사용할 수 있도록하려면 &lt;a href=&quot;graphicsenvironment#registerFont(java.awt.Font)&quot;&gt; &lt;code&gt;registerFont(Font)&lt;/code&gt; &lt;/a&gt; 호출 하여 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 에 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2be6ccab246702446d76d77301b68cc2bd7b3c8d" translate="yes" xml:space="preserve">
          <source>To make edit-saves automatic whenever the user changes their position in the tree, use &lt;a href=&quot;#setInvokesStopCellEditing(boolean)&quot;&gt;&lt;code&gt;setInvokesStopCellEditing(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자가 트리에서 위치를 변경할 때마다 편집-저장을 자동으로 만들려면 &lt;a href=&quot;#setInvokesStopCellEditing(boolean)&quot;&gt; &lt;code&gt;setInvokesStopCellEditing(boolean)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fd942e71c8bc73a626886336a4686f9ee992b69b" translate="yes" xml:space="preserve">
          <source>To make it easier to navigate a &lt;code&gt;SyncResolver&lt;/code&gt; object, especially when there are large numbers of rows with no conflicts, the &lt;code&gt;SyncResolver&lt;/code&gt; interface defines the methods &lt;code&gt;nextConflict&lt;/code&gt; and &lt;code&gt;previousConflict&lt;/code&gt;, which move only to rows that contain at least one conflict value. Then an application can call the &lt;code&gt;SyncResolver&lt;/code&gt; method &lt;code&gt;getConflictValue&lt;/code&gt;, supplying it with the column number, to get the conflict value itself. The code fragment in the next section gives an example.</source>
          <target state="translated">특히 충돌이없는 행이 많은 경우 &lt;code&gt;SyncResolver&lt;/code&gt; 객체를 보다 쉽게 ​​탐색 할 수 있도록 &lt;code&gt;SyncResolver&lt;/code&gt; 인터페이스는 하나 이상의 충돌 값을 포함하는 행으로 만 이동하는 &lt;code&gt;nextConflict&lt;/code&gt; 및 &lt;code&gt;previousConflict&lt;/code&gt; 메서드를 정의합니다 . 그런 다음 애플리케이션은 &lt;code&gt;SyncResolver&lt;/code&gt; 메소드 &lt;code&gt;getConflictValue&lt;/code&gt; 를 호출하여 열 번호를 제공하여 충돌 값 자체를 가져올 수 있습니다. 다음 섹션의 코드 조각은 예제를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1ea59fd5e24ed5e053aa6040db4ae63cd06cfd3d" translate="yes" xml:space="preserve">
          <source>To make the &lt;code&gt;Font&lt;/code&gt; available to Font constructors the returned &lt;code&gt;Font&lt;/code&gt; must be registered in the &lt;code&gt;GraphicsEnvironment&lt;/code&gt; by calling &lt;a href=&quot;graphicsenvironment#registerFont(java.awt.Font)&quot;&gt;&lt;code&gt;registerFont(Font)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Font 생성자 에서 &lt;code&gt;Font&lt;/code&gt; 를 사용할 수 있게하려면 반환 된 &lt;code&gt;Font&lt;/code&gt; 를 &lt;a href=&quot;graphicsenvironment#registerFont(java.awt.Font)&quot;&gt; &lt;code&gt;registerFont(Font)&lt;/code&gt; &lt;/a&gt; 호출 하여 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 에 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1a451ca1030952d13ab8c6eccc71c2d4c0d4e7e3" translate="yes" xml:space="preserve">
          <source>To make this concrete, suppose &lt;code&gt;list&lt;/code&gt; comprises &lt;code&gt;[a, b, c, d, e]&lt;/code&gt;. To move the element at index &lt;code&gt;1&lt;/code&gt; (&lt;code&gt;b&lt;/code&gt;) forward two positions, perform the following invocation:</source>
          <target state="translated">이를 구체적으로하기 위해, &lt;code&gt;list&lt;/code&gt; 가 &lt;code&gt;[a, b, c, d, e]&lt;/code&gt; 포함 한다고 가정하자 . 인덱스 &lt;code&gt;1&lt;/code&gt; ( &lt;code&gt;b&lt;/code&gt; ) 의 요소를 두 위치 앞으로 이동하려면 다음 호출을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="e93fddb753e32a2945a92ab0e6c73ca71fd6b594" translate="yes" xml:space="preserve">
          <source>To maximize the usefulness of this kit, a great deal of effort has gone into making it extendable. These are some of the features.</source>
          <target state="translated">이 키트의 유용성을 극대화하기 위해 확장 가능하게 만드는 데 많은 노력을 기울였습니다. 다음은 일부 기능입니다.</target>
        </trans-unit>
        <trans-unit id="b4c58cb2bc69f7e6c96cfbf89e008c558629746d" translate="yes" xml:space="preserve">
          <source>To minimize the resources used by a bean, the classes used by bean editors are loaded only when the bean is being edited. They are not needed while the bean is running in an application and therefore not loaded. This information is kept in what's called a bean-info (see &lt;a href=&quot;beaninfo&quot;&gt;&lt;code&gt;BeanInfo&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Bean이 사용하는 자원을 최소화하기 위해 Bean 편집기가 사용하는 클래스는 Bean을 편집 할 때만로드됩니다. Bean이 응용 프로그램에서 실행 중일 때 필요하지 않으므로로드되지 않습니다. 이 정보는 bean-info ( &lt;a href=&quot;beaninfo&quot;&gt; &lt;code&gt;BeanInfo&lt;/code&gt; &lt;/a&gt; 참조 )에 보관됩니다.</target>
        </trans-unit>
        <trans-unit id="001ebdf96f05e6d648887ada3f8bd648fe04f7a1" translate="yes" xml:space="preserve">
          <source>To modify the Principals Set, the caller must have &lt;code&gt;AuthPermission(&quot;modifyPrincipals&quot;)&lt;/code&gt;. To modify the public credential Set, the caller must have &lt;code&gt;AuthPermission(&quot;modifyPublicCredentials&quot;)&lt;/code&gt;. To modify the private credential Set, the caller must have &lt;code&gt;AuthPermission(&quot;modifyPrivateCredentials&quot;)&lt;/code&gt;.</source>
          <target state="translated">프린시 펄 세트를 수정하려면 호출자에게 &lt;code&gt;AuthPermission(&quot;modifyPrincipals&quot;)&lt;/code&gt; 이 있어야합니다 . 공개 자격 증명 세트를 수정하려면 호출자에게 &lt;code&gt;AuthPermission(&quot;modifyPublicCredentials&quot;)&lt;/code&gt; 가 있어야합니다 . 개인 자격 증명 세트를 수정하려면 호출자에게 &lt;code&gt;AuthPermission(&quot;modifyPrivateCredentials&quot;)&lt;/code&gt; 가 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="747d9090669e7fe96070fad66923fdb34ea9838f" translate="yes" xml:space="preserve">
          <source>To monitor a particular job see &lt;a href=&quot;printjoblistener&quot;&gt;&lt;code&gt;PrintJobListener&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;printjobattributelistener&quot;&gt;&lt;code&gt;PrintJobAttributeListener&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">특정 작업을 모니터하려면 &lt;a href=&quot;printjoblistener&quot;&gt; &lt;code&gt;PrintJobListener&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;printjobattributelistener&quot;&gt; &lt;code&gt;PrintJobAttributeListener&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5089e9351790c46132512de82fa88484edb534b8" translate="yes" xml:space="preserve">
          <source>To move more than one element forward, increase the absolute value of the rotation distance. To move elements backward, use a positive shift distance.</source>
          <target state="translated">둘 이상의 요소를 앞으로 이동하려면 회전 거리의 절대 값을 늘리십시오. 요소를 뒤로 이동하려면 양의 이동 거리를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cb3503b85c97282f7e6f2c755c071c992dea3dbf" translate="yes" xml:space="preserve">
          <source>To obtain a &lt;a href=&quot;saxtransformerfactory&quot;&gt;&lt;code&gt;SAXTransformerFactory&lt;/code&gt;&lt;/a&gt;, the caller must cast the &lt;a href=&quot;../transformerfactory&quot;&gt;&lt;code&gt;TransformerFactory&lt;/code&gt;&lt;/a&gt; instance returned from &lt;a href=&quot;../transformerfactory#newInstance()&quot;&gt;&lt;code&gt;TransformerFactory.newInstance()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">구하려면 &lt;a href=&quot;saxtransformerfactory&quot;&gt; &lt;code&gt;SAXTransformerFactory&lt;/code&gt; &lt;/a&gt; , 호출자는 캐스트 할 필요가 &lt;a href=&quot;../transformerfactory&quot;&gt; &lt;code&gt;TransformerFactory&lt;/code&gt; &lt;/a&gt; 에서 반환 된 인스턴스를 &lt;a href=&quot;../transformerfactory#newInstance()&quot;&gt; &lt;code&gt;TransformerFactory.newInstance()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3ca70a679375afb9e5c1facb8c4a73f234fc0942" translate="yes" xml:space="preserve">
          <source>To obtain a &lt;code&gt;NumberFormat&lt;/code&gt; for a specific locale, including the default locale, call one of &lt;code&gt;NumberFormat&lt;/code&gt;'s factory methods, such as &lt;code&gt;getInstance()&lt;/code&gt;. In general, do not call the &lt;code&gt;DecimalFormat&lt;/code&gt; constructors directly, since the &lt;code&gt;NumberFormat&lt;/code&gt; factory methods may return subclasses other than &lt;code&gt;DecimalFormat&lt;/code&gt;. If you need to customize the format object, do something like this:</source>
          <target state="translated">기본 로케일을 포함하여 특정 로케일에 대한 &lt;code&gt;NumberFormat&lt;/code&gt; 을 얻으려면 &lt;code&gt;getInstance()&lt;/code&gt; 와 같은 &lt;code&gt;NumberFormat&lt;/code&gt; 의 팩토리 메소드 중 하나를 호출하십시오 . &lt;code&gt;NumberFormat&lt;/code&gt; 팩토리 메소드는 &lt;code&gt;DecimalFormat&lt;/code&gt; 이외의 서브 클래스를 돌려 줄 가능성이 있기 때문에 , 일반적으로 &lt;code&gt;DecimalFormat&lt;/code&gt; 생성자를 직접 호출하지 말아주세요 . 형식 객체를 사용자 정의해야하는 경우 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="ae8a17b5ce812b5ceaad690b87f673999972dec5" translate="yes" xml:space="preserve">
          <source>To obtain a pure Julian calendar, set the change date to &lt;code&gt;Date(Long.MAX_VALUE)&lt;/code&gt;. To obtain a pure Gregorian calendar, set the change date to &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt;.</source>
          <target state="translated">순수 Julian 캘린더를 얻으려면 변경 날짜를 &lt;code&gt;Date(Long.MAX_VALUE)&lt;/code&gt; 로 설정하십시오 . 순수한 그레고리력을 얻으려면 변경 날짜를 &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="20e33629fe48c53be57864a0404e40b70573533b" translate="yes" xml:space="preserve">
          <source>To obtain a service ticket to initiate a context with the &quot;host&quot; service the permission is constructed as follows:</source>
          <target state="translated">&quot;호스트&quot;서비스로 컨텍스트를 시작하는 서비스 티켓을 얻으려면 다음과 같이 권한이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="4183bcd6b7f5e700ca506552b7f6e4893d309d35" translate="yes" xml:space="preserve">
          <source>To obtain standard formats for a given locale, use the factory methods on NumberFormat such as getInstance or getCurrencyInstance. If you need only minor adjustments to a standard format, you can modify the format returned by a NumberFormat factory method.</source>
          <target state="translated">지정된 로케일의 표준 형식을 얻으려면 getInstance 또는 getCurrencyInstance와 같은 NumberFormat의 팩토리 메소드를 사용하십시오. 표준 형식을 약간만 조정해야하는 경우 NumberFormat 팩토리 메소드에서 리턴 한 형식을 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bac3c8ec9809edfd530be7395e55daf334bf4e69" translate="yes" xml:space="preserve">
          <source>To obtain standard formats for a given locale, use the factory methods on NumberFormat such as getNumberInstance. These factories will return the most appropriate sub-class of NumberFormat for a given locale.</source>
          <target state="translated">지정된 로케일의 표준 형식을 얻으려면 getNumberInstance와 같은 NumberFormat의 팩토리 메소드를 사용하십시오. 이 팩토리는 지정된 로케일에 대해 가장 적합한 NumberFormat 서브 클래스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1e223b0a31093d4eb61af1c92247a8a8a470a822" translate="yes" xml:space="preserve">
          <source>To obtain the current position in microseconds, use the &lt;a href=&quot;dataline#getMicrosecondPosition()&quot;&gt;&lt;code&gt;getMicrosecondPosition&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;DataLine&lt;/code&gt;.</source>
          <target state="translated">마이크로 초 단위의 현재 위치를 얻으려면 &lt;code&gt;DataLine&lt;/code&gt; 의 &lt;a href=&quot;dataline#getMicrosecondPosition()&quot;&gt; &lt;code&gt;getMicrosecondPosition&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="62bf607232950c6e5e7025ae2f04f0f1bad57b89" translate="yes" xml:space="preserve">
          <source>To obtain the current position in microseconds, use the &lt;code&gt;&lt;a href=&quot;dataline#getMicrosecondPosition--&quot;&gt;&lt;code&gt;getMicrosecondPosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;DataLine&lt;/code&gt;.</source>
          <target state="translated">마이크로 초 단위로 현재 위치를 얻으려면 &lt;code&gt;DataLine&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;dataline#getMicrosecondPosition--&quot;&gt;&lt;code&gt;getMicrosecondPosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff87a331546e8ce98e59d719dafed97e11e78b05" translate="yes" xml:space="preserve">
          <source>To obtain the current position in sample frames, use the &lt;a href=&quot;dataline#getFramePosition()&quot;&gt;&lt;code&gt;getFramePosition&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;DataLine&lt;/code&gt;.</source>
          <target state="translated">샘플 프레임에서 현재 위치를 얻으려면 &lt;code&gt;DataLine&lt;/code&gt; 의 &lt;a href=&quot;dataline#getFramePosition()&quot;&gt; &lt;code&gt;getFramePosition&lt;/code&gt; &lt;/a&gt; 메서드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6363ba55df8358f378be9461ccc703149c5241ef" translate="yes" xml:space="preserve">
          <source>To obtain the current position in sample frames, use the &lt;code&gt;&lt;a href=&quot;dataline#getFramePosition--&quot;&gt;&lt;code&gt;getFramePosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;DataLine&lt;/code&gt;.</source>
          <target state="translated">샘플 프레임에서 현재 위치를 얻으려면 &lt;code&gt;DataLine&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;dataline#getFramePosition--&quot;&gt;&lt;code&gt;getFramePosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6430dab5386c8f3fc0e0cf226db51658d927334" translate="yes" xml:space="preserve">
          <source>To obtain the later offset during an overlap, call &lt;a href=&quot;chronozoneddatetime#withLaterOffsetAtOverlap()&quot;&gt;&lt;code&gt;ChronoZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">겹치는 동안 이후 오프셋을 얻으려면 이 메서드의 결과에 대해 &lt;a href=&quot;chronozoneddatetime#withLaterOffsetAtOverlap()&quot;&gt; &lt;code&gt;ChronoZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; 을 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="421ed1485a6e75b37273583056082a34fe2d7c71" translate="yes" xml:space="preserve">
          <source>To obtain the later offset during an overlap, call &lt;a href=&quot;chronozoneddatetime#withLaterOffsetAtOverlap--&quot;&gt;&lt;code&gt;ChronoZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">겹치는 동안 이후 오프셋을 얻으려면 이 메서드의 결과에서 &lt;a href=&quot;chronozoneddatetime#withLaterOffsetAtOverlap--&quot;&gt; &lt;code&gt;ChronoZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; 을 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a961efe4d884450a5d578beac9bf433224d6f992" translate="yes" xml:space="preserve">
          <source>To obtain the later offset during an overlap, call &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap()&quot;&gt;&lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; on the result of this method. To throw an exception when there is a gap or overlap, use &lt;a href=&quot;zoneddatetime#ofStrict(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt;&lt;code&gt;ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">오버랩 중에 나중에 오프셋을 얻으려면 이 메서드의 결과에 대해 &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap()&quot;&gt; &lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; 을 호출 합니다. 간격 또는 겹침이있을 때 예외를 발생 시키려면 &lt;a href=&quot;zoneddatetime#ofStrict(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt; &lt;code&gt;ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a76d6f4b82757c761a4c955f850c236f16199c83" translate="yes" xml:space="preserve">
          <source>To obtain the later offset during an overlap, call &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt;&lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; on the result of this method. To throw an exception when there is a gap or overlap, use &lt;a href=&quot;zoneddatetime#ofStrict-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt;&lt;code&gt;ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">겹치는 동안 이후 오프셋을 얻으려면 이 메서드의 결과에서 &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt; &lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; 을 호출 하십시오 . 간격이나 겹침이있을 때 예외를 발생 시키려면 &lt;a href=&quot;zoneddatetime#ofStrict-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt; &lt;code&gt;ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9c13765230d6cb4336c7100851cd30554f8e01ac" translate="yes" xml:space="preserve">
          <source>To perform a computation, stream &lt;a href=&quot;package-summary#StreamOps&quot;&gt;operations&lt;/a&gt; are composed into a &lt;em&gt;stream pipeline&lt;/em&gt;. A stream pipeline consists of a source (which might be an array, a collection, a generator function, an I/O channel, etc), zero or more &lt;em&gt;intermediate operations&lt;/em&gt; (which transform a stream into another stream, such as &lt;a href=&quot;#filter(java.util.function.Predicate)&quot;&gt;&lt;code&gt;filter(Predicate)&lt;/code&gt;&lt;/a&gt;), and a &lt;em&gt;terminal operation&lt;/em&gt; (which produces a result or side-effect, such as &lt;a href=&quot;#count()&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#forEach(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEach(Consumer)&lt;/code&gt;&lt;/a&gt;). Streams are lazy; computation on the source data is only performed when the terminal operation is initiated, and source elements are consumed only as needed.</source>
          <target state="translated">계산을 수행하기 위해 스트림 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;작업&lt;/a&gt; 이 &lt;em&gt;스트림 파이프 라인&lt;/em&gt; 으로 구성됩니다 . 스트림 파이프 라인은 소스 (배열, 컬렉션, 생성기 함수, I / O 채널 등일 수 있음), 0 개 이상의 &lt;em&gt;중간 작업&lt;/em&gt; (스트림을 &lt;a href=&quot;#filter(java.util.function.Predicate)&quot;&gt; &lt;code&gt;filter(Predicate)&lt;/code&gt; &lt;/a&gt; 과 같은 다른 스트림으로 변환 )으로 구성됩니다. ) 및 &lt;em&gt;터미널 작업&lt;/em&gt; ( &lt;a href=&quot;#count()&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#forEach(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEach(Consumer)&lt;/code&gt; &lt;/a&gt; 와 같은 결과 또는 부작용을 생성 함 ). 스트림은 게으르다. 소스 데이터에 대한 계산은 터미널 작업이 시작될 때만 수행되며 소스 요소는 필요한 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="955cdb74994f65d4a739b1a149a26b028d610190" translate="yes" xml:space="preserve">
          <source>To perform a computation, stream &lt;a href=&quot;package-summary#StreamOps&quot;&gt;operations&lt;/a&gt; are composed into a &lt;em&gt;stream pipeline&lt;/em&gt;. A stream pipeline consists of a source (which might be an array, a collection, a generator function, an I/O channel, etc), zero or more &lt;em&gt;intermediate operations&lt;/em&gt; (which transform a stream into another stream, such as &lt;a href=&quot;stream#filter-java.util.function.Predicate-&quot;&gt;&lt;code&gt;filter(Predicate)&lt;/code&gt;&lt;/a&gt;), and a &lt;em&gt;terminal operation&lt;/em&gt; (which produces a result or side-effect, such as &lt;a href=&quot;stream#count--&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stream#forEach-java.util.function.Consumer-&quot;&gt;&lt;code&gt;forEach(Consumer)&lt;/code&gt;&lt;/a&gt;). Streams are lazy; computation on the source data is only performed when the terminal operation is initiated, and source elements are consumed only as needed.</source>
          <target state="translated">계산을 수행하기 위해 스트림 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;작업&lt;/a&gt; 은 &lt;em&gt;스트림 파이프 라인&lt;/em&gt; 으로 구성됩니다 . 스트림 파이프 라인은 소스 (배열, 수집, 생성기 함수, I / O 채널 등), 0 개 이상의 &lt;em&gt;중간 작업&lt;/em&gt; (스트림 (예 : &lt;a href=&quot;stream#filter-java.util.function.Predicate-&quot;&gt; &lt;code&gt;filter(Predicate)&lt;/code&gt; &lt;/a&gt; 과 같은 스트림을 다른 스트림으로 변환 )으로 구성됩니다. ) 및 &lt;em&gt;터미널 작업&lt;/em&gt; ( &lt;a href=&quot;stream#count--&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;stream#forEach-java.util.function.Consumer-&quot;&gt; &lt;code&gt;forEach(Consumer)&lt;/code&gt; &lt;/a&gt; 과 같은 결과 또는 부작용을 생성 함 ). 시냇물은 게으르다. 소스 데이터에 대한 계산은 터미널 작업이 시작될 때만 수행되며 소스 요소는 필요한 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f24477df6a8f7d518c4250334cd224fae9b1651e" translate="yes" xml:space="preserve">
          <source>To permit the discovery of additional chronologies, the &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; is used. A file must be added to the &lt;code&gt;META-INF/services&lt;/code&gt; directory with the name 'java.time.chrono.Chronology' listing the implementation classes. See the ServiceLoader for more details on service loading. For lookup by id or calendarType, the system provided calendars are found first followed by application provided calendars.</source>
          <target state="translated">추가 연대를 발견 할 수 있도록 &lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; 가 사용됩니다. 구현 클래스를 나열하는 이름이 'java.time.chrono.Chronology'인 &lt;code&gt;META-INF/services&lt;/code&gt; 디렉토리에 파일을 추가해야합니다 . 서비스로드에 대한 자세한 내용은 ServiceLoader를 참조하십시오. id 또는 calendarType으로 조회 할 경우 시스템 제공 캘린더가 먼저 찾은 다음 애플리케이션 제공 캘린더가 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="e20e16a6bc01bfb3a045c27d84b3fd5f5b87c088" translate="yes" xml:space="preserve">
          <source>To preserve optimization opportunities this method binds each stream to its source and accepts only two streams as parameters. For example, the exact size of the concatenated stream source can be computed if the exact size of each input stream source is known. To concatenate more streams without binding, or without nested calls to this method, try creating a stream of streams and flat-mapping with the identity function, for example:</source>
          <target state="translated">최적화 기회를 보존하기 위해이 방법은 각 스트림을 소스에 바인딩하고 매개 변수로 두 개의 스트림 만 허용합니다. 예를 들어, 각 입력 스트림 소스의 정확한 크기를 알고있는 경우 연결된 스트림 소스의 정확한 크기를 계산할 수 있습니다. 바인딩없이 또는이 메서드에 대한 중첩 된 호출없이 더 많은 스트림을 연결하려면 다음과 같이 ID 함수를 사용하여 스트림 스트림 및 플랫 매핑을 만들어보십시오.</target>
        </trans-unit>
        <trans-unit id="f214719abbe3a0f490a16da532d965a4ed7ccf8b" translate="yes" xml:space="preserve">
          <source>To prevent man-in-the-middle attacks, hostname checks can be done to verify that the hostname in an end-entity certificate matches the targeted hostname. TLS does not require such checks, but some protocols over TLS (such as HTTPS) do. In earlier versions of the JDK, the certificate chain checks were done at the SSL/TLS layer, and the hostname verification checks were done at the layer over TLS. This class allows for the checking to be done during a single call to this class.</source>
          <target state="translated">중간자 (man-in-the-middle) 공격을 방지하기 위해 엔드 엔티티 인증서의 호스트 이름이 대상 호스트 이름과 일치하는지 확인하기 위해 호스트 이름 검사를 수행 할 수 있습니다. TLS에는 이러한 검사가 필요하지 않지만 TLS를 통한 일부 프로토콜 (예 : HTTPS)에는 필요합니다. JDK의 이전 버전에서는 인증서 체인 검사가 SSL / TLS 계층에서 수행되었으며 호스트 이름 확인 검사가 TLS를 통해 계층에서 수행되었습니다. 이 클래스를 사용하면이 클래스를 한 번 호출하는 동안 검사를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a7964f839fde9c329bbebbe3ef6c39e9309fba2" translate="yes" xml:space="preserve">
          <source>To prevent man-in-the-middle attacks, hostname checks can be done to verify that the hostname in an end-entity certificate matches the targeted hostname. TLS/DTLS does not require such checks, but some protocols over TLS/DTLS (such as HTTPS) do. In earlier versions of the JDK, the certificate chain checks were done at the SSL/TLS/DTLS layer, and the hostname verification checks were done at the layer over TLS/DTLS. This class allows for the checking to be done during a single call to this class.</source>
          <target state="translated">man-in-the-middle 공격을 방지하기 위해 호스트 이름 검사를 수행하여 최종 엔터티 인증서의 호스트 이름이 대상 호스트 이름과 일치하는지 확인할 수 있습니다. TLS / DTLS에는 이러한 검사가 필요하지 않지만 TLS / DTLS를 통한 일부 프로토콜 (예 : HTTPS)은 필요합니다. 이전 버전의 JDK에서 인증서 체인 검사는 SSL / TLS / DTLS 계층에서 수행되었으며 호스트 이름 확인 검사는 TLS / DTLS를 통해 계층에서 수행되었습니다. 이 클래스를 사용하면이 클래스에 대한 단일 호출 중에 검사를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32759b75b7b379af9cef519bb934c3cedf6194e3" translate="yes" xml:space="preserve">
          <source>To produce a view of the document that has entity references expanded and does not expose the entity reference node itself, use the &lt;code&gt;whatToShow&lt;/code&gt; flags to hide the entity reference node and set &lt;code&gt;expandEntityReferences&lt;/code&gt; to true when creating the &lt;code&gt;NodeIterator&lt;/code&gt;. To produce a view of the document that has entity reference nodes but no entity expansion, use the &lt;code&gt;whatToShow&lt;/code&gt; flags to show the entity reference node and set &lt;code&gt;expandEntityReferences&lt;/code&gt; to false.</source>
          <target state="translated">엔티티 참조가 확장되고 엔티티 참조 노드 자체를 노출하지 않는 문서의보기를 생성하려면 &lt;code&gt;whatToShow&lt;/code&gt; 플래그를 사용 하여 엔티티 참조 노드를 숨기고 &lt;code&gt;NodeIterator&lt;/code&gt; 를 만들 때 &lt;code&gt;expandEntityReferences&lt;/code&gt; 를 true로 설정 합니다 . 엔티티 참조 노드가 있지만 엔티티 확장이없는 문서의보기를 생성하려면 &lt;code&gt;whatToShow&lt;/code&gt; 플래그를 사용 하여 엔티티 참조 노드를 표시하고 &lt;code&gt;expandEntityReferences&lt;/code&gt; 를 false로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="c08e589fde0cdd5f5f74ea9ccac4de62b52fc67d" translate="yes" xml:space="preserve">
          <source>To produce a view of the document that has entity references expanded and does not expose the entity reference node itself, use the &lt;code&gt;whatToShow&lt;/code&gt; flags to hide the entity reference node and set &lt;code&gt;expandEntityReferences&lt;/code&gt; to true when creating the &lt;code&gt;TreeWalker&lt;/code&gt;. To produce a view of the document that has entity reference nodes but no entity expansion, use the &lt;code&gt;whatToShow&lt;/code&gt; flags to show the entity reference node and set &lt;code&gt;expandEntityReferences&lt;/code&gt; to false.</source>
          <target state="translated">엔티티 참조가 확장되고 엔티티 참조 노드 자체를 노출하지 않는 문서의보기를 생성하려면 &lt;code&gt;whatToShow&lt;/code&gt; 플래그를 사용 하여 엔티티 참조 노드를 숨기고 &lt;code&gt;TreeWalker&lt;/code&gt; 를 만들 때 &lt;code&gt;expandEntityReferences&lt;/code&gt; 를 true로 설정 합니다 . 엔티티 참조 노드가 있지만 엔티티 확장이없는 문서의보기를 생성하려면 &lt;code&gt;whatToShow&lt;/code&gt; 플래그를 사용 하여 엔티티 참조 노드를 표시하고 &lt;code&gt;expandEntityReferences&lt;/code&gt; 를 false로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="d933d1cf5a699b5b72fcdb8c2df4420bbc6bedf4" translate="yes" xml:space="preserve">
          <source>To properly update the logging configuration, use the &lt;a href=&quot;#updateConfiguration(java.util.function.Function)&quot;&gt;&lt;code&gt;updateConfiguration(java.util.function.Function)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#updateConfiguration(java.io.InputStream,java.util.function.Function)&quot;&gt;&lt;code&gt;updateConfiguration(java.io.InputStream, java.util.function.Function)&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="translated">로깅 구성을 올바르게 업데이트하려면 대신 &lt;a href=&quot;#updateConfiguration(java.util.function.Function)&quot;&gt; &lt;code&gt;updateConfiguration(java.util.function.Function)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#updateConfiguration(java.io.InputStream,java.util.function.Function)&quot;&gt; &lt;code&gt;updateConfiguration(java.io.InputStream, java.util.function.Function)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="399d941ce49c9a5bc658465a614e310c74442731" translate="yes" xml:space="preserve">
          <source>To properly update the logging configuration, use the &lt;a href=&quot;#updateConfiguration(java.util.function.Function)&quot;&gt;&lt;code&gt;updateConfiguration(java.util.function.Function)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#updateConfiguration(java.io.InputStream,java.util.function.Function)&quot;&gt;&lt;code&gt;updateConfiguration(java.io.InputStream, java.util.function.Function)&lt;/code&gt;&lt;/a&gt; methods instead.</source>
          <target state="translated">로깅 구성을 올바르게 업데이트하려면 대신 &lt;a href=&quot;#updateConfiguration(java.util.function.Function)&quot;&gt; &lt;code&gt;updateConfiguration(java.util.function.Function)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#updateConfiguration(java.io.InputStream,java.util.function.Function)&quot;&gt; &lt;code&gt;updateConfiguration(java.io.InputStream, java.util.function.Function)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8c0f2cbf694f3313c16fa7613b5e6dd577e4074f" translate="yes" xml:space="preserve">
          <source>To provide a specific keystore type:</source>
          <target state="translated">특정 키 저장소 유형을 제공하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="06444bab1b7f00b33dec7e627e504fcc33b7cf1a" translate="yes" xml:space="preserve">
          <source>To provide concrete classes for the user, the API defines specializations of the interfaces found at the root level. These interfaces are found in &lt;a href=&quot;sax/package-summary&quot;&gt;&lt;code&gt;javax.xml.transform.sax&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dom/package-summary&quot;&gt;&lt;code&gt;javax.xml.transform.dom&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stax/package-summary&quot;&gt;&lt;code&gt;javax.xml.transform.stax&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;stream/package-summary&quot;&gt;&lt;code&gt;javax.xml.transform.stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자에게 구체적인 클래스를 제공하기 위해 API는 루트 수준에서 찾은 인터페이스의 전문화를 정의합니다. 이러한 인터페이스는 &lt;a href=&quot;sax/package-summary&quot;&gt; &lt;code&gt;javax.xml.transform.sax&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;dom/package-summary&quot;&gt; &lt;code&gt;javax.xml.transform.dom&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;stax/package-summary&quot;&gt; &lt;code&gt;javax.xml.transform.stax&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;stream/package-summary&quot;&gt; &lt;code&gt;javax.xml.transform.stream&lt;/code&gt; 에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7219f8cfdecc44e00d38199242b9ed5d1ad8cd2" translate="yes" xml:space="preserve">
          <source>To provide customized error handling, implement this interface and use the &lt;code&gt;setErrorListener&lt;/code&gt; method to register an instance of the implementation with the &lt;a href=&quot;transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자 정의 된 오류 처리를 제공하려면이 인터페이스를 구현하고 &lt;code&gt;setErrorListener&lt;/code&gt; 메소드를 사용 하여 구현 인스턴스를 &lt;a href=&quot;transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; 에 등록하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6bc35adcddbc8519fc0eb13cd050998eeaa0c101" translate="yes" xml:space="preserve">
          <source>To provide customized error handling, implement this interface and use the &lt;code&gt;setErrorListener&lt;/code&gt; method to register an instance of the implementation with the &lt;a href=&quot;transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Transformer&lt;/code&gt; then reports all errors and warnings through this interface.</source>
          <target state="translated">사용자 정의 된 오류 처리를 제공하려면이 인터페이스를 구현하고 &lt;code&gt;setErrorListener&lt;/code&gt; 메소드를 사용 하여 구현 인스턴스를 &lt;a href=&quot;transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; 에 등록하십시오&lt;/a&gt; . &lt;code&gt;Transformer&lt;/code&gt; 다음이 인터페이스를 통해 모든 오류와 경고를보고합니다.</target>
        </trans-unit>
        <trans-unit id="4d9625ba45405bf286365f8f2c76772c2e50d084" translate="yes" xml:space="preserve">
          <source>To quantify the color characteristics of a device such as a printer or monitor, measurements of XYZ values for particular device colors are typically made. For purposes of this discussion, the term device XYZ values is used to mean the XYZ values that would be measured from device colors using current CIE recommended practices.</source>
          <target state="translated">프린터 또는 모니터와 같은 장치의 색상 특성을 정량화하기 위해 일반적으로 특정 장치 색상에 대한 XYZ 값을 측정합니다. 이 논의의 목적을 위해 장치 XYZ 값이라는 용어는 현재 CIE 권장 방법을 사용하여 장치 색상에서 측정되는 XYZ 값을 의미하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f2c7dc36ed85076024b694930f5b7d29edac3f37" translate="yes" xml:space="preserve">
          <source>To query for the printable area, a client must supply a suitable context. Without specifying at the very least the size of the media being used no meaningful value for printable area can be obtained.</source>
          <target state="translated">인쇄 가능 영역을 쿼리하려면 클라이언트가 적절한 컨텍스트를 제공해야합니다. 사용되는 용지의 크기를 최소한으로 지정하지 않으면 인쇄 가능 영역에 대한 의미있는 값을 얻을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="263c5b92a194433ee16767a9bc877843ab4b7dc8" translate="yes" xml:space="preserve">
          <source>To receive MBeanServerNotifications, you need to register a listener with the &lt;a href=&quot;mbeanserverdelegate&quot;&gt;&lt;code&gt;MBeanServerDelegate&lt;/code&gt;&lt;/a&gt; MBean that represents the MBeanServer. The ObjectName of the MBeanServerDelegate is &lt;a href=&quot;mbeanserverdelegate#DELEGATE_NAME&quot;&gt;&lt;code&gt;MBeanServerDelegate.DELEGATE_NAME&lt;/code&gt;&lt;/a&gt;, which is &lt;code&gt;JMImplementation:type=MBeanServerDelegate&lt;/code&gt;.</source>
          <target state="translated">MBeanServerNotifications를 수신하려면 MBeanServer 를 나타내는 &lt;a href=&quot;mbeanserverdelegate&quot;&gt; &lt;code&gt;MBeanServerDelegate&lt;/code&gt; &lt;/a&gt; MBean에 리스너를 등록해야합니다 . MBeanServerDelegate의 ObjectName은 &lt;a href=&quot;mbeanserverdelegate#DELEGATE_NAME&quot;&gt; &lt;code&gt;MBeanServerDelegate.DELEGATE_NAME&lt;/code&gt; &lt;/a&gt; 이며 &lt;code&gt;JMImplementation:type=MBeanServerDelegate&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e50bf1c56e905455d076027f4b0616b3cbbe8a50" translate="yes" xml:space="preserve">
          <source>To refer to locations within the sequence, the coordinates used are the location between two characters. As the diagram below shows, a location in a text document can be referred to as a position, or an offset. This position is zero-based.</source>
          <target state="translated">시퀀스 내의 위치를 ​​참조하기 위해 사용되는 좌표는 두 문자 사이의 위치입니다. 아래 다이어그램에서 볼 수 있듯이 텍스트 문서의 위치를 ​​위치 또는 오프셋이라고 할 수 있습니다. 이 위치는 0부터 시작합니다.</target>
        </trans-unit>
        <trans-unit id="3f470a0bd4b226ae17cf266889b087c40813603e" translate="yes" xml:space="preserve">
          <source>To reinforce that each axis is treated independently the diagram shows the range of each group and element along each axis. The range of each component has been projected onto the axes, and the groups are rendered in blue (horizontal) and red (vertical). For readability there is a gap between each of the elements in the sequential group.</source>
          <target state="translated">각 축이 독립적으로 처리된다는 것을 강조하기 위해 다이어그램은 각 축을 따라 각 그룹 및 요소의 범위를 보여줍니다. 각 구성 요소의 범위는 축에 투영되었으며 그룹은 파란색 (수평) 및 빨간색 (수직)으로 렌더링됩니다. 가독성을 위해 순차 그룹의 각 요소 사이에 간격이 있습니다.</target>
        </trans-unit>
        <trans-unit id="974e2b9641b4896627a5643d8e942465194e9954" translate="yes" xml:space="preserve">
          <source>To release resources used by this &lt;code&gt;Deflater&lt;/code&gt;, the &lt;a href=&quot;#end()&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; method should be called explicitly. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;#finalize()&quot;&gt;&lt;code&gt;finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">이 사용하는 자원 해제하려면 &lt;code&gt;Deflater&lt;/code&gt; 의 &lt;a href=&quot;#end()&quot;&gt; &lt;code&gt;end()&lt;/code&gt; &lt;/a&gt; 메소드가 명시 적으로 호출해야합니다. 서브 클래스는 서브 클래스가 획득 한 리소스를 정리합니다. 정리를 수행하기 위해 &lt;a href=&quot;#finalize()&quot;&gt; &lt;code&gt;finalize()&lt;/code&gt; &lt;/a&gt; 를 재정의하는 하위 클래스는 &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt; 와 같은 대체 정리 메커니즘을 사용 하고 재정의되는 &lt;code&gt;finalize&lt;/code&gt; 메서드를 제거 하도록 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e236ec7e71d2574877083662b30d529f50a301d7" translate="yes" xml:space="preserve">
          <source>To release resources used by this &lt;code&gt;Inflater&lt;/code&gt;, the &lt;a href=&quot;#end()&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; method should be called explicitly. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;#finalize()&quot;&gt;&lt;code&gt;finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">이 사용하는 자원 해제하려면 &lt;code&gt;Inflater&lt;/code&gt; 의 &lt;a href=&quot;#end()&quot;&gt; &lt;code&gt;end()&lt;/code&gt; &lt;/a&gt; 메소드가 명시 적으로 호출해야합니다. 서브 클래스는 서브 클래스가 획득 한 리소스를 정리합니다. 정리를 수행하기 위해 &lt;a href=&quot;#finalize()&quot;&gt; &lt;code&gt;finalize()&lt;/code&gt; &lt;/a&gt; 를 재정의하는 하위 클래스는 &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt; 와 같은 대체 정리 메커니즘을 사용 하고 재정의되는 &lt;code&gt;finalize&lt;/code&gt; 메서드를 제거 하도록 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="45d6f38ed252f674914f889667d817984fd3a412" translate="yes" xml:space="preserve">
          <source>To release resources used by this &lt;code&gt;ZipFile&lt;/code&gt;, the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method should be called explicitly or by try-with-resources. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;#finalize()&quot;&gt;&lt;code&gt;finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">이 &lt;code&gt;ZipFile&lt;/code&gt; 에서 사용하는 리소스를 해제하려면 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 메서드를 명시 적으로 또는 try-with-resources로 호출해야합니다. 서브 클래스는 서브 클래스가 획득 한 리소스를 정리합니다. 정리를 수행하기 위해 &lt;a href=&quot;#finalize()&quot;&gt; &lt;code&gt;finalize()&lt;/code&gt; &lt;/a&gt; 를 재정의하는 하위 클래스는 &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt; 와 같은 대체 정리 메커니즘을 사용 하고 재정의되는 &lt;code&gt;finalize&lt;/code&gt; 메서드를 제거 하도록 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="58cde6640f925625e3bb78442215bd8b5a8cc5e8" translate="yes" xml:space="preserve">
          <source>To release resources used by this stream &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; should be called directly or by try-with-resources.</source>
          <target state="translated">이 스트림에서 사용하는 리소스를 해제하려면 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 를 직접 호출하거나 try-with-resources로 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="17085a7c42bc8ba04a89b22173da18e8dfbd6aeb" translate="yes" xml:space="preserve">
          <source>To release resources used by this stream &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; should be called directly or by try-with-resources. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;#finalize()&quot;&gt;&lt;code&gt;finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">이 스트림에서 사용하는 리소스를 해제하려면 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 를 직접 호출하거나 try-with-resources로 호출해야합니다. 서브 클래스는 서브 클래스가 획득 한 리소스를 정리합니다. 정리를 수행하기 위해 &lt;a href=&quot;#finalize()&quot;&gt; &lt;code&gt;finalize()&lt;/code&gt; &lt;/a&gt; 를 재정의하는 하위 클래스는 &lt;a href=&quot;../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt; 와 같은 대체 정리 메커니즘을 사용 하고 재정의되는 &lt;code&gt;finalize&lt;/code&gt; 메서드를 제거 하도록 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f583fb3f20043b03ba3a2a6406effbeae1eccf6a" translate="yes" xml:space="preserve">
          <source>To rely on the default type:</source>
          <target state="translated">기본 유형을 사용하려면</target>
        </trans-unit>
        <trans-unit id="91f9cda7b431d0791931992a65a62beb1c70ea1a" translate="yes" xml:space="preserve">
          <source>To remove an attribute by local name and namespace URI, use the &lt;code&gt;removeAttributeNS&lt;/code&gt; method.</source>
          <target state="translated">로컬 이름 및 네임 스페이스 URI로 속성을 제거하려면 &lt;code&gt;removeAttributeNS&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f2f47f1e44b85ff762285f2c5a88392990bee0a" translate="yes" xml:space="preserve">
          <source>To remove the render size setting, pass in a value of &lt;code&gt;null&lt;/code&gt; for &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">렌더링 크기 설정을 제거하려면 값을 전달 &lt;code&gt;null&lt;/code&gt; 에 대한 &lt;code&gt;size&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d2c956991d58c4d59d572d47c59760548a6c093" translate="yes" xml:space="preserve">
          <source>To resize the &lt;code&gt;Component&lt;/code&gt;s to their preferred sizes invoke &lt;code&gt;resetToPreferredSizes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; 의 크기를 선호하는 크기로 조정하려면 &lt;code&gt;resetToPreferredSizes&lt;/code&gt; 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d75120333640b4d1d4805bc00d87a16aaa41463" translate="yes" xml:space="preserve">
          <source>To retrieve a number, use the following code:</source>
          <target state="translated">숫자를 검색하려면 다음 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="dbf8b81ecf37a1973c4e33082f309e1de3fee8e2" translate="yes" xml:space="preserve">
          <source>To retrieve all the Principals associated with a &lt;code&gt;Subject&lt;/code&gt;, invoke the &lt;code&gt;getPrincipals&lt;/code&gt; method. To retrieve all the public or private credentials belonging to a &lt;code&gt;Subject&lt;/code&gt;, invoke the &lt;code&gt;getPublicCredentials&lt;/code&gt; method or &lt;code&gt;getPrivateCredentials&lt;/code&gt; method, respectively. To modify the returned &lt;code&gt;Set&lt;/code&gt; of Principals and credentials, use the methods defined in the &lt;code&gt;Set&lt;/code&gt; class. For example:</source>
          <target state="translated">&lt;code&gt;Subject&lt;/code&gt; 와 연관된 모든 프린시 펄을 검색하려면 &lt;code&gt;getPrincipals&lt;/code&gt; 메소드를 호출하십시오 . &lt;code&gt;Subject&lt;/code&gt; 에 속하는 모든 공개 또는 개인 신임 정보를 검색하려면 각각 &lt;code&gt;getPublicCredentials&lt;/code&gt; 메소드 또는 &lt;code&gt;getPrivateCredentials&lt;/code&gt; 메소드를 호출하십시오 . 리턴 된 프린시 펄 및 신임 정보 &lt;code&gt;Set&lt;/code&gt; 를 수정하려면 &lt;code&gt;Set&lt;/code&gt; 클래스에 정의 된 메소드를 사용하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cd7c59a4a30c4a9f9ade76ab24ca6203b8101d8d" translate="yes" xml:space="preserve">
          <source>To retrieve an attribute node by qualified name and namespace URI, use the &lt;code&gt;getAttributeNodeNS&lt;/code&gt; method.</source>
          <target state="translated">규정 된 이름 및 네임 스페이스 URI로 속성 노드를 검색하려면 &lt;code&gt;getAttributeNodeNS&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ffccbd13dfb2daf73f4f42560bc59770446ca868" translate="yes" xml:space="preserve">
          <source>To retrieve current cookie store.</source>
          <target state="translated">현재 쿠키 저장소를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="ec2ce31a9359110a7a91f426462698246d114fe4" translate="yes" xml:space="preserve">
          <source>To see an example which sets this property, see the &lt;a href=&quot;#prototype_example&quot;&gt;class description&lt;/a&gt; above.</source>
          <target state="translated">이 속성을 설정하는 예를 보려면 위 의 &lt;a href=&quot;#prototype_example&quot;&gt;클래스 설명을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="74c90b4c8111fa16e71742d605c41f24836eef5d" translate="yes" xml:space="preserve">
          <source>To select what instrument should play the notes on a particular MIDI channel, two kinds of MIDI message are used that specify a patch location: a bank-select command, and a program-change channel command. The Java Sound equivalent is the &lt;a href=&quot;midichannel#programChange(int,int)&quot;&gt;&lt;code&gt;programChange(int, int)&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;MidiChannel&lt;/code&gt;.</source>
          <target state="translated">특정 MIDI 채널에서 음을 연주해야하는 악기를 선택하기 위해 패치 위치를 지정하는 두 종류의 MIDI 메시지, 즉 뱅크 선택 명령과 프로그램 변경 채널 명령이 사용됩니다. Java Sound에 해당하는 것은 &lt;code&gt;MidiChannel&lt;/code&gt; 의 &lt;a href=&quot;midichannel#programChange(int,int)&quot;&gt; &lt;code&gt;programChange(int, int)&lt;/code&gt; &lt;/a&gt; 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="dafe7f14b12f045174019ecf0206f06223d238c3" translate="yes" xml:space="preserve">
          <source>To select what instrument should play the notes on a particular MIDI channel, two kinds of MIDI message are used that specify a patch location: a bank-select command, and a program-change channel command. The Java Sound equivalent is the &lt;a href=&quot;midichannel#programChange-int-int-&quot;&gt;&lt;code&gt;programChange(int, int)&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;MidiChannel&lt;/code&gt;.</source>
          <target state="translated">특정 MIDI 채널에서 음표를 연주 할 악기를 선택하기 위해 패치 위치를 지정하는 두 가지 종류의 MIDI 메시지 (뱅크 선택 명령 및 프로그램 변경 채널 명령)가 사용됩니다. Java Sound와 동등한 기능은 &lt;code&gt;MidiChannel&lt;/code&gt; 의 &lt;a href=&quot;midichannel#programChange-int-int-&quot;&gt; &lt;code&gt;programChange(int, int)&lt;/code&gt; &lt;/a&gt; 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="1f07255a778509d637268f559910dc6e481f25e8" translate="yes" xml:space="preserve">
          <source>To set an attribute with a qualified name and namespace URI, use the &lt;code&gt;setAttributeNS&lt;/code&gt; method.</source>
          <target state="translated">규정 된 이름 및 네임 스페이스 URI로 속성을 설정하려면 &lt;code&gt;setAttributeNS&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8aa6d3851320ddcb0024e3cd57b86fda3434f003" translate="yes" xml:space="preserve">
          <source>To set the DeclHandler for an XML reader, use the &lt;a href=&quot;../xmlreader#setProperty(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;setProperty&lt;/code&gt;&lt;/a&gt; method with the property name &lt;code&gt;http://xml.org/sax/properties/declaration-handler&lt;/code&gt; and an object implementing this interface (or null) as the value. If the reader does not report declaration events, it will throw a &lt;a href=&quot;../saxnotrecognizedexception&quot;&gt;&lt;code&gt;SAXNotRecognizedException&lt;/code&gt;&lt;/a&gt; when you attempt to register the handler.</source>
          <target state="translated">XML 판독기에 대한 DeclHandler를 설정하려면 속성 이름이 &lt;code&gt;http://xml.org/sax/properties/declaration-handler&lt;/code&gt; 인&lt;a href=&quot;../xmlreader#setProperty(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;setProperty&lt;/code&gt; &lt;/a&gt; 메서드 와이 인터페이스 (또는 null)를 값으로 구현하는 개체를 사용합니다. 판독기가 선언 이벤트를보고하지 않으면 처리기를 등록하려고 할 때 &lt;a href=&quot;../saxnotrecognizedexception&quot;&gt; &lt;code&gt;SAXNotRecognizedException&lt;/code&gt; 이&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="731d23be64e7d2248cfbcbe3e7340e8355ff2ce9" translate="yes" xml:space="preserve">
          <source>To set the LexicalHandler for an XML reader, use the &lt;a href=&quot;../xmlreader#setProperty(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;setProperty&lt;/code&gt;&lt;/a&gt; method with the property name &lt;code&gt;http://xml.org/sax/properties/lexical-handler&lt;/code&gt; and an object implementing this interface (or null) as the value. If the reader does not report lexical events, it will throw a &lt;a href=&quot;../saxnotrecognizedexception&quot;&gt;&lt;code&gt;SAXNotRecognizedException&lt;/code&gt;&lt;/a&gt; when you attempt to register the handler.</source>
          <target state="translated">XML 판독기에 대한 LexicalHandler를 설정하려면 속성 이름이 &lt;code&gt;http://xml.org/sax/properties/lexical-handler&lt;/code&gt; 인&lt;a href=&quot;../xmlreader#setProperty(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;setProperty&lt;/code&gt; &lt;/a&gt; 메서드 와이 인터페이스 (또는 null)를 값으로 구현하는 개체를 사용합니다. 판독기가 어휘 이벤트를보고하지 않으면 처리기를 등록하려고 할 때 &lt;a href=&quot;../saxnotrecognizedexception&quot;&gt; &lt;code&gt;SAXNotRecognizedException&lt;/code&gt; 이&lt;/a&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="44594b4ee0834a754cf5916d75ab0d57ac18a9e1" translate="yes" xml:space="preserve">
          <source>To set the XML value to be the result of an XSLT transform:</source>
          <target state="translated">XML 값을 XSLT 변환의 결과로 설정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="6abe598d39804a927c2ced4346e73a14a3784062" translate="yes" xml:space="preserve">
          <source>To set the cookie policy of this cookie manager.</source>
          <target state="translated">이 쿠키 관리자의 쿠키 정책을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="95efc3684b4472a3b7cbc30ceb1ddfceedcfd2a8" translate="yes" xml:space="preserve">
          <source>To set the orientation of a single component, use this method. To set the orientation of an entire component hierarchy, use &lt;a href=&quot;#applyComponentOrientation(java.awt.ComponentOrientation)&quot;&gt;&lt;code&gt;applyComponentOrientation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">단일 구성 요소의 방향을 설정하려면이 방법을 사용하십시오. 전체 구성 요소 계층의 방향을 설정하려면 &lt;a href=&quot;#applyComponentOrientation(java.awt.ComponentOrientation)&quot;&gt; &lt;code&gt;applyComponentOrientation&lt;/code&gt; 을&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3c402a91a51f63ce884a93deaad542e147d4280a" translate="yes" xml:space="preserve">
          <source>To simplify the task of setting up the environment required by a JNDI application, application components and service providers may be distributed along with &lt;em&gt;resource files.&lt;/em&gt; A JNDI resource file is a file in the properties file format (see &lt;a href=&quot;../../../java.base/java/util/properties#load(java.io.Reader)&quot;&gt;&lt;code&gt;java.util.Properties&lt;/code&gt;&lt;/a&gt;), containing a list of key/value pairs. The key is the name of the property (e.g. &quot;java.naming.factory.object&quot;) and the value is a string in the format defined for that property. Here is an example of a JNDI resource file:</source>
          <target state="translated">JNDI 응용 프로그램에 필요한 환경 설정 작업을 단순화하기 위해 응용 프로그램 구성 요소 및 서비스 공급자가 &lt;em&gt;리소스 파일&lt;/em&gt; 과 함께 배포 될 수 있습니다 &lt;em&gt;. &lt;/em&gt;JNDI 리소스 파일은 키 / 값 쌍의 목록을 포함하는 속성 파일 형식 ( &lt;a href=&quot;../../../java.base/java/util/properties#load(java.io.Reader)&quot;&gt; &lt;code&gt;java.util.Properties&lt;/code&gt; &lt;/a&gt; 참조 )의 파일입니다 . 키는 속성의 이름 (예 : &quot;java.naming.factory.object&quot;)이고 값은 해당 속성에 대해 정의 된 형식의 문자열입니다. 다음은 JNDI 리소스 파일의 예입니다.</target>
        </trans-unit>
        <trans-unit id="eeb6a793892d451fecc2449a02eb99c7e627a351" translate="yes" xml:space="preserve">
          <source>To simplify the task of setting up the environment required by a JNDI application, application components and service providers may be distributed along with &lt;em&gt;resource files.&lt;/em&gt; A JNDI resource file is a file in the properties file format (see &lt;a href=&quot;../../java/util/properties#load-java.io.Reader-&quot;&gt;&lt;code&gt;&lt;code&gt;java.util.Properties&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;), containing a list of key/value pairs. The key is the name of the property (e.g. &quot;java.naming.factory.object&quot;) and the value is a string in the format defined for that property. Here is an example of a JNDI resource file:</source>
          <target state="translated">JNDI 애플리케이션에 필요한 환경 설정 작업을 단순화하기 위해 애플리케이션 컴포넌트 및 서비스 제공자가 &lt;em&gt;자원 파일&lt;/em&gt; 과 함께 분배 될 수 있습니다 &lt;em&gt;.&lt;/em&gt; JNDI 자원 파일은 키 / 값 쌍의 목록을 포함하는 특성 파일 형식 ( &lt;a href=&quot;../../java/util/properties#load-java.io.Reader-&quot;&gt; &lt;code&gt;&lt;code&gt;java.util.Properties&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 참조 )의 파일입니다 . 키는 속성 이름 (예 : &quot;java.naming.factory.object&quot;)이며 값은 해당 속성에 대해 정의 된 형식의 문자열입니다. 다음은 JNDI 리소스 파일의 예입니다.</target>
        </trans-unit>
        <trans-unit id="b3ac2a7a9cb0bb2873abefd7d35bc80945dadb53" translate="yes" xml:space="preserve">
          <source>To specify a custom closure code or reason code the &lt;code&gt;sendClose&lt;/code&gt; method may be invoked from inside the &lt;code&gt;onClose&lt;/code&gt; invocation:</source>
          <target state="translated">사용자 정의 클로저 코드 또는 이유 코드를 지정하려면 &lt;code&gt;onClose&lt;/code&gt; 호출 내부에서 &lt;code&gt;sendClose&lt;/code&gt; 메소드를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb7dcfade2357e76eeab66e5023506d61009553b" translate="yes" xml:space="preserve">
          <source>To specify a day of the week on or before an exact day of the month, set &lt;em&gt;day-of-month&lt;/em&gt; and &lt;em&gt;day-of-week&lt;/em&gt; to a negative value. For example, to specify the last Wednesday on or before the 21st of March, set &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#MARCH&quot;&gt;&lt;code&gt;MARCH&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-month&lt;/em&gt; is -21 and &lt;em&gt;day-of-week&lt;/em&gt; is &lt;code&gt;-&lt;/code&gt;&lt;a href=&quot;calendar#WEDNESDAY&quot;&gt;&lt;code&gt;WEDNESDAY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">, 세트 또는 달의 정확한 일 이전의 요일을 지정하려면 &lt;em&gt;하루의 달&lt;/em&gt; 과 &lt;em&gt;요일&lt;/em&gt; 음의 값으로 설정합니다. 예를 들어, 또는 3 월 세트의 21 일 이전의 마지막 수요일을 지정하려면 &lt;em&gt;한 달&lt;/em&gt; 에 &lt;a href=&quot;calendar#MARCH&quot;&gt; &lt;code&gt;MARCH&lt;/code&gt; &lt;/a&gt; , &lt;em&gt;-의 - 월 일&lt;/em&gt; -21과 &lt;em&gt;-의 주 날&lt;/em&gt; 입니다 &lt;code&gt;-&lt;/code&gt; &lt;a href=&quot;calendar#WEDNESDAY&quot;&gt; &lt;code&gt;WEDNESDAY&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="600c1d56e2bfbab8d400f99a6f9b01cc9657e004" translate="yes" xml:space="preserve">
          <source>To specify a day of week on or after an exact day of month, set the &lt;em&gt;month&lt;/em&gt; to an exact month value, &lt;em&gt;day-of-month&lt;/em&gt; to the day on or after which the rule is applied, and &lt;em&gt;day-of-week&lt;/em&gt; to a negative &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field value. For example, to specify the second Sunday of April, set &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#APRIL&quot;&gt;&lt;code&gt;APRIL&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-month&lt;/em&gt; to 8, and &lt;em&gt;day-of-week&lt;/em&gt; to &lt;code&gt;-&lt;/code&gt;&lt;a href=&quot;calendar#SUNDAY&quot;&gt;&lt;code&gt;SUNDAY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">정확한 요일 또는 그 이후에 요일을 지정하려면 해당 &lt;em&gt;월&lt;/em&gt; 을 정확한 월 값으로 설정하고 , &lt;em&gt;요일을&lt;/em&gt; 규칙이 적용되는 &lt;em&gt;요일&lt;/em&gt; 로 설정하고, &lt;em&gt;요일&lt;/em&gt; 을 음수로 설정하십시오. &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt; 필드 값 예를 들어, 4 월, 세트의 두 번째 일요일 지정 &lt;em&gt;달&lt;/em&gt; 에 &lt;a href=&quot;calendar#APRIL&quot;&gt; &lt;code&gt;APRIL&lt;/code&gt; &lt;/a&gt; , &lt;em&gt;일 - 중 - 달&lt;/em&gt; 8, 및 &lt;em&gt;요일&lt;/em&gt; 에 &lt;code&gt;-&lt;/code&gt; &lt;a href=&quot;calendar#SUNDAY&quot;&gt; &lt;code&gt;SUNDAY&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b0f2993ffeb347d9d1df326129e16ea808f4f2dd" translate="yes" xml:space="preserve">
          <source>To specify alternate caret policies, subclass &lt;code&gt;CaretPolicy&lt;/code&gt; and override &lt;code&gt;getStrongCaret&lt;/code&gt;. &lt;code&gt;getStrongCaret&lt;/code&gt; should inspect the two &lt;code&gt;TextHitInfo&lt;/code&gt; arguments and choose one of them as the strong caret.</source>
          <target state="translated">대체 캐럿 정책을 지정하려면 &lt;code&gt;CaretPolicy&lt;/code&gt; 를 하위 클래스로 &lt;code&gt;getStrongCaret&lt;/code&gt; 재정의 하십시오 . &lt;code&gt;getStrongCaret&lt;/code&gt; 은 두 개의 &lt;code&gt;TextHitInfo&lt;/code&gt; 인수를 검사하고 그중 하나를 강력한 캐럿으로 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="ab173dd70ae21fda06597bf33b09fae0f077dfa3" translate="yes" xml:space="preserve">
          <source>To specify an attribute by local name and namespace URI, use the &lt;code&gt;setIdAttributeNS&lt;/code&gt; method.</source>
          <target state="translated">로컬 이름 및 네임 스페이스 URI로 속성을 지정하려면 &lt;code&gt;setIdAttributeNS&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="cff0db5d830da38e5dab22f343491d41223cf96f" translate="yes" xml:space="preserve">
          <source>To specify an exact day of month, set the &lt;em&gt;month&lt;/em&gt; and &lt;em&gt;day-of-month&lt;/em&gt; to an exact value, and &lt;em&gt;day-of-week&lt;/em&gt; to zero. For example, to specify March 1, set the &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#MARCH&quot;&gt;&lt;code&gt;MARCH&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-month&lt;/em&gt; to 1, and &lt;em&gt;day-of-week&lt;/em&gt; to 0.</source>
          <target state="translated">정확한 월을 지정하려면 &lt;em&gt;월&lt;/em&gt; 과 &lt;em&gt;월&lt;/em&gt; 을 정확한 값으로 설정하고 &lt;em&gt;요일&lt;/em&gt; 을 0으로 설정하십시오. 예를 들어, 설정 년 3 월 1 일 지정하려면 &lt;em&gt;한 달&lt;/em&gt; 에 &lt;a href=&quot;calendar#MARCH&quot;&gt; &lt;code&gt;MARCH&lt;/code&gt; &lt;/a&gt; , &lt;em&gt;일-의 달을&lt;/em&gt; 1로하고, &lt;em&gt;요일&lt;/em&gt; 0.</target>
        </trans-unit>
        <trans-unit id="a13182c264e97f96fa818419b7644ee38ec128fd" translate="yes" xml:space="preserve">
          <source>To specify an existing keystore file:</source>
          <target state="translated">기존 키 저장소 파일을 지정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="ebef5d1fda4022cf205594fb36709781cf042e4a" translate="yes" xml:space="preserve">
          <source>To specify an unlimited cardinality.</source>
          <target state="translated">무제한 카디널리티를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a08abe91e36bf8e0e40db14d1c5e3a4854cb4606" translate="yes" xml:space="preserve">
          <source>To specify other hint values, use the constructor which specifies the rendering hint values as parameters : &lt;a href=&quot;#%3Cinit%3E(java.awt.geom.AffineTransform,java.lang.Object,java.lang.Object)&quot;&gt;&lt;code&gt;FontRenderContext(AffineTransform, Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다른 힌트 값을 지정하려면 렌더링 힌트 값을 매개 변수로 지정하는 생성자를 사용하십시오 : &lt;a href=&quot;#%3Cinit%3E(java.awt.geom.AffineTransform,java.lang.Object,java.lang.Object)&quot;&gt; &lt;code&gt;FontRenderContext(AffineTransform, Object, Object)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="346177fca6fdf62142f8d6109cf3044e28c817e9" translate="yes" xml:space="preserve">
          <source>To specify the local machine, use &quot;localhost&quot; as the</source>
          <target state="translated">로컬 컴퓨터를 지정하려면 &quot;localhost&quot;를</target>
        </trans-unit>
        <trans-unit id="71610a41fcfd2431be44a9737e9e5d35ee635b42" translate="yes" xml:space="preserve">
          <source>To specify, the last day-of-week of the month, set &lt;em&gt;day-of-week&lt;/em&gt; to a &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; value and &lt;em&gt;day-of-month&lt;/em&gt; to -1. For example, to specify the last Sunday of October, set &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#OCTOBER&quot;&gt;&lt;code&gt;OCTOBER&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-week&lt;/em&gt; to &lt;a href=&quot;calendar#SUNDAY&quot;&gt;&lt;code&gt;SUNDAY&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;day-of-month&lt;/em&gt; to -1.</source>
          <target state="translated">매월 마지막 요일을 지정하려면 &lt;em&gt;요일&lt;/em&gt; 을 &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt; 값으로 설정하고 &lt;em&gt;일&lt;/em&gt; 을 -1로 설정하십시오. 예를 들어 월, 10 월, 세트의 마지막 일요일 지정 &lt;em&gt;달&lt;/em&gt; 에 &lt;a href=&quot;calendar#OCTOBER&quot;&gt; &lt;code&gt;OCTOBER&lt;/code&gt; &lt;/a&gt; , &lt;em&gt;요일을&lt;/em&gt; 에 &lt;a href=&quot;calendar#SUNDAY&quot;&gt; &lt;code&gt;SUNDAY&lt;/code&gt; &lt;/a&gt; 과 &lt;em&gt;하루의 개월&lt;/em&gt; -1.</target>
        </trans-unit>
        <trans-unit id="dcd96f7bcb124f560aa1419e0165a26c8730f085" translate="yes" xml:space="preserve">
          <source>To start a process with an explicit set of environment variables, first call &lt;a href=&quot;../util/map#clear()&quot;&gt;&lt;code&gt;Map.clear()&lt;/code&gt;&lt;/a&gt; before adding environment variables.</source>
          <target state="translated">명시적인 환경 변수 세트로 프로세스를 시작하려면 환경 변수 를 추가하기 전에 먼저 &lt;a href=&quot;../util/map#clear()&quot;&gt; &lt;code&gt;Map.clear()&lt;/code&gt; &lt;/a&gt; 를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="dabced04ee8980ac3351cf7550967d78cbcac1de" translate="yes" xml:space="preserve">
          <source>To start a process with an explicit set of environment variables, first call &lt;a href=&quot;../util/map#clear--&quot;&gt;&lt;code&gt;Map.clear()&lt;/code&gt;&lt;/a&gt; before adding environment variables.</source>
          <target state="translated">명시 적 환경 변수 세트로 프로세스를 시작하려면 먼저 환경 변수 를 추가하기 전에 &lt;a href=&quot;../util/map#clear--&quot;&gt; &lt;code&gt;Map.clear()&lt;/code&gt; &lt;/a&gt; 를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="58629dec74d32767f98759bd723d2f2301a534af" translate="yes" xml:space="preserve">
          <source>To successfully store and retrieve objects from a hashtable, the objects used as keys must implement the &lt;code&gt;hashCode&lt;/code&gt; method and the &lt;code&gt;equals&lt;/code&gt; method.</source>
          <target state="translated">해시 테이블에서 객체를 성공적으로 저장하고 검색하려면 키로 사용 된 객체가 &lt;code&gt;hashCode&lt;/code&gt; 메소드와 &lt;code&gt;equals&lt;/code&gt; 메소드를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="61ba1f124775d658e582d1b9c65013ec1fb595ed" translate="yes" xml:space="preserve">
          <source>To support the most common use cases, the default implementation of this method returns &lt;code&gt;true&lt;/code&gt; when the number of registered parties has become zero as the result of a party invoking &lt;code&gt;arriveAndDeregister&lt;/code&gt;. You can disable this behavior, thus enabling continuation upon future registrations, by overriding this method to always return &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">가장 일반적인 사용 사례를 지원하기 위해이 메소드의 기본 구현은 당사자가 &lt;code&gt;arriveAndDeregister&lt;/code&gt; 를 호출 한 결과 등록 된 당사자 수가 0이되면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 이 동작을 비활성화하면 항상 &lt;code&gt;false&lt;/code&gt; 를 반환하도록이 메서드를 재정 의하여 향후 등록시 계속할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f368d4ccd74fcc91bcd332a750b4a6a26da1a44d" translate="yes" xml:space="preserve">
          <source>To take into account the difference between the offsets, and adjust the time fields, use &lt;a href=&quot;#withOffsetSameInstant(java.time.ZoneOffset)&quot;&gt;&lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">오프셋 간의 차이를 고려하고 시간 필드를 조정하려면 &lt;a href=&quot;#withOffsetSameInstant(java.time.ZoneOffset)&quot;&gt; &lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="93c821be0e5b126c40cf4d122a421ae1c3b72506" translate="yes" xml:space="preserve">
          <source>To take into account the difference between the offsets, and adjust the time fields, use &lt;a href=&quot;offsetdatetime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">오프셋 간의 차이를 고려하고 시간 필드를 조정하려면 &lt;a href=&quot;offsetdatetime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9c0200631901a83fac6a3cbd77dd17954ef0002" translate="yes" xml:space="preserve">
          <source>To take into account the difference between the offsets, and adjust the time fields, use &lt;a href=&quot;offsettime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">오프셋 간의 차이를 고려하고 시간 필드를 조정하려면 &lt;a href=&quot;offsettime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e2b9b7d47904152052072084a26e05664421080" translate="yes" xml:space="preserve">
          <source>To test is frame is maximized in &lt;em&gt;some&lt;/em&gt; direction use</source>
          <target state="translated">테스트하기 위해 &lt;em&gt;어떤&lt;/em&gt; 방향으로 프레임이 최대화됩니다.</target>
        </trans-unit>
        <trans-unit id="998c3e1c979aa5e96d08fb1fc19acbddd8d58112" translate="yes" xml:space="preserve">
          <source>To the greatest extent possible, side-effects should be avoided in the definition of extension functions. The implementation evaluating an XPath expression is under no obligation to call extension functions in any particular order or any particular number of times.</source>
          <target state="translated">가능한 한 확장 함수의 정의에서 부작용을 피해야합니다. XPath 표현식을 평가하는 구현은 특정 순서 또는 특정 횟수로 확장 기능을 호출 할 의무가 없습니다.</target>
        </trans-unit>
        <trans-unit id="da5f689d392b60a5f765c1fd511f388a660b7d15" translate="yes" xml:space="preserve">
          <source>To transfer a list of files to/from Java (and the underlying platform) a &lt;code&gt;DataFlavor&lt;/code&gt; of this type/subtype and representation class of &lt;code&gt;java.util.List&lt;/code&gt; is used.</source>
          <target state="translated">Java (및 기본 플랫폼) &lt;code&gt;DataFlavor&lt;/code&gt; 파일 목록을 전송하기 위해이 유형 / 하위 유형 의 DataFlavor 및 &lt;code&gt;java.util.List&lt;/code&gt; 의 표현 클래스 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f461a15833bc38974edc9b81e41a6968b7bb41e3" translate="yes" xml:space="preserve">
          <source>To transfer a list of files to/from Java (and the underlying platform) a &lt;code&gt;DataFlavor&lt;/code&gt; of this type/subtype and representation class of &lt;code&gt;java.util.List&lt;/code&gt; is used. Each element of the list is required/guaranteed to be of type &lt;code&gt;java.io.File&lt;/code&gt;.</source>
          <target state="translated">Java (및 기본 플랫폼) &lt;code&gt;DataFlavor&lt;/code&gt; 파일 목록을 전송하기 위해이 유형 / 하위 유형 의 DataFlavor 및 &lt;code&gt;java.util.List&lt;/code&gt; 의 표현 클래스 가 사용됩니다. 목록의 각 요소는 &lt;code&gt;java.io.File&lt;/code&gt; 유형이어야합니다 / 보장됩니다 .</target>
        </trans-unit>
        <trans-unit id="8877e6d413405c951311656b4041e67d0ae4d3dd" translate="yes" xml:space="preserve">
          <source>To transfer a reference to an arbitrary Java object reference that has no associated MIME Content-type, across a &lt;code&gt;Transferable&lt;/code&gt; interface WITHIN THE SAME JVM, a &lt;code&gt;DataFlavor&lt;/code&gt; with this type/subtype is used, with a &lt;code&gt;representationClass&lt;/code&gt; equal to the type of the class/interface being passed across the &lt;code&gt;Transferable&lt;/code&gt;.</source>
          <target state="translated">걸쳐없고 MIME 콘텐츠 유형과 연결되어, 임의의 자바 오브젝트 참조에 대한 참조를 전달하기 &lt;code&gt;Transferable&lt;/code&gt; 같은 JVM 이내에 인터페이스, &lt;code&gt;DataFlavor&lt;/code&gt; 를 으로이 타입 / 서브 타입으로는 사용 &lt;code&gt;representationClass&lt;/code&gt; 가이 클래스 / 인터페이스의 종류와 동일 &lt;code&gt;Transferable&lt;/code&gt; 을 통해 전달 됩니다.</target>
        </trans-unit>
        <trans-unit id="f5de0e4e24c7ca092b00bfdc400cadfeb27ea717" translate="yes" xml:space="preserve">
          <source>To transform from a GRAY device profile color space to the CIEXYZ Profile Connection Space, the device gray component is transformed by a lookup through the tone reproduction curve (TRC). The result is treated as the achromatic component of the PCS.</source>
          <target state="translated">GRAY 장치 프로파일 색 공간에서 CIEXYZ 프로파일 연결 공간으로 변환하기 위해 장치 회색 구성 요소는 TRC (톤 재생 곡선)를 통한 조회를 통해 변환됩니다. 결과는 PCS의 무채색 성분으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="5a07174d7d9a875abd26ef06df41fb77d752de07" translate="yes" xml:space="preserve">
          <source>To transform from a device profile color space to the CIEXYZ Profile Connection Space, each device color component is first linearized by a lookup through the corresponding tone reproduction curve (TRC). The resulting linear RGB components are converted to the CIEXYZ PCS using a a 3x3 matrix constructed from the RGB colorants.</source>
          <target state="translated">장치 프로파일 색상 공간에서 CIEXYZ 프로파일 연결 공간으로 변환하기 위해 각 장치 색상 구성 요소는 먼저 해당하는 톤 재현 곡선 (TRC)을 통한 조회를 통해 선형화됩니다. 결과 선형 RGB 구성 요소는 RGB 착색제로 구성된 3x3 매트릭스를 사용하여 CIEXYZ PCS로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="541dce2eb8e5e65dd208932059455efbbbdd5166" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;JTree&lt;/code&gt; to display compound nodes (for example, nodes containing both a graphic icon and text), subclass &lt;a href=&quot;tree/treecellrenderer&quot;&gt;&lt;code&gt;TreeCellRenderer&lt;/code&gt;&lt;/a&gt; and use &lt;a href=&quot;#setCellRenderer(javax.swing.tree.TreeCellRenderer)&quot;&gt;&lt;code&gt;setCellRenderer(javax.swing.tree.TreeCellRenderer)&lt;/code&gt;&lt;/a&gt; to tell the tree to use it. To edit such nodes, subclass &lt;a href=&quot;tree/treecelleditor&quot;&gt;&lt;code&gt;TreeCellEditor&lt;/code&gt;&lt;/a&gt; and use &lt;a href=&quot;#setCellEditor(javax.swing.tree.TreeCellEditor)&quot;&gt;&lt;code&gt;setCellEditor(javax.swing.tree.TreeCellEditor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;JTree&lt;/code&gt; 를 사용 하여 복합 노드 (예 : 그래픽 아이콘과 텍스트를 모두 포함하는 노드)를 표시 하려면 &lt;a href=&quot;tree/treecellrenderer&quot;&gt; &lt;code&gt;TreeCellRenderer&lt;/code&gt; 를&lt;/a&gt; 하위 클래스로 만들고 &lt;a href=&quot;#setCellRenderer(javax.swing.tree.TreeCellRenderer)&quot;&gt; &lt;code&gt;setCellRenderer(javax.swing.tree.TreeCellRenderer)&lt;/code&gt; &lt;/a&gt; 를 사용하여 트리에 사용하도록 지시합니다. 이러한 노드를 편집하려면 &lt;a href=&quot;tree/treecelleditor&quot;&gt; &lt;code&gt;TreeCellEditor&lt;/code&gt; 를&lt;/a&gt; 하위 클래스로 만들고 &lt;a href=&quot;#setCellEditor(javax.swing.tree.TreeCellEditor)&quot;&gt; &lt;code&gt;setCellEditor(javax.swing.tree.TreeCellEditor)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ced88a9229c08f23f786d188d536e8a5f37bcd79" translate="yes" xml:space="preserve">
          <source>To use a grid bag layout effectively, you must customize one or more of the &lt;code&gt;GridBagConstraints&lt;/code&gt; objects that are associated with its components. You customize a &lt;code&gt;GridBagConstraints&lt;/code&gt; object by setting one or more of its instance variables:</source>
          <target state="translated">그리드 백 레이아웃을 효과적으로 사용하려면 해당 구성 요소와 연결된 하나 이상의 &lt;code&gt;GridBagConstraints&lt;/code&gt; 객체를 사용자 정의해야합니다 . 하나 이상의 인스턴스 변수를 설정 하여 &lt;code&gt;GridBagConstraints&lt;/code&gt; 객체를 사용자 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="8623c13d42d340af760abb5fc3f9546ca597d4cb" translate="yes" xml:space="preserve">
          <source>To use a media tracker, create an instance of &lt;code&gt;MediaTracker&lt;/code&gt; and call its &lt;code&gt;addImage&lt;/code&gt; method for each image to be tracked. In addition, each image can be assigned a unique identifier. This identifier controls the priority order in which the images are fetched. It can also be used to identify unique subsets of the images that can be waited on independently. Images with a lower ID are loaded in preference to those with a higher ID number.</source>
          <target state="translated">미디어 추적기를 사용하려면 &lt;code&gt;MediaTracker&lt;/code&gt; 인스턴스를 만들고 추적 할 각 이미지에 대해 &lt;code&gt;addImage&lt;/code&gt; 메서드를 호출합니다 . 또한 각 이미지에 고유 식별자를 할당 할 수 있습니다. 이 식별자는 이미지를 가져 오는 우선 순위를 제어합니다. 또한 독립적으로 기다릴 수있는 이미지의 고유 한 하위 집합을 식별하는 데 사용할 수도 있습니다. ID 번호가 높은 이미지보다 ID가 낮은 이미지가 우선적으로로드됩니다.</target>
        </trans-unit>
        <trans-unit id="edc7310fe4ff06c8c4cd624845fa7121ff8cdef0" translate="yes" xml:space="preserve">
          <source>To use a method which takes an inner class type, pass a reference to one of the constant fields of the inner class. Client code cannot create new instances of the inner class types because none of those classes has a public constructor. For example, to set the color state to monochrome, use the following code:</source>
          <target state="translated">내부 클래스 유형을 취하는 메소드를 사용하려면 내부 클래스의 상수 필드 중 하나에 대한 참조를 전달하십시오. 클라이언트 코드는 내부 클래스 유형의 새 인스턴스를 만들 수 없습니다. 이러한 클래스에는 공용 생성자가 없기 때문입니다. 예를 들어 색상 상태를 단색으로 설정하려면 다음 코드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4650ff308c006c3b337c7bf0332402913ce48c5c" translate="yes" xml:space="preserve">
          <source>To use a method which takes an inner class type, pass a reference to one of the constant fields of the inner class. Client code cannot create new instances of the inner class types because none of those classes has a public constructor. For example, to set the print dialog type to the cross-platform, pure Java print dialog, use the following code:</source>
          <target state="translated">내부 클래스 유형을 취하는 메소드를 사용하려면 내부 클래스의 상수 필드 중 하나에 대한 참조를 전달하십시오. 클라이언트 코드는 내부 클래스 유형의 새 인스턴스를 만들 수 없습니다. 이러한 클래스에는 공용 생성자가 없기 때문입니다. 예를 들어, 인쇄 대화 상자 유형을 플랫폼 간 순수 Java 인쇄 대화 상자로 설정하려면 다음 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d27436e6d9d22024446b03c458eb94deba75bfcf" translate="yes" xml:space="preserve">
          <source>To use a particular &lt;a href=&quot;../../../../java.base/java/nio/charset/charset&quot;&gt;charset&lt;/a&gt; to encode the contents of the file, an &lt;code&gt;OutputStreamWriter&lt;/code&gt; with the chosen charset can be created from the &lt;code&gt;OutputStream&lt;/code&gt; from the returned object. If the &lt;code&gt;Writer&lt;/code&gt; from the returned object is directly used for writing, its charset is determined by the implementation. An annotation processing tool may have an &lt;code&gt;-encoding&lt;/code&gt; flag or analogous option for specifying this; otherwise, it will typically be the platform's default encoding.</source>
          <target state="translated">특정 &lt;a href=&quot;../../../../java.base/java/nio/charset/charset&quot;&gt;문자 집합&lt;/a&gt; 을 사용하여 파일의 내용을 인코딩 하려면 반환 된 개체 의 &lt;code&gt;OutputStream&lt;/code&gt; 에서 선택한 문자 &lt;code&gt;OutputStreamWriter&lt;/code&gt; 가진 OutputStreamWriter 를 만들 수 있습니다 . 반환 된 개체 의 &lt;code&gt;Writer&lt;/code&gt; 가 쓰기에 직접 사용되는 경우 해당 문자 집합은 구현에 의해 결정됩니다. 주석 처리 도구에는 이를 지정하기위한 &lt;code&gt;-encoding&lt;/code&gt; 플래그 또는 유사한 옵션이있을 수 있습니다. 그렇지 않으면 일반적으로 플랫폼의 기본 인코딩이됩니다.</target>
        </trans-unit>
        <trans-unit id="9a678ea08a784c36df7ea29c59f97b488cdde224" translate="yes" xml:space="preserve">
          <source>To use glue, call &lt;code&gt;Box.createGlue&lt;/code&gt; and add the returned component to a container. The glue component has no minimum or preferred size, so it takes no space unless excess space is available. If excess space is available, then the glue component takes its share of available horizontal or vertical space, just like any other component that has no maximum width or height.</source>
          <target state="translated">접착제를 사용하려면 &lt;code&gt;Box.createGlue&lt;/code&gt; 를 호출 하고 반환 된 구성 요소를 컨테이너에 추가합니다. 접착제 구성 요소에는 최소 또는 기본 크기가 없으므로 여분의 공간이 없으면 공간을 차지하지 않습니다. 여분의 공간을 사용할 수있는 경우 접착제 구성 요소는 최대 너비 또는 높이가없는 다른 구성 요소와 마찬가지로 사용 가능한 수평 또는 수직 공간을 차지합니다.</target>
        </trans-unit>
        <trans-unit id="1ad49767bf4a1c0e3e2a5e9df64439a945f9f2cb" translate="yes" xml:space="preserve">
          <source>To use modern schema languages such as W3C XML Schema or RELAX NG instead of DTD, you can configure your parser to be a non-validating parser by leaving the &lt;a href=&quot;#setValidating(boolean)&quot;&gt;&lt;code&gt;setValidating(boolean)&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;false&lt;/code&gt;, then use the &lt;a href=&quot;#setSchema(javax.xml.validation.Schema)&quot;&gt;&lt;code&gt;setSchema(Schema)&lt;/code&gt;&lt;/a&gt; method to associate a schema to a parser.</source>
          <target state="translated">DTD 대신 W3C XML Schema 또는 RELAX NG와 같은 최신 스키마 언어를 사용하려면 &lt;a href=&quot;#setValidating(boolean)&quot;&gt; &lt;code&gt;setValidating(boolean)&lt;/code&gt; &lt;/a&gt; 메서드를 &lt;code&gt;false&lt;/code&gt; 로 두어 파서를 비 검증 파서로 구성한 다음 &lt;a href=&quot;#setSchema(javax.xml.validation.Schema)&quot;&gt; &lt;code&gt;setSchema(Schema)&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 스키마를 파서로.</target>
        </trans-unit>
        <trans-unit id="c89e2157b7e93a7bcebfbc9728b5bc211336c765" translate="yes" xml:space="preserve">
          <source>To use this class as the basis of a synchronizer, redefine the following methods, as applicable, by inspecting and/or modifying the synchronization state using &lt;a href=&quot;#getState()&quot;&gt;&lt;code&gt;getState()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setState(int)&quot;&gt;&lt;code&gt;setState(int)&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#compareAndSetState(int,int)&quot;&gt;&lt;code&gt;compareAndSetState(int, int)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">이 클래스를 동기화 기의 기반으로 사용하려면 &lt;a href=&quot;#getState()&quot;&gt; &lt;code&gt;getState()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#setState(int)&quot;&gt; &lt;code&gt;setState(int)&lt;/code&gt; &lt;/a&gt; 및 / 또는 &lt;a href=&quot;#compareAndSetState(int,int)&quot;&gt; &lt;code&gt;compareAndSetState(int, int)&lt;/code&gt; &lt;/a&gt; 사용하여 동기화 상태를 검사 및 / 또는 수정하여 해당하는 경우 다음 메서드를 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="8b5faa256a72bd87ad66902ce359b5fa4dc07a0c" translate="yes" xml:space="preserve">
          <source>To use this class as the basis of a synchronizer, redefine the following methods, as applicable, by inspecting and/or modifying the synchronization state using &lt;a href=&quot;abstractqueuedsynchronizer#getState--&quot;&gt;&lt;code&gt;getState()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;abstractqueuedsynchronizer#setState-int-&quot;&gt;&lt;code&gt;setState(int)&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;abstractqueuedsynchronizer#compareAndSetState-int-int-&quot;&gt;&lt;code&gt;compareAndSetState(int, int)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">이 클래스를 동기화 프로그램의 기초로 사용하려면 &lt;a href=&quot;abstractqueuedsynchronizer#getState--&quot;&gt; &lt;code&gt;getState()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;abstractqueuedsynchronizer#setState-int-&quot;&gt; &lt;code&gt;setState(int)&lt;/code&gt; &lt;/a&gt; 및 / 또는 &lt;a href=&quot;abstractqueuedsynchronizer#compareAndSetState-int-int-&quot;&gt; &lt;code&gt;compareAndSetState(int, int)&lt;/code&gt; &lt;/a&gt; 사용하여 동기화 상태를 검사 및 / 또는 수정하여 해당하는 경우 다음 메소드를 재정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="7e6cc05498813ffdab066eef69ac8d90cae6e1cb" translate="yes" xml:space="preserve">
          <source>To use this interface, a developer creating a new editor can have the new component implement the interface. Or the developer can choose a wrapper based approach and provide a companion object which implements the &lt;code&gt;CellEditor&lt;/code&gt; interface (See &lt;code&gt;DefaultCellEditor&lt;/code&gt; for example). The wrapper approach is particularly useful if the user want to use a 3rd party ISV editor with &lt;code&gt;JTable&lt;/code&gt;, but the ISV didn't implement the &lt;code&gt;CellEditor&lt;/code&gt; interface. The user can simply create an object that contains an instance of the 3rd party editor object and &quot;translate&quot; the &lt;code&gt;CellEditor&lt;/code&gt; API into the 3rd party editor's API.</source>
          <target state="translated">이 인터페이스를 사용하기 위해 새 편집기를 만드는 개발자는 새 구성 요소가 인터페이스를 구현하도록 할 수 있습니다. 또는 개발자는 래퍼 기반 접근 방식을 선택하고 &lt;code&gt;CellEditor&lt;/code&gt; 인터페이스 를 구현하는 동반 객체를 제공 할 수 있습니다 ( 예를 들어 &lt;code&gt;DefaultCellEditor&lt;/code&gt; 참조 ). 래퍼 접근 방식은 사용자가 &lt;code&gt;JTable&lt;/code&gt; 과 함께 타사 ISV 편집기를 사용하고 싶지만 ISV가 &lt;code&gt;CellEditor&lt;/code&gt; 인터페이스를 구현하지 않은 경우 특히 유용합니다 . 사용자는 타사 편집기 개체의 인스턴스를 포함하는 개체를 만들고 &lt;code&gt;CellEditor&lt;/code&gt; API를 타사 편집기의 API로 &quot;번역&quot;할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67b95c888473f7898537a4595e5794a82d55cc67" translate="yes" xml:space="preserve">
          <source>To validate one &lt;code&gt;Source&lt;/code&gt; into another kind of &lt;code&gt;Result&lt;/code&gt;, use the identity transformer (see &lt;a href=&quot;../transform/transformerfactory#newTransformer()&quot;&gt;&lt;code&gt;TransformerFactory.newTransformer()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">하나의 &lt;code&gt;Source&lt;/code&gt; 를 다른 종류의 &lt;code&gt;Result&lt;/code&gt; 로 확인하려면 ID 변환기를 사용하십시오 ( &lt;a href=&quot;../transform/transformerfactory#newTransformer()&quot;&gt; &lt;code&gt;TransformerFactory.newTransformer()&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="b737e8d7cd0749fe7af3cbdde2df593c22290739" translate="yes" xml:space="preserve">
          <source>To write the contents of a Source to standard output:</source>
          <target state="translated">소스의 내용을 표준 출력에 쓰려면 :</target>
        </trans-unit>
        <trans-unit id="b3957b540892debf6dc1ef8d89f9aa2666b7352b" translate="yes" xml:space="preserve">
          <source>ToASCII operation can fail. ToASCII fails if any step of it fails. If ToASCII operation fails, an IllegalArgumentException will be thrown. In this case, the input string should not be used in an internationalized domain name.</source>
          <target state="translated">ToASCII 조작이 실패 할 수 있습니다. 단계가 실패하면 ToASCII가 실패합니다. ToASCII 조작이 실패하면 IllegalArgumentException이 발생합니다. 이 경우 국제화 된 도메인 이름에 입력 문자열을 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="ba0a3f3c82b6a5fc5288edead51ddf50d3b0d1e9" translate="yes" xml:space="preserve">
          <source>ToDoubleBiFunction</source>
          <target state="translated">ToDoubleBiFunction</target>
        </trans-unit>
        <trans-unit id="0318cdbb2b34e80a79e890127925ce52072d7f3c" translate="yes" xml:space="preserve">
          <source>ToDoubleBiFunction.applyAsDouble()</source>
          <target state="translated">ToDoubleBiFunction.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="09f750600a104a44d78135d5e870412f3c7805b5" translate="yes" xml:space="preserve">
          <source>ToDoubleFunction</source>
          <target state="translated">ToDoubleFunction</target>
        </trans-unit>
        <trans-unit id="4e2d379b77935a919a92841c689e185cb4a21cb2" translate="yes" xml:space="preserve">
          <source>ToDoubleFunction.applyAsDouble()</source>
          <target state="translated">ToDoubleFunction.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="32c237c8ac27995aa55b0864b8fe91bf8f438790" translate="yes" xml:space="preserve">
          <source>ToIntBiFunction</source>
          <target state="translated">ToIntBiFunction</target>
        </trans-unit>
        <trans-unit id="05cf5723dc4be71476d90209a69fb5b6d835eec9" translate="yes" xml:space="preserve">
          <source>ToIntBiFunction.applyAsInt()</source>
          <target state="translated">ToIntBiFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="91a9b9d60fbf777890e4726e3100e8b9ba66b566" translate="yes" xml:space="preserve">
          <source>ToIntFunction</source>
          <target state="translated">ToIntFunction</target>
        </trans-unit>
        <trans-unit id="f55d62bed2d4830e1e8b4d4e6a85cecdb300e5cd" translate="yes" xml:space="preserve">
          <source>ToIntFunction.applyAsInt()</source>
          <target state="translated">ToIntFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="4949a89642588c0be35330ecc2f3ae51fd705ac1" translate="yes" xml:space="preserve">
          <source>ToLongBiFunction</source>
          <target state="translated">ToLongBiFunction</target>
        </trans-unit>
        <trans-unit id="4bd64f065ed2902bbcd8f76d6e44881bc4118d44" translate="yes" xml:space="preserve">
          <source>ToLongBiFunction.applyAsLong()</source>
          <target state="translated">ToLongBiFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="41f13cd58fc6b1fa34ead7945815dddba3add0bd" translate="yes" xml:space="preserve">
          <source>ToLongFunction</source>
          <target state="translated">ToLongFunction</target>
        </trans-unit>
        <trans-unit id="e56d9ac1d48e88ffbac75f7e19702347c5e304ad" translate="yes" xml:space="preserve">
          <source>ToLongFunction.applyAsLong()</source>
          <target state="translated">ToLongFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="3eaca1a8d0cf29b74a258f818fe7e8e50c017801" translate="yes" xml:space="preserve">
          <source>ToUnicode never fails. In case of any error, the input string is returned unmodified.</source>
          <target state="translated">ToUnicode는 절대 실패하지 않습니다. 오류가 발생하면 입력 문자열이 수정되지 않은 상태로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="226fb00dcae85857dd8afacc31a7c3741fdc264f" translate="yes" xml:space="preserve">
          <source>Together these two values allow a year or month to be divided into weeks.</source>
          <target state="translated">이 두 값을 함께 사용하면 1 년 또는 월을 몇 주로 나눌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c757412827fb84e9636802c567ddc1c67ea694f" translate="yes" xml:space="preserve">
          <source>ToggleButton region.</source>
          <target state="translated">ToggleButton 영역.</target>
        </trans-unit>
        <trans-unit id="d68b831ce922a8ef149f2f1c62214c6482970637" translate="yes" xml:space="preserve">
          <source>ToggleButton region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToggleButton&lt;/code&gt;.</source>
          <target state="translated">ToggleButton 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;ToggleButton&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b78bbf8008c03e4730565193264e3e64a6997b94" translate="yes" xml:space="preserve">
          <source>ToggleButtonBorder</source>
          <target state="translated">ToggleButtonBorder</target>
        </trans-unit>
        <trans-unit id="d220a922b1e915dbdac75c19d1818c1645d9cc06" translate="yes" xml:space="preserve">
          <source>ToggleButtonModel</source>
          <target state="translated">ToggleButtonModel</target>
        </trans-unit>
        <trans-unit id="683bf79e4fdddefcaa45e5500933ac85bb229ea7" translate="yes" xml:space="preserve">
          <source>Toggles the Underline attribute.</source>
          <target state="translated">밑줄 속성을 토글합니다.</target>
        </trans-unit>
        <trans-unit id="1b872d26ed9a37d0cb1b6a84ab2e42dae55a77c9" translate="yes" xml:space="preserve">
          <source>Toggles the bold attribute.</source>
          <target state="translated">굵은 속성을 전환합니다.</target>
        </trans-unit>
        <trans-unit id="bd730c4fe08f8ff532e0dfc8edaf4aeb3bbccc5a" translate="yes" xml:space="preserve">
          <source>Toggles the italic attribute.</source>
          <target state="translated">기울임 꼴 속성을 토글합니다.</target>
        </trans-unit>
        <trans-unit id="00892eaa163e9c57aecf80ab165bf3f566fe3e1e" translate="yes" xml:space="preserve">
          <source>Token had invalid integrity check.</source>
          <target state="translated">토큰에 잘못된 무결성 검사가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b099a72141eb62ad771b99b713aebac10a2db2e" translate="yes" xml:space="preserve">
          <source>TooManyListenersException</source>
          <target state="translated">TooManyListenersException</target>
        </trans-unit>
        <trans-unit id="9a830c714bb2b52b8f817649335855437ebcb701" translate="yes" xml:space="preserve">
          <source>Tool</source>
          <target state="translated">Tool</target>
        </trans-unit>
        <trans-unit id="5b3ce5d1fc3d8b463b2dc92627e5537e7110ca7a" translate="yes" xml:space="preserve">
          <source>Tool Guides:</source>
          <target state="translated">도구 가이드 :</target>
        </trans-unit>
        <trans-unit id="fbf98d3475cd8e7ce0023df6b5ecf8c149cbff36" translate="yes" xml:space="preserve">
          <source>Tool providers are normally located using the service-provider loading facility defined by &lt;a href=&quot;../serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;. Each provider must provide a name, and a method to run an instance of the corresponding tool. When a tool is run, it will be provided with an array of string arguments, and a pair of streams: one for normal (or expected) output and the other for reporting any errors that may occur. The interpretation of the string arguments will normally be defined by each individual tool provider, but will generally correspond to the arguments that could be provided to the tool when invoking the tool from the command line.</source>
          <target state="translated">도구 공급자는 일반적으로 &lt;a href=&quot;../serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; 에서&lt;/a&gt; 정의한 서비스 공급자로드 기능을 사용하여 찾습니다 . 각 공급자는 해당 도구의 인스턴스를 실행하기위한 이름과 메서드를 제공해야합니다. 도구가 실행되면 문자열 인수 배열과 스트림 쌍이 제공됩니다. 하나는 정상 (또는 예상) 출력용이고 다른 하나는 발생할 수있는 오류를보고하기위한 것입니다. 문자열 인수의 해석은 일반적으로 각 개별 도구 공급자에 의해 정의되지만 일반적으로 명령 줄에서 도구를 호출 할 때 도구에 제공 될 수있는 인수에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="2465964821ffab0f30173adb50e18b4b07c33308" translate="yes" xml:space="preserve">
          <source>Tool.getSourceVersions()</source>
          <target state="translated">Tool.getSourceVersions()</target>
        </trans-unit>
        <trans-unit id="ca44d4b0cd3f5970bb01aa99598f074dd8256704" translate="yes" xml:space="preserve">
          <source>Tool.run()</source>
          <target state="translated">Tool.run()</target>
        </trans-unit>
        <trans-unit id="15070d24707f510b804c6c45feb278d713ed5452" translate="yes" xml:space="preserve">
          <source>ToolBar region.</source>
          <target state="translated">ToolBar 영역.</target>
        </trans-unit>
        <trans-unit id="ee5eff586a94b2471a79447c828f2a335f0f6606" translate="yes" xml:space="preserve">
          <source>ToolBar region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToolBar&lt;/code&gt;.</source>
          <target state="translated">ToolBar 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;ToolBar&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ef038e2879004ebd9b53c4cf5bd6bbe3aa4c6da7" translate="yes" xml:space="preserve">
          <source>ToolBar separator region.</source>
          <target state="translated">ToolBar 구분자 영역.</target>
        </trans-unit>
        <trans-unit id="aacd928505acec22915958108a213be277a8855a" translate="yes" xml:space="preserve">
          <source>ToolBar separator region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToolBarSeparator&lt;/code&gt;.</source>
          <target state="translated">ToolBar 구분자 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;ToolBarSeparator&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d2829e6ea7527ded1454c815a88515eaaf8044d" translate="yes" xml:space="preserve">
          <source>ToolBarBorder</source>
          <target state="translated">ToolBarBorder</target>
        </trans-unit>
        <trans-unit id="086db6083632a387a5bd08783e3bec2e0ab48904" translate="yes" xml:space="preserve">
          <source>ToolBarContListener</source>
          <target state="translated">ToolBarContListener</target>
        </trans-unit>
        <trans-unit id="956e3ed8e195a0e920adc9e8821bed22baf407c7" translate="yes" xml:space="preserve">
          <source>ToolBarFocusListener</source>
          <target state="translated">ToolBarFocusListener</target>
        </trans-unit>
        <trans-unit id="b2df69df3be31703b142b58640f415306119eb39" translate="yes" xml:space="preserve">
          <source>ToolBarUI</source>
          <target state="translated">ToolBarUI</target>
        </trans-unit>
        <trans-unit id="9db5d55f0a18fe16f909e9161136b5b2187f90ab" translate="yes" xml:space="preserve">
          <source>ToolProvider</source>
          <target state="translated">ToolProvider</target>
        </trans-unit>
        <trans-unit id="125c22c4e79d3f1aaa4ff4818affaaa630c94b27" translate="yes" xml:space="preserve">
          <source>ToolProvider.getSystemDocumentationTool()</source>
          <target state="translated">ToolProvider.getSystemDocumentationTool()</target>
        </trans-unit>
        <trans-unit id="5a85c700b447e10795dd82b2c999d7b683f2201d" translate="yes" xml:space="preserve">
          <source>ToolProvider.getSystemJavaCompiler()</source>
          <target state="translated">ToolProvider.getSystemJavaCompiler()</target>
        </trans-unit>
        <trans-unit id="adebd288935819a43f9fa88aef37e1f86d705eb0" translate="yes" xml:space="preserve">
          <source>ToolProvider.getSystemToolClassLoader()</source>
          <target state="translated">ToolProvider.getSystemToolClassLoader()</target>
        </trans-unit>
        <trans-unit id="7adb07c19770cc3b61f6a8a2460accfe9f8e907e" translate="yes" xml:space="preserve">
          <source>ToolTip region.</source>
          <target state="translated">도구 설명 영역.</target>
        </trans-unit>
        <trans-unit id="39f49b28ed2b84b6736d7c3fed882c5f9be9f023" translate="yes" xml:space="preserve">
          <source>ToolTip region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToolTip&lt;/code&gt;.</source>
          <target state="translated">도구 설명 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;ToolTip&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="38d3412530cce9dcc79ca575d1f0aaee689f4f88" translate="yes" xml:space="preserve">
          <source>ToolTipManager</source>
          <target state="translated">ToolTipManager</target>
        </trans-unit>
        <trans-unit id="568f809ff3e935085ad4022d1c63e42de4db81a4" translate="yes" xml:space="preserve">
          <source>ToolTipManager contains numerous properties for configuring how long it will take for the tooltips to become visible, and how long till they hide. Consider a component that has a different tooltip based on where the mouse is, such as JTree. When the mouse moves into the JTree and over a region that has a valid tooltip, the tooltip will become visible after &lt;code&gt;initialDelay&lt;/code&gt; milliseconds. After &lt;code&gt;dismissDelay&lt;/code&gt; milliseconds the tooltip will be hidden. If the mouse is over a region that has a valid tooltip, and the tooltip is currently visible, when the mouse moves to a region that doesn't have a valid tooltip the tooltip will be hidden. If the mouse then moves back into a region that has a valid tooltip within &lt;code&gt;reshowDelay&lt;/code&gt; milliseconds, the tooltip will immediately be shown, otherwise the tooltip will be shown again after &lt;code&gt;initialDelay&lt;/code&gt; milliseconds.</source>
          <target state="translated">ToolTipManager에는 도구 설명이 표시되는 데 걸리는 시간과 숨길 때까지 걸리는 시간을 구성하기위한 다양한 속성이 포함되어 있습니다. JTree와 같이 마우스의 위치에 따라 다른 툴팁이있는 구성 요소를 고려하십시오. 마우스가 JTree 및 유효한 툴팁이있는 영역 위로 이동하면 &lt;code&gt;initialDelay&lt;/code&gt; 밀리 초 후에 툴팁이 표시됩니다 . &lt;code&gt;dismissDelay&lt;/code&gt; 밀리 초 후에 툴팁이 숨겨집니다. 마우스가 유효한 도구 설명이있는 영역 위에 있고 도구 설명이 현재 표시되어있는 경우 마우스가 유효한 도구 설명이없는 영역으로 이동하면 도구 설명이 숨겨집니다. 마우스가 &lt;code&gt;reshowDelay&lt;/code&gt; 내에 유효한 툴팁이있는 영역으로 다시 이동 하면밀리 초이면 도구 설명이 즉시 표시되고, 그렇지 않으면 &lt;code&gt;initialDelay&lt;/code&gt; 밀리 초 후에 도구 설명이 다시 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="6600982cb7e4358db50baf5b187ed289429d1f18" translate="yes" xml:space="preserve">
          <source>ToolTipManager.insideTimerAction</source>
          <target state="translated">ToolTipManager.insideTimerAction</target>
        </trans-unit>
        <trans-unit id="2316939116e9d0469815a70f03ba93e66d2314d6" translate="yes" xml:space="preserve">
          <source>ToolTipManager.outsideTimerAction</source>
          <target state="translated">ToolTipManager.outsideTimerAction</target>
        </trans-unit>
        <trans-unit id="e863f01069ef272e5960e81e2d6838690abc5d1f" translate="yes" xml:space="preserve">
          <source>ToolTipManager.stillInsideTimerAction</source>
          <target state="translated">ToolTipManager.stillInsideTimerAction</target>
        </trans-unit>
        <trans-unit id="e951ef37536109b81eb0be66b5d6a1a4024fb5db" translate="yes" xml:space="preserve">
          <source>ToolTipUI</source>
          <target state="translated">ToolTipUI</target>
        </trans-unit>
        <trans-unit id="8dc50da42e7d05864e72d6daf9f4b16c0ae24a43" translate="yes" xml:space="preserve">
          <source>Toolkit</source>
          <target state="translated">Toolkit</target>
        </trans-unit>
        <trans-unit id="94ac7ee6ec8c72608b921e020505b99a237e8057" translate="yes" xml:space="preserve">
          <source>Tools can be located using &lt;a href=&quot;../../../java.base/java/util/serviceloader#load(java.lang.Class)&quot;&gt;&lt;code&gt;ServiceLoader.load(Class)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../java.base/java/util/serviceloader#load(java.lang.Class)&quot;&gt; &lt;code&gt;ServiceLoader.load(Class)&lt;/code&gt; &lt;/a&gt; 사용하여 도구를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d0860f604b36747580272753c6007388c2eb7dbf" translate="yes" xml:space="preserve">
          <source>Tools can be located using &lt;a href=&quot;../../java/util/serviceloader#load-java.lang.Class-&quot;&gt;&lt;code&gt;ServiceLoader.load(Class)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../java/util/serviceloader#load-java.lang.Class-&quot;&gt; &lt;code&gt;ServiceLoader.load(Class)&lt;/code&gt; &lt;/a&gt; 사용하여 도구를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="962a55582a58549b015b01f77b02304c255caf89" translate="yes" xml:space="preserve">
          <source>Total distance that will be indented.</source>
          <target state="translated">들여 쓰기 될 총 거리입니다.</target>
        </trans-unit>
        <trans-unit id="3804f76629833c58abdf20e0ebc34b97e73dfaeb" translate="yes" xml:space="preserve">
          <source>Total distance that will be indented. The sum of leftChildIndent and rightChildIndent.</source>
          <target state="translated">들여 쓰기 될 총 거리입니다. leftChildIndent와 rightChildIndent의 합계입니다.</target>
        </trans-unit>
        <trans-unit id="8e0447f045426fcf17f6cf18cce5f12edd9cfb6f" translate="yes" xml:space="preserve">
          <source>Tracing of this class may be enabled by setting the System property &lt;code&gt;javax.sql.rowset.RowSetFactory.debug&lt;/code&gt; to any value but &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 클래스의 추적은 시스템 속성 &lt;code&gt;javax.sql.rowset.RowSetFactory.debug&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 이외의 값 으로 설정하여 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b1c5a7af06ba8c911bcfd11f72d7463fed9a472d" translate="yes" xml:space="preserve">
          <source>Track</source>
          <target state="translated">Track</target>
        </trans-unit>
        <trans-unit id="a96b5091f38daf8068bd9ac0a37b2decbe465021" translate="yes" xml:space="preserve">
          <source>Track changes of a column moving due to margin changes.</source>
          <target state="translated">여백 변경으로 인해 이동하는 열의 변경 사항을 추적합니다.</target>
        </trans-unit>
        <trans-unit id="9a40c3d92d113c1ac04c41389c6b999faee59a99" translate="yes" xml:space="preserve">
          <source>Track changes of a column repositioning.</source>
          <target state="translated">열 재배치 변경 사항을 추적합니다.</target>
        </trans-unit>
        <trans-unit id="a66a12c603b3fbbf86b46bf90bf5fd54b23ee71b" translate="yes" xml:space="preserve">
          <source>Track changes to a cell's contents.</source>
          <target state="translated">셀 내용의 변경 사항을 추적합니다.</target>
        </trans-unit>
        <trans-unit id="0717b512caa4830e4107db5c9f9faec9c6e3bb63" translate="yes" xml:space="preserve">
          <source>Track changes to a cell's contents. Invoked when editing is finished. The changes are saved, the editor object is discarded, and the cell is rendered once again.</source>
          <target state="translated">셀 내용의 변경 사항을 추적합니다. 편집이 완료되면 호출됩니다. 변경 사항이 저장되고 편집기 개체가 삭제되고 셀이 다시 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="d625e49ec5cc65508b784b51f3d1a03d13b72768" translate="yes" xml:space="preserve">
          <source>Track changes to selection model, column model, etc. so as to be able to re-place listeners on those in order to pass on information to the Accessibility PropertyChange mechanism</source>
          <target state="translated">Accessibility PropertyChange 메커니즘에 정보를 전달하기 위해 리스너를 대체 할 수 있도록 선택 모델, 열 모델 등에 대한 변경 사항을 추적합니다.</target>
        </trans-unit>
        <trans-unit id="6eb099e7387de6bf85a8d40f06c034d92ac6ecd2" translate="yes" xml:space="preserve">
          <source>Track changes to table cell selections</source>
          <target state="translated">표 셀 선택에 대한 변경 내용 추적</target>
        </trans-unit>
        <trans-unit id="c66b7f009b0167742d640fa262f51cfe24f7e1b6" translate="yes" xml:space="preserve">
          <source>Track changes to the table contents</source>
          <target state="translated">테이블 내용의 변경 내용 추적</target>
        </trans-unit>
        <trans-unit id="65e0a87c099a65a91db2db4f58962627743249c9" translate="yes" xml:space="preserve">
          <source>Track changes to the table contents (column deletions)</source>
          <target state="translated">테이블 내용에 대한 변경 추적 (열 삭제)</target>
        </trans-unit>
        <trans-unit id="1d342438d211067e35724d0a677edc142443b8f5" translate="yes" xml:space="preserve">
          <source>Track changes to the table contents (column insertions)</source>
          <target state="translated">표 내용에 대한 변경 사항 추적 (열 삽입)</target>
        </trans-unit>
        <trans-unit id="50ccbc484c00663890f1f795f217c92c24c3737f" translate="yes" xml:space="preserve">
          <source>Track changes to the table contents (row deletions)</source>
          <target state="translated">테이블 내용에 대한 변경 사항 추적 (행 삭제)</target>
        </trans-unit>
        <trans-unit id="446c13e903ffb2354471305b15a558b362c4fd92" translate="yes" xml:space="preserve">
          <source>Track changes to the table contents (row insertions)</source>
          <target state="translated">표 내용의 변경 사항 추적 (행 삽입)</target>
        </trans-unit>
        <trans-unit id="c5c5e13e2b305456a9dec987c2f6f2dca26195a2" translate="yes" xml:space="preserve">
          <source>Track color</source>
          <target state="translated">트랙 색상</target>
        </trans-unit>
        <trans-unit id="a7b34541c4884c191419a8069a7262444064fc43" translate="yes" xml:space="preserve">
          <source>Track highlight</source>
          <target state="translated">트랙 하이라이트</target>
        </trans-unit>
        <trans-unit id="4e1c4ca37774d9f37a8d64e698f33ad40e088877" translate="yes" xml:space="preserve">
          <source>Track highlight color</source>
          <target state="translated">하이라이트 색상 추적</target>
        </trans-unit>
        <trans-unit id="5b9a3bdff598e81fc2ed4beeeb4183ada9f91af7" translate="yes" xml:space="preserve">
          <source>Track listener</source>
          <target state="translated">리스너 추적</target>
        </trans-unit>
        <trans-unit id="326e5181e6e5a0c5b463c0729cae4b3c6fa659be" translate="yes" xml:space="preserve">
          <source>Track mouse drags.</source>
          <target state="translated">마우스 드래그를 추적합니다.</target>
        </trans-unit>
        <trans-unit id="c6da43d20337b4308ab27a0b80c9c5792dcbfcc6" translate="yes" xml:space="preserve">
          <source>Track mouse movements.</source>
          <target state="translated">마우스 움직임을 추적합니다.</target>
        </trans-unit>
        <trans-unit id="f0223993d591b54255d8e2534e81ee02cfdbffbf" translate="yes" xml:space="preserve">
          <source>Track mouse movements. This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;Foo&lt;/code&gt;.</source>
          <target state="translated">마우스 움직임을 추적합니다. 이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. &lt;code&gt;Foo&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="4d5b26e00df8696f1e65aa8c0001685e90232117" translate="yes" xml:space="preserve">
          <source>Track of the ScrollBar.</source>
          <target state="translated">ScrollBar의 트랙입니다.</target>
        </trans-unit>
        <trans-unit id="7c4baa95635b1a5b70844da0e070e5c3d8aacc62" translate="yes" xml:space="preserve">
          <source>Track of the ScrollBar. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ScrollBarTrack&lt;/code&gt;.</source>
          <target state="translated">ScrollBar의 트랙입니다. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;ScrollBarTrack&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ac81aad025c15ece6f73ede5d9be10ce3ff9b50" translate="yes" xml:space="preserve">
          <source>Track of the Slider.</source>
          <target state="translated">슬라이더의 트랙.</target>
        </trans-unit>
        <trans-unit id="0277e933fe63e7b985d75afe995bbe8cbe043c54" translate="yes" xml:space="preserve">
          <source>Track of the Slider. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;SliderTrack&lt;/code&gt;.</source>
          <target state="translated">슬라이더의 트랙. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;SliderTrack&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3110b2f188f3db708f8492160a1bb7dbd45632ab" translate="yes" xml:space="preserve">
          <source>Track rectangle</source>
          <target state="translated">직사각형 추적</target>
        </trans-unit>
        <trans-unit id="d2dd7dd67b1998d5b835c2ba1538a4bde306f083" translate="yes" xml:space="preserve">
          <source>Track that the selection model of the TableColumnModel changed.</source>
          <target state="translated">TableColumnModel의 선택 모델이 변경되었는지 추적합니다.</target>
        </trans-unit>
        <trans-unit id="6039ae3bec62ee58d46239c85708e58980430f4a" translate="yes" xml:space="preserve">
          <source>Track.add()</source>
          <target state="translated">Track.add()</target>
        </trans-unit>
        <trans-unit id="c383eb9ec76a8558da2ada8319656f778db25dca" translate="yes" xml:space="preserve">
          <source>Track.get()</source>
          <target state="translated">Track.get()</target>
        </trans-unit>
        <trans-unit id="f06a16518df4333b85e639ec34c445659ec8dcbe" translate="yes" xml:space="preserve">
          <source>Track.remove()</source>
          <target state="translated">Track.remove()</target>
        </trans-unit>
        <trans-unit id="d7cf50c20f4790528323ec22a2123ff40f267630" translate="yes" xml:space="preserve">
          <source>Track.size()</source>
          <target state="translated">Track.size()</target>
        </trans-unit>
        <trans-unit id="c0a1198b7666cb2d73a3a3104c49ade8c53119a2" translate="yes" xml:space="preserve">
          <source>Track.ticks()</source>
          <target state="translated">Track.ticks()</target>
        </trans-unit>
        <trans-unit id="74ea56daea08ea921e0d5a468118b8ca0fbbabb1" translate="yes" xml:space="preserve">
          <source>TrackListener</source>
          <target state="translated">TrackListener</target>
        </trans-unit>
        <trans-unit id="a5b4c1faa7d0457537d0a576a4e1051518a92c7c" translate="yes" xml:space="preserve">
          <source>Tracking an animated image might not always be useful due to the multi-part nature of animated image loading and painting, but it is supported. &lt;code&gt;MediaTracker&lt;/code&gt; treats an animated image as completely loaded when the first frame is completely loaded. At that point, the &lt;code&gt;MediaTracker&lt;/code&gt; signals any waiters that the image is completely loaded. If no &lt;code&gt;ImageObserver&lt;/code&gt;s are observing the image when the first frame has finished loading, the image might flush itself to conserve resources (see &lt;a href=&quot;image#flush()&quot;&gt;&lt;code&gt;Image.flush()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">애니메이션 이미지를 추적하는 것은 애니메이션 이미지로드 및 페인팅의 다중 부분 특성으로 인해 항상 유용하지는 않지만 지원됩니다. &lt;code&gt;MediaTracker&lt;/code&gt; 는 첫 번째 프레임이 완전히로드 될 때 애니메이션 이미지를 완전히로드 된 것으로 처리합니다. 이 시점에서 &lt;code&gt;MediaTracker&lt;/code&gt; 는 이미지가 완전히로드되었음을 웨이터에게 알립니다. 첫 번째 프레임이로드를 마쳤을 때 &lt;code&gt;ImageObserver&lt;/code&gt; 가 이미지를 관찰 하지 않는 경우 이미지가 자체적으로 플러시되어 리소스를 절약 할 수 있습니다 ( &lt;a href=&quot;image#flush()&quot;&gt; &lt;code&gt;Image.flush()&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="a58efd8405db46a290d75d073d8104640ac8bf79" translate="yes" xml:space="preserve">
          <source>Tracking.</source>
          <target state="translated">Tracking.</target>
        </trans-unit>
        <trans-unit id="85320a08907c821c231cad80916218bbb079cb9c" translate="yes" xml:space="preserve">
          <source>Tracking. Table tag &quot;trak&quot; in the Open Type Specification.</source>
          <target state="translated">추적. Open Type 사양의 테이블 태그 「trak」입니다.</target>
        </trans-unit>
        <trans-unit id="983312cae3602bfa06b732c390303d224ae2865c" translate="yes" xml:space="preserve">
          <source>TransactionalWriter</source>
          <target state="translated">TransactionalWriter</target>
        </trans-unit>
        <trans-unit id="6efc1f00062bdc418e52e7a45e8270db5d27a38d" translate="yes" xml:space="preserve">
          <source>TransferHandler</source>
          <target state="translated">TransferHandler</target>
        </trans-unit>
        <trans-unit id="4d39024bf5c0508d93c96f07106cef75e1d3c705" translate="yes" xml:space="preserve">
          <source>TransferHandler.DropLocation</source>
          <target state="translated">TransferHandler.DropLocation</target>
        </trans-unit>
        <trans-unit id="efe59c40447ef80e8562d9b0a2e2377bbef471b6" translate="yes" xml:space="preserve">
          <source>TransferHandler.TransferSupport</source>
          <target state="translated">TransferHandler.TransferSupport</target>
        </trans-unit>
        <trans-unit id="bb5bfba786b0eae0218a1983e05a5411de1d4796" translate="yes" xml:space="preserve">
          <source>TransferQueue</source>
          <target state="translated">TransferQueue</target>
        </trans-unit>
        <trans-unit id="573907bd24612ac4bd00872c28366e83deb01854" translate="yes" xml:space="preserve">
          <source>TransferQueue.getWaitingConsumerCount()</source>
          <target state="translated">TransferQueue.getWaitingConsumerCount()</target>
        </trans-unit>
        <trans-unit id="ca2f116faa0f32c42170a0967ec26a5841ddf432" translate="yes" xml:space="preserve">
          <source>TransferQueue.hasWaitingConsumer()</source>
          <target state="translated">TransferQueue.hasWaitingConsumer()</target>
        </trans-unit>
        <trans-unit id="4323aaff7adee58e9b2c8e02d952d56b56c5ef81" translate="yes" xml:space="preserve">
          <source>TransferQueue.transfer()</source>
          <target state="translated">TransferQueue.transfer()</target>
        </trans-unit>
        <trans-unit id="2e238bfd7c98c64fd2c433c149b7961c4585de03" translate="yes" xml:space="preserve">
          <source>TransferQueue.tryTransfer()</source>
          <target state="translated">TransferQueue.tryTransfer()</target>
        </trans-unit>
        <trans-unit id="f16cd76b3f85cd12bd0f7828042a4912460d34cb" translate="yes" xml:space="preserve">
          <source>TransferSupport</source>
          <target state="translated">TransferSupport</target>
        </trans-unit>
        <trans-unit id="6990335dee7c8275a45849c6fbbf2d43ebf36e28" translate="yes" xml:space="preserve">
          <source>Transferable</source>
          <target state="translated">Transferable</target>
        </trans-unit>
        <trans-unit id="a048d6e6d7ce25b1e50aa81a5c5db3185a0bfb6f" translate="yes" xml:space="preserve">
          <source>Transferring data</source>
          <target state="translated">데이터 전송</target>
        </trans-unit>
        <trans-unit id="e885c1d9baf8cbb3c0238784b38da3846bd64021" translate="yes" xml:space="preserve">
          <source>Transfers bytes from this channel's file to the given writable byte channel.</source>
          <target state="translated">이 채널의 파일에서 지정된 쓰기 가능한 바이트 채널로 바이트를 전송합니다.</target>
        </trans-unit>
        <trans-unit id="db6a55b55707a8b2cb4c137d52447d234470548e" translate="yes" xml:space="preserve">
          <source>Transfers bytes into this channel's file from the given readable byte channel.</source>
          <target state="translated">주어진 읽을 수있는 바이트 채널에서이 채널의 파일로 바이트를 전송합니다.</target>
        </trans-unit>
        <trans-unit id="ae25d2bdbba02d1a038ead90f2f5efded3e23d52" translate="yes" xml:space="preserve">
          <source>Transfers the contents of the system clipboard into the associated text model.</source>
          <target state="translated">시스템 클립 보드의 내용을 관련 텍스트 모델로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="cbd15e68a1ad437641a8f2ad30e88c56745602c4" translate="yes" xml:space="preserve">
          <source>Transfers the contents of the system clipboard into the associated text model. If there is a selection in the associated view, it is replaced with the contents of the clipboard. If there is no selection, the clipboard contents are inserted in front of the current insert position in the associated view. If the clipboard is empty, does nothing.</source>
          <target state="translated">시스템 클립 보드의 내용을 관련 텍스트 모델로 전송합니다. 연결된보기에 선택 항목이 있으면 클립 보드의 내용으로 바뀝니다. 선택 항목이 없으면 클립 보드 내용이 연결된보기의 현재 삽입 위치 앞에 삽입됩니다. 클립 보드가 비어 있으면 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2fa6a81f068210dfbaf40e9bfed692ea6ec54d86" translate="yes" xml:space="preserve">
          <source>Transfers the currently selected range in the associated text model to the system clipboard, leaving the contents in the text model.</source>
          <target state="translated">연관된 텍스트 모델에서 현재 선택된 범위를 시스템 클립 보드로 전송하고 컨텐츠는 텍스트 모델에 남겨 둡니다.</target>
        </trans-unit>
        <trans-unit id="611d1de5340d1e073cceb44e30ed19f5b5770680" translate="yes" xml:space="preserve">
          <source>Transfers the currently selected range in the associated text model to the system clipboard, leaving the contents in the text model. The current selection remains intact. Does nothing for &lt;code&gt;null&lt;/code&gt; selections.</source>
          <target state="translated">연관된 텍스트 모델에서 현재 선택된 범위를 시스템 클립 보드로 전송하고 컨텐츠는 텍스트 모델에 남겨 둡니다. 현재 선택은 그대로 유지됩니다. &lt;code&gt;null&lt;/code&gt; 선택에 대해서는 아무것도하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="35e25f804b7837b202524af028aaad9b7dcb33bd" translate="yes" xml:space="preserve">
          <source>Transfers the currently selected range in the associated text model to the system clipboard, removing the contents from the model.</source>
          <target state="translated">연관된 텍스트 모델에서 현재 선택된 범위를 시스템 클립 보드로 전송하여 모델에서 컨텐츠를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="03b51f11a99e68f0930490fe297cbd6581d1ea4c" translate="yes" xml:space="preserve">
          <source>Transfers the currently selected range in the associated text model to the system clipboard, removing the contents from the model. The current selection is reset. Does nothing for &lt;code&gt;null&lt;/code&gt; selections.</source>
          <target state="translated">연관된 텍스트 모델에서 현재 선택된 범위를 시스템 클립 보드로 전송하여 모델에서 컨텐츠를 제거합니다. 현재 선택이 재설정됩니다. &lt;code&gt;null&lt;/code&gt; 선택에 대해서는 아무것도하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b125d8a36092938479dcc7ee49adeb6009285170" translate="yes" xml:space="preserve">
          <source>Transfers the element to a consumer if it is possible to do so before the timeout elapses.</source>
          <target state="translated">시간 초과가 경과하기 전에 가능한 경우 요소를 소비자에게 전송합니다.</target>
        </trans-unit>
        <trans-unit id="5c9d10af3f672647b4fdfa21f16fbfe5ed54a2b9" translate="yes" xml:space="preserve">
          <source>Transfers the element to a consumer, waiting if necessary to do so.</source>
          <target state="translated">필요한 경우 요소를 소비자에게 전송합니다.</target>
        </trans-unit>
        <trans-unit id="1d93f2dc771c77d1c7018c91e84fbb34bc2155df" translate="yes" xml:space="preserve">
          <source>Transfers the element to a waiting consumer immediately, if possible.</source>
          <target state="translated">가능한 경우 요소를 즉시 대기 소비자에게 전송합니다.</target>
        </trans-unit>
        <trans-unit id="d95d473f4ddddcca073b620f2f4dfda901926428" translate="yes" xml:space="preserve">
          <source>Transfers the focus down one focus traversal cycle.</source>
          <target state="translated">초점을 한 번의 초점 순회주기 아래로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="a649438f3466bfde1245186d107e8aa131a9ed6a" translate="yes" xml:space="preserve">
          <source>Transfers the focus down one focus traversal cycle. If this Container is a focus cycle root, then the focus owner is set to this Container's default Component to focus, and the current focus cycle root is set to this Container. If this Container is not a focus cycle root, then no focus traversal operation occurs.</source>
          <target state="translated">초점을 한 번의 초점 순회주기 아래로 이동합니다. 이 컨테이너가 포커스주기 루트 인 경우 포커스 소유자는 포커스 할 컨테이너의 기본 구성 요소로 설정되고 현재 포커스주기 루트는이 컨테이너로 설정됩니다. 이 컨테이너가 포커스주기 루트가 아니면 포커스 순회 작업이 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4cf02048d56af57db62ca74e366715fef64714da" translate="yes" xml:space="preserve">
          <source>Transfers the focus to the next component, as though this Component were the focus owner.</source>
          <target state="translated">이 컴포넌트가 포커스 소유자 인 것처럼 포커스를 다음 컴포넌트로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="e9d0e96733f538b88f5ddd0ff90dca81a309953d" translate="yes" xml:space="preserve">
          <source>Transfers the focus to the previous component, as though this Component were the focus owner.</source>
          <target state="translated">이 Component가 포커스 소유자 인 것처럼 포커스를 이전 구성 요소로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="4fbf7be553929793707f38c164d9b63a19aeb555" translate="yes" xml:space="preserve">
          <source>Transfers the focus up one focus traversal cycle.</source>
          <target state="translated">초점을 한 초점 순회주기 위로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="39f0ea168130f6ab76321469b3ad2f4afb4a2d4c" translate="yes" xml:space="preserve">
          <source>Transfers the focus up one focus traversal cycle. Typically, the focus owner is set to this Component's focus cycle root, and the current focus cycle root is set to the new focus owner's focus cycle root. If, however, this Component's focus cycle root is a Window, then the focus owner is set to the focus cycle root's default Component to focus, and the current focus cycle root is unchanged.</source>
          <target state="translated">초점을 한 초점 순회주기 위로 이동합니다. 일반적으로 포커스 소유자는이 컴포넌트의 포커스주기 루트로 설정되고 현재 포커스주기 루트는 새 포커스 소유자의 포커스주기 루트로 설정됩니다. 그러나이 컴포넌트의 초점주기 루트가 Window이면 초점 소유자는 초점을 맞추기 위해 초점주기 루트의 기본 컴포넌트로 설정되고 현재 초점주기 루트는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dea51bb13a4467c505ee6181171375f497334d54" translate="yes" xml:space="preserve">
          <source>Transform</source>
          <target state="translated">Transform</target>
        </trans-unit>
        <trans-unit id="e5d5967af8a0915223a35c2324e5a798377e0823" translate="yes" xml:space="preserve">
          <source>Transform the XML &lt;code&gt;Source&lt;/code&gt; to a &lt;code&gt;Result&lt;/code&gt;.</source>
          <target state="translated">XML &lt;code&gt;Source&lt;/code&gt; 를 &lt;code&gt;Result&lt;/code&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="e14559c0bfb9053549b9bac805b4a2bdde7b122a" translate="yes" xml:space="preserve">
          <source>Transform the XML &lt;code&gt;Source&lt;/code&gt; to a &lt;code&gt;Result&lt;/code&gt;. Specific transformation behavior is determined by the settings of the &lt;code&gt;TransformerFactory&lt;/code&gt; in effect when the &lt;code&gt;Transformer&lt;/code&gt; was instantiated and any modifications made to the &lt;code&gt;Transformer&lt;/code&gt; instance.</source>
          <target state="translated">XML &lt;code&gt;Source&lt;/code&gt; 를 &lt;code&gt;Result&lt;/code&gt; 변환합니다 . 특정 변환 동작은 &lt;code&gt;Transformer&lt;/code&gt; 가 인스턴스화 되었을 때 적용 되는 &lt;code&gt;TransformerFactory&lt;/code&gt; 의 설정 과 &lt;code&gt;Transformer&lt;/code&gt; 인스턴스에 대한 수정 사항에 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="f16b98c3656818419f9d10d1f16a20949fc0eef8" translate="yes" xml:space="preserve">
          <source>TransformAttribute</source>
          <target state="translated">TransformAttribute</target>
        </trans-unit>
        <trans-unit id="293722d19cfd51e2e5a09dd2550f71abd35c1f40" translate="yes" xml:space="preserve">
          <source>TransformAttribute.IDENTITY</source>
          <target state="translated">TransformAttribute.IDENTITY</target>
        </trans-unit>
        <trans-unit id="6ee4f327b7aa70652e2e446a2c4d3af120dcf41a" translate="yes" xml:space="preserve">
          <source>TransformException</source>
          <target state="translated">TransformException</target>
        </trans-unit>
        <trans-unit id="d199c2bf6323a8eb70bed703a7c121e6a826146e" translate="yes" xml:space="preserve">
          <source>TransformParameterSpec</source>
          <target state="translated">TransformParameterSpec</target>
        </trans-unit>
        <trans-unit id="825c096160931774c002c019a4ad0fbc2477fc69" translate="yes" xml:space="preserve">
          <source>TransformService</source>
          <target state="translated">TransformService</target>
        </trans-unit>
        <trans-unit id="17d280e1b48229addd9449adbb6dcaefe36078d8" translate="yes" xml:space="preserve">
          <source>Transformation warnings and errors are sent to an &lt;a href=&quot;errorlistener&quot;&gt;&lt;code&gt;ErrorListener&lt;/code&gt;&lt;/a&gt;, at which point the application may decide to report the error or warning, and may decide to throw an &lt;code&gt;Exception&lt;/code&gt; for a non-fatal error. The &lt;code&gt;ErrorListener&lt;/code&gt; may be set via &lt;a href=&quot;transformerfactory#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt;&lt;code&gt;TransformerFactory.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt;&lt;/a&gt; for reporting errors that have to do with syntax errors in the transformation instructions, or via &lt;a href=&quot;transformer#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt;&lt;code&gt;Transformer.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt;&lt;/a&gt; to report errors that occur during the transformation. The &lt;code&gt;ErrorListener&lt;/code&gt; on both objects will always be valid and non-&lt;code&gt;null&lt;/code&gt;, whether set by the application or a default implementation provided by the processor. The default implementation provided by the processor will report all warnings and errors to &lt;code&gt;System.err&lt;/code&gt; and does not throw any &lt;code&gt;Exception&lt;/code&gt;s. Applications are &lt;em&gt;strongly&lt;/em&gt; encouraged to register and use &lt;code&gt;ErrorListener&lt;/code&gt;s that insure proper behavior for warnings and errors.</source>
          <target state="translated">변환 경고 및 오류는 &lt;a href=&quot;errorlistener&quot;&gt; &lt;code&gt;ErrorListener&lt;/code&gt; &lt;/a&gt; 로 전송되며 ,이 시점에서 애플리케이션은 오류 또는 경고를보고하기로 결정하고 치명적이지 않은 오류에 대해 &lt;code&gt;Exception&lt;/code&gt; 를 발생시킬 수 있습니다. &lt;code&gt;ErrorListener&lt;/code&gt; 를을 통해 설정할 수 있습니다 &lt;a href=&quot;transformerfactory#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt; &lt;code&gt;TransformerFactory.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt; &lt;/a&gt; , 또는를 통해 변환 명령의 구문 에러에 관계하는 오류를보고 &lt;a href=&quot;transformer#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt; &lt;code&gt;Transformer.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt; &lt;/a&gt; 보고서 오류 변환 중에 발생합니다. 두 개체 의 &lt;code&gt;ErrorListener&lt;/code&gt; 는 항상 유효하고 &lt;code&gt;null&lt;/code&gt; 이 아닙니다., 응용 프로그램에 의해 설정되거나 프로세서에서 제공하는 기본 구현에 의해 설정됩니다. 프로세서에서 제공하는 기본 구현은 모든 경고 및 오류를 &lt;code&gt;System.err&lt;/code&gt; 에보 고하고 &lt;code&gt;Exception&lt;/code&gt; 을 발생 시키지 않습니다 . 응용 프로그램은 경고 및 오류에 대한 적절한 동작을 보장 하는 &lt;code&gt;ErrorListener&lt;/code&gt; 를 등록하고 사용 &lt;em&gt;하는&lt;/em&gt; 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="ca4d4304cb107b1cd7b72652d0bb4f5b52d6a971" translate="yes" xml:space="preserve">
          <source>Transformations are applied in the following order:</source>
          <target state="translated">변환은 다음 순서로 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="68c170c0011cf476eed353d994b12887940cfc96" translate="yes" xml:space="preserve">
          <source>Transformer</source>
          <target state="translated">Transformer</target>
        </trans-unit>
        <trans-unit id="2789b5cbd9a2821e99e6a150ac992d10d7316d62" translate="yes" xml:space="preserve">
          <source>TransformerConfigurationException</source>
          <target state="translated">TransformerConfigurationException</target>
        </trans-unit>
        <trans-unit id="883af90d3c9644bced4d5e367780c04a85944999" translate="yes" xml:space="preserve">
          <source>TransformerException</source>
          <target state="translated">TransformerException</target>
        </trans-unit>
        <trans-unit id="e1a68aedb7058709ad3ea45966483e59a98fb00d" translate="yes" xml:space="preserve">
          <source>TransformerFactory</source>
          <target state="translated">TransformerFactory</target>
        </trans-unit>
        <trans-unit id="4542b1eb7fb62d74207fd1d6219436a78ac325f3" translate="yes" xml:space="preserve">
          <source>TransformerFactoryConfigurationError</source>
          <target state="translated">TransformerFactoryConfigurationError</target>
        </trans-unit>
        <trans-unit id="fb2dc21dd896d6d0a0c563c36760eec9b21f031c" translate="yes" xml:space="preserve">
          <source>TransformerHandler</source>
          <target state="translated">TransformerHandler</target>
        </trans-unit>
        <trans-unit id="371c312d7f3d482b6fc14ab5d03492d9b7229384" translate="yes" xml:space="preserve">
          <source>TransformerHandler ready to transform SAX events.</source>
          <target state="translated">TransformerHandler가 SAX 이벤트를 변환 할 준비가되었습니다.</target>
        </trans-unit>
        <trans-unit id="427f8149763a71f58d01809ed2f00fbc5d4a7482" translate="yes" xml:space="preserve">
          <source>Transforms a JAR file to or from a packed stream in Pack200 format.</source>
          <target state="translated">JAR 파일을 Pack200 형식의 압축 스트림으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="6b0dfed1f0918a8c74073e271ac82b12aec57541" translate="yes" xml:space="preserve">
          <source>Transforms a JAR file to or from a packed stream in Pack200 format. Please refer to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/pack-spec.html&quot;&gt;Network Transfer Format JSR 200 Specification&lt;/a&gt;</source>
          <target state="translated">Pack200 형식의 패킹 된 스트림간에 JAR 파일을 변환합니다. &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/pack-spec.html&quot;&gt;네트워크 전송 형식 JSR 200 사양을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bfa2086e372da8c2a99ed28990f49bfe633f06b9" translate="yes" xml:space="preserve">
          <source>Transforms a JAR file to or from a packed stream in Pack200 format. Please refer to Network Transfer Format JSR 200 Specification at &lt;a href=&quot;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html&quot;&gt;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html&lt;/a&gt;</source>
          <target state="translated">JAR 파일을 Pack200 형식의 압축 스트림으로 변환합니다. &lt;a href=&quot;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html&quot;&gt;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html의&lt;/a&gt; 네트워크 전송 형식 JSR 200 사양을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="964d11dff9a0989a4149f3c67f66af739120fa89" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in the CS_CIEXYZ conversion color space into this ColorSpace.</source>
          <target state="translated">CS_CIEXYZ 변환 색상 공간에 있다고 가정되는 색상 값을이 ColorSpace로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="dfa9fd51cb460bec26ff5242e0db8ea6b0a6ac83" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in the default CS_sRGB color space into this ColorSpace.</source>
          <target state="translated">기본 CS_sRGB 색상 공간에 있다고 가정되는 색상 값을이 ColorSpace로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="008d412030a72f05f0293bc6570d816095b1aa78" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in this ColorSpace into a value in the default CS_sRGB color space.</source>
          <target state="translated">이 ColorSpace에 있다고 가정되는 색상 값을 기본 CS_sRGB 색상 공간의 값으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="1ea7bb6bdbb4bfdea703d87698316907483d75ac" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in this ColorSpace into the CS_CIEXYZ conversion color space.</source>
          <target state="translated">이 ColorSpace에 있다고 가정되는 색상 값을 CS_CIEXYZ 변환 색상 공간으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="8097dc874352f4cc9957266ecd2d1a92fba37bd5" translate="yes" xml:space="preserve">
          <source>Transforms an array of double precision coordinates by this transform and stores the results into an array of floats.</source>
          <target state="translated">이 변환으로 배정 밀도 좌표 배열을 변환하고 결과를 부동 소수점 배열에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="73e8f01ee5be617d9598539b50d8cc74c29c90e2" translate="yes" xml:space="preserve">
          <source>Transforms an array of double precision coordinates by this transform and stores the results into an array of floats. The coordinates are stored in the arrays starting at the specified offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt;.</source>
          <target state="translated">이 변환으로 배정 밀도 좌표 배열을 변환하고 결과를 부동 소수점 배열에 저장합니다. 좌표는 지정된 오프셋에서 시작하여 &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt; 순서로 배열에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="1e4717fc7623f7c6e00900f73d4f9266a97fa7f9" translate="yes" xml:space="preserve">
          <source>Transforms an array of double precision coordinates by this transform.</source>
          <target state="translated">이 변환으로 배정 밀도 좌표의 배열을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="3a2fd7f74a967d647de81bb0c6f63a449d8179b7" translate="yes" xml:space="preserve">
          <source>Transforms an array of double precision coordinates by this transform. The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the indicated offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt;.</source>
          <target state="translated">이 변환으로 배정 밀도 좌표의 배열을 변환합니다. 두 좌표 배열 섹션은 정확히 동일하거나 결과의 유효성에 영향을주지 않고 동일한 배열의 섹션을 겹칠 수 있습니다. 이 방법을 사용하면 원본 좌표를 변환하기 전에 이전 작업으로 덮어 쓰지 않습니다. 좌표는 표시된 오프셋에서 시작하여 &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt; 순서로 배열에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="4ef140d9661d2dc0e577f7a0436ff72089c61235" translate="yes" xml:space="preserve">
          <source>Transforms an array of floating point coordinates by this transform and stores the results into an array of doubles.</source>
          <target state="translated">이 변환으로 부동 소수점 좌표 배열을 변환하고 결과를 double 배열에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="65af84b8e48fadd9fc23c790fb7e4f9cd44e6477" translate="yes" xml:space="preserve">
          <source>Transforms an array of floating point coordinates by this transform and stores the results into an array of doubles. The coordinates are stored in the arrays starting at the specified offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt;.</source>
          <target state="translated">이 변환으로 부동 소수점 좌표 배열을 변환하고 결과를 double 배열에 저장합니다. 좌표는 지정된 오프셋에서 시작하여 &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt; 순서로 배열에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="056bd2fe87e741967309ff6b6dc50db449abb6bc" translate="yes" xml:space="preserve">
          <source>Transforms an array of floating point coordinates by this transform.</source>
          <target state="translated">이 변환으로 부동 소수점 좌표의 배열을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="ae68447ea2bac8c95899c3c56271dfc25c3bd649" translate="yes" xml:space="preserve">
          <source>Transforms an array of floating point coordinates by this transform. The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the specified offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt;.</source>
          <target state="translated">이 변환으로 부동 소수점 좌표의 배열을 변환합니다. 두 좌표 배열 섹션은 정확히 동일하거나 결과의 유효성에 영향을주지 않고 동일한 배열의 섹션을 겹칠 수 있습니다. 이 방법을 사용하면 원본 좌표를 변환하기 전에 이전 작업으로 덮어 쓰지 않습니다. 좌표는 지정된 오프셋에서 시작하여 &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt; 순서로 배열에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="a189d1395e14c8a46d648c528c1c49627d536ccf" translate="yes" xml:space="preserve">
          <source>Transforms an array of point objects by this transform.</source>
          <target state="translated">이 변환으로 점 개체의 배열을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="eba70e5caa5fbc35bab3fd2051fc0975d4383aeb" translate="yes" xml:space="preserve">
          <source>Transforms an array of point objects by this transform. If any element of the &lt;code&gt;ptDst&lt;/code&gt; array is &lt;code&gt;null&lt;/code&gt;, a new &lt;code&gt;Point2D&lt;/code&gt; object is allocated and stored into that element before storing the results of the transformation.</source>
          <target state="translated">이 변환으로 점 개체의 배열을 변환합니다. &lt;code&gt;ptDst&lt;/code&gt; 배열의 요소 가 &lt;code&gt;null&lt;/code&gt; 이면 변환 결과를 저장하기 전에 새 &lt;code&gt;Point2D&lt;/code&gt; 객체가 할당되고 해당 요소에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="927fa967b55d72a90538c5c3704ad73f24ffc275" translate="yes" xml:space="preserve">
          <source>Transforms an array of relative distance vectors by this transform.</source>
          <target state="translated">이 변환으로 상대 거리 벡터의 배열을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="2e4e88dc726d980f33c725b2bd63d5e396026965" translate="yes" xml:space="preserve">
          <source>Transforms an array of relative distance vectors by this transform. A relative distance vector is transformed without applying the translation components of the affine transformation matrix using the following equations:</source>
          <target state="translated">이 변환으로 상대 거리 벡터의 배열을 변환합니다. 상대 거리 벡터는 다음 방정식을 사용하여 아핀 변환 행렬의 변환 구성 요소를 적용하지 않고 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="4a878cef0e487de3222b24a281cfa14ea24046d7" translate="yes" xml:space="preserve">
          <source>Transforms the &lt;code&gt;Raster&lt;/code&gt; using the matrix specified in the constructor.</source>
          <target state="translated">생성자에 지정된 행렬을 사용 하여 &lt;code&gt;Raster&lt;/code&gt; 를 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0fb30d4e21a4ac5cde40c7f16df8ad43727628d0" translate="yes" xml:space="preserve">
          <source>Transforms the &lt;code&gt;Raster&lt;/code&gt; using the matrix specified in the constructor. An &lt;code&gt;IllegalArgumentException&lt;/code&gt; may be thrown if the number of bands in the source or destination is incompatible with the matrix. See the class comments for more details.</source>
          <target state="translated">생성자에 지정된 행렬을 사용 하여 &lt;code&gt;Raster&lt;/code&gt; 를 변환합니다 . &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가 소스 또는 대상의 밴드 수는 매트릭스 호환되지 않는 경우 발생 될 수있다. 자세한 내용은 수업 댓글을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="1082a333ba612da8e14e625574a4e3c3b0154137" translate="yes" xml:space="preserve">
          <source>Transforms the String into a series of bits that can be compared bitwise to other CollationKeys.</source>
          <target state="translated">문자열을 다른 CollationKey와 비트 단위로 비교할 수있는 일련의 비트로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="25bdaf180ce67e68f08941f5090cebffa74a9d8b" translate="yes" xml:space="preserve">
          <source>Transforms the String into a series of bits that can be compared bitwise to other CollationKeys. CollationKeys provide better performance than Collator.compare when Strings are involved in multiple comparisons. See the Collator class description for an example using CollationKeys.</source>
          <target state="translated">문자열을 다른 CollationKey와 비트 단위로 비교할 수있는 일련의 비트로 변환합니다. CollationKey는 문자열이 여러 비교에 포함될 때 Collator.compare보다 나은 성능을 제공합니다. CollationKeys를 사용한 예제는 Collator 클래스 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="39892d12a2cc739beb6cae6a1582a3e317dae888" translate="yes" xml:space="preserve">
          <source>Transforms the geometry of this &lt;code&gt;Area&lt;/code&gt; using the specified &lt;a href=&quot;affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; 을&lt;/a&gt; 사용 하여이 &lt;code&gt;Area&lt;/code&gt; 의 지오메트리를 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="a69e24c911fcf21af2ea7d86a1d9889bceed5e87" translate="yes" xml:space="preserve">
          <source>Transforms the geometry of this &lt;code&gt;Area&lt;/code&gt; using the specified &lt;a href=&quot;affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt;. The geometry is transformed in place, which permanently changes the enclosed area defined by this object.</source>
          <target state="translated">지정된 &lt;a href=&quot;affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; 을&lt;/a&gt; 사용 하여이 &lt;code&gt;Area&lt;/code&gt; 의 지오메트리를 변환합니다 . 형상이 제자리에서 변형되어이 개체에 의해 정의 된 닫힌 영역이 영구적으로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="51e20dc7854c10e46249bbdcbae2d2f0add8734c" translate="yes" xml:space="preserve">
          <source>Transforms the geometry of this path using the specified &lt;a href=&quot;affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; 을&lt;/a&gt; 사용하여이 경로의 지오메트리를 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="fd83e59f39ae4b46235f81fec2901e6bba013680" translate="yes" xml:space="preserve">
          <source>Transforms the geometry of this path using the specified &lt;a href=&quot;affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt;. The geometry is transformed in place, which permanently changes the boundary defined by this object.</source>
          <target state="translated">지정된 &lt;a href=&quot;affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; 을&lt;/a&gt; 사용하여이 경로의 지오메트리를 변환합니다 . 형상이 제자리에서 변형되어이 객체에 의해 정의 된 경계가 영구적으로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="ced2110be06fab21a481c73f884b4972282935cb" translate="yes" xml:space="preserve">
          <source>Transforms the given class file and returns a new replacement class file.</source>
          <target state="translated">주어진 클래스 파일을 변환하고 새로운 대체 클래스 파일을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="081792ed831d101332b96e13241445d5aa8798ab" translate="yes" xml:space="preserve">
          <source>Transforms the given class file and returns a new replacement class file. This method is invoked when the &lt;a href=&quot;../../../../java.base/java/lang/module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt; bearing &lt;a href=&quot;#transform(java.lang.Module,java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt; is not overridden.</source>
          <target state="translated">주어진 클래스 파일을 변환하고 새로운 대체 클래스 파일을 반환합니다. 이 메서드는 &lt;a href=&quot;../../../../java.base/java/lang/module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt; 베어링 &lt;a href=&quot;#transform(java.lang.Module,java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt; &lt;code&gt;transform&lt;/code&gt; &lt;/a&gt; 이 재정의되지 않은 경우 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="62dfaa310d0a1828c5ee1b085e0538a7560d6840" translate="yes" xml:space="preserve">
          <source>Transforms the relative distance vector specified by &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ptSrc&lt;/code&gt; 로 지정된 상대 거리 벡터를 변환 하고 결과를 &lt;code&gt;ptDst&lt;/code&gt; 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="a9f8d61813a3e293b4ca94f7bb45f8ad3bc5e7b6" translate="yes" xml:space="preserve">
          <source>Transforms the relative distance vector specified by &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt;. A relative distance vector is transformed without applying the translation components of the affine transformation matrix using the following equations:</source>
          <target state="translated">&lt;code&gt;ptSrc&lt;/code&gt; 로 지정된 상대 거리 벡터를 변환 하고 결과를 &lt;code&gt;ptDst&lt;/code&gt; 에 저장합니다 . 상대 거리 벡터는 다음 방정식을 사용하여 아핀 변환 행렬의 변환 구성 요소를 적용하지 않고 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="bd1e29595d66356b0ed3f41bfe07285b0309a762" translate="yes" xml:space="preserve">
          <source>Transforms the source &lt;code&gt;BufferedImage&lt;/code&gt; and stores the results in the destination &lt;code&gt;BufferedImage&lt;/code&gt;.</source>
          <target state="translated">소스 &lt;code&gt;BufferedImage&lt;/code&gt; 를 변환하고 결과를 대상 &lt;code&gt;BufferedImage&lt;/code&gt; 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="77f14ea4e39e560eedc22a9f9212197bab2c5835" translate="yes" xml:space="preserve">
          <source>Transforms the source &lt;code&gt;BufferedImage&lt;/code&gt; and stores the results in the destination &lt;code&gt;BufferedImage&lt;/code&gt;. If the color models for the two images do not match, a color conversion into the destination color model is performed. If the destination image is null, a &lt;code&gt;BufferedImage&lt;/code&gt; is created with the source &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">소스 &lt;code&gt;BufferedImage&lt;/code&gt; 를 변환하고 결과를 대상 &lt;code&gt;BufferedImage&lt;/code&gt; 에 저장합니다 . 두 이미지의 색상 모델이 일치하지 않으면 대상 색상 모델로 색상 변환이 수행됩니다. 대상 이미지가 null 인 경우 소스 &lt;code&gt;ColorModel&lt;/code&gt; 을 사용하여 &lt;code&gt;BufferedImage&lt;/code&gt; 가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="65488e918a1f2eb2eedf027c1cf798535690c673" translate="yes" xml:space="preserve">
          <source>Transforms the source &lt;code&gt;Raster&lt;/code&gt; and stores the results in the destination &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">소스 &lt;code&gt;Raster&lt;/code&gt; 를 변환하고 결과를 대상 &lt;code&gt;Raster&lt;/code&gt; 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="c77a56fe300a99482502db75293aa9630b0d7583" translate="yes" xml:space="preserve">
          <source>Transforms the source &lt;code&gt;Raster&lt;/code&gt; and stores the results in the destination &lt;code&gt;Raster&lt;/code&gt;. This operation performs the transform band by band.</source>
          <target state="translated">소스 &lt;code&gt;Raster&lt;/code&gt; 를 변환하고 결과를 대상 &lt;code&gt;Raster&lt;/code&gt; 에 저장합니다 . 이 작업은 대역별로 변환을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="fa3c1bea1212da2ae4065a3397a955cf429226b5" translate="yes" xml:space="preserve">
          <source>Transforms the specified &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;ptSrc&lt;/code&gt; 를 변환 하고 결과를 &lt;code&gt;ptDst&lt;/code&gt; 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="c9661b85c478517849c21312551c6078efe16afb" translate="yes" xml:space="preserve">
          <source>Transforms the specified &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt;. If &lt;code&gt;ptDst&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a new &lt;a href=&quot;point2d&quot;&gt;&lt;code&gt;Point2D&lt;/code&gt;&lt;/a&gt; object is allocated and then the result of the transformation is stored in this object. In either case, &lt;code&gt;ptDst&lt;/code&gt;, which contains the transformed point, is returned for convenience. If &lt;code&gt;ptSrc&lt;/code&gt; and &lt;code&gt;ptDst&lt;/code&gt; are the same object, the input point is correctly overwritten with the transformed point.</source>
          <target state="translated">지정된 &lt;code&gt;ptSrc&lt;/code&gt; 를 변환 하고 결과를 &lt;code&gt;ptDst&lt;/code&gt; 에 저장합니다 . 경우 &lt;code&gt;ptDst&lt;/code&gt; 인 &lt;code&gt;null&lt;/code&gt; 새 &lt;a href=&quot;point2d&quot;&gt; &lt;code&gt;Point2D&lt;/code&gt; &lt;/a&gt; 객체 할당하고, 변환의 결과가이 객체에 저장된다. 두 경우 모두 편의를 위해 변환 된 점을 포함하는 &lt;code&gt;ptDst&lt;/code&gt; 가 반환됩니다. 경우 &lt;code&gt;ptSrc&lt;/code&gt; 를 하고 &lt;code&gt;ptDst&lt;/code&gt; 동일한 목적이며, 입력 점은 변화 점으로 겹쳐있다.</target>
        </trans-unit>
        <trans-unit id="8f82ebbda17c9e759e1ffad7e1dff30303e7764b" translate="yes" xml:space="preserve">
          <source>Transforms the specified data using the underlying transform algorithm.</source>
          <target state="translated">기본 변환 알고리즘을 사용하여 지정된 데이터를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d0e12033b419cf785ff5ab24a812834715d6cad1" translate="yes" xml:space="preserve">
          <source>Transforms the specified data using the underlying transform algorithm. If the output of this transform is an &lt;code&gt;OctetStreamData&lt;/code&gt;, then this method returns &lt;code&gt;null&lt;/code&gt; and the bytes are written to the specified &lt;code&gt;OutputStream&lt;/code&gt;. Otherwise, the &lt;code&gt;OutputStream&lt;/code&gt; is ignored and the method behaves as if &lt;a href=&quot;#transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)&quot;&gt;&lt;code&gt;transform(Data, XMLCryptoContext)&lt;/code&gt;&lt;/a&gt; were invoked.</source>
          <target state="translated">기본 변환 알고리즘을 사용하여 지정된 데이터를 변환합니다. 이 변환의 출력이 &lt;code&gt;OctetStreamData&lt;/code&gt; 인 경우이 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환 하고 지정된 &lt;code&gt;OutputStream&lt;/code&gt; 에 바이트를 기록 합니다 . 그렇지 않으면 &lt;code&gt;OutputStream&lt;/code&gt; 이 무시되고 메서드는 &lt;a href=&quot;#transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)&quot;&gt; &lt;code&gt;transform(Data, XMLCryptoContext)&lt;/code&gt; &lt;/a&gt; 가 호출 된 것처럼 동작 합니다.</target>
        </trans-unit>
        <trans-unit id="cf5e050a3dfff0a2329b3531d492cc2c81c2d218" translate="yes" xml:space="preserve">
          <source>Transforms the string into a series of characters that can be compared with CollationKey.compareTo.</source>
          <target state="translated">CollationKey.compareTo와 비교할 수있는 일련의 문자로 문자열을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="1fefb842e9f6899ce3a4d4c1995c23d512c00dce" translate="yes" xml:space="preserve">
          <source>Transforms the string into a series of characters that can be compared with CollationKey.compareTo. This overrides java.text.Collator.getCollationKey. It can be overriden in a subclass.</source>
          <target state="translated">문자열을 CollationKey.compareTo와 비교할 수있는 일련의 문자로 변환합니다. 이것은 java.text.Collator.getCollationKey를 대체합니다. 서브 클래스에서 재정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45d5bc5a6500f8488347501d41f5194f063eae68" translate="yes" xml:space="preserve">
          <source>Transient</source>
          <target state="translated">Transient</target>
        </trans-unit>
        <trans-unit id="5b601527b30341f6dd29e898feb7eeba79792b68" translate="yes" xml:space="preserve">
          <source>Transient.value</source>
          <target state="translated">Transient.value</target>
        </trans-unit>
        <trans-unit id="0a0f35f6c482d64e9d2eb22a05cded782e23ff82" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt; rounding according to the context settings.</source>
          <target state="translated">변환 &lt;code&gt;BigInteger&lt;/code&gt; 를 로 &lt;code&gt;BigDecimal&lt;/code&gt; 문맥 설정에 따른 둥근은.</target>
        </trans-unit>
        <trans-unit id="d03eb4f7f8405fdb8867dacd161044d034bbc665" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt; rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">변환 &lt;code&gt;BigInteger&lt;/code&gt; 를 로 &lt;code&gt;BigDecimal&lt;/code&gt; 문맥 설정에 따른 둥근은. &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="12a1e718ac7aa795a8fe3696b9a40666dda52764" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;BigInteger&lt;/code&gt; 를 로 &lt;code&gt;BigDecimal&lt;/code&gt; 와 .</target>
        </trans-unit>
        <trans-unit id="6105c018fcff9985e0750ac22252585e51ec7b62" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">변환 &lt;code&gt;BigInteger&lt;/code&gt; 를 로 &lt;code&gt;BigDecimal&lt;/code&gt; 와 . &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="dd5b4b1af80992eef5e16c9b39f97b4f3e1f5a36" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;BigInteger&lt;/code&gt; 비 스케일 값 및 &lt;code&gt;int&lt;/code&gt; 스케일을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="be0411dfa667d534a22c4a53a6be0938d5e800dc" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The value of the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;(unscaledVal &amp;times;
 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt;, rounded according to the &lt;code&gt;precision&lt;/code&gt; and rounding mode settings.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;BigInteger&lt;/code&gt; 스케일링되지 않은 값과 &lt;code&gt;int&lt;/code&gt; 스케일을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다. &lt;code&gt;BigDecimal&lt;/code&gt; 의 값 은 &lt;code&gt;(unscaledVal &amp;times; 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt; 이며 &lt;code&gt;precision&lt;/code&gt; 및 반올림 모드 설정 에 따라 반올림됩니다.</target>
        </trans-unit>
        <trans-unit id="1b6def0029fa16478fe3115503d9cb59ebbc8d78" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;BigInteger&lt;/code&gt; 의 스케일 없음의 값과 &lt;code&gt;int&lt;/code&gt; (A) 내로 규모 &lt;code&gt;BigDecimal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26956240efce2987468795621b24536f8bca2a27" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;. The value of the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;(unscaledVal &amp;times; 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;BigInteger&lt;/code&gt; 의 스케일 없음의 값과 &lt;code&gt;int&lt;/code&gt; (A) 내로 규모 &lt;code&gt;BigDecimal&lt;/code&gt; . &lt;code&gt;BigDecimal&lt;/code&gt; 의 값 은 &lt;code&gt;(unscaledVal &amp;times; 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4ce05032fd1867eae5c0441d1bd7e85e76c57578" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt; which is the exact decimal representation of the &lt;code&gt;double&lt;/code&gt;'s binary floating-point value.</source>
          <target state="translated">변환 &lt;code&gt;double&lt;/code&gt; 로 &lt;code&gt;BigDecimal&lt;/code&gt; 의 정확한 진수 표현입니다 &lt;code&gt;double&lt;/code&gt; 의 이진 부동 소수점 값.</target>
        </trans-unit>
        <trans-unit id="9f9c3eca67395def6a8eea8b965b84bdef922b01" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt; which is the exact decimal representation of the &lt;code&gt;double&lt;/code&gt;'s binary floating-point value. The scale of the returned &lt;code&gt;BigDecimal&lt;/code&gt; is the smallest value such that &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; is an integer.</source>
          <target state="translated">번역 &lt;code&gt;double&lt;/code&gt; 로 &lt;code&gt;BigDecimal&lt;/code&gt; 의 정확한 진수 표현입니다 &lt;code&gt;double&lt;/code&gt; 의 이진 부동 소수점 값. 리턴 된 &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일은 &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; 이 정수 가되도록 가장 작은 값 입니다.</target>
        </trans-unit>
        <trans-unit id="3d72a49bc7047a382617061e3d1cf87143912ad0" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, using the &lt;code&gt;double&lt;/code&gt;'s canonical string representation provided by the &lt;a href=&quot;../lang/double#toString(double)&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">변환 &lt;code&gt;double&lt;/code&gt; (A) 내로 &lt;code&gt;BigDecimal&lt;/code&gt; 은 USING, &lt;code&gt;double&lt;/code&gt; 의해 제공의 표준 문자열 표현 &lt;a href=&quot;../lang/double#toString(double)&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="850828fbab0c584297016129b6722ea3ab1becd2" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, using the &lt;code&gt;double&lt;/code&gt;'s canonical string representation provided by the &lt;a href=&quot;../lang/double#toString-double-&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">변환 &lt;code&gt;double&lt;/code&gt; (A) 내로 &lt;code&gt;BigDecimal&lt;/code&gt; 은 USING, &lt;code&gt;double&lt;/code&gt; 의해 제공의 표준 문자열 표현 &lt;a href=&quot;../lang/double#toString-double-&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="0b0acdda1ea4473fe3d2e28e8fe67dcd75753e77" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;double&lt;/code&gt; 을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="07b6f09a046e9531f0736348533520c9c60bef0b" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is the smallest value such that &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; is an integer.</source>
          <target state="translated">번역 &lt;code&gt;double&lt;/code&gt; 컨텍스트 설정에 따라 반올림 double 을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다. &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일은 다음 과 같이 가장 작은 값입니다 &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; 이 정수입니다.</target>
        </trans-unit>
        <trans-unit id="6608f31e8495f9aa50255dc68e03f3834b162382" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;long&lt;/code&gt; 을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="fbb9ae3fa6eeea7b936665101ff5f4c0736effcd" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt;, before any rounding, is zero.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;long&lt;/code&gt; 을 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다. 반올림하기 전에 &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="635f4745b71682203a5238c5e6bfa042b0063cc0" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;long&lt;/code&gt; 로 &lt;code&gt;BigDecimal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="562116b88884d3bfcedf2a8b9d640829218018e9" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">변환 &lt;code&gt;long&lt;/code&gt; 로 &lt;code&gt;BigDecimal&lt;/code&gt; . &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="b907c82bf66d3ce6d264268bcbff642f7fedf705" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;long&lt;/code&gt; 스케일 없음의 값과 &lt;code&gt;int&lt;/code&gt; 로 규모 &lt;code&gt;BigDecimal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2d198ea04a92dbcd6d06acdc6325462bd68c515" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;. This &quot;static factory method&quot; is provided in preference to a (&lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;) constructor because it allows for reuse of frequently used &lt;code&gt;BigDecimal&lt;/code&gt; values..</source>
          <target state="translated">변환 &lt;code&gt;long&lt;/code&gt; 스케일 없음의 값과 &lt;code&gt;int&lt;/code&gt; 로 규모 &lt;code&gt;BigDecimal&lt;/code&gt; . 이 &quot;정적 팩토리 메소드&quot;는 ( &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; 자주 사용되는 &lt;code&gt;BigDecimal&lt;/code&gt; 값 을 재사용 할 수 있기 때문에 ) 생성자 됩니다.</target>
        </trans-unit>
        <trans-unit id="328cb54a56130646d7b0d65aacc06ab3c98893f6" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; value into a &lt;code&gt;BigDecimal&lt;/code&gt; with a scale of zero.</source>
          <target state="translated">변환 &lt;code&gt;long&lt;/code&gt; 에 값 &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일이 0의를.</target>
        </trans-unit>
        <trans-unit id="a87266ba09f203dfab987bd4aae1f2f0a54ea17f" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; value into a &lt;code&gt;BigDecimal&lt;/code&gt; with a scale of zero. This &quot;static factory method&quot; is provided in preference to a (&lt;code&gt;long&lt;/code&gt;) constructor because it allows for reuse of frequently used &lt;code&gt;BigDecimal&lt;/code&gt; values.</source>
          <target state="translated">변환 &lt;code&gt;long&lt;/code&gt; 에 값을 &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일이 0의를. 이 &quot;정적 팩토리 메소드&quot;는 자주 사용되는 재사용이 가능하기 때문에 ( &lt;code&gt;long&lt;/code&gt; ) 생성자 보다 우선적으로 제공 됩니다. &lt;code&gt;BigDecimal&lt;/code&gt; 값 됩니다.</target>
        </trans-unit>
        <trans-unit id="293fe29f9465e4541236a2a683d8def15ba05e59" translate="yes" xml:space="preserve">
          <source>Translates a CSS declaration to an AttributeSet that represents the CSS declaration.</source>
          <target state="translated">CSS 선언을 CSS 선언을 나타내는 AttributeSet으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="a2038b8e0a8d2a88746d0944bc0680e5c4225d55" translate="yes" xml:space="preserve">
          <source>Translates a CSS declaration to an AttributeSet that represents the CSS declaration. Typically this would be called as a result of encountering an HTML style attribute.</source>
          <target state="translated">CSS 선언을 CSS 선언을 나타내는 AttributeSet으로 변환합니다. 일반적으로 이것은 HTML 스타일 속성을 만난 결과로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ba1acd76cd3eea42897bda6d064b7ff4157cf75a" translate="yes" xml:space="preserve">
          <source>Translates a byte array containing the two's-complement binary representation of a BigInteger into a BigInteger.</source>
          <target state="translated">BigInteger의 2의 보수 이진 표현을 포함하는 바이트 배열을 BigInteger로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="ffc7d4cdbf5c8bddb6c6be1496ec23afbf00d8df" translate="yes" xml:space="preserve">
          <source>Translates a byte array containing the two's-complement binary representation of a BigInteger into a BigInteger. The input array is assumed to be in</source>
          <target state="translated">BigInteger의 2의 보수 2 진 표현을 포함하는 바이트 배열을 BigInteger로 변환합니다. 입력 배열은</target>
        </trans-unit>
        <trans-unit id="f6e9ef09a1e840c594581eca9c0f1f810823f760" translate="yes" xml:space="preserve">
          <source>Translates a byte sub-array containing the two's-complement binary representation of a BigInteger into a BigInteger.</source>
          <target state="translated">BigInteger의 2의 보수 이진 표현을 포함하는 바이트 하위 배열을 BigInteger로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="fb40a58c27fbf7574f2d1a942c0afe8577489941" translate="yes" xml:space="preserve">
          <source>Translates a byte sub-array containing the two's-complement binary representation of a BigInteger into a BigInteger. The sub-array is specified via an offset into the array and a length. The sub-array is assumed to be in</source>
          <target state="translated">BigInteger의 2의 보수 이진 표현을 포함하는 바이트 하위 배열을 BigInteger로 변환합니다. 하위 배열은 배열의 오프셋과 길이를 통해 지정됩니다. 하위 배열은</target>
        </trans-unit>
        <trans-unit id="9b3629c62a2274b286689ce1b5d3d88452dff8ed" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor and with rounding according to the context settings.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하여 &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자와 동일한 문자 시퀀스를 허용 하고 컨텍스트 설정에 따라 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="66f3db73a74de24506c7866e399005f8c48e2675" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, while allowing a sub-array to be specified and with rounding according to the context settings.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; , &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자 와 동일한 문자 시퀀스 를 허용하면서 하위 배열을 지정하고 컨텍스트 설정에 따라 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="ddeef8af0afe04fb79f071516822c06333c6d754" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, while allowing a sub-array to be specified.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하여 &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자 와 동일한 문자 시퀀스 를 허용하면서 하위 배열을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="302e91b8e2e2d67f864740967f0d29da445a4655" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하여 &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자 와 동일한 문자 시퀀스를 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="e95a387e37c7d74dbc7c9f0331125aee98e460c5" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor and with rounding according to the context settings.</source>
          <target state="translated">(A)의 문자 배열 표현 변환 &lt;code&gt;BigDecimal&lt;/code&gt; (A) 내로 &lt;code&gt;BigDecimal&lt;/code&gt; 하고 &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 과 동일한 문자 시퀀스를 허용합니다. 생성자와 하고 컨텍스트 설정에 따라 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="bda463fe5a4d05c22f4655928b6f483669d25433" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, while allowing a sub-array to be specified and with rounding according to the context settings.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하고 &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 과 동일한 문자 시퀀스를 허용합니다. 생성자 를 허용하면서 서브 어레이를 지정할 수 있으며 컨텍스트 설정에 따라 반올림 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5367af291d1dad8cf8aee053e94387ebe41d59db" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, while allowing a sub-array to be specified.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하고 &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 과 동일한 문자 시퀀스를 허용합니다. 생성자 를 허용하면서 하위 배열을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6cbb8f1f8949120d165c79b502c88af315638ba" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자 배열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하여&lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자.</target>
        </trans-unit>
        <trans-unit id="caaec521da0f0769da2d9ee6de81cb7b5c669360" translate="yes" xml:space="preserve">
          <source>Translates a key object, whose provider may be unknown or potentially untrusted, into a corresponding key object of this key factory.</source>
          <target state="translated">공급자를 알 수 없거나 신뢰할 수없는 키 객체를이 키 팩토리의 해당 키 객체로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d2aff912a8bf73e171f624f60eac67132e23fef3" translate="yes" xml:space="preserve">
          <source>Translates a key object, whose provider may be unknown or potentially untrusted, into a corresponding key object of this secret-key factory.</source>
          <target state="translated">공급자를 알 수 없거나 신뢰할 수없는 키 객체를이 비밀 키 팩토리의 해당 키 객체로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d55036512c3d06de57f540a3a010abfa06e4e9a7" translate="yes" xml:space="preserve">
          <source>Translates a string from ASCII Compatible Encoding (ACE) to Unicode, as defined by the ToUnicode operation of &lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt; 의 ToUnicode 조작에 의해 정의 된대로 ASCII 호환 인코딩 (ACE)에서 유니 코드로 문자열을 변환합니다. .</target>
        </trans-unit>
        <trans-unit id="b943d5a14e4888451ba8fa6215b0e7f72d3762c5" translate="yes" xml:space="preserve">
          <source>Translates a string from Unicode to ASCII Compatible Encoding (ACE), as defined by the ToASCII operation of &lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt; 의 ToASCII 조작으로 정의 된대로 문자열을 유니 코드에서 ASCII 호환 인코딩 (ACE)으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="15a147b9376f1199d2ad88e123d0e96fd830257c" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format using a specific &lt;a href=&quot;../nio/charset/charset&quot;&gt;Charset&lt;/a&gt;.</source>
          <target state="translated">특정 &lt;a href=&quot;../nio/charset/charset&quot;&gt;Charset을&lt;/a&gt; 사용하여 문자열을 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 형식으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="18e640a882167656e723f728e2f4de3476500cb4" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format using a specific &lt;a href=&quot;../nio/charset/charset&quot;&gt;Charset&lt;/a&gt;. This method uses the supplied charset to obtain the bytes for unsafe characters.</source>
          <target state="translated">특정 &lt;a href=&quot;../nio/charset/charset&quot;&gt;Charset을&lt;/a&gt; 사용하여 문자열을 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 형식으로 변환합니다 . 이 메서드는 제공된 문자 집합을 사용하여 안전하지 않은 문자에 대한 바이트를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="41331656369c1cf815ba99b496333f69b723fb9d" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format using a specific encoding scheme.</source>
          <target state="translated">특정 인코딩 체계를 사용하여 문자열을 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 형식으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="4d59a776cc2656bd77a8e0f9b385251da96dd1ab" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format using a specific encoding scheme. This method uses the supplied encoding scheme to obtain the bytes for unsafe characters.</source>
          <target state="translated">특정 인코딩 체계를 사용하여 문자열을 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 형식으로 변환합니다. 이 방법은 제공된 인코딩 체계를 사용하여 안전하지 않은 문자의 바이트를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="e047b85bd71414efc578845b6d8e1d90059ffd0f" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; format. This method uses the platform's default encoding as the encoding scheme to obtain the bytes for unsafe characters.</source>
          <target state="translated">문자열을 &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; 형식으로 변환합니다. 이 방법은 플랫폼의 기본 인코딩을 인코딩 체계로 사용하여 안전하지 않은 문자의 바이트를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="3d6fdd19cff492d724611c02c4f9915d3d318b42" translate="yes" xml:space="preserve">
          <source>Translates a string to a &lt;code&gt;CSS.Attribute&lt;/code&gt; object.</source>
          <target state="translated">문자열을 &lt;code&gt;CSS.Attribute&lt;/code&gt; 개체 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="6523b46dfee14cc5ccfd08c4844f372114c8c964" translate="yes" xml:space="preserve">
          <source>Translates a string to a &lt;code&gt;CSS.Attribute&lt;/code&gt; object. This will return &lt;code&gt;null&lt;/code&gt; if there is no attribute by the given name.</source>
          <target state="translated">문자열을 &lt;code&gt;CSS.Attribute&lt;/code&gt; 개체 로 변환 합니다. 주어진 이름의 속성이 없으면 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1a03634ded790fbc32d129461d25a7e0c735ef3c" translate="yes" xml:space="preserve">
          <source>Translates an &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;int&lt;/code&gt; 를 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="50f92eea2ff33d3a5a4c74ff1405a8ec3381c5c3" translate="yes" xml:space="preserve">
          <source>Translates an &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt;, before any rounding, is zero.</source>
          <target state="translated">컨텍스트 설정에 따라 반올림 하여 &lt;code&gt;int&lt;/code&gt; 를 &lt;code&gt;BigDecimal&lt;/code&gt; 로 변환 합니다. &lt;code&gt;BigDecimal&lt;/code&gt; 의 규모반올림하기 전에 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="f70d3f5cc72a85aa103ea23194ec6e6ddb1f1544" translate="yes" xml:space="preserve">
          <source>Translates an &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;int&lt;/code&gt; 로 &lt;code&gt;BigDecimal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e229a02a15acf36cd72ba5270b9512fadf9ab47a" translate="yes" xml:space="preserve">
          <source>Translates an &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">변환 &lt;code&gt;int&lt;/code&gt; 로 &lt;code&gt;BigDecimal&lt;/code&gt; . &lt;code&gt;BigDecimal&lt;/code&gt; 의 스케일 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="5631a32fbfb0916283f5cdb861387eaa63bcf18e" translate="yes" xml:space="preserve">
          <source>Translates an offset into the components text to a line number.</source>
          <target state="translated">오프셋을 구성 요소 문자로 줄 번호로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="6133237a8ef8f8b52216fd6d50731b5e67e119a6" translate="yes" xml:space="preserve">
          <source>Translates the String representation of a BigInteger in the specified radix into a BigInteger.</source>
          <target state="translated">지정된 기수로 된 BigInteger의 문자열 표현을 BigInteger로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="774d5f6f79524d7cd4c3b2adafefd8cab0c033bc" translate="yes" xml:space="preserve">
          <source>Translates the String representation of a BigInteger in the specified radix into a BigInteger. The String representation consists of an optional minus or plus sign followed by a sequence of one or more digits in the specified radix. The character-to-digit mapping is provided by &lt;code&gt;
 Character.digit&lt;/code&gt;. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">지정된 기수로 된 BigInteger의 문자열 표현을 BigInteger로 변환합니다. 문자열 표현은 선택적 마이너스 또는 더하기 기호와 지정된 기수로 된 하나 이상의 숫자 시퀀스로 구성됩니다. 문자 대 숫자 매핑은 &lt;code&gt; Character.digit&lt;/code&gt; 에 의해 제공됩니다 . 문자열에는 불필요한 문자 (예 : 공백)가 포함될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1b727c4bb71d79e76c3eeaf58bdc8ae8accde65d" translate="yes" xml:space="preserve">
          <source>Translates the String representation of a BigInteger in the specified radix into a BigInteger. The String representation consists of an optional minus or plus sign followed by a sequence of one or more digits in the specified radix. The character-to-digit mapping is provided by &lt;code&gt;Character.digit&lt;/code&gt;. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">지정된 기수의 BigInteger의 String 표현을 BigInteger로 변환합니다. 문자열 표현은 선택적 빼기 또는 더하기 부호와 지정된 기수의 하나 이상의 숫자 순서로 구성됩니다. 문자 대 숫자 매핑은 &lt;code&gt;Character.digit&lt;/code&gt; 에 의해 제공됩니다 . 문자열은 외부 문자를 포함 할 수 없습니다 (예 : 공백).</target>
        </trans-unit>
        <trans-unit id="5235128334345d97ca02078e3dfaf9a0e7f162b8" translate="yes" xml:space="preserve">
          <source>Translates the decimal String representation of a BigInteger into a BigInteger.</source>
          <target state="translated">BigInteger의 10 진수 문자열 표현을 BigInteger로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="1971dfcab7363ad427f03f6ddc91d2aaa314e6a6" translate="yes" xml:space="preserve">
          <source>Translates the decimal String representation of a BigInteger into a BigInteger. The String representation consists of an optional minus sign followed by a sequence of one or more decimal digits. The character-to-digit mapping is provided by &lt;code&gt;Character.digit&lt;/code&gt;. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">BigInteger의 10 진수 문자열 표시를 BigInteger로 변환합니다. 문자열 표현은 선택적 빼기 부호와 하나 이상의 10 진수 숫자로 구성됩니다. 문자-숫자 매핑은 &lt;code&gt;Character.digit&lt;/code&gt; 에서 제공합니다 . . 문자열은 외부 문자를 포함 할 수 없습니다 (예 : 공백).</target>
        </trans-unit>
        <trans-unit id="4e4b5a0e5ddb018c2a9f03778e101a4b6fc363de" translate="yes" xml:space="preserve">
          <source>Translates the event's coordinates to a new position by adding specified &lt;code&gt;x&lt;/code&gt; (horizontal) and &lt;code&gt;y&lt;/code&gt; (vertical) offsets.</source>
          <target state="translated">지정된 &lt;code&gt;x&lt;/code&gt; (가로) 및 &lt;code&gt;y&lt;/code&gt; (세로) 오프셋 을 추가하여 이벤트의 좌표를 새 위치로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="825c354d4bccc25c0da888574a518292c54f37fd" translate="yes" xml:space="preserve">
          <source>Translates the immutable allocation given to the view to a mutable allocation that represents the interior allocation (i.e. the bounds of the given allocation with the top, left, bottom, and right insets removed.</source>
          <target state="translated">뷰에 제공된 변경 불가능한 할당을 내부 할당을 나타내는 변경 가능한 할당으로 변환합니다 (즉, 상단, 왼쪽, 하단 및 오른쪽 삽입이 제거 된 주어진 할당의 경계).</target>
        </trans-unit>
        <trans-unit id="4c18d709462554d0d0dd4fe5adf3ed3f272379fc" translate="yes" xml:space="preserve">
          <source>Translates the immutable allocation given to the view to a mutable allocation that represents the interior allocation (i.e. the bounds of the given allocation with the top, left, bottom, and right insets removed. It is expected that the returned value would be further mutated to represent an allocation to a child view. This is implemented to reuse an instance variable so it avoids creating excessive Rectangles. Typically the result of calling this method would be fed to the &lt;code&gt;childAllocation&lt;/code&gt; method.</source>
          <target state="translated">뷰에 주어진 불변 할당을 내부 할당을 나타내는 가변 할당으로 변환합니다. 자식 뷰에 대한 할당을 나타냅니다. 이것은 인스턴스 변수를 재사용하기 위해 구현되어 과도한 Rectangles 생성을 방지합니다. 일반적으로이 메서드를 호출 한 결과는 &lt;code&gt;childAllocation&lt;/code&gt; 메서드에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="e2b96aa4a9a451d5f3418522e608339a89afd3ce" translate="yes" xml:space="preserve">
          <source>Translates the origin of the &lt;code&gt;Graphics2D&lt;/code&gt; context to the point (</source>
          <target state="translated">&lt;code&gt;Graphics2D&lt;/code&gt; 컨텍스트 의 원점을 점 (</target>
        </trans-unit>
        <trans-unit id="e02760b95babe4406d2b07cde966f6f51edd7199" translate="yes" xml:space="preserve">
          <source>Translates the origin of the graphics context to the point (</source>
          <target state="translated">그래픽 컨텍스트의 원점을 점 (</target>
        </trans-unit>
        <trans-unit id="e18a6a440e04dedd2123054e87140f4662bf95e4" translate="yes" xml:space="preserve">
          <source>Translates the sign-magnitude representation of a BigInteger into a BigInteger.</source>
          <target state="translated">BigInteger의 부호-크기 표현을 BigInteger로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="5c52de63addaade59e66530488f1741aa06fc2ff" translate="yes" xml:space="preserve">
          <source>Translates the sign-magnitude representation of a BigInteger into a BigInteger. The sign is represented as an integer signum value: -1 for negative, 0 for zero, or 1 for positive. The magnitude is a byte array in</source>
          <target state="translated">BigInteger의 부호 크기 표현을 BigInteger로 변환합니다. 부호는 정수 부호 값으로 표시됩니다. -1은 음수, 0은 0 또는 양수입니다. 크기는 바이트 배열입니다</target>
        </trans-unit>
        <trans-unit id="7839f0a5c8b7933f3cc78940cb3dd38bec3ff253" translate="yes" xml:space="preserve">
          <source>Translates the sign-magnitude representation of a BigInteger into a BigInteger. The sign is represented as an integer signum value: -1 for negative, 0 for zero, or 1 for positive. The magnitude is a sub-array of a byte array in</source>
          <target state="translated">BigInteger의 부호-크기 표현을 BigInteger로 변환합니다. 부호는 정수 부호 값으로 표시됩니다. 음의 경우 -1, 0의 경우 0, 양의 경우 1입니다. 크기는 바이트 배열의 하위 배열입니다.</target>
        </trans-unit>
        <trans-unit id="b1f7d86aa97c232e1e86505ef8d3a7fa730bd5df" translate="yes" xml:space="preserve">
          <source>Translates the string representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same strings as the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, with rounding according to the context settings.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하고 컨텍스트 설정에 따라 반올림 하여 &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 생성자 와 동일한 문자열을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="eaeb644e5e369708ac477fe488962acceba1548c" translate="yes" xml:space="preserve">
          <source>Translates the string representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same strings as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, with rounding according to the context settings.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 하고 &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt; 과 동일한 문자열을 허용합니다.컨텍스트 설정에 따라 반올림 생성자 .</target>
        </trans-unit>
        <trans-unit id="499a30efe9e4830de1212247e149232625720a07" translate="yes" xml:space="preserve">
          <source>Translates the string representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 문자열 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2f81c6b37d85c35c397c7c1fc049f4a6cba771b7" translate="yes" xml:space="preserve">
          <source>Translates the string representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The string representation consists of an optional sign, &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt; '\u002B'&lt;/code&gt;) or &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002D'&lt;/code&gt;), followed by a sequence of zero or more decimal digits (&quot;the integer&quot;), optionally followed by a fraction, optionally followed by an exponent.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 의 캐릭터 라인 표현을 BigDecimal 로 &lt;code&gt;BigDecimal&lt;/code&gt; 합니다. 문자열 표현은 선택적 부호, &lt;code&gt;'+'&lt;/code&gt; ( &lt;code&gt; '\u002B'&lt;/code&gt; ) 또는 &lt;code&gt;'-'&lt;/code&gt; ( &lt;code&gt;'\u002D'&lt;/code&gt; )와 0 개 이상의 10 진수 ( &quot;정수&quot;)로 구성되며 선택적으로 분수, 선택적으로 지수가 뒤 따릅니다.</target>
        </trans-unit>
        <trans-unit id="eb8964ccdde4738d7a6c1a21ebccb3df525f2317" translate="yes" xml:space="preserve">
          <source>Translates the vertices of the &lt;code&gt;Polygon&lt;/code&gt; by &lt;code&gt;deltaX&lt;/code&gt; along the x axis and by &lt;code&gt;deltaY&lt;/code&gt; along the y axis.</source>
          <target state="translated">정점의 변환 &lt;code&gt;Polygon&lt;/code&gt; 의해 &lt;code&gt;deltaX&lt;/code&gt; , x 축 방향 및 의해 &lt;code&gt;deltaY&lt;/code&gt; 에 은 y 축을 따라있다.</target>
        </trans-unit>
        <trans-unit id="c9b81f4434072ae8317cd4881eb72a78c28abadf" translate="yes" xml:space="preserve">
          <source>Translates this &lt;code&gt;Rectangle&lt;/code&gt; the indicated distance, to the right along the X coordinate axis, and downward along the Y coordinate axis.</source>
          <target state="translated">이 &lt;code&gt;Rectangle&lt;/code&gt; 을 표시된 거리만큼 X 좌표 축을 따라 오른쪽으로, Y 좌표 축을 따라 아래쪽으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="bd3490e9dcb882736aa1fbe75fa8cbd7e5c2871a" translate="yes" xml:space="preserve">
          <source>Translates this event so that its</source>
          <target state="translated">이 이벤트를 변환하여</target>
        </trans-unit>
        <trans-unit id="46afa636b8197327993eaf1b49aab96d5b3f07c3" translate="yes" xml:space="preserve">
          <source>Translates this point, at location &lt;code&gt;(x,y)&lt;/code&gt;, by &lt;code&gt;dx&lt;/code&gt; along the &lt;code&gt;x&lt;/code&gt; axis and &lt;code&gt;dy&lt;/code&gt; along the &lt;code&gt;y&lt;/code&gt; axis so that it now represents the point &lt;code&gt;(x+dx,y+dy)&lt;/code&gt;.</source>
          <target state="translated">위치,이 점을 변환 &lt;code&gt;(x,y)&lt;/code&gt; 로 하여, &lt;code&gt;dx&lt;/code&gt; 따라 &lt;code&gt;x&lt;/code&gt; 축과 &lt;code&gt;dy&lt;/code&gt; 따라 &lt;code&gt;y&lt;/code&gt; 지금 시점 나타내도록 축 &lt;code&gt;(x+dx,y+dy)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27f9f90a8562e3a6daa8604c9d65472f00705484" translate="yes" xml:space="preserve">
          <source>Transmits a control command to the terminal device.</source>
          <target state="translated">제어 명령을 단말 장치로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="2eb84afc4984bf8539bbea8f41cfe6586118788c" translate="yes" xml:space="preserve">
          <source>Transmits the command APDU stored in the command ByteBuffer and receives the response APDU in the response ByteBuffer.</source>
          <target state="translated">명령 ByteBuffer에 저장된 명령 APDU를 전송하고 응답 ByteBuffer에서 응답 APDU를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="804af4a2759c5a01aa7066cf79da999eddc4160a" translate="yes" xml:space="preserve">
          <source>Transmits the specified command APDU to the Smart Card and returns the response APDU.</source>
          <target state="translated">지정된 명령 APDU를 스마트 카드로 전송하고 응답 APDU를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="da34ba9de444c96ddc1a3bae0850b2622a0572d5" translate="yes" xml:space="preserve">
          <source>Transmitter</source>
          <target state="translated">Transmitter</target>
        </trans-unit>
        <trans-unit id="51450f02a2587b281bcd471db6d893f369739bf2" translate="yes" xml:space="preserve">
          <source>Transmitter.close()</source>
          <target state="translated">Transmitter.close()</target>
        </trans-unit>
        <trans-unit id="f9cb2258b1778d8c3bc3517121ceaaa1554dff9f" translate="yes" xml:space="preserve">
          <source>Transmitter.getReceiver()</source>
          <target state="translated">Transmitter.getReceiver()</target>
        </trans-unit>
        <trans-unit id="9331c814a22fa32349ceb6cda3994482fea2c369" translate="yes" xml:space="preserve">
          <source>Transmitter.setReceiver()</source>
          <target state="translated">Transmitter.setReceiver()</target>
        </trans-unit>
        <trans-unit id="7cb338a916152e13525f9822a4d915c168c521f0" translate="yes" xml:space="preserve">
          <source>Transparency</source>
          <target state="translated">Transparency</target>
        </trans-unit>
        <trans-unit id="d2c3637cb4e43ccc217a82837601b3bc7345e10c" translate="yes" xml:space="preserve">
          <source>Transparent pixels are drawn in the specified background color. This operation is equivalent to filling a rectangle of the width and height of the specified image with the given color and then drawing the image on top of it, but possibly more efficient.</source>
          <target state="translated">투명 픽셀은 지정된 배경색으로 그려집니다. 이 작업은 지정된 이미지의 너비와 높이의 사각형을 지정된 색상으로 채운 다음 그 위에 이미지를 그리는 것과 동일하지만 더 효율적일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8173e5a0ab0d66651e0708a8bcbefeef2dd3831c" translate="yes" xml:space="preserve">
          <source>Traversal of elements should be accomplished through the iterator. The behaviour of traversal is undefined if the spliterator is operated after the iterator is returned.</source>
          <target state="translated">요소의 순회는 반복자를 통해 수행해야합니다. 반복기가 리턴 된 후 스플리터가 작동되면 순회 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="30d46763ec7881d4f58abae3049a96683c8f9143" translate="yes" xml:space="preserve">
          <source>Traversal of elements should be accomplished through the spliterator. The behaviour of splitting and traversal is undefined if the iterator is operated on after the spliterator is returned, or the initially reported size is not equal to the actual number of elements in the source.</source>
          <target state="translated">요소 탐색은 스플리터를 통해 수행해야합니다. 분할기가 반환 된 후 반복기가 작동되거나 처음에보고 된 크기가 소스의 실제 요소 수와 같지 않으면 분할 및 순회 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="00ca3dda7684f8348bfee89b641a056d672651d3" translate="yes" xml:space="preserve">
          <source>Traversal of elements should be accomplished through the spliterator. The behaviour of splitting and traversal is undefined if the iterator is operated on after the spliterator is returned.</source>
          <target state="translated">요소 탐색은 스플리터를 통해 수행해야합니다. 스플리터가 리턴 된 후 이터레이터가 작동하는 경우 스 플리 팅 및 순회 동작은 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0387bf3d77b5fef9a75cac2dd19feeffbcd116dd" translate="yes" xml:space="preserve">
          <source>Traversal via iterators is fast and cannot encounter interference from other threads. Iterators rely on unchanging snapshots of the array at the time the iterators were constructed.</source>
          <target state="translated">반복자를 통한 순회는 빠르며 다른 스레드의 간섭을받을 수 없습니다. 반복자는 반복자가 생성 될 때 변경되지 않은 배열의 스냅 샷에 의존합니다.</target>
        </trans-unit>
        <trans-unit id="1ba08ab52cde7420cbd3c26bc714af709c837cd8" translate="yes" xml:space="preserve">
          <source>Traverse both forward and backward from a given position in the text. Calls to notBoundary() in this example represents some additional stopping criteria.</source>
          <target state="translated">텍스트의 주어진 위치에서 앞뒤로 이동합니다. 이 예제에서 notBoundary ()에 대한 호출은 몇 가지 추가 중지 기준을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d3b823617556e185dfc8f7708a19dd8b14580a0b" translate="yes" xml:space="preserve">
          <source>Traverse the text backwards, from end to start</source>
          <target state="translated">끝에서 시작하여 텍스트를 뒤로 이동</target>
        </trans-unit>
        <trans-unit id="b0fa76c6202418f069b17f36977c45c010c2e7cc" translate="yes" xml:space="preserve">
          <source>Traverse the text from start to finish</source>
          <target state="translated">처음부터 끝까지 텍스트 탐색</target>
        </trans-unit>
        <trans-unit id="6cfb3f423da6f9b668b3796ce211f04c5664f3c4" translate="yes" xml:space="preserve">
          <source>TrayIcon</source>
          <target state="translated">TrayIcon</target>
        </trans-unit>
        <trans-unit id="1f2519f8ce9c84631c047f73037eaba4b5b2a85a" translate="yes" xml:space="preserve">
          <source>TrayIcon.MessageType</source>
          <target state="translated">TrayIcon.MessageType</target>
        </trans-unit>
        <trans-unit id="36e87512c1528662310d7885077c416b4a4b1f33" translate="yes" xml:space="preserve">
          <source>Tree Collapsed notification.</source>
          <target state="translated">트리 축소 알림.</target>
        </trans-unit>
        <trans-unit id="2742401606d0c8f96325af9e2b138701c56e746b" translate="yes" xml:space="preserve">
          <source>Tree Model Expansion notification.</source>
          <target state="translated">트리 모델 확장 알림.</target>
        </trans-unit>
        <trans-unit id="4161bfebed9f9c960bd7ab5e0e6e0237d88cbbc6" translate="yes" xml:space="preserve">
          <source>Tree Model Node change notification.</source>
          <target state="translated">트리 모델 노드 변경 알림.</target>
        </trans-unit>
        <trans-unit id="4ffa74fc39b536118d1cc2aa97633b9e229589c6" translate="yes" xml:space="preserve">
          <source>Tree Model structure change change notification.</source>
          <target state="translated">트리 모델 구조 변경 변경 알림.</target>
        </trans-unit>
        <trans-unit id="dba7d2fe0afcc2586ca1bb70318055eecdc7653f" translate="yes" xml:space="preserve">
          <source>Tree Selection Listener value change method.</source>
          <target state="translated">Tree Selection Listener 값 변경 방법.</target>
        </trans-unit>
        <trans-unit id="c09795dc71146147df1abd8c557a58c68572f224" translate="yes" xml:space="preserve">
          <source>Tree Selection Listener value change method. Used to fire the property change</source>
          <target state="translated">Tree Selection Listener 값 변경 방법. 속성 변경을 시작하는 데 사용</target>
        </trans-unit>
        <trans-unit id="da176591218d6b9413574c9a3c9b92a3503156c2" translate="yes" xml:space="preserve">
          <source>Tree region.</source>
          <target state="translated">트리 영역.</target>
        </trans-unit>
        <trans-unit id="a3a4c2daddaad45d3cbd017025ec1a7fdd2624c8" translate="yes" xml:space="preserve">
          <source>Tree region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;Tree&lt;/code&gt;.</source>
          <target state="translated">트리 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;Tree&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c1e40ca554c47c4abe17a3bcfbb15f5c6c3e0e5" translate="yes" xml:space="preserve">
          <source>TreeCancelEditingAction</source>
          <target state="translated">TreeCancelEditingAction</target>
        </trans-unit>
        <trans-unit id="054d73668141f4e34f9710ddedd10497b8f50b27" translate="yes" xml:space="preserve">
          <source>TreeCellEditor</source>
          <target state="translated">TreeCellEditor</target>
        </trans-unit>
        <trans-unit id="77de7b283bcdd9c976fda44057abde6f646e8916" translate="yes" xml:space="preserve">
          <source>TreeCellRenderer</source>
          <target state="translated">TreeCellRenderer</target>
        </trans-unit>
        <trans-unit id="0b4426777e99bdd48c1a82720ccd9ceabfbe6ede" translate="yes" xml:space="preserve">
          <source>TreeControlIcon</source>
          <target state="translated">TreeControlIcon</target>
        </trans-unit>
        <trans-unit id="937af705941240aed800cf993fd9f77225b9348d" translate="yes" xml:space="preserve">
          <source>TreeExpansionEvent</source>
          <target state="translated">TreeExpansionEvent</target>
        </trans-unit>
        <trans-unit id="10cf5f6e68fc62c4e28263d60bad5955143dee33" translate="yes" xml:space="preserve">
          <source>TreeExpansionHandler</source>
          <target state="translated">TreeExpansionHandler</target>
        </trans-unit>
        <trans-unit id="1fec3f09f2646363bd1c554062bba38bc5c3b066" translate="yes" xml:space="preserve">
          <source>TreeExpansionListener</source>
          <target state="translated">TreeExpansionListener</target>
        </trans-unit>
        <trans-unit id="e929cdbba53a6b37d4bed5873ccda9277e611aaa" translate="yes" xml:space="preserve">
          <source>TreeFolderIcon</source>
          <target state="translated">TreeFolderIcon</target>
        </trans-unit>
        <trans-unit id="993a4151015481e9dd7bf7595b3b33dc7c0d807f" translate="yes" xml:space="preserve">
          <source>TreeHomeAction</source>
          <target state="translated">TreeHomeAction</target>
        </trans-unit>
        <trans-unit id="204b15c46ad5165b7272ae5297180b25fdcf169f" translate="yes" xml:space="preserve">
          <source>TreeHomeAction is used to handle end/home actions.</source>
          <target state="translated">TreeHomeAction은 종료 / 홈 작업을 처리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="238a1e05032e91f500826fc61db222b303e81a74" translate="yes" xml:space="preserve">
          <source>TreeHomeAction is used to handle end/home actions. Scrolls either the first or last cell to be visible based on direction.</source>
          <target state="translated">TreeHomeAction은 종료 / 홈 작업을 처리하는 데 사용됩니다. 방향에 따라 표시되도록 첫 번째 또는 마지막 셀을 스크롤합니다.</target>
        </trans-unit>
        <trans-unit id="72607d837d74f0558f12e29788b1ea23dfbc3ab5" translate="yes" xml:space="preserve">
          <source>TreeIncrementAction</source>
          <target state="translated">TreeIncrementAction</target>
        </trans-unit>
        <trans-unit id="38c8915984b93a85a1c5fafebc1d5e55681aec05" translate="yes" xml:space="preserve">
          <source>TreeIncrementAction is used to handle up/down actions.</source>
          <target state="translated">TreeIncrementAction은 업 / 다운 액션을 처리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8191d246418261f34e79c650a33afec67223d0c5" translate="yes" xml:space="preserve">
          <source>TreeIncrementAction is used to handle up/down actions. Selection is moved up or down based on direction.</source>
          <target state="translated">TreeIncrementAction은 업 / 다운 액션을 처리하는 데 사용됩니다. 선택은 방향에 따라 위아래로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="8b4349d9ab1f617e5d9b005f80e6099098643baa" translate="yes" xml:space="preserve">
          <source>TreeLeafIcon</source>
          <target state="translated">TreeLeafIcon</target>
        </trans-unit>
        <trans-unit id="f5b2faff4d9b4cc3e53f74c54f2316fc6c676530" translate="yes" xml:space="preserve">
          <source>TreeMap</source>
          <target state="translated">TreeMap</target>
        </trans-unit>
        <trans-unit id="e5316ea688f0da29e1f65fed0da1b46ebcdbda8a" translate="yes" xml:space="preserve">
          <source>TreeMap.ceilingEntry()</source>
          <target state="translated">TreeMap.ceilingEntry()</target>
        </trans-unit>
        <trans-unit id="4928da85f4b361e5d085411df925eb6355d02ccd" translate="yes" xml:space="preserve">
          <source>TreeMap.ceilingKey()</source>
          <target state="translated">TreeMap.ceilingKey()</target>
        </trans-unit>
        <trans-unit id="d821816e6e966f8b3d1577edaf8405a54a8bac65" translate="yes" xml:space="preserve">
          <source>TreeMap.clear()</source>
          <target state="translated">TreeMap.clear()</target>
        </trans-unit>
        <trans-unit id="6dd69679a95980cc913012d3d49d57d3438052ba" translate="yes" xml:space="preserve">
          <source>TreeMap.clone()</source>
          <target state="translated">TreeMap.clone()</target>
        </trans-unit>
        <trans-unit id="132e0fac0be392849749eb7187695583f3c1bae4" translate="yes" xml:space="preserve">
          <source>TreeMap.comparator()</source>
          <target state="translated">TreeMap.comparator()</target>
        </trans-unit>
        <trans-unit id="aba73b51f5749ac86a5825ad48589ad82de9c9d0" translate="yes" xml:space="preserve">
          <source>TreeMap.containsKey()</source>
          <target state="translated">TreeMap.containsKey()</target>
        </trans-unit>
        <trans-unit id="65d0bbe349fb657486fc3ca8727106a6f76375d8" translate="yes" xml:space="preserve">
          <source>TreeMap.containsValue()</source>
          <target state="translated">TreeMap.containsValue()</target>
        </trans-unit>
        <trans-unit id="2066f4d1d87cf54e4201d5b6b43810901a60a09e" translate="yes" xml:space="preserve">
          <source>TreeMap.descendingKeySet()</source>
          <target state="translated">TreeMap.descendingKeySet()</target>
        </trans-unit>
        <trans-unit id="496fa6003029e1da671d7cd46af7012c714a278e" translate="yes" xml:space="preserve">
          <source>TreeMap.descendingMap()</source>
          <target state="translated">TreeMap.descendingMap()</target>
        </trans-unit>
        <trans-unit id="1b90293c4f5f34694a779c50db391ac5a1a15f98" translate="yes" xml:space="preserve">
          <source>TreeMap.entrySet()</source>
          <target state="translated">TreeMap.entrySet()</target>
        </trans-unit>
        <trans-unit id="91cd659b9bb4df3b20daa3c36cf5b06f78bf28e0" translate="yes" xml:space="preserve">
          <source>TreeMap.firstEntry()</source>
          <target state="translated">TreeMap.firstEntry()</target>
        </trans-unit>
        <trans-unit id="e24b9ff84913f700271a226cb98f89024ca00c9e" translate="yes" xml:space="preserve">
          <source>TreeMap.firstKey()</source>
          <target state="translated">TreeMap.firstKey()</target>
        </trans-unit>
        <trans-unit id="bfa45d75312c5aad42c5173c03f70f8a06bf61e1" translate="yes" xml:space="preserve">
          <source>TreeMap.floorEntry()</source>
          <target state="translated">TreeMap.floorEntry()</target>
        </trans-unit>
        <trans-unit id="b57c465a9ed8fce97e6d108abf55a1b758a876a3" translate="yes" xml:space="preserve">
          <source>TreeMap.floorKey()</source>
          <target state="translated">TreeMap.floorKey()</target>
        </trans-unit>
        <trans-unit id="32b815d8822cc010b2dea7e47dd49ef655559b7e" translate="yes" xml:space="preserve">
          <source>TreeMap.forEach()</source>
          <target state="translated">TreeMap.forEach()</target>
        </trans-unit>
        <trans-unit id="e4278be43e238f656122e5f83d909caa4e0058c2" translate="yes" xml:space="preserve">
          <source>TreeMap.get()</source>
          <target state="translated">TreeMap.get()</target>
        </trans-unit>
        <trans-unit id="d795a70cfa4017d4e2580575fc584f8bda1e8bf5" translate="yes" xml:space="preserve">
          <source>TreeMap.headMap()</source>
          <target state="translated">TreeMap.headMap()</target>
        </trans-unit>
        <trans-unit id="4605c36878c64b5c5a9b1ae5cec8221cfb870071" translate="yes" xml:space="preserve">
          <source>TreeMap.higherEntry()</source>
          <target state="translated">TreeMap.higherEntry()</target>
        </trans-unit>
        <trans-unit id="88ebbb98630e8d6f0aa2a442fdd87e6b5f192d94" translate="yes" xml:space="preserve">
          <source>TreeMap.higherKey()</source>
          <target state="translated">TreeMap.higherKey()</target>
        </trans-unit>
        <trans-unit id="3524629c1674ca5bee3777a687eb14c89812771e" translate="yes" xml:space="preserve">
          <source>TreeMap.keySet()</source>
          <target state="translated">TreeMap.keySet()</target>
        </trans-unit>
        <trans-unit id="2427b56045488e13ed88595150f52b76439edafe" translate="yes" xml:space="preserve">
          <source>TreeMap.lastEntry()</source>
          <target state="translated">TreeMap.lastEntry()</target>
        </trans-unit>
        <trans-unit id="2fc0327a416b90d08c9d8fadeb6bb0a9fa2603c5" translate="yes" xml:space="preserve">
          <source>TreeMap.lastKey()</source>
          <target state="translated">TreeMap.lastKey()</target>
        </trans-unit>
        <trans-unit id="dd05595fa1313aec4d7ebf40d7dab6809c7095d7" translate="yes" xml:space="preserve">
          <source>TreeMap.lowerEntry()</source>
          <target state="translated">TreeMap.lowerEntry()</target>
        </trans-unit>
        <trans-unit id="b550fa2027fb6c3ed211c79fab553f2af410eb80" translate="yes" xml:space="preserve">
          <source>TreeMap.lowerKey()</source>
          <target state="translated">TreeMap.lowerKey()</target>
        </trans-unit>
        <trans-unit id="7915d610e74e7c65de3ec87fe86176cbb154fcd5" translate="yes" xml:space="preserve">
          <source>TreeMap.navigableKeySet()</source>
          <target state="translated">TreeMap.navigableKeySet()</target>
        </trans-unit>
        <trans-unit id="b0f48e4c5aaa86462d2495a34296faf0204d020a" translate="yes" xml:space="preserve">
          <source>TreeMap.pollFirstEntry()</source>
          <target state="translated">TreeMap.pollFirstEntry()</target>
        </trans-unit>
        <trans-unit id="3ba1c7d5e824634ea0aba4a0fd44feb73f14dcc1" translate="yes" xml:space="preserve">
          <source>TreeMap.pollLastEntry()</source>
          <target state="translated">TreeMap.pollLastEntry()</target>
        </trans-unit>
        <trans-unit id="4be22808d79589f0c4911f86861c59bda925d960" translate="yes" xml:space="preserve">
          <source>TreeMap.put()</source>
          <target state="translated">TreeMap.put()</target>
        </trans-unit>
        <trans-unit id="113ed1243333d0ec7328427f6dd19f0b4f7e8528" translate="yes" xml:space="preserve">
          <source>TreeMap.putAll()</source>
          <target state="translated">TreeMap.putAll()</target>
        </trans-unit>
        <trans-unit id="a8c243296a0e84bd175e472f5f0a0e5273229663" translate="yes" xml:space="preserve">
          <source>TreeMap.remove()</source>
          <target state="translated">TreeMap.remove()</target>
        </trans-unit>
        <trans-unit id="5c7fa55653c3471f3a6af4dd608d43540da07784" translate="yes" xml:space="preserve">
          <source>TreeMap.replace()</source>
          <target state="translated">TreeMap.replace()</target>
        </trans-unit>
        <trans-unit id="4d0e299e3ba998c2dcf0ec34621e331722934c5f" translate="yes" xml:space="preserve">
          <source>TreeMap.replaceAll()</source>
          <target state="translated">TreeMap.replaceAll()</target>
        </trans-unit>
        <trans-unit id="336677cb1fe98f23e75d163b974930002fd8cd27" translate="yes" xml:space="preserve">
          <source>TreeMap.size()</source>
          <target state="translated">TreeMap.size()</target>
        </trans-unit>
        <trans-unit id="552ea32c982c18811875853860337db0aad1d967" translate="yes" xml:space="preserve">
          <source>TreeMap.subMap()</source>
          <target state="translated">TreeMap.subMap()</target>
        </trans-unit>
        <trans-unit id="274005151bd94300a52eb1ead3c9e76df7d91b66" translate="yes" xml:space="preserve">
          <source>TreeMap.tailMap()</source>
          <target state="translated">TreeMap.tailMap()</target>
        </trans-unit>
        <trans-unit id="2f8809dc68a09b62cc6461a42ec84b65d1f332c3" translate="yes" xml:space="preserve">
          <source>TreeMap.values()</source>
          <target state="translated">TreeMap.values()</target>
        </trans-unit>
        <trans-unit id="ba62fb3f971f3ef904295175c5fa43e88e3416a0" translate="yes" xml:space="preserve">
          <source>TreeModel</source>
          <target state="translated">TreeModel</target>
        </trans-unit>
        <trans-unit id="ed645b927cdc5a3a1c7d6528116a934aa19e041b" translate="yes" xml:space="preserve">
          <source>TreeModelEvent</source>
          <target state="translated">TreeModelEvent</target>
        </trans-unit>
        <trans-unit id="841fc71bc09dfd294141702b1ba2b1dae1117e1b" translate="yes" xml:space="preserve">
          <source>TreeModelHandler</source>
          <target state="translated">TreeModelHandler</target>
        </trans-unit>
        <trans-unit id="115ac5ea27156f6ad2ab2aa70c9841a084eb40a8" translate="yes" xml:space="preserve">
          <source>TreeModelListener</source>
          <target state="translated">TreeModelListener</target>
        </trans-unit>
        <trans-unit id="878d05c035daada0368b104f222e3a6643da8d5e" translate="yes" xml:space="preserve">
          <source>TreeMouseListener is responsible for updating the selection based on mouse events.</source>
          <target state="translated">TreeMouseListener는 마우스 이벤트를 기반으로 선택을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="599955de5374dfa5279b21f4f4e42d2e26d4cdfa" translate="yes" xml:space="preserve">
          <source>TreeNode</source>
          <target state="translated">TreeNode</target>
        </trans-unit>
        <trans-unit id="745987ea45f41d8ae79665810dc9f818e552fe77" translate="yes" xml:space="preserve">
          <source>TreePageAction</source>
          <target state="translated">TreePageAction</target>
        </trans-unit>
        <trans-unit id="bd8345bed5902bc471cf89979240292f40306390" translate="yes" xml:space="preserve">
          <source>TreePageAction handles page up and page down events.</source>
          <target state="translated">TreePageAction은 페이지 업 및 페이지 다운 이벤트를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="573289f14ad820aee44479334a939242d852c7bd" translate="yes" xml:space="preserve">
          <source>TreePath</source>
          <target state="translated">TreePath</target>
        </trans-unit>
        <trans-unit id="b9e43b3298bcb6866497b1c4ace19cd0143d3b8c" translate="yes" xml:space="preserve">
          <source>TreeSelectionEvent</source>
          <target state="translated">TreeSelectionEvent</target>
        </trans-unit>
        <trans-unit id="a2ed8927d5106bc63f3fc0c0e994713481d8f954" translate="yes" xml:space="preserve">
          <source>TreeSelectionHandler</source>
          <target state="translated">TreeSelectionHandler</target>
        </trans-unit>
        <trans-unit id="c62bce5af6134919a2a9b02a8b37d54aa11ac752" translate="yes" xml:space="preserve">
          <source>TreeSelectionListener</source>
          <target state="translated">TreeSelectionListener</target>
        </trans-unit>
        <trans-unit id="1775c7784131afde67d509df3a48fe608cbb79d3" translate="yes" xml:space="preserve">
          <source>TreeSelectionModel</source>
          <target state="translated">TreeSelectionModel</target>
        </trans-unit>
        <trans-unit id="a9f4894072ebd3917e2efcdf50c731fa0ee44e35" translate="yes" xml:space="preserve">
          <source>TreeSelectionRedirector</source>
          <target state="translated">TreeSelectionRedirector</target>
        </trans-unit>
        <trans-unit id="d9aca827286e61a4a205b918bf7138319000ed98" translate="yes" xml:space="preserve">
          <source>TreeSet</source>
          <target state="translated">TreeSet</target>
        </trans-unit>
        <trans-unit id="4c58b66af81f57dd8b2ae479f65b088a968c2890" translate="yes" xml:space="preserve">
          <source>TreeSet.add()</source>
          <target state="translated">TreeSet.add()</target>
        </trans-unit>
        <trans-unit id="e53f2301ea65fb9f94c8616cd01d0e870eaa58ae" translate="yes" xml:space="preserve">
          <source>TreeSet.addAll()</source>
          <target state="translated">TreeSet.addAll()</target>
        </trans-unit>
        <trans-unit id="4eeaf14d40be2a768f5551ac3ceab30c7eb5c11d" translate="yes" xml:space="preserve">
          <source>TreeSet.ceiling()</source>
          <target state="translated">TreeSet.ceiling()</target>
        </trans-unit>
        <trans-unit id="33ebc3a6fc05e0db15894a991bd5c6cfa684a2e6" translate="yes" xml:space="preserve">
          <source>TreeSet.clear()</source>
          <target state="translated">TreeSet.clear()</target>
        </trans-unit>
        <trans-unit id="b5ee84bff6e39a16be8fd9c8497e9d38405dc8e7" translate="yes" xml:space="preserve">
          <source>TreeSet.clone()</source>
          <target state="translated">TreeSet.clone()</target>
        </trans-unit>
        <trans-unit id="9a0eaadb461d069d2b062edc6cf1eaa5a8efb5c2" translate="yes" xml:space="preserve">
          <source>TreeSet.comparator()</source>
          <target state="translated">TreeSet.comparator()</target>
        </trans-unit>
        <trans-unit id="c40aeedbffe9e8c8b5e88e273fa9325e9604f055" translate="yes" xml:space="preserve">
          <source>TreeSet.contains()</source>
          <target state="translated">TreeSet.contains()</target>
        </trans-unit>
        <trans-unit id="4742b925b108b32534598f4493ff8334c0f0dffc" translate="yes" xml:space="preserve">
          <source>TreeSet.descendingIterator()</source>
          <target state="translated">TreeSet.descendingIterator()</target>
        </trans-unit>
        <trans-unit id="4e18a772039f604f6721b3d8dc2df28eb7f3d8fd" translate="yes" xml:space="preserve">
          <source>TreeSet.descendingSet()</source>
          <target state="translated">TreeSet.descendingSet()</target>
        </trans-unit>
        <trans-unit id="6560ec38319181f093c1ff9d0ac085bcefa40a74" translate="yes" xml:space="preserve">
          <source>TreeSet.first()</source>
          <target state="translated">TreeSet.first()</target>
        </trans-unit>
        <trans-unit id="72bae8ffa692e55ba3e7651d893967f363699e1d" translate="yes" xml:space="preserve">
          <source>TreeSet.floor()</source>
          <target state="translated">TreeSet.floor()</target>
        </trans-unit>
        <trans-unit id="d3cf600d3331960e00c525f3d569c97d03638b9e" translate="yes" xml:space="preserve">
          <source>TreeSet.headSet()</source>
          <target state="translated">TreeSet.headSet()</target>
        </trans-unit>
        <trans-unit id="1302632331c72e3e587859613e6504465a6156df" translate="yes" xml:space="preserve">
          <source>TreeSet.higher()</source>
          <target state="translated">TreeSet.higher()</target>
        </trans-unit>
        <trans-unit id="71529bc00e790a7a7b58d4cb8582a66c121ed166" translate="yes" xml:space="preserve">
          <source>TreeSet.isEmpty()</source>
          <target state="translated">TreeSet.isEmpty()</target>
        </trans-unit>
        <trans-unit id="71b02e64e43f1219a1d83f8105cf88dfebac5b2d" translate="yes" xml:space="preserve">
          <source>TreeSet.iterator()</source>
          <target state="translated">TreeSet.iterator()</target>
        </trans-unit>
        <trans-unit id="016f9951ee6b0476df52517da0ba1ff18acee328" translate="yes" xml:space="preserve">
          <source>TreeSet.last()</source>
          <target state="translated">TreeSet.last()</target>
        </trans-unit>
        <trans-unit id="28c8df1cca624a201d466b664b9817f9cd9e5dcf" translate="yes" xml:space="preserve">
          <source>TreeSet.lower()</source>
          <target state="translated">TreeSet.lower()</target>
        </trans-unit>
        <trans-unit id="7d8bdd7fd5daa61a0159cb57387f3d97f5080aa1" translate="yes" xml:space="preserve">
          <source>TreeSet.pollFirst()</source>
          <target state="translated">TreeSet.pollFirst()</target>
        </trans-unit>
        <trans-unit id="559c468def30ad4e10a37a70cbb1afcebac3f873" translate="yes" xml:space="preserve">
          <source>TreeSet.pollLast()</source>
          <target state="translated">TreeSet.pollLast()</target>
        </trans-unit>
        <trans-unit id="ddba668430ede9a4d1ee3b337e536df9ef952dd4" translate="yes" xml:space="preserve">
          <source>TreeSet.remove()</source>
          <target state="translated">TreeSet.remove()</target>
        </trans-unit>
        <trans-unit id="10adc5b62fe4ed759fad5f5fd2950555d482584f" translate="yes" xml:space="preserve">
          <source>TreeSet.size()</source>
          <target state="translated">TreeSet.size()</target>
        </trans-unit>
        <trans-unit id="9fe7c6a88052085baa4980aad72125fc3520c547" translate="yes" xml:space="preserve">
          <source>TreeSet.spliterator()</source>
          <target state="translated">TreeSet.spliterator()</target>
        </trans-unit>
        <trans-unit id="83d63aba3929098f734092786887fdf3ce00ad2f" translate="yes" xml:space="preserve">
          <source>TreeSet.subSet()</source>
          <target state="translated">TreeSet.subSet()</target>
        </trans-unit>
        <trans-unit id="424cfeb57b6d89969ea19e90d0edf198f1f866dc" translate="yes" xml:space="preserve">
          <source>TreeSet.tailSet()</source>
          <target state="translated">TreeSet.tailSet()</target>
        </trans-unit>
        <trans-unit id="7d6bc4b0ef62588dae24242de7605959c54d0e4d" translate="yes" xml:space="preserve">
          <source>TreeToggleAction</source>
          <target state="translated">TreeToggleAction</target>
        </trans-unit>
        <trans-unit id="aaf6a1f6a411baa929e59c084d2ecba773c8dbfe" translate="yes" xml:space="preserve">
          <source>TreeTraverseAction</source>
          <target state="translated">TreeTraverseAction</target>
        </trans-unit>
        <trans-unit id="53a1735324f35d7fe6311c8bc39e381006fe3b13" translate="yes" xml:space="preserve">
          <source>TreeUI</source>
          <target state="translated">TreeUI</target>
        </trans-unit>
        <trans-unit id="c5549ac8b888e22b01fa637b7351d8e5201d7fba" translate="yes" xml:space="preserve">
          <source>TreeWalker</source>
          <target state="translated">TreeWalker</target>
        </trans-unit>
        <trans-unit id="76d99bf12a81ac2490e7599279ebf4c321df4dd7" translate="yes" xml:space="preserve">
          <source>TreeWillExpandListener</source>
          <target state="translated">TreeWillExpandListener</target>
        </trans-unit>
        <trans-unit id="61c7280b9181471e06faf9e56f85095fd79828a1" translate="yes" xml:space="preserve">
          <source>Tries to break this view on the given axis.</source>
          <target state="translated">주어진 축에서이 뷰를 끊으려고합니다.</target>
        </trans-unit>
        <trans-unit id="a120001a26dcf3d4c4868072fcfe43b0b155d0cf" translate="yes" xml:space="preserve">
          <source>Tries to break this view on the given axis. Refer to &lt;a href=&quot;../view#breakView(int,int,float,float)&quot;&gt;&lt;code&gt;View.breakView(int, int, float, float)&lt;/code&gt;&lt;/a&gt; for a complete description of this method.</source>
          <target state="translated">주어진 축에서이 뷰를 끊으려고합니다. 이 메서드에 대한 자세한 설명은 &lt;a href=&quot;../view#breakView(int,int,float,float)&quot;&gt; &lt;code&gt;View.breakView(int, int, float, float)&lt;/code&gt; &lt;/a&gt; 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="b4d0e9ff9fd4cb2b70b3af1677ee544242fa9934" translate="yes" xml:space="preserve">
          <source>Tries to break this view on the given axis. This is called by views that try to do formatting of their children. For example, a view of a paragraph will typically try to place its children into row and views representing chunks of text can sometimes be broken down into smaller pieces.</source>
          <target state="translated">주어진 축에서이 뷰를 끊으려고합니다. 이는 자식의 형식을 지정하려는 뷰에서 호출됩니다. 예를 들어, 단락의보기는 일반적으로 하위 항목을 행에 배치하려고하며 텍스트 청크를 나타내는보기는 때때로 더 작은 조각으로 나눌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9feb731c5925bd1a0cdf44b2e198ff85480f0d4f" translate="yes" xml:space="preserve">
          <source>Tries to determine the content type of an object, based on the specified &quot;file&quot; component of a URL.</source>
          <target state="translated">URL의 지정된 &quot;파일&quot;구성 요소를 기반으로 개체의 콘텐츠 유형을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d18f5d6a0e37e1be1c95c5b83dec2805e4973064" translate="yes" xml:space="preserve">
          <source>Tries to determine the content type of an object, based on the specified &quot;file&quot; component of a URL. This is a convenience method that can be used by subclasses that override the &lt;code&gt;getContentType&lt;/code&gt; method.</source>
          <target state="translated">URL의 지정된 &quot;파일&quot;구성 요소를 기반으로 오브젝트의 컨텐츠 유형을 판별하려고 시도합니다. &lt;code&gt;getContentType&lt;/code&gt; 메소드 를 대체하는 서브 클래스에서 사용할 수있는 편리한 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="2cd3b3739a33e1f9d49c52e14b932b8920b15285" translate="yes" xml:space="preserve">
          <source>Tries to determine the type of an input stream based on the characters at the beginning of the input stream.</source>
          <target state="translated">입력 스트림의 시작 부분에있는 문자를 기반으로 입력 스트림의 유형을 확인하려고합니다.</target>
        </trans-unit>
        <trans-unit id="8136b251085567de41730b0cf3c283337bf62ab5" translate="yes" xml:space="preserve">
          <source>Tries to determine the type of an input stream based on the characters at the beginning of the input stream. This method can be used by subclasses that override the &lt;code&gt;getContentType&lt;/code&gt; method.</source>
          <target state="translated">입력 스트림의 시작 부분에있는 문자를 기반으로 입력 스트림의 유형을 판별하려고합니다. 이 메소드는 &lt;code&gt;getContentType&lt;/code&gt; 메소드 를 대체하는 서브 클래스에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af683792930635e02e564482bbf6187621651aa9" translate="yes" xml:space="preserve">
          <source>Tries to load a class from: the bootstrap loader, the system loader, the context loader (if one is present) and finally the loader specified.</source>
          <target state="translated">부트 스트랩 로더, 시스템 로더, 컨텍스트 로더 (있는 경우) 및 마지막으로 지정된 로더에서 클래스로드를 시도합니다.</target>
        </trans-unit>
        <trans-unit id="f7c738617eeba1cf8821e51be4db964d6bb62259" translate="yes" xml:space="preserve">
          <source>Tries to move the position of the caret from the coordinates of a mouse event, using viewToModel().</source>
          <target state="translated">viewToModel ()을 사용하여 마우스 이벤트의 좌표에서 캐럿의 위치를 ​​이동하려고합니다.</target>
        </trans-unit>
        <trans-unit id="dda827baba0f90a09175688b0d5b26236806a87d" translate="yes" xml:space="preserve">
          <source>Tries to move the position of the caret from the coordinates of a mouse event, using viewToModel(). This will cause a selection if the dot and mark are different.</source>
          <target state="translated">viewToModel ()을 사용하여 마우스 이벤트의 좌표에서 캐럿의 위치를 ​​이동하려고합니다. 점과 마크가 다른 경우 선택이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e3e6ad4f3b7b8c7b7bba1ef233d3cca69a38f764" translate="yes" xml:space="preserve">
          <source>Tries to remove from the work queue all &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; tasks that have been cancelled.</source>
          <target state="translated">취소 된 모든 &lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; 작업을 작업 대기열에서 제거하려고합니다 .</target>
        </trans-unit>
        <trans-unit id="94e3f7802063463730ee0a659237dc66ff598c52" translate="yes" xml:space="preserve">
          <source>Tries to remove from the work queue all &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; tasks that have been cancelled. This method can be useful as a storage reclamation operation, that has no other impact on functionality. Cancelled tasks are never executed, but may accumulate in work queues until worker threads can actively remove them. Invoking this method instead tries to remove them now. However, this method may fail to remove tasks in the presence of interference by other threads.</source>
          <target state="translated">취소 된 모든 &lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; 작업을 작업 대기열에서 제거하려고합니다 . 이 방법은 기능에 다른 영향을 미치지 않는 저장소 교정 작업으로 유용 할 수 있습니다. 취소 된 작업은 절대 실행되지 않지만 작업자 스레드가 적극적으로 제거 할 수있을 때까지 작업 대기열에 누적 될 수 있습니다. 이 메소드를 호출하면 지금 제거하려고 시도합니다. 그러나이 방법은 다른 스레드의 간섭이있는 경우 작업을 제거하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a29eaace0c6cbd8e7de7750cfa789737ac73458" translate="yes" xml:space="preserve">
          <source>Tries to set the position of the caret from the coordinates of a mouse event, using viewToModel().</source>
          <target state="translated">viewToModel ()을 사용하여 마우스 이벤트의 좌표에서 캐럿의 위치를 ​​설정하려고합니다.</target>
        </trans-unit>
        <trans-unit id="6fd258922851a204153a1d9f41e2626521bcd04f" translate="yes" xml:space="preserve">
          <source>Tries to unschedule this task for execution.</source>
          <target state="translated">실행을 위해이 작업을 예약 취소합니다.</target>
        </trans-unit>
        <trans-unit id="7536ae3390a11ff355e55fac0b2beec700d3bbf7" translate="yes" xml:space="preserve">
          <source>Tries to unschedule this task for execution. This method will typically (but is not guaranteed to) succeed if this task is the most recently forked task by the current thread, and has not commenced executing in another thread. This method may be useful when arranging alternative local processing of tasks that could have been, but were not, stolen.</source>
          <target state="translated">실행을 위해이 태스크의 스케줄을 해제하려고합니다. 이 작업이 현재 스레드에서 가장 최근에 수행 한 작업이고 다른 스레드에서 실행을 시작하지 않은 경우이 방법은 일반적으로 성공하지만 보장되지는 않습니다. 이 방법은 도난 당했을 수도 있지만 도난 당하지 않은 작업의 대체 로컬 처리를 배열 할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f758a24d09cfe388256c88c84eee859e3cdad015" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this &lt;code&gt;ArrayList&lt;/code&gt; instance to be the list's current size.</source>
          <target state="translated">이 &lt;code&gt;ArrayList&lt;/code&gt; 인스턴스 의 용량을 목록의 현재 크기로 잘라냅니다.</target>
        </trans-unit>
        <trans-unit id="956a4e9adf25eb2b061b86bbe5a36cf9bc435e58" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this &lt;code&gt;ArrayList&lt;/code&gt; instance to be the list's current size. An application can use this operation to minimize the storage of an &lt;code&gt;ArrayList&lt;/code&gt; instance.</source>
          <target state="translated">이 &lt;code&gt;ArrayList&lt;/code&gt; 인스턴스 의 용량을 리스트의 현재 크기로 잘라냅니다. 애플리케이션은이 작업을 사용하여 &lt;code&gt;ArrayList&lt;/code&gt; 인스턴스 의 스토리지를 최소화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4ee0fb6649b35e9c0d996610dde2b366a73e0208" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this Path2D instance to its current size.</source>
          <target state="translated">이 Path2D 인스턴스의 용량을 현재 크기로 자릅니다.</target>
        </trans-unit>
        <trans-unit id="89473f2a70d0579548e43b33915e1beacb1b07ec" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this Path2D instance to its current size. An application can use this operation to minimize the storage of a path.</source>
          <target state="translated">이 Path2D 인스턴스의 용량을 현재 크기로 자릅니다. 애플리케이션은이 작업을 사용하여 경로 저장을 최소화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59ff6098257d1f99634e3a4b950a8ef7c2bc2df3" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this list to be the list's current size.</source>
          <target state="translated">이 목록의 용량을 목록의 현재 크기로 잘라냅니다.</target>
        </trans-unit>
        <trans-unit id="bd1fa28fc491870035bccb5217ea8759963c0432" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this vector to be the vector's current size.</source>
          <target state="translated">이 벡터의 용량을 벡터의 현재 크기로 잘라냅니다.</target>
        </trans-unit>
        <trans-unit id="409e26f80653b9a0477fcbaf5528851c8694d8ca" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this vector to be the vector's current size. If the capacity of this vector is larger than its current size, then the capacity is changed to equal the size by replacing its internal data array, kept in the field &lt;code&gt;elementData&lt;/code&gt;, with a smaller one. An application can use this operation to minimize the storage of a vector.</source>
          <target state="translated">이 벡터의 용량을 벡터의 현재 크기로 자릅니다. 이 벡터의 용량이 현재 크기보다 크면 &lt;code&gt;elementData&lt;/code&gt; 필드에 유지 된 내부 데이터 배열을 더 작은 크기로 대체하여 용량이 크기와 동일하게 변경됩니다 . 응용 프로그램은이 작업을 사용하여 벡터 저장을 최소화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">True</target>
        </trans-unit>
        <trans-unit id="232a258e2d7a30d4d0831b671c1c85daf22199bd" translate="yes" xml:space="preserve">
          <source>True (required) / False (optional)</source>
          <target state="translated">True (필수) / False (선택 사항)</target>
        </trans-unit>
        <trans-unit id="5f688424f288d45fabbee9eb9cda452d378327ec" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;fields[]&lt;/code&gt; are in sync with the currently set time.</source>
          <target state="translated">&lt;code&gt;fields[]&lt;/code&gt; 가 현재 설정된 시간과 동기화 되면 True 입니다.</target>
        </trans-unit>
        <trans-unit id="f9008b59944e474716b6c279855a4c78603b9e73" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;fields[]&lt;/code&gt; are in sync with the currently set time. If false, then the next attempt to get the value of a field will force a recomputation of all fields from the current value of &lt;code&gt;time&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fields[]&lt;/code&gt; 가 현재 설정된 시간과 동기화되어 있으면 true 입니다. false 인 경우 다음에 필드 값을 가져 오려고하면 현재 &lt;code&gt;time&lt;/code&gt; 값에서 모든 필드를 다시 계산해야합니다 .</target>
        </trans-unit>
        <trans-unit id="316d6a9546a69f4fa93b8e29ea71be29825c4055" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;name&lt;/code&gt; matches this ObjectName.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 이이 ObjectName과 일치하면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="7d74cdbb58b6ecbcac3a0ef765cee10ee5e0d7b3" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is an ObjectName whose canonical form is equal to that of this ObjectName.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 정식 형식이이 ObjectName과 동일한 ObjectName 인 경우 참 입니다.</target>
        </trans-unit>
        <trans-unit id="c8d0f539ec0cef070a91f358f1a2c15c74d970da" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this PrinterURI attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 PrinterURI 속성과 동일한 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="f5ff83a5171e1f22fe9bd1d647c63c57c7f7c621" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this URI attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 URI 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="78a517787d59bde4667e895c1101649344c15ca0" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this copies attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 복사본 속성과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="debd04af9459fa14193dd46af30fee5f7051260a" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this copies supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 복사본 지원 속성과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="c78a6f27610d5e65cb2064729eff898ea0e03070" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time at completed attribute, false otherwise.</source>
          <target state="translated">완료된 속성에서 &lt;code&gt;object&lt;/code&gt; 가이 날짜-시간과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a5d2dea2d175c00ba7a0c624cb1fac6db752ac44" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time at creation attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가 작성시이 날짜-시간과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a123332ed042028561a571511e8ffdcee65617d2" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time at processing attribute, false otherwise.</source>
          <target state="translated">처리 속성에서 &lt;code&gt;object&lt;/code&gt; 가이 날짜-시간과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="042d32b64be9612eac1597129d3d8b62758db782" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 날짜-시간 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="32eeb754a247b34f3f4c6ac9ef3263d83fbfb6e9" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this destination attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 destination 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="a73062b2bf78d86898ca309f5e37bfb78b6a80d1" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this document name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 문서명 속성과 같은 경우 는 true, 그렇지 않은 경우는 false</target>
        </trans-unit>
        <trans-unit id="ca3ca75d2887858d161d619559ce0b9cf2aa315d" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this integer attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 정수 속성에 해당 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="c0660c0d541c5bae8b10462386bd955c3dbe965c" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job K octets attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 K octets 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="30180f68b47f9549353326a0c11ec0d0aecaae28" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job K octets processed attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 K octets 처리 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="2b7d3e78b96c18bf47929ef0d2a080e154430969" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job K octets supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 K octets 지원 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="b53f332594b109ee4e955770ca84c8d643a8f8e6" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job hold until attribute, false otherwise.</source>
          <target state="translated">속성이 될 때까지 &lt;code&gt;object&lt;/code&gt; 가이 작업 보류와 동등한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="370648e0de26abf3709fa30cba89a4b44e622167" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job impressions attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 노출 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a4314844386a074052274b8fe7e0b100ecf3ee83" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job impressions completed attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 노출 완료 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="a45af18ce0944078a918753b891fdadd163731c0" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job impressions supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 노출 지원 속성과 같으면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="3d5dc84fe5210c7beab4cb2b2a3f5d6582023d42" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job media sheets attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 매체 시트 속성과 동일 하면 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="7378ee2254d9fa4f8e56e76757701609934a9ab9" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job media sheets completed attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가이 작업 매체 시트 완료 속성과 동일한 경우 true이고 , 그렇지 않으면 false입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
