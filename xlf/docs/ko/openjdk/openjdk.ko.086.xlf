<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="9ea172b7eec3f5f0b81470ae67435f6d468e7665" translate="yes" xml:space="preserve">
          <source>Find a resource of the specified name from the search path used to load classes. This method locates the resource through the system class loader (see &lt;a href=&quot;classloader#getSystemClassLoader--&quot;&gt;&lt;code&gt;getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">클래스를로드하는 데 사용 된 검색 경로에서 지정된 이름의 자원을 찾으십시오. 이 메소드는 시스템 클래스 로더를 통해 자원을 찾습니다 ( &lt;a href=&quot;classloader#getSystemClassLoader--&quot;&gt; &lt;code&gt;getSystemClassLoader()&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="06def4f824d0101f792b8087f4312c30c14cbc81" translate="yes" xml:space="preserve">
          <source>Find a variable in the set of available variables.</source>
          <target state="translated">사용 가능한 변수 집합에서 변수를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="38c82c92e8e61b769291664f51f72ff64a91c33e" translate="yes" xml:space="preserve">
          <source>Find an MBeanServer with a given name, or all MBeanServers in this JVM, using the method &lt;a href=&quot;mbeanserverfactory#findMBeanServer(java.lang.String)&quot;&gt;&lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mbeanserverfactory#findMBeanServer(java.lang.String)&quot;&gt; &lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 지정된 이름의 MBeanServer 또는이 JVM의 모든 MBeanServer를 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="143fb3b0f3014eb3a425dfc9e1d72174ef6e3fc1" translate="yes" xml:space="preserve">
          <source>Find an MBeanServer with a given name, or all MBeanServers in this JVM, using the method &lt;a href=&quot;mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 지정된 이름의 MBeanServer 또는이 JVM의 모든 MBeanServer를 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="23c95a684a4ef6e95365fe5d05112bed0124d8b9" translate="yes" xml:space="preserve">
          <source>Find or create a logger for a named subsystem.</source>
          <target state="translated">명명 된 하위 시스템에 대한 로거를 찾거나 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e25e1d08d5edcf5ee65c41a7c10f2e97a4afc61e" translate="yes" xml:space="preserve">
          <source>Find or create a logger for a named subsystem. If a logger has already been created with the given name it is returned. Otherwise a new logger is created.</source>
          <target state="translated">이름 지정된 서브 시스템에 대한 로거를 찾거나 작성하십시오. 지정된 이름으로 로거가 이미 작성된 경우 리턴됩니다. 그렇지 않으면 새 로거가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="bb8d1805e4876c9e126c966285fe34d4e505b938" translate="yes" xml:space="preserve">
          <source>Find the descriptor for a class that can be serialized.</source>
          <target state="translated">직렬화 할 수있는 클래스에 대한 설명자를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="83b0dfddf9a03c8956ac68d15dfc528830ca8054" translate="yes" xml:space="preserve">
          <source>Find the descriptor for a class that can be serialized. Creates an ObjectStreamClass instance if one does not exist yet for class. Null is returned if the specified class does not implement java.io.Serializable or java.io.Externalizable.</source>
          <target state="translated">직렬화 할 수있는 클래스의 설명자를 찾으십시오. 클래스에 아직 존재하지 않는 경우 ObjectStreamClass 인스턴스를 작성합니다. 지정된 클래스가 java.io.Serializable 또는 java.io.Externalizable을 구현하지 않으면 널이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="69f8e8e772d56be479b5fc7ce318dc12a215d5ee" translate="yes" xml:space="preserve">
          <source>Find the next word:</source>
          <target state="translated">다음 단어를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="695a17bec2c9c6b5a2b8a6612b97264614ce5a20" translate="yes" xml:space="preserve">
          <source>FindException</source>
          <target state="translated">FindException</target>
        </trans-unit>
        <trans-unit id="59de19c8479dabc7fdf16a0df24bc55ce7c4027a" translate="yes" xml:space="preserve">
          <source>Finders created by this method are lazy and do not eagerly check that the given file paths are directories or packaged modules. Consequently, the &lt;code&gt;find&lt;/code&gt; or &lt;code&gt;findAll&lt;/code&gt; methods will only fail if invoking these methods results in searching a directory or packaged module and an error is encountered.</source>
          <target state="translated">이 방법으로 생성 된 파인더는 게으르고 주어진 파일 경로가 디렉토리 또는 패키지 모듈인지 열심히 확인하지 않습니다. 결과적으로, &lt;code&gt;find&lt;/code&gt; 또는 &lt;code&gt;findAll&lt;/code&gt; 디렉토리 또는 패키지 모듈을 검색하는 이러한 방법의 결과를 호출하고 오류가 발생하면 방법은 실패합니다.</target>
        </trans-unit>
        <trans-unit id="9fd148aa9f1739c5e301cba94aad1904591987a4" translate="yes" xml:space="preserve">
          <source>Finds a &lt;a href=&quot;varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; for a static field.</source>
          <target state="translated">정적 필드에 대한 &lt;a href=&quot;varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt; 을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="2cbf3eee5b6a50f18be9366ec2e9b62b83fee66c" translate="yes" xml:space="preserve">
          <source>Finds a &lt;a href=&quot;varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; for an array type.</source>
          <target state="translated">배열 유형에 대한 &lt;a href=&quot;varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt; 을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="ae431bcde51fb5aba1c248b30622ac84b2cd1502" translate="yes" xml:space="preserve">
          <source>Finds a &lt;a href=&quot;varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; for an instance field.</source>
          <target state="translated">인스턴스 필드에 대한 &lt;a href=&quot;varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt; 을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="1fad7c1cd7647785389946cd154feb4d731b87ea" translate="yes" xml:space="preserve">
          <source>Finds a class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;, loading it if necessary.</source>
          <target state="translated">지정된 &lt;a href=&quot;#binary-name&quot;&gt;바이너리 이름을&lt;/a&gt; 가진 클래스를 찾아 필요한 경우로드합니다.</target>
        </trans-unit>
        <trans-unit id="e26ddf6d350805d46a4eababd014f4909e7b7f70" translate="yes" xml:space="preserve">
          <source>Finds a class with the specified &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt;, loading it if necessary.</source>
          <target state="translated">지정된 &lt;a href=&quot;#name&quot;&gt;바이너리 이름을&lt;/a&gt; 가진 클래스를 찾아 필요한 경우로드합니다.</target>
        </trans-unit>
        <trans-unit id="af57f9d6d3fad481c4e24d676d0af5fff1455505" translate="yes" xml:space="preserve">
          <source>Finds a color in the system properties.</source>
          <target state="translated">시스템 속성에서 색상을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="6d14b2650a84a8bb8e450bd9dab3317e7299564c" translate="yes" xml:space="preserve">
          <source>Finds a package by &lt;a href=&quot;#binary-name&quot;&gt;name&lt;/a&gt; in this class loader and its ancestors.</source>
          <target state="translated">이 클래스 로더 및 상위 항목에서 &lt;a href=&quot;#binary-name&quot;&gt;이름&lt;/a&gt; 으로 패키지를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="bc3c065513369b108e136f6ac6676bbd9f9ed1ef" translate="yes" xml:space="preserve">
          <source>Finds a package by name in the caller's class loader and its ancestors.</source>
          <target state="translated">호출자의 클래스 로더 및 조상에서 이름으로 패키지를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="5e28f68c44bc53461701f2bc09fdd27d2ead26e3" translate="yes" xml:space="preserve">
          <source>Finds a reference to a module of a given name.</source>
          <target state="translated">주어진 이름의 모듈에 대한 참조를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="9e3215b349d72286642469e7aa8b6255181f6da6" translate="yes" xml:space="preserve">
          <source>Finds a resolved module in this configuration, or if not in this configuration, the &lt;a href=&quot;#parents()&quot;&gt;parent&lt;/a&gt; configurations.</source>
          <target state="translated">이 구성 또는이 구성에없는 경우 &lt;a href=&quot;#parents()&quot;&gt;상위&lt;/a&gt; 구성 에서 해결 된 모듈을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="a897b351634179262b62bd1ff305280ca2957a51" translate="yes" xml:space="preserve">
          <source>Finds a resolved module in this configuration, or if not in this configuration, the &lt;a href=&quot;#parents()&quot;&gt;parent&lt;/a&gt; configurations. Finding a module in parent configurations is equivalent to invoking &lt;code&gt;findModule&lt;/code&gt; on each parent, in search order, until the module is found or all parents have been searched. In a &lt;em&gt;tree of configurations&lt;/em&gt; then this is equivalent to a depth-first search.</source>
          <target state="translated">이 구성 또는이 구성에없는 경우 &lt;a href=&quot;#parents()&quot;&gt;상위&lt;/a&gt; 구성 에서 해결 된 모듈을 찾습니다 . 상위 구성에서 모듈을 찾는 것은 모듈을 찾거나 모든 상위가 검색 될 때까지 검색 순서로 각 상위에서 &lt;code&gt;findModule&lt;/code&gt; 을 호출하는 것과 같습니다 . A의 &lt;em&gt;구성 트리&lt;/em&gt; 다음이 깊이 우선 탐색에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="7011250bbf1d68f0ad3f18892e0e52dea53b38ac" translate="yes" xml:space="preserve">
          <source>Finds a resource with a given name.</source>
          <target state="translated">주어진 이름을 가진 자원을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="5970b75c030be5858ee00a25ea7e6d0137d03f22" translate="yes" xml:space="preserve">
          <source>Finds a resource with a given name. The rules for searching resources associated with a given class are implemented by the defining &lt;a href=&quot;classloader&quot;&gt;class loader&lt;/a&gt; of the class. This method delegates to this object's class loader. If this object was loaded by the bootstrap class loader, the method delegates to &lt;a href=&quot;classloader#getSystemResource-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.getSystemResource(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 이름의 리소스를 찾습니다. 주어진 클래스와 연관된 자원을 검색하기위한 규칙은 클래스의 정의 &lt;a href=&quot;classloader&quot;&gt;클래스 로더&lt;/a&gt; 에 의해 구현됩니다 . 이 메소드는이 객체의 클래스 로더에 위임합니다. 이 객체가 부트 스트랩 클래스 로더에 의해로드 된 경우, 메소드는 &lt;a href=&quot;classloader#getSystemResource-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.getSystemResource(java.lang.String)&lt;/code&gt; &lt;/a&gt; 위임됩니다 .</target>
        </trans-unit>
        <trans-unit id="b8c457aaf68742eb22c2c958d2a00771c3d3a2af" translate="yes" xml:space="preserve">
          <source>Finds a resource with a given name. The rules for searching resources associated with a given class are implemented by the defining &lt;a href=&quot;classloader&quot;&gt;class loader&lt;/a&gt; of the class. This method delegates to this object's class loader. If this object was loaded by the bootstrap class loader, the method delegates to &lt;a href=&quot;classloader#getSystemResourceAsStream-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.getSystemResourceAsStream(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 이름의 리소스를 찾습니다. 주어진 클래스와 연관된 자원을 검색하기위한 규칙은 클래스의 정의 &lt;a href=&quot;classloader&quot;&gt;클래스 로더&lt;/a&gt; 에 의해 구현됩니다 . 이 메소드는이 객체의 클래스 로더에 위임합니다. 부트 스트랩 클래스 로더가이 객체를로드 한 경우, 메소드는 &lt;a href=&quot;classloader#getSystemResourceAsStream-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.getSystemResourceAsStream(java.lang.String)&lt;/code&gt; &lt;/a&gt; 위임됩니다 .</target>
        </trans-unit>
        <trans-unit id="8b5372a55ce3d26862d39626b3b9d3b969ad0169" translate="yes" xml:space="preserve">
          <source>Finds a resource, returning a URI to the resource in the module.</source>
          <target state="translated">리소스를 찾고 모듈의 리소스에 대한 URI를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ed8cb43bcaeb95ee97efb8215e1cda76cf74e245" translate="yes" xml:space="preserve">
          <source>Finds all resources of the specified name from the search path used to load classes.</source>
          <target state="translated">클래스를로드하는 데 사용되는 검색 경로에서 지정된 이름의 모든 리소스를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="c9f19df81fb6e096d5d9f2e170ac68ddf1f51e15" translate="yes" xml:space="preserve">
          <source>Finds all resources of the specified name from the search path used to load classes. The resources thus found are returned as an &lt;a href=&quot;../util/enumeration&quot;&gt;&lt;code&gt;&lt;code&gt;Enumeration&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">클래스를로드하는 데 사용 된 검색 경로에서 지정된 이름의 모든 리소스를 찾습니다. 찾은 리소스 는 &lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;a href=&quot;../util/enumeration&quot;&gt; &lt;code&gt;&lt;code&gt;Enumeration&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 으로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="6db65724c0dcdf134606fcdb6f8d33703eea8aaf" translate="yes" xml:space="preserve">
          <source>Finds all resources of the specified name from the search path used to load classes. The resources thus found are returned as an &lt;a href=&quot;../util/enumeration&quot;&gt;&lt;code&gt;Enumeration&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">클래스를로드하는 데 사용되는 검색 경로에서 지정된 이름의 모든 리소스를 찾습니다. 이렇게 발견 된 리소스 는 &lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt; 개체 의 &lt;a href=&quot;../util/enumeration&quot;&gt; &lt;code&gt;Enumeration&lt;/code&gt; &lt;/a&gt; 으로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="55a4bac4e50df2c17deef8eb3caf2d5ba110c183" translate="yes" xml:space="preserve">
          <source>Finds all the applets in the document represented by this applet context.</source>
          <target state="translated">이 애플릿 컨텍스트가 나타내는 문서에서 모든 애플릿을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="1b5321ba487dd1a106c9c22d79eb3596b75366a1" translate="yes" xml:space="preserve">
          <source>Finds all the keys of the streams in this applet context.</source>
          <target state="translated">이 애플릿 컨텍스트에서 스트림의 모든 키를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="39f5d82eb3d7b11a3d8ac86b88d2a2df6ee8cef9" translate="yes" xml:space="preserve">
          <source>Finds all the resources with the given name.</source>
          <target state="translated">주어진 이름을 가진 모든 리소스를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="d5124138e515f2e5c141692f1b3bc3ccb6938cee" translate="yes" xml:space="preserve">
          <source>Finds all the resources with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code.</source>
          <target state="translated">주어진 이름을 가진 모든 리소스를 찾습니다. 리소스는 코드의 위치와 무관 한 방식으로 클래스 코드에서 액세스 할 수있는 일부 데이터 (이미지, 오디오, 텍스트 등)입니다.</target>
        </trans-unit>
        <trans-unit id="38436b42de21930361f85514ca109e320b5247b6" translate="yes" xml:space="preserve">
          <source>Finds all the resources with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code. The name of a resource is a &quot;/&quot;-separated path name that identifies the resource.</source>
          <target state="translated">주어진 이름을 가진 모든 리소스를 찾습니다. 리소스는 코드의 위치와 무관 한 방식으로 클래스 코드에서 액세스 할 수있는 일부 데이터 (이미지, 오디오, 텍스트 등)입니다. 자원의 이름은 자원을 식별하는 &quot;/&quot;로 구분 된 경로 이름입니다.</target>
        </trans-unit>
        <trans-unit id="4b1ce48837e6850260c79968ed0b2269cf2e69f8" translate="yes" xml:space="preserve">
          <source>Finds and loads the class with the specified name from the URL search path.</source>
          <target state="translated">URL 검색 경로에서 지정된 이름의 클래스를 찾아로드합니다.</target>
        </trans-unit>
        <trans-unit id="df29b59cb9718467c1be69b8d2b3d351189ed29b" translate="yes" xml:space="preserve">
          <source>Finds and loads the class with the specified name from the URL search path. Any URLs referring to JAR files are loaded and opened as needed until the class is found.</source>
          <target state="translated">URL 검색 경로에서 지정된 이름의 클래스를 찾아로드합니다. JAR 파일을 참조하는 모든 URL은 클래스가 발견 될 때까지 필요에 따라로드되고 열립니다.</target>
        </trans-unit>
        <trans-unit id="734fb3f929fe6c595373476e9b396277ea9acb50" translate="yes" xml:space="preserve">
          <source>Finds and returns the applet in the document represented by this applet context with the given name.</source>
          <target state="translated">주어진 이름을 가진이 애플릿 컨텍스트가 나타내는 문서에서 애플릿을 찾아 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6efa1c7133de00c902292f849e42cab66c2bf30f" translate="yes" xml:space="preserve">
          <source>Finds and returns the applet in the document represented by this applet context with the given name. The name can be set in the HTML tag by setting the &lt;code&gt;name&lt;/code&gt; attribute.</source>
          <target state="translated">주어진 이름을 가진이 애플릿 컨텍스트가 나타내는 문서에서 애플릿을 찾아 리턴합니다. &lt;code&gt;name&lt;/code&gt; 속성 을 설정하여 HTML 태그에 이름을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="826006ce6b0bfbc05eef882e73ef3f4a88a02467" translate="yes" xml:space="preserve">
          <source>Finds and returns the first leaf that is a descendant of this node -- either this node or its first child's first leaf.</source>
          <target state="translated">이 노드의 후손 인 첫 번째 리프 (이 노드 또는 첫 번째 자식의 첫 번째 리프)를 찾아서 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2e81f88949c37c07f3655207654c6f1ff02ea557" translate="yes" xml:space="preserve">
          <source>Finds and returns the first leaf that is a descendant of this node -- either this node or its first child's first leaf. Returns this node if it is a leaf.</source>
          <target state="translated">이 노드의 후손 인 첫 번째 리프 (이 노드 또는 첫 번째 자식의 첫 번째 리프)를 찾아서 반환합니다. 리프 인 경우이 노드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0dfe7ea429e898df4747e82380842367dfe7822a" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;Object&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">두 &lt;code&gt;Object&lt;/code&gt; 배열 간의 첫 번째 불일치 인덱스를 찾아 반환합니다 . 그렇지 않으면 불일치가 없으면 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a1de64908a138ac2b969512261217a2f9b89a4c4" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;Object&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">두 &lt;code&gt;Object&lt;/code&gt; 배열 간의 첫 번째 불일치 인덱스를 찾아 반환합니다 . 그렇지 않으면 불일치가 없으면 -1을 반환합니다. 인덱스는 더 작은 배열의 길이 (포함)까지 0 (포함) 범위에 있습니다.</target>
        </trans-unit>
        <trans-unit id="471824617a02d7401e06edbf2cba89621eaf157b" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;boolean&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">두 &lt;code&gt;boolean&lt;/code&gt; 배열 사이의 첫 번째 불일치 인덱스를 찾아 반환합니다 . 그렇지 않으면 불일치가 없으면 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="16bd850905ee68a007cb8a2024360fbc0a2e3b9c" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;boolean&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">두 &lt;code&gt;boolean&lt;/code&gt; 배열 사이의 첫 번째 불일치 인덱스를 찾아 반환합니다 . 그렇지 않으면 불일치가 없으면 -1을 반환합니다. 인덱스는 더 작은 배열의 길이 (포함)까지 0 (포함) 범위에 있습니다.</target>
        </trans-unit>
        <trans-unit id="8af1b65e52b521319028673f12e78182856f0d7f" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;byte&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">두 &lt;code&gt;byte&lt;/code&gt; 배열 사이의 첫 번째 불일치 인덱스를 찾아 반환합니다 . 그렇지 않으면 불일치가 없으면 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6c23c8b7c711b2ffaae82ef10428489bad839b8d" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;byte&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">두 &lt;code&gt;byte&lt;/code&gt; 배열 사이의 첫 번째 불일치 인덱스를 찾아 반환합니다 . 그렇지 않으면 불일치가 없으면 -1을 반환합니다. 인덱스는 더 작은 배열의 길이 (포함)까지 0 (포함) 범위에 있습니다.</target>
        </trans-unit>
        <trans-unit id="eaed9c61269fc091d9f1c226a2ff5394434efe0f" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">Finds and returns the index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</target>
        </trans-unit>
        <trans-unit id="feaf4fa9a9c4db3540e98915c5fbb1133c126fd4" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">Finds and returns the index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</target>
        </trans-unit>
        <trans-unit id="77caa5c4612949a9484309e089874cf165c4944b" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">Finds and returns the index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</target>
        </trans-unit>
        <trans-unit id="3ca55a946dae5d5567dd9ab37dc5bfea350cb56f" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">Finds and returns the index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</target>
        </trans-unit>
        <trans-unit id="405070cadac309cec50ee953e8534c2a521e2ed6" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">Finds and returns the index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</target>
        </trans-unit>
        <trans-unit id="ab12e15abef69acc8cb421ab25f399e2bf479ddf" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">Finds and returns the index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</target>
        </trans-unit>
        <trans-unit id="6bb2edff1699617616a3a6252b05db8339216864" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">Finds and returns the index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</target>
        </trans-unit>
        <trans-unit id="cf2cd8f73e9f0df443831e4decf67e8302ceca44" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">Finds and returns the index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</target>
        </trans-unit>
        <trans-unit id="7640ecb391799ea47ce0a05fac90ebd2d4406e33" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">Finds and returns the index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</target>
        </trans-unit>
        <trans-unit id="c387d49b98f035053dbb5044ea3928e42d130094" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">Finds and returns the index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</target>
        </trans-unit>
        <trans-unit id="31d349f985f332d3adfc72eabc82e0873a2cff72" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">Finds and returns the index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</target>
        </trans-unit>
        <trans-unit id="83efe8766b037cf2dbedd5ee02ebda531c264b9e" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">Finds and returns the index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</target>
        </trans-unit>
        <trans-unit id="cd6ce7ae94e00786707c70ed422726fd0ba20fd1" translate="yes" xml:space="preserve">
          <source>Finds and returns the last leaf that is a descendant of this node -- either this node or its last child's last leaf.</source>
          <target state="translated">Finds and returns the last leaf that is a descendant of this node -- either this node or its last child's last leaf.</target>
        </trans-unit>
        <trans-unit id="164439e198c3039e6e880a85f9d4d01631fd6809" translate="yes" xml:space="preserve">
          <source>Finds and returns the last leaf that is a descendant of this node -- either this node or its last child's last leaf. Returns this node if it is a leaf.</source>
          <target state="translated">Finds and returns the last leaf that is a descendant of this node -- either this node or its last child's last leaf. Returns this node if it is a leaf.</target>
        </trans-unit>
        <trans-unit id="647b2a16f025254fb0bd9e745f4cc24e8cdef324" translate="yes" xml:space="preserve">
          <source>Finds and returns the next complete token from this scanner.</source>
          <target state="translated">Finds and returns the next complete token from this scanner.</target>
        </trans-unit>
        <trans-unit id="b536d4be1e6419e284bb6980b9f4ac3ede52c086" translate="yes" xml:space="preserve">
          <source>Finds and returns the next complete token from this scanner. A complete token is preceded and followed by input that matches the delimiter pattern. This method may block while waiting for input to scan, even if a previous invocation of &lt;a href=&quot;#hasNext()&quot;&gt;&lt;code&gt;hasNext()&lt;/code&gt;&lt;/a&gt; returned &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Finds and returns the next complete token from this scanner. A complete token is preceded and followed by input that matches the delimiter pattern. This method may block while waiting for input to scan, even if a previous invocation of &lt;a href=&quot;#hasNext()&quot;&gt; &lt;code&gt;hasNext()&lt;/code&gt; &lt;/a&gt; returned &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e03192b0758390c8721c03d454b5a28fca29e38d" translate="yes" xml:space="preserve">
          <source>Finds and returns the next complete token from this scanner. A complete token is preceded and followed by input that matches the delimiter pattern. This method may block while waiting for input to scan, even if a previous invocation of &lt;a href=&quot;scanner#hasNext--&quot;&gt;&lt;code&gt;hasNext()&lt;/code&gt;&lt;/a&gt; returned &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 스캐너에서 다음 완전한 토큰을 찾아 반환합니다. 완전한 토큰이 앞에오고 구분 기호 패턴과 일치하는 입력이 뒤 따릅니다. &lt;a href=&quot;scanner#hasNext--&quot;&gt; &lt;code&gt;hasNext()&lt;/code&gt; &lt;/a&gt; 의 이전 호출이 &lt;code&gt;true&lt;/code&gt; 를 리턴 한 경우에도 입력을 스캔하는 동안이 메소드가 차단 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="36999fe6ae7c20759462e855faabaf02188c07bc" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between this buffer and a given buffer.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between this buffer and a given buffer.</target>
        </trans-unit>
        <trans-unit id="3dd73180deca8608e4e6d7c807bfba4d221faed7" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between this buffer and a given buffer. The index is relative to the &lt;a href=&quot;buffer#position()&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of each buffer and will be in the range of 0 (inclusive) up to the smaller of the &lt;a href=&quot;buffer#remaining()&quot;&gt;&lt;code&gt;remaining&lt;/code&gt;&lt;/a&gt; elements in each buffer (exclusive).</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between this buffer and a given buffer. The index is relative to the &lt;a href=&quot;buffer#position()&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt; of each buffer and will be in the range of 0 (inclusive) up to the smaller of the &lt;a href=&quot;buffer#remaining()&quot;&gt; &lt;code&gt;remaining&lt;/code&gt; &lt;/a&gt; elements in each buffer (exclusive).</target>
        </trans-unit>
        <trans-unit id="b58da2a9789bc8ef8f638d1ca6b0c57fbb5c55a7" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;Object&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;Object&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</target>
        </trans-unit>
        <trans-unit id="1a0287ca1c0041aa1ca56d3a6a48fc095e7d1c1a" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;Object&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;Object&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</target>
        </trans-unit>
        <trans-unit id="f051a554b3f50c21a3b76df3a905f6eec0fd69d0" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;boolean&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;boolean&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</target>
        </trans-unit>
        <trans-unit id="2115d772c75d3acca93c1ec517a5903ec1a651fe" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;boolean&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;boolean&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</target>
        </trans-unit>
        <trans-unit id="37734ee09887b82545bc12a1e9b1548f34118173" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;byte&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;byte&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</target>
        </trans-unit>
        <trans-unit id="4b5c861244fdb5c6bb8bad1d921aaeae48027e21" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;byte&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;byte&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</target>
        </trans-unit>
        <trans-unit id="888c8c8641d8a0e9e3dd78a08743e472d3744da6" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</target>
        </trans-unit>
        <trans-unit id="c0d2939699ae0c46ba0d1082748bf6759200f74e" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</target>
        </trans-unit>
        <trans-unit id="2879008d864fe91c23b3c64742d0bb06a08d3b01" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</target>
        </trans-unit>
        <trans-unit id="aa3650596a381c8ee41386b2e78ed1fdceea72b6" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</target>
        </trans-unit>
        <trans-unit id="f49404472cb21761bc1db025594e532d93fe8461" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</target>
        </trans-unit>
        <trans-unit id="5db3c7377d896994590d3861d19d256ba1ccc519" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</target>
        </trans-unit>
        <trans-unit id="206d0d2b16198bfdacaabdc35dd27611dc40b8a4" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</target>
        </trans-unit>
        <trans-unit id="5afb6c2e85e54ec1129faad09602f0734b2a9584" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</target>
        </trans-unit>
        <trans-unit id="575f005b6d315f1e0df25da7400db2dd886d9510" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</target>
        </trans-unit>
        <trans-unit id="b8b2370ccc8193c2d134a36e7241bd91f7ed4b57" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</target>
        </trans-unit>
        <trans-unit id="7285d0a8c39c024e8f8c609d179d28652b3b6a12" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</target>
        </trans-unit>
        <trans-unit id="d69fabd445a4c966dbdcfd85252fd55dc9ba46eb" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">Finds and returns the relative index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</target>
        </trans-unit>
        <trans-unit id="651f0b1588d16672d6f790bc02ce852d03f535f0" translate="yes" xml:space="preserve">
          <source>Finds cycles of threads that are in deadlock waiting to acquire object monitors or &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;ownable synchronizers&lt;/a&gt;.</source>
          <target state="translated">Finds cycles of threads that are in deadlock waiting to acquire object monitors or &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;ownable synchronizers&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="234d87c20314c8931be84d95b143bc1fe38bcb98" translate="yes" xml:space="preserve">
          <source>Finds cycles of threads that are in deadlock waiting to acquire object monitors or &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;ownable synchronizers&lt;/a&gt;. Threads are &lt;em&gt;deadlocked&lt;/em&gt; in a cycle waiting for a lock of these two types if each thread owns one lock while trying to acquire another lock already held by another thread in the cycle.</source>
          <target state="translated">교착 상태에있는 스레드주기를 &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;찾아서&lt;/a&gt; 개체 모니터 또는 소유 가능한 동기화 프로그램 을 얻기 위해 대기 합니다 . 스레드가된다 &lt;em&gt;교착&lt;/em&gt; 이미 사이클의 다른 thread에 의해 보관 유지 다른 잠금을 획득하는 동안 각 스레드가 하나의 잠금을 소유하는 경우 두 가지 유형의 락을 대기주기에.</target>
        </trans-unit>
        <trans-unit id="bb4e00b92009f6d879bb1b9b7ae8ae9bc1457107" translate="yes" xml:space="preserve">
          <source>Finds cycles of threads that are in deadlock waiting to acquire object monitors.</source>
          <target state="translated">Finds cycles of threads that are in deadlock waiting to acquire object monitors.</target>
        </trans-unit>
        <trans-unit id="f54f22922dc2809f07bd2d19da5ead6188f6a3c4" translate="yes" xml:space="preserve">
          <source>Finds cycles of threads that are in deadlock waiting to acquire object monitors. That is, threads that are blocked waiting to enter a synchronization block or waiting to reenter a synchronization block after an &lt;a href=&quot;../../../../java.base/java/lang/object#wait()&quot;&gt;&lt;code&gt;Object.wait&lt;/code&gt;&lt;/a&gt; call, where each thread owns one monitor while trying to obtain another monitor already held by another thread in a cycle.</source>
          <target state="translated">Finds cycles of threads that are in deadlock waiting to acquire object monitors. That is, threads that are blocked waiting to enter a synchronization block or waiting to reenter a synchronization block after an &lt;a href=&quot;../../../../java.base/java/lang/object#wait()&quot;&gt; &lt;code&gt;Object.wait&lt;/code&gt; &lt;/a&gt; call, where each thread owns one monitor while trying to obtain another monitor already held by another thread in a cycle.</target>
        </trans-unit>
        <trans-unit id="31a84b61eb1780643e1cf34b4b4c9457428f23fb" translate="yes" xml:space="preserve">
          <source>Finds cycles of threads that are in deadlock waiting to acquire object monitors. That is, threads that are blocked waiting to enter a synchronization block or waiting to reenter a synchronization block after an &lt;a href=&quot;../object#wait-long-&quot;&gt;&lt;code&gt;Object.wait&lt;/code&gt;&lt;/a&gt; call, where each thread owns one monitor while trying to obtain another monitor already held by another thread in a cycle.</source>
          <target state="translated">교착 상태에있는 스레드의주기를 찾아서 오브젝트 모니터를 확보합니다. 즉, &lt;a href=&quot;../object#wait-long-&quot;&gt; &lt;code&gt;Object.wait&lt;/code&gt; &lt;/a&gt; 호출 후 동기화 블록에 들어가기를 기다리거나 동기화 블록을 다시 입력하기 위해 대기중인 스레드는 각 스레드가 하나의 모니터를 소유하면서주기 중에 다른 스레드가 이미 보유한 다른 모니터를 가져 오려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="ba7611e54b6204b2f8a3dec3bf1df20fc07ecbe1" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are &lt;code&gt;Object&lt;/code&gt; with an optional trailing &lt;code&gt;Object[]&lt;/code&gt; array.</source>
          <target state="translated">Finds or creates a method type whose components are &lt;code&gt;Object&lt;/code&gt; with an optional trailing &lt;code&gt;Object[]&lt;/code&gt; array.</target>
        </trans-unit>
        <trans-unit id="3ff7a212ff7f7a09ea59a45a827e4ffe7a5f3f5d" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are &lt;code&gt;Object&lt;/code&gt; with an optional trailing &lt;code&gt;Object[]&lt;/code&gt; array. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All parameters and the return type will be &lt;code&gt;Object&lt;/code&gt;, except the final array parameter if any, which will be &lt;code&gt;Object[]&lt;/code&gt;.</source>
          <target state="translated">Finds or creates a method type whose components are &lt;code&gt;Object&lt;/code&gt; with an optional trailing &lt;code&gt;Object[]&lt;/code&gt; array. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; &lt;/a&gt;. All parameters and the return type will be &lt;code&gt;Object&lt;/code&gt; , except the final array parameter if any, which will be &lt;code&gt;Object[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45d3ea261afc387a1647f2c5b77dc8ed3332e8fb" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are &lt;code&gt;Object&lt;/code&gt; with an optional trailing &lt;code&gt;Object[]&lt;/code&gt; array. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All parameters and the return type will be &lt;code&gt;Object&lt;/code&gt;, except the final array parameter if any, which will be &lt;code&gt;Object[]&lt;/code&gt;.</source>
          <target state="translated">선택적 후행 &lt;code&gt;Object[]&lt;/code&gt; 배열을 가진 구성 요소가 &lt;code&gt;Object&lt;/code&gt; 인 메소드 유형을 찾거나 작성합니다 . &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 의&lt;/a&gt; 간이 메소드입니다 . 모든 매개 변수와 리턴 유형은 &lt;code&gt;Object&lt;/code&gt; 입니다.최종 배열 매개 변수가있는 경우를 제외하고 이며 &lt;code&gt;Object[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="755a8a94c7a9ab2907842e0dfee1f16e4d53df3e" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are all &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">Finds or creates a method type whose components are all &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d6b3c78bbcb4400626c4bfa63f2c773c0deb337" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are all &lt;code&gt;Object&lt;/code&gt;. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All parameters and the return type will be Object.</source>
          <target state="translated">Finds or creates a method type whose components are all &lt;code&gt;Object&lt;/code&gt; . Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; &lt;/a&gt;. All parameters and the return type will be Object.</target>
        </trans-unit>
        <trans-unit id="caec14e6ef50c8bf4fe8d7fb1bcde78604a44123" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are all &lt;code&gt;Object&lt;/code&gt;. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All parameters and the return type will be Object.</source>
          <target state="translated">컴포넌트가 모두 &lt;code&gt;Object&lt;/code&gt; 인 메소드 유형을 찾거나 작성합니다 . 편의성 방법&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 의&lt;/a&gt;. 모든 매개 변수와 리턴 유형은 Object입니다.</target>
        </trans-unit>
        <trans-unit id="f824399e52e4632197517ead0221bb98a004c902" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a different return type.</source>
          <target state="translated">Finds or creates a method type with a different return type.</target>
        </trans-unit>
        <trans-unit id="f3c0b789090627249297e2ae876e09afa0acb458" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a different return type. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Finds or creates a method type with a different return type. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0a9a1f5d26c21c354b1653b215b25e0546272e13" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a different return type. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">리턴 유형이 다른 메소드 유형을 찾거나 작성합니다. 편의성 방법&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 의&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="eac98585bca72a958f2f37bc86968d2acc943624" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a single different parameter type.</source>
          <target state="translated">Finds or creates a method type with a single different parameter type.</target>
        </trans-unit>
        <trans-unit id="8028b74b7f92e3122ccb97bc0336386637297566" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a single different parameter type. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Finds or creates a method type with a single different parameter type. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2dd68a0e1c7f55f2ff719c1d2dddb6aaa215bd79" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a single different parameter type. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">하나의 다른 매개 변수 유형으로 메소드 유형을 찾거나 작성합니다. 편의성 방법&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 의&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a1c99958d01f0f97cb10abd374a0167e0d21f888" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with additional parameter types.</source>
          <target state="translated">Finds or creates a method type with additional parameter types.</target>
        </trans-unit>
        <trans-unit id="e5c6a19c8f2602a136a7293cd2b2f3b131a424fd" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with additional parameter types. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Finds or creates a method type with additional parameter types. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bbd506dbecbb276790f829d0e64de83eba036633" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with additional parameter types. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">추가 매개 변수 유형이있는 메소드 유형을 찾거나 작성합니다. &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 의&lt;/a&gt; 간이 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="7b98e7dffd01824793c8528912738e7b4124b6c6" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with some parameter types omitted.</source>
          <target state="translated">Finds or creates a method type with some parameter types omitted.</target>
        </trans-unit>
        <trans-unit id="bf0c0da371470fb5e60e235a385e8402c62509f3" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with some parameter types omitted. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Finds or creates a method type with some parameter types omitted. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="54b87d121a8607e43933bceecb002602a25badd9" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with some parameter types omitted. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">일부 매개 변수 유형이 생략 된 메소드 유형을 찾거나 작성합니다. &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 의&lt;/a&gt; 간이 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="f884b03a5b33b1e32bad90a97235a0de49081b82" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components.</source>
          <target state="translated">Finds or creates a method type with the given components.</target>
        </trans-unit>
        <trans-unit id="1b02e6de98c28a9037e421b9fa1490b2feb2fa1d" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e5af1ab6ed6484b3382fc7cd88a58813fbd016bf" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The leading parameter type is prepended to the remaining array.</source>
          <target state="translated">Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; &lt;/a&gt;. The leading parameter type is prepended to the remaining array.</target>
        </trans-unit>
        <trans-unit id="4675fcda352ad3f6aeeae071dd9a837bb7671506" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has no parameter types.</source>
          <target state="translated">Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; &lt;/a&gt;. The resulting method has no parameter types.</target>
        </trans-unit>
        <trans-unit id="41506aaeb882e9ec798c68b65f2e56a0ab0331db" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has the same parameter types as &lt;code&gt;ptypes&lt;/code&gt;, and the specified return type.</source>
          <target state="translated">Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; &lt;/a&gt;. The resulting method has the same parameter types as &lt;code&gt;ptypes&lt;/code&gt; , and the specified return type.</target>
        </trans-unit>
        <trans-unit id="8611060ff08d24c9119ef98b7f64fb7d05825946" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has the single given parameter type.</source>
          <target state="translated">Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; &lt;/a&gt;. The resulting method has the single given parameter type.</target>
        </trans-unit>
        <trans-unit id="1c0153e37c9ed7069a0bb24c0086ac2d215a54ea" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진 컴포넌트로 메소드 유형을 찾거나 작성합니다. &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 의&lt;/a&gt; 간이 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="c751ba9d98f6a923a0919f62d20a3afdd914b9eb" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The leading parameter type is prepended to the remaining array.</source>
          <target state="translated">주어진 컴포넌트로 메소드 유형을 찾거나 작성합니다. &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 의&lt;/a&gt; 간이 메소드입니다 . 선행 매개 변수 유형은 나머지 배열 앞에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="f9889c23b91b52f3101495e7cded108684d8c29b" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has no parameter types.</source>
          <target state="translated">주어진 컴포넌트로 메소드 유형을 찾거나 작성합니다. &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 의&lt;/a&gt; 간이 메소드입니다 . 결과 메소드에는 매개 변수 유형이 없습니다.</target>
        </trans-unit>
        <trans-unit id="6de7eea09a64e013bd0a48c8be64c9529b3cc848" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has the same parameter types as &lt;code&gt;ptypes&lt;/code&gt;, and the specified return type.</source>
          <target state="translated">주어진 컴포넌트로 메소드 유형을 찾거나 작성합니다. &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 의&lt;/a&gt; 간이 메소드입니다 . 결과 메소드는 다음과 동일한 매개 변수 유형을 갖습니다. &lt;code&gt;ptypes&lt;/code&gt; 및 지정된 리턴 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="ced68f4971421ced1d3f730ac43b178eec70ffde" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has the single given parameter type.</source>
          <target state="translated">주어진 컴포넌트로 메소드 유형을 찾거나 작성합니다. &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 의&lt;/a&gt; 간이 메소드 . 결과 메소드에는 단일 매개 변수 유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0054a38edd4bfc307f8a3961f084d14173e32b7" translate="yes" xml:space="preserve">
          <source>Finds or creates an instance of a method type, given the spelling of its bytecode descriptor.</source>
          <target state="translated">Finds or creates an instance of a method type, given the spelling of its bytecode descriptor.</target>
        </trans-unit>
        <trans-unit id="153a9dcaa8d7c983c86317eabbd8828f54846cea" translate="yes" xml:space="preserve">
          <source>Finds or creates an instance of a method type, given the spelling of its bytecode descriptor. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. Any class or interface name embedded in the descriptor string will be resolved by calling &lt;a href=&quot;../classloader#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.loadClass(java.lang.String)&lt;/code&gt;&lt;/a&gt; on the given loader (or if it is null, on the system class loader).</source>
          <target state="translated">Finds or creates an instance of a method type, given the spelling of its bytecode descriptor. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; &lt;/a&gt;. Any class or interface name embedded in the descriptor string will be resolved by calling &lt;a href=&quot;../classloader#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.loadClass(java.lang.String)&lt;/code&gt; &lt;/a&gt; on the given loader (or if it is null, on the system class loader).</target>
        </trans-unit>
        <trans-unit id="a14ed07f8800d1efe9366408a9e41bdecbbcd3dd" translate="yes" xml:space="preserve">
          <source>Finds or creates an instance of a method type, given the spelling of its bytecode descriptor. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. Any class or interface name embedded in the descriptor string will be resolved by calling &lt;a href=&quot;../classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.loadClass(java.lang.String)&lt;/code&gt;&lt;/a&gt; on the given loader (or if it is null, on the system class loader).</source>
          <target state="translated">바이트 코드 디스크립터의 철자가 지정된 메소드 유형의 인스턴스를 찾거나 작성합니다. &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 의&lt;/a&gt; 간이 메소드입니다 . 디스크립터 문자열에 임베드 된 클래스 또는 인터페이스 이름은 &lt;a href=&quot;../classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.loadClass(java.lang.String)&lt;/code&gt; &lt;/a&gt; 호출하여 해석됩니다. 은 제공된 로더에서 (또는 시스템 클래스 로더에서 널인 경우 를 .</target>
        </trans-unit>
        <trans-unit id="d93f29ea75efef748d866f0da49f213c0e9f5ac7" translate="yes" xml:space="preserve">
          <source>Finds or creates an instance of the given method type.</source>
          <target state="translated">주어진 메소드 유형의 인스턴스를 찾거나 작성합니다.</target>
        </trans-unit>
        <trans-unit id="569e9b52ae1ebdf9aa57f2038fa2d8126ed7ae0a" translate="yes" xml:space="preserve">
          <source>Finds the class with the given &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; in a module defined to this class loader.</source>
          <target state="translated">Finds the class with the given &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; in a module defined to this class loader.</target>
        </trans-unit>
        <trans-unit id="9c718b496a10f106690a3ed497808864ed26f125" translate="yes" xml:space="preserve">
          <source>Finds the class with the given &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; in a module defined to this class loader. Class loader implementations that support loading from modules should override this method.</source>
          <target state="translated">Finds the class with the given &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; in a module defined to this class loader. Class loader implementations that support loading from modules should override this method.</target>
        </trans-unit>
        <trans-unit id="bd05c7e1ea365c2fd6afc2000bf12d4d55a3ec91" translate="yes" xml:space="preserve">
          <source>Finds the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;.</source>
          <target state="translated">Finds the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="16dea6a554a463b648694922297ca1a5e84ce68b" translate="yes" xml:space="preserve">
          <source>Finds the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;. This method should be overridden by class loader implementations that follow the delegation model for loading classes, and will be invoked by the &lt;a href=&quot;#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method after checking the parent class loader for the requested class.</source>
          <target state="translated">Finds the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;. This method should be overridden by class loader implementations that follow the delegation model for loading classes, and will be invoked by the &lt;a href=&quot;#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt; method after checking the parent class loader for the requested class.</target>
        </trans-unit>
        <trans-unit id="f5a871460eb19c436997b177615c5e7039668f5e" translate="yes" xml:space="preserve">
          <source>Finds the class with the specified &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt;. This method should be overridden by class loader implementations that follow the delegation model for loading classes, and will be invoked by the &lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method after checking the parent class loader for the requested class. The default implementation throws a &lt;code&gt;ClassNotFoundException&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;#name&quot;&gt;이진 이름을&lt;/a&gt; 가진 클래스를 찾습니다 . 이 메소드는 클래스로드를위한 위임 모델을 따르는 클래스 로더 구현에 의해 대체되어야하며 요청 된 클래스의 상위 클래스 로더를 점검 한 후 &lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 메소드에 의해 호출됩니다 . 기본 구현은 &lt;code&gt;ClassNotFoundException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="a8c6ec34de5c0fbb0d83a91eba95b2eea61b8e53" translate="yes" xml:space="preserve">
          <source>Finds the greatest double less than &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">Finds the greatest double less than &lt;code&gt;d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8df7423e6f70ccdd28b0c907eca102e98c4984e" translate="yes" xml:space="preserve">
          <source>Finds the greatest double less than &lt;code&gt;d&lt;/code&gt;. If &lt;code&gt;NaN&lt;/code&gt;, returns same value.</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; 보다 큰 최대 double을 찾습니다 . &lt;code&gt;NaN&lt;/code&gt; 인 경우 동일한 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="18a3710ff91d58cbca313d6f1f004f0b7bb471b7" translate="yes" xml:space="preserve">
          <source>Finds the least double greater than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;), or the greatest double less than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">Finds the least double greater than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; ), or the greatest double less than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2eb38973e2c36f4d61719edd6f74236d73c6d18d" translate="yes" xml:space="preserve">
          <source>Finds the least double greater than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;), or the greatest double less than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;). If &lt;code&gt;NaN&lt;/code&gt;, returns same value. Does not affect floating-point flags, provided these member functions do not: Double.longBitsToDouble(long) Double.doubleToLongBits(double) Double.isNaN(double)</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; 보다 큰 최소 double이 2보다 크거나 ( &lt;code&gt;positive&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우 ) &lt;code&gt;d&lt;/code&gt; 보다 큰 최대 double이 2보다 작은 것을 찾습니다 ( &lt;code&gt;positive&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 인 경우 ). &lt;code&gt;NaN&lt;/code&gt; 인 경우 인 동일한 값을 반환합니다. 다음과 같은 멤버 함수가 제공하지 않는 경우 부동 소수점 플래그에 영향을 미치지 않습니다. Double.longBitsToDouble (long) Double.doubleToLongBits (double) Double.isNaN (double)</target>
        </trans-unit>
        <trans-unit id="fbe1e5e36b4f252382813559f64ee9ed227ae281" translate="yes" xml:space="preserve">
          <source>Finds the least double greater than &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">Finds the least double greater than &lt;code&gt;d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a9b77e9ccd9b30fd33d9d77ccc1bda8c29689f9" translate="yes" xml:space="preserve">
          <source>Finds the least double greater than &lt;code&gt;d&lt;/code&gt;. If &lt;code&gt;NaN&lt;/code&gt;, returns same value.</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; 보다 최소값이 2 배 큰 값을 찾습니다 . &lt;code&gt;NaN&lt;/code&gt; 인 경우 동일한 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2f44af75d9a63cc78ef7a212aaff2e3ec7ac94a9" translate="yes" xml:space="preserve">
          <source>Finds the next character in the document with a character in &lt;code&gt;string&lt;/code&gt;, starting at offset &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="translated">Finds the next character in the document with a character in &lt;code&gt;string&lt;/code&gt; , starting at offset &lt;code&gt;start&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2303bad62024759df50ac8556ea8880a8bd8bb9b" translate="yes" xml:space="preserve">
          <source>Finds the next character in the document with a character in &lt;code&gt;string&lt;/code&gt;, starting at offset &lt;code&gt;start&lt;/code&gt;. If there are no characters found, -1 will be returned.</source>
          <target state="translated">Finds the next character in the document with a character in &lt;code&gt;string&lt;/code&gt; , starting at offset &lt;code&gt;start&lt;/code&gt; . If there are no characters found, -1 will be returned.</target>
        </trans-unit>
        <trans-unit id="a9bad9d05a61ad1610d085ed42eeeebc9ca3099d" translate="yes" xml:space="preserve">
          <source>Finds the resource with the given name.</source>
          <target state="translated">Finds the resource with the given name.</target>
        </trans-unit>
        <trans-unit id="f95713d67a08f050d9ae3fd6ef313052ef9a316e" translate="yes" xml:space="preserve">
          <source>Finds the resource with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code.</source>
          <target state="translated">주어진 이름의 리소스를 찾습니다. 리소스는 코드의 위치와 무관 한 방식으로 클래스 코드에서 액세스 할 수있는 일부 데이터 (이미지, 오디오, 텍스트 등)입니다.</target>
        </trans-unit>
        <trans-unit id="781d4b515ca95fefadfde75c483c77560536603b" translate="yes" xml:space="preserve">
          <source>Finds the resource with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code. The name of a resource is a &quot;/&quot;-separated path name that identifies the resource.</source>
          <target state="translated">주어진 이름의 리소스를 찾습니다. 리소스는 코드의 위치와 무관 한 방식으로 클래스 코드에서 액세스 할 수있는 일부 데이터 (이미지, 오디오, 텍스트 등)입니다. 자원의 이름은 자원을 식별하는 &quot;/&quot;로 구분 된 경로 이름입니다.</target>
        </trans-unit>
        <trans-unit id="e48458ef6aafb5d40a3929be0d4826c7d1c93d2b" translate="yes" xml:space="preserve">
          <source>Finds the resource with the given name. Class loader implementations should override this method to specify where to find resources.</source>
          <target state="translated">주어진 이름의 리소스를 찾습니다. 클래스 로더 구현은이 메소드를 대체하여 자원을 찾을 위치를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="eb9a8a55a872ddd255aa5b300065d4935a31d282" translate="yes" xml:space="preserve">
          <source>Finds the resource with the given name. Class loader implementations should override this method.</source>
          <target state="translated">Finds the resource with the given name. Class loader implementations should override this method.</target>
        </trans-unit>
        <trans-unit id="cb6e13171ee3f9ef6b8e543d5e324426393d3511" translate="yes" xml:space="preserve">
          <source>Finds the resource with the specified name on the URL search path.</source>
          <target state="translated">URL 검색 경로에서 지정된 이름의 리소스를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="4ac987e36c94cd1a424c394fd2e53f3d45f6c901" translate="yes" xml:space="preserve">
          <source>Finer control over gaps and overlaps is available in two ways. If you simply want to use the later offset at overlaps then call &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap()&quot;&gt;&lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; immediately after this method.</source>
          <target state="translated">Finer control over gaps and overlaps is available in two ways. If you simply want to use the later offset at overlaps then call &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap()&quot;&gt; &lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; immediately after this method.</target>
        </trans-unit>
        <trans-unit id="44c6084b01b445cf12e7e4c28f535b70a5b3a288" translate="yes" xml:space="preserve">
          <source>Finer control over gaps and overlaps is available in two ways. If you simply want to use the later offset at overlaps then call &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt;&lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; immediately after this method.</source>
          <target state="translated">갭과 오버랩에 대한 세밀한 제어는 두 가지 방법으로 가능합니다. 오버랩에서 나중에 오프셋을 사용하려면 이 메서드 바로 뒤에 &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt; &lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; 을 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c29493a34a4dd5c58c02ca32396105a6340fd8a" translate="yes" xml:space="preserve">
          <source>Finer control over the WebSocket Opening Handshake can be achieved by using a custom &lt;code&gt;HttpClient&lt;/code&gt;.</source>
          <target state="translated">Finer control over the WebSocket Opening Handshake can be achieved by using a custom &lt;code&gt;HttpClient&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d6315fcd4e1f21d6c5e8ddfedb5c0d2367da837" translate="yes" xml:space="preserve">
          <source>Finishes a multiple-part encryption or decryption operation, depending on how this cipher was initialized.</source>
          <target state="translated">이 암호가 초기화 된 방식에 따라 다중 부분 암호화 또는 암호 해독 작업을 완료합니다.</target>
        </trans-unit>
        <trans-unit id="5ac0306b0ad5993f87d84296e6e19b711bd7f410" translate="yes" xml:space="preserve">
          <source>Finishes the MAC operation.</source>
          <target state="translated">MAC 작업을 완료합니다.</target>
        </trans-unit>
        <trans-unit id="3b39857f6b67ccd1155138cd5b904de0cf317e58" translate="yes" xml:space="preserve">
          <source>Finishes the process of connecting a socket channel.</source>
          <target state="translated">소켓 채널 연결 프로세스를 완료합니다.</target>
        </trans-unit>
        <trans-unit id="0c5e8e9fdc708156343f8313826cac87b252a6b0" translate="yes" xml:space="preserve">
          <source>Finishes the signature operation and stores the resulting signature bytes in the provided buffer &lt;code&gt;outbuf&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Finishes the signature operation and stores the resulting signature bytes in the provided buffer &lt;code&gt;outbuf&lt;/code&gt; , starting at &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55822bdee2f9fef91204ece6141d244e5a1799c3" translate="yes" xml:space="preserve">
          <source>Finishes the signature operation and stores the resulting signature bytes in the provided buffer &lt;code&gt;outbuf&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt;. The format of the signature depends on the underlying signature scheme.</source>
          <target state="translated">서명 작업을 마치고 &lt;code&gt;offset&lt;/code&gt; 에서 시작 하여 제공된 서명 &lt;code&gt;outbuf&lt;/code&gt; 에 결과 서명 바이트를 저장합니다 . 서명 형식은 기본 서명 체계에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="fdd7ec97e8964605068427812b100a1e9dac6121" translate="yes" xml:space="preserve">
          <source>Finishes this signature operation and stores the resulting signature bytes in the provided buffer &lt;code&gt;outbuf&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">Finishes this signature operation and stores the resulting signature bytes in the provided buffer &lt;code&gt;outbuf&lt;/code&gt; , starting at &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="664444316115d431c1788278996ab50a5022028c" translate="yes" xml:space="preserve">
          <source>Finishes this signature operation and stores the resulting signature bytes in the provided buffer &lt;code&gt;outbuf&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt;. The format of the signature depends on the underlying signature scheme.</source>
          <target state="translated">이 서명 작업을 완료 하고 &lt;code&gt;offset&lt;/code&gt; 에서 시작 하여 제공된 서명 &lt;code&gt;outbuf&lt;/code&gt; 에 결과 서명 바이트를 저장합니다 . 서명 형식은 기본 서명 체계에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="84838ca2a969d7b013a01fee8917ab060f79232d" translate="yes" xml:space="preserve">
          <source>Finishes writing compressed data to the output stream without closing the underlying stream.</source>
          <target state="translated">Finishes writing compressed data to the output stream without closing the underlying stream.</target>
        </trans-unit>
        <trans-unit id="c78d72a268ed639674d9989dffe4bab9dbd346f3" translate="yes" xml:space="preserve">
          <source>Finishes writing compressed data to the output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.</source>
          <target state="translated">기본 스트림을 닫지 않고 압축 된 데이터를 출력 스트림에 기록합니다. 동일한 출력 스트림에 여러 필터를 연속으로 적용 할 때이 방법을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f8adba988e7c013ccb0eb762f6cf5eeed903e3f8" translate="yes" xml:space="preserve">
          <source>Finishes writing the contents of the ZIP output stream without closing the underlying stream.</source>
          <target state="translated">Finishes writing the contents of the ZIP output stream without closing the underlying stream.</target>
        </trans-unit>
        <trans-unit id="ad1b71c11246b0b6713d9ea2eb36b6cf4f329a8e" translate="yes" xml:space="preserve">
          <source>Finishes writing the contents of the ZIP output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.</source>
          <target state="translated">기본 스트림을 닫지 않고 ZIP 출력 스트림의 내용 쓰기를 완료합니다. 동일한 출력 스트림에 여러 필터를 연속으로 적용 할 때이 방법을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f5bb460836a561078aab2dda62c0c063c0f8bd42" translate="yes" xml:space="preserve">
          <source>Finishes writing uncompressed data to the output stream without closing the underlying stream.</source>
          <target state="translated">Finishes writing uncompressed data to the output stream without closing the underlying stream.</target>
        </trans-unit>
        <trans-unit id="26f022245e2c68d8c1c43250ca56653f380f197f" translate="yes" xml:space="preserve">
          <source>Finishes writing uncompressed data to the output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.</source>
          <target state="translated">기본 스트림을 닫지 않고 압축되지 않은 데이터를 출력 스트림에 기록합니다. 동일한 출력 스트림에 여러 필터를 연속으로 적용 할 때이 방법을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="47bf70ea26f1d56954d9d56dceffc42023159f37" translate="yes" xml:space="preserve">
          <source>Finishings</source>
          <target state="translated">Finishings</target>
        </trans-unit>
        <trans-unit id="613845f04d4258d53ec965e5ad21bbe27e9b3457" translate="yes" xml:space="preserve">
          <source>Finishings.getCategory()</source>
          <target state="translated">Finishings.getCategory()</target>
        </trans-unit>
        <trans-unit id="e267c2aa2ff11c4414aa4d45d764b04da2288d05" translate="yes" xml:space="preserve">
          <source>Finishings.getEnumValueTable()</source>
          <target state="translated">Finishings.getEnumValueTable()</target>
        </trans-unit>
        <trans-unit id="aaa82961c4da64e927622cf2142e00c401f42f81" translate="yes" xml:space="preserve">
          <source>Finishings.getName()</source>
          <target state="translated">Finishings.getName()</target>
        </trans-unit>
        <trans-unit id="5b15b4c91296746e3b2afd503a32d07b02cd825c" translate="yes" xml:space="preserve">
          <source>Finishings.getOffset()</source>
          <target state="translated">Finishings.getOffset()</target>
        </trans-unit>
        <trans-unit id="c3ae27c44b2b5d021db8ee2080b698465cc55fe5" translate="yes" xml:space="preserve">
          <source>Finishings.getStringTable()</source>
          <target state="translated">Finishings.getStringTable()</target>
        </trans-unit>
        <trans-unit id="7eef80d93d788314330426331bc223ed843e0b0e" translate="yes" xml:space="preserve">
          <source>Fire &lt;code&gt;PropertyChange&lt;/code&gt; listener, if one is registered, when children are added or removed.</source>
          <target state="translated">Fire &lt;code&gt;PropertyChange&lt;/code&gt; listener, if one is registered, when children are added or removed.</target>
        </trans-unit>
        <trans-unit id="57ad4ef75f7f2853dc5f7ec8695be63b2c37c0e1" translate="yes" xml:space="preserve">
          <source>Fire PropertyChange listener, if one is registered, when children added/removed.</source>
          <target state="translated">Fire PropertyChange listener, if one is registered, when children added/removed.</target>
        </trans-unit>
        <trans-unit id="31ba180507c66427d34679b2fbf4e571699f61b4" translate="yes" xml:space="preserve">
          <source>Fire PropertyChange listener, if one is registered, when focus events happen</source>
          <target state="translated">Fire PropertyChange listener, if one is registered, when focus events happen</target>
        </trans-unit>
        <trans-unit id="fcb8d557480a7ee672901611680f258737cf3936" translate="yes" xml:space="preserve">
          <source>Fire PropertyChange listener, if one is registered, when shown/hidden..</source>
          <target state="translated">Fire PropertyChange listener, if one is registered, when shown/hidden..</target>
        </trans-unit>
        <trans-unit id="09c71b029c9bf07168317bfb4ae358cc9e8148dd" translate="yes" xml:space="preserve">
          <source>Fire a BeanContextshipEvent on the BeanContextMembershipListener interface</source>
          <target state="translated">BeanContextMembershipListener 인터페이스에서 BeanContextshipEvent 발생</target>
        </trans-unit>
        <trans-unit id="0aa3a904c5ae23735f848b24a71f336108a09eee" translate="yes" xml:space="preserve">
          <source>Fire a visible data property change notification.</source>
          <target state="translated">Fire a visible data property change notification.</target>
        </trans-unit>
        <trans-unit id="72e5526ef5cbbe55f1ef6e3b276cadbf88924a85" translate="yes" xml:space="preserve">
          <source>Fire a visible data property change notification. A 'visible' data property is one that represents something about the way the component appears on the display, where that appearance isn't bound to any other property. It notifies screen readers that the visual appearance of the component has changed, so they can notify the user.</source>
          <target state="translated">Fire a visible data property change notification. A 'visible' data property is one that represents something about the way the component appears on the display, where that appearance isn't bound to any other property. It notifies screen readers that the visual appearance of the component has changed, so they can notify the user.</target>
        </trans-unit>
        <trans-unit id="103cdcb81226678781c9b0730e47e90332c7adf2" translate="yes" xml:space="preserve">
          <source>Fire accessible property change events when the state of the toggle button changes.</source>
          <target state="translated">Fire accessible property change events when the state of the toggle button changes.</target>
        </trans-unit>
        <trans-unit id="f14775246233654a4a799ecb2452e052e32512ad" translate="yes" xml:space="preserve">
          <source>Fires a &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; indicating that a new service has become available.</source>
          <target state="translated">새로운 서비스가 이용 가능 해졌음을 나타내는 &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; 를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="06abccd3849a5f91d1b6a7e9ac89b35962c48a5d" translate="yes" xml:space="preserve">
          <source>Fires a &lt;code&gt;BeanContextServiceEvent&lt;/code&gt; notifying of a new service.</source>
          <target state="translated">새로운 서비스를 통지 하는 &lt;code&gt;BeanContextServiceEvent&lt;/code&gt; 를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="503df8a64c51c652c242e07836048d4e0b429689" translate="yes" xml:space="preserve">
          <source>Fires a &lt;code&gt;BeanContextServiceEvent&lt;/code&gt; notifying of a service being revoked.</source>
          <target state="translated">서비스 취소를 알리는 &lt;code&gt;BeanContextServiceEvent&lt;/code&gt; 를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="bd34decd0218e3d4c1125508671afd92c9d2e750" translate="yes" xml:space="preserve">
          <source>Fires a &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; indicating that a particular service is no longer available.</source>
          <target state="translated">&lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; 를 발생 시킵니다. 특정 서비스를 더 이상 사용할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="3f3d2a19df8052d9da98f7fd62dc3439975abed1" translate="yes" xml:space="preserve">
          <source>Fires a PropertyChangeEvent in response to a change in a bound property.</source>
          <target state="translated">Fires a PropertyChangeEvent in response to a change in a bound property.</target>
        </trans-unit>
        <trans-unit id="e9446dd2a1169cbdbaecb1f508d827a91e6ae858" translate="yes" xml:space="preserve">
          <source>Fires a PropertyChangeEvent in response to a change in a bound property. The event will be delivered to all registered PropertyChangeListeners. No event will be delivered if oldValue and newValue are the same.</source>
          <target state="translated">Fires a PropertyChangeEvent in response to a change in a bound property. The event will be delivered to all registered PropertyChangeListeners. No event will be delivered if oldValue and newValue are the same.</target>
        </trans-unit>
        <trans-unit id="a957a72b34aec00b972da201a946e1431607e82f" translate="yes" xml:space="preserve">
          <source>Fires a PropertyChangeEvent in response to a change in a vetoable property.</source>
          <target state="translated">Fires a PropertyChangeEvent in response to a change in a vetoable property.</target>
        </trans-unit>
        <trans-unit id="986cd3a235352958182fd166c7bf37c930dc945e" translate="yes" xml:space="preserve">
          <source>Fires a PropertyChangeEvent in response to a change in a vetoable property. The event will be delivered to all registered VetoableChangeListeners. If a VetoableChangeListener throws a PropertyVetoException, a new event is fired reverting all VetoableChangeListeners to the old value and the exception is then rethrown. No event will be delivered if oldValue and newValue are the same.</source>
          <target state="translated">Fires a PropertyChangeEvent in response to a change in a vetoable property. The event will be delivered to all registered VetoableChangeListeners. If a VetoableChangeListener throws a PropertyVetoException, a new event is fired reverting all VetoableChangeListeners to the old value and the exception is then rethrown. No event will be delivered if oldValue and newValue are the same.</target>
        </trans-unit>
        <trans-unit id="0272e05986be98da0beab49be185a4045f3b55f6" translate="yes" xml:space="preserve">
          <source>Fires a property change event to listeners that have been registered to track updates of all properties or a property with the specified name.</source>
          <target state="translated">지정된 이름을 가진 모든 속성 또는 속성의 업데이트를 추적하도록 등록 된 리스너에 속성 변경 이벤트를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="fb3b178ed64e3669aa41e0d31c4e41b078ca585c" translate="yes" xml:space="preserve">
          <source>Fires a property change for the INVOKES_STOP_CELL_EDITING_PROPERTY.</source>
          <target state="translated">Fires a property change for the INVOKES_STOP_CELL_EDITING_PROPERTY.</target>
        </trans-unit>
        <trans-unit id="2ab9d718e99020efac9e65bbfce54a784c540be5" translate="yes" xml:space="preserve">
          <source>Fires an &lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; event and then performs the action specified by the internal frame's default close operation.</source>
          <target state="translated">Fires an &lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; event and then performs the action specified by the internal frame's default close operation.</target>
        </trans-unit>
        <trans-unit id="968363cc64c7c990ddd76a14502d95e3f36c269c" translate="yes" xml:space="preserve">
          <source>Fires an &lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; event and then performs the action specified by the internal frame's default close operation. This method is typically invoked by the look-and-feel-implemented action handler for the internal frame's close button.</source>
          <target state="translated">Fires an &lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; event and then performs the action specified by the internal frame's default close operation. This method is typically invoked by the look-and-feel-implemented action handler for the internal frame's close button.</target>
        </trans-unit>
        <trans-unit id="b02cae2b2657360ceee054992ea59480141cb69c" translate="yes" xml:space="preserve">
          <source>Fires an internal frame event.</source>
          <target state="translated">Fires an internal frame event.</target>
        </trans-unit>
        <trans-unit id="89c568029389405c57e9dea492e5cd3bb5c9b9f1" translate="yes" xml:space="preserve">
          <source>Fires one or more &lt;code&gt;ActionEvent&lt;/code&gt;s at specified intervals.</source>
          <target state="translated">Fires one or more &lt;code&gt;ActionEvent&lt;/code&gt; s at specified intervals.</target>
        </trans-unit>
        <trans-unit id="559c22a99a880d37fdcacb440db810f4efae3bc8" translate="yes" xml:space="preserve">
          <source>Fires one or more &lt;code&gt;ActionEvent&lt;/code&gt;s at specified intervals. An example use is an animation object that uses a &lt;code&gt;Timer&lt;/code&gt; as the trigger for drawing its frames.</source>
          <target state="translated">Fires one or more &lt;code&gt;ActionEvent&lt;/code&gt; s at specified intervals. An example use is an animation object that uses a &lt;code&gt;Timer&lt;/code&gt; as the trigger for drawing its frames.</target>
        </trans-unit>
        <trans-unit id="aff8f470ff4d85acb0ffa60c7430fe9d00f9abd6" translate="yes" xml:space="preserve">
          <source>First Element (Head)</source>
          <target state="translated">First Element (Head)</target>
        </trans-unit>
        <trans-unit id="c00bead1c81e91e54625c2709aaa9b013a2b0de5" translate="yes" xml:space="preserve">
          <source>First Week</source>
          <target state="translated">첫번째 주</target>
        </trans-unit>
        <trans-unit id="a4976839981b7259ef12f8c95835462246377c8c" translate="yes" xml:space="preserve">
          <source>First a list is created consisting of two strings: &quot;one&quot;; and &quot;two&quot;. Then a stream is created from that list. Next the list is modified by adding a third string: &quot;three&quot;. Finally the elements of the stream are collected and joined together. Since the list was modified before the terminal &lt;code&gt;collect&lt;/code&gt; operation commenced the result will be a string of &quot;one two three&quot;. All the streams returned from JDK collections, and most other JDK classes, are well-behaved in this manner; for streams generated by other libraries, see &lt;a href=&quot;package-summary#StreamSources&quot;&gt;Low-level stream construction&lt;/a&gt; for requirements for building well-behaved streams.</source>
          <target state="translated">먼저 두 개의 문자열로 구성된 목록이 작성됩니다. &quot;1&quot;; 그리고 &quot;2&quot;. 그런 다음 해당 목록에서 스트림이 작성됩니다. 다음으로 세 번째 문자열 &quot;three&quot;를 추가하여 목록을 수정합니다. 마지막으로 스트림의 요소가 수집되고 결합됩니다. 터미널 &lt;code&gt;collect&lt;/code&gt; 작업이 시작 되기 전에 목록이 수정 되었으므로 결과는 &quot;1 2 3&quot;의 문자열이됩니다. JDK 컬렉션과 대부분의 다른 JDK 클래스에서 반환 된 모든 스트림은 이러한 방식으로 잘 작동합니다. 다른 라이브러리에서 생성 된 &lt;a href=&quot;package-summary#StreamSources&quot;&gt;스트림의 경우&lt;/a&gt; 올바르게 작동하는 스트림을 만들기 위한 요구 사항은 저수준 스트림 구성 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="39b07f53f07df567f05d16e0e9893b4691140fd1" translate="yes" xml:space="preserve">
          <source>First day: Monday</source>
          <target state="translated">첫날 : 월요일</target>
        </trans-unit>
        <trans-unit id="4e19c31cb79791e4145b98235bbf3558ea85be48" translate="yes" xml:space="preserve">
          <source>First it finds any custom &lt;code&gt;LoggerFinder&lt;/code&gt; provider using the &lt;a href=&quot;../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; facility with the &lt;a href=&quot;classloader#getSystemClassLoader()&quot;&gt;system class loader&lt;/a&gt;.</source>
          <target state="translated">First it finds any custom &lt;code&gt;LoggerFinder&lt;/code&gt; provider using the &lt;a href=&quot;../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; facility with the &lt;a href=&quot;classloader#getSystemClassLoader()&quot;&gt;system class loader&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d4c478e34da09cdfa9e1505ccf9f2c5cb7d8a64d" translate="yes" xml:space="preserve">
          <source>First tag value.</source>
          <target state="translated">첫 번째 태그 값</target>
        </trans-unit>
        <trans-unit id="1029f6b364a8a29e356b09dc711eef15ac82d32a" translate="yes" xml:space="preserve">
          <source>First the &lt;code&gt;checkAccess&lt;/code&gt; method of this thread is called with no arguments. This may result in throwing a &lt;code&gt;SecurityException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;checkAccess&lt;/code&gt; 스레드 의 checkAccess 메소드가 인수없이 호출됩니다. 이로 인해 &lt;code&gt;SecurityException&lt;/code&gt; 이 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="758ee2de5be3bc458e3bd5ada5df83a699dc7690" translate="yes" xml:space="preserve">
          <source>First the value of the attribute</source>
          <target state="translated">먼저 속성의 값</target>
        </trans-unit>
        <trans-unit id="41d531b50057258f52a83c10f4ebe55993a48c35" translate="yes" xml:space="preserve">
          <source>First wire handle to be assigned.</source>
          <target state="translated">할당 할 첫 번째 와이어 핸들.</target>
        </trans-unit>
        <trans-unit id="60c563401af656126385313287022f70e55351b3" translate="yes" xml:space="preserve">
          <source>First, &lt;code&gt;getBundle&lt;/code&gt; tries loading a resource bundle in the following sequence.</source>
          <target state="translated">먼저 &lt;code&gt;getBundle&lt;/code&gt; 은 다음 순서로 자원 번들을로드하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="a54b1c1f9ec4ef87f59dee759620de770d67eb72" translate="yes" xml:space="preserve">
          <source>First, an object of a subclass of &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; is required, to export the connector server through RMI:</source>
          <target state="translated">먼저 RMI를 통해 커넥터 서버를 내보내려면 &lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; &lt;/a&gt; 서브 클래스의 오브젝트 가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9461c5c263d4215758929229f19d75328b0ed69e" translate="yes" xml:space="preserve">
          <source>First, if a security manager exists, its &lt;code&gt;SecurityManager.checkPermission&lt;/code&gt; method is called with a &lt;code&gt;PropertyPermission(key, &quot;write&quot;)&lt;/code&gt; permission. This may result in a SecurityException being thrown. If no exception is thrown, the specified property is removed.</source>
          <target state="translated">먼저, 보안 관리자가 존재하면 &lt;code&gt;SecurityManager.checkPermission&lt;/code&gt; 메소드가 &lt;code&gt;PropertyPermission(key, &quot;write&quot;)&lt;/code&gt; 권한으로 호출됩니다 . 이로 인해 SecurityException이 발생 될 수 있습니다. 예외가 발생하지 않으면 지정된 속성이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="5919a9ab86c2bfa79c63f16130d9e204af75ed76" translate="yes" xml:space="preserve">
          <source>First, if a security manager exists, its &lt;code&gt;SecurityManager.checkPermission&lt;/code&gt; method is called with a &lt;code&gt;PropertyPermission(key, &quot;write&quot;)&lt;/code&gt; permission. This may result in a SecurityException being thrown. If no exception is thrown, the specified property is set to the given value.</source>
          <target state="translated">먼저, 보안 관리자가 존재하면 &lt;code&gt;SecurityManager.checkPermission&lt;/code&gt; 메소드가 &lt;code&gt;PropertyPermission(key, &quot;write&quot;)&lt;/code&gt; 권한으로 호출됩니다 . 이로 인해 SecurityException이 발생 될 수 있습니다. 예외가 발생하지 않으면 지정된 속성이 지정된 값으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="630cec87c3fe44b8627bf17e36681c50123374a9" translate="yes" xml:space="preserve">
          <source>First, if the parent is not &lt;code&gt;null&lt;/code&gt;, the &lt;code&gt;checkAccess&lt;/code&gt; method of the parent thread group is called with no arguments; this may result in a security exception.</source>
          <target state="translated">먼저 부모가 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 부모 스레드 그룹 의 &lt;code&gt;checkAccess&lt;/code&gt; 메서드가 인수없이 호출됩니다. 보안 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7532f9af652d35ab51ddf5cb2ea52ae6efb5b3dd" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkLink&lt;/code&gt; method is called with the &lt;code&gt;filename&lt;/code&gt; as its argument. This may result in a security exception.</source>
          <target state="translated">먼저 보안 관리자가있는 경우 &lt;code&gt;filename&lt;/code&gt; 을 인수로 사용하여 &lt;code&gt;checkLink&lt;/code&gt; 메소드를 호출합니다 . 보안 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a538643b35041ff23eafe84a5ba6a62d3f17d2c" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkLink&lt;/code&gt; method is called with the &lt;code&gt;libname&lt;/code&gt; as its argument. This may result in a security exception.</source>
          <target state="translated">먼저, 보안 관리자가있는 경우 , &lt;code&gt;libname&lt;/code&gt; 를 인수로 사용하여 &lt;code&gt;checkLink&lt;/code&gt; 메소드를 호출합니다 . 보안 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da67ed31dd77ca2507f91362c6d50c04b87cc285" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;NetPermission(&quot;requestPasswordAuthentication&quot;)&lt;/code&gt; permission. This may result in a java.lang.SecurityException.</source>
          <target state="translated">먼저 보안 관리자가있는 경우 해당 &lt;code&gt;checkPermission&lt;/code&gt; 메소드는 &lt;code&gt;NetPermission(&quot;requestPasswordAuthentication&quot;)&lt;/code&gt; 권한으로 호출됩니다 . 이로 인해 java.lang.SecurityException이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e92bf33f401e22ad0ecd59d2145290ed31c93e94" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;NetPermission(&quot;setDefaultAuthenticator&quot;)&lt;/code&gt; permission. This may result in a java.lang.SecurityException.</source>
          <target state="translated">먼저 보안 관리자가있는 &lt;code&gt;checkPermission&lt;/code&gt; 메소드는 &lt;code&gt;NetPermission(&quot;setDefaultAuthenticator&quot;)&lt;/code&gt; 권한으로 호출됩니다 . 이로 인해 java.lang.SecurityException이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7df8a0d0b6353e40a34478ed736682764f8e4215" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;ReflectPermission(&quot;suppressAccessChecks&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">먼저 보안 관리자가있는 &lt;code&gt;checkPermission&lt;/code&gt; 메소드가 &lt;code&gt;ReflectPermission(&quot;suppressAccessChecks&quot;)&lt;/code&gt; 권한으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="a0db3136da99e70ab98ef55d4f04adf040acbbf0" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; permission to see if it's ok to reassign the &quot;standard&quot; error output stream.</source>
          <target state="translated">먼저 보안 관리자가있는 &lt;code&gt;checkPermission&lt;/code&gt; 메소드가 &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; 권한으로 호출되어 &quot;표준&quot;오류 출력 스트림을 다시 할당 할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3286657453eb5380ab0e600fb164deee9c401b19" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; permission to see if it's ok to reassign the &quot;standard&quot; input stream.</source>
          <target state="translated">먼저 보안 관리자가있는 &lt;code&gt;checkPermission&lt;/code&gt; 메소드가 &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; 권한으로 호출되어 &quot;표준&quot;입력 스트림을 다시 할당 할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8f14129c78c7cdc361a044b07bb94220d3ada946" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; permission to see if it's ok to reassign the &quot;standard&quot; output stream.</source>
          <target state="translated">먼저, 보안 관리자가있는 &lt;code&gt;checkPermission&lt;/code&gt; 메소드는 &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; 권한으로 호출되어 &quot;표준&quot;출력 스트림을 다시 할당 할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b817255be7810ed41874fb7dcec80f29e4821283" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;java.security.SecurityPermission(&quot;getProperty.&quot;+key)&lt;/code&gt; permission to see if it's ok to retrieve the specified security property value..</source>
          <target state="translated">우선, 시큐리티 매니저가 존재하는 경우, &lt;code&gt;checkPermission&lt;/code&gt; 메소드는 &lt;code&gt;java.security.SecurityPermission(&quot;getProperty.&quot;+key)&lt;/code&gt; 액세스 권한으로 호출되어 지정된 시큐리티 프로퍼티 치를 취득 할 수 있을지 어떨지를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4940590aa7a1771db205809b7f83aab538ac2e95" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;java.security.SecurityPermission(&quot;setProperty.&quot;+key)&lt;/code&gt; permission to see if it's ok to set the specified security property value.</source>
          <target state="translated">우선, 시큐리티 매니저가 존재하는 경우, &lt;code&gt;checkPermission&lt;/code&gt; 메소드는 &lt;code&gt;java.security.SecurityPermission(&quot;setProperty.&quot;+key)&lt;/code&gt; 권한으로 호출 되어, 지정된 시큐러티 프로퍼티 치를 설정할 수 있을지 어떨지를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7c9a3e471a0ae2be601b4ce824281ae03928419f" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with an &lt;code&gt;AWTPermission(&quot;listenToAllAWTEvents&quot;)&lt;/code&gt; permission. This may result in a SecurityException.</source>
          <target state="translated">First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with an &lt;code&gt;AWTPermission(&quot;listenToAllAWTEvents&quot;)&lt;/code&gt; permission. This may result in a SecurityException.</target>
        </trans-unit>
        <trans-unit id="194e4ab2ae30c7d0955502c66727b6b7e5e58bd7" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPropertiesAccess&lt;/code&gt; method is called with no arguments. This may result in a security exception.</source>
          <target state="translated">먼저 보안 관리자가있는 &lt;code&gt;checkPropertiesAccess&lt;/code&gt; 메소드가 인수없이 호출됩니다. 보안 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99dc959cc03b1ab4772a53690e57b6c39ceb865d" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPropertiesAccess&lt;/code&gt; method is called. This could result in a SecurityException.</source>
          <target state="translated">먼저 보안 관리자가 있으면 &lt;code&gt;checkPropertiesAccess&lt;/code&gt; 메소드가 호출됩니다. 이로 인해 SecurityException이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2519f0af4c0bcba466e23def0138c59b105fbcf" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPropertyAccess&lt;/code&gt; method is called with the &lt;code&gt;key&lt;/code&gt; as its argument.</source>
          <target state="translated">우선, 시큐리티 매니저가 존재하는 경우 , &lt;code&gt;key&lt;/code&gt; 를 인수로서 사용해 &lt;code&gt;checkPropertyAccess&lt;/code&gt; 메소드가 불려 갑니다.</target>
        </trans-unit>
        <trans-unit id="630da8e247c9d17ef272d4b3fa1fb7ed11938729" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPropertyAccess&lt;/code&gt; method is called with the key as its argument. This may result in a SecurityException.</source>
          <target state="translated">우선, 시큐리티 매니저가 존재하는 경우 , 키를 인수로서 사용해 &lt;code&gt;checkPropertyAccess&lt;/code&gt; 메소드가 불려갑니다. 이로 인해 SecurityException이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="657cb1cbf04c321e29cc58b264339b9d12a9d4a1" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkRead&lt;/code&gt; method is called with the &lt;code&gt;name&lt;/code&gt; argument as its argument to ensure the read is allowed.</source>
          <target state="translated">먼저, 보안 관리자가있는 경우 &lt;code&gt;checkRead&lt;/code&gt; 메소드가 &lt;code&gt;name&lt;/code&gt; 인수 와 함께 인수로 호출되어 읽기가 허용되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="52905e51dc583591ba87eca8817ee992cbffb075" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkRead&lt;/code&gt; method is called with the &lt;code&gt;name&lt;/code&gt; argument as its argument.</source>
          <target state="translated">먼저 보안 관리자가있는 경우 &lt;code&gt;name&lt;/code&gt; 인수를 인수로 사용하여 &lt;code&gt;checkRead&lt;/code&gt; 메소드가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="473d56a2bda4b3966a1d72f9b1c60220f588cdea" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkRead&lt;/code&gt; method is called with the path represented by the &lt;code&gt;file&lt;/code&gt; argument as its argument.</source>
          <target state="translated">먼저 보안 관리자가있는 경우 &lt;code&gt;file&lt;/code&gt; 인수로 표시되는 경로를 인수로 사용하여 &lt;code&gt;checkRead&lt;/code&gt; 메소드가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="94e9e5d9e9067f29b5dd912c5fdcac71153c9d3c" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;addIdentityCertificate&quot;&lt;/code&gt; as its argument to see if it's ok to add a certificate.</source>
          <target state="translated">먼저 보안 관리자가있는 경우 &lt;code&gt;&quot;addIdentityCertificate&quot;&lt;/code&gt; 를 인수로 사용 하여 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 메소드를 호출 하여 인증서를 추가 할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="38bceb007d596b6a72fc43c8cf3b1a3304e72e21" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;getSignerPrivateKey&quot;&lt;/code&gt; as its argument to see if it's ok to return the private key.</source>
          <target state="translated">먼저, 보안 관리자가있는 경우 &lt;code&gt;&quot;getSignerPrivateKey&quot;&lt;/code&gt; 를 인수로 사용 하여 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 메소드를 호출 하여 개인 키를 리턴 할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="59acb77573a122551f3db25d0017430c0b9b30b8" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;printIdentity&quot;&lt;/code&gt; as its argument to see if it's ok to return the string.</source>
          <target state="translated">먼저, 보안 관리자가있는 경우, &lt;code&gt;checkSecurityAccess&lt;/code&gt; 메소드가 &lt;code&gt;&quot;printIdentity&quot;&lt;/code&gt; 를 인수로 호출 하여 문자열을 리턴 할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="cf73e1d184a9d2367a5bb8fcc91d574de2a00b1d" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;removeIdentityCertificate&quot;&lt;/code&gt; as its argument to see if it's ok to remove a certificate.</source>
          <target state="translated">먼저 보안 관리자가있는 경우 &lt;code&gt;&quot;removeIdentityCertificate&quot;&lt;/code&gt; 를 인수로 사용 하여 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 메소드를 호출 하여 인증서를 제거 할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f793765cb10d48ed64717ce7cbb51d56b767abda" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;setIdentityInfo&quot;&lt;/code&gt; as its argument to see if it's ok to specify the information string.</source>
          <target state="translated">먼저, 보안 관리자가있는 경우 정보 문자열을 지정할 수 있는지 확인하기 위해 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 메소드가 인수로 &lt;code&gt;&quot;setIdentityInfo&quot;&lt;/code&gt; 와 함께 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="c87c263023a59975761f675bdcedffbfe57062f5" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;setIdentityPublicKey&quot;&lt;/code&gt; as its argument to see if it's ok to set the public key.</source>
          <target state="translated">먼저 보안 관리자가있는 경우 공개 보안 키를 설정해도 괜찮은지 확인하기 위해 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 메소드를 인수로 &lt;code&gt;&quot;setIdentityPublicKey&quot;&lt;/code&gt; 와 함께 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="952d106b7ff29e446761b2d68c0a6f473fe5d171" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;setSignerKeyPair&quot;&lt;/code&gt; as its argument to see if it's ok to set the key pair.</source>
          <target state="translated">먼저, 보안 관리자가있는 경우 &lt;code&gt;&quot;setSignerKeyPair&quot;&lt;/code&gt; 를 인수로 사용 하여 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 메소드를 호출 하여 키 쌍을 설정해도 괜찮은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b0ac355f70651dacb8131ceb59db569ac54740ea" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;setSystemScope&quot;&lt;/code&gt; as its argument to see if it's ok to set the identity scope.</source>
          <target state="translated">우선, 시큐리티 매니저가 존재하는 경우, ID 범위를 설정해도 괜찮은지 확인하기 위해서, 인수의 &lt;code&gt;&quot;setSystemScope&quot;&lt;/code&gt; 를 사용해 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 메소드를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="7d0bf73da91d8cfc94d82050edfe45f9d01b3614" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with the string &lt;code&gt;&quot;removeProvider.&quot;+name&lt;/code&gt; to see if it's ok to remove the provider. If the default implementation of &lt;code&gt;checkSecurityAccess&lt;/code&gt; is used (i.e., that method is not overriden), then this will result in a call to the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with a &lt;code&gt;SecurityPermission(&quot;removeProvider.&quot;+name)&lt;/code&gt; permission.</source>
          <target state="translated">먼저 보안 관리자가있는 경우 &lt;code&gt;&quot;removeProvider.&quot;+name&lt;/code&gt; 문자열로 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 메소드를 호출 하여 제공자를 제거 할 수 있는지 확인하십시오. &lt;code&gt;checkSecurityAccess&lt;/code&gt; 의 기본 구현을 사용하는 경우 (즉, 해당 메소드가 대체되지 않음) &lt;code&gt;SecurityPermission(&quot;removeProvider.&quot;+name)&lt;/code&gt; 권한으로 보안 관리자의 &lt;code&gt;checkPermission&lt;/code&gt; 메소드가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="22a4113dc4a14a2306af36babbe1bc3ff089e43b" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkWrite&lt;/code&gt; method is called with &lt;code&gt;name&lt;/code&gt; as its argument.</source>
          <target state="translated">먼저, 보안 관리자가있는 경우 &lt;code&gt;checkWrite&lt;/code&gt; 메소드가 &lt;code&gt;name&lt;/code&gt; 으로 인수로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="f305859298b74b0523f1f7783b57d1fea6765597" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkWrite&lt;/code&gt; method is called with the file descriptor &lt;code&gt;fdObj&lt;/code&gt; argument as its argument.</source>
          <target state="translated">먼저 보안 관리자가있는 경우 파일 설명자 &lt;code&gt;fdObj&lt;/code&gt; 인수를 인수로하여 &lt;code&gt;checkWrite&lt;/code&gt; 메소드가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="c91cf76104035d5f20d39bf441da9990fe191720" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkWrite&lt;/code&gt; method is called with the path represented by the &lt;code&gt;file&lt;/code&gt; argument as its argument.</source>
          <target state="translated">먼저 보안 관리자가있는 경우 &lt;code&gt;file&lt;/code&gt; 인수로 표시되는 경로를 인수로 사용하여 &lt;code&gt;checkWrite&lt;/code&gt; 메소드가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="49d686dae693880915d81f78ccfb7ef226a56f6e" translate="yes" xml:space="preserve">
          <source>First, if there is no security manager (&lt;a href=&quot;../../../java.base/java/lang/system#getSecurityManager()&quot;&gt;&lt;code&gt;System.getSecurityManager()&lt;/code&gt;&lt;/a&gt; is null), then an implementation of this interface is free not to make any checks.</source>
          <target state="translated">First, if there is no security manager (&lt;a href=&quot;../../../java.base/java/lang/system#getSecurityManager()&quot;&gt; &lt;code&gt;System.getSecurityManager()&lt;/code&gt; &lt;/a&gt; is null), then an implementation of this interface is free not to make any checks.</target>
        </trans-unit>
        <trans-unit id="5ff6bcbc69f646bb306774a8ae8cabbf8883fe7a" translate="yes" xml:space="preserve">
          <source>First, if there is no security manager (&lt;a href=&quot;../../java/lang/system#getSecurityManager--&quot;&gt;&lt;code&gt;System.getSecurityManager()&lt;/code&gt;&lt;/a&gt; is null), then an implementation of this interface is free not to make any checks.</source>
          <target state="translated">우선, 시큐러티 매니저가없는 경우 ( &lt;a href=&quot;../../java/lang/system#getSecurityManager--&quot;&gt; &lt;code&gt;System.getSecurityManager()&lt;/code&gt; &lt;/a&gt; 가 null 인 경우),이 인터페이스의 구현은 점검 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f35979a367457b1544d5cf7bd4da6b524097b0ef" translate="yes" xml:space="preserve">
          <source>First, it attempts to load a class using the generated class name. If such a class can be found and loaded using the specified class loader, is assignment compatible with ResourceBundle, is accessible from ResourceBundle, and can be instantiated, &lt;code&gt;getBundle&lt;/code&gt; creates a new instance of this class and uses it as the &lt;em&gt;result resource bundle&lt;/em&gt;.</source>
          <target state="translated">먼저 생성 된 클래스 이름을 사용하여 클래스를로드하려고 시도합니다. 지정된 클래스 로더를 사용하여 이러한 클래스를 찾고로드 할 수 있고 ResourceBundle과 호환 가능한 지정이며 ResourceBundle에서 액세스 할 수 있으며 인스턴스화 할 수있는 경우 &lt;code&gt;getBundle&lt;/code&gt; 은이 클래스의 새 인스턴스를 작성하여 &lt;em&gt;결과 자원 번들&lt;/em&gt; 로 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="944986d74c391d612b43a794fce1f8a9dcb3f396" translate="yes" xml:space="preserve">
          <source>First, readability is determined by the 'requires' directives of the enumerated modules, disregarding any 'transitive' modifiers:</source>
          <target state="translated">First, readability is determined by the 'requires' directives of the enumerated modules, disregarding any 'transitive' modifiers:</target>
        </trans-unit>
        <trans-unit id="d99765296e192a63c910f44512f4635e342a8286" translate="yes" xml:space="preserve">
          <source>First, the &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;ServiceLoader&lt;/a&gt; mechanism tries to locate an &lt;code&gt;InitialContextFactory&lt;/code&gt; provider using the current thread's context class loader</source>
          <target state="translated">First, the &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;ServiceLoader&lt;/a&gt; mechanism tries to locate an &lt;code&gt;InitialContextFactory&lt;/code&gt; provider using the current thread's context class loader</target>
        </trans-unit>
        <trans-unit id="66bf81650c523b8db8eea22c47f21929bf349b8f" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;checkAccess&lt;/code&gt; method of this thread group is called with no arguments; this may result in a security exception.</source>
          <target state="translated">먼저, 이 스레드 그룹 의 &lt;code&gt;checkAccess&lt;/code&gt; 메소드가 인수없이 호출됩니다. 보안 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c38ee250de2500fd72f5925088d85d9d33e0f785" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;checkAccess&lt;/code&gt; method of this thread is called with no arguments. This may result in throwing a &lt;code&gt;SecurityException &lt;/code&gt;(in the current thread).</source>
          <target state="translated">먼저, 이 스레드 의 &lt;code&gt;checkAccess&lt;/code&gt; 메소드가 인수없이 호출됩니다. 이로 인해 현재 스레드에서 &lt;code&gt;SecurityException &lt;/code&gt; 이 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc35e5ec48d279e2585b81784dce722712712473" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;checkAccess&lt;/code&gt; method of this thread is called with no arguments. This may result in throwing a &lt;code&gt;SecurityException&lt;/code&gt; (in the current thread).</source>
          <target state="translated">먼저, 이 스레드 의 &lt;code&gt;checkAccess&lt;/code&gt; 메소드가 인수없이 호출됩니다. 이로 인해 현재 스레드에서 &lt;code&gt;SecurityException&lt;/code&gt; 이 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a2f75f91b664508cf39891be5690ca58a1eda8ff" translate="yes" xml:space="preserve">
          <source>First, the total number of bytes needed to represent all the characters of &lt;code&gt;s&lt;/code&gt; is calculated. If this number is larger than &lt;code&gt;65535&lt;/code&gt;, then a &lt;code&gt;UTFDataFormatException&lt;/code&gt; is thrown. Otherwise, this length is written to the output stream in exactly the manner of the &lt;code&gt;writeShort&lt;/code&gt; method; after this, the one-, two-, or three-byte representation of each character in the string &lt;code&gt;s&lt;/code&gt; is written.</source>
          <target state="translated">먼저, &lt;code&gt;s&lt;/code&gt; 의 모든 문자를 나타내는 데 필요한 총 바이트 수를 계산합니다. 이 숫자보다 큰 경우 &lt;code&gt;65535&lt;/code&gt; , 다음 &lt;code&gt;UTFDataFormatException&lt;/code&gt; 발생합니다. 그렇지 않은 경우,이 길이는 &lt;code&gt;writeShort&lt;/code&gt; 메소드 와 정확히 같은 방식으로 출력 스트림에 기록됩니다 . 그 후, 문자열 &lt;code&gt;s&lt;/code&gt; 에있는 각 문자의 1 바이트, 2 바이트 또는 3 바이트 표현 이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="5576952ad05c79cdff45ccd75bd727bb61e387db" translate="yes" xml:space="preserve">
          <source>First, two bytes are read and used to construct an unsigned 16-bit integer in exactly the manner of the &lt;code&gt;readUnsignedShort&lt;/code&gt; method . This integer value is called the</source>
          <target state="translated">먼저, &lt;code&gt;readUnsignedShort&lt;/code&gt; 메소드 와 정확히 같은 방식으로 부호없는 16 비트 정수를 구성하는 데 2 ​​바이트를 읽고 사용합니다 . 이 정수 값을</target>
        </trans-unit>
        <trans-unit id="3310c837424fc2a64773f638b21cd61d75246a54" translate="yes" xml:space="preserve">
          <source>First, two bytes are read and used to construct an unsigned 16-bit integer in the manner of the &lt;code&gt;readUnsignedShort&lt;/code&gt; method, using network byte order (regardless of the current byte order setting). This integer value is called the</source>
          <target state="translated">먼저, 현재 바이트 순서 설정에 관계없이 네트워크 바이트 순서를 사용하여 &lt;code&gt;readUnsignedShort&lt;/code&gt; 메소드 의 방식으로 부호없는 16 비트 정수를 구성하는 데 2 ​​바이트가 읽혀 집니다. 이 정수 값을</target>
        </trans-unit>
        <trans-unit id="f7bf74e719e176a13a50c8569b4ca65a8258806f" translate="yes" xml:space="preserve">
          <source>First, two bytes are written to the file, starting at the current file pointer, as if by the &lt;code&gt;writeShort&lt;/code&gt; method giving the number of bytes to follow. This value is the number of bytes actually written out, not the length of the string. Following the length, each character of the string is output, in sequence, using the modified UTF-8 encoding for each character.</source>
          <target state="translated">먼저, 다음 바이트 수를 제공하는 &lt;code&gt;writeShort&lt;/code&gt; 메소드에 의해 현재 파일 포인터에서 시작하여 2 바이트가 파일에 기록됩니다 . 이 값은 문자열의 길이가 아니라 실제로 기록 된 바이트 수입니다. 길이에 따라 문자열의 각 문자가 각 문자에 대해 수정 된 UTF-8 인코딩을 사용하여 순서대로 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="6924aef3403af6247bca950768385f32f61338e7" translate="yes" xml:space="preserve">
          <source>First, two bytes are written to the output stream as if by the &lt;code&gt;writeShort&lt;/code&gt; method giving the number of bytes to follow. This value is the number of bytes actually written out, not the length of the string. Following the length, each character of the string is output, in sequence, using the modified UTF-8 encoding for the character. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by the total number of bytes written to the output stream. This will be at least two plus the length of &lt;code&gt;str&lt;/code&gt;, and at most two plus thrice the length of &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">먼저, 다음 바이트 수를 제공하는 &lt;code&gt;writeShort&lt;/code&gt; 메소드에 의해 출력 스트림에 2 바이트가 기록됩니다 . 이 값은 문자열의 길이가 아니라 실제로 기록 된 바이트 수입니다. 길이에 따라 문자열의 각 문자가 문자에 대해 수정 된 UTF-8 인코딩을 사용하여 순서대로 출력됩니다. 예외가 발생하지 않으면 &lt;code&gt;written&lt;/code&gt; 된 카운터 는 출력 스트림에 기록 된 총 바이트 수만큼 증가합니다. 이것은 적어도 두 플러스의 길이 될 것입니다 &lt;code&gt;str&lt;/code&gt; , 두 개의 가장에 플러스의 길이의 3 배를 더한 값 &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d97044dedbadf530d0bd6da36ba87b841638467d" translate="yes" xml:space="preserve">
          <source>FirstLineIndent</source>
          <target state="translated">FirstLineIndent</target>
        </trans-unit>
        <trans-unit id="ef75ab4cef3bee225daeae7c84fa629260137b77" translate="yes" xml:space="preserve">
          <source>Firstly, we can assume that two &lt;code&gt;Duration&lt;/code&gt;s to be added are both positive without losing generality (i.e., &lt;code&gt;(-X)+Y=Y-X&lt;/code&gt;, &lt;code&gt;X+(-Y)=X-Y&lt;/code&gt;, &lt;code&gt;(-X)+(-Y)=-(X+Y)&lt;/code&gt;)</source>
          <target state="translated">첫째, 추가 할 두 &lt;code&gt;Duration&lt;/code&gt; 은 일반성을 잃지 않고 양수 라고 가정 할 수 있습니다 (예 : &lt;code&gt;(-X)+Y=Y-X&lt;/code&gt; , &lt;code&gt;X+(-Y)=X-Y&lt;/code&gt; , &lt;code&gt;(-X)+(-Y)=-(X+Y)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="03fb6987ef6f416132f91721e60bb320ad4e9758" translate="yes" xml:space="preserve">
          <source>Five classes aid common special-purpose synchronization idioms.</source>
          <target state="translated">5 개의 클래스는 일반적인 특수 목적 동기화 관용구를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c499dc3174957bc11f63a94cd3b51f32f168868c" translate="yes" xml:space="preserve">
          <source>Five implementations in &lt;code&gt;java.util.concurrent&lt;/code&gt; support the extended &lt;a href=&quot;blockingqueue&quot;&gt;&lt;code&gt;BlockingQueue&lt;/code&gt;&lt;/a&gt; interface, that defines blocking versions of put and take: &lt;a href=&quot;linkedblockingqueue&quot;&gt;&lt;code&gt;LinkedBlockingQueue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;arrayblockingqueue&quot;&gt;&lt;code&gt;ArrayBlockingQueue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;synchronousqueue&quot;&gt;&lt;code&gt;SynchronousQueue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;priorityblockingqueue&quot;&gt;&lt;code&gt;PriorityBlockingQueue&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;delayqueue&quot;&gt;&lt;code&gt;DelayQueue&lt;/code&gt;&lt;/a&gt;. The different classes cover the most common usage contexts for producer-consumer, messaging, parallel tasking, and related concurrent designs.</source>
          <target state="translated">&lt;code&gt;java.util.concurrent&lt;/code&gt; 의 5 가지 구현 은 확장 된 &lt;a href=&quot;blockingqueue&quot;&gt; &lt;code&gt;BlockingQueue&lt;/code&gt; &lt;/a&gt; 인터페이스를 지원하며 , 이는 &lt;a href=&quot;linkedblockingqueue&quot;&gt; &lt;code&gt;LinkedBlockingQueue&lt;/code&gt; &lt;/a&gt; 및 Take의 차단 버전을 정의합니다. LinkedBlockingQueue , &lt;a href=&quot;arrayblockingqueue&quot;&gt; &lt;code&gt;ArrayBlockingQueue&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;synchronousqueue&quot;&gt; &lt;code&gt;SynchronousQueue&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;priorityblockingqueue&quot;&gt; &lt;code&gt;PriorityBlockingQueue&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;delayqueue&quot;&gt; &lt;code&gt;DelayQueue&lt;/code&gt; &lt;/a&gt; . 서로 다른 클래스는 생산자-소비자, 메시징, 병렬 작업 및 관련 동시 디자인에 대한 가장 일반적인 사용 컨텍스트를 다룹니다.</target>
        </trans-unit>
        <trans-unit id="30c899a6368172355aa4e751e2b43b474a43498b" translate="yes" xml:space="preserve">
          <source>Five parsing methods are supplied by this class. Four of these perform both the parse and resolve phases. The fifth method, &lt;a href=&quot;#parseUnresolved(java.lang.CharSequence,java.text.ParsePosition)&quot;&gt;&lt;code&gt;parseUnresolved(CharSequence, ParsePosition)&lt;/code&gt;&lt;/a&gt;, only performs the first phase, leaving the result unresolved. As such, it is essentially a low-level operation.</source>
          <target state="translated">이 클래스는 다섯 가지 구문 분석 방법을 제공합니다. 이 중 4 개는 구문 분석 및 해결 단계를 모두 수행합니다. 다섯 번째 메서드 인 &lt;a href=&quot;#parseUnresolved(java.lang.CharSequence,java.text.ParsePosition)&quot;&gt; &lt;code&gt;parseUnresolved(CharSequence, ParsePosition)&lt;/code&gt; &lt;/a&gt; 은 첫 번째 단계 만 수행하고 결과는 확인되지 않습니다. 따라서 기본적으로 낮은 수준의 작업입니다.</target>
        </trans-unit>
        <trans-unit id="266d742b034f86cdbf1e3af6d7aa446a4d5fa143" translate="yes" xml:space="preserve">
          <source>Five parsing methods are supplied by this class. Four of these perform both the parse and resolve phases. The fifth method, &lt;a href=&quot;datetimeformatter#parseUnresolved-java.lang.CharSequence-java.text.ParsePosition-&quot;&gt;&lt;code&gt;parseUnresolved(CharSequence, ParsePosition)&lt;/code&gt;&lt;/a&gt;, only performs the first phase, leaving the result unresolved. As such, it is essentially a low-level operation.</source>
          <target state="translated">이 클래스는 5 가지 구문 분석 방법을 제공합니다. 이 중 4 개는 구문 분석 및 해결 단계를 모두 수행합니다. 다섯 번째 방법 인 &lt;a href=&quot;datetimeformatter#parseUnresolved-java.lang.CharSequence-java.text.ParsePosition-&quot;&gt; &lt;code&gt;parseUnresolved(CharSequence, ParsePosition)&lt;/code&gt; &lt;/a&gt; 은 첫 번째 단계 만 수행하므로 결과는 확인되지 않습니다. 따라서 본질적으로 저수준 작업입니다.</target>
        </trans-unit>
        <trans-unit id="3cd49b1790f8f462c34f62232f2e710068d65a5f" translate="yes" xml:space="preserve">
          <source>Fixed offsets - a fully resolved offset from UTC/Greenwich, that uses the same offset for all local date-times</source>
          <target state="translated">고정 오프셋-UTC / 그리니치에서 완전히 해결 된 오프셋으로 모든 현지 날짜-시간에 대해 동일한 오프셋을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="17b625c3f165dbce3544c5563f571a11c9e6772c" translate="yes" xml:space="preserve">
          <source>Fixed sizes.</source>
          <target state="translated">고정 크기.</target>
        </trans-unit>
        <trans-unit id="4936236b35e1a80fafa0b7f11bec661a7570a9f2" translate="yes" xml:space="preserve">
          <source>Fixed-delay execution is appropriate for recurring activities that require &quot;smoothness.&quot; In other words, it is appropriate for activities where it is more important to keep the frequency accurate in the short run than in the long run. This includes most animation tasks, such as blinking a cursor at regular intervals. It also includes tasks wherein regular activity is performed in response to human input, such as automatically repeating a character as long as a key is held down.</source>
          <target state="translated">고정 지연 실행은 &quot;부드러움&quot;이 필요한 반복 활동에 적합합니다. 즉, 장기보다는 단기에서 빈도를 정확하게 유지하는 것이 더 중요한 활동에 적합합니다. 여기에는 일정한 간격으로 커서 깜박임과 같은 대부분의 애니메이션 작업이 포함됩니다. 또한 키를 누르고있는 동안 문자를 자동으로 반복하는 것과 같이 사람의 입력에 따라 규칙적인 활동이 수행되는 작업도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e73111ec10a33d7de6d320af72b7ff5790705b65" translate="yes" xml:space="preserve">
          <source>Fixed-rate execution is appropriate for recurring activities that are sensitive to</source>
          <target state="translated">고정 요율 실행은 민감한 반복 활동에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="06ca7b5e1b7d5713ec8c7a2e35f2930732d9d2f2" translate="yes" xml:space="preserve">
          <source>FixedHeightLayoutCache</source>
          <target state="translated">FixedHeightLayoutCache</target>
        </trans-unit>
        <trans-unit id="a774409a00c21de377cf8ed5c6a56b8547973042" translate="yes" xml:space="preserve">
          <source>Flag</source>
          <target state="translated">Flag</target>
        </trans-unit>
        <trans-unit id="249e37d98641310b76b95040cb8b584e80b7cbe4" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed attribute.</source>
          <target state="translated">관찰 된 속성을 변경 한 후 알림이 발생했음을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="8f3fc560d56c36d9c10087965b68e233893310b1" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed attribute. This flag is used to check that the new observed attribute belongs to the observed object at the time of the first notification.</source>
          <target state="translated">관찰 된 속성을 변경 한 후 알림이 발생했음을 나타내는 플래그입니다. 이 플래그는 새 관찰 속성이 첫 번째 알림 시점에 관찰 된 개체에 속하는지 확인하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="442675306660e623c00f3a09c60d6e132dfae5ba" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed object or the observed attribute.</source>
          <target state="translated">관찰 된 객체 또는 관찰 된 속성을 변경 한 후 알림이 발생했음을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="f9663640a984c89bbddc90d68957a27398238f04" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed object or the observed attribute. This flag is used to check that the observed attribute type is correct (depending on the monitor in use) at the time of the first notification.</source>
          <target state="translated">관찰 된 객체 또는 관찰 된 속성을 변경 한 후 알림이 발생했음을 나타내는 플래그입니다. 이 플래그는 첫 번째 알림 시점에 관찰 된 속성 유형이 사용중인 모니터에 따라 올바른지 확인하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9a244019aa93d00c6e861311b0bafe3d482fd5d3" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed object or the observed attribute. This flag is used to notify any exception (except the cases described above) when trying to get the value of the observed attribute at the time of the first notification.</source>
          <target state="translated">관찰 된 객체 또는 관찰 된 속성을 변경 한 후 알림이 발생했음을 나타내는 플래그입니다. 이 플래그는 첫 번째 알림 시점에 관찰 된 속성 값을 가져 오려고 할 때 예외 (위에 설명 된 경우 제외)를 알리는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="66289b852a66954ad44c7d84ba15a80fdcf1bc6f" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed object.</source>
          <target state="translated">관찰 된 객체를 변경 한 후 알림이 발생했음을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="6b097f053bc3a7a8cd11507e5b8a3b26f9a35af0" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed object. This flag is used to check that the new observed object is registered in the MBean server at the time of the first notification.</source>
          <target state="translated">관찰 된 객체를 변경 한 후 알림이 발생했음을 나타내는 플래그입니다. 이 플래그는 새로운 관찰 된 오브젝트가 첫 번째 통지 시점에 MBean 서버에 등록되었는지 확인하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="954537201eea2efcfc35f04f2d76a1caffce234a" translate="yes" xml:space="preserve">
          <source>Flag for 16 bit signed integers.</source>
          <target state="translated">16 비트 부호있는 정수에 대한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="eec33029a243bcf359f53a00fdeb45ab9b4ff1bb" translate="yes" xml:space="preserve">
          <source>Flag for 16 bit unsigned integers.</source>
          <target state="translated">16 비트 부호없는 정수에 대한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="4f489196890a50c07effdaf77c5df7115980a1db" translate="yes" xml:space="preserve">
          <source>Flag for 32 bit IEEE floats.</source>
          <target state="translated">32 비트 IEEE 부동 소수점에 대한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="355d8427312503b299a143e7a1a2e402cae7d00c" translate="yes" xml:space="preserve">
          <source>Flag for 32 bit signed integers.</source>
          <target state="translated">32 비트 부호있는 정수에 대한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="09c3f8131183712e4fb56e5256b793ef6e3230d3" translate="yes" xml:space="preserve">
          <source>Flag for 32 bit unsigned integers.</source>
          <target state="translated">32 비트 부호없는 정수에 대한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="a38456224796dd1803e946331b5901bc52a9f1aa" translate="yes" xml:space="preserve">
          <source>Flag for 64 bit IEEE doubles.</source>
          <target state="translated">64 비트 IEEE double에 대한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="07c7475f89607142580cf1aad5e9548d5a40d7c4" translate="yes" xml:space="preserve">
          <source>Flag for 8 bit signed integers.</source>
          <target state="translated">8 비트 부호있는 정수에 대한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="8dd24db9b4ea3b54f8a363ae0a45a302ba23d056" translate="yes" xml:space="preserve">
          <source>Flag for 8 bit uninterpreted bytes.</source>
          <target state="translated">해석되지 않은 8 비트 바이트에 대한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="9aa0a4d96516a68f4c4738ccf1b78f0802d63adb" translate="yes" xml:space="preserve">
          <source>Flag for 8 bit unsigned integers.</source>
          <target state="translated">8 비트 부호없는 정수에 대한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="d34298b953abbece38110be10aa932e48f484838" translate="yes" xml:space="preserve">
          <source>Flag for IFD pointer defined in TIFF Tech Note 1 in TIFF Specification Supplement 1.</source>
          <target state="translated">TIFF 사양 보충 1의 TIFF 기술 노트 1에 정의 된 IFD 포인터에 대한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="a3e8f2fa2b4ac8aedc7938d7924194e939449d09" translate="yes" xml:space="preserve">
          <source>Flag for alternate metafactories indicating the lambda object implements other marker interfaces besides Serializable</source>
          <target state="translated">람다 객체가 Serializable 이외의 다른 마커 인터페이스를 구현한다는 것을 나타내는 대체 메타 팩터 플래그</target>
        </trans-unit>
        <trans-unit id="dbea46ad84ceef99f2d91ffa5461c277a9aa9151" translate="yes" xml:space="preserve">
          <source>Flag for alternate metafactories indicating the lambda object must be serializable</source>
          <target state="translated">람다 객체를 나타내는 대체 메타 팩터에 대한 플래그는 직렬화 가능해야합니다</target>
        </trans-unit>
        <trans-unit id="638d813638a6d21acd50c749b8bc4c2fa5a98c91" translate="yes" xml:space="preserve">
          <source>Flag for alternate metafactories indicating the lambda object requires additional bridge methods</source>
          <target state="translated">람다 객체를 나타내는 대체 메타 팩터에 대한 플래그에는 추가 브리지 방법이 필요합니다</target>
        </trans-unit>
        <trans-unit id="b87b1fab3b9826f8c44a4e32136cc53d33d9d85f" translate="yes" xml:space="preserve">
          <source>Flag for null-terminated ASCII strings.</source>
          <target state="translated">널로 끝나는 ASCII 문자열에 대한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="d05feadaf04fed5d12a57886c799171c5d646b0e" translate="yes" xml:space="preserve">
          <source>Flag for pairs of 32 bit signed integers.</source>
          <target state="translated">32 비트 부호있는 정수 쌍에 대한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="f3c53c4a8530a3fd149885cfcae3313ba7e8c1e0" translate="yes" xml:space="preserve">
          <source>Flag for pairs of 32 bit unsigned integers.</source>
          <target state="translated">32 비트 부호없는 정수 쌍에 대한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="bcd9de13d9aa1fde04840c1edc10361e2986703b" translate="yes" xml:space="preserve">
          <source>Flag indicating that media is currently being loaded.</source>
          <target state="translated">미디어가 현재로드 중임을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="d18e467bafc4a6a9285385b8c6e81ee569155390" translate="yes" xml:space="preserve">
          <source>Flag indicating that the downloading of media encountered an error.</source>
          <target state="translated">미디어 다운로드에 오류가 발생했음을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="65f311700d8e5e80070126f0ce1837723d2ef826" translate="yes" xml:space="preserve">
          <source>Flag indicating that the downloading of media was aborted.</source>
          <target state="translated">미디어 다운로드가 중단되었음을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="6fc6da142d7edcc6088f06230a800d9b1ecb7a71" translate="yes" xml:space="preserve">
          <source>Flag indicating that the downloading of media was completed successfully.</source>
          <target state="translated">미디어 다운로드가 성공적으로 완료되었음을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="2dd7d1ada841526baea309912fd29b956955ea29" translate="yes" xml:space="preserve">
          <source>Flag to allow processing of unassigned code points</source>
          <target state="translated">할당되지 않은 코드 포인트의 처리를 허용하는 플래그</target>
        </trans-unit>
        <trans-unit id="488d7de1ac571f1cf63434bf32b98bc636da9568" translate="yes" xml:space="preserve">
          <source>Flag to indicate that partial returns are valid.</source>
          <target state="translated">부분 반품이 유효 함을 나타내는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="5f2f04fca4158f80583f1781008f7805fdabc4a6" translate="yes" xml:space="preserve">
          <source>Flag to indicate that partial returns are valid. If the flag is true, an implementation of the interface method Document.getText(position,length,Segment) should return as much text as possible without making a copy. The default state of the flag is false which will cause Document.getText(position,length,Segment) to provide the same return behavior it always had, which may or may not make a copy of the text depending upon the request.</source>
          <target state="translated">부분 반품이 유효 함을 나타내는 플래그입니다. 플래그가 true 인 경우 인터페이스 메서드 Document.getText (position, length, Segment)의 구현은 복사본을 만들지 않고 가능한 한 많은 텍스트를 반환해야합니다. 플래그의 기본 상태는 false이며 Document.getText (position, length, Segment)는 요청에 따라 텍스트의 사본을 만들거나 만들지 않을 수있는 동일한 반환 동작을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0234fbef2f85a75951f2544e11df24a613e63a88" translate="yes" xml:space="preserve">
          <source>Flag to indicate to ignore all beaninfo.</source>
          <target state="translated">모든 beaninfo를 무시하도록 표시하는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="83d2e548861ebc37b92cd79d10945dd5d180fc5f" translate="yes" xml:space="preserve">
          <source>Flag to indicate to ignore immediate beaninfo.</source>
          <target state="translated">Bean Bean 정보를 무시하도록 표시하는 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="6f194e90d75868e9a43492eb79e6a19ed441b674" translate="yes" xml:space="preserve">
          <source>Flag to indicate to use of all beaninfo.</source>
          <target state="translated">모든 beaninfo의 사용을 나타내는 플래그.</target>
        </trans-unit>
        <trans-unit id="b811657548f08b33bd13bfd325e5cca70894c154" translate="yes" xml:space="preserve">
          <source>Flag to turn on the check against STD-3 ASCII rules</source>
          <target state="translated">STD-3 ASCII 규칙에 대한 검사를 설정하는 플래그</target>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="aa433aa09aacf9ddc26d2b3a4aba3c0064a0b701" translate="yes" xml:space="preserve">
          <source>Flags model changes.</source>
          <target state="translated">모델 변경에 플래그를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7d908299c4184636b8f4f67a3426cb40d26ee9c1" translate="yes" xml:space="preserve">
          <source>Flags model changes. This is called whenever the model has changed. It is implemented to rebuild the view hierarchy to represent the default root element of the associated model.</source>
          <target state="translated">모델 변경에 플래그를 지정합니다. 모델이 변경 될 때마다 호출됩니다. 연결된 모델의 기본 루트 요소를 나타 내기 위해 뷰 계층 구조를 다시 빌드하기 위해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="9556f1a2ab6b3547bf6cc9e60e3683854b4e0a84" translate="yes" xml:space="preserve">
          <source>Flags, width, and precision are not applicable. If any are provided an &lt;a href=&quot;illegalformatflagsexception&quot;&gt;&lt;code&gt;IllegalFormatFlagsException&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;illegalformatwidthexception&quot;&gt;&lt;code&gt;IllegalFormatWidthException&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;illegalformatprecisionexception&quot;&gt;&lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt;&lt;/a&gt;, respectively will be thrown.</source>
          <target state="translated">플래그, 너비 및 정밀도는 적용되지 않습니다. &lt;a href=&quot;illegalformatflagsexception&quot;&gt; &lt;code&gt;IllegalFormatFlagsException&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;illegalformatwidthexception&quot;&gt; &lt;code&gt;IllegalFormatWidthException&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;illegalformatprecisionexception&quot;&gt; &lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt; &lt;/a&gt; 이 제공 되면 각각 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="317a87f9a0b4a7214175a593b098e52ee141ad05" translate="yes" xml:space="preserve">
          <source>Flash graphics operations.</source>
          <target state="translated">플래시 그래픽 작업.</target>
        </trans-unit>
        <trans-unit id="5671b22f9860283a7ec69bec60c6c9daccbb3e97" translate="yes" xml:space="preserve">
          <source>FlatteningPathIterator</source>
          <target state="translated">FlatteningPathIterator</target>
        </trans-unit>
        <trans-unit id="aa4003618da66550bf758dea6f56a1d3d0c246bf" translate="yes" xml:space="preserve">
          <source>FlavorEvent</source>
          <target state="translated">FlavorEvent</target>
        </trans-unit>
        <trans-unit id="38d0037690897042dd388136b25b7841186bfeef" translate="yes" xml:space="preserve">
          <source>FlavorException</source>
          <target state="translated">FlavorException</target>
        </trans-unit>
        <trans-unit id="566fa480303e91c572631ff49631693221c1fefa" translate="yes" xml:space="preserve">
          <source>FlavorException. If the document has a flavor not supported by this print job.</source>
          <target state="translated">FlavorException. 문서가이 인쇄 작업에서 지원되지 않는 특징이있는 경우.</target>
        </trans-unit>
        <trans-unit id="b24a23c59215ce28b4ca8c6dcfeadd5f56f89079" translate="yes" xml:space="preserve">
          <source>FlavorException.getUnsupportedFlavors()</source>
          <target state="translated">FlavorException.getUnsupportedFlavors()</target>
        </trans-unit>
        <trans-unit id="d7c6c7593242c9e771c51f7eec4a0b504eb7f5a8" translate="yes" xml:space="preserve">
          <source>FlavorListener</source>
          <target state="translated">FlavorListener</target>
        </trans-unit>
        <trans-unit id="dd0434f5851357e0820262e82da2a06e4fdf9b9d" translate="yes" xml:space="preserve">
          <source>FlavorMap</source>
          <target state="translated">FlavorMap</target>
        </trans-unit>
        <trans-unit id="77d5bbdf49e3bfddf3da4f172a6230e1665cb5a1" translate="yes" xml:space="preserve">
          <source>FlavorTable</source>
          <target state="translated">FlavorTable</target>
        </trans-unit>
        <trans-unit id="d30feb154c9bd8eb5ccd426ea112b69dcfddca54" translate="yes" xml:space="preserve">
          <source>Flavors are first sorted by their MIME types in the following order:</source>
          <target state="translated">플레이버는 먼저 MIME 유형별로 다음 순서로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="78ff5508778116114853e80c61596b58b8492efe" translate="yes" xml:space="preserve">
          <source>FlipBufferStrategy</source>
          <target state="translated">FlipBufferStrategy</target>
        </trans-unit>
        <trans-unit id="9fd658f5f9af419891bcb5665f27d4a97af8b92f" translate="yes" xml:space="preserve">
          <source>Flipping moves the contents of the back buffer to the front buffer, either by copying or by moving the video pointer.</source>
          <target state="translated">반전은 비디오 포인터를 복사하거나 이동하여 백 버퍼의 내용을 프론트 버퍼로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="f9430f5d4c5f00efa95596f2c28edf9f7f97924b" translate="yes" xml:space="preserve">
          <source>Flips this buffer.</source>
          <target state="translated">이 버퍼를 뒤집습니다.</target>
        </trans-unit>
        <trans-unit id="4383afa5e388392dcdacdb218541d78e4b31a225" translate="yes" xml:space="preserve">
          <source>Flips this buffer. The limit is set to the current position and then the position is set to zero. If the mark is defined then it is discarded.</source>
          <target state="translated">이 버퍼를 뒤집습니다. 한계는 현재 위치로 설정되고 위치는 0으로 설정됩니다. 마크가 정의되면 버립니다.</target>
        </trans-unit>
        <trans-unit id="9a10d9eeec807f5e5b91db35d6c151a38e18b245" translate="yes" xml:space="preserve">
          <source>Flips to the component that was added to this layout with the specified &lt;code&gt;name&lt;/code&gt;, using &lt;code&gt;addLayoutComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;addLayoutComponent&lt;/code&gt; 를 사용하여 지정된 &lt;code&gt;name&lt;/code&gt; 으로이 레이아웃에 추가 된 컴포넌트로 뒤집습니다 .</target>
        </trans-unit>
        <trans-unit id="d2926c8b85048e10b722e6e88fe2d7ba43f41c82" translate="yes" xml:space="preserve">
          <source>Flips to the component that was added to this layout with the specified &lt;code&gt;name&lt;/code&gt;, using &lt;code&gt;addLayoutComponent&lt;/code&gt;. If no such component exists, then nothing happens.</source>
          <target state="translated">&lt;code&gt;addLayoutComponent&lt;/code&gt; 를 사용하여 지정된 &lt;code&gt;name&lt;/code&gt; 으로이 레이아웃에 추가 된 컴포넌트로 뒤집습니다 . 그러한 구성 요소가 없으면 아무 일도 일어나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d237a00563f45f4632208fd4843dad681898ab10" translate="yes" xml:space="preserve">
          <source>Flips to the first card of the container.</source>
          <target state="translated">컨테이너의 첫 번째 카드로 뒤집습니다.</target>
        </trans-unit>
        <trans-unit id="48817d06d0818a52115a2864ec45eda0ae67a11f" translate="yes" xml:space="preserve">
          <source>Flips to the last card of the container.</source>
          <target state="translated">컨테이너의 마지막 카드로 넘깁니다.</target>
        </trans-unit>
        <trans-unit id="3784a77751abbd2726c05b89792e383c343f533b" translate="yes" xml:space="preserve">
          <source>Flips to the next card of the specified container.</source>
          <target state="translated">지정된 컨테이너의 다음 카드로 넘깁니다.</target>
        </trans-unit>
        <trans-unit id="ca9583200f86339e03ecc0a76903ab746059c3cf" translate="yes" xml:space="preserve">
          <source>Flips to the next card of the specified container. If the currently visible card is the last one, this method flips to the first card in the layout.</source>
          <target state="translated">지정된 컨테이너의 다음 카드로 넘깁니다. 현재 보이는 카드가 마지막 카드 인 경우이 방법은 레이아웃의 첫 번째 카드로 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="1e8099358aa9de9d6b784f6f8333b1eee02eefba" translate="yes" xml:space="preserve">
          <source>Flips to the previous card of the specified container.</source>
          <target state="translated">지정된 컨테이너의 이전 카드로 넘깁니다.</target>
        </trans-unit>
        <trans-unit id="c091724bf1722dece68013b73b36a1b94fbc6c31" translate="yes" xml:space="preserve">
          <source>Flips to the previous card of the specified container. If the currently visible card is the first one, this method flips to the last card in the layout.</source>
          <target state="translated">지정된 컨테이너의 이전 카드로 넘깁니다. 현재 보이는 카드가 첫 번째 카드 인 경우이 방법은 레이아웃의 마지막 카드로 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="81bec51e308dda0147ad093a32f7aa270f1a51a4" translate="yes" xml:space="preserve">
          <source>Float buffers can be created either by &lt;a href=&quot;#allocate(int)&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;#wrap(float%5B%5D)&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing float array into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</source>
          <target state="translated">플로트 버퍼는 버퍼의 내용을위한 공간을 할당 하는 &lt;a href=&quot;#allocate(int)&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; , 기존의 플로트 배열을 버퍼로 &lt;a href=&quot;#wrap(float%5B%5D)&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 하거나 기존 바이트 버퍼 의 &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;뷰&lt;/i&gt;&lt;/a&gt; 를 생성하여 생성 할 &lt;i&gt;수 있습니다&lt;/i&gt; .</target>
        </trans-unit>
        <trans-unit id="8ddcdd0a33166329f127772cf3793ed300f93806" translate="yes" xml:space="preserve">
          <source>Float buffers can be created either by &lt;a href=&quot;floatbuffer#allocate-int-&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;floatbuffer#wrap-float:A-&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing float array into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</source>
          <target state="translated">플로트 버퍼는 버퍼 내용에 공간을 할당 하는 &lt;a href=&quot;floatbuffer#allocate-int-&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; , 기존 플로트 배열을 버퍼 에 &lt;a href=&quot;floatbuffer#wrap-float:A-&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 하거나 기존 바이트 버퍼 의 &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;보기&lt;/i&gt;&lt;/a&gt; 를 작성하여 작성할 수 &lt;i&gt;있습니다&lt;/i&gt; .</target>
        </trans-unit>
        <trans-unit id="c30b25cd724ad3cf3629d8549e8ac93931d38bc6" translate="yes" xml:space="preserve">
          <source>Float.byteValue()</source>
          <target state="translated">Float.byteValue()</target>
        </trans-unit>
        <trans-unit id="14b1c6d8e92795f3e38f41e2194c4effe03cfef2" translate="yes" xml:space="preserve">
          <source>Float.compare()</source>
          <target state="translated">Float.compare()</target>
        </trans-unit>
        <trans-unit id="4bc244a2f30dfa6752cad0eff6199ead3c60d367" translate="yes" xml:space="preserve">
          <source>Float.compareTo()</source>
          <target state="translated">Float.compareTo()</target>
        </trans-unit>
        <trans-unit id="ec9afe0390d115a5afd1ec29015a1115800da905" translate="yes" xml:space="preserve">
          <source>Float.doubleValue()</source>
          <target state="translated">Float.doubleValue()</target>
        </trans-unit>
        <trans-unit id="0a7435636ce70fa2140b15f815285bfb690253ba" translate="yes" xml:space="preserve">
          <source>Float.equals()</source>
          <target state="translated">Float.equals()</target>
        </trans-unit>
        <trans-unit id="89174f0a622d0819abf8079639212bcf61b17fb3" translate="yes" xml:space="preserve">
          <source>Float.floatToIntBits()</source>
          <target state="translated">Float.floatToIntBits()</target>
        </trans-unit>
        <trans-unit id="f88ceba2288dd52ad7c83a84d4a8ee6924a83a8e" translate="yes" xml:space="preserve">
          <source>Float.floatToRawIntBits()</source>
          <target state="translated">Float.floatToRawIntBits()</target>
        </trans-unit>
        <trans-unit id="1df4bc67926f07271c6e77d1bf2588ee71ad7dc6" translate="yes" xml:space="preserve">
          <source>Float.floatValue()</source>
          <target state="translated">Float.floatValue()</target>
        </trans-unit>
        <trans-unit id="978fe295cde8b13e1c69d5e8345f4503ecc63712" translate="yes" xml:space="preserve">
          <source>Float.hashCode()</source>
          <target state="translated">Float.hashCode()</target>
        </trans-unit>
        <trans-unit id="367885fdf1b04be5f3fd45725a9878b9e0d1e3ce" translate="yes" xml:space="preserve">
          <source>Float.intBitsToFloat()</source>
          <target state="translated">Float.intBitsToFloat()</target>
        </trans-unit>
        <trans-unit id="a678b5dc633d9584f35b1b48dacf0088197519be" translate="yes" xml:space="preserve">
          <source>Float.intValue()</source>
          <target state="translated">Float.intValue()</target>
        </trans-unit>
        <trans-unit id="7a5a879567b1e23dc5e85b7048f9b91bab834e2f" translate="yes" xml:space="preserve">
          <source>Float.isFinite()</source>
          <target state="translated">Float.isFinite()</target>
        </trans-unit>
        <trans-unit id="ecb53d5b3ddb28521550db45d7061cfc41458bb2" translate="yes" xml:space="preserve">
          <source>Float.isInfinite()</source>
          <target state="translated">Float.isInfinite()</target>
        </trans-unit>
        <trans-unit id="4cbb87ead6e58d9373ac3b0711d0f263c2cb8d7a" translate="yes" xml:space="preserve">
          <source>Float.isNaN()</source>
          <target state="translated">Float.isNaN()</target>
        </trans-unit>
        <trans-unit id="a88a671253565394fa2d74a24f8b69442ff0a7c5" translate="yes" xml:space="preserve">
          <source>Float.longValue()</source>
          <target state="translated">Float.longValue()</target>
        </trans-unit>
        <trans-unit id="60f2fbd103f521349406f2c47ac8dee00f9c12b0" translate="yes" xml:space="preserve">
          <source>Float.max()</source>
          <target state="translated">Float.max()</target>
        </trans-unit>
        <trans-unit id="deec23bf69ee572670f0db6ac40a04bbc01b9eed" translate="yes" xml:space="preserve">
          <source>Float.min()</source>
          <target state="translated">Float.min()</target>
        </trans-unit>
        <trans-unit id="b2b8cb2c905a03e7c15da392a38007b972a25f64" translate="yes" xml:space="preserve">
          <source>Float.parseFloat()</source>
          <target state="translated">Float.parseFloat()</target>
        </trans-unit>
        <trans-unit id="01755d4d59dcf64b32a407cde1adc7736197ef11" translate="yes" xml:space="preserve">
          <source>Float.shortValue()</source>
          <target state="translated">Float.shortValue()</target>
        </trans-unit>
        <trans-unit id="8d78998e2c129f04c590030d31e46539b4b14d3c" translate="yes" xml:space="preserve">
          <source>Float.sum()</source>
          <target state="translated">Float.sum()</target>
        </trans-unit>
        <trans-unit id="af8bf58af43421e316889dd37bb4f7bc400e32b5" translate="yes" xml:space="preserve">
          <source>Float.toHexString()</source>
          <target state="translated">Float.toHexString()</target>
        </trans-unit>
        <trans-unit id="c0e7194c54ad276ebd3053d684640de11b132a6b" translate="yes" xml:space="preserve">
          <source>Float.toString()</source>
          <target state="translated">Float.toString()</target>
        </trans-unit>
        <trans-unit id="5a3257a4ed6bcce8ba7f697ab53f02cf94112a97" translate="yes" xml:space="preserve">
          <source>Float.valueOf()</source>
          <target state="translated">Float.valueOf()</target>
        </trans-unit>
        <trans-unit id="a078475bd3c3f6681da8efeea5d12fc88f1442ca" translate="yes" xml:space="preserve">
          <source>FloatBuffer</source>
          <target state="translated">FloatBuffer</target>
        </trans-unit>
        <trans-unit id="662469c7c30b5a90e6232907decc04e1f1ae6180" translate="yes" xml:space="preserve">
          <source>FloatBuffer.allocate()</source>
          <target state="translated">FloatBuffer.allocate()</target>
        </trans-unit>
        <trans-unit id="0e6a9f838eeb6a6192fa21a6d8450eee8624406f" translate="yes" xml:space="preserve">
          <source>FloatBuffer.array()</source>
          <target state="translated">FloatBuffer.array()</target>
        </trans-unit>
        <trans-unit id="e8afa6a7790440e6c43800ad9e6f37d4a1a72902" translate="yes" xml:space="preserve">
          <source>FloatBuffer.arrayOffset()</source>
          <target state="translated">FloatBuffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="23110c414735803cb2e9524b09c1d614546ddba4" translate="yes" xml:space="preserve">
          <source>FloatBuffer.asReadOnlyBuffer()</source>
          <target state="translated">FloatBuffer.asReadOnlyBuffer()</target>
        </trans-unit>
        <trans-unit id="c90275a459bf6eea63b763ff19741fb75697405c" translate="yes" xml:space="preserve">
          <source>FloatBuffer.compact()</source>
          <target state="translated">FloatBuffer.compact()</target>
        </trans-unit>
        <trans-unit id="d65614aa06519f781803884867cd2eaf4031dd89" translate="yes" xml:space="preserve">
          <source>FloatBuffer.compareTo()</source>
          <target state="translated">FloatBuffer.compareTo()</target>
        </trans-unit>
        <trans-unit id="032b9be98aa33e7c3465da1e4e6c0714d073f0d9" translate="yes" xml:space="preserve">
          <source>FloatBuffer.duplicate()</source>
          <target state="translated">FloatBuffer.duplicate()</target>
        </trans-unit>
        <trans-unit id="d983005f4d3313b2bde165553c781812b0583600" translate="yes" xml:space="preserve">
          <source>FloatBuffer.equals()</source>
          <target state="translated">FloatBuffer.equals()</target>
        </trans-unit>
        <trans-unit id="3bfbbfd6d48123dc19850f18a86ea1363e254c70" translate="yes" xml:space="preserve">
          <source>FloatBuffer.get()</source>
          <target state="translated">FloatBuffer.get()</target>
        </trans-unit>
        <trans-unit id="09d679c6857fd82d096421671c9824a2002dd733" translate="yes" xml:space="preserve">
          <source>FloatBuffer.hasArray()</source>
          <target state="translated">FloatBuffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="17eb569ec3032a73b52f1c117117780618f0b862" translate="yes" xml:space="preserve">
          <source>FloatBuffer.hashCode()</source>
          <target state="translated">FloatBuffer.hashCode()</target>
        </trans-unit>
        <trans-unit id="4ef712753b6ddb07edec569f32b38756195ead3d" translate="yes" xml:space="preserve">
          <source>FloatBuffer.isDirect()</source>
          <target state="translated">FloatBuffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="15f8cb8b9426afcbc2b92ee89ce25893a13cb85a" translate="yes" xml:space="preserve">
          <source>FloatBuffer.order()</source>
          <target state="translated">FloatBuffer.order()</target>
        </trans-unit>
        <trans-unit id="31a814ac430f94178b07082da2f86be6868e03b0" translate="yes" xml:space="preserve">
          <source>FloatBuffer.put()</source>
          <target state="translated">FloatBuffer.put()</target>
        </trans-unit>
        <trans-unit id="51aef77aa749b14b9a34a0aebb89749f822b2bec" translate="yes" xml:space="preserve">
          <source>FloatBuffer.slice()</source>
          <target state="translated">FloatBuffer.slice()</target>
        </trans-unit>
        <trans-unit id="ebe57cd70a949001ab9a64844e2ce614bb6f66ee" translate="yes" xml:space="preserve">
          <source>FloatBuffer.toString()</source>
          <target state="translated">FloatBuffer.toString()</target>
        </trans-unit>
        <trans-unit id="2af868fa3d593cc47c448727ae6561f7d00e8998" translate="yes" xml:space="preserve">
          <source>FloatBuffer.wrap()</source>
          <target state="translated">FloatBuffer.wrap()</target>
        </trans-unit>
        <trans-unit id="b9940e4d919de9a734b46912d8d615ccc47b17b9" translate="yes" xml:space="preserve">
          <source>FloatControl</source>
          <target state="translated">FloatControl</target>
        </trans-unit>
        <trans-unit id="b95bb0034e6d73bf3676fed52f5c11865577dce9" translate="yes" xml:space="preserve">
          <source>FloatControl.Type</source>
          <target state="translated">FloatControl.Type</target>
        </trans-unit>
        <trans-unit id="2cdb3cc6753dd220a35bf2ae855aba619dc1835d" translate="yes" xml:space="preserve">
          <source>FloatControl.getMaxLabel()</source>
          <target state="translated">FloatControl.getMaxLabel()</target>
        </trans-unit>
        <trans-unit id="9ea1faa0323c70342cb4d8b492ec6d96f3a8ec52" translate="yes" xml:space="preserve">
          <source>FloatControl.getMaximum()</source>
          <target state="translated">FloatControl.getMaximum()</target>
        </trans-unit>
        <trans-unit id="ec2b847e81332eaba5e13170625befe227eb347c" translate="yes" xml:space="preserve">
          <source>FloatControl.getMidLabel()</source>
          <target state="translated">FloatControl.getMidLabel()</target>
        </trans-unit>
        <trans-unit id="4544578bac83afd097f4e5d619f0286265315efa" translate="yes" xml:space="preserve">
          <source>FloatControl.getMinLabel()</source>
          <target state="translated">FloatControl.getMinLabel()</target>
        </trans-unit>
        <trans-unit id="b195afe07fd542779f317c908aa20edbbf9a9b55" translate="yes" xml:space="preserve">
          <source>FloatControl.getMinimum()</source>
          <target state="translated">FloatControl.getMinimum()</target>
        </trans-unit>
        <trans-unit id="11adf7d9747a6f021f96d453e1a764264d54266d" translate="yes" xml:space="preserve">
          <source>FloatControl.getPrecision()</source>
          <target state="translated">FloatControl.getPrecision()</target>
        </trans-unit>
        <trans-unit id="25c6e16344b81f3e918c181f49797b653dbd72bc" translate="yes" xml:space="preserve">
          <source>FloatControl.getUnits()</source>
          <target state="translated">FloatControl.getUnits()</target>
        </trans-unit>
        <trans-unit id="7ce8918f337e55babf56437630f4c87202d3c05d" translate="yes" xml:space="preserve">
          <source>FloatControl.getUpdatePeriod()</source>
          <target state="translated">FloatControl.getUpdatePeriod()</target>
        </trans-unit>
        <trans-unit id="ceb190f8b30bd5e90e3af329a4ac8d095ba92573" translate="yes" xml:space="preserve">
          <source>FloatControl.getValue()</source>
          <target state="translated">FloatControl.getValue()</target>
        </trans-unit>
        <trans-unit id="866c81043de2591d960891a0ba063b3d3224d3c4" translate="yes" xml:space="preserve">
          <source>FloatControl.setValue()</source>
          <target state="translated">FloatControl.setValue()</target>
        </trans-unit>
        <trans-unit id="44c641254be897c8d35dfa2ac9368d4249302fd5" translate="yes" xml:space="preserve">
          <source>FloatControl.shift()</source>
          <target state="translated">FloatControl.shift()</target>
        </trans-unit>
        <trans-unit id="e58b80cd394c1080c32f50afff5b493b00de7aaf" translate="yes" xml:space="preserve">
          <source>FloatControl.toString()</source>
          <target state="translated">FloatControl.toString()</target>
        </trans-unit>
        <trans-unit id="9b89761c1275fbd86f5d8bdac914c12c58e930fa" translate="yes" xml:space="preserve">
          <source>FloatTypeSuffix</source>
          <target state="translated">FloatTypeSuffix</target>
        </trans-unit>
        <trans-unit id="c519d710264ca57131c8c72af46f62f0392a4fb0" translate="yes" xml:space="preserve">
          <source>FloatValue</source>
          <target state="translated">FloatValue</target>
        </trans-unit>
        <trans-unit id="47bbc397e99f332b6e509e454f6ed930e81824fb" translate="yes" xml:space="preserve">
          <source>FloatValue:</source>
          <target state="translated">FloatValue:</target>
        </trans-unit>
        <trans-unit id="f980f6669a99ae97aa471b598c62ac0c3e1f823b" translate="yes" xml:space="preserve">
          <source>Floating Point</source>
          <target state="translated">부동 소수점</target>
        </trans-unit>
        <trans-unit id="b8800852afd836b0863fdad8639bae3a755b7144" translate="yes" xml:space="preserve">
          <source>Floating-point Value</source>
          <target state="translated">부동 소수점 값</target>
        </trans-unit>
        <trans-unit id="a212716cbe7ed0298003bab7a55d994d07404503" translate="yes" xml:space="preserve">
          <source>FloatingPointLiteral</source>
          <target state="translated">FloatingPointLiteral</target>
        </trans-unit>
        <trans-unit id="95289a2227c75696577d36f038adc0563446af93" translate="yes" xml:space="preserve">
          <source>Floppy drive icon</source>
          <target state="translated">플로피 드라이브 아이콘</target>
        </trans-unit>
        <trans-unit id="86eff8eb789b097ddca83f2c9c4617ed23605105" translate="yes" xml:space="preserve">
          <source>Flow</source>
          <target state="translated">Flow</target>
        </trans-unit>
        <trans-unit id="1fbdd67b9ee3d58b6bcf4dadfff2bdda23adb642" translate="yes" xml:space="preserve">
          <source>Flow layouts are typically used to arrange buttons in a panel. It arranges buttons horizontally until no more buttons fit on the same line. The line alignment is determined by the &lt;code&gt;align&lt;/code&gt; property. The possible values are:</source>
          <target state="translated">흐름 레이아웃은 일반적으로 패널에서 버튼을 배열하는 데 사용됩니다. 같은 줄에 더 이상 단추가 들어 가지 않을 때까지 단추를 가로로 정렬합니다. 선 정렬은 &lt;code&gt;align&lt;/code&gt; 속성에 의해 결정됩니다 . 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2199b0cc3ce6827177790e92c8dfd87f12245232" translate="yes" xml:space="preserve">
          <source>Flow.Processor</source>
          <target state="translated">Flow.Processor</target>
        </trans-unit>
        <trans-unit id="b4b853b62f1db0fa10f778a5f431231badd0cc9b" translate="yes" xml:space="preserve">
          <source>Flow.Publisher</source>
          <target state="translated">Flow.Publisher</target>
        </trans-unit>
        <trans-unit id="8eb46e10251c4a40e3fef81fc36b45494ff273ab" translate="yes" xml:space="preserve">
          <source>Flow.Subscriber</source>
          <target state="translated">Flow.Subscriber</target>
        </trans-unit>
        <trans-unit id="ade1c535401a1a8ca35c509f3d865c6bb7293372" translate="yes" xml:space="preserve">
          <source>Flow.Subscription</source>
          <target state="translated">Flow.Subscription</target>
        </trans-unit>
        <trans-unit id="a8c8dce78b088d35b593f92e653757928bd6950e" translate="yes" xml:space="preserve">
          <source>FlowLayout</source>
          <target state="translated">FlowLayout</target>
        </trans-unit>
        <trans-unit id="048463aa094e8a9922d49cb85017526021c9deb1" translate="yes" xml:space="preserve">
          <source>FlowStrategy</source>
          <target state="translated">FlowStrategy</target>
        </trans-unit>
        <trans-unit id="4b826e5a95cf8b9714b4859644ecf5d31fabfb59" translate="yes" xml:space="preserve">
          <source>FlowView</source>
          <target state="translated">FlowView</target>
        </trans-unit>
        <trans-unit id="1ebfb4f924dcfdd9aedd4771c15c8e117f0bb6c8" translate="yes" xml:space="preserve">
          <source>FlowView.FlowStrategy</source>
          <target state="translated">FlowView.FlowStrategy</target>
        </trans-unit>
        <trans-unit id="59037e28fcb90ff90d7b474f438663c6b045f64d" translate="yes" xml:space="preserve">
          <source>Flush all of the Introspector's internal caches.</source>
          <target state="translated">Introspector의 모든 내부 캐시를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="cf3ee4aa344fd9439d7a23eed724ed1c7b819697" translate="yes" xml:space="preserve">
          <source>Flush all of the Introspector's internal caches. This method is not normally required. It is normally only needed by advanced tools that update existing &quot;Class&quot; objects in-place and need to make the Introspector re-analyze existing Class objects.</source>
          <target state="translated">Introspector의 내부 캐시를 모두 비 웁니다. 이 방법은 일반적으로 필요하지 않습니다. 일반적으로 기존 &quot;클래스&quot;개체를 제자리에서 업데이트하고 Introspector가 기존 클래스 개체를 다시 분석하도록하는 고급 도구에서만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="58ca7a5d25df440512599cf0142b9f49cb875f4c" translate="yes" xml:space="preserve">
          <source>Flush any buffered messages.</source>
          <target state="translated">버퍼링 된 메시지를 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="cbdbf4f52aca9b56567adba9fa2a32b0f8f121bf" translate="yes" xml:space="preserve">
          <source>Flush any buffered output.</source>
          <target state="translated">버퍼링 된 출력을 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="f2a37ad75daf9994928e4a49c47e338e6a246bf3" translate="yes" xml:space="preserve">
          <source>Flush the Introspector's internal cached information for a given class.</source>
          <target state="translated">지정된 클래스에 대한 Introspector의 내부 캐시 정보를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="dd43b9352fe5975b1d492527a9453c5ad462ec1d" translate="yes" xml:space="preserve">
          <source>Flush the Introspector's internal cached information for a given class. This method is not normally required. It is normally only needed by advanced tools that update existing &quot;Class&quot; objects in-place and need to make the Introspector re-analyze an existing Class object. Note that only the direct state associated with the target Class object is flushed. We do not flush state for other Class objects with the same name, nor do we flush state for any related Class objects (such as subclasses), even though their state may include information indirectly obtained from the target Class object.</source>
          <target state="translated">주어진 클래스에 대한 Introspector의 내부 캐시 된 정보를 비 웁니다. 이 방법은 일반적으로 필요하지 않습니다. 일반적으로 기존 &quot;클래스&quot;개체를 제자리에서 업데이트하고 Introspector가 기존 클래스 개체를 다시 분석하도록하는 고급 도구에서만 필요합니다. 대상 Class 객체와 연결된 직접 상태 만 플러시됩니다. 동일한 이름을 가진 다른 Class 객체의 상태를 플러시하지 않으며, 해당 상태에 대상 Class 객체에서 간접적으로 얻은 정보가 포함되어 있어도 관련된 Class 객체 (예 : 서브 클래스)의 상태를 플러시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="edc3fd57810a894c7625b9a523573427c6dd958a" translate="yes" xml:space="preserve">
          <source>Flush the stream.</source>
          <target state="translated">스트림을 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="32abf43af3e0eb214d706849ff8f9b42087c2a4a" translate="yes" xml:space="preserve">
          <source>Flush3DBorder</source>
          <target state="translated">Flush3DBorder</target>
        </trans-unit>
        <trans-unit id="1d9f36d8dcf7e660b911e13417de562962fae133" translate="yes" xml:space="preserve">
          <source>Flushable</source>
          <target state="translated">Flushable</target>
        </trans-unit>
        <trans-unit id="0d8e5de7e8be561cedb7fbaca801fd5980979d91" translate="yes" xml:space="preserve">
          <source>Flushable.flush()</source>
          <target state="translated">Flushable.flush()</target>
        </trans-unit>
        <trans-unit id="42875ff7501e0088b91534939ee2eb7e7e2a0d54" translate="yes" xml:space="preserve">
          <source>Flushes all data prior to the given position to the underlying destination, such as an &lt;code&gt;OutputStream&lt;/code&gt; or &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">지정된 위치 이전의 모든 데이터를 &lt;code&gt;OutputStream&lt;/code&gt; 또는 &lt;code&gt;File&lt;/code&gt; 과 같은 기본 대상으로 플러시합니다 .</target>
        </trans-unit>
        <trans-unit id="4e03356e53cd4b45d147e1714ac4698e16f5f4e5" translate="yes" xml:space="preserve">
          <source>Flushes all data prior to the given position to the underlying destination, such as an &lt;code&gt;OutputStream&lt;/code&gt; or &lt;code&gt;File&lt;/code&gt;. Attempting to seek to the flushed portion of the stream will result in an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt;.</source>
          <target state="translated">지정된 위치 이전의 모든 데이터를 기본 목적지 (예 : &lt;code&gt;OutputStream&lt;/code&gt; 또는 &lt;code&gt;File&lt;/code&gt; ) 로 플러시합니다 . 스트림의 플러시 된 부분을 찾으려고하면 &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; 이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="0ae8e631c0fc5969fe26283b445f1116611ef1f0" translate="yes" xml:space="preserve">
          <source>Flushes all reconstructable resources being used by this Image object.</source>
          <target state="translated">이 Image 개체에서 사용중인 모든 재구성 가능한 리소스를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="3e25942a94de4bb3ad34202a7dcfcd620755f6ce" translate="yes" xml:space="preserve">
          <source>Flushes all reconstructable resources being used by this Image object. This includes any pixel data that is being cached for rendering to the screen as well as any system resources that are being used to store data or pixels for the image if they can be recreated. The image is reset to a state similar to when it was first created so that if it is again rendered, the image data will have to be recreated or fetched again from its source.</source>
          <target state="translated">이 Image 개체에서 사용중인 모든 재구성 가능한 리소스를 플러시합니다. 여기에는 화면에 렌더링하기 위해 캐시되는 모든 픽셀 데이터와 이미지에 대한 데이터 또는 픽셀을 다시 만들 수있는 경우 저장하는 데 사용되는 모든 시스템 리소스가 포함됩니다. 이미지는 처음 생성되었을 때와 비슷한 상태로 재설정되므로 다시 렌더링되면 이미지 데이터를 다시 생성하거나 소스에서 다시 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="a483c218f4ede88511a568ec3515f6a659538396" translate="yes" xml:space="preserve">
          <source>Flushes any resources opened for output by this file manager directly or indirectly.</source>
          <target state="translated">이 파일 관리자가 출력하기 위해 연 모든 리소스를 직접 또는 간접적으로 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="5c301973568b1010ffc4abeb3890c49223cf556b" translate="yes" xml:space="preserve">
          <source>Flushes any resources opened for output by this file manager directly or indirectly. Flushing a closed file manager has no effect.</source>
          <target state="translated">이 파일 관리자가 직접 또는 간접적으로 출력하기 위해 열린 모든 자원을 플러시합니다. 닫힌 파일 관리자를 비우는 것은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b41792b8a406dde8752d03242f965cef4652900a" translate="yes" xml:space="preserve">
          <source>Flushes queued data from the line.</source>
          <target state="translated">라인에서 대기중인 데이터를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="e2b40fdd5484676ce39ad94b7bd8775a5ff1c7d2" translate="yes" xml:space="preserve">
          <source>Flushes queued data from the line. The flushed data is discarded. In some cases, not all queued data can be discarded. For example, a mixer can flush data from the buffer for a specific input line, but any unplayed data already in the output buffer (the result of the mix) will still be played. You can invoke this method after pausing a line (the normal case) if you want to skip the &quot;stale&quot; data when you restart playback or capture. (It is legal to flush a line that is not stopped, but doing so on an active line is likely to cause a discontinuity in the data, resulting in a perceptible click.)</source>
          <target state="translated">줄에서 대기중인 데이터를 플러시합니다. 플러시 된 데이터는 삭제됩니다. 경우에 따라 대기중인 모든 데이터를 버릴 수있는 것은 아닙니다. 예를 들어 믹서는 특정 입력 라인에 대해 버퍼에서 데이터를 플러시 할 수 있지만 이미 출력 버퍼 (믹스 결과)에있는 재생되지 않은 데이터는 계속 재생됩니다. 재생 또는 캡처를 다시 시작할 때 &quot;stale&quot;데이터를 건너 뛰려면 행을 일시 중지 한 후 (일반적인 경우)이 메소드를 호출 할 수 있습니다. (중지되지 않은 라인을 플러시하는 것은 합법적이지만 활성 라인에서 그렇게하면 데이터가 중단되어 클릭이 감지 될 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="e2f9819660d4e0302415b9142f9b771239cc2dd4" translate="yes" xml:space="preserve">
          <source>Flushes the compressed output stream.</source>
          <target state="translated">압축 된 출력 스트림을 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="923f5d0e0f120941c4098720b1b419ccc25ef8f7" translate="yes" xml:space="preserve">
          <source>Flushes the compressed output stream. If &lt;a href=&quot;#%3Cinit%3E(java.io.OutputStream,java.util.zip.Deflater,int,boolean)&quot;&gt;&lt;code&gt;syncFlush&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; when this compressed output stream is constructed, this method first flushes the underlying &lt;code&gt;compressor&lt;/code&gt; with the flush mode &lt;a href=&quot;deflater#SYNC_FLUSH&quot;&gt;&lt;code&gt;Deflater.SYNC_FLUSH&lt;/code&gt;&lt;/a&gt; to force all pending data to be flushed out to the output stream and then flushes the output stream. Otherwise this method only flushes the output stream without flushing the &lt;code&gt;compressor&lt;/code&gt;.</source>
          <target state="translated">압축 된 출력 스트림을 플러시합니다. 경우 &lt;a href=&quot;#%3Cinit%3E(java.io.OutputStream,java.util.zip.Deflater,int,boolean)&quot;&gt; &lt;code&gt;syncFlush&lt;/code&gt; 가&lt;/a&gt; 인 &lt;code&gt;true&lt;/code&gt; 이 압축 된 출력 스트림이 생성되는 경우,이 방법은 첫번째 기본 플러시 &lt;code&gt;compressor&lt;/code&gt; 플러시 모드와 &lt;a href=&quot;deflater#SYNC_FLUSH&quot;&gt; &lt;code&gt;Deflater.SYNC_FLUSH&lt;/code&gt; &lt;/a&gt; 출력 스트림에 플러시 될 계류중인 모든 데이터를 강제을하고 출력 스트림을 플래시. 그렇지 않으면이 메서드는 &lt;code&gt;compressor&lt;/code&gt; 를 플러시하지 않고 출력 스트림 만 플러시합니다 .</target>
        </trans-unit>
        <trans-unit id="22c98069e18f742f97177b77228dbcec905df571" translate="yes" xml:space="preserve">
          <source>Flushes the compressed output stream. If &lt;a href=&quot;deflateroutputstream#DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-int-boolean-&quot;&gt;&lt;code&gt;syncFlush&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; when this compressed output stream is constructed, this method first flushes the underlying &lt;code&gt;compressor&lt;/code&gt; with the flush mode &lt;a href=&quot;deflater#SYNC_FLUSH&quot;&gt;&lt;code&gt;Deflater.SYNC_FLUSH&lt;/code&gt;&lt;/a&gt; to force all pending data to be flushed out to the output stream and then flushes the output stream. Otherwise this method only flushes the output stream without flushing the &lt;code&gt;compressor&lt;/code&gt;.</source>
          <target state="translated">압축 된 출력 스트림을 플러시합니다. 경우 &lt;a href=&quot;deflateroutputstream#DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-int-boolean-&quot;&gt; &lt;code&gt;syncFlush&lt;/code&gt; 가&lt;/a&gt; 인 &lt;code&gt;true&lt;/code&gt; 이 압축 된 출력 스트림이 생성되는 경우,이 방법은 첫번째 기본 플러시 &lt;code&gt;compressor&lt;/code&gt; 플러시 모드와 &lt;a href=&quot;deflater#SYNC_FLUSH&quot;&gt; &lt;code&gt;Deflater.SYNC_FLUSH&lt;/code&gt; &lt;/a&gt; 출력 스트림에 플러시 될 계류중인 모든 데이터를 강제을하고 출력 스트림을 플래시. 그렇지 않으면이 방법은 &lt;code&gt;compressor&lt;/code&gt; 를 플러시하지 않고 출력 스트림 만 플러시합니다 .</target>
        </trans-unit>
        <trans-unit id="5b15e249d4b5f7a1e25fae529068f2d7263b626f" translate="yes" xml:space="preserve">
          <source>Flushes the console and forces any buffered output to be written immediately .</source>
          <target state="translated">콘솔을 플러시하고 버퍼링 된 출력을 즉시 쓰도록합니다.</target>
        </trans-unit>
        <trans-unit id="172701747f93b1a49565bcb3bd048ea44d742223" translate="yes" xml:space="preserve">
          <source>Flushes the stream and checks its error state.</source>
          <target state="translated">스트림을 플러시하고 오류 상태를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="917793f660fae575f902dcfdcd2ad4d72b9730c1" translate="yes" xml:space="preserve">
          <source>Flushes the stream and checks its error state. The internal error state is set to &lt;code&gt;true&lt;/code&gt; when the underlying output stream throws an &lt;code&gt;IOException&lt;/code&gt; other than &lt;code&gt;InterruptedIOException&lt;/code&gt;, and when the &lt;code&gt;setError&lt;/code&gt; method is invoked. If an operation on the underlying output stream throws an &lt;code&gt;InterruptedIOException&lt;/code&gt;, then the &lt;code&gt;PrintStream&lt;/code&gt; converts the exception back into an interrupt by doing:</source>
          <target state="translated">스트림을 플러시하고 오류 상태를 확인합니다. 내부 출력 상태는 기본 출력 스트림 이 &lt;code&gt;InterruptedIOException&lt;/code&gt; 이외 의 &lt;code&gt;IOException&lt;/code&gt; 을 throw 하고 &lt;code&gt;setError&lt;/code&gt; 메소드가 호출 될 때 &lt;code&gt;true&lt;/code&gt; 로 설정 됩니다. 기본 출력 스트림에 대한 작업이 &lt;code&gt;InterruptedIOException&lt;/code&gt; 을 throw 하면 &lt;code&gt;PrintStream&lt;/code&gt; 은 다음 을 수행하여 예외를 다시 인터럽트로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="e1d1a01e00649a56e4be3c6877ec77afc38fdb1a" translate="yes" xml:space="preserve">
          <source>Flushes the stream if it's not closed and checks its error state.</source>
          <target state="translated">스트림이 닫히지 않으면 플러시하고 오류 상태를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4f18707bcfd581256c925c8ceb7a6b0e579c29e8" translate="yes" xml:space="preserve">
          <source>Flushes the stream.</source>
          <target state="translated">스트림을 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="27549ded09a673f27fce36a1c79b36720812fffc" translate="yes" xml:space="preserve">
          <source>Flushes the stream. If the stream has saved any characters from the various write() methods in a buffer, write them immediately to their intended destination. Then, if that destination is another character or byte stream, flush it. Thus one flush() invocation will flush all the buffers in a chain of Writers and OutputStreams.</source>
          <target state="translated">스트림을 플러시합니다. 스트림이 다양한 write () 메소드의 문자를 버퍼에 저장 한 경우 원하는 대상에 즉시 씁니다. 그런 다음 해당 대상이 다른 문자 또는 바이트 스트림 인 경우 플러시합니다. 따라서 하나의 flush () 호출은 일련의 Writers 및 OutputStreams의 모든 버퍼를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="baa04d112254e1b279bc1c47018931f7571ce551" translate="yes" xml:space="preserve">
          <source>Flushes the stream. This is done by writing any buffered output bytes to the underlying output stream and then flushing that stream.</source>
          <target state="translated">스트림을 플러시합니다. 버퍼링 된 출력 바이트를 기본 출력 스트림에 쓴 다음 해당 스트림을 플러시하면됩니다.</target>
        </trans-unit>
        <trans-unit id="be9d6adb6b1406398b401ae6a4672f858e7a78df" translate="yes" xml:space="preserve">
          <source>Flushes the stream. This will write any buffered output bytes and flush through to the underlying stream.</source>
          <target state="translated">스트림을 플러시합니다. 버퍼링 된 출력 바이트를 쓰고 기본 스트림으로 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="7d0c9b5f55e5caf2896bd7d20cc4e2b514cdfdc9" translate="yes" xml:space="preserve">
          <source>Flushes the stream. This will write any buffered output bytes.</source>
          <target state="translated">스트림을 플러시합니다. 버퍼링 된 출력 바이트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="639cf25194be2f753156a201750666c8f0420631" translate="yes" xml:space="preserve">
          <source>Flushes this buffered output stream.</source>
          <target state="translated">이 버퍼 된 출력 스트림을 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="85496fb5b4f23f6bd6da20fc6355dc0af0445c1a" translate="yes" xml:space="preserve">
          <source>Flushes this buffered output stream. This forces any buffered output bytes to be written out to the underlying output stream.</source>
          <target state="translated">이 버퍼링 된 출력 스트림을 플러시합니다. 이렇게하면 버퍼링 된 출력 바이트가 기본 출력 스트림에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="bcc966acb52d0f68f32a9eb2e2e2acf535260b41" translate="yes" xml:space="preserve">
          <source>Flushes this data output stream.</source>
          <target state="translated">이 데이터 출력 스트림을 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="099deb41fdb7d97c649c6bd0906433b9fd4384a4" translate="yes" xml:space="preserve">
          <source>Flushes this data output stream. This forces any buffered output bytes to be written out to the stream.</source>
          <target state="translated">이 데이터 출력 스트림을 플러시합니다. 버퍼링 된 출력 바이트가 스트림에 강제로 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="b4f55b8f266ef408ebda709c34943453f2920da5" translate="yes" xml:space="preserve">
          <source>Flushes this decoder.</source>
          <target state="translated">이 디코더를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="a58378208cf39afe752e3f5ea5a2b90a44d200fd" translate="yes" xml:space="preserve">
          <source>Flushes this encoder.</source>
          <target state="translated">이 인코더를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="31d005aeb46638a01a212c34ef8ebcc2e7447e73" translate="yes" xml:space="preserve">
          <source>Flushes this formatter.</source>
          <target state="translated">이 포맷터를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="324812d4d8236eb7df771889d3aa4cca5bead978" translate="yes" xml:space="preserve">
          <source>Flushes this formatter. If the destination implements the &lt;a href=&quot;../io/flushable&quot;&gt;&lt;code&gt;Flushable&lt;/code&gt;&lt;/a&gt; interface, its &lt;code&gt;flush&lt;/code&gt; method will be invoked.</source>
          <target state="translated">이 포매터를 플러시합니다. 대상이 &lt;a href=&quot;../io/flushable&quot;&gt; &lt;code&gt;Flushable&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하면 해당 &lt;code&gt;flush&lt;/code&gt; 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="8a7b8695f698b7994fd7ead006b2734c41a847fd" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output bytes to be written out to the stream.</source>
          <target state="translated">이 출력 스트림을 플래시 해, 버퍼에있는 출력 바이트를 스트림에 강제적으로 써냅니다.</target>
        </trans-unit>
        <trans-unit id="db79f82cc6dec498148212763f561f450d0a091c" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output bytes to be written out.</source>
          <target state="translated">이 출력 스트림을 플러시하고 버퍼 된 출력 바이트를 강제로 기록합니다.</target>
        </trans-unit>
        <trans-unit id="a7d347580d93037b72c655bbbd27b6c3c4b04c93" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output bytes to be written out. The general contract of &lt;code&gt;flush&lt;/code&gt; is that calling it is an indication that, if any bytes previously written have been buffered by the implementation of the output stream, such bytes should immediately be written to their intended destination.</source>
          <target state="translated">이 출력 스트림을 플래시 해, 버퍼 된 출력 바이트를 모두 강제적으로 기입합니다. &lt;code&gt;flush&lt;/code&gt; 의 일반적인 계약은 호출이 이전에 작성된 바이트가 출력 스트림의 구현에 의해 버퍼링 된 경우 해당 바이트를 의도 한 대상에 즉시 작성해야한다는 표시입니다.</target>
        </trans-unit>
        <trans-unit id="88a445d926ff76766416fa1d70ac5b897cd48596" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output bytes to be written out. This will notify any readers that bytes are waiting in the pipe.</source>
          <target state="translated">이 출력 스트림을 플러시하고 버퍼링 된 출력 바이트를 강제로 기록합니다. 그러면 파이프에서 바이트가 대기 중임을 독자에게 알립니다.</target>
        </trans-unit>
        <trans-unit id="c9444a8ef8681cfdf7bc6090df80c2af2cd48913" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output characters to be written out.</source>
          <target state="translated">이 출력 스트림을 비우고 버퍼링 된 출력 문자를 강제로 기록합니다.</target>
        </trans-unit>
        <trans-unit id="a3d361ce221bdc3f10a930aee652587351f2bbe9" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output characters to be written out. This will notify any readers that characters are waiting in the pipe.</source>
          <target state="translated">이 출력 스트림을 플러시하고 버퍼링 된 출력 문자를 강제로 씁니다. 그러면 파이프에서 문자가 대기 중임을 독자에게 알립니다.</target>
        </trans-unit>
        <trans-unit id="d15ef9dff7afa4e9ffbd2cd4be187394d0163b84" translate="yes" xml:space="preserve">
          <source>Flushes this output stream by forcing any buffered output bytes that have already been processed by the encapsulated cipher object to be written out.</source>
          <target state="translated">캡슐화 된 암호 오브젝트에 의해 이미 처리 된 버퍼링 된 출력 바이트를 강제로 작성하여이 출력 스트림을 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="1c102df522805bafa3e28cc92589ff2b9b16f37d" translate="yes" xml:space="preserve">
          <source>Flushes this output stream, forcing any pending buffered output bytes to be written.</source>
          <target state="translated">보류중인 버퍼링 된 출력 바이트를 강제로 작성하여이 출력 스트림을 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="ae9c3c6d0ca6e8fa4dc383b3ed1e35dfc088a0ec" translate="yes" xml:space="preserve">
          <source>Flushes this stream by writing any buffered output to the underlying stream.</source>
          <target state="translated">버퍼링 된 출력을 기본 스트림에 기록하여이 스트림을 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="db13de4337e3f12fedae33632035682f751d41c8" translate="yes" xml:space="preserve">
          <source>Flushing a formatter writes any buffered output in the destination to the underlying stream.</source>
          <target state="translated">포맷터를 비우면 대상의 버퍼링 된 출력이 기본 스트림에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="d9d1999ec742ec9c8a7f5a6758157b8951cb525a" translate="yes" xml:space="preserve">
          <source>Focus Specification</source>
          <target state="translated">초점 사양</target>
        </trans-unit>
        <trans-unit id="7ac876985aa1e6c02d04ed096b1e57a1ff3f1aab" translate="yes" xml:space="preserve">
          <source>Focus change listener</source>
          <target state="translated">포커스 변경 리스너</target>
        </trans-unit>
        <trans-unit id="9f5feabe1f193ea4f5922e67f59c5a9c3b66a4ea" translate="yes" xml:space="preserve">
          <source>Focus color</source>
          <target state="translated">초점 색상</target>
        </trans-unit>
        <trans-unit id="636f78d5a4637ec48796807d50f5d7e5046e71c0" translate="yes" xml:space="preserve">
          <source>Focus events are enabled via &lt;code&gt;enableEvents&lt;/code&gt;.</source>
          <target state="translated">포커스 이벤트는 &lt;code&gt;enableEvents&lt;/code&gt; 를 통해 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="e2a86206b707c6d81fcdb08c90ca1b33f284a70f" translate="yes" xml:space="preserve">
          <source>Focus insets</source>
          <target state="translated">초점 삽입</target>
        </trans-unit>
        <trans-unit id="1173063445e407d3b621d72d2d27d16f243662fd" translate="yes" xml:space="preserve">
          <source>Focus listener</source>
          <target state="translated">집중 청취자</target>
        </trans-unit>
        <trans-unit id="fc12069cb4f4ef4583280f6686a03d0d49ab95ef" translate="yes" xml:space="preserve">
          <source>Focus rectangle</source>
          <target state="translated">초점 직사각형</target>
        </trans-unit>
        <trans-unit id="e41232b9888cba114762dfe3f2f216b07976808d" translate="yes" xml:space="preserve">
          <source>Focus-change listener.</source>
          <target state="translated">초점 변경 청취자.</target>
        </trans-unit>
        <trans-unit id="1b0798a755e08db0b68088f32fc9c919423a98a7" translate="yes" xml:space="preserve">
          <source>FocusAdapter</source>
          <target state="translated">FocusAdapter</target>
        </trans-unit>
        <trans-unit id="00f8899238763ba20231d7e00139237ba2f8d7ae" translate="yes" xml:space="preserve">
          <source>FocusEvent</source>
          <target state="translated">FocusEvent</target>
        </trans-unit>
        <trans-unit id="e9975367ce509a5cb25902dfe7396138a21a82e8" translate="yes" xml:space="preserve">
          <source>FocusEvent.Cause</source>
          <target state="translated">FocusEvent.Cause</target>
        </trans-unit>
        <trans-unit id="993d5eb57ad03fe31977653e476ef50f67701c9e" translate="yes" xml:space="preserve">
          <source>FocusHandler</source>
          <target state="translated">FocusHandler</target>
        </trans-unit>
        <trans-unit id="aaaa28970cae06f17f6f2622815b85a3e11f4ed0" translate="yes" xml:space="preserve">
          <source>FocusListener</source>
          <target state="translated">FocusListener</target>
        </trans-unit>
        <trans-unit id="f6162ef30458f0b1d33486fff4233c782b625dd2" translate="yes" xml:space="preserve">
          <source>FocusManager</source>
          <target state="translated">FocusManager</target>
        </trans-unit>
        <trans-unit id="d7e332038b8cf05d9f2268d983c5f779dd00b235" translate="yes" xml:space="preserve">
          <source>FocusTraversalPolicy</source>
          <target state="translated">FocusTraversalPolicy</target>
        </trans-unit>
        <trans-unit id="d58a30daaf93c9d521ed2cf39dc5d9838cd5e47a" translate="yes" xml:space="preserve">
          <source>FocusTraversalPolicy takes into account &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html#FocusTraversalPolicyProviders&quot;&gt;focus traversal policy providers&lt;/a&gt;. When searching for first/last/next/previous Component, if a focus traversal policy provider is encountered, its focus traversal policy is used to perform the search operation.</source>
          <target state="translated">FocusTraversalPolicy는 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html#FocusTraversalPolicyProviders&quot;&gt;포커스 순회 정책 공급자&lt;/a&gt; 를 고려합니다 . 첫 번째 / 마지막 / 다음 / 이전 구성 요소를 검색 할 때 포커스 탐색 정책 공급자를 만나면 해당 포커스 탐색 정책을 사용하여 검색 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="6b04a17bd8b73a2fdb3f249ee6ec2d85b37573c5" translate="yes" xml:space="preserve">
          <source>Focused</source>
          <target state="translated">Focused</target>
        </trans-unit>
        <trans-unit id="85eb876d327e7ad98bdd20df524d4dd17ee968bd" translate="yes" xml:space="preserve">
          <source>Focuses the Component after aComponent, typically based on a FocusTraversalPolicy.</source>
          <target state="translated">일반적으로 FocusTraversalPolicy를 기반으로 aComponent 다음에 구성 요소에 초점을 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="33d90710892a8435d44964b568a7e1e9d5ddf8ef" translate="yes" xml:space="preserve">
          <source>Focuses the Component after the current focus owner.</source>
          <target state="translated">현재 포커스 소유자 다음에 구성 요소에 포커스를 둡니다.</target>
        </trans-unit>
        <trans-unit id="2346fe180eb8c83a68d5c50b727888f616f591dc" translate="yes" xml:space="preserve">
          <source>Focuses the Component before aComponent, typically based on a FocusTraversalPolicy.</source>
          <target state="translated">일반적으로 FocusTraversalPolicy에 따라 aComponent 앞에 구성 요소에 초점을 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="8965277ff87e0848e3164f24baa01a31bfe9a7ba" translate="yes" xml:space="preserve">
          <source>Focuses the Component before the current focus owner.</source>
          <target state="translated">현재 포커스 소유자보다 먼저 컴포넌트에 포커스를 둡니다.</target>
        </trans-unit>
        <trans-unit id="4253cdf20f3655b6e47ffc34dc54e8dcfd8efabd" translate="yes" xml:space="preserve">
          <source>FolderIcon16</source>
          <target state="translated">FolderIcon16</target>
        </trans-unit>
        <trans-unit id="56e2f7fb41aa73be737248418ba5c0e5eb5fc6a8" translate="yes" xml:space="preserve">
          <source>Follow symbolic links.</source>
          <target state="translated">심볼릭 링크를 따르십시오.</target>
        </trans-unit>
        <trans-unit id="e17dbd79a84a54f559996c59b0712e0b95f8dcb9" translate="yes" xml:space="preserve">
          <source>Following full type-safety to its ultimate conclusion might also argue for a separate class for each field in date-time, such as a class for HourOfDay and another for DayOfMonth. This approach was tried, but was excessively complicated in the Java language, lacking usability. A similar problem occurs with periods. There is a case for a separate class for each period unit, such as a type for Years and a type for Minutes. However, this yields a lot of classes and a problem of type conversion. Thus, the set of date-time types provided is a compromise between purity and practicality.</source>
          <target state="translated">궁극적 인 결론에 대한 완전한 유형 안전성을 따르면 HourOfDay에 대한 클래스와 DayOfMonth에 대한 클래스와 같이 날짜-시간의 각 필드에 대해 별도의 클래스를 주장 할 수도 있습니다. 이 접근법은 시도되었지만 Java 언어에서는 지나치게 복잡하여 사용성이 떨어졌습니다. 마침표에서도 비슷한 문제가 발생합니다. 연도 유형 및 분 유형과 같이 각 기간 단위에 대해 별도의 클래스가있는 경우가 있습니다. 그러나 이로 인해 많은 클래스와 유형 변환 문제가 발생합니다. 따라서 제공된 날짜-시간 유형 집합은 순도와 실용성이 타협됩니다.</target>
        </trans-unit>
        <trans-unit id="8b23f8f2777a10912c1c9e7876566aa3d45b9d0b" translate="yes" xml:space="preserve">
          <source>FomattableFlags are passed to the &lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt;&lt;code&gt;Formattable.formatTo()&lt;/code&gt;&lt;/a&gt; method and modify the output format for &lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;.</source>
          <target state="translated">FomattableFlags는에 전달 &lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt; &lt;code&gt;Formattable.formatTo()&lt;/code&gt; &lt;/a&gt; 방법에 대한 출력 포맷 수정 &lt;a href=&quot;formattable&quot;&gt;Formattable는이&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca05bba3a397f29864c65816f78ff6246577d5ea" translate="yes" xml:space="preserve">
          <source>FomattableFlags are passed to the &lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt;&lt;code&gt;Formattable.formatTo()&lt;/code&gt;&lt;/a&gt; method and modify the output format for &lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;. Implementations of &lt;a href=&quot;formattable&quot;&gt;&lt;code&gt;Formattable&lt;/code&gt;&lt;/a&gt; are responsible for interpreting and validating any flags.</source>
          <target state="translated">FomattableFlags는에 전달 &lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt; &lt;code&gt;Formattable.formatTo()&lt;/code&gt; &lt;/a&gt; 방법에 대한 출력 포맷 수정 &lt;a href=&quot;formattable&quot;&gt;Formattable는이&lt;/a&gt; . &lt;a href=&quot;formattable&quot;&gt; &lt;code&gt;Formattable&lt;/code&gt; 의&lt;/a&gt; 구현은 플래그를 해석하고 유효성을 검사해야합니다.</target>
        </trans-unit>
        <trans-unit id="b97c4d4cddf23ec47395af460f9e28df2a0f9b04" translate="yes" xml:space="preserve">
          <source>Font</source>
          <target state="translated">Font</target>
        </trans-unit>
        <trans-unit id="a8daab2008e4b169bd06f1ba63fc83f51d45cedf" translate="yes" xml:space="preserve">
          <source>Font Faces and Names</source>
          <target state="translated">글꼴 및 이름</target>
        </trans-unit>
        <trans-unit id="f4480fe27751ad87cd93ceec7f8f841941adf210" translate="yes" xml:space="preserve">
          <source>Font Style</source>
          <target state="translated">폰트 스타일</target>
        </trans-unit>
        <trans-unit id="92d4b24c379731693154f310745277af77d1b97c" translate="yes" xml:space="preserve">
          <source>Font and TextAttribute</source>
          <target state="translated">글꼴 및 TextAttribute</target>
        </trans-unit>
        <trans-unit id="7d370a8d01236c2dfeba295d3a02e1eb3f85d6b5" translate="yes" xml:space="preserve">
          <source>Font descriptors.</source>
          <target state="translated">글꼴 설명자.</target>
        </trans-unit>
        <trans-unit id="bcc5e8823531691226582a43485ef3d46f2e4dd1" translate="yes" xml:space="preserve">
          <source>Font descriptors. Table tag &quot;fdsc&quot; in the Open Type Specification.</source>
          <target state="translated">글꼴 설명자. Open Type 사양의 테이블 태그 &quot;fdsc&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="53263bb8840c65a4ba07f68e7b4c3df7f30eed88" translate="yes" xml:space="preserve">
          <source>Font fractional metrics hint key.</source>
          <target state="translated">글꼴 분수 메트릭 힌트 키입니다.</target>
        </trans-unit>
        <trans-unit id="86d90ee427b44cf4b728975fec68744c1d9a66e2" translate="yes" xml:space="preserve">
          <source>Font fractional metrics hint key. The &lt;code&gt;FRACTIONALMETRICS&lt;/code&gt; hint controls whether the positioning of individual character glyphs takes into account the sub-pixel accuracy of the scaled character advances of the font or whether such advance vectors are rounded to an integer number of whole device pixels. This hint only recommends how much accuracy should be used to position the glyphs and does not specify or recommend whether or not the actual rasterization or pixel bounds of the glyph should be modified to match.</source>
          <target state="translated">글꼴 분수 메트릭 힌트 키입니다. &lt;code&gt;FRACTIONALMETRICS&lt;/code&gt; 는 개별 문자 모양의 위치는 장치 전체 화소의 정수로 반올림 고려 폰트 또는 미리 벡터 여부 스케일링 캐릭터 발전 서브 픽셀 정확도를 필요 여부를 제어 힌트. 이 힌트는 글리프를 배치하는 데 사용되는 정확도의 정도만 권장하며 글리프의 실제 래스터 화 또는 픽셀 경계를 일치하도록 수정해야하는지 여부를 지정하거나 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="58a28025d0f6185055c58789557fe5ef5dfcae20" translate="yes" xml:space="preserve">
          <source>Font fractional metrics hint value -- character glyphs are positioned with accuracy chosen by the implementation.</source>
          <target state="translated">글꼴 분수 메트릭 힌트 값-문자 글리프는 구현에서 선택한 정확도로 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="300138316b7a5f8f6a7fff691a96f8ada3dc73b5" translate="yes" xml:space="preserve">
          <source>Font fractional metrics hint value -- character glyphs are positioned with advance widths rounded to pixel boundaries.</source>
          <target state="translated">글꼴 분수 메트릭 힌트 값-문자 글리프는 픽셀 경계로 반올림 된 너비로 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="0b9a130ab1b845f84cb215be8acab5d36215d38f" translate="yes" xml:space="preserve">
          <source>Font fractional metrics hint value -- character glyphs are positioned with sub-pixel accuracy.</source>
          <target state="translated">글꼴 분수 메트릭 힌트 값-문자 글리프는 하위 픽셀 정확도로 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="e085c3b29b8b4669a6ee3c1593d627d5629b9359" translate="yes" xml:space="preserve">
          <source>Font header.</source>
          <target state="translated">글꼴 헤더.</target>
        </trans-unit>
        <trans-unit id="bac1bf70db7d497b27f641cf617f7eaba5acba86" translate="yes" xml:space="preserve">
          <source>Font header. Table tag &quot;head&quot; in the Open Type Specification.</source>
          <target state="translated">글꼴 헤더. Open Type 사양의 테이블 태그 「head」입니다.</target>
        </trans-unit>
        <trans-unit id="9f0283be0b670244684fa95aa1c56632f2a76b79" translate="yes" xml:space="preserve">
          <source>Font metrics are baseline-relative, meaning that they are generally independent of the rotation applied to the font (modulo possible grid hinting effects). See &lt;a href=&quot;font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">글꼴 메트릭은 기준선에 상대적입니다. 즉, 일반적으로 글꼴에 적용된 회전과는 독립적입니다 (모듈로 가능한 격자 힌트 효과). &lt;a href=&quot;font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a5d8e030693754f85636095e8997259dbd226a6" translate="yes" xml:space="preserve">
          <source>Font metrics for the current font.</source>
          <target state="translated">현재 글꼴에 대한 글꼴 메트릭입니다.</target>
        </trans-unit>
        <trans-unit id="1c76bd5295cfb4df84b2c61817964297f1cc929a" translate="yes" xml:space="preserve">
          <source>Font metrics.</source>
          <target state="translated">글꼴 메트릭.</target>
        </trans-unit>
        <trans-unit id="1f037791fcbbd93b36c443328680f7b0cbb50edb" translate="yes" xml:space="preserve">
          <source>Font metrics. Table tag &quot;fmtx&quot; in the Open Type Specification.</source>
          <target state="translated">글꼴 메트릭. Open Type 사양의 테이블 태그 「fmtx」입니다.</target>
        </trans-unit>
        <trans-unit id="d3ace9f5c49a90fb92717f303ef978d265c04a22" translate="yes" xml:space="preserve">
          <source>Font name lookup is case insensitive, using the case folding rules of the US locale.</source>
          <target state="translated">글꼴 이름 조회는 미국 로케일의 대소 문자 구분 규칙을 사용하여 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c884ceb423e891c8b4965add2a59a925e8be5f9d" translate="yes" xml:space="preserve">
          <source>Font program.</source>
          <target state="translated">글꼴 프로그램.</target>
        </trans-unit>
        <trans-unit id="442ef6ea18c9171f76c6672f5fd738e01aec9f5d" translate="yes" xml:space="preserve">
          <source>Font program. Table tag &quot;fpgm&quot; in the Open Type Specification.</source>
          <target state="translated">글꼴 프로그램. Open Type 사양의 테이블 태그 「fpgm」입니다.</target>
        </trans-unit>
        <trans-unit id="e68d07bfa47a695dcd953b4631287056c134cc34" translate="yes" xml:space="preserve">
          <source>Font to paint with, &lt;code&gt;null&lt;/code&gt; indicates font of renderer is to be used.</source>
          <target state="translated">칠할 글꼴, &lt;code&gt;null&lt;/code&gt; 은 렌더러의 글꼴이 사용됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="547e23c9c59db6aa511ca8d42984197fe41f24a0" translate="yes" xml:space="preserve">
          <source>Font to render with</source>
          <target state="translated">렌더링 할 글꼴</target>
        </trans-unit>
        <trans-unit id="836ebd209b63dd95ce6a6180e309a843624d420a" translate="yes" xml:space="preserve">
          <source>Font variation.</source>
          <target state="translated">글꼴 변형.</target>
        </trans-unit>
        <trans-unit id="0de36fe2c09c30a66fefaf954a3b2a7b5dd26157" translate="yes" xml:space="preserve">
          <source>Font variation. Table tag &quot;fvar&quot; in the Open Type Specification.</source>
          <target state="translated">글꼴 변형. Open Type 사양의 테이블 태그 &quot;fvar&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="9d28b9f6efd3ff57225119df4d0dc37f5c5c5918" translate="yes" xml:space="preserve">
          <source>FontFamily</source>
          <target state="translated">FontFamily</target>
        </trans-unit>
        <trans-unit id="86cae6a7a6beb3715636cd18e086f6111dec9973" translate="yes" xml:space="preserve">
          <source>FontFamilyAction</source>
          <target state="translated">FontFamilyAction</target>
        </trans-unit>
        <trans-unit id="8e7b98069d151f9c3b12f632f7628911a3d3315d" translate="yes" xml:space="preserve">
          <source>FontFormatException</source>
          <target state="translated">FontFormatException</target>
        </trans-unit>
        <trans-unit id="6d1199d6668860b258b5ad7487278035e79808f6" translate="yes" xml:space="preserve">
          <source>FontMetrics</source>
          <target state="translated">FontMetrics</target>
        </trans-unit>
        <trans-unit id="34edf210c152ecc6f10bafa39913598711b2e704" translate="yes" xml:space="preserve">
          <source>FontMetrics are not used for glyph rendering when running in the JDK.</source>
          <target state="translated">FontMetrics는 JDK에서 실행할 때 글리프 렌더링에 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8e5fb10ca665b0aa4182ebc1229225f53d9e682d" translate="yes" xml:space="preserve">
          <source>FontRenderContext</source>
          <target state="translated">FontRenderContext</target>
        </trans-unit>
        <trans-unit id="33447ebba2307df9a3ef38542c564fa066cf782a" translate="yes" xml:space="preserve">
          <source>FontSize</source>
          <target state="translated">FontSize</target>
        </trans-unit>
        <trans-unit id="6966778008f3ff09377d11c8e2f3e839b7585034" translate="yes" xml:space="preserve">
          <source>FontSizeAction</source>
          <target state="translated">FontSizeAction</target>
        </trans-unit>
        <trans-unit id="1d5cf198c7755047ab060c50974f64edba427bae" translate="yes" xml:space="preserve">
          <source>FontUIResource</source>
          <target state="translated">FontUIResource</target>
        </trans-unit>
        <trans-unit id="70731b0e70dbdc40d8ecf45f7123fca5bd9498ad" translate="yes" xml:space="preserve">
          <source>Fonts can have different metrics for different ranges of characters. The &lt;code&gt;getLineMetrics&lt;/code&gt; methods of &lt;a href=&quot;../font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt; take some text as an argument and return a &lt;code&gt;LineMetrics&lt;/code&gt; object describing the metrics of the initial number of characters in that text, as returned by &lt;a href=&quot;#getNumChars()&quot;&gt;&lt;code&gt;getNumChars()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">글꼴은 다양한 문자 범위에 대해 다른 메트릭을 가질 수 있습니다. &lt;a href=&quot;../font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;getLineMetrics&lt;/code&gt; 메소드는 일부 텍스트를 인수로 취하고 &lt;a href=&quot;#getNumChars()&quot;&gt; &lt;code&gt;getNumChars()&lt;/code&gt; &lt;/a&gt; 의해 반환 된대로 해당 텍스트의 초기 문자 수에 대한 메트릭을 설명 하는 &lt;code&gt;LineMetrics&lt;/code&gt; 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="558e6cd283a156ce5070afa87f014ad813d33f9f" translate="yes" xml:space="preserve">
          <source>FooSocket. On return from implAccept the FooSocket will be connected to a client.</source>
          <target state="translated">FooSocket. implAccept에서 돌아 오면 FooSocket이 클라이언트에 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="0678db1b06d3165ac1ff98fac04681f3be01258e" translate="yes" xml:space="preserve">
          <source>For &quot;DOM Walker&quot; style parsers, which ignore their &lt;em&gt;parser.parse()&lt;/em&gt; parameters, this is used to specify the DOM (sub)tree being walked by the parser. The Object must implement the &lt;em&gt;org.w3c.dom.Node&lt;/em&gt; interface.</source>
          <target state="translated">&lt;em&gt;parser.parse ()&lt;/em&gt; 매개 변수 를 무시하는 &quot;DOM Walker&quot;스타일 파서의 경우 파서가 &lt;em&gt;탐색&lt;/em&gt; 하는 DOM (하위) 트리를 지정하는 데 사용됩니다. Object는 &lt;em&gt;org.w3c.dom.Node&lt;/em&gt; 인터페이스를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8b6a5fead27a8845709947c1be05f584168760eb" translate="yes" xml:space="preserve">
          <source>For &quot;text/&amp;lt;other&amp;gt;&quot; MIME types, the first time the JRE needs to determine whether the MIME type supports the charset parameter, it will check whether the parameter is explicitly listed in an arbitrarily chosen &lt;code&gt;DataFlavor&lt;/code&gt; which uses that MIME type. If so, the JRE will assume from that point on that the MIME type supports the charset parameter and will not check again. If the parameter is not explicitly listed, the JRE will assume from that point on that the MIME type does not support the charset parameter and will not check again. Because this check is performed on an arbitrarily chosen &lt;code&gt;DataFlavor&lt;/code&gt;, developers must ensure that all &lt;code&gt;DataFlavor&lt;/code&gt;s with a &quot;text/&amp;lt;other&amp;gt;&quot; MIME type specify the charset parameter if it is supported by that MIME type. Developers should never rely on the JRE to substitute the platform's default charset for a &quot;text/&amp;lt;other&amp;gt;&quot; DataFlavor. Failure to adhere to this restriction will lead to undefined behavior.</source>
          <target state="translated">&quot;text / &amp;lt;other&amp;gt;&quot;MIME 유형의 경우 JRE가 MIME 유형이 charset 매개 변수를 지원하는지 여부를 처음으로 결정해야 할 때, 매개 변수가 해당 MIME 유형을 사용 하는 임의로 선택된 &lt;code&gt;DataFlavor&lt;/code&gt; 에 명시 적으로 나열되는지 여부를 확인합니다 . 그렇다면 JRE는 그 시점부터 MIME 유형이 charset 매개 변수를 지원한다고 가정하고 다시 확인하지 않습니다. 매개 변수가 명시 적으로 나열되지 않은 경우 JRE는 해당 시점부터 MIME 유형이 charset 매개 변수를 지원하지 않으며 다시 확인하지 않는다고 가정합니다. 이 검사는 임의로 선택된 &lt;code&gt;DataFlavor&lt;/code&gt; 에서 수행되기 때문에 개발자는 모든 &lt;code&gt;DataFlavor&lt;/code&gt; 가&quot;text / &amp;lt;other&amp;gt;&quot;MIME 유형의 s는 해당 MIME 유형에서 지원하는 경우 charset 매개 변수를 지정합니다. 개발자는 &quot;text / &amp;lt;other&amp;gt;&quot;DataFlavor를 플랫폼의 기본 문자 집합으로 대체하기 위해 JRE에 의존해서는 안됩니다. 이 제한을 준수하지 않으면 정의되지 않은 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cb8dab71273657bae02c16971fcf4a6095bcfebb" translate="yes" xml:space="preserve">
          <source>For 1.1, the following font names are deprecated (the replacement name follows):</source>
          <target state="translated">1.1의 경우 다음 글꼴 이름이 더 이상 사용되지 않습니다 (대체 이름은 다음과 같습니다).</target>
        </trans-unit>
        <trans-unit id="5f2744c30d7556bf3016eca2708da42d9104784e" translate="yes" xml:space="preserve">
          <source>For &lt;b&gt;client formatted print data&lt;/b&gt;, the client determines or knows the print data format. For example the client may have a JPEG encoded image, a &lt;code&gt;URL&lt;/code&gt; for HTML code, or a disk file containing plain text in some encoding, possibly obtained from an external source, and requires a way to describe the data format to the print service.</source>
          <target state="translated">들어 &lt;b&gt;클라이언트 형식의 인쇄 데이터를&lt;/b&gt; 클라이언트가 결정 또는 인쇄 데이터 형식을 알고있다. 예를 들어 클라이언트는 JPEG로 인코딩 된 이미지, HTML 코드 용 &lt;code&gt;URL&lt;/code&gt; 또는 일부 인코딩으로 된 일반 텍스트를 포함하는 디스크 파일을 가질 수 있으며, 외부 소스에서 가져올 수 있으며 인쇄 서비스에 데이터 형식을 설명하는 방법이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="330234038655b3b67f3184a6e42e55e51f6d8052" translate="yes" xml:space="preserve">
          <source>For &lt;b&gt;client formatted print data&lt;/b&gt;, the client determines or knows the print data format. For example the client may have a JPEG encoded image, a URL for HTML code, or a disk file containing plain text in some encoding, possibly obtained from an external source, and requires a way to describe the data format to the print service.</source>
          <target state="translated">들어 &lt;b&gt;클라이언트 형식의 인쇄 데이터를&lt;/b&gt; 클라이언트가 결정 또는 인쇄 데이터 형식을 알고있다. 예를 들어, 클라이언트는 JPEG 인코딩 이미지, HTML 코드 URL 또는 외부 소스에서 얻을 수있는 일부 인코딩의 일반 텍스트를 포함하는 디스크 파일을 가질 수 있으며 데이터 형식을 인쇄 서비스에 설명하는 방법이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e9d64bb664ba10590a2e753bd93d33d98f8da3b6" translate="yes" xml:space="preserve">
          <source>For &lt;b&gt;service formatted print data&lt;/b&gt;, the Java Print Service instance determines the print data format. The doc flavor's representation class denotes an interface whose methods the &lt;code&gt;DocPrintJob&lt;/code&gt; invokes to determine the content to be printed -- such as a renderable image interface or a Java printable interface. The doc flavor's MIME type is the special value &lt;code&gt;&quot;application/x-java-jvm-local-objectref&quot;&lt;/code&gt; indicating the client will supply a reference to a Java object that implements the interface named as the representation class. This MIME type is just a placeholder; what's important is the print data representation class.</source>
          <target state="translated">들어 &lt;b&gt;서비스 형식의 인쇄 데이터&lt;/b&gt; , Java 인쇄 서비스 인스턴스가 인쇄 데이터 형식을 결정합니다. doc 플레이버의 표현 클래스 는 렌더링 가능한 이미지 인터페이스 또는 Java 인쇄 가능 인터페이스와 같이 인쇄 할 컨텐츠를 결정하기 위해 &lt;code&gt;DocPrintJob&lt;/code&gt; 이 호출 하는 메소드의 인터페이스를 나타냅니다 . doc 플레이버의 MIME 유형은 클라이언트가 표현 클래스로 명명 된 인터페이스를 구현하는 Java 객체에 대한 참조를 &lt;code&gt;&quot;application/x-java-jvm-local-objectref&quot;&lt;/code&gt; 나타내는 특수한 값 &quot;application / x-java-jvm-local-objectref&quot; 입니다. 이 MIME 유형은 단지 자리 표시 자입니다. 중요한 것은 인쇄 데이터 표현 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="a6d170425897997b503b4050b3faa9af6d3eeca9" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;BufferedImages&lt;/code&gt;, the transfer type of its &lt;code&gt;Raster&lt;/code&gt; and of the &lt;code&gt;Raster&lt;/code&gt; object's &lt;code&gt;SampleModel&lt;/code&gt; (available from the &lt;code&gt;getTransferType&lt;/code&gt; methods of these classes) must match that of the &lt;code&gt;ColorModel&lt;/code&gt;. The number of elements in an array representing a pixel for the &lt;code&gt;Raster&lt;/code&gt; and &lt;code&gt;SampleModel&lt;/code&gt; (available from the &lt;code&gt;getNumDataElements&lt;/code&gt; methods of these classes) must match that of the &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">들어 &lt;code&gt;BufferedImages&lt;/code&gt; , 그것의 전송 유형 &lt;code&gt;Raster&lt;/code&gt; 는 AND의 &lt;code&gt;Raster&lt;/code&gt; 오브젝트의 &lt;code&gt;SampleModel&lt;/code&gt; 를 합니다 (에서 제공 &lt;code&gt;getTransferType&lt;/code&gt; 이러한 클래스의 방법)의 그와 일치해야합니다 &lt;code&gt;ColorModel&lt;/code&gt; 와 . &lt;code&gt;Raster&lt;/code&gt; 및 &lt;code&gt;SampleModel&lt;/code&gt; ( 이러한 클래스 의 &lt;code&gt;getNumDataElements&lt;/code&gt; 메서드 에서 사용 가능)에 대한 픽셀을 나타내는 배열의 요소 수 는 &lt;code&gt;ColorModel&lt;/code&gt; 의 것과 일치해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="915b18f26b26ee8c0fd892d4ff7f159ef12fc646" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;CallableStatement&lt;/code&gt; objects or for statements that return multiple results, the statement is complete when all of the associated result sets have been closed, and all update counts and output parameters have been retrieved.</source>
          <target state="translated">들어 &lt;code&gt;CallableStatement&lt;/code&gt; 로는 객체 또는 복수의 결과를 돌려 문에 대해, 관련된 모든 결과 세트가 폐쇄되었을 때 문이 완료되고, 모든 갱신 카운트와 출력 매개 변수를 검색하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1b3c7c7a1f06a3ed25919250a4a526d039ca2eb" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Container&lt;/code&gt;s it returns a non-null value if the mouse is above the &lt;code&gt;Container&lt;/code&gt; itself or above any of its descendants. Use &lt;a href=&quot;container#getMousePosition(boolean)&quot;&gt;&lt;code&gt;Container.getMousePosition(boolean)&lt;/code&gt;&lt;/a&gt; if you need to exclude children.</source>
          <target state="translated">들어 &lt;code&gt;Container&lt;/code&gt; 마우스가 위에있는 경우는 null 이외의 값을 반환이야 &lt;code&gt;Container&lt;/code&gt; 자체 또는 그 자손 위. 자식을 제외해야하는 경우 &lt;a href=&quot;container#getMousePosition(boolean)&quot;&gt; &lt;code&gt;Container.getMousePosition(boolean)&lt;/code&gt; &lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6e9a0189efceb380ef7c4d80d50d597dcc0c32e5" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DataLine&lt;/code&gt;'s, if the &lt;code&gt;DataLine.Info&lt;/code&gt; object which was used to retrieve the line, specifies at least one fully qualified audio format, the last one will be used as the default format.</source>
          <target state="translated">대한 &lt;code&gt;DataLine&lt;/code&gt; 의의 경우 &lt;code&gt;DataLine.Info&lt;/code&gt; 의 라인을 검색하는 데 사용 된 객체는, 지정은 적어도 하나의 완전한 오디오 형식, 마지막 하나는 기본 형식으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="28598f569638649a3f52c769c3a476bfa89564bc" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DropMode.ON_OR_INSERT&lt;/code&gt;, this value will be an insert index, as described above, or &lt;code&gt;-1&lt;/code&gt; if the drop occurred over the path itself.</source>
          <target state="translated">들면 &lt;code&gt;DropMode.ON_OR_INSERT&lt;/code&gt; 의 상술 한 바와 같이,이 값이 삽입 인덱스되거나, &lt;code&gt;-1&lt;/code&gt; 드롭 경로 자체상에서 발생한 경우.</target>
        </trans-unit>
        <trans-unit id="0e3ecd3f62908302c23242217931dd52873e3efb" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Locale(&quot;zh&quot;, &quot;TW&quot;)&lt;/code&gt;, the candidate list will be:</source>
          <target state="translated">들어 &lt;code&gt;Locale(&quot;zh&quot;, &quot;TW&quot;)&lt;/code&gt; , 후보 목록은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="2ac60fe5573ac88de61af47d357949dfefad31f9" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;MOUSE_DOWN&lt;/code&gt; events, this field indicates the number of consecutive clicks.</source>
          <target state="translated">들어 &lt;code&gt;MOUSE_DOWN&lt;/code&gt; 의 이벤트,이 필드는 연속 한 클릭의 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e31b88ac7ecb49b2e8afe18460bbc2e01561b3b7" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;MOUSE_DOWN&lt;/code&gt; events, this field indicates the number of consecutive clicks. For other events, its value is &lt;code&gt;0&lt;/code&gt;. This field has been replaced by MouseEvent.getClickCount().</source>
          <target state="translated">들어 &lt;code&gt;MOUSE_DOWN&lt;/code&gt; 의 이벤트,이 필드는 연속 한 클릭의 수를 나타냅니다. 다른 이벤트의 경우 값은 &lt;code&gt;0&lt;/code&gt; 입니다. 이 필드는 MouseEvent.getClickCount ()로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="b1c6c72fc3676c2f9a27372532a0d36dc3dda943" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Raster&lt;/code&gt; objects, the number of bands in the source must be equal to the number of bands in the destination.</source>
          <target state="translated">들면 &lt;code&gt;Raster&lt;/code&gt; 오브젝트 소스 밴드 수는 대상의 밴드 수와 동일해야한다.</target>
        </trans-unit>
        <trans-unit id="be56eb9397c66564b620cc3c46827a32fec7d1ef" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;RowSet&lt;/code&gt; implementations such as &lt;code&gt;CachedRowSet&lt;/code&gt;, which operate in a disconnected environment, the &lt;code&gt;SyncProvider&lt;/code&gt; object being used may leverage the fetch size to poll the data source and retrieve a number of rows that do not exceed the fetch size and that may form a subset of the actual rows returned by the original query. This is an implementation variance determined by the specific &lt;code&gt;SyncProvider&lt;/code&gt; object employed by the disconnected &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">연결이 끊긴 환경에서 작동하는 &lt;code&gt;CachedRowSet&lt;/code&gt; 과 같은 &lt;code&gt;RowSet&lt;/code&gt; 구현의 경우 사용중인 &lt;code&gt;SyncProvider&lt;/code&gt; 객체는 가져 오기 크기를 활용하여 데이터 소스를 폴링하고 가져 오기 크기를 초과하지 않고 하위 집합을 형성 할 수있는 여러 행을 검색 할 수 있습니다. 원래 쿼리에서 반환 된 실제 행입니다. 이것은 연결이 끊어진 &lt;code&gt;RowSet&lt;/code&gt; 개체 에서 사용 하는 특정 &lt;code&gt;SyncProvider&lt;/code&gt; 개체에 의해 결정되는 구현 차이 입니다.</target>
        </trans-unit>
        <trans-unit id="51aa56243ca89f0469d553b7cf006c177225d4de" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;RowSet&lt;/code&gt; implementations such as the &lt;code&gt;CachedRowSet&lt;/code&gt; that operate in a disconnected environment, the &lt;code&gt;SyncProvider&lt;/code&gt; object being used offers complementary locking and data integrity options. The options described below are pertinent only to connected &lt;code&gt;RowSet&lt;/code&gt; objects (&lt;code&gt;JdbcRowSet&lt;/code&gt; objects).</source>
          <target state="translated">연결이 끊긴 환경에서 작동 하는 &lt;code&gt;CachedRowSet&lt;/code&gt; 와 같은 &lt;code&gt;RowSet&lt;/code&gt; 구현의 경우 사용중인 &lt;code&gt;SyncProvider&lt;/code&gt; 개체는 보완 잠금 및 데이터 무결성 옵션을 제공합니다. 아래에 설명 된 옵션은 연결된 &lt;code&gt;RowSet&lt;/code&gt; 객체 ( &lt;code&gt;JdbcRowSet&lt;/code&gt; 객체) 에만 관련됩니다 .</target>
        </trans-unit>
        <trans-unit id="26978a2656b24192291060a84625f6a2943a1afc" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;RowSet&lt;/code&gt; implementations such as the &lt;code&gt;CachedRowSet&lt;/code&gt; that operate in a disconnected environment, the &lt;code&gt;SyncProvider&lt;/code&gt; object offers complementary locking and data integrity options. The options described below are pertinent only to connected &lt;code&gt;RowSet&lt;/code&gt; objects (&lt;code&gt;JdbcRowSet&lt;/code&gt; objects).</source>
          <target state="translated">대한 &lt;code&gt;RowSet&lt;/code&gt; 등으로 구현 &lt;code&gt;CachedRowSet&lt;/code&gt; 연결이 끊긴 환경에서 작동의 &lt;code&gt;SyncProvider&lt;/code&gt; 객체 이벤트 보완 잠금 및 데이터 무결성 옵션을 제공합니다. 아래에 설명 된 옵션은 연결된 &lt;code&gt;RowSet&lt;/code&gt; 객체 ( &lt;code&gt;JdbcRowSet&lt;/code&gt; 객체) 에만 관련됩니다 .</target>
        </trans-unit>
        <trans-unit id="f7274322aa239a9feb73bcc543b20424608df817" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the new state of the window.</source>
          <target state="translated">들어 &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; 이벤트의 경우, 윈도우의 새로운 상태가 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0f8cb0c350a4b682405caf4641d217f32ce5e36a" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the new state of the window. The state is represented as a bitwise mask.</source>
          <target state="translated">들어 &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; 이벤트의 경우, 윈도우의 새로운 상태가 반환합니다. 상태는 비트 마스크로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="d590f99f52cb6c6a2781e8bc61bf20cac84795d0" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the previous state of the window.</source>
          <target state="translated">들어 &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; 이벤트의 경우, 이전의 윈도우 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dcfb0529351c9aae11c9ed2812d9fa3bb3932f22" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the previous state of the window. The state is represented as a bitwise mask.</source>
          <target state="translated">들어 &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; 이벤트의 경우, 이전의 윈도우 상태를 반환합니다. 상태는 비트 마스크로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a260b5b1e1e63f842b8db0f461e7c2eaca7cfec7" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;defaultValue&lt;/code&gt;, &lt;code&gt;minValue&lt;/code&gt;, and &lt;code&gt;
      maxValue&lt;/code&gt;, the associated value must either be of the Java type corresponding to &lt;code&gt;openType&lt;/code&gt;, or be a string that can be converted into that type. The conversion uses the static method &lt;code&gt;valueOf(String)&lt;/code&gt; if it finds one; otherwise a constructor with a single &lt;code&gt;String&lt;/code&gt; parameter if it finds one; otherwise it fails.</source>
          <target state="translated">들면 &lt;code&gt;defaultValue&lt;/code&gt; , &lt;code&gt;minValue&lt;/code&gt; 및 &lt;code&gt; maxValue&lt;/code&gt; 를 , 연관된 값 중 하나에 대응하는 자바 유형이어야 &lt;code&gt;openType&lt;/code&gt; 에 또는 그 유형으로 변환 될 수있는 문자열 일. 변환은 하나를 찾으면 정적 메소드 &lt;code&gt;valueOf(String)&lt;/code&gt; 사용합니다. 그렇지 않으면 단일 &lt;code&gt;String&lt;/code&gt; 매개 변수가 있는 생성자 가 하나를 찾으면; 그렇지 않으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="4530bda67f131f5f34a16a617bdaea1d3f4f7461" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;defaultValue&lt;/code&gt;, &lt;code&gt;minValue&lt;/code&gt;, and &lt;code&gt;maxValue&lt;/code&gt;, the associated value must either be of the Java type corresponding to &lt;code&gt;openType&lt;/code&gt;, or be a string that can be converted into that type. The conversion uses the static method &lt;code&gt;valueOf(String)&lt;/code&gt; if it finds one; otherwise a constructor with a single &lt;code&gt;String&lt;/code&gt; parameter if it finds one; otherwise it fails.</source>
          <target state="translated">들면 &lt;code&gt;defaultValue&lt;/code&gt; , &lt;code&gt;minValue&lt;/code&gt; 및 &lt;code&gt;maxValue&lt;/code&gt; 를 , 연관된 값 중 하나에 대응하는 자바 유형이어야 &lt;code&gt;openType&lt;/code&gt; 에 또는 그 유형으로 변환 될 수있는 문자열 일. 변환은 정적 메소드 &lt;code&gt;valueOf(String)&lt;/code&gt; 찾으면 사용합니다. 그렇지 않은 경우, 단일 &lt;code&gt;String&lt;/code&gt; 매개 변수가 있는 생성자가 있으면이를 찾습니다. 그렇지 않으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="aa25baeb85527242f11d5e87c3523c6ec25ccebb" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;fill&lt;/code&gt; operations, including &lt;code&gt;fillRect&lt;/code&gt;, &lt;code&gt;fillRoundRect&lt;/code&gt;, &lt;code&gt;fillOval&lt;/code&gt;, &lt;code&gt;fillArc&lt;/code&gt;, &lt;code&gt;fillPolygon&lt;/code&gt;, and &lt;code&gt;clearRect&lt;/code&gt;, &lt;a href=&quot;#fill(java.awt.Shape)&quot;&gt;&lt;code&gt;fill&lt;/code&gt;&lt;/a&gt; can now be called with the desired &lt;code&gt;Shape&lt;/code&gt;. For example, when filling a rectangle:</source>
          <target state="translated">들어 &lt;code&gt;fill&lt;/code&gt; 를 포함한 운영, &lt;code&gt;fillRect&lt;/code&gt; 할 , &lt;code&gt;fillRoundRect&lt;/code&gt; , &lt;code&gt;fillOval&lt;/code&gt; , &lt;code&gt;fillArc&lt;/code&gt; , &lt;code&gt;fillPolygon&lt;/code&gt; 과 &lt;code&gt;clearRect&lt;/code&gt; , &lt;a href=&quot;#fill(java.awt.Shape)&quot;&gt; &lt;code&gt;fill&lt;/code&gt; &lt;/a&gt; 이제 원하는 호출 할 수있는 &lt;code&gt;Shape&lt;/code&gt; . 예를 들어 직사각형을 채울 때 :</target>
        </trans-unit>
        <trans-unit id="7735067132e49435c502ac1c91d49e144e93e07f" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;host&lt;/code&gt; specified in</source>
          <target state="translated">에 지정된 &lt;code&gt;host&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9de1e4d9b868482565745441ba41e44b255f55af" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;host&lt;/code&gt; specified in literal IPv6 address, either the form defined in RFC 2732 or the literal IPv6 address format defined in RFC 2373 is accepted. IPv6 scoped addresses are also supported. See &lt;a href=&quot;inet6address#scoped&quot;&gt;here&lt;/a&gt; for a description of IPv6 scoped addresses.</source>
          <target state="translated">를 들어 &lt;code&gt;host&lt;/code&gt; 리터럴 IPv6 주소에 지정된, 하나 RFC 2732, RFC 2373에 정의 된 리터럴 IPv6 주소 형식에 정의 된 형태로 허용됩니다. IPv6 범위 주소도 지원됩니다. IPv6 범위 주소에 대한 설명은 &lt;a href=&quot;inet6address#scoped&quot;&gt;여기&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4e38a1a19e5894ccb2cf644282825ddeb0200dfd" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;legalValues&lt;/code&gt;, the associated value must be either an array or a &lt;code&gt;Set&lt;/code&gt;, and the elements of the array or set must be convertible as described for &lt;code&gt;defaultValue&lt;/code&gt; etc.</source>
          <target state="translated">들면 &lt;code&gt;legalValues&lt;/code&gt; 를 연관된 값은 배열 또는이어야 &lt;code&gt;Set&lt;/code&gt; 한 바와 같이, 어레이 또는 변환 가능해야 세트의 요소 &lt;code&gt;defaultValue&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="f9f2a700cc13dc4e63747523ce097168cd8536d8" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;line-optimal&lt;/em&gt; charsets the stream source's spliterator has good splitting properties, assuming the file contains a regular sequence of lines. Good splitting properties can result in good parallel stream performance. The spliterator for a &lt;em&gt;line-optimal&lt;/em&gt; charset takes advantage of the charset properties (a line feed or a carriage return being efficient identifiable) such that when splitting it can approximately divide the number of covered lines in half.</source>
          <target state="translated">들어 &lt;em&gt;줄 최적의&lt;/em&gt; 문자셋 스트림 소스의 spliterator 파일을 가정하는 것은 라인의 순차적를 포함, 좋은 분할 속성이 있습니다. 좋은 분할 속성은 좋은 병렬 스트림 성능을 가져올 수 있습니다. &lt;em&gt;줄에 최적화 된&lt;/em&gt; 문자 집합의 분할자는 분할 할 때 포함 된 줄의 수를 대략 절반으로 나눌 수 있도록 문자 집합 속성 (줄 바꿈 또는 캐리지 리턴이 효율적으로 식별 가능)을 활용합니다.</target>
        </trans-unit>
        <trans-unit id="88ef468247477df828d66d215450b2eee8434eb7" translate="yes" xml:space="preserve">
          <source>For BufferedImages, if the ColorSpace of the source BufferedImage does not match the requirements of the first profile in the array, the first conversion is to an appropriate ColorSpace. If the requirements of the last profile in the array are not met by the ColorSpace of the destination BufferedImage, the last conversion is to the destination's ColorSpace.</source>
          <target state="translated">BufferedImages의 경우 소스 BufferedImage의 ColorSpace가 배열의 첫 번째 프로필 요구 사항과 일치하지 않으면 첫 번째 변환은 적절한 ColorSpace로 이루어집니다. 배열의 마지막 프로필 요구 사항이 대상 BufferedImage의 ColorSpace에서 충족되지 않으면 마지막 변환은 대상의 ColorSpace로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="0297a3a15e6a2cb9e7e1e8e53b704530f78c54db" translate="yes" xml:space="preserve">
          <source>For BufferedImages, rescaling operates on color and alpha components. The number of sets of scaling constants may be one, in which case the same constants are applied to all color (but not alpha) components. Otherwise, the number of sets of scaling constants may equal the number of Source color components, in which case no rescaling of the alpha component (if present) is performed. If neither of these cases apply, the number of sets of scaling constants must equal the number of Source color components plus alpha components, in which case all color and alpha components are rescaled.</source>
          <target state="translated">BufferedImages의 경우 크기 조정은 색상 및 알파 구성 요소에서 작동합니다. 스케일링 상수 세트의 수는 하나 일 수 있으며,이 경우 동일한 상수가 모든 색상 (알파 아님) 구성 요소에 적용됩니다. 그렇지 않으면 스케일링 상수 세트의 수가 소스 색상 컴포넌트의 수와 같을 수 있으며,이 경우 알파 컴포넌트 (있는 경우)의 스케일링이 수행되지 않습니다. 이러한 경우 중 어느 것도 적용되지 않는 경우 크기 조정 상수 세트의 수는 소스 색상 구성 요소와 알파 구성 요소의 수와 같아야합니다.이 경우 모든 색상 및 알파 구성 요소의 크기가 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="12e29238a774ac40b3348e908ea760e7c021ea28" translate="yes" xml:space="preserve">
          <source>For BufferedImages, the lookup operates on color and alpha components. The number of lookup arrays may be one, in which case the same array is applied to all color (but not alpha) components. Otherwise, the number of lookup arrays may equal the number of Source color components, in which case no lookup of the alpha component (if present) is performed. If neither of these cases apply, the number of lookup arrays must equal the number of Source color components plus alpha components, in which case lookup is performed for all color and alpha components. This allows non-uniform rescaling of multi-band BufferedImages.</source>
          <target state="translated">BufferedImages의 경우 조회는 색상 및 알파 구성 요소에서 작동합니다. 조회 배열의 수는 1 개일 수 있으며,이 경우 동일한 배열이 모든 색상 (알파 아님) 구성 요소에 적용됩니다. 그렇지 않으면 조회 배열의 수가 소스 색상 구성 요소의 수와 같을 수 있습니다.이 경우 알파 구성 요소 (있는 경우) 조회가 수행되지 않습니다. 이러한 경우 중 어느 것도 적용되지 않는 경우 조회 배열의 수는 소스 색상 구성 요소와 알파 구성 요소의 수와 같아야합니다.이 경우 모든 색상 및 알파 구성 요소에 대해 조회가 수행됩니다. 이를 통해 다중 대역 BufferedImages의 불균일 한 크기 조정이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="b1aa9b4cd03568424ee163ee4cf505a41549f961" translate="yes" xml:space="preserve">
          <source>For ByteBuffers backed by an accessible byte array.</source>
          <target state="translated">액세스 가능한 바이트 배열로 지원되는 ByteBuffer의 경우.</target>
        </trans-unit>
        <trans-unit id="5e1ca4acc505662eb0ed9a40f901edd46086ef87" translate="yes" xml:space="preserve">
          <source>For ByteBuffers not backed by an accessible byte array.</source>
          <target state="translated">액세스 가능한 바이트 배열로 지원되지 않는 ByteBuffer의 경우.</target>
        </trans-unit>
        <trans-unit id="3c451692bdf99cd8b31e04742a1111ee3757beb5" translate="yes" xml:space="preserve">
          <source>For DML statements, such as Insert, Update or Delete, and DDL statements, the statement is complete as soon as it has finished executing.</source>
          <target state="translated">Insert, Update 또는 Delete와 같은 DML 문과 DDL 문의 경우 실행이 완료되는 즉시 문이 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="4c2df44d14a8ceaf346d4ff6b01e4eddb069d567" translate="yes" xml:space="preserve">
          <source>For DTLS protocols, the first 16 bits of the sequence number is a counter value (epoch) that is incremented on every cipher state change. The remaining 48 bits on the right side of the sequence number represents the sequence of the record, which is maintained separately for each epoch.</source>
          <target state="translated">DTLS 프로토콜의 경우 시퀀스 번호의 처음 16 비트는 암호 상태가 변경 될 때마다 증가하는 카운터 값 (에포크)입니다. 시퀀스 번호의 오른쪽에있는 나머지 48 비트는 레코드의 시퀀스를 나타내며 각 Epoch에 대해 별도로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="aae39ae71503d6b0412eb10be75f99287813f3f4" translate="yes" xml:space="preserve">
          <source>For Gaps, the general strategy is that if the local date-time falls in the middle of a Gap, then the resulting zoned date-time will have a local date-time shifted forwards by the length of the Gap, resulting in a date-time in the later offset, typically &quot;summer&quot; time.</source>
          <target state="translated">간격의 경우 일반적인 전략은 현지 날짜-시간이 갭의 중간에 빠지면 결과로 생성 된 지역 날짜-시간은 갭 길이만큼 앞으로 로컬 날짜-시간이 이동하여 날짜- 이후 오프셋의 시간, 일반적으로 &quot;여름&quot;시간입니다.</target>
        </trans-unit>
        <trans-unit id="47602a4734e43c194873be68402cb62c3ccb993d" translate="yes" xml:space="preserve">
          <source>For IPv4 address format, please refer to &lt;a href=&quot;inet4address#format&quot;&gt;Inet4Address#format&lt;/a&gt;; For IPv6 address format, please refer to &lt;a href=&quot;inet6address#format&quot;&gt;Inet6Address#format&lt;/a&gt;.</source>
          <target state="translated">IPv4 주소 형식에 대해서는 &lt;a href=&quot;inet4address#format&quot;&gt;Inet4Address # format을&lt;/a&gt; 참조하십시오 . IPv6 주소 형식은 &lt;a href=&quot;inet6address#format&quot;&gt;Inet6Address # format을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="32d46c6ea44bdc9156a63d0abe51018483f88d1c" translate="yes" xml:space="preserve">
          <source>For Internet Protocol v4 the value consists of an &lt;code&gt;integer&lt;/code&gt;, the least significant 8 bits of which represent the value of the TOS octet in IP packets sent by the socket. RFC 1349 defines the TOS values as follows:</source>
          <target state="translated">인터넷 프로토콜 v4의 경우 값은 &lt;code&gt;integer&lt;/code&gt; 로 구성되며 , 최소 8 비트는 소켓에서 전송 한 IP 패킷의 TOS 옥텟 값을 나타냅니다. RFC 1349는 다음과 같이 TOS 값을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="3f2eae4e6dd20e42323be6ff8ab3ddd498ced00a" translate="yes" xml:space="preserve">
          <source>For Internet Protocol v6 &lt;code&gt;tc&lt;/code&gt; is the value that would be placed into the sin6_flowinfo field of the IP header.</source>
          <target state="translated">인터넷 프로토콜 v6의 경우 &lt;code&gt;tc&lt;/code&gt; 는 IP 헤더의 sin6_flowinfo 필드에 배치되는 값입니다.</target>
        </trans-unit>
        <trans-unit id="fdd92d08da24ad9dcd084f2963cc368886d94250" translate="yes" xml:space="preserve">
          <source>For Java 2 platform v1.3, a &lt;code&gt;KeyStroke&lt;/code&gt; can be associated with more than one condition. For example, 'a' could be bound for the two conditions &lt;code&gt;WHEN_FOCUSED&lt;/code&gt; and &lt;code&gt;WHEN_IN_FOCUSED_WINDOW&lt;/code&gt; condition.</source>
          <target state="translated">Java 2 플랫폼 v1.3의 경우 &lt;code&gt;KeyStroke&lt;/code&gt; 는 둘 이상의 조건과 연관 될 수 있습니다. 예를 들어 'a'는 &lt;code&gt;WHEN_FOCUSED&lt;/code&gt; 및 &lt;code&gt;WHEN_IN_FOCUSED_WINDOW&lt;/code&gt; 조건 두 가지 조건에 바인딩 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fac8dbfb74c279aab3f0b040bbf12a4e3c5e15cd" translate="yes" xml:space="preserve">
          <source>For MBeans referenced in such relation, nothing will be done,</source>
          <target state="translated">이러한 관계에서 참조 된 MBean의 경우 아무 것도 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0df500d83e75a486cc7488acc15cde4c6a58a19f" translate="yes" xml:space="preserve">
          <source>For Microsoft Windows platforms, the prefix of a pathname that contains a drive specifier consists of the drive letter followed by &lt;code&gt;&quot;:&quot;&lt;/code&gt; and possibly followed by &lt;code&gt;&quot;\\&quot;&lt;/code&gt; if the pathname is absolute. The prefix of a UNC pathname is &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt;; the hostname and the share name are the first two names in the name sequence. A relative pathname that does not specify a drive has no prefix.</source>
          <target state="translated">Microsoft Windows 플랫폼의 경우, 드라이브 지정자를 포함하는 경로 이름의 접 두부는 드라이브 이름 과 &lt;code&gt;&quot;:&quot;&lt;/code&gt; , 경로 이름이 절대 경로 인 경우 &lt;code&gt;&quot;\\&quot;&lt;/code&gt; 로 구성 됩니다. UNC 경로명의 접두사는 &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt; 입니다 . 호스트 이름과 공유 이름은 이름 순서에서 처음 두 이름입니다. 드라이브를 지정하지 않은 상대 경로 이름에는 접두사가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e28e2ad3a676ea5fec786b5d4f16481efefbbb2d" translate="yes" xml:space="preserve">
          <source>For Overlaps, the general strategy is that if the local date-time falls in the middle of an Overlap, then the previous offset will be retained. If there is no previous offset, or the previous offset is invalid, then the earlier offset is used, typically &quot;summer&quot; time.. Two additional methods, &lt;a href=&quot;#withEarlierOffsetAtOverlap()&quot;&gt;&lt;code&gt;withEarlierOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#withLaterOffsetAtOverlap()&quot;&gt;&lt;code&gt;withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt;, help manage the case of an overlap.</source>
          <target state="translated">Overlaps의 경우 일반적인 전략은 로컬 날짜-시간이 Overlap의 중간에 있으면 이전 오프셋이 유지되는 것입니다. 이전 오프셋이 없거나 이전 오프셋이 유효하지 않은 경우 이전 오프셋 (일반적으로 &quot;여름&quot;시간)이 사용됩니다. 두 가지 추가 방법,&lt;a href=&quot;#withEarlierOffsetAtOverlap()&quot;&gt; &lt;code&gt;withEarlierOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#withLaterOffsetAtOverlap()&quot;&gt; &lt;code&gt;withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt;는 겹침 사례를 관리하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="a727367a481c4d2b3f8a5feb6fd0dd5c0602e315" translate="yes" xml:space="preserve">
          <source>For Overlaps, the general strategy is that if the local date-time falls in the middle of an Overlap, then the previous offset will be retained. If there is no previous offset, or the previous offset is invalid, then the earlier offset is used, typically &quot;summer&quot; time.. Two additional methods, &lt;a href=&quot;zoneddatetime#withEarlierOffsetAtOverlap--&quot;&gt;&lt;code&gt;withEarlierOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt;&lt;code&gt;withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt;, help manage the case of an overlap.</source>
          <target state="translated">오버랩의 경우 일반적인 전략은 로컬 날짜-시간이 오버랩의 중간에 빠지면 이전 오프셋이 유지되는 것입니다. 이전 오프셋이 없거나 이전 오프셋이 유효하지 않은 경우, 이전 오프셋이 일반적으로 &quot;서머 타임&quot;시간으로 사용됩니다. &lt;a href=&quot;zoneddatetime#withEarlierOffsetAtOverlap--&quot;&gt; &lt;code&gt;withEarlierOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt; &lt;code&gt;withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; 을 사용하면 겹치는 경우를 관리하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="4784f0d3a9af62eb3ebfc6f737d12c7774e84b6a" translate="yes" xml:space="preserve">
          <source>For RELAX NG, this method must throw &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;schemas.length!=1&lt;/code&gt;.</source>
          <target state="translated">RELAX NG의 경우이 메서드는 &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;경우 &lt;code&gt;schemas.length!=1&lt;/code&gt; UnsupportedOperationException을.</target>
        </trans-unit>
        <trans-unit id="c7fab9d7fe9b663fc7a55e0d1c0fc72d4cab1cdb" translate="yes" xml:space="preserve">
          <source>For Rasters, rescaling operates on bands. The number of sets of scaling constants may be one, in which case the same constants are applied to all bands, or it must equal the number of Source Raster bands.</source>
          <target state="translated">래스터의 경우 크기 조정은 밴드에서 작동합니다. 스케일링 상수 세트의 수는 하나 일 수 있으며,이 경우 동일한 상수가 모든 밴드에 적용되거나 소스 래스터 밴드의 수와 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="92389cc1157ad3878bb7c38e3b8a1bb1c8d06c44" translate="yes" xml:space="preserve">
          <source>For Rasters, the lookup operates on bands. The number of lookup arrays may be one, in which case the same array is applied to all bands, or it must equal the number of Source Raster bands.</source>
          <target state="translated">래스터의 경우 조회는 밴드에서 작동합니다. 조회 배열의 수는 하나 일 수 있으며,이 경우 동일한 배열이 모든 밴드에 적용되거나 소스 래스터 밴드의 수와 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="37a0362b48bdd5ec7bc1b7aa645ebcafbae5eb26" translate="yes" xml:space="preserve">
          <source>For Rasters, the number of bands in the source Raster must match the requirements of the first profile in the array, and the number of bands in the destination Raster must match the requirements of the last profile in the array. The array must have at least two elements or calling the filter method for Rasters will throw an IllegalArgumentException.</source>
          <target state="translated">래스터의 경우 소스 래스터의 밴드 수가 배열의 첫 번째 프로필 요구 사항과 일치해야하며 대상 래스터의 밴드 수가 배열의 마지막 프로필 요구 사항과 일치해야합니다. 배열에는 최소한 두 개의 요소가 있어야합니다. 그렇지 않으면 Rasters에 대한 필터 메서드를 호출하면 IllegalArgumentException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9855cbf9d64cd6c04cc435b5d6fc1d9d25c6b203" translate="yes" xml:space="preserve">
          <source>For SSL/TLS connections, the underlying SSL/TLS provider may specify a default value for a certain server name type. In client mode, it is recommended that, by default, providers should include the server name indication whenever the server can be located by a supported server name type.</source>
          <target state="translated">SSL / TLS 연결의 경우 기본 SSL / TLS 제공자는 특정 서버 이름 유형의 기본값을 지정할 수 있습니다. 클라이언트 모드에서는 기본적으로 서버가 지원되는 서버 이름 유형으로 서버를 찾을 수있을 때마다 공급자가 서버 이름 표시를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="c55e9f96a30383e78fbd420c04bcb6b5cbc4878f" translate="yes" xml:space="preserve">
          <source>For SSL/TLS/DTLS connections, the underlying SSL/TLS/DTLS provider may specify a default value for a certain server name type. In client mode, it is recommended that, by default, providers should include the server name indication whenever the server can be located by a supported server name type.</source>
          <target state="translated">SSL / TLS / DTLS 연결의 경우 기본 SSL / TLS / DTLS 공급자가 특정 서버 이름 유형에 대한 기본값을 지정할 수 있습니다. 클라이언트 모드에서 기본적으로 공급자는 지원되는 서버 이름 유형으로 서버를 찾을 수있을 때마다 서버 이름 표시를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="a76b6379a9426be3b8a70c33a688fc19d56e282f" translate="yes" xml:space="preserve">
          <source>For SSL/TLS/DTLS connections, the underlying provider should calculate and specify the implicit value of the maximum expected network packet size if it is not configured explicitly. For any connection populated object, this method should never return &lt;code&gt;0&lt;/code&gt; so that applications can retrieve the actual implicit size of the underlying implementation.</source>
          <target state="translated">SSL / TLS / DTLS 연결의 경우 기본 공급자는 명시 적으로 구성되지 않은 경우 예상되는 최대 네트워크 패킷 크기의 암시 적 값을 계산하고 지정해야합니다. 연결이 채워진 개체의 경우이 메서드는 응용 프로그램이 기본 구현의 실제 암시 적 크기를 검색 할 수 있도록 &lt;code&gt;0&lt;/code&gt; 을 반환해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="4215888e3982e3de15d57f415656bd905f924bed" translate="yes" xml:space="preserve">
          <source>For Select statements, the statement is complete when the associated result set is closed.</source>
          <target state="translated">Select 문의 경우 연결된 결과 집합이 닫히면 문이 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="20553bda21b7c5c3be557a2fc22c40bfb8714881" translate="yes" xml:space="preserve">
          <source>For UDP sockets it may be necessary to bind more than one socket to the same socket address. This is typically for the purpose of receiving multicast packets (See &lt;a href=&quot;multicastsocket&quot;&gt;&lt;code&gt;MulticastSocket&lt;/code&gt;&lt;/a&gt;). The &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option allows multiple sockets to be bound to the same socket address if the &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option is enabled prior to binding the socket using &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind(SocketAddress)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">UDP 소켓의 경우 하나 이상의 소켓을 동일한 소켓 주소에 바인딩해야 할 수 있습니다. 이는 일반적으로 멀티 캐스트 패킷을 수신하기위한 것입니다 ( &lt;a href=&quot;multicastsocket&quot;&gt; &lt;code&gt;MulticastSocket&lt;/code&gt; &lt;/a&gt; 참조 ). &lt;code&gt;SO_REUSEADDR&lt;/code&gt; 의 소켓 옵션이 경우 복수의 소켓을 동일한 소켓 주소에 바인드 할 수 있습니다 &lt;code&gt;SO_REUSEADDR&lt;/code&gt; 의 소켓 옵션을 사용하여 소켓 바인딩 이전에 활성화 된 &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind(SocketAddress)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ddc210dbbba2ad354a2722f241cf948fa56bd99c" translate="yes" xml:space="preserve">
          <source>For UDP sockets it may be necessary to bind more than one socket to the same socket address. This is typically for the purpose of receiving multicast packets (See &lt;a href=&quot;multicastsocket&quot;&gt;&lt;code&gt;MulticastSocket&lt;/code&gt;&lt;/a&gt;). The &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option allows multiple sockets to be bound to the same socket address if the &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option is enabled prior to binding the socket using &lt;a href=&quot;datagramsocket#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind(SocketAddress)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">UDP 소켓의 경우 둘 이상의 소켓을 동일한 소켓 주소에 바인딩해야 할 수 있습니다. 이것은 일반적으로 멀티 캐스트 패킷을 수신하기위한 것입니다 ( &lt;a href=&quot;multicastsocket&quot;&gt; &lt;code&gt;MulticastSocket&lt;/code&gt; &lt;/a&gt; 참조 ). &lt;code&gt;SO_REUSEADDR&lt;/code&gt; 의 소켓 옵션은 경우 복수의 소켓을 동일한 소켓 주소에 바인드 할 수 있습니다 &lt;code&gt;SO_REUSEADDR&lt;/code&gt; 의 소켓 옵션을 사용하여 소켓 바인딩 이전에 활성화 된 &lt;a href=&quot;datagramsocket#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind(SocketAddress)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd8c93074e3853223ea38f1e9e8a1bad3535bc99" translate="yes" xml:space="preserve">
          <source>For UNIX platforms, the prefix of an absolute pathname is always &lt;code&gt;&quot;/&quot;&lt;/code&gt;. Relative pathnames have no prefix. The abstract pathname denoting the root directory has the prefix &lt;code&gt;&quot;/&quot;&lt;/code&gt; and an empty name sequence.</source>
          <target state="translated">UNIX 플랫폼의 경우 절대 경로 이름의 접 두부는 항상 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 입니다. 상대 경로 이름에는 접두사가 없습니다. 루트 디렉토리를 나타내는 추상 경로 이름에는 접두사 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 와 빈 이름 시퀀스가 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="134f568b646f7b9198a3e9b333aae84cf2eb28df" translate="yes" xml:space="preserve">
          <source>For XML 1.0 compliance an XML processor must pass the identifiers of declared unparsed entities, notation declarations and their associated identifiers to the application. This information is provided through the property API on this interface. The following two properties allow access to this information: javax.xml.stream.notations and javax.xml.stream.entities. When the current event is a DTD the following call will return a list of Notations &lt;code&gt;List l = (List) getProperty(&quot;javax.xml.stream.notations&quot;);&lt;/code&gt; The following call will return a list of entity declarations: &lt;code&gt;List l = (List) getProperty(&quot;javax.xml.stream.entities&quot;);&lt;/code&gt; These properties can only be accessed during a DTD event and are defined to return null if the information is not available.</source>
          <target state="translated">XML 1.0 준수를 위해 XML 프로세서는 선언 된 구문 분석되지 않은 엔터티의 식별자, 표기법 선언 및 관련 식별자를 응용 프로그램에 전달해야합니다. 이 정보는이 인터페이스의 속성 API를 통해 제공됩니다. 다음 두 속성은이 정보에 대한 액세스를 허용합니다 : javax.xml.stream.notations 및 javax.xml.stream.entities. 현재 이벤트가 DTD 인 경우 다음 호출은 Notations &lt;code&gt;List l = (List) getProperty(&quot;javax.xml.stream.notations&quot;);&lt;/code&gt; 다음 호출은 엔티티 선언 목록을 리턴합니다. &lt;code&gt;List l = (List) getProperty(&quot;javax.xml.stream.entities&quot;);&lt;/code&gt; 이러한 속성은 DTD 이벤트 중에 만 액세스 할 수 있으며 정보를 사용할 수없는 경우 null을 반환하도록 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="81ee812082aae7f26b9641e21fc97a0bd43f8e91" translate="yes" xml:space="preserve">
          <source>For XML Schema, this method creates a &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object that performs validation by using location hints specified in documents.</source>
          <target state="translated">XML Schema의 경우이 메서드 는 문서에 지정된 위치 힌트를 사용하여 유효성 검사를 수행 하는 &lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt; 개체를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ac8b5bf5a407d708f91b5f710669495108d4ab3a" translate="yes" xml:space="preserve">
          <source>For XML processing errors, a SAX driver must use this interface in preference to throwing an exception: it is up to the application to decide whether to throw an exception for different types of errors and warnings. Note, however, that there is no requirement that the parser continue to report additional errors after a call to &lt;a href=&quot;#fatalError(org.xml.sax.SAXParseException)&quot;&gt;&lt;code&gt;fatalError&lt;/code&gt;&lt;/a&gt;. In other words, a SAX driver class may throw an exception after reporting any fatalError. Also parsers may throw appropriate exceptions for non-XML errors. For example, &lt;a href=&quot;xmlreader#parse(org.xml.sax.InputSource)&quot;&gt;&lt;code&gt;XMLReader.parse()&lt;/code&gt;&lt;/a&gt; would throw an IOException for errors accessing entities or the document.</source>
          <target state="translated">XML 처리 오류의 경우 SAX 드라이버는 예외 발생보다 우선적으로이 인터페이스를 사용해야합니다. 다양한 유형의 오류 및 경고에 대해 예외를 발생 시킬지 여부를 결정하는 것은 애플리케이션의 몫입니다. 그러나 파서가 &lt;a href=&quot;#fatalError(org.xml.sax.SAXParseException)&quot;&gt; &lt;code&gt;fatalError&lt;/code&gt; 를&lt;/a&gt; 호출 한 후 계속해서 추가 오류를보고 할 필요는 없습니다 . 즉, SAX 드라이버 클래스는 fatalError를보고 한 후 예외를 throw 할 수 있습니다. 또한 파서는 비 XML 오류에 대해 적절한 예외를 throw 할 수 있습니다. 예를 들어, &lt;a href=&quot;xmlreader#parse(org.xml.sax.InputSource)&quot;&gt; &lt;code&gt;XMLReader.parse()&lt;/code&gt; &lt;/a&gt; 는 엔티티 또는 문서에 액세스하는 동안 오류가 발생하면 IOException을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="97576d9728eb03d27acde72957e208d72ca1b49e" translate="yes" xml:space="preserve">
          <source>For XSLT, &lt;a href=&quot;http://www.w3.org/TR/xslt#attribute-value-templates&quot;&gt;Attribute Value Templates&lt;/a&gt; attribute values will be returned unexpanded (since there is no context at this point). The namespace prefixes inside Attribute Value Templates will be unexpanded, so that they remain valid XPath values.</source>
          <target state="translated">XSLT의 경우 &lt;a href=&quot;http://www.w3.org/TR/xslt#attribute-value-templates&quot;&gt;속성 값 템플릿&lt;/a&gt; 속성 값은 확장되지 않은 상태로 반환됩니다 (이 시점에는 컨텍스트가 없기 때문에). 속성 값 템플릿 내의 네임 스페이스 접두사는 확장되지 않으므로 유효한 XPath 값으로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="6dad4526f56df9fff00c924610d84c66d81a2fd8" translate="yes" xml:space="preserve">
          <source>For a Kerberized server the action is &quot;accept&quot;. For example, the permission necessary to access and use the secret key of the Kerberized &quot;host&quot; service (telnet and the likes) would be constructed as follows:</source>
          <target state="translated">Kerberized 서버의 경우 조치는 &quot;accept&quot;입니다. 예를 들어, Kerberized &quot;host&quot;서비스 (telnet 등)의 비밀 키에 액세스하고 사용하는 데 필요한 권한은 다음과 같이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="73f45b640d4ed9d91b00b255631883b34668492f" translate="yes" xml:space="preserve">
          <source>For a channel that is ready for at least one such operation, the ready-operation set of the channel's key is set to identify exactly the operations for which the channel is ready and the</source>
          <target state="translated">이러한 작업이 하나 이상 준비된 채널의 경우 채널 키의 준비 작업 집합은 채널이 준비된 작업과 해당 작업을 정확하게 식별하도록 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="9f6c2cc7d79d63c1f14bdd18d5f81576c63d58f2" translate="yes" xml:space="preserve">
          <source>For a class to be retransformed, &lt;a href=&quot;#isRetransformClassesSupported()&quot;&gt;&lt;code&gt;isRetransformClassesSupported()&lt;/code&gt;&lt;/a&gt; must also be true. But the value of &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; does not influence the value returned by this function. For a class to be redefined, &lt;a href=&quot;#isRedefineClassesSupported()&quot;&gt;&lt;code&gt;isRedefineClassesSupported()&lt;/code&gt;&lt;/a&gt; must also be true. But the value of &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; does not influence the value returned by this function.</source>
          <target state="translated">클래스를 다시 변환 하려면 &lt;a href=&quot;#isRetransformClassesSupported()&quot;&gt; &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; &lt;/a&gt; 도 true 여야합니다. 그러나 &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; 의 값은이 함수가 반환하는 값에 영향을주지 않습니다. 클래스를 재정의 하려면 &lt;a href=&quot;#isRedefineClassesSupported()&quot;&gt; &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; &lt;/a&gt; 도 true 여야합니다. 그러나 &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; 의 값은이 함수가 반환하는 값에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="11846a346d2ab60d036859287229666998ffb89d" translate="yes" xml:space="preserve">
          <source>For a class to be retransformed, &lt;a href=&quot;instrumentation#isRetransformClassesSupported--&quot;&gt;&lt;code&gt;isRetransformClassesSupported()&lt;/code&gt;&lt;/a&gt; must also be true. But the value of &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; does not influence the value returned by this function. For a class to be redefined, &lt;a href=&quot;instrumentation#isRedefineClassesSupported--&quot;&gt;&lt;code&gt;isRedefineClassesSupported()&lt;/code&gt;&lt;/a&gt; must also be true. But the value of &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; does not influence the value returned by this function.</source>
          <target state="translated">클래스를 재 변환 하려면 &lt;a href=&quot;instrumentation#isRetransformClassesSupported--&quot;&gt; &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; &lt;/a&gt; 도 true 여야합니다. 그러나 &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; 값은이 함수가 반환 한 값에 영향을 미치지 않습니다. 클래스를 재정의 하려면 &lt;a href=&quot;instrumentation#isRedefineClassesSupported--&quot;&gt; &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; &lt;/a&gt; 도 true 여야합니다. 그러나 &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; 의 값은이 함수가 반환 한 값에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c5b39595c299e68d6c5a7b61856830d8b4761e7e" translate="yes" xml:space="preserve">
          <source>For a classic example, here is a task computing Fibonacci numbers:</source>
          <target state="translated">전형적인 예를 들어, 피보나치 수를 계산하는 작업은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="048a413e62191e1579b1312264cda5145063d780" translate="yes" xml:space="preserve">
          <source>For a connector client, the source is a reference to the connector client object, an instance of a class implementing &lt;a href=&quot;jmxconnector&quot;&gt;&lt;code&gt;JMXConnector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">커넥터 클라이언트의 경우 소스는 &lt;a href=&quot;jmxconnector&quot;&gt; &lt;code&gt;JMXConnector&lt;/code&gt; 를&lt;/a&gt; 구현하는 클래스의 인스턴스 인 커넥터 클라이언트 오브젝트에 대한 참조 입니다.</target>
        </trans-unit>
        <trans-unit id="e954a136069f610e1d348ed2aae8a3833f52a5f6" translate="yes" xml:space="preserve">
          <source>For a connector server, if it is registered in an MBean server, the source is the &lt;a href=&quot;../objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; under which it is registered. Otherwise, it is a reference to the connector server object itself, an instance of a subclass of &lt;a href=&quot;jmxconnectorserver&quot;&gt;&lt;code&gt;JMXConnectorServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">커넥터 서버의 경우, MBean 서버에 등록 된 경우 소스 는 등록 된 &lt;a href=&quot;../objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; 입니다. 그렇지 않은 경우, &lt;a href=&quot;jmxconnectorserver&quot;&gt; &lt;code&gt;JMXConnectorServer&lt;/code&gt; &lt;/a&gt; 의 서브 클래스 인스턴스 인 커넥터 서버 오브젝트 자체에 대한 참조 입니다.</target>
        </trans-unit>
        <trans-unit id="2ce500b7d65aa27215f98ffce87929769e912a5b" translate="yes" xml:space="preserve">
          <source>For a custom handler, e.g. com.foo.MyHandler, the properties would be:</source>
          <target state="translated">사용자 정의 처리기 (예 : com.foo.MyHandler)의 경우 속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="97e10d9e8ecfe0fa32192fd60cf92de7a07ca3a0" translate="yes" xml:space="preserve">
          <source>For a disconnected &lt;code&gt;RowSet&lt;/code&gt; object, custom mapping can be done only when a &lt;code&gt;Map&lt;/code&gt; object is passed to the method or constructor that will be doing the custom mapping. The situation is different for connected &lt;code&gt;RowSet&lt;/code&gt; objects because they maintain a connection with the data source. A method that does custom mapping and is called by a disconnected &lt;code&gt;RowSet&lt;/code&gt; object may use the &lt;code&gt;Map&lt;/code&gt; object that is associated with the &lt;code&gt;Connection&lt;/code&gt; object being used. So, in other words, if no map is specified, the connection's type map can be used by default.</source>
          <target state="translated">연결이 끊긴 &lt;code&gt;RowSet&lt;/code&gt; 개체의 경우 사용자 지정 매핑을 수행 할 메서드 또는 생성자에 &lt;code&gt;Map&lt;/code&gt; 개체가 전달 된 경우에만 사용자 지정 매핑을 수행 할 수 있습니다 . 연결된 &lt;code&gt;RowSet&lt;/code&gt; 개체는 데이터 소스와의 연결을 유지하므로 상황이 다릅니다 . 사용자 지정 매핑을 수행하고 연결이 끊어진 &lt;code&gt;RowSet&lt;/code&gt; 개체에 의해 호출되는 메서드는 사용 중인 &lt;code&gt;Connection&lt;/code&gt; 개체 와 연결된 &lt;code&gt;Map&lt;/code&gt; 개체를 사용할 수 있습니다 . 즉, 맵을 지정하지 않으면 연결의 유형 맵을 기본적으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48a4faa0d8a364248711da4f681304622c126f91" translate="yes" xml:space="preserve">
          <source>For a discussion of the relative advantages and disadvantages of using physical or logical fonts, see the &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/2d/text/fonts.html#advantages-and-disadvantages&quot;&gt; Physical and Logical Fonts&lt;/a&gt; in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/index.html&quot;&gt;The Java Tutorials&lt;/a&gt; document.</source>
          <target state="translated">물리적 또는 논리적 글꼴 사용의 상대적인 장단점 에 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/index.html&quot;&gt;대한 설명&lt;/a&gt; 은 The Java Tutorials 문서 의 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/2d/text/fonts.html#advantages-and-disadvantages&quot;&gt;Physical and Logical Fonts&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3342c591a6453fd80126d968b78a70f1efc1ffac" translate="yes" xml:space="preserve">
          <source>For a discussion on how newlines are handled, see &lt;a href=&quot;defaulteditorkit&quot;&gt;DefaultEditorKit&lt;/a&gt;.</source>
          <target state="translated">줄 바꿈 처리 방법에 대한 토론은 &lt;a href=&quot;defaulteditorkit&quot;&gt;DefaultEditorKit를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a499a77ba116ed68bdb9e3d0de7588f1280289b" translate="yes" xml:space="preserve">
          <source>For a discussion on how newlines are handled, see &lt;a href=&quot;text/defaulteditorkit&quot;&gt;DefaultEditorKit&lt;/a&gt;.</source>
          <target state="translated">줄 바꿈 처리 방법에 대한 토론은 &lt;a href=&quot;text/defaulteditorkit&quot;&gt;DefaultEditorKit를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="46276d7f1f5784016e3a29da6b195107485d4658" translate="yes" xml:space="preserve">
          <source>For a dynamically-computed call site, the bootstrap method is invoked with parameter types &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;MethodType&lt;/code&gt;, and the types of any static arguments; the return type is &lt;code&gt;CallSite&lt;/code&gt;.</source>
          <target state="translated">동적으로 계산 된 호출 사이트의 경우, 매개 변수 유형 &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; , &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;MethodType&lt;/code&gt; 및 정적 인수 유형을 사용 하여 부트 스트랩 메소드가 호출됩니다 . 반환 유형은 &lt;code&gt;CallSite&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1c910a3cd492312cb98d83bdc46c9ad694abe02a" translate="yes" xml:space="preserve">
          <source>For a dynamically-computed call site, the returned result must be a non-null reference to a &lt;a href=&quot;callsite&quot;&gt;&lt;code&gt;CallSite&lt;/code&gt;&lt;/a&gt;. The type of the call site's target must be exactly equal to the type derived from the invocation's type descriptor and passed to the bootstrap method. If these conditions are not met, a &lt;code&gt;BootstrapMethodError&lt;/code&gt; is thrown. On success the call site then becomes permanently linked to the &lt;code&gt;invokedynamic&lt;/code&gt; instruction.</source>
          <target state="translated">동적으로 계산 된 호출 사이트의 경우 반환 된 결과는 &lt;a href=&quot;callsite&quot;&gt; &lt;code&gt;CallSite&lt;/code&gt; 에&lt;/a&gt; 대한 null이 아닌 참조 여야합니다 . 호출 사이트의 대상 유형은 호출의 유형 설명자에서 파생 된 유형과 정확히 동일해야하며 부트 스트랩 메서드에 전달되어야합니다. 이러한 조건이 충족되지 않으면 &lt;code&gt;BootstrapMethodError&lt;/code&gt; 가 발생합니다. 성공하면 호출 사이트는 &lt;code&gt;invokedynamic&lt;/code&gt; 명령에 영구적으로 연결됩니다 .</target>
        </trans-unit>
        <trans-unit id="a470de0ccdda48f11f7b1042a4bc4b15b2fea1aa" translate="yes" xml:space="preserve">
          <source>For a dynamically-computed constant, the bootstrap method is invoked with parameter types &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Class&lt;/code&gt;, and the types of any static arguments; the return type is the type represented by the &lt;code&gt;Class&lt;/code&gt;.</source>
          <target state="translated">동적으로 계산 된 상수의 경우, 부트 스트랩 메소드는 매개 변수 유형 &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; , &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;Class&lt;/code&gt; 및 정적 인수 유형으로 호출됩니다. 반환 유형은 &lt;code&gt;Class&lt;/code&gt; 가 나타내는 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="c3d940c188e2e8b37e7cc38c2c024a1e36e08123" translate="yes" xml:space="preserve">
          <source>For a dynamically-computed constant, the first parameter of the bootstrap method must be assignable to &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;. If this condition is not met, a &lt;code&gt;BootstrapMethodError&lt;/code&gt; is thrown. On success the result of the bootstrap method is cached as the resolved constant value.</source>
          <target state="translated">동적으로 계산 된 상수의 경우 부트 스트랩 메서드의 첫 번째 매개 변수를 &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; 에 할당 할 수 있어야합니다 . 이 조건이 충족되지 않으면 &lt;code&gt;BootstrapMethodError&lt;/code&gt; 가 발생합니다. 성공하면 부트 스트랩 메서드의 결과가 확인 된 상수 값으로 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="eb87cd9382f91a25882dc582ffbc03922acc6816" translate="yes" xml:space="preserve">
          <source>For a given abstract pathname</source>
          <target state="translated">주어진 추상 경로 이름</target>
        </trans-unit>
        <trans-unit id="4467bdb7dd0b7f98749bbc835ec442ee3c213e7c" translate="yes" xml:space="preserve">
          <source>For a high resolution display where there is a scaling transform, the &lt;code&gt;MultiResolutionImage&lt;/code&gt; will have two image variants:</source>
          <target state="translated">스케일링 변환이있는 고해상도 디스플레이의 경우 &lt;code&gt;MultiResolutionImage&lt;/code&gt; 에는 두 가지 이미지 변형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="941ac0e517a49f3228852350502448606d2c37f8" translate="yes" xml:space="preserve">
          <source>For a list of all grandfathered tags, see the IANA Language Subtag Registry (search for &quot;Type: grandfathered&quot;).</source>
          <target state="translated">모든 할아버지 태그의 목록은 IANA 언어 하위 태그 레지스트리 ( &quot;Type : grandfathered&quot;검색)를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="985f6c1fef14acb945d8f93c159d909201239b40" translate="yes" xml:space="preserve">
          <source>For a matcher</source>
          <target state="translated">매처</target>
        </trans-unit>
        <trans-unit id="fab762ed05291a6e794cbd5c274e121d082536fc" translate="yes" xml:space="preserve">
          <source>For a modifiable list the programmer should additionally implement the list iterator's &lt;code&gt;set&lt;/code&gt; method. For a variable-size list the programmer should additionally implement the list iterator's &lt;code&gt;remove&lt;/code&gt; and &lt;code&gt;add&lt;/code&gt; methods.</source>
          <target state="translated">수정 가능한 목록의 경우 프로그래머는 목록 반복자의 &lt;code&gt;set&lt;/code&gt; 메소드를 추가로 구현해야합니다 . 가변 크기 목록의 경우 프로그래머는 목록 반복자의 &lt;code&gt;remove&lt;/code&gt; 및 &lt;code&gt;add&lt;/code&gt; 메소드를 추가로 구현해야 합니다.</target>
        </trans-unit>
        <trans-unit id="5eec30ef7ebd4eb227c935d9e3da65a08840d5f5" translate="yes" xml:space="preserve">
          <source>For a module-oriented location, a file object is contained in the location if there exists a module that may be obtained by the call:</source>
          <target state="translated">모듈 지향 위치의 경우 호출을 통해 얻을 수있는 모듈이있는 경우 파일 객체가 해당 위치에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="26155ef85ec3b61790a4ccaeb70b4f7e4e2faec4" translate="yes" xml:space="preserve">
          <source>For a more detailed description of URL parsing, refer to RFC2396.</source>
          <target state="translated">URL 구문 분석에 대한 자세한 설명은 RFC2396을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="34285ef3a4ebc953564eb44fa61313cabbb675e1" translate="yes" xml:space="preserve">
          <source>For a more precise description of the behavior of regular expression constructs, please see &lt;a href=&quot;http://www.oreilly.com/catalog/regex3/&quot;&gt; &lt;i&gt;Mastering Regular Expressions, 3nd Edition&lt;/i&gt;, Jeffrey E. F. Friedl, O'Reilly and Associates, 2006.&lt;/a&gt;</source>
          <target state="translated">정규 표현식 구조의 동작에 대한 자세한 설명은 &lt;a href=&quot;http://www.oreilly.com/catalog/regex3/&quot;&gt;&lt;i&gt;Mastering Regular Expressions, 3nd Edition&lt;/i&gt;&lt;/a&gt; , Jeffrey EF Friedl, O'Reilly and Associates, 2006을 참조하십시오. &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="bac44005781412fcf2cf3e8a91edf1885c22f18b" translate="yes" xml:space="preserve">
          <source>For a multi-valued RDN, the type/value pairs have no specific order defined on them. In that case, this method returns type of one of the type/value pairs. The &lt;a href=&quot;#getValue()&quot;&gt;&lt;code&gt;getValue()&lt;/code&gt;&lt;/a&gt; method returns the value corresponding to the type returned by this method.</source>
          <target state="translated">다중 값 RDN의 경우 유형 / 값 쌍에는 정의 된 특정 순서가 없습니다. 이 경우이 메서드는 유형 / 값 쌍 중 하나의 유형을 반환합니다. &lt;a href=&quot;#getValue()&quot;&gt; &lt;code&gt;getValue()&lt;/code&gt; &lt;/a&gt; 값이 형태에 대응하는 메소드가 복귀는이 방법에 의해 리턴.</target>
        </trans-unit>
        <trans-unit id="4c4b6b1cf0941b3a2e1e6929568f2554294cf98a" translate="yes" xml:space="preserve">
          <source>For a multi-valued RDN, the type/value pairs have no specific order defined on them. In that case, this method returns type of one of the type/value pairs. The &lt;a href=&quot;rdn#getValue--&quot;&gt;&lt;code&gt;getValue()&lt;/code&gt;&lt;/a&gt; method returns the value corresponding to the type returned by this method.</source>
          <target state="translated">다중 값 RDN의 경우 유형 / 값 쌍에는 특정 순서가 정의되어 있지 않습니다. 이 경우이 메소드는 유형 / 값 쌍 중 하나의 유형을 리턴합니다. &lt;a href=&quot;rdn#getValue--&quot;&gt; &lt;code&gt;getValue()&lt;/code&gt; &lt;/a&gt; 값이 형태에 대응하는 메소드가 복귀는이 방법에 의해 리턴.</target>
        </trans-unit>
        <trans-unit id="3fc02c7aa14808f5d41b6dcefc79adb17372d2bf" translate="yes" xml:space="preserve">
          <source>For a multi-valued RDN, this method returns value corresponding to the type returned by &lt;a href=&quot;#getType()&quot;&gt;&lt;code&gt;getType()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">다중 값 RDN의 경우이 메서드는 &lt;a href=&quot;#getType()&quot;&gt; &lt;code&gt;getType()&lt;/code&gt; &lt;/a&gt; 메서드에서 반환 된 유형에 해당하는 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ce5a8e611f88fc4a57f454effdea1ddccd2bbcad" translate="yes" xml:space="preserve">
          <source>For a multi-valued RDN, this method returns value corresponding to the type returned by &lt;a href=&quot;rdn#getType--&quot;&gt;&lt;code&gt;getType()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">다중 값 RDN의 경우이 메소드는 &lt;a href=&quot;rdn#getType--&quot;&gt; &lt;code&gt;getType()&lt;/code&gt; &lt;/a&gt; 메소드가 리턴 한 유형에 해당하는 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="e0d49b963fdd1ed27cbb5376de257af68d40bf1b" translate="yes" xml:space="preserve">
          <source>For a non-scaled display, the &lt;code&gt;MultiResolutionImage&lt;/code&gt; will have one image variant:</source>
          <target state="translated">크기가 조정되지 않은 디스플레이의 경우 &lt;code&gt;MultiResolutionImage&lt;/code&gt; 에는 하나의 이미지 변형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="aebb0baaa40878766cd56c083732376ae8549e67" translate="yes" xml:space="preserve">
          <source>For a one time comparison, this method has the best performance. If a given String will be involved in multiple comparisons, CollationKey.compareTo has the best performance. See the Collator class description for an example using CollationKeys.</source>
          <target state="translated">일회성 비교를 위해이 방법이 최고의 성능을 발휘합니다. 주어진 문자열이 다중 비교에 관여하는 경우 CollationKey.compareTo가 최상의 성능을 갖습니다. CollationKeys를 사용한 예제는 Collator 클래스 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="76c56be1aaa760afea88dffb5f467c4dccf07377" translate="yes" xml:space="preserve">
          <source>For a package-oriented location, a file object is contained in the location if there exist values for</source>
          <target state="translated">패키지 지향 위치의 경우 다음에 대한 값이있는 경우 파일 객체가 해당 위치에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="27e9dd7224fc389b9e7f30eed575e7bda33f40c7" translate="yes" xml:space="preserve">
          <source>For a particular &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt;, g, one can reset the transformation to create such a mapping by using the following pseudocode:</source>
          <target state="translated">특정 &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt; , g의 경우 다음 의사 코드를 사용하여 이러한 매핑을 생성하도록 변환을 재설정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dba5eed5c622b60caf7ec484699093a1ab22d756" translate="yes" xml:space="preserve">
          <source>For a permission you have, this is either empty or a &lt;em&gt;class name pattern&lt;/em&gt;. A class name pattern is a string following the Java conventions for dot-separated class names. It may end with &quot;&lt;code&gt;.*&lt;/code&gt;&quot; meaning that the permission grants access to any class that begins with the string preceding &quot;&lt;code&gt;.*&lt;/code&gt;&quot;. For instance, &quot;&lt;code&gt;javax.management.*&lt;/code&gt;&quot; grants access to &lt;code&gt;javax.management.MBeanServerDelegate&lt;/code&gt; and &lt;code&gt;javax.management.timer.Timer&lt;/code&gt;, among other classes.</source>
          <target state="translated">권한이 있으면 비어 있거나 &lt;em&gt;클래스 이름 패턴&lt;/em&gt; 입니다. 클래스 이름 패턴은 도트로 구분 된 클래스 이름에 대한 Java 규칙을 따르는 문자열입니다. &quot; &lt;code&gt;.*&lt;/code&gt; &quot;로 끝날 수 있습니다 . 이는 권한이 &quot; &lt;code&gt;.*&lt;/code&gt; &quot; 앞의 문자열로 시작하는 모든 클래스에 대한 액세스 권한을 부여 함을 의미합니다 . 예를 들어, &quot; &lt;code&gt;javax.management.*&lt;/code&gt; &quot;는 다른 클래스 중에서 &lt;code&gt;javax.management.MBeanServerDelegate&lt;/code&gt; 및 &lt;code&gt;javax.management.timer.Timer&lt;/code&gt; 에 대한 액세스 권한을 부여합니다 .</target>
        </trans-unit>
        <trans-unit id="7bd8e055602b0b09f980c766e8d59803df5383ba" translate="yes" xml:space="preserve">
          <source>For a permission you have, this is either the name of an attribute or operation you can access, or it is empty or the single character &quot;&lt;code&gt;*&lt;/code&gt;&quot;, both of which grant access to any member.</source>
          <target state="translated">권한이있는 경우이 속성은 액세스 할 수있는 속성 또는 작업 이름이거나 비어 있거나 단일 문자 &quot; &lt;code&gt;*&lt;/code&gt; &quot;이며 둘 다 구성원에게 액세스 권한을 부여합니다.</target>
        </trans-unit>
        <trans-unit id="1acfd8f7dcf69d39ed31ec974c16b00c8bb84748" translate="yes" xml:space="preserve">
          <source>For a permission you have, this is the &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; of the MBean or MBeans you can access. It may be an object name pattern to grant access to all MBeans whose names match the pattern. It may also be empty, which grants access to all MBeans whatever their name.</source>
          <target state="translated">권한이 있으면 액세스 할 수있는 MBean 의 &lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; 입니다. 이름이 패턴과 일치하는 모든 MBean에 액세스 권한을 부여하는 것은 오브젝트 이름 패턴 일 수 있습니다. 비어있을 수도 있습니다. 이름에 관계없이 모든 MBean에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a879233e1d115311b9ab98b47332e72587d921ae" translate="yes" xml:space="preserve">
          <source>For a permission you need, this is the &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; of the MBean you are accessing. For operations that do not reference a single MBean, it is null. It is never an object name pattern.</source>
          <target state="translated">필요한 권한의 경우, 액세스중인 MBean 의 &lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; 입니다. 단일 MBean을 참조하지 않는 조작의 경우 널입니다. 결코 객체 이름 패턴이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="4392da557e3be8db027e85b72c0308a6ceff3ddf" translate="yes" xml:space="preserve">
          <source>For a permission you need, this is the class name of an MBean you are accessing, as returned by &lt;a href=&quot;mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;MBeanServer.getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;mbeaninfo#getClassName--&quot;&gt;&lt;code&gt;getClassName()&lt;/code&gt;&lt;/a&gt;. Certain operations do not reference a class name, in which case the class name is null.</source>
          <target state="translated">필요한 권한의 경우, 이것은 &lt;a href=&quot;mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt; &lt;code&gt;MBeanServer.getMBeanInfo(name)&lt;/code&gt; &lt;/a&gt; 의해 반환되는 액세스하고있는 MBean의 클래스 명입니다 . &lt;a href=&quot;mbeaninfo#getClassName--&quot;&gt; &lt;code&gt;getClassName()&lt;/code&gt; &lt;/a&gt; . 특정 작업은 클래스 이름을 참조하지 않습니다.이 경우 클래스 이름은 null입니다.</target>
        </trans-unit>
        <trans-unit id="a277b0acb0118e4a7691d55119b800a002dc9cd2" translate="yes" xml:space="preserve">
          <source>For a permission you need, this is the class name of an MBean you are accessing, as returned by &lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;MBeanServer.getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;mbeaninfo#getClassName()&quot;&gt;&lt;code&gt;getClassName()&lt;/code&gt;&lt;/a&gt;. Certain operations do not reference a class name, in which case the class name is null.</source>
          <target state="translated">필요한 권한의 경우 &lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt; &lt;code&gt;MBeanServer.getMBeanInfo(name)&lt;/code&gt; &lt;/a&gt; 의해 반환 된대로 액세스중인 MBean의 클래스 이름입니다 . &lt;a href=&quot;mbeaninfo#getClassName()&quot;&gt; &lt;code&gt;getClassName()&lt;/code&gt; &lt;/a&gt; . 특정 작업은 클래스 이름을 참조하지 않습니다.이 경우 클래스 이름은 null입니다.</target>
        </trans-unit>
        <trans-unit id="8c7845a5b03ddc3c0be5ac844e352635076127bb" translate="yes" xml:space="preserve">
          <source>For a permission you need, this is the name of the attribute or operation you are accessing. For operations that do not reference an attribute or operation, the member is null.</source>
          <target state="translated">필요한 권한의 경우 액세스중인 속성 또는 작업의 이름입니다. 속성이나 작업을 참조하지 않는 작업의 경우 멤버가 null입니다.</target>
        </trans-unit>
        <trans-unit id="47e6fbe126c9387e2231f2b0971f9007e98fd739" translate="yes" xml:space="preserve">
          <source>For a positive or zero ordinal, the algorithm is equivalent to finding the first day-of-week that matches within the month and then adding a number of weeks to it. For a negative ordinal, the algorithm is equivalent to finding the last day-of-week that matches within the month and then subtracting a number of weeks to it. The ordinal number of weeks is not validated and is interpreted leniently according to this algorithm. This definition means that an ordinal of zero finds the last matching day-of-week in the previous month.</source>
          <target state="translated">양수 또는 서수 인 경우 알고리즘은 해당 월과 일치하는 첫 번째 요일을 찾은 다음 몇 주를 더하는 것과 같습니다. 음수 서수의 경우 알고리즘은 해당 월과 일치하는 마지막 요일을 찾은 다음 몇 주를 빼는 것과 같습니다. 서수는 검증되지 않으며이 알고리즘에 따라 관대하게 해석됩니다. 이 정의는 서 수가 0이면 전월의 마지막 일치 요일을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="8b197eb8130f26084a41da1e9ffc09230536c41b" translate="yes" xml:space="preserve">
          <source>For a qualified export, returns the non-empty and immutable set of the module names to which the package is exported.</source>
          <target state="translated">정규화 된 내보내기의 경우 패키지를 내보낼 모듈 이름의 비어 있지 않고 변경할 수없는 집합을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5706c82c73c3023f7f4226927a159d05f9e75ee6" translate="yes" xml:space="preserve">
          <source>For a qualified export, returns the non-empty and immutable set of the module names to which the package is exported. For an unqualified export, returns an empty set.</source>
          <target state="translated">정규화 된 내보내기의 경우 패키지를 내보낼 모듈 이름의 비어 있지 않고 변경할 수없는 집합을 반환합니다. 정규화되지 않은 내보내기의 경우 빈 집합을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c3ff2005fc31c61febbd08651a00c2320cd0c323" translate="yes" xml:space="preserve">
          <source>For a qualified opens, returns the non-empty and immutable set of the module names to which the package is open.</source>
          <target state="translated">정규화 된 열기의 경우 패키지가 열려있는 비어 있지 않고 변경할 수없는 모듈 이름 집합을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="32606560ede9387413ed7ca5823003a0597fd6d2" translate="yes" xml:space="preserve">
          <source>For a qualified opens, returns the non-empty and immutable set of the module names to which the package is open. For an unqualified opens, returns an empty set.</source>
          <target state="translated">정규화 된 열기의 경우 패키지가 열려있는 비어 있지 않고 변경할 수없는 모듈 이름 집합을 반환합니다. 규정되지 않은 열기의 경우 빈 집합을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="312f91b25e7e2207bee0c9dc9628a326d0088cae" translate="yes" xml:space="preserve">
          <source>For a read-only mapping, this channel must have been opened for reading; for a read/write or private mapping, this channel must have been opened for both reading and writing.</source>
          <target state="translated">읽기 전용 매핑의 경우이 채널을 읽기 위해 열어야합니다. 읽기 / 쓰기 또는 개인 매핑의 경우이 채널은 읽기와 쓰기 모두에 열려 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="580c9df1ffd5acf062f271b1401c3788f3ddee75" translate="yes" xml:space="preserve">
          <source>For a rotating set of files, as each file reaches a given size limit, it is closed, rotated out, and a new file opened. Successively older files are named by adding &quot;0&quot;, &quot;1&quot;, &quot;2&quot;, etc. into the base filename.</source>
          <target state="translated">회전하는 파일 세트의 경우, 각 파일이 지정된 크기 제한에 도달하면 파일이 닫히고 회전되며 새 파일이 열립니다. 연속적으로 오래된 파일은 &quot;0&quot;, &quot;1&quot;, &quot;2&quot;등을 기본 파일 이름에 추가하여 이름을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e37bf1d5d080c7425aab6250223dd3753ab4c106" translate="yes" xml:space="preserve">
          <source>For a selection model of &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; any time the paths are changed (&lt;code&gt;setSelectionPath&lt;/code&gt;, &lt;code&gt;addSelectionPath&lt;/code&gt; ...) the TreePaths are again checked to make they are contiguous. A check of the TreePaths can also be forced by invoking &lt;code&gt;resetRowSelection&lt;/code&gt;. How a set of discontiguous TreePaths is mapped to a contiguous set is left to implementors of this interface to enforce a particular policy.</source>
          <target state="translated">&lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; 의 선택 모델의 경우 경로가 변경 될 때마다 ( &lt;code&gt;setSelectionPath&lt;/code&gt; , &lt;code&gt;addSelectionPath&lt;/code&gt; ...) TreePath를 다시 검사하여 인접하게 만듭니다. &lt;code&gt;resetRowSelection&lt;/code&gt; 을 호출하여 TreePaths를 검사 할 수도 있습니다 . 일련의 불연속적인 TreePaths가 연속적인 집합에 매핑되는 방법은 특정 정책을 시행하기 위해이 인터페이스의 구현 자에게 맡겨집니다.</target>
        </trans-unit>
        <trans-unit id="1e8a63f99e8e63ed1864a35be23bc90bbbc49e4f" translate="yes" xml:space="preserve">
          <source>For a serializable &lt;code&gt;Entry&lt;/code&gt;, see &lt;a href=&quot;abstractmap.simpleentry&quot;&gt;&lt;code&gt;AbstractMap.SimpleEntry&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;abstractmap.simpleimmutableentry&quot;&gt;&lt;code&gt;AbstractMap.SimpleImmutableEntry&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">직렬화 가능한 &lt;code&gt;Entry&lt;/code&gt; 에 대해서는 &lt;a href=&quot;abstractmap.simpleentry&quot;&gt; &lt;code&gt;AbstractMap.SimpleEntry&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;abstractmap.simpleimmutableentry&quot;&gt; &lt;code&gt;AbstractMap.SimpleImmutableEntry&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f907fd2fa666e4e8e93d91cfed3ef0d634af220" translate="yes" xml:space="preserve">
          <source>For a tutorial and programming guide with examples of use of the collections framework, please see:</source>
          <target state="translated">컬렉션 프레임 워크 사용 예제가 포함 된 자습서 및 프로그래밍 가이드는 다음을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="cfcb01272d1e879bd2db579e039d3def51787f14" translate="yes" xml:space="preserve">
          <source>For a user-defined parameter, the fully-qualified SQL type name of the parameter should also be given, while a &lt;code&gt;REF&lt;/code&gt; parameter requires that the fully-qualified type name of the referenced type be given. A JDBC driver that does not need the type code and type name information may ignore it. To be portable, however, applications should always provide these values for user-defined and &lt;code&gt;REF&lt;/code&gt; parameters. Although it is intended for user-defined and &lt;code&gt;REF&lt;/code&gt; parameters, this method may be used to register a parameter of any JDBC type. If the parameter does not have a user-defined or &lt;code&gt;REF&lt;/code&gt; type, the</source>
          <target state="translated">사용자 정의 매개 변수의 경우 매개 변수의 완전한 SQL 유형 이름도 제공해야하며, &lt;code&gt;REF&lt;/code&gt; 매개 변수는 참조 된 유형의 완전한 유형 이름을 제공해야합니다. 유형 코드 및 유형 이름 정보가 필요하지 않은 JDBC 드라이버는이를 무시할 수 있습니다. 그러나 이식 가능하려면 애플리케이션은 항상 사용자 정의 및 &lt;code&gt;REF&lt;/code&gt; 매개 변수에 대해 이러한 값을 제공해야합니다 . 사용자 정의 및 &lt;code&gt;REF&lt;/code&gt; 매개 변수를 위한 것이지만 이 메소드는 모든 JDBC 유형의 매개 변수를 등록하는 데 사용할 수 있습니다. 매개 변수에 사용자 정의 또는 &lt;code&gt;REF&lt;/code&gt; 유형이없는 경우</target>
        </trans-unit>
        <trans-unit id="83db4de63f9bc5fb49eb970004951aeb102efaf4" translate="yes" xml:space="preserve">
          <source>For a user-named parameter the fully-qualified SQL type name of the parameter should also be given, while a REF parameter requires that the fully-qualified type name of the referenced type be given. A JDBC driver that does not need the type code and type name information may ignore it. To be portable, however, applications should always provide these values for user-named and REF parameters. Although it is intended for user-named and REF parameters, this method may be used to register a parameter of any JDBC type. If the parameter does not have a user-named or REF type, the typeName parameter is ignored.</source>
          <target state="translated">사용자 이름 매개 변수의 경우 매개 변수의 완전한 SQL 유형 이름도 제공해야하며 REF 매개 변수는 참조 된 유형의 완전한 유형 이름을 제공해야합니다. 유형 코드 및 유형 이름 정보가 필요하지 않은 JDBC 드라이버는이를 무시할 수 있습니다. 그러나 이식 가능하려면 응용 프로그램은 항상 사용자 이름 및 REF 매개 변수에 대해 이러한 값을 제공해야합니다. 사용자 이름 및 REF 매개 변수를위한 것이지만이 메소드는 모든 JDBC 유형의 매개 변수를 등록하는 데 사용할 수 있습니다. 매개 변수에 사용자 이름 또는 REF 유형이없는 경우 typeName 매개 변수는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="46471aadd599914bd627b9907250a4504ff64e19" translate="yes" xml:space="preserve">
          <source>For access to heterogeneous binary data, that is, sequences of values of different types, this class defines a family of absolute and relative</source>
          <target state="translated">이종 이진 데이터, 즉 다른 유형의 값 시퀀스에 액세스하기 위해이 클래스는 절대 및 상대 제품군을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="c7da068617acdf9b7c61fac878688b1af0c7245b" translate="yes" xml:space="preserve">
          <source>For access to homogeneous binary data, that is, sequences of values of the same type, this class defines methods that can create</source>
          <target state="translated">동종 이진 데이터, 즉 동일한 유형의 값 시퀀스에 액세스하기 위해이 클래스는 만들 수있는 메서드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="0f404a7a6cf52ddd90c2f4ceb0bc31691b95f048" translate="yes" xml:space="preserve">
          <source>For adding specific actions, overide &lt;code&gt;installKeyboardActions&lt;/code&gt; to add actions in response to KeyStroke bindings. See the article &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/keybinding.html&quot;&gt;How to Use Key Bindings&lt;/a&gt;</source>
          <target state="translated">특정 조치 를 추가하려면 &lt;code&gt;installKeyboardActions&lt;/code&gt; 를 재정 의하여 KeyStroke 바인딩에 대한 응답으로 조치를 추가하십시오. &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/keybinding.html&quot;&gt;키 바인딩 사용 방법&lt;/a&gt; 문서를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="f4e31f21b77cc61c27c5db3b1c62f525194382db" translate="yes" xml:space="preserve">
          <source>For all arithmetic operators , the operation is carried out as though an exact intermediate result were first calculated and then rounded to the number of digits specified by the precision setting (if necessary), using the selected rounding mode. If the exact result is not returned, some digit positions of the exact result are discarded. When rounding increases the magnitude of the returned result, it is possible for a new digit position to be created by a carry propagating to a leading &quot;9&quot; digit. For example, rounding the value 999.9 to three digits rounding up would be numerically equal to one thousand, represented as 100&amp;times;10&lt;sup&gt;1&lt;/sup&gt;. In such cases, the new &quot;1&quot; is the leading digit position of the returned result.</source>
          <target state="translated">모든 산술 연산자의 경우, 연산은 정확한 중간 결과가 먼저 계산 된 다음 선택한 반올림 모드를 사용하여 정밀도 설정 (필요한 경우)으로 지정된 자릿수로 반올림되는 것처럼 수행됩니다. 정확한 결과가 반환되지 않으면 정확한 결과의 일부 숫자 위치가 삭제됩니다. 반올림으로 인해 반환 된 결과의 크기가 커지면 캐리가 선행 &quot;9&quot;자리로 전파하여 새 자리 위치를 만들 수 있습니다. 예를 들어, 999.9 값을 세 자리로 반올림하는 것은 100x10 &lt;sup&gt;1&lt;/sup&gt; 로 표시되는 숫자와 동일합니다 . 이러한 경우 새 &quot;1&quot;은 반환 된 결과의 선행 자리 위치입니다.</target>
        </trans-unit>
        <trans-unit id="ee3fe161c58cb31cfb98f3531662564b65b76541" translate="yes" xml:space="preserve">
          <source>For all directions, components are arranged in the same order as they were added to the container.</source>
          <target state="translated">모든 방향에서 구성 요소는 컨테이너에 추가 된 순서대로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="9a58862580f80db556a0b45a94eae2108f857b7a" translate="yes" xml:space="preserve">
          <source>For all events, except treeStructureChanged, returns the parent of the changed nodes.</source>
          <target state="translated">treeStructureChanged를 제외한 모든 이벤트에 대해 변경된 노드의 부모를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3a7b4dbead32d2c320fa770520ecd503cf1fe80f" translate="yes" xml:space="preserve">
          <source>For all events, except treeStructureChanged, returns the parent of the changed nodes. For treeStructureChanged events, returns the ancestor of the structure that has changed. This and &lt;code&gt;getChildIndices&lt;/code&gt; are used to get a list of the effected nodes.</source>
          <target state="translated">treeStructureChanged를 제외한 모든 이벤트에 대해 변경된 노드의 부모를 반환합니다. treeStructureChanged 이벤트의 경우 변경된 구조의 조상을 반환합니다. This 및 &lt;code&gt;getChildIndices&lt;/code&gt; 는 영향을받는 노드 목록을 가져 오는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="288ffb6ae2c3c2170584c8e6d3a3fc12ca35cdc2" translate="yes" xml:space="preserve">
          <source>For all named loggers, the reset operation removes and closes all Handlers and (except for the root logger) sets the level to &lt;code&gt;null&lt;/code&gt;. The root logger's level is set to &lt;code&gt;Level.INFO&lt;/code&gt;.</source>
          <target state="translated">모든 명명 된 로거에 대해 재설정 작업은 모든 핸들러를 제거하고 닫으며 (루트 로거 제외) 수준을 &lt;code&gt;null&lt;/code&gt; 로 설정합니다 . 루트 로거의 레벨은 &lt;code&gt;Level.INFO&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="7e82599dd6fcb52a65725f8c6350a2730f871102" translate="yes" xml:space="preserve">
          <source>For all named loggers, the reset operation removes and closes all Handlers and (except for the root logger) sets the level to null. The root logger's level is set to Level.INFO.</source>
          <target state="translated">명명 된 모든 로거의 경우 재설정 조작은 모든 핸들러를 제거하고 닫으며 루트 로거를 제외하고 레벨을 널로 설정합니다. 루트 로거의 레벨은 Level.INFO로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="dd4038d8d24624f3cd29de1d0e2c4f5451989f5a" translate="yes" xml:space="preserve">
          <source>For all nodes, importing a node creates a node object owned by the importing document, with attribute values identical to the source node's &lt;code&gt;nodeName&lt;/code&gt; and &lt;code&gt;nodeType&lt;/code&gt;, plus the attributes related to namespaces (&lt;code&gt;prefix&lt;/code&gt;, &lt;code&gt;localName&lt;/code&gt;, and &lt;code&gt;namespaceURI&lt;/code&gt;). As in the &lt;code&gt;cloneNode&lt;/code&gt; operation, the source node is not altered. User data associated to the imported node is not carried over. However, if any &lt;code&gt;UserDataHandlers&lt;/code&gt; has been specified along with the associated data these handlers will be called with the appropriate parameters before this method returns.</source>
          <target state="translated">모든 노드에 대해 노드를 가져 오면 소스 노드의 &lt;code&gt;nodeName&lt;/code&gt; 및 &lt;code&gt;nodeType&lt;/code&gt; 과 동일한 속성 값과 네임 스페이스 ( &lt;code&gt;prefix&lt;/code&gt; , &lt;code&gt;localName&lt;/code&gt; , &lt;code&gt;namespaceURI&lt;/code&gt; ) 관련 속성 이있는 가져 오는 문서가 소유 한 노드 객체가 생성됩니다 . 에서와 같이 &lt;code&gt;cloneNode&lt;/code&gt; 의 작업, 소스 노드는 변경되지 않습니다. 가져온 노드와 연관된 사용자 데이터는 전달되지 않습니다. 그러나 &lt;code&gt;UserDataHandlers&lt;/code&gt; 가 연관된 데이터와 함께 지정된 경우이 메소드가 리턴되기 전에 이러한 핸들러가 적절한 매개 변수와 함께 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="fff19286ba16ce8c5ee3fad0096b6268cca888dc" translate="yes" xml:space="preserve">
          <source>For all standard look and feels shipped with Java, the popup list portion of combo box is implemented as a &lt;code&gt;JPopupMenu&lt;/code&gt;. A custom look and feel may not implement it this way and will therefore not receive the notification.</source>
          <target state="translated">Java와 함께 제공되는 모든 표준 룩앤필의 경우 콤보 상자의 팝업 목록 부분은 &lt;code&gt;JPopupMenu&lt;/code&gt; 로 구현됩니다 . 커스텀 룩앤필은 이러한 방식으로 구현하지 않을 수 있으므로 알림을받지 못합니다.</target>
        </trans-unit>
        <trans-unit id="d5f49a747ab61666aaa19b73ef2d730ad3979e34" translate="yes" xml:space="preserve">
          <source>For all the methods in this interface that write bytes, it is generally true that if a byte cannot be written for any reason, an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">바이트를 쓰는이 인터페이스의 모든 메소드에 대해, 어떤 이유로 든 바이트를 쓸 수 없으면 &lt;code&gt;IOException&lt;/code&gt; 이 발생 하는 것이 일반적입니다 .</target>
        </trans-unit>
        <trans-unit id="a1d8562753037dc3765edd632190008e36ebc975" translate="yes" xml:space="preserve">
          <source>For an enumerated attribute that is not a notation, the parser will report the type as &quot;NMTOKEN&quot;.</source>
          <target state="translated">표기법이 아닌 열거 된 속성의 경우 구문 분석기는 유형을 &quot;NMTOKEN&quot;으로보고합니다.</target>
        </trans-unit>
        <trans-unit id="e639711714e682a35eeaff0dc11893d2ea350fd1" translate="yes" xml:space="preserve">
          <source>For an example implementation of a simple file view, see &lt;code&gt;&lt;i&gt;yourJDK&lt;/i&gt;/demo/jfc/FileChooserDemo/ExampleFileView.java&lt;/code&gt;. For more information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">단순 파일보기의 구현 예는 &lt;code&gt;&lt;i&gt;yourJDK&lt;/i&gt;/demo/jfc/FileChooserDemo/ExampleFileView.java&lt;/code&gt; 참조하십시오 . 자세한 내용과 예제 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="020289f3dd3403c4bcc33a4ae44e8a65e5d11873" translate="yes" xml:space="preserve">
          <source>For an example of specifying custom bounded range models used by sliders, see &lt;a href=&quot;http://www.oracle.com/technetwork/java/architecture-142923.html#separable&quot;&gt;Separable model architecture&lt;/a&gt; in &lt;em&gt;A Swing Architecture Overview.&lt;/em&gt;</source>
          <target state="translated">슬라이더에 사용되는 사용자 지정 범위 모델을 지정하는 예는 &lt;em&gt;A Swing 아키텍처 개요의 &lt;/em&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/architecture-142923.html#separable&quot;&gt;분리 가능한 모델 아키텍처&lt;/a&gt; 를 참조하세요 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06208486ae9eecd5757942a7e65903f3d3de5ea1" translate="yes" xml:space="preserve">
          <source>For an input &lt;code&gt;Locale&lt;/code&gt; with a non-empty script value, append candidate &lt;code&gt;Locale&lt;/code&gt;s by omitting the final component up to language, then append candidates generated from the &lt;code&gt;Locale&lt;/code&gt; with country and variant restored:</source>
          <target state="translated">비어 있지 않은 스크립트 값을 가진 입력 &lt;code&gt;Locale&lt;/code&gt; 의 경우 최종 구성 요소를 언어까지 생략하여 후보 &lt;code&gt;Locale&lt;/code&gt; 을 추가 한 다음 &lt;code&gt;Locale&lt;/code&gt; 에서 생성 된 후보 를 국가 및 변형이 복원 된 상태로 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="f24e11a909288b53c92f020d081b5941027a9a2b" translate="yes" xml:space="preserve">
          <source>For an input &lt;code&gt;Locale&lt;/code&gt; with a variant value consisting of multiple subtags separated by underscore, generate candidate &lt;code&gt;Locale&lt;/code&gt;s by omitting the variant subtags one by one, then insert them after every occurrence of &lt;code&gt; Locale&lt;/code&gt;s with the full variant value in the original list. For example, if the the variant consists of two subtags &lt;em&gt;V1&lt;/em&gt; and &lt;em&gt;V2&lt;/em&gt;:</source>
          <target state="translated">밑줄로 구분 된 여러 하위 태그로 구성된 변형 값이 있는 입력 &lt;code&gt;Locale&lt;/code&gt; 의 경우 변형 하위 태그를 하나씩 생략하여 후보 &lt;code&gt;Locale&lt;/code&gt; 생성 한 다음 원래 목록에서 전체 변형 값을 가진 &lt;code&gt; Locale&lt;/code&gt; 발생할 때마다 삽입합니다 . 예를 들어, 변형이 두 개의 하위 태그 &lt;em&gt;V1&lt;/em&gt; 및 &lt;em&gt;V2&lt;/em&gt; 로 구성된 경우 :</target>
        </trans-unit>
        <trans-unit id="d400172b9de026958a8a6177cb13b5b1342bf935" translate="yes" xml:space="preserve">
          <source>For an input &lt;code&gt;Locale&lt;/code&gt; with a variant value consisting of multiple subtags separated by underscore, generate candidate &lt;code&gt;Locale&lt;/code&gt;s by omitting the variant subtags one by one, then insert them after every occurrence of &lt;code&gt; Locale&lt;/code&gt;s with the full variant value in the original list. For example, if the variant consists of two subtags &lt;em&gt;V1&lt;/em&gt; and &lt;em&gt;V2&lt;/em&gt;:</source>
          <target state="translated">밑줄로 구분 된 여러 하위 태그로 구성된 변형 값이 있는 입력 &lt;code&gt;Locale&lt;/code&gt; 의 경우 변형 하위 태그를 하나씩 생략하여 후보 &lt;code&gt;Locale&lt;/code&gt; 을 생성 한 다음 원본 목록에서 전체 변형 값이있는 &lt;code&gt; Locale&lt;/code&gt; 의 모든 항목 뒤에 삽입합니다 . 예를 들어 변형이 두 개의 하위 태그 &lt;em&gt;V1&lt;/em&gt; 및 &lt;em&gt;V2&lt;/em&gt; 로 구성된 경우 :</target>
        </trans-unit>
        <trans-unit id="5554f28ba351ad9f2739f3b06ab5e78a02202f66" translate="yes" xml:space="preserve">
          <source>For an input &lt;code&gt;Locale&lt;/code&gt; with an empty script value, append candidate &lt;code&gt;Locale&lt;/code&gt;s by omitting the final component one by one as below:</source>
          <target state="translated">빈 스크립트 값을 가진 입력 &lt;code&gt;Locale&lt;/code&gt; 과 같이 최종 구성 요소를 하나씩 생략하여 후보 &lt;code&gt;Locale&lt;/code&gt; 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="31165b31091c89e2fd334bb1aeff719d666b51eb" translate="yes" xml:space="preserve">
          <source>For an invocation of &lt;code&gt;get[Declared]AnnotationsByType( Class &amp;lt;
 T &amp;gt;)&lt;/code&gt;, the order of annotations which are directly or indirectly present on an element</source>
          <target state="translated">&lt;code&gt;get[Declared]AnnotationsByType( Class &amp;lt; T &amp;gt;)&lt;/code&gt; 의 호출의 경우 , 요소에 직접 또는 간접적으로 존재하는 주석의 순서</target>
        </trans-unit>
        <trans-unit id="e404249bab7df0d9f0bfdf9d7675a615c61bed52" translate="yes" xml:space="preserve">
          <source>For an object to be selected, each attribute in &lt;code&gt;matchingAttributes&lt;/code&gt; must match some attribute of the object. If &lt;code&gt;matchingAttributes&lt;/code&gt; is empty or null, all objects in the target context are returned.</source>
          <target state="translated">객체를 선택 하려면 &lt;code&gt;matchingAttributes&lt;/code&gt; 의 각 속성 이 객체의 일부 속성과 일치 해야합니다. 경우 &lt;code&gt;matchingAttributes&lt;/code&gt; 의가 비어 있거나 null의 경우, 타겟 문맥의 모든 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1695e50b38967e03ed9d5f91ca77d368a7c4cc92" translate="yes" xml:space="preserve">
          <source>For an online tutorial on using Java GSS-API, please see &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jgss_tutorial&quot;&gt;Introduction to JAAS and Java GSS-API&lt;/a&gt;.</source>
          <target state="translated">Java GSS-API 사용에 대한 온라인 자습서는 &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jgss_tutorial&quot;&gt;JAAS 및 Java GSS-API 소개를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="672bc788ec93ca82f67bd27cfd38341ecdffcf48" translate="yes" xml:space="preserve">
          <source>For an option that has a notion of on and off, and requires a non-boolean parameter, setting its value to anything other than</source>
          <target state="translated">on 및 off 개념이 있고 부울이 아닌 매개 변수가 필요한 옵션의 경우 값을 다른 값으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="47a2e8dcbeb920d5c4463c83794d2144225623e9" translate="yes" xml:space="preserve">
          <source>For an overview of control flow, please refer to the  Java Logging Overview.</source>
          <target state="translated">제어 흐름에 대한 개요는 Java 로깅 개요를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2b3cc5049557f2a0ba9631abbd655dc628ca214a" translate="yes" xml:space="preserve">
          <source>For an overview of control flow, please refer to the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=logging_overview&quot;&gt;Java Logging Overview&lt;/a&gt;</source>
          <target state="translated">제어 흐름에 대한 개요는 &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=logging_overview&quot;&gt;Java 로깅 개요&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="91e6254ad7f3187beb07deedc7152811a9b226c5" translate="yes" xml:space="preserve">
          <source>For an overview, API outline, and design rationale, please see:</source>
          <target state="translated">개요, API 개요 및 설계 근거는 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="dd7ca935a2ead39c5e628b5614647f54e1fa8e1b" translate="yes" xml:space="preserve">
          <source>For any TimeUnit &lt;code&gt;unit&lt;/code&gt;, &lt;code&gt;unit.convert(Duration.ofNanos(n))&lt;/code&gt; is equivalent to &lt;code&gt;unit.convert(n, NANOSECONDS)&lt;/code&gt;, and &lt;code&gt;unit.convert(Duration.of(n, unit.toChronoUnit()))&lt;/code&gt; is equivalent to &lt;code&gt;n&lt;/code&gt; (in the absence of overflow).</source>
          <target state="translated">모든 TimeUnit &lt;code&gt;unit&lt;/code&gt; 경우 &lt;code&gt;unit.convert(Duration.ofNanos(n))&lt;/code&gt; 은 &lt;code&gt;unit.convert(n, NANOSECONDS)&lt;/code&gt; 이고 &lt;code&gt;unit.convert(Duration.of(n, unit.toChronoUnit()))&lt;/code&gt; 은 &lt;code&gt;n&lt;/code&gt; 과 같습니다. (오버플로가없는 경우).</target>
        </trans-unit>
        <trans-unit id="f9bb1854efb2037b61a2381563ca86cef944af4f" translate="yes" xml:space="preserve">
          <source>For any URI</source>
          <target state="translated">모든 URI</target>
        </trans-unit>
        <trans-unit id="15869691dfda7153f19720f10e40b12cb9c1361f" translate="yes" xml:space="preserve">
          <source>For any given &lt;code&gt;ZoneRules&lt;/code&gt;, this list contains the transition rules for years beyond those years that have been fully defined. These rules typically refer to future daylight saving time rule changes.</source>
          <target state="translated">지정된 &lt;code&gt;ZoneRules&lt;/code&gt; 에 대해이 목록에는 완전히 정의 된 연도를 초과 한 연도의 전환 규칙이 포함됩니다. 이러한 규칙은 일반적으로 미래 일광 절약 시간제 규칙 변경을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a5920c7d4c6dce56729e14f9ea7a334529f36c3e" translate="yes" xml:space="preserve">
          <source>For any given &lt;em&gt;J&lt;/em&gt;, the following rules are consulted to determine how to reconstruct instances of &lt;em&gt;J&lt;/em&gt; from &lt;code&gt;CompositeData&lt;/code&gt;. The first applicable rule in the list is the one that will be used.</source>
          <target state="translated">주어진 &lt;em&gt;J&lt;/em&gt; 에 대해 다음 규칙을 참조하여 &lt;code&gt;CompositeData&lt;/code&gt; 에서 &lt;em&gt;J&lt;/em&gt; 인스턴스를 재구성하는 방법을 결정합니다 . 목록의 첫 번째 적용 가능한 규칙이 사용될 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="f9a3d499ad5719ec12b5122ad9ea8dea7bfd468b" translate="yes" xml:space="preserve">
          <source>For any given caller class &lt;code&gt;C&lt;/code&gt;, the lookup object returned by this call has equivalent capabilities to any lookup object supplied by the JVM to the bootstrap method of an &lt;a href=&quot;package-summary#indyinsn&quot;&gt;invokedynamic instruction&lt;/a&gt; executing in the same caller class &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">주어진 호출자 클래스 &lt;code&gt;C&lt;/code&gt; 에 대해 ,이 호출에 의해 리턴 된 검색 오브젝트 는 동일한 호출자 클래스 &lt;code&gt;C&lt;/code&gt; 에서 실행 되는 &lt;a href=&quot;package-summary#indyinsn&quot;&gt;invokedynamic 명령&lt;/a&gt; 의 부트 스트랩 메소드에 JVM이 제공하는 모든 검색 오브젝트와 동등한 기능을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="9c1f31057dd8317785675f53700838ecaa796cec" translate="yes" xml:space="preserve">
          <source>For any non-null reference value &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;x.equals(null)&lt;/code&gt; should return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">null이 아닌 참조 값 &lt;code&gt;x&lt;/code&gt; 의 경우 &lt;code&gt;x.equals(null)&lt;/code&gt; 은 &lt;code&gt;false&lt;/code&gt; 를 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c97665dbad552eb3f7ddd81577b124767987cf43" translate="yes" xml:space="preserve">
          <source>For any operation which may potentially block, the &lt;code&gt;SSLEngine&lt;/code&gt; will create a &lt;a href=&quot;../../../java/lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; delegated task. When &lt;code&gt;SSLEngineResult&lt;/code&gt; indicates that a delegated task result is needed, the application must call &lt;a href=&quot;#getDelegatedTask()&quot;&gt;&lt;code&gt;getDelegatedTask()&lt;/code&gt;&lt;/a&gt; to obtain an outstanding delegated task and call its &lt;a href=&quot;../../../java/lang/runnable#run()&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method (possibly using a different thread depending on the compute strategy). The application should continue obtaining delegated tasks until no more exist, and try the original operation again.</source>
          <target state="translated">잠재적으로 차단 될 수있는 모든 작업에 대해 &lt;code&gt;SSLEngine&lt;/code&gt; 은 &lt;a href=&quot;../../../java/lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt; 위임 작업을 생성합니다 . 때 &lt;code&gt;SSLEngineResult&lt;/code&gt; 의가 위임 된 작업 결과가 필요하다는 것을 나타냅니다, 응용 프로그램이 호출해야 &lt;a href=&quot;#getDelegatedTask()&quot;&gt; &lt;code&gt;getDelegatedTask()&lt;/code&gt; &lt;/a&gt; 자사의 뛰어난 위임 된 작업을 획득하고 호출하는 &lt;a href=&quot;../../../java/lang/runnable#run()&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; (아마도 컴퓨팅 전략에 따라 다른 스레드를 사용하는) 방법을. 응용 프로그램은 더 이상 존재하지 않을 때까지 위임 된 작업을 계속 얻고 원래 작업을 다시 시도해야합니다.</target>
        </trans-unit>
        <trans-unit id="d3a43fcb61e7d55a42e559584605cc4e5de48fb5" translate="yes" xml:space="preserve">
          <source>For any operation which may potentially block, the &lt;code&gt;SSLEngine&lt;/code&gt; will create a &lt;a href=&quot;../../../java/lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; delegated task. When &lt;code&gt;SSLEngineResult&lt;/code&gt; indicates that a delegated task result is needed, the application must call &lt;a href=&quot;sslengine#getDelegatedTask--&quot;&gt;&lt;code&gt;getDelegatedTask()&lt;/code&gt;&lt;/a&gt; to obtain an outstanding delegated task and call its &lt;a href=&quot;../../../java/lang/runnable#run--&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method (possibly using a different thread depending on the compute strategy). The application should continue obtaining delegated tasks until no more exist, and try the original operation again.</source>
          <target state="translated">잠재적으로 차단 될 수있는 모든 작업에 대해 &lt;code&gt;SSLEngine&lt;/code&gt; 은 &lt;a href=&quot;../../../java/lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt; 위임 된 작업을 만듭니다 . 때 &lt;code&gt;SSLEngineResult&lt;/code&gt; 의가 위임 된 작업 결과가 필요하다는 것을 나타냅니다, 응용 프로그램이 호출해야 &lt;a href=&quot;sslengine#getDelegatedTask--&quot;&gt; &lt;code&gt;getDelegatedTask()&lt;/code&gt; &lt;/a&gt; 자사의 뛰어난 위임 된 작업을 획득하고 호출하는 &lt;a href=&quot;../../../java/lang/runnable#run--&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; (아마도 컴퓨팅 전략에 따라 다른 스레드를 사용하는) 방법을. 응용 프로그램은 더 이상 존재하지 않을 때까지 위임 된 태스크를 계속 확보하고 원래 조작을 다시 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="303f6d979b65ea5b20387f8d0d52177ce7aece89" translate="yes" xml:space="preserve">
          <source>For any possible combination of properties, it must be the case that either (a) there are no applicable constructors, or (b) there is exactly one applicable constructor, or (c) one of the applicable constructors names a proper superset of the properties named by each other applicable constructor. (In other words, there should never be ambiguity over which constructor to choose.) If this condition is not true, then &lt;em&gt;J&lt;/em&gt; is not reconstructible.</source>
          <target state="translated">가능한 속성 조합의 경우 (a) 적용 가능한 생성자가 없거나 (b) 정확히 하나의 적용 가능한 생성자가 있거나 (c) 적용 가능한 생성자 중 하나가 적절한 속성의 상위 집합을 나타내는 경우 여야합니다. 서로 적용 가능한 생성자에 의해 명명됩니다. 즉, 어떤 생성자를 선택할지 모호하지 않아야합니다.이 조건이 맞지 않으면 &lt;em&gt;J&lt;/em&gt; 를 재구성 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bddc8af9dd10e096d924d66436e9ef54cc935cc8" translate="yes" xml:space="preserve">
          <source>For any set of member methods of the specified interfaces that have the same signature:</source>
          <target state="translated">서명이 동일한 지정된 인터페이스의 멤버 메소드 세트의 경우 :</target>
        </trans-unit>
        <trans-unit id="56442df5927179f1a6098b0fb71e28daadccff02" translate="yes" xml:space="preserve">
          <source>For any two &lt;a href=&quot;#normalize()&quot;&gt;&lt;code&gt;normalized&lt;/code&gt;&lt;/a&gt; paths</source>
          <target state="translated">&lt;a href=&quot;#normalize()&quot;&gt; &lt;code&gt;normalized&lt;/code&gt; &lt;/a&gt; 두 경로의 경우</target>
        </trans-unit>
        <trans-unit id="3e41f32017f7ee715d47faca8dd77871008af685" translate="yes" xml:space="preserve">
          <source>For any two &lt;a href=&quot;path#normalize--&quot;&gt;&lt;code&gt;normalized&lt;/code&gt;&lt;/a&gt; paths</source>
          <target state="translated">&lt;a href=&quot;path#normalize--&quot;&gt; &lt;code&gt;normalized&lt;/code&gt; &lt;/a&gt; 두 경로</target>
        </trans-unit>
        <trans-unit id="517a45648675ff4a8ec5f16ff462f43183929a6b" translate="yes" xml:space="preserve">
          <source>For any two arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;Arrays.deepEquals(a, b)&lt;/code&gt;, it is also the case that &lt;code&gt;Arrays.deepHashCode(a) == Arrays.deepHashCode(b)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Arrays.deepEquals(a, b)&lt;/code&gt; 와 같은 두 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 의 경우 &lt;code&gt;Arrays.deepHashCode(a) == Arrays.deepHashCode(b)&lt;/code&gt; 도 마찬가지입니다 .</target>
        </trans-unit>
        <trans-unit id="d7f039f4ee8f8c7899d92fe740d72a7ceecc652f" translate="yes" xml:space="preserve">
          <source>For any two arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;Arrays.equals(a, b)&lt;/code&gt;, it is also the case that &lt;code&gt;Arrays.hashCode(a) == Arrays.hashCode(b)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Arrays.equals(a, b)&lt;/code&gt; 와 같은 두 배열 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 의 경우 &lt;code&gt;Arrays.hashCode(a) == Arrays.hashCode(b)&lt;/code&gt; 도 마찬가지입니다 .</target>
        </trans-unit>
        <trans-unit id="50c13d4d9a4a05c66127be14d162123493eb1960" translate="yes" xml:space="preserve">
          <source>For applications that require separate or custom pools, a &lt;code&gt;
 ForkJoinPool&lt;/code&gt; may be constructed with a given target parallelism level; by default, equal to the number of available processors. The pool attempts to maintain enough active (or available) threads by dynamically adding, suspending, or resuming internal worker threads, even if some tasks are stalled waiting to join others. However, no such adjustments are guaranteed in the face of blocked I/O or other unmanaged synchronization. The nested &lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt;&lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt;&lt;/a&gt; interface enables extension of the kinds of synchronization accommodated. The default policies may be overridden using a constructor with parameters corresponding to those documented in class &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">별도 또는 사용자 지정 풀이 필요한 응용 프로그램의 경우 &lt;code&gt; ForkJoinPool&lt;/code&gt; 은 지정된 대상 병렬 처리 수준으로 구성 될 수 있습니다. 기본적으로 사용 가능한 프로세서 수와 같습니다. 풀은 내부 작업자 스레드를 동적으로 추가, 일시 중단 또는 다시 시작하여 충분한 활성 (또는 사용 가능한) 스레드를 유지하려고합니다. 그러나 차단 된 I / O 또는 기타 관리되지 않는 동기화에 대해서는 그러한 조정이 보장되지 않습니다. 중첩 된 &lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt; &lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt; &lt;/a&gt; 인터페이스는 수용되는 동기화 종류의 확장을 가능하게합니다. 기본 정책은 &lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt; 클래스에 문서화 된 매개 변수에 해당하는 생성자를 사용하여 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="38c95ac0e5ee06e24fd22793e2ce4273207b6f1b" translate="yes" xml:space="preserve">
          <source>For applications that require separate or custom pools, a &lt;code&gt;ForkJoinPool&lt;/code&gt; may be constructed with a given target parallelism level; by default, equal to the number of available processors. The pool attempts to maintain enough active (or available) threads by dynamically adding, suspending, or resuming internal worker threads, even if some tasks are stalled waiting to join others. However, no such adjustments are guaranteed in the face of blocked I/O or other unmanaged synchronization. The nested &lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt;&lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt;&lt;/a&gt; interface enables extension of the kinds of synchronization accommodated.</source>
          <target state="translated">별도 또는 사용자 지정 풀이 필요한 응용 프로그램의 경우 지정된 대상 병렬 수준 으로 &lt;code&gt;ForkJoinPool&lt;/code&gt; 을 구성 할 수 있습니다. 기본적으로 사용 가능한 프로세서 수와 같습니다. 풀은 일부 작업이 다른 작업에 참여하기 위해 대기중인 경우에도 내부 작업자 스레드를 동적으로 추가, 일시 중단 또는 다시 시작하여 충분한 활성 (또는 사용 가능한) 스레드를 유지하려고합니다. 그러나 차단 된 I / O 또는 기타 관리되지 않는 동기화에 대해서는 그러한 조정이 보장되지 않습니다. 중첩 된 &lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt; &lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt; &lt;/a&gt; 인터페이스를 통해 수용된 동기화 종류를 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f91bee41b9f0f38479a69127829658c3bf0fdc4" translate="yes" xml:space="preserve">
          <source>For attribute deletion, the &lt;code&gt;oldValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the attributes that were deleted and the &lt;code&gt;newValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">속성 삭제의 경우 &lt;code&gt;oldValue&lt;/code&gt; 는 삭제 된 속성을 지정 하는 &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; 이고 &lt;code&gt;newValue&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="de4a1a4fc7bcc7759e5169bb4e3695aebd6d72a1" translate="yes" xml:space="preserve">
          <source>For attribute insertion, the &lt;code&gt;oldValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;newValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the attributes that were inserted.</source>
          <target state="translated">속성 삽입의 경우 &lt;code&gt;oldValue&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 이고 &lt;code&gt;newValue&lt;/code&gt; 는 삽입 된 속성을 지정 하는 &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7b797d58d23f752dad3874f09960108a8631712e" translate="yes" xml:space="preserve">
          <source>For attribute replacement, the &lt;code&gt;oldValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the old attributes and the &lt;code&gt;newValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the new attributes.</source>
          <target state="translated">속성 대체의 경우 &lt;code&gt;oldValue&lt;/code&gt; 는 이전 속성을 지정 하는 &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; 이고 &lt;code&gt;newValue&lt;/code&gt; 는 새 속성을 지정 하는 &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c1ec5918a6d9f50e0141b230359e5a36edff1550" translate="yes" xml:space="preserve">
          <source>For attributes that do not have a value, eg in the html string &lt;code&gt;&amp;lt;foo blah&amp;gt;&lt;/code&gt; the attribute &lt;code&gt;blah&lt;/code&gt; does not have a value, there are two possible values that will be placed in the AttributeSet's value:</source>
          <target state="translated">값이없는 속성의 경우 (예 : html 문자열 &lt;code&gt;&amp;lt;foo blah&amp;gt;&lt;/code&gt; 에서 &lt;code&gt;blah&lt;/code&gt; 속성 에 값이없는 경우) AttributeSet의 값에 배치되는 두 가지 가능한 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="95ed3f80aff525e72ff7e832911773bbc97584d8" translate="yes" xml:space="preserve">
          <source>For attributes with simple types like &lt;code&gt;String&lt;/code&gt;, the code is the same. But for attributes with complex types, the Standard MBean code requires the client to know the model-specific class &lt;code&gt;MemoryUsage&lt;/code&gt;, while the MXBean code requires no non-standard classes.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 과 같은 간단한 유형의 속성의 경우 코드는 동일합니다. 그러나 복잡한 유형의 속성의 경우 표준 MBean 코드는 클라이언트가 모델 특정 클래스 &lt;code&gt;MemoryUsage&lt;/code&gt; 를 알아야 하고 MXBean 코드는 비표준 클래스를 요구하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c4fab09feb3e54113c9216a1e3ca7fa7048e7079" translate="yes" xml:space="preserve">
          <source>For automatic resolution, the JVM will attempt:</source>
          <target state="translated">자동 해결을 위해 JVM은 다음을 시도합니다.</target>
        </trans-unit>
        <trans-unit id="d871cfa6c9c9f6c82792af65fcf7d3606b93ca9e" translate="yes" xml:space="preserve">
          <source>For backward compatibility only.</source>
          <target state="translated">이전 버전과의 호환성을 위해서만.</target>
        </trans-unit>
        <trans-unit id="2dbf16ba6cc26b54f2c6512e1d8ce287b0e62968" translate="yes" xml:space="preserve">
          <source>For backward compatibility reasons, this constructor does not make any syntactic checks on the input.</source>
          <target state="translated">이전 버전과의 호환성을 위해이 생성자는 입력을 구문 검사하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="05c30d7bf617454fd8352c370ce9f9f50b74ec49" translate="yes" xml:space="preserve">
          <source>For backwards compatibility with java.awt.Scrollbar.</source>
          <target state="translated">java.awt.Scrollbar와의 하위 호환성을 위해.</target>
        </trans-unit>
        <trans-unit id="8a6bf3c30b081b88a860bdb2bd21000efb904e7f" translate="yes" xml:space="preserve">
          <source>For best effect the array of images should be sorted with each image being both wider and taller than the previous image. The base image need not be the first image in the array. No exception will be thrown if the images are not sorted as suggested.</source>
          <target state="translated">최상의 효과를 얻으려면 각 이미지가 이전 이미지보다 더 넓고 더 큰 이미지 배열을 정렬해야합니다. 기본 이미지는 배열의 첫 번째 이미지 일 필요는 없습니다. 이미지가 제안 된대로 정렬되지 않으면 예외가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="17835bd9b9354b2892a0048837e748fcfe653316" translate="yes" xml:space="preserve">
          <source>For best performance with DirectByteBuffer and other ByteBuffer implementations without a backing array implementers of this interface should override this method.</source>
          <target state="translated">DirectByteBuffer 및 기타 ByteBuffer 구현에서 최상의 성능을 얻으려면이 인터페이스의 지원 배열 구현자가이 메서드를 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="073bbe5e1b66df166e9794a39c7b6f884c662cc0" translate="yes" xml:space="preserve">
          <source>For better interoperability, providers generally will not define default matchers so that by default servers will ignore the SNI extension and continue the handshake.</source>
          <target state="translated">더 나은 상호 운용성을 위해 공급자는 일반적으로 기본 매처를 정의하지 않으므로 기본적으로 서버는 SNI 확장을 무시하고 핸드 셰이크를 계속합니다.</target>
        </trans-unit>
        <trans-unit id="cca08cc09febef93d032435d9c4255a6e6e18ba0" translate="yes" xml:space="preserve">
          <source>For both cases, the</source>
          <target state="translated">두 경우 모두</target>
        </trans-unit>
        <trans-unit id="c4d463bbf2fe5789f5217439ba539c52ab170002" translate="yes" xml:space="preserve">
          <source>For both the glob and regex syntaxes, the matching details, such as whether the matching is case sensitive, are implementation-dependent and therefore not specified.</source>
          <target state="translated">glob 및 regex 구문 모두에서, 일치가 대소 문자를 구분하는지 여부와 같은 일치 세부 사항은 구현에 따라 다르므로 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f4f7996d01312f8239e8f1c9e505592ed105c276" translate="yes" xml:space="preserve">
          <source>For byte print data where the doc flavor's MIME type does not include a &lt;code&gt;charset&lt;/code&gt; parameter, the Java Print Service instance assumes the US-ASCII character set by default. This is in accordance with &lt;a href=&quot;http://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC 2046&lt;/a&gt;, which says the default character set is US-ASCII. Note that US-ASCII is a subset of UTF-8, so in the future this may be widened if a future RFC endorses UTF-8 as the default in a compatible manner.</source>
          <target state="translated">doc 플레이버의 MIME 유형에 &lt;code&gt;charset&lt;/code&gt; 매개 변수가 포함되지 않은 바이트 인쇄 데이터의 경우 Java Print Service 인스턴스는 기본적으로 US-ASCII 문자 세트를 가정합니다. 이것은 기본 문자 세트가 US-ASCII라고하는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC 2046에 따릅니다&lt;/a&gt; . US-ASCII는 UTF-8의 서브 세트이므로 향후 RFC가 UTF-8을 호환 가능한 방식으로 UTF-8을 기본값으로 승인하면 향후 확장 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac581c88bc40b5cf6864e589bc43b4587632243f" translate="yes" xml:space="preserve">
          <source>For case 1, the standard defines 6 External Identifier Entries:</source>
          <target state="translated">사례 1의 경우 표준은 6 개의 외부 식별자 항목을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="2158e4905738669493d41aa356ae5a26a31c5fb5" translate="yes" xml:space="preserve">
          <source>For category</source>
          <target state="translated">카테고리</target>
        </trans-unit>
        <trans-unit id="493fb455f79d6f5a46952719d20ecc6eeb7f5fdc" translate="yes" xml:space="preserve">
          <source>For changes, the indexes in the model correspond exactly to the indexes of items currently displayed in the UI. As a result, it is not really critical if the indexes are not in their exact order. But after multiple inserts or deletes, the items currently in the UI no longer correspond to the items in the model. It is therefore critical to specify the indexes properly for inserts and deletes.</source>
          <target state="translated">변경의 경우 모델의 인덱스는 현재 UI에 표시된 항목의 인덱스와 정확히 일치합니다. 결과적으로 인덱스가 정확한 순서가 아닌 경우 실제로 중요하지 않습니다. 그러나 여러 번 삽입 또는 삭제 한 후에는 현재 UI에있는 항목이 더 이상 모델의 항목과 일치하지 않습니다. 따라서 삽입 및 삭제를 위해 인덱스를 적절하게 지정하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="fef748ac030e30703db542a8e771c10aa0800fe8" translate="yes" xml:space="preserve">
          <source>For character, integral, and date/time argument types and the percent and line separator conversions, the precision is not applicable; if a precision is provided, an exception will be thrown.</source>
          <target state="translated">문자, 정수 및 날짜 / 시간 인수 유형과 백분율 및 행 구분 기호 변환의 경우 정밀도는 적용되지 않습니다. 정밀도가 제공되면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d28b3cb820593d18d0522bb723602638bfcf56b2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Chromaticity&lt;/code&gt;, the category is the class &lt;code&gt;Chromaticity&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;Chromaticity&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;Chromaticity&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="d415c9cccb331a919c9a37503f45b493a42ee157" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Chromaticity&lt;/code&gt;, the category name is &lt;code&gt;&quot;chromaticity&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Chromaticity&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;chromaticity&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a08bb5776b9cfe8be5d8a3756ef83386fadad9a2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;ColorSupported&lt;/code&gt;, the category is class &lt;code&gt;ColorSupported&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;ColorSupported&lt;/code&gt; 클래스의 경우 카테고리는 &lt;code&gt;ColorSupported&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="b0ce571c7a663ed5d52b97d295749ba27179815c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;ColorSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;color-supported&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ColorSupported&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;color-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="64ae434f2d5d4a3fff36f72140166915fe0f0670" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Compression&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;Compression&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;Compression&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주는 &lt;code&gt;Compression&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="3594b927522dc78dd96dca67fce427013a38c26b" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Compression&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;compression&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Compression&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;compression&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d9227b8c83270facc8092f5849402e0baf4b41db" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Copies&lt;/code&gt;, the category is class &lt;code&gt;Copies&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;Copies&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;Copies&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="ba4b1762cf51ed962a6816d2e83c8a8782ab842a" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Copies&lt;/code&gt;, the category name is &lt;code&gt;&quot;copies&quot;&lt;/code&gt;.</source>
          <target state="translated">클래스 &lt;code&gt;Copies&lt;/code&gt; 의 경우 카테고리 이름은 &lt;code&gt;&quot;copies&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="60808f90322f0f05d6f6603e8f2eb346176b5e18" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;CopiesSupported&lt;/code&gt;, the category is class &lt;code&gt;CopiesSupported&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;CopiesSupported&lt;/code&gt; 클래스의 경우 카테고리는 &lt;code&gt;CopiesSupported&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="1132b95eebdf19ac3a9f165b390a05fff19cff48" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;CopiesSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;copies-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CopiesSupported&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;copies-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5e43e6051f2371e24c9a3a4bb6f3e6f735df0db3" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtCompleted&lt;/code&gt;, the category is class &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;DateTimeAtCompleted&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="655d759164ec3857f08b7fa6d47937f94a784819" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtCompleted&lt;/code&gt;, the category name is &lt;code&gt;&quot;date-time-at-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DateTimeAtCompleted&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;date-time-at-completed&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="14656bb248336a5257496932a8eb2cd29b5fd33d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtCreation&lt;/code&gt;, the category is class &lt;code&gt;DateTimeAtCreation&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;DateTimeAtCreation&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;DateTimeAtCreation&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="0792d5ec956eac683ab95ef01d19d3b57855f6e9" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtCreation&lt;/code&gt;, the category name is &lt;code&gt;&quot;date-time-at-creation&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DateTimeAtCreation&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;date-time-at-creation&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="11c8f45cf11b552c8f2c8a016730c3593e230ca4" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtProcessing&lt;/code&gt;, the category is class &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;DateTimeAtProcessing&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="3bf5ac1ab73b2e92a88287c9eb0414c6a61e482e" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtProcessing&lt;/code&gt;, the category name is &lt;code&gt;&quot;date-time-at-processing&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DateTimeAtProcessing&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;date-time-at-processing&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4942219f21a4207883d87d7930b7431fa3b29072" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Destination&lt;/code&gt;, the category is class &lt;code&gt;Destination&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;Destination&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;Destination&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="deda631a067c22149233cccdffe59c6d75c76dac" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Destination&lt;/code&gt;, the category name is &lt;code&gt;&quot;spool-data-destination&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Destination&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;spool-data-destination&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cf29dceddc85483e8af252e66f736091d61a382c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DialogOwner&lt;/code&gt;, the category is class &lt;code&gt;DialogOwner&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;DialogOwner&lt;/code&gt; 클래스의 경우 카테고리는 &lt;code&gt;DialogOwner&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="03a2149e1712fe5a603a98d083af6dc9c9ed17de" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DialogOwner&lt;/code&gt;, the category name is &lt;code&gt;&quot;dialog-owner&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DialogOwner&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;dialog-owner&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="acf904161ed76860c0994b62c896138bdf5f4973" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DialogTypeSelection&lt;/code&gt; the category is class &lt;code&gt;DialogTypeSelection&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;DialogTypeSelection&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;DialogTypeSelection&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="04fe5a1fb70f631502839130f0cde6c12cc2e684" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DialogTypeSelection&lt;/code&gt; the category name is &lt;code&gt;&quot;dialog-type-selection&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DialogTypeSelection&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;dialog-type-selection&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f3df1ed3889799f0cc9000cb73a0aa67f508f66c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DocumentName&lt;/code&gt;, the category is class &lt;code&gt;DocumentName&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;DocumentName&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;DocumentName&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="b384f9bcb81973d3bd2377c3c549638f655ae155" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DocumentName&lt;/code&gt;, the category name is &lt;code&gt;&quot;document-name&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DocumentName&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;document-name&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dffb5f5542b491af975e49f95d2d9bf5cabd7af5" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Fidelity&lt;/code&gt; the category is class &lt;code&gt;Fidelity&lt;/code&gt; itself.</source>
          <target state="translated">클래스 &lt;code&gt;Fidelity&lt;/code&gt; 의 경우 카테고리는 클래스 &lt;code&gt;Fidelity&lt;/code&gt; 자체입니다.</target>
        </trans-unit>
        <trans-unit id="20969333ff4d78bf1acc7bbc4fe3839c7ceb38ad" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Fidelity&lt;/code&gt; the category name is &lt;code&gt;&quot;ipp-attribute-fidelity&quot;&lt;/code&gt;.</source>
          <target state="translated">클래스 &lt;code&gt;Fidelity&lt;/code&gt; 의 경우 카테고리 이름은 &lt;code&gt;&quot;ipp-attribute-fidelity&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6bcae80a55ba301caeba9a167edbd76f27ec2cfb" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Finishings&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;Finishings&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;Finishings&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주는 &lt;code&gt;Finishings&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="f502df05b02df1a6fad24fdec36a0ba73f4b360f" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Finishings&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;finishings&quot;&lt;/code&gt;.</source>
          <target state="translated">클래스의 경우 &lt;code&gt;Finishings&lt;/code&gt; 및 벤더 정의의 임의의 서브 클래스의 경우, 카테고리 이름입니다 &lt;code&gt;&quot;finishings&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9138edb232c7d25c27fb0cbb8514a33c89e0d4fe" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobHoldUntil&lt;/code&gt;, the category is class &lt;code&gt;JobHoldUntil&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobHoldUntil&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;JobHoldUntil&lt;/code&gt; 클래스입니다. 자체 입니다.</target>
        </trans-unit>
        <trans-unit id="59255afcdf5b62648f96e2d898de04879aca04dc" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobHoldUntil&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-hold-until&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobHoldUntil&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-hold-until&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b733eec5c34e5514fce56f36f45c32a1b7621e3d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressions&lt;/code&gt;, the category is class &lt;code&gt;JobImpressions&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobImpressions&lt;/code&gt; 클래스 의 경우 카테고리는 &lt;code&gt;JobImpressions&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="b22164745904bdffe4012dbef01071d3be958f1c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressions&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-impressions&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobImpressions&lt;/code&gt; 클래스 의 경우 카테고리 이름은 &lt;code&gt;&quot;job-impressions&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9dc34015ab6092445747ed527c8de64f3e6d68b5" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressionsCompleted&lt;/code&gt;, the category is class &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobImpressionsCompleted&lt;/code&gt; 클래스 의 경우 카테고리는 &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="808bd0a53e48fe942deb6fc6a1395db0c8e956e2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressionsCompleted&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-impressions-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobImpressionsCompleted&lt;/code&gt; 클래스 의 경우 카테고리 이름은 다음과 같습니다. &lt;code&gt;&quot;job-impressions-completed&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="58fb14ac702a12646d5a3f94cbd4e196aed09157" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressionsSupported&lt;/code&gt;, the category is class &lt;code&gt;JobImpressionsSupported&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobImpressionsSupported&lt;/code&gt; 클래스 의 경우 범주는 &lt;code&gt;JobImpressionsSupported&lt;/code&gt; 클래스입니다. 자체 입니다.</target>
        </trans-unit>
        <trans-unit id="fc05e148fb4f5d33943f34ab554bb2ebc93fad13" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressionsSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-impressions-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobImpressionsSupported&lt;/code&gt; 클래스 의 경우 카테고리 이름은 &lt;code&gt;&quot;job-impressions-supported&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="2b7866559e50650c0ea85dbe42ae498d16cc3590" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctets&lt;/code&gt;, the category is class &lt;code&gt;JobKOctets&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobKOctets&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;JobKOctets&lt;/code&gt; 클래스입니다. 자체 입니다.</target>
        </trans-unit>
        <trans-unit id="816150e3208cca1801c018306f1a3295f575c31d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctets&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-k-octets&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobKOctets&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-k-octets&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="efbba27aa0018ded888c154729d5e098d6b69e94" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctetsProcessed&lt;/code&gt;, the category is class &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobKOctetsProcessed&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="213c08dccfdc04e5d7c6e47adf67da8362fea255" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctetsProcessed&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-k-octets-processed&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobKOctetsProcessed&lt;/code&gt; 클래스의 경우 카테고리 이름은 다음과 같습니다. &lt;code&gt;&quot;job-k-octets-processed&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="db99a1ab1fb34e0c66669d2d3b6ccfb8953374b6" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctetsSupported&lt;/code&gt;, the category is class &lt;code&gt;JobKOctetsSupported&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobKOctetsSupported&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;JobKOctetsSupported&lt;/code&gt; 클래스입니다. 자체 입니다.</target>
        </trans-unit>
        <trans-unit id="645fa31556f47a99fdd4eb2cf90983ea3450ba2c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctetsSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-k-octets-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobKOctetsSupported&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-k-octets-supported&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="83160315cc75fd1c9b5dd70f74d4dcc9daa54ce8" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheets&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;JobMediaSheets&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobMediaSheets&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주는 &lt;code&gt;JobMediaSheets&lt;/code&gt; 클래스 입니다. 자체 .</target>
        </trans-unit>
        <trans-unit id="c99112f52ab7cb24d955b8bcf5130eb8ac030fe9" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheets&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-media-sheets&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobMediaSheets&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-media-sheets&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="ecf4fe34811ac21bd597a213357327f2ba6dc9b4" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt;, the category is class &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; 클래스의 경우 카테고리는 &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; 자체 클래스 입니다 .</target>
        </trans-unit>
        <trans-unit id="b5630d7c9c62f2e8906936d4aebf54f72936caad" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-media-sheets-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-media-sheets-completed&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cb328c0c04306f5ee9e8e69fdcd5663001bd35fe" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt;, the category is class &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobMediaSheetsSupported&lt;/code&gt; 클래스의 경우 카테고리는 &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt; 자체 클래스 입니다 .</target>
        </trans-unit>
        <trans-unit id="0981fc2a2845325cf4fbec85e53a83736471f12f" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-media-sheets-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobMediaSheetsSupported&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-media-sheets-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7a1f965c47d82a5bd4255b3c08bff75ebe3067cb" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMessageFromOperator&lt;/code&gt;, the category is class &lt;code&gt;JobMessageFromOperator&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobMessageFromOperator&lt;/code&gt; 클래스의 경우 카테고리는 &lt;code&gt;JobMessageFromOperator&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="15ca4e1a2ef02625373afb3a8ea48784b55afd51" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMessageFromOperator&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-message-from-operator&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobMessageFromOperator&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-message-from-operator&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7014dc1746ed2d70fbe8eb9e241f0fe183904c57" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobName&lt;/code&gt;, the category is class &lt;code&gt;JobName&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobName&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;JobName&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="7709f8dbe2a0c960b7ea245541c77e973c122773" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobName&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-name&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobName&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-name&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="e7cc545d10342f25edb19988907e1a3f84a83b37" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobOriginatingUserName&lt;/code&gt;, the category is class &lt;code&gt;JobOriginatingUserName&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobOriginatingUserName&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;JobOriginatingUserName&lt;/code&gt; 클래스입니다 . 자체입니다.</target>
        </trans-unit>
        <trans-unit id="c4c8d6a361320e7c77bd8ca0a37c7de1c3e11651" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobOriginatingUserName&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-originating-user-name&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobOriginatingUserName&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-originating-user-name&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="3ca3d32dcec276c163dc2bb82a9485e442017910" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobPriority&lt;/code&gt;, the category is class &lt;code&gt;JobPriority&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobPriority&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;JobPriority&lt;/code&gt; 클래스입니다. 자체 입니다.</target>
        </trans-unit>
        <trans-unit id="dbd937057ae3d2e3b6da932fe824766faf8ed666" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobPriority&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-priority&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobPriority&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-priority&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="337f5fb950aed492131369272a4028563cc4f5c0" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobPrioritySupported&lt;/code&gt;, the category is class &lt;code&gt;JobPrioritySupported&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobPrioritySupported&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;JobPrioritySupported&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="9909364a2e07ee3d588288da910a3ae210eb639a" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobPrioritySupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-priority-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobPrioritySupported&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-priority-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5ff202a7cdfa19a262a89fc6db7ccd86dbc9467c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobSheets&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;JobSheets&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobSheets&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주는 &lt;code&gt;JobSheets&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="f27538ed1ddb73ce5056ae4bbb1c4e1028ec49c3" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobSheets&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobSheets&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8d6e2bf39b838c441356fb9c2f2a6321554ebdb0" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobState&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;JobState&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobState&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주는 &lt;code&gt;JobState&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="7948091150cb89dcf8610ba89354a6f66b6195cb" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobState&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobState&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주 이름은 &lt;code&gt;&quot;job-state&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="db5aec678b04c5f093d19482dc31ea3599a71d1d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobStateReason&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;JobStateReason&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;JobStateReason&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주는 &lt;code&gt;JobStateReason&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="ddabdfadd6db301e8c14cf75c850b9f73495247d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobStateReason&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JobStateReason&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d2d4c85ced765ba9420d8235aaceec753f47d678" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobStateReasons&lt;/code&gt;, the category is class JobStateReasons itself.</source>
          <target state="translated">&lt;code&gt;JobStateReasons&lt;/code&gt; 클래스의 경우 범주는 JobStateReasons 자체 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="4ce0bcf24cc33aee46a2745b9353c2ec9699d8cc" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Media&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;Media&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;Media&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주는 &lt;code&gt;Media&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="8b9dcb85907a52aa8c61ed87a8d7bfaaeeb7a334" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Media&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Media&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주 이름은 &lt;code&gt;&quot;media&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="6af424ef24c2cc298a45af9f744641ceb796aa4a" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MediaPrintableArea&lt;/code&gt;, the category is class &lt;code&gt;MediaPrintableArea&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;MediaPrintableArea&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;MediaPrintableArea&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="bd581e9be565e27401828a839897dc8509d3ae60" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MediaPrintableArea&lt;/code&gt;, the category name is &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MediaPrintableArea&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f14c05573e4e4e0f005253421a5eea87e5fb21e1" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MediaSize&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;MediaSize&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;MediaSize&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주는 &lt;code&gt;MediaSize&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="2e54d922083cba58a63325fada3809515733f0b8" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MediaSize&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media-size&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MediaSize&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주 이름은 &lt;code&gt;&quot;media-size&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="5f7cdf1a7a906e2bad80da5ed77640a6d4efa70a" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;MultipleDocumentHandling&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주는 &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; 클래스입니다. 자체입니다.</target>
        </trans-unit>
        <trans-unit id="88543f947d8d2cac51efea0463708890b1a9d7e7" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MultipleDocumentHandling&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1edde13f7f0675ff291dfa8a2be552a3ac2f9cde" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberOfDocuments&lt;/code&gt;, the category is class &lt;code&gt;NumberOfDocuments&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;NumberOfDocuments&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;NumberOfDocuments&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="65358eb4b3a8d71da5c918602b60db56780bf3d8" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberOfDocuments&lt;/code&gt;, the category name is &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NumberOfDocuments&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6b5d1dec37ff2c59ff91b25e4d08c2e91cf29825" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt;, the category is class &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;NumberOfInterveningJobs&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="f4d1c75eddb30112fdcc815455d71357baedf59c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt;, the category name is &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NumberOfInterveningJobs&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="16f9f116d9b8c668a9e4dec8ab4f8f9a123efd81" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberUp&lt;/code&gt;, the category is class &lt;code&gt;NumberUp&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;NumberUp&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;NumberUp&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="cdaea036c5015e82aa6f74ab8b8250e5a90467c0" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberUp&lt;/code&gt;, the category name is &lt;code&gt;&quot;number-up&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NumberUp&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;number-up&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="db3ad675fb50e8ab6bbb56c5e52ef3fd946d6859" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberUpSupported&lt;/code&gt;, the category is class &lt;code&gt;NumberUpSupported&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;NumberUpSupported&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;NumberUpSupported&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="42d8a46fe7900b17b3e05c3875c84620be08542d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberUpSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NumberUpSupported&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="094fbf2a4e844c3c2c32bbeee1b82ff5aba57b90" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;OrientationRequested&lt;/code&gt;, the category is class &lt;code&gt;OrientationRequested&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;OrientationRequested&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;OrientationRequested&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="4b62c93b27193c1b3037d8c97009083498563176" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;OrientationRequested&lt;/code&gt;, the category name is &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OrientationRequested&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="320df60bfe89f09ecd197b1122d42da77bc5f614" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;OutputDeviceAssigned&lt;/code&gt;, the category is class &lt;code&gt;OutputDeviceAssigned&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;OutputDeviceAssigned&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;OutputDeviceAssigned&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="dc786fb2a1e0624d80b47c9d7b6ed6b170a60708" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;OutputDeviceAssigned&lt;/code&gt;, the category name is &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OutputDeviceAssigned&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9c14542e34aa6f9011496e8c6ea0a2b80e155e0c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PDLOverrideSupported&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;PDLOverrideSupported&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PDLOverrideSupported&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주는 &lt;code&gt;PDLOverrideSupported&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="956aafd90394517a584b8a6306788fdcbbbcfeda" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PDLOverrideSupported&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PDLOverrideSupported&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="87a47d44264349bbe07ace50838fc97777fdc2ea" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PageRanges&lt;/code&gt;, the category is class &lt;code&gt;PageRanges&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PageRanges&lt;/code&gt; 클래스의 경우 카테고리는 &lt;code&gt;PageRanges&lt;/code&gt; 클래스입니다. 자체입니다.</target>
        </trans-unit>
        <trans-unit id="c8a339d7d653e44875b291f65edc488d2969009f" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PageRanges&lt;/code&gt;, the category name is &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PageRanges&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="115eddcdc42a3b60e89212ee76ad7ff19fd0a780" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PagesPerMinute&lt;/code&gt;, the category is class &lt;code&gt;PagesPerMinute&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PagesPerMinute&lt;/code&gt; 클래스의 경우 카테고리는 &lt;code&gt;PagesPerMinute&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="7e622c30e20df7b5298a59ab398e0e9e3e446ce6" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PagesPerMinute&lt;/code&gt;, the category name is &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PagesPerMinute&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="28500e2397d2df5af3f078bfca882ca66ab9b4b1" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PagesPerMinuteColor&lt;/code&gt;, the category is class &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PagesPerMinuteColor&lt;/code&gt; 클래스의 경우 카테고리는 &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="9a9e1ccf0ceca5d1bcdb42b35e5b5e0d52a7c419" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PagesPerMinuteColor&lt;/code&gt;, the category name is &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PagesPerMinuteColor&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="00959ba0ab72d526bab12adfd055ad63926868d6" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PresentationDirection&lt;/code&gt; the category is class &lt;code&gt;PresentationDirection&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PresentationDirection&lt;/code&gt; 클래스의 경우 카테고리는 &lt;code&gt;PresentationDirection&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="6f17f1e5db63d85c5d350134c5ca25284b295805" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PresentationDirection&lt;/code&gt; the category name is &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PresentationDirection&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="981266fd31ec32217d65c3b871e9dcb8aa2889ec" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrintQuality&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;PrintQuality&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PrintQuality&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주는 &lt;code&gt;PrintQuality&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="096e5bfdc0150ee1a32d02b01844bf2eb131775f" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrintQuality&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PrintQuality&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2ae9b92f6c62741b602403c234fd05021be6c9f5" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterInfo&lt;/code&gt;, the category is class &lt;code&gt;PrinterInfo&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PrinterInfo&lt;/code&gt; 클래스의 경우 카테고리는 &lt;code&gt;PrinterInfo&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="ea4467ffc8eb4e3675540439235243624d532f1e" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterInfo&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PrinterInfo&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f52ca5f9b7fa4f1e5c6c014121228c991b611178" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt;, the category is class &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt; 클래스입니다. 자체 입니다.</target>
        </trans-unit>
        <trans-unit id="04639f95e4cba4098a6af5ece8ed55d54554fdc2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2bc5fbaaf05325545a21fec29284f6bb18d6e299" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterLocation&lt;/code&gt;, the category is class &lt;code&gt;PrinterLocation&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PrinterLocation&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;PrinterLocation&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="b48061d1d9b4f07e8663e29e12fcc992d280f005" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterLocation&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PrinterLocation&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f0466ffcaed2552569f4058ad0aed42632a5904c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMakeAndModel&lt;/code&gt;, the category is class &lt;code&gt;PrinterMakeAndModel&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PrinterMakeAndModel&lt;/code&gt; 클래스의 경우 카테고리는 &lt;code&gt;PrinterMakeAndModel&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="bb0209d756a3df05f51dd111c7a97ce67755fa9e" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMakeAndModel&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PrinterMakeAndModel&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fd37715e5a97491707bc78044ed8560f007c8599" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt;, the category is class &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 클래스의 경우 카테고리는 &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="59e46641735175bb438057d752641acfbdfc932c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e54e601e49b39715d26242ff2e36a5377c3c10d2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMoreInfo&lt;/code&gt;, the category is class &lt;code&gt;PrinterMoreInfo&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PrinterMoreInfo&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;PrinterMoreInfo&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="562b18dc3df2d86018273600219b9224ee65925d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMoreInfo&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PrinterMoreInfo&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="87e6261a14b558d62e92a7574730af701e2a77b3" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt;, the category is class &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="b128b3f601d31a9fed02bf997242828c9ef17b9c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d0177a37ebc3971ca01f3ebc2d7b1a343cd066f1" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterName&lt;/code&gt;, the category is class &lt;code&gt;PrinterName&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PrinterName&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;PrinterName&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="e41cc43259baf0e8d291cc8c60f60063e52bc227" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterName&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PrinterName&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="93033efa411651c9c82bb05cbf7b51f7667deac1" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterResolution&lt;/code&gt;, the category is class &lt;code&gt;PrinterResolution&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PrinterResolution&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;PrinterResolution&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="5b71ccef80b2709a36fa21680f1058e357266cef" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterResolution&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PrinterResolution&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="83b314e1253f9fcc958220395220b8d24a7d35b1" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterState&lt;/code&gt;, the category is class &lt;code&gt;PrinterState&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PrinterState&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;PrinterState&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="e4a91740778e2ea8ceb6d494e6b727792db09454" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterState&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PrinterState&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="10a9debf4fa883f23ed603ace0c7306c7202c6c8" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterStateReason&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;PrinterStateReason&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PrinterStateReason&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주는 &lt;code&gt;PrinterStateReason&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="0ba9247d7b0fd0bcd77a9d48b2c567b1b6596386" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterStateReason&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PrinterStateReason&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d45c3e696d17f1d57d2e2b9b8399c52298c0d4e2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterStateReasons&lt;/code&gt;, the category is class &lt;code&gt;PrinterStateReasons&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PrinterStateReasons&lt;/code&gt; 클래스의 경우 카테고리는 &lt;code&gt;PrinterStateReasons&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="106d22eb7c0114f9308e920977b99bf643ee60c9" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterStateReasons&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PrinterStateReasons&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b046c0ce0226444bbf3a129ac27e3b80e8a258ef" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterURI&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;PrinterURI&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;PrinterURI&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주는 &lt;code&gt;PrinterURI&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="b6ebd48868937e30a8d5fcf9f1bb9231109f26eb" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterURI&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PrinterURI&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="80d86bdcdc0b6f31ba19a1d809650a5cc19cb95f" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;QueuedJobCount&lt;/code&gt;, the category is class &lt;code&gt;QueuedJobCount&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;QueuedJobCount&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;QueuedJobCount&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="b98309c92978d8e0a9ac179a3faa4a096f1e0038" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;QueuedJobCount&lt;/code&gt;, the category name is &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;QueuedJobCount&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="30f7aa4e2338e2e7148dabafb81ddbbfd93da7fe" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 범주는 &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="840fc27a3d9b1d6f704a32a1dddc8f95b096d909" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; 클래스 및 공급 업체 정의 하위 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d1e7f3b059656d4f2ff6b28b20cc87a142bea915" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;RequestingUserName&lt;/code&gt;, the category is class &lt;code&gt;RequestingUserName&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;RequestingUserName&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;RequestingUserName&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="d20f8a71ccf1e045cf6888df43b41358dec22085" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;RequestingUserName&lt;/code&gt;, the category name is &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RequestingUserName&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b9ba32caeef489048fa4488170877fd65e1e98e0" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Severity&lt;/code&gt;, the category is class &lt;code&gt;Severity&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;Severity&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;Severity&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="cb18adea534a448a6f7f71636e8e1048df54cba2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Severity&lt;/code&gt;, the category name is &lt;code&gt;&quot;severity&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Severity&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;severity&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="068893aaa345b0934cf6b04443696125f0f09efb" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;SheetCollate&lt;/code&gt;, the category is class &lt;code&gt;SheetCollate&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;SheetCollate&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;SheetCollate&lt;/code&gt; 자체 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="35d7e7b93a1099a46fb8580bcedb8d9fa76e2e18" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;SheetCollate&lt;/code&gt;, the category name is &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SheetCollate&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7f4fffb8875c80f5383599a79b7eebdc442a1514" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Sides&lt;/code&gt;, the category is class &lt;code&gt;Sides&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;Sides&lt;/code&gt; 클래스의 경우 범주는 &lt;code&gt;Sides&lt;/code&gt; 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="bf931919a6c408dd027cc758002facf190de42d6" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Sides&lt;/code&gt;, the category name is &lt;code&gt;&quot;sides&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Sides&lt;/code&gt; 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;sides&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f5648c3e8105f10d35eb80098924d18a37f7091d" translate="yes" xml:space="preserve">
          <source>For class Chromaticity, the category is the class Chromaticity itself.</source>
          <target state="translated">반음계 클래스의 경우 범주는 반음계 자체입니다.</target>
        </trans-unit>
        <trans-unit id="108c1dc27fdbdded9fcdf4a1834817f795fb00cd" translate="yes" xml:space="preserve">
          <source>For class Chromaticity, the category name is &lt;code&gt;&quot;chromaticity&quot;&lt;/code&gt;.</source>
          <target state="translated">Chromaticity 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;chromaticity&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2a39f1eef25f18ccbc61b64eb319f52340e01059" translate="yes" xml:space="preserve">
          <source>For class ColorSupported, the category is class ColorSupported itself.</source>
          <target state="translated">ColorSupported 클래스의 경우, 카테고리는 ColorSupported 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="ff00115704149d68dd8049554c74a33a4809381f" translate="yes" xml:space="preserve">
          <source>For class ColorSupported, the category name is &lt;code&gt;&quot;color-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">ColorSupported 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;color-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6841c351659dffecdee476f9d976c7bad52f4cfb" translate="yes" xml:space="preserve">
          <source>For class Compression and any vendor-defined subclasses, the category is class Compression itself.</source>
          <target state="translated">클래스 압축 및 벤더 정의 서브 클래스의 경우 카테고리는 클래스 압축 자체입니다.</target>
        </trans-unit>
        <trans-unit id="d729d0565837f2cbe34af3ab43c8185785856634" translate="yes" xml:space="preserve">
          <source>For class Compression and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;compression&quot;&lt;/code&gt;.</source>
          <target state="translated">클래스 압축 및 벤더 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;compression&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="aa23b4a89f45a7c95055fc175887b5e4546faa1f" translate="yes" xml:space="preserve">
          <source>For class Copies, the category is class Copies itself.</source>
          <target state="translated">클래스 사본의 경우 카테고리는 클래스 사본 자체입니다.</target>
        </trans-unit>
        <trans-unit id="1c3b5a32d1d86538da8be3869f27f2f3fae01303" translate="yes" xml:space="preserve">
          <source>For class Copies, the category name is &lt;code&gt;&quot;copies&quot;&lt;/code&gt;.</source>
          <target state="translated">Copies 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;copies&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e9ad24ebaa9d2bbd6c6810c848b3f07c9d64ad75" translate="yes" xml:space="preserve">
          <source>For class CopiesSupported, the category is class CopiesSupported itself.</source>
          <target state="translated">CopiesSupported 클래스의 경우 카테고리는 CopiesSupported 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="e90e4814b2b84639ae07fb1fa1c5de162ce2633e" translate="yes" xml:space="preserve">
          <source>For class CopiesSupported, the category name is &lt;code&gt;&quot;copies-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">CopiesSupported 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;copies-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f9fb488767eb1e03e046cc6b9129359083fd7e81" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtCompleted, the category is class DateTimeAtCompleted itself.</source>
          <target state="translated">DateTimeAtCompleted 클래스의 경우 카테고리는 DateTimeAtCompleted 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="0aa0c50cf51c142b1338e3884c76c0f4308158cf" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtCompleted, the category name is &lt;code&gt;&quot;date-time-at-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">DateTimeAtCompleted 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;date-time-at-completed&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d72e63612ff9b0b9e0c5df81b2fbfa5244b420a8" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtCreation, the category is class DateTimeAtCreation itself.</source>
          <target state="translated">DateTimeAtCreation 클래스의 경우 카테고리는 DateTimeAtCreation 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="9ffdc086db7b7f83c7202ddde482fa984134a1bf" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtCreation, the category name is &lt;code&gt;&quot;date-time-at-creation&quot;&lt;/code&gt;.</source>
          <target state="translated">DateTimeAtCreation 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;date-time-at-creation&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9bb8163507239d55563a9971e7bef6dcbdf2740d" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtProcessing, the category is class DateTimeAtProcessing itself.</source>
          <target state="translated">DateTimeAtProcessing 클래스의 경우 카테고리는 DateTimeAtProcessing 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="2df77ccb07ad51751cd6f1ef440abc4db57d994c" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtProcessing, the category name is &lt;code&gt;&quot;date-time-at-processing&quot;&lt;/code&gt;.</source>
          <target state="translated">DateTimeAtProcessing 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;date-time-at-processing&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fe6e42ec6c63048fdce164f7d6643bdc40fe87bb" translate="yes" xml:space="preserve">
          <source>For class Destination, the category is class Destination itself.</source>
          <target state="translated">대상 클래스의 경우 카테고리는 클래스 대상 자체입니다.</target>
        </trans-unit>
        <trans-unit id="d0d9faf2ddfcd290fafc07e72901de35be14f36d" translate="yes" xml:space="preserve">
          <source>For class Destination, the category name is &lt;code&gt;&quot;spool-data-destination&quot;&lt;/code&gt;.</source>
          <target state="translated">Destination 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;spool-data-destination&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="01ee9f15d74d9403c6f26efa52fcb02871b59554" translate="yes" xml:space="preserve">
          <source>For class DialogTypeSelection the category is class DialogTypeSelection itself.</source>
          <target state="translated">DialogTypeSelection 클래스의 경우 카테고리는 DialogTypeSelection 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="642fa2af2eb683de8bcd81a8b9b443fedab0ba84" translate="yes" xml:space="preserve">
          <source>For class DialogTypeSelection the category name is &lt;code&gt;&quot;dialog-type-selection&quot;&lt;/code&gt;.</source>
          <target state="translated">DialogTypeSelection 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;dialog-type-selection&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="60f14abbf1de6231274552162be52f779347f3ce" translate="yes" xml:space="preserve">
          <source>For class DocumentName, the category is class DocumentName itself.</source>
          <target state="translated">DocumentName 클래스의 경우 카테고리는 DocumentName 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="830ced725afc984767a2835c456e086919af3378" translate="yes" xml:space="preserve">
          <source>For class DocumentName, the category name is &lt;code&gt;&quot;document-name&quot;&lt;/code&gt;.</source>
          <target state="translated">DocumentName 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;document-name&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="caed1e6577cea6150d76ee55b8099ae194884ffd" translate="yes" xml:space="preserve">
          <source>For class Fidelity the category is class Fidelity itself.</source>
          <target state="translated">Fidelity 클래스의 경우 카테고리는 Fidelity 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="72b5ca593603250a92503220ff5235518e303788" translate="yes" xml:space="preserve">
          <source>For class Fidelity the category name is &lt;code&gt;&quot;ipp-attribute-fidelity&quot;&lt;/code&gt;.</source>
          <target state="translated">Fidelity 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;ipp-attribute-fidelity&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e68a4f3ea42523f4fb43117aeb9975dc9a43c21c" translate="yes" xml:space="preserve">
          <source>For class Finishings and any vendor-defined subclasses, the category is class Finishings itself.</source>
          <target state="translated">마감재 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리는 마감재 자체입니다.</target>
        </trans-unit>
        <trans-unit id="072c553018aa7a054a2c949c1715c7c4ebc299a5" translate="yes" xml:space="preserve">
          <source>For class Finishings and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;finishings&quot;&lt;/code&gt;.</source>
          <target state="translated">마감 및 클래스 공급 업체 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;finishings&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c1f72f98ea9f48ec133fcad772e4204ccb5d8347" translate="yes" xml:space="preserve">
          <source>For class JobHoldUntil, the category is class JobHoldUntil itself.</source>
          <target state="translated">JobHoldUntil 클래스의 경우 카테고리는 JobHoldUntil 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="57fc18fed0e561d81a33486ad4422d45550bdad9" translate="yes" xml:space="preserve">
          <source>For class JobHoldUntil, the category name is &lt;code&gt;&quot;job-hold-until&quot;&lt;/code&gt;.</source>
          <target state="translated">JobHoldUntil 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-hold-until&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f87388d84c0cd1cd502b8c68cb111b2c9b91ed2a" translate="yes" xml:space="preserve">
          <source>For class JobImpressions, the category is class JobImpressions itself.</source>
          <target state="translated">JobImpressions 클래스의 경우 카테고리는 JobImpressions 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="a96a56d6666c4e5440f41152ab488f26f2b42211" translate="yes" xml:space="preserve">
          <source>For class JobImpressions, the category name is &lt;code&gt;&quot;job-impressions&quot;&lt;/code&gt;.</source>
          <target state="translated">JobImpressions 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-impressions&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3dab7fc1f5a61485f3d310a640183120e2ad5dce" translate="yes" xml:space="preserve">
          <source>For class JobImpressionsCompleted, the category is class JobImpressionsCompleted itself.</source>
          <target state="translated">JobImpressionsCompleted 클래스의 경우 카테고리는 JobImpressionsCompleted 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="5bb94f9b9e7eb12e2fbdb0554263847e34fd6c7b" translate="yes" xml:space="preserve">
          <source>For class JobImpressionsCompleted, the category name is &lt;code&gt;&quot;job-impressions-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">JobImpressionsCompleted 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-impressions-completed&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2029d43e377c9cd467e1c54f3a31db20467c2f54" translate="yes" xml:space="preserve">
          <source>For class JobImpressionsSupported, the category is class JobImpressionsSupported itself.</source>
          <target state="translated">JobImpressionsSupported 클래스의 경우 카테고리는 JobImpressionsSupported 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="1bdb26f5642486fcdce0f7b936a35850818cc5cf" translate="yes" xml:space="preserve">
          <source>For class JobImpressionsSupported, the category name is &lt;code&gt;&quot;job-impressions-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">JobImpressionsSupported 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-impressions-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8d250895f59ad6e992d0e5d73e1347e9543dea90" translate="yes" xml:space="preserve">
          <source>For class JobKOctets, the category is class JobKOctets itself.</source>
          <target state="translated">JobKOctets 클래스의 경우 카테고리는 JobKOctets 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="eeccbba1a19328125b0a65d5e7ac7661f4a7691d" translate="yes" xml:space="preserve">
          <source>For class JobKOctets, the category name is &lt;code&gt;&quot;job-k-octets&quot;&lt;/code&gt;.</source>
          <target state="translated">JobKOctets 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-k-octets&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5e36add3298154dae97ea9d7edb3d8f9ed151824" translate="yes" xml:space="preserve">
          <source>For class JobKOctetsProcessed, the category is class JobKOctetsProcessed itself.</source>
          <target state="translated">JobKOctetsProcessed 클래스의 경우 카테고리는 JobKOctetsProcessed 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c7217f2aeb7187b638c8fe9275ce38671a0c54d4" translate="yes" xml:space="preserve">
          <source>For class JobKOctetsProcessed, the category name is &lt;code&gt;&quot;job-k-octets-processed&quot;&lt;/code&gt;.</source>
          <target state="translated">JobKOctetsProcessed 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-k-octets-processed&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="277761b4bb7736fe7d84fc442aa2477e16cadd2e" translate="yes" xml:space="preserve">
          <source>For class JobKOctetsSupported, the category is class JobKOctetsSupported itself.</source>
          <target state="translated">JobKOctetsSupported 클래스의 경우 카테고리는 JobKOctetsSupported 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="81f1df5ec312d750080964f5858176ea6699e751" translate="yes" xml:space="preserve">
          <source>For class JobKOctetsSupported, the category name is &lt;code&gt;&quot;job-k-octets-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">JobKOctetsSupported 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;job-k-octets-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="83879756c441ec6aa9ec68c5376e07ab19d87175" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheets and any vendor-defined subclasses, the category is class JobMediaSheets itself.</source>
          <target state="translated">JobMediaSheets 클래스 및 벤더 정의 서브 클래스의 경우 카테고리는 JobMediaSheets 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="839ddc60e912395e6ec39e66f1d9e8be69ebe9b3" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheets and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-media-sheets&quot;&lt;/code&gt;.</source>
          <target state="translated">JobMediaSheets 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-media-sheets&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="72031f84675b63fbd5c5611982a0745c20e13834" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheetsCompleted, the category is class JobMediaSheetsCompleted itself.</source>
          <target state="translated">JobMediaSheetsCompleted 클래스의 경우 카테고리는 JobMediaSheetsCompleted 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d31e00461dae435c9e5673020b363aada5bdb12f" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheetsCompleted, the category name is &lt;code&gt;&quot;job-media-sheets-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">JobMediaSheetsCompleted 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-media-sheets-completed&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2dda8ee7e3c54ebc779b8ce4b0974e5dcf20c93f" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheetsSupported, the category is class JobMediaSheetsSupported itself.</source>
          <target state="translated">JobMediaSheetsSupported 클래스의 경우 카테고리는 JobMediaSheetsSupported 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="3c7de85d18c607ebfca61b06434fe4ca9f17d56a" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheetsSupported, the category name is &lt;code&gt;&quot;job-media-sheets-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">JobMediaSheetsSupported 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-media-sheets-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b136e5a2b0e75b390435d00967defe1aadb4fcce" translate="yes" xml:space="preserve">
          <source>For class JobMessageFromOperator, the category is class JobMessageFromOperator itself.</source>
          <target state="translated">JobMessageFromOperator 클래스의 경우 카테고리는 JobMessageFromOperator 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="dfd0912c1635fd736d9bd773edea20b754970dab" translate="yes" xml:space="preserve">
          <source>For class JobMessageFromOperator, the category name is &lt;code&gt;&quot;job-message-from-operator&quot;&lt;/code&gt;.</source>
          <target state="translated">JobMessageFromOperator 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-message-from-operator&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2b26e19c92d09f2a21f892100a4ce3ba1afe7195" translate="yes" xml:space="preserve">
          <source>For class JobName, the category is class JobName itself.</source>
          <target state="translated">JobName 클래스의 경우 카테고리는 JobName 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="1ff6b5618e3eea85578b89c260a2d70593970b46" translate="yes" xml:space="preserve">
          <source>For class JobName, the category name is &lt;code&gt;&quot;job-name&quot;&lt;/code&gt;.</source>
          <target state="translated">JobName 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-name&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9d136061f06a6eb64e17fd79f01a59636540321e" translate="yes" xml:space="preserve">
          <source>For class JobOriginatingUserName, the category is class JobOriginatingUserName itself.</source>
          <target state="translated">JobOriginatingUserName 클래스의 경우 카테고리는 JobOriginatingUserName 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="ae8079d08471672e9fcf735403adad4f4f24c6c7" translate="yes" xml:space="preserve">
          <source>For class JobOriginatingUserName, the category name is &lt;code&gt;&quot;job-originating-user-name&quot;&lt;/code&gt;.</source>
          <target state="translated">JobOriginatingUserName 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-originating-user-name&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a05f171ac5f709f2cd7d09a32b6a05afc1f6907c" translate="yes" xml:space="preserve">
          <source>For class JobPriority, the category is class JobPriority itself.</source>
          <target state="translated">JobPriority 클래스의 경우 카테고리는 JobPriority 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="8777ec4ed750ff80f83b39defbe79e536f44eb5f" translate="yes" xml:space="preserve">
          <source>For class JobPriority, the category name is &lt;code&gt;&quot;job-priority&quot;&lt;/code&gt;.</source>
          <target state="translated">JobPriority 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-priority&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ce89f591c0067b7a68b741b72cc42339698a78d7" translate="yes" xml:space="preserve">
          <source>For class JobPrioritySupported, the category is class JobPrioritySupported itself.</source>
          <target state="translated">JobPrioritySupported 클래스의 경우 카테고리는 JobPrioritySupported 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="654e506ea040f608f4dc353c2d822c054cc8dceb" translate="yes" xml:space="preserve">
          <source>For class JobPrioritySupported, the category name is &lt;code&gt;&quot;job-priority-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">JobPrioritySupported 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-priority-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="08635b4d2c31b178cab0dff6331454a2ce0e3829" translate="yes" xml:space="preserve">
          <source>For class JobSheets and any vendor-defined subclasses, the category is class JobSheets itself.</source>
          <target state="translated">JobSheets 클래스 및 벤더 정의 서브 클래스의 경우 카테고리는 JobSheets 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="71446d47b48784e7ff553bd8da1658389b5d2f23" translate="yes" xml:space="preserve">
          <source>For class JobSheets and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt;.</source>
          <target state="translated">JobSheets 클래스 및 벤더 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a8170f7f0ffca7b963fce46f1c79886b100ded91" translate="yes" xml:space="preserve">
          <source>For class JobState and any vendor-defined subclasses, the category is class JobState itself.</source>
          <target state="translated">JobState 클래스 및 벤더 정의 서브 클래스의 경우 카테고리는 JobState 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="de1cfc9b5e2eca0387a6cbf6b9671b5e0909f312" translate="yes" xml:space="preserve">
          <source>For class JobState and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state&quot;&lt;/code&gt;.</source>
          <target state="translated">JobState 클래스 및 벤더 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-state&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="653376caf1a3418e9063f33ff2fe20a57da04c8f" translate="yes" xml:space="preserve">
          <source>For class JobStateReason and any vendor-defined subclasses, the category is class JobStateReason itself.</source>
          <target state="translated">JobStateReason 클래스 및 벤더 정의 서브 클래스의 경우 카테고리는 JobStateReason 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="b3ddae2ef6f7432cf73b5be9105ad4ecf53afcd2" translate="yes" xml:space="preserve">
          <source>For class JobStateReason and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">JobStateReason 클래스 및 벤더 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dfbdbe2790acae32d23312b21eddd8d7e025518d" translate="yes" xml:space="preserve">
          <source>For class JobStateReasons, the category is class JobStateReasons itself.</source>
          <target state="translated">JobStateReasons 클래스의 경우 카테고리는 JobStateReasons 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="23baf7c64ea9b95a67a83036824005151d4ee4ad" translate="yes" xml:space="preserve">
          <source>For class JobStateReasons, the category name is &lt;code&gt;&quot;job-state-reasons&quot;&lt;/code&gt;.</source>
          <target state="translated">JobStateReasons 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;job-state-reasons&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="76e305ec9df07083f4a03bce58c310f04a069567" translate="yes" xml:space="preserve">
          <source>For class Media and any vendor-defined subclasses, the category is class Media itself.</source>
          <target state="translated">미디어 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리는 미디어 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="63aac2809d48a40719da92a486aca03ea048211a" translate="yes" xml:space="preserve">
          <source>For class Media and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media&quot;&lt;/code&gt;.</source>
          <target state="translated">Media 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;media&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1eebe8d13bec04bb83fd3cdedb183d88549f7716" translate="yes" xml:space="preserve">
          <source>For class MediaPrintableArea, the category is class MediaPrintableArea itself.</source>
          <target state="translated">MediaPrintableArea 클래스의 경우, 카테고리는 MediaPrintableArea 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="6f3383a496f3ced46a73b82b0d97aa06701b296e" translate="yes" xml:space="preserve">
          <source>For class MediaPrintableArea, the category name is &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt;.</source>
          <target state="translated">MediaPrintableArea 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b16bb9bb31c348614af9361198929e0e4c9e3d75" translate="yes" xml:space="preserve">
          <source>For class MediaSize and any vendor-defined subclasses, the category is class MediaSize itself.</source>
          <target state="translated">MediaSize 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리는 MediaSize 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="dcaa0b98dfb736343dba9f90ceee28a35402fb0b" translate="yes" xml:space="preserve">
          <source>For class MediaSize and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media-size&quot;&lt;/code&gt;.</source>
          <target state="translated">MediaSize 클래스 및 벤더 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;media-size&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c94b84051032fff8f407be040afd8b908718b0e5" translate="yes" xml:space="preserve">
          <source>For class MultipleDocumentHandling and any vendor-defined subclasses, the category is class MultipleDocumentHandling itself.</source>
          <target state="translated">MultipleDocumentHandling 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리는 MultipleDocumentHandling 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="5a15c896684c3bdae21a952fc314bc83e432b65a" translate="yes" xml:space="preserve">
          <source>For class MultipleDocumentHandling and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt;.</source>
          <target state="translated">MultipleDocumentHandling 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9d80aca402535b79315974f7262cb5caf36ece03" translate="yes" xml:space="preserve">
          <source>For class NumberOfDocuments, the category is class NumberOfDocuments itself.</source>
          <target state="translated">NumberOfDocuments 클래스의 경우 카테고리는 NumberOfDocuments 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="7a4f4357a00f01b7773082cf51d10e445b0c684e" translate="yes" xml:space="preserve">
          <source>For class NumberOfDocuments, the category name is &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberOfDocuments 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a15143dc5c9eaa5cfb57170f82d6c2c78842dc82" translate="yes" xml:space="preserve">
          <source>For class NumberOfInterveningJobs, the category is class NumberOfInterveningJobs itself.</source>
          <target state="translated">NumberOfInterveningJobs 클래스의 경우 카테고리는 NumberOfInterveningJobs 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="4f64d68c238a1069789d44fdc2461b1b3abfd3f3" translate="yes" xml:space="preserve">
          <source>For class NumberOfInterveningJobs, the category name is &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberOfInterveningJobs 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bbebe8d07517db48f6ceb60ef3eda69a123a4ca6" translate="yes" xml:space="preserve">
          <source>For class NumberUp, the category is class NumberUp itself.</source>
          <target state="translated">NumberUp 클래스의 경우 카테고리는 NumberUp 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="679d46d1327714f3b8a4ffe2ac56338f3140bd2d" translate="yes" xml:space="preserve">
          <source>For class NumberUp, the category name is &lt;code&gt;&quot;number-up&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberUp 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;number-up&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="43898aa6f875f8e6510fb0adc64cbe5396f5d910" translate="yes" xml:space="preserve">
          <source>For class NumberUpSupported, the category is class NumberUpSupported itself.</source>
          <target state="translated">NumberUpSupported 클래스의 경우 카테고리는 NumberUpSupported 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="84efd2894a327c192bb5f0bdcaa0b6f9b76bb8f9" translate="yes" xml:space="preserve">
          <source>For class NumberUpSupported, the category name is &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberUpSupported 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="565e4c6e7614396692edb4af2f709c35214286d4" translate="yes" xml:space="preserve">
          <source>For class OrientationRequested, the category is class OrientationRequested itself.</source>
          <target state="translated">OrientationRequested 클래스의 경우 범주는 OrientationRequested 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="52fcaeb0ba5aa93429c5861479086b2d3a01eafd" translate="yes" xml:space="preserve">
          <source>For class OrientationRequested, the category name is &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt;.</source>
          <target state="translated">OrientationRequested 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="abde76b383658ea382bc59eff2fb0367dfc991de" translate="yes" xml:space="preserve">
          <source>For class OutputDeviceAssigned, the category is class OutputDeviceAssigned itself.</source>
          <target state="translated">OutputDeviceAssigned 클래스의 경우 카테고리는 OutputDeviceAssigned 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="8c848d24bcfaa87be7b3eaaafab61333297d4de5" translate="yes" xml:space="preserve">
          <source>For class OutputDeviceAssigned, the category name is &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt;.</source>
          <target state="translated">OutputDeviceAssigned 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b50e8daad8ee24c6bb2f8f8f02fb8d2ae166cd84" translate="yes" xml:space="preserve">
          <source>For class PDLOverrideSupported and any vendor-defined subclasses, the category is class PDLOverrideSupported itself.</source>
          <target state="translated">PDLOverrideSupported 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리는 PDLOverrideSupported 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="1862855f9347a76978b17a738e7c5bbb33f59cc0" translate="yes" xml:space="preserve">
          <source>For class PDLOverrideSupported and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">PDLOverrideSupported 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ce220ceb7741aa95d88a2fe3bc6c7db7d98e7d95" translate="yes" xml:space="preserve">
          <source>For class PageRanges, the category is class PageRanges itself.</source>
          <target state="translated">PageRanges 클래스의 경우 카테고리는 PageRanges 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="36e6d05319c67769fc3db5bb0ecdbb4b60392f46" translate="yes" xml:space="preserve">
          <source>For class PageRanges, the category name is &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt;.</source>
          <target state="translated">PageRanges 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c7f01eada40934f6714620dd2a2b554f377c9308" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinute, the category is class PagesPerMinute itself.</source>
          <target state="translated">PagesPerMinute 클래스의 경우 카테고리는 PagesPerMinute 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="e14ff0028ffef5fede72d51eb82a6235e41c4323" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinute, the category name is &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt;.</source>
          <target state="translated">PagesPerMinute 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d522346d833c539376b5f07c17f5f72b79dd7f0f" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinuteColor, the category is class PagesPerMinuteColor itself.</source>
          <target state="translated">PagesPerMinuteColor 클래스의 경우 카테고리는 PagesPerMinuteColor 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="7c660c99e02d7c212af35cc7873730d7af2cf120" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinuteColor, the category name is &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt;.</source>
          <target state="translated">PagesPerMinuteColor 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8aaee8c396105cb02829f6cbc1aea2b4ca171041" translate="yes" xml:space="preserve">
          <source>For class PresentationDirection the category is class PresentationDirection itself.</source>
          <target state="translated">PresentationDirection 클래스의 경우 범주는 PresentationDirection 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="09e0c06b664549dedff4cfd3e2b0109f7061132a" translate="yes" xml:space="preserve">
          <source>For class PresentationDirection the category name is &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt;.</source>
          <target state="translated">PresentationDirection 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="73ab431070b7902f07a4e2eb111942a3d3c89260" translate="yes" xml:space="preserve">
          <source>For class PrintQuality and any vendor-defined subclasses, the category is class PrintQuality itself.</source>
          <target state="translated">PrintQuality 클래스 및 벤더 정의 서브 클래스의 경우, 카테고리는 PrintQuality 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="ad6627e73fffda4d8a63d01e1314eb76d67d38ee" translate="yes" xml:space="preserve">
          <source>For class PrintQuality and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt;.</source>
          <target state="translated">PrintQuality 클래스 및 벤더 정의 서브 클래스의 경우, 카테고리 명은 &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fb6f0cc027e88992fdedf39e07582b1430266e3c" translate="yes" xml:space="preserve">
          <source>For class PrinterInfo, the category is class PrinterInfo itself.</source>
          <target state="translated">PrinterInfo 클래스의 경우, 카테고리는 PrinterInfo 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="25b6527a1b2b670e8d591c05cce9bc5e9d9447a2" translate="yes" xml:space="preserve">
          <source>For class PrinterInfo, the category name is &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterInfo 클래스의 경우, 카테고리 명은 &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="06c9256086f531efae796e8d8690666052354d1b" translate="yes" xml:space="preserve">
          <source>For class PrinterIsAcceptingJobs, the category is class PrinterIsAcceptingJobs itself.</source>
          <target state="translated">PrinterIsAcceptingJobs 클래스의 경우, 카테고리는 PrinterIsAcceptingJobs 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="3b444196d4a92442d1815635095756fb443b3c8b" translate="yes" xml:space="preserve">
          <source>For class PrinterIsAcceptingJobs, the category name is &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterIsAcceptingJobs 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="f689abe18da853c0516008897c2e59452d205a11" translate="yes" xml:space="preserve">
          <source>For class PrinterLocation, the category is class PrinterLocation itself.</source>
          <target state="translated">PrinterLocation 클래스의 경우 카테고리는 PrinterLocation 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="cd2fea8becd5eb8189e9b5472dff8986755fda80" translate="yes" xml:space="preserve">
          <source>For class PrinterLocation, the category name is &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterLocation 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="4c1dd9a747520f8dbedcf4f13a83a0e4af94e2ba" translate="yes" xml:space="preserve">
          <source>For class PrinterMakeAndModel, the category is class PrinterMakeAndModel itself.</source>
          <target state="translated">PrinterMakeAndModel 클래스의 경우, 카테고리는 PrinterMakeAndModel 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="ba4fae7b3cb6c2828fcdbaf1716fd8c108dc1d52" translate="yes" xml:space="preserve">
          <source>For class PrinterMakeAndModel, the category name is &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMakeAndModel 클래스의 경우, 카테고리 명은 &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="25e865fa5a526858929f1ec74db4ddabb2559cfd" translate="yes" xml:space="preserve">
          <source>For class PrinterMessageFromOperator, the category is class PrinterMessageFromOperator itself.</source>
          <target state="translated">PrinterMessageFromOperator 클래스의 경우 카테고리는 PrinterMessageFromOperator 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="63bdaad11dc64623e0b9ad73640ced1a04cd8190" translate="yes" xml:space="preserve">
          <source>For class PrinterMessageFromOperator, the category name is &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMessageFromOperator 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fc38988d14d54c070df510381432956fb04be2b5" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfo, the category is class PrinterMoreInfo itself.</source>
          <target state="translated">PrinterMoreInfo 클래스의 경우, 카테고리는 PrinterMoreInfo 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="07993e08f2f2ff8aca46598c2c607bf8b4f7551b" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfo, the category name is &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMoreInfo 클래스의 경우, 카테고리 명은 &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="241cfde9db629abbf16d37ecf1ba0b5701fa39bb" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfoManufacturer, the category is class PrinterMoreInfoManufacturer itself.</source>
          <target state="translated">PrinterMoreInfoManufacturer 클래스의 경우, 카테고리는 PrinterMoreInfoManufacturer 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="48561e0264312aaad1e530ded45d0c142643d71d" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfoManufacturer, the category name is &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMoreInfoManufacturer 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="3d09189884a718425f1dd44675f4544e703b2dc4" translate="yes" xml:space="preserve">
          <source>For class PrinterName, the category is class PrinterName itself.</source>
          <target state="translated">PrinterName 클래스의 경우, 카테고리는 PrinterName 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="f981b8db2489e51ff8a0c52f0213cad136f70214" translate="yes" xml:space="preserve">
          <source>For class PrinterName, the category name is &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterName 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b653a81213f2676d2a468fbe40f45aeb6bb23eb0" translate="yes" xml:space="preserve">
          <source>For class PrinterResolution, the category is class PrinterResolution itself.</source>
          <target state="translated">PrinterResolution 클래스의 경우 카테고리는 PrinterResolution 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="089c03e6282acc3da250b5bbf8c9b3c0723bc5de" translate="yes" xml:space="preserve">
          <source>For class PrinterResolution, the category name is &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterResolution 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9ddf3275c606f2df378612cccd2405b28e94d547" translate="yes" xml:space="preserve">
          <source>For class PrinterState, the category is class PrinterState itself.</source>
          <target state="translated">PrinterState 클래스의 경우, 카테고리는 PrinterState 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="cbc846db841ae5c9762311f9887a7ed626d21ac2" translate="yes" xml:space="preserve">
          <source>For class PrinterState, the category name is &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterState 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f8e4577f59fa87e6b5beb516c568387c170e4b8c" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReason and any vendor-defined subclasses, the category is class PrinterStateReason itself.</source>
          <target state="translated">PrinterStateReason 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리는 PrinterStateReason 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="faeb3e536e0a737a954b661a24e00e48ef3bcef4" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReason and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterStateReason 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="4e808c039b758b2f59db1f7d952b1bf58c1aa4a7" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReasons, the category is class PrinterStateReasons itself.</source>
          <target state="translated">PrinterStateReasons 클래스의 경우, 카테고리는 PrinterStateReasons 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="e14e080c82b2595f0ad5da46fffd3e824d0f9490" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReasons, the category name is &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterStateReasons 클래스의 경우, 카테고리 이름은 &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7a33b14dd071582edba93515dae6937007a50673" translate="yes" xml:space="preserve">
          <source>For class PrinterURI and any vendor-defined subclasses, the category is class PrinterURI itself.</source>
          <target state="translated">PrinterURI 클래스 및 벤더 정의 서브 클래스의 경우 카테고리는 PrinterURI 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="b5c54c79aa3a2ed3bc26221d866d3bf0414ab4d0" translate="yes" xml:space="preserve">
          <source>For class PrinterURI and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterURI 클래스 및 벤더 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="427bb8ae79ce5ce6305815064eb955898deba35e" translate="yes" xml:space="preserve">
          <source>For class QueuedJobCount, the category is class QueuedJobCount itself.</source>
          <target state="translated">QueuedJobCount 클래스의 경우 카테고리는 QueuedJobCount 자체 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="8c2032679b33ee7eeab7ea70028fe4a54b11a34b" translate="yes" xml:space="preserve">
          <source>For class QueuedJobCount, the category name is &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt;.</source>
          <target state="translated">QueuedJobCount 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ed9b64b1898dc19b34e09680ab59f290a11180b1" translate="yes" xml:space="preserve">
          <source>For class ReferenceUriSchemesSupported and any vendor-defined subclasses, the category is class ReferenceUriSchemesSupported itself.</source>
          <target state="translated">ReferenceUriSchemesSupported 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리는 ReferenceUriSchemesSupported 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="936b31b70be0215f64773fb73ec5e86c0ca36d06" translate="yes" xml:space="preserve">
          <source>For class ReferenceUriSchemesSupported and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">ReferenceUriSchemesSupported 클래스 및 공급 업체 정의 서브 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5468094b261f63f7a851ffdea2ab7b4ba7224051" translate="yes" xml:space="preserve">
          <source>For class RequestingUserName, the category is class RequestingUserName itself.</source>
          <target state="translated">RequestingUserName 클래스의 경우 카테고리는 RequestingUserName 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="794b8d2f9a18f1de951bd2a77cf8d9823f430c19" translate="yes" xml:space="preserve">
          <source>For class RequestingUserName, the category name is &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt;.</source>
          <target state="translated">RequestingUserName 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b817b624e8fc642c4c82793be6aece9829795dc5" translate="yes" xml:space="preserve">
          <source>For class Severit, the category name is &lt;code&gt;&quot;severity&quot;&lt;/code&gt;.</source>
          <target state="translated">Severit 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;severity&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="95cf92446e07a3726f7d683aed39c191dd9dd0f7" translate="yes" xml:space="preserve">
          <source>For class Severity, the category is class Severity itself.</source>
          <target state="translated">클래스 심각도의 경우 카테고리는 클래스 심각도 자체입니다.</target>
        </trans-unit>
        <trans-unit id="1df6ec0b95bed137549c213c42c887235000d710" translate="yes" xml:space="preserve">
          <source>For class SheetCollate, the category is class SheetCollate itself.</source>
          <target state="translated">SheetCollate 클래스의 경우 카테고리는 SheetCollate 클래스 자체입니다.</target>
        </trans-unit>
        <trans-unit id="eec42e414ddbb008a0160e654bcfebb31c674017" translate="yes" xml:space="preserve">
          <source>For class SheetCollate, the category name is &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt;.</source>
          <target state="translated">SheetCollate 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a54a6c66b3185766ef8980b2b771f7a5145737b9" translate="yes" xml:space="preserve">
          <source>For class Sides, the category is class Sides itself.</source>
          <target state="translated">클래스 측면의 경우 카테고리는 클래스 측면 자체입니다.</target>
        </trans-unit>
        <trans-unit id="00e176bee23fa052a123452f97bdfd610c3f76aa" translate="yes" xml:space="preserve">
          <source>For class Sides, the category name is &lt;code&gt;&quot;sides&quot;&lt;/code&gt;.</source>
          <target state="translated">Sides 클래스의 경우 카테고리 이름은 &lt;code&gt;&quot;sides&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e291d7686d6bf5a610fa7b42648acca9aac4fbe1" translate="yes" xml:space="preserve">
          <source>For client formatted print data, the print data representation class is typically one of the following (although other representation classes are permitted):</source>
          <target state="translated">클라이언트 형식의 인쇄 데이터의 경우 인쇄 데이터 표현 클래스는 일반적으로 다음 중 하나입니다 (다른 표현 클래스도 허용됨).</target>
        </trans-unit>
        <trans-unit id="e6d74a7546298ead87242134049dd273d250b2d3" translate="yes" xml:space="preserve">
          <source>For client sockets, setReceiveBufferSize() must be called before connecting the socket to its remote peer.</source>
          <target state="translated">클라이언트 소켓의 경우 소켓을 원격 피어에 연결하기 전에 setReceiveBufferSize ()를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="b4d07d8b04ebb5bf8cd0d980eb8abf2e92d0b689" translate="yes" xml:space="preserve">
          <source>For collectors that do not have the &lt;code&gt;UNORDERED&lt;/code&gt; characteristic, two accumulated results &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt; are equivalent if &lt;code&gt;finisher.apply(a1).equals(finisher.apply(a2))&lt;/code&gt;. For unordered collectors, equivalence is relaxed to allow for non-equality related to differences in order. (For example, an unordered collector that accumulated elements to a &lt;code&gt;List&lt;/code&gt; would consider two lists equivalent if they contained the same elements, ignoring order.)</source>
          <target state="translated">&lt;code&gt;UNORDERED&lt;/code&gt; 특성 이없는 수집기의 경우 &lt;code&gt;finisher.apply(a1).equals(finisher.apply(a2))&lt;/code&gt; 경우 두 개의 누적 결과 &lt;code&gt;a1&lt;/code&gt; 및 &lt;code&gt;a2&lt;/code&gt; 는 같습니다 . 정렬되지 않은 수집기의 경우, 차이와 관련된 비평 등을 허용하도록 동등성이 완화됩니다. 예를 들어, &lt;code&gt;List&lt;/code&gt; 요소를 누적 한 정렬되지 않은 수집기는 순서를 무시하고 동일한 요소가 포함 된 경우 두 목록이 동등한 것으로 간주합니다.</target>
        </trans-unit>
        <trans-unit id="5daebfee18e6210b1df3959fb579eb8ef2b007d1" translate="yes" xml:space="preserve">
          <source>For combo boxes with a non trivial number of items, it is recommended to use a prototype display value to significantly speed up the display size calculation.</source>
          <target state="translated">항목 수가 적지 않은 콤보 상자의 경우 프로토 타입 표시 값을 사용하여 표시 크기 계산 속도를 크게 높이는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="3a2967995857133da00d1565c63fb3be5ba528a4" translate="yes" xml:space="preserve">
          <source>For comparing &lt;code&gt;String&lt;/code&gt;s exactly once, the &lt;code&gt;compare&lt;/code&gt; method provides the best performance. When sorting a list of &lt;code&gt;String&lt;/code&gt;s however, it is generally necessary to compare each &lt;code&gt;String&lt;/code&gt; multiple times. In this case, &lt;code&gt;CollationKey&lt;/code&gt;s provide better performance. The &lt;code&gt;CollationKey&lt;/code&gt; class converts a &lt;code&gt;String&lt;/code&gt; to a series of bits that can be compared bitwise against other &lt;code&gt;CollationKey&lt;/code&gt;s. A &lt;code&gt;CollationKey&lt;/code&gt; is created by a &lt;code&gt;Collator&lt;/code&gt; object for a given &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">비교를 위해 &lt;code&gt;String&lt;/code&gt; 회만들의 &lt;code&gt;compare&lt;/code&gt; 방법은 최상의 성능을 제공합니다. 그러나 &lt;code&gt;String&lt;/code&gt; 목록을 정렬 할 때는 일반적으로 각 &lt;code&gt;String&lt;/code&gt; 을 여러 번 비교해야합니다 . 이 경우 &lt;code&gt;CollationKey&lt;/code&gt; 는 더 나은 성능을 제공합니다. &lt;code&gt;CollationKey&lt;/code&gt; 클래스는 변환 &lt;code&gt;String&lt;/code&gt; 기타와 비트 단위로 비교할 수있는 비트의 일련 &lt;code&gt;CollationKey&lt;/code&gt; 들. &lt;code&gt;CollationKey&lt;/code&gt; a로 만든 &lt;code&gt;Collator&lt;/code&gt; 주어진에 대한 객체 &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af7d1003679e326a588379c3ddd16e561bb257a9" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, it is possible, though highly discouraged, to add objects to an &lt;code&gt;AttributeList&lt;/code&gt; that are not instances of &lt;code&gt;Attribute&lt;/code&gt;. However, an &lt;code&gt;AttributeList&lt;/code&gt; can be made &lt;em&gt;type-safe&lt;/em&gt;, which means that an attempt to add an object that is not an &lt;code&gt;Attribute&lt;/code&gt; will produce an &lt;code&gt;
 IllegalArgumentException&lt;/code&gt;. An &lt;code&gt;AttributeList&lt;/code&gt; becomes type-safe when the method &lt;a href=&quot;#asList()&quot;&gt;&lt;code&gt;asList()&lt;/code&gt;&lt;/a&gt; is called on it.</source>
          <target state="translated">호환성을 위해, 그것은 개체를 추가, 매우 낙담하지만, 수 &lt;code&gt;AttributeList&lt;/code&gt; 의 인스턴스 수없는 &lt;code&gt;Attribute&lt;/code&gt; . 그러나 &lt;code&gt;AttributeList&lt;/code&gt; 는 &lt;em&gt;type-safe&lt;/em&gt; 로 만들 수 있습니다. 즉, &lt;code&gt;Attribute&lt;/code&gt; 가 아닌 객체를 추가하려고 하면 &lt;code&gt; IllegalArgumentException&lt;/code&gt; 이 생성됩니다 . &lt;code&gt;AttributeList&lt;/code&gt; 메소드 때 형 안전해진다 &lt;a href=&quot;#asList()&quot;&gt; &lt;code&gt;asList()&lt;/code&gt; &lt;/a&gt; 그것에 불린다.</target>
        </trans-unit>
        <trans-unit id="3bda8af9f3ea2c182bc4edb9c9e7d569970e2c7c" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, it is possible, though highly discouraged, to add objects to an &lt;code&gt;AttributeList&lt;/code&gt; that are not instances of &lt;code&gt;Attribute&lt;/code&gt;. However, an &lt;code&gt;AttributeList&lt;/code&gt; can be made &lt;em&gt;type-safe&lt;/em&gt;, which means that an attempt to add an object that is not an &lt;code&gt;Attribute&lt;/code&gt; will produce an &lt;code&gt;IllegalArgumentException&lt;/code&gt;. An &lt;code&gt;AttributeList&lt;/code&gt; becomes type-safe when the method &lt;a href=&quot;attributelist#asList--&quot;&gt;&lt;code&gt;asList()&lt;/code&gt;&lt;/a&gt; is called on it.</source>
          <target state="translated">호환성 문제로 인해 권장 되지는 않지만 &lt;code&gt;Attribute&lt;/code&gt; 인스턴스가 아닌 &lt;code&gt;AttributeList&lt;/code&gt; 에 객체를 추가 할 수 있습니다 . 그러나 &lt;code&gt;AttributeList&lt;/code&gt; 를 &lt;em&gt;type-safe&lt;/em&gt; 로 만들 수 있습니다. 즉, &lt;code&gt;Attribute&lt;/code&gt; 가 아닌 객체를 추가하려고 하면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생합니다 . &lt;code&gt;AttributeList&lt;/code&gt; 메소드 때 형 안전해진다 &lt;a href=&quot;attributelist#asList--&quot;&gt; &lt;code&gt;asList()&lt;/code&gt; &lt;/a&gt; 그것에 불린다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fa3fadeadc9c59b0bb290751e24959992cae4d8a" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, two non-conforming locales are treated as special cases. These are &lt;b&gt;&lt;code&gt;ja_JP_JP&lt;/code&gt;&lt;/b&gt; and &lt;b&gt;&lt;code&gt;th_TH_TH&lt;/code&gt;&lt;/b&gt;. These are ill-formed in BCP 47 since the variants are too short. To ease migration to BCP 47, these are treated specially during construction. These two cases (and only these) cause a constructor to generate an extension, all other values behave exactly as they did prior to Java 7.</source>
          <target state="translated">호환성을 위해 두 가지 부적합 로케일이 특수한 경우로 취급됩니다. 이들은 &lt;b&gt; &lt;code&gt;ja_JP_JP&lt;/code&gt; &lt;/b&gt; 및 &lt;b&gt; &lt;code&gt;th_TH_TH&lt;/code&gt; &lt;/b&gt; 입니다. 변형이 너무 짧기 때문에 BCP 47에서는 형식이 잘못되었습니다. BCP 47로 쉽게 마이그레이션 할 수 있도록 건설 과정에서 특별히 처리됩니다. 이 두 경우 (및이 경우에만)는 생성자가 확장을 생성하게하며 다른 모든 값은 Java 7 이전과 동일하게 동작합니다.</target>
        </trans-unit>
        <trans-unit id="88ffec9f8f3ececb82205df4b4f1f28ffab318bb" translate="yes" xml:space="preserve">
          <source>For compatibility with JDK 1.1.x, some other three-letter time zone IDs (such as &quot;PST&quot;, &quot;CTT&quot;, &quot;AST&quot;) are also supported. However, &lt;strong&gt;their use is deprecated&lt;/strong&gt; because the same abbreviation is often used for multiple time zones (for example, &quot;CST&quot; could be U.S. &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;), and the Java platform can then only recognize one of them.</source>
          <target state="translated">JDK 1.1.x와의 호환성을 위해 다른 3 글자 시간대 ID (예 : &quot;PST&quot;, &quot;CTT&quot;, &quot;AST&quot;)도 지원됩니다. 그러나 동일한 약어가 여러 시간대에 자주 사용되므로 (예 : &quot;CST&quot;는 미국 &quot;중부 표준시&quot;및 &quot;중국 표준시&quot;일 수 있음) Java 플랫폼은 다음 중 하나만 인식 할 수 있으므로 &lt;strong&gt;사용이 중단&lt;/strong&gt; 됩니다. 그들.</target>
        </trans-unit>
        <trans-unit id="fd60c878e75d2f5708d5f3e6789fa9e2306f96c1" translate="yes" xml:space="preserve">
          <source>For compatibility with applications developed earlier this method still accepts &lt;code&gt;Frame.NORMAL&lt;/code&gt; and &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; only. The iconic state of the frame is only changed, other aspects of frame state are not affected by this method. If the state passed to this method is neither &lt;code&gt;
 Frame.NORMAL&lt;/code&gt; nor &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; the method performs no actions at all.</source>
          <target state="translated">이전에 개발 된 응용 프로그램과의 호환성을 위해이 메서드는 여전히 &lt;code&gt;Frame.NORMAL&lt;/code&gt; 및 &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; 만 허용 합니다. 프레임의 아이콘 상태는 변경 될 뿐이며 프레임 상태의 다른 측면은이 방법의 영향을받지 않습니다. 이 메서드에 전달 된 상태도 아닌 경우 &lt;code&gt; Frame.NORMAL&lt;/code&gt; 도 &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; 없는 방법의 수행을 전혀 행동을.</target>
        </trans-unit>
        <trans-unit id="c9eb361e769ed726818ef4786ab9e82032615e2e" translate="yes" xml:space="preserve">
          <source>For compatibility with old parsers, XMLFormatters can be configured to revert to the old format by specifying a &lt;code&gt;&amp;lt;xml-formatter-fully-qualified-class-name&amp;gt;.useInstant = false&lt;/code&gt;&lt;a href=&quot;logmanager#getProperty(java.lang.String)&quot;&gt;property&lt;/a&gt; in the logging configuration. When &lt;code&gt;useInstant&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the old formatting will be preserved. When &lt;code&gt;useInstant&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (the default), the &lt;code&gt;&amp;lt;nanos&amp;gt;&lt;/code&gt; element will be printed and the &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; element will contain the &lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt;formatted&lt;/a&gt; instant.</source>
          <target state="translated">이전 파서와의 호환성을 위해 로깅 구성에서 &lt;code&gt;&amp;lt;xml-formatter-fully-qualified-class-name&amp;gt;.useInstant = false&lt;/code&gt; &lt;a href=&quot;logmanager#getProperty(java.lang.String)&quot;&gt;속성&lt;/a&gt; 을 지정하여 이전 형식으로 되돌 리도록 XMLFormatters를 구성 할 수 있습니다 . 때 &lt;code&gt;useInstant&lt;/code&gt; 이 있다 &lt;code&gt;false&lt;/code&gt; , 기존의 형식이 유지됩니다. 때 &lt;code&gt;useInstant&lt;/code&gt; 이 있다 &lt;code&gt;true&lt;/code&gt; (기본값) &lt;code&gt;&amp;lt;nanos&amp;gt;&lt;/code&gt; 요소가 인쇄되고 &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; 요소가 포함됩니다 &lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt;형식의&lt;/a&gt; 순간.</target>
        </trans-unit>
        <trans-unit id="4ae98774e76aff887be754e2a71ca1589d7931b3" translate="yes" xml:space="preserve">
          <source>For compatibility with old programs this method still returns &lt;code&gt;Frame.NORMAL&lt;/code&gt; and &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; but it only reports the iconic state of the frame, other aspects of frame state are not reported by this method.</source>
          <target state="translated">이전 프로그램과의 호환성을 위해이 메서드는 여전히 &lt;code&gt;Frame.NORMAL&lt;/code&gt; 및 &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; 를 반환 하지만 프레임의 아이콘 상태 만보 고 하고 프레임 상태의 다른 측면은이 메서드에서보고하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fdb12ba84178516e070cb7e3438381124465f720" translate="yes" xml:space="preserve">
          <source>For compatibility with previous releases, &lt;code&gt;BorderLayout&lt;/code&gt; also includes the relative positioning constants &lt;code&gt;BEFORE_FIRST_LINE&lt;/code&gt;, &lt;code&gt;AFTER_LAST_LINE&lt;/code&gt;, &lt;code&gt;BEFORE_LINE_BEGINS&lt;/code&gt; and &lt;code&gt;AFTER_LINE_ENDS&lt;/code&gt;. These are equivalent to &lt;code&gt;PAGE_START&lt;/code&gt;, &lt;code&gt;PAGE_END&lt;/code&gt;, &lt;code&gt;LINE_START&lt;/code&gt; and &lt;code&gt;LINE_END&lt;/code&gt; respectively. For consistency with the relative positioning constants used by other components, the latter constants are preferred.</source>
          <target state="translated">이전 릴리스와의 호환성을 위해 &lt;code&gt;BorderLayout&lt;/code&gt; 에는 상대 위치 지정 상수 &lt;code&gt;BEFORE_FIRST_LINE&lt;/code&gt; , &lt;code&gt;AFTER_LAST_LINE&lt;/code&gt; , &lt;code&gt;BEFORE_LINE_BEGINS&lt;/code&gt; 및 &lt;code&gt;AFTER_LINE_ENDS&lt;/code&gt; 도 포함 됩니다. 이들은 &lt;code&gt;PAGE_END&lt;/code&gt; &lt;code&gt;PAGE_START&lt;/code&gt; , PAGE_END , &lt;code&gt;LINE_START&lt;/code&gt; 및 &lt;code&gt;LINE_END&lt;/code&gt; 에 해당합니다. 다른 구성 요소에서 사용하는 상대 위치 상수와의 일관성을 위해 후자의 상수가 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="0b68d1775fb9f96001888959c6d32bec9d0ab9b8" translate="yes" xml:space="preserve">
          <source>For complete details on RMI, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/rmi/index.html&quot;&gt;RMI Specification&lt;/a&gt; which describes the RMI API and system.</source>
          <target state="translated">RMI에 대한 자세한 내용 은 RMI API 및 시스템을 설명하는 RMI &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/rmi/index.html&quot;&gt;사양&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b9423ca6a745439d228e81775dfe1289ff98c768" translate="yes" xml:space="preserve">
          <source>For complete examples and further documentation see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">전체 예제 및 추가 문서 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="426d2bc87f59f5f0cb4ba388ec2d7d4edcc97713" translate="yes" xml:space="preserve">
          <source>For concurrent collectors, an implementation is free to (but not required to) implement reduction concurrently. A concurrent reduction is one where the accumulator function is called concurrently from multiple threads, using the same concurrently-modifiable result container, rather than keeping the result isolated during accumulation. A concurrent reduction should only be applied if the collector has the &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt;&lt;/a&gt; characteristics or if the originating data is unordered.</source>
          <target state="translated">동시 콜렉터의 경우 구현은 축소를 동시에 구현할 수는 있지만 자유롭게 수행 할 수는 없습니다. 동시 축소는 누적 동안 결과를 분리하지 않고 동일한 동시 수정 가능한 결과 컨테이너를 사용하여 누산기 함수를 여러 스레드에서 동시에 호출하는 것입니다. &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt; &lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt; &lt;/a&gt; 특성이 있거나 원래 데이터가 정렬되지 않은 경우에만 동시 축소를 적용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5b77db919dc549d42aa7190b43a492b8ea4ee578" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;JLayeredPane&lt;/code&gt; divides the depth-range into several different layers. Putting a component into one of those layers makes it easy to ensure that components overlap properly, without having to worry about specifying numbers for specific depths:</source>
          <target state="translated">편의를 위해 &lt;code&gt;JLayeredPane&lt;/code&gt; 은 깊이 범위를 여러 레이어로 나눕니다. 구성 요소를 이러한 레이어 중 하나에 배치하면 특정 깊이에 대한 번호를 지정하는 것에 대해 걱정할 필요없이 구성 요소가 올바르게 겹치는 지 쉽게 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c27fac6ea267b3ee9bd3b0f98727a50d9691f093" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;a href=&quot;#isError()&quot;&gt;&lt;code&gt;isError&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;true&lt;/code&gt; for result objects that describe malformed-input and unmappable-character errors but &lt;code&gt;false&lt;/code&gt; for those that describe underflow or overflow conditions.</source>
          <target state="translated">편의를 위해 &lt;a href=&quot;#isError()&quot;&gt; &lt;code&gt;isError&lt;/code&gt; &lt;/a&gt; 메서드는 잘못된 입력 및 매핑 할 수없는 문자 오류를 설명하는 결과 개체에 대해 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 언더 플로 또는 오버플로 조건을 설명하는 오류에 대해서는 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="b87f89f0734b0f681dabea429fae1aace7b8245d" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;a href=&quot;coderresult#isError--&quot;&gt;&lt;code&gt;isError&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;true&lt;/code&gt; for result objects that describe malformed-input and unmappable-character errors but &lt;code&gt;false&lt;/code&gt; for those that describe underflow or overflow conditions.</source>
          <target state="translated">편의를 위해, &lt;a href=&quot;coderresult#isError--&quot;&gt; &lt;code&gt;isError&lt;/code&gt; &lt;/a&gt; 메소드가 반환 &lt;code&gt;true&lt;/code&gt; 부정 입력 에러 나 맵 불가 문자 에러 있지만, 설명 결과 개체에 대한 &lt;code&gt;false&lt;/code&gt; 언더 나 오버 플로우 조건을 설명하는 사람들을 위해.</target>
        </trans-unit>
        <trans-unit id="ebada93ed27c6249289f1e3fb580ab3052fec92c" translate="yes" xml:space="preserve">
          <source>For convenience, this class declares a number of public static final fields that refer to singleton instances returned by the values() method.</source>
          <target state="translated">편의를 위해이 클래스는 values ​​() 메서드에서 반환 된 싱글 톤 인스턴스를 참조하는 여러 공개 정적 최종 필드를 선언합니다.</target>
        </trans-unit>
        <trans-unit id="22c5cc62321a61e23fe5e092c90e1a30e44ff7cd" translate="yes" xml:space="preserve">
          <source>For correct printing behaviour, the following points should be observed:</source>
          <target state="translated">올바른 인쇄 동작을 위해 다음 사항을 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="cb5e8dedd374a70c1c847661490301249aacc703" translate="yes" xml:space="preserve">
          <source>For data in &lt;code&gt;TIFFTag.TIFF_BYTE&lt;/code&gt; format, the application must take care when promoting the data to longer integral types to avoid sign extension.</source>
          <target state="translated">&lt;code&gt;TIFFTag.TIFF_BYTE&lt;/code&gt; 형식의 데이터의 경우 응용 프로그램은 부호 확장을 방지하기 위해 데이터를 더 긴 정수 유형으로 승격 할 때주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="1540b9260398a27c20afbc75e79f7e85a69fa272" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets the socket option is used to allow multiple programs bind to the same address. This option should be enabled when the socket is to be used for Internet Protocol (IP) multicasting.</source>
          <target state="translated">데이터 그램 지향 소켓의 경우 소켓 옵션을 사용하여 여러 프로그램이 동일한 주소에 바인딩 할 수 있습니다. 소켓이 인터넷 프로토콜 (IP) 멀티 캐스팅에 사용될 경우이 옵션을 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="0f95b5e33b3ee975e827804d3ac17eb2566ce8e5" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets the socket option usually allows multiple UDP sockets to be bound to the same address and port.</source>
          <target state="translated">데이터 그램 지향 소켓의 경우 소켓 옵션은 일반적으로 여러 UDP 소켓이 동일한 주소 및 포트에 바인딩되도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="786c72f86388cb950616d047202d32b3eb1c3b0f" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets, the size of the receive buffer may limit the size of the datagrams that can be received. Whether datagrams larger than the buffer size can be received is system dependent. Increasing the socket receive buffer may be important for cases where datagrams arrive in bursts faster than they can be processed.</source>
          <target state="translated">데이터 그램 지향 소켓의 경우, 수신 버퍼의 크기는 수신 할 수있는 데이터 그램의 크기를 제한 할 수 있습니다. 버퍼 크기보다 큰 데이터 그램을 수신 할 수 있는지 여부는 시스템에 따라 다릅니다. 소켓 수신 버퍼를 늘리는 것은 데이터 그램이 처리 할 수있는 것보다 빠르게 버스트에 도착하는 경우 중요 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="966cd6f9c064ea098962ea14f75ef3365435e675" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets, the size of the send buffer may limit the size of the datagrams that may be sent by the socket. Whether datagrams larger than the buffer size are sent or discarded is system dependent.</source>
          <target state="translated">데이터 그램 지향 소켓의 경우, 송신 버퍼의 크기는 소켓이 전송할 수있는 데이터 그램의 크기를 제한 할 수 있습니다. 버퍼 크기보다 큰 데이터 그램을 보내거나 버릴지 여부는 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="e144e4de7a25df3ef3b62d81140888932e771f2c" translate="yes" xml:space="preserve">
          <source>For date-times, 'JULIAN_DAY.getFrom()' assumes the same value from midnight until just before the next midnight. When 'JULIAN_DAY.adjustInto()' is applied to a date-time, the time of day portion remains unaltered. 'JULIAN_DAY.adjustInto()' and 'JULIAN_DAY.getFrom()' only apply to &lt;code&gt;Temporal&lt;/code&gt; objects that can be converted into &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;&lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;&lt;/a&gt; is thrown for any other type of object.</source>
          <target state="translated">날짜-시간의 경우, 'JULIAN_DAY.getFrom ()'은 자정부터 다음 자정 직전까지 동일한 값을 가정합니다. 'JULIAN_DAY.adjustInto ()'를 날짜-시간에 적용하면 시간 부분이 변경되지 않습니다. 'JULIAN_DAY.adjustInto ()'및 'JULIAN_DAY.getFrom ()' 은 &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 로 변환 할 수있는 &lt;code&gt;Temporal&lt;/code&gt; 오브젝트 에만 적용됩니다 . &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt; &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; 는&lt;/a&gt; 다른 형태의 객체 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0cc6b45ec07db1a8b27e379302a25193156d3ffa" translate="yes" xml:space="preserve">
          <source>For date-times, 'MODIFIED_JULIAN_DAY.getFrom()' assumes the same value from midnight until just before the next midnight. When 'MODIFIED_JULIAN_DAY.adjustInto()' is applied to a date-time, the time of day portion remains unaltered. 'MODIFIED_JULIAN_DAY.adjustInto()' and 'MODIFIED_JULIAN_DAY.getFrom()' only apply to &lt;code&gt;Temporal&lt;/code&gt; objects that can be converted into &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;&lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;&lt;/a&gt; is thrown for any other type of object.</source>
          <target state="translated">날짜-시간의 경우, 'MODIFIED_JULIAN_DAY.getFrom ()'은 자정부터 다음 자정 직전까지 동일한 값을 가정합니다. 'MODIFIED_JULIAN_DAY.adjustInto ()'가 날짜-시간에 적용되는 경우 시간 부분은 변경되지 않습니다. 'MODIFIED_JULIAN_DAY.adjustInto ()'및 'MODIFIED_JULIAN_DAY.getFrom ()' 은 &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 로 변환 할 수있는 &lt;code&gt;Temporal&lt;/code&gt; 객체 에만 적용됩니다 . &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt; &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; 는&lt;/a&gt; 다른 형태의 객체 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8cbb52d0e448ae0028f420b523fc0e8fe8889086" translate="yes" xml:space="preserve">
          <source>For date-times, 'RATA_DIE.getFrom()' assumes the same value from midnight until just before the next midnight. When 'RATA_DIE.adjustInto()' is applied to a date-time, the time of day portion remains unaltered. 'RATA_DIE.adjustInto()' and 'RATA_DIE.getFrom()' only apply to &lt;code&gt;Temporal&lt;/code&gt; objects that can be converted into &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;&lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;&lt;/a&gt; is thrown for any other type of object.</source>
          <target state="translated">날짜-시간의 경우, 'RATA_DIE.getFrom ()'은 자정부터 다음 자정 직전까지 동일한 값을 가정합니다. 'RATA_DIE.adjustInto ()'가 날짜-시간에 적용되면 시간 부분은 변경되지 않습니다. 'RATA_DIE.adjustInto ()'및 'RATA_DIE.getFrom ()' 은 &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 로 변환 할 수있는 &lt;code&gt;Temporal&lt;/code&gt; 오브젝트 에만 적용됩니다 . &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt; &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; 는&lt;/a&gt; 다른 형태의 객체 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5917af1a5a5388259e477975711371546feece14" translate="yes" xml:space="preserve">
          <source>For default values not specified by SAX2, each XMLReader implementation specifies its default, or may choose not to expose the feature flag. Unless otherwise specified here, implementations may support changing current values of these standard feature flags, but not while parsing.</source>
          <target state="translated">SAX2에 의해 지정되지 않은 기본값의 경우 각 XMLReader 구현은 기본값을 지정하거나 기능 플래그를 노출하지 않도록 선택할 수 있습니다. 여기에서 달리 지정하지 않는 한 구현은 이러한 표준 기능 플래그의 현재 값 변경을 지원할 수 있지만 구문 분석 중에는 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d21c60d5fb09e760cc030c28677e9de4a9cb8ba5" translate="yes" xml:space="preserve">
          <source>For deletes, the indexes represent the</source>
          <target state="translated">삭제의 경우 색인은</target>
        </trans-unit>
        <trans-unit id="28d681735625cb5b074de969173935dda35c689f" translate="yes" xml:space="preserve">
          <source>For details and the values of parameter that are valid for the various types of services see the top of this class and the  Java Cryptography Architecture API Specification &amp;amp; Reference. Security providers can override it to implement their own test.</source>
          <target state="translated">다양한 서비스 유형에 유효한 매개 변수의 세부 사항 및 값은이 클래스의 맨 위 및 Java Cryptography Architecture API 스펙 및 참조를 참조하십시오. 보안 공급자는 자신의 테스트를 구현하기 위해 보안 공급자를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="804b34ef3e3e29b6ff0dcdc4e3200775ed24a3f5" translate="yes" xml:space="preserve">
          <source>For details and the values of parameter that are valid for the various types of services see the top of this class and the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca&quot;&gt;Java Cryptography Architecture (JCA) Reference Guide&lt;/a&gt;. Security providers can override it to implement their own test.</source>
          <target state="translated">다양한 유형의 서비스에 유효한 매개 변수 값과 세부 사항은이 클래스의 맨 위와 &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca&quot;&gt;JCA (Java Cryptography Architecture) 참조 안내서를 참조하십시오&lt;/a&gt; . 보안 공급자는이를 재정 의하여 자체 테스트를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c68701285e7b960e6e93d95808cdd4a77d317a1f" translate="yes" xml:space="preserve">
          <source>For details on how the widths of columns in the &lt;code&gt;JTable&lt;/code&gt; (and &lt;code&gt;JTableHeader&lt;/code&gt;) are calculated from the &lt;code&gt;preferredWidth&lt;/code&gt;, see the &lt;code&gt;doLayout&lt;/code&gt; method in &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">의 열의 폭 자세한 방법 &lt;code&gt;JTable&lt;/code&gt; (및 &lt;code&gt;JTableHeader&lt;/code&gt; 에가 )로부터 계산 &lt;code&gt;preferredWidth&lt;/code&gt; 상기 참조 &lt;code&gt;doLayout&lt;/code&gt; 의 방법 &lt;code&gt;JTable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5aab162f3d6513fcbe058868b382f7a560c31fe9" translate="yes" xml:space="preserve">
          <source>For details on the focus subsystem, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt; How to Use the Focus Subsystem&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, and the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;Focus Specification&lt;/a&gt; for more information.</source>
          <target state="translated">포커스 하위 시스템에 대한 자세한 내용은 포커스 하위 시스템 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt;사용 방법&lt;/a&gt; , &lt;em&gt;Java 자습서&lt;/em&gt; 의 섹션 및 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;포커스 사양&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="265e8a5599432ddf889d173f21ff483b5caee801" translate="yes" xml:space="preserve">
          <source>For directories that do not use a string representation for some or all of their attributes, the filter argument corresponding to an attribute value may be of a type other than String. Directories that support unstructured binary-valued attributes, for example, should accept byte arrays as filter arguments. The interpretation (if any) of filter arguments of any other type is determined by the service provider for that directory, which maps the filter operations onto operations with corresponding semantics in the underlying directory.</source>
          <target state="translated">일부 또는 모든 속성에 대해 문자열 표현을 사용하지 않는 디렉토리의 경우 속성 값에 해당하는 필터 인수는 문자열 이외의 유형일 수 있습니다. 예를 들어 구조화되지 않은 이진 값 속성을 지원하는 디렉토리는 바이트 배열을 필터 인수로 허용해야합니다. 다른 유형의 필터 인수에 대한 해석 (해당되는 경우)은 해당 디렉토리의 서비스 제공자에 의해 결정되며, 기본 디렉토리에서 해당 시맨틱이있는 조작에 필터 조작을 맵핑합니다.</target>
        </trans-unit>
        <trans-unit id="518376a1f0776715181d384c293e66dd7896f2e6" translate="yes" xml:space="preserve">
          <source>For documentation that includes information about algorithm parameter and key specifications, please see:</source>
          <target state="translated">알고리즘 매개 변수 및 키 사양에 대한 정보가 포함 된 문서는 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b6a829f85f8f642a1c89efe627173daa5255f0cb" translate="yes" xml:space="preserve">
          <source>For drop mode &lt;code&gt;DropMode.INSERT&lt;/code&gt;, this index indicates the index at which the data should be inserted into the parent path represented by &lt;code&gt;getPath()&lt;/code&gt;. &lt;code&gt;-1&lt;/code&gt; indicates that the drop occurred over the parent itself, and in most cases should be treated as inserting into either the beginning or the end of the parent's list of children.</source>
          <target state="translated">드롭 모드 &lt;code&gt;DropMode.INSERT&lt;/code&gt; 의 경우이 인덱스는 &lt;code&gt;getPath()&lt;/code&gt; 로 표시되는 부모 경로에 데이터를 삽입해야하는 인덱스를 나타냅니다 . &lt;code&gt;-1&lt;/code&gt; 은 드롭이 부모 자체에서 발생했음을 나타내며 대부분의 경우 부모의 자식 목록 시작 또는 끝에 삽입하는 것으로 처리되어야합니다.</target>
        </trans-unit>
        <trans-unit id="7fcd28f67347c51882b14015451795cd74b74cd2" translate="yes" xml:space="preserve">
          <source>For drop modes &lt;code&gt;DropMode.USE_SELECTION&lt;/code&gt; and &lt;code&gt;DropMode.ON&lt;/code&gt;, this index is unimportant (and it will always be &lt;code&gt;-1&lt;/code&gt;) as the only interesting data is the path over which the drop operation occurred.</source>
          <target state="translated">드롭 모드 &lt;code&gt;DropMode.USE_SELECTION&lt;/code&gt; 및 &lt;code&gt;DropMode.ON&lt;/code&gt; 의 경우 유일한 흥미로운 데이터는 드롭 작업이 발생한 경로 이므로이 인덱스는 중요하지 않습니다 (항상 &lt;code&gt;-1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5e8ebd7b5b5944d400b4ddb7391f9d645ae1a1ac" translate="yes" xml:space="preserve">
          <source>For each</source>
          <target state="translated">각각</target>
        </trans-unit>
        <trans-unit id="d5e87de10ee00b022602cd0fe8a0bf81b92bb32e" translate="yes" xml:space="preserve">
          <source>For each call of &lt;code&gt;publish&lt;/code&gt; the &lt;code&gt;Handler&lt;/code&gt; will call this &lt;code&gt;Filter&lt;/code&gt; (if it is non-null) to check if the &lt;code&gt;LogRecord&lt;/code&gt; should be published or discarded.</source>
          <target state="translated">&lt;code&gt;publish&lt;/code&gt; 호출 할 때 마다 &lt;code&gt;Handler&lt;/code&gt; 는이 &lt;code&gt;Filter&lt;/code&gt; (널이 아닌 경우)를 호출 하여 &lt;code&gt;LogRecord&lt;/code&gt; 가 게시 또는 삭제되어야 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="286cc615cc027b7399bc8f36bf03bcc0ce9d8b08" translate="yes" xml:space="preserve">
          <source>For each class &quot;Foo&quot;, explicit information may be available if there exists a corresponding &quot;FooBeanInfo&quot; class that provides a non-null value when queried for the information. We first look for the BeanInfo class by taking the full package-qualified name of the target bean class and appending &quot;BeanInfo&quot; to form a new class name. If this fails, then we take the final classname component of this name, and look for that class in each of the packages specified in the BeanInfo package search path.</source>
          <target state="translated">각 클래스 &quot;Foo&quot;에 대해 정보를 쿼리 할 때 널이 아닌 값을 제공하는 해당 &quot;FooBeanInfo&quot;클래스가있는 경우 명시 적 정보를 사용할 수 있습니다. 먼저 대상 Bean 클래스의 전체 패키지 규정 된 이름을 가져 와서 &quot;BeanInfo&quot;를 추가하여 새 클래스 이름을 작성하여 BeanInfo 클래스를 찾으십시오. 이것이 실패하면, 우리는이 이름의 최종 classname 컴포넌트를 가져 와서 BeanInfo 패키지 검색 경로에 지정된 각 패키지에서 해당 클래스를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="20256c9d6947200a5e94011138eea8b1897119cf" translate="yes" xml:space="preserve">
          <source>For each combination, the security strength can be requested from 112 up to the highest strength it supports. Both reseeding and prediction resistance are supported.</source>
          <target state="translated">각 조합에 대해 보안 강도는 112에서 지원하는 최고 강도까지 요청할 수 있습니다. 재시 딩 및 예측 저항이 모두 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="4d952801a5093c12c28f05ad1d4bdd655a37742c" translate="yes" xml:space="preserve">
          <source>For each configuration key in the &lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt;existing configuration&lt;/a&gt; and the given input stream configuration, the given &lt;code&gt;mapper&lt;/code&gt; function is invoked to map from the configuration key to a function,</source>
          <target state="translated">&lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt;기존 구성&lt;/a&gt; 의 각 구성 키 와 지정된 입력 스트림 구성에 대해 지정된 &lt;code&gt;mapper&lt;/code&gt; 함수가 호출되어 구성 키에서 함수로 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="b6e30f6a64e00d84dcf684b247b7c04cb7d796f1" translate="yes" xml:space="preserve">
          <source>For each entry of &lt;code&gt;providers&lt;/code&gt; that implements the &lt;code&gt;RegisterableService&lt;/code&gt; interface, its &lt;code&gt;onRegistration&lt;/code&gt; method will be called once for each category it is registered under. Its &lt;code&gt;onDeregistration&lt;/code&gt; method will be called each time it is deregistered from a category or when the registry is finalized.</source>
          <target state="translated">&lt;code&gt;RegisterableService&lt;/code&gt; 인터페이스 를 구현하는 각 &lt;code&gt;providers&lt;/code&gt; 항목에 대해 등록 된 각 카테고리에 대해 &lt;code&gt;onRegistration&lt;/code&gt; 메소드가 한 번 호출됩니다. 그 &lt;code&gt;onDeregistration&lt;/code&gt; 의 방법은이 범주하거나 레지스트리가 완료됩니다로부터 등록 해제 될 때마다 불려갑니다.</target>
        </trans-unit>
        <trans-unit id="c516132c3718d7f067332d5c83b439ea451e810e" translate="yes" xml:space="preserve">
          <source>For each enumerated module A that &quot;reads&quot; B:</source>
          <target state="translated">B를 &quot;읽는&quot;열거 된 각 모듈 A에 대해 :</target>
        </trans-unit>
        <trans-unit id="a25403e3f97a5b7ac07a000714e826226e543668" translate="yes" xml:space="preserve">
          <source>For each enumerated module A that 'requires' B: A &quot;reads&quot; B.</source>
          <target state="translated">B를 '필요로하는'열거 된 각 모듈 A에 대해 : A는 B를 &quot;읽습니다&quot;.</target>
        </trans-unit>
        <trans-unit id="35aeee93cde14551d6eade0a0c737d8f9a729564" translate="yes" xml:space="preserve">
          <source>For each enumerated module X that is automatic: X &quot;reads&quot; every other enumerated module (it is &quot;as if&quot; an automatic module has 'requires' directives for every other enumerated module).</source>
          <target state="translated">자동 인 열거 된 모듈 X 각각에 대해 : X는 다른 모든 열거 된 모듈을 &quot;읽습니다&quot;(자동 모듈이 다른 모든 열거 된 모듈에 대해 'requires'지시문을 갖는 것처럼 &quot;마치&quot;).</target>
        </trans-unit>
        <trans-unit id="96d2961bb25e716d2f6e80a236a212dd331a8ca6" translate="yes" xml:space="preserve">
          <source>For each file encountered this method attempts to read its &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. If the file is not a directory then the &lt;a href=&quot;filevisitor#visitFile(T,java.nio.file.attribute.BasicFileAttributes)&quot;&gt;&lt;code&gt;visitFile&lt;/code&gt;&lt;/a&gt; method is invoked with the file attributes. If the file attributes cannot be read, due to an I/O exception, then the &lt;a href=&quot;filevisitor#visitFileFailed(T,java.io.IOException)&quot;&gt;&lt;code&gt;visitFileFailed&lt;/code&gt;&lt;/a&gt; method is invoked with the I/O exception.</source>
          <target state="translated">발견 된 각 파일에 대해이 메소드는 &lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt; 읽기를 시도합니다 . 파일이 디렉토리가 아닌 경우 파일 속성과 함께 &lt;a href=&quot;filevisitor#visitFile(T,java.nio.file.attribute.BasicFileAttributes)&quot;&gt; &lt;code&gt;visitFile&lt;/code&gt; &lt;/a&gt; 메소드가 호출됩니다. I / O 예외로 인해 파일 속성을 읽을 수없는 경우, I / O 예외 와 함께 &lt;a href=&quot;filevisitor#visitFileFailed(T,java.io.IOException)&quot;&gt; &lt;code&gt;visitFileFailed&lt;/code&gt; &lt;/a&gt; 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6ca5a3eb61a3c0a9243e70fdb42a70d21404ae0f" translate="yes" xml:space="preserve">
          <source>For each file encountered this method attempts to read its &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. If the file is not a directory then the &lt;a href=&quot;filevisitor#visitFile-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt;&lt;code&gt;visitFile&lt;/code&gt;&lt;/a&gt; method is invoked with the file attributes. If the file attributes cannot be read, due to an I/O exception, then the &lt;a href=&quot;filevisitor#visitFileFailed-T-java.io.IOException-&quot;&gt;&lt;code&gt;visitFileFailed&lt;/code&gt;&lt;/a&gt; method is invoked with the I/O exception.</source>
          <target state="translated">발견 된 각 파일에 대해이 메소드는 &lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt; 를 읽으려고 시도합니다 . 파일이 디렉토리가 아닌 경우 파일 속성과 함께 &lt;a href=&quot;filevisitor#visitFile-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt; &lt;code&gt;visitFile&lt;/code&gt; &lt;/a&gt; 메소드가 호출됩니다. I / O 예외로 인해 파일 속성을 읽을 수없는 경우 &lt;a href=&quot;filevisitor#visitFileFailed-T-java.io.IOException-&quot;&gt; &lt;code&gt;visitFileFailed&lt;/code&gt; &lt;/a&gt; 메소드가 I / O 예외와 함께 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4d739c9464a9a531eadc74d9ce9305fefe52ff7c" translate="yes" xml:space="preserve">
          <source>For each glyph in the &lt;code&gt;GlyphVector&lt;/code&gt;, you can obtain:</source>
          <target state="translated">&lt;code&gt;GlyphVector&lt;/code&gt; 의 각 글리프에 대해 다음을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddf36bbce577351f24028eda6666f70d941e508b" translate="yes" xml:space="preserve">
          <source>For each listener, the original &lt;code&gt;NotificationListener&lt;/code&gt; and &lt;code&gt;handback&lt;/code&gt; are kept on the client side; in order for the client to be able to identify them, the server generates and returns a unique &lt;code&gt;listenerID&lt;/code&gt;. This &lt;code&gt;listenerID&lt;/code&gt; is forwarded with the &lt;code&gt;Notifications&lt;/code&gt; to the remote client.</source>
          <target state="translated">각 리스너에 대해 원래 &lt;code&gt;NotificationListener&lt;/code&gt; 및 &lt;code&gt;handback&lt;/code&gt; 은 클라이언트 측에 유지됩니다. 클라이언트가 클라이언트를 식별 할 수 있도록 서버는 고유 한 &lt;code&gt;listenerID&lt;/code&gt; 를 생성하고 리턴합니다 . 이 &lt;code&gt;listenerID&lt;/code&gt; 는 &lt;code&gt;Notifications&lt;/code&gt; 과 함께 원격 클라이언트로 전달 됩니다.</target>
        </trans-unit>
        <trans-unit id="97a84cf424a476d032f4b6ffd9d39b7dddecc378" translate="yes" xml:space="preserve">
          <source>For each lower bound B :</source>
          <target state="translated">각 하한 B에 대해 :</target>
        </trans-unit>
        <trans-unit id="560c97173e52668310a247ab36d49a521c8f9040" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server on behalf of the given delegation subject instead of the authenticated subject. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;../jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">리턴 된 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 의 각 메소드에 대해 메소드를 호출하면 인증 된 주제 대신 지정된 위임 주제 대신 원격 MBean 서버에서 해당 메소드가 호출됩니다. MBean 서버 메소드에 의해 리턴 된 값은 클라이언트에 리턴 된 값입니다. MBean 서버 메소드가 &lt;code&gt;Exception&lt;/code&gt; 를 생성하면 (자) , 클라이언트는 같은 &lt;code&gt;Exception&lt;/code&gt; 를 보게됩니다. MBean 서버 메소드 또는 호출 시도가 &lt;code&gt;Error&lt;/code&gt; 를 생성하면 (자 ), &lt;code&gt;Error&lt;/code&gt; 는 &lt;a href=&quot;../jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; 에&lt;/a&gt; 랩 됩니다.</target>
        </trans-unit>
        <trans-unit id="6cab9b7add9ebb79364ab1771d1e616553c1e6db" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server on behalf of the given delegation subject instead of the authenticated subject. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">리턴 된 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 의 각 메소드에 대해 메소드를 호출하면 인증 된 주제 대신 지정된 위임 주제 대신 원격 MBean 서버에서 해당 메소드가 호출됩니다. MBean 서버 메소드에 의해 리턴 된 값은 클라이언트에 리턴 된 값입니다. MBean 서버 메소드가 &lt;code&gt;Exception&lt;/code&gt; 를 생성하면 (자) , 클라이언트는 같은 &lt;code&gt;Exception&lt;/code&gt; 를 보게됩니다. MBean 서버 메소드 또는 호출 시도가 &lt;code&gt;Error&lt;/code&gt; 를 생성하면 (자 ), &lt;code&gt;Error&lt;/code&gt; 는 &lt;a href=&quot;jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; 에&lt;/a&gt; 랩 됩니다.</target>
        </trans-unit>
        <trans-unit id="b4d1d1cbcb4df50206304dcd7ddd941a7faf1321" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;../jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">리턴 된 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 의 각 메소드에 대해 메소드를 호출하면 원격 MBean 서버에서 해당 메소드가 호출됩니다. MBean 서버 메소드에 의해 리턴 된 값은 클라이언트에 리턴 된 값입니다. MBean 서버 메소드가 &lt;code&gt;Exception&lt;/code&gt; 를 생성하면 (자) , 클라이언트는 같은 &lt;code&gt;Exception&lt;/code&gt; 를 보게됩니다. MBean 서버 메소드 또는 호출 시도가 &lt;code&gt;Error&lt;/code&gt; 를 생성하면 (자 ), &lt;code&gt;Error&lt;/code&gt; 는 &lt;a href=&quot;../jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; 에&lt;/a&gt; 랩 됩니다.</target>
        </trans-unit>
        <trans-unit id="af553cdcbe446f41ad75bb0c253ebededf33d396" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">리턴 된 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 의 각 메소드에 대해 메소드를 호출하면 원격 MBean 서버에서 해당 메소드가 호출됩니다. MBean 서버 메소드에 의해 리턴 된 값은 클라이언트에 리턴 된 값입니다. MBean 서버 메소드가 &lt;code&gt;Exception&lt;/code&gt; 를 생성하면 (자) , 클라이언트는 같은 &lt;code&gt;Exception&lt;/code&gt; 를 보게됩니다. MBean 서버 메소드 또는 호출 시도가 &lt;code&gt;Error&lt;/code&gt; 를 생성하면 (자 ), &lt;code&gt;Error&lt;/code&gt; 는 &lt;a href=&quot;jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; 에&lt;/a&gt; 랩 됩니다.</target>
        </trans-unit>
        <trans-unit id="719f9f441ad2dee9837b67bc47a02d9badbbe4a3" translate="yes" xml:space="preserve">
          <source>For each non-transient property, an expression is created in which the nullary &quot;getter&quot; method is applied to the &lt;code&gt;oldInstance&lt;/code&gt;. The value of this expression is the value of the property in the instance that is being serialized. If the value of this expression in the cloned environment &lt;code&gt;mutatesTo&lt;/code&gt; the target value, the new value is initialized to make it equivalent to the old value. In this case, because the property value has not changed there is no need to call the corresponding &quot;setter&quot; method and no statement is emitted. If not however, the expression for this value is replaced with another expression (normally a constructor) and the corresponding &quot;setter&quot; method is called to install the new property value in the object. This scheme removes default information from the output produced by streams using this delegate.</source>
          <target state="translated">일시적이지 않은 각 속성에 대해 nullary &quot;getter&quot;메서드가 &lt;code&gt;oldInstance&lt;/code&gt; 에 적용되는식이 만들어 집니다. 이 표현식의 값은 직렬화되는 인스턴스의 특성 값입니다. 만약 복제 된 환경에서이 식의 값 &lt;code&gt;mutatesTo&lt;/code&gt; 목표 값, 새로운 값은 이전 값과 동일하게 초기화됩니다. 이 경우 특성 값이 변경되지 않았으므로 해당 &quot;setter&quot;메소드를 호출 할 필요가 없으며 명령문이 생성되지 않습니다. 그러나 그렇지 않은 경우이 값의 표현식이 다른 표현식 (일반적으로 생성자)으로 대체되고 해당 &quot;setter&quot;메소드가 호출되어 오브젝트에 새 특성 값을 설치합니다. 이 체계는이 대리자를 사용하여 스트림에서 생성 된 출력에서 ​​기본 정보를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="b6e68cba9e515c80a86dee74a48fa0652d49385f" translate="yes" xml:space="preserve">
          <source>For each of the correspondents in the key exchange, &lt;code&gt;doPhase&lt;/code&gt; needs to be called. For example, if this key exchange is with one other party, &lt;code&gt;doPhase&lt;/code&gt; needs to be called once, with the &lt;code&gt;lastPhase&lt;/code&gt; flag set to &lt;code&gt;true&lt;/code&gt;. If this key exchange is with two other parties, &lt;code&gt;doPhase&lt;/code&gt; needs to be called twice, the first time setting the &lt;code&gt;lastPhase&lt;/code&gt; flag to &lt;code&gt;false&lt;/code&gt;, and the second time setting it to &lt;code&gt;true&lt;/code&gt;. There may be any number of parties involved in a key exchange.</source>
          <target state="translated">키 교환의 각 통신원에 대해 &lt;code&gt;doPhase&lt;/code&gt; 를 호출해야합니다. 예를 들어,이 키 교환이 다른 당사자 와 이루어지면 &lt;code&gt;lastPhase&lt;/code&gt; 플래그가 &lt;code&gt;true&lt;/code&gt; 로 설정된 &lt;code&gt;doPhase&lt;/code&gt; 를 한 번 호출 해야 합니다 . 이 키 교환이 다른 두 당사자와의 경우 &lt;code&gt;doPhase&lt;/code&gt; 를 두 번 호출해야합니다. 처음은 &lt;code&gt;lastPhase&lt;/code&gt; 플래그를 &lt;code&gt;false&lt;/code&gt; 로 설정하고 두 번째는이를 &lt;code&gt;true&lt;/code&gt; 로 설정해야 합니다 . 키 교환에는 여러 당사자가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf1abc49e05851db66fa969e8d77a4a123b0ee0f" translate="yes" xml:space="preserve">
          <source>For each of the correspondents in the key exchange, &lt;code&gt;engineDoPhase&lt;/code&gt; needs to be called. For example, if the key exchange is with one other party, &lt;code&gt;engineDoPhase&lt;/code&gt; needs to be called once, with the &lt;code&gt;lastPhase&lt;/code&gt; flag set to &lt;code&gt;true&lt;/code&gt;. If the key exchange is with two other parties, &lt;code&gt;engineDoPhase&lt;/code&gt; needs to be called twice, the first time setting the &lt;code&gt;lastPhase&lt;/code&gt; flag to &lt;code&gt;false&lt;/code&gt;, and the second time setting it to &lt;code&gt;true&lt;/code&gt;. There may be any number of parties involved in a key exchange.</source>
          <target state="translated">키 교환의 각 통신원에 대해 &lt;code&gt;engineDoPhase&lt;/code&gt; 를 호출해야합니다. 예를 들어, 키 교환이 다른 당사자 와의 경우 &lt;code&gt;lastPhase&lt;/code&gt; 플래그를 &lt;code&gt;true&lt;/code&gt; 로 설정하여 &lt;code&gt;engineDoPhase&lt;/code&gt; 를 한 번 호출 해야 합니다 . 키 교환이 다른 두 당사자와의 경우 &lt;code&gt;engineDoPhase&lt;/code&gt; 를 두 번 호출해야합니다. 처음은 &lt;code&gt;lastPhase&lt;/code&gt; 플래그를 &lt;code&gt;false&lt;/code&gt; 로 설정하고 두 번째는이를 &lt;code&gt;true&lt;/code&gt; 로 설정해야 합니다 . 키 교환에는 여러 당사자가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6705d80531c8f298495e16bdc3ba61df9ab6cbdc" translate="yes" xml:space="preserve">
          <source>For each of those three kinds of information, the Introspector will separately analyze the bean's class and superclasses looking for either explicit or implicit information and use that information to build a BeanInfo object that comprehensively describes the target bean.</source>
          <target state="translated">Introspector는 이러한 세 가지 정보 각각에 대해 명시 적 또는 암시 적 정보를 찾고있는 Bean 클래스 및 수퍼 클래스를 개별적으로 분석하고 해당 정보를 사용하여 대상 Bean을 포괄적으로 설명하는 BeanInfo 오브젝트를 빌드합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
