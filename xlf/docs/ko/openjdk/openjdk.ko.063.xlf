<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="f35c69a87b7c97f8c7a24f2c794c61dc1cc651df" translate="yes" xml:space="preserve">
          <source>Adds the specified &lt;code&gt;ChangeListener&lt;/code&gt; to the progress bar.</source>
          <target state="translated">진행률 표시 줄에 지정된 &lt;code&gt;ChangeListener&lt;/code&gt; 를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="be116134c8107c6c4eba37c711268133fa79cd2c" translate="yes" xml:space="preserve">
          <source>Adds the specified &lt;code&gt;DragSourceListener&lt;/code&gt; to this &lt;code&gt;DragSource&lt;/code&gt; to receive drag source events during drag operations initiated with this &lt;code&gt;DragSource&lt;/code&gt;.</source>
          <target state="translated">지정된 추가 &lt;code&gt;DragSourceListener&lt;/code&gt; 를 이에 &lt;code&gt;DragSource&lt;/code&gt; 에는 이와 함께 시작 드래그 조작 중의 드래그 소스 이벤트를 수신 &lt;code&gt;DragSource&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02574868d32749355ea4f08f4f5a963af1a25e8c" translate="yes" xml:space="preserve">
          <source>Adds the specified &lt;code&gt;DragSourceListener&lt;/code&gt; to this &lt;code&gt;DragSource&lt;/code&gt; to receive drag source events during drag operations initiated with this &lt;code&gt;DragSource&lt;/code&gt;. If a &lt;code&gt;null&lt;/code&gt; listener is specified, no action is taken and no exception is thrown.</source>
          <target state="translated">지정된 추가 &lt;code&gt;DragSourceListener&lt;/code&gt; 를 이에 &lt;code&gt;DragSource&lt;/code&gt; 에는 이와 함께 시작 드래그 조작 중의 드래그 소스 이벤트를 수신 &lt;code&gt;DragSource&lt;/code&gt; . 경우 &lt;code&gt;null&lt;/code&gt; 청취자가 지정, 처리는 행해지 지 않고, 예외가 발생되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7b49d7e668d89d63bd832347a1cc54e44b6e0714" translate="yes" xml:space="preserve">
          <source>Adds the specified &lt;code&gt;DragSourceMotionListener&lt;/code&gt; to this &lt;code&gt;DragSource&lt;/code&gt; to receive drag motion events during drag operations initiated with this &lt;code&gt;DragSource&lt;/code&gt;.</source>
          <target state="translated">지정된 추가 &lt;code&gt;DragSourceMotionListener&lt;/code&gt; 를 이에 &lt;code&gt;DragSource&lt;/code&gt; 에는 이와 함께 시작 드래그 조작 중의 드래그 모션 이벤트를 수신 &lt;code&gt;DragSource&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a8bc51430b2c496840cf82ae20e20447d3e3e19" translate="yes" xml:space="preserve">
          <source>Adds the specified &lt;code&gt;DragSourceMotionListener&lt;/code&gt; to this &lt;code&gt;DragSource&lt;/code&gt; to receive drag motion events during drag operations initiated with this &lt;code&gt;DragSource&lt;/code&gt;. If a &lt;code&gt;null&lt;/code&gt; listener is specified, no action is taken and no exception is thrown.</source>
          <target state="translated">지정된 추가 &lt;code&gt;DragSourceMotionListener&lt;/code&gt; 를 이에 &lt;code&gt;DragSource&lt;/code&gt; 에는 이와 함께 시작 드래그 조작 중의 드래그 모션 이벤트를 수신 &lt;code&gt;DragSource&lt;/code&gt; . 경우 &lt;code&gt;null&lt;/code&gt; 청취자가 지정, 처리는 행해지 지 않고, 예외가 발생되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="00f664de93d71bf1b775007ea0c0fc2acf89fe71" translate="yes" xml:space="preserve">
          <source>Adds the specified &lt;code&gt;FocusListener&lt;/code&gt; to receive focus events from this component.</source>
          <target state="translated">이 컴퍼넌트로부터 포커스 이벤트를 받기 위해 지정된 &lt;code&gt;FocusListener&lt;/code&gt; 를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="768eb1d29087f0b1099fc8f5a6874704c4903d8a" translate="yes" xml:space="preserve">
          <source>Adds the specified &lt;code&gt;ImageConsumer&lt;/code&gt; to the list of consumers interested in data for the filtered image.</source>
          <target state="translated">필터링 된 이미지의 데이터에 관심이있는 소비자 목록에 지정된 &lt;code&gt;ImageConsumer&lt;/code&gt; 를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="e0da60390d6e8614e5c1d217e867d303b4eb9ed9" translate="yes" xml:space="preserve">
          <source>Adds the specified &lt;code&gt;ImageConsumer&lt;/code&gt; to the list of consumers interested in data for the filtered image. An instance of the original &lt;code&gt;ImageFilter&lt;/code&gt; is created (using the filter's &lt;code&gt;getFilterInstance&lt;/code&gt; method) to manipulate the image data for the specified &lt;code&gt;ImageConsumer&lt;/code&gt;. The newly created filter instance is then passed to the &lt;code&gt;addConsumer&lt;/code&gt; method of the original &lt;code&gt;ImageProducer&lt;/code&gt;.</source>
          <target state="translated">필터링 된 이미지의 데이터에 관심이있는 소비자 목록에 지정된 &lt;code&gt;ImageConsumer&lt;/code&gt; 를 추가합니다 . 지정된 &lt;code&gt;ImageConsumer&lt;/code&gt; 에 대한 이미지 데이터를 조작하기 위해 원본 &lt;code&gt;ImageFilter&lt;/code&gt; 의 인스턴스 가 생성됩니다 (필터의 &lt;code&gt;getFilterInstance&lt;/code&gt; 메서드 사용) . 새로 생성 된 필터 인스턴스는 원본 &lt;code&gt;ImageProducer&lt;/code&gt; 의 &lt;code&gt;addConsumer&lt;/code&gt; 메서드 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="6d10cd5190c89a0ea002d0d160f7292b4ab827cc" translate="yes" xml:space="preserve">
          <source>Adds the specified &lt;code&gt;Point&lt;/code&gt; to the bounds of this &lt;code&gt;Rectangle&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Rectangle&lt;/code&gt; 경계에 지정된 &lt;code&gt;Point&lt;/code&gt; 를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="85600f741f9d4a80f7d3f424935ad203b1baafc2" translate="yes" xml:space="preserve">
          <source>Adds the specified Accessible child of the object to the object's selection.</source>
          <target state="translated">개체의 지정된 Accessible 자식을 개체의 선택 항목에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="310a19d9ce1ebab0e3ee19cb7c5e7b0e3ca78e64" translate="yes" xml:space="preserve">
          <source>Adds the specified Accessible child of the object to the object's selection. If the object supports multiple selections, the specified child is added to any existing selection, otherwise it replaces any existing selection in the object. If the specified child is already selected, this method has no effect.</source>
          <target state="translated">개체의 지정된 Accessible 자식을 개체의 선택 항목에 추가합니다. 객체가 다중 선택을 지원하는 경우 지정된 자식이 기존 선택에 추가되고 그렇지 않으면 객체의 기존 선택을 대체합니다. 지정된 자식이 이미 선택되어있는 경우이 방법은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="fe6814f6821e4096c08f2ad8edab0c10c06638c3" translate="yes" xml:space="preserve">
          <source>Adds the specified action listener to receive &lt;code&gt;ActionEvent&lt;/code&gt;s from this &lt;code&gt;TrayIcon&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;TrayIcon&lt;/code&gt; 로부터 &lt;code&gt;ActionEvent&lt;/code&gt; 를 받기 위해 지정된 액션 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="54221aa7643f5999977f760f4aef832e90ecc776" translate="yes" xml:space="preserve">
          <source>Adds the specified action listener to receive &lt;code&gt;ActionEvent&lt;/code&gt;s from this &lt;code&gt;TrayIcon&lt;/code&gt;. Action events usually occur when a user selects the tray icon, using either the mouse or keyboard. The conditions in which action events are generated are platform-dependent.</source>
          <target state="translated">이 &lt;code&gt;TrayIcon&lt;/code&gt; 로부터 &lt;code&gt;ActionEvent&lt;/code&gt; 를 받기 위해 지정된 액션 리스너를 추가합니다 . 작업 이벤트는 일반적으로 사용자가 마우스 나 키보드를 사용하여 트레이 아이콘을 선택할 때 발생합니다. 액션 이벤트가 생성되는 조건은 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5b9fd5375a34ebe6cc5dc7832ec5f31ef3b907cc" translate="yes" xml:space="preserve">
          <source>Adds the specified action listener to receive action events from this button.</source>
          <target state="translated">이 버튼에서 액션 이벤트를 받기 위해 지정된 액션 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="19e8cea88324270b894fa05683ae1171db57950e" translate="yes" xml:space="preserve">
          <source>Adds the specified action listener to receive action events from this button. Action events occur when a user presses or releases the mouse over this button. If l is null, no exception is thrown and no action is performed.</source>
          <target state="translated">이 버튼에서 액션 이벤트를 받기 위해 지정된 액션 리스너를 추가합니다. 사용자가이 버튼 위에 마우스를 놓거나 눌렀을 때 액션 이벤트가 발생합니다. l이 널이면 예외가 발생하지 않고 조치가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cad26f6f1916a0ab9a0ea62a2a5ce818820c7974" translate="yes" xml:space="preserve">
          <source>Adds the specified action listener to receive action events from this list.</source>
          <target state="translated">이 목록에서 조치 이벤트를 수신하기 위해 지정된 조치 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f928efeba51967d455780c372e891b7c05701dfd" translate="yes" xml:space="preserve">
          <source>Adds the specified action listener to receive action events from this list. Action events occur when a user double-clicks on a list item or types Enter when the list has the keyboard focus.</source>
          <target state="translated">이 목록에서 조치 이벤트를 수신하기 위해 지정된 조치 리스너를 추가합니다. 사용자가 목록 항목을 두 번 클릭하거나 목록에 키보드 포커스가있을 때 Enter를 입력하면 작업 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ec2b8db6b6e9313860a725c96a7ffb1377380a68" translate="yes" xml:space="preserve">
          <source>Adds the specified action listener to receive action events from this menu item.</source>
          <target state="translated">이 메뉴 항목에서 액션 이벤트를 받기 위해 지정된 액션 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="764ee7a7f7125c0a5dee53a28534f7a0f9303b84" translate="yes" xml:space="preserve">
          <source>Adds the specified action listener to receive action events from this menu item. If l is null, no exception is thrown and no action is performed.</source>
          <target state="translated">이 메뉴 항목에서 액션 이벤트를 받기 위해 지정된 액션 리스너를 추가합니다. l이 널이면 예외가 발생하지 않고 조치가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b7b3ef18fc24b9999a0e6bfb0e723bd43f88a254" translate="yes" xml:space="preserve">
          <source>Adds the specified action listener to receive action events from this text field.</source>
          <target state="translated">이 텍스트 필드에서 조치 이벤트를 수신하기 위해 지정된 조치 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e07c1591f41fb419bc5d0d8cea6f09cc44330523" translate="yes" xml:space="preserve">
          <source>Adds the specified action listener to receive action events from this text field. If l is null, no exception is thrown and no action is performed.</source>
          <target state="translated">이 텍스트 필드에서 조치 이벤트를 수신하기 위해 지정된 조치 리스너를 추가합니다. l이 널이면 예외가 발생하지 않고 조치가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2e632f319da5f8a5f423ba7b79946584b96d6c84" translate="yes" xml:space="preserve">
          <source>Adds the specified action listener to receive action events from this textfield.</source>
          <target state="translated">이 텍스트 필드에서 액션 이벤트를 받기 위해 지정된 액션 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3c07f3cceb1c0c8acb1ffef35998fe161eac9663" translate="yes" xml:space="preserve">
          <source>Adds the specified adjustment listener to receive adjustment events from this &lt;code&gt;ScrollPaneAdjustable&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;ScrollPaneAdjustable&lt;/code&gt; 로부터 조정 이벤트를 받기 위해 지정된 조정 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="46c385bf3ddd2d35282aadce3856c41f1783ad21" translate="yes" xml:space="preserve">
          <source>Adds the specified adjustment listener to receive adjustment events from this &lt;code&gt;ScrollPaneAdjustable&lt;/code&gt;. If &lt;code&gt;l&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is performed.</source>
          <target state="translated">이 &lt;code&gt;ScrollPaneAdjustable&lt;/code&gt; 로부터 조정 이벤트를 받기 위해 지정된 조정 리스너를 추가합니다 . 경우 &lt;code&gt;l&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; , 예외는 슬로우되지 않고, 처리도 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f82575061238d5148f9ccdb65f3f73040e19a850" translate="yes" xml:space="preserve">
          <source>Adds the specified adjustment listener to receive instances of &lt;code&gt;AdjustmentEvent&lt;/code&gt; from this scroll bar.</source>
          <target state="translated">스크롤 막대로부터 &lt;code&gt;AdjustmentEvent&lt;/code&gt; 인스턴스를 받기 위해 지정된 조정 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="86eca63864aa1168bc659cfc3bd6b6de6c86135c" translate="yes" xml:space="preserve">
          <source>Adds the specified adjustment listener to receive instances of &lt;code&gt;AdjustmentEvent&lt;/code&gt; from this scroll bar. If l is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is performed.</source>
          <target state="translated">스크롤 막대로부터 &lt;code&gt;AdjustmentEvent&lt;/code&gt; 인스턴스를 받기 위해 지정된 조정 리스너를 추가합니다 . l이 &lt;code&gt;null&lt;/code&gt; 이면 예외가 발생하지 않고 작업이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cfaa0d2e43cb541dc00719f8f6b6affb1855878b" translate="yes" xml:space="preserve">
          <source>Adds the specified attribute to this attribute set if it is not already present, first removing any existing in the same attribute category as the specified attribute value.</source>
          <target state="translated">지정된 속성이없는 경우이 속성 세트에 지정된 속성을 추가하여 지정된 속성 값과 동일한 속성 범주에있는 기존 속성을 먼저 제거합니다.</target>
        </trans-unit>
        <trans-unit id="695f4912181d77a1f14c13b45c8d895d173212eb" translate="yes" xml:space="preserve">
          <source>Adds the specified attribute to this attribute set if it is not already present, first removing any existing value in the same attribute category as the specified attribute value.</source>
          <target state="translated">지정된 속성이없는 경우이 속성 세트에 지정된 속성을 추가하여 지정된 속성 값과 동일한 속성 범주의 기존 값을 먼저 제거합니다.</target>
        </trans-unit>
        <trans-unit id="964cc926937f6fe4b9f8f454249ff5cdb45d2627" translate="yes" xml:space="preserve">
          <source>Adds the specified attribute value to this attribute set if it is not already present, first removing any existing value in the same attribute category as the specified attribute value (optional operation).</source>
          <target state="translated">지정된 속성 값이없는 경우이 속성 세트에 지정된 속성 값을 추가하여 지정된 속성 값과 동일한 속성 범주의 기존 값을 먼저 제거합니다 (선택적 조작).</target>
        </trans-unit>
        <trans-unit id="fd4c0b06a227f4f81d6db68a2cc827e85d3a82b0" translate="yes" xml:space="preserve">
          <source>Adds the specified child &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">지정된 자식 &lt;code&gt;Component&lt;/code&gt; 를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="ef22be470ada20e6b4114b744741294b20d0156b" translate="yes" xml:space="preserve">
          <source>Adds the specified child &lt;code&gt;Component&lt;/code&gt;. This method is overridden to conditionally forward calls to the &lt;code&gt;contentPane&lt;/code&gt;. By default, children are added to the &lt;code&gt;contentPane&lt;/code&gt; instead of the frame, refer to &lt;a href=&quot;rootpanecontainer&quot;&gt;&lt;code&gt;RootPaneContainer&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">지정된 자식 &lt;code&gt;Component&lt;/code&gt; 를 추가합니다 . 이 메서드는 &lt;code&gt;contentPane&lt;/code&gt; 에 조건부로 호출을 전달하도록 재정의됩니다 . 기본적으로 자식은 프레임 대신 &lt;code&gt;contentPane&lt;/code&gt; 에 추가됩니다 . 자세한 내용은 &lt;a href=&quot;rootpanecontainer&quot;&gt; &lt;code&gt;RootPaneContainer&lt;/code&gt; &lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="b1c631958ed09c11fae5cd8c4a305af0c55fcadc" translate="yes" xml:space="preserve">
          <source>Adds the specified component listener to receive component events from this component.</source>
          <target state="translated">이 컴퍼넌트로부터 컴퍼넌트 이벤트를 받기 위해 지정된 컴퍼넌트 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="dad5ec251db9099d29385e90d07701e39d799e48" translate="yes" xml:space="preserve">
          <source>Adds the specified component listener to receive component events from this component. If listener &lt;code&gt;l&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is performed.</source>
          <target state="translated">이 컴퍼넌트로부터 컴퍼넌트 이벤트를 받기 위해 지정된 컴퍼넌트 리스너를 추가합니다. 리스너 &lt;code&gt;l&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 이면 예외가 발생하지 않고 조치가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="10e9d42ed1e188b692bdb8675653a57c2362ecd0" translate="yes" xml:space="preserve">
          <source>Adds the specified component to the end of this container.</source>
          <target state="translated">이 컨테이너의 끝에 지정된 구성 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6e13e40935c4e75afa59cf5a5b73604024920dc9" translate="yes" xml:space="preserve">
          <source>Adds the specified component to the end of this container. Also notifies the layout manager to add the component to this container's layout using the specified constraints object. This is a convenience method for &lt;a href=&quot;#addImpl(java.awt.Component,java.lang.Object,int)&quot;&gt;&lt;code&gt;addImpl(java.awt.Component, java.lang.Object, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 컨테이너의 끝에 지정된 구성 요소를 추가합니다. 또한 지정된 제약 객체를 사용하여이 컨테이너의 레이아웃에 컴포넌트를 추가하도록 레이아웃 관리자에게 알립니다. 이것은 &lt;a href=&quot;#addImpl(java.awt.Component,java.lang.Object,int)&quot;&gt; &lt;code&gt;addImpl(java.awt.Component, java.lang.Object, int)&lt;/code&gt; &lt;/a&gt; 대한 편리한 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="b31981582adba341dbd93e902531db610833dc65" translate="yes" xml:space="preserve">
          <source>Adds the specified component to the end of this list.</source>
          <target state="translated">이 목록의 끝에 지정된 구성 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="86c6e1245a488d80f4791dce7a839a60851dbad3" translate="yes" xml:space="preserve">
          <source>Adds the specified component to the end of this vector, increasing its size by one.</source>
          <target state="translated">이 벡터의 끝에 지정된 구성 요소를 추가하여 크기를 1 씩 늘립니다.</target>
        </trans-unit>
        <trans-unit id="9d079134144dadea93ef07e4f08261c891e4ea60" translate="yes" xml:space="preserve">
          <source>Adds the specified component to the end of this vector, increasing its size by one. The capacity of this vector is increased if its size becomes greater than its capacity.</source>
          <target state="translated">지정된 구성 요소를이 벡터의 끝에 추가하여 크기를 1만큼 증가시킵니다. 크기가 용량보다 커지면이 벡터의 용량이 증가합니다.</target>
        </trans-unit>
        <trans-unit id="ae7bbae490405df735f1ee040c34851fc1bee01d" translate="yes" xml:space="preserve">
          <source>Adds the specified component to the layout, using the specified &lt;code&gt;constraints&lt;/code&gt; object.</source>
          <target state="translated">지정된 &lt;code&gt;constraints&lt;/code&gt; 개체를 사용하여 지정된 구성 요소를 레이아웃에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="124bc7626165e461cd1ab2d7fa3f5e8d7c1cb66a" translate="yes" xml:space="preserve">
          <source>Adds the specified component to the layout, using the specified &lt;code&gt;constraints&lt;/code&gt; object. Note that constraints are mutable and are, therefore, cloned when cached.</source>
          <target state="translated">지정된 &lt;code&gt;constraints&lt;/code&gt; 개체를 사용하여 지정된 구성 요소를 레이아웃에 추가합니다 . 제약 조건은 변경 가능하므로 캐시 될 때 복제됩니다.</target>
        </trans-unit>
        <trans-unit id="14bb3803d881367012bdd93de6b48875b812cb2f" translate="yes" xml:space="preserve">
          <source>Adds the specified component to the layout, using the specified constraint object.</source>
          <target state="translated">지정된 제약 개체를 사용하여 지정된 구성 요소를 레이아웃에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="4a8eb58f1a2f6361bef6e59a3ad7409ffa7fbe1c" translate="yes" xml:space="preserve">
          <source>Adds the specified component to the layout, using the specified constraint object. For border layouts, the constraint must be one of the following constants: &lt;code&gt;NORTH&lt;/code&gt;, &lt;code&gt;SOUTH&lt;/code&gt;, &lt;code&gt;EAST&lt;/code&gt;, &lt;code&gt;WEST&lt;/code&gt;, or &lt;code&gt;CENTER&lt;/code&gt;.</source>
          <target state="translated">지정된 제약 개체를 사용하여 지정된 구성 요소를 레이아웃에 추가합니다. 테두리 레이아웃의 경우 제약 조건은 &lt;code&gt;NORTH&lt;/code&gt; , &lt;code&gt;SOUTH&lt;/code&gt; , &lt;code&gt;EAST&lt;/code&gt; , &lt;code&gt;WEST&lt;/code&gt; 또는 &lt;code&gt;CENTER&lt;/code&gt; 상수 중 하나 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="befdf01734b4fb6178f9421a4bf5e95349ebbf1e" translate="yes" xml:space="preserve">
          <source>Adds the specified component to the layout, using the specified constraint object. Used by this class to know when to invalidate layout.</source>
          <target state="translated">지정된 제약 개체를 사용하여 지정된 구성 요소를 레이아웃에 추가합니다. 이 클래스에서 레이아웃을 무효화 할시기를 알기 위해 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ad86901ba2f1124c765c3ab4a1b4ab879ad4fde9" translate="yes" xml:space="preserve">
          <source>Adds the specified component to the layout.</source>
          <target state="translated">지정된 구성 요소를 레이아웃에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="47e605e445056adae473a7a7f3c7d70f6677f6b3" translate="yes" xml:space="preserve">
          <source>Adds the specified component to the layout. Not used by this class.</source>
          <target state="translated">지정된 구성 요소를 레이아웃에 추가합니다. 이 클래스에서 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5dd690336ad1bb3da8189c6dbcf69c182a896670" translate="yes" xml:space="preserve">
          <source>Adds the specified component to the layout. The layout is identified using one of:</source>
          <target state="translated">지정된 구성 요소를 레이아웃에 추가합니다. 레이아웃은 다음 중 하나를 사용하여 식별됩니다.</target>
        </trans-unit>
        <trans-unit id="531bc74ece4682744ed3554c226254f8cce2ab46" translate="yes" xml:space="preserve">
          <source>Adds the specified component to the layout. Used by this class to know when to invalidate layout.</source>
          <target state="translated">지정된 구성 요소를 레이아웃에 추가합니다. 이 클래스에서 레이아웃을 무효화 할시기를 알기 위해 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f110981635a9fc7f19d735edf2192d88fbad58e1" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this card layout's internal table of names.</source>
          <target state="translated">이 카드 레이아웃의 내부 이름 테이블에 지정된 구성 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ee609cc4049f67e364eb977df05e2371ad23a041" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this card layout's internal table of names. The object specified by &lt;code&gt;constraints&lt;/code&gt; must be a string. The card layout stores this string as a key-value pair that can be used for random access to a particular card. By calling the &lt;code&gt;show&lt;/code&gt; method, an application can display the component with the specified name.</source>
          <target state="translated">이 카드 레이아웃의 내부 이름 테이블에 지정된 구성 요소를 추가합니다. &lt;code&gt;constraints&lt;/code&gt; 지정된 개체 는 문자열이어야합니다. 카드 레이아웃은이 문자열을 특정 카드에 대한 임의 액세스에 사용할 수있는 키-값 쌍으로 저장합니다. &lt;code&gt;show&lt;/code&gt; 메서드 를 호출하면 응용 프로그램에서 지정된 이름으로 구성 요소를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d025041724b7bbca3ce485c0e6d8369f28ddc028" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this container at the given position.</source>
          <target state="translated">지정된 위치에서이 컨테이너에 지정된 구성 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0e646d922be3d353c6e4aa3ec0384db522ade32e" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this container at the given position. If &lt;code&gt;index&lt;/code&gt; equals -1, the component will be appended to the end.</source>
          <target state="translated">지정된 위치에서이 컨테이너에 지정된 구성 요소를 추가합니다. 경우 &lt;code&gt;index&lt;/code&gt; -1에 해당 구성 요소가 마지막에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="906af607a5db71239613f6514bee86556a52a88b" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this container at the given position. This is a convenience method for &lt;a href=&quot;#addImpl(java.awt.Component,java.lang.Object,int)&quot;&gt;&lt;code&gt;addImpl(java.awt.Component, java.lang.Object, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 위치에서이 컨테이너에 지정된 구성 요소를 추가합니다. 이것은 &lt;a href=&quot;#addImpl(java.awt.Component,java.lang.Object,int)&quot;&gt; &lt;code&gt;addImpl(java.awt.Component, java.lang.Object, int)&lt;/code&gt; &lt;/a&gt; 대한 편리한 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="706a9e4ef2acd881304e08a32148580a2ab20172" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this container at the specified index, refer to &lt;a href=&quot;../../java/awt/container#addImpl(java.awt.Component,java.lang.Object,int)&quot;&gt;&lt;code&gt;Container.addImpl(Component, Object, int)&lt;/code&gt;&lt;/a&gt; for a complete description of this method.</source>
          <target state="translated">지정된 인덱스에서이 컨테이너에 지정된 구성 요소를 추가합니다 .이 메서드에 대한 전체 설명은 &lt;a href=&quot;../../java/awt/container#addImpl(java.awt.Component,java.lang.Object,int)&quot;&gt; &lt;code&gt;Container.addImpl(Component, Object, int)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a1e410800c3738ea283ff2f3f0f1afad3f634ef" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this container at the specified index.</source>
          <target state="translated">지정된 인덱스의이 컨테이너에 지정된 구성 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="1640d366eb6be9461cd00663e19755d1936de581" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this container at the specified index. This method also notifies the layout manager to add the component to this container's layout using the specified constraints object via the &lt;code&gt;addLayoutComponent&lt;/code&gt; method.</source>
          <target state="translated">지정된 인덱스의이 컨테이너에 지정된 구성 요소를 추가합니다. 이 메소드는 또한 &lt;code&gt;addLayoutComponent&lt;/code&gt; 메소드 를 통해 지정된 제약 객체를 사용하여이 컨테이너의 레이아웃에 컴포넌트를 추가하도록 레이아웃 관리자에게 알립니다 .</target>
        </trans-unit>
        <trans-unit id="992181eb9547167fa04a6d69558882a523c698c0" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this container with the specified constraints at the specified index.</source>
          <target state="translated">지정된 인덱스에 지정된 제약 조건을 사용하여 지정된 구성 요소를이 컨테이너에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="17fc2bb60f798d27cc5f08939ab4953661d629d4" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this container with the specified constraints at the specified index. Also notifies the layout manager to add the component to the this container's layout using the specified constraints object. This is a convenience method for &lt;a href=&quot;#addImpl(java.awt.Component,java.lang.Object,int)&quot;&gt;&lt;code&gt;addImpl(java.awt.Component, java.lang.Object, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 인덱스에 지정된 제약 조건을 사용하여 지정된 구성 요소를이 컨테이너에 추가합니다. 또한 지정된 제약 객체를 사용하여이 컨테이너의 레이아웃에 컴포넌트를 추가하도록 레이아웃 관리자에게 알립니다. 이것은 &lt;a href=&quot;#addImpl(java.awt.Component,java.lang.Object,int)&quot;&gt; &lt;code&gt;addImpl(java.awt.Component, java.lang.Object, int)&lt;/code&gt; &lt;/a&gt; 대한 편리한 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="c69cc12a7d5e0525e202f8385fb8b3e982d5c62d" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this container.</source>
          <target state="translated">이 컨테이너에 지정된 구성 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="9e67a56e38fcca789ed33bcef8aad1ba2ab49089" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this container. This is a convenience method for &lt;a href=&quot;#addImpl(java.awt.Component,java.lang.Object,int)&quot;&gt;&lt;code&gt;addImpl(java.awt.Component, java.lang.Object, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 컨테이너에 지정된 구성 요소를 추가합니다. 이것은 &lt;a href=&quot;#addImpl(java.awt.Component,java.lang.Object,int)&quot;&gt; &lt;code&gt;addImpl(java.awt.Component, java.lang.Object, int)&lt;/code&gt; &lt;/a&gt; 대한 편리한 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="ade914122b95536080cdaabfbc263b3399cb6d08" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this scroll pane container.</source>
          <target state="translated">이 스크롤 창 컨테이너에 지정된 구성 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="950ff1f82be127f21fc904000790d8f2ae397ce2" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this scroll pane container. If the scroll pane has an existing child component, that component is removed and the new one is added.</source>
          <target state="translated">이 스크롤 창 컨테이너에 지정된 구성 요소를 추가합니다. 스크롤 창에 기존 자식 구성 요소가있는 경우 해당 구성 요소가 제거되고 새 구성 요소가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="1993b96b96d8069aec954bf8895bb82235313eab" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this split pane.</source>
          <target state="translated">이 분할 창에 지정된 구성 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="9159fd74ce225a40db72a08bc85da4fac3fd740d" translate="yes" xml:space="preserve">
          <source>Adds the specified component to this split pane. If &lt;code&gt;constraints&lt;/code&gt; identifies the left/top or right/bottom child component, and a component with that identifier was previously added, it will be removed and then &lt;code&gt;comp&lt;/code&gt; will be added in its place. If &lt;code&gt;constraints&lt;/code&gt; is not one of the known identifiers the layout manager may throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">이 분할 창에 지정된 구성 요소를 추가합니다. 경우 &lt;code&gt;constraints&lt;/code&gt; 식별 왼쪽 / 오른쪽 위 또는 / 하위 자식 구성 요소 및 그 식별자 컴포넌트는 이전에 첨가하고, 그것을 삭제하고 나서 &lt;code&gt;comp&lt;/code&gt; 그 위치에 첨가한다. &lt;code&gt;constraints&lt;/code&gt; 이 알려진 식별자 중 하나가 아닌 경우 레이아웃 관리자는 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을 throw 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="24afafcbf214985c50af71958aa57a0e01ce87be" translate="yes" xml:space="preserve">
          <source>Adds the specified component with the specified name to the layout.</source>
          <target state="translated">지정된 이름을 가진 지정된 구성 요소를 레이아웃에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="74d270260bda6d900b6293bf34c25dfba2584e16" translate="yes" xml:space="preserve">
          <source>Adds the specified container listener to receive container events from this container.</source>
          <target state="translated">이 컨테이너로부터 컨테이너 이벤트를 받기 위해 지정된 컨테이너 수신기를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="d2256de244bc5701da8de281561079e1b4634b28" translate="yes" xml:space="preserve">
          <source>Adds the specified container listener to receive container events from this container. If l is null, no exception is thrown and no action is performed.</source>
          <target state="translated">이 컨테이너로부터 컨테이너 이벤트를 받기 위해 지정된 컨테이너 수신기를 추가합니다. l이 널이면 예외가 발생하지 않고 조치가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a422fb8ecc6a301f88c622f0a8f2274fa3519326" translate="yes" xml:space="preserve">
          <source>Adds the specified element as the tail (last element) of this list.</source>
          <target state="translated">지정된 요소를이 목록의 꼬리 (마지막 요소)로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ea888dd2a5373135bb38e19f845d9d4d6b7105f3" translate="yes" xml:space="preserve">
          <source>Adds the specified element to this job state reasons attribute if it is not already present.</source>
          <target state="translated">지정된 요소가 아직없는 경우이 작업 상태 이유 속성에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="fdb93a6b34afe7e0d88dfbf54ae738a4bf7ec285" translate="yes" xml:space="preserve">
          <source>Adds the specified element to this job state reasons attribute if it is not already present. The element to be added must be an instance of class &lt;a href=&quot;jobstatereason&quot;&gt;&lt;code&gt;JobStateReason&lt;/code&gt;&lt;/a&gt;. If this job state reasons attribute already contains the specified element, the call leaves this job state reasons attribute unchanged and returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">지정된 요소를이 작업 상태 이유 속성에 아직 추가하지 않은 경우 추가합니다. 추가 할 요소는 &lt;a href=&quot;jobstatereason&quot;&gt; &lt;code&gt;JobStateReason&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스 여야합니다 . 이 작업 상태 이유 속성에 이미 지정된 요소가 포함 된 경우, 호출은이 작업 상태 이유 속성을 변경하지 않고 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="a6bf38f579a34c41f921fd4871d637039e90aa7f" translate="yes" xml:space="preserve">
          <source>Adds the specified element to this queue, waiting if necessary for another thread to receive it.</source>
          <target state="translated">지정된 요소를이 큐에 추가하고 다른 스레드가이를 수신 할 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="cac117e5923e9c96d9952739ba7af0831293e91f" translate="yes" xml:space="preserve">
          <source>Adds the specified element to this set if it is not already present (optional operation).</source>
          <target state="translated">지정된 요소가 아직없는 경우이 세트에 추가합니다 (선택적 작업).</target>
        </trans-unit>
        <trans-unit id="3e13c6385d2fc62dc197c5c50940afd9cb27a8e0" translate="yes" xml:space="preserve">
          <source>Adds the specified element to this set if it is not already present (optional operation). More formally, adds the specified element &lt;code&gt;e&lt;/code&gt; to this set if the set contains no element &lt;code&gt;e2&lt;/code&gt; such that &lt;code&gt;(e==null ? e2==null : e.equals(e2))&lt;/code&gt;. If this set already contains the element, the call leaves the set unchanged and returns &lt;code&gt;false&lt;/code&gt;. In combination with the restriction on constructors, this ensures that sets never contain duplicate elements.</source>
          <target state="translated">지정된 요소가없는 경우이 세트에 지정된 요소를 추가합니다 (선택적 조작). 더 공식적으로, 세트에 요소 &lt;code&gt;e2&lt;/code&gt; 가 포함되어 있지 않으면 &lt;code&gt;(e==null ? e2==null : e.equals(e2))&lt;/code&gt; 와 같이 지정된 요소 &lt;code&gt;e&lt;/code&gt; 를이 세트에 추가합니다 . 이 세트에 이미 요소가 포함되어있는 경우, 호출은 세트를 변경하지 않고 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 . 생성자에 대한 제한과 결합하여 세트에 중복 요소가 포함되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="4d1c53025e8a991764478ba5e963bf56956dd142" translate="yes" xml:space="preserve">
          <source>Adds the specified element to this set if it is not already present (optional operation). More formally, adds the specified element &lt;code&gt;e&lt;/code&gt; to this set if the set contains no element &lt;code&gt;e2&lt;/code&gt; such that &lt;code&gt;Objects.equals(e, e2)&lt;/code&gt;. If this set already contains the element, the call leaves the set unchanged and returns &lt;code&gt;false&lt;/code&gt;. In combination with the restriction on constructors, this ensures that sets never contain duplicate elements.</source>
          <target state="translated">지정된 요소가 아직없는 경우이 세트에 추가합니다 (선택적 작업). 보다 공식적으로, 집합 에 &lt;code&gt;Objects.equals(e, e2)&lt;/code&gt; 와 같은 요소 &lt;code&gt;e2&lt;/code&gt; 가 포함되지 않은 경우 지정된 요소 &lt;code&gt;e&lt;/code&gt; 를이 집합에 추가합니다 . 이 세트에 이미 요소가 포함되어있는 경우 호출은 세트를 변경하지 않고 그대로두고 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 생성자에 대한 제한과 결합하여 집합에 중복 요소가 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c68c4448bee721bf62a98f5bdaa4b4c7fa2c7a2e" translate="yes" xml:space="preserve">
          <source>Adds the specified element to this set if it is not already present.</source>
          <target state="translated">이 세트에 지정된 요소가 아직없는 경우 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e2c656a18a898157ddacdc93f273921484c69930" translate="yes" xml:space="preserve">
          <source>Adds the specified element to this set if it is not already present. More formally, adds the specified element &lt;code&gt;e&lt;/code&gt; to this set if the set contains no element &lt;code&gt;e2&lt;/code&gt; such that &lt;code&gt;(e==null ? e2==null : e.equals(e2))&lt;/code&gt;. If this set already contains the element, the call leaves the set unchanged and returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">지정된 요소가 아직 없으면이 세트에 추가합니다. 더 공식적으로, 세트에 요소 &lt;code&gt;e2&lt;/code&gt; 가 포함되어 있지 않으면 &lt;code&gt;(e==null ? e2==null : e.equals(e2))&lt;/code&gt; 와 같이 지정된 요소 &lt;code&gt;e&lt;/code&gt; 를이 세트에 추가합니다 . 이 세트에 이미 요소가 포함되어있는 경우, 호출은 세트를 변경하지 않고 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="0f1e96ca14cab7a75555bca736f2d9c7d38c6d73" translate="yes" xml:space="preserve">
          <source>Adds the specified element to this set if it is not already present. More formally, adds the specified element &lt;code&gt;e&lt;/code&gt; to this set if the set contains no element &lt;code&gt;e2&lt;/code&gt; such that &lt;code&gt;Objects.equals(e, e2)&lt;/code&gt;. If this set already contains the element, the call leaves the set unchanged and returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 세트에 지정된 요소가 아직없는 경우 추가합니다. 보다 공식적으로, 집합 에 &lt;code&gt;Objects.equals(e, e2)&lt;/code&gt; 와 같은 요소 &lt;code&gt;e2&lt;/code&gt; 가 포함되지 않은 경우 지정된 요소 &lt;code&gt;e&lt;/code&gt; 를이 집합에 추가합니다 . 이 세트에 이미 요소가 포함되어있는 경우 호출은 세트를 변경하지 않고 그대로두고 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f0c05443b8735e7e608a81b5d7a015723cf03df9" translate="yes" xml:space="preserve">
          <source>Adds the specified element to this set if it is not already present. More formally, adds the specified element &lt;code&gt;e&lt;/code&gt; to this set if the set contains no element &lt;code&gt;e2&lt;/code&gt; such that &lt;code&gt;e.equals(e2)&lt;/code&gt;. If this set already contains the element, the call leaves the set unchanged and returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">지정된 요소가 아직 없으면이 세트에 추가합니다. 더 공식적으로, 세트 에 &lt;code&gt;e.equals(e2)&lt;/code&gt; 와 같은 요소 &lt;code&gt;e2&lt;/code&gt; 가 없으면 지정된 요소 &lt;code&gt;e&lt;/code&gt; 를이 세트에 추가합니다 . 이 세트에 이미 요소가 포함되어있는 경우, 호출은 세트를 변경하지 않고 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="d6b90a13bdb069c77d7b98b6955762b2bb1e8636" translate="yes" xml:space="preserve">
          <source>Adds the specified element to this set if it is not already present. More formally, adds the specified element &lt;code&gt;e&lt;/code&gt; to this set if this set contains no element &lt;code&gt;e2&lt;/code&gt; such that &lt;code&gt;(e==null ? e2==null : e.equals(e2))&lt;/code&gt;. If this set already contains the element, the call leaves the set unchanged and returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">지정된 요소가 아직 없으면이 세트에 추가합니다. 더 형식적으로, 지정된 요소에 추가 &lt;code&gt;e&lt;/code&gt; 세트가 포함하는 경우이 요소 세트를 &lt;code&gt;e2&lt;/code&gt; 되도록 &lt;code&gt;(e==null ? e2==null : e.equals(e2))&lt;/code&gt; . 이 세트에 이미 요소가 포함되어있는 경우, 호출은 세트를 변경하지 않고 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="efd3221aadc1922a35caeebfacf53219b6ed8f57" translate="yes" xml:space="preserve">
          <source>Adds the specified element to this set if it is not already present. More formally, adds the specified element &lt;code&gt;e&lt;/code&gt; to this set if this set contains no element &lt;code&gt;e2&lt;/code&gt; such that &lt;code&gt;Objects.equals(e, e2)&lt;/code&gt;. If this set already contains the element, the call leaves the set unchanged and returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 세트에 지정된 요소가 아직없는 경우 추가합니다. 보다 공식적으로, 이 세트 에 &lt;code&gt;Objects.equals(e, e2)&lt;/code&gt; 와 같은 요소 &lt;code&gt;e2&lt;/code&gt; 가 포함되지 않은 경우 지정된 요소 &lt;code&gt;e&lt;/code&gt; 를이 세트에 추가합니다 . 이 세트에 이미 요소가 포함되어있는 경우 호출은 세트를 변경하지 않고 그대로두고 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5dc51b86831cb66278f082d99e8b1d133dcc3ec8" translate="yes" xml:space="preserve">
          <source>Adds the specified focus listener to receive focus events from this component when this component gains input focus.</source>
          <target state="translated">이 컴퍼넌트가 입력 포커스를 얻을 때이 컴퍼넌트로부터 포커스 이벤트를 받기 위해 지정된 포커스 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="9bcf10832c5feb2e91a529945a3c84210e5ab871" translate="yes" xml:space="preserve">
          <source>Adds the specified focus listener to receive focus events from this component when this component gains input focus. If listener &lt;code&gt;l&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is performed.</source>
          <target state="translated">이 컴퍼넌트가 입력 포커스를 얻을 때이 컴퍼넌트로부터 포커스 이벤트를 받기 위해 지정된 포커스 리스너를 추가합니다. 리스너 &lt;code&gt;l&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 이면 예외가 발생하지 않고 조치가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="afe34dfd827dbb2a088336f6145b9ef3beb3a97b" translate="yes" xml:space="preserve">
          <source>Adds the specified focus listener to receive focus events from this component.</source>
          <target state="translated">이 컴퍼넌트로부터 포커스 이벤트를 받기 위해 지정된 포커스 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="aebe3b3e60f67e372dd39e4b25e848b0f5c9e756" translate="yes" xml:space="preserve">
          <source>Adds the specified hierarchy bounds listener to receive hierarchy bounds events from this component when the hierarchy to which this container belongs changes.</source>
          <target state="translated">이 컨테이너가 속한 계층이 변경 될 때이 컴포넌트로부터 계층 경계 이벤트를 수신하기 위해 지정된 계층 경계 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="2fab7fb4e3650f18c44e9b57a251edeeb0f7bc05" translate="yes" xml:space="preserve">
          <source>Adds the specified hierarchy bounds listener to receive hierarchy bounds events from this component when the hierarchy to which this container belongs changes. If listener &lt;code&gt;l&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is performed.</source>
          <target state="translated">이 컨테이너가 속한 계층이 변경 될 때이 컴포넌트로부터 계층 경계 이벤트를 수신하기 위해 지정된 계층 경계 리스너를 추가합니다. 리스너 &lt;code&gt;l&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 이면 예외가 발생하지 않고 조치가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="12b1caaedce80882c335fa11af1b73f951850f6d" translate="yes" xml:space="preserve">
          <source>Adds the specified hierarchy listener to receive hierarchy changed events from this component when the hierarchy to which this container belongs changes.</source>
          <target state="translated">이 컨테이너가 속한 계층이 변경 될 때이 컴포넌트로부터 계층 변경 이벤트를 수신하기 위해 지정된 계층 수신기를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="1c67cce0993e45d60eb65910ed8acdcb10718ec1" translate="yes" xml:space="preserve">
          <source>Adds the specified hierarchy listener to receive hierarchy changed events from this component when the hierarchy to which this container belongs changes. If listener &lt;code&gt;l&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is performed.</source>
          <target state="translated">이 컨테이너가 속한 계층이 변경 될 때이 컴포넌트로부터 계층 변경 이벤트를 수신하기 위해 지정된 계층 수신기를 추가합니다. 리스너 &lt;code&gt;l&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 이면 예외가 발생하지 않고 조치가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="42555a8e209a4acdda9ab99e83cdce6f36dad846" translate="yes" xml:space="preserve">
          <source>Adds the specified input method listener to receive input method events from this component.</source>
          <target state="translated">이 컴퍼넌트로부터 입력 메소드 이벤트를 받기 위해 지정된 입력 메소드 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="a0f8543def77a6f87737354a556f37fb361adf89" translate="yes" xml:space="preserve">
          <source>Adds the specified input method listener to receive input method events from this component. A component will only receive input method events from input methods if it also overrides &lt;code&gt;getInputMethodRequests&lt;/code&gt; to return an &lt;code&gt;InputMethodRequests&lt;/code&gt; instance. If listener &lt;code&gt;l&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is performed.</source>
          <target state="translated">이 컴퍼넌트로부터 입력 메소드 이벤트를 받기 위해 지정된 입력 메소드 리스너를 추가합니다. 구성 요소는 &lt;code&gt;InputMethodRequests&lt;/code&gt; 인스턴스 를 반환하기 위해 &lt;code&gt;getInputMethodRequests&lt;/code&gt; 를 재정의하는 경우에만 입력 메서드에서 입력 메서드 이벤트를받습니다 . 리스너 &lt;code&gt;l&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 이면 예외가 발생하지 않고 조치가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0dfc813606daec581d605ad0e26bbcc9b6cec2d1" translate="yes" xml:space="preserve">
          <source>Adds the specified item listener to receive item events from this &lt;code&gt;Choice&lt;/code&gt; menu.</source>
          <target state="translated">이 &lt;code&gt;Choice&lt;/code&gt; 메뉴 에서 항목 이벤트를 수신하기 위해 지정된 항목 수신기를 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="611a6af2dfc65c39b05f00830df99ab36b929fe5" translate="yes" xml:space="preserve">
          <source>Adds the specified item listener to receive item events from this &lt;code&gt;Choice&lt;/code&gt; menu. Item events are sent in response to user input, but not in response to calls to &lt;code&gt;select&lt;/code&gt;. If l is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is performed.</source>
          <target state="translated">이 &lt;code&gt;Choice&lt;/code&gt; 메뉴 에서 항목 이벤트를 수신하기 위해 지정된 항목 수신기를 추가 합니다. 항목 이벤트는 사용자 입력에 대한 응답으로 전송되지만 &lt;code&gt;select&lt;/code&gt; 호출에 대한 응답은 아닙니다 . l이 &lt;code&gt;null&lt;/code&gt; 이면 예외가 발생하지 않고 작업이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="52fafdad3f47605fa473a9c0465ae8612fe697be" translate="yes" xml:space="preserve">
          <source>Adds the specified item listener to receive item events from this check box menu item.</source>
          <target state="translated">이 체크 박스 메뉴 항목에서 항목 이벤트를 받기 위해 지정된 항목 수신기를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="65d40e64f4a854fb473b076de912d59690c8bd9f" translate="yes" xml:space="preserve">
          <source>Adds the specified item listener to receive item events from this check box menu item. Item events are sent in response to user actions, but not in response to calls to setState(). If l is null, no exception is thrown and no action is performed.</source>
          <target state="translated">이 체크 박스 메뉴 항목에서 항목 이벤트를 받기 위해 지정된 항목 수신기를 추가합니다. 항목 이벤트는 사용자 작업에 대한 응답으로 전송되지만 setState ()에 대한 호출에는 응답하지 않습니다. l이 널이면 예외가 발생하지 않고 조치가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2cf0f1d9c402855ba48832b540cf26f90b35997e" translate="yes" xml:space="preserve">
          <source>Adds the specified item listener to receive item events from this check box.</source>
          <target state="translated">이 체크 박스로부터 아이템 이벤트를 받기 위해 지정된 아이템 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="a6fbd2e61631e34e46bed1e7210a6a5a0d0d1367" translate="yes" xml:space="preserve">
          <source>Adds the specified item listener to receive item events from this check box. Item events are sent to listeners in response to user input, but not in response to calls to setState(). If l is null, no exception is thrown and no action is performed.</source>
          <target state="translated">이 체크 박스로부터 아이템 이벤트를 받기 위해 지정된 아이템 리스너를 추가합니다. 항목 이벤트는 사용자 입력에 대한 응답으로 리스너로 전송되지만 setState () 호출에 대한 응답은 아닙니다. l이 널이면 예외가 발생하지 않고 조치가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="95c4a05d3b45fb6cbc71b0cd3755af9b6a35dcf8" translate="yes" xml:space="preserve">
          <source>Adds the specified item listener to receive item events from this list.</source>
          <target state="translated">이 목록에서 항목 이벤트를 수신하기 위해 지정된 항목 수신기를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="4231b947e6ba68d303d37bbeee876ca03c67d6de" translate="yes" xml:space="preserve">
          <source>Adds the specified item listener to receive item events from this list. Item events are sent in response to user input, but not in response to calls to &lt;code&gt;select&lt;/code&gt; or &lt;code&gt;deselect&lt;/code&gt;. If listener &lt;code&gt;l&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is performed.</source>
          <target state="translated">이 목록에서 항목 이벤트를 수신하기 위해 지정된 항목 수신기를 추가합니다. 항목 이벤트는 사용자 입력에 대한 응답으로 전송되지만 &lt;code&gt;select&lt;/code&gt; 또는 &lt;code&gt;deselect&lt;/code&gt; 호출에 대한 응답은 아닙니다 . 리스너 &lt;code&gt;l&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 이면 예외가 발생하지 않고 조치가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="585fb83eabfb34bd999c16aa3cdbf0b0eff6f72a" translate="yes" xml:space="preserve">
          <source>Adds the specified item to the end of scrolling list.</source>
          <target state="translated">스크롤 목록 끝에 지정된 항목을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6a48e5393a2a304e13bd24341bf9a3fdf1f789e3" translate="yes" xml:space="preserve">
          <source>Adds the specified item to the end of the list.</source>
          <target state="translated">목록 끝에 지정된 항목을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="81cc7e6646b88f3ef7cab4c27c78664f264488a7" translate="yes" xml:space="preserve">
          <source>Adds the specified item to the list at the position indicated by the index.</source>
          <target state="translated">인덱스가 가리키는 위치에 지정된 항목을 목록에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="95acdf56594bfd5f7715d6c2a940c7efe4139982" translate="yes" xml:space="preserve">
          <source>Adds the specified item to the scrolling list at the position indicated by the index.</source>
          <target state="translated">인덱스로 표시된 위치의 스크롤 목록에 지정된 항목을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3aeb86401db1344d3b5d15c5a7a615a84c3d942f" translate="yes" xml:space="preserve">
          <source>Adds the specified item to the scrolling list at the position indicated by the index. The index is zero-based. If the value of the index is less than zero, or if the value of the index is greater than or equal to the number of items in the list, then the item is added to the end of the list.</source>
          <target state="translated">인덱스로 표시된 위치의 스크롤 목록에 지정된 항목을 추가합니다. 인덱스는 0부터 시작합니다. 인덱스 값이 0보다 작거나 인덱스 값이 목록의 항목 수보다 크거나 같으면 항목이 목록 끝에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="3ecf6a2fdd043f24866f707f78eba2353f54ac37" translate="yes" xml:space="preserve">
          <source>Adds the specified key listener to receive key events from this component.</source>
          <target state="translated">이 컴퍼넌트로부터 키 이벤트를 받기 위해 지정된 키 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="c84c1bb7da14e44b9255f49fb80dff5f596c84be" translate="yes" xml:space="preserve">
          <source>Adds the specified key listener to receive key events from this component. If l is null, no exception is thrown and no action is performed.</source>
          <target state="translated">이 컴퍼넌트로부터 키 이벤트를 받기 위해 지정된 키 리스너를 추가합니다. l이 널이면 예외가 발생하지 않고 조치가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d8cab7d0c93e0caab0a11e9bb777b644459aa230" translate="yes" xml:space="preserve">
          <source>Adds the specified key to this set view by mapping the key to the default mapped value in the backing map, if defined.</source>
          <target state="translated">정의 된 경우 키를 백업 맵의 기본 맵핑 된 값에 맵핑하여 지정된 키를이 세트보기에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="d0d85533a707857e60e74c6ce8cda4cb0a3ea136" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to be notified when a top level window is created or destroyed.</source>
          <target state="translated">최상위 창을 만들거나 삭제할 때 알림을받을 지정된 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="57faa504fd07b29f91c633dc17aeedce2ddfcae7" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to be notified when the GUI subsystem is initialized.</source>
          <target state="translated">GUI 하위 시스템이 초기화 될 때 알림을받을 지정된 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="a9e5bfaa420ff171e00cafe64d1b09ea5ba25f7e" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to be notified when the GUI subsystem is initialized. Assistive technologies should get the results of &lt;a href=&quot;#isGUIInitialized()&quot;&gt;&lt;code&gt;isGUIInitialized()&lt;/code&gt;&lt;/a&gt; before calling this method.</source>
          <target state="translated">GUI 하위 시스템이 초기화 될 때 알림을받을 지정된 리스너를 추가합니다. 보조 기술은 이 메서드를 호출하기 전에 &lt;a href=&quot;#isGUIInitialized()&quot;&gt; &lt;code&gt;isGUIInitialized()&lt;/code&gt; &lt;/a&gt; 의 결과를 가져와야 합니다.</target>
        </trans-unit>
        <trans-unit id="970d1816966bb8ef6b3e1153033f3d13d454c1b0" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#ACTION&quot;&gt;&lt;code&gt;ACTION&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine when they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#ACTION&quot;&gt; &lt;code&gt;ACTION&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="607791521576bbc6f7f8ec6770ee4cfc39bceb8a" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#ADJUSTMENT&quot;&gt;&lt;code&gt;ADJUSTMENT&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine when they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#ADJUSTMENT&quot;&gt; &lt;code&gt;ADJUSTMENT&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="9aeb0810f5b0d0d83bf4149f2ebaa15397081fb7" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#ANCESTOR&quot;&gt;&lt;code&gt;ANCESTOR&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#ANCESTOR&quot;&gt; &lt;code&gt;ANCESTOR&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="94d5141aad8d121d27abb9c0f9693e136a9832de" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#CARET&quot;&gt;&lt;code&gt;CARET&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#CARET&quot;&gt; &lt;code&gt;CARET&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="e027e77843ade263bbd3ecf23de12286d9df7a6c" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#CELLEDITOR&quot;&gt;&lt;code&gt;CELLEDITOR&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#CELLEDITOR&quot;&gt; &lt;code&gt;CELLEDITOR&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="f0d0019ed301f7af9ae23cb82f357c1131a4c225" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#CHANGE&quot;&gt;&lt;code&gt;CHANGE&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#CHANGE&quot;&gt; &lt;code&gt;CHANGE&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="88630930daed51336380663934b7cc41da6515e3" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#COLUMNMODEL&quot;&gt;&lt;code&gt;COLUMNMODEL&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#COLUMNMODEL&quot;&gt; &lt;code&gt;COLUMNMODEL&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="8151ad5179e41c11389a62582621cc452067e8dd" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#COMPONENT&quot;&gt;&lt;code&gt;COMPONENT&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#COMPONENT&quot;&gt; &lt;code&gt;COMPONENT&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="0756effc244637db0cae8ea95e479d193ad93301" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#CONTAINER&quot;&gt;&lt;code&gt;CONTAINER&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#CONTAINER&quot;&gt; &lt;code&gt;CONTAINER&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="4b2f08dfb3a8597f081096c4e9a98d562fd51a4c" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#DOCUMENT&quot;&gt;&lt;code&gt;DOCUMENT&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#DOCUMENT&quot;&gt; &lt;code&gt;DOCUMENT&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="669a211aeff64171325bd325624a9c0402121d58" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#FOCUS&quot;&gt;&lt;code&gt;FOCUS&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine when they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#FOCUS&quot;&gt; &lt;code&gt;FOCUS&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="e9d251dbcfbc21615e96484c4236b552424b2980" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#INTERNALFRAME&quot;&gt;&lt;code&gt;INTERNALFRAME&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#INTERNALFRAME&quot;&gt; &lt;code&gt;INTERNALFRAME&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="c6f9db9b1ad55eb632010d5c5413e828f6b8829b" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#ITEM&quot;&gt;&lt;code&gt;ITEM&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine when they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#ITEM&quot;&gt; &lt;code&gt;ITEM&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="0736de364e9dfaac52464cfa85538aedabd3a7cc" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#KEY&quot;&gt;&lt;code&gt;KEY&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine when they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#KEY&quot;&gt; &lt;code&gt;KEY&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="a363b5c505983a0ea668fe760951453e19a41be1" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#LISTDATA&quot;&gt;&lt;code&gt;LISTDATA&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#LISTDATA&quot;&gt; &lt;code&gt;LISTDATA&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="168cb7550fd5868b87fbee6229f28e281030c13c" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#LISTSELECTION&quot;&gt;&lt;code&gt;LISTSELECTION&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#LISTSELECTION&quot;&gt; &lt;code&gt;LISTSELECTION&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="66c39ea643e555cfa9689ea603d09c107fa9a161" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#MENU&quot;&gt;&lt;code&gt;MENU&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#MENU&quot;&gt; &lt;code&gt;MENU&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="db3ae4033b5e290b4b0144758930d01888a772e4" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#MOUSE&quot;&gt;&lt;code&gt;MOUSE&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine when they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#MOUSE&quot;&gt; &lt;code&gt;MOUSE&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="83da01a539c6fc09f43100985e7fbb4be495f298" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#POPUPMENU&quot;&gt;&lt;code&gt;POPUPMENU&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#POPUPMENU&quot;&gt; &lt;code&gt;POPUPMENU&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="bdf265b91a1974034036865a7ff16c23ef16ce56" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#PROPERTYCHANGE&quot;&gt;&lt;code&gt;PROPERTYCHANGE&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#PROPERTYCHANGE&quot;&gt; &lt;code&gt;PROPERTYCHANGE&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="27e9a25cc92460ca9759f5981fa7da8b049a2c2d" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#TABLEMODEL&quot;&gt;&lt;code&gt;TABLEMODEL&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#TABLEMODEL&quot;&gt; &lt;code&gt;TABLEMODEL&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="d801dd3ca5b8f860ff5760d5ffda9793ca2ad925" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#TEXT&quot;&gt;&lt;code&gt;TEXT&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine when they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#TEXT&quot;&gt; &lt;code&gt;TEXT&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="f0fca903bfca895df7d35ffc6f872afa82714928" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#TREEEXPANSION&quot;&gt;&lt;code&gt;TREEEXPANSION&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#TREEEXPANSION&quot;&gt; &lt;code&gt;TREEEXPANSION&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="9c76f531cbb58e28b7eecf08090c19ab3873972f" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#TREEMODEL&quot;&gt;&lt;code&gt;TREEMODEL&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#TREEMODEL&quot;&gt; &lt;code&gt;TREEMODEL&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="02736db81c923319f5b934c3cba3ae5a370b836e" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#TREESELECTION&quot;&gt;&lt;code&gt;TREESELECTION&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#TREESELECTION&quot;&gt; &lt;code&gt;TREESELECTION&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="d14a5c3ad409d658f20dd4b1c2069ecd1e833e94" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#UNDOABLEEDIT&quot;&gt;&lt;code&gt;UNDOABLEEDIT&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#UNDOABLEEDIT&quot;&gt; &lt;code&gt;UNDOABLEEDIT&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="4d84bee542cf5703aad2fee729eb71e6b62ad099" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#VETOABLECHANGE&quot;&gt;&lt;code&gt;VETOABLECHANGE&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#VETOABLECHANGE&quot;&gt; &lt;code&gt;VETOABLECHANGE&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="e84852678effa9f1eabdc0419ecc4c0b0064b879" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all &lt;a href=&quot;eventid#WINDOW&quot;&gt;&lt;code&gt;WINDOW&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine when they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 &lt;a href=&quot;eventid#WINDOW&quot;&gt; &lt;code&gt;WINDOW&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="899dda76bcbadc5dabc6216ffc8712be5a70d94f" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all PropertyChange events on each UI object instance in the Java Virtual Machine as they occur.</source>
          <target state="translated">Java Virtual Machine의 각 UI 개체 인스턴스에서 발생하는 모든 PropertyChange 이벤트를 수신하도록 지정된 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="8ba07543a2b6cb80e9ad14eaf70fe8665c952b86" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive all mouse &lt;a href=&quot;eventid#MOTION&quot;&gt;&lt;code&gt;MOTION&lt;/code&gt;&lt;/a&gt; events on each component instance in the Java Virtual Machine when they occur.</source>
          <target state="translated">Java Virtual Machine의 각 구성 요소 인스턴스에서 발생하는 모든 마우스 &lt;a href=&quot;eventid#MOTION&quot;&gt; &lt;code&gt;MOTION&lt;/code&gt; &lt;/a&gt; 이벤트 를 수신하도록 지정된 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="a3e264309c0e241c8418aad5469b9ddd4851eceb" translate="yes" xml:space="preserve">
          <source>Adds the specified listener to receive internal frame events from this internal frame.</source>
          <target state="translated">이 내부 프레임에서 내부 프레임 이벤트를 수신하기 위해 지정된 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="729e8c549e4bffe61204ddb05d6e37a03f1b5009" translate="yes" xml:space="preserve">
          <source>Adds the specified look and feel to the set of available look and feels.</source>
          <target state="translated">사용 가능한 룩앤필 세트에 지정된 룩앤필을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="d915739d2b1567e3edfbbc7081e8b95af255610f" translate="yes" xml:space="preserve">
          <source>Adds the specified look and feel to the set of available look and feels. While this method allows a &lt;code&gt;null&lt;/code&gt;&lt;code&gt;info&lt;/code&gt;, it is strongly recommended that a &lt;code&gt;non-null&lt;/code&gt; value be used.</source>
          <target state="translated">사용 가능한 룩앤필 세트에 지정된 룩앤필을 추가합니다. 이 메서드는 &lt;code&gt;null&lt;/code&gt; &lt;code&gt;info&lt;/code&gt; 를 허용하지만 null 이 &lt;code&gt;non-null&lt;/code&gt; 값을 사용 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="1d764534ba335a4a130ed81e017d9a02190b5e11" translate="yes" xml:space="preserve">
          <source>Adds the specified look and feel to the set of available look and feels. While this method does not check the arguments in any way, it is strongly recommended that &lt;code&gt;
 non-null&lt;/code&gt; values be supplied.</source>
          <target state="translated">사용 가능한 룩앤필 세트에 지정된 룩앤필을 추가합니다. 이 메서드는 어떤 식 으로든 인수를 확인하지 않지만 &lt;code&gt; non-null&lt;/code&gt; 이 아닌 값을 제공 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="658e961a2e13c34c739fcc4ceff3d17be0148c27" translate="yes" xml:space="preserve">
          <source>Adds the specified member to the group.</source>
          <target state="translated">지정된 멤버를 그룹에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="887ad160f0f460cbbfe1cf9342c67a875223a46b" translate="yes" xml:space="preserve">
          <source>Adds the specified menu item to this menu.</source>
          <target state="translated">이 메뉴에 지정된 메뉴 항목을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="43764dc2303cbfe0b4a1e3e723940b7ea3f3f423" translate="yes" xml:space="preserve">
          <source>Adds the specified menu item to this menu. If the menu item has been part of another menu, removes it from that menu.</source>
          <target state="translated">이 메뉴에 지정된 메뉴 항목을 추가합니다. 메뉴 항목이 다른 메뉴의 일부인 경우 해당 메뉴에서 제거합니다.</target>
        </trans-unit>
        <trans-unit id="5db41435f52899a01b0f8121d1733e3a11f695fd" translate="yes" xml:space="preserve">
          <source>Adds the specified menu to the menu bar.</source>
          <target state="translated">메뉴 모음에 지정된 메뉴를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="9964e98ffdbe62e987b9d56315f35fc2fb091ddd" translate="yes" xml:space="preserve">
          <source>Adds the specified menu to the menu bar. If the menu has been part of another menu bar, removes it from that menu bar.</source>
          <target state="translated">메뉴 모음에 지정된 메뉴를 추가합니다. 메뉴가 다른 메뉴 모음의 일부인 경우 해당 메뉴 모음에서 제거합니다.</target>
        </trans-unit>
        <trans-unit id="18b5c91c32cb024f4b3280b2af20fadf2cc3b3e8" translate="yes" xml:space="preserve">
          <source>Adds the specified mouse listener to receive mouse events from this &lt;code&gt;TrayIcon&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;TrayIcon&lt;/code&gt; 로부터 마우스 이벤트를 받기 위해 지정된 마우스 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="6cc47c0063ecbecdbd0298bb14a4f9aa047afce3" translate="yes" xml:space="preserve">
          <source>Adds the specified mouse listener to receive mouse events from this &lt;code&gt;TrayIcon&lt;/code&gt;. Calling this method with a &lt;code&gt;null&lt;/code&gt; value has no effect.</source>
          <target state="translated">이 &lt;code&gt;TrayIcon&lt;/code&gt; 로부터 마우스 이벤트를 받기 위해 지정된 마우스 리스너를 추가합니다 . &lt;code&gt;null&lt;/code&gt; 값 으로이 메서드를 호출해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="34df9b9cdd9abb87a152aa77ee1511e98f2e11a0" translate="yes" xml:space="preserve">
          <source>Adds the specified mouse listener to receive mouse events from this component.</source>
          <target state="translated">이 컴퍼넌트로부터 마우스 이벤트를 받기 위해 지정된 마우스 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e9bc1b354f42841400f80103591c444444c3c33a" translate="yes" xml:space="preserve">
          <source>Adds the specified mouse listener to receive mouse events from this component. If listener &lt;code&gt;l&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is performed.</source>
          <target state="translated">이 컴퍼넌트로부터 마우스 이벤트를 받기 위해 지정된 마우스 리스너를 추가합니다. 리스너 &lt;code&gt;l&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 이면 예외가 발생하지 않고 조치가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a1ff96e44ae6ce76cdcdf3a8d4a4db07d3a2bb39" translate="yes" xml:space="preserve">
          <source>Adds the specified mouse listener to receive mouse-motion events from this &lt;code&gt;TrayIcon&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;TrayIcon&lt;/code&gt; 로부터 마우스 모션 이벤트를 받기 위해 지정된 마우스 리스너를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="e59413453d2996f85829520cf44c2fd95cfe318c" translate="yes" xml:space="preserve">
          <source>Adds the specified mouse listener to receive mouse-motion events from this &lt;code&gt;TrayIcon&lt;/code&gt;. Calling this method with a &lt;code&gt;null&lt;/code&gt; value has no effect.</source>
          <target state="translated">이 &lt;code&gt;TrayIcon&lt;/code&gt; 로부터 마우스 모션 이벤트를 받기 위해 지정된 마우스 리스너를 추가합니다 . &lt;code&gt;null&lt;/code&gt; 값 으로이 메서드를 호출해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="5b1450a1e53d4a08d97ff6a029a4a5b7da023994" translate="yes" xml:space="preserve">
          <source>Adds the specified mouse motion listener to receive mouse motion events from this component.</source>
          <target state="translated">이 컴퍼넌트로부터 마우스 모션 이벤트를 받기 위해 지정된 마우스 모션 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="9adbb6211513421fa816458b818537f3aa249fb9" translate="yes" xml:space="preserve">
          <source>Adds the specified mouse motion listener to receive mouse motion events from this component. If listener &lt;code&gt;l&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is performed.</source>
          <target state="translated">이 컴퍼넌트로부터 마우스 모션 이벤트를 받기 위해 지정된 마우스 모션 리스너를 추가합니다. 리스너 &lt;code&gt;l&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 이면 예외가 발생하지 않고 조치가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="376bd482ba749ec36257991ccd9fb68588c60859" translate="yes" xml:space="preserve">
          <source>Adds the specified mouse wheel listener to receive mouse wheel events from this component.</source>
          <target state="translated">이 컴퍼넌트로부터 마우스 휠 이벤트를 받기 위해 지정된 마우스 휠 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="7d955590661e5946dc14dfb651d5852404c980c6" translate="yes" xml:space="preserve">
          <source>Adds the specified mouse wheel listener to receive mouse wheel events from this component. Containers also receive mouse wheel events from sub-components.</source>
          <target state="translated">이 컴퍼넌트로부터 마우스 휠 이벤트를 받기 위해 지정된 마우스 휠 리스너를 추가합니다. 컨테이너는 하위 구성 요소에서 마우스 휠 이벤트도받습니다.</target>
        </trans-unit>
        <trans-unit id="902a8ce346b5e159a10babd6f40ae7829cc66196" translate="yes" xml:space="preserve">
          <source>Adds the specified object in the set of observed MBeans, if this object is not already present.</source>
          <target state="translated">이 오브젝트가 존재하지 않는 경우, 감시 대상 MBean 세트에 지정된 오브젝트를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="52dce3c64b716e93533cc10ec20d70562527d488" translate="yes" xml:space="preserve">
          <source>Adds the specified object in the set of observed MBeans.</source>
          <target state="translated">감시 대상의 MBean 세트로 지정된 객체를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="2bedb56ce1953e286f403da40d03a57e9aa75215" translate="yes" xml:space="preserve">
          <source>Adds the specified permission to this ACL entry.</source>
          <target state="translated">이 ACL 항목에 지정된 권한을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6d52f9a7a131bc106816fd03c34fd77ad13a9f01" translate="yes" xml:space="preserve">
          <source>Adds the specified permission to this ACL entry. Note: An entry can have multiple permissions.</source>
          <target state="translated">이 ACL 항목에 지정된 권한을 추가합니다. 참고 : 항목에는 여러 권한이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="641e323dd3dd7e73b302ec7bce844c623eca0d08" translate="yes" xml:space="preserve">
          <source>Adds the specified popup menu to the component.</source>
          <target state="translated">지정된 팝업 메뉴를 구성 요소에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="24baeba99ab80cc776315169b4e480300429fdc7" translate="yes" xml:space="preserve">
          <source>Adds the specified property change listener for the named desktop property.</source>
          <target state="translated">명명 된 데스크톱 속성에 대해 지정된 속성 변경 수신기를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e75292fd8c818220564c9f5ccbdf0f18263f5f78" translate="yes" xml:space="preserve">
          <source>Adds the specified property change listener for the named desktop property. When a &lt;a href=&quot;../beans/propertychangelistenerproxy&quot;&gt;&lt;code&gt;PropertyChangeListenerProxy&lt;/code&gt;&lt;/a&gt; object is added, its property name is ignored, and the wrapped listener is added. If &lt;code&gt;name&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;pcl&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is performed.</source>
          <target state="translated">명명 된 데스크톱 속성에 대해 지정된 속성 변경 수신기를 추가합니다. 때 &lt;a href=&quot;../beans/propertychangelistenerproxy&quot;&gt; &lt;code&gt;PropertyChangeListenerProxy&lt;/code&gt; 일지의&lt;/a&gt; 객체가 추가되고 해당 속성 이름은 무시되고 포장 청취자가 추가됩니다. 경우 &lt;code&gt;name&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;pcl&lt;/code&gt; 있다 &lt;code&gt;null&lt;/code&gt; , 예외는 슬로우되지 않고, 처리도 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cc2f5296a0570c3ab947b7e4ddf0d0848b950263" translate="yes" xml:space="preserve">
          <source>Adds the specified region to the dirty region list if the component is showing.</source>
          <target state="translated">구성 요소가 표시되는 경우 지정된 영역을 더티 영역 목록에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="79cb2732a7ffe3c30371ddec440d4bd2657cd136" translate="yes" xml:space="preserve">
          <source>Adds the specified region to the dirty region list if the component is showing. The component will be repainted after all of the currently pending events have been dispatched.</source>
          <target state="translated">구성 요소가 표시되는 경우 지정된 영역을 더티 영역 목록에 추가합니다. 현재 보류중인 모든 이벤트가 전달 된 후 구성 요소가 다시 그려집니다.</target>
        </trans-unit>
        <trans-unit id="c1abeebd710bfec90bf172c5c4d76f530239b07e" translate="yes" xml:space="preserve">
          <source>Adds the specified rows (inclusive) to the selection.</source>
          <target state="translated">선택 항목에 지정된 행 (포함)을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="2d9cebc620c621cab11d92f3b9099f433f544881" translate="yes" xml:space="preserve">
          <source>Adds the specified rows (inclusive) to the selection. If the specified indices are within the viewable set of rows, or bound the viewable set of rows, then the specified indices are constrained by the viewable set of rows. If the indices are not within the viewable set of rows, or do not bound the viewable set of rows, then the selection is unchanged. For example, if the row count is &lt;code&gt;10&lt;/code&gt;, and this method is invoked with &lt;code&gt;-1, 20&lt;/code&gt;, then the specified indices bounds the viewable range, and this is treated as if invoked with &lt;code&gt;0, 9&lt;/code&gt;. On the other hand, if this were invoked with &lt;code&gt;-10, -1&lt;/code&gt;, then the specified indices do not bound the viewable set of rows, and the selection is unchanged.</source>
          <target state="translated">선택 항목에 지정된 행 (포함)을 추가합니다. 지정된 인덱스가 볼 수있는 행 집합 내에 있거나 볼 수있는 행 집합에 바인딩 된 경우 지정된 인덱스는 볼 수있는 행 집합에 의해 제한됩니다. 인덱스가 볼 수있는 행 집합 내에 있지 않거나 볼 수있는 행 집합을 바인딩하지 않으면 선택 항목이 변경되지 않습니다. 예를 들어, 행 수가 &lt;code&gt;10&lt;/code&gt; 이고이 메서드가 &lt;code&gt;-1, 20&lt;/code&gt; 호출 되면 지정된 인덱스가보기 가능 범위를 제한하고 &lt;code&gt;0, 9&lt;/code&gt; 호출 된 것처럼 처리됩니다 . 반면에 이것이 &lt;code&gt;-10, -1&lt;/code&gt; 로 호출 된 경우 지정된 인덱스는 볼 수있는 행 집합을 바인딩하지 않고 선택 항목이 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="91be23fdeef9c0d7fc13c5792f347ad0dbd8c8f3" translate="yes" xml:space="preserve">
          <source>Adds the specified selected item in the object to the object's selection.</source>
          <target state="translated">개체에서 지정된 선택된 항목을 개체의 선택 항목에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="8e7d3b6d0325a45a76f9a3fe38e72b18efa843b2" translate="yes" xml:space="preserve">
          <source>Adds the specified selected item in the object to the object's selection. If the object supports multiple selections, the specified item is added to any existing selection, otherwise it replaces any existing selection in the object. If the specified item is already selected, this method has no effect.</source>
          <target state="translated">개체에서 지정된 선택된 항목을 개체의 선택 항목에 추가합니다. 객체가 다중 선택을 지원하는 경우 지정된 항목이 기존 선택에 추가되고 그렇지 않으면 객체의 기존 선택을 대체합니다. 지정된 항목이 이미 선택된 경우이 방법은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="dcfba3c35e0f403636e09a4dcea8f8a91192bf96" translate="yes" xml:space="preserve">
          <source>Adds the specified text event listener to receive text events from this text component.</source>
          <target state="translated">이 텍스트 컴포넌트로부터 텍스트 이벤트를 받기 위해 지정된 텍스트 이벤트 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ca5a36f65b1bda1b2c3f6c7f802a4027db6ebfa4" translate="yes" xml:space="preserve">
          <source>Adds the specified text event listener to receive text events from this text component. If &lt;code&gt;l&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is performed.</source>
          <target state="translated">이 텍스트 컴포넌트로부터 텍스트 이벤트를 받기 위해 지정된 텍스트 이벤트 리스너를 추가합니다. 경우 &lt;code&gt;l&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; , 예외는 슬로우되지 않고, 처리도 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f6630c1ea0d6bea7cd9170ea661811c198cb6bdb" translate="yes" xml:space="preserve">
          <source>Adds the specified window focus listener to receive window events from this window.</source>
          <target state="translated">Adds the specified window focus listener to receive window events from this window.</target>
        </trans-unit>
        <trans-unit id="874bf2a230c2d2b179a75e1a9e125b4856f8c46a" translate="yes" xml:space="preserve">
          <source>Adds the specified window focus listener to receive window events from this window. If l is null, no exception is thrown and no action is performed.</source>
          <target state="translated">Adds the specified window focus listener to receive window events from this window. If l is null, no exception is thrown and no action is performed.</target>
        </trans-unit>
        <trans-unit id="11271ba4c22ad20ab62af0fa2e89256622a02a1a" translate="yes" xml:space="preserve">
          <source>Adds the specified window listener to receive window events from this window.</source>
          <target state="translated">Adds the specified window listener to receive window events from this window.</target>
        </trans-unit>
        <trans-unit id="c15f6f43ca605b03584199bb23fd4d43ad8fb422" translate="yes" xml:space="preserve">
          <source>Adds the specified window listener to receive window events from this window. If l is null, no exception is thrown and no action is performed.</source>
          <target state="translated">Adds the specified window listener to receive window events from this window. If l is null, no exception is thrown and no action is performed.</target>
        </trans-unit>
        <trans-unit id="0cff0239f6b353f3e9a74ac3e0192719426b6343" translate="yes" xml:space="preserve">
          <source>Adds the specified window state listener to receive window events from this window.</source>
          <target state="translated">Adds the specified window state listener to receive window events from this window.</target>
        </trans-unit>
        <trans-unit id="ef4eaa98bedeb5d93853b4c07ad67ecf6319d181" translate="yes" xml:space="preserve">
          <source>Adds the specified window state listener to receive window events from this window. If &lt;code&gt;l&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is performed.</source>
          <target state="translated">Adds the specified window state listener to receive window events from this window. If &lt;code&gt;l&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; , no exception is thrown and no action is performed.</target>
        </trans-unit>
        <trans-unit id="cc9f9b422c5abacc7fd63824eed9592a4e4d8806" translate="yes" xml:space="preserve">
          <source>Adds this duration to a &lt;a href=&quot;../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Adds this duration to a &lt;a href=&quot;../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object.</target>
        </trans-unit>
        <trans-unit id="34f07ffc5028ed2b249f63c1a664b5108392761d" translate="yes" xml:space="preserve">
          <source>Adds this duration to a &lt;a href=&quot;../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Adds this duration to a &lt;a href=&quot;../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object.</target>
        </trans-unit>
        <trans-unit id="86a3796af25197514b4b17fc1fa4866a200f0cbc" translate="yes" xml:space="preserve">
          <source>Adds this duration to the specified temporal object.</source>
          <target state="translated">이 시간을 지정된 시간 객체에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="df05971b7107f02edd3fea422fff04a5942de16f" translate="yes" xml:space="preserve">
          <source>Adds this period to the specified temporal object.</source>
          <target state="translated">지정된 시간 객체에이 기간을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="dc650a41f24915b13ffaa0a1b87271c12874d5ca" translate="yes" xml:space="preserve">
          <source>Adds this reference object to the queue with which it is registered, if any.</source>
          <target state="translated">이 참조 객체를 등록 된 큐에 추가합니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="edbc907f375458bd57b2fd00474452023bd6a931" translate="yes" xml:space="preserve">
          <source>Adds to CellEditor the extensions necessary to configure an editor in a tree.</source>
          <target state="translated">Adds to CellEditor the extensions necessary to configure an editor in a tree.</target>
        </trans-unit>
        <trans-unit id="e2221037fbdcb25c3acfc09af057274aa4ec5bec" translate="yes" xml:space="preserve">
          <source>Adds to parent all the children in &lt;code&gt;children&lt;/code&gt;.</source>
          <target state="translated">Adds to parent all the children in &lt;code&gt;children&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8236fce221820688a9e5dba0075f39c4a7799d76" translate="yes" xml:space="preserve">
          <source>Adds to parent all the children in &lt;code&gt;children&lt;/code&gt;. If &lt;code&gt;children&lt;/code&gt; is an array or vector all of its elements are added is children, otherwise if &lt;code&gt;children&lt;/code&gt; is a hashtable all the key/value pairs are added in the order &lt;code&gt;Enumeration&lt;/code&gt; returns them.</source>
          <target state="translated">Adds to parent all the children in &lt;code&gt;children&lt;/code&gt; . If &lt;code&gt;children&lt;/code&gt; is an array or vector all of its elements are added is children, otherwise if &lt;code&gt;children&lt;/code&gt; is a hashtable all the key/value pairs are added in the order &lt;code&gt;Enumeration&lt;/code&gt; returns them.</target>
        </trans-unit>
        <trans-unit id="6315404bd6e648a5551276de49ee9239ec0fcd61" translate="yes" xml:space="preserve">
          <source>Adds to the specified temporal object.</source>
          <target state="translated">지정된 임시 객체에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="9e3b0ae153114dc89cbcb7ee4df7f9cd55598503" translate="yes" xml:space="preserve">
          <source>Adds two &lt;code&gt;double&lt;/code&gt; values together as per the + operator.</source>
          <target state="translated">+ 연산자에 따라 두 개의 &lt;code&gt;double&lt;/code&gt; 값을 더합니다.</target>
        </trans-unit>
        <trans-unit id="c8ecd5a68a0d864a51a2ab18ec0830c6ae316daf" translate="yes" xml:space="preserve">
          <source>Adds two &lt;code&gt;float&lt;/code&gt; values together as per the + operator.</source>
          <target state="translated">+ 연산자에 따라 두 개의 &lt;code&gt;float&lt;/code&gt; 값을 더합니다.</target>
        </trans-unit>
        <trans-unit id="400c508b0357e9e65a3bca36fa601632c14712e2" translate="yes" xml:space="preserve">
          <source>Adds two &lt;code&gt;long&lt;/code&gt; values together as per the + operator.</source>
          <target state="translated">+ 연산자에 따라 두 개의 &lt;code&gt;long&lt;/code&gt; 값을 더합니다.</target>
        </trans-unit>
        <trans-unit id="99b4dc2099c1857f27780c44d692c7cd88ffc405" translate="yes" xml:space="preserve">
          <source>Adds two integers together as per the + operator.</source>
          <target state="translated">+ 연산자에 따라 두 개의 정수를 더합니다.</target>
        </trans-unit>
        <trans-unit id="5f58a64efd4c455d1248c3980a1391f996eb5783" translate="yes" xml:space="preserve">
          <source>Adds values specific to this theme to the defaults table.</source>
          <target state="translated">Adds values specific to this theme to the defaults table.</target>
        </trans-unit>
        <trans-unit id="aaa0119b826901f01393d18d75ce635448ad5b66" translate="yes" xml:space="preserve">
          <source>Adds values specific to this theme to the defaults table. This method is invoked when the look and feel defaults are obtained from &lt;code&gt;MetalLookAndFeel&lt;/code&gt;.</source>
          <target state="translated">Adds values specific to this theme to the defaults table. This method is invoked when the look and feel defaults are obtained from &lt;code&gt;MetalLookAndFeel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a904abedaddf92f188ef39c86e8f35ca7f77c0fc" translate="yes" xml:space="preserve">
          <source>Adds window-focus-listener-a with window-focus-listener-b and returns the resulting multicast listener.</source>
          <target state="translated">Adds window-focus-listener-a with window-focus-listener-b and returns the resulting multicast listener.</target>
        </trans-unit>
        <trans-unit id="f788c7ae5b09188731eee6d53467ef932c12a8e5" translate="yes" xml:space="preserve">
          <source>Adds window-listener-a with window-listener-b and returns the resulting multicast listener.</source>
          <target state="translated">Adds window-listener-a with window-listener-b and returns the resulting multicast listener.</target>
        </trans-unit>
        <trans-unit id="8aa185f30a24408fc3899960f0d014e3a6e799be" translate="yes" xml:space="preserve">
          <source>Adds window-state-listener-a with window-state-listener-b and returns the resulting multicast listener.</source>
          <target state="translated">Adds window-state-listener-a with window-state-listener-b and returns the resulting multicast listener.</target>
        </trans-unit>
        <trans-unit id="0c2c11761bc91b8f5cf6b31517efb99727f71305" translate="yes" xml:space="preserve">
          <source>Adds x to the list of listeners that are notified each time the set of selected TreePaths changes.</source>
          <target state="translated">Adds x to the list of listeners that are notified each time the set of selected TreePaths changes.</target>
        </trans-unit>
        <trans-unit id="71d604b7f7e03c7fa14b46dc3a5a31c6c4cceabd" translate="yes" xml:space="preserve">
          <source>Adds/nests a child within this &lt;code&gt;BeanContext&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;BeanContext&lt;/code&gt; 내에 아이를 추가 / 중지합니다 .</target>
        </trans-unit>
        <trans-unit id="d4a30f4a2824a23df3c62061f89f979e93398978" translate="yes" xml:space="preserve">
          <source>Adjacent value parsing applies to each set of fixed width not-negative values in the parser that immediately follow any kind of value, variable or fixed width. Calling any other append method will end the setup of adjacent value parsing. Thus, in the unlikely event that you need to avoid adjacent value parsing behavior, simply add the &lt;code&gt;appendValue&lt;/code&gt; to another &lt;code&gt;DateTimeFormatterBuilder&lt;/code&gt; and add that to this builder.</source>
          <target state="translated">인접 값 구문 분석은 파서의 모든 고정 폭 비음 수 값 세트에 적용되며, 이는 모든 종류의 값, 가변 또는 고정 폭을 즉시 따릅니다. 다른 append 메소드를 호출하면 인접한 값 구문 분석 설정이 종료됩니다. 따라서 인접 값 구문 분석 동작을 피해야하는 경우가 &lt;code&gt;appendValue&lt;/code&gt; 를 다른 &lt;code&gt;DateTimeFormatterBuilder&lt;/code&gt; 에 추가하고이 빌더에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="6700af9e4c8e461fd5cde36d89bcb070bd0b5a32" translate="yes" xml:space="preserve">
          <source>Adjust a specified array of sizes by a given amount.</source>
          <target state="translated">Adjust a specified array of sizes by a given amount.</target>
        </trans-unit>
        <trans-unit id="f8c9b54b60307e0480d7196082d6bca559a05bac" translate="yes" xml:space="preserve">
          <source>Adjust the day-of-month to the last valid day if necessary</source>
          <target state="translated">필요한 경우 날짜를 마지막 유효일로 조정하십시오.</target>
        </trans-unit>
        <trans-unit id="2fcc2ed65822a661ab8162eafb9d2b3b73e1bd89" translate="yes" xml:space="preserve">
          <source>Adjust the gap end downward.</source>
          <target state="translated">Adjust the gap end downward.</target>
        </trans-unit>
        <trans-unit id="c4caf7a2533d73a050ee1f6506b59a058fdac37d" translate="yes" xml:space="preserve">
          <source>Adjust the gap end downward. This doesn't move any data, but it does update any marks affected by the boundary change. All marks from the old gap start down to the new gap start are squeezed to the end of the gap (their location has been removed).</source>
          <target state="translated">Adjust the gap end downward. This doesn't move any data, but it does update any marks affected by the boundary change. All marks from the old gap start down to the new gap start are squeezed to the end of the gap (their location has been removed).</target>
        </trans-unit>
        <trans-unit id="0a97305ca1b50f7a98af74942c2fb1ccd1e3943f" translate="yes" xml:space="preserve">
          <source>Adjust the gap end upward.</source>
          <target state="translated">Adjust the gap end upward.</target>
        </trans-unit>
        <trans-unit id="123d412de4f40c39187b7b679939219e57693cd3" translate="yes" xml:space="preserve">
          <source>Adjust the gap end upward. This doesn't move any data, but it does update any marks affected by the boundary change. All marks from the old gap end up to the new gap end are squeezed to the end of the gap (their location has been removed).</source>
          <target state="translated">Adjust the gap end upward. This doesn't move any data, but it does update any marks affected by the boundary change. All marks from the old gap end up to the new gap end are squeezed to the end of the gap (their location has been removed).</target>
        </trans-unit>
        <trans-unit id="e2be3e4715f7b3785dd4c10dc94c51db9517a90b" translate="yes" xml:space="preserve">
          <source>Adjust the type &lt;code&gt;TN&lt;/code&gt; by changing the &lt;code&gt;N&lt;/code&gt;th parameter type from &lt;code&gt;Object&lt;/code&gt; to &lt;code&gt;A[]&lt;/code&gt;.</source>
          <target state="translated">Adjust the type &lt;code&gt;TN&lt;/code&gt; by changing the &lt;code&gt;N&lt;/code&gt; th parameter type from &lt;code&gt;Object&lt;/code&gt; to &lt;code&gt;A[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b1a5023629b6fe4d382a2600087254f2b585455" translate="yes" xml:space="preserve">
          <source>AdjustForGravity</source>
          <target state="translated">AdjustForGravity</target>
        </trans-unit>
        <trans-unit id="942951ab39b644c01c46aa229a766c925fedc002" translate="yes" xml:space="preserve">
          <source>Adjustable</source>
          <target state="translated">Adjustable</target>
        </trans-unit>
        <trans-unit id="8679f2df25a840864ad4e3ea21fb87a28303a54f" translate="yes" xml:space="preserve">
          <source>Adjusters are a key tool for modifying temporal objects. They exist to externalize the process of adjustment, permitting different approaches, as per the strategy design pattern. Examples might be an adjuster that sets the date avoiding weekends, or one that sets the date to the last day of the month.</source>
          <target state="translated">조절기는 임시 객체를 수정하기위한 핵심 도구입니다. 전략 설계 패턴에 따라 다양한 접근 방식을 허용하면서 조정 프로세스를 외부화하기 위해 존재합니다. 주말을 피하는 날짜를 설정하는 조정자 또는 날짜를 해당 월의 마지막 날로 설정하는 조정자 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46d6566fd533156f3fe3ae843c3eaae6428e1c35" translate="yes" xml:space="preserve">
          <source>Adjustment and Query</source>
          <target state="translated">조정 및 쿼리</target>
        </trans-unit>
        <trans-unit id="0b3891d15e07dde2700086bd28ed576381444569" translate="yes" xml:space="preserve">
          <source>Adjustment events are enabled via &lt;code&gt;enableEvents&lt;/code&gt;.</source>
          <target state="translated">Adjustment events are enabled via &lt;code&gt;enableEvents&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c9349e3274dee3ad8b632613158f58480a38c8b" translate="yes" xml:space="preserve">
          <source>AdjustmentEvent</source>
          <target state="translated">AdjustmentEvent</target>
        </trans-unit>
        <trans-unit id="8fcc944b304d2112e0dcfbf4a67edcc004a990e4" translate="yes" xml:space="preserve">
          <source>AdjustmentListener</source>
          <target state="translated">AdjustmentListener</target>
        </trans-unit>
        <trans-unit id="a6a9e1e95b2a30f8345570634724a4081d0c3353" translate="yes" xml:space="preserve">
          <source>Adjusts the allocation given to the view to be a suitable allocation for a text field.</source>
          <target state="translated">Adjusts the allocation given to the view to be a suitable allocation for a text field.</target>
        </trans-unit>
        <trans-unit id="0c51d9915547d27d8d74ce57701b7740676f8049" translate="yes" xml:space="preserve">
          <source>Adjusts the allocation given to the view to be a suitable allocation for a text field. If the view has been allocated more than the preferred span vertically, the allocation is changed to be centered vertically. Horizontally the view is adjusted according to the horizontal alignment property set on the associated JTextField (if that is the type of the hosting component).</source>
          <target state="translated">Adjusts the allocation given to the view to be a suitable allocation for a text field. If the view has been allocated more than the preferred span vertically, the allocation is changed to be centered vertically. Horizontally the view is adjusted according to the horizontal alignment property set on the associated JTextField (if that is the type of the hosting component).</target>
        </trans-unit>
        <trans-unit id="2ed4fd686ed6fc52ebedf13b26a80f7cd5e1ba0d" translate="yes" xml:space="preserve">
          <source>Adjusts the given row if possible to fit within the layout span.</source>
          <target state="translated">Adjusts the given row if possible to fit within the layout span.</target>
        </trans-unit>
        <trans-unit id="41fc34239f286fc33eec63f8b0cd380066a6055a" translate="yes" xml:space="preserve">
          <source>Adjusts the given row if possible to fit within the layout span. By default this will try to find the highest break weight possible nearest the end of the row. If a forced break is encountered, the break will be positioned there.</source>
          <target state="translated">Adjusts the given row if possible to fit within the layout span. By default this will try to find the highest break weight possible nearest the end of the row. If a forced break is encountered, the break will be positioned there.</target>
        </trans-unit>
        <trans-unit id="aabf757cc52e92ac217c609c293895abbdc50867" translate="yes" xml:space="preserve">
          <source>Adjusts the indentation of each line of this string based on the value of &lt;code&gt;n&lt;/code&gt;, and normalizes line termination characters.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 값을 기준으로이 문자열의 각 줄 들여 쓰기를 조정하고 줄 종료 문자를 정규화합니다.</target>
        </trans-unit>
        <trans-unit id="7a0c0730e23e1c30e36d3d8f6d861d16fcc48523" translate="yes" xml:space="preserve">
          <source>Adjusts the specified temporal object to have the same date and time as this object.</source>
          <target state="translated">지정된 시간 객체가이 객체와 동일한 날짜 및 시간을 갖도록 조정합니다.</target>
        </trans-unit>
        <trans-unit id="c75f83ec5587e314435d865398e3fd588ba25be4" translate="yes" xml:space="preserve">
          <source>Adjusts the specified temporal object to have the same date as this object.</source>
          <target state="translated">지정된 시간 객체가이 객체와 같은 날짜를 갖도록 조정합니다.</target>
        </trans-unit>
        <trans-unit id="d0e78905f722ac0d9d7cbeb8ca0ef556cb3be68e" translate="yes" xml:space="preserve">
          <source>Adjusts the specified temporal object to have the same era as this object.</source>
          <target state="translated">지정된 시간 객체가이 객체와 같은 시대를 갖도록 조정합니다.</target>
        </trans-unit>
        <trans-unit id="98df78b89f51ceb8f1459fe00c40d897897516c3" translate="yes" xml:space="preserve">
          <source>Adjusts the specified temporal object to have the same offset and time as this object.</source>
          <target state="translated">지정된 시간 객체가이 객체와 동일한 오프셋 및 시간을 갖도록 조정합니다.</target>
        </trans-unit>
        <trans-unit id="112c143205816dc84da5c55ea177f93f9b06f78e" translate="yes" xml:space="preserve">
          <source>Adjusts the specified temporal object to have the same offset as this object.</source>
          <target state="translated">지정된 시간 객체가이 객체와 동일한 오프셋을 갖도록 조정합니다.</target>
        </trans-unit>
        <trans-unit id="009bdbe56851b4a5d1481ba57005dec54f511838" translate="yes" xml:space="preserve">
          <source>Adjusts the specified temporal object to have the same offset, date and time as this object.</source>
          <target state="translated">지정된 시간 객체가이 객체와 동일한 오프셋, 날짜 및 시간을 갖도록 조정합니다.</target>
        </trans-unit>
        <trans-unit id="02ad018d447bb9659f2e250b5ad5b2dcd59ad80b" translate="yes" xml:space="preserve">
          <source>Adjusts the specified temporal object to have the same time as this object.</source>
          <target state="translated">지정된 시간 객체가이 객체와 같은 시간을 갖도록 조정합니다.</target>
        </trans-unit>
        <trans-unit id="d94f1056ed88b91cc1314a23c0eec5487ce00903" translate="yes" xml:space="preserve">
          <source>Adjusts the specified temporal object to have this day-of-week.</source>
          <target state="translated">지정된 시간 객체가이 요일을 갖도록 조정합니다.</target>
        </trans-unit>
        <trans-unit id="525796e1588d76792457949dbbfd31d7d22aa8cb" translate="yes" xml:space="preserve">
          <source>Adjusts the specified temporal object to have this instant.</source>
          <target state="translated">이 순간을 갖도록 지정된 시간 객체를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="2653e8fe83785530f8bd209fc6ea671cec58bdba" translate="yes" xml:space="preserve">
          <source>Adjusts the specified temporal object to have this month-day.</source>
          <target state="translated">이 달-일을 갖도록 지정된 시간 오브젝트를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="c42e041acc4037d9a408d6fce1404689d047d7a8" translate="yes" xml:space="preserve">
          <source>Adjusts the specified temporal object to have this month-of-year.</source>
          <target state="translated">지정된 시간 객체가이 달을 갖도록 조정합니다.</target>
        </trans-unit>
        <trans-unit id="ac4d1b5d1a1e936157e1d8e310b96d98eb1f194e" translate="yes" xml:space="preserve">
          <source>Adjusts the specified temporal object to have this year-month.</source>
          <target state="translated">지정된 시간 개체가 올해 한 달이되도록 조정합니다.</target>
        </trans-unit>
        <trans-unit id="6a0eecc1a88aadcb50b8e9cc8637e8af1c6e873e" translate="yes" xml:space="preserve">
          <source>Adjusts the specified temporal object to have this year.</source>
          <target state="translated">지정된 시간 오브젝트를 올해로 조정합니다.</target>
        </trans-unit>
        <trans-unit id="d7fd3695a2cc1a32d4209e2f69a8536bb67d0387" translate="yes" xml:space="preserve">
          <source>Adjusts the specified temporal object.</source>
          <target state="translated">지정된 시간 객체를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="8afdc3431a1fcb6f0015e2856f9379f75ff3d2c8" translate="yes" xml:space="preserve">
          <source>Adjusts the x, y, width, and height fields to the correct values depending on the constraint geometry and pads.</source>
          <target state="translated">Adjusts the x, y, width, and height fields to the correct values depending on the constraint geometry and pads.</target>
        </trans-unit>
        <trans-unit id="d7d050280f2cab2f2f16a8151e2eafaa566e1f26" translate="yes" xml:space="preserve">
          <source>Adjusts the x, y, width, and height fields to the correct values depending on the constraint geometry and pads. This method should only be used internally by &lt;code&gt;GridBagLayout&lt;/code&gt;.</source>
          <target state="translated">Adjusts the x, y, width, and height fields to the correct values depending on the constraint geometry and pads. This method should only be used internally by &lt;code&gt;GridBagLayout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4adac74ebddef7c16a56b34cb06aa2794b83afd" translate="yes" xml:space="preserve">
          <source>Adjusts this channel's blocking mode.</source>
          <target state="translated">이 채널의 차단 모드를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="547a07a403180494e41a1dfa627bb17b34606891" translate="yes" xml:space="preserve">
          <source>Adler-32 checksum is described in RFC 1950 (above)</source>
          <target state="translated">Adler-32 체크섬은 RFC 1950 (위)에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="15916ea228038978ff5e724cafbd80324fd51736" translate="yes" xml:space="preserve">
          <source>Adler32</source>
          <target state="translated">Adler32</target>
        </trans-unit>
        <trans-unit id="314b3c49a201959df9ad0e3a5ae12910091680b1" translate="yes" xml:space="preserve">
          <source>Adler32.getValue()</source>
          <target state="translated">Adler32.getValue()</target>
        </trans-unit>
        <trans-unit id="c31b81abea2f0d616d56ca6a59c4971a76e112d6" translate="yes" xml:space="preserve">
          <source>Adler32.reset()</source>
          <target state="translated">Adler32.reset()</target>
        </trans-unit>
        <trans-unit id="9df3bc683180f3c68411c5000af71adb45798e06" translate="yes" xml:space="preserve">
          <source>Adler32.update()</source>
          <target state="translated">Adler32.update()</target>
        </trans-unit>
        <trans-unit id="7951f49d310ae7ab6621d63118623d499916ed0a" translate="yes" xml:space="preserve">
          <source>Adobe Type 1 font data.</source>
          <target state="translated">Adobe Type 1 font data.</target>
        </trans-unit>
        <trans-unit id="1c683fe6cec3cdda34d18f1c3b01266843548194" translate="yes" xml:space="preserve">
          <source>Adobe Type 1 font data. Table tag &quot;typ1&quot; in the Open Type Specification.</source>
          <target state="translated">Adobe Type 1 font data. Table tag &quot;typ1&quot; in the Open Type Specification.</target>
        </trans-unit>
        <trans-unit id="3df7f00c8bc62dd77270ddc5b724d55b08dbb0e4" translate="yes" xml:space="preserve">
          <source>Advances the current stream position by calling &lt;code&gt;seek(getStreamPosition() + n)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;seek(getStreamPosition() + n)&lt;/code&gt; 을 호출하여 현재 스트림 위치를 전진시킵니다 .</target>
        </trans-unit>
        <trans-unit id="516debfbe8eda7e112774cd541d2019292037b28" translate="yes" xml:space="preserve">
          <source>Advances this scanner past the current line and returns the input that was skipped.</source>
          <target state="translated">Advances this scanner past the current line and returns the input that was skipped.</target>
        </trans-unit>
        <trans-unit id="1476cdace0a11bdceb7d379f8e242833f093ec0c" translate="yes" xml:space="preserve">
          <source>Advances this scanner past the current line and returns the input that was skipped. This method returns the rest of the current line, excluding any line separator at the end. The position is set to the beginning of the next line.</source>
          <target state="translated">이 스캐너를 현재 줄을 넘어서서 건너 뛴 입력을 반환합니다. 이 메소드는 끝에있는 행 구분 기호를 제외한 나머지 현재 행을 리턴합니다. 위치는 다음 줄의 시작으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="111a927541d5958f84b0fc479ef034803aa59e8b" translate="yes" xml:space="preserve">
          <source>Advisory content type.</source>
          <target state="translated">자문 콘텐츠 유형.</target>
        </trans-unit>
        <trans-unit id="0efed697701456366087ddf6ee7f0696a52821b6" translate="yes" xml:space="preserve">
          <source>Advisory content type. See the type attribute definition in HTML 4.0.</source>
          <target state="translated">자문 콘텐츠 유형. HTML 4.0의 유형 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="41e3c90872804a66485735a0d9ac956932a3ddbe" translate="yes" xml:space="preserve">
          <source>Affected Element.</source>
          <target state="translated">Affected Element.</target>
        </trans-unit>
        <trans-unit id="339c67d67296c865aed4bb18f74d35b419152d7c" translate="yes" xml:space="preserve">
          <source>Affected Method</source>
          <target state="translated">영향을받는 방법</target>
        </trans-unit>
        <trans-unit id="66f25fa0688e0f979d969ce2857f8f4d5004cf01" translate="yes" xml:space="preserve">
          <source>Affected Method(s)</source>
          <target state="translated">영향을받는 방법</target>
        </trans-unit>
        <trans-unit id="e02630f703a9f71852f3f72cbd9233f86f7c473c" translate="yes" xml:space="preserve">
          <source>Affects location queries (such as, &lt;a href=&quot;location#sourceName()&quot;&gt;&lt;code&gt;Location.sourceName()&lt;/code&gt;&lt;/a&gt;) and the line boundaries used in single stepping.</source>
          <target state="translated">위치 쿼리 (예 : &lt;a href=&quot;location#sourceName()&quot;&gt; &lt;code&gt;Location.sourceName()&lt;/code&gt; &lt;/a&gt; ) 및 단일 스테핑에 사용되는 라인 경계에 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="8b0632c116fb5b84303ef9dd7d5693f7da6342ef" translate="yes" xml:space="preserve">
          <source>AffineTransform</source>
          <target state="translated">AffineTransform</target>
        </trans-unit>
        <trans-unit id="b59b3e92b580c69d83c3452739a0fe39dafcafb0" translate="yes" xml:space="preserve">
          <source>AffineTransformOp</source>
          <target state="translated">AffineTransformOp</target>
        </trans-unit>
        <trans-unit id="bce25746e14599eb63b3e7b7fd35d108bb799393" translate="yes" xml:space="preserve">
          <source>Affixes a small badge to this application's icon in the task area for the specified window.</source>
          <target state="translated">Affixes a small badge to this application's icon in the task area for the specified window.</target>
        </trans-unit>
        <trans-unit id="982e0f12b05a00b6dd82c89f35347eb71db05a1c" translate="yes" xml:space="preserve">
          <source>Affixes a small badge to this application's icon in the task area for the specified window. It may be disabled by system settings. Has no effect if a window representation is not displayable in the task area. Whether it is displayable is dependent on all of window type, platform, and implementation.</source>
          <target state="translated">Affixes a small badge to this application's icon in the task area for the specified window. It may be disabled by system settings. Has no effect if a window representation is not displayable in the task area. Whether it is displayable is dependent on all of window type, platform, and implementation.</target>
        </trans-unit>
        <trans-unit id="d759a8d5acd9fe07f795e508e9331a8349cf7b84" translate="yes" xml:space="preserve">
          <source>Affixes a small system-provided badge to this application's icon.</source>
          <target state="translated">Affixes a small system-provided badge to this application's icon.</target>
        </trans-unit>
        <trans-unit id="59cde613dd43adcb849628c4d3331b9e3705112d" translate="yes" xml:space="preserve">
          <source>Affixes a small system-provided badge to this application's icon. Usually a number. Some platforms do not support string values and accept only integer values. In this case, pass an integer represented as a string as parameter. This can be tested by &lt;code&gt;Feature.ICON_BADGE_TEXT&lt;/code&gt; and &lt;code&gt;Feature.ICON_BADGE_NUMBER&lt;/code&gt;. Passing &lt;code&gt;null&lt;/code&gt; as parameter hides the badge.</source>
          <target state="translated">Affixes a small system-provided badge to this application's icon. Usually a number. Some platforms do not support string values and accept only integer values. In this case, pass an integer represented as a string as parameter. This can be tested by &lt;code&gt;Feature.ICON_BADGE_TEXT&lt;/code&gt; and &lt;code&gt;Feature.ICON_BADGE_NUMBER&lt;/code&gt; . Passing &lt;code&gt;null&lt;/code&gt; as parameter hides the badge.</target>
        </trans-unit>
        <trans-unit id="c53114cf2fddcede5826552e6d14492d8c8e2763" translate="yes" xml:space="preserve">
          <source>Affixes a small system-provided progress bar to this application's icon.</source>
          <target state="translated">Affixes a small system-provided progress bar to this application's icon.</target>
        </trans-unit>
        <trans-unit id="c9a60b06491ab1fe16a7f8c7efc96e96e7844c95" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;C&lt;/code&gt; is derived, it is linked by the Java Virtual Machine. Linkage occurs as specified in JVMS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.3&quot;&gt;5.4.3&lt;/a&gt;, with the following adjustments:</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 가 파생 된 후 Java Virtual Machine에 의해 링크됩니다. 링크는 JVMS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.3&quot;&gt;5.4.3에&lt;/a&gt; 지정된대로 다음과 같이 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="b910fd035139f67ca4922d76f9c7cd028e21bb31" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;free&lt;/code&gt; has been called, any attempt to invoke a method other than &lt;code&gt;free&lt;/code&gt; will result in a &lt;code&gt;SQLException&lt;/code&gt; being thrown. If &lt;code&gt;free&lt;/code&gt; is called multiple times, the subsequent calls to &lt;code&gt;free&lt;/code&gt; are treated as a no-op.</source>
          <target state="translated">After &lt;code&gt;free&lt;/code&gt; has been called, any attempt to invoke a method other than &lt;code&gt;free&lt;/code&gt; will result in a &lt;code&gt;SQLException&lt;/code&gt; being thrown. If &lt;code&gt;free&lt;/code&gt; is called multiple times, the subsequent calls to &lt;code&gt;free&lt;/code&gt; are treated as a no-op.</target>
        </trans-unit>
        <trans-unit id="c051db5c2ee22e115385dcb2fca4518a8b3c51c5" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;free&lt;/code&gt; has been called, any attempt to invoke a method other than &lt;code&gt;free&lt;/code&gt; will result in an &lt;code&gt;SQLException&lt;/code&gt; being thrown. If &lt;code&gt;free&lt;/code&gt; is called multiple times, the subsequent calls to &lt;code&gt;free&lt;/code&gt; are treated as a no-op.</source>
          <target state="translated">After &lt;code&gt;free&lt;/code&gt; has been called, any attempt to invoke a method other than &lt;code&gt;free&lt;/code&gt; will result in an &lt;code&gt;SQLException&lt;/code&gt; being thrown. If &lt;code&gt;free&lt;/code&gt; is called multiple times, the subsequent calls to &lt;code&gt;free&lt;/code&gt; are treated as a no-op.</target>
        </trans-unit>
        <trans-unit id="f8dfc41015a2ed3b4c31eacb5a3544368da445c7" translate="yes" xml:space="preserve">
          <source>After a call to the &lt;code&gt;nextToken&lt;/code&gt; method, this field contains the type of the token just read.</source>
          <target state="translated">After a call to the &lt;code&gt;nextToken&lt;/code&gt; method, this field contains the type of the token just read.</target>
        </trans-unit>
        <trans-unit id="a5b1371bdd923c16a94d39c1cd7831555f05a2b2" translate="yes" xml:space="preserve">
          <source>After a call to the &lt;code&gt;nextToken&lt;/code&gt; method, this field contains the type of the token just read. For a single character token, its value is the single character, converted to an integer. For a quoted string token, its value is the quote character. Otherwise, its value is one of the following:</source>
          <target state="translated">&lt;code&gt;nextToken&lt;/code&gt; 메소드를 호출 한 후이 필드에는 방금 읽은 토큰 유형이 포함됩니다. 단일 문자 토큰의 경우 해당 값은 단일 문자이며 정수로 변환됩니다. 인용 문자열 토큰의 경우 해당 값은 인용 문자입니다. 그렇지 않으면 그 값은 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="deb4f2ec36793cea1b653c9479f770d64c8091f2" translate="yes" xml:space="preserve">
          <source>After a channel is closed, any further attempt to invoke I/O operations upon it will cause a &lt;a href=&quot;closedchannelexception&quot;&gt;&lt;code&gt;ClosedChannelException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">채널이 닫힌 후, 채널에서 I / O 조작을 추가로 시도하면 &lt;a href=&quot;closedchannelexception&quot;&gt; &lt;code&gt;ClosedChannelException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1d2dfc76310bcd43a279bfb367a210f29a20cf50" translate="yes" xml:space="preserve">
          <source>After a command in a batch update fails to execute properly and a &lt;code&gt;BatchUpdateException&lt;/code&gt; is thrown, the driver may or may not continue to process the remaining commands in the batch. If the driver continues processing after a failure, the array returned by the method &lt;code&gt;BatchUpdateException.getUpdateCounts&lt;/code&gt; will have an element for every command in the batch rather than only elements for the commands that executed successfully before the error. In the case where the driver continues processing commands, the array element for any command that failed is &lt;code&gt;Statement.EXECUTE_FAILED&lt;/code&gt;.</source>
          <target state="translated">After a command in a batch update fails to execute properly and a &lt;code&gt;BatchUpdateException&lt;/code&gt; is thrown, the driver may or may not continue to process the remaining commands in the batch. If the driver continues processing after a failure, the array returned by the method &lt;code&gt;BatchUpdateException.getUpdateCounts&lt;/code&gt; will have an element for every command in the batch rather than only elements for the commands that executed successfully before the error. In the case where the driver continues processing commands, the array element for any command that failed is &lt;code&gt;Statement.EXECUTE_FAILED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="143b121780fe7763058875e9edef803ffe913c60" translate="yes" xml:space="preserve">
          <source>After a file system is closed then all subsequent access to the file system, either by methods defined by this class or on objects associated with this file system, throw &lt;a href=&quot;closedfilesystemexception&quot;&gt;&lt;code&gt;ClosedFileSystemException&lt;/code&gt;&lt;/a&gt;. If the file system is already closed then invoking this method has no effect.</source>
          <target state="translated">파일 시스템이 닫힌 후에는이 클래스에 의해 정의 된 메소드 또는이 파일 시스템과 연관된 오브젝트에서 파일 시스템에 대한 모든 후속 액세스가 &lt;a href=&quot;closedfilesystemexception&quot;&gt; &lt;code&gt;ClosedFileSystemException&lt;/code&gt; 을 발생시킵니다&lt;/a&gt; . 파일 시스템이 이미 닫혀 있으면이 방법을 호출해도 아무런 영향이 없습니다.</target>
        </trans-unit>
        <trans-unit id="eb859ad47cb96c857ff6ded6dc57dd28282ee44f" translate="yes" xml:space="preserve">
          <source>After a selector is closed, any further attempt to use it, except by invoking this method or the &lt;a href=&quot;#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method, will cause a &lt;a href=&quot;closedselectorexception&quot;&gt;&lt;code&gt;ClosedSelectorException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">After a selector is closed, any further attempt to use it, except by invoking this method or the &lt;a href=&quot;#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; method, will cause a &lt;a href=&quot;closedselectorexception&quot;&gt; &lt;code&gt;ClosedSelectorException&lt;/code&gt; &lt;/a&gt; to be thrown.</target>
        </trans-unit>
        <trans-unit id="6485ae1d2e2d9b5d6430d60d07c069b720d3588c" translate="yes" xml:space="preserve">
          <source>After a selector is closed, any further attempt to use it, except by invoking this method or the &lt;a href=&quot;selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method, will cause a &lt;a href=&quot;closedselectorexception&quot;&gt;&lt;code&gt;ClosedSelectorException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">선택기를 닫은 후에는이 메소드 나 &lt;a href=&quot;selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하는 것을 제외하고는 추가로 시도 하면 &lt;a href=&quot;closedselectorexception&quot;&gt; &lt;code&gt;ClosedSelectorException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9871f70b0b29bf280dca369cdd987a4626aa6e98" translate="yes" xml:space="preserve">
          <source>After a sequence of channel-read or</source>
          <target state="translated">일련의 채널 읽기 또는</target>
        </trans-unit>
        <trans-unit id="a5d6e0964c8eea4daf3d5acd0515f7f153550d5b" translate="yes" xml:space="preserve">
          <source>After a successful invocation of this method, this recording is in the &lt;code&gt;CLOSED&lt;/code&gt; state.</source>
          <target state="translated">이 메소드를 성공적으로 호출하면이 레코딩은 &lt;code&gt;CLOSED&lt;/code&gt; 상태가됩니다.</target>
        </trans-unit>
        <trans-unit id="608e0f9a0bfc67a9b73406d5b1518d7557952fd6" translate="yes" xml:space="preserve">
          <source>After a successful invocation of this method, this recording is in the &lt;code&gt;DELAYED&lt;/code&gt; state.</source>
          <target state="translated">이 메소드를 성공적으로 호출하면이 레코딩은 &lt;code&gt;DELAYED&lt;/code&gt; 상태가됩니다.</target>
        </trans-unit>
        <trans-unit id="9c672679eaa8f6aade5fda5c5ec548f8c5ed1889" translate="yes" xml:space="preserve">
          <source>After a successful invocation of this method, this recording is in the &lt;code&gt;RUNNING&lt;/code&gt; state.</source>
          <target state="translated">이 메서드를 성공적으로 호출하면이 기록은 &lt;code&gt;RUNNING&lt;/code&gt; 상태가됩니다.</target>
        </trans-unit>
        <trans-unit id="69900eaa2aa4492c4d78c3d413f0978c16e9d2ba" translate="yes" xml:space="preserve">
          <source>After a successful invocation of this method, this recording will be in the &lt;code&gt;STOPPED&lt;/code&gt; state.</source>
          <target state="translated">이 메서드를 성공적으로 호출하면이 기록은 &lt;code&gt;STOPPED&lt;/code&gt; 상태가됩니다.</target>
        </trans-unit>
        <trans-unit id="64c8cf99b33336bd9712ccb4e03b76962c9a5b98" translate="yes" xml:space="preserve">
          <source>After a watch service is closed, any further attempt to invoke operations upon it will throw &lt;a href=&quot;closedwatchserviceexception&quot;&gt;&lt;code&gt;ClosedWatchServiceException&lt;/code&gt;&lt;/a&gt;. If this watch service is already closed then invoking this method has no effect.</source>
          <target state="translated">감시 서비스가 닫힌 후에는 추가 작업을 시도하면 &lt;a href=&quot;closedwatchserviceexception&quot;&gt; &lt;code&gt;ClosedWatchServiceException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다. 이 시계 서비스가 이미 닫힌 경우이 방법을 호출해도 아무런 영향이 없습니다.</target>
        </trans-unit>
        <trans-unit id="2c2da1786d560c253158f6cd83db9adad109dd05" translate="yes" xml:space="preserve">
          <source>After adding a &lt;code&gt;Point&lt;/code&gt;, a call to &lt;code&gt;contains&lt;/code&gt; with the added &lt;code&gt;Point&lt;/code&gt; as an argument does not necessarily return &lt;code&gt;true&lt;/code&gt;. The &lt;code&gt;contains&lt;/code&gt; method does not return &lt;code&gt;true&lt;/code&gt; for points on the right or bottom edges of a &lt;code&gt;Rectangle&lt;/code&gt;. Therefore if the added &lt;code&gt;Point&lt;/code&gt; falls on the right or bottom edge of the enlarged &lt;code&gt;Rectangle&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; for that &lt;code&gt;Point&lt;/code&gt;. If the specified point must be contained within the new &lt;code&gt;Rectangle&lt;/code&gt;, a 1x1 rectangle should be added instead:</source>
          <target state="translated">After adding a &lt;code&gt;Point&lt;/code&gt; , a call to &lt;code&gt;contains&lt;/code&gt; with the added &lt;code&gt;Point&lt;/code&gt; as an argument does not necessarily return &lt;code&gt;true&lt;/code&gt; . The &lt;code&gt;contains&lt;/code&gt; method does not return &lt;code&gt;true&lt;/code&gt; for points on the right or bottom edges of a &lt;code&gt;Rectangle&lt;/code&gt; . Therefore if the added &lt;code&gt;Point&lt;/code&gt; falls on the right or bottom edge of the enlarged &lt;code&gt;Rectangle&lt;/code&gt; , &lt;code&gt;contains&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; for that &lt;code&gt;Point&lt;/code&gt; . If the specified point must be contained within the new &lt;code&gt;Rectangle&lt;/code&gt; , a 1x1 rectangle should be added instead:</target>
        </trans-unit>
        <trans-unit id="b40ece0b16cea6fb3f9c52fe99f75936d73d152f" translate="yes" xml:space="preserve">
          <source>After adding a point, a call to &lt;code&gt;contains&lt;/code&gt; with the added point as an argument does not necessarily return &lt;code&gt;true&lt;/code&gt;. The &lt;code&gt;contains&lt;/code&gt; method does not return &lt;code&gt;true&lt;/code&gt; for points on the right or bottom edges of a &lt;code&gt;Rectangle&lt;/code&gt;. Therefore, if the added point falls on the right or bottom edge of the enlarged &lt;code&gt;Rectangle&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; for that point. If the specified point must be contained within the new &lt;code&gt;Rectangle&lt;/code&gt;, a 1x1 rectangle should be added instead:</source>
          <target state="translated">After adding a point, a call to &lt;code&gt;contains&lt;/code&gt; with the added point as an argument does not necessarily return &lt;code&gt;true&lt;/code&gt; . The &lt;code&gt;contains&lt;/code&gt; method does not return &lt;code&gt;true&lt;/code&gt; for points on the right or bottom edges of a &lt;code&gt;Rectangle&lt;/code&gt; . Therefore, if the added point falls on the right or bottom edge of the enlarged &lt;code&gt;Rectangle&lt;/code&gt; , &lt;code&gt;contains&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; for that point. If the specified point must be contained within the new &lt;code&gt;Rectangle&lt;/code&gt; , a 1x1 rectangle should be added instead:</target>
        </trans-unit>
        <trans-unit id="7ea8a7395565f65ea7dd685429279f62519fb140" translate="yes" xml:space="preserve">
          <source>After adding a point, a call to &lt;code&gt;contains&lt;/code&gt; with the added point as an argument does not necessarily return &lt;code&gt;true&lt;/code&gt;. The &lt;code&gt;contains&lt;/code&gt; method does not return &lt;code&gt;true&lt;/code&gt; for points on the right or bottom edges of a rectangle. Therefore, if the added point falls on the left or bottom edge of the enlarged rectangle, &lt;code&gt;contains&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; for that point.</source>
          <target state="translated">After adding a point, a call to &lt;code&gt;contains&lt;/code&gt; with the added point as an argument does not necessarily return &lt;code&gt;true&lt;/code&gt; . The &lt;code&gt;contains&lt;/code&gt; method does not return &lt;code&gt;true&lt;/code&gt; for points on the right or bottom edges of a rectangle. Therefore, if the added point falls on the left or bottom edge of the enlarged rectangle, &lt;code&gt;contains&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; for that point.</target>
        </trans-unit>
        <trans-unit id="319f072aabdb26c8167316bc446a0a97932f13ec" translate="yes" xml:space="preserve">
          <source>After adding an AWT event listener, malicious code may scan all AWT events dispatched in the system, allowing it to read all user input (such as passwords). Each AWT event listener is called from within the context of that event queue's EventDispatchThread, so if the accessEventQueue permission is also enabled, malicious code could modify the contents of AWT event queues system-wide, causing the application or applet to misbehave in an insecure manner.</source>
          <target state="translated">After adding an AWT event listener, malicious code may scan all AWT events dispatched in the system, allowing it to read all user input (such as passwords). Each AWT event listener is called from within the context of that event queue's EventDispatchThread, so if the accessEventQueue permission is also enabled, malicious code could modify the contents of AWT event queues system-wide, causing the application or applet to misbehave in an insecure manner.</target>
        </trans-unit>
        <trans-unit id="deca58454213e48137e43ef1598774994c948571" translate="yes" xml:space="preserve">
          <source>After an application has attempted to synchronize a &lt;code&gt;RowSet&lt;/code&gt; object with the data source (by calling the &lt;code&gt;CachedRowSet&lt;/code&gt; method &lt;code&gt;acceptChanges&lt;/code&gt;), and one or more conflicts have been found, a rowset's &lt;code&gt;SyncProvider&lt;/code&gt; object creates an instance of &lt;code&gt;SyncResolver&lt;/code&gt;. This new &lt;code&gt;SyncResolver&lt;/code&gt; object has the same number of rows and columns as the &lt;code&gt;RowSet&lt;/code&gt; object that was attempting the synchronization. The &lt;code&gt;SyncResolver&lt;/code&gt; object contains the values from the data source that caused the conflict(s) and &lt;code&gt;null&lt;/code&gt; for all other values. In addition, it contains information about each conflict.</source>
          <target state="translated">After an application has attempted to synchronize a &lt;code&gt;RowSet&lt;/code&gt; object with the data source (by calling the &lt;code&gt;CachedRowSet&lt;/code&gt; method &lt;code&gt;acceptChanges&lt;/code&gt; ), and one or more conflicts have been found, a rowset's &lt;code&gt;SyncProvider&lt;/code&gt; object creates an instance of &lt;code&gt;SyncResolver&lt;/code&gt; . This new &lt;code&gt;SyncResolver&lt;/code&gt; object has the same number of rows and columns as the &lt;code&gt;RowSet&lt;/code&gt; object that was attempting the synchronization. The &lt;code&gt;SyncResolver&lt;/code&gt; object contains the values from the data source that caused the conflict(s) and &lt;code&gt;null&lt;/code&gt; for all other values. In addition, it contains information about each conflict.</target>
        </trans-unit>
        <trans-unit id="a51094af7f44fae703a241088fad5e60434a3b19" translate="yes" xml:space="preserve">
          <source>After an event class is defined, instances can be created (event objects). Data is stored in the event by assigning data to fields. Event timing can be explicitly controlled by using the &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; methods available in the &lt;code&gt;Event&lt;/code&gt; class.</source>
          <target state="translated">이벤트 클래스가 정의 된 후 인스턴스를 만들 수 있습니다 (이벤트 개체). 데이터는 필드에 데이터를 할당하여 이벤트에 저장됩니다. 이벤트 타이밍이 명시 적으로 사용하여 제어 할 수있는 &lt;code&gt;begin&lt;/code&gt; 및 &lt;code&gt;end&lt;/code&gt; 에서 사용할 수있는 방법 &lt;code&gt;Event&lt;/code&gt; 클래스를.</target>
        </trans-unit>
        <trans-unit id="a9c90e994078624e813ad2221dc281bd178259bc" translate="yes" xml:space="preserve">
          <source>After an event is allocated and its field members are populated, it can be written to the Flight Recorder system by using the &lt;a href=&quot;#commit()&quot;&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이벤트가 할당되고 해당 필드 멤버가 채워지면 &lt;a href=&quot;#commit()&quot;&gt; &lt;code&gt;commit()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 Flight Recorder 시스템에 기록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e4a2fd9f051afd0fdf9ea63168c90b67d3be804b" translate="yes" xml:space="preserve">
          <source>After an explicit open (either before or after implicit opens), the device will not be closed by implicit closing. The only way to close an explicitly opened device is an explicit close.</source>
          <target state="translated">명시 적 열림 후 (암시 적 열림 전후) 장치는 암묵적 닫힘으로 닫히지 않습니다. 명시 적으로 열린 장치를 닫는 유일한 방법은 명시 적으로 닫는 것입니다.</target>
        </trans-unit>
        <trans-unit id="750627cffe50993189feecf7142ddd7e44a65a2e" translate="yes" xml:space="preserve">
          <source>After construction, the initial delay and the between-event delay can be changed independently, and additional &lt;code&gt;ActionListeners&lt;/code&gt; may be added.</source>
          <target state="translated">After construction, the initial delay and the between-event delay can be changed independently, and additional &lt;code&gt;ActionListeners&lt;/code&gt; may be added.</target>
        </trans-unit>
        <trans-unit id="844191c626f8db8c9bc97f26c5560cc13045fdd8" translate="yes" xml:space="preserve">
          <source>After detaching from the virtual machine, any further attempt to invoke operations on that virtual machine will cause an &lt;a href=&quot;../../../../../java.base/java/io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; to be thrown. If an operation (such as &lt;a href=&quot;#loadAgent(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadAgent&lt;/code&gt;&lt;/a&gt; for example) is in progress when this method is invoked then the behaviour is implementation dependent. In other words, it is implementation specific if the operation completes or throws &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">가상 머신에서 분리 한 후 해당 가상 머신에서 작업을 호출하려는 추가 시도로 인해 &lt;a href=&quot;../../../../../java.base/java/io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 이 메서드가 호출 될 때 작업 (예 : &lt;a href=&quot;#loadAgent(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadAgent&lt;/code&gt; &lt;/a&gt; )이 진행중인 경우 동작은 구현에 따라 다릅니다. 즉, 작업이 &lt;code&gt;IOException&lt;/code&gt; 을 완료하거나 throw하는 경우 구현에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="3f13767be49eb869df5704822740a5994f725445" translate="yes" xml:space="preserve">
          <source>After digits are obtained for the integer part, fractional part, and exponent (as appropriate for the data type), the following transformation is applied:</source>
          <target state="translated">정수 부분, 분수 부분 및 지수 (데이터 유형에 적합)에 대해 숫자를 얻은 후 다음 변환이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="2e596fa70998190425297d1d9f0c9cd8a2a3c131" translate="yes" xml:space="preserve">
          <source>After every group has been converted to a character by this process, the characters are gathered, in the same order in which their corresponding groups were read from the input stream, to form a &lt;code&gt;String&lt;/code&gt;, which is returned.</source>
          <target state="translated">이 프로세스에 의해 모든 그룹이 문자로 변환 된 후, 입력 스트림에서 해당 그룹이 읽히는 순서와 동일한 순서로 문자가 수집되어 &lt;code&gt;String&lt;/code&gt; 을 형성합니다 .</target>
        </trans-unit>
        <trans-unit id="1206b32dd9d29e89d9f7f414072872d7667aad0d" translate="yes" xml:space="preserve">
          <source>After execution of the terminal stream operation there are no guarantees that the reader will be at a specific position from which to read the next character or line.</source>
          <target state="translated">터미널 스트림 작업을 실행 한 후 리더가 다음 문자 나 행을 읽을 특정 위치에 있다고 보장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f88140b7c52d65de07db8da57c72b72adbdb4c30" translate="yes" xml:space="preserve">
          <source>After invoking the &lt;code&gt;insertString()&lt;/code&gt; method, the Element structure would look like the one shown in &lt;u&gt;Figure 3&lt;/u&gt;.</source>
          <target state="translated">&lt;code&gt;insertString()&lt;/code&gt; 메서드 를 호출 한 후 Element 구조는 &lt;u&gt;그림 3에&lt;/u&gt; 표시된 것과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="bb5b74f1a3c4b1aa7279b6678db8bb92e0e36d60" translate="yes" xml:space="preserve">
          <source>After invoking this method, subsequent invocations of the &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#stream()&quot;&gt;&lt;code&gt;stream&lt;/code&gt;&lt;/a&gt; methods will lazily locate providers (and instantiate in the case of &lt;code&gt;iterator&lt;/code&gt;) from scratch, just as is done by a newly-created service loader.</source>
          <target state="translated">After invoking this method, subsequent invocations of the &lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#stream()&quot;&gt; &lt;code&gt;stream&lt;/code&gt; &lt;/a&gt; methods will lazily locate providers (and instantiate in the case of &lt;code&gt;iterator&lt;/code&gt; ) from scratch, just as is done by a newly-created service loader.</target>
        </trans-unit>
        <trans-unit id="d093d84f7dd27596bf805dd2fb842a92b9ce9304" translate="yes" xml:space="preserve">
          <source>After invoking this method, subsequent invocations of the &lt;a href=&quot;serviceloader#iterator--&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; method will lazily look up and instantiate providers from scratch, just as is done by a newly-created loader.</source>
          <target state="translated">이 메소드를 호출 한 후, &lt;a href=&quot;serviceloader#iterator--&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 메소드 의 후속 호출은 새로 작성된 로더가 수행하는 것처럼 지연없이 제공자를 처음부터 찾아서 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="4df33e3e73dd550518a640fa9dad54c709451515" translate="yes" xml:space="preserve">
          <source>After invoking this method, the Transformer must continue with the transformation. It should still be possible for the application to process the document through to the end.</source>
          <target state="translated">After invoking this method, the Transformer must continue with the transformation. It should still be possible for the application to process the document through to the end.</target>
        </trans-unit>
        <trans-unit id="171ca11042ddfa5bb8de661bafc438fcab8241f1" translate="yes" xml:space="preserve">
          <source>After invoking this method, the parser may stop processing by throwing a &lt;a href=&quot;saxexception&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt;, or implement a feature that can direct it to continue after a fatal error. In the later case, it may report events on the rest of the document without any guarantee of correctness.</source>
          <target state="translated">이 메서드를 호출 한 후 파서는 &lt;a href=&quot;saxexception&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; 을 발생&lt;/a&gt; 시켜 처리를 중지 하거나 치명적인 오류 후 계속하도록 지시 할 수있는 기능을 구현할 수 있습니다. 나중의 경우 정확성을 보장하지 않고 문서의 나머지 부분에 대한 이벤트를보고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9451de913bb5154951fb393683a4aa3ca49612f9" translate="yes" xml:space="preserve">
          <source>After membership is dropped it may still be possible to receive datagrams sent to the group. This can arise when datagrams are waiting to be received in the socket's receive buffer. After membership is dropped then the channel may &lt;a href=&quot;multicastchannel#join(java.net.InetAddress,java.net.NetworkInterface)&quot;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt; the group again in which case a new membership key is returned.</source>
          <target state="translated">After membership is dropped it may still be possible to receive datagrams sent to the group. This can arise when datagrams are waiting to be received in the socket's receive buffer. After membership is dropped then the channel may &lt;a href=&quot;multicastchannel#join(java.net.InetAddress,java.net.NetworkInterface)&quot;&gt; &lt;code&gt;join&lt;/code&gt; &lt;/a&gt; the group again in which case a new membership key is returned.</target>
        </trans-unit>
        <trans-unit id="2cf6137e0108d8328f2a2f6e3a9183eca6828869" translate="yes" xml:space="preserve">
          <source>After membership is dropped it may still be possible to receive datagrams sent to the group. This can arise when datagrams are waiting to be received in the socket's receive buffer. After membership is dropped then the channel may &lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-&quot;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt; the group again in which case a new membership key is returned.</source>
          <target state="translated">멤버십이 삭제 된 후에도 그룹에 전송 된 데이터 그램을받을 수 있습니다. 소켓의 수신 버퍼에서 데이터 그램 수신을 기다리는 경우에 발생할 수 있습니다. 멤버십이 삭제 된 후 채널이 그룹에 다시 &lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-&quot;&gt; &lt;code&gt;join&lt;/code&gt; &lt;/a&gt; 수 있으며이 경우 새 멤버쉽 키가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="fb0c7c44913b874847757b29fb40fc36b8ce2408" translate="yes" xml:space="preserve">
          <source>After passing the initial &quot;level&quot; check, the Logger will call this Filter to check if a log record should really be published.</source>
          <target state="translated">초기 &quot;수준&quot;확인을 통과 한 후 로거는이 필터를 호출하여 로그 레코드가 실제로 게시되어야하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="bff9cb64aa8dc580ae6a8f97589fef27a2342f9f" translate="yes" xml:space="preserve">
          <source>After passing this initial (cheap) test, the Logger will allocate a LogRecord to describe the logging message. It will then call a Filter (if present) to do a more detailed check on whether the record should be published. If that passes it will then publish the LogRecord to its output Handlers. By default, loggers also publish to their parent's Handlers, recursively up the tree.</source>
          <target state="translated">이 초기 (저렴한) 테스트를 통과 한 후 Logger는 로깅 메시지를 설명하기 위해 LogRecord를 할당합니다. 그런 다음 필터 (있는 경우)를 호출하여 레코드를 게시해야하는지에 대한 자세한 검사를 수행합니다. 그것이 통과하면 LogRecord를 출력 핸들러에 게시합니다. 기본적으로 로거는 트리의 재귀 적으로 부모의 처리기에 게시합니다.</target>
        </trans-unit>
        <trans-unit id="481c9e3d35a2a6305addb5c42c90ac894894cf69" translate="yes" xml:space="preserve">
          <source>After properties have been set, the &lt;code&gt;CachedRowSet&lt;/code&gt; object must be populated with data using either the method &lt;code&gt;populate&lt;/code&gt; or the method &lt;code&gt;execute&lt;/code&gt;. The following lines of code demonstrate using the method &lt;code&gt;populate&lt;/code&gt;. Note that this version of the method takes two parameters, a &lt;code&gt;ResultSet&lt;/code&gt; handle and the row in the &lt;code&gt;ResultSet&lt;/code&gt; object from which to start retrieving rows.</source>
          <target state="translated">After properties have been set, the &lt;code&gt;CachedRowSet&lt;/code&gt; object must be populated with data using either the method &lt;code&gt;populate&lt;/code&gt; or the method &lt;code&gt;execute&lt;/code&gt; . The following lines of code demonstrate using the method &lt;code&gt;populate&lt;/code&gt; . Note that this version of the method takes two parameters, a &lt;code&gt;ResultSet&lt;/code&gt; handle and the row in the &lt;code&gt;ResultSet&lt;/code&gt; object from which to start retrieving rows.</target>
        </trans-unit>
        <trans-unit id="9bede34ed39301308a46be1641e3f2f4b980b5fa" translate="yes" xml:space="preserve">
          <source>After removing &lt;code&gt;client&lt;/code&gt; from the list of connections, this method calls &lt;a href=&quot;#closeClient(javax.management.remote.rmi.RMIConnection)&quot;&gt;&lt;code&gt;closeClient(client)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">After removing &lt;code&gt;client&lt;/code&gt; from the list of connections, this method calls &lt;a href=&quot;#closeClient(javax.management.remote.rmi.RMIConnection)&quot;&gt; &lt;code&gt;closeClient(client)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0deb0d93fdb81af024261a48e96f24361c11e9df" translate="yes" xml:space="preserve">
          <source>After removing &lt;code&gt;client&lt;/code&gt; from the list of connections, this method calls &lt;a href=&quot;rmiserverimpl#closeClient-javax.management.remote.rmi.RMIConnection-&quot;&gt;&lt;code&gt;closeClient(client)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">연결 목록에서 &lt;code&gt;client&lt;/code&gt; 를 제거한 후이 메소드는 &lt;a href=&quot;rmiserverimpl#closeClient-javax.management.remote.rmi.RMIConnection-&quot;&gt; &lt;code&gt;closeClient(client)&lt;/code&gt; &lt;/a&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="c91347c8cce51192bf5c0718988ab014d8a17d38" translate="yes" xml:space="preserve">
          <source>After removing the object from the RMI runtime, the group must inform its &lt;code&gt;ActivationMonitor&lt;/code&gt; (via the monitor's &lt;code&gt;inactiveObject&lt;/code&gt; method) that the remote object is not currently active so that the remote object will be re-activated by the activator upon a subsequent activation request.</source>
          <target state="translated">After removing the object from the RMI runtime, the group must inform its &lt;code&gt;ActivationMonitor&lt;/code&gt; (via the monitor's &lt;code&gt;inactiveObject&lt;/code&gt; method) that the remote object is not currently active so that the remote object will be re-activated by the activator upon a subsequent activation request.</target>
        </trans-unit>
        <trans-unit id="7051dda8326754dcf69d3087ca610d99615e42c8" translate="yes" xml:space="preserve">
          <source>After retrieving the AWT event queue, malicious code may peek at and even remove existing events from its event queue, as well as post bogus events which may purposefully cause the application or applet to misbehave in an insecure manner.</source>
          <target state="translated">After retrieving the AWT event queue, malicious code may peek at and even remove existing events from its event queue, as well as post bogus events which may purposefully cause the application or applet to misbehave in an insecure manner.</target>
        </trans-unit>
        <trans-unit id="fe83bd60b2bd7486dfa9e410144d43cec2b7478e" translate="yes" xml:space="preserve">
          <source>After rounding for the precision, the formatting of the resulting magnitude</source>
          <target state="translated">정밀도를 위해 반올림 한 후 결과 크기의 서식</target>
        </trans-unit>
        <trans-unit id="76a6d5afd1d5e3fb6d5a0d97af729aa9231381f0" translate="yes" xml:space="preserve">
          <source>After stream pipeline execution completes, this scanner is left in an indeterminate state and cannot be reused.</source>
          <target state="translated">After stream pipeline execution completes, this scanner is left in an indeterminate state and cannot be reused.</target>
        </trans-unit>
        <trans-unit id="c074c586219c220ea5de67d9ff7a160ed6b2a0fc" translate="yes" xml:space="preserve">
          <source>After successful authentication, a user &lt;a href=&quot;../../../../../java.base/java/security/principal&quot;&gt;&lt;code&gt;Principal&lt;/code&gt;&lt;/a&gt; can be associated with a particular &lt;a href=&quot;../../../../../java.base/javax/security/auth/subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt; to augment that &lt;code&gt;Subject&lt;/code&gt; with an additional identity. Authorization decisions can then be based upon the &lt;code&gt;Principal&lt;/code&gt;s that are associated with a &lt;code&gt;Subject&lt;/code&gt;.</source>
          <target state="translated">인증에 성공하면 사용자 &lt;a href=&quot;../../../../../java.base/java/security/principal&quot;&gt; &lt;code&gt;Principal&lt;/code&gt; &lt;/a&gt; 을 특정 &lt;a href=&quot;../../../../../java.base/javax/security/auth/subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt; 와 연관시켜 해당 &lt;code&gt;Subject&lt;/code&gt; 를 추가 ID 로 보강 할 수 있습니다 . 그런 다음 권한 부여 결정은 &lt;code&gt;Subject&lt;/code&gt; 와 관련된 &lt;code&gt;Principal&lt;/code&gt; 을 기반으로 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ea966e6d18ed9dd56bb4519b097bfef392eb9de4" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;AccessController.getContext&lt;/code&gt; method receives the combined stack of ProtectionDomains back from the &lt;code&gt;DomainCombiner&lt;/code&gt;, it returns a new AccessControlContext that has both the combined ProtectionDomains as well as the &lt;code&gt;DomainCombiner&lt;/code&gt;.</source>
          <target state="translated">애프터 &lt;code&gt;AccessController.getContext&lt;/code&gt; 의 방법의 ProtectionDomain가 백업으로부터의 합성 수신 스택 &lt;code&gt;DomainCombiner&lt;/code&gt; 를을 , 그것만큼 잘 결합 된 ProtectionDomain 모두 가진 새로운 AccessControlContext에 반환 &lt;code&gt;DomainCombiner&lt;/code&gt; 를이 .</target>
        </trans-unit>
        <trans-unit id="dcff7160b27d0aa8315882a99ed00344ce5b91e5" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;WebSocket&lt;/code&gt; has been built, the actual subprotocol can be queried through &lt;a href=&quot;websocket#getSubprotocol()&quot;&gt;&lt;code&gt;WebSocket.getSubprotocol()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">After the &lt;code&gt;WebSocket&lt;/code&gt; has been built, the actual subprotocol can be queried through &lt;a href=&quot;websocket#getSubprotocol()&quot;&gt; &lt;code&gt;WebSocket.getSubprotocol()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fe1ca10488234d21ddb6e9b74892d69adae52cb1" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;finalize&lt;/code&gt; method has been invoked for an object, no further action is taken until the Java virtual machine has again determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, including possible actions by other objects or classes which are ready to be finalized, at which point the object may be discarded.</source>
          <target state="translated">객체에 대해 &lt;code&gt;finalize&lt;/code&gt; 메소드를 호출 한 후, Java 가상 머신이 가능한 조치를 포함하여 아직 사망하지 않은 스레드가이 오브젝트에 액세스 할 수있는 방법이 더 이상 없음을 다시 판별 할 때까지 추가 조치가 수행되지 않습니다. 완료 될 준비가 된 다른 객체 또는 클래스에 의해 객체가 폐기 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fec22a61dee34fc626714729d4a14896d73b0179" translate="yes" xml:space="preserve">
          <source>After the context has been established or the &lt;code&gt;isProtReady&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;, the query routines can be invoked to determine the actual characteristics and services of the established context. The application can also start using the per-message methods of &lt;a href=&quot;#wrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;wrap&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getMIC(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;getMIC&lt;/code&gt;&lt;/a&gt; to obtain cryptographic operations on application supplied data.</source>
          <target state="translated">After the context has been established or the &lt;code&gt;isProtReady&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; , the query routines can be invoked to determine the actual characteristics and services of the established context. The application can also start using the per-message methods of &lt;a href=&quot;#wrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;wrap&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#getMIC(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;getMIC&lt;/code&gt; &lt;/a&gt; to obtain cryptographic operations on application supplied data.</target>
        </trans-unit>
        <trans-unit id="631a646fc53c523a1d17ca9ac57765cb9774459d" translate="yes" xml:space="preserve">
          <source>After the cursor for</source>
          <target state="translated">After the cursor for</target>
        </trans-unit>
        <trans-unit id="6eb6b56f99b8307503215614d6db7b0af46ca450" translate="yes" xml:space="preserve">
          <source>After the entries have been written, the output stream is flushed. The output stream remains open after this method returns.</source>
          <target state="translated">항목이 작성된 후 출력 스트림이 플러시됩니다. 이 메소드가 리턴 된 후에 출력 스트림은 열린 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="1719879a5ae6cf26cf01d4a127e62ce488584a2b" translate="yes" xml:space="preserve">
          <source>After the group is created, the &lt;code&gt;ActivationSystem&lt;/code&gt; is informed that the group is active by calling the &lt;code&gt;activeGroup&lt;/code&gt; method which returns the &lt;code&gt;ActivationMonitor&lt;/code&gt; for the group. The application need not call &lt;code&gt;activeGroup&lt;/code&gt; independently since it is taken care of by this method.</source>
          <target state="translated">After the group is created, the &lt;code&gt;ActivationSystem&lt;/code&gt; is informed that the group is active by calling the &lt;code&gt;activeGroup&lt;/code&gt; method which returns the &lt;code&gt;ActivationMonitor&lt;/code&gt; for the group. The application need not call &lt;code&gt;activeGroup&lt;/code&gt; independently since it is taken care of by this method.</target>
        </trans-unit>
        <trans-unit id="cf37323d83bfa3761ac32673b7214c3204cb9564" translate="yes" xml:space="preserve">
          <source>After the last live reference to a &lt;code&gt;Timer&lt;/code&gt; object goes away</source>
          <target state="translated">&lt;code&gt;Timer&lt;/code&gt; 객체에 대한 마지막 실시간 참조 가 사라진 후</target>
        </trans-unit>
        <trans-unit id="e5e91476b8f641696d56131565cb9eeb909b6b53" translate="yes" xml:space="preserve">
          <source>After the protocol version there must be a space, followed by the implementation name. The format of the implementation name is unspecified. It is recommended that it include an implementation version number. An implementation can use an empty string as its implementation name, for example for security reasons.</source>
          <target state="translated">프로토콜 버전 뒤에는 공백이 있어야하고 구현 이름이 있어야합니다. 구현 이름의 형식이 지정되지 않았습니다. 구현 버전 번호를 포함하는 것이 좋습니다. 구현은 보안상의 이유로 빈 문자열을 구현 이름으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cf35a3f00b309b6705097e74eb7fc48ec5414a0" translate="yes" xml:space="preserve">
          <source>After the service provider has sent the extended operation request to the LDAP server, it will receive a response from the server. If the operation failed, the provider will throw a NamingException. If the operation succeeded, the provider will invoke this method using the data that it got back in the response. It is the job of this method to return a class that implements the ExtendedResponse interface that is appropriate for the extended operation request.</source>
          <target state="translated">서비스 제공자가 확장 조작 요청을 LDAP 서버로 보낸 후 서버로부터 응답을 수신합니다. 작업이 실패하면 공급자는 NamingException을 throw합니다. 작업이 성공하면 공급자는 응답에서 반환 된 데이터를 사용하여이 메서드를 호출합니다. 확장 조작 요청에 적합한 ExtendedResponse 인터페이스를 구현하는 클래스를 리턴하는 것이이 메소드의 작업입니다.</target>
        </trans-unit>
        <trans-unit id="cbdcc70d7ac289538f1ae65ac6a6ed4e008846de" translate="yes" xml:space="preserve">
          <source>After the theme is set, &lt;code&gt;MetalLookAndFeel&lt;/code&gt; needs to be re-installed and the uis need to be recreated. The following shows how to do this:</source>
          <target state="translated">After the theme is set, &lt;code&gt;MetalLookAndFeel&lt;/code&gt; needs to be re-installed and the uis need to be recreated. The following shows how to do this:</target>
        </trans-unit>
        <trans-unit id="23f139bc62371d481e54e7e0f1d58f171e706331" translate="yes" xml:space="preserve">
          <source>After these steps, all clauses have been adjusted by supplying omitted functions and arguments.</source>
          <target state="translated">After these steps, all clauses have been adjusted by supplying omitted functions and arguments.</target>
        </trans-unit>
        <trans-unit id="3cd1e3686274759cb3d4a14421687f2b7fcd0e33" translate="yes" xml:space="preserve">
          <source>After this choice menu has been added to a panel, it appears as follows in its normal state:</source>
          <target state="translated">After this choice menu has been added to a panel, it appears as follows in its normal state:</target>
        </trans-unit>
        <trans-unit id="305f58306863fb138a922f05cf8b5a6ab7ad16de" translate="yes" xml:space="preserve">
          <source>After this code fragment has been run, the application will have traversed all 1000 rows, but it will have had no more than 100 rows in memory at a time.</source>
          <target state="translated">After this code fragment has been run, the application will have traversed all 1000 rows, but it will have had no more than 100 rows in memory at a time.</target>
        </trans-unit>
        <trans-unit id="d4f574d0afb2173bcd912a40917b2d18978e7fb0" translate="yes" xml:space="preserve">
          <source>After this code has run,</source>
          <target state="translated">After this code has run,</target>
        </trans-unit>
        <trans-unit id="0cab8390a78cebe7c29a3ae7423ae366499aa09d" translate="yes" xml:space="preserve">
          <source>After this method has been called, a call to the method &lt;code&gt;getParams&lt;/code&gt; will return an object array of the current command parameters, which will include the &lt;code&gt;Array&lt;/code&gt; object set for placeholder parameter number &lt;code&gt;parameterIndex&lt;/code&gt;. Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number</source>
          <target state="translated">After this method has been called, a call to the method &lt;code&gt;getParams&lt;/code&gt; will return an object array of the current command parameters, which will include the &lt;code&gt;Array&lt;/code&gt; object set for placeholder parameter number &lt;code&gt;parameterIndex&lt;/code&gt; . Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number</target>
        </trans-unit>
        <trans-unit id="979c3c969d35db8795036606e159b27a6207deed" translate="yes" xml:space="preserve">
          <source>After this method has been called, a call to the method &lt;code&gt;getParams&lt;/code&gt; will return an object array of the current command parameters, which will include the &lt;code&gt;Blob&lt;/code&gt; object set for placeholder parameter number &lt;code&gt;parameterIndex&lt;/code&gt;. Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number</source>
          <target state="translated">After this method has been called, a call to the method &lt;code&gt;getParams&lt;/code&gt; will return an object array of the current command parameters, which will include the &lt;code&gt;Blob&lt;/code&gt; object set for placeholder parameter number &lt;code&gt;parameterIndex&lt;/code&gt; . Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number</target>
        </trans-unit>
        <trans-unit id="a7c3a6c19f050ce28e39413687702416d89bbc14" translate="yes" xml:space="preserve">
          <source>After this method has been called, a call to the method &lt;code&gt;getParams&lt;/code&gt; will return an object array of the current command parameters, which will include the &lt;code&gt;Clob&lt;/code&gt; object set for placeholder parameter number &lt;code&gt;parameterIndex&lt;/code&gt;. Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number</source>
          <target state="translated">After this method has been called, a call to the method &lt;code&gt;getParams&lt;/code&gt; will return an object array of the current command parameters, which will include the &lt;code&gt;Clob&lt;/code&gt; object set for placeholder parameter number &lt;code&gt;parameterIndex&lt;/code&gt; . Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number</target>
        </trans-unit>
        <trans-unit id="d83b06251caf91a1d2daae1fa3dd94900761cf85" translate="yes" xml:space="preserve">
          <source>After this method has been called, a call to the method &lt;code&gt;getParams&lt;/code&gt; will return an object array of the current command parameters, which will include the &lt;code&gt;Object&lt;/code&gt; set for placeholder parameter number &lt;code&gt;parameterIndex&lt;/code&gt;. Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number</source>
          <target state="translated">After this method has been called, a call to the method &lt;code&gt;getParams&lt;/code&gt; will return an object array of the current command parameters, which will include the &lt;code&gt;Object&lt;/code&gt; set for placeholder parameter number &lt;code&gt;parameterIndex&lt;/code&gt; . Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number</target>
        </trans-unit>
        <trans-unit id="7164a4155fcd30dfd236473f665740588654b96e" translate="yes" xml:space="preserve">
          <source>After this method has been called, a call to the method &lt;code&gt;getParams&lt;/code&gt; will return an object array of the current command parameters, which will include the &lt;code&gt;Ref&lt;/code&gt; object set for placeholder parameter number &lt;code&gt;parameterIndex&lt;/code&gt;. Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number</source>
          <target state="translated">After this method has been called, a call to the method &lt;code&gt;getParams&lt;/code&gt; will return an object array of the current command parameters, which will include the &lt;code&gt;Ref&lt;/code&gt; object set for placeholder parameter number &lt;code&gt;parameterIndex&lt;/code&gt; . Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number</target>
        </trans-unit>
        <trans-unit id="88e68adad83d517b795dfe0f264cf0272b843138" translate="yes" xml:space="preserve">
          <source>After this method returns, subsequent calls to &lt;a href=&quot;#isDone()&quot;&gt;&lt;code&gt;isDone()&lt;/code&gt;&lt;/a&gt; will always return &lt;code&gt;true&lt;/code&gt;. Subsequent calls to &lt;a href=&quot;#isCancelled()&quot;&gt;&lt;code&gt;isCancelled()&lt;/code&gt;&lt;/a&gt; will always return &lt;code&gt;true&lt;/code&gt; if this method returned &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">After this method returns, subsequent calls to &lt;a href=&quot;#isDone()&quot;&gt; &lt;code&gt;isDone()&lt;/code&gt; &lt;/a&gt; will always return &lt;code&gt;true&lt;/code&gt; . Subsequent calls to &lt;a href=&quot;#isCancelled()&quot;&gt; &lt;code&gt;isCancelled()&lt;/code&gt; &lt;/a&gt; will always return &lt;code&gt;true&lt;/code&gt; if this method returned &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="293a1f74d8d45ca2cebc7051e8db2eb37adc8b80" translate="yes" xml:space="preserve">
          <source>After this method returns, subsequent calls to &lt;a href=&quot;future#isDone--&quot;&gt;&lt;code&gt;Future.isDone()&lt;/code&gt;&lt;/a&gt; will always return &lt;code&gt;true&lt;/code&gt;. Subsequent calls to &lt;a href=&quot;future#isCancelled--&quot;&gt;&lt;code&gt;Future.isCancelled()&lt;/code&gt;&lt;/a&gt; will always return &lt;code&gt;true&lt;/code&gt; if this method returned &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 메서드가 반환 된 후 &lt;a href=&quot;future#isDone--&quot;&gt; &lt;code&gt;Future.isDone()&lt;/code&gt; &lt;/a&gt; 후속 호출 은 항상 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . &lt;a href=&quot;future#isCancelled--&quot;&gt; &lt;code&gt;Future.isCancelled()&lt;/code&gt; &lt;/a&gt; 후속 호출 은 이 메소드가 &lt;code&gt;true&lt;/code&gt; 를 리턴하면 항상 true를 리턴 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33a51d9c14538f4cc61149c5d78199ca9d382d8f" translate="yes" xml:space="preserve">
          <source>After this method returns, subsequent calls to &lt;a href=&quot;future#isDone--&quot;&gt;&lt;code&gt;isDone()&lt;/code&gt;&lt;/a&gt; will always return &lt;code&gt;true&lt;/code&gt;. Subsequent calls to &lt;a href=&quot;future#isCancelled--&quot;&gt;&lt;code&gt;isCancelled()&lt;/code&gt;&lt;/a&gt; will always return &lt;code&gt;true&lt;/code&gt; if this method returned &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 메소드가 리턴 된 후 &lt;a href=&quot;future#isDone--&quot;&gt; &lt;code&gt;isDone()&lt;/code&gt; &lt;/a&gt; 후속 호출 은 항상 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . &lt;a href=&quot;future#isCancelled--&quot;&gt; &lt;code&gt;isCancelled()&lt;/code&gt; &lt;/a&gt; 후속 호출 은 이 메소드가 &lt;code&gt;true&lt;/code&gt; 를 리턴하면 항상 true를 리턴 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c3e522b1d45fb8dcd2883efd41da35812fe95ef" translate="yes" xml:space="preserve">
          <source>After this method returns, then any subsequent I/O exception that occurs while reading from the file or when a malformed or unmappable byte sequence is read, is wrapped in an &lt;a href=&quot;../../io/uncheckedioexception&quot;&gt;&lt;code&gt;UncheckedIOException&lt;/code&gt;&lt;/a&gt; that will be thrown from the &lt;a href=&quot;../../util/stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; method that caused the read to take place. In case an &lt;code&gt;IOException&lt;/code&gt; is thrown when closing the file, it is also wrapped as an &lt;code&gt;UncheckedIOException&lt;/code&gt;.</source>
          <target state="translated">이 메소드가 리턴 된 후, 파일에서 읽거나 조작되지 않거나 맵핑 할 수없는 바이트 순서를 읽을 때 발생하는 후속 I / O 예외는 읽기 가 발생하는 &lt;a href=&quot;../../util/stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; 메소드 에서 발생 하는 &lt;a href=&quot;../../io/uncheckedioexception&quot;&gt; &lt;code&gt;UncheckedIOException&lt;/code&gt; 에&lt;/a&gt; 랩됩니다. . 경우에 &lt;code&gt;IOException&lt;/code&gt; 가이 파일을 닫을 때, 그것은 또한으로 포장되어 발생합니다 &lt;code&gt;UncheckedIOException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc435c104245c3822b5d69b9f57dbb5a0455aa31" translate="yes" xml:space="preserve">
          <source>After this operation, this thread will be suspended at the invoke instruction of the target method that created &lt;code&gt;frame&lt;/code&gt;. The &lt;code&gt;frame&lt;/code&gt;'s method can be reentered with a step into the instruction.</source>
          <target state="translated">이 작업 후이 스레드는 &lt;code&gt;frame&lt;/code&gt; 을 생성 한 대상 메서드의 호출 명령에서 일시 중단됩니다 . &lt;code&gt;frame&lt;/code&gt; 의 방법으로 지시하는 단계와 재 입력 할 수있다.</target>
        </trans-unit>
        <trans-unit id="bb2e54c6cbce2883f6668ea07160954da33b667b" translate="yes" xml:space="preserve">
          <source>After type matching, a call to &lt;code&gt;invokeExact&lt;/code&gt; directly and immediately invoke the method handle's underlying method (or other behavior, as the case may be).</source>
          <target state="translated">형식 일치 후에 &lt;code&gt;invokeExact&lt;/code&gt; 를 직접 호출하면 메서드 핸들의 기본 메서드 (또는 경우에 따라 다른 동작)가 즉시 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f98ddd8546fd81a22cabf56e0498b6c7801601e5" translate="yes" xml:space="preserve">
          <source>Afterwards this method marks this container invalid, and invalidates its ancestors. See the &lt;a href=&quot;component#invalidate()&quot;&gt;&lt;code&gt;Component.invalidate()&lt;/code&gt;&lt;/a&gt; method for more details.</source>
          <target state="translated">Afterwards this method marks this container invalid, and invalidates its ancestors. See the &lt;a href=&quot;component#invalidate()&quot;&gt; &lt;code&gt;Component.invalidate()&lt;/code&gt; &lt;/a&gt; method for more details.</target>
        </trans-unit>
        <trans-unit id="feaf8a8ffd1a470bbb8b775f268aed0f0ad1b89b" translate="yes" xml:space="preserve">
          <source>Afterwards, the doclet calls &lt;a href=&quot;#getName()&quot;&gt;&lt;code&gt;getName&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getAllowedLocations()&quot;&gt;&lt;code&gt;getAllowedLocations&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#isInlineTag()&quot;&gt;&lt;code&gt;isInlineTag&lt;/code&gt;&lt;/a&gt;, to determine the characteristics of the tags supported by the taglet.</source>
          <target state="translated">그 후 doclet은 &lt;a href=&quot;#getName()&quot;&gt; &lt;code&gt;getName&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#getAllowedLocations()&quot;&gt; &lt;code&gt;getAllowedLocations&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#isInlineTag()&quot;&gt; &lt;code&gt;isInlineTag&lt;/code&gt; 를&lt;/a&gt; 호출 하여 taglet 에서 지원하는 태그의 특성을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="1f1fa4bd007b6d36b2b55f197c7a086706c67a6b" translate="yes" xml:space="preserve">
          <source>Afterwards, the tool calls &lt;a href=&quot;#getSupportedAnnotationTypes()&quot;&gt;&lt;code&gt;getSupportedAnnotationTypes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getSupportedOptions()&quot;&gt;&lt;code&gt;getSupportedOptions&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getSupportedSourceVersion()&quot;&gt;&lt;code&gt;getSupportedSourceVersion&lt;/code&gt;&lt;/a&gt;. These methods are only called once per run, not on each round.</source>
          <target state="translated">Afterwards, the tool calls &lt;a href=&quot;#getSupportedAnnotationTypes()&quot;&gt; &lt;code&gt;getSupportedAnnotationTypes&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#getSupportedOptions()&quot;&gt; &lt;code&gt;getSupportedOptions&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;#getSupportedSourceVersion()&quot;&gt; &lt;code&gt;getSupportedSourceVersion&lt;/code&gt; &lt;/a&gt;. These methods are only called once per run, not on each round.</target>
        </trans-unit>
        <trans-unit id="46462ba36a4f64098923f89701292a9f52d82bae" translate="yes" xml:space="preserve">
          <source>Afterwards, the tool calls &lt;a href=&quot;#getSupportedOptions()&quot;&gt;&lt;code&gt;getSupportedOptions&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getSupportedSourceVersion()&quot;&gt;&lt;code&gt;getSupportedSourceVersion&lt;/code&gt;&lt;/a&gt;. These methods are only called once.</source>
          <target state="translated">이후 도구는 &lt;a href=&quot;#getSupportedOptions()&quot;&gt; &lt;code&gt;getSupportedOptions&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getSupportedSourceVersion()&quot;&gt; &lt;code&gt;getSupportedSourceVersion&lt;/code&gt; 을&lt;/a&gt; 호출합니다 . 이러한 메서드는 한 번만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2fb0050855650fda48e2caa4a41f3a8f52ffa11a" translate="yes" xml:space="preserve">
          <source>Afterwards, the tool calls &lt;a href=&quot;processor#getSupportedAnnotationTypes--&quot;&gt;&lt;code&gt;getSupportedAnnotationTypes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;processor#getSupportedOptions--&quot;&gt;&lt;code&gt;getSupportedOptions&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;processor#getSupportedSourceVersion--&quot;&gt;&lt;code&gt;getSupportedSourceVersion&lt;/code&gt;&lt;/a&gt;. These methods are only called once per run, not on each round.</source>
          <target state="translated">그런 다음 도구는 &lt;a href=&quot;processor#getSupportedAnnotationTypes--&quot;&gt; &lt;code&gt;getSupportedAnnotationTypes&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;processor#getSupportedOptions--&quot;&gt; &lt;code&gt;getSupportedOptions&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;processor#getSupportedSourceVersion--&quot;&gt; &lt;code&gt;getSupportedSourceVersion&lt;/code&gt; 을&lt;/a&gt; 호출합니다 . 이러한 방법은 각 라운드가 아닌 실행 당 한 번만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b78d2c7cb75f536e3ce98909bc1e8ec2a5dab3b7" translate="yes" xml:space="preserve">
          <source>Again, if we were in the state Enabled and looked for &quot;background&quot;, we wouldn't find it in Button.Enabled, or in Button, but would at the top level in UIManager. So we return that value.</source>
          <target state="translated">Again, if we were in the state Enabled and looked for &quot;background&quot;, we wouldn't find it in Button.Enabled, or in Button, but would at the top level in UIManager. So we return that value.</target>
        </trans-unit>
        <trans-unit id="f7ecb6b90f813b91b8bfa02a3ea7dc4450ada5e6" translate="yes" xml:space="preserve">
          <source>AgentInitializationException</source>
          <target state="translated">AgentInitializationException</target>
        </trans-unit>
        <trans-unit id="c8bc7a4760a5bda06b10e8ee75545b0f0d0dcb34" translate="yes" xml:space="preserve">
          <source>AgentLoadException</source>
          <target state="translated">AgentLoadException</target>
        </trans-unit>
        <trans-unit id="7f2919a041f9456d8a40137a4a71905c7094cf1f" translate="yes" xml:space="preserve">
          <source>Agents can transform classes in arbitrary ways at load time, transform modules, or transform the bytecode of methods of already loaded classes. Developers or administrators that deploy agents, deploy applications that package an agent with the application, or use tools that load agents into a running application, are responsible for verifying the trustworthiness of each agent including the content and structure of the agent JAR file.</source>
          <target state="translated">에이전트는로드시 임의의 방식으로 클래스를 변환하거나 모듈을 변환하거나 이미로드 된 클래스의 메서드의 바이트 코드를 변환 할 수 있습니다. 에이전트를 배포하거나 에이전트를 응용 프로그램과 함께 패키지화하는 응용 프로그램을 배포하거나 실행중인 응용 프로그램에 에이전트를로드하는 도구를 사용하는 개발자 또는 관리자는 에이전트 JAR 파일의 콘텐츠 및 구조를 포함하여 각 에이전트의 신뢰성을 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="3b306905059d2f85d2602121333f3b36d9c506b6" translate="yes" xml:space="preserve">
          <source>Algorithm: enctype as a string, where enctype is defined in RFC 3961, section 8.</source>
          <target state="translated">알고리즘 : enctype을 문자열로, 여기서 enctype은 RFC 3961, 섹션 8에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="906b23b764fd3c9144853ac4bdb0ccdb1d7cbfbc" translate="yes" xml:space="preserve">
          <source>AlgorithmConstraints</source>
          <target state="translated">AlgorithmConstraints</target>
        </trans-unit>
        <trans-unit id="42895f9042b99feb9b3979a5d95b5e3f97c49655" translate="yes" xml:space="preserve">
          <source>AlgorithmConstraints.permits()</source>
          <target state="translated">AlgorithmConstraints.permits()</target>
        </trans-unit>
        <trans-unit id="943c79b435d382b5e7da46783d6bb2773e9b23d6" translate="yes" xml:space="preserve">
          <source>AlgorithmMethod</source>
          <target state="translated">AlgorithmMethod</target>
        </trans-unit>
        <trans-unit id="2eb8ac1d3c97074957ddf7f6fa1f9f774fbf9088" translate="yes" xml:space="preserve">
          <source>AlgorithmParameterGenerator</source>
          <target state="translated">AlgorithmParameterGenerator</target>
        </trans-unit>
        <trans-unit id="61ddd33c1d909c5b145d43c9d1e1c1e6fdd512c0" translate="yes" xml:space="preserve">
          <source>AlgorithmParameterGenerator.generateParameters()</source>
          <target state="translated">AlgorithmParameterGenerator.generateParameters()</target>
        </trans-unit>
        <trans-unit id="b9d0134c1fff2f11908574f91a6af9ef7423d1c4" translate="yes" xml:space="preserve">
          <source>AlgorithmParameterGenerator.getAlgorithm()</source>
          <target state="translated">AlgorithmParameterGenerator.getAlgorithm()</target>
        </trans-unit>
        <trans-unit id="144358004d3ac968008dc633237e89c636eacda2" translate="yes" xml:space="preserve">
          <source>AlgorithmParameterGenerator.getInstance()</source>
          <target state="translated">AlgorithmParameterGenerator.getInstance()</target>
        </trans-unit>
        <trans-unit id="6555eb9e9d87ca8ba00c25b69c5a277894272e41" translate="yes" xml:space="preserve">
          <source>AlgorithmParameterGenerator.getProvider()</source>
          <target state="translated">AlgorithmParameterGenerator.getProvider()</target>
        </trans-unit>
        <trans-unit id="de1ca1cd10ae0fe47c59203f27d894af487eac96" translate="yes" xml:space="preserve">
          <source>AlgorithmParameterGenerator.init()</source>
          <target state="translated">AlgorithmParameterGenerator.init()</target>
        </trans-unit>
        <trans-unit id="bac0401f4af05b215eb6d9f1c4463db8930d6fa3" translate="yes" xml:space="preserve">
          <source>AlgorithmParameterGeneratorSpi</source>
          <target state="translated">AlgorithmParameterGeneratorSpi</target>
        </trans-unit>
        <trans-unit id="3ce6d50a4cb7f5e2e69a0b4d13bc3b1d0fd1b181" translate="yes" xml:space="preserve">
          <source>AlgorithmParameterGeneratorSpi.engineGenerateParameters()</source>
          <target state="translated">AlgorithmParameterGeneratorSpi.engineGenerateParameters()</target>
        </trans-unit>
        <trans-unit id="7e6a83fd5bbac3c1c75e21e3c383d6ba68e0df8a" translate="yes" xml:space="preserve">
          <source>AlgorithmParameterGeneratorSpi.engineInit()</source>
          <target state="translated">AlgorithmParameterGeneratorSpi.engineInit()</target>
        </trans-unit>
        <trans-unit id="35b230a5434390d526484817ecfcee8d495f3bcd" translate="yes" xml:space="preserve">
          <source>AlgorithmParameterSpec</source>
          <target state="translated">AlgorithmParameterSpec</target>
        </trans-unit>
        <trans-unit id="e127f6153f90e2ae93d87fd9ab0b103ec55f7002" translate="yes" xml:space="preserve">
          <source>AlgorithmParameters</source>
          <target state="translated">AlgorithmParameters</target>
        </trans-unit>
        <trans-unit id="b6b1c8cf808fe67d3b739992365c72e753479b12" translate="yes" xml:space="preserve">
          <source>AlgorithmParameters.getAlgorithm()</source>
          <target state="translated">AlgorithmParameters.getAlgorithm()</target>
        </trans-unit>
        <trans-unit id="353edec096cac1e7851d4dce582bd231ec403786" translate="yes" xml:space="preserve">
          <source>AlgorithmParameters.getEncoded()</source>
          <target state="translated">AlgorithmParameters.getEncoded()</target>
        </trans-unit>
        <trans-unit id="fa35431b268b130e0a9f1f3dbe5c79aa207b6fbb" translate="yes" xml:space="preserve">
          <source>AlgorithmParameters.getInstance()</source>
          <target state="translated">AlgorithmParameters.getInstance()</target>
        </trans-unit>
        <trans-unit id="63fd06dad5b0e8e586e6a928f22d49c0a6f35738" translate="yes" xml:space="preserve">
          <source>AlgorithmParameters.getParameterSpec()</source>
          <target state="translated">AlgorithmParameters.getParameterSpec()</target>
        </trans-unit>
        <trans-unit id="73da677d3848f9b8bcff1a3616db9c4bb1c9d8af" translate="yes" xml:space="preserve">
          <source>AlgorithmParameters.getProvider()</source>
          <target state="translated">AlgorithmParameters.getProvider()</target>
        </trans-unit>
        <trans-unit id="ab5d7418d500948384db57c41498fc03792c6280" translate="yes" xml:space="preserve">
          <source>AlgorithmParameters.init()</source>
          <target state="translated">AlgorithmParameters.init()</target>
        </trans-unit>
        <trans-unit id="6fdcbd4ae2641895cbd9a679a886de0354d81036" translate="yes" xml:space="preserve">
          <source>AlgorithmParameters.toString()</source>
          <target state="translated">AlgorithmParameters.toString()</target>
        </trans-unit>
        <trans-unit id="20ba9f742cdf6dc9931981e20ca54d2969526bcb" translate="yes" xml:space="preserve">
          <source>AlgorithmParametersSpi</source>
          <target state="translated">AlgorithmParametersSpi</target>
        </trans-unit>
        <trans-unit id="6d8d02fba71ae38a2d6d2fc14a26e522139750ae" translate="yes" xml:space="preserve">
          <source>AlgorithmParametersSpi.engineGetEncoded()</source>
          <target state="translated">AlgorithmParametersSpi.engineGetEncoded()</target>
        </trans-unit>
        <trans-unit id="3941525735861bbbec5a273a85ae351b754e6542" translate="yes" xml:space="preserve">
          <source>AlgorithmParametersSpi.engineGetParameterSpec()</source>
          <target state="translated">AlgorithmParametersSpi.engineGetParameterSpec()</target>
        </trans-unit>
        <trans-unit id="bf446ba5bb0b12c8b7cc8880981676121dec84fe" translate="yes" xml:space="preserve">
          <source>AlgorithmParametersSpi.engineInit()</source>
          <target state="translated">AlgorithmParametersSpi.engineInit()</target>
        </trans-unit>
        <trans-unit id="43f123e2640b592a35b0b378a022d04a8ae4dfd9" translate="yes" xml:space="preserve">
          <source>AlgorithmParametersSpi.engineToString()</source>
          <target state="translated">AlgorithmParametersSpi.engineToString()</target>
        </trans-unit>
        <trans-unit id="747dd263fc2f85623d217cb46475b214a7e49c00" translate="yes" xml:space="preserve">
          <source>Algorithms (such as DSA, RSA, MD5 or SHA-1).</source>
          <target state="translated">알고리즘 (예 : DSA, RSA, MD5 또는 SHA-1).</target>
        </trans-unit>
        <trans-unit id="69b3692f2985aaa9706c325334a58ea1f2bea53c" translate="yes" xml:space="preserve">
          <source>Algorithms (such as DSA, RSA, or SHA-256).</source>
          <target state="translated">Algorithms (such as DSA, RSA, or SHA-256).</target>
        </trans-unit>
        <trans-unit id="57575357ee4d0f4dca77d6a6c615c0beac7b32a8" translate="yes" xml:space="preserve">
          <source>Align bar</source>
          <target state="translated">Align bar</target>
        </trans-unit>
        <trans-unit id="5b6f0b1837d9a6aa9dcd942c3ccc3a7efe9cea7b" translate="yes" xml:space="preserve">
          <source>Align images at the border.</source>
          <target state="translated">Align images at the border.</target>
        </trans-unit>
        <trans-unit id="360edb14c6458d596cafddf5c6fd472fdc01b8e4" translate="yes" xml:space="preserve">
          <source>Align images at the bottom.</source>
          <target state="translated">Align images at the bottom.</target>
        </trans-unit>
        <trans-unit id="8974f264222d68046ea39e25d04f223ee5e6d8c1" translate="yes" xml:space="preserve">
          <source>Align images at the top.</source>
          <target state="translated">Align images at the top.</target>
        </trans-unit>
        <trans-unit id="f661a5c7e7b55ceb271ca4ef3206688bf38f711d" translate="yes" xml:space="preserve">
          <source>Align images in the middle.</source>
          <target state="translated">Align images in the middle.</target>
        </trans-unit>
        <trans-unit id="21fb6e7d563e95407d8539e4a84c75034904a583" translate="yes" xml:space="preserve">
          <source>Align the rule on the page.</source>
          <target state="translated">페이지에서 규칙을 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="000d39bba374a93adeef9b95890830e1a87baf8d" translate="yes" xml:space="preserve">
          <source>Align the rule on the page. See the align attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">페이지에서 규칙을 맞 춥니 다. HTML 4.0의 align 속성 정의를 참조하십시오. 이 속성은 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7f8c5176c3f03b97659161923f2b6492f7de7e73" translate="yes" xml:space="preserve">
          <source>Alignment</source>
          <target state="translated">Alignment</target>
        </trans-unit>
        <trans-unit id="b2b6195a03e469ca4a62a4214c4acb9934507d2a" translate="yes" xml:space="preserve">
          <source>Alignment and access modes</source>
          <target state="translated">정렬 및 액세스 모드</target>
        </trans-unit>
        <trans-unit id="45a9cb34664a71289903fe12c831a00d4e7c047a" translate="yes" xml:space="preserve">
          <source>Alignment character for cells in a column.</source>
          <target state="translated">열의 셀에 대한 정렬 문자입니다.</target>
        </trans-unit>
        <trans-unit id="002195b0e1655e27c351f60c4cf4d2a9c5317aae" translate="yes" xml:space="preserve">
          <source>Alignment character for cells in a column. See the char attribute definition in HTML 4.0.</source>
          <target state="translated">열의 셀에 대한 정렬 문자입니다. HTML 4.0의 char 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="629d59f9b7845767f35ebeddada32378b08dc34a" translate="yes" xml:space="preserve">
          <source>Alignment for the paragraph.</source>
          <target state="translated">Alignment for the paragraph.</target>
        </trans-unit>
        <trans-unit id="91a0acd5785af4f6a15a5373e3a796dccd704b46" translate="yes" xml:space="preserve">
          <source>Alignment for the paragraph. The type is Integer. Valid values are:</source>
          <target state="translated">Alignment for the paragraph. The type is Integer. Valid values are:</target>
        </trans-unit>
        <trans-unit id="f1eb42a5c1858b1bd05833c54e966ac413d8d6c5" translate="yes" xml:space="preserve">
          <source>AlignmentAction</source>
          <target state="translated">AlignmentAction</target>
        </trans-unit>
        <trans-unit id="ffeab289379b443e9aed9e278c9bba7845574eab" translate="yes" xml:space="preserve">
          <source>Aligns bottom of graphic to bottom of line.</source>
          <target state="translated">Aligns bottom of graphic to bottom of line.</target>
        </trans-unit>
        <trans-unit id="801e4e3d22a8f977bf4bc93cccfa96476bc67378" translate="yes" xml:space="preserve">
          <source>Aligns origin of graphic to center baseline of line.</source>
          <target state="translated">Aligns origin of graphic to center baseline of line.</target>
        </trans-unit>
        <trans-unit id="0456a717f809aac1d6ba3b7c456d4a1c7a01466a" translate="yes" xml:space="preserve">
          <source>Aligns origin of graphic to hanging baseline of line.</source>
          <target state="translated">Aligns origin of graphic to hanging baseline of line.</target>
        </trans-unit>
        <trans-unit id="2a825e59d52980cc7c030b4492d949993fb459a8" translate="yes" xml:space="preserve">
          <source>Aligns origin of graphic to roman baseline of line.</source>
          <target state="translated">Aligns origin of graphic to roman baseline of line.</target>
        </trans-unit>
        <trans-unit id="5d7ec4331be6df4ae4038939b38158e296388bf8" translate="yes" xml:space="preserve">
          <source>Aligns this object (vertically or horizontally) with respect to its surrounding text.</source>
          <target state="translated">주변 텍스트를 기준으로이 개체 (세로 또는 가로)를 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="056ad09b86c2154a47bb5fb511a121a7f16c3742" translate="yes" xml:space="preserve">
          <source>Aligns this object (vertically or horizontally) with respect to its surrounding text. See the align attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">주변 텍스트를 기준으로이 개체 (세로 또는 가로)를 맞 춥니 다. HTML 4.0의 align 속성 정의를 참조하십시오. 이 속성은 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="753719f5e920c70a4a52f97c060da08fa756cfb9" translate="yes" xml:space="preserve">
          <source>Aligns top of graphic to top of line.</source>
          <target state="translated">Aligns top of graphic to top of line.</target>
        </trans-unit>
        <trans-unit id="6a72085653e4c5be8c7640c868ef787cbcf063d1" translate="yes" xml:space="preserve">
          <source>All</source>
          <target state="translated">All</target>
        </trans-unit>
        <trans-unit id="f2bf450671d09ee002270779776e29097321c774" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#intFlags&quot;&gt;flags&lt;/a&gt; defined for Byte, Short, Integer, and Long apply.</source>
          <target state="translated">Byte, Short, Integer 및 Long에 대해 정의 된 모든 &lt;a href=&quot;#intFlags&quot;&gt;플래그가&lt;/a&gt; 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="1771c3d834a0c2588eb5b846a29ba40bc160d013" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#intFlags&quot;&gt;flags&lt;/a&gt; defined for Byte, Short, Integer, and Long apply. The &lt;a href=&quot;#intdFlags&quot;&gt;default behavior&lt;/a&gt; when no flags are given is the same as for Byte, Short, Integer, and Long.</source>
          <target state="translated">Byte, Short, Integer 및 Long에 대해 정의 된 모든 &lt;a href=&quot;#intFlags&quot;&gt;플래그가&lt;/a&gt; 적용됩니다. 플래그가 제공되지 않을 때 의 &lt;a href=&quot;#intdFlags&quot;&gt;기본 동작&lt;/a&gt; 은 바이트, 쇼트, 정수 및 롱과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f7e396b73becc28e0e8b93e1202e1147515b6de4" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt; instances have a valid range of values. For example, the ISO day-of-month runs from 1 to somewhere between 28 and 31. This class captures that valid range.</source>
          <target state="translated">모든 &lt;a href=&quot;temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; &lt;/a&gt; 인스턴스는 유효한 값 범위를 갖습니다. 예를 들어, ISO 일수는 1에서 28과 31 사이입니다.이 클래스는 유효한 범위를 캡처합니다.</target>
        </trans-unit>
        <trans-unit id="e220b8185985db9a3512e9e2d638a0f9015a9e3f" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;&quot;.&quot;&lt;/code&gt; segments are removed.</source>
          <target state="translated">모든 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 세그먼트가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="1385e415938e8c44cccf96f3bc4658c8281937f6" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;.jar&lt;/code&gt; files in &lt;var&gt;archivelist&lt;/var&gt; must be stored in the directory specified by the code base URL.</source>
          <target state="translated">&lt;var&gt;archivelist&lt;/var&gt; 의 모든 &lt;code&gt;.jar&lt;/code&gt; 파일 은 코드 기본 URL로 지정된 디렉토리에 저장해야합니다.</target>
        </trans-unit>
        <trans-unit id="c9de8ab19dc971275c5bbabf7dfbc03c720a57ff" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;CertPath&lt;/code&gt; objects are also &lt;code&gt;Serializable&lt;/code&gt;. &lt;code&gt;CertPath&lt;/code&gt; objects are resolved into an alternate &lt;a href=&quot;certpath.certpathrep&quot;&gt;&lt;code&gt;CertPathRep&lt;/code&gt;&lt;/a&gt; object during serialization. This allows a &lt;code&gt;CertPath&lt;/code&gt; object to be serialized into an equivalent representation regardless of its underlying implementation.</source>
          <target state="translated">모든 &lt;code&gt;CertPath&lt;/code&gt; 객체도 &lt;code&gt;Serializable&lt;/code&gt; 합니다. &lt;code&gt;CertPath&lt;/code&gt; 객체는 직렬화 중에 대체 &lt;a href=&quot;certpath.certpathrep&quot;&gt; &lt;code&gt;CertPathRep&lt;/code&gt; &lt;/a&gt; 객체 로 해석됩니다 . 이것에 의해, &lt;code&gt;CertPath&lt;/code&gt; 객체는 그 기본 구현에 관계없이 동등한 표현으로 직렬화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a725c3ada7abe88c4e303e9d9ed90068d1425fa2" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;CertPath&lt;/code&gt; objects have a type, a list of &lt;code&gt;Certificate&lt;/code&gt;s, and one or more supported encodings. Because the &lt;code&gt;CertPath&lt;/code&gt; class is immutable, a &lt;code&gt;CertPath&lt;/code&gt; cannot change in any externally visible way after being constructed. This stipulation applies to all public fields and methods of this class and any added or overridden by subclasses.</source>
          <target state="translated">모든 &lt;code&gt;CertPath&lt;/code&gt; 객체에는 유형, &lt;code&gt;Certificate&lt;/code&gt; 목록 및 하나 이상의 지원되는 인코딩이 있습니다. 때문에 &lt;code&gt;CertPath&lt;/code&gt; 클래스는 불변하는 &lt;code&gt;CertPath&lt;/code&gt; 구성 후 임의의 외부에서 볼 수있는 방식으로 변경할 수 없다. 이 규정은이 클래스의 모든 퍼블릭 필드와 메소드 및 서브 클래스에 의해 추가되거나 재정의 된 모든 필드에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="dc77693eac872b4e8f541a6f414b945309c219f0" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;CertPath&lt;/code&gt; objects must be thread-safe. That is, multiple threads may concurrently invoke the methods defined in this class on a single &lt;code&gt;CertPath&lt;/code&gt; object (or more than one) with no ill effects. This is also true for the &lt;code&gt;List&lt;/code&gt; returned by &lt;code&gt;CertPath.getCertificates&lt;/code&gt;.</source>
          <target state="translated">모든 &lt;code&gt;CertPath&lt;/code&gt; 객체는 스레드로부터 안전해야합니다. 즉, 여러 스레드가 동시에이 클래스에 정의 된 메소드를 단일 &lt;code&gt;CertPath&lt;/code&gt; 객체 (또는 둘 이상) 에서 동시에 호출 할 수 있습니다 . &lt;code&gt;CertPath.getCertificates&lt;/code&gt; 에 의해 돌려 주어진 &lt;code&gt;List&lt;/code&gt; 도 마찬가지입니다 .</target>
        </trans-unit>
        <trans-unit id="574e52e13c433a6abe838cb47f1e58e1fc37a246" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;ComponentUIs&lt;/code&gt; typically need to set various properties on the &lt;code&gt;JComponent&lt;/code&gt; the &lt;code&gt;ComponentUI&lt;/code&gt; is providing the look and feel for. This is typically done when the &lt;code&gt;
 ComponentUI&lt;/code&gt; is installed on the &lt;code&gt;JComponent&lt;/code&gt;. Setting a property should only be done if the developer has not set the property. For non-primitive values it is recommended that the &lt;code&gt;ComponentUI&lt;/code&gt; only change the property on the &lt;code&gt;
 JComponent&lt;/code&gt; if the current value is &lt;code&gt;null&lt;/code&gt; or implements &lt;code&gt;UIResource&lt;/code&gt;. If the current value is &lt;code&gt;null&lt;/code&gt; or implements &lt;code&gt;UIResource&lt;/code&gt; it indicates the property has not been set by the developer, and the ui is free to change it. For example, &lt;code&gt;BasicButtonUI.installDefaults&lt;/code&gt; only changes the font on the &lt;code&gt;JButton&lt;/code&gt; if the return value from &lt;code&gt;
 button.getFont()&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or implements &lt;code&gt;
 UIResource&lt;/code&gt;. On the other hand if &lt;code&gt;button.getFont()&lt;/code&gt; returned a &lt;code&gt;non-null&lt;/code&gt; value that did not implement &lt;code&gt;UIResource&lt;/code&gt; then &lt;code&gt;BasicButtonUI.installDefaults&lt;/code&gt; would not change the &lt;code&gt;JButton&lt;/code&gt;'s font.</source>
          <target state="translated">All &lt;code&gt;ComponentUIs&lt;/code&gt; typically need to set various properties on the &lt;code&gt;JComponent&lt;/code&gt; the &lt;code&gt;ComponentUI&lt;/code&gt; is providing the look and feel for. This is typically done when the &lt;code&gt; ComponentUI&lt;/code&gt; is installed on the &lt;code&gt;JComponent&lt;/code&gt; . Setting a property should only be done if the developer has not set the property. For non-primitive values it is recommended that the &lt;code&gt;ComponentUI&lt;/code&gt; only change the property on the &lt;code&gt; JComponent&lt;/code&gt; if the current value is &lt;code&gt;null&lt;/code&gt; or implements &lt;code&gt;UIResource&lt;/code&gt; . If the current value is &lt;code&gt;null&lt;/code&gt; or implements &lt;code&gt;UIResource&lt;/code&gt; it indicates the property has not been set by the developer, and the ui is free to change it. For example, &lt;code&gt;BasicButtonUI.installDefaults&lt;/code&gt; only changes the font on the &lt;code&gt;JButton&lt;/code&gt; if the return value from &lt;code&gt; button.getFont()&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or implements &lt;code&gt; UIResource&lt;/code&gt; . On the other hand if &lt;code&gt;button.getFont()&lt;/code&gt; returned a &lt;code&gt;non-null&lt;/code&gt; value that did not implement &lt;code&gt;UIResource&lt;/code&gt; then &lt;code&gt;BasicButtonUI.installDefaults&lt;/code&gt; would not change the &lt;code&gt;JButton&lt;/code&gt; 's font.</target>
        </trans-unit>
        <trans-unit id="9f34622b7b192fad4895323e6b1695cdf77b5012" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;GridLayout&lt;/code&gt; constructors defer to this one.</source>
          <target state="translated">All &lt;code&gt;GridLayout&lt;/code&gt; constructors defer to this one.</target>
        </trans-unit>
        <trans-unit id="90a6dea21528cff7652cc210008c12bedecd0817" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;JMenuItem&lt;/code&gt; subclasses, with the exception of &lt;code&gt;JMenu&lt;/code&gt;.</source>
          <target state="translated">All &lt;code&gt;JMenuItem&lt;/code&gt; subclasses, with the exception of &lt;code&gt;JMenu&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41dad6d8f3332a2a50761f6a507d5d64cfc22ccd" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Lock&lt;/code&gt; implementations &lt;em&gt;must&lt;/em&gt; enforce the same memory synchronization semantics as provided by the built-in monitor lock, as described in &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.4&quot;&gt; The Java Language Specification (17.4 Memory Model)&lt;/a&gt;:</source>
          <target state="translated">모든 &lt;code&gt;Lock&lt;/code&gt; 구현 &lt;em&gt;은 &lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.4&quot;&gt;Java 언어 사양 (17.4 메모리 모델)에&lt;/a&gt; 설명 된대로 내장 모니터 잠금에서 제공 한 것과 동일한 메모리 동기화 시맨틱을 적용 &lt;em&gt;해야합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="d717b6e93cbcf25e82e70f91261b5c37af493e07" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Lock&lt;/code&gt; implementations &lt;em&gt;must&lt;/em&gt; enforce the same memory synchronization semantics as provided by the built-in monitor lock, as described in &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-17.html#jls-17.4&quot;&gt; Chapter 17 of &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;&lt;/a&gt;:</source>
          <target state="translated">All &lt;code&gt;Lock&lt;/code&gt; implementations &lt;em&gt;must&lt;/em&gt; enforce the same memory synchronization semantics as provided by the built-in monitor lock, as described in &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-17.html#jls-17.4&quot;&gt; Chapter 17 of &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="c08bd288a258940c1cd57ddce610c4afd971e981" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Lock&lt;/code&gt; implementations &lt;em&gt;must&lt;/em&gt; enforce the same memory synchronization semantics as provided by the built-in monitor lock, as described in Chapter 17 of</source>
          <target state="translated">모든 &lt;code&gt;Lock&lt;/code&gt; 구현 &lt;em&gt;은&lt;/em&gt; 17 장에 설명 된대로 기본 제공 모니터 잠금에서 제공하는 것과 동일한 메모리 동기화 의미를 적용 &lt;em&gt;해야합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="44be636bc3ec5aa6c5b4fbff9a61ce2a0c343675" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Map.Entry&lt;/code&gt; pairs returned by methods in this class and its views represent snapshots of mappings at the time they were produced. They do &lt;em&gt;not&lt;/em&gt; support the &lt;code&gt;Entry.setValue&lt;/code&gt; method. (Note however that it is possible to change mappings in the associated map using &lt;code&gt;put&lt;/code&gt;, &lt;code&gt;putIfAbsent&lt;/code&gt;, or &lt;code&gt;replace&lt;/code&gt;, depending on exactly which effect you need.)</source>
          <target state="translated">이 클래스의 메서드에서 반환 된 모든 &lt;code&gt;Map.Entry&lt;/code&gt; 쌍과 해당 뷰는 생성 당시 매핑의 스냅 샷을 나타냅니다. &lt;code&gt;Entry.setValue&lt;/code&gt; 메소드를 지원 하지 &lt;em&gt;않습니다&lt;/em&gt; . (단 , 필요한 효과에 따라 &lt;code&gt;put&lt;/code&gt; , &lt;code&gt;putIfAbsent&lt;/code&gt; 또는 &lt;code&gt;replace&lt;/code&gt; 를 사용하여 연관된 맵에서 매핑을 변경할 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="68284d0a5ff6c85614eced6cecf11c39abfffb2b" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Map.Entry&lt;/code&gt; pairs returned by methods in this class and its views represent snapshots of mappings at the time they were produced. They do &lt;strong&gt;not&lt;/strong&gt; support the &lt;code&gt;Entry.setValue&lt;/code&gt; method. (Note however that it is possible to change mappings in the associated map using &lt;code&gt;put&lt;/code&gt;.)</source>
          <target state="translated">이 클래스의 메서드에서 반환 된 모든 &lt;code&gt;Map.Entry&lt;/code&gt; 쌍과 해당 뷰는 생성 당시 매핑의 스냅 샷을 나타냅니다. &lt;code&gt;Entry.setValue&lt;/code&gt; 메소드를 지원 하지 &lt;strong&gt;않습니다&lt;/strong&gt; . 그러나 &lt;code&gt;put&lt;/code&gt; 을 사용하여 연관된 맵에서 맵핑을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="68926be59fcf50e6ecad024d27ae4ed3547baa84" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;PKIXCertPathBuilderResult&lt;/code&gt; objects contain the certification path constructed by the build algorithm, the valid policy tree and subject public key resulting from the build algorithm, and a &lt;code&gt;TrustAnchor&lt;/code&gt; describing the certification authority (CA) that served as a trust anchor for the certification path.</source>
          <target state="translated">모든 &lt;code&gt;PKIXCertPathBuilderResult&lt;/code&gt; 객체에는 빌드 알고리즘으로 구성된 인증 경로, 유효한 정책 트리 및 빌드 알고리즘으로 인한 주체 공개 키 및 인증 경로의 트러스트 앵커 역할을하는 인증 기관 (CA)을 설명 하는 &lt;code&gt;TrustAnchor&lt;/code&gt; 가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="8721ca15b265ab12cbee59a2ca470cd0729611fc" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;PKIXCertPathValidatorResult&lt;/code&gt; objects contain the valid policy tree and subject public key resulting from the validation algorithm, as well as a &lt;code&gt;TrustAnchor&lt;/code&gt; describing the certification authority (CA) that served as a trust anchor for the certification path.</source>
          <target state="translated">모든 &lt;code&gt;PKIXCertPathValidatorResult&lt;/code&gt; 개체에는 유효성 검사 알고리즘의 결과 인 유효한 정책 트리 및 주체 공개 키와 인증 경로의 신뢰 앵커 역할을하는 인증 기관 (CA)을 설명 하는 &lt;code&gt;TrustAnchor&lt;/code&gt; 가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="55e0f24300055bbce9894f55acf8c777578d823e" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;PolicyNode&lt;/code&gt; objects must be immutable and thread-safe. Multiple threads may concurrently invoke the methods defined in this class on a single &lt;code&gt;PolicyNode&lt;/code&gt; object (or more than one) with no ill effects. This stipulation applies to all public fields and methods of this class and any added or overridden by subclasses.</source>
          <target state="translated">모든 &lt;code&gt;PolicyNode&lt;/code&gt; 개체는 변경 불가능하고 스레드로부터 안전해야합니다. 여러 스레드가 &lt;code&gt;PolicyNode&lt;/code&gt; 클래스에 정의 된 메소드를 단일 PolicyNode 오브젝트 (또는 둘 이상) 에서 동시에 호출 할 수 있습니다 . 이 규정은이 클래스의 모든 퍼블릭 필드와 메소드 및 서브 클래스에 의해 추가되거나 재정의 된 모든 필드에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="b3dfef94eadb0f88de4cb1a52ce8b0f0a6cde2e1" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;PolicyQualifierInfo&lt;/code&gt; objects must be immutable and thread-safe. That is, multiple threads may concurrently invoke the methods defined in this class on a single &lt;code&gt;PolicyQualifierInfo&lt;/code&gt; object (or more than one) with no ill effects. Requiring &lt;code&gt;PolicyQualifierInfo&lt;/code&gt; objects to be immutable and thread-safe allows them to be passed around to various pieces of code without worrying about coordinating access.</source>
          <target state="translated">모든 &lt;code&gt;PolicyQualifierInfo&lt;/code&gt; 개체는 변경 불가능하고 스레드로부터 안전해야합니다. 즉, 여러 스레드가 &lt;code&gt;PolicyQualifierInfo&lt;/code&gt; 클래스에 정의 된 메소드를 단일 PolicyQualifierInfo 오브젝트 (또는 둘 이상)에 대해 아무런 영향없이 호출 할 수 있습니다 . &lt;code&gt;PolicyQualifierInfo&lt;/code&gt; 객체를 변경할 수없고 스레드로부터 안전 하도록 요구 하면 액세스 조정에 대한 걱정없이 다양한 코드로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf3ffc68db35628f6e195a8ff29d238e67820ec5" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;ReadWriteLock&lt;/code&gt; implementations must guarantee that the memory synchronization effects of &lt;code&gt;writeLock&lt;/code&gt; operations (as specified in the &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; interface) also hold with respect to the associated &lt;code&gt;readLock&lt;/code&gt;. That is, a thread successfully acquiring the read lock will see all updates made upon previous release of the write lock.</source>
          <target state="translated">모든 &lt;code&gt;ReadWriteLock&lt;/code&gt; 구현은 ( &lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된) &lt;code&gt;writeLock&lt;/code&gt; 조작 의 메모리 동기화 효과 도 연관된 &lt;code&gt;readLock&lt;/code&gt; 과 관련하여 유지되도록해야합니다 . 즉, 읽기 잠금을 성공적으로 획득 한 스레드는 쓰기 잠금의 이전 릴리스에서 작성된 모든 업데이트를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cc43aaae9c87237058ca44ada1e2f3b304d9b0a" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Receiver&lt;/code&gt; and &lt;code&gt;Transmitter&lt;/code&gt; instances open from this device are closed. This includes instances retrieved via &lt;code&gt;MidiSystem&lt;/code&gt;.</source>
          <target state="translated">이 장치에서 열린 모든 &lt;code&gt;Receiver&lt;/code&gt; 및 &lt;code&gt;Transmitter&lt;/code&gt; 인스턴스가 닫힙니다. 여기에는 &lt;code&gt;MidiSystem&lt;/code&gt; 을 통해 검색된 인스턴스가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="93a967e4e512dee9710009309882511a40ec8efd" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt;s are ignored in named modules.</source>
          <target state="translated">All &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt; s are ignored in named modules.</target>
        </trans-unit>
        <trans-unit id="b162d587ded0d9d4582a1e42333d2897886d9955" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;RowSet&lt;/code&gt; implementations &lt;strong&gt;must&lt;/strong&gt; provide a no-argument constructor.</source>
          <target state="translated">All &lt;code&gt;RowSet&lt;/code&gt; implementations &lt;strong&gt;must&lt;/strong&gt; provide a no-argument constructor.</target>
        </trans-unit>
        <trans-unit id="3c02ae95a0217ec51c41243b7863a482de084c15" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;StackFrame&lt;/code&gt; objects for this thread are invalidated.</source>
          <target state="translated">이 스레드에 대한 모든 &lt;code&gt;StackFrame&lt;/code&gt; 개체가 무효화됩니다.</target>
        </trans-unit>
        <trans-unit id="9659b2d04503a34866969b5bcc4384b8c2c5b3a4" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;TrustAnchor&lt;/code&gt; objects must be immutable and thread-safe. That is, multiple threads may concurrently invoke the methods defined in this class on a single &lt;code&gt;TrustAnchor&lt;/code&gt; object (or more than one) with no ill effects. Requiring &lt;code&gt;TrustAnchor&lt;/code&gt; objects to be immutable and thread-safe allows them to be passed around to various pieces of code without worrying about coordinating access. This stipulation applies to all public fields and methods of this class and any added or overridden by subclasses.</source>
          <target state="translated">모든 &lt;code&gt;TrustAnchor&lt;/code&gt; 오브젝트는 변경 불가능하고 스레드로부터 안전해야합니다. 즉, 여러 스레드가 &lt;code&gt;TrustAnchor&lt;/code&gt; 클래스에 정의 된 메소드를 단일 TrustAnchor 오브젝트 (또는 둘 이상)에 대해 아무런 영향없이 호출 할 수 있습니다 . 요구하는 &lt;code&gt;TrustAnchor&lt;/code&gt; 불변으로 thread에 대해서 안전하지 않으면 사물은 그들에게 액세스의 조정을 의식하는 일없이, 다양한 코드에 건네 줄 수가 있습니다. 이 규정은이 클래스의 모든 퍼블릭 필드와 메소드 및 서브 클래스에 의해 추가되거나 재정의 된 모든 필드에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="44766937c09b77c130247a07f6d687f8e35d4a2a" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;get*(*)&lt;/code&gt; methods operate in the current scope for Namespace URI and prefix resolution.</source>
          <target state="translated">All &lt;code&gt;get*(*)&lt;/code&gt; methods operate in the current scope for Namespace URI and prefix resolution.</target>
        </trans-unit>
        <trans-unit id="cd0aa2c1da85461c43d97ec7d68d651e4bea8bb6" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;input.remaining()&lt;/code&gt; bytes starting at &lt;code&gt;input.position()&lt;/code&gt; are processed. If an AEAD mode such as GCM/CCM is being used, the authentication tag is appended in the case of encryption, or verified in the case of decryption. The result is stored in the output buffer. Upon return, the input buffer's position will be equal to its limit; its limit will not have changed. The output buffer's position will have advanced by n, where n is the value returned by this method; the output buffer's limit will not have changed.</source>
          <target state="translated">모든 &lt;code&gt;input.remaining()&lt;/code&gt; 에서 시작하여 바이트 &lt;code&gt;input.position()&lt;/code&gt; 처리된다. GCM / CCM과 같은 AEAD 모드를 사용하는 경우 암호화의 경우 인증 태그가 추가되거나 암호 해독의 경우 확인됩니다. 결과는 출력 버퍼에 저장됩니다. 복귀시, 입력 버퍼의 위치는 한계와 같습니다. 한도는 변경되지 않았습니다. 출력 버퍼의 위치는 n만큼 증가합니다. 여기서 n은이 방법으로 반환 된 값입니다. 출력 버퍼의 한계는 변경되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="326222c23a5fb054de4a234a3333ed1e170e11d3" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;input.remaining()&lt;/code&gt; bytes starting at &lt;code&gt;input.position()&lt;/code&gt; are processed. The result is stored in the output buffer. Upon return, the input buffer's position will be equal to its limit; its limit will not have changed. The output buffer's position will have advanced by n, where n is the value returned by this method; the output buffer's limit will not have changed.</source>
          <target state="translated">모든 &lt;code&gt;input.remaining()&lt;/code&gt; 에서 시작하여 바이트 &lt;code&gt;input.position()&lt;/code&gt; 처리된다. 결과는 출력 버퍼에 저장됩니다. 복귀시, 입력 버퍼의 위치는 한계와 같습니다. 한도는 변경되지 않았습니다. 출력 버퍼의 위치는 n만큼 증가합니다. 여기서 n은이 방법으로 반환 된 값입니다. 출력 버퍼의 한계는 변경되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="e39ea1c0e93b69487048c16a07508821db8885b4" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;null&lt;/code&gt; paths in &lt;code&gt;pPaths&lt;/code&gt; are ignored.</source>
          <target state="translated">All &lt;code&gt;null&lt;/code&gt; paths in &lt;code&gt;pPaths&lt;/code&gt; are ignored.</target>
        </trans-unit>
        <trans-unit id="2ef4dcb11b7d6fd436a05f78c6131f66544e4b29" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;schedule&lt;/code&gt; methods accept &lt;em&gt;relative&lt;/em&gt; delays and periods as arguments, not absolute times or dates. It is a simple matter to transform an absolute time represented as a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; to the required form. For example, to schedule at a certain future &lt;code&gt;date&lt;/code&gt;, you can use: &lt;code&gt;schedule(task,
 date.getTime() - System.currentTimeMillis(),
 TimeUnit.MILLISECONDS)&lt;/code&gt;. Beware however that expiration of a relative delay need not coincide with the current &lt;code&gt;Date&lt;/code&gt; at which the task is enabled due to network time synchronization protocols, clock drift, or other factors.</source>
          <target state="translated">모든 &lt;code&gt;schedule&lt;/code&gt; 방법은 절대 시간이나 날짜가 아니라 &lt;em&gt;상대&lt;/em&gt; 지연 및 기간을 인수로 허용 합니다. &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 로 표시된 절대 시간 을 필요한 형식 으로 변환하는 것은 간단한 일 입니다. 예를 들어, 특정 미래 &lt;code&gt;date&lt;/code&gt; 를 예약 하려면 &lt;code&gt;schedule(task, date.getTime() - System.currentTimeMillis(), TimeUnit.MILLISECONDS)&lt;/code&gt; 있습니다. 그러나 상대 지연의 만료는 네트워크 시간 동기화 프로토콜, 클럭 드리프트 또는 기타 요인으로 인해 작업이 활성화 된 현재 &lt;code&gt;Date&lt;/code&gt; 와 일치하지 않아도 됩니다.</target>
        </trans-unit>
        <trans-unit id="264a56d62aa5d634b6acceac251bd3490c0dad3d" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;src.remaining()&lt;/code&gt; bytes starting at &lt;code&gt;src.position()&lt;/code&gt; are processed. Upon return, the input buffer's position will be equal to its limit; its limit will not have changed.</source>
          <target state="translated">모든 &lt;code&gt;src.remaining()&lt;/code&gt; &lt;code&gt;src.position()&lt;/code&gt; 에서 시작하는 바이트 가 처리됩니다. 돌아 왔을 때, 입력 버퍼의 위치는 그 한계와 같습니다. 한도는 변경되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="0aee162c84f6772a5363c3d5288603b18489dbae" translate="yes" xml:space="preserve">
          <source>All &lt;em&gt;async&lt;/em&gt; methods without an explicit Executor argument are performed using the &lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt; (unless it does not support a parallelism level of at least two, in which case, a new Thread is created to run each task). This may be overridden for non-static methods in subclasses by defining method &lt;a href=&quot;#defaultExecutor()&quot;&gt;&lt;code&gt;defaultExecutor()&lt;/code&gt;&lt;/a&gt;. To simplify monitoring, debugging, and tracking, all generated asynchronous tasks are instances of the marker interface &lt;a href=&quot;completablefuture.asynchronouscompletiontask&quot;&gt;&lt;code&gt;CompletableFuture.AsynchronousCompletionTask&lt;/code&gt;&lt;/a&gt;. Operations with time-delays can use adapter methods defined in this class, for example: &lt;code&gt;supplyAsync(supplier, delayedExecutor(timeout,
 timeUnit))&lt;/code&gt;. To support methods with delays and timeouts, this class maintains at most one daemon thread for triggering and cancelling actions, not for running them.</source>
          <target state="translated">All &lt;em&gt;async&lt;/em&gt; methods without an explicit Executor argument are performed using the &lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt; (unless it does not support a parallelism level of at least two, in which case, a new Thread is created to run each task). This may be overridden for non-static methods in subclasses by defining method &lt;a href=&quot;#defaultExecutor()&quot;&gt; &lt;code&gt;defaultExecutor()&lt;/code&gt; &lt;/a&gt;. To simplify monitoring, debugging, and tracking, all generated asynchronous tasks are instances of the marker interface &lt;a href=&quot;completablefuture.asynchronouscompletiontask&quot;&gt; &lt;code&gt;CompletableFuture.AsynchronousCompletionTask&lt;/code&gt; &lt;/a&gt;. Operations with time-delays can use adapter methods defined in this class, for example: &lt;code&gt;supplyAsync(supplier, delayedExecutor(timeout, timeUnit))&lt;/code&gt; . To support methods with delays and timeouts, this class maintains at most one daemon thread for triggering and cancelling actions, not for running them.</target>
        </trans-unit>
        <trans-unit id="bf8d8ac436d816f6caf5989f4d4f4942f8649360" translate="yes" xml:space="preserve">
          <source>All &lt;em&gt;async&lt;/em&gt; methods without an explicit Executor argument are performed using the &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt; (unless it does not support a parallelism level of at least two, in which case, a new Thread is created to run each task). To simplify monitoring, debugging, and tracking, all generated asynchronous tasks are instances of the marker interface &lt;a href=&quot;completablefuture.asynchronouscompletiontask&quot;&gt;&lt;code&gt;CompletableFuture.AsynchronousCompletionTask&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">명시 적 Executor 인수가없는 모든 &lt;em&gt;비동기&lt;/em&gt; 메소드는 &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt; 사용하여 수행됩니다 ( 2 개 이상의 병렬 처리 레벨을 지원하지 않는 경우 각 태스크를 실행하기 위해 새 스레드가 작성 됨). 모니터링, 디버깅 및 추적을 단순화하기 위해 생성 된 모든 비동기 작업은 마커 인터페이스의 인스턴스입니다.&lt;a href=&quot;completablefuture.asynchronouscompletiontask&quot;&gt; &lt;code&gt;CompletableFuture.AsynchronousCompletionTask&lt;/code&gt; 의&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="97a9d91b0eb23083826f2d2dae8a3823b1dfffeb" translate="yes" xml:space="preserve">
          <source>All ASCII:&lt;code&gt;[\x00-\x7F]&lt;/code&gt;</source>
          <target state="translated">모든 ASCII : &lt;code&gt;[\x00-\x7F]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28555e0c584772728132c507f9fc479ebede1cb2" translate="yes" xml:space="preserve">
          <source>All CardTerminals.</source>
          <target state="translated">All CardTerminals.</target>
        </trans-unit>
        <trans-unit id="2fb452c940c69e815f8e1b3c17b2efa122b58022" translate="yes" xml:space="preserve">
          <source>All CompletionStage methods are implemented independently of other public methods, so the behavior of one method is not impacted by overrides of others in subclasses.</source>
          <target state="translated">모든 CompletionStage 메소드는 다른 공용 메소드와 독립적으로 구현되므로 한 메소드의 동작은 서브 클래스에서 다른 메소드의 대체에 의해 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b88346c6875568e69f27908f8db981f823a6246b" translate="yes" xml:space="preserve">
          <source>All CompletionStage methods return CompletableFutures. To restrict usages to only those methods defined in interface CompletionStage, use method &lt;a href=&quot;#minimalCompletionStage()&quot;&gt;&lt;code&gt;minimalCompletionStage()&lt;/code&gt;&lt;/a&gt;. Or to ensure only that clients do not themselves modify a future, use method &lt;a href=&quot;#copy()&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">All CompletionStage methods return CompletableFutures. To restrict usages to only those methods defined in interface CompletionStage, use method &lt;a href=&quot;#minimalCompletionStage()&quot;&gt; &lt;code&gt;minimalCompletionStage()&lt;/code&gt; &lt;/a&gt;. Or to ensure only that clients do not themselves modify a future, use method &lt;a href=&quot;#copy()&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f22cf8158dafbb9cf52279bf6954979989f8a3e5" translate="yes" xml:space="preserve">
          <source>All Events are constructed with a reference to the object, the &quot;source&quot;, that is logically deemed to be the object upon which the Event in question initially occurred upon.</source>
          <target state="translated">모든 이벤트는 &quot;소스&quot;라는 객체를 참조하여 구성되며, 해당 이벤트는 처음에 해당 이벤트가 발생한 객체로 논리적으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="a079d8b5f461538dec4185a6034c6f3f89fcbde4" translate="yes" xml:space="preserve">
          <source>All HTML element interfaces derive from this class.</source>
          <target state="translated">모든 HTML 요소 인터페이스는이 클래스에서 파생됩니다.</target>
        </trans-unit>
        <trans-unit id="9090c1830d8a168d1cd002c4fa2b0baedc2d853d" translate="yes" xml:space="preserve">
          <source>All HTML element interfaces derive from this class. Elements that only expose the HTML core attributes are represented by the base &lt;code&gt;HTMLElement&lt;/code&gt; interface. These elements are as follows: HEAD special: SUB, SUP, SPAN, BDO font: TT, I, B, U, S, STRIKE, BIG, SMALL phrase: EM, STRONG, DFN, CODE, SAMP, KBD, VAR, CITE, ACRONYM, ABBR list: DD, DT NOFRAMES, NOSCRIPT ADDRESS, CENTER The &lt;code&gt;style&lt;/code&gt; attribute of an HTML element is accessible through the &lt;code&gt;ElementCSSInlineStyle&lt;/code&gt; interface which is defined in the .</source>
          <target state="translated">모든 HTML 요소 인터페이스는이 클래스에서 파생됩니다. HTML 핵심 속성 만 노출하는 요소는 기본 &lt;code&gt;HTMLElement&lt;/code&gt; 인터페이스 로 표시됩니다 . 이러한 요소는 다음과 같습니다. HEAD 특수 : SUB, SUP, SPAN, BDO 글꼴 : TT, I, B, U, S, STRIKE, BIG, SMALL 구문 : EM, STRONG, DFN, CODE, SAMP, KBD, VAR, CITE , ACRONYM, ABBR 목록 : DD는, DT NOFRAMES, NOSCRIPT 주소, 센터의 &lt;code&gt;style&lt;/code&gt; HTML 요소의 속성은 통해 액세스 할 수 &lt;code&gt;ElementCSSInlineStyle&lt;/code&gt; 의 에 정의되어 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8488877b006c4252706248bd660893ff0c76fa4d" translate="yes" xml:space="preserve">
          <source>All Identity objects have a name and a public key. Names are immutable. Identities may also be scoped. That is, if an Identity is specified to have a particular scope, then the name and public key of the Identity are unique within that scope.</source>
          <target state="translated">모든 Identity 객체에는 이름과 공개 키가 있습니다. 이름은 변경할 수 없습니다. 신원의 범위도 다를 수 있습니다. 즉, Identity가 특정 범위를 갖도록 지정된 경우 Identity의 이름과 공개 키는 해당 범위 내에서 고유합니다.</target>
        </trans-unit>
        <trans-unit id="6064b3f66c3297a431bfc5978ef8cf6299e04c2c" translate="yes" xml:space="preserve">
          <source>All Implemented Interfaces:</source>
          <target state="translated">구현 된 모든 인터페이스 :</target>
        </trans-unit>
        <trans-unit id="0eda129963eebf6e815a99b11a7b370f9f7416bc" translate="yes" xml:space="preserve">
          <source>All Kerberos JAAS login modules that authenticate a user to a KDC should use this class. Where available, the login module might even read this information from a ticket cache in the operating system instead of directly communicating with the KDC. During the commit phase of the JAAS authentication process, the JAAS login module should instantiate this class and store the instance in the private credential set of a &lt;a href=&quot;../../../../../java.base/javax/security/auth/subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자를 KDC에 인증하는 모든 Kerberos JAAS 로그인 모듈은이 클래스를 사용해야합니다. 가능한 경우 로그인 모듈은 KDC와 직접 통신하는 대신 운영 체제의 티켓 캐시에서이 정보를 읽을 수도 있습니다. JAAS 인증 프로세스의 커밋 단계에서 JAAS 로그인 모듈은이 클래스를 인스턴스화하고 &lt;a href=&quot;../../../../../java.base/javax/security/auth/subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt; 의 개인 자격 증명 집합에 인스턴스를 저장해야합니다 .</target>
        </trans-unit>
        <trans-unit id="35a4949e884de3ba9f88753ed46c753f393b7df8" translate="yes" xml:space="preserve">
          <source>All Kerberos JAAS login modules that authenticate a user to a KDC should use this class. Where available, the login module might even read this information from a ticket cache in the operating system instead of directly communicating with the KDC. During the commit phase of the JAAS authentication process, the JAAS login module should instantiate this class and store the instance in the private credential set of a &lt;a href=&quot;../subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">KDC에 대한 사용자를 인증하는 모든 Kerberos JAAS 로그인 모듈은이 클래스를 사용해야합니다. 가능한 경우 로그인 모듈은 KDC와 직접 통신하는 대신 운영 체제의 티켓 캐시에서이 정보를 읽을 수도 있습니다. JAAS 인증 프로세스의 커미트 단계 동안 JAAS 로그인 모듈은이 클래스를 인스턴스화하고 인스턴스를 &lt;a href=&quot;../subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt; 의 개인 신임 정보 세트에 저장해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d04de703e0652969986a05ab503ef648a55e7a67" translate="yes" xml:space="preserve">
          <source>All Kerberos JAAS login modules that obtain a principal's password and generate the secret key from it should use this class. Sometimes, such as when authenticating a server in the absence of user-to-user authentication, the login module will store an instance of this class in the private credential set of a &lt;a href=&quot;../../../../../java.base/javax/security/auth/subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt; during the commit phase of the authentication process.</source>
          <target state="translated">프린시 펄의 비밀번호를 얻고 여기에서 비밀 키를 생성하는 모든 Kerberos JAAS 로그인 모듈은이 클래스를 사용해야합니다. 사용자 대 사용자 인증이없는 상태에서 서버를 인증 할 때와 같이 로그인 모듈은 인증 프로세스의 커밋 단계 동안 &lt;a href=&quot;../../../../../java.base/javax/security/auth/subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt; 의 개인 자격 증명 집합에이 클래스의 인스턴스를 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="7b93b063cfc6ca9d2b2192950d6f06f92c6aa6f9" translate="yes" xml:space="preserve">
          <source>All Kerberos JAAS login modules that obtain a principal's password and generate the secret key from it should use this class. Sometimes, such as when authenticating a server in the absence of user-to-user authentication, the login module will store an instance of this class in the private credential set of a &lt;a href=&quot;../subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt; during the commit phase of the authentication process.</source>
          <target state="translated">프린시 펄의 암호를 확보하고 비밀 키를 생성하는 모든 Kerberos JAAS 로그인 모듈은이 클래스를 사용해야합니다. 때때로 사용자 간 인증이없는 상태에서 서버를 인증 할 때와 같이 로그인 모듈은이 클래스의 인스턴스를 &lt;a href=&quot;../subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt; 의 개인 자격 증명 세트에 저장합니다. 인증 프로세스의 커밋 단계 동안 .</target>
        </trans-unit>
        <trans-unit id="9957fd819223c055412379a855818facb9ff8d4c" translate="yes" xml:space="preserve">
          <source>All Known Implementing Classes:</source>
          <target state="translated">알려진 모든 구현 클래스 :</target>
        </trans-unit>
        <trans-unit id="59c4df19306307d346212af08eef032cc77f89df" translate="yes" xml:space="preserve">
          <source>All Known Subinterfaces:</source>
          <target state="translated">알려진 모든 하위 인터페이스 :</target>
        </trans-unit>
        <trans-unit id="9066ceb6efd65398a656e7ea2de779f3bb718d09" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(1);&quot;&gt;Static Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(2);&quot;&gt;Instance Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;Abstract Methods&lt;/a&gt;</source>
          <target state="translated">모든 메서드 &lt;a href=&quot;javascript:show(1);&quot;&gt;정적 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(2);&quot;&gt;인스턴스 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;추상 메서드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7710d44a1951181d6c2fbd0b0e6b44146f3c49cc" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(1);&quot;&gt;Static Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(2);&quot;&gt;Instance Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;Abstract Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(16);&quot;&gt;Default Methods&lt;/a&gt;</source>
          <target state="translated">모든 메서드 &lt;a href=&quot;javascript:show(1);&quot;&gt;정적 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(2);&quot;&gt;인스턴스 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;추상 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(16);&quot;&gt;기본 메서드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecc5cc8d1df4f1659fcde8abbf0d560c4dda00f2" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(1);&quot;&gt;Static Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(2);&quot;&gt;Instance Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;Abstract Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;Concrete Methods&lt;/a&gt;</source>
          <target state="translated">모든 메서드 &lt;a href=&quot;javascript:show(1);&quot;&gt;정적 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(2);&quot;&gt;인스턴스 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;추상 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;구체적인 메서드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e08ef3d086b6b73601b0184bf43ac60fa284330" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(1);&quot;&gt;Static Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(2);&quot;&gt;Instance Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;Abstract Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;Concrete Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(32);&quot;&gt;Deprecated Methods&lt;/a&gt;</source>
          <target state="translated">모든 메서드 &lt;a href=&quot;javascript:show(1);&quot;&gt;정적 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(2);&quot;&gt;인스턴스 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;추상 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;구체적인 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(32);&quot;&gt;사용되지 않는 메서드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37ec0f9972e151747b0efae10114009d945dcc17" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(1);&quot;&gt;Static Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(2);&quot;&gt;Instance Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;Concrete Methods&lt;/a&gt;</source>
          <target state="translated">모든 방법 &lt;a href=&quot;javascript:show(1);&quot;&gt;정적 방법 &lt;/a&gt;&lt;a href=&quot;javascript:show(2);&quot;&gt;인스턴스 방법 &lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;구체적인 방법&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70995764f7e0d3230f18eb2d7672b8e011ec395f" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(1);&quot;&gt;Static Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(2);&quot;&gt;Instance Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;Concrete Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(32);&quot;&gt;Deprecated Methods&lt;/a&gt;</source>
          <target state="translated">모든 메서드 &lt;a href=&quot;javascript:show(1);&quot;&gt;정적 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(2);&quot;&gt;인스턴스 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;구체적인 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(32);&quot;&gt;사용되지 않는 메서드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e47e3e585b7d78f838637fb91ac5db9c7fb700d6" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(1);&quot;&gt;Static Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;Concrete Methods&lt;/a&gt;</source>
          <target state="translated">모든 방법 &lt;a href=&quot;javascript:show(1);&quot;&gt;정적 방법 &lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;구체적인 방법&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7971eec8d6968b72dd2ba000351bb2c6c1230b5" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(1);&quot;&gt;Static Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;Concrete Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(32);&quot;&gt;Deprecated Methods&lt;/a&gt;</source>
          <target state="translated">모든 방법 &lt;a href=&quot;javascript:show(1);&quot;&gt;정적 방법 &lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;구체적인 방법 &lt;/a&gt;&lt;a href=&quot;javascript:show(32);&quot;&gt;사용되지 않는 방법&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1013e84f8e07bb8bfb2ee286a09f0d1719d4b594" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(2);&quot;&gt;Instance Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(16);&quot;&gt;Default Methods&lt;/a&gt;</source>
          <target state="translated">모든 메소드 &lt;a href=&quot;javascript:show(2);&quot;&gt;인스턴스 메소드 &lt;/a&gt;&lt;a href=&quot;javascript:show(16);&quot;&gt;기본 메소드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f43d44a34223743a137a50644f8048bf7ebf3aa0" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(2);&quot;&gt;Instance Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;Abstract Methods&lt;/a&gt;</source>
          <target state="translated">모든 메소드 &lt;a href=&quot;javascript:show(2);&quot;&gt;인스턴스 메소드 &lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;추상 메소드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a76acde644ff6a88851d099779ed99e5d7a90349" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(2);&quot;&gt;Instance Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;Abstract Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(16);&quot;&gt;Default Methods&lt;/a&gt;</source>
          <target state="translated">모든 메소드 &lt;a href=&quot;javascript:show(2);&quot;&gt;인스턴스 메소드 &lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;추상 메소드 &lt;/a&gt;&lt;a href=&quot;javascript:show(16);&quot;&gt;기본 메소드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90e2a8d600f9e6326758e6473a3b65cc19693661" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(2);&quot;&gt;Instance Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;Abstract Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(16);&quot;&gt;Default Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(32);&quot;&gt;Deprecated Methods&lt;/a&gt;</source>
          <target state="translated">모든 메소드 &lt;a href=&quot;javascript:show(2);&quot;&gt;인스턴스 메소드 &lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;추상 메소드 &lt;/a&gt;&lt;a href=&quot;javascript:show(16);&quot;&gt;기본 메소드 &lt;/a&gt;&lt;a href=&quot;javascript:show(32);&quot;&gt;사용되지 않는 메소드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3923fbb7f5799c6358426f7e3a04c9e0667033f2" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(2);&quot;&gt;Instance Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;Abstract Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(32);&quot;&gt;Deprecated Methods&lt;/a&gt;</source>
          <target state="translated">모든 메서드 &lt;a href=&quot;javascript:show(2);&quot;&gt;인스턴스 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;추상 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(32);&quot;&gt;사용되지 않는 메서드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47a255fdaea1a5521bfc6770edc63eda7b3bbeb8" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(2);&quot;&gt;Instance Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;Abstract Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;Concrete Methods&lt;/a&gt;</source>
          <target state="translated">모든 메소드 &lt;a href=&quot;javascript:show(2);&quot;&gt;인스턴스 메소드 &lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;추상 메소드 &lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;구체적인 메소드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ce0686b12d86d7495725c6fdb868e052e040740" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(2);&quot;&gt;Instance Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;Abstract Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;Concrete Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(32);&quot;&gt;Deprecated Methods&lt;/a&gt;</source>
          <target state="translated">모든 메서드 &lt;a href=&quot;javascript:show(2);&quot;&gt;인스턴스 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;추상 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;구체적인 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(32);&quot;&gt;사용되지 않는 메서드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb6ce617238f820428eaec0cbc2fb048a9940687" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(2);&quot;&gt;Instance Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;Concrete Methods&lt;/a&gt;</source>
          <target state="translated">모든 방법 &lt;a href=&quot;javascript:show(2);&quot;&gt;인스턴스 방법 &lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;구체적인 방법&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcafc25ede183433becfefbef33219f1851c2941" translate="yes" xml:space="preserve">
          <source>All Methods &lt;a href=&quot;javascript:show(2);&quot;&gt;Instance Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;Concrete Methods&lt;/a&gt;&lt;a href=&quot;javascript:show(32);&quot;&gt;Deprecated Methods&lt;/a&gt;</source>
          <target state="translated">모든 메서드 &lt;a href=&quot;javascript:show(2);&quot;&gt;인스턴스 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(8);&quot;&gt;구체적인 메서드 &lt;/a&gt;&lt;a href=&quot;javascript:show(32);&quot;&gt;사용되지 않는 메서드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98d24c795d9d8df97c8477144e9c178056c37e18" translate="yes" xml:space="preserve">
          <source>All Modules &lt;a href=&quot;javascript:show(1);&quot;&gt;Java SE&lt;/a&gt;&lt;a href=&quot;javascript:show(2);&quot;&gt;JDK&lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;Other Modules&lt;/a&gt;</source>
          <target state="translated">모든 모듈 &lt;a href=&quot;javascript:show(1);&quot;&gt;Java SE &lt;/a&gt;&lt;a href=&quot;javascript:show(2);&quot;&gt;JDK &lt;/a&gt;&lt;a href=&quot;javascript:show(4);&quot;&gt;기타 모듈&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a700e7032abef688957e675ba4fa9a46b799dc95" translate="yes" xml:space="preserve">
          <source>All OUT parameters must be registered before a stored procedure is executed.</source>
          <target state="translated">모든 OUT 매개 변수는 저장 프로 시저가 실행되기 전에 등록되어야합니다.</target>
        </trans-unit>
        <trans-unit id="18aa2e4c1e72c0829ae2c5a367dd662d55274491" translate="yes" xml:space="preserve">
          <source>All SAX interfaces are assumed to be synchronous: the &lt;a href=&quot;#parse(org.xml.sax.InputSource)&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt; methods must not return until parsing is complete, and readers must wait for an event-handler callback to return before reporting the next event.</source>
          <target state="translated">모든 SAX 인터페이스는 동기식으로 간주됩니다. &lt;a href=&quot;#parse(org.xml.sax.InputSource)&quot;&gt; &lt;code&gt;parse&lt;/code&gt; &lt;/a&gt; 분석이 완료 될 때까지 구문 분석 메서드는 반환되지 않아야하며 독자는 다음 이벤트를보고하기 전에 이벤트 처리기 콜백이 반환 될 때까지 기다려야합니다.</target>
        </trans-unit>
        <trans-unit id="36fd789f544c0c2eeb7bbe891e65e36a806cfe8f" translate="yes" xml:space="preserve">
          <source>All SAX1 parsers must also implement a zero-argument constructor (though other constructors are also allowed).</source>
          <target state="translated">모든 SAX1 파서는 인수가없는 생성자를 구현해야합니다 (다른 생성자도 허용됨).</target>
        </trans-unit>
        <trans-unit id="126ae8430cbcde76086ff7cff3205f9b64e87db9" translate="yes" xml:space="preserve">
          <source>All SAX1 parsers must implement this basic interface: it allows applications to register handlers for different types of events and to initiate a parse from a URI, or a character stream.</source>
          <target state="translated">모든 SAX1 구문 분석기는이 기본 인터페이스를 구현해야합니다.이를 통해 애플리케이션은 다양한 유형의 이벤트에 대한 핸들러를 등록하고 URI 또는 ​​문자 스트림에서 구문 분석을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="698ee7606097732dd146bee20049685d653bd729" translate="yes" xml:space="preserve">
          <source>All States</source>
          <target state="translated">모든 주</target>
        </trans-unit>
        <trans-unit id="ed0203d6946d7c14ba9bce96c8bed4953c201838" translate="yes" xml:space="preserve">
          <source>All Superinterfaces:</source>
          <target state="translated">모든 수퍼 인터페이스 :</target>
        </trans-unit>
        <trans-unit id="7148cb811919f5969be84e0cb2ceb17cb99f390f" translate="yes" xml:space="preserve">
          <source>All VMDeathEvents will be in a single &lt;a href=&quot;eventset&quot;&gt;&lt;code&gt;EventSet&lt;/code&gt;&lt;/a&gt;, no other events will be in the event set. A resume must occur to continue execution after any event set which performs suspensions - in this case to allow proper shutdown.</source>
          <target state="translated">모든 VMDeathEvents는 단일 &lt;a href=&quot;eventset&quot;&gt; &lt;code&gt;EventSet&lt;/code&gt; 에&lt;/a&gt; 있으며 다른 이벤트는 이벤트 세트에 없습니다. 일시 중지를 수행하는 이벤트 세트 이후에 실행을 계속하려면 재개가 발생해야합니다.이 경우 적절한 종료를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="985fd2fa747bf37c19b85e98e5abcbfaca99bdef" translate="yes" xml:space="preserve">
          <source>All X.509 certificate extensions that a &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; might possibly be able to process should be included in the set.</source>
          <target state="translated">&lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 의 모든 X.509 인증서 확장 가 처리 할 수있는 세트에 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="e9c1f2342bfac0466a4afda9e11d8677f883f17c" translate="yes" xml:space="preserve">
          <source>All XMLReaders are required to recognize the http://xml.org/sax/features/namespaces and the http://xml.org/sax/features/namespace-prefixes feature names.</source>
          <target state="translated">모든 XMLReader는 http://xml.org/sax/features/namespaces 및 http://xml.org/sax/features/namespace-prefixes 기능 이름을 인식해야합니다.</target>
        </trans-unit>
        <trans-unit id="769b15276f3531d4c2c86c8536ebb9571d6ccccb" translate="yes" xml:space="preserve">
          <source>All XMLReaders are required to support setting http://xml.org/sax/features/namespaces to true and http://xml.org/sax/features/namespace-prefixes to false.</source>
          <target state="translated">모든 XMLReader는 http://xml.org/sax/features/namespaces를 true로 설정하고 http://xml.org/sax/features/namespace-prefixes를 false로 설정하는 것을 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="25df7a85f48a48078cfb121ea57c1908bc98eb5b" translate="yes" xml:space="preserve">
          <source>All access checks start from a &lt;code&gt;Lookup&lt;/code&gt; object, which compares its recorded lookup class against all requests to create method handles. A single &lt;code&gt;Lookup&lt;/code&gt; object can be used to create any number of access-checked method handles, all checked against a single lookup class.</source>
          <target state="translated">모든 액세스 검사는 &lt;code&gt;Lookup&lt;/code&gt; 객체 에서 시작합니다. Lookup 객체는 기록 된 조회 클래스를 모든 요청과 비교하여 메서드 핸들을 만듭니다. 단일 &lt;code&gt;Lookup&lt;/code&gt; 오브젝트를 사용하여 액세스 점검 된 메소드 핸들을 여러 개 작성할 수 있으며 모두 단일 조회 클래스에 대해 점검됩니다.</target>
        </trans-unit>
        <trans-unit id="1f39b7e957d123a47c723b7390c55932aa8915f1" translate="yes" xml:space="preserve">
          <source>All actions in a thread</source>
          <target state="translated">스레드의 모든 동작</target>
        </trans-unit>
        <trans-unit id="ec7f6cfc30c26fd326068c8642070c7963776d74" translate="yes" xml:space="preserve">
          <source>All arguments to all task methods must be non-null.</source>
          <target state="translated">모든 태스크 메소드에 대한 모든 인수는 널이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="c183099442c74bc81300cc51edc5fca74c3ca39d" translate="yes" xml:space="preserve">
          <source>All attributes that specify measurements and distances controlling the shape of the returned outline are measured in the same coordinate system as the original unstroked &lt;code&gt;Shape&lt;/code&gt; argument. When a &lt;code&gt;Graphics2D&lt;/code&gt; object uses a &lt;code&gt;Stroke&lt;/code&gt; object to redefine a path during the execution of one of its &lt;code&gt;draw&lt;/code&gt; methods, the geometry is supplied in its original form before the &lt;code&gt;Graphics2D&lt;/code&gt; transform attribute is applied. Therefore, attributes such as the pen width are interpreted in the user space coordinate system of the &lt;code&gt;Graphics2D&lt;/code&gt; object and are subject to the scaling and shearing effects of the user-space-to-device-space transform in that particular &lt;code&gt;Graphics2D&lt;/code&gt;. For example, the width of a rendered shape's outline is determined not only by the width attribute of this &lt;code&gt;BasicStroke&lt;/code&gt;, but also by the transform attribute of the &lt;code&gt;Graphics2D&lt;/code&gt; object. Consider this code:</source>
          <target state="translated">반환 된 윤곽선의 모양을 제어하는 ​​측정 및 거리를 지정하는 모든 속성은 원래 스트로크되지 않은 &lt;code&gt;Shape&lt;/code&gt; 인수 와 동일한 좌표계에서 측정됩니다 . 때 &lt;code&gt;Graphics2D&lt;/code&gt; 객체가 사용 &lt;code&gt;Stroke&lt;/code&gt; 는 하나의 실행 중에 경로를 재정의 할 물체를 &lt;code&gt;draw&lt;/code&gt; 메소드 전에 형상이 원래의 형태로 제공된다 &lt;code&gt;Graphics2D&lt;/code&gt; 속성 변환이 적용된다. 따라서 펜 너비와 같은 속성은 &lt;code&gt;Graphics2D&lt;/code&gt; 객체 의 사용자 공간 좌표계에서 해석되며 특정 &lt;code&gt;Graphics2D&lt;/code&gt; 에서 사용자 공간-장치 공간 변환의 크기 조정 및 전단 효과의 영향을받습니다.. 예를 들어 렌더링 된 모양의 외곽선 너비는이 &lt;code&gt;BasicStroke&lt;/code&gt; 의 width 속성 뿐만 아니라 &lt;code&gt;Graphics2D&lt;/code&gt; 객체 의 transform 속성에 의해 결정 됩니다. 이 코드를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="cd8c29ee937c6c2140f646caf9a580fc11d90ab7" translate="yes" xml:space="preserve">
          <source>All breakpoints in the redefined classes are deleted.</source>
          <target state="translated">재정의 된 클래스의 모든 중단 점이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="07252f24a126b5177f87013c857d2ec10b383f81" translate="yes" xml:space="preserve">
          <source>All but the first two (FilePermission and SocketPermission) are subclasses of &lt;code&gt;java.security.BasicPermission&lt;/code&gt;, which itself is an abstract subclass of the top-level class for permissions, which is &lt;code&gt;java.security.Permission&lt;/code&gt;. BasicPermission defines the functionality needed for all permissions that contain a name that follows the hierarchical property naming convention (for example, &quot;exitVM&quot;, &quot;setFactory&quot;, &quot;queuePrintJob&quot;, etc). An asterisk may appear at the end of the name, following a &quot;.&quot;, or by itself, to signify a wildcard match. For example: &quot;a.*&quot; or &quot;*&quot; is valid, &quot;*a&quot; or &quot;a*b&quot; is not valid.</source>
          <target state="translated">처음 두 개 (FilePermission 및 SocketPermission)를 제외한 모두는 &lt;code&gt;java.security.BasicPermission&lt;/code&gt; 의 서브 클래스이며 , 그 자체는 권한에 대한 최상위 레벨 클래스의 추상 서브 클래스 인 &lt;code&gt;java.security.Permission&lt;/code&gt; 입니다. BasicPermission은 계층 적 속성 명명 규칙을 따르는 이름 (예 : &quot;exitVM&quot;, &quot;setFactory&quot;, &quot;queuePrintJob&quot;등)을 포함하는 모든 권한에 필요한 기능을 정의합니다. 별표는 이름 끝에 &quot;.&quot;다음에 또는 와일드 카드 일치를 나타 내기 위해 나타날 수 있습니다. 예를 들어 &quot;a. *&quot;또는 &quot;*&quot;는 유효하고 &quot;* a&quot;또는 &quot;a * b&quot;는 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="901abc1ecc348237d56ae193f0aaf1b83d27c300" translate="yes" xml:space="preserve">
          <source>All buttons</source>
          <target state="translated">모든 버튼</target>
        </trans-unit>
        <trans-unit id="21350f7ce57244dc273258e4ef5d8b2e440cce12" translate="yes" xml:space="preserve">
          <source>All buttons except of &lt;code&gt;JCheckBox&lt;/code&gt;, &lt;code&gt;JToggleButton&lt;/code&gt; and &lt;code&gt;JRadioButton&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JCheckBox&lt;/code&gt; , &lt;code&gt;JToggleButton&lt;/code&gt; 및 &lt;code&gt;JRadioButton&lt;/code&gt; 을 제외한 모든 버튼 .</target>
        </trans-unit>
        <trans-unit id="347f7f827caff153779dd2d9b4af53a94351d1b4" translate="yes" xml:space="preserve">
          <source>All byte values &lt;code&gt;'A'&lt;/code&gt; through &lt;code&gt;'Z'&lt;/code&gt;, &lt;code&gt;'a'&lt;/code&gt; through &lt;code&gt;'z'&lt;/code&gt;, and &lt;code&gt;'\u00A0'&lt;/code&gt; through &lt;code&gt;'\u00FF'&lt;/code&gt; are considered to be alphabetic.</source>
          <target state="translated">모든 바이트 값 &lt;code&gt;'A'&lt;/code&gt; ~ &lt;code&gt;'Z'&lt;/code&gt; , &lt;code&gt;'a'&lt;/code&gt; ~ &lt;code&gt;'z'&lt;/code&gt; 및 &lt;code&gt;'\u00A0'&lt;/code&gt; ~ &lt;code&gt;'\u00FF'&lt;/code&gt; 는 알파벳으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="8552f73b4811345f781343c3994c603e7d7b9574" translate="yes" xml:space="preserve">
          <source>All byte values &lt;code&gt;'\u0000'&lt;/code&gt; through &lt;code&gt;'\u0020'&lt;/code&gt; are considered to be white space.</source>
          <target state="translated">모든 바이트 값 &lt;code&gt;'\u0000'&lt;/code&gt; 에서 &lt;code&gt;'\u0020'&lt;/code&gt; 은 공백으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="03145b8097bbae8c7fb560d54f628934caa88573" translate="yes" xml:space="preserve">
          <source>All bytes in &lt;code&gt;digesta&lt;/code&gt; are examined to determine equality. The calculation time depends only on the length of &lt;code&gt;digesta&lt;/code&gt;. It does not depend on the length of &lt;code&gt;digestb&lt;/code&gt; or the contents of &lt;code&gt;digesta&lt;/code&gt; and &lt;code&gt;digestb&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;digesta&lt;/code&gt; 의 모든 바이트를 검사하여 동등성을 결정합니다. 계산 시간은 &lt;code&gt;digesta&lt;/code&gt; 의 길이에만 의존합니다 . &lt;code&gt;digestb&lt;/code&gt; 의 길 이나 &lt;code&gt;digesta&lt;/code&gt; 와 &lt;code&gt;digestb&lt;/code&gt; 의 내용물 에 의존하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="919af563f54fc2f298fea28f1737af59bf8fe0e5" translate="yes" xml:space="preserve">
          <source>All cached resource bundles are subject to removal from the cache due to memory constraints of the runtime environment. Returning a large positive value doesn't mean to lock loaded resource bundles in the cache.</source>
          <target state="translated">캐시 된 모든 자원 번들은 런타임 환경의 메모리 제한으로 인해 캐시에서 제거 될 수 있습니다. 큰 양수 값을 반환한다고해서 캐시에로드 된 리소스 번들을 잠그는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="84b7c6fb0baa8e47fe302dcf84277ecf595b3b76" translate="yes" xml:space="preserve">
          <source>All calculations should check for numeric overflow and throw either an &lt;a href=&quot;../../lang/arithmeticexception&quot;&gt;&lt;code&gt;ArithmeticException&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../datetimeexception&quot;&gt;&lt;code&gt;DateTimeException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모든 계산은 숫자 오버플로를 확인하고 &lt;a href=&quot;../../lang/arithmeticexception&quot;&gt; &lt;code&gt;ArithmeticException&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../datetimeexception&quot;&gt; &lt;code&gt;DateTimeException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="5ec61cf807864ba46159aaef3f52f7eef737d022" translate="yes" xml:space="preserve">
          <source>All calculations should check for numeric overflow and throw either an &lt;a href=&quot;../lang/arithmeticexception&quot;&gt;&lt;code&gt;ArithmeticException&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;datetimeexception&quot;&gt;&lt;code&gt;DateTimeException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모든 계산은 숫자 오버플로를 확인하고 &lt;a href=&quot;../lang/arithmeticexception&quot;&gt; &lt;code&gt;ArithmeticException&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;datetimeexception&quot;&gt; &lt;code&gt;DateTimeException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="bdba430e153861bf4a2239889e5b3b8319e16190" translate="yes" xml:space="preserve">
          <source>All characters are written as they are, including the line separators in the char sequence. No extra characters are added.</source>
          <target state="translated">문자 시퀀스의 줄 구분 기호를 포함하여 모든 문자는 그대로 기록됩니다. 추가 문자가 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f5dff10289cff6f4e4e30790cd504e6445d1a41c" translate="yes" xml:space="preserve">
          <source>All characters from the first one to the first dot are set to be lower-case characters</source>
          <target state="translated">첫 번째부터 첫 번째 점까지의 모든 문자는 소문자로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="5b38a41a60083c9bf4ef2472cdf31a0251c2e6a4" translate="yes" xml:space="preserve">
          <source>All characters in the range &lt;code&gt;'\u0001'&lt;/code&gt; to &lt;code&gt;'\u007F'&lt;/code&gt; are represented by a single byte:</source>
          <target state="translated">&lt;code&gt;'\u0001'&lt;/code&gt; ~ &lt;code&gt;'\u007F'&lt;/code&gt; 범위 의 모든 문자 는 단일 바이트로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="cd3d23a43c2bb1e9d7d226941af38ffbed84bfc6" translate="yes" xml:space="preserve">
          <source>All characters printed by a &lt;code&gt;PrintStream&lt;/code&gt; are converted into bytes using the given encoding or charset, or platform's default character encoding if not specified. The &lt;a href=&quot;printwriter&quot;&gt;&lt;code&gt;PrintWriter&lt;/code&gt;&lt;/a&gt; class should be used in situations that require writing characters rather than bytes.</source>
          <target state="translated">&lt;code&gt;PrintStream&lt;/code&gt; 에 의해 인쇄 된 모든 문자 는 지정된 인코딩이나 문자 집합 또는 지정되지 않은 경우 플랫폼의 기본 문자 인코딩을 사용하여 바이트로 변환됩니다. &lt;a href=&quot;printwriter&quot;&gt; &lt;code&gt;PrintWriter&lt;/code&gt; &lt;/a&gt; 클래스는 쓰기 문자가 아닌 바이트를 요구하는 경우에 사용한다.</target>
        </trans-unit>
        <trans-unit id="8dd53223bb8a45a188a2fb5b1ba4c1d53ad0ecc6" translate="yes" xml:space="preserve">
          <source>All characters printed by a &lt;code&gt;PrintStream&lt;/code&gt; are converted into bytes using the given encoding or charset, or the platform's default character encoding if not specified. The &lt;a href=&quot;printwriter&quot;&gt;&lt;code&gt;PrintWriter&lt;/code&gt;&lt;/a&gt; class should be used in situations that require writing characters rather than bytes.</source>
          <target state="translated">&lt;code&gt;PrintStream&lt;/code&gt; 에 의해 인쇄 된 모든 문자 는 지정된 인코딩 또는 문자 집합 또는 지정되지 않은 경우 플랫폼의 기본 문자 인코딩을 사용하여 바이트로 변환됩니다. &lt;a href=&quot;printwriter&quot;&gt; &lt;code&gt;PrintWriter&lt;/code&gt; &lt;/a&gt; 클래스는 쓰기 문자가 아닌 바이트를 요구하는 경우에 사용한다.</target>
        </trans-unit>
        <trans-unit id="77e91a244651be93fa0d408db5223b8c2473937d" translate="yes" xml:space="preserve">
          <source>All characters printed by a &lt;code&gt;PrintStream&lt;/code&gt; are converted into bytes using the platform's default character encoding. The &lt;code&gt;&lt;a href=&quot;printwriter&quot;&gt;&lt;code&gt;PrintWriter&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class should be used in situations that require writing characters rather than bytes.</source>
          <target state="translated">&lt;code&gt;PrintStream&lt;/code&gt; 에 의해 인쇄 된 모든 문자 는 플랫폼의 기본 문자 인코딩을 사용하여 바이트로 변환됩니다. &lt;code&gt;&lt;a href=&quot;printwriter&quot;&gt;&lt;code&gt;PrintWriter&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 클래스는 쓰기 문자가 아닌 바이트를 요구하는 경우에 사용한다.</target>
        </trans-unit>
        <trans-unit id="19d625bf620b436f2035f6627b10cbf723311637" translate="yes" xml:space="preserve">
          <source>All classes given are redefined according to the definitions supplied.</source>
          <target state="translated">제공된 모든 클래스는 제공된 정의에 따라 재정의됩니다.</target>
        </trans-unit>
        <trans-unit id="e5b621eb943eba37dbd5ce1f1adbe3c2955588b3" translate="yes" xml:space="preserve">
          <source>All classes given are redefined according to the definitions supplied. A method in a redefined class is called 'equivalent' (to the old version of the method) if</source>
          <target state="translated">제공된 모든 클래스는 제공된 정의에 따라 재정의됩니다. 재정의 된 클래스의 메서드는 다음과 같은 경우 '동등한'(이전 버전의 메서드)이라고합니다.</target>
        </trans-unit>
        <trans-unit id="4d98a2253cf2a7b53c165c7fe7397538cc3860b1" translate="yes" xml:space="preserve">
          <source>All classes implementing this interface and overriding this method must call &lt;code&gt;TemporalAccessor.super.query(query)&lt;/code&gt;. JDK classes may avoid calling super if they provide behavior equivalent to the default behaviour, however non-JDK classes may not utilize this optimization and must call &lt;code&gt;super&lt;/code&gt;.</source>
          <target state="translated">이 인터페이스를 구현하고이 메서드를 재정의하는 모든 클래스는 &lt;code&gt;TemporalAccessor.super.query(query)&lt;/code&gt; . JDK 클래스는 기본 동작과 동등한 동작을 제공하는 경우 super 호출을 피할 수 있지만 비 JDK 클래스는이 최적화를 활용하지 않을 수 있으며 &lt;code&gt;super&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="311e77112b7a179c6b7d934b2efc4aa992e3b6af" translate="yes" xml:space="preserve">
          <source>All colors returned by &lt;code&gt;DefaultMetalTheme&lt;/code&gt; are completely opaque.</source>
          <target state="translated">&lt;code&gt;DefaultMetalTheme&lt;/code&gt; 에서 반환하는 모든 색상 은 완전히 불투명합니다.</target>
        </trans-unit>
        <trans-unit id="13294a49485fb128f6cb986a7e87dd64de5bb559" translate="yes" xml:space="preserve">
          <source>All colors returned by &lt;code&gt;OceanTheme&lt;/code&gt; are completely opaque.</source>
          <target state="translated">&lt;code&gt;OceanTheme&lt;/code&gt; 에서 반환하는 모든 색상 은 완전히 불투명합니다.</target>
        </trans-unit>
        <trans-unit id="a779989011e342be6b7948d43fe751135a1032ad" translate="yes" xml:space="preserve">
          <source>All comments are labeled with this tag.</source>
          <target state="translated">모든 댓글에는이 태그가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="21d7ec6f39cf737f29af8dc01868f9dc72c877f6" translate="yes" xml:space="preserve">
          <source>All constructors are protected. The correct way to create a Raster is to use one of the static create methods defined in this class. These methods create instances of Raster that use the standard Interleaved, Banded, and Packed SampleModels and that may be processed more efficiently than a Raster created by combining an externally generated SampleModel and DataBuffer.</source>
          <target state="translated">모든 생성자는 보호됩니다. Raster를 생성하는 올바른 방법은이 클래스에 정의 된 정적 생성 방법 중 하나를 사용하는 것입니다. 이러한 메서드는 표준 Interleaved, Banded 및 Packed SampleModel을 사용하는 Raster 인스턴스를 생성하며 외부에서 생성 된 SampleModel과 DataBuffer를 결합하여 생성 된 Raster보다 더 효율적으로 처리 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d91c95cd1fe78547a9648004257feced3cec619c" translate="yes" xml:space="preserve">
          <source>All coordinates passed to a &lt;code&gt;Graphics2D&lt;/code&gt; object are specified in a device-independent coordinate system called User Space, which is used by applications. The &lt;code&gt;Graphics2D&lt;/code&gt; object contains an &lt;a href=&quot;geom/affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt; object as part of its rendering state that defines how to convert coordinates from user space to device-dependent coordinates in Device Space.</source>
          <target state="translated">&lt;code&gt;Graphics2D&lt;/code&gt; 객체에 전달되는 모든 좌표는 응용 프로그램에서 사용하는 사용자 공간이라는 장치 독립적 좌표계에 지정됩니다. &lt;code&gt;Graphics2D&lt;/code&gt; 목적은 포함 &lt;a href=&quot;geom/affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; &lt;/a&gt; 정의 방법 디바이스 공간에서 기기 - 의존 사용자 좌표 공간에서의 좌표를 변환하는 것이 렌더링 그 상태의 일부로서 객체.</target>
        </trans-unit>
        <trans-unit id="36054393ce54d4b0970e3e7a4077e5b48c75498c" translate="yes" xml:space="preserve">
          <source>All coordinates that appear as arguments to the methods of this &lt;code&gt;Graphics&lt;/code&gt; object are considered relative to the translation origin of this &lt;code&gt;Graphics&lt;/code&gt; object prior to the invocation of the method.</source>
          <target state="translated">이 &lt;code&gt;Graphics&lt;/code&gt; 객체 의 메서드에 대한 인수로 나타나는 모든 좌표는 메서드 호출 이전 에이 &lt;code&gt;Graphics&lt;/code&gt; 객체 의 변환 원점에 상대적인 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="ddc738864d493ac55322707fefc811aec7c09ad0" translate="yes" xml:space="preserve">
          <source>All correctly implemented &lt;code&gt;Era&lt;/code&gt; classes are singletons, thus it is valid code to write &lt;code&gt;date.getEra() == SomeChrono.ERA_NAME)&lt;/code&gt;.</source>
          <target state="translated">모두 올바르게 구현 &lt;code&gt;Era&lt;/code&gt; 클래스는 싱글 톤이므로 &lt;code&gt;date.getEra() == SomeChrono.ERA_NAME)&lt;/code&gt; 을 작성하는 유효한 코드 입니다.</target>
        </trans-unit>
        <trans-unit id="5efd4f8f3906f57b2a968bc0e620625758d0f15b" translate="yes" xml:space="preserve">
          <source>All date/time datatype fields set to &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt;&lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt;&lt;/a&gt; or null.</source>
          <target state="translated">모든 날짜 / 시간 데이터 유형 필드가 &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt; &lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt; &lt;/a&gt; 또는 null로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="15d737fc61ca7ea0538d4a5ba202376badf7d27b" translate="yes" xml:space="preserve">
          <source>All declarations reported through &lt;a href=&quot;../dtdhandler&quot;&gt;&lt;code&gt;DTDHandler&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;declhandler&quot;&gt;&lt;code&gt;DeclHandler&lt;/code&gt;&lt;/a&gt; events must appear between the startDTD and &lt;a href=&quot;#endDTD()&quot;&gt;&lt;code&gt;endDTD&lt;/code&gt;&lt;/a&gt; events. Declarations are assumed to belong to the internal DTD subset unless they appear between &lt;a href=&quot;#startEntity(java.lang.String)&quot;&gt;&lt;code&gt;startEntity&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#endEntity(java.lang.String)&quot;&gt;&lt;code&gt;endEntity&lt;/code&gt;&lt;/a&gt; events. Comments and processing instructions from the DTD should also be reported between the startDTD and endDTD events, in their original order of (logical) occurrence; they are not required to appear in their correct locations relative to DTDHandler or DeclHandler events, however.</source>
          <target state="translated">&lt;a href=&quot;../dtdhandler&quot;&gt; &lt;code&gt;DTDHandler&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;declhandler&quot;&gt; &lt;code&gt;DeclHandler&lt;/code&gt; &lt;/a&gt; 이벤트를 통해보고 된 모든 선언 은 startDTD 및 &lt;a href=&quot;#endDTD()&quot;&gt; &lt;code&gt;endDTD&lt;/code&gt; &lt;/a&gt; 이벤트 사이에 나타나야 합니다. 선언은 &lt;a href=&quot;#startEntity(java.lang.String)&quot;&gt; &lt;code&gt;startEntity&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#endEntity(java.lang.String)&quot;&gt; &lt;code&gt;endEntity&lt;/code&gt; &lt;/a&gt; 이벤트 사이에 나타나지 않는 한 내부 DTD 하위 집합에 속하는 것으로 간주됩니다 . DTD의 주석 및 처리 지침은 (논리적) 발생의 원래 순서로 startDTD 및 endDTD 이벤트간에보고되어야합니다. 그러나 DTDHandler 또는 DeclHandler 이벤트와 관련된 올바른 위치에 나타날 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="ae9a06a541ad058bc377e19c6c75fe423a65aa60" translate="yes" xml:space="preserve">
          <source>All default attributes must be present on elements when the elements are passed to the filter methods. All other default content must be passed to the filter methods.</source>
          <target state="translated">모든 기본 속성은 요소가 필터 메소드로 전달 될 때 요소에 있어야합니다. 다른 모든 기본 콘텐츠는 필터 메서드에 전달되어야합니다.</target>
        </trans-unit>
        <trans-unit id="7d05caa03a70802d51cf172fbd78604d8076431a" translate="yes" xml:space="preserve">
          <source>All default handler implementations must provide a public zero-argument constructor.</source>
          <target state="translated">모든 기본 핸들러 구현은 공개 제로 인수 생성자를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="3fa5a802b082145c3e6ddd8db4291277dcf7d5bc" translate="yes" xml:space="preserve">
          <source>All dialogs are modal. Each &lt;code&gt;showXxxDialog&lt;/code&gt; method blocks the caller until the user's interaction is complete.</source>
          <target state="translated">모든 대화 상자는 모달입니다. 각 &lt;code&gt;showXxxDialog&lt;/code&gt; 메서드는 사용자의 상호 작용이 완료 될 때까지 호출자를 차단합니다.</target>
        </trans-unit>
        <trans-unit id="ff897ca3375e058dda92b674f34cae7b81dc8088" translate="yes" xml:space="preserve">
          <source>All documents need to be able to add and remove simple text. Typically, text is inserted and removed via gestures from a keyboard or a mouse. What effect the insertion or removal has upon the document structure is entirely up to the implementation of the document.</source>
          <target state="translated">모든 문서는 간단한 텍스트를 추가하고 제거 할 수 있어야합니다. 일반적으로 텍스트는 키보드 또는 마우스의 제스처를 통해 삽입 및 제거됩니다. 삽입 또는 제거가 문서 구조에 미치는 영향은 전적으로 문서 구현에 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="d25e69fce8f89e378f4b73ec864e0fa0832ff4a5" translate="yes" xml:space="preserve">
          <source>All elements are permitted, including &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">다음을 포함한 모든 요소가 허용됩니다 &lt;code&gt;null&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="021291174612a3d36a34d1d3420c3f4e0dd8fb5f" translate="yes" xml:space="preserve">
          <source>All elements in the optional section are treated as optional. During formatting, the section is only output if data is available in the &lt;code&gt;TemporalAccessor&lt;/code&gt; for all the elements in the section. During parsing, the whole section may be missing from the parsed string.</source>
          <target state="translated">선택적 섹션의 모든 요소는 선택적으로 처리됩니다. 포맷하는 동안 섹션에서 데이터를 사용할 수있는 경우에만 섹션이 출력됩니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 모든 요소에 대해 TemporalAccessor . 구문 분석 중 구문 분석 된 문자열에서 전체 섹션이 누락 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68f48a8ce148ae673117b1fc5ce92640c01d0a42" translate="yes" xml:space="preserve">
          <source>All elements in this list must be</source>
          <target state="translated">이 목록의 모든 요소는</target>
        </trans-unit>
        <trans-unit id="97bbc82155d68179b8de5e9bd38f4f15d093bef3" translate="yes" xml:space="preserve">
          <source>All elements inserted into a sorted set must implement the &lt;code&gt;Comparable&lt;/code&gt; interface (or be accepted by the specified comparator). Furthermore, all such elements must be</source>
          <target state="translated">정렬 된 세트에 삽입 된 모든 요소는 &lt;code&gt;Comparable&lt;/code&gt; 인터페이스를 (또는 지정된 비교기가 승인 ). 또한 이러한 모든 요소는</target>
        </trans-unit>
        <trans-unit id="e4103b0970d52278fc58be0eb5f1ef5fa23dddc3" translate="yes" xml:space="preserve">
          <source>All event handling is handled by listener classes created with the &lt;code&gt;createxxxListener()&lt;/code&gt; methods and internal classes. You can change the behavior of this class by overriding the &lt;code&gt;createxxxListener()&lt;/code&gt; methods and supplying your own event listeners or subclassing from the ones supplied in this class.</source>
          <target state="translated">모든 이벤트 처리는 &lt;code&gt;createxxxListener()&lt;/code&gt; 메서드와 내부 클래스로 생성 된 리스너 클래스에 의해 처리됩니다 . &lt;code&gt;createxxxListener()&lt;/code&gt; 메서드 를 재정의하고 자체 이벤트 리스너를 제공 하거나이 클래스에서 제공하는 하위 클래스를 제공 하여이 클래스의 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8c8fd1ae023e1650510ac403a431dc3cb672005d" translate="yes" xml:space="preserve">
          <source>All event requests are cancelled.</source>
          <target state="translated">모든 이벤트 요청이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="7d0f7352b3fd6692fa00b540af6b227c78a64ea8" translate="yes" xml:space="preserve">
          <source>All externalizable data is written in JDK 1.1 external data format after calling this method. This version is needed to write streams containing Externalizable data that can be read by pre-JDK 1.1.6 JVMs.</source>
          <target state="translated">이 메소드를 호출 한 후 모든 외부화 가능 데이터는 JDK 1.1 외부 데이터 형식으로 작성됩니다. 이 버전은 JDK 1.1.6 이전 JVM에서 읽을 수있는 외부화 가능 데이터가 포함 된 스트림을 작성하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c345fda4bfb8e99c245f9d84ee52953f3d678d46" translate="yes" xml:space="preserve">
          <source>All field names and values are not predefined. New fields can be defined and added by any program. Some fields have been predefined for consistency of implementation and support by the ModelMBeanInfo, ModelMBeanAttributeInfo, ModelMBeanConstructorInfo, ModelMBeanNotificationInfo, ModelMBeanOperationInfo and ModelMBean classes.</source>
          <target state="translated">모든 필드 이름과 값은 미리 정의되지 않았습니다. 모든 프로그램에서 새 필드를 정의하고 추가 할 수 있습니다. 일부 필드는 ModelMBeanInfo, ModelMBeanAttributeInfo, ModelMBeanConstructorInfo, ModelMBeanNotificationInfo, ModelMBeanOperationInfo 및 ModelMBean 클래스에서 구현 및 지원의 일관성을 위해 사전 정의되었습니다.</target>
        </trans-unit>
        <trans-unit id="d85fad7e127c3af759f2f2665bbcd8493251a450" translate="yes" xml:space="preserve">
          <source>All field values should be Strings. If the field values are not Strings, the programmer will have to reset or convert these fields correctly.</source>
          <target state="translated">모든 필드 값은 문자열이어야합니다. 필드 값이 문자열이 아닌 경우 프로그래머는 이러한 필드를 올바르게 재설정하거나 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="0cd7404f8236d5abbb1494d421551059828da953" translate="yes" xml:space="preserve">
          <source>All fields can be expressed as a &lt;code&gt;long&lt;/code&gt; integer. This method returns an object that describes the valid range for that value.</source>
          <target state="translated">모든 필드는 &lt;code&gt;long&lt;/code&gt; 정수 로 표현 될 수 있습니다 . 이 메소드는 해당 값의 유효 범위를 설명하는 오브젝트를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6274f1fcfa9068e08f4e4272a557aa0b7cef2888" translate="yes" xml:space="preserve">
          <source>All fields can be expressed as a &lt;code&gt;long&lt;/code&gt; integer. This method returns an object that describes the valid range for that value. The value of this temporal object is used to enhance the accuracy of the returned range. If the date-time cannot return the range, because the field is unsupported or for some other reason, an exception will be thrown.</source>
          <target state="translated">모든 필드는 &lt;code&gt;long&lt;/code&gt; 정수 로 표현 될 수 있습니다 . 이 메소드는 해당 값의 유효 범위를 설명하는 오브젝트를 리턴합니다. 이 임시 객체의 값은 반환 된 범위의 정확도를 향상시키는 데 사용됩니다. 필드가 지원되지 않거나 다른 이유로 날짜-시간이 범위를 리턴 할 수없는 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e765c6ae3a942e78e92220042e5f4f6ee431a266" translate="yes" xml:space="preserve">
          <source>All fields can be expressed as a &lt;code&gt;long&lt;/code&gt; integer. This method returns an object that describes the valid range for that value. This method is generally only applicable to the ISO-8601 calendar system.</source>
          <target state="translated">모든 필드를 &lt;code&gt;long&lt;/code&gt; 표현할 수 있습니다 정수 . 이 메소드는 해당 값의 유효 범위를 설명하는 오브젝트를 리턴합니다. 이 방법은 일반적으로 ISO-8601 캘린더 시스템에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="098285efa23d737c9df8c5f9d458a9fcb6895cf4" translate="yes" xml:space="preserve">
          <source>All fields of the locale must be well-formed, see &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">로케일의 모든 분야가 잘 형성되어야하며, 참조 &lt;a href=&quot;locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5a94b3ae0dbda55a27778fa69776a7e282f6ab2e" translate="yes" xml:space="preserve">
          <source>All fields, including eras, have an associated numeric value. The meaning of the numeric value for era is determined by the chronology according to these principles:</source>
          <target state="translated">연대를 포함한 모든 필드에는 연관된 숫자 값이 있습니다. 시대의 숫자 값의 의미는 다음 원칙에 따라 연대기에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="90960054d49c7ac96de6c714810330bed27f4591" translate="yes" xml:space="preserve">
          <source>All fini functions have a common return type &lt;code&gt;R&lt;/code&gt;, which the final loop handle will also have.</source>
          <target state="translated">모든 fini 함수에는 최종 루프 핸들에도 포함되는 공통 반환 유형 &lt;code&gt;R&lt;/code&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0601ca3141e7969e870c7c5334a37abb18618bca" translate="yes" xml:space="preserve">
          <source>All four values are set and available from the created &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">4 개의 값이 모두 설정되고 생성 된 &lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; 에서 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="368ab170891172128f72a9d22d966809c36d911c" translate="yes" xml:space="preserve">
          <source>All four values are set by computing their values from the specified milliseconds and are available using the &lt;code&gt;get&lt;/code&gt; methods of the created &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;. The values conform to and are defined by:</source>
          <target state="translated">4 개의 값은 모두 지정된 밀리 초에서 해당 값을 계산하여 설정되며 생성 된 &lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;get&lt;/code&gt; 메서드를 사용하여 사용할 수 있습니다 . 값은 다음을 준수하고 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="68a3799e7a9be18b63d866152930fcd63baacfbd" translate="yes" xml:space="preserve">
          <source>All frames up to and including the &lt;code&gt;frame&lt;/code&gt; are popped off the stack. The frame previous to the parameter &lt;code&gt;frame&lt;/code&gt; will become the current frame.</source>
          <target state="translated">사람 및 포함한 모든 프레임 &lt;code&gt;frame&lt;/code&gt; 스택에서 팝합니다. 매개 변수 프레임 이전 &lt;code&gt;frame&lt;/code&gt; 이 현재 프레임이됩니다.</target>
        </trans-unit>
        <trans-unit id="4816ed6bf6e378b9fbe7ab0b23785f9c49f26b7e" translate="yes" xml:space="preserve">
          <source>All function executions (except init functions) will be passed the internal parameter list, consisting of the non-&lt;code&gt;void&lt;/code&gt; iteration values &lt;code&gt;(v...)&lt;/code&gt; (in clause order) and then the loop inputs &lt;code&gt;(a...)&lt;/code&gt; (in argument order).</source>
          <target state="translated">모든 함수 실행 (초기 함수 제외)은 &lt;code&gt;void&lt;/code&gt; 가 아닌 반복 값 &lt;code&gt;(v...)&lt;/code&gt; (절 순서)과 루프 입력 &lt;code&gt;(a...)&lt;/code&gt; (인수 순서 ) 으로 구성된 내부 매개 변수 목록으로 전달됩니다. ).</target>
        </trans-unit>
        <trans-unit id="96f1e09ab0b2e250622dae9ef8db3ecb046003d1" translate="yes" xml:space="preserve">
          <source>All general-purpose &lt;code&gt;Collection&lt;/code&gt; implementation classes (which typically implement &lt;code&gt;Collection&lt;/code&gt; indirectly through one of its subinterfaces) should provide two &quot;standard&quot; constructors: a void (no arguments) constructor, which creates an empty collection, and a constructor with a single argument of type &lt;code&gt;Collection&lt;/code&gt;, which creates a new collection with the same elements as its argument. In effect, the latter constructor allows the user to copy any collection, producing an equivalent collection of the desired implementation type. There is no way to enforce this convention (as interfaces cannot contain constructors) but all of the general-purpose &lt;code&gt;Collection&lt;/code&gt; implementations in the Java platform libraries comply.</source>
          <target state="translated">모든 범용 &lt;code&gt;Collection&lt;/code&gt; (일반적으로 구현하는 구현 클래스 &lt;code&gt;Collection&lt;/code&gt; 서브 인터페이스를 개입시켜 간접적)는 두 &quot;표준&quot;생성자를 제공해야 타입의 인수와 하늘의 콜렉션을 작성하는 void (인수 없음) constructor, 및 생성자를 &lt;code&gt;Collection&lt;/code&gt; . 인수와 동일한 요소로 새 콜렉션을 작성합니다. 사실상, 후자의 생성자는 사용자가 임의의 콜렉션을 복사하여 원하는 구현 유형의 동등한 콜렉션을 생성 할 수있게합니다. 인터페이스에 생성자를 포함 할 수 없으므로이 규칙을 적용 할 방법은 없지만 Java 플랫폼 라이브러리의 모든 범용 &lt;code&gt;Collection&lt;/code&gt; 구현이 준수합니다.</target>
        </trans-unit>
        <trans-unit id="33a31e359d470ebf801e50a2a87603e677dd7c83" translate="yes" xml:space="preserve">
          <source>All general-purpose map implementation classes should provide two &quot;standard&quot; constructors: a void (no arguments) constructor which creates an empty map, and a constructor with a single argument of type &lt;code&gt;Map&lt;/code&gt;, which creates a new map with the same key-value mappings as its argument. In effect, the latter constructor allows the user to copy any map, producing an equivalent map of the desired class. There is no way to enforce this recommendation (as interfaces cannot contain constructors) but all of the general-purpose map implementations in the JDK comply.</source>
          <target state="translated">모든 범용 맵 구현 클래스는 두 개의 &quot;표준&quot;생성자 : 빈 맵을 작성하는 void (인수 없음) 생성자 및 &lt;code&gt;Map&lt;/code&gt; 유형의 단일 인수를 가진 생성자 , 동일한 키-값으로 새 맵을 작성해야합니다. 인수로서의 매핑 사실상 후자의 생성자는 사용자가 맵을 복사하여 원하는 클래스의 동등한 맵을 생성 할 수 있도록합니다. 인터페이스가 생성자를 포함 할 수 없으므로이 권장 사항을 적용 할 방법은 없지만 JDK의 모든 범용 맵 구현이 준수합니다.</target>
        </trans-unit>
        <trans-unit id="73e770903ea6aaa7acfb2924ee8a0b8f8e5d4ab8" translate="yes" xml:space="preserve">
          <source>All general-purpose sorted map implementation classes should provide four &quot;standard&quot; constructors. It is not possible to enforce this recommendation though as required constructors cannot be specified by interfaces. The expected &quot;standard&quot; constructors for all sorted map implementations are:</source>
          <target state="translated">모든 범용 정렬 맵 구현 클래스는 4 개의 &quot;표준&quot;생성자를 제공해야합니다. 필수 생성자를 인터페이스로 지정할 수는 없지만이 권장 사항을 적용 할 수는 없습니다. 모든 정렬 된 맵 구현에 필요한 &quot;표준&quot;생성자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6c2f0747593ee78c458f79c8168bdc6f498a0588" translate="yes" xml:space="preserve">
          <source>All general-purpose sorted set implementation classes should provide four &quot;standard&quot; constructors: 1) A void (no arguments) constructor, which creates an empty sorted set sorted according to the natural ordering of its elements. 2) A constructor with a single argument of type &lt;code&gt;Comparator&lt;/code&gt;, which creates an empty sorted set sorted according to the specified comparator. 3) A constructor with a single argument of type &lt;code&gt;Collection&lt;/code&gt;, which creates a new sorted set with the same elements as its argument, sorted according to the natural ordering of the elements. 4) A constructor with a single argument of type &lt;code&gt;SortedSet&lt;/code&gt;, which creates a new sorted set with the same elements and the same ordering as the input sorted set. There is no way to enforce this recommendation, as interfaces cannot contain constructors.</source>
          <target state="translated">모든 범용 정렬 집합 구현 클래스는 4 개의 &quot;표준&quot;생성자를 제공해야합니다. 1) void (인수 없음) 생성자. 요소의 자연 순서에 따라 정렬 된 빈 정렬 집합을 만듭니다. 2) &lt;code&gt;Comparator&lt;/code&gt; 유형의 단일 인수를 가진 생성자 . 지정된 비교기에 따라 정렬 된 빈 정렬 세트를 작성합니다. 3) &lt;code&gt;Collection&lt;/code&gt; 타입의 단일 인수를 가진 생성자. 인수 와 동일한 요소를 가진 새로운 정렬 세트를 생성하며, 요소의 자연 순서에 따라 정렬됩니다. 4) &lt;code&gt;SortedSet&lt;/code&gt; 유형의 단일 인수를 가진 생성자입력 정렬 집합과 동일한 요소 및 순서를 가진 새로운 정렬 집합을 만듭니다. 인터페이스는 생성자를 포함 할 수 없으므로이 권장 사항을 적용 할 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="999196d2d76bf25c90d1154b5a1766d24e8a6b70" translate="yes" xml:space="preserve">
          <source>All graphical information returned from a &lt;code&gt;TextLayout&lt;/code&gt; object's methods is relative to the origin of the &lt;code&gt;TextLayout&lt;/code&gt;, which is the intersection of the &lt;code&gt;TextLayout&lt;/code&gt; object's baseline with its left edge. Also, coordinates passed into a &lt;code&gt;TextLayout&lt;/code&gt; object's methods are assumed to be relative to the &lt;code&gt;TextLayout&lt;/code&gt; object's origin. Clients usually need to translate between a &lt;code&gt;TextLayout&lt;/code&gt; object's coordinate system and the coordinate system in another object (such as a &lt;a href=&quot;../graphics&quot;&gt;&lt;code&gt;Graphics&lt;/code&gt;&lt;/a&gt; object).</source>
          <target state="translated">&lt;code&gt;TextLayout&lt;/code&gt; 객체의 메서드 에서 반환 된 모든 그래픽 정보 는 &lt;code&gt;TextLayout&lt;/code&gt; 객체의 기준선과 왼쪽 가장자리 가 교차 하는 &lt;code&gt;TextLayout&lt;/code&gt; 원점을 기준으로합니다. 또한 &lt;code&gt;TextLayout&lt;/code&gt; 객체의 메서드에 전달 된 좌표 는 &lt;code&gt;TextLayout&lt;/code&gt; 객체의 원점에 상대적인 것으로 간주됩니다 . 클라이언트는 일반적으로 &lt;code&gt;TextLayout&lt;/code&gt; 객체의 좌표계와 다른 객체 (예 : &lt;a href=&quot;../graphics&quot;&gt; &lt;code&gt;Graphics&lt;/code&gt; &lt;/a&gt; 객체) 의 좌표계 간에 변환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c2618ea7880b6010a970458e6d2614ca5f09af52" translate="yes" xml:space="preserve">
          <source>All icons added by the application are automatically removed from the &lt;code&gt;SystemTray&lt;/code&gt; upon application exit and also when the desktop system tray becomes unavailable.</source>
          <target state="translated">응용 프로그램이 추가 한 모든 아이콘은 응용 프로그램이 종료 될 때와 데스크탑 시스템 트레이를 사용할 수 없게되면 &lt;code&gt;SystemTray&lt;/code&gt; 에서 자동으로 제거됩니다 .</target>
        </trans-unit>
        <trans-unit id="0e1407a376d5826ea310e130eeb084baf789790f" translate="yes" xml:space="preserve">
          <source>All implementations are required to support the &lt;a href=&quot;../xmlconstants#FEATURE_SECURE_PROCESSING&quot;&gt;&lt;code&gt;XMLConstants.FEATURE_SECURE_PROCESSING&lt;/code&gt;&lt;/a&gt; feature. When the feature is</source>
          <target state="translated">&lt;a href=&quot;../xmlconstants#FEATURE_SECURE_PROCESSING&quot;&gt; &lt;code&gt;XMLConstants.FEATURE_SECURE_PROCESSING&lt;/code&gt; &lt;/a&gt; 기능 을 지원하려면 모든 구현이 필요 합니다. 기능이</target>
        </trans-unit>
        <trans-unit id="c4181820c7fce9b4f56ce1d9dc3b52fff669ea58" translate="yes" xml:space="preserve">
          <source>All implementations are required to support the &lt;a href=&quot;../xmlconstants#FEATURE_SECURE_PROCESSING&quot;&gt;&lt;code&gt;XMLConstants.FEATURE_SECURE_PROCESSING&lt;/code&gt;&lt;/a&gt; feature. When the feature is &lt;code&gt;true&lt;/code&gt;, any reference to an external function is an error. Under these conditions, the implementation must not call the &lt;a href=&quot;xpathfunctionresolver&quot;&gt;&lt;code&gt;XPathFunctionResolver&lt;/code&gt;&lt;/a&gt; and must throw an &lt;a href=&quot;xpathfunctionexception&quot;&gt;&lt;code&gt;XPathFunctionException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../xmlconstants#FEATURE_SECURE_PROCESSING&quot;&gt; &lt;code&gt;XMLConstants.FEATURE_SECURE_PROCESSING&lt;/code&gt; &lt;/a&gt; 기능 을 지원하려면 모든 구현이 필요 합니다. 기능이 &lt;code&gt;true&lt;/code&gt; 이면 외부 함수에 대한 참조는 오류입니다. 이러한 경우, 구현은 전화를 안 &lt;a href=&quot;xpathfunctionresolver&quot;&gt; &lt;code&gt;XPathFunctionResolver&lt;/code&gt; 를&lt;/a&gt; 하고 슬로우 할 필요 &lt;a href=&quot;xpathfunctionexception&quot;&gt; &lt;code&gt;XPathFunctionException&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8aa760386f371408297be0d8f28b90820b1c3647" translate="yes" xml:space="preserve">
          <source>All implementations are required to support the &lt;a href=&quot;../xmlconstants#FEATURE_SECURE_PROCESSING&quot;&gt;&lt;code&gt;XMLConstants.FEATURE_SECURE_PROCESSING&lt;/code&gt;&lt;/a&gt; feature. When the feature is:</source>
          <target state="translated">&lt;a href=&quot;../xmlconstants#FEATURE_SECURE_PROCESSING&quot;&gt; &lt;code&gt;XMLConstants.FEATURE_SECURE_PROCESSING&lt;/code&gt; &lt;/a&gt; 기능 을 지원하려면 모든 구현이 필요 합니다. 기능이 다음과 같은 경우 :</target>
        </trans-unit>
        <trans-unit id="7b943c5b22b105b54ede5510669cd41720361b38" translate="yes" xml:space="preserve">
          <source>All implementations of javax.imageio provide the following standard image format plug-ins:</source>
          <target state="translated">javax.imageio의 모든 구현은 다음과 같은 표준 이미지 형식 플러그인을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e8b574a85b29c6e9189902c4cf52737e7f0c7fd2" translate="yes" xml:space="preserve">
          <source>All implementations of this interface must be &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt;; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;MemoryAddress&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이 인터페이스의 모든 구현은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;값 기반&lt;/a&gt; 이어야합니다 . &lt;code&gt;MemoryAddress&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7bfb5223dcfe7c557fb2fa124b5a4c264c8a8205" translate="yes" xml:space="preserve">
          <source>All implementations of this interface must be &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt;; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;MemoryLayout&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이 인터페이스의 모든 구현은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;값 기반&lt;/a&gt; 이어야합니다 . &lt;code&gt;MemoryLayout&lt;/code&gt; 의 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f00f71ca7159ddefe36293d9853f32f0926b32ea" translate="yes" xml:space="preserve">
          <source>All implementations of this interface must be &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt;; use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on instances of &lt;code&gt;MemorySegment&lt;/code&gt; may have unpredictable results and should be avoided. The &lt;code&gt;equals&lt;/code&gt; method should be used for comparisons.</source>
          <target state="translated">이 인터페이스의 모든 구현은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;값 기반&lt;/a&gt; 이어야합니다 . &lt;code&gt;MemorySegment&lt;/code&gt; 인스턴스 에서 ID에 민감한 작업 (참조 같음 ( &lt;code&gt;==&lt;/code&gt; ), ID 해시 코드 또는 동기화 포함)을 사용 하면 예기치 않은 결과가 발생할 수 있으므로 피해야합니다. 비교 에는 &lt;code&gt;equals&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="2a37a3ea569179c1e28d6f546e19dc437512675c" translate="yes" xml:space="preserve">
          <source>All implementations of this interface must support Path objects representing files in the &lt;a href=&quot;../../../java.base/java/nio/file/filesystems#getDefault()&quot;&gt;default file system.&lt;/a&gt; It is recommended that implementations should support Path objects from any filesystem.</source>
          <target state="translated">이 인터페이스의 모든 구현은 &lt;a href=&quot;../../../java.base/java/nio/file/filesystems#getDefault()&quot;&gt;기본 파일 시스템의&lt;/a&gt; 파일을 나타내는 Path 개체를 지원해야합니다 . 구현시 모든 파일 시스템의 Path 개체를 지원하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f29a7b3f9d4f8cee64d489fd7d33457ccc121f23" translate="yes" xml:space="preserve">
          <source>All implementations that implement JAXP 1.5 or newer are required to support the &lt;a href=&quot;../xmlconstants#ACCESS_EXTERNAL_DTD&quot;&gt;&lt;code&gt;XMLConstants.ACCESS_EXTERNAL_DTD&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../xmlconstants#ACCESS_EXTERNAL_SCHEMA&quot;&gt;&lt;code&gt;XMLConstants.ACCESS_EXTERNAL_SCHEMA&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">JAXP 1.5 이상을 구현하는 모든 구현은 &lt;a href=&quot;../xmlconstants#ACCESS_EXTERNAL_DTD&quot;&gt; &lt;code&gt;XMLConstants.ACCESS_EXTERNAL_DTD&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../xmlconstants#ACCESS_EXTERNAL_SCHEMA&quot;&gt; &lt;code&gt;XMLConstants.ACCESS_EXTERNAL_SCHEMA&lt;/code&gt; &lt;/a&gt; 속성 을 지원해야 합니다.</target>
        </trans-unit>
        <trans-unit id="a6375d7242176fc42af1eb53e6109af16303286c" translate="yes" xml:space="preserve">
          <source>All implementations that implement JAXP 1.5 or newer are required to support the &lt;a href=&quot;../xmlconstants#ACCESS_EXTERNAL_DTD&quot;&gt;&lt;code&gt;XMLConstants.ACCESS_EXTERNAL_DTD&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../xmlconstants#ACCESS_EXTERNAL_STYLESHEET&quot;&gt;&lt;code&gt;XMLConstants.ACCESS_EXTERNAL_STYLESHEET&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">JAXP 1.5 이상을 구현하는 모든 구현은 &lt;a href=&quot;../xmlconstants#ACCESS_EXTERNAL_DTD&quot;&gt; &lt;code&gt;XMLConstants.ACCESS_EXTERNAL_DTD&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../xmlconstants#ACCESS_EXTERNAL_STYLESHEET&quot;&gt; &lt;code&gt;XMLConstants.ACCESS_EXTERNAL_STYLESHEET&lt;/code&gt; &lt;/a&gt; 속성 을 지원해야 합니다.</target>
        </trans-unit>
        <trans-unit id="07d97684531560b635771532070d310615ead82f" translate="yes" xml:space="preserve">
          <source>All implementations that implement JAXP 1.5 or newer are required to support the &lt;a href=&quot;../xmlconstants#ACCESS_EXTERNAL_DTD&quot;&gt;&lt;code&gt;XMLConstants.ACCESS_EXTERNAL_DTD&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">JAXP 1.5 이상을 구현하는 모든 구현은 &lt;a href=&quot;../xmlconstants#ACCESS_EXTERNAL_DTD&quot;&gt; &lt;code&gt;XMLConstants.ACCESS_EXTERNAL_DTD&lt;/code&gt; &lt;/a&gt; 속성 을 지원해야 합니다.</target>
        </trans-unit>
        <trans-unit id="bd19499d4dea9b9f0f3d895b35b3e20f07494810" translate="yes" xml:space="preserve">
          <source>All indices are specified in &lt;code&gt;char&lt;/code&gt; values (Unicode code units).</source>
          <target state="translated">모든 색인은 &lt;code&gt;char&lt;/code&gt; 값 (유니 코드 코드 단위)으로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="418ccc8182e033b613811bf6c1330617ee0e8d20" translate="yes" xml:space="preserve">
          <source>All init functions have a common parameter type list &lt;code&gt;(A...)&lt;/code&gt;, which the final loop handle will also have.</source>
          <target state="translated">모든 init 함수에는 최종 루프 핸들에도 포함 되는 공통 매개 변수 유형 목록 &lt;code&gt;(A...)&lt;/code&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8175e380771f65ae32c3beaa34adf56af6b9ed4" translate="yes" xml:space="preserve">
          <source>All input and output streams between the intermediate processes are not accessible. The &lt;a href=&quot;process#getOutputStream()&quot;&gt;&lt;code&gt;standard input&lt;/code&gt;&lt;/a&gt; of all processes except the first process are</source>
          <target state="translated">중간 프로세스 간의 모든 입력 및 출력 스트림에 액세스 할 수 없습니다. 첫 번째 프로세스를 제외한 모든 프로세스 의 &lt;a href=&quot;process#getOutputStream()&quot;&gt; &lt;code&gt;standard input&lt;/code&gt; &lt;/a&gt; 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e496530d75d67b79c4066c7e07e73f2da93f94b1" translate="yes" xml:space="preserve">
          <source>All instances of &lt;code&gt;MethodType&lt;/code&gt; are immutable. Two instances are completely interchangeable if they compare equal. Equality depends on pairwise correspondence of the return and parameter types and on nothing else.</source>
          <target state="translated">&lt;code&gt;MethodType&lt;/code&gt; 의 모든 인스턴스 는 변경할 수 없습니다. 두 인스턴스가 동일하게 비교되면 완전히 호환됩니다. 평등은 리턴 및 매개 변수 유형의 쌍별 통신에 의존하며 다른 것은 없습니다.</target>
        </trans-unit>
        <trans-unit id="c6f1d2145604daa5e8ec27f37fedaca9f6388a76" translate="yes" xml:space="preserve">
          <source>All items in a menu must belong to the class &lt;code&gt;MenuItem&lt;/code&gt;, or one of its subclasses.</source>
          <target state="translated">메뉴의 모든 항목은 &lt;code&gt;MenuItem&lt;/code&gt; 클래스 또는 하위 클래스 중 하나에 속해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b2a9bb06464c9d0b3025fd79845ccf1bf0cf58bc" translate="yes" xml:space="preserve">
          <source>All key generators share the concepts of a</source>
          <target state="translated">모든 주요 발전기는</target>
        </trans-unit>
        <trans-unit id="f7f8e453c9c57832f465a98b4b5a15b94469f615" translate="yes" xml:space="preserve">
          <source>All key pair generators share the concepts of a keysize and a source of randomness. The keysize is interpreted differently for different algorithms (e.g., in the case of the</source>
          <target state="translated">모든 키 페어 생성기는 키 크기의 개념과 무작위 소스를 공유합니다. 키 크기는 다른 알고리즘에 따라 다르게 해석됩니다 (예 :</target>
        </trans-unit>
        <trans-unit id="c5f68021c78bba6a8a8e79ee45b74432c965c67f" translate="yes" xml:space="preserve">
          <source>All keys inserted into a sorted map must implement the &lt;code&gt;Comparable&lt;/code&gt; interface (or be accepted by the specified comparator). Furthermore, all such keys must be &lt;em&gt;mutually comparable&lt;/em&gt;: &lt;code&gt;k1.compareTo(k2)&lt;/code&gt; (or &lt;code&gt;comparator.compare(k1, k2)&lt;/code&gt;) must not throw a &lt;code&gt;ClassCastException&lt;/code&gt; for any keys &lt;code&gt;k1&lt;/code&gt; and &lt;code&gt;k2&lt;/code&gt; in the sorted map. Attempts to violate this restriction will cause the offending method or constructor invocation to throw a &lt;code&gt;ClassCastException&lt;/code&gt;.</source>
          <target state="translated">정렬 된 맵에 삽입 된 모든 키는 &lt;code&gt;Comparable&lt;/code&gt; 인터페이스를 구현해야합니다 (또는 지정된 비교기가 승인 해야 함 ). 또한 이러한 모든 키는 &lt;em&gt;서로 비교 가능&lt;/em&gt; 해야합니다 . &lt;code&gt;k1.compareTo(k2)&lt;/code&gt; (또는 &lt;code&gt;comparator.compare(k1, k2)&lt;/code&gt; )는 정렬 된 맵의 키 &lt;code&gt;k1&lt;/code&gt; 및 &lt;code&gt;k2&lt;/code&gt; 에 대해 &lt;code&gt;ClassCastException&lt;/code&gt; 을 발생시키지 않아야합니다 . 이 제한을 위반하려고하면 문제가되는 메소드 또는 생성자 호출이 &lt;code&gt;ClassCastException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="c35853d70d4f2a627c6d5bd6cb00a3c2c4f0b797" translate="yes" xml:space="preserve">
          <source>All layouts have a size; layout size for value and padding layouts is always explicitly denoted; this means that a layout description always has the same size in bits, regardless of the platform in which it is used. For derived layouts, the size is computed as follows:</source>
          <target state="translated">모든 레이아웃에는 크기가 있습니다. 값 및 패딩 레이아웃의 레이아웃 크기는 항상 명시 적으로 표시됩니다. 이는 레이아웃 설명이 사용되는 플랫폼에 관계없이 항상 동일한 크기 (비트 단위)를 가짐을 의미합니다. 파생 된 레이아웃의 경우 크기는 다음과 같이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="923518859e18050030f48cb37ac8122ddfe1f904" translate="yes" xml:space="preserve">
          <source>All letters 'A' to 'Z' and 'a' to 'z' are reserved as pattern letters. The characters '#', '{' and '}' are reserved for future use. The characters '[' and ']' indicate optional patterns. The following pattern letters are defined:</source>
          <target state="translated">모든 문자 'A'~ 'Z'및 'a'~ 'z'는 패턴 문자로 예약되어 있습니다. '#', '{'및 '}'문자는 나중에 사용하기 위해 예약되어 있습니다. 문자 '['및 ']'는 선택적 패턴을 나타냅니다. 다음과 같은 패턴 문자가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="bdaf1bd028d0de65cdf13a3f7898625cc5f72a4b" translate="yes" xml:space="preserve">
          <source>All letters 'A' to 'Z' and 'a' to 'z' are reserved as pattern letters. The following pattern letters are defined:</source>
          <target state="translated">모든 문자 'A'~ 'Z'및 'a'~ 'z'는 패턴 문자로 예약되어 있습니다. 다음과 같은 패턴 문자가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="a10359baed8cfd3eb8a7b0aba9d25037e17363e4" translate="yes" xml:space="preserve">
          <source>All literal strings and string-valued constant expressions are interned. String literals are defined in section 3.10.5 of the</source>
          <target state="translated">모든 리터럴 문자열과 문자열 값 상수 표현식이 인터 닝됩니다. 문자열 리터럴은 섹션 3.10.5에서 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="72f3f1478ab3480b16731774ba4676914bc1bd17" translate="yes" xml:space="preserve">
          <source>All maximum value space constraints listed for the fields in the table above are checked by factory methods, &lt;a href=&quot;datatypefactory&quot;&gt;&lt;code&gt;DatatypeFactory&lt;/code&gt;&lt;/a&gt;, setter methods and parse methods of this class. &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown when a parameter's value is outside the value constraint for the field or if the composite values constitute an invalid XMLGregorianCalendar instance (for example, if the 31st of June is specified).</source>
          <target state="translated">위 표의 필드에 대해 나열된 모든 최대 값 공간 제약 조건 은이 클래스의 팩토리 메서드, &lt;a href=&quot;datatypefactory&quot;&gt; &lt;code&gt;DatatypeFactory&lt;/code&gt; &lt;/a&gt; , setter 메서드 및 구문 분석 메서드에 의해 확인됩니다 . &lt;code&gt;IllegalArgumentException&lt;/code&gt; 은 매개 변수의 값이 필드의 값 제약 조건을 벗어나거나 복합 값이 잘못된 XMLGregorianCalendar 인스턴스를 구성하는 경우 (예 : 6 월 31 일이 지정된 경우) throw됩니다.</target>
        </trans-unit>
        <trans-unit id="cd5a9093f9fddcc8e42860d78f0e72c89ff2051f" translate="yes" xml:space="preserve">
          <source>All methods adhere to the above triggering, execution, and exceptional completion specifications (which are not repeated in individual method specifications). Additionally, while arguments used to pass a completion result (that is, for parameters of type &lt;code&gt;T&lt;/code&gt;) for methods accepting them may be null, passing a null value for any other parameter will result in a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">모든 메소드는 위의 트리거링, 실행 및 예외적 인 완료 스펙 (개별 메소드 스펙에서 반복되지 않음)을 준수합니다. 또한 인수를 허용하는 메소드에 대한 완료 결과 (즉, &lt;code&gt;T&lt;/code&gt; 유형의 매개 변수)를 전달하는 데 사용되는 인수는 널일 수 있지만 다른 매개 변수에 널값을 전달하면 &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c11dd890515b137dee8a92754dfb1d31d3d8bd9e" translate="yes" xml:space="preserve">
          <source>All methods and constructors for this class throw &lt;code&gt;NullPointerException&lt;/code&gt; when passed a &lt;code&gt;null&lt;/code&gt; object reference for any input parameter.</source>
          <target state="translated">이 클래스의 모든 메소드와 생성자는 입력 매개 변수에 대해 &lt;code&gt;null&lt;/code&gt; 오브젝트 참조를 전달하면 &lt;code&gt;NullPointerException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="d7f98f168ff5d41f1af95acdd0b26949a7823a48" translate="yes" xml:space="preserve">
          <source>All methods and constructors in this class throw &lt;code&gt;NullPointerException&lt;/code&gt; when passed a null object reference for any input parameter. BigInteger must support values in the range -2&lt;sup&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/sup&gt; (exclusive) to +2&lt;sup&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/sup&gt; (exclusive) and may support values outside of that range. An &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown when a BigInteger constructor or method would generate a value outside of the supported range. The range of probable prime values is limited and may be less than the full supported positive range of &lt;code&gt;BigInteger&lt;/code&gt;. The range must be at least 1 to 2&lt;sup&gt;500000000&lt;/sup&gt;.</source>
          <target state="translated">이 클래스의 모든 메서드 및 생성자는 입력 매개 변수에 대해 null 개체 참조를 전달할 때 &lt;code&gt;NullPointerException&lt;/code&gt; 을 발생시킵니다. BigInteger는 -2 &lt;sup&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/sup&gt; (제외)에서 +2 &lt;sup&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/sup&gt; (제외) 범위의 값을 지원해야하며 해당 범위를 벗어난 값을 지원할 수 있습니다. &lt;code&gt;ArithmeticException&lt;/code&gt; BigInteger의 생성자 또는 방법은 지원되는 범위의 값 밖에 생성 할 때 발생한다. 가능한 소수 값의 범위는 제한되며 &lt;code&gt;BigInteger&lt;/code&gt; 의 전체 지원되는 양수 범위보다 작을 수 있습니다 . 범위는 1 ~ &lt;sup&gt;2500000000&lt;/sup&gt; 이상이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="ddb2b8177f719b28a29b4b5faddc7c01fef19014" translate="yes" xml:space="preserve">
          <source>All methods and constructors in this class throw &lt;code&gt;NullPointerException&lt;/code&gt; when passed a null object reference for any input parameter. BigInteger must support values in the range -2&lt;sup&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/sup&gt; (exclusive) to +2&lt;sup&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/sup&gt; (exclusive) and may support values outside of that range. The range of probable prime values is limited and may be less than the full supported positive range of &lt;code&gt;BigInteger&lt;/code&gt;. The range must be at least 1 to 2&lt;sup&gt;500000000&lt;/sup&gt;.</source>
          <target state="translated">이 클래스의 모든 메소드와 생성자는 입력 매개 변수에 대해 널 오브젝트 참조를 전달하면 &lt;code&gt;NullPointerException&lt;/code&gt; 을 발생시킵니다. BigInteger는 -2 &lt;sup&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/sup&gt; (제외)-+2 &lt;sup&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/sup&gt; (제외) 범위의 값을 지원해야하며 해당 범위 밖의 값을 지원할 수 있습니다. 가능한 소수 값의 범위는 제한적이며 &lt;code&gt;BigInteger&lt;/code&gt; 의 지원되는 양의 범위보다 작을 수 있습니다 . 범위는 1-2 &lt;sup&gt;500000000&lt;/sup&gt; 이상이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="4fa6bc68ccce7b20d4170bfbde6e2d5fe9c69daa" translate="yes" xml:space="preserve">
          <source>All methods define whether they accept or return &lt;code&gt;null&lt;/code&gt; in the Javadoc. Typically this is expressed as &lt;code&gt;&quot;not null&quot;&lt;/code&gt;. If a &lt;code&gt;null&lt;/code&gt; parameter is used where it is not allowed, a &lt;code&gt;java.lang.NullPointerException&lt;/code&gt; is thrown. If a &lt;code&gt;null&lt;/code&gt; parameters is passed to a method that throws other exceptions, such as &lt;code&gt;java.io.IOException&lt;/code&gt;, the &lt;code&gt;java.lang.NullPointerException&lt;/code&gt; takes precedence, unless the Javadoc for the method explicitly states how &lt;code&gt;null&lt;/code&gt; is handled, i.e. by throwing &lt;code&gt;java.lang.IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">모든 메소드 는 Javadoc에서 &lt;code&gt;null&lt;/code&gt; 을 허용할지 또는 반환 할지를 정의합니다 . 일반적으로 이것은 &lt;code&gt;&quot;not null&quot;&lt;/code&gt; 로 표현됩니다 . 경우 &lt;code&gt;null&lt;/code&gt; 이 허용되지 않는 경우 매개 변수를 사용하는 &lt;code&gt;java.lang.NullPointerException&lt;/code&gt; 이가 발생합니다. 경우 &lt;code&gt;null&lt;/code&gt; 매개 변수가 같은 다른 예외가 발생하는 방법에 전달되는 &lt;code&gt;java.io.IOException&lt;/code&gt; 의 &lt;code&gt;java.lang.NullPointerException&lt;/code&gt; 이는 방법에 대한 Javadoc을 명시 적 방법을 명시하지 않는 한, 우선합니다 &lt;code&gt;null&lt;/code&gt; 던져, 처리, 즉 &lt;code&gt;java.lang.IllegalArgumentException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b651de6f6f7d41bd9ef3598f5f4aa6d55d9d85f0" translate="yes" xml:space="preserve">
          <source>All methods first check to see if the actual &lt;code&gt;modCount&lt;/code&gt; of the backing list is equal to its expected value, and throw a &lt;code&gt;ConcurrentModificationException&lt;/code&gt; if it is not.</source>
          <target state="translated">모든 메소드는 먼저 지원 목록 의 실제 &lt;code&gt;modCount&lt;/code&gt; 가 예상 값과 같은지 확인하고 그렇지 않은 경우 &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="9be955c8923802d8ad365eab037c237430967035" translate="yes" xml:space="preserve">
          <source>All methods in this class accept &lt;code&gt;null&lt;/code&gt; values for keys and values. However, null keys will never will be present in HTTP request headers, and will not be output/sent in response headers. Null values can be represented as either a null entry for the key (i.e. the list is null) or where the key has a list, but one (or more) of the list's values is null. Null values are output as a header line containing the key but no associated value.</source>
          <target state="translated">이 클래스의 모든 메서드는 키와 값에 대해 &lt;code&gt;null&lt;/code&gt; 값을 허용 합니다. 그러나 null 키는 HTTP 요청 헤더에 절대 존재하지 않으며 응답 헤더에 출력 / 전송되지 않습니다. Null 값은 키에 대한 null 항목 (즉, 목록이 null 임) 또는 키에 목록이 있지만 목록 값 중 하나 (또는 ​​그 이상)가 null 인 경우로 나타낼 수 있습니다. Null 값은 키를 포함하지만 연관된 값이없는 헤더 행으로 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="d702d10cc4c8262f8d712f634d6178586b4d7bd3" translate="yes" xml:space="preserve">
          <source>All methods in this interface might throw a SecurityException if a security exception occurs.</source>
          <target state="translated">보안 예외가 발생하면이 인터페이스의 모든 메소드에서 SecurityException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2bb2aa00dad5c01cece9b8aa19557210208e7671" translate="yes" xml:space="preserve">
          <source>All methods in this interface might throw a SecurityException.</source>
          <target state="translated">이 인터페이스의 모든 메소드는 SecurityException을 발생시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba5d910af4c0b85f22763779845ff35b7af0b030" translate="yes" xml:space="preserve">
          <source>All methods on Logger are multi-thread safe.</source>
          <target state="translated">Logger의 모든 메소드는 다중 스레드 안전합니다.</target>
        </trans-unit>
        <trans-unit id="8e97163d3b1e916f1310966097afda06edbf57f4" translate="yes" xml:space="preserve">
          <source>All methods on the &lt;code&gt;Array&lt;/code&gt; interface must be fully implemented if the JDBC driver supports the data type.</source>
          <target state="translated">JDBC 드라이버가 데이터 유형을 지원하는 경우 &lt;code&gt;Array&lt;/code&gt; 인터페이스의 모든 메소드 가 완전히 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="63db3d132fcde8a862dfc54d0b8c0c39a77b05bc" translate="yes" xml:space="preserve">
          <source>All methods on the &lt;code&gt;Blob&lt;/code&gt; interface must be fully implemented if the JDBC driver supports the data type.</source>
          <target state="translated">JDBC 드라이버가 데이터 유형을 지원하는 경우 &lt;code&gt;Blob&lt;/code&gt; 인터페이스의 모든 메소드 가 완전히 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a0851447e70ff41583db4da72e0c557d132875a0" translate="yes" xml:space="preserve">
          <source>All methods on the &lt;code&gt;Clob&lt;/code&gt; interface must be fully implemented if the JDBC driver supports the data type.</source>
          <target state="translated">JDBC 드라이버가 데이터 유형을 지원하는 경우 &lt;code&gt;Clob&lt;/code&gt; 인터페이스의 모든 메소드 가 완전히 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a968995a8341c7813edfce1a6464b941d688ea5f" translate="yes" xml:space="preserve">
          <source>All methods on the &lt;code&gt;NClob&lt;/code&gt; interface must be fully implemented if the JDBC driver supports the data type.</source>
          <target state="translated">JDBC 드라이버가 데이터 유형을 지원하는 경우 &lt;code&gt;NClob&lt;/code&gt; 인터페이스의 모든 메소드 가 완전히 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="b1f876287a66c47a8e66def20c1175ed9bb4fb5f" translate="yes" xml:space="preserve">
          <source>All methods on the &lt;code&gt;Ref&lt;/code&gt; interface must be fully implemented if the JDBC driver supports the data type.</source>
          <target state="translated">JDBC 드라이버가 데이터 유형을 지원하는 경우 &lt;code&gt;Ref&lt;/code&gt; 인터페이스의 모든 메소드 가 완전히 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="c80b34aed85cd2605a76ad6f9e8f8e1e8da70c70" translate="yes" xml:space="preserve">
          <source>All methods on the &lt;code&gt;RowId&lt;/code&gt; interface must be fully implemented if the JDBC driver supports the data type.</source>
          <target state="translated">JDBC 드라이버가 데이터 유형을 지원하는 경우 &lt;code&gt;RowId&lt;/code&gt; 인터페이스의 모든 메소드는 완전히 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="26d68de04b17b8adb29e9936db9b2e5c95a9a6e9" translate="yes" xml:space="preserve">
          <source>All methods on the &lt;code&gt;SQLXML&lt;/code&gt; interface must be fully implemented if the JDBC driver supports the data type.</source>
          <target state="translated">JDBC 드라이버가 데이터 유형을 지원하는 경우 &lt;code&gt;SQLXML&lt;/code&gt; 인터페이스의 모든 메소드 가 완전히 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="9a072d134297f7ccdeec69331c88c51e2b36926e" translate="yes" xml:space="preserve">
          <source>All methods on the &lt;code&gt;Struct&lt;/code&gt; interface must be fully implemented if the JDBC driver supports the data type.</source>
          <target state="translated">&lt;code&gt;Struct&lt;/code&gt; 인터페이스의 모든 메소드 는 JDBC 드라이버가 데이터 유형을 지원하는 경우 완전히 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="76a5af411b37dcee11d91744a2db9658952f55fe" translate="yes" xml:space="preserve">
          <source>All methods on the LogManager object are multi-thread safe.</source>
          <target state="translated">LogManager 객체의 모든 메소드는 다중 스레드 안전합니다.</target>
        </trans-unit>
        <trans-unit id="88f468470142660d4529763d93539d46450b4c75" translate="yes" xml:space="preserve">
          <source>All methods on the execution stack are from classes defined using the system class loader or one of its ancestors.</source>
          <target state="translated">실행 스택의 모든 메소드는 시스템 클래스 로더 또는 해당 상위 항목 중 하나를 사용하여 정의 된 클래스에서 온 것입니다.</target>
        </trans-unit>
        <trans-unit id="40f96797ca6ed87401c9d8ee9ed02496523a986f" translate="yes" xml:space="preserve">
          <source>All methods on the execution stack up to the first &quot;privileged&quot; caller (see &lt;a href=&quot;../security/accesscontroller#doPrivileged-java.security.PrivilegedAction-&quot;&gt;&lt;code&gt;AccessController.doPrivileged(java.security.PrivilegedAction&amp;lt;T&amp;gt;)&lt;/code&gt;&lt;/a&gt;) are from classes defined using the system class loader or one of its ancestors.</source>
          <target state="translated">첫 번째 &quot;특권&quot;호출자 ( &lt;a href=&quot;../security/accesscontroller#doPrivileged-java.security.PrivilegedAction-&quot;&gt; &lt;code&gt;AccessController.doPrivileged(java.security.PrivilegedAction&amp;lt;T&amp;gt;)&lt;/code&gt; &lt;/a&gt; 참조)까지 실행 스택의 모든 메소드 는 시스템 클래스 로더 또는 해당 상위 항목 중 하나를 사용하여 정의 된 클래스에서 온 것입니다.</target>
        </trans-unit>
        <trans-unit id="cdbef3e29226d45d25b93bae02d0b37288061b53" translate="yes" xml:space="preserve">
          <source>All methods that request authentication have a default implementation that fails.</source>
          <target state="translated">인증을 요청하는 모든 메소드에는 기본 구현이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="b1aa6027831da0ebc5324f16b0e629144705b462" translate="yes" xml:space="preserve">
          <source>All naming operations are relative to a context. The initial context implements the Context interface and provides the starting point for resolution of names.</source>
          <target state="translated">모든 명명 작업은 컨텍스트와 관련이 있습니다. 초기 컨텍스트는 컨텍스트 인터페이스를 구현하고 이름 확인을위한 시작점을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3914ffb4551e50182dc9783a265d585991c40302" translate="yes" xml:space="preserve">
          <source>All non-alphanumeric characters (&lt;code&gt;[^A-Za-z0-9]&lt;/code&gt;) in the module name are replaced with a dot (&lt;code&gt;&quot;.&quot;&lt;/code&gt;), all repeating dots are replaced with one dot, and all leading and trailing dots are removed.</source>
          <target state="translated">모듈 이름에서 영숫자가 아닌 모든 문자 ( &lt;code&gt;[^A-Za-z0-9]&lt;/code&gt; )는 점 ( &lt;code&gt;&quot;.&quot;&lt;/code&gt; )으로 대체되고 모든 반복 점은 하나의 점으로 대체되며 모든 선행 및 후행 점은 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="0977b3379f345d1819f16401da055975f71b091e" translate="yes" xml:space="preserve">
          <source>All non-init functions have a common parameter type list &lt;code&gt;(V... A...)&lt;/code&gt;, of (non-&lt;code&gt;void&lt;/code&gt;) iteration variables &lt;code&gt;V&lt;/code&gt; followed by loop parameters.</source>
          <target state="translated">모든 비 초기화하기 기능은 공통 파라미터 유형 목록이 &lt;code&gt;(V... A...)&lt;/code&gt; (비의, &lt;code&gt;void&lt;/code&gt; ) 반복 변수 &lt;code&gt;V&lt;/code&gt; 루프 파라미터 하였다.</target>
        </trans-unit>
        <trans-unit id="2625999a56dbeb04d81faaaef2c32d067ca8abae" translate="yes" xml:space="preserve">
          <source>All non-mentioned characters are at the end of the collation order.</source>
          <target state="translated">언급되지 않은 모든 문자는 데이터 정렬 순서의 끝에 있습니다.</target>
        </trans-unit>
        <trans-unit id="3164358381faec94021314197c7ec6fac44c8a6e" translate="yes" xml:space="preserve">
          <source>All non-public interfaces must be in the same package and module, defined by the specified class loader and the module of the non-public interfaces can access all of the interface types; otherwise, it would not be possible for the proxy class to implement all of the interfaces, regardless of what package it is defined in.</source>
          <target state="translated">모든 비공개 인터페이스는 지정된 클래스 로더에 의해 정의 된 동일한 패키지 및 모듈에 있어야하며 비공개 인터페이스의 모듈은 모든 인터페이스 유형에 액세스 할 수 있습니다. 그렇지 않으면 정의 된 패키지에 관계없이 프록시 클래스가 모든 인터페이스를 구현할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ffb144667c9048b39032ef53e2588e8ec336f6c3" translate="yes" xml:space="preserve">
          <source>All non-public interfaces must be in the same package; otherwise, it would not be possible for the proxy class to implement all of the interfaces, regardless of what package it is defined in.</source>
          <target state="translated">모든 비 공용 인터페이스는 동일한 패키지에 있어야합니다. 그렇지 않으면 프록시 클래스가 정의 된 패키지에 관계없이 모든 인터페이스를 구현할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4e9513c09c6003c428fba0fb37e511903723e83a" translate="yes" xml:space="preserve">
          <source>All of &lt;code&gt;Class&lt;/code&gt; objects in the given &lt;code&gt;interfaces&lt;/code&gt; array must represent interfaces, not classes or primitive types.</source>
          <target state="translated">주어진 &lt;code&gt;interfaces&lt;/code&gt; 배열 의 모든 &lt;code&gt;Class&lt;/code&gt; 객체는 클래스 나 기본 유형이 아닌 인터페이스를 나타내야합니다.</target>
        </trans-unit>
        <trans-unit id="e8adb3a60e7e306cffb00a22eb577f8094c41614" translate="yes" xml:space="preserve">
          <source>All of FINE, FINER, and FINEST are intended for relatively detailed tracing. The exact meaning of the three levels will vary between subsystems, but in general, FINEST should be used for the most voluminous detailed output, FINER for somewhat less detailed output, and FINE for the lowest volume (and most important) messages.</source>
          <target state="translated">FINE, FINER 및 FINEST는 모두 비교적 자세한 추적을위한 것입니다. 세 가지 수준의 정확한 의미는 하위 시스템마다 다르지만 일반적으로 FINEST는 가장 방대한 세부 출력에, FINER는 다소 세부적인 출력에, FINE은 가장 작은 (가장 중요한) 메시지에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="23ade9879deabada30e535f137ddc690f5965d22" translate="yes" xml:space="preserve">
          <source>All of the &lt;code&gt;Class&lt;/code&gt; objects in the &lt;code&gt;interfaces&lt;/code&gt; array must represent interfaces, not classes or primitive types.</source>
          <target state="translated">&lt;code&gt;interfaces&lt;/code&gt; 배열 의 모든 &lt;code&gt;Class&lt;/code&gt; 객체는 클래스 또는 기본 유형이 아닌 인터페이스를 나타내야합니다.</target>
        </trans-unit>
        <trans-unit id="66b4d73fa829021f6d5a49ff87630e727110b468" translate="yes" xml:space="preserve">
          <source>All of the &lt;code&gt;add&lt;/code&gt; methods allow &lt;code&gt;null&lt;/code&gt; arguments. If the first argument is &lt;code&gt;null&lt;/code&gt;, the second argument is returned. If the first argument is not &lt;code&gt;null&lt;/code&gt; and the second argument is &lt;code&gt;null&lt;/code&gt;, the first argument is returned. If both arguments are &lt;code&gt;non-null&lt;/code&gt;, a new &lt;code&gt;AWTEventMulticaster&lt;/code&gt; is created using the two arguments and returned.</source>
          <target state="translated">모든 &lt;code&gt;add&lt;/code&gt; 메소드는 &lt;code&gt;null&lt;/code&gt; 인수를 허용 합니다. 첫 번째 인수가 &lt;code&gt;null&lt;/code&gt; 이면 두 번째 인수가 반환됩니다. 첫 번째 인수가 &lt;code&gt;null&lt;/code&gt; 이 아니고 두 번째 인수가 &lt;code&gt;null&lt;/code&gt; 인 경우 첫 번째 인수가 반환됩니다. 두 인수가 모두 &lt;code&gt;non-null&lt;/code&gt; 이 아닌 경우 두 인수를 사용하여 새 &lt;code&gt;AWTEventMulticaster&lt;/code&gt; 가 생성되고 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="70b01c46b960ffea016e99b1cd05646ed8334340" translate="yes" xml:space="preserve">
          <source>All of the ProtectionDomains (static and newly instantiated) are combined into a new array. The ProtectionDomains from the &lt;code&gt;assignedDomains&lt;/code&gt; array are appended to this new array, and the result is returned.</source>
          <target state="translated">모든 ProtectionDomain (정적 및 새로 인스턴스화 됨)이 새 배열로 결합됩니다. &lt;code&gt;assignedDomains&lt;/code&gt; 배열 의 ProtectionDomains 가이 새 배열에 추가되고 결과가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="10363aeef265d2a51583262ef079c2b783841026" translate="yes" xml:space="preserve">
          <source>All of the collected parameter lists must be effectively identical.</source>
          <target state="translated">수집 된 모든 매개 변수 목록은 사실상 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="c2ae5189593cd502503b7d1026c2920cbc318555" translate="yes" xml:space="preserve">
          <source>All of the data arrays.</source>
          <target state="translated">모든 데이터 배열.</target>
        </trans-unit>
        <trans-unit id="17b09e31f186c3655fd9d66216738dd9bd6641de" translate="yes" xml:space="preserve">
          <source>All of the input sources, including the public identifier, system identifier, byte stream, and character stream, are &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">공용 식별자, 시스템 식별자, 바이트 스트림 및 문자 스트림을 포함한 모든 입력 소스는 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="00d31f034f30bda7a1d65837d6d001bf488ba94a" translate="yes" xml:space="preserve">
          <source>All of the install methods provided by &lt;code&gt;LookAndFeel&lt;/code&gt; need to access the defaults if the value of the property being changed is &lt;code&gt;null&lt;/code&gt; or a &lt;code&gt;UIResource&lt;/code&gt;. For example, installing the font does the following:</source>
          <target state="translated">에서 제공하는 설치 방법은 모두 &lt;code&gt;LookAndFeel&lt;/code&gt; 변경되는 속성 값 인 경우 필요가 디폴트에 액세스 할 수 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;UIResource&lt;/code&gt; 인터페이스 . 예를 들어 글꼴을 설치하면 다음이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="b7983cdbbb103644804d92f221efc77397f0dbaf" translate="yes" xml:space="preserve">
          <source>All of the interface types must be visible by name through the specified class loader. In other words, for class loader &lt;code&gt;cl&lt;/code&gt; and every interface &lt;code&gt;i&lt;/code&gt;, the following expression must be true:</source>
          <target state="translated">지정된 클래스 로더를 통해 모든 인터페이스 유형을 이름으로 볼 수 있어야합니다. 즉, 클래스 로더 &lt;code&gt;cl&lt;/code&gt; 및 모든 인터페이스 &lt;code&gt;i&lt;/code&gt; 에 대해 다음 표현식은 true 여야합니다.</target>
        </trans-unit>
        <trans-unit id="e95d3c836aafe841199e6e8d44b310ce6671fabe" translate="yes" xml:space="preserve">
          <source>All of the methods defined in this class are safe for use by multiple concurrent threads.</source>
          <target state="translated">이 클래스에 정의 된 모든 메소드는 여러 개의 동시 스레드에서 사용하기에 안전합니다.</target>
        </trans-unit>
        <trans-unit id="8be7aa2729f05bf93d281de418392fb18f64d3a6" translate="yes" xml:space="preserve">
          <source>All of the methods in this class are safe for use by multiple concurrent threads.</source>
          <target state="translated">이 클래스의 모든 메소드는 여러 개의 동시 스레드에서 사용하기에 안전합니다.</target>
        </trans-unit>
        <trans-unit id="380f0f7cb852e52252c1f4cf92128664f4c9c830" translate="yes" xml:space="preserve">
          <source>All of the methods that modify preferences data are permitted to operate asynchronously; they may return immediately, and changes will eventually propagate to the persistent backing store with an implementation-dependent delay. The &lt;code&gt;flush&lt;/code&gt; method may be used to synchronously force updates to the backing store. Normal termination of the Java Virtual Machine will</source>
          <target state="translated">기본 설정 데이터를 수정하는 모든 메소드는 비동기 적으로 작동 할 수 있습니다. 즉시 반환 될 수 있으며 변경 사항은 구현에 따라 지연되는 영구 백업 저장소로 전파됩니다. &lt;code&gt;flush&lt;/code&gt; 에있어서, 상기 백킹 스토어에 동기 힘 업데이트하는데 사용될 수있다. Java Virtual Machine이 정상적으로 종료되면</target>
        </trans-unit>
        <trans-unit id="363c07f59031bbe3140fefdb870ce2ce67d42f96" translate="yes" xml:space="preserve">
          <source>All of the methods that read preferences from a &lt;code&gt;Preferences&lt;/code&gt; object require the invoker to provide a default value. The default value is returned if no value has been previously set</source>
          <target state="translated">&lt;code&gt;Preferences&lt;/code&gt; 객체 에서 기본 설정 을 읽는 모든 메서드 는 호출자가 기본값을 제공해야합니다. 이전에 값을 설정하지 않은 경우 기본값이 반환됩니다</target>
        </trans-unit>
        <trans-unit id="ec2fb1ea402182e5223f721ce517238970788528" translate="yes" xml:space="preserve">
          <source>All of the newly instantiated ProtectionDomains are combined into a new array. The ProtectionDomains from the</source>
          <target state="translated">새로 인스턴스화 된 모든 ProtectionDomain이 새 배열로 결합됩니다. 의 ProtectionDomains</target>
        </trans-unit>
        <trans-unit id="84ebb415f51fb8e2dc0d78039f349c2c8a2383c7" translate="yes" xml:space="preserve">
          <source>All of the operations perform as could be expected for a doubly-linked list. Operations that index into the list will traverse the list from the beginning or the end, whichever is closer to the specified index.</source>
          <target state="translated">모든 작업은 이중 연결 목록에 대해 예상대로 수행됩니다. 목록에 색인을 생성하는 작업은 목록을 시작 또는 끝에서 지정된 색인에 더 가까운 쪽을 순회합니다.</target>
        </trans-unit>
        <trans-unit id="ab4513f450354bf892be367b7d9d120434f43e25" translate="yes" xml:space="preserve">
          <source>All of the raw source color components need to be multiplied by the alpha in the &lt;code&gt;AlphaComposite&lt;/code&gt; instance. Additionally, if the source was not in premultiplied form then the color components also need to be multiplied by the source alpha. Thus, the equation for producing the source color components for the Porter and Duff equation depends on whether the source pixels are premultiplied or not:</source>
          <target state="translated">원시 소스 색상의 모든 구성 요소는의 알파 곱해야 &lt;code&gt;AlphaComposite&lt;/code&gt; 인스턴스입니다. 또한 소스가 미리 곱해진 형식이 아닌 경우 색상 구성 요소에도 소스 알파를 곱해야합니다. 따라서 Porter 및 Duff 방정식에 대한 소스 색상 구성 요소를 생성하는 방정식은 소스 픽셀이 미리 곱해 졌는지 여부에 따라 달라집니다.</target>
        </trans-unit>
        <trans-unit id="0906e9cc953de44f14eca77af09054b8af0f7aa8" translate="yes" xml:space="preserve">
          <source>All of the remote addresses for the given association, or an empty &lt;code&gt;Set&lt;/code&gt; if the association has been shutdown</source>
          <target state="translated">주어진 연결에 대한 모든 원격 주소 또는 연결이 종료 된 경우 빈 &lt;code&gt;Set&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e49b78221d966bf8843e8ea196d0a7830bfda3d5" translate="yes" xml:space="preserve">
          <source>All of the remote addresses to which this channel's socket is connected, or an empty &lt;code&gt;Set&lt;/code&gt; if the channel's socket is not connected</source>
          <target state="translated">이 채널의 소켓이 연결된 모든 원격 주소 또는 채널의 소켓이 연결되지 않은 경우 빈 &lt;code&gt;Set&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1eef81608f59240bca98ee04f83c79b05b8e53ee" translate="yes" xml:space="preserve">
          <source>All of the strings in the array will be internalized. If the raw name has a prefix that has not been declared, then the return value will be null.</source>
          <target state="translated">배열의 모든 문자열이 내부화됩니다. 원시 이름에 선언되지 않은 접두사가있는 경우 반환 값은 null이됩니다.</target>
        </trans-unit>
        <trans-unit id="ffa8f4049ea87533405b4512f339e9771a1e83be" translate="yes" xml:space="preserve">
          <source>All of the types referenced by all public method signatures of the specified interfaces and those inherited by their superinterfaces must be visible by name through the specified class loader.</source>
          <target state="translated">지정된 인터페이스의 모든 공용 메서드 서명이 참조하는 모든 유형과 해당 수퍼 인터페이스에서 상속 된 유형은 지정된 클래스 로더를 통해 이름으로 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="422f5ea3de30f4a6bea070be6ae4c5c434a1b93d" translate="yes" xml:space="preserve">
          <source>All of the units in this class have an estimated duration. Days vary due to daylight saving time, while months have different lengths.</source>
          <target state="translated">이 클래스의 모든 유닛에는 예상 지속 시간이 있습니다. 날짜는 일광 절약 시간제에 따라 다르지만 달의 길이는 다릅니다.</target>
        </trans-unit>
        <trans-unit id="515a0f098ec2318fa18f40e5c4246f849bd5caf3" translate="yes" xml:space="preserve">
          <source>All of these classes extend &lt;a href=&quot;hashattributeset&quot;&gt;HashAttributeSet&lt;/a&gt; and enforce the restriction that the attribute set is only allowed to contain the corresponding kind of attribute.</source>
          <target state="translated">이러한 모든 클래스는 &lt;a href=&quot;hashattributeset&quot;&gt;HashAttributeSet을&lt;/a&gt; 확장 하고 속성 집합에 해당하는 종류의 속성 만 포함 할 수 있도록 제한합니다.</target>
        </trans-unit>
        <trans-unit id="c0d5b5776284209d5c6a5d3ae47c2cad634d7f2e" translate="yes" xml:space="preserve">
          <source>All of these standard properties are optional. XMLReader implementations are not required to support them.</source>
          <target state="translated">이러한 모든 표준 속성은 선택 사항입니다. XMLReader 구현은이를 지원하는 데 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="045aac36cce26fc279d17f9de632f99fa17769a3" translate="yes" xml:space="preserve">
          <source>All operations that are to be used in a rendering-independent chain must implement ContextualRenderedImageFactory.</source>
          <target state="translated">렌더링 독립적 체인에서 사용되는 모든 작업은 ContextualRenderedImageFactory를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="2cc1cf9f75da034f94dbaf850197c4fef4580a2f" translate="yes" xml:space="preserve">
          <source>All or part of a mapped byte buffer may become inaccessible at any time, for example if the mapped file is truncated. An attempt to access an inaccessible region of a mapped byte buffer will not change the buffer's content and will cause an unspecified exception to be thrown either at the time of the access or at some later time. It is therefore strongly recommended that appropriate precautions be taken to avoid the manipulation of a mapped file by this program, or by a concurrently running program, except to read or write the file's content.</source>
          <target state="translated">예를 들어 매핑 된 파일이 잘린 경우 매핑 된 바이트 버퍼의 일부 또는 전부에 액세스 할 수 없게됩니다. 매핑 된 바이트 버퍼의 액세스 할 수없는 영역에 액세스하려고하면 버퍼의 내용이 변경되지 않으며 액세스 시점 또는 나중에 지정되지 않은 예외가 발생합니다. 따라서 파일 내용을 읽거나 쓰는 경우를 제외하고이 프로그램 또는 동시에 실행중인 프로그램에서 매핑 된 파일을 조작하지 않도록 적절한 예방 조치를 취하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="8a9a5d581b872357672903834a8a56dd4758220f" translate="yes" xml:space="preserve">
          <source>All other &lt;code&gt;ChronoField&lt;/code&gt; instances will return false.</source>
          <target state="translated">다른 모든 &lt;code&gt;ChronoField&lt;/code&gt; 인스턴스는 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="26b43844ef35aaaf5a75622ac2daadd84987bcd9" translate="yes" xml:space="preserve">
          <source>All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">다른 모든 &lt;code&gt;ChronoField&lt;/code&gt; 인스턴스는 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="e5ecd460a14bffca69194623503e491a2b38dde9" translate="yes" xml:space="preserve">
          <source>All other &lt;code&gt;ChronoUnit&lt;/code&gt; instances will return false.</source>
          <target state="translated">다른 모든 &lt;code&gt;ChronoUnit&lt;/code&gt; 인스턴스는 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="018164f166177f0cc3a0df6533050ae1fb82b97b" translate="yes" xml:space="preserve">
          <source>All other &lt;code&gt;ChronoUnit&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">다른 모든 &lt;code&gt;ChronoUnit&lt;/code&gt; 인스턴스는 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="c771bf25c17c7585c2f68199cafa86277462aa4c" translate="yes" xml:space="preserve">
          <source>All other IDs are parsed as region-based zone IDs. Region IDs must match the regular expression &lt;code&gt;[A-Za-z][A-Za-z0-9~/._+-]+&lt;/code&gt; otherwise a &lt;code&gt;DateTimeException&lt;/code&gt; is thrown. If the zone ID is not in the configured set of IDs, &lt;code&gt;ZoneRulesException&lt;/code&gt; is thrown. The detailed format of the region ID depends on the group supplying the data. The default set of data is supplied by the IANA Time Zone Database (TZDB). This has region IDs of the form '{area}/{city}', such as 'Europe/Paris' or 'America/New_York'. This is compatible with most IDs from &lt;a href=&quot;../util/timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다른 모든 ID는 지역 기반 영역 ID로 구문 분석됩니다. 지역 ID는 정규식 &lt;code&gt;[A-Za-z][A-Za-z0-9~/._+-]+&lt;/code&gt; 와 일치해야합니다 . 그렇지 않으면 &lt;code&gt;DateTimeException&lt;/code&gt; 이 발생합니다. 영역 ID가 구성된 ID 세트에 &lt;code&gt;ZoneRulesException&lt;/code&gt; 이 발생합니다. 지역 ID의 자세한 형식은 데이터를 제공하는 그룹에 따라 다릅니다. 기본 데이터 세트는 IANA 시간대 데이터베이스 (TZDB)에서 제공합니다. 여기에는 '유럽 / 파리'또는 'America / New_York'와 같은 '{area} / {city}'형식의 지역 ID가 있습니다. &lt;a href=&quot;../util/timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; 의&lt;/a&gt; 대부분의 ID와 호환됩니다 .</target>
        </trans-unit>
        <trans-unit id="7f9f4cc86cf67b06a985667d1fde0e95a1110ba4" translate="yes" xml:space="preserve">
          <source>All other characters are copied without modification</source>
          <target state="translated">다른 모든 문자는 수정없이 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="58cebd2af2befec7aa1642b49ab70b0577d4f257" translate="yes" xml:space="preserve">
          <source>All other characters are unsafe and are first converted into one or more bytes using some encoding scheme. Then each byte is represented by the 3-character string &quot;</source>
          <target state="translated">다른 모든 문자는 안전하지 않으며 일부 인코딩 체계를 사용하여 먼저 하나 이상의 바이트로 변환됩니다. 그런 다음 각 바이트는 3 자 문자열 &quot;</target>
        </trans-unit>
        <trans-unit id="8416581f3cbcd4e5b903a8fa3b779489e401b5a1" translate="yes" xml:space="preserve">
          <source>All other characters match themselves in an implementation dependent manner. This includes characters representing any &lt;a href=&quot;#getSeparator()&quot;&gt;&lt;code&gt;name-separators&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다른 모든 문자는 구현에 따라 서로 일치합니다. 여기에는 &lt;a href=&quot;#getSeparator()&quot;&gt; &lt;code&gt;name-separators&lt;/code&gt; &lt;/a&gt; 나타내는 문자가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="4aeb95030eb9e091e6634faca32c957c2938c121" translate="yes" xml:space="preserve">
          <source>All other characters match themselves in an implementation dependent manner. This includes characters representing any &lt;a href=&quot;filesystem#getSeparator--&quot;&gt;&lt;code&gt;name-separators&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다른 모든 문자는 구현에 따라 다릅니다. 여기에는 &lt;a href=&quot;filesystem#getSeparator--&quot;&gt; &lt;code&gt;name-separators&lt;/code&gt; &lt;/a&gt; 나타내는 문자가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="f33e5d3386848136b779159566c19de9419626ea" translate="yes" xml:space="preserve">
          <source>All other configuration is the same as for HttpServer.</source>
          <target state="translated">다른 모든 구성은 HttpServer와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="97ee7bfad8ed718fb6fc466596399b2598073986" translate="yes" xml:space="preserve">
          <source>All other node types (Element, Text, etc.) are serialized to their corresponding XML source form.</source>
          <target state="translated">다른 모든 노드 유형 (요소, 텍스트 등)은 해당 XML 소스 양식으로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="6a5218bfa16094415d19eebef423dec9763ab343" translate="yes" xml:space="preserve">
          <source>All other properties will be initialized to &quot;null&quot;.</source>
          <target state="translated">다른 모든 속성은 &quot;null&quot;로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="ca8b4f84a08d381f7af93c5043297422f01ca10d" translate="yes" xml:space="preserve">
          <source>All other values for the flags parameter are reserved.</source>
          <target state="translated">flags 매개 변수의 다른 모든 값은 예약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="406da96623a6477c8d03c1e50d79373d0ded69b8" translate="yes" xml:space="preserve">
          <source>All parameters are stored by reference.</source>
          <target state="translated">모든 매개 변수는 참조로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="73e1e689cb3b36bbaaaa36da4fb30920885cdcb3" translate="yes" xml:space="preserve">
          <source>All parameters except the message and exception are as if they were provided by a &lt;a href=&quot;locator&quot;&gt;&lt;code&gt;Locator&lt;/code&gt;&lt;/a&gt;. For example, if the system identifier is a URL (including relative filename), the caller must resolve it fully before creating the exception.</source>
          <target state="translated">메시지 및 예외를 제외한 모든 매개 변수는 &lt;a href=&quot;locator&quot;&gt; &lt;code&gt;Locator&lt;/code&gt; &lt;/a&gt; 에서 제공 한 것과 같습니다 . 예를 들어 시스템 식별자가 URL (상대 파일 이름 포함) 인 경우 호출자는 예외를 만들기 전에이를 완전히 해결해야합니다.</target>
        </trans-unit>
        <trans-unit id="f5d312e429f0c61ecc344f1c332c0858a419770d" translate="yes" xml:space="preserve">
          <source>All parameters except the message are as if they were provided by a &lt;a href=&quot;locator&quot;&gt;&lt;code&gt;Locator&lt;/code&gt;&lt;/a&gt;. For example, if the system identifier is a URL (including relative filename), the caller must resolve it fully before creating the exception.</source>
          <target state="translated">메시지를 제외한 모든 매개 변수는 &lt;a href=&quot;locator&quot;&gt; &lt;code&gt;Locator&lt;/code&gt; &lt;/a&gt; 에서 제공 한 것과 같습니다 . 예를 들어 시스템 식별자가 URL (상대 파일 이름 포함) 인 경우 호출자는 예외를 만들기 전에이를 완전히 해결해야합니다.</target>
        </trans-unit>
        <trans-unit id="9b388647c358bd55af10f774030c007b9d2f50c1" translate="yes" xml:space="preserve">
          <source>All parameters in a &lt;code&gt;ParameterBlock&lt;/code&gt; are objects; convenience add and set methods are available that take arguments of base type and construct the appropriate subclass of Number (such as Integer or Float). Corresponding get methods perform a downward cast and have return values of base type; an exception will be thrown if the stored values do not have the correct type. There is no way to distinguish between the results of &quot;short s; add(s)&quot; and &quot;add(new Short(s))&quot;.</source>
          <target state="translated">&lt;code&gt;ParameterBlock&lt;/code&gt; 의 모든 매개 변수 는 객체입니다. 기본 유형의 인수를 사용하고 Number의 적절한 하위 클래스 (예 : Integer 또는 Float)를 구성하는 편리한 add 및 set 메서드를 사용할 수 있습니다. 대응하는 get 메소드는 하향 캐스트를 수행하고 기본 유형의 리턴 값을 갖습니다. 저장된 값의 유형이 올바르지 않으면 예외가 발생합니다. &quot;short s; add (s)&quot;와 &quot;add (new Short (s))&quot;의 결과를 구별 할 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="1149c092ed0aaf134d8d356d8e35a2b17b705ae4" translate="yes" xml:space="preserve">
          <source>All platform MBeans are registered in the &lt;em&gt;platform MBeanServer&lt;/em&gt; which can be obtained via the &lt;a href=&quot;../../../../java.management/java/lang/management/managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;ManagementFactory.getPlatformMBeanServer()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">모든 플랫폼 MBean은 &lt;a href=&quot;../../../../java.management/java/lang/management/managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;ManagementFactory.getPlatformMBeanServer()&lt;/code&gt; &lt;/a&gt; 를 통해 얻을 수있는 &lt;em&gt;플랫폼 MBeanServer에&lt;/em&gt; 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="930ad3c3bffa273303bca89b76f9a40132e2aa3d" translate="yes" xml:space="preserve">
          <source>All platforms support file-modification times to the nearest second, but some provide more precision. The argument will be truncated to fit the supported precision. If the operation succeeds and no intervening operations on the file take place, then the next invocation of the &lt;a href=&quot;#lastModified()&quot;&gt;&lt;code&gt;lastModified()&lt;/code&gt;&lt;/a&gt; method will return the (possibly truncated) &lt;code&gt;time&lt;/code&gt; argument that was passed to this method.</source>
          <target state="translated">모든 플랫폼은 파일 수정 시간을 가장 가까운 초까지 ​​지원하지만 일부는 더 정확한 시간을 제공합니다. 인수는 지원되는 정밀도에 맞게 잘립니다. 작업이 성공하고 파일에 대한 개입 작업이 발생하지 않으면 &lt;a href=&quot;#lastModified()&quot;&gt; &lt;code&gt;lastModified()&lt;/code&gt; &lt;/a&gt; 메서드 의 다음 호출은 이 메서드에 전달 된 (잘린) &lt;code&gt;time&lt;/code&gt; 인수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4eb46389b0b5dee93cdccfc11acd6b4b4801f39c" translate="yes" xml:space="preserve">
          <source>All platforms support file-modification times to the nearest second, but some provide more precision. The argument will be truncated to fit the supported precision. If the operation succeeds and no intervening operations on the file take place, then the next invocation of the &lt;code&gt;&lt;a href=&quot;file#lastModified--&quot;&gt;&lt;code&gt;lastModified()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method will return the (possibly truncated) &lt;code&gt;time&lt;/code&gt; argument that was passed to this method.</source>
          <target state="translated">모든 플랫폼은 가장 가까운 초 단위로 파일 수정 시간을 지원하지만 일부 플랫폼은 더 정밀합니다. 지원되는 정밀도에 맞게 인수가 잘립니다. 작업이 성공하고 파일에서 개입 작업이 발생하지 않으면 &lt;code&gt;&lt;a href=&quot;file#lastModified--&quot;&gt;&lt;code&gt;lastModified()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메서드를 다음에 호출 하면 (잘려진) &lt;code&gt;time&lt;/code&gt; 이 반환 됩니다. 하면이 메서드에 전달 된 인수 .</target>
        </trans-unit>
        <trans-unit id="2e5029ef268a5caba2f5b9010f3540e631f63dac" translate="yes" xml:space="preserve">
          <source>All properties whose names end with &quot;.level&quot; are assumed to define log levels for Loggers. Thus &quot;foo.level&quot; defines a log level for the logger called &quot;foo&quot; and (recursively) for any of its children in the naming hierarchy. Log Levels are applied in the order they are defined in the properties file. Thus level settings for child nodes in the tree should come after settings for their parents. The property name &quot;.level&quot; can be used to set the level for the root of the tree.</source>
          <target state="translated">이름이 &quot;.level&quot;로 끝나는 모든 속성은 로거의 로그 수준을 정의하는 것으로 간주됩니다. 따라서 &quot;foo.level&quot;은 &quot;foo&quot;라는 로거의 로그 레벨과 이름 계층의 하위 요소에 대한 (재귀 적으로) 로그 레벨을 정의합니다. 로그 레벨은 특성 파일에 정의 된 순서대로 적용됩니다. 따라서 트리의 하위 노드에 대한 레벨 설정은 부모의 설정 다음에 와야합니다. 속성 이름 &quot;.level&quot;을 사용하여 트리의 루트 수준을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a0cd9d2d3c287b81505ed6fce56d55a5c22fa8b" translate="yes" xml:space="preserve">
          <source>All property names are case-insensitive.</source>
          <target state="translated">모든 속성 이름은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="03afca2ba7d419c29411ede55a6d3a79e6db2547" translate="yes" xml:space="preserve">
          <source>All public methods of &lt;code&gt;CertStore&lt;/code&gt; objects must be thread-safe. That is, multiple threads may concurrently invoke these methods on a single &lt;code&gt;CertStore&lt;/code&gt; object (or more than one) with no ill effects. This allows a &lt;code&gt;CertPathBuilder&lt;/code&gt; to search for a CRL while simultaneously searching for further certificates, for instance.</source>
          <target state="translated">&lt;code&gt;CertStore&lt;/code&gt; 객체 의 모든 공개 메소드는 thread 세이프가 아니면 안됩니다. 즉, 여러 스레드가 동시에 단일 &lt;code&gt;CertStore&lt;/code&gt; 오브젝트 (또는 둘 이상) 에서 이러한 메소드를 병행 하여 아무런 영향을 미치지 않을 수 있습니다. 이를 통해 &lt;code&gt;CertPathBuilder&lt;/code&gt; 는 예를 들어 추가 인증서를 동시에 검색하면서 CRL을 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="69644fde60ab8b40fc1244fe8d6f20fbb1b13317" translate="yes" xml:space="preserve">
          <source>All purpose paint method that should do the right thing for all linear bouncing-box progress bars.</source>
          <target state="translated">모든 선형 바운싱 박스 진행률 표시 줄에 대해 올바른 작업을 수행해야하는 다목적 페인트 방법입니다.</target>
        </trans-unit>
        <trans-unit id="735d3d14f5b6b4c9a0852d1a9df44fa1daa86821" translate="yes" xml:space="preserve">
          <source>All purpose paint method that should do the right thing for all linear bouncing-box progress bars. Override this if you are making another kind of progress bar.</source>
          <target state="translated">모든 선형 바운싱 박스 진행률 표시 줄에 대해 올바른 작업을 수행해야하는 다목적 페인트 방법입니다. 다른 종류의 진행률 표시 줄을 만드는 경우이를 재정의하십시오.</target>
        </trans-unit>
        <trans-unit id="57e63d60902edc988c7009e1e08a420d24934d1b" translate="yes" xml:space="preserve">
          <source>All purpose paint method that should do the right thing for almost all linear, determinate progress bars.</source>
          <target state="translated">거의 모든 선형의 결정적인 진행률 표시 줄에 대해 올바른 작업을 수행해야하는 다목적 페인트 방법입니다.</target>
        </trans-unit>
        <trans-unit id="694ef47d4d58fd4750ab4dd9838bd224e1124e54" translate="yes" xml:space="preserve">
          <source>All purpose paint method that should do the right thing for almost all linear, determinate progress bars. By setting a few values in the defaults table, things should work just fine to paint your progress bar. Naturally, override this if you are making a circular or semi-circular progress bar.</source>
          <target state="translated">거의 모든 선형의 결정적인 진행률 표시 줄에 대해 올바른 작업을 수행해야하는 다목적 페인트 방법입니다. 기본 테이블에 몇 가지 값을 설정하면 진행률 표시 줄을 칠할 수 있습니다. 당연히 원형 또는 반원형 진행률 표시 줄을 만드는 경우 이것을 무시하십시오.</target>
        </trans-unit>
        <trans-unit id="093b1c8769384a8bccb4c40dbb4b1847c86ad41f" translate="yes" xml:space="preserve">
          <source>All registered &lt;a href=&quot;#addShutdownHook(java.lang.Thread)&quot;&gt;shutdown hooks&lt;/a&gt;, if any, are started in some unspecified order and allowed to run concurrently until they finish. Once this is done the virtual machine &lt;a href=&quot;#halt(int)&quot;&gt;halts&lt;/a&gt;.</source>
          <target state="translated">등록 된 모든 &lt;a href=&quot;#addShutdownHook(java.lang.Thread)&quot;&gt;종료 후크&lt;/a&gt; (있는 경우)는 지정되지 않은 순서로 시작되며 완료 될 때까지 동시에 실행될 수 있습니다. 이 작업이 완료되면 가상 머신이 &lt;a href=&quot;#halt(int)&quot;&gt;중지&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="bcc0492fd31af609afe9e2db8303a1bafbff9df0" translate="yes" xml:space="preserve">
          <source>All rendering operations modify only pixels which lie within the area bounded by the current clip, which is specified by a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; in user space and is controlled by the program using the &lt;code&gt;Graphics&lt;/code&gt; object. This</source>
          <target state="translated">모든 렌더링 작업 은 사용자 공간 의 &lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 에 의해 지정되고 &lt;code&gt;Graphics&lt;/code&gt; 객체를 사용하는 프로그램에 의해 제어되는 현재 클립에 의해 경계가 지정된 영역 내에있는 픽셀 만 수정 합니다. 이</target>
        </trans-unit>
        <trans-unit id="6655fc0125e36f8cd7f90b06abbb9117dfb2cf8c" translate="yes" xml:space="preserve">
          <source>All resource bundles loaded are cached by default. Refer to &lt;a href=&quot;resourcebundle.control#getTimeToLive(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;control.getTimeToLive&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">로드 된 모든 리소스 번들은 기본적으로 캐시됩니다. 자세한 내용은 &lt;a href=&quot;resourcebundle.control#getTimeToLive(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;control.getTimeToLive&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a29b26788c9af453cc9f4e8adf2aa86c462f0f64" translate="yes" xml:space="preserve">
          <source>All resource bundles loaded are cached by default. Refer to &lt;a href=&quot;resourcebundle.control#getTimeToLive-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;control.getTimeToLive&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">로드 된 모든 자원 번들은 기본적으로 캐시됩니다. 자세한 내용은 &lt;a href=&quot;resourcebundle.control#getTimeToLive-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;control.getTimeToLive&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d90d31d189ad85031e98b94b66e369d5516a7460" translate="yes" xml:space="preserve">
          <source>All row data in the table has changed, listeners should discard any state that was based on the rows and requery the &lt;code&gt;TableModel&lt;/code&gt; to get the new row count and all the appropriate values.</source>
          <target state="translated">테이블의 모든 행 데이터가 변경되었으므로 리스너는 행을 기반으로 한 모든 상태를 버리고 &lt;code&gt;TableModel&lt;/code&gt; 을 다시 쿼리 하여 새 행 수와 모든 적절한 값을 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="f58eb6e6398eaa0cc24eb0227c003fb4aae0076f" translate="yes" xml:space="preserve">
          <source>All row data in the table has changed, listeners should discard any state that was based on the rows and requery the &lt;code&gt;TableModel&lt;/code&gt; to get the new row count and all the appropriate values. The &lt;code&gt;JTable&lt;/code&gt; will repaint the entire visible region on receiving this event, querying the model for the cell values that are visible. The structure of the table ie, the column names, types and order have not changed.</source>
          <target state="translated">테이블의 모든 행 데이터가 변경되었으므로 리스너는 행을 기반으로 한 모든 상태를 버리고 &lt;code&gt;TableModel&lt;/code&gt; 을 다시 쿼리 하여 새 행 수와 모든 적절한 값을 가져와야합니다. &lt;code&gt;JTable&lt;/code&gt; 는, 이 이벤트를 받아 볼 수있는 셀의 값에 대한 모델을 질의의 전체 가시 영역을 칠 것이다. 테이블의 구조, 즉 열 이름, 유형 및 순서는 변경되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="cd4ccecfbdb6eabbed1fabc5b212eadb52f50ca5" translate="yes" xml:space="preserve">
          <source>All rows must be of the same length as &lt;code&gt;columnNames&lt;/code&gt;.</source>
          <target state="translated">모든 행은 &lt;code&gt;columnNames&lt;/code&gt; 와 길이가 같아야합니다 .</target>
        </trans-unit>
        <trans-unit id="e3cc15909cc14772c2968366030fc60f431c59b8" translate="yes" xml:space="preserve">
          <source>All rowsets maintain a set of properties, which will usually be set using a tool. The number and kinds of properties a rowset has will vary, depending on what the &lt;code&gt;RowSet&lt;/code&gt; implementation does and how it gets its data. For example, rowsets that get their data from a &lt;code&gt;ResultSet&lt;/code&gt; object need to set the properties that are required for making a database connection. If a &lt;code&gt;RowSet&lt;/code&gt; object uses the &lt;code&gt;DriverManager&lt;/code&gt; facility to make a connection, it needs to set a property for the JDBC URL that identifies the appropriate driver, and it needs to set the properties that give the user name and password. If, on the other hand, the rowset uses a &lt;code&gt;DataSource&lt;/code&gt; object to make the connection, which is the preferred method, it does not need to set the property for the JDBC URL. Instead, it needs to set the property for the logical name of the data source along with the properties for the user name and password.</source>
          <target state="translated">모든 행 집합은 일반적으로 도구를 사용하여 설정되는 속성 집합을 유지합니다. 행 집합의 속성 수와 종류는 &lt;code&gt;RowSet&lt;/code&gt; 구현이 수행하는 작업과 데이터를 가져 오는 방법 에 따라 달라집니다 . 예를 들어, &lt;code&gt;ResultSet&lt;/code&gt; 개체 에서 데이터를 가져 오는 행 집합 은 데이터베이스 연결에 필요한 속성을 설정해야합니다. 경우 &lt;code&gt;RowSet&lt;/code&gt; 객체가 사용 &lt;code&gt;DriverManager&lt;/code&gt; 에의 연결을 만들기 위해 시설, 그것은 식별 적절한 드라이버가, 그리고 사용자 이름과 암호를 제공 속성을 설정해야하는 JDBC URL에 대한 속성을 설정해야합니다. 반면에 행 집합이 &lt;code&gt;DataSource&lt;/code&gt; 를 사용하는 경우선호하는 방법 인 연결을 만들기 위해 JDBC URL에 대한 속성을 설정할 필요가 없습니다. 대신 사용자 이름 및 암호에 대한 속성과 함께 데이터 소스의 논리적 이름에 대한 속성을 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="05cc8d5149402c3889b89d55c1d6a45385fc5e16" translate="yes" xml:space="preserve">
          <source>All rowsets maintain a set of properties, which will usually be set using a tool. The number and kinds of properties a rowset has will vary, depending on what the rowset does and how it gets its data. For example, rowsets that get their data from a &lt;code&gt;ResultSet&lt;/code&gt; object need to set the properties that are required for making a database connection. If a rowset uses the &lt;code&gt;DriverManager&lt;/code&gt; facility to make a connection, it needs to set a property for the JDBC URL that identifies the appropriate driver, and it needs to set the properties that give the user name and password. If, on the other hand, the rowset uses a &lt;code&gt;DataSource&lt;/code&gt; object to make the connection, which is the preferred method, it does not need to set the property for the JDBC URL. Instead, it needs to set properties for the logical name of the data source, for the user name, and for the password.</source>
          <target state="translated">모든 행 집합은 일반적으로 도구를 사용하여 설정되는 속성 집합을 유지합니다. 행 집합의 속성 수와 종류는 행 집합이 수행하는 작업과 데이터를 가져 오는 방법에 따라 달라집니다. 예를 들어, &lt;code&gt;ResultSet&lt;/code&gt; 개체 에서 데이터를 가져 오는 행 집합 은 데이터베이스 연결에 필요한 속성을 설정해야합니다. 행 집합이 &lt;code&gt;DriverManager&lt;/code&gt; 기능을 사용하여 연결하는 경우 적절한 드라이버를 식별하는 JDBC URL에 대한 속성을 설정하고 사용자 이름과 암호를 제공하는 속성을 설정해야합니다. 반면에 행 집합이 &lt;code&gt;DataSource&lt;/code&gt; 를 사용하는 경우선호하는 방법 인 연결을 만들기 위해 JDBC URL에 대한 속성을 설정할 필요가 없습니다. 대신 데이터 소스의 논리적 이름, 사용자 이름 및 암호에 대한 속성을 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="135493b1ffba00e440c80c5a9906495bcac96060" translate="yes" xml:space="preserve">
          <source>All six values are set and available from the created &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">6 개의 값이 모두 설정되고 생성 된 &lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; 에서 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="26140482e5d38cfbc9c8cac7b5bd9bacda281f2e" translate="yes" xml:space="preserve">
          <source>All six values are set by computing their values from the specified milliseconds and are available using the &lt;code&gt;get&lt;/code&gt; methods of the created &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;. The values conform to and are defined by:</source>
          <target state="translated">6 개 값은 모두 지정된 밀리 초에서 해당 값을 계산하여 설정되며 생성 된 &lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;get&lt;/code&gt; 메서드를 사용하여 사용할 수 있습니다 . 값은 다음을 준수하고 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="fc6ad14c36aec1e98be4f70bbabd33bcad94e69c" translate="yes" xml:space="preserve">
          <source>All soft references to softly-reachable objects are guaranteed to have been cleared before the virtual machine throws an &lt;code&gt;OutOfMemoryError&lt;/code&gt;. Otherwise no constraints are placed upon the time at which a soft reference will be cleared or the order in which a set of such references to different objects will be cleared. Virtual machine implementations are, however, encouraged to bias against clearing recently-created or recently-used soft references.</source>
          <target state="translated">가상 머신이 &lt;code&gt;OutOfMemoryError&lt;/code&gt; 를 발생 시키기 전에 도달 가능한 오브젝트에 대한 모든 소프트 참조가 지워 졌음을 보장합니다 . 그렇지 않으면 소프트 참조가 지워지는 시간이나 다른 객체에 대한 이러한 참조 세트가 지워지는 순서에 제약이 없습니다. 그러나 가상 머신 구현은 최근에 생성되었거나 최근에 사용 된 소프트 참조를 지우는 것에 대한 편견을 권장합니다.</target>
        </trans-unit>
        <trans-unit id="a943881c78a1f23b6a1ccf8eb79aae83948082b0" translate="yes" xml:space="preserve">
          <source>All specified exceptions may be thrown by any of the &lt;code&gt;format&lt;/code&gt; methods of &lt;code&gt;Formatter&lt;/code&gt; as well as by any &lt;code&gt;format&lt;/code&gt; convenience methods such as &lt;a href=&quot;../lang/string#format(java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;String.format&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../io/printstream#printf(java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;PrintStream.printf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 모든 예외는 &lt;code&gt;Formatter&lt;/code&gt; 의 &lt;code&gt;format&lt;/code&gt; 메서드 와 &lt;a href=&quot;../lang/string#format(java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;String.format&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../io/printstream#printf(java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;PrintStream.printf&lt;/code&gt; &lt;/a&gt; 와 같은 &lt;code&gt;format&lt;/code&gt; 편의 메서드에 의해 throw 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="35a96308d2316b3d0712845aed8278834e56b3e0" translate="yes" xml:space="preserve">
          <source>All specified exceptions may be thrown by any of the &lt;code&gt;format&lt;/code&gt; methods of &lt;code&gt;Formatter&lt;/code&gt; as well as by any &lt;code&gt;format&lt;/code&gt; convenience methods such as &lt;a href=&quot;../lang/string#format-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;String.format&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../io/printstream#printf-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;PrintStream.printf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모든 지정된 예외는의에 의해 발생 될 수 있습니다 &lt;code&gt;format&lt;/code&gt; 의 방법 &lt;code&gt;Formatter&lt;/code&gt; 뿐만 아니라 의해 &lt;code&gt;format&lt;/code&gt; 과 같은 편리한 메소드 &lt;a href=&quot;../lang/string#format-java.lang.String-java.lang.Object...-&quot;&gt; &lt;code&gt;String.format&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;../io/printstream#printf-java.lang.String-java.lang.Object...-&quot;&gt; &lt;code&gt;PrintStream.printf&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6e4976bf647fcf174904b82d59ef6548ee23c664" translate="yes" xml:space="preserve">
          <source>All standard &lt;code&gt;RowSet&lt;/code&gt; implementations must provide at least two providers:</source>
          <target state="translated">모든 표준 &lt;code&gt;RowSet&lt;/code&gt; 구현은 최소한 두 개의 공급자를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="dc2ec4d6845601f42f7f0336542028102098fc41" translate="yes" xml:space="preserve">
          <source>All start/endEntity events must be properly nested.</source>
          <target state="translated">모든 start / endEntity 이벤트는 올바르게 중첩되어야합니다.</target>
        </trans-unit>
        <trans-unit id="062e58f2c764ab7195ddcee637b8e934de5b11fb" translate="yes" xml:space="preserve">
          <source>All subsequent pages of the document will be printed through and including page</source>
          <target state="translated">문서의 모든 후속 페이지는 페이지를 포함하여 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="b6a811bce97dc41aa0a713c22e87ed39650b2cbf" translate="yes" xml:space="preserve">
          <source>All such keys are removed from client properties in &lt;code&gt;JComponent.setUI()&lt;/code&gt; method after uninstalling old UI and before installing the new one. They are also removed prior to serialization.</source>
          <target state="translated">이러한 모든 키는 이전 UI를 제거한 후 새 UI를 설치하기 전에 &lt;code&gt;JComponent.setUI()&lt;/code&gt; 메서드의 클라이언트 속성에서 제거됩니다 . 또한 직렬화 전에 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="6bf0a1317264ae00791cf5dd47413834586a6ad2" translate="yes" xml:space="preserve">
          <source>All tag names in this set.</source>
          <target state="translated">이 세트의 모든 태그 이름.</target>
        </trans-unit>
        <trans-unit id="116279e26f74234964688f5b3668eba118ebd97f" translate="yes" xml:space="preserve">
          <source>All tag numbers in this set.</source>
          <target state="translated">이 세트의 모든 태그 번호.</target>
        </trans-unit>
        <trans-unit id="c5c9e91b025b388fb93e2a14428dc1ae1b4b1270" translate="yes" xml:space="preserve">
          <source>All text content is labeled with this tag.</source>
          <target state="translated">모든 텍스트 콘텐츠는이 태그로 레이블이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="c5a899a2585149f4f09f5e4419bba144064e154e" translate="yes" xml:space="preserve">
          <source>All text content must be in a paragraph element.</source>
          <target state="translated">모든 텍스트 콘텐츠는 단락 요소에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="3a034b660f7a61ef0c840fd73269a532a61d61bc" translate="yes" xml:space="preserve">
          <source>All text content must be in a paragraph element. If a paragraph didn't exist when content was encountered, a paragraph is manufactured.</source>
          <target state="translated">모든 텍스트 콘텐츠는 단락 요소에 있어야합니다. 콘텐츠가 발견되었을 때 단락이 존재하지 않으면 단락이 제작됩니다.</target>
        </trans-unit>
        <trans-unit id="9387863ae752913805f034edd14fabaf5c30eba1" translate="yes" xml:space="preserve">
          <source>All text rendering by non-&lt;code&gt;JTextComponent&lt;/code&gt;s is delegated to a &lt;a href=&quot;synthgraphicsutils&quot;&gt;&lt;code&gt;SynthGraphicsUtils&lt;/code&gt;&lt;/a&gt;, which is obtained using the &lt;a href=&quot;synthstyle&quot;&gt;&lt;code&gt;SynthStyle&lt;/code&gt;&lt;/a&gt; method &lt;a href=&quot;synthstyle#getGraphicsUtils(javax.swing.plaf.synth.SynthContext)&quot;&gt;&lt;code&gt;SynthStyle.getGraphicsUtils(javax.swing.plaf.synth.SynthContext)&lt;/code&gt;&lt;/a&gt;. You can customize text rendering by supplying your own &lt;a href=&quot;synthgraphicsutils&quot;&gt;&lt;code&gt;SynthGraphicsUtils&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비 &lt;code&gt;JTextComponent&lt;/code&gt; 에 의한 모든 텍스트 렌더링 은 &lt;a href=&quot;synthstyle&quot;&gt; &lt;code&gt;SynthStyle&lt;/code&gt; &lt;/a&gt; 메소드 &lt;a href=&quot;synthstyle#getGraphicsUtils(javax.swing.plaf.synth.SynthContext)&quot;&gt; &lt;code&gt;SynthStyle.getGraphicsUtils(javax.swing.plaf.synth.SynthContext)&lt;/code&gt; &lt;/a&gt; 사용하여 얻은 &lt;a href=&quot;synthgraphicsutils&quot;&gt; &lt;code&gt;SynthGraphicsUtils&lt;/code&gt; 에&lt;/a&gt; 위임됩니다 . 자신의 &lt;a href=&quot;synthgraphicsutils&quot;&gt; &lt;code&gt;SynthGraphicsUtils&lt;/code&gt; &lt;/a&gt; 를 제공하여 텍스트 렌더링을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="726ea9c3f90eee1e73c911d984885abdc207b225" translate="yes" xml:space="preserve">
          <source>All the abstract methods in this class must be implemented by a cryptographic service provider who wishes to supply the implementation of a particular message digest algorithm.</source>
          <target state="translated">이 클래스의 모든 추상 메소드는 특정 메시지 요약 알고리즘의 구현을 제공하려는 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="2988695fc30788f735bb94b51d3bb8d46d482d52" translate="yes" xml:space="preserve">
          <source>All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply parameter management for a particular algorithm.</source>
          <target state="translated">이 클래스의 모든 추상 메소드는 특정 알고리즘에 대한 매개 변수 관리를 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="2dd34478bb8d135e1026c3596e2a76c1297ccf51" translate="yes" xml:space="preserve">
          <source>All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a key pair generator for a particular algorithm.</source>
          <target state="translated">이 클래스의 모든 추상 메소드는 특정 알고리즘에 대한 키 쌍 생성기의 구현을 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="634b7bb2c2eae438f7b5907e12e7255d275f0d47" translate="yes" xml:space="preserve">
          <source>All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a parameter generator for a particular algorithm.</source>
          <target state="translated">이 클래스의 모든 추상 메소드는 특정 알고리즘에 대한 매개 변수 생성기의 구현을 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="7c30816907363a3bd15f5d96aa657f0ab844d577" translate="yes" xml:space="preserve">
          <source>All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a particular SSL context.</source>
          <target state="translated">이 클래스의 모든 추상 메소드는 특정 SSL 컨텍스트의 구현을 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="5c66a512e321b6222301c55e5d16a27a07fdebb6" translate="yes" xml:space="preserve">
          <source>All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a particular key manager factory.</source>
          <target state="translated">이 클래스의 모든 추상 메소드는 특정 키 관리자 팩토리의 구현을 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="005e3daa270b1a2ddc307c73e1990fe346bd6f9d" translate="yes" xml:space="preserve">
          <source>All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a particular signature algorithm.</source>
          <target state="translated">이 클래스의 모든 추상 메소드는 특정 서명 알고리즘의 구현을 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="aff6836f2d229980cf472858aa1b549ac563f40a" translate="yes" xml:space="preserve">
          <source>All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a particular trust manager factory.</source>
          <target state="translated">이 클래스의 모든 추상 메소드는 특정 신뢰 관리자 팩토리의 구현을 제공하려는 각 암호화 서비스 제공자가 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="e7beb91870737a34c550ccbb6cc34fe02adb46dd" translate="yes" xml:space="preserve">
          <source>All the abstract methods in this class must be implemented by each service provider who wishes to supply the implementation of a cryptographically strong pseudo-random number generator.</source>
          <target state="translated">이 클래스의 모든 추상 메서드는 암호 학적으로 강력한 의사 난수 생성기의 구현을 제공하려는 각 서비스 공급자에 의해 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="718a1d8d8f7b9760bc8a7c4c8658617693f9b8c3" translate="yes" xml:space="preserve">
          <source>All the default &lt;code&gt;Document&lt;/code&gt; implementations descend from &lt;code&gt;AbstractDocument&lt;/code&gt;. &lt;code&gt;AbstractDocument&lt;/code&gt; models an implied break at the end of the document. As a result of this, it is possible for this to return a value greater than the length of the document.</source>
          <target state="translated">모든 기본 &lt;code&gt;Document&lt;/code&gt; 구현은 &lt;code&gt;AbstractDocument&lt;/code&gt; 의 자손입니다 . &lt;code&gt;AbstractDocument&lt;/code&gt; 는 문서 끝에서 암시 적 구분을 모델링합니다. 그 결과 문서 길이보다 큰 값을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b39aa48031292cbb5bba334e768825f38f92589" translate="yes" xml:space="preserve">
          <source>All the fields in this class are read-only.</source>
          <target state="translated">이 클래스의 모든 필드는 읽기 전용입니다.</target>
        </trans-unit>
        <trans-unit id="1b94dfb483654820631c83433f38e7e6b16f4b20" translate="yes" xml:space="preserve">
          <source>All the following conditions must be met to enable the per-pixel transparency mode for this window:</source>
          <target state="translated">이 창에 대해 픽셀 당 투명도 모드를 활성화하려면 다음 조건을 모두 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="3f8a44d33a195221578fd82273cfeccc3e2aceb2" translate="yes" xml:space="preserve">
          <source>All the functionality of this class has been included in BasicComboBoxUI ActionMap/InputMap methods.</source>
          <target state="translated">이 클래스의 모든 기능은 BasicComboBoxUI ActionMap / InputMap 메서드에 포함되었습니다.</target>
        </trans-unit>
        <trans-unit id="c0878c8bf97e07317e74f72724ae4839d6bcede1" translate="yes" xml:space="preserve">
          <source>All the implementations supplied by the static methods are immutable.</source>
          <target state="translated">정적 메소드가 제공하는 모든 구현은 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b39520e2bb1ad7fd4cd1004037b663a20d436454" translate="yes" xml:space="preserve">
          <source>All the methods for modifying an HTML document require an &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;. Elements can be obtained from an HTML document by using the method &lt;a href=&quot;#getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object)&quot;&gt;&lt;code&gt;getElement(Element e, Object attribute, Object
 value)&lt;/code&gt;&lt;/a&gt;. It returns the first descendant element that contains the specified attribute with the given value, in depth-first order. For example, &lt;code&gt;d.getElement(d.getDefaultRootElement(),
 StyleConstants.NameAttribute, HTML.Tag.P)&lt;/code&gt; returns the first paragraph element.</source>
          <target state="translated">HTML 문서를 수정하는 모든 방법에는 &lt;a href=&quot;../element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; 가&lt;/a&gt; 필요합니다 . &lt;a href=&quot;#getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object)&quot;&gt; &lt;code&gt;getElement(Element e, Object attribute, Object value)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 HTML 문서에서 요소를 가져올 수 있습니다 . 주어진 값을 가진 지정된 속성을 포함하는 첫 번째 하위 요소를 깊이 우선 순서로 리턴합니다. 예를 들어 &lt;code&gt;d.getElement(d.getDefaultRootElement(), StyleConstants.NameAttribute, HTML.Tag.P)&lt;/code&gt; 는 첫 번째 단락 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="43099b2e83f55f5146ba9078759779f72bff0d08" translate="yes" xml:space="preserve">
          <source>All the methods in this interface can throw a &lt;code&gt;NamingException&lt;/code&gt; or any of its subclasses. See &lt;code&gt;NamingException&lt;/code&gt; and their subclasses for details on each exception.</source>
          <target state="translated">이 인터페이스의 모든 메소드는 &lt;code&gt;NamingException&lt;/code&gt; 또는 그 서브 클래스를 Throw 할 수 있습니다 . &lt;code&gt;NamingException&lt;/code&gt; 참조각 예외에 대한 자세한 내용 및 해당 서브 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5ce077aa356a5e80a228ce2885ff9d2590a19c55" translate="yes" xml:space="preserve">
          <source>All the methods in this interface can throw a NamingException or any of its subclasses. See NamingException and their subclasses for details on each exception.</source>
          <target state="translated">이 인터페이스의 모든 메소드는 NamingException 또는 그 서브 클래스를 Throw 할 수 있습니다. 각 예외에 대한 자세한 내용은 NamingException 및 해당 서브 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fe5c90ac72666b3b774649592ea8fef33db250a5" translate="yes" xml:space="preserve">
          <source>All the normal &lt;a href=&quot;../../../../../java.base/java/util/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; methods are provided, but the following additional convenience methods are most likely to be used:</source>
          <target state="translated">모든 일반 &lt;a href=&quot;../../../../../java.base/java/util/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 메소드가 제공되지만 다음과 같은 추가 편의 메소드가 가장 많이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d22eb5581b223896e0bb3986c669026b6db41f8e" translate="yes" xml:space="preserve">
          <source>All the other logging methods in this class call through this method to actually perform any logging. Subclasses can override this single method to capture all log activity.</source>
          <target state="translated">이 클래스의 다른 모든 로깅 메소드는 실제로이 로깅을 수행하기 위해이 메소드를 호출합니다. 서브 클래스는이 단일 메소드를 대체하여 모든 로그 활동을 캡처 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92f5de765f36ff022c9653c2f5cc858b1efb447b" translate="yes" xml:space="preserve">
          <source>All the socket addresses that this channel's socket is bound to, or an empty &lt;code&gt;Set&lt;/code&gt; if the channel's socket is not bound</source>
          <target state="translated">이 채널의 소켓이 바인드 된 모든 소켓 주소, 또는 채널의 소켓이 바인드되지 않은 경우 빈 &lt;code&gt;Set&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2c55796dc7761b8303a47b07306de9ac1e0b964" translate="yes" xml:space="preserve">
          <source>All the text is styled using the provided attributes.</source>
          <target state="translated">모든 텍스트는 제공된 속성을 사용하여 스타일이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="d39b3355d1ee7b66c0865518bc55ec1066895706" translate="yes" xml:space="preserve">
          <source>All threads suspended by &lt;a href=&quot;#suspend()&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt; or by &lt;a href=&quot;threadreference#suspend()&quot;&gt;&lt;code&gt;ThreadReference.suspend()&lt;/code&gt;&lt;/a&gt; are resumed as many times as necessary for them to run.</source>
          <target state="translated">&lt;a href=&quot;#suspend()&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;threadreference#suspend()&quot;&gt; &lt;code&gt;ThreadReference.suspend()&lt;/code&gt; &lt;/a&gt; 에 의해 일시 중단 된 모든 스레드 는 실행에 필요한 횟수만큼 재개됩니다.</target>
        </trans-unit>
        <trans-unit id="0d00965e6dfdd592e7ddee65d6c37e4ba7ff0678" translate="yes" xml:space="preserve">
          <source>All threads that are not daemon threads have died, either by returning from the call to the &lt;code&gt;run&lt;/code&gt; method or by throwing an exception that propagates beyond the &lt;code&gt;run&lt;/code&gt; method.</source>
          <target state="translated">데몬 스레드되지 않은 모든 스레드는 호출에서 반환하여 중, 사망 한 &lt;code&gt;run&lt;/code&gt; 방법이나 넘어 전파한다는 예외를 던져 &lt;code&gt;run&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="423c48c6a66adcf55cfd5f67b0ea151b595ac362" translate="yes" xml:space="preserve">
          <source>All three sets are empty in a newly-created selector.</source>
          <target state="translated">새로 만든 선택기에서 세 세트가 모두 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="66d2ef58edd015016129b41ee3dd0be947c0f8ad" translate="yes" xml:space="preserve">
          <source>All time units in this class are considered to be accurate, while all date units in this class are considered to be estimated.</source>
          <target state="translated">이 클래스의 모든 시간 단위는 정확한 것으로 간주되는 반면이 클래스의 모든 날짜 단위는 추정 된 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="5ce2504d5c0e5108408666feb6584e8ed2f9ac3d" translate="yes" xml:space="preserve">
          <source>All told, then, a URI instance has the following nine components:</source>
          <target state="translated">URI 인스턴스에는 다음과 같은 9 가지 구성 요소가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6ed1948a88e6c8e235a04fb97a1d9a26c6c17e8" translate="yes" xml:space="preserve">
          <source>All tracing is disabled.</source>
          <target state="translated">모든 추적이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="76345282242af29d35014cdadae385591ab010c9" translate="yes" xml:space="preserve">
          <source>All tracing is enabled.</source>
          <target state="translated">모든 추적이 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="723bd1bb5afde0886554331ca2c2ecab0333cb0b" translate="yes" xml:space="preserve">
          <source>All units from days to eras inclusive are date-based. Time-based units and &lt;code&gt;FOREVER&lt;/code&gt; return false.</source>
          <target state="translated">날짜부터 시대까지 모든 단위는 날짜 기반입니다. 시간 기반 단위이며 &lt;code&gt;FOREVER&lt;/code&gt; 는 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8180518d51d2459c779c463234e5a7527ec854f4" translate="yes" xml:space="preserve">
          <source>All units from nanos to half-days inclusive are time-based. Date-based units and &lt;code&gt;FOREVER&lt;/code&gt; return false.</source>
          <target state="translated">나노부터 반일까지의 모든 단위는 시간 기반입니다. 날짜 기반 단위이며 &lt;code&gt;FOREVER&lt;/code&gt; 는 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="abb8ff28e9876f6765f038cdfb4dbca253dc3a8d" translate="yes" xml:space="preserve">
          <source>All units have a duration, however the duration is not always accurate. For example, days have an estimated duration due to the possibility of daylight saving time changes. This method returns true if the duration is an estimate and false if it is accurate. Note that accurate/estimated ignores leap seconds.</source>
          <target state="translated">모든 단위에는 기간이 있지만 기간이 항상 정확한 것은 아닙니다. 예를 들어, 일광 절약 시간제 변경 가능성으로 인해 예상 기간이 예상됩니다. 이 메소드는 기간이 추정값이면 true를 리턴하고 정확한 경우 false를 리턴합니다. 정확 / 추정은 윤초를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="b03cd79445df4a6b3c344b6ff053bc577926a33f" translate="yes" xml:space="preserve">
          <source>All units return a duration measured in standard nanoseconds from this method. The duration will be positive and non-zero. For example, an hour has a duration of &lt;code&gt;60 * 60 * 1,000,000,000ns&lt;/code&gt;.</source>
          <target state="translated">모든 단위는이 방법에서 표준 나노초 단위로 측정 된 지속 시간을 반환합니다. 지속 시간은 양수이고 0이 아닙니다. 예를 들어, 한 시간의 지속 시간은 &lt;code&gt;60 * 60 * 1,000,000,000ns&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="28e036e371f9cd71518e917d4c6fced9f9a8182d" translate="yes" xml:space="preserve">
          <source>All validity checking while parsing a document occurs on the source document as it appears on the input stream, not on the DOM document as it is built in memory. With filters, the document in memory may be a subset of the document on the stream, and its validity may have been affected by the filtering.</source>
          <target state="translated">문서를 구문 분석하는 동안 모든 유효성 검사는 메모리에 내장 된 DOM 문서가 아니라 입력 스트림에 나타나는 소스 문서에서 발생합니다. 필터를 사용하면 메모리에있는 문서가 스트림에있는 문서의 하위 집합이 될 수 있으며 해당 유효성이 필터링의 영향을받을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f3682e37b23679330efb350d01706f28ca8fa31" translate="yes" xml:space="preserve">
          <source>All value layouts have an &lt;em&gt;explicit&lt;/em&gt; byte order (see &lt;a href=&quot;../../../../java.base/java/nio/byteorder&quot;&gt;&lt;code&gt;ByteOrder&lt;/code&gt;&lt;/a&gt;) which is set when the layout is created.</source>
          <target state="translated">모든 값 레이아웃에는 레이아웃이 생성 될 때 설정되는 &lt;em&gt;명시적인&lt;/em&gt; 바이트 순서 ( &lt;a href=&quot;../../../../java.base/java/nio/byteorder&quot;&gt; &lt;code&gt;ByteOrder&lt;/code&gt; &lt;/a&gt; 참조 )가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0540547ab72fb9459220898c5de8d9db2633c99" translate="yes" xml:space="preserve">
          <source>All values are refetched subject to the transaction isolation level and cursor sensitivity. If &lt;code&gt;refreshRow&lt;/code&gt; is called after calling an updater method, but before calling the method &lt;code&gt;updateRow&lt;/code&gt;, then the updates made to the row are lost. Calling the method &lt;code&gt;refreshRow&lt;/code&gt; frequently will likely slow performance.</source>
          <target state="translated">모든 값은 트랜잭션 격리 수준 및 커서 민감도에 따라 다시 가져옵니다. 경우 &lt;code&gt;refreshRow&lt;/code&gt; 를가 의 업 방법을 호출 한 후 호출되지만 메소드 호출하기 전에 &lt;code&gt;updateRow&lt;/code&gt; , 행에 대해서 업데이트가 손실됩니다. &lt;code&gt;refreshRow&lt;/code&gt; 메서드 를 자주 호출하면 성능이 저하 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6379ad43cfd75c9af38afe061b8aca566aae6d29" translate="yes" xml:space="preserve">
          <source>All windows owned by an always-on-top window inherit this state and automatically become always-on-top. If a window ceases to be always-on-top, the windows that it owns will no longer be always-on-top. When an always-on-top window is sent &lt;a href=&quot;#toBack()&quot;&gt;&lt;code&gt;toBack&lt;/code&gt;&lt;/a&gt;, its always-on-top state is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Always-on-top 윈도우가 소유 한 모든 윈도우는이 상태를 상속하고 자동으로 always-on-top이됩니다. 창이 항상 맨 위에 있지 않으면 소유 한 창이 더 이상 항상 맨 위에 있지 않습니다. always-on-top 윈도우가 &lt;a href=&quot;#toBack()&quot;&gt; &lt;code&gt;toBack&lt;/code&gt; &lt;/a&gt; 으로 전송 되면 always-on-top 상태는 &lt;code&gt;false&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="59ed8d8f5ec1523b2c37987b52e5cf5f6843637a" translate="yes" xml:space="preserve">
          <source>All write methods call into this one.</source>
          <target state="translated">모든 쓰기 메서드는이 메서드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="d3acbdd83fd6a90661fc4e5bb8c87e3abc346fae" translate="yes" xml:space="preserve">
          <source>All write methods call into this one. If &lt;code&gt;getCanWrapLines()&lt;/code&gt; returns false, this will call &lt;code&gt;output&lt;/code&gt; with each sequence of &lt;code&gt;chars&lt;/code&gt; that doesn't contain a NEWLINE, followed by a call to &lt;code&gt;writeLineSeparator&lt;/code&gt;. On the other hand, if &lt;code&gt;getCanWrapLines()&lt;/code&gt; returns true, this will split the string, as necessary, so &lt;code&gt;getLineLength&lt;/code&gt; is honored. The only exception is if the current string contains no whitespace, and won't fit in which case the line length will exceed &lt;code&gt;getLineLength&lt;/code&gt;.</source>
          <target state="translated">모든 쓰기 메서드는이 메서드를 호출합니다. 경우 &lt;code&gt;getCanWrapLines()&lt;/code&gt; false를 돌려,이 호출 &lt;code&gt;output&lt;/code&gt; 의 각 시퀀스와 &lt;code&gt;chars&lt;/code&gt; 를 호출 다음에 줄 바꿈을 포함하지 않는, &lt;code&gt;writeLineSeparator&lt;/code&gt; 를 . 반면에 &lt;code&gt;getCanWrapLines()&lt;/code&gt; 가 true를 반환하면 필요에 따라 문자열이 분할되므로 &lt;code&gt;getLineLength&lt;/code&gt; 가 적용됩니다. 유일한 예외는 현재 문자열에 공백이없고 줄 길이가 &lt;code&gt;getLineLength&lt;/code&gt; 를 초과하는 경우에 맞지 않는 경우 입니다.</target>
        </trans-unit>
        <trans-unit id="8d37aff813f354938e32a8fa0074480be7a43975" translate="yes" xml:space="preserve">
          <source>AllPermission</source>
          <target state="translated">AllPermission</target>
        </trans-unit>
        <trans-unit id="6c8faa935a8fbf27213d20a51d1e7579a7dace3f" translate="yes" xml:space="preserve">
          <source>AllPermission.equals()</source>
          <target state="translated">AllPermission.equals()</target>
        </trans-unit>
        <trans-unit id="8a5fdb05bdf8775b91a1647ba7721afe768417e8" translate="yes" xml:space="preserve">
          <source>AllPermission.getActions()</source>
          <target state="translated">AllPermission.getActions()</target>
        </trans-unit>
        <trans-unit id="282fdfead05010951fcba0e66cc861260dac4ed4" translate="yes" xml:space="preserve">
          <source>AllPermission.hashCode()</source>
          <target state="translated">AllPermission.hashCode()</target>
        </trans-unit>
        <trans-unit id="09c789ee830660d92f0ed7ac5aff140cc871c47c" translate="yes" xml:space="preserve">
          <source>AllPermission.implies()</source>
          <target state="translated">AllPermission.implies()</target>
        </trans-unit>
        <trans-unit id="1dd626787fd17604e67248ff5016be9dd5711758" translate="yes" xml:space="preserve">
          <source>AllPermission.newPermissionCollection()</source>
          <target state="translated">AllPermission.newPermissionCollection()</target>
        </trans-unit>
        <trans-unit id="7cdecfbc79de7a75526174857fc1fb45ec9351ec" translate="yes" xml:space="preserve">
          <source>Allocate an array to store items of the type appropriate (which is determined by the subclass).</source>
          <target state="translated">적절한 유형의 항목을 저장할 배열을 할당하십시오 (하위 클래스에 의해 결정됨).</target>
        </trans-unit>
        <trans-unit id="b0102d5545a465557ed2434df9b565c9df2f2a02" translate="yes" xml:space="preserve">
          <source>Allocates a &lt;code&gt;Boolean&lt;/code&gt; object representing the &lt;code&gt;value&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 인수를 나타내는 &lt;code&gt;Boolean&lt;/code&gt; 객체를 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="a7cb7a017c485740b5bdae16b91784dc0e0503e4" translate="yes" xml:space="preserve">
          <source>Allocates a &lt;code&gt;Boolean&lt;/code&gt; object representing the value &lt;code&gt;true&lt;/code&gt; if the string argument is not &lt;code&gt;null&lt;/code&gt; and is equal, ignoring case, to the string &lt;code&gt;&quot;true&quot;&lt;/code&gt;. Otherwise, allocate a &lt;code&gt;Boolean&lt;/code&gt; object representing the value &lt;code&gt;false&lt;/code&gt;. Examples:</source>
          <target state="translated">문자열 인수가 &lt;code&gt;null&lt;/code&gt; 이 아니고 대소 문자를 무시하고 문자열 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 와 동일한 경우 &lt;code&gt;true&lt;/code&gt; 값을 나타내는 &lt;code&gt;Boolean&lt;/code&gt; 오브젝트를 할당합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 값을 나타내는 &lt;code&gt;Boolean&lt;/code&gt; 객체를 할당하십시오 . 예 :</target>
        </trans-unit>
        <trans-unit id="a660ae5be3c8951957fe3931afd30ca5733f3f31" translate="yes" xml:space="preserve">
          <source>Allocates a &lt;code&gt;Boolean&lt;/code&gt; object representing the value &lt;code&gt;true&lt;/code&gt; if the string argument is not &lt;code&gt;null&lt;/code&gt; and is equal, ignoring case, to the string &lt;code&gt;&quot;true&quot;&lt;/code&gt;. Otherwise, allocates a &lt;code&gt;Boolean&lt;/code&gt; object representing the value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">문자열 인수가 &lt;code&gt;null&lt;/code&gt; 이 아니고 대소 문자를 무시하고 동일한 경우 &lt;code&gt;true&lt;/code&gt; 값을 나타내는 &lt;code&gt;Boolean&lt;/code&gt; 객체를 문자열 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 에 할당합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 값을 나타내는 &lt;code&gt;Boolean&lt;/code&gt; 객체를 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="04d4d8290dd406df6bb52a538b1bfff2196872e8" translate="yes" xml:space="preserve">
          <source>Allocates a &lt;code&gt;Date&lt;/code&gt; object and initializes it so that it represents midnight, local time, at the beginning of the day specified by the &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;date&lt;/code&gt; arguments.</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; 객체를 할당 하고 &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; 및 &lt;code&gt;date&lt;/code&gt; 인수로 지정된 날짜의 시작 부분에 자정, 현지 시간을 나타내도록 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="9cfd074747db0fee258747b34ca62219c9acf7dd" translate="yes" xml:space="preserve">
          <source>Allocates a &lt;code&gt;Date&lt;/code&gt; object and initializes it so that it represents the date and time indicated by the string &lt;code&gt;s&lt;/code&gt;, which is interpreted as if by the &lt;a href=&quot;#parse(java.lang.String)&quot;&gt;&lt;code&gt;parse(java.lang.String)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; 객체를 할당 하고 초기화 하여 &lt;a href=&quot;#parse(java.lang.String)&quot;&gt; &lt;code&gt;parse(java.lang.String)&lt;/code&gt; &lt;/a&gt; 메서드 에서처럼 해석되는 문자열 &lt;code&gt;s&lt;/code&gt; 로 표시된 날짜와 시간을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="140bbbf0b0c1176e2b2a6f7fabff48d0641523f2" translate="yes" xml:space="preserve">
          <source>Allocates a &lt;code&gt;Date&lt;/code&gt; object and initializes it so that it represents the date and time indicated by the string &lt;code&gt;s&lt;/code&gt;, which is interpreted as if by the &lt;a href=&quot;date#parse-java.lang.String-&quot;&gt;&lt;code&gt;parse(java.lang.String)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">문자열 &lt;code&gt;s&lt;/code&gt; 로 표시된 날짜 및 시간을 나타내 도록 &lt;a href=&quot;date#parse-java.lang.String-&quot;&gt; &lt;code&gt;parse(java.lang.String)&lt;/code&gt; &lt;/a&gt; 메소드에 의해 해석되는 것처럼 &lt;code&gt;Date&lt;/code&gt; 객체를 할당 하고 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="51c102fe2ed2f5ad60839c9aba82ff94401ea99f" translate="yes" xml:space="preserve">
          <source>Allocates a &lt;code&gt;Date&lt;/code&gt; object and initializes it so that it represents the instant at the start of the minute specified by the &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;hrs&lt;/code&gt;, and &lt;code&gt;min&lt;/code&gt; arguments, in the local time zone.</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; 객체를 할당 하고 현지 시간대에서 &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; , &lt;code&gt;date&lt;/code&gt; , &lt;code&gt;hrs&lt;/code&gt; 및 &lt;code&gt;min&lt;/code&gt; 인수로 지정된 분의 시작 시점을 나타내도록 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="11ad84624b4fb93fb76d14a294513c85a8313a29" translate="yes" xml:space="preserve">
          <source>Allocates a &lt;code&gt;Date&lt;/code&gt; object and initializes it so that it represents the instant at the start of the second specified by the &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;hrs&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, and &lt;code&gt;sec&lt;/code&gt; arguments, in the local time zone.</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; 객체를 할당 하고 현지 시간대에서 &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; , &lt;code&gt;date&lt;/code&gt; , &lt;code&gt;hrs&lt;/code&gt; , &lt;code&gt;min&lt;/code&gt; 및 &lt;code&gt;sec&lt;/code&gt; 인수로 지정된 초가 시작될 때의 순간을 나타내도록 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="a5b5cdf1c2c5b083aabd0860f8d53f937e7fabd4" translate="yes" xml:space="preserve">
          <source>Allocates a &lt;code&gt;Date&lt;/code&gt; object and initializes it so that it represents the time at which it was allocated, measured to the nearest millisecond.</source>
          <target state="translated">할당하는 &lt;code&gt;Date&lt;/code&gt; 객체 그래서 그것은 할당 된 시간을 나타내는이 초기화 그것은, 가장 가까운 밀리 초 단위로 측정 하였다.</target>
        </trans-unit>
        <trans-unit id="585781cf114f76a2b6643381d7f90677723b7ef2" translate="yes" xml:space="preserve">
          <source>Allocates a &lt;code&gt;Date&lt;/code&gt; object and initializes it to represent the specified number of milliseconds since the standard base time known as &quot;the epoch&quot;, namely January 1, 1970, 00:00:00 GMT.</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; 객체를 할당 하고 표준 시간 ( &quot;epoch&quot;, 1970 년 1 월 1 일 00:00:00 GMT) 이후 지정된 밀리 초 수를 나타내도록 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="0cf5859a59622db20e3ed46a01095b5294a04c4c" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;String&lt;/code&gt; constructed from a subarray of an array of 8-bit integer values.</source>
          <target state="translated">8 비트 정수 값 배열의 하위 배열로 구성된 새 &lt;code&gt;String&lt;/code&gt; 할당 합니다.</target>
        </trans-unit>
        <trans-unit id="ef953bbc5695959846fba49f20f5d076bccf0fb9" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;String&lt;/code&gt; containing characters constructed from an array of 8-bit integer values. Each character</source>
          <target state="translated">8 비트 정수 값의 배열로 구성된 문자를 포함 하는 새 &lt;code&gt;String&lt;/code&gt; 을 할당 합니다. 각 캐릭터</target>
        </trans-unit>
        <trans-unit id="f00f3a21a07061947e60addc05be5d8595d63f32" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;String&lt;/code&gt; so that it represents the sequence of characters currently contained in the character array argument.</source>
          <target state="translated">현재 문자 배열 인수에 포함 된 문자 시퀀스를 나타내도록 새 &lt;code&gt;String&lt;/code&gt; 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="9c8e596a3ef14be7a18041da1dc3763431308afa" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;String&lt;/code&gt; so that it represents the sequence of characters currently contained in the character array argument. The contents of the character array are copied; subsequent modification of the character array does not affect the newly created string.</source>
          <target state="translated">문자 배열 인수에 현재 포함 된 문자 시퀀스를 나타내도록 새 &lt;code&gt;String&lt;/code&gt; 할당합니다 . 문자 배열의 내용이 복사됩니다. 문자 배열의 후속 수정은 새로 작성된 문자열에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4edd6d2bb6d63a4723405599d6da85495bee0ab0" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;String&lt;/code&gt; that contains characters from a subarray of the &lt;a href=&quot;character#unicode&quot;&gt;Unicode code point&lt;/a&gt; array argument.</source>
          <target state="translated">&lt;a href=&quot;character#unicode&quot;&gt;유니 코드 코드 포인트&lt;/a&gt; 배열 인수 의 하위 배열에있는 문자를 포함 하는 새 &lt;code&gt;String&lt;/code&gt; 을 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="39c3606961402c3f0c5c6e94bc00e4e9384e40a1" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;String&lt;/code&gt; that contains characters from a subarray of the &lt;a href=&quot;character#unicode&quot;&gt;Unicode code point&lt;/a&gt; array argument. The &lt;code&gt;offset&lt;/code&gt; argument is the index of the first code point of the subarray and the &lt;code&gt;count&lt;/code&gt; argument specifies the length of the subarray. The contents of the subarray are converted to &lt;code&gt;char&lt;/code&gt;s; subsequent modification of the &lt;code&gt;int&lt;/code&gt; array does not affect the newly created string.</source>
          <target state="translated">&lt;a href=&quot;character#unicode&quot;&gt;유니 코드 코드 포인트&lt;/a&gt; 배열 인수 의 서브 어레이에서 문자를 포함 하는 새 &lt;code&gt;String&lt;/code&gt; 을 할당합니다 . &lt;code&gt;offset&lt;/code&gt; 인자 부분 배열과의 첫 번째 코드 포인트의 인덱스 &lt;code&gt;count&lt;/code&gt; 인자 부분 배열의 길이를 지정한다. 부분 배열의 내용으로 변환 &lt;code&gt;char&lt;/code&gt; 의; &lt;code&gt;int&lt;/code&gt; 배열 의 후속 수정은 새로 작성된 문자열에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a9b55f74722b8cb259c595689960c5dc677b0c26" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;String&lt;/code&gt; that contains characters from a subarray of the character array argument.</source>
          <target state="translated">문자 배열 인수의 하위 배열에있는 문자를 포함 하는 새 &lt;code&gt;String&lt;/code&gt; 을 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="e910397eea6e5262f52da25cdeb4114ce5afb76f" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;String&lt;/code&gt; that contains characters from a subarray of the character array argument. The &lt;code&gt;offset&lt;/code&gt; argument is the index of the first character of the subarray and the &lt;code&gt;count&lt;/code&gt; argument specifies the length of the subarray. The contents of the subarray are copied; subsequent modification of the character array does not affect the newly created string.</source>
          <target state="translated">문자 배열 인수의 서브 어레이에서 문자를 포함 하는 새 &lt;code&gt;String&lt;/code&gt; 을 할당합니다 . &lt;code&gt;offset&lt;/code&gt; 인자 부분 배열의 선두의 문자의 인덱스 &lt;code&gt;count&lt;/code&gt; 인수 지정 배열의 길이. 하위 배열의 내용이 복사됩니다. 문자 배열의 후속 수정은 새로 작성된 문자열에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a93ee9c762977870c5261c5d04a97c44d3d8330e" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object so that it has &lt;code&gt;target&lt;/code&gt; as its run object, has the specified &lt;code&gt;name&lt;/code&gt; as its name, and belongs to the thread group referred to by &lt;code&gt;group&lt;/code&gt;, and has the specified</source>
          <target state="translated">할당하는 새로운 &lt;code&gt;Thread&lt;/code&gt; 객체 그래서 가지고 &lt;code&gt;target&lt;/code&gt; , 그 실행 객체로 지정한 &lt;code&gt;name&lt;/code&gt; 의 이름으로, 그리고 스레드 그룹에 의해 참조 속한 &lt;code&gt;group&lt;/code&gt; , 지정된있다</target>
        </trans-unit>
        <trans-unit id="1dd2356c24a92918ee3afd1d3be4053b1fd90923" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object so that it has &lt;code&gt;target&lt;/code&gt; as its run object, has the specified &lt;code&gt;name&lt;/code&gt; as its name, and belongs to the thread group referred to by &lt;code&gt;group&lt;/code&gt;.</source>
          <target state="translated">할당하는 새로운 &lt;code&gt;Thread&lt;/code&gt; 객체는 그래서가 가지고있는 &lt;code&gt;target&lt;/code&gt; 의 실행 객체로, 지정된이 &lt;code&gt;name&lt;/code&gt; 의 이름으로, 그리고 스레드 그룹에 의해 참조 속한 &lt;code&gt;group&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5110685efc26cf389de01581027ee9d7d4ef3ea6" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object so that it has &lt;code&gt;target&lt;/code&gt; as its run object, has the specified &lt;code&gt;name&lt;/code&gt; as its name, belongs to the thread group referred to by &lt;code&gt;group&lt;/code&gt;, has the specified &lt;code&gt;stackSize&lt;/code&gt;, and inherits initial values for &lt;a href=&quot;inheritablethreadlocal&quot;&gt;inheritable thread-local&lt;/a&gt; variables if &lt;code&gt;inheritThreadLocals&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">할당하는 새로운 &lt;code&gt;Thread&lt;/code&gt; 객체 그래서 가지고 &lt;code&gt;target&lt;/code&gt; 그 런타임 객체로 지정한 &lt;code&gt;name&lt;/code&gt; 의 이름을, 스레드 그룹에 의해 참조 속하는 &lt;code&gt;group&lt;/code&gt; 의 지정한 &lt;code&gt;stackSize&lt;/code&gt; 초기 값 및 상속 &lt;a href=&quot;inheritablethreadlocal&quot;&gt;상속 스레드 로컬&lt;/a&gt; 경우 변수 &lt;code&gt;inheritThreadLocals&lt;/code&gt; 을 이다 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b15a141d135bdb44c55e780465cdd0b3805cc8d" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object.</source>
          <target state="translated">새 &lt;code&gt;Thread&lt;/code&gt; 개체를 할당 합니다.</target>
        </trans-unit>
        <trans-unit id="a9fc3503b13b2d4835e764d2ecfdaf5bb01a5e98" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object. This constructor has the same effect as &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)&quot;&gt;Thread&lt;/a&gt;&lt;code&gt;(group, null, name)&lt;/code&gt;.</source>
          <target state="translated">새 &lt;code&gt;Thread&lt;/code&gt; 개체를 할당 합니다. 이 생성자는 &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)&quot;&gt;Thread &lt;/a&gt; &lt;code&gt;(group, null, name)&lt;/code&gt; 와 동일한 효과를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="747da3c8bc1f785748ed4cfd9d359476075a463d" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object. This constructor has the same effect as &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)&quot;&gt;Thread&lt;/a&gt;&lt;code&gt;(group, target, gname)&lt;/code&gt; ,where &lt;code&gt;gname&lt;/code&gt; is a newly generated name. Automatically generated names are of the form &lt;code&gt;&quot;Thread-&quot;+&lt;/code&gt;</source>
          <target state="translated">새 &lt;code&gt;Thread&lt;/code&gt; 개체를 할당 합니다. 이 생성자는 &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)&quot;&gt;Thread &lt;/a&gt; &lt;code&gt;(group, target, gname)&lt;/code&gt; 와 동일한 효과 를가집니다 . 여기서 &lt;code&gt;gname&lt;/code&gt; 은 새로 생성 된 이름입니다. 자동 생성 된 이름은 &lt;code&gt;&quot;Thread-&quot;+&lt;/code&gt; 형식입니다.</target>
        </trans-unit>
        <trans-unit id="36a69f1c17c8faa387753fa8f3d1c7322ce26f5a" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object. This constructor has the same effect as &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)&quot;&gt;Thread&lt;/a&gt;&lt;code&gt;(null, null, gname)&lt;/code&gt;, where &lt;code&gt;gname&lt;/code&gt; is a newly generated name. Automatically generated names are of the form &lt;code&gt;&quot;Thread-&quot;+&lt;/code&gt;</source>
          <target state="translated">새 &lt;code&gt;Thread&lt;/code&gt; 개체를 할당 합니다. 이 생성자는 &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)&quot;&gt;Thread &lt;/a&gt; &lt;code&gt;(null, null, gname)&lt;/code&gt; 와 동일한 효과를 가지며 여기서 &lt;code&gt;gname&lt;/code&gt; 은 새로 생성 된 이름입니다. 자동 생성 된 이름은 &lt;code&gt;&quot;Thread-&quot;+&lt;/code&gt; 형식입니다.</target>
        </trans-unit>
        <trans-unit id="9d23a1808e2402ccf8ccf8ece2b844d60e0f506c" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object. This constructor has the same effect as &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)&quot;&gt;Thread&lt;/a&gt;&lt;code&gt;(null, null, name)&lt;/code&gt;.</source>
          <target state="translated">새 &lt;code&gt;Thread&lt;/code&gt; 개체를 할당 합니다. 이 생성자는 &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)&quot;&gt;Thread &lt;/a&gt; &lt;code&gt;(null, null, name)&lt;/code&gt; 과 동일한 효과를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="33543c0fa9d9fe7e7a09ea878d4c07ccdb556e1b" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object. This constructor has the same effect as &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)&quot;&gt;Thread&lt;/a&gt;&lt;code&gt;(null, target, gname)&lt;/code&gt;, where &lt;code&gt;gname&lt;/code&gt; is a newly generated name. Automatically generated names are of the form &lt;code&gt;&quot;Thread-&quot;+&lt;/code&gt;</source>
          <target state="translated">새 &lt;code&gt;Thread&lt;/code&gt; 개체를 할당 합니다. 이 생성자는 &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)&quot;&gt;Thread &lt;/a&gt; &lt;code&gt;(null, target, gname)&lt;/code&gt; 와 동일한 효과를 가지며 여기서 &lt;code&gt;gname&lt;/code&gt; 은 새로 생성 된 이름입니다. 자동 생성 된 이름은 &lt;code&gt;&quot;Thread-&quot;+&lt;/code&gt; 형식입니다.</target>
        </trans-unit>
        <trans-unit id="01f9f271f9094e66aa3f39c0ef79cd7a264ab442" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object. This constructor has the same effect as &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)&quot;&gt;Thread&lt;/a&gt;&lt;code&gt;(null, target, name)&lt;/code&gt;.</source>
          <target state="translated">새 &lt;code&gt;Thread&lt;/code&gt; 개체를 할당 합니다. 이 생성자는 &lt;a href=&quot;#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)&quot;&gt;Thread &lt;/a&gt; &lt;code&gt;(null, target, name)&lt;/code&gt; 과 동일한 효과를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="85532a2ac39a192cf876ed81b6b383be867f6006" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object. This constructor has the same effect as &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt;Thread&lt;/a&gt;&lt;code&gt;(group, null, name)&lt;/code&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;Thread&lt;/code&gt; 객체를 할당 합니다. 이 생성자는 &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt;Thread &lt;/a&gt; &lt;code&gt;(group, null, name)&lt;/code&gt; 와 동일한 효과를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="254c7cc1416f2423a02692399bfeedf618021117" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object. This constructor has the same effect as &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt;Thread&lt;/a&gt;&lt;code&gt;(group, target, gname)&lt;/code&gt; ,where &lt;code&gt;gname&lt;/code&gt; is a newly generated name. Automatically generated names are of the form &lt;code&gt;&quot;Thread-&quot;+&lt;/code&gt;</source>
          <target state="translated">새로운 &lt;code&gt;Thread&lt;/code&gt; 객체를 할당 합니다. 이 생성자는 &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt;Thread &lt;/a&gt; &lt;code&gt;(group, target, gname)&lt;/code&gt; 와 동일한 효과를 갖습니다 . 여기서 &lt;code&gt;gname&lt;/code&gt; 은 새로 생성 된 이름입니다. 자동 생성 된 이름은 &lt;code&gt;&quot;Thread-&quot;+&lt;/code&gt; 형식입니다.</target>
        </trans-unit>
        <trans-unit id="8a3e7f212962df0ef5ba2e7a85fe1eaae75f2334" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object. This constructor has the same effect as &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt;Thread&lt;/a&gt;&lt;code&gt;(null, null, gname)&lt;/code&gt;, where &lt;code&gt;gname&lt;/code&gt; is a newly generated name. Automatically generated names are of the form &lt;code&gt;&quot;Thread-&quot;+&lt;/code&gt;</source>
          <target state="translated">새로운 &lt;code&gt;Thread&lt;/code&gt; 객체를 할당 합니다. 이 생성자는 &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt;Thread &lt;/a&gt; &lt;code&gt;(null, null, gname)&lt;/code&gt; 와 동일한 효과를 갖습니다 . 여기서 &lt;code&gt;gname&lt;/code&gt; 은 새로 생성 된 이름입니다. 자동 생성 된 이름은 &lt;code&gt;&quot;Thread-&quot;+&lt;/code&gt; 형식입니다.</target>
        </trans-unit>
        <trans-unit id="ec44f0dc0ae0e3fe1397e51a3c7339f90fc04e11" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object. This constructor has the same effect as &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt;Thread&lt;/a&gt;&lt;code&gt;(null, null, name)&lt;/code&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;Thread&lt;/code&gt; 객체를 할당 합니다. 이 생성자는 &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt;Thread &lt;/a&gt; &lt;code&gt;(null, null, name)&lt;/code&gt; 와 동일한 효과를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="6d8098381ff006509c1aee6e5c093de0ae6ec366" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object. This constructor has the same effect as &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt;Thread&lt;/a&gt;&lt;code&gt;(null, target, gname)&lt;/code&gt;, where &lt;code&gt;gname&lt;/code&gt; is a newly generated name. Automatically generated names are of the form &lt;code&gt;&quot;Thread-&quot;+&lt;/code&gt;</source>
          <target state="translated">새로운 &lt;code&gt;Thread&lt;/code&gt; 객체를 할당 합니다. 이 생성자는 &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt;Thread &lt;/a&gt; &lt;code&gt;(null, target, gname)&lt;/code&gt; 와 동일한 효과를 갖습니다 . 여기서 &lt;code&gt;gname&lt;/code&gt; 은 새로 생성 된 이름입니다. 자동 생성 된 이름은 &lt;code&gt;&quot;Thread-&quot;+&lt;/code&gt; 형식입니다.</target>
        </trans-unit>
        <trans-unit id="dbd8afa6f3a21c1eac47f5732e559ded6c4e6d7d" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Thread&lt;/code&gt; object. This constructor has the same effect as &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt;Thread&lt;/a&gt;&lt;code&gt;(null, target, name)&lt;/code&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;Thread&lt;/code&gt; 객체를 할당 합니다. 이 생성자는 &lt;a href=&quot;thread#Thread-java.lang.ThreadGroup-java.lang.Runnable-java.lang.String-&quot;&gt;Thread &lt;/a&gt; &lt;code&gt;(null, target, name)&lt;/code&gt; 와 동일한 효과를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="bfe086528a1da079bdc51b0a6e46974a5a7e9e80" translate="yes" xml:space="preserve">
          <source>Allocates a new byte buffer.</source>
          <target state="translated">새로운 바이트 버퍼를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="705ff5da7a82198c53ef8acfa4a738aed7d53a26" translate="yes" xml:space="preserve">
          <source>Allocates a new char buffer.</source>
          <target state="translated">새로운 문자 버퍼를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="5356afae0b05788555efe7774c40b990b6f58157" translate="yes" xml:space="preserve">
          <source>Allocates a new direct byte buffer.</source>
          <target state="translated">새로운 다이렉트 바이트 버퍼를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="c2651e8e1e3b517c36c2a91f97e2af4053eaf3c0" translate="yes" xml:space="preserve">
          <source>Allocates a new double buffer.</source>
          <target state="translated">새로운 이중 버퍼를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="d9dc346e81c65ad086d86bca3f3ef2ff8bba2ab8" translate="yes" xml:space="preserve">
          <source>Allocates a new float buffer.</source>
          <target state="translated">새로운 float 버퍼를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="3fd434c48a0303a01e836c1bca44c021088132bb" translate="yes" xml:space="preserve">
          <source>Allocates a new int buffer.</source>
          <target state="translated">새로운 int 버퍼를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="a4029adfb4a609e1bdd33f482f1e972a4343a43b" translate="yes" xml:space="preserve">
          <source>Allocates a new long buffer.</source>
          <target state="translated">새로운 긴 버퍼를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="15f7a8bf3f1bbbacf52904e7ead9d27c54956a25" translate="yes" xml:space="preserve">
          <source>Allocates a new short buffer.</source>
          <target state="translated">새로운 짧은 버퍼를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="5aa331cb7dfd6e41a67a0807301cce2aca11d5e3" translate="yes" xml:space="preserve">
          <source>Allocates a new string that contains the sequence of characters currently contained in the string buffer argument.</source>
          <target state="translated">현재 문자열 버퍼 인수에 포함 된 문자 시퀀스를 포함하는 새 문자열을 할당합니다.</target>
        </trans-unit>
        <trans-unit id="2b8f8bad1ede05568438b7c371810c33847859a9" translate="yes" xml:space="preserve">
          <source>Allocates a new string that contains the sequence of characters currently contained in the string buffer argument. The contents of the string buffer are copied; subsequent modification of the string buffer does not affect the newly created string.</source>
          <target state="translated">현재 문자열 버퍼 인수에 포함 된 문자 시퀀스를 포함하는 새 문자열을 할당합니다. 문자열 버퍼의 내용이 복사됩니다. 이후의 문자열 버퍼 수정은 새로 생성 된 문자열에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1b3b7ca5cec07fa14fe67c5fa3505c72680d9dc6" translate="yes" xml:space="preserve">
          <source>Allocates a new string that contains the sequence of characters currently contained in the string builder argument.</source>
          <target state="translated">현재 문자열 작성기 인수에 포함 된 문자 시퀀스를 포함하는 새 문자열을 할당합니다.</target>
        </trans-unit>
        <trans-unit id="3fe969ebeca279477fa7ea95ccd93ca49bc485c8" translate="yes" xml:space="preserve">
          <source>Allocates a new string that contains the sequence of characters currently contained in the string builder argument. The contents of the string builder are copied; subsequent modification of the string builder does not affect the newly created string.</source>
          <target state="translated">현재 문자열 작성기 인수에 포함 된 문자 시퀀스를 포함하는 새 문자열을 할당합니다. 문자열 작성기의 내용이 복사됩니다. 이후에 문자열 작성기를 수정해도 새로 생성 된 문자열에는 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="74ca75b26031ce5a824df9c639d3b13e7be0ef61" translate="yes" xml:space="preserve">
          <source>Allocates a region for a child view.</source>
          <target state="translated">하위보기에 영역을 할당합니다.</target>
        </trans-unit>
        <trans-unit id="48ae169e84efbd6cefc9c27fa32db0c24dc60313" translate="yes" xml:space="preserve">
          <source>Allow &lt;code&gt;Connection&lt;/code&gt;, &lt;code&gt;ResultSet&lt;/code&gt; and &lt;code&gt;Statement&lt;/code&gt; objects to be used with the try-with-resources statement</source>
          <target state="translated">&lt;code&gt;Connection&lt;/code&gt; , &lt;code&gt;ResultSet&lt;/code&gt; 및 &lt;code&gt;Statement&lt;/code&gt; 오브젝트가 try-with-resources 문과 함께 사용 되도록 허용</target>
        </trans-unit>
        <trans-unit id="e4d33ff5efc56f0ee1a424f5d6a8c5a7821ea32f" translate="yes" xml:space="preserve">
          <source>Allow an application to register a DTD event handler.</source>
          <target state="translated">애플리케이션이 DTD 이벤트 핸들러를 등록하도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="636715a91708b88543a14f9ce1c187d275807cef" translate="yes" xml:space="preserve">
          <source>Allow an application to register a content event handler.</source>
          <target state="translated">애플리케이션이 콘텐츠 이벤트 핸들러를 등록하도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="760d584239bc17bb565d224ef720b5959adde8f4" translate="yes" xml:space="preserve">
          <source>Allow an application to register a custom entity resolver.</source>
          <target state="translated">애플리케이션이 사용자 지정 엔터티 확인자를 등록 할 수 있도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="945cba31ad9d4fc1a63096aacdc8c0b7f5ee5a29" translate="yes" xml:space="preserve">
          <source>Allow an application to register a document event handler.</source>
          <target state="translated">애플리케이션이 문서 이벤트 핸들러를 등록하도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="03bf88dac94de5f1e8da1a23f8437380f499ff4d" translate="yes" xml:space="preserve">
          <source>Allow an application to register an entity resolver.</source>
          <target state="translated">애플리케이션이 엔티티 확인자를 등록하도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="16295730ed751fd6f8c0b2f2bd2c2f6fbc56da13" translate="yes" xml:space="preserve">
          <source>Allow an application to register an error event handler.</source>
          <target state="translated">애플리케이션이 오류 이벤트 핸들러를 등록하도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="c5de75359fa092079143ea5f2ec81aabe66e272e" translate="yes" xml:space="preserve">
          <source>Allow an application to request a locale for errors and warnings.</source>
          <target state="translated">애플리케이션이 오류 및 경고에 대한 로케일을 요청할 수 있도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="8d752cce7890ef7af6c3d3acf6f53f715831efc0" translate="yes" xml:space="preserve">
          <source>Allow cleanup after the remote call has completed.</source>
          <target state="translated">원격 호출이 완료된 후 정리를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="6b6cf80d865e24487214ba3bd8d3deca4f0f5a9c" translate="yes" xml:space="preserve">
          <source>Allow revocation check to succeed if the revocation status cannot be determined for one of the following reasons:</source>
          <target state="translated">다음 이유 중 하나로 해지 상태를 확인할 수없는 경우 해지 확인이 성공하도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="20d2c2f76014cb0528fd0266177d9b363bd8ce0a" translate="yes" xml:space="preserve">
          <source>Allow revocation check to succeed if the revocation status cannot be determined for one of the following reasons: The CRL or OCSP response cannot be obtained because of a network error.</source>
          <target state="translated">다음 이유 중 하나로 인해 해지 상태를 확인할 수없는 경우 해지 확인이 성공하도록 허용합니다. 네트워크 오류로 인해 CRL 또는 OCSP 응답을 얻을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f2eb622d10b612223eae01c7782e825eadfd5204" translate="yes" xml:space="preserve">
          <source>Allow the application to adjust the type of &lt;code&gt;JOIN&lt;/code&gt; imposed on tables contained within the JoinRowSet object instance.</source>
          <target state="translated">애플리케이션 이 JoinRowSet 개체 인스턴스에 포함 된 테이블에 부과 된 &lt;code&gt;JOIN&lt;/code&gt; 유형을 조정할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="5c4006fd845d7f959634d353436aec005fd4796a" translate="yes" xml:space="preserve">
          <source>Allow the application to adjust the type of &lt;code&gt;JOIN&lt;/code&gt; imposed on tables contained within the JoinRowSet object instance. Implementations should throw a SQLException if they do not support a given &lt;code&gt;JOIN&lt;/code&gt; type.</source>
          <target state="translated">애플리케이션 이 JoinRowSet 개체 인스턴스에 포함 된 테이블에 부과 된 &lt;code&gt;JOIN&lt;/code&gt; 유형을 조정할 수 있도록합니다 . 구현은 주어진 &lt;code&gt;JOIN&lt;/code&gt; 유형을 지원하지 않는 경우 SQLException을 발생시켜야 합니다.</target>
        </trans-unit>
        <trans-unit id="70b054be3aea00cba68a53e0b2d8cb68b398144c" translate="yes" xml:space="preserve">
          <source>Allow the application to resolve external entities.</source>
          <target state="translated">애플리케이션이 외부 엔티티를 분석하도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="8ad1a45963d36c3749517880c1a53342e11934c5" translate="yes" xml:space="preserve">
          <source>Allow the application to resolve external resources.</source>
          <target state="translated">애플리케이션이 외부 리소스를 확인할 수 있도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="6526eb2b999dbcfc7b83a9b9c188ff144e213d87" translate="yes" xml:space="preserve">
          <source>Allow the named provider to be an AuthProvider for login and logout operations.</source>
          <target state="translated">명명 된 공급자가 로그인 및 로그 아웃 작업을위한 AuthProvider가되도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="02a162c68efe6ee94b512fd3efdcee635856a4f1" translate="yes" xml:space="preserve">
          <source>Allow transmission of broadcast datagrams</source>
          <target state="translated">브로드 캐스트 데이터 그램 전송 허용</target>
        </trans-unit>
        <trans-unit id="52b77d5f25f1894b0a58d912d0d0527f456bcad5" translate="yes" xml:space="preserve">
          <source>Allow transmission of broadcast datagrams.</source>
          <target state="translated">브로드 캐스트 데이터 그램의 전송을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="3e4072a9808f96cb507a1b44dc792519ccf68113" translate="yes" xml:space="preserve">
          <source>Allows Java code to manipulate JavaScript objects.</source>
          <target state="translated">Java 코드가 JavaScript 객체를 조작 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="55b08935ce8f70d976fe57b62eb6b81bf4126fec" translate="yes" xml:space="preserve">
          <source>Allows a line to engage in data I/O.</source>
          <target state="translated">라인이 데이터 I / O에 참여할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8cc5db0d1e410bd63c500f035adcc6d541ccf15b" translate="yes" xml:space="preserve">
          <source>Allows a line to engage in data I/O. If invoked on a line that is already running, this method does nothing. Unless the data in the buffer has been flushed, the line resumes I/O starting with the first frame that was unprocessed at the time the line was stopped. When audio capture or playback starts, a &lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt; event is generated.</source>
          <target state="translated">라인이 데이터 I / O에 참여할 수 있습니다. 이미 실행중인 라인에서 호출 된 경우이 메서드는 아무 작업도 수행하지 않습니다. 버퍼의 데이터가 플러시되지 않는 한, 라인은 라인이 중지되었을 때 처리되지 않은 첫 번째 프레임부터 I / O를 재개합니다. 오디오 캡처 또는 재생이 시작되면 &lt;a href=&quot;lineevent.type#START&quot;&gt; &lt;code&gt;START&lt;/code&gt; &lt;/a&gt; 이벤트가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="88303d3c2aa7661c357c333f9298fe4b2c3817bb" translate="yes" xml:space="preserve">
          <source>Allows a line to engage in data I/O. If invoked on a line that is already running, this method does nothing. Unless the data in the buffer has been flushed, the line resumes I/O starting with the first frame that was unprocessed at the time the line was stopped. When audio capture or playback starts, a &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event is generated.</source>
          <target state="translated">라인이 데이터 I / O에 참여할 수 있습니다. 이미 실행중인 라인에서 호출 된 경우이 메서드는 아무 작업도 수행하지 않습니다. 버퍼의 데이터가 플러시되지 않는 한, 라인은 라인이 중지되었을 때 처리되지 않은 첫 번째 프레임부터 I / O를 재개합니다. 오디오 캡처 또는 재생이 시작되면 &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 이벤트가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="4a6a2344cd9571300d256f70ca86f876b04a4076" translate="yes" xml:space="preserve">
          <source>Allows a query to be performed in the context of a specific MBean server.</source>
          <target state="translated">특정 MBean 서버의 컨텍스트에서 쿼리를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa9fa6176a73cabac4f17541c71a19c2aae4c4e4" translate="yes" xml:space="preserve">
          <source>Allows an &lt;code&gt;Object&lt;/code&gt; reference of a given class type to be stored in nodes implementing the named element.</source>
          <target state="translated">지정된 클래스 유형 의 &lt;code&gt;Object&lt;/code&gt; 참조를 명명 된 요소를 구현하는 노드에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eee26321ae70d1b4fae35493db7173d0543f8f8b" translate="yes" xml:space="preserve">
          <source>Allows an &lt;code&gt;Object&lt;/code&gt; reference of a given class type to be stored in nodes implementing the named element. The value of the &lt;code&gt;Object&lt;/code&gt; is unconstrained other than by its class type.</source>
          <target state="translated">지정된 클래스 유형 의 &lt;code&gt;Object&lt;/code&gt; 참조를 명명 된 요소를 구현하는 노드에 저장할 수 있습니다. &lt;code&gt;Object&lt;/code&gt; 의 값은 클래스 유형 외에는 제한되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eb2e832463ffc4d8431a6bcea0192d6a41645f6e" translate="yes" xml:space="preserve">
          <source>Allows an &lt;code&gt;Object&lt;/code&gt; reference of a given class type to be stored in nodes implementing the named element. The value of the &lt;code&gt;Object&lt;/code&gt; must an array of objects of class type given by &lt;code&gt;classType&lt;/code&gt;, with at least &lt;code&gt;arrayMinLength&lt;/code&gt; and at most &lt;code&gt;arrayMaxLength&lt;/code&gt; elements.</source>
          <target state="translated">지정된 클래스 유형 의 &lt;code&gt;Object&lt;/code&gt; 참조를 명명 된 요소를 구현하는 노드에 저장할 수 있습니다. &lt;code&gt;Object&lt;/code&gt; 의 값은 적어도 &lt;code&gt;arrayMinLength&lt;/code&gt; 요소 와 최대 &lt;code&gt;arrayMaxLength&lt;/code&gt; 요소 가있는 &lt;code&gt;classType&lt;/code&gt; 에서 제공하는 클래스 유형의 개체 배열이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="559c8256654eeed5ebcd6fdae71d07fff6bc575d" translate="yes" xml:space="preserve">
          <source>Allows an &lt;code&gt;Object&lt;/code&gt; reference of a given class type to be stored in nodes implementing the named element. The value of the &lt;code&gt;Object&lt;/code&gt; must be one of the values given by &lt;code&gt;enumeratedValues&lt;/code&gt;.</source>
          <target state="translated">지정된 클래스 유형 의 &lt;code&gt;Object&lt;/code&gt; 참조를 명명 된 요소를 구현하는 노드에 저장할 수 있습니다. 의 값 &lt;code&gt;Object&lt;/code&gt; 에 의해 주어진 값 중 하나 여야합니다 &lt;code&gt;enumeratedValues&lt;/code&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="7cce09c38889da034abcff26e11ef369be36c636" translate="yes" xml:space="preserve">
          <source>Allows an &lt;code&gt;Object&lt;/code&gt; reference of a given class type to be stored in nodes implementing the named element. The value of the &lt;code&gt;Object&lt;/code&gt; must be within the range given by &lt;code&gt;minValue&lt;/code&gt; and &lt;code&gt;maxValue&lt;/code&gt;. Furthermore, the class type must implement the &lt;code&gt;Comparable&lt;/code&gt; interface.</source>
          <target state="translated">지정된 클래스 유형 의 &lt;code&gt;Object&lt;/code&gt; 참조를 명명 된 요소를 구현하는 노드에 저장할 수 있습니다. &lt;code&gt;Object&lt;/code&gt; 의 값은 &lt;code&gt;minValue&lt;/code&gt; 및 &lt;code&gt;maxValue&lt;/code&gt; 로 지정된 범위 내에 있어야합니다 . 또한 클래스 유형은 &lt;code&gt;Comparable&lt;/code&gt; 인터페이스를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e22108997bf594c2e18d973b2472cb25d50d38c6" translate="yes" xml:space="preserve">
          <source>Allows an action to be invoked on the Dynamic MBean.</source>
          <target state="translated">동적 MBean에서 조치를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="708e51470e3473963c3d95273d4b6941d63cc552" translate="yes" xml:space="preserve">
          <source>Allows an application to directly register an instance of a class which implements a print service.</source>
          <target state="translated">애플리케이션이 인쇄 서비스를 구현하는 클래스의 인스턴스를 직접 등록 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="9b9ea3529e5ff2df56876aa4635422dc7b565109" translate="yes" xml:space="preserve">
          <source>Allows an application to directly register an instance of a class which implements a print service. The lookup operations for this service will be performed by the &lt;code&gt;PrintServiceLookup&lt;/code&gt; class using the attribute values and classes reported by the service. This may be less efficient than a lookup service tuned for that service. Therefore registering a &lt;code&gt;PrintServiceLookup&lt;/code&gt; instance instead is recommended. The method returns &lt;code&gt;true&lt;/code&gt; if this service is not previously registered and is now successfully registered. This method should not be called with &lt;code&gt;StreamPrintService&lt;/code&gt; instances. They will always fail to register and the method will return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">애플리케이션이 인쇄 서비스를 구현하는 클래스의 인스턴스를 직접 등록 할 수 있도록합니다. 이 서비스에 대한 조회 작업은 서비스에서 보고하는 속성 값과 클래스를 사용하여 &lt;code&gt;PrintServiceLookup&lt;/code&gt; 클래스에서 수행됩니다 . 이는 해당 서비스에 맞게 조정 된 조회 서비스보다 효율성이 떨어질 수 있습니다. 따라서 대신 &lt;code&gt;PrintServiceLookup&lt;/code&gt; 인스턴스를 등록하는 것이 좋습니다. 이 서비스가 이전에 등록되지 않았고 이제 성공적으로 등록 된 경우 메서드는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 이 메서드는 &lt;code&gt;StreamPrintService&lt;/code&gt; 인스턴스 와 함께 호출하면 안됩니다 . 그들은 항상 등록에 실패하고 메서드는 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="6219247faff3fe96fbc0aec2566fb10ffe5eb3b7" translate="yes" xml:space="preserve">
          <source>Allows an application to directly register an instance of a class which implements a print service. The lookup operations for this service will be performed by the PrintServiceLookup class using the attribute values and classes reported by the service. This may be less efficient than a lookup service tuned for that service. Therefore registering a &lt;code&gt;PrintServiceLookup&lt;/code&gt; instance instead is recommended. The method returns true if this service is not previously registered and is now successfully registered. This method should not be called with StreamPrintService instances. They will always fail to register and the method will return false.</source>
          <target state="translated">애플리케이션이 인쇄 서비스를 구현하는 클래스의 인스턴스를 직접 등록 할 수 있도록합니다. 이 서비스에 대한 조회 작업은 서비스에서보고하는 속성 값과 클래스를 사용하여 PrintServiceLookup 클래스에서 수행됩니다. 이는 해당 서비스에 맞게 조정 된 조회 서비스보다 효율성이 떨어질 수 있습니다. 따라서 대신 &lt;code&gt;PrintServiceLookup&lt;/code&gt; 인스턴스를 등록하는 것이 좋습니다. 이 서비스가 이전에 등록되지 않았고 이제 성공적으로 등록 된 경우 메서드는 true를 반환합니다. 이 메서드는 StreamPrintService 인스턴스와 함께 호출하면 안됩니다. 그들은 항상 등록에 실패하고 메서드는 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a9d266d14c8f0b3025d518d1308375787b77b892" translate="yes" xml:space="preserve">
          <source>Allows an application to explicitly register a class that implements lookup services.</source>
          <target state="translated">애플리케이션이 조회 서비스를 구현하는 클래스를 명시 적으로 등록 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="63f560a15274d18bf653cdfc46ad7181ea43d3b7" translate="yes" xml:space="preserve">
          <source>Allows an application to explicitly register a class that implements lookup services. The registration will not persist across VM invocations. This is useful if an application needs to make a new service available that is not part of the installation. If the lookup service is already registered, or cannot be registered, the method returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">애플리케이션이 조회 서비스를 구현하는 클래스를 명시 적으로 등록 할 수 있도록합니다. 등록은 VM 호출간에 지속되지 않습니다. 이는 애플리케이션이 설치의 일부가 아닌 새 서비스를 사용할 수 있도록해야하는 경우에 유용합니다. 조회 서비스가 이미 등록되었거나 등록 할 수없는 경우 메서드는 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3980278006c799059e04ff7a9d5a27b6398572b8" translate="yes" xml:space="preserve">
          <source>Allows an application to explicitly register a class that implements lookup services. The registration will not persist across VM invocations. This is useful if an application needs to make a new service available that is not part of the installation. If the lookup service is already registered, or cannot be registered, the method returns false.</source>
          <target state="translated">애플리케이션이 조회 서비스를 구현하는 클래스를 명시 적으로 등록 할 수 있도록합니다. 등록은 VM 호출간에 지속되지 않습니다. 이는 애플리케이션이 설치의 일부가 아닌 새 서비스를 사용할 수 있도록해야하는 경우에 유용합니다. 조회 서비스가 이미 등록되었거나 등록 할 수없는 경우 메서드는 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="435580aa8c3c15c52bcf639dae114fb24e093ba6" translate="yes" xml:space="preserve">
          <source>Allows an object instance to be created given a string representation of an object name and the full class name, including the package name.</source>
          <target state="translated">개체 이름의 문자열 표현과 패키지 이름을 포함한 전체 클래스 이름이 주어지면 개체 인스턴스를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65f4a5566d3d06ab4cb772828e9b93b9c2d5ea8c" translate="yes" xml:space="preserve">
          <source>Allows an object instance to be created given an object name and the full class name, including the package name.</source>
          <target state="translated">개체 이름과 패키지 이름을 포함한 전체 클래스 이름을 지정하여 개체 인스턴스를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42981f6977730a538fe7e2b2f95dbb091ebc1184" translate="yes" xml:space="preserve">
          <source>Allows any resources held by this object to be released.</source>
          <target state="translated">이 개체가 보유한 모든 리소스를 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ee300bae376dad1dd1989304650ddd33d067eee" translate="yes" xml:space="preserve">
          <source>Allows any resources held by this object to be released. The result of calling any other method (other than &lt;code&gt;finalize&lt;/code&gt;) subsequent to a call to this method is undefined.</source>
          <target state="translated">이 개체가 보유한 모든 리소스를 해제 할 수 있습니다. 이 메서드 에 대한 호출 이후에 &lt;code&gt;finalize&lt;/code&gt; 이외의 다른 메서드를 호출 한 결과 는 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7b956e87af862cf05cc9f7efede5175f7f5d1911" translate="yes" xml:space="preserve">
          <source>Allows applications to map references to external entities into input sources, or tell the parser it should use conventional URI resolution.</source>
          <target state="translated">애플리케이션이 외부 엔티티에 대한 참조를 입력 소스에 매핑하거나 파서에 기존 URI 확인을 사용해야한다고 알릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63e9b536833c6139e1d8605893cb4f96d99a223c" translate="yes" xml:space="preserve">
          <source>Allows applications to map references to external entities into input sources, or tell the parser it should use conventional URI resolution. This method is only called for external entities which have been properly declared. This method provides more flexibility than the &lt;a href=&quot;../entityresolver&quot;&gt;&lt;code&gt;EntityResolver&lt;/code&gt;&lt;/a&gt; interface, supporting implementations of more complex catalogue schemes such as the one defined by the &lt;a href=&quot;http://www.oasis-open.org/committees/entity/spec-2001-08-06.html&quot;&gt;OASIS XML Catalogs&lt;/a&gt; specification.</source>
          <target state="translated">애플리케이션이 외부 엔티티에 대한 참조를 입력 소스에 매핑하거나 파서에 기존 URI 확인을 사용해야한다고 알릴 수 있습니다. 이 메소드는 올바르게 선언 된 외부 엔티티에 대해서만 호출됩니다. 이 메서드는 &lt;a href=&quot;../entityresolver&quot;&gt; &lt;code&gt;EntityResolver&lt;/code&gt; &lt;/a&gt; 인터페이스 보다 더 많은 유연성을 제공 하여 &lt;a href=&quot;http://www.oasis-open.org/committees/entity/spec-2001-08-06.html&quot;&gt;OASIS XML 카탈로그&lt;/a&gt; 사양에 정의 된 것과 같은 더 복잡한 카탈로그 체계의 구현을 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="3823305acf5adda37ffcfc3b54a037f2e40613f6" translate="yes" xml:space="preserve">
          <source>Allows applications to provide an external subset for documents that don't explicitly define one.</source>
          <target state="translated">애플리케이션이 명시 적으로 정의하지 않은 문서에 대해 외부 하위 집합을 제공 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="777b0fc5840dbbcf854516623d23bb8ba7745c95" translate="yes" xml:space="preserve">
          <source>Allows applications to provide an external subset for documents that don't explicitly define one. Documents with DOCTYPE declarations that omit an external subset can thus augment the declarations available for validation, entity processing, and attribute processing (normalization, defaulting, and reporting types including ID). This augmentation is reported through the &lt;a href=&quot;lexicalhandler#startDTD(java.lang.String,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;startDTD()&lt;/code&gt;&lt;/a&gt; method as if the document text had originally included the external subset; this callback is made before any internal subset data or errors are reported.</source>
          <target state="translated">애플리케이션이 명시 적으로 정의하지 않은 문서에 대해 외부 하위 집합을 제공 할 수 있도록합니다. 따라서 외부 서브 세트를 생략하는 DOCTYPE 선언이있는 문서는 유효성 검증, 엔티티 처리 및 속성 처리 (정규화, 기본값 및보고 유형 (ID 포함))에 사용할 수있는 선언을 확장 할 수 있습니다. 이 증가는 마치 문서 텍스트가 원래 외부 서브 세트를 포함했던 것처럼 &lt;a href=&quot;lexicalhandler#startDTD(java.lang.String,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;startDTD()&lt;/code&gt; &lt;/a&gt; 메소드를 통해보고됩니다 . 이 콜백은 내부 하위 집합 데이터 또는 오류가보고되기 전에 만들어집니다.</target>
        </trans-unit>
        <trans-unit id="1bdd7b12241a639248df6856c504b7db8b5112ac" translate="yes" xml:space="preserve">
          <source>Allows code to identify and terminate processes that it did not create.</source>
          <target state="translated">코드가 생성하지 않은 프로세스를 식별하고 종료 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c96d92f67fc4bc750bd87570526e6c9c14c365a0" translate="yes" xml:space="preserve">
          <source>Allows developers to provide support for undo/redo in applications such as text editors.</source>
          <target state="translated">개발자가 텍스트 편집기와 같은 응용 프로그램에서 실행 취소 / 다시 실행에 대한 지원을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="317083886b044870444f2ab7dedeb4f1a198a1a0" translate="yes" xml:space="preserve">
          <source>Allows for further restricting of the characters that can be input.</source>
          <target state="translated">입력 할 수있는 문자를 추가로 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4adcc4d639cafbfc63ed47811e772a69f47b3ef" translate="yes" xml:space="preserve">
          <source>Allows for further restricting of the characters that can be input. Only characters specified in the mask, not in the &lt;code&gt;invalidCharacters&lt;/code&gt;, and in &lt;code&gt;validCharacters&lt;/code&gt; will be allowed to be input. Passing in null (the default) implies the valid characters are only bound by the mask and the invalid characters.</source>
          <target state="translated">입력 할 수있는 문자를 추가로 제한 할 수 있습니다. &lt;code&gt;invalidCharacters&lt;/code&gt; 및 &lt;code&gt;validCharacters&lt;/code&gt; 가 아닌 마스크에 지정된 문자 만 입력 할 수 있습니다. null (기본값)을 전달하는 것은 유효한 문자가 마스크와 유효하지 않은 문자로만 바인딩된다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="7952739fd6729fa4a43eb0780b632e385a9da969" translate="yes" xml:space="preserve">
          <source>Allows for further restricting of the characters that can be input. Only characters specified in the mask, not in the &lt;code&gt;invalidCharacters&lt;/code&gt;, and in &lt;code&gt;validCharacters&lt;/code&gt; will be allowed to be input. Passing in null (the default) implies the valid characters are only bound by the mask and the valid characters.</source>
          <target state="translated">입력 할 수있는 문자를 추가로 제한 할 수 있습니다. &lt;code&gt;invalidCharacters&lt;/code&gt; 및 &lt;code&gt;validCharacters&lt;/code&gt; 가 아닌 마스크에 지정된 문자 만 입력 할 수 있습니다. null (기본값) 전달은 유효한 문자가 마스크와 유효한 문자로만 바인딩된다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="df7f3b4b4286535ed1fdb7ec63bec6237f55f736" translate="yes" xml:space="preserve">
          <source>Allows the MBean to perform any operations it needs before being registered in the MBean Server.</source>
          <target state="translated">MBean이 MBean 서버에 등록되기 전에 필요한 모든 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="c5a80de51eede4d56eac8e232993c7d511addc2b" translate="yes" xml:space="preserve">
          <source>Allows the MBean to perform any operations it needs before being registered in the MBean Server. If the name of the MBean is not specified, the MBean can provide a name for its registration. If any exception is raised, the MBean will not be registered in the MBean Server.</source>
          <target state="translated">MBean이 MBean 서버에 등록되기 전에 필요한 모든 작업을 수행 할 수 있도록합니다. MBean의 이름이 지정되지 않은 경우 MBean은 등록 이름을 제공 할 수 있습니다. 예외가 발생하면 MBean은 MBean 서버에 등록되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f29449898e3fa20c080919c15df4e5a261f8fd08" translate="yes" xml:space="preserve">
          <source>Allows the MBean to perform any operations it needs before being registered in the MBean server.</source>
          <target state="translated">MBean이 MBean 서버에 등록되기 전에 필요한 모든 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="c11876fabb25cf4cb3d659c5ea736e31311fe1b7" translate="yes" xml:space="preserve">
          <source>Allows the MBean to perform any operations it needs before being registered in the MBean server. If the name of the MBean is not specified, the MBean can provide a name for its registration. If any exception is raised, the MBean will not be registered in the MBean server.</source>
          <target state="translated">MBean이 MBean 서버에 등록되기 전에 필요한 모든 작업을 수행 할 수 있도록합니다. MBean의 이름이 지정되지 않은 경우 MBean은 등록 이름을 제공 할 수 있습니다. 예외가 발생하면 MBean은 MBean 서버에 등록되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8c209da0b4fc46f8edab76301df1d908dc2e6844" translate="yes" xml:space="preserve">
          <source>Allows the MBean to perform any operations it needs before being unregistered by the MBean server.</source>
          <target state="translated">MBean 서버에서 등록을 해제하기 전에 MBean이 필요한 모든 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="ca574f4bc0f8b644a52b4b165875aa7351e56c07" translate="yes" xml:space="preserve">
          <source>Allows the MBean to perform any operations needed after having been registered in the MBean server or after the registration has failed.</source>
          <target state="translated">MBean 서버에 등록 된 후 또는 등록이 실패한 후 필요한 모든 작업을 MBean이 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="c5c75c591827e4f3ada6fb5fc292939d6419da50" translate="yes" xml:space="preserve">
          <source>Allows the MBean to perform any operations needed after having been unregistered in the MBean server.</source>
          <target state="translated">MBean이 MBean 서버에서 등록 해제 된 후 필요한 모든 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="83da700422f838a59cae1295c35c8387e0db99ca" translate="yes" xml:space="preserve">
          <source>Allows the XML parser to continue as if there is no match.</source>
          <target state="translated">XML 구문 분석기가 일치하는 항목이없는 것처럼 계속할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd9a3796aa7c07cfcc3dbb5271612e769f6fc952" translate="yes" xml:space="preserve">
          <source>Allows the invocation of the &lt;code&gt;Connection&lt;/code&gt; method &lt;code&gt;abort&lt;/code&gt;</source>
          <target state="translated">의 호출 할 수 있습니다 &lt;code&gt;Connection&lt;/code&gt; 방법 &lt;code&gt;abort&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38454a57380ed60fbbbdfb65b63b10b80c1e9b6b" translate="yes" xml:space="preserve">
          <source>Allows the invocation of the &lt;code&gt;Connection&lt;/code&gt; method &lt;code&gt;setNetworkTimeout&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Connection&lt;/code&gt; 메소드 &lt;code&gt;setNetworkTimeout&lt;/code&gt; 의 호출을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="400b769721c2ab768792395f365fbf392aa551aa" translate="yes" xml:space="preserve">
          <source>Allows the invocation of the &lt;code&gt;DriverManager&lt;/code&gt; method &lt;code&gt;deregisterDriver&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DriverManager&lt;/code&gt; 메소드 &lt;code&gt;deregisterDriver&lt;/code&gt; 의 호출을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="c75598ac4b97e12570960e16c3352a038aaa87b7" translate="yes" xml:space="preserve">
          <source>Allows the invocation of the &lt;code&gt;SyncFactory&lt;/code&gt; methods &lt;code&gt;setJNDIContext&lt;/code&gt; and &lt;code&gt;setLogger&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SyncFactory&lt;/code&gt; 메소드 &lt;code&gt;setJNDIContext&lt;/code&gt; 및 &lt;code&gt;setLogger&lt;/code&gt; 의 호출을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="a7b4100a3f26a32bd0e2fcacbc19e659e790c1f3" translate="yes" xml:space="preserve">
          <source>Allows the m-let to perform any operations it needs before being registered in the MBean server.</source>
          <target state="translated">m-let이 MBean 서버에 등록되기 전에 필요한 모든 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="0a183dcdd52f960761710ac32d7ee78373a175b3" translate="yes" xml:space="preserve">
          <source>Allows the m-let to perform any operations it needs before being registered in the MBean server. If the ObjectName is null, the m-let provides a default name for its registration &amp;lt;defaultDomain&amp;gt;:type=MLet</source>
          <target state="translated">m-let이 MBean 서버에 등록되기 전에 필요한 모든 작업을 수행 할 수 있도록합니다. ObjectName이 null 인 경우 m-let은 등록에 대한 기본 이름을 제공합니다. &amp;lt;defaultDomain&amp;gt; : type = MLet</target>
        </trans-unit>
        <trans-unit id="f943e57affa411401e6c43423f95b8394ceeb038" translate="yes" xml:space="preserve">
          <source>Allows the m-let to perform any operations it needs before being unregistered by the MBean server.</source>
          <target state="translated">m-let이 MBean 서버에 의해 등록 해제되기 전에 필요한 모든 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="7b258188d8243b4d2cbe9d888b0f2c040ae2e739" translate="yes" xml:space="preserve">
          <source>Allows the m-let to perform any operations needed after having been registered in the MBean server or after the registration has failed.</source>
          <target state="translated">m-let이 MBean 서버에 등록 된 후 또는 등록이 실패한 후 필요한 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="4fb6d74d6ec1dbe5b60f32c292e2bd985453c6f5" translate="yes" xml:space="preserve">
          <source>Allows the m-let to perform any operations needed after having been unregistered in the MBean server.</source>
          <target state="translated">m-let이 MBean 서버에서 등록 해제 된 후 필요한 모든 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="3f00d715fa8edd86887c52048fafe7dad6f01cc1" translate="yes" xml:space="preserve">
          <source>Allows the model to be safely rendered in the presence of concurrency, if the model supports being updated asynchronously.</source>
          <target state="translated">모델이 비동기 적으로 업데이트되는 것을 지원하는 경우 동시성이있는 상태에서 모델을 안전하게 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bca74e981aad0f17b90403a31c444833a84df3a3" translate="yes" xml:space="preserve">
          <source>Allows the model to be safely rendered in the presence of concurrency, if the model supports being updated asynchronously. The given runnable will be executed in a way that allows it to safely read the model with no changes while the runnable is being executed. The runnable itself may &lt;em&gt;not&lt;/em&gt; make any mutations.</source>
          <target state="translated">모델이 비동기 적으로 업데이트되는 것을 지원하는 경우 동시성이있는 상태에서 모델을 안전하게 렌더링 할 수 있습니다. 주어진 runnable은 runnable이 실행되는 동안 변경없이 모델을 안전하게 읽을 수있는 방식으로 실행됩니다. runnable 자체는 변형을 만들 수 &lt;em&gt;없습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="084f6de24ff8ced8c9df8f4258d81a3606e194e2" translate="yes" xml:space="preserve">
          <source>Allows the monitor MBean to perform any operations it needs before being registered in the MBean server.</source>
          <target state="translated">모니터 MBean이 MBean 서버에 등록되기 전에 필요한 모든 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="5234aeadbc44bd828d168608a5fa5af29572f335" translate="yes" xml:space="preserve">
          <source>Allows the monitor MBean to perform any operations it needs before being unregistered by the MBean server.</source>
          <target state="translated">모니터 MBean이 MBean 서버에 의해 등록 해제되기 전에 필요한 모든 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="d3a3c3d21372e9d302ede2c671bbc4b8aeb306e3" translate="yes" xml:space="preserve">
          <source>Allows the monitor MBean to perform any operations needed after having been registered in the MBean server or after the registration has failed.</source>
          <target state="translated">모니터 MBean이 MBean 서버에 등록 된 후 또는 등록이 실패한 후에 필요한 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="f2aeaae3a4e464a5b6d844261a6e001d10b28561" translate="yes" xml:space="preserve">
          <source>Allows the monitor MBean to perform any operations needed after having been unregistered by the MBean server.</source>
          <target state="translated">모니터 MBean이 MBean 서버에 의해 등록 해제 된 후 필요한 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="ac149c6d1498122170d97715df2d98846a4f4199" translate="yes" xml:space="preserve">
          <source>Allows the remote reference to clean up (or reuse) the connection. Done should only be called if the invoke returns successfully (non-exceptionally) to the stub.</source>
          <target state="translated">원격 참조가 연결을 정리 (또는 재사용) 할 수 있도록합니다. Done은 호출이 성공적으로 (예외적으로) 스텁에 반환되는 경우에만 호출되어야합니다.</target>
        </trans-unit>
        <trans-unit id="f277384e68e96767c7f8d206acb63862221f7799" translate="yes" xml:space="preserve">
          <source>Allows the renderer's tips to be used if there is text set.</source>
          <target state="translated">텍스트 세트가있는 경우 렌더러의 팁을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b6f8ce4e87c4035709f2bbe797971d13a0a9946" translate="yes" xml:space="preserve">
          <source>Allows the timer MBean to perform any operations it needs before being registered in the MBean server.</source>
          <target state="translated">타이머 MBean이 MBean 서버에 등록되기 전에 필요한 모든 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="9905000485d22ead60bdefc5c060df8caac1658a" translate="yes" xml:space="preserve">
          <source>Allows the timer MBean to perform any operations it needs before being unregistered by the MBean server.</source>
          <target state="translated">타이머 MBean이 MBean 서버에 의해 등록 해제되기 전에 필요한 모든 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="356eb44c6cbd3c89d1650e8ad2514b8ea3633db3" translate="yes" xml:space="preserve">
          <source>Allows the timer MBean to perform any operations needed after having been registered in the MBean server or after the registration has failed.</source>
          <target state="translated">타이머 MBean이 MBean 서버에 등록 된 후 또는 등록이 실패한 후 필요한 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="5e33792d1cca411c5fd475fdcff135b6a7c97ee7" translate="yes" xml:space="preserve">
          <source>Allows the timer MBean to perform any operations needed after having been unregistered by the MBean server.</source>
          <target state="translated">타이머 MBean이 MBean 서버에 의해 등록 해제 된 후 필요한 작업을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="84a760fd46b567abf1d0a60b972fe193c7b21c0b" translate="yes" xml:space="preserve">
          <source>Allows the user to retrieve specific attributes on the underlying implementation.</source>
          <target state="translated">사용자가 기본 구현에서 특정 속성을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c56bac791d3ce4d052202e407eec8ccc4a863368" translate="yes" xml:space="preserve">
          <source>Allows the user to retrieve specific attributes on the underlying implementation. An &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if the underlying implementation doesn't recognize the attribute.</source>
          <target state="translated">사용자가 기본 구현에서 특정 속성을 검색 할 수 있습니다. &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가 기본이되는 구현이 속성을 인식하지 않는 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="911c6c89eb61ea7e583848cafa76bc37f4a9f7aa" translate="yes" xml:space="preserve">
          <source>Allows the user to set specific attributes on the underlying implementation.</source>
          <target state="translated">사용자가 기본 구현에 특정 속성을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0144371ca0f775fb1a10caab388d92389f6df0cb" translate="yes" xml:space="preserve">
          <source>Allows the user to set specific attributes on the underlying implementation. An attribute in this context is defined to be an option that the implementation provides. An &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if the underlying implementation doesn't recognize the attribute.</source>
          <target state="translated">사용자가 기본 구현에 특정 속성을 설정할 수 있습니다. 이 컨텍스트의 속성은 구현에서 제공하는 옵션으로 정의됩니다. &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가 기본이되는 구현이 속성을 인식하지 않는 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1d6bc1c70099856f256bff774088c5a55aeb65c2" translate="yes" xml:space="preserve">
          <source>Allows the user to set specific feature/property on the underlying implementation.</source>
          <target state="translated">사용자가 기본 구현에 특정 기능 / 속성을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb08605a221bec660efa5e602dc40a36f04870e6" translate="yes" xml:space="preserve">
          <source>Allows the user to set specific feature/property on the underlying implementation. The underlying implementation is not required to support every setting of every property in the specification and may use IllegalArgumentException to signal that an unsupported property may not be set with the specified value.</source>
          <target state="translated">사용자가 기본 구현에 특정 기능 / 속성을 설정할 수 있습니다. 기본 구현은 사양에있는 모든 속성의 모든 설정을 지원할 필요가 없으며 IllegalArgumentException을 사용하여 지원되지 않는 속성이 지정된 값으로 설정되지 않을 수 있음을 알릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7b71fefaff78a0fe90f4fd8566793d71b7cfe49" translate="yes" xml:space="preserve">
          <source>Allows the user to set specific features/properties on the underlying implementation.</source>
          <target state="translated">사용자가 기본 구현에 특정 기능 / 속성을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d8beefb7e12674812b2017a64a5824fe5b87060" translate="yes" xml:space="preserve">
          <source>Allows you to get the behavior of the decimal separator with integers.</source>
          <target state="translated">정수로 소수 구분 기호의 동작을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2bddc9dedb5d647fe99cfad540c2e8bb947c5eed" translate="yes" xml:space="preserve">
          <source>Allows you to get the behavior of the decimal separator with integers. (The decimal separator will always appear with decimals.)</source>
          <target state="translated">정수로 소수 구분 기호의 동작을 얻을 수 있습니다. (소수 구분 기호는 항상 소수점으로 나타납니다.)</target>
        </trans-unit>
        <trans-unit id="6a6672ccfc2d0f6460194b3a65fefef57d7bb3cf" translate="yes" xml:space="preserve">
          <source>Allows you to instantiate and register one or several MBeans in the MBean server coming from a remote URL.</source>
          <target state="translated">원격 URL에서 오는 MBean 서버에서 하나 또는 여러 개의 MBean을 인스턴스화하고 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0a1488802c70fe3a5b40c50ad3bed0f0fc9324a" translate="yes" xml:space="preserve">
          <source>Allows you to instantiate and register one or several MBeans in the MBean server coming from a remote URL. M-let is a shortcut for management applet. The m-let service does this by loading an m-let text file, which specifies information on the MBeans to be obtained. The information on each MBean is specified in a single instance of a tag, called the MLET tag. The location of the m-let text file is specified by a URL.</source>
          <target state="translated">원격 URL에서 오는 MBean 서버에서 하나 또는 여러 개의 MBean을 인스턴스화하고 등록 할 수 있습니다. M-let은 관리 애플릿의 바로 가기입니다. m-let 서비스는 획득 할 MBean에 대한 정보를 지정하는 m-let 텍스트 파일을로드하여이를 수행합니다. 각 MBean에 대한 정보는 MLET 태그라고하는 태그의 단일 인스턴스에 지정됩니다. m-let 텍스트 파일의 위치는 URL로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="364327b497a6697d3363861a864a43f5984a21c8" translate="yes" xml:space="preserve">
          <source>Allows you to set the behavior of the decimal separator with integers.</source>
          <target state="translated">정수로 소수점 구분 기호의 동작을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="141c09be24ac8dc0c73efe39d899176f388e7f74" translate="yes" xml:space="preserve">
          <source>Allows you to set the behavior of the decimal separator with integers. (The decimal separator will always appear with decimals.)</source>
          <target state="translated">정수로 소수점 구분 기호의 동작을 설정할 수 있습니다. (소수 구분 기호는 항상 소수점으로 나타납니다.)</target>
        </trans-unit>
        <trans-unit id="7b5817f09431f2a2810fc80889dec1d6f0b2a2da" translate="yes" xml:space="preserve">
          <source>Allows you to set the number formatter.</source>
          <target state="translated">숫자 포맷터를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8857e406b73edfe35b7d65900707523dc28f0f7f" translate="yes" xml:space="preserve">
          <source>Along the vertical axis the parallel group is the maximum of the height of each of the components. As all three components have the same height, the parallel group has the same height.</source>
          <target state="translated">수직 축을 따라 평행 그룹은 각 구성 요소의 최대 높이입니다. 세 구성 요소 모두 높이가 같으므로 평행 그룹의 높이가 같습니다.</target>
        </trans-unit>
        <trans-unit id="7a0a145018448791078259157b2dd4ecf6594597" translate="yes" xml:space="preserve">
          <source>Alpha interpolation hint key.</source>
          <target state="translated">알파 보간 힌트 키입니다.</target>
        </trans-unit>
        <trans-unit id="c0f88df5614ad17e920ec87052e6ee83dba324c3" translate="yes" xml:space="preserve">
          <source>Alpha interpolation hint key. The &lt;code&gt;ALPHA_INTERPOLATION&lt;/code&gt; hint is a general hint that provides a high level recommendation as to whether to bias alpha blending algorithm choices more for speed or quality when evaluating tradeoffs.</source>
          <target state="translated">알파 보간 힌트 키입니다. &lt;code&gt;ALPHA_INTERPOLATION&lt;/code&gt; 의 힌트 절충을 평가할 때보다 속도 나 품질 바이어스 알파 블렌딩 알고리즘을 선택할지에 하이 레벨의 권고를 제공하는 일반 힌트.</target>
        </trans-unit>
        <trans-unit id="85829b950e414197a730c6bc4612e02a45b51d1e" translate="yes" xml:space="preserve">
          <source>Alpha interpolation hint value -- alpha blending algorithms are chosen by the implementation for a good tradeoff of performance vs. quality.</source>
          <target state="translated">알파 보간 힌트 값-알파 블렌딩 알고리즘은 성능 대 품질의 좋은 균형을 위해 구현에 의해 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="f928797ba0f3a2589028ae198813a4d4b1e068b1" translate="yes" xml:space="preserve">
          <source>Alpha interpolation hint value -- alpha blending algorithms are chosen with a preference for calculation speed.</source>
          <target state="translated">알파 보간 힌트 값-계산 속도에 대한 기본 설정으로 알파 블렌딩 알고리즘이 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="f1fc0cb2c69307cb123d5c605c653a9ea156f9b1" translate="yes" xml:space="preserve">
          <source>Alpha interpolation hint value -- alpha blending algorithms are chosen with a preference for precision and visual quality.</source>
          <target state="translated">알파 보간 힌트 값-정밀도와 시각적 품질을 위해 선호하는 알파 블렌딩 알고리즘이 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="48bf1bbffb71eed93868c5173372d03c5abf518b" translate="yes" xml:space="preserve">
          <source>AlphaComposite</source>
          <target state="translated">AlphaComposite</target>
        </trans-unit>
        <trans-unit id="a707a85edc66a653109fa80da8910d24c0d7d6d7" translate="yes" xml:space="preserve">
          <source>Alphabetic</source>
          <target state="translated">Alphabetic</target>
        </trans-unit>
        <trans-unit id="1ae3e0056cd784ead2780334dd8d36832de21f5e" translate="yes" xml:space="preserve">
          <source>AlreadyBoundException</source>
          <target state="translated">AlreadyBoundException</target>
        </trans-unit>
        <trans-unit id="bc7323c5305283cae4b34772641fba6048ec0c98" translate="yes" xml:space="preserve">
          <source>AlreadyConnectedException</source>
          <target state="translated">AlreadyConnectedException</target>
        </trans-unit>
        <trans-unit id="c966b9cdb7a6fb661c7c9ca06cb62dccfd7f5bb8" translate="yes" xml:space="preserve">
          <source>Also as of &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt;, in the reference implementation an &lt;code&gt;IntersectionType&lt;/code&gt; is used to model the explicit target type of a cast expression.</source>
          <target state="translated">또한 &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt; 부터 참조 구현에서 &lt;code&gt;IntersectionType&lt;/code&gt; 이 캐스트 표현식의 명시 적 대상 유형을 모델링하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="119bfe24019c8ef59786473fa4eaf3f11d6e3588" translate="yes" xml:space="preserve">
          <source>Also if &lt;code&gt;DocFlavor&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; it must be a flavor supported by this &lt;code&gt;PrintService&lt;/code&gt;, else &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown.</source>
          <target state="translated">또한 &lt;code&gt;DocFlavor&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 이 아니면이 &lt;code&gt;PrintService&lt;/code&gt; 에서 지원하는 플레이버 여야하며 그렇지 않으면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="560fd3ef72e5e9fd9b4771391936c978312d3981" translate="yes" xml:space="preserve">
          <source>Also if DocFlavor is not null it must be a flavor supported by this PrintService, else IllegalArgumentException will be thrown.</source>
          <target state="translated">또한 DocFlavor가 null이 아니면이 PrintService에서 지원하는 플레이버 여야합니다. 그렇지 않으면 IllegalArgumentException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="992bca3a4a5a3792b826c12b141a6363324eaddf" translate="yes" xml:space="preserve">
          <source>Also note that the LoginModule-specific options,</source>
          <target state="translated">또한 LoginModule 특정 옵션,</target>
        </trans-unit>
        <trans-unit id="90f3015f263b589659c5ccecb06f0805828705e5" translate="yes" xml:space="preserve">
          <source>Also note that this class defines only the equations for combining color and alpha values in a purely mathematical sense. The accurate application of its equations depends on the way the data is retrieved from its sources and stored in its destinations. See &lt;a href=&quot;#caveats&quot;&gt;Implementation Caveats&lt;/a&gt; for further information.</source>
          <target state="translated">또한이 클래스는 순전히 수학적 의미에서 색상과 알파 값을 결합하는 방정식 만 정의합니다. 방정식의 정확한 적용은 데이터가 소스에서 검색되고 대상에 저장되는 방식에 따라 다릅니다. 자세한 내용은 &lt;a href=&quot;#caveats&quot;&gt;구현주의 사항&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6df6434b764698b3b113972baa6dc107cad3b492" translate="yes" xml:space="preserve">
          <source>Also note that this class stores passwords as char arrays instead of &lt;code&gt;String&lt;/code&gt; objects (which would seem more logical), because the String class is immutable and there is no way to overwrite its internal value when the password stored in it is no longer needed. Hence, this class requests the password as a char array, so it can be overwritten when done.</source>
          <target state="translated">또한이 클래스는 &lt;code&gt;String&lt;/code&gt; 객체 대신 char 배열로 암호를 저장합니다 (더 논리적으로 보임). String 클래스는 변경할 수없고 저장된 암호가 더 이상 필요하지 않을 때 내부 값을 덮어 쓸 방법이 없기 때문입니다. 따라서이 클래스는 암호를 char 배열로 요청하므로 완료되면 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35f79146b32e806c24e3d8d584c559446565cf54" translate="yes" xml:space="preserve">
          <source>Also note that this is different than the behaviour of the Java runtime when interpreting a stream of bytes as text data. That assumes the default encoding for the user's locale. Thus, when spooling a file in local encoding to a Java Print Service it is important to correctly specify the encoding. Developers working in the English locales should be particularly conscious of this, as their platform encoding corresponds to the default mime charset. By this coincidence that particular case may work without specifying the encoding of platform data.</source>
          <target state="translated">또한 이것은 바이트 스트림을 텍스트 데이터로 해석 할 때 Java 런타임의 동작과 다릅니다. 이는 사용자 로케일에 대한 기본 인코딩을 가정합니다. 따라서 로컬 인코딩의 파일을 Java 인쇄 서비스로 스풀링 할 때 인코딩을 올바르게 지정하는 것이 중요합니다. 영어 로케일에서 작업하는 개발자는 플랫폼 인코딩이 기본 MIME 문자 세트에 해당하므로 특히이를 염두에 두어야합니다. 이 우연으로 특정 경우는 플랫폼 데이터의 인코딩을 지정하지 않고도 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d37eb49280470e438e7e699ff631a3f84af89ba2" translate="yes" xml:space="preserve">
          <source>Also,</source>
          <target state="translated">Also,</target>
        </trans-unit>
        <trans-unit id="0828aa191164f435ae5c642e783d579d0720fdb1" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;DataFlavor&lt;/code&gt; instances with the &quot;text&quot; primary MIME type may have a &quot;charset&quot; parameter. Refer to &lt;a href=&quot;http://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC 2046&lt;/a&gt; and &lt;a href=&quot;#selectBestTextFlavor(java.awt.datatransfer.DataFlavor%5B%5D)&quot;&gt;&lt;code&gt;selectBestTextFlavor(java.awt.datatransfer.DataFlavor[])&lt;/code&gt;&lt;/a&gt; for details on &quot;text&quot; MIME types and the &quot;charset&quot; parameter.</source>
          <target state="translated">또한 &quot;text&quot;기본 MIME 유형이있는 &lt;code&gt;DataFlavor&lt;/code&gt; 인스턴스에는 &quot;charset&quot;매개 변수가있을 수 있습니다. 참조 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC 2046&lt;/a&gt; 및 &lt;a href=&quot;#selectBestTextFlavor(java.awt.datatransfer.DataFlavor%5B%5D)&quot;&gt; &lt;code&gt;selectBestTextFlavor(java.awt.datatransfer.DataFlavor[])&lt;/code&gt; &lt;/a&gt; &quot;텍스트&quot;MIME 유형과 &quot;문자 집합&quot;매개 변수에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="c11ff389de5e1093d8269486a802f8e1e587f039" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;DataFlavor&lt;/code&gt; instances with the &quot;text&quot; primary MIME type may have a &quot;charset&quot; parameter. Refer to &lt;a href=&quot;https://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC 2046&lt;/a&gt; and &lt;a href=&quot;#selectBestTextFlavor(java.awt.datatransfer.DataFlavor%5B%5D)&quot;&gt;&lt;code&gt;selectBestTextFlavor(java.awt.datatransfer.DataFlavor[])&lt;/code&gt;&lt;/a&gt; for details on &quot;text&quot; MIME types and the &quot;charset&quot; parameter.</source>
          <target state="translated">또한 &quot;text&quot;기본 MIME 유형이있는 &lt;code&gt;DataFlavor&lt;/code&gt; 인스턴스에는 &quot;charset&quot;매개 변수가있을 수 있습니다. 참조 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC 2046&lt;/a&gt; 및 &lt;a href=&quot;#selectBestTextFlavor(java.awt.datatransfer.DataFlavor%5B%5D)&quot;&gt; &lt;code&gt;selectBestTextFlavor(java.awt.datatransfer.DataFlavor[])&lt;/code&gt; &lt;/a&gt; &quot;텍스트&quot;MIME 유형과 &quot;문자 집합&quot;매개 변수에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="635721d29e61a012f46ed0db479ee83735a9cddc" translate="yes" xml:space="preserve">
          <source>Also, Java treats the language &quot;no&quot; as a synonym of Norwegian Bokm&amp;aring;l &quot;nb&quot;. Except for the single case &lt;code&gt;Locale(&quot;no&quot;,
 &quot;NO&quot;, &quot;NY&quot;)&lt;/code&gt; (handled above), when an input &lt;code&gt;Locale&lt;/code&gt; has language &quot;no&quot; or &quot;nb&quot;, candidate &lt;code&gt;Locale&lt;/code&gt;s with language code &quot;no&quot; and &quot;nb&quot; are interleaved, first using the requested language, then using its synonym. For example, &lt;code&gt;Locale(&quot;nb&quot;, &quot;NO&quot;, &quot;POSIX&quot;)&lt;/code&gt; generates the following candidate list:</source>
          <target state="translated">또한 Java는 &quot;no&quot;라는 언어를 노르웨이어 Bokm&amp;aring;l &quot;nb&quot;의 동의어로 취급합니다. 단일 사례 &lt;code&gt;Locale(&quot;no&quot;, &quot;NO&quot;, &quot;NY&quot;)&lt;/code&gt; (위에서 처리됨)을 제외하고 입력 &lt;code&gt;Locale&lt;/code&gt; 에 언어 &quot;no&quot;또는 &quot;nb&quot;가있는 경우 언어 코드 &quot;no&quot;및 &quot;nb&quot;가있는 후보 &lt;code&gt;Locale&lt;/code&gt; &quot;는 먼저 요청 된 언어를 사용한 다음 동의어를 사용하여 인터리브됩니다. 예를 들어, &lt;code&gt;Locale(&quot;nb&quot;, &quot;NO&quot;, &quot;POSIX&quot;)&lt;/code&gt; 는 다음 후보 목록을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="59d0f477c29e9007865e779e1d42c76d90531350" translate="yes" xml:space="preserve">
          <source>Also, division of a duration by a number is not provided because the &lt;code&gt;Duration&lt;/code&gt; class can only deal with finite precision decimal numbers. For example, one cannot represent 1 sec divided by 3.</source>
          <target state="translated">또한 &lt;code&gt;Duration&lt;/code&gt; 클래스는 유한 정밀도 십진수 만 처리 할 수 있으므로 기간을 숫자로 나누는 기능이 제공되지 않습니다 . 예를 들어 1 초를 3으로 나눈 값을 나타낼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2b022799707861a6bf51bb67873edc5f74d0ebdf" translate="yes" xml:space="preserve">
          <source>Also, for service providers that only support registration for existing targets, when the target that a listener has registered for is subsequently removed from the namespace, the listener is notified via a &lt;code&gt;NamingExceptionEvent&lt;/code&gt; (containing a &lt;code&gt;NameNotFoundException&lt;/code&gt;).</source>
          <target state="translated">또한 기존 대상에 대한 등록 만 지원하는 서비스 공급자의 경우 리스너가 등록한 대상이 나중에 네임 스페이스에서 제거되면 리스너는 &lt;code&gt;NamingExceptionEvent&lt;/code&gt; ( &lt;code&gt;NameNotFoundException&lt;/code&gt; 포함) 를 통해 알림을 받습니다.</target>
        </trans-unit>
        <trans-unit id="af832291322327937b4d8d1356b3a90daa55ea9c" translate="yes" xml:space="preserve">
          <source>Also, if incremental drawing is in effect, the value of the system property &lt;code&gt;awt.image.redrawrate&lt;/code&gt; is interpreted as an integer to give the maximum redraw rate, in milliseconds. If the system property is missing or cannot be interpreted as an integer, the redraw rate is once every 100ms.</source>
          <target state="translated">또한 증분 그리기가 적용되는 경우 시스템 속성 &lt;code&gt;awt.image.redrawrate&lt;/code&gt; 의 값이 정수로 해석되어 최대 다시 그리기 속도 (밀리 초)를 제공합니다. 시스템 속성이 없거나 정수로 해석 할 수없는 경우 다시 그리기 속도는 100ms마다 한 번입니다.</target>
        </trans-unit>
        <trans-unit id="58803d9b47588916677c8a6bcf7ac0bab90fda4b" translate="yes" xml:space="preserve">
          <source>Also, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with the string &lt;code&gt;&quot;putProviderProperty.&quot;+name&lt;/code&gt;, where &lt;code&gt;name&lt;/code&gt; is the provider name, to see if it's ok to set this provider's property values. If the default implementation of &lt;code&gt;checkSecurityAccess&lt;/code&gt; is used (that is, that method is not overridden), then this results in a call to the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with a &lt;code&gt;SecurityPermission(&quot;putProviderProperty.&quot;+name)&lt;/code&gt; permission.</source>
          <target state="translated">또한 보안 관리자가있는 경우 &lt;code&gt;&quot;putProviderProperty.&quot;+name&lt;/code&gt; 문자열로 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 메서드가 호출됩니다 . 여기서 &lt;code&gt;name&lt;/code&gt; 은 공급자 이름 이며이 공급자의 속성 값을 설정해도되는지 확인합니다. &lt;code&gt;checkSecurityAccess&lt;/code&gt; 의 기본 구현 이 사용되는 경우 (즉, 해당 메서드가 재정의되지 않음) 이로 인해 &lt;code&gt;SecurityPermission(&quot;putProviderProperty.&quot;+name)&lt;/code&gt; 권한 이있는 보안 관리자의 &lt;code&gt;checkPermission&lt;/code&gt; 메서드가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="bb09f0f6f8e9dbba923816c9b72371f650027a44" translate="yes" xml:space="preserve">
          <source>Also, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with the string &lt;code&gt;&quot;putProviderProperty.&quot;+name&lt;/code&gt;, where &lt;code&gt;name&lt;/code&gt; is the provider name, to see if it's ok to set this provider's property values. If the default implementation of &lt;code&gt;checkSecurityAccess&lt;/code&gt; is used (that is, that method is not overriden), then this results in a call to the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with a &lt;code&gt;SecurityPermission(&quot;putProviderProperty.&quot;+name)&lt;/code&gt; permission.</source>
          <target state="translated">또한 보안 관리자가있는 경우 &lt;code&gt;&quot;putProviderProperty.&quot;+name&lt;/code&gt; 문자열을 사용하여 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 메서드를 호출합니다 . 여기서 &lt;code&gt;name&lt;/code&gt; 은 공급자 이름 이며이 공급자의 속성 값을 설정해도되는지 확인합니다. &lt;code&gt;checkSecurityAccess&lt;/code&gt; 의 기본 구현 이 사용되는 경우 (즉, 해당 메서드가 재정의되지 않음) &lt;code&gt;SecurityPermission(&quot;putProviderProperty.&quot;+name)&lt;/code&gt; 권한 이있는 보안 관리자의 &lt;code&gt;checkPermission&lt;/code&gt; 메서드가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="4d2b8ea19e9af9e3edf0fc60d11e85b062cfd508" translate="yes" xml:space="preserve">
          <source>Also, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with the string &lt;code&gt;&quot;removeProviderProperty.&quot;+name&lt;/code&gt;, where &lt;code&gt;name&lt;/code&gt; is the provider name, to see if it's ok to remove this provider's properties. If the default implementation of &lt;code&gt;checkSecurityAccess&lt;/code&gt; is used (that is, that method is not overridden), then this results in a call to the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with a &lt;code&gt;SecurityPermission(&quot;removeProviderProperty.&quot;+name)&lt;/code&gt; permission.</source>
          <target state="translated">또한 보안 관리자가있는 경우 &lt;code&gt;&quot;removeProviderProperty.&quot;+name&lt;/code&gt; 문자열을 사용하여 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 메서드를 호출합니다 . 여기서 &lt;code&gt;name&lt;/code&gt; 은 공급자 이름 이며이 공급자의 속성을 제거해도되는지 확인합니다. &lt;code&gt;checkSecurityAccess&lt;/code&gt; 의 기본 구현 이 사용되는 경우 (즉, 해당 메서드가 재정의되지 않음) 이로 인해 &lt;code&gt;SecurityPermission(&quot;removeProviderProperty.&quot;+name)&lt;/code&gt; 권한 이있는 보안 관리자의 &lt;code&gt;checkPermission&lt;/code&gt; 메서드가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="4b44feffb8d34a6389c30b3d2f510f12839adc6a" translate="yes" xml:space="preserve">
          <source>Also, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with the string &lt;code&gt;&quot;removeProviderProperty.&quot;+name&lt;/code&gt;, where &lt;code&gt;name&lt;/code&gt; is the provider name, to see if it's ok to remove this provider's properties. If the default implementation of &lt;code&gt;checkSecurityAccess&lt;/code&gt; is used (that is, that method is not overriden), then this results in a call to the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with a &lt;code&gt;SecurityPermission(&quot;removeProviderProperty.&quot;+name)&lt;/code&gt; permission.</source>
          <target state="translated">또한 보안 관리자가있는 경우 &lt;code&gt;&quot;removeProviderProperty.&quot;+name&lt;/code&gt; 문자열을 사용하여 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 메서드를 호출합니다 . 여기서 &lt;code&gt;name&lt;/code&gt; 은 공급자 이름 이며이 공급자의 속성을 제거해도되는지 확인합니다. &lt;code&gt;checkSecurityAccess&lt;/code&gt; 의 기본 구현 이 사용되는 경우 (즉, 해당 메서드가 재정의되지 않음) &lt;code&gt;SecurityPermission(&quot;removeProviderProperty.&quot;+name)&lt;/code&gt; 권한 이있는 보안 관리자의 &lt;code&gt;checkPermission&lt;/code&gt; 메서드가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="2484ef7e1a2973d2e0ace0ef44336cbdcf9a19a6" translate="yes" xml:space="preserve">
          <source>Also, implementations are allowed to use implementation-specific property/feature to alter the semantics of this method.</source>
          <target state="translated">또한, 구현은이 메소드의 의미를 변경하기 위해 구현 특정 속성 / 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2061227a427ff9c5ad33fe2996f1e63d7e22199b" translate="yes" xml:space="preserve">
          <source>Also, note that &lt;code&gt;DOMValidateContext&lt;/code&gt; instances can contain information and state specific to the XML signature structure it is used with. The results are unpredictable if a &lt;code&gt;DOMValidateContext&lt;/code&gt; is used with different signature structures (for example, you should not use the same &lt;code&gt;DOMValidateContext&lt;/code&gt; instance to validate two different &lt;a href=&quot;../xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; objects).</source>
          <target state="translated">또한 &lt;code&gt;DOMValidateContext&lt;/code&gt; 인스턴스에는 사용되는 XML 서명 구조에 특정한 정보와 상태가 포함될 수 있습니다. &lt;code&gt;DOMValidateContext&lt;/code&gt; 가 다른 서명 구조와 함께 사용되는 경우 결과를 예측할 수 없습니다 (예를 들어, 동일한 &lt;code&gt;DOMValidateContext&lt;/code&gt; 인스턴스를 사용하여 두 개의 다른 &lt;a href=&quot;../xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt; 객체의 유효성을 검사 해서는 안 됨 ).</target>
        </trans-unit>
        <trans-unit id="254fb23c0b86f3a891332a7052fd7f3ef154924e" translate="yes" xml:space="preserve">
          <source>Also, since this duration class is a Gregorian duration, this method will not work correctly if the given &lt;a href=&quot;../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object is based on some other calendar systems.</source>
          <target state="translated">또한이 기간 클래스는 그레고리력 기간이므로 지정된 &lt;a href=&quot;../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체가 다른 달력 시스템을 기반으로하는 경우이 메서드가 제대로 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f11384ad3bdde7cacb55342119a3ce347ddcca24" translate="yes" xml:space="preserve">
          <source>Also, the &lt;code&gt;XMLStructure&lt;/code&gt;s that are created by this factory may contain state specific to the &lt;code&gt;KeyInfo&lt;/code&gt; and are not intended to be reusable.</source>
          <target state="translated">또한 이 팩토리에 의해 생성 된 &lt;code&gt;XMLStructure&lt;/code&gt; 는 &lt;code&gt;KeyInfo&lt;/code&gt; 에 특정한 상태를 포함 할 수 있으며 재사용 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="77bba4a78ed0ebe20f4d6bf2353e015f9872ae8e" translate="yes" xml:space="preserve">
          <source>Also, the &lt;code&gt;XMLStructure&lt;/code&gt;s that are created by this factory may contain state specific to the &lt;code&gt;XMLSignature&lt;/code&gt; and are not intended to be reusable.</source>
          <target state="translated">또한 이 팩토리에 의해 생성 된 &lt;code&gt;XMLStructure&lt;/code&gt; 는 &lt;code&gt;XMLSignature&lt;/code&gt; 에 특정한 상태를 포함 할 수 있으며 재사용 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="689fab2361efd4f9f9c0cda2a2ab5814bfbe468c" translate="yes" xml:space="preserve">
          <source>Alterations to the DOM tree may cause the current node to no longer be accepted by the &lt;code&gt;TreeWalker&lt;/code&gt;'s associated filter. &lt;code&gt;currentNode&lt;/code&gt; may also be explicitly set to any node, whether or not it is within the subtree specified by the &lt;code&gt;root&lt;/code&gt; node or would be accepted by the filter and &lt;code&gt;whatToShow&lt;/code&gt; flags. Further traversal occurs relative to &lt;code&gt;currentNode&lt;/code&gt; even if it is not part of the current view, by applying the filters in the requested direction; if no traversal is possible, &lt;code&gt;currentNode&lt;/code&gt; is not changed.</source>
          <target state="translated">DOM 트리를 변경하면 현재 노드가 &lt;code&gt;TreeWalker&lt;/code&gt; 의 관련 필터 에서 더 이상 허용되지 않을 수 있습니다 . &lt;code&gt;currentNode&lt;/code&gt; 는 &lt;code&gt;root&lt;/code&gt; 노드에 의해 지정된 하위 트리 내에 있는지 여부에 관계없이 모든 노드에 명시 적으로 설정 될 수도 있고 필터 및 &lt;code&gt;whatToShow&lt;/code&gt; 플래그에 의해 허용 될 수도 있습니다 . 요청 된 방향으로 필터를 적용하여 현재 뷰의 일부가 아니더라도 &lt;code&gt;currentNode&lt;/code&gt; 에 대해 추가 순회가 발생합니다 . 순회가 가능 하지 않으면 &lt;code&gt;currentNode&lt;/code&gt; 가 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="32721661aebc445b79ef6be7a365f08e71cc1c7f" translate="yes" xml:space="preserve">
          <source>Altering the data used to create the &lt;code&gt;GlyphVector&lt;/code&gt; does not alter the state of the &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">작성하는 데 사용되는 데이터를 변경하면 &lt;code&gt;GlyphVector&lt;/code&gt; 를하는 것은 의 상태를 변경하지 않습니다 &lt;code&gt;GlyphVector&lt;/code&gt; 의를 .</target>
        </trans-unit>
        <trans-unit id="f07719bf4302008e93f03389d457ae7e31f0ca98" translate="yes" xml:space="preserve">
          <source>Alternate &lt;code&gt;CertPath&lt;/code&gt; class for serialization.</source>
          <target state="translated">직렬화를위한 대체 &lt;code&gt;CertPath&lt;/code&gt; 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="854c4c0d0d209a005db238dcd881180a6ac22fe7" translate="yes" xml:space="preserve">
          <source>Alternate Certificate class for serialization.</source>
          <target state="translated">직렬화를위한 대체 인증서 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="3f770a0719cdec849cf73da75cc3cd50c904fd63" translate="yes" xml:space="preserve">
          <source>Alternate Tag to check for in the document if parentTag is not found.</source>
          <target state="translated">parentTag를 찾을 수없는 경우 문서에서 확인할 대체 태그입니다.</target>
        </trans-unit>
        <trans-unit id="b472a7b01871cbf4e9ecd30ebaadac6b19672402" translate="yes" xml:space="preserve">
          <source>Alternate tag in HTML to start adding tags from if parentTag is not found and alternateParentTag is found.</source>
          <target state="translated">parentTag가없고 alternateParentTag가있는 경우 태그 추가를 시작하는 HTML의 대체 태그입니다.</target>
        </trans-unit>
        <trans-unit id="c6171ee8dab0f6bfd8e67c203ad0ac2563954b68" translate="yes" xml:space="preserve">
          <source>Alternate text for user agents not rendering the normal content of this element.</source>
          <target state="translated">이 요소의 일반 콘텐츠를 렌더링하지 않는 사용자 에이전트에 대한 대체 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="a41265bded2f1b18b2b8ab6df5c5274393c13500" translate="yes" xml:space="preserve">
          <source>Alternate text for user agents not rendering the normal content of this element. See the alt attribute definition in HTML 4.0.</source>
          <target state="translated">이 요소의 일반 콘텐츠를 렌더링하지 않는 사용자 에이전트에 대한 대체 텍스트입니다. HTML 4.0의 alt 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="43d8b03bf9575878771b51f6b67ef050c2f1cfb8" translate="yes" xml:space="preserve">
          <source>Alternate text for user agents not rendering the normal content of this element. See the alt attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">이 요소의 일반 콘텐츠를 렌더링하지 않는 사용자 에이전트에 대한 대체 텍스트입니다. HTML 4.0의 alt 속성 정의를 참조하십시오. 이 속성은 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ccabbe7a16aede222c07e8c49ef810844ca9b834" translate="yes" xml:space="preserve">
          <source>Alternately, an implementation that uses floating point math might produce more accurate results and end up returning to the original pixel value with little, if any, round-off error. Or, an implementation using integer math might decide that since the equations boil down to a virtual NOP on the color values if performed in a floating point space, it can transfer the pixel untouched to the destination and avoid all the math entirely.</source>
          <target state="translated">또는 부동 소수점 수학을 사용하는 구현은 더 정확한 결과를 생성하고 반올림 오류가 거의없는 원래 픽셀 값으로 돌아갈 수 있습니다. 또는 정수 수학을 사용하는 구현에서는 부동 소수점 공간에서 수행되는 경우 방정식이 색상 값에 대한 가상 NOP로 귀결되기 때문에 픽셀을 대상으로 전송하지 않고 모든 수학을 완전히 피할 수 있다고 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76904d3b91288fa319395a0997c7224dfc8e1d06" translate="yes" xml:space="preserve">
          <source>Alternative set of begin/end quotes.</source>
          <target state="translated">시작 / 끝 따옴표의 대체 집합입니다.</target>
        </trans-unit>
        <trans-unit id="4a21436f5fa38816364579e478317d323c35abd9" translate="yes" xml:space="preserve">
          <source>Alternatively, a memory access operation is &lt;em&gt;partially aligned&lt;/em&gt; if it occurs at a memory address &lt;code&gt;A&lt;/code&gt; which is only compatible with the alignment constraint &lt;code&gt;B&lt;/code&gt;; in such cases, access for anything other than the &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; access modes will result in an &lt;code&gt;IllegalStateException&lt;/code&gt;. If access is partially aligned, atomic access is only guaranteed with respect to the largest power of two that divides the GCD of &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;S&lt;/code&gt;.</source>
          <target state="translated">대안으로, 메모리 액세스 동작은 정렬 제약 &lt;code&gt;B&lt;/code&gt; 와만 호환되는 메모리 주소 &lt;code&gt;A&lt;/code&gt; 에서 발생하는 경우 &lt;em&gt;부분적으로 정렬&lt;/em&gt; 됩니다 . 이러한 경우 &lt;code&gt;get&lt;/code&gt; 및 &lt;code&gt;set&lt;/code&gt; 액세스 모드 이외의 항목에 대한 액세스는 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생 시킵니다. 액세스가 부분적으로 정렬되면 &lt;code&gt;A&lt;/code&gt; 와 &lt;code&gt;S&lt;/code&gt; 의 GCD를 나누는 2의 가장 큰 제곱에 대해서만 원자 적 액세스가 보장됩니다 .</target>
        </trans-unit>
        <trans-unit id="c809dd63588089375a89d7a709c19f7e83316764" translate="yes" xml:space="preserve">
          <source>Alternatively, a scroll bar can represent a range of values. For example, if a scroll bar is used for scrolling through text, the width of the &quot;bubble&quot; (also called the &quot;thumb&quot; or &quot;scroll box&quot;) can be used to represent the amount of text that is visible. Here is an example of a scroll bar that represents a range:</source>
          <target state="translated">또는 스크롤 막대가 값 범위를 나타낼 수 있습니다. 예를 들어 스크롤 막대가 텍스트를 스크롤하는 데 사용되는 경우 &quot;버블&quot;( &quot;엄지 손가락&quot;또는 &quot;스크롤 상자&quot;라고도 함)의 너비를 사용하여 표시되는 텍스트의 양을 나타낼 수 있습니다. 다음은 범위를 나타내는 스크롤 막대의 예입니다.</target>
        </trans-unit>
        <trans-unit id="7c1f5fd3fdfc2ac1ae1beff97fecd792e1342c8b" translate="yes" xml:space="preserve">
          <source>Alternatively, an &lt;code&gt;XMLSignature&lt;/code&gt; may be created from an existing XML representation by invoking the &lt;a href=&quot;#unmarshalXMLSignature(javax.xml.crypto.dsig.XMLValidateContext)&quot;&gt;&lt;code&gt;unmarshalXMLSignature&lt;/code&gt;&lt;/a&gt; method and passing it a mechanism-specific &lt;a href=&quot;xmlvalidatecontext&quot;&gt;&lt;code&gt;XMLValidateContext&lt;/code&gt;&lt;/a&gt; instance containing the XML content:</source>
          <target state="translated">또는 &lt;a href=&quot;#unmarshalXMLSignature(javax.xml.crypto.dsig.XMLValidateContext)&quot;&gt; &lt;code&gt;unmarshalXMLSignature&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하고 XML 콘텐츠가 포함 된 메커니즘 별 &lt;a href=&quot;xmlvalidatecontext&quot;&gt; &lt;code&gt;XMLValidateContext&lt;/code&gt; &lt;/a&gt; 인스턴스를 전달 하여 기존 XML 표현에서 &lt;code&gt;XMLSignature&lt;/code&gt; 를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f2ef1d7cf5e1fdbbdab771fd539a3e091d52f6cf" translate="yes" xml:space="preserve">
          <source>Alternatively, an algorithmic process such as a database lookup or the parsing of a command line could be used as a controller, in which case the &lt;code&gt;activate&lt;/code&gt; method would simply look up or compute the settings, call methods on &lt;code&gt;IIOMetadata&lt;/code&gt; to set its state, and return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">또는 데이터베이스 조회 또는 명령 줄 구문 분석과 같은 알고리즘 프로세스를 컨트롤러로 사용할 수 있습니다.이 경우 &lt;code&gt;activate&lt;/code&gt; 메서드가 설정을 조회하거나 계산하고 &lt;code&gt;IIOMetadata&lt;/code&gt; 에서 메서드를 호출 하여 상태를 설정하고 반환합니다. &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc7911655e53c1a1de3c03f4258905341e85ad8b" translate="yes" xml:space="preserve">
          <source>Alternatively, an algorithmic process such as a database lookup or the parsing of a command line could be used as a controller, in which case the &lt;code&gt;activate&lt;/code&gt; method would simply look up or compute the settings, call the &lt;code&gt;IIOParam.setXXX&lt;/code&gt; methods, and return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">또는 데이터베이스 조회 또는 명령 줄 구문 분석과 같은 알고리즘 프로세스를 컨트롤러로 사용할 수 있습니다.이 경우 &lt;code&gt;activate&lt;/code&gt; 메서드가 설정을 조회하거나 계산하고 &lt;code&gt;IIOParam.setXXX&lt;/code&gt; 메서드를 호출하고 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="bff35eb29a947130d8c198ecc5080c58bdb9ae38" translate="yes" xml:space="preserve">
          <source>Alternatively, if the application creates a login context using a &lt;em&gt;caller-specified&lt;/em&gt;&lt;a href=&quot;../../../../../../java.base/javax/security/auth/login/configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt; then the application must be granted the permissions required by the &lt;a href=&quot;../../../../../../java.base/javax/security/auth/spi/loginmodule&quot;&gt;&lt;code&gt;LoginModule&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;This&lt;/em&gt; module requires the following two permissions:</source>
          <target state="translated">또는 애플리케이션이 &lt;em&gt;호출자 지정 &lt;/em&gt;&lt;a href=&quot;../../../../../../java.base/javax/security/auth/login/configuration&quot;&gt; &lt;code&gt;Configuration&lt;/code&gt; &lt;/a&gt; 을 사용하여 로그인 컨텍스트를 생성하는 경우 애플리케이션 에 &lt;a href=&quot;../../../../../../java.base/javax/security/auth/spi/loginmodule&quot;&gt; &lt;code&gt;LoginModule&lt;/code&gt; 에&lt;/a&gt; 필요한 권한을 부여해야합니다 . &lt;em&gt;이&lt;/em&gt; 모듈에는 다음 두 가지 권한 &lt;em&gt;이&lt;/em&gt; 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ce2e737cf807e337bfadcc8c52f1e447586bce22" translate="yes" xml:space="preserve">
          <source>Alternatively, if you have a Java interface that corresponds to the management interface for the MBean, you can use an &lt;em&gt;MBean proxy&lt;/em&gt; like this:</source>
          <target state="translated">또는 MBean의 관리 인터페이스에 해당하는 Java 인터페이스가있는 경우 다음 과 같은 &lt;em&gt;MBean 프록시를&lt;/em&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8b710f91e002c2cd0de85f107f01b1616b8ac390" translate="yes" xml:space="preserve">
          <source>Alternatively, it can be invoked through a proxy as follows:</source>
          <target state="translated">또는 다음과 같이 프록시를 통해 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f91ccca47c72634cc55179f792310408d0b7bdff" translate="yes" xml:space="preserve">
          <source>Alternatively, or for components that delegate painting to other objects, you can query during painting whether or not the component is in the midst of a print operation. The &lt;code&gt;isPaintingForPrint&lt;/code&gt; method provides this ability and its return value will be changed by this method: to &lt;code&gt;true&lt;/code&gt; immediately before rendering and to &lt;code&gt;false&lt;/code&gt; immediately after. With each change a property change event is fired on this component with the name &lt;code&gt;&quot;paintingForPrint&quot;&lt;/code&gt;.</source>
          <target state="translated">또는 페인팅을 다른 개체에 위임하는 구성 요소의 경우 페인팅 중에 구성 요소가 인쇄 작업 중에 있는지 여부를 쿼리 할 수 ​​있습니다. &lt;code&gt;isPaintingForPrint&lt;/code&gt; 의 방법은이 기능을 제공하고 반환 값은이 방법으로 변경됩니다 님의 &lt;code&gt;true&lt;/code&gt; 즉시 렌더링 전과에 대한 &lt;code&gt;false&lt;/code&gt; 직후. 변경 될 때마다이 컴포넌트에서 &lt;code&gt;&quot;paintingForPrint&quot;&lt;/code&gt; 라는 이름으로 속성 변경 이벤트가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="eece1be65cd4b48344706307fa5167e9f4b23d25" translate="yes" xml:space="preserve">
          <source>Alternatively, several check boxes can be grouped together under the control of a single object, using the &lt;code&gt;CheckboxGroup&lt;/code&gt; class. In a check box group, at most one button can be in the &quot;on&quot; state at any given time. Clicking on a check box to turn it on forces any other check box in the same group that is on into the &quot;off&quot; state.</source>
          <target state="translated">또는 &lt;code&gt;CheckboxGroup&lt;/code&gt; 클래스를 사용하여 단일 개체의 제어하에 여러 확인란을 함께 그룹화 할 수 있습니다 . 체크 박스 그룹에서 주어진 시간에 최대 하나의 버튼이 &quot;켜짐&quot;상태에있을 수 있습니다. 확인란을 클릭하여 켜면 같은 그룹에있는 다른 확인란이 &quot;꺼짐&quot;상태가됩니다.</target>
        </trans-unit>
        <trans-unit id="98ba2008139a8f1ddc57b10e9710b6bbabc8f2c9" translate="yes" xml:space="preserve">
          <source>Alternatively, suppose we want to move a file to new directory, keeping the same file name, and replacing any existing file of that name in the directory:</source>
          <target state="translated">또는 파일을 새 디렉토리로 이동하고 동일한 파일 이름을 유지하고 디렉토리에서 해당 이름의 기존 파일을 대체한다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="f7b67bf78b555ac6bd469d8f04fb467a6b5734ac" translate="yes" xml:space="preserve">
          <source>Alternatively, suppose we want to read file's POSIX attributes without following symbolic links:</source>
          <target state="translated">또는 심볼릭 링크를 따르지 않고 파일의 POSIX 속성을 읽으려고한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="c10d4a4d221d26d87123a366f1cf190342912202" translate="yes" xml:space="preserve">
          <source>Alternatively, the contents of the back buffer can be copied, or</source>
          <target state="translated">또는 백 버퍼의 내용을 복사하거나</target>
        </trans-unit>
        <trans-unit id="51f8ba091976038dcdbee2bef9cbe67fb38d6291" translate="yes" xml:space="preserve">
          <source>Alternatively, the default implementation may call &lt;a href=&quot;#getDeclaredAnnotations()&quot;&gt;&lt;code&gt;getDeclaredAnnotations()&lt;/code&gt;&lt;/a&gt; a single time and the returned array examined for both directly and indirectly present annotations. The results of calling &lt;a href=&quot;#getDeclaredAnnotations()&quot;&gt;&lt;code&gt;getDeclaredAnnotations()&lt;/code&gt;&lt;/a&gt; are assumed to be consistent with the results of calling &lt;a href=&quot;#getDeclaredAnnotation(java.lang.Class)&quot;&gt;&lt;code&gt;getDeclaredAnnotation(Class)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">또는 기본 구현은 &lt;a href=&quot;#getDeclaredAnnotations()&quot;&gt; &lt;code&gt;getDeclaredAnnotations()&lt;/code&gt; &lt;/a&gt; 를 한 번 호출 하고 반환 된 배열을 직접 및 간접적으로 표시하는 주석 모두에 대해 검사 할 수 있습니다. 호출의 결과 &lt;a href=&quot;#getDeclaredAnnotations()&quot;&gt; &lt;code&gt;getDeclaredAnnotations()&lt;/code&gt; &lt;/a&gt; 호출의 결과와 일치하는 것으로 가정 &lt;a href=&quot;#getDeclaredAnnotation(java.lang.Class)&quot;&gt; &lt;code&gt;getDeclaredAnnotation(Class)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ce71aa8b3435b530752e6a94ac8ea87cc535be9d" translate="yes" xml:space="preserve">
          <source>Alternatively, the default implementation may call &lt;a href=&quot;annotatedelement#getDeclaredAnnotations--&quot;&gt;&lt;code&gt;getDeclaredAnnotations()&lt;/code&gt;&lt;/a&gt; a single time and the returned array examined for both directly and indirectly present annotations. The results of calling &lt;a href=&quot;annotatedelement#getDeclaredAnnotations--&quot;&gt;&lt;code&gt;getDeclaredAnnotations()&lt;/code&gt;&lt;/a&gt; are assumed to be consistent with the results of calling &lt;a href=&quot;annotatedelement#getDeclaredAnnotation-java.lang.Class-&quot;&gt;&lt;code&gt;getDeclaredAnnotation(Class)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">또는 기본 구현은 &lt;a href=&quot;annotatedelement#getDeclaredAnnotations--&quot;&gt; &lt;code&gt;getDeclaredAnnotations()&lt;/code&gt; &lt;/a&gt; 를 한 번 호출 하고 반환 된 배열을 직접 및 간접적으로 표시하는 주석 모두에 대해 검사 할 수 있습니다. 호출의 결과 &lt;a href=&quot;annotatedelement#getDeclaredAnnotations--&quot;&gt; &lt;code&gt;getDeclaredAnnotations()&lt;/code&gt; &lt;/a&gt; 호출의 결과와 일치하는 것으로 가정 &lt;a href=&quot;annotatedelement#getDeclaredAnnotation-java.lang.Class-&quot;&gt; &lt;code&gt;getDeclaredAnnotation(Class)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="830b4756e8f48dc958241e95db2f51ebbba346d9" translate="yes" xml:space="preserve">
          <source>Alternatively, the following code does the same thing:</source>
          <target state="translated">또는 다음 코드는 동일한 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="1f3ef7aa005287034d76059a7fc2ec6dd9e95814" translate="yes" xml:space="preserve">
          <source>Alternatively, the key code may be obtained by calling &lt;code&gt;java.awt.event.KeyEvent.getExtendedKeyCodeForChar&lt;/code&gt;. The modifiers consist of any combination of:</source>
          <target state="translated">또는 &lt;code&gt;java.awt.event.KeyEvent.getExtendedKeyCodeForChar&lt;/code&gt; 를 호출하여 키 코드를 얻을 수 있습니다 . 수정자는 다음의 조합으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="8e1d6a2f04c5d69e6cdfa99195dac79828d2b89f" translate="yes" xml:space="preserve">
          <source>Alternatively, the property could be set in the application by using the following code:</source>
          <target state="translated">또는 다음 코드를 사용하여 응용 프로그램에서 속성을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff60db6d2487402407da376d20aa9e7955473dcb" translate="yes" xml:space="preserve">
          <source>Alternatively, where a channel is ready for more than one operation, the</source>
          <target state="translated">또는 채널이 둘 이상의 작업을 위해 준비된 경우</target>
        </trans-unit>
        <trans-unit id="715d5110bce43932f0430777060759513c578e8d" translate="yes" xml:space="preserve">
          <source>Alternatively, you could invoke &lt;code&gt;commitEdit&lt;/code&gt;, which would also commit the value.</source>
          <target state="translated">또는 값을 커밋하는 &lt;code&gt;commitEdit&lt;/code&gt; 를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="496960d24e5f42b2d382597e841238e28d493fe2" translate="yes" xml:space="preserve">
          <source>Alters the internal state of this &lt;code&gt;IIOMetadata&lt;/code&gt; object from a tree of XML DOM &lt;code&gt;Node&lt;/code&gt;s whose syntax is defined by the given metadata format.</source>
          <target state="translated">주어진 메타 데이터 형식으로 구문이 정의 된 XML DOM &lt;code&gt;Node&lt;/code&gt; 트리 에서이 &lt;code&gt;IIOMetadata&lt;/code&gt; 객체 의 내부 상태를 변경 합니다.</target>
        </trans-unit>
        <trans-unit id="98759ee1f8c390e76e9161d78ad47ac53a6542bf" translate="yes" xml:space="preserve">
          <source>Alters the internal state of this &lt;code&gt;IIOMetadata&lt;/code&gt; object from a tree of XML DOM &lt;code&gt;Node&lt;/code&gt;s whose syntax is defined by the given metadata format. The previous state is altered only as necessary to accommodate the nodes that are present in the given tree. If the tree structure or contents are invalid, an &lt;code&gt;IIOInvalidTreeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">주어진 메타 데이터 형식으로 구문이 정의 된 XML DOM &lt;code&gt;Node&lt;/code&gt; 트리 에서이 &lt;code&gt;IIOMetadata&lt;/code&gt; 객체 의 내부 상태를 변경 합니다. 이전 상태는 주어진 트리에있는 노드를 수용하기 위해 필요한 경우에만 변경됩니다. 트리 구조 또는 내용이 유효하지 않은 경우 &lt;code&gt;IIOInvalidTreeException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dcec4fe7af9e3197ba7d923052b807febd088dc3" translate="yes" xml:space="preserve">
          <source>Although &quot;corner&quot; doesn't match any beans property signature, &lt;code&gt;PropertyChange&lt;/code&gt; events are generated with the property name set to the corner key.</source>
          <target state="translated">&quot;코너&quot;가 Bean 속성 서명과 일치하지 않더라도 &lt;code&gt;PropertyChange&lt;/code&gt; 이벤트는 코너 키로 설정된 속성 이름으로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="9d336e450909c03473f64fcb71912ebf052be23f" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;Appendable&lt;/code&gt; methods throw an &lt;code&gt;IOException&lt;/code&gt;, this method does not. Instead, any &lt;code&gt;IOException&lt;/code&gt; is wrapped in a runtime exception.</source>
          <target state="translated">&lt;code&gt;Appendable&lt;/code&gt; 메서드는 &lt;code&gt;IOException&lt;/code&gt; 을 throw 하지만 이 메서드는 그렇지 않습니다. 대신 모든 &lt;code&gt;IOException&lt;/code&gt; 이 런타임 예외로 래핑됩니다.</target>
        </trans-unit>
        <trans-unit id="bc4b281b0ebaea575e8d37bb38a421441a5b6470" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;RandomAccessFile&lt;/code&gt; is not a subclass of &lt;code&gt;InputStream&lt;/code&gt;, this method behaves in exactly the same way as the &lt;a href=&quot;inputstream#read()&quot;&gt;&lt;code&gt;InputStream.read()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;InputStream&lt;/code&gt;.</source>
          <target state="translated">비록 &lt;code&gt;RandomAccessFile&lt;/code&gt; 의이 서브 클래스 아니다 &lt;code&gt;InputStream&lt;/code&gt; 은 정확히 동일한 방법이 방법 행동한다 &lt;a href=&quot;inputstream#read()&quot;&gt; &lt;code&gt;InputStream.read()&lt;/code&gt; &lt;/a&gt; 방법 &lt;code&gt;InputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7281d9732aa1d31f11570b8cc7003c934230f44" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;RandomAccessFile&lt;/code&gt; is not a subclass of &lt;code&gt;InputStream&lt;/code&gt;, this method behaves in exactly the same way as the &lt;a href=&quot;inputstream#read(byte%5B%5D)&quot;&gt;&lt;code&gt;InputStream.read(byte[])&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;InputStream&lt;/code&gt;.</source>
          <target state="translated">비록 &lt;code&gt;RandomAccessFile&lt;/code&gt; 의이 서브 클래스 아니다 &lt;code&gt;InputStream&lt;/code&gt; 은 정확히 동일한 방법이 방법 행동한다 &lt;a href=&quot;inputstream#read(byte%5B%5D)&quot;&gt; &lt;code&gt;InputStream.read(byte[])&lt;/code&gt; &lt;/a&gt; 의 방법 &lt;code&gt;InputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4ba685c2d85f9ab030b93e0fed452eccaa3b1f5" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;RandomAccessFile&lt;/code&gt; is not a subclass of &lt;code&gt;InputStream&lt;/code&gt;, this method behaves in exactly the same way as the &lt;a href=&quot;inputstream#read(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;InputStream.read(byte[], int, int)&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;InputStream&lt;/code&gt;.</source>
          <target state="translated">비록 &lt;code&gt;RandomAccessFile&lt;/code&gt; 의이 서브 클래스 아니다 &lt;code&gt;InputStream&lt;/code&gt; 은 정확히 동일한 방법이 방법 행동한다 &lt;a href=&quot;inputstream#read(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;InputStream.read(byte[], int, int)&lt;/code&gt; &lt;/a&gt; 의 방법 &lt;code&gt;InputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="706b4e9ae5c6063fc44a3cb6d22c9916d42ddd8d" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;RandomAccessFile&lt;/code&gt; is not a subclass of &lt;code&gt;InputStream&lt;/code&gt;, this method behaves in exactly the same way as the &lt;a href=&quot;inputstream#read--&quot;&gt;&lt;code&gt;InputStream.read()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;InputStream&lt;/code&gt;.</source>
          <target state="translated">비록 &lt;code&gt;RandomAccessFile&lt;/code&gt; 의이 서브 클래스 아니다 &lt;code&gt;InputStream&lt;/code&gt; 은 정확히 동일한 방법이 방법 행동한다 &lt;a href=&quot;inputstream#read--&quot;&gt; &lt;code&gt;InputStream.read()&lt;/code&gt; &lt;/a&gt; 방법 &lt;code&gt;InputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52dc1493af2951afd1ad8461bca05f6ed9765f0d" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;RandomAccessFile&lt;/code&gt; is not a subclass of &lt;code&gt;InputStream&lt;/code&gt;, this method behaves in exactly the same way as the &lt;a href=&quot;inputstream#read-byte:A-&quot;&gt;&lt;code&gt;InputStream.read(byte[])&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;InputStream&lt;/code&gt;.</source>
          <target state="translated">비록 &lt;code&gt;RandomAccessFile&lt;/code&gt; 의이 서브 클래스 아니다 &lt;code&gt;InputStream&lt;/code&gt; 은 정확히 동일한 방법이 방법 행동한다 &lt;a href=&quot;inputstream#read-byte:A-&quot;&gt; &lt;code&gt;InputStream.read(byte[])&lt;/code&gt; &lt;/a&gt; 의 방법 &lt;code&gt;InputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="997ebc234ddf4f17bc2b71c1a3aa08039e972a6f" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;RandomAccessFile&lt;/code&gt; is not a subclass of &lt;code&gt;InputStream&lt;/code&gt;, this method behaves in exactly the same way as the &lt;a href=&quot;inputstream#read-byte:A-int-int-&quot;&gt;&lt;code&gt;InputStream.read(byte[], int, int)&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;InputStream&lt;/code&gt;.</source>
          <target state="translated">비록 &lt;code&gt;RandomAccessFile&lt;/code&gt; 의이 서브 클래스 아니다 &lt;code&gt;InputStream&lt;/code&gt; 은 정확히 동일한 방법이 방법 행동한다 &lt;a href=&quot;inputstream#read-byte:A-int-int-&quot;&gt; &lt;code&gt;InputStream.read(byte[], int, int)&lt;/code&gt; &lt;/a&gt; 의 방법 &lt;code&gt;InputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee58dd6776f3142220d333cee4b72504ef067247" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;null&lt;/code&gt; is an acceptable value to use in the lookup of stream printing services, it's typical to search for a particular desired format, such as Postscript(TM).</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 은 스트림 인쇄 서비스 조회에 사용할 수있는 값 이지만 Postscript (TM)와 같이 원하는 특정 형식을 검색하는 것이 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="a3413186e86a3b598a8096c3581c83e4347653a9" translate="yes" xml:space="preserve">
          <source>Although SAX drivers (parsers) may choose to use this class to implement namespace handling, they are not required to do so. Applications must track namespace information themselves if they want to use namespace information.</source>
          <target state="translated">SAX 드라이버 (파서)는이 클래스를 사용하여 네임 스페이스 처리를 구현하도록 선택할 수 있지만 반드시 그렇게 할 필요는 없습니다. 애플리케이션은 네임 스페이스 정보를 사용하려는 경우 네임 스페이스 정보 자체를 추적해야합니다.</target>
        </trans-unit>
        <trans-unit id="4b83193e5243d6838f230cc88dd5ab5436dfcf24" translate="yes" xml:space="preserve">
          <source>Although a Raster may live anywhere in the plane, a SampleModel makes use of a simple coordinate system that starts at (0, 0). A Raster therefore contains a translation factor that allows pixel locations to be mapped between the Raster's coordinate system and that of the SampleModel. The translation from the SampleModel coordinate system to that of the Raster may be obtained by the getSampleModelTranslateX and getSampleModelTranslateY methods.</source>
          <target state="translated">Raster는 평면의 어느 곳에 나있을 수 있지만 SampleModel은 (0, 0)에서 시작하는 간단한 좌표계를 사용합니다. 따라서 Raster에는 Raster의 좌표계와 SampleModel의 좌표계간에 픽셀 위치를 매핑 할 수있는 변환 계수가 포함됩니다. SampleModel 좌표계에서 Raster 좌표계로의 변환은 getSampleModelTranslateX 및 getSampleModelTranslateY 메소드로 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a5cfe92e9afbd46b66a6d39bc9b9f5a5ed8e023" translate="yes" xml:space="preserve">
          <source>Although all &lt;code&gt;Timer&lt;/code&gt;s perform their waiting using a single, shared thread (created by the first &lt;code&gt;Timer&lt;/code&gt; object that executes), the action event handlers for &lt;code&gt;Timer&lt;/code&gt;s execute on another thread -- the event-dispatching thread. This means that the action handlers for &lt;code&gt;Timer&lt;/code&gt;s can safely perform operations on Swing components. However, it also means that the handlers must execute quickly to keep the GUI responsive.</source>
          <target state="translated">모든 비록 &lt;code&gt;Timer&lt;/code&gt; 들 (제에 의해 생성 된 단일 공유 스레드 사용하여 대기를 수행 &lt;code&gt;Timer&lt;/code&gt; 실행하는 객체)에 대한 액션 이벤트 핸들러 &lt;code&gt;Timer&lt;/code&gt; 의 다른 스레드의 실행 - 이벤트 파견 스레드. 이는 &lt;code&gt;Timer&lt;/code&gt; 의 액션 핸들러가 Swing 구성 요소에 대한 작업을 안전하게 수행 할 수 있음을 의미합니다 . 그러나 이는 또한 GUI의 응답 성을 유지하기 위해 핸들러가 빠르게 실행되어야 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f15159aadfd03b5c88e9b5b257f6b52833b55293" translate="yes" xml:space="preserve">
          <source>Although all object graphs may be written using just these three tags, the following definitions are included so that common data structures can be expressed more concisely:</source>
          <target state="translated">모든 객체 그래프는이 세 가지 태그 만 사용하여 작성 될 수 있지만 다음 정의가 포함되어있어 일반적인 데이터 구조를보다 간결하게 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4c764bc1e5e3badebc4af7d094d1108bc346369" translate="yes" xml:space="preserve">
          <source>Although bytecode instructions can only refer to classes in a related class loader, this API can search for methods in any class, as long as a reference to its &lt;code&gt;Class&lt;/code&gt; object is available. Such cross-loader references are also possible with the Core Reflection API, and are impossible to bytecode instructions such as &lt;code&gt;invokestatic&lt;/code&gt; or &lt;code&gt;getfield&lt;/code&gt;. There is a &lt;a href=&quot;../securitymanager&quot;&gt;security manager API&lt;/a&gt; to allow applications to check such cross-loader references. These checks apply to both the &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; API and the Core Reflection API (as found on &lt;a href=&quot;../class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">바이트 코드 명령어는 관련 클래스 로더의 클래스 만 참조 할 수 있지만이 API는 해당 &lt;code&gt;Class&lt;/code&gt; 객체에 대한 참조 가 사용 가능한 한 모든 클래스의 메서드를 검색 할 수 있습니다. 이러한 크로스 로더 참조는 Core Reflection API에서도 가능하며 &lt;code&gt;invokestatic&lt;/code&gt; 또는 &lt;code&gt;getfield&lt;/code&gt; 와 같은 명령어를 바이트 코딩 할 수 없습니다 . 애플리케이션이 이러한 크로스 로더 참조를 확인할 수 있도록 하는 &lt;a href=&quot;../securitymanager&quot;&gt;보안 관리자 API&lt;/a&gt; 가 있습니다. 이러한 검사는 &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; API 및 Core Reflection API ( &lt;a href=&quot;../class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; 에 있음&lt;/a&gt; ) 모두에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="8370b0f7ff98eb4228efd4c4301ec5a22eb85595" translate="yes" xml:space="preserve">
          <source>Although classes that implement this interface typically also implement the &lt;code&gt;java.security.Principal&lt;/code&gt; interface, it is not required. In other words, classes may implement the &lt;code&gt;java.security.Principal&lt;/code&gt; interface by itself, the &lt;code&gt;PrincipalComparator&lt;/code&gt; interface by itself, or both at the same time.</source>
          <target state="translated">이 인터페이스를 구현하는 클래스는 일반적으로 &lt;code&gt;java.security.Principal&lt;/code&gt; 인터페이스 도 구현 하지만 필수는 아닙니다. 즉, 클래스는 &lt;code&gt;java.security.Principal&lt;/code&gt; 인터페이스를 단독으로 구현 하거나 &lt;code&gt;PrincipalComparator&lt;/code&gt; 인터페이스를 단독으로 또는 동시에 둘 다 구현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8fb62e6dbfe53e2b5d13ab1fdb86a6e6da9aac1c" translate="yes" xml:space="preserve">
          <source>Although declared to throw &lt;code&gt;IOException&lt;/code&gt;, this method never actually does so. Instead, like other methods that this class overrides, it sets an internal flag which may be tested via the &lt;a href=&quot;#checkError()&quot;&gt;&lt;code&gt;checkError()&lt;/code&gt;&lt;/a&gt; method. To write an array of bytes without having to write a &lt;code&gt;catch&lt;/code&gt; block for the &lt;code&gt;IOException&lt;/code&gt;, use either &lt;a href=&quot;#writeBytes(byte%5B%5D)&quot;&gt;&lt;code&gt;writeBytes(buf)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#write(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;write(buf, 0, buf.length)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;IOException&lt;/code&gt; 을 throw하도록 선언되었지만 이 메서드는 실제로 그렇게하지 않습니다. 대신이 클래스가 재정의하는 다른 메서드와 마찬가지로 &lt;a href=&quot;#checkError()&quot;&gt; &lt;code&gt;checkError()&lt;/code&gt; &lt;/a&gt; 메서드 를 통해 테스트 할 수있는 내부 플래그를 설정합니다 . 된 기록하지 않고 바이트 배열을 작성하는 &lt;code&gt;catch&lt;/code&gt; 위한 블록 &lt;code&gt;IOException&lt;/code&gt; 가 어느 사용할 &lt;a href=&quot;#writeBytes(byte%5B%5D)&quot;&gt; &lt;code&gt;writeBytes(buf)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#write(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;write(buf, 0, buf.length)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5283ca4249a41978922de43f168c33fbf018f8a5" translate="yes" xml:space="preserve">
          <source>Although each step function will receive the current values of &lt;em&gt;all&lt;/em&gt; the loop variables, sometimes a step function only needs to observe the current value of its own variable. In that case, the step function may need to explicitly &lt;a href=&quot;#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt;drop all preceding loop variables&lt;/a&gt;. This will require mentioning their types, in an expression like &lt;code&gt;dropArguments(step, 0, V0.class, ...)&lt;/code&gt;.</source>
          <target state="translated">각 단계 함수는 &lt;em&gt;모든&lt;/em&gt; 루프 변수 의 현재 값을 수신하지만 때때로 단계 함수는 자체 변수의 현재 값만 관찰하면됩니다. 이 경우 step 함수는 &lt;a href=&quot;#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt;모든 선행 루프 변수&lt;/a&gt; 를 명시 적으로 삭제 해야 할 수 있습니다 . 이를 위해서는 &lt;code&gt;dropArguments(step, 0, V0.class, ...)&lt;/code&gt; 와 같은 표현식에서 유형을 언급해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2e6b498ac081c333a5e7dccebc72397f91a7a248" translate="yes" xml:space="preserve">
          <source>Although historically not precise, midnight also belongs to &quot;am&quot;, and noon belongs to &quot;pm&quot;, so on the same day, 12:00 am (midnight) &amp;lt; 12:01 am, and 12:00 pm (noon) &amp;lt; 12:01 pm</source>
          <target state="translated">역사적으로 정확하지는 않지만 자정도 &quot;am&quot;에 속하고 정오는 &quot;pm&quot;에 속하므로 같은 날 오전 12:00 (자정) &amp;lt;12:01 am 및 12:00 pm (정오) &amp;lt;12 : 01 오후</target>
        </trans-unit>
        <trans-unit id="6196facb63b695b03e5463242120c8a88650bf9c" translate="yes" xml:space="preserve">
          <source>Although instances of &lt;code&gt;GlyphMetrics&lt;/code&gt; can be directly constructed, they are almost always obtained from a &lt;code&gt;GlyphVector&lt;/code&gt;. Once constructed, &lt;code&gt;GlyphMetrics&lt;/code&gt; objects are immutable.</source>
          <target state="translated">&lt;code&gt;GlyphMetrics&lt;/code&gt; 의 인스턴스는 직접 생성 할 수 있지만 거의 항상 &lt;code&gt;GlyphVector&lt;/code&gt; 에서 가져옵니다 . 일단 생성되면 &lt;code&gt;GlyphMetrics&lt;/code&gt; 객체는 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f905ee39d136e8dad17bf00e772d9b8926b0fef7" translate="yes" xml:space="preserve">
          <source>Although it is generally safe to make updates to the UI immediately, when executing on the event dispatch thread, there is an exception : if a model listener tries to further change the UI before the UI has been updated to reflect a pending change then the UI may render incorrectly. This can happen if an application installed listener needs to update the UI in response to an event which will cause a change in the model structure. It is important to first allow component installed listeners to process this change, since there is no guarantee of the order in which listeners may be called. The solution is for the application listener to make the change using &lt;code&gt;SwingUtilities.invokeLater&lt;/code&gt; so that any changes to UI rendering will be done post processing all the model listeners installed by the component.</source>
          <target state="translated">일반적으로 UI를 즉시 업데이트하는 것이 안전하지만 이벤트 디스패치 스레드에서 실행할 때 예외가 있습니다. 대기중인 변경 사항을 반영하도록 UI가 업데이트되기 전에 모델 리스너가 UI를 추가로 변경하려고하면 UI 잘못 렌더링 될 수 있습니다. 이는 애플리케이션이 설치된 리스너가 모델 구조를 변경하는 이벤트에 대한 응답으로 UI를 업데이트해야하는 경우 발생할 수 있습니다. 리스너가 호출 될 수있는 순서에 대한 보장이 없기 때문에 구성 요소가 설치된 리스너가이 변경을 처리하도록 먼저 허용하는 것이 중요합니다. 해결 방법은 응용 프로그램 리스너가 &lt;code&gt;SwingUtilities.invokeLater&lt;/code&gt; 를 사용하여 변경하여 UI 렌더링에 대한 변경 사항이 구성 요소에 의해 설치된 모든 모델 리스너를 처리 한 후 수행되도록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="eed6aa3f7aa18148aeec790bea839fd8ed510d13" translate="yes" xml:space="preserve">
          <source>Although it is intended for user-defined and Ref parameters, this method may be used to set a null parameter of any JDBC type. If the parameter does not have a user-defined or REF type, the given typeName is ignored.</source>
          <target state="translated">사용자 정의 및 Ref 매개 변수 용이지만이 메소드는 모든 JDBC 유형의 널 매개 변수를 설정하는 데 사용할 수 있습니다. 매개 변수에 사용자 정의 또는 REF 유형이 없으면 지정된 typeName이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="cbafba975ebbb2b99cbc259699cb4f03d8c590e4" translate="yes" xml:space="preserve">
          <source>Although it is legal according to RFC 2609 to have a &lt;code&gt;&lt;em&gt;url-path&lt;/em&gt;&lt;/code&gt; that begins with a semicolon, not all implementations of SLP allow it, so it is recommended to avoid that syntax.</source>
          <target state="translated">RFC 2609에 따라 세미콜론으로 시작 하는 &lt;code&gt;&lt;em&gt;url-path&lt;/em&gt;&lt;/code&gt; 를 갖는 것이 합법적이지만 모든 SLP 구현에서이를 허용하는 것은 아니므로 해당 구문을 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="77fe18df023e5bf5cfd36f8f91a8978672ae5dbc" translate="yes" xml:space="preserve">
          <source>Although it is possible to place arbitrary objects in the source Vector, users of this class may impose semantic constraints such as requiring all sources to be RenderedImages or RenderableImage. &lt;code&gt;ParameterBlock&lt;/code&gt; itself is merely a container and performs no checking on source or parameter types.</source>
          <target state="translated">소스 Vector에 임의의 객체를 배치 할 수 있지만이 클래스의 사용자는 모든 소스가 RenderedImages 또는 RenderableImage가되도록 요구하는 것과 같은 의미 적 제약을 부과 할 수 있습니다. &lt;code&gt;ParameterBlock&lt;/code&gt; 자체는 단순한 컨테이너이며 소스 또는 매개 변수 유형에 대한 검사를 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b823c941de0f9e2d1d13378c9ba0bedf7c139268" translate="yes" xml:space="preserve">
          <source>Although it is recommended that attribute names be valid Java identifiers, it is possible for an attribute to be called &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt;. This means that an &lt;code&gt;ObservedAttribute&lt;/code&gt; that is &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; could mean that the value to observe is either an attribute of that name, or the property &lt;code&gt;used&lt;/code&gt; within an attribute called &lt;code&gt;HeapMemoryUsage&lt;/code&gt;. So for compatibility reasons, when the &lt;code&gt;ObservedAttribute&lt;/code&gt; contains a period (&lt;code&gt;.&lt;/code&gt;), the monitor will check whether an attribute exists whose name is the full &lt;code&gt;ObservedAttribute&lt;/code&gt; string (&lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; in the example). It does this by calling &lt;a href=&quot;../mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getMBeanInfo&lt;/code&gt;&lt;/a&gt; for the observed MBean and looking for a contained &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt; with the given name. If one is found, then that is what is monitored. If more than one MBean is being observed, the behavior is unspecified if some of them have a &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; attribute and others do not. An implementation may therefore call &lt;code&gt;getMBeanInfo&lt;/code&gt; on just one of the MBeans in this case. The behavior is also unspecified if the result of the check changes while the monitor is active.</source>
          <target state="translated">속성 이름이 유효한 Java 식별자 인 것이 권장되지만 속성이 &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; 라고 할 수 있습니다 . 이는 &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; 인 &lt;code&gt;ObservedAttribute&lt;/code&gt; 가 관찰 할 값이 해당 이름의 속성이거나 &lt;code&gt;HeapMemoryUsage&lt;/code&gt; 라는 속성 내에서 &lt;code&gt;used&lt;/code&gt; 속성임을 의미 할 수 있음을 의미합니다 . 따라서 호환성을 위해 &lt;code&gt;ObservedAttribute&lt;/code&gt; 에 마침표 ( &lt;code&gt;.&lt;/code&gt; ) 가 포함 된 경우 모니터는 이름이 전체 &lt;code&gt;ObservedAttribute&lt;/code&gt; 문자열 ( 예에서는 &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; ) 인 속성이 있는지 여부를 확인합니다 . 호출하여 수행합니다.&lt;a href=&quot;../mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getMBeanInfo&lt;/code&gt; &lt;/a&gt;관찰 된 MBean에 대한 getMBeanInfo 및지정된 이름으로포함 된&lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt; 를찾습니다. 하나가 발견되면 그것이 모니터링됩니다. 둘 이상의 MBean이 관찰되는 경우 일부는 &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; 속성이 있고 다른일부는 그렇지 않은 경우 동작이 지정되지않습니다. 따라서 구현은이 경우 MBean 중 하나에서만 &lt;code&gt;getMBeanInfo&lt;/code&gt; 를호출 할 수 있습니다. 모니터가 활성 상태 인 동안 검사 결과가 변경되는 경우에도 동작이 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8896f7d66cabd9aaf02495d4b106e2b4e6cd6766" translate="yes" xml:space="preserve">
          <source>Although it is recommended that attribute names be valid Java identifiers, it is possible for an attribute to be called &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt;. This means that an &lt;code&gt;ObservedAttribute&lt;/code&gt; that is &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; could mean that the value to observe is either an attribute of that name, or the property &lt;code&gt;used&lt;/code&gt; within an attribute called &lt;code&gt;HeapMemoryUsage&lt;/code&gt;. So for compatibility reasons, when the &lt;code&gt;ObservedAttribute&lt;/code&gt; contains a period (&lt;code&gt;.&lt;/code&gt;), the monitor will check whether an attribute exists whose name is the full &lt;code&gt;ObservedAttribute&lt;/code&gt; string (&lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; in the example). It does this by calling &lt;a href=&quot;../mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getMBeanInfo&lt;/code&gt;&lt;/a&gt; for the observed MBean and looking for a contained &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt; with the given name. If one is found, then that is what is monitored. If more than one MBean is being observed, the behavior is unspecified if some of them have a &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; attribute and others do not. An implementation may therefore call &lt;code&gt;getMBeanInfo&lt;/code&gt; on just one of the MBeans in this case. The behavior is also unspecified if the result of the check changes while the monitor is active.</source>
          <target state="translated">속성 이름이 유효한 Java 식별자 인 것이 권장되지만 속성이 &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; 라고 할 수 있습니다 . 이는 &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; 인 &lt;code&gt;ObservedAttribute&lt;/code&gt; 가 관찰 할 값이 해당 이름의 속성이거나 &lt;code&gt;HeapMemoryUsage&lt;/code&gt; 라는 속성 내에서 &lt;code&gt;used&lt;/code&gt; 속성임을 의미 할 수 있음을 의미합니다 . 따라서 호환성을 위해 &lt;code&gt;ObservedAttribute&lt;/code&gt; 에 마침표 ( &lt;code&gt;.&lt;/code&gt; ) 가 포함 된 경우 모니터는 이름이 전체 &lt;code&gt;ObservedAttribute&lt;/code&gt; 문자열 ( 예에서는 &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; ) 인 속성이 있는지 여부를 확인합니다 . 호출하여 수행합니다.&lt;a href=&quot;../mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getMBeanInfo&lt;/code&gt; &lt;/a&gt;관찰 된 MBean에 대한 getMBeanInfo 및지정된 이름으로포함 된&lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt; 를찾습니다. 하나가 발견되면 그것이 모니터링됩니다. 둘 이상의 MBean이 관찰되는 경우 일부는 &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; 속성이 있고 다른일부는 그렇지 않은 경우 동작이 지정되지않습니다. 따라서 구현은이 경우 MBean 중 하나에서만 &lt;code&gt;getMBeanInfo&lt;/code&gt; 를호출 할 수 있습니다. 모니터가 활성 상태 인 동안 검사 결과가 변경되는 경우에도 동작이 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d51c916aaa2897c9155c6a2858409731586ff69d" translate="yes" xml:space="preserve">
          <source>Although null is an acceptable value to use in the lookup of stream printing services, it's typical to search for a particular desired format, such as Postscript(TM).</source>
          <target state="translated">null은 스트림 인쇄 서비스 조회에 사용할 수있는 값이지만 Postscript (TM)와 같이 원하는 특정 형식을 검색하는 것이 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="e7cbf3982fb342f3e5d0baab024fcbb7703bcfae" translate="yes" xml:space="preserve">
          <source>Although technically you can set the border on any object that inherits from &lt;code&gt;JComponent&lt;/code&gt;, the look and feel implementation of many standard Swing components doesn't work well with user-set borders. In general, when you want to set a border on a standard Swing component other than &lt;code&gt;JPanel&lt;/code&gt; or &lt;code&gt;JLabel&lt;/code&gt;, we recommend that you put the component in a &lt;code&gt;JPanel&lt;/code&gt; and set the border on the &lt;code&gt;JPanel&lt;/code&gt;.</source>
          <target state="translated">기술적으로는 &lt;code&gt;JComponent&lt;/code&gt; 에서 상속 된 모든 객체에 테두리를 설정할 수 있지만 많은 표준 Swing 구성 요소의 모양과 느낌 구현이 사용자 설정 테두리와 잘 작동하지 않습니다. 일반적으로 &lt;code&gt;JPanel&lt;/code&gt; 또는 &lt;code&gt;JLabel&lt;/code&gt; 이외의 표준 Swing 구성 요소에 테두리를 설정하려면 해당 구성 요소를 &lt;code&gt;JPanel&lt;/code&gt; 에 넣고 &lt;code&gt;JPanel&lt;/code&gt; 에 테두리를 설정하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="68256607582007aeadeb4f31286ee85dfce2653f" translate="yes" xml:space="preserve">
          <source>Although the &lt;code&gt;Date&lt;/code&gt; class is intended to reflect coordinated universal time (UTC), it may not do so exactly, depending on the host environment of the Java Virtual Machine. Nearly all modern operating systems assume that 1 day = 24 &amp;times; 60 &amp;times; 60 = 86400 seconds in all cases. In UTC, however, about once every year or two there is an extra second, called a &quot;leap second.&quot; The leap second is always added as the last second of the day, and always on December 31 or June 30. For example, the last minute of the year 1995 was 61 seconds long, thanks to an added leap second. Most computer clocks are not accurate enough to be able to reflect the leap-second distinction.</source>
          <target state="translated">있지만 &lt;code&gt;Date&lt;/code&gt; 클래스는 협정 세계시 (UTC)를 반영하기위한 것입니다, 그렇게 정확하게, Java 가상 머신의 호스트 환경에 따라 할 수 없습니다. 거의 모든 최신 운영 체제는 모든 경우에 1 일 = 24 &amp;times; 60 &amp;times; 60 = 86400 초라고 가정합니다. 그러나 UTC에서는 약 1 ~ 2 년에 한 번 &quot;윤초&quot;라고하는 추가 초가 있습니다. 윤초는 항상 하루의 마지막 초로 추가되고 항상 12 월 31 일 또는 6 월 30 일에 추가됩니다. 예를 들어 1995 년의 마지막 분은 윤초가 추가되어 61 초 길이였습니다. 대부분의 컴퓨터 시계는 윤초 차이를 반영 할 수있을만큼 정확하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b3597cd90b2d4226bd1628706ab515d1f52f3d30" translate="yes" xml:space="preserve">
          <source>Although the &lt;code&gt;menuBar&lt;/code&gt; component is optional, the &lt;code&gt;layeredPane&lt;/code&gt;, &lt;code&gt;contentPane&lt;/code&gt;, and &lt;code&gt;glassPane&lt;/code&gt; always exist. Attempting to set them to &lt;code&gt;null&lt;/code&gt; generates an exception.</source>
          <target state="translated">만 &lt;code&gt;menuBar&lt;/code&gt; 구성 요소는 선택의 &lt;code&gt;layeredPane&lt;/code&gt; , &lt;code&gt;contentPane&lt;/code&gt; 및 &lt;code&gt;glassPane&lt;/code&gt; 항상 존재한다. &lt;code&gt;null&lt;/code&gt; 로 설정하려고 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7e9570dcfac4d179d32d45a3e5686908e47828e6" translate="yes" xml:space="preserve">
          <source>Although the Print Service API does not presently provide standardised support for administering a print service, monitoring of the print service is possible and a UI may provide for private update mechanisms.</source>
          <target state="translated">인쇄 서비스 API는 현재 인쇄 서비스 관리를위한 표준화 된 지원을 제공하지 않지만 인쇄 서비스 모니터링이 가능하며 UI가 개인 업데이트 메커니즘을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66f0cc05040c7530181c29f5081e467b4a163808" translate="yes" xml:space="preserve">
          <source>Although the basic operation of a read-write lock is straight-forward, there are many policy decisions that an implementation must make, which may affect the effectiveness of the read-write lock in a given application. Examples of these policies include:</source>
          <target state="translated">읽기-쓰기 잠금의 기본 작업은 간단하지만 구현시 만들어야하는 많은 정책 결정이 있으며 이는 주어진 응용 프로그램에서 읽기-쓰기 잠금의 효과에 영향을 미칠 수 있습니다. 이러한 정책의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="48612c752c3ca5eb784b0812426bed066b3885e9" translate="yes" xml:space="preserve">
          <source>Although the class is abstract, this should be called by all sub-classes.</source>
          <target state="translated">클래스는 추상적이지만 모든 하위 클래스에서 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="2bb5921804d399af5ea77288bf09dd33cf48f190" translate="yes" xml:space="preserve">
          <source>Although the latency is expressed in microseconds, a synthesizer's actual measured delay may vary over a wider range than this resolution suggests. For example, a synthesizer might have a worst-case delay of a few milliseconds or more.</source>
          <target state="translated">대기 시간은 마이크로 초로 표시되지만 신디사이저의 실제 측정 된 지연은이 해상도가 제안하는 것보다 더 넓은 범위에서 달라질 수 있습니다. 예를 들어 신디사이저는 최악의 경우 몇 밀리 초 이상 지연 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7555049a02481a035a95baf49df2f6ceb8a36653" translate="yes" xml:space="preserve">
          <source>Although the selection is always contiguous, the logically selected text can be discontiguous on lines with mixed-direction text. The logical ranges of text selected can be retrieved using &lt;code&gt;getLogicalRangesForVisualSelection&lt;/code&gt;. For example, consider the text 'ABCdef' where capital letters indicate right-to-left text, rendered on a right-to-left line, with a visual selection from 0L (the leading edge of 'A') to 3T (the trailing edge of 'd'). The text appears as follows, with bold underlined areas representing the selection:</source>
          <target state="translated">선택은 항상 연속적이지만 논리적으로 선택된 텍스트는 방향이 혼합 된 텍스트가있는 행에서 불연속적일 수 있습니다. 선택된 텍스트의 논리적 범위는 &lt;code&gt;getLogicalRangesForVisualSelection&lt;/code&gt; 을 사용하여 검색 할 수 있습니다 . 예를 들어, 대문자가 오른쪽에서 왼쪽 텍스트를 나타내는 'ABCdef'텍스트를 생각해보십시오. 오른쪽에서 왼쪽 줄에 렌더링되고 0L ( 'A'의 앞쪽 가장자리)에서 3T (뒤쪽 가장자리)까지 시각적 선택이 있습니다. 'd'의 가장자리). 텍스트는 선택 항목을 나타내는 굵은 밑줄이있는 영역과 함께 다음과 같이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="8a95044f683bd0727b5122897360ca81a92ba466" translate="yes" xml:space="preserve">
          <source>Although this class implements Serializable, attempts to serialize a &lt;code&gt;LineEvent&lt;/code&gt; object will fail.</source>
          <target state="translated">이 클래스는 Serializable을 구현하지만 &lt;code&gt;LineEvent&lt;/code&gt; 객체 를 직렬화하려는 시도 는 실패합니다.</target>
        </trans-unit>
        <trans-unit id="3ebff8bc4e393e23f9d2b1f0b189eba7c38128b5" translate="yes" xml:space="preserve">
          <source>Always redirect, except from HTTPS URLs to HTTP URLs.</source>
          <target state="translated">HTTPS URL에서 HTTP URL 로의 경우를 제외하고 항상 리디렉션합니다.</target>
        </trans-unit>
        <trans-unit id="193b45a445104f3fa20af1b989ec4456afca07ce" translate="yes" xml:space="preserve">
          <source>Always redirect.</source>
          <target state="translated">항상 리디렉션합니다.</target>
        </trans-unit>
        <trans-unit id="c66943c16b4320d4edcd983915c5eb3557786b34" translate="yes" xml:space="preserve">
          <source>Always repaint in the parents coordinate system to make sure only one paint is performed by the &lt;code&gt;RepaintManager&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RepaintManager&lt;/code&gt; 가 하나의 페인트 만 수행하도록 항상 부모 좌표계에서 다시 페인트합니다 .</target>
        </trans-unit>
        <trans-unit id="765bfbabcab49f7b6ad1ed6eac9419a7a010d883" translate="yes" xml:space="preserve">
          <source>Always return a non-null valid &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object. Note that when an error has been reported, there is no guarantee that the returned &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object is meaningful.</source>
          <target state="translated">항상 null이 아닌 유효한 &lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt; 개체를 반환 합니다. 오류가보고 된 경우 반환 된 &lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt; 개체가 의미가 있다는 보장은 없습니다 .</target>
        </trans-unit>
        <trans-unit id="3aafaf14035e9d71dc090522d84e883dbe0ade2a" translate="yes" xml:space="preserve">
          <source>Always return a non-null valid object.</source>
          <target state="translated">항상 null이 아닌 유효한 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="12b67d4043de955106e6e1b2262dc34ef10f5764" translate="yes" xml:space="preserve">
          <source>Always return non-null valid &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">항상 null이 아닌 유효한 &lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt; 개체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="2570a452eded7ffdc87962a1b1f3195b1cd61ecc" translate="yes" xml:space="preserve">
          <source>Always return null, so that the parser will use the system identifier provided in the XML document. This method implements the SAX default behaviour: application writers can override it in a subclass to do special translations such as catalog lookups or URI redirection.</source>
          <target state="translated">파서가 XML 문서에 제공된 시스템 식별자를 사용하도록 항상 null을 반환합니다. 이 메서드는 SAX 기본 동작을 구현합니다. 애플리케이션 작성자는 카탈로그 조회 또는 URI 리디렉션과 같은 특수 번역을 수행하기 위해 하위 클래스에서이를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ad6eb95beb4af532c7cb136570f2183f510fb2a" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;&quot;[]&quot;&lt;/code&gt;.</source>
          <target state="translated">항상 &lt;code&gt;&quot;[]&quot;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a7f385ffe2ff8d164beb295d82218670c35cdc85" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; because a &lt;code&gt;DelayQueue&lt;/code&gt; is not capacity constrained.</source>
          <target state="translated">&lt;code&gt;DelayQueue&lt;/code&gt; 는 용량이 제한되지 않으므로 항상 &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c45bd045d65a4df4c0dd414d55062344a9778187" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; because a &lt;code&gt;LinkedTransferQueue&lt;/code&gt; is not capacity constrained.</source>
          <target state="translated">항상 반환 &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 때문에 &lt;code&gt;LinkedTransferQueue&lt;/code&gt; 가 용량 제한되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b57fa304cd9c670483f8ed783fd0b672996908e5" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; because a &lt;code&gt;PriorityBlockingQueue&lt;/code&gt; is not capacity constrained.</source>
          <target state="translated">항상 반환 &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 때문에 &lt;code&gt;PriorityBlockingQueue&lt;/code&gt; 용량 제한되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3e1cbbf5fa0f0ebd22af53c15e53fea0d74701c5" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;false&lt;/code&gt; because this input stream does not support the &lt;a href=&quot;#mark(int)&quot;&gt;&lt;code&gt;mark()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">이 입력 스트림은 &lt;a href=&quot;#mark(int)&quot;&gt; &lt;code&gt;mark()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메서드를 지원하지 않기 때문에 항상 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1c574375d98cd142b7ad53177ac76c170183c447" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;false&lt;/code&gt; because this input stream does not support the &lt;a href=&quot;deflaterinputstream#mark-int-&quot;&gt;&lt;code&gt;mark()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;deflaterinputstream#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">이 입력 스트림은 &lt;a href=&quot;deflaterinputstream#mark-int-&quot;&gt; &lt;code&gt;mark()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;deflaterinputstream#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메서드를 지원하지 않기 때문에 항상 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="4d59977e931ab40859349ce6039d8d8b24f4fd90" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">항상 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8095cb5b5fdb4fc5e113690f76ed9cbd251fddac" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;false&lt;/code&gt;. A &lt;code&gt;SynchronousQueue&lt;/code&gt; has no internal capacity.</source>
          <target state="translated">항상 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . &lt;code&gt;SynchronousQueue&lt;/code&gt; 어떠한 내부 용량이 없다.</target>
        </trans-unit>
        <trans-unit id="37f8783ec87b8ec4f904460e4f8016b2501c2094" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;null&lt;/code&gt; because &lt;code&gt;JInternalFrame&lt;/code&gt;s must always be roots of a focus traversal cycle.</source>
          <target state="translated">&lt;code&gt;JInternalFrame&lt;/code&gt; 은 항상 포커스 탐색주기의 루트 여야 하므로 항상 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="14d38f10151eab11357f4f6e837227c2f9e48cd5" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;null&lt;/code&gt; because Windows have no ancestors; they represent the top of the Component hierarchy.</source>
          <target state="translated">Windows에는 조상이 없기 때문에 항상 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 구성 요소 계층 구조의 맨 위를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e89bec8fb850573de2289bb9dc31383490faf82d" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">항상 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f03fd4a8d8315e9e933881f451e18d885e707d64" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;null&lt;/code&gt;. A &lt;code&gt;SynchronousQueue&lt;/code&gt; does not return elements unless actively waited on.</source>
          <target state="translated">항상 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . &lt;code&gt;SynchronousQueue&lt;/code&gt; 적극적으로에 기다렸다하지 않는 요소를 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c86363784a4e703b5bbcae26a963bc7d72f6b044" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;true&lt;/code&gt; because all &lt;code&gt;JInternalFrame&lt;/code&gt;s must be roots of a focus traversal cycle.</source>
          <target state="translated">모든 &lt;code&gt;JInternalFrame&lt;/code&gt; 은 포커스 탐색주기의 루트 여야 하므로 항상 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="c48cc222a8a5d731f8a9af708e07765d8d4afe19" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;true&lt;/code&gt; because all Windows must be roots of a focus traversal cycle.</source>
          <target state="translated">모든 Windows가 포커스 순회주기의 루트 여야하므로 항상 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="fff6aca074bea42f15ac30930a3329f26931ba08" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;true&lt;/code&gt; to cause painting to originate from &lt;code&gt;JLayer&lt;/code&gt;, or one of its ancestors.</source>
          <target state="translated">페인팅이 &lt;code&gt;JLayer&lt;/code&gt; 또는 그 조상 중 하나 에서 시작되도록하려면 항상 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="363877f1c43efa3dfd2bb302fd7fa8e11ffea1c4" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">항상 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="ff3d9c5517735a77232228f1de018b754c387c3c" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;true&lt;/code&gt;. A &lt;code&gt;SynchronousQueue&lt;/code&gt; has no internal capacity.</source>
          <target state="translated">항상 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . &lt;code&gt;SynchronousQueue&lt;/code&gt; 어떠한 내부 용량이 없다.</target>
        </trans-unit>
        <trans-unit id="98af7a85b9596600754922ec350a977f82f8bd65" translate="yes" xml:space="preserve">
          <source>Always returns zero.</source>
          <target state="translated">항상 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="28bb49af2a71608e74996c25d4aeabf4c67c9cac" translate="yes" xml:space="preserve">
          <source>Always returns zero. A &lt;code&gt;SynchronousQueue&lt;/code&gt; has no internal capacity.</source>
          <target state="translated">항상 0을 반환합니다. &lt;code&gt;SynchronousQueue&lt;/code&gt; 어떠한 내부 용량이 없다.</target>
        </trans-unit>
        <trans-unit id="e15bca928f5227aadfd3b6f55633ece1dadbbe0d" translate="yes" xml:space="preserve">
          <source>Always singleton sets:</source>
          <target state="translated">항상 싱글 톤 세트 :</target>
        </trans-unit>
        <trans-unit id="6b1e4704d6edd84f8b2e3582886ac4413c19d1b8" translate="yes" xml:space="preserve">
          <source>Always throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;</source>
          <target state="translated">항상 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 발생</target>
        </trans-unit>
        <trans-unit id="2f2e32b964f816773e5ccdcfec64829cd9034c4f" translate="yes" xml:space="preserve">
          <source>Always throws RejectedExecutionException.</source>
          <target state="translated">항상 RejectedExecutionException을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="7199aa6ac57b48c0101051672b24dc9e74d2efc5" translate="yes" xml:space="preserve">
          <source>Always throws an &lt;a href=&quot;../unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">항상 &lt;a href=&quot;../unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="6c8a0b7f294232ad12f2ce2f73c040adbce56365" translate="yes" xml:space="preserve">
          <source>Always throws an &lt;a href=&quot;../unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;. This kind of call site cannot change its target.</source>
          <target state="translated">항상 &lt;a href=&quot;../unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다. 이러한 종류의 호출 사이트는 대상을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="325105d0ca8c8cc88e846c97f7d636745a2ec908" translate="yes" xml:space="preserve">
          <source>Am array of ISO 639 two-letter language codes.</source>
          <target state="translated">ISO 639 두 글자 언어 코드의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="50c1dea8baee388447f721913a2bfdf5431c1038" translate="yes" xml:space="preserve">
          <source>Am/pm marker</source>
          <target state="translated">오전 / 오후 마커</target>
        </trans-unit>
        <trans-unit id="0e3c2da3fe0e6590419011663ae966dc59482834" translate="yes" xml:space="preserve">
          <source>America/Los_Angeles; Z; -08:30</source>
          <target state="translated">America / Los_Angeles; 지; -08 : 30</target>
        </trans-unit>
        <trans-unit id="29e2c1dccfddb6a4eddc8f7e6df352c49eb9d772" translate="yes" xml:space="preserve">
          <source>Among the applications of this method is to await completion of a set of independent CompletableFutures before continuing a program, as in: &lt;code&gt;CompletableFuture.allOf(c1, c2,
 c3).join();&lt;/code&gt;.</source>
          <target state="translated">이 메서드의 응용 프로그램 중에는 다음과 같이 프로그램을 계속하기 전에 독립적 인 CompletableFuture 집합의 완료를 기다리는 것입니다. &lt;code&gt;CompletableFuture.allOf(c1, c2, c3).join();&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eedd9d2ea268f140fe29669d45dd24d7b37284c4" translate="yes" xml:space="preserve">
          <source>Among the facilities provided by the &lt;code&gt;System&lt;/code&gt; class are standard input, standard output, and error output streams; access to externally defined properties and environment variables; a means of loading files and libraries; and a utility method for quickly copying a portion of an array.</source>
          <target state="translated">&lt;code&gt;System&lt;/code&gt; 클래스에서 제공하는 기능 중에는 표준 입력, 표준 출력 및 오류 출력 스트림이 있습니다. 외부에서 정의 된 속성 및 환경 변수에 대한 액세스 파일 및 라이브러리를로드하는 수단; 및 어레이의 일부를 빠르게 복사하기위한 유틸리티 방법.</target>
        </trans-unit>
        <trans-unit id="99690d58d4abd10cd0938a7adcb56ded08ef66ad" translate="yes" xml:space="preserve">
          <source>An</source>
          <target state="translated">An</target>
        </trans-unit>
        <trans-unit id="4235448949452b18bd7253ee3b24ef8cb99a4a40" translate="yes" xml:space="preserve">
          <source>An &quot;IndexedPropertyChange&quot; event gets delivered whenever a component that conforms to the JavaBeans specification (a &quot;bean&quot;) changes a bound indexed property.</source>
          <target state="translated">&quot;IndexedPropertyChange&quot;이벤트는 JavaBeans 사양 ( &quot;bean&quot;)을 준수하는 구성 요소가 바인딩 된 인덱스 속성을 변경할 때마다 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="36249b311b7bbad5a4f1967b151130ac016dd520" translate="yes" xml:space="preserve">
          <source>An &quot;IndexedPropertyChange&quot; event gets delivered whenever a component that conforms to the JavaBeans specification (a &quot;bean&quot;) changes a bound indexed property. This class is an extension of &lt;code&gt;PropertyChangeEvent&lt;/code&gt; but contains the index of the property that has changed.</source>
          <target state="translated">&quot;IndexedPropertyChange&quot;이벤트는 JavaBeans 사양 ( &quot;bean&quot;)을 준수하는 구성 요소가 바인딩 된 인덱스 속성을 변경할 때마다 전달됩니다. 이 클래스는 &lt;code&gt;PropertyChangeEvent&lt;/code&gt; 의 확장 이지만 변경된 속성의 인덱스를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="78b893ce6181cb63b5db46249eeb66668483c457" translate="yes" xml:space="preserve">
          <source>An &quot;IndexedPropertyChange&quot; event gets delivered whenever a component that conforms to the JavaBeans&amp;trade; specification (a &quot;bean&quot;) changes a bound indexed property.</source>
          <target state="translated">&quot;IndexedPropertyChange&quot;이벤트는 JavaBeans &amp;trade; 사양 ( &quot;bean&quot;)을 준수하는 구성 요소가 바인딩 된 인덱스 속성을 변경할 때마다 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="eaba1946db1dc9f7ab41cc4bb65e95001a2a2ddf" translate="yes" xml:space="preserve">
          <source>An &quot;IndexedPropertyChange&quot; event gets delivered whenever a component that conforms to the JavaBeans&amp;trade; specification (a &quot;bean&quot;) changes a bound indexed property. This class is an extension of &lt;code&gt;PropertyChangeEvent&lt;/code&gt; but contains the index of the property that has changed.</source>
          <target state="translated">&quot;IndexedPropertyChange&quot;이벤트는 JavaBeans &amp;trade; 사양 ( &quot;bean&quot;)을 준수하는 구성 요소가 바인딩 된 인덱스 속성을 변경할 때마다 전달됩니다. 이 클래스는 &lt;code&gt;PropertyChangeEvent&lt;/code&gt; 의 확장 이지만 변경된 속성의 인덱스를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="30a1dc6ab7158fbcccec0aa3749e4b8fd5acd663" translate="yes" xml:space="preserve">
          <source>An &quot;exports package-name [to module-name-list]&quot; directive.</source>
          <target state="translated">&quot;exports package-name [to module-name-list]&quot;지시문.</target>
        </trans-unit>
        <trans-unit id="fbe08fe96667321621dab85acac5aed1376efda5" translate="yes" xml:space="preserve">
          <source>An &quot;opens package-name [to module-name-list]&quot; directive.</source>
          <target state="translated">&quot;opens package-name [to module-name-list]&quot;지시문.</target>
        </trans-unit>
        <trans-unit id="6eaf05c4f3a9998b29776bcd0cd378b643bd212a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; is &lt;strong&gt;always&lt;/strong&gt; thrown by this method.</source>
          <target state="translated">&lt;a href=&quot;../../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt; 되어 &lt;strong&gt;항상&lt;/strong&gt; 이 방법에 의해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6390d8ceda0a81569067edad2a8963d82f2a85a0" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../../../../java.base/java/lang/reflect/invocationhandler&quot;&gt;&lt;code&gt;InvocationHandler&lt;/code&gt;&lt;/a&gt; that forwards getter methods to a &lt;a href=&quot;compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">getter 메소드를 &lt;a href=&quot;compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 로&lt;/a&gt; 전달 하는 &lt;a href=&quot;../../../../java.base/java/lang/reflect/invocationhandler&quot;&gt; &lt;code&gt;InvocationHandler&lt;/code&gt; &lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="5d976aae01a366ade383d6d6de69ee4972157b18" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../../../../java.base/java/lang/reflect/invocationhandler&quot;&gt;&lt;code&gt;InvocationHandler&lt;/code&gt;&lt;/a&gt; that forwards getter methods to a &lt;a href=&quot;compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt;. If you have an interface that contains only getter methods (such as &lt;code&gt;String getName()&lt;/code&gt; or &lt;code&gt;boolean isActive()&lt;/code&gt;) then you can use this class in conjunction with the &lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; class to produce an implementation of the interface where each getter returns the value of the corresponding item in a &lt;code&gt;CompositeData&lt;/code&gt;.</source>
          <target state="translated">getter 메소드를 &lt;a href=&quot;compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 로&lt;/a&gt; 전달 하는 &lt;a href=&quot;../../../../java.base/java/lang/reflect/invocationhandler&quot;&gt; &lt;code&gt;InvocationHandler&lt;/code&gt; &lt;/a&gt; 입니다 . getter 메서드 만 포함 된 인터페이스 (예 : &lt;code&gt;String getName()&lt;/code&gt; 또는 &lt;code&gt;boolean isActive()&lt;/code&gt; )가있는 경우이 클래스를 &lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; 클래스 와 함께 사용하여 각 getter가 해당 값을 반환하는 인터페이스 구현을 생성 할 수 있습니다 . &lt;code&gt;CompositeData&lt;/code&gt; 의 해당 항목 .</target>
        </trans-unit>
        <trans-unit id="52327258450e93b89f4cd2a96b5d2bf024575397" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../../../../java.base/java/util/optional&quot;&gt;&lt;code&gt;Optional&lt;/code&gt;&lt;/a&gt; containing the resulting nominal descriptor, or an empty &lt;a href=&quot;../../../../java.base/java/util/optional&quot;&gt;&lt;code&gt;Optional&lt;/code&gt;&lt;/a&gt; if one cannot be constructed.</source>
          <target state="translated">결과적인 명목 설명자를 포함 하는 &lt;a href=&quot;../../../../java.base/java/util/optional&quot;&gt; &lt;code&gt;Optional&lt;/code&gt; &lt;/a&gt; 또는 구성 할 수없는 경우 빈 &lt;a href=&quot;../../../../java.base/java/util/optional&quot;&gt; &lt;code&gt;Optional&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b37cc07d93916ebf6d69d976e6587bd6bf4aa717" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../../../java/lang/reflect/invocationhandler&quot;&gt;&lt;code&gt;InvocationHandler&lt;/code&gt;&lt;/a&gt; that forwards getter methods to a &lt;a href=&quot;compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">getter 메소드를 &lt;a href=&quot;compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 로&lt;/a&gt; 전달 하는 &lt;a href=&quot;../../../java/lang/reflect/invocationhandler&quot;&gt; &lt;code&gt;InvocationHandler&lt;/code&gt; &lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="ea7470fbda70d7692e2d346d7ec92dcfeb136199" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../../../java/lang/reflect/invocationhandler&quot;&gt;&lt;code&gt;InvocationHandler&lt;/code&gt;&lt;/a&gt; that forwards getter methods to a &lt;a href=&quot;compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt;. If you have an interface that contains only getter methods (such as &lt;code&gt;String getName()&lt;/code&gt; or &lt;code&gt;boolean isActive()&lt;/code&gt;) then you can use this class in conjunction with the &lt;a href=&quot;../../../java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; class to produce an implementation of the interface where each getter returns the value of the corresponding item in a &lt;code&gt;CompositeData&lt;/code&gt;.</source>
          <target state="translated">getter 메소드를 &lt;a href=&quot;compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 로&lt;/a&gt; 전달 하는 &lt;a href=&quot;../../../java/lang/reflect/invocationhandler&quot;&gt; &lt;code&gt;InvocationHandler&lt;/code&gt; &lt;/a&gt; 입니다 . getter 메서드 만 포함 된 인터페이스 (예 : &lt;code&gt;String getName()&lt;/code&gt; 또는 &lt;code&gt;boolean isActive()&lt;/code&gt; )가있는 경우이 클래스를 &lt;a href=&quot;../../../java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; 클래스 와 함께 사용하여 각 getter가 해당 값을 반환하는 인터페이스 구현을 생성 할 수 있습니다 . &lt;code&gt;CompositeData&lt;/code&gt; 의 해당 항목 .</target>
        </trans-unit>
        <trans-unit id="9d17f8d1d9db145c3beb67c00430a2efbb5385cd" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../../util/optional&quot;&gt;&lt;code&gt;Optional&lt;/code&gt;&lt;/a&gt; containing the resulting nominal descriptor, or an empty &lt;a href=&quot;../../util/optional&quot;&gt;&lt;code&gt;Optional&lt;/code&gt;&lt;/a&gt; if one cannot be constructed.</source>
          <target state="translated">결과적인 명목 설명자를 포함 하는 &lt;a href=&quot;../../util/optional&quot;&gt; &lt;code&gt;Optional&lt;/code&gt; &lt;/a&gt; 또는 구성 할 수없는 경우 빈 &lt;a href=&quot;../../util/optional&quot;&gt; &lt;code&gt;Optional&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7918c71a929d07515a8383c376f1c7b452e3d1ac" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt; represents an instantaneous point on the time-line. On their own, an instant has insufficient information to allow a local date-time to be obtained. Only when paired with an offset or time-zone can the local date or time be calculated.</source>
          <target state="translated">&lt;a href=&quot;../instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt; 시간 라인에 순간 지점을 나타냅니다. 인스턴트는 자체적으로 로컬 날짜-시간을 확보 할 수있는 정보가 충분하지 않습니다. 오프셋 또는 시간대와 쌍을 이루는 경우에만 현지 날짜 또는 시간을 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c291da958b4f01738011692193a5b1393caec4c4" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; occurs while reading a provider-configuration file;</source>
          <target state="translated">&lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; 이는&lt;/a&gt; 프로 바이더 구성 파일을 읽는 동안 발생;</target>
        </trans-unit>
        <trans-unit id="cd8901ae798fc06b17631034613ef16ee906fe23" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; occurs while reading the provider-configuration file;</source>
          <target state="translated">&lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; 이는&lt;/a&gt; 공급자가 구성 파일을 읽는 동안 발생;</target>
        </trans-unit>
        <trans-unit id="51852ab4aeb8d81470e94aaa16d86daebb3eb323" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../spi/executioncontrol&quot;&gt;&lt;code&gt;ExecutionControl&lt;/code&gt;&lt;/a&gt; implementation that runs in the current process.</source>
          <target state="translated">현재 프로세스에서 &lt;a href=&quot;../spi/executioncontrol&quot;&gt; &lt;code&gt;ExecutionControl&lt;/code&gt; &lt;/a&gt; 되는 ExecutionControl 구현입니다.</target>
        </trans-unit>
        <trans-unit id="29dbdbdbb68cae64f213f8a38c440cfff881f74d" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../spi/executioncontrol&quot;&gt;&lt;code&gt;ExecutionControl&lt;/code&gt;&lt;/a&gt; implementation that runs in the current process. May be used directly, or over a channel with &lt;a href=&quot;util#forwardExecutionControl(jdk.jshell.spi.ExecutionControl,java.io.ObjectInput,java.io.ObjectOutput)&quot;&gt;&lt;code&gt;Util.forwardExecutionControl(ExecutionControl, java.io.ObjectInput, java.io.ObjectOutput)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 프로세스에서 &lt;a href=&quot;../spi/executioncontrol&quot;&gt; &lt;code&gt;ExecutionControl&lt;/code&gt; &lt;/a&gt; 되는 ExecutionControl 구현입니다. 직접 사용하거나 &lt;a href=&quot;util#forwardExecutionControl(jdk.jshell.spi.ExecutionControl,java.io.ObjectInput,java.io.ObjectOutput)&quot;&gt; &lt;code&gt;Util.forwardExecutionControl(ExecutionControl, java.io.ObjectInput, java.io.ObjectOutput)&lt;/code&gt; &lt;/a&gt; 사용하여 채널을 통해 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e71f273aa6693662efdd628d81699386bbd7dbaf" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../util/optional&quot;&gt;&lt;code&gt;Optional&lt;/code&gt;&lt;/a&gt; containing the resulting nominal descriptor, or an empty &lt;a href=&quot;../util/optional&quot;&gt;&lt;code&gt;Optional&lt;/code&gt;&lt;/a&gt; if one cannot be constructed.</source>
          <target state="translated">결과적인 명목 설명자를 포함 하는 &lt;a href=&quot;../util/optional&quot;&gt; &lt;code&gt;Optional&lt;/code&gt; &lt;/a&gt; 또는 구성 할 수없는 경우 빈 &lt;a href=&quot;../util/optional&quot;&gt; &lt;code&gt;Optional&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="991166bb4b552ba27b6ade464676c5a4017c648c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;coderresult#unmappableForLength(int)&quot;&gt;unmappable-character&lt;/a&gt; result indicates that an unmappable-character error has been detected. The bytes that decode the unmappable character begin at the input buffer's (possibly incremented) position; the number of such bytes may be determined by invoking the result object's &lt;a href=&quot;coderresult#length()&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; method. This case applies only if the &lt;a href=&quot;#onUnmappableCharacter(java.nio.charset.CodingErrorAction)&quot;&gt;unmappable action&lt;/a&gt; of this decoder is &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;&lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt;&lt;/a&gt;; otherwise the unmappable character will be ignored or replaced, as requested.</source>
          <target state="translated">&lt;a href=&quot;coderresult#unmappableForLength(int)&quot;&gt;맵 불가 문자&lt;/a&gt; 결과 맵 불가 문자 에러가 검출되었음을 나타낸다. 매핑 할 수없는 문자를 디코딩하는 바이트는 입력 버퍼의 (증가 될 수 있음) 위치에서 시작합니다. 이러한 바이트 수는 결과 객체의 &lt;a href=&quot;coderresult#length()&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 결정할 수 있습니다 . 이 경우는 이 디코더 의 &lt;a href=&quot;#onUnmappableCharacter(java.nio.charset.CodingErrorAction)&quot;&gt;매핑&lt;/a&gt; 할 수 없는 작업 이 &lt;a href=&quot;codingerroraction#REPORT&quot;&gt; &lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt; 인&lt;/a&gt; 경우에만 적용됩니다 . 그렇지 않으면 매핑 할 수없는 문자가 요청에 따라 무시되거나 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="3e259c2bf65d718506fbd53e72099c1ba454873b" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;coderresult#unmappableForLength(int)&quot;&gt;unmappable-character&lt;/a&gt; result indicates that an unmappable-character error has been detected. The characters that encode the unmappable character begin at the input buffer's (possibly incremented) position; the number of such characters may be determined by invoking the result object's &lt;a href=&quot;coderresult#length()&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; method. This case applies only if the &lt;a href=&quot;#onUnmappableCharacter(java.nio.charset.CodingErrorAction)&quot;&gt;unmappable action&lt;/a&gt; of this encoder is &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;&lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt;&lt;/a&gt;; otherwise the unmappable character will be ignored or replaced, as requested.</source>
          <target state="translated">&lt;a href=&quot;coderresult#unmappableForLength(int)&quot;&gt;맵 불가 문자&lt;/a&gt; 결과 맵 불가 문자 에러가 검출되었음을 나타낸다. 매핑 할 수없는 문자를 인코딩하는 문자는 입력 버퍼 (증가 될 수 있음) 위치에서 시작합니다. 이러한 문자의 수는 결과 개체의 &lt;a href=&quot;coderresult#length()&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 결정할 수 있습니다 . 이 경우는 이 인코더 의 &lt;a href=&quot;#onUnmappableCharacter(java.nio.charset.CodingErrorAction)&quot;&gt;매핑&lt;/a&gt; 할 수 없는 작업 이 &lt;a href=&quot;codingerroraction#REPORT&quot;&gt; &lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt; 인&lt;/a&gt; 경우에만 적용됩니다 . 그렇지 않으면 매핑 할 수없는 문자가 요청에 따라 무시되거나 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="ddc2cfe54fe2569a712d60c27c4d6401768a7dcc" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;coderresult#unmappableForLength-int-&quot;&gt;unmappable-character&lt;/a&gt; result indicates that an unmappable-character error has been detected. The bytes that decode the unmappable character begin at the input buffer's (possibly incremented) position; the number of such bytes may be determined by invoking the result object's &lt;a href=&quot;coderresult#length--&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; method. This case applies only if the &lt;a href=&quot;charsetdecoder#onUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt;unmappable action&lt;/a&gt; of this decoder is &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;&lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt;&lt;/a&gt;; otherwise the unmappable character will be ignored or replaced, as requested.</source>
          <target state="translated">&lt;a href=&quot;coderresult#unmappableForLength-int-&quot;&gt;맵 불가 문자&lt;/a&gt; 결과 맵 불가 문자 에러가 검출되었음을 나타낸다. 매핑 할 수없는 문자를 디코딩하는 바이트는 입력 버퍼의 (증가 될 수 있음) 위치에서 시작합니다. 이러한 바이트 수는 결과 객체의 &lt;a href=&quot;coderresult#length--&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 결정할 수 있습니다 . 이 경우는 이 디코더 의 &lt;a href=&quot;charsetdecoder#onUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt;매핑&lt;/a&gt; 할 수 없는 작업 이 &lt;a href=&quot;codingerroraction#REPORT&quot;&gt; &lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt; 인&lt;/a&gt; 경우에만 적용됩니다 . 그렇지 않으면 매핑 할 수없는 문자가 요청에 따라 무시되거나 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="24ad5d778674482cb1fadf96bfafeed35f4ee8e7" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;coderresult#unmappableForLength-int-&quot;&gt;unmappable-character&lt;/a&gt; result indicates that an unmappable-character error has been detected. The characters that encode the unmappable character begin at the input buffer's (possibly incremented) position; the number of such characters may be determined by invoking the result object's &lt;a href=&quot;coderresult#length--&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; method. This case applies only if the &lt;a href=&quot;charsetencoder#onUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt;unmappable action&lt;/a&gt; of this encoder is &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;&lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt;&lt;/a&gt;; otherwise the unmappable character will be ignored or replaced, as requested.</source>
          <target state="translated">&lt;a href=&quot;coderresult#unmappableForLength-int-&quot;&gt;맵 불가 문자&lt;/a&gt; 결과 맵 불가 문자 에러가 검출되었음을 나타낸다. 매핑 할 수없는 문자를 인코딩하는 문자는 입력 버퍼 (증가 될 수 있음) 위치에서 시작합니다. 이러한 문자의 수는 결과 개체의 &lt;a href=&quot;coderresult#length--&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 결정할 수 있습니다 . 이 경우는 이 인코더 의 &lt;a href=&quot;charsetencoder#onUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt;매핑&lt;/a&gt; 할 수 없는 작업 이 &lt;a href=&quot;codingerroraction#REPORT&quot;&gt; &lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt; 인&lt;/a&gt; 경우에만 적용됩니다 . 그렇지 않으면 매핑 할 수없는 문자가 요청에 따라 무시되거나 대체됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
