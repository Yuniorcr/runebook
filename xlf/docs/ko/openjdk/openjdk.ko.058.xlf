<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="d7762c22e001277ee5cd6aeecabf121605fbece7" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is in the left key location (there is more than one possible location for this key). Example: the left shift key.</source>
          <target state="translated">눌렀거나 놓은 키가 왼쪽 키 위치에 있음을 나타내는 상수입니다 (이 키에 대해 둘 이상의 가능한 위치가 있음). 예 : 왼쪽 Shift 키.</target>
        </trans-unit>
        <trans-unit id="9a1f11a170c0a575584e55c5fb1d677bb6358739" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is in the right key location (there is more than one possible location for this key).</source>
          <target state="translated">눌렀거나 놓은 키가 올바른 키 위치에 있음을 나타내는 상수입니다 (이 키에 대해 둘 이상의 가능한 위치가 있음).</target>
        </trans-unit>
        <trans-unit id="98822459a383fdb86b1f6269201518447e31508e" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is in the right key location (there is more than one possible location for this key). Example: the right shift key.</source>
          <target state="translated">눌렀거나 놓은 키가 올바른 키 위치에 있음을 나타내는 상수입니다 (이 키에 대해 둘 이상의 가능한 위치가 있음). 예 : 오른쪽 Shift 키.</target>
        </trans-unit>
        <trans-unit id="29d575fa10f7d1466aa0adcd76dc7b048791c20c" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is not distinguished as the left or right version of a key, and did not originate on the numeric keypad (or did not originate with a virtual key corresponding to the numeric keypad).</source>
          <target state="translated">눌렀거나 놓은 키가 키의 왼쪽 또는 오른쪽 버전으로 구분되지 않고 숫자 키패드에서 시작되지 않았거나 숫자 키패드에 해당하는 가상 키에서 시작되지 않았 음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="4f8a965994d6bdff67c964a039e7f1a4fd80747d" translate="yes" xml:space="preserve">
          <source>A constant indicating that the keyLocation is indeterminate or not relevant.</source>
          <target state="translated">keyLocation이 불확실하거나 관련이 없음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="9f2c38207a19702e47eb202ace4e581e89aa869f" translate="yes" xml:space="preserve">
          <source>A constant indicating that the keyLocation is indeterminate or not relevant. &lt;code&gt;KEY_TYPED&lt;/code&gt; events do not have a keyLocation; this value is used instead.</source>
          <target state="translated">keyLocation이 불확실하거나 관련이 없음을 나타내는 상수입니다. &lt;code&gt;KEY_TYPED&lt;/code&gt; 이벤트에는 keyLocation이 없습니다. 이 값이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="20c201122998a1314d1f84487379aeb5d8cd68c9" translate="yes" xml:space="preserve">
          <source>A constant indicating that transactions are not supported.</source>
          <target state="translated">트랜잭션이 지원되지 않음을 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="2d5ee397d0953f8c878592a157223de0668f57de" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a Unicode stream.</source>
          <target state="translated">지정된 매개 변수가 유니 코드 스트림임을 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 오브젝트에 표시하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="444a3b653570cc75145a9db33019375cdb0d23ea" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a Unicode stream. This &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object is provided as an extension of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class defined in the &lt;code&gt;SyncFactory&lt;/code&gt; static factory SPI mechanism.</source>
          <target state="translated">지정된 매개 변수가 유니 코드 스트림임을 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 오브젝트에 표시하는 상수 입니다. 이 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 객체는 &lt;code&gt;SyncFactory&lt;/code&gt; 정적 팩토리 SPI 메커니즘에 정의 된 &lt;code&gt;SyncProvider&lt;/code&gt; 추상 클래스 의 확장으로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="d1af75dffd4a28ad609bd172e9df6b60b0492280" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a binary stream.</source>
          <target state="translated">지정된 매개 변수가 2 진 스트림임을 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 오브젝트에 표시하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="82f3fde9e0a9c49845f36259d577d009885b6c5d" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a binary stream. A &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object is provided as an extension of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class defined in the &lt;code&gt;SyncFactory&lt;/code&gt; static factory SPI mechanism.</source>
          <target state="translated">지정된 매개 변수가 2 진 스트림임을 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 오브젝트에 표시하는 상수 입니다. &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 의 객체의 확장으로 제공 &lt;code&gt;SyncProvider&lt;/code&gt; 에 정의 추상 클래스 &lt;code&gt;SyncFactory&lt;/code&gt; 에의 static 팩토리 SPI 메커니즘.</target>
        </trans-unit>
        <trans-unit id="b2e11b618c4a9eb29b087fecb9e638df2e5f9e9c" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is an ASCII stream.</source>
          <target state="translated">지정된 매개 변수가 ASCII 스트림임을 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 오브젝트에 표시하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="778c619722f209ee6e231b3b6a638d87619250b4" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is an ASCII stream. A &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object is provided as an extension of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class defined in the &lt;code&gt;SyncFactory&lt;/code&gt; static factory SPI mechanism.</source>
          <target state="translated">지정된 매개 변수가 ASCII 스트림임을 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 오브젝트에 표시하는 상수 입니다. &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 의 객체의 확장으로 제공 &lt;code&gt;SyncProvider&lt;/code&gt; 에 정의 추상 클래스 &lt;code&gt;SyncFactory&lt;/code&gt; 에의 static 팩토리 SPI 메커니즘.</target>
        </trans-unit>
        <trans-unit id="05fd9daac8cc107ac74022f8e6a431daa3310be1" translate="yes" xml:space="preserve">
          <source>A constant pool index does not refer to a UTF-8 entry</source>
          <target state="translated">상수 풀 인덱스는 UTF-8 항목을 참조하지 않습니다</target>
        </trans-unit>
        <trans-unit id="6b17d0eb335bec84834c46dc6002183dea1ae9ba" translate="yes" xml:space="preserve">
          <source>A constant pool index is out of bounds.</source>
          <target state="translated">상수 풀 인덱스가 범위를 벗어났습니다.</target>
        </trans-unit>
        <trans-unit id="b83da880fe62fcf431fa2b80b966091f24e6c21a" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a general Unicode string.</source>
          <target state="translated">속성 값이 일반 유니 코드 문자열임을 나타내는 &lt;code&gt;getAttributeDataType&lt;/code&gt; 에 의해 리턴되는 상수 .</target>
        </trans-unit>
        <trans-unit id="7e64a1186b69b4d433ea2f6a6e2d5e8963e0b2a9" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a string representation of a decimal floating-point number.</source>
          <target state="translated">속성 값이 10 진 부동 소수점 숫자의 문자열 표현임을 나타내는 &lt;code&gt;getAttributeDataType&lt;/code&gt; 에 의해 리턴되는 상수 .</target>
        </trans-unit>
        <trans-unit id="ab34a89f1927a75ce08a7f8cd06fc8745928ab5f" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a string representation of a double-precision decimal floating-point number.</source>
          <target state="translated">속성 값이 배정도 십진 부동 소수점 숫자의 문자열 표현임을 나타내는 &lt;code&gt;getAttributeDataType&lt;/code&gt; 에 의해 리턴되는 상수 .</target>
        </trans-unit>
        <trans-unit id="1dc9d55cfd527b1e9a8494e21da70bbc73b4a0ca" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a string representation of an integer.</source>
          <target state="translated">속성 값이 정수의 문자열 표현임을 나타내는 &lt;code&gt;getAttributeDataType&lt;/code&gt; 에 의해 리턴되는 상수 .</target>
        </trans-unit>
        <trans-unit id="b055c29b61d38048b3db837907dda4788b82beaf" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is one of the boolean values 'true' or 'false'.</source>
          <target state="translated">속성 값이 부울 값 'true'또는 'false'중 하나임을 나타내는 &lt;code&gt;getAttributeDataType&lt;/code&gt; 에서 리턴하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="9c7921138692ad31aed03ed87a2c18d7559fa6f8" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is one of the boolean values 'true' or 'false'. Attribute values of type DATATYPE_BOOLEAN should be marked as enumerations, and the permitted values should be the string literal values &quot;TRUE&quot; or &quot;FALSE&quot;, although a plugin may also recognise lower or mixed case equivalents.</source>
          <target state="translated">속성의 값이 부울 값 'true'또는 'false'중 하나임을 나타내는 &lt;code&gt;getAttributeDataType&lt;/code&gt; 에 의해 리턴되는 상수 . 유형이 DATATYPE_BOOLEAN 인 속성 값은 열거로 표시되어야하며 허용되는 값은 문자열 리터럴 값 &quot;TRUE&quot;또는 &quot;FALSE&quot;여야하지만 플러그인은 소문자 또는 대소 문자를 동등한 것으로 인식 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="566bce4b46c648ea6165b9faa10f160b834017b7" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a range of values.</source>
          <target state="translated">속성 또는 사용자 개체가 값 범위를 설정할 수 있음을 나타 내기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에서 반환하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="536b4870053ade20fbb0746b24a7e47d769bbe9e" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a range of values. Both the minimum and maximum values of the range are exclusive. It is recommended that ranges of integers be inclusive on both ends, and that exclusive ranges be used only for floating-point data.</source>
          <target state="translated">속성 또는 사용자 오브젝트가 값 범위를 설정할 수 있음을 표시하기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 . 범위의 최소값과 최대 값이 모두 배타적입니다. 정수 범위는 양쪽 끝을 포함하고 배타적 범위는 부동 소수점 데이터에만 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0b757473db53368a2ef12d97dd50853ce089eaf3" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a range of values. Both the minimum and maximum values of the range are inclusive. It is recommended that ranges of integers be inclusive on both ends, and that exclusive ranges be used only for floating-point data.</source>
          <target state="translated">속성 또는 사용자 오브젝트가 값 범위를 설정할 수 있음을 표시하기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 . 범위의 최소값과 최대 값이 모두 포함됩니다. 정수 범위는 양쪽 끝을 포함하고 배타적 범위는 부동 소수점 데이터에만 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="2983d9a4c8f0070d53ebb95bf9e8a10f5fc81489" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a single, arbitrary value.</source>
          <target state="translated">속성 또는 사용자 객체가 임의의 단일 값으로 설정 될 수 있음을 표시하기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 .</target>
        </trans-unit>
        <trans-unit id="7dd2ee1ceefd12d472ba5e7d72f427399d68f9c3" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set one of a number of enumerated values.</source>
          <target state="translated">&lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에서 반환하는 상수 는 속성 또는 사용자 개체가 여러 열거 된 값 중 하나로 설정 될 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0700eebf90e2b9b27717269ad4daa5ca6eaf8941" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set one of a number of enumerated values. In the case of attributes, these values are &lt;code&gt;String&lt;/code&gt;s; for objects, they are &lt;code&gt;Object&lt;/code&gt;s implementing a given class or interface.</source>
          <target state="translated">속성 또는 사용자 오브젝트가 열거 된 값 중 하나를 설정할 수 있음을 표시하기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 . 속성의 경우 이러한 값은 &lt;code&gt;String&lt;/code&gt; 입니다 . 객체의 경우, 주어진 클래스 또는 인터페이스를 구현하는 &lt;code&gt;Object&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2ec6012b51cd19cccf833c92407daa945b1a03e9" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a list or array of values.</source>
          <target state="translated">속성 또는 사용자 개체가 값 목록 또는 배열로 설정 될 수 있음을 나타 내기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에서 반환하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="01a4565fe7f6e19d3ab523d52b2e3d4022290f1b" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a list or array of values. In the case of attributes, the list will consist of whitespace-separated values within a &lt;code&gt;String&lt;/code&gt;; for objects, an array will be used.</source>
          <target state="translated">속성 또는 사용자 오브젝트가 값의 목록 또는 배열로 설정 될 수 있음을 표시하기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 . 속성의 경우 목록은 &lt;code&gt;String&lt;/code&gt; 내에 공백으로 구분 된 값으로 구성됩니다 . 객체의 경우 배열이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="80334552b3aebe7d8c7a06d06da04a1a3568a90f" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a range of values.</source>
          <target state="translated">속성 또는 사용자 개체가 값 범위로 설정 될 수 있음을 나타 내기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에서 반환하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="1b6629d90c3b11283881b0238ff02a1f68047efe" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a range of values. The maximum (but not the minimum) value of the range is inclusive.</source>
          <target state="translated">속성 또는 사용자 오브젝트가 값 범위로 설정 될 수 있음을 표시하기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 . 범위의 최대 값 (최소한은 아님)이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="772f7ec75791ea05130b58e948867c25d7e5fe15" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a range of values. The minimum (but not the maximum) value of the range is inclusive.</source>
          <target state="translated">속성 또는 사용자 오브젝트가 값 범위로 설정 될 수 있음을 표시하기 위해 &lt;code&gt;getAttributeValueType&lt;/code&gt; 및 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 . 범위의 최소값 (최대 값은 아님)이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="17abfcd5d959c22775f6b62852cd890d8ecc15d8" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element may not have any children.</source>
          <target state="translated">요소에 자식이 없을 수 있음을 나타 내기 위해 &lt;code&gt;getChildPolicy&lt;/code&gt; 에서 반환하는 상수 입니다.</target>
        </trans-unit>
        <trans-unit id="1514659e4abf19076195fdc813b9841606a061a9" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element may not have any children. In other words, it is required to be a leaf node.</source>
          <target state="translated">요소에 자식이 없을 수 있음을 나타 내기 위해 &lt;code&gt;getChildPolicy&lt;/code&gt; 에 의해 리턴되는 상수 . 즉, 리프 노드 여야합니다.</target>
        </trans-unit>
        <trans-unit id="b270fd2569573332c2d9e007ae63e71559dcca3c" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a sequence of instances of any of its legal child elements.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; 에 의해 반환 된 상수 는 요소에 해당하는 유효한 자식 요소의 인스턴스 시퀀스가 ​​있어야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0ca721acca6c2ee0f535842aac83a6e8e73d7b2b" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a sequence of instances of any of its legal child elements. In DTD terms, the contents of the element are defined by a sequence &lt;code&gt;(a|b|c|d|...)*&lt;/code&gt;.</source>
          <target state="translated">요소에 유효한 자식 요소의 시퀀스가 ​​있어야 함을 나타 내기 위해 &lt;code&gt;getChildPolicy&lt;/code&gt; 에 의해 반환되는 상수 . DTD 용어에서, 요소의 내용은 시퀀스 &lt;code&gt;(a|b|c|d|...)*&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="349d171edd3b592ceb01cdb21161389dea4db0db" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a single instance of each of its legal child elements, in order.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; 가 반환하는 상수로 , 요소는 순서대로 각 유효한 자식 요소의 단일 인스턴스를 가져야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="25307fe80f331b10c26c8b31d0ddbea83dc5eb8e" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a single instance of each of its legal child elements, in order. In DTD terms, the contents of the element are defined by a sequence &lt;code&gt;a,b,c,d,...&lt;/code&gt;.</source>
          <target state="translated">요소가 유효한 각 자식 요소의 단일 인스턴스를 순서대로 가져야한다는 것을 나타 내기 위해 &lt;code&gt;getChildPolicy&lt;/code&gt; 에 의해 리턴되는 상수 . DTD 용어에서 요소의 내용은 시퀀스 &lt;code&gt;a,b,c,d,...&lt;/code&gt; 로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="62b7bc8bdc42c3f8bc44d2fd527e686dc6e82432" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or more instances of its unique legal child element.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; 에서 반환하는 상수 는 요소에 고유 한 법적 자식 요소의 인스턴스가 0 개 이상 있어야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d2a5ac0abac4124c2691f77efb666b9cd9be6e2f" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or more instances of its unique legal child element. In DTD terms, the contents of the element are defined by a starred expression &lt;code&gt;a*&lt;/code&gt;.</source>
          <target state="translated">요소에 고유의 유효한 자식 요소 인스턴스가 0 개 이상 있어야 함을 나타 내기 위해 &lt;code&gt;getChildPolicy&lt;/code&gt; 에서 반환하는 상수 입니다. DTD 용어에서 요소의 내용은 별표 표시된 표현식 &lt;code&gt;a*&lt;/code&gt; 로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="55f9aa4fe76b8c0ceece5c17f4e27e5156875298" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one children, selected from among its legal child elements.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; 에 의해 반환되는 상수 는 요소에 유효한 자식 요소 중에서 선택된 0 개 또는 1 개의 자식이 있어야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="25a43eb749e0d4acdb5a2d1a97249b39d470bc43" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one children, selected from among its legal child elements. In DTD terms, the contents of the element are defined by a selection &lt;code&gt;a|b|c|d|...&lt;/code&gt;.</source>
          <target state="translated">요소가 합법적 인 자식 요소 중 하나 또는 하나의 자식을 가져야한다는 것을 나타 내기 위해 &lt;code&gt;getChildPolicy&lt;/code&gt; 에 의해 반환되는 상수 . DTD 용어에서, 요소의 내용은 선택 &lt;code&gt;a|b|c|d|...&lt;/code&gt; 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="2158f87b8f92b42c073e896d0d5528d518ffe0e1" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one instance of each of its legal child elements, in order.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; 가 반환하는 상수로 , 요소는 순서대로 각 유효한 자식 요소의 인스턴스가 0 개 또는 1 개 있어야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="94f4855baee14b64d1efe591ef1cabf5480c75ae" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one instance of each of its legal child elements, in order. In DTD terms, the contents of the element are defined by a sequence &lt;code&gt;a?,b?,c?,d?,...&lt;/code&gt;.</source>
          <target state="translated">요소가 유효한 각 하위 요소의 인스턴스를 순서대로 0 개 또는 1 개 가져야 함을 표시하기 위해 &lt;code&gt;getChildPolicy&lt;/code&gt; 에서 리턴 한 상수 . DTD 용어에서 요소의 내용은 시퀀스 &lt;code&gt;a?,b?,c?,d?,...&lt;/code&gt; 로 정의 됩니다.</target>
        </trans-unit>
        <trans-unit id="d25737fce32883b6c144ed133d1e77a8c2421fac" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate the absence of a user object.</source>
          <target state="translated">사용자 객체가 없음을 나타 내기 위해 &lt;code&gt;getObjectValueType&lt;/code&gt; 에 의해 리턴되는 상수 .</target>
        </trans-unit>
        <trans-unit id="9958a5b1e7e52f53c31a2b6e90641f49be5abe83" translate="yes" xml:space="preserve">
          <source>A constant that indicates a horizontal scroll bar.</source>
          <target state="translated">가로 스크롤 막대를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="2a664bb96fbace79e8921afd5d417d9d8f0a8b80" translate="yes" xml:space="preserve">
          <source>A constant that indicates a vertical scroll bar.</source>
          <target state="translated">세로 스크롤 막대를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="9f3b1eee9cafae4150875d4465c302deee8b24bd" translate="yes" xml:space="preserve">
          <source>A constant that represents the days field.</source>
          <target state="translated">days 필드를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="d50083a6b811310bfcdc88e734bb35da6b1077b7" translate="yes" xml:space="preserve">
          <source>A constant that represents the hours field.</source>
          <target state="translated">시간 필드를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="b17282818a9c4ae66351fe225c2aa4c623204a5c" translate="yes" xml:space="preserve">
          <source>A constant that represents the minutes field.</source>
          <target state="translated">분 필드를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="485fdf7fd1644fefedcc79390cca96901956c9af" translate="yes" xml:space="preserve">
          <source>A constant that represents the months field.</source>
          <target state="translated">월 필드를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="bfeb5d39997aa2b454607fa8adcb25d4cf79ebfb" translate="yes" xml:space="preserve">
          <source>A constant that represents the seconds field.</source>
          <target state="translated">초 필드를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="b48e61a5313fb72ce52d866513c4f3214262890d" translate="yes" xml:space="preserve">
          <source>A constant that represents the years field.</source>
          <target state="translated">연도 필드를 나타내는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="5abebda073f15c5667612d5bce665df5e30f7ecd" translate="yes" xml:space="preserve">
          <source>A constant to determine whether the node is accepted, rejected, or skipped, as defined above.</source>
          <target state="translated">위에 정의 된대로 노드가 승인, 거부 또는 건너 뛰는 지 여부를 판별하는 상수입니다.</target>
        </trans-unit>
        <trans-unit id="a9bb52a1a0861cec5571123e621ea88ed9320640" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt; or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable a feature for future writes.</source>
          <target state="translated">향후 쓰기를위한 기능을 활성화하기 위해 &lt;code&gt;setTilingMode&lt;/code&gt; 또는 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메서드에 전달할 수있는 상수 값입니다 .</target>
        </trans-unit>
        <trans-unit id="35d4eb9703c2210692f0d6cfb2192f616bfd7eae" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt; or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable a feature for future writes. That is, when this mode is set the stream will be tiled or compressed according to additional information supplied to the corresponding &lt;code&gt;set&lt;/code&gt; methods in this class and retrievable from the corresponding &lt;code&gt;get&lt;/code&gt; methods. Note that this mode is not supported for progressive output.</source>
          <target state="translated">향후 쓰기 기능을 사용하기 위해 &lt;code&gt;setTilingMode&lt;/code&gt; 또는 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메소드에 전달 될 수있는 상수 값입니다 . 즉,이 모드가 설정되면 이 클래스 의 해당 &lt;code&gt;set&lt;/code&gt; 메소드에 제공되는 추가 정보에 따라 스트림이 타일링되거나 압축 되어 해당 &lt;code&gt;get&lt;/code&gt; 메소드 에서 검색 할 수 있습니다. 점진적 출력에는이 모드가 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="559ccbc6f19c151bdc59b4dda6613806012db4fa" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to disable a feature for future writes.</source>
          <target state="translated">향후 쓰기를 위해 기능을 비활성화하기 위해 &lt;code&gt;setTilingMode&lt;/code&gt; , &lt;code&gt;setProgressiveMode&lt;/code&gt; 및 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메서드에 전달할 수있는 상수 값입니다 .</target>
        </trans-unit>
        <trans-unit id="5e3bdadffec9d389f0e6f442f4a8826a156f5a94" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to disable a feature for future writes. That is, when this mode is set the stream will &lt;b&gt;not&lt;/b&gt; be tiled, progressive, or compressed, and the relevant accessor methods will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">향후 쓰기 기능을 비활성화하기 위해 &lt;code&gt;setTilingMode&lt;/code&gt; , &lt;code&gt;setProgressiveMode&lt;/code&gt; 및 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메서드에 전달 될 수있는 상수 값입니다 . 즉,이 모드가 설정되면 스트림이 바둑판 식으로 진행되거나 압축 &lt;b&gt;되지 않으며&lt;/b&gt; 관련 액세서 메소드가 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="3ab70b2d758691d0eea3255e3dfcc38b6fab8268" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes.</source>
          <target state="translated">&lt;code&gt;setTilingMode&lt;/code&gt; , &lt;code&gt;setProgressiveMode&lt;/code&gt; 및 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메서드에 전달되어 향후 쓰기를 위해 해당 기능을 활성화 할 수있는 상수 값입니다 .</target>
        </trans-unit>
        <trans-unit id="c8f7898366002f517660648a2793ba433862bbdf" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes. That is, when this mode is enabled the stream will be tiled, progressive, or compressed according to a sensible default chosen internally by the writer in a plug-in dependent way, and the relevant accessor methods will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">향후 쓰기를 위해 해당 기능을 사용하기 위해 &lt;code&gt;setTilingMode&lt;/code&gt; , &lt;code&gt;setProgressiveMode&lt;/code&gt; 및 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메소드에 전달 될 수있는 상수 값입니다 . 즉,이 모드가 활성화되면, 플러그인에 의존하여 라이터가 내부적으로 선택한 적절한 기본값에 따라 스트림이 바둑판 식, 프로그레시브 또는 압축되며 관련 액세서 메소드가 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="67a60cf03e51978f5cc896a2789a14cf370f1371" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes.</source>
          <target state="translated">&lt;code&gt;setTilingMode&lt;/code&gt; , &lt;code&gt;setProgressiveMode&lt;/code&gt; 또는 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메서드에 전달되어 향후 쓰기를 위해 해당 기능을 활성화 할 수있는 상수 값입니다 .</target>
        </trans-unit>
        <trans-unit id="ee2714f160a481212e68cea2fc3d76b6fb1a8d6a" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes. That is, when this mode is enabled the stream will be tiled, progressive, or compressed based on the contents of stream and/or image metadata passed into the write operation, and any relevant accessor methods will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">향후 쓰기를 위해 해당 기능을 사용하기 위해 &lt;code&gt;setTilingMode&lt;/code&gt; , &lt;code&gt;setProgressiveMode&lt;/code&gt; 또는 &lt;code&gt;setCompressionMode&lt;/code&gt; 와 같은 메소드에 전달 될 수있는 상수 값입니다 . 즉,이 모드가 활성화되면 쓰기 작업으로 전달 된 스트림 및 / 또는 이미지 메타 데이터의 내용을 기반으로 스트림이 바둑판 식, 프로그레시브 또는 압축되며 관련 액세서 메소드가 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="7279f33ba91d89c119cc784b7519e6b9ac4694d5" translate="yes" xml:space="preserve">
          <source>A constructor consumes an extra argument for the object which is being constructed.</source>
          <target state="translated">생성자는 생성중인 객체에 대한 추가 인수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="57902652588e33d2d2877e5267fcd4fb79931dc7" translate="yes" xml:space="preserve">
          <source>A constructor with a single argument of type &lt;code&gt;Comparator&lt;/code&gt;, which creates an empty sorted map sorted according to the specified comparator.</source>
          <target state="translated">&lt;code&gt;Comparator&lt;/code&gt; 유형의 단일 인수를 가진 생성자 . 지정된 비교 자에 따라 정렬 된 빈 정렬 된 맵을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="25c8b9f747c078b778797b44d629f2869067a88a" translate="yes" xml:space="preserve">
          <source>A constructor with a single argument of type &lt;code&gt;Map&lt;/code&gt;, which creates a new map with the same key-value mappings as its argument, sorted according to the keys' natural ordering.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 유형의 단일 인수를 가진 생성자. 인수 와 동일한 키-값 매핑을 사용하여 키의 자연 순서에 따라 정렬 된 새 맵을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e3fc63f43b8fbf5b83832243411d77bf7df6af1f" translate="yes" xml:space="preserve">
          <source>A constructor with a single argument of type &lt;code&gt;SortedMap&lt;/code&gt;, which creates a new sorted map with the same key-value mappings and the same ordering as the input sorted map.</source>
          <target state="translated">&lt;code&gt;SortedMap&lt;/code&gt; 유형의 단일 인수를 가진 생성자. 입력 정렬 맵과 동일한 키-값 맵핑 및 동일한 순서로 새로운 정렬 맵을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="bb2ddb390065f595439cee7ee8032949a41e280e" translate="yes" xml:space="preserve">
          <source>A constructor.</source>
          <target state="translated">생성자</target>
        </trans-unit>
        <trans-unit id="f1c2c74a3242b5c113a78d6363133d53c47f8c7a" translate="yes" xml:space="preserve">
          <source>A container class which implements automatic horizontal and/or vertical scrolling for a single child component.</source>
          <target state="translated">단일 자식 구성 요소에 대해 자동 수평 및 / 또는 수직 스크롤을 구현하는 컨테이너 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="bfeb7ff9e9012b81d288e07e149e676bb15c69a9" translate="yes" xml:space="preserve">
          <source>A container class which implements automatic horizontal and/or vertical scrolling for a single child component. The display policy for the scrollbars can be set to:</source>
          <target state="translated">단일 자식 구성 요소에 대해 자동 수평 및 / 또는 수직 스크롤을 구현하는 컨테이너 클래스입니다. 스크롤바의 표시 정책은 다음과 같이 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="033a41394c724546f3c08acfb5335c17f8e39383" translate="yes" xml:space="preserve">
          <source>A container for data of a specific primitive type.</source>
          <target state="translated">특정 기본 유형의 데이터를위한 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="0fe5ece952a897ad3f011797cc5800337da1ccf1" translate="yes" xml:space="preserve">
          <source>A container is a component that can contain components and other containers. A container can also have a layout manager that controls the visual placement of components in the container. The AWT package contains several layout manager classes and an interface for building your own layout manager. See Container and LayoutManager for more information.</source>
          <target state="translated">컨테이너는 구성 요소 및 기타 컨테이너를 포함 할 수있는 구성 요소입니다. 컨테이너에는 컨테이너에서 구성 요소의 시각적 배치를 제어하는 ​​레이아웃 관리자가있을 수도 있습니다. AWT 패키지에는 여러 레이아웃 관리자 클래스와 자체 레이아웃 관리자를 구축하기위한 인터페이스가 포함되어 있습니다. 자세한 내용은 컨테이너 및 LayoutManager를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d301613cbda6d20a56bf5fe3261d32c8415661bf" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;double&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="2e040a2204bf84dfc907e22c7186ff1dd00d1f3d" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;double&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 개체입니다 . 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 값이 없으면 개체가 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="4ff6f48ffb79030c6e6d4e15b3600b41ee558686" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;double&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;getAsDouble()&lt;/code&gt; will return the value.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 객체입니다 . 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 &lt;code&gt;getAsDouble()&lt;/code&gt; 은 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="494737a0966b7218e4ec36fd115c3df7489bf2ab" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="0a04a3c3154a4d845ca222b91180f4f9964d877d" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;int&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;getAsInt()&lt;/code&gt; will return the value.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 객체입니다 . 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 &lt;code&gt;getAsInt()&lt;/code&gt; 는 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f4dcdc898b7b16e8f53dc7fbd5332c85cd925ef5" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;long&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 객체 .</target>
        </trans-unit>
        <trans-unit id="2e8bc20ff92caf071e1a187b92d99c84b7060ce0" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;long&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 개체입니다 . 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 값이 없으면 개체가 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="7ba6650f4dd8bcb2a89191e9f85ba776ac9fbf51" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;long&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;getAsLong()&lt;/code&gt; will return the value.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 개체입니다 . 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 &lt;code&gt;getAsLong()&lt;/code&gt; 은 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5c434ceb61c7062bc7fbbc566df4838fccea2d8a" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-&lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 이 아닌 값을 포함하거나 포함하지 않을 수있는 컨테이너 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="5ea105fdcda73f70cb854a64b62b86d90652415a" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-&lt;code&gt;null&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 이 아닌 값을 포함하거나 포함하지 않을 수있는 컨테이너 개체입니다 . 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 값이 없으면 개체가 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="ea0d5d0324a2c3445923b7e686fe31c2a89e78f7" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-null value.</source>
          <target state="translated">널이 아닌 값을 포함하거나 포함하지 않을 수있는 컨테이너 오브젝트.</target>
        </trans-unit>
        <trans-unit id="c89988fd4f74ec363ece708cf6ca9597a2151ab0" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-null value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;get()&lt;/code&gt; will return the value.</source>
          <target state="translated">널이 아닌 값을 포함하거나 포함하지 않을 수있는 컨테이너 오브젝트. 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 &lt;code&gt;get()&lt;/code&gt; 은 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8c3f2db677ea0ff39d4e792525d50b18477b99aa" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain an &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="48a83d02c6e3550c5cd54b82f9175944ccf50df2" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain an &lt;code&gt;int&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 값을 포함하거나 포함하지 않을 수있는 컨테이너 개체입니다 . 값이 있으면 &lt;code&gt;isPresent()&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 값이 없으면 개체가 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="b91c8230c80b13f05800d49bab2e18616b06eedc" translate="yes" xml:space="preserve">
          <source>A container used to create a multiple-document interface or a virtual desktop.</source>
          <target state="translated">다중 문서 인터페이스 또는 가상 데스크톱을 만드는 데 사용되는 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="460e235cc5d693c9143dca60521c64fd21d3afb3" translate="yes" xml:space="preserve">
          <source>A container used to create a multiple-document interface or a virtual desktop. You create &lt;code&gt;JInternalFrame&lt;/code&gt; objects and add them to the &lt;code&gt;JDesktopPane&lt;/code&gt;. &lt;code&gt;JDesktopPane&lt;/code&gt; extends &lt;code&gt;JLayeredPane&lt;/code&gt; to manage the potentially overlapping internal frames. It also maintains a reference to an instance of &lt;code&gt;DesktopManager&lt;/code&gt; that is set by the UI class for the current look and feel (L&amp;amp;F). Note that &lt;code&gt;JDesktopPane&lt;/code&gt; does not support borders.</source>
          <target state="translated">다중 문서 인터페이스 또는 가상 데스크톱을 만드는 데 사용되는 컨테이너입니다. &lt;code&gt;JInternalFrame&lt;/code&gt; 객체를 생성 하고 &lt;code&gt;JDesktopPane&lt;/code&gt; 에 추가 합니다 . &lt;code&gt;JDesktopPane&lt;/code&gt; 은 잠재적으로 겹치는 내부 프레임을 관리하기 위해 &lt;code&gt;JLayeredPane&lt;/code&gt; 을 확장 합니다 . 또한 현재 룩앤필 (L &amp;amp; F)에 대해 UI 클래스에서 설정 한 &lt;code&gt;DesktopManager&lt;/code&gt; 인스턴스에 대한 참조도 유지합니다 . 참고 &lt;code&gt;JDesktopPane&lt;/code&gt; 에이 국경을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="759245797f4e5d9025f0f817bf669b092afd8bdd" translate="yes" xml:space="preserve">
          <source>A content type consists of a media type (referred to as the primary type), a subtype, and optional parameters. See &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt; for details on the syntax of a MIME type.</source>
          <target state="translated">콘텐츠 유형은 미디어 유형 (기본 유형이라고 함), 하위 유형 및 선택적 매개 변수로 구성됩니다. MIME 유형의 구문에 대한 자세한 내용 은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a07a9ca02d8838c9aabcd8e92f5e7d4ef3600e1d" translate="yes" xml:space="preserve">
          <source>A content type consists of a media type (referred to as the primary type), a subtype, and optional parameters. See &lt;a href=&quot;https://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt; for details on the syntax of a MIME type.</source>
          <target state="translated">콘텐츠 유형은 미디어 유형 (기본 유형이라고 함), 하위 유형 및 선택적 매개 변수로 구성됩니다. MIME 유형의 구문에 대한 자세한 내용 은 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="31d867731596f79566c79cb5d48b9bcbf97a9cc3" translate="yes" xml:space="preserve">
          <source>A context consists of name-to-object bindings. The Binding class represents such a binding. It consists of a name and an object. The &lt;code&gt;Context.listBindings()&lt;/code&gt; method returns an enumeration of Binding.</source>
          <target state="translated">컨텍스트는 이름 대 오브젝트 바인딩으로 구성됩니다. Binding 클래스는 이러한 바인딩을 나타냅니다. 이름과 객체로 구성됩니다. &lt;code&gt;Context.listBindings()&lt;/code&gt; 메소드는 바인딩의 열거를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="6fe4f651e32a551af03604ca60b8a21ff254ecfc" translate="yes" xml:space="preserve">
          <source>A context consists of name-to-object bindings. The NameClassPair class represents the name and the class of the bound object. It consists of a name and a string representing the package-qualified class name.</source>
          <target state="translated">컨텍스트는 이름 대 오브젝트 바인딩으로 구성됩니다. NameClassPair 클래스는 바인딩 된 개체의 이름과 클래스를 나타냅니다. 패키지 규정 된 클래스 이름을 나타내는 이름과 문자열로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="6b1263a6521cddb7203c713b91d8a90e7ac7f9e3" translate="yes" xml:space="preserve">
          <source>A context for resolving URLs with the scheme id &lt;code&gt;scheme&lt;/code&gt;; &lt;code&gt;null&lt;/code&gt; if the factory for creating the context is not found.</source>
          <target state="translated">계획 아이디와 URL을 해결하는 문맥 &lt;code&gt;scheme&lt;/code&gt; ; 컨텍스트를 작성하는 팩토리를 찾을 수 &lt;code&gt;null&lt;/code&gt; 경우는 null</target>
        </trans-unit>
        <trans-unit id="b7377c77308502e8c96858c12fe1aaf5cda4abe1" translate="yes" xml:space="preserve">
          <source>A context instance's connection request controls are retrieved using the method &lt;code&gt;getConnectControls()&lt;/code&gt;.</source>
          <target state="translated">컨텍스트 인스턴스의 연결 요청 제어는 &lt;code&gt;getConnectControls()&lt;/code&gt; 메소드를 사용하여 검색됩니다 .</target>
        </trans-unit>
        <trans-unit id="7dcb16da6df7e43ac4ec30b2d1186f29508041d6" translate="yes" xml:space="preserve">
          <source>A context instance's request controls are retrieved using the method &lt;code&gt;getRequestControls()&lt;/code&gt;.</source>
          <target state="translated">컨텍스트 인스턴스의 요청 제어는 &lt;code&gt;getRequestControls()&lt;/code&gt; 메소드를 사용하여 검색됩니다 .</target>
        </trans-unit>
        <trans-unit id="b3986a2d2458e187acf1c4e8bd0f8e686f85ea03" translate="yes" xml:space="preserve">
          <source>A control character: &lt;code&gt;[\x00-\x1F\x7F]&lt;/code&gt;</source>
          <target state="translated">제어 문자 : &lt;code&gt;[\x00-\x1F\x7F]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f98f93af0f8e1282f6442fa10efae582e9be0974" translate="yes" xml:space="preserve">
          <source>A control character: &lt;code&gt;\p{gc=Cc}&lt;/code&gt;</source>
          <target state="translated">제어 문자 : &lt;code&gt;\p{gc=Cc}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03f0ef9add23fa9fe6cf9ea49f54ef4dd6fddc66" translate="yes" xml:space="preserve">
          <source>A control object created using &lt;code&gt;ctl&lt;/code&gt;; or &lt;code&gt;ctl&lt;/code&gt; if a control object cannot be created using the algorithm described above.</source>
          <target state="translated">&lt;code&gt;ctl&lt;/code&gt; 을 사용하여 생성 된 컨트롤 개체 ; 또는 위에서 설명한 알고리즘을 사용하여 컨트롤 개체를 만들 수없는 경우 &lt;code&gt;ctl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15fd2bad66ad41394b33f2026df97fb9742abb62" translate="yes" xml:space="preserve">
          <source>A control object from the current input method, or null.</source>
          <target state="translated">현재 입력 방법의 컨트롤 개체 또는 null입니다.</target>
        </trans-unit>
        <trans-unit id="a96bcedbc8cade8ee1583d1bef494bb5a4cd2784" translate="yes" xml:space="preserve">
          <source>A control that displays a set of hierarchical data as an outline.</source>
          <target state="translated">계층 적 데이터 집합을 개요로 표시하는 컨트롤입니다.</target>
        </trans-unit>
        <trans-unit id="c4e331080c956ba6b483e5d9420bef3aff651730" translate="yes" xml:space="preserve">
          <source>A control that displays a set of hierarchical data as an outline. You can find task-oriented documentation and examples of using trees in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">계층 적 데이터 집합을 개요로 표시하는 컨트롤입니다. &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; 에서 작업 지향 문서와 트리 사용 예제를 찾을 수 있습니다 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59a3b7894251564f988b6e5f53616b037746cc9f" translate="yes" xml:space="preserve">
          <source>A control that displays a set of hierarchical data as an outline. You can find task-oriented documentation and examples of using trees in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">계층 적 데이터 집합을 개요로 표시하는 컨트롤입니다. &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; 에서 작업 지향 문서와 트리 사용 예제를 찾을 수 있습니다 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c76468063f6a347a02b2e829bca94d83e038db4" translate="yes" xml:space="preserve">
          <source>A controller that controls the newly created layer</source>
          <target state="translated">새로 생성 된 레이어를 제어하는 ​​컨트롤러</target>
        </trans-unit>
        <trans-unit id="e8b5bb1e0993770f9414abaef919d2a5802810a9" translate="yes" xml:space="preserve">
          <source>A convenience class for simplifying interaction with TIFF native image metadata.</source>
          <target state="translated">TIFF 기본 이미지 메타 데이터와의 상호 작용을 단순화하기위한 편의 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="1a75c57f730d220aff1a3d906e24e8f446b9eb34" translate="yes" xml:space="preserve">
          <source>A convenience class for simplifying interaction with TIFF native image metadata. A TIFF image metadata tree represents an Image File Directory (IFD) from a TIFF 6.0 stream. An IFD consists of a number of IFD Entries each of which associates an identifying tag number with a compatible value. A &lt;code&gt;TIFFDirectory&lt;/code&gt; instance corresponds to an IFD and contains a set of &lt;a href=&quot;tifffield&quot;&gt;&lt;code&gt;TIFFField&lt;/code&gt;&lt;/a&gt;s each of which corresponds to an IFD Entry in the IFD.</source>
          <target state="translated">TIFF 기본 이미지 메타 데이터와의 상호 작용을 단순화하기위한 편의 클래스입니다. TIFF 이미지 메타 데이터 트리는 TIFF 6.0 스트림의 IDF (Image File Directory)를 나타냅니다. IFD는 각각 식별 태그 번호를 호환 가능한 값과 연관시키는 여러 IFD 항목으로 구성됩니다. &lt;code&gt;TIFFDirectory&lt;/code&gt; 의 인스턴스기로 IFD에 대응하고, 세트 포함 &lt;a href=&quot;tifffield&quot;&gt; &lt;code&gt;TIFFField&lt;/code&gt; 는&lt;/a&gt; IFD에서 IFD 항목에 대응하는 각각의 S는.</target>
        </trans-unit>
        <trans-unit id="f8a647654bd9827401aa4fa86ac7705f850e64b2" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;v.visit(av, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;v.visit(av, null)&lt;/code&gt; 동일한 편의 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="16a529aa63d7b6f13c0e894161babc3d250fb7d3" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;v.visit(e, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;v.visit(e, null)&lt;/code&gt; 동일한 편의 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="ebffac1d76e29602ecbccd02cb486db670466a22" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;v.visit(t, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;v.visit(t, null)&lt;/code&gt; 동일한 편의 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="c7e2bb4b27f4ec5751c6bdc3e1a96d4fc5026a5b" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;visit(av, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;visit(av, null)&lt;/code&gt; 해당하는 편리한 메서드 입니다.</target>
        </trans-unit>
        <trans-unit id="e027c55d6f63aefa9109af389bfa002788c9fa27" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;visit(e, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;visit(e, null)&lt;/code&gt; 해당하는 편리한 메서드 입니다.</target>
        </trans-unit>
        <trans-unit id="f950fa78fa10c16997c1f6fbd3be463e7b7ace85" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;visit(t, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;visit(t, null)&lt;/code&gt; 해당하는 편리한 메서드 입니다.</target>
        </trans-unit>
        <trans-unit id="99b2a2e379217d8a0d4b8ef3dd5abf7e7a7ebf16" translate="yes" xml:space="preserve">
          <source>A convenience method for looking up a property value.</source>
          <target state="translated">속성 값을 조회하는 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="cbc44c2a4d64a62243581006ccd8548476d7bd75" translate="yes" xml:space="preserve">
          <source>A convenience method for looking up a property value. It is equivalent to:</source>
          <target state="translated">속성 값을 조회하는 편리한 방법입니다. 다음과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="dd485d4e5579dedc9b9b1bfb030340f3998e0248" translate="yes" xml:space="preserve">
          <source>A convenience method for storing up a property value.</source>
          <target state="translated">속성 값을 저장하는 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="1e18895b1e56a88f711cf08b63e41a03fe2225fc" translate="yes" xml:space="preserve">
          <source>A convenience method for storing up a property value. It is equivalent to:</source>
          <target state="translated">속성 값을 저장하는 편리한 방법입니다. 다음과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="54ae1ece57ee9ffdae9f1667cbe9a12df084c4eb" translate="yes" xml:space="preserve">
          <source>A convenience method that acts as if &lt;code&gt;LSSerializer.write&lt;/code&gt; was called with a &lt;code&gt;LSOutput&lt;/code&gt; with no encoding specified and &lt;code&gt;LSOutput.systemId&lt;/code&gt; set to the &lt;code&gt;uri&lt;/code&gt; argument.</source>
          <target state="translated">인코딩이 지정되지 않고 &lt;code&gt;LSOutput.systemId&lt;/code&gt; 가 &lt;code&gt;uri&lt;/code&gt; 인수로 설정된 &lt;code&gt;LSOutput&lt;/code&gt; 을 사용하여 &lt;code&gt;LSSerializer.write&lt;/code&gt; 가 호출 된 것처럼 작동하는 편리한 메서드입니다 .</target>
        </trans-unit>
        <trans-unit id="7c27733947ef3a444f59481b63f3bb1fc034a487" translate="yes" xml:space="preserve">
          <source>A convenience method that calls &lt;code&gt;read(b, 0, b.length)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;read(b, 0, b.length)&lt;/code&gt; 를 호출하는 편리한 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="807e70668dbaedff20cf9b8a517a79a6404816d3" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in mode &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt;, with no header or footer text.</source>
          <target state="translated">인쇄 대화 상자를 표시 한 다음 머리글 또는 바닥 글 텍스트없이 &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt; 모드 에서이 &lt;code&gt;JTable&lt;/code&gt; 을 인쇄하는 편리한 메서드입니다 .</target>
        </trans-unit>
        <trans-unit id="ceedfd41667c1bda072569a382c479a19e63d68e" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in mode &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt;, with no header or footer text. A modal progress dialog, with an abort option, will be shown for the duration of printing.</source>
          <target state="translated">인쇄 대화 상자를 표시 한 다음 머리글 또는 바닥 글 텍스트없이 &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt; 모드 에서이 &lt;code&gt;JTable&lt;/code&gt; 을 인쇄하는 편리한 메서드입니다 . 중단 옵션이있는 모달 진행 대화 상자가 인쇄 기간 동안 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6223c755bd1a3f99a9d9956cc7466b6caf4b3fcb" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with no header or footer text.</source>
          <target state="translated">인쇄 대화 상자를 표시 한 다음 머리글 또는 바닥 글 텍스트없이 지정된 인쇄 모드 에서이 &lt;code&gt;JTable&lt;/code&gt; 을 인쇄하는 편리한 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="877633eadeea377c10e3fbe8b2d649f1bd5706e3" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with no header or footer text. A modal progress dialog, with an abort option, will be shown for the duration of printing.</source>
          <target state="translated">인쇄 대화 상자를 표시 한 다음 머리글 또는 바닥 글 텍스트없이 지정된 인쇄 모드 에서이 &lt;code&gt;JTable&lt;/code&gt; 을 인쇄하는 편리한 방법입니다 . 중단 옵션이있는 모달 진행 대화 상자가 인쇄 기간 동안 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ecfe982eaffed33abd7f4d8a496ed6b0dcae69c5" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with the specified header and footer text.</source>
          <target state="translated">인쇄 대화 상자를 표시 한 다음 지정된 머리글 및 바닥 글 텍스트와 함께 지정된 인쇄 모드 에서이 &lt;code&gt;JTable&lt;/code&gt; 을 인쇄하는 편리한 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="797ddd61d31da4855ab5fb584acf4b15d2543b26" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with the specified header and footer text. A modal progress dialog, with an abort option, will be shown for the duration of printing.</source>
          <target state="translated">인쇄 대화 상자를 표시 한 다음 지정된 머리글 및 바닥 글 텍스트와 함께 지정된 인쇄 모드 에서이 &lt;code&gt;JTable&lt;/code&gt; 을 인쇄하는 편리한 방법입니다 . 중단 옵션이있는 모달 진행 대화 상자가 인쇄 기간 동안 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="283a99263b3a7a4ec3eb5efe9c38b580f6c5ced4" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a byte.</source>
          <target state="translated">매개 변수를 바이트로 리턴하는 편리한 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="28c9fbd2ef30bbeae2eb3befcc763aba1fa2e0eb" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a byte. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Byte&lt;/code&gt;.</source>
          <target state="translated">매개 변수를 바이트로 리턴하는 편리한 메소드입니다. 매개 변수가 &lt;code&gt;null&lt;/code&gt; 이거나 &lt;code&gt;Byte&lt;/code&gt; 가 아닌 경우 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="ebd384ff0ca5f30a5e0a8c9ad6731c18938a2de7" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a char.</source>
          <target state="translated">매개 변수를 문자로 리턴하는 편리한 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="943c460c5961c35f10136d79eecd64420524f821" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a char. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Character&lt;/code&gt;.</source>
          <target state="translated">매개 변수를 문자로 리턴하는 편리한 메소드입니다. 매개 변수가 &lt;code&gt;null&lt;/code&gt; 이거나 &lt;code&gt;Character&lt;/code&gt; 가 아닌 경우 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="9299b862be9cb5f48ba998965def8a106f265b48" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a double.</source>
          <target state="translated">매개 변수를 double로 반환하는 편리한 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="0a4928bb86282825c0d0349c047c0c7f91b12e57" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a double. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Double&lt;/code&gt;.</source>
          <target state="translated">매개 변수를 double로 반환하는 편리한 메서드입니다. 매개 변수가 &lt;code&gt;null&lt;/code&gt; 이거나 &lt;code&gt;Double&lt;/code&gt; 이 아닌 경우 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="7d714cdbfd4c754d4cfadc5e295c8e601f417c1d" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a float.</source>
          <target state="translated">매개 변수를 부동 소수점으로 반환하는 편리한 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="6b8f4bcda4d37d4b73d947a9674d1b53d644b757" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a float. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Float&lt;/code&gt;.</source>
          <target state="translated">매개 변수를 부동 소수점으로 반환하는 편리한 메서드입니다. 매개 변수가 &lt;code&gt;null&lt;/code&gt; 이거나 &lt;code&gt;Float&lt;/code&gt; 가 아닌 경우 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="5d3c86fa44ad2b33e64227671b292e4b240c5a5d" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a long.</source>
          <target state="translated">매개 변수를 long으로 반환하는 편리한 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="43bc7bfca54e042222983f9e48f68745a5dfbb77" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a long. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Long&lt;/code&gt;.</source>
          <target state="translated">매개 변수를 long으로 반환하는 편리한 메서드입니다. 매개 변수가 &lt;code&gt;null&lt;/code&gt; 이거나 &lt;code&gt;Long&lt;/code&gt; 이 아닌 경우 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="184db79e285fbcabdf3665ef62914ed4d5295fd1" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a short.</source>
          <target state="translated">매개 변수를 short로 리턴하는 편리한 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="1b4b1ce8266727e88ff4a4a2856fea1a2e381801" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a short. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Short&lt;/code&gt;.</source>
          <target state="translated">매개 변수를 short로 리턴하는 편리한 메소드입니다. 매개 변수가 &lt;code&gt;null&lt;/code&gt; 이거나 &lt;code&gt;Short&lt;/code&gt; 가 아닌 경우 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="48b5cd060eef9c2b39dca326ba801f578061c0e4" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as an int.</source>
          <target state="translated">매개 변수를 정수로 리턴하는 편리한 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="532f65b1b7e14711268e9c70a498ade80cd68042" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as an int. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not an &lt;code&gt;Integer&lt;/code&gt;.</source>
          <target state="translated">매개 변수를 정수로 리턴하는 편리한 메소드입니다. 매개 변수가 &lt;code&gt;null&lt;/code&gt; 이거나 &lt;code&gt;Integer&lt;/code&gt; 가 아닌 경우 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="d111cbd6b41c2ec780244806b0efcc6e09e34206" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's execute permission for this abstract pathname.</source>
          <target state="translated">이 추상 경로 이름에 대한 소유자의 실행 권한을 설정하는 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="b79d96520d2a2823d7650d8196b0afa730e7bde5" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's execute permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to execute files that are not marked executable.</source>
          <target state="translated">이 추상 경로명에 대한 소유자의 실행 권한을 설정하는 편리한 방법입니다. 일부 플랫폼에서는 실행 가능으로 표시되지 않은 파일을 실행할 수있는 특수 권한으로 Java 가상 머신을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c5f74355de733dd0c77f822b18ab1093d5053f8" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's read permission for this abstract pathname.</source>
          <target state="translated">이 추상 경로 이름에 대한 소유자의 읽기 권한을 설정하는 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="c61e898f162a2725342347bb011438457029df56" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's read permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to read files that are marked as unreadable.</source>
          <target state="translated">이 추상 경로 이름에 대한 소유자의 읽기 권한을 설정하는 편리한 방법입니다. 일부 플랫폼에서는 읽을 수없는 것으로 표시된 파일을 읽을 수있는 특수 권한으로 JVM (Java Virtual Machine)을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8522c8eecf8c188ae3f5c7af8d515d84ecf53638" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's read permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to read files that that are marked as unreadable.</source>
          <target state="translated">이 추상 경로명에 대한 소유자의 읽기 권한을 설정하는 편리한 방법입니다. 일부 플랫폼에서는 읽을 수없는 것으로 표시된 파일을 읽을 수있는 특수 권한으로 Java 가상 머신을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ccae16f4c65f4ffb387b6a92877cb7bdde73741" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's write permission for this abstract pathname.</source>
          <target state="translated">이 추상 경로 이름에 대한 소유자의 쓰기 권한을 설정하는 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="70adbfa143948dbfbe2a2079d23a3c700d25e391" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's write permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to modify files that disallow write operations.</source>
          <target state="translated">이 추상 경로명에 대한 소유자의 쓰기 권한을 설정하는 편리한 방법입니다. 일부 플랫폼에서는 쓰기 조작을 허용하지 않는 파일을 수정할 수있는 특수 권한으로 Java 가상 머신을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8390e30450358a6ea70064ba0435f38800aed856" translate="yes" xml:space="preserve">
          <source>A convenience method to write a formatted string to this console's output stream using the specified format string and arguments.</source>
          <target state="translated">지정된 형식 문자열과 인수를 사용하여 형식화 된 문자열을이 콘솔의 출력 스트림에 쓰는 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="f3a608167c200beb78de0abed90f0e9a8f45921d" translate="yes" xml:space="preserve">
          <source>A convenience method to write a formatted string to this output stream using the specified format string and arguments.</source>
          <target state="translated">지정된 형식 문자열과 인수를 사용하여 형식화 된 문자열을이 출력 스트림에 쓰는 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="057f452c5522dff43c52c19081fba580e4096f04" translate="yes" xml:space="preserve">
          <source>A convenience method to write a formatted string to this writer using the specified format string and arguments.</source>
          <target state="translated">지정된 형식 문자열 및 인수를 사용하여 형식화 된 문자열을이 작성기에 쓰는 편리한 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="8cf3d0db1f2e456a656fc16b71edb621d58b8d0c" translate="yes" xml:space="preserve">
          <source>A convenience method to write a formatted string to this writer using the specified format string and arguments. If automatic flushing is enabled, calls to this method will flush the output buffer.</source>
          <target state="translated">지정된 형식 문자열과 인수를 사용하여이 기록기에 형식화 된 문자열을 작성하는 편리한 방법입니다. 자동 플러시가 활성화 된 경우이 메서드를 호출하면 출력 버퍼가 플러시됩니다.</target>
        </trans-unit>
        <trans-unit id="e712b86666e15790d81bace0d8ef4d573f4eea97" translate="yes" xml:space="preserve">
          <source>A convenience method which displays a cross-platform page setup dialog.</source>
          <target state="translated">크로스 플랫폼 페이지 설정 대화 상자를 표시하는 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="60d87dcf83ee6f1ac872e3217d721c3ca77b0d27" translate="yes" xml:space="preserve">
          <source>A convenience method which displays a cross-platform page setup dialog. The choices available will reflect the print service currently set on this PrinterJob.</source>
          <target state="translated">크로스 플랫폼 페이지 설정 대화 상자를 표시하는 편리한 방법입니다. 사용 가능한 선택 항목은이 PrinterJob에 현재 설정된 인쇄 서비스를 반영합니다.</target>
        </trans-unit>
        <trans-unit id="98a09ce2aa2369702097696923a831c4f66ccf72" translate="yes" xml:space="preserve">
          <source>A convenience method which displays a cross-platform print dialog for all services which are capable of printing 2D graphics using the &lt;code&gt;Pageable&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;Pageable&lt;/code&gt; 인터페이스를 사용하여 2D 그래픽을 인쇄 할 수있는 모든 서비스에 대한 크로스 플랫폼 인쇄 대화 상자를 표시하는 편리한 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="2fcfb06ab6fe3bd2ebd0ab4931beb49dc7099e60" translate="yes" xml:space="preserve">
          <source>A convenience method which displays a cross-platform print dialog for all services which are capable of printing 2D graphics using the &lt;code&gt;Pageable&lt;/code&gt; interface. The selected printer when the dialog is initially displayed will reflect the print service currently attached to this print job. If the user changes the print service, the PrinterJob will be updated to reflect this, unless the user cancels the dialog. As well as allowing the user to select the destination printer, the user can also select values of various print request attributes.</source>
          <target state="translated">&lt;code&gt;Pageable&lt;/code&gt; 인터페이스를 사용하여 2D 그래픽을 인쇄 할 수있는 모든 서비스에 대한 크로스 플랫폼 인쇄 대화 상자를 표시하는 편리한 방법입니다 . 대화 상자가 처음 표시 될 때 선택한 프린터는 현재이 인쇄 작업에 연결된 인쇄 서비스를 반영합니다. 사용자가 인쇄 서비스를 변경하면 사용자가 대화 상자를 취소하지 않는 한이를 반영하도록 PrinterJob이 업데이트됩니다. 사용자가 대상 프린터를 선택할 수있을뿐만 아니라 다양한 인쇄 요청 속성의 값을 선택할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc3c50b2d142242dac51d5fcf3d231fce606de43" translate="yes" xml:space="preserve">
          <source>A convenience method which locates factories for stream print services which can image 2D graphics.</source>
          <target state="translated">2D 그래픽을 이미지화 할 수있는 스트림 인쇄 서비스를위한 공장을 찾는 편리한 방법.</target>
        </trans-unit>
        <trans-unit id="d447e3392051f85c24ed40199bf6fe4c3e94a3c3" translate="yes" xml:space="preserve">
          <source>A convenience method which locates factories for stream print services which can image 2D graphics. Sample usage :</source>
          <target state="translated">2D 그래픽을 이미지화 할 수있는 스트림 인쇄 서비스를위한 공장을 찾는 편리한 방법. 샘플 사용법 :</target>
        </trans-unit>
        <trans-unit id="672d84b5e5ba08b84c1c7afb2749463b7f8e63db" translate="yes" xml:space="preserve">
          <source>A convenience method which looks up 2D print services.</source>
          <target state="translated">2D 인쇄 서비스를 조회하는 편리한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="cb4aa5666c349dbc23740d5c5e9867260211490c" translate="yes" xml:space="preserve">
          <source>A convenience method which looks up 2D print services. Services returned from this method may be installed on &lt;code&gt;PrinterJob&lt;/code&gt;s which support print services. Calling this method is equivalent to calling &lt;a href=&quot;../../../javax/print/printservicelookup#lookupPrintServices(javax.print.DocFlavor,javax.print.attribute.AttributeSet)&quot;&gt;&lt;code&gt;PrintServiceLookup.lookupPrintServices()&lt;/code&gt;&lt;/a&gt; and specifying a Pageable DocFlavor.</source>
          <target state="translated">2D 인쇄 서비스를 조회하는 편리한 방법입니다. 이 메서드에서 반환 된 서비스는 인쇄 서비스를 지원 하는 &lt;code&gt;PrinterJob&lt;/code&gt; 에 설치 될 수 있습니다 . 이 메서드를 호출하는 것은 &lt;a href=&quot;../../../javax/print/printservicelookup#lookupPrintServices(javax.print.DocFlavor,javax.print.attribute.AttributeSet)&quot;&gt; &lt;code&gt;PrintServiceLookup.lookupPrintServices()&lt;/code&gt; &lt;/a&gt; 를 호출 하고 Pageable DocFlavor를 지정하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="66abb527922f743b62aa7e70858db1aa029ed263" translate="yes" xml:space="preserve">
          <source>A convenience print method that displays a print dialog, and then prints this &lt;code&gt;JTextComponent&lt;/code&gt; in</source>
          <target state="translated">다음이 인쇄 표시 인쇄 대화 상자 및 간이 인쇄 방법 &lt;code&gt;JTextComponent&lt;/code&gt; 의를 에</target>
        </trans-unit>
        <trans-unit id="64bde2928b505165975e0f37a6c2cda5a9820208" translate="yes" xml:space="preserve">
          <source>A convenient shortcut for locating elements is the method &lt;a href=&quot;#getElement(java.lang.String)&quot;&gt;&lt;code&gt;getElement(String)&lt;/code&gt;&lt;/a&gt;; returns an element whose &lt;code&gt;ID&lt;/code&gt; attribute matches the specified value. For example, &lt;code&gt;d.getElement(&quot;BOX&quot;)&lt;/code&gt; returns the &lt;code&gt;DIV&lt;/code&gt; element.</source>
          <target state="translated">요소를 찾는 편리한 지름길은 &lt;a href=&quot;#getElement(java.lang.String)&quot;&gt; &lt;code&gt;getElement(String)&lt;/code&gt; &lt;/a&gt; 메소드입니다 . &lt;code&gt;ID&lt;/code&gt; 속성이 지정된 값과 일치 하는 요소를 반환합니다 . 예를 들어 &lt;code&gt;d.getElement(&quot;BOX&quot;)&lt;/code&gt; 는 &lt;code&gt;DIV&lt;/code&gt; 요소를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3a1a8039aac719e599728c0c27428d151c53c8d8" translate="yes" xml:space="preserve">
          <source>A cookie to store may or may not be associated with an URI. If it is not associated with an URI, the cookie's domain and path attribute will indicate where it comes from. If it is associated with an URI and its domain and path attribute are not specified, given URI will indicate where this cookie comes from.</source>
          <target state="translated">저장할 쿠키는 URI와 연관되거나 연관되지 않을 수 있습니다. 쿠키가 URI와 연결되어 있지 않으면 쿠키의 도메인 및 경로 속성이 쿠키의 출처를 나타냅니다. URI와 연관되고 해당 도메인 및 경로 속성이 지정되지 않은 경우 제공된 URI는이 쿠키의 출처를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6ed2cdafa04c759296cf982bd9190b629e1e1a1f" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;name&lt;/code&gt; is made and stored. Subsequent changes to &lt;code&gt;name&lt;/code&gt; do not affect the copy in this NamingException and vice versa.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 의 사본 이 만들어지고 저장됩니다. 이후의 &lt;code&gt;name&lt;/code&gt; 변경 은이 NamingException의 사본에 영향을주지 않으며 그 반대의 경우도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="847e6f4959462c58ea8ac27a4387b6518797a9bd" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;name&lt;/code&gt; is made and stored. Subsequent changes to &lt;code&gt;name&lt;/code&gt; does not affect the copy in this NamingException and vice versa.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 의 사본 이 만들어져 저장됩니다. 이후의 &lt;code&gt;name&lt;/code&gt; 변경 은이 NamingException의 사본에 영향을 미치지 않으며 그 반대도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="2014e4f257019657ca846cfb69be1eedec61a26e" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;newName&lt;/code&gt; is made and stored. Subsequent changes to &lt;code&gt;name&lt;/code&gt; does not affect the copy in this NamingException and vice versa.</source>
          <target state="translated">&lt;code&gt;newName&lt;/code&gt; 의 사본 이 작성되어 저장됩니다. 이후의 &lt;code&gt;name&lt;/code&gt; 변경 은이 NamingException의 사본에 영향을 미치지 않으며 그 반대도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="d405432971fb5d5bd4d9655c00ba110cf9164761" translate="yes" xml:space="preserve">
          <source>A copy of the certificates array, or null if there is none.</source>
          <target state="translated">증명서 배열의 카피. 존재하지 않는 경우는 null</target>
        </trans-unit>
        <trans-unit id="2c53b1d71e76fb7f9999eb4ea68630428eca0196" translate="yes" xml:space="preserve">
          <source>A copy of the code signer array, or null if there is none.</source>
          <target state="translated">코드 서명자 배열의 사본. 존재하지 않는 경우는 null</target>
        </trans-unit>
        <trans-unit id="d12b5b76ae33b8ff518231f4bdf080025e7d1ecc" translate="yes" xml:space="preserve">
          <source>A copy of the current quantization table.</source>
          <target state="translated">현재 양자화 테이블의 사본.</target>
        </trans-unit>
        <trans-unit id="39726b352731b62ca6b918622ee3ca622b5b8a86" translate="yes" xml:space="preserve">
          <source>A copy of the date or null if the identifier is not mapped to any timer notification registered for this timer MBean.</source>
          <target state="translated">날짜의 카피. 식별자가이 타이머 MBean에 등록 된 타이머 통지에 맵되어 있지 않은 경우는 null</target>
        </trans-unit>
        <trans-unit id="95671ff38df1ecf38192edcde87daa005a34113e" translate="yes" xml:space="preserve">
          <source>A copy of the flag indicating whether a periodic notification is executed at</source>
          <target state="translated">정기 알림의 실행 여부를 나타내는 플래그 사본</target>
        </trans-unit>
        <trans-unit id="2d2d2301896bb87bf4110f7f9035139f0077d8a5" translate="yes" xml:space="preserve">
          <source>A copy of the period or null if the identifier is not mapped to any timer notification registered for this timer MBean.</source>
          <target state="translated">마침표의 복사본. 식별자가이 타이머 MBean에 등록 된 타이머 통지에 매핑되어 있지 않은 경우는 null</target>
        </trans-unit>
        <trans-unit id="7162e1527ed5572f6cb24373b5f74999ffaf9db9" translate="yes" xml:space="preserve">
          <source>A copy of the remaining number of occurrences or null if the identifier is not mapped to any timer notification registered for this timer MBean.</source>
          <target state="translated">남아있는 발생 횟수의 사본. 또는 식별자가이 타이머 MBean에 등록 된 타이머 통지에 맵핑되지 않은 경우 널입니다.</target>
        </trans-unit>
        <trans-unit id="50876ec5fa35a1c18223c83324392c638b888998" translate="yes" xml:space="preserve">
          <source>A copy of the set of output properties in effect for the next transformation.</source>
          <target state="translated">다음 변환에 적용되는 출력 속성 집합의 복사본입니다.</target>
        </trans-unit>
        <trans-unit id="67421ae13fd23f4c24e8887b04d367966e5e8324" translate="yes" xml:space="preserve">
          <source>A copy of the specified enum set.</source>
          <target state="translated">지정된 열거 세트의 사본</target>
        </trans-unit>
        <trans-unit id="df7838b154197b11591455e756b04860d754eddc" translate="yes" xml:space="preserve">
          <source>A copy of the this LDAP name.</source>
          <target state="translated">이 LDAP 이름의 사본</target>
        </trans-unit>
        <trans-unit id="ef57a052b407fe7cec8a98762eedf987fe6eb85f" translate="yes" xml:space="preserve">
          <source>A copy of this</source>
          <target state="translated">이것의 사본</target>
        </trans-unit>
        <trans-unit id="f05780f73bdf8cfeaf60a3f5d18215bea1164a3c" translate="yes" xml:space="preserve">
          <source>A corner component will only be visible if there is an empty space in that corner for it to exist in. For example, consider a component set into the top right corner of a scroll pane with a column header. If the scroll pane's vertical scrollbar is not present, perhaps because the view component hasn't grown large enough to require it, then the corner component will not be shown (since there is no empty space in that corner created by the meeting of the header and vertical scroll bar). Forcing the scroll bar to always be shown, using &lt;code&gt;setVerticalScrollBarPolicy(VERTICAL_SCROLLBAR_ALWAYS)&lt;/code&gt;, will ensure that the space for the corner component always exists.</source>
          <target state="translated">모서리 구성 요소는 해당 모서리에 존재하는 빈 공간이있는 경우에만 표시됩니다. 예를 들어 열 머리글이있는 스크롤 창의 오른쪽 상단 모서리에 구성 요소가 설정되어 있다고 가정합니다. 스크롤 창의 세로 스크롤 막대가없는 경우, 아마도 뷰 구성 요소가 필요로 할만큼 커지지 않았기 때문에 모서리 구성 요소가 표시되지 않을 것입니다 (헤더 회의에 의해 생성 된 해당 모서리에 빈 공간이 없기 때문). 및 수직 스크롤 막대). &lt;code&gt;setVerticalScrollBarPolicy(VERTICAL_SCROLLBAR_ALWAYS)&lt;/code&gt; 사용하여 스크롤 막대가 항상 표시되도록 강제하면 모서리 구성 요소의 공간이 항상 존재합니다.</target>
        </trans-unit>
        <trans-unit id="006ad8eae957fdfb71c138d6dee58128135c8d4f" translate="yes" xml:space="preserve">
          <source>A correct &lt;code&gt;ListSelectionModel&lt;/code&gt; implementation notifies the set of &lt;code&gt;javax.swing.event.ListSelectionListener&lt;/code&gt;s that have been added to it each time a change to the selection occurs. These changes are characterized by a &lt;code&gt;javax.swing.event.ListSelectionEvent&lt;/code&gt;, which identifies the range of the selection change.</source>
          <target state="translated">올바른 &lt;code&gt;ListSelectionModel&lt;/code&gt; 구현 은 선택이 변경 될 때마다 추가 된 &lt;code&gt;javax.swing.event.ListSelectionListener&lt;/code&gt; 세트에 알립니다 . 이러한 변경 사항은 선택 변경 범위를 식별 하는 &lt;code&gt;javax.swing.event.ListSelectionEvent&lt;/code&gt; 특징 입니다.</target>
        </trans-unit>
        <trans-unit id="45b413993b1520d780fb987e3d90b52cd11ab28e" translate="yes" xml:space="preserve">
          <source>A correct way to write the addSource function is to clone the source Vector:</source>
          <target state="translated">addSource 함수를 작성하는 올바른 방법은 소스 Vector를 복제하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="bfe0b7d026c71e8963a98d7d535863e14aaad2cb" translate="yes" xml:space="preserve">
          <source>A counter monitor sends a &lt;a href=&quot;monitornotification#THRESHOLD_VALUE_EXCEEDED&quot;&gt;&lt;code&gt;threshold
 notification&lt;/code&gt;&lt;/a&gt; when the value of the counter reaches or exceeds a threshold known as the comparison level. The notify flag must be set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">카운터 모니터는 카운터 값이 비교 수준으로 알려진 임계 값에 도달하거나 초과 할 때 &lt;a href=&quot;monitornotification#THRESHOLD_VALUE_EXCEEDED&quot;&gt; &lt;code&gt;threshold notification&lt;/code&gt; &lt;/a&gt; 보냅니다 . 알림 플래그는 &lt;code&gt;true&lt;/code&gt; 로 설정해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="e5aa116cd195f41d88b93e7e05e33512e16c94f4" translate="yes" xml:space="preserve">
          <source>A counting semaphore.</source>
          <target state="translated">세마포를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="5f0f0f0344e5f8679592b34bede9e77639210058" translate="yes" xml:space="preserve">
          <source>A counting semaphore. Conceptually, a semaphore maintains a set of permits. Each &lt;a href=&quot;#acquire()&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; blocks if necessary until a permit is available, and then takes it. Each &lt;a href=&quot;#release()&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; adds a permit, potentially releasing a blocking acquirer. However, no actual permit objects are used; the &lt;code&gt;Semaphore&lt;/code&gt; just keeps a count of the number available and acts accordingly.</source>
          <target state="translated">계산 세마포어. 개념적으로 세마포어는 일련의 허가를 유지합니다. 각 &lt;a href=&quot;#acquire()&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt; 는 허가를 사용할 수있을 때까지 필요한 경우 차단 한 다음 가져옵니다. 각 &lt;a href=&quot;#release()&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt; 는 허가를 추가하여 잠재적으로 차단 취득자를 해제합니다. 그러나 실제 허용 개체는 사용되지 않습니다. &lt;code&gt;Semaphore&lt;/code&gt; 바로 사용할 수있는 수의 수를 유지하고 그에 따라 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="1878569fa082444cb799d4d4472ca8f08f05481f" translate="yes" xml:space="preserve">
          <source>A counting semaphore. Conceptually, a semaphore maintains a set of permits. Each &lt;a href=&quot;semaphore#acquire--&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; blocks if necessary until a permit is available, and then takes it. Each &lt;a href=&quot;semaphore#release--&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; adds a permit, potentially releasing a blocking acquirer. However, no actual permit objects are used; the &lt;code&gt;Semaphore&lt;/code&gt; just keeps a count of the number available and acts accordingly.</source>
          <target state="translated">세마포를 계산합니다. 개념적으로 세마포어는 일련의 허가를 유지합니다. 각 &lt;a href=&quot;semaphore#acquire--&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt; 는 필요한 경우 허가가있을 때까지 차단 한 다음 가져옵니다. 각 &lt;a href=&quot;semaphore#release--&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt; 는 허가를 추가하여 잠재적으로 블로킹 취득자를 공개합니다. 그러나 실제 허용 개체는 사용되지 않습니다. &lt;code&gt;Semaphore&lt;/code&gt; 바로 사용할 수있는 수의 수를 유지하고 그에 따라 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="7ef50c2f78174c7e3ff2ae341386d9693f14a6a2" translate="yes" xml:space="preserve">
          <source>A cover for HTMLEditorKit.insertHTML.</source>
          <target state="translated">HTMLEditorKit.insertHTML의 표지입니다.</target>
        </trans-unit>
        <trans-unit id="4b660728216539f39406aedd92d8cf8abfbfdc29" translate="yes" xml:space="preserve">
          <source>A cover for HTMLEditorKit.insertHTML. If an exception it thrown it is wrapped in a RuntimeException and thrown.</source>
          <target state="translated">HTMLEditorKit.insertHTML의 표지입니다. 예외가 발생하면 RuntimeException에 래핑되어 발생합니다.</target>
        </trans-unit>
        <trans-unit id="17a6af52f060965e86c67aebd554d45e863130ac" translate="yes" xml:space="preserve">
          <source>A cryptographic service is always associated with a particular algorithm or type. For example, a digital signature service is always associated with a particular algorithm (e.g., DSA), and a CertificateFactory service is always associated with a particular certificate type (e.g., X.509).</source>
          <target state="translated">암호화 서비스는 항상 특정 알고리즘 또는 유형과 연결됩니다. 예를 들어, 디지털 서명 서비스는 항상 특정 알고리즘 (예 : DSA)과 연결되며 CertificateFactory 서비스는 항상 특정 인증서 유형 (예 : X.509)과 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="3d49d8541edd780589e4ca07657ecf84fd361175" translate="yes" xml:space="preserve">
          <source>A cryptographically strong random number minimally complies with the statistical random number generator tests specified in &lt;a href=&quot;http://csrc.nist.gov/cryptval/140-2.htm&quot;&gt; &lt;i&gt;FIPS 140-2, Security Requirements for Cryptographic Modules&lt;/i&gt;&lt;/a&gt;, section 4.9.1. Additionally, SecureRandom must produce non-deterministic output. Therefore any seed material passed to a SecureRandom object must be unpredictable, and all SecureRandom output sequences must be cryptographically strong, as described in &lt;a href=&quot;http://www.ietf.org/rfc/rfc1750.txt&quot;&gt; &lt;i&gt;RFC 1750: Randomness Recommendations for Security&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">암호화 적으로 강력한 난수는 &lt;a href=&quot;http://csrc.nist.gov/cryptval/140-2.htm&quot;&gt;&lt;i&gt;FIPS 140-2, 암호화 모듈에 대한 보안 요구 사항&lt;/i&gt;&lt;/a&gt; , 섹션 4.9.1에 지정된 통계적 난수 생성기 테스트를 최소로 준수합니다 . 또한 SecureRandom은 비 결정적 출력을 생성해야합니다. 따라서 &lt;a href=&quot;http://www.ietf.org/rfc/rfc1750.txt&quot;&gt;&lt;i&gt;RFC 1750 : 보안에 대한 임의성 권장 사항에&lt;/i&gt;&lt;/a&gt; 설명 된 &lt;i&gt;대로&lt;/i&gt; SecureRandom 오브젝트에 전달 된 시드 자료는 예측할 수 없어야하며 모든 SecureRandom 출력 순서는 암호화 적으로 강력해야합니다 . &lt;i&gt;&lt;/i&gt; &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="00cd8fbb64796f31c2a59103935ef4a790cae1ba" translate="yes" xml:space="preserve">
          <source>A cryptographically strong random number minimally complies with the statistical random number generator tests specified in &lt;a href=&quot;http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf&quot;&gt; &lt;i&gt;FIPS 140-2, Security Requirements for Cryptographic Modules&lt;/i&gt;&lt;/a&gt;, section 4.9.1. Additionally, &lt;code&gt;SecureRandom&lt;/code&gt; must produce non-deterministic output. Therefore any seed material passed to a &lt;code&gt;SecureRandom&lt;/code&gt; object must be unpredictable, and all &lt;code&gt;SecureRandom&lt;/code&gt; output sequences must be cryptographically strong, as described in &lt;a href=&quot;http://tools.ietf.org/html/rfc4086&quot;&gt; &lt;i&gt;RFC 4086: Randomness Requirements for Security&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">강력한 암호화 난수는 &lt;a href=&quot;http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf&quot;&gt;&lt;i&gt;FIPS 140-2, 암호화 모듈에 대한 보안 요구 사항&lt;/i&gt;&lt;/a&gt; , 섹션 4.9.1에 지정된 통계 난수 생성기 테스트를 최소한으로 준수합니다 . 또한 &lt;code&gt;SecureRandom&lt;/code&gt; 은 비 결정적 출력을 생성해야합니다. 따라서 &lt;code&gt;SecureRandom&lt;/code&gt; 개체에 전달 된 모든 시드 자료는 예측할 수 없어야하며 모든 &lt;code&gt;SecureRandom&lt;/code&gt; 출력 시퀀스는 &lt;a href=&quot;http://tools.ietf.org/html/rfc4086&quot;&gt;&lt;i&gt;RFC 4086 : 보안에 대한 임의성 요구 사항에&lt;/i&gt;&lt;/a&gt; 설명 된 &lt;i&gt;대로&lt;/i&gt; 암호화 적으로 강력해야합니다 . &lt;i&gt;&lt;/i&gt; &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="589638db071d6405141971ad4e888a98d9d379a0" translate="yes" xml:space="preserve">
          <source>A cryptographically strong random number minimally complies with the statistical random number generator tests specified in &lt;a href=&quot;http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf&quot;&gt; &lt;i&gt;FIPS 140-2, Security Requirements for Cryptographic Modules&lt;/i&gt;&lt;/a&gt;, section 4.9.1. Additionally, &lt;code&gt;SecureRandom&lt;/code&gt; must produce non-deterministic output. Therefore any seed material passed to a &lt;code&gt;SecureRandom&lt;/code&gt; object must be unpredictable, and all &lt;code&gt;SecureRandom&lt;/code&gt; output sequences must be cryptographically strong, as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc4086&quot;&gt; &lt;i&gt;RFC 4086: Randomness Requirements for Security&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">강력한 암호화 난수는 &lt;a href=&quot;http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf&quot;&gt;&lt;i&gt;FIPS 140-2, 암호화 모듈에 대한 보안 요구 사항&lt;/i&gt;&lt;/a&gt; , 섹션 4.9.1에 지정된 통계 난수 생성기 테스트를 최소한으로 준수합니다 . 또한 &lt;code&gt;SecureRandom&lt;/code&gt; 은 비 결정적 출력을 생성해야합니다. 따라서 &lt;code&gt;SecureRandom&lt;/code&gt; 개체에 전달 된 모든 시드 자료는 예측할 수 없어야하며 모든 &lt;code&gt;SecureRandom&lt;/code&gt; 출력 시퀀스는 &lt;a href=&quot;https://tools.ietf.org/html/rfc4086&quot;&gt;&lt;i&gt;RFC 4086 : 보안에 대한 임의성 요구 사항에&lt;/i&gt;&lt;/a&gt; 설명 된 &lt;i&gt;대로&lt;/i&gt; 암호화 적으로 강력해야합니다 . &lt;i&gt;&lt;/i&gt; &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="6e1ad5ccdaee2397b9cf498e124fe74f968acd0d" translate="yes" xml:space="preserve">
          <source>A cubic parametric curve segment specified with &lt;code&gt;double&lt;/code&gt; coordinates.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 좌표로 지정된 3 차 파라 메트릭 곡선 세그먼트 입니다.</target>
        </trans-unit>
        <trans-unit id="a7e216a818fced7e98353e4b7bbdea310be88d95" translate="yes" xml:space="preserve">
          <source>A cubic parametric curve segment specified with &lt;code&gt;float&lt;/code&gt; coordinates.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 좌표로 지정된 3 차 파라 메트릭 곡선 세그먼트 입니다.</target>
        </trans-unit>
        <trans-unit id="fa5deb637528748537e80092135237e4eb9b1b7c" translate="yes" xml:space="preserve">
          <source>A currency symbol</source>
          <target state="translated">통화 기호</target>
        </trans-unit>
        <trans-unit id="51f6b838a1574832f2e9fbffda3b26c4015239a0" translate="yes" xml:space="preserve">
          <source>A custom layout manager that is responsible for the layout of layeredPane, glassPane, and menuBar.</source>
          <target state="translated">layeredPane, glassPane 및 menuBar의 레이아웃을 담당하는 사용자 지정 레이아웃 관리자입니다.</target>
        </trans-unit>
        <trans-unit id="dc755e278cda4dc95c7384213717314814ed613e" translate="yes" xml:space="preserve">
          <source>A customized caret appearance can be achieved by reimplementing the paint method. If the paint method is changed, the damage method should also be reimplemented to cause a repaint for the area needed to render the caret. The caret extends the Rectangle class which is used to hold the bounding box for where the caret was last rendered. This enables the caret to repaint in a thread-safe manner when the caret moves without making a call to modelToView which is unstable between model updates and view repair (i.e. the order of delivery to DocumentListeners is not guaranteed).</source>
          <target state="translated">페인트 방법을 다시 구현하여 맞춤형 캐럿 모양을 얻을 수 있습니다. 페인트 방법이 변경되면 손상 방법도 다시 구현하여 캐럿을 렌더링하는 데 필요한 영역을 다시 페인트해야합니다. 캐럿은 캐럿이 마지막으로 렌더링 된 바운딩 박스를 유지하는 데 사용되는 Rectangle 클래스를 확장합니다. 따라서 모델 업데이트와 뷰 복구 사이에 불안정한 modelToView를 호출하지 않고 캐럿이 이동할 때 캐럿이 스레드로부터 안전한 방식으로 다시 그릴 수 있습니다 (예 : DocumentListeners 로의 전달 순서가 보장되지 않음).</target>
        </trans-unit>
        <trans-unit id="0d9a552f1eae9532772ba8a0f5bd21b603f695ba" translate="yes" xml:space="preserve">
          <source>A customizer class provides a complete custom GUI for customizing a target Java Bean.</source>
          <target state="translated">사용자 정의 프로그램 클래스는 대상 Java Bean을 사용자 정의하기위한 완전한 사용자 정의 GUI를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="155801b8d431610d4f89e1e764da92c1508c8337" translate="yes" xml:space="preserve">
          <source>A cycle is detected, say where module &lt;code&gt;m1&lt;/code&gt; requires module &lt;code&gt;m2&lt;/code&gt; and &lt;code&gt;m2&lt;/code&gt; requires &lt;code&gt;m1&lt;/code&gt;.</source>
          <target state="translated">여기서 모듈 사이클이 검출 말할 &lt;code&gt;m1&lt;/code&gt; 모듈 필요 &lt;code&gt;m2&lt;/code&gt; 을 과 &lt;code&gt;m2&lt;/code&gt; 가 필요 &lt;code&gt;m1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2069b8c17d37c31667b7fab19c4856de0cc1f8d1" translate="yes" xml:space="preserve">
          <source>A daemon thread group is automatically destroyed when its last thread is stopped or its last thread group is destroyed.</source>
          <target state="translated">마지막 스레드가 중지되거나 마지막 스레드 그룹이 삭제되면 데몬 스레드 그룹이 자동으로 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="05d0e41569ec35aa65fa2c0237db9083d80b3ecd" translate="yes" xml:space="preserve">
          <source>A dash</source>
          <target state="translated">대시</target>
        </trans-unit>
        <trans-unit id="a33b219dbf7a1c9bcc3067caa4ec245d6a63116b" translate="yes" xml:space="preserve">
          <source>A data input stream lets an application read primitive Java data types from an underlying input stream in a machine-independent way.</source>
          <target state="translated">데이터 입력 스트림을 사용하면 응용 프로그램이 시스템에 독립적 인 방식으로 기본 입력 스트림에서 기본 Java 데이터 유형을 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d45df3da7223cc3f060b7b0d57ac3b346e061e77" translate="yes" xml:space="preserve">
          <source>A data input stream lets an application read primitive Java data types from an underlying input stream in a machine-independent way. An application uses a data output stream to write data that can later be read by a data input stream.</source>
          <target state="translated">데이터 입력 스트림을 사용하면 응용 프로그램이 시스템에 독립적 인 방식으로 기본 입력 스트림에서 기본 Java 데이터 유형을 읽을 수 있습니다. 응용 프로그램은 데이터 출력 스트림을 사용하여 나중에 데이터 입력 스트림에서 읽을 수있는 데이터를 씁니다.</target>
        </trans-unit>
        <trans-unit id="ec9aec4344d0e51aa12ef1215631eb1d67b5a569" translate="yes" xml:space="preserve">
          <source>A data line has an internal buffer in which the incoming or outgoing audio data is queued. The &lt;a href=&quot;#drain()&quot;&gt;&lt;code&gt;drain()&lt;/code&gt;&lt;/a&gt; method blocks until this internal buffer becomes empty, usually because all queued data has been processed. The &lt;a href=&quot;#flush()&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt; method discards any available queued data from the internal buffer.</source>
          <target state="translated">데이터 라인에는 들어 오거나 나가는 오디오 데이터가 대기하는 내부 버퍼가 있습니다. &lt;a href=&quot;#drain()&quot;&gt; &lt;code&gt;drain()&lt;/code&gt; &lt;/a&gt; 이 내부 버퍼가 비게 될 때까지 메소드 블록, 모든 큐잉 된 데이터가 처리되어 있기 때문에 보통. &lt;a href=&quot;#flush()&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; &lt;/a&gt; 메소드는 내부 버퍼로부터 큐잉 된 데이터를 폐기한다.</target>
        </trans-unit>
        <trans-unit id="1de7e80dd13dc68d3168ef0a6e2fe9e3913dcf0a" translate="yes" xml:space="preserve">
          <source>A data line has an internal buffer in which the incoming or outgoing audio data is queued. The &lt;code&gt;&lt;a href=&quot;dataline#drain--&quot;&gt;&lt;code&gt;drain()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method blocks until this internal buffer becomes empty, usually because all queued data has been processed. The &lt;code&gt;&lt;a href=&quot;dataline#flush--&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method discards any available queued data from the internal buffer.</source>
          <target state="translated">데이터 라인에는 수신 또는 발신 오디오 데이터가 대기하는 내부 버퍼가 있습니다. &lt;code&gt;&lt;a href=&quot;dataline#drain--&quot;&gt;&lt;code&gt;drain()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 이 내부 버퍼가 비게 될 때까지 메소드 블록, 모든 큐잉 된 데이터가 처리되어 있기 때문에 보통. &lt;code&gt;&lt;a href=&quot;dataline#flush--&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드는 내부 버퍼로부터 큐잉 된 데이터를 폐기한다.</target>
        </trans-unit>
        <trans-unit id="ea6cbb8b0f188dc029372c2eb8622099b8037345" translate="yes" xml:space="preserve">
          <source>A data line produces &lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt; events whenever it begins or ceases active presentation or capture of data. These events can be generated in response to specific requests, or as a result of less direct state changes. For example, if &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; is called on an inactive data line, and data is available for capture or playback, a &lt;code&gt;START&lt;/code&gt; event will be generated shortly, when data playback or capture actually begins. Or, if the flow of data to an active data line is constricted so that a gap occurs in the presentation of data, a &lt;code&gt;STOP&lt;/code&gt; event is generated.</source>
          <target state="translated">데이터 라인은 활성 프리젠 테이션 또는 데이터 캡처를 시작하거나 중지 할 때마다 &lt;a href=&quot;lineevent.type#START&quot;&gt; &lt;code&gt;START&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;lineevent.type#STOP&quot;&gt; &lt;code&gt;STOP&lt;/code&gt; &lt;/a&gt; 이벤트를 생성 합니다. 이러한 이벤트는 특정 요청에 대한 응답으로 생성되거나 덜 직접적인 상태 변경의 결과로 생성 될 수 있습니다. 예를 들어, 비활성 데이터 라인에서 &lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; 가 호출되고 데이터를 캡처 또는 재생에 사용할 수있는 경우 데이터 재생 또는 캡처가 실제로 시작될 때 &lt;code&gt;START&lt;/code&gt; 이벤트가 곧 생성됩니다. 또는 활성 데이터 라인으로의 데이터 흐름이 제한되어 데이터 표시에 갭이 발생하면 &lt;code&gt;STOP&lt;/code&gt; 이벤트가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="5c11db064de02f620dcd7062f6e3d3fe8017c28a" translate="yes" xml:space="preserve">
          <source>A data line produces &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; events whenever it begins or ceases active presentation or capture of data. These events can be generated in response to specific requests, or as a result of less direct state changes. For example, if &lt;code&gt;&lt;a href=&quot;dataline#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is called on an inactive data line, and data is available for capture or playback, a &lt;code&gt;START&lt;/code&gt; event will be generated shortly, when data playback or capture actually begins. Or, if the flow of data to an active data line is constricted so that a gap occurs in the presentation of data, a &lt;code&gt;STOP&lt;/code&gt; event is generated.</source>
          <target state="translated">데이터 라인은 &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 이벤트가 시작되거나 활성 프리젠 테이션 또는 데이터 캡처가 중지 될 때마다 생성 됩니다. 이러한 이벤트는 특정 요청에 대한 응답으로 또는 직접적인 상태 변경이 적기 때문에 생성 될 수 있습니다. 예를 들어, 비활성 데이터 라인에서 &lt;code&gt;&lt;a href=&quot;dataline#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 가 호출되고 데이터를 캡처 또는 재생할 수있는 경우, 데이터 재생 또는 캡처가 실제로 시작될 때 곧 &lt;code&gt;START&lt;/code&gt; 이벤트가 생성됩니다. 또는 활성 데이터 라인으로의 데이터 흐름이 제한되어 데이터 표시에 공백이 발생하면 &lt;code&gt;STOP&lt;/code&gt; 이벤트가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="039c1d1d51bba8822833fd86de721e61e08f3939" translate="yes" xml:space="preserve">
          <source>A data model for a combo box.</source>
          <target state="translated">콤보 상자의 데이터 모델입니다.</target>
        </trans-unit>
        <trans-unit id="e6dadba60cfbfb81f34f2058ee572d2de4e1288f" translate="yes" xml:space="preserve">
          <source>A data model for a combo box. This interface extends &lt;code&gt;ListDataModel&lt;/code&gt; and adds the concept of a</source>
          <target state="translated">콤보 상자의 데이터 모델입니다. 이 인터페이스 는 &lt;code&gt;ListDataModel&lt;/code&gt; 을 확장 하고</target>
        </trans-unit>
        <trans-unit id="b4ade92fed66a9ea602b46e8ce07d94ae873930c" translate="yes" xml:space="preserve">
          <source>A data output stream lets an application write primitive Java data types to an output stream in a portable way.</source>
          <target state="translated">데이터 출력 스트림을 통해 응용 프로그램은 기본 Java 데이터 유형을 이식 가능한 방식으로 출력 스트림에 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e49ad230178e81f14bea1885dc6b952a1a78975" translate="yes" xml:space="preserve">
          <source>A data output stream lets an application write primitive Java data types to an output stream in a portable way. An application can then use a data input stream to read the data back in.</source>
          <target state="translated">데이터 출력 스트림을 통해 응용 프로그램은 기본 Java 데이터 유형을 이식 가능한 방식으로 출력 스트림에 쓸 수 있습니다. 그런 다음 응용 프로그램은 데이터 입력 스트림을 사용하여 데이터를 다시 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ffd7d53aef0182ff78f6145031ad6fa96eaf5e9" translate="yes" xml:space="preserve">
          <source>A datagram channel is created by invoking one of the &lt;a href=&quot;#open()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods of this class. It is not possible to create a channel for an arbitrary, pre-existing datagram socket. A newly-created datagram channel is open but not connected. A datagram channel need not be connected in order for the &lt;a href=&quot;#send(java.nio.ByteBuffer,java.net.SocketAddress)&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#receive(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;receive&lt;/code&gt;&lt;/a&gt; methods to be used. A datagram channel may be connected, by invoking its &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method, in order to avoid the overhead of the security checks are otherwise performed as part of every send and receive operation. A datagram channel must be connected in order to use the &lt;a href=&quot;#read(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods, since those methods do not accept or return socket addresses.</source>
          <target state="translated">데이터 그램 채널은 이 클래스 의 &lt;a href=&quot;#open()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 메서드 중 하나를 호출하여 생성됩니다 . 임의의 기존 데이터 그램 소켓에 대한 채널을 생성 할 수 없습니다. 새로 생성 된 데이터 그램 채널이 열려 있지만 연결되어 있지 않습니다. &lt;a href=&quot;#send(java.nio.ByteBuffer,java.net.SocketAddress)&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#receive(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;receive&lt;/code&gt; &lt;/a&gt; 방법을 사용 하기 위해 데이터 그램 채널을 연결할 필요는 없습니다 . 데이터 그램 채널은 &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 방법 을 호출하여 연결될 수 있으며 , 보안 검사의 오버 헤드를 방지하기 위해 모든 전송 및 수신 작업의 일부로 수행됩니다. &lt;a href=&quot;#read(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 메서드 를 사용하려면 데이터 그램 채널이 연결되어야합니다. 이러한 메서드는 소켓 주소를 수락하거나 반환하지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="860c85146d0e51648ee215e21e8c0d125f69ac4d" translate="yes" xml:space="preserve">
          <source>A datagram channel is created by invoking one of the &lt;a href=&quot;datagramchannel#open--&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods of this class. It is not possible to create a channel for an arbitrary, pre-existing datagram socket. A newly-created datagram channel is open but not connected. A datagram channel need not be connected in order for the &lt;a href=&quot;datagramchannel#send-java.nio.ByteBuffer-java.net.SocketAddress-&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datagramchannel#receive-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;receive&lt;/code&gt;&lt;/a&gt; methods to be used. A datagram channel may be connected, by invoking its &lt;a href=&quot;datagramchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method, in order to avoid the overhead of the security checks are otherwise performed as part of every send and receive operation. A datagram channel must be connected in order to use the &lt;a href=&quot;datagramchannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datagramchannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods, since those methods do not accept or return socket addresses.</source>
          <target state="translated">이 클래스 의 &lt;a href=&quot;datagramchannel#open--&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 메소드 중 하나를 호출하여 데이터 그램 채널이 작성됩니다 . 임의의 기존 데이터 그램 소켓에 대한 채널을 생성 할 수 없습니다. 새로 만든 데이터 그램 채널이 열려 있지만 연결되어 있지 않습니다. &lt;a href=&quot;datagramchannel#send-java.nio.ByteBuffer-java.net.SocketAddress-&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;datagramchannel#receive-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;receive&lt;/code&gt; &lt;/a&gt; 방법을 사용 하기 위해 데이터 그램 채널을 연결할 필요가 없습니다 . 보안 검사의 오버 헤드를 피하기 위해 모든 송수신 작업의 일부로 수행되는 보안 검사의 오버 헤드를 피하기 위해 &lt;a href=&quot;datagramchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 방법 을 호출하여 데이터 그램 채널을 연결할 수 있습니다. &lt;a href=&quot;datagramchannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;datagramchannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 방법 을 사용하려면 데이터 그램 채널을 연결해야합니다. 이러한 방법은 소켓 주소를 허용하거나 반환하지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="b50daddc17e2dc3b7a053825fe91e19a870e48dc" translate="yes" xml:space="preserve">
          <source>A datagram socket associated with this channel</source>
          <target state="translated">이 채널과 관련된 데이터 그램 소켓</target>
        </trans-unit>
        <trans-unit id="3d2c68abbc6de0158a3eae16d10798edaae398fe" translate="yes" xml:space="preserve">
          <source>A datagram socket is the sending or receiving point for a packet delivery service. Each packet sent or received on a datagram socket is individually addressed and routed. Multiple packets sent from one machine to another may be routed differently, and may arrive in any order.</source>
          <target state="translated">데이터 그램 소켓은 패킷 전달 서비스의 송신 또는 수신 지점입니다. 데이터 그램 소켓에서 보내거나받는 각 패킷은 개별적으로 주소 지정되고 라우팅됩니다. 한 시스템에서 다른 시스템으로 전송 된 여러 패킷은 다르게 라우팅 될 수 있으며 어떤 순서로든 도착할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad8df8d5ed296cdf0ebd9da1afb9e92512db37c3" translate="yes" xml:space="preserve">
          <source>A datagram socket will have a channel if, and only if, the channel itself was created via the &lt;a href=&quot;../nio/channels/datagramchannel#open()&quot;&gt;&lt;code&gt;DatagramChannel.open&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">데이터 그램 소켓은 채널 자체가 &lt;a href=&quot;../nio/channels/datagramchannel#open()&quot;&gt; &lt;code&gt;DatagramChannel.open&lt;/code&gt; &lt;/a&gt; 메서드 를 통해 생성 된 경우에만 채널을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="0ae7f8573e25c5bd21f3782b0c07769f31eec235" translate="yes" xml:space="preserve">
          <source>A datagram socket will have a channel if, and only if, the channel itself was created via the &lt;a href=&quot;../nio/channels/datagramchannel#open--&quot;&gt;&lt;code&gt;DatagramChannel.open&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">채널 자체가 &lt;a href=&quot;../nio/channels/datagramchannel#open--&quot;&gt; &lt;code&gt;DatagramChannel.open&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 작성된 경우에만 데이터 그램 소켓에 채널이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="28f9164c3c92e685be103dbf4f46c787de2d68b2" translate="yes" xml:space="preserve">
          <source>A date (day of month) is represented by an integer from 1 to 31 in the usual manner.</source>
          <target state="translated">날짜 (일)는 일반적인 방식으로 1에서 31 사이의 정수로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="765d4dd40d45377469a0163c1106343e90f2903d" translate="yes" xml:space="preserve">
          <source>A date in the Hijrah calendar system.</source>
          <target state="translated">Hijrah 달력 시스템의 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="c1c7acc4aa80b7eeb7672f49c432e7cd85327b48" translate="yes" xml:space="preserve">
          <source>A date in the Japanese Imperial calendar system.</source>
          <target state="translated">일본 제국 달력 시스템의 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="7de30d127cf084154c18dba24d51f5c4658f9091" translate="yes" xml:space="preserve">
          <source>A date in the Minguo calendar system.</source>
          <target state="translated">Minguo 캘린더 시스템의 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="eb679e0dede92d2e659a9d8242cd334c8812c331" translate="yes" xml:space="preserve">
          <source>A date in the Thai Buddhist calendar system.</source>
          <target state="translated">태국 불교 달력 시스템의 날짜.</target>
        </trans-unit>
        <trans-unit id="c9aefbb3b8fbfbb921cfbea59354493d7c161995" translate="yes" xml:space="preserve">
          <source>A date is time-based if it can be used to imply meaning from a date. It must have a &lt;a href=&quot;#getDuration()&quot;&gt;duration&lt;/a&gt; that is an integral multiple of the length of a standard day. Note that it is valid for both &lt;code&gt;isDateBased()&lt;/code&gt; and &lt;code&gt;isTimeBased()&lt;/code&gt; to return false, such as when representing a unit like 36 hours.</source>
          <target state="translated">날짜에서 의미를 암시하는 데 사용할 수있는 경우 날짜는 시간 기반입니다. 표준 일 길이의 정수 배수 인 &lt;a href=&quot;#getDuration()&quot;&gt;기간&lt;/a&gt; 이 있어야합니다 . 36 시간과 같은 단위를 나타낼 때와 같이 &lt;code&gt;isDateBased()&lt;/code&gt; 및 &lt;code&gt;isTimeBased()&lt;/code&gt; 모두 false를 반환 하는 것은 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="73688423161d451845e09cb015764dabbeb668f9" translate="yes" xml:space="preserve">
          <source>A date is time-based if it can be used to imply meaning from a date. It must have a &lt;a href=&quot;temporalunit#getDuration--&quot;&gt;duration&lt;/a&gt; that is an integral multiple of the length of a standard day. Note that it is valid for both &lt;code&gt;isDateBased()&lt;/code&gt; and &lt;code&gt;isTimeBased()&lt;/code&gt; to return false, such as when representing a unit like 36 hours.</source>
          <target state="translated">날짜는 의미를 암시하는 데 사용될 수있는 경우 시간 기반입니다. 표준 날짜 길이의 정수배 인 &lt;a href=&quot;temporalunit#getDuration--&quot;&gt;지속 기간&lt;/a&gt; 이 있어야합니다 . &lt;code&gt;isDateBased()&lt;/code&gt; 및 둘 다에 유효합니다. &lt;code&gt;isTimeBased()&lt;/code&gt; 36 시간과 같은 단위를 나타내는 경우와 같이 false를 반환 .</target>
        </trans-unit>
        <trans-unit id="15998c955b5528e968175b0e012f5926807a8abe" translate="yes" xml:space="preserve">
          <source>A date without a time-zone in the ISO-8601 calendar system, such as &lt;code&gt;2007-12-03&lt;/code&gt;.</source>
          <target state="translated">ISO-12601 달력 시스템에서 표준 시간대가없는 날짜 (예 : &lt;code&gt;2007-12-03&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="922a9f59988c2dc98cc4b1ef57bbd880865b6d16" translate="yes" xml:space="preserve">
          <source>A date without time-of-day or time-zone in an arbitrary chronology, intended for advanced globalization use cases.</source>
          <target state="translated">고급 세계화 사용 사례를위한 임의의 연대기에서 시간 또는 시간대가없는 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="2e438e7f48db8594363e3d4b8a272fd1430eae73" translate="yes" xml:space="preserve">
          <source>A date-based amount of time in the ISO-8601 calendar system, such as '2 years, 3 months and 4 days'.</source>
          <target state="translated">ISO-8601 달력 시스템의 날짜 기반 시간 (예 : '2 년, 3 개월 및 4 일')</target>
        </trans-unit>
        <trans-unit id="ea8975e273a6ef0177859f50acb175de6d095b63" translate="yes" xml:space="preserve">
          <source>A date-based amount of time, such as '3 years, 4 months and 5 days' in an arbitrary chronology, intended for advanced globalization use cases.</source>
          <target state="translated">고급 세계화 사용 사례를위한 임의의 연대기에서 '3 년, 4 개월 및 5 일'과 같은 날짜 기반 시간입니다.</target>
        </trans-unit>
        <trans-unit id="164536bebef9f26d2ca2490445b8e742d6eac336" translate="yes" xml:space="preserve">
          <source>A date-time with a time-zone in an arbitrary chronology, intended for advanced globalization use cases.</source>
          <target state="translated">고급 세계화 사용 사례를위한 임의의 시간 순서대로 시간대가있는 날짜-시간입니다.</target>
        </trans-unit>
        <trans-unit id="097280af56f500be86aab77cc886c6c68d69083a" translate="yes" xml:space="preserve">
          <source>A date-time with a time-zone in the ISO-8601 calendar system, such as &lt;code&gt;2007-12-03T10:15:30+01:00 Europe/Paris&lt;/code&gt;.</source>
          <target state="translated">ISO-8601 캘린더 시스템에서 시간대가있는 날짜-시간 (예 : &lt;code&gt;2007-12-03T10:15:30+01:00 Europe/Paris&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="4ef9fd927e47ecd38cbd267620a731630ad6d605" translate="yes" xml:space="preserve">
          <source>A date-time with an offset from UTC/Greenwich in the ISO-8601 calendar system, such as &lt;code&gt;2007-12-03T10:15:30+01:00&lt;/code&gt;.</source>
          <target state="translated">는 ISO-8601 시스템에서 일정 UTC / 그리니치 오프셋과 데이트 타임 같은 &lt;code&gt;2007-12-03T10:15:30+01:00&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa42790b0fd24d4edfc2bea6b761cee59e338ba9" translate="yes" xml:space="preserve">
          <source>A date-time without a time-zone in an arbitrary chronology, intended for advanced globalization use cases.</source>
          <target state="translated">고급 세계화 사용 사례를위한 임의의 연대기에 시간대가없는 날짜-시간입니다.</target>
        </trans-unit>
        <trans-unit id="4cd7fec84ac247f0315d0f529964606dad258e5d" translate="yes" xml:space="preserve">
          <source>A date-time without a time-zone in the ISO-8601 calendar system, such as &lt;code&gt;2007-12-03T10:15:30&lt;/code&gt;.</source>
          <target state="translated">는 ISO-8601 캘린더 시스템의 시간대가없는 일시 같은 &lt;code&gt;2007-12-03T10:15:30&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="157be410809c28fe9d32a7c9658f228c1d9c12a7" translate="yes" xml:space="preserve">
          <source>A day-of-week, such as 'Tuesday'.</source>
          <target state="translated">'화요일'과 같은 요일.</target>
        </trans-unit>
        <trans-unit id="89abd7c81d146952b08c454a0a1da8bc94ec80c6" translate="yes" xml:space="preserve">
          <source>A deadlock was detected.</source>
          <target state="translated">교착 상태가 감지되었습니다.</target>
        </trans-unit>
        <trans-unit id="a9ecc568d3f4daf6463d56e74479f881abbaf7f1" translate="yes" xml:space="preserve">
          <source>A decimal digit character:&lt;code&gt;\p{IsDigit}&lt;/code&gt;</source>
          <target state="translated">10 진수 문자 : &lt;code&gt;\p{IsDigit}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5eff0f0d27d8edf396c4eb418d3158f33ab7a26b" translate="yes" xml:space="preserve">
          <source>A decimal digit character:&lt;code&gt;p{IsDigit}&lt;/code&gt;</source>
          <target state="translated">10 진수 문자 : &lt;code&gt;p{IsDigit}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b598631977de5f143e88066dce901dff98686a6" translate="yes" xml:space="preserve">
          <source>A decimal digit: &lt;code&gt;[0-9]&lt;/code&gt;</source>
          <target state="translated">십진수 : &lt;code&gt;[0-9]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="157311c8bc1e2a311fd7d16a1903d15eeb1dce10" translate="yes" xml:space="preserve">
          <source>A decimal point</source>
          <target state="translated">소수점</target>
        </trans-unit>
        <trans-unit id="3a147eaebba94f0aafb2fc225c172ce03371c707" translate="yes" xml:space="preserve">
          <source>A decorative icon to be placed in the dialog box. A default value for this is determined by the &lt;code&gt;messageType&lt;/code&gt; parameter.</source>
          <target state="translated">대화 상자에 배치 할 장식 아이콘입니다. 이에 대한 기본값은 &lt;code&gt;messageType&lt;/code&gt; 매개 변수에 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="eacb7c1c16ebd99f7dce891e5025f17399f2e2f4" translate="yes" xml:space="preserve">
          <source>A default &lt;code&gt;BaseRowSet&lt;/code&gt; object is initialized with many starting values. The following is true of a default &lt;code&gt;RowSet&lt;/code&gt; instance that extends the &lt;code&gt;BaseRowSet&lt;/code&gt; class:</source>
          <target state="translated">기본 &lt;code&gt;BaseRowSet&lt;/code&gt; 객체는 많은 시작 값으로 초기화됩니다. 다음은 &lt;code&gt;BaseRowSet&lt;/code&gt; 클래스 를 확장 하는 기본 &lt;code&gt;RowSet&lt;/code&gt; 인스턴스에 해당됩니다 .</target>
        </trans-unit>
        <trans-unit id="cd2a0ef14d56cc958a92c93743ec0088b9a70441" translate="yes" xml:space="preserve">
          <source>A default &lt;code&gt;CallbackHandler&lt;/code&gt; class implementation may be specified by setting the value of the &lt;code&gt;auth.login.defaultCallbackHandler&lt;/code&gt; security property.</source>
          <target state="translated">&lt;code&gt;auth.login.defaultCallbackHandler&lt;/code&gt; 의 값을 설정하여 기본 &lt;code&gt;CallbackHandler&lt;/code&gt; 클래스 구현을 지정할 수 있습니다. 보안 특성 .</target>
        </trans-unit>
        <trans-unit id="b99bfd83db6c28b8a002954d21d2d96a76dea25f" translate="yes" xml:space="preserve">
          <source>A default &lt;code&gt;ResultSet&lt;/code&gt; object is not updatable and has a cursor that moves forward only. Thus, you can iterate through it only once and only from the first row to the last row. It is possible to produce &lt;code&gt;ResultSet&lt;/code&gt; objects that are scrollable and/or updatable. The following code fragment, in which &lt;code&gt;con&lt;/code&gt; is a valid &lt;code&gt;Connection&lt;/code&gt; object, illustrates how to make a result set that is scrollable and insensitive to updates by others, and that is updatable. See &lt;code&gt;ResultSet&lt;/code&gt; fields for other options.</source>
          <target state="translated">기본 &lt;code&gt;ResultSet&lt;/code&gt; 오브젝트는 업데이트 할 수 없으며 앞으로 만 이동하는 커서가 있습니다. 따라서 첫 번째 행에서 마지막 행까지 한 번만 반복 할 수 있습니다. 스크롤 및 / 또는 업데이트 가능한 &lt;code&gt;ResultSet&lt;/code&gt; 개체 를 생성 할 수 있습니다 . &lt;code&gt;con&lt;/code&gt; 이 유효한 &lt;code&gt;Connection&lt;/code&gt; 객체 인 다음 코드 조각 은 스크롤 가능하고 다른 사용자의 업데이트에 민감하지 않고 업데이트 가능한 결과 집합을 만드는 방법을 보여줍니다. 다른 옵션 은 &lt;code&gt;ResultSet&lt;/code&gt; 필드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe8d0db92ce5c4e505b1f926182cc6432d1640de" translate="yes" xml:space="preserve">
          <source>A default L&amp;amp;F implementation of MenuBarUI.</source>
          <target state="translated">MenuBarUI의 기본 L &amp;amp; F 구현입니다.</target>
        </trans-unit>
        <trans-unit id="e04e173ec48be7a696a9414557505123bb614b96" translate="yes" xml:space="preserve">
          <source>A default L&amp;amp;F implementation of MenuBarUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">MenuBarUI의 기본 L &amp;amp; F 구현입니다. 이 구현은 &quot;결합 된&quot;보기 / 컨트롤러입니다.</target>
        </trans-unit>
        <trans-unit id="6a8272f3e52f484a6ce27c79c9769215ed5ae87c" translate="yes" xml:space="preserve">
          <source>A default L&amp;amp;F implementation of MenuUI.</source>
          <target state="translated">MenuUI의 기본 L &amp;amp; F 구현입니다.</target>
        </trans-unit>
        <trans-unit id="95200ec264056fd4c2a8497e57d2858c47f0191d" translate="yes" xml:space="preserve">
          <source>A default L&amp;amp;F implementation of MenuUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">MenuUI의 기본 L &amp;amp; F 구현입니다. 이 구현은 &quot;결합 된&quot;보기 / 컨트롤러입니다.</target>
        </trans-unit>
        <trans-unit id="9faf29b8ac86cd6ee98675a5581ff9e8c31c42f0" translate="yes" xml:space="preserve">
          <source>A default L&amp;amp;F implementation of ScrollPaneUI.</source>
          <target state="translated">ScrollPaneUI의 기본 L &amp;amp; F 구현입니다.</target>
        </trans-unit>
        <trans-unit id="5cd744bf0733a787180eef4442c83eed314c098e" translate="yes" xml:space="preserve">
          <source>A default TerminalFactory is always available. However, depending on the implementation, it may not offer any terminals.</source>
          <target state="translated">기본 TerminalFactory는 항상 사용할 수 있습니다. 그러나 구현에 따라 단말기를 제공하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9a6eacf12d63cc0e2ee5fc279c41f03de9eabe5" translate="yes" xml:space="preserve">
          <source>A default horizontal thumb &lt;code&gt;Icon&lt;/code&gt;.</source>
          <target state="translated">기본 가로 엄지 &lt;code&gt;Icon&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4783bbb67a33b2992887ff110755ed8d76992c97" translate="yes" xml:space="preserve">
          <source>A default horizontal thumb &lt;code&gt;Icon&lt;/code&gt;. This field might not be used. To change the &lt;code&gt;Icon&lt;/code&gt; used by this delegate directly set it using the &lt;code&gt;Slider.horizontalThumbIcon&lt;/code&gt; UIManager property.</source>
          <target state="translated">기본 가로 엄지 &lt;code&gt;Icon&lt;/code&gt; . 이 필드는 사용되지 않을 수 있습니다. 이 대리자가 사용 하는 &lt;code&gt;Icon&lt;/code&gt; 을 변경하려면 &lt;code&gt;Slider.horizontalThumbIcon&lt;/code&gt; UIManager 속성을 사용하여 직접 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="895cd1d0c3c4897508ede06f87f5a985330bf289" translate="yes" xml:space="preserve">
          <source>A default implementation of Caret.</source>
          <target state="translated">Caret의 기본 구현입니다.</target>
        </trans-unit>
        <trans-unit id="57bbfc291e6251172e02f1663e0f826298ae79ee" translate="yes" xml:space="preserve">
          <source>A default implementation of Caret. The caret is rendered as a vertical line in the color specified by the CaretColor property of the associated JTextComponent. It can blink at the rate specified by the BlinkRate property.</source>
          <target state="translated">Caret의 기본 구현입니다. 캐럿은 연관된 JTextComponent의 CaretColor 속성에 지정된 색상의 수직선으로 렌더링됩니다. BlinkRate 속성에 지정된 속도로 깜박일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b08558f81563eb2f14f1c724a86a9b41c48e40d8" translate="yes" xml:space="preserve">
          <source>A default vertical thumb &lt;code&gt;Icon&lt;/code&gt;.</source>
          <target state="translated">기본 세로 엄지 &lt;code&gt;Icon&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="377ac0b773de448340bc8623588ff6c5ffc7818e" translate="yes" xml:space="preserve">
          <source>A default vertical thumb &lt;code&gt;Icon&lt;/code&gt;. This field might not be used. To change the &lt;code&gt;Icon&lt;/code&gt; used by this delegate directly set it using the &lt;code&gt;Slider.verticalThumbIcon&lt;/code&gt; UIManager property.</source>
          <target state="translated">기본 세로 엄지 &lt;code&gt;Icon&lt;/code&gt; . 이 필드는 사용되지 않을 수 있습니다. 이 대리자가 사용 하는 &lt;code&gt;Icon&lt;/code&gt; 을 변경하려면 &lt;code&gt;Slider.verticalThumbIcon&lt;/code&gt; UIManager 속성을 사용하여 직접 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="3eead970a964cfd77fd60eb90fa4973507e78a75" translate="yes" xml:space="preserve">
          <source>A definition of the way a local time can be converted to the actual transition date-time.</source>
          <target state="translated">현지 시간을 실제 전환 날짜-시간으로 변환 할 수있는 방법에 대한 정의.</target>
        </trans-unit>
        <trans-unit id="c9dd44617c4d88f5e2e6388d8e2dafe4e46a14ef" translate="yes" xml:space="preserve">
          <source>A delayed result-bearing action that can be cancelled.</source>
          <target state="translated">취소 할 수있는 지연된 결과 보유 조치.</target>
        </trans-unit>
        <trans-unit id="ac46e84e3abf4aff48d4f542f6baf971ac9dad1e" translate="yes" xml:space="preserve">
          <source>A delayed result-bearing action that can be cancelled. Usually a scheduled future is the result of scheduling a task with a &lt;a href=&quot;scheduledexecutorservice&quot;&gt;&lt;code&gt;ScheduledExecutorService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">취소 할 수있는 지연된 결과 보유 조치. 일반적으로 스케줄 된 미래는 &lt;a href=&quot;scheduledexecutorservice&quot;&gt; &lt;code&gt;ScheduledExecutorService&lt;/code&gt; &lt;/a&gt; 로 태스크를 스케줄 한 결과입니다 .</target>
        </trans-unit>
        <trans-unit id="c23a3f9cc77449f2c7206f98f654f1e397e1782a" translate="yes" xml:space="preserve">
          <source>A dependence upon a module</source>
          <target state="translated">모듈에 대한 의존성</target>
        </trans-unit>
        <trans-unit id="f40660856cefafd499f5a8c83c6a54124863e05e" translate="yes" xml:space="preserve">
          <source>A dependence upon a module.</source>
          <target state="translated">모듈에 대한 의존성.</target>
        </trans-unit>
        <trans-unit id="5572adadfdd4648f0ee6ddebccd29574fd8ebae6" translate="yes" xml:space="preserve">
          <source>A dependency of a module.</source>
          <target state="translated">모듈의 종속성.</target>
        </trans-unit>
        <trans-unit id="daf559c6ba08fd75e8590ce4b96a16bac7e5a662" translate="yes" xml:space="preserve">
          <source>A dereferencer of &lt;a href=&quot;urireference&quot;&gt;&lt;code&gt;URIReference&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">&lt;a href=&quot;urireference&quot;&gt; &lt;code&gt;URIReference&lt;/code&gt; &lt;/a&gt; 의 역 참조 자입니다 .</target>
        </trans-unit>
        <trans-unit id="9281783cd7910a1b9bd0cbddec54bbe22a45331a" translate="yes" xml:space="preserve">
          <source>A description of a Serializable field from a Serializable class.</source>
          <target state="translated">Serializable 클래스의 Serializable 필드에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="76b5a73d15645da68ef6f5bf9709ccb80943a81e" translate="yes" xml:space="preserve">
          <source>A description of a Serializable field from a Serializable class. An array of ObjectStreamFields is used to declare the Serializable fields of a class.</source>
          <target state="translated">Serializable 클래스의 Serializable 필드에 대한 설명입니다. ObjectStreamFields 배열은 클래스의 Serializable 필드를 선언하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c7bc9d1857a6006010eb18d44c52d8253a604f31" translate="yes" xml:space="preserve">
          <source>A description of a change to a Snippet.</source>
          <target state="translated">스 니펫 변경에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="05445b6bb330f95d9e563e81b33c315d2aa68a78" translate="yes" xml:space="preserve">
          <source>A description of a change to a Snippet. These are generated by direct changes to state with &lt;a href=&quot;jshell#eval(java.lang.String)&quot;&gt;&lt;code&gt;JShell.eval(String)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;jshell#drop(jdk.jshell.Snippet)&quot;&gt;&lt;code&gt;JShell.drop(Snippet)&lt;/code&gt;&lt;/a&gt;, or indirectly by these same methods as dependencies change or Snippets are overwritten. For direct changes, the &lt;a href=&quot;#causeSnippet()&quot;&gt;&lt;code&gt;causeSnippet()&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">스 니펫 변경에 대한 설명입니다. &lt;a href=&quot;jshell#eval(java.lang.String)&quot;&gt; &lt;code&gt;JShell.eval(String)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;jshell#drop(jdk.jshell.Snippet)&quot;&gt; &lt;code&gt;JShell.drop(Snippet)&lt;/code&gt; &lt;/a&gt; 을 사용하여 상태를 직접 변경 하거나 종속성 변경 또는 스 니펫을 덮어 쓰는 것과 동일한 메서드에 의해 간접적으로 생성됩니다. 직접적인 변경의 경우 &lt;a href=&quot;#causeSnippet()&quot;&gt; &lt;code&gt;causeSnippet()&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="62eb29e85381c666aa2036d142f522d9f38765c8" translate="yes" xml:space="preserve">
          <source>A description of a to-be-instantiated KeyStore object.</source>
          <target state="translated">인스턴스화 할 KeyStore 객체의 설명입니다.</target>
        </trans-unit>
        <trans-unit id="3d1c33b4d2727c3bbde32903a7c46f61993d7993" translate="yes" xml:space="preserve">
          <source>A description of the result state of a coder.</source>
          <target state="translated">코더의 결과 상태에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="0d6f09acd02e2b1303ba87805be2fea193b39dfd" translate="yes" xml:space="preserve">
          <source>A description of these layouts follows:</source>
          <target state="translated">이러한 레이아웃에 대한 설명은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="503550528bc86ec5d2191b4236089b4484a623f3" translate="yes" xml:space="preserve">
          <source>A descriptive message to be placed in the dialog box. In the most common usage, message is just a &lt;code&gt;String&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt; constant. However, the type of this parameter is actually &lt;code&gt;Object&lt;/code&gt;. Its interpretation depends on its type:</source>
          <target state="translated">대화 상자에 배치 할 설명 메시지입니다. 가장 일반적인 사용법에서 메시지는 &lt;code&gt;String&lt;/code&gt; 또는 &lt;code&gt;String&lt;/code&gt; 상수입니다. 그러나이 매개 변수의 유형은 실제로 &lt;code&gt;Object&lt;/code&gt; 입니다. 해석은 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="941de8ae14a5bae60a5d906de62f015bbb32d97b" translate="yes" xml:space="preserve">
          <source>A descriptive string</source>
          <target state="translated">설명 문자열</target>
        </trans-unit>
        <trans-unit id="39b6b0c8659ae33eb1969916bc67e68279e3a0d9" translate="yes" xml:space="preserve">
          <source>A descriptor can be mutable or immutable. An immutable descriptor, once created, never changes. The &lt;code&gt;Descriptor&lt;/code&gt; methods that could modify the contents of the descriptor will throw an exception for an immutable descriptor. Immutable descriptors are usually instances of &lt;a href=&quot;immutabledescriptor&quot;&gt;&lt;code&gt;ImmutableDescriptor&lt;/code&gt;&lt;/a&gt; or a subclass. Mutable descriptors are usually instances of &lt;a href=&quot;modelmbean/descriptorsupport&quot;&gt;&lt;code&gt;DescriptorSupport&lt;/code&gt;&lt;/a&gt; or a subclass.</source>
          <target state="translated">디스크립터는 변경 가능하거나 변경 불가능할 수 있습니다. 변경 불가능한 디스크립터는 일단 작성된 후에는 변경되지 않습니다. 디스크립터의 내용을 수정할 수 있는 &lt;code&gt;Descriptor&lt;/code&gt; 메소드는 변경 불가능한 디스크립터에 대한 예외를 발생시킵니다. 불변 설명자는 일반적으로 &lt;a href=&quot;immutabledescriptor&quot;&gt; &lt;code&gt;ImmutableDescriptor&lt;/code&gt; &lt;/a&gt; 또는 서브 클래스의 인스턴스입니다 . 가변 디스크립터는 대개 &lt;a href=&quot;modelmbean/descriptorsupport&quot;&gt; &lt;code&gt;DescriptorSupport&lt;/code&gt; &lt;/a&gt; 또는 서브 클래스의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="72904f35789eb5719433f738c8b55b480e3f7be2" translate="yes" xml:space="preserve">
          <source>A descriptor consists of a collection of fields. Each field is in fieldname=fieldvalue format. Field names are not case sensitive, case will be preserved on field values.</source>
          <target state="translated">디스크립터는 필드 콜렉션으로 구성됩니다. 각 필드는 fieldname = fieldvalue 형식입니다. 필드 이름은 대소 문자를 구분하지 않으며 필드 값에 대소 문자가 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="90bc82ff659998d45e1e39ffda8cb824fc0bfa07" translate="yes" xml:space="preserve">
          <source>A descriptor registered with the activation system can be used to recreate/activate the object specified by the descriptor. The &lt;code&gt;MarshalledObject&lt;/code&gt; in the object's descriptor is passed as the second argument to the remote object's constructor for object to use during reinitialization/activation.</source>
          <target state="translated">활성화 시스템에 등록 된 디스크립터를 사용하여 디스크립터에서 지정한 객체를 재생성 / 활성화 할 수 있습니다. &lt;code&gt;MarshalledObject&lt;/code&gt; 의 객체의 설명에 재 초기화 / 활성화하는 동안 사용할 객체에 대한 원격 객체의 생성자에 두 번째 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="f0ff2df0a69862e0b2488b671e2b54a0b5b5e113" translate="yes" xml:space="preserve">
          <source>A descriptor which is equal to this descriptor.</source>
          <target state="translated">이 디스크립터와 동일한 디스크립터입니다.</target>
        </trans-unit>
        <trans-unit id="8b2a24b623eccf5a9645ac3decd3f1d344237a87" translate="yes" xml:space="preserve">
          <source>A diagnostic command may or may not support options or arguments. All the operations return &lt;code&gt;String&lt;/code&gt; and either take no parameter for operations that do not support any option or argument, or take a &lt;code&gt;String[]&lt;/code&gt; parameter for operations that support at least one option or argument. Each option or argument must be stored in a single String. Options or arguments split across several String instances are not supported.</source>
          <target state="translated">진단 명령은 옵션이나 인수를 지원하거나 지원하지 않을 수 있습니다. 모든 작업은 &lt;code&gt;String&lt;/code&gt; 을 반환 하고 옵션 또는 인수를 지원하지 않는 작업에 대해서는 매개 변수를 사용하지 않거나 하나 이상의 옵션 또는 인수를 지원하는 작업에 대해서는 &lt;code&gt;String[]&lt;/code&gt; 매개 변수를 사용합니다. 각 옵션 또는 인수는 단일 문자열에 저장되어야합니다. 여러 String 인스턴스로 분할 된 옵션 또는 인수는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4b102a703f2ede2ee34cfdc855003bf78429b505" translate="yes" xml:space="preserve">
          <source>A dialog can be either modeless (the default) or modal. A modal dialog is one which blocks input to some other top-level windows in the application, except for any windows created with the dialog as their owner. See &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/Modality.html&quot;&gt;AWT Modality&lt;/a&gt; specification for details.</source>
          <target state="translated">대화 상자는 모덜리스 (기본값) 또는 모달 일 수 있습니다. 모달 대화 상자는 대화 상자를 소유자로 사용하여 만든 모든 창을 제외하고 응용 프로그램의 다른 최상위 창에 대한 입력을 차단하는 대화 상자입니다. 자세한 내용은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/Modality.html&quot;&gt;AWT 양식&lt;/a&gt; 사양을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fc8f2c65df5aea7a55b5208f4ea73e494b161cb9" translate="yes" xml:space="preserve">
          <source>A dialog can be either modeless (the default) or modal. A modal dialog is one which blocks input to some other top-level windows in the application, except for any windows created with the dialog as their owner. See &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/Modality.html&quot;&gt;AWT Modality&lt;/a&gt; specification for details.</source>
          <target state="translated">대화 상자는 모덜리스 (기본값) 또는 모달 일 수 있습니다. 모달 대화 상자는 대화 상자를 소유자로 사용하여 만든 모든 창을 제외하고 응용 프로그램의 다른 최상위 창에 대한 입력을 차단하는 대화 상자입니다. 자세한 내용은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/Modality.html&quot;&gt;AWT Modality&lt;/a&gt; 사양을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="904d1f2e68b031295de8cafe7035cb526e4f3232" translate="yes" xml:space="preserve">
          <source>A dialog may have another window as its owner when it's constructed. When the owner window of a visible dialog is minimized, the dialog will automatically be hidden from the user. When the owner window is subsequently restored, the dialog is made visible to the user again.</source>
          <target state="translated">대화 상자는 구성 될 때 소유자로 다른 창을 가질 수 있습니다. 표시되는 대화 상자의 소유자 창이 최소화되면 대화 상자가 자동으로 사용자에게 표시되지 않습니다. 이후에 소유자 창이 복원되면 대화 상자가 사용자에게 다시 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f495413b1396c36454c52331f1acea05a9263eaf" translate="yes" xml:space="preserve">
          <source>A dialog may have its native decorations (i.e. Frame &amp;amp; Titlebar) turned off with &lt;code&gt;setUndecorated&lt;/code&gt;. This can only be done while the dialog is not &lt;a href=&quot;component#isDisplayable()&quot;&gt;&lt;code&gt;displayable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대화 상자의 기본 장식 (예 : 프레임 및 제목 표시 줄)은 &lt;code&gt;setUndecorated&lt;/code&gt; 로 꺼져있을 수 있습니다 . 이 작업은 대화 상자가 &lt;a href=&quot;component#isDisplayable()&quot;&gt; &lt;code&gt;displayable&lt;/code&gt; &lt;/a&gt; 되지 않는 동안에 만 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f2ac3be272a0574021e64ac6b1513e44e8223162" translate="yes" xml:space="preserve">
          <source>A digit: &lt;code&gt;[0-9]&lt;/code&gt;</source>
          <target state="translated">숫자 : &lt;code&gt;[0-9]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e55b37ed13f5e44ba0fa6d222acf00463637355" translate="yes" xml:space="preserve">
          <source>A digit: &lt;code&gt;\p{IsDigit}&lt;/code&gt;</source>
          <target state="translated">숫자 : &lt;code&gt;\p{IsDigit}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e1c6320bfe897efcad522bedce59a1bf3c1d0a0" translate="yes" xml:space="preserve">
          <source>A direct byte buffer mapped to a region of a file</source>
          <target state="translated">파일 영역에 매핑 된 직접 바이트 버퍼</target>
        </trans-unit>
        <trans-unit id="0fc1a07aefb0815717141569b5cba4c4d5206598" translate="yes" xml:space="preserve">
          <source>A direct byte buffer may also be created by &lt;a href=&quot;channels/filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt;&lt;code&gt;mapping&lt;/code&gt;&lt;/a&gt; a region of a file directly into memory. An implementation of the Java platform may optionally support the creation of direct byte buffers from native code via JNI. If an instance of one of these kinds of buffers refers to an inaccessible region of memory then an attempt to access that region will not change the buffer's content and will cause an unspecified exception to be thrown either at the time of the access or at some later time.</source>
          <target state="translated">직접 바이트 버퍼는 파일 영역을 메모리에 직접 &lt;a href=&quot;channels/filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt; &lt;code&gt;mapping&lt;/code&gt; &lt;/a&gt; 하여 만들 수도 있습니다 . Java 플랫폼의 구현은 JNI를 통해 네이티브 코드에서 직접 바이트 버퍼 생성을 선택적으로 지원할 수 있습니다. 이러한 종류의 버퍼 중 하나의 인스턴스가 액세스 할 수없는 메모리 영역을 참조하는 경우 해당 영역에 액세스하려는 시도는 버퍼의 내용을 변경하지 않으며 액세스시 또는 나중에 지정되지 않은 예외가 발생하도록합니다. 시각.</target>
        </trans-unit>
        <trans-unit id="81aaa261b81128af12881c936333c5551a92c591" translate="yes" xml:space="preserve">
          <source>A direct byte buffer may also be created by &lt;a href=&quot;channels/filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt;&lt;code&gt;mapping&lt;/code&gt;&lt;/a&gt; a region of a file directly into memory. An implementation of the Java platform may optionally support the creation of direct byte buffers from native code via JNI. If an instance of one of these kinds of buffers refers to an inaccessible region of memory then an attempt to access that region will not change the buffer's content and will cause an unspecified exception to be thrown either at the time of the access or at some later time.</source>
          <target state="translated">A direct byte buffer may also be created by &lt;a href=&quot;channels/filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt; &lt;code&gt;mapping&lt;/code&gt; &lt;/a&gt; a region of a file directly into memory. An implementation of the Java platform may optionally support the creation of direct byte buffers from native code via JNI. If an instance of one of these kinds of buffers refers to an inaccessible region of memory then an attempt to access that region will not change the buffer's content and will cause an unspecified exception to be thrown either at the time of the access or at some later time.</target>
        </trans-unit>
        <trans-unit id="337623b1fe9aafecb2caab98fab459cf9372f5c9" translate="yes" xml:space="preserve">
          <source>A direct byte buffer may be created by invoking the &lt;a href=&quot;#allocateDirect(int)&quot;&gt;&lt;code&gt;allocateDirect&lt;/code&gt;&lt;/a&gt; factory method of this class. The buffers returned by this method typically have somewhat higher allocation and deallocation costs than non-direct buffers. The contents of direct buffers may reside outside of the normal garbage-collected heap, and so their impact upon the memory footprint of an application might not be obvious. It is therefore recommended that direct buffers be allocated primarily for large, long-lived buffers that are subject to the underlying system's native I/O operations. In general it is best to allocate direct buffers only when they yield a measurable gain in program performance.</source>
          <target state="translated">이 클래스 의 &lt;a href=&quot;#allocateDirect(int)&quot;&gt; &lt;code&gt;allocateDirect&lt;/code&gt; &lt;/a&gt; 팩토리 메소드를 호출하여 직접 바이트 버퍼를 생성 할 수 있습니다 . 이 메서드에 의해 반환되는 버퍼는 일반적으로 간접 버퍼보다 ​​할당 및 할당 해제 비용이 다소 높습니다. 직접 버퍼의 내용은 일반적인 가비지 수집 힙 외부에있을 수 있으므로 응용 프로그램의 메모리 풋 프린트에 미치는 영향이 명확하지 않을 수 있습니다. 따라서 기본 시스템의 기본 I / O 작업의 영향을받는 크고 수명이 긴 버퍼에 주로 직접 버퍼를 할당하는 것이 좋습니다. 일반적으로 프로그램 성능에서 측정 가능한 이득을 얻을 때만 직접 버퍼를 할당하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="cbbe5c24c618f05f3ad9a84e48d3d7e4a20571df" translate="yes" xml:space="preserve">
          <source>A direct byte buffer may be created by invoking the &lt;a href=&quot;#allocateDirect(int)&quot;&gt;&lt;code&gt;allocateDirect&lt;/code&gt;&lt;/a&gt; factory method of this class. The buffers returned by this method typically have somewhat higher allocation and deallocation costs than non-direct buffers. The contents of direct buffers may reside outside of the normal garbage-collected heap, and so their impact upon the memory footprint of an application might not be obvious. It is therefore recommended that direct buffers be allocated primarily for large, long-lived buffers that are subject to the underlying system's native I/O operations. In general it is best to allocate direct buffers only when they yield a measureable gain in program performance.</source>
          <target state="translated">이 클래스 의 &lt;a href=&quot;#allocateDirect(int)&quot;&gt; &lt;code&gt;allocateDirect&lt;/code&gt; &lt;/a&gt; 팩토리 메소드를 호출하여 직접 바이트 버퍼를 생성 할 수 있습니다 . 이 메서드에서 반환하는 버퍼는 일반적으로 간접 버퍼보다 ​​할당 및 할당 해제 비용이 다소 높습니다. 직접 버퍼의 내용은 일반적인 가비지 수집 힙 외부에있을 수 있으므로 응용 프로그램의 메모리 풋 프린트에 미치는 영향이 명확하지 않을 수 있습니다. 따라서 기본 시스템의 기본 I / O 작업의 영향을받는 크고 수명이 긴 버퍼에 주로 직접 버퍼를 할당하는 것이 좋습니다. 일반적으로 프로그램 성능에서 측정 가능한 이득을 얻을 때만 직접 버퍼를 할당하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="ab01d4bccb2016b6742b55c3ca10eb76a7c66d26" translate="yes" xml:space="preserve">
          <source>A direct byte buffer may be created by invoking the &lt;a href=&quot;bytebuffer#allocateDirect-int-&quot;&gt;&lt;code&gt;allocateDirect&lt;/code&gt;&lt;/a&gt; factory method of this class. The buffers returned by this method typically have somewhat higher allocation and deallocation costs than non-direct buffers. The contents of direct buffers may reside outside of the normal garbage-collected heap, and so their impact upon the memory footprint of an application might not be obvious. It is therefore recommended that direct buffers be allocated primarily for large, long-lived buffers that are subject to the underlying system's native I/O operations. In general it is best to allocate direct buffers only when they yield a measureable gain in program performance.</source>
          <target state="translated">직접 바이트 버퍼는 이 클래스 의 &lt;a href=&quot;bytebuffer#allocateDirect-int-&quot;&gt; &lt;code&gt;allocateDirect&lt;/code&gt; &lt;/a&gt; 팩토리 메소드를 호출하여 작성할 수 있습니다 . 이 방법으로 반환 된 버퍼는 일반적으로 비 직접 버퍼보다 ​​할당 및 할당 취소 비용이 약간 높습니다. 직접 버퍼의 내용은 일반 가비지 수집 힙 외부에있을 수 있으므로 응용 프로그램의 메모리 공간에 미치는 영향이 명확하지 않을 수 있습니다. 따라서 기본 시스템의 기본 I / O 작업이 적용되는 오래 지속되는 대용량 버퍼에 직접 버퍼를 할당하는 것이 좋습니다. 일반적으로 직접 버퍼는 프로그램 성능에서 측정 가능한 이득을 얻을 때만 할당하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="9e62af31304449a0e8e9997671ca8cef65fe0060" translate="yes" xml:space="preserve">
          <source>A direct byte buffer whose content is a memory-mapped region of a file.</source>
          <target state="translated">내용이 파일의 메모리 매핑 영역 인 직접 바이트 버퍼.</target>
        </trans-unit>
        <trans-unit id="27d710eefe649a75a4ba4bf7f513ec23a73d1bf8" translate="yes" xml:space="preserve">
          <source>A direct method handle reference kind, as defined in the &lt;a href=&quot;methodhandleinfo#refkinds&quot;&gt;table above&lt;/a&gt;.</source>
          <target state="translated">직접적인 방법 핸들 참조 종류의 항에 &lt;a href=&quot;methodhandleinfo#refkinds&quot;&gt;상술 한 테이블&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c4d94bf1cbf3f0b6e58c8d46620a3904bfb67dc" translate="yes" xml:space="preserve">
          <source>A directory might return more attributes than was requested (see &lt;strong&gt;Attribute Type Names&lt;/strong&gt; in the class description), but is not allowed to return arbitrary, unrelated attributes.</source>
          <target state="translated">디렉토리가 요청한 것보다 많은 속성 을 리턴 할 수 있지만 (클래스 설명의 &lt;strong&gt;속성 유형 이름&lt;/strong&gt; 참조 ) 임의의 관련없는 속성을 리턴 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2f43b3eeaa9f2985c2c0a2500f1ecaf8cf55ba57" translate="yes" xml:space="preserve">
          <source>A directory might return more attributes than were requested (see &lt;strong&gt;Attribute Type Names&lt;/strong&gt; in the class description) but is not allowed to return arbitrary, unrelated attributes.</source>
          <target state="translated">디렉토리가 요청한 것보다 많은 속성 을 리턴 할 수 있지만 (클래스 설명의 &lt;strong&gt;속성 유형 이름&lt;/strong&gt; 참조 ) 임의의 관련없는 속성을 리턴 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="03fe397e85f8a42f3fbf743c8747c214f39a12ce" translate="yes" xml:space="preserve">
          <source>A directory stream is not required to be</source>
          <target state="translated">디렉토리 스트림은 필요하지 않습니다</target>
        </trans-unit>
        <trans-unit id="688f381d5ef6e2e50ea91339058716db8dfc57cc" translate="yes" xml:space="preserve">
          <source>A disconnected &lt;code&gt;RowSet&lt;/code&gt; object that has implemented the &lt;code&gt;RowSetInternal&lt;/code&gt; interface can call on its reader (the &lt;code&gt;RowSetReader&lt;/code&gt; object associated with it) to populate it with data. When an application calls the &lt;code&gt;RowSet.execute&lt;/code&gt; method, that method calls on the rowset's reader to do much of the work. Implementations can vary widely, but generally a reader makes a connection to the data source, reads data from the data source and populates the rowset with it, and closes the connection. A reader may also update the &lt;code&gt;RowSetMetaData&lt;/code&gt; object for its rowset. The rowset's internal state is also updated, either by the reader or directly by the method &lt;code&gt;RowSet.execute&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RowSetInternal&lt;/code&gt; 인터페이스 를 구현 한 연결이 끊어진 &lt;code&gt;RowSet&lt;/code&gt; 개체 는 판독기 ( 연관된 &lt;code&gt;RowSetReader&lt;/code&gt; 개체)를 호출 하여 데이터로 채울 수 있습니다. 응용 프로그램이 &lt;code&gt;RowSet.execute&lt;/code&gt; 메서드를 호출하면 해당 메서드는 행 집합의 판독기를 호출하여 많은 작업을 수행합니다. 구현은 매우 다양 할 수 있지만 일반적으로 판독기는 데이터 원본에 연결하고 데이터 원본에서 데이터를 읽고 데이터 원본으로 행 집합을 채우고 연결을 닫습니다. 판독기는 행 집합에 대한 &lt;code&gt;RowSetMetaData&lt;/code&gt; 개체를 업데이트 할 수도 있습니다 . 행 집합의 내부 상태도 판독기에 의해 또는 &lt;code&gt;RowSet.execute&lt;/code&gt; 메서드에 의해 직접 업데이트됩니다 .</target>
        </trans-unit>
        <trans-unit id="110186d8a895ddbb678f6d03ccace1c416a9dfda" translate="yes" xml:space="preserve">
          <source>A disconnected &lt;code&gt;RowSet&lt;/code&gt; object that has implemented the &lt;code&gt;RowSetInternal&lt;/code&gt; interface can call on its writer (the &lt;code&gt;RowSetWriter&lt;/code&gt; object associated with it) to write changes back to the underlying data source. Implementations may vary widely, but generally, a writer will do the following:</source>
          <target state="translated">&lt;code&gt;RowSetInternal&lt;/code&gt; 인터페이스 를 구현 한 연결이 끊어진 &lt;code&gt;RowSet&lt;/code&gt; 개체는 해당 작성기 ( 연관된 &lt;code&gt;RowSetWriter&lt;/code&gt; 개체)를 호출 하여 기본 데이터 소스에 변경 내용을 다시 쓸 수 있습니다. 구현은 매우 다양 할 수 있지만 일반적으로 작성자는 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="450d789fb4ad236790f5011ec44343669706eef9" translate="yes" xml:space="preserve">
          <source>A disconnected &lt;code&gt;RowSet&lt;/code&gt; object, such as a &lt;code&gt;CachedRowSet&lt;/code&gt; object, &lt;b&gt;should&lt;/b&gt; delegate connection management to a &lt;code&gt;SyncProvider&lt;/code&gt; object provided by the &lt;code&gt;SyncFactory&lt;/code&gt;. To ensure fully disconnected semantics, all disconnected &lt;code&gt;RowSet&lt;/code&gt; objects &lt;b&gt;must&lt;/b&gt; ensure that the original connection made to the data source to populate the &lt;code&gt;RowSet&lt;/code&gt; object is closed to permit the garbage collector to recover and release resources. The &lt;code&gt;SyncProvider&lt;/code&gt; object ensures that the critical JDBC properties are maintained in order to re-establish a connection to the data source when a synchronization is required. A disconnected &lt;code&gt;RowSet&lt;/code&gt; object should therefore ensure that no extraneous references remain on the &lt;code&gt;Connection&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; 객체 와 같이 연결이 끊어진 &lt;code&gt;RowSet&lt;/code&gt; 객체 는 &lt;code&gt;SyncFactory&lt;/code&gt; 에서 제공 하는 &lt;code&gt;SyncProvider&lt;/code&gt; 객체에 연결 관리를 위임 &lt;b&gt;해야합니다&lt;/b&gt; . 완전히 분리 의미를 보장하기 위해 모든 분리 &lt;code&gt;RowSet&lt;/code&gt; 객체가 &lt;b&gt;있어야&lt;/b&gt; 채우기 위해 원의 데이터 소스 접속이 보장 &lt;code&gt;RowSet&lt;/code&gt; 객체가 복구 릴리스 자원을 가비지 컬렉터를 허용하는 닫힙니다. &lt;code&gt;SyncProvider&lt;/code&gt; 동기화가 필요한 경우 JDBC 중요한 특성은하기 위해 유지되는 것을 보장하는 오브젝트 데이터 소스에 접속을 재 확립. 연결이 끊긴 &lt;code&gt;RowSet&lt;/code&gt; &lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;따라서 개체는 &lt;code&gt;Connection&lt;/code&gt; 개체 에 불필요한 참조가 남아 있지 않도록해야 합니다.</target>
        </trans-unit>
        <trans-unit id="0f70425adb4860eace6ccc351f6a243d8c310126" translate="yes" xml:space="preserve">
          <source>A disconnected &lt;code&gt;Rowset&lt;/code&gt; object may get access to a &lt;code&gt;SyncProvider&lt;/code&gt; object in one of the following two ways:</source>
          <target state="translated">연결이 끊어진 &lt;code&gt;Rowset&lt;/code&gt; 개체는 다음 두 가지 방법 중 하나로 &lt;code&gt;SyncProvider&lt;/code&gt; 개체에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f36a9dca7441e97c0bdb8885b48b0430dc5dcf59" translate="yes" xml:space="preserve">
          <source>A disconnected rowset may have a &lt;code&gt;Reader&lt;/code&gt; (a &lt;code&gt;RowSetReader&lt;/code&gt; object) and a writer (a &lt;code&gt;RowSetWriter&lt;/code&gt; object) associated with it. The &lt;code&gt;Reader&lt;/code&gt; may be implemented in many different ways to populate a rowset with data, including getting data from a non-relational data source. The writer can also be implemented in many different ways to propagate changes made to the rowset's data back to the underlying data source.</source>
          <target state="translated">연결이 끊어진 행 집합에는 &lt;code&gt;Reader&lt;/code&gt; ( &lt;code&gt;RowSetReader&lt;/code&gt; 개체) 및 기록기 ( &lt;code&gt;RowSetWriter&lt;/code&gt; 개체)가 연결되어있을 수 있습니다. &lt;code&gt;Reader&lt;/code&gt; 비 관계형 데이터 소스에서 데이터를 가져 오는 포함하여 데이터 행 집합을 채우는 여러 가지 방법으로 구현 될 수있다. 기록기는 행 집합의 데이터에 대한 변경 사항을 기본 데이터 원본으로 다시 전파하기 위해 여러 가지 방법으로 구현 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="24aaafb4de473bcceb6c1a588033ca327c736e00" translate="yes" xml:space="preserve">
          <source>A discussion of the use of dynamically typesafe views may be found in the documentation for the &lt;a href=&quot;#checkedCollection(java.util.Collection,java.lang.Class)&quot;&gt;&lt;code&gt;checkedCollection&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">동적 형식이 안전한 뷰 사용에 대한 설명은 &lt;a href=&quot;#checkedCollection(java.util.Collection,java.lang.Class)&quot;&gt; &lt;code&gt;checkedCollection&lt;/code&gt; &lt;/a&gt; 메서드 에 대한 설명서에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1daa8bbdabafd9fce66bb5e5f6f1d901814d2276" translate="yes" xml:space="preserve">
          <source>A discussion of the use of dynamically typesafe views may be found in the documentation for the &lt;a href=&quot;collections#checkedCollection-java.util.Collection-java.lang.Class-&quot;&gt;&lt;code&gt;checkedCollection&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">dynamictypesafe 뷰 사용에 대한 설명은 &lt;a href=&quot;collections#checkedCollection-java.util.Collection-java.lang.Class-&quot;&gt; &lt;code&gt;checkedCollection&lt;/code&gt; &lt;/a&gt; 메소드 의 문서에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5bf7cdfb210761e58612920806cc60028cef0dee" translate="yes" xml:space="preserve">
          <source>A display area for a short text string or an image, or both.</source>
          <target state="translated">짧은 텍스트 문자열이나 이미지 또는 둘 다를위한 표시 영역입니다.</target>
        </trans-unit>
        <trans-unit id="5a434aab2ca42e2ccca690bb12ce75fe97d8f206" translate="yes" xml:space="preserve">
          <source>A display area for a short text string or an image, or both. A label does not react to input events. As a result, it cannot get the keyboard focus. A label can, however, display a keyboard alternative as a convenience for a nearby component that has a keyboard alternative but can't display it.</source>
          <target state="translated">짧은 텍스트 문자열이나 이미지 또는 둘 다를위한 표시 영역입니다. 라벨은 입력 이벤트에 반응하지 않습니다. 결과적으로 키보드 포커스를 얻을 수 없습니다. 그러나 레이블은 대체 키보드가 있지만 표시 할 수없는 주변 구성 요소의 편의를 위해 대체 키보드를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2af42f197ce8c147ed5af6ab9abbb20857cbf9da" translate="yes" xml:space="preserve">
          <source>A distinct rendering area of a Swing component.</source>
          <target state="translated">Swing 구성 요소의 고유 한 렌더링 영역입니다.</target>
        </trans-unit>
        <trans-unit id="4b400d01f64cbdd08143ab0c640264ea343ecb60" translate="yes" xml:space="preserve">
          <source>A distinct rendering area of a Swing component. A component may support one or more regions. Specific component regions are defined by the typesafe enumeration in this class.</source>
          <target state="translated">Swing 구성 요소의 고유 한 렌더링 영역입니다. 구성 요소는 하나 이상의 영역을 지원할 수 있습니다. 특정 구성 요소 영역은이 클래스의 typesafe 열거에 의해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="880fb129a686d82ae7e8a1faddba49404e033c38" translate="yes" xml:space="preserve">
          <source>A do-nothing constructor.</source>
          <target state="translated">아무것도하지 않는 생성자.</target>
        </trans-unit>
        <trans-unit id="ba128ff46d6d09091f6de642d4da3a2a3af5bf2f" translate="yes" xml:space="preserve">
          <source>A document that can be marked up with character and paragraph styles in a manner similar to the Rich Text Format.</source>
          <target state="translated">서식있는 텍스트 형식과 유사한 방식으로 문자 및 단락 스타일로 마크 업할 수있는 문서입니다.</target>
        </trans-unit>
        <trans-unit id="6466e47872811247292613ad06e41649e2466883" translate="yes" xml:space="preserve">
          <source>A document that can be marked up with character and paragraph styles in a manner similar to the Rich Text Format. The element structure for this document represents style crossings for style runs. These style runs are mapped into a paragraph element structure (which may reside in some other structure). The style runs break at paragraph boundaries since logical styles are assigned to paragraph boundaries.</source>
          <target state="translated">서식있는 텍스트 형식과 유사한 방식으로 문자 및 단락 스타일로 마크 업할 수있는 문서입니다. 이 문서의 요소 구조는 스타일 런에 대한 스타일 교차를 나타냅니다. 이러한 스타일 실행은 단락 요소 구조 (다른 구조에있을 수 있음)에 매핑됩니다. 논리 스타일이 단락 경계에 지정되므로 스타일이 단락 경계에서 끊어집니다.</target>
        </trans-unit>
        <trans-unit id="9cf5b610d9afca74d207b8d156cd175c162fb034" translate="yes" xml:space="preserve">
          <source>A document that models HTML.</source>
          <target state="translated">HTML을 모델링하는 문서.</target>
        </trans-unit>
        <trans-unit id="3463762c970ad57db4db9fc03ca463b94634ba5f" translate="yes" xml:space="preserve">
          <source>A document that models HTML. The purpose of this model is to support both browsing and editing. As a result, the structure described by an HTML document is not exactly replicated by default. The element structure that is modeled by default, is built by the class &lt;code&gt;HTMLDocument.HTMLReader&lt;/code&gt;, which implements the &lt;code&gt;HTMLEditorKit.ParserCallback&lt;/code&gt; protocol that the parser expects. To change the structure one can subclass &lt;code&gt;HTMLReader&lt;/code&gt;, and reimplement the method &lt;a href=&quot;#getReader(int)&quot;&gt;&lt;code&gt;getReader(int)&lt;/code&gt;&lt;/a&gt; to return the new reader implementation. The documentation for &lt;code&gt;HTMLReader&lt;/code&gt; should be consulted for the details of the default structure created. The intent is that the document be non-lossy (although reproducing the HTML format may result in a different format).</source>
          <target state="translated">HTML을 모델링하는 문서. 이 모델의 목적은 탐색과 편집을 모두 지원하는 것입니다. 결과적으로 HTML 문서에 설명 된 구조는 기본적으로 정확히 복제되지 않습니다. 기본적으로 모델링되는 요소 구조 는 파서가 예상 하는 &lt;code&gt;HTMLEditorKit.ParserCallback&lt;/code&gt; 프로토콜을 구현하는 &lt;code&gt;HTMLDocument.HTMLReader&lt;/code&gt; 클래스에 의해 빌드됩니다 . 구조를 변경하려면 &lt;code&gt;HTMLReader&lt;/code&gt; 하위 클래스를 만들고 &lt;a href=&quot;#getReader(int)&quot;&gt; &lt;code&gt;getReader(int)&lt;/code&gt; &lt;/a&gt; 메서드를 다시 구현 하여 새 판독기 구현을 반환 할 수 있습니다. &lt;code&gt;HTMLReader&lt;/code&gt; 에 대한 문서생성 된 기본 구조에 대한 자세한 내용은 문의해야합니다. 의도는 문서가 손실되지 않는 것입니다 (HTML 형식을 재현하면 다른 형식이 될 수 있음).</target>
        </trans-unit>
        <trans-unit id="b71c71564559739571d89dc193d01264a17d03d7" translate="yes" xml:space="preserve">
          <source>A documentation comment of an element is a comment that begins with &quot;&lt;code&gt;/**&lt;/code&gt;&quot; , ends with a separate &quot;&lt;code&gt;*/&lt;/code&gt;&quot;, and immediately precedes the element, ignoring white space. Therefore, a documentation comment contains at least three&quot;&lt;code&gt;*&lt;/code&gt;&quot; characters. The text returned for the documentation comment is a processed form of the comment as it appears in source code. The leading &quot;&lt;code&gt;
 /**&lt;/code&gt;&quot; and trailing &quot;&lt;code&gt;*/&lt;/code&gt;&quot; are removed. For lines of the comment starting after the initial &quot;&lt;code&gt;/**&lt;/code&gt;&quot;, leading white space characters are discarded as are any consecutive &quot;&lt;code&gt;*&lt;/code&gt;&quot; characters appearing after the white space or starting the line. The processed lines are then concatenated together (including line terminators) and returned.</source>
          <target state="translated">요소의 문서 주석은 &quot; &lt;code&gt;/**&lt;/code&gt; &quot;로 시작 하고 별도의 &quot; &lt;code&gt;*/&lt;/code&gt; &quot;로 끝나며 공백을 무시하고 요소 바로 앞에 오는 주석입니다 . 따라서 문서 주석에는 3 개 이상의 &quot; &lt;code&gt;*&lt;/code&gt; &quot;문자가 포함됩니다. 문서 주석에 대해 반환되는 텍스트는 소스 코드에 표시되는 주석의 처리 된 형식입니다. 선행 &quot; &lt;code&gt; /**&lt;/code&gt; &quot;및 후행 &quot; &lt;code&gt;*/&lt;/code&gt; &quot;이 제거됩니다. 첫 번째 &quot; &lt;code&gt;/**&lt;/code&gt; &quot; 이후에 시작하는 주석 행의 경우 선행 공백 문자는 연속 된 &quot; &lt;code&gt;*&lt;/code&gt; &quot;처럼 버려집니다.&quot;문자가 공백 뒤 또는 줄 시작 부분에 나타납니다. 처리 된 줄은 함께 연결되어 (줄 종결 자 포함) 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b3f4fef94aef2e7e91d9e397eff9c286026bcf3e" translate="yes" xml:space="preserve">
          <source>A documentation comment of an element is a comment that begins with &quot;&lt;code&gt;/**&lt;/code&gt;&quot; , ends with a separate &quot;&lt;code&gt;*/&lt;/code&gt;&quot;, and immediately precedes the element, ignoring white space. Therefore, a documentation comment contains at least three&quot;&lt;code&gt;*&lt;/code&gt;&quot; characters. The text returned for the documentation comment is a processed form of the comment as it appears in source code. The leading &quot;&lt;code&gt;/**&lt;/code&gt;&quot; and trailing &quot;&lt;code&gt;*/&lt;/code&gt;&quot; are removed. For lines of the comment starting after the initial &quot;&lt;code&gt;/**&lt;/code&gt;&quot;, leading white space characters are discarded as are any consecutive &quot;&lt;code&gt;*&lt;/code&gt;&quot; characters appearing after the white space or starting the line. The processed lines are then concatenated together (including line terminators) and returned.</source>
          <target state="translated">요소의 문서 주석은 &quot; &lt;code&gt;/**&lt;/code&gt; &quot;로 시작 하고 별도의 &quot; &lt;code&gt;*/&lt;/code&gt; &quot;로 끝나고 공백을 무시하고 요소 바로 앞에 오는 주석입니다 . 따라서 문서 주석에는 적어도 3 개의 &quot; &lt;code&gt;*&lt;/code&gt; &quot;문자가 포함됩니다. 문서 주석에 대해 리턴 된 텍스트는 소스 코드에 나타나는 주석의 처리 된 양식입니다. 선행 &quot; &lt;code&gt;/**&lt;/code&gt; &quot;및 후행 &quot; &lt;code&gt;*/&lt;/code&gt; &quot;가 제거됩니다. 초기 &quot; &lt;code&gt;/**&lt;/code&gt; &quot; 다음에 시작되는 주석 행의 경우 선행 공백 문자는 연속 &quot; &lt;code&gt;*&lt;/code&gt; 공백 다음에 문자가 나타나거나 줄을 시작합니다. 그런 다음 처리 된 줄이 함께 연결되고 (줄 종결자를 포함하여) 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="545f3669480c8808e321f44caf0afcd640b24087" translate="yes" xml:space="preserve">
          <source>A documentation comment of an element is a comment that begins with &quot;&lt;code&gt;/**&lt;/code&gt;&quot;, ends with a separate &quot;&lt;code&gt;*/&lt;/code&gt;&quot;, and immediately precedes the element, ignoring white space. Therefore, a documentation comment contains at least three &quot;&lt;code&gt;*&lt;/code&gt;&quot; characters. The text returned for the documentation comment is a processed form of the comment as it appears in source code. The leading &quot;&lt;code&gt;/**&lt;/code&gt;&quot; and trailing &quot;&lt;code&gt;*/&lt;/code&gt;&quot; are removed. For lines of the comment starting after the initial &quot;&lt;code&gt;/**&lt;/code&gt;&quot;, leading white space characters are discarded as are any consecutive &quot;&lt;code&gt;*&lt;/code&gt;&quot; characters appearing after the white space or starting the line. The processed lines are then concatenated together (including line terminators) and returned.</source>
          <target state="translated">요소의 문서 주석은 &quot; &lt;code&gt;/**&lt;/code&gt; &quot;로 시작 하고 별도의 &quot; &lt;code&gt;*/&lt;/code&gt; &quot;로 끝나며 공백을 무시하고 요소 바로 앞에 오는 주석입니다 . 따라서 문서 주석에는 3 개 이상의 &quot; &lt;code&gt;*&lt;/code&gt; &quot;문자가 포함됩니다. 문서 주석에 대해 반환 된 텍스트는 소스 코드에 표시되는 주석의 처리 된 형식입니다. 선행 &quot; &lt;code&gt;/**&lt;/code&gt; &quot;및 후행 &quot; &lt;code&gt;*/&lt;/code&gt; &quot;이 제거됩니다. 첫 번째 &quot; &lt;code&gt;/**&lt;/code&gt; &quot; 이후에 시작하는 주석 행의 경우 선행 공백 문자는 연속 된 &quot; &lt;code&gt;*&lt;/code&gt; &quot;처럼 버려집니다.&quot;문자가 공백 뒤 또는 줄 시작 부분에 나타납니다. 처리 된 줄은 함께 연결되어 (줄 종결 자 포함) 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8a519d07cd7e79c8044a66914a8a5c4fbc8d047e" translate="yes" xml:space="preserve">
          <source>A documentation for a candidate for continuation of the given user's input.</source>
          <target state="translated">주어진 사용자의 입력을 계속할 후보에 대한 문서입니다.</target>
        </trans-unit>
        <trans-unit id="fc953ed4ff12851c45b606c0dca273654084ace6" translate="yes" xml:space="preserve">
          <source>A domain name consisting of one or more</source>
          <target state="translated">하나 이상의 도메인으로 구성된 도메인 이름</target>
        </trans-unit>
        <trans-unit id="f0a13517cae5c3558d1607d5b802c6dbc9b72514" translate="yes" xml:space="preserve">
          <source>A dotted-quad IPv4 address of the form</source>
          <target state="translated">형식의 점으로 구분 된 IPv4 주소</target>
        </trans-unit>
        <trans-unit id="5a84dd1bce4cdbeb08becc1d7ae6d1d359e78aa6" translate="yes" xml:space="preserve">
          <source>A double buffer is not comparable to any other type of object.</source>
          <target state="translated">이중 버퍼는 다른 유형의 객체와 비교할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c42eb01adeccbb9bb551f09447b1ea18887c870f" translate="yes" xml:space="preserve">
          <source>A double buffer is not equal to any other type of object.</source>
          <target state="translated">이중 버퍼는 다른 유형의 객체와 동일하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eef80ddc49ceb62f77b5716e5156654ae8ddee60" translate="yes" xml:space="preserve">
          <source>A double buffer.</source>
          <target state="translated">더블 버퍼.</target>
        </trans-unit>
        <trans-unit id="c4de03a0777a17496e226bfbd9084bda84d187a9" translate="yes" xml:space="preserve">
          <source>A double click listener.</source>
          <target state="translated">더블 클릭 리스너.</target>
        </trans-unit>
        <trans-unit id="2eeb0e4ee0ca6dfa257886d6f97b74b0924e5fe0" translate="yes" xml:space="preserve">
          <source>A double value that represents the angular extent of the arc in degrees.</source>
          <target state="translated">호의 각도 범위를도 단위로 나타내는 double 값입니다.</target>
        </trans-unit>
        <trans-unit id="bcbb9667d570232b95d0a554b50eb130abe5a862" translate="yes" xml:space="preserve">
          <source>A double value that represents the starting angle of the arc in degrees.</source>
          <target state="translated">호의 시작 각도를 나타내는 double 값입니다.</target>
        </trans-unit>
        <trans-unit id="d0cec8f9e99dfd7dea921d292434a4c23e91e89f" translate="yes" xml:space="preserve">
          <source>A down-cycle focus traversal action.</source>
          <target state="translated">다운 사이클 포커스 순회 작업입니다.</target>
        </trans-unit>
        <trans-unit id="7dd676ca98f55c2728eafc7eed92cc4112f1eba4" translate="yes" xml:space="preserve">
          <source>A driver that is accessed via a &lt;code&gt;DataSource&lt;/code&gt; object does not register itself with the &lt;code&gt;DriverManager&lt;/code&gt;. Rather, a &lt;code&gt;DataSource&lt;/code&gt; object is retrieved through a lookup operation and then used to create a &lt;code&gt;Connection&lt;/code&gt; object. With a basic implementation, the connection obtained through a &lt;code&gt;DataSource&lt;/code&gt; object is identical to a connection obtained through the &lt;code&gt;DriverManager&lt;/code&gt; facility.</source>
          <target state="translated">&lt;code&gt;DataSource&lt;/code&gt; 객체 를 통해 액세스되는 드라이버 는 &lt;code&gt;DriverManager&lt;/code&gt; 에 등록되지 않습니다 . 오히려 &lt;code&gt;DataSource&lt;/code&gt; 개체는 조회 작업을 통해 검색된 다음 &lt;code&gt;Connection&lt;/code&gt; 개체 를 만드는 데 사용됩니다 . 기본 구현에서 &lt;code&gt;DataSource&lt;/code&gt; 개체를 통해 얻은 연결은 &lt;code&gt;DriverManager&lt;/code&gt; 기능을 통해 얻은 연결과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="1f6b416a3bb637b910a1a9345bce82c1097d25bd" translate="yes" xml:space="preserve">
          <source>A dummy constructor.</source>
          <target state="translated">A dummy constructor.</target>
        </trans-unit>
        <trans-unit id="ec23e7b42341db8a34268a2d8f2135e2acccceeb" translate="yes" xml:space="preserve">
          <source>A duration of zero or one nanosecond would have no truncation effect. Passing one of these will return the underlying clock.</source>
          <target state="translated">0 또는 1 나노초의 지속 시간은 절단 효과가 없습니다. 이 중 하나를 전달하면 기본 시계가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="707ea64794ea49795fc1fbf1c5bb2e342b9a2947" translate="yes" xml:space="preserve">
          <source>A duration of zero would have no offsetting effect. Passing zero will return the underlying clock.</source>
          <target state="translated">지속 시간이 0이면 오프셋 효과가 없습니다. 0을 전달하면 기본 시계가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9b537f9aafa5416ef5331e31b922ae14170c2110" translate="yes" xml:space="preserve">
          <source>A dynamic call site is linked just before its first execution. The bootstrap method call implementing the linkage occurs within a thread that is attempting a first execution.</source>
          <target state="translated">동적 호출 사이트는 첫 실행 직전에 연결됩니다. 연결을 구현하는 부트 스트랩 메서드 호출은 첫 번째 실행을 시도하는 스레드 내에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="80f373678cec5d9f9816518ac0151384e5addeb3" translate="yes" xml:space="preserve">
          <source>A dynamic call site is originally in an unlinked state. In this state, there is no target method for the call site to invoke.</source>
          <target state="translated">동적 호출 사이트는 원래 연결되지 않은 상태입니다. 이 상태에서는 호출 사이트가 호출 할 대상 메소드가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a35f1d6c92b89c6d3284e21bbafa4993e9e55cab" translate="yes" xml:space="preserve">
          <source>A dynamic module can read the modules of all of the superinterfaces of a proxy class and the modules of the types referenced by all public method signatures of a proxy class. If a superinterface or a referenced type, say &lt;code&gt;T&lt;/code&gt;, is in a non-exported package, the &lt;a href=&quot;../module&quot;&gt;module&lt;/a&gt; of &lt;code&gt;T&lt;/code&gt; is updated to export the package of &lt;code&gt;T&lt;/code&gt; to the dynamic module.</source>
          <target state="translated">A dynamic module can read the modules of all of the superinterfaces of a proxy class and the modules of the types referenced by all public method signatures of a proxy class. If a superinterface or a referenced type, say &lt;code&gt;T&lt;/code&gt; , is in a non-exported package, the &lt;a href=&quot;../module&quot;&gt;module&lt;/a&gt; of &lt;code&gt;T&lt;/code&gt; is updated to export the package of &lt;code&gt;T&lt;/code&gt; to the dynamic module.</target>
        </trans-unit>
        <trans-unit id="ddb5ee4c0960e48c089f4d8e38609787b474d01d" translate="yes" xml:space="preserve">
          <source>A dynamic module is a named module generated at runtime. A proxy class defined in a dynamic module is encapsulated and not accessible to any module. Calling &lt;a href=&quot;constructor#newInstance(java.lang.Object...)&quot;&gt;&lt;code&gt;Constructor.newInstance(Object...)&lt;/code&gt;&lt;/a&gt; on a proxy class in a dynamic module will throw &lt;code&gt;IllegalAccessException&lt;/code&gt;; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; method should be used instead.</source>
          <target state="translated">A dynamic module is a named module generated at runtime. A proxy class defined in a dynamic module is encapsulated and not accessible to any module. Calling &lt;a href=&quot;constructor#newInstance(java.lang.Object...)&quot;&gt; &lt;code&gt;Constructor.newInstance(Object...)&lt;/code&gt; &lt;/a&gt; on a proxy class in a dynamic module will throw &lt;code&gt;IllegalAccessException&lt;/code&gt; ; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; method should be used instead.</target>
        </trans-unit>
        <trans-unit id="e0e84d0f37ed837b18dc38b43e9581df209ca4d8" translate="yes" xml:space="preserve">
          <source>A facility for threads to schedule tasks for future execution in a background thread.</source>
          <target state="translated">스레드가 백그라운드 스레드에서 향후 실행을 위해 작업을 예약하는 기능입니다.</target>
        </trans-unit>
        <trans-unit id="bdaa3fdd98dc8ca4ca47e134d4bacf3327c2afba" translate="yes" xml:space="preserve">
          <source>A facility for threads to schedule tasks for future execution in a background thread. Tasks may be scheduled for one-time execution, or for repeated execution at regular intervals.</source>
          <target state="translated">스레드가 백그라운드 스레드에서 향후 실행을 위해 작업을 예약하는 기능입니다. 작업은 한 번만 실행하거나 정기적으로 반복적으로 실행되도록 예약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9eb599a894d1362c773f87be709e799cd7ba2e0d" translate="yes" xml:space="preserve">
          <source>A facility to load implementations of a service.</source>
          <target state="translated">A facility to load implementations of a service.</target>
        </trans-unit>
        <trans-unit id="3e9d6b0d519e0d5df9d38026b8e9f08942170f60" translate="yes" xml:space="preserve">
          <source>A factory API that enables applications to obtain a &lt;code&gt;RowSetFactory&lt;/code&gt; implementation that can be used to create different types of &lt;code&gt;RowSet&lt;/code&gt; implementations.</source>
          <target state="translated">A factory API that enables applications to obtain a &lt;code&gt;RowSetFactory&lt;/code&gt; implementation that can be used to create different types of &lt;code&gt;RowSet&lt;/code&gt; implementations.</target>
        </trans-unit>
        <trans-unit id="98d5a1240b4d6af21c0f0633cb83b9d2a9f2f464" translate="yes" xml:space="preserve">
          <source>A factory class for creating &lt;a href=&quot;dynamiclinker&quot;&gt;&lt;code&gt;DynamicLinker&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;dynamiclinker&quot;&gt; &lt;code&gt;DynamicLinker&lt;/code&gt; &lt;/a&gt; 개체 를 만들기위한 팩토리 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="5f32e2e60153bf31217181f139a7b507d0e43f61" translate="yes" xml:space="preserve">
          <source>A factory class for creating &lt;a href=&quot;dynamiclinker&quot;&gt;&lt;code&gt;DynamicLinker&lt;/code&gt;&lt;/a&gt; objects. Dynamic linkers are the central objects in Dynalink; these are composed of several &lt;a href=&quot;linker/guardingdynamiclinker&quot;&gt;&lt;code&gt;GuardingDynamicLinker&lt;/code&gt;&lt;/a&gt; objects and coordinate linking of call sites with them. The usual dynamic linker is a linker composed of all &lt;a href=&quot;linker/guardingdynamiclinker&quot;&gt;&lt;code&gt;GuardingDynamicLinker&lt;/code&gt;&lt;/a&gt; objects explicitly pre-created by the user of the factory and configured with &lt;a href=&quot;#setPrioritizedLinkers(java.util.List)&quot;&gt;&lt;code&gt;setPrioritizedLinkers(List)&lt;/code&gt;&lt;/a&gt;, as well as any &lt;a href=&quot;#setClassLoader(java.lang.ClassLoader)&quot;&gt;&lt;code&gt;automatically discovered&lt;/code&gt;&lt;/a&gt; ones, and finally the ones configured with &lt;a href=&quot;#setFallbackLinkers(java.util.List)&quot;&gt;&lt;code&gt;setFallbackLinkers(List)&lt;/code&gt;&lt;/a&gt;; this last category usually includes &lt;a href=&quot;beans/beanslinker&quot;&gt;&lt;code&gt;BeansLinker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;dynamiclinker&quot;&gt; &lt;code&gt;DynamicLinker&lt;/code&gt; &lt;/a&gt; 개체 를 만들기위한 팩토리 클래스입니다 . 동적 링커는 Dynalink의 중심 개체입니다. 이들은 여러 개의 &lt;a href=&quot;linker/guardingdynamiclinker&quot;&gt; &lt;code&gt;GuardingDynamicLinker&lt;/code&gt; &lt;/a&gt; 객체 로 구성되어 있으며 이들 과의 통화 사이트 연결을 조정합니다. 일반적인 동적 링커는 공장 사용자가 명시 적으로 사전 생성하고 &lt;a href=&quot;#setPrioritizedLinkers(java.util.List)&quot;&gt; &lt;code&gt;setPrioritizedLinkers(List)&lt;/code&gt; &lt;/a&gt; 로 구성된 모든 &lt;a href=&quot;linker/guardingdynamiclinker&quot;&gt; &lt;code&gt;GuardingDynamicLinker&lt;/code&gt; &lt;/a&gt; 객체 로 구성된 링커 와 &lt;a href=&quot;#setClassLoader(java.lang.ClassLoader)&quot;&gt; &lt;code&gt;automatically discovered&lt;/code&gt; &lt;/a&gt; 모든 &lt;a href=&quot;#setFallbackLinkers(java.util.List)&quot;&gt; &lt;code&gt;setFallbackLinkers(List)&lt;/code&gt; &lt;/a&gt; , 마지막으로 setFallbackLinkers (List)로 구성된 객체로 구성됩니다 . 이 마지막 범주에는 일반적으로 &lt;a href=&quot;beans/beanslinker&quot;&gt; &lt;code&gt;BeansLinker&lt;/code&gt; 가&lt;/a&gt; 포함 됩니다 .</target>
        </trans-unit>
        <trans-unit id="9d83bf4f0dfb948ac8ea59714cca2a0d1d7f915b" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;PooledConnection&lt;/code&gt; objects.</source>
          <target state="translated">A factory for &lt;code&gt;PooledConnection&lt;/code&gt; objects.</target>
        </trans-unit>
        <trans-unit id="4079df8510ea4b42042be30d372469553f00611f" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;PooledConnection&lt;/code&gt; objects. An object that implements this interface will typically be registered with a naming service that is based on the Java Naming and Directory Interface (JNDI).</source>
          <target state="translated">&lt;code&gt;PooledConnection&lt;/code&gt; 객체를 위한 팩토리입니다 . 이 인터페이스를 구현하는 객체는 일반적으로 JNDI (Java Naming and Directory Interface)를 기반으로하는 이름 지정 서비스에 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="ae5bf3593b2bc2ebbd3b41b8caf27d80db5b1246" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;PooledConnection&lt;/code&gt; objects. An object that implements this interface will typically be registered with a naming service that is based on the Java&amp;trade; Naming and Directory Interface (JNDI).</source>
          <target state="translated">A factory for &lt;code&gt;PooledConnection&lt;/code&gt; objects. An object that implements this interface will typically be registered with a naming service that is based on the Java&amp;trade; Naming and Directory Interface (JNDI).</target>
        </trans-unit>
        <trans-unit id="579b6f648f592b2c7ff6326232a8cd8cc173bf83" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;XAConnection&lt;/code&gt; objects that is used internally.</source>
          <target state="translated">A factory for &lt;code&gt;XAConnection&lt;/code&gt; objects that is used internally.</target>
        </trans-unit>
        <trans-unit id="2fd8a6518ad98e04361c5c6a8384cdf45536a3c3" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;XAConnection&lt;/code&gt; objects that is used internally. An object that implements the &lt;code&gt;XADataSource&lt;/code&gt; interface is typically registered with a naming service that uses the Java Naming and Directory Interface (JNDI).</source>
          <target state="translated">내부적으로 사용되는 &lt;code&gt;XAConnection&lt;/code&gt; 객체 의 팩토리입니다 . &lt;code&gt;XADataSource&lt;/code&gt; 인터페이스 를 구현하는 객체 는 일반적으로 JNDI (Java Naming and Directory Interface)를 사용하는 이름 지정 서비스에 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="10a7fb9a720b14cdeded353cb7a72ae0f53b0b28" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;XAConnection&lt;/code&gt; objects that is used internally. An object that implements the &lt;code&gt;XADataSource&lt;/code&gt; interface is typically registered with a naming service that uses the Java Naming and Directory Interface&amp;trade; (JNDI).</source>
          <target state="translated">A factory for &lt;code&gt;XAConnection&lt;/code&gt; objects that is used internally. An object that implements the &lt;code&gt;XADataSource&lt;/code&gt; interface is typically registered with a naming service that uses the Java Naming and Directory Interface&amp;trade; (JNDI).</target>
        </trans-unit>
        <trans-unit id="87f6ab02b247d5436eed5e9f5e2a03cd7e138648" translate="yes" xml:space="preserve">
          <source>A factory for CardTerminal objects.</source>
          <target state="translated">A factory for CardTerminal objects.</target>
        </trans-unit>
        <trans-unit id="02af8ac601cf2412d598ea387602eb65495daa2c" translate="yes" xml:space="preserve">
          <source>A factory for CardTerminal objects. It allows an application to</source>
          <target state="translated">A factory for CardTerminal objects. It allows an application to</target>
        </trans-unit>
        <trans-unit id="131e4fe4fdae1da728043a7c48a260ffd3f9c887" translate="yes" xml:space="preserve">
          <source>A factory for connections to the physical data source that this &lt;code&gt;DataSource&lt;/code&gt; object represents.</source>
          <target state="translated">A factory for connections to the physical data source that this &lt;code&gt;DataSource&lt;/code&gt; object represents.</target>
        </trans-unit>
        <trans-unit id="741aad3bec1fac6e74dc65ac9ade4f8d4def37e5" translate="yes" xml:space="preserve">
          <source>A factory for connections to the physical data source that this &lt;code&gt;DataSource&lt;/code&gt; object represents. An alternative to the &lt;code&gt;DriverManager&lt;/code&gt; facility, a &lt;code&gt;DataSource&lt;/code&gt; object is the preferred means of getting a connection. An object that implements the &lt;code&gt;DataSource&lt;/code&gt; interface will typically be registered with a naming service based on the Java Naming and Directory (JNDI) API.</source>
          <target state="translated">이 &lt;code&gt;DataSource&lt;/code&gt; 개체가 나타내는 실제 데이터 원본에 대한 연결을위한 팩토리입니다 . &lt;code&gt;DriverManager&lt;/code&gt; 기능 의 대안 인 &lt;code&gt;DataSource&lt;/code&gt; 객체는 연결을 얻는 데 선호되는 수단입니다. &lt;code&gt;DataSource&lt;/code&gt; 인터페이스 를 구현하는 객체 는 일반적으로 JNDI (Java Naming and Directory) API를 기반으로하는 이름 지정 서비스에 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="fac16fd026dbf49e9965916a11212b5c068ba6ed" translate="yes" xml:space="preserve">
          <source>A factory for connections to the physical data source that this &lt;code&gt;DataSource&lt;/code&gt; object represents. An alternative to the &lt;code&gt;DriverManager&lt;/code&gt; facility, a &lt;code&gt;DataSource&lt;/code&gt; object is the preferred means of getting a connection. An object that implements the &lt;code&gt;DataSource&lt;/code&gt; interface will typically be registered with a naming service based on the Java&amp;trade; Naming and Directory (JNDI) API.</source>
          <target state="translated">A factory for connections to the physical data source that this &lt;code&gt;DataSource&lt;/code&gt; object represents. An alternative to the &lt;code&gt;DriverManager&lt;/code&gt; facility, a &lt;code&gt;DataSource&lt;/code&gt; object is the preferred means of getting a connection. An object that implements the &lt;code&gt;DataSource&lt;/code&gt; interface will typically be registered with a naming service based on the Java&amp;trade; Naming and Directory (JNDI) API.</target>
        </trans-unit>
        <trans-unit id="bfbdc95ca7e6c1437aa26750a0c65f90a90ae45d" translate="yes" xml:space="preserve">
          <source>A factory for creating &lt;a href=&quot;keyinfo&quot;&gt;&lt;code&gt;KeyInfo&lt;/code&gt;&lt;/a&gt; objects from scratch or for unmarshalling a &lt;code&gt;KeyInfo&lt;/code&gt; object from a corresponding XML representation.</source>
          <target state="translated">A factory for creating &lt;a href=&quot;keyinfo&quot;&gt; &lt;code&gt;KeyInfo&lt;/code&gt; &lt;/a&gt; objects from scratch or for unmarshalling a &lt;code&gt;KeyInfo&lt;/code&gt; object from a corresponding XML representation.</target>
        </trans-unit>
        <trans-unit id="447ae3b752cb09da56fb7966e82af8d086341193" translate="yes" xml:space="preserve">
          <source>A factory for creating &lt;a href=&quot;xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; objects from scratch or for unmarshalling an &lt;code&gt;XMLSignature&lt;/code&gt; object from a corresponding XML representation.</source>
          <target state="translated">A factory for creating &lt;a href=&quot;xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt; objects from scratch or for unmarshalling an &lt;code&gt;XMLSignature&lt;/code&gt; object from a corresponding XML representation.</target>
        </trans-unit>
        <trans-unit id="a196e5bf4cb12af434f8fcf8232f8f20522e3246" translate="yes" xml:space="preserve">
          <source>A factory for creating method handles for linking missing member behavior in &lt;a href=&quot;beanslinker&quot;&gt;&lt;code&gt;BeansLinker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;beanslinker&quot;&gt; &lt;code&gt;BeansLinker&lt;/code&gt; &lt;/a&gt; 에서 누락 된 멤버 동작을 연결하기위한 메서드 핸들을 생성하는 팩토리입니다 .</target>
        </trans-unit>
        <trans-unit id="b8f7b68b30b808c6d1b76e510e89ebe4f6171cd4" translate="yes" xml:space="preserve">
          <source>A factory for creating method handles for linking missing member behavior in &lt;a href=&quot;beanslinker&quot;&gt;&lt;code&gt;BeansLinker&lt;/code&gt;&lt;/a&gt;. BeansLinker links these method handles into guarded invocations for link requests specifying &lt;code&gt;GET_*&lt;/code&gt; and &lt;code&gt;SET_*&lt;/code&gt;&lt;a href=&quot;../standardoperation&quot;&gt;&lt;code&gt;StandardOperation&lt;/code&gt;&lt;/a&gt;s when it is either certain or possible that the requested member (property, method, or element) is missing. They will be linked both for &lt;a href=&quot;../namedoperation&quot;&gt;&lt;code&gt;named&lt;/code&gt;&lt;/a&gt; and unnamed operations. The implementer must ensure that the parameter types of the returned method handle match the parameter types of the call site described in the link request. The return types can differ, though, to allow &lt;a href=&quot;../dynamiclinkerfactory#setPrelinkTransformer(jdk.dynalink.linker.GuardedInvocationTransformer)&quot;&gt;&lt;code&gt;DynamicLinkerFactory.setPrelinkTransformer(jdk.dynalink.linker.GuardedInvocationTransformer)&lt;/code&gt;&lt;/a&gt; late return type transformations}. It is allowed to return &lt;code&gt;null&lt;/code&gt; for a method handle if the default behavior is sufficient.</source>
          <target state="translated">&lt;a href=&quot;beanslinker&quot;&gt; &lt;code&gt;BeansLinker&lt;/code&gt; &lt;/a&gt; 에서 누락 된 멤버 동작을 연결하기위한 메서드 핸들을 생성하는 팩토리입니다 . BeansLinker 는 요청 된 멤버 (속성, 메서드 또는 요소)가 누락 된 것이 확실하거나 가능할 때 &lt;code&gt;GET_*&lt;/code&gt; 및 &lt;code&gt;SET_*&lt;/code&gt; &lt;a href=&quot;../standardoperation&quot;&gt; &lt;code&gt;StandardOperation&lt;/code&gt; 을&lt;/a&gt; 지정하는 링크 요청에 대한 보호 된 호출에 이러한 메서드 핸들을 연결합니다 . 그들은 모두를 연결됩니다 &lt;a href=&quot;../namedoperation&quot;&gt; &lt;code&gt;named&lt;/code&gt; &lt;/a&gt; 과 이름이 작업. 구현자는 반환 된 메서드 핸들의 매개 변수 유형이 링크 요청에 설명 된 호출 사이트의 매개 변수 유형과 일치하는지 확인해야합니다. 그러나 반환 유형은 &lt;a href=&quot;../dynamiclinkerfactory#setPrelinkTransformer(jdk.dynalink.linker.GuardedInvocationTransformer)&quot;&gt; &lt;code&gt;DynamicLinkerFactory.setPrelinkTransformer(jdk.dynalink.linker.GuardedInvocationTransformer)&lt;/code&gt; &lt;/a&gt; 를 허용하기 위해 다를 수 있습니다.늦은 반환 유형 변환}. 기본 동작으로 충분하면 메서드 핸들에 대해 &lt;code&gt;null&lt;/code&gt; 을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e0b467ba2dc989506e0ee0a0bb1aacb33912437" translate="yes" xml:space="preserve">
          <source>A factory object that generates Preferences objects.</source>
          <target state="translated">기본 설정 개체를 생성하는 팩토리 개체입니다.</target>
        </trans-unit>
        <trans-unit id="101b3fce69853a396df998619090ea7c49a64227" translate="yes" xml:space="preserve">
          <source>A factory object that generates Preferences objects. Providers of new &lt;a href=&quot;preferences&quot;&gt;&lt;code&gt;Preferences&lt;/code&gt;&lt;/a&gt; implementations should provide corresponding &lt;code&gt;PreferencesFactory&lt;/code&gt; implementations so that the new &lt;code&gt;Preferences&lt;/code&gt; implementation can be installed in place of the platform-specific default implementation.</source>
          <target state="translated">기본 설정 개체를 생성하는 팩토리 개체입니다. 새로운 &lt;a href=&quot;preferences&quot;&gt; &lt;code&gt;Preferences&lt;/code&gt; &lt;/a&gt; 구현 제공자는 플랫폼 별 기본 구현 대신 새 &lt;code&gt;Preferences&lt;/code&gt; 구현을 설치할 수 있도록 해당 &lt;code&gt;PreferencesFactory&lt;/code&gt; 설정 Factory 구현을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="012439963caa9c740b53700ca7f65192a34f5061" translate="yes" xml:space="preserve">
          <source>A factory that enables applications to obtain instances of &lt;code&gt;DOMImplementation&lt;/code&gt;.</source>
          <target state="translated">A factory that enables applications to obtain instances of &lt;code&gt;DOMImplementation&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9dec17682dae61c4e3664b4d404fd914e0739877" translate="yes" xml:space="preserve">
          <source>A factory to build views for HTML.</source>
          <target state="translated">A factory to build views for HTML.</target>
        </trans-unit>
        <trans-unit id="4859eae3ed9161a437459fc111d12cc6dfeb9a6d" translate="yes" xml:space="preserve">
          <source>A factory to build views for HTML. The following table describes what this factory will build by default.</source>
          <target state="translated">A factory to build views for HTML. The following table describes what this factory will build by default.</target>
        </trans-unit>
        <trans-unit id="e72ea0c899015a79e68fd6431aed375e5031320e" translate="yes" xml:space="preserve">
          <source>A factory to create a view of some portion of document subject.</source>
          <target state="translated">A factory to create a view of some portion of document subject.</target>
        </trans-unit>
        <trans-unit id="5d98c05b8f6e5a37c3763765419238927bfff5ef" translate="yes" xml:space="preserve">
          <source>A factory to create a view of some portion of document subject. This is intended to enable customization of how views get mapped over a document model.</source>
          <target state="translated">A factory to create a view of some portion of document subject. This is intended to enable customization of how views get mapped over a document model.</target>
        </trans-unit>
        <trans-unit id="63b7b032fe80d4faf6433141990e02b45251e415" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character blocks in the Unicode specification.</source>
          <target state="translated">유니 코드 사양에서 문자 블록을 나타내는 문자 하위 집합 패밀리입니다.</target>
        </trans-unit>
        <trans-unit id="a24fb7d86b530dcf58935f77822385b0ba5a6d7b" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character blocks in the Unicode specification. Character blocks generally define characters used for a specific script or purpose. A character is contained by at most one Unicode block.</source>
          <target state="translated">유니 코드 사양에서 문자 블록을 나타내는 문자 하위 집합 패밀리입니다. 문자 블록은 일반적으로 특정 스크립트 또는 목적에 사용되는 문자를 정의합니다. 문자는 최대 하나의 유니 코드 블록에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="3ec563e568f55e4f71b71ac1435cf68999ac1f70" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character scripts defined in the &lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt; &lt;i&gt;Unicode Standard Annex #24: Script Names&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt;&lt;i&gt;Unicode Standard Annex # 24 : Script Names에&lt;/i&gt;&lt;/a&gt; 정의 된 문자 스크립트를 나타내는 문자 서브 세트 . &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="b57546c0d16673c5ddb9bd2cdd184a4b0ab8b0a7" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character scripts defined in the &lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt; &lt;i&gt;Unicode Standard Annex #24: Script Names&lt;/i&gt;&lt;/a&gt;. Every Unicode character is assigned to a single Unicode script, either a specific script, such as &lt;a href=&quot;#LATIN&quot;&gt;&lt;code&gt;Latin&lt;/code&gt;&lt;/a&gt;, or one of the following three special values, &lt;a href=&quot;#INHERITED&quot;&gt;&lt;code&gt;Inherited&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#COMMON&quot;&gt;&lt;code&gt;Common&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#UNKNOWN&quot;&gt;&lt;code&gt;Unknown&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A family of character subsets representing the character scripts defined in the &lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt; &lt;i&gt;Unicode Standard Annex #24: Script Names&lt;/i&gt;&lt;/a&gt;. Every Unicode character is assigned to a single Unicode script, either a specific script, such as &lt;a href=&quot;#LATIN&quot;&gt; &lt;code&gt;Latin&lt;/code&gt; &lt;/a&gt;, or one of the following three special values, &lt;a href=&quot;#INHERITED&quot;&gt; &lt;code&gt;Inherited&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#COMMON&quot;&gt; &lt;code&gt;Common&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#UNKNOWN&quot;&gt; &lt;code&gt;Unknown&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9c8c5279fc99f2514225c6d1d19175798ae080ea" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character scripts defined in the &lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt; &lt;i&gt;Unicode Standard Annex #24: Script Names&lt;/i&gt;&lt;/a&gt;. Every Unicode character is assigned to a single Unicode script, either a specific script, such as &lt;a href=&quot;character.unicodescript#LATIN&quot;&gt;&lt;code&gt;Latin&lt;/code&gt;&lt;/a&gt;, or one of the following three special values, &lt;a href=&quot;character.unicodescript#INHERITED&quot;&gt;&lt;code&gt;Inherited&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;character.unicodescript#COMMON&quot;&gt;&lt;code&gt;Common&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;character.unicodescript#UNKNOWN&quot;&gt;&lt;code&gt;Unknown&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt;&lt;i&gt;Unicode Standard Annex # 24 : Script Names에&lt;/i&gt;&lt;/a&gt; 정의 된 문자 스크립트를 나타내는 문자 서브 세트 . 모든 유니 코드 문자는 단일 유니 코드 스크립트 (예 : &lt;a href=&quot;character.unicodescript#LATIN&quot;&gt; &lt;code&gt;Latin&lt;/code&gt; &lt;/a&gt; 과 같은 특정 스크립트 ) 또는 다음 세 가지 특수 값 ( &lt;a href=&quot;character.unicodescript#INHERITED&quot;&gt; &lt;code&gt;Inherited&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;character.unicodescript#COMMON&quot;&gt; &lt;code&gt;Common&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;character.unicodescript#UNKNOWN&quot;&gt; &lt;code&gt;Unknown&lt;/code&gt; )&lt;/a&gt; 중 하나에 지정 됩니다. &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="7de6b769568dc26754d391b2d697863a4b675e7a" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character scripts defined in the &lt;a href=&quot;https://www.unicode.org/reports/tr24/&quot;&gt; &lt;i&gt;Unicode Standard Annex #24: Script Names&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.unicode.org/reports/tr24/&quot;&gt;&lt;i&gt;Unicode Standard Annex # 24 : Script Names에&lt;/i&gt;&lt;/a&gt; 정의 된 문자 스크립트를 나타내는 문자 하위 집합 계열입니다 . &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="a4fc4e1c216ea0aef69c728ba14bcadf6ade3445" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character scripts defined in the &lt;a href=&quot;https://www.unicode.org/reports/tr24/&quot;&gt; &lt;i&gt;Unicode Standard Annex #24: Script Names&lt;/i&gt;&lt;/a&gt;. Every Unicode character is assigned to a single Unicode script, either a specific script, such as &lt;a href=&quot;#LATIN&quot;&gt;&lt;code&gt;Latin&lt;/code&gt;&lt;/a&gt;, or one of the following three special values, &lt;a href=&quot;#INHERITED&quot;&gt;&lt;code&gt;Inherited&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#COMMON&quot;&gt;&lt;code&gt;Common&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#UNKNOWN&quot;&gt;&lt;code&gt;Unknown&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.unicode.org/reports/tr24/&quot;&gt;&lt;i&gt;Unicode Standard Annex # 24 : Script Names에&lt;/i&gt;&lt;/a&gt; 정의 된 문자 스크립트를 나타내는 문자 하위 집합 계열입니다 . 모든 유니 코드 문자는 &lt;a href=&quot;#LATIN&quot;&gt; &lt;code&gt;Latin&lt;/code&gt; &lt;/a&gt; 과 같은 특정 스크립트 또는 &lt;a href=&quot;#INHERITED&quot;&gt; &lt;code&gt;Inherited&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#COMMON&quot;&gt; &lt;code&gt;Common&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#UNKNOWN&quot;&gt; &lt;code&gt;Unknown&lt;/code&gt; &lt;/a&gt; 다음 세 가지 특수 값 중 하나 인 단일 유니 코드 스크립트에 할당됩니다 . &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="9eaa4a882ff6f7b68aa33cabdb36bc4551205285" translate="yes" xml:space="preserve">
          <source>A field in a TIFF Image File Directory (IFD) is defined as a tag number accompanied by a sequence of values of identical data type. TIFF 6.0 defines 12 data types; a 13th type &lt;code&gt;IFD&lt;/code&gt; is defined in TIFF Tech Note 1 of TIFF Specification Supplement 1. These TIFF data types are referred to by Java constants and mapped internally onto Java language data types and type names as follows:</source>
          <target state="translated">A field in a TIFF Image File Directory (IFD) is defined as a tag number accompanied by a sequence of values of identical data type. TIFF 6.0 defines 12 data types; a 13th type &lt;code&gt;IFD&lt;/code&gt; is defined in TIFF Tech Note 1 of TIFF Specification Supplement 1. These TIFF data types are referred to by Java constants and mapped internally onto Java language data types and type names as follows:</target>
        </trans-unit>
        <trans-unit id="cb6cfa1af99682ad4ccf2d09f7b713dfe2919b99" translate="yes" xml:space="preserve">
          <source>A field is date-based if it can be derived from &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. Note that it is valid for both &lt;code&gt;isDateBased()&lt;/code&gt; and &lt;code&gt;isTimeBased()&lt;/code&gt; to return false, such as when representing a field like minute-of-week.</source>
          <target state="translated">필드는 &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 에서 파생 될 수있는 경우 날짜 기반 입니다. &lt;code&gt;isDateBased()&lt;/code&gt; 및 &lt;code&gt;isTimeBased()&lt;/code&gt; 가 모두 주와 같은 필드를 나타내는 경우와 같이 false를 리턴 하는 데 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="06d4b6c0fcbdbfaf03d612c54baeb44342bf70b4" translate="yes" xml:space="preserve">
          <source>A field is time-based if it can be derived from &lt;a href=&quot;chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;NANO_OF_DAY&lt;/code&gt;&lt;/a&gt;. Note that it is valid for both &lt;code&gt;isDateBased()&lt;/code&gt; and &lt;code&gt;isTimeBased()&lt;/code&gt; to return false, such as when representing a field like minute-of-week.</source>
          <target state="translated">&lt;a href=&quot;chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;NANO_OF_DAY&lt;/code&gt; &lt;/a&gt; 에서 파생 될 수있는 필드는 시간 기반 입니다. &lt;code&gt;isDateBased()&lt;/code&gt; 및 &lt;code&gt;isTimeBased()&lt;/code&gt; 가 모두 주와 같은 필드를 나타내는 경우와 같이 false를 리턴 하는 데 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="b07348f8e4cb68554849ca186156d3c0c4587481" translate="yes" xml:space="preserve">
          <source>A field is used to express part of a larger date-time, such as year, month-of-year or second-of-minute. All fields implement &lt;a href=&quot;temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt;. The set of well known fields are defined in &lt;a href=&quot;chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;, such as &lt;code&gt;HOUR_OF_DAY&lt;/code&gt;. Additional fields are defined by &lt;a href=&quot;julianfields&quot;&gt;&lt;code&gt;JulianFields&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;weekfields&quot;&gt;&lt;code&gt;WeekFields&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;isofields&quot;&gt;&lt;code&gt;IsoFields&lt;/code&gt;&lt;/a&gt;. The field interface is designed to allow application defined fields.</source>
          <target state="translated">필드는 연도, 월 또는 분과 같은 더 큰 날짜 시간의 일부를 나타내는 데 사용됩니다. 모든 필드는 &lt;a href=&quot;temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; 를&lt;/a&gt; 구현 합니다. 잘 알려진 필드 세트는 &lt;a href=&quot;chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; 에&lt;/a&gt; 정의되어 있습니다 (예 : &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; ) . 추가 필드는 &lt;a href=&quot;julianfields&quot;&gt; &lt;code&gt;JulianFields&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;weekfields&quot;&gt; &lt;code&gt;WeekFields&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;isofields&quot;&gt; &lt;code&gt;IsoFields&lt;/code&gt; &lt;/a&gt; 로 정의됩니다 . 필드 인터페이스는 응용 프로그램 정의 필드를 허용하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="1b9bbd2e4bb02eff4c009d2e28cfb775b042abb6" translate="yes" xml:space="preserve">
          <source>A field might change or be removed in a future JDK release. A best practice for callers of this method is to validate the field before attempting access.</source>
          <target state="translated">필드는 향후 JDK 릴리스에서 변경되거나 제거 될 수 있습니다. 이 메서드의 호출자에 대한 모범 사례는 액세스를 시도하기 전에 필드의 유효성을 검사하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="835f2490b6cfe9fa75186c818d8516b2e4a5f979" translate="yes" xml:space="preserve">
          <source>A field not described by a more specific kind (like &lt;code&gt;ENUM_CONSTANT&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;ENUM_CONSTANT&lt;/code&gt; 와 같이보다 구체적인 종류로 설명되지 않은 필드 입니다.</target>
        </trans-unit>
        <trans-unit id="b9124f145776683f4253809cd0411ccd5b528c41" translate="yes" xml:space="preserve">
          <source>A field of date-time, such as month-of-year or hour-of-minute.</source>
          <target state="translated">년 또는 분과 같은 날짜-시간 필드.</target>
        </trans-unit>
        <trans-unit id="e150dcc5b1e035eec8b678494a857eb63cde20d6" translate="yes" xml:space="preserve">
          <source>A field of the resulting &lt;code&gt;Duration&lt;/code&gt; will be unset if and only if respective fields of two input &lt;code&gt;Duration&lt;/code&gt;s are unset.</source>
          <target state="translated">A field of the resulting &lt;code&gt;Duration&lt;/code&gt; will be unset if and only if respective fields of two input &lt;code&gt;Duration&lt;/code&gt; s are unset.</target>
        </trans-unit>
        <trans-unit id="561ec93c50ac986765d6e5eddfd9cb88b32c965f" translate="yes" xml:space="preserve">
          <source>A field to store user data.</source>
          <target state="translated">A field to store user data.</target>
        </trans-unit>
        <trans-unit id="7093bcdde49295add6532ea87edaa57b21040595" translate="yes" xml:space="preserve">
          <source>A field to store user data. Mostly used to store style sheets.</source>
          <target state="translated">A field to store user data. Mostly used to store style sheets.</target>
        </trans-unit>
        <trans-unit id="515a450d2e23adc65e388953c350b7eb5e4204e8" translate="yes" xml:space="preserve">
          <source>A field type descriptor string for a non-array type is either a one-letter code corresponding to a primitive type (&lt;code&gt;&quot;J&quot;, &quot;I&quot;, &quot;C&quot;, &quot;S&quot;, &quot;B&quot;, &quot;D&quot;, &quot;F&quot;, &quot;Z&quot;, &quot;V&quot;&lt;/code&gt;), or the letter &lt;code&gt;&quot;L&quot;&lt;/code&gt;, followed by the fully qualified binary name of a class, followed by &lt;code&gt;&quot;;&quot;&lt;/code&gt;. A field type descriptor for an array type is the character &lt;code&gt;&quot;[&quot;&lt;/code&gt; followed by the field descriptor for the component type. Examples of valid type descriptor strings include &lt;code&gt;&quot;Ljava/lang/String;&quot;&lt;/code&gt;, &lt;code&gt;&quot;I&quot;&lt;/code&gt;, &lt;code&gt;&quot;[I&quot;&lt;/code&gt;, &lt;code&gt;&quot;V&quot;&lt;/code&gt;, &lt;code&gt;&quot;[Ljava/lang/String;&quot;&lt;/code&gt;, etc. See JVMS 4.3.2 (&quot;Field Descriptors&quot;) for more detail.</source>
          <target state="translated">비 배열 유형에 대한 필드 유형 설명자 문자열은 기본 유형 ( &lt;code&gt;&quot;J&quot;, &quot;I&quot;, &quot;C&quot;, &quot;S&quot;, &quot;B&quot;, &quot;D&quot;, &quot;F&quot;, &quot;Z&quot;, &quot;V&quot;&lt;/code&gt; 해당하는 한 문자 코드입니다. &quot;,&quot;Z &quot;,&quot;V &quot; ) 또는 문자 &lt;code&gt;&quot;L&quot;&lt;/code&gt; , 클래스의 정규화 된 이진 이름, &lt;code&gt;&quot;;&quot;&lt;/code&gt; . 배열 유형에 대한 필드 유형 설명 자는 구성 요소 유형에 대한 필드 설명자가 뒤 따르는 문자 &lt;code&gt;&quot;[&quot;&lt;/code&gt; 입니다. 유효한 유형 설명자 문자열의 예에는 &lt;code&gt;&quot;Ljava/lang/String;&quot;&lt;/code&gt; 이 포함됩니다. , &lt;code&gt;&quot;I&quot;&lt;/code&gt; , &lt;code&gt;&quot;[I&quot;&lt;/code&gt; , &lt;code&gt;&quot;V&quot;&lt;/code&gt; , &lt;code&gt;&quot;[Ljava/lang/String;&quot;&lt;/code&gt; 자세한 내용은 JVMS 4.3.2 ( &quot;필드 설명자&quot;)를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="dda0e6d153e939c0eebf6f92e4c6f459678f22a4" translate="yes" xml:space="preserve">
          <source>A file attribute view provides a read-only or updatable view of a set of file attributes. This method is intended to be used where the file attribute view defines type-safe methods to read or update the file attributes. The &lt;code&gt;type&lt;/code&gt; parameter is the type of the attribute view required and the method returns an instance of that type if supported. The &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; type supports access to the basic attributes of a file. Invoking this method to select a file attribute view of that type will always return an instance of that class.</source>
          <target state="translated">파일 속성보기는 파일 속성 세트의 읽기 전용 또는 업데이트 가능한보기를 제공합니다. 이 방법은 파일 속성보기가 파일 속성을 읽거나 업데이트하기 위해 형식에 안전한 방법을 정의하는 경우에 사용됩니다. &lt;code&gt;type&lt;/code&gt; 파라미터는 요구되는 특성 뷰의 타입 및 지원되는 경우에있어서 그 타입의 인스턴스를 리턴한다. &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; 의&lt;/a&gt; 유형 지원은 파일의 기본 속성에 액세스 할 수 있습니다. 해당 유형의 파일 속성보기를 선택하기 위해이 메소드를 호출하면 항상 해당 클래스의 인스턴스가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="deda609125e7d48e407f76f729b8f27d65f74ddb" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of a &lt;em&gt;basic set&lt;/em&gt; of file attributes common to many file systems.</source>
          <target state="translated">많은 파일 시스템에 공통적 인 &lt;em&gt;기본&lt;/em&gt; 파일 속성 &lt;em&gt;세트&lt;/em&gt; 를 제공하는 파일 속성보기입니다 .</target>
        </trans-unit>
        <trans-unit id="c25c5edd2e59e66e30742b0dc9fb42aac420e492" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of a &lt;em&gt;basic set&lt;/em&gt; of file attributes common to many file systems. The basic set of file attributes consist of &lt;em&gt;mandatory&lt;/em&gt; and &lt;em&gt;optional&lt;/em&gt; file attributes as defined by the &lt;a href=&quot;basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">많은 파일 시스템에 공통적 인 &lt;em&gt;기본&lt;/em&gt; 파일 속성 &lt;em&gt;세트&lt;/em&gt; 를 제공하는 파일 속성보기입니다 . 기본 파일 속성 세트 는 &lt;a href=&quot;basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt; 인터페이스에 의해 정의 된 &lt;em&gt;필수&lt;/em&gt; 및 &lt;em&gt;선택적&lt;/em&gt; 파일 속성으로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="3f5f657f89b3a00a961d3cdfff1050605cb66a30" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of a file's user-defined attributes, sometimes known as &lt;em&gt;extended attributes&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;확장 속성&lt;/em&gt; 이라고도하는 파일의 사용자 정의 속성보기를 제공하는 파일 속성보기입니다 .</target>
        </trans-unit>
        <trans-unit id="92134ae2669883f7bd8d353e8b759e080264ae92" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of a file's user-defined attributes, sometimes known as &lt;em&gt;extended attributes&lt;/em&gt;. User-defined file attributes are used to store metadata with a file that is not meaningful to the file system. It is primarily intended for file system implementations that support such a capability directly but may be emulated. The details of such emulation are highly implementation specific and therefore not specified.</source>
          <target state="translated">&lt;em&gt;확장 속성&lt;/em&gt; 이라고도하는 파일의 사용자 정의 속성보기를 제공하는 파일 속성보기입니다 . 사용자 정의 파일 속성은 파일 시스템에 의미가없는 파일과 함께 메타 데이터를 저장하는 데 사용됩니다. 주로 그러한 기능을 직접 지원하지만 에뮬레이트 될 수있는 파일 시스템 구현을위한 것입니다. 이러한 에뮬레이션의 세부 사항은 구현에 따라 다르므로 지정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="e6a4b8e3954a7ff014e199475145d881eb3c5987" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of the file attributes commonly associated with files on file systems used by operating systems that implement the Portable Operating System Interface (POSIX) family of standards.</source>
          <target state="translated">POSIX (Portable Operating System Interface) 표준 제품군을 구현하는 운영 체제에서 사용하는 파일 시스템의 파일과 일반적으로 관련된 파일 속성의보기를 제공하는 파일 속성보기입니다.</target>
        </trans-unit>
        <trans-unit id="73aab05f1958ac269a1d81f012b9a0e86f942671" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of the legacy &quot;DOS&quot; file attributes.</source>
          <target state="translated">레거시 &quot;DOS&quot;파일 속성보기를 제공하는 파일 속성보기</target>
        </trans-unit>
        <trans-unit id="06ce420caee228b75176ea93c6da6be3e8962c23" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of the legacy &quot;DOS&quot; file attributes. These attributes are supported by file systems such as the File Allocation Table (FAT) format commonly used in &lt;em&gt;consumer devices&lt;/em&gt;.</source>
          <target state="translated">레거시 &quot;DOS&quot;파일 속성보기를 제공하는 파일 속성보기 이러한 속성은 &lt;em&gt;소비자 장치&lt;/em&gt; 에서 일반적으로 사용되는 FAT (File Allocation Table) 형식과 같은 파일 시스템에서 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="c56af10820e6747bde58155c74dc6b8cb1c563e9" translate="yes" xml:space="preserve">
          <source>A file attribute view that supports reading or updating a file's Access Control Lists (ACL) or file owner attributes.</source>
          <target state="translated">파일의 ACL (액세스 제어 목록) 또는 파일 소유자 속성을 읽거나 업데이트 할 수있는 파일 속성보기입니다.</target>
        </trans-unit>
        <trans-unit id="fc8f481ef9d0d618680cc9caba8c29e3b337fd06" translate="yes" xml:space="preserve">
          <source>A file attribute view that supports reading or updating the owner of a file.</source>
          <target state="translated">파일 소유자 읽기 또는 업데이트를 지원하는 파일 속성보기입니다.</target>
        </trans-unit>
        <trans-unit id="637eb168120f6d58bb9a543da7d437ff587931ee" translate="yes" xml:space="preserve">
          <source>A file attribute view that supports reading or updating the owner of a file. This file attribute view is intended for file system implementations that support a file attribute that represents an identity that is the owner of the file. Often the owner of a file is the identity of the entity that created the file.</source>
          <target state="translated">파일 소유자 읽기 또는 업데이트를 지원하는 파일 속성보기입니다. 이 파일 속성보기는 파일 소유자 인 ID를 나타내는 파일 속성을 지원하는 파일 시스템 구현을위한 것입니다. 종종 파일의 소유자는 파일을 만든 엔티티의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="50d3c544cf02930f72d3dd2dcf7596521b56b995" translate="yes" xml:space="preserve">
          <source>A file channel is a &lt;a href=&quot;seekablebytechannel&quot;&gt;&lt;code&gt;SeekableByteChannel&lt;/code&gt;&lt;/a&gt; that is connected to a file. It has a current</source>
          <target state="translated">파일 채널은 파일에 연결된 &lt;a href=&quot;seekablebytechannel&quot;&gt; &lt;code&gt;SeekableByteChannel&lt;/code&gt; &lt;/a&gt; 입니다. 그것은 전류가</target>
        </trans-unit>
        <trans-unit id="b56454099a3b48fd182acb907397a9dc83e2ebc7" translate="yes" xml:space="preserve">
          <source>A file channel is created by invoking one of the &lt;a href=&quot;#open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods defined by this class. A file channel can also be obtained from an existing &lt;a href=&quot;../../io/fileinputstream#getChannel()&quot;&gt;&lt;code&gt;FileInputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../io/fileoutputstream#getChannel()&quot;&gt;&lt;code&gt;FileOutputStream&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../io/randomaccessfile#getChannel()&quot;&gt;&lt;code&gt;RandomAccessFile&lt;/code&gt;&lt;/a&gt; object by invoking that object's &lt;code&gt;getChannel&lt;/code&gt; method, which returns a file channel that is connected to the same underlying file. Where the file channel is obtained from an existing stream or random access file then the state of the file channel is intimately connected to that of the object whose &lt;code&gt;getChannel&lt;/code&gt; method returned the channel. Changing the channel's position, whether explicitly or by reading or writing bytes, will change the file position of the originating object, and vice versa. Changing the file's length via the file channel will change the length seen via the originating object, and vice versa. Changing the file's content by writing bytes will change the content seen by the originating object, and vice versa.</source>
          <target state="translated">A file channel is created by invoking one of the &lt;a href=&quot;#open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; methods defined by this class. A file channel can also be obtained from an existing &lt;a href=&quot;../../io/fileinputstream#getChannel()&quot;&gt; &lt;code&gt;FileInputStream&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../../io/fileoutputstream#getChannel()&quot;&gt; &lt;code&gt;FileOutputStream&lt;/code&gt; &lt;/a&gt;, or &lt;a href=&quot;../../io/randomaccessfile#getChannel()&quot;&gt; &lt;code&gt;RandomAccessFile&lt;/code&gt; &lt;/a&gt; object by invoking that object's &lt;code&gt;getChannel&lt;/code&gt; method, which returns a file channel that is connected to the same underlying file. Where the file channel is obtained from an existing stream or random access file then the state of the file channel is intimately connected to that of the object whose &lt;code&gt;getChannel&lt;/code&gt; method returned the channel. Changing the channel's position, whether explicitly or by reading or writing bytes, will change the file position of the originating object, and vice versa. Changing the file's length via the file channel will change the length seen via the originating object, and vice versa. Changing the file's content by writing bytes will change the content seen by the originating object, and vice versa.</target>
        </trans-unit>
        <trans-unit id="a3d45873616dfb5f64695ebaf34a5417aaf96574" translate="yes" xml:space="preserve">
          <source>A file channel is created by invoking one of the &lt;a href=&quot;filechannel#open-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods defined by this class. A file channel can also be obtained from an existing &lt;a href=&quot;../../io/fileinputstream#getChannel--&quot;&gt;&lt;code&gt;FileInputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../io/fileoutputstream#getChannel--&quot;&gt;&lt;code&gt;FileOutputStream&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../io/randomaccessfile#getChannel--&quot;&gt;&lt;code&gt;RandomAccessFile&lt;/code&gt;&lt;/a&gt; object by invoking that object's &lt;code&gt;getChannel&lt;/code&gt; method, which returns a file channel that is connected to the same underlying file. Where the file channel is obtained from an existing stream or random access file then the state of the file channel is intimately connected to that of the object whose &lt;code&gt;getChannel&lt;/code&gt; method returned the channel. Changing the channel's position, whether explicitly or by reading or writing bytes, will change the file position of the originating object, and vice versa. Changing the file's length via the file channel will change the length seen via the originating object, and vice versa. Changing the file's content by writing bytes will change the content seen by the originating object, and vice versa.</source>
          <target state="translated">파일 채널은 이 클래스에 의해 정의 된 &lt;a href=&quot;filechannel#open-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 메소드 중 하나를 호출하여 작성됩니다 . 동일한 기본 파일에 연결된 파일 채널을 반환하는 해당 객체의 &lt;code&gt;getChannel&lt;/code&gt; 메소드 를 호출 하여 기존 &lt;a href=&quot;../../io/fileinputstream#getChannel--&quot;&gt; &lt;code&gt;FileInputStream&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../io/fileoutputstream#getChannel--&quot;&gt; &lt;code&gt;FileOutputStream&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../io/randomaccessfile#getChannel--&quot;&gt; &lt;code&gt;RandomAccessFile&lt;/code&gt; &lt;/a&gt; 객체 에서 파일 채널을 가져올 수도 있습니다 . 기존의 스트림 또는 랜덤 액세스 파일에서 파일 채널을 얻는 경우 파일 채널의 상태는 객체의 상태와 밀접하게 연결됩니다. &lt;code&gt;getChannel&lt;/code&gt; 메소드가 채널을 리턴했습니다. 명시 적으로 또는 바이트를 읽거나 쓰는 방식으로 채널 위치를 변경하면 원래 객체의 파일 위치가 변경되고 그 반대도 마찬가지입니다. 파일 채널을 통해 파일 길이를 변경하면 원래 객체를 통해 보이는 길이가 변경되고 그 반대도 마찬가지입니다. 바이트를 작성하여 파일의 내용을 변경하면 원래 객체에서 본 내용이 변경되고 그 반대도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="b94e4d0c80198834d983bc6e3bb51a9dd99a5d5e" translate="yes" xml:space="preserve">
          <source>A file channel that is open for writing may be in</source>
          <target state="translated">쓰기 위해 열려있는 파일 채널이</target>
        </trans-unit>
        <trans-unit id="9faaef2741bf30dbc54b5af9a41af4397e3de550" translate="yes" xml:space="preserve">
          <source>A file loading event.</source>
          <target state="translated">A file loading event.</target>
        </trans-unit>
        <trans-unit id="cb5c27031614e42ea12644e9d3cc607334c9b99b" translate="yes" xml:space="preserve">
          <source>A file lock is either</source>
          <target state="translated">파일 잠금은</target>
        </trans-unit>
        <trans-unit id="e16568056aeea069ecd34d375096a08ef82c7ca7" translate="yes" xml:space="preserve">
          <source>A file output stream is an output stream for writing data to a &lt;code&gt;File&lt;/code&gt; or to a &lt;code&gt;FileDescriptor&lt;/code&gt;.</source>
          <target state="translated">파일 출력 스트림은 &lt;code&gt;File&lt;/code&gt; 또는 &lt;code&gt;FileDescriptor&lt;/code&gt; 에 데이터를 쓰는 출력 스트림입니다 .</target>
        </trans-unit>
        <trans-unit id="6d6f1007335cda7cde3d679a1dbaf6aa504670c2" translate="yes" xml:space="preserve">
          <source>A file output stream is an output stream for writing data to a &lt;code&gt;File&lt;/code&gt; or to a &lt;code&gt;FileDescriptor&lt;/code&gt;. Whether or not a file is available or may be created depends upon the underlying platform. Some platforms, in particular, allow a file to be opened for writing by only one &lt;code&gt;FileOutputStream&lt;/code&gt; (or other file-writing object) at a time. In such situations the constructors in this class will fail if the file involved is already open.</source>
          <target state="translated">파일 출력 스트림은 &lt;code&gt;File&lt;/code&gt; 또는 &lt;code&gt;FileDescriptor&lt;/code&gt; 에 데이터를 쓰는 출력 스트림입니다 . 파일의 사용 가능 여부는 기본 플랫폼에 따라 다릅니다. 특히 일부 플랫폼에서는 한 번에 하나의 &lt;code&gt;FileOutputStream&lt;/code&gt; (또는 다른 파일 쓰기 객체) 만 쓰기 위해 파일을 열 수 있습니다 . 이러한 상황에서 관련된 파일이 이미 열려 있으면이 클래스의 생성자가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="8a79e46569e7c0e6ac13297491f4474b3fba636e" translate="yes" xml:space="preserve">
          <source>A file saving event.</source>
          <target state="translated">A file saving event.</target>
        </trans-unit>
        <trans-unit id="1504cc80177c88564aff13f864faf9b4cc1e4f14" translate="yes" xml:space="preserve">
          <source>A file system is open upon creation and can be closed by invoking its &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method. Once closed, any further attempt to access objects in the file system cause &lt;a href=&quot;closedfilesystemexception&quot;&gt;&lt;code&gt;ClosedFileSystemException&lt;/code&gt;&lt;/a&gt; to be thrown. File systems created by the default &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; cannot be closed.</source>
          <target state="translated">A file system is open upon creation and can be closed by invoking its &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; method. Once closed, any further attempt to access objects in the file system cause &lt;a href=&quot;closedfilesystemexception&quot;&gt; &lt;code&gt;ClosedFileSystemException&lt;/code&gt; &lt;/a&gt; to be thrown. File systems created by the default &lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt; cannot be closed.</target>
        </trans-unit>
        <trans-unit id="9dfaa0b7bf6f105699605d63ef04558be23f70fd" translate="yes" xml:space="preserve">
          <source>A file system is open upon creation and can be closed by invoking its &lt;a href=&quot;filesystem#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method. Once closed, any further attempt to access objects in the file system cause &lt;a href=&quot;closedfilesystemexception&quot;&gt;&lt;code&gt;ClosedFileSystemException&lt;/code&gt;&lt;/a&gt; to be thrown. File systems created by the default &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; cannot be closed.</source>
          <target state="translated">파일 시스템은 작성시 열려 있으며 &lt;a href=&quot;filesystem#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 닫을 수 있습니다 . 닫힌 후에는 파일 시스템의 오브젝트에 대한 추가 액세스 시도로 인해 &lt;a href=&quot;closedfilesystemexception&quot;&gt; &lt;code&gt;ClosedFileSystemException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 기본 &lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt; 가 작성한 파일 시스템을 닫을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0d1780ff9ebff809b69e5e84bd16e835fd70a0aa" translate="yes" xml:space="preserve">
          <source>A file system is the factory for several types of objects:</source>
          <target state="translated">파일 시스템은 여러 유형의 객체에 대한 팩토리입니다.</target>
        </trans-unit>
        <trans-unit id="2aafa7d2b1e430fc99b0ad47e955d5980d694e00" translate="yes" xml:space="preserve">
          <source>A file system may implement restrictions to certain operations on the actual file-system object, such as reading, writing, and executing. These restrictions are collectively known as</source>
          <target state="translated">파일 시스템은 실제 파일 시스템 객체의 특정 작업 (예 : 읽기, 쓰기 및 실행)에 대한 제한을 구현할 수 있습니다. 이러한 제한은 통칭하여</target>
        </trans-unit>
        <trans-unit id="50c9ca57e623b4c14bcb87e67ff20918988b3535" translate="yes" xml:space="preserve">
          <source>A file system provider is a concrete implementation of this class that implements the abstract methods defined by this class. A provider is identified by a &lt;code&gt;URI&lt;/code&gt;&lt;a href=&quot;#getScheme()&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt;. The default provider is identified by the URI scheme &quot;file&quot;. It creates the &lt;a href=&quot;../filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that provides access to the file systems accessible to the Java virtual machine. The &lt;a href=&quot;../filesystems&quot;&gt;&lt;code&gt;FileSystems&lt;/code&gt;&lt;/a&gt; class defines how file system providers are located and loaded. The default provider is typically a system-default provider but may be overridden if the system property &lt;code&gt;
 java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; is set. In that case, the provider has a one argument constructor whose formal parameter type is &lt;code&gt;
 FileSystemProvider&lt;/code&gt;. All other providers have a zero argument constructor that initializes the provider.</source>
          <target state="translated">A file system provider is a concrete implementation of this class that implements the abstract methods defined by this class. A provider is identified by a &lt;code&gt;URI&lt;/code&gt; &lt;a href=&quot;#getScheme()&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;. The default provider is identified by the URI scheme &quot;file&quot;. It creates the &lt;a href=&quot;../filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt; that provides access to the file systems accessible to the Java virtual machine. The &lt;a href=&quot;../filesystems&quot;&gt; &lt;code&gt;FileSystems&lt;/code&gt; &lt;/a&gt; class defines how file system providers are located and loaded. The default provider is typically a system-default provider but may be overridden if the system property &lt;code&gt; java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; is set. In that case, the provider has a one argument constructor whose formal parameter type is &lt;code&gt; FileSystemProvider&lt;/code&gt; . All other providers have a zero argument constructor that initializes the provider.</target>
        </trans-unit>
        <trans-unit id="9453d4cf1f13a548849907fb569946cba24981c2" translate="yes" xml:space="preserve">
          <source>A file system provider is a concrete implementation of this class that implements the abstract methods defined by this class. A provider is identified by a &lt;code&gt;URI&lt;/code&gt;&lt;a href=&quot;#getScheme()&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt;. The default provider is identified by the URI scheme &quot;file&quot;. It creates the &lt;a href=&quot;../filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that provides access to the file systems accessible to the Java virtual machine. The &lt;a href=&quot;../filesystems&quot;&gt;&lt;code&gt;FileSystems&lt;/code&gt;&lt;/a&gt; class defines how file system providers are located and loaded. The default provider is typically a system-default provider but may be overridden if the system property &lt;code&gt;&lt;span id=&quot;java.nio.file.spi.DefaultFileSystemProvider&quot;&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/span&gt;&lt;/code&gt; is set. In that case, the provider has a one argument constructor whose formal parameter type is &lt;code&gt;
 FileSystemProvider&lt;/code&gt;. All other providers have a zero argument constructor that initializes the provider.</source>
          <target state="translated">파일 시스템 공급자는이 클래스에 의해 정의 된 추상 메서드를 구현하는이 클래스의 구체적인 구현입니다. 공급자는 &lt;code&gt;URI&lt;/code&gt; &lt;a href=&quot;#getScheme()&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt; 식별됩니다 . 기본 공급자는 URI 스키마 &quot;파일&quot;로 식별됩니다. 그것은 생성 &lt;a href=&quot;../filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt; Java 가상 머신에 액세스 할 수있는 파일 시스템에 대한 액세스를 제공합니다. &lt;a href=&quot;../filesystems&quot;&gt; &lt;code&gt;FileSystems&lt;/code&gt; 도&lt;/a&gt; 파일 시스템 제공 업체가 위치 및로드 방법 클래스 정의합니다. 기본 공급자는 일반적으로 시스템 기본 공급자이지만 시스템 속성 &lt;code&gt;&lt;span id=&quot;java.nio.file.spi.DefaultFileSystemProvider&quot;&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/span&gt;&lt;/code&gt; 가 설정된 경우 재정의 될 수 있습니다 . 이 경우 공급자에는 형식 매개 변수 유형이 &lt;code&gt; FileSystemProvider&lt;/code&gt; 인 하나의 인수 생성자가 있습니다.. 다른 모든 공급자에는 공급자를 초기화하는 인수가 0 인 생성자가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e8b4b9993656e1244070ad20dae9aefaa220eb7" translate="yes" xml:space="preserve">
          <source>A file system provider is a concrete implementation of this class that implements the abstract methods defined by this class. A provider is identified by a &lt;code&gt;URI&lt;/code&gt;&lt;a href=&quot;filesystemprovider#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt;. The default provider is identified by the URI scheme &quot;file&quot;. It creates the &lt;a href=&quot;../filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that provides access to the file systems accessible to the Java virtual machine. The &lt;a href=&quot;../filesystems&quot;&gt;&lt;code&gt;FileSystems&lt;/code&gt;&lt;/a&gt; class defines how file system providers are located and loaded. The default provider is typically a system-default provider but may be overridden if the system property &lt;code&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; is set. In that case, the provider has a one argument constructor whose formal parameter type is &lt;code&gt;FileSystemProvider&lt;/code&gt;. All other providers have a zero argument constructor that initializes the provider.</source>
          <target state="translated">파일 시스템 제공자는이 클래스에 의해 정의 된 추상 메소드를 구현하는이 클래스의 구체적 구현입니다. 공급자는 &lt;code&gt;URI&lt;/code&gt; &lt;a href=&quot;filesystemprovider#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt; 식별됩니다 . 기본 제공자는 URI 스킴 &quot;file&quot;로 식별됩니다. Java 가상 머신에 액세스 가능한 파일 시스템에 대한 액세스를 제공 하는 &lt;a href=&quot;../filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt; 을 작성합니다 . &lt;a href=&quot;../filesystems&quot;&gt; &lt;code&gt;FileSystems&lt;/code&gt; 도&lt;/a&gt; 파일 시스템 제공 업체가 위치 및로드 방법 클래스 정의합니다. 기본 제공자는 일반적으로 시스템 기본 제공자이지만 시스템 특성 &lt;code&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; 가 설정된 경우 대체 될 수 있습니다 . 이 경우, 프로 바이더에는 형식 매개 변수 유형이 &lt;code&gt;FileSystemProvider&lt;/code&gt; 인 인수 생성자가 하나 있습니다.. 다른 모든 공급자에는 공급자를 초기화하는 인수 생성자가 없습니다.</target>
        </trans-unit>
        <trans-unit id="ce65bc131fb341143ffa2432afe6788f89f640c4" translate="yes" xml:space="preserve">
          <source>A file system provides access to a file store that may be composed of a number of distinct file hierarchies, each with its own top-level root directory. Unless denied by the security manager, each element in the returned iterator corresponds to the root directory of a distinct file hierarchy. The order of the elements is not defined. The file hierarchies may change during the lifetime of the Java virtual machine. For example, in some implementations, the insertion of removable media may result in the creation of a new file hierarchy with its own top-level directory.</source>
          <target state="translated">파일 시스템은 각각 고유 한 최상위 루트 디렉토리가있는 여러 개의 고유 한 파일 계층으로 구성 될 수있는 파일 저장소에 대한 액세스를 제공합니다. 보안 관리자가 거부하지 않는 한 리턴 된 반복자의 각 요소는 고유 한 파일 계층의 루트 디렉토리에 해당합니다. 요소의 순서는 정의되어 있지 않습니다. 파일 계층은 Java 가상 머신의 수명 동안 변경 될 수 있습니다. 예를 들어, 일부 구현에서, 이동식 매체를 삽입하면 자체 최상위 디렉토리를 가진 새 파일 계층 구조가 작성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67ce0311f6028fd1552cf502d1719372ae4c2342" translate="yes" xml:space="preserve">
          <source>A file type detector for probing a file to guess its file type.</source>
          <target state="translated">파일 형식을 추측하기 위해 파일을 검사하기위한 파일 형식 탐지기입니다.</target>
        </trans-unit>
        <trans-unit id="61027a230d12f615246216d95e4ebcd7132e375c" translate="yes" xml:space="preserve">
          <source>A file type detector is a concrete implementation of this class, has a zero-argument constructor, and implements the abstract methods specified below.</source>
          <target state="translated">파일 형식 탐지기는이 클래스의 구체적인 구현이며 인수가없는 생성자를 가지며 아래에 지정된 추상 메서드를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="672c5562db439fda1727f52bc78e2d03e4797b3b" translate="yes" xml:space="preserve">
          <source>A file-lock object is created each time a lock is acquired on a file via one of the &lt;a href=&quot;filechannel#lock(long,long,boolean)&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;filechannel#tryLock(long,long,boolean)&quot;&gt;&lt;code&gt;tryLock&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class, or the &lt;a href=&quot;asynchronousfilechannel#lock(long,long,boolean,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;asynchronousfilechannel#tryLock(long,long,boolean)&quot;&gt;&lt;code&gt;tryLock&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;asynchronousfilechannel&quot;&gt;&lt;code&gt;AsynchronousFileChannel&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">A file-lock object is created each time a lock is acquired on a file via one of the &lt;a href=&quot;filechannel#lock(long,long,boolean)&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;filechannel#tryLock(long,long,boolean)&quot;&gt; &lt;code&gt;tryLock&lt;/code&gt; &lt;/a&gt; methods of the &lt;a href=&quot;filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt; class, or the &lt;a href=&quot;asynchronousfilechannel#lock(long,long,boolean,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;asynchronousfilechannel#tryLock(long,long,boolean)&quot;&gt; &lt;code&gt;tryLock&lt;/code&gt; &lt;/a&gt; methods of the &lt;a href=&quot;asynchronousfilechannel&quot;&gt; &lt;code&gt;AsynchronousFileChannel&lt;/code&gt; &lt;/a&gt; class.</target>
        </trans-unit>
        <trans-unit id="7a8fa8c5ab136a06c54fd39e4c674ceb8e8879dc" translate="yes" xml:space="preserve">
          <source>A file-lock object is created each time a lock is acquired on a file via one of the &lt;a href=&quot;filechannel#lock-long-long-boolean-&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;filechannel#tryLock-long-long-boolean-&quot;&gt;&lt;code&gt;tryLock&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class, or the &lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;asynchronousfilechannel#tryLock-long-long-boolean-&quot;&gt;&lt;code&gt;tryLock&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;asynchronousfilechannel&quot;&gt;&lt;code&gt;AsynchronousFileChannel&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt; 클래스 는 FileChannel 클래스의 &lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;asynchronousfilechannel#tryLock-long-long-boolean-&quot;&gt; &lt;code&gt;tryLock&lt;/code&gt; &lt;/a&gt; 메소드 또는 &lt;a href=&quot;asynchronousfilechannel&quot;&gt; &lt;code&gt;AsynchronousFileChannel&lt;/code&gt; &lt;/a&gt; 클래스 의 &lt;a href=&quot;filechannel#lock-long-long-boolean-&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;filechannel#tryLock-long-long-boolean-&quot;&gt; &lt;code&gt;tryLock&lt;/code&gt; &lt;/a&gt; 메소드 중 하나를 통해 파일에서 잠금을 획득 할 때마다 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="f5e07c6b2c7d4656577eb217d6c977813de3732f" translate="yes" xml:space="preserve">
          <source>A file-lock object is initially valid. It remains valid until the lock is released by invoking the &lt;a href=&quot;#release()&quot;&gt;&lt;code&gt;release&lt;/code&gt;&lt;/a&gt; method, by closing the channel that was used to acquire it, or by the termination of the Java virtual machine, whichever comes first. The validity of a lock may be tested by invoking its &lt;a href=&quot;#isValid()&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">A file-lock object is initially valid. It remains valid until the lock is released by invoking the &lt;a href=&quot;#release()&quot;&gt; &lt;code&gt;release&lt;/code&gt; &lt;/a&gt; method, by closing the channel that was used to acquire it, or by the termination of the Java virtual machine, whichever comes first. The validity of a lock may be tested by invoking its &lt;a href=&quot;#isValid()&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="ad42d41492ff4c772586b7c3843a8158af9ec343" translate="yes" xml:space="preserve">
          <source>A file-lock object is initially valid. It remains valid until the lock is released by invoking the &lt;a href=&quot;filelock#release--&quot;&gt;&lt;code&gt;release&lt;/code&gt;&lt;/a&gt; method, by closing the channel that was used to acquire it, or by the termination of the Java virtual machine, whichever comes first. The validity of a lock may be tested by invoking its &lt;a href=&quot;filelock#isValid--&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">파일 잠금 객체는 처음에 유효합니다. 잠금 &lt;a href=&quot;filelock#release--&quot;&gt; &lt;code&gt;release&lt;/code&gt; &lt;/a&gt; 방법 을 호출 하거나이를 확보하는 데 사용 된 채널을 닫거나 Java 가상 머신을 종료 하여 잠금이 해제 될 때까지 유효합니다 . 잠금의 유효성은 &lt;a href=&quot;filelock#isValid--&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="711939d8e50341d6cac3f60c7b46e0edf7fe9bab" translate="yes" xml:space="preserve">
          <source>A file-lock object records the file channel upon whose file the lock is held, the type and validity of the lock, and the position and size of the locked region. Only the validity of a lock is subject to change over time; all other aspects of a lock's state are immutable.</source>
          <target state="translated">파일 잠금 오브젝트는 파일이 잠금을 보유한 파일 채널, 잠금 유형 및 유효성, 잠금 영역의 위치 및 크기를 기록합니다. 잠금의 유효성 만 시간이 지남에 따라 변경 될 수 있습니다. 잠금 상태의 다른 모든 측면은 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b2d3192bfc2e11788cf1e5bba0d4f970488f3fc3" translate="yes" xml:space="preserve">
          <source>A file-mapping mode.</source>
          <target state="translated">파일 매핑 모드.</target>
        </trans-unit>
        <trans-unit id="37db82205994f143c5f9c99d0b674ca7cbf64f42" translate="yes" xml:space="preserve">
          <source>A filter can be set via &lt;a href=&quot;objectinputstream#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;setObjectInputFilter&lt;/code&gt;&lt;/a&gt; for an individual ObjectInputStream. A filter can be set via &lt;a href=&quot;objectinputfilter.config#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;Config.setSerialFilter&lt;/code&gt;&lt;/a&gt; to affect every &lt;code&gt;ObjectInputStream&lt;/code&gt; that does not otherwise set a filter.</source>
          <target state="translated">A filter can be set via &lt;a href=&quot;objectinputstream#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;setObjectInputFilter&lt;/code&gt; &lt;/a&gt; for an individual ObjectInputStream. A filter can be set via &lt;a href=&quot;objectinputfilter.config#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;Config.setSerialFilter&lt;/code&gt; &lt;/a&gt; to affect every &lt;code&gt;ObjectInputStream&lt;/code&gt; that does not otherwise set a filter.</target>
        </trans-unit>
        <trans-unit id="7de111ba655a02d8af6bcdb6e71c56d7031e6b00" translate="yes" xml:space="preserve">
          <source>A filter determines whether the arguments are &lt;a href=&quot;objectinputfilter.status#ALLOWED&quot;&gt;&lt;code&gt;ALLOWED&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt;&lt;code&gt;REJECTED&lt;/code&gt;&lt;/a&gt; and should return the appropriate status. If the filter cannot determine the status it should return &lt;a href=&quot;objectinputfilter.status#UNDECIDED&quot;&gt;&lt;code&gt;UNDECIDED&lt;/code&gt;&lt;/a&gt;. Filters should be designed for the specific use case and expected types. A filter designed for a particular use may be passed a class that is outside of the scope of the filter. If the purpose of the filter is to black-list classes then it can reject a candidate class that matches and report UNDECIDED for others. A filter may be called with class equals &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;arrayLength&lt;/code&gt; equal -1, the depth, number of references, and stream size and return a status that reflects only one or only some of the values. This allows a filter to specific about the choice it is reporting and to use other filters without forcing either allowed or rejected status.</source>
          <target state="translated">A filter determines whether the arguments are &lt;a href=&quot;objectinputfilter.status#ALLOWED&quot;&gt; &lt;code&gt;ALLOWED&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt; &lt;code&gt;REJECTED&lt;/code&gt; &lt;/a&gt; and should return the appropriate status. If the filter cannot determine the status it should return &lt;a href=&quot;objectinputfilter.status#UNDECIDED&quot;&gt; &lt;code&gt;UNDECIDED&lt;/code&gt; &lt;/a&gt;. Filters should be designed for the specific use case and expected types. A filter designed for a particular use may be passed a class that is outside of the scope of the filter. If the purpose of the filter is to black-list classes then it can reject a candidate class that matches and report UNDECIDED for others. A filter may be called with class equals &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;arrayLength&lt;/code&gt; equal -1, the depth, number of references, and stream size and return a status that reflects only one or only some of the values. This allows a filter to specific about the choice it is reporting and to use other filters without forcing either allowed or rejected status.</target>
        </trans-unit>
        <trans-unit id="0bf0848690b34b73710f009588eaee0ac9b1dec7" translate="yes" xml:space="preserve">
          <source>A filter for abstract pathnames.</source>
          <target state="translated">추상 경로 이름에 대한 필터입니다.</target>
        </trans-unit>
        <trans-unit id="cd8e90abaff87389d67364ef74dae3c1534bc794" translate="yes" xml:space="preserve">
          <source>A filter used to pre- and post-process incoming requests.</source>
          <target state="translated">들어오는 요청을 사전 및 사후 처리하는 데 사용되는 필터입니다.</target>
        </trans-unit>
        <trans-unit id="537df4732e9806243084d92dc643311f023f8fb0" translate="yes" xml:space="preserve">
          <source>A filter used to pre- and post-process incoming requests. Pre-processing occurs before the application's exchange handler is invoked, and post-processing occurs after the exchange handler returns. Filters are organised in chains, and are associated with HttpContext instances.</source>
          <target state="translated">들어오는 요청을 사전 및 사후 처리하는 데 사용되는 필터입니다. 사전 처리는 응용 프로그램의 교환 처리기가 호출되기 전에 발생하고 사후 처리는 교환 처리기가 반환 된 후에 발생합니다. 필터는 체인으로 구성되며 HttpContext 인스턴스와 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="4e46c5f00d4c9311a752d8db9bc2a6b91d9ee455" translate="yes" xml:space="preserve">
          <source>A filtering collector differs from a stream's &lt;code&gt;filter()&lt;/code&gt; operation. In this example, suppose there are no employees whose salary is above the threshold in some department. Using a filtering collector as shown above would result in a mapping from that department to an empty &lt;code&gt;Set&lt;/code&gt;. If a stream &lt;code&gt;filter()&lt;/code&gt; operation were done instead, there would be no mapping for that department at all.</source>
          <target state="translated">A filtering collector differs from a stream's &lt;code&gt;filter()&lt;/code&gt; operation. In this example, suppose there are no employees whose salary is above the threshold in some department. Using a filtering collector as shown above would result in a mapping from that department to an empty &lt;code&gt;Set&lt;/code&gt; . If a stream &lt;code&gt;filter()&lt;/code&gt; operation were done instead, there would be no mapping for that department at all.</target>
        </trans-unit>
        <trans-unit id="f5d806550c847ea862457c3d219d54ba7153c428" translate="yes" xml:space="preserve">
          <source>A finder of modules.</source>
          <target state="translated">A finder of modules.</target>
        </trans-unit>
        <trans-unit id="5a27c0038919302b881a06f7ffdce9745aa933a5" translate="yes" xml:space="preserve">
          <source>A finder of modules. A &lt;code&gt;ModuleFinder&lt;/code&gt; is used to find modules during &lt;a href=&quot;package-summary#resolution&quot;&gt;resolution&lt;/a&gt; or &lt;a href=&quot;configuration#service-binding&quot;&gt;service binding&lt;/a&gt;.</source>
          <target state="translated">A finder of modules. A &lt;code&gt;ModuleFinder&lt;/code&gt; is used to find modules during &lt;a href=&quot;package-summary#resolution&quot;&gt;resolution&lt;/a&gt; or &lt;a href=&quot;configuration#service-binding&quot;&gt;service binding&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a0855a7cb6e2cc9c6bb1e2f2e28bf3f0bf0f605f" translate="yes" xml:space="preserve">
          <source>A flag for recording whether this attribute's values are ordered.</source>
          <target state="translated">이 속성 값의 순서를 기록하기위한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="0150a3e4f9ae041e8ce2e60f25a81b388f493479" translate="yes" xml:space="preserve">
          <source>A flag indicating that there has been at least one &lt;code&gt;PropertyChangeVetoException&lt;/code&gt; thrown for the attempted setBeanContext operation.</source>
          <target state="translated">시도 된 setBeanContext 조작에 대해 하나 이상의 &lt;code&gt;PropertyChangeVetoException&lt;/code&gt; 이 발생 했음을 나타내는 플래그 입니다.</target>
        </trans-unit>
        <trans-unit id="ef38e7098fbd7a1a4c4c2c37ee356ad0ed51a5b9" translate="yes" xml:space="preserve">
          <source>A flag indicating whether this attribute was actually specified in the start-tag of its element, or was defaulted from the schema.</source>
          <target state="translated">A flag indicating whether this attribute was actually specified in the start-tag of its element, or was defaulted from the schema.</target>
        </trans-unit>
        <trans-unit id="a00c11559390c6c3c288e96fb53f1dac078f6002" translate="yes" xml:space="preserve">
          <source>A flag to layoutGlyphVector indicating that text in the char array after the indicated limit should not be examined.</source>
          <target state="translated">A flag to layoutGlyphVector indicating that text in the char array after the indicated limit should not be examined.</target>
        </trans-unit>
        <trans-unit id="89b835f89e44dca84649d0af8a2d341b267b828d" translate="yes" xml:space="preserve">
          <source>A flag to layoutGlyphVector indicating that text in the char array before the indicated start should not be examined.</source>
          <target state="translated">A flag to layoutGlyphVector indicating that text in the char array before the indicated start should not be examined.</target>
        </trans-unit>
        <trans-unit id="1b05810e2680c32d104367e2bc3bdf2856bec039" translate="yes" xml:space="preserve">
          <source>A flag to layoutGlyphVector indicating that text is left-to-right as determined by Bidi analysis.</source>
          <target state="translated">A flag to layoutGlyphVector indicating that text is left-to-right as determined by Bidi analysis.</target>
        </trans-unit>
        <trans-unit id="2f642699b80e7848ecebfe10f5fb03cf79285cd9" translate="yes" xml:space="preserve">
          <source>A flag to layoutGlyphVector indicating that text is right-to-left as determined by Bidi analysis.</source>
          <target state="translated">A flag to layoutGlyphVector indicating that text is right-to-left as determined by Bidi analysis.</target>
        </trans-unit>
        <trans-unit id="3b2359dfcb7720ef48d07ba5990a5de781cb3c32" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has a complex glyph-to-char mapping (one that does not map glyphs to chars one-to-one in strictly ascending or descending order matching the run direction).</source>
          <target state="translated">A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has a complex glyph-to-char mapping (one that does not map glyphs to chars one-to-one in strictly ascending or descending order matching the run direction).</target>
        </trans-unit>
        <trans-unit id="9e458e69570a072d1fc8ecb0f33a8857f2d161d8" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has a right-to-left run direction.</source>
          <target state="translated">A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has a right-to-left run direction.</target>
        </trans-unit>
        <trans-unit id="5d389bdc65eb9e2f6f6590d7b5a086d06acef5c7" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has a right-to-left run direction. This refers to the glyph-to-char mapping and does not imply that the visual locations of the glyphs are necessarily in this order, although generally they will be.</source>
          <target state="translated">A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has a right-to-left run direction. This refers to the glyph-to-char mapping and does not imply that the visual locations of the glyphs are necessarily in this order, although generally they will be.</target>
        </trans-unit>
        <trans-unit id="27d657250e658fcd9c6d68b3f91f841beea746f8" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has per-glyph transforms.</source>
          <target state="translated">A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has per-glyph transforms.</target>
        </trans-unit>
        <trans-unit id="64110abfbbbc887bb854fb4704c0089ffea09615" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has position adjustments.</source>
          <target state="translated">A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has position adjustments.</target>
        </trans-unit>
        <trans-unit id="80fe54feb13a5cc0c3529dbae576c4c0c7d6c892" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has position adjustments. When this is true, the glyph positions don't match the accumulated default advances of the glyphs (for example, if kerning has been done).</source>
          <target state="translated">A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has position adjustments. When this is true, the glyph positions don't match the accumulated default advances of the glyphs (for example, if kerning has been done).</target>
        </trans-unit>
        <trans-unit id="dec43e8a9f1bb9d6b9c197216876739e500aa223" translate="yes" xml:space="preserve">
          <source>A float buffer is not comparable to any other type of object.</source>
          <target state="translated">플로트 버퍼는 다른 유형의 객체와 비교할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5fb7a5a9e39b583648f523754a43509e1e7a8e4b" translate="yes" xml:space="preserve">
          <source>A float buffer is not equal to any other type of object.</source>
          <target state="translated">플로트 버퍼는 다른 유형의 객체와 같지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8e77a58864e91572b793bb101954ce33a7471066" translate="yes" xml:space="preserve">
          <source>A float buffer.</source>
          <target state="translated">플로트 버퍼.</target>
        </trans-unit>
        <trans-unit id="bd680bc60ca812a5387563332bf314e22d394073" translate="yes" xml:space="preserve">
          <source>A flow layout arranges components in a directional flow, much like lines of text in a paragraph.</source>
          <target state="translated">A flow layout arranges components in a directional flow, much like lines of text in a paragraph.</target>
        </trans-unit>
        <trans-unit id="6a46d621888c556449816594810e0ad6f440cf3b" translate="yes" xml:space="preserve">
          <source>A flow layout arranges components in a directional flow, much like lines of text in a paragraph. The flow direction is determined by the container's &lt;code&gt;componentOrientation&lt;/code&gt; property and may be one of two values:</source>
          <target state="translated">A flow layout arranges components in a directional flow, much like lines of text in a paragraph. The flow direction is determined by the container's &lt;code&gt;componentOrientation&lt;/code&gt; property and may be one of two values:</target>
        </trans-unit>
        <trans-unit id="fb80e248814493a514fcef9129f6cbb0b50437d8" translate="yes" xml:space="preserve">
          <source>A flow layout lets each component assume its natural (preferred) size.</source>
          <target state="translated">A flow layout lets each component assume its natural (preferred) size.</target>
        </trans-unit>
        <trans-unit id="d96ba43b6da836af6fc96efc40a3cd8caf037eff" translate="yes" xml:space="preserve">
          <source>A focus traversal action with unspecified direction.</source>
          <target state="translated">A focus traversal action with unspecified direction.</target>
        </trans-unit>
        <trans-unit id="d03e66bb96338159b743fc35610bd55d6fbcf642" translate="yes" xml:space="preserve">
          <source>A font designer will typically carefully hint a font for the most common user interface point sizes. Consequently the 'gasp' table will likely specify to use only hinting at those sizes and not &quot;smoothing&quot;. So in many cases the resulting text display is equivalent to &lt;code&gt;VALUE_TEXT_ANTIALIAS_OFF&lt;/code&gt;. This may be unexpected but is correct.</source>
          <target state="translated">A font designer will typically carefully hint a font for the most common user interface point sizes. Consequently the 'gasp' table will likely specify to use only hinting at those sizes and not &quot;smoothing&quot;. So in many cases the resulting text display is equivalent to &lt;code&gt;VALUE_TEXT_ANTIALIAS_OFF&lt;/code&gt; . This may be unexpected but is correct.</target>
        </trans-unit>
        <trans-unit id="2f6791a60db81c95891702d713d2e3e17a17c38c" translate="yes" xml:space="preserve">
          <source>A footer element (&lt;code&gt;TFOOT&lt;/code&gt; ).</source>
          <target state="translated">바닥 글 요소 ( &lt;code&gt;TFOOT&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="095d84578b9b46db68702b89c5e268f351fac4b5" translate="yes" xml:space="preserve">
          <source>A format conversion provider provides format conversion services from one or more input formats to one or more output formats.</source>
          <target state="translated">형식 변환 공급자는 하나 이상의 입력 형식에서 하나 이상의 출력 형식으로 형식 변환 서비스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9cc5d6ee4e5941d38db8fe246dade4e397e58a4b" translate="yes" xml:space="preserve">
          <source>A format conversion provider provides format conversion services from one or more input formats to one or more output formats. Converters include codecs, which encode and/or decode audio data, as well as transcoders, etc. Format converters provide methods for determining what conversions are supported and for obtaining an audio stream from which converted data can be read.</source>
          <target state="translated">형식 변환 공급자는 하나 이상의 입력 형식에서 하나 이상의 출력 형식으로 형식 변환 서비스를 제공합니다. 변환기는 트랜스 코더뿐만 아니라 오디오 데이터를 인코딩 및 / 또는 디코딩하는 코덱을 포함한다. 포맷 변환기는 어떤 변환이 지원되는지를 결정하고 변환 된 데이터를 읽을 수있는 오디오 스트림을 얻는 방법을 제공한다.</target>
        </trans-unit>
        <trans-unit id="787cdbb4f865ed56be30b06dfca7e0f4af1393ad" translate="yes" xml:space="preserve">
          <source>A formatted string</source>
          <target state="translated">형식화 된 문자열</target>
        </trans-unit>
        <trans-unit id="e34e6b811c39b4b5b349c092b770d0705e7dbe5f" translate="yes" xml:space="preserve">
          <source>A forward focus traversal action.</source>
          <target state="translated">A forward focus traversal action.</target>
        </trans-unit>
        <trans-unit id="35d25a295891e4731302bd13ab6217bf8d2a28c1" translate="yes" xml:space="preserve">
          <source>A fragment of Java code representing an initializer for the current value.</source>
          <target state="translated">현재 값의 이니셜 라이저를 나타내는 Java 코드 조각입니다.</target>
        </trans-unit>
        <trans-unit id="60990cb5e587dad8e349ae68390eae1367ebed51" translate="yes" xml:space="preserve">
          <source>A frame may have its native decorations (i.e. &lt;code&gt;Frame&lt;/code&gt; and &lt;code&gt;Titlebar&lt;/code&gt;) turned off with &lt;code&gt;setUndecorated&lt;/code&gt;. This can only be done while the frame is not &lt;a href=&quot;component#isDisplayable()&quot;&gt;&lt;code&gt;displayable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A frame may have its native decorations (i.e. &lt;code&gt;Frame&lt;/code&gt; and &lt;code&gt;Titlebar&lt;/code&gt; ) turned off with &lt;code&gt;setUndecorated&lt;/code&gt; . This can only be done while the frame is not &lt;a href=&quot;component#isDisplayable()&quot;&gt; &lt;code&gt;displayable&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b942d4b2fdeab74944136600301e72f5eb3d26f0" translate="yes" xml:space="preserve">
          <source>A frame-like object that is clipped by a desktop pane.</source>
          <target state="translated">A frame-like object that is clipped by a desktop pane.</target>
        </trans-unit>
        <trans-unit id="9e2e6aded9e997f98ab282c9eb759f9a92abd1bd" translate="yes" xml:space="preserve">
          <source>A frame-like object that is clipped by a desktop pane. The desktop pane, internal frame, and desktop icon objects are often used to create multiple document interfaces within an application.</source>
          <target state="translated">A frame-like object that is clipped by a desktop pane. The desktop pane, internal frame, and desktop icon objects are often used to create multiple document interfaces within an application.</target>
        </trans-unit>
        <trans-unit id="3869e53a3cced311d994733b36fbcccab3b1d8c9" translate="yes" xml:space="preserve">
          <source>A freshly-created lookup object on the &lt;a href=&quot;methodhandles#lookup()&quot;&gt;caller's class&lt;/a&gt; has all possible bits set, except &lt;code&gt;UNCONDITIONAL&lt;/code&gt;. A lookup object on a new lookup class &lt;a href=&quot;#in(java.lang.Class)&quot;&gt;created from a previous lookup object&lt;/a&gt; may have some mode bits set to zero. Mode bits can also be &lt;a href=&quot;#dropLookupMode(int)&quot;&gt;directly cleared&lt;/a&gt;. Once cleared, mode bits cannot be restored from the downgraded lookup object. The purpose of this is to restrict access via the new lookup object, so that it can access only names which can be reached by the original lookup object, and also by the new lookup class.</source>
          <target state="translated">A freshly-created lookup object on the &lt;a href=&quot;methodhandles#lookup()&quot;&gt;caller's class&lt;/a&gt; has all possible bits set, except &lt;code&gt;UNCONDITIONAL&lt;/code&gt; . A lookup object on a new lookup class &lt;a href=&quot;#in(java.lang.Class)&quot;&gt;created from a previous lookup object&lt;/a&gt; may have some mode bits set to zero. Mode bits can also be &lt;a href=&quot;#dropLookupMode(int)&quot;&gt;directly cleared&lt;/a&gt;. Once cleared, mode bits cannot be restored from the downgraded lookup object. The purpose of this is to restrict access via the new lookup object, so that it can access only names which can be reached by the original lookup object, and also by the new lookup class.</target>
        </trans-unit>
        <trans-unit id="f50712164fb4f66c4a5273060c757a95e13d5e62" translate="yes" xml:space="preserve">
          <source>A freshly-created lookup object on the &lt;a href=&quot;methodhandles#lookup--&quot;&gt;caller's class&lt;/a&gt; has all possible bits set, since the caller class can access all its own members. A lookup object on a new lookup class &lt;a href=&quot;methodhandles.lookup#in-java.lang.Class-&quot;&gt;created from a previous lookup object&lt;/a&gt; may have some mode bits set to zero. The purpose of this is to restrict access via the new lookup object, so that it can access only names which can be reached by the original lookup object, and also by the new lookup class.</source>
          <target state="translated">&lt;a href=&quot;methodhandles#lookup--&quot;&gt;호출자 클래스&lt;/a&gt; 에서 새로 작성된 조회 오브젝트 는 가능한 모든 비트 세트를 갖습니다. 호출자 클래스는 모든 자체 멤버에 액세스 할 수 있기 때문입니다. &lt;a href=&quot;methodhandles.lookup#in-java.lang.Class-&quot;&gt;이전 조회 객체에서 생성 된&lt;/a&gt; 새 조회 클래스의 조회 객체 에는 일부 모드 비트가 0으로 설정되어있을 수 있습니다. 이것의 목적은 새로운 조회 객체를 통한 액세스를 제한하여 원래 조회 객체와 새로운 조회 클래스가 도달 할 수있는 이름에만 액세스 할 수 있도록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="1b5de0b9db89f7dec9586d9d504d2d55acb5d76d" translate="yes" xml:space="preserve">
          <source>A function that accepts two partial results and merges them.</source>
          <target state="translated">A function that accepts two partial results and merges them.</target>
        </trans-unit>
        <trans-unit id="6d07cafb2c426484441f2fe06c267dc28cd189d5" translate="yes" xml:space="preserve">
          <source>A function that accepts two partial results and merges them. The combiner function may fold state from one argument into the other and return that, or may return a new result container.</source>
          <target state="translated">두 개의 부분 결과를 받아 병합하는 함수입니다. 결합기 함수는 한 인수에서 다른 인수로 상태를 접고이를 리턴하거나 새 결과 컨테이너를 리턴 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43bddcf15e634de817d95953c7f18c644307bb91" translate="yes" xml:space="preserve">
          <source>A function that creates and returns a new mutable result container.</source>
          <target state="translated">새로운 가변 결과 컨테이너를 생성하고 반환하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="ac772ea250f6df76a426391d3fc80b98a029b616" translate="yes" xml:space="preserve">
          <source>A function that folds a value into a mutable result container.</source>
          <target state="translated">값을 변경 가능한 결과 컨테이너로 접는 기능입니다.</target>
        </trans-unit>
        <trans-unit id="c9b6cc11acd2a2833a727b14160da37708cf5cb6" translate="yes" xml:space="preserve">
          <source>A future release of the JDK may change the default value of the &lt;code&gt;java.security.manager&lt;/code&gt; system property to &quot;&lt;code&gt;disallow&lt;/code&gt;&quot;.</source>
          <target state="translated">JDK의 향후 릴리스에서는 &lt;code&gt;java.security.manager&lt;/code&gt; 시스템 속성 의 기본값 을 &quot; &lt;code&gt;disallow&lt;/code&gt; &quot;로 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ac22082df4a50758f8268942cc76f7ff63cfbbfc" translate="yes" xml:space="preserve">
          <source>A garbage collection notification is emitted by &lt;a href=&quot;garbagecollectormxbean&quot;&gt;&lt;code&gt;GarbageCollectorMXBean&lt;/code&gt;&lt;/a&gt; when the Java virtual machine completes a garbage collection action The notification emitted will contain the garbage collection notification information about the status of the memory:</source>
          <target state="translated">가비지 콜렉션 알림은 Java 가상 머신이 가비지 콜렉션 조치를 완료 할 때 &lt;a href=&quot;garbagecollectormxbean&quot;&gt; &lt;code&gt;GarbageCollectorMXBean&lt;/code&gt; 에&lt;/a&gt; 의해 방출됩니다. 방출 된 알림에는 메모리 상태에 대한 가비지 콜렉션 알림 정보가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f1e987f1e57505c842f18a1165026e190dbf68de" translate="yes" xml:space="preserve">
          <source>A gauge monitor observes an attribute that is continuously variable with time. A gauge monitor sends notifications as follows:</source>
          <target state="translated">게이지 모니터는 시간에 따라 지속적으로 변하는 속성을 관찰합니다. 게이지 모니터는 다음과 같이 알림을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="1354cd976006274706a25240cf8974eba59b5894" translate="yes" xml:space="preserve">
          <source>A general guideline for validators is to return true if the attribute was originally present in the pipeline, and false if it was added by the validator.</source>
          <target state="translated">A general guideline for validators is to return true if the attribute was originally present in the pipeline, and false if it was added by the validator.</target>
        </trans-unit>
        <trans-unit id="f3bb2e152ff1aaee77640e95e07291f19892a22f" translate="yes" xml:space="preserve">
          <source>A generator of uniform pseudorandom values applicable for use in (among other contexts) isolated parallel computations that may generate subtasks.</source>
          <target state="translated">서브 태스크를 생성 할 수있는 고립 된 병렬 계산에 (다른 상황에서) 적용 할 수있는 균일 한 의사 난수 값 생성기.</target>
        </trans-unit>
        <trans-unit id="f296f7762bab23d802a5065844a5502434108582" translate="yes" xml:space="preserve">
          <source>A generator of uniform pseudorandom values applicable for use in (among other contexts) isolated parallel computations that may generate subtasks. Class &lt;code&gt;SplittableRandom&lt;/code&gt; supports methods for producing pseudorandom numbers of type &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, and &lt;code&gt;double&lt;/code&gt; with similar usages as for class &lt;a href=&quot;random&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt; but differs in the following ways:</source>
          <target state="translated">서브 태스크를 생성 할 수있는 고립 된 병렬 계산에 (다른 상황에서) 적용 할 수있는 균일 한 의사 난수 값 생성기. 수업 &lt;code&gt;SplittableRandom&lt;/code&gt; 는 형의 의사 난수 생성 방법 지원 &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;long&lt;/code&gt; 및 &lt;code&gt;double&lt;/code&gt; 클래스와 유사한 용도로 &lt;a href=&quot;random&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt; 그러나 다음과 같은 방법으로 다릅니다 :</target>
        </trans-unit>
        <trans-unit id="39c26f88bef5c9de64f68da3b786d42455a9cab2" translate="yes" xml:space="preserve">
          <source>A generic Abstract Window Toolkit(AWT) container object is a component that can contain other AWT components.</source>
          <target state="translated">A generic Abstract Window Toolkit(AWT) container object is a component that can contain other AWT components.</target>
        </trans-unit>
        <trans-unit id="5f318d1625a7edc63e2f5618183f323472491dc4" translate="yes" xml:space="preserve">
          <source>A generic HTML TagElement class.</source>
          <target state="translated">A generic HTML TagElement class.</target>
        </trans-unit>
        <trans-unit id="1b641406d58da099513d996133375b981123f238" translate="yes" xml:space="preserve">
          <source>A generic HTML TagElement class. The methods define how white space is interpreted around the tag.</source>
          <target state="translated">A generic HTML TagElement class. The methods define how white space is interpreted around the tag.</target>
        </trans-unit>
        <trans-unit id="ee3e63d8bc812120b6319da0e643f81f18db8658" translate="yes" xml:space="preserve">
          <source>A generic account exception.</source>
          <target state="translated">일반적인 계정 예외입니다.</target>
        </trans-unit>
        <trans-unit id="6638c80328392fd542656ba1c109b89d4578d810" translate="yes" xml:space="preserve">
          <source>A generic container that is often used to group objects.</source>
          <target state="translated">A generic container that is often used to group objects.</target>
        </trans-unit>
        <trans-unit id="ea8cc0b37c072a62f90548d86d62546be1b6030b" translate="yes" xml:space="preserve">
          <source>A generic credential exception.</source>
          <target state="translated">일반적인 자격 증명 예외입니다.</target>
        </trans-unit>
        <trans-unit id="8d3921e6c41e544a62aad090d777399ba09dfeb0" translate="yes" xml:space="preserve">
          <source>A generic element defines a family of types, not just one. If this is a generic element, a</source>
          <target state="translated">일반 요소는 유형이 아닌 유형 군을 정의합니다. 이것이 일반 요소 인 경우</target>
        </trans-unit>
        <trans-unit id="b1afdf0cd5e768e29225070708940face02a0af6" translate="yes" xml:space="preserve">
          <source>A generic element defines a family of types, not just one. If this is a generic element, a prototypical type is returned which has the element's invocation on the type variables corresponding to its own formal type parameters. For example, for the generic class element &lt;code&gt;C&amp;lt;N extends Number&amp;gt;&lt;/code&gt;, the parameterized type &lt;code&gt;C&amp;lt;N&amp;gt;&lt;/code&gt; is returned. The &lt;a href=&quot;../util/types&quot;&gt;&lt;code&gt;Types&lt;/code&gt;&lt;/a&gt; utility interface has more general methods for obtaining the full range of types defined by an element.</source>
          <target state="translated">제네릭 요소는 하나가 아닌 유형의 패밀리를 정의합니다. 이것이 제네릭 요소 인 경우 고유 한 형식 매개 변수에 해당하는 유형 변수에 대한 요소의 호출이있는 프로토 타입 유형이 리턴됩니다. 예를 들어, 일반 클래스 요소 &lt;code&gt;C&amp;lt;N extends Number&amp;gt;&lt;/code&gt; 의 경우 매개 변수화 된 유형 &lt;code&gt;C&amp;lt;N&amp;gt;&lt;/code&gt; 이 리턴됩니다. &lt;a href=&quot;../util/types&quot;&gt; &lt;code&gt;Types&lt;/code&gt; &lt;/a&gt; 유틸리티 인터페이스 요소에 의해 정의 된 형태의 모든 범위를 얻기위한 일반적인 방법이있다.</target>
        </trans-unit>
        <trans-unit id="3578a52f1bc291e214ae7fd982f27e4ba0b688c3" translate="yes" xml:space="preserve">
          <source>A generic implementation of &lt;code&gt;ColorSelectionModel&lt;/code&gt;.</source>
          <target state="translated">A generic implementation of &lt;code&gt;ColorSelectionModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30dc67c3ddc214c44e60b4ae5fede37d7fcd999c" translate="yes" xml:space="preserve">
          <source>A generic implementation of BoundedRangeModel.</source>
          <target state="translated">A generic implementation of BoundedRangeModel.</target>
        </trans-unit>
        <trans-unit id="1f635e63becb19276595cfd341b6bc81d2e61999" translate="yes" xml:space="preserve">
          <source>A generic implementation of SingleSelectionModel.</source>
          <target state="translated">A generic implementation of SingleSelectionModel.</target>
        </trans-unit>
        <trans-unit id="75035a576fd43563b6b8ea7a4a57774133267093" translate="yes" xml:space="preserve">
          <source>A generic interface describing operations that transform method handles.</source>
          <target state="translated">메서드 핸들을 변환하는 작업을 설명하는 일반 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="77699ac8ce1639725272014a583a4f432c56526a" translate="yes" xml:space="preserve">
          <source>A generic interface describing operations that transform method handles. Typical usage is for implementing &lt;a href=&quot;../dynamiclinkerfactory#setInternalObjectsFilter(jdk.dynalink.linker.MethodHandleTransformer)&quot;&gt;&lt;code&gt;internal objects filters&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">메서드 핸들을 변환하는 작업을 설명하는 일반 인터페이스입니다. 일반적인 용도는 &lt;a href=&quot;../dynamiclinkerfactory#setInternalObjectsFilter(jdk.dynalink.linker.MethodHandleTransformer)&quot;&gt; &lt;code&gt;internal objects filters&lt;/code&gt; &lt;/a&gt; 를 구현하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="5ccd60299ff2b531b7b5d0ed4bca19b49c6e458e" translate="yes" xml:space="preserve">
          <source>A generic interface for a mutable collection of unique attributes.</source>
          <target state="translated">A generic interface for a mutable collection of unique attributes.</target>
        </trans-unit>
        <trans-unit id="69fa87a3d0b58ae17bc145d5d6f7bee1fd0c231d" translate="yes" xml:space="preserve">
          <source>A generic interface for a mutable collection of unique attributes. Implementations will probably want to provide a constructor of the form:</source>
          <target state="translated">A generic interface for a mutable collection of unique attributes. Implementations will probably want to provide a constructor of the form:</target>
        </trans-unit>
        <trans-unit id="36a2626cbe080b42ca256bc3f5f06c6e465de057" translate="yes" xml:space="preserve">
          <source>A given connector need not support the generation of client stubs. However, the connectors specified by the JMX Remote API do (JMXMP Connector and RMI Connector).</source>
          <target state="translated">지정된 커넥터는 클라이언트 스텁 생성을 지원할 필요가 없습니다. 그러나 JMX Remote API에 의해 지정된 커넥터 (JMXMP 커넥터 및 RMI 커넥터)가 수행합니다.</target>
        </trans-unit>
        <trans-unit id="b139f5ad6b7946d259047308f55c666e905ba834" translate="yes" xml:space="preserve">
          <source>A given invocation of the Java virtual machine maintains a system-wide list of file type detectors. Installed file type detectors are loaded using the service-provider loading facility defined by the &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class. Installed file type detectors are loaded using the system class loader. If the system class loader cannot be found then the extension class loader is used; If the extension class loader cannot be found then the bootstrap class loader is used. File type detectors are typically installed by placing them in a JAR file on the application class path or in the extension directory, the JAR file contains a provider-configuration file named &lt;code&gt;java.nio.file.spi.FileTypeDetector&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;, and the file lists one or more fully-qualified names of concrete subclass of &lt;code&gt;FileTypeDetector &lt;/code&gt; that have a zero argument constructor. If the process of locating or instantiating the installed file type detectors fails then an unspecified error is thrown. The ordering that installed providers are located is implementation specific.</source>
          <target state="translated">JVM (Java Virtual Machine)을 호출하면 시스템 전체의 파일 유형 검출기 목록이 유지됩니다. 설치된 파일 유형 감지기는 시스템에서 정의한 서비스 제공 업체 로딩 기능을 사용하여로드됩니다.&lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; 클래스에. 설치된 파일 유형 감지기는 시스템 클래스 로더를 사용하여로드됩니다. 시스템 클래스 로더를 찾을 수 없으면 확장 클래스 로더가 사용됩니다. 확장 클래스 로더를 찾을 수 없으면 부트 스트랩 클래스 로더가 사용됩니다. 파일 유형 검출기는 일반적으로 애플리케이션 클래스 경로 또는 확장 디렉토리의 JAR 파일에 배치하여 설치되며, JAR 파일은 자원 디렉토리에 &lt;code&gt;java.nio.file.spi.FileTypeDetector&lt;/code&gt; 라는 제공자 구성 파일을 포함합니다. &lt;code&gt;META-INF/services&lt;/code&gt; 파일에는 인수 생성자가없는 &lt;code&gt;FileTypeDetector &lt;/code&gt; 의 구체적인 하위 클래스의 정규화 된 이름이 하나 이상 나열 됩니다. 설치된 파일 유형 감지기를 찾거나 인스턴스화하는 프로세스가 실패하면 지정되지 않은 오류가 발생합니다. 설치된 공급자가있는 순서는 구현별로 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c99eab50de0140ef9d944911fa037ec867874873" translate="yes" xml:space="preserve">
          <source>A given invocation of the Java virtual machine maintains a system-wide list of file type detectors. Installed file type detectors are loaded using the service-provider loading facility defined by the &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class. Installed file type detectors are loaded using the system class loader. If the system class loader cannot be found then the platform class loader is used. File type detectors are typically installed by placing them in a JAR file on the application class path, the JAR file contains a provider-configuration file named &lt;code&gt;java.nio.file.spi.FileTypeDetector&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;, and the file lists one or more fully-qualified names of concrete subclass of &lt;code&gt;FileTypeDetector &lt;/code&gt; that have a zero argument constructor. If the process of locating or instantiating the installed file type detectors fails then an unspecified error is thrown. The ordering that installed providers are located is implementation specific.</source>
          <target state="translated">A given invocation of the Java virtual machine maintains a system-wide list of file type detectors. Installed file type detectors are loaded using the service-provider loading facility defined by the &lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; class. Installed file type detectors are loaded using the system class loader. If the system class loader cannot be found then the platform class loader is used. File type detectors are typically installed by placing them in a JAR file on the application class path, the JAR file contains a provider-configuration file named &lt;code&gt;java.nio.file.spi.FileTypeDetector&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt; , and the file lists one or more fully-qualified names of concrete subclass of &lt;code&gt;FileTypeDetector &lt;/code&gt; that have a zero argument constructor. If the process of locating or instantiating the installed file type detectors fails then an unspecified error is thrown. The ordering that installed providers are located is implementation specific.</target>
        </trans-unit>
        <trans-unit id="9e3b442b5fe9a27c98a08c95f21bc990f7ab8bc7" translate="yes" xml:space="preserve">
          <source>A global color table is written to the output stream if one of the following conditions is met:</source>
          <target state="translated">다음 조건 중 하나가 충족되면 글로벌 색상 표가 출력 스트림에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="7919fd5e0a156cbf5a6d578801b4051978ce6323" translate="yes" xml:space="preserve">
          <source>A group layout is used to combine together multiple &lt;em&gt;member layouts&lt;/em&gt;.</source>
          <target state="translated">그룹 레이아웃은 여러 &lt;em&gt;구성원 레이아웃&lt;/em&gt; 을 결합하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="3878a482e95aa330ec2b9f1a8f94afc99382d0ee" translate="yes" xml:space="preserve">
          <source>A group layout is used to combine together multiple &lt;em&gt;member layouts&lt;/em&gt;. There are two ways in which member layouts can be combined: if member layouts are laid out one after the other, the resulting group layout is said to be a &lt;em&gt;struct&lt;/em&gt; (see &lt;a href=&quot;memorylayout#ofStruct(jdk.incubator.foreign.MemoryLayout...)&quot;&gt;&lt;code&gt;MemoryLayout.ofStruct(MemoryLayout...)&lt;/code&gt;&lt;/a&gt;); conversely, if all member layouts are laid out at the same starting offset, the resulting group layout is said to be a &lt;em&gt;union&lt;/em&gt; (see &lt;a href=&quot;memorylayout#ofUnion(jdk.incubator.foreign.MemoryLayout...)&quot;&gt;&lt;code&gt;MemoryLayout.ofUnion(MemoryLayout...)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">그룹 레이아웃은 여러 &lt;em&gt;구성원 레이아웃&lt;/em&gt; 을 결합하는 데 사용됩니다 . 멤버 레이아웃을 결합하는 방법에는 두 가지가 있습니다. 멤버 레이아웃이 차례로 배치되면 결과 그룹 레이아웃은 &lt;em&gt;구조체&lt;/em&gt; 라고합니다 ( &lt;a href=&quot;memorylayout#ofStruct(jdk.incubator.foreign.MemoryLayout...)&quot;&gt; &lt;code&gt;MemoryLayout.ofStruct(MemoryLayout...)&lt;/code&gt; &lt;/a&gt; ). 반대로 모든 멤버 레이아웃이 동일한 시작 오프셋에 배치 된 경우 결과 그룹 레이아웃은 &lt;em&gt;공용체&lt;/em&gt; 라고합니다 ( &lt;a href=&quot;memorylayout#ofUnion(jdk.incubator.foreign.MemoryLayout...)&quot;&gt; &lt;code&gt;MemoryLayout.ofUnion(MemoryLayout...)&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8af0722143a8cd99cd10f9bcc5d199373569cb1d" translate="yes" xml:space="preserve">
          <source>A grouping of asynchronous channels for the purpose of resource sharing</source>
          <target state="translated">리소스 공유를위한 비동기 채널 그룹</target>
        </trans-unit>
        <trans-unit id="c24b47a3aa5a36d6a87410408d2c4d5a5faf5cfe" translate="yes" xml:space="preserve">
          <source>A grouping of asynchronous channels for the purpose of resource sharing.</source>
          <target state="translated">리소스 공유를위한 비동기 채널 그룹입니다.</target>
        </trans-unit>
        <trans-unit id="e523c29175596d5a85587ffc32f4afa7a0f727ed" translate="yes" xml:space="preserve">
          <source>A guarding dynamic linker that can determine whether it can link the call site solely based on the type of the first argument at linking invocation time.</source>
          <target state="translated">연결 호출시 첫 번째 인수의 유형만을 기반으로 호출 사이트를 연결할 수 있는지 여부를 결정할 수있는 보호 동적 링커입니다.</target>
        </trans-unit>
        <trans-unit id="56b90f0cdf584fea1ad19bbe6701bbb7c7dc09ec" translate="yes" xml:space="preserve">
          <source>A guarding dynamic linker that can determine whether it can link the call site solely based on the type of the first argument at linking invocation time. (The first argument is usually the receiver). Most language-specific linkers will fall into this category, as they recognize their native objects as Java objects of classes implementing a specific language-native interface or superclass. The linker mechanism can optimize the dispatch for these linkers, see &lt;a href=&quot;support/compositetypebasedguardingdynamiclinker&quot;&gt;&lt;code&gt;CompositeTypeBasedGuardingDynamicLinker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">연결 호출시 첫 번째 인수의 유형만을 기반으로 호출 사이트를 연결할 수 있는지 여부를 결정할 수있는 보호 동적 링커입니다. (첫 번째 인수는 일반적으로 수신자입니다). 대부분의 언어 관련 링커는 고유 객체를 특정 언어 고유 인터페이스 또는 수퍼 클래스를 구현하는 클래스의 Java 객체로 인식하므로이 범주에 속합니다. 링커 메커니즘은 이러한 링커에 대한 디스패치를 ​​최적화 할 수 있습니다 . &lt;a href=&quot;support/compositetypebasedguardingdynamiclinker&quot;&gt; &lt;code&gt;CompositeTypeBasedGuardingDynamicLinker&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2be906f8d04ce14e3feb869931fc7b7f37dae596" translate="yes" xml:space="preserve">
          <source>A handle is a small icon that displays adjacent to the node which allows the user to click once to expand or collapse the node. A common interface shows a plus sign (+) for a node which can be expanded and a minus sign (-) for a node which can be collapsed. Handles are always shown for nodes below the topmost level.</source>
          <target state="translated">A handle is a small icon that displays adjacent to the node which allows the user to click once to expand or collapse the node. A common interface shows a plus sign (+) for a node which can be expanded and a minus sign (-) for a node which can be collapsed. Handles are always shown for nodes below the topmost level.</target>
        </trans-unit>
        <trans-unit id="30a821dd5510cfba238591c999baad3298ac1b21" translate="yes" xml:space="preserve">
          <source>A handle to the standard error stream.</source>
          <target state="translated">A handle to the standard error stream.</target>
        </trans-unit>
        <trans-unit id="9928d62a2404074511ec0f299ada0040336beb28" translate="yes" xml:space="preserve">
          <source>A handle to the standard error stream. Usually, this file descriptor is not used directly, but rather via the output stream known as &lt;code&gt;System.err&lt;/code&gt;.</source>
          <target state="translated">표준 오류 스트림에 대한 핸들입니다. 일반적으로이 파일 디스크립터는 직접 사용되지 않고 &lt;code&gt;System.err&lt;/code&gt; 이라는 출력 스트림을 통해 사용됩니다. .</target>
        </trans-unit>
        <trans-unit id="0a7380902243667d2be7d7f4080010cd101f173f" translate="yes" xml:space="preserve">
          <source>A handle to the standard input stream.</source>
          <target state="translated">A handle to the standard input stream.</target>
        </trans-unit>
        <trans-unit id="a2838c09bf3325466fca5db9ee06eb2453bfff6d" translate="yes" xml:space="preserve">
          <source>A handle to the standard input stream. Usually, this file descriptor is not used directly, but rather via the input stream known as &lt;code&gt;System.in&lt;/code&gt;.</source>
          <target state="translated">표준 입력 스트림에 대한 핸들입니다. 일반적으로이 파일 설명자는 직접 사용되지 않고 &lt;code&gt;System.in&lt;/code&gt; 이라는 입력 스트림을 통해 사용됩니다. .</target>
        </trans-unit>
        <trans-unit id="1978a1df9850d456ea7b0d47dceb737dbb3e418e" translate="yes" xml:space="preserve">
          <source>A handle to the standard output stream.</source>
          <target state="translated">A handle to the standard output stream.</target>
        </trans-unit>
        <trans-unit id="e8b2f584a4219597bac6f663c5cbf24cfa40cf51" translate="yes" xml:space="preserve">
          <source>A handle to the standard output stream. Usually, this file descriptor is not used directly, but rather via the output stream known as &lt;code&gt;System.out&lt;/code&gt;.</source>
          <target state="translated">표준 출력 스트림에 대한 핸들입니다. 일반적으로이 파일 디스크립터는 직접 사용되는 것이 아니라 &lt;code&gt;System.out&lt;/code&gt; 이라는 출력 스트림을 통해 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a1b5138ff4cb191fc484864d0a2d10c52bfd78da" translate="yes" xml:space="preserve">
          <source>A handler for consuming notifications from the SCTP stack.</source>
          <target state="translated">SCTP 스택에서 알림을 사용하기위한 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="4a3f24c9968701ba089eded185c35bffc8539bb2" translate="yes" xml:space="preserve">
          <source>A handler for consuming the result of an asynchronous I/O operation.</source>
          <target state="translated">비동기 I / O 작업 결과를 사용하기위한 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="87b43b91a9388e1643e11f5fb51e2f91d80cd199" translate="yes" xml:space="preserve">
          <source>A handler for consuming the result of an asynchronous operation</source>
          <target state="translated">비동기 작업의 결과를 소비하기위한 핸들러</target>
        </trans-unit>
        <trans-unit id="2ced0ff8936b2b8ca7d93d97b9ddc96163d5006b" translate="yes" xml:space="preserve">
          <source>A handler for push promises.</source>
          <target state="translated">A handler for push promises.</target>
        </trans-unit>
        <trans-unit id="3cec3929b4904998820b22c6d9b5a5aebdfb2d20" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that discards the oldest unhandled request and then retries &lt;code&gt;execute&lt;/code&gt;, unless the executor is shut down, in which case the task is discarded.</source>
          <target state="translated">처리되지 않은 가장 오래된 요청을 삭제 한 다음 다시 시도 &lt;code&gt;execute&lt;/code&gt; 거부 된 작업에 대한 처리기 집행자가 종료되지 않는 한 작업이 삭제되는 경우.</target>
        </trans-unit>
        <trans-unit id="6d2b537bf297eb19ca8a1ca48bc8a94afcc52f9b" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that runs the rejected task directly in the calling thread of the &lt;code&gt;execute&lt;/code&gt; method, unless the executor has been shut down, in which case the task is discarded.</source>
          <target state="translated">의 호출 스레드에서 직접 거부 작업을 실행한다, 거부 된 태스크의 핸들러 &lt;code&gt;execute&lt;/code&gt; 이 종료되지 않은 경우 메소드 .이 경우 태스크는 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="12e0f3f68b2f87e89d6864a58af1905bcde37958" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that silently discards the rejected task.</source>
          <target state="translated">거부 된 작업을 자동으로 삭제하는 거부 된 작업에 대한 처리기</target>
        </trans-unit>
        <trans-unit id="2e10982cc89e46fcc6c511554f0ca769b7a3f337" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that throws a &lt;a href=&quot;rejectedexecutionexception&quot;&gt;&lt;code&gt;RejectedExecutionException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A handler for rejected tasks that throws a &lt;a href=&quot;rejectedexecutionexception&quot;&gt; &lt;code&gt;RejectedExecutionException&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d4927fee05dc5b481a362ec2b93edc23d0a7a2e5" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that throws a &lt;a href=&quot;rejectedexecutionexception&quot;&gt;&lt;code&gt;RejectedExecutionException&lt;/code&gt;&lt;/a&gt;. This is the default handler for &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;scheduledthreadpoolexecutor&quot;&gt;&lt;code&gt;ScheduledThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A handler for rejected tasks that throws a &lt;a href=&quot;rejectedexecutionexception&quot;&gt; &lt;code&gt;RejectedExecutionException&lt;/code&gt; &lt;/a&gt;. This is the default handler for &lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;scheduledthreadpoolexecutor&quot;&gt; &lt;code&gt;ScheduledThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d3cce71daa234bfb9ba87e7bb64a50184f43e70f" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that throws a &lt;code&gt;RejectedExecutionException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RejectedExecutionException&lt;/code&gt; 을 발생 시키는 거부 된 작업에 대한 처리기입니다 .</target>
        </trans-unit>
        <trans-unit id="abc1f69c0d6ea8e98a9bd04a018ce25520ec62a5" translate="yes" xml:space="preserve">
          <source>A handler for response bodies.</source>
          <target state="translated">A handler for response bodies.</target>
        </trans-unit>
        <trans-unit id="45a1e2095347e4e6aa94d3b5dab9a732262b2e18" translate="yes" xml:space="preserve">
          <source>A handler for response bodies. The class &lt;a href=&quot;httpresponse.bodyhandlers&quot;&gt;&lt;code&gt;BodyHandlers&lt;/code&gt;&lt;/a&gt; provides implementations of many common body handlers.</source>
          <target state="translated">A handler for response bodies. The class &lt;a href=&quot;httpresponse.bodyhandlers&quot;&gt; &lt;code&gt;BodyHandlers&lt;/code&gt; &lt;/a&gt; provides implementations of many common body handlers.</target>
        </trans-unit>
        <trans-unit id="7f8ca17fde6e602f88cd3d6a07f614961244d33f" translate="yes" xml:space="preserve">
          <source>A handler for tasks that cannot be executed by a &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt; 로 실행할 수없는 태스크의 핸들러입니다 .</target>
        </trans-unit>
        <trans-unit id="06c0ebbb5e3c421200e02ff95ec0e812f7ef5aca" translate="yes" xml:space="preserve">
          <source>A handler which is invoked to process HTTP exchanges.</source>
          <target state="translated">HTTP 교환을 처리하기 위해 호출되는 핸들러.</target>
        </trans-unit>
        <trans-unit id="2a55adfcac5c280004809c287f6c5c3609f7f7bf" translate="yes" xml:space="preserve">
          <source>A handler which is invoked to process HTTP exchanges. Each HTTP exchange is handled by one of these handlers.</source>
          <target state="translated">HTTP 교환을 처리하기 위해 호출되는 핸들러. 각 HTTP 교환은 이러한 핸들러 중 하나에 의해 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="0a91275847969127c3a82acb83d8bd92b1ca604e" translate="yes" xml:space="preserve">
          <source>A hardware or software device that plays back a MIDI &lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;.</source>
          <target state="translated">A hardware or software device that plays back a MIDI &lt;a href=&quot;sequence&quot;&gt; &lt;code&gt;sequence&lt;/code&gt; &lt;/a&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="fbd1b68861c6ec91db40150e61ef171032c7db14" translate="yes" xml:space="preserve">
          <source>A hardware or software device that plays back a MIDI &lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;. A MIDI sequence contains lists of time-stamped MIDI data, such as might be read from a standard MIDI file. Most sequencers also provide functions for creating and editing sequences.</source>
          <target state="translated">A hardware or software device that plays back a MIDI &lt;a href=&quot;sequence&quot;&gt; &lt;code&gt;sequence&lt;/code&gt; &lt;/a&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;. A MIDI sequence contains lists of time-stamped MIDI data, such as might be read from a standard MIDI file. Most sequencers also provide functions for creating and editing sequences.</target>
        </trans-unit>
        <trans-unit id="cb43ba18f8e33a313d98fe4907d0dc669c17300e" translate="yes" xml:space="preserve">
          <source>A hardware or software device that plays back a MIDI &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;.</source>
          <target state="translated">MIDI &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 를 재생하는 하드웨어 또는 소프트웨어 장치를 시퀀서 라고 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1050858df573c8b54a98d32a32a6761e7ca701a4" translate="yes" xml:space="preserve">
          <source>A hardware or software device that plays back a MIDI &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;. A MIDI sequence contains lists of time-stamped MIDI data, such as might be read from a standard MIDI file. Most sequencers also provide functions for creating and editing sequences.</source>
          <target state="translated">MIDI &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 를 재생하는 하드웨어 또는 소프트웨어 장치를 시퀀서 라고 &lt;em&gt;합니다&lt;/em&gt; . MIDI 시퀀스에는 표준 MIDI 파일에서 읽을 수있는 타임 스탬프 된 MIDI 데이터 목록이 포함됩니다. 대부분의 시퀀서는 시퀀스 생성 및 편집 기능도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3a7edc5100c7524404899934b687c1b0263088ad" translate="yes" xml:space="preserve">
          <source>A hash code</source>
          <target state="translated">해시 코드</target>
        </trans-unit>
        <trans-unit id="8f0f5eba602ce509dcca3db786c22c74bdedbf76" translate="yes" xml:space="preserve">
          <source>A hash code based on the executable's hash code.</source>
          <target state="translated">실행 파일의 해시 코드를 기반으로하는 해시 코드입니다.</target>
        </trans-unit>
        <trans-unit id="6422685e686802184d02914f59e5e03e37e4b920" translate="yes" xml:space="preserve">
          <source>A hash code for this &lt;code&gt;WeekFields&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;WeekFields&lt;/code&gt; 의 해시 코드입니다 .</target>
        </trans-unit>
        <trans-unit id="082377c5769ccaeb74c377e922e220bd74c1eb8b" translate="yes" xml:space="preserve">
          <source>A hash code for this DecimalStyle.</source>
          <target state="translated">이 DecimalStyle의 해시 코드입니다.</target>
        </trans-unit>
        <trans-unit id="1a0a2cbf33b6fc708b1e71a5607d7568aba4cd9d" translate="yes" xml:space="preserve">
          <source>A hash code for this abstract pathname</source>
          <target state="translated">이 추상 경로명의 해시 코드</target>
        </trans-unit>
        <trans-unit id="5e74913296ef0affb84d3a88b703ae21e89763f7" translate="yes" xml:space="preserve">
          <source>A hash code for this chronology.</source>
          <target state="translated">이 연대기의 해시 코드입니다.</target>
        </trans-unit>
        <trans-unit id="56ecf462977972b604f5d42c94c6433b5d120cb4" translate="yes" xml:space="preserve">
          <source>A hash code for this clock.</source>
          <target state="translated">이 시계의 해시 코드입니다.</target>
        </trans-unit>
        <trans-unit id="6d733f15fb333cbf3f6de70fb60920b8481a2562" translate="yes" xml:space="preserve">
          <source>A hash code for this date-time.</source>
          <target state="translated">이 날짜-시간의 해시 코드입니다.</target>
        </trans-unit>
        <trans-unit id="cd393e22a9982f36df6d1e49fdc513be03d5db18" translate="yes" xml:space="preserve">
          <source>A hash code for this date.</source>
          <target state="translated">이 날짜의 해시 코드입니다.</target>
        </trans-unit>
        <trans-unit id="75aa073250f910cbe612992bee56c47830c125f3" translate="yes" xml:space="preserve">
          <source>A hash code for this duration.</source>
          <target state="translated">이 기간 동안의 해시 코드입니다.</target>
        </trans-unit>
        <trans-unit id="ef6b3720cb101c6523e14b342faf358533e784b6" translate="yes" xml:space="preserve">
          <source>A hash code for this month-day.</source>
          <target state="translated">이 달의 해시 코드입니다.</target>
        </trans-unit>
        <trans-unit id="9d286da27efe86be8a56c732ea14a6d1d4c2dd17" translate="yes" xml:space="preserve">
          <source>A hash code for this offset.</source>
          <target state="translated">이 오프셋의 해시 코드입니다.</target>
        </trans-unit>
        <trans-unit id="338c5ee14af4c4f5108e22b8984af253203eb866" translate="yes" xml:space="preserve">
          <source>A hash code for this period.</source>
          <target state="translated">이 기간의 해시 코드입니다.</target>
        </trans-unit>
        <trans-unit id="d1ca372319e5779208c68834db7457509cffd5e9" translate="yes" xml:space="preserve">
          <source>A hash code for this range.</source>
          <target state="translated">이 범위의 해시 코드입니다.</target>
        </trans-unit>
        <trans-unit id="def95cbd7ecd69e1cb41c6e7fe9e142e1b6e12b9" translate="yes" xml:space="preserve">
          <source>A hash code for this time-zone ID.</source>
          <target state="translated">이 시간대 ID의 해시 코드입니다.</target>
        </trans-unit>
        <trans-unit id="21b0c4b6c9ca1f20ee357c40a64a32937d745822" translate="yes" xml:space="preserve">
          <source>A hash code for this time.</source>
          <target state="translated">이번에는 해시 코드입니다.</target>
        </trans-unit>
        <trans-unit id="8fc40307541ad29754e7c8cc76d8cdac1da4dab9" translate="yes" xml:space="preserve">
          <source>A hash code for this year-month.</source>
          <target state="translated">올해의 해시 코드입니다.</target>
        </trans-unit>
        <trans-unit id="0f0ed6aa7948b36fe936b86cc68d0c6dc3a1c7b0" translate="yes" xml:space="preserve">
          <source>A hash code for this year.</source>
          <target state="translated">올해의 해시 코드.</target>
        </trans-unit>
        <trans-unit id="c7260df544fa8e975c1248b223e104cf612fdcea" translate="yes" xml:space="preserve">
          <source>A hash code of this reference as an int.</source>
          <target state="translated">이 참조의 해시 코드를 정수로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c038c38ee7b79b8905fbe54cde0df6b4f273532e" translate="yes" xml:space="preserve">
          <source>A hash code value for this &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">이 &lt;code&gt;UUID&lt;/code&gt; 의 해시 코드 값</target>
        </trans-unit>
        <trans-unit id="85283c8b1e2ec2edadf924f01b3aaeb9490f0d58" translate="yes" xml:space="preserve">
          <source>A hash code value for this object.</source>
          <target state="translated">이 객체의 해시 코드 값</target>
        </trans-unit>
        <trans-unit id="5e119773bedd6f34e3f4a604ececbbc72f9f1cf7" translate="yes" xml:space="preserve">
          <source>A hash table supporting full concurrency of retrievals and high expected concurrency for updates.</source>
          <target state="translated">검색의 전체 동시성 및 업데이트에 대한 높은 예상 동시성을 지원하는 해시 테이블입니다.</target>
        </trans-unit>
        <trans-unit id="7be080c5693a5494d8a81110a7c2c060ad2b0789" translate="yes" xml:space="preserve">
          <source>A hash table supporting full concurrency of retrievals and high expected concurrency for updates. This class obeys the same functional specification as &lt;a href=&quot;../hashtable&quot;&gt;&lt;code&gt;Hashtable&lt;/code&gt;&lt;/a&gt;, and includes versions of methods corresponding to each method of &lt;code&gt;Hashtable&lt;/code&gt;. However, even though all operations are thread-safe, retrieval operations do &lt;em&gt;not&lt;/em&gt; entail locking, and there is &lt;em&gt;not&lt;/em&gt; any support for locking the entire table in a way that prevents all access. This class is fully interoperable with &lt;code&gt;Hashtable&lt;/code&gt; in programs that rely on its thread safety but not on its synchronization details.</source>
          <target state="translated">검색의 전체 동시성 및 업데이트에 대한 높은 예상 동시성을 지원하는 해시 테이블입니다. 이 클래스는 &lt;a href=&quot;../hashtable&quot;&gt; &lt;code&gt;Hashtable&lt;/code&gt; &lt;/a&gt; 과 동일한 기능 사양을 준수하며 각 &lt;code&gt;Hashtable&lt;/code&gt; 메서드에 해당하는 메서드 버전을 포함 합니다. 그러나 모든 작업이 스레드 안전에도 불구하고, 검색 작업을 수행 &lt;em&gt;하지&lt;/em&gt; 수반 잠금을, 그리고이 &lt;em&gt;없는&lt;/em&gt; 방법으로 그 방지에 대한 모든 액세스에 전체 테이블을 잠금에 대한 지원은. 이 클래스는 스레드 안전에 의존하지만 동기화 세부 사항에는 의존하지 않는 프로그램에서 &lt;code&gt;Hashtable&lt;/code&gt; 과 완전히 상호 운용됩니다 .</target>
        </trans-unit>
        <trans-unit id="f2ac80bdd78fba7e815e2307473834134c0b8301" translate="yes" xml:space="preserve">
          <source>A hash-code value for this URI</source>
          <target state="translated">이 URI의 해시 코드 값</target>
        </trans-unit>
        <trans-unit id="d3497b3b6dfa91c3d3b0888a9fd10432473f17f6" translate="yes" xml:space="preserve">
          <source>A hash-code value for this descriptor.</source>
          <target state="translated">이 설명 자의 해시 코드 값입니다.</target>
        </trans-unit>
        <trans-unit id="151aa801653e9351defb38ce2c8618918a6ba455" translate="yes" xml:space="preserve">
          <source>A hash-code value for this virtual machine</source>
          <target state="translated">이 가상 머신의 해시 코드 값</target>
        </trans-unit>
        <trans-unit id="6f786cf19e1bfad99116b7eea0c7c4d01a129f5e" translate="yes" xml:space="preserve">
          <source>A hashcode value for this object.</source>
          <target state="translated">이 객체의 해시 코드 값</target>
        </trans-unit>
        <trans-unit id="0c92d5878bd4109278901b64a7898c9b219f4450" translate="yes" xml:space="preserve">
          <source>A helper interface to run the nested event loop.</source>
          <target state="translated">A helper interface to run the nested event loop.</target>
        </trans-unit>
        <trans-unit id="531037da01ce93fad322a6e90507cf29968387ee" translate="yes" xml:space="preserve">
          <source>A hexadecimal digit: &lt;code&gt;[0-9a-fA-F]&lt;/code&gt;</source>
          <target state="translated">16 진수 : &lt;code&gt;[0-9a-fA-F]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8019d565ee6672068a88a557bf3259f61e9f6e2e" translate="yes" xml:space="preserve">
          <source>A hexadecimal digit: &lt;code&gt;[\p{gc=Nd}\p{IsHex_Digit}]&lt;/code&gt;</source>
          <target state="translated">16 진수 : &lt;code&gt;[\p{gc=Nd}\p{IsHex_Digit}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="854769d68115f9401de71a1c27601cf8c3ddf233" translate="yes" xml:space="preserve">
          <source>A hidden class or interface cannot be described in &lt;a href=&quot;constant/constantdesc&quot;&gt;&lt;em&gt;nominal form&lt;/em&gt;&lt;/a&gt; by &lt;a href=&quot;#describeConstable()&quot;&gt;&lt;code&gt;Class::describeConstable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;constant/classdesc#of(java.lang.String)&quot;&gt;&lt;code&gt;ClassDesc::of&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;constant/classdesc#ofDescriptor(java.lang.String)&quot;&gt;&lt;code&gt;ClassDesc::ofDescriptor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">숨겨진 클래스 또는 인터페이스는 &lt;a href=&quot;#describeConstable()&quot;&gt; &lt;code&gt;Class::describeConstable&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;constant/classdesc#of(java.lang.String)&quot;&gt; &lt;code&gt;ClassDesc::of&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;constant/classdesc#ofDescriptor(java.lang.String)&quot;&gt; &lt;code&gt;ClassDesc::ofDescriptor&lt;/code&gt; &lt;/a&gt; 의해 &lt;a href=&quot;constant/constantdesc&quot;&gt;&lt;em&gt;명목 형식&lt;/em&gt;&lt;/a&gt; 으로 설명 될 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="33feb4751de206337df0da8b411af356b47dfbe1" translate="yes" xml:space="preserve">
          <source>A hidden class or interface cannot be discovered by &lt;a href=&quot;#forName(java.lang.String)&quot;&gt;&lt;code&gt;Class::forName&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;classloader#loadClass(java.lang.String,boolean)&quot;&gt;&lt;code&gt;ClassLoader::loadClass&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">숨겨진 클래스 또는 인터페이스는 &lt;a href=&quot;#forName(java.lang.String)&quot;&gt; &lt;code&gt;Class::forName&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;classloader#loadClass(java.lang.String,boolean)&quot;&gt; &lt;code&gt;ClassLoader::loadClass&lt;/code&gt; &lt;/a&gt; 발견 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="bdbc23c75dc01eb9bc547d290b2694f3cdd11d0e" translate="yes" xml:space="preserve">
          <source>A hidden class or interface cannot be referenced by the constant pools of other classes and interfaces.</source>
          <target state="translated">숨겨진 클래스 또는 인터페이스는 다른 클래스 및 인터페이스의 상수 풀에서 참조 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d24b8283c653fdd6ed4a2e087f19e836042302de" translate="yes" xml:space="preserve">
          <source>A hidden class or interface is never an array class, but may be the element type of an array. In all other respects, the fact that a class or interface is hidden has no bearing on the characteristics exposed by the methods of class &lt;code&gt;Class&lt;/code&gt;.</source>
          <target state="translated">숨겨진 클래스 또는 인터페이스는 배열 클래스가 아니지만 배열의 요소 유형일 수 있습니다. 다른 모든 측면에서 클래스 또는 인터페이스가 숨겨져 있다는 사실은 &lt;code&gt;Class&lt;/code&gt; 클래스 의 메서드에 의해 노출 된 특성과 관련이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="ea99b794c163661f5edc141486ec187f2c07ad75" translate="yes" xml:space="preserve">
          <source>A hidden class or interface may be serializable, but this requires a custom serialization mechanism in order to ensure that instances are properly serialized and deserialized. The default serialization mechanism supports only classes and interfaces that are discoverable by their class name.</source>
          <target state="translated">숨겨진 클래스 또는 인터페이스는 직렬화 가능할 수 있지만 인스턴스가 올바르게 직렬화되고 역 직렬화되도록하려면 사용자 정의 직렬화 메커니즘이 필요합니다. 기본 직렬화 메커니즘은 해당 클래스 이름으로 검색 할 수있는 클래스 및 인터페이스 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="f5c10d3bde5bef7105f7b7369c1b278236f25262" translate="yes" xml:space="preserve">
          <source>A hidden nestmate class has access to the private members of all classes and interfaces in the same nest.</source>
          <target state="translated">숨겨진 네스트 메이트 클래스는 동일한 네스트에있는 모든 클래스 및 인터페이스의 전용 멤버에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0eaf5113462f5f09a75427d07e5000b2557a560e" translate="yes" xml:space="preserve">
          <source>A hierarchical URI is considered to be less than an opaque URI with an identical scheme.</source>
          <target state="translated">계층 적 URI는 동일한 체계를 가진 불투명 한 URI보다 작은 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="3f15b0dd6e68706f3cc8aca6a2b0b354d9959881" translate="yes" xml:space="preserve">
          <source>A hierarchical URI is subject to further parsing according to the syntax</source>
          <target state="translated">계층 적 URI는 구문에 따라 추가 구문 분석 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b72242d36dd9c1a1bbcdcd871a57488b4e19272" translate="yes" xml:space="preserve">
          <source>A higher value (eg 200) corresponds to lower contrast text when displaying dark text on a light background.</source>
          <target state="translated">A higher value (eg 200) corresponds to lower contrast text when displaying dark text on a light background.</target>
        </trans-unit>
        <trans-unit id="0d5419f9f8244ee00b27805e52cb8a6861a1f7c0" translate="yes" xml:space="preserve">
          <source>A higher-quality spliterator will provide balanced and known-size splits, accurate sizing information, and a number of other &lt;a href=&quot;../spliterator#characteristics()&quot;&gt;&lt;code&gt;characteristics&lt;/code&gt;&lt;/a&gt; of the spliterator or data that can be used by implementations to optimize execution.</source>
          <target state="translated">A higher-quality spliterator will provide balanced and known-size splits, accurate sizing information, and a number of other &lt;a href=&quot;../spliterator#characteristics()&quot;&gt; &lt;code&gt;characteristics&lt;/code&gt; &lt;/a&gt; of the spliterator or data that can be used by implementations to optimize execution.</target>
        </trans-unit>
        <trans-unit id="3a70b6cdbfa6b9ebe9df52783e9c0b40b7945da0" translate="yes" xml:space="preserve">
          <source>A higher-quality spliterator will provide balanced and known-size splits, accurate sizing information, and a number of other &lt;a href=&quot;../spliterator#characteristics--&quot;&gt;&lt;code&gt;characteristics&lt;/code&gt;&lt;/a&gt; of the spliterator or data that can be used by implementations to optimize execution.</source>
          <target state="translated">고품질 스플리터는 알려진 크기의 스플릿, 정확한 크기 정보 및 구현에 의해 실행 최적화를 위해 사용할 수있는 스플리터 또는 데이터의 여러 가지 다른 &lt;a href=&quot;../spliterator#characteristics--&quot;&gt; &lt;code&gt;characteristics&lt;/code&gt; &lt;/a&gt; 을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e3b3c45bec3819031bfb3beac1e4cf8a85411829" translate="yes" xml:space="preserve">
          <source>A highlight.</source>
          <target state="translated">A highlight.</target>
        </trans-unit>
        <trans-unit id="1f73842d8304b98d46d95ef4a1c93bc4aeac0030" translate="yes" xml:space="preserve">
          <source>A hint to the scheduler that the current thread is willing to yield its current use of a processor.</source>
          <target state="translated">A hint to the scheduler that the current thread is willing to yield its current use of a processor.</target>
        </trans-unit>
        <trans-unit id="1d2af2f2ec5660f7616d7e59e084554df9083acf" translate="yes" xml:space="preserve">
          <source>A hint to the scheduler that the current thread is willing to yield its current use of a processor. The scheduler is free to ignore this hint.</source>
          <target state="translated">현재 스레드가 현재 프로세서를 사용하려고한다는 스케줄러에 대한 힌트입니다. 스케줄러는이 힌트를 무시해도됩니다.</target>
        </trans-unit>
        <trans-unit id="2e25d8e3fd6b9427c3d026104f6c339e625a8770" translate="yes" xml:space="preserve">
          <source>A horizontal line is drawn dividing the children of the root node.</source>
          <target state="translated">A horizontal line is drawn dividing the children of the root node.</target>
        </trans-unit>
        <trans-unit id="c154a87c0971a077f5cd09333efec30ff1904e75" translate="yes" xml:space="preserve">
          <source>A horizontal offset to be applied to the subsampling grid before subsampling.</source>
          <target state="translated">A horizontal offset to be applied to the subsampling grid before subsampling.</target>
        </trans-unit>
        <trans-unit id="dce262eaf05a51984255debdf4e961963652fdf2" translate="yes" xml:space="preserve">
          <source>A horizontal offset to be applied to the subsampling grid before subsampling. The first pixel to be used will be offset this amount from the origin of the region, or of the image if no region is specified.</source>
          <target state="translated">서브 샘플링 전에 서브 샘플링 그리드에 적용되는 수평 오프셋입니다. 사용되는 첫 번째 픽셀은 영역의 원점 또는 영역이 지정되지 않은 경우 이미지의 원점에서이 양만큼 오프셋됩니다.</target>
        </trans-unit>
        <trans-unit id="cae300f90785fca5b33cd05f0e37e347f3bdb295" translate="yes" xml:space="preserve">
          <source>A horizontal whitespace character: &lt;code&gt;[ \t\xA0\u1680\u180e\u2000-\u200a\u202f\u205f\u3000]&lt;/code&gt;</source>
          <target state="translated">가로 공백 문자 : &lt;code&gt;[ \t\xA0\u1680\u180e\u2000-\u200a\u202f\u205f\u3000]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2092bd5cb7b434a04d1edfe6aba1977fb241b996" translate="yes" xml:space="preserve">
          <source>A host isn't in a domain (RFC 2965 sec. 3.3.2) if:</source>
          <target state="translated">다음과 같은 경우 호스트가 도메인에 없습니다 (RFC 2965 초 3.3.2).</target>
        </trans-unit>
        <trans-unit id="db7e379eb5e0f3f3d4c5030d527a0a8f61a34df4" translate="yes" xml:space="preserve">
          <source>A human readable description of the file.</source>
          <target state="translated">A human readable description of the file.</target>
        </trans-unit>
        <trans-unit id="cdc37c4166ea9c8a2930ce69109a712e2add43c0" translate="yes" xml:space="preserve">
          <source>A human readable description of the file. For example, a file named</source>
          <target state="translated">A human readable description of the file. For example, a file named</target>
        </trans-unit>
        <trans-unit id="05275ceba984e39524d2b0df962c6b901d482052" translate="yes" xml:space="preserve">
          <source>A human readable description of the type of the file.</source>
          <target state="translated">A human readable description of the type of the file.</target>
        </trans-unit>
        <trans-unit id="bf5a6fdb997f26851858a2a7e49351bab13266e2" translate="yes" xml:space="preserve">
          <source>A human readable description of the type of the file. For example, a &lt;code&gt;jpg&lt;/code&gt; file might have a type description of: &quot;A JPEG Compressed Image File&quot;</source>
          <target state="translated">A human readable description of the type of the file. For example, a &lt;code&gt;jpg&lt;/code&gt; file might have a type description of: &quot;A JPEG Compressed Image File&quot;</target>
        </trans-unit>
        <trans-unit id="d6381a21b33e7b13b7e539d9fd273f492eae9e53" translate="yes" xml:space="preserve">
          <source>A hypertext anchor.</source>
          <target state="translated">A hypertext anchor.</target>
        </trans-unit>
        <trans-unit id="07aa9b38a4ede3c83aa047636c3e1f374ce196f4" translate="yes" xml:space="preserve">
          <source>A instance of &lt;code&gt;CookieManager&lt;/code&gt; will have cookie policy ACCEPT_ORIGINAL_SERVER by default. Users always can call this method to set another cookie policy.</source>
          <target state="translated">&lt;code&gt;CookieManager&lt;/code&gt; 의 인스턴스는 기본적으로 쿠키 정책 ACCEPT_ORIGINAL_SERVER를 갖습니다. 사용자는 항상이 메소드를 호출하여 다른 쿠키 정책을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed93d745a111d391d7a2f46cbf50e03f102e5d8b" translate="yes" xml:space="preserve">
          <source>A int buffer is not comparable to any other type of object.</source>
          <target state="translated">int 버퍼는 다른 유형의 객체와 비교할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a7a5c5dcd5045f34fd77586929f7a76518869889" translate="yes" xml:space="preserve">
          <source>A int buffer is not equal to any other type of object.</source>
          <target state="translated">int 버퍼는 다른 유형의 객체와 같지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3b8db826daaeb4da111cdd530cd07bbeacba70f5" translate="yes" xml:space="preserve">
          <source>A is a HDN string and has the form NB, where N is a non-empty name string, B has the form .B', and B' is a HDN string. (So, x.y.com domain-matches .Y.com but not Y.com.)</source>
          <target state="translated">A는 HDN 문자열이며 NB 형식입니다. 여기서 N은 비어 있지 않은 이름 문자열이고 B는 .B '형식이며 B'는 HDN 문자열입니다. 따라서 xycom 도메인은 .Y.com과 일치하지만 Y.com과는 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c1d25b7429dcbb1987d6223c0fd9a5ab8b4f4d68" translate="yes" xml:space="preserve">
          <source>A java.awt.Component that will allow a human to directly edit the current property value. May be null if this is not supported.</source>
          <target state="translated">인간이 현재 특성 값을 직접 편집 할 수있게하는 java.awt.Component. 지원되지 않는 경우 null 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8479b6e12a50290a4467817e2ae521cd0602642" translate="yes" xml:space="preserve">
          <source>A key for decrypting.</source>
          <target state="translated">A key for decrypting.</target>
        </trans-unit>
        <trans-unit id="5f2f2b91c9987065c527424b56bb25a319710c59" translate="yes" xml:space="preserve">
          <source>A key for encrypting.</source>
          <target state="translated">A key for encrypting.</target>
        </trans-unit>
        <trans-unit id="aeb7761ffdaca83c367d0f28bdffb8e9a53f6697" translate="yes" xml:space="preserve">
          <source>A key for signing.</source>
          <target state="translated">A key for signing.</target>
        </trans-unit>
        <trans-unit id="ba41fbf59d1b71ab91a38baf00516e42096254bd" translate="yes" xml:space="preserve">
          <source>A key for verifying.</source>
          <target state="translated">A key for verifying.</target>
        </trans-unit>
        <trans-unit id="7b3c012683f968fa1daa96c09c44348b3118cee4" translate="yes" xml:space="preserve">
          <source>A key indicating the shape should be filled.</source>
          <target state="translated">A key indicating the shape should be filled.</target>
        </trans-unit>
        <trans-unit id="d4c1bb24115fe4e1a99161dae231b08fd3bac417" translate="yes" xml:space="preserve">
          <source>A key indicating the shape should be stroked with a 1-pixel wide stroke.</source>
          <target state="translated">A key indicating the shape should be stroked with a 1-pixel wide stroke.</target>
        </trans-unit>
        <trans-unit id="e2f512559524a09759b68d44fb68ab035c63ee9c" translate="yes" xml:space="preserve">
          <source>A key is added to a selector's key set as a side effect of registering a channel via the channel's &lt;a href=&quot;selectablechannel#register(java.nio.channels.Selector,int)&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method. Cancelled keys are removed from the key set during selection operations. The key set itself is not directly modifiable.</source>
          <target state="translated">A key is added to a selector's key set as a side effect of registering a channel via the channel's &lt;a href=&quot;selectablechannel#register(java.nio.channels.Selector,int)&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; method. Cancelled keys are removed from the key set during selection operations. The key set itself is not directly modifiable.</target>
        </trans-unit>
        <trans-unit id="dc935686fe4c4bf5294565416f415b4c8bfe92e9" translate="yes" xml:space="preserve">
          <source>A key is added to a selector's key set as a side effect of registering a channel via the channel's &lt;a href=&quot;selectablechannel#register-java.nio.channels.Selector-int-&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method. Cancelled keys are removed from the key set during selection operations. The key set itself is not directly modifiable.</source>
          <target state="translated">채널의 &lt;a href=&quot;selectablechannel#register-java.nio.channels.Selector-int-&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; 방법을 통해 채널을 등록하면 부작용으로 키가 선택기의 키 세트에 추가됩니다 . 취소 된 키는 선택 조작 중에 키 세트에서 제거됩니다. 키 세트 자체는 직접 수정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="11bba173b0c2ffe68b976c77efcdac1edeb723a9" translate="yes" xml:space="preserve">
          <source>A key is added to its selector's cancelled-key set when it is cancelled, whether by closing its channel or by invoking its &lt;a href=&quot;selectionkey#cancel()&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method. Cancelling a key will cause its channel to be deregistered during the next selection operation, at which time the key will be removed from all of the selector's key sets.</source>
          <target state="translated">키는 채널을 닫거나 &lt;a href=&quot;selectionkey#cancel()&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 취소 될 때 선택기의 취소 된 키 세트에 추가됩니다 . 키를 취소하면 다음 선택 작업 중에 해당 채널의 등록이 취소되며, 이때 키는 모든 선택기의 키 세트에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="964050a9069a956131820dda0c3b3fdb5dec31af" translate="yes" xml:space="preserve">
          <source>A key is added to its selector's cancelled-key set when it is cancelled, whether by closing its channel or by invoking its &lt;a href=&quot;selectionkey#cancel--&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method. Cancelling a key will cause its channel to be deregistered during the next selection operation, at which time the key will removed from all of the selector's key sets.</source>
          <target state="translated">채널을 닫거나 &lt;a href=&quot;selectionkey#cancel--&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt; 방법 을 호출하여 취소 할 때 선택기의 취소 된 키 세트에 키가 추가됩니다 . 키를 취소하면 다음 선택 작업 중에 채널이 등록 취소되며이 때 키가 선택기의 모든 키 세트에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="c5c83f6d5654385f02695581674b4358677f2c26" translate="yes" xml:space="preserve">
          <source>A key is valid upon creation and remains so until it is cancelled, its channel is closed, or its selector is closed.</source>
          <target state="translated">키는 생성시 유효하며 취소되거나 채널이 닫히거나 선택기가 닫힐 때까지 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="3567b234d34db2898e97ad89a7423f7ad8bb314d" translate="yes" xml:space="preserve">
          <source>A key may be specified in an algorithm-specific way, or in an algorithm-independent encoding format (such as ASN.1). For example, a DSA private key may be specified by its components &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;p&lt;/code&gt;, &lt;code&gt;q&lt;/code&gt;, and &lt;code&gt;g&lt;/code&gt; (see &lt;a href=&quot;dsaprivatekeyspec&quot;&gt;&lt;code&gt;DSAPrivateKeySpec&lt;/code&gt;&lt;/a&gt;), or it may be specified using its DER encoding (see &lt;a href=&quot;pkcs8encodedkeyspec&quot;&gt;&lt;code&gt;PKCS8EncodedKeySpec&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">키는 알고리즘 별 방식 또는 알고리즘 독립적 인코딩 형식 (예 : ASN.1)으로 지정할 수 있습니다. 예를 들어, DSA 개인 키는 구성 요소 &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;p&lt;/code&gt; , &lt;code&gt;q&lt;/code&gt; 및 &lt;code&gt;g&lt;/code&gt; 로 지정되거나 ( &lt;a href=&quot;dsaprivatekeyspec&quot;&gt; &lt;code&gt;DSAPrivateKeySpec&lt;/code&gt; &lt;/a&gt; 참조 ) DER 인코딩을 사용하여 지정 될 수 있습니다 ( &lt;a href=&quot;pkcs8encodedkeyspec&quot;&gt; &lt;code&gt;PKCS8EncodedKeySpec&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="dd53af8d943f80628e365177149bf1813ced8fbe" translate="yes" xml:space="preserve">
          <source>A key part of the date-time problem space is adjusting a date to a new, related value, such as the &quot;last day of the month&quot;, or &quot;next Wednesday&quot;. These are modeled as functions that adjust a base date-time. The functions implement &lt;a href=&quot;temporaladjuster&quot;&gt;&lt;code&gt;TemporalAdjuster&lt;/code&gt;&lt;/a&gt; and operate on &lt;code&gt;Temporal&lt;/code&gt;. A set of common functions are provided in &lt;a href=&quot;temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. For example, to find the first occurrence of a day-of-week after a given date, use &lt;a href=&quot;temporaladjusters#next(java.time.DayOfWeek)&quot;&gt;&lt;code&gt;TemporalAdjusters.next(DayOfWeek)&lt;/code&gt;&lt;/a&gt;, such as &lt;code&gt;date.with(next(MONDAY))&lt;/code&gt;. Applications can also define adjusters by implementing &lt;a href=&quot;temporaladjuster&quot;&gt;&lt;code&gt;TemporalAdjuster&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">날짜-시간 문제 공간의 핵심 부분은 &quot;매월 마지막 날&quot;또는 &quot;다음 수요일&quot;과 같은 새로운 관련 값으로 날짜를 조정하는 것입니다. 이들은 기본 날짜-시간을 조정하는 함수로 모델링됩니다. 기능 구현 &lt;a href=&quot;temporaladjuster&quot;&gt; &lt;code&gt;TemporalAdjuster&lt;/code&gt; 을&lt;/a&gt; 과에서 작동 &lt;code&gt;Temporal&lt;/code&gt; . &lt;a href=&quot;temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt; 에는 일련의 공통 기능이 제공됩니다 . 예를 들어, 주어진 날짜 이후 요일의 첫 번째 발생을 찾으려면 &lt;code&gt;date.with(next(MONDAY))&lt;/code&gt; 와 같은 &lt;a href=&quot;temporaladjusters#next(java.time.DayOfWeek)&quot;&gt; &lt;code&gt;TemporalAdjusters.next(DayOfWeek)&lt;/code&gt; &lt;/a&gt; 사용하십시오 . 응용 프로그램은 &lt;a href=&quot;temporaladjuster&quot;&gt; &lt;code&gt;TemporalAdjuster&lt;/code&gt; &lt;/a&gt; 를 구현하여 조정자를 정의 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1f46b54c144fbfb71c028bbb373ce3b3ddfb0cb9" translate="yes" xml:space="preserve">
          <source>A key part of the date-time problem space is adjusting a date to a new, related value, such as the &quot;last day of the month&quot;, or &quot;next Wednesday&quot;. These are modeled as functions that adjust a base date-time. The functions implement &lt;a href=&quot;temporaladjuster&quot;&gt;&lt;code&gt;TemporalAdjuster&lt;/code&gt;&lt;/a&gt; and operate on &lt;code&gt;Temporal&lt;/code&gt;. A set of common functions are provided in &lt;a href=&quot;temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. For example, to find the first occurrence of a day-of-week after a given date, use &lt;a href=&quot;temporaladjusters#next-java.time.DayOfWeek-&quot;&gt;&lt;code&gt;TemporalAdjusters.next(DayOfWeek)&lt;/code&gt;&lt;/a&gt;, such as &lt;code&gt;date.with(next(MONDAY))&lt;/code&gt;. Applications can also define adjusters by implementing &lt;a href=&quot;temporaladjuster&quot;&gt;&lt;code&gt;TemporalAdjuster&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">날짜-시간 문제 공간의 핵심은 날짜를 &quot;매월 마지막 날&quot;또는 &quot;다음 수요일&quot;과 같은 새로운 관련 값으로 조정하는 것입니다. 이들은 기본 날짜-시간을 조정하는 함수로 모델링됩니다. 기능 구현 &lt;a href=&quot;temporaladjuster&quot;&gt; &lt;code&gt;TemporalAdjuster&lt;/code&gt; 을&lt;/a&gt; 과에서 작동 &lt;code&gt;Temporal&lt;/code&gt; . &lt;a href=&quot;temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt; 에 공통 기능 세트가 제공됩니다 . 예를 들어, 주어진 날짜 이후 요일의 첫 번째 발생을 찾으려면 &lt;a href=&quot;temporaladjusters#next-java.time.DayOfWeek-&quot;&gt; &lt;code&gt;TemporalAdjusters.next(DayOfWeek)&lt;/code&gt; &lt;/a&gt; 사용하십시오 ( 예 : &lt;code&gt;date.with(next(MONDAY))&lt;/code&gt; . 응용 프로그램은 &lt;a href=&quot;temporaladjuster&quot;&gt; &lt;code&gt;TemporalAdjuster&lt;/code&gt; &lt;/a&gt; 를 구현하여 조정자를 정의 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bd8a761e520198c1cdaa54b4d4372dc66292abc6" translate="yes" xml:space="preserve">
          <source>A key property list as defined below.</source>
          <target state="translated">아래 정의 된 주요 속성 목록.</target>
        </trans-unit>
        <trans-unit id="f68a1b3c961bf3188f44addd02d18988aa1e3f1b" translate="yes" xml:space="preserve">
          <source>A key property list written as a String is a comma-separated list of elements. Each element is either an asterisk or a key property. A key property consists of a key, an equals (&lt;code&gt;=&lt;/code&gt;), and the associated value.</source>
          <target state="translated">문자열로 작성된 키 특성 목록은 쉼표로 구분 된 요소 목록입니다. 각 요소는 별표 또는 키 속성입니다. 키 속성은 키, 등호 ( &lt;code&gt;=&lt;/code&gt; ) 및 관련 값으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="c0586c9ec6232590f575482bb2c80c36ba5f7423" translate="yes" xml:space="preserve">
          <source>A key representing the registration of this channel with the given selector</source>
          <target state="translated">주어진 셀렉터로이 채널의 등록을 나타내는 키</target>
        </trans-unit>
        <trans-unit id="ecefc7965907056694e7481d75b869b29f450431" translate="yes" xml:space="preserve">
          <source>A key representing the registration of this object with the given watch service</source>
          <target state="translated">지정된 시계 서비스에이 객체의 등록을 나타내는 키</target>
        </trans-unit>
        <trans-unit id="f42a40d645e94595a63ed0059561f728071e39f5" translate="yes" xml:space="preserve">
          <source>A key specification is a transparent representation of the key material that constitutes a key. A key may be specified in an algorithm-specific way, or in an algorithm-independent encoding format (such as ASN.1). This package contains key specifications for DSA public and private keys, RSA public and private keys, PKCS #8 private keys in DER-encoded format, and X.509 public and private keys in DER-encoded format.</source>
          <target state="translated">키 사양은 키를 구성하는 키 자료를 투명하게 표현한 것입니다. 키는 알고리즘 별 방식 또는 알고리즘 독립적 인코딩 형식 (예 : ASN.1)으로 지정할 수 있습니다. 이 패키지에는 DSA 공개 및 개인 키, RSA 공개 및 개인 키, DER 인코딩 형식의 PKCS # 8 개인 키 및 DER 인코딩 형식의 X.509 공개 및 개인 키에 대한 키 사양이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0f3d8b0a4094e0a7b104df6160697464e59ec13" translate="yes" xml:space="preserve">
          <source>A key specification is a transparent representation of the key material that constitutes a key. A key may be specified in an algorithm-specific way, or in an algorithm-independent encoding format (such as ASN.1). This package contains key specifications for Diffie-Hellman public and private keys, as well as key specifications for DES, Triple DES, and PBE secret keys.</source>
          <target state="translated">키 사양은 키를 구성하는 키 자료를 투명하게 표현한 것입니다. 키는 알고리즘 별 방식 또는 알고리즘 독립적 인코딩 형식 (예 : ASN.1)으로 지정할 수 있습니다. 이 패키지에는 Diffie-Hellman 공개 및 개인 키의 주요 사양과 DES, Triple DES 및 PBE 비밀 키의 주요 사양이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0aacfcfb6bf4889f12230f05b825f1f2e0d7537b" translate="yes" xml:space="preserve">
          <source>A key use case for calculations on a date in an arbitrary calendar system is producing a month-by-month calendar for display and user interaction. Again, this is a UI issue, and use of this interface solely within a few methods of the UI layer may be justified.</source>
          <target state="translated">임의의 달력 시스템에서 날짜를 계산하는 주요 사용 사례는 디스플레이 및 사용자 상호 작용을위한 월별 달력을 생성하는 것입니다. 다시 말하지만 이것은 UI 문제이며 UI 인터페이스의 몇 가지 방법 내에서만이 인터페이스를 사용하는 것이 정당화 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c34e01f46090c7cf338fb81da1087990aca8505e" translate="yes" xml:space="preserve">
          <source>A kit can safely store editing state as an instance of the kit will be dedicated to a text component. New kits will normally be created by cloning a prototype kit. The kit will have its &lt;code&gt;setComponent&lt;/code&gt; method called to establish its relationship with a JTextComponent.</source>
          <target state="translated">키트의 인스턴스가 텍스트 구성 요소 전용이므로 키트는 편집 상태를 안전하게 저장할 수 있습니다. 새 키트는 일반적으로 프로토 타입 키트를 복제하여 생성됩니다. 키트 에는 JTextComponent와의 관계를 설정하기 위해 호출되는 &lt;code&gt;setComponent&lt;/code&gt; 메서드 가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7fcb15f00291a40cab9dcee79f5d952bd5eac29d" translate="yes" xml:space="preserve">
          <source>A label is an individual part of a domain name. The original ToASCII operation, as defined in RFC 3490, only operates on a single label. This method can handle both label and entire domain name, by assuming that labels in a domain name are always separated by dots. The following characters are recognized as dots: \u002E (full stop), \u3002 (ideographic full stop), \uFF0E (fullwidth full stop), and \uFF61 (halfwidth ideographic full stop). if dots are used as label separators, this method also changes all of them to \u002E (full stop) in output translated string.</source>
          <target state="translated">레이블은 도메인 이름의 개별 부분입니다. RFC 3490에 정의 된 원래 ToASCII 작업은 단일 레이블에서만 작동합니다. 이 방법은 도메인 이름의 레이블이 항상 점으로 구분되어 있다고 가정하여 레이블과 전체 도메인 이름을 모두 처리 할 수 ​​있습니다. 다음 문자는 점으로 인식됩니다 : \ u002E (완전 정지), \ u3002 (표면 정지), \ uFF0E (전폭 완전 정지) 및 \ uFF61 (반각 표의 문자 완전 정지). 점을 레이블 구분 기호로 사용하는 경우이 방법은 출력 변환 된 문자열에서 모든 점을 \ u002E (완전 정지)로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="123da693824e9381ac6679a81d6dc167f1012487" translate="yes" xml:space="preserve">
          <source>A label is an individual part of a domain name. The original ToUnicode operation, as defined in RFC 3490, only operates on a single label. This method can handle both label and entire domain name, by assuming that labels in a domain name are always separated by dots. The following characters are recognized as dots: \u002E (full stop), \u3002 (ideographic full stop), \uFF0E (fullwidth full stop), and \uFF61 (halfwidth ideographic full stop).</source>
          <target state="translated">레이블은 도메인 이름의 개별 부분입니다. RFC 3490에 정의 된 원래 ToUnicode 작업은 단일 레이블에서만 작동합니다. 이 방법은 도메인 이름의 레이블이 항상 점으로 구분되어 있다고 가정하여 레이블과 전체 도메인 이름을 모두 처리 할 수 ​​있습니다. 다음 문자는 점으로 인식됩니다 : \ u002E (완전 정지), \ u3002 (표면 정지), \ uFF0E (전폭 완전 정지) 및 \ uFF61 (반각 표의 문자 완전 정지).</target>
        </trans-unit>
        <trans-unit id="5057ac95e11321f63baa2115c1f6ba3069ef33ed" translate="yes" xml:space="preserve">
          <source>A label's leading and trailing edge are determined from the value of its &lt;a href=&quot;../../java/awt/componentorientation&quot;&gt;&lt;code&gt;ComponentOrientation&lt;/code&gt;&lt;/a&gt; property. At present, the default ComponentOrientation setting maps the leading edge to left and the trailing edge to right.</source>
          <target state="translated">레이블의 선행 및 후행 가장자리는 &lt;a href=&quot;../../java/awt/componentorientation&quot;&gt; &lt;code&gt;ComponentOrientation&lt;/code&gt; &lt;/a&gt; 속성 값에서 결정 됩니다. 현재 기본 ComponentOrientation 설정은 앞쪽 가장자리를 왼쪽으로, 뒤쪽 가장자리를 오른쪽으로 매핑합니다.</target>
        </trans-unit>
        <trans-unit id="cb92260b3dcdd0b455ee21f13b75301d79957387" translate="yes" xml:space="preserve">
          <source>A language runtime that wishes to make at least some of its linkers available to other language runtimes for interoperability will need to use a &lt;a href=&quot;guardingdynamiclinkerexporter&quot;&gt;&lt;code&gt;GuardingDynamicLinkerExporter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상호 운용성을 위해 링커 중 적어도 일부를 다른 언어 런타임에서 사용할 수 있도록하려는 언어 런타임은 &lt;a href=&quot;guardingdynamiclinkerexporter&quot;&gt; &lt;code&gt;GuardingDynamicLinkerExporter&lt;/code&gt; &lt;/a&gt; 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="253218e6f649ceefe10cad50f21d102120bfa077" translate="yes" xml:space="preserve">
          <source>A later token has already been processed.</source>
          <target state="translated">이후 토큰이 이미 처리되었습니다.</target>
        </trans-unit>
        <trans-unit id="677b023fe7ec6362779ee6d3c8675d6129a3afd3" translate="yes" xml:space="preserve">
          <source>A later token has already been processed. This is a fatal error code that may occur during context establishment. It is not used to indicate supplementary status values. The MessageProp object is used for that purpose.</source>
          <target state="translated">이후 토큰이 이미 처리되었습니다. 이는 컨텍스트 설정 중에 발생할 수있는 치명적인 오류 코드입니다. 보충 상태 값을 나타내는 데 사용되지 않습니다. MessageProp 개체는 이러한 목적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5277e37c88befb14c4900a1e7b21705943a1921e" translate="yes" xml:space="preserve">
          <source>A layer is created from a graph of modules in a &lt;a href=&quot;module/configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt; and a function that maps each module to a &lt;a href=&quot;classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt;. Creating a layer informs the Java virtual machine about the classes that may be loaded from the modules so that the Java virtual machine knows which module that each class is a member of.</source>
          <target state="translated">&lt;a href=&quot;module/configuration&quot;&gt; &lt;code&gt;Configuration&lt;/code&gt; &lt;/a&gt; 의 모듈 그래프 와 각 모듈을 &lt;a href=&quot;classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; 에&lt;/a&gt; 매핑하는 함수 에서 레이어가 생성됩니다 . 계층을 작성하면 Java 가상 머신이 모듈에서로드 될 수있는 클래스에 대해 알려 주므로 Java 가상 머신은 각 클래스가 구성원 인 모듈을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1342f1334f0443aaf9516668d4ea2e646d808449" translate="yes" xml:space="preserve">
          <source>A layer of modules in the Java virtual machine.</source>
          <target state="translated">JVM (Java Virtual Machine)의 모듈 계층입니다.</target>
        </trans-unit>
        <trans-unit id="d0f54cc0e5057c7986390cbc721e478d9988fe29" translate="yes" xml:space="preserve">
          <source>A layout manager that allows multiple components to be laid out either vertically or horizontally.</source>
          <target state="translated">여러 구성 요소를 세로 또는 가로로 배치 할 수있는 레이아웃 관리자입니다.</target>
        </trans-unit>
        <trans-unit id="b2079d32865329cc7156e48c142cc7deb2aadb37" translate="yes" xml:space="preserve">
          <source>A layout manager that allows multiple components to be laid out either vertically or horizontally. The components will not wrap so, for example, a vertical arrangement of components will stay vertically arranged when the frame is resized.</source>
          <target state="translated">여러 구성 요소를 세로 또는 가로로 배치 할 수있는 레이아웃 관리자입니다. 구성 요소가 감싸지지 않으므로 예를 들어 구성 요소의 수직 배열은 프레임 크기를 조정할 때 수직으로 배열 된 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="72907ab61e9adc794018ea3cbf42699ea9fef1c6" translate="yes" xml:space="preserve">
          <source>A layout manager to arrange components over the top of each other.</source>
          <target state="translated">구성 요소를 서로 위에 배치하는 레이아웃 관리자입니다.</target>
        </trans-unit>
        <trans-unit id="01ab3fef8b40a4d2b6e84d588ce178f6e7e3ad2d" translate="yes" xml:space="preserve">
          <source>A layout manager to arrange components over the top of each other. The requested size of the container will be the largest requested size of the children, taking alignment needs into consideration. The alignment is based upon what is needed to properly fit the children in the allocation area. The children will be placed such that their alignment points are all on top of each other.</source>
          <target state="translated">구성 요소를 서로 위에 배치하는 레이아웃 관리자입니다. 컨테이너의 요청 된 크기는 정렬 요구를 고려하여 요청 된 어린이의 가장 큰 크기가됩니다. 정렬은 할당 영역에서 어린이를 적절하게 맞추기 위해 필요한 것을 기반으로합니다. 아이들은 정렬 지점이 모두 서로의 위에 있도록 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="68072440892b4cb0b002870cbe0b646916ecdea7" translate="yes" xml:space="preserve">
          <source>A layout's natural alignment can be overridden if needed (see &lt;a href=&quot;#withBitAlignment(long)&quot;&gt;&lt;code&gt;withBitAlignment(long)&lt;/code&gt;&lt;/a&gt;), which can be useful to describe hyper-aligned layouts.</source>
          <target state="translated">필요한 경우 레이아웃의 자연스러운 정렬을 재정의 할 수 있으며 ( &lt;a href=&quot;#withBitAlignment(long)&quot;&gt; &lt;code&gt;withBitAlignment(long)&lt;/code&gt; &lt;/a&gt; 참조 ), 하이퍼 정렬 레이아웃을 설명하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97d54d21fcf748da2a9bb68d7e686e2f8dfef862" translate="yes" xml:space="preserve">
          <source>A leading component separator (the composite name string begins with a separator) denotes a leading empty component (a component consisting of an empty string). A trailing component separator (the composite name string ends with a separator) denotes a trailing empty component. Adjacent component separators denote an empty component.</source>
          <target state="translated">선행 구성 요소 구분 기호 (복합 이름 문자열은 구분 기호로 시작)는 선행 빈 구성 요소 (빈 문자열로 구성된 구성 요소)를 나타냅니다. 후행 구성 요소 구분 기호 (복합 이름 문자열은 구분 기호로 끝남)는 후행 빈 구성 요소를 나타냅니다. 인접한 구성 요소 구분 기호는 빈 구성 요소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="fcad8987095acc8d02184de58b249c169cc6e9af" translate="yes" xml:space="preserve">
          <source>A leading separator (the compound name string begins with a separator) denotes a leading empty atomic component (consisting of an empty string). A trailing separator (the compound name string ends with a separator) denotes a trailing empty atomic component. Adjacent separators denote an empty atomic component.</source>
          <target state="translated">선행 구분 기호 (화합물 이름 문자열은 구분 기호로 시작)는 선행 빈 원자 구성 요소 (빈 문자열로 구성)를 나타냅니다. 후행 분리 기호 (분리 문자로 끝나는 복합 이름 문자열)는 후행 빈 원자 구성 요소를 나타냅니다. 인접한 분리기는 빈 원자 성분을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e1a750474571c1caa8c781c57987f658741abc84" translate="yes" xml:space="preserve">
          <source>A leap-year is a year of a longer length than normal. The exact meaning is determined by the chronology according to the following constraints.</source>
          <target state="translated">윤년은 평소보다 긴 기간입니다. 정확한 의미는 다음 제약 조건에 따라 연대기에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="97d705fdaf553c98ff69239e30eff552390ebd01" translate="yes" xml:space="preserve">
          <source>A leap-year is a year of a longer length than normal. The exact meaning is determined by the chronology with the constraint that a leap-year must imply a year-length longer than a non leap-year.</source>
          <target state="translated">윤년은 평소보다 긴 기간입니다. 정확한 의미는 윤년이 비 윤년보다 1 년 길이가 길어야한다는 제약이있는 연대기에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="953f8698788a9660e6c0a3bdd71c8c8119fdd91e" translate="yes" xml:space="preserve">
          <source>A lease contains a unique VM identifier and a lease duration.</source>
          <target state="translated">임대에는 고유 한 VM 식별자와 임대 기간이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c0b22f14dc030e91d35fb03f5b42eff402d43340" translate="yes" xml:space="preserve">
          <source>A lease contains a unique VM identifier and a lease duration. A Lease object is used to request and grant leases to remote object references.</source>
          <target state="translated">임대에는 고유 한 VM 식별자와 임대 기간이 포함됩니다. Lease 개체는 원격 개체 참조에 대한 임대를 요청하고 부여하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6ce6d8413a1eee6af64c042532b1129f5a9ab5b6" translate="yes" xml:space="preserve">
          <source>A legacy programmatic interface for the Java Programming Language compiler, javac.</source>
          <target state="translated">Java 프로그래밍 언어 컴파일러 인 javac를위한 레거시 프로그래밍 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="22bb118a5d892bc95459f914b2d52ee1a13ebd1d" translate="yes" xml:space="preserve">
          <source>A legacy programmatic interface for the Java Programming Language compiler, javac. See the &lt;a href=&quot;../../../../module-summary&quot;&gt;&lt;code&gt;jdk.compiler&lt;/code&gt;&lt;/a&gt; module for details on replacement APIs.</source>
          <target state="translated">Java 프로그래밍 언어 컴파일러 인 javac를위한 레거시 프로그래밍 인터페이스입니다. 대체 API에 대한 자세한 내용은 &lt;a href=&quot;../../../../module-summary&quot;&gt; &lt;code&gt;jdk.compiler&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="53a2599abeb7238ac2f98a3b5600a3def82bd862" translate="yes" xml:space="preserve">
          <source>A lenient query for the &lt;code&gt;ZoneId&lt;/code&gt;, falling back to the &lt;code&gt;ZoneOffset&lt;/code&gt;.</source>
          <target state="translated">에 대한 관대 한 쿼리 &lt;code&gt;ZoneId&lt;/code&gt; 의에 떨어지는 다시 &lt;code&gt;ZoneOffset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc4c49462e7a1fe884a4de6151aa15633318f510" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing indefinite context lifetime.</source>
          <target state="translated">무기한 컨텍스트 수명을 나타내는 수명 상수입니다.</target>
        </trans-unit>
        <trans-unit id="4aeacf66c5c9e40fd212093fc0fabc89fc4ede13" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing indefinite context lifetime. This value must is set to the maximum integer value in Java - &lt;a href=&quot;../../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">무기한 컨텍스트 수명을 나타내는 수명 상수입니다. 이 값은 Java- &lt;a href=&quot;../../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/a&gt; 의 최대 정수 값으로 설정되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="d29bd4bbbab78549a664342c4352facb19ca9be4" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing indefinite credential lifetime.</source>
          <target state="translated">무한한 자격 증명 수명을 나타내는 수명 상수입니다.</target>
        </trans-unit>
        <trans-unit id="c20a7615c31d04d0931569589e5ae9e53ecddea1" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing indefinite credential lifetime. This value must is set to the maximum integer value in Java - &lt;a href=&quot;../../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">무한한 자격 증명 수명을 나타내는 수명 상수입니다. 이 값은 Java- &lt;a href=&quot;../../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/a&gt; 의 최대 정수 값으로 설정되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="8234ce96d3a2d8f155f84e80a615b00a6a0f1d4f" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing the default context lifetime.</source>
          <target state="translated">기본 컨텍스트 수명을 나타내는 수명 상수입니다.</target>
        </trans-unit>
        <trans-unit id="6f986dfd8833a6e2fcc19621aff2df7651bf272e" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing the default context lifetime. This value is set to 0.</source>
          <target state="translated">기본 컨텍스트 수명을 나타내는 수명 상수입니다. 이 값은 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="d47581dc6d095f98d74975a81b4fc941aca6e752" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing the default credential lifetime.</source>
          <target state="translated">기본 자격 증명 수명을 나타내는 수명 상수입니다.</target>
        </trans-unit>
        <trans-unit id="b6062c1fe03b24d5e70f80869eabacd1c8e15a8b" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing the default credential lifetime. This value it set to 0.</source>
          <target state="translated">기본 자격 증명 수명을 나타내는 수명 상수입니다. 이 값은 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="056dc7e5f5acdbe9072497479b984fdf625f1673" translate="yes" xml:space="preserve">
          <source>A lightweight component doesn't have a native toolkit peer.</source>
          <target state="translated">경량 구성 요소에는 기본 툴킷 피어가 없습니다.</target>
        </trans-unit>
        <trans-unit id="961da4c1767206da49835874c56a453eb333103a" translate="yes" xml:space="preserve">
          <source>A lightweight component doesn't have a native toolkit peer. Subclasses of &lt;code&gt;Component&lt;/code&gt; and &lt;code&gt;Container&lt;/code&gt;, other than the ones defined in this package like &lt;code&gt;Button&lt;/code&gt; or &lt;code&gt;Scrollbar&lt;/code&gt;, are lightweight. All of the Swing components are lightweights.</source>
          <target state="translated">경량 구성 요소에는 기본 툴킷 피어가 없습니다. &lt;code&gt;Button&lt;/code&gt; 또는 &lt;code&gt;Scrollbar&lt;/code&gt; 와 같이이 패키지에 정의 된 것 이외 의 &lt;code&gt;Component&lt;/code&gt; 및 &lt;code&gt;Container&lt;/code&gt; 하위 클래스 는 경량입니다. 모든 Swing 구성 요소는 경량입니다.</target>
        </trans-unit>
        <trans-unit id="185a81fc9a29fad538cdc2a966ca75ad3243ce0a" translate="yes" xml:space="preserve">
          <source>A lightweight container that uses a BoxLayout object as its layout manager.</source>
          <target state="translated">BoxLayout 개체를 레이아웃 관리자로 사용하는 경량 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="979d25672adedcde0b0dd84c461e1543b2458bcc" translate="yes" xml:space="preserve">
          <source>A lightweight container that uses a BoxLayout object as its layout manager. Box provides several class methods that are useful for containers using BoxLayout -- even non-Box containers.</source>
          <target state="translated">BoxLayout 개체를 레이아웃 관리자로 사용하는 경량 컨테이너입니다. Box는 BoxLayout을 사용하는 컨테이너에 유용한 여러 클래스 메서드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="aa12d0cac093b12b3e599eb656d726a52b98e4e3" translate="yes" xml:space="preserve">
          <source>A lightweight container used behind the scenes by &lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;JDialog&lt;/code&gt;, &lt;code&gt;JWindow&lt;/code&gt;, &lt;code&gt;JApplet&lt;/code&gt;, and &lt;code&gt;JInternalFrame&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JFrame&lt;/code&gt; , &lt;code&gt;JDialog&lt;/code&gt; , &lt;code&gt;JWindow&lt;/code&gt; , &lt;code&gt;JApplet&lt;/code&gt; 및 &lt;code&gt;JInternalFrame&lt;/code&gt; 에서 백그라운드에서 사용되는 경량 컨테이너 입니다.</target>
        </trans-unit>
        <trans-unit id="5205f5e675c9dc2be1e53cb3d5c4f7df5153a51c" translate="yes" xml:space="preserve">
          <source>A lightweight container used behind the scenes by &lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;JDialog&lt;/code&gt;, &lt;code&gt;JWindow&lt;/code&gt;, &lt;code&gt;JApplet&lt;/code&gt;, and &lt;code&gt;JInternalFrame&lt;/code&gt;. For task-oriented information on functionality provided by root panes see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/rootpane.html&quot;&gt;How to Use Root Panes&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JFrame&lt;/code&gt; , &lt;code&gt;JDialog&lt;/code&gt; , &lt;code&gt;JWindow&lt;/code&gt; , &lt;code&gt;JApplet&lt;/code&gt; 및 &lt;code&gt;JInternalFrame&lt;/code&gt; 에서 백그라운드에서 사용되는 경량 컨테이너 입니다. 루트 창에서 제공하는 기능에 대한 작업 지향 정보 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/rootpane.html&quot;&gt;How to Use Root Panes를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dda45079996094e0a48e475b024010a2be2b0aa0" translate="yes" xml:space="preserve">
          <source>A lightweight container used behind the scenes by &lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;JDialog&lt;/code&gt;, &lt;code&gt;JWindow&lt;/code&gt;, &lt;code&gt;JApplet&lt;/code&gt;, and &lt;code&gt;JInternalFrame&lt;/code&gt;. For task-oriented information on functionality provided by root panes see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/rootpane.html&quot;&gt;How to Use Root Panes&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JFrame&lt;/code&gt; , &lt;code&gt;JDialog&lt;/code&gt; , &lt;code&gt;JWindow&lt;/code&gt; , &lt;code&gt;JApplet&lt;/code&gt; 및 &lt;code&gt;JInternalFrame&lt;/code&gt; 에서 백그라운드에서 사용되는 경량 컨테이너 입니다. 루트 창에서 제공하는 기능에 대한 작업 지향 정보 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/rootpane.html&quot;&gt;How to Use Root Panes를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7dee2457c08564bdda284896607baec0996631f" translate="yes" xml:space="preserve">
          <source>A lightweight object that provides many of the features of a native frame, including dragging, closing, becoming an icon, resizing, title display, and support for a menu bar.</source>
          <target state="translated">끌기, 닫기, 아이콘 화, 크기 조정, 제목 표시 및 메뉴 모음 지원을 포함하여 기본 프레임의 많은 기능을 제공하는 경량 개체입니다.</target>
        </trans-unit>
        <trans-unit id="f6fd25a0119a6fc946ca5ed9b5dec6debec44e37" translate="yes" xml:space="preserve">
          <source>A lightweight object that provides many of the features of a native frame, including dragging, closing, becoming an icon, resizing, title display, and support for a menu bar. For task-oriented documentation and examples of using internal frames, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;How to Use Internal Frames&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">끌기, 닫기, 아이콘 화, 크기 조정, 제목 표시 및 메뉴 모음 지원을 포함하여 기본 프레임의 많은 기능을 제공하는 경량 개체입니다. 작업 지향 문서 및 내부 프레임 사용 예제는 &lt;em&gt;Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;How to Use Internal Frames를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d555bfb1698e7bad5e9afb69368480e86ab9ca70" translate="yes" xml:space="preserve">
          <source>A lightweight object that provides many of the features of a native frame, including dragging, closing, becoming an icon, resizing, title display, and support for a menu bar. For task-oriented documentation and examples of using internal frames, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;How to Use Internal Frames&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">끌기, 닫기, 아이콘 화, 크기 조정, 제목 표시 및 메뉴 모음 지원을 포함하여 기본 프레임의 많은 기능을 제공하는 경량 개체입니다. 작업 지향 문서 및 내부 프레임 사용 예제는 &lt;em&gt;Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;How to Use Internal Frames를&lt;/a&gt; 참조하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e7e4ac118d01d0cc449198a99d54ff399706233a" translate="yes" xml:space="preserve">
          <source>A line border UI resource.</source>
          <target state="translated">선 테두리 UI 리소스입니다.</target>
        </trans-unit>
        <trans-unit id="acc386c289b45c240b5420ea9f37eef84f9e9787" translate="yes" xml:space="preserve">
          <source>A line can have controls, such as gain, pan, and reverb. The controls themselves are instances of classes that extend the base &lt;a href=&quot;control&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt; class. The &lt;code&gt;Line&lt;/code&gt; interface provides two accessor methods for obtaining the line's controls: &lt;a href=&quot;#getControls()&quot;&gt;&lt;code&gt;getControls&lt;/code&gt;&lt;/a&gt; returns the entire set, and &lt;a href=&quot;#getControl(javax.sound.sampled.Control.Type)&quot;&gt;&lt;code&gt;getControl&lt;/code&gt;&lt;/a&gt; returns a single control of specified type.</source>
          <target state="translated">라인에는 게인, 팬 및 리버브와 같은 컨트롤이있을 수 있습니다. 컨트롤 자체는 기본 &lt;a href=&quot;control&quot;&gt; &lt;code&gt;Control&lt;/code&gt; &lt;/a&gt; 클래스 를 확장하는 클래스의 인스턴스입니다 . &lt;code&gt;Line&lt;/code&gt; : 인터페이스는 라인을 컨트롤하기위한 접근 방법을 제공 &lt;a href=&quot;#getControls()&quot;&gt; &lt;code&gt;getControls&lt;/code&gt; &lt;/a&gt; 전체 세트를 반환하고 &lt;a href=&quot;#getControl(javax.sound.sampled.Control.Type)&quot;&gt; &lt;code&gt;getControl&lt;/code&gt; &lt;/a&gt; 지정된 유형의 단일 제어를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b56c5699f1874ffdd2862ebff22710a3d81daec8" translate="yes" xml:space="preserve">
          <source>A line can have controls, such as gain, pan, and reverb. The controls themselves are instances of classes that extend the base &lt;code&gt;&lt;a href=&quot;control&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class. The &lt;code&gt;Line&lt;/code&gt; interface provides two accessor methods for obtaining the line's controls: &lt;code&gt;&lt;a href=&quot;line#getControls--&quot;&gt;&lt;code&gt;getControls&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; returns the entire set, and &lt;code&gt;&lt;a href=&quot;line#getControl-javax.sound.sampled.Control.Type-&quot;&gt;&lt;code&gt;getControl&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; returns a single control of specified type.</source>
          <target state="translated">라인에는 게인, 팬 및 리버브와 같은 컨트롤이 있습니다. 컨트롤 자체는 기본 &lt;code&gt;&lt;a href=&quot;control&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 클래스 를 확장하는 클래스의 인스턴스입니다 . &lt;code&gt;Line&lt;/code&gt; : 인터페이스는 라인을 컨트롤하기위한 접근 방법을 제공 &lt;code&gt;&lt;a href=&quot;line#getControls--&quot;&gt;&lt;code&gt;getControls&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 전체 세트를 반환하고 &lt;code&gt;&lt;a href=&quot;line#getControl-javax.sound.sampled.Control.Type-&quot;&gt;&lt;code&gt;getControl&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 지정된 유형의 단일 제어를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8786a5fe383b5efbdf5037cc5b63611602b61532" translate="yes" xml:space="preserve">
          <source>A line feed (LF) character standing by itself means &quot;go to column 1 of the next line.&quot;</source>
          <target state="translated">줄 바꿈 (LF) 문자 자체는 &quot;다음 줄의 1 열로 이동&quot;을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="8b693dcbd13d371398add1d691705128da936559" translate="yes" xml:space="preserve">
          <source>A line is a sequence of bytes ending with a carriage return character (&lt;code&gt;'\r'&lt;/code&gt;), a newline character (&lt;code&gt;'\n'&lt;/code&gt;), or a carriage return character followed immediately by a linefeed character. In all three cases, the line terminating character(s) are returned as a single newline character.</source>
          <target state="translated">줄은 캐리지 리턴 문자 ( &lt;code&gt;'\r'&lt;/code&gt; ), 줄 바꿈 문자 ( &lt;code&gt;'\n'&lt;/code&gt; ) 또는 캐리지 리턴 문자로 끝나는 일련의 바이트 로, 줄 바꿈 문자가 바로 뒤에옵니다. 세 가지 경우 모두 줄 끝 문자가 단일 줄 바꿈 문자로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="cd89c4e3b2be50c382c2539dcc24464fdbb0045e" translate="yes" xml:space="preserve">
          <source>A line is a sequence of characters ending with either a carriage-return character (&lt;code&gt;'\r'&lt;/code&gt;) or a newline character (&lt;code&gt;'\n'&lt;/code&gt;). In addition, a carriage-return character followed immediately by a newline character is treated as a single end-of-line token.</source>
          <target state="translated">줄은 캐리지 리턴 문자 ( &lt;code&gt;'\r'&lt;/code&gt; ) 또는 줄 바꿈 문자 ( &lt;code&gt;'\n'&lt;/code&gt; )로 끝나는 일련의 문자 입니다. 또한 캐리지 리턴 문자 다음에 줄 바꿈 문자가 오는 즉시 단일 줄 끝 토큰으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="1ba222b541f295d3bf4f50e5a5f62ba700c4b970" translate="yes" xml:space="preserve">
          <source>A line is considered to be &lt;a id=&quot;lt&quot;&gt;terminated&lt;/a&gt; by any one of a line feed ('\n'), a carriage return ('\r'), or a carriage return followed immediately by a linefeed.</source>
          <target state="translated">줄은 줄 바꿈 ( '\ n'), 캐리지 리턴 ( '\ r') 또는 캐리지 리턴 바로 뒤에 줄 바꿈 중 하나로 &lt;a id=&quot;lt&quot;&gt;끝나는&lt;/a&gt; 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="3247ed16456853302a1cf889fa07ec387d051119" translate="yes" xml:space="preserve">
          <source>A line is considered to be &lt;a name=&quot;lt&quot;&gt;terminated&lt;/a&gt; by any one of a line feed ('\n'), a carriage return ('\r'), or a carriage return followed immediately by a linefeed.</source>
          <target state="translated">줄 바꿈 ( '\ n'), 캐리지 리턴 ( '\ r') 또는 캐리지 리턴 다음에 줄 바꿈이 있으면 줄이 &lt;a name=&quot;lt&quot;&gt;종료&lt;/a&gt; 된 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="c4fde9f82d44868764c4b891f64e208e4c533ea9" translate="yes" xml:space="preserve">
          <source>A line is drawn connecting the child to the parent. For handling of the root node refer to &lt;a href=&quot;../../jtree#setRootVisible(boolean)&quot;&gt;&lt;code&gt;JTree.setRootVisible(boolean)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../jtree#setShowsRootHandles(boolean)&quot;&gt;&lt;code&gt;JTree.setShowsRootHandles(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자식과 부모를 연결하는 선이 그려집니다. 루트 노드 처리에 대해서는 &lt;a href=&quot;../../jtree#setRootVisible(boolean)&quot;&gt; &lt;code&gt;JTree.setRootVisible(boolean)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../jtree#setShowsRootHandles(boolean)&quot;&gt; &lt;code&gt;JTree.setShowsRootHandles(boolean)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b7ca0c2af9f1edee874d303ecbb4bfe840e2ae1" translate="yes" xml:space="preserve">
          <source>A line of text is terminated by a carriage-return character (&lt;code&gt;'\r'&lt;/code&gt;), a newline character (&lt;code&gt;'\n'&lt;/code&gt;), a carriage-return character immediately followed by a newline character, or the end of the file. Line-terminating characters are discarded and are not included as part of the string returned.</source>
          <target state="translated">텍스트 줄은 캐리지 리턴 문자 ( &lt;code&gt;'\r'&lt;/code&gt; ), 줄 바꿈 문자 ( &lt;code&gt;'\n'&lt;/code&gt; ), 캐리지 리턴 문자 바로 다음에 줄 바꿈 문자 또는 파일 끝으로 끝납니다. 줄로 끝나는 문자는 무시되며 반환 된 문자열의 일부로 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1dea08ed54499fe496d9233626bb8c4a7cd9288e" translate="yes" xml:space="preserve">
          <source>A line segment specified with double coordinates.</source>
          <target state="translated">이중 좌표로 지정된 선분.</target>
        </trans-unit>
        <trans-unit id="a8ddba63111ee463487f4ecaeb6ac0f5f0c77a0e" translate="yes" xml:space="preserve">
          <source>A line segment specified with float coordinates.</source>
          <target state="translated">부동 좌표로 지정된 선분.</target>
        </trans-unit>
        <trans-unit id="d1d421a3c437913459686e8e2c616f56c058bc0b" translate="yes" xml:space="preserve">
          <source>A line-separator character (&lt;code&gt;'\u2028'&lt;/code&gt;), or</source>
          <target state="translated">줄 구분 문자 ( &lt;code&gt;'\u2028'&lt;/code&gt; ) 또는</target>
        </trans-unit>
        <trans-unit id="6a06843d99cb5f85c0cf509d37a1efecb9a3799a" translate="yes" xml:space="preserve">
          <source>A linear collection that supports element insertion and removal at both ends.</source>
          <target state="translated">양쪽 끝에서 요소 삽입 및 제거를 지원하는 선형 컬렉션입니다.</target>
        </trans-unit>
        <trans-unit id="b40d08cf909bccb933847ab2cbb7c69d15600fc8" translate="yes" xml:space="preserve">
          <source>A linear collection that supports element insertion and removal at both ends. The name</source>
          <target state="translated">양쪽 끝에서 요소 삽입 및 제거를 지원하는 선형 컬렉션입니다. 이름</target>
        </trans-unit>
        <trans-unit id="97306c8d3ba98c3b4909e917962a43aca00f125b" translate="yes" xml:space="preserve">
          <source>A linked hash map has two parameters that affect its performance:</source>
          <target state="translated">연결된 해시 맵에는 성능에 영향을주는 두 가지 매개 변수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5d0567d95ba1f476603a27df139f097cc946400" translate="yes" xml:space="preserve">
          <source>A linked hash set has two parameters that affect its performance:</source>
          <target state="translated">연결된 해시 세트에는 성능에 영향을주는 두 가지 매개 변수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c9e0867175b986e4f2b87796f88caedeb1e9946" translate="yes" xml:space="preserve">
          <source>A linker for ordinary Java objects.</source>
          <target state="translated">일반 Java 개체에 대한 링커입니다.</target>
        </trans-unit>
        <trans-unit id="affa66eb9e4a4f8a6ac9d48864528117f0ba660c" translate="yes" xml:space="preserve">
          <source>A linker for ordinary Java objects. Normally used as the ultimate fallback linker by the &lt;a href=&quot;../dynamiclinkerfactory&quot;&gt;&lt;code&gt;DynamicLinkerFactory&lt;/code&gt;&lt;/a&gt; so it is given the chance to link calls to all objects that no other linker recognized. Specifically, this linker will:</source>
          <target state="translated">일반 Java 개체에 대한 링커입니다. 일반적으로 &lt;a href=&quot;../dynamiclinkerfactory&quot;&gt; &lt;code&gt;DynamicLinkerFactory&lt;/code&gt; 에&lt;/a&gt; 의해 궁극적 인 폴백 링커로 사용 되므로 다른 링커가 인식하지 못하는 모든 개체에 호출을 연결할 수있는 기회가 주어집니다. 특히이 링커는 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="af4a484b57104a2c2324c4ecf87d1974394a01ac" translate="yes" xml:space="preserve">
          <source>A list containing all the style sheets explicitly linked into or embedded in a document.</source>
          <target state="translated">문서에 명시 적으로 링크되거나 포함 된 모든 스타일 시트가 포함 된 목록입니다.</target>
        </trans-unit>
        <trans-unit id="68d8b70ebc94fcdaac2fe77686b7d1b9b8250f84" translate="yes" xml:space="preserve">
          <source>A list containing all the style sheets explicitly linked into or embedded in a document. For HTML documents, this includes external style sheets, included via the HTML LINK element, and inline STYLE elements. In XML, this includes external style sheets, included via style sheet processing instructions (see [XML StyleSheet]).</source>
          <target state="translated">문서에 명시 적으로 링크되거나 포함 된 모든 스타일 시트가 포함 된 목록입니다. HTML 문서의 경우 HTML LINK 요소 및 인라인 STYLE 요소를 통해 포함 된 외부 스타일 시트가 포함됩니다. XML에서 여기에는 스타일 시트 처리 지침을 통해 포함 된 외부 스타일 시트가 포함됩니다 ([XML StyleSheet] 참조).</target>
        </trans-unit>
        <trans-unit id="4a34d022e2b151d44379f6754c3e516c74e49078" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;String&lt;/code&gt; each of which is a currently registered &lt;code&gt;Logger&lt;/code&gt; name.</source>
          <target state="translated">현재 등록 된 &lt;code&gt;Logger&lt;/code&gt; 이름 인 각 &lt;code&gt;String&lt;/code&gt; 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="65e892dc9473951e991ccf155b1ca1274401dc1f" translate="yes" xml:space="preserve">
          <source>A list of DOM implementations that support the desired features.</source>
          <target state="translated">원하는 기능을 지원하는 DOM 구현 목록입니다.</target>
        </trans-unit>
        <trans-unit id="b08264eb34333533bdb8e9acfb6937f62fd4417e" translate="yes" xml:space="preserve">
          <source>A list of DOMImplementations that support the desired features.</source>
          <target state="translated">원하는 기능을 지원하는 DOMImplementations 목록입니다.</target>
        </trans-unit>
        <trans-unit id="15cf90d8d2220c9cd8197762d2212a7447bdf437" translate="yes" xml:space="preserve">
          <source>A list of MBeanServer objects.</source>
          <target state="translated">MBeanServer 오브젝트의리스트입니다.</target>
        </trans-unit>
        <trans-unit id="5f8ac20f98db2102405d283706e710c0a6f21fe3" translate="yes" xml:space="preserve">
          <source>A list of all CSS rules contained within the media block.</source>
          <target state="translated">미디어 블록에 포함 된 모든 CSS 규칙의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="fffc7b0cba51983d91340505c95ccc243c63c6fd" translate="yes" xml:space="preserve">
          <source>A list of available event names is retrieved by invoking &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/flightrecorder#getEventTypes()&quot;&gt;&lt;code&gt;FlightRecorder.getEventTypes()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/eventtype#getName()&quot;&gt;&lt;code&gt;EventType.getName()&lt;/code&gt;&lt;/a&gt;. A list of available settings for an event type is obtained by invoking &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/eventtype#getSettingDescriptors()&quot;&gt;&lt;code&gt;EventType.getSettingDescriptors()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/valuedescriptor#getName()&quot;&gt;&lt;code&gt;ValueDescriptor.getName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용 가능한 이벤트 이름 목록은 &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/flightrecorder#getEventTypes()&quot;&gt; &lt;code&gt;FlightRecorder.getEventTypes()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/eventtype#getName()&quot;&gt; &lt;code&gt;EventType.getName()&lt;/code&gt; &lt;/a&gt; 을 호출하여 검색됩니다 . 이벤트 유형에 대해 사용 가능한 설정 목록은 &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/eventtype#getSettingDescriptors()&quot;&gt; &lt;code&gt;EventType.getSettingDescriptors()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/valuedescriptor#getName()&quot;&gt; &lt;code&gt;ValueDescriptor.getName()&lt;/code&gt; &lt;/a&gt; 을 호출 하여 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="6f020188a50eb819f75561d6bd73f8e2e2329a3d" translate="yes" xml:space="preserve">
          <source>A list of available event names is retrieved by invoking &lt;a href=&quot;flightrecorder#getEventTypes()&quot;&gt;&lt;code&gt;FlightRecorder.getEventTypes()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;eventtype#getName()&quot;&gt;&lt;code&gt;EventType.getName()&lt;/code&gt;&lt;/a&gt;. A list of available settings for an event type is obtained by invoking &lt;a href=&quot;eventtype#getSettingDescriptors()&quot;&gt;&lt;code&gt;EventType.getSettingDescriptors()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;valuedescriptor#getName()&quot;&gt;&lt;code&gt;ValueDescriptor.getName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용 가능한 이벤트 이름 목록은 &lt;a href=&quot;flightrecorder#getEventTypes()&quot;&gt; &lt;code&gt;FlightRecorder.getEventTypes()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;eventtype#getName()&quot;&gt; &lt;code&gt;EventType.getName()&lt;/code&gt; &lt;/a&gt; 을 호출하여 검색됩니다 . 이벤트 유형에 대해 사용 가능한 설정 목록은 &lt;a href=&quot;eventtype#getSettingDescriptors()&quot;&gt; &lt;code&gt;EventType.getSettingDescriptors()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;valuedescriptor#getName()&quot;&gt; &lt;code&gt;ValueDescriptor.getName()&lt;/code&gt; &lt;/a&gt; 을 호출 하여 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="de48ea7e17b256037e5c901cc789fac23bfb5898" translate="yes" xml:space="preserve">
          <source>A list of choices the user can select from.</source>
          <target state="translated">사용자가 선택할 수있는 선택 목록입니다.</target>
        </trans-unit>
        <trans-unit id="31e54663fdecd8b34639cd2595d3190ba6f979d8" translate="yes" xml:space="preserve">
          <source>A list of choices the user can select from. Also optionally allows the user to enter a choice of their own.</source>
          <target state="translated">사용자가 선택할 수있는 선택 목록입니다. 또한 선택적으로 사용자가 자신의 선택을 입력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf7009e57a42ab2b8198d59d5043bf01d53a555f" translate="yes" xml:space="preserve">
          <source>A list of event listeners for this component.</source>
          <target state="translated">이 컴포넌트의 이벤트 리스너 목록입니다.</target>
        </trans-unit>
        <trans-unit id="be31e28e9acde1db832856f21a141e6f8fd1a8c8" translate="yes" xml:space="preserve">
          <source>A list of listeners that will receive events from this object.</source>
          <target state="translated">이 객체에서 이벤트를 수신 할 리스너 목록입니다.</target>
        </trans-unit>
        <trans-unit id="e2cdf1db9dc024dd948eaa61978df4a6a1912d0e" translate="yes" xml:space="preserve">
          <source>A list of matching &lt;code&gt;Element&lt;/code&gt; nodes.</source>
          <target state="translated">일치하는 &lt;code&gt;Element&lt;/code&gt; 노드 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="327dc1311c6db843812e310f9ea93f54d5a3b51b" translate="yes" xml:space="preserve">
          <source>A list of media types for this rule.</source>
          <target state="translated">이 규칙에 대한 미디어 유형 목록입니다.</target>
        </trans-unit>
        <trans-unit id="c6b7af05baec8c3125a586ea93677557bde075be" translate="yes" xml:space="preserve">
          <source>A list of media types for which this style sheet may be used.</source>
          <target state="translated">이 스타일 시트를 사용할 수있는 미디어 유형 목록입니다.</target>
        </trans-unit>
        <trans-unit id="ce084408655d8ff5f3ed083f8ea3a1698adb007b" translate="yes" xml:space="preserve">
          <source>A list of paths to be searched by the bootstrap class loader. Paths represent directories or libraries (commonly referred to as JAR or zip libraries on many platforms). These paths are searched by the bootstrap class loader after the platform specific mechanisms of locating a class have failed. Paths are searched in the order listed. Paths in the list are separated by one or more spaces. A path takes the syntax of the path component of a hierarchical URI. The path is absolute if it begins with a slash character ('/'), otherwise it is relative. A relative path is resolved against the absolute path of the agent JAR file. Malformed and non-existent paths are ignored. When an agent is started sometime after the VM has started then paths that do not represent a JAR file are ignored. This attribute is optional.</source>
          <target state="translated">부트 스트랩 클래스 로더가 검색 할 경로 목록입니다. 경로는 디렉토리 또는 라이브러리 (일반적으로 많은 플랫폼에서 JAR 또는 zip 라이브러리라고 함)를 나타냅니다. 이러한 경로는 클래스를 찾는 플랫폼 별 메커니즘이 실패한 후 부트 스트랩 클래스 로더에 의해 검색됩니다. 경로는 나열된 순서대로 검색됩니다. 목록의 경로는 하나 이상의 공백으로 구분됩니다. 경로는 계층 적 URI의 경로 구성 요소 구문을 사용합니다. 경로가 슬래시 문자 ( '/')로 시작하면 절대 경로이고 그렇지 않으면 상대 경로입니다. 에이전트 JAR 파일의 절대 경로에 대해 상대 경로가 확인됩니다. 잘못되거나 존재하지 않는 경로는 무시됩니다. VM이 시작된 후 에이전트가 시작되면 JAR 파일을 나타내지 않는 경로는 무시됩니다. 이 속성은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="38f944f4b6529c85fda2d2d3a3815e42316e4685" translate="yes" xml:space="preserve">
          <source>A list of the installed attach providers.</source>
          <target state="translated">설치된 연결 공급자 목록입니다.</target>
        </trans-unit>
        <trans-unit id="cd71c25d8fb4c7cd0da03ca7d9bfab807b3ef157" translate="yes" xml:space="preserve">
          <source>A listener class that watches for a popup window closing.</source>
          <target state="translated">팝업 창이 닫히는 것을 감시하는 리스너 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="e598c4bf95d7225b30a8913153841fb80fa29899" translate="yes" xml:space="preserve">
          <source>A listener class that watches for a popup window closing. When the popup is closing, the listener deselects the menu.</source>
          <target state="translated">팝업 창이 닫히는 것을 감시하는 리스너 클래스입니다. 팝업이 닫히면 리스너는 메뉴 선택을 취소합니다.</target>
        </trans-unit>
        <trans-unit id="71e55bf263a6776b16cc5006150fea3427b4ac17" translate="yes" xml:space="preserve">
          <source>A listener for a Timer MBean can itself be an MBean, using the method &lt;a href=&quot;../mbeanserver#addNotificationListener(javax.management.ObjectName,javax.management.ObjectName,javax.management.NotificationFilter,java.lang.Object)&quot;&gt;&lt;code&gt;MBeanServer.addNotificationListener(ObjectName,
      ObjectName, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;. In this way, a management application can create an MBean representing a task, then schedule that task using a Timer MBean.</source>
          <target state="translated">Timer MBean의 리스너는 &lt;a href=&quot;../mbeanserver#addNotificationListener(javax.management.ObjectName,javax.management.ObjectName,javax.management.NotificationFilter,java.lang.Object)&quot;&gt; &lt;code&gt;MBeanServer.addNotificationListener(ObjectName, ObjectName, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 자체적으로 MBean이 될 수 있습니다 . 이러한 방식으로 관리 애플리케이션은 작업을 나타내는 MBean을 만든 다음 Timer MBean을 사용하여 해당 작업을 예약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a94d2ecd063ae6a1df5852d1841f65f60bd65cf" translate="yes" xml:space="preserve">
          <source>A listener for a Timer MBean can itself be an MBean, using the method &lt;a href=&quot;../mbeanserver#addNotificationListener-javax.management.ObjectName-javax.management.ObjectName-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;MBeanServer.addNotificationListener(ObjectName,
      ObjectName, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;. In this way, a management application can create an MBean representing a task, then schedule that task using a Timer MBean.</source>
          <target state="translated">&lt;a href=&quot;../mbeanserver#addNotificationListener-javax.management.ObjectName-javax.management.ObjectName-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;MBeanServer.addNotificationListener(ObjectName, ObjectName, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 타이머 MBean의 리스너 자체가 MBean 일 수 있습니다 . 이런 방식으로 관리 응용 프로그램은 작업을 나타내는 MBean을 만든 다음 Timer MBean을 사용하여 해당 작업을 예약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="698554ac6345725e38dfb1615e0a194ec85c4ba6" translate="yes" xml:space="preserve">
          <source>A listener for receiving preference change events.</source>
          <target state="translated">환경 설정 변경 이벤트를 수신하기위한 리스너입니다.</target>
        </trans-unit>
        <trans-unit id="1aabbb23a368618bba8cf844d1f5d4f8bd473acc" translate="yes" xml:space="preserve">
          <source>A listener for receiving preference node change events.</source>
          <target state="translated">기본 설정 노드 변경 이벤트를 수신하기위한 리스너입니다.</target>
        </trans-unit>
        <trans-unit id="bfc69827b09f6e59d534209ca3a289bb0277d279" translate="yes" xml:space="preserve">
          <source>A listener for the view.</source>
          <target state="translated">보기에 대한 리스너입니다.</target>
        </trans-unit>
        <trans-unit id="8500799ac60ccf3012e5129a0790c8e444a71044" translate="yes" xml:space="preserve">
          <source>A listener implementing all the methods in both the &lt;code&gt;MouseListener&lt;/code&gt; and &lt;code&gt;MouseMotionListener&lt;/code&gt; interfaces.</source>
          <target state="translated">&lt;code&gt;MouseListener&lt;/code&gt; 및 &lt;code&gt;MouseMotionListener&lt;/code&gt; 인터페이스 모두에서 모든 메소드를 구현하는 리스너 .</target>
        </trans-unit>
        <trans-unit id="b4e8c843b8da1377b4a4fe35087522a11a1f018f" translate="yes" xml:space="preserve">
          <source>A listener interested in &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; event types must:</source>
          <target state="translated">&lt;code&gt;OBJECT_CHANGED&lt;/code&gt; 이벤트 유형에 관심이있는 리스너는 다음을 수행 해야합니다.</target>
        </trans-unit>
        <trans-unit id="dabaed40746a3ea76dd8eee23e9763e3e5474eb6" translate="yes" xml:space="preserve">
          <source>A listener interface for receiving mouse motion events during a drag operation.</source>
          <target state="translated">드래그 작업 중 마우스 모션 이벤트를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="85207bf3ee7b5f4fb2ce7243c28aed16dadb21b3" translate="yes" xml:space="preserve">
          <source>A listener is an object that has implemented the &lt;code&gt;RowSetListener&lt;/code&gt; interface. If it has been added to a &lt;code&gt;RowSet&lt;/code&gt; object's list of listeners, it will be notified when an event occurs on that &lt;code&gt;RowSet&lt;/code&gt; object. Each listener's implementation of the &lt;code&gt;RowSetListener&lt;/code&gt; methods defines what that object will do when it is notified that an event has occurred.</source>
          <target state="translated">리스너는 &lt;code&gt;RowSetListener&lt;/code&gt; 인터페이스를 구현 한 객체입니다 . &lt;code&gt;RowSet&lt;/code&gt; 객체의 리스너 목록에 추가 된 경우 해당 &lt;code&gt;RowSet&lt;/code&gt; 객체 에서 이벤트가 발생할 때 알림을 받습니다. 각 리스너의 &lt;code&gt;RowSetListener&lt;/code&gt; 메서드 구현은 이벤트가 발생했음을 알릴 때 해당 객체가 수행 할 작업을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="8797401d0ffe322f1602faefe424a1878b3214bf" translate="yes" xml:space="preserve">
          <source>A listener might, for example, be a table or graph that needs to be updated in order to accurately reflect the current state of the &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">예를 들어 리스너는 &lt;code&gt;RowSet&lt;/code&gt; 개체 의 현재 상태를 정확하게 반영하기 위해 업데이트해야하는 테이블 또는 그래프 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c1eb406af2e34f83c1ff0326d1a53689b2620751" translate="yes" xml:space="preserve">
          <source>A listener that wants to be notified of &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; event types should also implement the &lt;code&gt;ObjectChangeListener&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;OBJECT_CHANGED&lt;/code&gt; 이벤트 유형을 통지 받고자 하는 리스너 도 &lt;code&gt;ObjectChangeListener&lt;/code&gt; 인터페이스를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="de4c0125a157adee093814e09b281eaa9497021d" translate="yes" xml:space="preserve">
          <source>A listener that wants to be notified of namespace change events should also implement the &lt;code&gt;NamespaceChangeListener&lt;/code&gt; interface.</source>
          <target state="translated">네임 스페이스 변경 이벤트에 대한 알림을 받으려는 리스너도 &lt;code&gt;NamespaceChangeListener&lt;/code&gt; 인터페이스를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4aa182dd1164d6f87d4e4f06c54fef56a59a0650" translate="yes" xml:space="preserve">
          <source>A listener to be registered upon the combo box (&lt;em&gt;not&lt;/em&gt; its popup menu) to handle mouse events that affect the state of the popup menu.</source>
          <target state="translated">리스너는 콤보 상자 (에 등록 할 &lt;em&gt;수 없습니다&lt;/em&gt; 팝업 메뉴의 상태에 영향을주는 마우스 이벤트를 처리하기 위해 팝업 메뉴).</target>
        </trans-unit>
        <trans-unit id="987732cee4fab52c38c198447827dec323b254e2" translate="yes" xml:space="preserve">
          <source>A listener to be registered upon the combo box (&lt;em&gt;not&lt;/em&gt; its popup menu) to handle mouse events that affect the state of the popup menu. The main purpose of this listener is to make the popup menu appear and disappear. This listener also helps with click-and-drag scenarios by setting the selection if the mouse was released over the list during a drag.</source>
          <target state="translated">리스너는 콤보 상자 (에 등록 할 &lt;em&gt;수 없습니다&lt;/em&gt; 팝업 메뉴의 상태에 영향을주는 마우스 이벤트를 처리하기 위해 팝업 메뉴). 이 리스너의 주요 목적은 팝업 메뉴를 표시하고 사라지게하는 것입니다. 이 리스너는 드래그하는 동안 목록 위에 마우스를 놓은 경우 선택을 설정하여 클릭 및 드래그 시나리오에도 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="670f046d6bc2c8904ae2cf8a3aae8a6dbbb7456d" translate="yes" xml:space="preserve">
          <source>A listener to listen for model changes.</source>
          <target state="translated">모델 변경을 수신하는 리스너입니다.</target>
        </trans-unit>
        <trans-unit id="3d0fdc05796202e16b01613faa5d4476667a38cc" translate="yes" xml:space="preserve">
          <source>A listener to track focus events and convert them to PropertyChange events.</source>
          <target state="translated">포커스 이벤트를 추적하고이를 PropertyChange 이벤트로 변환하는 리스너입니다.</target>
        </trans-unit>
        <trans-unit id="9e24f20d2177ce0b96413ecb356cb7008b6d89e3" translate="yes" xml:space="preserve">
          <source>A literal string replacement</source>
          <target state="translated">리터럴 문자열 대체</target>
        </trans-unit>
        <trans-unit id="1971fb641c3e63b72bc3a32c19b53e864bfaab20" translate="yes" xml:space="preserve">
          <source>A local cache of the combined width of all columns</source>
          <target state="translated">모든 열의 결합 된 너비의 로컬 캐시</target>
        </trans-unit>
        <trans-unit id="592b027e5e9d567689958753a9389037cb88b1a2" translate="yes" xml:space="preserve">
          <source>A local color table is written to the output stream only if image metadata containing a LocalColorTable element is supplied to the writer, or no image metadata is supplied to the writer and the local color table which would be generated from the image itself is not equal to the global color table.</source>
          <target state="translated">LocalColorTable 요소를 포함하는 이미지 메타 데이터가 기록기에 제공되거나 기록기에 이미지 메타 데이터가 제공되지 않고 이미지 자체에서 생성 된 로컬 색상 표가 같지 않은 경우에만 로컬 색상 표가 출력 스트림에 기록됩니다. 글로벌 컬러 테이블</target>
        </trans-unit>
        <trans-unit id="5e67dc7d76e5d6260aa02465cd132b1be622d15e" translate="yes" xml:space="preserve">
          <source>A local port number of &lt;code&gt;zero&lt;/code&gt; will let the system pick up a free port in the &lt;code&gt;bind&lt;/code&gt; operation.</source>
          <target state="translated">로컬 포트 ​​번호가 &lt;code&gt;zero&lt;/code&gt; 이면 시스템이 &lt;code&gt;bind&lt;/code&gt; 작업 에서 사용 가능한 포트를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1c00ebf38471123cfabe9168122b6244c8c6a6f" translate="yes" xml:space="preserve">
          <source>A local variable in the target VM.</source>
          <target state="translated">대상 VM의 로컬 변수.</target>
        </trans-unit>
        <trans-unit id="7a8804556717e463f57b91b2efdc00d9fe50444d" translate="yes" xml:space="preserve">
          <source>A local variable in the target VM. Each variable declared within a &lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; has its own LocalVariable object. Variables of the same name declared in different scopes have different LocalVariable objects. LocalVariables can be used alone to retrieve static information about their declaration, or can be used in conjunction with a &lt;a href=&quot;stackframe&quot;&gt;&lt;code&gt;StackFrame&lt;/code&gt;&lt;/a&gt; to set and get values.</source>
          <target state="translated">대상 VM의 로컬 변수. &lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 내에서 선언 된 각 변수 에는 자체 LocalVariable 개체가 있습니다. 다른 범위에서 선언 된 동일한 이름의 변수는 다른 LocalVariable 개체를 갖습니다. LocalVariables를 단독으로 사용하여 선언에 대한 정적 정보를 검색하거나 &lt;a href=&quot;stackframe&quot;&gt; &lt;code&gt;StackFrame&lt;/code&gt; &lt;/a&gt; 과 함께 사용하여 값을 설정하고 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad2e095520751ba87e3068d056542787aeca9197" translate="yes" xml:space="preserve">
          <source>A local variable.</source>
          <target state="translated">지역 변수.</target>
        </trans-unit>
        <trans-unit id="6955283daf06e25711bb8ad70a56014545639769" translate="yes" xml:space="preserve">
          <source>A locale with language &quot;no&quot;, country &quot;NO&quot;, and variant &quot;NY&quot;, representing Norwegian Nynorsk (Norway), is converted to a language tag &quot;nn-NO&quot;.</source>
          <target state="translated">노르웨이어 Nynorsk (노르웨이)를 나타내는 언어 &quot;no&quot;, 국가 &quot;NO&quot;및 변형 &quot;NY&quot;가있는 로캘은 언어 태그 &quot;nn-NO&quot;로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="65c9b270c7c3f54a5f3173eaed9ba0424301ac5e" translate="yes" xml:space="preserve">
          <source>A localized String containing the description of the object.</source>
          <target state="translated">객체에 대한 설명이 포함 된 지역화 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="00a1c98e62c8c1f14895bfb21d9ee63a77aa54f1" translate="yes" xml:space="preserve">
          <source>A localized String containing the name of the object.</source>
          <target state="translated">객체의 이름이 포함 된 지역화 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="3a27552254d56009aa8e1699a2f0793508aa6107" translate="yes" xml:space="preserve">
          <source>A localized short description associated with this property/method/event. This defaults to be the display name.</source>
          <target state="translated">이 속성 / 방법 / 이벤트와 관련된 현지화 된 간단한 설명입니다. 기본적으로 표시 이름입니다.</target>
        </trans-unit>
        <trans-unit id="822cae31a3209802ad0dd2caa1aa6f4f71c55284" translate="yes" xml:space="preserve">
          <source>A lock acquired by calling the called method (if it is a synchronized method) and locks acquired by entering synchronized blocks within the called method are released. Note: this does not apply to native locks or java.util.concurrent.locks locks.</source>
          <target state="translated">호출 된 메소드를 호출하여 획득 한 잠금 (동기화 메소드 인 경우)과 호출 된 메소드 내에서 동기화 된 블록을 입력하여 획득 한 잠금이 해제됩니다. 참고 : 이는 기본 잠금 또는 java.util.concurrent.locks 잠금에는 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5c9fada9017e71f49bf3f0e12ca12af8b3cad0a7" translate="yes" xml:space="preserve">
          <source>A lock is a tool for controlling access to a shared resource by multiple threads. Commonly, a lock provides exclusive access to a shared resource: only one thread at a time can acquire the lock and all access to the shared resource requires that the lock be acquired first. However, some locks may allow concurrent access to a shared resource, such as the read lock of a &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">잠금은 여러 스레드가 공유 리소스에 대한 액세스를 제어하는 ​​도구입니다. 일반적으로 잠금은 공유 자원에 대한 독점 액세스를 제공합니다. 한 번에 하나의 스레드 만 잠금을 획득 할 수 있으며 공유 자원에 대한 모든 액세스는 먼저 잠금을 획득해야합니다. 그러나 일부 잠금은 &lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; &lt;/a&gt; 의 읽기 잠금과 같은 공유 리소스에 대한 동시 액세스를 허용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a6ffffd6b30beb72af7461ead42991d37ef4948" translate="yes" xml:space="preserve">
          <source>A lock object remains valid until it is released or the associated file channel is closed, whichever comes first.</source>
          <target state="translated">잠금 오브젝트는 해제되거나 연관된 파일 채널이 닫힐 때까지 유효합니다.</target>
        </trans-unit>
        <trans-unit id="28a3b257aa12bb2f4fb5f8f6e1420bc67c0a823b" translate="yes" xml:space="preserve">
          <source>A lock object representing the newly-acquired lock</source>
          <target state="translated">새로 획득 한 잠금을 나타내는 잠금 객체</target>
        </trans-unit>
        <trans-unit id="2b22d963da1177eba0b896711186aa82f5524a3d" translate="yes" xml:space="preserve">
          <source>A lock object representing the newly-acquired lock, or &lt;code&gt;null&lt;/code&gt; if the lock could not be acquired because another program holds an overlapping lock</source>
          <target state="translated">새로 획득 한 잠금을 나타내는 잠금 객체 또는 다른 프로그램이 겹치는 잠금을 보유하여 잠금을 획득 할 수없는 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94c9f044a4875cfd3ff8a41efa0667cbf6bb53d6" translate="yes" xml:space="preserve">
          <source>A lock on a (region of a) file</source>
          <target state="translated">(영역의) 파일에 대한 잠금</target>
        </trans-unit>
        <trans-unit id="84ac1353e7256bd0e9a70d66e51652a6d59ae9e0" translate="yes" xml:space="preserve">
          <source>A locked region need not be contained within, or even overlap, the actual underlying file, so the value returned by this method may exceed the file's current size.</source>
          <target state="translated">잠긴 영역은 실제 기본 파일 내에 포함되거나 겹치지 않아도되므로이 방법으로 반환 된 값이 파일의 현재 크기를 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2a79a2335ce967d894d9aa28b3ea94309610ccb" translate="yes" xml:space="preserve">
          <source>A logger finder is responsible for mapping from a &lt;code&gt;
 System.Logger.Level&lt;/code&gt; to a level supported by the logging backend it uses.</source>
          <target state="translated">로거 파인더는 &lt;code&gt; System.Logger.Level&lt;/code&gt; 에서 사용하는 로깅 백엔드에서 지원하는 수준으로 매핑하는 역할을 합니다.</target>
        </trans-unit>
        <trans-unit id="7e0711816c11bc2760ac5554d0b7767c117620f3" translate="yes" xml:space="preserve">
          <source>A logical channel connection to a Smart Card.</source>
          <target state="translated">스마트 카드에 대한 논리 채널 연결.</target>
        </trans-unit>
        <trans-unit id="82653681cfdf11447ffcbfb97eefb36b4534e087" translate="yes" xml:space="preserve">
          <source>A logical channel connection to a Smart Card. It is used to exchange APDUs with a Smart Card. A CardChannel object can be obtained by calling the method &lt;a href=&quot;card#getBasicChannel()&quot;&gt;Card.getBasicChannel()&lt;/a&gt; or &lt;a href=&quot;card#openLogicalChannel()&quot;&gt;Card.openLogicalChannel()&lt;/a&gt;.</source>
          <target state="translated">스마트 카드에 대한 논리 채널 연결. APDU를 스마트 카드로 교환하는 데 사용됩니다. CardChannel 객체는 &lt;a href=&quot;card#getBasicChannel()&quot;&gt;Card.getBasicChannel ()&lt;/a&gt; 또는 &lt;a href=&quot;card#openLogicalChannel()&quot;&gt;Card.openLogicalChannel ()&lt;/a&gt; 메서드를 호출하여 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bda5fe24ab8cbefaf2746b532e58a035e4078331" translate="yes" xml:space="preserve">
          <source>A logical name for the data source is registered with a naming service that uses the Java Naming and Directory Interface (JNDI) API, usually by a system administrator or someone performing the duties of a system administrator. An application can retrieve the &lt;code&gt;DataSource&lt;/code&gt; object it wants by doing a lookup on the logical name that has been registered for it. The application can then use the &lt;code&gt;DataSource&lt;/code&gt; object to create a connection to the physical data source it represents.</source>
          <target state="translated">데이터 소스의 논리적 이름은 JNDI (Java Naming and Directory Interface) API를 사용하는 이름 지정 서비스에 등록되며 일반적으로 시스템 관리자 또는 시스템 관리자의 역할을 수행하는 사람이 수행합니다. 응용 프로그램은 등록 된 논리적 이름을 조회하여 원하는 &lt;code&gt;DataSource&lt;/code&gt; 개체를 검색 할 수 있습니다 . 그런 다음 응용 프로그램은 &lt;code&gt;DataSource&lt;/code&gt; 개체를 사용하여 해당 개체가 나타내는 실제 데이터 원본에 대한 연결을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c068ce28b77aa11f0756c0de4e392d8a3775df39" translate="yes" xml:space="preserve">
          <source>A logical name for the data source is registered with a naming service that uses the Java Naming and Directory Interface&amp;trade; (JNDI) API, usually by a system administrator or someone performing the duties of a system administrator. An application can retrieve the &lt;code&gt;DataSource&lt;/code&gt; object it wants by doing a lookup on the logical name that has been registered for it. The application can then use the &lt;code&gt;DataSource&lt;/code&gt; object to create a connection to the physical data source it represents.</source>
          <target state="translated">데이터 소스의 논리적 이름은 JNDI (Java Naming and Directory Interface &amp;trade;) API를 사용하는 이름 지정 서비스에 등록되며 일반적으로 시스템 관리자 또는 시스템 관리자의 역할을 수행하는 사람이 수행합니다. 애플리케이션은 등록 된 논리적 이름을 조회하여 원하는 &lt;code&gt;DataSource&lt;/code&gt; 오브젝트를 검색 할 수 있습니다 . 그런 다음 응용 프로그램은 &lt;code&gt;DataSource&lt;/code&gt; 개체를 사용하여 나타내는 실제 데이터 원본에 대한 연결을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bded42e220d2678d88898dced390cdac6cdad3c4" translate="yes" xml:space="preserve">
          <source>A logical set of child views, which as used as a layout pool from which a physical view is formed.</source>
          <target state="translated">물리적보기가 형성되는 레이아웃 풀로 사용되는 논리적 자식보기 집합입니다.</target>
        </trans-unit>
        <trans-unit id="568c4b3b9a76ea6ca643c5daaf99dff90277ebc4" translate="yes" xml:space="preserve">
          <source>A login configuration contains the following information. Note that this example only represents the default syntax for the &lt;code&gt;Configuration&lt;/code&gt;. Subclass implementations of this class may implement alternative syntaxes and may retrieve the &lt;code&gt;Configuration&lt;/code&gt; from any source such as files, databases, or servers.</source>
          <target state="translated">로그인 구성에는 다음 정보가 포함됩니다. 이 예제는 &lt;code&gt;Configuration&lt;/code&gt; 의 기본 구문 만 나타냅니다 . 이 클래스의 서브 클래스 구현은 대체 구문을 구현할 수 있으며 파일, 데이터베이스 또는 서버와 같은 모든 소스 에서 &lt;code&gt;Configuration&lt;/code&gt; 을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26dda26d1e92f5c5e23547c5c332144ba4720ca0" translate="yes" xml:space="preserve">
          <source>A long buffer is not comparable to any other type of object.</source>
          <target state="translated">긴 버퍼는 다른 유형의 객체와 비교할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="af058ad87a032a73c5dbeda376e1410c7f0e9d15" translate="yes" xml:space="preserve">
          <source>A long buffer is not equal to any other type of object.</source>
          <target state="translated">긴 버퍼는 다른 유형의 객체와 같지 않습니다.</target>
        </trans-unit>
        <trans-unit id="14db0bab1d80c04094c29c5f4876e521eaaaad9a" translate="yes" xml:space="preserve">
          <source>A long buffer.</source>
          <target state="translated">긴 버퍼.</target>
        </trans-unit>
        <trans-unit id="fdd3fa643df0a7408495d391eff49d6089573722" translate="yes" xml:space="preserve">
          <source>A lookup can fail, because the containing class is not accessible to the lookup class, or because the desired class member is missing, or because the desired class member is not accessible to the lookup class, or because the lookup object is not trusted enough to access the member. In any of these cases, a &lt;code&gt;ReflectiveOperationException&lt;/code&gt; will be thrown from the attempted lookup. The exact class will be one of the following:</source>
          <target state="translated">포함하는 클래스가 조회 클래스에 액세스 할 수 없거나 원하는 클래스 멤버가 누락되었거나, 원하는 클래스 멤버가 조회 클래스에 액세스 할 수 없거나, 조회 오브젝트가 충분히 신뢰할 수 없기 때문에 조회가 실패 할 수 있습니다. 회원에게 액세스하십시오. 이러한 경우, 시도 된 조회에서 &lt;code&gt;ReflectiveOperationException&lt;/code&gt; 이 발생합니다. 정확한 수업은 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="e02782171fa85214257bd4e30c30b1a42407ad99" translate="yes" xml:space="preserve">
          <source>A lookup can fail, because the containing class is not accessible to the lookup class, or because the desired class member is missing, or because the desired class member is not accessible to the lookup class, or because the lookup object is not trusted enough to access the member. In the case of a field setter function on a &lt;code&gt;final&lt;/code&gt; field, finality enforcement is treated as a kind of access control, and the lookup will fail, except in special cases of &lt;a href=&quot;#unreflectSetter(java.lang.reflect.Field)&quot;&gt;&lt;code&gt;Lookup.unreflectSetter&lt;/code&gt;&lt;/a&gt;. In any of these cases, a &lt;code&gt;ReflectiveOperationException&lt;/code&gt; will be thrown from the attempted lookup. The exact class will be one of the following:</source>
          <target state="translated">포함하는 클래스가 조회 클래스에 액세스 할 수 없거나 원하는 클래스 멤버가 누락되었거나 원하는 클래스 멤버가 조회 클래스에 액세스 할 수 없거나 조회 개체가 충분히 신뢰할 수 없기 때문에 조회가 실패 할 수 있습니다. 회원에 액세스하십시오. &lt;code&gt;final&lt;/code&gt; 필드 에 대한 필드 setter 함수의 경우 최종성 적용은 일종의 액세스 제어로 처리되며 &lt;a href=&quot;#unreflectSetter(java.lang.reflect.Field)&quot;&gt; &lt;code&gt;Lookup.unreflectSetter&lt;/code&gt; 의&lt;/a&gt; 특수한 경우를 제외하고는 조회가 실패 합니다. 이러한 경우 시도 된 조회에서 &lt;code&gt;ReflectiveOperationException&lt;/code&gt; 이 throw됩니다. 정확한 클래스는 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="df039c113f004ecf80f82c293fc0ad048fa8ba6e" translate="yes" xml:space="preserve">
          <source>A lookup class which needs to create method handles will call &lt;a href=&quot;methodhandles#lookup()&quot;&gt;&lt;code&gt;MethodHandles.lookup&lt;/code&gt;&lt;/a&gt; to create a factory for itself. When the &lt;code&gt;Lookup&lt;/code&gt; factory object is created, the identity of the lookup class is determined, and securely stored in the &lt;code&gt;Lookup&lt;/code&gt; object. The lookup class (or its delegates) may then use factory methods on the &lt;code&gt;Lookup&lt;/code&gt; object to create method handles for access-checked members. This includes all methods, constructors, and fields which are allowed to the lookup class, even private ones.</source>
          <target state="translated">메서드 핸들을 만들어야하는 조회 클래스는 &lt;a href=&quot;methodhandles#lookup()&quot;&gt; &lt;code&gt;MethodHandles.lookup&lt;/code&gt; &lt;/a&gt; 을 호출 하여 자체적으로 팩토리를 만듭니다. 때 &lt;code&gt;Lookup&lt;/code&gt; 공장 객체가 생성되고, 상기 룩업 클래스의 아이덴티티를 결정하고 안전하게 저장되어 &lt;code&gt;Lookup&lt;/code&gt; 대상. 그런 다음 조회 클래스 (또는 해당 대리자)는 &lt;code&gt;Lookup&lt;/code&gt; 개체의 팩토리 메서드를 사용 하여 액세스 확인 멤버에 대한 메서드 핸들을 만들 수 있습니다. 여기에는 조회 클래스에 허용되는 모든 메서드, 생성자 및 필드가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="0b8aa7e616f29eacc7bbf003997b65bbb16a9d5b" translate="yes" xml:space="preserve">
          <source>A lookup class which needs to create method handles will call &lt;a href=&quot;methodhandles#lookup--&quot;&gt;&lt;code&gt;MethodHandles.lookup&lt;/code&gt;&lt;/a&gt; to create a factory for itself. When the &lt;code&gt;Lookup&lt;/code&gt; factory object is created, the identity of the lookup class is determined, and securely stored in the &lt;code&gt;Lookup&lt;/code&gt; object. The lookup class (or its delegates) may then use factory methods on the &lt;code&gt;Lookup&lt;/code&gt; object to create method handles for access-checked members. This includes all methods, constructors, and fields which are allowed to the lookup class, even private ones.</source>
          <target state="translated">메소드 핸들을 작성해야하는 조회 클래스는 &lt;a href=&quot;methodhandles#lookup--&quot;&gt; &lt;code&gt;MethodHandles.lookup&lt;/code&gt; &lt;/a&gt; 을 호출 하여 자체 팩토리를 작성합니다. 때 &lt;code&gt;Lookup&lt;/code&gt; 공장 객체가 생성되고, 상기 룩업 클래스의 아이덴티티를 결정하고 안전하게 저장되어 &lt;code&gt;Lookup&lt;/code&gt; 대상. 그런 다음 조회 클래스 (또는 해당 대리자)는 &lt;code&gt;Lookup&lt;/code&gt; 객체에서 팩토리 메소드를 사용 하여 액세스 확인 멤버에 대한 메소드 핸들을 작성할 수 있습니다. 여기에는 조회 클래스에 허용되는 모든 메소드, 생성자 및 필드 (개인용 클래스 포함)가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="6fad313e8298ce9596df44644d1804116a600be9" translate="yes" xml:space="preserve">
          <source>A lookup with &lt;code&gt;PACKAGE&lt;/code&gt; but not &lt;code&gt;PRIVATE&lt;/code&gt; mode can safely delegate non-public access within the package of the lookup class without conferring &lt;a href=&quot;methodhandles.lookup#privacc&quot;&gt;private access&lt;/a&gt;. A lookup with &lt;code&gt;MODULE&lt;/code&gt; but not &lt;code&gt;PACKAGE&lt;/code&gt; mode can safely delegate &lt;code&gt;PUBLIC&lt;/code&gt; access within the module of the lookup class without conferring package access. A lookup with a &lt;a href=&quot;#previousLookupClass()&quot;&gt;previous lookup class&lt;/a&gt; (and &lt;code&gt;PUBLIC&lt;/code&gt; but not &lt;code&gt;MODULE&lt;/code&gt; mode) can safely delegate access to public classes accessible to both the module of the lookup class and the module of the previous lookup class.</source>
          <target state="translated">A를 조회 &lt;code&gt;PACKAGE&lt;/code&gt; 가 아닌 &lt;code&gt;PRIVATE&lt;/code&gt; 모드 안전하게 부여하지 않고 조회 클래스의 패키지 내에서 비공개 액세스 권한을 위임 할 수 있습니다 &lt;a href=&quot;methodhandles.lookup#privacc&quot;&gt;개인 액세스&lt;/a&gt; . &lt;code&gt;MODULE&lt;/code&gt; 를 사용 하지만 &lt;code&gt;PACKAGE&lt;/code&gt; 모드가 아닌 조회는 패키지 액세스를 부여하지 않고 조회 클래스의 모듈 내에서 &lt;code&gt;PUBLIC&lt;/code&gt; 액세스를 안전하게 위임 할 수 있습니다. 기호가있는 조회 &lt;a href=&quot;#previousLookupClass()&quot;&gt;이전 조회 클래스&lt;/a&gt; (및 &lt;code&gt;PUBLIC&lt;/code&gt; 아니라 &lt;code&gt;MODULE&lt;/code&gt; 모드) 안전하게 조회 클래스의 모듈과 이전 조회 클래스의 모듈 모두에 접근 public 클래스에 대한 액세스 권한을 위임 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="209a781bacd6d342ab830cfdf5281a992aa39860" translate="yes" xml:space="preserve">
          <source>A lookup, combinator, or factory method will fail and throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if the created method handle's type would have &lt;a href=&quot;methodhandle#maxarity&quot;&gt;too many parameters&lt;/a&gt;.</source>
          <target state="translated">조회, 결합 자 또는 팩토리 메소드는 생성 된 메소드 핸들의 유형에 &lt;a href=&quot;methodhandle#maxarity&quot;&gt;너무 많은 매개 변수&lt;/a&gt; 가있는 경우 실패하고 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="407af2e7c55e4f2c6720b8870c4e549db987d678" translate="yes" xml:space="preserve">
          <source>A low-level event that indicates that a window has changed its status.</source>
          <target state="translated">창이 상태가 변경되었음을 나타내는 하위 수준 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="91b8a97945ca1e2eee85694320a0fa0331897881" translate="yes" xml:space="preserve">
          <source>A low-level event that indicates that a window has changed its status. This low-level event is generated by a Window object when it is opened, closed, activated, deactivated, iconified, or deiconified, or when focus is transferred into or out of the Window.</source>
          <target state="translated">창이 상태가 변경되었음을 나타내는 하위 수준 이벤트입니다. 이 하위 수준 이벤트는 Window 개체가 열리거나 닫히거나 활성화, 비활성화, 아이콘 화 또는 아이콘 화 해제 될 때 또는 포커스가 Window 안팎으로 전송 될 때 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="cb079744a24a989b3684b56495bdf7568cb65664" translate="yes" xml:space="preserve">
          <source>A low-level event which indicates that a Component has gained or lost the input focus.</source>
          <target state="translated">구성 요소가 입력 포커스를 얻거나 잃었 음을 나타내는 저수준 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="f9789d3e89bc57b7e00b92b8d2f77ca87648e86e" translate="yes" xml:space="preserve">
          <source>A low-level event which indicates that a Component has gained or lost the input focus. This low-level event is generated by a Component (such as a TextField). The event is passed to every &lt;code&gt;FocusListener&lt;/code&gt; or &lt;code&gt;FocusAdapter&lt;/code&gt; object which registered to receive such events using the Component's &lt;code&gt;addFocusListener&lt;/code&gt; method. (&lt;code&gt;FocusAdapter&lt;/code&gt; objects implement the &lt;code&gt;FocusListener&lt;/code&gt; interface.) Each such listener object gets this &lt;code&gt;FocusEvent&lt;/code&gt; when the event occurs.</source>
          <target state="translated">구성 요소가 입력 포커스를 얻거나 잃었 음을 나타내는 저수준 이벤트입니다. 이 저수준 이벤트는 구성 요소 (예 : TextField)에 의해 생성됩니다. 이벤트는 Component의 &lt;code&gt;addFocusListener&lt;/code&gt; 메소드를 사용하여 이러한 이벤트를 수신하도록 등록 된 모든 &lt;code&gt;FocusListener&lt;/code&gt; 또는 &lt;code&gt;FocusAdapter&lt;/code&gt; 객체에 전달됩니다 . ( &lt;code&gt;FocusAdapter&lt;/code&gt; 객체는 &lt;code&gt;FocusListener&lt;/code&gt; 인터페이스를 구현합니다 .) 이러한 각 리스너 객체는 이벤트가 발생할 때이 &lt;code&gt;FocusEvent&lt;/code&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="c46a21e048aa495dbdcbb94896c23056986c3457" translate="yes" xml:space="preserve">
          <source>A low-level event which indicates that a component moved, changed size, or changed visibility (also, the root class for the other component-level events).</source>
          <target state="translated">구성 요소가 이동, 크기 변경 또는 가시성이 변경되었음을 나타내는 하위 수준 이벤트 (다른 ​​구성 요소 수준 이벤트의 루트 클래스이기도 함).</target>
        </trans-unit>
        <trans-unit id="649f205485b73cc811bcec91033bc6c95cd527be" translate="yes" xml:space="preserve">
          <source>A low-level event which indicates that a container's contents changed because a component was added or removed.</source>
          <target state="translated">구성 요소가 추가되거나 제거되어 컨테이너의 내용이 변경되었음을 나타내는 하위 수준 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="ff9b7ac08540e6b07272d4f6ab622d7f00d9e75a" translate="yes" xml:space="preserve">
          <source>A lower value (eg 100) corresponds to higher contrast text when displaying dark text on a light background.</source>
          <target state="translated">낮은 값 (예 : 100)은 밝은 배경에 어두운 텍스트를 표시 할 때 높은 대비 텍스트에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="8153cb1f4f8081e17bb4e5f6258e0dc551189059" translate="yes" xml:space="preserve">
          <source>A lower-case alphabetic character: &lt;code&gt;[a-z]&lt;/code&gt;</source>
          <target state="translated">소문자 알파벳 문자 : &lt;code&gt;[a-z]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54d053dd5de98d77f961dfe613bd1e3a4b83129d" translate="yes" xml:space="preserve">
          <source>A lowercase character:&lt;code&gt;\p{IsLowercase}&lt;/code&gt;</source>
          <target state="translated">소문자 : &lt;code&gt;\p{IsLowercase}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d23928f934094dc2c2ce78eff94117253e8966b6" translate="yes" xml:space="preserve">
          <source>A malicious user may be able to extract sensitive information that is stored in events and interrupt Flight Recorder by installing listeners or hooks that never finish.</source>
          <target state="translated">악의적 인 사용자는 종료되지 않는 리스너 또는 후크를 설치하여 이벤트에 저장된 민감한 정보를 추출하고 Flight Recorder를 중단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49afb3913762c744d38b001208ec93b93fc6fafb" translate="yes" xml:space="preserve">
          <source>A malicious user may be able to write sensitive information to Flight Recorder buffers.</source>
          <target state="translated">악의적 인 사용자는 중요한 정보를 Flight Recorder 버퍼에 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0c5f1bada31724a95975e7fb4646121c67bb998" translate="yes" xml:space="preserve">
          <source>A management application and a platform MBeanServer of a running virtual machine can interoperate without requiring classes used by the platform MXBean interfaces. The data types being transmitted between the JMX connector server and the connector client are JMX &lt;a href=&quot;../../../javax/management/openmbean/opentype&quot;&gt;open types&lt;/a&gt; and this allows interoperation across versions. A data type used by the MXBean interfaces are mapped to an open type when being accessed via MBeanServer interface. See the &lt;a href=&quot;../../../javax/management/mxbean#MXBean-spec&quot;&gt; MXBean&lt;/a&gt; specification for details.</source>
          <target state="translated">실행중인 가상 머신의 관리 애플리케이션 및 플랫폼 MBeanServer는 플랫폼 MXBean 인터페이스에서 사용하는 클래스를 요구하지 않고 상호 운용 할 수 있습니다. JMX 커넥터 서버와 커넥터 클라이언트간에 전송되는 데이터 유형은 JMX &lt;a href=&quot;../../../javax/management/openmbean/opentype&quot;&gt;개방형&lt;/a&gt; 이며 버전 간 상호 운용이 가능합니다. MXBean 인터페이스에서 사용하는 데이터 유형은 MBeanServer 인터페이스를 통해 액세스 할 때 열린 유형으로 맵핑됩니다. 세부 사항 은 &lt;a href=&quot;../../../javax/management/mxbean#MXBean-spec&quot;&gt;MXBean&lt;/a&gt; 스펙을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="32d77cea074b43a48ea99dfb0273fed364568d22" translate="yes" xml:space="preserve">
          <source>A management application and a platform MBeanServer of a running virtual machine can interoperate without requiring classes used by the platform MXBean interfaces. The data types being transmitted between the JMX connector server and the connector client are JMX &lt;a href=&quot;../../../javax/management/openmbean/opentype&quot;&gt;open types&lt;/a&gt; and this allows interoperation across versions. A data type used by the MXBean interfaces are mapped to an open type when being accessed via MBeanServer interface. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/javax/management/MXBean.html#MXBean-spec&quot;&gt; MXBean&lt;/a&gt; specification for details.</source>
          <target state="translated">실행중인 가상 머신의 관리 애플리케이션과 플랫폼 MBeanServer는 플랫폼 MXBean 인터페이스에서 사용하는 클래스 없이도 상호 운용 할 수 있습니다. JMX 커넥터 서버와 커넥터 클라이언트간에 전송되는 데이터 유형은 JMX &lt;a href=&quot;../../../javax/management/openmbean/opentype&quot;&gt;개방형 유형&lt;/a&gt; 이므로 버전 간 상호 운용이 가능합니다. MXBean 인터페이스에서 사용하는 데이터 유형은 MBeanServer 인터페이스를 통해 액세스 할 때 개방형으로 매핑됩니다. 자세한 내용은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/javax/management/MXBean.html#MXBean-spec&quot;&gt;MXBean&lt;/a&gt; 사양을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="da94c79589a35e1af6af8746f12bf935ca3975af" translate="yes" xml:space="preserve">
          <source>A manager of connections to target virtual machines.</source>
          <target state="translated">대상 가상 머신에 대한 연결 관리자입니다.</target>
        </trans-unit>
        <trans-unit id="e00cd0d41435c9c22046c7b3c833db42f295bcd7" translate="yes" xml:space="preserve">
          <source>A manager of connections to target virtual machines. The VirtualMachineManager allows one application to debug multiple target VMs. (Note that the converse is not supported; a target VM can be debugged by only one debugger application.) This interface contains methods to manage connections to remote target VMs and to obtain the &lt;a href=&quot;virtualmachine&quot;&gt;&lt;code&gt;VirtualMachine&lt;/code&gt;&lt;/a&gt; mirror for available target VMs.</source>
          <target state="translated">대상 가상 머신에 대한 연결 관리자입니다. VirtualMachineManager를 사용하면 하나의 애플리케이션이 여러 대상 VM을 디버깅 할 수 있습니다. (converse는 지원되지 않습니다. 대상 VM은 하나의 디버거 응용 프로그램에서만 디버깅 할 수 있습니다.)이 인터페이스에는 원격 대상 VM에 대한 연결을 관리 하고 사용 가능한 대상 VM에 대한 &lt;a href=&quot;virtualmachine&quot;&gt; &lt;code&gt;VirtualMachine&lt;/code&gt; &lt;/a&gt; 미러 를 가져 오는 메서드가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="47fa0cfd58919cdac5200faaeab4cd1fdd71215c" translate="yes" xml:space="preserve">
          <source>A mandated construct is one that is not explicitly declared in the source code, but whose presence is mandated by the specification.</source>
          <target state="translated">필수 구문은 소스 코드에 명시 적으로 선언되지 않았지만 사양에 따라 존재 여부가 지정되는 구문입니다.</target>
        </trans-unit>
        <trans-unit id="bd336924782d5297e51e282da651c828594dafdf" translate="yes" xml:space="preserve">
          <source>A mandated construct is one that is not explicitly declared in the source code, but whose presence is mandated by the specification. Such a construct is said to be implicitly declared. One example of a mandated element is a &lt;em&gt;default constructor&lt;/em&gt; in a class that contains no explicit constructor declarations. Another example of a mandated construct is an implicitly declared &lt;em&gt;container annotation&lt;/em&gt; used to hold multiple annotations of a repeatable annotation type.</source>
          <target state="translated">필수 구문은 소스 코드에 명시 적으로 선언되지 않았지만 사양에 따라 존재 여부가 지정되는 구문입니다. 이러한 구조는 암시 적으로 선언되었다고합니다. 필수 요소의 한 가지 예는 명시 적 생성자 선언이없는 클래스 의 &lt;em&gt;기본 생성자&lt;/em&gt; 입니다. 필수 구성의 또 다른 예 는 반복 가능한 주석 유형의 여러 주석을 보유하는 데 사용되는 암시 적으로 선언 &lt;em&gt;된 컨테이너 주석&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="523acc2618e298537fac6c6db657235420efeba2" translate="yes" xml:space="preserve">
          <source>A map entry (key-value pair).</source>
          <target state="translated">맵 항목 (키-값 쌍).</target>
        </trans-unit>
        <trans-unit id="f8154228f438e29a074d401ba3f6df78033cad84" translate="yes" xml:space="preserve">
          <source>A map entry (key-value pair). The &lt;code&gt;Map.entrySet&lt;/code&gt; method returns a collection-view of the map, whose elements are of this class. The</source>
          <target state="translated">맵 항목 (키-값 쌍). &lt;code&gt;Map.entrySet&lt;/code&gt; 의 방법은이 클래스에 속하는 요소를 가지는 맵의 코레 크 션뷰를 돌려줍니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="734ae33840ce4ece035615ca1a3162f9e1c88c0c" translate="yes" xml:space="preserve">
          <source>A map from single character keys to string values, indicating extensions apart from language identification. The extensions in &lt;code&gt;Locale&lt;/code&gt; implement the semantics and syntax of BCP 47 extension subtags and private use subtags. The extensions are case insensitive, but &lt;code&gt;Locale&lt;/code&gt; canonicalizes all extension keys and values to lower case. Note that extensions cannot have empty values.</source>
          <target state="translated">단일 문자 키에서 문자열 값으로의 맵으로 언어 식별과 별개로 확장을 나타냅니다. &lt;code&gt;Locale&lt;/code&gt; 의 확장 은 BCP 47 확장 서브 태그 및 개인용 서브 태그의 시맨틱 및 구문을 구현합니다. 확장명은 대소 문자를 구분하지 않지만 &lt;code&gt;Locale&lt;/code&gt; 모든 확장 키와 값을 소문자로 정규화합니다. 확장은 빈 값을 가질 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f4fac118eaa61bd3381786afc5506fae5041565a" translate="yes" xml:space="preserve">
          <source>A map of the attributes of the &lt;code&gt;MLET&lt;/code&gt; tag and their values.</source>
          <target state="translated">&lt;code&gt;MLET&lt;/code&gt; 태그 의 속성 및 해당 값 의 맵입니다 .</target>
        </trans-unit>
        <trans-unit id="ecca0e69af4452740453796ec2257a6e8d86c1b0" translate="yes" xml:space="preserve">
          <source>A map of zone overrides to enable the short time-zone names to be used.</source>
          <target state="translated">짧은 시간대 이름을 사용할 수 있도록 영역 맵이 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="125d5f648fdc6b3b583770be46f92225acbb6df2" translate="yes" xml:space="preserve">
          <source>A mapped byte buffer and the file mapping that it represents remain valid until the buffer itself is garbage-collected.</source>
          <target state="translated">맵핑 된 바이트 버퍼 및이를 나타내는 파일 맵핑은 버퍼 자체가 가비지 수집 될 때까지 유효합니다.</target>
        </trans-unit>
        <trans-unit id="ecbf6f19b205cafdf24d72538d04204a2f57d4fd" translate="yes" xml:space="preserve">
          <source>A mapped memory segment, that is, a memory segment backed by memory-mapped file.</source>
          <target state="translated">매핑 된 메모리 세그먼트, 즉 메모리 매핑 된 파일에 의해 지원되는 메모리 세그먼트입니다.</target>
        </trans-unit>
        <trans-unit id="1d8b4897e57fdeecad1d940f01be5b12c7f07121" translate="yes" xml:space="preserve">
          <source>A mapping of key/value pairs, all of whose keys are &lt;code&gt;Strings&lt;/code&gt;.</source>
          <target state="translated">키 / 값 쌍, 그 키가 모두의 매핑 &lt;code&gt;Strings&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="249f4e6247696ef79d77f9632a8840e624e39fa5" translate="yes" xml:space="preserve">
          <source>A mapping, once established, is not dependent upon the file channel that was used to create it. Closing the channel, in particular, has no effect upon the validity of the mapping.</source>
          <target state="translated">한 번 설정된 매핑은 매핑에 사용 된 파일 채널에 의존하지 않습니다. 특히 채널을 닫으면 매핑의 유효성에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1cf7ecf320778fa8570ef98cef4c60a4d8eee590" translate="yes" xml:space="preserve">
          <source>A marker interface for &lt;code&gt;KeyStore&lt;/code&gt; entry types.</source>
          <target state="translated">&lt;code&gt;KeyStore&lt;/code&gt; 엔트리 타입 의 마커 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="20f1eb54a1504ea4d0329f700bd25ca65410acf6" translate="yes" xml:space="preserve">
          <source>A marker interface for &lt;code&gt;KeyStore&lt;/code&gt;&lt;a href=&quot;#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#store(java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;store&lt;/code&gt;&lt;/a&gt; parameters.</source>
          <target state="translated">&lt;code&gt;KeyStore&lt;/code&gt; &lt;a href=&quot;#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#store(java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;store&lt;/code&gt; &lt;/a&gt; 매개 변수에 대한 마커 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="16110f246a5bef6d146026b68db4023a20eb468c" translate="yes" xml:space="preserve">
          <source>A marker interface for &lt;code&gt;KeyStore&lt;/code&gt;&lt;a href=&quot;keystore#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;keystore#store(java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;store&lt;/code&gt;&lt;/a&gt; parameters.</source>
          <target state="translated">&lt;code&gt;KeyStore&lt;/code&gt; &lt;a href=&quot;keystore#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;keystore#store(java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;store&lt;/code&gt; &lt;/a&gt; 매개 변수에 대한 마커 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="4f97d254de94be9955d0374c391792c8cd03cd9a" translate="yes" xml:space="preserve">
          <source>A marker interface for &lt;code&gt;KeyStore&lt;/code&gt;&lt;a href=&quot;keystore#load-java.security.KeyStore.LoadStoreParameter-&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;keystore#store-java.security.KeyStore.LoadStoreParameter-&quot;&gt;&lt;code&gt;store&lt;/code&gt;&lt;/a&gt; parameters.</source>
          <target state="translated">&lt;code&gt;KeyStore&lt;/code&gt; &lt;a href=&quot;keystore#load-java.security.KeyStore.LoadStoreParameter-&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;keystore#store-java.security.KeyStore.LoadStoreParameter-&quot;&gt; &lt;code&gt;store&lt;/code&gt; &lt;/a&gt; 매개 변수에 대한 마커 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="b87ab39dbbc70f26edc0d8e9c3fcd2b14e207095" translate="yes" xml:space="preserve">
          <source>A marker interface for keystore protection parameters.</source>
          <target state="translated">키 스토어 보호 파라미터의 마커 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="f0a2bf301a5de3c70e89b16dc01e8dabc98a1261" translate="yes" xml:space="preserve">
          <source>A marker interface for parameters used in various &lt;code&gt;SecureRandom&lt;/code&gt; methods.</source>
          <target state="translated">다양한 &lt;code&gt;SecureRandom&lt;/code&gt; 메서드 에서 사용되는 매개 변수에 대한 마커 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="0035f278ed0acbc8c02637e9be7a201b90f6b87c" translate="yes" xml:space="preserve">
          <source>A marker interface for the end of the document</source>
          <target state="translated">문서 끝을위한 마커 인터페이스</target>
        </trans-unit>
        <trans-unit id="9eff216b480311bcbb9834bfd9e89e5bb1ab95d0" translate="yes" xml:space="preserve">
          <source>A marker interface identifying asynchronous tasks produced by &lt;code&gt;async&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; 메서드로 생성 된 비동기 작업을 식별하는 마커 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="c7f8f418ddcef0be0c8c3683d4d5c10eac3e4d5a" translate="yes" xml:space="preserve">
          <source>A marker interface identifying asynchronous tasks produced by &lt;code&gt;async&lt;/code&gt; methods. This may be useful for monitoring, debugging, and tracking asynchronous activities.</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; 메서드로 생성 된 비동기 작업을 식별하는 마커 인터페이스 입니다. 이는 비동기 활동을 모니터링, 디버깅 및 추적하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0df196a232a0c0909bbcc3867add7c3a9426e08b" translate="yes" xml:space="preserve">
          <source>A marker to indicate that all levels are disabled.</source>
          <target state="translated">모든 레벨이 비활성화되었음을 나타내는 마커입니다.</target>
        </trans-unit>
        <trans-unit id="6f716b42aa654cf1f62f9e219ef89741ce307485" translate="yes" xml:space="preserve">
          <source>A marker to indicate that all levels are disabled. This level &lt;a href=&quot;#getSeverity()&quot;&gt;severity&lt;/a&gt; is &lt;a href=&quot;integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모든 레벨이 비활성화되었음을 나타내는 마커입니다. 이 수준 &lt;a href=&quot;#getSeverity()&quot;&gt;심각도&lt;/a&gt; 는 &lt;a href=&quot;integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4dd00300c1d1d8eca3dacf85fa1c12fafbc1273d" translate="yes" xml:space="preserve">
          <source>A marker to indicate that all levels are enabled.</source>
          <target state="translated">모든 수준이 활성화되었음을 나타내는 마커입니다.</target>
        </trans-unit>
        <trans-unit id="2ac454e10702b15ffe806cab0efb7dbec9e36eac" translate="yes" xml:space="preserve">
          <source>A marker to indicate that all levels are enabled. This level &lt;a href=&quot;#getSeverity()&quot;&gt;severity&lt;/a&gt; is &lt;a href=&quot;integer#MIN_VALUE&quot;&gt;&lt;code&gt;Integer.MIN_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모든 수준이 활성화되었음을 나타내는 마커입니다. 이 수준의 &lt;a href=&quot;#getSeverity()&quot;&gt;심각도&lt;/a&gt; 는 &lt;a href=&quot;integer#MIN_VALUE&quot;&gt; &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f09198edec762eb31b9241c7fd2744d522fe1d31" translate="yes" xml:space="preserve">
          <source>A mask for supported flags from getLayoutFlags.</source>
          <target state="translated">getLayoutFlags에서 지원되는 플래그에 대한 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="44f4c50db580441785344b65adcc29714114f5ba" translate="yes" xml:space="preserve">
          <source>A mask for supported flags from getLayoutFlags. Only bits covered by the mask should be tested.</source>
          <target state="translated">getLayoutFlags에서 지원되는 플래그에 대한 마스크입니다. 마스크에 포함 된 비트 만 테스트해야합니다.</target>
        </trans-unit>
        <trans-unit id="a6aa6c3b1414a543907b16897d2cffac1cdfd599" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating auto mode.</source>
          <target state="translated">자동 모드를 나타내는 &quot;Flash&quot;태그와 함께 사용할 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="1f7463765c393caefbb1a2aa59e465e56027565d" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating compulsory flash firing mode.</source>
          <target state="translated">강제 플래시 발광 모드를 나타내는 &quot;플래시&quot;태그와 함께 사용할 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="11008a1b9bed07bf81ef2b8d48ca49a118d4c819" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating compulsory flash suppression mode.</source>
          <target state="translated">강제 플래시 억제 모드를 나타내는 &quot;플래시&quot;태그와 함께 사용할 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="ea8c4d60b7a80668ef134ae6f663c096060be6f7" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating no flash function present.</source>
          <target state="translated">&quot;플래시&quot;태그와 함께 사용할 마스크로 플래시 기능이 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c482ad4af56faa018ee9da7695d2529ba3cd6a95" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating red-eye reduction supported.</source>
          <target state="translated">적목 감소가 지원됨을 나타내는 &quot;Flash&quot;태그와 함께 사용할 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="1b1ce035712ebb0fe55b061a87b150f11bd165ff" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating strobe return light detected.</source>
          <target state="translated">스트로브 반사광이 감지되었음을 나타내는 &quot;플래시&quot;태그와 함께 사용할 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="85fcf5935c6bb82d05629c0f5dc8bff64e7d5f96" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating strobe return light not detected.</source>
          <target state="translated">&quot;플래시&quot;태그와 함께 사용할 마스크로 스트로브 반사광이 감지되지 않음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4cbbbd24270b7a478c98d814d7038afbf573187b" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating that the flash fired.</source>
          <target state="translated">&quot;플래시&quot;태그와 함께 사용할 마스크로 플래시가 터 졌음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="21d11dc894039b2eac563c4ae59bf29edff669e4" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;NewSubfileType&quot; tag.</source>
          <target state="translated">&quot;NewSubfileType&quot;태그와 함께 사용할 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="7fa06c979421786ebcc1a98729df221acd565c4e" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;T4Options&quot; tag.</source>
          <target state="translated">&quot;T4Options&quot;태그와 함께 사용할 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="c2c917ee880f3b775b6575fc987929825f43eed2" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;T6Options&quot; tag.</source>
          <target state="translated">&quot;T6Options&quot;태그와 함께 사용할 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="516f31ddfd8224efe35b11d66b1e0e8c19b3ab29" translate="yes" xml:space="preserve">
          <source>A master or slave synchronization mode that specifies the use of MIDI Time Code.</source>
          <target state="translated">MIDI 타임 코드 사용을 지정하는 마스터 또는 슬레이브 동기화 모드입니다.</target>
        </trans-unit>
        <trans-unit id="1a34b881770391e5c98b3f4b648f43d1c9c9288b" translate="yes" xml:space="preserve">
          <source>A master or slave synchronization mode that specifies the use of MIDI Time Code. If this mode is used as the master sync mode, the sequencer gets its timing information from MIDI Time Code messages. This mode only applies as the master sync mode to sequencers that are also MIDI receivers. If this mode is used as the slave sync mode, the sequencer sends MIDI Time Code messages to its receiver. (See the MIDI 1.0 Detailed Specification for a description of MIDI Time Code.)</source>
          <target state="translated">MIDI 타임 코드 사용을 지정하는 마스터 또는 슬레이브 동기화 모드. 이 모드가 마스터 동기화 모드로 사용되면 시퀀서는 MIDI 타임 코드 메시지에서 타이밍 정보를 얻습니다. 이 모드는 MIDI 리시버이기도 한 시퀀서에만 마스터 동기화 모드로 적용됩니다. 이 모드가 슬레이브 동기화 모드로 사용되면 시퀀서는 MIDI 타임 코드 메시지를 수신기로 보냅니다. (MIDI 타임 코드에 대한 설명은 MIDI 1.0 세부 사양을 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="8b74dcfa4d11643692dd56060db98e20ccb865d3" translate="yes" xml:space="preserve">
          <source>A master or slave synchronization mode that specifies the use of MIDI clock messages.</source>
          <target state="translated">MIDI 클럭 메시지 사용을 지정하는 마스터 또는 슬레이브 동기화 모드입니다.</target>
        </trans-unit>
        <trans-unit id="f1c1acbd4422c8096f1ccd850fc6f1437ccd7db8" translate="yes" xml:space="preserve">
          <source>A master or slave synchronization mode that specifies the use of MIDI clock messages. If this mode is used as the master sync mode, the sequencer gets its timing information from system real-time MIDI clock messages. This mode only applies as the master sync mode for sequencers that are also MIDI receivers. If this is the slave sync mode, the sequencer sends system real-time MIDI clock messages to its receiver. MIDI clock messages are sent at a rate of 24 per quarter note.</source>
          <target state="translated">MIDI 클럭 메시지 사용을 지정하는 마스터 또는 슬레이브 동기화 모드. 이 모드가 마스터 동기화 모드로 사용되면 시퀀서는 시스템 실시간 MIDI 클럭 메시지에서 타이밍 정보를 얻습니다. 이 모드는 MIDI 수신기 인 시퀀서의 마스터 동기화 모드로만 적용됩니다. 이것이 슬레이브 동기화 모드 인 경우 시퀀서는 시스템 실시간 MIDI 클럭 메시지를 수신기로 보냅니다. MIDI 클럭 메시지는 분기당 24의 비율로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="dccd692bcd77b8b3b096b3b3427fbdfd4efedd8e" translate="yes" xml:space="preserve">
          <source>A master synchronization mode that makes the sequencer get its timing information from its internal clock.</source>
          <target state="translated">시퀀서가 내부 클록에서 타이밍 정보를 얻도록하는 마스터 동기화 모드입니다.</target>
        </trans-unit>
        <trans-unit id="12d3b27856e9bd36d1a97eaae0372f0f8a17e986" translate="yes" xml:space="preserve">
          <source>A master synchronization mode that makes the sequencer get its timing information from its internal clock. This is not a legal slave sync mode.</source>
          <target state="translated">시퀀서가 내부 클록으로부터 타이밍 정보를 얻도록하는 마스터 동기화 모드. 이것은 올바른 슬레이브 동기화 모드가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="7eb366aa08c38a5f3036184a27210e6054eae460" translate="yes" xml:space="preserve">
          <source>A match column can be set in two ways:</source>
          <target state="translated">일치 열은 두 가지 방법으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8d49a16c11b345dbd45845c1fa0699317425664" translate="yes" xml:space="preserve">
          <source>A matcher finds matches in a subset of its input called the</source>
          <target state="translated">매처는 해당 입력의 하위 집합에서</target>
        </trans-unit>
        <trans-unit id="758a4d9f7a90b6649a7891a5e92bf4733aec59aa" translate="yes" xml:space="preserve">
          <source>A matcher is created from a pattern by invoking the pattern's &lt;a href=&quot;pattern#matcher(java.lang.CharSequence)&quot;&gt;&lt;code&gt;matcher&lt;/code&gt;&lt;/a&gt; method. Once created, a matcher can be used to perform three different kinds of match operations:</source>
          <target state="translated">패턴의 &lt;a href=&quot;pattern#matcher(java.lang.CharSequence)&quot;&gt; &lt;code&gt;matcher&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 패턴에서 matcher를 만듭니다. 일단 생성되면 매처를 사용하여 세 가지 유형의 일치 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2beb95eaaa4f46d10d05eb1b5ffd8b1199e910da" translate="yes" xml:space="preserve">
          <source>A matcher is created from a pattern by invoking the pattern's &lt;a href=&quot;pattern#matcher-java.lang.CharSequence-&quot;&gt;&lt;code&gt;matcher&lt;/code&gt;&lt;/a&gt; method. Once created, a matcher can be used to perform three different kinds of match operations:</source>
          <target state="translated">패턴의 &lt;a href=&quot;pattern#matcher-java.lang.CharSequence-&quot;&gt; &lt;code&gt;matcher&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 패턴에서 matcher가 작성됩니다 . 일단 matcher를 사용하면 세 가지 종류의 일치 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b606d69b6dac4199a2011b1286becb842eabc7e" translate="yes" xml:space="preserve">
          <source>A matcher may be reset explicitly by invoking its &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method or, if a new input sequence is desired, its &lt;a href=&quot;#reset(java.lang.CharSequence)&quot;&gt;&lt;code&gt;reset(CharSequence)&lt;/code&gt;&lt;/a&gt; method. Resetting a matcher discards its explicit state information and sets the append position to zero.</source>
          <target state="translated">matcher는 &lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하거나 새 입력 시퀀스가 ​​필요한 경우 &lt;a href=&quot;#reset(java.lang.CharSequence)&quot;&gt; &lt;code&gt;reset(CharSequence)&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하여 명시 적으로 재설정 할 수 있습니다 . 매처를 재설정하면 명시 적 상태 정보가 삭제되고 추가 위치가 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="ec1706ed07cebe204549527211631a07768594eb" translate="yes" xml:space="preserve">
          <source>A matcher may be reset explicitly by invoking its &lt;a href=&quot;matcher#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method or, if a new input sequence is desired, its &lt;a href=&quot;matcher#reset-java.lang.CharSequence-&quot;&gt;&lt;code&gt;reset(CharSequence)&lt;/code&gt;&lt;/a&gt; method. Resetting a matcher discards its explicit state information and sets the append position to zero.</source>
          <target state="translated">matcher는 &lt;a href=&quot;matcher#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하거나 새 입력 시퀀스가 ​​필요한 경우 &lt;a href=&quot;matcher#reset-java.lang.CharSequence-&quot;&gt; &lt;code&gt;reset(CharSequence)&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 명시 적으로 재설정 할 수 있습니다 . 매처를 재설정하면 명시 적 상태 정보가 삭제되고 추가 위치가 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="7621ee330212390d04d603c1e9f1fcdf7cbe24ad" translate="yes" xml:space="preserve">
          <source>A matte border UI resource.</source>
          <target state="translated">무광택 테두리 UI 리소스입니다.</target>
        </trans-unit>
        <trans-unit id="b452eaf2abe71ee3567f668d2fad17d07381a5e7" translate="yes" xml:space="preserve">
          <source>A membership key is valid upon creation and remains valid until the membership is dropped by invoking the &lt;a href=&quot;#drop()&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method, or the channel is closed. The validity of the membership key may be tested by invoking its &lt;a href=&quot;#isValid()&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">멤버십 키는 생성시 유효하며 &lt;a href=&quot;#drop()&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 멤버십이 삭제 되거나 채널이 닫힐 때까지 유효합니다 . &lt;a href=&quot;#isValid()&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 멤버십 키의 유효성을 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aac5131474a1f3893bb80ebe32ae2b7a9c14944f" translate="yes" xml:space="preserve">
          <source>A membership key is valid upon creation and remains valid until the membership is dropped by invoking the &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method, or the channel is closed. The validity of the membership key may be tested by invoking its &lt;a href=&quot;membershipkey#isValid--&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">멤버쉽 키는 생성시 유효하며 &lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 멤버쉽이 삭제 되거나 채널이 닫힐 때까지 유효합니다 . 멤버쉽 키의 유효성은 &lt;a href=&quot;membershipkey#isValid--&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="87ff0d72d9055ee787db74e634bab1ba0c390134" translate="yes" xml:space="preserve">
          <source>A membership key may represent a membership to receive all datagrams sent to the group, or it may be &lt;em&gt;source-specific&lt;/em&gt;, meaning that it represents a membership that receives only datagrams from a specific source address. Whether or not a membership key is source-specific may be determined by invoking its &lt;a href=&quot;#sourceAddress()&quot;&gt;&lt;code&gt;sourceAddress&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">멤버십 키는 그룹으로 전송 된 모든 데이터 그램을 수신하기위한 멤버십을 나타내거나 특정 소스 주소에서 데이터 그램 만 수신하는 멤버십을 나타내는 &lt;em&gt;소스 특정&lt;/em&gt; 일 수 있습니다 . 멤버십 키가 소스 별인지 여부는 &lt;a href=&quot;#sourceAddress()&quot;&gt; &lt;code&gt;sourceAddress&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 판별 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="92540732008e2be4a329a53daa253b9bb615558c" translate="yes" xml:space="preserve">
          <source>A membership key may represent a membership to receive all datagrams sent to the group, or it may be &lt;em&gt;source-specific&lt;/em&gt;, meaning that it represents a membership that receives only datagrams from a specific source address. Whether or not a membership key is source-specific may be determined by invoking its &lt;a href=&quot;membershipkey#sourceAddress--&quot;&gt;&lt;code&gt;sourceAddress&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">멤버쉽 키는 그룹으로 전송 된 모든 데이터 그램을 수신하기위한 멤버쉽을 나타내거나 &lt;em&gt;소스에 따라&lt;/em&gt; 다를 수 있습니다. &lt;em&gt;즉&lt;/em&gt; , 특정 소스 주소에서 데이터 그램 만 수신하는 멤버쉽을 나타냅니다. 멤버쉽 키가 소스 특정인지 여부는 &lt;a href=&quot;membershipkey#sourceAddress--&quot;&gt; &lt;code&gt;sourceAddress&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 판별 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a5b6ef5de637fafac719b3e12e727fd02fec5e1" translate="yes" xml:space="preserve">
          <source>A memory access var handle is associated with an access size &lt;code&gt;S&lt;/code&gt; and an alignment constraint &lt;code&gt;B&lt;/code&gt; (both expressed in bytes). We say that a memory access operation is &lt;em&gt;fully aligned&lt;/em&gt; if it occurs at a memory address &lt;code&gt;A&lt;/code&gt; which is compatible with both alignment constraints &lt;code&gt;S&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;. If access is fully aligned then following access modes are supported and are guaranteed to support atomic access:</source>
          <target state="translated">메모리 액세스 var 핸들은 액세스 크기 &lt;code&gt;S&lt;/code&gt; 및 정렬 제약 조건 &lt;code&gt;B&lt;/code&gt; (둘 다 바이트로 표시됨)와 연결됩니다. 메모리 액세스 작업이 정렬 제약 조건 &lt;code&gt;S&lt;/code&gt; 및 &lt;code&gt;B&lt;/code&gt; 모두와 호환되는 메모리 주소 &lt;code&gt;A&lt;/code&gt; 에서 발생하면 &lt;em&gt;완전히 정렬&lt;/em&gt; 되었다고 말합니다 . 액세스가 완전히 정렬 된 경우 다음 액세스 모드가 지원되며 원자 적 액세스를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="02c6853676790864de99b1f59c9c8285938b0781" translate="yes" xml:space="preserve">
          <source>A memory address models a reference into a memory location.</source>
          <target state="translated">메모리 주소는 메모리 위치에 대한 참조를 모델링합니다.</target>
        </trans-unit>
        <trans-unit id="9f99cc8d57d0fba3b697ab276768a9a5d7f836d5" translate="yes" xml:space="preserve">
          <source>A memory address models a reference into a memory location. Memory addresses are typically obtained using the &lt;a href=&quot;memorysegment#baseAddress()&quot;&gt;&lt;code&gt;MemorySegment.baseAddress()&lt;/code&gt;&lt;/a&gt; method; such addresses are said to be &lt;em&gt;checked&lt;/em&gt;, and can be expressed as &lt;em&gt;offsets&lt;/em&gt; into some underlying memory segment (see &lt;a href=&quot;#segment()&quot;&gt;&lt;code&gt;segment()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#segmentOffset()&quot;&gt;&lt;code&gt;segmentOffset()&lt;/code&gt;&lt;/a&gt;). Since checked memory addresses feature both spatial and temporal bounds, these addresses can &lt;em&gt;safely&lt;/em&gt; be dereferenced using a memory access var handle (see &lt;a href=&quot;memoryhandles&quot;&gt;&lt;code&gt;MemoryHandles&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">메모리 주소는 메모리 위치에 대한 참조를 모델링합니다. 메모리 주소는 일반적으로 &lt;a href=&quot;memorysegment#baseAddress()&quot;&gt; &lt;code&gt;MemorySegment.baseAddress()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 얻습니다 . 이러한 주소는 &lt;em&gt;검사&lt;/em&gt; 라고하며 일부 기본 메모리 세그먼트에 대한 &lt;em&gt;오프셋&lt;/em&gt; 으로 표현 될 수 있습니다 ( &lt;a href=&quot;#segment()&quot;&gt; &lt;code&gt;segment()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#segmentOffset()&quot;&gt; &lt;code&gt;segmentOffset()&lt;/code&gt; &lt;/a&gt; ). 확인 된 메모리 주소는 공간 및 시간 경계를 모두 제공 하므로 메모리 액세스 var 핸들을 사용하여 이러한 주소를 &lt;em&gt;안전하게&lt;/em&gt; 역 참조 할 &lt;em&gt;수&lt;/em&gt; 있습니다 ( &lt;a href=&quot;memoryhandles&quot;&gt; &lt;code&gt;MemoryHandles&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="df488fbcd4e37a3055d69e60f2a8e0121916408e" translate="yes" xml:space="preserve">
          <source>A memory layout can be used to describe the contents of a memory segment in a &lt;em&gt;language neutral&lt;/em&gt; fashion.</source>
          <target state="translated">메모리 레이아웃은 &lt;em&gt;언어 중립적 인&lt;/em&gt; 방식 으로 메모리 세그먼트의 내용을 설명하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ef3ff9c54b287b2b3f7f6f9a0f8e1b176ade93b1" translate="yes" xml:space="preserve">
          <source>A memory layout can be used to describe the contents of a memory segment in a &lt;em&gt;language neutral&lt;/em&gt; fashion. There are two leaves in the layout hierarchy, &lt;em&gt;value layouts&lt;/em&gt;, which are used to represent values of given size and kind (see &lt;a href=&quot;valuelayout&quot;&gt;&lt;code&gt;ValueLayout&lt;/code&gt;&lt;/a&gt;) and &lt;em&gt;padding layouts&lt;/em&gt; which are used, as the name suggests, to represent a portion of a memory segment whose contents should be ignored, and which are primarily present for alignment reasons (see &lt;a href=&quot;#ofPaddingBits(long)&quot;&gt;&lt;code&gt;ofPaddingBits(long)&lt;/code&gt;&lt;/a&gt;). Some common value layout constants are defined in the &lt;a href=&quot;memorylayouts&quot;&gt;&lt;code&gt;MemoryLayouts&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">메모리 레이아웃은 &lt;em&gt;언어 중립적 인&lt;/em&gt; 방식 으로 메모리 세그먼트의 내용을 설명하는 데 사용할 수 있습니다 . 레이아웃 계층 구조 에는 주어진 크기와 종류 ( &lt;a href=&quot;valuelayout&quot;&gt; &lt;code&gt;ValueLayout&lt;/code&gt; &lt;/a&gt; 참조 )의 값을 나타내는 데 사용되는 &lt;em&gt;value layouts&lt;/em&gt; 과 이름에서 알 수 있듯이 내용이 있어야하는 메모리 세그먼트의 일부를 나타내는 데 사용되는 &lt;em&gt;패딩 레이아웃&lt;/em&gt; 이 있습니다. 무시되며 주로 정렬 이유로 존재합니다 ( &lt;a href=&quot;#ofPaddingBits(long)&quot;&gt; &lt;code&gt;ofPaddingBits(long)&lt;/code&gt; &lt;/a&gt; 참조 ). 일부 공통 값 레이아웃 상수는 &lt;a href=&quot;memorylayouts&quot;&gt; &lt;code&gt;MemoryLayouts&lt;/code&gt; &lt;/a&gt; 클래스에 정의되어 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="759c3acd1cbf2f8d514c805241af3bdaa1b340bb" translate="yes" xml:space="preserve">
          <source>A memory manager is responsible for managing one or more memory pools. The garbage collector is one type of memory manager responsible for reclaiming memory occupied by unreachable objects. A Java virtual machine may have one or more memory managers. It may add or remove memory managers during execution. A memory pool can be managed by more than one memory manager.</source>
          <target state="translated">메모리 관리자는 하나 이상의 메모리 풀을 관리합니다. 가비지 수집기는 도달 할 수없는 객체가 차지한 메모리를 회수하는 책임을지는 한 가지 유형의 메모리 관리자입니다. Java 가상 머신에는 하나 이상의 메모리 관리자가있을 수 있습니다. 실행 중에 메모리 관리자를 추가하거나 제거 할 수 있습니다. 메모리 풀은 둘 이상의 메모리 관리자가 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="bf21ff485998503fc83eb613e59967f6d9bc4ba8" translate="yes" xml:space="preserve">
          <source>A memory notification is emitted by &lt;a href=&quot;memorymxbean&quot;&gt;&lt;code&gt;MemoryMXBean&lt;/code&gt;&lt;/a&gt; when the Java virtual machine detects that the memory usage of a memory pool is exceeding a threshold value. The notification emitted will contain the memory notification information about the detected condition:</source>
          <target state="translated">Java 가상 머신이 메모리 풀의 메모리 사용량이 임계 값을 초과 함을 감지하면 &lt;a href=&quot;memorymxbean&quot;&gt; &lt;code&gt;MemoryMXBean&lt;/code&gt; 에&lt;/a&gt; 의해 메모리 알림이 생성됩니다 . 생성 된 알림에는 감지 된 조건에 대한 메모리 알림 정보가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="8ab28529f854079d6bca735fc48ddf13983bb582" translate="yes" xml:space="preserve">
          <source>A memory pool has the following attributes:</source>
          <target state="translated">메모리 풀에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="05dcfc0734c44f5245f5a089b1b448dece950547" translate="yes" xml:space="preserve">
          <source>A memory pool represents a memory area that the Java virtual machine manages. The Java virtual machine has at least one memory pool and it may create or remove memory pools during execution. A memory pool can belong to either the heap or the non-heap memory.</source>
          <target state="translated">메모리 풀은 Java 가상 머신이 관리하는 메모리 영역을 나타냅니다. Java 가상 머신에는 하나 이상의 메모리 풀이 있으며 실행 중에 메모리 풀을 작성하거나 제거 할 수 있습니다. 메모리 풀은 힙 또는 힙이 아닌 메모리에 속할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2caa9f41b4d6def409d1b94d4aef7aceb2d13836" translate="yes" xml:space="preserve">
          <source>A memory segment models a contiguous region of memory.</source>
          <target state="translated">메모리 세그먼트는 연속적인 메모리 영역을 모델링합니다.</target>
        </trans-unit>
        <trans-unit id="f137763f4867200f7b57d280b3a161b52eb9dc49" translate="yes" xml:space="preserve">
          <source>A memory segment models a contiguous region of memory. A memory segment is associated with both spatial and temporal bounds. Spatial bounds ensure that memory access operations on a memory segment cannot affect a memory location which falls &lt;em&gt;outside&lt;/em&gt; the boundaries of the memory segment being accessed. Temporal bounds ensure that memory access operations on a segment cannot occur after a memory segment has been closed (see &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">메모리 세그먼트는 연속적인 메모리 영역을 모델링합니다. 메모리 세그먼트는 공간 및 시간 경계 모두와 연관됩니다. 공간 경계는 메모리 세그먼트에 대한 메모리 액세스 작업이 액세스되는 메모리 세그먼트 의 경계를 &lt;em&gt;벗어나는&lt;/em&gt; 메모리 위치에 영향을 미치지 않도록합니다. 시간 경계는 메모리 세그먼트가 닫힌 후에 세그먼트에 대한 메모리 액세스 작업이 발생할 수 없도록합니다 ( &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="fa4a35c46f1a1f8fea8d8e45f0198eb4ca0e7607" translate="yes" xml:space="preserve">
          <source>A menu bar handles keyboard shortcuts for menu items, passing them along to its child menus. (Keyboard shortcuts, which are optional, provide the user with an alternative to the mouse for invoking a menu item and the action that is associated with it.) Each menu item can maintain an instance of &lt;code&gt;MenuShortcut&lt;/code&gt;. The &lt;code&gt;MenuBar&lt;/code&gt; class defines several methods, &lt;a href=&quot;#shortcuts()&quot;&gt;&lt;code&gt;shortcuts()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getShortcutMenuItem(java.awt.MenuShortcut)&quot;&gt;&lt;code&gt;getShortcutMenuItem(java.awt.MenuShortcut)&lt;/code&gt;&lt;/a&gt; that retrieve information about the shortcuts a given menu bar is managing.</source>
          <target state="translated">메뉴 모음은 메뉴 항목의 키보드 단축키를 처리하여 하위 메뉴로 전달합니다. (선택 사항 인 키보드 단축키는 사용자에게 메뉴 항목 및 이와 관련된 작업을 호출하는 마우스 대신 사용할 수있는 대안을 제공합니다.) 각 메뉴 항목은 &lt;code&gt;MenuShortcut&lt;/code&gt; 인스턴스를 유지할 수 있습니다 . &lt;code&gt;MenuBar&lt;/code&gt; 구성 클래스는 여러 가지 방법으로 정의 &lt;a href=&quot;#shortcuts()&quot;&gt; &lt;code&gt;shortcuts()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getShortcutMenuItem(java.awt.MenuShortcut)&quot;&gt; &lt;code&gt;getShortcutMenuItem(java.awt.MenuShortcut)&lt;/code&gt; &lt;/a&gt; 주어진 도구 모음이 관리하고있는 쇼트 컷에 대한 정보를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5035dd58b2fad02c6006f7e6d0c5be6150166ab0" translate="yes" xml:space="preserve">
          <source>A menu can optionally be a</source>
          <target state="translated">메뉴는 선택적으로</target>
        </trans-unit>
        <trans-unit id="0c39c3fedba96a1dc85a3688a13359c4a0f1b393" translate="yes" xml:space="preserve">
          <source>A menu item that can be selected or deselected.</source>
          <target state="translated">선택하거나 선택 취소 할 수있는 메뉴 항목입니다.</target>
        </trans-unit>
        <trans-unit id="405567ef999c60714d2b7cf810f25c93ef8d643c" translate="yes" xml:space="preserve">
          <source>A menu item that can be selected or deselected. If selected, the menu item typically appears with a checkmark next to it. If unselected or deselected, the menu item appears without a checkmark. Like a regular menu item, a check box menu item can have either text or a graphic icon associated with it, or both.</source>
          <target state="translated">선택하거나 선택 취소 할 수있는 메뉴 항목입니다. 선택하면 일반적으로 메뉴 항목 옆에 확인 표시가 나타납니다. 선택 취소하거나 선택 취소하면 메뉴 항목이 확인 표시없이 나타납니다. 일반 메뉴 항목과 마찬가지로 확인란 메뉴 항목에는 텍스트 또는 그래픽 아이콘이 연결되거나 둘 다있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="659a21b7e16b76b0fda52e8389f9c126a4fd8a77" translate="yes" xml:space="preserve">
          <source>A metadata instance initialized from the contents of this &lt;code&gt;TIFFDirectory&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;TIFFDirectory&lt;/code&gt; 의 콘텐츠에서 초기화 된 메타 데이터 인스턴스 입니다.</target>
        </trans-unit>
        <trans-unit id="16a1fefd1f156e716dec034d62735cb2fdb42a53" translate="yes" xml:space="preserve">
          <source>A method &lt;code&gt;&lt;em&gt;T&lt;/em&gt; get&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt;, where &lt;code&gt;&lt;em&gt;T&lt;/em&gt;&lt;/code&gt; is a Java type (not &lt;code&gt;void&lt;/code&gt;) and &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; is a non-empty string, specifies that there is a readable attribute called &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt;. The Java type and Open type of the attribute are determined by the mapping rules below. The method &lt;code&gt;final Class getClass()&lt;/code&gt; inherited from &lt;code&gt;
        Object&lt;/code&gt; is ignored when looking for getters.</source>
          <target state="translated">방법 &lt;code&gt;&lt;em&gt;T&lt;/em&gt; get&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt; 여기서 &lt;code&gt;&lt;em&gt;T&lt;/em&gt;&lt;/code&gt; 는 (안 자바 타입 &lt;code&gt;void&lt;/code&gt; )와 &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; 이 라고 읽을 수있는 속성이 있음을 지정하는 비어 있지 않은 문자열 &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; 은 . 속성의 Java 유형 및 개방 유형은 아래 매핑 규칙에 따라 결정됩니다. getter를 찾을 때 &lt;code&gt; Object&lt;/code&gt; 에서 상속 된 &lt;code&gt;final Class getClass()&lt;/code&gt; 메소드 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="457a7051128277e171a5ea7f82f57b1cd1040435" translate="yes" xml:space="preserve">
          <source>A method &lt;code&gt;&lt;em&gt;T&lt;/em&gt; get&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt;, where &lt;code&gt;&lt;em&gt;T&lt;/em&gt;&lt;/code&gt; is a Java type (not &lt;code&gt;void&lt;/code&gt;) and &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; is a non-empty string, specifies that there is a readable attribute called &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt;. The Java type and Open type of the attribute are determined by the mapping rules below. The method &lt;code&gt;final Class getClass()&lt;/code&gt; inherited from &lt;code&gt;Object&lt;/code&gt; is ignored when looking for getters.</source>
          <target state="translated">메소드 &lt;code&gt;&lt;em&gt;T&lt;/em&gt; get&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt; (여기서 &lt;code&gt;&lt;em&gt;T&lt;/em&gt;&lt;/code&gt; 는 &lt;code&gt;void&lt;/code&gt; 가 아닌 Java 유형 이고 &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; 은 비어 있지 않은 문자열 임) 은 &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; 이라는 읽기 가능한 속성이 있음을 지정합니다 . 속성의 Java 유형과 Open 유형은 아래의 매핑 규칙에 따라 결정됩니다. getter를 찾을 때 &lt;code&gt;Object&lt;/code&gt; 에서 상속 된 &lt;code&gt;final Class getClass()&lt;/code&gt; 메소드 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="45e0dc0f042d7646630672696718f7e2db616536" translate="yes" xml:space="preserve">
          <source>A method &lt;code&gt;boolean is&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt; specifies that there is a readable attribute called &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; with Java type &lt;code&gt;boolean&lt;/code&gt; and Open type &lt;code&gt;SimpleType.Boolean&lt;/code&gt;.</source>
          <target state="translated">메소드 &lt;code&gt;boolean is&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt; 이라고하는 판독 속성이 존재 함을 지정 &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; 자바 형으로 &lt;code&gt;boolean&lt;/code&gt; 와 오픈형 &lt;code&gt;SimpleType.Boolean&lt;/code&gt; 이 .</target>
        </trans-unit>
        <trans-unit id="4a00575483612c388739a75e40677c1065a6370f" translate="yes" xml:space="preserve">
          <source>A method &lt;code&gt;void set&lt;em&gt;N&lt;/em&gt;(&lt;em&gt;T&lt;/em&gt; x)&lt;/code&gt; specifies that there is a writeable attribute called &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt;. The Java type and Open type of the attribute are determined by the mapping rules below. (Of course, the name &lt;code&gt;x&lt;/code&gt; of the parameter is irrelevant.)</source>
          <target state="translated">&lt;code&gt;void set&lt;em&gt;N&lt;/em&gt;(&lt;em&gt;T&lt;/em&gt; x)&lt;/code&gt; 메소드 는 &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; 이라는 쓰기 가능한 속성이 있음을 지정합니다 . 속성의 Java 유형과 Open 유형은 아래의 매핑 규칙에 따라 결정됩니다. (물론 매개 변수 의 이름 &lt;code&gt;x&lt;/code&gt; 는 관련이 없습니다.)</target>
        </trans-unit>
        <trans-unit id="9c6fa88a28a9bd29e828728ac9b5531c7d006ceb" translate="yes" xml:space="preserve">
          <source>A method declaration is &lt;a href=&quot;#isPersistent()&quot;&gt;persistent&lt;/a&gt;.</source>
          <target state="translated">메서드 선언은 &lt;a href=&quot;#isPersistent()&quot;&gt;영구적&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="39fd92f3633704081b471cec4ab35144e6ebe55d" translate="yes" xml:space="preserve">
          <source>A method declaration.</source>
          <target state="translated">메서드 선언.</target>
        </trans-unit>
        <trans-unit id="5bf58281d9210c2718f012652ecb8341b9e3af78" translate="yes" xml:space="preserve">
          <source>A method declaration. The snippet is an instance of &lt;a href=&quot;methodsnippet&quot;&gt;&lt;code&gt;MethodSnippet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">메서드 선언. 스 니펫은 &lt;a href=&quot;methodsnippet&quot;&gt; &lt;code&gt;MethodSnippet&lt;/code&gt; &lt;/a&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="9f151ad26a3a627668cf7977d9ea36505901b414" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a byte buffer.</source>
          <target state="translated">바이트 버퍼 를 &lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt; 하는 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="ca0c6ab07cc030a5287d27e80a03a25a67784230" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a char buffer.</source>
          <target state="translated">char 버퍼 를 &lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt; 하는 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="4b4231f38a8bf8e304d2ab9b9dab38a325b73255" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a double buffer.</source>
          <target state="translated">이중 버퍼 를 &lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt; 하는 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="64986d2d5ed96c2dfbc0aa0bd99c07e17f5a0b82" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a float buffer.</source>
          <target state="translated">부동 버퍼 를 &lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt; 하는 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="b8dfbcd3cae533ef6cbb4a02c4853fa87f633721" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a long buffer.</source>
          <target state="translated">긴 버퍼 를 &lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt; 하는 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="9e34d7660fc4c604587ce011fcc3f2a57fdd4658" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a short buffer.</source>
          <target state="translated">짧은 버퍼 를 &lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt; 하는 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="b79732fa8755bda85b52323f9c34ac4c36537958" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; an int buffer.</source>
          <target state="translated">int 버퍼 를 &lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt; 하는 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="fc4507d0bc619ee8ca9395cabbe1e3fe755b1d57" translate="yes" xml:space="preserve">
          <source>A method handle can be obtained on a method, constructor, or field which is declared with Java generic types. As with the Core Reflection API, the type of the method handle will be constructed from the erasure of the source-level type. When a method handle is invoked, the types of its arguments or the return value cast type may be generic types or type instances. If this occurs, the compiler will replace those types by their erasures when it constructs the symbolic type descriptor for the &lt;code&gt;invokevirtual&lt;/code&gt; instruction.</source>
          <target state="translated">메소드 핸들은 Java 제네릭 유형으로 선언 된 메소드, 생성자 또는 필드에서 얻을 수 있습니다. Core Reflection API와 마찬가지로 메서드 핸들의 유형은 소스 수준 유형의 삭제로 구성됩니다. 메서드 핸들이 호출 될 때 인수의 유형 또는 반환 값 캐스트 유형은 제네릭 유형 또는 유형 인스턴스 일 수 있습니다. 이 경우 컴파일러는 &lt;code&gt;invokevirtual&lt;/code&gt; 명령어에 대한 기호 유형 설명자를 구성 할 때 해당 유형을 삭제하여 대체 합니다.</target>
        </trans-unit>
        <trans-unit id="6b21bdd4c6300a890a95cf204bbba7785f32d420" translate="yes" xml:space="preserve">
          <source>A method handle can be obtained on a method, constructor, or field which is declared with Java generic types. As with the Core Reflection API, the type of the method handle will constructed from the erasure of the source-level type. When a method handle is invoked, the types of its arguments or the return value cast type may be generic types or type instances. If this occurs, the compiler will replace those types by their erasures when it constructs the symbolic type descriptor for the &lt;code&gt;invokevirtual&lt;/code&gt; instruction.</source>
          <target state="translated">메소드 핸들은 Java 일반 유형으로 선언 된 메소드, 생성자 또는 필드에서 얻을 수 있습니다. Core Reflection API와 마찬가지로 메소드 핸들의 유형은 소스 레벨 유형의 삭제로 구성됩니다. 메소드 핸들이 호출 될 때 인수 유형 또는 리턴 값 캐스트 유형은 일반 유형 또는 유형 인스턴스 일 수 있습니다. 이 경우 컴파일러는 &lt;code&gt;invokevirtual&lt;/code&gt; 명령에 대한 기호 유형 설명자를 구성 할 때 해당 유형을 삭제하여 대체 합니다.</target>
        </trans-unit>
        <trans-unit id="f85e865b4901f7eb077fe1f7678da72b01b68a19" translate="yes" xml:space="preserve">
          <source>A method handle contains a pair of special invoker methods called &lt;a href=&quot;#invokeExact(java.lang.Object...)&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt;. Both invoker methods provide direct access to the method handle's underlying method, constructor, field, or other operation, as modified by transformations of arguments and return values. Both invokers accept calls which exactly match the method handle's own type. The plain, inexact invoker also accepts a range of other call types.</source>
          <target state="translated">메서드 핸들에는 &lt;a href=&quot;#invokeExact(java.lang.Object...)&quot;&gt; &lt;code&gt;invokeExact&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; 라는 특수 호출자 메서드 쌍이 포함 됩니다. 두 호출자 메서드 모두 인수 및 반환 값의 변환으로 수정 된 메서드 핸들의 기본 메서드, 생성자, 필드 또는 기타 작업에 대한 직접 액세스를 제공합니다. 두 호출자 모두 메서드 핸들의 고유 유형과 정확히 일치하는 호출을 수락합니다. 평범하고 정확하지 않은 호출자는 다양한 다른 호출 유형도 허용합니다.</target>
        </trans-unit>
        <trans-unit id="8baa56b94df191753f371cdf316dbc026a4b19c5" translate="yes" xml:space="preserve">
          <source>A method handle contains a pair of special invoker methods called &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt;. Both invoker methods provide direct access to the method handle's underlying method, constructor, field, or other operation, as modified by transformations of arguments and return values. Both invokers accept calls which exactly match the method handle's own type. The plain, inexact invoker also accepts a range of other call types.</source>
          <target state="translated">메소드 핸들에는 &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt; &lt;code&gt;invokeExact&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; 라는 특수 호출자 메소드 쌍이 포함되어 있습니다 . 두 호출자 메소드 모두 인수 및 리턴 값의 변환에 의해 수정 된대로 메소드 핸들의 기본 메소드, 생성자, 필드 또는 기타 조작에 직접 액세스 할 수 있습니다. 두 호출자 모두 메소드 핸들 자체 유형과 정확히 일치하는 호출을 승인합니다. 정확하고 정확하지 않은 호출자는 다양한 다른 호출 유형도 허용합니다.</target>
        </trans-unit>
        <trans-unit id="6a44db104bf074a038e01994c9e6da4c50b24b95" translate="yes" xml:space="preserve">
          <source>A method handle for a constructor</source>
          <target state="translated">생성자의 메서드 핸들</target>
        </trans-unit>
        <trans-unit id="4dfe0cb68661a263dc4a2b188c8acc042b9f9641" translate="yes" xml:space="preserve">
          <source>A method handle for a method invoked as with &lt;code&gt;invokeinterface&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;invokeinterface&lt;/code&gt; 와 같이 호출 된 메서드에 대한 메서드 핸들</target>
        </trans-unit>
        <trans-unit id="105d796ffaedd8f1f837279e30c9e41a766f71b3" translate="yes" xml:space="preserve">
          <source>A method handle for a method invoked as with &lt;code&gt;invokespecial&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;invokespecial&lt;/code&gt; 과 같이 호출 된 메서드에 대한 메서드 핸들</target>
        </trans-unit>
        <trans-unit id="b5bd9b52fdbc0eb3883abeef2c099c065513e10a" translate="yes" xml:space="preserve">
          <source>A method handle for a method invoked as with &lt;code&gt;invokestatic&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;invokestatic&lt;/code&gt; 과 같이 호출 된 메서드에 대한 메서드 핸들</target>
        </trans-unit>
        <trans-unit id="d2e147ff67ec41717e16e80111a40bb28ea08866" translate="yes" xml:space="preserve">
          <source>A method handle for a method invoked as with &lt;code&gt;invokevirtual&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;invokevirtual&lt;/code&gt; 과 같이 호출 된 메서드에 대한 메서드 핸들</target>
        </trans-unit>
        <trans-unit id="4598a3d8c1d223470eefa2dfb16d976c1f1501ea" translate="yes" xml:space="preserve">
          <source>A method handle for a read accessor for a static field</source>
          <target state="translated">정적 필드에 대한 읽기 접근 자에 대한 메서드 핸들</target>
        </trans-unit>
        <trans-unit id="1ab3463c5754346928288d58d379fad86f155581" translate="yes" xml:space="preserve">
          <source>A method handle for a read accessor for an instance field</source>
          <target state="translated">인스턴스 필드에 대한 읽기 접근 자에 대한 메서드 핸들</target>
        </trans-unit>
        <trans-unit id="a66b53292dd3a3d8502c8a8ff51169d8b1d7cf5e" translate="yes" xml:space="preserve">
          <source>A method handle for a write accessor for a static field</source>
          <target state="translated">정적 필드에 대한 쓰기 접근자를위한 메서드 핸들</target>
        </trans-unit>
        <trans-unit id="e5e013f62889afcf8d9ba24bd4f27c30455b8b85" translate="yes" xml:space="preserve">
          <source>A method handle for a write accessor for an instance field</source>
          <target state="translated">인스턴스 필드에 대한 쓰기 접근 자에 대한 메서드 핸들</target>
        </trans-unit>
        <trans-unit id="354331b44385d72814b44d644ce43d609d400d36" translate="yes" xml:space="preserve">
          <source>A method handle for an interface method invoked as with &lt;code&gt;invokespecial&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;invokespecial&lt;/code&gt; 과 같이 호출되는 인터페이스 메서드에 대한 메서드 핸들</target>
        </trans-unit>
        <trans-unit id="572fd61588901813858a5e05ef980f150779222e" translate="yes" xml:space="preserve">
          <source>A method handle is a typed, directly executable reference to an underlying method, constructor, field, or similar low-level operation, with optional transformations of arguments or return values.</source>
          <target state="translated">메소드 핸들은 인수 또는 리턴 값의 선택적 변환을 사용하여 기본 메소드, 생성자, 필드 또는 유사한 저수준 조작에 대한 직접 실행 가능한 유형의 참조입니다.</target>
        </trans-unit>
        <trans-unit id="601e9818f0485220f5df6a6df4003865ff1dda61" translate="yes" xml:space="preserve">
          <source>A method handle is a typed, directly executable reference to an underlying method, constructor, field, or similar low-level operation, with optional transformations of arguments or return values. These transformations are quite general, and include such patterns as &lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt;conversion&lt;/a&gt;, &lt;a href=&quot;#bindTo(java.lang.Object)&quot;&gt;insertion&lt;/a&gt;, &lt;a href=&quot;methodhandles#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt;deletion&lt;/a&gt;, and &lt;a href=&quot;methodhandles#filterArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle...)&quot;&gt;substitution&lt;/a&gt;.</source>
          <target state="translated">메서드 핸들은 기본 메서드, 생성자, 필드 또는 이와 유사한 저수준 작업에 대한 형식화 된 직접 실행 가능한 참조이며 인수 또는 반환 값의 선택적 변환이 있습니다. 이러한 변환은 매우 일반적이며 &lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt;변환&lt;/a&gt; , &lt;a href=&quot;#bindTo(java.lang.Object)&quot;&gt;삽입&lt;/a&gt; , &lt;a href=&quot;methodhandles#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt;삭제&lt;/a&gt; 및 &lt;a href=&quot;methodhandles#filterArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle...)&quot;&gt;대체&lt;/a&gt; 와 같은 패턴을 포함 합니다.</target>
        </trans-unit>
        <trans-unit id="3fa05ec6e74c0fc625c0541a82a118964114ff54" translate="yes" xml:space="preserve">
          <source>A method handle is a typed, directly executable reference to an underlying method, constructor, field, or similar low-level operation, with optional transformations of arguments or return values. These transformations are quite general, and include such patterns as &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;conversion&lt;/a&gt;, &lt;a href=&quot;methodhandle#bindTo-java.lang.Object-&quot;&gt;insertion&lt;/a&gt;, &lt;a href=&quot;methodhandles#dropArguments-java.lang.invoke.MethodHandle-int-java.util.List-&quot;&gt;deletion&lt;/a&gt;, and &lt;a href=&quot;methodhandles#filterArguments-java.lang.invoke.MethodHandle-int-java.lang.invoke.MethodHandle...-&quot;&gt;substitution&lt;/a&gt;.</source>
          <target state="translated">메소드 핸들은 인수 또는 리턴 값의 선택적 변환을 사용하여 기본 메소드, 생성자, 필드 또는 유사한 저수준 조작에 대한 직접 실행 가능한 유형의 참조입니다. 이러한 변환은 매우 일반적이며 &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;변환&lt;/a&gt; , &lt;a href=&quot;methodhandle#bindTo-java.lang.Object-&quot;&gt;삽입&lt;/a&gt; , &lt;a href=&quot;methodhandles#dropArguments-java.lang.invoke.MethodHandle-int-java.util.List-&quot;&gt;삭제&lt;/a&gt; 및 &lt;a href=&quot;methodhandles#filterArguments-java.lang.invoke.MethodHandle-int-java.lang.invoke.MethodHandle...-&quot;&gt;대체&lt;/a&gt; 와 같은 패턴을 포함 합니다.</target>
        </trans-unit>
        <trans-unit id="5d952641ca1800b10d6cffa65e1d0f020bc88924" translate="yes" xml:space="preserve">
          <source>A method handle's type controls the types of invocations it accepts, and the kinds of transformations that apply to it.</source>
          <target state="translated">메소드 핸들의 유형은 허용하는 호출 유형 및 적용되는 변환 유형을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="868a3299e2184db727b0edc3655d74054eb7fe70" translate="yes" xml:space="preserve">
          <source>A method is not required to declare in its &lt;code&gt;throws&lt;/code&gt; clause any subclasses of &lt;code&gt;Error&lt;/code&gt; that might be thrown during the execution of the method but not caught, since these errors are abnormal conditions that should never occur. That is, &lt;code&gt;Error&lt;/code&gt; and its subclasses are regarded as unchecked exceptions for the purposes of compile-time checking of exceptions.</source>
          <target state="translated">메소드는 &lt;code&gt;throws&lt;/code&gt; 절 에서 메소드 실행 중에 발생할 수 있지만 포착되지 않은 &lt;code&gt;Error&lt;/code&gt; 의 서브 클래스 를 선언 할 필요는 없습니다. 이러한 오류는 절대 발생하지 않아야하는 비정상적인 조건이기 때문입니다. 즉, &lt;code&gt;Error&lt;/code&gt; 및 해당 서브 클래스는 예외 컴파일 시간 검사를 위해 검사되지 않은 예외로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="cede3bc5c286fda8f14769935e7e5e84460b8066" translate="yes" xml:space="preserve">
          <source>A method of communication between a debugger and a target VM.</source>
          <target state="translated">디버거와 대상 VM 간의 통신 방법입니다.</target>
        </trans-unit>
        <trans-unit id="6726edbff007e4538c610e19f079ef101b40c9c7" translate="yes" xml:space="preserve">
          <source>A method of connection between a debugger and a target VM.</source>
          <target state="translated">디버거와 대상 VM 간의 연결 방법입니다.</target>
        </trans-unit>
        <trans-unit id="870290944221d44483332ff5a93c4c5b9f5fbe77" translate="yes" xml:space="preserve">
          <source>A method of connection between a debugger and a target VM. A connector encapsulates exactly one &lt;a href=&quot;transport&quot;&gt;&lt;code&gt;Transport&lt;/code&gt;&lt;/a&gt;. used to establish the connection. Each connector has a set of arguments which controls its operation. The arguments are stored as a map, keyed by a string. Each implementation defines the string argument keys it accepts.</source>
          <target state="translated">디버거와 대상 VM 간의 연결 방법입니다. 커넥터는 정확히 하나의 &lt;a href=&quot;transport&quot;&gt; &lt;code&gt;Transport&lt;/code&gt; 를&lt;/a&gt; 캡슐화합니다 . 연결을 설정하는 데 사용됩니다. 각 커넥터에는 작동을 제어하는 ​​인수 세트가 있습니다. 인수는 문자열로 키가 지정된 맵으로 저장됩니다. 각 구현은 허용하는 문자열 인수 키를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="9eec3fbd4625bc7c0178910686b6b7a4115fd480" translate="yes" xml:space="preserve">
          <source>A method reference may refer either to a static or non-static method. In the non-static case, the method handle type includes an explicit receiver argument, prepended before any other arguments. In the method handle's type, the initial receiver argument is typed according to the class under which the method was initially requested. (E.g., if a non-static method handle is obtained via &lt;code&gt;ldc&lt;/code&gt;, the type of the receiver is the class named in the constant pool entry.)</source>
          <target state="translated">메소드 참조는 정적 또는 비 정적 메소드를 참조 할 수 있습니다. 비 정적 경우, 메소드 핸들 유형에는 다른 인수 앞에 추가 된 명시 적 수신자 인수가 포함됩니다. 메소드 핸들의 유형에서 초기 수신자 인수는 메소드가 처음 요청 된 클래스에 따라 유형이 지정됩니다. (예를 들어, 비 정적 메소드 핸들이 &lt;code&gt;ldc&lt;/code&gt; 를 통해 얻은 경우, 수신자의 유형은 상수 풀 항목에 이름이 지정된 클래스입니다.)</target>
        </trans-unit>
        <trans-unit id="cad269b9da91c19f486eedab75bf4efc3bb48451" translate="yes" xml:space="preserve">
          <source>A method reference to the exception constructor with an empty argument list can be used as the supplier. For example, &lt;code&gt;IllegalStateException::new&lt;/code&gt;</source>
          <target state="translated">빈 인수 목록이있는 예외 생성자에 대한 메서드 참조를 공급자로 사용할 수 있습니다. 예를 들어, &lt;code&gt;IllegalStateException::new&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9898a76c96e7d7d28d9424a80b3fbd1abace77a" translate="yes" xml:space="preserve">
          <source>A method that result-bearing CountedCompleters may optionally use to help maintain result data.</source>
          <target state="translated">결과를 포함하는 CountedCompleters가 결과 데이터를 유지 관리하는 데 선택적으로 사용할 수있는 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="80ff713d25db02a3cefe09efa77844101963da11" translate="yes" xml:space="preserve">
          <source>A method that result-bearing CountedCompleters may optionally use to help maintain result data. By default, does nothing. Overrides are not recommended. However, if this method is overridden to update existing objects or fields, then it must in general be defined to be thread-safe.</source>
          <target state="translated">결과를 나타내는 CountedCompleters는 선택적으로 결과 데이터를 유지하는 데 도움이되는 방법입니다. 기본적으로 아무 것도 수행하지 않습니다. 재정의는 권장되지 않습니다. 그러나 기존 객체 또는 필드를 업데이트하기 위해이 방법을 재정의하는 경우 일반적으로 스레드 안전하도록 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="314e124337cca6e52bd50063a6fcb8a5228fd544" translate="yes" xml:space="preserve">
          <source>A method to make a separate copy of the &lt;code&gt;JoinRowSet&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;JoinRowSet&lt;/code&gt; 개체 의 별도 복사본을 만드는 메서드</target>
        </trans-unit>
        <trans-unit id="84063deeb0e5c66bc0b8ac1435169c1c18f56b89" translate="yes" xml:space="preserve">
          <source>A method to obtain a mask for any existing mouse button.</source>
          <target state="translated">기존 마우스 버튼에 대한 마스크를 얻는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="9af5485dfac5301c3eba09595d3817d30c0bb162" translate="yes" xml:space="preserve">
          <source>A method to obtain a mask for any existing mouse button. The returned mask may be used for different purposes. Following are some of them:</source>
          <target state="translated">기존 마우스 버튼에 대한 마스크를 얻는 방법입니다. 반환 된 마스크는 다른 용도로 사용될 수 있습니다. 다음은 그중 일부입니다.</target>
        </trans-unit>
        <trans-unit id="1b25841327949a6f44612d8d6ab0ea4932ceee3e" translate="yes" xml:space="preserve">
          <source>A method to request a list of DOM implementations that support the specified features and versions, as specified in .</source>
          <target state="translated">에 지정된대로 지정된 기능 및 버전을 지원하는 DOM 구현 목록을 요청하는 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="574e4904b4e4713da2d82697faf33315da724d05" translate="yes" xml:space="preserve">
          <source>A method to request the first DOM implementation that supports the specified features.</source>
          <target state="translated">지정된 기능을 지원하는 첫 번째 DOM 구현을 요청하는 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="0b3255540dfdd307e7a4bb732db52547bb5ee7ad" translate="yes" xml:space="preserve">
          <source>A method to set the float value with a specified unit.</source>
          <target state="translated">지정된 단위로 float 값을 설정하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="1ef0101911fdac8571a7022598f558662e3988f4" translate="yes" xml:space="preserve">
          <source>A method to set the float value with a specified unit. If the property attached with this value can not accept the specified unit or the float value, the value will be unchanged and a &lt;code&gt;DOMException&lt;/code&gt; will be raised.</source>
          <target state="translated">지정된 단위로 float 값을 설정하는 방법입니다. 이 값이 첨부 된 속성이 지정된 단위 또는 float 값을 수락 할 수없는 경우 값은 변경되지 않고 &lt;code&gt;DOMException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9ac56890c6c3e7134b28131fe49925bf07d4a13a" translate="yes" xml:space="preserve">
          <source>A method to set the string value with the specified unit.</source>
          <target state="translated">지정된 단위로 문자열 값을 설정하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="11f05527daf5300a480138002e23f344ebbd48bd" translate="yes" xml:space="preserve">
          <source>A method to set the string value with the specified unit. If the property attached to this value can't accept the specified unit or the string value, the value will be unchanged and a &lt;code&gt;DOMException&lt;/code&gt; will be raised.</source>
          <target state="translated">지정된 단위로 문자열 값을 설정하는 방법입니다. 이 값에 연결된 속성이 지정된 단위 또는 문자열 값을 수락 할 수없는 경우 값은 변경되지 않고 &lt;code&gt;DOMException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b4afeaccf26c0c9c61c626d5668b50078b9e9509" translate="yes" xml:space="preserve">
          <source>A method type represents the arguments and return type accepted and returned by a method handle, or the arguments and return type passed and expected by a method handle caller.</source>
          <target state="translated">메소드 유형은 메소드 핸들이 승인하고 리턴하는 인수 및 리턴 유형 또는 메소드 핸들 호출자가 전달하고 예상 한 인수 및 리턴 유형을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7753aab8f09d05964bb597b07157886ec8f0d15c" translate="yes" xml:space="preserve">
          <source>A method type represents the arguments and return type accepted and returned by a method handle, or the arguments and return type passed and expected by a method handle caller. Method types must be properly matched between a method handle and all its callers, and the JVM's operations enforce this matching at, specifically during calls to &lt;a href=&quot;methodhandle#invokeExact(java.lang.Object...)&quot;&gt;&lt;code&gt;MethodHandle.invokeExact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;MethodHandle.invoke&lt;/code&gt;&lt;/a&gt;, and during execution of &lt;code&gt;invokedynamic&lt;/code&gt; instructions.</source>
          <target state="translated">메서드 유형은 메서드 핸들에서 허용 및 반환 된 인수 및 반환 유형 또는 메서드 핸들 호출자가 전달하고 예상하는 인수 및 반환 유형을 나타냅니다. 메서드 유형은 메서드 핸들과 모든 호출자간에 적절하게 일치해야하며 JVM의 작업은 특히 &lt;a href=&quot;methodhandle#invokeExact(java.lang.Object...)&quot;&gt; &lt;code&gt;MethodHandle.invokeExact&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;MethodHandle.invoke&lt;/code&gt; &lt;/a&gt; 호출 중 및 &lt;code&gt;invokedynamic&lt;/code&gt; 명령어 실행 중에이 일치를 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="71a2dc9fcf19a2c5b0704beb5103aeb20daf64e4" translate="yes" xml:space="preserve">
          <source>A method type represents the arguments and return type accepted and returned by a method handle, or the arguments and return type passed and expected by a method handle caller. Method types must be properly matched between a method handle and all its callers, and the JVM's operations enforce this matching at, specifically during calls to &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt;&lt;code&gt;MethodHandle.invokeExact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;MethodHandle.invoke&lt;/code&gt;&lt;/a&gt;, and during execution of &lt;code&gt;invokedynamic&lt;/code&gt; instructions.</source>
          <target state="translated">메소드 유형은 메소드 핸들이 승인하고 리턴하는 인수 및 리턴 유형 또는 메소드 핸들 호출자가 전달하고 예상 한 인수 및 리턴 유형을 나타냅니다. 메소드 핸들은 메소드 핸들과 모든 호출자간에 올바르게 일치해야하며 JVM 조작은 특히 &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt; &lt;code&gt;MethodHandle.invokeExact&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;MethodHandle.invoke&lt;/code&gt; &lt;/a&gt; 호출 중 및 &lt;code&gt;invokedynamic&lt;/code&gt; 명령 실행 중에이 일치를 강제합니다 .</target>
        </trans-unit>
        <trans-unit id="45fcaa635da8696543cc6670e9a6f2c07be4af8b" translate="yes" xml:space="preserve">
          <source>A method, constructor, or initializer.</source>
          <target state="translated">메서드, 생성자 또는 이니셜 라이저</target>
        </trans-unit>
        <trans-unit id="d107594adcb7aadca22825c251cefea0649e7b80" translate="yes" xml:space="preserve">
          <source>A method.</source>
          <target state="translated">방법.</target>
        </trans-unit>
        <trans-unit id="544432bdda96d5f387efdfc36348983b0031d9c4" translate="yes" xml:space="preserve">
          <source>A method. The only &lt;code&gt;SubKind&lt;/code&gt; for &lt;a href=&quot;snippet.kind#METHOD&quot;&gt;&lt;code&gt;Snippet.Kind.METHOD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">방법. 은 &lt;code&gt;SubKind&lt;/code&gt; 에 대한 &lt;a href=&quot;snippet.kind#METHOD&quot;&gt; &lt;code&gt;Snippet.Kind.METHOD&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b3694b32756ca8f2db40531582e67b2bc3f1034" translate="yes" xml:space="preserve">
          <source>A minimal Http server example is shown below:</source>
          <target state="translated">최소한의 Http 서버 예제는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0b155a1bb88c0bf0613eda5b33193ca7093a6f16" translate="yes" xml:space="preserve">
          <source>A minimal set of system dependent environment variables may be required to start a process on some operating systems. As a result, the subprocess may inherit additional environment variable settings beyond those in the process builder's &lt;a href=&quot;#environment()&quot;&gt;&lt;code&gt;environment()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">일부 운영 체제에서 프로세스를 시작하려면 최소한의 시스템 종속 환경 변수 세트가 필요할 수 있습니다. 결과적으로 하위 프로세스는 프로세스 빌더의 &lt;a href=&quot;#environment()&quot;&gt; &lt;code&gt;environment()&lt;/code&gt; &lt;/a&gt; 의 설정을 넘어 추가 환경 변수 설정을 상속 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6157c9c5a862c0de70fda2d64867e07de05695a" translate="yes" xml:space="preserve">
          <source>A minimal set of system dependent environment variables may be required to start a process on some operating systems. As a result, the subprocess may inherit additional environment variable settings beyond those in the process builder's &lt;a href=&quot;processbuilder#environment--&quot;&gt;&lt;code&gt;environment()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">일부 운영 체제에서 프로세스를 시작하려면 최소 시스템 종속 환경 변수 세트가 필요할 수 있습니다. 결과적으로 서브 프로세스는 프로세스 빌더의 &lt;a href=&quot;processbuilder#environment--&quot;&gt; &lt;code&gt;environment()&lt;/code&gt; &lt;/a&gt; 이외의 추가 환경 변수 설정을 상속 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d78868ad6806cc456fd63e85f5e434673de3bcbf" translate="yes" xml:space="preserve">
          <source>A minimal set of system dependent environment variables may be required to start a process on some operating systems. As a result, the subprocess may inherit additional environment variable settings beyond those in the specified environment.</source>
          <target state="translated">일부 운영 체제에서 프로세스를 시작하려면 최소 시스템 종속 환경 변수 세트가 필요할 수 있습니다. 결과적으로, 서브 프로세스는 지정된 환경의 설정 이외의 추가 환경 변수 설정을 상속 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90de6152ceb7e2040443e1d839e2daeb98a99880" translate="yes" xml:space="preserve">
          <source>A minute is represented by an integer from 0 to 59 in the usual manner.</source>
          <target state="translated">분은 일반적인 방식으로 0에서 59 사이의 정수로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="3c0ab4f66be133a5f69f2ffef00b81037f775e04" translate="yes" xml:space="preserve">
          <source>A mirror of a class in the target VM.</source>
          <target state="translated">대상 VM에있는 클래스의 미러입니다.</target>
        </trans-unit>
        <trans-unit id="af035544db33d41a2b74bb42c05d9041a8d3ef56" translate="yes" xml:space="preserve">
          <source>A mirror of a class in the target VM. A ClassType is a refinement of &lt;a href=&quot;referencetype&quot;&gt;&lt;code&gt;ReferenceType&lt;/code&gt;&lt;/a&gt; that applies to true classes in the JLS sense of the definition (not an interface, not an array type). Any &lt;a href=&quot;objectreference&quot;&gt;&lt;code&gt;ObjectReference&lt;/code&gt;&lt;/a&gt; that mirrors an instance of such a class will have a ClassType as its type.</source>
          <target state="translated">대상 VM에있는 클래스의 미러입니다. ClassType은 정의의 JLS 의미에서 실제 클래스에 적용되는 &lt;a href=&quot;referencetype&quot;&gt; &lt;code&gt;ReferenceType&lt;/code&gt; &lt;/a&gt; 의 개선입니다 (배열 유형이 아니라 인터페이스가 아님). 모든 &lt;a href=&quot;objectreference&quot;&gt; &lt;code&gt;ObjectReference&lt;/code&gt; 의&lt;/a&gt; 이러한 클래스의 인스턴스는 유형으로하는 ClassType있을 것이다 거울있다.</target>
        </trans-unit>
        <trans-unit id="589f9834580f02da861e523043a2544d234bfca5" translate="yes" xml:space="preserve">
          <source>A mirror of an interface in the target VM.</source>
          <target state="translated">대상 VM에있는 인터페이스의 미러입니다.</target>
        </trans-unit>
        <trans-unit id="f9a913b43154879eabc8f4bc721c64c9b1d026ab" translate="yes" xml:space="preserve">
          <source>A mirror of an interface in the target VM. An InterfaceType is a refinement of &lt;a href=&quot;referencetype&quot;&gt;&lt;code&gt;ReferenceType&lt;/code&gt;&lt;/a&gt; that applies to true interfaces in the JLS sense of the definition (not a class, not an array type). An interface type will never be returned by &lt;a href=&quot;objectreference#referenceType()&quot;&gt;&lt;code&gt;ObjectReference.referenceType()&lt;/code&gt;&lt;/a&gt;, but it may be in the list of implemented interfaces for a &lt;a href=&quot;classtype&quot;&gt;&lt;code&gt;ClassType&lt;/code&gt;&lt;/a&gt; that is returned by that method.</source>
          <target state="translated">대상 VM에있는 인터페이스의 미러입니다. InterfaceType은 정의의 JLS 의미 (배열 유형이 아니라 클래스가 아님)에서 실제 인터페이스에 적용되는 &lt;a href=&quot;referencetype&quot;&gt; &lt;code&gt;ReferenceType&lt;/code&gt; &lt;/a&gt; 의 개선입니다 . 인터페이스 유형은 &lt;a href=&quot;objectreference#referenceType()&quot;&gt; &lt;code&gt;ObjectReference.referenceType()&lt;/code&gt; &lt;/a&gt; 의해 반환되지 않지만 해당 메서드에서 반환되는 &lt;a href=&quot;classtype&quot;&gt; &lt;code&gt;ClassType&lt;/code&gt; 에&lt;/a&gt; 대해 구현 된 인터페이스 목록에있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2fbb404279daedadb48120d3ffbc5c7f91c86dc0" translate="yes" xml:space="preserve">
          <source>A mirror that has a &lt;a href=&quot;location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt; 이있는 거울 .</target>
        </trans-unit>
        <trans-unit id="2a2b165d0ebb6938fa640f88e06d14ff5829009a" translate="yes" xml:space="preserve">
          <source>A mix-in style interface for marking objects that should be acted upon after a given delay.</source>
          <target state="translated">주어진 지연 후에 작동해야하는 객체를 표시하기위한 믹스 인 스타일 인터페이스.</target>
        </trans-unit>
        <trans-unit id="a82b2f3ea80435da0528df31d8de211f9f131bb9" translate="yes" xml:space="preserve">
          <source>A mixer can support synchronization of its lines. When one line in a synchronized group is started or stopped, the other lines in the group automatically start or stop simultaneously with the explicitly affected one.</source>
          <target state="translated">믹서는 회선 동기화를 지원할 수 있습니다. 동기화 된 그룹의 한 라인이 시작 또는 중지되면 그룹의 다른 라인은 자동으로 영향을받는 라인과 동시에 시작되거나 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="6605ccbd86386660b3cccfb6c44a5bbaf230733d" translate="yes" xml:space="preserve">
          <source>A mixer is an audio device with one or more lines.</source>
          <target state="translated">믹서는 하나 이상의 라인이있는 오디오 장치입니다.</target>
        </trans-unit>
        <trans-unit id="d9e59a59c28f466552e7a1512eef543e2311cb0a" translate="yes" xml:space="preserve">
          <source>A mixer is an audio device with one or more lines. It need not be designed for mixing audio signals. A mixer that actually mixes audio has multiple input (source) lines and at least one output (target) line. The former are often instances of classes that implement &lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;, and the latter, &lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;port&quot;&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/a&gt; objects, too, are either source lines or target lines. A mixer can accept prerecorded, loopable sound as input, by having some of its source lines be instances of objects that implement the &lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">믹서는 하나 이상의 라인이있는 오디오 장치입니다. 오디오 신호 믹싱 용으로 설계 할 필요는 없습니다. 실제로 오디오를 믹싱하는 믹서에는 여러 입력 (소스) 라인과 하나 이상의 출력 (대상) 라인이 있습니다. 전자는 종종 &lt;a href=&quot;sourcedataline&quot;&gt; &lt;code&gt;SourceDataLine&lt;/code&gt; &lt;/a&gt; 을 구현 하고 후자 인 &lt;a href=&quot;targetdataline&quot;&gt; &lt;code&gt;TargetDataLine&lt;/code&gt; &lt;/a&gt; 을 구현하는 클래스의 인스턴스입니다 . &lt;a href=&quot;port&quot;&gt; &lt;code&gt;Port&lt;/code&gt; &lt;/a&gt; 객체도 소스 라인 또는 대상 라인입니다. 믹서는 소스 라인 중 일부가 &lt;a href=&quot;clip&quot;&gt; &lt;code&gt;Clip&lt;/code&gt; &lt;/a&gt; 인터페이스 를 구현하는 객체의 인스턴스가되도록 미리 녹음 된 반복 가능한 사운드를 입력으로 받아 들일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f0a85bd03cce327d0a024b8ca3c5739ec1759ae7" translate="yes" xml:space="preserve">
          <source>A mixer is an audio device with one or more lines. It need not be designed for mixing audio signals. A mixer that actually mixes audio has multiple input (source) lines and at least one output (target) line. The former are often instances of classes that implement &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, and the latter, &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;port&quot;&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; objects, too, are either source lines or target lines. A mixer can accept prerecorded, loopable sound as input, by having some of its source lines be instances of objects that implement the &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; interface.</source>
          <target state="translated">믹서는 하나 이상의 라인이있는 오디오 장치입니다. 오디오 신호를 믹싱하도록 설계 될 필요는 없습니다. 실제로 오디오를 믹스하는 믹서에는 여러 입력 (소스) 라인과 하나 이상의 출력 (타겟) 라인이 있습니다. 전자는 종종 &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 을 구현하는 클래스의 인스턴스이고 후자는 &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 입니다. &lt;code&gt;&lt;a href=&quot;port&quot;&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 객체도 소스 라인 또는 대상 라인입니다. 믹서는 소스 라인 중 일부를 &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 인터페이스 를 구현하는 객체의 인스턴스로함으로써 미리 녹음 된 루프 가능한 사운드를 입력으로 받아 들일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eb3efede6328869ca7c41918f11095f6b2a95ea9" translate="yes" xml:space="preserve">
          <source>A mixin interface for an element that has a qualified name.</source>
          <target state="translated">규정 된 이름을 가진 요소의 믹스 인 인터페이스.</target>
        </trans-unit>
        <trans-unit id="940bc0118071492b342d59cad911ef90c1786c35" translate="yes" xml:space="preserve">
          <source>A mixin interface for an element that has type parameters.</source>
          <target state="translated">유형 매개 변수가있는 요소의 믹스 인 인터페이스.</target>
        </trans-unit>
        <trans-unit id="85bfe50b01099694ef5f3fdf2cd07cd87cc85364" translate="yes" xml:space="preserve">
          <source>A mnemonic must correspond to a single key on the keyboard and should be specified using one of the &lt;code&gt;VK_XXX&lt;/code&gt; keycodes defined in &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; or one of the extended keycodes obtained through &lt;code&gt;java.awt.event.KeyEvent.getExtendedKeyCodeForChar&lt;/code&gt;. Mnemonics are case-insensitive, therefore a key event with the corresponding keycode would cause the button to be activated whether or not the Shift modifier was pressed.</source>
          <target state="translated">니모닉은 키보드의 단일 키에 해당해야하며 &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; 에 정의 된 &lt;code&gt;VK_XXX&lt;/code&gt; 키 코드 중 하나 또는 &lt;code&gt;java.awt.event.KeyEvent.getExtendedKeyCodeForChar&lt;/code&gt; 를 통해 얻은 확장 키 코드 중 하나를 사용하여 지정해야합니다 . 니모닉은 대소 문자를 구분하지 않으므로 해당 키 코드가있는 키 이벤트로 인해 Shift 수정자를 눌렀는지 여부에 관계없이 버튼이 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="6fbe55459253ff7e43ccf4d93d0aac5b438e89c7" translate="yes" xml:space="preserve">
          <source>A mnemonic must correspond to a single key on the keyboard and should be specified using one of the &lt;code&gt;VK_XXX&lt;/code&gt; keycodes defined in &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt;. These codes and the wider array of codes for international keyboards may be obtained through &lt;code&gt;java.awt.event.KeyEvent.getExtendedKeyCodeForChar&lt;/code&gt;. Mnemonics are case-insensitive, therefore a key event with the corresponding keycode would cause the button to be activated whether or not the Shift modifier was pressed.</source>
          <target state="translated">니모닉은 키보드의 단일 키에 해당해야하며 &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; 에 정의 된 &lt;code&gt;VK_XXX&lt;/code&gt; 키 코드 중 하나를 사용하여 지정해야합니다 . 이러한 코드와 국제 키보드에 대한 더 넓은 코드 배열은 &lt;code&gt;java.awt.event.KeyEvent.getExtendedKeyCodeForChar&lt;/code&gt; 를 통해 얻을 수 있습니다 . 니모닉은 대소 문자를 구분하지 않으므로 해당 키 코드가있는 키 이벤트로 인해 Shift 수정자를 눌렀는지 여부에 관계없이 버튼이 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="dccf7abbdd783e10b0eaedc81b7d45650fa6829a" translate="yes" xml:space="preserve">
          <source>A model for a potentially unbounded sequence of object values.</source>
          <target state="translated">잠재적으로 제한되지 않은 개체 값 시퀀스에 대한 모델입니다.</target>
        </trans-unit>
        <trans-unit id="b9a0e61f9edac0df5cf8ebd8c21c30ffc057a602" translate="yes" xml:space="preserve">
          <source>A model for a potentially unbounded sequence of object values. This model is similar to &lt;code&gt;ListModel&lt;/code&gt; however there are some important differences:</source>
          <target state="translated">잠재적으로 제한되지 않은 개체 값 시퀀스에 대한 모델입니다. 이 모델은 &lt;code&gt;ListModel&lt;/code&gt; 과 유사 하지만 몇 가지 중요한 차이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef7797cc5b0a0ddbc8a93f2cab350d859a88a7bf" translate="yes" xml:space="preserve">
          <source>A model that supports at most one indexed selection.</source>
          <target state="translated">최대 하나의 인덱싱 된 선택을 지원하는 모델입니다.</target>
        </trans-unit>
        <trans-unit id="113198bff2c471d9a1340e1c7395aba0b81a05b8" translate="yes" xml:space="preserve">
          <source>A model that supports selecting a &lt;code&gt;Color&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Color&lt;/code&gt; 선택을 지원하는 모델입니다 .</target>
        </trans-unit>
        <trans-unit id="75a1381c14d2290171b492582cd78cc9f246be75" translate="yes" xml:space="preserve">
          <source>A moderately condensed width.</source>
          <target state="translated">적당히 압축 된 폭.</target>
        </trans-unit>
        <trans-unit id="8d188161e9d611c063510995c84aefe5b9b8bceb" translate="yes" xml:space="preserve">
          <source>A moderately extended width.</source>
          <target state="translated">적당히 확장 된 너비.</target>
        </trans-unit>
        <trans-unit id="97d801ad32671b3e691c89407615fb7c0e1225da" translate="yes" xml:space="preserve">
          <source>A moderately heavier weight than &lt;code&gt;WEIGHT_BOLD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WEIGHT_BOLD&lt;/code&gt; 보다 약간 더 무거운 무게 입니다.</target>
        </trans-unit>
        <trans-unit id="ec770c5cec376cec7cab568da145cc8cefb435ff" translate="yes" xml:space="preserve">
          <source>A moderately heavier weight than &lt;code&gt;WEIGHT_REGULAR&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WEIGHT_REGULAR&lt;/code&gt; 보다 약간 더 무거운 가중치 입니다 .</target>
        </trans-unit>
        <trans-unit id="a659fd009867c7b19b8a9492e01adae960c27290" translate="yes" xml:space="preserve">
          <source>A moderately lighter weight than &lt;code&gt;WEIGHT_BOLD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WEIGHT_BOLD&lt;/code&gt; 보다 약간 가벼운 무게 입니다.</target>
        </trans-unit>
        <trans-unit id="b00dd7f7c7c0de87dc4b914ed635255aa8bdd375" translate="yes" xml:space="preserve">
          <source>A modifier on a module dependence.</source>
          <target state="translated">모듈 종속성에 대한 수정 자입니다.</target>
        </trans-unit>
        <trans-unit id="1f66a47c471b55a1f2837bdd92e8d02f3fbcf0b9" translate="yes" xml:space="preserve">
          <source>A modifier on a module.</source>
          <target state="translated">모듈의 수정 자입니다.</target>
        </trans-unit>
        <trans-unit id="9c827a6d1160b76111dacfc9cf7d5c1b048cb4d3" translate="yes" xml:space="preserve">
          <source>A modifier on an exported package.</source>
          <target state="translated">내 보낸 패키지의 수정 자입니다.</target>
        </trans-unit>
        <trans-unit id="cd12fa667e8860dab8dcf4c8cace39116df85c96" translate="yes" xml:space="preserve">
          <source>A modifier on an open package.</source>
          <target state="translated">열린 패키지의 수정 자입니다.</target>
        </trans-unit>
        <trans-unit id="455aa858215590bd7ae451f50057a1eaef663612" translate="yes" xml:space="preserve">
          <source>A module &quot;reads&quot; two or more modules with the same name. This includes the case where a module &quot;reads&quot; another with the same name as itself.</source>
          <target state="translated">모듈은 동일한 이름을 가진 둘 이상의 모듈을 &quot;읽습니다&quot;. 여기에는 모듈이 자신과 동일한 이름을 가진 다른 모듈을 &quot;읽는&quot;경우가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="eb98ec38ed46c6c4948d6e5527a24116a4008805" translate="yes" xml:space="preserve">
          <source>A module &lt;code&gt;M&lt;/code&gt; declares that it &quot;&lt;code&gt;uses p.S&lt;/code&gt;&quot; or &quot;&lt;code&gt;provides p.S with ...&lt;/code&gt;&quot; but package &lt;code&gt;p&lt;/code&gt; is neither in module &lt;code&gt;M&lt;/code&gt; nor exported to &lt;code&gt;M&lt;/code&gt; by any module that &lt;code&gt;M&lt;/code&gt; reads.</source>
          <target state="translated">모듈 &lt;code&gt;M&lt;/code&gt; 은 &quot; &lt;code&gt;uses p.S&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;provides p.S with ...&lt;/code&gt; &quot;를 제공 한다고 선언 하지만 패키지 &lt;code&gt;p&lt;/code&gt; 는 모듈 &lt;code&gt;M&lt;/code&gt; 에 없거나 &lt;code&gt;M&lt;/code&gt; 이 읽는 모듈에 의해 &lt;code&gt;M&lt;/code&gt; 으로 내보내지지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="662c4f200c7a7a0588b4578c360940ca674b26a0" translate="yes" xml:space="preserve">
          <source>A module M declares that it 'uses p.S' or 'provides p.S with ...' but package p is neither in module M nor exported to M by any module that M &quot;reads&quot;.</source>
          <target state="translated">모듈 M은 'ps를 사용'하거나 'pS에 ...를 제공'한다고 선언하지만 패키지 p는 모듈 M에 없으며 M이 &quot;읽는&quot;모듈에 의해 M으로 내보내지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7051931822f315c97f2452ced1be59b68e994add" translate="yes" xml:space="preserve">
          <source>A module descriptor describes a &lt;em&gt;normal&lt;/em&gt;, open, or automatic module. &lt;em&gt;Normal&lt;/em&gt; modules and open modules describe their &lt;a href=&quot;#requires()&quot;&gt;&lt;code&gt;dependences&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#exports()&quot;&gt;&lt;code&gt;exported-packages&lt;/code&gt;&lt;/a&gt;, the services that they &lt;a href=&quot;#uses()&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#provides()&quot;&gt;&lt;code&gt;provide&lt;/code&gt;&lt;/a&gt;, and other components. &lt;em&gt;Normal&lt;/em&gt; modules may &lt;a href=&quot;#opens()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; specific packages. The module descriptor for an open modules does not declare any open packages (its &lt;code&gt;opens&lt;/code&gt; method returns an empty set) but when instantiated in the Java virtual machine then it is treated as if all packages are open. The module descriptor for an automatic module does not declare any dependences (except for the mandatory dependency on &lt;code&gt;
 java.base&lt;/code&gt;), and does not declare any exported or open packages. Automatic module receive special treatment during resolution so that they read all other modules in the configuration. When an automatic module is instantiated in the Java virtual machine then it reads every unnamed module and is treated as if all packages are exported and open.</source>
          <target state="translated">모듈 설명자는 &lt;em&gt;일반&lt;/em&gt; , 개방형 또는 자동 모듈을 설명합니다. &lt;em&gt;일반&lt;/em&gt; 모듈과 개방형 모듈은 &lt;a href=&quot;#requires()&quot;&gt; &lt;code&gt;dependences&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#exports()&quot;&gt; &lt;code&gt;exported-packages&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#uses()&quot;&gt; &lt;code&gt;use&lt;/code&gt; &lt;/a&gt; 하거나 &lt;a href=&quot;#provides()&quot;&gt; &lt;code&gt;provide&lt;/code&gt; &lt;/a&gt; 하는 서비스 및 기타 구성 요소를 설명합니다. &lt;em&gt;일반&lt;/em&gt; 모듈은 특정 패키지를 &lt;a href=&quot;#opens()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 수 있습니다 . 열린 모듈에 대한 모듈 설명자는 열린 패키지를 선언하지 않지만 ( &lt;code&gt;opens&lt;/code&gt; 메소드는 빈 세트를 리턴 함) Java 가상 머신에서 인스턴스화되면 모든 패키지가 열린 것처럼 처리됩니다. 자동 모듈에 대한 모듈 설명자는 종속성을 선언하지 않습니다 ( &lt;code&gt; java.base&lt;/code&gt; 에 대한 필수 종속성 제외)), 내보내거나 열린 패키지를 선언하지 않습니다. 자동 모듈은 구성의 다른 모든 모듈을 읽을 수 있도록 해결 중에 특별한 처리를받습니다. 자동 모듈이 JVM (Java Virtual Machine)에서 인스턴스화되면 이름이 지정되지 않은 모든 모듈을 읽고 모든 패키지를 내보내고 열린 것처럼 처리합니다.</target>
        </trans-unit>
        <trans-unit id="cdde48874149ac1e9bbdbff00202a865dc0e60a9" translate="yes" xml:space="preserve">
          <source>A module descriptor describes a &lt;em&gt;normal&lt;/em&gt;, open, or automatic module. &lt;em&gt;Normal&lt;/em&gt; modules and open modules describe their &lt;a href=&quot;#requires()&quot;&gt;dependences&lt;/a&gt;, &lt;a href=&quot;#exports()&quot;&gt;&lt;code&gt;exported-packages&lt;/code&gt;&lt;/a&gt;, the services that they &lt;a href=&quot;#uses()&quot;&gt;use&lt;/a&gt; or &lt;a href=&quot;#provides()&quot;&gt;provide&lt;/a&gt;, and other components. &lt;em&gt;Normal&lt;/em&gt; modules may &lt;a href=&quot;#opens()&quot;&gt;open&lt;/a&gt; specific packages. The module descriptor for an open module does not declare any open packages (its &lt;code&gt;opens&lt;/code&gt; method returns an empty set) but when instantiated in the Java virtual machine then it is treated as if all packages are open. The module descriptor for an automatic module does not declare any dependences (except for the mandatory dependency on &lt;code&gt;
 java.base&lt;/code&gt;), and does not declare any exported or open packages. Automatic modules receive special treatment during resolution so that they read all other modules in the configuration. When an automatic module is instantiated in the Java virtual machine then it reads every unnamed module and is treated as if all packages are exported and open.</source>
          <target state="translated">모듈 설명자는 &lt;em&gt;일반&lt;/em&gt; , 개방형 또는 자동 모듈을 설명합니다. &lt;em&gt;일반&lt;/em&gt; 모듈과 개방형 모듈은 &lt;a href=&quot;#requires()&quot;&gt;종속성&lt;/a&gt; , &lt;a href=&quot;#exports()&quot;&gt; &lt;code&gt;exported-packages&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#uses()&quot;&gt;사용&lt;/a&gt; 하거나 &lt;a href=&quot;#provides()&quot;&gt;제공&lt;/a&gt; 하는 서비스 및 기타 구성 요소를 설명합니다. &lt;em&gt;일반&lt;/em&gt; 모듈은 특정 패키지를 &lt;a href=&quot;#opens()&quot;&gt;열&lt;/a&gt; 수 있습니다 . 열린 모듈에 대한 모듈 설명자는 열린 패키지를 선언하지 않지만 ( &lt;code&gt;opens&lt;/code&gt; 메소드가 빈 세트를 리턴 함) Java 가상 머신에서 인스턴스화되면 모든 패키지가 열린 것처럼 처리됩니다. 자동 모듈에 대한 모듈 설명자는 종속성을 선언하지 않습니다 ( &lt;code&gt; java.base&lt;/code&gt; 에 대한 필수 종속성 제외)), 내보내거나 열린 패키지를 선언하지 않습니다. 자동 모듈은 구성의 다른 모든 모듈을 읽을 수 있도록 해결 과정에서 특별한 처리를받습니다. 자동 모듈이 JVM (Java Virtual Machine)에서 인스턴스화되면 이름이 지정되지 않은 모든 모듈을 읽고 모든 패키지를 내보내고 열린 것처럼 처리합니다.</target>
        </trans-unit>
        <trans-unit id="39484186c8c0c1ae7050c0af3a7d39c72c80caeb" translate="yes" xml:space="preserve">
          <source>A module descriptor describes a named module and defines methods to obtain each of its components. The module descriptor for a named module in the Java virtual machine is obtained by invoking the &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../module#getDescriptor()&quot;&gt;&lt;code&gt;getDescriptor&lt;/code&gt;&lt;/a&gt; method. Module descriptors can also be created using the &lt;a href=&quot;moduledescriptor.builder&quot;&gt;&lt;code&gt;ModuleDescriptor.Builder&lt;/code&gt;&lt;/a&gt; class or by reading the binary form of a module declaration (&lt;code&gt;module-info.class&lt;/code&gt;) using the &lt;a href=&quot;#read(java.io.InputStream,java.util.function.Supplier)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; methods defined here.</source>
          <target state="translated">모듈 설명자는 명명 된 모듈을 설명하고 각 구성 요소를 가져 오는 메서드를 정의합니다. Java 가상 머신에서 명명 된 모듈에 대한 모듈 설명자는 &lt;a href=&quot;../module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;../module#getDescriptor()&quot;&gt; &lt;code&gt;getDescriptor&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 얻습니다 . 모듈 설명자는 &lt;a href=&quot;moduledescriptor.builder&quot;&gt; &lt;code&gt;ModuleDescriptor.Builder&lt;/code&gt; &lt;/a&gt; 클래스를 사용하거나 여기에 정의 된 &lt;a href=&quot;#read(java.io.InputStream,java.util.function.Supplier)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 모듈 선언 ( &lt;code&gt;module-info.class&lt;/code&gt; ) 의 이진 형식을 읽어 생성 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eaabbb2d3e77e23acd558210c32a5e147a902783" translate="yes" xml:space="preserve">
          <source>A module descriptor.</source>
          <target state="translated">모듈 설명자.</target>
        </trans-unit>
        <trans-unit id="ec86bbca16256870199e11664f4b4e20c1e7c283" translate="yes" xml:space="preserve">
          <source>A module in a graph of &lt;em&gt;resolved modules&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;해결 된 모듈&lt;/em&gt; 그래프의 &lt;em&gt;모듈&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b2786a1ebd9e5f7ac16e073b91113653532f96ce" translate="yes" xml:space="preserve">
          <source>A module in the target VM.</source>
          <target state="translated">대상 VM의 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="294856b1fabfeb9684fab1cc4cea4d5c8337917a" translate="yes" xml:space="preserve">
          <source>A module is mapped to a class loader that already has a module of the same name defined to it.</source>
          <target state="translated">모듈은 동일한 이름의 모듈이 이미 정의되어있는 클래스 로더에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="ea95f763a71a66296df0f219de84921cb321ce7c" translate="yes" xml:space="preserve">
          <source>A module is mapped to a class loader that has already defined types in any of the packages in the module.</source>
          <target state="translated">모듈은 모듈의 패키지에 이미 정의 된 유형이있는 클래스 로더에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="9e020352fda5c7c64704bec97a647670222fe370" translate="yes" xml:space="preserve">
          <source>A module reader is intended for cases where access to the resources in a module is required, regardless of whether the module has been loaded. A framework that scans a collection of packaged modules on the file system, for example, may use a module reader to access a specific resource in each module. A module reader is also intended to be used by &lt;code&gt;ClassLoader&lt;/code&gt; implementations that load classes and resources from modules.</source>
          <target state="translated">모듈 판독기는 모듈이로드되었는지 여부에 관계없이 모듈의 리소스에 액세스해야하는 경우를위한 것입니다. 예를 들어 파일 시스템에서 패키지 된 모듈 모음을 스캔하는 프레임 워크는 모듈 판독기를 사용하여 각 모듈의 특정 리소스에 액세스 할 수 있습니다. 모듈 판독기는 모듈 에서 클래스와 리소스를로드 하는 &lt;code&gt;ClassLoader&lt;/code&gt; 구현 에서도 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="df023938795e281f4835897184ca0e8813ed88d3" translate="yes" xml:space="preserve">
          <source>A module reader is not required to be asynchronously closeable. If a thread is reading a resource and another thread invokes the close method, then the second thread may block until the read operation is complete.</source>
          <target state="translated">모듈 판독기는 비동기식으로 닫을 필요가 없습니다. 스레드가 리소스를 읽고 있고 다른 스레드가 close 메서드를 호출하면 읽기 작업이 완료 될 때까지 두 번째 스레드가 차단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3224c079eb7e378827cebbe2bb247fe6be8ad974" translate="yes" xml:space="preserve">
          <source>A module reads two or more modules with the same name. This includes the case where a module reads another with the same name as itself.</source>
          <target state="translated">모듈은 동일한 이름을 가진 두 개 이상의 모듈을 읽습니다. 여기에는 모듈이 자신과 동일한 이름을 가진 다른 모듈을 읽는 경우가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="22abf316c218170b96c9f81b65a87289f64f9f26" translate="yes" xml:space="preserve">
          <source>A module reference is a concrete implementation of this class that implements the abstract methods defined by this class. It contains the module's descriptor and its location, if known. It also has the ability to create a &lt;a href=&quot;modulereader&quot;&gt;&lt;code&gt;ModuleReader&lt;/code&gt;&lt;/a&gt; in order to access the module's content, which may be inside the Java run-time system itself or in an artifact such as a modular JAR file.</source>
          <target state="translated">모듈 참조는이 클래스에서 정의한 추상 메서드를 구현하는이 클래스의 구체적인 구현입니다. 모듈의 설명자와 해당 위치 (알려진 경우)가 포함됩니다. 또한 Java 런타임 시스템 자체 또는 모듈 식 JAR 파일과 같은 아티팩트에있을 수있는 모듈의 콘텐츠에 액세스하기 위해 &lt;a href=&quot;modulereader&quot;&gt; &lt;code&gt;ModuleReader&lt;/code&gt; &lt;/a&gt; 를 만드는 기능도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b9879bf6c336646f6375f771243418c15804cfe2" translate="yes" xml:space="preserve">
          <source>A module's version string.</source>
          <target state="translated">모듈의 버전 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="e49db2cd47d76f570b602b8aeeac431ff85df08f" translate="yes" xml:space="preserve">
          <source>A module.</source>
          <target state="translated">모듈.</target>
        </trans-unit>
        <trans-unit id="42953139b3b36dae3cc66096b2aec9e05777e71d" translate="yes" xml:space="preserve">
          <source>A month is represented by an integer from 0 to 11; 0 is January, 1 is February, and so forth; thus 11 is December.</source>
          <target state="translated">월은 0에서 11까지의 정수로 표시됩니다. 0은 1 월이고 1은 2 월 등입니다. 따라서 11은 12 월입니다.</target>
        </trans-unit>
        <trans-unit id="ab22d20d25b582a956df404a2854dfd37a08a7c3" translate="yes" xml:space="preserve">
          <source>A month-day in the ISO-8601 calendar system, such as &lt;code&gt;--12-03&lt;/code&gt;.</source>
          <target state="translated">등은 ISO-8601 달력 시스템에있는 월 - 일, &lt;code&gt;--12-03&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e911868de06210df74694f89f02b4486402c1f21" translate="yes" xml:space="preserve">
          <source>A month-day of February 29th will be adjusted to February 28th in the resulting date if the year is not a leap year.</source>
          <target state="translated">연도가 윤년이 아닌 경우 2 월 29 일의 월-일은 결과 날짜에서 2 월 28 일로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="544d028170c4cc8966d5aa5df1674bb3bd930fe7" translate="yes" xml:space="preserve">
          <source>A month-of-year, such as 'July'.</source>
          <target state="translated">'7 월'과 같은 한 달의 월입니다.</target>
        </trans-unit>
        <trans-unit id="72ef0e6fc016a03a5df04c55ed4903f14c08ffee" translate="yes" xml:space="preserve">
          <source>A more complete and consistent set of LIFO stack operations is provided by the &lt;a href=&quot;deque&quot;&gt;&lt;code&gt;Deque&lt;/code&gt;&lt;/a&gt; interface and its implementations, which should be used in preference to this class. For example:</source>
          <target state="translated">보다 완벽하고 일관된 LIFO 스택 작업 세트는 &lt;a href=&quot;deque&quot;&gt; &lt;code&gt;Deque&lt;/code&gt; &lt;/a&gt; 인터페이스 및 해당 구현에 의해 제공 되며이 클래스보다 우선적으로 사용해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="779ab2c19e9e20055e3d69fab40e1eae13ac1fbe" translate="yes" xml:space="preserve">
          <source>A more detailed description of the set of option buttons that will appear at the bottom of the dialog box. The usual value for the options parameter is an array of &lt;code&gt;String&lt;/code&gt;s. But the parameter type is an array of &lt;code&gt;Objects&lt;/code&gt;. A button is created for each object depending on its type:</source>
          <target state="translated">대화 상자 아래쪽에 표시되는 옵션 단추 집합에 대한 자세한 설명입니다. options 매개 변수의 일반적인 값은 &lt;code&gt;String&lt;/code&gt; 배열입니다 . 그러나 매개 변수 유형은 &lt;code&gt;Objects&lt;/code&gt; 의 배열입니다 . 유형에 따라 각 객체에 대해 버튼이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="a8ef92902ef52fc9390a15bc63628b67c671c8aa" translate="yes" xml:space="preserve">
          <source>A more informative set of completions would include the number of each prime:</source>
          <target state="translated">보다 유익한 완성 세트에는 각 소수의 숫자가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="8fba423df016bcca01d528c49a66aa0490f8d71b" translate="yes" xml:space="preserve">
          <source>A more interesting case can be illustrated by the following example in which a method in type &lt;code&gt;A&lt;/code&gt; does not override a like-named method in type &lt;code&gt;B&lt;/code&gt;:</source>
          <target state="translated">보다 흥미로운 경우는 유형 &lt;code&gt;A&lt;/code&gt; 의 메소드가 유형 &lt;code&gt;B&lt;/code&gt; 의 유사한 이름의 메소드를 대체하지 않는 다음 예제로 설명 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e9c58067d77bf7244be501b1ebc8017e9dfb5d7a" translate="yes" xml:space="preserve">
          <source>A more reliable way to determine which &lt;code&gt;ImageReader&lt;/code&gt;s are likely to be able to parse a particular data stream is provided by the &lt;code&gt;canDecodeInput&lt;/code&gt; method. This methods allows the service provider to inspect the actual stream contents.</source>
          <target state="translated">특정 데이터 스트림을 구문 분석 할 수 있는 &lt;code&gt;ImageReader&lt;/code&gt; 를 판별하는보다 안정적인 방법 은 &lt;code&gt;canDecodeInput&lt;/code&gt; 메소드에 의해 제공됩니다 . 이 방법을 통해 서비스 제공 업체는 실제 스트림 내용을 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f2e502d946565cf8a0faf1431c1e45de5f7293b" translate="yes" xml:space="preserve">
          <source>A more reliable way to determine which &lt;code&gt;ImageWriter&lt;/code&gt;s are likely to be able to parse a particular data stream is provided by the &lt;code&gt;canEncodeImage&lt;/code&gt; method. This methods allows the service provider to inspect the actual image contents.</source>
          <target state="translated">특정 데이터 스트림을 구문 분석 할 수 있는 &lt;code&gt;ImageWriter&lt;/code&gt; 를 판별하는보다 안정적인 방법 은 &lt;code&gt;canEncodeImage&lt;/code&gt; 메소드로 제공됩니다 . 이 방법을 통해 서비스 제공 업체는 실제 이미지 내용을 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e98fad3c4bc26860fd5b43356494929e7f5e13c6" translate="yes" xml:space="preserve">
          <source>A multicast channel may join several multicast groups, including the same group on more than one interface. An implementation may impose a limit on the number of groups that may be joined at the same time.</source>
          <target state="translated">멀티 캐스트 채널은 둘 이상의 인터페이스에서 동일한 그룹을 포함하여 여러 멀티 캐스트 그룹에 참여할 수 있습니다. 구현시 동시에 참여할 수있는 그룹 수에 제한이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc6c2bf87ac13f1021feb64a454cd4052af2d2c4" translate="yes" xml:space="preserve">
          <source>A multicast group is specified by a class D IP address and by a standard UDP port number. Class D IP addresses are in the range &lt;code&gt;224.0.0.0&lt;/code&gt; to &lt;code&gt;239.255.255.255&lt;/code&gt;, inclusive. The address 224.0.0.0 is reserved and should not be used.</source>
          <target state="translated">멀티 캐스트 그룹은 클래스 D IP 주소와 표준 UDP 포트 번호로 지정됩니다. 클래스 D IP 주소는 &lt;code&gt;224.0.0.0&lt;/code&gt; ~ &lt;code&gt;239.255.255.255&lt;/code&gt; 범위에 있습니다. 224.0.0.0 주소는 예약되어 있으므로 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="7343f0136a235add22e5d1a4a1f7087a79e0cf03" translate="yes" xml:space="preserve">
          <source>A multicast group membership is valid upon creation and remains valid until the membership is dropped by invoking the &lt;a href=&quot;#drop()&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method, or the channel is closed.</source>
          <target state="translated">멀티 캐스트 그룹 멤버십은 생성시 유효하며 &lt;a href=&quot;#drop()&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 멤버십이 삭제 되거나 채널이 닫힐 때까지 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="2c4338d75e8f3f9d14e959f365f91cefea68d6d9" translate="yes" xml:space="preserve">
          <source>A multicast group membership is valid upon creation and remains valid until the membership is dropped by invoking the &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method, or the channel is closed.</source>
          <target state="translated">멀티 캐스트 그룹 멤버쉽은 작성시 유효하며 &lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 멤버쉽이 삭제 되거나 채널이 닫힐 때까지 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="1fee222616db716259fa4af6ce03b2c2360c34f2" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ButtonUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ButtonUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="3ef1780e60881228d13a1f01f6990b531840ad92" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ColorChooserUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ColorChooserUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="2aae38e31e2bae50f1e674f7a6d926d88f80a391" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ComboBoxUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ComboBoxUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="01a6971639ccef86d18603a068ca7d3d55340502" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;DesktopIconUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;DesktopIconUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="21718f844feee3eb6c779b47a33192a69e4d17ab" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;DesktopPaneUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;DesktopPaneUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="02ce2c4b7cbbb3e576680056f6bf7f9bba8c7b67" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;FileChooserUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;FileChooserUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="92e8808c850534bcc256bdf71547438f2e3c5e37" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;InternalFrameUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;InternalFrameUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="1a23d3908c1bae315b127e3c02ebbbc9176015f2" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;LabelUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;LabelUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="f6b9f46db8f1ee3fd4cbca7332657eb67f3fd527" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ListUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ListUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="938864c832b86e3cd3303e98afce5a557ea23104" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;MenuBarUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;MenuBarUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="3199bc673bd3ddfbe197155f083fcc08aaaf707e" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;MenuItemUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;MenuItemUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="c7ac51351c67842db3297bcfdf74d61cff4b640b" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;OptionPaneUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;OptionPaneUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="e09a77aff5096fac207ff03a8298c2fa6ccc41da" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;PanelUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;PanelUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="1284e1a2ecb7cb1789a48aaf6494e05832de5b81" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;PopupMenuUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;PopupMenuUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="3faad1637e96e180b3c281ff8796900fa6df2a1e" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ProgressBarUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ProgressBarUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="a8574221e5bf68d386033fc0c0140d3870d96272" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;RootPaneUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;RootPaneUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="3261bde38d3051181064931365782b9ef0d32b94" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ScrollBarUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ScrollBarUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="b6b5b98fa65bbe03d183f8198e2431f166f4cb15" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ScrollPaneUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ScrollPaneUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="e975ff5a1489fa5104bd8b75478a94157f6b42af" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;SeparatorUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SeparatorUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="273c978a0929e4b64f114b569f3c84dab7265c81" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;SliderUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SliderUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="6fd5d419bb486ebb48d207651fac3a57a9aa0269" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;SpinnerUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SpinnerUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="4eea0ca608e5c590b325168309b6434c00f0d638" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;SplitPaneUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SplitPaneUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="fb3dbccb3889bc7b8609d61092a161c42ee6d4d0" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;TabbedPaneUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;TabbedPaneUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="bf7bc019760d3c3d87b0573b76f11a09b3a51ca9" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;TableHeaderUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;TableHeaderUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="6fb9b208b295da65edcf6993e4ff79caeabd74d7" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;TableUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;TableUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="95e17c75b78fee341b72027498c671ee6db26abb" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;TextUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;TextUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="bedbb43564525fe5b2692e616e5f6473babec282" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ToolBarUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ToolBarUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="6deb990b9e65562640acd50862c844cb2701aac1" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ToolTipUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ToolTipUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="4df940effda0bc48381874736c437b749bcb0807" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;TreeUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;TreeUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="2d39954726b86f4bef02a2bf7eb406affc785111" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ViewportUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ViewportUI&lt;/code&gt; 결합에 사용되는 다중 UI 입니다.</target>
        </trans-unit>
        <trans-unit id="bfa6c5aa9794d343bdab40a369745170ecfa95c9" translate="yes" xml:space="preserve">
          <source>A multiplexing look and feel that allows more than one UI to be associated with a component at the same time.</source>
          <target state="translated">둘 이상의 UI를 구성 요소와 동시에 연결할 수있는 멀티플렉싱 모양과 느낌입니다.</target>
        </trans-unit>
        <trans-unit id="3c1e5f419c26febccc0ffb1aca07fd601e9a17cf" translate="yes" xml:space="preserve">
          <source>A multiplexing look and feel that allows more than one UI to be associated with a component at the same time. The primary look and feel is called the &lt;em&gt;default&lt;/em&gt; look and feel, and the other look and feels are called &lt;em&gt;auxiliary&lt;/em&gt;.</source>
          <target state="translated">둘 이상의 UI를 구성 요소와 동시에 연결할 수있는 멀티플렉싱 모양과 느낌입니다. 차 모양과 느낌은 호출 &lt;em&gt;기본&lt;/em&gt; 모양과 느낌, 다른 모양을하고 Feel로 호출되는 &lt;em&gt;보조&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a8f6c2efcaf967fd17cecf4f42e5961f5cdde54a" translate="yes" xml:space="preserve">
          <source>A multiplexor of &lt;a href=&quot;selectablechannel&quot;&gt;&lt;code&gt;SelectableChannel&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;selectablechannel&quot;&gt; &lt;code&gt;SelectableChannel&lt;/code&gt; &lt;/a&gt; 객체 의 멀티플렉서</target>
        </trans-unit>
        <trans-unit id="1495361d783dd2a9d043b0f1ccc945ff6d84551d" translate="yes" xml:space="preserve">
          <source>A multiplexor of selectable channels</source>
          <target state="translated">선택 가능한 채널의 멀티플렉서</target>
        </trans-unit>
        <trans-unit id="090ea028eeaac9046189bf41c551c02eab6607a3" translate="yes" xml:space="preserve">
          <source>A mutable builder class that can create an immutable &lt;code&gt;JarSigner&lt;/code&gt; from various signing-related parameters.</source>
          <target state="translated">다양한 서명 관련 매개 변수에서 변경 불가능한 &lt;code&gt;JarSigner&lt;/code&gt; 를 작성할 수있는 변경 가능한 빌더 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="555863f097a94438e284e109cba2dc49bb401875" translate="yes" xml:space="preserve">
          <source>A mutable builder for a &lt;code&gt;DoubleStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DoubleStream&lt;/code&gt; 의 가변 빌더입니다 .</target>
        </trans-unit>
        <trans-unit id="90417ba4d57dcf29afd7fec868b8fdb146ad4c9b" translate="yes" xml:space="preserve">
          <source>A mutable builder for a &lt;code&gt;LongStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LongStream&lt;/code&gt; 의 가변 빌더입니다 .</target>
        </trans-unit>
        <trans-unit id="044e204fc4ab1c02d5ea7c7f7994ed6f2a93ca7d" translate="yes" xml:space="preserve">
          <source>A mutable builder for a &lt;code&gt;Stream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Stream&lt;/code&gt; 의 변경 가능한 빌더입니다 .</target>
        </trans-unit>
        <trans-unit id="a93cbe7058fafefe2e6c3715c295688f4da1f0bc" translate="yes" xml:space="preserve">
          <source>A mutable builder for a &lt;code&gt;Stream&lt;/code&gt;. This allows the creation of a &lt;code&gt;Stream&lt;/code&gt; by generating elements individually and adding them to the &lt;code&gt;Builder&lt;/code&gt; (without the copying overhead that comes from using an &lt;code&gt;ArrayList&lt;/code&gt; as a temporary buffer.)</source>
          <target state="translated">&lt;code&gt;Stream&lt;/code&gt; 의 변경 가능한 빌더입니다 . 이를 통해 요소를 개별적으로 생성하고 &lt;code&gt;Builder&lt;/code&gt; 추가 하여 &lt;code&gt;Stream&lt;/code&gt; 을 작성할 수 있습니다 ( &lt;code&gt;ArrayList&lt;/code&gt; 를 임시 버퍼로 사용하여 발생하는 복사 오버 헤드없이 ).</target>
        </trans-unit>
        <trans-unit id="18ca1533c6784699fe41abab6fed9f7491312a39" translate="yes" xml:space="preserve">
          <source>A mutable builder for an &lt;code&gt;IntStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IntStream&lt;/code&gt; 의 가변 빌더입니다 .</target>
        </trans-unit>
        <trans-unit id="ecc126b3174f7ae048b22adc473a9269aec45ddf" translate="yes" xml:space="preserve">
          <source>A mutable sequence of characters.</source>
          <target state="translated">변경 가능한 문자 시퀀스</target>
        </trans-unit>
        <trans-unit id="114a5f53e63078efc11af25d64ad64ab43e20f20" translate="yes" xml:space="preserve">
          <source>A mutable sequence of characters. This class provides an API compatible with &lt;code&gt;StringBuffer&lt;/code&gt;, but with no guarantee of synchronization. This class is designed for use as a drop-in replacement for &lt;code&gt;StringBuffer&lt;/code&gt; in places where the string buffer was being used by a single thread (as is generally the case). Where possible, it is recommended that this class be used in preference to &lt;code&gt;StringBuffer&lt;/code&gt; as it will be faster under most implementations.</source>
          <target state="translated">변경 가능한 문자 시퀀스 이 클래스는 &lt;code&gt;StringBuffer&lt;/code&gt; 와 호환되는 API를 제공 하지만 동기화를 보장하지는 않습니다. 이 클래스는 문자열 버퍼가 단일 스레드에 의해 사용되는 장소에서 &lt;code&gt;StringBuffer&lt;/code&gt; 의 드롭 인 대체로 사용하도록 설계되었습니다 (일반적인 경우). 가능한 경우,이 클래스 는 대부분의 구현에서 더 빠를 것이기 때문에 &lt;code&gt;StringBuffer&lt;/code&gt; 에 우선하여 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="4bf8a240b81c2f14cdad8d3ef15b686060025c38" translate="yes" xml:space="preserve">
          <source>A mutable version of &lt;code&gt;ComboBoxModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ComboBoxModel&lt;/code&gt; 의 변경 가능한 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="72b546ec375c20860b8c2b5ba62a0a6c41c735cf" translate="yes" xml:space="preserve">
          <source>A named mapping between characters</source>
          <target state="translated">문자 사이의 명명 된 매핑</target>
        </trans-unit>
        <trans-unit id="2ab48f96a53d76bf9fe717aef2494bcc3996df7b" translate="yes" xml:space="preserve">
          <source>A named mapping between characters and bytes</source>
          <target state="translated">문자와 바이트 간의 명명 된 매핑</target>
        </trans-unit>
        <trans-unit id="500b84de38af55c5c034588505665f0cccfa6d4e" translate="yes" xml:space="preserve">
          <source>A named mapping between sequences of sixteen-bit Unicode &lt;a href=&quot;../../lang/character#unicode&quot;&gt;code units&lt;/a&gt; and sequences of bytes.</source>
          <target state="translated">16 비트 유니 &lt;a href=&quot;../../lang/character#unicode&quot;&gt;코드 코드 단위&lt;/a&gt; 시퀀스와 바이트 시퀀스 사이의 명명 된 매핑 입니다.</target>
        </trans-unit>
        <trans-unit id="8a8533ff28a7e7235565a6d9d987a050c6c50423" translate="yes" xml:space="preserve">
          <source>A named mapping between sequences of sixteen-bit Unicode &lt;a href=&quot;../../lang/character#unicode&quot;&gt;code units&lt;/a&gt; and sequences of bytes. This class defines methods for creating decoders and encoders and for retrieving the various names associated with a charset. Instances of this class are immutable.</source>
          <target state="translated">16 비트 유니 &lt;a href=&quot;../../lang/character#unicode&quot;&gt;코드 코드 단위&lt;/a&gt; 시퀀스와 바이트 시퀀스 사이의 명명 된 매핑 입니다. 이 클래스는 디코더와 인코더를 생성하고 문자셋과 관련된 다양한 이름을 검색하기위한 메소드를 정의합니다. 이 클래스의 인스턴스는 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="458cd2c85e7533ea872f2e22726ff6877b1309a4" translate="yes" xml:space="preserve">
          <source>A named type declared within a construct other than a type.</source>
          <target state="translated">형식 이외의 구문 내에서 선언 된 명명 된 형식</target>
        </trans-unit>
        <trans-unit id="c894148c721f2b7b2d26acf446229790a75dd927" translate="yes" xml:space="preserve">
          <source>A namespace declaration is written. If the namespace is a default namespace declaration (isDefault is true) then xmlns=&quot;$namespaceURI&quot; is written and the prefix is optional. If isDefault is false, the prefix must be declared and the writer must prepend xmlns to the prefix and write out a standard prefix declaration.</source>
          <target state="translated">네임 스페이스 선언이 작성됩니다. 네임 스페이스가 기본 네임 스페이스 선언 (isDefault가 true)이면 xmlns = &quot;$ namespaceURI&quot;가 작성되고 접두사는 선택 사항입니다. isDefault가 false 인 경우 접두사를 선언해야하며 작성자는 접두사 앞에 xmlns를 추가하고 표준 접두사 선언을 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="1f79de9c3b1e951c7064e57fbe3bb9c1a04d7fa1" translate="yes" xml:space="preserve">
          <source>A natural line that contains only white space characters is considered blank and is ignored. A comment line has an ASCII &lt;code&gt;'#'&lt;/code&gt; or &lt;code&gt;'!'&lt;/code&gt; as its first non-white space character; comment lines are also ignored and do not encode key-element information. In addition to line terminators, this format considers the characters space (&lt;code&gt;' '&lt;/code&gt;, &lt;code&gt;'\u0020'&lt;/code&gt;), tab (&lt;code&gt;'\t'&lt;/code&gt;, &lt;code&gt;'\u0009'&lt;/code&gt;), and form feed (&lt;code&gt;'\f'&lt;/code&gt;, &lt;code&gt;'\u000C'&lt;/code&gt;) to be white space.</source>
          <target state="translated">공백 문자 만 포함 된 자연 줄은 공백으로 간주되어 무시됩니다. 주석 줄에는 ASCII &lt;code&gt;'#'&lt;/code&gt; 또는 &lt;code&gt;'!'&lt;/code&gt; 가 있습니다.공백이 아닌 첫 번째 문자로서; 주석 행도 무시되며 키 요소 정보를 인코딩하지 않습니다. 줄 종결 자 &lt;code&gt;'\u0020'&lt;/code&gt; 형식은 문자 공간 ( &lt;code&gt;' '&lt;/code&gt; , '\ u0020' ), 탭 ( &lt;code&gt;'\t'&lt;/code&gt; , &lt;code&gt;'\u0009'&lt;/code&gt; ) 및 양식 피드 ( &lt;code&gt;'\f'&lt;/code&gt; , &lt;code&gt;'\u000C'&lt;/code&gt; )를 공백이 되십시오.</target>
        </trans-unit>
        <trans-unit id="f5b4f6afaac43c87c02b9b20cd494e01bc27a526" translate="yes" xml:space="preserve">
          <source>A negated constraint. The returned object will be serialized as an instance of the non-public class  javax.management.NotQueryExp.</source>
          <target state="translated">부정 된 제약. 리턴 된 오브젝트는 비 공용 클래스 javax.management.NotQueryExp의 인스턴스로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="6e93eae5e5563dcda094f85cda52babcb326d950" translate="yes" xml:space="preserve">
          <source>A negated constraint. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.NotQueryExp&quot;&gt; javax.management.NotQueryExp&lt;/a&gt;.</source>
          <target state="translated">부정 된 제약. 반환 된 객체는 비공개 클래스 &lt;a href=&quot;../../serialized-form#javax.management.NotQueryExp&quot;&gt;javax.management.NotQueryExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="34a27feeef7f8a3d7faa3b3f34355c7491ea4dbb" translate="yes" xml:space="preserve">
          <source>A negated constraint. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.NotQueryExp&quot;&gt; javax.management.NotQueryExp&lt;/a&gt;.</source>
          <target state="translated">부정 된 제약. 반환 된 객체는 비공개 클래스 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.NotQueryExp&quot;&gt;javax.management.NotQueryExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="79bb08b42e8bcc663e05f72c5017484d7a3c8843" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this Name is less than, equal to, or greater than the given obj.</source>
          <target state="translated">이 Name이 지정된 obj보다 작은 경우는 부의 정수, 0 또는 양의 정수</target>
        </trans-unit>
        <trans-unit id="6eced5b2e4d81d3b26a2627fda3671b2f3b39190" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this Rdn is less than, equal to, or greater than the given Object.</source>
          <target state="translated">이 Rdn가 지정된 Object보다 작은 경우는 부의 정수, 제로 또는 정의 정수</target>
        </trans-unit>
        <trans-unit id="9fb8c6b86e5345cbef91652c29458695a07c1f13" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this URI is less than, equal to, or greater than the given URI</source>
          <target state="translated">이 URI가 지정된 URI보다 작거나 같거나 더 큰 음수, 0 또는 양의 정수</target>
        </trans-unit>
        <trans-unit id="ed80c12a5615031d10b0f7059e7c8eb7c272608a" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this buffer is less than, equal to, or greater than the given buffer</source>
          <target state="translated">이 버퍼가 지정된 버퍼보다 ​​작거나 같거나 크므로 음의 정수, 0 또는 양의 정수</target>
        </trans-unit>
        <trans-unit id="c47633dceffec00e2e7bfd87003eb21a20911f2d" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this charset is less than, equal to, or greater than the specified charset</source>
          <target state="translated">이 문자 세트가 지정된 문자 세트보다 작거나 같거나 큰 경우 음의 정수, 0 또는 양의 정수</target>
        </trans-unit>
        <trans-unit id="3e32fdcf44f80e850e6eb4628fd8fbc785265461" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this module version is less than, equal to, or greater than the given module version</source>
          <target state="translated">이 모듈 버전이 주어진 모듈 버전보다 작거나 같거나 크므로 음의 정수, 0 또는 양의 정수</target>
        </trans-unit>
        <trans-unit id="4b96a6abdbfd3d752b041a20ff91f0ec340ed973" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this &lt;code&gt;Provides&lt;/code&gt; is less than, equal to, or greater than the given &lt;code&gt;Provides&lt;/code&gt;</source>
          <target state="translated">이 &lt;code&gt;Provides&lt;/code&gt; 가 제공된 &lt;code&gt;Provides&lt;/code&gt; 보다 작거나 같거나 큰 경우 음의 정수, 0 또는 양의 정수</target>
        </trans-unit>
        <trans-unit id="012de39621337d32e06dcd963efb123f2d8408d2" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this &lt;code&gt;Version&lt;/code&gt; is less than, equal to, or greater than the given &lt;code&gt;Version&lt;/code&gt;</source>
          <target state="translated">이 &lt;code&gt;Version&lt;/code&gt; 이 주어진 &lt;code&gt;Version&lt;/code&gt; 보다 작거나 같거나 큰 경우 음의 정수, 0 또는 양의 정수</target>
        </trans-unit>
        <trans-unit id="01817bf696fd468509d9acd42283b14ca6dea95d" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this module &lt;code&gt;Opens&lt;/code&gt; is less than, equal to, or greater than the given module &lt;code&gt;Opens&lt;/code&gt;</source>
          <target state="translated">음의 정수, 제로 또는 모듈이 경우 양의 정수 &lt;code&gt;Opens&lt;/code&gt; 이하이며 주어진 모듈과 같거나 더 큰 &lt;code&gt;Opens&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54c0d1d060aa6b22af2c8866e49b11fce042bcd3" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this module dependence is less than, equal to, or greater than the given module dependence</source>
          <target state="translated">이 모듈 종속성이 주어진 모듈 종속성보다 작거나 같거나 큰 경우 음의 정수, 0 또는 양의 정수</target>
        </trans-unit>
        <trans-unit id="ba01448065c5be61b8b1de4cc28f04f18702ae95" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this module descriptor is less than, equal to, or greater than the given module descriptor</source>
          <target state="translated">이 모듈 설명자가 주어진 모듈 설명자보다 작거나 같거나 큰 경우 음의 정수, 0 또는 양의 정수</target>
        </trans-unit>
        <trans-unit id="6b2908d9eff4fcb3e7593e05d1109f33d99c6233" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this module export is less than, equal to, or greater than the given export dependence</source>
          <target state="translated">이 모듈 내보내기가 주어진 내보내기 종속성보다 작거나 같거나 큰 경우 음의 정수, 0 또는 양의 정수</target>
        </trans-unit>
        <trans-unit id="a6f08088fd568982cfa37fb2123efa0d7461bf10" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this module opens is less than, equal to, or greater than the given module opens</source>
          <target state="translated">이 모듈 열기가 주어진 모듈 열기보다 작거나 같거나 큰 경우 음의 정수, 0 또는 양의 정수</target>
        </trans-unit>
        <trans-unit id="14fc75c7164240154eb81e2f5886bbd043c13ae7" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this provides is less than, equal to, or greater than the given provides</source>
          <target state="translated">제공된 값보다 작거나 같거나 큰 경우 음의 정수, 0 또는 양의 정수</target>
        </trans-unit>
        <trans-unit id="58f9c54b8b24163ccca7d19df4cfdcb1e2f4b205" translate="yes" xml:space="preserve">
          <source>A negative value means that the cookie is not stored persistently and will be deleted when the Web browser exits. A zero value causes the cookie to be deleted.</source>
          <target state="translated">음수 값은 쿠키가 지속적으로 저장되지 않으며 웹 브라우저가 종료 될 때 삭제됨을 의미합니다. 값이 0이면 쿠키가 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="88f0bc390bc81564616c7ace6f9f0ff719f435d2" translate="yes" xml:space="preserve">
          <source>A network channel that supports Internet Protocol (IP) multicasting.</source>
          <target state="translated">IP (Internet Protocol) 멀티 캐스팅을 지원하는 네트워크 채널.</target>
        </trans-unit>
        <trans-unit id="cbdc419e84e51b1088337a46cc75bdfa7afbab39" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; instance for this &lt;code&gt;Lock&lt;/code&gt; instance</source>
          <target state="translated">이 &lt;code&gt;Lock&lt;/code&gt; 인스턴스 의 새로운 &lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt; 인스턴스</target>
        </trans-unit>
        <trans-unit id="aceb0d651c53edfc705d99c1a7c6bd60485b446b" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;mbeanserverdelegate&quot;&gt;&lt;code&gt;MBeanServerDelegate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">새로운 &lt;a href=&quot;mbeanserverdelegate&quot;&gt; &lt;code&gt;MBeanServerDelegate&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c807f5aaccbe3ed21f9844b74c3f8e26dc5c8f14" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; object for managing the subprocess</source>
          <target state="translated">하위 프로세스 관리를위한 새로운 &lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; 객체</target>
        </trans-unit>
        <trans-unit id="ec57e55fd3af4b36094fc208fbb620a69cf9f500" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;AccessibleJList&lt;/code&gt; instance is created if necessary.</source>
          <target state="translated">&lt;code&gt;AccessibleJList&lt;/code&gt; 경우 새 AccessibleJList 인스턴스가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="5f48283e4f735c2f8c789ece1bf37a57efc23e23" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Attr&lt;/code&gt; object with the &lt;code&gt;nodeName&lt;/code&gt; attribute set to &lt;code&gt;name&lt;/code&gt;, and &lt;code&gt;localName&lt;/code&gt;, &lt;code&gt;prefix&lt;/code&gt;, and &lt;code&gt;namespaceURI&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt;. The value of the attribute is the empty string.</source>
          <target state="translated">&lt;code&gt;nodeName&lt;/code&gt; 속성이 &lt;code&gt;name&lt;/code&gt; 으로 설정 되고 &lt;code&gt;localName&lt;/code&gt; , &lt;code&gt;prefix&lt;/code&gt; 및 &lt;code&gt;namespaceURI&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 로 설정된 새 &lt;code&gt;Attr&lt;/code&gt; 객체 . 속성 값은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="11dad3570fa8f5d2138e2f8d660ea55490c345bf" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Attr&lt;/code&gt; object with the following attributes:</source>
          <target state="translated">다음 속성을 가진 새 &lt;code&gt;Attr&lt;/code&gt; 객체 :</target>
        </trans-unit>
        <trans-unit id="dec4e93d87e2b6f8927646919d97ce55149dc434" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Connection&lt;/code&gt; object created using the JDBC 2.1 core API has an initially empty type map associated with it. A user may enter a custom mapping for a UDT in this type map. When a UDT is retrieved from a data source with the method &lt;code&gt;ResultSet.getObject&lt;/code&gt;, the &lt;code&gt;getObject&lt;/code&gt; method will check the connection's type map to see if there is an entry for that UDT. If so, the &lt;code&gt;getObject&lt;/code&gt; method will map the UDT to the class indicated. If there is no entry, the UDT will be mapped using the standard mapping.</source>
          <target state="translated">JDBC 2.1 핵심 API를 사용하여 생성 된 새 &lt;code&gt;Connection&lt;/code&gt; 개체에는 처음에 연결된 빈 유형 맵이 있습니다. 사용자는이 유형 맵에서 UDT에 대한 사용자 지정 매핑을 입력 할 수 있습니다. &lt;code&gt;ResultSet.getObject&lt;/code&gt; 메소드를 사용하여 데이터 소스에서 UDT를 검색 하면 &lt;code&gt;getObject&lt;/code&gt; 메소드는 연결의 유형 맵을 확인하여 해당 UDT에 대한 항목이 있는지 확인합니다. 그렇다면 &lt;code&gt;getObject&lt;/code&gt; 메서드는 UDT를 표시된 클래스에 매핑합니다. 항목이없는 경우 UDT는 표준 매핑을 사용하여 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="0d6d7b584d2467ca78948a5e3c7d4899a326124c" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Document&lt;/code&gt; object with its document element. If the &lt;code&gt;NamespaceURI&lt;/code&gt;, &lt;code&gt;qualifiedName&lt;/code&gt;, and &lt;code&gt;doctype&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;, the returned &lt;code&gt;Document&lt;/code&gt; is empty with no document element.</source>
          <target state="translated">문서 요소가 있는 새 &lt;code&gt;Document&lt;/code&gt; 개체입니다. 경우 &lt;code&gt;NamespaceURI&lt;/code&gt; 가 , &lt;code&gt;qualifiedName&lt;/code&gt; 가 , 그리고 &lt;code&gt;doctype&lt;/code&gt; 있는 &lt;code&gt;null&lt;/code&gt; , 반환 된 &lt;code&gt;Document&lt;/code&gt; 어떤 문서 요소와 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e5a487869645c6dbb6e55243697eec58cfb36d7" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;DocumentFragment&lt;/code&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;DocumentFragment&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87f69480435125c7e2c846d1d77644e770bd9625" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;DocumentType&lt;/code&gt; node with &lt;code&gt;Node.ownerDocument&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node.ownerDocument&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 로 설정된 새 &lt;code&gt;DocumentType&lt;/code&gt; 노드 .</target>
        </trans-unit>
        <trans-unit id="eb08b864203a9906480e953a80cc71b7417f5f4c" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Element&lt;/code&gt; object with the &lt;code&gt;nodeName&lt;/code&gt; attribute set to &lt;code&gt;tagName&lt;/code&gt;, and &lt;code&gt;localName&lt;/code&gt;, &lt;code&gt;prefix&lt;/code&gt;, and &lt;code&gt;namespaceURI&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nodeName&lt;/code&gt; 속성이 &lt;code&gt;tagName&lt;/code&gt; 으로 설정 되고 &lt;code&gt;localName&lt;/code&gt; , &lt;code&gt;prefix&lt;/code&gt; 및 &lt;code&gt;namespaceURI&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 로 설정된 새 &lt;code&gt;Element&lt;/code&gt; 객체 .</target>
        </trans-unit>
        <trans-unit id="b3d4f4912a05669c5f64443a3dc57bb80a56868c" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Element&lt;/code&gt; object with the following attributes:</source>
          <target state="translated">다음 속성을 가진 새 &lt;code&gt;Element&lt;/code&gt; 객체 :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
