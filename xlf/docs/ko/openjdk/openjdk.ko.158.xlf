<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="9e949f31037da22876211e32284de46571dd9e4c" translate="yes" xml:space="preserve">
          <source>This method is to be used by Connection pooling managers.</source>
          <target state="translated">이 방법은 연결 풀링 관리자가 사용합니다.</target>
        </trans-unit>
        <trans-unit id="951395b4b75eb438f62bfbeb152ae6d223075561" translate="yes" xml:space="preserve">
          <source>This method is typically</source>
          <target state="translated">이 방법은 일반적으로</target>
        </trans-unit>
        <trans-unit id="2d7b04d2194fc2a70ef27aba47214e4aeef08eab" translate="yes" xml:space="preserve">
          <source>This method is typically called a &lt;code&gt;FilteredRowSet&lt;/code&gt; object internal methods (not public) that control the &lt;code&gt;RowSet&lt;/code&gt; object's cursor moving from row to the next.</source>
          <target state="translated">이 메서드는 일반적으로 행에서 다음 행으로 이동 하는 &lt;code&gt;RowSet&lt;/code&gt; 개체의 커서 를 제어 하는 &lt;code&gt;FilteredRowSet&lt;/code&gt; 개체 내부 메서드 (공개 아님)라고 합니다.</target>
        </trans-unit>
        <trans-unit id="b3d012feff444e4e49f2434971912cab60ac3c51" translate="yes" xml:space="preserve">
          <source>This method is typically called a &lt;code&gt;FilteredRowSet&lt;/code&gt; object internal methods (not public) that control the &lt;code&gt;RowSet&lt;/code&gt; object's cursor moving from row to the next. In addition, if this internal method moves the cursor onto a row that has been deleted, the internal method will continue to ove the cursor until a valid row is found.</source>
          <target state="translated">이 메서드는 일반적으로 행에서 다음 행으로 이동 하는 &lt;code&gt;RowSet&lt;/code&gt; 개체의 커서 를 제어 하는 &lt;code&gt;FilteredRowSet&lt;/code&gt; 개체 내부 메서드 (공개 아님)라고 합니다. 또한이 내부 메소드가 삭제 된 행으로 커서를 이동하면 내부 메소드는 유효한 행을 찾을 때까지 계속 커서를 이동합니다.</target>
        </trans-unit>
        <trans-unit id="ae63b78449e9e42c635caa7843a810d1aa57cffe" translate="yes" xml:space="preserve">
          <source>This method is typically called from the environment in order to determine if the implementor &quot;needs&quot; a GUI.</source>
          <target state="translated">이 메소드는 구현자가 GUI를 &quot;필요&quot;하는지 판별하기 위해 일반적으로 환경에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b7126e7970c8cf4e25d7d94afe1028c943cd33c1" translate="yes" xml:space="preserve">
          <source>This method is typically invoked from within a task's run method, to determine whether the current execution of the task is sufficiently timely to warrant performing the scheduled activity:</source>
          <target state="translated">이 메소드는 일반적으로 태스크의 현재 실행이 스케줄 된 활동 수행을 보증하기에 충분한시기인지 판별하기 위해 태스크의 run 메소드 내에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a1daf7353acd79b3c1764e98f4066dec0663ce7b" translate="yes" xml:space="preserve">
          <source>This method is typically used for debugging and testing purposes.</source>
          <target state="translated">이 방법은 일반적으로 디버깅 및 테스트 목적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2251827349b72099d9acb0597d3ef960a5681705" translate="yes" xml:space="preserve">
          <source>This method is unlike others in this and related interfaces. It operates on runtime reflective information &amp;mdash; representations of annotation types currently loaded into the VM &amp;mdash; rather than on the representations defined by and used throughout these interfaces. Consequently, calling methods on the returned annotation object can throw many of the exceptions that can be thrown when calling methods on an annotation object returned by core reflection. This method is intended for callers that are written to operate on a known, fixed set of annotation types.</source>
          <target state="translated">이 방법은이 인터페이스 및 관련 인터페이스의 다른 방법과 다릅니다. 이 인터페이스에서 정의되고 사용되는 표현이 아니라 런타임 반사 정보 (현재 VM에로드 된 주석 유형의 표현)에서 작동합니다. 결과적으로, 리턴 된 주석 오브젝트에서 메소드를 호출하면 코어 리플렉션으로 리턴 된 주석 오브젝트에서 메소드를 호출 할 때 발생할 수있는 많은 예외가 발생할 수 있습니다. 이 방법은 알려진 고정 된 주석 유형 집합에서 작동하도록 작성된 발신자를위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="bbe6d3a1a7cac69248754bcd4d8350a7d427ec6c" translate="yes" xml:space="preserve">
          <source>This method is used by &lt;code&gt;getUI&lt;/code&gt;, it's usually not necessary to call it directly.</source>
          <target state="translated">이 메서드는 &lt;code&gt;getUI&lt;/code&gt; 에서 사용되며 일반적으로 직접 호출 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a46a4390d99e43180c9624ec3506996653324397" translate="yes" xml:space="preserve">
          <source>This method is used by a &lt;code&gt;DragGestureRecognizer&lt;/code&gt; implementation to add an &lt;code&gt;InputEvent&lt;/code&gt; subclass (that it believes is one in a series of events that comprise a Drag and Drop operation) to the array of events that this &lt;code&gt;DragGestureRecognizer&lt;/code&gt; maintains internally.</source>
          <target state="translated">이 메서드는 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 구현 에서이 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 가 내부적으로 유지 관리 하는 이벤트 배열에 &lt;code&gt;InputEvent&lt;/code&gt; 하위 클래스 ( 끌어 놓기 작업을 구성하는 일련의 이벤트 중 하나라고 생각 함) 를 추가하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="aea5a6a6faade2d9a3e9582074c60fe04111f203" translate="yes" xml:space="preserve">
          <source>This method is used by the &lt;code&gt;getProperties&lt;/code&gt; and &lt;code&gt;setProperties&lt;/code&gt; methods of class &lt;code&gt;System&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;System&lt;/code&gt; 클래스 의 &lt;code&gt;getProperties&lt;/code&gt; 및 &lt;code&gt;setProperties&lt;/code&gt; 메소드에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4b98243b99ff34e00c9ef9a60fbb86ed96ec5a16" translate="yes" xml:space="preserve">
          <source>This method is used by the &lt;code&gt;getProperty&lt;/code&gt; method of class &lt;code&gt;System&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;System&lt;/code&gt; 클래스 의 &lt;code&gt;getProperty&lt;/code&gt; 메소드에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b9a5905740e8a36aa9964becd355adbc6cf3194d" translate="yes" xml:space="preserve">
          <source>This method is used by the &lt;code&gt;loadClass&lt;/code&gt; method of class loaders.</source>
          <target state="translated">이 메소드는 클래스 로더 의 &lt;code&gt;loadClass&lt;/code&gt; 메소드에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9667fe0131b3f57e0e230d7f8071e4addf0b27dd" translate="yes" xml:space="preserve">
          <source>This method is used by the &lt;code&gt;loadClass&lt;/code&gt; method of some class loaders.</source>
          <target state="translated">이 메소드는 일부 클래스 로더 의 &lt;code&gt;loadClass&lt;/code&gt; 메소드에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="096ffe3a135c28ca97852ed6894a752d5695d859" translate="yes" xml:space="preserve">
          <source>This method is used solely in conjunction with &lt;code&gt;Thread.suspend&lt;/code&gt; and &lt;code&gt;ThreadGroup.suspend&lt;/code&gt;, both of which have been deprecated, as they are inherently deadlock-prone.</source>
          <target state="translated">이 메서드는 &lt;code&gt;Thread.suspend&lt;/code&gt; 및 &lt;code&gt;ThreadGroup.suspend&lt;/code&gt; 와 함께 만 사용되며 , 둘 다 본질적으로 교착 상태가되기 때문에 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6549d81c3abae7ce2fdcd3fbd9287d4050867e73" translate="yes" xml:space="preserve">
          <source>This method is used solely in conjunction with &lt;code&gt;Thread.suspend&lt;/code&gt; and &lt;code&gt;ThreadGroup.suspend&lt;/code&gt;, both of which have been deprecated, as they are inherently deadlock-prone. See &lt;a href=&quot;thread#suspend()&quot;&gt;&lt;code&gt;Thread.suspend()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">이 메서드는 &lt;code&gt;Thread.suspend&lt;/code&gt; 및 &lt;code&gt;ThreadGroup.suspend&lt;/code&gt; 와 함께 만 사용되며 , 둘 다 본질적으로 교착 상태가되기 때문에 더 이상 사용되지 않습니다. 자세한 내용은 &lt;a href=&quot;thread#suspend()&quot;&gt; &lt;code&gt;Thread.suspend()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7a441811b2af61668dcdc7adf7da28e32bae5489" translate="yes" xml:space="preserve">
          <source>This method is used to enable streaming of a HTTP request body without internal buffering, when the content length is &lt;b&gt;not&lt;/b&gt; known in advance.</source>
          <target state="translated">이 메서드는 콘텐츠 길이 를 미리 알 수 &lt;b&gt;없는&lt;/b&gt; 경우 내부 버퍼링없이 HTTP 요청 본문의 스트리밍을 활성화하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="dfe37395eb27f1aaf5b50a8b678a0f630640cc5e" translate="yes" xml:space="preserve">
          <source>This method is used to enable streaming of a HTTP request body without internal buffering, when the content length is &lt;b&gt;not&lt;/b&gt; known in advance. In this mode, chunked transfer encoding is used to send the request body. Note, not all HTTP servers support this mode.</source>
          <target state="translated">이 방법은 컨텐츠 길이 를 미리 알 수 &lt;b&gt;없는&lt;/b&gt; 경우 내부 버퍼링없이 HTTP 요청 본문을 스트리밍 할 수 있도록 합니다. 이 모드에서는 청크 전송 인코딩을 사용하여 요청 본문을 보냅니다. 모든 HTTP 서버가이 모드를 지원하는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="9c8fdc5fc14c7dbd8f5a8384988f1bd062b27d76" translate="yes" xml:space="preserve">
          <source>This method is used to enable streaming of a HTTP request body without internal buffering, when the content length is known in advance.</source>
          <target state="translated">이 방법은 컨텐츠 길이를 미리 알고있을 때 내부 버퍼링없이 HTTP 요청 본문을 스트리밍 할 수 있도록하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e2b55097c024b0b0b02045eedaa78a111259066a" translate="yes" xml:space="preserve">
          <source>This method is used to establish an association between the socket and a local address. Once an association is established then the socket remains bound until the associated channel is closed.</source>
          <target state="translated">이 방법은 소켓과 로컬 주소 사이의 연결을 설정하는 데 사용됩니다. 연결이 설정되면 관련 채널이 닫힐 때까지 소켓이 바인딩 된 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="d9dfa7289fc99c05acc6f156086be826f379c086" translate="yes" xml:space="preserve">
          <source>This method is used to establish an association between the socket and a local address. Once an association is established then the socket remains bound until the channel is closed.</source>
          <target state="translated">이 방법은 소켓과 로컬 주소 사이의 연결을 설정하는 데 사용됩니다. 연결이 설정되면 소켓은 채널이 닫힐 때까지 바인딩 된 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="7b394514f43b5846b11c1c15ed38e5c851d06c0d" translate="yes" xml:space="preserve">
          <source>This method is used to establish an association between the socket and a local address. Once an association is established then the socket remains bound until the channel is closed. If the &lt;code&gt;local&lt;/code&gt; parameter has the value &lt;code&gt;null&lt;/code&gt; then the socket will be bound to an address that is assigned automatically.</source>
          <target state="translated">이 방법은 소켓과 로컬 주소 간의 연결을 설정하는 데 사용됩니다. 연결이 설정되면 소켓은 채널이 닫힐 때까지 바인딩 된 상태로 유지됩니다. 경우 &lt;code&gt;local&lt;/code&gt; 매개 변수 값이 &lt;code&gt;null&lt;/code&gt; 다음 소켓이 자동으로 할당 된 주소에 바인드됩니다.</target>
        </trans-unit>
        <trans-unit id="edacf6564e3474e08df0bf12852f56c472cced87" translate="yes" xml:space="preserve">
          <source>This method is used to indicate to the GSSManager that the application would like a particular provider to be used ahead of all others when support is desired for the given mechanism.</source>
          <target state="translated">이 메소드는 지정된 메커니즘에 대한 지원이 필요할 때 애플리케이션이 다른 모든 제공자보다 먼저 특정 제공자를 사용하기를 원한다는 것을 GSSManager에 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="28a912a40f2de6a2d9c7597b93bbd816f1e9a28d" translate="yes" xml:space="preserve">
          <source>This method is used to indicate to the GSSManager that the application would like a particular provider to be used ahead of all others when support is desired for the given mechanism. When a value of null is used instead of an &lt;code&gt;Oid&lt;/code&gt; for the mechanism, the GSSManager must use the indicated provider ahead of all others no matter what the mechanism is. Only when the indicated provider does not support the needed mechanism should the GSSManager move on to a different provider.</source>
          <target state="translated">이 메소드는 지정된 메커니즘에 대한 지원이 필요할 때 애플리케이션이 다른 모든 제공자보다 먼저 특정 제공자를 사용하기를 원한다는 것을 GSSManager에 표시하는 데 사용됩니다. 메커니즘에 &lt;code&gt;Oid&lt;/code&gt; 대신 null 값이 사용 되면 GSSManager는 메커니즘이 무엇이든 관계없이 다른 모든 제공자보다 먼저 표시된 제공자를 사용해야합니다. 표시된 공급자가 필요한 메커니즘을 지원하지 않는 경우에만 GSSManager가 다른 공급자로 이동해야합니다.</target>
        </trans-unit>
        <trans-unit id="bc8e8469b9b464d08d9e1798e4a7cc6d6ec0142a" translate="yes" xml:space="preserve">
          <source>This method is used to indicate to the GSSManager that the application would like a particular provider to be used if no other provider can be found that supports the given mechanism.</source>
          <target state="translated">이 메소드는 지정된 메커니즘을 지원하는 다른 제공자를 찾을 수없는 경우 애플리케이션이 특정 제공자를 사용하기를 원한다는 것을 GSSManager에 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="db883d332a6d005ad564d2bf10d162cd32592429" translate="yes" xml:space="preserve">
          <source>This method is used to indicate to the GSSManager that the application would like a particular provider to be used if no other provider can be found that supports the given mechanism. When a value of null is used instead of an Oid for the mechanism, the GSSManager must use the indicated provider for any mechanism.</source>
          <target state="translated">이 메소드는 지정된 메커니즘을 지원하는 다른 제공자를 찾을 수없는 경우 애플리케이션이 특정 제공자를 사용하기를 원한다는 것을 GSSManager에 표시하는 데 사용됩니다. 메커니즘에 Oid 대신 null 값이 사용되면 GSSManager는 모든 메커니즘에 대해 표시된 공급자를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7158f4698e80f41a0f90ca1c0dbfae4c81e9a8d1" translate="yes" xml:space="preserve">
          <source>This method is used to interrupt file loading thread.</source>
          <target state="translated">이 메서드는 파일로드 스레드를 중단하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5442d53fb382ede9628c75bce8c2cc5b2ba5762a" translate="yes" xml:space="preserve">
          <source>This method is used to replace the definition of a class without reference to the existing class file bytes, as one might do when recompiling from source for fix-and-continue debugging. Where the existing class file bytes are to be transformed (for example in bytecode instrumentation) &lt;a href=&quot;#retransformClasses(java.lang.Class...)&quot;&gt;&lt;code&gt;retransformClasses&lt;/code&gt;&lt;/a&gt; should be used.</source>
          <target state="translated">이 메서드는 수정 및 계속 디버깅을 위해 소스에서 다시 컴파일 할 때 수행 할 수있는 것처럼 기존 클래스 파일 바이트를 참조하지 않고 클래스 정의를 대체하는 데 사용됩니다. 기존 클래스 파일 바이트를 변환 할 경우 (예 : 바이트 코드 계측) &lt;a href=&quot;#retransformClasses(java.lang.Class...)&quot;&gt; &lt;code&gt;retransformClasses&lt;/code&gt; 를&lt;/a&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="2baece6a8ac06e1fc4a9ff2b40d62ea4d61c8a8f" translate="yes" xml:space="preserve">
          <source>This method is used to replace the definition of a class without reference to the existing class file bytes, as one might do when recompiling from source for fix-and-continue debugging. Where the existing class file bytes are to be transformed (for example in bytecode instrumentation) &lt;a href=&quot;instrumentation#retransformClasses-java.lang.Class...-&quot;&gt;&lt;code&gt;retransformClasses&lt;/code&gt;&lt;/a&gt; should be used.</source>
          <target state="translated">이 메소드는 기존 클래스 파일 바이트를 참조하지 않고 클래스 정의를 바꾸는 데 사용됩니다. 수정 및 계속 디버깅을 위해 소스에서 다시 컴파일 할 때 수행 할 수 있습니다. 기존 클래스 파일 바이트를 변환 할 위치 (예 : 바이트 코드 계측)에서는 &lt;a href=&quot;instrumentation#retransformClasses-java.lang.Class...-&quot;&gt; &lt;code&gt;retransformClasses&lt;/code&gt; &lt;/a&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7beea796e1e20476ce67129e3d8dfb3b59481b17" translate="yes" xml:space="preserve">
          <source>This method is used with indirect CRLs. The default implementation always returns null. Subclasses that wish to support indirect CRLs should override it.</source>
          <target state="translated">이 방법은 간접 CRL과 함께 사용됩니다. 기본 구현은 항상 null을 반환합니다. 간접 CRL을 지원하려는 서브 클래스는이를 무시해야합니다.</target>
        </trans-unit>
        <trans-unit id="c1c6419b8c98005179e3619db88dd53b99b40716" translate="yes" xml:space="preserve">
          <source>This method is useful for ComponentUI implementations that are static (i.e. shared) and get their state entirely from the JComponent.</source>
          <target state="translated">이 메소드는 정적 (예 : 공유)이고 JComponent에서 전체 상태를 가져 오는 ComponentUI 구현에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="602990c17722cfe1e6d41d9f6dce980d02abaeda" translate="yes" xml:space="preserve">
          <source>This method is useful for clients which have only dimensions and want to find a &lt;code&gt;Media&lt;/code&gt; which corresponds to the dimensions.</source>
          <target state="translated">이 방법은 차원 만 있고 차원에 해당 하는 &lt;code&gt;Media&lt;/code&gt; 를 찾고자하는 클라이언트에게 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="246cc95dbbc3e601d773b72cc235c82bbbfeaff8" translate="yes" xml:space="preserve">
          <source>This method is useful for clients which have only dimensions and want to find a Media which corresponds to the dimensions.</source>
          <target state="translated">이 방법은 크기 만 있고 크기에 해당하는 미디어를 찾으려는 클라이언트에게 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b1d31068f4c06856e8dc888b61b728b057234f1c" translate="yes" xml:space="preserve">
          <source>This method is useful for implementing &lt;a href=&quot;../lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; on objects containing multiple fields. For example, if an object that has three fields, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;
 y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt;, one could write:</source>
          <target state="translated">이 메서드는 여러 필드를 포함하는 객체에 &lt;a href=&quot;../lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 를 구현하는 데 유용 합니다. 예를 들어 &lt;code&gt;x&lt;/code&gt; , &lt;code&gt; y&lt;/code&gt; , &lt;code&gt;z&lt;/code&gt; 세 개의 필드가있는 객체는 다음 과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e84c50c958c46a9102a7f8120bd2674f50221c85" translate="yes" xml:space="preserve">
          <source>This method is useful for implementing &lt;a href=&quot;../lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; on objects containing multiple fields. For example, if an object that has three fields, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt;, one could write:</source>
          <target state="translated">이 메소드는 여러 필드를 포함하는 객체에서 &lt;a href=&quot;../lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 를 구현하는 데 유용 합니다. 예를 들어, 세 개의 필드 &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; 및 &lt;code&gt;z&lt;/code&gt; 가있는 객체는 다음 과 같이 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd1a69d1312b6ec2f979a66a89a54d6a56592079" translate="yes" xml:space="preserve">
          <source>This method is useful for retrieving arbitrary information that is specific to the cryptographic operation that this context is used for.</source>
          <target state="translated">이 메서드는이 컨텍스트가 사용되는 암호화 작업과 관련된 임의의 정보를 검색하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ef81300a0e343df04ff5d10bf342aa339fdf0733" translate="yes" xml:space="preserve">
          <source>This method is useful for storing arbitrary information that is specific to the cryptographic operation that this context is used for.</source>
          <target state="translated">이 메서드는이 컨텍스트가 사용되는 암호화 작업과 관련된 임의의 정보를 저장하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b747ebeeb82d358021370528749c1fdbd9859486" translate="yes" xml:space="preserve">
          <source>This method is useful to help locate a service that can print a &lt;code&gt;MultiDoc&lt;/code&gt; in which the elements may be different flavors. An application could perform this itself by multiple lookups on each &lt;code&gt;DocFlavor&lt;/code&gt; in turn and collating the results, but the lookup service may be able to do this more efficiently.</source>
          <target state="translated">이 방법은 요소가 다른 풍미 일 수 있는 &lt;code&gt;MultiDoc&lt;/code&gt; 을 인쇄 할 수있는 서비스를 찾는 데 유용합니다 . 응용 프로그램은 각 &lt;code&gt;DocFlavor&lt;/code&gt; 에서 차례로 여러 번 조회 하여 결과를 수집 하여이 작업을 자체적으로 수행 할 수 있지만 조회 서비스가이를보다 효율적으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51ce74596c8f01cac825f66644d842ba43ddd4b9" translate="yes" xml:space="preserve">
          <source>This method is useful when a client needs to &quot;narrow&quot; the type of a &lt;code&gt;Class&lt;/code&gt; object to pass it to an API that restricts the &lt;code&gt;Class&lt;/code&gt; objects that it is willing to accept. A cast would generate a compile-time warning, as the correctness of the cast could not be checked at runtime (because generic types are implemented by erasure).</source>
          <target state="translated">이 메소드는 클라이언트가 &lt;code&gt;Class&lt;/code&gt; 객체 의 유형을 &quot;좁히고&quot; 수용 할 &lt;code&gt;Class&lt;/code&gt; 객체를 제한하는 API로 전달 해야 할 때 유용합니다 . 캐스트는 런타임에 캐스트의 정확성을 확인할 수 없으므로 컴파일 시간 경고를 생성합니다 (일반 유형은 삭제로 구현되기 때문).</target>
        </trans-unit>
        <trans-unit id="c2b1063014444a137d3a49d3ac5d2a96866a963f" translate="yes" xml:space="preserve">
          <source>This method is useful when a list of transforms have already been applied to the &lt;code&gt;Reference&lt;/code&gt;. See for example, the &lt;a href=&quot;http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=dss&quot;&gt; OASIS-DSS (Digital Signature Services)&lt;/a&gt; specification.</source>
          <target state="translated">이 메서드는 변환 목록이 이미 &lt;code&gt;Reference&lt;/code&gt; 에 적용된 경우에 유용합니다 . 예를 들어 &lt;a href=&quot;http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=dss&quot;&gt;OASIS-DSS (디지털 서명 서비스)&lt;/a&gt; 사양을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="936cd101092a2cd39b0c0dad36b9562f287bc3da" translate="yes" xml:space="preserve">
          <source>This method is useful when the digest value of a &lt;code&gt;Reference&lt;/code&gt; has been previously computed. See for example, the &lt;a href=&quot;http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=dss&quot;&gt; OASIS-DSS (Digital Signature Services)&lt;/a&gt; specification.</source>
          <target state="translated">이 방법은 &lt;code&gt;Reference&lt;/code&gt; 의 다이제스트 값 이 이전에 계산 된 경우에 유용합니다 . 예를 들어 &lt;a href=&quot;http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=dss&quot;&gt;OASIS-DSS (디지털 서명 서비스)&lt;/a&gt; 사양을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="73b766aadabaf1a68946845e0a8465916567c4ea" translate="yes" xml:space="preserve">
          <source>This method is useful when the list is too long to allow the &lt;code&gt;ListUI&lt;/code&gt; to compute the width/height of each cell, and there is a single cell value that is known to occupy as much space as any of the others, a so-called prototype.</source>
          <target state="translated">이 메서드는 &lt;code&gt;ListUI&lt;/code&gt; 가 각 셀의 너비 / 높이를 계산할 수있을만큼 목록이 너무 길고 다른 셀만큼 많은 공간을 차지하는 것으로 알려진 단일 셀 값 (소위 프로토 타입) 이있을 때 유용합니다. .</target>
        </trans-unit>
        <trans-unit id="443baa96b0aa5c9903d7dc90504d8dd2b62d5718" translate="yes" xml:space="preserve">
          <source>This method is usually used to check key size and key usage.</source>
          <target state="translated">이 방법은 일반적으로 키 크기와 키 사용을 확인하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="543a963fc1be4d84be36ea46557b6002f36a472b" translate="yes" xml:space="preserve">
          <source>This method iterates over the &lt;a href=&quot;spi/filesystemprovider#installedProviders()&quot;&gt;&lt;code&gt;installed&lt;/code&gt;&lt;/a&gt; providers to locate the provider that is identified by the URI &lt;a href=&quot;../../net/uri#getScheme()&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; of the given URI. URI schemes are compared without regard to case. If the provider is found then its &lt;a href=&quot;spi/filesystemprovider#getPath(java.net.URI)&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method is invoked to convert the URI.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;spi/filesystemprovider#installedProviders()&quot;&gt; &lt;code&gt;installed&lt;/code&gt; &lt;/a&gt; 공급자를 반복 하여 지정된 URI 의 URI &lt;a href=&quot;../../net/uri#getScheme()&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt; 로 식별되는 공급자를 찾습니다 . URI 스킴은 대소 문자에 관계없이 비교됩니다. 공급자를 찾으면 해당 &lt;a href=&quot;spi/filesystemprovider#getPath(java.net.URI)&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt; 메서드가 호출되어 URI를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="7068972d2404d9e58aab2ca1f01c099013fa7bcd" translate="yes" xml:space="preserve">
          <source>This method iterates over the &lt;a href=&quot;spi/filesystemprovider#installedProviders()&quot;&gt;&lt;code&gt;installed&lt;/code&gt;&lt;/a&gt; providers to locate the provider that is identified by the URI &lt;a href=&quot;../../net/uri#getScheme()&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; of the given URI. URI schemes are compared without regard to case. The exact form of the URI is highly provider dependent. If found, the provider's &lt;a href=&quot;spi/filesystemprovider#getFileSystem(java.net.URI)&quot;&gt;&lt;code&gt;getFileSystem&lt;/code&gt;&lt;/a&gt; method is invoked to obtain a reference to the &lt;code&gt;
 FileSystem&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;spi/filesystemprovider#installedProviders()&quot;&gt; &lt;code&gt;installed&lt;/code&gt; &lt;/a&gt; 공급자를 반복 하여 지정된 URI 의 URI &lt;a href=&quot;../../net/uri#getScheme()&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt; 로 식별되는 공급자를 찾습니다 . URI 스킴은 대소 문자에 관계없이 비교됩니다. URI의 정확한 형식은 공급자에 따라 다릅니다. 찾은 경우 공급자의 &lt;a href=&quot;spi/filesystemprovider#getFileSystem(java.net.URI)&quot;&gt; &lt;code&gt;getFileSystem&lt;/code&gt; &lt;/a&gt; 메서드가 호출되어 &lt;code&gt; FileSystem&lt;/code&gt; 에 대한 참조를 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="acf1dadad4f19cae330214295748cdf165d7cc3b" translate="yes" xml:space="preserve">
          <source>This method iterates over the &lt;a href=&quot;spi/filesystemprovider#installedProviders()&quot;&gt;&lt;code&gt;installed&lt;/code&gt;&lt;/a&gt; providers to locate the provider that is identified by the URI &lt;a href=&quot;../../net/uri#getScheme()&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; of the given URI. URI schemes are compared without regard to case. The exact form of the URI is highly provider dependent. If found, the provider's &lt;a href=&quot;spi/filesystemprovider#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; method is invoked to construct the new file system.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;spi/filesystemprovider#installedProviders()&quot;&gt; &lt;code&gt;installed&lt;/code&gt; &lt;/a&gt; 공급자를 반복 하여 지정된 URI 의 URI &lt;a href=&quot;../../net/uri#getScheme()&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt; 로 식별되는 공급자를 찾습니다 . URI 스킴은 대소 문자에 관계없이 비교됩니다. URI의 정확한 형식은 공급자에 따라 다릅니다. 발견되면 공급자의 &lt;a href=&quot;spi/filesystemprovider#newFileSystem(java.net.URI,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt; 메서드가 호출되어 새 파일 시스템을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="49bee2b16dd5eb9923ce3fb29d1058a216241298" translate="yes" xml:space="preserve">
          <source>This method iterates over the &lt;a href=&quot;spi/filesystemprovider#installedProviders()&quot;&gt;&lt;code&gt;installed&lt;/code&gt;&lt;/a&gt; providers. It invokes, in turn, each provider's &lt;a href=&quot;spi/filesystemprovider#newFileSystem(java.nio.file.Path,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem(Path,Map)&lt;/code&gt;&lt;/a&gt; method with an empty map. If a provider returns a file system then the iteration terminates and the file system is returned. If none of the installed providers return a &lt;code&gt;FileSystem&lt;/code&gt; then an attempt is made to locate the provider using the given class loader. If a provider returns a file system then the lookup terminates and the file system is returned.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;spi/filesystemprovider#installedProviders()&quot;&gt; &lt;code&gt;installed&lt;/code&gt; &lt;/a&gt; 공급자를 반복합니다 . 차례로 빈 맵을 사용하여 각 공급자의 &lt;a href=&quot;spi/filesystemprovider#newFileSystem(java.nio.file.Path,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem(Path,Map)&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 . 공급자가 파일 시스템을 반환하면 반복이 종료되고 파일 시스템이 반환됩니다. 설치된 공급자가 &lt;code&gt;FileSystem&lt;/code&gt; 을 반환하지 않으면 지정된 클래스 로더를 사용하여 공급자를 찾으려고 시도합니다. 공급자가 파일 시스템을 반환하면 조회가 종료되고 파일 시스템이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="fb16de8796afac4493e5774b44ae736259861eaa" translate="yes" xml:space="preserve">
          <source>This method iterates over the &lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt;&lt;code&gt;installed&lt;/code&gt;&lt;/a&gt; providers to locate the provider that is identified by the URI &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; of the given URI. URI schemes are compared without regard to case. If the provider is found then its &lt;a href=&quot;spi/filesystemprovider#getPath-java.net.URI-&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method is invoked to convert the URI.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt; &lt;code&gt;installed&lt;/code&gt; &lt;/a&gt; 제공자를 반복 하여 지정된 URI 의 URI &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt; 으로 식별되는 제공자를 찾습니다 . URI 스킴은 대소 문자와 상관없이 비교됩니다. 제공자를 찾으면 &lt;a href=&quot;spi/filesystemprovider#getPath-java.net.URI-&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt; 메소드가 호출되어 URI를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="8cd1a28468ba1f52b37e42cb2a38da8ff584a3cb" translate="yes" xml:space="preserve">
          <source>This method iterates over the &lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt;&lt;code&gt;installed&lt;/code&gt;&lt;/a&gt; providers to locate the provider that is identified by the URI &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; of the given URI. URI schemes are compared without regard to case. The exact form of the URI is highly provider dependent. If found, the provider's &lt;a href=&quot;spi/filesystemprovider#getFileSystem-java.net.URI-&quot;&gt;&lt;code&gt;getFileSystem&lt;/code&gt;&lt;/a&gt; method is invoked to obtain a reference to the &lt;code&gt;FileSystem&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt; &lt;code&gt;installed&lt;/code&gt; &lt;/a&gt; 제공자를 반복 하여 지정된 URI 의 URI &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt; 으로 식별되는 제공자를 찾습니다 . URI 스킴은 대소 문자와 상관없이 비교됩니다. URI의 정확한 형식은 공급자에 따라 크게 다릅니다. 발견되면, 제공자의 &lt;a href=&quot;spi/filesystemprovider#getFileSystem-java.net.URI-&quot;&gt; &lt;code&gt;getFileSystem&lt;/code&gt; &lt;/a&gt; 메소드가 호출되어 &lt;code&gt;FileSystem&lt;/code&gt; 에 대한 참조를 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="6d4a846b184f75a1e6db8c84642469ea6b00dfb6" translate="yes" xml:space="preserve">
          <source>This method iterates over the &lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt;&lt;code&gt;installed&lt;/code&gt;&lt;/a&gt; providers to locate the provider that is identified by the URI &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; of the given URI. URI schemes are compared without regard to case. The exact form of the URI is highly provider dependent. If found, the provider's &lt;a href=&quot;spi/filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; method is invoked to construct the new file system.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt; &lt;code&gt;installed&lt;/code&gt; &lt;/a&gt; 제공자를 반복 하여 지정된 URI 의 URI &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt; 으로 식별되는 제공자를 찾습니다 . URI 스킴은 대소 문자와 상관없이 비교됩니다. URI의 정확한 형식은 공급자에 따라 크게 다릅니다. 발견되면 제공자의 &lt;a href=&quot;spi/filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt; 메소드가 호출되어 새 파일 시스템을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="880033cb82cb31b9387a5336555aa2900c785f59" translate="yes" xml:space="preserve">
          <source>This method iterates over the &lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt;&lt;code&gt;installed&lt;/code&gt;&lt;/a&gt; providers. It invokes, in turn, each provider's &lt;a href=&quot;spi/filesystemprovider#newFileSystem-java.nio.file.Path-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem(Path,Map)&lt;/code&gt;&lt;/a&gt; method with an empty map. If a provider returns a file system then the iteration terminates and the file system is returned. If none of the installed providers return a &lt;code&gt;FileSystem&lt;/code&gt; then an attempt is made to locate the provider using the given class loader. If a provider returns a file system then the lookup terminates and the file system is returned.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt; &lt;code&gt;installed&lt;/code&gt; &lt;/a&gt; 공급자를 반복합니다 . 빈 맵으로 각 제공자의 &lt;a href=&quot;spi/filesystemprovider#newFileSystem-java.nio.file.Path-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem(Path,Map)&lt;/code&gt; &lt;/a&gt; 메소드를 차례로 호출합니다 . 제공자가 파일 시스템을 리턴하면 반복이 종료되고 파일 시스템이 리턴됩니다. 설치된 제공자 중 어느 것도 &lt;code&gt;FileSystem&lt;/code&gt; 을 리턴하지 않으면 제공된 클래스 로더를 사용하여 제공자를 찾으려고 시도합니다. 공급자가 파일 시스템을 반환하면 조회가 종료되고 파일 시스템이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6df3229f6bcb65c48929367cf8b4e6d901764147" translate="yes" xml:space="preserve">
          <source>This method iterates over the entire collection, hence it requires time proportional to the size of the collection.</source>
          <target state="translated">이 방법은 전체 컬렉션을 반복하므로 컬렉션의 크기에 비례하는 시간이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="83f8a1bdcb469be3f04a7edcaabafb764e542f05" translate="yes" xml:space="preserve">
          <source>This method itself does not throw any exception for null parameter but for exceptions thrown by the respective method of the listener.</source>
          <target state="translated">이 메서드 자체는 null 매개 변수에 대한 예외가 아니라 리스너의 각 메서드에 의해 throw 된 예외에 대해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="564b730160c652096b94dc584612c18c6dbf6fa7" translate="yes" xml:space="preserve">
          <source>This method loads the class through the system class loader (see &lt;a href=&quot;#getSystemClassLoader()&quot;&gt;&lt;code&gt;getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;). The &lt;code&gt;Class&lt;/code&gt; object returned might have more than one &lt;code&gt;ClassLoader&lt;/code&gt; associated with it. Subclasses of &lt;code&gt;ClassLoader&lt;/code&gt; need not usually invoke this method, because most class loaders need to override just &lt;a href=&quot;#findClass(java.lang.String)&quot;&gt;&lt;code&gt;findClass(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 시스템 클래스 로더를 통해 클래스를로드합니다 ( &lt;a href=&quot;#getSystemClassLoader()&quot;&gt; &lt;code&gt;getSystemClassLoader()&lt;/code&gt; &lt;/a&gt; 참조 ). 반환 된 &lt;code&gt;Class&lt;/code&gt; 객체에는 둘 이상의 &lt;code&gt;ClassLoader&lt;/code&gt; 가 연결되어있을 수 있습니다. 대부분의 클래스 로더는 &lt;a href=&quot;#findClass(java.lang.String)&quot;&gt; &lt;code&gt;findClass(String)&lt;/code&gt; &lt;/a&gt; 을 재정의해야하므로 &lt;code&gt;ClassLoader&lt;/code&gt; 의 하위 클래스는 일반적으로이 메서드를 호출 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="ea8ef674ef4d61ebebe97a398544ed83610076c4" translate="yes" xml:space="preserve">
          <source>This method loads the class through the system class loader (see &lt;a href=&quot;classloader#getSystemClassLoader--&quot;&gt;&lt;code&gt;getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;). The &lt;code&gt;Class&lt;/code&gt; object returned might have more than one &lt;code&gt;ClassLoader&lt;/code&gt; associated with it. Subclasses of &lt;code&gt;ClassLoader&lt;/code&gt; need not usually invoke this method, because most class loaders need to override just &lt;a href=&quot;classloader#findClass-java.lang.String-&quot;&gt;&lt;code&gt;findClass(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 시스템 클래스 로더를 통해 클래스를로드합니다 ( &lt;a href=&quot;classloader#getSystemClassLoader--&quot;&gt; &lt;code&gt;getSystemClassLoader()&lt;/code&gt; &lt;/a&gt; 참조 ). 리턴 된 &lt;code&gt;Class&lt;/code&gt; 오브젝트에는 둘 이상의 &lt;code&gt;ClassLoader&lt;/code&gt; 가 연관 될 수 있습니다. 대부분의 클래스 로더는 &lt;a href=&quot;classloader#findClass-java.lang.String-&quot;&gt; &lt;code&gt;findClass(String)&lt;/code&gt; &lt;/a&gt; 만 재정의해야하기 때문에 일반적으로 &lt;code&gt;ClassLoader&lt;/code&gt; 의 서브 클래스는 이 메소드를 호출 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="8d62d43c3776299e4d329c965c00fa4654ac85c4" translate="yes" xml:space="preserve">
          <source>This method locates the implementation class by locating configuration files that have the name:</source>
          <target state="translated">이 메소드는 이름이 다음과 같은 구성 파일을 찾아 구현 클래스를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="365786ae0a879366123c0bd46ba1f7abaa65a19b" translate="yes" xml:space="preserve">
          <source>This method looks up the prefix in the current context. Use the empty string (&quot;&quot;) for the default Namespace.</source>
          <target state="translated">이 메서드는 현재 컨텍스트에서 접두사를 찾습니다. 기본 네임 스페이스에 빈 문자열 ( &quot;&quot;)을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9d0ddb3ec0e9b63b8855a417b281e5a02579b5c0" translate="yes" xml:space="preserve">
          <source>This method makes a best effort to ensure that, when it returns, this buffer's content is resident in physical memory. Invoking this method may cause some number of page faults and I/O operations to occur.</source>
          <target state="translated">이 메소드는 리턴시이 버퍼의 컨텐츠가 실제 메모리에 상주하도록 최선의 노력을합니다. 이 메소드를 호출하면 몇 개의 페이지 결함 및 I / O 조작이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9921a4667dc98347a6a5af87ed73e8712213cd69" translate="yes" xml:space="preserve">
          <source>This method makes a copy of the input</source>
          <target state="translated">이 방법은 입력의 사본을 만듭니다</target>
        </trans-unit>
        <trans-unit id="4c430737fac362fd21efdf3656551e17b603ad54" translate="yes" xml:space="preserve">
          <source>This method makes a copy of the input &lt;code&gt;password&lt;/code&gt; before storing it.</source>
          <target state="translated">이 방법은 입력 &lt;code&gt;password&lt;/code&gt; 를 저장하기 전에 복사본을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1a8b0b3ece4fb30d27e452f096b0580e68f19f62" translate="yes" xml:space="preserve">
          <source>This method makes use of &lt;code&gt;CellRendererPane&lt;/code&gt; to handle the actual painting, and is only recommended if you use one component for rendering. If you make use of multiple components to handle the rendering, as &lt;code&gt;JTable&lt;/code&gt; does, use &lt;code&gt;CellRendererPane&lt;/code&gt; directly. Otherwise, as described below, you could end up with a &lt;code&gt;CellRendererPane&lt;/code&gt; per &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;CellRendererPane&lt;/code&gt; 을 사용하여 실제 페인팅을 처리하며 렌더링에 하나의 구성 요소를 사용하는 경우에만 권장됩니다. &lt;code&gt;JTable&lt;/code&gt; 처럼 렌더링을 처리하기 위해 여러 구성 요소를 사용하는 경우 &lt;code&gt;CellRendererPane&lt;/code&gt; 을 직접 사용하십시오 . 그렇지 않으면 아래에 설명 된대로 &lt;code&gt;Component&lt;/code&gt; 당 &lt;code&gt;CellRendererPane&lt;/code&gt; 으로 끝날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6f231365be0d37f8241f85ca2031c19c3f8582e" translate="yes" xml:space="preserve">
          <source>This method makes use of specialized providers that create pseudo file systems where the contents of one or more files is treated as a file system.</source>
          <target state="translated">이 방법은 하나 이상의 파일 내용이 파일 시스템으로 취급되는 의사 파일 시스템을 작성하는 특수 제공자를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="87831c1145b7ecfcd50086de895ead157d421184" translate="yes" xml:space="preserve">
          <source>This method marks the group as shutdown. Further attempts to construct channel that binds to this group will throw &lt;a href=&quot;shutdownchannelgroupexception&quot;&gt;&lt;code&gt;ShutdownChannelGroupException&lt;/code&gt;&lt;/a&gt;. The group terminates when all asynchronous channels in the group are closed, all actively executing completion handlers have run to completion, and all resources have been released. This method has no effect if the group is already shutdown.</source>
          <target state="translated">이 방법은 그룹을 종료로 표시합니다. 이 그룹에 바인딩 된 채널을 구성하려는 추가 시도는&lt;a href=&quot;shutdownchannelgroupexception&quot;&gt; &lt;code&gt;ShutdownChannelGroupException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다. 그룹의 모든 비동기 채널이 닫히고 활성으로 실행중인 완료 핸들러가 모두 완료되어 모든 자원이 해제되면 그룹이 종료됩니다. 그룹이 이미 종료 된 경우에는이 방법이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4bd105ab3143b10410eab88d0e59df3ae5ab16bb" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;ChronoLocalDate::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치합니다. 메소드 참조 &lt;code&gt;ChronoLocalDate::from&lt;/code&gt; 통해 조회로 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ac5120e3bd52460e6e089e4c46c26ce2f1b840e7" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;ChronoLocalDateTime::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치합니다. 메소드 참조 &lt;code&gt;ChronoLocalDateTime::from&lt;/code&gt; 통해 조회로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="183368440bb5769b4acd7d313fcc33686e552e51" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;ChronoZonedDateTime::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치하여 메소드 참조를 통해 조회로 사용될 수 있습니다. &lt;code&gt;ChronoZonedDateTime::from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d82d20a7a1494a7568e46b779689118249e44bf6" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;Chronology::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치하여 메소드 참조를 통해 조회로 사용될 수 있습니다. &lt;code&gt;Chronology::from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cea90316fb88c8c28da4f47c63da7e0a320c1082" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;HijrahDate::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치하여 메소드 참조를 통해 조회로 사용될 수 있습니다. &lt;code&gt;HijrahDate::from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7be7f49b8bc16966463730f7584f2b9b3152370e" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;JapaneseDate::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치하여 메소드 참조를 통해 조회로 사용될 수 있습니다. &lt;code&gt;JapaneseDate::from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22e4e2128ff8c1a41cf57413e39c789abdb2efc4" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;MinguoDate::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 시그니처와 일치하여 메소드 참조 &lt;code&gt;MinguoDate::from&lt;/code&gt; 통해 조회로 사용될 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="9ba7885f8f7bf403703ef79cba625829e63b867a" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;ThaiBuddhistDate::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스의 서명과 일치합니다. &lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; &lt;code&gt;ThaiBuddhistDate::from&lt;/code&gt; 메소드 참조를 통해 조회로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="151a8ab12c11fab6d22dbeb578df6cb816782058" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;aChronology::date&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스의 서명과 일치합니다. &lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;메소드 참조 &lt;code&gt;aChronology::date&lt;/code&gt; 를 통해 조회로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15f0eca90f7c5cc575db09166254ef53c7276122" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;aChronology::localDateTime&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스의 서명과 일치합니다. &lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;메소드 참조 &lt;code&gt;aChronology::localDateTime&lt;/code&gt; 통해 조회로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3c0b9acbca4d46fca9daf990a80203ee11ec47e" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;aChronology::zonedDateTime&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치합니다. 메소드 참조 &lt;code&gt;aChronology::zonedDateTime&lt;/code&gt; 통해 조회로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="44b767687682694c82976cf1a39c4b2b46cff9af" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;DayOfWeek::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치합니다. 메소드 참조 &lt;code&gt;DayOfWeek::from&lt;/code&gt; 통해 조회로 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5cb8f2a059ef45511793934786eaabd023ce42ec" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;Instant::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치합니다. 메소드 참조 &lt;code&gt;Instant::from&lt;/code&gt; 통해 조회로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="13154f1a9ecebad2a777e49819a84f24e0e69cb4" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;LocalDate::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치합니다. 메소드 참조 &lt;code&gt;LocalDate::from&lt;/code&gt; 통해 조회로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7c9e8d8492bed2fe614fac5fa306ef20277027a7" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;LocalDateTime::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치하여 메소드 참조를 통해 조회로 사용될 수 있습니다. &lt;code&gt;LocalDateTime::from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f24a5d62e15bf3f67196638710c031a5e203585" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;LocalTime::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치하여 메소드 참조를 통해 조회로 사용될 수 있습니다. &lt;code&gt;LocalTime::from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7bc36efb4efac3db95fb586701f584ff93c74d2e" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;Month::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치하여 메소드 참조를 통해 조회로 사용될 수 있습니다. &lt;code&gt;Month::from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a998edc76008d24866649f88e7e9d58793c9ac6" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;MonthDay::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치하여 메소드 참조를 통해 조회로 사용될 수 있습니다. &lt;code&gt;MonthDay::from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f38a7887b37ae3bebb712497a2af95a051e4e28b" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;OffsetDateTime::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치하여 메소드 참조 &lt;code&gt;OffsetDateTime::from&lt;/code&gt; 통해 조회로 사용될 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="9669db98b3799bf0527a97e0cad3ac99b1ee9ac4" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;OffsetTime::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치하여 메소드 참조 &lt;code&gt;OffsetTime::from&lt;/code&gt; 통해 조회로 사용될 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="b0f1311c7003c8358466cd838c5637eadee93e4a" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;Year::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치하여 메소드 참조 &lt;code&gt;Year::from&lt;/code&gt; 통해 조회로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ff52ef986de3006f73c3aab82753ed75019f518e" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;YearMonth::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치하여 메소드 참조 &lt;code&gt;YearMonth::from&lt;/code&gt; 통해 조회로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cd7ded58c5a7c1d96e2b2efb214f272632889b28" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;ZoneId::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치하여 메소드 참조 &lt;code&gt;ZoneId::from&lt;/code&gt; 통해 조회로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="45262e36bd147b147a453ec34749097650a697ea" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;ZoneOffset::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치하여 메소드 참조 &lt;code&gt;ZoneOffset::from&lt;/code&gt; 통해 조회로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1550588151e8ce50ca6009abbaa39d79bd38d733" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;ZonedDateTime::from&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 기능 인터페이스 &lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt; 의 서명과 일치하여 메소드 참조 &lt;code&gt;ZonedDateTime::from&lt;/code&gt; 통해 조회로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="64bed4e56de983085aa05b928d913af007a85f7b" translate="yes" xml:space="preserve">
          <source>This method may also be used to read database-specific abstract data types.</source>
          <target state="translated">이 메서드는 데이터베이스 특정 추상 데이터 유형을 읽는데도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c1c14582856fc193462aca3e01b0360950d370e" translate="yes" xml:space="preserve">
          <source>This method may also be used to read database-specific abstract data types. In the JDBC 2.0 API, the behavior of method &lt;code&gt;getObject&lt;/code&gt; is extended to materialize data of SQL user-defined types.</source>
          <target state="translated">이 메서드는 데이터베이스 특정 추상 데이터 유형을 읽는데도 사용할 수 있습니다. JDBC 2.0 API에서 &lt;code&gt;getObject&lt;/code&gt; 메소드의 동작 이 확장되어 SQL 사용자 정의 유형의 데이터를 구체화합니다.</target>
        </trans-unit>
        <trans-unit id="5b16bf47b83723a0f8dab0f28952e13be8b08e85" translate="yes" xml:space="preserve">
          <source>This method may be called at most once.</source>
          <target state="translated">이 메소드는 최대 한 번 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78a43de8dae8c31a955a3ede73579346e4f5c7fe" translate="yes" xml:space="preserve">
          <source>This method may be called from multiple threads in parallel. It must be thread-safe when invoked.</source>
          <target state="translated">이 메소드는 여러 스레드에서 병렬로 호출 될 수 있습니다. 호출 될 때 스레드로부터 안전해야합니다.</target>
        </trans-unit>
        <trans-unit id="6585c4dd5931dcf510c4f8fae01a67857b8ffc66" translate="yes" xml:space="preserve">
          <source>This method may be called repeatedly; the second and subsequent calls have no effect.</source>
          <target state="translated">이 메소드는 반복적으로 호출 될 수 있습니다. 두 번째 및 후속 호출은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="63ee5b49d5f6750d4acf7a8f7672f0a71d7c5839" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If a read or write operation upon this channel is invoked while an invocation of this method is in progress then that operation will first block until this invocation is complete. If a connection attempt fails, that is, if an invocation of this method throws a checked exception, then the channel will be closed.</source>
          <target state="translated">이 메소드는 언제든지 호출 할 수 있습니다. 이 메소드의 호출이 진행되는 동안이 채널에서 읽기 또는 쓰기 조작이 호출되면이 호출이 완료 될 때까지 해당 조작이 먼저 차단됩니다. 연결 시도가 실패하는 경우, 즉이 메소드의 호출로 확인 된 예외가 발생하면 채널이 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="c4e7298ffd742d1f317317b55f1bddb77d7a9ae1" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If a read or write operation upon this channel is invoked while an invocation of this method is in progress then that operation will first block until this invocation is complete. If a connection attempt is initiated but fails, that is, if an invocation of this method throws a checked exception, then the channel will be closed.</source>
          <target state="translated">이 메소드는 언제든지 호출 할 수 있습니다. 이 메소드의 호출이 진행되는 동안이 채널에서 읽기 또는 쓰기 조작이 호출되면이 호출이 완료 될 때까지 해당 조작이 먼저 차단됩니다. 연결 시도가 시작되었지만 실패한 경우, 즉이 메소드를 호출하여 확인 된 예외가 발생하면 채널이 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="bbb6e41f03da9e7796c8ef3b5cfa0d71b7a3b6f2" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If another thread has already initiated a read operation upon this channel, however, then an invocation of this method will block until the first operation is complete.</source>
          <target state="translated">이 메소드는 언제든지 호출 할 수 있습니다. 그러나 다른 스레드가이 채널에서 이미 읽기 작업을 시작한 경우 첫 번째 작업이 완료 될 때까지이 메서드의 호출이 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="fb34abc6978b90cca801955df869b1b537c69735" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If another thread has already initiated a read operation upon this channel, however, then an invocation of this method will block until the first operation is complete. If this channel's socket is not bound then this method will first cause the socket to be bound to an address that is assigned automatically, as if invoking the &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method with a parameter of &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 언제든지 호출 할 수 있습니다. 그러나 다른 스레드가 이미이 채널에서 읽기 작업을 시작한 경우이 메서드의 호출은 첫 번째 작업이 완료 될 때까지 차단됩니다. 이 채널의 소켓이 바인드되지 않은 경우이 메소드는 먼저 매개 변수가 &lt;code&gt;null&lt;/code&gt; 인&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것처럼 자동으로 할당 된 주소에 소켓이 바인드되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="97d8a3cea23f3f5dd331548174018d7613ac9cea" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If another thread has already initiated a read operation upon this channel, however, then an invocation of this method will block until the first operation is complete. If this channel's socket is not bound then this method will first cause the socket to be bound to an address that is assigned automatically, as if invoking the &lt;a href=&quot;datagramchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method with a parameter of &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 언제든지 호출 할 수 있습니다. 그러나 다른 스레드가이 채널에서 이미 읽기 작업을 시작한 경우 첫 번째 작업이 완료 될 때까지이 메서드의 호출이 차단됩니다. 이 채널의 소켓이 바인드되어 있지 않은 경우,이 메소드는 , 파라미터가 &lt;code&gt;null&lt;/code&gt; 의 &lt;a href=&quot;datagramchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것처럼, 소켓이 자동적으로 할당 된 주소에 바인드 됩니다.</target>
        </trans-unit>
        <trans-unit id="87dfa6f24f76e26d0921f1573308ed86b584bd10" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If another thread has already initiated a write operation upon this channel, however, then an invocation of this method will block until the first operation is complete.</source>
          <target state="translated">이 메소드는 언제든지 호출 할 수 있습니다. 그러나 다른 스레드가이 채널에서 쓰기 작업을 이미 시작한 경우 첫 번째 작업이 완료 될 때까지이 메소드의 호출이 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="a058709900b4688fbcad5085f3fe4ff81772d5fa" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If another thread has already initiated a write operation upon this channel, however, then an invocation of this method will block until the first operation is complete. If this channel's socket is not bound then this method will first cause the socket to be bound to an address that is assigned automatically, as if by invoking the &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method with a parameter of &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 언제든지 호출 할 수 있습니다. 그러나 다른 스레드가 이미이 채널에서 쓰기 작업을 시작한 경우이 메서드의 호출은 첫 번째 작업이 완료 될 때까지 차단됩니다. 이 채널의 소켓이 바인드되지 않은 경우이 메소드는 먼저 매개 변수가 &lt;code&gt;null&lt;/code&gt; 인&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것처럼 자동으로 할당 된 주소에 소켓이 바인드되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="f7b172c4b318a4900cba6cabc26273027474dce2" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If another thread has already initiated a write operation upon this channel, however, then an invocation of this method will block until the first operation is complete. If this channel's socket is not bound then this method will first cause the socket to be bound to an address that is assigned automatically, as if by invoking the &lt;a href=&quot;datagramchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method with a parameter of &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 언제든지 호출 할 수 있습니다. 그러나 다른 스레드가이 채널에서 쓰기 작업을 이미 시작한 경우 첫 번째 작업이 완료 될 때까지이 메소드의 호출이 차단됩니다. 이 채널의 소켓이 바인드되어 있지 않은 경우,이 메소드는 , 파라미터가 &lt;code&gt;null&lt;/code&gt; 의 &lt;a href=&quot;datagramchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것처럼, 소켓이 자동적으로 할당 된 주소에 바인드 됩니다.</target>
        </trans-unit>
        <trans-unit id="e0d453cd13881714b408166a430d7ef367765c16" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If some other thread has already invoked it, however, then another invocation will block until the first invocation is complete, after which it will return without effect.</source>
          <target state="translated">이 메소드는 언제든지 호출 할 수 있습니다. 그러나 다른 스레드가 이미 호출 한 경우 첫 번째 호출이 완료 될 때까지 다른 호출이 차단 된 후 아무런 효과없이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="07ae698184096543de09580883a069aecbd41dfd" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If this method is invoked while a selection operation is in progress then it has no effect upon that operation; the change to the key's interest set will be seen by the next selection operation.</source>
          <target state="translated">이 메서드는 언제든지 호출 할 수 있습니다. 선택 작업이 진행되는 동안이 메서드가 호출되면 해당 작업에 영향을주지 않습니다. 키의 관심 세트에 대한 변경은 다음 선택 작업에서 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d2803b2fbcfb0d61b3c676cabde73c79fdf2aa8" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If this method is invoked while a selection operation is in progress then it has no effect upon that operation; the new registration or change to the key's interest set will be seen by the next selection operation. If this method is invoked while an invocation of &lt;a href=&quot;#configureBlocking(boolean)&quot;&gt;&lt;code&gt;configureBlocking&lt;/code&gt;&lt;/a&gt; is in progress then it will block until the channel's blocking mode has been adjusted.</source>
          <target state="translated">이 메서드는 언제든지 호출 할 수 있습니다. 선택 작업이 진행되는 동안이 메서드가 호출되면 해당 작업에 영향을주지 않습니다. 새로운 등록 또는 키의 관심 세트 변경은 다음 선택 작업에서 볼 수 있습니다. &lt;a href=&quot;#configureBlocking(boolean)&quot;&gt; &lt;code&gt;configureBlocking&lt;/code&gt; &lt;/a&gt; 호출이 진행 되는 동안이 메서드가 호출 되면 채널의 차단 모드가 조정될 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="9d8874f15f4ccf8af8534b2ee953d6b106c497b4" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If this method is invoked while another invocation of this method or of the &lt;a href=&quot;selectablechannel#configureBlocking-boolean-&quot;&gt;&lt;code&gt;configureBlocking&lt;/code&gt;&lt;/a&gt; method is in progress then it will first block until the other operation is complete. This method will then synchronize on the selector's key set and therefore may block if invoked concurrently with another registration or selection operation involving the same selector.</source>
          <target state="translated">이 메소드는 언제든지 호출 할 수 있습니다. 이 메소드 또는 &lt;a href=&quot;selectablechannel#configureBlocking-boolean-&quot;&gt; &lt;code&gt;configureBlocking&lt;/code&gt; &lt;/a&gt; 메소드 의 다른 호출이 진행되는 동안이 메소드가 호출 되면 다른 조작이 완료 될 때까지 먼저 차단됩니다. 그런 다음이 방법은 선택기의 키 세트에서 동기화되므로 동일한 선택기를 포함하는 다른 등록 또는 선택 작업과 동시에 호출되는 경우 차단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d7815f3c8928d6111c4c25114f73627a45d89a3" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. It synchronizes on the selector's cancelled-key set, and therefore may block briefly if invoked concurrently with a cancellation or selection operation involving the same selector.</source>
          <target state="translated">이 메소드는 언제든지 호출 할 수 있습니다. 선택기의 취소 된 키 세트에서 동기화되므로 동일한 선택기와 관련된 취소 또는 선택 조작과 동시에 호출되는 경우 잠시 차단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc88b4f9995e416d1012e6ada90de268269c98dc" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. It will not have any effect on read or write operations that are already in progress at the moment that it is invoked.</source>
          <target state="translated">이 메소드는 언제든지 호출 할 수 있습니다. 호출 된 시점에서 이미 진행중인 읽기 또는 쓰기 작업에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d20bd02f53f0abc1bcccb5646e0e5070b2192af5" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. It will not have any effect on read or write operations that are already in progress at the moment that it is invoked. If this channel's socket is not bound then this method will first cause the socket to be bound to an address that is assigned automatically, as if invoking the &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method with a parameter of &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 언제든지 호출 할 수 있습니다. 호출되는 시점에 이미 진행중인 읽기 또는 쓰기 작업에는 영향을주지 않습니다. 이 채널의 소켓이 바인드되지 않은 경우이 메소드는 먼저 매개 변수가 &lt;code&gt;null&lt;/code&gt; 인&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것처럼 자동으로 할당 된 주소에 소켓이 바인드되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="e010dba7e883e9cc772c2dfa4328263d83f4af89" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. It will not have any effect on read or write operations that are already in progress at the moment that it is invoked. If this channel's socket is not bound then this method will first cause the socket to be bound to an address that is assigned automatically, as if invoking the &lt;a href=&quot;datagramchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method with a parameter of &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 언제든지 호출 할 수 있습니다. 호출 된 시점에서 이미 진행중인 읽기 또는 쓰기 작업에는 영향을 미치지 않습니다. 이 채널의 소켓이 바인드되어 있지 않은 경우,이 메소드는 , 파라미터가 &lt;code&gt;null&lt;/code&gt; 의 &lt;a href=&quot;datagramchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것처럼, 소켓이 자동적으로 할당 된 주소에 바인드 됩니다.</target>
        </trans-unit>
        <trans-unit id="c163301ef227ad12e6f276fad354f6797a4c1833" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. Some channel types may not allow more than one read to be outstanding at any given time. If a thread initiates a read operation before a previous read operation has completed then a &lt;a href=&quot;readpendingexception&quot;&gt;&lt;code&gt;ReadPendingException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">이 메소드는 언제든지 호출 할 수 있습니다. 일부 채널 유형은 주어진 시간에 하나 이상의 읽기가 미해결되도록 허용하지 않을 수 있습니다. 스레드가 이전 읽기 작업이 완료되기 전에 읽기 작업을 시작하면 &lt;a href=&quot;readpendingexception&quot;&gt; &lt;code&gt;ReadPendingException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7caca2c8037750c753708585aaeb6aaff4c1fbc9" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. Some channel types may not allow more than one write to be outstanding at any given time. If a thread initiates a write operation before a previous write operation has completed then a &lt;a href=&quot;writependingexception&quot;&gt;&lt;code&gt;WritePendingException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">이 메소드는 언제든지 호출 할 수 있습니다. 일부 채널 유형은 주어진 시간에 둘 이상의 쓰기가 미해결되도록 허용하지 않을 수 있습니다. 스레드가 이전 쓰기 작업이 완료되기 전에 쓰기 작업을 시작하면 &lt;a href=&quot;writependingexception&quot;&gt; &lt;code&gt;WritePendingException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9d2f307030083dd150bccbf7e6545a39340de101" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. The new blocking mode will only affect I/O operations that are initiated after this method returns. For some implementations this may require blocking until all pending I/O operations are complete.</source>
          <target state="translated">이 메소드는 언제든지 호출 할 수 있습니다. 새로운 차단 모드는이 메소드가 리턴 된 후에 시작된 I / O 조작에만 영향을줍니다. 일부 구현의 경우 보류중인 모든 I / O 작업이 완료 될 때까지 차단해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c46e90da40e0941dca9fb83de2c1c52caf821881" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. Whether or not it blocks, and for how long, is implementation-dependent.</source>
          <target state="translated">이 메소드는 언제든지 호출 할 수 있습니다. 차단 여부 및 기간은 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="4876e3af24f82bdca16d2dbe5dd10e6726d51912" translate="yes" xml:space="preserve">
          <source>This method may be invoked before the publisher is subscribed to. This method may be invoked more than once by the HTTP client implementation, and MUST return the same constant value each time.</source>
          <target state="translated">이 메서드는 게시자가 구독되기 전에 호출 될 수 있습니다. 이 메서드는 HTTP 클라이언트 구현에 의해 두 번 이상 호출 될 수 있으며 매번 동일한 상수 값을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="fca71c654c6c4a1448dcfc2c9c6cffb17d00042b" translate="yes" xml:space="preserve">
          <source>This method may be overridden by a provider to return the digest length.</source>
          <target state="translated">이 메소드는 다이제스트 길이를 리턴하기 위해 제공자가 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c078c0c4a69f1d915ce146b0122b74b60143486" translate="yes" xml:space="preserve">
          <source>This method may be overridden by subclasses to provide their own initialization behaviors.</source>
          <target state="translated">이 메서드는 자체 초기화 동작을 제공하기 위해 하위 클래스에 의해 재정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1eb0bb3c20b7e410c4131d82450240cfb2a11f14" translate="yes" xml:space="preserve">
          <source>This method may be overridden by subclasses to provide their own initialization behaviors. When invoked any resources required by the BeanContextChild should be obtained from the current BeanContext.</source>
          <target state="translated">이 메소드는 자체 초기화 동작을 제공하기 위해 서브 클래스에 의해 대체 될 수 있습니다. BeanContextChild에 필요한 자원을 호출하면 현재 BeanContext에서 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="1265a77d4ca72308566acc3cebfad8cf269ab09c" translate="yes" xml:space="preserve">
          <source>This method may be overridden by subclasses to provide their own release behaviors.</source>
          <target state="translated">이 메서드는 자체 릴리스 동작을 제공하기 위해 하위 클래스에 의해 재정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a304dadf3249e61c60f51360a60dad3cf993c26" translate="yes" xml:space="preserve">
          <source>This method may be overridden by subclasses to provide their own release behaviors. When invoked any resources held by this instance obtained from its current BeanContext property should be released since the object is no longer nested within that BeanContext.</source>
          <target state="translated">이 메소드는 자체 릴리스 동작을 제공하기 위해 서브 클래스에 의해 대체 될 수 있습니다. 현재 BeanContext 속성에서 얻은이 인스턴스가 보유한 모든 리소스를 호출하면 객체가 더 이상 해당 BeanContext 내에 중첩되지 않으므로 해제해야합니다.</target>
        </trans-unit>
        <trans-unit id="0d55991a1b2e5a6461ba13e37f0f15a127e36842" translate="yes" xml:space="preserve">
          <source>This method may be overridden in subclasses, but if so, must still ensure that these properties hold. In particular, the &lt;code&gt;cancel&lt;/code&gt; method itself must not throw exceptions.</source>
          <target state="translated">이 메소드는 서브 클래스에서 대체 될 수 있지만,이 경우 여전히 이러한 특성을 보유해야합니다. 특히, &lt;code&gt;cancel&lt;/code&gt; 메소드 자체는 예외를 발생시키지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="7cab176de1bca317891395340e0aad5bde002f6c" translate="yes" xml:space="preserve">
          <source>This method may be overridden in subclasses. The default behavior in this base class is that the first call is reported to System.err, and subsequent calls are ignored.</source>
          <target state="translated">이 메소드는 서브 클래스에서 재정의 될 수 있습니다. 이 기본 클래스의 기본 동작은 첫 번째 호출이 System.err에보고되고 후속 호출은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="47f59d7d281222d2d93f8b7293cc888041f47d39" translate="yes" xml:space="preserve">
          <source>This method may be used by a caller in class &lt;code&gt;C&lt;/code&gt; to enable access to a &lt;a href=&quot;member&quot;&gt;&lt;code&gt;member&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;member#getDeclaringClass()&quot;&gt;&lt;code&gt;declaring class&lt;/code&gt;&lt;/a&gt;&lt;code&gt;D&lt;/code&gt; if any of the following hold:</source>
          <target state="translated">이 메서드는 다음 중 하나라도 유지되는 경우 &lt;a href=&quot;member#getDeclaringClass()&quot;&gt; &lt;code&gt;declaring class&lt;/code&gt; &lt;/a&gt; &lt;code&gt;D&lt;/code&gt; 선언 의 &lt;a href=&quot;member&quot;&gt; &lt;code&gt;member&lt;/code&gt; &lt;/a&gt; 에 대한 액세스를 활성화하기 위해 클래스 &lt;code&gt;C&lt;/code&gt; 의 호출자가 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b8d2c27c585731a0abade22f689029269449cf7" translate="yes" xml:space="preserve">
          <source>This method may be used by the &lt;a href=&quot;../files#isReadable(java.nio.file.Path)&quot;&gt;&lt;code&gt;isReadable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../files#isWritable(java.nio.file.Path)&quot;&gt;&lt;code&gt;isWritable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../files#isExecutable(java.nio.file.Path)&quot;&gt;&lt;code&gt;isExecutable&lt;/code&gt;&lt;/a&gt; methods to check the accessibility of a file.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../files#isReadable(java.nio.file.Path)&quot;&gt; &lt;code&gt;isReadable&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../files#isWritable(java.nio.file.Path)&quot;&gt; &lt;code&gt;isWritable&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../files#isExecutable(java.nio.file.Path)&quot;&gt; &lt;code&gt;isExecutable&lt;/code&gt; &lt;/a&gt; 메서드에서 파일의 접근성을 확인하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eeeaca67eebbcded76ba0f0bb85b3d4ff245fe26" translate="yes" xml:space="preserve">
          <source>This method may be used by the &lt;a href=&quot;../files#isReadable-java.nio.file.Path-&quot;&gt;&lt;code&gt;isReadable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../files#isWritable-java.nio.file.Path-&quot;&gt;&lt;code&gt;isWritable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../files#isExecutable-java.nio.file.Path-&quot;&gt;&lt;code&gt;isExecutable&lt;/code&gt;&lt;/a&gt; methods to check the accessibility of a file.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../files#isReadable-java.nio.file.Path-&quot;&gt; &lt;code&gt;isReadable&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../files#isWritable-java.nio.file.Path-&quot;&gt; &lt;code&gt;isWritable&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../files#isExecutable-java.nio.file.Path-&quot;&gt; &lt;code&gt;isExecutable&lt;/code&gt; &lt;/a&gt; 메소드에서 파일의 액세스 가능성을 확인하는 데 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c5fd44ffb016caed67a281608469ded4a8fe690" translate="yes" xml:space="preserve">
          <source>This method may be used multiple times to add multiple JAR files to be searched in the order that this method was invoked.</source>
          <target state="translated">이 메소드는 여러 번 사용되어이 메소드가 호출 된 순서대로 검색 할 여러 JAR 파일을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7f2d694d7284b4d865dd2a2d207d10ee8c6b7d2" translate="yes" xml:space="preserve">
          <source>This method may be used to enable access to all reflected objects in the array when access to each reflected object can be enabled as specified by &lt;a href=&quot;#setAccessible(boolean)&quot;&gt;&lt;code&gt;setAccessible(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#setAccessible(boolean)&quot;&gt; &lt;code&gt;setAccessible(boolean)&lt;/code&gt; &lt;/a&gt; 지정된대로 각 반사 된 객체에 대한 액세스를 활성화 할 수있을 때 배열의 모든 반사 된 객체에 대한 액세스를 활성화하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="423277e3d8d80a8c7c093ff691fc71c48df5648f" translate="yes" xml:space="preserve">
          <source>This method may be used to iterate over the JapaneseEras as follows:</source>
          <target state="translated">이 방법은 다음과 같이 JapaneseEras를 반복하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c422eed336dc833f45bb1aef761aebead8fc4d65" translate="yes" xml:space="preserve">
          <source>This method may be used to strip &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;&lt;code&gt;white space&lt;/code&gt;&lt;/a&gt; from the beginning and end of a string.</source>
          <target state="translated">이 방법은 문자열의 시작과 끝에서 &lt;a href=&quot;character#isWhitespace(int)&quot;&gt; &lt;code&gt;white space&lt;/code&gt; &lt;/a&gt; 을 제거하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1a11e541bd443f3d7a9b202bd6d305bbebb4f84b" translate="yes" xml:space="preserve">
          <source>This method may be used to trim &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;&lt;code&gt;white space&lt;/code&gt;&lt;/a&gt; from the beginning of a string.</source>
          <target state="translated">이 메서드는 문자열의 시작 부분에서 &lt;a href=&quot;character#isWhitespace(int)&quot;&gt; &lt;code&gt;white space&lt;/code&gt; &lt;/a&gt; 제거하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d10aea554c360dab396795b23d03dc6b261b872b" translate="yes" xml:space="preserve">
          <source>This method may be used to trim &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;&lt;code&gt;white space&lt;/code&gt;&lt;/a&gt; from the end of a string.</source>
          <target state="translated">이 메서드는 문자열 끝에서 &lt;a href=&quot;character#isWhitespace(int)&quot;&gt; &lt;code&gt;white space&lt;/code&gt; &lt;/a&gt; 제거하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9802897e37af256a367953439c922c9be2a74b6f" translate="yes" xml:space="preserve">
          <source>This method may be used to trim space (as defined above) from the beginning and end of a string.</source>
          <target state="translated">이 메서드는 문자열의 시작과 끝에서 공백 (위에 정의 된대로)을 자르는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="555850bf1f4c41d86e90ad7f126646ac30741843" translate="yes" xml:space="preserve">
          <source>This method may be used to trim whitespace (as defined above) from the beginning and end of a string.</source>
          <target state="translated">이 방법은 문자열의 시작과 끝에서 공백을 다듬기 위해 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30d8a391914d3ac7aa09ee4695287226a214bdcd" translate="yes" xml:space="preserve">
          <source>This method may be useful as one part of a cancellation scheme. It may fail to remove tasks that have been converted into other forms before being placed on the internal queue. For example, a task entered using &lt;code&gt;submit&lt;/code&gt; might be converted into a form that maintains &lt;code&gt;Future&lt;/code&gt; status. However, in such cases, method &lt;a href=&quot;#purge()&quot;&gt;&lt;code&gt;purge()&lt;/code&gt;&lt;/a&gt; may be used to remove those Futures that have been cancelled.</source>
          <target state="translated">이 방법은 취소 계획의 일부로 유용 할 수 있습니다. 내부 대기열에 배치되기 전에 다른 양식으로 변환 된 작업을 제거하지 못할 수 있습니다. 예를 들어 &lt;code&gt;submit&lt;/code&gt; 사용하여 입력 한 작업은 &lt;code&gt;Future&lt;/code&gt; 상태 를 유지하는 양식으로 변환 될 수 있습니다 . 그러나 그러한 경우 &lt;a href=&quot;#purge()&quot;&gt; &lt;code&gt;purge()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 취소 된 Future를 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90dc78f52a6b413211264d91d8f20c267620e3a3" translate="yes" xml:space="preserve">
          <source>This method may be useful as one part of a cancellation scheme. It may fail to remove tasks that have been converted into other forms before being placed on the internal queue. For example, a task entered using &lt;code&gt;submit&lt;/code&gt; might be converted into a form that maintains &lt;code&gt;Future&lt;/code&gt; status. However, in such cases, method &lt;a href=&quot;threadpoolexecutor#purge--&quot;&gt;&lt;code&gt;purge()&lt;/code&gt;&lt;/a&gt; may be used to remove those Futures that have been cancelled.</source>
          <target state="translated">이 방법은 취소 체계의 일부로 유용 할 수 있습니다. 내부 큐에 배치하기 전에 다른 양식으로 변환 된 태스크를 제거하지 못할 수 있습니다. 예를 들어, &lt;code&gt;submit&lt;/code&gt; 사용하여 입력 한 작업은 &lt;code&gt;Future&lt;/code&gt; 상태 를 유지하는 양식으로 변환 될 수 있습니다 . 그러나 그러한 경우, &lt;a href=&quot;threadpoolexecutor#purge--&quot;&gt; &lt;code&gt;purge()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 취소 된 선물을 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3972bec37d6c229b980357ba686b0c040a1d0539" translate="yes" xml:space="preserve">
          <source>This method may be useful when forcing completion as soon as any one (versus all) of several subtask results are obtained. However, in the common (and recommended) case in which &lt;code&gt;
 setRawResult&lt;/code&gt; is not overridden, this effect can be obtained more simply using &lt;a href=&quot;#quietlyCompleteRoot()&quot;&gt;&lt;code&gt;quietlyCompleteRoot()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 여러 하위 작업 결과 중 하나 (전체가 아닌)를 얻는 즉시 강제로 완료 할 때 유용 할 수 있습니다. 그러나 &lt;code&gt; setRawResult&lt;/code&gt; 가 재정의되지 않는 일반적인 (권장되는) 경우 에이 효과는 &lt;a href=&quot;#quietlyCompleteRoot()&quot;&gt; &lt;code&gt;quietlyCompleteRoot()&lt;/code&gt; &lt;/a&gt; 를 사용하여보다 간단하게 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5c6e4bcf82780178dbb5ca3daf924e68571ff49b" translate="yes" xml:space="preserve">
          <source>This method may be useful when forcing completion as soon as any one (versus all) of several subtask results are obtained. However, in the common (and recommended) case in which &lt;code&gt;setRawResult&lt;/code&gt; is not overridden, this effect can be obtained more simply using &lt;code&gt;quietlyCompleteRoot();&lt;/code&gt;.</source>
          <target state="translated">이 방법은 여러 하위 작업 결과 중 하나 (모두가 아닌)를 얻 자마자 강제로 완료 할 때 유용합니다. 그러나 &lt;code&gt;setRawResult&lt;/code&gt; 를 재정의하지 않는 일반적인 (권장되는) 경우에는 &lt;code&gt;quietlyCompleteRoot();&lt;/code&gt; 를 사용 하여이 효과를보다 간단하게 얻을 수 있습니다 ..</target>
        </trans-unit>
        <trans-unit id="d01f149ee587d176420f76cf89e39d5e716f2578" translate="yes" xml:space="preserve">
          <source>This method may be useful when processing repeating annotations by looking for an annotation type and its containing annotation type at the same time.</source>
          <target state="translated">이 방법은 주석 유형과 포함 된 주석 유형을 동시에 검색하여 반복되는 주석을 처리 할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6bac50c5cc6cdefc7cbb2eb88f59ddb7ec3c08f" translate="yes" xml:space="preserve">
          <source>This method may be utilized to create a new buffer where unit size bytes from index, that is a multiple of the unit size, may be accessed atomically, if supported by the native platform.</source>
          <target state="translated">이 방법은 기본 플랫폼에서 지원하는 경우 단위 크기의 배수 인 인덱스의 단위 크기 바이트를 원자 적으로 액세스 할 수있는 새 버퍼를 만드는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f133929c19d34a08e64d131ed8f0e79c9e65d782" translate="yes" xml:space="preserve">
          <source>This method may be utilized to determine if unit size bytes from an index can be accessed atomically, if supported by the native platform.</source>
          <target state="translated">이 방법은 기본 플랫폼에서 지원하는 경우 인덱스의 단위 크기 바이트에 원자 적으로 액세스 할 수 있는지 여부를 결정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee8a33b2b584d58f65acd3ef5b5a9bac75888fef" translate="yes" xml:space="preserve">
          <source>This method may block indefinitely reading from the input stream (or writing to the file). The behavior for the case that the input stream is</source>
          <target state="translated">이 메소드는 입력 스트림에서 무한히 읽거나 파일에 쓰는 것을 차단할 수 있습니다. 입력 스트림이 다음과 같은 경우의 동작</target>
        </trans-unit>
        <trans-unit id="dd0fcf84974a42c714e1e30f9519fa047759d213" translate="yes" xml:space="preserve">
          <source>This method may block indefinitely reading from the input stream, or writing to the output stream. The behavior for the case where the input and/or output stream is</source>
          <target state="translated">이 메서드는 입력 스트림에서 읽기 또는 출력 스트림에 쓰기를 무기한 차단할 수 있습니다. 입력 및 / 또는 출력 스트림이있는 경우의 동작</target>
        </trans-unit>
        <trans-unit id="50681947609faa8ee4cdeacf1d76d8ac6b190b15" translate="yes" xml:space="preserve">
          <source>This method may block indefinitely reading from the reader, or writing to the writer. The behavior for the case where the reader and/or writer is</source>
          <target state="translated">이 방법은 독자의 읽기 또는 쓰기를 무기한으로 차단할 수 있습니다. 독자 및 / 또는 작성자가있는 경우의 동작</target>
        </trans-unit>
        <trans-unit id="5d30c9f7712a31b657a7bbb8d54ff8b8b2c7ec98" translate="yes" xml:space="preserve">
          <source>This method may block indefinitely writing to the output stream (or reading from the file). The behavior for the case that the output stream is</source>
          <target state="translated">이 메소드는 출력 스트림에 무기한 쓰기 (또는 파일에서 읽기)를 차단할 수 있습니다. 출력 스트림이 다음과 같은 경우의 동작</target>
        </trans-unit>
        <trans-unit id="775ba2e89369a42d835e2cc5272a12a7f47599c9" translate="yes" xml:space="preserve">
          <source>This method may defer calling the &lt;a href=&quot;system.loggerfinder#getLogger(java.lang.String,java.lang.Module)&quot;&gt;&lt;code&gt;LoggerFinder.getLogger&lt;/code&gt;&lt;/a&gt; method to create an actual logger supplied by the logging backend, for instance, to allow loggers to be obtained during the system initialization time.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;system.loggerfinder#getLogger(java.lang.String,java.lang.Module)&quot;&gt; &lt;code&gt;LoggerFinder.getLogger&lt;/code&gt; &lt;/a&gt; 메서드 호출을 연기 하여 로깅 백엔드에서 제공하는 실제 로거를 만들 수 있습니다. 예를 들어 시스템 초기화 시간 동안 로거를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="720528575a962b8c797b0265f81d48b5afda1734" translate="yes" xml:space="preserve">
          <source>This method may fail for a number of reasons. For example, the track number specified may not be valid for the current sequence, or the sequencer may not support this functionality. An application which needs to verify whether this operation succeeded should follow this call with a call to &lt;a href=&quot;#getTrackSolo(int)&quot;&gt;&lt;code&gt;getTrackSolo(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 여러 가지 이유로 실패 할 수 있습니다. 예를 들어 지정된 트랙 번호가 현재 시퀀스에 유효하지 않거나 시퀀서가이 기능을 지원하지 않을 수 있습니다. 이 작업이 성공했는지 확인해야하는 응용 프로그램은 &lt;a href=&quot;#getTrackSolo(int)&quot;&gt; &lt;code&gt;getTrackSolo(int)&lt;/code&gt; &lt;/a&gt; 호출하여이 호출을 따라야합니다 .</target>
        </trans-unit>
        <trans-unit id="f0ca405bc454d65a30fcfaba1f7467fa23cbbab5" translate="yes" xml:space="preserve">
          <source>This method may fail for a number of reasons. For example, the track number specified may not be valid for the current sequence, or the sequencer may not support this functionality. An application which needs to verify whether this operation succeeded should follow this call with a call to &lt;code&gt;&lt;a href=&quot;sequencer#getTrackSolo-int-&quot;&gt;&lt;code&gt;getTrackSolo(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 방법은 여러 가지 이유로 실패 할 수 있습니다. 예를 들어, 지정된 트랙 번호가 현재 시퀀스에 유효하지 않거나 시퀀서가이 기능을 지원하지 않을 수 있습니다. 이 작업이 성공했는지 확인해야하는 응용 프로그램은 &lt;code&gt;&lt;a href=&quot;sequencer#getTrackSolo-int-&quot;&gt;&lt;code&gt;getTrackSolo(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 호출하여이 호출을 수행해야합니다. .</target>
        </trans-unit>
        <trans-unit id="13cfc0faa9a3698ec0c89cdef689a843a661a929" translate="yes" xml:space="preserve">
          <source>This method may modify this encoder's state; it should therefore not be invoked if an &lt;a href=&quot;#steps&quot;&gt;encoding operation&lt;/a&gt; is already in progress.</source>
          <target state="translated">이 방법은이 인코더의 상태를 수정할 수 있습니다. 따라서 &lt;a href=&quot;#steps&quot;&gt;인코딩 작업&lt;/a&gt; 이 이미 진행중인 경우에는 호출되지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="9290868d82bfe3da4c42554fa0c609defcf62ef1" translate="yes" xml:space="preserve">
          <source>This method may modify this encoder's state; it should therefore not be invoked if an encoding operation is already in progress.</source>
          <target state="translated">이 메소드는이 인코더의 상태를 수정할 수 있습니다. 따라서 인코딩 작업이 이미 진행중인 경우에는 호출되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="7f6e9c04c10962bf5487817f039a6e8b7e004df8" translate="yes" xml:space="preserve">
          <source>This method may not be called on a closed connection; doing so will cause an &lt;code&gt;SQLException&lt;/code&gt; to be thrown.</source>
          <target state="translated">닫힌 연결에서는이 메서드를 호출 할 수 없습니다. 그렇게하면 &lt;code&gt;SQLException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3037b5311422e5bb406a3be5f52283fd7469d708" translate="yes" xml:space="preserve">
          <source>This method may not be used to compare paths that are associated with different file system providers.</source>
          <target state="translated">이 방법은 다른 파일 시스템 제공자와 연관된 경로를 비교하는 데 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="664c8d0c6ff062ca2d0fae072b4046c07d1c92e8" translate="yes" xml:space="preserve">
          <source>This method may only be called after a call to &lt;code&gt;prepareReplacePixels&lt;/code&gt;, or else an &lt;code&gt;IllegalStateException&lt;/code&gt; will be thrown.</source>
          <target state="translated">이 메소드는 &lt;code&gt;prepareReplacePixels&lt;/code&gt; 호출 한 후에 만 ​​호출 할 수 있습니다. 그렇지 않으면 &lt;code&gt;IllegalStateException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="80ad7aafeb24194c3ff80c06142118184d24f050" translate="yes" xml:space="preserve">
          <source>This method may only be invoked if this channel's socket is connected, and it only accepts datagrams from the socket's peer. If there are more bytes in the datagram than remain in the given buffer then the remainder of the datagram is silently discarded. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 메소드는이 채널의 소켓이 연결되어 있고 소켓의 피어에서 데이터 그램 만 허용하는 경우에만 호출 할 수 있습니다. 데이터 그램에 지정된 버퍼에 남아있는 것보다 많은 바이트가있는 경우 나머지 데이터 그램은 자동으로 삭제됩니다. 그렇지 않으면이 메소드는 &lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="85ddf706a00ce13f5d8368ac314ccc092914db90" translate="yes" xml:space="preserve">
          <source>This method may only be invoked if this channel's socket is connected, and it only accepts datagrams from the socket's peer. If there are more bytes in the datagram than remain in the given buffers then the remainder of the datagram is silently discarded. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;scatteringbytechannel&quot;&gt;&lt;code&gt;ScatteringByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 메소드는이 채널의 소켓이 연결되어 있고 소켓의 피어에서 데이터 그램 만 허용하는 경우에만 호출 할 수 있습니다. 데이터 그램에 주어진 버퍼에 남아있는 것보다 많은 바이트가 있으면 나머지 데이터 그램은 자동으로 삭제됩니다. 그렇지 않으면이 메소드는 &lt;a href=&quot;scatteringbytechannel&quot;&gt; &lt;code&gt;ScatteringByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="b8e1350ff2756ae2be28f871fb760f1312c051e0" translate="yes" xml:space="preserve">
          <source>This method may only be invoked if this channel's socket is connected, in which case it sends datagrams directly to the socket's peer. Otherwise it behaves exactly as specified in the &lt;a href=&quot;gatheringbytechannel&quot;&gt;&lt;code&gt;GatheringByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 메소드는이 채널의 소켓이 연결된 경우에만 호출 할 수 있으며,이 경우 데이터 그램을 소켓의 피어로 직접 보냅니다. 그렇지 않으면 &lt;a href=&quot;gatheringbytechannel&quot;&gt; &lt;code&gt;GatheringByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="cad6db78ccecbb36a1013d4c3b22a7787206fa62" translate="yes" xml:space="preserve">
          <source>This method may only be invoked if this channel's socket is connected, in which case it sends datagrams directly to the socket's peer. Otherwise it behaves exactly as specified in the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 메소드는이 채널의 소켓이 연결된 경우에만 호출 할 수 있으며,이 경우 데이터 그램을 소켓의 피어로 직접 보냅니다. 그렇지 않으면 &lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스에 지정된대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="b3924b1b87bc1f4c339d636c169be3cc7642f217" translate="yes" xml:space="preserve">
          <source>This method may return &lt;code&gt;null&lt;/code&gt; for any reason, including emptiness, inability to split after traversal has commenced, data structure constraints, and efficiency considerations.</source>
          <target state="translated">이 메소드는 공허함, 순회 시작 후 분할 불가능, 데이터 구조 제한 조건 및 효율성 고려 사항을 포함하여 어떤 이유로 든 &lt;code&gt;null&lt;/code&gt; 을 리턴 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b7eca330f8927162ece445852015aeb622c5901" translate="yes" xml:space="preserve">
          <source>This method may return &lt;code&gt;null&lt;/code&gt; for any reason, including emptiness, inability to split after traversal has commenced, data structure constraints, and efficiency considerations. This implementation permits limited parallelism.</source>
          <target state="translated">이 메소드는 공허함, 순회 시작 후 분할 불가능, 데이터 구조 제한 조건 및 효율성 고려 사항을 포함하여 어떤 이유로 든 &lt;code&gt;null&lt;/code&gt; 을 리턴 할 수 있습니다 . 이 구현은 제한된 병렬 처리를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="2ca689601a61123c0cfd011d20cb2a44d99c79b3" translate="yes" xml:space="preserve">
          <source>This method may return a &lt;code&gt;Referenceable&lt;/code&gt; object. The service provider obtaining this object may choose to store it directly, or to extract its reference (using &lt;code&gt;Referenceable.getReference()&lt;/code&gt;) and store that instead.</source>
          <target state="translated">이 메소드는 &lt;code&gt;Referenceable&lt;/code&gt; 객체를 반환 할 수 있습니다 . 이 객체를 얻는 서비스 제공자는 객체를 직접 저장하거나 참조를 추출 ( &lt;code&gt;Referenceable.getReference()&lt;/code&gt; )하여 대신 저장 하도록 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d8718a225206359486173ae3ab87563c1d0a7a4b" translate="yes" xml:space="preserve">
          <source>This method may return different results at different times if new charset providers are dynamically made available to the current Java virtual machine. In the absence of such changes, the charsets returned by this method are exactly those that can be retrieved via the &lt;a href=&quot;#forName(java.lang.String)&quot;&gt;&lt;code&gt;forName&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드는 새 문자 세트 제공자를 현재 Java 가상 머신에서 동적으로 사용할 수있는 경우 다른 시간에 다른 결과를 리턴 할 수 있습니다. 이러한 변경 사항이없는 경우이 메서드가 반환하는 문자 집합은 정확히 &lt;a href=&quot;#forName(java.lang.String)&quot;&gt; &lt;code&gt;forName&lt;/code&gt; &lt;/a&gt; 메서드 를 통해 검색 할 수있는 문자 집합 입니다.</target>
        </trans-unit>
        <trans-unit id="da7254c2e453139e7d81c839c28178b8c6fa54f3" translate="yes" xml:space="preserve">
          <source>This method may return different results at different times if new charset providers are dynamically made available to the current Java virtual machine. In the absence of such changes, the charsets returned by this method are exactly those that can be retrieved via the &lt;a href=&quot;charset#forName-java.lang.String-&quot;&gt;&lt;code&gt;forName&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">현재 Java 가상 머신에서 새 문자 세트 제공자를 동적으로 사용할 수있게되면이 메소드는 다른 시간에 다른 결과를 리턴 할 수 있습니다. 이러한 변경이 없으면이 메소드가 리턴 한 문자 세트는 &lt;a href=&quot;charset#forName-java.lang.String-&quot;&gt; &lt;code&gt;forName&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 검색 할 수있는 문자 세트 입니다.</target>
        </trans-unit>
        <trans-unit id="7f24bb45581493e48b7f661a1b82a7f31f609480" translate="yes" xml:space="preserve">
          <source>This method may skip more bytes than what are remaining in the backing file. This produces no exception and the number of bytes skipped may include some number of bytes that were beyond the EOF of the backing file. Attempting to read from the stream after skipping past the end will result in -1 indicating the end of the file.</source>
          <target state="translated">이 방법은 백업 파일에 남아있는 것보다 많은 바이트를 건너 뛸 수 있습니다. 이로 인해 예외는 발생하지 않으며 건너 뛴 바이트 수에는 백업 파일의 EOF를 벗어난 바이트 수가 포함될 수 있습니다. 끝을지나 건너 뛴 후 스트림에서 읽으려고하면 파일의 끝을 나타내는 -1이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="923be3cc88e0a663d7b51f4ac429f46de54928ec" translate="yes" xml:space="preserve">
          <source>This method may skip over some smaller number of bytes, possibly zero. This may result from any of a number of conditions; reaching end of file before &lt;code&gt;n&lt;/code&gt; bytes have been skipped is only one possibility. This method never throws an &lt;code&gt;EOFException&lt;/code&gt;. The actual number of bytes skipped is returned. If &lt;code&gt;n&lt;/code&gt; is negative, no bytes are skipped.</source>
          <target state="translated">이 방법은 0보다 작은 바이트 수를 건너 뛸 수 있습니다. 여러 조건 중 하나에서 발생할 수 있습니다. &lt;code&gt;n&lt;/code&gt; 바이트를 건너 뛰기 전에 파일 끝에 도달 하면 한 가지 가능성이 있습니다. 이 메소드는 &lt;code&gt;EOFException&lt;/code&gt; 을 발생 시키지 않습니다 . 건너 뛴 실제 바이트 수가 반환됩니다. 경우 &lt;code&gt;n&lt;/code&gt; 이 부의 경우, 바이트는 스킵되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7cce1575593f3fb7ac32b007a492ace0408bd37a" translate="yes" xml:space="preserve">
          <source>This method may throw a &lt;code&gt;ClassCastException&lt;/code&gt; if any &lt;code&gt;Object&lt;/code&gt; in &lt;code&gt;keystrokes&lt;/code&gt; is not an &lt;code&gt;AWTKeyStroke&lt;/code&gt;.</source>
          <target state="translated">이 방법은 던질 수 &lt;code&gt;ClassCastException&lt;/code&gt; 이 있는 경우 &lt;code&gt;Object&lt;/code&gt; 의 &lt;code&gt;keystrokes&lt;/code&gt; 아니 어서 &lt;code&gt;AWTKeyStroke&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9dc8470ea65d899fbd4dd0997bc48338122f1883" translate="yes" xml:space="preserve">
          <source>This method merely returns its input argument, and should be overridden if a different behavior is desired.</source>
          <target state="translated">이 메소드는 입력 인수 만 리턴하며 다른 동작이 필요한 경우 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="f7999e279fa81049453613a7d27593f12d9fa4ff" translate="yes" xml:space="preserve">
          <source>This method might be called often, so it should work fast.</source>
          <target state="translated">이 메서드는 자주 호출 될 수 있으므로 빠르게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a71a0227957b8df48711601ed0ea6387ea0a7557" translate="yes" xml:space="preserve">
          <source>This method might block waiting for more input.</source>
          <target state="translated">이 메서드는 추가 입력 대기를 차단할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4dabde9bfccfe7a0b055599efc380a28677d7710" translate="yes" xml:space="preserve">
          <source>This method modifies the &lt;code&gt;Rectangle&lt;/code&gt; so that it is &lt;code&gt;h&lt;/code&gt; units larger on both the left and right side, and &lt;code&gt;v&lt;/code&gt; units larger at both the top and bottom.</source>
          <target state="translated">이 방법은 &lt;code&gt;Rectangle&lt;/code&gt; 을 수정하여 왼쪽과 오른쪽 모두 &lt;code&gt;h&lt;/code&gt; 단위가 더 크고 상단과 하단 모두 &lt;code&gt;v&lt;/code&gt; 단위가 더 커지 도록 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="6c8ba1e146ee879c8142cea5f852df97dd8abff1" translate="yes" xml:space="preserve">
          <source>This method modifies the failure handling of native method resolution by allowing retry with a prefix applied to the name.</source>
          <target state="translated">이 메서드는 이름에 접두사가 적용된 재 시도를 허용하여 네이티브 메서드 확인의 실패 처리를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="5bd8c6cf18e8e46ae4a0cc3b0f01ad2aa17751cb" translate="yes" xml:space="preserve">
          <source>This method modifies the failure handling of native method resolution by allowing retry with a prefix applied to the name. When used with the &lt;a href=&quot;classfiletransformer&quot;&gt;&lt;code&gt;ClassFileTransformer&lt;/code&gt;&lt;/a&gt;, it enables native methods to be instrumented.</source>
          <target state="translated">이 메소드는 이름에 접 두부가 적용된 재 시도를 허용하여 고유 메소드 분석의 실패 처리를 수정합니다. &lt;a href=&quot;classfiletransformer&quot;&gt; &lt;code&gt;ClassFileTransformer&lt;/code&gt; &lt;/a&gt; 와 함께 사용 하면 원시 메소드를 인스트루먼트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53988dcf2de030bbb27d66e1d6c644d3b1170749" translate="yes" xml:space="preserve">
          <source>This method must be called before any handshaking occurs. Once handshaking has begun, the mode can not be reset for the life of this engine.</source>
          <target state="translated">핸드 셰이 킹이 발생하기 전에이 메소드를 호출해야합니다. 핸드 쉐이킹이 시작되면이 엔진 수명 동안 모드를 재설정 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e83ca4f94b5e856bf345a5a28a34bbb8222496f0" translate="yes" xml:space="preserve">
          <source>This method must be called before any handshaking occurs. Once handshaking has begun, the mode can not be reset for the life of this socket.</source>
          <target state="translated">핸드 셰이 킹이 발생하기 전에이 메소드를 호출해야합니다. 핸드 쉐이킹이 시작되면이 소켓의 수명 동안 모드를 재설정 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6714c3f6386191bb9adf91778e4996153817aa27" translate="yes" xml:space="preserve">
          <source>This method must be called before the URLConnection is connected.</source>
          <target state="translated">URLConnection이 연결되기 전에이 메소드를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="8d88e48c68fa8723650976667e833fbbfd253899" translate="yes" xml:space="preserve">
          <source>This method must be invoked before the thread is started.</source>
          <target state="translated">스레드가 시작되기 전에이 메소드를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="c537a6163a608514f6803c2d83a2e684e7049a56" translate="yes" xml:space="preserve">
          <source>This method must be invoked by the selector for each channel that it deregisters.</source>
          <target state="translated">이 메소드는 등록 해제 한 각 채널에 대해 선택기가 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="71a4754e42c236413da7d7b85eca7f2aafd79f52" translate="yes" xml:space="preserve">
          <source>This method must be overridden by a subclass if that subclass is designed to translate pixel sample values to color component values in a non-default way. The default translations implemented by this class is described in the class comments. Any subclass implementing a non-default translation must follow the constraints on allowable translations defined there.</source>
          <target state="translated">이 메서드는 하위 클래스가 픽셀 샘플 값을 기본이 아닌 방식으로 색상 구성 요소 값으로 변환하도록 설계된 경우 하위 클래스에 의해 재정의되어야합니다. 이 클래스에 의해 구현 된 기본 번역은 클래스 주석에 설명되어 있습니다. 기본이 아닌 번역을 구현하는 모든 하위 클래스는 거기에 정의 된 허용 가능한 번역에 대한 제약 조건을 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="28ce2f1ebb1115c243799853e945e6012534ad5a" translate="yes" xml:space="preserve">
          <source>This method must be used within a try-with-resources statement or similar control structure to ensure that the stream's open directories are closed promptly after the stream's operations have completed.</source>
          <target state="translated">이 메서드는 try-with-resources 문 또는 유사한 제어 구조 내에서 사용해야 스트림의 작업이 완료된 후 스트림의 열린 디렉터리가 즉시 닫히도록합니다.</target>
        </trans-unit>
        <trans-unit id="c08f4faf3f7838a8fadad653cdc9e6666eaf5c60" translate="yes" xml:space="preserve">
          <source>This method must be used within a try-with-resources statement or similar control structure to ensure that the stream's open directory is closed promptly after the stream's operations have completed.</source>
          <target state="translated">이 메서드는 try-with-resources 문 또는 유사한 제어 구조 내에서 사용해야 스트림의 작업이 완료된 후 스트림의 열린 디렉터리가 즉시 닫히도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="770602982c51fa88dc59058c45b89e10a42900ef" translate="yes" xml:space="preserve">
          <source>This method must be used within a try-with-resources statement or similar control structure to ensure that the stream's open file is closed promptly after the stream's operations have completed.</source>
          <target state="translated">이 메서드는 try-with-resources 문 또는 유사한 제어 구조 내에서 사용해야 스트림의 작업이 완료된 후 스트림의 열린 파일이 즉시 닫히도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="5764671e413b59013ef2786c1b9e900420931edd" translate="yes" xml:space="preserve">
          <source>This method never returns &lt;code&gt;null&lt;/code&gt;. For a set with no attributes, it returns an empty &lt;code&gt;Enumeration&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환하지 않습니다 . 속성이없는 집합의 경우 빈 &lt;code&gt;Enumeration&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1260c7f96b463e895501238cdf9cf9646d364983" translate="yes" xml:space="preserve">
          <source>This method notifies the &lt;code&gt;DragSource&lt;/code&gt; that the drop transfer(s) are completed.</source>
          <target state="translated">이 메서드는 &lt;code&gt;DragSource&lt;/code&gt; 에 드롭 전송이 완료되었음을 알립니다 .</target>
        </trans-unit>
        <trans-unit id="7e88bcb5097fe5eee0bf3f2619087caadf568e0c" translate="yes" xml:space="preserve">
          <source>This method object may conservatively return false in cases where the specified rectangular area intersects a segment of the path, but that segment does not represent a boundary between the interior and exterior of the path. Such segments could lie entirely within the interior of the path if they are part of a path with a &lt;a href=&quot;#WIND_NON_ZERO&quot;&gt;&lt;code&gt;WIND_NON_ZERO&lt;/code&gt;&lt;/a&gt; winding rule or if the segments are retraced in the reverse direction such that the two sets of segments cancel each other out without any exterior area falling between them. To determine whether segments represent true boundaries of the interior of the path would require extensive calculations involving all of the segments of the path and the winding rule and are thus beyond the scope of this implementation.</source>
          <target state="translated">이 메서드 객체는 지정된 직사각형 영역이 경로의 세그먼트와 교차하지만 해당 세그먼트가 경로의 내부와 외부 사이의 경계를 나타내지 않는 경우 보수적으로 false를 반환 할 수 있습니다. 이러한 세그먼트는 &lt;a href=&quot;#WIND_NON_ZERO&quot;&gt; &lt;code&gt;WIND_NON_ZERO&lt;/code&gt; &lt;/a&gt; 와인딩 규칙 이있는 경로의 일부 이거나 세그먼트가 역방향으로 되돌아 가서 두 세그먼트 세트가 외부 영역 사이에 떨어지지 않고 서로 취소되도록 하는 경우 경로의 내부에 완전히 놓일 수 있습니다. 그들. 세그먼트가 경로 내부의 실제 경계를 나타내는 지 여부를 결정하려면 경로의 모든 세그먼트와 굴곡 규칙을 포함하는 광범위한 계산이 필요하므로이 구현의 범위를 벗어납니다.</target>
        </trans-unit>
        <trans-unit id="73776df6484707af56b909981303a4686803f586" translate="yes" xml:space="preserve">
          <source>This method object may conservatively return true in cases where the specified rectangular area intersects a segment of the path, but that segment does not represent a boundary between the interior and exterior of the path. Such a case may occur if some set of segments of the path are retraced in the reverse direction such that the two sets of segments cancel each other out without any interior area between them. To determine whether segments represent true boundaries of the interior of the path would require extensive calculations involving all of the segments of the path and the winding rule and are thus beyond the scope of this implementation.</source>
          <target state="translated">이 메서드 객체는 지정된 직사각형 영역이 경로의 세그먼트와 교차하지만 해당 세그먼트가 경로의 내부와 외부 사이의 경계를 나타내지 않는 경우에 보수적으로 true를 반환 할 수 있습니다. 이러한 경우는 경로의 일부 세트가 역방향으로 되돌아 가서 두 세트의 세그먼트가 내부 영역없이 서로를 취소하는 경우 발생할 수 있습니다. 세그먼트가 경로 내부의 실제 경계를 나타내는 지 여부를 결정하려면 경로의 모든 세그먼트와 굴곡 규칙을 포함하는 광범위한 계산이 필요하므로이 구현의 범위를 벗어납니다.</target>
        </trans-unit>
        <trans-unit id="1e8908d2562fe196f4aef565cdc960976a82fcba" translate="yes" xml:space="preserve">
          <source>This method obtains a snapshot of the thread information for each thread including:</source>
          <target state="translated">이 메소드는 다음을 포함하여 각 스레드에 대한 스레드 정보의 스냅 샷을 확보합니다.</target>
        </trans-unit>
        <trans-unit id="7d3eec32b088865dd61cd9aad2c6101c6664050b" translate="yes" xml:space="preserve">
          <source>This method obtains the keyChar from a &lt;code&gt;KeyTyped&lt;/code&gt; event, and the keyCode from a &lt;code&gt;KeyPressed&lt;/code&gt; or &lt;code&gt;KeyReleased&lt;/code&gt; event. The &lt;code&gt;KeyEvent&lt;/code&gt; modifiers are obtained for all three types of &lt;code&gt;KeyEvent&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;KeyTyped&lt;/code&gt; 이벤트 에서 keyChar를 가져 오고 &lt;code&gt;KeyPressed&lt;/code&gt; 또는 &lt;code&gt;KeyReleased&lt;/code&gt; 이벤트 에서 keyCode를 가져옵니다 . &lt;code&gt;KeyEvent&lt;/code&gt; 수식의 세 가지 종류를 얻을 수있다 &lt;code&gt;KeyEvent&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="48cdc3e7c7013b3ffa094c9c2c5eca68939905f3" translate="yes" xml:space="preserve">
          <source>This method obtains the keyChar from a KeyTyped event, and the keyCode from a KeyPressed or KeyReleased event. The KeyEvent modifiers are obtained for all three types of KeyEvent.</source>
          <target state="translated">이 메서드는 KeyTyped 이벤트에서 keyChar를 가져오고 KeyPressed 또는 KeyReleased 이벤트에서 keyCode를 가져옵니다. KeyEvent 수정자는 세 가지 유형의 KeyEvent 모두에 대해 얻습니다.</target>
        </trans-unit>
        <trans-unit id="427aa728676f7cff2d73b65a57b005c2e35d7f5b" translate="yes" xml:space="preserve">
          <source>This method only applies to certificate-based server authentication. An &lt;a href=&quot;x509extendedtrustmanager&quot;&gt;&lt;code&gt;X509ExtendedTrustManager&lt;/code&gt;&lt;/a&gt; will use the returned value for server certificate validation.</source>
          <target state="translated">이 방법은 인증서 기반 서버 인증에만 적용됩니다. &lt;a href=&quot;x509extendedtrustmanager&quot;&gt; &lt;code&gt;X509ExtendedTrustManager&lt;/code&gt; 는&lt;/a&gt; 서버 인증서 유효성 검사에 대한 반환 값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="793c38db3f33fc58d904e8245f12537164920667" translate="yes" xml:space="preserve">
          <source>This method only considers the position of the two date-times on the local time-line. It does not take into account the chronology, or calendar system. This is different from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDateTime)&quot;&gt;&lt;code&gt;compareTo(ChronoLocalDateTime)&lt;/code&gt;&lt;/a&gt;, but is the same approach as &lt;a href=&quot;chrono/chronolocaldatetime#timeLineOrder()&quot;&gt;&lt;code&gt;ChronoLocalDateTime.timeLineOrder()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 로컬 타임 라인에서 두 개의 날짜-시간 위치 만 고려합니다. 연대기 또는 달력 시스템은 고려하지 않습니다. 이것은 &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDateTime)&quot;&gt; &lt;code&gt;compareTo(ChronoLocalDateTime)&lt;/code&gt; &lt;/a&gt; 의 비교 와 &lt;a href=&quot;chrono/chronolocaldatetime#timeLineOrder()&quot;&gt; &lt;code&gt;ChronoLocalDateTime.timeLineOrder()&lt;/code&gt; &lt;/a&gt; 와 동일한 접근 방식 입니다.</target>
        </trans-unit>
        <trans-unit id="fbc6751ae1120e298b55963c4065a790ece5e6a4" translate="yes" xml:space="preserve">
          <source>This method only considers the position of the two date-times on the local time-line. It does not take into account the chronology, or calendar system. This is different from the comparison in &lt;a href=&quot;localdatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt;&lt;code&gt;compareTo(ChronoLocalDateTime)&lt;/code&gt;&lt;/a&gt;, but is the same approach as &lt;a href=&quot;chrono/chronolocaldatetime#timeLineOrder--&quot;&gt;&lt;code&gt;ChronoLocalDateTime.timeLineOrder()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 현지 타임 라인에서 두 날짜-시간의 위치 만 고려합니다. 연대기 또는 달력 시스템은 고려하지 않습니다. 이것은 &lt;a href=&quot;localdatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt; &lt;code&gt;compareTo(ChronoLocalDateTime)&lt;/code&gt; &lt;/a&gt; 의 비교와는 다르지만 &lt;a href=&quot;chrono/chronolocaldatetime#timeLineOrder--&quot;&gt; &lt;code&gt;ChronoLocalDateTime.timeLineOrder()&lt;/code&gt; &lt;/a&gt; 와 동일한 접근 방식 입니다.</target>
        </trans-unit>
        <trans-unit id="d92a48c016a9ed19db50e59b4581a86e0fc89a95" translate="yes" xml:space="preserve">
          <source>This method only considers the position of the two dates on the local time-line. It does not take into account the chronology, or calendar system. This is different from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt;&lt;code&gt;compareTo(ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; but is the same approach as &lt;a href=&quot;chrono/chronolocaldate#timeLineOrder()&quot;&gt;&lt;code&gt;ChronoLocalDate.timeLineOrder()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 로컬 타임 라인에서 두 날짜의 위치 만 고려합니다. 연대기 또는 달력 시스템은 고려하지 않습니다. 이것은 &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt; &lt;code&gt;compareTo(ChronoLocalDate)&lt;/code&gt; &lt;/a&gt; 의 비교 와 &lt;a href=&quot;chrono/chronolocaldate#timeLineOrder()&quot;&gt; &lt;code&gt;ChronoLocalDate.timeLineOrder()&lt;/code&gt; &lt;/a&gt; 와 동일한 접근 방식 입니다.</target>
        </trans-unit>
        <trans-unit id="6d923a35eb4324df7bdb521e1ad5765dbfcc4287" translate="yes" xml:space="preserve">
          <source>This method only considers the position of the two dates on the local time-line. It does not take into account the chronology, or calendar system. This is different from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt;&lt;code&gt;compareTo(ChronoLocalDate)&lt;/code&gt;&lt;/a&gt;, but is the same approach as &lt;a href=&quot;chrono/chronolocaldate#timeLineOrder()&quot;&gt;&lt;code&gt;ChronoLocalDate.timeLineOrder()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 로컬 타임 라인에서 두 날짜의 위치 만 고려합니다. 연대기 또는 달력 시스템은 고려하지 않습니다. 이것은 &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt; &lt;code&gt;compareTo(ChronoLocalDate)&lt;/code&gt; &lt;/a&gt; 의 비교 와 &lt;a href=&quot;chrono/chronolocaldate#timeLineOrder()&quot;&gt; &lt;code&gt;ChronoLocalDate.timeLineOrder()&lt;/code&gt; &lt;/a&gt; 와 동일한 접근 방식 입니다.</target>
        </trans-unit>
        <trans-unit id="585cc4b707d09b7dc8558a4982a674f3f799b6ed" translate="yes" xml:space="preserve">
          <source>This method only considers the position of the two dates on the local time-line. It does not take into account the chronology, or calendar system. This is different from the comparison in &lt;a href=&quot;localdate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; but is the same approach as &lt;a href=&quot;chrono/chronolocaldate#timeLineOrder--&quot;&gt;&lt;code&gt;ChronoLocalDate.timeLineOrder()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 현지 타임 라인에서 두 날짜의 위치 만 고려합니다. 연대기 또는 달력 시스템은 고려하지 않습니다. 이것은 &lt;a href=&quot;localdate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(ChronoLocalDate)&lt;/code&gt; &lt;/a&gt; 의 비교 와 &lt;a href=&quot;chrono/chronolocaldate#timeLineOrder--&quot;&gt; &lt;code&gt;ChronoLocalDate.timeLineOrder()&lt;/code&gt; &lt;/a&gt; 와 동일한 접근 방식 입니다.</target>
        </trans-unit>
        <trans-unit id="8ea0ec144dd39297131d80af6503e189f30d9178" translate="yes" xml:space="preserve">
          <source>This method only considers the position of the two dates on the local time-line. It does not take into account the chronology, or calendar system. This is different from the comparison in &lt;a href=&quot;localdate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(ChronoLocalDate)&lt;/code&gt;&lt;/a&gt;, but is the same approach as &lt;a href=&quot;chrono/chronolocaldate#timeLineOrder--&quot;&gt;&lt;code&gt;ChronoLocalDate.timeLineOrder()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 현지 타임 라인에서 두 날짜의 위치 만 고려합니다. 연대기 또는 달력 시스템은 고려하지 않습니다. 이것은 &lt;a href=&quot;localdate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(ChronoLocalDate)&lt;/code&gt; &lt;/a&gt; 의 비교와는 다르지만 &lt;a href=&quot;chrono/chronolocaldate#timeLineOrder--&quot;&gt; &lt;code&gt;ChronoLocalDate.timeLineOrder()&lt;/code&gt; &lt;/a&gt; 와 동일한 접근 방식 입니다.</target>
        </trans-unit>
        <trans-unit id="40f3da24e5f000fd999ef612e2bc133df542fe7d" translate="yes" xml:space="preserve">
          <source>This method only has any effect when the local time-line overlaps, such as at an autumn daylight savings cutover. In this scenario, there are two valid offsets for the local date-time. Calling this method will return a zoned date-time with the earlier of the two selected.</source>
          <target state="translated">이 방법은 가을 일광 절약 시간제 컷 오버와 같이 로컬 타임 라인이 겹치는 경우에만 효과가 있습니다. 이 시나리오에서는 현지 날짜-시간에 대해 두 개의 유효한 오프셋이 있습니다. 이 메서드를 호출하면 두 날짜 중 빠른 날짜가 선택된 존 날짜 / 시간이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="09d63e9b31f13d4f1052dfa79b756cd792c270b5" translate="yes" xml:space="preserve">
          <source>This method only has any effect when the local time-line overlaps, such as at an autumn daylight savings cutover. In this scenario, there are two valid offsets for the local date-time. Calling this method will return a zoned date-time with the later of the two selected.</source>
          <target state="translated">이 방법은 가을 일광 절약 시간제 컷 오버와 같이 로컬 타임 라인이 겹치는 경우에만 효과가 있습니다. 이 시나리오에서는 현지 날짜-시간에 대해 두 개의 유효한 오프셋이 있습니다. 이 메소드를 호출하면 두 날짜 중 나중에 선택된 시간대 날짜를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="af16b8271965fae73a5be55c8a59d94090d5a53e" translate="yes" xml:space="preserve">
          <source>This method only needs to be invoked by subclasses of &lt;code&gt;Component&lt;/code&gt; which desire to have the specified event types delivered to &lt;code&gt;processEvent&lt;/code&gt; regardless of whether or not a listener is registered.</source>
          <target state="translated">이 메서드 는 리스너 등록 여부에 관계없이 지정된 이벤트 유형을 &lt;code&gt;processEvent&lt;/code&gt; 에 전달하려는 &lt;code&gt;Component&lt;/code&gt; 의 하위 클래스에 의해서만 호출되어야 합니다.</target>
        </trans-unit>
        <trans-unit id="ee063156e50e07ee32ae2ff1604f733cc96ab69d" translate="yes" xml:space="preserve">
          <source>This method only validates the reference the first time it is invoked. On subsequent invocations, it returns a cached result.</source>
          <target state="translated">이 메서드는 처음 호출 될 때만 참조의 유효성을 검사합니다. 후속 호출에서 캐시 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="67a6303f58123e016410e26833d5ff9fdcddd86e" translate="yes" xml:space="preserve">
          <source>This method only validates the signature the first time it is invoked. On subsequent invocations, it returns a cached result.</source>
          <target state="translated">이 메서드는 서명이 처음 호출 될 때만 서명의 유효성을 검사합니다. 후속 호출에서 캐시 된 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="42e268dbf2264488a1b758f6b890cb48ce84ee67" translate="yes" xml:space="preserve">
          <source>This method only works on &lt;code&gt;JTable&lt;/code&gt;s which have individual cell selection enabled.</source>
          <target state="translated">이 방법 은 개별 셀 선택이 활성화 된 &lt;code&gt;JTable&lt;/code&gt; 에서만 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="035f573f8f7fbd33197ba2dc5a7248c5b4611c22" translate="yes" xml:space="preserve">
          <source>This method only works on &lt;code&gt;JTables&lt;/code&gt; which have individual cell selection enabled.</source>
          <target state="translated">이 방법 은 개별 셀 선택이 활성화 된 &lt;code&gt;JTables&lt;/code&gt; 에서만 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="7b7f1ae1ec0085620a642737fbea81ad3930a19d" translate="yes" xml:space="preserve">
          <source>This method opens or creates a file in exactly the manner specified by the &lt;a href=&quot;#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;newByteChannel&lt;/code&gt;&lt;/a&gt; method with the exception that the &lt;a href=&quot;standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; option may not be present in the array of options. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt; if it exists.</source>
          <target state="translated">이 메서드 는 &lt;a href=&quot;standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt; 옵션이 옵션 배열에 없을 수 있다는 점을 제외 하고 &lt;a href=&quot;#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;newByteChannel&lt;/code&gt; &lt;/a&gt; 메서드에 지정된 방식으로 파일을 열거 나 만듭니다 . 옵션이 없으면이 메서드는 &lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt; 옵션이 있는 것처럼 작동합니다 . 즉, 쓰기 위해 파일을 열고, 파일이없는 경우 파일을 생성하거나, 기존 &lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt; 이 존재하는 경우 처음 에 &lt;code&gt;0&lt;/code&gt; 크기로 자릅니다.</target>
        </trans-unit>
        <trans-unit id="4ad0e5ee7c3e35a66d6dc1d5a758e9d967a78351" translate="yes" xml:space="preserve">
          <source>This method opens or creates a file in exactly the manner specified by the &lt;a href=&quot;#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;newByteChannel&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;newByteChannel&lt;/code&gt; &lt;/a&gt; 메서드에서 지정한 방식으로 파일을 열거 나 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="436833a5dfb55f56eaeb20dd9bec11e5315c4a12" translate="yes" xml:space="preserve">
          <source>This method opens or creates a file in exactly the manner specified by the &lt;a href=&quot;files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;newByteChannel&lt;/code&gt;&lt;/a&gt; method with the exception that the &lt;a href=&quot;standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; option may not be present in the array of options. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt; if it exists.</source>
          <target state="translated">이 메소드 는 &lt;a href=&quot;standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt; 옵션이 옵션 배열에 없을 수 있다는 점을 제외 하고 &lt;a href=&quot;files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;newByteChannel&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 방식으로 파일을 열거 나 작성합니다 . 옵션이 없으면이 메소드는 &lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt; 옵션이 있는 것처럼 작동합니다 . 즉, 파일을 작성하기 위해 파일을 열거 나 존재하지 않는 경우 파일을 작성하거나 기존 &lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt; 을 존재하는 경우 크기를 &lt;code&gt;0&lt;/code&gt; 으로 자릅니다.</target>
        </trans-unit>
        <trans-unit id="37e62c39d9a09d082fe370715e30bf0eabb2249a" translate="yes" xml:space="preserve">
          <source>This method opens or creates a file in exactly the manner specified by the &lt;a href=&quot;files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;newByteChannel&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;newByteChannel&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 방식으로 파일을 열거 나 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="feec24e706b56315c8dded7e31f8035d74b253c7" translate="yes" xml:space="preserve">
          <source>This method operates on a set in order to allow interdependent changes to more than one class at the same time (a redefinition of class A can require a redefinition of class B).</source>
          <target state="translated">이 방법은 동시에 여러 클래스에 대한 상호 의존적 변경을 허용하기 위해 세트에서 작동합니다 (클래스 A의 재정의에는 클래스 B의 재정의가 필요할 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="56443cbcb58f600320fc73c90bcfbc2314029f70" translate="yes" xml:space="preserve">
          <source>This method operates on a set in order to allow interdependent changes to more than one class at the same time (a retransformation of class A can require a retransformation of class B).</source>
          <target state="translated">이 방법은 동시에 하나 이상의 클래스에 대한 상호 의존적 인 변경을 허용하기 위해 세트에서 작동합니다 (클래스 A의 재 변환에는 클래스 B의 재 변환이 필요할 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="a7fb5ee417e80b083dc531769d5db6b0dc195ae3" translate="yes" xml:space="preserve">
          <source>This method operates on the two input streams and binds each stream to its source. As a result subsequent modifications to an input stream source may not be reflected in the concatenated stream result.</source>
          <target state="translated">이 메서드는 두 개의 입력 스트림에서 작동하며 각 스트림을 해당 소스에 바인딩합니다. 결과적으로 입력 스트림 소스에 대한 후속 수정은 연결된 스트림 결과에 반영되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b88b0314e8964d6f6880b1f7449e849c27699b2" translate="yes" xml:space="preserve">
          <source>This method otherwise behaves exactly as specified by the &lt;a href=&quot;channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">그렇지 않으면이 메소드는 &lt;a href=&quot;channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt; 인터페이스에서 지정한대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="40bcbad63253ef48ce7e0b0d68c99d2af2b2ef6b" translate="yes" xml:space="preserve">
          <source>This method otherwise behaves exactly as specified by the &lt;a href=&quot;channel#close()&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">그렇지 않으면이 메서드는 &lt;a href=&quot;channel#close()&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt; 인터페이스에서 지정한대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="e8dab872b8c34f5edb3cbf1f8640b7748f6cc2ad" translate="yes" xml:space="preserve">
          <source>This method otherwise behaves exactly as specified by the &lt;a href=&quot;channel#close--&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">그렇지 않으면이 메소드는 &lt;a href=&quot;channel#close--&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt; 인터페이스에서 지정한대로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="bbec8db3a5bdf671a2c9f41d1f3b286a98e2cbd0" translate="yes" xml:space="preserve">
          <source>This method outputs the comments, properties keys and values in the same format as specified in &lt;a href=&quot;#store(java.io.Writer,java.lang.String)&quot;&gt;&lt;code&gt;store(Writer)&lt;/code&gt;&lt;/a&gt;, with the following differences:</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#store(java.io.Writer,java.lang.String)&quot;&gt; &lt;code&gt;store(Writer)&lt;/code&gt; &lt;/a&gt; 지정된 것과 동일한 형식으로 주석, 속성 키 및 값을 출력 하지만 다음과 같은 차이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7058d06e3fc1267459142e765dad5a92635b33b3" translate="yes" xml:space="preserve">
          <source>This method outputs the comments, properties keys and values in the same format as specified in &lt;a href=&quot;properties#store-java.io.Writer-java.lang.String-&quot;&gt;&lt;code&gt;store(Writer)&lt;/code&gt;&lt;/a&gt;, with the following differences:</source>
          <target state="translated">이 메소드 는 다음과 같은 차이점을 제외 하고 설명, 특성 키 및 값을 &lt;a href=&quot;properties#store-java.io.Writer-java.lang.String-&quot;&gt; &lt;code&gt;store(Writer)&lt;/code&gt; &lt;/a&gt; 지정된 것과 동일한 형식으로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="58cffd3c9019d2e4ede3c3ad5f623a893866df11" translate="yes" xml:space="preserve">
          <source>This method parses the ID producing a &lt;code&gt;ZoneId&lt;/code&gt; or &lt;code&gt;ZoneOffset&lt;/code&gt;. A &lt;code&gt;ZoneOffset&lt;/code&gt; is returned if the ID is 'Z', or starts with '+' or '-'. The result will always be a valid ID for which &lt;a href=&quot;zone/zonerules&quot;&gt;&lt;code&gt;ZoneRules&lt;/code&gt;&lt;/a&gt; can be obtained.</source>
          <target state="translated">이 방법은 ID를 분석하여 &lt;code&gt;ZoneId&lt;/code&gt; 또는 &lt;code&gt;ZoneOffset&lt;/code&gt; 을 . &lt;code&gt;ZoneOffset&lt;/code&gt; ID가 'Z가', 또는 '+'또는로 시작하면 반환 '-'. 결과는 항상 &lt;a href=&quot;zone/zonerules&quot;&gt; &lt;code&gt;ZoneRules&lt;/code&gt; &lt;/a&gt; 를 얻을 수 있는 유효한 ID입니다 .</target>
        </trans-unit>
        <trans-unit id="97afd04361f2fb2a5b33e90f2621c7884a96e78e" translate="yes" xml:space="preserve">
          <source>This method parses the string ID of a &lt;code&gt;ZoneOffset&lt;/code&gt; to return an instance. The parsing accepts all the formats generated by &lt;a href=&quot;#getId()&quot;&gt;&lt;code&gt;getId()&lt;/code&gt;&lt;/a&gt;, plus some additional formats:</source>
          <target state="translated">이 메서드는 &lt;code&gt;ZoneOffset&lt;/code&gt; 의 문자열 ID를 구문 분석하여 인스턴스를 반환합니다. 구문 분석은 &lt;a href=&quot;#getId()&quot;&gt; &lt;code&gt;getId()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 모든 형식 과 일부 추가 형식을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="48ad44d8a5bf7e11a75450148c73fef22e59b63b" translate="yes" xml:space="preserve">
          <source>This method parses the string ID of a &lt;code&gt;ZoneOffset&lt;/code&gt; to return an instance. The parsing accepts all the formats generated by &lt;a href=&quot;zoneoffset#getId--&quot;&gt;&lt;code&gt;getId()&lt;/code&gt;&lt;/a&gt;, plus some additional formats:</source>
          <target state="translated">이 메소드는 &lt;code&gt;ZoneOffset&lt;/code&gt; 의 문자열 ID를 구문 분석하여 인스턴스를 리턴합니다. 구문 분석은 &lt;a href=&quot;zoneoffset#getId--&quot;&gt; &lt;code&gt;getId()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 모든 형식 과 몇 가지 추가 형식을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="0273167868136479e8d3da259ed5bb7dc75fd440" translate="yes" xml:space="preserve">
          <source>This method performs a blocking &lt;a href=&quot;#selop&quot;&gt;selection operation&lt;/a&gt;. It returns only after at least one channel is selected, this selector's &lt;a href=&quot;#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method is invoked, or the current thread is interrupted, whichever comes first.</source>
          <target state="translated">이 메서드는 차단 &lt;a href=&quot;#selop&quot;&gt;선택 작업을&lt;/a&gt; 수행합니다 . 적어도 하나의 채널이 선택된 후에 만이 선택기의 &lt;a href=&quot;#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 메서드가 호출되거나 현재 스레드가 중단 된 후 (둘 중 먼저 오는 쪽) 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="f6c4d7896e601ce61bd27127ab22e1664cd215b9" translate="yes" xml:space="preserve">
          <source>This method performs a blocking &lt;a href=&quot;#selop&quot;&gt;selection operation&lt;/a&gt;. It returns only after at least one channel is selected, this selector's &lt;a href=&quot;#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method is invoked, the current thread is interrupted, or the given timeout period expires, whichever comes first.</source>
          <target state="translated">이 메서드는 차단 &lt;a href=&quot;#selop&quot;&gt;선택 작업을&lt;/a&gt; 수행합니다 . 적어도 하나의 채널이 선택되고,이 선택기의 &lt;a href=&quot;#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 메소드가 호출되고, 현재 스레드가 중단되거나, 주어진 시간 초과 기간이 만료 된 후 (둘 중 먼저 도래하는 시점)에만 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="fe868bd6b02f7ad834e8d18908b4c4ad798f17e8" translate="yes" xml:space="preserve">
          <source>This method performs a blocking &lt;a href=&quot;#selop&quot;&gt;selection operation&lt;/a&gt;. It returns only after at least one channel is selected, this selector's &lt;a href=&quot;selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method is invoked, or the current thread is interrupted, whichever comes first.</source>
          <target state="translated">이 방법은 차단 &lt;a href=&quot;#selop&quot;&gt;선택 작업을&lt;/a&gt; 수행합니다 . 적어도 하나의 채널을 선택 &lt;a href=&quot;selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 선택기의 웨이크 업 메소드가 호출되거나 현재 스레드가 중단 된 후에 만 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="995d74d48d8205b07e29e9b4d9aeec3abd63ffd5" translate="yes" xml:space="preserve">
          <source>This method performs a blocking &lt;a href=&quot;#selop&quot;&gt;selection operation&lt;/a&gt;. It returns only after at least one channel is selected, this selector's &lt;a href=&quot;selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method is invoked, the current thread is interrupted, or the given timeout period expires, whichever comes first.</source>
          <target state="translated">이 방법은 차단 &lt;a href=&quot;#selop&quot;&gt;선택 작업을&lt;/a&gt; 수행합니다 . 적어도 하나의 채널이 선택 &lt;a href=&quot;selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 선택기의 웨이크 업 메소드가 호출되거나, 현재 스레드가 중단되거나, 주어진 시간 종료 기간이 만료되는 중 빠른 시간 이 지난 후에 만 ​​리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="f0803f05d47ac96ccfa0b482f811a16d8cfd75f0" translate="yes" xml:space="preserve">
          <source>This method performs a blocking &lt;a href=&quot;#selop&quot;&gt;selection operation&lt;/a&gt;. It wakes up from querying the operating system only when at least one channel is selected, this selector's &lt;a href=&quot;#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method is invoked, or the current thread is interrupted, whichever comes first.</source>
          <target state="translated">이 메서드는 차단 &lt;a href=&quot;#selop&quot;&gt;선택 작업을&lt;/a&gt; 수행합니다 . 적어도 하나의 채널이 선택 &lt;a href=&quot;#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 선택기의 wakeup 메서드가 호출되거나 현재 스레드가 중단 된 경우 중 먼저 발생하는 경우에만 운영 체제 쿼리에서 깨어납니다 .</target>
        </trans-unit>
        <trans-unit id="607d8a0f4ef9a42aae2b589a1cfadb90085f1404" translate="yes" xml:space="preserve">
          <source>This method performs a blocking &lt;a href=&quot;#selop&quot;&gt;selection operation&lt;/a&gt;. It wakes up from querying the operating system only when at least one channel is selected, this selector's &lt;a href=&quot;#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method is invoked, the current thread is interrupted, or the given timeout period expires, whichever comes first.</source>
          <target state="translated">이 메서드는 차단 &lt;a href=&quot;#selop&quot;&gt;선택 작업을&lt;/a&gt; 수행합니다 . 적어도 하나의 채널이 선택 되거나 ,이 선택기의 &lt;a href=&quot;#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 메서드가 호출되거나, 현재 스레드가 중단되거나, 주어진 시간 초과 기간이 만료되는 중 먼저 도래하는 경우에만 운영 체제 쿼리에서 깨어납니다 .</target>
        </trans-unit>
        <trans-unit id="00496b5c1400a42d4c08b6891fb4537a914dc2e2" translate="yes" xml:space="preserve">
          <source>This method performs a non-blocking &lt;a href=&quot;#selop&quot;&gt;selection operation&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 비 차단 &lt;a href=&quot;#selop&quot;&gt;선택 작업을 수행&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="8f1c48d1d6f643589c8e5dfbf396b20d53c18035" translate="yes" xml:space="preserve">
          <source>This method performs a non-blocking &lt;a href=&quot;#selop&quot;&gt;selection operation&lt;/a&gt;. If no channels have become selectable since the previous selection operation then this method immediately returns zero.</source>
          <target state="translated">이 방법은 비 차단 &lt;a href=&quot;#selop&quot;&gt;선택 작업을 수행&lt;/a&gt; 합니다. 이전 선택 작업 이후에 채널을 선택할 수없는 경우이 방법은 즉시 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bc6edcbc87057fff025dbac12e99fd1dfdb47135" translate="yes" xml:space="preserve">
          <source>This method performs a syntactic check for each language range in the given &lt;code&gt;ranges&lt;/code&gt; but doesn't do validation using the IANA Language Subtag Registry.</source>
          <target state="translated">이 방법은 지정된 &lt;code&gt;ranges&lt;/code&gt; 의 각 언어 범위에 대해 구문 검사를 수행 하지만 IANA 언어 하위 태그 레지스트리를 사용한 유효성 검사는 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1daf9aa1639e1e9854b55f0989dd52ee50d1b2ac" translate="yes" xml:space="preserve">
          <source>This method performs exactly the same security checks as the &lt;a href=&quot;../../net/datagramsocket#connect(java.net.InetAddress,int)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../../net/datagramsocket&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt; class. That is, if a security manager has been installed then this method verifies that its &lt;a href=&quot;../../lang/securitymanager#checkAccept(java.lang.String,int)&quot;&gt;&lt;code&gt;checkAccept&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../lang/securitymanager#checkConnect(java.lang.String,int)&quot;&gt;&lt;code&gt;checkConnect&lt;/code&gt;&lt;/a&gt; methods permit datagrams to be received from and sent to, respectively, the given remote address.</source>
          <target state="translated">이 메서드 는 &lt;a href=&quot;../../net/datagramsocket&quot;&gt; &lt;code&gt;DatagramSocket&lt;/code&gt; &lt;/a&gt; 클래스 의 &lt;a href=&quot;../../net/datagramsocket#connect(java.net.InetAddress,int)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 메서드 와 정확히 동일한 보안 검사를 수행합니다 . 즉, 보안 관리자가 설치된 경우이 메서드는 &lt;a href=&quot;../../lang/securitymanager#checkAccept(java.lang.String,int)&quot;&gt; &lt;code&gt;checkAccept&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../lang/securitymanager#checkConnect(java.lang.String,int)&quot;&gt; &lt;code&gt;checkConnect&lt;/code&gt; &lt;/a&gt; 메서드가 주어진 원격 주소에서 각각 데이터 그램을 수신하고 보낼 수 있도록 허용 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="1490e8bf02e1e8ec06bbe4a69f024c77a32d1d14" translate="yes" xml:space="preserve">
          <source>This method performs exactly the same security checks as the &lt;a href=&quot;../../net/datagramsocket#connect-java.net.InetAddress-int-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../../net/datagramsocket&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt; class. That is, if a security manager has been installed then this method verifies that its &lt;a href=&quot;../../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt;&lt;code&gt;checkAccept&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../lang/securitymanager#checkConnect-java.lang.String-int-&quot;&gt;&lt;code&gt;checkConnect&lt;/code&gt;&lt;/a&gt; methods permit datagrams to be received from and sent to, respectively, the given remote address.</source>
          <target state="translated">이 메소드 는 &lt;a href=&quot;../../net/datagramsocket&quot;&gt; &lt;code&gt;DatagramSocket&lt;/code&gt; &lt;/a&gt; 클래스 의 &lt;a href=&quot;../../net/datagramsocket#connect-java.net.InetAddress-int-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 동일한 보안 검사를 수행합니다 . 즉, 보안 관리자가 설치된 경우이 방법은 해당 &lt;a href=&quot;../../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt; &lt;code&gt;checkAccept&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../lang/securitymanager#checkConnect-java.lang.String-int-&quot;&gt; &lt;code&gt;checkConnect&lt;/code&gt; &lt;/a&gt; 메소드가 지정된 원격 주소에서 각각 데이터 그램을 수신하고 전송할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7fa5874d3e1c6d6a49c7884a7a412cd2358f404f" translate="yes" xml:space="preserve">
          <source>This method performs exactly the same security checks as the &lt;a href=&quot;../../net/datagramsocket#receive(java.net.DatagramPacket)&quot;&gt;&lt;code&gt;receive&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../../net/datagramsocket&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt; class. That is, if the socket is not connected to a specific remote address and a security manager has been installed then for each datagram received this method verifies that the source's address and port number are permitted by the security manager's &lt;a href=&quot;../../lang/securitymanager#checkAccept(java.lang.String,int)&quot;&gt;&lt;code&gt;checkAccept&lt;/code&gt;&lt;/a&gt; method. The overhead of this security check can be avoided by first connecting the socket via the &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드 는 &lt;a href=&quot;../../net/datagramsocket&quot;&gt; &lt;code&gt;DatagramSocket&lt;/code&gt; &lt;/a&gt; 클래스 의 &lt;a href=&quot;../../net/datagramsocket#receive(java.net.DatagramPacket)&quot;&gt; &lt;code&gt;receive&lt;/code&gt; &lt;/a&gt; 메서드 와 정확히 동일한 보안 검사를 수행합니다 . 즉, 소켓이 특정 원격 주소에 연결되어 있지 않고 보안 관리자가 설치된 경우 수신 된 각 데이터 그램에 대해이 메서드는 보안 관리자의 &lt;a href=&quot;../../lang/securitymanager#checkAccept(java.lang.String,int)&quot;&gt; &lt;code&gt;checkAccept&lt;/code&gt; &lt;/a&gt; 메서드 에서 소스 주소와 포트 번호가 허용되는지 확인합니다 . 이 보안 검사의 오버 헤드는 먼저 &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 소켓을 연결함으로써 피할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b34fa94141bd53502816c1a7c36fa40fbe9dd13b" translate="yes" xml:space="preserve">
          <source>This method performs exactly the same security checks as the &lt;a href=&quot;../../net/datagramsocket#receive-java.net.DatagramPacket-&quot;&gt;&lt;code&gt;receive&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../../net/datagramsocket&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt; class. That is, if the socket is not connected to a specific remote address and a security manager has been installed then for each datagram received this method verifies that the source's address and port number are permitted by the security manager's &lt;a href=&quot;../../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt;&lt;code&gt;checkAccept&lt;/code&gt;&lt;/a&gt; method. The overhead of this security check can be avoided by first connecting the socket via the &lt;a href=&quot;datagramchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드 는 &lt;a href=&quot;../../net/datagramsocket&quot;&gt; &lt;code&gt;DatagramSocket&lt;/code&gt; &lt;/a&gt; 클래스 의 &lt;a href=&quot;../../net/datagramsocket#receive-java.net.DatagramPacket-&quot;&gt; &lt;code&gt;receive&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 동일한 보안 검사를 수행합니다 . 즉, 소켓이 특정 원격 주소에 연결되어 있지 않고 보안 관리자가 설치된 경우이 방법은 수신 된 각 데이터 그램에 대해 소스의 주소와 포트 번호가 보안 관리자의 &lt;a href=&quot;../../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt; &lt;code&gt;checkAccept&lt;/code&gt; &lt;/a&gt; 메소드에 의해 허용되는지 검증합니다 . 이 보안 점검의 오버 헤드는 먼저 소켓을 통해 소켓을 연결함으로써 피할 수 있습니다&lt;a href=&quot;datagramchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 메소드.</target>
        </trans-unit>
        <trans-unit id="2281659419f5756f01f43636869c4e00ca2b8333" translate="yes" xml:space="preserve">
          <source>This method performs exactly the same security checks as the &lt;a href=&quot;../../net/datagramsocket#send(java.net.DatagramPacket)&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../../net/datagramsocket&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt; class. That is, if the socket is not connected to a specific remote address and a security manager has been installed then for each datagram sent this method verifies that the target address and port number are permitted by the security manager's &lt;a href=&quot;../../lang/securitymanager#checkConnect(java.lang.String,int)&quot;&gt;&lt;code&gt;checkConnect&lt;/code&gt;&lt;/a&gt; method. The overhead of this security check can be avoided by first connecting the socket via the &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드 는 &lt;a href=&quot;../../net/datagramsocket&quot;&gt; &lt;code&gt;DatagramSocket&lt;/code&gt; &lt;/a&gt; 클래스 의 &lt;a href=&quot;../../net/datagramsocket#send(java.net.DatagramPacket)&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt; 메서드 와 정확히 동일한 보안 검사를 수행합니다 . 즉, 소켓이 특정 원격 주소에 연결되어 있지 않고 보안 관리자가 설치된 경우이 메서드는 전송 된 각 데이터 그램에 대해 보안 관리자의 &lt;a href=&quot;../../lang/securitymanager#checkConnect(java.lang.String,int)&quot;&gt; &lt;code&gt;checkConnect&lt;/code&gt; &lt;/a&gt; 메서드 에서 대상 주소와 포트 번호가 허용되는지 확인합니다 . 이 보안 검사의 오버 헤드는 먼저 &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 소켓을 연결함으로써 피할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="84c7f96be391461742d324fc5929d8e5e241b5cb" translate="yes" xml:space="preserve">
          <source>This method performs exactly the same security checks as the &lt;a href=&quot;../../net/datagramsocket#send-java.net.DatagramPacket-&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../../net/datagramsocket&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt; class. That is, if the socket is not connected to a specific remote address and a security manager has been installed then for each datagram sent this method verifies that the target address and port number are permitted by the security manager's &lt;a href=&quot;../../lang/securitymanager#checkConnect-java.lang.String-int-&quot;&gt;&lt;code&gt;checkConnect&lt;/code&gt;&lt;/a&gt; method. The overhead of this security check can be avoided by first connecting the socket via the &lt;a href=&quot;datagramchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드 는 &lt;a href=&quot;../../net/datagramsocket&quot;&gt; &lt;code&gt;DatagramSocket&lt;/code&gt; &lt;/a&gt; 클래스 의 &lt;a href=&quot;../../net/datagramsocket#send-java.net.DatagramPacket-&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 동일한 보안 검사를 수행합니다 . 즉, 소켓이 특정 원격 주소에 연결되어 있지 않고 보안 관리자가 설치된 경우 전송 된 각 데이터 그램에 대해이 방법은 대상 관리자 및 포트 번호가 보안 관리자의 &lt;a href=&quot;../../lang/securitymanager#checkConnect-java.lang.String-int-&quot;&gt; &lt;code&gt;checkConnect&lt;/code&gt; &lt;/a&gt; 메소드에 의해 허용되는지 검증합니다 . 이 보안 점검의 오버 헤드는 먼저 소켓을 통해 소켓을 연결함으로써 피할 수 있습니다&lt;a href=&quot;datagramchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 메소드.</target>
        </trans-unit>
        <trans-unit id="3f7722df960c3d2870c33336c7b8c635b69588cc" translate="yes" xml:space="preserve">
          <source>This method performs exactly the same security checks as the &lt;a href=&quot;../../net/serversocket#accept()&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../../net/serversocket&quot;&gt;&lt;code&gt;ServerSocket&lt;/code&gt;&lt;/a&gt; class. That is, if a security manager has been installed then for each new connection this method verifies that the address and port number of the connection's remote endpoint are permitted by the security manager's &lt;a href=&quot;../../lang/securitymanager#checkAccept(java.lang.String,int)&quot;&gt;&lt;code&gt;checkAccept&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드 는 &lt;a href=&quot;../../net/serversocket&quot;&gt; &lt;code&gt;ServerSocket&lt;/code&gt; &lt;/a&gt; 클래스 의 &lt;a href=&quot;../../net/serversocket#accept()&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt; 메서드 와 정확히 동일한 보안 검사를 수행합니다 . 즉, 보안 관리자가 설치된 경우 각 새 연결에 대해이 방법은 연결 원격 끝점의 주소 및 포트 번호가 보안 관리자의 &lt;a href=&quot;../../lang/securitymanager#checkAccept(java.lang.String,int)&quot;&gt; &lt;code&gt;checkAccept&lt;/code&gt; &lt;/a&gt; 메소드에 의해 허용되는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="f059baa160af6899136476c6121861e8e6b93831" translate="yes" xml:space="preserve">
          <source>This method performs exactly the same security checks as the &lt;a href=&quot;../../net/serversocket#accept--&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../../net/serversocket&quot;&gt;&lt;code&gt;ServerSocket&lt;/code&gt;&lt;/a&gt; class. That is, if a security manager has been installed then for each new connection this method verifies that the address and port number of the connection's remote endpoint are permitted by the security manager's &lt;a href=&quot;../../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt;&lt;code&gt;checkAccept&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드 는 &lt;a href=&quot;../../net/serversocket&quot;&gt; &lt;code&gt;ServerSocket&lt;/code&gt; &lt;/a&gt; 클래스 의 &lt;a href=&quot;../../net/serversocket#accept--&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 동일한 보안 검사를 수행합니다 . 즉, 보안 관리자가 설치된 경우이 방법은 각각의 새 연결마다 보안 관리자의 &lt;a href=&quot;../../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt; &lt;code&gt;checkAccept&lt;/code&gt; &lt;/a&gt; 메소드 가 연결 원격 엔드 포인트의 주소 및 포트 번호를 허용하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="eefd1b24f99c2f1dc37851ca779cf08ea56819f7" translate="yes" xml:space="preserve">
          <source>This method performs exactly the same security checks as the &lt;a href=&quot;../../net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; class. That is, if a security manager has been installed then this method verifies that its &lt;a href=&quot;../../lang/securitymanager#checkConnect(java.lang.String,int)&quot;&gt;&lt;code&gt;checkConnect&lt;/code&gt;&lt;/a&gt; method permits connecting to the address and port number of the given remote endpoint.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../../net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; 클래스 와 정확히 동일한 보안 검사를 수행합니다 . 즉, 보안 관리자가 설치된 경우이 메소드는 &lt;a href=&quot;../../lang/securitymanager#checkConnect(java.lang.String,int)&quot;&gt; &lt;code&gt;checkConnect&lt;/code&gt; &lt;/a&gt; 메소드가 지정된 원격 엔드 포인트의 주소 및 포트 번호에 대한 연결을 허용 하는지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="3581cb3ee69a23bdc1d1589a872169572eda0976" translate="yes" xml:space="preserve">
          <source>This method performs exactly the same security checks as the &lt;a href=&quot;../../net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; class. That is, if a security manager has been installed then this method verifies that its &lt;a href=&quot;../../lang/securitymanager#checkConnect-java.lang.String-int-&quot;&gt;&lt;code&gt;checkConnect&lt;/code&gt;&lt;/a&gt; method permits connecting to the address and port number of the given remote endpoint.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../../net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; 클래스 와 정확히 동일한 보안 검사를 수행합니다 . 즉, 보안 관리자가 설치된 경우이 메소드는 해당 &lt;a href=&quot;../../lang/securitymanager#checkConnect-java.lang.String-int-&quot;&gt; &lt;code&gt;checkConnect&lt;/code&gt; &lt;/a&gt; 메소드가 지정된 원격 엔드 포인트의 주소 및 포트 번호에 대한 연결을 허용 하는지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="92712482a935d3fa1a3b59d278f7294891b7d579" translate="yes" xml:space="preserve">
          <source>This method performs the following actions:</source>
          <target state="translated">이 방법은 다음 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="3f84d1d990ed10a31fb8e3170c7aec0648c365b7" translate="yes" xml:space="preserve">
          <source>This method places the following restrictions on the types of the &lt;a href=&quot;../transform/source&quot;&gt;&lt;code&gt;Source&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../transform/result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; accepted.</source>
          <target state="translated">이 방법은 허용 되는 &lt;a href=&quot;../transform/source&quot;&gt; &lt;code&gt;Source&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../transform/result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; 유형에 다음과 같은 제한을 둡니다 .</target>
        </trans-unit>
        <trans-unit id="f5f7541f1e401fd7547fd9281ed0394cd081072e" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;#getCause()&quot;&gt;&lt;code&gt;getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">이 방법은 범용 예외 체인 기능보다 이전입니다. 이제 &lt;a href=&quot;#getCause()&quot;&gt; &lt;code&gt;getCause()&lt;/code&gt; &lt;/a&gt; 메서드가이 정보를 얻는 데 선호되는 수단입니다.</target>
        </trans-unit>
        <trans-unit id="15b34c1cf0ee3b5afd7b66dc31546a2fd4b27f04" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method is now the preferred means of recording this information.</source>
          <target state="translated">이 방법은 범용 예외 체인 기능보다 이전입니다. &lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt; 방법에 대하여 정보를 기록하는 바람직한 방법이다.</target>
        </trans-unit>
        <trans-unit id="1c41dceee3ce4e14bc61b7b353cdf61f76052173" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;../../../../java.base/java/lang/throwable#getCause()&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">이 방법은 범용 예외 체인 기능보다 이전입니다. &lt;a href=&quot;../../../../java.base/java/lang/throwable#getCause()&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드는이 정보를 취득하는 수단이다.</target>
        </trans-unit>
        <trans-unit id="36b07e1d6614c1e3568234a87ce9337927875cb6" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;../lang/throwable#getCause()&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">이 방법은 범용 예외 체인 기능보다 이전입니다. &lt;a href=&quot;../lang/throwable#getCause()&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드는이 정보를 취득하는 수단이다.</target>
        </trans-unit>
        <trans-unit id="af5b75c5ecc81d005d5130dff470200fcc7ba52b" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;../lang/throwable#getCause--&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">이 방법은 범용 예외 체인 기능보다 우선합니다. &lt;a href=&quot;../lang/throwable#getCause--&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드는이 정보를 취득하는 수단이다.</target>
        </trans-unit>
        <trans-unit id="d60eddbfae6d426aac0c2fa3634cfeb345a0710b" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;../throwable#getCause()&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">이 방법은 범용 예외 체인 기능보다 이전입니다. &lt;a href=&quot;../throwable#getCause()&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드는이 정보를 취득하는 수단이다.</target>
        </trans-unit>
        <trans-unit id="2b05cccacb51c29a4e6bffd776c9f16cec879898" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;../throwable#getCause--&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">이 방법은 범용 예외 체인 기능보다 우선합니다. &lt;a href=&quot;../throwable#getCause--&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드는이 정보를 취득하는 수단이다.</target>
        </trans-unit>
        <trans-unit id="fb7620b7a48c3aac8b2b5e687ba34d8d1041c708" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;namingexception#getCause--&quot;&gt;&lt;code&gt;getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">이 방법은 범용 예외 체인 기능보다 우선합니다. &lt;a href=&quot;namingexception#getCause--&quot;&gt; &lt;code&gt;getCause()&lt;/code&gt; &lt;/a&gt; 메소드는이 정보를 취득하는 수단이다.</target>
        </trans-unit>
        <trans-unit id="373217f3d07b9fda22da4e0651b44b4fdd46e48f" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;namingexception#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method is now the preferred means of recording this information.</source>
          <target state="translated">이 방법은 범용 예외 체인 기능보다 우선합니다. &lt;a href=&quot;namingexception#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt; 방법에 대하여 정보를 기록하는 바람직한 방법이다.</target>
        </trans-unit>
        <trans-unit id="bdec4f80bbaae9e4bcc552a6a6d40aab1b29b954" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;throwable#getCause()&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">이 방법은 범용 예외 체인 기능보다 이전입니다. &lt;a href=&quot;throwable#getCause()&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드는이 정보를 취득하는 수단이다.</target>
        </trans-unit>
        <trans-unit id="fbf2fe4967250206a8a0d1a3d7fd4e6d5e552ad7" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;throwable#getCause--&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">이 방법은 범용 예외 체인 기능보다 우선합니다. &lt;a href=&quot;throwable#getCause--&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt; 메소드는이 정보를 취득하는 수단이다.</target>
        </trans-unit>
        <trans-unit id="b342dd4724387234090a73bf50e3764b58ff071f" translate="yes" xml:space="preserve">
          <source>This method preserves the current AccessControlContext's DomainCombiner (which may be null) while the action is performed.</source>
          <target state="translated">이 메서드는 작업이 수행되는 동안 현재 AccessControlContext의 DomainCombiner (null 일 수 있음)를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="1922139f5e822aee6ce60af7047d2ff166edc1d8" translate="yes" xml:space="preserve">
          <source>This method processes a raw XML qualified name in the current context by removing the prefix and looking it up among the prefixes currently declared. The return value will be the array supplied by the caller, filled in as follows:</source>
          <target state="translated">이 메서드는 접두사를 제거하고 현재 선언 된 접두사 중에서 조회하여 현재 컨텍스트에서 원시 XML 정규화 된 이름을 처리합니다. 반환 값은 호출자가 제공 한 배열이며 다음과 같이 채워집니다.</target>
        </trans-unit>
        <trans-unit id="9b0bde80ac998fee7b533914832671e2ab4251bd" translate="yes" xml:space="preserve">
          <source>This method produces a &lt;code&gt;String&lt;/code&gt; that can be used to create a &lt;code&gt;Pattern&lt;/code&gt; that would match the string &lt;code&gt;s&lt;/code&gt; as if it were a literal pattern.</source>
          <target state="translated">이 방법은 생산 &lt;code&gt;String&lt;/code&gt; 만드는 데 사용할 수있는 &lt;code&gt;Pattern&lt;/code&gt; 문자열과 일치하는 것 &lt;code&gt;s&lt;/code&gt; 이 리터럴 패턴 인 것처럼합니다.</target>
        </trans-unit>
        <trans-unit id="8b590b33bf81c5fed93e036b46ef32102a1975f9" translate="yes" xml:space="preserve">
          <source>This method produces the same result as if it computed:</source>
          <target state="translated">이 방법은 계산 한 것과 동일한 결과를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c4ee98189b8c79f2afc0da3fa9e870b8ed53032b" translate="yes" xml:space="preserve">
          <source>This method propagates any exception thrown by the nullary constructor, including a checked exception.</source>
          <target state="translated">이 메서드는 확인 된 예외를 포함하여 nullary 생성자에서 throw 된 모든 예외를 전파합니다.</target>
        </trans-unit>
        <trans-unit id="0231a4deffc1e81a379b05a6b1e74f6620705ce9" translate="yes" xml:space="preserve">
          <source>This method propagates any exception thrown by the nullary constructor, including a checked exception. Use of this method effectively bypasses the compile-time exception checking that would otherwise be performed by the compiler. The &lt;a href=&quot;reflect/constructor#newInstance(java.lang.Object...)&quot;&gt;&lt;code&gt;Constructor.newInstance&lt;/code&gt;&lt;/a&gt; method avoids this problem by wrapping any exception thrown by the constructor in a (checked) &lt;a href=&quot;reflect/invocationtargetexception&quot;&gt;&lt;code&gt;InvocationTargetException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 확인 된 예외를 포함하여 nullary 생성자에서 throw 된 모든 예외를 전파합니다. 이 메서드를 사용하면 컴파일러에서 수행 할 컴파일 타임 예외 검사를 효과적으로 우회 할 수 있습니다. &lt;a href=&quot;reflect/constructor#newInstance(java.lang.Object...)&quot;&gt; &lt;code&gt;Constructor.newInstance&lt;/code&gt; &lt;/a&gt; 방법은 (선택)의 생성자에 의해 발생 예외 배치함으로써 이러한 문제를 피할 수 &lt;a href=&quot;reflect/invocationtargetexception&quot;&gt; &lt;code&gt;InvocationTargetException&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3456325c501ed9f8f43d3775e8c53aa4b572a159" translate="yes" xml:space="preserve">
          <source>This method provides a basic facility for implementors of the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface to implement support for the &lt;a href=&quot;../shape#contains(double,double)&quot;&gt;&lt;code&gt;Shape.contains(double, double)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 인터페이스 구현 자에게 &lt;a href=&quot;../shape#contains(double,double)&quot;&gt; &lt;code&gt;Shape.contains(double, double)&lt;/code&gt; &lt;/a&gt; 메서드에 대한 지원을 구현 하는 기본 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="ed2f7c800e82ad5826b0ba0e7f6602bf252ad46c" translate="yes" xml:space="preserve">
          <source>This method provides a basic facility for implementors of the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface to implement support for the &lt;a href=&quot;../shape#contains(double,double,double,double)&quot;&gt;&lt;code&gt;Shape.contains(double, double, double, double)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 인터페이스 구현 자에게 &lt;a href=&quot;../shape#contains(double,double,double,double)&quot;&gt; &lt;code&gt;Shape.contains(double, double, double, double)&lt;/code&gt; &lt;/a&gt; 메서드에 대한 지원을 구현 하는 기본 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="6e3e1901b3b504216fb0bbfd921ab418a6b973a0" translate="yes" xml:space="preserve">
          <source>This method provides a basic facility for implementors of the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface to implement support for the &lt;a href=&quot;../shape#contains(java.awt.geom.Point2D)&quot;&gt;&lt;code&gt;Shape.contains(Point2D)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 인터페이스 구현 자에게 &lt;a href=&quot;../shape#contains(java.awt.geom.Point2D)&quot;&gt; &lt;code&gt;Shape.contains(Point2D)&lt;/code&gt; &lt;/a&gt; 메서드에 대한 지원을 구현 하는 기본 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="a6d3e4d629cb2253a75b671fa059f0a19f3308ec" translate="yes" xml:space="preserve">
          <source>This method provides a basic facility for implementors of the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface to implement support for the &lt;a href=&quot;../shape#contains(java.awt.geom.Rectangle2D)&quot;&gt;&lt;code&gt;Shape.contains(Rectangle2D)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 인터페이스 구현 자에게 &lt;a href=&quot;../shape#contains(java.awt.geom.Rectangle2D)&quot;&gt; &lt;code&gt;Shape.contains(Rectangle2D)&lt;/code&gt; &lt;/a&gt; 메서드에 대한 지원을 구현 하는 기본 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="2c7e2b26fe157c0579087469d4f0eb1f7796751a" translate="yes" xml:space="preserve">
          <source>This method provides a basic facility for implementors of the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface to implement support for the &lt;a href=&quot;../shape#intersects(double,double,double,double)&quot;&gt;&lt;code&gt;Shape.intersects(double, double, double, double)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 인터페이스 구현 &lt;a href=&quot;../shape#intersects(double,double,double,double)&quot;&gt; &lt;code&gt;Shape.intersects(double, double, double, double)&lt;/code&gt; &lt;/a&gt; 에게 Shape.intersects (double, double, double, double) 메서드에 대한 지원을 구현 하는 기본 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="8f1340df2eb6334a2629b2affc608d25427e50e8" translate="yes" xml:space="preserve">
          <source>This method provides a basic facility for implementors of the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface to implement support for the &lt;a href=&quot;../shape#intersects(java.awt.geom.Rectangle2D)&quot;&gt;&lt;code&gt;Shape.intersects(Rectangle2D)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; 인터페이스 구현 &lt;a href=&quot;../shape#intersects(java.awt.geom.Rectangle2D)&quot;&gt; &lt;code&gt;Shape.intersects(Rectangle2D)&lt;/code&gt; &lt;/a&gt; 에게 Shape.intersects (Rectangle2D) 메서드에 대한 지원을 구현 하는 기본 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="23d856008b761985bb9cb66918c5c42652cc838d" translate="yes" xml:space="preserve">
          <source>This method provides a single precision variant of the double precision &lt;code&gt;curveTo()&lt;/code&gt; method on the base &lt;code&gt;Path2D&lt;/code&gt; class.</source>
          <target state="translated">이 메서드는 기본 &lt;code&gt;Path2D&lt;/code&gt; 클래스 에 배정 밀도 &lt;code&gt;curveTo()&lt;/code&gt; 메서드 의 단 정밀도 변형을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="9ba899ff8dedce3f44656445eba247328609ba05" translate="yes" xml:space="preserve">
          <source>This method provides a single precision variant of the double precision &lt;code&gt;lineTo()&lt;/code&gt; method on the base &lt;code&gt;Path2D&lt;/code&gt; class.</source>
          <target state="translated">이 메서드는 기본 &lt;code&gt;Path2D&lt;/code&gt; 클래스 에 배정 밀도 &lt;code&gt;lineTo()&lt;/code&gt; 메서드 의 단 정밀도 변형을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="c74ebb54972c0631c49b34bfc36d3ac5f1e60ed0" translate="yes" xml:space="preserve">
          <source>This method provides a single precision variant of the double precision &lt;code&gt;moveTo()&lt;/code&gt; method on the base &lt;code&gt;Path2D&lt;/code&gt; class.</source>
          <target state="translated">이 메서드는 기본 &lt;code&gt;Path2D&lt;/code&gt; 클래스 에 배정 밀도 &lt;code&gt;moveTo()&lt;/code&gt; 메서드 의 단 정밀도 변형을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="b3b951cfafcf0864d5db6a9573b9c2af10984758" translate="yes" xml:space="preserve">
          <source>This method provides a single precision variant of the double precision &lt;code&gt;quadTo()&lt;/code&gt; method on the base &lt;code&gt;Path2D&lt;/code&gt; class.</source>
          <target state="translated">이 메서드는 기본 &lt;code&gt;Path2D&lt;/code&gt; 클래스 에 배정 밀도 &lt;code&gt;quadTo()&lt;/code&gt; 메서드 의 단 정밀도 변형을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="a6907f3727dbd6dcd2f4a5a83842b47609eaa5f3" translate="yes" xml:space="preserve">
          <source>This method provides a way for an edit to replace an existing edit.</source>
          <target state="translated">이 방법은 기존 편집을 대체하는 편집 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7ddbd5f402ff32f7de7231b8974cf46570d80cf3" translate="yes" xml:space="preserve">
          <source>This method provides a way to determine whether two &lt;code&gt;Node&lt;/code&gt; references returned by the implementation reference the same object. When two &lt;code&gt;Node&lt;/code&gt; references are references to the same object, even if through a proxy, the references may be used completely interchangeably, such that all attributes have the same values and calling the same DOM method on either reference always has exactly the same effect.</source>
          <target state="translated">이 메서드는 구현에서 반환 된 두 개의 &lt;code&gt;Node&lt;/code&gt; 참조가 동일한 개체를 참조 하는지 여부를 확인하는 방법을 제공 합니다. 두 개의 &lt;code&gt;Node&lt;/code&gt; 참조가 동일한 객체에 대한 참조 일 때 프록시를 통하더라도 참조는 완전히 상호 교환 적으로 사용될 수 있으므로 모든 속성이 동일한 값을 가지며 두 참조에서 동일한 DOM 메서드를 호출하면 항상 정확히 동일한 효과가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="3bb45c5229f937a8cf28f92735d469e00c18386e" translate="yes" xml:space="preserve">
          <source>This method provides access to locale sensitive decimal style symbols.</source>
          <target state="translated">이 방법은 로케일 구분 10 진수 스타일 기호에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b6efcaa76859afce7a19cf51e24cdbfe2ef063b1" translate="yes" xml:space="preserve">
          <source>This method provides access to locale sensitive decimal style symbols. If the locale contains &quot;nu&quot; (Numbering System) and/or &quot;rg&quot; (Region Override) &lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt; Unicode extensions&lt;/a&gt;, returned instance will reflect the values specified with those extensions. If both &quot;nu&quot; and &quot;rg&quot; are specified, the value from the &quot;nu&quot; extension supersedes the implicit one from the &quot;rg&quot; extension.</source>
          <target state="translated">이 메소드는 로케일 구분 십진 스타일 기호에 대한 액세스를 제공합니다. 로케일에 &quot;nu&quot;(넘버링 시스템) 및 / 또는 &quot;rg&quot;(지역 재정의) &lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt;유니 코드 확장이 포함 된&lt;/a&gt; 경우 반환 된 인스턴스는 해당 확장으로 지정된 값을 반영합니다. &quot;nu&quot;와 &quot;rg&quot;를 모두 지정하면 &quot;nu&quot;확장의 값이 &quot;rg&quot;확장의 암시 적 값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="4c3b37879d0ad13797f1253988126f1e225e08a8" translate="yes" xml:space="preserve">
          <source>This method provides better performance than split(&quot;\R&quot;) by supplying elements lazily and by faster search of new line terminators.</source>
          <target state="translated">이 방법은 요소를 느리게 제공하고 새 줄 종결자를 더 빠르게 검색하여 split ( &quot;\ R&quot;)보다 더 나은 성능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dbe02ffca9e772110145211893f0c71c659baf0f" translate="yes" xml:space="preserve">
          <source>This method provides early access to the &lt;code&gt;SSLSession&lt;/code&gt; being constructed. Depending on how far the handshake has progressed, some data may not yet be available for use. For example, if a remote server will be sending a Certificate chain, but that chain has yet not been processed, the &lt;code&gt;getPeerCertificates&lt;/code&gt; method of &lt;code&gt;SSLSession&lt;/code&gt; will throw a SSLPeerUnverifiedException. Once that chain has been processed, &lt;code&gt;getPeerCertificates&lt;/code&gt; will return the proper value.</source>
          <target state="translated">이 방법은 구성중인 &lt;code&gt;SSLSession&lt;/code&gt; 에 대한 초기 액세스를 제공합니다 . 핸드 셰이크가 진행된 거리에 따라 일부 데이터를 아직 사용하지 못할 수 있습니다. 예를 들어, 원격 서버가 인증서 체인을 보내지 만 해당 체인이 아직 처리되지 않은 경우 &lt;code&gt;SSLSession&lt;/code&gt; 의 &lt;code&gt;getPeerCertificates&lt;/code&gt; 메소드 는 SSLPeerUnverifiedException을 발생시킵니다. 해당 체인이 처리되면 &lt;code&gt;getPeerCertificates&lt;/code&gt; 는 적절한 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2bf386c858a5c6aba9b13caf819ebb33f2d407d7" translate="yes" xml:space="preserve">
          <source>This method provides for the application the most precise control over which &lt;code&gt;Font&lt;/code&gt; instance is used to render text. If a font in this &lt;code&gt;GraphicsEnvironment&lt;/code&gt; has multiple programmable variations, only one instance of that &lt;code&gt;Font&lt;/code&gt; is returned in the array, and other variations must be derived by the application.</source>
          <target state="translated">이 메서드는 응용 프로그램에 텍스트를 렌더링하는 데 사용 되는 &lt;code&gt;Font&lt;/code&gt; 인스턴스를 가장 정확하게 제어 할 수 있도록합니다. 이 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 의 글꼴에 프로그래밍 가능한 변형이 여러 개있는 경우 해당 &lt;code&gt;Font&lt;/code&gt; 의 인스턴스 하나만 배열에 반환되고 다른 변형은 응용 프로그램에서 파생되어야합니다.</target>
        </trans-unit>
        <trans-unit id="40b582df3b5fd7d10f84d86c84b12eb337cb2c75" translate="yes" xml:space="preserve">
          <source>This method provides full control of the numeric formatting, including zero-padding and the positive/negative sign.</source>
          <target state="translated">이 방법은 제로 패딩 및 양수 / 음수 부호를 포함하여 숫자 형식을 완벽하게 제어합니다.</target>
        </trans-unit>
        <trans-unit id="692fb96dfe6c91c0e18a4d5c01662f2a449ff3ee" translate="yes" xml:space="preserve">
          <source>This method provides information necessary for a &lt;a href=&quot;../parsers/documentbuilder&quot;&gt;&lt;code&gt;DocumentBuilder&lt;/code&gt;&lt;/a&gt; to determine what the DOM tree should return from the &lt;a href=&quot;../../../org/w3c/dom/attr#getSpecified()&quot;&gt;&lt;code&gt;Attr.getSpecified()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../parsers/documentbuilder&quot;&gt; &lt;code&gt;DocumentBuilder&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;../../../org/w3c/dom/attr#getSpecified()&quot;&gt; &lt;code&gt;Attr.getSpecified()&lt;/code&gt; &lt;/a&gt; 메서드 에서 반환해야하는 DOM 트리를 결정하는 데 필요한 정보를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="2cadd1d9997f2c9360b629cfea7739cb12ae600f" translate="yes" xml:space="preserve">
          <source>This method provides nanosecond precision, but not necessarily nanosecond resolution (that is, how frequently the value changes) - no guarantees are made except that the resolution is at least as good as that of &lt;a href=&quot;#currentTimeMillis()&quot;&gt;&lt;code&gt;currentTimeMillis()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 나노초 정밀도를 제공하지만 반드시 나노초 해상도 (즉, 값이 변경되는 빈도)는 아닙니다. 해상도가 적어도 &lt;a href=&quot;#currentTimeMillis()&quot;&gt; &lt;code&gt;currentTimeMillis()&lt;/code&gt; &lt;/a&gt; 만큼 우수하다는 점을 제외하고는 보장되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a48698f60ade726ad6887fc4e010d8d648c0827f" translate="yes" xml:space="preserve">
          <source>This method provides nanosecond precision, but not necessarily nanosecond resolution (that is, how frequently the value changes) - no guarantees are made except that the resolution is at least as good as that of &lt;a href=&quot;system#currentTimeMillis--&quot;&gt;&lt;code&gt;currentTimeMillis()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 나노초 정밀도를 제공하지만 반드시 나노초 분해능 일 필요는 없습니다 (즉, 값이 얼마나 자주 변경되는지). 해상도가 적어도 &lt;a href=&quot;system#currentTimeMillis--&quot;&gt; &lt;code&gt;currentTimeMillis()&lt;/code&gt; &lt;/a&gt; 의 분해능보다 우수하다는 것 외에는 보장 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b835f4d6de96fa690f5fb620e1ce14608b98906e" translate="yes" xml:space="preserve">
          <source>This method provides only part of a temporary-file facility. To arrange for a file created by this method to be deleted automatically, use the &lt;a href=&quot;#deleteOnExit()&quot;&gt;&lt;code&gt;deleteOnExit()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 방법은 임시 파일 기능의 일부만 제공합니다. 이 메서드로 만든 파일을 자동으로 삭제하려면 &lt;a href=&quot;#deleteOnExit()&quot;&gt; &lt;code&gt;deleteOnExit()&lt;/code&gt; &lt;/a&gt; 메서드를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="e50d87a069c78cb97c4c3335c0fe7321e57a5ea6" translate="yes" xml:space="preserve">
          <source>This method provides only part of a temporary-file facility. To arrange for a file created by this method to be deleted automatically, use the &lt;code&gt;&lt;a href=&quot;file#deleteOnExit--&quot;&gt;&lt;code&gt;deleteOnExit()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">이 방법은 임시 파일 기능의 일부만 제공합니다. 이 메소드로 작성된 파일이 자동으로 삭제 &lt;code&gt;&lt;a href=&quot;file#deleteOnExit--&quot;&gt;&lt;code&gt;deleteOnExit()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 하려면 deleteOnExit () 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3f04303a8e4fcab487e774c71aebb3b6805be4c3" translate="yes" xml:space="preserve">
          <source>This method provides ordering which is consistent with &lt;code&gt;equalsIgnoreOptional()&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;equalsIgnoreOptional()&lt;/code&gt; 과 일치하는 순서를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="a763d7a21b758d80ce4abfbdcdda2d2a5f772206" translate="yes" xml:space="preserve">
          <source>This method provides the crucial behavioral difference between &lt;a href=&quot;#invokeExact(java.lang.Object...)&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt; and plain, inexact &lt;a href=&quot;#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt;. The two methods perform the same steps when the caller's type descriptor exactly matches the callee's, but when the types differ, plain &lt;a href=&quot;#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; also calls &lt;code&gt;asType&lt;/code&gt; (or some internal equivalent) in order to match up the caller's and callee's types.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#invokeExact(java.lang.Object...)&quot;&gt; &lt;code&gt;invokeExact&lt;/code&gt; &lt;/a&gt; 와 단순하고 정확하지 않은 &lt;a href=&quot;#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; 간의 중요한 동작 차이를 제공합니다 . 두 메서드는 호출자의 유형 설명자가 피 호출자의 유형과 정확히 일치 할 때 동일한 단계를 수행하지만 유형이 다른 경우 일반 &lt;a href=&quot;#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; 은 호출자와 피 호출자의 유형을 일치시키기 위해 &lt;code&gt;asType&lt;/code&gt; (또는 내부 동등한 일부) 도 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="c2adabfd1769b7ee012ef820eff09872bd1de51a" translate="yes" xml:space="preserve">
          <source>This method provides the crucial behavioral difference between &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt; and plain, inexact &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt;. The two methods perform the same steps when the caller's type descriptor exactly m atches the callee's, but when the types differ, plain &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; also calls &lt;code&gt;asType&lt;/code&gt; (or some internal equivalent) in order to match up the caller's and callee's types.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt; &lt;code&gt;invokeExact&lt;/code&gt; &lt;/a&gt; 와 일반의 정확하지 않은 &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; 사이의 결정적인 동작 차이를 제공합니다 . 두 가지 방법은 호출자의 유형 설명자가 호출자의 유형을 정확하게 처리 할 때 동일한 단계를 수행하지만 유형이 다르면 일반 &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; 도 호출자와 호출자의 유형을 일치시키기 위해 &lt;code&gt;asType&lt;/code&gt; (또는 일부 내부 동등)을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="95a70b87ad9186a2bd67cf2e1713ebf2096743a4" translate="yes" xml:space="preserve">
          <source>This method provides the opportunity for a provider to dynamically recheck the underlying data provider to find the latest rules. This could be used to load new rules without stopping the JVM. Dynamic behavior is entirely optional and most providers do not support it.</source>
          <target state="translated">이 방법을 사용하면 공급자가 기본 데이터 공급자를 동적으로 다시 확인하여 최신 규칙을 찾을 수 있습니다. JVM을 중지하지 않고 새 규칙을로드하는 데 사용할 수 있습니다. 동적 동작은 전적으로 선택 사항이며 대부분의 공급자가이를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="049c1d2839e24541bb971c957e2c2e05dfa2c27a" translate="yes" xml:space="preserve">
          <source>This method quietly returns if the access request is permitted, or throws a suitable AccessControlException otherwise.</source>
          <target state="translated">이 메소드는 액세스 요청이 허용되면 자동으로 리턴하거나 그렇지 않으면 적절한 AccessControlException을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="3b0a76a18fe05aade9ea99d16db230cdc9c5840b" translate="yes" xml:space="preserve">
          <source>This method reads all content including the line separators in the middle and/or at the end. The resulting string will contain line separators as they appear in the file.</source>
          <target state="translated">이 메서드는 중간 및 / 또는 끝에있는 줄 구분 기호를 포함하여 모든 콘텐츠를 읽습니다. 결과 문자열에는 파일에 나타나는 줄 구분 기호가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="38d8623f4ec7517195a4ea4c55b2eb6f2793eff5" translate="yes" xml:space="preserve">
          <source>This method reads characters from the input sequence, starting at the append position, and appends them to the given string buffer. It is intended to be invoked after one or more invocations of the &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method in order to copy the remainder of the input sequence.</source>
          <target state="translated">이 메서드는 추가 위치에서 시작하여 입력 시퀀스에서 문자를 읽고 지정된 문자열 버퍼에 추가합니다. 입력 시퀀스의 나머지 부분을 복사하기 위해 &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt; 메서드를 한 번 이상 호출 한 후에 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="572f87a523bb0d73773cc2dc794c878b1676de15" translate="yes" xml:space="preserve">
          <source>This method reads characters from the input sequence, starting at the append position, and appends them to the given string buffer. It is intended to be invoked after one or more invocations of the &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method in order to copy the remainder of the input sequence.</source>
          <target state="translated">이 메소드는 추가 위치에서 시작하여 입력 시퀀스에서 문자를 읽고 주어진 문자열 버퍼에 추가합니다. &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; 를&lt;/a&gt; 한 번 이상 호출 한 후 호출하도록되어 있습니다 . 입력 시퀀스의 나머지 부분을 복사하기 위해 메소드를 .</target>
        </trans-unit>
        <trans-unit id="c61ab724c872269168865853a6b6f4ac4c7e24bd" translate="yes" xml:space="preserve">
          <source>This method reads characters from the input sequence, starting at the append position, and appends them to the given string builder. It is intended to be invoked after one or more invocations of the &lt;a href=&quot;#appendReplacement(java.lang.StringBuilder,java.lang.String)&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method in order to copy the remainder of the input sequence.</source>
          <target state="translated">이 메서드는 추가 위치에서 시작하여 입력 시퀀스에서 문자를 읽고 지정된 문자열 작성기에 추가합니다. 입력 시퀀스의 나머지 부분을 복사하기 위해 &lt;a href=&quot;#appendReplacement(java.lang.StringBuilder,java.lang.String)&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt; 메서드를 한 번 이상 호출 한 후에 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="6bac52365f68c2032e4e775e4a2f1ad0ed2fcde9" translate="yes" xml:space="preserve">
          <source>This method reads the new configuration and calls the &lt;a href=&quot;#updateConfiguration(java.io.InputStream,java.util.function.Function)&quot;&gt;&lt;code&gt;updateConfiguration(ins, mapper)&lt;/code&gt;&lt;/a&gt; method to update the configuration.</source>
          <target state="translated">이 메서드는 새 구성을 읽고 &lt;a href=&quot;#updateConfiguration(java.io.InputStream,java.util.function.Function)&quot;&gt; &lt;code&gt;updateConfiguration(ins, mapper)&lt;/code&gt; &lt;/a&gt; 메서드를 호출 하여 구성을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="652c63ff48c563db809e64870889ccb394b4ee92" translate="yes" xml:space="preserve">
          <source>This method reads the value of the attribute into the given buffer as a sequence of bytes, failing if the number of bytes remaining in the buffer is insufficient to read the complete attribute value. The number of bytes transferred into the buffer is &lt;code&gt;n&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the size of the attribute value. The first byte in the sequence is at index &lt;code&gt;p&lt;/code&gt; and the last byte is at index &lt;code&gt;p + n - 1&lt;/code&gt;, where &lt;code&gt;p&lt;/code&gt; is the buffer's position. Upon return the buffer's position will be equal to &lt;code&gt;p + n&lt;/code&gt;; its limit will not have changed.</source>
          <target state="translated">이 메소드는 속성 값을 주어진 버퍼에 바이트 시퀀스로 읽습니다. 버퍼에 남아있는 바이트 수가 전체 속성 값을 읽기에 충분하지 않으면 실패합니다. 버퍼로 전송 된 바이트 수는 &lt;code&gt;n&lt;/code&gt; 이며 여기서 &lt;code&gt;n&lt;/code&gt; 은 속성 값의 크기입니다. 시퀀스의 첫 번째 바이트는 인덱스 &lt;code&gt;p&lt;/code&gt; 에 있고 마지막 바이트는 인덱스 &lt;code&gt;p + n - 1&lt;/code&gt; 에 있습니다. 여기서 &lt;code&gt;p&lt;/code&gt; 는 버퍼의 위치입니다. 리턴시 버퍼의 위치는 &lt;code&gt;p + n&lt;/code&gt; 과 같습니다 . 한도는 변경되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="a1da4c3d651c3ca5da497e0fea90ae1b5f4dc6e2" translate="yes" xml:space="preserve">
          <source>This method recognizes the following as line terminators:</source>
          <target state="translated">이 방법은 다음을 라인 종결 자로 인식합니다.</target>
        </trans-unit>
        <trans-unit id="0dddad4243be5c0b0e7e092ac4db6078ad1f6a3b" translate="yes" xml:space="preserve">
          <source>This method releases the resources that the &lt;code&gt;Clob&lt;/code&gt; object holds.</source>
          <target state="translated">이 메서드는 &lt;code&gt;Clob&lt;/code&gt; 개체가 보유 하는 리소스를 해제합니다 .</target>
        </trans-unit>
        <trans-unit id="860ab2395ea414b006fb068309d82438b26726e1" translate="yes" xml:space="preserve">
          <source>This method releases the resources that the &lt;code&gt;Clob&lt;/code&gt; object holds. The object is invalid once the &lt;code&gt;free&lt;/code&gt; method is called.</source>
          <target state="translated">이 메서드는 &lt;code&gt;Clob&lt;/code&gt; 개체가 보유한 리소스를 해제합니다 . &lt;code&gt;free&lt;/code&gt; 메서드가 호출 되면 개체가 유효하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="3f6abde40b619fbe1c03871b6834fc2f750f80a9" translate="yes" xml:space="preserve">
          <source>This method relies on time-zone data provider files that are configured. These are loaded using a &lt;code&gt;ServiceLoader&lt;/code&gt;.</source>
          <target state="translated">이 방법은 구성된 표준 시간대 데이터 공급자 파일을 사용합니다. 이것들은 &lt;code&gt;ServiceLoader&lt;/code&gt; 를 사용하여로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="7b334a9e756939b80cb0fc7832f8ab972905fb6b" translate="yes" xml:space="preserve">
          <source>This method removes one or more &lt;code&gt;NotificationListener&lt;/code&gt;s from a given MBean in the MBean server.</source>
          <target state="translated">이 메소드는 MBean 서버 내의 지정된 MBean로부터 하나 이상의 &lt;code&gt;NotificationListener&lt;/code&gt; 를 삭제 합니다.</target>
        </trans-unit>
        <trans-unit id="69a9cccb73fd1dcaec810b50ba17145dcc1f1eb4" translate="yes" xml:space="preserve">
          <source>This method repeatedly calls &lt;code&gt;blocker.isReleasable()&lt;/code&gt; and &lt;code&gt;blocker.block()&lt;/code&gt; until either method returns &lt;code&gt;true&lt;/code&gt;. Every call to &lt;code&gt;blocker.block()&lt;/code&gt; is preceded by a call to &lt;code&gt;blocker.isReleasable()&lt;/code&gt; that returned &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 메소드 는 두 메소드 중 하나가 &lt;code&gt;true&lt;/code&gt; 를 리턴 할 때까지 &lt;code&gt;blocker.isReleasable()&lt;/code&gt; 및 &lt;code&gt;blocker.block()&lt;/code&gt; 반복적으로 호출 합니다 . &lt;code&gt;blocker.block()&lt;/code&gt; 호출 할 때마다 &lt;code&gt;false&lt;/code&gt; 를 반환 한 &lt;code&gt;blocker.isReleasable()&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="c4f06a4fb3194d41fe4793b351eddce41de871d1" translate="yes" xml:space="preserve">
          <source>This method represents a convenience accessor to infinite precision fractional second value returned by &lt;a href=&quot;#getFractionalSecond()&quot;&gt;&lt;code&gt;getFractionalSecond()&lt;/code&gt;&lt;/a&gt;. The returned value is the rounded down to milliseconds value of &lt;a href=&quot;#getFractionalSecond()&quot;&gt;&lt;code&gt;getFractionalSecond()&lt;/code&gt;&lt;/a&gt;. When &lt;a href=&quot;#getFractionalSecond()&quot;&gt;&lt;code&gt;getFractionalSecond()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;null&lt;/code&gt;, this method must return &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt;&lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#getFractionalSecond()&quot;&gt; &lt;code&gt;getFractionalSecond()&lt;/code&gt; &lt;/a&gt; 반환 된 무한 정밀도 분수 초 값에 대한 편리한 접근자를 나타냅니다 . 반환 된 값은 &lt;a href=&quot;#getFractionalSecond()&quot;&gt; &lt;code&gt;getFractionalSecond()&lt;/code&gt; &lt;/a&gt; 의 밀리 초 값으로 내림 된 것 입니다. 시 &lt;a href=&quot;#getFractionalSecond()&quot;&gt; &lt;code&gt;getFractionalSecond()&lt;/code&gt; &lt;/a&gt; 반환 &lt;code&gt;null&lt;/code&gt; 로 ,이 방법은 반환해야합니다 &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt; &lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7853e76105b8b5bdb8f93921dcc5e269386e0ab" translate="yes" xml:space="preserve">
          <source>This method requests the Java virtual machine to make a best-effort estimate of the current memory usage of this memory pool. For some memory pools, this method may be an expensive operation that requires some computation to determine the estimate. An implementation should document when this is the case.</source>
          <target state="translated">이 메소드는 Java 가상 머신에이 메모리 풀의 현재 메모리 사용량을 최대한 활용하도록 요청합니다. 일부 메모리 풀의 경우이 방법은 추정치를 결정하기 위해 약간의 계산이 필요한 값 비싼 작업 일 수 있습니다. 이 경우 구현시 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="8c4c7250f9cf0a282672d75a0f1ac355d7c1e3bd" translate="yes" xml:space="preserve">
          <source>This method requires a fully initialized &lt;code&gt;Cipher&lt;/code&gt; object, initialized with the exact same algorithm, key, padding scheme, etc., that were used to seal the object.</source>
          <target state="translated">이 방법에는 객체를 봉인하는 데 사용 된 것과 동일한 알고리즘, 키, 패딩 방식 등으로 초기화 된 완전히 초기화 된 &lt;code&gt;Cipher&lt;/code&gt; 객체 가 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="ecd4e2b0f4f72eeebe7219dd6588914c61210f9a" translate="yes" xml:space="preserve">
          <source>This method resets charset-independent state and also invokes the &lt;a href=&quot;#implReset()&quot;&gt;&lt;code&gt;implReset&lt;/code&gt;&lt;/a&gt; method in order to perform any charset-specific reset actions.</source>
          <target state="translated">이 메서드는 charset-independent state를 재설정하고 charset 관련 재설정 작업을 수행하기 위해 &lt;a href=&quot;#implReset()&quot;&gt; &lt;code&gt;implReset&lt;/code&gt; &lt;/a&gt; 메서드 도 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="cf8256397909468ce6e62017714de03a52f18861" translate="yes" xml:space="preserve">
          <source>This method resets charset-independent state and also invokes the &lt;a href=&quot;charsetdecoder#implReset--&quot;&gt;&lt;code&gt;implReset&lt;/code&gt;&lt;/a&gt; method in order to perform any charset-specific reset actions.</source>
          <target state="translated">이 메소드는 문자 세트 독립 상태를 재설정하고 문자 세트 별 재설정 조치를 수행하기 위해 &lt;a href=&quot;charsetdecoder#implReset--&quot;&gt; &lt;code&gt;implReset&lt;/code&gt; &lt;/a&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="3c367e5aecd4d457c426f9823a705f02c40e3ba0" translate="yes" xml:space="preserve">
          <source>This method resets charset-independent state and also invokes the &lt;a href=&quot;charsetencoder#implReset--&quot;&gt;&lt;code&gt;implReset&lt;/code&gt;&lt;/a&gt; method in order to perform any charset-specific reset actions.</source>
          <target state="translated">이 메소드는 문자 세트 독립 상태를 재설정하고 문자 세트 별 재설정 조치를 수행하기 위해 &lt;a href=&quot;charsetencoder#implReset--&quot;&gt; &lt;code&gt;implReset&lt;/code&gt; &lt;/a&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="e2d347d8a78945c1f4bfc96bfe2d38b4f2f7d750" translate="yes" xml:space="preserve">
          <source>This method resets the encapsulated cipher object to its initial state and calls the &lt;code&gt;close&lt;/code&gt; method of the underlying output stream.</source>
          <target state="translated">이 메소드는 캡슐화 된 암호 오브젝트를 초기 상태로 재설정 하고 기본 출력 스트림 의 &lt;code&gt;close&lt;/code&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="b0014eaf85a34018f0b1ffca15df447a2ff5af67" translate="yes" xml:space="preserve">
          <source>This method resets this &lt;code&gt;KeyAgreement&lt;/code&gt; object, so that it can be reused for further key agreements. Unless this key agreement is reinitialized with one of the &lt;code&gt;init&lt;/code&gt; methods, the same private information and algorithm parameters will be used for subsequent key agreements.</source>
          <target state="translated">이 메소드는이 &lt;code&gt;KeyAgreement&lt;/code&gt; 오브젝트를 재설정 하여 추가 키 계약에 재사용 할 수 있습니다. 이 키 계약이 &lt;code&gt;init&lt;/code&gt; 메소드 중 하나로 다시 초기화되지 않는 한 동일한 개인 정보 및 알고리즘 매개 변수가 후속 키 계약에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2af47a7eb2c65c1b4226311342f5caaa4f6fd55d" translate="yes" xml:space="preserve">
          <source>This method resets this &lt;code&gt;KeyAgreementSpi&lt;/code&gt; object, so that it can be reused for further key agreements. Unless this key agreement is reinitialized with one of the &lt;code&gt;engineInit&lt;/code&gt; methods, the same private information and algorithm parameters will be used for subsequent key agreements.</source>
          <target state="translated">이 메소드는이 &lt;code&gt;KeyAgreementSpi&lt;/code&gt; 오브젝트를 재설정 하여 추가 키 계약에 재사용 할 수 있습니다. 이 키 계약이 &lt;code&gt;engineInit&lt;/code&gt; 메소드 중 하나를 사용하여 다시 초기화되지 않는 한 동일한 개인 정보 및 알고리즘 매개 변수가 후속 키 계약에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c54898925a6618461e7b5901fa835b7c9a9801cf" translate="yes" xml:space="preserve">
          <source>This method reshapes the components in the specified target container in order to satisfy the constraints of the &lt;code&gt;GridLayout&lt;/code&gt; object.</source>
          <target state="translated">이 메서드는 &lt;code&gt;GridLayout&lt;/code&gt; 개체 의 제약 조건을 충족하기 위해 지정된 대상 컨테이너의 구성 요소를 재구성 합니다.</target>
        </trans-unit>
        <trans-unit id="901695b9950b80e4cb8c9b8d938e86a1ae22e573" translate="yes" xml:space="preserve">
          <source>This method resumes the thread that called the &lt;a href=&quot;#enter()&quot;&gt;&lt;code&gt;enter()&lt;/code&gt;&lt;/a&gt; method and exits the secondary loop that was created when the &lt;a href=&quot;#enter()&quot;&gt;&lt;code&gt;enter()&lt;/code&gt;&lt;/a&gt; method was invoked.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#enter()&quot;&gt; &lt;code&gt;enter()&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 한 스레드를 다시 시작하고 &lt;a href=&quot;#enter()&quot;&gt; &lt;code&gt;enter()&lt;/code&gt; &lt;/a&gt; 메서드가 호출 될 때 생성 된 보조 루프를 종료합니다 .</target>
        </trans-unit>
        <trans-unit id="d5afbdfd597226abfd544c9a4dd3222e929984ff" translate="yes" xml:space="preserve">
          <source>This method retrieves an exception that this exception wraps.</source>
          <target state="translated">이 메서드는이 예외가 래핑하는 예외를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="ce9aa1176e3295c193a51754c285f29859e49633" translate="yes" xml:space="preserve">
          <source>This method returns -1. Subclasses that have a meaningful baseline should override appropriately.</source>
          <target state="translated">이 메서드는 -1을 반환합니다. 의미있는 기준선이있는 하위 클래스는 적절하게 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="e6a1f02f9a0a0f6efc5114521467d8996ec1f48a" translate="yes" xml:space="preserve">
          <source>This method returns 13 elements since &lt;a href=&quot;../util/calendar#UNDECIMBER&quot;&gt;&lt;code&gt;Calendar.UNDECIMBER&lt;/code&gt;&lt;/a&gt; is supported.</source>
          <target state="translated">&lt;a href=&quot;../util/calendar#UNDECIMBER&quot;&gt; &lt;code&gt;Calendar.UNDECIMBER&lt;/code&gt; &lt;/a&gt; 이 지원 되므로이 메서드는 13 개의 요소를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a3816a78b2c5c245cc0677d29fbd42432e5fa590" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;&quot;null&quot;&lt;/code&gt; if the specified array is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">지정된 배열이 &lt;code&gt;null&lt;/code&gt; 의 경우, 이 메소드는 &lt;code&gt;&quot;null&quot;&lt;/code&gt; 를 돌려 줍니다 .</target>
        </trans-unit>
        <trans-unit id="de790f84b74e1dc7d4d26349308350e3d0a04e92" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt;. Subclasses that support a baseline should override appropriately.</source>
          <target state="translated">이 메서드는 &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; 를 반환합니다 . 기준선을 지원하는 하위 클래스는 적절하게 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="81b933a0cf9d188ed81f18427d92d5d5f0e3b4c8" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;false&lt;/code&gt; if the given character is a surrogate character; such characters can be interpreted only when they are members of a pair consisting of a high surrogate followed by a low surrogate. The &lt;a href=&quot;#canEncode(java.lang.CharSequence)&quot;&gt;&lt;code&gt;canEncode(CharSequence)&lt;/code&gt;&lt;/a&gt; method may be used to test whether or not a character sequence can be encoded.</source>
          <target state="translated">이 메서드는 주어진 문자가 대리 문자이면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다. 이러한 문자는 상위 대리와 하위 대리로 구성된 쌍의 구성원 인 경우에만 해석 될 수 있습니다. &lt;a href=&quot;#canEncode(java.lang.CharSequence)&quot;&gt; &lt;code&gt;canEncode(CharSequence)&lt;/code&gt; &lt;/a&gt; 방법은 문자 시퀀스가 인코딩 될 수 있는지의 여부를 테스트하는데 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="a9347d39073409bd55de2e353e3ba943be21291d" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;false&lt;/code&gt; if the given character is a surrogate character; such characters can be interpreted only when they are members of a pair consisting of a high surrogate followed by a low surrogate. The &lt;a href=&quot;charsetencoder#canEncode-java.lang.CharSequence-&quot;&gt;&lt;code&gt;canEncode(CharSequence)&lt;/code&gt;&lt;/a&gt; method may be used to test whether or not a character sequence can be encoded.</source>
          <target state="translated">주어진 문자가 서로 게이트 문자이면 이 메소드는 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다. 이러한 문자는 상위 서로 게이트와 하위 서로 게이트로 구성된 쌍의 구성원 인 경우에만 해석 할 수 있습니다. &lt;a href=&quot;charsetencoder#canEncode-java.lang.CharSequence-&quot;&gt; &lt;code&gt;canEncode(CharSequence)&lt;/code&gt; &lt;/a&gt; 방법은 문자 시퀀스가 인코딩 될 수 있는지의 여부를 테스트하는데 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="880c34cb9a20c025c198bd69e9b2fc170a0b7a68" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;newC&lt;/code&gt;. If &lt;code&gt;oldC&lt;/code&gt; is not equal to &lt;code&gt;newC&lt;/code&gt; and is non-&lt;code&gt;null&lt;/code&gt;, it will be removed from its parent.</source>
          <target state="translated">이 메서드는 &lt;code&gt;newC&lt;/code&gt; 를 반환합니다 . 경우 &lt;code&gt;oldC&lt;/code&gt; 가 동일하지 &lt;code&gt;newC&lt;/code&gt; 와 및 비 인 &lt;code&gt;null&lt;/code&gt; , 그것은 부모로부터 제거 될 것이다.</target>
        </trans-unit>
        <trans-unit id="b07f810463fa30b71e2d11187a4f810b3ad35b56" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;null&lt;/code&gt; during startup and before the boot layer is fully initialized.</source>
          <target state="translated">이 메서드는 시작 중 및 부팅 계층이 완전히 초기화되기 전에 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0dfb9c171c416ba4caf41aec168794448d62996c" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;null&lt;/code&gt; if and only if &lt;a href=&quot;#inForkJoinPool()&quot;&gt;&lt;code&gt;inForkJoinPool()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#inForkJoinPool()&quot;&gt; &lt;code&gt;inForkJoinPool()&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;false&lt;/code&gt; 를 반환하는 경우에만 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2147f7b7be20e3dbd78ea1607204afe14be4eb8c" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;null&lt;/code&gt; if the resource is not in this module, the resource is encapsulated and cannot be located by the caller, or access to the resource is denied by the security manager.</source>
          <target state="translated">리소스가이 모듈에 없거나 리소스가 캡슐화되어 호출자가 찾을 수 없거나 리소스에 대한 액세스가 보안 관리자에 의해 거부 된 경우이 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d19bf57702f6a86acc5e2101dc28f0546eeb843d" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;null&lt;/code&gt; if the thread is not in any of the above conditions.</source>
          <target state="translated">스레드가 위의 조건에 속하지 않으면 이 메소드는 &lt;code&gt;null&lt;/code&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="143a1c4129cacdc4752dda27082a702fd82ed91d" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;null&lt;/code&gt; on failure rather than throwing a &lt;a href=&quot;classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, as is done by the &lt;a href=&quot;#forName(java.lang.String,boolean,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;forName(String, boolean, ClassLoader)&lt;/code&gt;&lt;/a&gt; method. The security check is a stack-based permission check if the caller loads a class in another module.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#forName(java.lang.String,boolean,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;forName(String, boolean, ClassLoader)&lt;/code&gt; &lt;/a&gt; 메서드에서 수행하는 것처럼 &lt;a href=&quot;classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; 을&lt;/a&gt; throw하는 대신 실패시 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 보안 검사는 호출자가 다른 모듈에서 클래스를로드하는 경우 스택 기반 권한 검사입니다.</target>
        </trans-unit>
        <trans-unit id="3bb81f757abafb83d450130f11f82b886e095058" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;null&lt;/code&gt; rather than throwing &lt;code&gt;ClassNotFoundException&lt;/code&gt; if the class could not be found.</source>
          <target state="translated">이 메서드는 클래스를 찾을 수없는 경우 &lt;code&gt;ClassNotFoundException&lt;/code&gt; 을 throw하지 않고 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e55ec84001df317db42daeaca300b623d15cb5ed" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;true&lt;/code&gt; if and only if &lt;var&gt;obj&lt;/var&gt; is not null and &lt;var&gt;obj&lt;/var&gt;'s class name is the same as the className field defined for this &lt;code&gt;SimpleType&lt;/code&gt; instance (ie the class name returned by the &lt;a href=&quot;opentype#getClassName()&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">이 메서드는 &lt;var&gt;obj&lt;/var&gt; 가 null이 아니고 &lt;var&gt;obj&lt;/var&gt; 의 클래스 이름이이 &lt;code&gt;SimpleType&lt;/code&gt; 인스턴스에 대해 정의 된 className 필드 (즉, &lt;a href=&quot;opentype#getClassName()&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt; 메서드에 의해 반환 된 클래스 이름)와 동일한 경우에만 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="3ecf4e22b67d369d7123e504ea55b1efe7496a5a" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;true&lt;/code&gt; if and only if &lt;var&gt;obj&lt;/var&gt; is not null and &lt;var&gt;obj&lt;/var&gt;'s class name is the same as the className field defined for this &lt;code&gt;SimpleType&lt;/code&gt; instance (ie the class name returned by the &lt;a href=&quot;opentype#getClassName--&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">이 메소드는 &lt;var&gt;obj&lt;/var&gt; 가 null이 아니고 &lt;var&gt;obj&lt;/var&gt; 의 클래스 &lt;code&gt;SimpleType&lt;/code&gt; 인스턴스에 대해 정의 된 className 필드와 동일한 경우에만 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 (즉, &lt;a href=&quot;opentype#getClassName--&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt; 메소드가 리턴 한 클래스 이름 ).</target>
        </trans-unit>
        <trans-unit id="6694646d2b9be9f9e17ce0555751ce403d83976d" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;true&lt;/code&gt; if and only if &lt;var&gt;obj&lt;/var&gt; is not null, &lt;var&gt;obj&lt;/var&gt; is an array and any one of the following is &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">이 메소드는 &lt;var&gt;obj&lt;/var&gt; 가 null이 아니고 &lt;var&gt;obj&lt;/var&gt; 가 배열이고 다음 중 하나 가 &lt;code&gt;true&lt;/code&gt; 인 경우에만 true를 리턴 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b476010220bf5c6409399c6327cd49e6d36fb55" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;true&lt;/code&gt; if invoked to test if a package in this module is exported to itself. It always returns &lt;code&gt;true&lt;/code&gt; when invoked on an unnamed module. A package that is &lt;a href=&quot;#isOpen(java.lang.String,java.lang.Module)&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; to the given module is considered exported to that module at run-time and so this method returns &lt;code&gt;true&lt;/code&gt; if the package is open to the given module.</source>
          <target state="translated">이 모듈의 패키지가 자신에게 내보내 졌는지 테스트하기 위해 호출 된 경우이 메서드는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 이름이 지정되지 않은 모듈에서 호출되면 항상 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 주어진 모듈에 &lt;a href=&quot;#isOpen(java.lang.String,java.lang.Module)&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 있는 패키지는 런타임에 해당 모듈로 내 보내진 것으로 간주되므로 패키지가 주어진 모듈에 대해 열려 있으면 이 메서드는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="7408b77806b411e4eb47d72063f252571a71cb00" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;true&lt;/code&gt; if invoked to test if a package in this module is open to itself. It returns &lt;code&gt;true&lt;/code&gt; when invoked on an &lt;a href=&quot;module/moduledescriptor#isOpen()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; module with a package in the module. It always returns &lt;code&gt;true&lt;/code&gt; when invoked on an unnamed module.</source>
          <target state="translated">이 모듈의 패키지가 자체적으로 열려 있는지 테스트하기 위해 호출 된 경우이 메서드는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 모듈에 패키지가 있는 &lt;a href=&quot;module/moduledescriptor#isOpen()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 모듈 에서 호출되면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 이름이 지정되지 않은 모듈에서 호출되면 항상 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="3bffd388e98aec942316f5d49d0e3690f9c88925" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;accessible&lt;/code&gt; flag is set to &lt;code&gt;true&lt;/code&gt;, i.e. the checks for Java language access control are suppressed, or if the caller can access the member as specified in</source>
          <target state="translated">이 방법은 반환 &lt;code&gt;true&lt;/code&gt; 경우 생성 &lt;code&gt;accessible&lt;/code&gt; 플래그가 설정되어 &lt;code&gt;true&lt;/code&gt; , 즉 자바 언어 액세스 제어에 대한 점검을 억제하거나, 호출 측이 멤버에 액세스 할 수 있는지에 규정되어있다</target>
        </trans-unit>
        <trans-unit id="434ad6018f88106e270997a09fba944128dfdee4" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;true&lt;/code&gt; if this matcher uses</source>
          <target state="translated">이 매 처가 다음을 사용하는 경우이 메소드는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="32d871c2ff2ff16726bf7ad3c3ac7074807b8a08" translate="yes" xml:space="preserve">
          <source>This method returns Strings in the format as specified in &lt;a href=&quot;#getName(java.lang.String)&quot;&gt;&lt;code&gt;getName(String)&lt;/code&gt;&lt;/a&gt; and also emits additional attribute type keywords for OIDs that have entries in the &lt;code&gt;oidMap&lt;/code&gt; parameter. OID entries in the oidMap take precedence over the default OIDs recognized by &lt;code&gt;getName(String)&lt;/code&gt;. Improperly specified OIDs are ignored; however if an OID in the name maps to an improperly specified keyword, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#getName(java.lang.String)&quot;&gt; &lt;code&gt;getName(String)&lt;/code&gt; &lt;/a&gt; 지정된 형식으로 문자열을 리턴 하고 &lt;code&gt;oidMap&lt;/code&gt; 매개 변수에 항목이있는 OID에 대한 추가 속성 유형 키워드도 내 보냅니다 . oidMap의 OID 항목은 &lt;code&gt;getName(String)&lt;/code&gt; 인식하는 기본 OID보다 우선합니다 . 잘못 지정된 OID는 무시됩니다. 그러나 이름의 OID가 부적절하게 지정된 키워드에 맵핑되면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a9f4740e1d967f29b8a591631fdce83ae9b599e9" translate="yes" xml:space="preserve">
          <source>This method returns Strings in the format as specified in &lt;a href=&quot;x500principal#getName-java.lang.String-&quot;&gt;&lt;code&gt;getName(String)&lt;/code&gt;&lt;/a&gt; and also emits additional attribute type keywords for OIDs that have entries in the &lt;code&gt;oidMap&lt;/code&gt; parameter. OID entries in the oidMap take precedence over the default OIDs recognized by &lt;code&gt;getName(String)&lt;/code&gt;. Improperly specified OIDs are ignored; however if an OID in the name maps to an improperly specified keyword, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;x500principal#getName-java.lang.String-&quot;&gt; &lt;code&gt;getName(String)&lt;/code&gt; &lt;/a&gt; 지정된 형식으로 문자열을 리턴 하고 &lt;code&gt;oidMap&lt;/code&gt; 매개 변수에 항목이있는 OID에 대한 추가 속성 유형 키워드를 생성합니다 . oidMap의 OID 항목은 &lt;code&gt;getName(String)&lt;/code&gt; 인식하는 기본 OID보다 우선합니다 . 잘못 지정된 OID는 무시됩니다. 그러나 이름의 OID가 잘못 지정된 키워드에 매핑되면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1a0839c11cb848a51f224eba9b9d18da70ae2480" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;../graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt;, but is here for backwards compatibility.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; 를&lt;/a&gt; 반환 하지만 이전 버전과의 호환성을 위해 여기에 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3c255fb999ec1d38cb5ad2961c6139884df72b5" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;../graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt;, but is here for backwards compatibility. &lt;a href=&quot;#createGraphics()&quot;&gt;&lt;code&gt;createGraphics&lt;/code&gt;&lt;/a&gt; is more convenient, since it is declared to return a &lt;code&gt;Graphics2D&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; 를&lt;/a&gt; 반환 하지만 이전 버전과의 호환성을 위해 여기에 있습니다. &lt;a href=&quot;#createGraphics()&quot;&gt; &lt;code&gt;createGraphics&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;Graphics2D&lt;/code&gt; 를 반환하도록 선언 되었기 때문에 더 편리합니다 .</target>
        </trans-unit>
        <trans-unit id="3ede641ea4a08dd0519e95e7bf31ee4f65e12772" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object to describe its reason for termination, in the same manner as the &lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method. Most implementations of this method will handle decoding errors by returning an appropriate result object for interpretation by the &lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method. An optimized implementation may instead examine the relevant error action and implement that action itself.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 메서드 와 같은 방식으로 종료 이유를 설명 하는 &lt;a href=&quot;coderresult&quot;&gt; &lt;code&gt;CoderResult&lt;/code&gt; &lt;/a&gt; 개체를 반환합니다 . 이 메서드의 대부분의 구현은 &lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 메서드의 해석을 위해 적절한 결과 개체를 반환하여 디코딩 오류를 처리합니다 . 대신 최적화 된 구현은 관련 오류 작업을 검사하고 해당 작업 자체를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee1c825d1fb7b0bac28be0248ee485975c02351e" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object to describe its reason for termination, in the same manner as the &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method. Most implementations of this method will handle encoding errors by returning an appropriate result object for interpretation by the &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method. An optimized implementation may instead examine the relevant error action and implement that action itself.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 메서드 와 같은 방식으로 종료 이유를 설명 하는 &lt;a href=&quot;coderresult&quot;&gt; &lt;code&gt;CoderResult&lt;/code&gt; &lt;/a&gt; 개체를 반환합니다 . 이 메소드의 대부분의 구현은 &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 메소드로 해석 할 적절한 결과 객체를 반환하여 인코딩 오류를 처리합니다 . 대신 최적화 된 구현은 관련 오류 작업을 검사하고 해당 작업 자체를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f775b32d8b84056f67ed090a303c87ddab0e3e05" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object to describe its reason for termination, in the same manner as the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method. Most implementations of this method will handle decoding errors by returning an appropriate result object for interpretation by the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method. An optimized implementation may instead examine the relevant error action and implement that action itself.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;coderresult&quot;&gt; &lt;code&gt;CoderResult&lt;/code&gt; &lt;/a&gt; 객체를 리턴 하여 &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 방식으로 종료 이유를 설명합니다 . 이 방법의 대부분의 구현은 &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 방법으로 해석하기 위해 적절한 결과 객체를 반환하여 디코딩 오류를 처리합니다 . 최적화 된 구현은 대신 관련 오류 조치를 조사하고 해당 조치 자체를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af7492e94d777f895b648e30cde9e372fc30473a" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object to describe its reason for termination, in the same manner as the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method. Most implementations of this method will handle encoding errors by returning an appropriate result object for interpretation by the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method. An optimized implementation may instead examine the relevant error action and implement that action itself.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 방식으로 종료 이유를 설명하기 위해 &lt;a href=&quot;coderresult&quot;&gt; &lt;code&gt;CoderResult&lt;/code&gt; &lt;/a&gt; 오브젝트를 리턴합니다 . 이 메소드의 대부분의 구현은 &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 메소드로 해석하기 위해 적절한 결과 오브젝트를 리턴하여 인코딩 오류를 처리합니다 . 최적화 된 구현은 대신 관련 오류 조치를 조사하고 해당 조치 자체를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3455869c8580cd5340a734c4421327701f598a2" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;code&gt;Point&lt;/code&gt; indicating the &lt;code&gt;Cursor&lt;/code&gt;'s current location in the &lt;code&gt;Component&lt;/code&gt;'s coordinates.</source>
          <target state="translated">이 메서드는 &lt;code&gt;Component&lt;/code&gt; 좌표 에서 &lt;code&gt;Cursor&lt;/code&gt; 의 현재 위치를 나타내는 &lt;code&gt;Point&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a93c7d198480768898fe3f80f58f2a29986e00c0" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;code&gt;Point&lt;/code&gt; indicating the &lt;code&gt;Cursor&lt;/code&gt;'s current location within the &lt;code&gt;Component'&lt;/code&gt;s coordinates.</source>
          <target state="translated">이 메서드는 &lt;code&gt;Component'&lt;/code&gt; 의 좌표 내에서 &lt;code&gt;Cursor&lt;/code&gt; 의 현재 위치를 나타내는 &lt;code&gt;Point&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="fd0ecc0d3c9ccf92c575a44f24a68e7ceae44855" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;code&gt;Point&lt;/code&gt; indicating the cursor location in screen coordinates at the moment this event occurred, or &lt;code&gt;null&lt;/code&gt; if the cursor location is not specified for this event.</source>
          <target state="translated">이 메서드는 이 이벤트가 발생한 시점의 화면 좌표에서 커서 위치를 나타내는 &lt;code&gt;Point&lt;/code&gt; 를 반환 하거나이 이벤트에 대해 커서 위치가 지정되지 않은 경우 &lt;code&gt;null&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3fc0807b65e2e62098494bdaecf746a629ac404f" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;code&gt;ThreadInfo&lt;/code&gt; object representing the thread information for the thread of the specified ID. The stack trace, locked monitors, and locked synchronizers in the returned &lt;code&gt;ThreadInfo&lt;/code&gt; object will be empty. If a thread of the given ID is not alive or does not exist, this method will return &lt;code&gt;null&lt;/code&gt;. A thread is alive if it has been started and has not yet died.</source>
          <target state="translated">이 메소드는 지정된 ID의 스레드에 대한 스레드 정보를 나타내는 &lt;code&gt;ThreadInfo&lt;/code&gt; 오브젝트를 리턴합니다 . 반환 된 &lt;code&gt;ThreadInfo&lt;/code&gt; 객체 의 스택 추적, 잠긴 모니터 및 잠긴 동기화 프로그램은 비어 있습니다. 주어진 ID의 스레드가 존재하지 않거나 존재하지 않으면이 메소드는 &lt;code&gt;null&lt;/code&gt; 을 리턴 합니다. 스레드가 시작되었지만 아직 죽지 않은 경우 스레드가 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="f7ede220d8b48383117be91637cc99ba4286b585" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;code&gt;boolean&lt;/code&gt; indicating if the drop was successful.</source>
          <target state="translated">이 메서드는 드롭이 성공했는지를 나타내는 &lt;code&gt;boolean&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="616502da63e557f227a0827d8ccc7dbcc4079897" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;code&gt;boolean&lt;/code&gt; indicating if the given &lt;code&gt;DataFlavor&lt;/code&gt; is supported by this &lt;code&gt;DropTargetContext&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 지정된 &lt;code&gt;DataFlavor&lt;/code&gt; 가이 &lt;code&gt;DropTargetContext&lt;/code&gt; 에서 지원 되는지 여부를 나타내는 &lt;code&gt;boolean&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a9d9c02a1f83b51fade0ae5c5aa51ee8559765b4" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;code&gt;boolean&lt;/code&gt; indicating if the specified &lt;code&gt;DataFlavor&lt;/code&gt; is available from the source.</source>
          <target state="translated">이 메서드는 지정된 &lt;code&gt;DataFlavor&lt;/code&gt; 를 소스에서 사용할 수 있는지 여부를 나타내는 &lt;code&gt;boolean&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2b38c36ccbc56675ae67c63d6893c2045b9cbde4" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;code&gt;boolean&lt;/code&gt; indicating if the specified &lt;code&gt;DataFlavor&lt;/code&gt; is supported.</source>
          <target state="translated">이 메서드는 지정된 &lt;code&gt;DataFlavor&lt;/code&gt; 가 지원 되는지 여부를 나타내는 &lt;code&gt;boolean&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="395bf424fa9ed97b45844e9194edca5ab6f0d253" translate="yes" xml:space="preserve">
          <source>This method returns a Java object whose type corresponds to the JDBC type that was registered for this parameter using the method &lt;code&gt;registerOutParameter&lt;/code&gt;. By registering the target JDBC type as &lt;code&gt;java.sql.Types.OTHER&lt;/code&gt;, this method can be used to read database-specific abstract data types.</source>
          <target state="translated">이 방법은 그 형태에있어서 사용해 등록 된 JDBC 타입에 대응하는 자바 오브젝트를 반환 &lt;code&gt;registerOutParameter&lt;/code&gt; . 대상 JDBC 유형을 &lt;code&gt;java.sql.Types.OTHER&lt;/code&gt; 로 등록하면 이 메소드를 사용하여 데이터베이스 특정 추상 데이터 유형을 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dff5d4a25ad8f1c7d073be4edb0ddb413e9b6c31" translate="yes" xml:space="preserve">
          <source>This method returns a boolean value. If &lt;code&gt;false&lt;/code&gt; is returned, the request is &lt;b&gt;guaranteed to fail&lt;/b&gt;. If &lt;code&gt;true&lt;/code&gt; is returned, the request will succeed &lt;b&gt;unless&lt;/b&gt; it is vetoed, or an extraordinary event, such as disposal of the Component's peer, occurs before the request can be granted by the native windowing system. Again, while a return value of &lt;code&gt;true&lt;/code&gt; indicates that the request is likely to succeed, developers must never assume that this Component is the focus owner until this Component receives a FOCUS_GAINED event.</source>
          <target state="translated">이 메서드는 부울 값을 반환합니다. 경우 &lt;code&gt;false&lt;/code&gt; 반환 요청이되어 &lt;b&gt;실패 보장&lt;/b&gt; . 경우 &lt;code&gt;true&lt;/code&gt; 반환되고, 요청이 성공 &lt;b&gt;하지 않는 한&lt;/b&gt; 이 거부되거나 네이티브의 윈도우 시스템으로 요구를 부여 할 수 있습니다 전에 이러한 구성 요소의 피어가 파기되는 등의 이상한 이벤트가 발생합니다. 다시, &lt;code&gt;true&lt;/code&gt; 의 반환 값은 요청이 성공할 가능성이 있음을 나타내지 만 개발자는이 Component가 FOCUS_GAINED 이벤트를 수신 할 때까지이 Component가 포커스 소유자라고 가정해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="80ba9f25c3c66bf0153a6f3352ce8de150b64327" translate="yes" xml:space="preserve">
          <source>This method returns a boolean value. If &lt;code&gt;false&lt;/code&gt; is returned, the request is &lt;b&gt;guaranteed to fail&lt;/b&gt;. If &lt;code&gt;true&lt;/code&gt; is returned, the request will succeed &lt;b&gt;unless&lt;/b&gt; it is vetoed, or an extraordinary event, such as disposal of the component's peer, occurs before the request can be granted by the native windowing system. Again, while a return value of &lt;code&gt;true&lt;/code&gt; indicates that the request is likely to succeed, developers must never assume that this component is the focus owner until this component receives a FOCUS_GAINED event.</source>
          <target state="translated">이 메서드는 부울 값을 반환합니다. 경우 &lt;code&gt;false&lt;/code&gt; 반환 요청이되어 &lt;b&gt;실패 보장&lt;/b&gt; . 경우 &lt;code&gt;true&lt;/code&gt; 반환되고, 요청이 성공 &lt;b&gt;하지 않는 한&lt;/b&gt; 이 거부되거나 네이티브의 윈도우 시스템으로 요구를 부여 할 수 있습니다 전에 특별한 이벤트는, 같은 구성 요소의 피어 (peer)의 처분으로 발생합니다. 다시, &lt;code&gt;true&lt;/code&gt; 의 반환 값은 요청이 성공할 가능성이 있음을 나타내지 만 개발자는이 구성 요소가 FOCUS_GAINED 이벤트를 수신 할 때까지이 구성 요소가 포커스 소유자라고 가정해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="e9de187cb9811599661027bd4e5ca9cd8d64d146" translate="yes" xml:space="preserve">
          <source>This method returns a copy of the internally stored list, so all operations on the returned object will not affect the window's behavior.</source>
          <target state="translated">이 메서드는 내부적으로 저장된 목록의 복사본을 반환하므로 반환 된 개체에 대한 모든 작업은 창의 동작에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4598419cdffeadc400039e9736ba9ad1774a776c" translate="yes" xml:space="preserve">
          <source>This method returns a copy of the retrieved password.</source>
          <target state="translated">이 메소드는 검색된 비밀번호의 사본을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="cd1f9c6ab0d681cc17bde0986b4f2d3f4c2a5336" translate="yes" xml:space="preserve">
          <source>This method returns a historically correct offset if an underlying &lt;code&gt;TimeZone&lt;/code&gt; implementation subclass supports historical Daylight Saving Time schedule and GMT offset changes.</source>
          <target state="translated">기본 &lt;code&gt;TimeZone&lt;/code&gt; 구현 서브 클래스가 역사적인 일광 절약 시간제 스케줄 및 GMT 오프셋 변경을 지원 하는 경우이 메소드는 역사적으로 올바른 오프셋을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="578877b97e2dd9db3f5a4d5ba6e568b208ee1d00" translate="yes" xml:space="preserve">
          <source>This method returns a historically correct offset value if an underlying TimeZone implementation subclass supports historical Daylight Saving Time schedule and GMT offset changes.</source>
          <target state="translated">기본 TimeZone 구현 서브 클래스가 역사적인 일광 절약 시간제 스케줄 및 GMT 오프셋 변경을 지원하는 경우이 메소드는 역사적으로 올바른 오프셋 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="cf880fb085eb8e006866ff6bc11e25f2fdc4f18d" translate="yes" xml:space="preserve">
          <source>This method returns a new object based on this one with the specified period added. For example, on a &lt;code&gt;LocalDate&lt;/code&gt;, this could be used to add a number of years, months or days. The returned object will have the same observable type as this object.</source>
          <target state="translated">이 메소드는 지정된 기간이 추가 된이 오브젝트를 기반으로 새 오브젝트를 리턴합니다. 예를 들어 &lt;code&gt;LocalDate&lt;/code&gt; 의 경우 몇 년, 몇 달 또는 몇 일을 추가하는 데 사용할 수 있습니다. 반환 된 객체는이 객체와 동일한 관찰 가능 유형을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="ce46bbe6b70b68c4de2951301dcd5af3392b7067" translate="yes" xml:space="preserve">
          <source>This method returns a new object based on this one with the specified period subtracted. For example, on a &lt;code&gt;LocalDate&lt;/code&gt;, this could be used to subtract a number of years, months or days. The returned object will have the same observable type as this object.</source>
          <target state="translated">이 메소드는 지정된 기간을 빼면이 오브젝트를 기반으로 새 오브젝트를 리턴합니다. 예를 들어, &lt;code&gt;LocalDate&lt;/code&gt; 의 경우 몇 년, 몇 달 또는 몇 일을 뺄 때 사용할 수 있습니다. 반환 된 객체는이 객체와 동일한 관찰 가능 유형을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="4995e2e9d492fba15617d1713716ea64da919048" translate="yes" xml:space="preserve">
          <source>This method returns a positive duration by effectively removing the sign from any negative total length. For example, &lt;code&gt;PT-1.3S&lt;/code&gt; will be returned as &lt;code&gt;PT1.3S&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 음의 총 길이에서 부호를 효과적으로 제거하여 양의 지속 시간을 리턴합니다. 예를 들어, &lt;code&gt;PT-1.3S&lt;/code&gt; 반환됩니다 &lt;code&gt;PT1.3S&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6b2c880adab7578b59dc7627c52435452a38d80" translate="yes" xml:space="preserve">
          <source>This method returns a reference to a &lt;code&gt;FileSystem&lt;/code&gt; that was created by invoking the &lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; method. File systems created the &lt;a href=&quot;#newFileSystem(java.nio.file.Path,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem(Path,Map)&lt;/code&gt;&lt;/a&gt; method are not returned by this method. The file system is identified by its &lt;code&gt;URI&lt;/code&gt;. Its exact form is highly provider dependent. In the case of the default provider the URI's path component is &lt;code&gt;&quot;/&quot;&lt;/code&gt; and the authority, query and fragment components are undefined (Undefined components are represented by &lt;code&gt;null&lt;/code&gt;).</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하여 만든 &lt;code&gt;FileSystem&lt;/code&gt; 에 대한 참조를 반환합니다 . &lt;a href=&quot;#newFileSystem(java.nio.file.Path,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem(Path,Map)&lt;/code&gt; &lt;/a&gt; 메서드를 생성 한 파일 시스템 은이 메서드에 의해 반환되지 않습니다. 파일 시스템은 해당 &lt;code&gt;URI&lt;/code&gt; 로 식별됩니다 . 정확한 형식은 공급자에 따라 크게 다릅니다. 기본 공급자의 경우 URI의 경로 구성 요소는 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 이고 권한, 쿼리 및 조각 구성 요소는 정의되지 않습니다 (정의되지 않은 구성 요소는 &lt;code&gt;null&lt;/code&gt; 로 표시됨).</target>
        </trans-unit>
        <trans-unit id="f98a2bc5ef45c3b2175e8511a4543985d9ec14d2" translate="yes" xml:space="preserve">
          <source>This method returns a reference to a &lt;code&gt;FileSystem&lt;/code&gt; that was created by invoking the &lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; method. File systems created the &lt;a href=&quot;filesystemprovider#newFileSystem-java.nio.file.Path-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem(Path,Map)&lt;/code&gt;&lt;/a&gt; method are not returned by this method. The file system is identified by its &lt;code&gt;URI&lt;/code&gt;. Its exact form is highly provider dependent. In the case of the default provider the URI's path component is &lt;code&gt;&quot;/&quot;&lt;/code&gt; and the authority, query and fragment components are undefined (Undefined components are represented by &lt;code&gt;null&lt;/code&gt;).</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 작성된 &lt;code&gt;FileSystem&lt;/code&gt; 에 대한 참조를 리턴합니다 . &lt;a href=&quot;filesystemprovider#newFileSystem-java.nio.file.Path-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem(Path,Map)&lt;/code&gt; &lt;/a&gt; 메소드를 작성한 파일 시스템 은이 메소드에 의해 리턴되지 않습니다. 파일 시스템은 &lt;code&gt;URI&lt;/code&gt; 로 식별됩니다 . 정확한 형식은 공급자에 따라 다릅니다. 기본 제공자의 경우 URI의 경로 구성 요소는 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 이고 권한, 조회 및 조각 구성 요소는 정의되지 않습니다 (정의되지 않은 구성 요소는 &lt;code&gt;null&lt;/code&gt; 로 표시됨).</target>
        </trans-unit>
        <trans-unit id="ae2dbc5f78213d754a33f5dafafac0bd45b437aa" translate="yes" xml:space="preserve">
          <source>This method returns a specialized object which implements the specialized APIs of the specified feature and version, as specified in .</source>
          <target state="translated">이 메서드는에 지정된대로 지정된 기능 및 버전의 특수 API를 구현하는 특수 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8479cdf3fc4ee5028b0fb02a7a095db3f728dbad" translate="yes" xml:space="preserve">
          <source>This method returns a specialized object which implements the specialized APIs of the specified feature and version, as specified in . The specialized object may also be obtained by using binding-specific casting methods but is not necessarily expected to, as discussed in . This method also allow the implementation to provide specialized objects which do not support the &lt;code&gt;Node&lt;/code&gt; interface.</source>
          <target state="translated">이 메서드는에 지정된대로 지정된 기능 및 버전의 특수 API를 구현하는 특수 객체를 반환합니다. 특수 개체는 바인딩 관련 캐스팅 방법을 사용하여 얻을 수도 있지만에서 논의한대로 반드시 필요한 것은 아닙니다. 이 메서드는 구현에서 &lt;code&gt;Node&lt;/code&gt; 인터페이스를 지원하지 않는 특수 개체를 제공 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1acd48b1d952ed09eee2b8c3f6bcffb9dbf69e8" translate="yes" xml:space="preserve">
          <source>This method returns a specialized object which implements the specialized APIs of the specified feature and version, as specified in &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM Features&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM 기능에&lt;/a&gt; 지정된대로 지정된 기능 및 버전의 특수 API를 구현하는 특수 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="741c87022e0ff6180997bb2419f8bc1268720c33" translate="yes" xml:space="preserve">
          <source>This method returns a specialized object which implements the specialized APIs of the specified feature and version, as specified in &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM Features&lt;/a&gt;. The specialized object may also be obtained by using binding-specific casting methods but is not necessarily expected to, as discussed in . This method also allow the implementation to provide specialized objects which do not support the &lt;code&gt;DOMImplementation&lt;/code&gt; interface.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM 기능에&lt;/a&gt; 지정된대로 지정된 기능 및 버전의 특수 API를 구현하는 특수 객체를 반환합니다 . 특수 개체는 바인딩 관련 캐스팅 방법을 사용하여 얻을 수도 있지만에서 논의한대로 반드시 필요한 것은 아닙니다. 이 메소드는 구현시 &lt;code&gt;DOMImplementation&lt;/code&gt; 인터페이스를 지원하지 않는 특수 객체를 제공 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f10fa890bde97df1e9bd68c5857eda423f4071a2" translate="yes" xml:space="preserve">
          <source>This method returns a status indicator: If negative, it represents the (negative) number of drops (failed attempts to issue the item to a subscriber). Otherwise it is an estimate of the maximum lag (number of items submitted but not yet consumed) among all current subscribers. This value is at least one (accounting for this submitted item) if there are any subscribers, else zero.</source>
          <target state="translated">이 메서드는 상태 표시기를 반환합니다. 음수 인 경우 드롭 (음수) 수를 나타냅니다 (구독자에게 항목을 발급하려는 시도 실패). 그렇지 않으면 현재 모든 구독자 중 최대 지연 (제출되었지만 아직 사용되지 않은 항목 수)의 추정치입니다. 구독자가있는 경우이 값은 적어도 하나 (이 제출 된 항목에 대한 설명)이며 그렇지 않으면 0입니다.</target>
        </trans-unit>
        <trans-unit id="caff31ba62a00d5f86174c8a3b767dc66d16d84b" translate="yes" xml:space="preserve">
          <source>This method returns a the currently available DataFlavors of the &lt;code&gt;Transferable&lt;/code&gt; operand as a &lt;code&gt;java.util.List&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;Transferable&lt;/code&gt; 피연산자 의 현재 사용 가능한 DataFlavors를 &lt;code&gt;java.util.List&lt;/code&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b23479eff6268baa4d527da36ca4ccc1d9254da1" translate="yes" xml:space="preserve">
          <source>This method returns a valid rectangle, even if the specified node is not currently displayed.</source>
          <target state="translated">이 메서드는 지정된 노드가 현재 표시되지 않은 경우에도 유효한 사각형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d3d9e3f858796b64acde060879ce45b8d881f617" translate="yes" xml:space="preserve">
          <source>This method returns all the printing attribute categories this print service supports for any possible job. Some categories may not be supported in a particular context (ie for a particular &lt;code&gt;DocFlavor&lt;/code&gt;). Use one of the methods that include a &lt;code&gt;DocFlavor&lt;/code&gt; to validate the request before submitting it, such as &lt;code&gt;getSupportedAttributeValues(..)&lt;/code&gt;.</source>
          <target state="translated">이 방법은이 인쇄 서비스가 가능한 모든 작업에 대해 지원하는 모든 인쇄 속성 범주를 반환합니다. 특정 범주 (예 : 특정 &lt;code&gt;DocFlavor&lt;/code&gt; ) 에서는 일부 범주가 지원되지 않을 수 있습니다 . &lt;code&gt;DocFlavor&lt;/code&gt; 가 포함 된 메소드 중 하나를 사용 하여 요청을 제출하기 전에 확인하십시오 &lt;code&gt;getSupportedAttributeValues(..)&lt;/code&gt; 예 : getSupportedAttributeValues ​​(..)) .</target>
        </trans-unit>
        <trans-unit id="7199c335295ba07480a5616d7f4a435f31fa4b97" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;code&gt;Object&lt;/code&gt; because different printing attribute categories indicate the supported attribute values in different ways. The documentation for each printing attribute in package &lt;a href=&quot;attribute/standard/package-summary&quot;&gt;&lt;code&gt;javax.print.attribute.standard&lt;/code&gt;&lt;/a&gt; describes how each attribute indicates its supported values. Possible ways of indicating support include:</source>
          <target state="translated">다른 인쇄 속성 범주가 지원되는 속성 값을 다른 방식으로 나타 내기 때문에이 메서드는 &lt;code&gt;Object&lt;/code&gt; 를 반환합니다 . 패키지 &lt;a href=&quot;attribute/standard/package-summary&quot;&gt; &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; 의&lt;/a&gt; 각 인쇄 속성에 대한 문서는 각 속성이 지원되는 값을 나타내는 방법을 설명합니다. 지원을 표시하는 가능한 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="383517daaece5998ba81d3715ecb8b52e93c4406" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;code&gt;int&lt;/code&gt; indicating if the source is in the same JVM as the target.</source>
          <target state="translated">이 메소드는 소스가 대상과 동일한 JVM에 있는지 여부를 나타내는 &lt;code&gt;int&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="1d6ce812c877912e6a2d93b8cc236d39f3b86b61" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;code&gt;int&lt;/code&gt; representing the action performed by the target on the subject of the drop.</source>
          <target state="translated">이 메서드는 드롭 대상에 대해 대상이 수행 한 작업을 나타내는 &lt;code&gt;int&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5a13118eb43ecc89aef44932db232188f1ee071f" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;code&gt;int&lt;/code&gt; representing the current actions this &lt;code&gt;DropTarget&lt;/code&gt; will accept.</source>
          <target state="translated">이 메서드는 이 &lt;code&gt;DropTarget&lt;/code&gt; 이 수락 할 현재 작업을 나타내는 &lt;code&gt;int&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="13c96afd77a194a3b27453a723ff664d221c4e4b" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;code&gt;int&lt;/code&gt; representing the current state of the input device extended modifiers associated with the user's gesture.</source>
          <target state="translated">이 메서드는 사용자의 제스처와 관련된 입력 장치 확장 수정 자의 현재 상태를 나타내는 &lt;code&gt;int&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d0634864bd32dc57be011890b0b0e77cca098119" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;code&gt;int&lt;/code&gt; representing the current state of the input device extended modifiers associated with the user's gesture. See &lt;a href=&quot;../event/inputevent#getModifiersEx()&quot;&gt;&lt;code&gt;InputEvent.getModifiersEx()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 메서드는 사용자의 제스처와 관련된 입력 장치 확장 수정 자의 현재 상태를 나타내는 &lt;code&gt;int&lt;/code&gt; 를 반환합니다 . &lt;a href=&quot;../event/inputevent#getModifiersEx()&quot;&gt; &lt;code&gt;InputEvent.getModifiersEx()&lt;/code&gt; &lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fcbe0a23550d16656a04f48054719176dce09c7b" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;code&gt;int&lt;/code&gt; representing the current state of the input device modifiers associated with the user's gesture.</source>
          <target state="translated">이 메서드는 사용자의 제스처와 관련된 입력 장치 수정 자의 현재 상태를 나타내는 &lt;code&gt;int&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9c5c0b7678da4f1f885ede58cdd2edae36bc14e3" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;code&gt;int&lt;/code&gt; representing the current state of the input device modifiers associated with the user's gesture. Typically these would be mouse buttons or keyboard modifiers.</source>
          <target state="translated">이 메서드는 사용자의 제스처와 관련된 입력 장치 수정 자의 현재 상태를 나타내는 &lt;code&gt;int&lt;/code&gt; 를 반환합니다 . 일반적으로 마우스 버튼 또는 키보드 수정 자입니다.</target>
        </trans-unit>
        <trans-unit id="a27e98ed975b6fbde54735985b3c18e81ef5eb5f" translate="yes" xml:space="preserve">
          <source>This method returns an Object because different printing attribute categories indicate the supported attribute values in different ways. The documentation for each printing attribute in package &lt;a href=&quot;attribute/standard/package-summary&quot;&gt;&lt;code&gt;javax.print.attribute.standard&lt;/code&gt;&lt;/a&gt; describes how each attribute indicates its supported values. Possible ways of indicating support include:</source>
          <target state="translated">다른 인쇄 속성 범주가 지원되는 속성 값을 다른 방식으로 나타 내기 때문에이 메소드는 Object를 리턴합니다. &lt;a href=&quot;attribute/standard/package-summary&quot;&gt; &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; &lt;/a&gt; 패키지의 각 인쇄 속성의 문서에, 각 속성이 지원되는 값을 나타내는 방법이 설명되어 있습니다. 지원을 나타내는 가능한 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="45da8fd65f076fc11d683ea0eed1323ffeb65aac" translate="yes" xml:space="preserve">
          <source>This method returns an array containing the sub-menu components for this menu component.</source>
          <target state="translated">이 메서드는이 메뉴 구성 요소에 대한 하위 메뉴 구성 요소를 포함하는 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1b53f09e05f51a0a8205d2058aae33758ec1957e" translate="yes" xml:space="preserve">
          <source>This method returns an array of &lt;a href=&quot;threadinfo&quot;&gt;&lt;code&gt;ThreadInfo&lt;/code&gt;&lt;/a&gt; objects as specified in the &lt;a href=&quot;#getThreadInfo(long%5B%5D,boolean,boolean,int)&quot;&gt;&lt;code&gt;getThreadInfo(long[], boolean, boolean, int)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#getThreadInfo(long%5B%5D,boolean,boolean,int)&quot;&gt; &lt;code&gt;getThreadInfo(long[], boolean, boolean, int)&lt;/code&gt; &lt;/a&gt; 메서드에 지정된대로 &lt;a href=&quot;threadinfo&quot;&gt; &lt;code&gt;ThreadInfo&lt;/code&gt; &lt;/a&gt; 개체 의 배열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="22e7584f26d52ab68f8f1bfdea8be12715c8e2f2" translate="yes" xml:space="preserve">
          <source>This method returns an array of &lt;a href=&quot;threadinfo&quot;&gt;&lt;code&gt;ThreadInfo&lt;/code&gt;&lt;/a&gt; objects as specified in the &lt;a href=&quot;threadmxbean#getThreadInfo-long:A-boolean-boolean-&quot;&gt;&lt;code&gt;getThreadInfo(long[], boolean, boolean)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;threadmxbean#getThreadInfo-long:A-boolean-boolean-&quot;&gt; &lt;code&gt;getThreadInfo(long[], boolean, boolean)&lt;/code&gt; &lt;/a&gt; 메소드에 지정된대로 &lt;a href=&quot;threadinfo&quot;&gt; &lt;code&gt;ThreadInfo&lt;/code&gt; &lt;/a&gt; 오브젝트 의 배열을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="96cee8a868089e071178e8cf360a91b1597daac9" translate="yes" xml:space="preserve">
          <source>This method returns an array of &lt;code&gt;File&lt;/code&gt; objects that denote the root directories of the available filesystem roots. It is guaranteed that the canonical pathname of any file physically present on the local machine will begin with one of the roots returned by this method.</source>
          <target state="translated">이 메소드는 사용 가능한 파일 시스템 루트의 루트 디렉토리를 나타내는 &lt;code&gt;File&lt;/code&gt; 객체 의 배열을 반환합니다 . 로컬 시스템에 실제로 존재하는 파일의 표준 경로 이름은이 방법으로 반환 된 루트 중 하나로 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="4ce5d7412d91430c76eac8d90e3f9d1b46e744e3" translate="yes" xml:space="preserve">
          <source>This method returns an array of &lt;code&gt;KeyBindings&lt;/code&gt;, one for each alternating &lt;code&gt;key-action&lt;/code&gt; pair in &lt;code&gt;keyBindingList&lt;/code&gt;. A &lt;code&gt;key&lt;/code&gt; can either be a &lt;code&gt;String&lt;/code&gt; in the format specified by the &lt;code&gt;KeyStroke.getKeyStroke&lt;/code&gt; method, or a &lt;code&gt;KeyStroke&lt;/code&gt;. The &lt;code&gt;action&lt;/code&gt; part of the pair is a &lt;code&gt;String&lt;/code&gt; that corresponds to the name of the &lt;code&gt;
 Action&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;keyBindingList&lt;/code&gt; 의 각 교대 &lt;code&gt;key-action&lt;/code&gt; 쌍에 대해 하나씩 &lt;code&gt;KeyBindings&lt;/code&gt; 배열을 반환합니다 . &lt;code&gt;key&lt;/code&gt; 중 하나가 될 수있는 &lt;code&gt;String&lt;/code&gt; 에 의해 지정된 형식의 &lt;code&gt;KeyStroke.getKeyStroke&lt;/code&gt; 의 방법, 또는 &lt;code&gt;KeyStroke&lt;/code&gt; . 쌍 의 &lt;code&gt;action&lt;/code&gt; 부분은 &lt;code&gt; Action&lt;/code&gt; 의 이름에 해당 하는 &lt;code&gt;String&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="6fd82c48fff0fda384c4e3bd2af562ca71729df9" translate="yes" xml:space="preserve">
          <source>This method returns an array of the &lt;code&gt;ThreadInfo&lt;/code&gt; objects, each is the thread information about the thread with the same index as in the &lt;code&gt;ids&lt;/code&gt; array. If a thread of the given ID is not alive or does not exist, &lt;code&gt;null&lt;/code&gt; will be set in the corresponding element in the returned array. A thread is alive if it has been started and has not yet died.</source>
          <target state="translated">이 메소드는 &lt;code&gt;ThreadInfo&lt;/code&gt; 오브젝트 의 배열을 리턴 합니다. 각각은 &lt;code&gt;ids&lt;/code&gt; 배열 에서와 동일한 색인을 가진 스레드에 대한 스레드 정보 입니다. 주어진 ID의 스레드가 존재하지 않거나 존재하지 않으면 반환 된 배열의 해당 요소에 &lt;code&gt;null&lt;/code&gt; 이 설정됩니다. 스레드가 시작되었지만 아직 죽지 않은 경우 스레드가 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="ad388440ab095ed3394cdf7678373f9ea4ea5481" translate="yes" xml:space="preserve">
          <source>This method returns an array of the &lt;code&gt;ThreadInfo&lt;/code&gt; objects. The stack trace, locked monitors, and locked synchronizers in each &lt;code&gt;ThreadInfo&lt;/code&gt; object will be empty. If a thread of a given ID is not alive or does not exist, the corresponding element in the returned array will contain &lt;code&gt;null&lt;/code&gt;. A thread is alive if it has been started and has not yet died.</source>
          <target state="translated">이 메소드는 &lt;code&gt;ThreadInfo&lt;/code&gt; 객체 의 배열을 반환 합니다. 각 &lt;code&gt;ThreadInfo&lt;/code&gt; 객체 의 스택 추적, 잠긴 모니터 및 잠긴 동기화 프로그램 이 비어 있습니다. 지정된 ID의 스레드가 존재하지 않거나 존재하지 않으면 반환 된 배열의 해당 요소에 &lt;code&gt;null&lt;/code&gt; 이 포함 됩니다. 스레드가 시작되었지만 아직 죽지 않은 경우 스레드가 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="c5f4ee1c972fa9198fa348ae8c72e3f62e7fb19f" translate="yes" xml:space="preserve">
          <source>This method returns an array rather than a &lt;code&gt;Set&lt;/code&gt; or &lt;code&gt;Stream&lt;/code&gt; for consistency with the existing &lt;a href=&quot;#getPackages()&quot;&gt;&lt;code&gt;getPackages()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 기존 &lt;a href=&quot;#getPackages()&quot;&gt; &lt;code&gt;getPackages()&lt;/code&gt; &lt;/a&gt; 메서드 와의 일관성을 위해 &lt;code&gt;Set&lt;/code&gt; 또는 &lt;code&gt;Stream&lt;/code&gt; 대신 배열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="12443d584bf87eece4a46bc4cf8d68cee84e25c5" translate="yes" xml:space="preserve">
          <source>This method returns an asynchronous server socket channel that is bound to the &lt;em&gt;default group&lt;/em&gt;. This method is equivalent to evaluating the expression:</source>
          <target state="translated">이 메소드는 &lt;em&gt;기본 그룹에&lt;/em&gt; 바인드 된 비동기 서버 소켓 채널을 리턴합니다 . 이 방법은 표현식을 평가하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="58d374dd65abe2c7947b9e4d26a095f7bb3a058e" translate="yes" xml:space="preserve">
          <source>This method returns an asynchronous socket channel that is bound to the &lt;em&gt;default group&lt;/em&gt;.This method is equivalent to evaluating the expression:</source>
          <target state="translated">이 메소드는 &lt;em&gt;기본 그룹에&lt;/em&gt; 바인드 된 비동기 소켓 채널을 리턴합니다. 이 메소드는 표현식을 평가하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c859aadae0914b45b901176e23d5c1e0ed5ebaa9" translate="yes" xml:space="preserve">
          <source>This method returns an enumeration of the results. Each element in the enumeration contains the name of the object and other information about the object (see &lt;code&gt;SearchResult&lt;/code&gt;). The name is either relative to the target context of the search (which is named by the &lt;code&gt;name&lt;/code&gt; parameter), or it is a URL string. If the target context is included in the enumeration (as is possible when &lt;code&gt;cons&lt;/code&gt; specifies a search scope of &lt;code&gt;SearchControls.OBJECT_SCOPE&lt;/code&gt; or &lt;code&gt;SearchControls.SUBSTREE_SCOPE&lt;/code&gt;), its name is the empty string.</source>
          <target state="translated">이 메소드는 결과의 열거를 리턴합니다. 열거의 각 요소에는 객체의 이름과 객체에 대한 기타 정보가 포함됩니다 ( &lt;code&gt;SearchResult&lt;/code&gt; 참조 ). 이름은 검색의 대상 컨텍스트 ( &lt;code&gt;name&lt;/code&gt; 매개 변수로 이름 지정)에 상대적 이거나 URL 문자열입니다. 대상 컨텍스트가 열거에 포함 된 경우 ( &lt;code&gt;cons&lt;/code&gt; 가 &lt;code&gt;SearchControls.OBJECT_SCOPE&lt;/code&gt; 또는 &lt;code&gt;SearchControls.SUBSTREE_SCOPE&lt;/code&gt; 의 검색 범위를 지정할 때 가능한 것처럼 ) 해당 이름은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="89b3b7f534f1fb42c5d679857d79a6d2a92f6965" translate="yes" xml:space="preserve">
          <source>This method returns an int representing the type of action(s) this Drag and Drop operation will support.</source>
          <target state="translated">이 메서드는이 끌어서 놓기 작업이 지원할 작업 유형을 나타내는 int를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d3c94a8386b6094a7f526c48d273a5ef05aedd02" translate="yes" xml:space="preserve">
          <source>This method returns an object with the same &lt;code&gt;LocalDateTime&lt;/code&gt; and the specified &lt;code&gt;ZoneOffset&lt;/code&gt;. No calculation is needed or performed. For example, if this time represents &lt;code&gt;2007-12-03T10:30+02:00&lt;/code&gt; and the offset specified is &lt;code&gt;+03:00&lt;/code&gt;, then this method will return &lt;code&gt;2007-12-03T10:30+03:00&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 동일한 &lt;code&gt;LocalDateTime&lt;/code&gt; 및 지정된 &lt;code&gt;ZoneOffset&lt;/code&gt; 을 가진 오브젝트를 리턴합니다 . 계산이 필요하지 않습니다. 예를 들어,이 시간이 &lt;code&gt;2007-12-03T10:30+02:00&lt;/code&gt; 이고 지정된 오프셋이 &lt;code&gt;+03:00&lt;/code&gt; 이면이 메서드는 &lt;code&gt;2007-12-03T10:30+03:00&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="9e49dbda5e113fb188bcad6045907c72611fa6f8" translate="yes" xml:space="preserve">
          <source>This method returns an object with the same &lt;code&gt;LocalTime&lt;/code&gt; and the specified &lt;code&gt;ZoneOffset&lt;/code&gt;. No calculation is needed or performed. For example, if this time represents &lt;code&gt;10:30+02:00&lt;/code&gt; and the offset specified is &lt;code&gt;+03:00&lt;/code&gt;, then this method will return &lt;code&gt;10:30+03:00&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 동일한 &lt;code&gt;LocalTime&lt;/code&gt; 및 지정된 &lt;code&gt;ZoneOffset&lt;/code&gt; 을 가진 오브젝트를 리턴합니다 . 계산이 필요하지 않습니다. 예를 들어,이 시간이 &lt;code&gt;10:30+02:00&lt;/code&gt; 이고 지정된 오프셋이 &lt;code&gt;+03:00&lt;/code&gt; 이면이 메서드는 &lt;code&gt;10:30+03:00&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="64a2375be194ab393d8128f2ae1822212679d38f" translate="yes" xml:space="preserve">
          <source>This method returns an object with the specified &lt;code&gt;ZoneOffset&lt;/code&gt; and a &lt;code&gt;LocalDateTime&lt;/code&gt; adjusted by the difference between the two offsets. This will result in the old and new objects representing the same instant. This is useful for finding the local time in a different offset. For example, if this time represents &lt;code&gt;2007-12-03T10:30+02:00&lt;/code&gt; and the offset specified is &lt;code&gt;+03:00&lt;/code&gt;, then this method will return &lt;code&gt;2007-12-03T11:30+03:00&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 지정된 &lt;code&gt;ZoneOffset&lt;/code&gt; 및 &lt;code&gt;LocalDateTime&lt;/code&gt; 이 두 오프셋의 차이로 조정 된 개체를 반환 합니다. 이로 인해 동일한 순간을 나타내는 이전 및 새 객체가 생성됩니다. 다른 오프셋에서 현지 시간을 찾는 데 유용합니다. 예를 들어,이 시간이 &lt;code&gt;2007-12-03T10:30+02:00&lt;/code&gt; 이고 지정된 오프셋이 &lt;code&gt;+03:00&lt;/code&gt; 이면이 메서드는 &lt;code&gt;2007-12-03T11:30+03:00&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="9a3492f34f21944e0c97ecddfccefeb8d27d851d" translate="yes" xml:space="preserve">
          <source>This method returns an object with the specified &lt;code&gt;ZoneOffset&lt;/code&gt; and a &lt;code&gt;LocalTime&lt;/code&gt; adjusted by the difference between the two offsets. This will result in the old and new objects representing the same instant on an implied day. This is useful for finding the local time in a different offset. For example, if this time represents &lt;code&gt;10:30+02:00&lt;/code&gt; and the offset specified is &lt;code&gt;+03:00&lt;/code&gt;, then this method will return &lt;code&gt;11:30+03:00&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 지정된 &lt;code&gt;ZoneOffset&lt;/code&gt; 과 &lt;code&gt;LocalTime&lt;/code&gt; 이 두 오프셋의 차이로 조정 된 개체를 반환 합니다. 이로 인해 묵시적인 날에 동일한 순간을 나타내는 이전 및 새 객체가 생성됩니다. 다른 오프셋에서 현지 시간을 찾는 데 유용합니다. 예를 들어,이 시간이 &lt;code&gt;10:30+02:00&lt;/code&gt; 이고 지정된 오프셋이 &lt;code&gt;+03:00&lt;/code&gt; 이면이 메서드는 &lt;code&gt;11:30+03:00&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="27fecc19f57bdbcd136e3078c6aa1a574753fe81" translate="yes" xml:space="preserve">
          <source>This method returns false by default. Keystore implementations should override this method to peek at the data stream directly or to use other content detection mechanisms.</source>
          <target state="translated">이 메서드는 기본적으로 false를 반환합니다. 키 저장소 구현은 데이터 스트림을 직접 보거나 다른 콘텐츠 감지 메커니즘을 사용하려면이 메서드를 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="1e32aa3de2aed05cabbb11fe3518de5e0debe37b" translate="yes" xml:space="preserve">
          <source>This method returns if there is a derivation between the reference type definition, i.e. the &lt;code&gt;TypeInfo&lt;/code&gt; on which the method is being called, and the other type definition, i.e. the one passed as parameters.</source>
          <target state="translated">이 메소드는 참조 유형 정의, 즉 메소드가 호출되는 &lt;code&gt;TypeInfo&lt;/code&gt; 와 다른 유형 정의, 즉 매개 변수로 전달 된 정의 사이에 파생이있는 경우 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="cb61823841081f94ee3c9c8663ee98f8d8cd86a4" translate="yes" xml:space="preserve">
          <source>This method returns immediately in all cases, even if the complete image has not yet been loaded, and it has not been dithered and converted for the current output device.</source>
          <target state="translated">이 메서드는 전체 이미지가 아직로드되지 않았고 현재 출력 장치에 대해 디더링 및 변환되지 않은 경우에도 모든 경우에 즉시 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="208062ff9b942475c594d218a1e728c88da7008b" translate="yes" xml:space="preserve">
          <source>This method returns immediately in all cases, even if the entire image has not yet been scaled, dithered, and converted for the current output device. If the current output representation is not yet complete then &lt;code&gt;drawImage&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. As more of the image becomes available, the process that loads the image notifies the specified image observer.</source>
          <target state="translated">이 메서드는 현재 출력 장치에 대해 전체 이미지가 아직 크기 조정, 디더링 및 변환되지 않은 경우에도 모든 경우에 즉시 반환됩니다. 현재 출력 표현이 아직 완료되지 않은 경우 &lt;code&gt;drawImage&lt;/code&gt; 는 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 더 많은 이미지를 사용할 수있게되면 이미지를로드하는 프로세스가 지정된 이미지 관찰자에게 알립니다.</target>
        </trans-unit>
        <trans-unit id="1f34298881213532b8c2eb192ba70530b19060ec" translate="yes" xml:space="preserve">
          <source>This method returns immediately in all cases, even if the entire image has not yet been scaled, dithered, and converted for the current output device. If the current output representation is not yet complete, then &lt;code&gt;drawImage&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. As more of the image becomes available, the process that loads the image notifies the image observer by calling its &lt;code&gt;imageUpdate&lt;/code&gt; method.</source>
          <target state="translated">이 메서드는 현재 출력 장치에 대해 전체 이미지가 아직 크기 조정, 디더링 및 변환되지 않은 경우에도 모든 경우에 즉시 반환됩니다. 현재 출력 표현이 아직 완료되지 않은 경우 &lt;code&gt;drawImage&lt;/code&gt; 는 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 더 많은 이미지를 사용할 수있게되면 이미지를로드하는 프로세스는 &lt;code&gt;imageUpdate&lt;/code&gt; 메서드 를 호출하여 이미지 관찰자에게 알립니다 .</target>
        </trans-unit>
        <trans-unit id="242b720b2828a122e5cdb407f9700114067c2d3d" translate="yes" xml:space="preserve">
          <source>This method returns immediately in all cases, even if the image area to be drawn has not yet been scaled, dithered, and converted for the current output device. If the current output representation is not yet complete then &lt;code&gt;drawImage&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. As more of the image becomes available, the process that loads the image notifies the specified image observer.</source>
          <target state="translated">이 메서드는 그릴 이미지 영역이 현재 출력 장치에 대해 아직 크기 조정, 디더링 및 변환되지 않은 경우에도 모든 경우에 즉시 반환됩니다. 현재 출력 표현이 아직 완료되지 않은 경우 &lt;code&gt;drawImage&lt;/code&gt; 는 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 더 많은 이미지를 사용할 수있게되면 이미지를로드하는 프로세스가 지정된 이미지 관찰자에게 알립니다.</target>
        </trans-unit>
        <trans-unit id="94f32e9ae0ae8c5a02c96fb6bc696d439431ac76" translate="yes" xml:space="preserve">
          <source>This method returns prefixes mapped to a specific Namespace URI. The xml: prefix will be included. If you want only one prefix that's mapped to the Namespace URI, and you don't care which one you get, use the &lt;a href=&quot;#getPrefix(java.lang.String)&quot;&gt;&lt;code&gt;getPrefix&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="translated">이 메서드는 특정 네임 스페이스 URI에 매핑 된 접두사를 반환합니다. xml : 접두사가 포함됩니다. 네임 스페이스 URI에 매핑 된 하나의 접두사 만 원하고 어떤 접두사를 가져와도 상관이 없다면 &lt;a href=&quot;#getPrefix(java.lang.String)&quot;&gt; &lt;code&gt;getPrefix&lt;/code&gt; &lt;/a&gt; 메서드를 대신 사용하세요 .</target>
        </trans-unit>
        <trans-unit id="e54179eaa20151601ee66ab0815237b92d95925c" translate="yes" xml:space="preserve">
          <source>This method returns silently if the provider is not installed or if name is null.</source>
          <target state="translated">이 메소드는 제공자가 설치되지 않았거나 name이 널인 경우 자동으로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f896185622639af1e6f82d7c41d7ddb1af7c75c5" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;code&gt;Component&lt;/code&gt; associated with this &lt;code&gt;DropTargetContext&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 이 &lt;code&gt;DropTargetContext&lt;/code&gt; 에 관련된 &lt;code&gt;Component&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="2e5783605c6c2ea65d0406774687fb457efe7805" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;code&gt;Component&lt;/code&gt; that is to be &quot;observed&quot; by the &lt;code&gt;DragGestureRecognizer&lt;/code&gt; for drag initiating gestures.</source>
          <target state="translated">이 메서드는 드래그 시작 제스처를 위해 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 가 &quot;관찰&quot;할 &lt;code&gt;Component&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="50fe0185f9bdf577001c5ca84d66528b97ea3e93" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;code&gt;DragSource&lt;/code&gt; this &lt;code&gt;DragGestureRecognizer&lt;/code&gt; will use in order to process the Drag and Drop operation.</source>
          <target state="translated">이 방법은 반환 &lt;code&gt;DragSource&lt;/code&gt; ,이 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 의이 드래그 &amp;amp; 드롭 조작을 처리하기 위해 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6566d08a51061c2a8f3d9466eac4b8e610e6b8d1" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;code&gt;DragSourceContext&lt;/code&gt; that originated the event.</source>
          <target state="translated">이 메서드는 이벤트를 발생시킨 &lt;code&gt;DragSourceContext&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="57bd7de035f97ff57cc96d93c5f5da8a27d88c6a" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;code&gt;DropTarget&lt;/code&gt; associated with this &lt;code&gt;DropTargetContext&lt;/code&gt;.</source>
          <target state="translated">이 방법은 반환 &lt;code&gt;DropTarget&lt;/code&gt; 에 이와 관련 &lt;code&gt;DropTargetContext&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac9914b9192f4e6bf1ae1f28e51f82ff60f03647" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;code&gt;DropTargetContext&lt;/code&gt; associated with this &lt;code&gt;DropTargetEvent&lt;/code&gt;.</source>
          <target state="translated">이 방법은 반환 &lt;code&gt;DropTargetContext&lt;/code&gt; 에 이과 관련된 &lt;code&gt;DropTargetEvent&lt;/code&gt; 에를 .</target>
        </trans-unit>
        <trans-unit id="06f0661d5f7b8788a66a864cdc225ed08d2123d6" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;code&gt;FlavorMap&lt;/code&gt; for this &lt;code&gt;DragSource&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 이 &lt;code&gt;DragSource&lt;/code&gt; 에 대한 &lt;code&gt;FlavorMap&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="dbfdb7fbaf8cc1cab807aeaf9c309578837e35df" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;code&gt;Insets&lt;/code&gt; describing the autoscrolling region or border relative to the geometry of the implementing Component.</source>
          <target state="translated">이 메서드는 구현하는 구성 요소의 지오메트리에 상대적인 자동 스크롤 영역 또는 테두리를 설명 하는 &lt;code&gt;Insets&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e9bcbd16583b9f3407c0a331a23fbb0a050635b9" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;code&gt;Transferable&lt;/code&gt; object associated with the drop.</source>
          <target state="translated">이 메서드는 드롭과 관련된 &lt;code&gt;Transferable&lt;/code&gt; 개체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="881bf7242092d74503e2bb177ab0111ab5957eb3" translate="yes" xml:space="preserve">
          <source>This method returns the Transferable object that represents the data associated with the current drag operation.</source>
          <target state="translated">이 메서드는 현재 드래그 작업과 관련된 데이터를 나타내는 Transferable 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="096a799e0be99bdebe843ad2f3fe72056fb193da" translate="yes" xml:space="preserve">
          <source>This method returns the channel obtained by invoking the &lt;a href=&quot;../nio/channels/spi/selectorprovider#inheritedChannel--&quot;&gt;&lt;code&gt;inheritedChannel&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;../nio/channels/spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">이 메소드는 시스템 전체의 기본 &lt;a href=&quot;../nio/channels/spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;a href=&quot;../nio/channels/spi/selectorprovider#inheritedChannel--&quot;&gt; &lt;code&gt;inheritedChannel&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 얻은 채널을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="981fd7bc56b0079e7d32d45fd8f7901394c94f25" translate="yes" xml:space="preserve">
          <source>This method returns the current &lt;code&gt;DataFlavor&lt;/code&gt;s as a &lt;code&gt;java.util.List&lt;/code&gt;</source>
          <target state="translated">이 메소드는 현재 &lt;code&gt;DataFlavor&lt;/code&gt; 를 &lt;code&gt;java.util.List&lt;/code&gt; 로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d58ba9dacab383bb85f33d458a6dfde38ae1b9d0" translate="yes" xml:space="preserve">
          <source>This method returns the current &lt;code&gt;DataFlavor&lt;/code&gt;s from the &lt;code&gt;DropTargetContext&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;DropTargetContext&lt;/code&gt; 에서 현재 &lt;code&gt;DataFlavor&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="134521400c02f78f7c7c1ddf4ed0758c69c2df43" translate="yes" xml:space="preserve">
          <source>This method returns the current DataFlavors.</source>
          <target state="translated">이 메서드는 현재 DataFlavors를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ae1243847cdb3977632ecb8732cb5e905841471c" translate="yes" xml:space="preserve">
          <source>This method returns the currently available &lt;code&gt;DataFlavor&lt;/code&gt;s as a &lt;code&gt;java.util.List&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 현재 사용 가능한 &lt;code&gt;DataFlavor&lt;/code&gt; 를 &lt;code&gt;java.util.List&lt;/code&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5c3ca11251fa537906d6a085e4f9e20bd8c6d0fe" translate="yes" xml:space="preserve">
          <source>This method returns the enum &lt;a href=&quot;dayofweek&quot;&gt;&lt;code&gt;DayOfWeek&lt;/code&gt;&lt;/a&gt; for the day-of-week. This avoids confusion as to what &lt;code&gt;int&lt;/code&gt; values mean. If you need access to the primitive &lt;code&gt;int&lt;/code&gt; value then the enum provides the &lt;a href=&quot;dayofweek#getValue()&quot;&gt;&lt;code&gt;int value&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;dayofweek&quot;&gt; &lt;code&gt;DayOfWeek&lt;/code&gt; &lt;/a&gt; 대한 열거 형 DayOfWeek 를 반환합니다 . 이것은 &lt;code&gt;int&lt;/code&gt; 값의 의미 에 대한 혼동을 방지 합니다. 원시 &lt;code&gt;int&lt;/code&gt; 값에 액세스해야하는 경우 열거 형은 &lt;a href=&quot;dayofweek#getValue()&quot;&gt; &lt;code&gt;int value&lt;/code&gt; &lt;/a&gt; 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="a22965859dd87dbbfbd8a3a69d4390902caf6f26" translate="yes" xml:space="preserve">
          <source>This method returns the enum &lt;a href=&quot;dayofweek&quot;&gt;&lt;code&gt;DayOfWeek&lt;/code&gt;&lt;/a&gt; for the day-of-week. This avoids confusion as to what &lt;code&gt;int&lt;/code&gt; values mean. If you need access to the primitive &lt;code&gt;int&lt;/code&gt; value then the enum provides the &lt;a href=&quot;dayofweek#getValue--&quot;&gt;&lt;code&gt;int value&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;dayofweek&quot;&gt; &lt;code&gt;DayOfWeek&lt;/code&gt; &lt;/a&gt; 대한 열거 형 DayOfWeek 를 리턴합니다 . 이것은 &lt;code&gt;int&lt;/code&gt; 값의 의미 에 대한 혼란을 피 합니다. 프리미티브 &lt;code&gt;int&lt;/code&gt; 값에 액세스해야하는 경우 열거 형은 &lt;a href=&quot;dayofweek#getValue--&quot;&gt; &lt;code&gt;int value&lt;/code&gt; &lt;/a&gt; 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="0aacef2c94f58f0275f57b79b06f182f4ad3608e" translate="yes" xml:space="preserve">
          <source>This method returns the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; for the month. This avoids confusion as to what &lt;code&gt;int&lt;/code&gt; values mean. If you need access to the primitive &lt;code&gt;int&lt;/code&gt; value then the enum provides the &lt;a href=&quot;month#getValue()&quot;&gt;&lt;code&gt;int value&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt; 대한 열거 형 Month 를 반환합니다 . 이것은 &lt;code&gt;int&lt;/code&gt; 값의 의미 에 대한 혼동을 방지 합니다. 원시 &lt;code&gt;int&lt;/code&gt; 값에 액세스해야하는 경우 열거 형은 &lt;a href=&quot;month#getValue()&quot;&gt; &lt;code&gt;int value&lt;/code&gt; &lt;/a&gt; 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="f094b9734e58036cc7f0d7e749cf03913864efae" translate="yes" xml:space="preserve">
          <source>This method returns the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; for the month. This avoids confusion as to what &lt;code&gt;int&lt;/code&gt; values mean. If you need access to the primitive &lt;code&gt;int&lt;/code&gt; value then the enum provides the &lt;a href=&quot;month#getValue--&quot;&gt;&lt;code&gt;int value&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 해당 &lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt; 의 enum Month 를 리턴합니다 . 이것은 &lt;code&gt;int&lt;/code&gt; 값의 의미 에 대한 혼란을 피 합니다. 프리미티브 &lt;code&gt;int&lt;/code&gt; 값에 액세스해야하는 경우 열거 형은 &lt;a href=&quot;month#getValue--&quot;&gt; &lt;code&gt;int value&lt;/code&gt; &lt;/a&gt; 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="f9ea31e2a848ebaff27378963ba462c132634a10" translate="yes" xml:space="preserve">
          <source>This method returns the first event in the series of events that initiated the Drag and Drop operation.</source>
          <target state="translated">이 메서드는 드래그 앤 드롭 작업을 시작한 일련의 이벤트 중 첫 번째 이벤트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1728d0bd76dddf94e9d9441b88f1b45c039068b8" translate="yes" xml:space="preserve">
          <source>This method returns the horizontal coordinate of the cursor location in screen coordinates at the moment this event occurred, or zero if the cursor location is not specified for this event.</source>
          <target state="translated">이 메서드는이 이벤트가 발생한 시점의 화면 좌표에서 커서 위치의 수평 좌표를 반환하거나이 이벤트에 대해 커서 위치가 지정되지 않은 경우 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c04c9dd3eaac5e0b74c8dda78b202ebfa94eb288" translate="yes" xml:space="preserve">
          <source>This method returns the logical intersection of the target drop action and the set of drop actions supported by the drag source.</source>
          <target state="translated">이 메서드는 대상 놓기 작업과 끌기 소스에서 지원하는 놓기 작업 집합의 논리적 교차를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d12354e226e2d4ffca61a4141a1a6763f2290a42" translate="yes" xml:space="preserve">
          <source>This method returns the major tick spacing.</source>
          <target state="translated">이 메서드는 주요 눈금 간격을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8944cfde4f7ffd0f0e654bf67165ed94d368d6a7" translate="yes" xml:space="preserve">
          <source>This method returns the major tick spacing. The number that is returned represents the distance, measured in values, between each major tick mark. If you have a slider with a range from 0 to 50 and the major tick spacing is set to 10, you will get major ticks next to the following values: 0, 10, 20, 30, 40, 50.</source>
          <target state="translated">이 메서드는 주요 눈금 간격을 반환합니다. 반환되는 숫자는 각 주 눈금 표시 사이의 거리 (값으로 측정 됨)를 나타냅니다. 범위가 0에서 50 인 슬라이더가 있고 주 눈금 간격이 10으로 설정된 경우 0, 10, 20, 30, 40, 50 값 옆에 주 눈금이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f0edad8158656dfdce54b6143dd4b4b81cd1d6a6" translate="yes" xml:space="preserve">
          <source>This method returns the minor tick spacing.</source>
          <target state="translated">이 메서드는 작은 눈금 간격을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f0482d28190b0787cea2d427f7be6e6e896798d4" translate="yes" xml:space="preserve">
          <source>This method returns the minor tick spacing. The number that is returned represents the distance, measured in values, between each minor tick mark. If you have a slider with a range from 0 to 50 and the minor tick spacing is set to 10, you will get minor ticks next to the following values: 0, 10, 20, 30, 40, 50.</source>
          <target state="translated">이 메서드는 작은 눈금 간격을 반환합니다. 반환되는 숫자는 각 보조 눈금 표시 사이의 거리 (값으로 측정 됨)를 나타냅니다. 범위가 0에서 50 인 슬라이더가 있고 보조 눈금 간격이 10으로 설정된 경우 0, 10, 20, 30, 40, 50 값 옆에 보조 눈금이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="5ebc3a6e9f0929dc77a8b20ebc4bd1539801ed2f" translate="yes" xml:space="preserve">
          <source>This method returns the month as an &lt;code&gt;int&lt;/code&gt; from 1 to 12. Application code is frequently clearer if the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; is used by calling &lt;a href=&quot;#getMonth()&quot;&gt;&lt;code&gt;getMonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 월 을 1부터 12까지 의 &lt;code&gt;int&lt;/code&gt; 로 반환합니다 . &lt;a href=&quot;#getMonth()&quot;&gt; &lt;code&gt;getMonth()&lt;/code&gt; &lt;/a&gt; 를 호출 하여 열거 형 &lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt; 를 사용하는 경우 응용 프로그램 코드가 더 명확 해집니다 .</target>
        </trans-unit>
        <trans-unit id="0e14b1a452ffeac588fdbd1918c1e714acd4a2e7" translate="yes" xml:space="preserve">
          <source>This method returns the month as an &lt;code&gt;int&lt;/code&gt; from 1 to 12. Application code is frequently clearer if the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; is used by calling &lt;a href=&quot;localdate#getMonth--&quot;&gt;&lt;code&gt;getMonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 월 을 1에서 12 사이 의 &lt;code&gt;int&lt;/code&gt; 로 리턴합니다 . 열거 형 &lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;localdate#getMonth--&quot;&gt; &lt;code&gt;getMonth()&lt;/code&gt; &lt;/a&gt; 를 호출하여 사용되는 경우 애플리케이션 코드가 더 명확합니다 .</target>
        </trans-unit>
        <trans-unit id="ec0b53bcb0115598582f28d1f5dd31562d18e95b" translate="yes" xml:space="preserve">
          <source>This method returns the month as an &lt;code&gt;int&lt;/code&gt; from 1 to 12. Application code is frequently clearer if the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; is used by calling &lt;a href=&quot;localdatetime#getMonth--&quot;&gt;&lt;code&gt;getMonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 월 을 1에서 12 사이 의 &lt;code&gt;int&lt;/code&gt; 로 리턴합니다 . 열거 형 &lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;localdatetime#getMonth--&quot;&gt; &lt;code&gt;getMonth()&lt;/code&gt; &lt;/a&gt; 를 호출하여 사용되는 경우 애플리케이션 코드가 더 명확합니다 .</target>
        </trans-unit>
        <trans-unit id="2c9518bbc958f1ef7f4a5267280c5f3b9fa7fda7" translate="yes" xml:space="preserve">
          <source>This method returns the month as an &lt;code&gt;int&lt;/code&gt; from 1 to 12. Application code is frequently clearer if the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; is used by calling &lt;a href=&quot;monthday#getMonth--&quot;&gt;&lt;code&gt;getMonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 월 을 1에서 12 사이 의 &lt;code&gt;int&lt;/code&gt; 로 리턴합니다 . 열거 형 &lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;monthday#getMonth--&quot;&gt; &lt;code&gt;getMonth()&lt;/code&gt; &lt;/a&gt; 를 호출하여 사용되는 경우 애플리케이션 코드가 더 명확합니다 .</target>
        </trans-unit>
        <trans-unit id="99f4fa75f86be0f9d463226662b550280e30d1b9" translate="yes" xml:space="preserve">
          <source>This method returns the month as an &lt;code&gt;int&lt;/code&gt; from 1 to 12. Application code is frequently clearer if the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; is used by calling &lt;a href=&quot;offsetdatetime#getMonth--&quot;&gt;&lt;code&gt;getMonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 월 을 1에서 12 사이 의 &lt;code&gt;int&lt;/code&gt; 로 리턴합니다 . 열거 형 &lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;offsetdatetime#getMonth--&quot;&gt; &lt;code&gt;getMonth()&lt;/code&gt; &lt;/a&gt; 를 호출하여 사용되는 경우 애플리케이션 코드가 더 명확합니다 .</target>
        </trans-unit>
        <trans-unit id="49a67cf97747e94dc55b5045ecbe797e55b95f85" translate="yes" xml:space="preserve">
          <source>This method returns the month as an &lt;code&gt;int&lt;/code&gt; from 1 to 12. Application code is frequently clearer if the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; is used by calling &lt;a href=&quot;yearmonth#getMonth--&quot;&gt;&lt;code&gt;getMonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 월 을 1에서 12 사이 의 &lt;code&gt;int&lt;/code&gt; 로 리턴합니다 . 열거 형 &lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;yearmonth#getMonth--&quot;&gt; &lt;code&gt;getMonth()&lt;/code&gt; &lt;/a&gt; 를 호출하여 사용되는 경우 애플리케이션 코드가 더 명확합니다 .</target>
        </trans-unit>
        <trans-unit id="288036dec84bf41e4662838cf6f6a387c34d127d" translate="yes" xml:space="preserve">
          <source>This method returns the month as an &lt;code&gt;int&lt;/code&gt; from 1 to 12. Application code is frequently clearer if the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; is used by calling &lt;a href=&quot;zoneddatetime#getMonth--&quot;&gt;&lt;code&gt;getMonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 월 을 1에서 12 사이 의 &lt;code&gt;int&lt;/code&gt; 로 리턴합니다 . 열거 형 &lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;zoneddatetime#getMonth--&quot;&gt; &lt;code&gt;getMonth()&lt;/code&gt; &lt;/a&gt; 를 호출하여 사용되는 경우 애플리케이션 코드가 더 명확합니다 .</target>
        </trans-unit>
        <trans-unit id="e357cbe7c592cbedd71e3376d507bbe920a84b6a" translate="yes" xml:space="preserve">
          <source>This method returns the most recently pushed-back byte, if there is one, and otherwise calls the &lt;code&gt;read&lt;/code&gt; method of its underlying input stream and returns whatever value that method returns.</source>
          <target state="translated">이 메소드는 가장 최근에 푸시 백 된 바이트를 리턴합니다 (있는 경우). 그렇지 않으면 기본 입력 스트림 의 &lt;code&gt;read&lt;/code&gt; 메소드를 호출하고 해당 메소드가 리턴하는 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="729f3b81efc551b47dff0322bf0b3bb789bab6b5" translate="yes" xml:space="preserve">
          <source>This method returns the nearest extant parent in the namespace. Thus if a Logger is called &quot;a.b.c.d&quot;, and a Logger called &quot;a.b&quot; has been created but no logger &quot;a.b.c&quot; exists, then a call of getParent on the Logger &quot;a.b.c.d&quot; will return the Logger &quot;a.b&quot;.</source>
          <target state="translated">이 메서드는 네임 스페이스에서 가장 가까운 부모를 반환합니다. 따라서 로거의 이름이 &quot;abcd&quot;이고 &quot;ab&quot;라는 로거가 작성되었지만 로거 &quot;abc&quot;가없는 경우 로거 &quot;abcd&quot;의 getParent 호출은 로거 &quot;ab&quot;를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e86680c855b2006b71588d3ac2f25dfc444e6e66" translate="yes" xml:space="preserve">
          <source>This method returns the node which received the replacement text. The returned node is:</source>
          <target state="translated">이 메서드는 대체 텍스트를받은 노드를 반환합니다. 반환 된 노드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3c329d1855213163cbd94910ac8197699a6ce7b8" translate="yes" xml:space="preserve">
          <source>This method returns the number of bytes available in accelerated memory on this device.</source>
          <target state="translated">이 메서드는이 장치의 가속 메모리에서 사용할 수있는 바이트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d58d39b642cbe0b1704a7c4912909e7e7bbf0226" translate="yes" xml:space="preserve">
          <source>This method returns the number of bytes available in accelerated memory on this device. Some images are created or cached in accelerated memory on a first-come, first-served basis. On some operating systems, this memory is a finite resource. Calling this method and scheduling the creation and flushing of images carefully may enable applications to make the most efficient use of that finite resource.</source>
          <target state="translated">이 메서드는이 장치의 가속 메모리에서 사용할 수있는 바이트 수를 반환합니다. 일부 이미지는 선착순으로 생성되거나 가속 메모리에 캐시됩니다. 일부 운영 체제에서이 메모리는 한정된 리소스입니다. 이 메서드를 호출하고 이미지 생성 및 플러시를 신중하게 예약하면 응용 프로그램이 해당 유한 리소스를 가장 효율적으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ea1789d07b0b16c71ed11424ac7a8116ce830d3" translate="yes" xml:space="preserve">
          <source>This method returns the number of units to scroll when scroll type is MouseWheelEvent.WHEEL_UNIT_SCROLL, and should only be called if &lt;code&gt;getScrollType&lt;/code&gt; returns MouseWheelEvent.WHEEL_UNIT_SCROLL.</source>
          <target state="translated">이 메서드는 스크롤 유형이 MouseWheelEvent.WHEEL_UNIT_SCROLL 일 때 스크롤 할 단위 수를 반환하며 &lt;code&gt;getScrollType&lt;/code&gt; 이 MouseWheelEvent.WHEEL_UNIT_SCROLL을 반환하는 경우에만 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="62c2e246cd63848e32d79eb7a1cd9cf138d6edac" translate="yes" xml:space="preserve">
          <source>This method returns the object on which it is called. A subclass can override it to return another object provided the contract is respected.</source>
          <target state="translated">이 메소드는 호출 된 오브젝트를 리턴합니다. 계약이 준수되는 경우 서브 클래스가이를 대체하여 다른 오브젝트를 리턴 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b63ffe79d8b5d2cae15f49f4d02780b4c67ecb08" translate="yes" xml:space="preserve">
          <source>This method returns the object that was last set through the &lt;a href=&quot;#getContentHandler()&quot;&gt;&lt;code&gt;getContentHandler()&lt;/code&gt;&lt;/a&gt; method, or null if that method has never been called since this &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; has created.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#getContentHandler()&quot;&gt; &lt;code&gt;getContentHandler()&lt;/code&gt; &lt;/a&gt; 메서드를 통해 마지막으로 설정된 객체를 반환 하거나이 &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt; 가 생성 된 이후 해당 메서드가 호출 된 적이없는 경우 null을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a2faafffc604787c0d42331a05fcb098d74efad6" translate="yes" xml:space="preserve">
          <source>This method returns the object that was last set through the &lt;a href=&quot;#setErrorHandler(org.xml.sax.ErrorHandler)&quot;&gt;&lt;code&gt;setErrorHandler(ErrorHandler)&lt;/code&gt;&lt;/a&gt; method, or null if that method has never been called since this &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; has created.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#setErrorHandler(org.xml.sax.ErrorHandler)&quot;&gt; &lt;code&gt;setErrorHandler(ErrorHandler)&lt;/code&gt; &lt;/a&gt; 메서드를 통해 마지막으로 설정된 객체를 반환 &lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt; 가 생성 된 이후 해당 메서드가 호출 된 적이없는 경우 null을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="467a346679bc385b441885142b9829cd7db61cd5" translate="yes" xml:space="preserve">
          <source>This method returns the object that was last set through the &lt;a href=&quot;#setErrorHandler(org.xml.sax.ErrorHandler)&quot;&gt;&lt;code&gt;setErrorHandler(ErrorHandler)&lt;/code&gt;&lt;/a&gt; method, or null if that method has never been called since this &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;/a&gt; has created.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#setErrorHandler(org.xml.sax.ErrorHandler)&quot;&gt; &lt;code&gt;setErrorHandler(ErrorHandler)&lt;/code&gt; &lt;/a&gt; 메서드를 통해 마지막으로 설정된 객체를 반환 하거나이 &lt;a href=&quot;validator&quot;&gt; &lt;code&gt;Validator&lt;/code&gt; &lt;/a&gt; 가 생성 된 이후 해당 메서드가 호출 된 적이없는 경우 null을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9359f9a3640230743301b04e8c21c280ee85ee0d" translate="yes" xml:space="preserve">
          <source>This method returns the object that was last set through the &lt;a href=&quot;#setErrorHandler(org.xml.sax.ErrorHandler)&quot;&gt;&lt;code&gt;setErrorHandler(ErrorHandler)&lt;/code&gt;&lt;/a&gt; method, or null if that method has never been called since this &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; has created.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#setErrorHandler(org.xml.sax.ErrorHandler)&quot;&gt; &lt;code&gt;setErrorHandler(ErrorHandler)&lt;/code&gt; &lt;/a&gt; 메서드를 통해 마지막으로 설정된 객체를 반환 하거나이 &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt; 가 생성 된 이후 해당 메서드가 호출 된 적이없는 경우 null을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6c2e830e875a521a606b777a9e3faa5ece38ec0c" translate="yes" xml:space="preserve">
          <source>This method returns the object that was last set through the &lt;a href=&quot;#setResourceResolver(org.w3c.dom.ls.LSResourceResolver)&quot;&gt;&lt;code&gt;setResourceResolver(LSResourceResolver)&lt;/code&gt;&lt;/a&gt; method, or null if that method has never been called since this &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; has created.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#setResourceResolver(org.w3c.dom.ls.LSResourceResolver)&quot;&gt; &lt;code&gt;setResourceResolver(LSResourceResolver)&lt;/code&gt; &lt;/a&gt; 메서드를 통해 마지막으로 설정된 객체를 반환 하거나이 &lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt; 가 생성 된 이후 해당 메서드가 호출 된 적이없는 경우 null을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a616b0c37b2bfc736fd19f9fd0da1fe7a2f34145" translate="yes" xml:space="preserve">
          <source>This method returns the object that was last set through the &lt;a href=&quot;#setResourceResolver(org.w3c.dom.ls.LSResourceResolver)&quot;&gt;&lt;code&gt;setResourceResolver(LSResourceResolver)&lt;/code&gt;&lt;/a&gt; method, or null if that method has never been called since this &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;/a&gt; has created.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#setResourceResolver(org.w3c.dom.ls.LSResourceResolver)&quot;&gt; &lt;code&gt;setResourceResolver(LSResourceResolver)&lt;/code&gt; &lt;/a&gt; 메서드를 통해 마지막으로 설정된 객체를 반환 하거나이 &lt;a href=&quot;validator&quot;&gt; &lt;code&gt;Validator&lt;/code&gt; &lt;/a&gt; 가 생성 된 이후 해당 메서드가 호출 된 적이없는 경우 null을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ac8734c62267d53e10985a4bd2c10971b9962c77" translate="yes" xml:space="preserve">
          <source>This method returns the object that was last set through the &lt;a href=&quot;#setResourceResolver(org.w3c.dom.ls.LSResourceResolver)&quot;&gt;&lt;code&gt;setResourceResolver(LSResourceResolver)&lt;/code&gt;&lt;/a&gt; method, or null if that method has never been called since this &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; has created.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#setResourceResolver(org.w3c.dom.ls.LSResourceResolver)&quot;&gt; &lt;code&gt;setResourceResolver(LSResourceResolver)&lt;/code&gt; &lt;/a&gt; 메서드를 통해 마지막으로 설정된 객체를 반환 하거나이 &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt; 가 생성 된 이후 해당 메서드가 호출 된 적이없는 경우 null을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cbd103f3dca089e4d35de20f77ab1d677952eaeb" translate="yes" xml:space="preserve">
          <source>This method returns the primitive &lt;code&gt;int&lt;/code&gt; value for the day-of-month.</source>
          <target state="translated">이 메소드는 월의 기본 &lt;code&gt;int&lt;/code&gt; 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="29fb4873a53454ba01b371258b2e1a0c98256b61" translate="yes" xml:space="preserve">
          <source>This method returns the primitive &lt;code&gt;int&lt;/code&gt; value for the day-of-year.</source>
          <target state="translated">이 메소드는 일의 프리미티브 &lt;code&gt;int&lt;/code&gt; 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0f84492756296babe253a083a8521646c91691af" translate="yes" xml:space="preserve">
          <source>This method returns the primitive &lt;code&gt;int&lt;/code&gt; value for the year.</source>
          <target state="translated">이 메소드는 연도 의 기본 &lt;code&gt;int&lt;/code&gt; 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="c004cd32ce7383479a3fcdeebab8a5603ec02869" translate="yes" xml:space="preserve">
          <source>This method returns the range of the field in the ISO-8601 calendar system. This range may be incorrect for other calendar systems. Use &lt;a href=&quot;../chrono/chronology#range(java.time.temporal.ChronoField)&quot;&gt;&lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt;&lt;/a&gt; to access the correct range for a different calendar system.</source>
          <target state="translated">이 메서드는 ISO-8601 달력 시스템의 필드 범위를 반환합니다. 다른 달력 시스템에서는이 범위가 올바르지 않을 수 있습니다. 사용 &lt;a href=&quot;../chrono/chronology#range(java.time.temporal.ChronoField)&quot;&gt; &lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt; &lt;/a&gt; 다른 달력 시스템에 대한 올바른 범위에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b1e63827aa9afce63f0a20e64e75169de9e06a3" translate="yes" xml:space="preserve">
          <source>This method returns the range of the field in the ISO-8601 calendar system. This range may be incorrect for other calendar systems. Use &lt;a href=&quot;../chrono/chronology#range-java.time.temporal.ChronoField-&quot;&gt;&lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt;&lt;/a&gt; to access the correct range for a different calendar system.</source>
          <target state="translated">이 방법은 ISO-8601 달력 시스템에서 필드의 범위를 반환합니다. 다른 달력 시스템에서는이 범위가 올바르지 않을 수 있습니다. 사용 &lt;a href=&quot;../chrono/chronology#range-java.time.temporal.ChronoField-&quot;&gt; &lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt; &lt;/a&gt; 다른 달력 시스템에 대한 올바른 범위에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0eda87c53e2ce0d7d924015dc399081cedfa044a" translate="yes" xml:space="preserve">
          <source>This method returns the result of &lt;a href=&quot;#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt;.available().</source>
          <target state="translated">이 방법의 결과 반환 &lt;a href=&quot;#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt; .available을 ().</target>
        </trans-unit>
        <trans-unit id="ef945f86886260debb2ff15cd741dd7793da2f87" translate="yes" xml:space="preserve">
          <source>This method returns the result of &lt;a href=&quot;filterinputstream#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt;.available().</source>
          <target state="translated">이 방법의 결과 반환 &lt;a href=&quot;filterinputstream#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt; .available을 ().</target>
        </trans-unit>
        <trans-unit id="66f8ce7dec95f661d4f4f0bccc846817dc7f8e4b" translate="yes" xml:space="preserve">
          <source>This method returns the root of the schema information tree that is applicable to the named object. Several named objects (or even an entire directory) might share the same schema.</source>
          <target state="translated">이 메소드는 이름 지정된 오브젝트에 적용 가능한 스키마 정보 트리의 루트를 리턴합니다. 여러 명명 된 객체 (또는 전체 디렉토리)가 동일한 스키마를 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28209e46b3fdb11909e0140c20b5d382144e1f6a" translate="yes" xml:space="preserve">
          <source>This method returns the same result as the two-argument versions of &lt;code&gt;setScale&lt;/code&gt;, but saves the caller the trouble of specifying a rounding mode in cases where it is irrelevant.</source>
          <target state="translated">이 메소드는 두 개의 인수 버전의 &lt;code&gt;setScale&lt;/code&gt; 과 동일한 결과를 리턴 하지만 호출자가 관련이없는 경우 반올림 모드를 지정하는 문제점을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="78972b2eb2f19e3407ffa2b185d202106f9914d5" translate="yes" xml:space="preserve">
          <source>This method returns the singleton era of the correct type for the specified era value.</source>
          <target state="translated">이 메소드는 지정된 연대 값에 대한 올바른 유형의 싱글 톤 연대를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="dc2e847ef088b359e6f13e28e766b9918ba13e9f" translate="yes" xml:space="preserve">
          <source>This method returns the source drop actions.</source>
          <target state="translated">이 메서드는 소스 삭제 작업을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="23db6b845fd8c22e91698b6f147956eb1b58ce5e" translate="yes" xml:space="preserve">
          <source>This method returns the string &lt;code&gt;&quot;BIG_ENDIAN&quot;&lt;/code&gt; for &lt;a href=&quot;#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;&quot;LITTLE_ENDIAN&quot;&lt;/code&gt; for &lt;a href=&quot;#LITTLE_ENDIAN&quot;&gt;&lt;code&gt;LITTLE_ENDIAN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 문자열을 반환합니다 &lt;code&gt;&quot;BIG_ENDIAN&quot;&lt;/code&gt; 에 대한 &lt;a href=&quot;#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;&quot;LITTLE_ENDIAN&quot;&lt;/code&gt; 에 대한 &lt;a href=&quot;#LITTLE_ENDIAN&quot;&gt; &lt;code&gt;LITTLE_ENDIAN&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8d66232cfe68fdef26fee7b852c91a2f6edfc6e2" translate="yes" xml:space="preserve">
          <source>This method returns the string &lt;code&gt;&quot;BIG_ENDIAN&quot;&lt;/code&gt; for &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;&quot;LITTLE_ENDIAN&quot;&lt;/code&gt; for &lt;a href=&quot;byteorder#LITTLE_ENDIAN&quot;&gt;&lt;code&gt;LITTLE_ENDIAN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 문자열을 반환합니다 &lt;code&gt;&quot;BIG_ENDIAN&quot;&lt;/code&gt; 에 대한 &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;&quot;LITTLE_ENDIAN&quot;&lt;/code&gt; 에 대한 &lt;a href=&quot;byteorder#LITTLE_ENDIAN&quot;&gt; &lt;code&gt;LITTLE_ENDIAN&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97dea25a4738ecf811b303cb1add7be21f8f9310" translate="yes" xml:space="preserve">
          <source>This method returns the sum of the number of bytes remaining to be read in the buffer (&lt;code&gt;count&amp;nbsp;- pos&lt;/code&gt;) and the result of calling the &lt;a href=&quot;filterinputstream#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt;.available().</source>
          <target state="translated">이 메소드는 버퍼에서 읽은 나머지 바이트 수 ( &lt;code&gt;count&amp;nbsp;- pos&lt;/code&gt; )와 &lt;a href=&quot;filterinputstream#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt; .available () 호출 결과의 합계를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="7348593b903b360236606fd8750380d75353a18c" translate="yes" xml:space="preserve">
          <source>This method returns the target drop action.</source>
          <target state="translated">이 메서드는 대상 놓기 작업을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3c56ecc1f377b5355ea66c7538c1696ac4b6e987" translate="yes" xml:space="preserve">
          <source>This method returns the user drop action.</source>
          <target state="translated">이 메서드는 사용자 삭제 작업을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="14969615a2c69b25e26a465fcbbbc09926d68612" translate="yes" xml:space="preserve">
          <source>This method returns the vertical coordinate of the cursor location in screen coordinates at the moment this event occurred, or zero if the cursor location is not specified for this event.</source>
          <target state="translated">이 메서드는이 이벤트가 발생한 시점의 화면 좌표에서 커서 위치의 수직 좌표를 반환하거나이 이벤트에 대해 커서 위치가 지정되지 않은 경우 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a7d07bd9695374aa6e4e6520e5eff98feedd4299" translate="yes" xml:space="preserve">
          <source>This method returns true if this &lt;code&gt;DelegationPermission&lt;/code&gt; is equal to &lt;code&gt;p&lt;/code&gt;, and returns false otherwise.</source>
          <target state="translated">이 &lt;code&gt;DelegationPermission&lt;/code&gt; 이 &lt;code&gt;p&lt;/code&gt; 와 같으면 이 메서드는 true를 반환하고 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6fee1b06b53ec9221ddb54c84e056343046d2b24" translate="yes" xml:space="preserve">
          <source>This method returns true if:</source>
          <target state="translated">이 메소드는 다음과 같은 경우에 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="960896b13eeb2075050a9415f532576daa0e172f" translate="yes" xml:space="preserve">
          <source>This method returns whether or not the &lt;code&gt;Caret&lt;/code&gt; is currently in a blinking state. It does not provide information as to whether it is currently blinked on or off. To determine if the caret is currently painted use the &lt;code&gt;isVisible&lt;/code&gt; method.</source>
          <target state="translated">이 메서드 는 현재 &lt;code&gt;Caret&lt;/code&gt; 이 깜박임 상태 인지 여부를 반환합니다 . 현재 깜박임이 켜져 있는지 꺼져 있는지에 대한 정보는 제공하지 않습니다. 캐럿이 현재 그려져 있는지 확인하려면 &lt;code&gt;isVisible&lt;/code&gt; 메서드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e72419101078d515fd0561eb0c03a7b646ae4d97" translate="yes" xml:space="preserve">
          <source>This method runs in linear time.</source>
          <target state="translated">이 방법은 선형 시간으로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="9eda0757c2e5646daa119a8994ecb3f23d0d9dc7" translate="yes" xml:space="preserve">
          <source>This method runs in linear time. If the specified list does not implement the &lt;a href=&quot;randomaccess&quot;&gt;&lt;code&gt;RandomAccess&lt;/code&gt;&lt;/a&gt; interface and is large, this implementation dumps the specified list into an array before shuffling it, and dumps the shuffled array back into the list. This avoids the quadratic behavior that would result from shuffling a &quot;sequential access&quot; list in place.</source>
          <target state="translated">이 방법은 선형 시간으로 실행됩니다. 지정된리스트가 &lt;a href=&quot;randomaccess&quot;&gt; &lt;code&gt;RandomAccess&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하지 않고 큰 경우,이 구현은 지정된리스트를 셔플하기 전에 배열에 덤프하고, 셔플 된 배열을리스트에 다시 덤프합니다. 이렇게하면 &quot;순차 액세스&quot;목록을 섞어서 발생하는 2 차 동작을 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a775b01962d956b9e06ebfef16fc5299acbcfd95" translate="yes" xml:space="preserve">
          <source>This method runs in log(n) time for a &quot;random access&quot; list (which provides near-constant-time positional access). If the specified list does not implement the &lt;a href=&quot;randomaccess&quot;&gt;&lt;code&gt;RandomAccess&lt;/code&gt;&lt;/a&gt; interface and is large, this method will do an iterator-based binary search that performs O(n) link traversals and O(log n) element comparisons.</source>
          <target state="translated">이 방법은 &quot;랜덤 액세스&quot;목록에 대해 log (n) 시간으로 실행됩니다 (이는 거의 일정한 시간의 위치 액세스를 제공합니다). 지정된리스트가 &lt;a href=&quot;randomaccess&quot;&gt; &lt;code&gt;RandomAccess&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하지 않고 큰 경우,이 메소드는 O (n) 링크 순회 및 O (log n) 요소 비교를 수행하는 반복자 기반 2 진 검색을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="69d583066bf3c5f7e113987b8d71d05e37697602" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt; 의 일반 계약을 만족합니다.</target>
        </trans-unit>
        <trans-unit id="b3a38e45520b8b5de6da8e0498aedbab71ef1a6f" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="5acceea1701e7ee90751fb9c695a426a19e7ca9f" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of &lt;a href=&quot;../../../../java.base/java/lang/object#toString()&quot;&gt;&lt;code&gt;Object.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../../../../java.base/java/lang/object#toString()&quot;&gt; &lt;code&gt;Object.toString()&lt;/code&gt; &lt;/a&gt; 일반 계약을 만족합니다 .</target>
        </trans-unit>
        <trans-unit id="2b93f0fbbda4643b47cee9769e87436c816a6ef1" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="447306cc227846929f6a9eb689f9d572414c6a51" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../../../lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../../../lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="b4aad462284b0b19c7043f83c4a15cf73ee5dfa1" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../../../lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../../../lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals&lt;/code&gt; &lt;/a&gt; 메소드 의 일반 계약을 충족시킵니다 .</target>
        </trans-unit>
        <trans-unit id="d077f211c12a1c851663b1e8e7ca459998534495" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../../../lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../../../lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="8696ca26ca420ff769671a0d6b061a7afc412d55" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../../../lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../../../lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 메소드 의 일반 계약을 충족시킵니다 .</target>
        </trans-unit>
        <trans-unit id="ad3e07997c785bd7b76066808ffc8acc9bc472d6" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../../lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../../lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="9afb334f76f0709fbefa834912b0ae8d6392ded6" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals&lt;/code&gt; &lt;/a&gt; 메소드 의 일반 계약을 충족시킵니다 .</target>
        </trans-unit>
        <trans-unit id="83a33133280d7c4a1912984e5c5c97457bd10b61" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../lang/comparable#compareTo(T)&quot;&gt;&lt;code&gt;Comparable.compareTo&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../lang/comparable#compareTo(T)&quot;&gt; &lt;code&gt;Comparable.compareTo&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="50382711bd8e19aa7d035d616ce22135cd5083d4" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../lang/comparable#compareTo-T-&quot;&gt;&lt;code&gt;Comparable.compareTo&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;../lang/comparable#compareTo-T-&quot;&gt; &lt;code&gt;Comparable.compareTo&lt;/code&gt; &lt;/a&gt; 방법 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="7ca0072fba5fef7386a0ba54dc33d673c18185a6" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="5331897f818caac3e947824f50a47ff5791d467a" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals&lt;/code&gt; &lt;/a&gt; 메소드 의 일반 계약을 충족시킵니다 .</target>
        </trans-unit>
        <trans-unit id="e145324e812ef2de8e3339d0bc6a907f57bdd364" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="30058877bdc80d4a153b8f7b71619a6b02f026a5" translate="yes" xml:space="preserve">
          <source>This method searches through the input up to the specified search horizon, ignoring delimiters. If the pattern is found the scanner advances past the input that matched and returns the string that matched the pattern. If no such pattern is detected then the null is returned and the scanner's position remains unchanged. This method may block waiting for input that matches the pattern.</source>
          <target state="translated">이 메소드는 구분 기호를 무시하고 지정된 검색 범위까지 입력을 검색합니다. 패턴이 발견되면 스캐너는 일치하는 입력을지나 진행하고 패턴과 일치하는 문자열을 반환합니다. 이러한 패턴이 감지되지 않으면 null이 반환되고 스캐너 위치는 변경되지 않습니다. 이 메소드는 패턴과 일치하는 입력 대기를 차단할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed695e60d3d1623fe660248c997ee3c98b315417" translate="yes" xml:space="preserve">
          <source>This method sets all of the model's data with a single method call.</source>
          <target state="translated">이 메서드는 단일 메서드 호출로 모델의 모든 데이터를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="fb34515bf010c9593d1ce8875f9b2db9174f6195" translate="yes" xml:space="preserve">
          <source>This method sets all of the model's data with a single method call. The method results in a single change event being generated. This is convenient when you need to adjust all the model data simultaneously and do not want individual change events to occur.</source>
          <target state="translated">이 메서드는 단일 메서드 호출로 모델의 모든 데이터를 설정합니다. 이 방법은 단일 변경 이벤트를 생성합니다. 이것은 모든 모델 데이터를 동시에 조정해야하고 개별 변경 이벤트가 발생하지 않도록 할 때 편리합니다.</target>
        </trans-unit>
        <trans-unit id="bede8aef2498ea7e17e818be56e29a82cc31e3e0" translate="yes" xml:space="preserve">
          <source>This method sets the component's state such that the double buffer will not be used: painting will be done directly on the passed in &lt;code&gt;Graphics&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 이중 버퍼가 사용되지 않도록 구성 요소의 상태를 설정합니다. 그림은 &lt;code&gt;Graphics&lt;/code&gt; 에 전달 된 부분에서 직접 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="3ea3e0902f771a2397179e354cbd742773bd8988" translate="yes" xml:space="preserve">
          <source>This method sets the current actions acceptable to this &lt;code&gt;DropTarget&lt;/code&gt;.</source>
          <target state="translated">이 메서드는이 &lt;code&gt;DropTarget&lt;/code&gt; 에 허용되는 현재 작업을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="9354321c84a1ea90c9062a85dfb3bf67f78bd73f" translate="yes" xml:space="preserve">
          <source>This method sets the major tick spacing.</source>
          <target state="translated">이 방법은 주 눈금 간격을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c8ae409348848e1874a72c7470eaa9dc9dcba36e" translate="yes" xml:space="preserve">
          <source>This method sets the major tick spacing. The number that is passed in represents the distance, measured in values, between each major tick mark. If you have a slider with a range from 0 to 50 and the major tick spacing is set to 10, you will get major ticks next to the following values: 0, 10, 20, 30, 40, 50.</source>
          <target state="translated">이 방법은 주 눈금 간격을 설정합니다. 전달되는 숫자는 각 주 눈금 표시 사이의 거리를 값으로 측정합니다. 범위가 0에서 50 인 슬라이더가 있고 주 눈금 간격이 10으로 설정된 경우 0, 10, 20, 30, 40, 50 값 옆에 주 눈금이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7e9cfcd3caaa62a74c4da6881e7e28f1b7a2045c" translate="yes" xml:space="preserve">
          <source>This method sets the minor tick spacing.</source>
          <target state="translated">이 방법은 작은 눈금 간격을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f087d9661d093a9671ab69593cca13554545a4c5" translate="yes" xml:space="preserve">
          <source>This method sets the minor tick spacing. The number that is passed in represents the distance, measured in values, between each minor tick mark. If you have a slider with a range from 0 to 50 and the minor tick spacing is set to 10, you will get minor ticks next to the following values: 0, 10, 20, 30, 40, 50.</source>
          <target state="translated">이 방법은 작은 눈금 간격을 설정합니다. 전달 된 숫자는 각 보조 눈금 표시 사이의 거리 (값으로 측정 됨)를 나타냅니다. 범위가 0에서 50 인 슬라이더가 있고 보조 눈금 간격이 10으로 설정된 경우 0, 10, 20, 30, 40, 50 값 옆에 보조 눈금이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="22ddbc71a88efdfb3a5da922a901be3fcff57b3c" translate="yes" xml:space="preserve">
          <source>This method sets the permitted source drag action(s) for this Drag and Drop operation.</source>
          <target state="translated">이 메서드는이 끌어서 놓기 작업에 대해 허용 된 소스 끌기 동작을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a7813a8fdf5863702af2867c2e63a6b3884944e3" translate="yes" xml:space="preserve">
          <source>This method sets the specified sharding key but does not require a round trip to the database to validate that the sharding key is valid for the &lt;code&gt;Connection&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 지정된 샤딩 키를 설정하지만 샤딩 키가 &lt;code&gt;Connection&lt;/code&gt; 에 유효한지 확인하기 위해 데이터베이스로의 왕복이 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9cd8a7789881b6a760f909bc356ec34061e2063c" translate="yes" xml:space="preserve">
          <source>This method sets the specified sharding keys but does not require a round trip to the database to validate that the sharding keys are valid for the &lt;code&gt;Connection&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 지정된 샤딩 키를 설정하지만 샤딩 키가 &lt;code&gt;Connection&lt;/code&gt; 에 대해 유효한지 확인하기 위해 데이터베이스로의 왕복이 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7d6a4653b685096e2ae5fd036837d83dd0c1940e" translate="yes" xml:space="preserve">
          <source>This method sets the start and end positions of the selected text, enforcing the restriction that the start position must be greater than or equal to zero. The end position must be greater than or equal to the start position, and less than or equal to the length of the text component's text.</source>
          <target state="translated">이 메서드는 선택한 텍스트의 시작 및 끝 위치를 설정하여 시작 위치가 0보다 크거나 같아야한다는 제한을 적용합니다. 끝 위치는 시작 위치보다 크거나 같고 텍스트 구성 요소의 텍스트 길이보다 작거나 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="9f9df24fcae28553a3328948bd69919a94048092" translate="yes" xml:space="preserve">
          <source>This method sets the start and end positions of the selected text, enforcing the restriction that the start position must be greater than or equal to zero. The end position must be greater than or equal to the start position, and less than or equal to the length of the text component's text. The character positions are indexed starting with zero. The length of the selection is &lt;code&gt;endPosition&lt;/code&gt; - &lt;code&gt;startPosition&lt;/code&gt;, so the character at &lt;code&gt;endPosition&lt;/code&gt; is not selected. If the start and end positions of the selected text are equal, all text is deselected.</source>
          <target state="translated">이 메서드는 선택한 텍스트의 시작 및 끝 위치를 설정하여 시작 위치가 0보다 크거나 같아야한다는 제한을 적용합니다. 끝 위치는 시작 위치보다 크거나 같고 텍스트 구성 요소의 텍스트 길이보다 작거나 같아야합니다. 문자 위치는 0부터 시작하여 인덱싱됩니다. 선택 항목의 길이는 &lt;code&gt;endPosition&lt;/code&gt; - &lt;code&gt;startPosition&lt;/code&gt; 이므로 &lt;code&gt;endPosition&lt;/code&gt; 의 문자 는 선택되지 않습니다. 선택한 텍스트의 시작 위치와 끝 위치가 같으면 모든 텍스트가 선택 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="32c10fb7ce7563daa6931247d9bb3cf3cd6b4534" translate="yes" xml:space="preserve">
          <source>This method sets the state for the supplementary information flags and the minor status in MessageProp.</source>
          <target state="translated">이 메서드는 MessageProp에서 추가 정보 플래그의 상태와 부 상태를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="6b0fedd93ec92670eedd35eddf0ded08a0e1c96c" translate="yes" xml:space="preserve">
          <source>This method sets the state for the supplementary information flags and the minor status in MessageProp. It is not used by the application but by the GSS implementation to return this information to the caller of a per-message context method.</source>
          <target state="translated">이 메서드는 MessageProp에서 추가 정보 플래그의 상태와 부 상태를 설정합니다. 이 정보를 메시지 별 컨텍스트 메서드의 호출자에게 반환하기 위해 응용 프로그램이 아니라 GSS 구현에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f939d41af983a3d786c6747854aed0d5e92d945d" translate="yes" xml:space="preserve">
          <source>This method sets this column's width to &lt;code&gt;width&lt;/code&gt;. If &lt;code&gt;width&lt;/code&gt; exceeds the minimum or maximum width, it is adjusted to the appropriate limiting value.</source>
          <target state="translated">이 메서드는이 열의 너비를 &lt;code&gt;width&lt;/code&gt; 로 설정 합니다. 경우 &lt;code&gt;width&lt;/code&gt; 최소 또는 최대의 폭을 초과 할 경우이를 적절한 한계 값으로 조정된다.</target>
        </trans-unit>
        <trans-unit id="709c2c3d093fae94c2903fbaba8d914b5b9a56a2" translate="yes" xml:space="preserve">
          <source>This method sets this context's &lt;code&gt;connCtls&lt;/code&gt; to be its new connection request controls. This context's context request controls are not affected. After this method has been invoked, any subsequent implicit reconnections will be done using &lt;code&gt;connCtls&lt;/code&gt;. &lt;code&gt;connCtls&lt;/code&gt; are also used as connection request controls for new context instances derived from this context. These connection request controls are not affected by &lt;code&gt;setRequestControls()&lt;/code&gt;.</source>
          <target state="translated">이 메소드는이 컨텍스트의 &lt;code&gt;connCtls&lt;/code&gt; 를 새 연결 요청 제어로 설정합니다. 이 컨텍스트의 컨텍스트 요청 컨트롤은 영향을받지 않습니다. 이 메소드가 호출 된 후, 후속 암시 적 재 연결은 &lt;code&gt;connCtls&lt;/code&gt; 를 사용하여 수행됩니다 . &lt;code&gt;connCtls&lt;/code&gt; 은이 컨텍스트에서 파생 된 새 컨텍스트 인스턴스에 대한 연결 요청 제어로도 사용됩니다. 이러한 연결 요청 제어는 &lt;code&gt;setRequestControls()&lt;/code&gt; 영향을받지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="991827e6e157aaf0766c0469447a64c1694374f1" translate="yes" xml:space="preserve">
          <source>This method should &lt;strong&gt;NOT&lt;/strong&gt; be called by user code.</source>
          <target state="translated">이 방법은해야 &lt;strong&gt;하지&lt;/strong&gt; 사용자 코드에 의해 호출.</target>
        </trans-unit>
        <trans-unit id="56e4a766d1b3a7e2b71b6609112bb89cc26684c2" translate="yes" xml:space="preserve">
          <source>This method should &lt;strong&gt;NOT&lt;/strong&gt; be called by user code. This method is public for this class to properly implement &lt;code&gt;Adjustable&lt;/code&gt; interface.</source>
          <target state="translated">이 방법은해야 &lt;strong&gt;하지&lt;/strong&gt; 사용자 코드에 의해 호출. 이 메서드는이 클래스가 &lt;code&gt;Adjustable&lt;/code&gt; 인터페이스 를 올바르게 구현하기 위해 공개 됩니다.</target>
        </trans-unit>
        <trans-unit id="33f8abd7ca2a8cf27e8acf39bea2933d2b4d6e61" translate="yes" xml:space="preserve">
          <source>This method should be called by TLS server applications before the TLS handshake begins. Also, this &lt;code&gt;SSLEngine&lt;/code&gt; should be configured with parameters that are compatible with the application protocol selected by the callback function. For example, enabling a poor choice of cipher suites could result in no suitable application protocol. See &lt;a href=&quot;sslparameters&quot;&gt;&lt;code&gt;SSLParameters&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 TLS 핸드 셰이크가 시작되기 전에 TLS 서버 응용 프로그램에서 호출해야합니다. 또한이 &lt;code&gt;SSLEngine&lt;/code&gt; 은 콜백 함수에서 선택한 애플리케이션 프로토콜과 호환되는 매개 변수로 구성되어야합니다. 예를 들어 잘못된 암호 제품군을 사용하면 적절한 응용 프로그램 프로토콜이 없을 수 있습니다. &lt;a href=&quot;sslparameters&quot;&gt; &lt;code&gt;SSLParameters&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a4265d627d9f42ec597a2ca189194d5d7bab82e" translate="yes" xml:space="preserve">
          <source>This method should be called by TLS server applications before the TLS handshake begins. Also, this &lt;code&gt;SSLSocket&lt;/code&gt; should be configured with parameters that are compatible with the application protocol selected by the callback function. For example, enabling a poor choice of cipher suites could result in no suitable application protocol. See &lt;a href=&quot;sslparameters&quot;&gt;&lt;code&gt;SSLParameters&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 TLS 핸드 셰이크가 시작되기 전에 TLS 서버 응용 프로그램에서 호출해야합니다. 또한이 &lt;code&gt;SSLSocket&lt;/code&gt; 은 콜백 함수에서 선택한 애플리케이션 프로토콜과 호환되는 매개 변수로 구성되어야합니다. 예를 들어 잘못된 암호 제품군을 사용하면 적절한 응용 프로그램 프로토콜이 없을 수 있습니다. &lt;a href=&quot;sslparameters&quot;&gt; &lt;code&gt;SSLParameters&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5cf5b5df3f5436f31b3c3798c9cc9d254a6cd57" translate="yes" xml:space="preserve">
          <source>This method should be called during construction or initialization of this instance, and before the MBean is registered with the MBeanServer.</source>
          <target state="translated">이 메소드는이 인스턴스의 구성 또는 초기화 중에 그리고 MBean이 MBeanServer에 등록되기 전에 호출되어야합니다.</target>
        </trans-unit>
        <trans-unit id="e8cff1cdbcd466f2e0c426ece2b6428f601790f7" translate="yes" xml:space="preserve">
          <source>This method should be called immediately after the MemoryImageSource is constructed and before an image is created with it to ensure that all ImageConsumers will receive the correct multi-frame data. If an ImageConsumer is added to this ImageProducer before this flag is set then that ImageConsumer will see only a snapshot of the pixel data that was available when it connected.</source>
          <target state="translated">이 메서드는 모든 ImageConsumer가 올바른 다중 프레임 데이터를받을 수 있도록 MemoryImageSource가 생성 된 직후와 이미지가 만들어지기 전에 호출되어야합니다. 이 플래그가 설정되기 전에 ImageConsumer가이 ImageProducer에 추가되면 해당 ImageConsumer는 연결되었을 때 사용 가능한 픽셀 데이터의 스냅 샷 만 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="194129fcff479b3c0b8c6f6d822e67d7e21f713f" translate="yes" xml:space="preserve">
          <source>This method should be called immediately after the MemoryImageSource is constructed and before an image is created with it to ensure that all ImageConsumers will receive the correct pixel delivery hints.</source>
          <target state="translated">이 메서드는 모든 ImageConsumer가 올바른 픽셀 전달 힌트를받을 수 있도록 MemoryImageSource가 생성 된 직후와 이미지가 생성되기 전에 호출되어야합니다.</target>
        </trans-unit>
        <trans-unit id="42cbe72f16d0abd2a5ea5f6597a844658533c152" translate="yes" xml:space="preserve">
          <source>This method should be called when a caller frame is present. If it is called from the bottom most frame on the stack, &lt;code&gt;IllegalCallerException&lt;/code&gt; will be thrown.</source>
          <target state="translated">이 메서드는 호출자 프레임이있을 때 호출되어야합니다. 스택의 맨 아래 프레임에서 호출되면 &lt;code&gt;IllegalCallerException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9572d56dcaaaaccd2ff117f06e1d6fb367780859" translate="yes" xml:space="preserve">
          <source>This method should be implemented consistently with &lt;code&gt;equals(Object)&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;equals(Object)&lt;/code&gt; 일관되게 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="de043d967669e1a3c4643c3c548d37417ec87e27" translate="yes" xml:space="preserve">
          <source>This method should be invoked in tandem with the &lt;a href=&quot;#begin()&quot;&gt;&lt;code&gt;begin&lt;/code&gt;&lt;/a&gt; method, using a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block as shown &lt;a href=&quot;#be&quot;&gt;above&lt;/a&gt;, in order to implement asynchronous closing and interruption for this channel.</source>
          <target state="translated">이 메서드는 이 채널에 대한 비동기 닫기 및 중단을 구현하기 위해 &lt;a href=&quot;#be&quot;&gt;위와&lt;/a&gt; 같이 &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; 블록을 사용하여 &lt;a href=&quot;#begin()&quot;&gt; &lt;code&gt;begin&lt;/code&gt; &lt;/a&gt; 메서드 와 함께 호출되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="1d7b42de8e08b156de7a1945053c2a65fee084be" translate="yes" xml:space="preserve">
          <source>This method should be invoked in tandem with the &lt;a href=&quot;#begin()&quot;&gt;&lt;code&gt;begin&lt;/code&gt;&lt;/a&gt; method, using a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block as shown &lt;a href=&quot;#be&quot;&gt;above&lt;/a&gt;, in order to implement interruption for this selector.</source>
          <target state="translated">이 메소드는 이 선택기에 대한 인터럽트를 구현하기 위해 &lt;a href=&quot;#be&quot;&gt;위와&lt;/a&gt; 같이 &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; 블록을 사용하여 &lt;a href=&quot;#begin()&quot;&gt; &lt;code&gt;begin&lt;/code&gt; &lt;/a&gt; 메소드 와 함께 호출되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="547c45e28b73c96ea0befe374732a383f6c44ba5" translate="yes" xml:space="preserve">
          <source>This method should be invoked in tandem with the &lt;a href=&quot;#end()&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method, using a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block as shown &lt;a href=&quot;#be&quot;&gt;above&lt;/a&gt;, in order to implement interruption for this selector.</source>
          <target state="translated">이 메소드는 이 선택기에 대한 인터럽트를 구현하기 위해 &lt;a href=&quot;#be&quot;&gt;위와&lt;/a&gt; 같이 &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; 블록을 사용하여 &lt;a href=&quot;#end()&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt; 메소드 와 함께 호출되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="72a877625edd556258c2a96b110fda2f4c6ba149" translate="yes" xml:space="preserve">
          <source>This method should be invoked in tandem with the &lt;a href=&quot;#end(boolean)&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method, using a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block as shown &lt;a href=&quot;#be&quot;&gt;above&lt;/a&gt;, in order to implement asynchronous closing and interruption for this channel.</source>
          <target state="translated">이 메서드는 이 채널에 대한 비동기 닫기 및 중단을 구현하기 위해 &lt;a href=&quot;#be&quot;&gt;위와&lt;/a&gt; 같이 &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; 블록을 사용하여 &lt;a href=&quot;#end(boolean)&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt; 메서드 와 함께 호출되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="29f95933a9e570bfb500b6330c648329a4a69d82" translate="yes" xml:space="preserve">
          <source>This method should be invoked in tandem with the &lt;a href=&quot;abstractinterruptiblechannel#begin--&quot;&gt;&lt;code&gt;begin&lt;/code&gt;&lt;/a&gt; method, using a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block as shown &lt;a href=&quot;#be&quot;&gt;above&lt;/a&gt;, in order to implement asynchronous closing and interruption for this channel.</source>
          <target state="translated">이 메소드는 이 채널에 대한 비동기 닫기 및 인터럽트를 구현하기 위해 &lt;a href=&quot;#be&quot;&gt;위에&lt;/a&gt; 표시된 &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; 블록을 사용하여 &lt;a href=&quot;abstractinterruptiblechannel#begin--&quot;&gt; &lt;code&gt;begin&lt;/code&gt; &lt;/a&gt; 메소드 와 함께 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="57bd5eaeb3f6b692eb98dc238b586a5a1f86c7e9" translate="yes" xml:space="preserve">
          <source>This method should be invoked in tandem with the &lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method, using a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block as shown &lt;a href=&quot;#be&quot;&gt;above&lt;/a&gt;, in order to implement asynchronous closing and interruption for this channel.</source>
          <target state="translated">이 메소드는 이 채널에 대한 비동기 닫기 및 인터럽트를 구현하기 위해 &lt;a href=&quot;#be&quot;&gt;위에&lt;/a&gt; 표시된 &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; 블록을 사용하여 &lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt; 메소드 와 함께 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="eae9ee327988c66b884eb64e681ed0fec1f0d6e6" translate="yes" xml:space="preserve">
          <source>This method should be invoked in tandem with the &lt;a href=&quot;abstractselector#begin--&quot;&gt;&lt;code&gt;begin&lt;/code&gt;&lt;/a&gt; method, using a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block as shown &lt;a href=&quot;#be&quot;&gt;above&lt;/a&gt;, in order to implement interruption for this selector.</source>
          <target state="translated">이 선택기의 중단을 구현하려면 &lt;a href=&quot;#be&quot;&gt;위에&lt;/a&gt; 표시된 &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; 블록을 사용하여 &lt;a href=&quot;abstractselector#begin--&quot;&gt; &lt;code&gt;begin&lt;/code&gt; &lt;/a&gt; 메소드 와 함께이 메소드를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9b25d0709861a8dbe12e01ad2ffac5fcd56174e7" translate="yes" xml:space="preserve">
          <source>This method should be invoked in tandem with the &lt;a href=&quot;abstractselector#end--&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method, using a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block as shown &lt;a href=&quot;#be&quot;&gt;above&lt;/a&gt;, in order to implement interruption for this selector.</source>
          <target state="translated">이 선택기의 인터럽트를 구현하려면 &lt;a href=&quot;#be&quot;&gt;위&lt;/a&gt; 의 &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; 블록을 사용하여 &lt;a href=&quot;abstractselector#end--&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt; 메소드 와 함께이 메소드를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4f79ea4505b47cfd8c99b8b4476c5daf765147e5" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses.</source>
          <target state="translated">이 메소드는 서브 클래스로 대체되어야합니다.</target>
        </trans-unit>
        <trans-unit id="136491307ba84a14710e965792f81ec8e9af0b03" translate="yes" xml:space="preserve">
          <source>This method should be overridden when the &lt;a href=&quot;#spliterator()&quot;&gt;&lt;code&gt;spliterator()&lt;/code&gt;&lt;/a&gt; method cannot return a spliterator that is &lt;code&gt;IMMUTABLE&lt;/code&gt;, &lt;code&gt;CONCURRENT&lt;/code&gt;, or &lt;em&gt;late-binding&lt;/em&gt;. (See &lt;a href=&quot;#spliterator()&quot;&gt;&lt;code&gt;spliterator()&lt;/code&gt;&lt;/a&gt; for details.)</source>
          <target state="translated">&lt;a href=&quot;#spliterator()&quot;&gt; &lt;code&gt;spliterator()&lt;/code&gt; &lt;/a&gt; 메서드가 &lt;code&gt;IMMUTABLE&lt;/code&gt; , &lt;code&gt;CONCURRENT&lt;/code&gt; 또는 &lt;em&gt;late-binding 인&lt;/em&gt; 분할자를 반환 할 수없는 경우이 메서드를 재정의해야합니다 . (자세한 내용은 &lt;a href=&quot;#spliterator()&quot;&gt; &lt;code&gt;spliterator()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="29dc02668476fabab14ab7501af66787f6a7ae58" translate="yes" xml:space="preserve">
          <source>This method should be overridden when the &lt;a href=&quot;collection#spliterator--&quot;&gt;&lt;code&gt;spliterator()&lt;/code&gt;&lt;/a&gt; method cannot return a spliterator that is &lt;code&gt;IMMUTABLE&lt;/code&gt;, &lt;code&gt;CONCURRENT&lt;/code&gt;, or &lt;em&gt;late-binding&lt;/em&gt;. (See &lt;a href=&quot;collection#spliterator--&quot;&gt;&lt;code&gt;spliterator()&lt;/code&gt;&lt;/a&gt; for details.)</source>
          <target state="translated">&lt;a href=&quot;collection#spliterator--&quot;&gt; &lt;code&gt;spliterator()&lt;/code&gt; &lt;/a&gt; 메소드가 &lt;code&gt;IMMUTABLE&lt;/code&gt; , &lt;code&gt;CONCURRENT&lt;/code&gt; 또는 &lt;em&gt;late-binding&lt;/em&gt; 스플리터를 리턴 할 수없는 경우이 메소드를 대체해야합니다 . 자세한 내용은 &lt;a href=&quot;collection#spliterator--&quot;&gt; &lt;code&gt;spliterator()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="71d658a46ff3d502e0136280d62ea4fc06d64da9" translate="yes" xml:space="preserve">
          <source>This method should be used instead of the other two overloaded forms when the caller needs to supply request controls for creating the referral context. It might need to do this, for example, when it needs to supply special controls relating to authentication.</source>
          <target state="translated">호출자가 참조 컨텍스트를 작성하기 위해 요청 제어를 제공해야하는 경우 다른 두 개의 오버로드 된 양식 대신이 메소드를 사용해야합니다. 예를 들어 인증과 관련된 특수 제어를 제공해야 할 때이 작업을 수행해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="364633c052adadc10f5a36630e6aad66121df19f" translate="yes" xml:space="preserve">
          <source>This method should be used only when auto-commit has been disabled.</source>
          <target state="translated">이 방법은 자동 커밋이 비활성화 된 경우에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f91fb93252c58cb5da211bd0a403a07da24597db" translate="yes" xml:space="preserve">
          <source>This method should be used only when the given &lt;code&gt;RowSet&lt;/code&gt; object already has a match column that was set with the &lt;code&gt;Joinable&lt;/code&gt; method &lt;code&gt;setMatchColumn&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 지정된 &lt;code&gt;RowSet&lt;/code&gt; 오브젝트에 &lt;code&gt;Joinable&lt;/code&gt; 메소드 &lt;code&gt;setMatchColumn&lt;/code&gt; 으로 설정된 일치 열이 이미있는 경우에만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="846d4d20a94a87d5ab01ccc8bda700cf73b17b94" translate="yes" xml:space="preserve">
          <source>This method should be used when</source>
          <target state="translated">이 방법은 다음과 같은 경우에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a1c1de708d25d105edfb358a9e5e28acc27b3f84" translate="yes" xml:space="preserve">
          <source>This method should be used when &lt;code&gt;Statement.executeLargeBatch&lt;/code&gt; is invoked and the returned update count may exceed &lt;a href=&quot;../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;Statement.executeLargeBatch&lt;/code&gt; 가 호출되고 반환 된 업데이트 수가 &lt;a href=&quot;../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 를&lt;/a&gt; 초과 할 수있을 때 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e88d45f56a87c8c13149324f9e6b03ee6e39df39" translate="yes" xml:space="preserve">
          <source>This method should be used when an SQL structured type has been mapped to a &lt;code&gt;Struct&lt;/code&gt; object in the Java programming language (the standard mapping). The method &lt;code&gt;writeObject&lt;/code&gt; should be used if an SQL structured type has been custom mapped to a class in the Java programming language.</source>
          <target state="translated">이 메소드는 SQL 구조화 유형이 Java 프로그래밍 언어 (표준 매핑) 의 &lt;code&gt;Struct&lt;/code&gt; 객체에 매핑 된 경우에 사용해야합니다 . SQL 구조화 유형이 Java 프로그래밍 언어의 클래스에 사용자 정의 맵핑 된 경우 &lt;code&gt;writeObject&lt;/code&gt; 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="87948de11bee567833e5d5d02627104214413849" translate="yes" xml:space="preserve">
          <source>This method should be used when the given &lt;code&gt;RowSet&lt;/code&gt; object does not already have a match column.</source>
          <target state="translated">이 메서드는 지정된 &lt;code&gt;RowSet&lt;/code&gt; 개체에 일치 열이 아직 없을 때 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e334463f174bace5f154788e12f85c0674c4f5e8" translate="yes" xml:space="preserve">
          <source>This method should be used when the given &lt;code&gt;RowSet&lt;/code&gt; object(s) does not already have a match column.</source>
          <target state="translated">이 메서드는 지정된 &lt;code&gt;RowSet&lt;/code&gt; 개체에 일치 열이 아직 없을 때 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="299665b5a2252dd983997227ca8038fe9e7ec1c3" translate="yes" xml:space="preserve">
          <source>This method should be used when the returned row count may exceed &lt;a href=&quot;../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 반환 된 행 수가 &lt;a href=&quot;../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 를&lt;/a&gt; 초과 할 수있을 때 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4ad7a8ab2bc4395f812d852efd71e8db6a385453" translate="yes" xml:space="preserve">
          <source>This method should be used when the returned row limit may exceed &lt;a href=&quot;../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">반환 된 행 제한이 &lt;a href=&quot;../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 를&lt;/a&gt; 초과 할 수있는 경우이 메서드를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9ea63a8088c03c615850447132ce46d4f425326c" translate="yes" xml:space="preserve">
          <source>This method should be used when the row limit may exceed &lt;a href=&quot;../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 행 제한이 &lt;a href=&quot;../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 를&lt;/a&gt; 초과 할 수있을 때 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="54b8cdb7c02d9a92cb5faa48b3800c4c7566b988" translate="yes" xml:space="preserve">
          <source>This method should be used with extreme caution. Unlike the &lt;a href=&quot;#exit(int)&quot;&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/a&gt; method, this method does not cause shutdown hooks to be started. If the shutdown sequence has already been initiated then this method does not wait for any running shutdown hooks to finish their work.</source>
          <target state="translated">이 방법은 매우주의해서 사용해야합니다. &lt;a href=&quot;#exit(int)&quot;&gt; &lt;code&gt;exit&lt;/code&gt; &lt;/a&gt; 방법 과 달리이 방법은 종료 후크를 시작하지 않습니다. 종료 시퀀스가 ​​이미 시작된 경우이 메서드는 실행중인 종료 후크가 작업을 완료 할 때까지 기다리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="34ab78e281e8fce22d2a69b13041e7e7c4d990cb" translate="yes" xml:space="preserve">
          <source>This method should be used with extreme caution. Unlike the &lt;code&gt;&lt;a href=&quot;runtime#exit-int-&quot;&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method, this method does not cause shutdown hooks to be started and does not run uninvoked finalizers if finalization-on-exit has been enabled. If the shutdown sequence has already been initiated then this method does not wait for any running shutdown hooks or finalizers to finish their work.</source>
          <target state="translated">이 방법은 매우주의해서 사용해야합니다. &lt;code&gt;&lt;a href=&quot;runtime#exit-int-&quot;&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 방법 과 달리이 방법은 종료 후크를 시작하지 않으며 종료시 종료가 활성화 된 경우 호출되지 않은 종료자를 실행하지 않습니다. 종료 시퀀스가 ​​이미 시작된 경우이 방법은 실행중인 종료 후크 또는 종료자가 작업을 완료 할 때까지 기다리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="de93384007f3b88a9d349c1158af5d6dd4fa5f4b" translate="yes" xml:space="preserve">
          <source>This method should not be used to set the widths of columns in the &lt;code&gt;JTable&lt;/code&gt;, use &lt;code&gt;setPreferredWidth&lt;/code&gt; instead.</source>
          <target state="translated">이 방법은 열의 폭을 설정하는 데 사용되어서는 안된다 &lt;code&gt;JTable&lt;/code&gt; 의 사용 &lt;code&gt;setPreferredWidth&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="95771b31b8201a0b375f70a2b02daee5b421b19a" translate="yes" xml:space="preserve">
          <source>This method should not be used to set the widths of columns in the &lt;code&gt;JTable&lt;/code&gt;, use &lt;code&gt;setPreferredWidth&lt;/code&gt; instead. Like a layout manager in the AWT, the &lt;code&gt;JTable&lt;/code&gt; adjusts a column's width automatically whenever the table itself changes size, or a column's preferred width is changed. Setting widths programmatically therefore has no long term effect.</source>
          <target state="translated">이 방법은 열의 폭을 설정하는 데 사용되어서는 안된다 &lt;code&gt;JTable&lt;/code&gt; 의 사용 &lt;code&gt;setPreferredWidth&lt;/code&gt; 대신. AWT의 레이아웃 관리자와 마찬가지로 &lt;code&gt;JTable&lt;/code&gt; 은 테이블 자체의 크기가 변경되거나 열의 기본 너비가 변경 될 때마다 자동으로 열 너비를 조정합니다. 따라서 프로그래밍 방식으로 너비를 설정해도 장기적인 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="7079e3fbbfe7b9e60114d849e0b0a1f8315cef28" translate="yes" xml:space="preserve">
          <source>This method should only be called by a thread that is the owner of this object's monitor. A thread becomes the owner of the object's monitor in one of three ways:</source>
          <target state="translated">이 메소드는이 오브젝트 모니터의 소유자 인 스레드에 의해서만 호출되어야합니다. 스레드는 다음 세 가지 방법 중 하나로 객체 모니터의 소유자가됩니다.</target>
        </trans-unit>
        <trans-unit id="777feaab7923a263f03277b89549cf426a833739" translate="yes" xml:space="preserve">
          <source>This method should only be called by a thread that is the owner of this object's monitor. See the &lt;code&gt;notify&lt;/code&gt; method for a description of the ways in which a thread can become the owner of a monitor.</source>
          <target state="translated">이 메소드는이 오브젝트 모니터의 소유자 인 스레드에 의해서만 호출되어야합니다. 스레드가 모니터의 소유자가 될 수있는 방법에 대한 설명은 &lt;code&gt;notify&lt;/code&gt; 메소드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="38f2e942b4ebe0d6ea2b944e78999aa4a5ab8085" translate="yes" xml:space="preserve">
          <source>This method should only be called by the ChildLocator, it is simply a convenient place to hold the cached location.</source>
          <target state="translated">이 메서드는 ChildLocator에 의해서만 호출되어야하며 캐시 된 위치를 유지하기에 편리한 장소입니다.</target>
        </trans-unit>
        <trans-unit id="dd0da8ef1149610edaaec69e689e2ca993719641" translate="yes" xml:space="preserve">
          <source>This method should only be invoked within the context of initializing a persistence delegate or setting up an encoder to read from a resource bundle.</source>
          <target state="translated">이 메소드는 지속성 위임을 초기화하거나 자원 번들에서 읽도록 인코더를 설정하는 컨텍스트 내에서만 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="238ce84423ce68f3a96955f6c483908adb7bd7e6" translate="yes" xml:space="preserve">
          <source>This method should only be invoked within the context of initializing a persistence delegate.</source>
          <target state="translated">이 메소드는 지속성 위임 초기화 컨텍스트 내에서만 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="a624efc8f4d2c5edfb72442e015395381971f6ef" translate="yes" xml:space="preserve">
          <source>This method should only be used internally by &lt;code&gt;GridBagLayout&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;GridBagLayout&lt;/code&gt; 내부적으로 만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a94701194d4ff679fc3998753d4c85b7af22db19" translate="yes" xml:space="preserve">
          <source>This method should return an array containing the sub-elements for the receiving menu element.</source>
          <target state="translated">이 메서드는 수신 메뉴 요소에 대한 하위 요소를 포함하는 배열을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="fb38edfc69cea3b209d6635a16c298a103f35a33" translate="yes" xml:space="preserve">
          <source>This method should return the &lt;code&gt;java.awt.Component&lt;/code&gt; used to paint the receiving element.</source>
          <target state="translated">이 메소드는 수신 요소를 그리는 데 사용되는 &lt;code&gt;java.awt.Component&lt;/code&gt; 를 리턴해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7d7030cbfe33fd07759bd734fa5c7e03fecb368f" translate="yes" xml:space="preserve">
          <source>This method should return the &lt;code&gt;java.awt.Component&lt;/code&gt; used to paint the receiving element. The returned component will be used to convert events and detect if an event is inside a &lt;code&gt;MenuElement&lt;/code&gt;'s component.</source>
          <target state="translated">이 메소드는 수신 요소를 그리는 데 사용되는 &lt;code&gt;java.awt.Component&lt;/code&gt; 를 리턴해야합니다 . 반환 된 구성 요소는 이벤트를 변환하고 이벤트가 &lt;code&gt;MenuElement&lt;/code&gt; 의 구성 요소 내부에 있는지 감지하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="c6e4a3271851f824aca525eaccdfacd36f1033f2" translate="yes" xml:space="preserve">
          <source>This method should return true if further updates are needed or false if the required information has been acquired. The image which was being tracked is passed in using the img argument. Various constants are combined to form the infoflags argument which indicates what information about the image is now available. The interpretation of the x, y, width, and height arguments depends on the contents of the infoflags argument.</source>
          <target state="translated">이 메서드는 추가 업데이트가 필요한 경우 true를 반환하고 필요한 정보를 획득 한 경우 false를 반환해야합니다. 추적중인 이미지는 img 인수를 사용하여 전달됩니다. 다양한 상수가 결합되어 현재 사용 가능한 이미지 정보를 나타내는 infoflags 인수를 형성합니다. x, y, 너비 및 높이 인수의 해석은 infoflags 인수의 내용에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="21727f69cb6fe50504193f04e82441734a9ba243" translate="yes" xml:space="preserve">
          <source>This method signals that the drop is completed and if it was successful or not.</source>
          <target state="translated">이 방법은 드롭이 완료되었음을 알리고 성공 여부를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="b69fca938335e6bfaa790629777f9b2eb52dbfd1" translate="yes" xml:space="preserve">
          <source>This method signals the end of the dragging session.</source>
          <target state="translated">이 메서드는 드래그 세션의 끝을 알립니다.</target>
        </trans-unit>
        <trans-unit id="058426e8ca94d5fe6d860bf667b6912a5342cc98" translate="yes" xml:space="preserve">
          <source>This method signals the end of the dragging session. Any state maintained by the DesktopManager can be removed here. Normally &lt;b&gt;f&lt;/b&gt; will be a JInternalFrame.</source>
          <target state="translated">이 메서드는 드래그 세션의 끝을 알립니다. DesktopManager에 의해 유지되는 모든 상태는 여기에서 제거 할 수 있습니다. 일반적으로 &lt;b&gt;f&lt;/b&gt; 는 JInternalFrame입니다.</target>
        </trans-unit>
        <trans-unit id="f6bdc0414acb8da6ff5691925f86aaddfc95a4c2" translate="yes" xml:space="preserve">
          <source>This method signals the end of the resize session.</source>
          <target state="translated">이 메서드는 크기 조정 세션의 끝을 알립니다.</target>
        </trans-unit>
        <trans-unit id="132458e632d045b4dd6bbd3066cabd45634563a4" translate="yes" xml:space="preserve">
          <source>This method signals the end of the resize session. Any state maintained by the DesktopManager can be removed here. Normally &lt;b&gt;f&lt;/b&gt; will be a JInternalFrame.</source>
          <target state="translated">이 메서드는 크기 조정 세션의 끝을 알립니다. DesktopManager에 의해 유지되는 모든 상태는 여기에서 제거 할 수 있습니다. 일반적으로 &lt;b&gt;f&lt;/b&gt; 는 JInternalFrame입니다.</target>
        </trans-unit>
        <trans-unit id="c4b807876fe6997c88b6b5ad84a05abb4afe4cb8" translate="yes" xml:space="preserve">
          <source>This method simply calls &lt;code&gt;available&lt;/code&gt; of the current underlying input stream and returns the result.</source>
          <target state="translated">이 메소드는 단순히 현재 기본 입력 스트림의 &lt;code&gt;available&lt;/code&gt; 을 호출 하고 결과를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="b5dee1c64dcb117f68fed752a842221d52473559" translate="yes" xml:space="preserve">
          <source>This method simply calls &lt;code&gt;get((Object[]) key)&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 단순히 &lt;code&gt;get((Object[]) key)&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="8e8e8c8f040b562297c09db4df4590a4dcf57a91" translate="yes" xml:space="preserve">
          <source>This method simply calls &lt;code&gt;put((CompositeData) value)&lt;/code&gt; and therefore ignores its &lt;var&gt;key&lt;/var&gt; parameter which can be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 단순히 &lt;code&gt;put((CompositeData) value)&lt;/code&gt; 호출 하므로 &lt;code&gt;null&lt;/code&gt; 이 될 수있는 &lt;var&gt;key&lt;/var&gt; 매개 변수를 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="c6e8a1d0ec1e1a366794c4c1949a880fb97db20a" translate="yes" xml:space="preserve">
          <source>This method simply calls &lt;code&gt;remove((Object[]) key)&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 단순히 &lt;code&gt;remove((Object[]) key)&lt;/code&gt; 를 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="039b7f2f5a27932c69d6eaaf9cce1509ca80d5db" translate="yes" xml:space="preserve">
          <source>This method simply delegates to the &lt;code&gt;model&lt;/code&gt;. It is equivalent to:</source>
          <target state="translated">이 메서드는 단순히 &lt;code&gt;model&lt;/code&gt; 위임합니다 . 다음과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="de78e9b148111c839b1ba57bd4c16497e848095b" translate="yes" xml:space="preserve">
          <source>This method simply delegates to the default implementation in &lt;code&gt;Object&lt;/code&gt; which is identical to an &lt;code&gt;==&lt;/code&gt; test since this class cannot enforce the issues of a proper equality test among multiple independent subclass branches.</source>
          <target state="translated">이 메서드 는 &lt;code&gt;==&lt;/code&gt; 테스트와 동일한 &lt;code&gt;Object&lt;/code&gt; 의 기본 구현에 위임 할뿐입니다. 이 클래스는 여러 독립 하위 클래스 분기간에 적절한 동등성 테스트 문제를 적용 할 수 없기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="f7021d9e6e583d7601ec5bdd2842d5cca28fb06f" translate="yes" xml:space="preserve">
          <source>This method simply delegates to the default implementation in &lt;code&gt;Object&lt;/code&gt; which is identical to an &lt;code&gt;==&lt;/code&gt; test since this class cannot enforce the issues of a proper equality test among multiple independent subclass branches. Subclasses are encouraged to override this method and provide equality testing for their own properties in addition to equality tests for the following common base properties of &lt;code&gt;ColorModel&lt;/code&gt;:</source>
          <target state="translated">이 메서드 는 &lt;code&gt;==&lt;/code&gt; 테스트와 동일한 &lt;code&gt;Object&lt;/code&gt; 의 기본 구현에 위임 할뿐입니다. 이 클래스는 여러 독립 하위 클래스 분기간에 적절한 동등성 테스트 문제를 적용 할 수 없기 때문입니다. 하위 클래스는이 메서드를 재정의하고 &lt;code&gt;ColorModel&lt;/code&gt; 의 다음과 같은 공통 기본 속성에 대한 동등성 테스트 외에도 자체 속성에 대한 동등성 테스트를 제공하도록 권장됩니다 .</target>
        </trans-unit>
        <trans-unit id="0b876aaa816b7d9679bd227b794e5eafaa432d7f" translate="yes" xml:space="preserve">
          <source>This method simply delegates to the default implementation in &lt;code&gt;Object&lt;/code&gt; which returns the system ID for the class.</source>
          <target state="translated">이 메서드는 단순히 클래스의 시스템 ID를 반환하는 &lt;code&gt;Object&lt;/code&gt; 의 기본 구현에 위임합니다 .</target>
        </trans-unit>
        <trans-unit id="824eabe1e2264eed130d8da2f785f137cbfc2a7e" translate="yes" xml:space="preserve">
          <source>This method simply delegates to the default implementation in &lt;code&gt;Object&lt;/code&gt; which returns the system ID for the class. Subclasses are encouraged to override this method and provide a hash for their own properties in addition to hashing the values of the following common base properties of &lt;code&gt;ColorModel&lt;/code&gt;:</source>
          <target state="translated">이 메서드는 단순히 클래스의 시스템 ID를 반환하는 &lt;code&gt;Object&lt;/code&gt; 의 기본 구현에 위임합니다 . 하위 클래스는이 메서드를 재정의하고 &lt;code&gt;ColorModel&lt;/code&gt; 의 다음 공통 기본 속성 값을 해싱하는 것 외에도 자체 속성에 대한 해시를 제공하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="2a2aee380eb8088ebffce101747e3bc76dce13e5" translate="yes" xml:space="preserve">
          <source>This method simply delegates to the same method on the base image and it is equivalent to: &lt;code&gt;getBaseImage().getHeight(observer)&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 단순히 기본 이미지의 동일한 메서드에 위임하며 &lt;code&gt;getBaseImage().getHeight(observer)&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="b02ae84eaf5f3cbfd3a9a2976e1b89883b72921a" translate="yes" xml:space="preserve">
          <source>This method simply delegates to the same method on the base image and it is equivalent to: &lt;code&gt;getBaseImage().getProperty(name, observer)&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 단순히 기본 이미지의 동일한 메서드에 위임하며 &lt;code&gt;getBaseImage().getProperty(name, observer)&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="b44f0c9494056d10352c698001a4bf6a443fe551" translate="yes" xml:space="preserve">
          <source>This method simply delegates to the same method on the base image and it is equivalent to: &lt;code&gt;getBaseImage().getSource()&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 단순히 기본 이미지의 동일한 메서드에 위임하며 &lt;code&gt;getBaseImage().getSource()&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="d42ea683216b7c0ed77faf7ea8a079e3c99f3dee" translate="yes" xml:space="preserve">
          <source>This method simply delegates to the same method on the base image and it is equivalent to: &lt;code&gt;getBaseImage().getWidth(observer)&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 단순히 기본 이미지의 동일한 메서드에 위임하며 &lt;code&gt;getBaseImage().getWidth(observer)&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="9f81f5060307482db61cd92c3ef2070d9ec904ab" translate="yes" xml:space="preserve">
          <source>This method simply informs the group's monitor that the object is inactive. It is up to the concrete subclass of ActivationGroup to fulfill the additional requirement of unexporting the object.</source>
          <target state="translated">이 방법은 단순히 개체가 비활성 상태임을 그룹의 모니터에 알립니다. 개체 내보내기를 취소하는 추가 요구 사항을 충족하는 것은 ActivationGroup의 구체적인 하위 클래스에 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="c527e77df9d48c76055856c5f8480f73ed209594" translate="yes" xml:space="preserve">
          <source>This method simply invokes &lt;a href=&quot;path#of(java.lang.String,java.lang.String...)&quot;&gt;&lt;code&gt;Path.of(String, String...)&lt;/code&gt;&lt;/a&gt; with the given parameters.</source>
          <target state="translated">이 메소드는 단순히 주어진 매개 변수로 &lt;a href=&quot;path#of(java.lang.String,java.lang.String...)&quot;&gt; &lt;code&gt;Path.of(String, String...)&lt;/code&gt; &lt;/a&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="c423706d44a27cb9dabe85c5f774496711ca6075" translate="yes" xml:space="preserve">
          <source>This method simply invokes &lt;a href=&quot;path#of(java.net.URI)&quot;&gt;&lt;code&gt;* Path.of(URI)&lt;/code&gt;&lt;/a&gt; with the given parameter.</source>
          <target state="translated">이 메소드는 단순히 주어진 매개 변수로 &lt;a href=&quot;path#of(java.net.URI)&quot;&gt; &lt;code&gt;* Path.of(URI)&lt;/code&gt; &lt;/a&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="bc6bc0fc425ab494d2ecac76297d1e62f6fb1eb3" translate="yes" xml:space="preserve">
          <source>This method simply performs &lt;code&gt;in.mark(readlimit)&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 단순히 &lt;code&gt;in.mark(readlimit)&lt;/code&gt; 를 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="f46e89ba359a12a65dcf2acfbb614e6e1a9ffc1c" translate="yes" xml:space="preserve">
          <source>This method simply performs &lt;code&gt;in.read()&lt;/code&gt; and returns the result.</source>
          <target state="translated">이 메소드는 단순히 &lt;code&gt;in.read()&lt;/code&gt; 를 수행 하고 결과를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="7bee99ea682b5ebdba1502480d4d3571110116cc" translate="yes" xml:space="preserve">
          <source>This method simply performs &lt;code&gt;in.read(b, off, len)&lt;/code&gt; and returns the result.</source>
          <target state="translated">이 메소드는 단순히 &lt;code&gt;in.read(b, off, len)&lt;/code&gt; 를 수행 하고 결과를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8edf0a88f05440a5392c7d0c3e3f37a8797689df" translate="yes" xml:space="preserve">
          <source>This method simply performs &lt;code&gt;in.reset()&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 단순히 &lt;code&gt;in.reset()&lt;/code&gt; 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="17f994e59a98ce2feb35ffc74454bfbbc2a97137" translate="yes" xml:space="preserve">
          <source>This method simply performs &lt;code&gt;in.skip(n)&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 단순히 &lt;code&gt;in.skip(n)&lt;/code&gt; 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="1edc42660d60900aa92eba9fe33b01f48322fd87" translate="yes" xml:space="preserve">
          <source>This method simply performs the call &lt;code&gt;read(b, 0, b.length)&lt;/code&gt; and returns the result. It is important that it does</source>
          <target state="translated">이 메소드는 단순히 &lt;code&gt;read(b, 0, b.length)&lt;/code&gt; 호출을 수행 하고 결과를 리턴합니다. 그것이 중요하다</target>
        </trans-unit>
        <trans-unit id="3c02b16c2505be9cfd131d43db15885d9232e0f1" translate="yes" xml:space="preserve">
          <source>This method simply returns the value from &lt;code&gt;getPreferredSize&lt;/code&gt;. The list's &lt;code&gt;ListUI&lt;/code&gt; is expected to override &lt;code&gt;getPreferredSize&lt;/code&gt; to return an appropriate value.</source>
          <target state="translated">이 메서드는 단순히 &lt;code&gt;getPreferredSize&lt;/code&gt; 의 값을 반환합니다 . 목록의 &lt;code&gt;ListUI&lt;/code&gt; 는 &lt;code&gt;getPreferredSize&lt;/code&gt; 를 재정 의하여 적절한 값을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="92cec712c3370b7e8814dbbc2072a37b1b3a045d" translate="yes" xml:space="preserve">
          <source>This method simultaneously and synchronously sets the values of four scroll bar properties, assuring that the values of these properties are mutually consistent. It enforces the following constraints: &lt;code&gt;maximum&lt;/code&gt; must be greater than &lt;code&gt;minimum&lt;/code&gt;, &lt;code&gt;maximum - minimum&lt;/code&gt; must not be greater than &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;, &lt;code&gt;visibleAmount&lt;/code&gt; must be greater than zero. &lt;code&gt;visibleAmount&lt;/code&gt; must not be greater than &lt;code&gt;maximum - minimum&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt; must not be less than &lt;code&gt;minimum&lt;/code&gt;, and &lt;code&gt;value&lt;/code&gt; must not be greater than &lt;code&gt;maximum - visibleAmount&lt;/code&gt;</source>
          <target state="translated">이 메서드는 4 개의 스크롤 막대 속성 값을 동시에 동 기적으로 설정하여 이러한 속성 값이 서로 일관되도록합니다. 그것은 다음과 같은 제약 조건을 적용 : &lt;code&gt;maximum&lt;/code&gt; 보다 커야합니다 &lt;code&gt;minimum&lt;/code&gt; , &lt;code&gt;maximum - minimum&lt;/code&gt; 보다 크지 않아야합니다 &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 로 , &lt;code&gt;visibleAmount&lt;/code&gt; 0보다 커야합니다. &lt;code&gt;visibleAmount&lt;/code&gt; 초과 할 수 없습니다 있어야 &lt;code&gt;maximum - minimum&lt;/code&gt; , &lt;code&gt;value&lt;/code&gt; 미만이 아니어야 &lt;code&gt;minimum&lt;/code&gt; 및 &lt;code&gt;value&lt;/code&gt; 보다 크지 않아야합니다 &lt;code&gt;maximum - visibleAmount&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b4556d9ecf323d07c8124b74db08512b40320a22" translate="yes" xml:space="preserve">
          <source>This method starts at the beginning of this matcher's region, or, if a previous invocation of the method was successful and the matcher has not since been reset, at the first character not matched by the previous match.</source>
          <target state="translated">이 메소드는이 매처 영역의 시작 부분에서 시작하거나, 메소드의 이전 호출이 완료되고 이후에 일치 프로그램이 재설정되지 않은 경우, 이전 문자와 일치하지 않는 첫 번째 문자에서 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="17094ba13ee4a3a748a03c765e3399bae3e18ac5" translate="yes" xml:space="preserve">
          <source>This method subtracts the specified amount from the days field decrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded.</source>
          <target state="translated">이 방법은 결과를 유효하게 유지하기 위해 필요에 따라 월 및 연도 필드를 감소시키는 일 필드에서 지정된 양을 뺍니다. 최대 / 최소 연도를 초과 한 경우에만 결과가 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="794983e28b53204c2dfb6c7bc67152872b7333dd" translate="yes" xml:space="preserve">
          <source>This method subtracts the specified amount from the months field in three steps:</source>
          <target state="translated">이 방법은 개월 필드에서 지정된 양을 세 단계로 뺍니다.</target>
        </trans-unit>
        <trans-unit id="01ab275252deaae430470917667d8e1be68a9d79" translate="yes" xml:space="preserve">
          <source>This method subtracts the specified amount from the years field in three steps:</source>
          <target state="translated">이 방법은 세 단계에서 연도 필드에서 지정된 양을 뺍니다.</target>
        </trans-unit>
        <trans-unit id="22318c29d0133d2101a84aaa0d0f6a6b1ec2afcf" translate="yes" xml:space="preserve">
          <source>This method subtracts the specified amount in weeks from the days field decrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded.</source>
          <target state="translated">이 방법은 결과를 유효하게 유지하기 위해 필요에 따라 월 및 연도 필드를 감소시키는 일 필드에서 지정된 주 단위의 양을 뺍니다. 최대 / 최소 연도를 초과 한 경우에만 결과가 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dfd44cbba3ac7f729ff2df76b583aea70712cc43" translate="yes" xml:space="preserve">
          <source>This method supports a special technique of parsing known as 'adjacent value parsing'. This technique solves the problem where a value, variable or fixed width, is followed by one or more fixed length values. The standard parser is greedy, and thus it would normally steal the digits that are needed by the fixed width value parsers that follow the variable width one.</source>
          <target state="translated">이 방법은 '인접 값 구문 분석'이라는 특수한 구문 분석 기술을 지원합니다. 이 기술은 변수 또는 고정 너비 값 뒤에 하나 이상의 고정 길이 값이 따르는 문제를 해결합니다. 표준 파서는 욕심이 많으므로 일반적으로 가변 너비 1을 따르는 고정 너비 값 파서에 필요한 숫자를 훔칩니다.</target>
        </trans-unit>
        <trans-unit id="522db7cf48f98de5ee6c5218b921c168dd9b914a" translate="yes" xml:space="preserve">
          <source>This method supports chaining of either Renderable or RenderedImage operations. If sources in the ParameterBlock used to construct the RenderableImageOp are RenderableImages, then a three step process is followed:</source>
          <target state="translated">이 메서드는 Renderable 또는 RenderedImage 작업의 연결을 지원합니다. RenderableImageOp를 생성하는 데 사용 된 ParameterBlock의 소스가 RenderableImages이면 3 단계 프로세스가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="97091fce217c38562f37cf66f3c9c30a14ae1466" translate="yes" xml:space="preserve">
          <source>This method supports post-processing on &lt;code&gt;Optional&lt;/code&gt; values, without the need to explicitly check for a return status. For example, the following code traverses a stream of URIs, selects one that has not yet been processed, and creates a path from that URI, returning an &lt;code&gt;Optional&amp;lt;Path&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">이 메서드는 반환 상태를 명시 적으로 확인할 필요없이 &lt;code&gt;Optional&lt;/code&gt; 값 에 대한 사후 처리를 지원 합니다. 예를 들어 다음 코드는 URI 스트림을 탐색하고 아직 처리되지 않은 URI를 선택한 다음 해당 URI에서 경로를 생성하여 &lt;code&gt;Optional&amp;lt;Path&amp;gt;&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c150abc03144234b22efe8cbbae37477c8cfbbcf" translate="yes" xml:space="preserve">
          <source>This method supports post-processing on optional values, without the need to explicitly check for a return status. For example, the following code traverses a stream of file names, selects one that has not yet been processed, and then opens that file, returning an &lt;code&gt;Optional&amp;lt;FileInputStream&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">이 메소드는 명시 적으로 리턴 상태를 확인할 필요없이 선택적 값에 대한 사후 처리를 지원합니다. 예를 들어 다음 코드는 파일 이름 스트림을 통과하고 아직 처리되지 않은 파일 이름을 선택한 다음 해당 파일을 열어 &lt;code&gt;Optional&amp;lt;FileInputStream&amp;gt;&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f74504c00f8a1676aab5ce7b90c92c2414f54075" translate="yes" xml:space="preserve">
          <source>This method supports three Type/format combinations:</source>
          <target state="translated">이 방법은 세 가지 유형 / 형식 조합을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ad744206021f227827ab73bf72c46e244315e010" translate="yes" xml:space="preserve">
          <source>This method swaps the sign of the total length of this duration. For example, &lt;code&gt;PT1.3S&lt;/code&gt; will be returned as &lt;code&gt;PT-1.3S&lt;/code&gt;.</source>
          <target state="translated">이 방법은이 기간의 총 길이 부호를 바꿉니다. 예를 들어 &lt;code&gt;PT1.3S&lt;/code&gt; 는 &lt;code&gt;PT-1.3S&lt;/code&gt; 로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="96778fbab3be5150b1222269d755e52b082f3131" translate="yes" xml:space="preserve">
          <source>This method synchronizes on &lt;code&gt;this&lt;/code&gt;, the current object, but not &lt;code&gt;StringBuffer another&lt;/code&gt; with which &lt;code&gt;this StringBuffer&lt;/code&gt; is compared.</source>
          <target state="translated">이 메서드 는 현재 객체 인 &lt;code&gt;this&lt;/code&gt; 에서 동기화 하지만 &lt;code&gt;this StringBuffer&lt;/code&gt; 가 비교 되는 &lt;code&gt;StringBuffer another&lt;/code&gt; 에서는 동기화 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b826eca69467428f720b33ccfa8e6a22178be3fd" translate="yes" xml:space="preserve">
          <source>This method synchronizes on &lt;code&gt;this&lt;/code&gt;, the destination object, but does not synchronize on the source (&lt;code&gt;s&lt;/code&gt;).</source>
          <target state="translated">에이 메소드를 동기화 &lt;code&gt;this&lt;/code&gt; 대상 객체 있지만, 소스 (에 동기화되지 않습니다 &lt;code&gt;s&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="781a90ba86b28c4eca13fb9ec17885d2aef64f54" translate="yes" xml:space="preserve">
          <source>This method synchronizes on &lt;code&gt;this&lt;/code&gt;, the destination object, but does not synchronize on the source (&lt;code&gt;sb&lt;/code&gt;).</source>
          <target state="translated">에이 메소드를 동기화 &lt;code&gt;this&lt;/code&gt; 대상 객체는하지만, 소스 (에 동기화되지 않습니다 &lt;code&gt;sb&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b63f5c1cbd7a929335336f0736605020ae1f73bc" translate="yes" xml:space="preserve">
          <source>This method takes a &quot;snapshot&quot; of the current calling context, which includes the current Thread's inherited AccessControlContext and any limited privilege scope, and places it in an AccessControlContext object.</source>
          <target state="translated">이 메서드는 현재 스레드의 상속 된 AccessControlContext 및 제한된 권한 범위를 포함하는 현재 호출 컨텍스트의 &quot;스냅 샷&quot;을 가져와 AccessControlContext 개체에 배치합니다.</target>
        </trans-unit>
        <trans-unit id="bacc286ded4e8325bb4d5d723224404336be0ccd" translate="yes" xml:space="preserve">
          <source>This method takes a &quot;snapshot&quot; of the current calling context, which includes the current Thread's inherited AccessControlContext and any limited privilege scope, and places it in an AccessControlContext object. This context may then be checked at a later point, possibly in another thread.</source>
          <target state="translated">이 메소드는 현재 스레드의 상속 된 AccessControlContext 및 제한된 권한 범위를 포함하는 현재 호출 컨텍스트의 &quot;스냅 샷&quot;을 가져 와서 AccessControlContext 오브젝트에 배치합니다. 이 컨텍스트는 나중에 다른 스레드에서 나중에 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0117a5b0bec31d7208efeea664dd55a2de33be2f" translate="yes" xml:space="preserve">
          <source>This method takes a &lt;code&gt;Function&lt;/code&gt; accepting a &lt;code&gt;Stream&amp;lt;StackFrame&amp;gt;&lt;/code&gt;, rather than returning a &lt;code&gt;Stream&amp;lt;StackFrame&amp;gt;&lt;/code&gt; and allowing the caller to directly manipulate the stream. The Java virtual machine is free to reorganize a thread's control stack, for example, via deoptimization. By taking a &lt;code&gt;Function&lt;/code&gt; parameter, this method allows access to stack frames through a stable view of a thread's control stack.</source>
          <target state="translated">이 방법은 필요 &lt;code&gt;Function&lt;/code&gt; 수용성 &lt;code&gt;Stream&amp;lt;StackFrame&amp;gt;&lt;/code&gt; 대신 복귀보다 &lt;code&gt;Stream&amp;lt;StackFrame&amp;gt;&lt;/code&gt; 직접 스트림을 조작 할 수 있도록 발신자. 자바 가상 머신은 최적화 해제를 통해 스레드의 제어 스택을 자유롭게 재구성 할 수 있습니다. &lt;code&gt;Function&lt;/code&gt; 매개 변수 를 취함으로써이 메소드는 스레드의 제어 스택에 대한 안정적인보기를 통해 스택 프레임에 액세스 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="8c1c5c7f2994ba1aabd02e00ce9cb2646858a8b8" translate="yes" xml:space="preserve">
          <source>This method takes no arguments, and opens the line with the current settings. For &lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt; objects, this means that the line is opened with default settings. For a &lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;, however, the buffer size is determined when data is loaded. Since this method does not allow the application to specify any data to load, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. Therefore, you should instead use one of the &lt;code&gt;open&lt;/code&gt; methods provided in the &lt;code&gt;Clip&lt;/code&gt; interface to load data into the &lt;code&gt;Clip&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 인수를 취하지 않으며 현재 설정으로 행을 엽니 다. 대한 &lt;a href=&quot;sourcedataline&quot;&gt; &lt;code&gt;SourceDataLine&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;targetdataline&quot;&gt; &lt;code&gt;TargetDataLine&lt;/code&gt; 의&lt;/a&gt; 객체, 라인이 기본 설정으로 열 것을이 의미합니다. A에 대한 &lt;a href=&quot;clip&quot;&gt; &lt;code&gt;Clip&lt;/code&gt; &lt;/a&gt; 데이터가로드되는 경우, 그러나, 상기 버퍼의 크기가 결정된다. 이 메소드는 애플리케이션이로드 할 데이터를 지정하는 것을 허용하지 않으므로 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생합니다. 따라서 대신 &lt;code&gt;Clip&lt;/code&gt; 인터페이스 에서 제공되는 &lt;code&gt;open&lt;/code&gt; 메서드 중 하나를 사용 하여 데이터를 &lt;code&gt;Clip&lt;/code&gt; 에로드해야합니다 .</target>
        </trans-unit>
        <trans-unit id="03e9702b57e95947764ed431bf7ffa0b25100c5e" translate="yes" xml:space="preserve">
          <source>This method takes no arguments, and opens the line with the current settings. For &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; objects, this means that the line is opened with default settings. For a &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, however, the buffer size is determined when data is loaded. Since this method does not allow the application to specify any data to load, an IllegalArgumentException is thrown. Therefore, you should instead use one of the &lt;code&gt;open&lt;/code&gt; methods provided in the &lt;code&gt;Clip&lt;/code&gt; interface to load data into the &lt;code&gt;Clip&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 인수를 사용하지 않고 현재 설정으로 행을 엽니 다. 대한 &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 의 객체, 라인이 기본 설정으로 열 것을이 의미합니다. A에 대한 &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 데이터가로드되는 경우, 그러나, 상기 버퍼의 크기가 결정된다. 이 메소드는 애플리케이션이로드 할 데이터를 지정할 수 없으므로 IllegalArgumentException이 발생합니다. 따라서, 대신 중 하나를 사용한다 &lt;code&gt;open&lt;/code&gt; 에서 제공 방법 &lt;code&gt;Clip&lt;/code&gt; 로 데이터를로드하는 인터페이스를 &lt;code&gt;Clip&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="999bd8f01ff8246b79b395bd09c3396c4dbfaeb9" translate="yes" xml:space="preserve">
          <source>This method tests for equality of nodes, not sameness (i.e., whether the two nodes are references to the same object) which can be tested with &lt;code&gt;Node.isSameNode()&lt;/code&gt;. All nodes that are the same will also be equal, though the reverse may not be true.</source>
          <target state="translated">이 메소드는 &lt;code&gt;Node.isSameNode()&lt;/code&gt; 로 테스트 할 수있는 동일성 (즉, 두 노드가 동일한 객체에 대한 참조인지 여부)이 아닌 노드의 동일성을 테스트 합니다. 동일한 모든 노드도 동일하지만 그 반대는 사실이 아닐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="749999b26511eb37fdf759572bbebb73b6f7719a" translate="yes" xml:space="preserve">
          <source>This method then calls the &lt;code&gt;interrupt&lt;/code&gt; method on all the threads in this thread group and in all of its subgroups.</source>
          <target state="translated">그런 다음이 메소드 는이 스레드 그룹과 모든 하위 그룹의 모든 스레드에서 &lt;code&gt;interrupt&lt;/code&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="c6078753d6cb08e2fd72e832d8ed0a44dfeda009" translate="yes" xml:space="preserve">
          <source>This method then calls the &lt;code&gt;resume&lt;/code&gt; method on all the threads in this thread group and in all of its sub groups.</source>
          <target state="translated">그런 다음이 메소드 는이 스레드 그룹과 모든 하위 그룹의 모든 스레드에서 &lt;code&gt;resume&lt;/code&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="9ac488b98809ce75c359b89f89dafde31807a97a" translate="yes" xml:space="preserve">
          <source>This method then calls the &lt;code&gt;stop&lt;/code&gt; method on all the threads in this thread group and in all of its subgroups.</source>
          <target state="translated">그런 다음이 메소드 는이 스레드 그룹과 모든 하위 그룹의 모든 스레드에서 &lt;code&gt;stop&lt;/code&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="fbcee260a54e7063d2c3bb8e2ee245593a9d6c0c" translate="yes" xml:space="preserve">
          <source>This method then calls the &lt;code&gt;suspend&lt;/code&gt; method on all the threads in this thread group and in all of its subgroups.</source>
          <target state="translated">그런 다음이 메소드 는이 스레드 그룹과 모든 하위 그룹의 모든 스레드에서 &lt;code&gt;suspend&lt;/code&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="a762e7926d34a0cd14d92a84f01e6cf632f244f8" translate="yes" xml:space="preserve">
          <source>This method throws &lt;a href=&quot;../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">이 메서드는 기본적으로 &lt;a href=&quot;../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt; 을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="cf95a285ec4bc60f3c2e98b48f9652d1789dbfb0" translate="yes" xml:space="preserve">
          <source>This method throws &lt;a href=&quot;../filesystemalreadyexistsexception&quot;&gt;&lt;code&gt;FileSystemAlreadyExistsException&lt;/code&gt;&lt;/a&gt; if the file system already exists because it was previously created by an invocation of this method. Once a file system is &lt;a href=&quot;../filesystem#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; it is provider-dependent if the provider allows a new file system to be created with the same URI as a file system it previously created.</source>
          <target state="translated">이 메서드 의 호출에 의해 이전에 생성 되었기 때문에 파일 시스템이 이미 존재하는 경우이 메서드는 &lt;a href=&quot;../filesystemalreadyexistsexception&quot;&gt; &lt;code&gt;FileSystemAlreadyExistsException&lt;/code&gt; 을&lt;/a&gt; throw 합니다. 파일 시스템이 &lt;a href=&quot;../filesystem#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt; 공급자가 이전에 만든 파일 시스템과 동일한 URI를 사용하여 새 파일 시스템을 만들 수 있는지 여부는 공급자에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="e350f9ae8035727aaa40eabef55881cb72192e3b" translate="yes" xml:space="preserve">
          <source>This method throws &lt;a href=&quot;../filesystemalreadyexistsexception&quot;&gt;&lt;code&gt;FileSystemAlreadyExistsException&lt;/code&gt;&lt;/a&gt; if the file system already exists because it was previously created by an invocation of this method. Once a file system is &lt;a href=&quot;../filesystem#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; it is provider-dependent if the provider allows a new file system to be created with the same URI as a file system it previously created.</source>
          <target state="translated">파일 시스템이 이미이 메소드의 호출에 의해 작성 되었기 때문에 파일 시스템이 이미 존재하면 이 메소드는 &lt;a href=&quot;../filesystemalreadyexistsexception&quot;&gt; &lt;code&gt;FileSystemAlreadyExistsException&lt;/code&gt; 을&lt;/a&gt; 발생시킵니다. 파일 시스템이 &lt;a href=&quot;../filesystem#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt; 제공자가 이전에 작성한 파일 시스템과 동일한 URI로 새 파일 시스템을 작성할 수 있도록하는 경우 제공자에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="8196d58a3f617d81e38092073e07acf79a97b5cd" translate="yes" xml:space="preserve">
          <source>This method throws &lt;a href=&quot;invalidpathexception&quot;&gt;&lt;code&gt;InvalidPathException&lt;/code&gt;&lt;/a&gt; when the path string cannot be converted to a path. Where possible, and where applicable, the exception is created with an &lt;a href=&quot;invalidpathexception#getIndex()&quot;&gt;&lt;code&gt;index&lt;/code&gt;&lt;/a&gt; value indicating the first position in the &lt;code&gt;path&lt;/code&gt; parameter that caused the path string to be rejected.</source>
          <target state="translated">이 메서드는 경로 문자열을 경로로 변환 할 수없는 경우 &lt;a href=&quot;invalidpathexception&quot;&gt; &lt;code&gt;InvalidPathException&lt;/code&gt; 을&lt;/a&gt; throw 합니다. 가능하고 해당되는 경우 예외는 경로 문자열이 거부 된 &lt;code&gt;path&lt;/code&gt; 매개 변수 의 첫 번째 위치를 나타내는 &lt;a href=&quot;invalidpathexception#getIndex()&quot;&gt; &lt;code&gt;index&lt;/code&gt; &lt;/a&gt; 값으로 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="937bce123445844f695ad61bb19f55c226141aa5" translate="yes" xml:space="preserve">
          <source>This method throws &lt;a href=&quot;invalidpathexception&quot;&gt;&lt;code&gt;InvalidPathException&lt;/code&gt;&lt;/a&gt; when the path string cannot be converted to a path. Where possible, and where applicable, the exception is created with an &lt;a href=&quot;invalidpathexception#getIndex--&quot;&gt;&lt;code&gt;index&lt;/code&gt;&lt;/a&gt; value indicating the first position in the &lt;code&gt;path&lt;/code&gt; parameter that caused the path string to be rejected.</source>
          <target state="translated">이 메소드는 경로 문자열을 경로로 변환 할 수없는 경우 &lt;a href=&quot;invalidpathexception&quot;&gt; &lt;code&gt;InvalidPathException&lt;/code&gt; 을&lt;/a&gt; 발생시킵니다. 가능한 경우, 그리고 해당되는 경우를 제외하고는 함께 작성된 &lt;a href=&quot;invalidpathexception#getIndex--&quot;&gt; &lt;code&gt;index&lt;/code&gt; &lt;/a&gt; 필드에 첫 번째 위치를 나타내는 값 &lt;code&gt;path&lt;/code&gt; 경로 문자열 거부 원인 파라미터.</target>
        </trans-unit>
        <trans-unit id="8d828b02bbfdc38b0a88e0235e3c1b680786f245" translate="yes" xml:space="preserve">
          <source>This method throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this &lt;code&gt;StackWalker&lt;/code&gt; is not configured with the &lt;a href=&quot;stackwalker.option#RETAIN_CLASS_REFERENCE&quot;&gt;&lt;code&gt;RETAIN_CLASS_REFERENCE&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">이 메서드는 이 &lt;code&gt;StackWalker&lt;/code&gt; 가 &lt;a href=&quot;stackwalker.option#RETAIN_CLASS_REFERENCE&quot;&gt; &lt;code&gt;RETAIN_CLASS_REFERENCE&lt;/code&gt; &lt;/a&gt; 옵션으로 구성 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 않은 경우 UnsupportedOperationException을 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="c677df6138190d87266bcab30b2bbeda42e15224" translate="yes" xml:space="preserve">
          <source>This method throws UnsupportedOperationException by default. Classes derived from ExtendedSSLSession must implement this method.</source>
          <target state="translated">이 메서드는 기본적으로 UnsupportedOperationException을 발생시킵니다. ExtendedSSLSession에서 파생 된 클래스는이 메소드를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="45b3ceadfed626d3744820a885b1cdcfdc192534" translate="yes" xml:space="preserve">
          <source>This method throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;source&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 인 경우 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="a270915a0087f6518dccd99e719da529656190a6" translate="yes" xml:space="preserve">
          <source>This method throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;. A &lt;code&gt;null command&lt;/code&gt; string is legal, but not recommended.</source>
          <target state="translated">이 메소드는 &lt;code&gt;source&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 인 경우 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을 발생 시킵니다. &lt;code&gt;null command&lt;/code&gt; 문자열은 합법적이지만, 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e6773d5dd26826cda35f2619cf7fdcfc834e5586" translate="yes" xml:space="preserve">
          <source>This method throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt; or &lt;code&gt;cause&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;source&lt;/code&gt; 또는 &lt;code&gt;cause&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 인 경우 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="fce53d27fa1069755eb67870e5f70faa1784ea59" translate="yes" xml:space="preserve">
          <source>This method throws an exception if there is an ambiguity, for example, if the object is of a class implementing more than one interface.</source>
          <target state="translated">예를 들어 객체가 둘 이상의 인터페이스를 구현하는 클래스에 속하는 경우와 같이 모호성이있는 경우이 메서드는 예외를 throw합니다.</target>
        </trans-unit>
        <trans-unit id="870771f48b8fb49038e5823d98c06d73f5b0ff20" translate="yes" xml:space="preserve">
          <source>This method throws an exception if there is an ambiguity, for example, if the object is of a class implementing more than one of the interfaces named above.</source>
          <target state="translated">예를 들어, 객체가 위에 명명 된 인터페이스 중 둘 이상을 구현하는 클래스에 속하는 경우와 같이 모호성이있는 경우이 메서드는 예외를 throw합니다.</target>
        </trans-unit>
        <trans-unit id="01d5015aba13924f7d366d34e50b6072f63a415e" translate="yes" xml:space="preserve">
          <source>This method throws no reflective or security exceptions.</source>
          <target state="translated">이 메소드는 반사 또는 보안 예외를 발생시키지 않습니다.</target>
        </trans-unit>
        <trans-unit id="afa7b41cf80e53d8a9c59aa94a72f31c8ffd5d02" translate="yes" xml:space="preserve">
          <source>This method transfers bytes from this buffer into the given destination array. An invocation of this method of the form &lt;code&gt;src.get(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드는이 버퍼에서 지정된 대상 배열로 바이트를 전송합니다. &lt;code&gt;src.get(a)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="23c829a65a69986b9504ae064aa8799e136296a8" translate="yes" xml:space="preserve">
          <source>This method transfers bytes from this buffer into the given destination array. If there are fewer bytes remaining in the buffer than are required to satisfy the request, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no bytes are transferred and a &lt;a href=&quot;bufferunderflowexception&quot;&gt;&lt;code&gt;BufferUnderflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는이 버퍼에서 지정된 대상 배열로 바이트를 전송합니다. 버퍼에 남아있는 바이트 수가 요청을 충족시키는 데 필요한 것보다 적습니다. 즉, &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면 바이트가 전송되지 않고 &lt;a href=&quot;bufferunderflowexception&quot;&gt; &lt;code&gt;BufferUnderflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bd9758e168b771cfdd859292d3cdfe5982626280" translate="yes" xml:space="preserve">
          <source>This method transfers bytes into this buffer from the given source array. If there are more bytes to be copied from the array than remain in this buffer, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no bytes are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 지정된 소스 배열에서이 버퍼로 바이트를 전송합니다. 이 버퍼에 남아있는 것보다 배열에서 복사 할 바이트 수가 더 많은 경우, 즉 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 인 경우 바이트가 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a8b34fcf121ff7537825a07c54335656d27ce21a" translate="yes" xml:space="preserve">
          <source>This method transfers chars from the given string into this buffer. If there are more chars to be copied from the string than remain in this buffer, that is, if &lt;code&gt;end - start&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no chars are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 지정된 문자열에서이 버퍼로 문자를 전송합니다. 이 버퍼에 남아있는 것보다 문자열에서 복사 할 문자가 더 많으면 (즉, &lt;code&gt;end - start&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 문자가 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6164f15d31e18e7a2434956f19fa2a9ca8085100" translate="yes" xml:space="preserve">
          <source>This method transfers chars from the given string into this buffer. If there are more chars to be copied from the string than remain in this buffer, that is, if &lt;code&gt;end&amp;nbsp;-&amp;nbsp;start&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no chars are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메서드는 지정된 문자열에서이 버퍼로 문자를 전송합니다. 이 버퍼에 남아있는 것보다 문자열에서 복사 할 문자가 더 많은 경우, 즉 &lt;code&gt;end&amp;nbsp;-&amp;nbsp;start&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면 문자가 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b95d50f138da0740f549ca688c52b4927caa5285" translate="yes" xml:space="preserve">
          <source>This method transfers chars from this buffer into the given destination array. An invocation of this method of the form &lt;code&gt;src.get(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드는 문자를이 버퍼에서 지정된 대상 배열로 전송합니다. &lt;code&gt;src.get(a)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="3f8c88edee67356ee7c4251fc51e9e6ba295d78f" translate="yes" xml:space="preserve">
          <source>This method transfers chars from this buffer into the given destination array. If there are fewer chars remaining in the buffer than are required to satisfy the request, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no chars are transferred and a &lt;a href=&quot;bufferunderflowexception&quot;&gt;&lt;code&gt;BufferUnderflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 문자를이 버퍼에서 지정된 대상 배열로 전송합니다. 요청을 충족시키는 데 필요한 것보다 적은 수의 문자가 버퍼에 남아있는 경우, 즉 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 인 경우 문자가 전송되지 않고 &lt;a href=&quot;bufferunderflowexception&quot;&gt; &lt;code&gt;BufferUnderflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3012d3613f04886d312ce45ee107e50ccf089df1" translate="yes" xml:space="preserve">
          <source>This method transfers chars into this buffer from the given source array. If there are more chars to be copied from the array than remain in this buffer, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no chars are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 지정된 소스 배열에서이 버퍼로 문자를 전송합니다. 이 버퍼에 남아있는 것보다 배열에서 복사 할 수있는 문자가 더 많으면 (즉, &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 경우 ) 문자가 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8efb19b9bbf42d5fed4580afdec34e08217d1b71" translate="yes" xml:space="preserve">
          <source>This method transfers doubles from this buffer into the given destination array. An invocation of this method of the form &lt;code&gt;src.get(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드는이 버퍼에서 지정된 대상 배열로 double을 전송합니다. &lt;code&gt;src.get(a)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ea42b6931ed452e79de4ca7d32554ef05bc44f68" translate="yes" xml:space="preserve">
          <source>This method transfers doubles from this buffer into the given destination array. If there are fewer doubles remaining in the buffer than are required to satisfy the request, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no doubles are transferred and a &lt;a href=&quot;bufferunderflowexception&quot;&gt;&lt;code&gt;BufferUnderflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는이 버퍼에서 지정된 대상 배열로 double을 전송합니다. 버퍼에 남아있는 double이 요청을 충족시키는 데 필요한 것보다 적다면, 즉 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면 double이 전송되지 않고 &lt;a href=&quot;bufferunderflowexception&quot;&gt; &lt;code&gt;BufferUnderflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6f1007ee256143a7348ae5c099b14be06bffa094" translate="yes" xml:space="preserve">
          <source>This method transfers doubles into this buffer from the given source array. If there are more doubles to be copied from the array than remain in this buffer, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no doubles are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 지정된 소스 배열에서이 버퍼로 double을 전송합니다. 이 버퍼에 남아있는 것보다 배열에서 복사 할 double이 더 많은 경우, 즉 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 인 경우 double이 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4983f8341c20dd98ab215a5a53d2f9c87b50fa9f" translate="yes" xml:space="preserve">
          <source>This method transfers floats from this buffer into the given destination array. An invocation of this method of the form &lt;code&gt;src.get(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드는이 버퍼에서 지정된 목적지 배열로 float를 전송합니다. &lt;code&gt;src.get(a)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="add5cb82464e8b75c258298fde36da297219276c" translate="yes" xml:space="preserve">
          <source>This method transfers floats from this buffer into the given destination array. If there are fewer floats remaining in the buffer than are required to satisfy the request, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no floats are transferred and a &lt;a href=&quot;bufferunderflowexception&quot;&gt;&lt;code&gt;BufferUnderflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는이 버퍼에서 지정된 목적지 배열로 float를 전송합니다. 요청을 충족시키는 데 필요한 수보다 적은 수의 부동 소수점이 버퍼에 남아있는 경우, 즉 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면 부동 소수점이 전송되지 않고 &lt;a href=&quot;bufferunderflowexception&quot;&gt; &lt;code&gt;BufferUnderflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4fc9f59d05784966f764ab2e2c5fe51cf2314ac4" translate="yes" xml:space="preserve">
          <source>This method transfers floats into this buffer from the given source array. If there are more floats to be copied from the array than remain in this buffer, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no floats are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 지정된 소스 배열에서이 버퍼로 float를 전송합니다. 이 버퍼에 남아있는 것보다 배열에서 복사 할 수있는 부동 수가 더 많은 경우, 즉 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면 부동 수가 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="54c6e5d2f9f2435bc5e8e097104969c5662d59d8" translate="yes" xml:space="preserve">
          <source>This method transfers ints from this buffer into the given destination array. An invocation of this method of the form &lt;code&gt;src.get(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드는 정수를이 버퍼로부터 지정된 배열에 전송합니다. &lt;code&gt;src.get(a)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="f8ce58e3a68123d420ce741c3e93388150cf02be" translate="yes" xml:space="preserve">
          <source>This method transfers ints from this buffer into the given destination array. If there are fewer ints remaining in the buffer than are required to satisfy the request, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no ints are transferred and a &lt;a href=&quot;bufferunderflowexception&quot;&gt;&lt;code&gt;BufferUnderflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 정수를이 버퍼로부터 지정된 배열에 전송합니다. 요청을 충족시키는 데 필요한 것보다 적은 수의 int가 버퍼에 남아있는 경우, 즉 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면 int가 전송되지 않고 &lt;a href=&quot;bufferunderflowexception&quot;&gt; &lt;code&gt;BufferUnderflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5c39e97914ca9f39e7e5755ada34160a831f9f95" translate="yes" xml:space="preserve">
          <source>This method transfers ints into this buffer from the given source array. If there are more ints to be copied from the array than remain in this buffer, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no ints are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 지정된 소스 배열에서이 버퍼로 정수를 전송합니다. 이 버퍼에 남아있는 것보다 배열에서 복사 할 int가 더 많은 경우, 즉 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면 int가 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ed25aff7206e1ea3ed6b8e66687a723da874494d" translate="yes" xml:space="preserve">
          <source>This method transfers longs from this buffer into the given destination array. An invocation of this method of the form &lt;code&gt;src.get(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드는이 버퍼에서 지정된 목적지 배열로 long을 전송합니다. &lt;code&gt;src.get(a)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="1c71b94a511f607f31b7e517994edefcafb15346" translate="yes" xml:space="preserve">
          <source>This method transfers longs from this buffer into the given destination array. If there are fewer longs remaining in the buffer than are required to satisfy the request, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no longs are transferred and a &lt;a href=&quot;bufferunderflowexception&quot;&gt;&lt;code&gt;BufferUnderflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는이 버퍼에서 지정된 목적지 배열로 long을 전송합니다. 버퍼에 남아있는 long이 요청을 충족시키는 데 필요한 것보다 적다면, 즉 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면 long이 전송되지 않고 &lt;a href=&quot;bufferunderflowexception&quot;&gt; &lt;code&gt;BufferUnderflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="235f9f51f2e81977ac8385277f847cdacf4591f0" translate="yes" xml:space="preserve">
          <source>This method transfers longs into this buffer from the given source array. If there are more longs to be copied from the array than remain in this buffer, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no longs are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 지정된 소스 배열에서이 버퍼로 long을 전송합니다. 배열에서 복사 할 long이이 버퍼에 남아있는 것보다 &lt;code&gt;length&lt;/code&gt; 경우, 즉 length &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면 long이 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ae439e1e93a92a0c2298225fb8873abfbe47ad79" translate="yes" xml:space="preserve">
          <source>This method transfers shorts from this buffer into the given destination array. An invocation of this method of the form &lt;code&gt;src.get(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드는,이 버퍼로부터 지정된 배열에 단락을 전송합니다. &lt;code&gt;src.get(a)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="9a5a04ef1fb09ba05b99dbc6155064d0adf4c685" translate="yes" xml:space="preserve">
          <source>This method transfers shorts from this buffer into the given destination array. If there are fewer shorts remaining in the buffer than are required to satisfy the request, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no shorts are transferred and a &lt;a href=&quot;bufferunderflowexception&quot;&gt;&lt;code&gt;BufferUnderflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는,이 버퍼로부터 지정된 배열에 단락을 전송합니다. 요청을 충족시키는 데 필요한 것보다 버퍼에 남아있는 쇼트가 적다면, 즉 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 인 경우 쇼트가 전송되지 않고 &lt;a href=&quot;bufferunderflowexception&quot;&gt; &lt;code&gt;BufferUnderflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3892f4cc3ee489fb57481ae2cea50a60d83c6a0c" translate="yes" xml:space="preserve">
          <source>This method transfers shorts into this buffer from the given source array. If there are more shorts to be copied from the array than remain in this buffer, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no shorts are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 지정된 소스 배열에서이 버퍼로 단락을 전송합니다. 이 버퍼에 남아있는 것보다 배열에서 복사 할 단락이 더 많은 경우, 즉 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면 단락이 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="62e29eda608a76b16972e15c68e2cf9b0d250160" translate="yes" xml:space="preserve">
          <source>This method transfers the bytes remaining in the given source buffer into this buffer. If there are more bytes remaining in the source buffer than in this buffer, that is, if &lt;code&gt;src.remaining()&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no bytes are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 지정된 소스 버퍼에 남아있는 바이트를이 버퍼로 전송합니다. 이 버퍼보다 ​​소스 버퍼에 남아있는 바이트가 더 많은 경우, 즉 &lt;code&gt;src.remaining()&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 인 경우 바이트가 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="67ba7be4645ff33297ca783caab7891d1960958c" translate="yes" xml:space="preserve">
          <source>This method transfers the chars remaining in the given source buffer into this buffer. If there are more chars remaining in the source buffer than in this buffer, that is, if &lt;code&gt;src.remaining()&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no chars are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 지정된 소스 버퍼에 남아있는 문자를이 버퍼로 전송합니다. 이 버퍼보다 ​​소스 버퍼에 남아있는 문자가 더 많은 경우, 즉 &lt;code&gt;src.remaining()&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면 문자가 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bc8d7052596d61ae0c55b04ff32cece33816fa5f" translate="yes" xml:space="preserve">
          <source>This method transfers the doubles remaining in the given source buffer into this buffer. If there are more doubles remaining in the source buffer than in this buffer, that is, if &lt;code&gt;src.remaining()&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no doubles are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 주어진 소스 버퍼에 남아있는 double을이 버퍼로 전송합니다. 이 버퍼보다 ​​소스 버퍼에 남아있는 double이 더 많으면, 즉 &lt;code&gt;src.remaining()&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면 double이 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7ba7d656045cc2c93c5545bdae075a188982a5c6" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source byte array into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드는 지정된 소스 바이트 배열의 전체 내용을이 버퍼에 전송합니다. &lt;code&gt;dst.put(a)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="1a8b2f59b1257b32202326e6a296a00c0a2c4831" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source char array into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드는 지정된 소스 char 배열의 전체 내용을이 버퍼에 전송합니다. &lt;code&gt;dst.put(a)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="f85a7eb3902ecf44fe65e88d3415a7fb2c63d8be" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source double array into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드는 지정된 소스 double 배열의 전체 내용을이 버퍼에 전송합니다. &lt;code&gt;dst.put(a)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="be0526012b1df9e6548573ee94cf3d148c55c57d" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source float array into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드는 지정된 소스 float 배열의 전체 내용을이 버퍼에 전송합니다. &lt;code&gt;dst.put(a)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="831c91291ae9f3040ba1e15151b6327beda90324" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source int array into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드는 지정된 소스 int 배열의 전체 내용을이 버퍼에 전송합니다. &lt;code&gt;dst.put(a)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="bd2e143f258ecd0d927757c41d6b2d8027096e66" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source long array into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드는 지정된 소스 long 배열의 전체 내용을이 버퍼에 전송합니다. &lt;code&gt;dst.put(a)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="c2efc54a18e7bd6cc6030ca162da5ee2a9086d4f" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source short array into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드는 지정된 소스 쇼트 배열의 전체 내용을이 버퍼에 전송합니다. &lt;code&gt;dst.put(a)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="cf07eb60f080b3daa1fafadf1e62a320445dc073" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source string into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(s)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">이 메소드는 주어진 소스 문자열의 전체 내용을이 버퍼로 전송합니다. &lt;code&gt;dst.put(s)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a7e8d2693c4c7919f019fc03e508dc0d5323f922" translate="yes" xml:space="preserve">
          <source>This method transfers the floats remaining in the given source buffer into this buffer. If there are more floats remaining in the source buffer than in this buffer, that is, if &lt;code&gt;src.remaining()&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no floats are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 지정된 소스 버퍼에 남아있는 float를이 버퍼로 전송합니다. 이 버퍼보다 ​​소스 버퍼에 남아있는 float가 더 많은 경우, 즉 &lt;code&gt;src.remaining()&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면 float가 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="74f84fb40f856ee9bcde48b317e90434d189c396" translate="yes" xml:space="preserve">
          <source>This method transfers the ints remaining in the given source buffer into this buffer. If there are more ints remaining in the source buffer than in this buffer, that is, if &lt;code&gt;src.remaining()&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no ints are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 지정된 소스 버퍼에 남아있는 정수를이 버퍼에 전송합니다. 이 버퍼보다 ​​소스 버퍼에 남아있는 정수가 더 많으면, 즉 &lt;code&gt;src.remaining()&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면 정수가 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cf156e58f7f2faea5e78527ce5d350c9f9b1e427" translate="yes" xml:space="preserve">
          <source>This method transfers the longs remaining in the given source buffer into this buffer. If there are more longs remaining in the source buffer than in this buffer, that is, if &lt;code&gt;src.remaining()&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no longs are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 주어진 소스 버퍼에 남아있는 long을이 버퍼로 전송합니다. 이 버퍼보다 ​​소스 버퍼에 더 긴 long이 남아있는 경우, 즉 &lt;code&gt;src.remaining()&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면 더 이상 long이 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6275e6cdadf99dcd9699c2abf6e9c8f15ea87718" translate="yes" xml:space="preserve">
          <source>This method transfers the shorts remaining in the given source buffer into this buffer. If there are more shorts remaining in the source buffer than in this buffer, that is, if &lt;code&gt;src.remaining()&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no shorts are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">이 메소드는 지정된 소스 버퍼에 남아있는 단락을이 버퍼로 전송합니다. 이 버퍼보다 ​​소스 버퍼에 남아있는 단락이 더 많은 경우, 즉 &lt;code&gt;src.remaining()&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; 이면, 단락이 전송 &lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f723b561577f6b65c00fbdcd91ce2efa16b48455" translate="yes" xml:space="preserve">
          <source>This method transforms color values using algorithms designed to produce the best perceptual match between input and output colors. In order to do colorimetric conversion of color values, you should use the &lt;code&gt;toCIEXYZ&lt;/code&gt; method of the CS_sRGB color space to first convert from the input color space to the CS_CIEXYZ color space, and then use the &lt;code&gt;fromCIEXYZ&lt;/code&gt; method of this color space to convert from CS_CIEXYZ to the output color space. See &lt;a href=&quot;#toCIEXYZ(float%5B%5D)&quot;&gt;&lt;code&gt;toCIEXYZ&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#fromCIEXYZ(float%5B%5D)&quot;&gt;&lt;code&gt;fromCIEXYZ&lt;/code&gt;&lt;/a&gt; for further information.</source>
          <target state="translated">이 방법은 입력 색상과 출력 색상간에 최상의 지각 일치를 생성하도록 설계된 알고리즘을 사용하여 색상 값을 변환합니다. 색상 값의 비색 변환을 수행 하려면 먼저 CS_sRGB 색상 공간 의 &lt;code&gt;toCIEXYZ&lt;/code&gt; 메서드를 사용하여 입력 색상 공간에서 CS_CIEXYZ 색상 공간으로 변환 한 다음 이 색상 공간 의 &lt;code&gt;fromCIEXYZ&lt;/code&gt; 메서드 를 사용하여 CS_CIEXYZ에서 다음으로 변환해야합니다. 출력 색상 공간. 자세한 내용은 &lt;a href=&quot;#toCIEXYZ(float%5B%5D)&quot;&gt; &lt;code&gt;toCIEXYZ&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#fromCIEXYZ(float%5B%5D)&quot;&gt; &lt;code&gt;fromCIEXYZ&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="71a60cdedc552ad4732d4e7f566aab160c88c4aa" translate="yes" xml:space="preserve">
          <source>This method transforms color values using algorithms designed to produce the best perceptual match between input and output colors. In order to do colorimetric conversion of color values, you should use the &lt;code&gt;toCIEXYZ&lt;/code&gt; method of this color space to first convert from the input color space to the CS_CIEXYZ color space, and then use the &lt;code&gt;fromCIEXYZ&lt;/code&gt; method of the CS_sRGB color space to convert from CS_CIEXYZ to the output color space. See &lt;a href=&quot;#toCIEXYZ(float%5B%5D)&quot;&gt;&lt;code&gt;toCIEXYZ&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#fromCIEXYZ(float%5B%5D)&quot;&gt;&lt;code&gt;fromCIEXYZ&lt;/code&gt;&lt;/a&gt; for further information.</source>
          <target state="translated">이 방법은 입력 색상과 출력 색상간에 최상의 지각 일치를 생성하도록 설계된 알고리즘을 사용하여 색상 값을 변환합니다. 색상 값의 비색 변환을 수행하려면 &lt;code&gt;toCIEXYZ&lt;/code&gt; 색상 공간 의 toCIEXYZ 방법을 사용하여 입력 색상 공간에서 CS_CIEXYZ 색상 공간으로 변환 한 다음 CS_sRGB 색상 공간 의 &lt;code&gt;fromCIEXYZ&lt;/code&gt; 방법 을 사용하여 CS_CIEXYZ에서 다음으로 변환해야합니다. 출력 색 공간. 자세한 내용은 &lt;a href=&quot;#toCIEXYZ(float%5B%5D)&quot;&gt; &lt;code&gt;toCIEXYZ&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#fromCIEXYZ(float%5B%5D)&quot;&gt; &lt;code&gt;fromCIEXYZ&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="12c8be2d0507ff773884abcc2f385cf0ecf9971b" translate="yes" xml:space="preserve">
          <source>This method transforms color values using relative colorimetry, as defined by the ICC Specification. This means that the XYZ argument values taken by this method are represented relative to the D50 white point of the CS_CIEXYZ color space. This representation is useful in a two-step color conversion process in which colors are transformed from an input color space to CS_CIEXYZ and then to an output color space. The color values returned by this method are not those that would produce the XYZ value passed to the method when measured by a colorimeter. If you have XYZ values corresponding to measurements made using current CIE recommended practices, they must be converted to D50 relative values before being passed to this method. The paragraphs below explain this in more detail.</source>
          <target state="translated">이 방법은 ICC 사양에 정의 된대로 상대 색도계를 사용하여 색상 값을 변환합니다. 즉,이 메서드에서 가져온 XYZ 인수 값은 CS_CIEXYZ 색 공간의 D50 흰색 점을 기준으로 표시됩니다. 이 표현은 색상이 입력 색상 공간에서 CS_CIEXYZ로 변환 된 다음 출력 색상 공간으로 변환되는 2 단계 색상 변환 프로세스에 유용합니다. 이 메서드에서 반환 된 색상 값은 색도계로 측정 할 때 메서드에 전달 된 XYZ 값을 생성하는 값이 아닙니다. 현재 CIE 권장 사례를 사용하여 수행 한 측정에 해당하는 XYZ 값이있는 경우이 메서드에 전달되기 전에 D50 상대 값으로 변환해야합니다. 아래 단락에서 이에 대해 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="01e6926cb5838f7bd3416b58092791984a127340" translate="yes" xml:space="preserve">
          <source>This method transforms color values using relative colorimetry, as defined by the ICC Specification. This means that the XYZ values returned by this method are represented relative to the D50 white point of the CS_CIEXYZ color space. This representation is useful in a two-step color conversion process in which colors are transformed from an input color space to CS_CIEXYZ and then to an output color space. This representation is not the same as the XYZ values that would be measured from the given color value by a colorimeter. A further transformation is necessary to compute the XYZ values that would be measured using current CIE recommended practices. The paragraphs below explain this in more detail.</source>
          <target state="translated">이 방법은 ICC 사양에 정의 된대로 상대 색도계를 사용하여 색상 값을 변환합니다. 즉,이 메서드에서 반환 된 XYZ 값은 CS_CIEXYZ 색 공간의 D50 흰색 점을 기준으로 표시됩니다. 이 표현은 색상이 입력 색상 공간에서 CS_CIEXYZ로 변환 된 다음 출력 색상 공간으로 변환되는 2 단계 색상 변환 프로세스에 유용합니다. 이 표현은 색도계에 의해 주어진 색상 값에서 측정되는 XYZ 값과 동일하지 않습니다. 현재 CIE 권장 사례를 사용하여 측정 할 XYZ 값을 계산하려면 추가 변환이 필요합니다. 아래 단락에서 이에 대해 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="0d5fa4ba9104b10d6af1d3e8c6878b8bf1423b36" translate="yes" xml:space="preserve">
          <source>This method transforms color values using relative colorimetry, as defined by the International Color Consortium standard. This means that the XYZ argument values taken by this method are represented relative to the D50 white point of the CS_CIEXYZ color space. This representation is useful in a two-step color conversion process in which colors are transformed from an input color space to CS_CIEXYZ and then to an output color space. The color values returned by this method are not those that would produce the XYZ value passed to the method when measured by a colorimeter. If you have XYZ values corresponding to measurements made using current CIE recommended practices, they must be converted to D50 relative values before being passed to this method. See the &lt;a href=&quot;icc_colorspace#fromCIEXYZ(float%5B%5D)&quot;&gt;&lt;code&gt;fromCIEXYZ&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;ICC_ColorSpace&lt;/code&gt; for further information.</source>
          <target state="translated">이 방법은 International Color Consortium 표준에 정의 된대로 상대 색도계를 사용하여 색상 값을 변환합니다. 즉,이 메서드에서 가져온 XYZ 인수 값은 CS_CIEXYZ 색 공간의 D50 흰색 점을 기준으로 표시됩니다. 이 표현은 색상이 입력 색상 공간에서 CS_CIEXYZ로 변환 된 다음 출력 색상 공간으로 변환되는 2 단계 색상 변환 프로세스에 유용합니다. 이 메서드에서 반환 된 색상 값은 색도계로 측정 할 때 메서드에 전달 된 XYZ 값을 생성하는 값이 아닙니다. 현재 CIE 권장 사례를 사용하여 수행 한 측정에 해당하는 XYZ 값이있는 경우이 메서드에 전달되기 전에 D50 상대 값으로 변환해야합니다. &lt;code&gt;ICC_ColorSpace&lt;/code&gt; 의 &lt;a href=&quot;icc_colorspace#fromCIEXYZ(float%5B%5D)&quot;&gt; &lt;code&gt;fromCIEXYZ&lt;/code&gt; &lt;/a&gt; 메소드를 참조하십시오. 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="166fb1725a25b43072bed3fd2dfb55ffa8e0b21c" translate="yes" xml:space="preserve">
          <source>This method transforms color values using relative colorimetry, as defined by the International Color Consortium standard. This means that the XYZ values returned by this method are represented relative to the D50 white point of the CS_CIEXYZ color space. This representation is useful in a two-step color conversion process in which colors are transformed from an input color space to CS_CIEXYZ and then to an output color space. This representation is not the same as the XYZ values that would be measured from the given color value by a colorimeter. A further transformation is necessary to compute the XYZ values that would be measured using current CIE recommended practices. See the &lt;a href=&quot;icc_colorspace#toCIEXYZ(float%5B%5D)&quot;&gt;&lt;code&gt;toCIEXYZ&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;ICC_ColorSpace&lt;/code&gt; for further information.</source>
          <target state="translated">이 방법은 International Color Consortium 표준에 정의 된대로 상대 색도계를 사용하여 색상 값을 변환합니다. 즉,이 메서드에서 반환 된 XYZ 값은 CS_CIEXYZ 색 공간의 D50 흰색 점을 기준으로 표시됩니다. 이 표현은 색상이 입력 색상 공간에서 CS_CIEXYZ로 변환 된 다음 출력 색상 공간으로 변환되는 2 단계 색상 변환 프로세스에 유용합니다. 이 표현은 색도계에 의해 주어진 색상 값에서 측정되는 XYZ 값과 동일하지 않습니다. 현재 CIE 권장 사례를 사용하여 측정 할 XYZ 값을 계산하려면 추가 변환이 필요합니다. 자세한 정보 는 &lt;code&gt;ICC_ColorSpace&lt;/code&gt; 의 &lt;a href=&quot;icc_colorspace#toCIEXYZ(float%5B%5D)&quot;&gt; &lt;code&gt;toCIEXYZ&lt;/code&gt; &lt;/a&gt; 메소드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a4ee60b3895a6a487dacc74792ace15f9baee8c4" translate="yes" xml:space="preserve">
          <source>This method transforms the name of the given service class into a provider-configuration filename as described in the class comment and then uses the &lt;code&gt;getResources&lt;/code&gt; method of the given class loader to find all available files with that name. These files are then read and parsed to produce a list of provider-class names. The iterator that is returned uses the given class loader to look up and then instantiate each element of the list.</source>
          <target state="translated">이 메소드는 클래스 주석에 설명 된대로 제공된 서비스 클래스의 이름을 제공자 구성 파일 이름으로 변환 한 다음 제공된 클래스 로더 의 &lt;code&gt;getResources&lt;/code&gt; 메소드 를 사용하여 해당 이름을 가진 사용 가능한 모든 파일을 찾습니다. 그런 다음이 파일을 읽고 구문 분석하여 제공자 클래스 이름 목록을 생성합니다. 리턴 된 반복자는 주어진 클래스 로더를 사용하여 목록의 각 요소를 찾아 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="696cece6e0116cfb5d2752082d1a70f4f7caab08" translate="yes" xml:space="preserve">
          <source>This method translates an event relative to the given component. This involves, at a minimum, translating the coordinates into the local coordinate system of the given component. It may also involve translating a region in the case of an expose event.</source>
          <target state="translated">이 메서드는 주어진 구성 요소에 상대적인 이벤트를 변환합니다. 여기에는 최소한 좌표를 주어진 구성 요소의 로컬 좌표계로 변환하는 작업이 포함됩니다. 노출 이벤트의 경우 영역을 변환하는 것도 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3020a94046a37ef1248c03133431f3abe9af25b" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security &lt;a href=&quot;provider&quot;&gt;providers&lt;/a&gt;, starting with the most preferred Provider. For each &lt;a href=&quot;keystorespi&quot;&gt;&lt;code&gt;KeyStoreSpi&lt;/code&gt;&lt;/a&gt; implementation supported by a Provider, it invokes the &lt;a href=&quot;keystorespi#engineProbe(java.io.InputStream)&quot;&gt;&lt;code&gt;engineProbe&lt;/code&gt;&lt;/a&gt; method to determine if it supports the specified keystore. A new KeyStore object is returned that encapsulates the KeyStoreSpi implementation from the first Provider that supports the specified file.</source>
          <target state="translated">이 메서드 는 가장 선호하는 Provider부터 시작하여 등록 된 보안 &lt;a href=&quot;provider&quot;&gt;공급자&lt;/a&gt; 목록을 순회합니다 . Provider가 지원하는 각 &lt;a href=&quot;keystorespi&quot;&gt; &lt;code&gt;KeyStoreSpi&lt;/code&gt; &lt;/a&gt; 구현에 대해 &lt;a href=&quot;keystorespi#engineProbe(java.io.InputStream)&quot;&gt; &lt;code&gt;engineProbe&lt;/code&gt; &lt;/a&gt; 메서드를 호출 하여 지정된 키 저장소를 지원하는지 확인합니다. 지정된 파일을 지원하는 첫 번째 공급자의 KeyStoreSpi 구현을 캡슐화하는 새 KeyStore 개체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="963aab600fba4d9d6b6d3d827be252dad32a024d" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new &lt;code&gt;SecureRandom&lt;/code&gt; object encapsulating the &lt;code&gt;SecureRandomSpi&lt;/code&gt; implementation from the first Provider that supports the specified algorithm and the specified &lt;code&gt;SecureRandomParameters&lt;/code&gt; is returned.</source>
          <target state="translated">이 메서드는 가장 선호하는 공급자부터 시작하여 등록 된 보안 공급자 목록을 순회합니다. 지정된 알고리즘과 지정된 &lt;code&gt;SecureRandomParameters&lt;/code&gt; 를 지원하는 첫 번째 Provider 의 &lt;code&gt;SecureRandomSpi&lt;/code&gt; 구현을 캡슐화 하는 새 &lt;code&gt;SecureRandom&lt;/code&gt; 개체 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e7bd636647ffa001397a6877845a54b3e0b37ff9" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new &lt;code&gt;SecureRandom&lt;/code&gt; object encapsulating the &lt;code&gt;SecureRandomSpi&lt;/code&gt; implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 메서드는 가장 선호하는 공급자부터 시작하여 등록 된 보안 공급자 목록을 순회합니다. 지정된 알고리즘을 지원하는 첫 번째 Provider에서 &lt;code&gt;SecureRandomSpi&lt;/code&gt; 구현을 캡슐화 하는 새 &lt;code&gt;SecureRandom&lt;/code&gt; 개체 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0e20f22914845cefe6c7ffc1b8c01c71a6ad302c" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new AlgorithmParameterGenerator object encapsulating the AlgorithmParameterGeneratorSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 최초의 프로 바이더로부터 AlgorithmParameterGeneratorSpi 구현을 캡슐화하는 새로운 AlgorithmParameterGenerator 객체가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="861bf1ddb45b5f5a0f444b57fb796617403bff70" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new AlgorithmParameters object encapsulating the AlgorithmParametersSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 첫 번째 공급자의 AlgorithmParametersSpi 구현을 캡슐화하는 새로운 AlgorithmParameters 개체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="64d2235fe5c1102582764745f2a042a3742b5103" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new CertPathBuilder object encapsulating the CertPathBuilderSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 최초의 Provider로부터 CertPathBuilderSpi 구현을 캡슐화하는 새로운 CertPathBuilder 객체가 돌려 주어집니다.</target>
        </trans-unit>
        <trans-unit id="bb4e8caa4b0e5ae83ddf7619b6a4660f90e91651" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new CertPathValidator object encapsulating the CertPathValidatorSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 최초의 Provider로부터 CertPathValidatorSpi 구현을 캡슐화하는 새로운 CertPathValidator 객체가 돌려 주어집니다.</target>
        </trans-unit>
        <trans-unit id="70cdc12e5335367106038cfbcf17f66666510e89" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new CertStore object encapsulating the CertStoreSpi implementation from the first Provider that supports the specified type is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 형식을 지원하는 첫 번째 공급자의 CertStoreSpi 구현을 캡슐화하는 새로운 CertStore 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b035a3126fc179ccecea1573350ca6adb1eef540" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new CertificateFactory object encapsulating the CertificateFactorySpi implementation from the first Provider that supports the specified type is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 형식을 지원하는 첫 번째 공급자의 CertificateFactorySpi 구현을 캡슐화하는 새 CertificateFactory 개체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b0a4f8b9f224da98416657ddc681032df9ad7502" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new Cipher object encapsulating the CipherSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 첫 번째 제공자의 CipherSpi 구현을 캡슐화하는 새 Cipher 오브젝트가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="abc13eba8b4098f245111a4713ba335645f40638" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new ExemptionMechanism object encapsulating the ExemptionMechanismSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 첫 번째 공급자의 ExemptionMechanismSpi 구현을 캡슐화하는 새로운 ExemptionMechanism 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7ac976f1ac6eae73943e67c6b13b9a978c32b598" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new KeyAgreement object encapsulating the KeyAgreementSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 첫 번째 제공자의 KeyAgreementSpi 구현을 캡슐화하는 새로운 KeyAgreement 오브젝트가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="269faf6fc5a11a627d2c78ca4fa05ee8ddcff60b" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new KeyFactory object encapsulating the KeyFactorySpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 최초의 프로 바이더로부터 KeyFactorySpi 구현을 캡슐화하는 새로운 KeyFactory 객체가 돌려 주어집니다.</target>
        </trans-unit>
        <trans-unit id="9680c754a5982fcf19547802ad41f748f39d6c95" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new KeyGenerator object encapsulating the KeyGeneratorSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 첫 번째 공급자의 KeyGeneratorSpi 구현을 캡슐화하는 새로운 KeyGenerator 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="05a476b6f146e1e764724c3725cd2eddecf486e6" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new KeyManagerFactory object encapsulating the KeyManagerFactorySpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 최초의 Provider로부터 KeyManagerFactorySpi 구현을 캡슐화하는 새로운 KeyManagerFactory 객체가 돌려 주어집니다.</target>
        </trans-unit>
        <trans-unit id="4e6ede446bcde0dd0d53e13cc1f70412538c6dfd" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new KeyPairGenerator object encapsulating the KeyPairGeneratorSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 첫 번째 공급자의 KeyPairGeneratorSpi 구현을 캡슐화하는 새로운 KeyPairGenerator 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1130ebd67c10415c74551edfb65dedc7e1429e91" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new KeyStore object encapsulating the KeyStoreSpi implementation from the first Provider that supports the specified type is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 형식을 지원하는 첫 번째 공급자의 KeyStoreSpi 구현을 캡슐화하는 새로운 KeyStore 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="17e781ebbe3b6ae6b015bda00c96dc377e2b949a" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new Mac object encapsulating the MacSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 첫 번째 공급자의 MacSpi 구현을 캡슐화하는 새로운 Mac 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="87eb869d88b8269b9030d46317da4a090e82ef8a" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new MessageDigest object encapsulating the MessageDigestSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 첫 번째 공급자의 MessageDigestSpi 구현을 캡슐화하는 새로운 MessageDigest 개체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="dced037fdf454bc1808c04019b299b4b7ad46c4e" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new SSLContext object encapsulating the SSLContextSpi implementation from the first Provider that supports the specified protocol is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 프로토콜을 지원하는 첫 번째 제공자의 SSLContextSpi 구현을 캡슐화하는 새 SSLContext 오브젝트가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="3b2e2d4fb613416e23035530cb8e29bc024108eb" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new SecretKeyFactory object encapsulating the SecretKeyFactorySpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 최초의 Provider로부터 SecretKeyFactorySpi 구현을 캡슐화하는 새로운 SecretKeyFactory 객체가 돌려 주어집니다.</target>
        </trans-unit>
        <trans-unit id="a992e79992c091682f89e2161d9518c8dabb5067" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new SecureRandom object encapsulating the SecureRandomSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 첫 번째 제공자의 SecureRandomSpi 구현을 캡슐화하는 새로운 SecureRandom 오브젝트가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="319ec56b8541176cc1565c9bd60099f7ab2ba15a" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new Signature object encapsulating the SignatureSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 첫 번째 공급자의 SignatureSpi 구현을 캡슐화하는 새로운 Signature 개체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0fa966320d4505dfe7ed1a3baedde6ae285043c0" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new TerminalFactory object encapsulating the TerminalFactorySpi implementation from the first Provider that supports the specified type is returned.</source>
          <target state="translated">이 메서드는 가장 선호하는 공급자부터 시작하여 등록 된 보안 공급자 목록을 순회합니다. 지정된 형식을 지원하는 첫 번째 공급자의 TerminalFactorySpi 구현을 캡슐화하는 새 TerminalFactory 개체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="39cd453c6b8f21fce09148fa3a2085c191cadac4" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new TrustManagerFactory object encapsulating the TrustManagerFactorySpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 알고리즘을 지원하는 첫 번째 제공자의 TrustManagerFactorySpi 구현을 캡슐화하는 새 TrustManagerFactory 오브젝트가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="64547557e19cc6a474eb34baeea233207c4f9d00" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security providers, starting with the most preferred Provider. A new Configuration object encapsulating the ConfigurationSpi implementation from the first Provider that supports the specified type is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 형식을 지원하는 첫 번째 공급자의 ConfigurationSpi 구현을 캡슐화하는 새로운 Configuration 개체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b3f003fe3131053435b502ff056cd34745faa289" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security providers, starting with the most preferred Provider. A new Policy object encapsulating the PolicySpi implementation from the first Provider that supports the specified type is returned.</source>
          <target state="translated">이 방법은 가장 선호되는 제공자로 시작하여 등록 된 보안 제공자 목록을 순회합니다. 지정된 유형을 지원하는 첫 번째 공급자의 PolicySpi 구현을 캡슐화하는 새 정책 개체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="330118e6c243a9fbc3db9baecbe25b03b457aab9" translate="yes" xml:space="preserve">
          <source>This method tries to read one character from the current substream. If it reaches the end of the stream, it calls the &lt;code&gt;close&lt;/code&gt; method of the current substream and begins reading from the next substream.</source>
          <target state="translated">이 메소드는 현재 서브 스트림에서 한 문자를 읽으려고합니다. 스트림의 끝에 도달하면 현재 서브 스트림 의 &lt;code&gt;close&lt;/code&gt; 메소드를 호출 하고 다음 서브 스트림에서 읽기를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="58a857b884e9934f8ce0afe71ab1b0af92ac32f7" translate="yes" xml:space="preserve">
          <source>This method triggers a sort.</source>
          <target state="translated">이 메서드는 정렬을 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="10734c290b53c0effa88e0a90e362fce2b806c6d" translate="yes" xml:space="preserve">
          <source>This method typically does not modify the map in any way, instead allowing the map to modify itself as directed by its return value. It</source>
          <target state="translated">이 방법은 일반적으로지도를 어떤 식 으로든 수정하지 않고 대신 반환 값에 따라지도를 수정할 수 있습니다. 그것</target>
        </trans-unit>
        <trans-unit id="c068b17d7cd1a40020333c0031878fe78af5800e" translate="yes" xml:space="preserve">
          <source>This method updates the file's timestamp attributes. The values are converted to the epoch and precision supported by the file system. Converting from finer to coarser granularities result in precision loss. The behavior of this method when attempting to set a timestamp that is not supported or to a value that is outside the range supported by the underlying file store is not defined. It may or not fail by throwing an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">이 방법은 파일의 타임 스탬프 속성을 업데이트합니다. 값은 파일 시스템에서 지원하는 신기원과 정밀도로 변환됩니다. 더 미세한 입자를 더 세밀한 입자로 변환하면 정밀한 손실이 발생합니다. 지원되지 않는 타임 스탬프를 설정하거나 기본 파일 저장소에서 지원하는 범위를 벗어난 값으로 설정하려는 경우이 방법의 동작은 정의되지 않습니다. &lt;code&gt;IOException&lt;/code&gt; 을 발생시켜 실패 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="656f28bf54258477b7d5c144cb77b84530c38f9d" translate="yes" xml:space="preserve">
          <source>This method updates the logging configuration from reading a properties file and ignores the &quot;java.util.logging.config.class&quot; system property. The &quot;java.util.logging.config.class&quot; property is only used by the &lt;a href=&quot;#readConfiguration()&quot;&gt;&lt;code&gt;readConfiguration()&lt;/code&gt;&lt;/a&gt; method to load a custom configuration class as an initial configuration.</source>
          <target state="translated">이 메소드는 특성 파일을 읽지 않고 로깅 구성을 업데이트하고 &quot;java.util.logging.config.class&quot;시스템 특성을 무시합니다. &quot;java.util.logging.config.class&quot;속성은 &lt;a href=&quot;#readConfiguration()&quot;&gt; &lt;code&gt;readConfiguration()&lt;/code&gt; &lt;/a&gt; 메서드에서 사용자 지정 구성 클래스를 초기 구성으로로드하는 데만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="29d8dd489d89985334191c40a76096f71d4d6d51" translate="yes" xml:space="preserve">
          <source>This method used to return the value of a proprietary property in the master file of the &quot;SUN&quot; Cryptographic Service Provider in order to determine how to parse algorithm-specific parameters.</source>
          <target state="translated">이 메서드는 알고리즘 별 매개 변수를 구문 분석하는 방법을 결정하기 위해 &quot;SUN&quot;암호화 서비스 공급자의 마스터 파일에서 독점 속성 값을 반환하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7fe6a9f391d9d66289b24faa1f698ca0361f2141" translate="yes" xml:space="preserve">
          <source>This method used to return the value of a proprietary property in the master file of the &quot;SUN&quot; Cryptographic Service Provider in order to determine how to parse algorithm-specific parameters. Use the new provider-based and algorithm-independent &lt;code&gt;AlgorithmParameters&lt;/code&gt; and &lt;code&gt;KeyFactory&lt;/code&gt; engine classes (introduced in the J2SE version 1.2 platform) instead.</source>
          <target state="translated">이 메서드는 알고리즘 별 매개 변수를 구문 분석하는 방법을 결정하기 위해 &quot;SUN&quot;암호화 서비스 공급자의 마스터 파일에서 독점 속성 값을 반환하는 데 사용됩니다. 대신 새로운 공급자 기반 및 알고리즘 독립적 인 &lt;code&gt;AlgorithmParameters&lt;/code&gt; 및 &lt;code&gt;KeyFactory&lt;/code&gt; 엔진 클래스 (J2SE 버전 1.2 플랫폼에 도입 됨)를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b4606727b66f2f12c6327ac8a9135d409c881da3" translate="yes" xml:space="preserve">
          <source>This method uses &lt;a href=&quot;#NO_FLUSH&quot;&gt;&lt;code&gt;NO_FLUSH&lt;/code&gt;&lt;/a&gt; as its compression flush mode. An invocation of this method of the form &lt;code&gt;deflater.deflate(b)&lt;/code&gt; yields the same result as the invocation of &lt;code&gt;deflater.deflate(b, 0, b.length, Deflater.NO_FLUSH)&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 압축 플러시 모드로 &lt;a href=&quot;#NO_FLUSH&quot;&gt; &lt;code&gt;NO_FLUSH&lt;/code&gt; &lt;/a&gt; 를 사용 합니다. &lt;code&gt;deflater.deflate(b)&lt;/code&gt; 형식의이 메소드 호출은 &lt;code&gt;deflater.deflate(b, 0, b.length, Deflater.NO_FLUSH)&lt;/code&gt; 호출과 동일한 결과를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="f135f1541778cbf135cf136a03bbe9d48b3f6102" translate="yes" xml:space="preserve">
          <source>This method uses &lt;a href=&quot;#NO_FLUSH&quot;&gt;&lt;code&gt;NO_FLUSH&lt;/code&gt;&lt;/a&gt; as its compression flush mode. An invocation of this method of the form &lt;code&gt;deflater.deflate(b, off, len)&lt;/code&gt; yields the same result as the invocation of &lt;code&gt;deflater.deflate(b, off, len, Deflater.NO_FLUSH)&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 압축 플러시 모드로 &lt;a href=&quot;#NO_FLUSH&quot;&gt; &lt;code&gt;NO_FLUSH&lt;/code&gt; &lt;/a&gt; 를 사용 합니다. &lt;code&gt;deflater.deflate(b, off, len)&lt;/code&gt; 형식의이 메서드 호출은 &lt;code&gt;deflater.deflate(b, off, len, Deflater.NO_FLUSH)&lt;/code&gt; 호출과 동일한 결과를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="5731c78a7cc6bfc2c7859632c816063e4a4bf488" translate="yes" xml:space="preserve">
          <source>This method uses &lt;a href=&quot;#NO_FLUSH&quot;&gt;&lt;code&gt;NO_FLUSH&lt;/code&gt;&lt;/a&gt; as its compression flush mode. An invocation of this method of the form &lt;code&gt;deflater.deflate(output)&lt;/code&gt; yields the same result as the invocation of &lt;code&gt;deflater.deflate(output, Deflater.NO_FLUSH)&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 압축 플러시 모드로 &lt;a href=&quot;#NO_FLUSH&quot;&gt; &lt;code&gt;NO_FLUSH&lt;/code&gt; &lt;/a&gt; 를 사용 합니다. &lt;code&gt;deflater.deflate(output)&lt;/code&gt; 형식의이 메서드를 호출하면 &lt;code&gt;deflater.deflate(output, Deflater.NO_FLUSH)&lt;/code&gt; 호출과 동일한 결과가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="5d0924e184705a36ab776196f82932478cc5fffc" translate="yes" xml:space="preserve">
          <source>This method uses &lt;a href=&quot;#getPrintable(java.text.MessageFormat,java.text.MessageFormat)&quot;&gt;&lt;code&gt;getPrintable(java.text.MessageFormat, java.text.MessageFormat)&lt;/code&gt;&lt;/a&gt; to render document content.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#getPrintable(java.text.MessageFormat,java.text.MessageFormat)&quot;&gt; &lt;code&gt;getPrintable(java.text.MessageFormat, java.text.MessageFormat)&lt;/code&gt; &lt;/a&gt; 을 사용하여 문서 컨텐츠를 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="ca98706202417f601d9a75f9aab39ea80b754077" translate="yes" xml:space="preserve">
          <source>This method uses &lt;a href=&quot;deflater#NO_FLUSH&quot;&gt;&lt;code&gt;NO_FLUSH&lt;/code&gt;&lt;/a&gt; as its compression flush mode. An invocation of this method of the form &lt;code&gt;deflater.deflate(b)&lt;/code&gt; yields the same result as the invocation of &lt;code&gt;deflater.deflate(b, 0, b.length, Deflater.NO_FLUSH)&lt;/code&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;deflater#NO_FLUSH&quot;&gt; &lt;code&gt;NO_FLUSH&lt;/code&gt; &lt;/a&gt; 를 압축 플러시 모드로 사용 합니다. &lt;code&gt;deflater.deflate(b)&lt;/code&gt; 형식의이 메소드를 호출하면 &lt;code&gt;deflater.deflate(b, 0, b.length, Deflater.NO_FLUSH)&lt;/code&gt; 호출과 동일한 결과가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="07ab2be0ecd985ea652ab80e0c9de591cb58c95b" translate="yes" xml:space="preserve">
          <source>This method uses &lt;a href=&quot;deflater#NO_FLUSH&quot;&gt;&lt;code&gt;NO_FLUSH&lt;/code&gt;&lt;/a&gt; as its compression flush mode. An invocation of this method of the form &lt;code&gt;deflater.deflate(b, off, len)&lt;/code&gt; yields the same result as the invocation of &lt;code&gt;deflater.deflate(b, off, len, Deflater.NO_FLUSH)&lt;/code&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;deflater#NO_FLUSH&quot;&gt; &lt;code&gt;NO_FLUSH&lt;/code&gt; &lt;/a&gt; 를 압축 플러시 모드로 사용 합니다. &lt;code&gt;deflater.deflate(b, off, len)&lt;/code&gt; 형식의이 메소드를 호출하면 &lt;code&gt;deflater.deflate(b, off, len, Deflater.NO_FLUSH)&lt;/code&gt; 호출과 동일한 결과가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="ba067de617c68a4f9070ba932d3411692d33c914" translate="yes" xml:space="preserve">
          <source>This method uses the following ordered lookup procedure to determine the &lt;code&gt;TransformerFactory&lt;/code&gt; implementation class to load:</source>
          <target state="translated">이 메소드는 로드 할 &lt;code&gt;TransformerFactory&lt;/code&gt; 구현 클래스를 판별하기 위해 다음과 같은 정렬 된 검색 프로 시저를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="e7f2e266d97570b902592f004483e6019ce2af24" translate="yes" xml:space="preserve">
          <source>This method uses the following ordered lookup procedure to determine the XMLEventFactory implementation class to load:</source>
          <target state="translated">이 메소드는로드 할 XMLEventFactory 구현 클래스를 판별하기 위해 다음과 같은 정렬 된 검색 프로 시저를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="2857b2b10372bcc6943e81f0bac1dcdae533f25f" translate="yes" xml:space="preserve">
          <source>This method uses the following ordered lookup procedure to determine the XMLInputFactory implementation class to load:</source>
          <target state="translated">이 메소드는로드 할 XMLInputFactory 구현 클래스를 판별하기 위해 다음과 같은 정렬 된 검색 프로 시저를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="71405385b0a3f9cb9fade83919bf58256dc28fc9" translate="yes" xml:space="preserve">
          <source>This method uses the following ordered lookup procedure to determine the XMLOutputFactory implementation class to load:</source>
          <target state="translated">이 메소드는로드 할 XMLOutputFactory 구현 클래스를 판별하기 위해 다음과 같은 정렬 된 검색 프로 시저를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="142d56ed00ecdf4d2b782be0292c33ca80daf429" translate="yes" xml:space="preserve">
          <source>This method uses the installed &lt;a href=&quot;spi/filetypedetector&quot;&gt;&lt;code&gt;FileTypeDetector&lt;/code&gt;&lt;/a&gt; implementations to probe the given file to determine its content type. Each file type detector's &lt;a href=&quot;spi/filetypedetector#probeContentType(java.nio.file.Path)&quot;&gt;&lt;code&gt;probeContentType&lt;/code&gt;&lt;/a&gt; is invoked, in turn, to probe the file type. If the file is recognized then the content type is returned. If the file is not recognized by any of the installed file type detectors then a system-default file type detector is invoked to guess the content type.</source>
          <target state="translated">이 메소드는 설치된 &lt;a href=&quot;spi/filetypedetector&quot;&gt; &lt;code&gt;FileTypeDetector&lt;/code&gt; &lt;/a&gt; 구현을 사용하여 주어진 파일을 조사하여 해당 컨텐츠 유형을 판별합니다. 각 파일 유형 감지기의 &lt;a href=&quot;spi/filetypedetector#probeContentType(java.nio.file.Path)&quot;&gt; &lt;code&gt;probeContentType&lt;/code&gt; &lt;/a&gt; 이 차례로 호출되어 파일 유형을 조사합니다. 파일이 인식되면 콘텐츠 유형이 반환됩니다. 설치된 파일 유형 감지기가 파일을 인식하지 못하면 콘텐츠 유형을 추측하기 위해 시스템 기본 파일 유형 감지기가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="38447029b3f80e6af72b910f78b202f9398ca5ec" translate="yes" xml:space="preserve">
          <source>This method uses the installed &lt;a href=&quot;spi/filetypedetector&quot;&gt;&lt;code&gt;FileTypeDetector&lt;/code&gt;&lt;/a&gt; implementations to probe the given file to determine its content type. Each file type detector's &lt;a href=&quot;spi/filetypedetector#probeContentType-java.nio.file.Path-&quot;&gt;&lt;code&gt;probeContentType&lt;/code&gt;&lt;/a&gt; is invoked, in turn, to probe the file type. If the file is recognized then the content type is returned. If the file is not recognized by any of the installed file type detectors then a system-default file type detector is invoked to guess the content type.</source>
          <target state="translated">이 메소드는 설치된 &lt;a href=&quot;spi/filetypedetector&quot;&gt; &lt;code&gt;FileTypeDetector&lt;/code&gt; &lt;/a&gt; 구현을 사용하여 지정된 파일을 검사하여 컨텐츠 유형을 판별합니다. 각 파일 유형 검출기의 &lt;a href=&quot;spi/filetypedetector#probeContentType-java.nio.file.Path-&quot;&gt; &lt;code&gt;probeContentType&lt;/code&gt; &lt;/a&gt; 이 차례로 호출되어 파일 유형을 프로브합니다. 파일이 인식되면 컨텐츠 유형이 리턴됩니다. 설치된 파일 유형 감지기에서 파일을 인식하지 못하면 컨텐츠 유형을 추측하기 위해 시스템 기본 파일 유형 감지기가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="35634fab3e2642d45674b3a94ff9f8b2755456b8" translate="yes" xml:space="preserve">
          <source>This method uses the specified &lt;code&gt;map&lt;/code&gt; for type map customizations unless the base type of the array does not match a user-defined type in &lt;code&gt;map&lt;/code&gt;, in which case it uses the standard mapping. This version of the method &lt;code&gt;getArray&lt;/code&gt; uses either the given type map or the standard mapping; it never uses the type map associated with the connection.</source>
          <target state="translated">이 메서드는 배열의 기본 유형이 &lt;code&gt;map&lt;/code&gt; 의 사용자 정의 유형과 일치하지 않는 경우 유형 맵 사용자 정의에 지정된 &lt;code&gt;map&lt;/code&gt; 을 사용합니다.이 경우 표준 매핑을 사용합니다. 이 버전의 &lt;code&gt;getArray&lt;/code&gt; 메소드 는 지정된 유형 맵 또는 표준 매핑을 사용합니다. 연결과 연관된 유형 맵을 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="898c65c53674ccde27230059a0d836d532ebb58e" translate="yes" xml:space="preserve">
          <source>This method uses the specified state factories in the &lt;code&gt;Context.STATE_FACTORIES&lt;/code&gt; property from the environment properties, and from the provider resource file associated with &lt;code&gt;nameCtx&lt;/code&gt;, in that order. The value of this property is a colon-separated list of factory class names that are tried in order, and the first one that succeeds in returning the object's state is the one used. If no object's state can be retrieved in this way, return the object itself. If an exception is encountered while retrieving the state, the exception is passed up to the caller.</source>
          <target state="translated">이 메소드는 환경 특성 및 &lt;code&gt;nameCtx&lt;/code&gt; 와 연관된 제공자 자원 파일 의 &lt;code&gt;Context.STATE_FACTORIES&lt;/code&gt; 특성에서 지정된 상태 팩토리 를 순서대로 사용합니다. 이 속성의 값은 순서대로 시도되는 콜론으로 구분 된 팩토리 클래스 이름 목록이며, 객체의 상태를 반환하는 데 성공한 첫 번째는 사용 된 이름입니다. 이런 방식으로 객체 상태를 검색 할 수 없으면 객체 자체를 반환합니다. 상태를 검색하는 동안 예외가 발생하면 예외가 호출자에게 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="db59a5126ae157f352c0894d76557f98fd1c83a7" translate="yes" xml:space="preserve">
          <source>This method uses the standard JCA provider lookup mechanism to locate and instantiate a &lt;code&gt;KeyInfoFactory&lt;/code&gt; implementation of the default mechanism type. It traverses the list of registered security &lt;code&gt;Provider&lt;/code&gt;s, starting with the most preferred &lt;code&gt;Provider&lt;/code&gt;. A new &lt;code&gt;KeyInfoFactory&lt;/code&gt; object from the first &lt;code&gt;Provider&lt;/code&gt; that supports the DOM mechanism is returned.</source>
          <target state="translated">이 메소드는 표준 JCA 제공자 조회 메커니즘을 사용 하여 기본 메커니즘 유형 의 &lt;code&gt;KeyInfoFactory&lt;/code&gt; 구현 을 찾고 인스턴스화합니다 . 가장 선호되는 &lt;code&gt;Provider&lt;/code&gt; 로 시작하여 등록 된 보안 &lt;code&gt;Provider&lt;/code&gt; 목록을 순회합니다 . DOM 메커니즘을 지원하는 첫 번째 &lt;code&gt;Provider&lt;/code&gt; 의 새 &lt;code&gt;KeyInfoFactory&lt;/code&gt; 개체 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8e38d653bf7a3250042fc9da617fff6d132da24f" translate="yes" xml:space="preserve">
          <source>This method uses the standard JCA provider lookup mechanism to locate and instantiate a &lt;code&gt;KeyInfoFactory&lt;/code&gt; implementation of the desired mechanism type. It traverses the list of registered security &lt;code&gt;Provider&lt;/code&gt;s, starting with the most preferred &lt;code&gt;Provider&lt;/code&gt;. A new &lt;code&gt;KeyInfoFactory&lt;/code&gt; object from the first &lt;code&gt;Provider&lt;/code&gt; that supports the specified mechanism is returned.</source>
          <target state="translated">이 메서드는 표준 JCA 공급자 검색 메커니즘을 사용 하여 원하는 메커니즘 유형 의 &lt;code&gt;KeyInfoFactory&lt;/code&gt; 구현 을 찾고 인스턴스화합니다 . 가장 선호되는 &lt;code&gt;Provider&lt;/code&gt; 로 시작하여 등록 된 보안 &lt;code&gt;Provider&lt;/code&gt; 목록을 순회합니다 . 지정된 메커니즘을 지원하는 첫 번째 &lt;code&gt;Provider&lt;/code&gt; 의 새 &lt;code&gt;KeyInfoFactory&lt;/code&gt; 개체 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="21bc1728033fff21f41801ce62c0086bec77afc1" translate="yes" xml:space="preserve">
          <source>This method uses the standard JCA provider lookup mechanism to locate and instantiate a &lt;code&gt;TransformService&lt;/code&gt; implementation of the desired algorithm and &lt;code&gt;MechanismType&lt;/code&gt; service attribute. It traverses the list of registered security &lt;code&gt;Provider&lt;/code&gt;s, starting with the most preferred &lt;code&gt;Provider&lt;/code&gt;. A new &lt;code&gt;TransformService&lt;/code&gt; object from the first &lt;code&gt;Provider&lt;/code&gt; that supports the specified algorithm and mechanism type is returned.</source>
          <target state="translated">이 메소드는 표준 JCA 제공자 검색 메커니즘을 사용 하여 원하는 알고리즘 및 &lt;code&gt;MechanismType&lt;/code&gt; 서비스 속성 의 &lt;code&gt;TransformService&lt;/code&gt; 구현 을 찾고 인스턴스화 합니다. 가장 선호되는 &lt;code&gt;Provider&lt;/code&gt; 로 시작하여 등록 된 보안 &lt;code&gt;Provider&lt;/code&gt; 목록을 순회합니다 . 지정된 알고리즘 및 메커니즘 유형을 지원 하는 첫 번째 &lt;code&gt;Provider&lt;/code&gt; 의 새 &lt;code&gt;TransformService&lt;/code&gt; 개체 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0ebb139f205d8fde1e0c0fc36b7087dfa0e1ec1b" translate="yes" xml:space="preserve">
          <source>This method uses the standard JCA provider lookup mechanism to locate and instantiate an &lt;code&gt;XMLSignatureFactory&lt;/code&gt; implementation of the default mechanism type. It traverses the list of registered security &lt;code&gt;Provider&lt;/code&gt;s, starting with the most preferred &lt;code&gt;Provider&lt;/code&gt;. A new &lt;code&gt;XMLSignatureFactory&lt;/code&gt; object from the first &lt;code&gt;Provider&lt;/code&gt; that supports the DOM mechanism is returned.</source>
          <target state="translated">이 메소드는 표준 JCA 제공자 검색 메커니즘을 사용 하여 기본 메커니즘 유형 의 &lt;code&gt;XMLSignatureFactory&lt;/code&gt; 구현 을 찾고 인스턴스화합니다 . 가장 선호되는 &lt;code&gt;Provider&lt;/code&gt; 로 시작하여 등록 된 보안 &lt;code&gt;Provider&lt;/code&gt; 목록을 순회합니다 . DOM 메커니즘을 지원하는 첫 번째 &lt;code&gt;Provider&lt;/code&gt; 의 새 &lt;code&gt;XMLSignatureFactory&lt;/code&gt; 개체 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="692e86bde91a9850e46bcdf3919bc4d5950f2c2e" translate="yes" xml:space="preserve">
          <source>This method uses the standard JCA provider lookup mechanism to locate and instantiate an &lt;code&gt;XMLSignatureFactory&lt;/code&gt; implementation of the desired mechanism type. It traverses the list of registered security &lt;code&gt;Provider&lt;/code&gt;s, starting with the most preferred &lt;code&gt;Provider&lt;/code&gt;. A new &lt;code&gt;XMLSignatureFactory&lt;/code&gt; object from the first &lt;code&gt;Provider&lt;/code&gt; that supports the specified mechanism is returned.</source>
          <target state="translated">이 메서드는 표준 JCA 공급자 검색 메커니즘을 사용 하여 원하는 메커니즘 유형 의 &lt;code&gt;XMLSignatureFactory&lt;/code&gt; 구현 을 찾고 인스턴스화합니다 . 가장 선호되는 &lt;code&gt;Provider&lt;/code&gt; 로 시작하여 등록 된 보안 &lt;code&gt;Provider&lt;/code&gt; 목록을 순회합니다 . 지정된 메커니즘을 지원하는 첫 번째 &lt;code&gt;Provider&lt;/code&gt; 의 새 &lt;code&gt;XMLSignatureFactory&lt;/code&gt; 개체 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="ba286b9c371cc33fee9514f2cd15a416cc3e87ea" translate="yes" xml:space="preserve">
          <source>This method uses three other methods to set and help track the &lt;code&gt;Action&lt;/code&gt;'s property values. It uses the &lt;code&gt;configurePropertiesFromAction&lt;/code&gt; method to immediately change the button's properties. To track changes in the &lt;code&gt;Action&lt;/code&gt;'s property values, this method registers the &lt;code&gt;PropertyChangeListener&lt;/code&gt; returned by &lt;code&gt;createActionPropertyChangeListener&lt;/code&gt;. The default &lt;code&gt;PropertyChangeListener&lt;/code&gt; invokes the &lt;code&gt;actionPropertyChanged&lt;/code&gt; method when a property in the &lt;code&gt;Action&lt;/code&gt; changes.</source>
          <target state="translated">이 메서드는 다른 세 가지 메서드를 사용하여 &lt;code&gt;Action&lt;/code&gt; 의 속성 값 을 설정하고 추적 합니다. &lt;code&gt;configurePropertiesFromAction&lt;/code&gt; 메서드를 사용하여 버튼의 속성을 즉시 변경합니다. &lt;code&gt;Action&lt;/code&gt; 속성 값의 변경 사항을 추적하기 위해이 메서드 는 &lt;code&gt;createActionPropertyChangeListener&lt;/code&gt; 가 반환 한 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 를 등록합니다 . 기본 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 는 &lt;code&gt;Action&lt;/code&gt; 의 속성이 변경 될 때 &lt;code&gt;actionPropertyChanged&lt;/code&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="e0f0cef3f1179faa4c07978c45d59c09862d3853" translate="yes" xml:space="preserve">
          <source>This method uses three other methods to set and help track the &lt;code&gt;Action&lt;/code&gt;'s property values. It uses the &lt;code&gt;configurePropertiesFromAction&lt;/code&gt; method to immediately change the combobox's properties. To track changes in the &lt;code&gt;Action&lt;/code&gt;'s property values, this method registers the &lt;code&gt;PropertyChangeListener&lt;/code&gt; returned by &lt;code&gt;createActionPropertyChangeListener&lt;/code&gt;. The default &lt;code&gt;PropertyChangeListener&lt;/code&gt; invokes the &lt;code&gt;actionPropertyChanged&lt;/code&gt; method when a property in the &lt;code&gt;Action&lt;/code&gt; changes.</source>
          <target state="translated">이 메서드는 다른 세 가지 메서드를 사용하여 &lt;code&gt;Action&lt;/code&gt; 의 속성 값 을 설정하고 추적 합니다. &lt;code&gt;configurePropertiesFromAction&lt;/code&gt; 메서드를 사용하여 콤보 상자의 속성을 즉시 변경합니다. &lt;code&gt;Action&lt;/code&gt; 속성 값의 변경 사항을 추적하기 위해이 메서드 는 &lt;code&gt;createActionPropertyChangeListener&lt;/code&gt; 가 반환 한 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 를 등록합니다 . 기본 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 는 &lt;code&gt;Action&lt;/code&gt; 의 속성이 변경 될 때 &lt;code&gt;actionPropertyChanged&lt;/code&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="223044d0ccd41e869250efe5387fc26026895cad" translate="yes" xml:space="preserve">
          <source>This method uses three other methods to set and help track the &lt;code&gt;Action&lt;/code&gt;'s property values. It uses the &lt;code&gt;configurePropertiesFromAction&lt;/code&gt; method to immediately change the textfield's properties. To track changes in the &lt;code&gt;Action&lt;/code&gt;'s property values, this method registers the &lt;code&gt;PropertyChangeListener&lt;/code&gt; returned by &lt;code&gt;createActionPropertyChangeListener&lt;/code&gt;. The default &lt;code&gt;PropertyChangeListener&lt;/code&gt; invokes the &lt;code&gt;actionPropertyChanged&lt;/code&gt; method when a property in the &lt;code&gt;Action&lt;/code&gt; changes.</source>
          <target state="translated">이 메서드는 다른 세 가지 메서드를 사용하여 &lt;code&gt;Action&lt;/code&gt; 의 속성 값 을 설정하고 추적 합니다. &lt;code&gt;configurePropertiesFromAction&lt;/code&gt; 메서드를 사용하여 텍스트 필드의 속성을 즉시 변경합니다. &lt;code&gt;Action&lt;/code&gt; 속성 값의 변경 사항을 추적하기 위해이 메서드 는 &lt;code&gt;createActionPropertyChangeListener&lt;/code&gt; 가 반환 한 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 를 등록합니다 . 기본 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 는 &lt;code&gt;Action&lt;/code&gt; 의 속성이 변경 될 때 &lt;code&gt;actionPropertyChanged&lt;/code&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="89b65058b04531829765da57b474b5de1235f279" translate="yes" xml:space="preserve">
          <source>This method validates that the sharding key is valid for the &lt;code&gt;Connection&lt;/code&gt;. The timeout value indicates how long the driver should wait for the &lt;code&gt;Connection&lt;/code&gt; to verify that the sharding key is valid before &lt;code&gt;setShardingKeyIfValid&lt;/code&gt; returns false.</source>
          <target state="translated">이 메서드는 샤딩 키가 &lt;code&gt;Connection&lt;/code&gt; 에 유효한지 확인합니다 . 시간 초과 값은 &lt;code&gt;setShardingKeyIfValid&lt;/code&gt; 가 false를 반환 하기 전에 &lt;code&gt;Connection&lt;/code&gt; 이 샤딩 키가 유효한지 확인하기 위해 드라이버가 대기해야하는 시간을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="2a7d58ec57e3082e0867c15221a3e1ec1c9bf939" translate="yes" xml:space="preserve">
          <source>This method validates that the sharding keys are valid for the &lt;code&gt;Connection&lt;/code&gt;. The timeout value indicates how long the driver should wait for the &lt;code&gt;Connection&lt;/code&gt; to verify that the sharding key is valid before &lt;code&gt;setShardingKeyIfValid&lt;/code&gt; returns false.</source>
          <target state="translated">이 메서드는 샤딩 키가 &lt;code&gt;Connection&lt;/code&gt; 에 유효한지 확인합니다 . 시간 초과 값은 &lt;code&gt;setShardingKeyIfValid&lt;/code&gt; 가 false를 반환 하기 전에 &lt;code&gt;Connection&lt;/code&gt; 이 샤딩 키가 유효한지 확인하기 위해 드라이버가 대기해야하는 시간을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="c787a849489a101de70042f3cdc9ec6441f51cde" translate="yes" xml:space="preserve">
          <source>This method validates that, for each class or interface which is recorded as a member of the nest by the nest host, that class or interface records itself as a member of that same nest. Any exceptions that occur during this validation are rethrown by this method.</source>
          <target state="translated">이 메서드는 중첩 호스트에 의해 중첩의 구성원으로 기록 된 각 클래스 또는 인터페이스에 대해 해당 클래스 또는 인터페이스가 동일한 중첩의 구성원으로 자신을 기록하는지 확인합니다. 이 유효성 검사 중에 발생하는 모든 예외는이 메서드에 의해 다시 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8a84288afc4ef56ac95fa54ce28f59cc8758819e" translate="yes" xml:space="preserve">
          <source>This method walks a file tree rooted at a given starting file. The file tree traversal is &lt;em&gt;depth-first&lt;/em&gt; with the given &lt;a href=&quot;filevisitor&quot;&gt;&lt;code&gt;FileVisitor&lt;/code&gt;&lt;/a&gt; invoked for each file encountered. File tree traversal completes when all accessible files in the tree have been visited, or a visit method returns a result of &lt;a href=&quot;filevisitresult#TERMINATE&quot;&gt;&lt;code&gt;TERMINATE&lt;/code&gt;&lt;/a&gt;. Where a visit method terminates due an &lt;code&gt;IOException&lt;/code&gt;, an uncaught error, or runtime exception, then the traversal is terminated and the error or exception is propagated to the caller of this method.</source>
          <target state="translated">이 방법은 주어진 시작 파일에 기반을 둔 파일 트리를 안내합니다. 파일 트리 순회는 발생하는 각 파일에 대해 지정된 &lt;a href=&quot;filevisitor&quot;&gt; &lt;code&gt;FileVisitor&lt;/code&gt; 가&lt;/a&gt; 호출 된 상태에서 &lt;em&gt;깊이 우선&lt;/em&gt; 입니다 . 트리의 액세스 가능한 모든 파일을 방문했거나 방문 메소드가 &lt;a href=&quot;filevisitresult#TERMINATE&quot;&gt; &lt;code&gt;TERMINATE&lt;/code&gt; &lt;/a&gt; 의 결과를 리턴하면 파일 트리 순회가 완료됩니다 . &lt;code&gt;IOException&lt;/code&gt; , 포착되지 않은 오류 또는 런타임 예외 로 인해 방문 메소드가 종료 되면 순회가 종료되고 오류 또는 예외가이 메소드의 호출자에게 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="27b64f409e8ec5c3aba277ff35655c20c04c67be" translate="yes" xml:space="preserve">
          <source>This method walks the file tree in exactly the manner specified by the &lt;a href=&quot;#walk(java.nio.file.Path,int,java.nio.file.FileVisitOption...)&quot;&gt;&lt;code&gt;walk&lt;/code&gt;&lt;/a&gt; method. For each file encountered, the given &lt;a href=&quot;../../util/function/bipredicate&quot;&gt;&lt;code&gt;BiPredicate&lt;/code&gt;&lt;/a&gt; is invoked with its &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Path&lt;/code&gt; object is obtained as if by &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the relative path against &lt;code&gt;
 start&lt;/code&gt; and is only included in the returned &lt;a href=&quot;../../util/stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; if the &lt;code&gt;BiPredicate&lt;/code&gt; returns true. Compare to calling &lt;a href=&quot;../../util/stream/stream#filter(java.util.function.Predicate)&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;Stream&lt;/code&gt; returned by &lt;code&gt;walk&lt;/code&gt; method, this method may be more efficient by avoiding redundant retrieval of the &lt;code&gt;BasicFileAttributes&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#walk(java.nio.file.Path,int,java.nio.file.FileVisitOption...)&quot;&gt; &lt;code&gt;walk&lt;/code&gt; &lt;/a&gt; 메서드에 지정된 방식으로 정확히 파일 트리를 탐색합니다 . 발견 된 각 파일에 대해 지정된 &lt;a href=&quot;../../util/function/bipredicate&quot;&gt; &lt;code&gt;BiPredicate&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt; 와 함께 호출됩니다 . &lt;code&gt;Path&lt;/code&gt; 객체에 의해 것처럼 얻어 &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 에 대한 상대 경로 &lt;code&gt; start&lt;/code&gt; 만 반환에 포함되어 &lt;a href=&quot;../../util/stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; 경우 &lt;code&gt;BiPredicate&lt;/code&gt; 가 true를 반환합니다. &lt;code&gt;walk&lt;/code&gt; 메서드에서 반환 된 &lt;code&gt;Stream&lt;/code&gt; 에 대한 호출 &lt;a href=&quot;../../util/stream/stream#filter(java.util.function.Predicate)&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt; 와 비교할 때이 메서드는 &lt;code&gt;BasicFileAttributes&lt;/code&gt; 의 중복 검색을 피함으로써 더 효율적일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="07587ec8793bc110ca2ed6b1a01f5862917816af" translate="yes" xml:space="preserve">
          <source>This method walks the file tree in exactly the manner specified by the &lt;a href=&quot;files#walk-java.nio.file.Path-int-java.nio.file.FileVisitOption...-&quot;&gt;&lt;code&gt;walk&lt;/code&gt;&lt;/a&gt; method. For each file encountered, the given &lt;a href=&quot;../../util/function/bipredicate&quot;&gt;&lt;code&gt;BiPredicate&lt;/code&gt;&lt;/a&gt; is invoked with its &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Path&lt;/code&gt; object is obtained as if by &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the relative path against &lt;code&gt;start&lt;/code&gt; and is only included in the returned &lt;a href=&quot;../../util/stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; if the &lt;code&gt;BiPredicate&lt;/code&gt; returns true. Compare to calling &lt;a href=&quot;../../util/stream/stream#filter-java.util.function.Predicate-&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;Stream&lt;/code&gt; returned by &lt;code&gt;walk&lt;/code&gt; method, this method may be more efficient by avoiding redundant retrieval of the &lt;code&gt;BasicFileAttributes&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;files#walk-java.nio.file.Path-int-java.nio.file.FileVisitOption...-&quot;&gt; &lt;code&gt;walk&lt;/code&gt; &lt;/a&gt; 메소드에 의해 지정된 방식으로 파일 트리를 걷습니다 . 발견 된 각 파일에 대해 주어진 &lt;a href=&quot;../../util/function/bipredicate&quot;&gt; &lt;code&gt;BiPredicate&lt;/code&gt; &lt;/a&gt; 가 해당 &lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; 로&lt;/a&gt; 호출됩니다 . &lt;code&gt;Path&lt;/code&gt; 객체에 의해 것처럼 얻어 &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 에 대한 상대 경로 &lt;code&gt;start&lt;/code&gt; 만 반환에 포함되어 &lt;a href=&quot;../../util/stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; 경우 &lt;code&gt;BiPredicate&lt;/code&gt; 가 true를 반환합니다. &lt;code&gt;walk&lt;/code&gt; 메소드에 의해 리턴 된 &lt;code&gt;Stream&lt;/code&gt; 에서 &lt;a href=&quot;../../util/stream/stream#filter-java.util.function.Predicate-&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt; 를 호출 하는 것과 비교 하여이 메소드는 &lt;code&gt;BasicFileAttributes&lt;/code&gt; 의 중복 검색을 피함으로써 더 효율적일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7c96cbac1ce71994c1502c052604dbfd689d21d9" translate="yes" xml:space="preserve">
          <source>This method was added to version 1.4 of the Java 2 Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method cannot be &lt;code&gt;abstract&lt;/code&gt; and by default throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">이 방법은 Java 2 Platform Standard Edition 버전 1.4에 추가되었습니다. 기존 서비스 제공 업체와의 호환성을 유지하기 위해이 메소드는 &lt;code&gt;abstract&lt;/code&gt; 할 수 없으며 기본적으로 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="646647deb0c95e19113854f668991dfe58a46511" translate="yes" xml:space="preserve">
          <source>This method was added to version 1.4 of the Java 2 Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method is not &lt;code&gt;abstract&lt;/code&gt; and it provides a default implementation. Subclasses should override this method with a correct implementation.</source>
          <target state="translated">이 방법은 Java 2 Platform Standard Edition 버전 1.4에 추가되었습니다. 기존 서비스 제공 업체와의 호환성을 유지하기 위해이 방법은 &lt;code&gt;abstract&lt;/code&gt; 이지 않으며 기본 구현을 제공합니다. 서브 클래스는 올바른 구현으로이 메소드를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="1dcffec8464f4cfecef5fdd4f8360fb78fb1fd0d" translate="yes" xml:space="preserve">
          <source>This method was added to version 1.8 of the Java Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method cannot be &lt;code&gt;abstract&lt;/code&gt; and by default throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 Java Platform Standard Edition 버전 1.8에 추가되었습니다. 기존 서비스 제공 업체와의 호환성을 유지하기 위해이 메소드는 &lt;code&gt;abstract&lt;/code&gt; 할 수 없으며 기본적으로 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="e22ad565b9276d2c64dd81c7c016357cbdd9bd58" translate="yes" xml:space="preserve">
          <source>This method was added to version 1.8 of the Java Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method cannot be abstract and by default throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 Java Platform Standard Edition 버전 1.8에 추가되었습니다. 기존 서비스 제공 업체와의 호환성을 유지하기 위해이 메소드는 추상화 할 수 없으며 기본적으로 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="be430afeb6fbf40846ae0d7f0ef74deb97a84c35" translate="yes" xml:space="preserve">
          <source>This method was intended to control instruction tracing.</source>
          <target state="translated">This method was intended to control instruction tracing.</target>
        </trans-unit>
        <trans-unit id="fe2eac1310660ddffa5c2572662733b8628a8255" translate="yes" xml:space="preserve">
          <source>This method was intended to control instruction tracing. It has been superseded by JVM-specific tracing mechanisms. This method is subject to removal in a future version of Java SE.</source>
          <target state="translated">This method was intended to control instruction tracing. It has been superseded by JVM-specific tracing mechanisms. This method is subject to removal in a future version of Java SE.</target>
        </trans-unit>
        <trans-unit id="d5528a8a01a41772cd19d9e54a41a6e07882ff14" translate="yes" xml:space="preserve">
          <source>This method was intended to control method call tracing.</source>
          <target state="translated">This method was intended to control method call tracing.</target>
        </trans-unit>
        <trans-unit id="541d8b19b1b4abd8002bdd0f1ec90d8085b689c6" translate="yes" xml:space="preserve">
          <source>This method was intended to control method call tracing. It has been superseded by JVM-specific tracing mechanisms. This method is subject to removal in a future version of Java SE.</source>
          <target state="translated">This method was intended to control method call tracing. It has been superseded by JVM-specific tracing mechanisms. This method is subject to removal in a future version of Java SE.</target>
        </trans-unit>
        <trans-unit id="0b50de38a1f7a40d54f0df5b875b1a4c61561f97" translate="yes" xml:space="preserve">
          <source>This method will allow trusted subclasses of ObjectInputStream to substitute one object for another during deserialization.</source>
          <target state="translated">This method will allow trusted subclasses of ObjectInputStream to substitute one object for another during deserialization.</target>
        </trans-unit>
        <trans-unit id="342c773ec2e87fc177a5aa9af9b63a84e94c590d" translate="yes" xml:space="preserve">
          <source>This method will allow trusted subclasses of ObjectInputStream to substitute one object for another during deserialization. Replacing objects is disabled until enableResolveObject is called. The enableResolveObject method checks that the stream requesting to resolve object can be trusted. Every reference to serializable objects is passed to resolveObject. To insure that the private state of objects is not unintentionally exposed only trusted streams may use resolveObject.</source>
          <target state="translated">이 메소드를 사용하면 직렬화 해제 중에 ObjectInputStream의 신뢰할 수있는 서브 클래스가 한 오브젝트를 다른 오브젝트로 대체 할 수 있습니다. enableResolveObject가 호출 될 때까지 객체 교체가 비활성화됩니다. enableResolveObject 메서드는 객체 확인 요청 스트림을 신뢰할 수 있는지 확인합니다. 직렬화 가능 객체에 대한 모든 참조는 resolveObject로 전달됩니다. 객체의 개인 상태가 실수로 노출되지 않도록하려면 신뢰할 수있는 스트림 만 resolveObject를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24664b55af49338694e6f8410e17868f679e7ad7" translate="yes" xml:space="preserve">
          <source>This method will allow trusted subclasses of ObjectOutputStream to substitute one object for another during serialization.</source>
          <target state="translated">This method will allow trusted subclasses of ObjectOutputStream to substitute one object for another during serialization.</target>
        </trans-unit>
        <trans-unit id="19a1ca10d56e8668efe2fb611286d49ab3dd4578" translate="yes" xml:space="preserve">
          <source>This method will allow trusted subclasses of ObjectOutputStream to substitute one object for another during serialization. Replacing objects is disabled until enableReplaceObject is called. The enableReplaceObject method checks that the stream requesting to do replacement can be trusted. The first occurrence of each object written into the serialization stream is passed to replaceObject. Subsequent references to the object are replaced by the object returned by the original call to replaceObject. To ensure that the private state of objects is not unintentionally exposed, only trusted streams may use replaceObject.</source>
          <target state="translated">이 메소드를 사용하면 직렬화 중에 ObjectOutputStream의 신뢰할 수있는 서브 클래스가 한 오브젝트를 다른 오브젝트 대신 사용할 수 있습니다. enableReplaceObject가 호출 될 때까지 객체 교체가 비활성화됩니다. enableReplaceObject 메소드는 교체를 요청하는 스트림을 신뢰할 수 있는지 확인합니다. 직렬화 스트림에 기록 된 각 객체의 첫 번째 항목은 replaceObject로 전달됩니다. 객체에 대한 후속 참조는 replaceObject에 대한 원래 호출로 반환 된 객체로 대체됩니다. 객체의 개인 상태가 실수로 노출되지 않도록하려면 신뢰할 수있는 스트림 만 replaceObject를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e377c756d26df40bc0d36301bec04b107d8c8aae" translate="yes" xml:space="preserve">
          <source>This method will also set up a label table for you. If there is not already a label table, and the major tick spacing is &lt;code&gt;&amp;gt; 0&lt;/code&gt;, a standard label table will be generated (by calling &lt;code&gt;createStandardLabels&lt;/code&gt;) with labels at the major tick marks. The label table is then set on the slider by calling &lt;code&gt;setLabelTable&lt;/code&gt;.</source>
          <target state="translated">This method will also set up a label table for you. If there is not already a label table, and the major tick spacing is &lt;code&gt;&amp;gt; 0&lt;/code&gt; , a standard label table will be generated (by calling &lt;code&gt;createStandardLabels&lt;/code&gt; ) with labels at the major tick marks. The label table is then set on the slider by calling &lt;code&gt;setLabelTable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82534c39250004b2aeba4fc3ef12240ec604fa7b" translate="yes" xml:space="preserve">
          <source>This method will also set up a label table for you. If there is not already a label table, and the major tick spacing is &lt;code&gt;&amp;gt; 0&lt;/code&gt;, and &lt;code&gt;getPaintLabels&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, a standard label table will be generated (by calling &lt;code&gt;createStandardLabels&lt;/code&gt;) with labels at the major tick marks. For the example above, you would get text labels: &quot;0&quot;, &quot;10&quot;, &quot;20&quot;, &quot;30&quot;, &quot;40&quot;, &quot;50&quot;. The label table is then set on the slider by calling &lt;code&gt;setLabelTable&lt;/code&gt;.</source>
          <target state="translated">This method will also set up a label table for you. If there is not already a label table, and the major tick spacing is &lt;code&gt;&amp;gt; 0&lt;/code&gt; , and &lt;code&gt;getPaintLabels&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; , a standard label table will be generated (by calling &lt;code&gt;createStandardLabels&lt;/code&gt; ) with labels at the major tick marks. For the example above, you would get text labels: &quot;0&quot;, &quot;10&quot;, &quot;20&quot;, &quot;30&quot;, &quot;40&quot;, &quot;50&quot;. The label table is then set on the slider by calling &lt;code&gt;setLabelTable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c27c2f10702143a6756e5dbce224fb2f266b502" translate="yes" xml:space="preserve">
          <source>This method will always read an integral number of frames. If &lt;code&gt;len&lt;/code&gt; does not specify an integral number of frames, a maximum of &lt;code&gt;len - (len % frameSize)
 &lt;/code&gt; bytes will be read.</source>
          <target state="translated">이 방법은 항상 정수의 프레임을 읽습니다. 경우 &lt;code&gt;len&lt;/code&gt; 프레임의 정수, 최대 지정하지 않습니다 &lt;code&gt;len - (len % frameSize) &lt;/code&gt; 바이트를 읽어됩니다.</target>
        </trans-unit>
        <trans-unit id="31d9d998b440ab398531394561d5bd71272b9fd8" translate="yes" xml:space="preserve">
          <source>This method will always read an integral number of frames. If &lt;code&gt;len&lt;/code&gt; does not specify an integral number of frames, a maximum of &lt;code&gt;len - (len % frameSize)&lt;/code&gt; bytes will be read.</source>
          <target state="translated">This method will always read an integral number of frames. If &lt;code&gt;len&lt;/code&gt; does not specify an integral number of frames, a maximum of &lt;code&gt;len - (len % frameSize)&lt;/code&gt; bytes will be read.</target>
        </trans-unit>
        <trans-unit id="a869932e634c911cd9144a80eb52838c63564e87" translate="yes" xml:space="preserve">
          <source>This method will always read an integral number of frames. If the length of the array is not an integral number of frames, a maximum of &lt;code&gt;b.length - (b.length % frameSize)
 &lt;/code&gt; bytes will be read.</source>
          <target state="translated">이 방법은 항상 정수의 프레임을 읽습니다. 배열의 길이가 정수 프레임 수가 아닌 경우 최대 &lt;code&gt;b.length - (b.length % frameSize) &lt;/code&gt; 바이트를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="2d742382dea3ef2d663c5ff0188ceb141bc0c0bf" translate="yes" xml:space="preserve">
          <source>This method will always read an integral number of frames. If the length of the array is not an integral number of frames, a maximum of &lt;code&gt;b.length - (b.length % frameSize)&lt;/code&gt; bytes will be read.</source>
          <target state="translated">This method will always read an integral number of frames. If the length of the array is not an integral number of frames, a maximum of &lt;code&gt;b.length - (b.length % frameSize)&lt;/code&gt; bytes will be read.</target>
        </trans-unit>
        <trans-unit id="a01637d0d4c647bbe96bb7c8385f529cb64de856" translate="yes" xml:space="preserve">
          <source>This method will always return &lt;code&gt;false&lt;/code&gt; if this component is not displayable because it is impossible to determine the weight of an undisplayable component.</source>
          <target state="translated">This method will always return &lt;code&gt;false&lt;/code&gt; if this component is not displayable because it is impossible to determine the weight of an undisplayable component.</target>
        </trans-unit>
        <trans-unit id="e04ea62042264e476dee1c510f88572cdd3ad070" translate="yes" xml:space="preserve">
          <source>This method will always skip an integral number of frames. If &lt;code&gt;n&lt;/code&gt; does not specify an integral number of frames, a maximum of &lt;code&gt;n - (n % frameSize)&lt;/code&gt; bytes will be skipped.</source>
          <target state="translated">This method will always skip an integral number of frames. If &lt;code&gt;n&lt;/code&gt; does not specify an integral number of frames, a maximum of &lt;code&gt;n - (n % frameSize)&lt;/code&gt; bytes will be skipped.</target>
        </trans-unit>
        <trans-unit id="9b30e52019d3213e3c2609683448a29ced2c0233" translate="yes" xml:space="preserve">
          <source>This method will attempt to consume one complete SSL/TLS network packet, but will never consume more than the sum of the bytes remaining in the buffers. Each &lt;code&gt;ByteBuffer&lt;/code&gt;'s position is updated to reflect the amount of data consumed or produced. The limits remain the same.</source>
          <target state="translated">이 방법은 하나의 완전한 SSL / TLS 네트워크 패킷을 사용하려고 시도하지만 버퍼에 남아있는 바이트의 합을 초과하여 사용하지는 않습니다. 각 &lt;code&gt;ByteBuffer&lt;/code&gt; 의 위치는 소비 또는 생성되는 데이터의 양을 반영하여 업데이트됩니다. 한계는 동일하게 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="7f50d163a3ef789a50b37c110def796e08253800" translate="yes" xml:space="preserve">
          <source>This method will attempt to consume one complete SSL/TLS/DTLS network packet, but will never consume more than the sum of the bytes remaining in the buffers. Each &lt;code&gt;ByteBuffer&lt;/code&gt;'s position is updated to reflect the amount of data consumed or produced. The limits remain the same.</source>
          <target state="translated">This method will attempt to consume one complete SSL/TLS/DTLS network packet, but will never consume more than the sum of the bytes remaining in the buffers. Each &lt;code&gt;ByteBuffer&lt;/code&gt; 's position is updated to reflect the amount of data consumed or produced. The limits remain the same.</target>
        </trans-unit>
        <trans-unit id="e28d69322e01ed6ceb66bdee0acbea95ff6bbbce" translate="yes" xml:space="preserve">
          <source>This method will attempt to produce SSL/TLS records, and will consume as much source data as possible, but will never consume more than the sum of the bytes remaining in each buffer. Each &lt;code&gt;ByteBuffer&lt;/code&gt;'s position is updated to reflect the amount of data consumed or produced. The limits remain the same.</source>
          <target state="translated">이 방법은 SSL / TLS 레코드를 생성하려고 시도하고 가능한 한 많은 소스 데이터를 소비하지만 각 버퍼에 남아있는 바이트의 합보다 더 많이 소비하지는 않습니다. 각 &lt;code&gt;ByteBuffer&lt;/code&gt; 의 위치는 소비 또는 생성되는 데이터의 양을 반영하여 업데이트됩니다. 한계는 동일하게 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="bf1c0c059be3fd1a1482a3fdcf4740738df47564" translate="yes" xml:space="preserve">
          <source>This method will attempt to produce SSL/TLS/DTLS records, and will consume as much source data as possible, but will never consume more than the sum of the bytes remaining in each buffer. Each &lt;code&gt;ByteBuffer&lt;/code&gt;'s position is updated to reflect the amount of data consumed or produced. The limits remain the same.</source>
          <target state="translated">This method will attempt to produce SSL/TLS/DTLS records, and will consume as much source data as possible, but will never consume more than the sum of the bytes remaining in each buffer. Each &lt;code&gt;ByteBuffer&lt;/code&gt; 's position is updated to reflect the amount of data consumed or produced. The limits remain the same.</target>
        </trans-unit>
        <trans-unit id="9facbb9d5ba9bd78a76d7ceac6e18b66f7128b9d" translate="yes" xml:space="preserve">
          <source>This method will automatically be called on this component when a property value changes such that size, location, or internal layout of this component has been affected. This automatic updating differs from the AWT because programs generally no longer need to invoke &lt;code&gt;validate&lt;/code&gt; to get the contents of the GUI to update.</source>
          <target state="translated">This method will automatically be called on this component when a property value changes such that size, location, or internal layout of this component has been affected. This automatic updating differs from the AWT because programs generally no longer need to invoke &lt;code&gt;validate&lt;/code&gt; to get the contents of the GUI to update.</target>
        </trans-unit>
        <trans-unit id="4bb23152d59395a2459c34daaaa18662d1451afe" translate="yes" xml:space="preserve">
          <source>This method will be called by &lt;code&gt;dispatchKeyEvent&lt;/code&gt;.</source>
          <target state="translated">This method will be called by &lt;code&gt;dispatchKeyEvent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="514c90f6fb41b93e29baf42743b62fa7dc3f4c81" translate="yes" xml:space="preserve">
          <source>This method will be called by &lt;code&gt;dispatchKeyEvent&lt;/code&gt;. By default, this method will handle any unconsumed KeyEvents that map to an AWT &lt;code&gt;MenuShortcut&lt;/code&gt; by consuming the event and activating the shortcut.</source>
          <target state="translated">This method will be called by &lt;code&gt;dispatchKeyEvent&lt;/code&gt; . By default, this method will handle any unconsumed KeyEvents that map to an AWT &lt;code&gt;MenuShortcut&lt;/code&gt; by consuming the event and activating the shortcut.</target>
        </trans-unit>
        <trans-unit id="f0ef677b269686ba8719d4bd78ef7995d121794e" translate="yes" xml:space="preserve">
          <source>This method will be called by &lt;code&gt;dispatchKeyEvent&lt;/code&gt;. It will handle any unconsumed KeyEvents that map to an AWT &lt;code&gt;MenuShortcut&lt;/code&gt; by consuming the event and activating the shortcut.</source>
          <target state="translated">This method will be called by &lt;code&gt;dispatchKeyEvent&lt;/code&gt; . It will handle any unconsumed KeyEvents that map to an AWT &lt;code&gt;MenuShortcut&lt;/code&gt; by consuming the event and activating the shortcut.</target>
        </trans-unit>
        <trans-unit id="cff055e484d857c79c8aee111db0e932ed5fb9cf" translate="yes" xml:space="preserve">
          <source>This method will be called by the parser at the completion of the parsing of each node.</source>
          <target state="translated">This method will be called by the parser at the completion of the parsing of each node.</target>
        </trans-unit>
        <trans-unit id="d41bebc6bebd0b3e401d95da731a63e53be638da" translate="yes" xml:space="preserve">
          <source>This method will be called by the parser at the completion of the parsing of each node. The node and all of its descendants will exist and be complete. The parent node will also exist, although it may be incomplete, i.e. it may have additional children that have not yet been parsed. Attribute nodes are never passed to this function.</source>
          <target state="translated">This method will be called by the parser at the completion of the parsing of each node. The node and all of its descendants will exist and be complete. The parent node will also exist, although it may be incomplete, i.e. it may have additional children that have not yet been parsed. Attribute nodes are never passed to this function.</target>
        </trans-unit>
        <trans-unit id="68d24b12e149b45114c32b2e63efbea2c371103b" translate="yes" xml:space="preserve">
          <source>This method will be called to add a subkey into a Sharding Key object being built.</source>
          <target state="translated">This method will be called to add a subkey into a Sharding Key object being built.</target>
        </trans-unit>
        <trans-unit id="f5650e1e2c2eec4fe614a0a53eed32d9ac5437d4" translate="yes" xml:space="preserve">
          <source>This method will be called to add a subkey into a Sharding Key object being built. The order in which subkey method is called is important as it indicates the order of placement of the subkey within the Sharding Key.</source>
          <target state="translated">This method will be called to add a subkey into a Sharding Key object being built. The order in which subkey method is called is important as it indicates the order of placement of the subkey within the Sharding Key.</target>
        </trans-unit>
        <trans-unit id="6ece9f76e02061e8cf5f558f7d25dd59b078f35c" translate="yes" xml:space="preserve">
          <source>This method will be invoked within the first thread that accesses the value with the &lt;a href=&quot;#get(java.lang.Class)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">This method will be invoked within the first thread that accesses the value with the &lt;a href=&quot;#get(java.lang.Class)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="8f918371c98671b9620e0549e5bc6fc24ae0e167" translate="yes" xml:space="preserve">
          <source>This method will be invoked within the first thread that accesses the value with the &lt;a href=&quot;classvalue#get-java.lang.Class-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;classvalue#get-java.lang.Class-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메소드로 값에 액세스하는 첫 번째 스레드 내에서 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="065f3402a810e7a3015f1c73aa8b9f5e529eacd3" translate="yes" xml:space="preserve">
          <source>This method will cause subsequent invocations of &lt;a href=&quot;#checkError()&quot;&gt;&lt;code&gt;checkError()&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;false&lt;/code&gt; until another write operation fails and invokes &lt;a href=&quot;#setError()&quot;&gt;&lt;code&gt;setError()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method will cause subsequent invocations of &lt;a href=&quot;#checkError()&quot;&gt; &lt;code&gt;checkError()&lt;/code&gt; &lt;/a&gt; to return &lt;code&gt;false&lt;/code&gt; until another write operation fails and invokes &lt;a href=&quot;#setError()&quot;&gt; &lt;code&gt;setError()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b9199ee0fff41110612b8bb74fcb04c0d9c9655c" translate="yes" xml:space="preserve">
          <source>This method will cause subsequent invocations of &lt;a href=&quot;#checkError()&quot;&gt;&lt;code&gt;checkError()&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;true&lt;/code&gt; until &lt;a href=&quot;#clearError()&quot;&gt;&lt;code&gt;clearError()&lt;/code&gt;&lt;/a&gt; is invoked.</source>
          <target state="translated">This method will cause subsequent invocations of &lt;a href=&quot;#checkError()&quot;&gt; &lt;code&gt;checkError()&lt;/code&gt; &lt;/a&gt; to return &lt;code&gt;true&lt;/code&gt; until &lt;a href=&quot;#clearError()&quot;&gt; &lt;code&gt;clearError()&lt;/code&gt; &lt;/a&gt; is invoked.</target>
        </trans-unit>
        <trans-unit id="22454f54424ac0425295bb1b7c4c0c7b02e19e6d" translate="yes" xml:space="preserve">
          <source>This method will cause subsequent invocations of &lt;a href=&quot;printstream#checkError--&quot;&gt;&lt;code&gt;checkError()&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;false&lt;/code&gt; until another write operation fails and invokes &lt;a href=&quot;printstream#setError--&quot;&gt;&lt;code&gt;setError()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 다른 쓰기 조작이 실패하고 &lt;a href=&quot;printstream#setError--&quot;&gt; &lt;code&gt;setError()&lt;/code&gt; &lt;/a&gt; 호출 할 때까지 &lt;a href=&quot;printstream#checkError--&quot;&gt; &lt;code&gt;checkError()&lt;/code&gt; &lt;/a&gt; 의 후속 호출이 &lt;code&gt;false&lt;/code&gt; 를 리턴하게 합니다 .</target>
        </trans-unit>
        <trans-unit id="0f3fe52cec4ed5c62b654ad2e7e08c4f49989342" translate="yes" xml:space="preserve">
          <source>This method will cause subsequent invocations of &lt;a href=&quot;printstream#checkError--&quot;&gt;&lt;code&gt;checkError()&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;true&lt;/code&gt; until &lt;a href=&quot;printstream#clearError--&quot;&gt;&lt;code&gt;clearError()&lt;/code&gt;&lt;/a&gt; is invoked.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;printstream#checkError--&quot;&gt; &lt;code&gt;checkError()&lt;/code&gt; &lt;/a&gt; 의 후속 호출이 &lt;a href=&quot;printstream#clearError--&quot;&gt; &lt;code&gt;clearError()&lt;/code&gt; &lt;/a&gt; 가 호출 될 때까지 &lt;code&gt;true&lt;/code&gt; 를 리턴하게 합니다 .</target>
        </trans-unit>
        <trans-unit id="b48d9418c05d19aff8ec8631b1debfac763c87cf" translate="yes" xml:space="preserve">
          <source>This method will cause subsequent invocations of &lt;a href=&quot;printwriter#checkError--&quot;&gt;&lt;code&gt;checkError()&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;false&lt;/code&gt; until another write operation fails and invokes &lt;a href=&quot;printwriter#setError--&quot;&gt;&lt;code&gt;setError()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 다른 쓰기 조작이 실패하고 &lt;a href=&quot;printwriter#setError--&quot;&gt; &lt;code&gt;setError()&lt;/code&gt; &lt;/a&gt; 호출 할 때까지 &lt;a href=&quot;printwriter#checkError--&quot;&gt; &lt;code&gt;checkError()&lt;/code&gt; &lt;/a&gt; 의 후속 호출이 &lt;code&gt;false&lt;/code&gt; 를 리턴하게 합니다 .</target>
        </trans-unit>
        <trans-unit id="47f729f00024e35a9de98e956d4deb97fb2c191c" translate="yes" xml:space="preserve">
          <source>This method will cause subsequent invocations of &lt;a href=&quot;printwriter#checkError--&quot;&gt;&lt;code&gt;checkError()&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;true&lt;/code&gt; until &lt;a href=&quot;printwriter#clearError--&quot;&gt;&lt;code&gt;clearError()&lt;/code&gt;&lt;/a&gt; is invoked.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;printwriter#checkError--&quot;&gt; &lt;code&gt;checkError()&lt;/code&gt; &lt;/a&gt; 의 후속 호출이 &lt;a href=&quot;printwriter#clearError--&quot;&gt; &lt;code&gt;clearError()&lt;/code&gt; &lt;/a&gt; 가 호출 될 때까지 &lt;code&gt;true&lt;/code&gt; 를 리턴하게 합니다 .</target>
        </trans-unit>
        <trans-unit id="d4f3ee30d84b2eec94c2f48c2e18ba63a39e2104" translate="yes" xml:space="preserve">
          <source>This method will continue to return the set of options even after the channel has been closed.</source>
          <target state="translated">이 방법은 채널이 닫힌 후에도 옵션 세트를 계속 반환합니다.</target>
        </trans-unit>
        <trans-unit id="55bcb28f3b35747462d71e2c7fb1036108c5c393" translate="yes" xml:space="preserve">
          <source>This method will create a formatter based on a simple &lt;a href=&quot;#patterns&quot;&gt;pattern of letters and symbols&lt;/a&gt; as described in the class documentation. For example, &lt;code&gt;d MMM uuuu&lt;/code&gt; will format 2011-12-03 as '3 Dec 2011'.</source>
          <target state="translated">이 메소드는 클래스 문서에 설명 된대로 간단한 &lt;a href=&quot;#patterns&quot;&gt;문자 및 기호 패턴을&lt;/a&gt; 기반으로 포맷터를 작성합니다 . 예를 들어, &lt;code&gt;d MMM uuuu&lt;/code&gt; 는 2011-12-03을 '2011 년 12 월 3 일'로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="370c438905ce1a92b71c0ea98edd24464fd0bb80" translate="yes" xml:space="preserve">
          <source>This method will first search the parent class loader for the resource; if the parent is &lt;code&gt;null&lt;/code&gt; the path of the class loader built-in to the virtual machine is searched. That failing, this method will invoke &lt;a href=&quot;classloader#findResource-java.lang.String-&quot;&gt;&lt;code&gt;findResource(String)&lt;/code&gt;&lt;/a&gt; to find the resource.</source>
          <target state="translated">이 메소드는 먼저 상위 클래스 로더에서 자원을 검색합니다. 부모가 &lt;code&gt;null&lt;/code&gt; 인 경우, 가상 머신에 내장 된 클래스 로더의 경로가 검색됩니다. 실패하면이 메소드는 &lt;a href=&quot;classloader#findResource-java.lang.String-&quot;&gt; &lt;code&gt;findResource(String)&lt;/code&gt; &lt;/a&gt; 를 호출 하여 자원을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="e22bc5b12358cd9ed2b2e4b4eda7b2f13e5a5fcf" translate="yes" xml:space="preserve">
          <source>This method will initiate the initial handshake if necessary and then block until the handshake has been established.</source>
          <target state="translated">이 방법은 필요한 경우 초기 핸드 셰이크를 시작한 다음 핸드 셰이크가 설정 될 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="edb6294adacdc14d67ed18d0e218ba9ce525d429" translate="yes" xml:space="preserve">
          <source>This method will make a copy of the &lt;code&gt;protocols&lt;/code&gt; array.</source>
          <target state="translated">This method will make a copy of the &lt;code&gt;protocols&lt;/code&gt; array.</target>
        </trans-unit>
        <trans-unit id="2b6fb4cec5310ed7b8799c65e0e6a81271c9aae4" translate="yes" xml:space="preserve">
          <source>This method will modify &lt;code&gt;environment&lt;/code&gt; and save a reference to it. The caller may no longer modify it.</source>
          <target state="translated">이 방법은 &lt;code&gt;environment&lt;/code&gt; 을 수정 하고 이에 대한 참조를 저장합니다. 발신자가 더 이상 수정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a7b2abdca9a7c0af8a5c125ae4c9b4ef88001f88" translate="yes" xml:space="preserve">
          <source>This method will not cause a connection to be initiated. If the connection was not connected, or if the server did not have an error while connecting or if the server had an error but no error data was sent, this method will return null. This is the default.</source>
          <target state="translated">이 방법으로 연결이 시작되지는 않습니다. 연결이 연결되지 않았거나 연결하는 동안 서버에 오류가 없거나 서버에 오류가 있지만 오류 데이터가 전송되지 않은 경우이 메소드는 널을 리턴합니다. 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="9e7f49dd9f508918d6801e6f7eb970e438d414c6" translate="yes" xml:space="preserve">
          <source>This method will return -1 in the following three cases:</source>
          <target state="translated">이 메소드는 다음 세 가지 경우에 -1을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="edcfcea6d04841d9ed0bb5de222b4eb4d98438dc" translate="yes" xml:space="preserve">
          <source>This method will return &lt;code&gt;null&lt;/code&gt; if this thread is not blocked waiting for any object or if the object is not owned by any thread.</source>
          <target state="translated">이 메소드는 이 스레드가 객체를 기다리는 동안 차단되지 않았거나 객체가 스레드에 의해 소유되지 않은 경우 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="997d1e3c558fa4f7ecd051b0c70ae4a27ce69f5b" translate="yes" xml:space="preserve">
          <source>This method will return &lt;code&gt;null&lt;/code&gt; in the following three cases:</source>
          <target state="translated">이 메서드는 다음 세 가지 경우에 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a5ec1fabdbb804e695d1ce3fd6145d6dab2fb51a" translate="yes" xml:space="preserve">
          <source>This method will return a new array each time it is invoked.</source>
          <target state="translated">This method will return a new array each time it is invoked.</target>
        </trans-unit>
        <trans-unit id="81c178e68a361bc411f4196a67d165e4297f65b0" translate="yes" xml:space="preserve">
          <source>This method will return a result whether or not the chronology supports the field.</source>
          <target state="translated">이 메소드는 연대기가 필드를 지원하는지 여부에 대한 결과를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="cf72858f6d5ab0f6806f6ba29dc39dac2862dcd4" translate="yes" xml:space="preserve">
          <source>This method will return an instance of the first implementation class that it is able to load and instantiate successfully from the list of class names collected from the configuration files. This method uses the calling thread's context classloader to find the configuration files and to load the implementation class.</source>
          <target state="translated">이 메소드는 구성 파일에서 수집 한 클래스 이름 목록에서로드하고 인스턴스화 할 수있는 첫 번째 구현 클래스의 인스턴스를 리턴합니다. 이 메소드는 호출 스레드의 컨텍스트 클래스 로더를 사용하여 구성 파일을 찾고 구현 클래스를로드합니다.</target>
        </trans-unit>
        <trans-unit id="2615fdcca092c11fa409598bc7bda6f6e205909a" translate="yes" xml:space="preserve">
          <source>This method will return the value of the given column as a Java object. The type of the Java object will be the default Java object type corresponding to the column's SQL type, following the mapping for built-in types specified in the JDBC specification. If the value is an SQL &lt;code&gt;NULL&lt;/code&gt;, the driver returns a Java &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">This method will return the value of the given column as a Java object. The type of the Java object will be the default Java object type corresponding to the column's SQL type, following the mapping for built-in types specified in the JDBC specification. If the value is an SQL &lt;code&gt;NULL&lt;/code&gt; , the driver returns a Java &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77916780ed5810d879fe3448844aecd946429733" translate="yes" xml:space="preserve">
          <source>This method will throw a SecurityException if this KeyboardFocusManager is not the current KeyboardFocusManager for the calling thread's context.</source>
          <target state="translated">This method will throw a SecurityException if this KeyboardFocusManager is not the current KeyboardFocusManager for the calling thread's context.</target>
        </trans-unit>
        <trans-unit id="2104f1f8d688dfeb0fbe8a4840b83144d434d7e2" translate="yes" xml:space="preserve">
          <source>This method will throw an exception if the embedded XMLReader does not support the http://xml.org/sax/features/namespace-prefixes property.</source>
          <target state="translated">This method will throw an exception if the embedded XMLReader does not support the http://xml.org/sax/features/namespace-prefixes property.</target>
        </trans-unit>
        <trans-unit id="fde84c2cc31ae616f235f67595910493fd5e6ff7" translate="yes" xml:space="preserve">
          <source>This method will write the XMLEvent as per the XML 1.0 specification as Unicode characters.</source>
          <target state="translated">This method will write the XMLEvent as per the XML 1.0 specification as Unicode characters.</target>
        </trans-unit>
        <trans-unit id="0903dfad72f7b14768ca738564b858a8232b2a2a" translate="yes" xml:space="preserve">
          <source>This method will write the XMLEvent as per the XML 1.0 specification as Unicode characters. No indentation or whitespace should be outputted. Any user defined event type SHALL have this method called when being written to on an output stream. Built in Event types MUST implement this method, but implementations MAY choose not call these methods for optimizations reasons when writing out built in Events to an output stream. The output generated MUST be equivalent in terms of the infoset expressed.</source>
          <target state="translated">This method will write the XMLEvent as per the XML 1.0 specification as Unicode characters. No indentation or whitespace should be outputted. Any user defined event type SHALL have this method called when being written to on an output stream. Built in Event types MUST implement this method, but implementations MAY choose not call these methods for optimizations reasons when writing out built in Events to an output stream. The output generated MUST be equivalent in terms of the infoset expressed.</target>
        </trans-unit>
        <trans-unit id="2e6a88a1697d659dd03ef858745190d32430b79b" translate="yes" xml:space="preserve">
          <source>This method will, on a best-effort basis, throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt; if it is detected that the mapping function modifies this map during computation.</source>
          <target state="translated">This method will, on a best-effort basis, throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt; if it is detected that the mapping function modifies this map during computation.</target>
        </trans-unit>
        <trans-unit id="329207ef3690975966cf7c1a6e45dba05515072b" translate="yes" xml:space="preserve">
          <source>This method will, on a best-effort basis, throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt; if it is detected that the remapping function modifies this map during computation.</source>
          <target state="translated">This method will, on a best-effort basis, throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt; if it is detected that the remapping function modifies this map during computation.</target>
        </trans-unit>
        <trans-unit id="ec0eadf05a0e92e62d96d711909d4c94970935db" translate="yes" xml:space="preserve">
          <source>This method will, on a best-effort basis, throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt; if the mapping function modified this map during computation.</source>
          <target state="translated">This method will, on a best-effort basis, throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt; if the mapping function modified this map during computation.</target>
        </trans-unit>
        <trans-unit id="bfd4e216057b237e9478152fb1ddabc4011db77b" translate="yes" xml:space="preserve">
          <source>This method will, on a best-effort basis, throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt; if the remapping function modified this map during computation.</source>
          <target state="translated">This method will, on a best-effort basis, throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt; if the remapping function modified this map during computation.</target>
        </trans-unit>
        <trans-unit id="4745699bb1fc28fd4328d1c1b8f7762c47b14737" translate="yes" xml:space="preserve">
          <source>This method works as if by invoking the two-argument &lt;a href=&quot;#split(java.lang.CharSequence,int)&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt; method with the given input sequence and a limit argument of zero. Trailing empty strings are therefore not included in the resulting array.</source>
          <target state="translated">This method works as if by invoking the two-argument &lt;a href=&quot;#split(java.lang.CharSequence,int)&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt; method with the given input sequence and a limit argument of zero. Trailing empty strings are therefore not included in the resulting array.</target>
        </trans-unit>
        <trans-unit id="9c7bfba08591b4e513b8ee0f8477c80ff1d3d034" translate="yes" xml:space="preserve">
          <source>This method works as if by invoking the two-argument &lt;a href=&quot;#split(java.lang.String,int)&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt; method with the given expression and a limit argument of zero. Trailing empty strings are therefore not included in the resulting array.</source>
          <target state="translated">This method works as if by invoking the two-argument &lt;a href=&quot;#split(java.lang.String,int)&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt; method with the given expression and a limit argument of zero. Trailing empty strings are therefore not included in the resulting array.</target>
        </trans-unit>
        <trans-unit id="a22fb6cb28a1c2ffe0e2c125002bf45c2ce42483" translate="yes" xml:space="preserve">
          <source>This method works as if by invoking the two-argument &lt;a href=&quot;pattern#split-java.lang.CharSequence-int-&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt; method with the given input sequence and a limit argument of zero. Trailing empty strings are therefore not included in the resulting array.</source>
          <target state="translated">이 메소드 는 주어진 입력 시퀀스와 한계 인수가 0 인 두 인수 &lt;a href=&quot;pattern#split-java.lang.CharSequence-int-&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것처럼 작동 합니다. 따라서 후행 빈 문자열은 결과 배열에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0bb6cb3b94903416fb88ff0f1bfde615391fee91" translate="yes" xml:space="preserve">
          <source>This method works as if by invoking the two-argument &lt;a href=&quot;string#split-java.lang.String-int-&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt; method with the given expression and a limit argument of zero. Trailing empty strings are therefore not included in the resulting array.</source>
          <target state="translated">이 메소드 는 주어진 표현식과 한계 인수가 0 인 두 인수 &lt;a href=&quot;string#split-java.lang.String-int-&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것처럼 작동 합니다. 따라서 후행 빈 문자열은 결과 배열에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3b98c5be79fe3631e10feeff93134f4ae1b95df3" translate="yes" xml:space="preserve">
          <source>This method works as if invoking it were equivalent to evaluating the expression:</source>
          <target state="translated">이 메소드는 호출하는 것이 표현식을 평가하는 것과 동일하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="65d4a309ef4865cdfcb05e8dbda74d28c952021a" translate="yes" xml:space="preserve">
          <source>This method works by invoking the &lt;a href=&quot;#decodeLoop(java.nio.ByteBuffer,java.nio.CharBuffer)&quot;&gt;&lt;code&gt;decodeLoop&lt;/code&gt;&lt;/a&gt; method, interpreting its results, handling error conditions, and reinvoking it as necessary.</source>
          <target state="translated">This method works by invoking the &lt;a href=&quot;#decodeLoop(java.nio.ByteBuffer,java.nio.CharBuffer)&quot;&gt; &lt;code&gt;decodeLoop&lt;/code&gt; &lt;/a&gt; method, interpreting its results, handling error conditions, and reinvoking it as necessary.</target>
        </trans-unit>
        <trans-unit id="5c63a3c096b7218e8a7395893d5c876338241ca3" translate="yes" xml:space="preserve">
          <source>This method works by invoking the &lt;a href=&quot;#encodeLoop(java.nio.CharBuffer,java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;encodeLoop&lt;/code&gt;&lt;/a&gt; method, interpreting its results, handling error conditions, and reinvoking it as necessary.</source>
          <target state="translated">This method works by invoking the &lt;a href=&quot;#encodeLoop(java.nio.CharBuffer,java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;encodeLoop&lt;/code&gt; &lt;/a&gt; method, interpreting its results, handling error conditions, and reinvoking it as necessary.</target>
        </trans-unit>
        <trans-unit id="7454290376119065d709322b3967277568221e6a" translate="yes" xml:space="preserve">
          <source>This method works by invoking the &lt;a href=&quot;charsetdecoder#decodeLoop-java.nio.ByteBuffer-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;decodeLoop&lt;/code&gt;&lt;/a&gt; method, interpreting its results, handling error conditions, and reinvoking it as necessary.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;charsetdecoder#decodeLoop-java.nio.ByteBuffer-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;decodeLoop&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하고 결과를 해석하고 오류 조건을 처리 한 후 필요에 따라 다시 호출하여 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="a2868d5c75c3ba78e01fe4c6fd94f3e0f922600f" translate="yes" xml:space="preserve">
          <source>This method works by invoking the &lt;a href=&quot;charsetencoder#encodeLoop-java.nio.CharBuffer-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;encodeLoop&lt;/code&gt;&lt;/a&gt; method, interpreting its results, handling error conditions, and reinvoking it as necessary.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;charsetencoder#encodeLoop-java.nio.CharBuffer-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;encodeLoop&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하고 결과를 해석하고 오류 조건을 처리 한 후 필요에 따라 다시 호출하여 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="4d784ff8c8c4cecffeedf42b30d31236e5ee5f6e" translate="yes" xml:space="preserve">
          <source>This method works exactly as specified by &lt;a href=&quot;#resolve(java.lang.module.ModuleFinder,java.util.List,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt; except that the graph of resolved modules is augmented with modules induced by the service-use dependence relation.</source>
          <target state="translated">This method works exactly as specified by &lt;a href=&quot;#resolve(java.lang.module.ModuleFinder,java.util.List,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; &lt;/a&gt; except that the graph of resolved modules is augmented with modules induced by the service-use dependence relation.</target>
        </trans-unit>
        <trans-unit id="d90930708f0fd81e79a6092832746b4cb55bac7d" translate="yes" xml:space="preserve">
          <source>This method works in a similar manner to &lt;a href=&quot;files#move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption...)&quot;&gt;&lt;code&gt;move&lt;/code&gt;&lt;/a&gt; method when the &lt;a href=&quot;standardcopyoption#ATOMIC_MOVE&quot;&gt;&lt;code&gt;ATOMIC_MOVE&lt;/code&gt;&lt;/a&gt; option is specified. That is, this method moves a file as an atomic file system operation. If the &lt;code&gt;srcpath&lt;/code&gt; parameter is an &lt;a href=&quot;path#isAbsolute()&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; path then it locates the source file. If the parameter is a relative path then it is located relative to this open directory. If the &lt;code&gt;targetpath&lt;/code&gt; parameter is absolute then it locates the target file (the &lt;code&gt;targetdir&lt;/code&gt; parameter is ignored). If the parameter is a relative path it is located relative to the open directory identified by the &lt;code&gt;targetdir&lt;/code&gt; parameter. In all cases, if the target file exists then it is implementation specific if it is replaced or this method fails.</source>
          <target state="translated">This method works in a similar manner to &lt;a href=&quot;files#move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption...)&quot;&gt; &lt;code&gt;move&lt;/code&gt; &lt;/a&gt; method when the &lt;a href=&quot;standardcopyoption#ATOMIC_MOVE&quot;&gt; &lt;code&gt;ATOMIC_MOVE&lt;/code&gt; &lt;/a&gt; option is specified. That is, this method moves a file as an atomic file system operation. If the &lt;code&gt;srcpath&lt;/code&gt; parameter is an &lt;a href=&quot;path#isAbsolute()&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt; path then it locates the source file. If the parameter is a relative path then it is located relative to this open directory. If the &lt;code&gt;targetpath&lt;/code&gt; parameter is absolute then it locates the target file (the &lt;code&gt;targetdir&lt;/code&gt; parameter is ignored). If the parameter is a relative path it is located relative to the open directory identified by the &lt;code&gt;targetdir&lt;/code&gt; parameter. In all cases, if the target file exists then it is implementation specific if it is replaced or this method fails.</target>
        </trans-unit>
        <trans-unit id="37a8d53b4f6a1321f049b1ed691bbc3e4062f584" translate="yes" xml:space="preserve">
          <source>This method works in a similar manner to &lt;a href=&quot;files#move-java.nio.file.Path-java.nio.file.Path-java.nio.file.CopyOption...-&quot;&gt;&lt;code&gt;move&lt;/code&gt;&lt;/a&gt; method when the &lt;a href=&quot;standardcopyoption#ATOMIC_MOVE&quot;&gt;&lt;code&gt;ATOMIC_MOVE&lt;/code&gt;&lt;/a&gt; option is specified. That is, this method moves a file as an atomic file system operation. If the &lt;code&gt;srcpath&lt;/code&gt; parameter is an &lt;a href=&quot;path#isAbsolute--&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; path then it locates the source file. If the parameter is a relative path then it is located relative to this open directory. If the &lt;code&gt;targetpath&lt;/code&gt; parameter is absolute then it locates the target file (the &lt;code&gt;targetdir&lt;/code&gt; parameter is ignored). If the parameter is a relative path it is located relative to the open directory identified by the &lt;code&gt;targetdir&lt;/code&gt; parameter. In all cases, if the target file exists then it is implementation specific if it is replaced or this method fails.</source>
          <target state="translated">이 방법은 유사한 방식으로 작동하는 &lt;a href=&quot;files#move-java.nio.file.Path-java.nio.file.Path-java.nio.file.CopyOption...-&quot;&gt; &lt;code&gt;move&lt;/code&gt; &lt;/a&gt; 때 방법을 &lt;a href=&quot;standardcopyoption#ATOMIC_MOVE&quot;&gt; &lt;code&gt;ATOMIC_MOVE&lt;/code&gt; 의&lt;/a&gt; 옵션을 지정합니다. 즉,이 방법은 파일을 원자 파일 시스템 조작으로 이동시킵니다. 경우] &lt;code&gt;srcpath&lt;/code&gt; 의 파라미터가있다 &lt;a href=&quot;path#isAbsolute--&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt; 경로 그때는 소스 파일을 찾아서. 매개 변수가 상대 경로이면이 열린 디렉토리에 상대적으로 위치합니다. 경우] &lt;code&gt;targetpath&lt;/code&gt; 파라미터 절대 다음 대상 파일을 찾으면된다합니다 ( &lt;code&gt;targetdir&lt;/code&gt; 파라미터는 무시된다). 매개 변수가 상대 경로 인 경우 &lt;code&gt;targetdir&lt;/code&gt; 에 의해 식별 된 열린 디렉토리에 상대적으로 위치합니다.매개 변수. 모든 경우에, 대상 파일이 존재하는 경우, 대체되거나이 메소드가 실패하면 구현 고유의 파일입니다.</target>
        </trans-unit>
        <trans-unit id="cf84a48c5fa93e6aff5d42e1ebc857046b5b7dea" translate="yes" xml:space="preserve">
          <source>This method works in exactly the manner specified by &lt;a href=&quot;#createTempDirectory(java.nio.file.Path,java.lang.String,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;createTempDirectory(Path,String,FileAttribute[])&lt;/code&gt;&lt;/a&gt; method for the case that the &lt;code&gt;dir&lt;/code&gt; parameter is the temporary-file directory.</source>
          <target state="translated">This method works in exactly the manner specified by &lt;a href=&quot;#createTempDirectory(java.nio.file.Path,java.lang.String,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;createTempDirectory(Path,String,FileAttribute[])&lt;/code&gt; &lt;/a&gt; method for the case that the &lt;code&gt;dir&lt;/code&gt; parameter is the temporary-file directory.</target>
        </trans-unit>
        <trans-unit id="6582bf91ac2daba1bab0f7e3e1f2b7ae6e47e42e" translate="yes" xml:space="preserve">
          <source>This method works in exactly the manner specified by &lt;a href=&quot;files#createTempDirectory-java.nio.file.Path-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createTempDirectory(Path,String,FileAttribute[])&lt;/code&gt;&lt;/a&gt; method for the case that the &lt;code&gt;dir&lt;/code&gt; parameter is the temporary-file directory.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;dir&lt;/code&gt; 매개 변수가 임시 파일 디렉토리 인 경우 &lt;a href=&quot;files#createTempDirectory-java.nio.file.Path-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createTempDirectory(Path,String,FileAttribute[])&lt;/code&gt; &lt;/a&gt; 메소드에 의해 지정된 방식으로 정확하게 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="e13213fdbb94f86959556f4b6dd1697a486abd83" translate="yes" xml:space="preserve">
          <source>This method works in exactly the manner specified by the &lt;a href=&quot;#createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;createTempFile(Path,String,String,FileAttribute[])&lt;/code&gt;&lt;/a&gt; method for the case that the &lt;code&gt;dir&lt;/code&gt; parameter is the temporary-file directory.</source>
          <target state="translated">This method works in exactly the manner specified by the &lt;a href=&quot;#createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;createTempFile(Path,String,String,FileAttribute[])&lt;/code&gt; &lt;/a&gt; method for the case that the &lt;code&gt;dir&lt;/code&gt; parameter is the temporary-file directory.</target>
        </trans-unit>
        <trans-unit id="cfb8b1f167ebd230d3d00c4cbc7ac7f5b4a612c2" translate="yes" xml:space="preserve">
          <source>This method works in exactly the manner specified by the &lt;a href=&quot;files#createTempFile-java.nio.file.Path-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createTempFile(Path,String,String,FileAttribute[])&lt;/code&gt;&lt;/a&gt; method for the case that the &lt;code&gt;dir&lt;/code&gt; parameter is the temporary-file directory.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;dir&lt;/code&gt; 매개 변수가 임시 파일 디렉토리 인 경우 &lt;a href=&quot;files#createTempFile-java.nio.file.Path-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createTempFile(Path,String,String,FileAttribute[])&lt;/code&gt; &lt;/a&gt; 메소드에 의해 지정된 방식으로 정확하게 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="a08c4e74d200e463e93467aaff8a6b3d1d062db5" translate="yes" xml:space="preserve">
          <source>This method works in exactly the manner specified by the &lt;a href=&quot;files#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;Files.newByteChannel&lt;/code&gt;&lt;/a&gt; method for the case that the &lt;code&gt;path&lt;/code&gt; parameter is an &lt;a href=&quot;path#isAbsolute()&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; path. When the parameter is a relative path then the file to open or create is relative to this open directory. In addition to the options defined by the &lt;code&gt;Files.newByteChannel&lt;/code&gt; method, the &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option may be used to ensure that this method fails if the file is a symbolic link.</source>
          <target state="translated">This method works in exactly the manner specified by the &lt;a href=&quot;files#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;Files.newByteChannel&lt;/code&gt; &lt;/a&gt; method for the case that the &lt;code&gt;path&lt;/code&gt; parameter is an &lt;a href=&quot;path#isAbsolute()&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt; path. When the parameter is a relative path then the file to open or create is relative to this open directory. In addition to the options defined by the &lt;code&gt;Files.newByteChannel&lt;/code&gt; method, the &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt; option may be used to ensure that this method fails if the file is a symbolic link.</target>
        </trans-unit>
        <trans-unit id="1ea541f8c42c220b9d86951a4fa49aad31c612a1" translate="yes" xml:space="preserve">
          <source>This method works in exactly the manner specified by the &lt;a href=&quot;files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;Files.newByteChannel&lt;/code&gt;&lt;/a&gt; method for the case that the &lt;code&gt;path&lt;/code&gt; parameter is an &lt;a href=&quot;path#isAbsolute--&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; path. When the parameter is a relative path then the file to open or create is relative to this open directory. In addition to the options defined by the &lt;code&gt;Files.newByteChannel&lt;/code&gt; method, the &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option may be used to ensure that this method fails if the file is a symbolic link.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;path&lt;/code&gt; 매개 변수가 &lt;a href=&quot;path#isAbsolute--&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt; 경로 인 경우 &lt;a href=&quot;files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;Files.newByteChannel&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 방식으로 정확하게 작동 합니다. 매개 변수가 상대 경로 인 경우 열거 나 작성할 파일은이 열린 디렉토리에 상대적입니다. &lt;code&gt;Files.newByteChannel&lt;/code&gt; 메소드에 의해 정의 된 옵션 외에도 , 파일이 기호 링크 인 경우 &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt; 옵션을 사용하여이 메소드가 실패하는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89b46aba2e424eb0b252dd5a697f58c67a2c407c" translate="yes" xml:space="preserve">
          <source>This method works in exactly the manner specified by the &lt;a href=&quot;files#newDirectoryStream(java.nio.file.Path)&quot;&gt;&lt;code&gt;newDirectoryStream&lt;/code&gt;&lt;/a&gt; method for the case that the &lt;code&gt;path&lt;/code&gt; parameter is an &lt;a href=&quot;path#isAbsolute()&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; path. When the parameter is a relative path then the directory to open is relative to this open directory. The &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option may be used to ensure that this method fails if the file is a symbolic link.</source>
          <target state="translated">This method works in exactly the manner specified by the &lt;a href=&quot;files#newDirectoryStream(java.nio.file.Path)&quot;&gt; &lt;code&gt;newDirectoryStream&lt;/code&gt; &lt;/a&gt; method for the case that the &lt;code&gt;path&lt;/code&gt; parameter is an &lt;a href=&quot;path#isAbsolute()&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt; path. When the parameter is a relative path then the directory to open is relative to this open directory. The &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt; option may be used to ensure that this method fails if the file is a symbolic link.</target>
        </trans-unit>
        <trans-unit id="9f83f0d9238b18b32a0d1cb59bc36f251647ecf6" translate="yes" xml:space="preserve">
          <source>This method works in exactly the manner specified by the &lt;a href=&quot;files#newDirectoryStream-java.nio.file.Path-&quot;&gt;&lt;code&gt;newDirectoryStream&lt;/code&gt;&lt;/a&gt; method for the case that the &lt;code&gt;path&lt;/code&gt; parameter is an &lt;a href=&quot;path#isAbsolute--&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; path. When the parameter is a relative path then the directory to open is relative to this open directory. The &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option may be used to ensure that this method fails if the file is a symbolic link.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;path&lt;/code&gt; 매개 변수가 &lt;a href=&quot;path#isAbsolute--&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt; 경로 인 경우 &lt;a href=&quot;files#newDirectoryStream-java.nio.file.Path-&quot;&gt; &lt;code&gt;newDirectoryStream&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 방식으로 정확하게 작동 합니다. 매개 변수가 상대 경로 인 경우 열려는 디렉토리는이 열려있는 디렉토리에 상대적입니다. &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; 의&lt;/a&gt; 옵션은 파일이 심볼릭 링크의 경우이 방법이 실패 할 수 있도록하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e432834144fae1484f6a70547ea6de4d575fb25" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;#read(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;read(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method, except that bytes are read starting at the given file position rather than at the channel's current position. This method does not modify this channel's position. If the given position is greater than the file's current size then no bytes are read.</source>
          <target state="translated">This method works in the same manner as the &lt;a href=&quot;#read(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;read(ByteBuffer)&lt;/code&gt; &lt;/a&gt; method, except that bytes are read starting at the given file position rather than at the channel's current position. This method does not modify this channel's position. If the given position is greater than the file's current size then no bytes are read.</target>
        </trans-unit>
        <trans-unit id="b62cdc56cb118b93f9bb35d084e637aa9283384f" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method, except that bytes are written starting at the given file position rather than at the channel's current position. This method does not modify this channel's position. If the given position is greater than the file's current size then the file will be grown to accommodate the new bytes; the values of any bytes between the previous end-of-file and the newly-written bytes are unspecified.</source>
          <target state="translated">This method works in the same manner as the &lt;a href=&quot;#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write(ByteBuffer)&lt;/code&gt; &lt;/a&gt; method, except that bytes are written starting at the given file position rather than at the channel's current position. This method does not modify this channel's position. If the given position is greater than the file's current size then the file will be grown to accommodate the new bytes; the values of any bytes between the previous end-of-file and the newly-written bytes are unspecified.</target>
        </trans-unit>
        <trans-unit id="67dc3ad2915c39337c55dc136607d18d773e3520" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#read(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;AsynchronousByteChannel.read(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method, except that bytes are read starting at the given file position. If the given file position is greater than the file's size at the time that the read is attempted then no bytes are read.</source>
          <target state="translated">This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#read(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;AsynchronousByteChannel.read(ByteBuffer)&lt;/code&gt; &lt;/a&gt; method, except that bytes are read starting at the given file position. If the given file position is greater than the file's size at the time that the read is attempted then no bytes are read.</target>
        </trans-unit>
        <trans-unit id="b3ac9087d9506c7d9a56f66b67c132f3d82d84bb" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#read(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;AsynchronousByteChannel.read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method, except that bytes are read starting at the given file position. If the given file position is greater than the file's size at the time that the read is attempted then no bytes are read.</source>
          <target state="translated">This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#read(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;AsynchronousByteChannel.read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt; method, except that bytes are read starting at the given file position. If the given file position is greater than the file's size at the time that the read is attempted then no bytes are read.</target>
        </trans-unit>
        <trans-unit id="418ab9ef88ce864f3d7a73b1fc1d345d0f0046f2" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;AsynchronousByteChannel.read(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method, except that bytes are read starting at the given file position. If the given file position is greater than the file's size at the time that the read is attempted then no bytes are read.</source>
          <target state="translated">이 메소드 는 지정된 파일 위치에서 시작하여 바이트를 읽는다는 점을 제외하고 &lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;AsynchronousByteChannel.read(ByteBuffer)&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 방식으로 작동 합니다. 지정된 파일 위치가 읽기를 시도 할 때 파일 크기보다 크면 바이트를 읽지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2136f114f7d0bd16461ba147740ed385feec2a2a" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;AsynchronousByteChannel.read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method, except that bytes are read starting at the given file position. If the given file position is greater than the file's size at the time that the read is attempted then no bytes are read.</source>
          <target state="translated">이 메소드 는 지정된 파일 위치에서 시작하여 바이트를 읽는다는 점을 제외하고 &lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;AsynchronousByteChannel.read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 방식으로 작동 합니다. 지정된 파일 위치가 읽기를 시도 할 때 파일 크기보다 크면 바이트를 읽지 않습니다.</target>
        </trans-unit>
        <trans-unit id="aa22914a4c9fc8d1df4ce0450680ecdffbdd4914" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;AsynchronousByteChannel.write(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method, except that bytes are written starting at the given file position. If the given position is greater than the file's size, at the time that the write is attempted, then the file will be grown to accommodate the new bytes; the values of any bytes between the previous end-of-file and the newly-written bytes are unspecified.</source>
          <target state="translated">This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;AsynchronousByteChannel.write(ByteBuffer)&lt;/code&gt; &lt;/a&gt; method, except that bytes are written starting at the given file position. If the given position is greater than the file's size, at the time that the write is attempted, then the file will be grown to accommodate the new bytes; the values of any bytes between the previous end-of-file and the newly-written bytes are unspecified.</target>
        </trans-unit>
        <trans-unit id="843c4adcddc3123750a11221933bcbbdea1ef36a" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#write(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;AsynchronousByteChannel.write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method, except that bytes are written starting at the given file position. If the given position is greater than the file's size, at the time that the write is attempted, then the file will be grown to accommodate the new bytes; the values of any bytes between the previous end-of-file and the newly-written bytes are unspecified.</source>
          <target state="translated">This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#write(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;AsynchronousByteChannel.write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt; method, except that bytes are written starting at the given file position. If the given position is greater than the file's size, at the time that the write is attempted, then the file will be grown to accommodate the new bytes; the values of any bytes between the previous end-of-file and the newly-written bytes are unspecified.</target>
        </trans-unit>
        <trans-unit id="6e2548085e2dbea138a9ac8061c89ac77484eb8c" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;AsynchronousByteChannel.write(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method, except that bytes are written starting at the given file position. If the given position is greater than the file's size, at the time that the write is attempted, then the file will be grown to accommodate the new bytes; the values of any bytes between the previous end-of-file and the newly-written bytes are unspecified.</source>
          <target state="translated">이 메소드는 바이트가 주어진 파일 위치에서 시작하여 작성된다는 점을 제외하고 &lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;AsynchronousByteChannel.write(ByteBuffer)&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 방식으로 작동 합니다. 주어진 위치가 파일의 크기보다 큰 경우, 쓰기가 시도 될 때 파일은 새로운 바이트를 수용하도록 확장됩니다. 이전 파일 끝과 새로 쓴 바이트 사이의 바이트 값은 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fdb689127866a66bd7f98916fdf141ecf0832dab" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;AsynchronousByteChannel.write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method, except that bytes are written starting at the given file position. If the given position is greater than the file's size, at the time that the write is attempted, then the file will be grown to accommodate the new bytes; the values of any bytes between the previous end-of-file and the newly-written bytes are unspecified.</source>
          <target state="translated">이 메소드는 바이트가 주어진 파일 위치에서 시작하여 작성된다는 점을 제외하고 &lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;AsynchronousByteChannel.write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 방식으로 작동 합니다. 주어진 위치가 파일의 크기보다 큰 경우, 쓰기가 시도 될 때 파일은 새로운 바이트를 수용하도록 확장됩니다. 이전 파일 끝과 새로 쓴 바이트 사이의 바이트 값은 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9219a92c97d7960e93769f3d0f297e4fdcf261dd" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method, except that bytes are read starting at the given file position rather than at the channel's current position. This method does not modify this channel's position. If the given position is greater than the file's current size then no bytes are read.</source>
          <target state="translated">이 메소드 는 채널의 현재 위치가 아닌 지정된 파일 위치에서 시작하여 바이트를 읽는다는 점을 제외하고 &lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read(ByteBuffer)&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 방식으로 작동합니다 . 이 방법은이 채널의 위치를 ​​수정하지 않습니다. 주어진 위치가 파일의 현재 크기보다 크면 바이트를 읽지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ee607bed83b2db68d329cfe1f02aaaec99d3d49f" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method, except that bytes are written starting at the given file position rather than at the channel's current position. This method does not modify this channel's position. If the given position is greater than the file's current size then the file will be grown to accommodate the new bytes; the values of any bytes between the previous end-of-file and the newly-written bytes are unspecified.</source>
          <target state="translated">이 메소드는 바이트가 채널의 현재 위치가 아닌 지정된 파일 위치에서 시작한다는 점을 제외하고 &lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write(ByteBuffer)&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 방식으로 작동합니다 . 이 방법은이 채널의 위치를 ​​수정하지 않습니다. 주어진 위치가 파일의 현재 크기보다 크면 파일은 새로운 바이트를 수용하도록 확장됩니다. 이전 파일 끝과 새로 쓴 바이트 사이의 바이트 값은 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5a6797714dcf8b94ee71e509f2545915d1c70289" translate="yes" xml:space="preserve">
          <source>This method writes out the preamble associated with the XML encoding if it has not been written already and then writes out all of the values that been written to the stream since the last time &lt;code&gt;flush&lt;/code&gt; was called.</source>
          <target state="translated">This method writes out the preamble associated with the XML encoding if it has not been written already and then writes out all of the values that been written to the stream since the last time &lt;code&gt;flush&lt;/code&gt; was called.</target>
        </trans-unit>
        <trans-unit id="6bbf2c6adcc9220204f66129d37a79f36955e554" translate="yes" xml:space="preserve">
          <source>This method writes out the preamble associated with the XML encoding if it has not been written already and then writes out all of the values that been written to the stream since the last time &lt;code&gt;flush&lt;/code&gt; was called. After flushing, all internal references to the values that were written to this stream are cleared.</source>
          <target state="translated">이 메소드는 XML 인코딩과 연관된 프리앰블을 아직 기록하지 않은 경우 기록한 다음 마지막 &lt;code&gt;flush&lt;/code&gt; 가 호출 된 이후 스트림에 기록 된 모든 값을 기록합니다 . 플러시 후이 스트림에 기록 된 값에 대한 모든 내부 참조가 지워집니다.</target>
        </trans-unit>
        <trans-unit id="3995c807f0f5016de7a11c506b78ebf306e3bda7" translate="yes" xml:space="preserve">
          <source>This method writes the value of the attribute from a given buffer as a sequence of bytes. The size of the value to transfer is &lt;code&gt;r&lt;/code&gt;, where &lt;code&gt;r&lt;/code&gt; is the number of bytes remaining in the buffer, that is &lt;code&gt;src.remaining()&lt;/code&gt;. The sequence of bytes is transferred from the buffer starting at index &lt;code&gt;p&lt;/code&gt;, where &lt;code&gt;p&lt;/code&gt; is the buffer's position. Upon return, the buffer's position will be equal to &lt;code&gt;
 p + n&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the number of bytes transferred; its limit will not have changed.</source>
          <target state="translated">This method writes the value of the attribute from a given buffer as a sequence of bytes. The size of the value to transfer is &lt;code&gt;r&lt;/code&gt; , where &lt;code&gt;r&lt;/code&gt; is the number of bytes remaining in the buffer, that is &lt;code&gt;src.remaining()&lt;/code&gt; . The sequence of bytes is transferred from the buffer starting at index &lt;code&gt;p&lt;/code&gt; , where &lt;code&gt;p&lt;/code&gt; is the buffer's position. Upon return, the buffer's position will be equal to &lt;code&gt; p + n&lt;/code&gt; , where &lt;code&gt;n&lt;/code&gt; is the number of bytes transferred; its limit will not have changed.</target>
        </trans-unit>
        <trans-unit id="94823e0e57cb0baf233d121072c13efb2a18234f" translate="yes" xml:space="preserve">
          <source>This method writes the value of the attribute from a given buffer as a sequence of bytes. The size of the value to transfer is &lt;code&gt;r&lt;/code&gt;, where &lt;code&gt;r&lt;/code&gt; is the number of bytes remaining in the buffer, that is &lt;code&gt;src.remaining()&lt;/code&gt;. The sequence of bytes is transferred from the buffer starting at index &lt;code&gt;p&lt;/code&gt;, where &lt;code&gt;p&lt;/code&gt; is the buffer's position. Upon return, the buffer's position will be equal to &lt;code&gt;p + n&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the number of bytes transferred; its limit will not have changed.</source>
          <target state="translated">이 메소드는 주어진 버퍼에서 속성 값을 바이트 시퀀스로 기록합니다. 전송할 값의 크기는 &lt;code&gt;r&lt;/code&gt; 입니다 . 여기서 &lt;code&gt;r&lt;/code&gt; 은 버퍼에 남아있는 바이트 수, 즉 &lt;code&gt;src.remaining()&lt;/code&gt; 입니다. 바이트 순서는 인덱스 &lt;code&gt;p&lt;/code&gt; 에서 시작하여 버퍼에서 전송됩니다. 여기서 &lt;code&gt;p&lt;/code&gt; 는 버퍼의 위치입니다. 돌아 왔을 때, 버퍼의 위치는 &lt;code&gt;p + n&lt;/code&gt; 과 같습니다 . 여기서 &lt;code&gt;n&lt;/code&gt; 은 전송 된 바이트 수입니다. 한도는 변경되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="da517adfbc7e829cb5588f72bb505999479eed5c" translate="yes" xml:space="preserve">
          <source>This method, for a VarHandle &lt;code&gt;vh&lt;/code&gt; and access mode &lt;code&gt;{access-mode}&lt;/code&gt;, returns a method handle that is equivalent to method handle &lt;code&gt;bmh&lt;/code&gt; in the following code (though it may be more efficient):</source>
          <target state="translated">This method, for a VarHandle &lt;code&gt;vh&lt;/code&gt; and access mode &lt;code&gt;{access-mode}&lt;/code&gt; , returns a method handle that is equivalent to method handle &lt;code&gt;bmh&lt;/code&gt; in the following code (though it may be more efficient):</target>
        </trans-unit>
        <trans-unit id="56b93905116b5e40819214f438ff8f8dfdd36565" translate="yes" xml:space="preserve">
          <source>This method, which is specified in the &lt;a href=&quot;abstractinterruptiblechannel&quot;&gt;&lt;code&gt;AbstractInterruptibleChannel&lt;/code&gt;&lt;/a&gt; class and is invoked by the &lt;a href=&quot;../channel#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method, in turn invokes the &lt;a href=&quot;#implCloseSelectableChannel()&quot;&gt;&lt;code&gt;implCloseSelectableChannel&lt;/code&gt;&lt;/a&gt; method in order to perform the actual work of closing this channel. It then cancels all of this channel's keys.</source>
          <target state="translated">This method, which is specified in the &lt;a href=&quot;abstractinterruptiblechannel&quot;&gt; &lt;code&gt;AbstractInterruptibleChannel&lt;/code&gt; &lt;/a&gt; class and is invoked by the &lt;a href=&quot;../channel#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; method, in turn invokes the &lt;a href=&quot;#implCloseSelectableChannel()&quot;&gt; &lt;code&gt;implCloseSelectableChannel&lt;/code&gt; &lt;/a&gt; method in order to perform the actual work of closing this channel. It then cancels all of this channel's keys.</target>
        </trans-unit>
        <trans-unit id="38d65d304e01b25e0003846872bfad7b7661d75f" translate="yes" xml:space="preserve">
          <source>This method, which is specified in the &lt;a href=&quot;abstractinterruptiblechannel&quot;&gt;&lt;code&gt;AbstractInterruptibleChannel&lt;/code&gt;&lt;/a&gt; class and is invoked by the &lt;a href=&quot;../channel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method, in turn invokes the &lt;a href=&quot;abstractselectablechannel#implCloseSelectableChannel--&quot;&gt;&lt;code&gt;implCloseSelectableChannel&lt;/code&gt;&lt;/a&gt; method in order to perform the actual work of closing this channel. It then cancels all of this channel's keys.</source>
          <target state="translated">&lt;a href=&quot;abstractinterruptiblechannel&quot;&gt; &lt;code&gt;AbstractInterruptibleChannel&lt;/code&gt; &lt;/a&gt; 클래스에 지정되고 &lt;a href=&quot;../channel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 메소드에 의해 호출되는이 메소드는이 채널을 닫는 실제 작업을 수행하기 위해 &lt;a href=&quot;abstractselectablechannel#implCloseSelectableChannel--&quot;&gt; &lt;code&gt;implCloseSelectableChannel&lt;/code&gt; &lt;/a&gt; 메소드를 호출합니다 . 그런 다음이 채널의 모든 키를 취소합니다.</target>
        </trans-unit>
        <trans-unit id="d20b805db6fa22325907dcee606ccf0ea41b9eeb" translate="yes" xml:space="preserve">
          <source>This method, which simply returns this &lt;code&gt;BigDecimal&lt;/code&gt; is included for symmetry with the unary minus method &lt;a href=&quot;#negate()&quot;&gt;&lt;code&gt;negate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method, which simply returns this &lt;code&gt;BigDecimal&lt;/code&gt; is included for symmetry with the unary minus method &lt;a href=&quot;#negate()&quot;&gt; &lt;code&gt;negate()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="af2efb0256661192d4849878e10c0e265dec4210" translate="yes" xml:space="preserve">
          <source>This method, which simply returns this &lt;code&gt;BigDecimal&lt;/code&gt; is included for symmetry with the unary minus method &lt;a href=&quot;bigdecimal#negate--&quot;&gt;&lt;code&gt;negate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;code&gt;BigDecimal&lt;/code&gt; 을 리턴하는이 메소드 는 단항 빼기 메소드 &lt;a href=&quot;bigdecimal#negate--&quot;&gt; &lt;code&gt;negate()&lt;/code&gt; &lt;/a&gt; 와의 대칭에 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="e9378f1ab56e018a71aa81af9bef43ae951ea75f" translate="yes" xml:space="preserve">
          <source>This might be confusing for the code calling &lt;code&gt;createMBean()&lt;/code&gt; or &lt;code&gt;registerMBean()&lt;/code&gt;, as such code might assume that MBean registration has failed when such an exception is raised. Therefore it is recommended that implementations of &lt;code&gt;postRegister&lt;/code&gt; do not throw Runtime Exceptions or Errors if it can be avoided.</source>
          <target state="translated">&lt;code&gt;createMBean()&lt;/code&gt; 또는 &lt;code&gt;registerMBean()&lt;/code&gt; 호출하는 코드에서는 혼동 될 수 있습니다. 이러한 코드는 예외가 발생할 때 MBean 등록이 실패했다고 가정 할 수 있습니다. 따라서 &lt;code&gt;postRegister&lt;/code&gt; 구현을 피할 수있는 경우 런타임 예외 또는 오류가 발생하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d54e9cf4654f9242161858e0d36bcf06ab7a33d3" translate="yes" xml:space="preserve">
          <source>This might be confusing for the code calling &lt;code&gt;unregisterMBean()&lt;/code&gt;, as it might assume that MBean deregistration has failed. Therefore it is recommended that implementations of &lt;code&gt;postDeregister&lt;/code&gt; do not throw Runtime Exceptions or Errors if it can be avoided.</source>
          <target state="translated">MBean 등록 해제가 실패했다고 가정 할 수 있으므로 &lt;code&gt;unregisterMBean()&lt;/code&gt; 호출하는 코드에서는 혼동 될 수 있습니다 . 따라서 &lt;code&gt;postDeregister&lt;/code&gt; 구현시 런타임 예외 또는 오류가 발생하지 않도록하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="336b1605ee24a5053590abde120e729abeca1ace" translate="yes" xml:space="preserve">
          <source>This might seem to be equivalent, if not better, but in fact it introduced a large nonuniformity because of the bias in the rounding of floating-point numbers: it was three times as likely that the low-order bit of the significand would be 0 than that it would be 1! This nonuniformity probably doesn't matter much in practice, but we strive for perfection.]</source>
          <target state="translated">이것은 더 나은 것은 아니지만 동등하게 보일지 모르지만 실제로는 부동 소수점 숫자의 반올림으로 인해 큰 불균일성이 발생했습니다. 유효성의 하위 비트가 0 일 가능성의 세 배였습니다 그것보다 1이 될 것입니다! 이 불균일성은 실제로는 그다지 중요하지 않지만 완벽을 위해 노력합니다.]</target>
        </trans-unit>
        <trans-unit id="e8c8d7884f9527b04b2c04f8b6fb7fcd86eae98c" translate="yes" xml:space="preserve">
          <source>This might seem to be equivalent, if not better, but in fact it introduced a slight nonuniformity because of the bias in the rounding of floating-point numbers: it was slightly more likely that the low-order bit of the significand would be 0 than that it would be 1.]</source>
          <target state="translated">이것은 더 나은 것은 아니지만 동등한 것으로 보이지만 실제로는 부동 소수점 숫자의 반올림으로 인해 약간의 불균일성이 발생했습니다. 1이 될 것입니다.]</target>
        </trans-unit>
        <trans-unit id="4914cb9a3b2c27c6795eb89a4251d4db2771492a" translate="yes" xml:space="preserve">
          <source>This minimal extension to LayoutManager is intended for tool providers who wish to the creation of constraint-based layouts. It does not yet provide full, general support for custom constraint-based layout managers.</source>
          <target state="translated">This minimal extension to LayoutManager is intended for tool providers who wish to the creation of constraint-based layouts. It does not yet provide full, general support for custom constraint-based layout managers.</target>
        </trans-unit>
        <trans-unit id="3b01ed584a2dc375ad282592b09e6028ee4c8a4b" translate="yes" xml:space="preserve">
          <source>This mode is a combination of &lt;code&gt;ON&lt;/code&gt; and &lt;code&gt;INSERT&lt;/code&gt;, specifying that data can be dropped on existing items, or in insert locations as specified by &lt;code&gt;INSERT&lt;/code&gt;.</source>
          <target state="translated">This mode is a combination of &lt;code&gt;ON&lt;/code&gt; and &lt;code&gt;INSERT&lt;/code&gt; , specifying that data can be dropped on existing items, or in insert locations as specified by &lt;code&gt;INSERT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8531d4abc3c94f2e9a894591cf6f03d2e737d36" translate="yes" xml:space="preserve">
          <source>This mode is a combination of &lt;code&gt;ON&lt;/code&gt; and &lt;code&gt;INSERT_COLS&lt;/code&gt;, specifying that data can be dropped on existing items, or as insert columns as specified by &lt;code&gt;INSERT_COLS&lt;/code&gt;.</source>
          <target state="translated">This mode is a combination of &lt;code&gt;ON&lt;/code&gt; and &lt;code&gt;INSERT_COLS&lt;/code&gt; , specifying that data can be dropped on existing items, or as insert columns as specified by &lt;code&gt;INSERT_COLS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af9d3a62137ff2ec2cdfadc4bf8e96210ff18487" translate="yes" xml:space="preserve">
          <source>This mode is a combination of &lt;code&gt;ON&lt;/code&gt; and &lt;code&gt;INSERT_ROWS&lt;/code&gt;, specifying that data can be dropped on existing items, or as insert rows as specified by &lt;code&gt;INSERT_ROWS&lt;/code&gt;.</source>
          <target state="translated">This mode is a combination of &lt;code&gt;ON&lt;/code&gt; and &lt;code&gt;INSERT_ROWS&lt;/code&gt; , specifying that data can be dropped on existing items, or as insert rows as specified by &lt;code&gt;INSERT_ROWS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="64c5d3ed1cc2c54fb443703ad3d73e26fe276dbd" translate="yes" xml:space="preserve">
          <source>This mode uses the very simple method of redrawing the entire contents of the scrollpane each time it is scrolled.</source>
          <target state="translated">This mode uses the very simple method of redrawing the entire contents of the scrollpane each time it is scrolled.</target>
        </trans-unit>
        <trans-unit id="34c95dc2dd092f726b7f0397d4fbaaf94324bfc4" translate="yes" xml:space="preserve">
          <source>This mode uses the very simple method of redrawing the entire contents of the scrollpane each time it is scrolled. This was the default behavior in Swing 1.0 and Swing 1.1. Either of the other two options will provide better performance in most cases.</source>
          <target state="translated">This mode uses the very simple method of redrawing the entire contents of the scrollpane each time it is scrolled. This was the default behavior in Swing 1.0 and Swing 1.1. Either of the other two options will provide better performance in most cases.</target>
        </trans-unit>
        <trans-unit id="43331a16c7987c95d27cc9a2c701a70f85ecfb45" translate="yes" xml:space="preserve">
          <source>This model does require that a &lt;a href=&quot;../../../../java.base/javax/security/auth/login/package-summary&quot;&gt;&lt;code&gt;JAAS login&lt;/code&gt;&lt;/a&gt; be performed in order to authenticate and populate a Subject that the JGSS mechanism can later utilize. However, applications have the ability to relax this restriction by means of a system property: &lt;code&gt;javax.security.auth.useSubjectCredsOnly&lt;/code&gt;. By default this system property will be assumed to be &lt;code&gt;true&lt;/code&gt; (even when it is unset) indicating that providers must only use the credentials that are present in the current Subject. However, if this property is explicitly set to false by the application, then it indicates that the provider is free to use any credentials cache of its choice. Such a credential cache might be a disk cache, an in-memory cache, or even just the current Subject itself.</source>
          <target state="translated">This model does require that a &lt;a href=&quot;../../../../java.base/javax/security/auth/login/package-summary&quot;&gt; &lt;code&gt;JAAS login&lt;/code&gt; &lt;/a&gt; be performed in order to authenticate and populate a Subject that the JGSS mechanism can later utilize. However, applications have the ability to relax this restriction by means of a system property: &lt;code&gt;javax.security.auth.useSubjectCredsOnly&lt;/code&gt; . By default this system property will be assumed to be &lt;code&gt;true&lt;/code&gt; (even when it is unset) indicating that providers must only use the credentials that are present in the current Subject. However, if this property is explicitly set to false by the application, then it indicates that the provider is free to use any credentials cache of its choice. Such a credential cache might be a disk cache, an in-memory cache, or even just the current Subject itself.</target>
        </trans-unit>
        <trans-unit id="672e5bd342fe15e4fa94cb8c2a84562c28aed233" translate="yes" xml:space="preserve">
          <source>This model has the advantage that credential management is simple and predictable from the applications point of view. An application, given the right permissions, can purge the credentials in the Subject or renew them using standard Java API's. If it purged the credentials, it would be sure that the JGSS mechanism would fail, or if it renewed a time based credential it would be sure that a JGSS mechanism would succeed.</source>
          <target state="translated">This model has the advantage that credential management is simple and predictable from the applications point of view. An application, given the right permissions, can purge the credentials in the Subject or renew them using standard Java API's. If it purged the credentials, it would be sure that the JGSS mechanism would fail, or if it renewed a time based credential it would be sure that a JGSS mechanism would succeed.</target>
        </trans-unit>
        <trans-unit id="3478c1f3167187c76b95cfdb596e67ad6be1d868" translate="yes" xml:space="preserve">
          <source>This model inherits a &lt;code&gt;ChangeListener&lt;/code&gt;. The &lt;code&gt;ChangeListener&lt;/code&gt;s are notified whenever the model's &lt;code&gt;value&lt;/code&gt; or &lt;code&gt;list&lt;/code&gt; properties changes.</source>
          <target state="translated">This model inherits a &lt;code&gt;ChangeListener&lt;/code&gt; . The &lt;code&gt;ChangeListener&lt;/code&gt; s are notified whenever the model's &lt;code&gt;value&lt;/code&gt; or &lt;code&gt;list&lt;/code&gt; properties changes.</target>
        </trans-unit>
        <trans-unit id="0e9d966d5717ed51cca6bfad7813e5c150168eff" translate="yes" xml:space="preserve">
          <source>This model inherits a &lt;code&gt;ChangeListener&lt;/code&gt;. The &lt;code&gt;ChangeListeners&lt;/code&gt; are notified whenever the model's &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;stepSize&lt;/code&gt;, &lt;code&gt;minimum&lt;/code&gt;, or &lt;code&gt;maximum&lt;/code&gt; properties changes.</source>
          <target state="translated">This model inherits a &lt;code&gt;ChangeListener&lt;/code&gt; . The &lt;code&gt;ChangeListeners&lt;/code&gt; are notified whenever the model's &lt;code&gt;value&lt;/code&gt; , &lt;code&gt;stepSize&lt;/code&gt; , &lt;code&gt;minimum&lt;/code&gt; , or &lt;code&gt;maximum&lt;/code&gt; properties changes.</target>
        </trans-unit>
        <trans-unit id="eea83d2dcba6d5d41474a68e4233dd38f5661511" translate="yes" xml:space="preserve">
          <source>This model inherits a &lt;code&gt;ChangeListener&lt;/code&gt;. The &lt;code&gt;ChangeListeners&lt;/code&gt; are notified whenever the models &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;calendarField&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, or &lt;code&gt;end&lt;/code&gt; properties changes.</source>
          <target state="translated">This model inherits a &lt;code&gt;ChangeListener&lt;/code&gt; . The &lt;code&gt;ChangeListeners&lt;/code&gt; are notified whenever the models &lt;code&gt;value&lt;/code&gt; , &lt;code&gt;calendarField&lt;/code&gt; , &lt;code&gt;start&lt;/code&gt; , or &lt;code&gt;end&lt;/code&gt; properties changes.</target>
        </trans-unit>
        <trans-unit id="8ec500ac908a0653d68498da9f71b753f087f5f2" translate="yes" xml:space="preserve">
          <source>This model is used for regular buttons, as well as check boxes and radio buttons, which are special kinds of buttons. In practice, a button's UI takes the responsibility of calling methods on its model to manage the state, as detailed below:</source>
          <target state="translated">This model is used for regular buttons, as well as check boxes and radio buttons, which are special kinds of buttons. In practice, a button's UI takes the responsibility of calling methods on its model to manage the state, as detailed below:</target>
        </trans-unit>
        <trans-unit id="d1f0e61bd29453de806ab4243a1ce40c7ba06e3f" translate="yes" xml:space="preserve">
          <source>This modifier does not correspond to a module flag in the binary form of a module declaration (&lt;code&gt;module-info.class&lt;/code&gt;).</source>
          <target state="translated">This modifier does not correspond to a module flag in the binary form of a module declaration ( &lt;code&gt;module-info.class&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bd714d597a2a0b3bcfc763eb30fff569a765c7fa" translate="yes" xml:space="preserve">
          <source>This module also contains GSS-API mechanisms including Kerberos v5 and SPNEGO.</source>
          <target state="translated">This module also contains GSS-API mechanisms including Kerberos v5 and SPNEGO.</target>
        </trans-unit>
        <trans-unit id="85300456ba149c0b29adb46a02adce8de7a38d6b" translate="yes" xml:space="preserve">
          <source>This module also contains SASL mechanisms including DIGEST-MD5, CRAM-MD5, and NTLM.</source>
          <target state="translated">This module also contains SASL mechanisms including DIGEST-MD5, CRAM-MD5, and NTLM.</target>
        </trans-unit>
        <trans-unit id="55428f39481b5e08e446dbadc911be21b2f5cbcf" translate="yes" xml:space="preserve">
          <source>This module is upgradeable.</source>
          <target state="translated">This module is upgradeable.</target>
        </trans-unit>
        <trans-unit id="550426d4a823a96fcb3087792bac0b6e7958e4c1" translate="yes" xml:space="preserve">
          <source>This module provides support for Java Programming Language 'snippet' evaluating tools, such as Read-Eval-Print Loops (REPLs), including the &lt;em&gt;&lt;a id=&quot;jshell&quot;&gt;jshell&lt;/a&gt;&lt;/em&gt; tool.</source>
          <target state="translated">This module provides support for Java Programming Language 'snippet' evaluating tools, such as Read-Eval-Print Loops (REPLs), including the &lt;em&gt;&lt;a id=&quot;jshell&quot;&gt;jshell&lt;/a&gt;&lt;/em&gt; tool.</target>
        </trans-unit>
        <trans-unit id="fe463d9da07759808a59a7ba718ef19f336d5e27" translate="yes" xml:space="preserve">
          <source>This module provides the &lt;a href=&quot;../java.management/javax/management/remote/jmxconnectorprovider&quot;&gt;&lt;code&gt;JMXConnectorProvider&lt;/code&gt;&lt;/a&gt; service, which creates JMX connector clients using the RMI protocol. Instances of &lt;code&gt;JMXConnector&lt;/code&gt; can be obtained via the &lt;a href=&quot;../java.management/javax/management/remote/jmxconnectorfactory#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt;&lt;code&gt;JMXConnectorFactory.newJMXConnector&lt;/code&gt;&lt;/a&gt; factory method. It also provides the &lt;a href=&quot;../java.management/javax/management/remote/jmxconnectorserverprovider&quot;&gt;&lt;code&gt;JMXConnectorServerProvider&lt;/code&gt;&lt;/a&gt; service, which creates JMX connector servers using the RMI protocol. Instances of &lt;code&gt;JMXConnectorServer&lt;/code&gt; can be obtained via the &lt;a href=&quot;../java.management/javax/management/remote/jmxconnectorserverfactory#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt;&lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt;&lt;/a&gt; factory method.</source>
          <target state="translated">This module provides the &lt;a href=&quot;../java.management/javax/management/remote/jmxconnectorprovider&quot;&gt; &lt;code&gt;JMXConnectorProvider&lt;/code&gt; &lt;/a&gt; service, which creates JMX connector clients using the RMI protocol. Instances of &lt;code&gt;JMXConnector&lt;/code&gt; can be obtained via the &lt;a href=&quot;../java.management/javax/management/remote/jmxconnectorfactory#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt; &lt;code&gt;JMXConnectorFactory.newJMXConnector&lt;/code&gt; &lt;/a&gt; factory method. It also provides the &lt;a href=&quot;../java.management/javax/management/remote/jmxconnectorserverprovider&quot;&gt; &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; &lt;/a&gt; service, which creates JMX connector servers using the RMI protocol. Instances of &lt;code&gt;JMXConnectorServer&lt;/code&gt; can be obtained via the &lt;a href=&quot;../java.management/javax/management/remote/jmxconnectorserverfactory#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt; &lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt; &lt;/a&gt; factory method.</target>
        </trans-unit>
        <trans-unit id="f8a7a37673084ed30687510ea92a8a1f51eb5a04" translate="yes" xml:space="preserve">
          <source>This module's version, or an empty &lt;code&gt;Optional&lt;/code&gt; if the module does not have a version or the version is &lt;a href=&quot;moduledescriptor.version#parse(java.lang.String)&quot;&gt;unparseable&lt;/a&gt;</source>
          <target state="translated">This module's version, or an empty &lt;code&gt;Optional&lt;/code&gt; if the module does not have a version or the version is &lt;a href=&quot;moduledescriptor.version#parse(java.lang.String)&quot;&gt;unparseable&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28ec2481fd35a60681fb797a739b051f340bf847" translate="yes" xml:space="preserve">
          <source>This month-day will be passed to the formatter to produce a string.</source>
          <target state="translated">이 달은 문자열을 생성하기 위해 포맷터로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="df65508af749147b20d426ca514d6026b66b885b" translate="yes" xml:space="preserve">
          <source>This moves the &lt;code&gt;JComponent&lt;/code&gt; and repaints the damaged areas.</source>
          <target state="translated">This moves the &lt;code&gt;JComponent&lt;/code&gt; and repaints the damaged areas.</target>
        </trans-unit>
        <trans-unit id="a69b212000ba0a1bd05ed46b95cd13dc75a4427d" translate="yes" xml:space="preserve">
          <source>This must be a positive integer that identifies the particular interface and scope as understood by the system. Usually, the numeric values can be determined through administration tools on the system. Each interface may have multiple values, one for each scope. If the scope is unspecified, then the default value used is zero.</source>
          <target state="translated">시스템이 이해하는 특정 인터페이스 및 범위를 식별하는 양의 정수 여야합니다. 일반적으로 숫자 값은 시스템의 관리 도구를 통해 결정될 수 있습니다. 각 인터페이스에는 범위마다 하나씩 여러 값이있을 수 있습니다. 범위가 지정되지 않은 경우 사용되는 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="04f19103171bb230328568d99520d154dd3e52e4" translate="yes" xml:space="preserve">
          <source>This must be implemented by subclasses of Permission, as they are the only ones that can impose semantics on a Permission object.</source>
          <target state="translated">이것은 Permission 객체에 의미를 부여 할 수있는 유일한 클래스이므로 Permission의 서브 클래스에 의해 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="d7172b3fdd5b2d1981b828edd32ceb3e2bf787a2" translate="yes" xml:space="preserve">
          <source>This must be the exact string that is returned by &lt;a href=&quot;networkinterface#getName()&quot;&gt;&lt;code&gt;NetworkInterface.getName()&lt;/code&gt;&lt;/a&gt; for the particular interface in question. When an Inet6Address is created in this way, the numeric scope-id is determined at the time the object is created by querying the relevant NetworkInterface.</source>
          <target state="translated">This must be the exact string that is returned by &lt;a href=&quot;networkinterface#getName()&quot;&gt; &lt;code&gt;NetworkInterface.getName()&lt;/code&gt; &lt;/a&gt; for the particular interface in question. When an Inet6Address is created in this way, the numeric scope-id is determined at the time the object is created by querying the relevant NetworkInterface.</target>
        </trans-unit>
        <trans-unit id="438254d585668962ffe1d950b1670de89316768b" translate="yes" xml:space="preserve">
          <source>This must be the exact string that is returned by &lt;a href=&quot;networkinterface#getName--&quot;&gt;&lt;code&gt;NetworkInterface.getName()&lt;/code&gt;&lt;/a&gt; for the particular interface in question. When an Inet6Address is created in this way, the numeric scope-id is determined at the time the object is created by querying the relevant NetworkInterface.</source>
          <target state="translated">해당 특정 인터페이스에 대해 &lt;a href=&quot;networkinterface#getName--&quot;&gt; &lt;code&gt;NetworkInterface.getName()&lt;/code&gt; &lt;/a&gt; 에 의해 리턴되는 정확한 문자열이어야합니다 . 이 방법으로 Inet6Address를 만들면 관련 NetworkInterface를 쿼리하여 개체를 만들 때 숫자 scope-id가 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="9d7e4e1ab2b880787c672f5670ec92fd289ae4f7" translate="yes" xml:space="preserve">
          <source>This new &lt;code&gt;CachedRowSet&lt;/code&gt; object will have its properties set to the default properties of a &lt;code&gt;BaseRowSet&lt;/code&gt; object, and, in addition, it will have an &lt;code&gt;RIOptimisticProvider&lt;/code&gt; object as its synchronization provider. &lt;code&gt;RIOptimisticProvider&lt;/code&gt;, one of two &lt;code&gt;SyncProvider&lt;/code&gt; implementations included in the RI, is the default provider that the &lt;code&gt;SyncFactory&lt;/code&gt; singleton will supply when no synchronization provider is specified.</source>
          <target state="translated">This new &lt;code&gt;CachedRowSet&lt;/code&gt; object will have its properties set to the default properties of a &lt;code&gt;BaseRowSet&lt;/code&gt; object, and, in addition, it will have an &lt;code&gt;RIOptimisticProvider&lt;/code&gt; object as its synchronization provider. &lt;code&gt;RIOptimisticProvider&lt;/code&gt; , one of two &lt;code&gt;SyncProvider&lt;/code&gt; implementations included in the RI, is the default provider that the &lt;code&gt;SyncFactory&lt;/code&gt; singleton will supply when no synchronization provider is specified.</target>
        </trans-unit>
        <trans-unit id="610d276794da11e21cc26f42372402aef0a47247" translate="yes" xml:space="preserve">
          <source>This new behavior can be turned off, and the old formatting restored, by specifying a property in the &lt;a href=&quot;logmanager#getProperty(java.lang.String)&quot;&gt;logging configuration&lt;/a&gt;. If &lt;code&gt;LogManager.getLogManager().getProperty(
    this.getClass().getName()+&quot;.useInstant&quot;)&lt;/code&gt; is &lt;code&gt;&quot;false&quot;&lt;/code&gt; or &lt;code&gt;&quot;0&quot;&lt;/code&gt;, the old formatting will be restored.</source>
          <target state="translated">This new behavior can be turned off, and the old formatting restored, by specifying a property in the &lt;a href=&quot;logmanager#getProperty(java.lang.String)&quot;&gt;logging configuration&lt;/a&gt;. If &lt;code&gt;LogManager.getLogManager().getProperty( this.getClass().getName()+&quot;.useInstant&quot;)&lt;/code&gt; is &lt;code&gt;&quot;false&quot;&lt;/code&gt; or &lt;code&gt;&quot;0&quot;&lt;/code&gt; , the old formatting will be restored.</target>
        </trans-unit>
        <trans-unit id="c449e6fc67060b977c87bc7eba4910e405eb7032" translate="yes" xml:space="preserve">
          <source>This new pseudorandom-number generator is used thereafter for all calls to this method and is used nowhere else.</source>
          <target state="translated">이 새로운 의사 난수 생성기는 이후이 메소드에 대한 모든 호출에 사용되며 다른 곳에서는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9c02ee81fb9b238ae20c25f183eaf2e6e0d91401" translate="yes" xml:space="preserve">
          <source>This normalizes the years and months units, leaving the days unit unchanged. The months unit is adjusted to have an absolute value less than 11, with the years unit being adjusted to compensate. For example, a period of &quot;1 Year and 15 months&quot; will be normalized to &quot;2 years and 3 months&quot;.</source>
          <target state="translated">이것은 년과 월 단위를 정규화하고 일 단위는 변경하지 않습니다. 월 단위는 11 미만의 절대 값을 갖도록 조정되며 년 단위는 보정하도록 조정됩니다. 예를 들어 &quot;1 년 15 개월&quot;기간은 &quot;2 년 3 개월&quot;로 정규화됩니다.</target>
        </trans-unit>
        <trans-unit id="f32239acec71f23a3648ec31debd569805010001" translate="yes" xml:space="preserve">
          <source>This normalizes the years and months units, leaving the days unit unchanged. The months unit is adjusted to have an absolute value less than 12, with the years unit being adjusted to compensate. For example, a period of &quot;1 Year and 15 months&quot; will be normalized to &quot;2 years and 3 months&quot;.</source>
          <target state="translated">This normalizes the years and months units, leaving the days unit unchanged. The months unit is adjusted to have an absolute value less than 12, with the years unit being adjusted to compensate. For example, a period of &quot;1 Year and 15 months&quot; will be normalized to &quot;2 years and 3 months&quot;.</target>
        </trans-unit>
        <trans-unit id="a6d59fc415d1ea0a63c23130c4d50721f8e3b046" translate="yes" xml:space="preserve">
          <source>This notification will be emitted when the memory usage of a memory pool is greater than or equal to its &lt;a href=&quot;memorypoolmxbean#CollectionThreshold&quot;&gt; collection usage threshold&lt;/a&gt; after the Java virtual machine has expended effort in recycling unused objects in that memory pool.</source>
          <target state="translated">Java 가상 머신이 해당 메모리 풀에서 사용되지 않는 오브젝트를 재활용하는 데 노력을 기울인 후 메모리 풀의 메모리 사용량이 &lt;a href=&quot;memorypoolmxbean#CollectionThreshold&quot;&gt;콜렉션 사용량 임계 값&lt;/a&gt; 이상인 경우이 알림 이 발행됩니다.</target>
        </trans-unit>
        <trans-unit id="0a57b8162b18d42e492dc1dc2b4b075556527f18" translate="yes" xml:space="preserve">
          <source>This notification will be emitted when the memory usage of a memory pool is increased and has reached or exceeded its &lt;a href=&quot;memorypoolmxbean#UsageThreshold&quot;&gt; usage threshold&lt;/a&gt; value. Subsequent crossing of the usage threshold value does not cause further notification until the memory usage has returned to become less than the usage threshold value.</source>
          <target state="translated">이 알림은 메모리 풀의 메모리 사용량이 증가하고 &lt;a href=&quot;memorypoolmxbean#UsageThreshold&quot;&gt;사용량 임계&lt;/a&gt; 값에 도달하거나 초과하면 발생 합니다 . 이후에 사용 임계 값을 초과해도 메모리 사용이 사용 임계 값보다 작아 질 때까지 추가 알림이 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5c75f46fd5b5682704648d10104cd4d35072f008" translate="yes" xml:space="preserve">
          <source>This number of documents attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">이 문서 수 속성 값과 &lt;code&gt;object&lt;/code&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="1d414da6ffde7bce6ec2a682cea696a1fb21152b" translate="yes" xml:space="preserve">
          <source>This number of intervening jobs attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">이 개입 작업 수 속성 값과 &lt;code&gt;object&lt;/code&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="c975ed78d38b34ff292997aa770e8afc80f98970" translate="yes" xml:space="preserve">
          <source>This number up attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">이 숫자 업 속성 값과 &lt;code&gt;object&lt;/code&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="4a0218e7fb4f50bb8de50aed21bfb52b65a7709c" translate="yes" xml:space="preserve">
          <source>This number up supported attribute's members and &lt;code&gt;object&lt;/code&gt;'s members are the same.</source>
          <target state="translated">이 지원되는 속성의 멤버와 &lt;code&gt;object&lt;/code&gt; 의 멤버는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="4a66f64fd858be9aa293ec75d8e49a1a263eb7cc" translate="yes" xml:space="preserve">
          <source>This object</source>
          <target state="translated">이 개체</target>
        </trans-unit>
        <trans-unit id="37ddce3004803747d8b4eeb4fd29edb2d74c9923" translate="yes" xml:space="preserve">
          <source>This object (which is already a string!)</source>
          <target state="translated">This object (which is already a string!)</target>
        </trans-unit>
        <trans-unit id="c525a27749e67173595a6249d7ff51a90d7e9905" translate="yes" xml:space="preserve">
          <source>This object (which is already a string!) is itself returned.</source>
          <target state="translated">이 객체 (이미 문자열 임)가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="899b9bd82bfd7e08a4fe64b7443908e77c494fa3" translate="yes" xml:space="preserve">
          <source>This object is not used internally by the drawing machinery of the &lt;code&gt;JTable&lt;/code&gt;; identifiers may be set in the &lt;code&gt;TableColumn&lt;/code&gt; as an optional way to tag and locate table columns.</source>
          <target state="translated">This object is not used internally by the drawing machinery of the &lt;code&gt;JTable&lt;/code&gt; ; identifiers may be set in the &lt;code&gt;TableColumn&lt;/code&gt; as an optional way to tag and locate table columns.</target>
        </trans-unit>
        <trans-unit id="add38b861960fdf44129ea4b0d4847f166c4cfdf" translate="yes" xml:space="preserve">
          <source>This object is not used internally by the drawing machinery of the &lt;code&gt;JTable&lt;/code&gt;; identifiers may be set in the &lt;code&gt;TableColumn&lt;/code&gt; as an optional way to tag and locate table columns. The table package does not modify or invoke any methods in these identifier objects other than the &lt;code&gt;equals&lt;/code&gt; method which is used in the &lt;code&gt;getColumnIndex()&lt;/code&gt; method in the &lt;code&gt;DefaultTableColumnModel&lt;/code&gt;.</source>
          <target state="translated">This object is not used internally by the drawing machinery of the &lt;code&gt;JTable&lt;/code&gt; ; identifiers may be set in the &lt;code&gt;TableColumn&lt;/code&gt; as an optional way to tag and locate table columns. The table package does not modify or invoke any methods in these identifier objects other than the &lt;code&gt;equals&lt;/code&gt; method which is used in the &lt;code&gt;getColumnIndex()&lt;/code&gt; method in the &lt;code&gt;DefaultTableColumnModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9adb36ceb763ae4a292da81dcfe8ce0f5a409ec0" translate="yes" xml:space="preserve">
          <source>This object needs to know the Relation Service expected to handle the relation. So it has to know the MBean Server where the Relation Service is registered.</source>
          <target state="translated">이 개체는 관계를 처리 할 것으로 예상되는 관계 서비스를 알아야합니다. 따라서 관계 서비스가 등록 된 MBean 서버를 알아야합니다.</target>
        </trans-unit>
        <trans-unit id="d6dc1b92ed6ab45eb848e7ba27548120b13b3637" translate="yes" xml:space="preserve">
          <source>This object represents a set of constraints that can be checked/ enforced against an XML document.</source>
          <target state="translated">This object represents a set of constraints that can be checked/ enforced against an XML document.</target>
        </trans-unit>
        <trans-unit id="bc9b220ed374a130f3e4dc2725ea527f11bdc81b" translate="yes" xml:space="preserve">
          <source>This object's protocol (getLocation().getProtocol()) must be equal to</source>
          <target state="translated">이 객체의 프로토콜 (getLocation (). getProtocol ())은</target>
        </trans-unit>
        <trans-unit id="81ae2fb150449b6c9b6803ea3c391efc06fd6a91" translate="yes" xml:space="preserve">
          <source>This object.</source>
          <target state="translated">이 객체.</target>
        </trans-unit>
        <trans-unit id="8238c12bc966286f9ebaf86a9a53378f498dd187" translate="yes" xml:space="preserve">
          <source>This obtains a chronology based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;Chronology&lt;/code&gt;.</source>
          <target state="translated">지정된 시간에 따라 연대기를 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;Chronology&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="287698e1a835eb0ac9ae3bbfadc46d1e5e7f050f" translate="yes" xml:space="preserve">
          <source>This obtains a date in the Hijrah calendar system based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;HijrahDate&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 Hijrah 일정 시스템에서 날짜를 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;HijrahDate&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="0d38e5c4260a892ffe699a9892b9fbf69b62aa72" translate="yes" xml:space="preserve">
          <source>This obtains a date in the Japanese calendar system based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;JapaneseDate&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 일본어 달력 시스템에서 날짜를 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;JapaneseDate&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="cf55c9ddc36374789f950113e62c9eba93629679" translate="yes" xml:space="preserve">
          <source>This obtains a date in the Minguo calendar system based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;MinguoDate&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 Minguo 일정 시스템에서 날짜를 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;MinguoDate&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="211270c5c60d8302e3c4e1e0bd5f3db31a768790" translate="yes" xml:space="preserve">
          <source>This obtains a date in the Thai Buddhist calendar system based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ThaiBuddhistDate&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 태국 불교 달력 시스템의 날짜를 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="d63d938408c738d7497bbdbd8bc18bbb2d57c1f5" translate="yes" xml:space="preserve">
          <source>This obtains a date in this chronology based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ChronoLocalDate&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로이 연대기의 날짜를 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="3cb73ff77f8180b5f5b71cdaa26c8a4b69324bb8" translate="yes" xml:space="preserve">
          <source>This obtains a date-time in this chronology based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ChronoLocalDateTime&lt;/code&gt;.</source>
          <target state="translated">지정된 시간에 따라이 연대기의 날짜-시간을 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="1a841677746e1dcbc730487e0f048036907a65a1" translate="yes" xml:space="preserve">
          <source>This obtains a day-of-week based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;DayOfWeek&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 요일을 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 나타내는 변환 &lt;code&gt;DayOfWeek&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56f59ecd54b7544d299a158b780196d483fc88b4" translate="yes" xml:space="preserve">
          <source>This obtains a duration based on the specified amount. A &lt;code&gt;TemporalAmount&lt;/code&gt; represents an amount of time, which may be date-based or time-based, which this factory extracts to a duration.</source>
          <target state="translated">지정된 양을 기준으로 지속 시간을 얻습니다. &lt;code&gt;TemporalAmount&lt;/code&gt; 는 이 공장은 추출 시간에 날짜 기반 또는 시간 기반이 될 수 있습니다 시간의 양을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="744b9378dcec8913127823d474e8ab2211625767" translate="yes" xml:space="preserve">
          <source>This obtains a local date based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ChronoLocalDate&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 현지 날짜를 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="f336f4d854c716810eee21b19d13c14e911a1473" translate="yes" xml:space="preserve">
          <source>This obtains a local date based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 현지 날짜를 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;LocalDate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b66ecc75e8f7fb3d4ee7fb3204291e7480a804e" translate="yes" xml:space="preserve">
          <source>This obtains a local date-time based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ChronoLocalDateTime&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 현지 날짜-시간을 가져옵니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="8a06a7013d88b4e8e0ba5da28075494a3d12c153" translate="yes" xml:space="preserve">
          <source>This obtains a local date-time based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;LocalDateTime&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 현지 날짜-시간을 가져옵니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;LocalDateTime&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="bd21b3dab9e6c5958fa6db61b3447f15b5516c16" translate="yes" xml:space="preserve">
          <source>This obtains a local time based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;LocalTime&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 현지 시간을 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타내는 &lt;code&gt;LocalTime&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99522942282d6b253092e37f4f95749ad2309ce9" translate="yes" xml:space="preserve">
          <source>This obtains a month based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;Month&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 한 달을 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타내는 &lt;code&gt;Month&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f62737fb99090237f99074647deead6b4e72d895" translate="yes" xml:space="preserve">
          <source>This obtains a month-day based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;MonthDay&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 월-일을 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;MonthDay&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8dab7d66d9f1c3b1052ec6fb3c9a7c1f94bd0e7" translate="yes" xml:space="preserve">
          <source>This obtains a period based on the specified amount. A &lt;code&gt;TemporalAmount&lt;/code&gt; represents an amount of time, which may be date-based or time-based, which this factory extracts to a &lt;code&gt;Period&lt;/code&gt;.</source>
          <target state="translated">지정된 금액을 기준으로 기간을 얻습니다. &lt;code&gt;TemporalAmount&lt;/code&gt; 는 이 공장은 추출에 날짜 기반 또는 시간 기반이 될 수 있습니다 시간의 양을 나타냅니다 &lt;code&gt;Period&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af136aeb8710a7cab98d15314af7155f9049974e" translate="yes" xml:space="preserve">
          <source>This obtains a year based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;Year&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 1 년을 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 날짜 및 시간 정보의 임의 설정이 공장은 회심 나타냅니다 &lt;code&gt;Year&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4602bacf9db201bfce8a2960e9c5a1d68b35484" translate="yes" xml:space="preserve">
          <source>This obtains a year-month based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;YearMonth&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 년-월을 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;YearMonth&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1be70af6e55545e4996b776e4c19c92b5e98b2e" translate="yes" xml:space="preserve">
          <source>This obtains a zone based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ZoneId&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 영역을 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;ZoneId&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="66d6f9e59ee5fd63456b513e62cd5ebe0d27dcfa" translate="yes" xml:space="preserve">
          <source>This obtains a zoned date-time based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 존 날짜 / 시간을 가져옵니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;ZonedDateTime&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="60f62815954ffb88291022f1cc7ddef5506ebc32" translate="yes" xml:space="preserve">
          <source>This obtains a zoned date-time in this chronology based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ChronoZonedDateTime&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로이 연대기에서 존 날짜-시간을 가져옵니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="f20480c0d583422f46a90cbbc88cff541678fc22" translate="yes" xml:space="preserve">
          <source>This obtains a zoned date-time with the same instant as that specified.</source>
          <target state="translated">이렇게하면 지정된 것과 동일한 순간으로 영역 날짜-시간이 구해집니다.</target>
        </trans-unit>
        <trans-unit id="205f71d656832530060d655129d875de55c0cc08" translate="yes" xml:space="preserve">
          <source>This obtains an instant based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;Instant&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 인스턴트를 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 날짜 및 시간 정보의 임의 설정이 공장은 회심 나타냅니다 &lt;code&gt;Instant&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2337d76b69b0fa771af86c983aae860198618d7f" translate="yes" xml:space="preserve">
          <source>This obtains an offset based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ZoneOffset&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 오프셋을 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;ZoneOffset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f561b2a8cee1aa3fac6ee47687865aac724a0c00" translate="yes" xml:space="preserve">
          <source>This obtains an offset date-time based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;OffsetDateTime&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 오프셋 날짜-시간을 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;OffsetDateTime&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="ae864b2577bfba144fe827f11ed48cdd9cf7b02e" translate="yes" xml:space="preserve">
          <source>This obtains an offset time based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;OffsetTime&lt;/code&gt;.</source>
          <target state="translated">지정된 시간을 기준으로 오프셋 시간을 얻습니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 는 인스턴스에 대한 날짜 및 시간 정보의 임의의 집합이 공장 변환 나타낸다 &lt;code&gt;OffsetTime&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="39507a10969bf4a3fcc0e594bfbac392ee408041" translate="yes" xml:space="preserve">
          <source>This obtains the IDs that this &lt;code&gt;ZoneRulesProvider&lt;/code&gt; provides. A provider should provide data for at least one zone ID.</source>
          <target state="translated">이것은이 &lt;code&gt;ZoneRulesProvider&lt;/code&gt; 가 제공 하는 ID를 얻습니다 . 공급자는 하나 이상의 영역 ID에 대한 데이터를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="726b2168462e543038ab100b82593b7827fdac8b" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that adding one hour will always be a duration of one hour later. This may cause the local date-time to change by an amount other than one hour. Note that this is a different approach to that used by days, months and years, thus adding one day is not the same as adding 24 hours.</source>
          <target state="translated">이는 즉시 타임 라인에서 작동하므로 1 시간을 추가하면 항상 1 시간 후에 지속됩니다. 이로 인해 현지 날짜-시간이 1 시간 이외의 양만큼 변경 될 수 있습니다. 이 방법은 일, 월 및 년에 사용되는 방법과는 다른 방식이므로 하루를 추가하는 것은 24 시간을 추가하는 것과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="449d8d28ba022862276b2c7e5af0f20294264586" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that adding one minute will always be a duration of one minute later. This may cause the local date-time to change by an amount other than one minute. Note that this is a different approach to that used by days, months and years.</source>
          <target state="translated">이는 즉시 타임 라인에서 작동하므로 1 분을 추가하면 항상 1 분 후에 지속됩니다. 이로 인해 현지 날짜-시간이 1 분 이외의 양으로 변경 될 수 있습니다. 이 방법은 일, 월 및 년에 사용되는 방식과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="0c40b8e389146e2efe2832e92eb788736be1dd53" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that adding one nano will always be a duration of one nano later. This may cause the local date-time to change by an amount other than one nano. Note that this is a different approach to that used by days, months and years.</source>
          <target state="translated">이것은 즉시 타임 라인에서 작동하므로 하나의 나노를 추가하는 것은 항상 1 나노의 지속 시간이 될 것입니다. 이로 인해 현지 날짜 시간이 1 나노 이외의 양만큼 변경 될 수 있습니다. 이 방법은 일, 월 및 년에 사용되는 방식과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c4cd8c7a66c2ff78bac947e7da499aba9a3cfabc" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that adding one second will always be a duration of one second later. This may cause the local date-time to change by an amount other than one second. Note that this is a different approach to that used by days, months and years.</source>
          <target state="translated">이는 즉시 타임 라인에서 작동하므로 1 초를 추가하면 항상 1 초 후에 지속됩니다. 이로 인해 현지 날짜-시간이 1 초 이외의 시간만큼 변경 될 수 있습니다. 이 방법은 일, 월 및 년에 사용되는 방식과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="8094300af297e6ec99960bb5cacb5d9690ac223c" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that subtracting one hour will always be a duration of one hour earlier. This may cause the local date-time to change by an amount other than one hour. Note that this is a different approach to that used by days, months and years, thus subtracting one day is not the same as adding 24 hours.</source>
          <target state="translated">이것은 즉시 타임 라인에서 작동하므로 1 시간을 빼는 것이 항상 1 시간 일찍 지속됩니다. 이로 인해 현지 날짜-시간이 1 시간 이외의 양만큼 변경 될 수 있습니다. 이 방법은 일, 월 및 년에 사용되는 방식과는 다른 방식이므로 하루를 빼는 것은 24 시간을 더하는 것과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="10f01b9e77cb1e1c8db208e9714286d57b4421be" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that subtracting one minute will always be a duration of one minute earlier. This may cause the local date-time to change by an amount other than one minute. Note that this is a different approach to that used by days, months and years.</source>
          <target state="translated">이것은 순간 타임 라인에서 작동하므로 1 분을 빼는 것이 항상 1 분 전에 지속됩니다. 이로 인해 현지 날짜-시간이 1 분 이외의 양으로 변경 될 수 있습니다. 이 방법은 일, 월 및 년에 사용되는 방식과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="d62d67baa570ea1b5107178e38aa8d3f9a718ceb" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that subtracting one nano will always be a duration of one nano earlier. This may cause the local date-time to change by an amount other than one nano. Note that this is a different approach to that used by days, months and years.</source>
          <target state="translated">이것은 순간 타임 라인에서 작동하므로 1 나노를 빼는 것이 항상 1 나노 빨리 지속됩니다. 이로 인해 현지 날짜 시간이 1 나노 이외의 양만큼 변경 될 수 있습니다. 이 방법은 일, 월 및 년에 사용되는 방식과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="34d507fb2b9c644d312a6f37599ff469c6b10fef" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that subtracting one second will always be a duration of one second earlier. This may cause the local date-time to change by an amount other than one second. Note that this is a different approach to that used by days, months and years.</source>
          <target state="translated">이것은 순간 타임 라인에서 작동하므로 1 초를 빼는 것이 항상 1 초 일찍 지속됩니다. 이로 인해 현지 날짜-시간이 1 초 이외의 시간만큼 변경 될 수 있습니다. 이 방법은 일, 월 및 년에 사용되는 방식과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="324d2f72d3406eca2090dbabacbf8cae15cb21e2" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#minusDays(long)&quot;&gt;&lt;code&gt;subtracting days&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">This operates on the local time-line, &lt;a href=&quot;localdatetime#minusDays(long)&quot;&gt; &lt;code&gt;subtracting days&lt;/code&gt; &lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt; , using the zone ID to obtain the offset.</target>
        </trans-unit>
        <trans-unit id="66b8dc37ce4c05d1efd10e8876dfc44c6e707b67" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#minusDays-long-&quot;&gt;&lt;code&gt;subtracting days&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 타임 라인에서 작동 하여 현지 날짜-시간으로 &lt;a href=&quot;localdatetime#minusDays-long-&quot;&gt; &lt;code&gt;subtracting days&lt;/code&gt; &lt;/a&gt; 을 뺍니다 . 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="8d9032cea48c3737f961fdf675705d881e1242a1" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#minusMonths(long)&quot;&gt;&lt;code&gt;subtracting months&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">This operates on the local time-line, &lt;a href=&quot;localdatetime#minusMonths(long)&quot;&gt; &lt;code&gt;subtracting months&lt;/code&gt; &lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt; , using the zone ID to obtain the offset.</target>
        </trans-unit>
        <trans-unit id="ca4c248820f44b41c189bfb723340d212343290a" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#minusMonths-long-&quot;&gt;&lt;code&gt;subtracting months&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 타임 라인에서 작동하여 &lt;a href=&quot;localdatetime#minusMonths-long-&quot;&gt; &lt;code&gt;subtracting months&lt;/code&gt; &lt;/a&gt; 을 현지 날짜-시간으로 뺍니다 . 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="bd23cf059a25b8bad160023102cba156d3b7f04d" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#minusWeeks(long)&quot;&gt;&lt;code&gt;subtracting weeks&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">This operates on the local time-line, &lt;a href=&quot;localdatetime#minusWeeks(long)&quot;&gt; &lt;code&gt;subtracting weeks&lt;/code&gt; &lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt; , using the zone ID to obtain the offset.</target>
        </trans-unit>
        <trans-unit id="65883238bc7ce4bedf1473ad433bb1914555ab68" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#minusWeeks-long-&quot;&gt;&lt;code&gt;subtracting weeks&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 타임 라인에서 작동 하며 현지 날짜-시간으로 &lt;a href=&quot;localdatetime#minusWeeks-long-&quot;&gt; &lt;code&gt;subtracting weeks&lt;/code&gt; &lt;/a&gt; 를 뺍니다 . 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="5bdfc0b577ef133cc22f1ed8065cb80c2ec0926d" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#minusYears(long)&quot;&gt;&lt;code&gt;subtracting years&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">This operates on the local time-line, &lt;a href=&quot;localdatetime#minusYears(long)&quot;&gt; &lt;code&gt;subtracting years&lt;/code&gt; &lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt; , using the zone ID to obtain the offset.</target>
        </trans-unit>
        <trans-unit id="51d89fe7d5a43be02048737835733e66860321ee" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#minusYears-long-&quot;&gt;&lt;code&gt;subtracting years&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 타임 라인에서 작동하여 &lt;a href=&quot;localdatetime#minusYears-long-&quot;&gt; &lt;code&gt;subtracting years&lt;/code&gt; &lt;/a&gt; 을 현지 날짜-시간으로 뺍니다 . 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="a406538f3d42670359664e3c811162967f9f7588" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#plusDays(long)&quot;&gt;&lt;code&gt;adding days&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">This operates on the local time-line, &lt;a href=&quot;localdatetime#plusDays(long)&quot;&gt; &lt;code&gt;adding days&lt;/code&gt; &lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt; , using the zone ID to obtain the offset.</target>
        </trans-unit>
        <trans-unit id="6cc088b6807de06b101c0bc63dc04a4384f4af58" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#plusDays-long-&quot;&gt;&lt;code&gt;adding days&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이는 현지 타임 라인에서 작동 하여 현지 날짜-시간에 날짜를 &lt;a href=&quot;localdatetime#plusDays-long-&quot;&gt; &lt;code&gt;adding days&lt;/code&gt; &lt;/a&gt; 합니다. 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="79a35bb8cbf52fec1c8a2a448dac56bf599b9966" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#plusMonths(long)&quot;&gt;&lt;code&gt;adding months&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">This operates on the local time-line, &lt;a href=&quot;localdatetime#plusMonths(long)&quot;&gt; &lt;code&gt;adding months&lt;/code&gt; &lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt; , using the zone ID to obtain the offset.</target>
        </trans-unit>
        <trans-unit id="20c98d62bce69123ea5d2767637fa5f450b0c087" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#plusMonths-long-&quot;&gt;&lt;code&gt;adding months&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 타임 라인에서 작동 하며 현지 날짜-시간에 &lt;a href=&quot;localdatetime#plusMonths-long-&quot;&gt; &lt;code&gt;adding months&lt;/code&gt; &lt;/a&gt; 을 추가 합니다. 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="2316491eeb652d60914b82898ca3c725e6e578e5" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#plusWeeks(long)&quot;&gt;&lt;code&gt;adding weeks&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">This operates on the local time-line, &lt;a href=&quot;localdatetime#plusWeeks(long)&quot;&gt; &lt;code&gt;adding weeks&lt;/code&gt; &lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt; , using the zone ID to obtain the offset.</target>
        </trans-unit>
        <trans-unit id="154b94da779e6c9cca22e9bc1b3bd4a89ae143b7" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#plusWeeks-long-&quot;&gt;&lt;code&gt;adding weeks&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 타임 라인에서 작동 하며 현지 날짜-시간에 &lt;a href=&quot;localdatetime#plusWeeks-long-&quot;&gt; &lt;code&gt;adding weeks&lt;/code&gt; &lt;/a&gt; 를 추가 합니다. 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="956b17f7ad453c16186d92f4637b86cfaba4ccf1" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#plusYears(long)&quot;&gt;&lt;code&gt;adding years&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">This operates on the local time-line, &lt;a href=&quot;localdatetime#plusYears(long)&quot;&gt; &lt;code&gt;adding years&lt;/code&gt; &lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt; , using the zone ID to obtain the offset.</target>
        </trans-unit>
        <trans-unit id="45fe7be19a0012d0ba56803bcbf31c9663206351" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#plusYears-long-&quot;&gt;&lt;code&gt;adding years&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 타임 라인에서 작동 하여 현지 날짜-시간에 &lt;a href=&quot;localdatetime#plusYears-long-&quot;&gt; &lt;code&gt;adding years&lt;/code&gt; &lt;/a&gt; 를 추가 합니다. 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="fe9fc9a961826a16a4d7fd1fbf7f7ce9c609b3dc" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#truncatedTo(java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;truncating&lt;/code&gt;&lt;/a&gt; the underlying local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">This operates on the local time-line, &lt;a href=&quot;localdatetime#truncatedTo(java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;truncating&lt;/code&gt; &lt;/a&gt; the underlying local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt; , using the zone ID to obtain the offset.</target>
        </trans-unit>
        <trans-unit id="59068d62d04b8a462fc519bbf7cef54ddca45f64" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#truncatedTo-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;truncating&lt;/code&gt;&lt;/a&gt; the underlying local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">로컬 타임 라인에서 작동 하여 기본 로컬 날짜-시간을 &lt;a href=&quot;localdatetime#truncatedTo-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;truncating&lt;/code&gt; &lt;/a&gt; . 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="e44ca221169c72bcc5eb21d3cf6984d2255747dc" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withDayOfMonth(int)&quot;&gt;&lt;code&gt;changing the day-of-month&lt;/code&gt;&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">This operates on the local time-line, &lt;a href=&quot;localdatetime#withDayOfMonth(int)&quot;&gt; &lt;code&gt;changing the day-of-month&lt;/code&gt; &lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt; , using the zone ID to obtain the offset.</target>
        </trans-unit>
        <trans-unit id="2353d120e6f9cf824344af701e898fe4d833a945" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withDayOfMonth-int-&quot;&gt;&lt;code&gt;changing the day-of-month&lt;/code&gt;&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 타임 라인에서 작동 하며 현지 날짜-시간의 &lt;a href=&quot;localdatetime#withDayOfMonth-int-&quot;&gt; &lt;code&gt;changing the day-of-month&lt;/code&gt; &lt;/a&gt; 을 변경합니다 . 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="cbd39d433ec38f3b0f2d3104f0f79f8f1bb6dcd1" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withDayOfYear(int)&quot;&gt;&lt;code&gt;changing the day-of-year&lt;/code&gt;&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">This operates on the local time-line, &lt;a href=&quot;localdatetime#withDayOfYear(int)&quot;&gt; &lt;code&gt;changing the day-of-year&lt;/code&gt; &lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt; , using the zone ID to obtain the offset.</target>
        </trans-unit>
        <trans-unit id="26526dbba6c58095452f330104b3a779b3c7deeb" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withDayOfYear-int-&quot;&gt;&lt;code&gt;changing the day-of-year&lt;/code&gt;&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 타임 라인에서 작동 하며 현지 날짜-시간의 날짜를 &lt;a href=&quot;localdatetime#withDayOfYear-int-&quot;&gt; &lt;code&gt;changing the day-of-year&lt;/code&gt; &lt;/a&gt; . 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="bdac9445d24b4d8cceff63e95f6a1b3bc772b749" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withHour(int)&quot;&gt;changing the time&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">This operates on the local time-line, &lt;a href=&quot;localdatetime#withHour(int)&quot;&gt;changing the time&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt; , using the zone ID to obtain the offset.</target>
        </trans-unit>
        <trans-unit id="b24c9a53236448d5cfe67d31c6294336296d5fb2" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withHour-int-&quot;&gt;changing the time&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 타임 라인에서 작동 하여 현지 날짜-시간 &lt;a href=&quot;localdatetime#withHour-int-&quot;&gt;의 시간&lt;/a&gt; 을 변경합니다 . 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="7d2985a6ea28afaedb096ac6abd62595e4407629" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withMinute(int)&quot;&gt;changing the time&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">This operates on the local time-line, &lt;a href=&quot;localdatetime#withMinute(int)&quot;&gt;changing the time&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt; , using the zone ID to obtain the offset.</target>
        </trans-unit>
        <trans-unit id="7bddee3f8c089c5dcdead4c23d773a93ab0a5335" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withMinute-int-&quot;&gt;changing the time&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 타임 라인에서 작동 하여 현지 날짜-시간 &lt;a href=&quot;localdatetime#withMinute-int-&quot;&gt;의 시간&lt;/a&gt; 을 변경합니다 . 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="957cbb0af5f79d3729bbf5c3ee250009d59b70b7" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withMonth(int)&quot;&gt;&lt;code&gt;changing the month&lt;/code&gt;&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">This operates on the local time-line, &lt;a href=&quot;localdatetime#withMonth(int)&quot;&gt; &lt;code&gt;changing the month&lt;/code&gt; &lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt; , using the zone ID to obtain the offset.</target>
        </trans-unit>
        <trans-unit id="c784867c4312cbfaf1befb2ef2959e681ad4f6bb" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withMonth-int-&quot;&gt;&lt;code&gt;changing the month&lt;/code&gt;&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 타임 라인에서 작동 하며 현지 날짜-시간 &lt;a href=&quot;localdatetime#withMonth-int-&quot;&gt; &lt;code&gt;changing the month&lt;/code&gt; &lt;/a&gt; 을 변경합니다 . 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="dcb215935860156a6aed8329910119500e22b056" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withNano(int)&quot;&gt;changing the time&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">This operates on the local time-line, &lt;a href=&quot;localdatetime#withNano(int)&quot;&gt;changing the time&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt; , using the zone ID to obtain the offset.</target>
        </trans-unit>
        <trans-unit id="670e4fcf509e7f294939494905091949b46f4dfa" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withNano-int-&quot;&gt;changing the time&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 타임 라인에서 작동 하여 현지 날짜-시간 &lt;a href=&quot;localdatetime#withNano-int-&quot;&gt;의 시간&lt;/a&gt; 을 변경합니다 . 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="14cd20d526bee9a23b183a24f5c58508ad6947d3" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withSecond(int)&quot;&gt;changing the time&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 시간 표시 줄에서 작동 하여 현지 날짜-시간 &lt;a href=&quot;localdatetime#withSecond(int)&quot;&gt;의 시간&lt;/a&gt; 을 변경합니다 . 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 다시 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="1c44437b58ea1355b204a4983f39255944580cb3" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withSecond-int-&quot;&gt;changing the time&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 타임 라인에서 작동 하여 현지 날짜-시간 &lt;a href=&quot;localdatetime#withSecond-int-&quot;&gt;의 시간&lt;/a&gt; 을 변경합니다 . 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="87be495313a7339dbfd6c4dc4ca12795b669d77c" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withYear(int)&quot;&gt;&lt;code&gt;changing the year&lt;/code&gt;&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 날짜-시간 &lt;a href=&quot;localdatetime#withYear(int)&quot;&gt; &lt;code&gt;changing the year&lt;/code&gt; &lt;/a&gt; 를 변경 하는 현지 타임 라인에서 작동합니다 . 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 다시 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="932e29e07a81cf46bd3252bcfbdcbbcefe33c300" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withYear-int-&quot;&gt;&lt;code&gt;changing the year&lt;/code&gt;&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">이것은 현지 타임 라인에서 작동 하며 현지 날짜-시간 &lt;a href=&quot;localdatetime#withYear-int-&quot;&gt; &lt;code&gt;changing the year&lt;/code&gt; &lt;/a&gt; 를 변경합니다 . 그런 다음 오프셋을 얻기 위해 영역 ID를 사용하여 &lt;code&gt;ZonedDateTime&lt;/code&gt; 으로 다시 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="b3931784f6c0e8b591248f49ca648b15f7331490" translate="yes" xml:space="preserve">
          <source>This operates separately on the years, months and days. No normalization is performed.</source>
          <target state="translated">이것은 년, 월 및 일에 개별적으로 작동합니다. 정규화가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="515702e5e652cc6a5853f5da89e07e0cba04a9e8" translate="yes" xml:space="preserve">
          <source>This operation can only succeed for files of a type which can be parsed by an installed file reader. It may fail with an &lt;code&gt;InvalidMidiDataException&lt;/code&gt; even for valid files if no compatible file reader is installed. It will also fail with an &lt;code&gt;InvalidMidiDataException&lt;/code&gt; if a compatible file reader is installed, but encounters errors while constructing the &lt;code&gt;Sequence&lt;/code&gt; object from the file data.</source>
          <target state="translated">이 작업은 설치된 파일 판독기로 구문 분석 할 수있는 파일 유형에 대해서만 성공할 수 있습니다. 호환되는 파일 판독기가 설치되지 않은 경우 유효한 파일에 대해서도 &lt;code&gt;InvalidMidiDataException&lt;/code&gt; 과 함께 실패 할 수 있습니다 . 호환되는 파일 판독기가 설치되어 있으면 &lt;code&gt;InvalidMidiDataException&lt;/code&gt; 과 함께 실패 하지만 파일 데이터에서 &lt;code&gt;Sequence&lt;/code&gt; 개체 를 구성하는 동안 오류가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="23fb63b105ebe8be5098be2d3116dd68fd14ae1d" translate="yes" xml:space="preserve">
          <source>This operation can only succeed for files of a type which can be parsed by an installed file reader. It may fail with an &lt;code&gt;InvalidMidiDataException&lt;/code&gt; even for valid files if no compatible file reader is installed. It will also fail with an &lt;code&gt;InvalidMidiDataException&lt;/code&gt; if a compatible file reader is installed, but encounters errors while determining the file format.</source>
          <target state="translated">이 작업은 설치된 파일 판독기로 구문 분석 할 수있는 파일 유형에 대해서만 성공할 수 있습니다. 호환되는 파일 판독기가 설치되지 않은 경우 유효한 파일에 대해서도 &lt;code&gt;InvalidMidiDataException&lt;/code&gt; 과 함께 실패 할 수 있습니다 . 호환되는 파일 판독기가 설치되어 있으면 &lt;code&gt;InvalidMidiDataException&lt;/code&gt; 과 함께 실패 하지만 파일 형식을 확인하는 동안 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="625602f5cdf633de6c29c8bfb0d06f91051c7694" translate="yes" xml:space="preserve">
          <source>This operation can only succeed for files of a type which can be parsed by an installed file reader. It may fail with an InvalidMidiDataException even for valid files if no compatible file reader is installed. It will also fail with an InvalidMidiDataException if a compatible file reader is installed, but encounters errors while constructing the &lt;code&gt;Sequence&lt;/code&gt; object from the file data.</source>
          <target state="translated">이 작업은 설치된 파일 판독기에서 구문 분석 할 수있는 유형의 파일에 대해서만 성공할 수 있습니다. 호환되는 파일 리더가 설치되어 있지 않으면 유효한 파일의 경우에도 InvalidMidiDataException으로 실패 할 수 있습니다. 호환되는 파일 판독기가 설치된 경우 파일 데이터에서 &lt;code&gt;Sequence&lt;/code&gt; 객체 를 구성하는 동안 오류가 발생하면 InvalidMidiDataException과 함께 실패 합니다.</target>
        </trans-unit>
        <trans-unit id="c4d7f1e9d4a54ab542f03bcd4ed5e2326793f267" translate="yes" xml:space="preserve">
          <source>This operation can only succeed for files of a type which can be parsed by an installed file reader. It may fail with an InvalidMidiDataException even for valid files if no compatible file reader is installed. It will also fail with an InvalidMidiDataException if a compatible file reader is installed, but encounters errors while determining the file format.</source>
          <target state="translated">이 조작은 설치된 파일 판독기에 의해 구문 분석 될 수있는 유형의 파일에 대해서만 성공할 수 있습니다. 호환 가능한 파일 리더가 설치되어 있지 않으면 유효한 파일의 경우에도 InvalidMidiDataException으로 실패 할 수 있습니다. 호환 가능한 파일 리더가 설치되어 있지만 파일 형식을 결정하는 동안 오류가 발생하면 InvalidMidiDataException과 함께 실패합니다.</target>
        </trans-unit>
        <trans-unit id="0873ffa6d986996f543daf161adaa476e7942669" translate="yes" xml:space="preserve">
          <source>This operation does not reverse any calls that have already started on an old target value. (Java supports &lt;a href=&quot;../object#wait()&quot;&gt;forward time travel&lt;/a&gt; only.)</source>
          <target state="translated">이 작업은 이전 대상 값에서 이미 시작된 호출을 되 돌리지 않습니다. (Java는 &lt;a href=&quot;../object#wait()&quot;&gt;순방향 시간 이동&lt;/a&gt; 만 지원합니다 .)</target>
        </trans-unit>
        <trans-unit id="d54588074a1e11ae361882bd83f1aaf57821015a" translate="yes" xml:space="preserve">
          <source>This operation does not reverse any calls that have already started on an old target value. (Java supports &lt;a href=&quot;../object#wait--&quot;&gt;forward time travel&lt;/a&gt; only.)</source>
          <target state="translated">이 작업은 이전 대상 값에서 이미 시작된 호출을 되 돌리지 않습니다. (자바는 &lt;a href=&quot;../object#wait--&quot;&gt;순방향 여행&lt;/a&gt; 만 지원합니다 .)</target>
        </trans-unit>
        <trans-unit id="8342a968bec378f39f2dc50271e4d71f0abda6dc" translate="yes" xml:space="preserve">
          <source>This operation is equivalent to filling a rectangle of the width and height of the specified image with the given color and then drawing the image on top of it, but possibly more efficient.</source>
          <target state="translated">이 작업은 지정된 이미지의 너비와 높이의 사각형을 지정된 색상으로 채운 다음 그 위에 이미지를 그리는 것과 동일하지만 더 효율적일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee40962ed1e0a9e6d8d03438c9e380be3c48c516" translate="yes" xml:space="preserve">
          <source>This operation is equivalent to the following sequence of calls:</source>
          <target state="translated">이 작업은 다음 호출 시퀀스와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="ca395761d99f0b08de70ba0393d88e99153be428" translate="yes" xml:space="preserve">
          <source>This operation is likely to be expensive and should be used sparingly. If possible, it should be buffered for batch processing on sets of call sites.</source>
          <target state="translated">이 작업은 비용이 많이 들며 드물게 사용해야합니다. 가능하면 일련의 호출 사이트에서 일괄 처리를 위해 버퍼링해야합니다.</target>
        </trans-unit>
        <trans-unit id="02be43302caaff86fda5dec97c8ad5be7c15d0bd" translate="yes" xml:space="preserve">
          <source>This operation is likely to be expensive and should be used sparingly. If possible, it should be buffered for batch processing on sets of switch points.</source>
          <target state="translated">이 작업은 비용이 많이 들며 드물게 사용해야합니다. 가능하면 스위치 포인트 세트에서 일괄 처리를 위해 버퍼링해야합니다.</target>
        </trans-unit>
        <trans-unit id="8a524ee340747c59b0f3db2184034b2ce40ed0ab" translate="yes" xml:space="preserve">
          <source>This operation is not supported</source>
          <target state="translated">이 작업은 지원되지 않습니다</target>
        </trans-unit>
        <trans-unit id="40db6c6ece4e6e62d9f67621684a40a8a8b14bd7" translate="yes" xml:space="preserve">
          <source>This operation is often useful when constructing a document containing URIs that must be made relative to the base URI of the document wherever possible. For example, relativizing the URI</source>
          <target state="translated">이 작업은 가능한 경우 문서의 기본 URI와 관련하여 작성해야하는 URI를 포함하는 문서를 구성 할 때 종종 유용합니다. 예를 들어 URI 재배치</target>
        </trans-unit>
        <trans-unit id="5aa077c1b30242ecf291c5c20c0233ae54a73098" translate="yes" xml:space="preserve">
          <source>This operation is unsupported since this class is immutable.</source>
          <target state="translated">이 클래스는 변경할 수 없으므로이 작업은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b26a4c97eaafd9d7d84d117c124ed0a56416d9b1" translate="yes" xml:space="preserve">
          <source>This operation is unsupported since this class is immutable. If this call would change a mutable descriptor with the same contents, then a &lt;a href=&quot;runtimeoperationsexception&quot;&gt;&lt;code&gt;RuntimeOperationsException&lt;/code&gt;&lt;/a&gt; wrapping an &lt;a href=&quot;../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; is thrown. Otherwise, the behavior is the same as it would be for a mutable descriptor: either an exception is thrown because of illegal parameters, or there is no effect.</source>
          <target state="translated">이 클래스는 변경할 수 없으므로이 작업은 지원되지 않습니다. 이 호출이 동일한 내용을 가진 가변 설명자를 변경 하면 &lt;a href=&quot;../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을&lt;/a&gt; 래핑하는 &lt;a href=&quot;runtimeoperationsexception&quot;&gt; &lt;code&gt;RuntimeOperationsException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다. 그렇지 않으면 동작은 변경 가능한 설명 자의 경우와 동일합니다. 잘못된 매개 변수로 인해 예외가 발생하거나 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0243326f9ee0e4f8f83e0164b36c8f99b7f61d86" translate="yes" xml:space="preserve">
          <source>This operation is unsupported since this class is immutable. If this call would change a mutable descriptor with the same contents, then a &lt;a href=&quot;runtimeoperationsexception&quot;&gt;&lt;code&gt;RuntimeOperationsException&lt;/code&gt;&lt;/a&gt; wrapping an &lt;a href=&quot;../../java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; is thrown. Otherwise, the behavior is the same as it would be for a mutable descriptor: either an exception is thrown because of illegal parameters, or there is no effect.</source>
          <target state="translated">이 클래스는 변경할 수 없으므로이 작업은 지원되지 않습니다. 이 호출이 동일한 내용으로 변경 가능한 설명자를 변경 하면 &lt;a href=&quot;../../java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을&lt;/a&gt; 랩핑하는 &lt;a href=&quot;runtimeoperationsexception&quot;&gt; &lt;code&gt;RuntimeOperationsException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 그렇지 않으면, 동작은 변경 가능한 설명자에서와 동일합니다. 잘못된 매개 변수로 인해 예외가 발생하거나 아무런 영향이 없습니다.</target>
        </trans-unit>
        <trans-unit id="4e218929a6cb34dfc148eabd0e5e6da23ce900f7" translate="yes" xml:space="preserve">
          <source>This operation may fail spuriously (typically, due to memory contention) even if the witness value does match the expected value.</source>
          <target state="translated">이 작업은 감시 값이 예상 값과 일치하더라도 가짜로 (일반적으로 메모리 경합으로 인해) 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2eaf656a5ffc82c4c6faa7253ed6faf3f17eac63" translate="yes" xml:space="preserve">
          <source>This operation processes the elements one at a time, in encounter order if one exists. Performing the action for one element &lt;a href=&quot;../concurrent/package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;happens-before&lt;/i&gt;&lt;/a&gt; performing the action for subsequent elements, but for any given element, the action may be performed in whatever thread the library chooses.</source>
          <target state="translated">이 작업은 요소가있는 경우 발생 순서대로 한 번에 하나씩 요소를 처리합니다. 한 요소에 대한 조치 수행은 후속 요소에 대한 조치를 수행 &lt;a href=&quot;../concurrent/package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;하기 전에 발생&lt;/i&gt;&lt;/a&gt; 하지만 지정된 요소에 대해 라이브러리가 선택한 스레드에서 조치를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f19d262e3403282ac8f6dcc22ee150db5930978" translate="yes" xml:space="preserve">
          <source>This option &lt;b&gt;must&lt;/b&gt; be specified in the constructor.</source>
          <target state="translated">이 옵션 &lt;b&gt;은&lt;/b&gt; 생성자에서 지정 &lt;b&gt;해야합니다&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="4610da7e2d7031304211c0c1210eb3acdb47c12d" translate="yes" xml:space="preserve">
          <source>This option enables or disables local loopback of multicast datagrams.</source>
          <target state="translated">이 옵션은 멀티 캐스트 데이터 그램의 로컬 루프백을 활성화하거나 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="6d32536e467e28e80c04c9eb713697cc4116f77e" translate="yes" xml:space="preserve">
          <source>This option enables or disables local loopback of multicast datagrams. This option is enabled by default for Multicast Sockets.</source>
          <target state="translated">이 옵션은 멀티 캐스트 데이터 그램의 로컬 루프백을 활성화 또는 비활성화합니다. 이 옵션은 멀티 캐스트 소켓에 기본적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="afa7f2f5ee89eff134894fd8e836ca3a5291a8bf" translate="yes" xml:space="preserve">
          <source>This option includes the stack frames representing the invocation of &lt;code&gt;Method&lt;/code&gt; and &lt;code&gt;Constructor&lt;/code&gt;. Any utility methods that are equivalent to calling &lt;code&gt;Method.invoke&lt;/code&gt; or &lt;code&gt;Constructor.newInstance&lt;/code&gt; such as &lt;code&gt;Class.newInstance&lt;/code&gt; are not filtered or controlled by any stack walking option.</source>
          <target state="translated">이 옵션에는 &lt;code&gt;Method&lt;/code&gt; 및 &lt;code&gt;Constructor&lt;/code&gt; 의 호출을 나타내는 스택 프레임이 포함됩니다 . &lt;code&gt;Method.invoke&lt;/code&gt; 또는 &lt;code&gt;Class.newInstance&lt;/code&gt; 와 같은 &lt;code&gt;Constructor.newInstance&lt;/code&gt; 를 호출하는 것과 동일한 유틸리티 메서드는 스택 워킹 옵션에 의해 필터링되거나 제어되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4ed25d6258a5b644c3c2d337a3649a2b109a7441" translate="yes" xml:space="preserve">
          <source>This option sets the type-of-service or traffic class field in the IP header for a TCP or UDP socket.</source>
          <target state="translated">이 옵션은 TCP 또는 UDP 소켓의 IP 헤더에서 서비스 유형 또는 트래픽 클래스 필드를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="3fefbeabd227d3a564b1c8c1990ceb249f19730e" translate="yes" xml:space="preserve">
          <source>This option to specify a native dialog for use with an IPP attribute set provides a standard way to reflect back of the setting and option changes made by a user to the calling application, and integrates the native dialog into the Java printing APIs. But note that some options and settings in a native dialog may not necessarily map to IPP attributes as they may be non-standard platform, or even printer specific options.</source>
          <target state="translated">IPP 속성 세트와 함께 사용할 기본 대화 상자를 지정하는이 옵션은 사용자가 호출 애플리케이션에 대한 설정 및 옵션 변경 사항을 다시 반영하는 표준 방법을 제공하고 기본 대화 상자를 Java 인쇄 API에 통합합니다. 그러나 기본 대화 상자의 일부 옵션 및 설정은 비표준 플랫폼이거나 프린터 특정 옵션 일 수 있으므로 반드시 IPP 속성에 매핑되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29d701dac4b5f5387fd788367c0ae036eefdd7c7" translate="yes" xml:space="preserve">
          <source>This optional attribute specifies a list of one or more parameters for the MBean to be instantiated. This list describes the parameters to be passed the MBean's constructor. Use the following syntax to specify each item in &lt;var&gt;arglist&lt;/var&gt;:</source>
          <target state="translated">이 선택적 속성은 인스턴스화 할 MBean에 대한 하나 이상의 매개 변수 목록을 지정합니다. 이 목록은 MBean의 생성자에 전달 될 매개 변수를 설명합니다. 다음 구문을 사용하여 &lt;var&gt;arglist&lt;/var&gt; 에서 각 항목을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="217df13fc7d9dc7e8aba7c53c26dbed2086caa9b" translate="yes" xml:space="preserve">
          <source>This optional attribute specifies the code base URL of the MBean to be obtained. It identifies the directory that contains the &lt;code&gt;.jar&lt;/code&gt; files specified by the &lt;code&gt;ARCHIVE&lt;/code&gt; attribute. Specify this attribute only if the &lt;code&gt;.jar&lt;/code&gt; files are not in the same directory as the m-let text file. If this attribute is not specified, the base URL of the m-let text file is used.</source>
          <target state="translated">이 선택적 속성은 확보 할 MBean의 코드 기본 URL을 지정합니다. &lt;code&gt;ARCHIVE&lt;/code&gt; 속성으로 지정된 &lt;code&gt;.jar&lt;/code&gt; 파일 이 포함 된 디렉토리를 식별 합니다. &lt;code&gt;.jar&lt;/code&gt; 파일이 m-let 텍스트 파일과 동일한 디렉토리에없는 경우에만이 속성을 지정 하십시오. 이 속성을 지정하지 않으면 m-let 텍스트 파일의 기본 URL이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5eb4392dd4a10514090d62b90d330a14ec889d6e" translate="yes" xml:space="preserve">
          <source>This optional attribute specifies the object name to be assigned to the MBean instance when the m-let service registers it. If &lt;var&gt;mbeanname&lt;/var&gt; starts with the colon character (:), the domain part of the object name is the default domain of the MBean server, as returned by &lt;a href=&quot;../mbeanserver#getDefaultDomain--&quot;&gt;&lt;code&gt;MBeanServer.getDefaultDomain()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 선택적 속성은 m-let 서비스가 등록 할 때 MBean 인스턴스에 지정 될 오브젝트 이름을 지정합니다. &lt;var&gt;mbeanname&lt;/var&gt; 이 콜론 문자 (:)로 시작하는 경우 , 오브젝트 이름의 도메인 부분은 &lt;a href=&quot;../mbeanserver#getDefaultDomain--&quot;&gt; &lt;code&gt;MBeanServer.getDefaultDomain()&lt;/code&gt; &lt;/a&gt; 의해 리턴되는 MBean 서버의 기본 도메인입니다 .</target>
        </trans-unit>
        <trans-unit id="8464e2fafcf2aea354a830d83e84ac4ed1b6635e" translate="yes" xml:space="preserve">
          <source>This optional attribute specifies the object name to be assigned to the MBean instance when the m-let service registers it. If &lt;var&gt;mbeanname&lt;/var&gt; starts with the colon character (:), the domain part of the object name is the default domain of the MBean server, as returned by &lt;a href=&quot;../mbeanserverconnection#getDefaultDomain()&quot;&gt;&lt;code&gt;MBeanServerConnection.getDefaultDomain()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 선택적 속성은 m-let 서비스가 등록 할 때 MBean 인스턴스에 할당 될 객체 이름을 지정합니다. &lt;var&gt;mbeanname&lt;/var&gt; 이 콜론 문자 (:)로 시작하는 경우 , 객체 이름의 도메인 부분은 &lt;a href=&quot;../mbeanserverconnection#getDefaultDomain()&quot;&gt; &lt;code&gt;MBeanServerConnection.getDefaultDomain()&lt;/code&gt; &lt;/a&gt; 의해 반환 된 MBean 서버의 기본 도메인입니다 .</target>
        </trans-unit>
        <trans-unit id="c63c9c16af322931cb8e523d804c7487124f85be" translate="yes" xml:space="preserve">
          <source>This optional attribute specifies the version number of the MBean and associated &lt;code&gt;.jar&lt;/code&gt; files to be obtained. This version number can be used to specify that the &lt;code&gt;.jar&lt;/code&gt; files are loaded from the server to update those stored locally in the cache the next time the m-let text file is loaded. &lt;var&gt;version&lt;/var&gt; must be a series of non-negative decimal integers each separated by a period from the one that precedes it.</source>
          <target state="translated">이 선택적 속성은 획득 할 MBean 및 연관된 &lt;code&gt;.jar&lt;/code&gt; 파일 의 버전 번호를 지정합니다 . 이 버전 번호는 &lt;code&gt;.jar&lt;/code&gt; 파일이 서버에서로드되어 다음에 m-let 텍스트 파일이로드 될 때 캐시에 로컬로 저장된 파일을 업데이트 하도록 지정하는 데 사용할 수 있습니다 . &lt;var&gt;version&lt;/var&gt; 은 각각 마침표로 구분 된 음이 아닌 10 진 정수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="8667c820367cffb1a06c3f7b9fe06fc4336600b8" translate="yes" xml:space="preserve">
          <source>This optional field can only have a defined value when the xs:dateTime second field, represented by &lt;a href=&quot;#getSecond()&quot;&gt;&lt;code&gt;getSecond()&lt;/code&gt;&lt;/a&gt;, does not return &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt;&lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 선택적 필드는 &lt;a href=&quot;#getSecond()&quot;&gt; &lt;code&gt;getSecond()&lt;/code&gt; &lt;/a&gt; 표시되는 xs : dateTime 초 필드 가 &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt; &lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt; 를&lt;/a&gt; 반환하지 않는 경우에만 정의 된 값을 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7343cebf8089c891c832f1c4b657d1ed99e55aa4" translate="yes" xml:space="preserve">
          <source>This output device assigned attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="translated">이 출력 장치 할당 속성의 로케일과 &lt;code&gt;object&lt;/code&gt; 의 로케일이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="fa627cb296bb9d5368d8b160c534107054430e92" translate="yes" xml:space="preserve">
          <source>This output device assigned attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="translated">이 출력 장치에 할당 된 속성의 기본 문자열과 &lt;code&gt;object&lt;/code&gt; 의 기본 문자열이 같습니다.</target>
        </trans-unit>
        <trans-unit id="287a69e23ad8907d5aa30e1d22463d996c8d458c" translate="yes" xml:space="preserve">
          <source>This output stream</source>
          <target state="translated">이 출력 스트림</target>
        </trans-unit>
        <trans-unit id="1c5acb8dcc86af6da6a34303cfc1229c0c0664b0" translate="yes" xml:space="preserve">
          <source>This outputs the formatted date-time to the specified destination. &lt;a href=&quot;../../lang/appendable&quot;&gt;&lt;code&gt;Appendable&lt;/code&gt;&lt;/a&gt; is a general purpose interface that is implemented by all key character output classes including &lt;code&gt;StringBuffer&lt;/code&gt;, &lt;code&gt;StringBuilder&lt;/code&gt;, &lt;code&gt;PrintStream&lt;/code&gt; and &lt;code&gt;Writer&lt;/code&gt;.</source>
          <target state="translated">형식화 된 날짜-시간을 지정된 대상으로 출력합니다. &lt;a href=&quot;../../lang/appendable&quot;&gt; &lt;code&gt;Appendable&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;StringBuffer&lt;/code&gt; , &lt;code&gt;StringBuilder&lt;/code&gt; , &lt;code&gt;PrintStream&lt;/code&gt; 및 &lt;code&gt;Writer&lt;/code&gt; 를 포함한 모든 주요 문자 출력 클래스에 의해 구현되는 범용 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="1126a6ede333e4f57bf3aa4d5dfb3c5e9ece413e" translate="yes" xml:space="preserve">
          <source>This package allows applications to retrieve and update attributes associated with objects stored in a directory, and to search for objects using specified attributes.</source>
          <target state="translated">이 패키지를 통해 응용 프로그램은 디렉토리에 저장된 객체와 관련된 속성을 검색 및 업데이트하고 지정된 속성을 사용하여 객체를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="288497f7814e08d4e47a22ea9f9b66e03e7eadc4" translate="yes" xml:space="preserve">
          <source>This package allows applications to store and retrieve user and system preference and configuration data.</source>
          <target state="translated">이 패키지를 통해 응용 프로그램은 사용자 및 시스템 환경 설정 및 구성 데이터를 저장하고 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e97097447b348c1e4a246b902f0475a5f2f816c2" translate="yes" xml:space="preserve">
          <source>This package allows applications to store and retrieve user and system preference and configuration data. This data is stored persistently in an implementation-dependent backing store. There are two separate trees of preference nodes, one for user preferences and one for system preferences.</source>
          <target state="translated">이 패키지를 통해 응용 프로그램은 사용자 및 시스템 환경 설정 및 구성 데이터를 저장하고 검색 할 수 있습니다. 이 데이터는 구현 종속 백업 저장소에 지속적으로 저장됩니다. 환경 설정 노드에는 사용자 환경 설정과 시스템 환경 설정을위한 두 개의 별도 트리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="186d73d199efe571907470c90b135f910d258734" translate="yes" xml:space="preserve">
          <source>This package contains classes supporting the built-in TIFF reader and writer plug-ins. Classes are provided for simplifying interaction with metadata, including Exif metadata common in digital photography, and an extension of &lt;a href=&quot;../../imagereadparam&quot;&gt;&lt;code&gt;ImageReadParam&lt;/code&gt;&lt;/a&gt; which permits specifying which metadata tags are allowed to be read. For more information about the operation of the built-in TIFF plug-ins, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/tiff_metadata.html&quot;&gt;TIFF metadata format specification and usage notes&lt;/a&gt;.</source>
          <target state="translated">이 패키지에는 내장 TIFF 리더 및 라이터 플러그인을 지원하는 클래스가 포함되어 있습니다. 디지털 사진에서 흔히 볼 수있는 Exif 메타 데이터 및 읽을 수있는 메타 데이터 태그를 지정할 수있는 &lt;a href=&quot;../../imagereadparam&quot;&gt; &lt;code&gt;ImageReadParam&lt;/code&gt; &lt;/a&gt; 의 확장을 포함하여 메타 데이터와의 상호 작용을 단순화하기 위해 클래스가 제공됩니다 . 내장 TIFF 플러그인 작동에 대한 자세한 내용은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/tiff_metadata.html&quot;&gt;TIFF 메타 데이터 형식 사양 및 사용 참고 사항을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="00fbf6689be8c9c3eb5607b68c565c84bab9927e" translate="yes" xml:space="preserve">
          <source>This package contains some support classes for the built-in JPEG reader and writer plug-ins. Classes are provided for representing quantization and Huffman tables, and extensions of &lt;code&gt;ImageReadParam&lt;/code&gt; and &lt;code&gt;ImageWriteParam&lt;/code&gt; are provided to supply tables during the reading and writing process. For more information about the operation of the built-in JPEG plug-ins, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG metadata format specification and usage notes&lt;/a&gt;.</source>
          <target state="translated">이 패키지에는 내장 JPEG 리더 및 라이터 플러그인에 대한 일부 지원 클래스가 포함되어 있습니다. 양자화 및 Huffman 테이블을 나타내는 클래스가 제공되며 , 읽기 및 쓰기 프로세스 동안 테이블을 제공하기 위해 &lt;code&gt;ImageReadParam&lt;/code&gt; 및 &lt;code&gt;ImageWriteParam&lt;/code&gt; 의 확장 이 제공됩니다. 내장 JPEG 플러그인 작동에 대한 자세한 내용은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG 메타 데이터 형식 사양 및 사용 참고 사항을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa64250076574831d90b6de36c8cbfcab3ec1a3d" translate="yes" xml:space="preserve">
          <source>This package contains some support classes for the built-in JPEG reader and writer plug-ins. Classes are provided for representing quantization and Huffman tables, and extensions of &lt;code&gt;ImageReadParam&lt;/code&gt; and &lt;code&gt;ImageWriteParam&lt;/code&gt; are provided to supply tables during the reading and writing process. For more information about the operation of the built-in JPEG plug-ins, see the JPEG metadata format specification and usage notes.</source>
          <target state="translated">이 패키지에는 내장 JPEG 리더 및 라이터 플러그인에 대한 일부 지원 클래스가 포함되어 있습니다. 양자화 및 허프만 테이블을 나타내는 클래스가 제공되며 , 읽기 및 쓰기 프로세스 중에 테이블을 제공하기 위해 &lt;code&gt;ImageReadParam&lt;/code&gt; 및 &lt;code&gt;ImageWriteParam&lt;/code&gt; 의 확장 이 제공됩니다. 내장 JPEG 플러그인 작동에 대한 자세한 내용은 JPEG 메타 데이터 형식 사양 및 사용 메모를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2f276402586baaea7f6e39ec7543eba119f71a5f" translate="yes" xml:space="preserve">
          <source>This package contains the basic classes and interfaces for describing the contents of image files, including metadata and thumbnails (&lt;code&gt;IIOImage&lt;/code&gt;); for controlling the image reading process (&lt;code&gt;ImageReader&lt;/code&gt;, &lt;code&gt;ImageReadParam&lt;/code&gt;, and &lt;code&gt;ImageTypeSpecifier&lt;/code&gt;) and image writing process (&lt;code&gt;ImageWriter&lt;/code&gt; and &lt;code&gt;ImageWriteParam&lt;/code&gt;); for performing transcoding between formats (&lt;code&gt;ImageTranscoder&lt;/code&gt;), and for reporting errors (&lt;code&gt;IIOException&lt;/code&gt;).</source>
          <target state="translated">이 패키지에는 메타 데이터 및 썸네일 ( &lt;code&gt;IIOImage&lt;/code&gt; )을 포함하여 이미지 파일의 내용을 설명하기위한 기본 클래스 및 인터페이스가 포함되어 있습니다 . 이미지 판독 프로세스 ( &lt;code&gt;ImageReader&lt;/code&gt; , &lt;code&gt;ImageReadParam&lt;/code&gt; 및 &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; ) 및 이미지 작성 프로세스 ( &lt;code&gt;ImageWriter&lt;/code&gt; 및 &lt;code&gt;ImageWriteParam&lt;/code&gt; )를 제어하기 위해; 형식 간 트랜스 코딩 수행 ( &lt;code&gt;ImageTranscoder&lt;/code&gt; ) 및 오류보고 ( &lt;code&gt;IIOException&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1bc4439ea20d876f9aaaeb46de959fb166bd1dd9" translate="yes" xml:space="preserve">
          <source>This package contains the classes that should be used to store X500 Principal and X500 Private Credentials in a</source>
          <target state="translated">이 패키지에는 X500 프린시 펄 및 X500 개인 신임 정보를 저장하는 데 사용해야하는 클래스가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4bcd3e5baa32173a996e3505e09482e17dac00f3" translate="yes" xml:space="preserve">
          <source>This package contains utility classes related to the Kerberos network authentication protocol.</source>
          <target state="translated">이 패키지에는 Kerberos 네트워크 인증 프로토콜과 관련된 유틸리티 클래스가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="90b65cce3e590cd8472c69914c23535be7185cb1" translate="yes" xml:space="preserve">
          <source>This package contains utility classes related to the Kerberos network authentication protocol. They do not provide much Kerberos support themselves.</source>
          <target state="translated">이 패키지에는 Kerberos 네트워크 인증 프로토콜과 관련된 유틸리티 클래스가 포함되어 있습니다. Kerberos 자체를 많이 지원하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="704d234d7ca4c6cc11b14edd6d51dc302731e56a" translate="yes" xml:space="preserve">
          <source>This package defines a &lt;code&gt;NamingEvent&lt;/code&gt; class to represent an event that is generated by a naming/directory service. It also defines subinterfaces of &lt;code&gt;Context&lt;/code&gt; and &lt;code&gt;DirContext&lt;/code&gt;, called &lt;code&gt;EventContext&lt;/code&gt; and &lt;code&gt;EventDirContext&lt;/code&gt;, through which applications can register their interest in events fired by the context.</source>
          <target state="translated">이 패키지는 &lt;code&gt;NamingEvent&lt;/code&gt; 클래스를 정의 해 , 네이밍 / 디렉토리 서비스로 생성되는 이벤트를 나타냅니다. 또한 &lt;code&gt;Context&lt;/code&gt; 및 &lt;code&gt;DirContext&lt;/code&gt; 의 하위 인터페이스 ( &lt;code&gt;EventContext&lt;/code&gt; 및 &lt;code&gt;EventDirContext&lt;/code&gt; )를 정의하여 애플리케이션이 컨텍스트에 의해 발생 된 이벤트에 대한 관심을 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61a5725a6e15257c679b593154e3b56862b3d964" translate="yes" xml:space="preserve">
          <source>This package defines asynchronous-channel classes that are connected to a stream-oriented connecting or listening socket, or a datagram-oriented socket. It also defines the &lt;a href=&quot;asynchronousfilechannel&quot;&gt;&lt;code&gt;AsynchronousFileChannel&lt;/code&gt;&lt;/a&gt; class for asynchronous reading, writing, and manipulating a file. As with the &lt;a href=&quot;filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; it supports operations to truncate the file to a specific size, force updates to the file to be written to the storage device, or acquire locks on the whole file or on a specific region of the file. Unlike the &lt;code&gt;FileChannel&lt;/code&gt; it does not define methods for mapping a region of the file directly into memory. Where memory mapped I/O is required, then a &lt;code&gt;FileChannel&lt;/code&gt; can be used.</source>
          <target state="translated">이 패키지는 스트림 지향 연결 또는 청취 소켓 또는 데이터 그램 지향 소켓에 연결된 비동기 채널 클래스를 정의합니다. 또한 파일을 비동기 적으로 읽고, 쓰고, 조작하기위한 &lt;a href=&quot;asynchronousfilechannel&quot;&gt; &lt;code&gt;AsynchronousFileChannel&lt;/code&gt; &lt;/a&gt; 클래스를 정의 합니다. &lt;a href=&quot;filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt; 과 마찬가지로 파일을 특정 크기로 자르거나 파일에 대한 업데이트를 저장 장치에 쓰거나 전체 파일 또는 파일의 특정 영역에서 잠금을 획득하는 작업을 지원합니다. &lt;code&gt;FileChannel&lt;/code&gt; 과 달리 파일 영역을 메모리에 직접 매핑하는 방법을 정의하지 않습니다. 메모리 매핑 된 I / O가 필요한 경우 &lt;code&gt;FileChannel&lt;/code&gt; 을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6772442ab3f0ced34fa53e9a3f86b805e866cbdb" translate="yes" xml:space="preserve">
          <source>This package defines selectable-channel classes corresponding to the &lt;a href=&quot;../../net/datagramsocket&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../net/serversocket&quot;&gt;&lt;code&gt;ServerSocket&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; classes defined in the &lt;a href=&quot;../../net/package-summary&quot;&gt;&lt;code&gt;java.net&lt;/code&gt;&lt;/a&gt; package. Minor changes to these classes have been made in order to support sockets that are associated with channels. This package also defines a simple class that implements unidirectional pipes. In all cases, a new selectable channel is created by invoking the static &lt;code&gt;open&lt;/code&gt; method of the corresponding class. If a channel needs an associated socket then a socket will be created as a side effect of this operation.</source>
          <target state="translated">이 패키지는 &lt;a href=&quot;../../net/package-summary&quot;&gt; &lt;code&gt;java.net&lt;/code&gt; &lt;/a&gt; 패키지에 정의 된 &lt;a href=&quot;../../net/datagramsocket&quot;&gt; &lt;code&gt;DatagramSocket&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../net/serversocket&quot;&gt; &lt;code&gt;ServerSocket&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; 클래스에 해당하는 선택 가능한 채널 클래스를 정의 합니다. 채널과 관련된 소켓을 지원하기 위해 이러한 클래스에 대한 사소한 변경이 이루어졌습니다. 이 패키지는 또한 단방향 파이프를 구현하는 간단한 클래스를 정의합니다. 모든 경우에 해당 클래스 의 정적 &lt;code&gt;open&lt;/code&gt; 메서드를 호출하여 새로운 선택 가능한 채널이 생성됩니다 . 채널에 연결된 소켓이 필요한 경우이 작업의 부작용으로 소켓이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="c9bd1981873ec43b1bb6c9505b7f4ee48a2fd78f" translate="yes" xml:space="preserve">
          <source>This package defines selectable-channel classes corresponding to the &lt;a href=&quot;../../net/datagramsocket&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../net/serversocket&quot;&gt;&lt;code&gt;ServerSocket&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; classes defined in the &lt;code&gt;&lt;a href=&quot;../../net/package-summary&quot;&gt;&lt;code&gt;java.net&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; package. Minor changes to these classes have been made in order to support sockets that are associated with channels. This package also defines a simple class that implements unidirectional pipes. In all cases, a new selectable channel is created by invoking the static &lt;code&gt;open&lt;/code&gt; method of the corresponding class. If a channel needs an associated socket then a socket will be created as a side effect of this operation.</source>
          <target state="translated">이 패키지는 &lt;code&gt;&lt;a href=&quot;../../net/package-summary&quot;&gt;&lt;code&gt;java.net&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 패키지에 정의 된 &lt;a href=&quot;../../net/datagramsocket&quot;&gt; &lt;code&gt;DatagramSocket&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../net/serversocket&quot;&gt; &lt;code&gt;ServerSocket&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; 클래스에 대응하는 선택 가능한 채널 클래스를 정의 합니다. 채널과 관련된 소켓을 지원하기 위해 이러한 클래스를 약간 변경했습니다. 이 패키지는 또한 단방향 파이프를 구현하는 간단한 클래스를 정의합니다. 모든 경우에 해당하는 클래스 의 정적 &lt;code&gt;open&lt;/code&gt; 메소드를 호출하여 선택 가능한 새 채널이 작성됩니다 . 채널에 관련 소켓이 필요한 경우이 작업의 부작용으로 소켓이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="0f05c0c92fac04602f5db9b62f31334a7dcbf96f" translate="yes" xml:space="preserve">
          <source>This package defines the classes and interfaces necessary to perform Drag and Drop operations in Java. It defines classes for the drag-source and the drop-target, as well as events for transferring the data being dragged. This package also provides a means for giving visual feedback to the user throughout the duration of the Drag and Drop operation.</source>
          <target state="translated">이 패키지는 Java에서 드래그 앤 드롭 작업을 수행하는 데 필요한 클래스와 인터페이스를 정의합니다. 드래그 소스 및 드롭 대상에 대한 클래스와 드래그되는 데이터를 전송하기위한 이벤트를 정의합니다. 이 패키지는 또한 끌어서 놓기 작업 기간 동안 사용자에게 시각적 피드백을 제공하는 수단을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d7c145e275def8f85e91dd12e50bad1e1a4677f4" translate="yes" xml:space="preserve">
          <source>This package defines the directory operations of the Java Naming and Directory Interface&amp;trade; (JNDI). JNDI provides naming and directory functionality to applications written in the Java programming language. It is designed to be independent of any specific naming or directory service implementation. Thus a variety of services--new, emerging, and already deployed ones--can be accessed in a common way.</source>
          <target state="translated">이 패키지는 JNDI (Java Naming and Directory Interface &amp;trade;)의 디렉토리 작업을 정의합니다. JNDI는 Java 프로그래밍 언어로 작성된 애플리케이션에 이름 지정 및 디렉토리 기능을 제공합니다. 특정 이름 지정 또는 디렉터리 서비스 구현과 독립적으로 설계되었습니다. 따라서 새로운 서비스, 새로운 서비스, 이미 배포 된 서비스 등 다양한 서비스에 공통된 방식으로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7a677b4e249a5e3217b3f33f6b841b9bcaec5fd" translate="yes" xml:space="preserve">
          <source>This package defines the directory operations of the Java Naming and Directory Interface&lt;sup&gt;TM&lt;/sup&gt; (JNDI). JNDI provides naming and directory functionality to applications written in the Java programming language. It is designed to be independent of any specific naming or directory service implementation. Thus a variety of services--new, emerging, and already deployed ones--can be accessed in a common way.</source>
          <target state="translated">이 패키지는 JNDI ( Java Naming and Directory Interface &lt;sup&gt;TM&lt;/sup&gt; ) 의 디렉토리 작업을 정의합니다 . JNDI는 Java 프로그래밍 언어로 작성된 애플리케이션에 이름 지정 및 디렉토리 기능을 제공합니다. 특정 이름 지정 또는 디렉토리 서비스 구현과 독립적으로 설계되었습니다. 따라서 새로운 서비스, 이미 구축 된 서비스 등 다양한 서비스에 공통적 인 방식으로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0c66dd9b88111e43149d778316afdd807311c11" translate="yes" xml:space="preserve">
          <source>This package defines the event notification operations of the Java Naming and Directory Interface&amp;trade; (JNDI). JNDI provides naming and directory functionality to applications written in the Java programming language. It is designed to be independent of any specific naming or directory service implementation. Thus a variety of services--new, emerging, and already deployed ones--can be accessed in a common way.</source>
          <target state="translated">이 패키지는 JNDI (Java Naming and Directory Interface &amp;trade;)의 이벤트 알림 작업을 정의합니다. JNDI는 Java 프로그래밍 언어로 작성된 애플리케이션에 이름 지정 및 디렉토리 기능을 제공합니다. 특정 이름 지정 또는 디렉터리 서비스 구현과 독립적으로 설계되었습니다. 따라서 새로운 서비스, 새로운 서비스, 이미 배포 된 서비스 등 다양한 서비스에 공통된 방식으로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bc76b26c25cc3460f4a70f06429a24f2196d9b6" translate="yes" xml:space="preserve">
          <source>This package defines the event notification operations of the Java Naming and Directory Interface&lt;sup&gt;TM&lt;/sup&gt; (JNDI). JNDI provides naming and directory functionality to applications written in the Java programming language. It is designed to be independent of any specific naming or directory service implementation. Thus a variety of services--new, emerging, and already deployed ones--can be accessed in a common way.</source>
          <target state="translated">이 패키지는 JNDI ( Java Naming and Directory Interface &lt;sup&gt;TM&lt;/sup&gt; ) 의 이벤트 알림 작업을 정의합니다 . JNDI는 Java 프로그래밍 언어로 작성된 애플리케이션에 이름 지정 및 디렉토리 기능을 제공합니다. 특정 이름 지정 또는 디렉토리 서비스 구현과 독립적으로 설계되었습니다. 따라서 새로운 서비스, 이미 구축 된 서비스 등 다양한 서비스에 공통적 인 방식으로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b8c341e63d2743b2371e2edc9e4e1f75c5e0347" translate="yes" xml:space="preserve">
          <source>This package defines the interface &lt;code&gt;Control&lt;/code&gt; to represent an LDAPv3 control. It can be a control that is sent to an LDAP server (&lt;em&gt;request control&lt;/em&gt;) or a control returned by an LDAP server (&lt;em&gt;response control&lt;/em&gt;). Unlike extended requests and responses, there is not necessarily any pairing between request controls and response controls. You can send request controls and expect no response controls back, or receive response controls without sending any request controls.</source>
          <target state="translated">이 패키지는 인터페이스 인터페이스를 정의하여 LDAPv3 &lt;code&gt;Control&lt;/code&gt; 을 나타냅니다. LDAP 서버로 전송되는 &lt;em&gt;제어&lt;/em&gt; ( &lt;em&gt;요청 제어&lt;/em&gt; ) 또는 LDAP 서버가 리턴 한 &lt;em&gt;제어&lt;/em&gt; ( &lt;em&gt;응답 제어&lt;/em&gt; ) 일 수 있습니다. 확장 요청 및 응답과 달리 요청 제어와 응답 제어간에 쌍이있을 필요는 없습니다. 요청 제어를 보내고 응답 제어를 다시 기대하지 않거나 요청 제어를 보내지 않고 응답 제어를 수신 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d16558c590d65c082b7a5ba1c6f2b177b4b9024b" translate="yes" xml:space="preserve">
          <source>This package defines the interface &lt;code&gt;ExtendedRequest&lt;/code&gt; to represent the argument to an extended operation, and the interface &lt;code&gt;ExtendedResponse&lt;/code&gt; to represent the result of the extended operation. An extended response is always paired with an extended request but not necessarily vice versa. That is, you can have an extended request that has no corresponding extended response.</source>
          <target state="translated">이 패키지는 인터페이스 정의 &lt;code&gt;ExtendedRequest&lt;/code&gt; 확장 조작의 인수를 나타내는, 그리고 인터페이스 &lt;code&gt;ExtendedResponse&lt;/code&gt; 확장 연산의 결과를 나타내는. 확장 된 응답은 항상 확장 된 요청과 쌍을 이루어야하지만 반드시 그 반대 인 것은 아닙니다. 즉, 해당 확장 응답이없는 확장 요청을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5307f11c9b0d7d9567d847edef8865e68484db3" translate="yes" xml:space="preserve">
          <source>This package defines the naming operations of the Java Naming and Directory Interface&amp;trade; (JNDI). JNDI provides naming and directory functionality to applications written in the Java programming language. It is designed to be independent of any specific naming or directory service implementation. Thus a variety of services--new, emerging, and already deployed ones--can be accessed in a common way.</source>
          <target state="translated">이 패키지는 JNDI (Java Naming and Directory Interface &amp;trade;)의 이름 지정 작업을 정의합니다. JNDI는 Java 프로그래밍 언어로 작성된 애플리케이션에 이름 지정 및 디렉토리 기능을 제공합니다. 특정 이름 지정 또는 디렉터리 서비스 구현과 독립적으로 설계되었습니다. 따라서 새로운 서비스, 새로운 서비스, 이미 배포 된 서비스 등 다양한 서비스에 공통된 방식으로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38c93855822dcf49856f49aea1ae426c2c724905" translate="yes" xml:space="preserve">
          <source>This package defines the naming operations of the Java Naming and Directory Interface&lt;sup&gt;TM&lt;/sup&gt; (JNDI). JNDI provides naming and directory functionality to applications written in the Java programming language. It is designed to be independent of any specific naming or directory service implementation. Thus a variety of services--new, emerging, and already deployed ones--can be accessed in a common way.</source>
          <target state="translated">이 패키지는 JNDI ( Java Naming and Directory Interface &lt;sup&gt;TM&lt;/sup&gt; ) 의 이름 지정 작업을 정의합니다 . JNDI는 Java 프로그래밍 언어로 작성된 애플리케이션에 이름 지정 및 디렉토리 기능을 제공합니다. 특정 이름 지정 또는 디렉토리 서비스 구현과 독립적으로 설계되었습니다. 따라서 새로운 서비스, 이미 구축 된 서비스 등 다양한 서비스에 공통적 인 방식으로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c39362433065d0862c75d77b590b48f243dd902" translate="yes" xml:space="preserve">
          <source>This package defines the notion of a &lt;em&gt;context&lt;/em&gt;, represented by the &lt;code&gt;Context&lt;/code&gt; interface. A context consists of a set of name-to-object &lt;em&gt;bindings&lt;/em&gt;. &lt;code&gt;Context&lt;/code&gt; is the core interface for looking up, binding, unbinding, and renaming objects, and for creating and destroying subcontexts.</source>
          <target state="translated">이 패키지는 &lt;code&gt;Context&lt;/code&gt; 인터페이스로 표현되는 &lt;em&gt;context&lt;/em&gt; 개념을 정의합니다 . 컨텍스트는 일련의 이름 대 오브젝트 &lt;em&gt;바인딩으로 구성&lt;/em&gt; 됩니다. &lt;code&gt;Context&lt;/code&gt; 는 객체를 찾고, 바인딩하고, 바인딩을 해제하고, 이름을 바꾸고 하위 컨텍스트를 작성하고 삭제하기위한 핵심 인터페이스입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0539f441611e9195294d82fa6613f6ba2ddf70cf" translate="yes" xml:space="preserve">
          <source>This package defines the service provider interface (SPI) of the Java Naming and Directory Interface&amp;trade; (JNDI). JNDI provides naming and directory functionality to applications written in the Java programming language. It is designed to be independent of any specific naming or directory service implementation. Thus a variety of services--new, emerging, and already deployed ones--can be accessed in a common way.</source>
          <target state="translated">이 패키지는 JNDI (Java Naming and Directory Interface &amp;trade;)의 서비스 제공자 인터페이스 (SPI)를 정의합니다. JNDI는 Java 프로그래밍 언어로 작성된 애플리케이션에 이름 지정 및 디렉토리 기능을 제공합니다. 특정 이름 지정 또는 디렉터리 서비스 구현과 독립적으로 설계되었습니다. 따라서 새로운 서비스, 새로운 서비스, 이미 배포 된 서비스 등 다양한 서비스에 공통된 방식으로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c09aa5004534aa01c2386228535bf3dff65f59c" translate="yes" xml:space="preserve">
          <source>This package expands on the base package to provide additional functionality for more powerful use cases. Support is included for:</source>
          <target state="translated">이 패키지는 기본 패키지에서 확장되어보다 강력한 사용 사례를위한 추가 기능을 제공합니다. 다음에 대한 지원이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="6b108a3413ee9051159cd86d29c768dd5f195ac1" translate="yes" xml:space="preserve">
          <source>This package extends the directory operations of the Java Naming and Directory Interface&amp;trade; (JNDI). JNDI provides naming and directory functionality to applications written in the Java programming language. It is designed to be independent of any specific naming or directory service implementation. Thus a variety of services--new, emerging, and already deployed ones--can be accessed in a common way.</source>
          <target state="translated">이 패키지는 JNDI (Java Naming and Directory Interface &amp;trade;)의 디렉토리 작업을 확장합니다. JNDI는 Java 프로그래밍 언어로 작성된 애플리케이션에 이름 지정 및 디렉토리 기능을 제공합니다. 특정 이름 지정 또는 디렉터리 서비스 구현과 독립적으로 설계되었습니다. 따라서 새로운 서비스, 새로운 서비스, 이미 배포 된 서비스 등 다양한 서비스에 공통된 방식으로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="800c70232f472c7fdce77e7b4637fe7f97636d11" translate="yes" xml:space="preserve">
          <source>This package extends the directory operations of the Java Naming and Directory Interface&lt;sup&gt;TM&lt;/sup&gt; (JNDI). JNDI provides naming and directory functionality to applications written in the Java programming language. It is designed to be independent of any specific naming or directory service implementation. Thus a variety of services--new, emerging, and already deployed ones--can be accessed in a common way.</source>
          <target state="translated">이 패키지는 JNDI ( Java Naming and Directory Interface &lt;sup&gt;TM&lt;/sup&gt; )의 디렉토리 작업을 확장합니다 . JNDI는 Java 프로그래밍 언어로 작성된 애플리케이션에 이름 지정 및 디렉토리 기능을 제공합니다. 특정 이름 지정 또는 디렉토리 서비스 구현과 독립적으로 설계되었습니다. 따라서 새로운 서비스, 이미 구축 된 서비스 등 다양한 서비스에 공통적 인 방식으로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3bbc67e0bae46ec040c3f0acf3bc0f96c93ab907" translate="yes" xml:space="preserve">
          <source>This package is for applications and service providers that deal with LDAPv3 extended operations and controls, as defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;. The core interface in this package is &lt;code&gt;LdapContext&lt;/code&gt;, which defines methods on a context for performing extended operations and handling controls.</source>
          <target state="translated">이 패키지는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251에&lt;/a&gt; 정의 된 대로 LDAPv3 확장 조작 및 제어를 처리하는 애플리케이션 및 서비스 제공자를위한 것 입니다. 이 패키지의 핵심 인터페이스는 &lt;code&gt;LdapContext&lt;/code&gt; 로 , 확장 조작을 수행하고 제어를 처리하기위한 컨텍스트에서 메소드를 정의합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
