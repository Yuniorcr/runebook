<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="05244285f76afd7836f620acbf67042c76ef58fb" translate="yes" xml:space="preserve">
          <source>Interface SerialTree</source>
          <target state="translated">SerialTree 인터페이스</target>
        </trans-unit>
        <trans-unit id="7cd7a09252f2227640a38c947cd462c5331a062b" translate="yes" xml:space="preserve">
          <source>Interface Serializable</source>
          <target state="translated">인터페이스 직렬화 가능</target>
        </trans-unit>
        <trans-unit id="8b07bf55e907bc3c99cf77de737dd6596ef3ccc9" translate="yes" xml:space="preserve">
          <source>Interface ServerRef</source>
          <target state="translated">Interface ServerRef</target>
        </trans-unit>
        <trans-unit id="ee5affd23971151135deed967d68a2878be45e1d" translate="yes" xml:space="preserve">
          <source>Interface ServiceLoader.Provider&amp;lt;S&amp;gt;</source>
          <target state="translated">ServiceLoader.Provider &amp;lt;S&amp;gt; 인터페이스</target>
        </trans-unit>
        <trans-unit id="64a96e98dd3306c90411459ce5ff36f454e509be" translate="yes" xml:space="preserve">
          <source>Interface ServiceRegistry.Filter</source>
          <target state="translated">인터페이스 ServiceRegistry.Filter</target>
        </trans-unit>
        <trans-unit id="ad433e3e917a0005f484ade48fda3ea3cfc2989a" translate="yes" xml:space="preserve">
          <source>Interface Set&amp;lt;E&amp;gt;</source>
          <target state="translated">인터페이스 세트 &amp;lt;E&amp;gt;</target>
        </trans-unit>
        <trans-unit id="66753872022bdca0358336a7be12587495185813" translate="yes" xml:space="preserve">
          <source>Interface Shape</source>
          <target state="translated">인터페이스 모양</target>
        </trans-unit>
        <trans-unit id="498ec2f20e012ea5cb76be696d56109bbf3b077c" translate="yes" xml:space="preserve">
          <source>Interface ShardingKey</source>
          <target state="translated">인터페이스 ShardingKey</target>
        </trans-unit>
        <trans-unit id="8b58686d88dc21e63b059133b5a790e5838a6e6e" translate="yes" xml:space="preserve">
          <source>Interface ShardingKeyBuilder</source>
          <target state="translated">인터페이스 ShardingKeyBuilder</target>
        </trans-unit>
        <trans-unit id="a051a16c1a25646a0655b346e0b2a4080fce6fab" translate="yes" xml:space="preserve">
          <source>Interface ShortType</source>
          <target state="translated">인터페이스 ShortType</target>
        </trans-unit>
        <trans-unit id="a45badef267a1ed41f3e31ab923e50670de3170d" translate="yes" xml:space="preserve">
          <source>Interface ShortValue</source>
          <target state="translated">인터페이스 ShortValue</target>
        </trans-unit>
        <trans-unit id="ae5b387f521de8d82f8aed35db232aa697664cab" translate="yes" xml:space="preserve">
          <source>Interface SignatureMethod</source>
          <target state="translated">인터페이스 SignatureMethod</target>
        </trans-unit>
        <trans-unit id="42d79e44b50769288cb52a3e31101945e6061c43" translate="yes" xml:space="preserve">
          <source>Interface SignatureMethodParameterSpec</source>
          <target state="translated">인터페이스 SignatureMethodParameterSpec</target>
        </trans-unit>
        <trans-unit id="4248cac59739f35e4671998aa694eb9d8e9cb201" translate="yes" xml:space="preserve">
          <source>Interface SignatureProperties</source>
          <target state="translated">인터페이스 SignatureProperties</target>
        </trans-unit>
        <trans-unit id="c0442a07c3a5ad378b7e6de56aaaf69b9228e6f9" translate="yes" xml:space="preserve">
          <source>Interface SignatureProperty</source>
          <target state="translated">인터페이스 SignatureProperty</target>
        </trans-unit>
        <trans-unit id="36ff8ecae9c3f5cbc9098a6617821457e2bf8dad" translate="yes" xml:space="preserve">
          <source>Interface SignedInfo</source>
          <target state="translated">SignedInfo 인터페이스</target>
        </trans-unit>
        <trans-unit id="80ce3637434de0fb827a1f9d844a36f6a1d73d1b" translate="yes" xml:space="preserve">
          <source>Interface SinceTree</source>
          <target state="translated">SinceTree 인터페이스</target>
        </trans-unit>
        <trans-unit id="a981c6637f5521b5bfd50b039b66951addf65f9e" translate="yes" xml:space="preserve">
          <source>Interface SingleSelectionModel</source>
          <target state="translated">인터페이스 SingleSelectionModel</target>
        </trans-unit>
        <trans-unit id="b7b1723be6cf9e1548e2216c2f6ab217741c9ea9" translate="yes" xml:space="preserve">
          <source>Interface Skeleton</source>
          <target state="translated">인터페이스 스켈레톤</target>
        </trans-unit>
        <trans-unit id="fe2ab4f7adc74c9c8144d8be644926ecf4c72a94" translate="yes" xml:space="preserve">
          <source>Interface SocketImplFactory</source>
          <target state="translated">인터페이스 SocketImplFactory</target>
        </trans-unit>
        <trans-unit id="a93b738c9a832123f1ad7ecd918951a8e4891627" translate="yes" xml:space="preserve">
          <source>Interface SocketOption&amp;lt;T&amp;gt;</source>
          <target state="translated">인터페이스 SocketOption &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a66b46065f8be1be7d85301c170fe906cb266efe" translate="yes" xml:space="preserve">
          <source>Interface SocketOptions</source>
          <target state="translated">인터페이스 소켓</target>
        </trans-unit>
        <trans-unit id="5b4179c1b23750b211c5bbc3eb6f3a5db38f50ad" translate="yes" xml:space="preserve">
          <source>Interface SortedMap&amp;lt;K,V&amp;gt;</source>
          <target state="translated">인터페이스 SortedMap &amp;lt;K, V&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bc7e94c79dfd69b75475f3395029415f275c6c72" translate="yes" xml:space="preserve">
          <source>Interface SortedMap&amp;lt;K,​V&amp;gt;</source>
          <target state="translated">인터페이스 SortedMap &amp;lt;K, V&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9a7b242e43361dee641c2d820fffb3435da392fc" translate="yes" xml:space="preserve">
          <source>Interface SortedSet&amp;lt;E&amp;gt;</source>
          <target state="translated">인터페이스 SortedSet &amp;lt;E&amp;gt;</target>
        </trans-unit>
        <trans-unit id="026ceac4607b5ab0696edff3a9ea3f2a61cc6f2b" translate="yes" xml:space="preserve">
          <source>Interface Soundbank</source>
          <target state="translated">인터페이스 사운드 뱅크</target>
        </trans-unit>
        <trans-unit id="acbcfd46bda86cd9b18154c74e4704b6c8d53050" translate="yes" xml:space="preserve">
          <source>Interface Source</source>
          <target state="translated">인터페이스 소스</target>
        </trans-unit>
        <trans-unit id="d8900770aa550d0e8001c6358567972ea8d12a06" translate="yes" xml:space="preserve">
          <source>Interface SourceCodeAnalysis.CompletionInfo</source>
          <target state="translated">인터페이스 SourceCodeAnalysis.CompletionInfo</target>
        </trans-unit>
        <trans-unit id="c7d649ad69a055be6fbde48b916ef0c0a7cb5963" translate="yes" xml:space="preserve">
          <source>Interface SourceCodeAnalysis.Documentation</source>
          <target state="translated">인터페이스 SourceCodeAnalysis.Documentation</target>
        </trans-unit>
        <trans-unit id="59c40f8fe2b61d7aaf6c0897d0f927f33c2438af" translate="yes" xml:space="preserve">
          <source>Interface SourceCodeAnalysis.SnippetWrapper</source>
          <target state="translated">인터페이스 SourceCodeAnalysis.SnippetWrapper</target>
        </trans-unit>
        <trans-unit id="fbbd87fcb68f4f3c4909a49d6d825fa0ae2a4a94" translate="yes" xml:space="preserve">
          <source>Interface SourceCodeAnalysis.Suggestion</source>
          <target state="translated">인터페이스 SourceCodeAnalysis.Suggestion</target>
        </trans-unit>
        <trans-unit id="a3d0cc2692021383c5d4b69966400f9e00830668" translate="yes" xml:space="preserve">
          <source>Interface SourceDataLine</source>
          <target state="translated">인터페이스 SourceDataLine</target>
        </trans-unit>
        <trans-unit id="dfae4660858f810573c2958540ef861f21face3a" translate="yes" xml:space="preserve">
          <source>Interface SourceLocator</source>
          <target state="translated">인터페이스 SourceLocator</target>
        </trans-unit>
        <trans-unit id="7ebf5fe2fe927ef73853dd583f33922217365711" translate="yes" xml:space="preserve">
          <source>Interface SourcePositions</source>
          <target state="translated">인터페이스 SourcePositions</target>
        </trans-unit>
        <trans-unit id="7aaebee0ae4a98d3fff734209b58058e8298771e" translate="yes" xml:space="preserve">
          <source>Interface SpinnerModel</source>
          <target state="translated">SpinnerModel 인터페이스</target>
        </trans-unit>
        <trans-unit id="a891827bd377de3f409fd32813eda9065b1845fb" translate="yes" xml:space="preserve">
          <source>Interface Spliterator&amp;lt;T&amp;gt;</source>
          <target state="translated">인터페이스 스플리터 &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8bbee6a822b66744167742237dcf04a7bdea04f2" translate="yes" xml:space="preserve">
          <source>Interface Spliterator.OfDouble</source>
          <target state="translated">인터페이스 Spliterator.OfDouble</target>
        </trans-unit>
        <trans-unit id="bef3e98869d99d8b87dca59320397f4d5693a508" translate="yes" xml:space="preserve">
          <source>Interface Spliterator.OfInt</source>
          <target state="translated">인터페이스 Spliterator.OfInt</target>
        </trans-unit>
        <trans-unit id="ad6ac0e4afc121657ea55dc92af6dd6ec642cd14" translate="yes" xml:space="preserve">
          <source>Interface Spliterator.OfLong</source>
          <target state="translated">인터페이스 Spliterator.OfLong</target>
        </trans-unit>
        <trans-unit id="d22fd64156875214f167b4a86c3276b6ca53e99c" translate="yes" xml:space="preserve">
          <source>Interface Spliterator.OfPrimitive&amp;lt;T,T_CONS,T_SPLITR extends Spliterator.OfPrimitive&amp;lt;T,T_CONS,T_SPLITR&amp;gt;&amp;gt;</source>
          <target state="translated">인터페이스 Spliterator.OfPrimitive &amp;lt;T, T_CONS, T_SPLITR은 Spliterator.OfPrimitive &amp;lt;T, T_CONS, T_SPLITR &amp;gt;&amp;gt;을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="effe17f63968cb57c9bccc21ff5ef0d866a25def" translate="yes" xml:space="preserve">
          <source>Interface Spliterator.OfPrimitive&amp;lt;T,​T_CONS,​T_SPLITR extends Spliterator.OfPrimitive&amp;lt;T,​T_CONS,​T_SPLITR&amp;gt;&amp;gt;</source>
          <target state="translated">Interface Spliterator.OfPrimitive &amp;lt;T, T_CONS, T_SPLITR은 Spliterator.OfPrimitive &amp;lt;T, T_CONS, T_SPLITR &amp;gt;&amp;gt;을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="d1b146f85a29c2cfa76a60f094d3a4c77136e593" translate="yes" xml:space="preserve">
          <source>Interface StackFrame</source>
          <target state="translated">인터페이스 StackFrame</target>
        </trans-unit>
        <trans-unit id="6eade70d2991f70d5c78d6e3b3d8827049cb4047" translate="yes" xml:space="preserve">
          <source>Interface StackWalker.StackFrame</source>
          <target state="translated">인터페이스 StackWalker.StackFrame</target>
        </trans-unit>
        <trans-unit id="3c2f436fd478daf83a1d4abd2a3ef5d26fb08b1a" translate="yes" xml:space="preserve">
          <source>Interface StandardJavaFileManager</source>
          <target state="translated">인터페이스 StandardJavaFileManager</target>
        </trans-unit>
        <trans-unit id="6eca887d36330e3da58c59b43bae57bca0e979d3" translate="yes" xml:space="preserve">
          <source>Interface StandardJavaFileManager.PathFactory</source>
          <target state="translated">인터페이스 StandardJavaFileManager.PathFactory</target>
        </trans-unit>
        <trans-unit id="03b59537d54e7fd6a8f959023fac7baebde3c4e1" translate="yes" xml:space="preserve">
          <source>Interface StartDocument</source>
          <target state="translated">인터페이스 StartDocument</target>
        </trans-unit>
        <trans-unit id="ec6089b61d8c1432b6c935cd67dba69d6b952301" translate="yes" xml:space="preserve">
          <source>Interface StartElement</source>
          <target state="translated">인터페이스 StartElement</target>
        </trans-unit>
        <trans-unit id="f4e03e4cbf40fce0a25c7f7609c69515ba2f91a0" translate="yes" xml:space="preserve">
          <source>Interface StartElementTree</source>
          <target state="translated">인터페이스 StartElementTree</target>
        </trans-unit>
        <trans-unit id="d3b8bdfdbe166b8728a4760a115e868c4a221289" translate="yes" xml:space="preserve">
          <source>Interface StateEditable</source>
          <target state="translated">인터페이스 StateEditable</target>
        </trans-unit>
        <trans-unit id="dc8a2479f8d230e8d8e275362d58c33813b4f7a9" translate="yes" xml:space="preserve">
          <source>Interface StateFactory</source>
          <target state="translated">인터페이스 StateFactory</target>
        </trans-unit>
        <trans-unit id="e73c7614fefb9e4f0e77f1086d9b148d1ffae845" translate="yes" xml:space="preserve">
          <source>Interface Statement</source>
          <target state="translated">인터페이스 문</target>
        </trans-unit>
        <trans-unit id="a309fee8915b74f57d1bebf0250df02122644ea1" translate="yes" xml:space="preserve">
          <source>Interface StatementEventListener</source>
          <target state="translated">인터페이스 StatementEventListener</target>
        </trans-unit>
        <trans-unit id="776b416246a93467cc6439db4f6bbaf667995575" translate="yes" xml:space="preserve">
          <source>Interface StatementTree</source>
          <target state="translated">인터페이스 StatementTree</target>
        </trans-unit>
        <trans-unit id="b0edece1b8315c1c84ddcd20c376d70d266d6613" translate="yes" xml:space="preserve">
          <source>Interface StepEvent</source>
          <target state="translated">인터페이스 StepEvent</target>
        </trans-unit>
        <trans-unit id="4a1e48755a043823652d0541368009eec5d59036" translate="yes" xml:space="preserve">
          <source>Interface StepRequest</source>
          <target state="translated">인터페이스 StepRequest</target>
        </trans-unit>
        <trans-unit id="628c366fad6160d050b46865a990b02f300b4198" translate="yes" xml:space="preserve">
          <source>Interface Stream&amp;lt;T&amp;gt;</source>
          <target state="translated">인터페이스 스트림 &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="084232c2e52652613c997f7b812721fddb1aba59" translate="yes" xml:space="preserve">
          <source>Interface Stream.Builder&amp;lt;T&amp;gt;</source>
          <target state="translated">인터페이스 Stream.Builder &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="acd68d869daa8958d8b2f8cc1f37757cf678c415" translate="yes" xml:space="preserve">
          <source>Interface StreamFilter</source>
          <target state="translated">인터페이스 StreamFilter</target>
        </trans-unit>
        <trans-unit id="f7fc722d992bc2f1c40675228bf75b316df21f80" translate="yes" xml:space="preserve">
          <source>Interface StringMonitorMBean</source>
          <target state="translated">인터페이스 StringMonitorMBean</target>
        </trans-unit>
        <trans-unit id="6eb142a239fb38f753a40e82956df31ebe28bbbc" translate="yes" xml:space="preserve">
          <source>Interface StringReference</source>
          <target state="translated">인터페이스 StringReference</target>
        </trans-unit>
        <trans-unit id="edad9777b066eaac2d9996132f4fd25a53275db5" translate="yes" xml:space="preserve">
          <source>Interface Stroke</source>
          <target state="translated">인터페이스 스트로크</target>
        </trans-unit>
        <trans-unit id="2e598af37badf03c265596870dd369012f22af55" translate="yes" xml:space="preserve">
          <source>Interface Struct</source>
          <target state="translated">인터페이스 구조</target>
        </trans-unit>
        <trans-unit id="2a14cd9c519fb3ac52aa431ac3042f7f745cb78b" translate="yes" xml:space="preserve">
          <source>Interface Style</source>
          <target state="translated">인터페이스 스타일</target>
        </trans-unit>
        <trans-unit id="4cb63dbd0b0678040fc9c47cb277385ad09940ac" translate="yes" xml:space="preserve">
          <source>Interface StyleSheet</source>
          <target state="translated">인터페이스 StyleSheet</target>
        </trans-unit>
        <trans-unit id="00613df8cc402b86c1e264e077cd58845fdab7b7" translate="yes" xml:space="preserve">
          <source>Interface StyleSheetList</source>
          <target state="translated">인터페이스 StyleSheetList</target>
        </trans-unit>
        <trans-unit id="75e4e9c2714b210b0bdbc5bc54347f08283b78db" translate="yes" xml:space="preserve">
          <source>Interface StyledDocument</source>
          <target state="translated">인터페이스 StyledDocument</target>
        </trans-unit>
        <trans-unit id="83ece7d526aef2204a482b01ca89f1538e164295" translate="yes" xml:space="preserve">
          <source>Interface Summary</source>
          <target state="translated">인터페이스 요약</target>
        </trans-unit>
        <trans-unit id="5a4e50968951bcc8a6c43dce1abcfac1227c1e54" translate="yes" xml:space="preserve">
          <source>Interface SummaryTree</source>
          <target state="translated">인터페이스 요약</target>
        </trans-unit>
        <trans-unit id="d67059500b76b2cb401e624caea19b2122bc5e9b" translate="yes" xml:space="preserve">
          <source>Interface Supplier&amp;lt;T&amp;gt;</source>
          <target state="translated">인터페이스 공급 업체 &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bef519a8750b9af7fa0dc251b4bb2854fb63b13a" translate="yes" xml:space="preserve">
          <source>Interface SupportedValuesAttribute</source>
          <target state="translated">인터페이스 SupportedValuesAttribute</target>
        </trans-unit>
        <trans-unit id="e249597ac7202aa365efa1c863655dc0df9bc3cb" translate="yes" xml:space="preserve">
          <source>Interface SupportedValuesAttribute is a tagging interface which a printing attribute class implements to indicate the attribute describes the supported values for another attribute.</source>
          <target state="translated">SupportedValuesAttribute 인터페이스는 속성이 다른 속성에 지원되는 값을 기술하고있는 것을 나타내는 인쇄 속성 클래스가 구현하는 태그 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="6a34fc5d9f35623b200da164160ddcf4ef4627b7" translate="yes" xml:space="preserve">
          <source>Interface SupportedValuesAttribute is a tagging interface which a printing attribute class implements to indicate the attribute describes the supported values for another attribute. For example, if a Print Service instance supports the &lt;a href=&quot;standard/copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute, the Print Service instance will have a &lt;a href=&quot;standard/copiessupported&quot;&gt;&lt;code&gt;CopiesSupported&lt;/code&gt;&lt;/a&gt; attribute, which is a SupportedValuesAttribute giving the legal values a client may specify for the &lt;a href=&quot;standard/copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">SupportedValuesAttribute 인터페이스는 속성이 다른 속성에 지원되는 값을 기술하고있는 것을 나타내는 인쇄 속성 클래스가 구현하는 태그 인터페이스입니다. 예를 들어, 인쇄 서비스 인스턴스가 &lt;a href=&quot;standard/copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt; 속성을 지원하면 인쇄 서비스 인스턴스는 &lt;a href=&quot;standard/copiessupported&quot;&gt; &lt;code&gt;CopiesSupported&lt;/code&gt; &lt;/a&gt; 속성 을 갖게되며 , 이는 CopiesSupported 속성으로, 클라이언트가 &lt;a href=&quot;standard/copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt; 속성에 대해 지정할 수있는 유효한 값을 제공하는 SupportedValuesAttribute 입니다.</target>
        </trans-unit>
        <trans-unit id="ca4a1808974c30dad114bbd6346c59d26fce783d" translate="yes" xml:space="preserve">
          <source>Interface SwingConstants</source>
          <target state="translated">인터페이스 SwingConstants</target>
        </trans-unit>
        <trans-unit id="32d4aa45461b4d11685b3e6e995a1659a88ae34a" translate="yes" xml:space="preserve">
          <source>Interface SwitchExpressionTree</source>
          <target state="translated">인터페이스 SwitchExpressionTree</target>
        </trans-unit>
        <trans-unit id="6a704364f5b3d4276f56a58c51d3dcf0e902627f" translate="yes" xml:space="preserve">
          <source>Interface SwitchTree</source>
          <target state="translated">인터페이스 SwitchTree</target>
        </trans-unit>
        <trans-unit id="80f4d3b2025a0eed0e8a46628cee0de14711e431" translate="yes" xml:space="preserve">
          <source>Interface SyncResolver</source>
          <target state="translated">인터페이스 SyncResolver</target>
        </trans-unit>
        <trans-unit id="386b0d5e4676490b77bf6e4a361b2c6524ee736f" translate="yes" xml:space="preserve">
          <source>Interface SynchronizedTree</source>
          <target state="translated">인터페이스 SynchronizedTree</target>
        </trans-unit>
        <trans-unit id="9da4e0c2532df001515c229273332c4add1c081e" translate="yes" xml:space="preserve">
          <source>Interface SynthConstants</source>
          <target state="translated">인터페이스 SynthConstants</target>
        </trans-unit>
        <trans-unit id="309d6b383a1d4126457125d0a015e98492d2e398" translate="yes" xml:space="preserve">
          <source>Interface SynthIcon</source>
          <target state="translated">인터페이스 SynthIcon</target>
        </trans-unit>
        <trans-unit id="9d4178fed1a23a3c643806da26b4ed14be62acef" translate="yes" xml:space="preserve">
          <source>Interface SynthUI</source>
          <target state="translated">인터페이스 SynthUI</target>
        </trans-unit>
        <trans-unit id="1a0cd52b401b12a47e8df4fadd830c404c1e534a" translate="yes" xml:space="preserve">
          <source>Interface Synthesizer</source>
          <target state="translated">인터페이스 신시사이저</target>
        </trans-unit>
        <trans-unit id="236791548bd9a59c29f3c91f9d12e9ff8d075951" translate="yes" xml:space="preserve">
          <source>Interface System.Logger</source>
          <target state="translated">인터페이스 System.Logger</target>
        </trans-unit>
        <trans-unit id="102a94c98005b0e6d7c12495061261b7a24b532a" translate="yes" xml:space="preserve">
          <source>Interface SystemEventListener</source>
          <target state="translated">SystemEventListener 인터페이스</target>
        </trans-unit>
        <trans-unit id="8e3588c4bf449d96c14dcf91b1608acc5b99285b" translate="yes" xml:space="preserve">
          <source>Interface SystemPropertyTree</source>
          <target state="translated">인터페이스 SystemPropertyTree</target>
        </trans-unit>
        <trans-unit id="d249799f7af5f6eceb303eb0869fc7fb42881a3a" translate="yes" xml:space="preserve">
          <source>Interface SystemSleepListener</source>
          <target state="translated">인터페이스 SystemSleepListener</target>
        </trans-unit>
        <trans-unit id="3b2bb4c5d7a606bc3f7c7af3dd8299c130b60fbb" translate="yes" xml:space="preserve">
          <source>Interface TabExpander</source>
          <target state="translated">인터페이스 TabExpander</target>
        </trans-unit>
        <trans-unit id="4329646ef7197eeb7e34b5c67bd77a7920dc783f" translate="yes" xml:space="preserve">
          <source>Interface TabableView</source>
          <target state="translated">인터페이스 TabableView</target>
        </trans-unit>
        <trans-unit id="a7d0b01559e6c23ae9aa60e1c4bc94a9343156f3" translate="yes" xml:space="preserve">
          <source>Interface TableCellEditor</source>
          <target state="translated">TableCellEditor 인터페이스</target>
        </trans-unit>
        <trans-unit id="888b7d30d6808faa367c11bdb816f3db570ff90b" translate="yes" xml:space="preserve">
          <source>Interface TableCellRenderer</source>
          <target state="translated">TableCellRenderer 인터페이스</target>
        </trans-unit>
        <trans-unit id="2c9bc5c31f9891e08c0f0c381ce85c4c99b9fe90" translate="yes" xml:space="preserve">
          <source>Interface TableColumnModel</source>
          <target state="translated">TableColumnModel 인터페이스</target>
        </trans-unit>
        <trans-unit id="c5157aa51dd2574c3e58ed7f010b54c040f88a02" translate="yes" xml:space="preserve">
          <source>Interface TableColumnModelListener</source>
          <target state="translated">TableColumnModelListener 인터페이스</target>
        </trans-unit>
        <trans-unit id="defe040914f893dcfe74a2f8128e9849bda25dbc" translate="yes" xml:space="preserve">
          <source>Interface TableModel</source>
          <target state="translated">인터페이스 TableModel</target>
        </trans-unit>
        <trans-unit id="ff066821354cc62fd8b7c1da74ef1df90dee2909" translate="yes" xml:space="preserve">
          <source>Interface TableModelListener</source>
          <target state="translated">TableModelListener 인터페이스</target>
        </trans-unit>
        <trans-unit id="d11fa408f7dea7cdcf4f42bb08e3393f99d02859" translate="yes" xml:space="preserve">
          <source>Interface TabularData</source>
          <target state="translated">인터페이스 TabularData</target>
        </trans-unit>
        <trans-unit id="93c40b3392905aa3764e171a4b7ef512bb18c3cf" translate="yes" xml:space="preserve">
          <source>Interface Taglet</source>
          <target state="translated">인터페이스 Taglet</target>
        </trans-unit>
        <trans-unit id="77015080a5dd38cfb01c259b89b299edc469c686" translate="yes" xml:space="preserve">
          <source>Interface TargetDataLine</source>
          <target state="translated">인터페이스 TargetDataLine</target>
        </trans-unit>
        <trans-unit id="42199b7ea2591c600ab6d2a702defd66c1c157e3" translate="yes" xml:space="preserve">
          <source>Interface TaskListener</source>
          <target state="translated">인터페이스 TaskListener</target>
        </trans-unit>
        <trans-unit id="3398b6388b683a063957fb05cce9395efbf892c8" translate="yes" xml:space="preserve">
          <source>Interface Templates</source>
          <target state="translated">인터페이스 템플릿</target>
        </trans-unit>
        <trans-unit id="95c445b29659de324a46d2504d8ef07aafb30e16" translate="yes" xml:space="preserve">
          <source>Interface TemplatesHandler</source>
          <target state="translated">인터페이스 TemplatesHandler</target>
        </trans-unit>
        <trans-unit id="dcf36813e660abcba6e05f15c48360d359b5e8e0" translate="yes" xml:space="preserve">
          <source>Interface Temporal</source>
          <target state="translated">임시 인터페이스</target>
        </trans-unit>
        <trans-unit id="1d3afb1b64f75ab23f721b5c5546a4aa2eb87c1e" translate="yes" xml:space="preserve">
          <source>Interface TemporalAccessor</source>
          <target state="translated">인터페이스 TemporalAccessor</target>
        </trans-unit>
        <trans-unit id="a0848f8a70ce2a91be49e91d69e90f65076e0ec7" translate="yes" xml:space="preserve">
          <source>Interface TemporalAdjuster</source>
          <target state="translated">인터페이스 TemporalAdjuster</target>
        </trans-unit>
        <trans-unit id="7748827b72ccc55adb41cd656be941a20fe070e6" translate="yes" xml:space="preserve">
          <source>Interface TemporalAmount</source>
          <target state="translated">인터페이스 임시 금액</target>
        </trans-unit>
        <trans-unit id="9aa5a3c08872ec1d07c5b037a0fdb7305677a723" translate="yes" xml:space="preserve">
          <source>Interface TemporalField</source>
          <target state="translated">인터페이스 TemporalField</target>
        </trans-unit>
        <trans-unit id="c939454601f80e7f001acf49cc0f500e34fb5619" translate="yes" xml:space="preserve">
          <source>Interface TemporalQuery&amp;lt;R&amp;gt;</source>
          <target state="translated">인터페이스 TemporalQuery &amp;lt;R&amp;gt;</target>
        </trans-unit>
        <trans-unit id="55781285b9c217b5a2662d7e675fd46874401ee5" translate="yes" xml:space="preserve">
          <source>Interface TemporalUnit</source>
          <target state="translated">인터페이스 TemporalUnit</target>
        </trans-unit>
        <trans-unit id="8c058e4faec67a719229b26575362a3a2a70a1e5" translate="yes" xml:space="preserve">
          <source>Interface Text</source>
          <target state="translated">인터페이스 텍스트</target>
        </trans-unit>
        <trans-unit id="d994df4f012f8faabe22468f65040ad9c6548c30" translate="yes" xml:space="preserve">
          <source>Interface TextListener</source>
          <target state="translated">인터페이스 TextListener</target>
        </trans-unit>
        <trans-unit id="529800fb96e4b99e550eaf549baa7d195dcff5a1" translate="yes" xml:space="preserve">
          <source>Interface TextTree</source>
          <target state="translated">인터페이스 TextTree</target>
        </trans-unit>
        <trans-unit id="39952c3b26d6f62f41caeb32edc9981f29117caa" translate="yes" xml:space="preserve">
          <source>Interface Thread.UncaughtExceptionHandler</source>
          <target state="translated">인터페이스 Thread.UncaughtExceptionHandler</target>
        </trans-unit>
        <trans-unit id="9b820aa6c127207992b0b7b5841e84f07ac9f4ba" translate="yes" xml:space="preserve">
          <source>Interface ThreadDeathEvent</source>
          <target state="translated">ThreadDeathEvent 인터페이스</target>
        </trans-unit>
        <trans-unit id="1ed20468f54b3dcefa593fa2e94961706f6392fa" translate="yes" xml:space="preserve">
          <source>Interface ThreadDeathRequest</source>
          <target state="translated">ThreadDeathRequest 인터페이스</target>
        </trans-unit>
        <trans-unit id="a32a8c004bd3858a0dff8a1d93542b20a1808e2a" translate="yes" xml:space="preserve">
          <source>Interface ThreadFactory</source>
          <target state="translated">인터페이스 ThreadFactory</target>
        </trans-unit>
        <trans-unit id="65db7759e1e4226472f32e9c09958e7e51392161" translate="yes" xml:space="preserve">
          <source>Interface ThreadGroupReference</source>
          <target state="translated">ThreadGroupReference 인터페이스</target>
        </trans-unit>
        <trans-unit id="5344252e7d1b2b4a96b483a15a5abf96f2e9330d" translate="yes" xml:space="preserve">
          <source>Interface ThreadMXBean</source>
          <target state="translated">인터페이스 ThreadMXBean</target>
        </trans-unit>
        <trans-unit id="afb14a7c407f9f3c66fca6cd3d76a8c1a3a6f456" translate="yes" xml:space="preserve">
          <source>Interface ThreadReference</source>
          <target state="translated">인터페이스 ThreadReference</target>
        </trans-unit>
        <trans-unit id="bdff0c6bb7a44ba39331145c101531a03dfe9c4e" translate="yes" xml:space="preserve">
          <source>Interface ThreadStartEvent</source>
          <target state="translated">ThreadStartEvent 인터페이스</target>
        </trans-unit>
        <trans-unit id="0051d3a00149f937b224284194320b25e24a9115" translate="yes" xml:space="preserve">
          <source>Interface ThreadStartRequest</source>
          <target state="translated">ThreadStartRequest 인터페이스</target>
        </trans-unit>
        <trans-unit id="53d2226ddf3e2146c777136f90c6f6fcdce84e4f" translate="yes" xml:space="preserve">
          <source>Interface ThrowTree</source>
          <target state="translated">ThrowTree 인터페이스</target>
        </trans-unit>
        <trans-unit id="f068b36ebe8273cad20329901cda2829c6ca563c" translate="yes" xml:space="preserve">
          <source>Interface ThrowsTree</source>
          <target state="translated">인터페이스 ThrowsTree</target>
        </trans-unit>
        <trans-unit id="2fb0c73fe5cc6a6497c0db5edffeb2d4a5cba36d" translate="yes" xml:space="preserve">
          <source>Interface TileObserver</source>
          <target state="translated">인터페이스 TileObserver</target>
        </trans-unit>
        <trans-unit id="32bf7617e4e6bd287550a854b412fc450ac24463" translate="yes" xml:space="preserve">
          <source>Interface TimerMBean</source>
          <target state="translated">인터페이스 타이머</target>
        </trans-unit>
        <trans-unit id="076ca4b14767d36de6c967434356dddb5f29f2de" translate="yes" xml:space="preserve">
          <source>Interface ToDoubleBiFunction&amp;lt;T,U&amp;gt;</source>
          <target state="translated">ToDoubleBiFunction &amp;lt;T, U&amp;gt; 인터페이스</target>
        </trans-unit>
        <trans-unit id="21c8f5c38fd6bed64883c98a3a6e40a6c4b3fa60" translate="yes" xml:space="preserve">
          <source>Interface ToDoubleBiFunction&amp;lt;T,​U&amp;gt;</source>
          <target state="translated">인터페이스 ToDoubleBiFunction &amp;lt;T, U&amp;gt;</target>
        </trans-unit>
        <trans-unit id="731f0b6b79b5f65fd6c1deeb54b7c0dbe6527be2" translate="yes" xml:space="preserve">
          <source>Interface ToDoubleFunction&amp;lt;T&amp;gt;</source>
          <target state="translated">ToDoubleFunction &amp;lt;T&amp;gt; 인터페이스</target>
        </trans-unit>
        <trans-unit id="a072ac7856d0e98b0b44c34bcee4c46ba11a8258" translate="yes" xml:space="preserve">
          <source>Interface ToIntBiFunction&amp;lt;T,U&amp;gt;</source>
          <target state="translated">ToIntBiFunction &amp;lt;T, U&amp;gt; 인터페이스</target>
        </trans-unit>
        <trans-unit id="76d80615b2a9281dbbfe2f21f95ee437d59eafdd" translate="yes" xml:space="preserve">
          <source>Interface ToIntBiFunction&amp;lt;T,​U&amp;gt;</source>
          <target state="translated">인터페이스 ToIntBiFunction &amp;lt;T, U&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c17966c03d977482fefb9118511126e68f4c3ab8" translate="yes" xml:space="preserve">
          <source>Interface ToIntFunction&amp;lt;T&amp;gt;</source>
          <target state="translated">ToIntFunction &amp;lt;T&amp;gt; 인터페이스</target>
        </trans-unit>
        <trans-unit id="5d997b7761074226e56b33418557b1a70815af53" translate="yes" xml:space="preserve">
          <source>Interface ToLongBiFunction&amp;lt;T,U&amp;gt;</source>
          <target state="translated">ToLongBiFunction &amp;lt;T, U&amp;gt; 인터페이스</target>
        </trans-unit>
        <trans-unit id="b9f9255b0c0522d86cbac61b0cdd987306860065" translate="yes" xml:space="preserve">
          <source>Interface ToLongBiFunction&amp;lt;T,​U&amp;gt;</source>
          <target state="translated">인터페이스 ToLongBiFunction &amp;lt;T, U&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5738e5988cbef5c9b8165d533f1dee24b8f6db5a" translate="yes" xml:space="preserve">
          <source>Interface ToLongFunction&amp;lt;T&amp;gt;</source>
          <target state="translated">ToLongFunction &amp;lt;T&amp;gt; 인터페이스</target>
        </trans-unit>
        <trans-unit id="5056234f622a8dd256c225ab654b499b944f4889" translate="yes" xml:space="preserve">
          <source>Interface Tool</source>
          <target state="translated">인터페이스 도구</target>
        </trans-unit>
        <trans-unit id="c9a14ec9218008479e630e09de1911c851de8189" translate="yes" xml:space="preserve">
          <source>Interface ToolProvider</source>
          <target state="translated">인터페이스 ToolProvider</target>
        </trans-unit>
        <trans-unit id="4e843652ac90778a0b724eb23909b6a2d97426df" translate="yes" xml:space="preserve">
          <source>Interface TopLevelWindowListener</source>
          <target state="translated">인터페이스 TopLevelWindowListener</target>
        </trans-unit>
        <trans-unit id="34e6ec6d28d4f6bc197ae95ad6e383388e0a3b2b" translate="yes" xml:space="preserve">
          <source>Interface TransactionalWriter</source>
          <target state="translated">인터페이스 TransactionalWriter</target>
        </trans-unit>
        <trans-unit id="14b9f6d56ca1d770ba41e72d835157b0b2df8e1d" translate="yes" xml:space="preserve">
          <source>Interface TransferQueue&amp;lt;E&amp;gt;</source>
          <target state="translated">인터페이스 TransferQueue &amp;lt;E&amp;gt;</target>
        </trans-unit>
        <trans-unit id="80a820c36d424526c1566a44e7663206cc4b97eb" translate="yes" xml:space="preserve">
          <source>Interface Transferable</source>
          <target state="translated">양도 가능한 인터페이스</target>
        </trans-unit>
        <trans-unit id="bca4a20ece388e6c493c3e68cf1d2bb2b93483d7" translate="yes" xml:space="preserve">
          <source>Interface Transform</source>
          <target state="translated">인터페이스 변환</target>
        </trans-unit>
        <trans-unit id="c1962d51981bc4ecf1bf9de896f04a5ee460c017" translate="yes" xml:space="preserve">
          <source>Interface TransformParameterSpec</source>
          <target state="translated">인터페이스 TransformParameterSpec</target>
        </trans-unit>
        <trans-unit id="12ad72b78802c7b1a153b0122c7061103b70a944" translate="yes" xml:space="preserve">
          <source>Interface TransformerHandler</source>
          <target state="translated">인터페이스 TransformerHandler</target>
        </trans-unit>
        <trans-unit id="7d2faf57ef36dd4764c040dbb65f4ec0c195ff6f" translate="yes" xml:space="preserve">
          <source>Interface Transmitter</source>
          <target state="translated">인터페이스 송신기</target>
        </trans-unit>
        <trans-unit id="686be44771e61aea816c8256c40ea64341086ee5" translate="yes" xml:space="preserve">
          <source>Interface Transparency</source>
          <target state="translated">인터페이스 투명성</target>
        </trans-unit>
        <trans-unit id="f64bf9b3d497797e73db1866a10fb6ae9d054391" translate="yes" xml:space="preserve">
          <source>Interface Transport</source>
          <target state="translated">인터페이스 전송</target>
        </trans-unit>
        <trans-unit id="d27021b7ca3d5a1f5e69d1af6016903428211094" translate="yes" xml:space="preserve">
          <source>Interface Tree</source>
          <target state="translated">인터페이스 트리</target>
        </trans-unit>
        <trans-unit id="475b83d4315bdbcdb1ea022bc2a7541835102cd4" translate="yes" xml:space="preserve">
          <source>Interface TreeCellEditor</source>
          <target state="translated">TreeCellEditor 인터페이스</target>
        </trans-unit>
        <trans-unit id="22cbb4808d161b4d485819fd139f168097b28fea" translate="yes" xml:space="preserve">
          <source>Interface TreeCellRenderer</source>
          <target state="translated">TreeCellRenderer 인터페이스</target>
        </trans-unit>
        <trans-unit id="b037208e1774a60f6404cca35411955170b0699f" translate="yes" xml:space="preserve">
          <source>Interface TreeExpansionListener</source>
          <target state="translated">인터페이스 TreeExpansionListener</target>
        </trans-unit>
        <trans-unit id="7905cfb1a2c9284a687aae34e9b8ea87b8a3a1ca" translate="yes" xml:space="preserve">
          <source>Interface TreeModel</source>
          <target state="translated">인터페이스 TreeModel</target>
        </trans-unit>
        <trans-unit id="e168bbd661e3f591cba3d9d2332eb0960f3aa918" translate="yes" xml:space="preserve">
          <source>Interface TreeModelListener</source>
          <target state="translated">인터페이스 TreeModelListener</target>
        </trans-unit>
        <trans-unit id="a9a5c78f7d07bfd2d69b0a9b1ff556e88c548547" translate="yes" xml:space="preserve">
          <source>Interface TreeNode</source>
          <target state="translated">인터페이스 TreeNode</target>
        </trans-unit>
        <trans-unit id="1fb912673b2c9c12d3d67f8496af3e1f22dd974f" translate="yes" xml:space="preserve">
          <source>Interface TreeSelectionListener</source>
          <target state="translated">인터페이스 TreeSelectionListener</target>
        </trans-unit>
        <trans-unit id="90231037927a5890693849ed1d4b31b5d4958f47" translate="yes" xml:space="preserve">
          <source>Interface TreeSelectionModel</source>
          <target state="translated">인터페이스 TreeSelectionModel</target>
        </trans-unit>
        <trans-unit id="681dff5b55dfde8cd6fa70cc740c52ccee98a69e" translate="yes" xml:space="preserve">
          <source>Interface TreeVisitor&amp;lt;R,​P&amp;gt;</source>
          <target state="translated">인터페이스 TreeVisitor &amp;lt;R, P&amp;gt;</target>
        </trans-unit>
        <trans-unit id="70e2b1fa9c3d9bdb3f5f39782c8fb6360f1ee691" translate="yes" xml:space="preserve">
          <source>Interface TreeWalker</source>
          <target state="translated">TreeWalker 인터페이스</target>
        </trans-unit>
        <trans-unit id="1b300235fe29029a439bba3c8aa4718bd3b615d8" translate="yes" xml:space="preserve">
          <source>Interface TreeWillExpandListener</source>
          <target state="translated">인터페이스 TreeWillExpandListener</target>
        </trans-unit>
        <trans-unit id="203896f9657897c4da78eb5bf803aa7c7a0127db" translate="yes" xml:space="preserve">
          <source>Interface TrustManager</source>
          <target state="translated">인터페이스 TrustManager</target>
        </trans-unit>
        <trans-unit id="96852b232606dba6225ac423a1c0dd568fdd492f" translate="yes" xml:space="preserve">
          <source>Interface TryTree</source>
          <target state="translated">TryTree 인터페이스</target>
        </trans-unit>
        <trans-unit id="645792d8d9563befb8631b65d3d747e9cf9c977e" translate="yes" xml:space="preserve">
          <source>Interface Type</source>
          <target state="translated">인터페이스 유형</target>
        </trans-unit>
        <trans-unit id="08741fa72c3efb9d67d404a5935e381c39cc8c71" translate="yes" xml:space="preserve">
          <source>Interface TypeBasedGuardingDynamicLinker</source>
          <target state="translated">인터페이스 유형 BasedGuardingDynamicLinker</target>
        </trans-unit>
        <trans-unit id="a8e3cb26a1c3812b88fb3a4af502bf4d2d1e819e" translate="yes" xml:space="preserve">
          <source>Interface TypeCastTree</source>
          <target state="translated">인터페이스 유형</target>
        </trans-unit>
        <trans-unit id="8462ba763f813534cefe2bb9052880aafea0f885" translate="yes" xml:space="preserve">
          <source>Interface TypeComponent</source>
          <target state="translated">인터페이스 유형</target>
        </trans-unit>
        <trans-unit id="f0215058268ea9d60fa859f94e7383add0846077" translate="yes" xml:space="preserve">
          <source>Interface TypeDescriptor</source>
          <target state="translated">인터페이스 유형 설명자</target>
        </trans-unit>
        <trans-unit id="a17456e185b02ae26558b7a60f9e42c03710f2da" translate="yes" xml:space="preserve">
          <source>Interface TypeDescriptor.OfField&amp;lt;F extends TypeDescriptor.OfField&amp;lt;F&amp;gt;&amp;gt;</source>
          <target state="translated">인터페이스 TypeDescriptor.OfField &amp;lt;F는 TypeDescriptor.OfField &amp;lt;F &amp;gt;&amp;gt;를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="40d4b4a11390ae7044db328bd567877baa0a294e" translate="yes" xml:space="preserve">
          <source>Interface TypeDescriptor.OfMethod&amp;lt;F extends &lt;a href=&quot;typedescriptor.offield&quot;&gt;TypeDescriptor.OfField&lt;/a&gt;&amp;lt;F&amp;gt;,​M extends TypeDescriptor.OfMethod&amp;lt;F,​M&amp;gt;&amp;gt;</source>
          <target state="translated">인터페이스 TypeDescriptor.OfMethod &amp;lt;F extends &lt;a href=&quot;typedescriptor.offield&quot;&gt;TypeDescriptor.OfField&lt;/a&gt; &amp;lt;F&amp;gt;, M extends TypeDescriptor.OfMethod &amp;lt;F, M &amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9dd9cbb01976cfc9a2de133bd38e82ef33f84b40" translate="yes" xml:space="preserve">
          <source>Interface TypeElement</source>
          <target state="translated">인터페이스 유형</target>
        </trans-unit>
        <trans-unit id="5a31dc47ec4ae0730f5177a40fb024a8d6a1d0e9" translate="yes" xml:space="preserve">
          <source>Interface TypeInfo</source>
          <target state="translated">인터페이스 유형 정보</target>
        </trans-unit>
        <trans-unit id="da754ba213546dec4c5ae8ce36e2291f18a17c25" translate="yes" xml:space="preserve">
          <source>Interface TypeMirror</source>
          <target state="translated">인터페이스 유형</target>
        </trans-unit>
        <trans-unit id="23de2f036af75260b0dac47829068992a83d2da5" translate="yes" xml:space="preserve">
          <source>Interface TypeParameterElement</source>
          <target state="translated">인터페이스 유형</target>
        </trans-unit>
        <trans-unit id="611836a873a52a71f7181caaac45f6348d4d1d66" translate="yes" xml:space="preserve">
          <source>Interface TypeParameterTree</source>
          <target state="translated">인터페이스 유형</target>
        </trans-unit>
        <trans-unit id="64abbaca01e0b6532d8f74ad6abdf3a5f4b1d613" translate="yes" xml:space="preserve">
          <source>Interface TypeVariable</source>
          <target state="translated">인터페이스 유형</target>
        </trans-unit>
        <trans-unit id="bad8397803c4805ff46235da6721756449aa9db6" translate="yes" xml:space="preserve">
          <source>Interface TypeVariable&amp;lt;D extends &lt;a href=&quot;genericdeclaration&quot;&gt;GenericDeclaration&lt;/a&gt;&amp;gt;</source>
          <target state="translated">인터페이스 유형 변수 &amp;lt;D는 &lt;a href=&quot;genericdeclaration&quot;&gt;GenericDeclaration을&lt;/a&gt; 확장합니다. &amp;gt;</target>
        </trans-unit>
        <trans-unit id="c9cfb3cd020707fce87a427754398b2d836ad08a" translate="yes" xml:space="preserve">
          <source>Interface TypeVisitor&amp;lt;R,P&amp;gt;</source>
          <target state="translated">인터페이스 유형 방문자 &amp;lt;R, P&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ed8e8fa08d62f87b86394f270d8072b142ecc249" translate="yes" xml:space="preserve">
          <source>Interface TypeVisitor&amp;lt;R,​P&amp;gt;</source>
          <target state="translated">인터페이스 유형 방문자 &amp;lt;R, P&amp;gt;</target>
        </trans-unit>
        <trans-unit id="70f73f412d22faa3833d1fbb1c9b469c337baa08" translate="yes" xml:space="preserve">
          <source>Interface Types</source>
          <target state="translated">인터페이스 유형</target>
        </trans-unit>
        <trans-unit id="514f9f25f0114c99f31b27f21424e086221325d2" translate="yes" xml:space="preserve">
          <source>Interface UIClientPropertyKey</source>
          <target state="translated">인터페이스 UIClientPropertyKey</target>
        </trans-unit>
        <trans-unit id="d728440459c308bcd9a638ccaaa5ee18957df8c5" translate="yes" xml:space="preserve">
          <source>Interface UIDefaults.ActiveValue</source>
          <target state="translated">인터페이스 UIDefaults.ActiveValue</target>
        </trans-unit>
        <trans-unit id="336637e919a853fdf68ad0225c3717bf53a6aff2" translate="yes" xml:space="preserve">
          <source>Interface UIDefaults.LazyValue</source>
          <target state="translated">인터페이스 UIDefaults.LazyValue</target>
        </trans-unit>
        <trans-unit id="76a20891c92dc2bba81156aef3909884cb293148" translate="yes" xml:space="preserve">
          <source>Interface UIEvent</source>
          <target state="translated">인터페이스 UIEvent</target>
        </trans-unit>
        <trans-unit id="e40a774b2bcb403927c16b63391527b5029fd17d" translate="yes" xml:space="preserve">
          <source>Interface UIResource</source>
          <target state="translated">인터페이스 UIResource</target>
        </trans-unit>
        <trans-unit id="45bf0f9d374a829365ff13638c10a1c94e6312c4" translate="yes" xml:space="preserve">
          <source>Interface URIDereferencer</source>
          <target state="translated">인터페이스 URIDereferencer</target>
        </trans-unit>
        <trans-unit id="a03d75be970775b939d16f0f1c6cf523874dc0bb" translate="yes" xml:space="preserve">
          <source>Interface URIException</source>
          <target state="translated">인터페이스 URIException</target>
        </trans-unit>
        <trans-unit id="33864fe74656565bffb1f91873541916e2462aef" translate="yes" xml:space="preserve">
          <source>Interface URIException is a mixin interface which a subclass of &lt;a href=&quot;printexception&quot;&gt;&lt;code&gt;PrintException&lt;/code&gt;&lt;/a&gt; can implement to report an error condition involving a URI address.</source>
          <target state="translated">인터페이스 URIException은 &lt;a href=&quot;printexception&quot;&gt; &lt;code&gt;PrintException&lt;/code&gt; &lt;/a&gt; 의 서브 클래스가 URI 주소와 관련된 오류 조건을보고하기 위해 구현할 수 있는 믹스 인 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="544f34560fcefb6db874cf62386cd712c4dd74e7" translate="yes" xml:space="preserve">
          <source>Interface URIException is a mixin interface which a subclass of &lt;a href=&quot;printexception&quot;&gt;&lt;code&gt;PrintException&lt;/code&gt;&lt;/a&gt; can implement to report an error condition involving a URI address. The Print Service API does not define any print exception classes that implement interface URIException, that being left to the Print Service implementor's discretion.</source>
          <target state="translated">인터페이스 URIException은 &lt;a href=&quot;printexception&quot;&gt; &lt;code&gt;PrintException&lt;/code&gt; &lt;/a&gt; 의 서브 클래스가 URI 주소와 관련된 오류 조건을보고하기 위해 구현할 수 있는 믹스 인 인터페이스입니다 . 인쇄 서비스 API는 인터페이스 URIException을 구현하고 인쇄 서비스 구현 자의 재량에 맡겨진 인쇄 예외 클래스를 정의하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dbcc28c2d2fa47b9925ac3190b696484f9599d9f" translate="yes" xml:space="preserve">
          <source>Interface URIReference</source>
          <target state="translated">인터페이스 URIReference</target>
        </trans-unit>
        <trans-unit id="608ad2b3e8cb840b79c92f9623f778b65581c02d" translate="yes" xml:space="preserve">
          <source>Interface URIResolver</source>
          <target state="translated">인터페이스 URIResolver</target>
        </trans-unit>
        <trans-unit id="86e9e5112179f423f38c01a42ef6aab0dd15848f" translate="yes" xml:space="preserve">
          <source>Interface URLStreamHandlerFactory</source>
          <target state="translated">인터페이스 URLStreamHandlerFactory</target>
        </trans-unit>
        <trans-unit id="4e6e51ab3c0eddbc900bc2189161eb50351ab8f9" translate="yes" xml:space="preserve">
          <source>Interface UnaryOperator&amp;lt;T&amp;gt;</source>
          <target state="translated">인터페이스 UnaryOperator &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b0120112c0082e58731d9067d08239d5f1830f95" translate="yes" xml:space="preserve">
          <source>Interface UnaryTree</source>
          <target state="translated">인터페이스 UnaryTree</target>
        </trans-unit>
        <trans-unit id="8193385f259e5d88cff7cf1bff1e92d3a9433696" translate="yes" xml:space="preserve">
          <source>Interface UndoableEdit</source>
          <target state="translated">인터페이스 UndoableEdit</target>
        </trans-unit>
        <trans-unit id="65e033b8ebf6824ab790c0bf869d83a16ecad29e" translate="yes" xml:space="preserve">
          <source>Interface UndoableEditListener</source>
          <target state="translated">UndoableEditListener 인터페이스</target>
        </trans-unit>
        <trans-unit id="7a2c48ebf187b203f081af42cd8990f5b40a586c" translate="yes" xml:space="preserve">
          <source>Interface UnionType</source>
          <target state="translated">인터페이스 UnionType</target>
        </trans-unit>
        <trans-unit id="f762688e66882428b6ffebeacba6677786bc2685" translate="yes" xml:space="preserve">
          <source>Interface UnionTypeTree</source>
          <target state="translated">인터페이스 UnionTypeTree</target>
        </trans-unit>
        <trans-unit id="2e099e9f73f5700b5787dd402ea2cf565001130e" translate="yes" xml:space="preserve">
          <source>Interface UnixOperatingSystemMXBean</source>
          <target state="translated">인터페이스 UnixOperatingSystemMXBean</target>
        </trans-unit>
        <trans-unit id="8cc85e8d73024a186cf5ceae8a1bdd93ca68d661" translate="yes" xml:space="preserve">
          <source>Interface UnknownBlockTagTree</source>
          <target state="translated">UnknownBlockTagTree 인터페이스</target>
        </trans-unit>
        <trans-unit id="8918679315511ceb34a50389bc709094bd245dcb" translate="yes" xml:space="preserve">
          <source>Interface UnknownInlineTagTree</source>
          <target state="translated">UnknownInlineTagTree 인터페이스</target>
        </trans-unit>
        <trans-unit id="f07debf13af9d81aa2a65fb1627d87653b49a216" translate="yes" xml:space="preserve">
          <source>Interface Unreferenced</source>
          <target state="translated">참조되지 않은 인터페이스</target>
        </trans-unit>
        <trans-unit id="131ce12b513d5cf3d68694ffb308a9903f89b499" translate="yes" xml:space="preserve">
          <source>Interface UnsolicitedNotification</source>
          <target state="translated">원하지 않는 인터페이스</target>
        </trans-unit>
        <trans-unit id="2af3153e591178f7747770c866c02fcc9707acd6" translate="yes" xml:space="preserve">
          <source>Interface UnsolicitedNotificationListener</source>
          <target state="translated">UnsolicitedNotificationListener 인터페이스</target>
        </trans-unit>
        <trans-unit id="668d9adfee60f7e093d277e97801818729f91e8a" translate="yes" xml:space="preserve">
          <source>Interface UserDataHandler</source>
          <target state="translated">인터페이스 UserDataHandler</target>
        </trans-unit>
        <trans-unit id="8146ff091b9603b02ba595f64f7322e1de288b6f" translate="yes" xml:space="preserve">
          <source>Interface UserDefinedFileAttributeView</source>
          <target state="translated">인터페이스 UserDefinedFileAttributeView</target>
        </trans-unit>
        <trans-unit id="fd7c78292b3065c1e3e197525e0b47c77d4db363" translate="yes" xml:space="preserve">
          <source>Interface UserPrincipal</source>
          <target state="translated">인터페이스 UserPrincipal</target>
        </trans-unit>
        <trans-unit id="665e1d38e14d80f1a6eed39c34c4315f4c0dff2c" translate="yes" xml:space="preserve">
          <source>Interface UserSessionListener</source>
          <target state="translated">UserSessionListener 인터페이스</target>
        </trans-unit>
        <trans-unit id="3c084b858ad0c744c2c297f8e9c013b8504df081" translate="yes" xml:space="preserve">
          <source>Interface UsesTree</source>
          <target state="translated">인터페이스 UsesTree</target>
        </trans-unit>
        <trans-unit id="680caefe661f873f8b9afd6cb5b28c953e653e53" translate="yes" xml:space="preserve">
          <source>Interface VMDeathEvent</source>
          <target state="translated">VMDeathEvent 인터페이스</target>
        </trans-unit>
        <trans-unit id="c932b7815d4625556087e4443bda465366b6010b" translate="yes" xml:space="preserve">
          <source>Interface VMDeathRequest</source>
          <target state="translated">VMDeathRequest 인터페이스</target>
        </trans-unit>
        <trans-unit id="e9f9cb423a5b294972f903551bcaf0c393b35d02" translate="yes" xml:space="preserve">
          <source>Interface VMDisconnectEvent</source>
          <target state="translated">인터페이스 VMDisconnectEvent</target>
        </trans-unit>
        <trans-unit id="34abeb54cd9ab154312513be1e7b33af9036257a" translate="yes" xml:space="preserve">
          <source>Interface VMStartEvent</source>
          <target state="translated">인터페이스 VMStartEvent</target>
        </trans-unit>
        <trans-unit id="d7d9aa3ca009815f141f051f3ed6c9aed110d5b0" translate="yes" xml:space="preserve">
          <source>Interface Value</source>
          <target state="translated">인터페이스 값</target>
        </trans-unit>
        <trans-unit id="43dc8f72498b58b305d1b97fc0ef6d2dff1fcebd" translate="yes" xml:space="preserve">
          <source>Interface ValueExp</source>
          <target state="translated">인터페이스 가치</target>
        </trans-unit>
        <trans-unit id="6facfdaf0a66ee057be10651b8f8d8909e03ada1" translate="yes" xml:space="preserve">
          <source>Interface ValueTree</source>
          <target state="translated">인터페이스 ValueTree</target>
        </trans-unit>
        <trans-unit id="dbe896b7f24a4255de7fd1e3d4bec14ac49c6a63" translate="yes" xml:space="preserve">
          <source>Interface VariableElement</source>
          <target state="translated">인터페이스 VariableElement</target>
        </trans-unit>
        <trans-unit id="d885c1f4e57d79783ae57e5e700a48cd1c1c937f" translate="yes" xml:space="preserve">
          <source>Interface VariableTree</source>
          <target state="translated">인터페이스 VariableTree</target>
        </trans-unit>
        <trans-unit id="a735b7bf68184304985d56cc04ed8191e5b7162f" translate="yes" xml:space="preserve">
          <source>Interface VersionTree</source>
          <target state="translated">인터페이스 VersionTree</target>
        </trans-unit>
        <trans-unit id="b67b2fa5e2a3c58793967e55c66a6b541ac9c4ed" translate="yes" xml:space="preserve">
          <source>Interface VetoableChangeListener</source>
          <target state="translated">VetoableChangeListener 인터페이스</target>
        </trans-unit>
        <trans-unit id="3a9634afd775b35ff792e9cf98ac1fe82516f2b0" translate="yes" xml:space="preserve">
          <source>Interface ViewCSS</source>
          <target state="translated">인터페이스 ViewCSS</target>
        </trans-unit>
        <trans-unit id="ebd409447604ca73e03197032a2667c6a3f37ad3" translate="yes" xml:space="preserve">
          <source>Interface ViewFactory</source>
          <target state="translated">인터페이스 ViewFactory</target>
        </trans-unit>
        <trans-unit id="0c2e1150b03eafedbea1e6975f23740c01f726ea" translate="yes" xml:space="preserve">
          <source>Interface VirtualMachine</source>
          <target state="translated">VirtualMachine 인터페이스</target>
        </trans-unit>
        <trans-unit id="d49cf053bf8333e660bd5bf0527d002ecddd0fda" translate="yes" xml:space="preserve">
          <source>Interface VirtualMachineManager</source>
          <target state="translated">VirtualMachineManager 인터페이스</target>
        </trans-unit>
        <trans-unit id="142dc7ac09a32ae41f18754f138a462b8442ae50" translate="yes" xml:space="preserve">
          <source>Interface Visibility</source>
          <target state="translated">인터페이스 가시성</target>
        </trans-unit>
        <trans-unit id="c18dd8cd5b7a85a4d5c2bad3299b32cd87d7d88b" translate="yes" xml:space="preserve">
          <source>Interface VoidType</source>
          <target state="translated">인터페이스 VoidType</target>
        </trans-unit>
        <trans-unit id="447c63b32baaa673c69db91605332864a6c2fa98" translate="yes" xml:space="preserve">
          <source>Interface VoidValue</source>
          <target state="translated">인터페이스 VoidValue</target>
        </trans-unit>
        <trans-unit id="87d09ed8d739de4c2022c4fe7631c9d6b8bf13da" translate="yes" xml:space="preserve">
          <source>Interface WatchEvent&amp;lt;T&amp;gt;</source>
          <target state="translated">인터페이스 WatchEvent &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="953a2016b6ecd5d8f2923e6e299c3e458167c465" translate="yes" xml:space="preserve">
          <source>Interface WatchEvent.Kind&amp;lt;T&amp;gt;</source>
          <target state="translated">인터페이스 WatchEvent.Kind &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6e38f3cf27466000bf6006420d9433a6b3f21a45" translate="yes" xml:space="preserve">
          <source>Interface WatchEvent.Modifier</source>
          <target state="translated">인터페이스 WatchEvent.Modifier</target>
        </trans-unit>
        <trans-unit id="db1e90081272f3547472bdf37b18673d24809c5e" translate="yes" xml:space="preserve">
          <source>Interface WatchKey</source>
          <target state="translated">인터페이스 워치 키</target>
        </trans-unit>
        <trans-unit id="9ec6042631086bc44e4ebef44b173a69e543295e" translate="yes" xml:space="preserve">
          <source>Interface WatchService</source>
          <target state="translated">인터페이스 WatchService</target>
        </trans-unit>
        <trans-unit id="4583ab0c4ebacc7c3019e7b4a831028777526597" translate="yes" xml:space="preserve">
          <source>Interface Watchable</source>
          <target state="translated">볼 수있는 인터페이스</target>
        </trans-unit>
        <trans-unit id="875465b2256b28dc19c93656486ae31deedef9eb" translate="yes" xml:space="preserve">
          <source>Interface WatchpointEvent</source>
          <target state="translated">인터페이스 WatchpointEvent</target>
        </trans-unit>
        <trans-unit id="5b3a4ed3f506f491781408b6bdac3cd70ca3cfa2" translate="yes" xml:space="preserve">
          <source>Interface WatchpointRequest</source>
          <target state="translated">인터페이스 WatchpointRequest</target>
        </trans-unit>
        <trans-unit id="dda3adadf9fe75351afb58bfcd01df1555ba7ee0" translate="yes" xml:space="preserve">
          <source>Interface WebRowSet</source>
          <target state="translated">WebRowSet 인터페이스</target>
        </trans-unit>
        <trans-unit id="59bcc277d39b6add035eb1f0f577f2b7e2336e71" translate="yes" xml:space="preserve">
          <source>Interface WebSocket</source>
          <target state="translated">WebSocket 인터페이스</target>
        </trans-unit>
        <trans-unit id="78d918c64285fc627db8be36a8f71fe2ac73b393" translate="yes" xml:space="preserve">
          <source>Interface WebSocket.Builder</source>
          <target state="translated">WebSocket.Builder 인터페이스</target>
        </trans-unit>
        <trans-unit id="25687431efae8469826e95191c88f0b72e46743b" translate="yes" xml:space="preserve">
          <source>Interface WebSocket.Listener</source>
          <target state="translated">WebSocket.Listener 인터페이스</target>
        </trans-unit>
        <trans-unit id="c75756973c3d50d66150ca111bb05bd49c4304ca" translate="yes" xml:space="preserve">
          <source>Interface WhileLoopTree</source>
          <target state="translated">WhileLoopTree 인터페이스</target>
        </trans-unit>
        <trans-unit id="9420978d474a42ca75ba003c0a7f9d22ab845b12" translate="yes" xml:space="preserve">
          <source>Interface WildcardTree</source>
          <target state="translated">인터페이스 WildcardTree</target>
        </trans-unit>
        <trans-unit id="2a3a69a25d9c37dc53df49c38fb005eb812e8414" translate="yes" xml:space="preserve">
          <source>Interface WildcardType</source>
          <target state="translated">와일드 카드 인터페이스</target>
        </trans-unit>
        <trans-unit id="051a83edf851a8d3e443844a59c47757d42b4c07" translate="yes" xml:space="preserve">
          <source>Interface WindowConstants</source>
          <target state="translated">인터페이스 WindowConstants</target>
        </trans-unit>
        <trans-unit id="b9bd9d70e5ee8e8c9b157ddc06cbf87ace979d7e" translate="yes" xml:space="preserve">
          <source>Interface WindowFocusListener</source>
          <target state="translated">WindowFocusListener 인터페이스</target>
        </trans-unit>
        <trans-unit id="1658a18f22881e955ca5b3e0ff804741648eaddb" translate="yes" xml:space="preserve">
          <source>Interface WindowListener</source>
          <target state="translated">인터페이스 WindowListener</target>
        </trans-unit>
        <trans-unit id="7da36588c68972ae6bb1b347dd02737f2076fb53" translate="yes" xml:space="preserve">
          <source>Interface WindowStateListener</source>
          <target state="translated">WindowStateListener 인터페이스</target>
        </trans-unit>
        <trans-unit id="826699e4fcb71c9494f79c40c1f7c79cc8b75510" translate="yes" xml:space="preserve">
          <source>Interface Wrapper</source>
          <target state="translated">인터페이스 래퍼</target>
        </trans-unit>
        <trans-unit id="a0270480ab9e14e855ffd6f212a24d678bbd4f13" translate="yes" xml:space="preserve">
          <source>Interface WritableByteChannel</source>
          <target state="translated">인터페이스 WritableByteChannel</target>
        </trans-unit>
        <trans-unit id="382e1de86b277277a17586bdd2bb25abc7cd78d2" translate="yes" xml:space="preserve">
          <source>Interface WritableRenderedImage</source>
          <target state="translated">인터페이스 WritableRenderedImage</target>
        </trans-unit>
        <trans-unit id="506f88a8bcfc507c9807c673a968ef3643f5bbf6" translate="yes" xml:space="preserve">
          <source>Interface X509Data</source>
          <target state="translated">인터페이스 X509Data</target>
        </trans-unit>
        <trans-unit id="842d9c3f9f1ed5a2d3c6fdc351e10af370cbbbf2" translate="yes" xml:space="preserve">
          <source>Interface X509Extension</source>
          <target state="translated">인터페이스 X509Extension</target>
        </trans-unit>
        <trans-unit id="7b2d0de2e4b16e555b2e636f353c613e805c1579" translate="yes" xml:space="preserve">
          <source>Interface X509IssuerSerial</source>
          <target state="translated">인터페이스 X509IssuerSerial</target>
        </trans-unit>
        <trans-unit id="c2071c7c0a9b7a7c8eedeba5a991f58bdb172229" translate="yes" xml:space="preserve">
          <source>Interface X509KeyManager</source>
          <target state="translated">인터페이스 X509KeyManager</target>
        </trans-unit>
        <trans-unit id="242c0bed698fe11c71caa14750ae7e7b420f6cee" translate="yes" xml:space="preserve">
          <source>Interface X509TrustManager</source>
          <target state="translated">인터페이스 X509TrustManager</target>
        </trans-unit>
        <trans-unit id="b308a59c6272961da1af6c1007d5a371ed259cc6" translate="yes" xml:space="preserve">
          <source>Interface XAConnection</source>
          <target state="translated">인터페이스 XAConnection</target>
        </trans-unit>
        <trans-unit id="d108ea9e87da6c8cc6b8064943bbb12e8d16365c" translate="yes" xml:space="preserve">
          <source>Interface XAConnectionBuilder</source>
          <target state="translated">인터페이스 XAConnectionBuilder</target>
        </trans-unit>
        <trans-unit id="8d5533bfd4a27708bf4ca9a32abbc3d3fc39d997" translate="yes" xml:space="preserve">
          <source>Interface XADataSource</source>
          <target state="translated">인터페이스 XADataSource</target>
        </trans-unit>
        <trans-unit id="be43dece4adc97d53301e3580c527bfb981b39f8" translate="yes" xml:space="preserve">
          <source>Interface XAResource</source>
          <target state="translated">인터페이스 XAResource</target>
        </trans-unit>
        <trans-unit id="92e7a0d4c51a284a71619869d83d802f4798bb29" translate="yes" xml:space="preserve">
          <source>Interface XECKey</source>
          <target state="translated">인터페이스 XECKey</target>
        </trans-unit>
        <trans-unit id="e46cd7dded75b2133f20a9c1b334755a15034f79" translate="yes" xml:space="preserve">
          <source>Interface XECPrivateKey</source>
          <target state="translated">인터페이스 XECPrivateKey</target>
        </trans-unit>
        <trans-unit id="a1683dcdd1a95beee9ca1d920f79a8a4a775ca33" translate="yes" xml:space="preserve">
          <source>Interface XECPublicKey</source>
          <target state="translated">인터페이스 XECPublicKey</target>
        </trans-unit>
        <trans-unit id="fa51216796d9c928041b8ee32b68246b7c1ba303" translate="yes" xml:space="preserve">
          <source>Interface XMLCryptoContext</source>
          <target state="translated">인터페이스 XMLCryptoContext</target>
        </trans-unit>
        <trans-unit id="070f0379ccd73d9be9cc9ec13922bdd70778e3f6" translate="yes" xml:space="preserve">
          <source>Interface XMLEvent</source>
          <target state="translated">인터페이스 XMLEvent</target>
        </trans-unit>
        <trans-unit id="eddb551b85f1ed297fb77c35f4113e4e73b4208b" translate="yes" xml:space="preserve">
          <source>Interface XMLEventAllocator</source>
          <target state="translated">인터페이스 XMLEventAllocator</target>
        </trans-unit>
        <trans-unit id="6ef2438ff5ac4c3f99fc29ecc3357673b7e34b18" translate="yes" xml:space="preserve">
          <source>Interface XMLEventConsumer</source>
          <target state="translated">XMLEventConsumer 인터페이스</target>
        </trans-unit>
        <trans-unit id="6d2b01644ad918e0d49f0ef81066f034fdbbaa0e" translate="yes" xml:space="preserve">
          <source>Interface XMLEventReader</source>
          <target state="translated">인터페이스 XMLEventReader</target>
        </trans-unit>
        <trans-unit id="b0b6c219c54a4b5e9ca2354c89982253bf14caf4" translate="yes" xml:space="preserve">
          <source>Interface XMLEventWriter</source>
          <target state="translated">인터페이스 XMLEventWriter</target>
        </trans-unit>
        <trans-unit id="0b96ceb64b36842f229a514a6a79466521eef774" translate="yes" xml:space="preserve">
          <source>Interface XMLFilter</source>
          <target state="translated">인터페이스 XMLFilter</target>
        </trans-unit>
        <trans-unit id="18eb20270723cacd269f8f07c0a0cd367c13340f" translate="yes" xml:space="preserve">
          <source>Interface XMLObject</source>
          <target state="translated">인터페이스 XMLObject</target>
        </trans-unit>
        <trans-unit id="2ea76cd542682b5bc6c1b95a7e744f510ae7cb65" translate="yes" xml:space="preserve">
          <source>Interface XMLReader</source>
          <target state="translated">인터페이스 XMLReader</target>
        </trans-unit>
        <trans-unit id="a9d052f0dff1b21c386f10d6a49504be5493c157" translate="yes" xml:space="preserve">
          <source>Interface XMLReporter</source>
          <target state="translated">인터페이스 XMLReporter</target>
        </trans-unit>
        <trans-unit id="bacb81e627e704c0af071eafb371a0773f3d2199" translate="yes" xml:space="preserve">
          <source>Interface XMLResolver</source>
          <target state="translated">인터페이스 XMLResolver</target>
        </trans-unit>
        <trans-unit id="78f4716df983d4452b945749012c7f2d633f0c25" translate="yes" xml:space="preserve">
          <source>Interface XMLSignContext</source>
          <target state="translated">인터페이스 XMLSignContext</target>
        </trans-unit>
        <trans-unit id="04ccfbec13be04c03fee04a65154625620bd6285" translate="yes" xml:space="preserve">
          <source>Interface XMLSignature</source>
          <target state="translated">인터페이스 XMLSignature</target>
        </trans-unit>
        <trans-unit id="d0f92ac44db758701214c2202253d8333bd6fe45" translate="yes" xml:space="preserve">
          <source>Interface XMLSignature.SignatureValue</source>
          <target state="translated">인터페이스 XMLSignature.SignatureValue</target>
        </trans-unit>
        <trans-unit id="83782f0ab8f8ace3d1b9e93a76f73909589c01da" translate="yes" xml:space="preserve">
          <source>Interface XMLStreamConstants</source>
          <target state="translated">인터페이스 XMLStreamConstants</target>
        </trans-unit>
        <trans-unit id="7aba355502480fcd8b9baa207c1179899cde9a1b" translate="yes" xml:space="preserve">
          <source>Interface XMLStreamReader</source>
          <target state="translated">인터페이스 XMLStreamReader</target>
        </trans-unit>
        <trans-unit id="353f4497455337aa8e7943fc8113efd3fe3e2680" translate="yes" xml:space="preserve">
          <source>Interface XMLStreamWriter</source>
          <target state="translated">인터페이스 XMLStreamWriter</target>
        </trans-unit>
        <trans-unit id="3b73185c22c974bf9329d99fcb8542e308cec4a8" translate="yes" xml:space="preserve">
          <source>Interface XMLStructure</source>
          <target state="translated">인터페이스 XMLStructure</target>
        </trans-unit>
        <trans-unit id="92d6d8148b62d885948523d73cf25ff350b8d4d1" translate="yes" xml:space="preserve">
          <source>Interface XMLValidateContext</source>
          <target state="translated">인터페이스 XMLValidateContext</target>
        </trans-unit>
        <trans-unit id="e674b85c86b357ae2ae9050bb2e5f12c8095b39a" translate="yes" xml:space="preserve">
          <source>Interface XPath</source>
          <target state="translated">인터페이스 XPath</target>
        </trans-unit>
        <trans-unit id="f9c8d2afb1ad4a222d833c8313198d04fda07b99" translate="yes" xml:space="preserve">
          <source>Interface XPathEvaluationResult&amp;lt;T&amp;gt;</source>
          <target state="translated">인터페이스 XPathEvaluationResult &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="27a0ce8ba389fdc0bec933f012b7a12d9d5970e7" translate="yes" xml:space="preserve">
          <source>Interface XPathEvaluator</source>
          <target state="translated">인터페이스 XPathEvaluator</target>
        </trans-unit>
        <trans-unit id="19490279fc9174c8700c5d43abc74bf5693abf36" translate="yes" xml:space="preserve">
          <source>Interface XPathExpression</source>
          <target state="translated">인터페이스 XPathExpression</target>
        </trans-unit>
        <trans-unit id="2fbcbd5179b5774fc4f79c33896dbf0d8fc0f861" translate="yes" xml:space="preserve">
          <source>Interface XPathFunction</source>
          <target state="translated">인터페이스 XPathFunction</target>
        </trans-unit>
        <trans-unit id="4169a1dda8a30c2f10b8abe7dec3c01a30d229fe" translate="yes" xml:space="preserve">
          <source>Interface XPathFunctionResolver</source>
          <target state="translated">인터페이스 XPathFunctionResolver</target>
        </trans-unit>
        <trans-unit id="be1c75669383466f2f0320d7df12f132c71c2194" translate="yes" xml:space="preserve">
          <source>Interface XPathNSResolver</source>
          <target state="translated">인터페이스 XPathNSResolver</target>
        </trans-unit>
        <trans-unit id="ac086d7d7d1ca8e9f935386d6e8585237445448a" translate="yes" xml:space="preserve">
          <source>Interface XPathNamespace</source>
          <target state="translated">인터페이스 XPathNamespace</target>
        </trans-unit>
        <trans-unit id="aa3be3bd4de98737f27208d64ec86239b702f1de" translate="yes" xml:space="preserve">
          <source>Interface XPathNodes</source>
          <target state="translated">인터페이스 XPathNodes</target>
        </trans-unit>
        <trans-unit id="46c0005113057c5e6419d981b5b2aae6b445bed2" translate="yes" xml:space="preserve">
          <source>Interface XPathResult</source>
          <target state="translated">인터페이스 XPathResult</target>
        </trans-unit>
        <trans-unit id="3fb164eebb228e0c2783dbb482674453fc601d1d" translate="yes" xml:space="preserve">
          <source>Interface XPathVariableResolver</source>
          <target state="translated">인터페이스 XPathVariableResolver</target>
        </trans-unit>
        <trans-unit id="a886ac997b362abe2e1f1725559e667782cd5940" translate="yes" xml:space="preserve">
          <source>Interface Xid</source>
          <target state="translated">인터페이스 Xid</target>
        </trans-unit>
        <trans-unit id="53088959454e5a692e59c4593008f66a4f32a538" translate="yes" xml:space="preserve">
          <source>Interface XmlReader</source>
          <target state="translated">인터페이스 XmlReader</target>
        </trans-unit>
        <trans-unit id="22f3317064908e4e1481753e93a0693a274f71e5" translate="yes" xml:space="preserve">
          <source>Interface XmlWriter</source>
          <target state="translated">인터페이스 XmlWriter</target>
        </trans-unit>
        <trans-unit id="4d6f2498511b2097716d7c59377429c0e9c633fb" translate="yes" xml:space="preserve">
          <source>Interface YieldTree</source>
          <target state="translated">YieldTree 인터페이스</target>
        </trans-unit>
        <trans-unit id="20c94085a921a07a3ae897c9d7ef59225c2ce636" translate="yes" xml:space="preserve">
          <source>Interface and Description</source>
          <target state="translated">인터페이스 및 설명</target>
        </trans-unit>
        <trans-unit id="8b21729024a3dd126ae3dbeb3acb4ad666b45a5d" translate="yes" xml:space="preserve">
          <source>Interface annotations are checked only on the exact interface that defines the management interface of a Standard MBean or an MXBean, not on its parent interfaces. Method annotations are checked only in the most specific interface in which the method appears; in other words, if a child interface overrides a method from a parent interface, only &lt;code&gt;@DescriptorKey&lt;/code&gt; annotations in the method in the child interface are considered.</source>
          <target state="translated">인터페이스 어노테이션은 상위 인터페이스가 아닌 표준 MBean 또는 MXBean의 관리 인터페이스를 정의하는 정확한 인터페이스에서만 점검됩니다. 메소드 주석은 메소드가 나타나는 가장 구체적인 인터페이스에서만 확인됩니다. 즉, 자식 인터페이스가 부모 인터페이스의 메서드를 재정의하는 경우 자식 인터페이스 의 메서드에있는 &lt;code&gt;@DescriptorKey&lt;/code&gt; 주석 만 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="c577c25ac46ae950b5dd160f33cebbfc3c9d9c7e" translate="yes" xml:space="preserve">
          <source>Interface describing an object capable of rendering a border around the edges of a swing component.</source>
          <target state="translated">스윙 구성 요소의 가장자리 주변에 테두리를 렌더링 할 수있는 개체를 설명하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="efaf0149b84a396e12f4904f92c7537064dc6895" translate="yes" xml:space="preserve">
          <source>Interface describing an object capable of rendering a border around the edges of a swing component. For examples of using borders see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/border.html&quot;&gt;How to Use Borders&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">스윙 구성 요소의 가장자리 주위에 테두리를 렌더링 할 수있는 개체를 설명하는 인터페이스입니다. 테두리 사용의 예는 &lt;em&gt;Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/border.html&quot;&gt;How to Use Borders를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3dc7639223975f1e8f112474fa00302b8c3bd2ed" translate="yes" xml:space="preserve">
          <source>Interface describing an object capable of rendering a border around the edges of a swing component. For examples of using borders see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/border.html&quot;&gt;How to Use Borders&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">스윙 구성 요소의 가장자리 주변에 테두리를 렌더링 할 수있는 개체를 설명하는 인터페이스입니다. 테두리 사용의 예는 &lt;em&gt;Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/border.html&quot;&gt;How to Use Borders를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b9f9a07f5dd5fc2ca352044d6eb03a4fdf31033a" translate="yes" xml:space="preserve">
          <source>Interface for &lt;code&gt;View&lt;/code&gt;s that have size dependent upon tabs.</source>
          <target state="translated">크기가 탭에 따라 달라지는 &lt;code&gt;View&lt;/code&gt; 의 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="d8dfd076e5df5218412f995bb3cb5218172b0d01" translate="yes" xml:space="preserve">
          <source>Interface for JDBC classes which provide the ability to retrieve the delegate instance when the instance in question is in fact a proxy class.</source>
          <target state="translated">해당 인스턴스가 실제로 프록시 클래스 인 경우 위임 인스턴스를 검색하는 기능을 제공하는 JDBC 클래스 용 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="5c27970ebc1fe003830255d22d23d60b2acb6600" translate="yes" xml:space="preserve">
          <source>Interface for a generic styled document.</source>
          <target state="translated">일반 스타일 문서의 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="70acc274e0869481077bf76f7cb44d5ade867747" translate="yes" xml:space="preserve">
          <source>Interface for a list of XML attributes.</source>
          <target state="translated">XML 속성 목록에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="0f333f5277a220fd185624642a0cf5980adfa224" translate="yes" xml:space="preserve">
          <source>Interface for an X.509 extension.</source>
          <target state="translated">X.509 확장을위한 인터페이스.</target>
        </trans-unit>
        <trans-unit id="1b8e3c2b8df32915cc82facb1a43baf3edd2c702" translate="yes" xml:space="preserve">
          <source>Interface for an XML filter.</source>
          <target state="translated">XML 필터 용 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="c31a444afd9235db0efb1f4f02afad2174f43c01" translate="yes" xml:space="preserve">
          <source>Interface for an element's attribute specifications.</source>
          <target state="translated">요소의 속성 사양에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="5678e08f73850dc14e2d1920adb412b4f59b70c9" translate="yes" xml:space="preserve">
          <source>Interface for an observer to register to receive notifications of changes to a text document.</source>
          <target state="translated">관찰자가 텍스트 문서의 변경 사항에 대한 알림을 수신하기 위해 등록하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="efbf5ce34c8997d09276cdd507250e736561610e" translate="yes" xml:space="preserve">
          <source>Interface for associating a SAX event with a document location.</source>
          <target state="translated">SAX 이벤트를 문서 위치와 연결하기위한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="eccc0fc907c8099aa08e07c7b201a6bc80b1d360" translate="yes" xml:space="preserve">
          <source>Interface for call sites managed by a &lt;a href=&quot;dynamiclinker&quot;&gt;&lt;code&gt;DynamicLinker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;dynamiclinker&quot;&gt; &lt;code&gt;DynamicLinker&lt;/code&gt; 에서&lt;/a&gt; 관리하는 통화 사이트를위한 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="0ab2ee74d2761bf0434d4d45c969ebddaabe859b" translate="yes" xml:space="preserve">
          <source>Interface for call sites managed by a &lt;a href=&quot;dynamiclinker&quot;&gt;&lt;code&gt;DynamicLinker&lt;/code&gt;&lt;/a&gt;. Users of Dynalink must use subclasses of &lt;a href=&quot;../../../java.base/java/lang/invoke/callsite&quot;&gt;&lt;code&gt;CallSite&lt;/code&gt;&lt;/a&gt; that also implement this interface as their call site implementations. There is a readily usable &lt;a href=&quot;support/simplerelinkablecallsite&quot;&gt;&lt;code&gt;SimpleRelinkableCallSite&lt;/code&gt;&lt;/a&gt; subclass that implements monomorphic inline caching strategy as well as &lt;a href=&quot;support/chainedcallsite&quot;&gt;&lt;code&gt;ChainedCallSite&lt;/code&gt;&lt;/a&gt; that implements a polymorphic inline caching strategy and retains a chain of previously linked method handles. A relinkable call site will be managed by a &lt;a href=&quot;dynamiclinker&quot;&gt;&lt;code&gt;DynamicLinker&lt;/code&gt;&lt;/a&gt; object after being associated with it using its &lt;a href=&quot;dynamiclinker#link(T)&quot;&gt;&lt;code&gt;DynamicLinker.link(RelinkableCallSite)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;dynamiclinker&quot;&gt; &lt;code&gt;DynamicLinker&lt;/code&gt; 에서&lt;/a&gt; 관리하는 통화 사이트를위한 인터페이스입니다 . Dynalink 사용자는 이 인터페이스를 호출 사이트 구현으로 구현 하는 &lt;a href=&quot;../../../java.base/java/lang/invoke/callsite&quot;&gt; &lt;code&gt;CallSite&lt;/code&gt; 의&lt;/a&gt; 하위 클래스를 사용해야합니다 . 다형성 인라인 캐싱 전략을 구현하고 이전에 연결된 메서드 핸들 체인을 유지하는 &lt;a href=&quot;support/chainedcallsite&quot;&gt; &lt;code&gt;ChainedCallSite&lt;/code&gt; &lt;/a&gt; 뿐만 아니라 모노 모픽 인라인 캐싱 전략을 구현 하는 즉시 사용 가능한 &lt;a href=&quot;support/simplerelinkablecallsite&quot;&gt; &lt;code&gt;SimpleRelinkableCallSite&lt;/code&gt; &lt;/a&gt; 하위 클래스 가 있습니다. 다시 연결할 수있는 호출 사이트는 &lt;a href=&quot;dynamiclinker#link(T)&quot;&gt; &lt;code&gt;DynamicLinker.link(RelinkableCallSite)&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 연결된 후 &lt;a href=&quot;dynamiclinker&quot;&gt; &lt;code&gt;DynamicLinker&lt;/code&gt; &lt;/a&gt; 개체에 의해 관리됩니다 .</target>
        </trans-unit>
        <trans-unit id="fd4f832248adcdda427467c6283bb73223b02f98" translate="yes" xml:space="preserve">
          <source>Interface for determining locally available program elements, such as local variables and imports.</source>
          <target state="translated">로컬 변수 및 가져 오기와 같은 로컬에서 사용 가능한 프로그램 요소를 결정하기위한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="9f9d3c62cb21415d4660a382de79de998531475c" translate="yes" xml:space="preserve">
          <source>Interface for determining locally available program elements, such as local variables and imports. Upon creation, a Scope is associated with a given program position; for example, a &lt;a href=&quot;tree&quot;&gt;tree node&lt;/a&gt;. This position may be used to infer an enclosing method and/or class.</source>
          <target state="translated">로컬 변수 및 가져 오기와 같은 로컬에서 사용 가능한 프로그램 요소를 결정하기위한 인터페이스입니다. 생성시 범위는 주어진 프로그램 위치와 연관됩니다. 예를 들어, &lt;a href=&quot;tree&quot;&gt;트리 노드&lt;/a&gt; . 이 위치는 둘러싸는 메서드 및 / 또는 클래스를 추론하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49937ff685aced211a1d90d65f3ee5c83cdd5c0f" translate="yes" xml:space="preserve">
          <source>Interface for diagnostics from tools.</source>
          <target state="translated">도구 진단을위한 인터페이스.</target>
        </trans-unit>
        <trans-unit id="673e08b5fb8ee02bfbbd40f1618c1406f513a4bf" translate="yes" xml:space="preserve">
          <source>Interface for diagnostics from tools. A diagnostic usually reports a problem at a specific position in a source file. However, not all diagnostics are associated with a position or a file.</source>
          <target state="translated">도구 진단을위한 인터페이스. 진단은 일반적으로 소스 파일의 특정 위치에서 문제를보고합니다. 그러나 모든 진단이 위치 또는 파일과 연관되는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="da24ea279b4bf832a32d82443b9885ef4a920861" translate="yes" xml:space="preserve">
          <source>Interface for document change notifications.</source>
          <target state="translated">문서 변경 알림을위한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="7112b21162851494cd2b0d233a9ddcf97b3c4c31" translate="yes" xml:space="preserve">
          <source>Interface for document change notifications. This provides detailed information to Document observers about how the Document changed. It provides high level information such as type of change and where it occurred, as well as the more detailed structural changes (What Elements were inserted and removed).</source>
          <target state="translated">문서 변경 알림을위한 인터페이스입니다. 문서 관찰자에게 문서 변경 방법에 대한 자세한 정보를 제공합니다. 변경 유형 및 발생 위치와 같은 높은 수준의 정보는 물론보다 자세한 구조적 변경 사항 (삽입 및 제거 된 요소)을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="af8a3e11b328f0c1d2077e2040cadf15af2962d7" translate="yes" xml:space="preserve">
          <source>Interface for extending managed parallelism for tasks running in &lt;a href=&quot;forkjoinpool&quot;&gt;&lt;code&gt;ForkJoinPool&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">&lt;a href=&quot;forkjoinpool&quot;&gt; &lt;code&gt;ForkJoinPool&lt;/code&gt; &lt;/a&gt; 에서 실행중인 작업의 관리 병렬 처리를 확장하기위한 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="bd86abce29c84fe98d4f3207528700d08292c0ff" translate="yes" xml:space="preserve">
          <source>Interface for handlers invoked when a &lt;code&gt;Thread&lt;/code&gt; abruptly terminates due to an uncaught exception.</source>
          <target state="translated">잡히지 않은 예외로 인해 &lt;code&gt;Thread&lt;/code&gt; 갑자기 종료 될 때 호출되는 핸들러에 대한 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="88bca656179e091e41cd0269e6e95b516933d422" translate="yes" xml:space="preserve">
          <source>Interface for locations of file objects.</source>
          <target state="translated">파일 객체의 위치에 대한 인터페이스.</target>
        </trans-unit>
        <trans-unit id="5b4240085fce7dec2a7ffed41566bbc6c29974e5" translate="yes" xml:space="preserve">
          <source>Interface for locations of file objects. Used by file managers to determine where to place or search for file objects.</source>
          <target state="translated">파일 객체의 위치에 대한 인터페이스. 파일 관리자가 파일 객체를 배치하거나 검색 할 위치를 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="01e9fa35948fc0a1dda5d6e2971f4e84e74bfc87" translate="yes" xml:space="preserve">
          <source>Interface for managing owners of Access Control Lists (ACLs) or ACL configurations.</source>
          <target state="translated">ACL (Access Control List) 또는 ACL 구성의 소유자를 관리하기위한 인터페이스.</target>
        </trans-unit>
        <trans-unit id="6604e953619ff4fc40d884d8e1d30058daff0686" translate="yes" xml:space="preserve">
          <source>Interface for managing owners of Access Control Lists (ACLs) or ACL configurations. (Note that the Acl interface in the &lt;code&gt; java.security.acl&lt;/code&gt; package extends this Owner interface.) The initial owner Principal should be specified as an argument to the constructor of the class implementing this interface.</source>
          <target state="translated">액세스 제어 목록 (ACL) 또는 ACL 구성의 소유자를 관리하기위한 인터페이스입니다. ( &lt;code&gt; java.security.acl&lt;/code&gt; 패키지 의 Acl 인터페이스는 이 Owner 인터페이스를 확장합니다.) 초기 소유자 Principal은이 인터페이스를 구현하는 클래스의 생성자에 대한 인수로 지정되어야합니다.</target>
        </trans-unit>
        <trans-unit id="b20fcdc23a887107c34fff48fd18a7f8c34075f7" translate="yes" xml:space="preserve">
          <source>Interface for managing owners of Access Control Lists (ACLs) or ACL configurations. (Note that the Acl interface in the &lt;code&gt;java.security.acl&lt;/code&gt; package extends this Owner interface.) The initial owner Principal should be specified as an argument to the constructor of the class implementing this interface.</source>
          <target state="translated">ACL (Access Control List) 또는 ACL 구성의 소유자를 관리하기위한 인터페이스. ( &lt;code&gt;java.security.acl&lt;/code&gt; 패키지 의 Acl 인터페이스는 이 소유자 인터페이스를 확장합니다.) 초기 소유자 프린시 펄은이 인터페이스를 구현하는 클래스의 생성자에 대한 인수로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="96daa90f1a2021086f740d446e9aaabb01162f0b" translate="yes" xml:space="preserve">
          <source>Interface for objects representing a strategy for converting a method handle to a new type.</source>
          <target state="translated">메서드 핸들을 새 형식으로 변환하기위한 전략을 나타내는 개체에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="85607457de788bb329bce7861f3ceeb1b98d59cf" translate="yes" xml:space="preserve">
          <source>Interface for objects representing a strategy for converting a method handle to a new type. Typical usage is for customizing a language runtime's handling of &lt;a href=&quot;../dynamiclinkerfactory#setAutoConversionStrategy(jdk.dynalink.linker.MethodTypeConversionStrategy)&quot;&gt;&lt;code&gt;method invocation conversions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">메서드 핸들을 새 형식으로 변환하기위한 전략을 나타내는 개체에 대한 인터페이스입니다. 일반적인 사용법은 언어 런타임의 &lt;a href=&quot;../dynamiclinkerfactory#setAutoConversionStrategy(jdk.dynalink.linker.MethodTypeConversionStrategy)&quot;&gt; &lt;code&gt;method invocation conversions&lt;/code&gt; &lt;/a&gt; 처리를 사용자 정의하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="735021fd040975861eeac1dc43f4697140310f14" translate="yes" xml:space="preserve">
          <source>Interface for objects that are used to transform one guarded invocation into another one.</source>
          <target state="translated">보호 된 호출을 다른 호출로 변환하는 데 사용되는 개체의 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="cfa920810a4dca364594530d44640e92ddfe6529" translate="yes" xml:space="preserve">
          <source>Interface for objects that are used to transform one guarded invocation into another one. Typical usage is for implementing &lt;a href=&quot;../dynamiclinkerfactory#setPrelinkTransformer(jdk.dynalink.linker.GuardedInvocationTransformer)&quot;&gt;&lt;code&gt;pre-link transformers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">보호 된 호출을 다른 호출로 변환하는 데 사용되는 개체의 인터페이스입니다. 일반적인 사용은 &lt;a href=&quot;../dynamiclinkerfactory#setPrelinkTransformer(jdk.dynalink.linker.GuardedInvocationTransformer)&quot;&gt; &lt;code&gt;pre-link transformers&lt;/code&gt; &lt;/a&gt; 를 구현하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="3d46e9e76d36a1c940710152fd3054e9a18662b6" translate="yes" xml:space="preserve">
          <source>Interface for read only XML Namespace context processing.</source>
          <target state="translated">읽기 전용 XML 네임 스페이스 컨텍스트 처리를위한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="8dffdbe614a2cc7b7324ae3c584ac9a137c80975" translate="yes" xml:space="preserve">
          <source>Interface for reading an XML document using callbacks.</source>
          <target state="translated">콜백을 사용하여 XML 문서를 읽기위한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="5b44f256eafbc491b15e1b645f5e8529d0793def" translate="yes" xml:space="preserve">
          <source>Interface for receiving diagnostics from tools.</source>
          <target state="translated">도구에서 진단을 받기위한 인터페이스</target>
        </trans-unit>
        <trans-unit id="68e685913e0c09a629572f966467d309e0309d85" translate="yes" xml:space="preserve">
          <source>Interface for recognizing options.</source>
          <target state="translated">옵션 인식을위한 인터페이스.</target>
        </trans-unit>
        <trans-unit id="6a42b73d71600289ba809c5346be7b92d5feb44e" translate="yes" xml:space="preserve">
          <source>Interface for services provided to &lt;a href=&quot;guardingdynamiclinker&quot;&gt;&lt;code&gt;GuardingDynamicLinker&lt;/code&gt;&lt;/a&gt; instances by the &lt;a href=&quot;../dynamiclinker&quot;&gt;&lt;code&gt;DynamicLinker&lt;/code&gt;&lt;/a&gt; that owns them.</source>
          <target state="translated">&lt;a href=&quot;guardingdynamiclinker&quot;&gt; &lt;code&gt;GuardingDynamicLinker&lt;/code&gt; &lt;/a&gt; 인스턴스 를 소유 한 &lt;a href=&quot;../dynamiclinker&quot;&gt; &lt;code&gt;DynamicLinker&lt;/code&gt; &lt;/a&gt; 가 제공하는 서비스에 대한 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="fe673f1f40e32f821c1b0e233e83573817b10c3e" translate="yes" xml:space="preserve">
          <source>Interface implemented by a class interested in hearing about undoable operations.</source>
          <target state="translated">실행 취소 할 수있는 작업에 대해 듣고 싶어하는 클래스에서 구현 한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="1cbe3236cafc51c119e572460374e26a195616d2" translate="yes" xml:space="preserve">
          <source>Interface implemented by an MBean that emits Notifications.</source>
          <target state="translated">통지를 발행하는 MBean에 의해 구현되는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="2c209a3c6e475e2b8c48b102d4ef5316024520eb" translate="yes" xml:space="preserve">
          <source>Interface implemented by an MBean that emits Notifications. It allows a listener to be registered with the MBean as a notification listener.</source>
          <target state="translated">통지를 발행하는 MBean에 의해 구현되는 인터페이스입니다. 리스너를 통지 리스너로서 MBean에 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91c5914df232cf772f4e8d6cf7a72b25227ab08c" translate="yes" xml:space="preserve">
          <source>Interface of methods to get/set socket options.</source>
          <target state="translated">소켓 옵션을 가져 오거나 설정하는 메소드의 인터페이스.</target>
        </trans-unit>
        <trans-unit id="9405a26bb1794ac439ea3fbbb9672a5ffb412bc6" translate="yes" xml:space="preserve">
          <source>Interface of methods to get/set socket options. This interface is implemented by: &lt;b&gt;SocketImpl&lt;/b&gt; and &lt;b&gt;DatagramSocketImpl&lt;/b&gt;. Subclasses of these should override the methods of this interface in order to support their own options.</source>
          <target state="translated">소켓 옵션을 가져 오거나 설정하는 메소드의 인터페이스. 이 인터페이스는 &lt;b&gt;SocketImpl&lt;/b&gt; 및 &lt;b&gt;DatagramSocketImpl로&lt;/b&gt; 구현됩니다 . 이들의 서브 클래스는 자신의 옵션을 지원하기 위해이 인터페이스의 메소드를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="7129d1d3f5dce00e84bed9e19caba735868690ae" translate="yes" xml:space="preserve">
          <source>Interface representing a future for a compilation task.</source>
          <target state="translated">컴파일 작업의 미래를 나타내는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="f1c0fb3ff2ef2cf0f47a01fd6edb73ee965edc99" translate="yes" xml:space="preserve">
          <source>Interface representing a future for a compilation task. The compilation task has not yet started. To start the task, call the &lt;a href=&quot;#call()&quot;&gt;call&lt;/a&gt; method.</source>
          <target state="translated">컴파일 작업의 미래를 나타내는 인터페이스입니다. 컴파일 작업이 아직 시작되지 않았습니다. 작업을 시작하려면 &lt;a href=&quot;#call()&quot;&gt;call&lt;/a&gt; 메서드를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="1adce321d7f3981d66c7a85d2c2ae2d5fa8f5aa5" translate="yes" xml:space="preserve">
          <source>Interface representing a future for a compilation task. The compilation task has not yet started. To start the task, call the &lt;a href=&quot;javacompiler.compilationtask#call--&quot;&gt;call&lt;/a&gt; method.</source>
          <target state="translated">컴파일 작업의 미래를 나타내는 인터페이스입니다. 컴파일 작업이 아직 시작되지 않았습니다. 작업을 시작하려면 &lt;a href=&quot;javacompiler.compilationtask#call--&quot;&gt;call&lt;/a&gt; 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="1700d13fc33493f978f1931f5533d42e44a64577" translate="yes" xml:space="preserve">
          <source>Interface representing a future for a documentation task.</source>
          <target state="translated">설명서 작업의 미래를 나타내는 인터페이스.</target>
        </trans-unit>
        <trans-unit id="e346f09a760e2609650d69d4bbc397ad9ba7f283" translate="yes" xml:space="preserve">
          <source>Interface representing a future for a documentation task. The task has not yet started. To start the task, call the &lt;a href=&quot;#call()&quot;&gt;call&lt;/a&gt; method.</source>
          <target state="translated">문서화 작업의 미래를 나타내는 인터페이스입니다. 작업이 아직 시작되지 않았습니다. 작업을 시작하려면 &lt;a href=&quot;#call()&quot;&gt;call&lt;/a&gt; 메서드를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="28dea9f45b53109e5bca997de1e0942f5877415e" translate="yes" xml:space="preserve">
          <source>Interface representing a future for a documentation task. The task has not yet started. To start the task, call the &lt;a href=&quot;documentationtool.documentationtask#call--&quot;&gt;call&lt;/a&gt; method.</source>
          <target state="translated">설명서 작업의 미래를 나타내는 인터페이스. 작업이 아직 시작되지 않았습니다. 작업을 시작하려면 &lt;a href=&quot;documentationtool.documentationtask#call--&quot;&gt;call&lt;/a&gt; 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="4534d6edd6c2f8d6f2efcd0e1f9edcad4f39a2db" translate="yes" xml:space="preserve">
          <source>Interface representing an Access Control List (ACL).</source>
          <target state="translated">ACL (액세스 제어 목록)을 나타내는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="ed8c31efb41086e9933197c8eb4c8418769c7281" translate="yes" xml:space="preserve">
          <source>Interface representing an Access Control List (ACL). An Access Control List is a data structure used to guard access to resources.</source>
          <target state="translated">ACL (액세스 제어 목록)을 나타내는 인터페이스입니다. 액세스 제어 목록은 리소스에 대한 액세스를 보호하는 데 사용되는 데이터 구조입니다.</target>
        </trans-unit>
        <trans-unit id="ac81823591d970cef844438d61f39d084e80715d" translate="yes" xml:space="preserve">
          <source>Interface table</source>
          <target state="translated">인터페이스 테이블</target>
        </trans-unit>
        <trans-unit id="37bf3b3481213dded328733143aeba542d833ed0" translate="yes" xml:space="preserve">
          <source>Interface that defines the methods which are common between &lt;code&gt;DataSource&lt;/code&gt;, &lt;code&gt;XADataSource&lt;/code&gt; and &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DataSource&lt;/code&gt; , &lt;code&gt;XADataSource&lt;/code&gt; 및 &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; 간에 공통적 인 메소드를 정의하는 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="7d90ae07d987a82beefab2c0badd0c580e41790d" translate="yes" xml:space="preserve">
          <source>Interface to a DSA-specific set of key parameters, which defines a DSA &lt;em&gt;key family&lt;/em&gt;.</source>
          <target state="translated">DSA &lt;em&gt;키 패밀리&lt;/em&gt; 를 정의하는 DSA 특정 키 매개 변수 세트에 대한 인터페이스 .</target>
        </trans-unit>
        <trans-unit id="2be87e6ea9a6c4cdea1ce4da273523eb611c7039" translate="yes" xml:space="preserve">
          <source>Interface to a DSA-specific set of key parameters, which defines a DSA &lt;em&gt;key family&lt;/em&gt;. DSA (Digital Signature Algorithm) is defined in NIST's FIPS-186.</source>
          <target state="translated">DSA &lt;em&gt;키 패밀리&lt;/em&gt; 를 정의하는 DSA 특정 키 매개 변수 세트에 대한 인터페이스 . DSA (Digital Signature Algorithm)는 NIST의 FIPS-186에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e67667e2e0fc70e582ce621b94619de556964e11" translate="yes" xml:space="preserve">
          <source>Interface to be supported by the parser.</source>
          <target state="translated">파서에서 지원할 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="6f432d3564bb7101e0319cbba3fabcf04ee9256e" translate="yes" xml:space="preserve">
          <source>Interface to be supported by the parser. This enables providing a different parser while reusing some of the implementation provided by this editor kit.</source>
          <target state="translated">파서에서 지원할 인터페이스입니다. 이를 통해이 편집기 키트에서 제공하는 일부 구현을 재사용하면서 다른 파서를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09ccb10763e8c1432bf816fe2f8d43afe4faacb1" translate="yes" xml:space="preserve">
          <source>Interface to configure and run a Java shell tool instance.</source>
          <target state="translated">Java 셸 도구 인스턴스를 구성하고 실행하기위한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="6bc498580d21b40229771c3374743ec22f78431f" translate="yes" xml:space="preserve">
          <source>Interface to configure and run a Java shell tool instance. An instance of the builder is created with the static &lt;a href=&quot;#builder()&quot;&gt;&lt;code&gt;builder()&lt;/code&gt;&lt;/a&gt; method. This builder can, optionally, be configured with the configuration methods. All configuration methods return the builder instance for use in chained initialization. All configuration methods have sensible defaults which will be used if they are not called.. After zero or more calls to configuration methods, the tool is launched with a call to &lt;a href=&quot;#run(java.lang.String...)&quot;&gt;&lt;code&gt;run(java.lang.String...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Java 셸 도구 인스턴스를 구성하고 실행하기위한 인터페이스입니다. 빌더의 인스턴스는 정적 &lt;a href=&quot;#builder()&quot;&gt; &lt;code&gt;builder()&lt;/code&gt; &lt;/a&gt; 메소드로 작성됩니다. 이 빌더는 선택적으로 구성 방법으로 구성 할 수 있습니다. 모든 구성 메서드는 체인 초기화에 사용할 빌더 인스턴스를 반환합니다. 모든 구성 메소드에는 호출되지 않은 경우 사용되는 합리적인 기본값이 있습니다. 구성 메소드를 0 개 이상 호출 한 후 도구는 &lt;a href=&quot;#run(java.lang.String...)&quot;&gt; &lt;code&gt;run(java.lang.String...)&lt;/code&gt; &lt;/a&gt; 호출과 함께 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="5d22ef5470895dbd361ec2830859e80357d0957d" translate="yes" xml:space="preserve">
          <source>Interface to define how remote credentials are converted into a JAAS Subject.</source>
          <target state="translated">원격 신임 정보가 JAAS 주제로 변환되는 방법을 정의하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="ab886eda0c7d51f4e649f5e5662798b2b4446683" translate="yes" xml:space="preserve">
          <source>Interface to define how remote credentials are converted into a JAAS Subject. This interface is used by the RMI Connector Server, and can be used by other connector servers.</source>
          <target state="translated">원격 신임 정보가 JAAS 주제로 변환되는 방법을 정의하는 인터페이스입니다. 이 인터페이스는 RMI 커넥터 서버에서 사용되며 다른 커넥터 서버에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19ab26e6549c951d68d0e2c5eed1dd6a4ccdbea9" translate="yes" xml:space="preserve">
          <source>Interface to describe a sequence of character content that can be edited.</source>
          <target state="translated">편집 할 수있는 일련의 문자 콘텐츠를 설명하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="8dda3856b4fbc73ef59c8d93ce635ccfae47a0c1" translate="yes" xml:space="preserve">
          <source>Interface to describe a sequence of character content that can be edited. Implementations may or may not support a history mechanism which will be reflected by whether or not mutations return an UndoableEdit implementation.</source>
          <target state="translated">편집 할 수있는 일련의 문자 콘텐츠를 설명하는 인터페이스입니다. 구현은 변형이 UndoableEdit 구현을 반환하는지 여부에 따라 반영되는 히스토리 메커니즘을 지원하거나 지원하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="142098eebd16d50cb962cbc1aa4a6ae8aad68a97" translate="yes" xml:space="preserve">
          <source>Interface to describe a structural piece of a document.</source>
          <target state="translated">문서의 구조적 부분을 설명하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="98576408c8dcb98701a211a60036a68aa007980a" translate="yes" xml:space="preserve">
          <source>Interface to describe a structural piece of a document. It is intended to capture the spirit of an SGML element.</source>
          <target state="translated">문서의 구조적 부분을 설명하는 인터페이스입니다. SGML 요소의 정신을 포착하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="97fa8feaaa97e51cf6f7230ac27c51f6732553cd" translate="yes" xml:space="preserve">
          <source>Interface to invoke Java programming language compilers from programs.</source>
          <target state="translated">프로그램에서 Java 프로그래밍 언어 컴파일러를 호출하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="d5772378dbd10073ea92abddad86509c7e5f6878" translate="yes" xml:space="preserve">
          <source>Interface to invoke Java programming language documentation tools from programs.</source>
          <target state="translated">프로그램에서 Java 프로그래밍 언어 문서 도구를 호출하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="4d181b1f4a4d3fd4cbafd671ceae5abde92d7ef3" translate="yes" xml:space="preserve">
          <source>Interface to invoke Java&amp;trade; programming language compilers from programs.</source>
          <target state="translated">프로그램에서 Java &amp;trade; 프로그래밍 언어 컴파일러를 호출하기위한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="d2cfb28f22f1d0eb78f10b0c85932cd5d21ad52f" translate="yes" xml:space="preserve">
          <source>Interface to invoke Java&amp;trade; programming language documentation tools from programs.</source>
          <target state="translated">프로그램에서 Java &amp;trade; 프로그래밍 언어 문서 도구를 호출하기위한 인터페이스.</target>
        </trans-unit>
        <trans-unit id="026f831126d326f08635608c28b50f6f00510d9e" translate="yes" xml:space="preserve">
          <source>Interface to read the Descriptor of a management interface element such as an MBeanInfo.</source>
          <target state="translated">MBeanInfo 등의 관리 인터페이스 요소의 기술자를 읽어들이는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="e3cb3559c576941fe5af8e197024e00e07951994" translate="yes" xml:space="preserve">
          <source>Interface used to indicate that this object represents a Sharding Key.</source>
          <target state="translated">이 개체가 샤딩 키를 나타내는 것을 나타내는 데 사용되는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="bd0cebadb23b850d1738dc374ab07d9cb278329e" translate="yes" xml:space="preserve">
          <source>Interface used to indicate that this object represents a Sharding Key. A &lt;code&gt;ShardingKey&lt;/code&gt; instance is only guaranteed to be compatible with the data source instance that it was derived from. A &lt;code&gt;ShardingKey&lt;/code&gt; is created using &lt;a href=&quot;shardingkeybuilder&quot;&gt;&lt;code&gt;ShardingKeyBuilder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 개체가 샤딩 키를 나타내는 것을 나타내는 데 사용되는 인터페이스입니다. &lt;code&gt;ShardingKey&lt;/code&gt; 의 인스턴스 만이에서 파생되었다 데이터 소스 인스턴스와 호환이 보장된다. &lt;code&gt;ShardingKey&lt;/code&gt; 를 사용하여 만들어집니다 &lt;a href=&quot;shardingkeybuilder&quot;&gt; &lt;code&gt;ShardingKeyBuilder&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a9f541db02f63e57df646d71488b67e1b5b2a9c8" translate="yes" xml:space="preserve">
          <source>Interface with only getters:</source>
          <target state="translated">게터 만있는 인터페이스 :</target>
        </trans-unit>
        <trans-unit id="f585497fd18ca90f7e5bbbddb09ee8452af1d7fe" translate="yes" xml:space="preserve">
          <source>InterfaceAddress</source>
          <target state="translated">InterfaceAddress</target>
        </trans-unit>
        <trans-unit id="4f51be45675e112dcb12524f92cd17724f0070f8" translate="yes" xml:space="preserve">
          <source>InterfaceAddress.equals()</source>
          <target state="translated">InterfaceAddress.equals()</target>
        </trans-unit>
        <trans-unit id="d3574a7908ebeabf5039a42b0206c2eeb0e834e9" translate="yes" xml:space="preserve">
          <source>InterfaceAddress.getAddress()</source>
          <target state="translated">InterfaceAddress.getAddress()</target>
        </trans-unit>
        <trans-unit id="a04b816b8aa6b5c8947bd5a6bbea9e1d698ecbac" translate="yes" xml:space="preserve">
          <source>InterfaceAddress.getBroadcast()</source>
          <target state="translated">InterfaceAddress.getBroadcast()</target>
        </trans-unit>
        <trans-unit id="2c9321115176a3dbfa4afc75b22aa3f6474c67b9" translate="yes" xml:space="preserve">
          <source>InterfaceAddress.getNetworkPrefixLength()</source>
          <target state="translated">InterfaceAddress.getNetworkPrefixLength()</target>
        </trans-unit>
        <trans-unit id="6936c2cc20723178ea3a5e6322fdfa5d9b63959b" translate="yes" xml:space="preserve">
          <source>InterfaceAddress.hashCode()</source>
          <target state="translated">InterfaceAddress.hashCode()</target>
        </trans-unit>
        <trans-unit id="eb1f15dbaab94fc70843176bdf6858579657b48c" translate="yes" xml:space="preserve">
          <source>InterfaceAddress.toString()</source>
          <target state="translated">InterfaceAddress.toString()</target>
        </trans-unit>
        <trans-unit id="4a7d0aa2fba8c8a30cf44491de6e08234be4bb3c" translate="yes" xml:space="preserve">
          <source>InterfaceType</source>
          <target state="translated">InterfaceType</target>
        </trans-unit>
        <trans-unit id="b356313f979923fc829adb909098ed26a5a01aff" translate="yes" xml:space="preserve">
          <source>Interfaces</source>
          <target state="translated">Interfaces</target>
        </trans-unit>
        <trans-unit id="a222710fd336558f3e2b7ccb0e86be74db491243" translate="yes" xml:space="preserve">
          <source>Interfaces and classes providing a framework for locking and waiting for conditions that is distinct from built-in synchronization and monitors.</source>
          <target state="translated">내장 동기화 및 모니터와는 다른 조건을 잠금 및 대기하기위한 프레임 워크를 제공하는 인터페이스 및 클래스</target>
        </trans-unit>
        <trans-unit id="8d334bbb7eed1e7eda27d1271fa99c50f938c52c" translate="yes" xml:space="preserve">
          <source>Interfaces and classes providing a framework for locking and waiting for conditions that is distinct from built-in synchronization and monitors. The framework permits much greater flexibility in the use of locks and conditions, at the expense of more awkward syntax.</source>
          <target state="translated">내장 동기화 및 모니터와는 다른 조건을 잠금 및 대기하기위한 프레임 워크를 제공하는 인터페이스 및 클래스 이 프레임 워크는보다 어색한 구문을 희생하면서 잠금 및 조건을 사용할 때 훨씬 더 큰 유연성을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="cd27e32247edc634277247bf837c64795e2ac942" translate="yes" xml:space="preserve">
          <source>Interfaces and classes providing access to file and file system attributes.</source>
          <target state="translated">파일 및 파일 시스템 속성에 대한 액세스를 제공하는 인터페이스 및 클래스</target>
        </trans-unit>
        <trans-unit id="2e2322300fd9cce98d5d7d2473dde9cef92a560e" translate="yes" xml:space="preserve">
          <source>Interfaces for remote access to JMX MBean servers.</source>
          <target state="translated">JMX MBean 서버에의 원격 액세스를위한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="14241d19f945622b8e1006362ddd2e772965356f" translate="yes" xml:space="preserve">
          <source>Interfaces for remote access to JMX MBean servers. This package defines the essential interfaces for making a JMX MBean server manageable remotely. The specification of this functionality is completed by Part III of the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/jmx/JMX_1_4_specification.pdf&quot;&gt; JMX Specification, version 1.4&lt;/a&gt; PDF document.</source>
          <target state="translated">JMX MBean 서버에의 원격 액세스를위한 인터페이스입니다. 이 패키지는 JMX MBean 서버를 원격으로 관리 할 수 ​​있도록하는 필수 인터페이스를 정의합니다. 이 기능의 스펙은 &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/jmx/JMX_1_4_specification.pdf&quot;&gt;JMX 스펙, 버전 1.4&lt;/a&gt; PDF 문서 파트 III에 의해 완성됩니다 .</target>
        </trans-unit>
        <trans-unit id="579deb82793ef795c71d372e402c610063ff8f2b" translate="yes" xml:space="preserve">
          <source>Interfaces for remote access to JMX MBean servers. This package defines the essential interfaces for making a JMX MBean server manageable remotely. The specification of this functionality is completed by Part III of the &lt;a href=&quot;https://jcp.org/aboutJava/communityprocess/mrel/jsr160/index2.html&quot;&gt; JMX Specification, version 1.4&lt;/a&gt;</source>
          <target state="translated">JMX MBean 서버에 대한 원격 액세스를위한 인터페이스. 이 패키지는 JMX MBean 서버를 원격으로 관리하기위한 필수 인터페이스를 정의합니다. 이 기능의 사양은 &lt;a href=&quot;https://jcp.org/aboutJava/communityprocess/mrel/jsr160/index2.html&quot;&gt;JMX 사양, 버전 1.4&lt;/a&gt; 의 Part III에서 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="e7137bdfcbeafb90cd583b31e4b2292d4c76f4f1" translate="yes" xml:space="preserve">
          <source>Interfaces such as the java.awt.Composite interface or the java.awt.Robot class allow arbitrary code to examine pixels on the display enable malicious code to snoop on the activities of the user.</source>
          <target state="translated">java.awt.Composite 인터페이스 또는 java.awt.Robot 클래스와 같은 인터페이스를 사용하면 임의 코드가 디스플레이의 픽셀을 검사 할 수 있으므로 악성 코드가 사용자의 활동을 스누핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70a186507446b3466a036e7e0d6ebf67c2225eae" translate="yes" xml:space="preserve">
          <source>Interfaces used to model Java programming language types.</source>
          <target state="translated">Java 프로그래밍 언어 유형을 모델링하는 데 사용되는 인터페이스</target>
        </trans-unit>
        <trans-unit id="c7d653b4c7770e0844ab90f17241fcdab7a88e80" translate="yes" xml:space="preserve">
          <source>Interfaces used to model elements of the Java programming language.</source>
          <target state="translated">Java 프로그래밍 언어의 요소를 모델링하는 데 사용되는 인터페이스</target>
        </trans-unit>
        <trans-unit id="a9c190633af7da77605ec451a55e01578df91b87" translate="yes" xml:space="preserve">
          <source>Interfaces used to model elements of the Java programming language. The term &quot;element&quot; in this package is used to refer to program elements, the declared entities that make up a program. Elements include classes, interfaces, methods, constructors, and fields. The interfaces in this package do not model the structure of a program inside a method body; for example there is no representation of a &lt;code&gt;for&lt;/code&gt; loop or &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;finally&lt;/code&gt; block. However, the interfaces can model some structures only appearing inside method bodies, such as local variables and anonymous classes.</source>
          <target state="translated">Java 프로그래밍 언어의 요소를 모델링하는 데 사용되는 인터페이스 이 패키지에서 &quot;요소&quot;라는 용어는 프로그램을 구성하는 선언 된 엔티티 인 프로그램 요소를 나타내는 데 사용됩니다. 요소에는 클래스, 인터페이스, 메서드, 생성자 및 필드가 포함됩니다. 이 패키지의 인터페이스는 메소드 본문 내부의 프로그램 구조를 모델링하지 않습니다. 예를 들어 &lt;code&gt;for&lt;/code&gt; 루프 나 &lt;code&gt;try&lt;/code&gt; - &lt;code&gt;finally&lt;/code&gt; 블록의 표현이 없습니다 . 그러나 인터페이스는 로컬 변수 및 익명 클래스와 같이 메소드 본문에만 나타나는 일부 구조를 모델링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9d985df54f7eab7e7b15fed44b6c7eb9a061bb7" translate="yes" xml:space="preserve">
          <source>Intermediate operations are further divided into &lt;em&gt;stateless&lt;/em&gt; and &lt;em&gt;stateful&lt;/em&gt; operations. Stateless operations, such as &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt;, retain no state from previously seen element when processing a new element -- each element can be processed independently of operations on other elements. Stateful operations, such as &lt;code&gt;distinct&lt;/code&gt; and &lt;code&gt;sorted&lt;/code&gt;, may incorporate state from previously seen elements when processing new elements.</source>
          <target state="translated">중간 작업은 &lt;em&gt;상태 비 &lt;/em&gt;&lt;em&gt;저장&lt;/em&gt; 작업 과 &lt;em&gt;상태 저장&lt;/em&gt; 작업 으로 구분됩니다 . &lt;code&gt;filter&lt;/code&gt; 및 &lt;code&gt;map&lt;/code&gt; 과 같은 상태 비 저장 작업 은 새 요소를 처리 할 때 이전에 본 요소의 상태를 유지하지 않습니다. 각 요소는 다른 요소의 작업과 독립적으로 처리 될 수 있습니다. &lt;code&gt;distinct&lt;/code&gt; 및 &lt;code&gt;sorted&lt;/code&gt; 와 같은 상태 저장 작업 은 새 요소를 처리 할 때 이전에 본 요소의 상태를 통합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa150bb5e05e08d268d21289cdb64157534f5843" translate="yes" xml:space="preserve">
          <source>Intermediate operations return a new stream. They are always &lt;em&gt;lazy&lt;/em&gt;; executing an intermediate operation such as &lt;code&gt;filter()&lt;/code&gt; does not actually perform any filtering, but instead creates a new stream that, when traversed, contains the elements of the initial stream that match the given predicate. Traversal of the pipeline source does not begin until the terminal operation of the pipeline is executed.</source>
          <target state="translated">중간 작업은 새 스트림을 반환합니다. 그들은 항상 &lt;em&gt;게으르다&lt;/em&gt; . &lt;code&gt;filter()&lt;/code&gt; 와 같은 중간 작업을 실행하면 실제로 필터링이 수행되지 않고 대신 통과 할 때 지정된 조건 자와 일치하는 초기 스트림의 요소를 포함하는 새 스트림이 만들어집니다. 파이프 라인 소스의 순회는 파이프 라인의 터미널 작업이 실행될 때까지 시작되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="073a60140601fd1d845ea4c460f229891a994a7a" translate="yes" xml:space="preserve">
          <source>Internal frame layout</source>
          <target state="translated">내부 프레임 레이아웃</target>
        </trans-unit>
        <trans-unit id="1ab631b89662e142dd4e6bb5cd3539afeb8ec52d" translate="yes" xml:space="preserve">
          <source>Internal frame layout.</source>
          <target state="translated">내부 프레임 레이아웃.</target>
        </trans-unit>
        <trans-unit id="f78eaeb97aee7c6e4bfb10764bc9bc7ed253c6df" translate="yes" xml:space="preserve">
          <source>Internal frame property change listener.</source>
          <target state="translated">내부 프레임 속성 변경 리스너.</target>
        </trans-unit>
        <trans-unit id="02fc62a43c27af64ba24d233b21d8b38c94be05b" translate="yes" xml:space="preserve">
          <source>Internal substrings of one or more white space characters are converted to a single space in non-hexadecimal attribute values</source>
          <target state="translated">하나 이상의 공백 문자의 내부 서브 스트링은 16 진이 아닌 속성 값에서 단일 공백으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="1d77d7be8207197fb919e6534cd627091a25e031" translate="yes" xml:space="preserve">
          <source>InternalError</source>
          <target state="translated">InternalError</target>
        </trans-unit>
        <trans-unit id="2ab236907329ee4e25328419cad123b4e23246db" translate="yes" xml:space="preserve">
          <source>InternalException</source>
          <target state="translated">InternalException</target>
        </trans-unit>
        <trans-unit id="6849278facc60a66864406e19d6a2412b00269f2" translate="yes" xml:space="preserve">
          <source>InternalFrame region.</source>
          <target state="translated">InternalFrame 영역.</target>
        </trans-unit>
        <trans-unit id="eaab1ed260e5550b47555ba0eb54560cc6e23a27" translate="yes" xml:space="preserve">
          <source>InternalFrame region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;InternalFrame&lt;/code&gt;.</source>
          <target state="translated">InternalFrame 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 &lt;code&gt;InternalFrame&lt;/code&gt; 이라는 이름을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="131557e98d304f18e3f8432e2fdd939b98bf432d" translate="yes" xml:space="preserve">
          <source>InternalFrameAdapter</source>
          <target state="translated">InternalFrameAdapter</target>
        </trans-unit>
        <trans-unit id="e6f2d8d0d8ca2b8a3d696fc085c1c3fdb2d13b03" translate="yes" xml:space="preserve">
          <source>InternalFrameBorder</source>
          <target state="translated">InternalFrameBorder</target>
        </trans-unit>
        <trans-unit id="c181b7ae45950553c36f318565b281a9babe7c15" translate="yes" xml:space="preserve">
          <source>InternalFrameEvent</source>
          <target state="translated">InternalFrameEvent</target>
        </trans-unit>
        <trans-unit id="711fee14ac05abec1ef878b6faaf4820423bff01" translate="yes" xml:space="preserve">
          <source>InternalFrameFocusTraversalPolicy</source>
          <target state="translated">InternalFrameFocusTraversalPolicy</target>
        </trans-unit>
        <trans-unit id="693480cfd0d8c89e2228ac54c3bbd29a383c18d5" translate="yes" xml:space="preserve">
          <source>InternalFrameLayout</source>
          <target state="translated">InternalFrameLayout</target>
        </trans-unit>
        <trans-unit id="969f15751155deb333e27fabf9c6f3b817060dd0" translate="yes" xml:space="preserve">
          <source>InternalFrameListener</source>
          <target state="translated">InternalFrameListener</target>
        </trans-unit>
        <trans-unit id="b1899bc4b7258bb573080ea2bf64fff4fd9e9e7f" translate="yes" xml:space="preserve">
          <source>InternalFramePropertyChangeListener</source>
          <target state="translated">InternalFramePropertyChangeListener</target>
        </trans-unit>
        <trans-unit id="8f22bcfe811af8cfdafef8a002e2da3c73331555" translate="yes" xml:space="preserve">
          <source>InternalFrameUI</source>
          <target state="translated">InternalFrameUI</target>
        </trans-unit>
        <trans-unit id="735b6ee5a44347617f87ffaf46a9e7ec7620b99e" translate="yes" xml:space="preserve">
          <source>InternationalFormatter</source>
          <target state="translated">InternationalFormatter</target>
        </trans-unit>
        <trans-unit id="2f0e734c79f18a483a0c3d5703ca2d2407edcbd8" translate="yes" xml:space="preserve">
          <source>Internationalization Overview</source>
          <target state="translated">국제화 개요</target>
        </trans-unit>
        <trans-unit id="6749012b0b5279ecb6d7a4ce129b120d04494a2c" translate="yes" xml:space="preserve">
          <source>Internationalized domain names are defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;. RFC 3490 defines two operations: ToASCII and ToUnicode. These 2 operations employ &lt;a href=&quot;http://www.ietf.org/rfc/rfc3491.txt&quot;&gt;Nameprep&lt;/a&gt; algorithm, which is a profile of &lt;a href=&quot;http://www.ietf.org/rfc/rfc3454.txt&quot;&gt;Stringprep&lt;/a&gt;, and &lt;a href=&quot;http://www.ietf.org/rfc/rfc3492.txt&quot;&gt;Punycode&lt;/a&gt; algorithm to convert domain name string back and forth.</source>
          <target state="translated">국제화 된 도메인 이름은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490에&lt;/a&gt; 정의되어 있습니다. RFC 3490은 ToASCII 및 ToUnicode의 두 가지 작업을 정의합니다. 이 두 작업은 사용 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3491.txt&quot;&gt;Nameprep&lt;/a&gt; 의 프로필입니다 알고리즘, &lt;a href=&quot;http://www.ietf.org/rfc/rfc3454.txt&quot;&gt;Stringprep&lt;/a&gt; 및 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3492.txt&quot;&gt;퓨니 코드 (Punycode)&lt;/a&gt; 등 변환 도메인 이름 문자열의 뒷면에 알고리즘을.</target>
        </trans-unit>
        <trans-unit id="4a25f12d44afeda777e28956ed4e8d884db0c1c5" translate="yes" xml:space="preserve">
          <source>Internationalized domain names are defined in &lt;a href=&quot;https://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;. RFC 3490 defines two operations: ToASCII and ToUnicode. These 2 operations employ &lt;a href=&quot;https://www.ietf.org/rfc/rfc3491.txt&quot;&gt;Nameprep&lt;/a&gt; algorithm, which is a profile of &lt;a href=&quot;https://www.ietf.org/rfc/rfc3454.txt&quot;&gt;Stringprep&lt;/a&gt;, and &lt;a href=&quot;https://www.ietf.org/rfc/rfc3492.txt&quot;&gt;Punycode&lt;/a&gt; algorithm to convert domain name string back and forth.</source>
          <target state="translated">국제화 된 도메인 이름은 &lt;a href=&quot;https://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490에&lt;/a&gt; 정의되어 있습니다. RFC 3490은 ToASCII 및 ToUnicode의 두 가지 작업을 정의합니다. 이 두 작업은 사용 &lt;a href=&quot;https://www.ietf.org/rfc/rfc3491.txt&quot;&gt;Nameprep&lt;/a&gt; 의 프로필입니다 알고리즘, &lt;a href=&quot;https://www.ietf.org/rfc/rfc3454.txt&quot;&gt;Stringprep&lt;/a&gt; 및 &lt;a href=&quot;https://www.ietf.org/rfc/rfc3492.txt&quot;&gt;퓨니 코드 (Punycode)&lt;/a&gt; 등 변환 도메인 이름 문자열의 뒷면에 알고리즘을.</target>
        </trans-unit>
        <trans-unit id="cd79eb003fa8fc48d8b2fb4c6f1e07bbea14f70d" translate="yes" xml:space="preserve">
          <source>Internet Protocol Version 4 (IPv4)</source>
          <target state="translated">인터넷 프로토콜 버전 4 (IPv4)</target>
        </trans-unit>
        <trans-unit id="fcfa43edfa7183db35df6a5934b199eb25cccc3c" translate="yes" xml:space="preserve">
          <source>Internet Protocol Version 6 (IPv6)</source>
          <target state="translated">인터넷 프로토콜 버전 6 (IPv6)</target>
        </trans-unit>
        <trans-unit id="e8ee8f70e7d8b9c0f444242c7791f8de975f2a89" translate="yes" xml:space="preserve">
          <source>Interoperability</source>
          <target state="translated">Interoperability</target>
        </trans-unit>
        <trans-unit id="7eb22ed58dcae911b3f4c79303ee5355bb4cfdbe" translate="yes" xml:space="preserve">
          <source>Interoperability between versions of the JMX specification</source>
          <target state="translated">JMX 스펙 버전 간 상호 운용성</target>
        </trans-unit>
        <trans-unit id="a9b9bfbfe1a7c4291bf29d173251c1d125b670fb" translate="yes" xml:space="preserve">
          <source>Interoperability with &lt;code&gt;java.nio.file&lt;/code&gt; package</source>
          <target state="translated">&lt;code&gt;java.nio.file&lt;/code&gt; 패키지 와의 상호 운용성</target>
        </trans-unit>
        <trans-unit id="12d5486ab2538b43e1c86205eb54c90cbc6b0d35" translate="yes" xml:space="preserve">
          <source>Interoperation between VarHandles and Java generics</source>
          <target state="translated">VarHandles와 Java 제네릭 간의 상호 운용</target>
        </trans-unit>
        <trans-unit id="3ca1aa7305a8b84c3770f4fe7ca187060613902a" translate="yes" xml:space="preserve">
          <source>Interoperation between VarHandles and the Core Reflection API</source>
          <target state="translated">VarHandles와 Core Reflection API 간의 상호 운용</target>
        </trans-unit>
        <trans-unit id="4661cedf17bb19a9bb549f6f8b394b7f1a439824" translate="yes" xml:space="preserve">
          <source>Interoperation between method handles and Java generics</source>
          <target state="translated">메소드 핸들과 Java 제네릭 간의 상호 운용</target>
        </trans-unit>
        <trans-unit id="65d8e8796dc84a7889123be982712ea3057b7b1a" translate="yes" xml:space="preserve">
          <source>Interoperation between method handles and the Core Reflection API</source>
          <target state="translated">메서드 핸들과 Core Reflection API 간의 상호 운용</target>
        </trans-unit>
        <trans-unit id="a7b5aba96f385780d7425794f0a9af160ed5ff3e" translate="yes" xml:space="preserve">
          <source>Interpolation hint key.</source>
          <target state="translated">보간 힌트 키.</target>
        </trans-unit>
        <trans-unit id="721a6a2fcd7ea509cb74619061c22dbec1a71f48" translate="yes" xml:space="preserve">
          <source>Interpolation hint key. The &lt;code&gt;INTERPOLATION&lt;/code&gt; hint controls how image pixels are filtered or resampled during an image rendering operation.</source>
          <target state="translated">보간 힌트 키. &lt;code&gt;INTERPOLATION&lt;/code&gt; 이미지 픽셀은 이미지 묘화 처리 동안 필터링되거나 재 샘플링하는 방법을 제어 힌트.</target>
        </trans-unit>
        <trans-unit id="f8dee0e9febc0fbc2cb25d2d630f2a73d8021724" translate="yes" xml:space="preserve">
          <source>Interpolation hint value -- the color sample of the nearest neighboring integer coordinate sample in the image is used.</source>
          <target state="translated">보간 힌트 값-이미지에서 가장 가까운 이웃 정수 좌표 샘플의 색상 샘플이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7457285c8643b81a97a1673ffea5ca427a5a11d8" translate="yes" xml:space="preserve">
          <source>Interpolation hint value -- the color sample of the nearest neighboring integer coordinate sample in the image is used. Conceptually the image is viewed as a grid of unit-sized square regions of color centered around the center of each image pixel.</source>
          <target state="translated">보간 힌트 값-이미지에서 가장 가까운 이웃 정수 좌표 샘플의 색상 샘플이 사용됩니다. 개념적으로 이미지는 각 이미지 픽셀의 중심을 중심으로 한 단위 크기의 정사각형 색상 영역 격자로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="26685912b8039674ce6ab0e213d5752d5efe202b" translate="yes" xml:space="preserve">
          <source>Interpolation hint value -- the color samples of 9 nearby integer coordinate samples in the image are interpolated using a cubic function in both &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;Y&lt;/code&gt; to produce a color sample.</source>
          <target state="translated">보간 힌트 값-이미지에있는 9 개의 근처 정수 좌표 샘플의 색상 샘플은 &lt;code&gt;X&lt;/code&gt; 와 &lt;code&gt;Y&lt;/code&gt; 모두에서 3 차 함수를 사용하여 보간 되어 색상 샘플을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f4a134daf6f642e5f59ad06d97942749a2ffe768" translate="yes" xml:space="preserve">
          <source>Interpolation hint value -- the color samples of 9 nearby integer coordinate samples in the image are interpolated using a cubic function in both &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;Y&lt;/code&gt; to produce a color sample. Conceptually the view of the image is very similar to the view used in the &lt;a href=&quot;#VALUE_INTERPOLATION_BILINEAR&quot;&gt;&lt;code&gt;BILINEAR&lt;/code&gt;&lt;/a&gt; algorithm except that the ramps of colors that connect between the samples are curved and have better continuity of slope as they cross over between sample boundaries.</source>
          <target state="translated">보간 힌트 값-이미지에있는 9 개의 근처 정수 좌표 샘플의 색상 샘플은 &lt;code&gt;X&lt;/code&gt; 와 &lt;code&gt;Y&lt;/code&gt; 모두에서 3 차 함수를 사용하여 보간 되어 색상 샘플을 생성합니다. 개념적으로 이미지보기 는 샘플 사이를 연결하는 색상 램프가 곡선이고 샘플 경계 사이를 가로 지르면서 더 나은 기울기 연속성을 갖는다는 점을 제외 하면 &lt;a href=&quot;#VALUE_INTERPOLATION_BILINEAR&quot;&gt; &lt;code&gt;BILINEAR&lt;/code&gt; &lt;/a&gt; 알고리즘 에서 사용되는보기와 매우 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="d120be9b5e113f2672638b2d45bf30a7c8dca02c" translate="yes" xml:space="preserve">
          <source>Interpolation hint value -- the color samples of the 4 nearest neighboring integer coordinate samples in the image are interpolated linearly to produce a color sample.</source>
          <target state="translated">보간 힌트 값-이미지에서 가장 가까운 4 개의 인접한 정수 좌표 샘플의 색상 샘플을 선형으로 보간하여 색상 샘플을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="469a3d50b4828e829aee2d1d8421b5ca5a9eee93" translate="yes" xml:space="preserve">
          <source>Interpolation hint value -- the color samples of the 4 nearest neighboring integer coordinate samples in the image are interpolated linearly to produce a color sample. Conceptually the image is viewed as a set of infinitely small point color samples which have value only at the centers of integer coordinate pixels and the space between those pixel centers is filled with linear ramps of colors that connect adjacent discrete samples in a straight line.</source>
          <target state="translated">보간 힌트 값-이미지에서 가장 가까운 4 개의 인접한 정수 좌표 샘플의 색상 샘플을 선형으로 보간하여 색상 샘플을 생성합니다. 개념적으로 이미지는 정수 좌표 픽셀의 중심에만 값이있는 무한히 작은 점 색상 샘플 세트로 간주되며 이러한 픽셀 중심 사이의 공간은 인접한 개별 샘플을 직선으로 연결하는 선형 램프로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="ac5d38b7d39a4dc72860afc2468baca769c041a7" translate="yes" xml:space="preserve">
          <source>Interpretation of this value depends on the drop mode set on the component. If the drop mode is &lt;code&gt;DropMode.USE_SELECTION&lt;/code&gt; or &lt;code&gt;DropMode.ON&lt;/code&gt;, the return value is the path in the tree over which the data has been (or will be) dropped. &lt;code&gt;null&lt;/code&gt; indicates that the drop is over empty space, not associated with a particular path.</source>
          <target state="translated">이 값의 해석은 구성 요소에 설정된 드롭 모드에 따라 다릅니다. 드롭 모드가 &lt;code&gt;DropMode.USE_SELECTION&lt;/code&gt; 또는 &lt;code&gt;DropMode.ON&lt;/code&gt; 인 경우 반환 값은 데이터가 삭제 된 (또는 삭제 될) 트리의 경로입니다. &lt;code&gt;null&lt;/code&gt; 은 드롭이 특정 경로와 연결되지 않은 빈 공간 위에 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0e9b9f99f1e4751b87dc6381b13b6e5690e98256" translate="yes" xml:space="preserve">
          <source>Interrelated interfaces and static methods for establishing flow-controlled components in which &lt;a href=&quot;flow.publisher&quot;&gt;&lt;code&gt;Publishers&lt;/code&gt;&lt;/a&gt; produce items consumed by one or more &lt;a href=&quot;flow.subscriber&quot;&gt;&lt;code&gt;Subscribers&lt;/code&gt;&lt;/a&gt;, each managed by a &lt;a href=&quot;flow.subscription&quot;&gt;&lt;code&gt;Subscription&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;flow.publisher&quot;&gt; &lt;code&gt;Publishers&lt;/code&gt; &lt;/a&gt; 각각 &lt;a href=&quot;flow.subscription&quot;&gt; &lt;code&gt;Subscription&lt;/code&gt; 에서&lt;/a&gt; 관리하는 하나 이상의 &lt;a href=&quot;flow.subscriber&quot;&gt; &lt;code&gt;Subscribers&lt;/code&gt; &lt;/a&gt; 소비하는 항목을 생성 하는 흐름 제어 구성 요소를 설정하기위한 상호 관련된 인터페이스 및 정적 메서드입니다 .</target>
        </trans-unit>
        <trans-unit id="fcd76b0e80311e13218ded13dd63abd6d19fbbe1" translate="yes" xml:space="preserve">
          <source>Interrupt the normal processing of the document.</source>
          <target state="translated">문서의 정상적인 처리를 중단합니다.</target>
        </trans-unit>
        <trans-unit id="964a809f4916d18a59ef4cf4323608c18f554592" translate="yes" xml:space="preserve">
          <source>InterruptedByTimeoutException</source>
          <target state="translated">InterruptedByTimeoutException</target>
        </trans-unit>
        <trans-unit id="cf86fbb6f206be8a6eea32443eb648bcd7c0e299" translate="yes" xml:space="preserve">
          <source>InterruptedException</source>
          <target state="translated">InterruptedException</target>
        </trans-unit>
        <trans-unit id="8fb74d5e32d1aa93d601cee872399a7c35cef500" translate="yes" xml:space="preserve">
          <source>InterruptedIOException</source>
          <target state="translated">InterruptedIOException</target>
        </trans-unit>
        <trans-unit id="600fd706a22ffc55f8a2923dde253b9df6cea03a" translate="yes" xml:space="preserve">
          <source>InterruptedNamingException</source>
          <target state="translated">InterruptedNamingException</target>
        </trans-unit>
        <trans-unit id="ea764e7d4e59d71374ba246532069463118e5f0c" translate="yes" xml:space="preserve">
          <source>InterruptibleChannel</source>
          <target state="translated">InterruptibleChannel</target>
        </trans-unit>
        <trans-unit id="f9206ff6f1248fab1a23e1f39d25abe117c9a96c" translate="yes" xml:space="preserve">
          <source>InterruptibleChannel.close()</source>
          <target state="translated">InterruptibleChannel.close()</target>
        </trans-unit>
        <trans-unit id="e67c69ae097f335a860d9853ee2a4ecb8dd3a451" translate="yes" xml:space="preserve">
          <source>Interrupting a thread that is not alive need not have any effect.</source>
          <target state="translated">활성화되지 않은 스레드를 중단해도 아무런 영향이 없습니다.</target>
        </trans-unit>
        <trans-unit id="f24ca4dfb1553a9563a58c5d514fe654c07f409d" translate="yes" xml:space="preserve">
          <source>Interrupts a running invoke.</source>
          <target state="translated">실행중인 호출을 중단합니다.</target>
        </trans-unit>
        <trans-unit id="7c3c26a2ce11ab5eb3df6cef0b7dfd7bbcc914dd" translate="yes" xml:space="preserve">
          <source>Interrupts a running remote invoke by manipulating remote variables and sending a stop via JDI.</source>
          <target state="translated">원격 변수를 조작하고 JDI를 통해 중지를 전송하여 실행중인 원격 호출을 중단합니다.</target>
        </trans-unit>
        <trans-unit id="733c9e18facd4ab5cd391c6e6ee6532ed3d1a866" translate="yes" xml:space="preserve">
          <source>Interrupts all threads in this thread group.</source>
          <target state="translated">이 스레드 그룹의 모든 스레드를 중단합니다.</target>
        </trans-unit>
        <trans-unit id="ea0e845001b75a1411793367e492730d9917bae5" translate="yes" xml:space="preserve">
          <source>Interrupts this thread unless the thread has been suspended by the debugger.</source>
          <target state="translated">스레드가 디버거에 의해 일시 중단되지 않는 한이 스레드를 중단합니다.</target>
        </trans-unit>
        <trans-unit id="12e12d5890b7e50696802f2c60df251255693bf0" translate="yes" xml:space="preserve">
          <source>Interrupts this thread.</source>
          <target state="translated">이 스레드를 중단시킵니다.</target>
        </trans-unit>
        <trans-unit id="d0f596ba112a353008597117b57b10b067fc620b" translate="yes" xml:space="preserve">
          <source>Intersection</source>
          <target state="translated">Intersection</target>
        </trans-unit>
        <trans-unit id="1ac51cf85ea0dc2d2d18bce97fe47826a787c44a" translate="yes" xml:space="preserve">
          <source>IntersectionType</source>
          <target state="translated">IntersectionType</target>
        </trans-unit>
        <trans-unit id="21a59178340c8e5a37a171f7627c4aeee0fca090" translate="yes" xml:space="preserve">
          <source>IntersectionType.getBounds()</source>
          <target state="translated">IntersectionType.getBounds()</target>
        </trans-unit>
        <trans-unit id="24123919ff7f87e4b1443be8dd9ec3f614e0eeac" translate="yes" xml:space="preserve">
          <source>IntersectionTypeTree</source>
          <target state="translated">IntersectionTypeTree</target>
        </trans-unit>
        <trans-unit id="b1a0d2bb5b779880c40c9886e68a6e3d5b898775" translate="yes" xml:space="preserve">
          <source>Intersects the current &lt;code&gt;Clip&lt;/code&gt; with the interior of the specified &lt;code&gt;Shape&lt;/code&gt; and sets the &lt;code&gt;Clip&lt;/code&gt; to the resulting intersection.</source>
          <target state="translated">현재 &lt;code&gt;Clip&lt;/code&gt; 을 지정된 &lt;code&gt;Shape&lt;/code&gt; 의 내부 와 교차 하고 &lt;code&gt;Clip&lt;/code&gt; 을 결과 교차로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="58e42264a2609c87aa26d1faaee64defd7b72495" translate="yes" xml:space="preserve">
          <source>Intersects the current &lt;code&gt;Clip&lt;/code&gt; with the interior of the specified &lt;code&gt;Shape&lt;/code&gt; and sets the &lt;code&gt;Clip&lt;/code&gt; to the resulting intersection. The specified &lt;code&gt;Shape&lt;/code&gt; is transformed with the current &lt;code&gt;Graphics2D&lt;/code&gt;&lt;code&gt;Transform&lt;/code&gt; before being intersected with the current &lt;code&gt;Clip&lt;/code&gt;. This method is used to make the current &lt;code&gt;Clip&lt;/code&gt; smaller. To make the &lt;code&gt;Clip&lt;/code&gt; larger, use &lt;code&gt;setClip&lt;/code&gt;. The</source>
          <target state="translated">현재 &lt;code&gt;Clip&lt;/code&gt; 을 지정된 &lt;code&gt;Shape&lt;/code&gt; 의 내부 와 교차 하고 &lt;code&gt;Clip&lt;/code&gt; 을 결과 교차로 설정합니다 . 지정된 &lt;code&gt;Shape&lt;/code&gt; 는 현재 &lt;code&gt;Clip&lt;/code&gt; 과 교차하기 전에 현재 &lt;code&gt;Graphics2D&lt;/code&gt; &lt;code&gt;Transform&lt;/code&gt; 으로 변형 됩니다. 이 방법은 현재 &lt;code&gt;Clip&lt;/code&gt; 작게 만드는 데 사용됩니다 . &lt;code&gt;Clip&lt;/code&gt; 더 크게 만들려면 &lt;code&gt;setClip&lt;/code&gt; 을 사용하십시오 . 그만큼</target>
        </trans-unit>
        <trans-unit id="f5fb72a38c91bc09d9fd676fafd5b355b57e539d" translate="yes" xml:space="preserve">
          <source>Intersects the current clip with the specified rectangle.</source>
          <target state="translated">현재 클립을 지정된 사각형과 교차합니다.</target>
        </trans-unit>
        <trans-unit id="fb2217659af25212a1f69097a5eca0bf7b8fb48a" translate="yes" xml:space="preserve">
          <source>Intersects the current clip with the specified rectangle. The resulting clipping area is the intersection of the current clipping area and the specified rectangle. If there is no current clipping area, either because the clip has never been set, or the clip has been cleared using &lt;code&gt;setClip(null)&lt;/code&gt;, the specified rectangle becomes the new clip. This method sets the user clip, which is independent of the clipping associated with device bounds and window visibility. This method can only be used to make the current clip smaller. To set the current clip larger, use any of the setClip methods. Rendering operations have no effect outside of the clipping area.</source>
          <target state="translated">현재 클립을 지정된 사각형과 교차합니다. 결과 클리핑 영역은 현재 클리핑 영역과 지정된 사각형의 교차점입니다. 클립이 설정되지 않았거나 &lt;code&gt;setClip(null)&lt;/code&gt; 사용하여 클립이 지워졌 기 때문에 현재 클리핑 영역이없는 경우 지정된 사각형이 새 클립이됩니다. 이 메서드는 장치 경계 및 창 가시성과 관련된 클리핑과 독립적 인 사용자 클립을 설정합니다. 이 방법은 현재 클립을 더 작게 만드는 데만 사용할 수 있습니다. 현재 클립을 더 크게 설정하려면 setClip 메서드를 사용하십시오. 렌더링 작업은 클리핑 영역 외부에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bd8c4e1e2a116affa9db5b6cd6df0c7fc4972ec2" translate="yes" xml:space="preserve">
          <source>Intersects the pair of specified source &lt;code&gt;Rectangle2D&lt;/code&gt; objects and puts the result into the specified destination &lt;code&gt;Rectangle2D&lt;/code&gt; object.</source>
          <target state="translated">지정된 소스 &lt;code&gt;Rectangle2D&lt;/code&gt; 객체 쌍을 교차하고 결과를 지정된 대상 &lt;code&gt;Rectangle2D&lt;/code&gt; 객체에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="82e0ca2ead797feef6cff34a7ee33b80c341e36a" translate="yes" xml:space="preserve">
          <source>Intersects the pair of specified source &lt;code&gt;Rectangle2D&lt;/code&gt; objects and puts the result into the specified destination &lt;code&gt;Rectangle2D&lt;/code&gt; object. One of the source rectangles can also be the destination to avoid creating a third Rectangle2D object, but in this case the original points of this source rectangle will be overwritten by this method.</source>
          <target state="translated">지정된 소스 &lt;code&gt;Rectangle2D&lt;/code&gt; 객체 쌍을 교차하고 결과를 지정된 대상 &lt;code&gt;Rectangle2D&lt;/code&gt; 객체에 넣습니다 . 소스 사각형 중 하나는 세 번째 Rectangle2D 객체 생성을 방지하기위한 대상이 될 수도 있지만이 경우이 소스 사각형의 원래 지점은이 메서드에 의해 덮어 쓰여집니다.</target>
        </trans-unit>
        <trans-unit id="00e2d6d8508c9abf0571baa94d067341ed3a7441" translate="yes" xml:space="preserve">
          <source>Intf</source>
          <target state="translated">Intf</target>
        </trans-unit>
        <trans-unit id="30f5b6a5975eb03feea029eb273571ce2f3339a3" translate="yes" xml:space="preserve">
          <source>Introspect on a Java Bean and learn about all its properties, exposed methods and events, below a given &lt;code&gt;stopClass&lt;/code&gt; point subject to some control &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="translated">Java Bean을 조사하고 일부 제어 &lt;code&gt;flags&lt;/code&gt; 적용 되는 지정된 &lt;code&gt;stopClass&lt;/code&gt; 지점 아래의 모든 특성, 노출 된 메소드 및 이벤트에 대해 학습하십시오 .</target>
        </trans-unit>
        <trans-unit id="f15b792d32a7f738e8928e1697cde21db9fba0b1" translate="yes" xml:space="preserve">
          <source>Introspect on a Java Bean and learn about all its properties, exposed methods, and events.</source>
          <target state="translated">Java Bean을 검토하고 모든 특성, 노출 된 메소드 및 이벤트에 대해 학습하십시오.</target>
        </trans-unit>
        <trans-unit id="42337f8620a440e5b6295e00dccf0d69efa11aff" translate="yes" xml:space="preserve">
          <source>Introspect on a Java bean and learn about all its properties, exposed methods, and events, subject to some control flags.</source>
          <target state="translated">Java bean을 조사하고 일부 제어 플래그가 적용되는 모든 특성, 노출 된 메소드 및 이벤트에 대해 학습하십시오.</target>
        </trans-unit>
        <trans-unit id="16632b3d8612dc7cdca6a2db14bceb8c78481221" translate="yes" xml:space="preserve">
          <source>Introspect on a Java bean and learn all about its properties, exposed methods, below a given &quot;stop&quot; point.</source>
          <target state="translated">Java bean을 조사하고 주어진 &quot;중지&quot;지점 아래에서 노출 된 메소드의 특성에 대한 모든 정보를 학습하십시오.</target>
        </trans-unit>
        <trans-unit id="034afe78d4e1ade83c172dbd4a4f59914dc2393f" translate="yes" xml:space="preserve">
          <source>IntrospectionException</source>
          <target state="translated">IntrospectionException</target>
        </trans-unit>
        <trans-unit id="fb6b38965de01be096620f5b665c57176faebab7" translate="yes" xml:space="preserve">
          <source>Introspector</source>
          <target state="translated">Introspector</target>
        </trans-unit>
        <trans-unit id="dc72f65857d5084803ac15dbb6f22033f8adc0a1" translate="yes" xml:space="preserve">
          <source>Introspector.decapitalize()</source>
          <target state="translated">Introspector.decapitalize()</target>
        </trans-unit>
        <trans-unit id="84fb20cafba54d3894b33ca279e3a7fda12a99b9" translate="yes" xml:space="preserve">
          <source>Introspector.flushCaches()</source>
          <target state="translated">Introspector.flushCaches()</target>
        </trans-unit>
        <trans-unit id="47c84bc7844fb76202aab7b1030087253cdb2052" translate="yes" xml:space="preserve">
          <source>Introspector.flushFromCaches()</source>
          <target state="translated">Introspector.flushFromCaches()</target>
        </trans-unit>
        <trans-unit id="75437ebd0dfe681b1b6d1fcb6db114a395983c07" translate="yes" xml:space="preserve">
          <source>Introspector.getBeanInfo()</source>
          <target state="translated">Introspector.getBeanInfo()</target>
        </trans-unit>
        <trans-unit id="7030a8a36010a34e4ec9a54e36d0a6aa3359f891" translate="yes" xml:space="preserve">
          <source>Introspector.getBeanInfoSearchPath()</source>
          <target state="translated">Introspector.getBeanInfoSearchPath()</target>
        </trans-unit>
        <trans-unit id="87388d8059d62877762bb1ce99309764d11f0793" translate="yes" xml:space="preserve">
          <source>Introspector.setBeanInfoSearchPath()</source>
          <target state="translated">Introspector.setBeanInfoSearchPath()</target>
        </trans-unit>
        <trans-unit id="a9e3f732e15ecf39df003a7da7e895520b6ffe52" translate="yes" xml:space="preserve">
          <source>Intuitively, every loop is formed by one or more &quot;clauses&quot;, each specifying a local &lt;em&gt;iteration variable&lt;/em&gt; and/or a loop exit. Each iteration of the loop executes each clause in order. A clause can optionally update its iteration variable; it can also optionally perform a test and conditional loop exit. In order to express this logic in terms of method handles, each clause will specify up to four independent actions:</source>
          <target state="translated">직관적으로 모든 루프는 하나 이상의 &quot;절&quot;에 의해 형성되며, 각각은 로컬 &lt;em&gt;반복 변수&lt;/em&gt; 및 / 또는 루프 종료를 지정합니다. 루프의 각 반복은 각 절을 순서대로 실행합니다. 절은 선택적으로 반복 변수를 업데이트 할 수 있습니다. 선택적으로 테스트 및 조건부 루프 종료를 수행 할 수도 있습니다. 이 논리를 메서드 핸들로 표현하기 위해 각 절은 최대 4 개의 독립적 인 작업을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="144a1acdad31eddbffafd25a81063b216a0bbb89" translate="yes" xml:space="preserve">
          <source>Invalid arguments were given.</source>
          <target state="translated">잘못된 인수가 제공되었습니다.</target>
        </trans-unit>
        <trans-unit id="afd70abfd3ced98c8edb6ca953678572b1a08471" translate="yes" xml:space="preserve">
          <source>Invalid character in command argument, such as NUL.</source>
          <target state="translated">NUL과 같은 명령 인수에 잘못된 문자가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab31c540610430da052c8ce4ba9c002d41820774" translate="yes" xml:space="preserve">
          <source>Invalid credentials.</source>
          <target state="translated">잘못된 자격 증명.</target>
        </trans-unit>
        <trans-unit id="96c30b9a75320754b429e9772f2dce6e5a5cef3f" translate="yes" xml:space="preserve">
          <source>Invalid name provided.</source>
          <target state="translated">잘못된 이름이 제공되었습니다.</target>
        </trans-unit>
        <trans-unit id="5a61c259d9bd4b585c7f2ddb478a324a0db99f7b" translate="yes" xml:space="preserve">
          <source>Invalid relation type.</source>
          <target state="translated">유효하지 않은 관계 유형입니다.</target>
        </trans-unit>
        <trans-unit id="4c0d1b6b67f8eeb1c19cc29cd177645c1f66dbed" translate="yes" xml:space="preserve">
          <source>Invalid relation type. This exception is raised when, in a relation type, there is already a relation type with that name, or the same name has been used for two different role infos, or no role info provided, or one null role info provided.</source>
          <target state="translated">유효하지 않은 관계 유형입니다. 관계 유형에 해당 이름의 관계 유형이 이미 있거나 두 개의 다른 역할 정보에 대해 동일한 이름이 사용되었거나 역할 정보가 제공되지 않거나 널 역할 정보가 제공되지 않은 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="eee4078ca3dbb53c095024f3af5898d4eb507227" translate="yes" xml:space="preserve">
          <source>Invalid security context.</source>
          <target state="translated">잘못된 보안 컨텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="63b202e196368fc3eedf283a97425a95423c7680" translate="yes" xml:space="preserve">
          <source>Invalid status code.</source>
          <target state="translated">잘못된 상태 코드입니다.</target>
        </trans-unit>
        <trans-unit id="6d8c4e733ed6f5cd16f96cb2168e7cb154e2f7f0" translate="yes" xml:space="preserve">
          <source>InvalidAlgorithmParameterException</source>
          <target state="translated">InvalidAlgorithmParameterException</target>
        </trans-unit>
        <trans-unit id="8f64889ebfc9662b79e4fdf91ce2840924eada4a" translate="yes" xml:space="preserve">
          <source>InvalidApplicationException</source>
          <target state="translated">InvalidApplicationException</target>
        </trans-unit>
        <trans-unit id="10abd0adc0fb91f8e7e22dd400a9705f190b843b" translate="yes" xml:space="preserve">
          <source>InvalidAttributeIdentifierException</source>
          <target state="translated">InvalidAttributeIdentifierException</target>
        </trans-unit>
        <trans-unit id="766954e3d8552c39229a425c2fcec88345043907" translate="yes" xml:space="preserve">
          <source>InvalidAttributeValueException</source>
          <target state="translated">InvalidAttributeValueException</target>
        </trans-unit>
        <trans-unit id="bb3a51d07ce3ad48c2e507955119adefebd543e8" translate="yes" xml:space="preserve">
          <source>InvalidAttributesException</source>
          <target state="translated">InvalidAttributesException</target>
        </trans-unit>
        <trans-unit id="05bbf7d5c879603bde28b2e88d4aca2b17388e3b" translate="yes" xml:space="preserve">
          <source>InvalidClassException</source>
          <target state="translated">InvalidClassException</target>
        </trans-unit>
        <trans-unit id="4a5e7f0072d1c099ae8c6e06b47fddd598e3f3aa" translate="yes" xml:space="preserve">
          <source>InvalidClassException.getMessage()</source>
          <target state="translated">InvalidClassException.getMessage()</target>
        </trans-unit>
        <trans-unit id="bc0eea7f93c71465bbaa90c7ba3259b392084f45" translate="yes" xml:space="preserve">
          <source>InvalidCodeIndexException</source>
          <target state="translated">InvalidCodeIndexException</target>
        </trans-unit>
        <trans-unit id="7c169f42747e69009c25777728bbfa38068c61cd" translate="yes" xml:space="preserve">
          <source>InvalidDnDOperationException</source>
          <target state="translated">InvalidDnDOperationException</target>
        </trans-unit>
        <trans-unit id="8eae2fd8870f090d82feb8cbfdcc9136b78233e1" translate="yes" xml:space="preserve">
          <source>InvalidKeyException</source>
          <target state="translated">InvalidKeyException</target>
        </trans-unit>
        <trans-unit id="74c213a92eebeb3094b5fb0f474320e5c8d18186" translate="yes" xml:space="preserve">
          <source>InvalidKeySpecException</source>
          <target state="translated">InvalidKeySpecException</target>
        </trans-unit>
        <trans-unit id="c62a2d2b8b356d97530598654e3bd78d035443d2" translate="yes" xml:space="preserve">
          <source>InvalidLineNumberException</source>
          <target state="translated">InvalidLineNumberException</target>
        </trans-unit>
        <trans-unit id="b239c127a2f46bb89a6da3e4ea195a0c12ca7ae3" translate="yes" xml:space="preserve">
          <source>InvalidMarkException</source>
          <target state="translated">InvalidMarkException</target>
        </trans-unit>
        <trans-unit id="31abe6b3d5974a0902868b228339c6ca7e9065c3" translate="yes" xml:space="preserve">
          <source>InvalidMidiDataException</source>
          <target state="translated">InvalidMidiDataException</target>
        </trans-unit>
        <trans-unit id="a17ffe0cd6f6c858f9b0aa354350d3cdaf3bdb7f" translate="yes" xml:space="preserve">
          <source>InvalidModuleDescriptorException</source>
          <target state="translated">InvalidModuleDescriptorException</target>
        </trans-unit>
        <trans-unit id="d2db99cd1eba547ddba9ad1cf0309bd51e46c43e" translate="yes" xml:space="preserve">
          <source>InvalidModuleException</source>
          <target state="translated">InvalidModuleException</target>
        </trans-unit>
        <trans-unit id="5819b31a84c808f4a1443155bcbe789cd7f04c92" translate="yes" xml:space="preserve">
          <source>InvalidNameException</source>
          <target state="translated">InvalidNameException</target>
        </trans-unit>
        <trans-unit id="ff7be8e2dff3f0f66297df45333ca092b5032251" translate="yes" xml:space="preserve">
          <source>InvalidObjectException</source>
          <target state="translated">InvalidObjectException</target>
        </trans-unit>
        <trans-unit id="c96517c785c13c8e859d5d2cd569da48275e8577" translate="yes" xml:space="preserve">
          <source>InvalidOpenTypeException</source>
          <target state="translated">InvalidOpenTypeException</target>
        </trans-unit>
        <trans-unit id="c064d99e8f5efa6ee638d28c22a4ae02cd598d54" translate="yes" xml:space="preserve">
          <source>InvalidParameterException</source>
          <target state="translated">InvalidParameterException</target>
        </trans-unit>
        <trans-unit id="cbb1048ae7e6e53c0fab61f26cd9cf7673a75c77" translate="yes" xml:space="preserve">
          <source>InvalidParameterSpecException</source>
          <target state="translated">InvalidParameterSpecException</target>
        </trans-unit>
        <trans-unit id="4516701717ed32267a58e05490518e90feaa07d3" translate="yes" xml:space="preserve">
          <source>InvalidPathException</source>
          <target state="translated">InvalidPathException</target>
        </trans-unit>
        <trans-unit id="239bf1bec4b954f79d96c340981aca2dcdcffe81" translate="yes" xml:space="preserve">
          <source>InvalidPathException.getIndex()</source>
          <target state="translated">InvalidPathException.getIndex()</target>
        </trans-unit>
        <trans-unit id="465af48c272d562424f449c0ad73eed3643f2d2a" translate="yes" xml:space="preserve">
          <source>InvalidPathException.getInput()</source>
          <target state="translated">InvalidPathException.getInput()</target>
        </trans-unit>
        <trans-unit id="40199a6310218953777240ea6ee7d98a81fcfa80" translate="yes" xml:space="preserve">
          <source>InvalidPathException.getMessage()</source>
          <target state="translated">InvalidPathException.getMessage()</target>
        </trans-unit>
        <trans-unit id="1a26fd104d2f8b497f8a53d7dedc41829a3f2b98" translate="yes" xml:space="preserve">
          <source>InvalidPathException.getReason()</source>
          <target state="translated">InvalidPathException.getReason()</target>
        </trans-unit>
        <trans-unit id="d2742801ce84a0e68ca7dd30f7c7c9c33077f28b" translate="yes" xml:space="preserve">
          <source>InvalidPreferencesFormatException</source>
          <target state="translated">InvalidPreferencesFormatException</target>
        </trans-unit>
        <trans-unit id="5b865d0cb3220e5b0929ed2f0210a9af8eda4740" translate="yes" xml:space="preserve">
          <source>InvalidPropertiesFormatException</source>
          <target state="translated">InvalidPropertiesFormatException</target>
        </trans-unit>
        <trans-unit id="25d94fd439fcf88884d4542f69d37c838347b277" translate="yes" xml:space="preserve">
          <source>InvalidRelationIdException</source>
          <target state="translated">InvalidRelationIdException</target>
        </trans-unit>
        <trans-unit id="785e31ab1b2f0fd373c06364334c9c937f6379de" translate="yes" xml:space="preserve">
          <source>InvalidRelationServiceException</source>
          <target state="translated">InvalidRelationServiceException</target>
        </trans-unit>
        <trans-unit id="e6ea8ea22907e6095bd87726dbf53b9d678cbd2c" translate="yes" xml:space="preserve">
          <source>InvalidRelationTypeException</source>
          <target state="translated">InvalidRelationTypeException</target>
        </trans-unit>
        <trans-unit id="0dd10701202c01603d29246380e71958d128b9c6" translate="yes" xml:space="preserve">
          <source>InvalidRequestStateException</source>
          <target state="translated">InvalidRequestStateException</target>
        </trans-unit>
        <trans-unit id="2775dbcd3dc86bf693007c2b42492b79ff544106" translate="yes" xml:space="preserve">
          <source>InvalidRoleInfoException</source>
          <target state="translated">InvalidRoleInfoException</target>
        </trans-unit>
        <trans-unit id="d97d2d49b4114f33bc3c0f9bcb601aff3046e534" translate="yes" xml:space="preserve">
          <source>InvalidRoleValueException</source>
          <target state="translated">InvalidRoleValueException</target>
        </trans-unit>
        <trans-unit id="ac0598fca3693243fa25871e9d22899fbceaf6ed" translate="yes" xml:space="preserve">
          <source>InvalidSearchControlsException</source>
          <target state="translated">InvalidSearchControlsException</target>
        </trans-unit>
        <trans-unit id="d295432c9ef6f963623ec8d122b027a2e53ad709" translate="yes" xml:space="preserve">
          <source>InvalidSearchFilterException</source>
          <target state="translated">InvalidSearchFilterException</target>
        </trans-unit>
        <trans-unit id="d12e32fbf4239251c75aeb55135cbd7f7ea71e66" translate="yes" xml:space="preserve">
          <source>InvalidStackFrameException</source>
          <target state="translated">InvalidStackFrameException</target>
        </trans-unit>
        <trans-unit id="12aef70af5a51a3115e6254a502ee127c6d50d66" translate="yes" xml:space="preserve">
          <source>InvalidStreamException</source>
          <target state="translated">InvalidStreamException</target>
        </trans-unit>
        <trans-unit id="dab288e1b011d798b42ef2d775cad25c2995b7e3" translate="yes" xml:space="preserve">
          <source>InvalidTargetObjectTypeException</source>
          <target state="translated">InvalidTargetObjectTypeException</target>
        </trans-unit>
        <trans-unit id="c378067d33a7d64973545436b08259ebfa5329a3" translate="yes" xml:space="preserve">
          <source>InvalidTypeException</source>
          <target state="translated">InvalidTypeException</target>
        </trans-unit>
        <trans-unit id="ce392b9266d051f4ed3e5218bd4ca5972181f1cf" translate="yes" xml:space="preserve">
          <source>Invalidates or flushes any internally-cached data that depends on the vertex coordinates of this &lt;code&gt;Polygon&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Polygon&lt;/code&gt; 의 꼭지점 좌표에 따라 내부적으로 캐시 된 데이터를 무효화하거나 플러시합니다 .</target>
        </trans-unit>
        <trans-unit id="d4774934620e4e674e56c8564b2b0c1e06089bff" translate="yes" xml:space="preserve">
          <source>Invalidates or flushes any internally-cached data that depends on the vertex coordinates of this &lt;code&gt;Polygon&lt;/code&gt;. This method should be called after any direct manipulation of the coordinates in the &lt;code&gt;xpoints&lt;/code&gt; or &lt;code&gt;ypoints&lt;/code&gt; arrays to avoid inconsistent results from methods such as &lt;code&gt;getBounds&lt;/code&gt; or &lt;code&gt;contains&lt;/code&gt; that might cache data from earlier computations relating to the vertex coordinates.</source>
          <target state="translated">이 &lt;code&gt;Polygon&lt;/code&gt; 의 꼭지점 좌표에 따라 내부적으로 캐시 된 데이터를 무효화하거나 플러시합니다 . 이 메서드는 &lt;code&gt;xpoints&lt;/code&gt; 또는 &lt;code&gt;ypoints&lt;/code&gt; 배열 의 좌표를 직접 조작 한 후에 호출 하여 &lt;code&gt;getBounds&lt;/code&gt; 와 같은 메서드의 일관성없는 결과를 방지 하거나 정점 좌표와 관련된 이전 계산의 데이터를 캐시 할 수있는 &lt;code&gt;contains&lt;/code&gt; 을 포함 해야합니다.</target>
        </trans-unit>
        <trans-unit id="319346da9a1e7db904eac018f3fee79012a5e508" translate="yes" xml:space="preserve">
          <source>Invalidates the container.</source>
          <target state="translated">컨테이너를 무효화합니다.</target>
        </trans-unit>
        <trans-unit id="27bfcd45008a0b23f381ec9457ccb5a1942edcb0" translate="yes" xml:space="preserve">
          <source>Invalidates the layout along an axis.</source>
          <target state="translated">축을 따라 레이아웃을 무효화합니다.</target>
        </trans-unit>
        <trans-unit id="62b52ab85387ac5e80ed1279be705bd100663642" translate="yes" xml:space="preserve">
          <source>Invalidates the layout along an axis. This happens automatically if the preferences have changed for any of the child views. In some cases the layout may need to be recalculated when the preferences have not changed. The layout can be marked as invalid by calling this method. The layout will be updated the next time the &lt;code&gt;setSize&lt;/code&gt; method is called on this view (typically in paint).</source>
          <target state="translated">축을 따라 레이아웃을 무효화합니다. 하위보기에 대한 기본 설정이 변경된 경우 이는 자동으로 발생합니다. 경우에 따라 환경 설정이 변경되지 않은 경우 레이아웃을 다시 계산해야 할 수 있습니다. 이 메서드를 호출하여 레이아웃을 유효하지 않은 것으로 표시 할 수 있습니다. 레이아웃은 다음 번 에이 뷰 에서 &lt;code&gt;setSize&lt;/code&gt; 메서드가 호출 될 때 업데이트됩니다 (일반적으로 그림판에서).</target>
        </trans-unit>
        <trans-unit id="77ef797afd4a6c1d8f20b0bb5c9d3e10ef4fdd74" translate="yes" xml:space="preserve">
          <source>Invalidates the layout and resizes the cache of requests/allocations.</source>
          <target state="translated">레이아웃을 무효화하고 요청 / 할당 캐시의 크기를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="5e268b6c6a7af0f8700d370d8aec7b6220da07fc" translate="yes" xml:space="preserve">
          <source>Invalidates the layout and resizes the cache of requests/allocations. The child allocations can still be accessed for the old layout, but the new children will have an offset and span of 0.</source>
          <target state="translated">레이아웃을 무효화하고 요청 / 할당 캐시의 크기를 조정합니다. 이전 레이아웃에 대해 자식 할당에 계속 액세스 할 수 있지만 새 자식의 오프셋과 범위는 0입니다.</target>
        </trans-unit>
        <trans-unit id="0e6ea0711c294fefd2ba264ddd91e5cb762a89f8" translate="yes" xml:space="preserve">
          <source>Invalidates the layout, indicating that if the layout manager has cached information it should be discarded.</source>
          <target state="translated">레이아웃을 무효화하여 레이아웃 관리자가 정보를 캐시 한 경우 폐기해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e5fae9cb0bb672cfb14757f68bf99f64efa9b0fa" translate="yes" xml:space="preserve">
          <source>Invalidates the session.</source>
          <target state="translated">세션을 무효화합니다.</target>
        </trans-unit>
        <trans-unit id="32497061352557c389925c01f63940038dfb7d2e" translate="yes" xml:space="preserve">
          <source>Invalidates this component and its ancestors.</source>
          <target state="translated">이 구성 요소와 해당 조상을 무효화합니다.</target>
        </trans-unit>
        <trans-unit id="edb1029b55502c114543fe022e71c337ea703741" translate="yes" xml:space="preserve">
          <source>Invalidates this virtual machine mirror.</source>
          <target state="translated">이 가상 머신 미러를 무효화합니다.</target>
        </trans-unit>
        <trans-unit id="045f6c859268808b98f00008f578bc8ebd83d679" translate="yes" xml:space="preserve">
          <source>Invalidates this virtual machine mirror. The communication channel to the target VM is closed, and the target VM prepares to accept another subsequent connection from this debugger or another debugger, including the following tasks:</source>
          <target state="translated">이 가상 머신 미러를 무효화합니다. 대상 VM에 대한 통신 채널이 닫히고 대상 VM은 다음 작업을 포함하여이 디버거 또는 다른 디버거에서 다른 후속 연결을 수락 할 준비를합니다.</target>
        </trans-unit>
        <trans-unit id="079371154b5cc3cac1fc935bd77cbece8f9da21a" translate="yes" xml:space="preserve">
          <source>Invalidation is global and immediate, as if the switch point contained a volatile boolean variable consulted on every call to &lt;code&gt;M&lt;/code&gt;. The invalidation is also permanent, which means the switch point can change state only once. The switch point will always delegate to &lt;code&gt;F&lt;/code&gt; after being invalidated. At that point &lt;code&gt;guardWithTest&lt;/code&gt; may ignore &lt;code&gt;T&lt;/code&gt; and return &lt;code&gt;F&lt;/code&gt;.</source>
          <target state="translated">스위치 포인트에 &lt;code&gt;M&lt;/code&gt; 에 대한 모든 호출에서 참조되는 휘발성 부울 변수가 포함 된 것처럼 무효화는 전체적이고 즉각적 입니다. 무효화도 영구적이므로 스위치 포인트는 상태를 한 번만 변경할 수 있습니다. 스위치 포인트는 무효화 된 후 항상 &lt;code&gt;F&lt;/code&gt; 로 위임됩니다 . 이 시점에서 &lt;code&gt;guardWithTest&lt;/code&gt; 는 &lt;code&gt;T&lt;/code&gt; 를 무시 하고 &lt;code&gt;F&lt;/code&gt; 를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3390616cafac7ff314d6aadaf20e48034cbb3314" translate="yes" xml:space="preserve">
          <source>Invariants</source>
          <target state="translated">Invariants</target>
        </trans-unit>
        <trans-unit id="edbe4f29e408f60a10491d14d8979389b0d3b144" translate="yes" xml:space="preserve">
          <source>Inverse transforms an array of double precision coordinates by this transform.</source>
          <target state="translated">역변환은이 변환에 의해 배정 밀도 좌표 배열을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="982af67b7bb9d33fd97c2ff19343d5b623edb32f" translate="yes" xml:space="preserve">
          <source>Inverse transforms an array of double precision coordinates by this transform. The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the specified offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt;.</source>
          <target state="translated">역변환은이 변환에 의해 배정 밀도 좌표 배열을 변환합니다. 두 좌표 배열 섹션은 정확히 동일하거나 결과의 유효성에 영향을주지 않고 동일한 배열의 섹션을 겹칠 수 있습니다. 이 방법을 사용하면 원본 좌표를 변환하기 전에 이전 작업으로 덮어 쓰지 않습니다. 좌표는 지정된 오프셋에서 시작하여 &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt; 순서로 배열에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="62a7e06616c0925349cb68e31cef63f36823db5f" translate="yes" xml:space="preserve">
          <source>Inverse transforms the specified &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt;.</source>
          <target state="translated">역변환은 지정된 &lt;code&gt;ptSrc&lt;/code&gt; 를 변환 하고 결과를 &lt;code&gt;ptDst&lt;/code&gt; 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="c70833a5e1979dbef3df50f7e8ce790a3afc0de3" translate="yes" xml:space="preserve">
          <source>Inverse transforms the specified &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt;. If &lt;code&gt;ptDst&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a new &lt;code&gt;Point2D&lt;/code&gt; object is allocated and then the result of the transform is stored in this object. In either case, &lt;code&gt;ptDst&lt;/code&gt;, which contains the transformed point, is returned for convenience. If &lt;code&gt;ptSrc&lt;/code&gt; and &lt;code&gt;ptDst&lt;/code&gt; are the same object, the input point is correctly overwritten with the transformed point.</source>
          <target state="translated">역변환은 지정된 &lt;code&gt;ptSrc&lt;/code&gt; 를 변환 하고 결과를 &lt;code&gt;ptDst&lt;/code&gt; 에 저장합니다 . 경우 &lt;code&gt;ptDst&lt;/code&gt; 인 &lt;code&gt;null&lt;/code&gt; 새 &lt;code&gt;Point2D&lt;/code&gt; 객체 할당하고 변환의 결과는,이 오브젝트에 저장된다. 두 경우 모두 편의를 위해 변환 된 점을 포함하는 &lt;code&gt;ptDst&lt;/code&gt; 가 반환됩니다. 경우 &lt;code&gt;ptSrc&lt;/code&gt; 를 하고 &lt;code&gt;ptDst&lt;/code&gt; 동일한 목적이며, 입력 점은 변화 점으로 겹쳐있다.</target>
        </trans-unit>
        <trans-unit id="6b673583d53a01ad07ad50c7da586a0003c222cf" translate="yes" xml:space="preserve">
          <source>Invocable</source>
          <target state="translated">Invocable</target>
        </trans-unit>
        <trans-unit id="81a33e7fed17e54b5b4e8d107be332efe7fc20e0" translate="yes" xml:space="preserve">
          <source>Invocable.getInterface()</source>
          <target state="translated">Invocable.getInterface()</target>
        </trans-unit>
        <trans-unit id="177766e0240970cc1a17d257c8db8defa9de5c64" translate="yes" xml:space="preserve">
          <source>Invocable.invokeFunction()</source>
          <target state="translated">Invocable.invokeFunction()</target>
        </trans-unit>
        <trans-unit id="fed8a1718e4ae382ad5a28459ac19b8cbc0f793a" translate="yes" xml:space="preserve">
          <source>Invocable.invokeMethod()</source>
          <target state="translated">Invocable.invokeMethod()</target>
        </trans-unit>
        <trans-unit id="2d774ccba5bdecdb84431fcc2a9d249126b74ff5" translate="yes" xml:space="preserve">
          <source>Invocation chaining</source>
          <target state="translated">호출 체인</target>
        </trans-unit>
        <trans-unit id="ba4fe534cec0cb3916ec43d352c953e34768896b" translate="yes" xml:space="preserve">
          <source>Invocation checking</source>
          <target state="translated">호출 검사</target>
        </trans-unit>
        <trans-unit id="04191df9946f4981499b4b7c93ea6ee4f9d58157" translate="yes" xml:space="preserve">
          <source>Invocation handler that can forward methods through an MBean server to a Standard MBean or MXBean.</source>
          <target state="translated">MBean 서버를 통해 Standard MBean 또는 MXBean으로 메소드를 전달할 수있는 호출 핸들러.</target>
        </trans-unit>
        <trans-unit id="6168c650e848e2698dcc00e11637d9e86cb4a295" translate="yes" xml:space="preserve">
          <source>Invocation handler that can forward methods through an MBean server to a Standard MBean or MXBean. This constructor may be called instead of relying on &lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt;&lt;/a&gt;, for instance if you need to supply a different &lt;a href=&quot;../../../java.base/java/lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../../../java.base/java/lang/reflect/proxy#newProxyInstance(java.lang.ClassLoader,java.lang.Class%5B%5D,java.lang.reflect.InvocationHandler)&quot;&gt;&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">MBean 서버를 통해 Standard MBean 또는 MXBean으로 메소드를 전달할 수있는 호출 핸들러. 이 생성자는 &lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; &lt;/a&gt; 에 의존하는 대신 호출 될 수 있습니다. 예를 들어 &lt;a href=&quot;../../../java.base/java/lang/reflect/proxy#newProxyInstance(java.lang.ClassLoader,java.lang.Class%5B%5D,java.lang.reflect.InvocationHandler)&quot;&gt; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; 에&lt;/a&gt; 다른 &lt;a href=&quot;../../../java.base/java/lang/classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt; 를 제공해야하는 경우 입니다.</target>
        </trans-unit>
        <trans-unit id="b3787cd5dd9df632df12719a5fdc92f4a2e2f13b" translate="yes" xml:space="preserve">
          <source>Invocation handler that can forward methods through an MBean server to a Standard MBean or MXBean. This constructor may be called instead of relying on &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt;&lt;/a&gt;, for instance if you need to supply a different &lt;a href=&quot;../../java/lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../../java/lang/reflect/proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt;&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">MBean 서버를 통해 메소드를 표준 MBean 또는 MXBean으로 전달할 수있는 호출 핸들러. 예를 들어 &lt;a href=&quot;../../java/lang/reflect/proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; 에&lt;/a&gt; 다른 &lt;a href=&quot;../../java/lang/classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt; 를 제공해야하는 경우, &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; &lt;/a&gt; 에 의존하지 않고이 생성자를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="25e20790fe7971d6f5a3b1e87cc19226c8dafc0e" translate="yes" xml:space="preserve">
          <source>Invocation handler that forwards methods through an MBean server to a Standard MBean.</source>
          <target state="translated">MBean 서버를 통해 표준 MBean으로 메소드를 전달하는 호출 핸들러.</target>
        </trans-unit>
        <trans-unit id="c42bfda42e7f23770f9ff7fcb52f2f239c689237" translate="yes" xml:space="preserve">
          <source>Invocation handler that forwards methods through an MBean server to a Standard MBean. This constructor may be called instead of relying on &lt;a href=&quot;jmx#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;JMX.newMBeanProxy&lt;/code&gt;&lt;/a&gt;, for instance if you need to supply a different &lt;a href=&quot;../../../java.base/java/lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../../../java.base/java/lang/reflect/proxy#newProxyInstance(java.lang.ClassLoader,java.lang.Class%5B%5D,java.lang.reflect.InvocationHandler)&quot;&gt;&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">MBean 서버를 통해 표준 MBean으로 메소드를 전달하는 호출 핸들러. 예를 들어 &lt;a href=&quot;../../../java.base/java/lang/reflect/proxy#newProxyInstance(java.lang.ClassLoader,java.lang.Class%5B%5D,java.lang.reflect.InvocationHandler)&quot;&gt; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; 에&lt;/a&gt; 다른 &lt;a href=&quot;../../../java.base/java/lang/classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt; 를 제공해야하는 경우 &lt;a href=&quot;jmx#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;JMX.newMBeanProxy&lt;/code&gt; &lt;/a&gt; 에 의존하는 대신이 생성자를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f76cdbaaf396696f5a17680e68b5cb7e77ce261" translate="yes" xml:space="preserve">
          <source>Invocation handler that forwards methods through an MBean server to a Standard MBean. This constructor may be called instead of relying on &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;JMX.newMBeanProxy&lt;/code&gt;&lt;/a&gt;, for instance if you need to supply a different &lt;a href=&quot;../../java/lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../../java/lang/reflect/proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt;&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">MBean 서버를 통해 메소드를 표준 MBean으로 전달하는 호출 핸들러. 예를 들어 &lt;a href=&quot;../../java/lang/reflect/proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; 에&lt;/a&gt; 다른 &lt;a href=&quot;../../java/lang/classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt; 를 제공해야하는 경우, &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;JMX.newMBeanProxy&lt;/code&gt; &lt;/a&gt; 에 의존하지 않고이 생성자를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="48ee43eeb31567b6f373522a86cc90b266d66d21" translate="yes" xml:space="preserve">
          <source>Invocation is as if by &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;MethodHandle.invoke&lt;/code&gt;&lt;/a&gt;. The returned result must be a &lt;a href=&quot;callsite&quot;&gt;&lt;code&gt;CallSite&lt;/code&gt;&lt;/a&gt; (or a subclass). The type of the call site's target must be exactly equal to the type derived from the dynamic call site's type descriptor and passed to the bootstrap method. The call site then becomes permanently linked to the dynamic call site.</source>
          <target state="translated">&lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;MethodHandle.invoke&lt;/code&gt; 에&lt;/a&gt; 의한 호출입니다 . 리턴 된 결과는 &lt;a href=&quot;callsite&quot;&gt; &lt;code&gt;CallSite&lt;/code&gt; &lt;/a&gt; (또는 서브 클래스) 여야합니다 . 호출 사이트 대상의 유형은 동적 호출 사이트의 유형 설명자에서 파생 된 유형과 정확히 같아야하며 부트 스트랩 메소드로 전달됩니다. 그러면 호출 사이트가 동적 호출 사이트에 영구적으로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="5f817f7cc96f37a770b339fb42f99fc55cfe4622" translate="yes" xml:space="preserve">
          <source>Invocation name to use when no name is needed, such as the name of a constructor, or the invocation name of a dynamic constant or dynamic callsite when the bootstrap is known to ignore the invocation name.</source>
          <target state="translated">생성자의 이름과 같이 이름이 필요하지 않을 때 사용할 호출 이름, 부트 스트랩이 호출 이름을 무시하는 것으로 알려진 경우 동적 상수 또는 동적 호출 사이트의 호출 이름입니다.</target>
        </trans-unit>
        <trans-unit id="95f927a1457612a755c9e133f152f3882a4675d2" translate="yes" xml:space="preserve">
          <source>Invocation of Locale Sensitive Services</source>
          <target state="translated">로케일 감지 서비스 호출</target>
        </trans-unit>
        <trans-unit id="5e173e0354c722e8b67b66a137711a7c662dbb2f" translate="yes" xml:space="preserve">
          <source>Invocation of an access mode method behaves as if an invocation of &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;MethodHandle.invoke(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;, where the receiving method handle accepts the VarHandle instance as the leading argument. More specifically, the following, where &lt;code&gt;{access-mode}&lt;/code&gt; corresponds to the access mode method name:</source>
          <target state="translated">액세스 모드 메서드의 호출은 &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;MethodHandle.invoke(java.lang.Object...)&lt;/code&gt; &lt;/a&gt; 의 호출처럼 동작하며 , 여기서 수신 메서드 핸들은 VarHandle 인스턴스를 선행 인수로 받아들입니다. 더 구체적으로 말하면, &lt;code&gt;{access-mode}&lt;/code&gt; 는 액세스 모드 메소드 이름에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="11485f2f88b2de29e7e25e254917cbe0542cebfe" translate="yes" xml:space="preserve">
          <source>Invocation-time checks</source>
          <target state="translated">호출 시간 확인</target>
        </trans-unit>
        <trans-unit id="3acd60dfc391fb0d08d27bc024f86c86c243ba85" translate="yes" xml:space="preserve">
          <source>InvocationEvent</source>
          <target state="translated">InvocationEvent</target>
        </trans-unit>
        <trans-unit id="22f98c6e32facb0c871e2c4ca439b54f28399a68" translate="yes" xml:space="preserve">
          <source>InvocationException</source>
          <target state="translated">InvocationException</target>
        </trans-unit>
        <trans-unit id="b3f05295aaa27209884b6774e0ab796cba868a55" translate="yes" xml:space="preserve">
          <source>InvocationHandler</source>
          <target state="translated">InvocationHandler</target>
        </trans-unit>
        <trans-unit id="5d722a9739aa7ca47de8a88b0b3d5f0a18485412" translate="yes" xml:space="preserve">
          <source>InvocationHandler.invoke()</source>
          <target state="translated">InvocationHandler.invoke()</target>
        </trans-unit>
        <trans-unit id="fc84d0ff86544c7fb01ad67f8e1ebae28093135f" translate="yes" xml:space="preserve">
          <source>InvocationKeyHandler</source>
          <target state="translated">InvocationKeyHandler</target>
        </trans-unit>
        <trans-unit id="4a519eeaa5e03ac731c0eec95e7e14c44080cd87" translate="yes" xml:space="preserve">
          <source>InvocationMouseHandler</source>
          <target state="translated">InvocationMouseHandler</target>
        </trans-unit>
        <trans-unit id="d7abaac946c45437e4bcbac93f4a6dee124fd4a5" translate="yes" xml:space="preserve">
          <source>InvocationMouseMotionHandler</source>
          <target state="translated">InvocationMouseMotionHandler</target>
        </trans-unit>
        <trans-unit id="cd3c59efd399bf3ef22759701bc6568a589cdaf1" translate="yes" xml:space="preserve">
          <source>InvocationTargetException</source>
          <target state="translated">InvocationTargetException</target>
        </trans-unit>
        <trans-unit id="69e4f5e9ef5b07668532bd830354ce124059f7d7" translate="yes" xml:space="preserve">
          <source>InvocationTargetException is a checked exception that wraps an exception thrown by an invoked method or constructor.</source>
          <target state="translated">InvocationTargetException은 호출 된 메소드 또는 생성자에 의해 발생 된 예외를 랩핑하는 점검 된 예외입니다.</target>
        </trans-unit>
        <trans-unit id="b20a50a17a6cffa95bc8e28eb7247c9a355e9a7c" translate="yes" xml:space="preserve">
          <source>InvocationTargetException.getCause()</source>
          <target state="translated">InvocationTargetException.getCause()</target>
        </trans-unit>
        <trans-unit id="c08b96f9e5091b5749ec27c1be4197925c4daf05" translate="yes" xml:space="preserve">
          <source>InvocationTargetException.getTargetException()</source>
          <target state="translated">InvocationTargetException.getTargetException()</target>
        </trans-unit>
        <trans-unit id="0369bd72f238b98759a96a155233c485fb93e7cf" translate="yes" xml:space="preserve">
          <source>Invoke &lt;a href=&quot;#findLoadedClass(java.lang.String)&quot;&gt;&lt;code&gt;findLoadedClass(String)&lt;/code&gt;&lt;/a&gt; to check if the class has already been loaded.</source>
          <target state="translated">&lt;a href=&quot;#findLoadedClass(java.lang.String)&quot;&gt; &lt;code&gt;findLoadedClass(String)&lt;/code&gt; &lt;/a&gt; 를 호출 하여 클래스가 이미로드되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c5608e7900a578183fe39f751ae39f998ca0e913" translate="yes" xml:space="preserve">
          <source>Invoke &lt;a href=&quot;abstractqueuedlongsynchronizer#release(long)&quot;&gt;&lt;code&gt;AbstractQueuedLongSynchronizer.release(long)&lt;/code&gt;&lt;/a&gt; with saved state as argument, throwing IllegalMonitorStateException if it fails.</source>
          <target state="translated">저장된 상태를 인수로 사용하여 &lt;a href=&quot;abstractqueuedlongsynchronizer#release(long)&quot;&gt; &lt;code&gt;AbstractQueuedLongSynchronizer.release(long)&lt;/code&gt; &lt;/a&gt; 를 호출 하고 실패하면 IllegalMonitorStateException을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="80b8865e32eed15e195ea950e974438ab1b5f5bf" translate="yes" xml:space="preserve">
          <source>Invoke &lt;a href=&quot;abstractqueuedlongsynchronizer#release-long-&quot;&gt;&lt;code&gt;AbstractQueuedLongSynchronizer.release(long)&lt;/code&gt;&lt;/a&gt; with saved state as argument, throwing IllegalMonitorStateException if it fails.</source>
          <target state="translated">저장된 상태를 인수로하여 &lt;a href=&quot;abstractqueuedlongsynchronizer#release-long-&quot;&gt; &lt;code&gt;AbstractQueuedLongSynchronizer.release(long)&lt;/code&gt; &lt;/a&gt; 를 호출 하여 실패하면 IllegalMonitorStateException을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="420a0873764bc63654a2f081137c4e68fa1d0c15" translate="yes" xml:space="preserve">
          <source>Invoke &lt;a href=&quot;abstractqueuedsynchronizer#release(int)&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer.release(int)&lt;/code&gt;&lt;/a&gt; with saved state as argument, throwing IllegalMonitorStateException if it fails.</source>
          <target state="translated">저장된 상태를 인수로 사용하여 &lt;a href=&quot;abstractqueuedsynchronizer#release(int)&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer.release(int)&lt;/code&gt; &lt;/a&gt; 를 호출 하고 실패하면 IllegalMonitorStateException을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="78b253eaf5be30d9d74fd43aee6e6bd33003a971" translate="yes" xml:space="preserve">
          <source>Invoke &lt;a href=&quot;abstractqueuedsynchronizer#release-int-&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer.release(int)&lt;/code&gt;&lt;/a&gt; with saved state as argument, throwing IllegalMonitorStateException if it fails.</source>
          <target state="translated">저장된 상태를 인수로하여 &lt;a href=&quot;abstractqueuedsynchronizer#release-int-&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer.release(int)&lt;/code&gt; &lt;/a&gt; 를 호출 하여 실패하면 IllegalMonitorStateException을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="27a4ebe5b910b1dbdf3c4437cb7b51fed7967cae" translate="yes" xml:space="preserve">
          <source>Invoke &lt;a href=&quot;classloader#findLoadedClass-java.lang.String-&quot;&gt;&lt;code&gt;findLoadedClass(String)&lt;/code&gt;&lt;/a&gt; to check if the class has already been loaded.</source>
          <target state="translated">&lt;a href=&quot;classloader#findLoadedClass-java.lang.String-&quot;&gt; &lt;code&gt;findLoadedClass(String)&lt;/code&gt; &lt;/a&gt; 를 호출 하여 클래스가 이미로드되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="af42b67ccf562c30506e465fdd556919ef61d067" translate="yes" xml:space="preserve">
          <source>Invoke a method.</source>
          <target state="translated">메서드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="6f0851bb3f4ce6377a4f95dcc97c7a9cc986a6b1" translate="yes" xml:space="preserve">
          <source>Invoke a method. This form of delegating method invocation to the reference allows the reference to take care of setting up the connection to the remote host, marshaling some representation for the method and parameters, then communicating the method invocation to the remote host. This method either returns the result of a method invocation on the remote object which resides on the remote host or throws a RemoteException if the call failed or an application-level exception if the remote invocation throws an exception.</source>
          <target state="translated">메서드를 호출합니다. 이 형식의 메서드 호출을 참조에 위임하면 참조가 원격 호스트에 대한 연결을 설정하고 메서드 및 매개 변수에 대한 일부 표현을 마샬링 한 다음 메서드 호출을 원격 호스트에 전달하는 작업을 처리 할 수 ​​있습니다. 이 메서드는 원격 호스트에 상주하는 원격 객체에 대한 메서드 호출의 결과를 반환하거나 호출이 실패하면 RemoteException을 throw하거나 원격 호출이 예외를 throw하면 응용 프로그램 수준 예외를 throw합니다.</target>
        </trans-unit>
        <trans-unit id="2a36d6d75a81659a5154294be6c1956feca8d0fb" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method one final time, passing &lt;code&gt;true&lt;/code&gt; for the &lt;code&gt;endOfInput&lt;/code&gt; argument; and then</source>
          <target state="translated">마지막으로 &lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 메서드를 호출하고 &lt;code&gt;endOfInput&lt;/code&gt; 인수에 대해 &lt;code&gt;true&lt;/code&gt; 를 전달 합니다 . 그리고</target>
        </trans-unit>
        <trans-unit id="4e121c6238877cfa52264159c47971fcd2c53d4f" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method zero or more times, as long as additional input may be available, passing &lt;code&gt;false&lt;/code&gt; for the &lt;code&gt;endOfInput&lt;/code&gt; argument and filling the input buffer and flushing the output buffer between invocations;</source>
          <target state="translated">추가 입력을 사용할 수있는 한 &lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 메서드를 0 회 이상 호출하고 &lt;code&gt;endOfInput&lt;/code&gt; 인수에 대해 &lt;code&gt;false&lt;/code&gt; 를 전달 하고 입력 버퍼를 채우고 호출 사이에 출력 버퍼를 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="75110aeff412d0312d551ca3b8f54980d1caf107" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method one final time, passing &lt;code&gt;true&lt;/code&gt; for the &lt;code&gt;endOfInput&lt;/code&gt; argument; and then</source>
          <target state="translated">마지막으로 &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 메서드를 호출하고 &lt;code&gt;endOfInput&lt;/code&gt; 인수에 대해 &lt;code&gt;true&lt;/code&gt; 를 전달 합니다 . 그리고</target>
        </trans-unit>
        <trans-unit id="4ba8de286125469e68db05a4b0bc62f5d771f6a6" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method zero or more times, as long as additional input may be available, passing &lt;code&gt;false&lt;/code&gt; for the &lt;code&gt;endOfInput&lt;/code&gt; argument and filling the input buffer and flushing the output buffer between invocations;</source>
          <target state="translated">추가 입력을 사용할 수있는 한 &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 메소드를 0 번 이상 호출하고 &lt;code&gt;endOfInput&lt;/code&gt; 인수에 대해 &lt;code&gt;false&lt;/code&gt; 를 전달 하고 입력 버퍼를 채우고 호출 사이에 출력 버퍼를 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="5398a4d5deb1c5b05cdb3748221bdeef0613bb6c" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#findClass(java.lang.String)&quot;&gt;&lt;code&gt;findClass(String)&lt;/code&gt;&lt;/a&gt; method to find the class.</source>
          <target state="translated">&lt;a href=&quot;#findClass(java.lang.String)&quot;&gt; &lt;code&gt;findClass(String)&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 클래스를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="84db886a1d9f542431af8afa6a873131bb90d847" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#flush(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; method so that the encoder can flush any internal state to the output buffer.</source>
          <target state="translated">인코더가 모든 내부 상태를 출력 버퍼로 플러시 할 수 있도록 &lt;a href=&quot;#flush(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="742d6169d9f68c66c5364c4933c91afbacc38322" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#flush(java.nio.CharBuffer)&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; method so that the decoder can flush any internal state to the output buffer.</source>
          <target state="translated">디코더가 내부 상태를 출력 버퍼로 플러시 할 수 있도록 &lt;a href=&quot;#flush(java.nio.CharBuffer)&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="de739770401ab7a3d9745c9e34f95bf108340ed2" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#hasArray()&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">인보 &lt;a href=&quot;#hasArray()&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; 의&lt;/a&gt; 버퍼가 액세스 가능한 보조 배열을 가지고 있는지 확인하기 위해이 메소드를 호출하기 전에 방법.</target>
        </trans-unit>
        <trans-unit id="7d20ee1f9829c26b63a0abff6327cc1493483844" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method on the parent class loader. If the parent is &lt;code&gt;null&lt;/code&gt; the class loader built into the virtual machine is used, instead.</source>
          <target state="translated">상위 클래스 로더 에서 &lt;a href=&quot;#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt; 메소드를 호출하십시오 . 부모가 &lt;code&gt;null&lt;/code&gt; 이면 가상 머신에 내장 된 클래스 로더가 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="35f3adb3de4d1e6782e662e0d008229882f155a0" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;buffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">인보 &lt;a href=&quot;buffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; 의&lt;/a&gt; 버퍼가 액세스 가능한 보조 배열을 가지고 있는지 확인하기 위해이 메소드를 호출하기 전에 방법.</target>
        </trans-unit>
        <trans-unit id="7fddbe46229b3b3526010f76e7d3fc64162c3363" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;bytebuffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">인보 &lt;a href=&quot;bytebuffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; 의&lt;/a&gt; 버퍼가 액세스 가능한 보조 배열을 가지고 있는지 확인하기 위해이 메소드를 호출하기 전에 방법.</target>
        </trans-unit>
        <trans-unit id="f0825350bc7d2a7a2838fe4fd58c7d9e041d7e45" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;charbuffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">인보 &lt;a href=&quot;charbuffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; 의&lt;/a&gt; 버퍼가 액세스 가능한 보조 배열을 가지고 있는지 확인하기 위해이 메소드를 호출하기 전에 방법.</target>
        </trans-unit>
        <trans-unit id="06729342a9d7941483ecf03fc4cbd5628bac89fd" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method one final time, passing &lt;code&gt;true&lt;/code&gt; for the &lt;code&gt;endOfInput&lt;/code&gt; argument; and then</source>
          <target state="translated">&lt;code&gt;endOfInput&lt;/code&gt; 인수에 대해 &lt;code&gt;true&lt;/code&gt; 를 전달하여 마지막으로 &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 메소드를 한 번 호출하십시오 . 그리고</target>
        </trans-unit>
        <trans-unit id="c8d9e98449c69a8758a70158709fb91add9d2d1b" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method zero or more times, as long as additional input may be available, passing &lt;code&gt;false&lt;/code&gt; for the &lt;code&gt;endOfInput&lt;/code&gt; argument and filling the input buffer and flushing the output buffer between invocations;</source>
          <target state="translated">&lt;code&gt;endOfInput&lt;/code&gt; 인수에 대해 &lt;code&gt;false&lt;/code&gt; 를 전달 하고 입력 버퍼를 채우고 호출간에 출력 버퍼를 비우는 추가 입력을 사용할 수있는 한 &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 메소드를 0 번 이상 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="23b214042b726ff53a4a7b5b6d9765ff6afc9d1c" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;charsetdecoder#flush-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; method so that the decoder can flush any internal state to the output buffer.</source>
          <target state="translated">디코더가 내부 상태를 출력 버퍼로 플러시 할 수 있도록 &lt;a href=&quot;charsetdecoder#flush-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt; 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b59b0a34d9fe0d0109d73931b63167d9a15fbba" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method one final time, passing &lt;code&gt;true&lt;/code&gt; for the &lt;code&gt;endOfInput&lt;/code&gt; argument; and then</source>
          <target state="translated">&lt;code&gt;endOfInput&lt;/code&gt; 인수에 대해 &lt;code&gt;true&lt;/code&gt; 를 전달하여 마지막으로 &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 메소드를 한 번 호출하십시오 . 그리고</target>
        </trans-unit>
        <trans-unit id="0edd49b80796bb4f6b8ad7abce3fad2ecf413f65" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method zero or more times, as long as additional input may be available, passing &lt;code&gt;false&lt;/code&gt; for the &lt;code&gt;endOfInput&lt;/code&gt; argument and filling the input buffer and flushing the output buffer between invocations;</source>
          <target state="translated">&lt;code&gt;endOfInput&lt;/code&gt; 인수에 대해 &lt;code&gt;false&lt;/code&gt; 를 전달 하고 입력 버퍼를 채우고 호출간에 출력 버퍼를 비우는 추가 입력을 사용할 수있는 한 &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 메소드를 0 회 이상 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="a7d9730556ee19db721a4b1e552a7adfa7af79f8" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;charsetencoder#flush-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; method so that the encoder can flush any internal state to the output buffer.</source>
          <target state="translated">인코더가 내부 상태를 출력 버퍼로 플러시 할 수 있도록 &lt;a href=&quot;charsetencoder#flush-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt; 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="0706b9c2bb2d4677c1bedae45943eb9912f243e9" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;classloader#findClass-java.lang.String-&quot;&gt;&lt;code&gt;findClass(String)&lt;/code&gt;&lt;/a&gt; method to find the class.</source>
          <target state="translated">&lt;a href=&quot;classloader#findClass-java.lang.String-&quot;&gt; &lt;code&gt;findClass(String)&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 클래스를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="d117015802e4688474f221a3e2412aa7aaca3ce7" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on the parent class loader. If the parent is &lt;code&gt;null&lt;/code&gt; the class loader built-in to the virtual machine is used, instead.</source>
          <target state="translated">부모 클래스 로더 에서 &lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 메소드를 호출하십시오 . 부모가 &lt;code&gt;null&lt;/code&gt; 인 경우 가상 머신에 내장 된 클래스 로더가 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="27b6a13b9b14ced504eab55fd8b7c122798f61e6" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;doublebuffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">인보 &lt;a href=&quot;doublebuffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; 의&lt;/a&gt; 버퍼가 액세스 가능한 보조 배열을 가지고 있는지 확인하기 위해이 메소드를 호출하기 전에 방법.</target>
        </trans-unit>
        <trans-unit id="9c3622102457e49ffc20e55266df372ca6a895d5" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;floatbuffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">인보 &lt;a href=&quot;floatbuffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; 의&lt;/a&gt; 버퍼가 액세스 가능한 보조 배열을 가지고 있는지 확인하기 위해이 메소드를 호출하기 전에 방법.</target>
        </trans-unit>
        <trans-unit id="bf8de384f16ea1d2f67402c2b18cd13e98f8896e" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;intbuffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">인보 &lt;a href=&quot;intbuffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; 의&lt;/a&gt; 버퍼가 액세스 가능한 보조 배열을 가지고 있는지 확인하기 위해이 메소드를 호출하기 전에 방법.</target>
        </trans-unit>
        <trans-unit id="23123d4e2643527ed118e5c5a413930d089d6f76" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;longbuffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">인보 &lt;a href=&quot;longbuffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; 의&lt;/a&gt; 버퍼가 액세스 가능한 보조 배열을 가지고 있는지 확인하기 위해이 메소드를 호출하기 전에 방법.</target>
        </trans-unit>
        <trans-unit id="916e201158f19877346569b4af1ded5f28578d9a" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;shortbuffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">인보 &lt;a href=&quot;shortbuffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; 의&lt;/a&gt; 버퍼가 액세스 가능한 보조 배열을 가지고 있는지 확인하기 위해이 메소드를 호출하기 전에 방법.</target>
        </trans-unit>
        <trans-unit id="0e34ee2cb044210740157c12218b25008f89d279" translate="yes" xml:space="preserve">
          <source>Invoke the original method handle on the converted argument list.</source>
          <target state="translated">변환 된 인수 목록에서 원래 메소드 핸들을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="798efa25f41946e046c1d97e3efffb88c1becdbf" translate="yes" xml:space="preserve">
          <source>Invoke the specified &quot;doit-method&quot;, a static method with no parameters.</source>
          <target state="translated">매개 변수가없는 정적 메소드 인 지정된 &quot;doit-method&quot;를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="404129920a47c25d5848d21d494283fa00428dce" translate="yes" xml:space="preserve">
          <source>Invoke the specified &quot;doit-method&quot;, a static method with no parameters. The &lt;a href=&quot;../spi/executioncontrol#invoke(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;ExecutionControl.invoke(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt; in this class will call this to invoke.</source>
          <target state="translated">매개 변수가없는 정적 메소드 인 지정된 &quot;doit-method&quot;를 호출하십시오. 이 클래스 의 &lt;a href=&quot;../spi/executioncontrol#invoke(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;ExecutionControl.invoke(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt; 는 이것을 호출하여 호출합니다.</target>
        </trans-unit>
        <trans-unit id="2ee9965b8220aa0a55337eb8e61d435a8ade9229" translate="yes" xml:space="preserve">
          <source>Invoke the type-adjusted method handle on the unpacked arguments: MH1.invokeExact(A0, ...).</source>
          <target state="translated">압축이 해제 된 인수 MH1.invokeExact (A0, ...)에서 유형 조정 된 메소드 핸들을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="ba2611b55d1b3e92b53ad132e56819bb8dfb4166" translate="yes" xml:space="preserve">
          <source>Invoke this method after writing data from a buffer in case the write was incomplete. The following loop, for example, copies bytes from one channel to another via the buffer &lt;code&gt;buf&lt;/code&gt;:</source>
          <target state="translated">쓰기가 불완전한 경우 버퍼에서 데이터를 쓴 후이 메소드를 호출하십시오. 예를 들어 다음 루프는 버퍼 &lt;code&gt;buf&lt;/code&gt; 를 통해 한 채널에서 다른 채널로 바이트를 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="99d56aefcb3014cd66a64d01af2299a82448431f" translate="yes" xml:space="preserve">
          <source>Invoke this method after you've changed how node is to be represented in the tree.</source>
          <target state="translated">트리에서 노드를 표시하는 방법을 변경 한 후이 메소드를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="ce730592cd8aaaff0c0661cce5f15481cd24af15" translate="yes" xml:space="preserve">
          <source>Invoke this method after you've changed how the children identified by childIndicies are to be represented in the tree.</source>
          <target state="translated">childIndicies로 식별 된 하위 항목이 트리에 표시되는 방식을 변경 한 후이 메소드를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="8850517cd3640b3850a4f2bd0a504be28d07d514" translate="yes" xml:space="preserve">
          <source>Invoke this method after you've inserted some TreeNodes into node.</source>
          <target state="translated">일부 TreeNode를 노드에 삽입 한 후이 메서드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="a45f88c84e3d9a8a8a9aaf7533c189d5a188cb6e" translate="yes" xml:space="preserve">
          <source>Invoke this method after you've inserted some TreeNodes into node. childIndices should be the index of the new elements and must be sorted in ascending order.</source>
          <target state="translated">일부 TreeNode를 노드에 삽입 한 후이 메서드를 호출합니다. childIndices는 새 요소의 인덱스 여야하며 오름차순으로 정렬되어야합니다.</target>
        </trans-unit>
        <trans-unit id="be56a142044fc879ba2dd26d1e3e75b208bb8e3c" translate="yes" xml:space="preserve">
          <source>Invoke this method after you've removed some TreeNodes from node.</source>
          <target state="translated">노드에서 일부 TreeNode를 제거한 후이 메서드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="b2f047a9d0d170adfadfbf2ba117f2722c3149ee" translate="yes" xml:space="preserve">
          <source>Invoke this method after you've removed some TreeNodes from node. childIndices should be the index of the removed elements and must be sorted in ascending order. And removedChildren should be the array of the children objects that were removed.</source>
          <target state="translated">노드에서 일부 TreeNode를 제거한 후이 메서드를 호출합니다. childIndices는 제거 된 요소의 인덱스 여야하며 오름차순으로 정렬되어야합니다. 그리고 removedChildren은 제거 된 자식 객체의 배열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="62707c4638f7af43169c09e864c8365dc4919e85" translate="yes" xml:space="preserve">
          <source>Invoke this method before a sequence of channel-write or</source>
          <target state="translated">일련의 채널 쓰기 전에 또는이 메소드를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="13a4d959fb7b989ce01c8af7fe5aa66e2eebd9b7" translate="yes" xml:space="preserve">
          <source>Invoke this method before using a sequence of channel-read or</source>
          <target state="translated">일련의 채널 읽기를 사용하기 전에이 메소드를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="dcba6c23627fd25dc0984bf733b56924f5e09380" translate="yes" xml:space="preserve">
          <source>Invoke this method if you've modified the &lt;code&gt;TreeNode&lt;/code&gt;s upon which this model depends.</source>
          <target state="translated">이 모델이 의존 하는 &lt;code&gt;TreeNode&lt;/code&gt; 를 수정 한 경우이 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="056e5f73f9ba2290ad2417a20e17b8fb82daaf96" translate="yes" xml:space="preserve">
          <source>Invoke this method if you've modified the &lt;code&gt;TreeNode&lt;/code&gt;s upon which this model depends. The model will notify all of its listeners that the model has changed below the given node.</source>
          <target state="translated">이 모델이 의존 하는 &lt;code&gt;TreeNode&lt;/code&gt; 를 수정 한 경우이 메서드를 호출합니다 . 모델은 모든 리스너에게 모델이 주어진 노드 아래에서 변경되었음을 알립니다.</target>
        </trans-unit>
        <trans-unit id="88336e133b87382d574bdd4e993b650c15cf4925" translate="yes" xml:space="preserve">
          <source>Invoke this method if you've modified the &lt;code&gt;TreeNode&lt;/code&gt;s upon which this model depends. The model will notify all of its listeners that the model has changed.</source>
          <target state="translated">이 모델이 의존 하는 &lt;code&gt;TreeNode&lt;/code&gt; 를 수정 한 경우이 메서드를 호출합니다 . 모델은 모든 리스너에게 모델이 변경되었음을 알립니다.</target>
        </trans-unit>
        <trans-unit id="b9e7268f4cd6b59e1cc436f918a3fcaa04f47bf0" translate="yes" xml:space="preserve">
          <source>Invoke this method if you've totally changed the children of node and its children's children...</source>
          <target state="translated">노드의 자식과 자식의 자식을 완전히 변경 한 경우이 메서드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="9901e5635a4729be1046f37a16e7f9ba23f9e075" translate="yes" xml:space="preserve">
          <source>Invoke this method if you've totally changed the children of node and its children's children... This will post a treeStructureChanged event.</source>
          <target state="translated">노드의 자식과 자식의 자식을 완전히 변경 한 경우이 메서드를 호출합니다. 그러면 treeStructureChanged 이벤트가 게시됩니다.</target>
        </trans-unit>
        <trans-unit id="8ac13e923783f7817e03325cad388d002eb2c553" translate="yes" xml:space="preserve">
          <source>Invoke this method to print the component to the specified &lt;code&gt;Graphics&lt;/code&gt;.</source>
          <target state="translated">이 메서드를 호출하여 지정된 &lt;code&gt;Graphics&lt;/code&gt; 에 구성 요소를 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="adf9f10129db8eb312adf697b764595b06678944" translate="yes" xml:space="preserve">
          <source>Invoke this method to print the component to the specified &lt;code&gt;Graphics&lt;/code&gt;. This method will result in invocations of &lt;code&gt;printComponent&lt;/code&gt;, &lt;code&gt;printBorder&lt;/code&gt; and &lt;code&gt;printChildren&lt;/code&gt;. It is recommended that you override one of the previously mentioned methods rather than this one if your intention is to customize the way printing looks. However, it can be useful to override this method should you want to prepare state before invoking the superclass behavior. As an example, if you wanted to change the component's background color before printing, you could do the following:</source>
          <target state="translated">이 메서드를 호출하여 지정된 &lt;code&gt;Graphics&lt;/code&gt; 에 구성 요소를 인쇄합니다 . 이 메소드는 다음을 호출합니다. &lt;code&gt;printComponent&lt;/code&gt; , &lt;code&gt;printBorder&lt;/code&gt; 및 &lt;code&gt;printChildren&lt;/code&gt; 을 호출합니다 . 인쇄 모양을 사용자 정의하려는 경우이 방법보다는 앞서 언급 한 방법 중 하나를 재정의하는 것이 좋습니다. 그러나 슈퍼 클래스 동작을 호출하기 전에 상태를 준비하려는 경우이 메서드를 재정의하는 것이 유용 할 수 있습니다. 예를 들어, 인쇄하기 전에 구성 요소의 배경색을 변경하려는 경우 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0965969dee3f848e976c2deeefc320177c797187" translate="yes" xml:space="preserve">
          <source>Invoke this method to print the component.</source>
          <target state="translated">이 메서드를 호출하여 구성 요소를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="867c7dc1511d412de8cc9981c078e2c924cf20ec" translate="yes" xml:space="preserve">
          <source>Invoke this method to print the component. This method invokes &lt;code&gt;print&lt;/code&gt; on the component.</source>
          <target state="translated">이 메서드를 호출하여 구성 요소를 인쇄합니다. 이 메서드는 구성 요소에서 &lt;code&gt;print&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="4b0145a5941c2fbced4503ab22629c649cdf1b19" translate="yes" xml:space="preserve">
          <source>Invoke this to update the &lt;code&gt;editValid&lt;/code&gt; property of the &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;editValid&lt;/code&gt; 를 업데이트하려면 이것을 호출하십시오. 하여 &lt;code&gt;JFormattedTextField&lt;/code&gt; 속성 .</target>
        </trans-unit>
        <trans-unit id="3a6a74d52b46f7e56bc1d5fc67a6918c2b9f04d1" translate="yes" xml:space="preserve">
          <source>Invoke this to update the &lt;code&gt;editValid&lt;/code&gt; property of the &lt;code&gt;JFormattedTextField&lt;/code&gt;. If you an enforce a policy such that the &lt;code&gt;JFormattedTextField&lt;/code&gt; is always in a valid state, you will never need to invoke this.</source>
          <target state="translated">이것을 호출 하여 &lt;code&gt;JFormattedTextField&lt;/code&gt; 의 &lt;code&gt;editValid&lt;/code&gt; 속성 을 업데이트합니다 . 다음과 같은 정책을 시행하는 경우 &lt;code&gt;JFormattedTextField&lt;/code&gt; 가 항상 유효한 상태에 있도록 이를 호출 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="f3916032834cb176c043741ca851c0140daedc6d" translate="yes" xml:space="preserve">
          <source>Invoked after a node (or a set of siblings) has changed in some way.</source>
          <target state="translated">노드 (또는 형제 집합)가 어떤 방식 으로든 변경된 후에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ba80f435b6fa3788ebb4ac4401ed366e27cb109d" translate="yes" xml:space="preserve">
          <source>Invoked after a node (or a set of siblings) has changed in some way. The node(s) have not changed locations in the tree or altered their children arrays, but other attributes have changed and may affect presentation. Example: the name of a file has changed, but it is in the same location in the file system.</source>
          <target state="translated">노드 (또는 형제 집합)가 어떤 방식 으로든 변경된 후에 호출됩니다. 노드는 트리에서 위치를 변경하지 않았거나 자식 배열을 변경하지 않았지만 다른 속성이 변경되어 표시에 영향을 미칠 수 있습니다. 예 : 파일 이름이 변경되었지만 파일 시스템의 동일한 위치에 있습니다.</target>
        </trans-unit>
        <trans-unit id="77083d9a3db5d175c8a8ba64a0f67edd88904e2f" translate="yes" xml:space="preserve">
          <source>Invoked after data has been exported.</source>
          <target state="translated">데이터를 내 보낸 후에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f1867aafdd2e22097376e822330566aed84e637f" translate="yes" xml:space="preserve">
          <source>Invoked after data has been exported. This method should remove the data that was transferred if the action was &lt;code&gt;MOVE&lt;/code&gt;.</source>
          <target state="translated">데이터를 내 보낸 후에 호출됩니다. 이 메소드는 조치가 &lt;code&gt;MOVE&lt;/code&gt; 인 경우 전송 된 데이터를 제거해야합니다. .</target>
        </trans-unit>
        <trans-unit id="4a58f484c75e372e264fb51577a59fc0c094a24f" translate="yes" xml:space="preserve">
          <source>Invoked after nodes have been inserted into the tree.</source>
          <target state="translated">노드가 트리에 삽입 된 후에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ef131d8ec9adb75bc14bce2c46454aac76e62fdc" translate="yes" xml:space="preserve">
          <source>Invoked after nodes have been removed from the tree.</source>
          <target state="translated">트리에서 노드가 제거 된 후에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="26755be0584ea9d00dfb1f9b81ed8dc248d09fb0" translate="yes" xml:space="preserve">
          <source>Invoked after nodes have been removed from the tree. Note that if a subtree is removed from the tree, this method may only be invoked once for the root of the removed subtree, not once for each individual set of siblings removed.</source>
          <target state="translated">트리에서 노드가 제거 된 후에 호출됩니다. 트리에서 하위 트리가 제거 된 경우이 메서드는 제거 된 각 형제 집합에 대해 한 번이 아니라 제거 된 하위 트리의 루트에 대해 한 번만 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f72d9eede6012ea392f05527aaa6588f1a5739d0" translate="yes" xml:space="preserve">
          <source>Invoked after the &lt;code&gt;tree&lt;/code&gt; instance variable has been set, but before any defaults/listeners have been installed.</source>
          <target state="translated">&lt;code&gt;tree&lt;/code&gt; 인스턴스 변수가 설정된 후, 기본 / 수신기가 설치되기 전에 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="2f1bfe952e30315f2d702abf6ebd2e66641db551" translate="yes" xml:space="preserve">
          <source>Invoked after the tree has drastically changed structure from a given node down.</source>
          <target state="translated">트리가 주어진 노드에서 아래로 구조를 크게 변경 한 후에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="77e6cabced149f6c9a12b0294a5dd8a29a1f98a0" translate="yes" xml:space="preserve">
          <source>Invoked after the tree has drastically changed structure from a given node down. If the path returned by &lt;code&gt;e.getPath()&lt;/code&gt; is of length one and the first element does not identify the current root node the first element should become the new root of the tree.</source>
          <target state="translated">트리가 주어진 노드에서 아래로 구조를 크게 변경 한 후에 호출됩니다. &lt;code&gt;e.getPath()&lt;/code&gt; 반환 된 경로 의 길이가 1이고 첫 번째 요소가 현재 루트 노드를 식별하지 않는 경우 첫 번째 요소는 트리의 새 루트가되어야합니다.</target>
        </trans-unit>
        <trans-unit id="faabd26666b5995ccf6208a9fb1a4f707937cb0e" translate="yes" xml:space="preserve">
          <source>Invoked after the tree has drastically changed structure from a given node down. If the path returned by &lt;code&gt;e.getPath&lt;/code&gt; is of length one and the first element does not identify the current root node the first element should become the new root of the tree.</source>
          <target state="translated">트리가 주어진 노드에서 아래로 구조를 크게 변경 한 후에 호출됩니다. &lt;code&gt;e.getPath&lt;/code&gt; 가 반환 한 경로 의 길이가 1이고 첫 번째 요소가 현재 루트 노드를 식별하지 않는 경우 첫 번째 요소는 트리의 새 루트가되어야합니다.</target>
        </trans-unit>
        <trans-unit id="ffb9a55c9dae04e79e1c4e5863439fa571e033c9" translate="yes" xml:space="preserve">
          <source>Invoked after the tree has drastically changed structure from a given node down. If the path returned by e.getPath() is of length one and the first element does not identify the current root node the first element should become the new root of the tree.</source>
          <target state="translated">트리가 주어진 노드에서 아래로 구조를 크게 변경 한 후에 호출됩니다. e.getPath ()에 의해 반환 된 경로의 길이가 1이고 첫 번째 요소가 현재 루트 노드를 식별하지 않는 경우 첫 번째 요소는 트리의 새 루트가되어야합니다.</target>
        </trans-unit>
        <trans-unit id="6cbd56109635fbeae9a00c1a72a0271e4bd35736" translate="yes" xml:space="preserve">
          <source>Invoked as a side effect of java.beans.Beans.instantiate(). If the child object is not valid for adding then this method throws an IllegalStateException.</source>
          <target state="translated">java.beans.Beans.instantiate ()의 부작용으로 호출됩니다. 자식 개체를 추가 할 수없는 경우이 메서드는 IllegalStateException을 throw합니다.</target>
        </trans-unit>
        <trans-unit id="c32e509234582b709b575e0587b26486cfa207d0" translate="yes" xml:space="preserve">
          <source>Invoked automatically when the model's state changes.</source>
          <target state="translated">모델의 상태가 변경되면 자동으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4f8c0b86b9424c176e082381e88abdcf61956498" translate="yes" xml:space="preserve">
          <source>Invoked automatically when the model's state changes. It is also called by &lt;code&gt;installChooserPanel&lt;/code&gt; to allow you to set up the initial state of your chooser. Override this method to update your &lt;code&gt;ChooserPanel&lt;/code&gt;.</source>
          <target state="translated">모델의 상태가 변경되면 자동으로 호출됩니다. 선택기의 초기 상태를 설정할 수 있도록 &lt;code&gt;installChooserPanel&lt;/code&gt; 에서 호출하기도 합니다. 이 메서드를 재정 의하여 &lt;code&gt;ChooserPanel&lt;/code&gt; 을 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="3f6bb02271af3358d3cd9fb07330832ed345598d" translate="yes" xml:space="preserve">
          <source>Invoked before sending the specified notification to the listener.</source>
          <target state="translated">지정된 통지를 청취자에게 보내기 전에 호출합니다.</target>
        </trans-unit>
        <trans-unit id="7d16d82da7db9c4580abf75c5fa1b3cf2f2f4ebf" translate="yes" xml:space="preserve">
          <source>Invoked before unstallation of UI.</source>
          <target state="translated">UI를 제거하기 전에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5fbbcda6ccbeb38ee158a2dd890f987498111559" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;code&gt;BeanContextServices&lt;/code&gt;, this method gets the current service selectors for the specified service.</source>
          <target state="translated">&lt;code&gt;BeanContextServices&lt;/code&gt; 에 의해 호출되는 이 메소드는 지정된 서비스에 대한 현재 서비스 선택기를 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="6c3411502f0fdcb59163d2b8708823389486e0cd" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;code&gt;BeanContextServices&lt;/code&gt;, this method gets the current service selectors for the specified service. A service selector is a service specific parameter, typical examples of which could include: a parameter to a constructor for the service implementation class, a value for a particular service's property, or a key into a map of existing implementations.</source>
          <target state="translated">&lt;code&gt;BeanContextServices&lt;/code&gt; 에 의해 호출 된 이 메소드는 지정된 서비스에 대한 현재 서비스 선택기를 가져 옵니다 . 서비스 선택기는 서비스 특정 매개 변수이며, 대표적인 예로는 서비스 구현 클래스의 생성자에 대한 매개 변수, 특정 서비스 특성의 값 또는 기존 구현의 맵에 대한 키가 있습니다.</target>
        </trans-unit>
        <trans-unit id="33a5ee891f4c1a4f8ab4b9418b2cbbfa1103ac91" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;code&gt;BeanContextServices&lt;/code&gt;, this method releases a nested &lt;code&gt;BeanContextChild&lt;/code&gt;'s (or any arbitrary object associated with a &lt;code&gt;BeanContextChild&lt;/code&gt;) reference to the specified service.</source>
          <target state="translated">&lt;code&gt;BeanContextServices&lt;/code&gt; 에 의해 불려가 ,이 메소드는 , 지정된 서비스에 의 중첩 된 &lt;code&gt;BeanContextChild&lt;/code&gt; (또는 &lt;code&gt;BeanContextChild&lt;/code&gt; 에 관련한 임의의 객체 ) 참조를 해제합니다.</target>
        </trans-unit>
        <trans-unit id="23d3fcc65edf7a5ec0da4d9a1342bd519552db15" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;code&gt;BeanContextServices&lt;/code&gt;, this method requests an instance of a service from this &lt;code&gt;BeanContextServiceProvider&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BeanContextServices&lt;/code&gt; 에 의해 불려가 는이 메소드는이 &lt;code&gt;BeanContextServiceProvider&lt;/code&gt; 로부터 서비스의 인스턴스를 요구합니다 .</target>
        </trans-unit>
        <trans-unit id="2bda016e4f6dd98147c7710f34c0d9f9e36ac000" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;code&gt;installUI&lt;/code&gt; to create a layout manager object to manage the &lt;code&gt;JTabbedPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTabbedPane&lt;/code&gt; 을 관리하기위한 레이아웃 관리자 객체를 생성하기 위해 &lt;code&gt;installUI&lt;/code&gt; 에 의해 호출 됩니다 .</target>
        </trans-unit>
        <trans-unit id="a2bf4f1044586cba5953940fe3ac1930a02c6c84" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;code&gt;installUI&lt;/code&gt; to create a layout manager object to manage the &lt;code&gt;JTabbedPane&lt;/code&gt;. Overridden to create a TabbedPaneLayout subclass which takes into account tabOverlap.</source>
          <target state="translated">&lt;code&gt;JTabbedPane&lt;/code&gt; 을 관리하기위한 레이아웃 관리자 객체를 생성하기 위해 &lt;code&gt;installUI&lt;/code&gt; 에 의해 호출 됩니다 . tabOverlap을 고려하는 TabbedPaneLayout 서브 클래스를 생성하도록 재정의되었습니다.</target>
        </trans-unit>
        <trans-unit id="ebaa3fba395792fdaafc4bb811c1abde2e0255d2" translate="yes" xml:space="preserve">
          <source>Invoked by Swing to draw components.</source>
          <target state="translated">구성 요소를 그리기 위해 Swing에서 호출합니다.</target>
        </trans-unit>
        <trans-unit id="003c7762181006fb9983cec2ccd9170e6d0c3309" translate="yes" xml:space="preserve">
          <source>Invoked by Swing to draw components. Applications should not invoke &lt;code&gt;paint&lt;/code&gt; directly, but should instead use the &lt;code&gt;repaint&lt;/code&gt; method to schedule the component for redrawing.</source>
          <target state="translated">구성 요소를 그리기 위해 Swing에서 호출합니다. 응용 프로그램에서 &lt;code&gt;paint&lt;/code&gt; 직접 호출 해서는 &lt;code&gt;repaint&lt;/code&gt; 대신 다시 그리기 를 위해 구성 요소를 예약하려면 다시 그리기 메서드를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0e155a140892f388e58bba225a269cc00a793a55" translate="yes" xml:space="preserve">
          <source>Invoked by dynamic linker to initialize the relinkable call site by setting a relink-and-invoke method handle.</source>
          <target state="translated">다시 연결 및 호출 메서드 핸들을 설정하여 다시 연결할 수있는 호출 사이트를 초기화하기 위해 동적 링커에 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="683d21e3450b9e38ad02280bc5631cc8d83bc886" translate="yes" xml:space="preserve">
          <source>Invoked by dynamic linker to initialize the relinkable call site by setting a relink-and-invoke method handle. The call site implementation is supposed to set this method handle as its target using &lt;a href=&quot;../../../java.base/java/lang/invoke/callsite#setTarget(java.lang.invoke.MethodHandle)&quot;&gt;&lt;code&gt;CallSite.setTarget(MethodHandle)&lt;/code&gt;&lt;/a&gt;. Relink-and-invoke is the initial method handle set by &lt;a href=&quot;dynamiclinker#link(T)&quot;&gt;&lt;code&gt;DynamicLinker.link(RelinkableCallSite)&lt;/code&gt;&lt;/a&gt; that will cause the call site to be relinked to an appropriate target on its first invocation based on its arguments, and that linked target will then be invoked (hence the name). This linking protocol effectively delays linking until the call site is invoked with actual arguments and thus ensures that linkers can make nuanced linking decisions based on those arguments and not just on the static method type of the call site.</source>
          <target state="translated">다시 연결 및 호출 메서드 핸들을 설정하여 다시 연결할 수있는 호출 사이트를 초기화하기 위해 동적 링커에 의해 호출됩니다. 호출 사이트 구현은 &lt;a href=&quot;../../../java.base/java/lang/invoke/callsite#setTarget(java.lang.invoke.MethodHandle)&quot;&gt; &lt;code&gt;CallSite.setTarget(MethodHandle)&lt;/code&gt; &lt;/a&gt; 사용하여이 메서드 핸들을 대상으로 설정해야합니다 . Relink-and-invoke는 &lt;a href=&quot;dynamiclinker#link(T)&quot;&gt; &lt;code&gt;DynamicLinker.link(RelinkableCallSite)&lt;/code&gt; &lt;/a&gt; 의해 설정된 초기 메서드 핸들 로, 해당 인수를 기반으로 첫 번째 호출시 호출 사이트가 적절한 대상에 다시 연결되고 연결된 대상이 호출됩니다 (따라서 이름). 이 연결 프로토콜은 호출 사이트가 실제 인수로 호출 될 때까지 연결을 효과적으로 지연하므로 링커가 호출 사이트의 정적 메서드 유형뿐만 아니라 해당 인수를 기반으로 미묘한 연결 결정을 내릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ad291b9f7f6be67648683b5644d7032d3294ab2" translate="yes" xml:space="preserve">
          <source>Invoked by the &lt;code&gt;TreeSelectionModel&lt;/code&gt; when the selection changes.</source>
          <target state="translated">선택이 변경 될 때 &lt;code&gt;TreeSelectionModel&lt;/code&gt; 에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="b5acf852d220348f53dc49569f5fd363d0f5bb70" translate="yes" xml:space="preserve">
          <source>Invoked for a directory after entries in the directory, and all of their descendants, have been visited.</source>
          <target state="translated">디렉토리의 항목 및 모든 하위 항목을 방문한 후 디렉토리에 대해 호출했습니다.</target>
        </trans-unit>
        <trans-unit id="ade3cd66a3e795170fb6e93c0ab6202061ccff3f" translate="yes" xml:space="preserve">
          <source>Invoked for a directory after entries in the directory, and all of their descendants, have been visited. This method is also invoked when iteration of the directory completes prematurely (by a &lt;a href=&quot;#visitFile(T,java.nio.file.attribute.BasicFileAttributes)&quot;&gt;&lt;code&gt;visitFile&lt;/code&gt;&lt;/a&gt; method returning &lt;a href=&quot;filevisitresult#SKIP_SIBLINGS&quot;&gt;&lt;code&gt;SKIP_SIBLINGS&lt;/code&gt;&lt;/a&gt;, or an I/O error when iterating over the directory).</source>
          <target state="translated">디렉토리의 항목과 모든 하위 항목을 방문한 후 디렉토리에 대해 호출됩니다. 디렉토리의 반복 (a 의해 조기에 완료 될 때이 방법은 호출 &lt;a href=&quot;#visitFile(T,java.nio.file.attribute.BasicFileAttributes)&quot;&gt; &lt;code&gt;visitFile&lt;/code&gt; 의&lt;/a&gt; 복귀 방법 &lt;a href=&quot;filevisitresult#SKIP_SIBLINGS&quot;&gt; &lt;code&gt;SKIP_SIBLINGS&lt;/code&gt; 을&lt;/a&gt; , 또는 I / O 에러를 반복하는 디렉토리 이상).</target>
        </trans-unit>
        <trans-unit id="f2ca201bf4a17f15eb2d609e1a1a2bf48aaf0b78" translate="yes" xml:space="preserve">
          <source>Invoked for a directory after entries in the directory, and all of their descendants, have been visited. This method is also invoked when iteration of the directory completes prematurely (by a &lt;a href=&quot;filevisitor#visitFile-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt;&lt;code&gt;visitFile&lt;/code&gt;&lt;/a&gt; method returning &lt;a href=&quot;filevisitresult#SKIP_SIBLINGS&quot;&gt;&lt;code&gt;SKIP_SIBLINGS&lt;/code&gt;&lt;/a&gt;, or an I/O error when iterating over the directory).</source>
          <target state="translated">디렉토리의 항목 및 모든 하위 항목을 방문한 후 디렉토리에 대해 호출했습니다. 디렉토리의 반복 (a 의해 조기에 완료 될 때이 방법은 호출 &lt;a href=&quot;filevisitor#visitFile-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt; &lt;code&gt;visitFile&lt;/code&gt; 의&lt;/a&gt; 복귀 방법 &lt;a href=&quot;filevisitresult#SKIP_SIBLINGS&quot;&gt; &lt;code&gt;SKIP_SIBLINGS&lt;/code&gt; 을&lt;/a&gt; , 또는 I / O 에러를 반복하는 디렉토리 이상).</target>
        </trans-unit>
        <trans-unit id="07ea810c05dca9fc949bfdca19a1cd8bb0172c8a" translate="yes" xml:space="preserve">
          <source>Invoked for a directory before entries in the directory are visited.</source>
          <target state="translated">디렉토리의 항목을 방문하기 전에 디렉토리에 대해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6e60ca66368a684f15c3d1a350628f2c09fefbc5" translate="yes" xml:space="preserve">
          <source>Invoked for a file in a directory.</source>
          <target state="translated">디렉토리의 파일에 대해 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="36f066ffbe31db399db8e40bb50a0defff46d207" translate="yes" xml:space="preserve">
          <source>Invoked for a file that could not be visited.</source>
          <target state="translated">방문 할 수없는 파일을 호출했습니다.</target>
        </trans-unit>
        <trans-unit id="2edb253f825cbce19a1ec94ec68a7e03d5f7b299" translate="yes" xml:space="preserve">
          <source>Invoked for a file that could not be visited. This method is invoked if the file's attributes could not be read, the file is a directory that could not be opened, and other reasons.</source>
          <target state="translated">방문 할 수없는 파일을 호출했습니다. 파일의 속성을 읽을 수없고 파일을 열 수없는 디렉토리 및 기타 이유로이 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="69aea094f339f0041a419b48b6199c0da4b0d866" translate="yes" xml:space="preserve">
          <source>Invoked from installUI after all the defaults/listeners have been installed.</source>
          <target state="translated">모든 기본값 / 수신기가 설치된 후 installUI에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="41478fd8c666159a8f4e2be101baf818e2ec8c9d" translate="yes" xml:space="preserve">
          <source>Invoked from paintComponent.</source>
          <target state="translated">paintComponent에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a4b6169a44e99d2c3a014ae2edb3f31f4f38a107" translate="yes" xml:space="preserve">
          <source>Invoked from paintComponent. Paints the background of the titlepane. All text and icons will then be rendered on top of this background.</source>
          <target state="translated">paintComponent에서 호출됩니다. 제목 창의 배경을 그립니다. 그러면 모든 텍스트와 아이콘이이 배경 위에 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="ede686fc14e5a0335876f3c16b3226f07dde02e2" translate="yes" xml:space="preserve">
          <source>Invoked just before editing is to start.</source>
          <target state="translated">편집이 시작되기 직전에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="634c38dc52205d56bf7e28dcbe4f8932a55421c3" translate="yes" xml:space="preserve">
          <source>Invoked just before editing is to start. Will add the &lt;code&gt;editingComponent&lt;/code&gt; to the &lt;code&gt;editingContainer&lt;/code&gt;.</source>
          <target state="translated">편집이 시작되기 직전에 호출됩니다. 추가 것이다 &lt;code&gt;editingComponent&lt;/code&gt; 를 받는 &lt;code&gt;editingContainer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="776d6f790b4ce0ff0f20d04687d012d1a89c08dc" translate="yes" xml:space="preserve">
          <source>Invoked prior to insertion of text into the specified Document.</source>
          <target state="translated">지정된 문서에 텍스트를 삽입하기 전에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7f096e70806921f4e56b325662c98118995e7e0f" translate="yes" xml:space="preserve">
          <source>Invoked prior to insertion of text into the specified Document. Subclasses that want to conditionally allow insertion should override this and only call supers implementation as necessary, or call directly into the FilterBypass.</source>
          <target state="translated">지정된 문서에 텍스트를 삽입하기 전에 호출됩니다. 조건부로 삽입을 허용하려는 서브 클래스는이를 재정의하고 필요에 따라 supers 구현 만 호출하거나 FilterBypass를 직접 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="62954bf9c5dcd6f97dab00af2cdd1e8471badeb4" translate="yes" xml:space="preserve">
          <source>Invoked prior to removal of the specified region in the specified Document.</source>
          <target state="translated">지정된 문서에서 지정된 영역을 제거하기 전에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1d938a7c6ef958e0518451fdd3333edd3f9299e5" translate="yes" xml:space="preserve">
          <source>Invoked prior to removal of the specified region in the specified Document. Subclasses that want to conditionally allow removal should override this and only call supers implementation as necessary, or call directly into the &lt;code&gt;FilterBypass&lt;/code&gt; as necessary.</source>
          <target state="translated">지정된 문서에서 지정된 영역을 제거하기 전에 호출됩니다. 조건부로 제거를 허용하려는 하위 클래스는이를 재정의하고 필요에 따라 supers 구현 만 호출하거나 &lt;code&gt;FilterBypass&lt;/code&gt; 로 직접 호출해야합니다. 를 해야합니다.</target>
        </trans-unit>
        <trans-unit id="df2ba00c1ed5dddcf6483a74c94a2e4ad64e576c" translate="yes" xml:space="preserve">
          <source>Invoked prior to replacing a region of text in the specified Document.</source>
          <target state="translated">지정된 문서에서 텍스트 영역을 바꾸기 전에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="28fe2b3343237dcb97f7b55a6e79186975d10aa8" translate="yes" xml:space="preserve">
          <source>Invoked prior to replacing a region of text in the specified Document. Subclasses that want to conditionally allow replace should override this and only call supers implementation as necessary, or call directly into the FilterBypass.</source>
          <target state="translated">지정된 문서에서 텍스트 영역을 바꾸기 전에 호출됩니다. 조건부로 교체를 허용하려는 서브 클래스는이를 재정의하고 필요에 따라 대체 구현 만 호출하거나 FilterBypass를 직접 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="24a95a524b0b0897754d5c4a6246fed92e750c04" translate="yes" xml:space="preserve">
          <source>Invoked prior to the Caret moving the dot.</source>
          <target state="translated">캐럿이 점을 이동하기 전에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6bd1c4f5b2339aa97476cb92e047df5e49a675e4" translate="yes" xml:space="preserve">
          <source>Invoked prior to the Caret moving the dot. The default implementation calls directly into the &lt;code&gt;FilterBypass&lt;/code&gt; with the passed in arguments. Subclasses may wish to conditionally call super with a different location, or invoke the necessary methods on the &lt;code&gt;FilterBypass&lt;/code&gt;.</source>
          <target state="translated">캐럿이 점을 이동하기 전에 호출됩니다. 기본 구현 은 전달 된 인수 를 사용하여 &lt;code&gt;FilterBypass&lt;/code&gt; 를 직접 호출합니다 . 서브 클래스는 조건부로 다른 위치에서 super를 호출하거나 &lt;code&gt;FilterBypass&lt;/code&gt; 에서 필요한 메서드를 호출 할 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="d7d6cedb372fac422cc6705771b6cd971bbb109f" translate="yes" xml:space="preserve">
          <source>Invoked prior to the Caret setting the dot.</source>
          <target state="translated">캐럿이 점을 설정하기 전에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9bc236a99f1fa852ec05d0cbce2fd36e745d68ad" translate="yes" xml:space="preserve">
          <source>Invoked prior to the Caret setting the dot. The default implementation calls directly into the &lt;code&gt;FilterBypass&lt;/code&gt; with the passed in arguments. Subclasses may wish to conditionally call super with a different location, or invoke the necessary method on the &lt;code&gt;FilterBypass&lt;/code&gt;</source>
          <target state="translated">캐럿이 점을 설정하기 전에 호출됩니다. 기본 구현 은 전달 된 인수 를 사용하여 &lt;code&gt;FilterBypass&lt;/code&gt; 를 직접 호출합니다 . 하위 클래스는 조건부로 다른 위치에서 super를 호출하거나 &lt;code&gt;FilterBypass&lt;/code&gt; 에서 필요한 메서드를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e71419718b4cd4386de3ceee32c997a271101cfb" translate="yes" xml:space="preserve">
          <source>Invoked the first time a window is made visible.</source>
          <target state="translated">창이 처음 표시 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="482d641edcb56907bffacc80663dfca15ef7bf3c" translate="yes" xml:space="preserve">
          <source>Invoked this to insert newChild at location index in parents children.</source>
          <target state="translated">부모 자식의 위치 인덱스에 newChild를 삽입하기 위해 이것을 호출했습니다.</target>
        </trans-unit>
        <trans-unit id="12fa51450ccde11b669ee2a12721ad7019181f91" translate="yes" xml:space="preserve">
          <source>Invoked this to insert newChild at location index in parents children. This will then message nodesWereInserted to create the appropriate event. This is the preferred way to add children as it will create the appropriate event.</source>
          <target state="translated">부모 자식의 위치 인덱스에 newChild를 삽입하기 위해 이것을 호출했습니다. 그러면 적절한 이벤트를 생성하기 위해 nodesWereInserted 메시지가 표시됩니다. 이는 적절한 이벤트를 생성하므로 자식을 추가하는 데 선호되는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="15483fb2d2dbb0b5fdf2d91d0c16c22f757ffcce" translate="yes" xml:space="preserve">
          <source>Invoked to process the key bindings for &lt;code&gt;ks&lt;/code&gt; as the result of the &lt;code&gt;KeyEvent&lt;/code&gt;&lt;code&gt;e&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;KeyEvent&lt;/code&gt; &lt;code&gt;e&lt;/code&gt; 의 결과로 &lt;code&gt;ks&lt;/code&gt; 에 대한 키 바인딩을 처리하기 위해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="600ca5767bef0b36e2d559553aff72b2670e7cdf" translate="yes" xml:space="preserve">
          <source>Invoked to process the key bindings for &lt;code&gt;ks&lt;/code&gt; as the result of the &lt;code&gt;KeyEvent&lt;/code&gt;&lt;code&gt;e&lt;/code&gt;. This obtains the appropriate &lt;code&gt;InputMap&lt;/code&gt;, gets the binding, gets the action from the &lt;code&gt;ActionMap&lt;/code&gt;, and then (if the action is found and the component is enabled) invokes &lt;code&gt;notifyAction&lt;/code&gt; to notify the action.</source>
          <target state="translated">&lt;code&gt;KeyEvent&lt;/code&gt; &lt;code&gt;e&lt;/code&gt; 의 결과로 &lt;code&gt;ks&lt;/code&gt; 에 대한 키 바인딩을 처리하기 위해 호출됩니다 . 이는 적절한 &lt;code&gt;InputMap&lt;/code&gt; 을 가져오고 바인딩을 가져오고 &lt;code&gt;ActionMap&lt;/code&gt; 에서 작업을 가져온 다음 (작업이 발견되고 구성 요소가 활성화 된 경우) &lt;code&gt;notifyAction&lt;/code&gt; 을 호출 하여 작업을 알립니다.</target>
        </trans-unit>
        <trans-unit id="547052866aa8bee02eb55ce9b02bfd9eff49b25f" translate="yes" xml:space="preserve">
          <source>Invoked when &lt;a href=&quot;../jlayer#updateUI()&quot;&gt;&lt;code&gt;JLayer.updateUI()&lt;/code&gt;&lt;/a&gt; is called by the &lt;code&gt;JLayer&lt;/code&gt; this &lt;code&gt;LayerUI&lt;/code&gt; is set to.</source>
          <target state="translated">이 &lt;code&gt;LayerUI&lt;/code&gt; 가 &lt;code&gt;JLayer&lt;/code&gt; 에 의해 &lt;a href=&quot;../jlayer#updateUI()&quot;&gt; &lt;code&gt;JLayer.updateUI()&lt;/code&gt; &lt;/a&gt; 가 호출 될 때 호출됩니다. 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="ce359c9c22ec5b0e23eab98839754c0f89824967" translate="yes" xml:space="preserve">
          <source>Invoked when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has encountered and processed a &lt;code&gt;MetaMessage&lt;/code&gt; in the &lt;code&gt;Sequence&lt;/code&gt; it is processing.</source>
          <target state="translated">때 호출 &lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt; 발생하고 처리 한 &lt;code&gt;MetaMessage&lt;/code&gt; 의 의 &lt;code&gt;Sequence&lt;/code&gt; 가 처리된다.</target>
        </trans-unit>
        <trans-unit id="e9df58234bfa2e0026549337398d200de93f757e" translate="yes" xml:space="preserve">
          <source>Invoked when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has encountered and processed a control-change event of interest to this listener.</source>
          <target state="translated">&lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt; 가이 리스너와 관련된 제어 변경 이벤트를 만나 처리 했을 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="81adcbf25edbddf8d068b5c835ce0c804a226ee7" translate="yes" xml:space="preserve">
          <source>Invoked when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has encountered and processed a control-change event of interest to this listener. The event passed in is a &lt;code&gt;ShortMessage&lt;/code&gt; whose first data byte indicates the controller number and whose second data byte is the value to which the controller was set.</source>
          <target state="translated">&lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt; 가이 리스너와 관련된 제어 변경 이벤트를 만나 처리 했을 때 호출됩니다 . 전달 된 이벤트는 첫 번째 데이터 바이트가 컨트롤러 번호를 나타내고 두 번째 데이터 바이트가 컨트롤러가 설정된 값인 &lt;code&gt;ShortMessage&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e568ca2f5d22f851634e734ac4d8fd10a139feb3" translate="yes" xml:space="preserve">
          <source>Invoked when a &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; has encountered and processed a &lt;code&gt;MetaMessage&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; it is processing.</source>
          <target state="translated">때 호출 &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 발생하고 처리 한 &lt;code&gt;MetaMessage&lt;/code&gt; 의 의 &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 가 처리된다.</target>
        </trans-unit>
        <trans-unit id="7b1fd308ac9e6d674e61380443af3cc03aaa29cb" translate="yes" xml:space="preserve">
          <source>Invoked when a &lt;code&gt;Sequencer&lt;/code&gt; has encountered and processed a control-change event of interest to this listener. The event passed in is a &lt;code&gt;ShortMessage&lt;/code&gt; whose first data byte indicates the controller number and whose second data byte is the value to which the controller was set.</source>
          <target state="translated">&lt;code&gt;Sequencer&lt;/code&gt; 가이 청취자에게 관심있는 제어 변경 이벤트를 발견해 처리했을 때에 불려갑니다 . 전달 된 이벤트는 첫 번째 데이터 바이트가 컨트롤러 번호를 나타내고 두 번째 데이터 바이트가 컨트롤러가 설정된 값인 &lt;code&gt;ShortMessage&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e92c80cccf4787b4bbc36f58a85c15768d216d10" translate="yes" xml:space="preserve">
          <source>Invoked when a JInternalFrame's parent's size changes.</source>
          <target state="translated">JInternalFrame의 부모 크기가 변경 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7dd14e80b486b42657d5e79e3a9fdd26a4a7c805" translate="yes" xml:space="preserve">
          <source>Invoked when a JMX notification occurs.</source>
          <target state="translated">JMX 알림이 발생할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a13e99b67a98714e02e94edef597b859ce4a1e48" translate="yes" xml:space="preserve">
          <source>Invoked when a JMX notification occurs. Currently handles notifications for unregistration of MBeans, either referenced in a relation role or being a relation itself.</source>
          <target state="translated">JMX 통지가 발생했을 때에 불려갑니다. 현재 관계 역할에서 참조되거나 관계 자체 인 MBean의 등록 취소에 대한 알림을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="b0284adb43a328422617e52a08a41552f24729d5" translate="yes" xml:space="preserve">
          <source>Invoked when a JMX notification occurs. The implementation of this method should return as soon as possible, to avoid blocking its notification broadcaster.</source>
          <target state="translated">JMX 통지가 발생했을 때에 불려갑니다. 이 메소드의 구현은 알림 브로드 캐스터를 차단하지 않도록 가능한 빨리 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="cdd7d0d3aad566c1960b9ccfcf92cd72ae655c1c" translate="yes" xml:space="preserve">
          <source>Invoked when a Window is no longer the active Window.</source>
          <target state="translated">Window가 더 이상 활성 Window가 아닐 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="fcbc05e0d5c14ec56cf892ec183df6b2938a9ea3" translate="yes" xml:space="preserve">
          <source>Invoked when a Window is no longer the active Window. Only a Frame or a Dialog can be the active Window. The native windowing system may denote the active Window or its children with special decorations, such as a highlighted title bar. The active Window is always either the focused Window, or the first Frame or Dialog that is an owner of the focused Window.</source>
          <target state="translated">Window가 더 이상 활성 Window가 아닐 때 호출됩니다. 프레임 또는 대화 상자 만 활성 창이 될 수 있습니다. 기본 창 시스템은 강조 표시된 제목 표시 줄과 같은 특수 장식으로 활성 창 또는 하위 창을 나타낼 수 있습니다. 활성 창은 항상 초점이 맞춰진 창이거나 초점이 맞춰진 창 소유자 인 첫 번째 프레임 또는 대화 상자입니다.</target>
        </trans-unit>
        <trans-unit id="d3b64e70985ecf5bf3c0c1f5700a4b9c7b34241f" translate="yes" xml:space="preserve">
          <source>Invoked when a column is added to the table column model.</source>
          <target state="translated">테이블 열 모델에 열이 추가 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e01445da7cf47cfbab2d2fe75855a574826e186e" translate="yes" xml:space="preserve">
          <source>Invoked when a column is moved due to a margin change.</source>
          <target state="translated">여백 변경으로 인해 열이 이동 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="8b1cdb9b99ebf4012a7f56a67e8e551bacf2474b" translate="yes" xml:space="preserve">
          <source>Invoked when a column is moved due to a margin change. If a cell is being edited, then editing is stopped and the cell is redrawn.</source>
          <target state="translated">여백 변경으로 인해 열이 이동 될 때 호출됩니다. 셀이 편집중인 경우 편집이 중지되고 셀이 다시 그려집니다.</target>
        </trans-unit>
        <trans-unit id="a875ddfc0b0cc0239ce211607181bea162019313" translate="yes" xml:space="preserve">
          <source>Invoked when a column is removed from the table column model.</source>
          <target state="translated">테이블 열 모델에서 열이 제거 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a325f35f1c94f506948f7368f85c91021af4c81f" translate="yes" xml:space="preserve">
          <source>Invoked when a column is repositioned.</source>
          <target state="translated">열의 위치가 변경 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="27516065f46a6a2b2ec97049c0b133cb3b60fedc" translate="yes" xml:space="preserve">
          <source>Invoked when a column is repositioned. If a cell is being edited, then editing is stopped and the cell is redrawn.</source>
          <target state="translated">열의 위치가 변경 될 때 호출됩니다. 셀이 편집중인 경우 편집이 중지되고 셀이 다시 그려집니다.</target>
        </trans-unit>
        <trans-unit id="04e130a550d285f48be0e7a457fd63648c3f69c4" translate="yes" xml:space="preserve">
          <source>Invoked when a component gains the keyboard focus.</source>
          <target state="translated">구성 요소가 키보드 포커스를 얻을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="deb5b4beb55ee30da8dc8075d8d1fa4b02ebfc44" translate="yes" xml:space="preserve">
          <source>Invoked when a component has been added to the container.</source>
          <target state="translated">컨테이너에 컴포넌트가 추가 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="bd1bcf9e526ec3378d608c618b3e45f89668a899" translate="yes" xml:space="preserve">
          <source>Invoked when a component has been removed from the container.</source>
          <target state="translated">구성 요소가 컨테이너에서 제거되었을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="107e742ea9cd5a90bdc776015cec2e2c7c49bf19" translate="yes" xml:space="preserve">
          <source>Invoked when a component loses the keyboard focus.</source>
          <target state="translated">구성 요소가 키보드 포커스를 잃을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="18f53592d24e261e924b9e272509f3314f2a0c91" translate="yes" xml:space="preserve">
          <source>Invoked when a content is changed.</source>
          <target state="translated">콘텐츠가 변경 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="3daad524d53e43408e25db6cbcc0cae9aa610a9e" translate="yes" xml:space="preserve">
          <source>Invoked when a dragged mouse is release in a menu component's display area.</source>
          <target state="translated">메뉴 구성 요소의 표시 영역에서 드래그 한 마우스를 놓을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="045aaef082703f69da0e037ee32c4a34b52ef313" translate="yes" xml:space="preserve">
          <source>Invoked when a internal frame has been opened.</source>
          <target state="translated">내부 프레임이 열렸을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ec1fddf62d322e3ff6df44119c9f12c51b5cc928" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been pressed.</source>
          <target state="translated">키를 눌렀을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4919871adda0e1ab6f5837527d624dfb99fd29ce" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been pressed. See the class description for &lt;a href=&quot;keyevent&quot;&gt;&lt;code&gt;KeyEvent&lt;/code&gt;&lt;/a&gt; for a definition of a key pressed event.</source>
          <target state="translated">키를 눌렀을 때 호출됩니다. 키 누름 이벤트의 정의는 &lt;a href=&quot;keyevent&quot;&gt; &lt;code&gt;KeyEvent&lt;/code&gt; 에&lt;/a&gt; 대한 클래스 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fccbc1c06497315739d9a9c8d6a83757b325d091" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been released.</source>
          <target state="translated">키를 놓았을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="76188f9734dfb9f790379d5057c09a6ef13e8c58" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been released. See the class description for &lt;a href=&quot;keyevent&quot;&gt;&lt;code&gt;KeyEvent&lt;/code&gt;&lt;/a&gt; for a definition of a key released event.</source>
          <target state="translated">키를 놓았을 때 호출됩니다. 키 해제 이벤트의 정의는 &lt;a href=&quot;keyevent&quot;&gt; &lt;code&gt;KeyEvent&lt;/code&gt; &lt;/a&gt; 의 클래스 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b94ebc51642440371e32c48b9075eed9d1769152" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been typed.</source>
          <target state="translated">키가 입력되었을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ae45dc05fe1a09e9121bfdfc1312db7012baafc5" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been typed. Moves the keyboard focus to the first element whose first letter matches the alphanumeric key pressed by the user. Subsequent same key presses move the keyboard focus to the next object that starts with the same letter.</source>
          <target state="translated">키가 입력되었을 때 호출됩니다. 사용자가 누른 영숫자 키와 첫 글자가 일치하는 첫 번째 요소로 키보드 포커스를 이동합니다. 이후에 동일한 키를 누르면 키보드 포커스가 동일한 문자로 시작하는 다음 개체로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="35bf99d9201bf34186d3df0553619bf74d8ef0db" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been typed. See the class description for &lt;a href=&quot;keyevent&quot;&gt;&lt;code&gt;KeyEvent&lt;/code&gt;&lt;/a&gt; for a definition of a key typed event.</source>
          <target state="translated">키가 입력되었을 때 호출됩니다. 키 유형 이벤트의 정의는 &lt;a href=&quot;keyevent&quot;&gt; &lt;code&gt;KeyEvent&lt;/code&gt; &lt;/a&gt; 의 클래스 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7f9f039b8189ea225320ae59d1a58cc5cd25cbc" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been typed. This event occurs when a key press is followed by a key release.</source>
          <target state="translated">키가 입력되었을 때 호출됩니다. 이 이벤트는 키를 누른 후 키를 놓을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="28782248947b184b027e4e6bb51810ec08558c8d" translate="yes" xml:space="preserve">
          <source>Invoked when a menu is selected.</source>
          <target state="translated">메뉴가 선택 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="363d7540377d56cf08d70da3586c6cebbd06781d" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button has been pressed on a &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; 에서 마우스 버튼을 눌렀을 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="d5b209a66a4e7e93ec80565d280d4151229f40d8" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button has been pressed on a component.</source>
          <target state="translated">컴포넌트에서 마우스 버튼을 눌렀을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e3c53d82b1fd5c2591d321d0a9a8c278037ad606" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button has been released on a component.</source>
          <target state="translated">컴포넌트에서 마우스 버튼을 놓았을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="153b32136cb5c90b5c79fd632d7327fa971100ee" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button is pressed on a component and then dragged.</source>
          <target state="translated">컴포넌트에서 마우스 버튼을 누른 다음 드래그 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="09c1e055d6d1bf9695659f8cbb2a508803dc294f" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button is pressed on a component and then dragged. &lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; events will continue to be delivered to the component where the drag originated until the mouse button is released (regardless of whether the mouse position is within the bounds of the component).</source>
          <target state="translated">컴포넌트에서 마우스 버튼을 누른 다음 드래그 할 때 호출됩니다. &lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; 이벤트는 마우스 버튼을 놓을 때까지 드래그가 시작된 구성 요소에 계속 전달됩니다 (마우스 위치가 구성 요소 경계 내에 있는지 여부에 관계없이).</target>
        </trans-unit>
        <trans-unit id="1ec8a66c421e2217395a4a653539764fccb6168e" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button is pressed on a component and then dragged. Mouse drag events will continue to be delivered to the component where the first originated until the mouse button is released (regardless of whether the mouse position is within the bounds of the component).</source>
          <target state="translated">컴포넌트에서 마우스 버튼을 누른 다음 드래그 할 때 호출됩니다. 마우스 드래그 이벤트는 마우스 버튼을 놓을 때까지 첫 번째가 시작된 구성 요소로 계속 전달됩니다 (마우스 위치가 구성 요소 경계 내에 있는지 여부에 관계없이).</target>
        </trans-unit>
        <trans-unit id="5e7721a107e374cba9fb1eedf360b20e5cca8b38" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button is pressed on a component.</source>
          <target state="translated">컴포넌트에서 마우스 버튼을 누를 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9e26f00755969947e8e24f6aca0fca75a537e54e" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button is pressed on the menu and then dragged.</source>
          <target state="translated">메뉴에서 마우스 버튼을 누른 다음 끌면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e38bb38549bd3df0f2a59890908518d018aec1fd" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button is pressed on the menu and then dragged. Delegates the mouse event to the MenuSelectionManager.</source>
          <target state="translated">메뉴에서 마우스 버튼을 누른 다음 끌면 호출됩니다. 마우스 이벤트를 MenuSelectionManager에 위임합니다.</target>
        </trans-unit>
        <trans-unit id="4f497dd1878576c4d77160e397604af78a98e060" translate="yes" xml:space="preserve">
          <source>Invoked when a new top level window has been created.</source>
          <target state="translated">새 최상위 창이 생성 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="64d7287449b36148d8044b3b86654aa86ed8f994" translate="yes" xml:space="preserve">
          <source>Invoked when a notification is received from the SCTP stack.</source>
          <target state="translated">SCTP 스택에서 알림이 수신 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c00928d727d6f4efe4eb3d9e0b8da4ac57f12f4d" translate="yes" xml:space="preserve">
          <source>Invoked when a problem is found.</source>
          <target state="translated">문제가 발견되면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a5d74aae4fa6b2aa96d53cdefc2da87dc7653560" translate="yes" xml:space="preserve">
          <source>Invoked when a property changes on the root pane.</source>
          <target state="translated">루트 창에서 속성이 변경 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="fa851011173a5e8de588022c0a0f77f06279458e" translate="yes" xml:space="preserve">
          <source>Invoked when a property changes on the root pane. If the event indicates the &lt;code&gt;defaultButton&lt;/code&gt; has changed, this will reinstall the keyboard actions.</source>
          <target state="translated">루트 창에서 속성이 변경 될 때 호출됩니다. 이벤트가 &lt;code&gt;defaultButton&lt;/code&gt; 이 변경 되었음을 나타내는 경우 키보드 동작을 다시 설치합니다.</target>
        </trans-unit>
        <trans-unit id="b1ad098d1f28156f4010c8815d27b28f0d60c00b" translate="yes" xml:space="preserve">
          <source>Invoked when a property changes.</source>
          <target state="translated">속성이 변경 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7a3760873d07ecf010e51912fec89fb4ee4a9e8a" translate="yes" xml:space="preserve">
          <source>Invoked when a property changes. &lt;code&gt;MetalRootPaneUI&lt;/code&gt; is primarily interested in events originating from the &lt;code&gt;JRootPane&lt;/code&gt; it has been installed on identifying the property &lt;code&gt;windowDecorationStyle&lt;/code&gt;. If the &lt;code&gt;windowDecorationStyle&lt;/code&gt; has changed to a value other than &lt;code&gt;JRootPane.NONE&lt;/code&gt;, this will add a &lt;code&gt;Component&lt;/code&gt; to the &lt;code&gt;JRootPane&lt;/code&gt; to render the window decorations, as well as installing a &lt;code&gt;Border&lt;/code&gt; on the &lt;code&gt;JRootPane&lt;/code&gt;. On the other hand, if the &lt;code&gt;windowDecorationStyle&lt;/code&gt; has changed to &lt;code&gt;JRootPane.NONE&lt;/code&gt;, this will remove the &lt;code&gt;Component&lt;/code&gt; that has been added to the &lt;code&gt;JRootPane&lt;/code&gt; as well resetting the Border to what it was before &lt;code&gt;installUI&lt;/code&gt; was invoked.</source>
          <target state="translated">속성이 변경 될 때 호출됩니다. &lt;code&gt;MetalRootPaneUI&lt;/code&gt; 는 주로 &lt;code&gt;windowDecorationStyle&lt;/code&gt; 속성을 식별 할 때 설치된 &lt;code&gt;JRootPane&lt;/code&gt; 에서 발생하는 이벤트에 관심이 있습니다 . 는 IF &lt;code&gt;windowDecorationStyle&lt;/code&gt; 이 아닌 값으로 변경 &lt;code&gt;JRootPane.NONE&lt;/code&gt; , 이것은 추가 할 &lt;code&gt;Component&lt;/code&gt; 받는 &lt;code&gt;JRootPane&lt;/code&gt; 의 창 장식을 렌더링뿐만 아니라 설치하는 &lt;code&gt;Border&lt;/code&gt; 온 &lt;code&gt;JRootPane&lt;/code&gt; . 반면 &lt;code&gt;windowDecorationStyle&lt;/code&gt; 이 &lt;code&gt;JRootPane.NONE&lt;/code&gt; 으로 변경된 경우에는 추가 된 &lt;code&gt;Component&lt;/code&gt; 가 제거 됩니다. &lt;code&gt;JRootPane&lt;/code&gt; 뿐만 아니라 &lt;code&gt;installUI&lt;/code&gt; 가 호출 되기 전의 테두리로 재설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="d7cf601f23cdd12aaffba420dbe4f1f64a0facf0" translate="yes" xml:space="preserve">
          <source>Invoked when a top level window has been destroyed.</source>
          <target state="translated">최상위 창이 파괴되었을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="00e0ad37487fa6fec455ac4a3666da8d02019dea" translate="yes" xml:space="preserve">
          <source>Invoked when a window has been closed as the result of calling dispose on the window.</source>
          <target state="translated">창에서 dispose를 호출 한 결과 창이 닫힐 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="422d6fe8378912de49c6afe95417cdcf6cbcdb3b" translate="yes" xml:space="preserve">
          <source>Invoked when a window has been closed.</source>
          <target state="translated">창이 닫힐 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c7b3aef8af76f15c9d5220f360ac5f066608ca1c" translate="yes" xml:space="preserve">
          <source>Invoked when a window has been opened.</source>
          <target state="translated">창이 열릴 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="60dae29244c18f1ec88264c1b31bdafbab254b5a" translate="yes" xml:space="preserve">
          <source>Invoked when a window is activated.</source>
          <target state="translated">창이 활성화 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="67d3277c730f09bb37830ff0f83d54250295af6a" translate="yes" xml:space="preserve">
          <source>Invoked when a window is changed from a minimized to a normal state.</source>
          <target state="translated">창이 최소화 된 상태에서 정상 상태로 변경 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9c7f9e06840d01fb8dfe4de204ae46cd058c1108" translate="yes" xml:space="preserve">
          <source>Invoked when a window is changed from a normal to a minimized state.</source>
          <target state="translated">창이 정상에서 최소화 된 상태로 변경 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="61d7499c0058f49fa09c2c4ec80728d52d1fb423" translate="yes" xml:space="preserve">
          <source>Invoked when a window is changed from a normal to a minimized state. For many platforms, a minimized window is displayed as the icon specified in the window's iconImage property.</source>
          <target state="translated">창이 정상에서 최소화 된 상태로 변경 될 때 호출됩니다. 대부분의 플랫폼에서 최소화 된 창은 창의 iconImage 속성에 지정된 아이콘으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="e7b619a034129f830dd5aec974d871f69fb3b3e1" translate="yes" xml:space="preserve">
          <source>Invoked when a window is de-activated.</source>
          <target state="translated">창이 비활성화 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c351a77cc3e8b1cceac22cdae7e8a2fe6c15470b" translate="yes" xml:space="preserve">
          <source>Invoked when a window is de-iconified.</source>
          <target state="translated">창이 아이콘 화 해제 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="eb0ef2f18a27473c8ab578ddfc674dc77ff3f2cf" translate="yes" xml:space="preserve">
          <source>Invoked when a window is iconified.</source>
          <target state="translated">창이 아이콘 화 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="804aeb2c34cb918de48c6bcd0fb31a549f5fdd70" translate="yes" xml:space="preserve">
          <source>Invoked when a window is in the process of being closed.</source>
          <target state="translated">창이 닫히는 중일 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="43537223ebb683ee805017071a20fad0edd66fea" translate="yes" xml:space="preserve">
          <source>Invoked when a window is in the process of being closed. The close operation can be overridden at this point.</source>
          <target state="translated">창이 닫히는 중일 때 호출됩니다. 이 시점에서 닫기 작업을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9360eccc100c7efc00f52a251df737bedd1546fa" translate="yes" xml:space="preserve">
          <source>Invoked when a window state is changed.</source>
          <target state="translated">창 상태가 변경 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="16c4292c3807e8f3ce040b7effd54c80fc85f17c" translate="yes" xml:space="preserve">
          <source>Invoked when an &lt;a href=&quot;associationchangenotification&quot;&gt;&lt;code&gt;AssociationChangeNotification&lt;/code&gt;&lt;/a&gt; is received from the SCTP stack.</source>
          <target state="translated">SCTP 스택에서 &lt;a href=&quot;associationchangenotification&quot;&gt; &lt;code&gt;AssociationChangeNotification&lt;/code&gt; &lt;/a&gt; 이 수신 될 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="af9a2e6cf681b8bd10f67663fe83683e2f372b7d" translate="yes" xml:space="preserve">
          <source>Invoked when an &lt;a href=&quot;peeraddresschangenotification&quot;&gt;&lt;code&gt;PeerAddressChangeNotification&lt;/code&gt;&lt;/a&gt; is received from the SCTP stack.</source>
          <target state="translated">SCTP 스택에서 &lt;a href=&quot;peeraddresschangenotification&quot;&gt; &lt;code&gt;PeerAddressChangeNotification&lt;/code&gt; &lt;/a&gt; 이 수신 될 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="167fea29d37996e388269ddee583ccceb59ca4d2" translate="yes" xml:space="preserve">
          <source>Invoked when an &lt;a href=&quot;sendfailednotification&quot;&gt;&lt;code&gt;SendFailedNotification&lt;/code&gt;&lt;/a&gt; is received from the SCTP stack.</source>
          <target state="translated">SCTP 스택에서 &lt;a href=&quot;sendfailednotification&quot;&gt; &lt;code&gt;SendFailedNotification&lt;/code&gt; &lt;/a&gt; 이 수신 될 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="1496ace95b510d16acb95dcabeb4fb7c995ab051" translate="yes" xml:space="preserve">
          <source>Invoked when an &lt;a href=&quot;shutdownnotification&quot;&gt;&lt;code&gt;ShutdownNotification&lt;/code&gt;&lt;/a&gt; is received from the SCTP stack.</source>
          <target state="translated">SCTP 스택에서 &lt;a href=&quot;shutdownnotification&quot;&gt; &lt;code&gt;ShutdownNotification&lt;/code&gt; &lt;/a&gt; 이 수신 될 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="1811011a469ebfa94edd06ee031f6b673e4b03fa" translate="yes" xml:space="preserve">
          <source>Invoked when an action occurs.</source>
          <target state="translated">작업이 발생할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="eedbb1304e37fd9d90971c9048b6eb9c6533c169" translate="yes" xml:space="preserve">
          <source>Invoked when an event has been completed.</source>
          <target state="translated">이벤트가 완료되면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7eebd2ecc566646d316306185c6dc7770809f446" translate="yes" xml:space="preserve">
          <source>Invoked when an event has begun.</source>
          <target state="translated">이벤트가 시작될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d46fad955370f90a809af370dfce0c1114ed4c79" translate="yes" xml:space="preserve">
          <source>Invoked when an event is dispatched in the AWT.</source>
          <target state="translated">AWT에서 이벤트가 전달 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="17aadcab83240e81e88c88562a842828531a2878" translate="yes" xml:space="preserve">
          <source>Invoked when an implementation specific notification is received from the SCTP stack.</source>
          <target state="translated">SCTP 스택에서 구현 관련 알림이 수신 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="96c68a672aeb88ecca1eee9503a4461864a12e9a" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame has been closed.</source>
          <target state="translated">내부 프레임이 닫힐 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2716e85f610e6d9e09aa344f3b2466f5a2f5fe5a" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame has been opened.</source>
          <target state="translated">내부 프레임이 열릴 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ab4a9fe4b2a58d1748b607e3dcdfb94fc0edbd74" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame is activated.</source>
          <target state="translated">내부 프레임이 활성화 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="aebd2b35fb42b12c8468c54343a1cf07ab109f98" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame is de-activated.</source>
          <target state="translated">내부 프레임이 비활성화 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="dfd44c37595d162c3ff79fd5059c01832ef3a44a" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame is de-iconified.</source>
          <target state="translated">내부 프레임이 아이콘 화 해제 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="753513f2bd594978ac1f433bb2b837bc180b55c1" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame is iconified.</source>
          <target state="translated">내부 프레임이 아이콘 화 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0281917b3002c9702e37cc8307d5306eefab34f8" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame is in the process of being closed.</source>
          <target state="translated">내부 프레임이 닫히는 중일 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="adeff2d94545f28aaac65bbb8ef521d1135bf502" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame is in the process of being closed. The close operation can be overridden at this point.</source>
          <target state="translated">내부 프레임이 닫히는 중일 때 호출됩니다. 이 시점에서 닫기 작업을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a2ddb169a50ea61d64cc98ff3e904b7220d6012" translate="yes" xml:space="preserve">
          <source>Invoked when an item has been selected or deselected by the user.</source>
          <target state="translated">사용자가 항목을 선택하거나 선택 취소 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1fe8fb337f8119001bf9c73b12893b17863405d6" translate="yes" xml:space="preserve">
          <source>Invoked when an item has been selected or deselected by the user. The code written for this method performs the operations that need to occur when an item is selected (or deselected).</source>
          <target state="translated">사용자가 항목을 선택하거나 선택 취소 할 때 호출됩니다. 이 메서드에 대해 작성된 코드는 항목이 선택 (또는 선택 취소) 될 때 발생해야하는 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="15571cc73d654dd73216f6b6aa441ec4bc2ca52e" translate="yes" xml:space="preserve">
          <source>Invoked when an operation fails.</source>
          <target state="translated">작업이 실패하면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9bbfd1103e9951bfcddf899d52f9086fe6a19520" translate="yes" xml:space="preserve">
          <source>Invoked when an operation has completed.</source>
          <target state="translated">작업이 완료되면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0c99b4df501d20877758d52936b62baa76841e4c" translate="yes" xml:space="preserve">
          <source>Invoked when editing is canceled.</source>
          <target state="translated">편집이 취소 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2d288ae79f97b4eb91c87f935a76d6707d345b30" translate="yes" xml:space="preserve">
          <source>Invoked when editing is canceled. The editor object is discarded and the cell is rendered once again.</source>
          <target state="translated">편집이 취소 될 때 호출됩니다. 편집기 개체가 삭제되고 셀이 다시 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="57489934b363c32816d61699168f0704fdf73ad5" translate="yes" xml:space="preserve">
          <source>Invoked when editing is finished.</source>
          <target state="translated">편집이 완료되면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1cce9277faf7b47b73467e42b9bc6dbf269974ff" translate="yes" xml:space="preserve">
          <source>Invoked when editing is finished. The changes are saved and the editor is discarded.</source>
          <target state="translated">편집이 완료되면 호출됩니다. 변경 사항이 저장되고 편집기가 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="1e94047f49967cb537e1f2e58d90b8665afc8081" translate="yes" xml:space="preserve">
          <source>Invoked when focus is activated on the tree we're in, redraws the lead row.</source>
          <target state="translated">우리가있는 트리에서 포커스가 활성화되면 호출되며 리드 행을 다시 그립니다.</target>
        </trans-unit>
        <trans-unit id="a61a9f6447c079bc8646fbead3d629b925cd813d" translate="yes" xml:space="preserve">
          <source>Invoked when mouse event occurs.</source>
          <target state="translated">마우스 이벤트가 발생할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="26bb97cbdb891c56fb81defee8be87a01cf96108" translate="yes" xml:space="preserve">
          <source>Invoked when rows have been changed in the underlying model between the specified range (inclusive).</source>
          <target state="translated">지정된 범위 (포함) 사이의 기본 모델에서 행이 변경되었을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c29ce89f9c579cb93928136fc2c656d9e108f231" translate="yes" xml:space="preserve">
          <source>Invoked when rows have been deleted from the underlying model in the specified range (inclusive).</source>
          <target state="translated">지정된 범위 (포함)의 기본 모델에서 행이 삭제되었을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="82f4e7890a50c8d3d56fd83b240dc8f91e022d6c" translate="yes" xml:space="preserve">
          <source>Invoked when rows have been inserted into the underlying model in the specified range (inclusive).</source>
          <target state="translated">지정된 범위 (포함)의 기본 모델에 행이 삽입되었을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="49f7ea068b2063fb7e14d3771457eccb9ab67406" translate="yes" xml:space="preserve">
          <source>Invoked when the Elements attributes have changed.</source>
          <target state="translated">Elements 속성이 변경 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="465fcab5c4c7d77e7fbbf56b59775b6a94d1d2bc" translate="yes" xml:space="preserve">
          <source>Invoked when the Elements attributes have changed. Recreates the image.</source>
          <target state="translated">Elements 속성이 변경 될 때 호출됩니다. 이미지를 다시 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1808d2d11966c59b9767aec9adb52f0de9f85b7f" translate="yes" xml:space="preserve">
          <source>Invoked when the GUI subsystem is initialized and it's OK for the assisitive technology to create instances of GUI objects.</source>
          <target state="translated">GUI 하위 시스템이 초기화되고 지원 기술이 GUI 개체의 인스턴스를 만드는 것이 괜찮을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="79f614d2b86ac36c7513c281a74f4ae5928cce4b" translate="yes" xml:space="preserve">
          <source>Invoked when the Window is no longer the focused Window, which means that keyboard events will no longer be delivered to the Window or any of its subcomponents.</source>
          <target state="translated">Window가 더 이상 포커스가있는 Window가 아닐 때 호출됩니다. 즉, 키보드 이벤트가 더 이상 Window 또는 해당 하위 구성 요소에 전달되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f8ed7000e3b28a0260355fde25a4883b5679c586" translate="yes" xml:space="preserve">
          <source>Invoked when the Window is set to be the active Window.</source>
          <target state="translated">Window가 활성 Window로 설정 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6b31a894bffdcfe801877021c45af96c9207210f" translate="yes" xml:space="preserve">
          <source>Invoked when the Window is set to be the active Window. Only a Frame or a Dialog can be the active Window. The native windowing system may denote the active Window or its children with special decorations, such as a highlighted title bar. The active Window is always either the focused Window, or the first Frame or Dialog that is an owner of the focused Window.</source>
          <target state="translated">Window가 활성 Window로 설정 될 때 호출됩니다. 프레임 또는 대화 상자 만 활성 창이 될 수 있습니다. 기본 창 시스템은 강조 표시된 제목 표시 줄과 같은 특수 장식으로 활성 창 또는 하위 창을 나타낼 수 있습니다. 활성 창은 항상 초점이 맞춰진 창이거나 초점이 맞춰진 창 소유자 인 첫 번째 프레임 또는 대화 상자입니다.</target>
        </trans-unit>
        <trans-unit id="b34005443ae6acd24039e2eb3cad0baffc331b09" translate="yes" xml:space="preserve">
          <source>Invoked when the Window is set to be the focused Window, which means that the Window, or one of its subcomponents, will receive keyboard events.</source>
          <target state="translated">Window가 포커스 된 Window로 설정 될 때 호출됩니다. 즉, Window 또는 해당 하위 구성 요소 중 하나가 키보드 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="14e73ab0e53775a8ae83fbb3d7fcb61734a840c7" translate="yes" xml:space="preserve">
          <source>Invoked when the application is asked to quit.</source>
          <target state="translated">응용 프로그램을 종료하라는 메시지가 표시 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c872ce404ad7377c2f43628c4a036f433b964c0c" translate="yes" xml:space="preserve">
          <source>Invoked when the application is asked to quit. Implementors must call either &lt;a href=&quot;quitresponse#cancelQuit()&quot;&gt;&lt;code&gt;QuitResponse.cancelQuit()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;quitresponse#performQuit()&quot;&gt;&lt;code&gt;QuitResponse.performQuit()&lt;/code&gt;&lt;/a&gt;, or ensure the application terminates. The process (or log-out) requesting this app to quit will be blocked until the &lt;a href=&quot;quitresponse&quot;&gt;&lt;code&gt;QuitResponse&lt;/code&gt;&lt;/a&gt; is handled. Apps that require complex UI to shutdown may call the &lt;a href=&quot;quitresponse&quot;&gt;&lt;code&gt;QuitResponse&lt;/code&gt;&lt;/a&gt; from any thread. Your app may be asked to quit multiple times before you have responded to the initial request. This handler is called each time a quit is requested, and the same &lt;a href=&quot;quitresponse&quot;&gt;&lt;code&gt;QuitResponse&lt;/code&gt;&lt;/a&gt; object is passed until it is handled. Once used, the &lt;a href=&quot;quitresponse&quot;&gt;&lt;code&gt;QuitResponse&lt;/code&gt;&lt;/a&gt; cannot be used again to change the decision.</source>
          <target state="translated">응용 프로그램을 종료하라는 메시지가 표시 될 때 호출됩니다. 구현자는 &lt;a href=&quot;quitresponse#cancelQuit()&quot;&gt; &lt;code&gt;QuitResponse.cancelQuit()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;quitresponse#performQuit()&quot;&gt; &lt;code&gt;QuitResponse.performQuit()&lt;/code&gt; &lt;/a&gt; 호출하거나 애플리케이션이 종료되었는지 확인해야합니다. 이 앱을 종료하도록 요청하는 프로세스 (또는 로그 아웃)는 &lt;a href=&quot;quitresponse&quot;&gt; &lt;code&gt;QuitResponse&lt;/code&gt; &lt;/a&gt; 가 처리 될 때까지 차단됩니다 . 종료하는 데 복잡한 UI가 필요한 앱 은 모든 스레드 에서 &lt;a href=&quot;quitresponse&quot;&gt; &lt;code&gt;QuitResponse&lt;/code&gt; &lt;/a&gt; 를 호출 할 수 있습니다 . 초기 요청에 응답하기 전에 앱을 여러 번 종료하라는 요청을받을 수 있습니다. 이 핸들러는 종료가 요청 될 때마다 호출되며 처리 될 때까지 동일한 &lt;a href=&quot;quitresponse&quot;&gt; &lt;code&gt;QuitResponse&lt;/code&gt; &lt;/a&gt; 객체가 전달됩니다. 일단 사용되면 &lt;a href=&quot;quitresponse&quot;&gt; &lt;code&gt;QuitResponse&lt;/code&gt; &lt;/a&gt; 를 다시 사용하여 결정을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3b53e33ce29878cb9630dd67dc49288c143791c2" translate="yes" xml:space="preserve">
          <source>Invoked when the caret within composed text has changed.</source>
          <target state="translated">작성된 텍스트 내의 캐럿이 변경되었을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="717554779461f87731f5a1201aaf30b1ce530bb2" translate="yes" xml:space="preserve">
          <source>Invoked when the column in the rows have been updated in the underlying model between the specified range.</source>
          <target state="translated">행의 열이 지정된 범위 사이의 기본 모델에서 업데이트되었을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="fa9b2423c09ee06411b1495440d6ae362b012557" translate="yes" xml:space="preserve">
          <source>Invoked when the component has been made invisible.</source>
          <target state="translated">컴포넌트가 보이지 않게 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="43039026d7a70039fea30597b5221e2cfa323794" translate="yes" xml:space="preserve">
          <source>Invoked when the component has been made visible.</source>
          <target state="translated">구성 요소가 표시 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="78448c1494ee97777303eb17b3511900fb186845" translate="yes" xml:space="preserve">
          <source>Invoked when the component's position changes.</source>
          <target state="translated">구성 요소의 위치가 변경 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="126b3b5fcb46cea8e98a6cbf19ce2882983a9b1c" translate="yes" xml:space="preserve">
          <source>Invoked when the component's size changes.</source>
          <target state="translated">구성 요소의 크기가 변경 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="8ab3e9871148ece5b6b49f8c32aee4439b2b1f27" translate="yes" xml:space="preserve">
          <source>Invoked when the contents of the underlying model have completely changed.</source>
          <target state="translated">기본 모델의 내용이 완전히 변경되었을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2aa4ac21ebeeff5e3676d41e24e35d101cde761b" translate="yes" xml:space="preserve">
          <source>Invoked when the contents of the underlying model have completely changed. The structure of the table is the same, only the contents have changed. This is typically sent when it is too expensive to characterize the change in terms of the other methods.</source>
          <target state="translated">기본 모델의 내용이 완전히 변경되었을 때 호출됩니다. 테이블의 구조는 동일하며 내용 만 변경되었습니다. 이것은 일반적으로 다른 방법의 관점에서 변경을 특성화하기에는 너무 비용이 많이들 때 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="358dddaf2a0895877bc7fd48c975c6be32028e67" translate="yes" xml:space="preserve">
          <source>Invoked when the cursor enters the menu.</source>
          <target state="translated">커서가 메뉴에 들어갈 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1f00c3ea7bf4d623b7473bda41cf2c92ceafb513" translate="yes" xml:space="preserve">
          <source>Invoked when the cursor enters the menu. This method sets the selected path for the MenuSelectionManager and handles the case in which a menu item is used to pop up an additional menu, as in a hierarchical menu system.</source>
          <target state="translated">커서가 메뉴에 들어갈 때 호출됩니다. 이 메서드는 MenuSelectionManager에 대해 선택된 경로를 설정하고 계층 적 메뉴 시스템에서와 같이 메뉴 항목이 추가 메뉴를 팝업하는 데 사용되는 경우를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="a1888a602619f6ce0b5c38cbf00b985b4f8b9d6e" translate="yes" xml:space="preserve">
          <source>Invoked when the dragged mouse has entered a menu component's display area.</source>
          <target state="translated">드래그 한 마우스가 메뉴 구성 요소의 표시 영역에 들어갔을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="cb10906bdb588955e72e4ba0039b51dcb6000096" translate="yes" xml:space="preserve">
          <source>Invoked when the dragged mouse has left a menu component's display area.</source>
          <target state="translated">드래그 한 마우스가 메뉴 구성 요소의 표시 영역을 떠났을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="57852f19c9d59d123b86133eabece28abe6414a4" translate="yes" xml:space="preserve">
          <source>Invoked when the menu is canceled.</source>
          <target state="translated">메뉴가 취소 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="527cd871f1d3efd275969fc8098ad27d25ada089" translate="yes" xml:space="preserve">
          <source>Invoked when the menu is deselected.</source>
          <target state="translated">메뉴가 선택 취소 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="da546a10c29f8f005b866666f9ba3a93870451e3" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse button has been clicked (pressed and released) on a component.</source>
          <target state="translated">구성 요소에서 마우스 버튼을 클릭 (눌렀다 떼기)했을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6bcbb29906fa2a407ea9abefa8ba86f47d0f862c" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse button has been moved on a component (with no buttons no down).</source>
          <target state="translated">마우스 버튼이 구성 요소에서 이동되었을 때 호출됩니다 (아래로 버튼 없음).</target>
        </trans-unit>
        <trans-unit id="54e5ed18e2ed9816a17e6b2af2043c532bb6365c" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse cursor has been moved onto a component but no buttons have been pushed.</source>
          <target state="translated">마우스 커서를 컴포넌트로 이동했지만 버튼을 누르지 않았을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="561bb7d0e5770b246ac177d6c6e33856c33f434a" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse enters a component.</source>
          <target state="translated">마우스가 구성 요소에 들어갈 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="23d334358d8a6d228b1dfeb11b2be6cfca35cf10" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse exits a component.</source>
          <target state="translated">마우스가 구성 요소를 종료 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="62e40ac968a2e2daa87cd5ca24fe2f45574b9e76" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse exits the scrollbar.</source>
          <target state="translated">마우스가 스크롤바를 종료 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2a80f514495209f1f8577b3ef31e82c308cd83e4" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse has been clicked on a component.</source>
          <target state="translated">컴포넌트에서 마우스를 클릭했을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="13705210826541ea7c584a87cc720e08e527fb2b" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse has been clicked on the menu.</source>
          <target state="translated">메뉴에서 마우스를 클릭하면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="fe60208ee5aabb367b00f0cd55f0611436a3ee20" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse has been clicked on the menu. This method clears or sets the selection path of the MenuSelectionManager.</source>
          <target state="translated">메뉴에서 마우스를 클릭하면 호출됩니다. 이 메서드는 MenuSelectionManager의 선택 경로를 지우거나 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c629b83bf17b159b52d41a48c8475631e1eb2fe2" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse has been released on the menu.</source>
          <target state="translated">메뉴에서 마우스를 놓았을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c85c9d315138f70ef61c808dac17c0aa3bbb2685" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse has been released on the menu. Delegates the mouse event to the MenuSelectionManager.</source>
          <target state="translated">메뉴에서 마우스를 놓았을 때 호출됩니다. 마우스 이벤트를 MenuSelectionManager에 위임합니다.</target>
        </trans-unit>
        <trans-unit id="e704fa5b5b91e25b393d4c2b10b4c233c816b022" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse is being dragged in a menu component's display area.</source>
          <target state="translated">메뉴 구성 요소의 표시 영역에서 마우스를 끌 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6d65b0e647abe3360ad53f46007d9be3d7e763e6" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse wheel is rotated.</source>
          <target state="translated">마우스 휠이 회전 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9fb3972edcf4ca581c7f9d50ff4a9bf685891d27" translate="yes" xml:space="preserve">
          <source>Invoked when the panel is added to the chooser.</source>
          <target state="translated">패널이 선택기에 추가 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2b322037538a56e0fda0ff295353d408c5f3609f" translate="yes" xml:space="preserve">
          <source>Invoked when the panel is added to the chooser. If you override this, be sure to call &lt;code&gt;super&lt;/code&gt;.</source>
          <target state="translated">패널이 선택기에 추가 될 때 호출됩니다. 이것을 재정의하는 경우 &lt;code&gt;super&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bfb289c3fe0ec421c685205d38785ea9947a1326" translate="yes" xml:space="preserve">
          <source>Invoked when the panel is removed from the chooser.</source>
          <target state="translated">Invoked when the panel is removed from the chooser.</target>
        </trans-unit>
        <trans-unit id="d0ee12065f21c68efae07b1efd08f085f3a471a8" translate="yes" xml:space="preserve">
          <source>Invoked when the panel is removed from the chooser. If override this, be sure to call &lt;code&gt;super&lt;/code&gt;.</source>
          <target state="translated">Invoked when the panel is removed from the chooser. If override this, be sure to call &lt;code&gt;super&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5910294b6a7b5b27de488ec532688c866473d66" translate="yes" xml:space="preserve">
          <source>Invoked when the row selection changes -- repaints to show the new selection.</source>
          <target state="translated">Invoked when the row selection changes -- repaints to show the new selection.</target>
        </trans-unit>
        <trans-unit id="47c6cd2112c42879a9332f0703cdb4910ef35c48" translate="yes" xml:space="preserve">
          <source>Invoked when the selection model of the &lt;code&gt;TableColumnModel&lt;/code&gt; is changed.</source>
          <target state="translated">Invoked when the selection model of the &lt;code&gt;TableColumnModel&lt;/code&gt; is changed.</target>
        </trans-unit>
        <trans-unit id="90ce1267002b13f79a9ecd1060c68d5965ce9861" translate="yes" xml:space="preserve">
          <source>Invoked when the selection model of the &lt;code&gt;TableColumnModel&lt;/code&gt; is changed. This method currently has no effect (the header is not redrawn).</source>
          <target state="translated">Invoked when the selection model of the &lt;code&gt;TableColumnModel&lt;/code&gt; is changed. This method currently has no effect (the header is not redrawn).</target>
        </trans-unit>
        <trans-unit id="eba4659e4407f2dcc7af1c321c2434a77268d2e9" translate="yes" xml:space="preserve">
          <source>Invoked when the target &lt;a href=&quot;clipboard&quot;&gt;&lt;code&gt;Clipboard&lt;/code&gt;&lt;/a&gt; of the listener has changed its available &lt;a href=&quot;dataflavor&quot;&gt;&lt;code&gt;DataFlavor&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">Invoked when the target &lt;a href=&quot;clipboard&quot;&gt; &lt;code&gt;Clipboard&lt;/code&gt; &lt;/a&gt; of the listener has changed its available &lt;a href=&quot;dataflavor&quot;&gt; &lt;code&gt;DataFlavor&lt;/code&gt; &lt;/a&gt;s.</target>
        </trans-unit>
        <trans-unit id="d006d01936e0ebc04068b2ff6b63de6bf09561af" translate="yes" xml:space="preserve">
          <source>Invoked when the target of the listener has changed its state.</source>
          <target state="translated">Invoked when the target of the listener has changed its state.</target>
        </trans-unit>
        <trans-unit id="109a7928c9a47e9aa4174e0d483581cc760569f1" translate="yes" xml:space="preserve">
          <source>Invoked when the text entered through an input method has changed.</source>
          <target state="translated">Invoked when the text entered through an input method has changed.</target>
        </trans-unit>
        <trans-unit id="449f4d2c9a6c25fe0e1a4090e0a69309ef5b9181" translate="yes" xml:space="preserve">
          <source>Invoked when the underlying model structure has completely changed.</source>
          <target state="translated">Invoked when the underlying model structure has completely changed.</target>
        </trans-unit>
        <trans-unit id="f5c0559dc386e48d320da1f9f1ad0f4f90a3533a" translate="yes" xml:space="preserve">
          <source>Invoked when the underlying model structure has completely changed. For example, if the number of columns in a &lt;code&gt;TableModel&lt;/code&gt; changed, this method would be invoked.</source>
          <target state="translated">Invoked when the underlying model structure has completely changed. For example, if the number of columns in a &lt;code&gt;TableModel&lt;/code&gt; changed, this method would be invoked.</target>
        </trans-unit>
        <trans-unit id="67ca4236b072c145da63ea4dde46a9025bb98335" translate="yes" xml:space="preserve">
          <source>Invoked when the user attempts an invalid operation, such as pasting into an uneditable &lt;code&gt;JTextField&lt;/code&gt; that has focus.</source>
          <target state="translated">Invoked when the user attempts an invalid operation, such as pasting into an uneditable &lt;code&gt;JTextField&lt;/code&gt; that has focus.</target>
        </trans-unit>
        <trans-unit id="28207e822fcf57c3291fe93ffc211a61a8aa6ebb" translate="yes" xml:space="preserve">
          <source>Invoked when the user attempts an invalid operation, such as pasting into an uneditable &lt;code&gt;JTextField&lt;/code&gt; that has focus. The default implementation beeps. Subclasses that wish different behavior should override this and provide the additional feedback.</source>
          <target state="translated">Invoked when the user attempts an invalid operation, such as pasting into an uneditable &lt;code&gt;JTextField&lt;/code&gt; that has focus. The default implementation beeps. Subclasses that wish different behavior should override this and provide the additional feedback.</target>
        </trans-unit>
        <trans-unit id="aeb23f66d6439199ddebe3a0aea000f33e37a2d3" translate="yes" xml:space="preserve">
          <source>Invoked when the user attempts to close the window from the window's system menu.</source>
          <target state="translated">Invoked when the user attempts to close the window from the window's system menu.</target>
        </trans-unit>
        <trans-unit id="57361029bb878f3c9bdc8c2b6d7b7f4a27965857" translate="yes" xml:space="preserve">
          <source>Invoked when the user inputs an invalid value.</source>
          <target state="translated">Invoked when the user inputs an invalid value.</target>
        </trans-unit>
        <trans-unit id="5a9de9200247fe0fdcab85cef7770c686f8db944" translate="yes" xml:space="preserve">
          <source>Invoked when the user inputs an invalid value. This gives the component a chance to provide feedback. The default implementation beeps.</source>
          <target state="translated">Invoked when the user inputs an invalid value. This gives the component a chance to provide feedback. The default implementation beeps.</target>
        </trans-unit>
        <trans-unit id="34666fc28fa4af8ecda466f6909f6de80a6bd7e6" translate="yes" xml:space="preserve">
          <source>Invoked when the value of the adjustable has changed.</source>
          <target state="translated">Invoked when the value of the adjustable has changed.</target>
        </trans-unit>
        <trans-unit id="41c8422492cf799b8e3a4848795fdd81b2cf2abb" translate="yes" xml:space="preserve">
          <source>Invoked when the value of the text has changed.</source>
          <target state="translated">Invoked when the value of the text has changed.</target>
        </trans-unit>
        <trans-unit id="753f1548826c3dbb9283b900acc68da7fe9970a8" translate="yes" xml:space="preserve">
          <source>Invoked when the value of the text has changed. The code written for this method performs the operations that need to occur when text changes.</source>
          <target state="translated">Invoked when the value of the text has changed. The code written for this method performs the operations that need to occur when text changes.</target>
        </trans-unit>
        <trans-unit id="ffb2a18a1f2719d88207396ea085cda8c527be62" translate="yes" xml:space="preserve">
          <source>Invoked when this table's &lt;code&gt;TableModel&lt;/code&gt; generates a &lt;code&gt;TableModelEvent&lt;/code&gt;.</source>
          <target state="translated">Invoked when this table's &lt;code&gt;TableModel&lt;/code&gt; generates a &lt;code&gt;TableModelEvent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdeea35acd2b1be6db8a3ce42f97a18680c19f7d" translate="yes" xml:space="preserve">
          <source>Invoked when this table's &lt;code&gt;TableModel&lt;/code&gt; generates a &lt;code&gt;TableModelEvent&lt;/code&gt;. The &lt;code&gt;TableModelEvent&lt;/code&gt; should be constructed in the coordinate system of the model; the appropriate mapping to the view coordinate system is performed by this &lt;code&gt;JTable&lt;/code&gt; when it receives the event.</source>
          <target state="translated">Invoked when this table's &lt;code&gt;TableModel&lt;/code&gt; generates a &lt;code&gt;TableModelEvent&lt;/code&gt; . The &lt;code&gt;TableModelEvent&lt;/code&gt; should be constructed in the coordinate system of the model; the appropriate mapping to the view coordinate system is performed by this &lt;code&gt;JTable&lt;/code&gt; when it receives the event.</target>
        </trans-unit>
        <trans-unit id="05dfcb2b6357d5a291443a330b91c31e7e122333" translate="yes" xml:space="preserve">
          <source>Invoked when window state is changed.</source>
          <target state="translated">Invoked when window state is changed.</target>
        </trans-unit>
        <trans-unit id="181ca1c36e24383b2e25a98a4f968ea2b8e1835c" translate="yes" xml:space="preserve">
          <source>Invoked whenever a node in the tree is about to be collapsed.</source>
          <target state="translated">Invoked whenever a node in the tree is about to be collapsed.</target>
        </trans-unit>
        <trans-unit id="f36e2784898b50c8a01e0e3eb990682f6f2f041d" translate="yes" xml:space="preserve">
          <source>Invoked whenever a node in the tree is about to be expanded.</source>
          <target state="translated">Invoked whenever a node in the tree is about to be expanded.</target>
        </trans-unit>
        <trans-unit id="136a3c7e7529b04f06ad45da1e691df52da4db4d" translate="yes" xml:space="preserve">
          <source>Invokedynamic call sites have two argument lists: a static argument list and a dynamic argument list. The static argument list is stored in the constant pool; the dynamic argument is pushed on the operand stack at capture time. The bootstrap method has access to the entire static argument list (which in this case, includes information describing the implementation method, the target interface, and the target interface method(s)), as well as a method signature describing the number and static types (but not the values) of the dynamic arguments and the static return type of the invokedynamic site.</source>
          <target state="translated">Invokedynamic 호출 ​​사이트에는 정적 인수 목록과 동적 인수 목록의 두 가지 인수 목록이 있습니다. 정적 인수 목록은 상수 풀에 저장됩니다. 캡처시 피연산자 스택에서 동적 인수가 푸시됩니다. 부트 스트랩 메소드는 전체 정적 인수 목록 (이 경우 구현 메소드, 대상 인터페이스 및 대상 인터페이스 메소드를 설명하는 정보와 숫자 및 정적 유형을 설명하는 메소드 서명 포함)에 액세스 할 수 있습니다. 동적 인수의 값 (값이 아님) 및 invokedynamic 사이트의 정적 리턴 유형</target>
        </trans-unit>
        <trans-unit id="034d7e412f997fb3385d72dcd2b1f9b72382ae03" translate="yes" xml:space="preserve">
          <source>Invokes &lt;a href=&quot;entityresolver2#resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;EntityResolver2.resolveEntity()&lt;/code&gt;&lt;/a&gt; with null entity name and base URI.</source>
          <target state="translated">Invokes &lt;a href=&quot;entityresolver2#resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;EntityResolver2.resolveEntity()&lt;/code&gt; &lt;/a&gt; with null entity name and base URI.</target>
        </trans-unit>
        <trans-unit id="2c84a7f16ec10df891896d3b81e21d17e65c19c4" translate="yes" xml:space="preserve">
          <source>Invokes &lt;a href=&quot;entityresolver2#resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;EntityResolver2.resolveEntity()&lt;/code&gt;&lt;/a&gt; with null entity name and base URI. You only need to override that method to use this class.</source>
          <target state="translated">Invokes &lt;a href=&quot;entityresolver2#resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;EntityResolver2.resolveEntity()&lt;/code&gt; &lt;/a&gt; with null entity name and base URI. You only need to override that method to use this class.</target>
        </trans-unit>
        <trans-unit id="75f3d116ffb7789a4369d8c6505a33280d96c3f5" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;actionPerformed&lt;/code&gt; on &lt;code&gt;action&lt;/code&gt; if &lt;code&gt;action&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt; and accepts the sender object.</source>
          <target state="translated">Invokes &lt;code&gt;actionPerformed&lt;/code&gt; on &lt;code&gt;action&lt;/code&gt; if &lt;code&gt;action&lt;/code&gt; is non- &lt;code&gt;null&lt;/code&gt; and accepts the sender object.</target>
        </trans-unit>
        <trans-unit id="84ade6f3f38e042946022d04908bd809b84cc4cc" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;actionPerformed&lt;/code&gt; on &lt;code&gt;action&lt;/code&gt; if &lt;code&gt;action&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt; and accepts the sender object. The command for the ActionEvent is determined by:</source>
          <target state="translated">Invokes &lt;code&gt;actionPerformed&lt;/code&gt; on &lt;code&gt;action&lt;/code&gt; if &lt;code&gt;action&lt;/code&gt; is non- &lt;code&gt;null&lt;/code&gt; and accepts the sender object. The command for the ActionEvent is determined by:</target>
        </trans-unit>
        <trans-unit id="7b1daee93f3793507a33455ed79dcbe741ca86e1" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;provideErrorFeedback&lt;/code&gt; on the current look and feel, which typically initiates an error beep.</source>
          <target state="translated">Invokes &lt;code&gt;provideErrorFeedback&lt;/code&gt; on the current look and feel, which typically initiates an error beep.</target>
        </trans-unit>
        <trans-unit id="7bd07db099ed326a8cfa699bfae0e7d16c8a985b" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;provideErrorFeedback&lt;/code&gt; on the current look and feel, which typically initiates an error beep. The normal behavior of transferring the currently selected range in the associated text model to the system clipboard, and leaving the contents from the model, is not acceptable for a password field.</source>
          <target state="translated">Invokes &lt;code&gt;provideErrorFeedback&lt;/code&gt; on the current look and feel, which typically initiates an error beep. The normal behavior of transferring the currently selected range in the associated text model to the system clipboard, and leaving the contents from the model, is not acceptable for a password field.</target>
        </trans-unit>
        <trans-unit id="bb286bc0b406cca1adfccd6a45d23b10a5a52197" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;provideErrorFeedback&lt;/code&gt; on the current look and feel, which typically initiates an error beep. The normal behavior of transferring the currently selected range in the associated text model to the system clipboard, and removing the contents from the model, is not acceptable for a password field.</source>
          <target state="translated">Invokes &lt;code&gt;provideErrorFeedback&lt;/code&gt; on the current look and feel, which typically initiates an error beep. The normal behavior of transferring the currently selected range in the associated text model to the system clipboard, and removing the contents from the model, is not acceptable for a password field.</target>
        </trans-unit>
        <trans-unit id="b99072c1a07aa9e93aafc6735755407d965e9482" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;shutdown&lt;/code&gt; when this executor is no longer referenced and it has no threads.</source>
          <target state="translated">이 실행 프로그램이 더 이상 참조되지 않고 스레드가없는 경우 &lt;code&gt;shutdown&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="049be886d03a13dee3e84ab0ebf313a9caf51192" translate="yes" xml:space="preserve">
          <source>Invokes a method on or through a RequiredModelMBean and returns the result of the method execution.</source>
          <target state="translated">RequiredModelMBean에서 또는 메소드를 통해 메소드를 호출하고 메소드 실행 결과를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="01a36610f49e0f0f52179272929511613f78de7d" translate="yes" xml:space="preserve">
          <source>Invokes an executable Snippet by calling a method on the specified wrapper class.</source>
          <target state="translated">지정된 래퍼 클래스에서 메서드를 호출하여 실행 가능한 Snippet을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="beac93105585d24b4ff092e4ca3e071af22d49b0" translate="yes" xml:space="preserve">
          <source>Invokes an executable Snippet by calling a method on the specified wrapper class. The method must have no arguments and return String.</source>
          <target state="translated">지정된 래퍼 클래스에서 메서드를 호출하여 실행 가능한 Snippet을 호출합니다. 메서드에는 인수가 없어야하며 String을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="b4a34b90a6d21a90429a3e6815fa689d71223876" translate="yes" xml:space="preserve">
          <source>Invokes an operation on an MBean.</source>
          <target state="translated">MBean에서 조작을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="d30d312cbf9be7b254348d84b53ae55ca8c1afbb" translate="yes" xml:space="preserve">
          <source>Invokes supers implementation of &lt;code&gt;installUI&lt;/code&gt; to install the necessary state onto the passed in &lt;code&gt;JRootPane&lt;/code&gt; to render the metal look and feel implementation of &lt;code&gt;RootPaneUI&lt;/code&gt;.</source>
          <target state="translated">Invokes supers implementation of &lt;code&gt;installUI&lt;/code&gt; to install the necessary state onto the passed in &lt;code&gt;JRootPane&lt;/code&gt; to render the metal look and feel implementation of &lt;code&gt;RootPaneUI&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05c0c5ea2b0b3fa211d287c16109e27bf2a4b1e8" translate="yes" xml:space="preserve">
          <source>Invokes supers implementation of &lt;code&gt;installUI&lt;/code&gt; to install the necessary state onto the passed in &lt;code&gt;JRootPane&lt;/code&gt; to render the metal look and feel implementation of &lt;code&gt;RootPaneUI&lt;/code&gt;. If the &lt;code&gt;windowDecorationStyle&lt;/code&gt; property of the &lt;code&gt;JRootPane&lt;/code&gt; is other than &lt;code&gt;JRootPane.NONE&lt;/code&gt;, this will add a custom &lt;code&gt;Component&lt;/code&gt; to render the widgets to &lt;code&gt;JRootPane&lt;/code&gt;, as well as installing a custom &lt;code&gt;Border&lt;/code&gt; and &lt;code&gt;LayoutManager&lt;/code&gt; on the &lt;code&gt;JRootPane&lt;/code&gt;.</source>
          <target state="translated">Invokes supers implementation of &lt;code&gt;installUI&lt;/code&gt; to install the necessary state onto the passed in &lt;code&gt;JRootPane&lt;/code&gt; to render the metal look and feel implementation of &lt;code&gt;RootPaneUI&lt;/code&gt; . If the &lt;code&gt;windowDecorationStyle&lt;/code&gt; property of the &lt;code&gt;JRootPane&lt;/code&gt; is other than &lt;code&gt;JRootPane.NONE&lt;/code&gt; , this will add a custom &lt;code&gt;Component&lt;/code&gt; to render the widgets to &lt;code&gt;JRootPane&lt;/code&gt; , as well as installing a custom &lt;code&gt;Border&lt;/code&gt; and &lt;code&gt;LayoutManager&lt;/code&gt; on the &lt;code&gt;JRootPane&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29407bd247807be798b0007887aac21e249622e0" translate="yes" xml:space="preserve">
          <source>Invokes supers implementation to uninstall any of its state.</source>
          <target state="translated">Invokes supers implementation to uninstall any of its state.</target>
        </trans-unit>
        <trans-unit id="23ecc3ca30b4bf9a8ce59ff3d5d5ef1b51c554d9" translate="yes" xml:space="preserve">
          <source>Invokes supers implementation to uninstall any of its state. This will also reset the &lt;code&gt;LayoutManager&lt;/code&gt; of the &lt;code&gt;JRootPane&lt;/code&gt;. If a &lt;code&gt;Component&lt;/code&gt; has been added to the &lt;code&gt;JRootPane&lt;/code&gt; to render the window decoration style, this method will remove it. Similarly, this will revert the Border and LayoutManager of the &lt;code&gt;JRootPane&lt;/code&gt; to what it was before &lt;code&gt;installUI&lt;/code&gt; was invoked.</source>
          <target state="translated">Invokes supers implementation to uninstall any of its state. This will also reset the &lt;code&gt;LayoutManager&lt;/code&gt; of the &lt;code&gt;JRootPane&lt;/code&gt; . If a &lt;code&gt;Component&lt;/code&gt; has been added to the &lt;code&gt;JRootPane&lt;/code&gt; to render the window decoration style, this method will remove it. Similarly, this will revert the Border and LayoutManager of the &lt;code&gt;JRootPane&lt;/code&gt; to what it was before &lt;code&gt;installUI&lt;/code&gt; was invoked.</target>
        </trans-unit>
        <trans-unit id="805ad24d4e7a04e5a2d377ad14379da13d8b92a8" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;cancelEditing&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;cancelEditing&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="042d5967adfd9b9ff6b620950196d4ccdec1daa7" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;contains&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;contains&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="43d3b9aeb6093fc113647f32e0f374bb6d4a73ac" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;containsCustomComponents&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;containsCustomComponents&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="e3ab9766b0f4d42eff6d16058f1a468a844a14d7" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;damageRange&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;damageRange&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="d6735e9228871528607a360b342e9bbd35483e8e" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;ensureFileIsVisible&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;ensureFileIsVisible&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="bbbe070752e0d5d6e87248d2228f08061f2f219e" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;finishedPaintingChildren&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;finishedPaintingChildren&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="f1ee325ae53f49cb217abacfe48b6dbb52f6ef6a" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getAcceptAllFileFilter&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getAcceptAllFileFilter&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="a6b3337aefe3e7d31f087cde783f732013343114" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getAccessibleChild&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getAccessibleChild&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="0a484bc187e79c7c0f7b362868c00db21c45fc40" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getAccessibleChildrenCount&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getAccessibleChildrenCount&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="5a986deec59734966904aef40c533c4c566d9fd5" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getApproveButtonText&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getApproveButtonText&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="5e87b084c3e502cdccdec8746db00a666401ed16" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getCellBounds&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getCellBounds&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="8c4930c63e1938093cd183cf6b2328959e87943a" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getClosestPathForLocation&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getClosestPathForLocation&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="143a847d5a621a4ee54c78958cb6be10a21b71d1" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getDialogTitle&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getDialogTitle&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="b847ad0aa332734820eee6f44b4b9d8c48c417fa" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getDividerLocation&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getDividerLocation&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="cd3a8516d4cbded026dc9193886a13ddead39ab1" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getEditingPath&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getEditingPath&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="e86890be9a8ce2aa1c1776769ed7a34b4e8b1b85" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getEditorKit&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getEditorKit&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="25781d8e04b3277aead5e7506c1393a85458a813" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getFileView&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getFileView&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="f2c47cf51f88077e54e4c6320d24690553902b5c" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getMaximumDividerLocation&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getMaximumDividerLocation&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="f880acd448180a10657d94e365ff0b18fa013738" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getMaximumSize&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getMaximumSize&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="8a8ed496428e5858dd0862bec5b28b21df787026" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getMinimumDividerLocation&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getMinimumDividerLocation&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="00da84be466aee6b1e9b8ac6c6384d5966cb36e0" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getMinimumSize&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getMinimumSize&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="57a70f693e36dfb39da15a9419b038c4c970adaf" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getNextVisualPositionFrom&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getNextVisualPositionFrom&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="345d9487a3b7ca2eac823f01973c0ddcab173a72" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getPathBounds&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getPathBounds&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="a9a66c89e87c64ec00e850816bdd99a18eb72da5" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getPathForRow&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getPathForRow&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="ab247686b2a749e57001f55dfe05d843278a142a" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getPopup&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getPopup&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="bfae178be0e6f0a8427f0976f29a0e07a0eb29df" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getPreferredSize&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getPreferredSize&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="bbbfed5e713139ae765a6e862ced4ec3803b74b7" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getRootView&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getRootView&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="1f39d800b158b149c6e6d7ee28ff876281d8b66e" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getRowCount&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getRowCount&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="59beb486d894e6c65aca92179a100cdc4b7b595d" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getRowForPath&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getRowForPath&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="7e1f2a09d448494bd99f331fccac1e8007378b8a" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getTabBounds&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getTabBounds&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="7e740397c8bc735747d27f7506d1502c4aeb84b3" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getTabRunCount&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getTabRunCount&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="87de260498ea407f5c561ad402840ceffd40304e" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getToolTipText&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getToolTipText&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="43faef7d2b006dff0a6cdaea9e0d1ce0c84b5c7e" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;indexToLocation&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;indexToLocation&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="5ea50c696506791dcf4fc98f1aa79c08284fcb3b" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;installUI&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;installUI&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="49cfbf53ffe6e2d5a77d990b6235dfaf6b50321e" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;isEditing&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;isEditing&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="8248c1852826637de8963b177bdf2bf08b96d8cb" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;isFocusTraversable&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;isFocusTraversable&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="650bae36cf075410f787392c0a40f7b131ef251c" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;isPopupTrigger&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;isPopupTrigger&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="4e966e9068a425bcca30826f7fcd9ec1aafe2021" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;isPopupVisible&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;isPopupVisible&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="9e54af8fe9fc198127e40d983023fffa125c308d" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;locationToIndex&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;locationToIndex&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="7f0693883832f192dec5070d9d6b2733a816a412" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;modelToView&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;modelToView&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="21dd02b4ccccd126dc08d49aad7ffe59dc366f00" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;namingExceptionThrown()&lt;/code&gt; method on a listener using this event.</source>
          <target state="translated">이 이벤트를 사용하여 리스너 에서 &lt;code&gt;namingExceptionThrown()&lt;/code&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="d90208e3488a9b53f2ba9bf2c6ffbe196bf6e50f" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;notificationReceived()&lt;/code&gt; method on a listener using this event.</source>
          <target state="translated">이 이벤트를 사용하여 리스너 에서 &lt;code&gt;notificationReceived()&lt;/code&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="500353d9af81797e3c6dff2724e0cad162d384e6" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;paint&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;paint&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="e4664293e5799fba8516052a1973c7ffaec6fa3a" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;rescanCurrentDirectory&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;rescanCurrentDirectory&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="05787b8866a832720d38d8ae9c473e3522fec29d" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;resetToPreferredSizes&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;resetToPreferredSizes&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="c899eb5076de5bb1cdc3eafef53a4e67e07b69be" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;selectInitialValue&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;selectInitialValue&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="559f0df8dfc3116febfb12d9a1403cf388182d8a" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;setDividerLocation&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;setDividerLocation&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="404bf980d97f4fdf6aa014993a2a9bc77c53042c" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;setPopupVisible&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;setPopupVisible&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="1f45c540a4aa0aa3ca0d0633f95bc7a5b670d5d6" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;startEditingAtPath&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;startEditingAtPath&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="2ff3802d506bd2c64ab51b5990e117b4e1422e36" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;stopEditing&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;stopEditing&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="885763f6ac74dd170c6454b97dc0515a53b6572c" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;tabForCoordinate&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;tabForCoordinate&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="63a1cfa2856c9f46f71763b6ea015fac8599cb84" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;uninstallUI&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;uninstallUI&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="89e9443022e603a39ebd19d4b33325f11fc1dbf3" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;update&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;update&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="3e7dc2682a4d71016e083e37f3ad1351573fb6f0" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;viewToModel&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;viewToModel&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="e15c01a56a603b7cad76b4cb66171dc8ad27cfd3" translate="yes" xml:space="preserve">
          <source>Invokes the appropriate listener method on this event.</source>
          <target state="translated">Invokes the appropriate listener method on this event.</target>
        </trans-unit>
        <trans-unit id="48899f635f04672d34a9880d3ed183584017d7d0" translate="yes" xml:space="preserve">
          <source>Invokes the appropriate listener method on this event. The default implementation of this method handles the following event types: &lt;code&gt;OBJECT_ADDED, OBJECT_REMOVED,
 OBJECT_RENAMED, OBJECT_CHANGED&lt;/code&gt;.</source>
          <target state="translated">Invokes the appropriate listener method on this event. The default implementation of this method handles the following event types: &lt;code&gt;OBJECT_ADDED, OBJECT_REMOVED, OBJECT_RENAMED, OBJECT_CHANGED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b7bc2e58940e57ca968f35f863f5b14b93f5b92" translate="yes" xml:space="preserve">
          <source>Invokes the appropriate listener method on this event. The default implementation of this method handles the following event types: &lt;code&gt;OBJECT_ADDED&lt;/code&gt;, &lt;code&gt;OBJECT_REMOVED&lt;/code&gt;, &lt;code&gt;OBJECT_RENAMED&lt;/code&gt;, &lt;code&gt;OBJECT_CHANGED&lt;/code&gt;.</source>
          <target state="translated">이 이벤트에 적절한 청취자 메소드를 호출합니다. 이 메소드의 기본 구현은 &lt;code&gt;OBJECT_ADDED&lt;/code&gt; , &lt;code&gt;OBJECT_REMOVED&lt;/code&gt; , &lt;code&gt;OBJECT_RENAMED&lt;/code&gt; , &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; 이벤트 유형을 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="6f94d771b7291888354e9be45f55585ba07e3759" translate="yes" xml:space="preserve">
          <source>Invokes the appropriate visit method on each of a sequence of nodes.</source>
          <target state="translated">각 노드 시퀀스에서 적절한 방문 방법을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="88913dadf036738059efa4edaae8027c507791be" translate="yes" xml:space="preserve">
          <source>Invokes the appropriate visit method specific to the type of the node.</source>
          <target state="translated">노드 유형에 맞는 적절한 방문 방법을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="489e0921dcf8b3447814a659f7d80a2cf64f0bed" translate="yes" xml:space="preserve">
          <source>Invokes the error handler with the 1st, 2nd and 3rd error message argument &quot;?&quot;.</source>
          <target state="translated">Invokes the error handler with the 1st, 2nd and 3rd error message argument &quot;?&quot;.</target>
        </trans-unit>
        <trans-unit id="425f877e9591fda3f76e4bfc9a7926bafe9af2f9" translate="yes" xml:space="preserve">
          <source>Invokes the error handler with the 2nd and 3rd error message argument &quot;?&quot;.</source>
          <target state="translated">Invokes the error handler with the 2nd and 3rd error message argument &quot;?&quot;.</target>
        </trans-unit>
        <trans-unit id="01c6d207513c9e7a5aba1acfbd3a37341e850e79" translate="yes" xml:space="preserve">
          <source>Invokes the error handler with the 3rd error message argument &quot;?&quot;.</source>
          <target state="translated">Invokes the error handler with the 3rd error message argument &quot;?&quot;.</target>
        </trans-unit>
        <trans-unit id="842f7cc83286f89f0d154518ff03b5833d8fb02e" translate="yes" xml:space="preserve">
          <source>Invokes the error handler.</source>
          <target state="translated">Invokes the error handler.</target>
        </trans-unit>
        <trans-unit id="6bda3d8a3faab4623c4dcc522b0a79a77e9aa52c" translate="yes" xml:space="preserve">
          <source>Invokes the method handle, allowing any caller type descriptor, and optionally performing conversions on arguments and return values.</source>
          <target state="translated">메소드 핸들을 호출하여 호출자 유형 설명자를 허용하고 선택적으로 인수 및 리턴 값에 대한 변환을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="711114ca809db363645dc977db537b6792dae633" translate="yes" xml:space="preserve">
          <source>Invokes the method handle, allowing any caller type descriptor, but requiring an exact type match.</source>
          <target state="translated">Invokes the method handle, allowing any caller type descriptor, but requiring an exact type match.</target>
        </trans-unit>
        <trans-unit id="ff46d961f455a4b713493378b5d8182716189c60" translate="yes" xml:space="preserve">
          <source>Invokes the method handle, allowing any caller type descriptor, but requiring an exact type match. The symbolic type descriptor at the call site of &lt;code&gt;invokeExact&lt;/code&gt; must exactly match this method handle's &lt;a href=&quot;#type()&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;. No conversions are allowed on arguments or return values.</source>
          <target state="translated">Invokes the method handle, allowing any caller type descriptor, but requiring an exact type match. The symbolic type descriptor at the call site of &lt;code&gt;invokeExact&lt;/code&gt; must exactly match this method handle's &lt;a href=&quot;#type()&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;. No conversions are allowed on arguments or return values.</target>
        </trans-unit>
        <trans-unit id="1e7d5ebd67af477ebb8458ec0f4f3e9b094e210d" translate="yes" xml:space="preserve">
          <source>Invokes the method handle, allowing any caller type descriptor, but requiring an exact type match. The symbolic type descriptor at the call site of &lt;code&gt;invokeExact&lt;/code&gt; must exactly match this method handle's &lt;a href=&quot;methodhandle#type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;. No conversions are allowed on arguments or return values.</source>
          <target state="translated">메소드 핸들을 호출하여 모든 호출자 유형 설명자를 허용하지만 정확한 유형 일치가 필요합니다. &lt;code&gt;invokeExact&lt;/code&gt; 호출 사이트의 기호 유형 설명자는 이 메소드 핸들의 &lt;a href=&quot;methodhandle#type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt; 과 정확히 일치해야합니다 . 인수 또는 리턴 값에 대한 변환은 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2ee4ca940501d63a621a28a8446dc6cb5fa6bd0d" translate="yes" xml:space="preserve">
          <source>Invokes the specified &lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; on this object in the target VM.</source>
          <target state="translated">대상 VM의이 개체에 대해 지정된 &lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="cec7a1d04848ecf99ff22882292278cf40bc0d90" translate="yes" xml:space="preserve">
          <source>Invokes the specified &lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; on this object in the target VM. The specified method can be defined in this object's class, in a superclass of this object's class, or in an interface implemented by this object. The method may be a static method or an instance method, but not a static initializer or constructor. Use &lt;a href=&quot;classtype#newInstance(com.sun.jdi.ThreadReference,com.sun.jdi.Method,java.util.List,int)&quot;&gt;&lt;code&gt;ClassType.newInstance(com.sun.jdi.ThreadReference, com.sun.jdi.Method, java.util.List&amp;lt;? extends com.sun.jdi.Value&amp;gt;, int)&lt;/code&gt;&lt;/a&gt; to create a new object and run its constructor.</source>
          <target state="translated">대상 VM의이 개체에 대해 지정된 &lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 지정된 메소드는이 객체의 클래스,이 객체의 클래스의 수퍼 클래스 또는이 객체에 의해 구현 된 인터페이스에서 정의 될 수 있습니다. 메서드는 정적 메서드 또는 인스턴스 메서드 일 수 있지만 정적 이니셜 라이저 또는 생성자는 아닙니다. 사용 &lt;a href=&quot;classtype#newInstance(com.sun.jdi.ThreadReference,com.sun.jdi.Method,java.util.List,int)&quot;&gt; &lt;code&gt;ClassType.newInstance(com.sun.jdi.ThreadReference, com.sun.jdi.Method, java.util.List&amp;lt;? extends com.sun.jdi.Value&amp;gt;, int)&lt;/code&gt; &lt;/a&gt; 새로운 객체를 생성하고 생성자를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="6e4a4120cb8519390889a944c461a738a1c8a359" translate="yes" xml:space="preserve">
          <source>Invokes the specified static &lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; in the target VM.</source>
          <target state="translated">대상 VM에서 지정된 정적 &lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="7ae814297f26a66692dafea7d13461f6f945a469" translate="yes" xml:space="preserve">
          <source>Invokes the specified static &lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; in the target VM. The specified method can be defined in this class, or in a superclass. The method must be a static method but not a static initializer. Use &lt;a href=&quot;#newInstance(com.sun.jdi.ThreadReference,com.sun.jdi.Method,java.util.List,int)&quot;&gt;&lt;code&gt;newInstance(com.sun.jdi.ThreadReference, com.sun.jdi.Method, java.util.List&amp;lt;? extends com.sun.jdi.Value&amp;gt;, int)&lt;/code&gt;&lt;/a&gt; to create a new object and run its constructor.</source>
          <target state="translated">대상 VM에서 지정된 정적 &lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 지정된 메소드는이 클래스 또는 수퍼 클래스에서 정의 할 수 있습니다. 메서드는 정적 메서드 여야하지만 정적 이니셜 라이저가 아니어야합니다. 사용 &lt;a href=&quot;#newInstance(com.sun.jdi.ThreadReference,com.sun.jdi.Method,java.util.List,int)&quot;&gt; &lt;code&gt;newInstance(com.sun.jdi.ThreadReference, com.sun.jdi.Method, java.util.List&amp;lt;? extends com.sun.jdi.Value&amp;gt;, int)&lt;/code&gt; &lt;/a&gt; 새로운 객체를 생성하고 생성자를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="96389c04eeee94cc299843d67b544235f94d94e1" translate="yes" xml:space="preserve">
          <source>Invokes the specified static &lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; in the target VM. The specified method must be defined in this interface. The method must be a static method but not a static initializer.</source>
          <target state="translated">대상 VM에서 지정된 정적 &lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 지정된 메소드는이 인터페이스에서 정의되어야합니다. 메서드는 정적 메서드 여야하지만 정적 이니셜 라이저가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="3ff538d816745eea6f536fc913c9cb9285178c87" translate="yes" xml:space="preserve">
          <source>Invokes the underlying method represented by this &lt;code&gt;Method&lt;/code&gt; object, on the specified object with the specified parameters.</source>
          <target state="translated">Invokes the underlying method represented by this &lt;code&gt;Method&lt;/code&gt; object, on the specified object with the specified parameters.</target>
        </trans-unit>
        <trans-unit id="4d7b23e0603426cc3b724cc8686412fb89b633d3" translate="yes" xml:space="preserve">
          <source>Invokes the underlying method represented by this &lt;code&gt;Method&lt;/code&gt; object, on the specified object with the specified parameters. Individual parameters are automatically unwrapped to match primitive formal parameters, and both primitive and reference parameters are subject to method invocation conversions as necessary.</source>
          <target state="translated">지정된 매개 변수를 사용하여 지정된 오브젝트 에서이 &lt;code&gt;Method&lt;/code&gt; 오브젝트로 표시되는 기본 메소드를 호출합니다 . 개별 매개 변수는 기본 형식 매개 변수와 일치하도록 자동으로 랩핑 해제되며 기본 및 참조 매개 변수 모두 필요에 따라 메소드 호출 변환에 종속됩니다.</target>
        </trans-unit>
        <trans-unit id="faa99120206634484776f386f0fcacdea06f734f" translate="yes" xml:space="preserve">
          <source>Invokes when &lt;code&gt;ListSelectionEvent&lt;/code&gt; occurs.</source>
          <target state="translated">Invokes when &lt;code&gt;ListSelectionEvent&lt;/code&gt; occurs.</target>
        </trans-unit>
        <trans-unit id="d73e1ea2d26314dbc3a069b6269b90c27eb04a0c" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;close()&lt;/code&gt; on the objects returned by the &lt;a href=&quot;#reader()&quot;&gt;&lt;code&gt;reader()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;#writer()&quot;&gt;&lt;code&gt;writer()&lt;/code&gt;&lt;/a&gt; will not close the underlying stream of those objects.</source>
          <target state="translated">Invoking &lt;code&gt;close()&lt;/code&gt; on the objects returned by the &lt;a href=&quot;#reader()&quot;&gt; &lt;code&gt;reader()&lt;/code&gt; &lt;/a&gt; and the &lt;a href=&quot;#writer()&quot;&gt; &lt;code&gt;writer()&lt;/code&gt; &lt;/a&gt; will not close the underlying stream of those objects.</target>
        </trans-unit>
        <trans-unit id="4c34e41fc0be83115bb57bddc63e38155525f942" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;close()&lt;/code&gt; on the objects returned by the &lt;a href=&quot;console#reader--&quot;&gt;&lt;code&gt;reader()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;console#writer--&quot;&gt;&lt;code&gt;writer()&lt;/code&gt;&lt;/a&gt; will not close the underlying stream of those objects.</source>
          <target state="translated">&lt;a href=&quot;console#reader--&quot;&gt; &lt;code&gt;reader()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;console#writer--&quot;&gt; &lt;code&gt;writer()&lt;/code&gt; &lt;/a&gt; 가 반환 한 객체에 대해 &lt;code&gt;close()&lt;/code&gt; 를 호출하면 해당 객체의 기본 스트림이 닫히지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2e5a753650b36e9303f13753477aa94c723a9e7d" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;insertAfterEnd(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; results in the following structure (new elements are in blue).</source>
          <target state="translated">Invoking &lt;code&gt;insertAfterEnd(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; results in the following structure (new elements are in blue).</target>
        </trans-unit>
        <trans-unit id="e40cfa38bd1a98a389d0888a2b7988c5b2a765d8" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;insertAfterStart(elem,
 &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; results in the following structure (new elements are in blue).</source>
          <target state="translated">Invoking &lt;code&gt;insertAfterStart(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; results in the following structure (new elements are in blue).</target>
        </trans-unit>
        <trans-unit id="59cd0870a28d296831604b2cbce0d2a186be23c6" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;insertBeforeEnd(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; results in the following structure (new elements are in blue).</source>
          <target state="translated">Invoking &lt;code&gt;insertBeforeEnd(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; results in the following structure (new elements are in blue).</target>
        </trans-unit>
        <trans-unit id="1e4ab18fdb9e60e80aa1fbf305f39f073ae7e73c" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;insertBeforeStart(elem,
 &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; results in the following structure (new elements are in blue).</source>
          <target state="translated">&lt;code&gt;insertBeforeStart(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; 호출하면 다음 구조가 생성됩니다 (새 요소는 파란색 임).</target>
        </trans-unit>
        <trans-unit id="f039a013fc5175b734608b3f78a070bc72e4c105" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;redo&lt;/code&gt; results in invoking &lt;code&gt;redo&lt;/code&gt; on all edits between the index of the next edit and the next significant edit (or the end of the list). Continuing with the previous example if &lt;code&gt;redo&lt;/code&gt; were invoked, &lt;code&gt;redo&lt;/code&gt; would in turn be invoked on &lt;b&gt;A&lt;/b&gt;,</source>
          <target state="translated">호출 &lt;code&gt;redo&lt;/code&gt; 호출의 결과를 &lt;code&gt;redo&lt;/code&gt; 다음의 편집 결과의 인덱스와 다음의 편집 (또는 목록의 끝) 사이의 모든 편집에. 경우 앞의 예를 계속 &lt;code&gt;redo&lt;/code&gt; , 호출 된 &lt;code&gt;redo&lt;/code&gt; 차례로 호출 할 것이다 ,&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="8de67dd468e9dc7d5c59ac2e912a9e6ed39dcd62" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;setInnerHTML(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; results in the following structure (new elements are in blue).</source>
          <target state="translated">&lt;code&gt;setInnerHTML(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; 호출하면 다음 구조가 생성됩니다 (새 요소는 파란색으로 표시됨).</target>
        </trans-unit>
        <trans-unit id="ea34f5ec3e381c2fd32835186a9bf54602447dba" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;setOuterHTML(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; results in the following structure (new elements are in blue).</source>
          <target state="translated">&lt;code&gt;setOuterHTML(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; 호출하면 다음 구조가 생성됩니다 (새 요소는 파란색으로 표시됨).</target>
        </trans-unit>
        <trans-unit id="21a3b7095e4ca3274426ac27feeecfd9e0f9f9af" translate="yes" xml:space="preserve">
          <source>Invoking Object's clone method on an instance that does not implement the &lt;code&gt;Cloneable&lt;/code&gt; interface results in the exception &lt;code&gt;CloneNotSupportedException&lt;/code&gt; being thrown.</source>
          <target state="translated">&lt;code&gt;Cloneable&lt;/code&gt; 인터페이스를 구현하지 않는 인스턴스에서 Object의 clone 메소드를 호출하면 &lt;code&gt;CloneNotSupportedException&lt;/code&gt; 예외 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c603283845f81ebac0a119f22c2cb908d052b7e1" translate="yes" xml:space="preserve">
          <source>Invoking any of the various &lt;code&gt;get&lt;/code&gt; methods results in checking each of the defaults, in order, returning the first &lt;code&gt;non-null&lt;/code&gt; value. For example, invoking &lt;code&gt;UIManager.getString(&quot;Table.foreground&quot;)&lt;/code&gt; results in first checking developer defaults. If the developer defaults contain a value for &lt;code&gt;&quot;Table.foreground&quot;&lt;/code&gt; it is returned, otherwise the look and feel defaults are checked, followed by the system defaults.</source>
          <target state="translated">다양한 &lt;code&gt;get&lt;/code&gt; 메소드를 호출하면 각각의 기본값을 순서대로 확인하여 &lt;code&gt;non-null&lt;/code&gt; 첫 번째 값을 리턴 합니다. 예를 들어, &lt;code&gt;UIManager.getString(&quot;Table.foreground&quot;)&lt;/code&gt; 호출 하면 먼저 개발자 기본값을 확인합니다. 개발자 기본값에 &lt;code&gt;&quot;Table.foreground&quot;&lt;/code&gt; 값이 포함되어 있으면 반환되고, 그렇지 않으면 룩앤필 기본값이 확인되고 시스템 기본값이 뒤 따릅니다.</target>
        </trans-unit>
        <trans-unit id="4cbbb8318235aaada24f3c863ea5064f26658e29" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will set the scanner's delimiter to the &lt;a href=&quot;#default-delimiter&quot;&gt;default&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메서드를 호출하면 스캐너의 구분 기호가&lt;a href=&quot;#default-delimiter&quot;&gt; 기본값으로 설정&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="a3e72ef007c6c2373a01470f820b90877f392879" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will set the scanner's locale to the &lt;a href=&quot;#initial-locale&quot;&gt;initial locale&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메서드를 호출하면 스캐너의 로케일이&lt;a href=&quot;#initial-locale&quot;&gt; 초기 로케일로 설정됩니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="847e98b7fe0b19b2c2818be73430c806bfde642e" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will set the scanner's radix to &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메서드를 호출하면 스캐너의 기수가 &lt;code&gt;10&lt;/code&gt; 으로 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="176148e615ac10b5af921b52fb68bd925c6f039e" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will set the scanner's delimiter to the &lt;a href=&quot;#default-delimiter&quot;&gt;default&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하면 스캐너 구분 기호가 &lt;a href=&quot;#default-delimiter&quot;&gt;기본값으로 설정&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="e83ee19898c75b9b39ed667f972adef8d2826b10" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will set the scanner's locale to the &lt;a href=&quot;#initial-locale&quot;&gt;initial locale&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하면 스캐너의 로케일이 &lt;a href=&quot;#initial-locale&quot;&gt;초기 로케일로 설정됩니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f353057eb5ea44e28d0e42cdcfc1e96de34e9d1c" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will set the scanner's radix to &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하면 스캐너의 기수가 &lt;code&gt;10&lt;/code&gt; 으로 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="bf442f0811d9a0a5698e1044660e07476439f46a" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;code&gt;close()&lt;/code&gt; methods on the &lt;code&gt;InputStream&lt;/code&gt; or &lt;code&gt;OutputStream&lt;/code&gt; of an &lt;code&gt;URLConnection&lt;/code&gt; after a request may free network resources associated with this instance, unless particular protocol specifications specify different behaviours for it.</source>
          <target state="translated">호출 &lt;code&gt;close()&lt;/code&gt; 온 방법 &lt;code&gt;InputStream&lt;/code&gt; 또는 &lt;code&gt;OutputStream&lt;/code&gt; 에 의 &lt;code&gt;URLConnection&lt;/code&gt; 의를 특정 프로토콜 사양이 서로 다른 동작을 지정하지 않는 한 요청시 이후,이 인스턴스와 연관된 네트워크 자원을 확보 할 수있다.</target>
        </trans-unit>
        <trans-unit id="b292ef41a0388e5665d6b910ef98e41e653e6a58" translate="yes" xml:space="preserve">
          <source>Invoking the method &lt;a href=&quot;../../../../java.base/java/lang/throwable#initCause(java.lang.Throwable)&quot;&gt;&lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt;&lt;/a&gt; on an instance of &lt;code&gt;ActivationException&lt;/code&gt; always throws &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ActivationException&lt;/code&gt; 인스턴스에서 &lt;a href=&quot;../../../../java.base/java/lang/throwable#initCause(java.lang.Throwable)&quot;&gt; &lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt; &lt;/a&gt; 메서드를 호출하면 항상 &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; 이 발생합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="39fe84f568f58ddd62c74cb413a8740b8e3465ee" translate="yes" xml:space="preserve">
          <source>Invoking the method &lt;a href=&quot;../../../../java.base/java/lang/throwable#initCause(java.lang.Throwable)&quot;&gt;&lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt;&lt;/a&gt; on an instance of &lt;code&gt;ServerCloneException&lt;/code&gt; always throws &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ServerCloneException&lt;/code&gt; 인스턴스에서 &lt;a href=&quot;../../../../java.base/java/lang/throwable#initCause(java.lang.Throwable)&quot;&gt; &lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt; &lt;/a&gt; 메서드를 호출하면 항상 &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; 이 발생합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f55ab059e4878ff42c8411b78a978e51e02f6fa0" translate="yes" xml:space="preserve">
          <source>Invoking the method &lt;a href=&quot;../../../java.base/java/lang/throwable#initCause(java.lang.Throwable)&quot;&gt;&lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt;&lt;/a&gt; on an instance of &lt;code&gt;RemoteException&lt;/code&gt; always throws &lt;a href=&quot;../../../java.base/java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;RemoteException&lt;/code&gt; 인스턴스에서 &lt;a href=&quot;../../../java.base/java/lang/throwable#initCause(java.lang.Throwable)&quot;&gt; &lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt; &lt;/a&gt; 메서드를 호출하면 항상 &lt;a href=&quot;../../../java.base/java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; 이 발생합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6655fdeff84b9f5970cb0e8cf1a61885f9c334f6" translate="yes" xml:space="preserve">
          <source>Invoking this constructor with the parameter &lt;code&gt;name&lt;/code&gt; is equivalent to invoking &lt;a href=&quot;#%3Cinit%3E(java.lang.String,boolean)&quot;&gt;&lt;code&gt;new FileOutputStream(name, false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">매개 변수 &lt;code&gt;name&lt;/code&gt; 으로이 생성자 를 호출하는 것은 &lt;a href=&quot;#%3Cinit%3E(java.lang.String,boolean)&quot;&gt; &lt;code&gt;new FileOutputStream(name, false)&lt;/code&gt; &lt;/a&gt; 을 호출하는 것과 같습니다. .</target>
        </trans-unit>
        <trans-unit id="67f7c790b25cb74ef14fc0612ab2e52342dd4b91" translate="yes" xml:space="preserve">
          <source>Invoking this method after this socket has been bound will have no effect. This implies that in order to use this capability requires the socket to be created with the no-argument constructor.</source>
          <target state="translated">이 소켓이 바인드 된 후에이 메소드를 호출해도 효과가 없습니다. 즉,이 기능을 사용하려면 인수가없는 생성자로 소켓을 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="70f89a3656d80a45039acbd892abc38739960738" translate="yes" xml:space="preserve">
          <source>Invoking this method after this socket has been connected will have no effect.</source>
          <target state="translated">이 소켓을 연결 한 후이 메소드를 호출해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a37aab96f9be084753a54c67c1416610219afbc9" translate="yes" xml:space="preserve">
          <source>Invoking this method arranges for the selector's &lt;a href=&quot;../selector#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method to be invoked if a thread's &lt;a href=&quot;../../../lang/thread#interrupt()&quot;&gt;&lt;code&gt;interrupt&lt;/code&gt;&lt;/a&gt; method is invoked while the thread is blocked in an I/O operation upon the selector.</source>
          <target state="translated">이 메소드를 호출하면 선택기의 I / O 작업에서 스레드가 차단되는 동안 스레드의 &lt;a href=&quot;../../../lang/thread#interrupt()&quot;&gt; &lt;code&gt;interrupt&lt;/code&gt; &lt;/a&gt; 메소드가 호출 되는 경우 선택기의 &lt;a href=&quot;../selector#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 메소드 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="96e940ed10297b6989c1d5dbbd7a396d43879747" translate="yes" xml:space="preserve">
          <source>Invoking this method arranges for the selector's &lt;a href=&quot;../selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method to be invoked if a thread's &lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt;&lt;code&gt;interrupt&lt;/code&gt;&lt;/a&gt; method is invoked while the thread is blocked in an I/O operation upon the selector.</source>
          <target state="translated">이 메소드를 호출하면 스레드가 선택기의 I / O 조작에서 차단되는 동안 스레드의 &lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt; &lt;code&gt;interrupt&lt;/code&gt; &lt;/a&gt; 메소드가 호출 된 경우 선택기의 &lt;a href=&quot;../selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 메소드 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="60ef943bfdba594f6124f0a8c2b3e46af272e840" translate="yes" xml:space="preserve">
          <source>Invoking this method changes this matcher's state. If the matcher is to be used in further matching operations then it should first be reset.</source>
          <target state="translated">이 메소드를 호출하면이 매처의 상태가 변경됩니다. 추가 매칭 작업에서 매처를 사용하려면 먼저 재설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="5df9370c2b8faa0c6dd10831d538a4c0285db00b" translate="yes" xml:space="preserve">
          <source>Invoking this method clears the effect of any previous invocations of the &lt;a href=&quot;#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드를 호출하면 &lt;a href=&quot;#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 메서드 의 이전 호출 효과가 지워 집니다.</target>
        </trans-unit>
        <trans-unit id="9e4fdb942c3da8583fefd7967b13d3dfeb5172da" translate="yes" xml:space="preserve">
          <source>Invoking this method clears the effect of any previous invocations of the &lt;a href=&quot;selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드를 호출하면 &lt;a href=&quot;selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt; 메소드 의 이전 호출 효과가 지워 집니다.</target>
        </trans-unit>
        <trans-unit id="e126408892a2990e7ca8597c02d37d62ecd31cd7" translate="yes" xml:space="preserve">
          <source>Invoking this method may cause an I/O operation to occur even if the channel was only opened for reading. Some operating systems, for example, maintain a last-access time as part of a file's metadata, and this time is updated whenever the file is read. Whether or not this is actually done is system-dependent and is therefore unspecified.</source>
          <target state="translated">이 메소드를 호출하면 채널이 읽기 전용으로 열린 경우에도 I / O 조작이 발생할 수 있습니다. 예를 들어 일부 운영 체제는 파일 메타 데이터의 일부로 마지막 액세스 시간을 유지하며이 시간은 파일을 읽을 때마다 업데이트됩니다. 이것이 실제로 수행되는지 여부는 시스템에 따라 다르므로 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c889f16f03607a3e9b3dc67012a12c2bc7299590" translate="yes" xml:space="preserve">
          <source>Invoking this method may change this entry's last modification time, last access time and creation time, if the &lt;code&gt;extra&lt;/code&gt; field data includes the extensible timestamp fields, such as &lt;code&gt;NTFS tag
 0x0001&lt;/code&gt; or &lt;code&gt;Info-ZIP Extended Timestamp&lt;/code&gt;, as specified in &lt;a href=&quot;http://www.info-zip.org/doc/appnote-19970311-iz.zip&quot;&gt;Info-ZIP Application Note 970311&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.info-zip.org/doc/appnote-19970311-iz.zip&quot;&gt;Info-ZIP Application Note 970311에&lt;/a&gt; 지정된대로 &lt;code&gt;extra&lt;/code&gt; 필드 데이터에 &lt;code&gt;NTFS tag 0x0001&lt;/code&gt; 또는 &lt;code&gt;Info-ZIP Extended Timestamp&lt;/code&gt; 와 같은 확장 가능한 타임 스탬프 필드가 포함 된 경우이 방법을 호출하면이 항목의 마지막 수정 시간, 마지막 액세스 시간 및 작성 시간이 변경 될 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="79484cf70e299ec1b53ddd211e9a4f5ae75edb97" translate="yes" xml:space="preserve">
          <source>Invoking this method more than once between two successive selection operations has the same effect as invoking it just once.</source>
          <target state="translated">두 개의 연속 선택 조작간에이 메소드를 두 번 이상 호출하면 한 번만 호출하는 것과 동일한 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c1484a536bd30ef88c950eccc5a6e3769638937" translate="yes" xml:space="preserve">
          <source>Invoking this method neither changes nor discards the mark's value.</source>
          <target state="translated">이 메소드를 호출하면 마크 값이 변경되거나 삭제되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4bb533ace18a097bcb2344aaca8af29dc2afd2cf" translate="yes" xml:space="preserve">
          <source>Invoking this method on &lt;code&gt;Process&lt;/code&gt; objects returned by &lt;a href=&quot;processbuilder#start()&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec(java.lang.String)&quot;&gt;&lt;code&gt;Runtime.exec(java.lang.String)&lt;/code&gt;&lt;/a&gt; forcibly terminate the process.</source>
          <target state="translated">&lt;a href=&quot;processbuilder#start()&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;runtime#exec(java.lang.String)&quot;&gt; &lt;code&gt;Runtime.exec(java.lang.String)&lt;/code&gt; &lt;/a&gt; 의해 반환 된 &lt;code&gt;Process&lt;/code&gt; 객체 에서이 메서드를 호출하면 프로세스가 강제로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="330559a2b3dc271bc1f44445e53e9d420b441e4c" translate="yes" xml:space="preserve">
          <source>Invoking this method on &lt;code&gt;Process&lt;/code&gt; objects returned by &lt;a href=&quot;processbuilder#start()&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec(java.lang.String)&quot;&gt;&lt;code&gt;Runtime.exec(java.lang.String)&lt;/code&gt;&lt;/a&gt; return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; depending on the platform implementation.</source>
          <target state="translated">이 메서드 호출 &lt;code&gt;Process&lt;/code&gt; 에 의해 반환 된 객체 &lt;a href=&quot;processbuilder#start()&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;runtime#exec(java.lang.String)&quot;&gt; &lt;code&gt;Runtime.exec(java.lang.String)&lt;/code&gt; &lt;/a&gt; 반환 &lt;code&gt;true&lt;/code&gt; 이나 &lt;code&gt;false&lt;/code&gt; 플랫폼 구현에 따라 false가 됩니다.</target>
        </trans-unit>
        <trans-unit id="ddcf2c0e1ac0450bdc9bb0de3a23c0d438efe3a6" translate="yes" xml:space="preserve">
          <source>Invoking this method on a line that is already open is illegal and may result in an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">이미 열려있는 라인에서이 메소드를 호출하는 것은 불법이며 &lt;code&gt;IllegalStateException&lt;/code&gt; 이 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="623ac6a95052eca58d10e302db9e34b04b58d481" translate="yes" xml:space="preserve">
          <source>Invoking this method on a line which is already open is illegal and may result in an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">이미 열려있는 라인에서이 메소드를 호출하는 것은 불법이며 &lt;code&gt;IllegalStateException&lt;/code&gt; 이 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f47421cee3aea3093bcb9f93120fae696cb90f76" translate="yes" xml:space="preserve">
          <source>Invoking this method on a line which is already open is illegal and may result in an IllegalStateException.</source>
          <target state="translated">이미 열려있는 라인에서이 메소드를 호출하는 것은 불법이며 IllegalStateException이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6572592d9b51a49f1b7945842d9966fc11bccd7a" translate="yes" xml:space="preserve">
          <source>Invoking this method to test if the file store supports &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; will always return &lt;code&gt;true&lt;/code&gt;. In the case of the default provider, this method cannot guarantee to give the correct result when the file store is not a local storage device. The reasons for this are implementation specific and therefore unspecified.</source>
          <target state="translated">파일 저장소가 &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt; 를 지원하는지 테스트하기 위해이 메소드를 호출하면 항상 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 기본 공급자의 경우이 방법은 파일 저장소가 로컬 저장 장치가 아닌 경우 올바른 결과를 제공 할 수 없습니다. 그 이유는 구현에 따라 다르므로 지정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="be38157464f24b4aaf95961d44066380cff33fe7" translate="yes" xml:space="preserve">
          <source>Invoking this method to test if the file store supports &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;, identified by the name &quot;&lt;code&gt;basic&lt;/code&gt;&quot; will always return &lt;code&gt;true&lt;/code&gt;. In the case of the default provider, this method cannot guarantee to give the correct result when the file store is not a local storage device. The reasons for this are implementation specific and therefore unspecified.</source>
          <target state="translated">파일 저장소가 &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; 를&lt;/a&gt; 지원하는지 여부를 테스트하기 위해이 메소드를 호출하면 &quot; &lt;code&gt;basic&lt;/code&gt; &quot; 이라는 이름으로 식별되어 항상 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 기본 공급자의 경우이 방법은 파일 저장소가 로컬 저장 장치가 아닌 경우 올바른 결과를 제공 할 수 없습니다. 그 이유는 구현에 따라 다르므로 지정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="7991a39ba06e040615b9d144f846519987e2aaf1" translate="yes" xml:space="preserve">
          <source>Invoking this method while another thread is blocked in &lt;a href=&quot;#accept(com.sun.jdi.connect.spi.TransportService.ListenKey,long,long)&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt;, with the same listen key, waiting to accept a connection will cause that thread to throw an IOException. If the thread blocked in accept has already accepted a connection from a target VM and is in the process of handshaking with the target VM then invoking this method will not cause the thread to throw an exception.</source>
          <target state="translated">다른 스레드가 &lt;a href=&quot;#accept(com.sun.jdi.connect.spi.TransportService.ListenKey,long,long)&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt; 에서 차단 된 상태에서 동일한 수신 키를 사용 하여이 메서드를 호출 하고 연결을 수락하기 위해 대기하면 해당 스레드에서 IOException이 발생합니다. accept에서 차단 된 스레드가 이미 대상 VM에서 연결을 수락하고 대상 VM과 핸드 셰이 킹을 진행중인 경우이 메서드를 호출해도 스레드에서 예외가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fc5558a9d34cc56f9d2a7db2a0cdebd56a8e60d2" translate="yes" xml:space="preserve">
          <source>Invoking this method will result in the creation of the returned node and its ancestors if they do not already exist. If the returned node did not exist prior to this call, this node and any ancestors that were created by this call are not guaranteed to become permanent until the &lt;code&gt;flush&lt;/code&gt; method is called on the returned node (or one of its ancestors or descendants).</source>
          <target state="translated">이 메소드를 호출하면 리턴 된 노드 및 해당 상위 노드가없는 경우 작성됩니다. 이 호출 이전에 리턴 된 노드가 존재하지 않으면이 노드와이 호출로 작성된 상위 노드는 리턴 된 노드 (또는 상위 또는 하위 항목 중 하나) 에서 &lt;code&gt;flush&lt;/code&gt; 메소드가 호출 될 때까지 영구적으로 보장되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="be608336e42c8195cf6de1491f4e3751f3501826" translate="yes" xml:space="preserve">
          <source>Invoking this method with an argument of &lt;code&gt;true&lt;/code&gt; will set this matcher to use</source>
          <target state="translated">이 메소드를 &lt;code&gt;true&lt;/code&gt; 의 인수로 호출하면 (자),이 정규 표현 엔진이 사용됩니다</target>
        </trans-unit>
        <trans-unit id="30e1cfdc22665446f2b3a40c52c5692d02bfa595" translate="yes" xml:space="preserve">
          <source>Is a little widget provided to quickly expand/collapse the split pane?</source>
          <target state="translated">분할 창을 빠르게 확장 / 축소 할 수있는 작은 위젯이 제공됩니까?</target>
        </trans-unit>
        <trans-unit id="7672141a63f0b2919df6653cf1a0ed5b3f2d9705" translate="yes" xml:space="preserve">
          <source>Is alpha premultiplied.</source>
          <target state="translated">알파가 미리 곱해집니다.</target>
        </trans-unit>
        <trans-unit id="aa0374626f0e5de0170dcedfeac27f377b6dcb80" translate="yes" xml:space="preserve">
          <source>Is called by Swing if this &lt;code&gt;InputVerifier&lt;/code&gt; is assigned to the &lt;code&gt;source&lt;/code&gt; Swing component to check whether the requested focus transfer from the &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;target&lt;/code&gt; is allowed.</source>
          <target state="translated">이 &lt;code&gt;InputVerifier&lt;/code&gt; 가 &lt;code&gt;source&lt;/code&gt; Swing 구성 요소에 할당되어 &lt;code&gt;source&lt;/code&gt; 에서 &lt;code&gt;target&lt;/code&gt; 요청 된 포커스 전송 이 허용 되는지 확인 하기 위해 Swing에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="4365b27f925cbc4348f6d4b867127142f68c982d" translate="yes" xml:space="preserve">
          <source>Is called by Swing if this &lt;code&gt;InputVerifier&lt;/code&gt; is assigned to the &lt;code&gt;source&lt;/code&gt; Swing component to check whether the requested focus transfer from the &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;target&lt;/code&gt; is allowed. This method can have side effects. If this method returns &lt;code&gt;true&lt;/code&gt;, then the focus is transferred normally; if it returns &lt;code&gt;false&lt;/code&gt;, then the focus remains in the first argument component.</source>
          <target state="translated">이 &lt;code&gt;InputVerifier&lt;/code&gt; 가 &lt;code&gt;source&lt;/code&gt; Swing 구성 요소에 할당되어 &lt;code&gt;source&lt;/code&gt; 에서 &lt;code&gt;target&lt;/code&gt; 요청 된 포커스 전송 이 허용 되는지 확인 하기 위해 Swing에 의해 호출됩니다 . 이 방법은 부작용이있을 수 있습니다. 이 메서드가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 포커스가 정상적으로 전송됩니다. 돌아 오면 &lt;code&gt;false&lt;/code&gt; 를 하면 첫 번째 인수 구성 요소에 포커스가 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="631fe1e8013e3a0c5222ee81f39a58336c82a4e2" translate="yes" xml:space="preserve">
          <source>Is dir the root of a tree in the file system, such as a drive or partition.</source>
          <target state="translated">dir은 드라이브 또는 파티션과 같은 파일 시스템의 트리 루트입니다.</target>
        </trans-unit>
        <trans-unit id="2d0d65692e6749abde8b7f717b139df80b5ae20c" translate="yes" xml:space="preserve">
          <source>Is dir the root of a tree in the file system, such as a drive or partition. Example: Returns true for &quot;C:\&quot; on Windows 98.</source>
          <target state="translated">dir은 드라이브 또는 파티션과 같은 파일 시스템의 트리 루트입니다. 예 : Windows 98에서 &quot;C : \&quot;에 대해 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2d33108eabcf3e3bd450326d49f92d8599fa82d1" translate="yes" xml:space="preserve">
          <source>Is mirrored as</source>
          <target state="translated">다음과 같이 미러링됩니다.</target>
        </trans-unit>
        <trans-unit id="78f59401c87ef16af23c39556eb318a985c9ba0a" translate="yes" xml:space="preserve">
          <source>Is mirrored as an</source>
          <target state="translated">다음으로 미러링됩니다.</target>
        </trans-unit>
        <trans-unit id="619fa59b905ab2fa64bc6e32226931cd98841dac" translate="yes" xml:space="preserve">
          <source>Is mirrored as an instance of</source>
          <target state="translated">다음의 인스턴스로 미러링됩니다.</target>
        </trans-unit>
        <trans-unit id="dd1c8ed792827569a29df484239b2c4ef7baa479" translate="yes" xml:space="preserve">
          <source>Is specified object model supported by this &lt;code&gt;XPathFactory&lt;/code&gt;?</source>
          <target state="translated">이 &lt;code&gt;XPathFactory&lt;/code&gt; 에서 지정된 개체 모델을 지원 합니까?</target>
        </trans-unit>
        <trans-unit id="e05793b7249beae9557af2b83c59d171629f365e" translate="yes" xml:space="preserve">
          <source>Is specified schema supported by this &lt;code&gt;SchemaFactory&lt;/code&gt;?</source>
          <target state="translated">이것이 지원하는 지정된 스키마 &lt;code&gt;SchemaFactory&lt;/code&gt; 합니까?</target>
        </trans-unit>
        <trans-unit id="dc37b97b89ca9f25874a6e072d00e6e88db68b23" translate="yes" xml:space="preserve">
          <source>Is the child specified affected by the event?</source>
          <target state="translated">지정된 어린이가 이벤트의 영향을 받습니까?</target>
        </trans-unit>
        <trans-unit id="c5034b3d2657656796166350eaa649adb22640e2" translate="yes" xml:space="preserve">
          <source>Is the major span currently estimated?</source>
          <target state="translated">현재 주요 스팬이 추정됩니까?</target>
        </trans-unit>
        <trans-unit id="761f856c08dad7900714d1962f96c6a45c7bda84" translate="yes" xml:space="preserve">
          <source>Is the passed in value null? Use the null formatter.</source>
          <target state="translated">전달 된 값이 null입니까? 널 포맷터를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1e9b159e969ae39dd9ca33774458f9a77b4d9574" translate="yes" xml:space="preserve">
          <source>Is the preferredSize valid?</source>
          <target state="translated">preferredSize가 유효합니까?</target>
        </trans-unit>
        <trans-unit id="4f59230d9babef9ebcdf815dabfaceb226f44433" translate="yes" xml:space="preserve">
          <source>Is the transition local time midnight at the end of day.</source>
          <target state="translated">하루가 끝나는 자정의 현지 시간입니다.</target>
        </trans-unit>
        <trans-unit id="aba8416dce13f35dfbdb41a951cdb1039728b67f" translate="yes" xml:space="preserve">
          <source>Is the tree editable?</source>
          <target state="translated">트리를 편집 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="316dcc9e0433851aa100015a00a3bb3ce7e14922" translate="yes" xml:space="preserve">
          <source>Is the tree editable? Default is false.</source>
          <target state="translated">트리를 편집 할 수 있습니까? 기본값은 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="f484d42ed319be5b53a39a49dcae350bed50d282" translate="yes" xml:space="preserve">
          <source>Is the value currently selected.</source>
          <target state="translated">현재 선택된 값입니다.</target>
        </trans-unit>
        <trans-unit id="2d35e0411e51320986a48034bca4ec2f1ab2b8fa" translate="yes" xml:space="preserve">
          <source>Is the value range fixed and fully known.</source>
          <target state="translated">값 범위가 고정되어 있고 완전히 알려져 있습니다.</target>
        </trans-unit>
        <trans-unit id="873b7cb93ab87b1ee9b6f65bd1179164fe7c11f8" translate="yes" xml:space="preserve">
          <source>Is this &lt;code&gt;BeanContext&lt;/code&gt; in the process of being serialized?</source>
          <target state="translated">이 &lt;code&gt;BeanContext&lt;/code&gt; 가 직렬화되는 과정에 있습니까?</target>
        </trans-unit>
        <trans-unit id="2b2b02d466f728864e7e6af1e9cbb604e4565e29" translate="yes" xml:space="preserve">
          <source>Is this a padding layout (e.g. a layout created from &lt;a href=&quot;#ofPaddingBits(long)&quot;&gt;&lt;code&gt;ofPaddingBits(long)&lt;/code&gt;&lt;/a&gt;) ?</source>
          <target state="translated">패딩 레이아웃입니까 (예 : &lt;a href=&quot;#ofPaddingBits(long)&quot;&gt; &lt;code&gt;ofPaddingBits(long)&lt;/code&gt; &lt;/a&gt; 에서 생성 된 레이아웃 )?</target>
        </trans-unit>
        <trans-unit id="447a17156397545dafb3c8dc3265395b4e35e1a3" translate="yes" xml:space="preserve">
          <source>Is this a padding layout (e.g. a layout created from &lt;a href=&quot;memorylayout#ofPaddingBits(long)&quot;&gt;&lt;code&gt;MemoryLayout.ofPaddingBits(long)&lt;/code&gt;&lt;/a&gt;) ?</source>
          <target state="translated">패딩 레이아웃입니까 (예 : &lt;a href=&quot;memorylayout#ofPaddingBits(long)&quot;&gt; &lt;code&gt;MemoryLayout.ofPaddingBits(long)&lt;/code&gt; &lt;/a&gt; 에서 생성 된 레이아웃 )?</target>
        </trans-unit>
        <trans-unit id="091c70c3dac91229c59d62558fee2c76dddd7e58" translate="yes" xml:space="preserve">
          <source>Is this an interface</source>
          <target state="translated">이것은 인터페이스입니까</target>
        </trans-unit>
        <trans-unit id="7d949cd549677684aaa3a7697c9a29eb6f50ab00" translate="yes" xml:space="preserve">
          <source>Is this element a leaf element?</source>
          <target state="translated">이 요소는 리프 요소입니까?</target>
        </trans-unit>
        <trans-unit id="2825aaaaabc1af45c758b59e660ef00f4d4e9fc4" translate="yes" xml:space="preserve">
          <source>Is this element a leaf element? An element that</source>
          <target state="translated">이 요소는 리프 요소입니까? 요소</target>
        </trans-unit>
        <trans-unit id="3164515705e604b1f3cfdbca45757569834750bc" translate="yes" xml:space="preserve">
          <source>Is this group layout a &lt;em&gt;struct&lt;/em&gt;?</source>
          <target state="translated">이 그룹 레이아웃은 &lt;em&gt;구조체&lt;/em&gt; 입니까?</target>
        </trans-unit>
        <trans-unit id="1e15e0bb4ab72759b5e6c8329e82f8df5517b378" translate="yes" xml:space="preserve">
          <source>Is this group layout a &lt;em&gt;union&lt;/em&gt;?</source>
          <target state="translated">이 그룹 레이아웃이 &lt;em&gt;유니온&lt;/em&gt; 입니까?</target>
        </trans-unit>
        <trans-unit id="f16d23498ffce857469ff2ba4e6e6a1c9588740e" translate="yes" xml:space="preserve">
          <source>Is this segment alive?</source>
          <target state="translated">이 세그먼트가 살아 있습니까?</target>
        </trans-unit>
        <trans-unit id="70a199478ac38fb67f815107c81eb08f4b72961d" translate="yes" xml:space="preserve">
          <source>Is this tree a large model?</source>
          <target state="translated">이 나무는 큰 모델입니까?</target>
        </trans-unit>
        <trans-unit id="da431e75fda1c31f01942588b502f8dddd1cfbfe" translate="yes" xml:space="preserve">
          <source>Is this tree a large model? This is a code-optimization setting. A large model can be used when the cell height is the same for all nodes. The UI will then cache very little information and instead continually message the model. Without a large model the UI caches most of the information, resulting in fewer method calls to the model.</source>
          <target state="translated">이 나무는 큰 모델입니까? 이것은 코드 최적화 설정입니다. 모든 노드에 대해 셀 높이가 동일 할 때 대형 모델을 사용할 수 있습니다. 그런 다음 UI는 아주 적은 정보를 캐시하고 대신 계속해서 모델에 메시지를 보냅니다. 큰 모델이 없으면 UI가 대부분의 정보를 캐시하므로 모델에 대한 메서드 호출이 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="73d05a3f546ea8916b7bb064e66f8288ae9aea16" translate="yes" xml:space="preserve">
          <source>Is updatable.</source>
          <target state="translated">업데이트 가능합니다.</target>
        </trans-unit>
        <trans-unit id="3e7d45a35a555de3e17a970523afd416c86f862c" translate="yes" xml:space="preserve">
          <source>IsReadable and IsWritable defaulted to true.</source>
          <target state="translated">IsReadable 및 IsWritable의 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="d7c894e314bf9756f61f22da2150e10311523727" translate="yes" xml:space="preserve">
          <source>IsindexAction</source>
          <target state="translated">IsindexAction</target>
        </trans-unit>
        <trans-unit id="32a3cedb4aa7123fdda374af7c96e70aa4fb1aba" translate="yes" xml:space="preserve">
          <source>Islamic - Umm Al-Qura calendar of Saudi Arabia</source>
          <target state="translated">이슬람-사우디 아라비아의 움알 쿠라 달력</target>
        </trans-unit>
        <trans-unit id="01ab7b8826be15f46cc01c8def866d25e3ff6ac7" translate="yes" xml:space="preserve">
          <source>IsndexAction</source>
          <target state="translated">IsndexAction</target>
        </trans-unit>
        <trans-unit id="7d98d4489a8ecf4e37b8f0789627030b865ee316" translate="yes" xml:space="preserve">
          <source>IsoChronology</source>
          <target state="translated">IsoChronology</target>
        </trans-unit>
        <trans-unit id="efc5f55e16e431b499e44441be9c7388d9cba6e8" translate="yes" xml:space="preserve">
          <source>IsoChronology.date()</source>
          <target state="translated">IsoChronology.date()</target>
        </trans-unit>
        <trans-unit id="3dcf5c0dc8de26f9203a9e0be0bef38c483baf35" translate="yes" xml:space="preserve">
          <source>IsoChronology.dateEpochDay()</source>
          <target state="translated">IsoChronology.dateEpochDay()</target>
        </trans-unit>
        <trans-unit id="d91c6cc18e64b9f14d0bf769a12896626044744c" translate="yes" xml:space="preserve">
          <source>IsoChronology.dateNow()</source>
          <target state="translated">IsoChronology.dateNow()</target>
        </trans-unit>
        <trans-unit id="d59cc39597f685c419438ec83e825af6e15a13cc" translate="yes" xml:space="preserve">
          <source>IsoChronology.dateYearDay()</source>
          <target state="translated">IsoChronology.dateYearDay()</target>
        </trans-unit>
        <trans-unit id="464cfbee3edadecf4bf82c5f57215f3ad23b8710" translate="yes" xml:space="preserve">
          <source>IsoChronology.eraOf()</source>
          <target state="translated">IsoChronology.eraOf()</target>
        </trans-unit>
        <trans-unit id="7ac495e9c39ee63983f82ef1f41e2e11269204ed" translate="yes" xml:space="preserve">
          <source>IsoChronology.eras()</source>
          <target state="translated">IsoChronology.eras()</target>
        </trans-unit>
        <trans-unit id="ea6b15547041b902f84790e91f26100562dbd930" translate="yes" xml:space="preserve">
          <source>IsoChronology.getCalendarType()</source>
          <target state="translated">IsoChronology.getCalendarType()</target>
        </trans-unit>
        <trans-unit id="dc23e8ea0aac4ba17df9fcff3a8b2b0875c50434" translate="yes" xml:space="preserve">
          <source>IsoChronology.getId()</source>
          <target state="translated">IsoChronology.getId()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
