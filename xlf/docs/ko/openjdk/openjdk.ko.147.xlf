<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="0abe9c5fa30d544cee3d19e6e84e698aa8e83f99" translate="yes" xml:space="preserve">
          <source>The count must be at least 1.</source>
          <target state="translated">개수는 1 이상이어야합니다.</target>
        </trans-unit>
        <trans-unit id="69acc6af217f96bcdf2f4de94a0523e36827c529" translate="yes" xml:space="preserve">
          <source>The count of pattern letters determine the format. See &lt;a href=&quot;datetimeformatter#patterns&quot;&gt;DateTimeFormatter&lt;/a&gt; for a user-focused description of the patterns. The following tables define how the pattern letters map to the builder.</source>
          <target state="translated">패턴 글자 수에 따라 형식이 결정됩니다. 패턴에 대한 사용자 중심 설명은 &lt;a href=&quot;datetimeformatter#patterns&quot;&gt;DateTimeFormatter&lt;/a&gt; 를 참조하십시오 . 다음 표는 패턴 문자가 빌더에 맵핑되는 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="fb5876d2502a179b75086c84bac845b92d02e1cc" translate="yes" xml:space="preserve">
          <source>The count of pattern letters determines the format.</source>
          <target state="translated">패턴 글자 수에 따라 형식이 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="fddae6af68e83b1752a387a77fb538d78e93cbb4" translate="yes" xml:space="preserve">
          <source>The count reaches zero due to invocations of the &lt;a href=&quot;#countDown()&quot;&gt;&lt;code&gt;countDown()&lt;/code&gt;&lt;/a&gt; method; or</source>
          <target state="translated">&lt;a href=&quot;#countDown()&quot;&gt; &lt;code&gt;countDown()&lt;/code&gt; &lt;/a&gt; 메소드의 호출로 인해 계수가 0에 도달합니다 . 또는</target>
        </trans-unit>
        <trans-unit id="0f4c68175b99dff8a42643f2632dfba5adfcaeeb" translate="yes" xml:space="preserve">
          <source>The count reaches zero due to invocations of the &lt;a href=&quot;countdownlatch#countDown--&quot;&gt;&lt;code&gt;countDown()&lt;/code&gt;&lt;/a&gt; method; or</source>
          <target state="translated">&lt;a href=&quot;countdownlatch#countDown--&quot;&gt; &lt;code&gt;countDown()&lt;/code&gt; &lt;/a&gt; 메소드의 호출로 인해 카운트가 0에 도달합니다 . 또는</target>
        </trans-unit>
        <trans-unit id="e4087c27faf9f64f3d727250d7f786fc190aa5fd" translate="yes" xml:space="preserve">
          <source>The country value in the &lt;code&gt;Locale&lt;/code&gt; created by the &lt;code&gt;Builder&lt;/code&gt; is always normalized to upper case.</source>
          <target state="translated">&lt;code&gt;Builder&lt;/code&gt; 로 작성된 &lt;code&gt;Locale&lt;/code&gt; 의 국가 값 은 항상 대문자로 표준화됩니다.</target>
        </trans-unit>
        <trans-unit id="9202768045feae2a7883c716972bbd4862e06c8f" translate="yes" xml:space="preserve">
          <source>The country/region code, or the empty string if none is defined.</source>
          <target state="translated">국가 / 지역 코드 또는 정의되지 않은 경우 빈 문자열</target>
        </trans-unit>
        <trans-unit id="86ee93e308efffbeb29b0da599e00055731cfac4" translate="yes" xml:space="preserve">
          <source>The create() method can return null if the RenderedImageFactory is not capable of producing output for the given set of source images and parameters. For example, if a RenderedImageFactory is only capable of performing a 3x3 convolution on single-banded image data, and the source image has multiple bands or the convolution Kernel is 5x5, null should be returned.</source>
          <target state="translated">RenderedImageFactory가 지정된 소스 이미지 및 매개 변수 세트에 대한 출력을 생성 할 수없는 경우 create () 메소드는 null을 리턴 할 수 있습니다. 예를 들어 RenderedImageFactory가 단일 밴드 이미지 데이터에 대해 3x3 컨볼 루션 만 수행 할 수 있고 소스 이미지에 다중 밴드가 있거나 컨볼 루션 커널이 5x5 인 경우 null이 반환되어야합니다.</target>
        </trans-unit>
        <trans-unit id="02e18b0394b9ab1e22032d8b63ce9cf82dc9ea2e" translate="yes" xml:space="preserve">
          <source>The createChild method may be used to create a new Raster occupying only a subset of its parent's bounding rectangle (with the same or a translated coordinate system) or with a subset of the bands of its parent.</source>
          <target state="translated">createChild 메서드를 사용하여 부모의 경계 사각형의 하위 집합 (동일하거나 변환 된 좌표계 ​​사용) 또는 상위 밴드의 하위 집합 만 차지하는 새 Raster를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f1d160d937561bad1783b50549c61ceb8de5a88" translate="yes" xml:space="preserve">
          <source>The createDefaultRendering() and createScaledRendering() methods are convenience methods that construct an appropriate RenderContext internally. All of the rendering methods may return a reference to a previously produced rendering.</source>
          <target state="translated">createDefaultRendering () 및 createScaledRendering () 메서드는 적절한 RenderContext를 내부적으로 생성하는 편리한 메서드입니다. 모든 렌더링 메서드는 이전에 생성 된 렌더링에 대한 참조를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f0a8c2df94ae8e9fb891ab0619da38ce8a905a0" translate="yes" xml:space="preserve">
          <source>The createTranslatedChild method returns a new Raster that shares all of the data of the current Raster, but occupies a bounding rectangle of the same width and height but with a different starting point. For example, if the parent Raster occupied the region (10, 10) to (100, 100), and the translated Raster was defined to start at (50, 50), then pixel (20, 20) of the parent and pixel (60, 60) of the child occupy the same location in the DataBuffer shared by the two Rasters. In the first case, (-10, -10) should be added to a pixel coordinate to obtain the corresponding SampleModel coordinate, and in the second case (-50, -50) should be added.</source>
          <target state="translated">createTranslatedChild 메서드는 현재 Raster의 모든 데이터를 공유하지만 시작점이 다른 너비와 높이의 경계 사각형을 차지하는 새 Raster를 반환합니다. 예를 들어 부모 Raster가 (10, 10)에서 (100, 100) 영역을 차지하고 변환 된 Raster가 (50, 50)에서 시작하도록 정의 된 경우 부모의 픽셀 (20, 20)과 픽셀 ( 60, 60)의 자식이 두 래스터가 공유하는 DataBuffer에서 동일한 위치를 차지합니다. 첫 번째 경우에는 해당 SampleModel 좌표를 얻기 위해 픽셀 좌표에 (-10, -10)을 추가하고 두 번째 경우에는 (-50, -50)을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="66e77c53bc1dd645c582b4b8aa762d175e4a06eb" translate="yes" xml:space="preserve">
          <source>The created &lt;code&gt;Spliterator&lt;/code&gt; additionally reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">생성 된 &lt;code&gt;Spliterator&lt;/code&gt; 는 또한 Spliterator.SIZED를 보고 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3451a12989e9215713f45711d9e6be0a3b84602a" translate="yes" xml:space="preserve">
          <source>The created &lt;code&gt;Spliterator&lt;/code&gt; additionally reports &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">생성 된 &lt;code&gt;Spliterator&lt;/code&gt; 는 또한 Spliterator.SUBSIZED를 보고 &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="90f5fcb7852a2398a51db098b96f0e8d95c7c56a" translate="yes" xml:space="preserve">
          <source>The created &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">생성 된 &lt;code&gt;Spliterator&lt;/code&gt; 는 Spliterator.SIZED를 보고 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="134a317066c706244322158d2a9d2093ecef92d5" translate="yes" xml:space="preserve">
          <source>The created RenderedImage may have a property identified by the String HINTS_OBSERVED to indicate which RenderingHints (from the RenderContext) were used to create the image. In addition any RenderedImages that are obtained via the getSources() method on the created RenderedImage may have such a property.</source>
          <target state="translated">생성 된 RenderedImage에는 이미지를 생성하는 데 사용 된 RenderingHint (RenderContext에서)를 나타내는 String HINTS_OBSERVED로 식별되는 속성이있을 수 있습니다. 또한 생성 된 RenderedImage에서 getSources () 메서드를 통해 얻은 RenderedImage는 이러한 속성을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e505e4d9f7047f5a3f3cf3acff947e70bb577184" translate="yes" xml:space="preserve">
          <source>The created RenderedImage may have a property identified by the String HINTS_OBSERVED to indicate which RenderingHints were used to create the image. In addition any RenderedImages that are obtained via the getSources() method on the created RenderedImage may have such a property.</source>
          <target state="translated">생성 된 RenderedImage에는 이미지 생성에 사용 된 RenderingHint를 나타 내기 위해 String HINTS_OBSERVED로 식별되는 속성이있을 수 있습니다. 또한 생성 된 RenderedImage에서 getSources () 메서드를 통해 얻은 RenderedImage는 이러한 속성을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="690bf7556ab8654b5fd1284d20114a7176fdd25f" translate="yes" xml:space="preserve">
          <source>The creation of the channel should specify the &lt;a href=&quot;../../net/protocolfamily&quot;&gt;&lt;code&gt;ProtocolFamily&lt;/code&gt;&lt;/a&gt; that corresponds to the address type of the multicast groups that the channel will join. There is no guarantee that a channel to a socket in one protocol family can join and receive multicast datagrams when the address of the multicast group corresponds to another protocol family. For example, it is implementation specific if a channel to an &lt;a href=&quot;../../net/standardprotocolfamily#INET6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; socket can join an &lt;a href=&quot;../../net/standardprotocolfamily#INET&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt;&lt;/a&gt; multicast group and receive multicast datagrams sent to the group.</source>
          <target state="translated">채널을 만들 려면 채널이 참가할 멀티 캐스트 그룹의 주소 유형에 해당하는 &lt;a href=&quot;../../net/protocolfamily&quot;&gt; &lt;code&gt;ProtocolFamily&lt;/code&gt; &lt;/a&gt; 를 지정해야합니다 . 멀티 캐스트 그룹의 주소가 다른 프로토콜 패밀리와 일치 할 때 한 프로토콜 제품군의 소켓에 대한 채널이 멀티 캐스트 데이터 그램에 참여하고 수신 할 수 있다는 보장은 없습니다. 예를 들어, &lt;a href=&quot;../../net/standardprotocolfamily#INET6&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; &lt;/a&gt; 소켓에 대한 채널이 &lt;a href=&quot;../../net/standardprotocolfamily#INET&quot;&gt; &lt;code&gt;IPv4&lt;/code&gt; &lt;/a&gt; 멀티 캐스트 그룹에 참여하여 그룹으로 전송 된 멀티 캐스트 데이터 그램을 수신 할 수 있는 경우 구현에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="f42aa3178f37922aa46485101a1f963f93b83d8e" translate="yes" xml:space="preserve">
          <source>The creation time is from the extended timestamp fields of entry's &lt;code&gt;optional extra data&lt;/code&gt; when read from a ZIP file or ZIP file formatted stream.</source>
          <target state="translated">생성 시간은 ZIP 파일 또는 ZIP 파일 형식의 스트림에서 읽을 때 항목의 &lt;code&gt;optional extra data&lt;/code&gt; 의 확장 된 타임 스탬프 필드 에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="395c6aaa2d52cdaae9ce3bd6feeb36c76a5dc106" translate="yes" xml:space="preserve">
          <source>The cross-platform print dialog should be used.</source>
          <target state="translated">크로스 플랫폼 인쇄 대화 상자를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="111e93a885222ba4f6d77f71187951289f487c46" translate="yes" xml:space="preserve">
          <source>The crosshair cursor type.</source>
          <target state="translated">십자형 커서 유형입니다.</target>
        </trans-unit>
        <trans-unit id="76b2b21e25b895ed5e224699e62899bac9537aa3" translate="yes" xml:space="preserve">
          <source>The cryptographic parameters used by the sealing Cipher, encoded in the default format.</source>
          <target state="translated">봉인 암호에 사용되는 암호화 매개 변수로 기본 형식으로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="a420c5b7dc176e9c8376b29f3b99362d7409dae9" translate="yes" xml:space="preserve">
          <source>The cryptographic service name must not contain any dots.</source>
          <target state="translated">암호화 서비스 이름에는 점이 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="5fac18c065a17ba110664a833562fea825e207c5" translate="yes" xml:space="preserve">
          <source>The cryptographic service name must not contain any dots. There must be one or more space characters between the</source>
          <target state="translated">암호화 서비스 이름에는 점이 없어야합니다. 사이에 하나 이상의 공백 문자가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="c7d282fc49152ddcaab2a306e223ae488444fb7e" translate="yes" xml:space="preserve">
          <source>The current &lt;a href=&quot;paint&quot;&gt;&lt;code&gt;Paint&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;Graphics2D&lt;/code&gt; context is queried for a &lt;a href=&quot;paintcontext&quot;&gt;&lt;code&gt;PaintContext&lt;/code&gt;&lt;/a&gt;, which specifies the colors to render in device space.</source>
          <target state="translated">현재 &lt;a href=&quot;paint&quot;&gt; &lt;code&gt;Paint&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;Graphics2D&lt;/code&gt; 문맥은 대한 쿼리 &lt;a href=&quot;paintcontext&quot;&gt; &lt;code&gt;PaintContext&lt;/code&gt; &lt;/a&gt; 디바이스 공간에서 렌더링하는 색상을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="8454c0ea7de1e33db9dece4b800a2152a5040384" translate="yes" xml:space="preserve">
          <source>The current &lt;code&gt;Font&lt;/code&gt; is queried to obtain outlines for the indicated glyphs. These outlines are treated as shapes in user space relative to the position of each glyph that was determined in step 1.</source>
          <target state="translated">표시된 글리프의 윤곽선을 얻기 위해 현재 &lt;code&gt;Font&lt;/code&gt; 을 쿼리합니다. 이러한 윤곽선은 1 단계에서 결정된 각 글리프의 위치를 ​​기준으로 사용자 공간의 모양으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="f9ff403eaee48d46144b5af3402e6cddd71fa7cb" translate="yes" xml:space="preserve">
          <source>The current &lt;code&gt;Locale&lt;/code&gt; to be used for localization, or &lt;code&gt;null&lt;/code&gt; if none has been set.</source>
          <target state="translated">지역화에 사용되는 현재 &lt;code&gt;Locale&lt;/code&gt; . 설정되어 있지 않은 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19f45a48f0f52abbe57d28861906d21a733ea0ea" translate="yes" xml:space="preserve">
          <source>The current &lt;code&gt;Locale&lt;/code&gt; to be used for localization, or &lt;code&gt;null&lt;/code&gt; if none has been set. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">지역화에 사용되는 현재 &lt;code&gt;Locale&lt;/code&gt; . 설정되어 있지 않은 경우는 &lt;code&gt;null&lt;/code&gt; 기본적으로 &lt;code&gt;null&lt;/code&gt; 로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="7979e0b4ceea0549138b2ae319fd9ab978a34e0a" translate="yes" xml:space="preserve">
          <source>The current &lt;code&gt;Paint&lt;/code&gt; is queried for a &lt;code&gt;PaintContext&lt;/code&gt;, which specifies the colors to render in device space.</source>
          <target state="translated">현재 &lt;code&gt;Paint&lt;/code&gt; 는 장치 공간에서 렌더링 할 색상을 지정 하는 &lt;code&gt;PaintContext&lt;/code&gt; 에 대해 쿼리됩니다 .</target>
        </trans-unit>
        <trans-unit id="ba388e8971b948e58e060869118d3e46a682e6ee" translate="yes" xml:space="preserve">
          <source>The current DTD handler, or null if none has been registered.</source>
          <target state="translated">현재 DTD 처리기. 등록 된 것이 없으면 null입니다.</target>
        </trans-unit>
        <trans-unit id="0a9487151a147e26460e41258b01ca9210ad2dee" translate="yes" xml:space="preserve">
          <source>The current DTD handler, or null if none was set.</source>
          <target state="translated">현재 DTD 처리기 또는 설정되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="c92b325872099099785589b627f947cfafe27a5a" translate="yes" xml:space="preserve">
          <source>The current MIDI volume level for the voice.</source>
          <target state="translated">음성의 현재 MIDI 볼륨 레벨입니다.</target>
        </trans-unit>
        <trans-unit id="9afbc55d0f58a4928c1ac93362ed95025cad363f" translate="yes" xml:space="preserve">
          <source>The current MIDI volume level for the voice. The value ranges from 0 to 127 if the voice is active, and is unspecified if the voice is inactive.</source>
          <target state="translated">음색의 현재 MIDI 음량 레벨. 음성이 활성화 된 경우 값의 범위는 0-127이며 음성이 비활성화 된 경우 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f7993787c03643b35ddc38af3e651bca509f6cc1" translate="yes" xml:space="preserve">
          <source>The current XOR alternation color (see &lt;a href=&quot;#setXORMode(java.awt.Color)&quot;&gt;&lt;code&gt;setXORMode(java.awt.Color)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">현재 XOR 대체 색상입니다 ( &lt;a href=&quot;#setXORMode(java.awt.Color)&quot;&gt; &lt;code&gt;setXORMode(java.awt.Color)&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="7ef88703003c550bf50309b57c18e8350b80178e" translate="yes" xml:space="preserve">
          <source>The current bit offset within the stream.</source>
          <target state="translated">스트림 내의 현재 비트 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="3ad35119f4d6b600ad01fb75ffdc7cbb41a4dda7" translate="yes" xml:space="preserve">
          <source>The current bit offset within the stream. Subclasses are responsible for keeping this value current from any method they override that alters the bit offset.</source>
          <target state="translated">스트림 내 현재 비트 오프셋입니다. 서브 클래스는 비트 오프셋을 변경하는 재정의하는 메소드에서이 값을 최신 상태로 유지해야합니다.</target>
        </trans-unit>
        <trans-unit id="a52b588e8161963b7e18fcda42fa7ec362e0a098" translate="yes" xml:space="preserve">
          <source>The current buffer position.</source>
          <target state="translated">현재 버퍼 위치</target>
        </trans-unit>
        <trans-unit id="63e50ac838b3848cc91de53941e6dcec2e9f8b7f" translate="yes" xml:space="preserve">
          <source>The current byte order setting is ignored.</source>
          <target state="translated">현재 바이트 순서 설정은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="62c6ac86c92a3b1c0b3b7a71378a93e386a89401" translate="yes" xml:space="preserve">
          <source>The current cache settings from &lt;code&gt;getUseCache&lt;/code&gt; and &lt;code&gt;getCacheDirectory&lt;/code&gt; will be used to control caching in the &lt;code&gt;ImageInputStream&lt;/code&gt; that is created.</source>
          <target state="translated">&lt;code&gt;getUseCache&lt;/code&gt; 및 &lt;code&gt;getCacheDirectory&lt;/code&gt; 의 현재 캐시 설정 은 생성 된 &lt;code&gt;ImageInputStream&lt;/code&gt; 에서 캐싱을 제어하는 ​​데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ebce94f7b86f28fb5536d0efa905e3cc08deebc7" translate="yes" xml:space="preserve">
          <source>The current cache settings from &lt;code&gt;getUseCache&lt;/code&gt; and &lt;code&gt;getCacheDirectory&lt;/code&gt; will be used to control caching.</source>
          <target state="translated">&lt;code&gt;getUseCache&lt;/code&gt; 및 &lt;code&gt;getCacheDirectory&lt;/code&gt; 의 현재 캐시 설정이 캐싱을 제어하는 ​​데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="12dd3caf907559af5dbbbed0c023c0d9054ec8bf" translate="yes" xml:space="preserve">
          <source>The current cache settings from &lt;code&gt;getUseCache&lt;/code&gt;and &lt;code&gt;getCacheDirectory&lt;/code&gt; will be used to control caching in the &lt;code&gt;ImageInputStream&lt;/code&gt; that is created.</source>
          <target state="translated">&lt;code&gt;getUseCache&lt;/code&gt; 및 &lt;code&gt;getCacheDirectory&lt;/code&gt; 의 현재 캐시 설정 은 작성된 &lt;code&gt;ImageInputStream&lt;/code&gt; 의 캐싱을 제어하는 ​​데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="92e771a6c7da10585ddeb438ab541e0b3a851ef9" translate="yes" xml:space="preserve">
          <source>The current cache settings from &lt;code&gt;getUseCache&lt;/code&gt;and &lt;code&gt;getCacheDirectory&lt;/code&gt; will be used to control caching.</source>
          <target state="translated">&lt;code&gt;getUseCache&lt;/code&gt; 및 &lt;code&gt;getCacheDirectory&lt;/code&gt; 의 현재 캐시 설정은 캐싱을 제어하는 ​​데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="89704d34557cd59648a0266d48ab82daf5f64eab" translate="yes" xml:space="preserve">
          <source>The current clip.</source>
          <target state="translated">현재 클립입니다.</target>
        </trans-unit>
        <trans-unit id="b01bd6e57dde0ac4048be7764bbdff1f1ae5c100" translate="yes" xml:space="preserve">
          <source>The current color.</source>
          <target state="translated">현재 색상입니다.</target>
        </trans-unit>
        <trans-unit id="7d82a0e45dd2d793a3efb2854ef6262385fd44f4" translate="yes" xml:space="preserve">
          <source>The current content handler, or null if none has been registered.</source>
          <target state="translated">현재 컨텐츠 핸들러. 등록되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="f60575e2f431f64905395a23ead4d1dde5bce92e" translate="yes" xml:space="preserve">
          <source>The current content handler, or null if none was set.</source>
          <target state="translated">현재 컨텐츠 핸들러 또는 아무것도 설정되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="1fae70a154b8fa08954e3ab55a0bd9a7d21e8b2f" translate="yes" xml:space="preserve">
          <source>The current content handler, or null if none was supplied.</source>
          <target state="translated">현재 컨텐츠 핸들러 또는 제공되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="8667d247b4efd8d76708c889ea32b9d90d3c0815" translate="yes" xml:space="preserve">
          <source>The current depth.</source>
          <target state="translated">현재 깊이입니다.</target>
        </trans-unit>
        <trans-unit id="5fc57665f9bfdac3fa8c0faac80079f44dfc94bd" translate="yes" xml:space="preserve">
          <source>The current depth. The depth starts at &lt;code&gt;1&lt;/code&gt; and increases for each nested object and decrements when each nested object returns.</source>
          <target state="translated">현재 깊이입니다. 깊이는 &lt;code&gt;1&lt;/code&gt; 에서 시작하여 중첩 된 각 개체에 대해 증가하고 각 중첩 된 개체가 반환 될 때 감소합니다.</target>
        </trans-unit>
        <trans-unit id="81cdf2ba2172500bdc689acdbd2873896b952c7c" translate="yes" xml:space="preserve">
          <source>The current destination &lt;code&gt;BufferedImage&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if none has been set.</source>
          <target state="translated">현재 목적지 &lt;code&gt;BufferedImage&lt;/code&gt; 또는 설정되지 않은 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff6ca30c84f040773ec8774963807e0a8e8d43eb" translate="yes" xml:space="preserve">
          <source>The current destination &lt;code&gt;BufferedImage&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if none has been set. By default, the value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">현재 대상 &lt;code&gt;BufferedImage&lt;/code&gt; , 또는 &lt;code&gt;null&lt;/code&gt; 아무것도 설정되어 있지 않은 경우. 기본적으로 값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a8b92d6a2986b52e6629a746b55b0a9cddbea4b1" translate="yes" xml:space="preserve">
          <source>The current directory used by the library loader.</source>
          <target state="translated">라이브러리 로더가 사용하는 현재 디렉토리.</target>
        </trans-unit>
        <trans-unit id="22fa2af38fc2501bb78c899fa0c845aee4f9c7ce" translate="yes" xml:space="preserve">
          <source>The current element of the sequence.</source>
          <target state="translated">시퀀스의 현재 요소입니다.</target>
        </trans-unit>
        <trans-unit id="aa03f88582a04f13e4d3629cba390af29bf5de59" translate="yes" xml:space="preserve">
          <source>The current entity resolver, or null if none has been registered.</source>
          <target state="translated">현재 엔티티 해석기 또는 등록되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="cf230a620ef0117f0869ba9efd5267ca4c52c6e6" translate="yes" xml:space="preserve">
          <source>The current entity resolver, or null if none was set.</source>
          <target state="translated">현재 엔티티 리졸버 또는 설정되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="c1cde7d51841cbe1bb94429fad39bafd5ef45192" translate="yes" xml:space="preserve">
          <source>The current entity resolver, or null if none was supplied.</source>
          <target state="translated">현재 엔티티 리졸버. 제공되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="73727ebdabca1a91204ed31d331e5ef77030a4a0" translate="yes" xml:space="preserve">
          <source>The current era, which is the only accepted value, has the value 1</source>
          <target state="translated">유일하게 허용되는 값인 현재 시대의 값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="562dbd9d5a8dbf82e898b80cfa944419eb4e02ed" translate="yes" xml:space="preserve">
          <source>The current error handler, or null if none has been registered.</source>
          <target state="translated">현재 오류 처리기 또는 등록되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="822a5e1046dbe00ab7f2b6ea138bd7fef0f8c508" translate="yes" xml:space="preserve">
          <source>The current error handler, or null if none was set.</source>
          <target state="translated">현재 오류 처리기 또는 아무것도 설정되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="906967a490e0fb3bdfd034b45834748b16f9b4ea" translate="yes" xml:space="preserve">
          <source>The current error handler, or null if none was supplied.</source>
          <target state="translated">현재 오류 처리기 또는 제공되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="651c866eced43a10923c0d683845e914b44c7a55" translate="yes" xml:space="preserve">
          <source>The current error handler, which should never be null.</source>
          <target state="translated">null이 아니어야하는 현재 오류 처리기입니다.</target>
        </trans-unit>
        <trans-unit id="fb283bd58fc0c538b1fb8f7a6c6ed778f0443b18" translate="yes" xml:space="preserve">
          <source>The current event phase is the bubbling phase.</source>
          <target state="translated">현재 이벤트 단계는 버블 링 단계입니다.</target>
        </trans-unit>
        <trans-unit id="2529c941fa7da99138ca44e484944e93fad82bcc" translate="yes" xml:space="preserve">
          <source>The current event phase is the capturing phase.</source>
          <target state="translated">현재 이벤트 단계는 캡처 단계입니다.</target>
        </trans-unit>
        <trans-unit id="a5d5305093483c2f211948966899c91cf6c8da24" translate="yes" xml:space="preserve">
          <source>The current feature value.</source>
          <target state="translated">현재 기능 값입니다.</target>
        </trans-unit>
        <trans-unit id="45ef3a98fd3df3b5d67cea84fa4216d1e91d86dd" translate="yes" xml:space="preserve">
          <source>The current font.</source>
          <target state="translated">현재 글꼴</target>
        </trans-unit>
        <trans-unit id="26717e43208f4640d19e6b5f6728d4a14a1505eb" translate="yes" xml:space="preserve">
          <source>The current hash code of this buffer</source>
          <target state="translated">이 버퍼의 현재 해시 코드</target>
        </trans-unit>
        <trans-unit id="b0b0b2d452f6407d3565f329540e6cccfca94297" translate="yes" xml:space="preserve">
          <source>The current line number</source>
          <target state="translated">현재 줄 번호</target>
        </trans-unit>
        <trans-unit id="b28b91e59d7ae0762d443355c9917cff3adbc619" translate="yes" xml:space="preserve">
          <source>The current locale of this BeanContext.</source>
          <target state="translated">이 BeanContext의 현재 로케일</target>
        </trans-unit>
        <trans-unit id="2edd92483aba564aabc770aa23d850e95881095f" translate="yes" xml:space="preserve">
          <source>The current logical pixel operation function (XOR or Paint).</source>
          <target state="translated">현재 논리 픽셀 연산 함수 (XOR 또는 Paint).</target>
        </trans-unit>
        <trans-unit id="b08f612d5c5c523da7676da4b4cce78624b9e4e6" translate="yes" xml:space="preserve">
          <source>The current malformed-input action, which is never &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">현재의 부정 입력 입력 액션. &lt;code&gt;null&lt;/code&gt; 는 아니다</target>
        </trans-unit>
        <trans-unit id="2fd1d09b87d2461d49fa889f156c5f6ecb6d535a" translate="yes" xml:space="preserve">
          <source>The current number of bytes consumed.</source>
          <target state="translated">현재 사용 된 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="a928523ae24261d2041a9d9d09b778ee63bc9c82" translate="yes" xml:space="preserve">
          <source>The current number of object references.</source>
          <target state="translated">현재 개체 참조 수입니다.</target>
        </trans-unit>
        <trans-unit id="f543e40cbcfbc6cb4ca86b768e1dc65ca514b5ca" translate="yes" xml:space="preserve">
          <source>The current object associated with the specified parameter or &lt;code&gt;null&lt;/code&gt; if no object has been associated or if the parameter is not supported.</source>
          <target state="translated">지정된 매개 변수와 연결된 현재 개체입니다. 연결된 개체가 없거나 매개 변수가 지원되지 않는 경우 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3caffb76e68c7e0f2f3c0db70322fedc0707f8a7" translate="yes" xml:space="preserve">
          <source>The current position in the buffer.</source>
          <target state="translated">버퍼의 현재 위치입니다.</target>
        </trans-unit>
        <trans-unit id="e5ad146812d579b16f33f69cf1e04cbb0531d75a" translate="yes" xml:space="preserve">
          <source>The current position in the buffer. This is the index of the next character to be read from the &lt;code&gt;buf&lt;/code&gt; array.</source>
          <target state="translated">버퍼의 현재 위치 이것은 &lt;code&gt;buf&lt;/code&gt; 배열 에서 읽을 다음 문자의 색인입니다 .</target>
        </trans-unit>
        <trans-unit id="a45e882549bd6b8bc41552862e68ba4b26f19d24" translate="yes" xml:space="preserve">
          <source>The current position in the input source, including all external entities and other resources that have been read.</source>
          <target state="translated">모든 외부 엔터티 및 읽은 기타 리소스를 포함하여 입력 소스의 현재 위치입니다.</target>
        </trans-unit>
        <trans-unit id="4f0b5f02342bf7d81232d1242170194474834edf" translate="yes" xml:space="preserve">
          <source>The current position in this stream, in sample frames (zero-based).</source>
          <target state="translated">샘플 프레임에서이 스트림의 현재 위치입니다 (0부터 시작).</target>
        </trans-unit>
        <trans-unit id="c6dc2f0c8135b842038513bdfb036e445e70910d" translate="yes" xml:space="preserve">
          <source>The current read position within the stream.</source>
          <target state="translated">스트림 내 현재 읽기 위치입니다.</target>
        </trans-unit>
        <trans-unit id="cd07329f3f1e3728051b83bc09960471c2e49eb2" translate="yes" xml:space="preserve">
          <source>The current read position within the stream. Subclasses are responsible for keeping this value current from any method they override that alters the read position.</source>
          <target state="translated">스트림 내의 현재 읽기 위치 서브 클래스는 읽기 위치를 변경하는 대체 메소드에서이 값을 최신 상태로 유지해야합니다.</target>
        </trans-unit>
        <trans-unit id="dbb2a76e76608609682c9f165bc8e263dc315e1a" translate="yes" xml:space="preserve">
          <source>The current security manager is set by the &lt;code&gt;setSecurityManager&lt;/code&gt; method in class &lt;code&gt;System&lt;/code&gt;. The current security manager is obtained by the &lt;code&gt;getSecurityManager&lt;/code&gt; method.</source>
          <target state="translated">현재 보안 관리자는 &lt;code&gt;System&lt;/code&gt; 클래스 의 &lt;code&gt;setSecurityManager&lt;/code&gt; 메소드로 설정됩니다 . 현재 보안 관리자는 &lt;code&gt;getSecurityManager&lt;/code&gt; 메소드로 확보합니다.</target>
        </trans-unit>
        <trans-unit id="3aa8d4e8a796c44a2296bbeaf9e50c979c6c33c6" translate="yes" xml:space="preserve">
          <source>The current sequence element, can be set.</source>
          <target state="translated">현재 시퀀스 요소를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67f4c69ded5505e7a8e37a25bb971fa9a60c39af" translate="yes" xml:space="preserve">
          <source>The current set of system properties for use by the &lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;getProperty(String)&lt;/code&gt;&lt;/a&gt; method is returned as a &lt;code&gt;Properties&lt;/code&gt; object. If there is no current set of system properties, a set of system properties is first created and initialized. This set of system properties always includes values for the following keys:</source>
          <target state="translated">&lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;getProperty(String)&lt;/code&gt; &lt;/a&gt; 메서드 에서 사용할 현재 시스템 속성 집합이 &lt;code&gt;Properties&lt;/code&gt; 객체 로 반환됩니다 . 현재 시스템 속성 집합이없는 경우 시스템 속성 집합이 먼저 만들어지고 초기화됩니다. 이 시스템 속성 집합에는 항상 다음 키 값이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="74f480c6ae193e5a9d3b709b2c2a7c453d4dfc2d" translate="yes" xml:space="preserve">
          <source>The current set of system properties for use by the &lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt;&lt;code&gt;getProperty(String)&lt;/code&gt;&lt;/a&gt; method is returned as a &lt;code&gt;Properties&lt;/code&gt; object. If there is no current set of system properties, a set of system properties is first created and initialized. This set of system properties always includes values for the following keys:</source>
          <target state="translated">&lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt; &lt;code&gt;getProperty(String)&lt;/code&gt; &lt;/a&gt; 메소드가 사용하는 현재 시스템 특성 세트가 &lt;code&gt;Properties&lt;/code&gt; 오브젝트 로 리턴됩니다 . 현재 시스템 특성 세트가없는 경우 시스템 특성 세트가 먼저 작성되고 초기화됩니다. 이 시스템 특성 세트에는 항상 다음 키의 값이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="79a720cf83d499f6e0973994d3499581df2c23c7" translate="yes" xml:space="preserve">
          <source>The current size of this channel's file, measured in bytes</source>
          <target state="translated">이 채널 파일의 현재 크기 (바이트)</target>
        </trans-unit>
        <trans-unit id="7343e97e3c7e753dcd01486a1d5489595ced50fc" translate="yes" xml:space="preserve">
          <source>The current size, measured in bytes</source>
          <target state="translated">바이트 단위로 측정 된 현재 크기</target>
        </trans-unit>
        <trans-unit id="18c5fa96a9582ae593ce3cde2d2bc6a02d8b9661" translate="yes" xml:space="preserve">
          <source>The current size/location of the thumb.</source>
          <target state="translated">엄지 손가락의 현재 크기 / 위치입니다.</target>
        </trans-unit>
        <trans-unit id="5a306937a47c19c78894ced96a36905c6a660dc4" translate="yes" xml:space="preserve">
          <source>The current state of the feature, &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기능의 현재 상태, &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f29d38f501c28836502c9b60c42dbfd6c16e02e" translate="yes" xml:space="preserve">
          <source>The current thread is assumed to hold the lock associated with this &lt;code&gt;Condition&lt;/code&gt; when this method is called. It is up to the implementation to determine if this is the case and if not, how to respond. Typically, an exception will be thrown (such as &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt;&lt;code&gt;IllegalMonitorStateException&lt;/code&gt;&lt;/a&gt;) and the implementation must document that fact.</source>
          <target state="translated">현재 스레드는 이 메소드가 호출 될 때이 &lt;code&gt;Condition&lt;/code&gt; 과 연관된 잠금을 보유한다고 가정합니다 . 이 경우에 해당하는지 여부와 그렇지 않은 경우 응답 방법을 결정하는 것은 구현에 달려 있습니다. 일반적으로 예외 (예 : &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt; &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; &lt;/a&gt; ) 가 발생 하며 구현시 해당 사실을 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="e3ed8f17b4648b7d48d6e534b32780f547457227" translate="yes" xml:space="preserve">
          <source>The current thread must own this object's monitor lock. See the &lt;a href=&quot;#notify()&quot;&gt;&lt;code&gt;notify&lt;/code&gt;&lt;/a&gt; method for a description of the ways in which a thread can become the owner of a monitor lock.</source>
          <target state="translated">현재 스레드는이 개체의 모니터 잠금을 소유해야합니다. 스레드가 모니터 잠금의 소유자가 될 수있는 방법에 대한 설명은 &lt;a href=&quot;#notify()&quot;&gt; &lt;code&gt;notify&lt;/code&gt; &lt;/a&gt; 메소드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8fbef1cf24d964f6ca313f95f4fe01571dff952a" translate="yes" xml:space="preserve">
          <source>The current thread must own this object's monitor.</source>
          <target state="translated">현재 스레드는이 객체의 모니터를 소유해야합니다.</target>
        </trans-unit>
        <trans-unit id="bb005abf75b48dfbf8bfb52c0de3735aa29c85f2" translate="yes" xml:space="preserve">
          <source>The current thread must own this object's monitor. The thread releases ownership of this monitor and waits until another thread notifies threads waiting on this object's monitor to wake up either through a call to the &lt;code&gt;notify&lt;/code&gt; method or the &lt;code&gt;notifyAll&lt;/code&gt; method. The thread then waits until it can re-obtain ownership of the monitor and resumes execution.</source>
          <target state="translated">현재 스레드는이 객체의 모니터를 소유해야합니다. 스레드는이 모니터의 소유권을 해제하고 다른 스레드가이 객체의 모니터에서 대기중인 스레드가 &lt;code&gt;notify&lt;/code&gt; 메소드 또는 &lt;code&gt;notifyAll&lt;/code&gt; 메소드에 대한 호출을 통해 깨어나 도록 알릴 때까지 기다립니다 . 그런 다음 스레드는 모니터 소유권을 다시 얻을 수있을 때까지 기다렸다가 실행을 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="074bc81cd00e30024a40cff7dc9639a832494853" translate="yes" xml:space="preserve">
          <source>The current thread must own this object's monitor. The thread releases ownership of this monitor and waits until either of the following two conditions has occurred:</source>
          <target state="translated">현재 스레드는이 객체의 모니터를 소유해야합니다. 스레드는이 모니터의 소유권을 해제하고 다음 두 조건 중 하나가 발생할 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="7d7de3eb289e620ce7d37cc5459f23d8d68c0732" translate="yes" xml:space="preserve">
          <source>The current threshold of every object in the set of observed MBeans is updated consequently.</source>
          <target state="translated">관찰 된 MBean 세트에있는 모든 오브젝트의 현재 임계 값이 결과적으로 갱신됩니다.</target>
        </trans-unit>
        <trans-unit id="035b0994516ff38617336fc9d2cad5f9f8cf8008" translate="yes" xml:space="preserve">
          <source>The current token is a word when the value of the &lt;code&gt;ttype&lt;/code&gt; field is &lt;code&gt;TT_WORD&lt;/code&gt;. The current token is a quoted string token when the value of the &lt;code&gt;ttype&lt;/code&gt; field is a quote character.</source>
          <target state="translated">&lt;code&gt;ttype&lt;/code&gt; 필드 의 값 이 &lt;code&gt;TT_WORD&lt;/code&gt; 인 경우 현재 토큰은 단어 입니다. &lt;code&gt;ttype&lt;/code&gt; 필드 의 값이 인용 문자 인 경우 현재 토큰은 인용 문자열 토큰 입니다.</target>
        </trans-unit>
        <trans-unit id="9279d01dc19f7a0342350a1d9adf8f833fd5ece2" translate="yes" xml:space="preserve">
          <source>The current unmappable-character action, which is never &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">현재 매핑 할 수없는 문자 작업으로, &lt;code&gt;null&lt;/code&gt; 이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="e1012a0df19137ade7f9cc6d880e91b73d186234" translate="yes" xml:space="preserve">
          <source>The current value of the feature (true or false).</source>
          <target state="translated">기능의 현재 값 (true 또는 false)입니다.</target>
        </trans-unit>
        <trans-unit id="d5cd44862b20bc2edecba74d7cd13ba13038c639" translate="yes" xml:space="preserve">
          <source>The current value of the feature.</source>
          <target state="translated">기능의 현재 값입니다.</target>
        </trans-unit>
        <trans-unit id="4b6415d0371a83f4cf2a03049e398ac9d7573c8a" translate="yes" xml:space="preserve">
          <source>The current value of the property.</source>
          <target state="translated">속성의 현재 값</target>
        </trans-unit>
        <trans-unit id="487eabe27105010031539dbb45cabcf646b9b0c9" translate="yes" xml:space="preserve">
          <source>The current value of this object.</source>
          <target state="translated">이 개체의 현재 값입니다.</target>
        </trans-unit>
        <trans-unit id="389ff35e25f97831ef1f87f462e32ebe3b240236" translate="yes" xml:space="preserve">
          <source>The current value returned is 256.</source>
          <target state="translated">반환 된 현재 값은 256입니다.</target>
        </trans-unit>
        <trans-unit id="074ae807bdef7732215309f0e8a040c7f652aff9" translate="yes" xml:space="preserve">
          <source>The currently marked position in the stream.</source>
          <target state="translated">스트림에서 현재 표시된 위치입니다.</target>
        </trans-unit>
        <trans-unit id="b28d72a296f5ec1bac25b851e0e08dad5342265a" translate="yes" xml:space="preserve">
          <source>The currently marked position in the stream. ByteArrayInputStream objects are marked at position zero by default when constructed. They may be marked at another position within the buffer by the &lt;code&gt;mark()&lt;/code&gt; method. The current buffer position is set to this point by the &lt;code&gt;reset()&lt;/code&gt; method.</source>
          <target state="translated">스트림에서 현재 표시된 위치입니다. ByteArrayInputStream 객체는 생성시 기본적으로 위치 0에 표시됩니다. 그것들은 &lt;code&gt;mark()&lt;/code&gt; 메소드에 의해 버퍼 내의 다른 위치에 표시 될 수 있습니다 . 현재 버퍼 위치는 &lt;code&gt;reset()&lt;/code&gt; 메소드에 의해이 지점으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="7ac7b43047b38b0ded9bac0773edbdff61065cab" translate="yes" xml:space="preserve">
          <source>The currently set time for this calendar, expressed in milliseconds after January 1, 1970, 0:00:00 GMT.</source>
          <target state="translated">이 달력에 현재 설정된 시간으로 1970 년 1 월 1 일 0:00:00 GMT 이후 밀리 초로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ef1627d80395d8e5a4355c40bb5338b6046d2036" translate="yes" xml:space="preserve">
          <source>The cursor API defines two interfaces: &lt;a href=&quot;xmlstreamreader&quot;&gt;&lt;code&gt;XMLStreamReader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;xmlstreamwriter&quot;&gt;&lt;code&gt;XMLStreamWriter&lt;/code&gt;&lt;/a&gt;, while the event iterator API defines: &lt;a href=&quot;xmleventreader&quot;&gt;&lt;code&gt;XMLEventReader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;xmleventwriter&quot;&gt;&lt;code&gt;XMLEventWriter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">커서 API는 &lt;a href=&quot;xmlstreamreader&quot;&gt; &lt;code&gt;XMLStreamReader&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;xmlstreamwriter&quot;&gt; &lt;code&gt;XMLStreamWriter&lt;/code&gt; 의&lt;/a&gt; 두 인터페이스를 정의 하고 이벤트 반복기 API는 &lt;a href=&quot;xmleventreader&quot;&gt; &lt;code&gt;XMLEventReader&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;xmleventwriter&quot;&gt; &lt;code&gt;XMLEventWriter&lt;/code&gt; 를&lt;/a&gt; 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="f4dacc225657de4a22f8bfa711bd1f39b1ba615b" translate="yes" xml:space="preserve">
          <source>The cursor for the &lt;code&gt;ResultSet&lt;/code&gt; object should be positioned before the first row. In addition, the returned &lt;code&gt;ResultSet&lt;/code&gt; object should have the following properties:</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; 오브젝트 의 커서 는 첫 번째 행 앞에 위치해야합니다. 또한 반환 된 &lt;code&gt;ResultSet&lt;/code&gt; 개체에는 다음 속성이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="d0ad6765c8b071317f8abd93541d4c18a7b6d235" translate="yes" xml:space="preserve">
          <source>The cursor is positioned before the first row in the result set. Only rows contained in the result set returned by the method &lt;code&gt;getOriginal&lt;/code&gt; are said to have an original value.</source>
          <target state="translated">커서는 결과 세트의 첫 번째 행 앞에 위치합니다. &lt;code&gt;getOriginal&lt;/code&gt; 메소드에 의해 리턴 된 결과 세트에 포함 된 행만 원래 값이 있다고합니다.</target>
        </trans-unit>
        <trans-unit id="4898c5aa7c4543ca137c5d4220448bae1b28dadc" translate="yes" xml:space="preserve">
          <source>The cursor's hotspot enters the operable part of a platform- dependent drop site.</source>
          <target state="translated">커서의 핫스팟은 플랫폼에 따른 드롭 사이트의 작동 가능한 부분으로 들어갑니다.</target>
        </trans-unit>
        <trans-unit id="a7a22178497dab85750eba4421638334fc0c725d" translate="yes" xml:space="preserve">
          <source>The cursor's hotspot enters the operable part of a platform-dependent drop site.</source>
          <target state="translated">커서의 핫스팟은 플랫폼 종속 드롭 사이트의 작동 가능한 부분으로 들어갑니다.</target>
        </trans-unit>
        <trans-unit id="4f1743e0473899ef57b615919b955a0d4ae9a15c" translate="yes" xml:space="preserve">
          <source>The cursor's hotspot has moved, but still intersects the operable part of the drop site associated with the previous dragEnter() invocation.</source>
          <target state="translated">커서의 핫스팟이 이동했지만 이전 dragEnter () 호출과 관련된 드롭 사이트의 작동 가능한 부분과 여전히 교차합니다.</target>
        </trans-unit>
        <trans-unit id="3e8c167e5778840a28e4971eb3f1bde64df38bde" translate="yes" xml:space="preserve">
          <source>The cursor's hotspot no longer intersects the operable part of the drop site associated with the previous dragEnter() invocation.</source>
          <target state="translated">커서의 핫스팟이 더 이상 이전 dragEnter () 호출과 관련된 드롭 사이트의 작동 가능한 부분과 교차하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="22e3ccca79f34b01c1b8d4094faf430d7f5489a6" translate="yes" xml:space="preserve">
          <source>The custom &lt;code&gt;LayoutManager&lt;/code&gt; used by &lt;code&gt;JRootPane&lt;/code&gt; ensures that:</source>
          <target state="translated">&lt;code&gt;JRootPane&lt;/code&gt; 에서 사용하는 사용자 정의 &lt;code&gt;LayoutManager&lt;/code&gt; 는 다음을 보장합니다.</target>
        </trans-unit>
        <trans-unit id="1f25f008e1befe441b484adfca4b3997115aa703" translate="yes" xml:space="preserve">
          <source>The custom painting implemented in the &lt;code&gt;LayerUI&lt;/code&gt; and events notification work for the JLayer itself and all its subcomponents. This combination enables you to enrich existing components by adding new advanced functionality such as temporary locking of a hierarchy, data tips for compound components, enhanced mouse scrolling etc and so on.</source>
          <target state="translated">&lt;code&gt;LayerUI&lt;/code&gt; 및 이벤트 알림에 구현 된 사용자 지정 페인팅 은 JLayer 자체 및 모든 하위 구성 요소에 대해 작동합니다. 이 조합을 사용하면 계층의 임시 잠금, 복합 구성 요소에 대한 데이터 팁, 향상된 마우스 스크롤 등과 같은 새로운 고급 기능을 추가하여 기존 구성 요소를 풍부하게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc3c07ff5671cb5699eada17ac47b9280751bc33" translate="yes" xml:space="preserve">
          <source>The customization is performed after modification using the IANA Language Subtag Registry.</source>
          <target state="translated">사용자 정의는 IANA 언어 서브 태그 레지스트리를 사용하여 수정 한 후에 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="08979f718f326c5f8394531a530cb7e583213f81" translate="yes" xml:space="preserve">
          <source>The dash character &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002d'&lt;/code&gt;, &lt;small&gt;HYPHEN-MINUS&lt;/small&gt;),</source>
          <target state="translated">대시 문자 &lt;code&gt;'-'&lt;/code&gt; ( &lt;code&gt;'\u002d'&lt;/code&gt; , &lt;small&gt;HYPHEN-MINUS&lt;/small&gt; ),</target>
        </trans-unit>
        <trans-unit id="97ac0710b18e8f563995eb18177b67d6f4aafaaf" translate="yes" xml:space="preserve">
          <source>The data array for the specified bank.</source>
          <target state="translated">지정된 뱅크의 데이터 배열입니다.</target>
        </trans-unit>
        <trans-unit id="f3947e26310ac18cf3ed9e907f2ce97a129e7cfa" translate="yes" xml:space="preserve">
          <source>The data as an array of &lt;code&gt;char&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 배열로서의 데이터 .</target>
        </trans-unit>
        <trans-unit id="34ae1e33b201b7107089e91e1478e56a3e0eee4e" translate="yes" xml:space="preserve">
          <source>The data as an array of &lt;code&gt;double&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 의 배열로서의 데이터 입니다.</target>
        </trans-unit>
        <trans-unit id="c99fe403f2519eaa5e8a53423a0bb556e1e89a30" translate="yes" xml:space="preserve">
          <source>The data as an array of &lt;code&gt;float&lt;/code&gt;s.</source>
          <target state="translated">데이터는 &lt;code&gt;float&lt;/code&gt; 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="e7d300c7ebffaa21fbdb6b608720003455b92510" translate="yes" xml:space="preserve">
          <source>The data as an array of &lt;code&gt;int&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 배열로서의 데이터 입니다.</target>
        </trans-unit>
        <trans-unit id="c1420a1af587e14894be404818cc405fe210aa1e" translate="yes" xml:space="preserve">
          <source>The data as an array of &lt;code&gt;long&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 배열로서의 데이터 입니다.</target>
        </trans-unit>
        <trans-unit id="94453bce0f6c6a198f9a6d8461b59750da92c8f3" translate="yes" xml:space="preserve">
          <source>The data as an array of &lt;code&gt;short&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;short&lt;/code&gt; 의 배열로서의 데이터 입니다.</target>
        </trans-unit>
        <trans-unit id="c9b500b976c4dbd8869b2f1f8ed12adb1c34c40d" translate="yes" xml:space="preserve">
          <source>The data as an array of signed rationals.</source>
          <target state="translated">부호있는 합리적 배열의 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="75d5d33fde844ecdf7cd7c3776a72f283bb9ddce" translate="yes" xml:space="preserve">
          <source>The data as an array of unsigned rationals.</source>
          <target state="translated">부호없는 합리적 배열로 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="14c4bb10850caf1f8f1511d6c25a86ed6ee51b57" translate="yes" xml:space="preserve">
          <source>The data as an uninterpreted array of bytes.</source>
          <target state="translated">해석되지 않은 바이트 배열로서의 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="fcf47262f44957a7968db5b015207d016f4369e5" translate="yes" xml:space="preserve">
          <source>The data at the given index as a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">주어진 인덱스에있는 데이터를 &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42a26b32f525727e2de94cafe8f030b1b4293754" translate="yes" xml:space="preserve">
          <source>The data at the given index as a &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">주어진 인덱스에있는 데이터는 &lt;code&gt;double&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="856262b59ffc890fe6ab91711f0b838dd55ef716" translate="yes" xml:space="preserve">
          <source>The data at the given index as a &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">주어진 인덱스에있는 데이터는 &lt;code&gt;float&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="39d30986992d9a8b15cbcc61dcc39efa0472ab0e" translate="yes" xml:space="preserve">
          <source>The data at the given index as a &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">주어진 인덱스에있는 데이터는 &lt;code&gt;long&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e8a6eb0707593a35afad83d1bc89b395fb927e7e" translate="yes" xml:space="preserve">
          <source>The data at the given index as a signed rational.</source>
          <target state="translated">주어진 인덱스의 데이터는 부호있는 유리입니다.</target>
        </trans-unit>
        <trans-unit id="e1cba22630f8d6b23c5512de5876ab07a64d702c" translate="yes" xml:space="preserve">
          <source>The data at the given index as an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">주어진 인덱스의 데이터는 &lt;code&gt;int&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f35940aac030c536900099e28fd55b11bbaa5aa0" translate="yes" xml:space="preserve">
          <source>The data at the given index as an unsigned rational.</source>
          <target state="translated">부호없는 유리로 주어진 인덱스의 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="faf8b84371a14f52d57fc6013e50147dc123319e" translate="yes" xml:space="preserve">
          <source>The data does not need to be present and may be null. Target is required and many not be null. The writer will write data section directly after the target, enclosed in appropriate XML 1.0 syntax</source>
          <target state="translated">데이터가 존재할 필요는 없으며 null 일 수 있습니다. 대상은 필수이며 대부분은 null이 아닙니다. 작성자는 적절한 XML 1.0 구문으로 묶인 대상 바로 뒤에 데이터 섹션을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="2a37c85127777def0cd9b215c7a9adc3ab9775c6" translate="yes" xml:space="preserve">
          <source>The data element array representation of a pixel in this &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;ColorModel&lt;/code&gt; 픽셀의 데이터 요소 배열 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="6a502bc94385f50c740f5e8a12d01375ea4dae62" translate="yes" xml:space="preserve">
          <source>The data entry as a &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 형식 의 데이터 항목 입니다.</target>
        </trans-unit>
        <trans-unit id="7caf885d1a33b05cb98144344a6e9a21486b6bd6" translate="yes" xml:space="preserve">
          <source>The data entry as a &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">데이터 항목은 &lt;code&gt;float&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="742d81573af6cf8f3b63ed2ffa3618951f64fbfe" translate="yes" xml:space="preserve">
          <source>The data entry as an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 로 데이터 항목 .</target>
        </trans-unit>
        <trans-unit id="8d96200534c0048df6640e4cf4af256ea1db240a" translate="yes" xml:space="preserve">
          <source>The data in rows [</source>
          <target state="translated">행의 데이터 [</target>
        </trans-unit>
        <trans-unit id="5e55cb5b8ff971e3d25d84ce5ea4cfc40a883f7a" translate="yes" xml:space="preserve">
          <source>The data is located in bytes from the buffer's position to its limit. Upon normal completion of a &lt;code&gt;CompletableFuture&lt;/code&gt; returned from this method the buffer will have no remaining bytes. The buffer must not be accessed until after that.</source>
          <target state="translated">데이터는 버퍼의 위치에서 한계까지 바이트 단위로 위치합니다. 이 메서드에서 반환 된 &lt;code&gt;CompletableFuture&lt;/code&gt; 가 정상적으로 완료되면 버퍼에 남은 바이트가 없습니다. 그 이후까지 버퍼에 액세스하면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="5eb3a0a78cbdc7717ba9c1de2fc398e2f71a7e28" translate="yes" xml:space="preserve">
          <source>The data model (a &lt;code&gt;BoundedRangeModel&lt;/code&gt; instance) handles any mathematical issues arising from assigning faulty values. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</source>
          <target state="translated">데이터 모델 ( &lt;code&gt;BoundedRangeModel&lt;/code&gt; 인스턴스)은 잘못된 값 할당으로 인해 발생하는 모든 수학적 문제를 처리합니다. 자세한 내용은 &lt;code&gt;BoundedRangeModel&lt;/code&gt; 문서를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="c16ff464f66cefcc6700a2187d60d019c70a87f0" translate="yes" xml:space="preserve">
          <source>The data model (an instance of &lt;code&gt;BoundedRangeModel&lt;/code&gt;) handles any mathematical issues arising from assigning faulty values. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</source>
          <target state="translated">데이터 모델 ( &lt;code&gt;BoundedRangeModel&lt;/code&gt; 의 인스턴스 )은 잘못된 값을 할당하여 발생하는 모든 수학적 문제를 처리합니다. 자세한 내용은 &lt;code&gt;BoundedRangeModel&lt;/code&gt; 문서를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="2d66eb7d1d46e1566218db7befac92d7588f961c" translate="yes" xml:space="preserve">
          <source>The data model that determines the button's state.</source>
          <target state="translated">버튼의 상태를 결정하는 데이터 모델입니다.</target>
        </trans-unit>
        <trans-unit id="17a5138060e71e3eff9c19fe406f75824b8acd5b" translate="yes" xml:space="preserve">
          <source>The data model that handles the numeric maximum value, minimum value, and current-position value for the slider.</source>
          <target state="translated">슬라이더의 숫자 최대 값, 최소값 및 현재 위치 값을 처리하는 데이터 모델입니다.</target>
        </trans-unit>
        <trans-unit id="51f31baadbc218428addf7697ef6bb549d57a11a" translate="yes" xml:space="preserve">
          <source>The data must be in some image format, such as GIF or JPEG, that is supported by this toolkit.</source>
          <target state="translated">데이터는이 툴킷에서 지원하는 GIF 또는 JPEG와 같은 일부 이미지 형식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="ccd14bf417971205d32d34730394f874813bc350" translate="yes" xml:space="preserve">
          <source>The data object of the field.</source>
          <target state="translated">필드의 데이터 개체입니다.</target>
        </trans-unit>
        <trans-unit id="012d1538f1fcc717fd0a0a691b848b15481c473c" translate="yes" xml:space="preserve">
          <source>The data section of the processing instruction</source>
          <target state="translated">처리 명령의 데이터 섹션</target>
        </trans-unit>
        <trans-unit id="c1a41d512a457c4fb38f02b6d17165be8b79ee8c" translate="yes" xml:space="preserve">
          <source>The data type of the field value.</source>
          <target state="translated">필드 값의 데이터 유형입니다.</target>
        </trans-unit>
        <trans-unit id="7446f71b58bcf85f3bb0c3a01570f0c72ed6d799" translate="yes" xml:space="preserve">
          <source>The data type of this DataBuffer.</source>
          <target state="translated">이 DataBuffer의 데이터 유형입니다.</target>
        </trans-unit>
        <trans-unit id="02aeee805410d06a282eb886902a8ae2cec105ba" translate="yes" xml:space="preserve">
          <source>The datagram is transferred from the byte buffer as if by a regular &lt;a href=&quot;writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; operation.</source>
          <target state="translated">데이터 그램은 일반 &lt;a href=&quot;writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 작업 처럼 바이트 버퍼에서 전송 됩니다.</target>
        </trans-unit>
        <trans-unit id="1dec4275df36c1854d79822ee5f08702fa14c2fd" translate="yes" xml:space="preserve">
          <source>The datagram is transferred from the byte buffer as if by a regular &lt;a href=&quot;writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; operation.</source>
          <target state="translated">데이터 그램은 마치 일반 &lt;a href=&quot;writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 작업을 수행 하는 것처럼 바이트 버퍼에서 전송 됩니다.</target>
        </trans-unit>
        <trans-unit id="a92fe0e7f3a6efb3429af5aa44d3cf2a0ecb4b13" translate="yes" xml:space="preserve">
          <source>The datagram is transferred into the given byte buffer starting at its current position, as if by a regular &lt;a href=&quot;readablebytechannel#read(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; operation. If there are fewer bytes remaining in the buffer than are required to hold the datagram then the remainder of the datagram is silently discarded.</source>
          <target state="translated">데이터 그램은 일반적인 &lt;a href=&quot;readablebytechannel#read(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 작업 처럼 현재 위치에서 시작하여 주어진 바이트 버퍼로 전송됩니다 . 버퍼에 남아있는 바이트가 데이터 그램을 유지하는 데 필요한 것보다 적 으면 나머지 데이터 그램은 자동으로 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="aff3539ad7288dc64dc12b9b5b5e51225eb5c928" translate="yes" xml:space="preserve">
          <source>The datagram is transferred into the given byte buffer starting at its current position, as if by a regular &lt;a href=&quot;readablebytechannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; operation. If there are fewer bytes remaining in the buffer than are required to hold the datagram then the remainder of the datagram is silently discarded.</source>
          <target state="translated">데이터 그램은 마치 일반 &lt;a href=&quot;readablebytechannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 작업 에서처럼 현재 위치에서 시작하여 지정된 바이트 버퍼로 전송됩니다 . 데이터 그램을 유지하는 데 필요한 것보다 버퍼에 남아있는 바이트 수가 적 으면 나머지 데이터 그램은 자동으로 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="24d582cad53c25bb1fd76ac3a0fa2a82ea7fdc17" translate="yes" xml:space="preserve">
          <source>The datagram's source address, or &lt;code&gt;null&lt;/code&gt; if this channel is in non-blocking mode and no datagram was immediately available</source>
          <target state="translated">데이터 그램의 소스 주소. 이 채널이 비 블로킹 모드에 있고 데이터 그램을 즉시 사용할 수없는 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd66a2f8b78bc498f01b4c43e3b2da2dc1e0834e" translate="yes" xml:space="preserve">
          <source>The datatype &lt;code&gt;xdt:dayTimeDuration&lt;/code&gt; is a subtype of &lt;code&gt;xs:duration&lt;/code&gt; whose lexical representation contains only day, hour, minute, and second components. This datatype resides in the namespace &lt;code&gt;http://www.w3.org/2003/11/xpath-datatypes&lt;/code&gt;.</source>
          <target state="translated">데이터 유형 &lt;code&gt;xdt:dayTimeDuration&lt;/code&gt; 은 어휘 표현에 일,시, 분 및 초 구성 요소 만 포함 된 &lt;code&gt;xs:duration&lt;/code&gt; 의 하위 유형입니다 . 이 데이터 유형은 &lt;code&gt;http://www.w3.org/2003/11/xpath-datatypes&lt;/code&gt; 네임 스페이스에 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1f6f601126b253ebe610a2dbd5597d4714c3dc5" translate="yes" xml:space="preserve">
          <source>The datatype &lt;code&gt;xdt:yearMonthDuration&lt;/code&gt; is a subtype of &lt;code&gt;xs:duration&lt;/code&gt; whose lexical representation contains only year and month components. This datatype resides in the namespace &lt;a href=&quot;../xmlconstants#W3C_XPATH_DATATYPE_NS_URI&quot;&gt;&lt;code&gt;XMLConstants.W3C_XPATH_DATATYPE_NS_URI&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">데이터 유형 &lt;code&gt;xdt:yearMonthDuration&lt;/code&gt; 은 어휘 표현에 연도와 월 구성 요소 만 포함 된 &lt;code&gt;xs:duration&lt;/code&gt; 의 하위 유형입니다 . 이 데이터 유형은 &lt;a href=&quot;../xmlconstants#W3C_XPATH_DATATYPE_NS_URI&quot;&gt; &lt;code&gt;XMLConstants.W3C_XPATH_DATATYPE_NS_URI&lt;/code&gt; &lt;/a&gt; 네임 스페이스에 있습니다.</target>
        </trans-unit>
        <trans-unit id="c77e6f71adf1b1e1f486b87e6228fc384160bf79" translate="yes" xml:space="preserve">
          <source>The date and offset do not affect the calculation and will be the same in the result.</source>
          <target state="translated">날짜와 오프셋은 계산에 영향을 미치지 않으며 결과에서 동일합니다.</target>
        </trans-unit>
        <trans-unit id="76281265656763ab45ee0c7d36b85aa33eaf99ac" translate="yes" xml:space="preserve">
          <source>The date component of the instant is dropped during the conversion. This means that the conversion can never fail due to the instant being out of the valid range of dates.</source>
          <target state="translated">전환하는 동안 인스턴트의 날짜 구성 요소가 삭제됩니다. 즉, 유효한 날짜 범위를 벗어난 순간으로 인해 변환에 실패 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0935d4055f87819c65d69b00bd41bacb598e455b" translate="yes" xml:space="preserve">
          <source>The date components should be set to the &quot;zero epoch&quot; value of January 1, 1970 and should not be accessed.</source>
          <target state="translated">날짜 구성 요소는 1970 년 1 월 1 일의 &quot;0 epoch&quot;값으로 설정해야하며 액세스해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="2d6977e22aea69347ff602053e3d840347dc8f4e" translate="yes" xml:space="preserve">
          <source>The date is expressed using three fields:</source>
          <target state="translated">날짜는 세 가지 필드를 사용하여 표현됩니다.</target>
        </trans-unit>
        <trans-unit id="74de0d1e3d82e3986ec00f2b62db03b96d85c46e" translate="yes" xml:space="preserve">
          <source>The date or time format strings are not part of the definition of a calendar, as those must be modifiable or overridable by the user at runtime. Use &lt;a href=&quot;../text/dateformat&quot;&gt;&lt;code&gt;DateFormat&lt;/code&gt;&lt;/a&gt; to format dates.</source>
          <target state="translated">날짜 또는 시간 형식 문자열은 런타임에 사용자가 수정하거나 무시할 수 있어야하므로 달력 정의의 일부가 아닙니다. &lt;a href=&quot;../text/dateformat&quot;&gt; &lt;code&gt;DateFormat&lt;/code&gt; &lt;/a&gt; 을 사용 하여 날짜를 형식화 하십시오 .</target>
        </trans-unit>
        <trans-unit id="6557dfeedd96b1f920b623e989a8b486fd0bf241" translate="yes" xml:space="preserve">
          <source>The date the source was generated</source>
          <target state="translated">소스가 생성 된 날짜</target>
        </trans-unit>
        <trans-unit id="6f3a64cc255670c8d7269d0900809eb182f29844" translate="yes" xml:space="preserve">
          <source>The day of month of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;, from 1 to 31.</source>
          <target state="translated">이 &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 의 날짜입니다 . 1부터 31까지입니다.</target>
        </trans-unit>
        <trans-unit id="6341cf516a426c257f29c6363980da19fa50fc5e" translate="yes" xml:space="preserve">
          <source>The day-of-month must be valid for the month within a leap year. Hence, for February, day 29 is valid.</source>
          <target state="translated">윤년 내에 해당 월의 날짜가 유효해야합니다. 따라서 2 월에는 29 일이 유효합니다.</target>
        </trans-unit>
        <trans-unit id="e236b7cdb2321ccc4dc1f333c4d5a4d610923567" translate="yes" xml:space="preserve">
          <source>The day-of-month must be valid for the month within a leap year. Hence, for month 2 (February), day 29 is valid.</source>
          <target state="translated">윤년 내에 해당 월의 날짜가 유효해야합니다. 따라서 2 월 (2 월)의 경우 29 일이 유효합니다.</target>
        </trans-unit>
        <trans-unit id="a4a0bf6cb6cb52da7a88d253064f19d6bbaab527" translate="yes" xml:space="preserve">
          <source>The day-of-month value must be valid for the year-month.</source>
          <target state="translated">월 값은 해당 월에 유효해야합니다.</target>
        </trans-unit>
        <trans-unit id="d921c6edafb2d37d1c786f95679e37c443203e53" translate="yes" xml:space="preserve">
          <source>The day-of-month.</source>
          <target state="translated">월요일.</target>
        </trans-unit>
        <trans-unit id="27a0a133085f381089155fd312fed76aa39ecb97" translate="yes" xml:space="preserve">
          <source>The day-of-quarter can only be calculated if the day-of-year, month-of-year and year are available.</source>
          <target state="translated">분기는 연도, 월 및 연도를 사용할 수있는 경우에만 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd639b3194b43c8fa09d1e20c2ddaece739d19dd" translate="yes" xml:space="preserve">
          <source>The day-of-week, such as Tuesday.</source>
          <target state="translated">화요일과 같은 요일.</target>
        </trans-unit>
        <trans-unit id="ee88394025012e606d83fcbd6088ac260748de1b" translate="yes" xml:space="preserve">
          <source>The day-of-year in this factory is expressed relative to the start of the proleptic year. The Japanese proleptic year and day-of-year are the same as those in the ISO calendar system. They are not reset when the era changes.</source>
          <target state="translated">이 공장의 일 년은 proleptic 연도의 시작과 관련하여 표현됩니다. 일본의 proleptic 연도 및 일자는 ISO 캘린더 시스템과 동일합니다. 시대가 바뀌더라도 재설정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c38cedc9fdfbe3ac0677cb0cf2faf0a0f17b9ef4" translate="yes" xml:space="preserve">
          <source>The day-of-year in this factory is expressed relative to the start of the year-of-era. This definition changes the normal meaning of day-of-year only in those years where the year-of-era is reset to one due to a change in the era. For example:</source>
          <target state="translated">이 공장의 연도는 연도의 시작과 관련하여 표현됩니다. 이 정의는 시대의 변화로 인해 연도가 1로 재설정되는 연도에서만 일상적인 의미를 변경합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="84655d6a49701a5dd5ce719fc3a2810442727831" translate="yes" xml:space="preserve">
          <source>The day-of-year value 366 is only valid in a leap year.</source>
          <target state="translated">일 값 366은 윤년에만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="8ea8d37df3af7523b59633adef493d9aa58c7633" translate="yes" xml:space="preserve">
          <source>The day-of-year.</source>
          <target state="translated">일.</target>
        </trans-unit>
        <trans-unit id="05eaecddac6892292b3e2f44b8678131b32ba0b1" translate="yes" xml:space="preserve">
          <source>The de-serialized object stream.</source>
          <target state="translated">직렬화 해제 된 객체 스트림</target>
        </trans-unit>
        <trans-unit id="9984a65133bd7cfb7c869dfc5de68f3cce753e9b" translate="yes" xml:space="preserve">
          <source>The decapitalized version of the string.</source>
          <target state="translated">대문자로 된 문자열 버전입니다.</target>
        </trans-unit>
        <trans-unit id="fa52962577498fc2664e907faf54c5feae2e82ee" translate="yes" xml:space="preserve">
          <source>The decimal separator will only appear if a digit follows it</source>
          <target state="translated">소수점 구분 기호는 숫자가 뒤에 오는 경우에만 나타납니다.</target>
        </trans-unit>
        <trans-unit id="72f23f07a3ff86b0b72529ee14d23b57f142e88e" translate="yes" xml:space="preserve">
          <source>The decimation subsampling to be applied in the horizontal direction.</source>
          <target state="translated">수평 방향으로 적용 할 데시 메이션 서브 샘플링입니다.</target>
        </trans-unit>
        <trans-unit id="daea7aca56c46cf4aef47ef8c4efe93967b8427a" translate="yes" xml:space="preserve">
          <source>The decimation subsampling to be applied in the horizontal direction. By default, the value is &lt;code&gt;1&lt;/code&gt;. The value must not be negative or 0.</source>
          <target state="translated">수평 방향으로 적용되는 데시 메이션 서브 샘플링. 기본적으로 값은 &lt;code&gt;1&lt;/code&gt; 입니다. 값은 음수 또는 0이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="dca7c5d49d2f82950867268dcb37f49fade4745e" translate="yes" xml:space="preserve">
          <source>The decimation subsampling to be applied in the vertical direction.</source>
          <target state="translated">수직 방향으로 적용 할 데시 메이션 서브 샘플링입니다.</target>
        </trans-unit>
        <trans-unit id="006024692a78673c0c0e79f925430f1877ff3c44" translate="yes" xml:space="preserve">
          <source>The decimation subsampling to be applied in the vertical direction. By default, the value is &lt;code&gt;1&lt;/code&gt;. The value must not be negative or 0.</source>
          <target state="translated">수직 방향으로 적용되는 데시 메이션 서브 샘플링. 기본적으로 값은 &lt;code&gt;1&lt;/code&gt; 입니다. 입니다. 값은 음수 또는 0이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="019eb14fb5663816d15d7023596fc81ad7a5826d" translate="yes" xml:space="preserve">
          <source>The declared type of the attribute is the String returned by &lt;a href=&quot;../mbeanattributeinfo#getType()&quot;&gt;&lt;code&gt;MBeanAttributeInfo.getType()&lt;/code&gt;&lt;/a&gt;. A value is compatible with this type if one of the following is true:</source>
          <target state="translated">선언 된 속성 유형은 &lt;a href=&quot;../mbeanattributeinfo#getType()&quot;&gt; &lt;code&gt;MBeanAttributeInfo.getType()&lt;/code&gt; &lt;/a&gt; 의해 리턴 된 문자열 입니다. 다음 중 하나에 해당하면 값이이 유형과 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="b89ecc31ea13d452408cdb763636a71209285d8c" translate="yes" xml:space="preserve">
          <source>The declared type of the attribute is the String returned by &lt;a href=&quot;../mbeanattributeinfo#getType--&quot;&gt;&lt;code&gt;MBeanAttributeInfo.getType()&lt;/code&gt;&lt;/a&gt;. A value is compatible with this type if one of the following is true:</source>
          <target state="translated">속성의 선언 된 타입은 &lt;a href=&quot;../mbeanattributeinfo#getType--&quot;&gt; &lt;code&gt;MBeanAttributeInfo.getType()&lt;/code&gt; &lt;/a&gt; 의해 돌려 주어진 String 입니다. 다음 중 하나에 해당하면 값이이 유형과 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="535c4d716a707dc9c251826b8415c6348f2fe8af" translate="yes" xml:space="preserve">
          <source>The decoded authority component of this URI, or &lt;code&gt;null&lt;/code&gt; if the authority is undefined</source>
          <target state="translated">이 URI의 디코드 된 권한 컴퍼넌트. 또는 권한이 정의되어 있지 않은 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c714b16e464134076f2a8654a0032155cf7da549" translate="yes" xml:space="preserve">
          <source>The decoded fragment component of this URI, or &lt;code&gt;null&lt;/code&gt; if the fragment is undefined</source>
          <target state="translated">이 URI의 디코드 된 프래그먼트 컴퍼넌트 . 프래그먼트가 정의되어 있지 않은 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a6e006f9c9f2005028fa416f544de4838e11f54" translate="yes" xml:space="preserve">
          <source>The decoded path component of this URI, or &lt;code&gt;null&lt;/code&gt; if the path is undefined</source>
          <target state="translated">이 URI의 디코드 된 패스 컴퍼넌트 . 패스가 정의되어 있지 않은 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b65588b2698dd5f5945bfa151383f0905c62a633" translate="yes" xml:space="preserve">
          <source>The decoded query component of this URI, or &lt;code&gt;null&lt;/code&gt; if the query is undefined</source>
          <target state="translated">이 URI의 디코드 된 쿼리 컴퍼넌트 . 쿼리가 정의되어 있지 않은 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0fec59c98565c6479cff461d8ddfce7807920d6" translate="yes" xml:space="preserve">
          <source>The decoded scheme-specific part of this URI (never &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">이 URI의 디코드 된 방식 특정 부분 ( &lt;code&gt;null&lt;/code&gt; 이 아님) 아님)</target>
        </trans-unit>
        <trans-unit id="8435f54fb31ea388cc6e458b15be2994395e323d" translate="yes" xml:space="preserve">
          <source>The decoded user-information component of this URI, or &lt;code&gt;null&lt;/code&gt; if the user information is undefined</source>
          <target state="translated">이 URI의 디코드 된 사용자 정보 컴포넌트 . 사용자 정보가 정의되어 있지 않은 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac3fac27bd9d620e1c512053bc32fe4cd1c8176e" translate="yes" xml:space="preserve">
          <source>The decoration applied at the intersection of two path segments and at the intersection of the endpoints of a subpath that is closed using &lt;a href=&quot;geom/pathiterator#SEG_CLOSE&quot;&gt;&lt;code&gt;SEG_CLOSE&lt;/code&gt;&lt;/a&gt;. The three different decorations are: &lt;a href=&quot;#JOIN_BEVEL&quot;&gt;&lt;code&gt;JOIN_BEVEL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#JOIN_MITER&quot;&gt;&lt;code&gt;JOIN_MITER&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#JOIN_ROUND&quot;&gt;&lt;code&gt;JOIN_ROUND&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 경로 세그먼트의 교차점과 &lt;a href=&quot;geom/pathiterator#SEG_CLOSE&quot;&gt; &lt;code&gt;SEG_CLOSE&lt;/code&gt; 를&lt;/a&gt; 사용하여 닫힌 하위 경로의 끝점 교차점에 적용된 장식 입니다. 세 가지 장식은 &lt;a href=&quot;#JOIN_BEVEL&quot;&gt; &lt;code&gt;JOIN_BEVEL&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#JOIN_MITER&quot;&gt; &lt;code&gt;JOIN_MITER&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#JOIN_ROUND&quot;&gt; &lt;code&gt;JOIN_ROUND&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c5cb0d3ed0ea66fcc89b94264a83bdc770f2c4bc" translate="yes" xml:space="preserve">
          <source>The decoration applied to the ends of unclosed subpaths and dash segments. Subpaths that start and end on the same point are still considered unclosed if they do not have a CLOSE segment. See &lt;a href=&quot;geom/pathiterator#SEG_CLOSE&quot;&gt;&lt;code&gt;SEG_CLOSE&lt;/code&gt;&lt;/a&gt; for more information on the CLOSE segment. The three different decorations are: &lt;a href=&quot;#CAP_BUTT&quot;&gt;&lt;code&gt;CAP_BUTT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#CAP_ROUND&quot;&gt;&lt;code&gt;CAP_ROUND&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#CAP_SQUARE&quot;&gt;&lt;code&gt;CAP_SQUARE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">닫히지 않은 하위 경로 및 대시 세그먼트의 끝에 적용된 장식입니다. 동일한 지점에서 시작하고 끝나는 하위 경로는 CLOSE 세그먼트가없는 경우 여전히 닫히지 않은 것으로 간주됩니다. CLOSE 세그먼트에 대한 자세한 내용 은 &lt;a href=&quot;geom/pathiterator#SEG_CLOSE&quot;&gt; &lt;code&gt;SEG_CLOSE&lt;/code&gt; &lt;/a&gt; 를 참조하세요 . 세 가지 장식은 &lt;a href=&quot;#CAP_BUTT&quot;&gt; &lt;code&gt;CAP_BUTT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#CAP_ROUND&quot;&gt; &lt;code&gt;CAP_ROUND&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#CAP_SQUARE&quot;&gt; &lt;code&gt;CAP_SQUARE&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="486c7fc3e58a191d5a6f43fef5a6dc9c223b76a8" translate="yes" xml:space="preserve">
          <source>The decrease button.</source>
          <target state="translated">감소 버튼.</target>
        </trans-unit>
        <trans-unit id="8403e6924baf5b73f66f3e65065579f4c8498d6d" translate="yes" xml:space="preserve">
          <source>The deepest common ancestor container of the Range's two boundary-points.</source>
          <target state="translated">Range의 두 경계 지점 중 가장 깊은 공통 조상 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="11bcd47d048fab47ddc17cf724966bb7d948b201" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;AbstractView&lt;/code&gt; for this &lt;code&gt;Document&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if none available.</source>
          <target state="translated">이 &lt;code&gt;Document&lt;/code&gt; 대한 기본 &lt;code&gt;AbstractView&lt;/code&gt; 또는 사용할 수 &lt;code&gt;null&lt;/code&gt; 경우 null 입니다.</target>
        </trans-unit>
        <trans-unit id="30837d5c7768fdf6726a4e08bf311add8b130dc2" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;BasicLabelUI&lt;/code&gt; instance.</source>
          <target state="translated">기본 &lt;code&gt;BasicLabelUI&lt;/code&gt; 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="86913442ea1fe63a9828fba7907cfdeab60140ef" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;BasicLabelUI&lt;/code&gt; instance. This field might not be used. To change the default instance use a subclass which overrides the &lt;code&gt;createUI&lt;/code&gt; method, and place that class name in defaults table under the key &quot;LabelUI&quot;.</source>
          <target state="translated">기본 &lt;code&gt;BasicLabelUI&lt;/code&gt; 인스턴스입니다. 이 필드는 사용되지 않을 수 있습니다. 기본 인스턴스를 변경하려면 &lt;code&gt;createUI&lt;/code&gt; 메서드 를 재정의하는 하위 클래스를 사용하고 해당 클래스 이름을 &quot;LabelUI&quot;키 아래의 defaults 테이블에 배치합니다.</target>
        </trans-unit>
        <trans-unit id="7907e6f214950bddb5f40a37068dac0948eafa5a" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;CertPathBuilder&lt;/code&gt; type can be changed by setting the value of the &lt;code&gt;certpathbuilder.type&lt;/code&gt; security property to the desired type.</source>
          <target state="translated">&lt;code&gt;certpathbuilder.type&lt;/code&gt; 보안 특성 값을 원하는 유형 으로 설정하여 기본 &lt;code&gt;CertPathBuilder&lt;/code&gt; 유형을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="169cb40e6f0b3986734e5949791939b89c4e99ff" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;CertPathBuilder&lt;/code&gt; type can be used by applications that do not want to use a hard-coded type when calling one of the &lt;code&gt;getInstance&lt;/code&gt; methods, and want to provide a default type in case a user does not specify its own.</source>
          <target state="translated">&lt;code&gt;getInstance&lt;/code&gt; 메소드 중 하나를 호출 할 때 하드 코딩 된 유형을 사용하지 않고 사용자가 고유 한 유형을 지정하지 않은 경우 기본 유형을 제공하려는 애플리케이션 은 기본 &lt;code&gt;CertPathBuilder&lt;/code&gt; 유형을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fce3e36c470100ba0f05cb22ad90d617c81b37a2" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;CertPathValidator&lt;/code&gt; type can be changed by setting the value of the &lt;code&gt;certpathvalidator.type&lt;/code&gt; security property to the desired type.</source>
          <target state="translated">&lt;code&gt;certpathvalidator.type&lt;/code&gt; 보안 특성 의 값을 원하는 유형 으로 설정하여 기본 &lt;code&gt;CertPathValidator&lt;/code&gt; 유형을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cfcb8b7d4a8f23bc853d6960c44a686f58e177ec" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;CertPathValidator&lt;/code&gt; type can be used by applications that do not want to use a hard-coded type when calling one of the &lt;code&gt;getInstance&lt;/code&gt; methods, and want to provide a default type in case a user does not specify its own.</source>
          <target state="translated">기본 &lt;code&gt;CertPathValidator&lt;/code&gt; 유형은 &lt;code&gt;getInstance&lt;/code&gt; 메소드 중 하나를 호출 할 때 하드 코딩 된 유형을 사용하지 않고 사용자가 고유 한 유형을 지정하지 않은 경우 기본 유형을 제공하려는 응용 프로그램에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d07184c65b7ccd4f391807571d9702f5edb70ffc" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;CertStore&lt;/code&gt; type can be changed by setting the value of the &lt;code&gt;certstore.type&lt;/code&gt; security property to the desired type.</source>
          <target state="translated">&lt;code&gt;certstore.type&lt;/code&gt; 보안 특성 의 값을 원하는 유형 으로 설정하여 기본 &lt;code&gt;CertStore&lt;/code&gt; 유형을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4b2bb65040f2ee372eaa243409c208749e5283a2" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;CertStore&lt;/code&gt; type can be used by applications that do not want to use a hard-coded type when calling one of the &lt;code&gt;getInstance&lt;/code&gt; methods, and want to provide a default &lt;code&gt;CertStore&lt;/code&gt; type in case a user does not specify its own.</source>
          <target state="translated">기본 &lt;code&gt;CertStore&lt;/code&gt; 유형은 &lt;code&gt;getInstance&lt;/code&gt; 메소드 중 하나를 호출 할 때 하드 코딩 된 유형을 사용하지 않으려 는 사용자가 사용할 수 있으며 사용자가 자체적으로 지정하지 않은 경우 기본 &lt;code&gt;CertStore&lt;/code&gt; 유형 을 제공하려고합니다 .</target>
        </trans-unit>
        <trans-unit id="3658e097758a0f6469d61aa8d03263cb20606ed0" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Cursor&lt;/code&gt; to use with a copy operation indicating that a drop is currently allowed.</source>
          <target state="translated">복사 작업에 사용할 기본 &lt;code&gt;Cursor&lt;/code&gt; 는 현재 드롭이 허용됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b43b2228153185999144927e37e3d73109520f19" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Cursor&lt;/code&gt; to use with a copy operation indicating that a drop is currently allowed. &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">복사 작업에 사용할 기본 &lt;code&gt;Cursor&lt;/code&gt; 는 현재 드롭이 허용됨을 나타냅니다. &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 &lt;code&gt;null&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="ad9cc7320c0b58c1ebe1c9e5bb692dae6af2cd66" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Cursor&lt;/code&gt; to use with a copy operation indicating that a drop is currently not allowed.</source>
          <target state="translated">현재 드롭이 허용되지 않음을 나타내는 복사 작업과 함께 사용할 기본 &lt;code&gt;Cursor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="16f1950e4b1bfd7eb291bfcfc0a9b53f0e184ebd" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Cursor&lt;/code&gt; to use with a copy operation indicating that a drop is currently not allowed. &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">현재 드롭이 허용되지 않음을 나타내는 복사 작업과 함께 사용할 기본 &lt;code&gt;Cursor&lt;/code&gt; 입니다. &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 &lt;code&gt;null&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="9f8d0ae1f7a82558b8c506a8c545167142d7444f" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Cursor&lt;/code&gt; to use with a link operation indicating that a drop is currently allowed.</source>
          <target state="translated">드롭이 현재 허용됨을 나타내는 링크 작업과 함께 사용할 기본 &lt;code&gt;Cursor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ba46f3d038b9ea49d10d094aa1b2a8f722f222ff" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Cursor&lt;/code&gt; to use with a link operation indicating that a drop is currently allowed. &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">드롭이 현재 허용됨을 나타내는 링크 작업과 함께 사용할 기본 &lt;code&gt;Cursor&lt;/code&gt; 입니다. &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 &lt;code&gt;null&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="3d4701e4f78c35368002b41b70503f6387517e1d" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Cursor&lt;/code&gt; to use with a link operation indicating that a drop is currently not allowed.</source>
          <target state="translated">드롭이 현재 허용되지 않음을 나타내는 링크 작업과 함께 사용할 기본 &lt;code&gt;Cursor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e07007881095c96b39d9a25bcb8acd4fbd924691" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Cursor&lt;/code&gt; to use with a link operation indicating that a drop is currently not allowed. &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">드롭이 현재 허용되지 않음을 나타내는 링크 작업과 함께 사용할 기본 &lt;code&gt;Cursor&lt;/code&gt; 입니다. &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 &lt;code&gt;null&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="fee6dcd7e807ccec7d4fe0ebad8f155829b6dc35" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Cursor&lt;/code&gt; to use with a move operation indicating that a drop is currently allowed.</source>
          <target state="translated">현재 드롭이 허용됨을 나타내는 이동 작업에 사용할 기본 &lt;code&gt;Cursor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="afa404d518db25dfb647e0c1761617e1b4e9bd38" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Cursor&lt;/code&gt; to use with a move operation indicating that a drop is currently allowed. &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">현재 드롭이 허용됨을 나타내는 이동 작업에 사용할 기본 &lt;code&gt;Cursor&lt;/code&gt; 입니다. &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 &lt;code&gt;null&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="a7f609e13441304f94d770b78dfd8099478328e0" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Cursor&lt;/code&gt; to use with a move operation indicating that a drop is currently not allowed.</source>
          <target state="translated">현재 드롭이 허용되지 않음을 나타내는 이동 작업에 사용할 기본 &lt;code&gt;Cursor&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5d4682556d25d14087c6f7a8c1809893f6689041" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Cursor&lt;/code&gt; to use with a move operation indicating that a drop is currently not allowed. &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">현재 드롭이 허용되지 않음을 나타내는 이동 작업에 사용할 기본 &lt;code&gt;Cursor&lt;/code&gt; 입니다. &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 &lt;code&gt;null&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="b6809259d2c24572805deaea0aaa64b5b5a5ebbf" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;IIOParamController&lt;/code&gt; that will be used to provide settings for this &lt;code&gt;IIOParam&lt;/code&gt; object when the &lt;code&gt;activateController&lt;/code&gt; method is called.</source>
          <target state="translated">&lt;code&gt;activateController&lt;/code&gt; 메서드가 호출 될 때이 &lt;code&gt;IIOParam&lt;/code&gt; 개체 에 대한 설정을 제공하는 데 사용되는 기본 &lt;code&gt;IIOParamController&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="cbc93f4ae8e8274df32c8bc329a11232de678eb4" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;IIOParamController&lt;/code&gt; that will be used to provide settings for this &lt;code&gt;IIOParam&lt;/code&gt; object when the &lt;code&gt;activateController&lt;/code&gt; method is called. This default should be set by subclasses that choose to provide their own default controller, usually a GUI, for setting parameters.</source>
          <target state="translated">&lt;code&gt;activateController&lt;/code&gt; 메소드가 호출 될 때이 &lt;code&gt;IIOParam&lt;/code&gt; 오브젝트 에 대한 설정을 제공하는 데 사용될 기본 &lt;code&gt;IIOParamController&lt;/code&gt; . 이 기본값은 매개 변수 설정을 위해 자체 기본 제어기 (일반적으로 GUI)를 제공하도록 선택한 서브 클래스에 의해 설정되어야합니다.</target>
        </trans-unit>
        <trans-unit id="57e32562b6e8f186f77339fc053477ffca1f346a" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;JPEGImageReadParam&lt;/code&gt; returned by the &lt;code&gt;getDefaultReadParam&lt;/code&gt; method of the builtin JPEG reader contains no tables. Default tables may be obtained from the table classes &lt;a href=&quot;jpegqtable&quot;&gt;&lt;code&gt;JPEGQTable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jpeghuffmantable&quot;&gt;&lt;code&gt;JPEGHuffmanTable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">내장 JPEG 리더 의 &lt;code&gt;getDefaultReadParam&lt;/code&gt; 메소드가 리턴 한 기본 &lt;code&gt;JPEGImageReadParam&lt;/code&gt; 에 테이블이 없습니다. 기본 테이블은 &lt;a href=&quot;jpegqtable&quot;&gt; &lt;code&gt;JPEGQTable&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;jpeghuffmantable&quot;&gt; &lt;code&gt;JPEGHuffmanTable&lt;/code&gt; &lt;/a&gt; 테이블 클래스에서 얻을 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="98b2406800a67217fbd1a9f281c566631046db38" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;JPEGImageWriteParam&lt;/code&gt; returned by the &lt;code&gt;getDefaultWriteParam&lt;/code&gt; method of the writer contains no tables. Default tables are included in the default &lt;code&gt;IIOMetadata&lt;/code&gt; objects returned by the writer.</source>
          <target state="translated">라이터 의 &lt;code&gt;getDefaultWriteParam&lt;/code&gt; 메소드에 의해 리턴 된 기본 &lt;code&gt;JPEGImageWriteParam&lt;/code&gt; 에는 테이블이 없습니다. 기본 테이블은 기록기에서 반환 한 기본 &lt;code&gt;IIOMetadata&lt;/code&gt; 개체에 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="6cc62867c9132e438ddfb2a7501168695f8b998a" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;MenuItem&lt;/code&gt; object embodies a simple labeled menu item.</source>
          <target state="translated">기본 &lt;code&gt;MenuItem&lt;/code&gt; 개체는 레이블이 지정된 간단한 메뉴 항목을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="13033bfbbd59726c93ec53d0629b9b6111d0a25c" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;MetalLabelUI&lt;/code&gt; instance.</source>
          <target state="translated">기본 &lt;code&gt;MetalLabelUI&lt;/code&gt; 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="ac7758620e0e2ef6c0f8fb769ae81e5fb4422416" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;MetalLabelUI&lt;/code&gt; instance. This field might not be used. To change the default instance use a subclass which overrides the &lt;code&gt;createUI&lt;/code&gt; method, and place that class name in defaults table under the key &quot;LabelUI&quot;.</source>
          <target state="translated">기본 &lt;code&gt;MetalLabelUI&lt;/code&gt; 인스턴스입니다. 이 필드는 사용되지 않을 수 있습니다. 기본 인스턴스를 변경하려면 &lt;code&gt;createUI&lt;/code&gt; 메서드 를 재정의하는 하위 클래스를 사용하고 해당 클래스 이름을 &quot;LabelUI&quot;키 아래의 defaults 테이블에 배치합니다.</target>
        </trans-unit>
        <trans-unit id="995ebdbf9779bc7f77f4a6e8d49122ee3bdaf7ae" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Policy&lt;/code&gt; implementation can be changed by setting the value of the &lt;code&gt;auth.policy.provider&lt;/code&gt; security property to the fully qualified name of the desired &lt;code&gt;Policy&lt;/code&gt; implementation class.</source>
          <target state="translated">&lt;code&gt;auth.policy.provider&lt;/code&gt; 보안 특성 값을 원하는 &lt;code&gt;Policy&lt;/code&gt; 구현 클래스 의 완전한 이름 으로 설정하여 기본 &lt;code&gt;Policy&lt;/code&gt; 구현을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e63e9c0f8cf09f6a10ed1a8634fc87ea2f97b334" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;ScriptContext&lt;/code&gt; of the &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="translated">디폴트 &lt;code&gt;ScriptContext&lt;/code&gt; 의 &lt;code&gt;ScriptEngine&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fc29a454e860e83b3bc76ddafa6475f0a359fc0" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;ScriptContext&lt;/code&gt; of this &lt;code&gt;AbstractScriptEngine&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;AbstractScriptEngine&lt;/code&gt; 의 디폴트 &lt;code&gt;ScriptContext&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15f8b0106378721dc2a2a958c68175041f8a0af7" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;SyncProvider&lt;/code&gt; object provided with the reference implementation uses the following name:</source>
          <target state="translated">참조 구현과 함께 제공되는 기본 &lt;code&gt;SyncProvider&lt;/code&gt; 객체는 다음 이름을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="549984e5ac51caa6cbbf5e4edb304bf3b73af399" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;TimeZone&lt;/code&gt; created from the ID is cached, and its clone is returned. The &lt;code&gt;user.timezone&lt;/code&gt; property value is set to the ID upon return.</source>
          <target state="translated">ID에서 생성 된 기본 &lt;code&gt;TimeZone&lt;/code&gt; 이 캐시되고 복제본이 반환됩니다. &lt;code&gt;user.timezone&lt;/code&gt; 속성 값이 반환시 ID로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="0c8443cf335675a0c582be63d3d7118c598efe59" translate="yes" xml:space="preserve">
          <source>The default GSSManager instance includes support for the Kerberos v5 mechanism. When this mechanism (&quot;1.2.840.113554.1.2.2&quot;) is indicated, the returned list will contain at least the following nametypes: &lt;a href=&quot;gssname#NT_HOSTBASED_SERVICE&quot;&gt;&lt;code&gt;GSSName.NT_HOSTBASED_SERVICE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;gssname#NT_EXPORT_NAME&quot;&gt;&lt;code&gt;GSSName.NT_EXPORT_NAME&lt;/code&gt;&lt;/a&gt;, and the Kerberos v5 specific Oid &quot;1.2.840.113554.1.2.2.1&quot;. The namespace for the Oid &quot;1.2.840.113554.1.2.2.1&quot; is defined in RFC 1964.</source>
          <target state="translated">기본 GSSManager 인스턴스에는 Kerberos v5 메커니즘에 대한 지원이 포함됩니다. 이 메커니즘 ( &quot;1.2.840.113554.1.2.2은&quot;) 표시되어있는 경우, 반환 된 목록은 최소한 다음 nametypes 포함 &lt;a href=&quot;gssname#NT_HOSTBASED_SERVICE&quot;&gt; &lt;code&gt;GSSName.NT_HOSTBASED_SERVICE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;gssname#NT_EXPORT_NAME&quot;&gt; &lt;code&gt;GSSName.NT_EXPORT_NAME&lt;/code&gt; &lt;/a&gt; 및 커버 로스 V5의 특정 Oid에 &quot;1.2.840.113554.1.2.2.1을 &quot;. Oid &quot;1.2.840.113554.1.2.2.1&quot;의 네임 스페이스는 RFC 1964에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7558b8fd87dac67a93b4b5a863a3d5d787f55f22" translate="yes" xml:space="preserve">
          <source>The default KeyboardFocusManager for AWT applications.</source>
          <target state="translated">AWT 애플리케이션의 기본 KeyboardFocusManager입니다.</target>
        </trans-unit>
        <trans-unit id="5c2e2d7187497fa45a3c7c2fad24ca94b3790bc1" translate="yes" xml:space="preserve">
          <source>The default KeyboardFocusManager for AWT applications. Focus traversal is done in response to a Component's focus traversal keys, and using a Container's FocusTraversalPolicy.</source>
          <target state="translated">AWT 애플리케이션의 기본 KeyboardFocusManager입니다. 포커스 순회는 컴포넌트의 포커스 순회 키에 대한 응답으로 수행되고 컨테이너의 FocusTraversalPolicy를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="818f0079791e30b3a10d2a0c367af44f6cae9ead" translate="yes" xml:space="preserve">
          <source>The default LoggerFinder using &lt;code&gt;java.util.logging&lt;/code&gt; as the backend maps &lt;code&gt;System.Logger&lt;/code&gt; levels to &lt;a href=&quot;../../../java.logging/java/util/logging/level&quot;&gt;java.util.logging&lt;/a&gt; levels of corresponding severity - as described in &lt;a href=&quot;system.logger.level&quot;&gt;&lt;code&gt;Logger.Level&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;java.util.logging&lt;/code&gt; 을 백엔드로 사용하는 기본 LoggerFinder 는 &lt;a href=&quot;system.logger.level&quot;&gt; &lt;code&gt;Logger.Level&lt;/code&gt; 에&lt;/a&gt; 설명 된대로 &lt;code&gt;System.Logger&lt;/code&gt; 수준을 해당 심각도의 &lt;a href=&quot;../../../java.logging/java/util/logging/level&quot;&gt;java.util.logging&lt;/a&gt; 수준에 매핑 합니다.</target>
        </trans-unit>
        <trans-unit id="bc178b2b7fcbaa59815fd1a3a11450a5e3377766" translate="yes" xml:space="preserve">
          <source>The default Spinner UI delegate.</source>
          <target state="translated">기본 Spinner UI 대리자입니다.</target>
        </trans-unit>
        <trans-unit id="b3f533112de2196d0d20c8281361698a9b394ccf" translate="yes" xml:space="preserve">
          <source>The default Swing logic will not do an alpha blended drag animation if the return is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">반환 값이 &lt;code&gt;null&lt;/code&gt; 인 경우 기본 스윙 로직은 알파 블렌드 드래그 애니메이션을 수행하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="98b80f1d6ce18945f617c88a8c5bb74f2f717d2f" translate="yes" xml:space="preserve">
          <source>The default TrustManager can be changed at runtime by setting the value of the &lt;code&gt;ssl.TrustManagerFactory.algorithm&lt;/code&gt; security property to the desired algorithm name.</source>
          <target state="translated">&lt;code&gt;ssl.TrustManagerFactory.algorithm&lt;/code&gt; 보안 특성 값을 원하는 알고리즘 이름 으로 설정하여 런타임시 기본 TrustManager를 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a9ea205ce27d7ff0a86a3ce83ad4be2fbb167fb0" translate="yes" xml:space="preserve">
          <source>The default action for malformed-input and unmappable-character errors is to &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;report&lt;/a&gt; them. The malformed-input error action may be changed via the &lt;a href=&quot;#onMalformedInput(java.nio.charset.CodingErrorAction)&quot;&gt;&lt;code&gt;onMalformedInput&lt;/code&gt;&lt;/a&gt; method; the unmappable-character action may be changed via the &lt;a href=&quot;#onUnmappableCharacter(java.nio.charset.CodingErrorAction)&quot;&gt;&lt;code&gt;onUnmappableCharacter&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">잘못된 입력 및 매핑 할 수없는 문자 오류에 대한 기본 조치는이를 &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;보고&lt;/a&gt; 하는 것입니다. 잘못된 입력 오류 조치는 &lt;a href=&quot;#onMalformedInput(java.nio.charset.CodingErrorAction)&quot;&gt; &lt;code&gt;onMalformedInput&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 변경 될 수 있습니다 . 매핑 할 수없는 문자 작업은 &lt;a href=&quot;#onUnmappableCharacter(java.nio.charset.CodingErrorAction)&quot;&gt; &lt;code&gt;onUnmappableCharacter&lt;/code&gt; &lt;/a&gt; 메서드 를 통해 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="065207c3af02f55adc01e9d832de92a7ef8b9126" translate="yes" xml:space="preserve">
          <source>The default action for malformed-input and unmappable-character errors is to &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;report&lt;/a&gt; them. The malformed-input error action may be changed via the &lt;a href=&quot;charsetdecoder#onMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;onMalformedInput&lt;/code&gt;&lt;/a&gt; method; the unmappable-character action may be changed via the &lt;a href=&quot;charsetdecoder#onUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;onUnmappableCharacter&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">잘못된 입력 및 매핑 할 수없는 문자 오류에 대한 기본 조치는 오류를 &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;보고&lt;/a&gt; 하는 것입니다. 잘못된 입력 오류 조치는 &lt;a href=&quot;charsetdecoder#onMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;onMalformedInput&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 변경 될 수 있습니다 . 매핑 할 수없는 캐릭터 액션은 &lt;a href=&quot;charsetdecoder#onUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;onUnmappableCharacter&lt;/code&gt; &lt;/a&gt; 를 통해 변경 될 수 있습니다 메서드 .</target>
        </trans-unit>
        <trans-unit id="ec62c969eb133dfbc9c988f11f12e4deac10163e" translate="yes" xml:space="preserve">
          <source>The default action for malformed-input and unmappable-character errors is to &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;report&lt;/a&gt; them. The malformed-input error action may be changed via the &lt;a href=&quot;charsetencoder#onMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;onMalformedInput&lt;/code&gt;&lt;/a&gt; method; the unmappable-character action may be changed via the &lt;a href=&quot;charsetencoder#onUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;onUnmappableCharacter&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">잘못된 입력 및 매핑 할 수없는 문자 오류에 대한 기본 조치는 오류를 &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;보고&lt;/a&gt; 하는 것입니다. 잘못된 입력 오류 조치는 &lt;a href=&quot;charsetencoder#onMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;onMalformedInput&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 변경 될 수 있습니다 . 매핑 할 수없는 캐릭터 액션은 &lt;a href=&quot;charsetencoder#onUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;onUnmappableCharacter&lt;/code&gt; &lt;/a&gt; 를 통해 변경 될 수 있습니다 메서드 .</target>
        </trans-unit>
        <trans-unit id="520c162f84768dd2a7733a9b74d66443b2f414c8" translate="yes" xml:space="preserve">
          <source>The default action for visit methods.</source>
          <target state="translated">방문 방법에 대한 기본 작업입니다.</target>
        </trans-unit>
        <trans-unit id="9c3c403a4f09194e1102b4853284882f0214c7f4" translate="yes" xml:space="preserve">
          <source>The default action for visit methods. The implementation in this class just returns &lt;a href=&quot;simpleannotationvaluevisitor6#DEFAULT_VALUE&quot;&gt;&lt;code&gt;DEFAULT_VALUE&lt;/code&gt;&lt;/a&gt;; subclasses will commonly override this method.</source>
          <target state="translated">방문 방법에 대한 기본 동작입니다. 이 클래스의 구현은 &lt;a href=&quot;simpleannotationvaluevisitor6#DEFAULT_VALUE&quot;&gt; &lt;code&gt;DEFAULT_VALUE&lt;/code&gt; 를&lt;/a&gt; 반환합니다. . 서브 클래스는 일반적으로이 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="338077b1a922572e323ce56edddf01210e486e6c" translate="yes" xml:space="preserve">
          <source>The default action for visit methods. The implementation in this class just returns &lt;a href=&quot;simpleelementvisitor6#DEFAULT_VALUE&quot;&gt;&lt;code&gt;DEFAULT_VALUE&lt;/code&gt;&lt;/a&gt;; subclasses will commonly override this method.</source>
          <target state="translated">방문 방법에 대한 기본 동작입니다. 이 클래스의 구현은 &lt;a href=&quot;simpleelementvisitor6#DEFAULT_VALUE&quot;&gt; &lt;code&gt;DEFAULT_VALUE&lt;/code&gt; 를&lt;/a&gt; 반환합니다. . 서브 클래스는 일반적으로이 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="d1ae51af628026a026f4ab18a6a94b87755a9969" translate="yes" xml:space="preserve">
          <source>The default action for visit methods. The implementation in this class just returns &lt;a href=&quot;simpletypevisitor6#DEFAULT_VALUE&quot;&gt;&lt;code&gt;DEFAULT_VALUE&lt;/code&gt;&lt;/a&gt;; subclasses will commonly override this method.</source>
          <target state="translated">방문 방법에 대한 기본 동작입니다. 이 클래스의 구현은 &lt;a href=&quot;simpletypevisitor6#DEFAULT_VALUE&quot;&gt; &lt;code&gt;DEFAULT_VALUE&lt;/code&gt; 를&lt;/a&gt; 반환합니다. . 서브 클래스는 일반적으로이 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="44ed9b9b51276299575b52bfba8f7ee4daac3019" translate="yes" xml:space="preserve">
          <source>The default advances of single characters are not appropriate for some character sequences, for example &quot;To&quot; or &quot;AWAY&quot;. Without kerning the adjacent characters appear to be separated by too much space. Kerning causes selected sequences of characters to be spaced differently for a more pleasing visual appearance.</source>
          <target state="translated">단일 문자의 기본 확장은 &quot;To&quot;또는 &quot;AWAY&quot;와 같은 일부 문자 시퀀스에 적합하지 않습니다. 커닝이 없으면 인접한 문자가 너무 많은 공간으로 분리 된 것처럼 보입니다. 커닝을 사용하면 선택한 문자 시퀀스의 간격이 다르게 지정되어 시각적 모양이 더 좋아집니다.</target>
        </trans-unit>
        <trans-unit id="56fdc967835d45d8075eb4123eec44af83d8c83e" translate="yes" xml:space="preserve">
          <source>The default algorithm can be changed at runtime by setting the value of the &lt;code&gt;ssl.KeyManagerFactory.algorithm&lt;/code&gt; security property to the desired algorithm name.</source>
          <target state="translated">&lt;code&gt;ssl.KeyManagerFactory.algorithm&lt;/code&gt; 의 값을 설정하여 런타임시 기본 알고리즘을 변경할 수 있습니다. 보안 특성 원하는 알고리즘 이름 .</target>
        </trans-unit>
        <trans-unit id="a00148b0c26655571bc51923dbe9938b920fef3b" translate="yes" xml:space="preserve">
          <source>The default attribute value</source>
          <target state="translated">기본 속성 값</target>
        </trans-unit>
        <trans-unit id="f1a4598b012084a5e59f6069cf9889ae0d36e4de" translate="yes" xml:space="preserve">
          <source>The default authenticator, if set, &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">기본 인증 자 (설정된 경우), 그렇지 않은 경우 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="219399cbbc7a9d3cb62f850e117c92373162126e" translate="yes" xml:space="preserve">
          <source>The default behavior for periodic notifications is</source>
          <target state="translated">정기 알림의 기본 동작은</target>
        </trans-unit>
        <trans-unit id="ade39b9bc01ea99fd6e41021e97a2cbe38a0ff33" translate="yes" xml:space="preserve">
          <source>The default behavior is controlled by two properties, maxZoneSize and maxZonesLoaded. Setting maxZoneSize to Integer.MAX_VALUE would have the effect of causing only one zone to be created. This would effectively turn the view into an implementation of the decorator pattern. Setting maxZonesLoaded to a value of Integer.MAX_VALUE would cause zones to never be unloaded. For simplicity, zones are created on boundaries represented by the child elements of the element the view is responsible for. The zones can be any View implementation, but the default implementation is based upon AsyncBoxView which supports fairly large zones efficiently.</source>
          <target state="translated">기본 동작은 maxZoneSize 및 maxZonesLoaded의 두 속성에 의해 제어됩니다. maxZoneSize를 Integer.MAX_VALUE로 설정하면 하나의 영역 만 생성되는 효과가 있습니다. 이것은 효과적으로 뷰를 데코레이터 패턴의 구현으로 바꿀 것입니다. maxZonesLoaded를 Integer.MAX_VALUE 값으로 설정하면 영역이 언로드되지 않습니다. 단순화를 위해 뷰가 담당하는 요소의 자식 요소로 표현되는 경계에 영역이 생성됩니다. 영역은 모든 View 구현이 될 수 있지만 기본 구현은 상당히 큰 영역을 효율적으로 지원하는 AsyncBoxView를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="f38e93f573cdfbc1b8460363e9a2ce5e0f1b9f2c" translate="yes" xml:space="preserve">
          <source>The default behavior is restored by setting the minimum size parameter to the &lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">최소 크기 매개 변수를 &lt;code&gt;null&lt;/code&gt; 으로 설정하면 기본 동작이 복원됩니다 .</target>
        </trans-unit>
        <trans-unit id="5600708ed2f7dd91972887c671ab434f56e3c891" translate="yes" xml:space="preserve">
          <source>The default behavior is to return 0.</source>
          <target state="translated">기본 동작은 0을 반환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="6a84c3daa5894abd5760fb92cc383de79ec24242" translate="yes" xml:space="preserve">
          <source>The default behavior of this method is to unconditionally throw &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;. Concrete implementations of &lt;code&gt;HttpURLConnection&lt;/code&gt; which support supplying an &lt;code&gt;Authenticator&lt;/code&gt; for a specific &lt;code&gt;HttpURLConnection&lt;/code&gt; instance should override this method to implement a different behavior.</source>
          <target state="translated">이 메서드의 기본 동작은 &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt; 을 무조건 throw하는 것 입니다. 특정 &lt;code&gt;HttpURLConnection&lt;/code&gt; 인스턴스에 대한 &lt;code&gt;Authenticator&lt;/code&gt; 제공을 지원 하는 &lt;code&gt;HttpURLConnection&lt;/code&gt; 의 구체적인 구현은 이 메서드를 재정 의하여 다른 동작을 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="aec3e37d4de160fa09df5d605e351831569f8fa2" translate="yes" xml:space="preserve">
          <source>The default behavior returns &lt;code&gt;true&lt;/code&gt; if the classes of the two instances are the same.</source>
          <target state="translated">기본 동작은 &lt;code&gt;true&lt;/code&gt; 를 반환두 인스턴스의 클래스가 동일한 경우 .</target>
        </trans-unit>
        <trans-unit id="3d489244f97c3366532480e2ccb5f4628993bf9c" translate="yes" xml:space="preserve">
          <source>The default charset is determined during virtual-machine startup and typically depends upon the locale and charset of the underlying operating system.</source>
          <target state="translated">기본 문자 집합은 가상 시스템 시작 중에 결정되며 일반적으로 기본 운영 체제의 로캘 및 문자 집합에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="9e21740ce8ff1f095be4eb9b396dc58bf7aec5c1" translate="yes" xml:space="preserve">
          <source>The default color space for the Java 2D(tm) API is sRGB, a proposed standard RGB color space. For further information on sRGB, see &lt;a href=&quot;http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html&quot;&gt; http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html &lt;/a&gt;.</source>
          <target state="translated">Java 2D (tm) API의 기본 색상 공간은 제안 된 표준 RGB 색상 공간 인 sRGB입니다. sRGB에 대한 자세한 내용은 &lt;a href=&quot;http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html&quot;&gt;http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="07de63b2f0f294e064652a3216a0516ad69faf50" translate="yes" xml:space="preserve">
          <source>The default configuration is typically loaded from the properties file &quot;&lt;code&gt;conf/logging.properties&lt;/code&gt;&quot; in the Java installation directory.</source>
          <target state="translated">기본 구성은 일반적으로 Java 설치 디렉토리 의 속성 파일 &quot; &lt;code&gt;conf/logging.properties&lt;/code&gt; &quot;에서 로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="c171f4c33d6ecdf116f99e62cacc2025417b98cd" translate="yes" xml:space="preserve">
          <source>The default constructor is protected on purpose.</source>
          <target state="translated">기본 생성자는 의도적으로 보호됩니다.</target>
        </trans-unit>
        <trans-unit id="1f1b2ef2bc979e969e552e10e46c7d5d8d156b03" translate="yes" xml:space="preserve">
          <source>The default constructor.</source>
          <target state="translated">기본 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="1639b40580d41fba4932fb09bc52c327349e481c" translate="yes" xml:space="preserve">
          <source>The default content storage management is performed by a gapped buffer implementation (GapContent). It supports editing reasonably large documents with good efficiency when the edits are contiguous or clustered, as is typical.</source>
          <target state="translated">기본 콘텐츠 저장소 관리는 갭 버퍼 구현 (GapContent)에 의해 수행됩니다. 일반적으로 편집 내용이 연속적이거나 클러스터 된 경우 효율적으로 상당히 큰 문서를 편집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="924fbd023e23f67c46c373980940b3dba1e7b3d9" translate="yes" xml:space="preserve">
          <source>The default content storage mechanism for this document is a gap buffer (&lt;code&gt;GapContent&lt;/code&gt;). Alternatives can be supplied by using the constructor that takes a &lt;code&gt;Content&lt;/code&gt; implementation.</source>
          <target state="translated">이 문서의 기본 콘텐츠 저장 메커니즘은 갭 버퍼 ( &lt;code&gt;GapContent&lt;/code&gt; )입니다. &lt;code&gt;Content&lt;/code&gt; 구현 을 사용하는 생성자를 사용하여 대안을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="47d06264e2899cf1861f7908f0f2559d779c0cc0" translate="yes" xml:space="preserve">
          <source>The default context is immediately usable and does not require &lt;a href=&quot;#init(javax.net.ssl.KeyManager%5B%5D,javax.net.ssl.TrustManager%5B%5D,java.security.SecureRandom)&quot;&gt;initialization&lt;/a&gt;.</source>
          <target state="translated">기본 컨텍스트는 즉시 사용할 수 있으며 &lt;a href=&quot;#init(javax.net.ssl.KeyManager%5B%5D,javax.net.ssl.TrustManager%5B%5D,java.security.SecureRandom)&quot;&gt;초기화&lt;/a&gt; 가 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2ebee53bb68f545bfd0e8060228273d17f9e1822" translate="yes" xml:space="preserve">
          <source>The default context is immediately usable and does not require &lt;a href=&quot;sslcontext#init-javax.net.ssl.KeyManager:A-javax.net.ssl.TrustManager:A-java.security.SecureRandom-&quot;&gt;initialization&lt;/a&gt;.</source>
          <target state="translated">기본 컨텍스트는 즉시 사용할 수 있으며 &lt;a href=&quot;sslcontext#init-javax.net.ssl.KeyManager:A-javax.net.ssl.TrustManager:A-java.security.SecureRandom-&quot;&gt;초기화&lt;/a&gt; 가 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="57621ee84b93e7d687879bc6c2f01144cf0cf816" translate="yes" xml:space="preserve">
          <source>The default cursor type (gets set if no cursor is defined).</source>
          <target state="translated">기본 커서 유형 (커서가 정의되지 않은 경우 설정 됨).</target>
        </trans-unit>
        <trans-unit id="d0779f05c7c3391386551fcb2988a002b160b831" translate="yes" xml:space="preserve">
          <source>The default descriptor contains the name, descriptorType and displayName fields. The default value of the name and displayName fields is the name of the attribute.</source>
          <target state="translated">기본 설명자는 name, descriptorType 및 displayName 필드를 포함합니다. name 및 displayName 필드의 기본값은 속성의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="31eaebdb1de27720394fdc4e00e02d2dbbc6280e" translate="yes" xml:space="preserve">
          <source>The default descriptor contains the name, descriptorType, displayName and severity(=6) fields. The default value of the name and displayName fields is the name of the Notification class (as specified by the &lt;code&gt;name&lt;/code&gt; parameter of the ModelMBeanNotificationInfo constructor).</source>
          <target state="translated">기본 설명자는 이름, descriptorType, displayName 및 심각도 (= 6) 필드를 포함합니다. name 및 displayName 필드의 기본값은 Notification 클래스의 이름입니다 ( &lt;code&gt;name&lt;/code&gt; 으로 지정) 입니다 (ModelMBeanNotificationInfo 생성자 매개 변수 ).</target>
        </trans-unit>
        <trans-unit id="f2101b5c8b9ce0f1759aca14b47ae2d9e6dbc985" translate="yes" xml:space="preserve">
          <source>The default descriptor is: name=className,descriptorType=&quot;mbean&quot;, displayName=className, persistPolicy=&quot;never&quot;,log=&quot;F&quot;,visibility=&quot;1&quot; If the descriptor does not contain all these fields, they will be added with these default values.</source>
          <target state="translated">기본 디스크립터는 다음과 같습니다. name = className, descriptorType = &quot;mbean&quot;, displayName = className, persistPolicy = &quot;never&quot;, log = &quot;F&quot;, visibility = &quot;1&quot;디스크립터에 이러한 필드가 모두 포함되어 있지 않으면 추가됩니다. 이 기본값으로.</target>
        </trans-unit>
        <trans-unit id="71a36f46f91101f9e56c61f1cb33445002c648ca" translate="yes" xml:space="preserve">
          <source>The default descriptor will have name, descriptorType, displayName and role fields set. The default value of the name and displayName fields is the operation name.</source>
          <target state="translated">기본 설명자는 이름, descriptorType, displayName 및 역할 필드가 설정됩니다. name 및 displayName 필드의 기본값은 조작 이름입니다.</target>
        </trans-unit>
        <trans-unit id="57816212ea63693ed31a91c5a2def6981bf78f0e" translate="yes" xml:space="preserve">
          <source>The default descriptor will have the &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;
 descriptorType&lt;/code&gt;, &lt;code&gt;displayName&lt;/code&gt; and &lt;code&gt;role&lt;/code&gt; fields.</source>
          <target state="translated">기본 설명자에는 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt; descriptorType&lt;/code&gt; , &lt;code&gt;displayName&lt;/code&gt; 및 &lt;code&gt;role&lt;/code&gt; 필드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e6c7442ac0022cf752f85776d55404b461a102e" translate="yes" xml:space="preserve">
          <source>The default descriptor will have the &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;descriptorType&lt;/code&gt;, &lt;code&gt;displayName&lt;/code&gt; and &lt;code&gt;role&lt;/code&gt; fields.</source>
          <target state="translated">기본 설명자는 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;descriptorType&lt;/code&gt; , &lt;code&gt;displayName&lt;/code&gt; 및 &lt;code&gt;role&lt;/code&gt; 갖습니다. 필드를 .</target>
        </trans-unit>
        <trans-unit id="1e8623c5eb869c81af609df29d6207eeddb27448" translate="yes" xml:space="preserve">
          <source>The default deserialization mechanism for objects restores the contents of each field to the value and type it had when it was written. Fields declared as transient or static are ignored by the deserialization process. References to other objects cause those objects to be read from the stream as necessary. Graphs of objects are restored correctly using a reference sharing mechanism. New objects are always allocated when deserializing, which prevents existing objects from being overwritten.</source>
          <target state="translated">객체의 기본 역 직렬화 메커니즘은 각 필드의 내용을 기록 할 때의 값과 유형으로 복원합니다. 임시 또는 정적으로 선언 된 필드는 역 직렬화 프로세스에서 무시됩니다. 다른 객체를 참조하면 필요에 따라 스트림에서 해당 객체를 읽습니다. 참조 공유 메커니즘을 사용하여 오브젝트의 그래프가 올바르게 복원됩니다. 역 직렬화시 새 객체가 항상 할당되므로 기존 객체를 덮어 쓰지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dc0dfc4afdd1a3eed32554858a6cb68b178babae" translate="yes" xml:space="preserve">
          <source>The default editor border &lt;code&gt;Insets&lt;/code&gt;.</source>
          <target state="translated">기본 편집기 테두리 &lt;code&gt;Insets&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a294f2a8bd119a702ba20b5a44327dce699bdc5b" translate="yes" xml:space="preserve">
          <source>The default editor border &lt;code&gt;Insets&lt;/code&gt;. This field might not be used.</source>
          <target state="translated">기본 편집기 테두리 &lt;code&gt;Insets&lt;/code&gt; . 이 필드는 사용되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7bac23882fa19fbd1247a9f8c85cc0f20cd7c1f1" translate="yes" xml:space="preserve">
          <source>The default editor for Metal editable combo boxes</source>
          <target state="translated">Metal 편집 가능한 콤보 상자의 기본 편집기</target>
        </trans-unit>
        <trans-unit id="297f03a56a972878592ecb74e9624f713eb12f51" translate="yes" xml:space="preserve">
          <source>The default editor for editable combo boxes.</source>
          <target state="translated">편집 가능한 콤보 상자의 기본 편집기입니다.</target>
        </trans-unit>
        <trans-unit id="2d6eadc874de61df1a0ee7240a0302869bf3a639" translate="yes" xml:space="preserve">
          <source>The default editor for editable combo boxes. The editor is implemented as a JTextField.</source>
          <target state="translated">편집 가능한 콤보 상자의 기본 편집기입니다. 편집기는 JTextField로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="34aa384c91ac7ca697bea4d9aa9fc598e446ea09" translate="yes" xml:space="preserve">
          <source>The default editor for table and tree cells.</source>
          <target state="translated">테이블 및 트리 셀의 기본 편집기입니다.</target>
        </trans-unit>
        <trans-unit id="2a5d5aaefec6275c32dcaaf5ca8f46feea8b5ff8" translate="yes" xml:space="preserve">
          <source>The default executor uses a thread pool, with a custom thread factory. If a security manager has been installed, the thread factory creates threads that run with an access control context that has no permissions.</source>
          <target state="translated">기본 실행기는 사용자 지정 스레드 팩토리와 함께 스레드 풀을 사용합니다. 보안 관리자가 설치된 경우 스레드 팩토리는 권한이없는 액세스 제어 컨텍스트로 실행되는 스레드를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="09bccd129640d964b5305b2c9be60a5f528c9414" translate="yes" xml:space="preserve">
          <source>The default file system, obtained by invoking the &lt;a href=&quot;filesystems#getDefault()&quot;&gt;&lt;code&gt;FileSystems.getDefault&lt;/code&gt;&lt;/a&gt; method, provides access to the file system that is accessible to the Java virtual machine. The &lt;a href=&quot;filesystems&quot;&gt;&lt;code&gt;FileSystems&lt;/code&gt;&lt;/a&gt; class defines methods to create file systems that provide access to other types of (custom) file systems.</source>
          <target state="translated">&lt;a href=&quot;filesystems#getDefault()&quot;&gt; &lt;code&gt;FileSystems.getDefault&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 얻은 기본 파일 시스템 은 JVM (Java Virtual Machine)에 액세스 할 수있는 파일 시스템에 대한 액세스를 제공합니다. &lt;a href=&quot;filesystems&quot;&gt; &lt;code&gt;FileSystems&lt;/code&gt; &lt;/a&gt; 클래스를 정의 방법 (사용자 정의) 다른 유형의 파일 시스템에 대한 액세스를 제공하는 파일 시스템을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce4ea61d829c9dd15ee14afdaae10ef9ccde5105" translate="yes" xml:space="preserve">
          <source>The default file system, obtained by invoking the &lt;a href=&quot;filesystems#getDefault--&quot;&gt;&lt;code&gt;FileSystems.getDefault&lt;/code&gt;&lt;/a&gt; method, provides access to the file system that is accessible to the Java virtual machine. The &lt;a href=&quot;filesystems&quot;&gt;&lt;code&gt;FileSystems&lt;/code&gt;&lt;/a&gt; class defines methods to create file systems that provide access to other types of (custom) file systems.</source>
          <target state="translated">&lt;a href=&quot;filesystems#getDefault--&quot;&gt; &lt;code&gt;FileSystems.getDefault&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 얻은 기본 파일 시스템 은 Java 가상 머신에 액세스 할 수있는 파일 시스템에 대한 액세스를 제공합니다. &lt;a href=&quot;filesystems&quot;&gt; &lt;code&gt;FileSystems&lt;/code&gt; 도&lt;/a&gt; 클래스를 정의 방법 (사용자 정의) 다른 유형의 파일 시스템에 대한 액세스를 제공하는 파일 시스템을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1bcf0c3a2540aebc390bd5d0acaf4eb9ddedb25" translate="yes" xml:space="preserve">
          <source>The default format &lt;code&gt;List&lt;/code&gt;, which contains the strings &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;, in this order.</source>
          <target state="translated">이 순서대로 문자열 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 를 포함하는 기본 형식 &lt;code&gt;List&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="356b324d41bc6cd39a64b2b9dca8543c1579dd18" translate="yes" xml:space="preserve">
          <source>The default format &lt;code&gt;List&lt;/code&gt;, which contains the strings &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;, in this order. This &lt;code&gt;List&lt;/code&gt; is &lt;a href=&quot;collections#unmodifiableList-java.util.List-&quot;&gt;unmodifiable&lt;/a&gt;.</source>
          <target state="translated">문자열 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 를 포함하는 기본 형식 &lt;code&gt;List&lt;/code&gt; 입니다. 이 &lt;code&gt;List&lt;/code&gt; 은 &lt;a href=&quot;collections#unmodifiableList-java.util.List-&quot;&gt;수정할 수 없습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68deb0f651c5c4ec28583c3567776edd15d73cba" translate="yes" xml:space="preserve">
          <source>The default format &lt;code&gt;List&lt;/code&gt;, which contains the strings &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;, in this order. This &lt;code&gt;List&lt;/code&gt; is unmodifiable.</source>
          <target state="translated">이 순서대로 문자열 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 를 포함하는 기본 형식 &lt;code&gt;List&lt;/code&gt; 입니다. 이 &lt;code&gt;List&lt;/code&gt; 은 수정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b2bee88511ca16b6461d32ab07ddf78380f8376e" translate="yes" xml:space="preserve">
          <source>The default gap between a text and an icon.</source>
          <target state="translated">텍스트와 아이콘 사이의 기본 간격입니다.</target>
        </trans-unit>
        <trans-unit id="3a8e5b73c18fe2cd1db9768a01e65de3ba0e1944" translate="yes" xml:space="preserve">
          <source>The default id for all InvocationEvents.</source>
          <target state="translated">모든 InvocationEvents의 기본 ID입니다.</target>
        </trans-unit>
        <trans-unit id="fdeb59c0e74f57661ae61da028cc8532ec2c21a9" translate="yes" xml:space="preserve">
          <source>The default implementation always throws &lt;a href=&quot;../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 항상 &lt;a href=&quot;../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="2eedaa20e42053b1073b0f60bf4b1cdb2ca31400" translate="yes" xml:space="preserve">
          <source>The default implementation assumes that &lt;code&gt;IllegalStateException&lt;/code&gt; thrown by &lt;code&gt;getKey()&lt;/code&gt; or &lt;code&gt;getValue()&lt;/code&gt; indicates that the entry has been removed and cannot be processed. Operation continues for subsequent entries.</source>
          <target state="translated">기본 구현에서는 &lt;code&gt;getKey()&lt;/code&gt; 또는 &lt;code&gt;getValue()&lt;/code&gt; 의해 &lt;code&gt;IllegalStateException&lt;/code&gt; 이 발생 한다고 가정합니다. 은 항목이 제거되어 처리 할 수 ​​없음을 나타냅니다. 후속 항목에 대한 작업이 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="f707510ea8ebd9584cbdab065b5881ea4d96a8e9" translate="yes" xml:space="preserve">
          <source>The default implementation attempts to find the class by invoking &lt;a href=&quot;#findClass(java.lang.String)&quot;&gt;&lt;code&gt;findClass(String)&lt;/code&gt;&lt;/a&gt; when the &lt;code&gt;moduleName&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;. It otherwise returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">기본 구현 은 &lt;code&gt;moduleName&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 일 때 &lt;a href=&quot;#findClass(java.lang.String)&quot;&gt; &lt;code&gt;findClass(String)&lt;/code&gt; &lt;/a&gt; 를 호출하여 클래스를 찾으려고합니다 . 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0fb093df15fa460a7b84921bd4bdfdb945e57244" translate="yes" xml:space="preserve">
          <source>The default implementation attempts to find the resource by invoking &lt;a href=&quot;#findResource(java.lang.String)&quot;&gt;&lt;code&gt;findResource(String)&lt;/code&gt;&lt;/a&gt; when the &lt;code&gt;moduleName&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;. It otherwise returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">기본 구현 은 &lt;code&gt;moduleName&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 일 때 &lt;a href=&quot;#findResource(java.lang.String)&quot;&gt; &lt;code&gt;findResource(String)&lt;/code&gt; &lt;/a&gt; 를 호출하여 자원을 찾으려고합니다 . 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5db0479a3df6538a51997ff32362bca3b5840b40" translate="yes" xml:space="preserve">
          <source>The default implementation behaves as if:</source>
          <target state="translated">기본 구현은 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="97dfeb0dbd5d60dd5c8330ad181682923848b7d2" translate="yes" xml:space="preserve">
          <source>The default implementation behaves as though the formatter was used to format the chronology textual name.</source>
          <target state="translated">기본 구현은 포맷터가 연대기 텍스트 이름의 형식을 지정하는 데 사용 된 것처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="67c8420932946b11994e879ee7c152acf7038361" translate="yes" xml:space="preserve">
          <source>The default implementation boxes the result of calling &lt;a href=&quot;#nextDouble()&quot;&gt;&lt;code&gt;nextDouble()&lt;/code&gt;&lt;/a&gt;, and returns that boxed result.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#nextDouble()&quot;&gt; &lt;code&gt;nextDouble()&lt;/code&gt; &lt;/a&gt; 을 호출 한 결과 를 boxing하고 해당 boxed 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4696edcfc1185497d193ca6dc1931e3e0e898f93" translate="yes" xml:space="preserve">
          <source>The default implementation boxes the result of calling &lt;a href=&quot;#nextInt()&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt;, and returns that boxed result.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#nextInt()&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt; 호출 결과를 상자에 넣고 해당 상자 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c4ffb5639b400f62ca60ef8b912a0a1772e238c6" translate="yes" xml:space="preserve">
          <source>The default implementation boxes the result of calling &lt;a href=&quot;#nextLong()&quot;&gt;&lt;code&gt;nextLong()&lt;/code&gt;&lt;/a&gt;, and returns that boxed result.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#nextLong()&quot;&gt; &lt;code&gt;nextLong()&lt;/code&gt; &lt;/a&gt; 을 호출 한 결과 를 boxing하고 해당 boxed 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a2ea092b6396012bc615aeb37ebffe3492b5d650" translate="yes" xml:space="preserve">
          <source>The default implementation boxes the result of calling &lt;a href=&quot;primitiveiterator.ofdouble#nextDouble--&quot;&gt;&lt;code&gt;nextDouble()&lt;/code&gt;&lt;/a&gt;, and returns that boxed result.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;primitiveiterator.ofdouble#nextDouble--&quot;&gt; &lt;code&gt;nextDouble()&lt;/code&gt; &lt;/a&gt; 호출 결과를 상자에 넣고 상자에 넣은 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="45941eed3592e8a60eb95c36831683de8d484482" translate="yes" xml:space="preserve">
          <source>The default implementation boxes the result of calling &lt;a href=&quot;primitiveiterator.ofint#nextInt--&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt;, and returns that boxed result.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;primitiveiterator.ofint#nextInt--&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt; 호출 결과를 상자에 넣고 상자에 넣은 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="804986eab3cdd370e05fe66ef1a8b97ca175e8ce" translate="yes" xml:space="preserve">
          <source>The default implementation boxes the result of calling &lt;a href=&quot;primitiveiterator.oflong#nextLong--&quot;&gt;&lt;code&gt;nextLong()&lt;/code&gt;&lt;/a&gt;, and returns that boxed result.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;primitiveiterator.oflong#nextLong--&quot;&gt; &lt;code&gt;nextLong()&lt;/code&gt; &lt;/a&gt; 호출 결과를 상자에 넣고 상자에 넣은 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1a1ec47601dd9e56dde6154d7c0881d5d63cdbb2" translate="yes" xml:space="preserve">
          <source>The default implementation calls &lt;a href=&quot;#getLocation(javax.tools.JavaFileManager.Location)&quot;&gt;&lt;code&gt;getLocation&lt;/code&gt;&lt;/a&gt; and then returns an &lt;code&gt;Iterable&lt;/code&gt; formed by calling &lt;code&gt;toPath()&lt;/code&gt; on each &lt;code&gt;File&lt;/code&gt; returned from &lt;code&gt;getLocation&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#getLocation(javax.tools.JavaFileManager.Location)&quot;&gt; &lt;code&gt;getLocation&lt;/code&gt; 을&lt;/a&gt; 호출 한 다음 &lt;code&gt;getLocation&lt;/code&gt; 에서 반환 된 각 &lt;code&gt;File&lt;/code&gt; 에 대해 &lt;code&gt;toPath()&lt;/code&gt; 를 호출 하여 형성된 &lt;code&gt;Iterable&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0cb14b6d97a10573299274dfd36f31ebbcef668e" translate="yes" xml:space="preserve">
          <source>The default implementation calls &lt;code&gt;getController&lt;/code&gt; and the calls &lt;code&gt;activate&lt;/code&gt; on the returned object if &lt;code&gt;hasController&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;getController&lt;/code&gt; 를 호출 하고 &lt;code&gt;hasController&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 리턴하면 리턴 된 오브젝트 에서 호출이 &lt;code&gt;activate&lt;/code&gt; 됩니다. .</target>
        </trans-unit>
        <trans-unit id="df01be13e18539b383c1254ee93e383fec8add75" translate="yes" xml:space="preserve">
          <source>The default implementation calls &lt;code&gt;getNativeMetadataFormatName&lt;/code&gt;, &lt;code&gt;isStandardMetadataFormatSupported&lt;/code&gt;, and &lt;code&gt;getExtraMetadataFormatNames&lt;/code&gt; and returns the combined results.</source>
          <target state="translated">기본 구현은 &lt;code&gt;getNativeMetadataFormatName&lt;/code&gt; , &lt;code&gt;isStandardMetadataFormatSupported&lt;/code&gt; 및 &lt;code&gt;getExtraMetadataFormatNames&lt;/code&gt; 를 호출 하고 결합 된 결과를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="67a57c6dfdd99c7076148f3d7c50149afec84949" translate="yes" xml:space="preserve">
          <source>The default implementation calls &lt;code&gt;reset&lt;/code&gt; followed by &lt;code&gt;mergeTree(formatName, root)&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;reset&lt;/code&gt; 다음에 &lt;code&gt;mergeTree(formatName, root)&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="0255a5e00097a3b4f9441120fe16636ab71d78d7" translate="yes" xml:space="preserve">
          <source>The default implementation calls &lt;code&gt;setInput(null, false)&lt;/code&gt;, &lt;code&gt;setLocale(null)&lt;/code&gt;, &lt;code&gt;removeAllIIOReadUpdateListeners()&lt;/code&gt;, &lt;code&gt;removeAllIIOReadWarningListeners()&lt;/code&gt;, &lt;code&gt;removeAllIIOReadProgressListeners()&lt;/code&gt;, and &lt;code&gt;clearAbortRequest&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;setInput(null, false)&lt;/code&gt; , &lt;code&gt;setLocale(null)&lt;/code&gt; , &lt;code&gt;removeAllIIOReadUpdateListeners()&lt;/code&gt; , &lt;code&gt;removeAllIIOReadWarningListeners()&lt;/code&gt; , &lt;code&gt;removeAllIIOReadProgressListeners()&lt;/code&gt; 및 &lt;code&gt;clearAbortRequest&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="ca35547c3dfbf7785332a0eb798130f62c8b33d3" translate="yes" xml:space="preserve">
          <source>The default implementation calls &lt;code&gt;setOutput(null)&lt;/code&gt;, &lt;code&gt;setLocale(null)&lt;/code&gt;, &lt;code&gt;removeAllIIOWriteWarningListeners()&lt;/code&gt;, &lt;code&gt;removeAllIIOWriteProgressListeners()&lt;/code&gt;, and &lt;code&gt;clearAbortRequest&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;setOutput(null)&lt;/code&gt; , &lt;code&gt;setLocale(null)&lt;/code&gt; , &lt;code&gt;removeAllIIOWriteWarningListeners()&lt;/code&gt; , &lt;code&gt;removeAllIIOWriteProgressListeners()&lt;/code&gt; 및 &lt;code&gt;clearAbortRequest&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="ce38494e2e9aed50f10699c88cbc167e8321eefe" translate="yes" xml:space="preserve">
          <source>The default implementation calls &lt;code&gt;toString&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;toString&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="d4d88e979831ebc1194fe2499772dce7e9a35d38" translate="yes" xml:space="preserve">
          <source>The default implementation calls the generator function with zero and then passes the resulting array to &lt;a href=&quot;#toArray(T%5B%5D)&quot;&gt;&lt;code&gt;toArray(T[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 0으로 생성기 함수를 호출 한 다음 결과 배열을 &lt;a href=&quot;#toArray(T%5B%5D)&quot;&gt; &lt;code&gt;toArray(T[])&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="4149de8d1608259427bd33ee41cd5da9e437894c" translate="yes" xml:space="preserve">
          <source>The default implementation checks &lt;code&gt;locale&lt;/code&gt; against the values returned by &lt;code&gt;getAvailableLocales&lt;/code&gt;, and sets the &lt;code&gt;locale&lt;/code&gt; instance variable if it is found. If &lt;code&gt;locale&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the instance variable is set to &lt;code&gt;null&lt;/code&gt; without any checking.</source>
          <target state="translated">기본 구현 은 &lt;code&gt;getAvailableLocales&lt;/code&gt; 에서 리턴 한 값과 &lt;code&gt;locale&lt;/code&gt; 을 확인 하고 &lt;code&gt;locale&lt;/code&gt; 인스턴스 변수가있는 경우이를 설정합니다 . 경우 &lt;code&gt;locale&lt;/code&gt; 있다 &lt;code&gt;null&lt;/code&gt; , 인스턴스 변수로 설정되어 &lt;code&gt;null&lt;/code&gt; 어떤 확인하지 않고.</target>
        </trans-unit>
        <trans-unit id="e153265a13b18e093fb1de6300c02f9e01167b80" translate="yes" xml:space="preserve">
          <source>The default implementation checks if compression is supported and throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if not. Otherwise, it returns a clone of the &lt;code&gt;compressionTypes&lt;/code&gt; instance variable if it is non-&lt;code&gt;null&lt;/code&gt;, or else returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 압축이 지원되는지 확인하고 그렇지 않은 경우 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생시킵니다. 그렇지 않으면, &lt;code&gt;compressionTypes&lt;/code&gt; 인스턴스 변수가 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 compressionTypes 인스턴스 변수 의 복제를 리턴하거나 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="b58be67feb95298755819138ea1c79e6c45c6c99" translate="yes" xml:space="preserve">
          <source>The default implementation checks if reading &lt;code&gt;Raster&lt;/code&gt;s is supported, and if so calls &lt;a href=&quot;#readRaster(int,javax.imageio.ImageReadParam)&quot;&gt;&lt;code&gt;readRaster(imageIndex, null)&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;tileX&lt;/code&gt; and &lt;code&gt;tileY&lt;/code&gt; are 0, or throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt; otherwise.</source>
          <target state="translated">기본 구현 은 &lt;code&gt;Raster&lt;/code&gt; 읽기 가 지원 되는지 확인 하고, 지원되는 경우 &lt;code&gt;tileX&lt;/code&gt; 및 &lt;code&gt;tileY&lt;/code&gt; 가 0 &lt;a href=&quot;#readRaster(int,javax.imageio.ImageReadParam)&quot;&gt; &lt;code&gt;readRaster(imageIndex, null)&lt;/code&gt; &lt;/a&gt; 호출 하고 그렇지 않으면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을 throw합니다 .</target>
        </trans-unit>
        <trans-unit id="7224588cc878f7a39d862ce9de2f7338e978e3ad" translate="yes" xml:space="preserve">
          <source>The default implementation checks if reading &lt;code&gt;Raster&lt;/code&gt;s is supported, and if so calls &lt;a href=&quot;imagereader#readRaster-int-javax.imageio.ImageReadParam-&quot;&gt;&lt;code&gt;readRaster(imageIndex, null)&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;tileX&lt;/code&gt; and &lt;code&gt;tileY&lt;/code&gt; are 0, or throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt; otherwise.</source>
          <target state="translated">디폴트 구현 검사 읽는 경우 &lt;code&gt;Raster&lt;/code&gt; 의 것은 지원하고, 경우에 이렇게 호출됩니다 &lt;a href=&quot;imagereader#readRaster-int-javax.imageio.ImageReadParam-&quot;&gt; &lt;code&gt;readRaster(imageIndex, null)&lt;/code&gt; &lt;/a&gt; 하는 경우 &lt;code&gt;tileX&lt;/code&gt; 및 &lt;code&gt;tileY&lt;/code&gt; 의가 0 인, 또는 발생 &lt;code&gt;IllegalArgumentException&lt;/code&gt; , 그렇지 않으면.</target>
        </trans-unit>
        <trans-unit id="ee84ebf390912c50ff7306120240840012654e59" translate="yes" xml:space="preserve">
          <source>The default implementation checks that compression is supported and that the compression mode is &lt;code&gt;MODE_EXPLICIT&lt;/code&gt;. If so, if &lt;code&gt;getCompressionTypes()&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;getCompressionType()&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt;, it returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 압축이 지원되고 압축 모드가 &lt;code&gt;MODE_EXPLICIT&lt;/code&gt; 인지 확인 합니다 . 그렇다면 경우, &lt;code&gt;getCompressionTypes()&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;getCompressionType()&lt;/code&gt; 비입니다 &lt;code&gt;null&lt;/code&gt; , 그것은 반환 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39ae91123b183f38ef980a5bdd8f15dbeaf947d7" translate="yes" xml:space="preserve">
          <source>The default implementation checks that compression is supported and that the compression mode is &lt;code&gt;MODE_EXPLICIT&lt;/code&gt;. If so, if &lt;code&gt;getCompressionTypes()&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;getCompressionType()&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt;, it returns the value of the &lt;code&gt;compressionQuality&lt;/code&gt; instance variable.</source>
          <target state="translated">기본 구현은 압축이 지원되고 압축 모드가 &lt;code&gt;MODE_EXPLICIT&lt;/code&gt; 인지 확인 합니다 . 그렇다면 &lt;code&gt;getCompressionTypes()&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 이거나 &lt;code&gt;getCompressionType()&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 &lt;code&gt;compressionQuality&lt;/code&gt; 인스턴스 변수 의 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d7662a6d3adccfb0c9ce530f65142152c500933c" translate="yes" xml:space="preserve">
          <source>The default implementation checks that compression is supported and the compression mode is &lt;code&gt;MODE_EXPLICIT&lt;/code&gt;. If so, if &lt;code&gt;getCompressionTypes()&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;getCompressionType()&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt;, and &lt;code&gt;quality&lt;/code&gt; is within bounds, it returns &lt;code&gt;-1.0&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 압축이 지원되고 압축 모드가 &lt;code&gt;MODE_EXPLICIT&lt;/code&gt; 인지 확인 합니다. . 그렇다면 경우, &lt;code&gt;getCompressionTypes()&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;getCompressionType()&lt;/code&gt; 비입니다 &lt;code&gt;null&lt;/code&gt; , 그리고 &lt;code&gt;quality&lt;/code&gt; 범위 내에서, 그것은 반환 &lt;code&gt;-1.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa40cd63fa69bf871b72c0b8b4d327c36b842489" translate="yes" xml:space="preserve">
          <source>The default implementation checks that compression is supported, and that the compression mode is &lt;code&gt;MODE_EXPLICIT&lt;/code&gt;. If so, if &lt;code&gt;getCompressionTypes()&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;compressionType&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt; it sets the &lt;code&gt;compressionQuality&lt;/code&gt; instance variable.</source>
          <target state="translated">기본 구현은 압축이 지원되고 압축 모드가 &lt;code&gt;MODE_EXPLICIT&lt;/code&gt; 합니다 . 그렇다면 &lt;code&gt;getCompressionTypes()&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 을 반환 하거나 &lt;code&gt;compressionType&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 &lt;code&gt;compressionQuality&lt;/code&gt; 인스턴스 변수를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="bd1cafa89eed3756b88a0081e6e16202e59efef1" translate="yes" xml:space="preserve">
          <source>The default implementation checks the &lt;code&gt;input&lt;/code&gt; argument against the list returned by &lt;code&gt;originatingProvider.getInputTypes()&lt;/code&gt; and fails if the argument is not an instance of one of the classes in the list. If the originating provider is set to &lt;code&gt;null&lt;/code&gt;, the input is accepted only if it is an &lt;code&gt;ImageInputStream&lt;/code&gt;.</source>
          <target state="translated">기본 구현 은 &lt;code&gt;originatingProvider.getInputTypes()&lt;/code&gt; 의해 리턴 된 목록과 비교 하여 &lt;code&gt;input&lt;/code&gt; 인수를 점검하고 인수가 목록 에있는 클래스 중 하나의 인스턴스가 아닌 경우 실패합니다. 시작 공급자가 &lt;code&gt;null&lt;/code&gt; 로 설정된 경우 입력이 &lt;code&gt;ImageInputStream&lt;/code&gt; 인 경우에만 입력이 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="de6c078c94849f60318934cda47e0b37e95b6c18" translate="yes" xml:space="preserve">
          <source>The default implementation checks the name against the global standard metadata format name, and returns that format if it is supported. Otherwise, it checks against the native format names followed by any additional format names. If a match is found, it retrieves the name of the &lt;code&gt;IIOMetadataFormat&lt;/code&gt; class from &lt;code&gt;nativeMetadataFormatClassName&lt;/code&gt; or &lt;code&gt;extraMetadataFormatClassNames&lt;/code&gt; as appropriate, and constructs an instance of that class using its &lt;code&gt;getInstance&lt;/code&gt; method.</source>
          <target state="translated">기본 구현은 글로벌 표준 메타 데이터 형식 이름과 비교하여 이름을 확인하고 지원되는 경우 해당 형식을 리턴합니다. 그렇지 않으면 기본 형식 이름과 추가 형식 이름이 있는지 확인합니다. 일치하는 것이 발견되면 &lt;code&gt;nativeMetadataFormatClassName&lt;/code&gt; 또는 &lt;code&gt;extraMetadataFormatClassNames&lt;/code&gt; 에서 &lt;code&gt;IIOMetadataFormat&lt;/code&gt; 클래스 의 이름을 검색 하고 &lt;code&gt;getInstance&lt;/code&gt; 메소드를 사용하여 해당 클래스의 인스턴스를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="57d4c9e43f4ff778390d28f361ac4b410962aafa" translate="yes" xml:space="preserve">
          <source>The default implementation checks whether compression is supported and the compression mode is &lt;code&gt;MODE_EXPLICIT&lt;/code&gt;. If so, if &lt;code&gt;compressionType&lt;/code&gt; is &lt;code&gt;non-null&lt;/code&gt; the value of &lt;code&gt;getCompressionType&lt;/code&gt; is returned as a convenience.</source>
          <target state="translated">기본 구현은 압축이 지원되고 압축 모드가 &lt;code&gt;MODE_EXPLICIT&lt;/code&gt; 합니다 . 그렇다면 &lt;code&gt;compressionType&lt;/code&gt; 이 &lt;code&gt;non-null&lt;/code&gt; 이 아닌 경우 &lt;code&gt;getCompressionType&lt;/code&gt; 의 값이 편의상 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="a05d28dd7af9099d59cdf9067f8a6b7710071433" translate="yes" xml:space="preserve">
          <source>The default implementation checks whether compression is supported and the compression mode is &lt;code&gt;MODE_EXPLICIT&lt;/code&gt;. If so, if &lt;code&gt;getCompressionTypes()&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;getCompressionType()&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt;&lt;code&gt;true&lt;/code&gt; is returned as a convenience.</source>
          <target state="translated">기본 구현은 압축이 지원되고 압축 모드가 &lt;code&gt;MODE_EXPLICIT&lt;/code&gt; 인지 확인 합니다 . 그렇다면 &lt;code&gt;getCompressionTypes()&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 이거나 &lt;code&gt;getCompressionType()&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 편의상 &lt;code&gt;true&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="35b1ea663a2ae101c3c00afff29dd0cff89ecf63" translate="yes" xml:space="preserve">
          <source>The default implementation checks whether compression is supported and the compression mode is &lt;code&gt;MODE_EXPLICIT&lt;/code&gt;. If so, it calls &lt;code&gt;getCompressionTypes&lt;/code&gt; and checks if &lt;code&gt;compressionType&lt;/code&gt; is one of the legal values. If it is, the &lt;code&gt;compressionType&lt;/code&gt; instance variable is set. If &lt;code&gt;compressionType&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the instance variable is set without performing any checking.</source>
          <target state="translated">기본 구현은 압축이 지원되고 압축 모드가 &lt;code&gt;MODE_EXPLICIT&lt;/code&gt; 인지 확인 합니다 . 그렇다면 &lt;code&gt;getCompressionTypes&lt;/code&gt; 를 호출 하고 다음을 확인합니다. &lt;code&gt;compressionType&lt;/code&gt; 이 올바른 값 중 하나 합니다. 설정되어 있으면 &lt;code&gt;compressionType&lt;/code&gt; 인스턴스 변수가 설정됩니다. 경우 &lt;code&gt;compressionType&lt;/code&gt; 인 &lt;code&gt;null&lt;/code&gt; , 인스턴스 변수는 검사를 수행하지 않고 설정된다.</target>
        </trans-unit>
        <trans-unit id="55b272519206e035d427301e9f11c2476d9dc214" translate="yes" xml:space="preserve">
          <source>The default implementation checks whether compression is supported and the compression mode is &lt;code&gt;MODE_EXPLICIT&lt;/code&gt;. If so, it returns the value of the &lt;code&gt;compressionType&lt;/code&gt; instance variable.</source>
          <target state="translated">기본 구현은 압축이 지원되고 압축 모드가 &lt;code&gt;MODE_EXPLICIT&lt;/code&gt; 인지 확인 합니다 . 그렇다면 &lt;code&gt;compressionType&lt;/code&gt; 인스턴스 변수 의 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="280d73f869e503d459c9002ef35d46daa12d6877" translate="yes" xml:space="preserve">
          <source>The default implementation combines the era and year-of-era into a proleptic year before calling &lt;a href=&quot;#date(int,int,int)&quot;&gt;&lt;code&gt;date(int, int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#date(int,int,int)&quot;&gt; &lt;code&gt;date(int, int, int)&lt;/code&gt; &lt;/a&gt; 를 호출하기 전에 시대와 연도를 proleptic 연도로 결합합니다 .</target>
        </trans-unit>
        <trans-unit id="f8ecdb3f8fabe88301afb7f1c648de78fbde4567" translate="yes" xml:space="preserve">
          <source>The default implementation combines the era and year-of-era into a proleptic year before calling &lt;a href=&quot;#dateYearDay(int,int)&quot;&gt;&lt;code&gt;dateYearDay(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#dateYearDay(int,int)&quot;&gt; &lt;code&gt;dateYearDay(int, int)&lt;/code&gt; &lt;/a&gt; 호출하기 전에 시대와 연도를 proleptic 연도로 결합합니다 .</target>
        </trans-unit>
        <trans-unit id="d869e07f9367ed0b78dd812236faf6f1418870b0" translate="yes" xml:space="preserve">
          <source>The default implementation combines the era and year-of-era into a proleptic year before calling &lt;a href=&quot;chronology#date-int-int-int-&quot;&gt;&lt;code&gt;date(int, int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;chronology#date-int-int-int-&quot;&gt; &lt;code&gt;date(int, int, int)&lt;/code&gt; &lt;/a&gt; 를 호출하기 전에 연대와 연대를 다산 연도로 결합합니다 .</target>
        </trans-unit>
        <trans-unit id="9f0d1f5b1a006f93eedf297c18be2449f5c967bb" translate="yes" xml:space="preserve">
          <source>The default implementation combines the era and year-of-era into a proleptic year before calling &lt;a href=&quot;chronology#dateYearDay-int-int-&quot;&gt;&lt;code&gt;dateYearDay(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 시대와 시대를 전화하기 전에 다각적 인 해로 결합합니다. &lt;a href=&quot;chronology#dateYearDay-int-int-&quot;&gt; &lt;code&gt;dateYearDay(int, int)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bef8795a4b88b10f7df84401dbb530a35adde301" translate="yes" xml:space="preserve">
          <source>The default implementation compares &lt;code&gt;loadTime&lt;/code&gt; and the last modified time of the source data of the resource bundle. If it's determined that the source data has been modified since &lt;code&gt;loadTime&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; is returned. Otherwise, &lt;code&gt;false&lt;/code&gt; is returned. This implementation assumes that the given &lt;code&gt;format&lt;/code&gt; is the same string as its file suffix if it's not one of the default formats, &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; or &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 자원 번들 소스 데이터의 &lt;code&gt;loadTime&lt;/code&gt; 과 마지막 수정 시간을 비교 합니다 . &lt;code&gt;loadTime&lt;/code&gt; 이후에 소스 데이터가 수정 된 것으로 확인 되면 &lt;code&gt;true&lt;/code&gt; 가 리턴됩니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 가 반환됩니다. 이 구현에서는 지정된 &lt;code&gt;format&lt;/code&gt; 이 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 기본 형식 중 하나가 아닌 경우 파일 접미 부와 동일한 문자열 이라고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="1e204313c32984cae90a2a91aad2c88b02b56213" translate="yes" xml:space="preserve">
          <source>The default implementation compares the fully-qualified class name of the &lt;code&gt;reader&lt;/code&gt; argument with the class name passed into the constructor. This method may be overridden if more sophisticated checking is required.</source>
          <target state="translated">기본 구현은 &lt;code&gt;reader&lt;/code&gt; 인수 의 완전한 클래스 이름을 생성자에 전달 된 클래스 이름과 비교합니다 . 보다 정교한 검사가 필요한 경우이 방법을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8de233325d954cf602c0b09028338c86e02fdb18" translate="yes" xml:space="preserve">
          <source>The default implementation constructs and returns a new &lt;code&gt;ImageReadParam&lt;/code&gt; object that does not allow source scaling (</source>
          <target state="translated">기본 구현 은 소스 스케일링을 허용하지 않는 새 &lt;code&gt;ImageReadParam&lt;/code&gt; 객체를 구성하고 반환합니다 (</target>
        </trans-unit>
        <trans-unit id="b4f2e505d3f48149cfce0c86882a9067aabb5144" translate="yes" xml:space="preserve">
          <source>The default implementation constructs and returns a new &lt;code&gt;ImageWriteParam&lt;/code&gt; object that does not allow tiling, progressive encoding, or compression, and that will be localized for the current &lt;code&gt;Locale&lt;/code&gt; (</source>
          <target state="translated">기본 구현 은 타일링, 점진적 인코딩 또는 압축을 허용하지 않고 현재에 대해 현지화 된 새 &lt;code&gt;ImageWriteParam&lt;/code&gt; 객체를 구성하고 반환합니다. &lt;code&gt;Locale&lt;/code&gt; (</target>
        </trans-unit>
        <trans-unit id="63715bee14dc2f4d5b03691953410657d7543120" translate="yes" xml:space="preserve">
          <source>The default implementation converts each path to a file and calls &lt;a href=&quot;#getJavaFileObjectsFromFiles(java.lang.Iterable)&quot;&gt;&lt;code&gt;getJavaObjectsFromFiles&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../../java.base/java/lang/illegalargumentexception&quot;&gt;IllegalArgumentException&lt;/a&gt; will be thrown if any of the paths cannot be converted to a file.</source>
          <target state="translated">기본 구현은 각 경로를 파일로 변환하고 &lt;a href=&quot;#getJavaFileObjectsFromFiles(java.lang.Iterable)&quot;&gt; &lt;code&gt;getJavaObjectsFromFiles&lt;/code&gt; 를&lt;/a&gt; 호출 합니다 . 경로를 파일로 변환 할 수없는 경우 &lt;a href=&quot;../../../java.base/java/lang/illegalargumentexception&quot;&gt;IllegalArgumentException&lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dc4acd7be54754f5149a4c658bd21f262043c400" translate="yes" xml:space="preserve">
          <source>The default implementation converts each path to a file and calls &lt;a href=&quot;#getJavaFileObjectsFromFiles(java.lang.Iterable)&quot;&gt;&lt;code&gt;getJavaObjectsFromFiles&lt;/code&gt;&lt;/a&gt;. IllegalArgumentException will be thrown if any of the paths cannot be converted to a file.</source>
          <target state="translated">기본 구현은 각 경로를 파일로 변환하고 &lt;a href=&quot;#getJavaFileObjectsFromFiles(java.lang.Iterable)&quot;&gt; &lt;code&gt;getJavaObjectsFromFiles&lt;/code&gt; 를&lt;/a&gt; 호출 합니다 . 경로를 파일로 변환 할 수없는 경우 IllegalArgumentException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9c0c039e646fb45ff97de8035da52d14970635c9" translate="yes" xml:space="preserve">
          <source>The default implementation creates a &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt; spliterator as follows:</source>
          <target state="translated">기본 구현은 다음과 같이 &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;후기 바인딩&lt;/a&gt;&lt;/em&gt; 분할자를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="dd2cf14db8ac6a091e76365af3256434a0d1a9f8" translate="yes" xml:space="preserve">
          <source>The default implementation creates a &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt; spliterator from the collection's &lt;code&gt;Iterator&lt;/code&gt;. The spliterator inherits the &lt;em&gt;fail-fast&lt;/em&gt; properties of the collection's iterator.</source>
          <target state="translated">기본 구현은 컬렉션의 &lt;code&gt;Iterator&lt;/code&gt; 에서 &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;후기 바인딩&lt;/a&gt;&lt;/em&gt; 분할자를 만듭니다 . 분할 자는 컬렉션 반복자 의 &lt;em&gt;fail-fast&lt;/em&gt; 속성을 상속 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="caf5ae9c3ead5d9e333d24fada341d846129a5c1" translate="yes" xml:space="preserve">
          <source>The default implementation creates a &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt; spliterator from the collections's &lt;code&gt;Iterator&lt;/code&gt;. The spliterator inherits the &lt;em&gt;fail-fast&lt;/em&gt; properties of the collection's iterator.</source>
          <target state="translated">기본 구현은 컬렉션의 &lt;code&gt;Iterator&lt;/code&gt; 에서 &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;후기 바인딩&lt;/a&gt;&lt;/em&gt; 스플리터를 만듭니다 . spliterator는 컬렉션 반복자 의 &lt;em&gt;fail-fast&lt;/em&gt; 속성을 상속 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ebc35ea34ff849f1faa4854330171c731fcbcc2" translate="yes" xml:space="preserve">
          <source>The default implementation creates a &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt; spliterator from the list's &lt;code&gt;Iterator&lt;/code&gt;. The spliterator inherits the &lt;em&gt;fail-fast&lt;/em&gt; properties of the list's iterator.</source>
          <target state="translated">기본 구현은 목록의 &lt;code&gt;Iterator&lt;/code&gt; 에서 &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;후기 바인딩&lt;/a&gt;&lt;/em&gt; 스플리터를 만듭니다 . spliterator는 목록 반복자 의 &lt;em&gt;fail-fast&lt;/em&gt; 특성을 상속 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5afcae0816c1de81e39db535f75600f6f559966c" translate="yes" xml:space="preserve">
          <source>The default implementation creates a &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt; spliterator from the set's &lt;code&gt;Iterator&lt;/code&gt;. The spliterator inherits the &lt;em&gt;fail-fast&lt;/em&gt; properties of the set's iterator.</source>
          <target state="translated">기본 구현은 세트의 &lt;code&gt;Iterator&lt;/code&gt; 에서 &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;후기 바인딩&lt;/a&gt;&lt;/em&gt; 스플리터를 만듭니다 . spliterator는 세트 반복자 의 &lt;em&gt;fail-fast&lt;/em&gt; 특성을 상속 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81da0467decb6d6413d96923a42a5d8da3edc8d5" translate="yes" xml:space="preserve">
          <source>The default implementation creates a &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt; spliterator from the sorted set's &lt;code&gt;Iterator&lt;/code&gt;. The spliterator inherits the &lt;em&gt;fail-fast&lt;/em&gt; properties of the set's iterator. The spliterator's comparator is the same as the sorted set's comparator.</source>
          <target state="translated">기본 구현은 정렬 된 세트의 &lt;code&gt;Iterator&lt;/code&gt; 에서 &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;후기 바인딩&lt;/a&gt;&lt;/em&gt; 스플리터를 만듭니다 . spliterator는 세트 반복자 의 &lt;em&gt;fail-fast&lt;/em&gt; 특성을 상속 합니다. 스플리터의 비교기는 정렬 된 세트의 비교기와 동일합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0fb63792a28dd0738ee92a341649aed08cc226a" translate="yes" xml:space="preserve">
          <source>The default implementation creates a parallel &lt;code&gt;Stream&lt;/code&gt; from the collection's &lt;code&gt;Spliterator&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 컬렉션에서 병렬 &lt;code&gt;Stream&lt;/code&gt; 을 만듭니다. &lt;code&gt;Spliterator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c445c05975d79e195385fca5e455ac4e8c3782a9" translate="yes" xml:space="preserve">
          <source>The default implementation creates a sequential &lt;code&gt;Stream&lt;/code&gt; from the collection's &lt;code&gt;Spliterator&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 컬렉션의 &lt;code&gt;Spliterator&lt;/code&gt; 에서 순차적 &lt;code&gt;Stream&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="0756a19f538e03251d82bce57908ce16eedd0e93" translate="yes" xml:space="preserve">
          <source>The default implementation creates a stream whose source is derived from the enumeration returned from a call to &lt;a href=&quot;#elements()&quot;&gt;&lt;code&gt;elements()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#elements()&quot;&gt; &lt;code&gt;elements()&lt;/code&gt; &lt;/a&gt; 대한 호출에서 반환 된 열거에서 소스가 파생 된 스트림을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="8f5a18e08ccf5130e36d85839db77e95a638fbbd" translate="yes" xml:space="preserve">
          <source>The default implementation creates an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; with no attributes. Subclasses that support fields should override this and create an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; with meaningful attributes.</source>
          <target state="translated">기본 구현은 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 이없는 AttributedCharacterIterator 를 작성 합니다. 필드를 지원하는 서브 클래스는 이것을 재정의 하고 의미있는 속성으로 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 를 작성해야 합니다.</target>
        </trans-unit>
        <trans-unit id="f54ef036e574d8872754eae7892d7ba013eb5827" translate="yes" xml:space="preserve">
          <source>The default implementation creates an &lt;em&gt;&lt;a href=&quot;../util/spliterator#binding&quot;&gt;early-binding&lt;/a&gt;&lt;/em&gt; spliterator from the iterable's &lt;code&gt;Iterator&lt;/code&gt;. The spliterator inherits the &lt;em&gt;fail-fast&lt;/em&gt; properties of the iterable's iterator.</source>
          <target state="translated">기본 구현은 iterable의 &lt;code&gt;Iterator&lt;/code&gt; 에서 &lt;em&gt;&lt;a href=&quot;../util/spliterator#binding&quot;&gt;초기 바인딩&lt;/a&gt;&lt;/em&gt; 분할자를 만듭니다 . spliterator는 iterable 반복자 의 &lt;em&gt;fail-fast&lt;/em&gt; 속성을 상속 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="257e09e4da5e8975f2d1b36e54ab7cdc57a925cc" translate="yes" xml:space="preserve">
          <source>The default implementation creates an &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;early-binding&lt;/a&gt;&lt;/em&gt; spliterator from the iterable's &lt;code&gt;Iterator&lt;/code&gt;. The spliterator inherits the &lt;em&gt;fail-fast&lt;/em&gt; properties of the iterable's iterator.</source>
          <target state="translated">기본 구현은 iterable의 &lt;code&gt;Iterator&lt;/code&gt; 에서 &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;초기 바인딩&lt;/a&gt;&lt;/em&gt; 스플리터를 작성합니다 . spliterator는 iterable 반복자 의 &lt;em&gt;fail-fast&lt;/em&gt; 특성을 상속 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c5a8f151938303873b2db8cdf0a3fbb22846237" translate="yes" xml:space="preserve">
          <source>The default implementation currently calls &lt;a href=&quot;#instant()&quot;&gt;&lt;code&gt;instant()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 현재 &lt;a href=&quot;#instant()&quot;&gt; &lt;code&gt;instant()&lt;/code&gt; &lt;/a&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="faff3da8d58dfb0a89340fcc75e40705b0c48c65" translate="yes" xml:space="preserve">
          <source>The default implementation currently calls &lt;a href=&quot;clock#instant--&quot;&gt;&lt;code&gt;instant()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 기본 구현은 &lt;a href=&quot;clock#instant--&quot;&gt; &lt;code&gt;instant()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e344a527e52059ed12cb005a4d948b2d946466df" translate="yes" xml:space="preserve">
          <source>The default implementation does not throw NullPointerException for maps that do not support null values if oldValue is null unless newValue is also null.</source>
          <target state="translated">newValue도 null이 아니면 oldValue가 null 인 경우 null 값을 지원하지 않는 맵에 대해서는 기본 구현에서 NullPointerException이 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="917b792910290b9f104f9e9bb1c1c376f6e62a1b" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
          <target state="translated">기본 구현은 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b6ed540aab9e199b2884d4affaa76db2d3f6ca29" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing. Application writers may override this method in a subclass to take specific actions for each error, such as inserting the message in a log file or printing it to the console.</source>
          <target state="translated">기본 구현은 아무것도하지 않습니다. 응용 프로그램 작성자는 로그 파일에 메시지를 삽입하거나 콘솔에 인쇄하는 등 각 오류에 대해 특정 작업을 수행하기 위해 하위 클래스에서이 메서드를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2fa04040512650b6e089bc3f0ae2b71cd522957" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing. Application writers may override this method in a subclass to take specific actions for each warning, such as inserting the message in a log file or printing it to the console.</source>
          <target state="translated">기본 구현은 아무것도하지 않습니다. 응용 프로그램 작성자는 로그 파일에 메시지를 삽입하거나 콘솔에 인쇄하는 등 각 경고에 대해 특정 작업을 수행하기 위해 하위 클래스에서이 메서드를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="015a1394dccdff069065bacbd516d1f697eaf5be" translate="yes" xml:space="preserve">
          <source>The default implementation doesn't do anything except check if the byte buffer is null.</source>
          <target state="translated">기본 구현은 바이트 버퍼가 null인지 확인하는 것 외에는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4a61e19e6ffbccadec57b1551cc40143cf063467" translate="yes" xml:space="preserve">
          <source>The default implementation examines &lt;code&gt;KeyStore.LoadStoreParameter&lt;/code&gt; to extract its password and pass it to &lt;a href=&quot;#engineLoad(java.io.InputStream,char%5B%5D)&quot;&gt;&lt;code&gt;engineLoad(InputStream, char[])&lt;/code&gt;&lt;/a&gt; along with a &lt;code&gt;null&lt;/code&gt;&lt;code&gt;InputStream&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;KeyStore.LoadStoreParameter&lt;/code&gt; 를 검사 하여 암호를 추출하고 &lt;code&gt;null&lt;/code&gt; &lt;code&gt;InputStream&lt;/code&gt; 과 함께 &lt;a href=&quot;#engineLoad(java.io.InputStream,char%5B%5D)&quot;&gt; &lt;code&gt;engineLoad(InputStream, char[])&lt;/code&gt; &lt;/a&gt; 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="04c75f19f03d2320272409a9b6ee5fa6ee52df61" translate="yes" xml:space="preserve">
          <source>The default implementation first calls &lt;a href=&quot;#getDeclaredAnnotationsByType(java.lang.Class)&quot;&gt;&lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; passing &lt;code&gt;
 annotationClass&lt;/code&gt; as the argument. If the returned array has length greater than zero, the array is returned. If the returned array is zero-length and this &lt;code&gt;AnnotatedElement&lt;/code&gt; is a class and the argument type is an inheritable annotation type, and the superclass of this &lt;code&gt;AnnotatedElement&lt;/code&gt; is non-null, then the returned result is the result of calling &lt;a href=&quot;#getAnnotationsByType(java.lang.Class)&quot;&gt;&lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; on the superclass with &lt;code&gt;
 annotationClass&lt;/code&gt; as the argument. Otherwise, a zero-length array is returned.</source>
          <target state="translated">기본 구현은 먼저 &lt;code&gt; annotationClass&lt;/code&gt; 를 인수로 전달하는 &lt;a href=&quot;#getDeclaredAnnotationsByType(java.lang.Class)&quot;&gt; &lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 반환 된 배열의 길이가 0보다 크면 배열이 반환됩니다. 반환 된 배열 길이가 0이며,이 경우 &lt;code&gt;AnnotatedElement&lt;/code&gt; 는 클래스이며, 인수 유형은 상속 주석 형이며, 이것의 슈퍼 클래스 &lt;code&gt;AnnotatedElement&lt;/code&gt; 이 null이 아닌 다음 반환 된 결과가 호출 한 결과입니다 &lt;a href=&quot;#getAnnotationsByType(java.lang.Class)&quot;&gt; &lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt; 상의 &lt;code&gt; annotationClass&lt;/code&gt; 를 인수로 사용하는 수퍼 클래스 . 그렇지 않으면 길이가 0 인 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d18445a0259ec3d88cb415f6a4ab2b65a2c28a83" translate="yes" xml:space="preserve">
          <source>The default implementation first calls &lt;a href=&quot;annotatedelement#getDeclaredAnnotationsByType-java.lang.Class-&quot;&gt;&lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; passing &lt;code&gt;annotationClass&lt;/code&gt; as the argument. If the returned array has length greater than zero, the array is returned. If the returned array is zero-length and this &lt;code&gt;AnnotatedElement&lt;/code&gt; is a class and the argument type is an inheritable annotation type, and the superclass of this &lt;code&gt;AnnotatedElement&lt;/code&gt; is non-null, then the returned result is the result of calling &lt;a href=&quot;annotatedelement#getAnnotationsByType-java.lang.Class-&quot;&gt;&lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; on the superclass with &lt;code&gt;annotationClass&lt;/code&gt; as the argument. Otherwise, a zero-length array is returned.</source>
          <target state="translated">기본 구현은 먼저 &lt;code&gt;annotationClass&lt;/code&gt; 를 인수로 전달하는 &lt;a href=&quot;annotatedelement#getDeclaredAnnotationsByType-java.lang.Class-&quot;&gt; &lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 반환 된 배열의 길이가 0보다 크면 배열이 반환됩니다. 리턴 된 배열의 길이가 0 &lt;code&gt;AnnotatedElement&lt;/code&gt; 가 클래스이고 인수 유형이 상속 가능한 어노테이션 유형 &lt;code&gt;AnnotatedElement&lt;/code&gt; 의 수퍼 클래스가 널이 아닌 경우, 리턴 된 결과는 &lt;a href=&quot;annotatedelement#getAnnotationsByType-java.lang.Class-&quot;&gt; &lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt; 를 호출 한 결과 &lt;code&gt;annotationClass&lt;/code&gt; 를 가진 수퍼 클래스 를 인수로 가지는 그렇지 않으면 길이가 0 인 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5f409c67359c70a1fbab26258bce5ae98764c750" translate="yes" xml:space="preserve">
          <source>The default implementation first performs a null check and then loops over the results of &lt;a href=&quot;#getDeclaredAnnotations()&quot;&gt;&lt;code&gt;getDeclaredAnnotations()&lt;/code&gt;&lt;/a&gt; returning the first annotation whose annotation type matches the argument type.</source>
          <target state="translated">기본 구현은 먼저 null 검사를 수행 한 다음 주석 유형이 인수 유형과 일치하는 첫 번째 주석을 반환하는 &lt;a href=&quot;#getDeclaredAnnotations()&quot;&gt; &lt;code&gt;getDeclaredAnnotations()&lt;/code&gt; &lt;/a&gt; 의 결과를 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="b29496e4ca6310ce75237ca300bd0956250bad5f" translate="yes" xml:space="preserve">
          <source>The default implementation first performs a null check and then loops over the results of &lt;a href=&quot;annotatedelement#getDeclaredAnnotations--&quot;&gt;&lt;code&gt;getDeclaredAnnotations()&lt;/code&gt;&lt;/a&gt; returning the first annotation whose annotation type matches the argument type.</source>
          <target state="translated">기본 구현은 먼저 null 검사를 수행 한 다음 &lt;a href=&quot;annotatedelement#getDeclaredAnnotations--&quot;&gt; &lt;code&gt;getDeclaredAnnotations()&lt;/code&gt; &lt;/a&gt; 결과를 반복하여 주석 유형이 인수 유형과 일치하는 첫 번째 주석을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a1d6f5a6095b0554e99b141ee336e322524a2399" translate="yes" xml:space="preserve">
          <source>The default implementation for this method calls &lt;code&gt;this.log(level, (ResourceBundle)null, format, params);&lt;/code&gt;</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;code&gt;this.log(level, (ResourceBundle)null, format, params);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7ed783ec5af5db2a80a756368c153999fcc2f80" translate="yes" xml:space="preserve">
          <source>The default implementation for this method calls &lt;code&gt;this.log(level, (ResourceBundle)null, msg, (Object[])null);&lt;/code&gt;</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;code&gt;this.log(level, (ResourceBundle)null, msg, (Object[])null);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1edfe7a005e6e29508952da6ed498589e83eebaa" translate="yes" xml:space="preserve">
          <source>The default implementation for this method calls &lt;code&gt;this.log(level, (ResourceBundle)null, msg, thrown);&lt;/code&gt;</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;code&gt;this.log(level, (ResourceBundle)null, msg, thrown);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e0aab96dc34e037657064a5b03bdd126e9cdd29" translate="yes" xml:space="preserve">
          <source>The default implementation has the following behavior.</source>
          <target state="translated">기본 구현에는 다음과 같은 동작이 있습니다.</target>
        </trans-unit>
        <trans-unit id="76fc51f1e4c0f955ef196ba818cde83a643c3ca8" translate="yes" xml:space="preserve">
          <source>The default implementation in the XPath API is equivalent to:</source>
          <target state="translated">XPath API의 기본 구현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="76ff9fb0db913e8975e85677fb1c71ccbf4fb1ea" translate="yes" xml:space="preserve">
          <source>The default implementation instantiates a &lt;code&gt;ResourceBundle&lt;/code&gt; as follows.</source>
          <target state="translated">기본 구현 은 다음과 같이 &lt;code&gt;ResourceBundle&lt;/code&gt; 을 인스턴스화 합니다.</target>
        </trans-unit>
        <trans-unit id="5125c74defd1748157bf4992a3db319b94ef8629" translate="yes" xml:space="preserve">
          <source>The default implementation invokes &lt;a href=&quot;#date(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;date(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#date(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;date(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="c6b9bc518dc5abca7b599cd10769ba038342fc7b" translate="yes" xml:space="preserve">
          <source>The default implementation invokes &lt;a href=&quot;#dateNow(java.time.Clock)&quot;&gt;&lt;code&gt;dateNow(Clock)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#dateNow(java.time.Clock)&quot;&gt; &lt;code&gt;dateNow(Clock)&lt;/code&gt; &lt;/a&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="cf84fc741015f99237c6fa0d5f13f1bf2edf7e89" translate="yes" xml:space="preserve">
          <source>The default implementation invokes &lt;a href=&quot;#getResources(java.lang.String)&quot;&gt;&lt;code&gt;getResources&lt;/code&gt;&lt;/a&gt; to find all the resources with the given name and returns a stream with the elements in the enumeration as the source.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#getResources(java.lang.String)&quot;&gt; &lt;code&gt;getResources&lt;/code&gt; &lt;/a&gt; 를 호출 하여 주어진 이름을 가진 모든 리소스를 찾고 열거 형의 요소가있는 스트림을 소스로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="918bb92ec2528bdf22aec70dfdfb2fe0a6e367dd" translate="yes" xml:space="preserve">
          <source>The default implementation invokes &lt;a href=&quot;chronology#date-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;date(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;chronology#date-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;date(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="79e8716004917e61f473c5368fc8648954fb1f82" translate="yes" xml:space="preserve">
          <source>The default implementation invokes &lt;a href=&quot;chronology#dateNow-java.time.Clock-&quot;&gt;&lt;code&gt;dateNow(Clock)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;chronology#dateNow-java.time.Clock-&quot;&gt; &lt;code&gt;dateNow(Clock)&lt;/code&gt; &lt;/a&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="8a677b54b78c2ebe777eecf74ae8334f8e9175b3" translate="yes" xml:space="preserve">
          <source>The default implementation invokes &lt;code&gt;commitEdit&lt;/code&gt; on the &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;JFormattedTextField&lt;/code&gt; 에서 &lt;code&gt;commitEdit&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="4280a030f5f4bcaa0574fe6a03b091a5349b2954" translate="yes" xml:space="preserve">
          <source>The default implementation invokes the 2-arg &lt;code&gt;select&lt;/code&gt; method with a timeout of &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 시간 제한이 &lt;code&gt;0&lt;/code&gt; 인 2-arg &lt;code&gt;select&lt;/code&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="f201cb27f579e287a4f63b1b45f069af5cb6de77" translate="yes" xml:space="preserve">
          <source>The default implementation invokes the &lt;a href=&quot;#find(java.lang.String)&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; method to get a URI to the resource. If found, then it attempts to construct a &lt;a href=&quot;../../net/url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; and open a connection to the resource.</source>
          <target state="translated">기본 구현은 리소스에 대한 URI를 가져 오기 위해 &lt;a href=&quot;#find(java.lang.String)&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 . 발견되면 &lt;a href=&quot;../../net/url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt; 을 구성 하고 리소스에 대한 연결을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="d8becddc19fc6787dfd309cd2057c35458a2404e" translate="yes" xml:space="preserve">
          <source>The default implementation invokes the &lt;a href=&quot;#open(java.lang.String)&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method and reads all bytes from the input stream into a byte buffer.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#open(java.lang.String)&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 메서드를 호출하고 입력 스트림의 모든 바이트를 바이트 버퍼로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="f9590f8eaa18849a8592b18c637655ca18ace38a" translate="yes" xml:space="preserve">
          <source>The default implementation is &lt;code&gt;d.accept(v, null)&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;d.accept(v, null)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="69248a763daad9836a5e4d07f880d90416805392" translate="yes" xml:space="preserve">
          <source>The default implementation is &lt;code&gt;d.accept(v, p)&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;d.accept(v, p)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="969810341a94056240a01c265d8dcfbc92862580" translate="yes" xml:space="preserve">
          <source>The default implementation is &lt;code&gt;visit(av, null)&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;visit(av, null)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a7719650f3be22efa3ae2b3d6cb5149efca18d31" translate="yes" xml:space="preserve">
          <source>The default implementation is &lt;code&gt;visit(e, null)&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;visit(e, null)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e4c5ec86b3b0dc71f7b74213cb99032ff4faec46" translate="yes" xml:space="preserve">
          <source>The default implementation is &lt;code&gt;visit(t, null)&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;visit(t, null)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="da5a2acbca642011696a1bdec42c20b900dfcae9" translate="yes" xml:space="preserve">
          <source>The default implementation is a no-op.</source>
          <target state="translated">기본 구현은 no-op입니다.</target>
        </trans-unit>
        <trans-unit id="4853508601d7009dec13f8c179307fb174e6089b" translate="yes" xml:space="preserve">
          <source>The default implementation is equivalent for this path to:</source>
          <target state="translated">기본 구현은 다음 경로에 대해 동일합니다.</target>
        </trans-unit>
        <trans-unit id="014a22a299a670f8d7b72efc0612886981858d75" translate="yes" xml:space="preserve">
          <source>The default implementation is equivalent to performing the following steps for this &lt;code&gt;map&lt;/code&gt;, then returning the current value or &lt;code&gt;null&lt;/code&gt; if absent:</source>
          <target state="translated">기본 구현은이 &lt;code&gt;map&lt;/code&gt; 에 대해 다음 단계를 수행 한 다음 현재 값을 반환하거나 &lt;code&gt;null&lt;/code&gt; 경우 null 을 반환하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aa2710befa618a19048e8cc0acee687d89bd86c5" translate="yes" xml:space="preserve">
          <source>The default implementation is equivalent to performing the following steps for this &lt;code&gt;map&lt;/code&gt;, then returning the current value or &lt;code&gt;null&lt;/code&gt; if now absent. :</source>
          <target state="translated">기본 구현은이 &lt;code&gt;map&lt;/code&gt; 대해 다음 단계를 수행 한 다음 현재 값 또는 &lt;code&gt;null&lt;/code&gt; 을 반환하는 것과 같습니다. 경우 . :</target>
        </trans-unit>
        <trans-unit id="026c5286ae8f56b4406db07c9581d56f87f2dc0b" translate="yes" xml:space="preserve">
          <source>The default implementation is equivalent to performing the following steps for this &lt;code&gt;map&lt;/code&gt;, then returning the current value or &lt;code&gt;null&lt;/code&gt; if now absent:</source>
          <target state="translated">기본 구현은이 &lt;code&gt;map&lt;/code&gt; 에 대해 다음 단계를 수행 한 다음 현재 값을 반환하거나 현재 &lt;code&gt;null&lt;/code&gt; 경우 null 을 반환하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="896219434a8bfa3426ae2dda26bea734d6a95afc" translate="yes" xml:space="preserve">
          <source>The default implementation is equivalent to performing the following steps for this &lt;code&gt;map&lt;/code&gt;:</source>
          <target state="translated">기본 구현은이 &lt;code&gt;map&lt;/code&gt; 대해 다음 단계를 수행하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="9eef0971abbf01d3bc47a44b27a4a2cc98b3ab74" translate="yes" xml:space="preserve">
          <source>The default implementation is equivalent to the following steps for this &lt;code&gt;map&lt;/code&gt;, then returning the current value or &lt;code&gt;null&lt;/code&gt; if now absent:</source>
          <target state="translated">기본 구현은이 &lt;code&gt;map&lt;/code&gt; 의 다음 단계와 동일 하며 현재 값을 반환하거나 현재 값이 없으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5a1ed6d1f6935760905adb01f7f5686d477b69b7" translate="yes" xml:space="preserve">
          <source>The default implementation is equivalent to the following steps for this &lt;code&gt;map&lt;/code&gt;:</source>
          <target state="translated">기본 구현은이 &lt;code&gt;map&lt;/code&gt; 대한 다음 단계와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="0f4fbd7fa4d65deca0b4fd7bcc9f888ef4b839ca" translate="yes" xml:space="preserve">
          <source>The default implementation is equivalent to, for this &lt;code&gt;
 map&lt;/code&gt;:</source>
          <target state="translated">디폴트의 구현이 들어에 해당 &lt;code&gt; map&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6968615c8fa6a8bfd97574b9c80fd40718f157f2" translate="yes" xml:space="preserve">
          <source>The default implementation is equivalent to, for this &lt;code&gt;list&lt;/code&gt;:</source>
          <target state="translated">이 &lt;code&gt;list&lt;/code&gt; 의 기본 구현은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e6894200795f6724b275671bc97189a298ba8795" translate="yes" xml:space="preserve">
          <source>The default implementation is equivalent to, for this &lt;code&gt;map&lt;/code&gt;:</source>
          <target state="translated">이 &lt;code&gt;map&lt;/code&gt; 의 기본 구현은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6ad82e19106d4c9c6212dfcb565688e4b11d8f45" translate="yes" xml:space="preserve">
          <source>The default implementation is equivalent to:</source>
          <target state="translated">기본 구현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0c992514cbeaf225a16d4d2d0370866e25e54806" translate="yes" xml:space="preserve">
          <source>The default implementation is suitable for most calendar systems. If &lt;a href=&quot;../temporal/chronofield#YEAR_OF_ERA&quot;&gt;&lt;code&gt;ChronoField.YEAR_OF_ERA&lt;/code&gt;&lt;/a&gt; is found without an &lt;a href=&quot;../temporal/chronofield#ERA&quot;&gt;&lt;code&gt;ChronoField.ERA&lt;/code&gt;&lt;/a&gt; then the last era in &lt;a href=&quot;chronology#eras()&quot;&gt;&lt;code&gt;Chronology.eras()&lt;/code&gt;&lt;/a&gt; is used. The implementation assumes a 7 day week, that the first day-of-month has the value 1, that first day-of-year has the value 1, and that the first of the month and year always exists.</source>
          <target state="translated">기본 구현은 대부분의 달력 시스템에 적합합니다. 경우 &lt;a href=&quot;../temporal/chronofield#YEAR_OF_ERA&quot;&gt; &lt;code&gt;ChronoField.YEAR_OF_ERA&lt;/code&gt; 가&lt;/a&gt; 없이 발견 &lt;a href=&quot;../temporal/chronofield#ERA&quot;&gt; &lt;code&gt;ChronoField.ERA&lt;/code&gt; &lt;/a&gt; 다음의 마지막 시대 &lt;a href=&quot;chronology#eras()&quot;&gt; &lt;code&gt;Chronology.eras()&lt;/code&gt; &lt;/a&gt; 사용됩니다. 구현에서는 주 7 일, 월의 첫 번째 날에 값 1, 첫 번째 날의 값이 1, 월과 연도의 첫 번째 날이 항상 존재한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="89a10c605a0a915e925bdbb88ad6011593975fe1" translate="yes" xml:space="preserve">
          <source>The default implementation is suitable for most calendar systems. If &lt;a href=&quot;../temporal/chronofield#YEAR_OF_ERA&quot;&gt;&lt;code&gt;ChronoField.YEAR_OF_ERA&lt;/code&gt;&lt;/a&gt; is found without an &lt;a href=&quot;../temporal/chronofield#ERA&quot;&gt;&lt;code&gt;ChronoField.ERA&lt;/code&gt;&lt;/a&gt; then the last era in &lt;a href=&quot;chronology#eras--&quot;&gt;&lt;code&gt;Chronology.eras()&lt;/code&gt;&lt;/a&gt; is used. The implementation assumes a 7 day week, that the first day-of-month has the value 1, that first day-of-year has the value 1, and that the first of the month and year always exists.</source>
          <target state="translated">기본 구현은 대부분의 달력 시스템에 적합합니다. 경우 &lt;a href=&quot;../temporal/chronofield#YEAR_OF_ERA&quot;&gt; &lt;code&gt;ChronoField.YEAR_OF_ERA&lt;/code&gt; 는&lt;/a&gt; 없이 발견 &lt;a href=&quot;../temporal/chronofield#ERA&quot;&gt; &lt;code&gt;ChronoField.ERA&lt;/code&gt; &lt;/a&gt; 다음의 마지막 시대 &lt;a href=&quot;chronology#eras--&quot;&gt; &lt;code&gt;Chronology.eras()&lt;/code&gt; &lt;/a&gt; 사용됩니다. 구현에서는 주 7 일, 첫 번째 달의 값은 1, 첫 번째 날의 값은 1, 달과 연도의 첫 번째는 항상 존재한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="3c4a7b1017684d90e82ad21a62189e9c23bf358b" translate="yes" xml:space="preserve">
          <source>The default implementation iterates from minimum selected index &lt;a href=&quot;#getMinSelectionIndex()&quot;&gt;&lt;code&gt;getMinSelectionIndex()&lt;/code&gt;&lt;/a&gt; to maximum selected index &lt;a href=&quot;#getMaxSelectionIndex()&quot;&gt;&lt;code&gt;getMaxSelectionIndex()&lt;/code&gt;&lt;/a&gt; and returns the number of selected indices &lt;a href=&quot;#isSelectedIndex(int)&quot;&gt;&lt;code&gt;isSelectedIndex(int)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기본 구현은 최소 선택된 인덱스 &lt;a href=&quot;#getMinSelectionIndex()&quot;&gt; &lt;code&gt;getMinSelectionIndex()&lt;/code&gt; &lt;/a&gt; 에서 최대 선택된 인덱스 &lt;a href=&quot;#getMaxSelectionIndex()&quot;&gt; &lt;code&gt;getMaxSelectionIndex()&lt;/code&gt; &lt;/a&gt; 까지 반복하고 선택된 인덱스 의 수를 반환합니다. &lt;a href=&quot;#isSelectedIndex(int)&quot;&gt; &lt;code&gt;isSelectedIndex(int)&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0024012510c8b98cf0f9467646b8b9bcb851f1d" translate="yes" xml:space="preserve">
          <source>The default implementation iterates from minimum selected index &lt;a href=&quot;#getMinSelectionIndex()&quot;&gt;&lt;code&gt;getMinSelectionIndex()&lt;/code&gt;&lt;/a&gt; to maximum selected index &lt;a href=&quot;#getMaxSelectionIndex()&quot;&gt;&lt;code&gt;getMaxSelectionIndex()&lt;/code&gt;&lt;/a&gt; and returns the selected indices &lt;a href=&quot;#isSelectedIndex(int)&quot;&gt;&lt;code&gt;isSelectedIndex(int)&lt;/code&gt;&lt;/a&gt; in a newly allocated int array.</source>
          <target state="translated">기본 구현은 선택된 최소 인덱스 &lt;a href=&quot;#getMinSelectionIndex()&quot;&gt; &lt;code&gt;getMinSelectionIndex()&lt;/code&gt; &lt;/a&gt; 에서 최대 선택된 인덱스 &lt;a href=&quot;#getMaxSelectionIndex()&quot;&gt; &lt;code&gt;getMaxSelectionIndex()&lt;/code&gt; &lt;/a&gt; 까지 반복 하고 새로 할당 된 int 배열에서 선택된 인덱스 &lt;a href=&quot;#isSelectedIndex(int)&quot;&gt; &lt;code&gt;isSelectedIndex(int)&lt;/code&gt; &lt;/a&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="320db68af94f630bfc514979f94316c679e0b900" translate="yes" xml:space="preserve">
          <source>The default implementation just calls &lt;a href=&quot;#read(int)&quot;&gt;&lt;code&gt;read(imageIndex, param)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#read(int)&quot;&gt; &lt;code&gt;read(imageIndex, param)&lt;/code&gt; &lt;/a&gt; 만 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="af19e76588cdbfce2ffd8bc95a9d4cbb9eb587e0" translate="yes" xml:space="preserve">
          <source>The default implementation just calls &lt;a href=&quot;imagereader#read-int-&quot;&gt;&lt;code&gt;read(imageIndex, param)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;imagereader#read-int-&quot;&gt; &lt;code&gt;read(imageIndex, param)&lt;/code&gt; &lt;/a&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="030df48ed1152ec9e82a1924114a1066300d507f" translate="yes" xml:space="preserve">
          <source>The default implementation just returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 단지 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6af1cf9f6f8105d6d3149e83d9067df515873083" translate="yes" xml:space="preserve">
          <source>The default implementation makes no guarantees about detecting if the mapping function modifies this map during computation and, if appropriate, reporting an error. Non-concurrent implementations should override this method and, on a best-effort basis, throw a &lt;code&gt;ConcurrentModificationException&lt;/code&gt; if it is detected that the mapping function modifies this map during computation. Concurrent implementations should override this method and, on a best-effort basis, throw an &lt;code&gt;IllegalStateException&lt;/code&gt; if it is detected that the mapping function modifies this map during computation and as a result computation would never complete.</source>
          <target state="translated">기본 구현은 매핑 함수가 계산 중에이 맵을 수정하는지 감지하고 적절한 경우 오류를보고하는 것에 대해 보장하지 않습니다. 비 동시 구현은이 메서드를 재정의해야 하며 매핑 함수가 계산 중에이 맵을 수정하는 것으로 감지되면 &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 을 발생시킵니다. 동시 구현은이 메서드를 재정의해야 하며 매핑 함수가 계산 중에이 맵을 수정하는 것으로 감지되어 결과적으로 계산이 완료되지 않는 경우 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생시켜야합니다.</target>
        </trans-unit>
        <trans-unit id="a9a52bc050ff9c3d8d762b1de4c857351bf1e608" translate="yes" xml:space="preserve">
          <source>The default implementation makes no guarantees about detecting if the remapping function modifies this map during computation and, if appropriate, reporting an error. Non-concurrent implementations should override this method and, on a best-effort basis, throw a &lt;code&gt;ConcurrentModificationException&lt;/code&gt; if it is detected that the remapping function modifies this map during computation. Concurrent implementations should override this method and, on a best-effort basis, throw an &lt;code&gt;IllegalStateException&lt;/code&gt; if it is detected that the remapping function modifies this map during computation and as a result computation would never complete.</source>
          <target state="translated">기본 구현은 리매핑 함수가 계산 중에이 맵을 수정하는지 감지하고 해당하는 경우 오류를보고하는 것에 대해 보장하지 않습니다. 비 동시 구현은이 메서드를 재정의해야하며, 계산 중에 리 맵핑 함수가이 맵을 수정하는 것이 감지되면 &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 을 발생 시켜야 합니다. 동시 구현은이 메서드를 재정의해야하며, 리매핑 함수가 계산 중에이 맵을 수정하는 것으로 감지되어 결과 계산이 완료되지 않을 경우 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생시켜야합니다.</target>
        </trans-unit>
        <trans-unit id="4333a467dfc27a2a2e92417f9cda2aa5f63dd748" translate="yes" xml:space="preserve">
          <source>The default implementation makes no guarantees about synchronization or atomicity properties of this method. Any implementation providing atomicity guarantees must override this method and document its concurrency properties.</source>
          <target state="translated">기본 구현은이 메소드의 동기화 또는 원 자성 특성을 보장하지 않습니다. 원 자성 보장을 제공하는 모든 구현은이 방법을 재정의하고 동시성 속성을 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="a9052a30fa282fd5d62ff058e23ca591de82a02d" translate="yes" xml:space="preserve">
          <source>The default implementation makes no guarantees about synchronization or atomicity properties of this method. Any implementation providing atomicity guarantees must override this method and document its concurrency properties. In particular, all implementations of subinterface &lt;a href=&quot;concurrent/concurrentmap&quot;&gt;&lt;code&gt;ConcurrentMap&lt;/code&gt;&lt;/a&gt; must document whether the function is applied once atomically only if the value is not present.</source>
          <target state="translated">기본 구현은이 메소드의 동기화 또는 원 자성 특성을 보장하지 않습니다. 원 자성 보장을 제공하는 모든 구현은이 메소드를 대체하고 동시성 특성을 문서화해야합니다. 특히, 서브 인터페이스 &lt;a href=&quot;concurrent/concurrentmap&quot;&gt; &lt;code&gt;ConcurrentMap&lt;/code&gt; &lt;/a&gt; 의 모든 구현은 값이 존재하지 않는 경우에만 함수가 원자 적으로 한 번 적용되는지 여부를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="09cf4e6c16ff89012e5f3b72b00fae04d8a3d81e" translate="yes" xml:space="preserve">
          <source>The default implementation makes no guarantees about synchronization or atomicity properties of this method. Any implementation providing atomicity guarantees must override this method and document its concurrency properties. In particular, all implementations of subinterface &lt;a href=&quot;concurrent/concurrentmap&quot;&gt;&lt;code&gt;ConcurrentMap&lt;/code&gt;&lt;/a&gt; must document whether the mapping function is applied once atomically only if the value is not present.</source>
          <target state="translated">기본 구현은이 메서드의 동기화 또는 원 자성 속성에 대해 보장하지 않습니다. 원 자성 보장을 제공하는 모든 구현은이 메서드를 재정의하고 동시성 속성을 문서화해야합니다. 특히 하위 인터페이스 &lt;a href=&quot;concurrent/concurrentmap&quot;&gt; &lt;code&gt;ConcurrentMap&lt;/code&gt; &lt;/a&gt; 의 모든 구현은 값이없는 경우에만 매핑 함수가 원자 적으로 한 번 적용되는지 여부를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="61420a27801d1d95792d57cd62ef9134060f89c5" translate="yes" xml:space="preserve">
          <source>The default implementation makes no guarantees about synchronization or atomicity properties of this method. Any implementation providing atomicity guarantees must override this method and document its concurrency properties. In particular, all implementations of subinterface &lt;a href=&quot;concurrent/concurrentmap&quot;&gt;&lt;code&gt;ConcurrentMap&lt;/code&gt;&lt;/a&gt; must document whether the remapping function is applied once atomically only if the value is not present.</source>
          <target state="translated">기본 구현은이 메서드의 동기화 또는 원 자성 속성에 대해 보장하지 않습니다. 원 자성 보장을 제공하는 모든 구현은이 메서드를 재정의하고 동시성 속성을 문서화해야합니다. 특히, 하위 인터페이스 &lt;a href=&quot;concurrent/concurrentmap&quot;&gt; &lt;code&gt;ConcurrentMap&lt;/code&gt; &lt;/a&gt; 의 모든 구현은 값이없는 경우에만 리매핑 함수가 원자 적으로 한 번 적용되는지 여부를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="b0c1630fffd30b0b6b4d2d31af0476a5dbd4ac3e" translate="yes" xml:space="preserve">
          <source>The default implementation may call &lt;a href=&quot;#getDeclaredAnnotation(java.lang.Class)&quot;&gt;&lt;code&gt;getDeclaredAnnotation(Class)&lt;/code&gt;&lt;/a&gt; one or more times to find a directly present annotation and, if the annotation type is repeatable, to find a container annotation. If annotations of the annotation type &lt;code&gt;annotationClass&lt;/code&gt; are found to be both directly and indirectly present, then &lt;a href=&quot;#getDeclaredAnnotations()&quot;&gt;&lt;code&gt;getDeclaredAnnotations()&lt;/code&gt;&lt;/a&gt; will get called to determine the order of the elements in the returned array.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#getDeclaredAnnotation(java.lang.Class)&quot;&gt; &lt;code&gt;getDeclaredAnnotation(Class)&lt;/code&gt; &lt;/a&gt; 한 번 이상 호출 하여 직접 현재 주석을 찾고 주석 유형이 반복 가능한 경우 컨테이너 주석을 찾을 수 있습니다. 어노테이션 유형 &lt;code&gt;annotationClass&lt;/code&gt; 의 어노테이션 이 직접 및 간접적으로 존재하는 것으로 확인되면 &lt;a href=&quot;#getDeclaredAnnotations()&quot;&gt; &lt;code&gt;getDeclaredAnnotations()&lt;/code&gt; &lt;/a&gt; 가 호출되어 리턴 된 배열의 요소 순서를 판별합니다.</target>
        </trans-unit>
        <trans-unit id="6e3bd2dd9cf90d335e6718a23d07e019f6c4fbc3" translate="yes" xml:space="preserve">
          <source>The default implementation may call &lt;a href=&quot;annotatedelement#getDeclaredAnnotation-java.lang.Class-&quot;&gt;&lt;code&gt;getDeclaredAnnotation(Class)&lt;/code&gt;&lt;/a&gt; one or more times to find a directly present annotation and, if the annotation type is repeatable, to find a container annotation. If annotations of the annotation type &lt;code&gt;annotationClass&lt;/code&gt; are found to be both directly and indirectly present, then &lt;a href=&quot;annotatedelement#getDeclaredAnnotations--&quot;&gt;&lt;code&gt;getDeclaredAnnotations()&lt;/code&gt;&lt;/a&gt; will get called to determine the order of the elements in the returned array.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;annotatedelement#getDeclaredAnnotation-java.lang.Class-&quot;&gt; &lt;code&gt;getDeclaredAnnotation(Class)&lt;/code&gt; &lt;/a&gt; 한 번 이상 호출 하여 직접 존재하는 주석을 찾고 주석 유형이 반복 가능한 경우 컨테이너 주석을 찾을 수 있습니다. 어노테이션 유형 &lt;code&gt;annotationClass&lt;/code&gt; 의 어노테이션 이 직접 및 간접적으로 존재하는 것으로 밝혀 지면 , &lt;a href=&quot;annotatedelement#getDeclaredAnnotations--&quot;&gt; &lt;code&gt;getDeclaredAnnotations()&lt;/code&gt; &lt;/a&gt; 가 호출되어 리턴 된 배열의 요소 순서를 판별합니다.</target>
        </trans-unit>
        <trans-unit id="6cd785303d6feb56889a2312039dcca432903a18" translate="yes" xml:space="preserve">
          <source>The default implementation may retry these steps when multiple threads attempt updates including potentially calling the function repeatedly for a given key.</source>
          <target state="translated">기본 구현은 여러 스레드가 주어진 키에 대해 함수를 반복적으로 호출하는 것을 포함하여 업데이트를 시도 할 때 이러한 단계를 재 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5e2c2c4187fa5b9a4e6f992fe975bdd23985b74" translate="yes" xml:space="preserve">
          <source>The default implementation may retry these steps when multiple threads attempt updates including potentially calling the mapping function multiple times.</source>
          <target state="translated">기본 구현은 여러 스레드가 잠재적으로 맵핑 기능 호출을 여러 번 포함하여 업데이트를 시도 할 때 이러한 단계를 재 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32701543b1bc1d3c034ba9603164585a2f0ef108" translate="yes" xml:space="preserve">
          <source>The default implementation may retry these steps when multiple threads attempt updates including potentially calling the remapping function multiple times.</source>
          <target state="translated">기본 구현에서는 리 맵핑 기능을 여러 번 호출하는 것을 포함하여 여러 스레드가 업데이트를 시도 할 때 이러한 단계를 다시 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8be67d96b90561a823bdfda3d44474ce0126a3d4" translate="yes" xml:space="preserve">
          <source>The default implementation must behave as follows:</source>
          <target state="translated">기본 구현은 다음과 같이 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="70aebb7aed28f4bf168a2c97372a4c30db417af1" translate="yes" xml:space="preserve">
          <source>The default implementation must behave equivalent to this code:</source>
          <target state="translated">기본 구현은 다음 코드와 동일하게 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="fcda3bf4ce8c419c3bc7e1f477ff20b820d9b13d" translate="yes" xml:space="preserve">
          <source>The default implementation must check the locale is not null and return &lt;code&gt;toString()&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 로케일이 널이 아닌지 확인하고 &lt;code&gt;toString()&lt;/code&gt; 리턴해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e596ac7aa5bcdb03db9e92086bd5472370f3ea67" translate="yes" xml:space="preserve">
          <source>The default implementation must return a range for &lt;code&gt;ERA&lt;/code&gt; from zero to one, suitable for two era calendar systems such as ISO.</source>
          <target state="translated">기본 구현은 0과 1 사이의 &lt;code&gt;ERA&lt;/code&gt; 범위를 반환해야하며 , ISO와 같은 두 가지 달력 시스템에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="79036d29929066707dfd837bdea2877a6798d0fb" translate="yes" xml:space="preserve">
          <source>The default implementation must return null.</source>
          <target state="translated">기본 구현은 null을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="3df8c3b790ebaa8058812e7beb24ee8eb8f9d123" translate="yes" xml:space="preserve">
          <source>The default implementation obtains an array containing all elements in this list, sorts the array, and iterates over this list resetting each element from the corresponding position in the array. (This avoids the n&lt;sup&gt;2&lt;/sup&gt; log(n) performance that would result from attempting to sort a linked list in place.)</source>
          <target state="translated">기본 구현은이 목록의 모든 요소가 포함 된 배열을 가져 와서 배열을 정렬 한 다음이 목록을 반복하여 배열의 해당 위치에서 각 요소를 재설정합니다. (이것은 링크 된 목록을 정렬하려고 시도 할 때 발생 하는 n &lt;sup&gt;2&lt;/sup&gt; log (n) 성능을 피합니다 .)</target>
        </trans-unit>
        <trans-unit id="b77c696e5d385be62c442a77d5dfc3bf1290cbfa" translate="yes" xml:space="preserve">
          <source>The default implementation obtains the &lt;a href=&quot;basestream#spliterator()&quot;&gt;&lt;code&gt;spliterator&lt;/code&gt;&lt;/a&gt; of this stream, wraps that spliterator so as to support the semantics of this operation on traversal, and returns a new stream associated with the wrapped spliterator. The returned stream preserves the execution characteristics of this stream (namely parallel or sequential execution as per &lt;a href=&quot;basestream#isParallel()&quot;&gt;&lt;code&gt;BaseStream.isParallel()&lt;/code&gt;&lt;/a&gt;) but the wrapped spliterator may choose to not support splitting. When the returned stream is closed, the close handlers for both the returned and this stream are invoked.</source>
          <target state="translated">기본 구현은 이 스트림 의 &lt;a href=&quot;basestream#spliterator()&quot;&gt; &lt;code&gt;spliterator&lt;/code&gt; &lt;/a&gt; 작업의 의미를 지원하도록 해당 분할기를 래핑하고 래핑 된 분할 자와 연결된 새 스트림을 반환합니다. 반환 된 스트림은이 스트림의 실행 특성 (즉 &lt;a href=&quot;basestream#isParallel()&quot;&gt; &lt;code&gt;BaseStream.isParallel()&lt;/code&gt; &lt;/a&gt; 따른 병렬 또는 순차 실행 )을 유지하지만 래핑 된 분할자는 분할을 지원하지 않도록 선택할 수 있습니다. 반환 된 스트림이 닫히면 반환 된 스트림과이 스트림 모두에 대한 닫기 처리기가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="bf582c117266aef48b979667e1f9537dfa4c763e" translate="yes" xml:space="preserve">
          <source>The default implementation obtains the parameters from an SSLSocket created by calling the &lt;a href=&quot;../socketfactory#createSocket()&quot;&gt;SocketFactory.createSocket()&lt;/a&gt; method of this context's SocketFactory.</source>
          <target state="translated">기본 구현은 이 컨텍스트의 SocketFactory 의 &lt;a href=&quot;../socketfactory#createSocket()&quot;&gt;SocketFactory.createSocket ()&lt;/a&gt; 메소드를 호출하여 생성 된 SSLSocket에서 매개 변수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="7ca6949caf6b0d77298ceb070d9d0d30bb4360e1" translate="yes" xml:space="preserve">
          <source>The default implementation obtains the parameters from an SSLSocket created by calling the &lt;a href=&quot;../socketfactory#createSocket--&quot;&gt;SocketFactory.createSocket()&lt;/a&gt; method of this context's SocketFactory.</source>
          <target state="translated">기본 구현은 이 컨텍스트 &lt;a href=&quot;../socketfactory#createSocket--&quot;&gt;SocketFactory&lt;/a&gt; 의 SocketFactory.createSocket () 메소드를 호출하여 작성된 SSLSocket에서 매개 변수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="c418637543b255b44f23108a721195124d1241f4" translate="yes" xml:space="preserve">
          <source>The default implementation of a &lt;code&gt;Button&lt;/code&gt; component's data model.</source>
          <target state="translated">&lt;code&gt;Button&lt;/code&gt; 구성 요소 데이터 모델 의 기본 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="a46903e2f8be5d1a652b50626c97cde2a7e79a58" translate="yes" xml:space="preserve">
          <source>The default implementation of each of the other &lt;code&gt;check&lt;/code&gt; methods in &lt;code&gt;SecurityManager&lt;/code&gt; is to call the &lt;code&gt;SecurityManager checkPermission&lt;/code&gt; method to determine if the calling thread has permission to perform the requested operation.</source>
          <target state="translated">다른 각각의 디폴트 구현 &lt;code&gt;check&lt;/code&gt; 의 방법 &lt;code&gt;SecurityManager&lt;/code&gt; 부르는 것입니다 &lt;code&gt;SecurityManager checkPermission&lt;/code&gt; 호출 스레드 요청 된 작업을 수행 할 수있는 권한이 있는지 확인하는 방법을.</target>
        </trans-unit>
        <trans-unit id="194f68e1f88ebcca128cef62920628165032bef2" translate="yes" xml:space="preserve">
          <source>The default implementation of the Document interface (AbstractDocument) supports asynchronous mutations. If this feature is used (i.e. mutations are made from a thread other than the Swing event thread), the listeners will be notified via the mutating thread. &lt;em&gt;This means that if asynchronous updates are made, the implementation of this interface must be threadsafe&lt;/em&gt;!</source>
          <target state="translated">문서 인터페이스 (AbstractDocument)의 기본 구현은 비동기 변형을 지원합니다. 이 기능이 사용되는 경우 (즉, Swing 이벤트 스레드가 아닌 스레드에서 변형이 만들어 짐) 리스너는 변형 스레드를 통해 알림을받습니다. &lt;em&gt;즉, 비동기 업데이트가 수행되면이 인터페이스의 구현이 스레드로부터 안전해야합니다&lt;/em&gt; !</target>
        </trans-unit>
        <trans-unit id="2902eaa365f315a492760df3b0342c55b6971099" translate="yes" xml:space="preserve">
          <source>The default implementation of this is to simply return 10% of the visible area. Subclasses are likely to be able to provide a much more reasonable value.</source>
          <target state="translated">이것의 기본 구현은 단순히 가시 영역의 10 %를 반환하는 것입니다. 서브 클래스는 훨씬 더 합리적인 값을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21f4bf8e720bab2407797d13a3a3258653140692" translate="yes" xml:space="preserve">
          <source>The default implementation of this is to simply return the visible area. Subclasses will likely be able to provide a much more reasonable value.</source>
          <target state="translated">이것의 기본 구현은 단순히 보이는 영역을 반환하는 것입니다. 서브 클래스는 훨씬 더 합리적인 값을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d57182faa5a56d287f3fccf41980142289b8f413" translate="yes" xml:space="preserve">
          <source>The default implementation of this method always returns &lt;code&gt;false&lt;/code&gt;; it should be overridden by auto-detecting decoders to return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 메소드의 기본 구현은 항상 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 . 자동 감지 디코더로 재정 의하여 &lt;code&gt;true&lt;/code&gt; 를 반환해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="8e6ec8de1749dc65a1db36ab0e96100e3f43a438" translate="yes" xml:space="preserve">
          <source>The default implementation of this method always throws an &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;; it should be overridden by auto-detecting decoders to return &lt;code&gt;true&lt;/code&gt; once the input charset has been determined.</source>
          <target state="translated">이 메소드의 기본 구현은 항상 &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생시킵니다&lt;/a&gt; . 입력 문자 집합이 결정되면 &lt;code&gt;true&lt;/code&gt; 를 반환하도록 자동 감지 디코더로이를 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="84c56c6184f245e5717d0eed4a21403c086527ad" translate="yes" xml:space="preserve">
          <source>The default implementation of this method always throws an &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;; it should be overridden by auto-detecting decoders to return the appropriate value.</source>
          <target state="translated">이 메소드의 기본 구현은 항상 &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생시킵니다&lt;/a&gt; . 적절한 값을 반환하려면 자동 감지 디코더로 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="5ad6046025a346f178117a76745df22c6fa57daf" translate="yes" xml:space="preserve">
          <source>The default implementation of this method calls &lt;a href=&quot;#getAllModuleElements()&quot;&gt;&lt;code&gt;getAllModuleElements&lt;/code&gt;&lt;/a&gt; and stores the result. If the set of modules is empty, &lt;a href=&quot;#getPackageElement(java.lang.CharSequence)&quot;&gt;&lt;code&gt;getPackageElement(name)&lt;/code&gt;&lt;/a&gt; is called passing through the name argument. If &lt;code&gt;
 getPackageElement(name)&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, an empty set of package elements is returned; otherwise, a single-element set with the found package element is returned. If the set of modules is nonempty, the modules are iterated over and any non-&lt;code&gt;null&lt;/code&gt; results of &lt;a href=&quot;#getPackageElement(javax.lang.model.element.ModuleElement,java.lang.CharSequence)&quot;&gt;&lt;code&gt;getPackageElement(module, name)&lt;/code&gt;&lt;/a&gt; are accumulated into a set. The set is then returned.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;a href=&quot;#getAllModuleElements()&quot;&gt; &lt;code&gt;getAllModuleElements&lt;/code&gt; 를&lt;/a&gt; 호출 하고 결과를 저장합니다. 모듈 집합이 비어 있으면 name 인수를 통해 &lt;a href=&quot;#getPackageElement(java.lang.CharSequence)&quot;&gt; &lt;code&gt;getPackageElement(name)&lt;/code&gt; &lt;/a&gt; 가 호출됩니다. 경우 &lt;code&gt; getPackageElement(name)&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; , 패키지 요소의 빈 집합이 반환됩니다; 그렇지 않으면 발견 된 패키지 요소가있는 단일 요소 세트가 리턴됩니다. 모듈 집합이 비어 있지 않으면 모듈이 반복되고 &lt;a href=&quot;#getPackageElement(javax.lang.model.element.ModuleElement,java.lang.CharSequence)&quot;&gt; &lt;code&gt;getPackageElement(module, name)&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;null&lt;/code&gt; 이 아닌 결과가 집합에 누적됩니다. 그런 다음 세트가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e02e5674c176d73608cc9f43f45a519697ef9965" translate="yes" xml:space="preserve">
          <source>The default implementation of this method calls &lt;a href=&quot;#getAllModuleElements()&quot;&gt;&lt;code&gt;getAllModuleElements&lt;/code&gt;&lt;/a&gt; and stores the result. If the set of modules is empty, &lt;a href=&quot;#getTypeElement(java.lang.CharSequence)&quot;&gt;&lt;code&gt;getTypeElement(name)&lt;/code&gt;&lt;/a&gt; is called passing through the name argument. If &lt;code&gt;
 getTypeElement(name)&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, an empty set of type elements is returned; otherwise, a single-element set with the found type element is returned. If the set of modules is nonempty, the modules are iterated over and any non-&lt;code&gt;null&lt;/code&gt; results of &lt;a href=&quot;#getTypeElement(javax.lang.model.element.ModuleElement,java.lang.CharSequence)&quot;&gt;&lt;code&gt;getTypeElement(module, name)&lt;/code&gt;&lt;/a&gt; are accumulated into a set. The set is then returned.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;a href=&quot;#getAllModuleElements()&quot;&gt; &lt;code&gt;getAllModuleElements&lt;/code&gt; 를&lt;/a&gt; 호출 하고 결과를 저장합니다. 모듈 집합이 비어 있으면 name 인수를 통해 &lt;a href=&quot;#getTypeElement(java.lang.CharSequence)&quot;&gt; &lt;code&gt;getTypeElement(name)&lt;/code&gt; &lt;/a&gt; 가 호출됩니다. 경우 &lt;code&gt; getTypeElement(name)&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; 입력 요소의 빈 집합이 반환됩니다; 그렇지 않으면 발견 된 유형 요소가있는 단일 요소 세트가 리턴됩니다. 모듈 집합이 비어 있지 않으면 모듈이 반복되고 &lt;a href=&quot;#getTypeElement(javax.lang.model.element.ModuleElement,java.lang.CharSequence)&quot;&gt; &lt;code&gt;getTypeElement(module, name)&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;null&lt;/code&gt; 이 아닌 결과가 집합에 누적됩니다. 그런 다음 세트가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="42619e88e941623563b21aea42e15fc7a627cb8b" translate="yes" xml:space="preserve">
          <source>The default implementation of this method calls the &lt;a href=&quot;#toBundleName(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;toBundleName&lt;/code&gt;&lt;/a&gt; method to get the bundle name for the &lt;code&gt;baseName&lt;/code&gt; and &lt;code&gt;locale&lt;/code&gt; and finds the resource bundle of the bundle name local in the module of this provider. It will only search the formats specified when this provider was constructed.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;a href=&quot;#toBundleName(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;toBundleName&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 &lt;code&gt;baseName&lt;/code&gt; 및 &lt;code&gt;locale&lt;/code&gt; 대한 번들 이름을 가져 오고이 제공자의 모듈에서 로컬 번들 이름의 자원 번들을 찾습니다. 이 공급자가 생성 될 때 지정된 형식 만 검색합니다.</target>
        </trans-unit>
        <trans-unit id="94cb0b909cb4d97aa17572e07af882784947dd9a" translate="yes" xml:space="preserve">
          <source>The default implementation of this method calls the &lt;code&gt;paint&lt;/code&gt; method.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;code&gt;paint&lt;/code&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="4a97315f229bd60e18ee18baee0d8eac43eeaa7f" translate="yes" xml:space="preserve">
          <source>The default implementation of this method creates an empty result set, iterates over the annotations in the argument array calling &lt;a href=&quot;#getElementsAnnotatedWith(javax.lang.model.element.TypeElement)&quot;&gt;&lt;code&gt;getElementsAnnotatedWith(TypeElement)&lt;/code&gt;&lt;/a&gt; on each annotation and adding those results to the result set. Finally, the contents of the result set are returned as an unmodifiable set.</source>
          <target state="translated">이 메서드의 기본 구현은 빈 결과 집합을 만들고 인수 배열의 주석을 반복하며 각 주석에서 &lt;a href=&quot;#getElementsAnnotatedWith(javax.lang.model.element.TypeElement)&quot;&gt; &lt;code&gt;getElementsAnnotatedWith(TypeElement)&lt;/code&gt; &lt;/a&gt; 를 호출 하고 해당 결과를 결과 집합에 추가합니다. 마지막으로 결과 집합의 내용은 수정할 수없는 집합으로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2cd6f596956b1db41b7082548546a22f292e89bb" translate="yes" xml:space="preserve">
          <source>The default implementation of this method creates an empty result set, iterates over the annotations in the argument set calling &lt;a href=&quot;#getElementsAnnotatedWith(java.lang.Class)&quot;&gt;&lt;code&gt;getElementsAnnotatedWith(Class)&lt;/code&gt;&lt;/a&gt; on each annotation and adding those results to the result set. Finally, the contents of the result set are returned as an unmodifiable set.</source>
          <target state="translated">이 메서드의 기본 구현은 빈 결과 집합을 만들고 각 주석에 대해 &lt;a href=&quot;#getElementsAnnotatedWith(java.lang.Class)&quot;&gt; &lt;code&gt;getElementsAnnotatedWith(Class)&lt;/code&gt; &lt;/a&gt; 를 호출 하고 결과 집합에 해당 결과를 추가하는 인수 집합의 주석을 반복 합니다. 마지막으로 결과 집합의 내용은 수정할 수없는 집합으로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a58a102eae4311db2f6f37b7e4387da56ae8cf4f" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing and has no side-effects.</source>
          <target state="translated">이 메소드의 기본 구현은 아무 작업도 수행하지 않으며 부작용이 없습니다.</target>
        </trans-unit>
        <trans-unit id="209bc4a07916148fe0b9c0615a78a313f42238b8" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing for Standard MBeans. For MXBeans, it removes any information that was recorded by the &lt;a href=&quot;#preRegister(javax.management.MBeanServer,javax.management.ObjectName)&quot;&gt;&lt;code&gt;preRegister&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드의 기본 구현은 표준 MBean에 대해 아무 작업도 수행하지 않습니다. MXBean의 경우 &lt;a href=&quot;#preRegister(javax.management.MBeanServer,javax.management.ObjectName)&quot;&gt; &lt;code&gt;preRegister&lt;/code&gt; &lt;/a&gt; 메소드에 의해 기록 된 모든 정보를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="3994ea328aca33c69fba9329be5dd141f01d5e2c" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing for Standard MBeans. For MXBeans, it removes any information that was recorded by the &lt;a href=&quot;standardmbean#preRegister-javax.management.MBeanServer-javax.management.ObjectName-&quot;&gt;&lt;code&gt;preRegister&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드의 기본 구현은 표준 MBean에 대해서는 아무 것도 수행하지 않습니다. MXBean의 경우, &lt;a href=&quot;standardmbean#preRegister-javax.management.MBeanServer-javax.management.ObjectName-&quot;&gt; &lt;code&gt;preRegister&lt;/code&gt; &lt;/a&gt; 메소드 로 기록 된 정보를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="a98b54dd0458a0a368a9a905b8a062000d2bd097" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing for Standard MBeans. For MXBeans, it undoes any work done by &lt;a href=&quot;#preRegister(javax.management.MBeanServer,javax.management.ObjectName)&quot;&gt;&lt;code&gt;preRegister&lt;/code&gt;&lt;/a&gt; if registration fails.</source>
          <target state="translated">이 메소드의 기본 구현은 표준 MBean에 대해 아무 작업도 수행하지 않습니다. MXBean의 경우 등록이 실패하면 &lt;a href=&quot;#preRegister(javax.management.MBeanServer,javax.management.ObjectName)&quot;&gt; &lt;code&gt;preRegister&lt;/code&gt; &lt;/a&gt; 가 수행 한 모든 작업을 취소 합니다.</target>
        </trans-unit>
        <trans-unit id="30bd152bf900f1b000302b88ac35a6924367dc91" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing for Standard MBeans. For MXBeans, it undoes any work done by &lt;a href=&quot;standardmbean#preRegister-javax.management.MBeanServer-javax.management.ObjectName-&quot;&gt;&lt;code&gt;preRegister&lt;/code&gt;&lt;/a&gt; if registration fails.</source>
          <target state="translated">이 메소드의 기본 구현은 표준 MBean에 대해서는 아무 것도 수행하지 않습니다. MXBean의 경우 등록이 실패하면 &lt;a href=&quot;standardmbean#preRegister-javax.management.MBeanServer-javax.management.ObjectName-&quot;&gt; &lt;code&gt;preRegister&lt;/code&gt; &lt;/a&gt; 가 수행 한 모든 작업을 취소 합니다.</target>
        </trans-unit>
        <trans-unit id="8765bc738015d203a4af606c4a6f55768a8e5a11" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing, and always returns &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt;&lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt;&lt;/a&gt;. This method should be overridden by decoders that may need to write final characters to the output buffer once the entire input sequence has been read.</source>
          <target state="translated">이 메소드의 기본 구현은 아무 작업도 수행하지 않으며 항상 &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt; &lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt; 를&lt;/a&gt; 리턴합니다 . 이 방법은 전체 입력 시퀀스를 읽은 후 최종 문자를 출력 버퍼에 기록해야하는 디코더로 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="21136800dfa96253addc04e09765f4dfaf422034" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing, and always returns &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt;&lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt;&lt;/a&gt;. This method should be overridden by encoders that may need to write final bytes to the output buffer once the entire input sequence has been read.</source>
          <target state="translated">이 메소드의 기본 구현은 아무 작업도 수행하지 않으며 항상 &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt; &lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt; 를&lt;/a&gt; 리턴합니다 . 이 방법은 전체 입력 시퀀스를 읽은 후 최종 버퍼를 출력 버퍼에 기록해야하는 인코더로 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="dbc8af0e398eadda26724c4a515729c005773991" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing.</source>
          <target state="translated">이 메소드의 기본 구현은 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e6356e6ebfa2c78a362b78ff6d4ee7f0de096b5f" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing. This method should be overridden by decoders that maintain internal state.</source>
          <target state="translated">이 메소드의 기본 구현은 아무 것도 수행하지 않습니다. 이 방법은 내부 상태를 유지하는 디코더로 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="d1b84f2a9743dc119ac2d3713895968a7add43d0" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing. This method should be overridden by decoders that require notification of changes to the malformed-input action.</source>
          <target state="translated">이 메소드의 기본 구현은 아무 것도 수행하지 않습니다. 이 방법은 잘못된 입력 조치 변경 사항을 통지해야하는 디코더로 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="e6ce0b265ee419122ec8855546bfd3a2ae99478e" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing. This method should be overridden by decoders that require notification of changes to the replacement.</source>
          <target state="translated">이 메소드의 기본 구현은 아무 것도 수행하지 않습니다. 이 방법은 대체 변경 사항에 대한 알림이 필요한 디코더로 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="767016fd3314e89124d0d9b043175bc59403ace2" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing. This method should be overridden by decoders that require notification of changes to the unmappable-character action.</source>
          <target state="translated">이 메소드의 기본 구현은 아무 것도 수행하지 않습니다. 매핑 할 수없는 문자 작업에 대한 변경 알림을 요구하는 디코더가이 방법을 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="12a06e718e61fe0fff9794455337b56a5d988056" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing. This method should be overridden by encoders that maintain internal state.</source>
          <target state="translated">이 메소드의 기본 구현은 아무 것도 수행하지 않습니다. 이 방법은 내부 상태를 유지하는 인코더로 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="a8531dcafa5f5a87dfd0a1c5b6f5a56a12c9a4b0" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing. This method should be overridden by encoders that require notification of changes to the malformed-input action.</source>
          <target state="translated">이 메소드의 기본 구현은 아무 것도 수행하지 않습니다. 이 방법은 잘못된 입력 조치 변경을 통지해야하는 인코더로 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="cba512eb19ac0e743b2cded5855b48cf016b8a76" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing. This method should be overridden by encoders that require notification of changes to the replacement.</source>
          <target state="translated">이 메소드의 기본 구현은 아무 것도 수행하지 않습니다. 이 방법은 교체 변경 알림이 필요한 인코더로 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="55160a40552ceb3074e4b342d9b8cab192478f11" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing. This method should be overridden by encoders that require notification of changes to the unmappable-character action.</source>
          <target state="translated">이 메소드의 기본 구현은 아무 것도 수행하지 않습니다. 이 방법은 매핑 할 수없는 문자 작업에 대한 변경 알림이 필요한 인코더로 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="9f460c604725d4b6aad092c435218386e84ad8ab" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing. This method should be overridden if a refresh operation is supported by the implementation.</source>
          <target state="translated">이 메소드의 기본 구현은 아무 것도 수행하지 않습니다. 구현에서 새로 고침 작업이 지원되는 경우이 방법을 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="845fbda2b27759d2fe63c2180337153361a9c337" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does nothing. This method should be overridden if a refresh operation is supported by the policy implementation.</source>
          <target state="translated">이 메소드의 기본 구현은 아무 것도 수행하지 않습니다. 정책 구현에서 새로 고침 작업을 지원하는 경우이 방법을 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="d81b717bc18ae61e330547009a5491e88ea842f5" translate="yes" xml:space="preserve">
          <source>The default implementation of this method first retrieves the permissions returned via &lt;code&gt;getPermissions(CodeSource)&lt;/code&gt; (the CodeSource is taken from the specified ProtectionDomain), as well as the permissions located inside the specified ProtectionDomain. All of these permissions are then combined and returned in a new PermissionCollection object. If &lt;code&gt;getPermissions(CodeSource)&lt;/code&gt; returns Policy.UNSUPPORTED_EMPTY_COLLECTION, then this method returns the permissions contained inside the specified ProtectionDomain in a new PermissionCollection object.</source>
          <target state="translated">이 메소드의 기본 구현은 먼저 &lt;code&gt;getPermissions(CodeSource)&lt;/code&gt; (CodeSource는 지정된 ProtectionDomain에서 가져옴) 를 통해 리턴 된 권한과 지정된 ProtectionDomain 내에있는 권한을 검색합니다. 그런 다음 이러한 모든 권한이 결합되어 새 PermissionCollection 객체로 반환됩니다. 경우 &lt;code&gt;getPermissions(CodeSource)&lt;/code&gt; Policy.UNSUPPORTED_EMPTY_COLLECTION을 반환,이 메소드는 새로운 PermissionCollection 객체에 지정된 ProtectionDomain를 내부에 포함 된 권한을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="620a7d8961a7c6b6c7c08d769ddd7371643712aa" translate="yes" xml:space="preserve">
          <source>The default implementation of this method ignores the factory that is provided.</source>
          <target state="translated">이 메소드의 기본 구현은 제공된 팩토리를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="3381d75d39ad6c933a9cf5f7d7dc2469d842d4d8" translate="yes" xml:space="preserve">
          <source>The default implementation of this method in &lt;code&gt;
 AbstractAnnotationValueVisitor6&lt;/code&gt; will always throw &lt;code&gt;
 new UnknownAnnotationValueException(av, p)&lt;/code&gt;. This behavior is not required of a subclass.</source>
          <target state="translated">&lt;code&gt; AbstractAnnotationValueVisitor6&lt;/code&gt; 에서이 메서드의 기본 구현 은 항상 &lt;code&gt; new UnknownAnnotationValueException(av, p)&lt;/code&gt; 시킵니다. 이 동작은 하위 클래스에 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="36ea79c63ebb714518e900acb3652a65ea3e4ed4" translate="yes" xml:space="preserve">
          <source>The default implementation of this method in &lt;code&gt;
 AbstractTypeVisitor6&lt;/code&gt; will always throw &lt;code&gt;
 new UnknownTypeException(t, p)&lt;/code&gt;. This behavior is not required of a subclass.</source>
          <target state="translated">&lt;code&gt; AbstractTypeVisitor6&lt;/code&gt; 에서이 메서드의 기본 구현 은 항상 &lt;code&gt; new UnknownTypeException(t, p)&lt;/code&gt; 시킵니다. 이 동작은 하위 클래스에 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1395192a4c2426ed16e9ab647006e2e67dd98144" translate="yes" xml:space="preserve">
          <source>The default implementation of this method in &lt;code&gt;AbstractAnnotationValueVisitor6&lt;/code&gt; will always throw &lt;code&gt;UnknownAnnotationValueException&lt;/code&gt;. This behavior is not required of a subclass.</source>
          <target state="translated">&lt;code&gt;AbstractAnnotationValueVisitor6&lt;/code&gt; 에서이 메소드의 기본 구현 은 항상 &lt;code&gt;UnknownAnnotationValueException&lt;/code&gt; 을 발생 시킵니다. 하위 클래스에는이 동작이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="09fc7bca50e027a1531b8ca2a649f2701ed9a9f6" translate="yes" xml:space="preserve">
          <source>The default implementation of this method in &lt;code&gt;AbstractElementVisitor6&lt;/code&gt; will always throw &lt;code&gt;UnknownElementException&lt;/code&gt;. This behavior is not required of a subclass.</source>
          <target state="translated">&lt;code&gt;AbstractElementVisitor6&lt;/code&gt; 에서이 메소드의 기본 구현 은 항상 &lt;code&gt;UnknownElementException&lt;/code&gt; 을 발생 시킵니다. 하위 클래스에는이 동작이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6fefbae56c064f322ae1403507819a3db28a14c7" translate="yes" xml:space="preserve">
          <source>The default implementation of this method in &lt;code&gt;AbstractElementVisitor6&lt;/code&gt; will always throw &lt;code&gt;new UnknownElementException(e, p)&lt;/code&gt;. This behavior is not required of a subclass.</source>
          <target state="translated">&lt;code&gt;AbstractElementVisitor6&lt;/code&gt; 에서이 메서드의 기본 구현 은 항상 &lt;code&gt;new UnknownElementException(e, p)&lt;/code&gt; 시킵니다. 이 동작은 하위 클래스에 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="37e48dcb5da9e1384dabbdd038d48c6529719db0" translate="yes" xml:space="preserve">
          <source>The default implementation of this method in &lt;code&gt;AbstractTypeVisitor6&lt;/code&gt; will always throw &lt;code&gt;UnknownTypeException&lt;/code&gt;. This behavior is not required of a subclass.</source>
          <target state="translated">&lt;code&gt;AbstractTypeVisitor6&lt;/code&gt; 에서이 메소드의 기본 구현 은 항상 &lt;code&gt;UnknownTypeException&lt;/code&gt; 을 발생 시킵니다. 하위 클래스에는이 동작이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8e7b191d5867ad1062d38b01c93fd704c4b8870c" translate="yes" xml:space="preserve">
          <source>The default implementation of this method in &lt;code&gt;ObjectInputStream&lt;/code&gt; returns the result of calling</source>
          <target state="translated">&lt;code&gt;ObjectInputStream&lt;/code&gt; 에서이 메소드의 기본 구현 은 호출 결과를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="cf3c39f51686e7f6758b61b7cbe168ee9866d63d" translate="yes" xml:space="preserve">
          <source>The default implementation of this method in &lt;code&gt;ObjectInputStream&lt;/code&gt; returns the result of calling &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; with the list of &lt;code&gt;Class&lt;/code&gt; objects for the interfaces that are named in the &lt;code&gt;interfaces&lt;/code&gt; parameter. The &lt;code&gt;Class&lt;/code&gt; object for each interface name &lt;code&gt;i&lt;/code&gt; is the value returned by calling</source>
          <target state="translated">&lt;code&gt;ObjectInputStream&lt;/code&gt; 에서이 메소드의 기본 구현은 &lt;code&gt;interfaces&lt;/code&gt; 매개 변수에 이름이 지정된 인터페이스 의 &lt;code&gt;Class&lt;/code&gt; 오브젝트 목록과 함께 &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; 를 호출 한 결과를 리턴합니다 . 각 인터페이스 이름 &lt;code&gt;i&lt;/code&gt; 의 &lt;code&gt;Class&lt;/code&gt; 객체 는 다음을 호출하여 반환 된 값입니다.</target>
        </trans-unit>
        <trans-unit id="74859b6ee9bfdad46c83820f3af96fb81266f4fd" translate="yes" xml:space="preserve">
          <source>The default implementation of this method in the superclass does nothing. Subclass implementations should ensure that all resources, especially native resources, are released.</source>
          <target state="translated">수퍼 클래스에서이 메소드의 기본 구현은 아무 것도 수행하지 않습니다. 서브 클래스 구현은 모든 자원, 특히 기본 자원이 해제되도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="3b4225043f098ad0488cf9ad97d6967252b400e5" translate="yes" xml:space="preserve">
          <source>The default implementation of this method invokes &lt;a href=&quot;#destroy()&quot;&gt;&lt;code&gt;destroy()&lt;/code&gt;&lt;/a&gt; and so may not forcibly terminate the process.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;a href=&quot;#destroy()&quot;&gt; &lt;code&gt;destroy()&lt;/code&gt; &lt;/a&gt; 호출 하므로 프로세스를 강제로 종료 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1a5c155f61f9316dae194ccbc8690f506a0f9f8f" translate="yes" xml:space="preserve">
          <source>The default implementation of this method invokes &lt;a href=&quot;process#destroy--&quot;&gt;&lt;code&gt;destroy()&lt;/code&gt;&lt;/a&gt; and so may not forcibly terminate the process. Concrete implementations of this class are strongly encouraged to override this method with a compliant implementation. Invoking this method on &lt;code&gt;Process&lt;/code&gt; objects returned by &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec-java.lang.String-&quot;&gt;&lt;code&gt;Runtime.exec(java.lang.String)&lt;/code&gt;&lt;/a&gt; will forcibly terminate the process.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;a href=&quot;process#destroy--&quot;&gt; &lt;code&gt;destroy()&lt;/code&gt; &lt;/a&gt; 호출 하므로 프로세스를 강제로 종료하지 않을 수 있습니다. 이 클래스의 구체적인 구현은이 구현을 준수하는 구현으로 재정의하는 것이 좋습니다. &lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;runtime#exec-java.lang.String-&quot;&gt; &lt;code&gt;Runtime.exec(java.lang.String)&lt;/code&gt; &lt;/a&gt; 리턴 한 &lt;code&gt;Process&lt;/code&gt; 오브젝트 에서이 메소드를 호출하면 프로세스 가 강제 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="01f3d710395b391b2d49e2b7e19b4968844486f4" translate="yes" xml:space="preserve">
          <source>The default implementation of this method invokes the &lt;a href=&quot;#transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;a href=&quot;#transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt; &lt;code&gt;transform&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="67aed0c93c9f92e5f7ddfb736b5a28c91956a767" translate="yes" xml:space="preserve">
          <source>The default implementation of this method is equivalent to</source>
          <target state="translated">이 메소드의 기본 구현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9c2a9154ee3bc4aca50e303f68455f25bb4db4eb" translate="yes" xml:space="preserve">
          <source>The default implementation of this method is not very efficient; it should generally be overridden to improve performance.</source>
          <target state="translated">이 방법의 기본 구현은 그리 효율적이지 않습니다. 일반적으로 성능을 향상 시키려면 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="c174f3aefc9b899ed1011f9d2c80c66b054859e8" translate="yes" xml:space="preserve">
          <source>The default implementation of this method is the same as the implementation of &lt;a href=&quot;../resourcebundle.control#toBundleName(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;ResourceBundle.Control.toBundleName(String, Locale)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;a href=&quot;../resourcebundle.control#toBundleName(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;ResourceBundle.Control.toBundleName(String, Locale)&lt;/code&gt; &lt;/a&gt; 구현과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="180883ef0d214bcc583e65a883e7519d97ea4003" translate="yes" xml:space="preserve">
          <source>The default implementation of this method is to return an &lt;code&gt;AccessControlContext&lt;/code&gt; object.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;code&gt;AccessControlContext&lt;/code&gt; 오브젝트 를 리턴하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="6c29090dd964171728b6f5ac2b1fe1207ef1ec10" translate="yes" xml:space="preserve">
          <source>The default implementation of this method opens a channel to the file as if by invoking the &lt;a href=&quot;#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;newByteChannel(java.nio.file.Path, java.util.Set&amp;lt;? extends java.nio.file.OpenOption&amp;gt;, java.nio.file.attribute.FileAttribute&amp;lt;?&amp;gt;...)&lt;/code&gt;&lt;/a&gt; method and constructs a stream that reads bytes from the channel. This method should be overridden where appropriate.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;a href=&quot;#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;newByteChannel(java.nio.file.Path, java.util.Set&amp;lt;? extends java.nio.file.OpenOption&amp;gt;, java.nio.file.attribute.FileAttribute&amp;lt;?&amp;gt;...)&lt;/code&gt; &lt;/a&gt; 을 호출하는 것처럼) 파일에 대한 채널을 엽니 다 . attribute.FileAttribute &amp;lt;?&amp;gt; ...) 메서드를 사용하고 채널에서 바이트를 읽는 스트림을 생성합니다. 이 메서드는 적절한 경우 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="4e14af3ccdd9a1857075a9f2a934ff60b21b9c88" translate="yes" xml:space="preserve">
          <source>The default implementation of this method opens a channel to the file as if by invoking the &lt;a href=&quot;#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;newByteChannel(java.nio.file.Path, java.util.Set&amp;lt;? extends java.nio.file.OpenOption&amp;gt;, java.nio.file.attribute.FileAttribute&amp;lt;?&amp;gt;...)&lt;/code&gt;&lt;/a&gt; method and constructs a stream that writes bytes to the channel. This method should be overridden where appropriate.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;a href=&quot;#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;newByteChannel(java.nio.file.Path, java.util.Set&amp;lt;? extends java.nio.file.OpenOption&amp;gt;, java.nio.file.attribute.FileAttribute&amp;lt;?&amp;gt;...)&lt;/code&gt; &lt;/a&gt; 을 호출하는 것처럼) 파일에 대한 채널을 엽니 다 . attribute.FileAttribute &amp;lt;?&amp;gt; ...) 메서드를 사용하고 채널에 바이트를 쓰는 스트림을 생성합니다. 이 메서드는 적절한 경우 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="c9d9bb00b9ffb7a7bd61277057d049cff0a056e2" translate="yes" xml:space="preserve">
          <source>The default implementation of this method opens a channel to the file as if by invoking the &lt;a href=&quot;filesystemprovider#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;newByteChannel(java.nio.file.Path, java.util.Set&amp;lt;? extends java.nio.file.OpenOption&amp;gt;, java.nio.file.attribute.FileAttribute&amp;lt;?&amp;gt;...)&lt;/code&gt;&lt;/a&gt; method and constructs a stream that reads bytes from the channel. This method should be overridden where appropriate.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;a href=&quot;filesystemprovider#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;newByteChannel(java.nio.file.Path, java.util.Set&amp;lt;? extends java.nio.file.OpenOption&amp;gt;, java.nio.file.attribute.FileAttribute&amp;lt;?&amp;gt;...)&lt;/code&gt; &lt;/a&gt; 을 호출하여 java.nio.file.OpenOption&amp;gt;, java.nio.file 을 호출하는 것처럼 파일에 대한 채널을 엽니 다 . attribute.FileAttribute &amp;lt;?&amp;gt; ...) 메소드를 사용하여 채널에서 바이트를 읽는 스트림을 구성합니다. 적절한 경우이 방법을 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="e635d5dffc59dbf2a8230d857d2ff39d849566f0" translate="yes" xml:space="preserve">
          <source>The default implementation of this method opens a channel to the file as if by invoking the &lt;a href=&quot;filesystemprovider#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;newByteChannel(java.nio.file.Path, java.util.Set&amp;lt;? extends java.nio.file.OpenOption&amp;gt;, java.nio.file.attribute.FileAttribute&amp;lt;?&amp;gt;...)&lt;/code&gt;&lt;/a&gt; method and constructs a stream that writes bytes to the channel. This method should be overridden where appropriate.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;a href=&quot;filesystemprovider#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;newByteChannel(java.nio.file.Path, java.util.Set&amp;lt;? extends java.nio.file.OpenOption&amp;gt;, java.nio.file.attribute.FileAttribute&amp;lt;?&amp;gt;...)&lt;/code&gt; &lt;/a&gt; 을 호출하여 java.nio.file.OpenOption&amp;gt;, java.nio.file 을 호출하는 것처럼 파일에 대한 채널을 엽니 다 . attribute.FileAttribute &amp;lt;?&amp;gt; ...) 메소드를 사용하여 채널에 바이트를 쓰는 스트림을 구성합니다. 적절한 경우이 방법을 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="b5ec40c642e09dd2502e980a52d6b7e7f5e77329" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns &lt;a href=&quot;elements.origin#EXPLICIT&quot;&gt;&lt;code&gt;EXPLICIT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;a href=&quot;elements.origin#EXPLICIT&quot;&gt; &lt;code&gt;EXPLICIT&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="27b6bbb57d8319f0d5b942584b1d2260f97ec8d8" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns &lt;code&gt;codebase&lt;/code&gt; unchanged.</source>
          <target state="translated">이 메소드의 기본 구현은 변경되지 않은 &lt;code&gt;codebase&lt;/code&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0279ac968c430844dbb750fe24866fbd667e4c7d" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="2663ec2dd7f219f463814520bf878e1f7a61d968" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns &lt;code&gt;null&lt;/code&gt;, indicating that the output should be closed immediately.</source>
          <target state="translated">이 메서드의 기본 구현은 출력을 즉시 닫아야 함을 나타내는 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="e1c9e402e3f751b0877055f67d0264d06f524ce5" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;code&gt;null&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0d51b37f6fa8fcdc1a9249bcf889ce4385dfd891" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns &lt;code&gt;null&lt;/code&gt;. Subclasses should return the group set by setGroup().</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 서브 클래스는 setGroup ()에 의해 설정된 그룹을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="1520ed6a69f68296c1cc829610cacf2ae7aef99a" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns Policy.UNSUPPORTED_EMPTY_COLLECTION object. This method can be overridden if the policy implementation can return a set of permissions granted to a CodeSource.</source>
          <target state="translated">이 메소드의 기본 구현은 Policy.UNSUPPORTED_EMPTY_COLLECTION 객체를 반환합니다. 정책 구현이 CodeSource에 부여 된 일련의 권한을 반환 할 수있는 경우이 방법을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eeb6050a1bc2e372f82c2365c1c63f09f8300eac" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns Policy.UNSUPPORTED_EMPTY_COLLECTION object. This method can be overridden if the policy implementation can return a set of permissions granted to a ProtectionDomain.</source>
          <target state="translated">이 메소드의 기본 구현은 Policy.UNSUPPORTED_EMPTY_COLLECTION 객체를 반환합니다. 정책 구현이 ProtectionDomain에 부여 된 일련의 권한을 반환 할 수있는 경우이 방법을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3456dc514497d279f977f873718814d5cf316c08" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns Policy.UNSUPPORTED_EMPTY_COLLECTION. This method can be overridden if the policy implementation can return a set of permissions granted to a CodeSource.</source>
          <target state="translated">이 메소드의 기본 구현은 Policy.UNSUPPORTED_EMPTY_COLLECTION을 리턴합니다. 정책 구현이 CodeSource에 부여 된 일련의 권한을 반환 할 수있는 경우이 방법을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c744be1c8a49c282fcac9695cdd6141136ff0296" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns an empty set.</source>
          <target state="translated">이 메서드의 기본 구현은 빈 집합을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ff397bf1e9c5a559a146f6cda49e448f572bd756" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns the &lt;code&gt;name&lt;/code&gt; parameter. It does nothing else for Standard MBeans. For MXBeans, it records the &lt;code&gt;MBeanServer&lt;/code&gt; and &lt;code&gt;ObjectName&lt;/code&gt; parameters so they can be used to translate inter-MXBean references.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;code&gt;name&lt;/code&gt; 매개 변수를 리턴합니다 . 표준 MBean에 대해서는 다른 작업을 수행하지 않습니다. MXBean의 경우 &lt;code&gt;MBeanServer&lt;/code&gt; 및 &lt;code&gt;ObjectName&lt;/code&gt; 매개 변수를 기록하므로 MXMX 간 참조를 변환하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b79e73cf1b5ed928e71581f7254e4f17f3f0c3e" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns the class name of this &lt;code&gt;Calendar&lt;/code&gt; instance. Any subclasses that implement LDML-defined calendar systems should override this method to return appropriate calendar types.</source>
          <target state="translated">이 메서드의 기본 구현은이 &lt;code&gt;Calendar&lt;/code&gt; 인스턴스 의 클래스 이름을 반환합니다 . LDML로 정의 된 달력 시스템을 구현하는 모든 하위 클래스는이 방법을 재정 의하여 적절한 달력 유형을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="be74a20cc90e49c30c1ce02f45baf5365b008f58" translate="yes" xml:space="preserve">
          <source>The default implementation of this method returns true if &lt;code&gt;subject&lt;/code&gt; is non-null and contains at least one principal that is equal to this principal.</source>
          <target state="translated">&lt;code&gt;subject&lt;/code&gt; 가 널이 아니고이 프린시 펄과 동일한 프린시 펄을 하나 이상 포함 하는 경우이 메소드의 기본 구현은 true를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="1bdd929d7607ddfade63a95378efae344f7eca75" translate="yes" xml:space="preserve">
          <source>The default implementation of this method simply invokes &lt;a href=&quot;#delete(java.nio.file.Path)&quot;&gt;&lt;code&gt;delete(java.nio.file.Path)&lt;/code&gt;&lt;/a&gt; ignoring the &lt;code&gt;NoSuchFileException&lt;/code&gt; when the file does not exist. It may be overridden where appropriate.</source>
          <target state="translated">이 메소드의 기본 구현은 파일이 존재하지 않을 때 &lt;code&gt;NoSuchFileException&lt;/code&gt; 을 무시하고 &lt;a href=&quot;#delete(java.nio.file.Path)&quot;&gt; &lt;code&gt;delete(java.nio.file.Path)&lt;/code&gt; &lt;/a&gt; 를 호출 합니다. 적절한 경우 재정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81be369eb56b7d67bf7290656729ab294f338416" translate="yes" xml:space="preserve">
          <source>The default implementation of this method simply invokes &lt;a href=&quot;filesystemprovider#delete-java.nio.file.Path-&quot;&gt;&lt;code&gt;delete(java.nio.file.Path)&lt;/code&gt;&lt;/a&gt; ignoring the &lt;code&gt;NoSuchFileException&lt;/code&gt; when the file does not exist. It may be overridden where appropriate.</source>
          <target state="translated">이 메소드의 기본 구현은 파일이 존재하지 않을 때 &lt;code&gt;NoSuchFileException&lt;/code&gt; 을 무시하고 단순히 &lt;a href=&quot;filesystemprovider#delete-java.nio.file.Path-&quot;&gt; &lt;code&gt;delete(java.nio.file.Path)&lt;/code&gt; &lt;/a&gt; 를 호출 합니다. 적절한 경우 재정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="832a6cca2cbf89c5ad349db3560d7dd67d98f4c7" translate="yes" xml:space="preserve">
          <source>The default implementation of this method simply returns this charset's canonical name. Concrete subclasses of this class may override this method in order to provide a localized display name.</source>
          <target state="translated">이 메소드의 기본 구현은 단순히이 문자 ​​세트의 정식 이름을 리턴합니다. 이 클래스의 구체적 서브 클래스는 지역화 된 표시 이름을 제공하기 위해이 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0687d547d7c1436e3e9a8081f9a79330edb3b6a" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="c70c45a0c8962e51b48c9507cb8c7627ecca46c6" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws &lt;code&gt;
 UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;code&gt; UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="d8950dba55ec671c66cd04ea3480734672f47fdf" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="857c14e5bcdc6bf474ff4cc57112e93e0910bc8d" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. Clients obtained through &lt;a href=&quot;#newHttpClient()&quot;&gt;&lt;code&gt;newHttpClient()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#newBuilder()&quot;&gt;&lt;code&gt;newBuilder()&lt;/code&gt;&lt;/a&gt; return a &lt;code&gt;WebSocket&lt;/code&gt; builder.</source>
          <target state="translated">이 메서드의 기본 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다. &lt;a href=&quot;#newHttpClient()&quot;&gt; &lt;code&gt;newHttpClient()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#newBuilder()&quot;&gt; &lt;code&gt;newBuilder()&lt;/code&gt; &lt;/a&gt; 를 통해 얻은 클라이언트 는 &lt;code&gt;WebSocket&lt;/code&gt; 빌더를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2f6d32b5f639897a26f98c2e0c5d7c5346de7ddf" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws an &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="5d2d17078d58b74ab844ae6a2946c0c40dc1e374" translate="yes" xml:space="preserve">
          <source>The default implementation of this method throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="29abfa0a663797ae6110e75b21e33205a4aea95a" translate="yes" xml:space="preserve">
          <source>The default implementation of this method uses &lt;a href=&quot;jmxconnectorservermbean#getAddress()&quot;&gt;&lt;code&gt;JMXConnectorServerMBean.getAddress()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; to generate the stub, with code equivalent to the following:</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;a href=&quot;jmxconnectorservermbean#getAddress()&quot;&gt; &lt;code&gt;JMXConnectorServerMBean.getAddress()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt; 를 사용하여 다음과 같은 코드로 스텁을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="b01e359858be47e68148d12a3da5cbe8164cfe87" translate="yes" xml:space="preserve">
          <source>The default implementation of this method uses &lt;a href=&quot;jmxconnectorservermbean#getAddress--&quot;&gt;&lt;code&gt;JMXConnectorServerMBean.getAddress()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; to generate the stub, with code equivalent to the following:</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;a href=&quot;jmxconnectorservermbean#getAddress--&quot;&gt; &lt;code&gt;JMXConnectorServerMBean.getAddress()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt; 를 사용하여 다음과 같은 코드로 스텁을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3448223dcce9d9abf6240417c6688888aa37b783" translate="yes" xml:space="preserve">
          <source>The default implementation of this method uses an iterative algorithm to determine the actual maximum value for the calendar field. Subclasses should, if possible, override this with a more efficient implementation.</source>
          <target state="translated">이 방법의 기본 구현은 반복 알고리즘을 사용하여 달력 필드의 실제 최대 값을 결정합니다. 가능한 경우 서브 클래스는보다 효율적인 구현으로이를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="fd5056e65c065a85be62f3e220fc274d6d8450ec" translate="yes" xml:space="preserve">
          <source>The default implementation of this method uses an iterative algorithm to determine the actual minimum value for the calendar field. Subclasses should, if possible, override this with a more efficient implementation - in many cases, they can simply return &lt;code&gt;getMinimum()&lt;/code&gt;.</source>
          <target state="translated">이 방법의 기본 구현은 반복 알고리즘을 사용하여 달력 필드의 실제 최소값을 결정합니다. 가능하다면 서브 클래스는보다 효율적인 구현으로이를 재정의해야합니다. 많은 경우에, 단순히 &lt;code&gt;getMinimum()&lt;/code&gt; 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f60fd84474340e106ffa3e318e3b9871bb95ccdb" translate="yes" xml:space="preserve">
          <source>The default implementation of this methods polls the &lt;code&gt;exitValue&lt;/code&gt; to check if the process has terminated. Concrete implementations of this class are strongly encouraged to override this method with a more efficient implementation.</source>
          <target state="translated">이 메소드의 기본 구현은 &lt;code&gt;exitValue&lt;/code&gt; 를 폴링 하여 프로세스가 종료되었는지 확인합니다. 이 클래스의 구체적인 구현은이 방법을보다 효율적인 구현으로 재정의하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="4b73cc2878f15851b41506fb3771ce7d48c845a1" translate="yes" xml:space="preserve">
          <source>The default implementation paints the passed component as is.</source>
          <target state="translated">기본 구현은 전달 된 구성 요소를있는 그대로 칠합니다.</target>
        </trans-unit>
        <trans-unit id="9f4dde223db9cca9f3e619e16a5c031d71cfb2e5" translate="yes" xml:space="preserve">
          <source>The default implementation provides rounding modes defined in &lt;a href=&quot;../math/roundingmode&quot;&gt;&lt;code&gt;RoundingMode&lt;/code&gt;&lt;/a&gt; for formatting numbers. It uses the &lt;a href=&quot;../math/roundingmode#HALF_EVEN&quot;&gt;round half-even algorithm&lt;/a&gt;. To change the rounding mode use &lt;a href=&quot;#setRoundingMode(java.math.RoundingMode)&quot;&gt;&lt;code&gt;setRoundingMode&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;NumberFormat&lt;/code&gt; returned by the static factory methods is configured to round floating point numbers using half-even rounding (see &lt;a href=&quot;../math/roundingmode#HALF_EVEN&quot;&gt;&lt;code&gt;RoundingMode.HALF_EVEN&lt;/code&gt;&lt;/a&gt;) for formatting.</source>
          <target state="translated">기본 구현은 숫자 형식화를 위해 &lt;a href=&quot;../math/roundingmode&quot;&gt; &lt;code&gt;RoundingMode&lt;/code&gt; &lt;/a&gt; 에 정의 된 반올림 모드를 제공 합니다. &lt;a href=&quot;../math/roundingmode#HALF_EVEN&quot;&gt;반올림 알고리즘을&lt;/a&gt; 사용합니다 . 반올림 모드를 변경하려면 &lt;a href=&quot;#setRoundingMode(java.math.RoundingMode)&quot;&gt; &lt;code&gt;setRoundingMode&lt;/code&gt; 를&lt;/a&gt; 사용하십시오 . &lt;code&gt;NumberFormat&lt;/code&gt; 정적 공장 메소드에 의해 리턴 사용하여 라운드 부동 소수점 숫자로 구성된 하프에도 (참조 라운딩 &lt;a href=&quot;../math/roundingmode#HALF_EVEN&quot;&gt; &lt;code&gt;RoundingMode.HALF_EVEN&lt;/code&gt; 를&lt;/a&gt; 형식화).</target>
        </trans-unit>
        <trans-unit id="bbb1179613a1ad68cade4c4b9de509b14544d523" translate="yes" xml:space="preserve">
          <source>The default implementation removes all keys from the selected-key set, invokes &lt;a href=&quot;#select(long)&quot;&gt;&lt;code&gt;select(long)&lt;/code&gt;&lt;/a&gt; with the given timeout and then performs the action for each key added to the selected-key set. The default implementation does not detect the action performing a reentrant selection operation. The selected-key set may or may not be empty on completion of the default implementation.</source>
          <target state="translated">기본 구현은 선택된 키 세트에서 모든 키를 제거 하고 주어진 시간 제한으로 &lt;a href=&quot;#select(long)&quot;&gt; &lt;code&gt;select(long)&lt;/code&gt; &lt;/a&gt; 를 호출 한 다음 선택된 키 세트에 추가 된 각 키에 대해 조치를 수행합니다. 기본 구현은 재진입 선택 작업을 수행하는 작업을 감지하지 않습니다. 선택한 키 세트는 기본 구현 완료시 비어 있거나 비어 있지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c20bad5521d51b75b2720bb454a209dcd1b2150" translate="yes" xml:space="preserve">
          <source>The default implementation removes all keys from the selected-key set, invokes &lt;a href=&quot;#selectNow()&quot;&gt;&lt;code&gt;selectNow()&lt;/code&gt;&lt;/a&gt; and then performs the action for each key added to the selected-key set. The default implementation does not detect the action performing a reentrant selection operation. The selected-key set may or may not be empty on completion of the default implementation.</source>
          <target state="translated">기본 구현은 선택된 키 세트에서 모든 키를 제거하고 &lt;a href=&quot;#selectNow()&quot;&gt; &lt;code&gt;selectNow()&lt;/code&gt; &lt;/a&gt; 호출 한 다음 선택된 키 세트에 추가 된 각 키에 대해 작업을 수행합니다. 기본 구현은 재진입 선택 작업을 수행하는 작업을 감지하지 않습니다. 선택한 키 세트는 기본 구현 완료시 비어 있거나 비어 있지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="737fbb35a8ec08024e903ddb609d9fa5652ae481" translate="yes" xml:space="preserve">
          <source>The default implementation repeatedly invokes &lt;a href=&quot;#tryAdvance(T_CONS)&quot;&gt;&lt;code&gt;tryAdvance(T_CONS)&lt;/code&gt;&lt;/a&gt; until it returns &lt;code&gt;false&lt;/code&gt;. It should be overridden whenever possible.</source>
          <target state="translated">기본 구현 은 &lt;code&gt;false&lt;/code&gt; 를 반환 할 때까지 &lt;a href=&quot;#tryAdvance(T_CONS)&quot;&gt; &lt;code&gt;tryAdvance(T_CONS)&lt;/code&gt; &lt;/a&gt; 반복적으로 호출합니다 . 가능할 때마다 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="cfa728ecf3ebefb74359e7b10dd31780fc1f00ad" translate="yes" xml:space="preserve">
          <source>The default implementation repeatedly invokes &lt;a href=&quot;#tryAdvance(java.util.function.Consumer)&quot;&gt;&lt;code&gt;tryAdvance(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt;&lt;/a&gt; until it returns &lt;code&gt;false&lt;/code&gt;. It should be overridden whenever possible.</source>
          <target state="translated">기본 구현 은 &lt;code&gt;false&lt;/code&gt; 를 반환 할 때까지 &lt;a href=&quot;#tryAdvance(java.util.function.Consumer)&quot;&gt; &lt;code&gt;tryAdvance(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt; &lt;/a&gt; 반복적으로 호출합니다 . 가능할 때마다 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="e55ba59172f293a1c293e6f792d51d8e386f4a09" translate="yes" xml:space="preserve">
          <source>The default implementation repeatedly invokes &lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt;&lt;code&gt;tryAdvance(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt;&lt;/a&gt; until it returns &lt;code&gt;false&lt;/code&gt;. It should be overridden whenever possible.</source>
          <target state="translated">기본 구현 은 &lt;code&gt;false&lt;/code&gt; 를 리턴 할 때까지 &lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt; &lt;code&gt;tryAdvance(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt; &lt;/a&gt; 반복적으로 호출합니다 . 가능할 때마다 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="fa971368436f3447697d4c4bc1fa1a8bc9058ad1" translate="yes" xml:space="preserve">
          <source>The default implementation repeatedly invokes &lt;a href=&quot;spliterator.ofprimitive#tryAdvance-T_CONS-&quot;&gt;&lt;code&gt;tryAdvance(T_CONS)&lt;/code&gt;&lt;/a&gt; until it returns &lt;code&gt;false&lt;/code&gt;. It should be overridden whenever possible.</source>
          <target state="translated">기본 구현 은 &lt;code&gt;false&lt;/code&gt; 를 반환 할 때까지 &lt;a href=&quot;spliterator.ofprimitive#tryAdvance-T_CONS-&quot;&gt; &lt;code&gt;tryAdvance(T_CONS)&lt;/code&gt; &lt;/a&gt; 반복적으로 호출합니다 . 가능할 때마다 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="9805f50cd3a610ec3e5b9d6ba42a1abe18143db8" translate="yes" xml:space="preserve">
          <source>The default implementation resets the compression quality to &lt;code&gt;0.75F&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 압축 품질을 &lt;code&gt;0.75F&lt;/code&gt; 로 재설정합니다 .</target>
        </trans-unit>
        <trans-unit id="38232350f970cc809b48e6ec50d49d3e53912f8f" translate="yes" xml:space="preserve">
          <source>The default implementation returns -1. Subclasses that support baseline should override appropriately. If a value &amp;gt;= 0 is returned, then the component has a valid baseline for any size &amp;gt;= the minimum size and &lt;code&gt;getBaselineResizeBehavior&lt;/code&gt; can be used to determine how the baseline changes with size.</source>
          <target state="translated">기본 구현은 -1을 반환합니다. 기준선을 지원하는 하위 클래스는 적절하게 재정의해야합니다. &amp;gt; = 0 값이 반환되면 구성 요소에는 최소 크기보다 큰 모든 크기에 대해 유효한 기준선이 있으며 &lt;code&gt;getBaselineResizeBehavior&lt;/code&gt; 를 사용하여 기준선이 크기에 따라 어떻게 변경되는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa0ededd27d3b43df7c08265dee4e1dac0291e58" translate="yes" xml:space="preserve">
          <source>The default implementation returns 0 without checking its argument.</source>
          <target state="translated">기본 구현은 인수를 확인하지 않고 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="44f08debcebfa65912f9940c51e12d0a5ec7355c" translate="yes" xml:space="preserve">
          <source>The default implementation returns 0.</source>
          <target state="translated">기본 구현은 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8869aae809c663c23fda4270a8e138db161c82f6" translate="yes" xml:space="preserve">
          <source>The default implementation returns 0. If the enumeration class (a subclass of class &lt;code&gt;EnumSyntax&lt;/code&gt;) uses integer values starting at other than 0, override this method in the subclass.</source>
          <target state="translated">기본 구현은 0을 반환합니다. 열거 형 클래스 ( &lt;code&gt;EnumSyntax&lt;/code&gt; 클래스의 하위 클래스 )가 0이 아닌 정수 값을 사용하는 경우 하위 클래스에서이 메서드를 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="525175900b4250ea0a15de5caabdd6dec937c8f6" translate="yes" xml:space="preserve">
          <source>The default implementation returns 0. If the enumeration class (a subclass of class EnumSyntax) uses integer values starting at other than 0, override this method in the subclass.</source>
          <target state="translated">기본 구현은 0을 반환합니다. 열거 클래스 (EnumSyntax 클래스의 서브 클래스)가 0 이외의 정수 값을 사용하는 경우 서브 클래스에서이 메소드를 대체하십시오.</target>
        </trans-unit>
        <trans-unit id="7efd005323214ab30069ece79f045163fa80f57c" translate="yes" xml:space="preserve">
          <source>The default implementation returns 3600000 milliseconds (i.e., one hour) if a call to &lt;a href=&quot;#useDaylightTime()&quot;&gt;&lt;code&gt;useDaylightTime()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;. Otherwise, 0 (zero) is returned.</source>
          <target state="translated">&lt;a href=&quot;#useDaylightTime()&quot;&gt; &lt;code&gt;useDaylightTime()&lt;/code&gt; &lt;/a&gt; 호출이 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 기본 구현은 3600000 밀리 초 (즉, 1 시간 )를 반환 합니다 . 그렇지 않으면 0 (영)이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8c7eb26e2a4bde791083e2062fd3e853596d4fb2" translate="yes" xml:space="preserve">
          <source>The default implementation returns 3600000 milliseconds (i.e., one hour) if a call to &lt;a href=&quot;timezone#useDaylightTime--&quot;&gt;&lt;code&gt;useDaylightTime()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;. Otherwise, 0 (zero) is returned.</source>
          <target state="translated">&lt;a href=&quot;timezone#useDaylightTime--&quot;&gt; &lt;code&gt;useDaylightTime()&lt;/code&gt; &lt;/a&gt; 호출이 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 기본 구현은 3600000 밀리 초 (즉, 1 시간 )를 반환 합니다 . 그렇지 않으면 0이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="1febb56a5b161dc1a94e97c4dbf4f18e39ccb1a1" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;a href=&quot;#FORMAT_DEFAULT&quot;&gt;&lt;code&gt;FORMAT_DEFAULT&lt;/code&gt;&lt;/a&gt; so that the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; factory method looks up first class-based resource bundles, then properties-based ones.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#FORMAT_DEFAULT&quot;&gt; &lt;code&gt;FORMAT_DEFAULT&lt;/code&gt; 를&lt;/a&gt; 반환 하므로 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 팩토리 메서드가 첫 번째 클래스 기반 리소스 번들을 찾은 다음 속성 기반 리소스 번들을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="74f5f9fb4f0bb9c206a4ac36617108adab79bc02" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;a href=&quot;#TTL_NO_EXPIRATION_CONTROL&quot;&gt;&lt;code&gt;TTL_NO_EXPIRATION_CONTROL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#TTL_NO_EXPIRATION_CONTROL&quot;&gt; &lt;code&gt;TTL_NO_EXPIRATION_CONTROL&lt;/code&gt; 을&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="90f5ef8d83ca07f8b63d426fd81813624118a2ac" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;a href=&quot;../../../../java.base/java/lang/processhandle#pid()&quot;&gt;&lt;code&gt;process ID&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;../../../../java.base/java/lang/processhandle#current()&quot;&gt;current process&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;../../../../java.base/java/lang/processhandle#current()&quot;&gt;현재 프로세스&lt;/a&gt; 의 &lt;a href=&quot;../../../../java.base/java/lang/processhandle#pid()&quot;&gt; &lt;code&gt;process ID&lt;/code&gt; &lt;/a&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="bed40a02370db4a4b689534fb405f887ea85bacf" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;a href=&quot;resourcebundle.control#FORMAT_DEFAULT&quot;&gt;&lt;code&gt;FORMAT_DEFAULT&lt;/code&gt;&lt;/a&gt; so that the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; factory method looks up first class-based resource bundles, then properties-based ones.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;resourcebundle.control#FORMAT_DEFAULT&quot;&gt; &lt;code&gt;FORMAT_DEFAULT&lt;/code&gt; 를&lt;/a&gt; 반환 하여 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 팩토리 메소드가 첫 번째 클래스 기반 자원 번들을 찾은 다음 특성 기반 번들을 찾 도록 합니다.</target>
        </trans-unit>
        <trans-unit id="a5d3e0802c1e69202fecfa0848ff568aa916b467" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;a href=&quot;resourcebundle.control#TTL_NO_EXPIRATION_CONTROL&quot;&gt;&lt;code&gt;TTL_NO_EXPIRATION_CONTROL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;resourcebundle.control#TTL_NO_EXPIRATION_CONTROL&quot;&gt; &lt;code&gt;TTL_NO_EXPIRATION_CONTROL&lt;/code&gt; 을&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b62b3d85bf38db6423618595e1df1f41ceeb8298" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt;, subclasses that support baseline should override appropriately. Subclasses should never return &lt;code&gt;null&lt;/code&gt;; if the baseline can not be calculated return &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt;. Callers should first ask for the baseline using &lt;code&gt;getBaseline&lt;/code&gt; and if a value &amp;gt;= 0 is returned use this method. It is acceptable for this method to return a value other than &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; even if &lt;code&gt;getBaseline&lt;/code&gt; returns a value less than 0.</source>
          <target state="translated">기본 구현은 &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; 를 반환 하며, 기준선을 지원하는 하위 클래스는 적절하게 재정의해야합니다. 하위 클래스는 &lt;code&gt;null&lt;/code&gt; 을 반환해서는 안됩니다 . 기준선을 계산할 수없는 경우 &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; 를 반환 합니다. 호출자는 먼저 &lt;code&gt;getBaseline&lt;/code&gt; 을 사용하여 기준선을 요청해야하며 &amp;gt; = 0 값이 반환되면이 메서드를 사용합니다. 이 방법 이외의 값으로 복귀하는 것이 허용 &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; 을 하더라도 &lt;code&gt;getBaseline&lt;/code&gt; 가이 0보다 작은 값을 반환한다.</target>
        </trans-unit>
        <trans-unit id="5aac6fff36b5dc2a744dd17efd605eae540adb73" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt;. Subclasses that have a baseline should override appropriately. Subclasses should never return &lt;code&gt;null&lt;/code&gt;; if the baseline can not be calculated return &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt;. Callers should first ask for the baseline using &lt;code&gt;getBaseline&lt;/code&gt; and if a value &amp;gt;= 0 is returned use this method. It is acceptable for this method to return a value other than &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; even if &lt;code&gt;getBaseline&lt;/code&gt; returns a value less than 0.</source>
          <target state="translated">기본 구현은 &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; 를 반환합니다 . 기준선이있는 하위 클래스는 적절하게 재정의해야합니다. 하위 클래스는 &lt;code&gt;null&lt;/code&gt; 을 반환해서는 안됩니다 . 기준선을 계산할 수없는 경우 &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; 를 반환 합니다. 호출자는 먼저 &lt;code&gt;getBaseline&lt;/code&gt; 을 사용하여 기준선을 요청해야하며 &amp;gt; = 0 값이 반환되면이 메서드를 사용합니다. 이 방법 이외의 값으로 복귀하는 것이 허용 &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; 을 하더라도 &lt;code&gt;getBaseline&lt;/code&gt; 가이 0보다 작은 값을 반환한다.</target>
        </trans-unit>
        <trans-unit id="4e7b7942232930904a4bc7d69fff053d1fbe8d87" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;false&lt;/code&gt;, subclasses that support &lt;code&gt;Window&lt;/code&gt; decorations should override this and return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;false&lt;/code&gt; 를 반환 하고 , &lt;code&gt;Window&lt;/code&gt; 장식 을 지원하는 하위 클래스는 이를 무시하고 &lt;code&gt;true&lt;/code&gt; 를 반환해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="e33ad58e76bb269caa1c45076544afb93bb1e40d" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0e70df20667e7c6fe7bd94b1c9f99eef6501cba9" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2b9c85f6c404b00e23f7a543fe8d585cf3066af5" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;null&lt;/code&gt;. If the enumeration class (a subclass of class &lt;code&gt;EnumSyntax&lt;/code&gt;) does not override this method to return a &lt;code&gt;non-null&lt;/code&gt; string table, and the subclass does not override the &lt;a href=&quot;#toString()&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method, the base class &lt;a href=&quot;#toString()&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method will return just a string representation of this enumeration value's integer value.</source>
          <target state="translated">기본 구현은 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 열거 형 클래스 ( &lt;code&gt;EnumSyntax&lt;/code&gt; 클래스의 하위 클래스 )가 &lt;code&gt;non-null&lt;/code&gt; 이 아닌 문자열 테이블 을 반환하기 위해이 메서드를 재정의하지 않고 하위 클래스가 &lt;a href=&quot;#toString()&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; 메서드를 재정의하지 않는 경우 기본 클래스 &lt;a href=&quot;#toString()&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; 메서드는 문자열 표현 만 반환합니다. 이 열거 형 값의 정수 값.</target>
        </trans-unit>
        <trans-unit id="235b038843729dae5b0533c6eb8522b4970cc0dd" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;null&lt;/code&gt;. If the enumeration class (a subclass of class EnumSyntax) does not override this method to return a &lt;code&gt;non-null&lt;/code&gt; enumeration value table, and the subclass does not override the &lt;a href=&quot;#readResolve()&quot;&gt;&lt;code&gt;readResolve()&lt;/code&gt;&lt;/a&gt; method, the base class &lt;a href=&quot;#readResolve()&quot;&gt;&lt;code&gt;readResolve()&lt;/code&gt;&lt;/a&gt; method will throw an exception whenever an enumeration instance is deserialized from an object input stream.</source>
          <target state="translated">기본 구현은 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 열거 형 클래스 (EnumSyntax 클래스의 하위 클래스)가 &lt;code&gt;non-null&lt;/code&gt; 이 아닌 열거 형 값 테이블 을 반환하기 위해이 메서드를 재정의하지 않고 하위 클래스가 &lt;a href=&quot;#readResolve()&quot;&gt; &lt;code&gt;readResolve()&lt;/code&gt; &lt;/a&gt; 메서드를 재정의하지 않는 경우 기본 클래스 &lt;a href=&quot;#readResolve()&quot;&gt; &lt;code&gt;readResolve()&lt;/code&gt; &lt;/a&gt; 메서드는 항상 예외를 throw합니다. 열거 형 인스턴스는 개체 입력 스트림에서 역 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="d5b69d455ba66aa15fbd8cbbea3da37b9789c34d" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;originatingProvider.getFormatNames()[0]&lt;/code&gt;. Implementations that may not have an originating service provider, or which desire a different naming policy should override this method.</source>
          <target state="translated">기본 구현은 &lt;code&gt;originatingProvider.getFormatNames()[0]&lt;/code&gt; 반환합니다 . 시작 서비스 공급자가 없거나 다른 이름 지정 정책을 원하는 구현은이 방법을 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="b5eb7fe7015df0ec71cb44b29af561861ffa9474" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;getNumThumbnails&lt;/code&gt; returns a value greater than 0.</source>
          <target state="translated">&lt;code&gt;getNumThumbnails&lt;/code&gt; 가 0보다 큰 값을 반환 하면 기본 구현은 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="2a53289ec753ec13903955accdc333e19f0e2bfd" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;useDaylightTime()&lt;/code&gt; or &lt;code&gt;inDaylightTime(new Date())&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;useDaylightTime()&lt;/code&gt; 또는 &lt;code&gt;inDaylightTime(new Date())&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 리턴 하면 기본 구현은 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="e51a840f5afb68faa7a3a9344bd2a4c43bc5ce96" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;getController&lt;/code&gt; method returns a non-&lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;getController&lt;/code&gt; 메소드가 &lt;code&gt;null&lt;/code&gt; 이 아닌 값을 리턴 하면 기본 구현은 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="2ae3639ccc31e8e5b812eaea6d5ee8fe08958060" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;locale&lt;/code&gt; is equal to any of the available &lt;code&gt;Locale&lt;/code&gt;s returned by &lt;a href=&quot;#getAvailableLocales()&quot;&gt;&lt;code&gt;getAvailableLocales()&lt;/code&gt;&lt;/a&gt; with ignoring any extensions in both the given &lt;code&gt;locale&lt;/code&gt; and the available locales. Concrete locale service provider implementations should override this method if those implementations are &lt;code&gt;Locale&lt;/code&gt; extensions-aware. For example, &lt;code&gt;DecimalFormatSymbolsProvider&lt;/code&gt; implementations will need to check extensions in the given &lt;code&gt;locale&lt;/code&gt; to see if any numbering system is specified and can be supported. However, &lt;code&gt;CollatorProvider&lt;/code&gt; implementations may not be affected by any particular numbering systems, and in that case, extensions for numbering systems should be ignored.</source>
          <target state="translated">기본 구현은 주어진 &lt;code&gt;locale&lt;/code&gt; 이 &lt;a href=&quot;#getAvailableLocales()&quot;&gt; &lt;code&gt;getAvailableLocales()&lt;/code&gt; &lt;/a&gt; 의해 반환 된 사용 가능한 &lt;code&gt;Locale&lt;/code&gt; 중 하나와 같고 주어진 &lt;code&gt;locale&lt;/code&gt; 과 사용 가능한 로케일 모두의 확장을 무시하고 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다. 구체적인 로케일 서비스 제공 업체 구현은 해당 구현이 &lt;code&gt;Locale&lt;/code&gt; 확장을 인식 하는 경우이 메소드를 재정의해야합니다 . 예를 들어 &lt;code&gt;DecimalFormatSymbolsProvider&lt;/code&gt; 구현은 지정된 &lt;code&gt;locale&lt;/code&gt; 확장을 확인 하여 번호 매기기 시스템이 지정되어 있고 지원 될 수 있는지 확인해야합니다 . 그러나 &lt;code&gt;CollatorProvider&lt;/code&gt; 구현은 특정 번호 매기기 시스템의 영향을받지 않을 수 있으며이 경우 번호 매기기 시스템에 대한 확장은 무시해야합니다.</target>
        </trans-unit>
        <trans-unit id="d5bd255f8bd6294e34b1cf849d6cb17a4a6dacb2" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;locale&lt;/code&gt; is equal to any of the available &lt;code&gt;Locale&lt;/code&gt;s returned by &lt;a href=&quot;localeserviceprovider#getAvailableLocales--&quot;&gt;&lt;code&gt;getAvailableLocales()&lt;/code&gt;&lt;/a&gt; with ignoring any extensions in both the given &lt;code&gt;locale&lt;/code&gt; and the available locales. Concrete locale service provider implementations should override this method if those implementations are &lt;code&gt;Locale&lt;/code&gt; extensions-aware. For example, &lt;code&gt;DecimalFormatSymbolsProvider&lt;/code&gt; implementations will need to check extensions in the given &lt;code&gt;locale&lt;/code&gt; to see if any numbering system is specified and can be supported. However, &lt;code&gt;CollatorProvider&lt;/code&gt; implementations may not be affected by any particular numbering systems, and in that case, extensions for numbering systems should be ignored.</source>
          <target state="translated">지정된 &lt;code&gt;locale&lt;/code&gt; 이 지정된 &lt;code&gt;locale&lt;/code&gt; 과 사용 가능한 로케일 모두에서 확장자를 무시하고 &lt;a href=&quot;localeserviceprovider#getAvailableLocales--&quot;&gt; &lt;code&gt;getAvailableLocales()&lt;/code&gt; &lt;/a&gt; 의해 리턴 된 사용 가능한 &lt;code&gt;Locale&lt;/code&gt; 과 동일한 경우 기본 구현은 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다. 구체적인 로케일 서비스 제공자 구현은 해당 구현이 &lt;code&gt;Locale&lt;/code&gt; 확장을 인식 하는 경우이 메소드를 대체해야합니다 . 예를 들어 &lt;code&gt;DecimalFormatSymbolsProvider&lt;/code&gt; 구현은 지정된 &lt;code&gt;locale&lt;/code&gt; 확장명을 확인 하여 번호 시스템이 지정되어 있고 지원 될 수 있는지 확인해야합니다 . 그러나 &lt;code&gt;CollatorProvider&lt;/code&gt; 구현은 특정 번호 시스템의 영향을받지 않을 수 있으며,이 경우 번호 시스템의 확장은 무시해야합니다.</target>
        </trans-unit>
        <trans-unit id="0f26c06bba4e113482890792bd35d73301accad7" translate="yes" xml:space="preserve">
          <source>The default implementation returns a &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;Locale&lt;/code&gt;s using the rules described below. In the description below, &lt;em&gt;L&lt;/em&gt;, &lt;em&gt;S&lt;/em&gt;, &lt;em&gt;C&lt;/em&gt; and &lt;em&gt;V&lt;/em&gt; respectively represent non-empty language, script, country, and variant. For example, [&lt;em&gt;L&lt;/em&gt;, &lt;em&gt;C&lt;/em&gt;] represents a &lt;code&gt;Locale&lt;/code&gt; that has non-empty values only for language and country. The form &lt;em&gt;L&lt;/em&gt;(&quot;xx&quot;) represents the (non-empty) language value is &quot;xx&quot;. For all cases, &lt;code&gt;Locale&lt;/code&gt;s whose final component values are empty strings are omitted.</source>
          <target state="translated">기본 구현은 아래에 설명 된 규칙을 사용하여 &lt;code&gt;Locale&lt;/code&gt; 포함 된 &lt;code&gt;List&lt;/code&gt; 를 반환 합니다. 아래 설명에서 &lt;em&gt;L&lt;/em&gt; , &lt;em&gt;S&lt;/em&gt; , &lt;em&gt;C&lt;/em&gt; 및 &lt;em&gt;V는&lt;/em&gt; 각각 비어 있지 않은 언어, 스크립트, 국가 및 변형을 나타냅니다. 예를 들어, [ &lt;em&gt;L&lt;/em&gt; , &lt;em&gt;C&lt;/em&gt; ]는 언어 및 국가에 대해서만 비어 있지 않은 값을 가진 &lt;code&gt;Locale&lt;/code&gt; 을 나타냅니다 . 폼 &lt;em&gt;L&lt;/em&gt; ( &quot;XX&quot;)는 (비어) 언어 값이 &quot;XX&quot;이다 나타낸다. 모든 경우에, 최종 컴포넌트 값이 빈 문자열 인 &lt;code&gt;Locale&lt;/code&gt; 은 생략됩니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="22d01a7b5411f66615a7ddc37a57d770c83d7eea" translate="yes" xml:space="preserve">
          <source>The default implementation returns a &lt;code&gt;Set&lt;/code&gt; of the keys returned by the &lt;a href=&quot;#getKeys()&quot;&gt;&lt;code&gt;getKeys&lt;/code&gt;&lt;/a&gt; method except for the ones for which the &lt;a href=&quot;#handleGetObject(java.lang.String)&quot;&gt;&lt;code&gt;handleGetObject&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;null&lt;/code&gt;. Once the &lt;code&gt;Set&lt;/code&gt; has been created, the value is kept in this &lt;code&gt;ResourceBundle&lt;/code&gt; in order to avoid producing the same &lt;code&gt;Set&lt;/code&gt; in subsequent calls. Subclasses can override this method for faster handling.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#handleGetObject(java.lang.String)&quot;&gt; &lt;code&gt;handleGetObject&lt;/code&gt; &lt;/a&gt; 메서드가 &lt;code&gt;null&lt;/code&gt; 을 반환하는 키를 제외하고 &lt;a href=&quot;#getKeys()&quot;&gt; &lt;code&gt;getKeys&lt;/code&gt; &lt;/a&gt; 메서드에 의해 반환 된 키 &lt;code&gt;Set&lt;/code&gt; 을 반환합니다 . &lt;code&gt;Set&lt;/code&gt; 가 생성 되면 후속 호출에서 동일한 &lt;code&gt;Set&lt;/code&gt; 가 생성되지 않도록 이 &lt;code&gt;ResourceBundle&lt;/code&gt; 에 값이 유지됩니다 . 서브 클래스는 더 빠른 처리를 위해이 메서드를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4df76b1a1a841eec548df4a90332710647b34d87" translate="yes" xml:space="preserve">
          <source>The default implementation returns a &lt;code&gt;Set&lt;/code&gt; of the keys returned by the &lt;a href=&quot;resourcebundle#getKeys--&quot;&gt;&lt;code&gt;getKeys&lt;/code&gt;&lt;/a&gt; method except for the ones for which the &lt;a href=&quot;resourcebundle#handleGetObject-java.lang.String-&quot;&gt;&lt;code&gt;handleGetObject&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;null&lt;/code&gt;. Once the &lt;code&gt;Set&lt;/code&gt; has been created, the value is kept in this &lt;code&gt;ResourceBundle&lt;/code&gt; in order to avoid producing the same &lt;code&gt;Set&lt;/code&gt; in subsequent calls. Subclasses can override this method for faster handling.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;resourcebundle#handleGetObject-java.lang.String-&quot;&gt; &lt;code&gt;handleGetObject&lt;/code&gt; &lt;/a&gt; 메소드가 &lt;code&gt;null&lt;/code&gt; 을 리턴하는 키를 제외하고 &lt;a href=&quot;resourcebundle#getKeys--&quot;&gt; &lt;code&gt;getKeys&lt;/code&gt; &lt;/a&gt; 메소드가 리턴 한 키 &lt;code&gt;Set&lt;/code&gt; 를 리턴합니다 . &lt;code&gt;Set&lt;/code&gt; 가 작성 되면 이후 호출에서 동일한 &lt;code&gt;Set&lt;/code&gt; 가 생성되지 않도록 이 &lt;code&gt;ResourceBundle&lt;/code&gt; 에 값이 유지됩니다 . 서브 클래스는보다 빠른 처리를 위해이 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f164a65412907e8355a8fbac7eb64cce826fea7" translate="yes" xml:space="preserve">
          <source>The default implementation returns a clone of the &lt;code&gt;availableLocales&lt;/code&gt; instance variable if it is non-&lt;code&gt;null&lt;/code&gt;, or else returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;availableLocales&lt;/code&gt; 인스턴스 변수가 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 복제를 반환하거나 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5291c6b504728ff58ad979fd24d2d8150a471209" translate="yes" xml:space="preserve">
          <source>The default implementation returns a clone of the &lt;code&gt;extraImageMetadataFormatNames&lt;/code&gt; instance variable, which is typically set by the constructor.</source>
          <target state="translated">기본 구현은 &lt;code&gt;extraImageMetadataFormatNames&lt;/code&gt; 인스턴스 변수 의 복제본을 반환하며 ,이 변수는 일반적으로 생성자가 설정합니다.</target>
        </trans-unit>
        <trans-unit id="713eac467c3ce45ac50052a65517e6643598b192" translate="yes" xml:space="preserve">
          <source>The default implementation returns a clone of the &lt;code&gt;extraMetadataFormatNames&lt;/code&gt; instance variable.</source>
          <target state="translated">기본 구현은 &lt;code&gt;extraMetadataFormatNames&lt;/code&gt; 인스턴스 변수 의 복제본을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="4ce1a56176217b8f5598efa1a875c94505a6ac11" translate="yes" xml:space="preserve">
          <source>The default implementation returns a clone of the &lt;code&gt;extraStreamMetadataFormatNames&lt;/code&gt; instance variable, which is typically set by the constructor.</source>
          <target state="translated">기본 구현은 &lt;code&gt;extraStreamMetadataFormatNames&lt;/code&gt; 인스턴스 변수 의 복제본을 반환하며 ,이 변수는 일반적으로 생성자가 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5f0658fd11699ab7da0faaa6361d7b3ed061dcb7" translate="yes" xml:space="preserve">
          <source>The default implementation returns a string identifying this FutureTask, as well as its completion state. The state, in brackets, contains one of the strings &lt;code&gt;&quot;Completed Normally&quot;&lt;/code&gt;, &lt;code&gt;&quot;Completed Exceptionally&quot;&lt;/code&gt;, &lt;code&gt;&quot;Cancelled&quot;&lt;/code&gt;, or &lt;code&gt;
 &quot;Not completed&quot;&lt;/code&gt;.</source>
          <target state="translated">기본 구현은이 FutureTask를 식별하는 문자열과 완료 상태를 반환합니다. 괄호 안에있는 상태는 &lt;code&gt;&quot;Completed Normally&quot;&lt;/code&gt; , &lt;code&gt;&quot;Completed Exceptionally&quot;&lt;/code&gt; , &lt;code&gt;&quot;Cancelled&quot;&lt;/code&gt; 또는 &lt;code&gt; &quot;Not completed&quot;&lt;/code&gt; 문자열 중 하나를 포함 합니다.</target>
        </trans-unit>
        <trans-unit id="affa065001684bbd6f1f78ce2de81bc477d00cb7" translate="yes" xml:space="preserve">
          <source>The default implementation returns an &lt;code&gt;Iterator&amp;lt;Path&amp;gt;&lt;/code&gt; which, for this path, traverses the &lt;code&gt;Path&lt;/code&gt;s returned by &lt;code&gt;getName(index)&lt;/code&gt;, where &lt;code&gt;index&lt;/code&gt; ranges from zero to &lt;code&gt;getNameCount() - 1&lt;/code&gt;, inclusive.</source>
          <target state="translated">기본 구현은 이 경로에 대해 &lt;code&gt;getName(index)&lt;/code&gt; 의해 반환 된 &lt;code&gt;Path&lt;/code&gt; 를 순회 하는 &lt;code&gt;Iterator&amp;lt;Path&amp;gt;&lt;/code&gt; 를 반환합니다 . 여기서 &lt;code&gt;index&lt;/code&gt; 범위는 0에서 &lt;code&gt;getNameCount() - 1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ce17ba5aaf30d74f227e66bed89b11f0353672ee" translate="yes" xml:space="preserve">
          <source>The default implementation returns an &lt;code&gt;Iterator&lt;/code&gt; whose &lt;a href=&quot;iterator#hasNext()&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; method calls this Enumeration's &lt;code&gt;hasMoreElements&lt;/code&gt; method, whose &lt;a href=&quot;iterator#next()&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; method calls this Enumeration's &lt;code&gt;nextElement&lt;/code&gt; method, and whose &lt;a href=&quot;iterator#remove()&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; method throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;iterator#hasNext()&quot;&gt; &lt;code&gt;hasNext&lt;/code&gt; &lt;/a&gt; 메소드가이 Enumeration의 &lt;code&gt;hasMoreElements&lt;/code&gt; 메소드를 호출 하고, &lt;a href=&quot;iterator#next()&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; 메소드가이 Enumeration의 &lt;code&gt;nextElement&lt;/code&gt; 메소드를 호출 하고, &lt;a href=&quot;iterator#remove()&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt; 메소드가 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 던지는 &lt;code&gt;Iterator&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="47959ec47d9d64de76ab5b568c249eaabd38f476" translate="yes" xml:space="preserve">
          <source>The default implementation returns an empty &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 빈 &lt;code&gt;Set&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6b02fdab33c36885ccdec11455d7ec545a5eca69" translate="yes" xml:space="preserve">
          <source>The default implementation returns an enumeration that contains no elements.</source>
          <target state="translated">기본 구현은 요소가없는 열거를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b482e517df3e0fdb0bfa62e779d0919dca995c01" translate="yes" xml:space="preserve">
          <source>The default implementation returns an implementation class suitable for most calendar systems. It is based solely on the three units. Normalization, addition and subtraction derive the number of months in a year from the &lt;a href=&quot;#range(java.time.temporal.ChronoField)&quot;&gt;&lt;code&gt;range(ChronoField)&lt;/code&gt;&lt;/a&gt;. If the number of months within a year is fixed, then the calculation approach for addition, subtraction and normalization is slightly different.</source>
          <target state="translated">기본 구현은 대부분의 달력 시스템에 적합한 구현 클래스를 반환합니다. 전적으로 세 가지 단위를 기반으로합니다. 정규화, 덧셈 및 뺄셈은 &lt;a href=&quot;#range(java.time.temporal.ChronoField)&quot;&gt; &lt;code&gt;range(ChronoField)&lt;/code&gt; &lt;/a&gt; 에서 1 년의 개월 수를 유도합니다 . 1 년 내 개월 수가 고정되어 있으면 더하기, 빼기 및 정규화에 대한 계산 방식이 약간 다릅니다.</target>
        </trans-unit>
        <trans-unit id="dc32cd7a8698071309cf6fa6f784e40739e60c58" translate="yes" xml:space="preserve">
          <source>The default implementation returns an implementation class suitable for most calendar systems. It is based solely on the three units. Normalization, addition and subtraction derive the number of months in a year from the &lt;a href=&quot;chronology#range-java.time.temporal.ChronoField-&quot;&gt;&lt;code&gt;range(ChronoField)&lt;/code&gt;&lt;/a&gt;. If the number of months within a year is fixed, then the calculation approach for addition, subtraction and normalization is slightly different.</source>
          <target state="translated">기본 구현은 대부분의 달력 시스템에 적합한 구현 클래스를 반환합니다. 세 단위에만 기반합니다. 정규화, 덧셈 및 뺄셈은 &lt;a href=&quot;chronology#range-java.time.temporal.ChronoField-&quot;&gt; &lt;code&gt;range(ChronoField)&lt;/code&gt; &lt;/a&gt; 에서 1 년 동안 개월 수를 도출합니다 . 1 년 이내에 개월 수가 고정되어 있으면 더하기, 빼기 및 정규화에 대한 계산 방법이 약간 다릅니다.</target>
        </trans-unit>
        <trans-unit id="583d826e08dd481c47e46fb710129cfb1a0587d1" translate="yes" xml:space="preserve">
          <source>The default implementation returns false.</source>
          <target state="translated">기본 구현은 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6219a3b738876f26259c0a2b1aeea127358a5eb2" translate="yes" xml:space="preserve">
          <source>The default implementation returns null.</source>
          <target state="translated">기본 구현은 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="af16238c442909af7ff28025be03d983968464ab" translate="yes" xml:space="preserve">
          <source>The default implementation returns null. If the enumeration class (a subclass of class EnumSyntax) does not override this method to return a non-null enumeration value table, and the subclass does not override the &lt;a href=&quot;enumsyntax#readResolve--&quot;&gt;&lt;code&gt;readResolve()&lt;/code&gt;&lt;/a&gt; method, the base class &lt;a href=&quot;enumsyntax#readResolve--&quot;&gt;&lt;code&gt;readResolve()&lt;/code&gt;&lt;/a&gt; method will throw an exception whenever an enumeration instance is deserialized from an object input stream.</source>
          <target state="translated">기본 구현은 null을 반환합니다. 열거 클래스 (EnumSyntax 클래스의 서브 클래스)가 널이 아닌 열거 값 테이블을 리턴하기 위해이 메소드를 대체하지 않고 서브 클래스가 &lt;a href=&quot;enumsyntax#readResolve--&quot;&gt; &lt;code&gt;readResolve()&lt;/code&gt; &lt;/a&gt; 메소드를 대체하지 않는 경우 기본 클래스 &lt;a href=&quot;enumsyntax#readResolve--&quot;&gt; &lt;code&gt;readResolve()&lt;/code&gt; &lt;/a&gt; 메소드는 항상 예외를 처리합니다. 열거 인스턴스는 객체 입력 스트림로부터 직렬화 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="fa5806bc3fcd2a15aa8e902f4485f05c9e922feb" translate="yes" xml:space="preserve">
          <source>The default implementation returns null. If the enumeration class (a subclass of class EnumSyntax) does not override this method to return a non-null string table, and the subclass does not override the &lt;a href=&quot;enumsyntax#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method, the base class &lt;a href=&quot;enumsyntax#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method will return just a string representation of this enumeration value's integer value.</source>
          <target state="translated">기본 구현은 null을 반환합니다. 열거 클래스 (EnumSyntax 클래스의 서브 클래스)가 널이 아닌 문자열 테이블을 리턴하기 위해이 메소드를 대체하지 않고 서브 클래스가 &lt;a href=&quot;enumsyntax#toString--&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; 메소드를 대체하지 않는 경우 기본 클래스 &lt;a href=&quot;enumsyntax#toString--&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; 메소드는 문자열 표현 만 리턴합니다. 이 열거 치의 정 수치</target>
        </trans-unit>
        <trans-unit id="9a7f48acd05f38585d275fe2e1987bdce32c24d4" translate="yes" xml:space="preserve">
          <source>The default implementation returns the &lt;a href=&quot;locale#getDefault()&quot;&gt;default &lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; if the given &lt;code&gt;locale&lt;/code&gt; isn't the default one. Otherwise, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">기본 구현은 지정된 &lt;code&gt;locale&lt;/code&gt; 이 기본 로케일 이 아닌 경우 &lt;a href=&quot;locale#getDefault()&quot;&gt;기본 &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt; 반환합니다 . 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="530941e23db8b6df7916e0ba842ac7350b82d756" translate="yes" xml:space="preserve">
          <source>The default implementation returns the &lt;a href=&quot;locale#getDefault--&quot;&gt;default &lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; if the given &lt;code&gt;locale&lt;/code&gt; isn't the default one. Otherwise, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">지정된 &lt;code&gt;locale&lt;/code&gt; 이 기본 로케일 이 아닌 경우 기본 구현은 &lt;a href=&quot;locale#getDefault--&quot;&gt;기본 &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt; 리턴합니다 . 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1285e540c706e34a2fe155a3067b3966189ed8c9" translate="yes" xml:space="preserve">
          <source>The default implementation returns the &lt;code&gt;nativeImageMetadataFormatName&lt;/code&gt; instance variable, which is typically set by the constructor.</source>
          <target state="translated">기본 구현은 기본적 으로 생성자가 설정 한 &lt;code&gt;nativeImageMetadataFormatName&lt;/code&gt; 인스턴스 변수를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="56f73985b019d1c94844a80a8e9aace5646ae486" translate="yes" xml:space="preserve">
          <source>The default implementation returns the &lt;code&gt;nativeStreamMetadataFormatName&lt;/code&gt; instance variable, which is typically set by the constructor.</source>
          <target state="translated">기본 구현 은 일반적으로 생성자가 설정 한 &lt;code&gt;nativeStreamMetadataFormatName&lt;/code&gt; 인스턴스 변수를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="90f81aed9686112358767822a093ce35a355ec5c" translate="yes" xml:space="preserve">
          <source>The default implementation returns the entire image if &lt;code&gt;tileX&lt;/code&gt; and &lt;code&gt;tileY&lt;/code&gt; are 0, or throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;tileX&lt;/code&gt; 와 &lt;code&gt;tileY&lt;/code&gt; 가 0 이면 기본 구현에서 전체 이미지를 반환 하거나 그렇지 않으면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="ec14c9646579f9df4ae3a3fe244de3c99a4055d9" translate="yes" xml:space="preserve">
          <source>The default implementation returns the result of &lt;code&gt;estimateSize()&lt;/code&gt; if the Spliterator reports a characteristic of &lt;code&gt;SIZED&lt;/code&gt;, and &lt;code&gt;-1&lt;/code&gt; otherwise.</source>
          <target state="translated">기본 구현의 결과 반환 &lt;code&gt;estimateSize()&lt;/code&gt; Spliterator이의 특성을보고하는 경우 &lt;code&gt;SIZED&lt;/code&gt; 을 하고, &lt;code&gt;-1&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="1a550ed82a80e8651d37d2cf8005d5123673674d" translate="yes" xml:space="preserve">
          <source>The default implementation returns the value of the &lt;code&gt;controller&lt;/code&gt; instance variable.</source>
          <target state="translated">기본 구현은 &lt;code&gt;controller&lt;/code&gt; 인스턴스 변수 의 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="57a65497f3319fe6b7165fb9a3233f9a7282e0ea" translate="yes" xml:space="preserve">
          <source>The default implementation returns the value of the &lt;code&gt;defaultController&lt;/code&gt; instance variable.</source>
          <target state="translated">기본 구현은 &lt;code&gt;defaultController&lt;/code&gt; 인스턴스 변수 의 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="401df454dd8688f1801859319021d8d1b903105b" translate="yes" xml:space="preserve">
          <source>The default implementation returns the value of the &lt;code&gt;locale&lt;/code&gt; instance variable.</source>
          <target state="translated">기본 구현은 &lt;code&gt;locale&lt;/code&gt; 인스턴스 변수 의 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="2c5f6b03ef3e16194301d12095d1dff542d24662" translate="yes" xml:space="preserve">
          <source>The default implementation returns the value of the &lt;code&gt;nativeMetadataFormatName&lt;/code&gt; instance variable.</source>
          <target state="translated">기본 구현은 &lt;code&gt;nativeMetadataFormatName&lt;/code&gt; 인스턴스 변수 의 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4436e20443f28f420184d54b80cb83f51f839bb9" translate="yes" xml:space="preserve">
          <source>The default implementation returns the value of the &lt;code&gt;originatingProvider&lt;/code&gt; instance variable.</source>
          <target state="translated">기본 구현은 &lt;code&gt;originatingProvider&lt;/code&gt; 인스턴스 변수 의 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c487266161ac7323e1f6133662973e6e030a8e21" translate="yes" xml:space="preserve">
          <source>The default implementation returns the value of the &lt;code&gt;output&lt;/code&gt; instance variable.</source>
          <target state="translated">기본 구현은 &lt;code&gt;output&lt;/code&gt; 인스턴스 변수 의 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1e4c3c4ef6d8be32740c7eb9a81d93b4a60a66de" translate="yes" xml:space="preserve">
          <source>The default implementation returns the value of the &lt;code&gt;standardFormatSupported&lt;/code&gt; instance variable.</source>
          <target state="translated">기본 구현은 &lt;code&gt;standardFormatSupported&lt;/code&gt; 인스턴스 변수 의 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d973f8675988369c962159dedc8f1d058d6adefe" translate="yes" xml:space="preserve">
          <source>The default implementation returns the value of the &lt;code&gt;vendorName&lt;/code&gt; instance variable.</source>
          <target state="translated">기본 구현은 &lt;code&gt;vendorName&lt;/code&gt; 인스턴스 변수 의 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="62f16b9f22d86fc9c8e5eb99782d71bf161fe610" translate="yes" xml:space="preserve">
          <source>The default implementation returns the value of the &lt;code&gt;version&lt;/code&gt; instance variable.</source>
          <target state="translated">기본 구현은 &lt;code&gt;version&lt;/code&gt; 인스턴스 변수 의 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1d40f76d4d8b18564502261c82c464f86b088246" translate="yes" xml:space="preserve">
          <source>The default implementation returns true if the corresponding bits of the given characteristics are set.</source>
          <target state="translated">주어진 특성의 해당 비트가 설정되면 기본 구현은 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f07af37caec447568305d6ef4b2f50fe0c57ac2f" translate="yes" xml:space="preserve">
          <source>The default implementation returns true. Subclasses should override this method if the provider instance requires an explicit &lt;code&gt;configure&lt;/code&gt; call after being constructed.</source>
          <target state="translated">기본 구현은 true를 반환합니다. 공급자 인스턴스 가 생성 된 후 명시적인 &lt;code&gt;configure&lt;/code&gt; 호출이 필요한 경우 하위 클래스는이 메서드를 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ff63705eedf8e97393eaa7bb4cbaaaaf958ca9e0" translate="yes" xml:space="preserve">
          <source>The default implementation sets the &lt;code&gt;controller&lt;/code&gt; instance variable to the supplied value.</source>
          <target state="translated">기본 구현은 &lt;code&gt;controller&lt;/code&gt; 인스턴스 변수를 제공된 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="84abf02e2044dda45b808c2e603c2037fc11fc85" translate="yes" xml:space="preserve">
          <source>The default implementation sets the &lt;code&gt;output&lt;/code&gt; instance variable to the value of &lt;code&gt;output&lt;/code&gt; after checking &lt;code&gt;output&lt;/code&gt; against the set of classes advertised by the originating provider, if there is one.</source>
          <target state="translated">기본 구현은 세트 &lt;code&gt;output&lt;/code&gt; 의 값과 인스턴스 변수 &lt;code&gt;output&lt;/code&gt; 확인한 후 &lt;code&gt;output&lt;/code&gt; 존재하는 경우, 발신 제공자가 광고 클래스들의 세트를 대.</target>
        </trans-unit>
        <trans-unit id="9509b98507ddce11729608901728e06782d38720" translate="yes" xml:space="preserve">
          <source>The default implementation sets the &lt;code&gt;progressListeners&lt;/code&gt; instance variable to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;progressListeners&lt;/code&gt; 인스턴스 변수를 &lt;code&gt;null&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="085d9cdf0fb616300bfeace8b3678226146b5b65" translate="yes" xml:space="preserve">
          <source>The default implementation sets the &lt;code&gt;updateListeners&lt;/code&gt; instance variable to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;updateListeners&lt;/code&gt; 인스턴스 변수를 &lt;code&gt;null&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="326a47bc9e4b1ac2be66ed87cce676b9f765a274" translate="yes" xml:space="preserve">
          <source>The default implementation sets the &lt;code&gt;warningListeners&lt;/code&gt; and &lt;code&gt;warningLocales&lt;/code&gt; instance variables to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;warningListeners&lt;/code&gt; 및 &lt;code&gt;warningLocales&lt;/code&gt; 인스턴스 변수를 &lt;code&gt;null&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="ba4ed35ab18cc1e9af75622e4cfef4d008f3a080" translate="yes" xml:space="preserve">
          <source>The default implementation sets the instance variable &lt;code&gt;compressionType&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt;, and the instance variable &lt;code&gt;compressionQuality&lt;/code&gt; to &lt;code&gt;1.0F&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 인스턴스 변수 &lt;code&gt;compressionType&lt;/code&gt; 을 &lt;code&gt;null&lt;/code&gt; 로 설정하고 인스턴스 변수 &lt;code&gt;compressionQuality&lt;/code&gt; 를 &lt;code&gt;1.0F&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="588dab97d46c2c545e5800ef6a2fbf51a6d4be03" translate="yes" xml:space="preserve">
          <source>The default implementation sets the instance variables &lt;code&gt;tileWidth&lt;/code&gt;, &lt;code&gt;tileHeight&lt;/code&gt;, &lt;code&gt;tileGridXOffset&lt;/code&gt;, and &lt;code&gt;tileGridYOffset&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 인스턴스 변수 &lt;code&gt;tileWidth&lt;/code&gt; , &lt;code&gt;tileHeight&lt;/code&gt; , &lt;code&gt;tileGridXOffset&lt;/code&gt; 및 &lt;code&gt;tileGridYOffset&lt;/code&gt; 을 &lt;code&gt;0&lt;/code&gt; 으로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="c01160a6449227c4e7c521efa1c6c72df3f0d164" translate="yes" xml:space="preserve">
          <source>The default implementation should be overridden by subclasses that can return a more efficient spliterator. In order to preserve expected laziness behavior for the &lt;a href=&quot;#stream()&quot;&gt;&lt;code&gt;stream()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#parallelStream()&quot;&gt;&lt;code&gt;parallelStream()&lt;/code&gt;&lt;/a&gt; methods, spliterators should either have the characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or be &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;. If none of these is practical, the overriding class should describe the spliterator's documented policy of binding and structural interference, and should override the &lt;a href=&quot;#stream()&quot;&gt;&lt;code&gt;stream()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#parallelStream()&quot;&gt;&lt;code&gt;parallelStream()&lt;/code&gt;&lt;/a&gt; methods to create streams using a &lt;code&gt;Supplier&lt;/code&gt; of the spliterator, as in:</source>
          <target state="translated">기본 구현은보다 효율적인 분할자를 반환 할 수있는 하위 클래스로 재정의되어야합니다. 예상 게으름 동작을 유지하기 위해 &lt;a href=&quot;#stream()&quot;&gt; &lt;code&gt;stream()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#parallelStream()&quot;&gt; &lt;code&gt;parallelStream()&lt;/code&gt; &lt;/a&gt; 메소드 spliterators 중 하나의 특성을 가져야한다 &lt;code&gt;IMMUTABLE&lt;/code&gt; 또는 &lt;code&gt;CONCURRENT&lt;/code&gt; 를 , 또는 &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;늦은 결합&lt;/a&gt;&lt;/em&gt; . 이들 중 어느 것도 실용적이지 않은 경우 재정의 클래스는 바인딩 및 구조적 간섭에 대한 분할 자의 문서화 된 정책을 설명해야하며 다음과 같이 분할기의 &lt;code&gt;Supplier&lt;/code&gt; 를 사용하여 스트림을 생성하기 위해 &lt;a href=&quot;#stream()&quot;&gt; &lt;code&gt;stream()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#parallelStream()&quot;&gt; &lt;code&gt;parallelStream()&lt;/code&gt; &lt;/a&gt; 메서드를 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="16f72f1f6e04f83b068d6afa6833f2f3b3616536" translate="yes" xml:space="preserve">
          <source>The default implementation should be overridden by subclasses that can return a more efficient spliterator. In order to preserve expected laziness behavior for the &lt;a href=&quot;collection#stream--&quot;&gt;&lt;code&gt;stream()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;collection#parallelStream--&quot;&gt;&lt;code&gt;parallelStream()&lt;/code&gt;&lt;/a&gt;} methods, spliterators should either have the characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or be &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;. If none of these is practical, the overriding class should describe the spliterator's documented policy of binding and structural interference, and should override the &lt;a href=&quot;collection#stream--&quot;&gt;&lt;code&gt;stream()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;collection#parallelStream--&quot;&gt;&lt;code&gt;parallelStream()&lt;/code&gt;&lt;/a&gt; methods to create streams using a &lt;code&gt;Supplier&lt;/code&gt; of the spliterator, as in:</source>
          <target state="translated">보다 효율적인 스플리터를 리턴 할 수있는 서브 클래스가 기본 구현을 대체해야합니다. &lt;a href=&quot;collection#stream--&quot;&gt; &lt;code&gt;stream()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;collection#parallelStream--&quot;&gt; &lt;code&gt;parallelStream()&lt;/code&gt; &lt;/a&gt; } 메서드에 대해 예상되는 게으름 동작을 유지하려면 스플리터의 특성이 &lt;code&gt;IMMUTABLE&lt;/code&gt; 또는 &lt;code&gt;CONCURRENT&lt;/code&gt; 이거나 &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;늦게 바인딩되어야&lt;/a&gt;&lt;/em&gt; 합니다. 이들 중 어느 것도 실용적이지 않으면 재정의 클래스는 스플리터의 문서화 된 바인딩 및 구조적 간섭 정책을 설명하고 다음 과 같이 스플리터 &lt;code&gt;Supplier&lt;/code&gt; 를 사용하여 스트림을 만들기 위해 &lt;a href=&quot;collection#stream--&quot;&gt; &lt;code&gt;stream()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;collection#parallelStream--&quot;&gt; &lt;code&gt;parallelStream()&lt;/code&gt; &lt;/a&gt; 메서드를 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="33635c4f3f61329896d4977d521fdb0a85471bca" translate="yes" xml:space="preserve">
          <source>The default implementation should usually be overridden. The spliterator returned by the default implementation has poor splitting capabilities, is unsized, and does not report any spliterator characteristics. Implementing classes can nearly always provide a better implementation.</source>
          <target state="translated">기본 구현은 일반적으로 재정의해야합니다. 기본 구현에서 반환 된 스플리터는 분할 기능이 불량하고 크기가 조정되지 않으며 스플리터 특성을보고하지 않습니다. 클래스를 구현하면 거의 항상 더 나은 구현을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa5bf9b6840dc44b537c683f20caf0ba6781801f" translate="yes" xml:space="preserve">
          <source>The default implementation simply returns 0, which is correct for non-tiled images and tiled images in most formats. Readers that support tiling with non-(0, 0) offsets should override this method.</source>
          <target state="translated">기본 구현은 단순히 0을 반환하는데, 이는 대부분의 형식에서 타일링되지 않은 이미지와 바둑판 식 이미지에 적합합니다. (0, 0)이 아닌 오프셋으로 타일링을 지원하는 리더는이 방법을 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="83c74b3dea4821e7f0178f2950cdfa2b1671eb34" translate="yes" xml:space="preserve">
          <source>The default implementation simply returns &lt;code&gt;(float)getWidth(imageIndex)/getHeight(imageIndex)&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 단순히 &lt;code&gt;(float)getWidth(imageIndex)/getHeight(imageIndex)&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ea212f64b6ea2979e53763518342728cfd8e8a91" translate="yes" xml:space="preserve">
          <source>The default implementation simply returns &lt;code&gt;createReaderInstance(null)&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 단순히 &lt;code&gt;createReaderInstance(null)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a99ccb6164f8428ccf2931b77db30dc3db5bbc47" translate="yes" xml:space="preserve">
          <source>The default implementation simply returns &lt;code&gt;createWriterInstance(null)&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 단순히 &lt;code&gt;createWriterInstance(null)&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="809a2dc37a2f5f2fa1a2d91bb082289500c9bf8e" translate="yes" xml:space="preserve">
          <source>The default implementation simply returns &lt;code&gt;getHeight(imageIndex)&lt;/code&gt;, which is correct for non-tiled images. Readers that support tiling should override this method.</source>
          <target state="translated">기본 구현은 단순히 &lt;code&gt;getHeight(imageIndex)&lt;/code&gt; 않은 이미지에 맞는 getHeight (imageIndex) 를 반환합니다 . 타일링을 지원하는 독자는이 방법을 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="7f8a27203d188d897d5c3d651db0c17ffc27c6ed" translate="yes" xml:space="preserve">
          <source>The default implementation simply returns &lt;code&gt;getWidth(imageIndex)&lt;/code&gt;, which is correct for non-tiled images. Readers that support tiling should override this method.</source>
          <target state="translated">기본 구현은 단순히 &lt;code&gt;getWidth(imageIndex)&lt;/code&gt; 않은 이미지에 올바른 getWidth (imageIndex) 를 반환합니다 . 타일링을 지원하는 독자는이 방법을 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="b00f0d3fbe6f6b8b36e74726a86f832512832583" translate="yes" xml:space="preserve">
          <source>The default implementation simply returns &lt;code&gt;readThumbnail(imageindex, thumbnailIndex).getHeight()&lt;/code&gt;. Subclasses should therefore override this method if possible in order to avoid forcing the thumbnail to be read.</source>
          <target state="translated">기본 구현은 단순히 &lt;code&gt;readThumbnail(imageindex, thumbnailIndex).getHeight()&lt;/code&gt; 를 반환합니다 . 따라서 서브 클래스가 썸네일을 강제로 읽지 않도록하려면 가능하면이 메소드를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="1df197fe9dd4eb65dcb16cf450546e91456ce5fb" translate="yes" xml:space="preserve">
          <source>The default implementation simply returns &lt;code&gt;readThumbnail(imageindex, thumbnailIndex).getWidth()&lt;/code&gt;. Subclasses should therefore override this method if possible in order to avoid forcing the thumbnail to be read.</source>
          <target state="translated">기본 구현은 단순히 &lt;code&gt;readThumbnail(imageindex, thumbnailIndex).getWidth()&lt;/code&gt; 를 반환합니다 . 따라서 서브 클래스가 썸네일을 강제로 읽지 않도록하려면 가능하면이 메소드를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="1a9ed219c65ea0f44e34f664919c8e2af6fd6f3c" translate="yes" xml:space="preserve">
          <source>The default implementation simply returns the first entry from the list provided by &lt;code&gt;getImageType&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;getImageType&lt;/code&gt; 이 제공 한 목록에서 첫 번째 항목을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="796ec8a94060e7b6d53dd4d48e395de2597b5b2a" translate="yes" xml:space="preserve">
          <source>The default implementation simply returns the result of calling &lt;code&gt;getImageMetadata(imageIndex)&lt;/code&gt;, after checking that the format name is supported. If it is not, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">기본 구현 은 형식 이름이 지원 &lt;code&gt;getImageMetadata(imageIndex)&lt;/code&gt; 확인한 후 getImageMetadata (imageIndex) 호출 결과를 리턴합니다 . 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="da05fa86efb2e3c31060124ac8d2165f81abc3c0" translate="yes" xml:space="preserve">
          <source>The default implementation simply returns the result of calling &lt;code&gt;getStreamMetadata()&lt;/code&gt;, after checking that the format name is supported. If it is not, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">기본 구현 은 형식 이름이 지원 &lt;code&gt;getStreamMetadata()&lt;/code&gt; 확인한 후 getStreamMetadata () 호출 결과를 리턴합니다 . 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="be41053e459c74d05527fd88ee2261758c687cfe" translate="yes" xml:space="preserve">
          <source>The default implementation supports display names contained in a &lt;a href=&quot;../text/dateformatsymbols&quot;&gt;&lt;code&gt;DateFormatSymbols&lt;/code&gt;&lt;/a&gt;. For example, if &lt;code&gt;field&lt;/code&gt; is &lt;a href=&quot;#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;style&lt;/code&gt; is &lt;a href=&quot;#ALL_STYLES&quot;&gt;&lt;code&gt;ALL_STYLES&lt;/code&gt;&lt;/a&gt;, this method returns a &lt;code&gt;Map&lt;/code&gt; containing all strings returned by &lt;a href=&quot;../text/dateformatsymbols#getShortMonths()&quot;&gt;&lt;code&gt;DateFormatSymbols.getShortMonths()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../text/dateformatsymbols#getMonths()&quot;&gt;&lt;code&gt;DateFormatSymbols.getMonths()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;../text/dateformatsymbols&quot;&gt; &lt;code&gt;DateFormatSymbols&lt;/code&gt; 에&lt;/a&gt; 포함 된 표시 이름을 지원합니다 . 예를 들어 &lt;code&gt;field&lt;/code&gt; 가 &lt;a href=&quot;#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt; 이고 &lt;code&gt;style&lt;/code&gt; 이 &lt;a href=&quot;#ALL_STYLES&quot;&gt; &lt;code&gt;ALL_STYLES&lt;/code&gt; &lt;/a&gt; 인 경우이 메서드는 &lt;a href=&quot;../text/dateformatsymbols#getShortMonths()&quot;&gt; &lt;code&gt;DateFormatSymbols.getShortMonths()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../text/dateformatsymbols#getMonths()&quot;&gt; &lt;code&gt;DateFormatSymbols.getMonths()&lt;/code&gt; &lt;/a&gt; 반환 된 모든 문자열을 포함 하는 &lt;code&gt;Map&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="03e3294973b4042249f320b86c7952eaea27b119" translate="yes" xml:space="preserve">
          <source>The default implementation supports display names contained in a &lt;a href=&quot;../text/dateformatsymbols&quot;&gt;&lt;code&gt;DateFormatSymbols&lt;/code&gt;&lt;/a&gt;. For example, if &lt;code&gt;field&lt;/code&gt; is &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;style&lt;/code&gt; is &lt;a href=&quot;calendar#ALL_STYLES&quot;&gt;&lt;code&gt;ALL_STYLES&lt;/code&gt;&lt;/a&gt;, this method returns a &lt;code&gt;Map&lt;/code&gt; containing all strings returned by &lt;a href=&quot;../text/dateformatsymbols#getShortMonths--&quot;&gt;&lt;code&gt;DateFormatSymbols.getShortMonths()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../text/dateformatsymbols#getMonths--&quot;&gt;&lt;code&gt;DateFormatSymbols.getMonths()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;../text/dateformatsymbols&quot;&gt; &lt;code&gt;DateFormatSymbols&lt;/code&gt; 에&lt;/a&gt; 포함 된 표시 이름을 지원합니다 . 예를 들어, &lt;code&gt;field&lt;/code&gt; 가 &lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt; 이고 &lt;code&gt;style&lt;/code&gt; 이 &lt;a href=&quot;calendar#ALL_STYLES&quot;&gt; &lt;code&gt;ALL_STYLES&lt;/code&gt; &lt;/a&gt; 인 경우이 메소드는 &lt;a href=&quot;../text/dateformatsymbols#getShortMonths--&quot;&gt; &lt;code&gt;DateFormatSymbols.getShortMonths()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../text/dateformatsymbols#getMonths--&quot;&gt; &lt;code&gt;DateFormatSymbols.getMonths()&lt;/code&gt; &lt;/a&gt; 리턴 한 모든 문자열을 포함 하는 &lt;code&gt;Map&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="757744186a7e79cc3da649ffb40fd0d52df1c8c9" translate="yes" xml:space="preserve">
          <source>The default implementation supports the calendar fields for which a &lt;a href=&quot;../text/dateformatsymbols&quot;&gt;&lt;code&gt;DateFormatSymbols&lt;/code&gt;&lt;/a&gt; has names in the given &lt;code&gt;locale&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;../text/dateformatsymbols&quot;&gt; &lt;code&gt;DateFormatSymbols&lt;/code&gt; &lt;/a&gt; 에 지정된 &lt;code&gt;locale&lt;/code&gt; 이름 이있는 달력 필드를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="8ef606ab09a05703f55bf6088f8f9fe307bc8b79" translate="yes" xml:space="preserve">
          <source>The default implementation synchronizes on this key and invokes &lt;code&gt;interestOps()&lt;/code&gt; and &lt;code&gt;interestOps(int)&lt;/code&gt; to retrieve and set this key's interest set.</source>
          <target state="translated">기본 구현은이 키에서 동기화 하고이 키의 관심 세트를 검색하고 설정하기 위해 &lt;code&gt;interestOps()&lt;/code&gt; 및 &lt;code&gt;interestOps(int)&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="38f0e15e037c8ac8626f7121977c3d5b7085df07" translate="yes" xml:space="preserve">
          <source>The default implementation throws &lt;a href=&quot;../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; for all files.</source>
          <target state="translated">기본 구현 은 모든 파일에 대해 &lt;a href=&quot;../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt; 을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="2340b3daf3dba30c4bb3f926b100ace732b22162" translate="yes" xml:space="preserve">
          <source>The default implementation throws &lt;a href=&quot;../../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;../../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="bd7e97ec049daba17dfc9519005aabbaac7a9b33" translate="yes" xml:space="preserve">
          <source>The default implementation throws &lt;a href=&quot;../../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;. This method is invoked internally only within &lt;a href=&quot;abstractqueuedlongsynchronizer.conditionobject&quot;&gt;&lt;code&gt;AbstractQueuedLongSynchronizer.ConditionObject&lt;/code&gt;&lt;/a&gt; methods, so need not be defined if conditions are not used.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;../../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다. 이 메소드는 &lt;a href=&quot;abstractqueuedlongsynchronizer.conditionobject&quot;&gt; &lt;code&gt;AbstractQueuedLongSynchronizer.ConditionObject&lt;/code&gt; &lt;/a&gt; 메소드 내에서만 내부적으로 호출 되므로 조건을 사용하지 않는 경우에는 정의 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="566fdb1f29530ad57488a429ddee7bc4b8e63170" translate="yes" xml:space="preserve">
          <source>The default implementation throws &lt;a href=&quot;../../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;. This method is invoked internally only within &lt;a href=&quot;abstractqueuedsynchronizer.conditionobject&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer.ConditionObject&lt;/code&gt;&lt;/a&gt; methods, so need not be defined if conditions are not used.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;../../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다. 이 메소드는 &lt;a href=&quot;abstractqueuedsynchronizer.conditionobject&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer.ConditionObject&lt;/code&gt; &lt;/a&gt; 메소드 내에서만 내부적으로 호출 되므로 조건을 사용하지 않는 경우에는 정의 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="53b92f6c0eda134b08fd4682bad164a694e53c26" translate="yes" xml:space="preserve">
          <source>The default implementation throws &lt;code&gt;ClassNotFoundException&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;ClassNotFoundException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="79b12493bc4f358c0c142065c4a63eac5813c4bc" translate="yes" xml:space="preserve">
          <source>The default implementation throws &lt;code&gt;DestroyFailedException&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;DestroyFailedException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="9b5e7a9ca18c71a04d099bd724a3a0d356ba3366" translate="yes" xml:space="preserve">
          <source>The default implementation throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="1616cdc2a61f5c9a891563c6af33fbd5a2538b74" translate="yes" xml:space="preserve">
          <source>The default implementation throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. Subclasses should override this method only if a configuration argument is supported.</source>
          <target state="translated">기본 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다. 하위 클래스는 구성 인수가 지원되는 경우에만이 메서드를 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="4481166a5ec1784da8ae1b830bb154baf42fb6f3" translate="yes" xml:space="preserve">
          <source>The default implementation throws &lt;code&gt;new UnknownDirectiveException(d, p)&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;new UnknownDirectiveException(d, p)&lt;/code&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="d9850a2d8a8ecd027e9f622a67a555d63723df2f" translate="yes" xml:space="preserve">
          <source>The default implementation throws a SAXParseException. Application writers may override this method in a subclass if they need to take specific actions for each fatal error (such as collecting all of the errors into a single report): in any case, the application must stop all regular processing when this method is invoked, since the document is no longer reliable, and the parser may no longer report parsing events.</source>
          <target state="translated">기본 구현은 SAXParseException을 발생시킵니다. 응용 프로그램 작성자는 각 치명적인 오류에 대해 특정 작업을 수행해야하는 경우 (예 : 모든 오류를 단일 보고서로 수집) 하위 클래스에서이 메서드를 재정의 할 수 있습니다. 어떤 경우에도 응용 프로그램은이 메서드가 호출 될 때 모든 일반 처리를 중지해야합니다. , 문서가 더 이상 신뢰할 수 없으며 파서가 더 이상 구문 분석 이벤트를보고하지 않을 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="91168dea26ee736579ad6d04a828d88b93fcb411" translate="yes" xml:space="preserve">
          <source>The default implementation throws an &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="afb68171ba746055d6ca53452d30073c5d3f7754" translate="yes" xml:space="preserve">
          <source>The default implementation throws an &lt;code&gt;IllegalStateException&lt;/code&gt; if the output is &lt;code&gt;null&lt;/code&gt;, and otherwise returns &lt;code&gt;false&lt;/code&gt; without checking the value of &lt;code&gt;imageIndex&lt;/code&gt;.</source>
          <target state="translated">출력이 &lt;code&gt;null&lt;/code&gt; 의 경우, 디폴트 구현은 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 Throw 합니다. 그렇지 않은 경우는 &lt;code&gt;imageIndex&lt;/code&gt; 값을 확인하지 않고 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="7ac120a3563328f07bce0df7acd6d29239acefca" translate="yes" xml:space="preserve">
          <source>The default implementation throws an &lt;code&gt;IllegalStateException&lt;/code&gt; if the output is &lt;code&gt;null&lt;/code&gt;, and otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">출력이 &lt;code&gt;null&lt;/code&gt; 의 경우, 디폴트 구현은 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 Throw , 그렇지 않은 경우는 &lt;code&gt;false&lt;/code&gt; 를 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="0deaa3caf94a726e4720ef14c68c4eece06e4c8a" translate="yes" xml:space="preserve">
          <source>The default implementation throws an &lt;code&gt;IllegalStateException&lt;/code&gt; if the output is &lt;code&gt;null&lt;/code&gt;, and otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">출력이 &lt;code&gt;null&lt;/code&gt; 의 경우는 디폴트 구현은 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 , 그렇지 않은 경우는 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 Throw합니다 .</target>
        </trans-unit>
        <trans-unit id="4807b6f3376c3b3784645bff86c1c6d59920fae6" translate="yes" xml:space="preserve">
          <source>The default implementation throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="87d9716bfa984a3bcad18139765dddf159844c78" translate="yes" xml:space="preserve">
          <source>The default implementation throws an instance of &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; and performs no other action.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt; 인스턴스를 throw하고 다른 작업을 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fad5763045c43c8f0743d671166ac8ec67692ba8" translate="yes" xml:space="preserve">
          <source>The default implementation traverses all elements of the collection using its &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator()&lt;/code&gt;&lt;/a&gt;. Each matching element is removed using &lt;a href=&quot;iterator#remove()&quot;&gt;&lt;code&gt;Iterator.remove()&lt;/code&gt;&lt;/a&gt;. If the collection's iterator does not support removal then an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown on the first matching element.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator()&lt;/code&gt; &lt;/a&gt; 사용하여 컬렉션의 모든 요소를 ​​순회합니다 . 일치하는 각 요소는 &lt;a href=&quot;iterator#remove()&quot;&gt; &lt;code&gt;Iterator.remove()&lt;/code&gt; &lt;/a&gt; 사용하여 제거됩니다 . 컬렉션의 반복자가 제거를 지원하지 않으면 첫 번째 일치하는 요소에서 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="363300b80fc8d4a327f0a3aa5cd28335292795e2" translate="yes" xml:space="preserve">
          <source>The default implementation traverses all elements of the collection using its &lt;a href=&quot;collection#iterator--&quot;&gt;&lt;code&gt;iterator()&lt;/code&gt;&lt;/a&gt;. Each matching element is removed using &lt;a href=&quot;iterator#remove--&quot;&gt;&lt;code&gt;Iterator.remove()&lt;/code&gt;&lt;/a&gt;. If the collection's iterator does not support removal then an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown on the first matching element.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;collection#iterator--&quot;&gt; &lt;code&gt;iterator()&lt;/code&gt; &lt;/a&gt; 사용하여 컬렉션의 모든 요소를 ​​순회합니다 . 일치하는 각 요소는 &lt;a href=&quot;iterator#remove--&quot;&gt; &lt;code&gt;Iterator.remove()&lt;/code&gt; &lt;/a&gt; 사용하여 제거됩니다 . 컬렉션의 반복자가 제거를 지원하지 않으면 첫 번째 일치하는 요소에서 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="202e02d0aa52de457ae593e8fab7f87a0e151669" translate="yes" xml:space="preserve">
          <source>The default implementation uses &lt;a href=&quot;#isLeapYear()&quot;&gt;&lt;code&gt;isLeapYear()&lt;/code&gt;&lt;/a&gt; and returns 365 or 366.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;#isLeapYear()&quot;&gt; &lt;code&gt;isLeapYear()&lt;/code&gt; &lt;/a&gt; 하고 365 또는 366을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9a8506e45362d08ce9568d67a3ae99890b28f0b8" translate="yes" xml:space="preserve">
          <source>The default implementation uses &lt;a href=&quot;chronolocaldate#isLeapYear--&quot;&gt;&lt;code&gt;ChronoLocalDate.isLeapYear()&lt;/code&gt;&lt;/a&gt; and returns 365 or 366.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;chronolocaldate#isLeapYear--&quot;&gt; &lt;code&gt;ChronoLocalDate.isLeapYear()&lt;/code&gt; &lt;/a&gt; 하고 365 또는 366을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="57b82ffd52abde3e677246bf8be4d192adddbfba" translate="yes" xml:space="preserve">
          <source>The default implementation uses &lt;a href=&quot;chronolocaldate#isLeapYear--&quot;&gt;&lt;code&gt;isLeapYear()&lt;/code&gt;&lt;/a&gt; and returns 365 or 366.</source>
          <target state="translated">기본 구현은 &lt;a href=&quot;chronolocaldate#isLeapYear--&quot;&gt; &lt;code&gt;isLeapYear()&lt;/code&gt; &lt;/a&gt; 하고 365 또는 366을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d61b8113c64fb7663a4c5461e3b048f125d1f3a6" translate="yes" xml:space="preserve">
          <source>The default implementation uses an &lt;a href=&quot;arraylist&quot;&gt;&lt;code&gt;ArrayList&lt;/code&gt;&lt;/a&gt; that overriding implementations may modify before returning it to the caller. However, a subclass must not modify it after it has been returned by &lt;code&gt;getCandidateLocales&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 재정의 구현이 호출자에게 반환하기 전에 수정할 수 있는 &lt;a href=&quot;arraylist&quot;&gt; &lt;code&gt;ArrayList&lt;/code&gt; &lt;/a&gt; 를 사용 합니다. 그러나 &lt;code&gt;getCandidateLocales&lt;/code&gt; 가 서브 클래스를 리턴 한 후에는 서브 클래스를 수정해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="4121d6a9a341da3113c28c90f0edcb971e6641ed" translate="yes" xml:space="preserve">
          <source>The default implementation uses reflection to invoke the standard constructor for this type of service. Security providers can override this method to implement instantiation in a different way. For details and the values of constructorParameter that are valid for the various types of services see the  Java Cryptography Architecture API Specification &amp;amp; Reference.</source>
          <target state="translated">기본 구현에서는 리플렉션을 사용하여이 유형의 서비스에 대한 표준 생성자를 호출합니다. 보안 공급자는이 방법을 재정 의하여 인스턴스화를 다른 방식으로 구현할 수 있습니다. 다양한 유형의 서비스에 유효한 constructorParameter의 세부 사항 및 값에 대해서는 Java Cryptography Architecture API 스펙 및 참조를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="49d7d8fc433ee01b1ca0cac96cace32c3cacb2eb" translate="yes" xml:space="preserve">
          <source>The default implementation uses reflection to invoke the standard constructor for this type of service. Security providers can override this method to implement instantiation in a different way. For details and the values of constructorParameter that are valid for the various types of services see the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca&quot;&gt;Java Cryptography Architecture (JCA) Reference Guide&lt;/a&gt;.</source>
          <target state="translated">기본 구현은 리플렉션을 사용하여 이러한 유형의 서비스에 대한 표준 생성자를 호출합니다. 보안 공급자는이 메서드를 재정 의하여 다른 방식으로 인스턴스화를 구현할 수 있습니다. 다양한 유형의 서비스에 유효한 constructorParameter의 세부 사항 및 값은 &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca&quot;&gt;JCA (Java Cryptography Architecture) 참조 안내서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c24949360713a620b2d2af46ff8fd3482f73e598" translate="yes" xml:space="preserve">
          <source>The default implementation uses the following criteria to determine a valid simple SQL identifier:</source>
          <target state="translated">기본 구현에서는 다음 기준을 사용하여 유효한 단순 SQL 식별자를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="6f03e3e07658a09246bd6fb9360bc90c64f2f7cb" translate="yes" xml:space="preserve">
          <source>The default implementation visits a &lt;code&gt;
 ModuleElement&lt;/code&gt; by calling &lt;code&gt;visitUnknown(e, p)&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;visitUnknown(e, p)&lt;/code&gt; 호출 하여 &lt;code&gt; ModuleElement&lt;/code&gt; 를 방문합니다 .</target>
        </trans-unit>
        <trans-unit id="cf10f641341e0eb37678ba3876c5f8ff6f3f3a4e" translate="yes" xml:space="preserve">
          <source>The default implementation will first locate a &lt;code&gt;ResourceBundle&lt;/code&gt; using the current resource base name set by &lt;code&gt;setResourceBaseName&lt;/code&gt; and the supplied &lt;code&gt;Locale&lt;/code&gt;, using the fallback mechanism described in the comments for &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;. If a &lt;code&gt;ResourceBundle&lt;/code&gt; is found, the element name followed by a &quot;/&quot; character followed by the attribute name (&lt;code&gt;elementName + &quot;/&quot; + attrName&lt;/code&gt;) will be used as a key to its &lt;code&gt;getString&lt;/code&gt; method, and the result returned. If no &lt;code&gt;ResourceBundle&lt;/code&gt; is found, or no such key is present, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="translated">기본 구현은 먼저 찾은 것이다 &lt;code&gt;ResourceBundle&lt;/code&gt; 하여 현재 자원 기반 이름 집합 사용 &lt;code&gt;setResourceBaseName&lt;/code&gt; 및 공급 &lt;code&gt;Locale&lt;/code&gt; 에 대한 주석에서 설명한 대체기구 사용 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 의이 . 경우 &lt;code&gt;ResourceBundle&lt;/code&gt; 발견되어 소자 이름 속성 명 「/」문자 하였다 ( &lt;code&gt;elementName + &quot;/&quot; + attrName&lt;/code&gt; )의 열쇠로 사용될 &lt;code&gt;getString&lt;/code&gt; 방법 및 결과가 반환. 어떤 경우 &lt;code&gt;ResourceBundle&lt;/code&gt; 발견, 또는 그러한 키가 존재하지 않는, &lt;code&gt;null&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2e3848e33cc5aaadfedfa534b9853cb484d489f1" translate="yes" xml:space="preserve">
          <source>The default implementation will first locate a &lt;code&gt;ResourceBundle&lt;/code&gt; using the current resource base name set by &lt;code&gt;setResourceBaseName&lt;/code&gt; and the supplied &lt;code&gt;Locale&lt;/code&gt;, using the fallback mechanism described in the comments for &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;. If a &lt;code&gt;ResourceBundle&lt;/code&gt; is found, the element name will be used as a key to its &lt;code&gt;getString&lt;/code&gt; method, and the result returned. If no &lt;code&gt;ResourceBundle&lt;/code&gt; is found, or no such key is present, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="translated">기본 구현은 먼저 찾은 것이다 &lt;code&gt;ResourceBundle&lt;/code&gt; 하여 현재 자원 기반 이름 집합 사용 &lt;code&gt;setResourceBaseName&lt;/code&gt; 및 공급 &lt;code&gt;Locale&lt;/code&gt; 에 대한 주석에서 설명한 대체기구 사용 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 의이 . 경우 &lt;code&gt;ResourceBundle&lt;/code&gt; 발견, 요소 이름은 열쇠로 사용됩니다 &lt;code&gt;getString&lt;/code&gt; 방법 및 결과가 반환. 어떤 경우 &lt;code&gt;ResourceBundle&lt;/code&gt; 발견, 또는 그러한 키가 존재하지 않는, &lt;code&gt;null&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="05c8819a8535b589cd9a65b51e9336cdd46d3e58" translate="yes" xml:space="preserve">
          <source>The default implementation will first search the parent class loader for the resource; if the parent is &lt;code&gt;null&lt;/code&gt; the path of the class loader built into the virtual machine is searched. If not found, this method will invoke &lt;a href=&quot;#findResource(java.lang.String)&quot;&gt;&lt;code&gt;findResource(String)&lt;/code&gt;&lt;/a&gt; to find the resource.</source>
          <target state="translated">기본 구현은 먼저 부모 클래스 로더에서 리소스를 검색합니다. 부모가 &lt;code&gt;null&lt;/code&gt; 이면 가상 머신에 내장 된 클래스 로더의 경로가 검색됩니다. 찾을 수없는 경우이 메서드는 리소스를 찾기 위해 &lt;a href=&quot;#findResource(java.lang.String)&quot;&gt; &lt;code&gt;findResource(String)&lt;/code&gt; &lt;/a&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="7f929e200f70d4464398c0b48966b105f9f84673" translate="yes" xml:space="preserve">
          <source>The default implementation will first search the parent class loader for the resource; if the parent is &lt;code&gt;null&lt;/code&gt; the path of the class loader built into the virtual machine is searched. It then invokes &lt;a href=&quot;#findResources(java.lang.String)&quot;&gt;&lt;code&gt;findResources(String)&lt;/code&gt;&lt;/a&gt; to find the resources with the name in this class loader. It returns an enumeration whose elements are the URLs found by searching the parent class loader followed by the elements found with &lt;code&gt;findResources&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 먼저 부모 클래스 로더에서 리소스를 검색합니다. 부모가 &lt;code&gt;null&lt;/code&gt; 이면 가상 머신에 내장 된 클래스 로더의 경로가 검색됩니다. 그런 다음 &lt;a href=&quot;#findResources(java.lang.String)&quot;&gt; &lt;code&gt;findResources(String)&lt;/code&gt; &lt;/a&gt; 를 호출 하여이 클래스 로더에서 이름을 가진 리소스를 찾습니다. 상위 클래스 로더와 &lt;code&gt;findResources&lt;/code&gt; 로 찾은 요소를 검색하여 찾은 URL 요소가있는 열거를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="720343c36d0a2b24c363b2ee77d2f5c8902c97b0" translate="yes" xml:space="preserve">
          <source>The default implementation will return &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">기본 구현은 &lt;code&gt;0&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="79a2614837820a0dde145a7625e5edf05a561356" translate="yes" xml:space="preserve">
          <source>The default implementation will return &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">기본 구현은 &lt;code&gt;false&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="49229ee21e92ac0dced9b4a858f962fa41fabf41" translate="yes" xml:space="preserve">
          <source>The default implementation will throw &lt;code&gt;SQLFeatureNotSupportedException&lt;/code&gt;</source>
          <target state="translated">기본 구현은 &lt;code&gt;SQLFeatureNotSupportedException&lt;/code&gt; 을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="2f6d61d99eb69f5d165ac5f3c10a5bf408142206" translate="yes" xml:space="preserve">
          <source>The default implementation will throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;</source>
          <target state="translated">기본 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="adb91cc142c4c5602d726ac11b2442e0f4792a71" translate="yes" xml:space="preserve">
          <source>The default implementation will throw a &lt;code&gt;SQLException&lt;/code&gt; if:</source>
          <target state="translated">기본 구현은 다음과 같은 경우 &lt;code&gt;SQLException&lt;/code&gt; 을 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="5c169a960aee0246181ecff53ff31ec1cf807d15" translate="yes" xml:space="preserve">
          <source>The default implementation will throw a &lt;code&gt;SQLFeatureNotSupportedException&lt;/code&gt;</source>
          <target state="translated">기본 구현은 &lt;code&gt;SQLFeatureNotSupportedException&lt;/code&gt; 을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="5f1ba297a702c2579554cb6b4df707b7db4c2dab" translate="yes" xml:space="preserve">
          <source>The default implementation will throw a &lt;code&gt;SQLFeatureNotSupportedException&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;SQLFeatureNotSupportedException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="d8e722b6c2872cdd0880234c873128a2bac9a8a8" translate="yes" xml:space="preserve">
          <source>The default implementation, calls the &lt;code&gt;initialize&lt;/code&gt; method of the type's superclass.</source>
          <target state="translated">기본 구현 은 유형의 수퍼 클래스 의 &lt;code&gt;initialize&lt;/code&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="a609ae1178482f89fd3a3e6c3a664c702d5f2372" translate="yes" xml:space="preserve">
          <source>The default implementation, which explains typical resolve behaviour, is provided in &lt;a href=&quot;abstractchronology&quot;&gt;&lt;code&gt;AbstractChronology&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">일반적인 해결 동작을 설명하는 기본 구현은 &lt;a href=&quot;abstractchronology&quot;&gt; &lt;code&gt;AbstractChronology&lt;/code&gt; &lt;/a&gt; 에서 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="a75241ad421aa6838be3b0e7f091e001ddc0e4e7" translate="yes" xml:space="preserve">
          <source>The default is -1, which means the packer will always create a single segment output file. In cases where extremely large output files are generated, users are strongly encouraged to use segmenting or break up the input file into smaller JARs.</source>
          <target state="translated">기본값은 -1이며, 패커는 항상 단일 세그먼트 출력 파일을 작성합니다. 매우 큰 출력 파일이 생성되는 경우 사용자는 세그먼트를 사용하거나 입력 파일을 더 작은 JAR로 분할하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="262f0c0ca2ca77ae719addf88cdd09ee4b4cb09d" translate="yes" xml:space="preserve">
          <source>The default is 5, investing a modest amount of time to produce reasonable compression.</source>
          <target state="translated">기본값은 5이며, 적당한 압축을 위해 적당한 시간을 투자합니다.</target>
        </trans-unit>
        <trans-unit id="03258676b944ef02a227e96cff828e732412c6cd" translate="yes" xml:space="preserve">
          <source>The default is &lt;a href=&quot;#KEEP&quot;&gt;&lt;code&gt;KEEP&lt;/code&gt;&lt;/a&gt;, which preserves the input information, but may cause the transmitted archive to be larger than necessary.</source>
          <target state="translated">기본값은 &lt;a href=&quot;#KEEP&quot;&gt; &lt;code&gt;KEEP&lt;/code&gt; &lt;/a&gt; 이며 입력 정보를 보존하지만 전송 된 아카이브가 필요 이상으로 커질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c95ea72235ac8f005f060a0a0e1829b3fee62241" translate="yes" xml:space="preserve">
          <source>The default is &lt;a href=&quot;#TRUE&quot;&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/a&gt;, which preserves the input information, but may cause the transmitted archive to be larger than necessary.</source>
          <target state="translated">기본값은 &lt;a href=&quot;#TRUE&quot;&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/a&gt; 이며 입력 정보를 보존하지만 전송 된 아카이브가 필요 이상으로 커질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15461d064a1287ffe97e7c92de29748b5a8d3403" translate="yes" xml:space="preserve">
          <source>The default is &lt;a href=&quot;pack200.packer#KEEP&quot;&gt;&lt;code&gt;KEEP&lt;/code&gt;&lt;/a&gt;, which preserves the input information, but may cause the transmitted archive to be larger than necessary.</source>
          <target state="translated">기본값은 &lt;a href=&quot;pack200.packer#KEEP&quot;&gt; &lt;code&gt;KEEP&lt;/code&gt; &lt;/a&gt; 이며 입력 정보 는 유지 하지만 전송 된 아카이브가 필요 이상으로 커질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="995e43ed08f0c352b0b3da09b56d5bc0be0cf00f" translate="yes" xml:space="preserve">
          <source>The default is &lt;a href=&quot;pack200.packer#TRUE&quot;&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/a&gt;, which preserves the input information, but may cause the transmitted archive to be larger than necessary.</source>
          <target state="translated">기본값은 &lt;a href=&quot;pack200.packer#TRUE&quot;&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/a&gt; 이며 입력 정보는 유지하지만 전송 된 아카이브가 필요 이상으로 커질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c4b2c4ce85f75eb795a462e5b9bb4db017a53a4" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;Angled&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;Angled&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ac1b94b5edbf2d59e4d959fb2258c0fb9c573902" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;JFormattedTextField.COMMIT_OR_REVERT&lt;/code&gt;, refer to &lt;a href=&quot;#setFocusLostBehavior(int)&quot;&gt;&lt;code&gt;setFocusLostBehavior(int)&lt;/code&gt;&lt;/a&gt; for more information on this.</source>
          <target state="translated">기본값은 &lt;code&gt;JFormattedTextField.COMMIT_OR_REVERT&lt;/code&gt; 는 , 참조 &lt;a href=&quot;#setFocusLostBehavior(int)&quot;&gt; &lt;code&gt;setFocusLostBehavior(int)&lt;/code&gt; &lt;/a&gt; 이에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="784ca0180973adfba5c92e31eea0967211dd6ca0" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7fa053b164d3935cc5a6f07673d036b7120b06e6" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">디폴트는 &lt;code&gt;true&lt;/code&gt; 입니다 입니다.</target>
        </trans-unit>
        <trans-unit id="3171fbce7c014688c045ffa7fe66cb5e98b09a3e" translate="yes" xml:space="preserve">
          <source>The default is for a &lt;code&gt;RowSet&lt;/code&gt; object not to be updatable if it was populated with data from an SQL &lt;code&gt;VIEW&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;RowSet&lt;/code&gt; 객체가 SQL &lt;code&gt;VIEW&lt;/code&gt; 의 데이터로 채워진 경우 업데이트 할 수없는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="49402b42a55285dea6e4ca48b562477e9791f28e" translate="yes" xml:space="preserve">
          <source>The default is to &lt;em&gt;not clip&lt;/em&gt; the children. It is more efficient to allow a view to clip only if it really feels it needs clipping.</source>
          <target state="translated">기본값은 자식을 &lt;em&gt;자르지 않는 것&lt;/em&gt; 입니다. 실제로 클리핑이 필요하다고 생각되는 경우에만 뷰가 클리핑되도록하는 것이 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="cb31a81c81ea28c71b98ba238094e044d6b76a3d" translate="yes" xml:space="preserve">
          <source>The default keymap that will be shared by all &lt;code&gt;JTextComponent&lt;/code&gt; instances unless they have had a different keymap set.</source>
          <target state="translated">다른 키맵 세트가없는 경우 모든 &lt;code&gt;JTextComponent&lt;/code&gt; 인스턴스에서 공유 할 기본 키맵입니다 .</target>
        </trans-unit>
        <trans-unit id="f4165b0eefbc9206203d6c87fff4a6726bef578b" translate="yes" xml:space="preserve">
          <source>The default keystore type can be changed by setting the value of the &lt;code&gt;keystore.type&lt;/code&gt; security property to the desired keystore type.</source>
          <target state="translated">&lt;code&gt;keystore.type&lt;/code&gt; security 특성 값을 원하는 키 저장소 유형 으로 설정하여 기본 키 저장소 유형을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fb4c736504e183c1a916a63a8f6737eed0fa497a" translate="yes" xml:space="preserve">
          <source>The default keystore type can be used by applications that do not want to use a hard-coded keystore type when calling one of the &lt;code&gt;getInstance&lt;/code&gt; methods, and want to provide a default keystore type in case a user does not specify its own.</source>
          <target state="translated">기본 키 저장소 유형은 &lt;code&gt;getInstance&lt;/code&gt; 메소드 중 하나를 호출 할 때 하드 코드 된 키 저장소 유형을 사용하지 않으려 는 사용자가 사용할 수 있으며 사용자가 고유 한 키 저장소 유형을 제공하지 않는 경우에 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1cdbd5dc6e08b465e538b4edc5937c7d0b0a5ce9" translate="yes" xml:space="preserve">
          <source>The default layout for a dialog is &lt;code&gt;BorderLayout&lt;/code&gt;.</source>
          <target state="translated">대화 상자의 기본 레이아웃은 &lt;code&gt;BorderLayout&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="da9f5fcd7ae6fefc93a2b818cb7d32b4c46a97d9" translate="yes" xml:space="preserve">
          <source>The default layout for a frame is &lt;code&gt;BorderLayout&lt;/code&gt;.</source>
          <target state="translated">프레임의 기본 레이아웃은 &lt;code&gt;BorderLayout&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="492585784e89b4fcd6741ad24a565870b7ba430d" translate="yes" xml:space="preserve">
          <source>The default layout manager for &lt;code&gt;JViewport&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JViewport&lt;/code&gt; 의 기본 레이아웃 관리자 .</target>
        </trans-unit>
        <trans-unit id="54e6281d72b6cbfc69bd393b49aee5b4a6c96482" translate="yes" xml:space="preserve">
          <source>The default layout manager for &lt;code&gt;JViewport&lt;/code&gt;. &lt;code&gt;ViewportLayout&lt;/code&gt; defines a policy for layout that should be useful for most applications. The viewport makes its view the same size as the viewport, however it will not make the view smaller than its minimum size. As the viewport grows the view is kept bottom justified until the entire view is visible, subsequently the view is kept top justified.</source>
          <target state="translated">&lt;code&gt;JViewport&lt;/code&gt; 의 기본 레이아웃 관리자 . &lt;code&gt;ViewportLayout&lt;/code&gt; 은 대부분의 응용 프로그램에 유용해야하는 레이아웃 정책을 정의합니다. 뷰포트는 뷰를 뷰포트와 같은 크기로 만들지 만 뷰를 최소 크기보다 작게 만들지는 않습니다. 뷰포트가 커짐에 따라 전체 뷰가 표시 될 때까지 뷰가 아래쪽 정렬 된 상태로 유지되고, 이후 뷰는 위쪽 정렬 된 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="96853d12f0235b181bfd1a53998a28282bb83e4a" translate="yes" xml:space="preserve">
          <source>The default layout manager for Popup menus and menubars.</source>
          <target state="translated">팝업 메뉴 및 메뉴 모음의 기본 레이아웃 관리자입니다.</target>
        </trans-unit>
        <trans-unit id="edd7bbe397b0d4100cecd10a5e1723204fb48f51" translate="yes" xml:space="preserve">
          <source>The default layout manager for Popup menus and menubars. This class is an extension of BoxLayout which adds the UIResource tag so that pluggable L&amp;amp;Fs can distinguish it from user-installed layout managers on menus.</source>
          <target state="translated">팝업 메뉴 및 메뉴 모음의 기본 레이아웃 관리자입니다. 이 클래스는 UIResource 태그를 추가하는 BoxLayout의 확장으로 플러그 형 L &amp;amp; F가 메뉴에서 사용자가 설치 한 레이아웃 관리자와 구분할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffe28bb4d25eff4c6f55aad2cfd4c0ce9198bc26" translate="yes" xml:space="preserve">
          <source>The default layout manager for a panel is the &lt;code&gt;FlowLayout&lt;/code&gt; layout manager.</source>
          <target state="translated">패널의 기본 레이아웃 관리자는 &lt;code&gt;FlowLayout&lt;/code&gt; 레이아웃 관리자입니다.</target>
        </trans-unit>
        <trans-unit id="951c81fd610ec5d817f5f091469118671a67331b" translate="yes" xml:space="preserve">
          <source>The default method implementations (inherited or otherwise) do not apply any synchronization protocol. If a &lt;code&gt;Collection&lt;/code&gt; implementation has a specific synchronization protocol, then it must override default implementations to apply that protocol.</source>
          <target state="translated">기본 메소드 구현 (상속되거나 다른 방식으로)은 동기화 프로토콜을 적용하지 않습니다. 경우 &lt;code&gt;Collection&lt;/code&gt; 구현은 특정 동기화 프로토콜을 가지고, 그것은 그 프로토콜을 적용하는 기본 구현을 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="d1c5a9dec31f4fd826d16ff0e5fefee4737538a6" translate="yes" xml:space="preserve">
          <source>The default method name is &quot;new&quot;.</source>
          <target state="translated">기본 메소드 이름은 &quot;new&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="f8d205b9b6eeb48a0fbd9e05b9fca361d9a1e69a" translate="yes" xml:space="preserve">
          <source>The default model for combo boxes.</source>
          <target state="translated">콤보 상자의 기본 모델입니다.</target>
        </trans-unit>
        <trans-unit id="77d7314220ddd9ed1bc4a9f8a87835975e367a97" translate="yes" xml:space="preserve">
          <source>The default offset of a text.</source>
          <target state="translated">텍스트의 기본 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="927679cabd953959f0d56054ed130ed3ec5a75ba" translate="yes" xml:space="preserve">
          <source>The default order for looking up the preferred locale providers is &quot;CLDR,COMPAT&quot;, so specifying &quot;CLDR,COMPAT&quot; is identical to the default behavior. Applications which require implementations of the locale sensitive services must explicitly specify &quot;SPI&quot; in order for the Java runtime to load them from the classpath.</source>
          <target state="translated">기본 로캘 공급자를 찾는 기본 순서는 &quot;CLDR, COMPAT&quot;이므로 &quot;CLDR, COMPAT&quot;를 지정하는 것은 기본 동작과 동일합니다. 로케일에 민감한 서비스의 구현이 필요한 애플리케이션은 Java 런타임이 클래스 경로에서 서비스를로드하기 위해 &quot;SPI&quot;를 명시 적으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="5921f0e5e747e700cdba877924262940728c035b" translate="yes" xml:space="preserve">
          <source>The default policy is to allow access to PUBLIC members, as well as access to classes that have the same class loader as the caller. In all other cases, this method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;accessDeclaredMembers&quot;)
 &lt;/code&gt; permission.</source>
          <target state="translated">기본 정책은 PUBLIC 멤버 및 호출자와 클래스 로더가 동일한 클래스에 대한 액세스를 허용하는 것입니다. 다른 모든 경우에이 메소드 는 &lt;code&gt;RuntimePermission(&quot;accessDeclaredMembers&quot;) &lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="68b19e3d21765f69f41bd0585951690681bbd053" translate="yes" xml:space="preserve">
          <source>The default priority that is assigned to a thread.</source>
          <target state="translated">스레드에 지정된 기본 우선 순위입니다.</target>
        </trans-unit>
        <trans-unit id="f4f41497a02a77d89e71d8a550c6458599a22259" translate="yes" xml:space="preserve">
          <source>The default property name according to the JAXP spec.</source>
          <target state="translated">JAXP 사양에 따른 기본 속성 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b9dd256a9b17ebbb9de17213a870b8e84e7de322" translate="yes" xml:space="preserve">
          <source>The default property value is &lt;code&gt;UPDATE_WHEN_ON_EDT&lt;/code&gt;.</source>
          <target state="translated">기본 속성 값은 &lt;code&gt;UPDATE_WHEN_ON_EDT&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e2d3a9991fe4ff7fe03b248ed7222e0f4d9b8a66" translate="yes" xml:space="preserve">
          <source>The default provider provides a similar &lt;em&gt;round-trip&lt;/em&gt; guarantee to the &lt;a href=&quot;../../io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class. For a given &lt;code&gt;Path&lt;/code&gt;</source>
          <target state="translated">기본 공급자는 &lt;a href=&quot;../../io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 클래스 와 유사한 &lt;em&gt;왕복&lt;/em&gt; 보증을 제공합니다 . 주어진 &lt;code&gt;Path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5202d917ccf73c1199f7b7d2fcce1b2927504547" translate="yes" xml:space="preserve">
          <source>The default provider that the &lt;code&gt;SyncFactory&lt;/code&gt; instance will supply to a disconnected &lt;code&gt;RowSet&lt;/code&gt; object when no provider implementation is specified.</source>
          <target state="translated">공급자 구현이 지정되지 않은 경우 &lt;code&gt;SyncFactory&lt;/code&gt; 인스턴스가 연결이 끊어진 &lt;code&gt;RowSet&lt;/code&gt; 개체에 제공하는 기본 공급자입니다 .</target>
        </trans-unit>
        <trans-unit id="9121cc288b22b23a1e153bb8463c60d7d9c6c8e8" translate="yes" xml:space="preserve">
          <source>The default proxy selector does enforce a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies&quot;&gt;set of System Properties&lt;/a&gt; related to proxy settings.</source>
          <target state="translated">The default proxy selector does enforce a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies&quot;&gt;set of System Properties&lt;/a&gt; related to proxy settings.</target>
        </trans-unit>
        <trans-unit id="d2dd252b637b95e299f5a35c05983ea8110ca8eb" translate="yes" xml:space="preserve">
          <source>The default proxy selector does enforce a set of System Properties related to proxy settings.</source>
          <target state="translated">기본 프록시 선택기는 프록시 설정과 관련된 일련의 시스템 속성을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="23dd4cc98571528012cd8125426c7e26b17ab77e" translate="yes" xml:space="preserve">
          <source>The default renderer displays a string or an icon. Other renderers can handle graphic images and composite items.</source>
          <target state="translated">The default renderer displays a string or an icon. Other renderers can handle graphic images and composite items.</target>
        </trans-unit>
        <trans-unit id="dd9cf405228c177bf3bc903ebdf2ac2390995673" translate="yes" xml:space="preserve">
          <source>The default selection (input value).</source>
          <target state="translated">The default selection (input value).</target>
        </trans-unit>
        <trans-unit id="970a3f8b7ee9152ea95b5d4a5c201eaf4a6a44fd" translate="yes" xml:space="preserve">
          <source>The default selection model</source>
          <target state="translated">The default selection model</target>
        </trans-unit>
        <trans-unit id="5ef1430c0a6be359fcfcb60ed6a55e10d76a1755" translate="yes" xml:space="preserve">
          <source>The default serialization mechanism for an object writes the class of the object, the class signature, and the values of all non-transient and non-static fields. References to other objects (except in transient or static fields) cause those objects to be written also. Multiple references to a single object are encoded using a reference sharing mechanism so that graphs of objects can be restored to the same shape as when the original was written.</source>
          <target state="translated">객체의 기본 직렬화 메커니즘은 객체의 클래스, 클래스 서명 및 모든 비 일시적 필드와 비 정적 필드의 값을 씁니다. 다른 객체에 대한 참조 (일시적 또는 정적 필드 제외)로 인해 해당 객체도 작성됩니다. 단일 객체에 대한 여러 참조는 참조 공유 메커니즘을 사용하여 인코딩되므로 객체의 그래프를 원본을 쓸 때와 같은 모양으로 복원 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b49110f637bf895ea176f432c5cbcf747df8eaf" translate="yes" xml:space="preserve">
          <source>The default service provider instance implements &lt;a href=&quot;rmiclassloaderspi&quot;&gt;&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt;&lt;/a&gt; as follows:</source>
          <target state="translated">The default service provider instance implements &lt;a href=&quot;rmiclassloaderspi&quot;&gt; &lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; &lt;/a&gt; as follows:</target>
        </trans-unit>
        <trans-unit id="cc33a2e28c74e59bba2058b88115bfd919e44170" translate="yes" xml:space="preserve">
          <source>The default setting may be overridden per protocol with &lt;a href=&quot;#setDefaultUseCaches(java.lang.String,boolean)&quot;&gt;&lt;code&gt;setDefaultUseCaches(String,boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The default setting may be overridden per protocol with &lt;a href=&quot;#setDefaultUseCaches(java.lang.String,boolean)&quot;&gt; &lt;code&gt;setDefaultUseCaches(String,boolean)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="75ab21f5611d4edf59b31f8c4dfc8351622c6067" translate="yes" xml:space="preserve">
          <source>The default settings include: the &quot;GET&quot; request method, a preference of &lt;a href=&quot;httpclient.version#HTTP_2&quot;&gt;HTTP/2&lt;/a&gt;, a redirection policy of &lt;a href=&quot;httpclient.redirect#NEVER&quot;&gt;NEVER&lt;/a&gt;, the &lt;a href=&quot;../../../../java.base/java/net/proxyselector#getDefault()&quot;&gt;default proxy selector&lt;/a&gt;, and the &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslcontext#getDefault()&quot;&gt;default SSL context&lt;/a&gt;.</source>
          <target state="translated">The default settings include: the &quot;GET&quot; request method, a preference of &lt;a href=&quot;httpclient.version#HTTP_2&quot;&gt;HTTP/2&lt;/a&gt;, a redirection policy of &lt;a href=&quot;httpclient.redirect#NEVER&quot;&gt;NEVER&lt;/a&gt;, the &lt;a href=&quot;../../../../java.base/java/net/proxyselector#getDefault()&quot;&gt;default proxy selector&lt;/a&gt;, and the &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslcontext#getDefault()&quot;&gt;default SSL context&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f13599ce0ac562247dd328308c38be74ab278fc7" translate="yes" xml:space="preserve">
          <source>The default size is 12 and the default style is PLAIN. If &lt;code&gt;str&lt;/code&gt; does not specify a valid size, the returned &lt;code&gt;Font&lt;/code&gt; has a size of 12. If &lt;code&gt;str&lt;/code&gt; does not specify a valid style, the returned Font has a style of PLAIN. If you do not specify a valid font name in the &lt;code&gt;str&lt;/code&gt; argument, this method will return a font with the family name &quot;Dialog&quot;. To determine what font family names are available on your system, use the &lt;a href=&quot;graphicsenvironment#getAvailableFontFamilyNames()&quot;&gt;&lt;code&gt;GraphicsEnvironment.getAvailableFontFamilyNames()&lt;/code&gt;&lt;/a&gt; method. If &lt;code&gt;str&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a new &lt;code&gt;Font&lt;/code&gt; is returned with the family name &quot;Dialog&quot;, a size of 12 and a PLAIN style.</source>
          <target state="translated">The default size is 12 and the default style is PLAIN. If &lt;code&gt;str&lt;/code&gt; does not specify a valid size, the returned &lt;code&gt;Font&lt;/code&gt; has a size of 12. If &lt;code&gt;str&lt;/code&gt; does not specify a valid style, the returned Font has a style of PLAIN. If you do not specify a valid font name in the &lt;code&gt;str&lt;/code&gt; argument, this method will return a font with the family name &quot;Dialog&quot;. To determine what font family names are available on your system, use the &lt;a href=&quot;graphicsenvironment#getAvailableFontFamilyNames()&quot;&gt; &lt;code&gt;GraphicsEnvironment.getAvailableFontFamilyNames()&lt;/code&gt; &lt;/a&gt; method. If &lt;code&gt;str&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; , a new &lt;code&gt;Font&lt;/code&gt; is returned with the family name &quot;Dialog&quot;, a size of 12 and a PLAIN style.</target>
        </trans-unit>
        <trans-unit id="ae0414ec402e9571af36b29805ce789add8f3443" translate="yes" xml:space="preserve">
          <source>The default size of the initial content buffer.</source>
          <target state="translated">The default size of the initial content buffer.</target>
        </trans-unit>
        <trans-unit id="c32637bb0ba9b4568fd20589a70ef634007051ac" translate="yes" xml:space="preserve">
          <source>The default size of the pipe's circular input buffer.</source>
          <target state="translated">파이프 원형 입력 버퍼의 기본 크기입니다.</target>
        </trans-unit>
        <trans-unit id="7c4bffeae366de13280f572187c14033ed72420a" translate="yes" xml:space="preserve">
          <source>The default socket factory implementation creates a direct socket connection to the remote host.</source>
          <target state="translated">The default socket factory implementation creates a direct socket connection to the remote host.</target>
        </trans-unit>
        <trans-unit id="5e184b7dc62018962316ac404f126e14455ec343" translate="yes" xml:space="preserve">
          <source>The default socket factory implementation creates server sockets that are bound to the wildcard address, which accepts requests from all network interfaces.</source>
          <target state="translated">The default socket factory implementation creates server sockets that are bound to the wildcard address, which accepts requests from all network interfaces.</target>
        </trans-unit>
        <trans-unit id="d77f1fa31e77f9b070d120a9b209e9eb9038c34e" translate="yes" xml:space="preserve">
          <source>The default start instance is defined by &lt;a href=&quot;../../../../java.base/java/util/gregoriancalendar&quot;&gt;&lt;code&gt;GregorianCalendar&lt;/code&gt;&lt;/a&gt;'s use of the start of the epoch: i.e., &lt;a href=&quot;../../../../java.base/java/util/calendar#YEAR&quot;&gt;&lt;code&gt;Calendar.YEAR&lt;/code&gt;&lt;/a&gt; = 1970, &lt;a href=&quot;../../../../java.base/java/util/calendar#MONTH&quot;&gt;&lt;code&gt;Calendar.MONTH&lt;/code&gt;&lt;/a&gt; = &lt;a href=&quot;../../../../java.base/java/util/calendar#JANUARY&quot;&gt;&lt;code&gt;Calendar.JANUARY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../../java.base/java/util/calendar#DATE&quot;&gt;&lt;code&gt;Calendar.DATE&lt;/code&gt;&lt;/a&gt; = 1, etc. This is important as there are variations in the Gregorian Calendar, e.g. leap years have different days in the month = &lt;a href=&quot;../../../../java.base/java/util/calendar#FEBRUARY&quot;&gt;&lt;code&gt;Calendar.FEBRUARY&lt;/code&gt;&lt;/a&gt; so the result of &lt;a href=&quot;duration#getDays()&quot;&gt;&lt;code&gt;Duration.getDays()&lt;/code&gt;&lt;/a&gt; can be influenced.</source>
          <target state="translated">The default start instance is defined by &lt;a href=&quot;../../../../java.base/java/util/gregoriancalendar&quot;&gt; &lt;code&gt;GregorianCalendar&lt;/code&gt; &lt;/a&gt;'s use of the start of the epoch: i.e., &lt;a href=&quot;../../../../java.base/java/util/calendar#YEAR&quot;&gt; &lt;code&gt;Calendar.YEAR&lt;/code&gt; &lt;/a&gt; = 1970, &lt;a href=&quot;../../../../java.base/java/util/calendar#MONTH&quot;&gt; &lt;code&gt;Calendar.MONTH&lt;/code&gt; &lt;/a&gt; = &lt;a href=&quot;../../../../java.base/java/util/calendar#JANUARY&quot;&gt; &lt;code&gt;Calendar.JANUARY&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../../../../java.base/java/util/calendar#DATE&quot;&gt; &lt;code&gt;Calendar.DATE&lt;/code&gt; &lt;/a&gt; = 1, etc. This is important as there are variations in the Gregorian Calendar, e.g. leap years have different days in the month = &lt;a href=&quot;../../../../java.base/java/util/calendar#FEBRUARY&quot;&gt; &lt;code&gt;Calendar.FEBRUARY&lt;/code&gt; &lt;/a&gt; so the result of &lt;a href=&quot;duration#getDays()&quot;&gt; &lt;code&gt;Duration.getDays()&lt;/code&gt; &lt;/a&gt; can be influenced.</target>
        </trans-unit>
        <trans-unit id="fa608c9dd46d5b9ff5e71ecb49c99a94f9e94db3" translate="yes" xml:space="preserve">
          <source>The default start instance is defined by &lt;a href=&quot;../../../../java.base/java/util/gregoriancalendar&quot;&gt;&lt;code&gt;GregorianCalendar&lt;/code&gt;&lt;/a&gt;'s use of the start of the epoch: i.e., &lt;a href=&quot;../../../../java.base/java/util/calendar#YEAR&quot;&gt;&lt;code&gt;Calendar.YEAR&lt;/code&gt;&lt;/a&gt; = 1970, &lt;a href=&quot;../../../../java.base/java/util/calendar#MONTH&quot;&gt;&lt;code&gt;Calendar.MONTH&lt;/code&gt;&lt;/a&gt; = &lt;a href=&quot;../../../../java.base/java/util/calendar#JANUARY&quot;&gt;&lt;code&gt;Calendar.JANUARY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../../java.base/java/util/calendar#DATE&quot;&gt;&lt;code&gt;Calendar.DATE&lt;/code&gt;&lt;/a&gt; = 1, etc. This is important as there are variations in the Gregorian Calendar, e.g. leap years have different days in the month = &lt;a href=&quot;../../../../java.base/java/util/calendar#FEBRUARY&quot;&gt;&lt;code&gt;Calendar.FEBRUARY&lt;/code&gt;&lt;/a&gt; so the result of &lt;a href=&quot;duration#getMonths()&quot;&gt;&lt;code&gt;Duration.getMonths()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;duration#getDays()&quot;&gt;&lt;code&gt;Duration.getDays()&lt;/code&gt;&lt;/a&gt; can be influenced.</source>
          <target state="translated">The default start instance is defined by &lt;a href=&quot;../../../../java.base/java/util/gregoriancalendar&quot;&gt; &lt;code&gt;GregorianCalendar&lt;/code&gt; &lt;/a&gt;'s use of the start of the epoch: i.e., &lt;a href=&quot;../../../../java.base/java/util/calendar#YEAR&quot;&gt; &lt;code&gt;Calendar.YEAR&lt;/code&gt; &lt;/a&gt; = 1970, &lt;a href=&quot;../../../../java.base/java/util/calendar#MONTH&quot;&gt; &lt;code&gt;Calendar.MONTH&lt;/code&gt; &lt;/a&gt; = &lt;a href=&quot;../../../../java.base/java/util/calendar#JANUARY&quot;&gt; &lt;code&gt;Calendar.JANUARY&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../../../../java.base/java/util/calendar#DATE&quot;&gt; &lt;code&gt;Calendar.DATE&lt;/code&gt; &lt;/a&gt; = 1, etc. This is important as there are variations in the Gregorian Calendar, e.g. leap years have different days in the month = &lt;a href=&quot;../../../../java.base/java/util/calendar#FEBRUARY&quot;&gt; &lt;code&gt;Calendar.FEBRUARY&lt;/code&gt; &lt;/a&gt; so the result of &lt;a href=&quot;duration#getMonths()&quot;&gt; &lt;code&gt;Duration.getMonths()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;duration#getDays()&quot;&gt; &lt;code&gt;Duration.getDays()&lt;/code&gt; &lt;/a&gt; can be influenced.</target>
        </trans-unit>
        <trans-unit id="d117c6340dc41202266e9187c4c8e4c92a0acc56" translate="yes" xml:space="preserve">
          <source>The default start instance is defined by &lt;a href=&quot;../../../../java.base/java/util/gregoriancalendar&quot;&gt;&lt;code&gt;GregorianCalendar&lt;/code&gt;&lt;/a&gt;'s use of the start of the epoch: i.e., &lt;a href=&quot;../../../../java.base/java/util/calendar#YEAR&quot;&gt;&lt;code&gt;Calendar.YEAR&lt;/code&gt;&lt;/a&gt; = 1970, &lt;a href=&quot;../../../../java.base/java/util/calendar#MONTH&quot;&gt;&lt;code&gt;Calendar.MONTH&lt;/code&gt;&lt;/a&gt; = &lt;a href=&quot;../../../../java.base/java/util/calendar#JANUARY&quot;&gt;&lt;code&gt;Calendar.JANUARY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../../java.base/java/util/calendar#DATE&quot;&gt;&lt;code&gt;Calendar.DATE&lt;/code&gt;&lt;/a&gt; = 1, etc. This is important as there are variations in the Gregorian Calendar, e.g. leap years have different days in the month = &lt;a href=&quot;../../../../java.base/java/util/calendar#FEBRUARY&quot;&gt;&lt;code&gt;Calendar.FEBRUARY&lt;/code&gt;&lt;/a&gt; so the result of &lt;a href=&quot;duration#getMonths()&quot;&gt;&lt;code&gt;Duration.getMonths()&lt;/code&gt;&lt;/a&gt; can be influenced.</source>
          <target state="translated">The default start instance is defined by &lt;a href=&quot;../../../../java.base/java/util/gregoriancalendar&quot;&gt; &lt;code&gt;GregorianCalendar&lt;/code&gt; &lt;/a&gt;'s use of the start of the epoch: i.e., &lt;a href=&quot;../../../../java.base/java/util/calendar#YEAR&quot;&gt; &lt;code&gt;Calendar.YEAR&lt;/code&gt; &lt;/a&gt; = 1970, &lt;a href=&quot;../../../../java.base/java/util/calendar#MONTH&quot;&gt; &lt;code&gt;Calendar.MONTH&lt;/code&gt; &lt;/a&gt; = &lt;a href=&quot;../../../../java.base/java/util/calendar#JANUARY&quot;&gt; &lt;code&gt;Calendar.JANUARY&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../../../../java.base/java/util/calendar#DATE&quot;&gt; &lt;code&gt;Calendar.DATE&lt;/code&gt; &lt;/a&gt; = 1, etc. This is important as there are variations in the Gregorian Calendar, e.g. leap years have different days in the month = &lt;a href=&quot;../../../../java.base/java/util/calendar#FEBRUARY&quot;&gt; &lt;code&gt;Calendar.FEBRUARY&lt;/code&gt; &lt;/a&gt; so the result of &lt;a href=&quot;duration#getMonths()&quot;&gt; &lt;code&gt;Duration.getMonths()&lt;/code&gt; &lt;/a&gt; can be influenced.</target>
        </trans-unit>
        <trans-unit id="113957ad271a9b5c1e40fbcfa11f18e16ce344d3" translate="yes" xml:space="preserve">
          <source>The default system class loader is an implementation-dependent instance of this class.</source>
          <target state="translated">기본 시스템 클래스 로더는이 클래스의 구현 종속 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="fc848cc56578ffe76978e1566c1eb0218431921b" translate="yes" xml:space="preserve">
          <source>The default theme for the &lt;code&gt;MetalLookAndFeel&lt;/code&gt;.</source>
          <target state="translated">The default theme for the &lt;code&gt;MetalLookAndFeel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1815c366a45a7b90d8200ab88d01a0898da55c3b" translate="yes" xml:space="preserve">
          <source>The default value can be expected to be adequate for most purposes, so clients should rarely need to specify a value for this hint unless they have concrete information as to an appropriate value. A higher value does not mean a higher contrast, in fact the opposite is true. The correction is applied in a similar manner to a gamma adjustment for non-linear perceptual luminance response of display systems, but does not indicate a full correction for this.</source>
          <target state="translated">The default value can be expected to be adequate for most purposes, so clients should rarely need to specify a value for this hint unless they have concrete information as to an appropriate value. A higher value does not mean a higher contrast, in fact the opposite is true. The correction is applied in a similar manner to a gamma adjustment for non-linear perceptual luminance response of display systems, but does not indicate a full correction for this.</target>
        </trans-unit>
        <trans-unit id="a8b05e1e858df06ac67c65d5405fc793b170340e" translate="yes" xml:space="preserve">
          <source>The default value comes from followRedirects, which defaults to true.</source>
          <target state="translated">기본값은 followRedirects에서 가져 오며 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="5ec840084c77c75fd6513a1807b849f3bc7dd998" translate="yes" xml:space="preserve">
          <source>The default value for the &lt;code&gt;command&lt;/code&gt; property is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">The default value for the &lt;code&gt;command&lt;/code&gt; property is &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e518b624add89d75b6c3f3b203b751145bb030cb" translate="yes" xml:space="preserve">
          <source>The default value for this array is implementation-dependent, e.g. Sun implementation initially sets to {&quot;sun.beans.editors&quot;}.</source>
          <target state="translated">이 어레이의 기본값은 구현에 따라 다릅니다. 예를 들어 Sun 구현은 초기에 { &quot;sun.beans.editors&quot;}로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="09a35b1faf6523a82be711f2e943f691612315ef" translate="yes" xml:space="preserve">
          <source>The default value for this is false, but some &lt;code&gt;JComponent&lt;/code&gt; subclasses that are implemented as a number of &lt;code&gt;JComponent&lt;/code&gt;s may set this to true.</source>
          <target state="translated">The default value for this is false, but some &lt;code&gt;JComponent&lt;/code&gt; subclasses that are implemented as a number of &lt;code&gt;JComponent&lt;/code&gt; s may set this to true.</target>
        </trans-unit>
        <trans-unit id="750c418c522ac704dd457b72492d4e27261a09ed" translate="yes" xml:space="preserve">
          <source>The default value is 0.</source>
          <target state="translated">기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="ee5712fc0490cd49787a574b8c7bdcf4785b996f" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="15b3645abcf51264cf05d57ca562ff0579a3ad2e" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;DISPOSE_ON_CLOSE&lt;/code&gt;. Before performing the specified close operation, the internal frame fires an &lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; event.</source>
          <target state="translated">The default value is &lt;code&gt;DISPOSE_ON_CLOSE&lt;/code&gt; . Before performing the specified close operation, the internal frame fires an &lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; event.</target>
        </trans-unit>
        <trans-unit id="287ee58825b90055769d6fb7d61c0ac1ce7b17b4" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;NONE&lt;/code&gt;.</source>
          <target state="translated">The default value is &lt;code&gt;NONE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0c4cf2dcac42b762e04d1a6170cf3886cd9547a" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;RELATIVE&lt;/code&gt;. &lt;code&gt;gridx&lt;/code&gt; should be a non-negative value.</source>
          <target state="translated">The default value is &lt;code&gt;RELATIVE&lt;/code&gt; . &lt;code&gt;gridx&lt;/code&gt; should be a non-negative value.</target>
        </trans-unit>
        <trans-unit id="0e36ebedf6f11bff91fee1a84794a11b9fd50232" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;RELATIVE&lt;/code&gt;. &lt;code&gt;gridy&lt;/code&gt; should be a non-negative value.</source>
          <target state="translated">The default value is &lt;code&gt;RELATIVE&lt;/code&gt; . &lt;code&gt;gridy&lt;/code&gt; should be a non-negative value.</target>
        </trans-unit>
        <trans-unit id="6d1dcc6b3a394539acf783a764b41f856bcb2ec9" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e94d031d4616d173725f3b8d50d9979279147ffb" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;new Insets(0, 0, 0, 0)&lt;/code&gt;.</source>
          <target state="translated">The default value is &lt;code&gt;new Insets(0, 0, 0, 0)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af976fa886c4f7b664fc57e291778fd6b49e246c" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="66015692d8993abe529ec03cca1e0fbcd60a95e2" translate="yes" xml:space="preserve">
          <source>The default value of &lt;a href=&quot;#defaultBufferSize()&quot;&gt;&lt;code&gt;defaultBufferSize()&lt;/code&gt;&lt;/a&gt; may provide a useful starting point for choosing request sizes and capacities in Flow components based on expected rates, resources, and usages. Or, when flow control is never needed, a subscriber may initially request an effectively unbounded number of items, as in:</source>
          <target state="translated">The default value of &lt;a href=&quot;#defaultBufferSize()&quot;&gt; &lt;code&gt;defaultBufferSize()&lt;/code&gt; &lt;/a&gt; may provide a useful starting point for choosing request sizes and capacities in Flow components based on expected rates, resources, and usages. Or, when flow control is never needed, a subscriber may initially request an effectively unbounded number of items, as in:</target>
        </trans-unit>
        <trans-unit id="3f094f4952b297073beb804e79b543256e80b1ee" translate="yes" xml:space="preserve">
          <source>The default value of the &lt;code&gt;autoScrolls&lt;/code&gt; property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">The default value of the &lt;code&gt;autoScrolls&lt;/code&gt; property is &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="350c391cedfea51b00d55b2be6cd8e0742198b0a" translate="yes" xml:space="preserve">
          <source>The default value of the &lt;code&gt;java.rmi.server.ignoreStubClasses&lt;/code&gt; property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">The default value of the &lt;code&gt;java.rmi.server.ignoreStubClasses&lt;/code&gt; property is &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4496767bd1da5350a447fcd5919911c875fda95a" translate="yes" xml:space="preserve">
          <source>The default value of the &lt;code&gt;jdk.io.permissionsUseCanonicalPath&lt;/code&gt; system property is &lt;code&gt;false&lt;/code&gt; in this implementation.</source>
          <target state="translated">The default value of the &lt;code&gt;jdk.io.permissionsUseCanonicalPath&lt;/code&gt; system property is &lt;code&gt;false&lt;/code&gt; in this implementation.</target>
        </trans-unit>
        <trans-unit id="89d1a992846527a1b81eead2d3524c3954a2bdda" translate="yes" xml:space="preserve">
          <source>The default value of the active on/off flag is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">활성화 된 on / off 플래그의 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e4f434b29b06a94502c33c2afdd2c1eade4cde38" translate="yes" xml:space="preserve">
          <source>The default value of the granularity period is 10 seconds.</source>
          <target state="translated">세분성 기간의 기본값은 10 초입니다.</target>
        </trans-unit>
        <trans-unit id="a533f343e61fe6cce66d559689bdc3e773dbc87a" translate="yes" xml:space="preserve">
          <source>The default value of the past notifications sending on/off flag is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">과거 / 이전 알림 전송 켜기 / 끄기 플래그의 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="43ea81b0f5e78d14e99345bd7715e17f32bfb853" translate="yes" xml:space="preserve">
          <source>The default value of this field is &lt;code&gt;0&lt;/code&gt;, indicating that the fetching must always occur.</source>
          <target state="translated">이 필드의 기본값은 &lt;code&gt;0&lt;/code&gt; 이며 페치가 항상 발생해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f63fcbd8b6f3e0cf0cf08fb470d09eca3f2f05b5" translate="yes" xml:space="preserve">
          <source>The default value of this field is &lt;code&gt;0&lt;/code&gt;. &lt;code&gt;weightx&lt;/code&gt; should be a non-negative value.</source>
          <target state="translated">The default value of this field is &lt;code&gt;0&lt;/code&gt; . &lt;code&gt;weightx&lt;/code&gt; should be a non-negative value.</target>
        </trans-unit>
        <trans-unit id="e9bc8118df0af0144adb0c9bb1e1d5513ff3c714" translate="yes" xml:space="preserve">
          <source>The default value of this field is &lt;code&gt;0&lt;/code&gt;. &lt;code&gt;weighty&lt;/code&gt; should be a non-negative value.</source>
          <target state="translated">The default value of this field is &lt;code&gt;0&lt;/code&gt; . &lt;code&gt;weighty&lt;/code&gt; should be a non-negative value.</target>
        </trans-unit>
        <trans-unit id="34407862fb456a39cfdd224ab9faf20b775a0cee" translate="yes" xml:space="preserve">
          <source>The default value of this field is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 필드의 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e314ce2a42ca129dfaf2cef8414e47e543b7cfb8" translate="yes" xml:space="preserve">
          <source>The default value of this field is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 필드의 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cfe18a45e7077719a8c7d4cc233b8e895234a1f9" translate="yes" xml:space="preserve">
          <source>The default value of this property is 4 pixels.</source>
          <target state="translated">The default value of this property is 4 pixels.</target>
        </trans-unit>
        <trans-unit id="2bdd29c99c3ea182c898a618909ba4bb13bfd588" translate="yes" xml:space="preserve">
          <source>The default value of this property is &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">The default value of this property is &lt;code&gt;-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdb4c48782326e78462fb20e471da5f8c4426637" translate="yes" xml:space="preserve">
          <source>The default value of this property is &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">The default value of this property is &lt;code&gt;8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cef4f83e7c16bd422a58c076fe8d1c4c203a4b5e" translate="yes" xml:space="preserve">
          <source>The default value of this property is &lt;code&gt;JFormattedTextField.COMMIT_OR_REVERT&lt;/code&gt;.</source>
          <target state="translated">The default value of this property is &lt;code&gt;JFormattedTextField.COMMIT_OR_REVERT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="248b6b6ab695b09fa81bf03031c7c61df8927d63" translate="yes" xml:space="preserve">
          <source>The default value of this property is &lt;code&gt;VERTICAL&lt;/code&gt;.</source>
          <target state="translated">The default value of this property is &lt;code&gt;VERTICAL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd1ce8fc6274535d36116495a0bdcafbb5e747d2" translate="yes" xml:space="preserve">
          <source>The default value of this property is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 프로퍼티의 디폴트 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="269f0d9faa21064772ed529f393207509b43a889" translate="yes" xml:space="preserve">
          <source>The default value of this property is CENTER.</source>
          <target state="translated">The default value of this property is CENTER.</target>
        </trans-unit>
        <trans-unit id="d54a0c0f191481cf8cf32ca9cbb0288650443f14" translate="yes" xml:space="preserve">
          <source>The default value of this property is computed by the look and feel implementation.</source>
          <target state="translated">The default value of this property is computed by the look and feel implementation.</target>
        </trans-unit>
        <trans-unit id="672c6319a9250a468d1ffe31d9ce9d61aa593bc4" translate="yes" xml:space="preserve">
          <source>The default value of this property is defined by the look and feel implementation.</source>
          <target state="translated">The default value of this property is defined by the look and feel implementation.</target>
        </trans-unit>
        <trans-unit id="d66b71af181b9b1cf802dc1cd2049c7670c2a075" translate="yes" xml:space="preserve">
          <source>The default value of this property is false for &lt;code&gt;JComponent&lt;/code&gt;. However, the default value for this property on most standard &lt;code&gt;JComponent&lt;/code&gt; subclasses (such as &lt;code&gt;JButton&lt;/code&gt; and &lt;code&gt;JTree&lt;/code&gt;) is look-and-feel dependent.</source>
          <target state="translated">The default value of this property is false for &lt;code&gt;JComponent&lt;/code&gt; . However, the default value for this property on most standard &lt;code&gt;JComponent&lt;/code&gt; subclasses (such as &lt;code&gt;JButton&lt;/code&gt; and &lt;code&gt;JTree&lt;/code&gt; ) is look-and-feel dependent.</target>
        </trans-unit>
        <trans-unit id="655d83313947205d613339e865cb0ae654623aa1" translate="yes" xml:space="preserve">
          <source>The default value of this property is null.</source>
          <target state="translated">The default value of this property is null.</target>
        </trans-unit>
        <trans-unit id="67e271f1d4aa247f9f365b0e840c3996ded0f672" translate="yes" xml:space="preserve">
          <source>The default value of this property is provided by the &lt;code&gt;ListUI&lt;/code&gt; delegate, i.e. by the look and feel implementation.</source>
          <target state="translated">The default value of this property is provided by the &lt;code&gt;ListUI&lt;/code&gt; delegate, i.e. by the look and feel implementation.</target>
        </trans-unit>
        <trans-unit id="972b6959cc09449e8ac91ab30aa149e60c64d106" translate="yes" xml:space="preserve">
          <source>The default value of this socket option is &lt;code&gt;FALSE&lt;/code&gt;. The socket option should only be enabled in cases where it is known that the coalescing impacts performance. The socket option may be enabled at any time. In other words, the Nagle Algorithm can be disabled. Once the option is enabled, it is system dependent whether it can be subsequently disabled. If it cannot, then invoking the &lt;code&gt;setOption&lt;/code&gt; method to disable the option has no effect.</source>
          <target state="translated">이 소켓 옵션의 기본값은 &lt;code&gt;FALSE&lt;/code&gt; 입니다. 통합 옵션이 성능에 영향을 미치는 것으로 알려진 경우에만 소켓 옵션을 사용해야합니다. 소켓 옵션은 언제든지 활성화 될 수 있습니다. 즉, Nagle 알고리즘을 비활성화 할 수 있습니다. 옵션이 활성화되면 나중에 비활성화 할 수 있는지 여부는 시스템에 따라 다릅니다. &lt;code&gt;setOption&lt;/code&gt; 하면, setOption 메소드를 호출 하여 옵션을 비활성화 해도 아무런 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="f263e9163c5170e98fc380a13f245f08fed92fcf" translate="yes" xml:space="preserve">
          <source>The default value of this variable is the value of the URL argument in the &lt;code&gt;URLConnection&lt;/code&gt; constructor.</source>
          <target state="translated">이 변수의 기본값은 &lt;code&gt;URLConnection&lt;/code&gt; 생성자 의 URL 인수 값입니다 .</target>
        </trans-unit>
        <trans-unit id="64163831794fd6f4916973cdb1815cb538fc2cdc" translate="yes" xml:space="preserve">
          <source>The default value, if not set by the UI, is &lt;code&gt;JTabbedPane.WRAP_TAB_LAYOUT&lt;/code&gt;.</source>
          <target state="translated">The default value, if not set by the UI, is &lt;code&gt;JTabbedPane.WRAP_TAB_LAYOUT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0351c35d10840cf975099961a8208b781f05ca43" translate="yes" xml:space="preserve">
          <source>The default value, if not set, is &lt;code&gt;SwingConstants.TOP&lt;/code&gt;.</source>
          <target state="translated">The default value, if not set, is &lt;code&gt;SwingConstants.TOP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="175f9e59ae6d8d45a5ecbc8d3bf95ccec9b46335" translate="yes" xml:space="preserve">
          <source>The default value.</source>
          <target state="translated">기본값입니다.</target>
        </trans-unit>
        <trans-unit id="2e41a02212a6983a97c5d2784f949cc6515db3fa" translate="yes" xml:space="preserve">
          <source>The default values are used for locale and time zone if these parameters haven't been given explicitly.</source>
          <target state="translated">이러한 매개 변수가 명시 적으로 지정되지 않은 경우 기본값은 로케일 및 시간대에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cabb83a715f2c847241f9131bfe25944bbc0e0df" translate="yes" xml:space="preserve">
          <source>The default values for a Component's focus traversal keys are implementation-dependent. Sun recommends that all implementations for a particular native platform use the same default values. The recommendations for Windows and Unix are listed below. These recommendations are used in the Sun AWT implementations.</source>
          <target state="translated">The default values for a Component's focus traversal keys are implementation-dependent. Sun recommends that all implementations for a particular native platform use the same default values. The recommendations for Windows and Unix are listed below. These recommendations are used in the Sun AWT implementations.</target>
        </trans-unit>
        <trans-unit id="f013b2ebd3abc1b083fb68d7821a18f8d34932f3" translate="yes" xml:space="preserve">
          <source>The default values for a Container's focus traversal keys are implementation-dependent. Sun recommends that all implementations for a particular native platform use the same default values. The recommendations for Windows and Unix are listed below. These recommendations are used in the Sun AWT implementations.</source>
          <target state="translated">The default values for a Container's focus traversal keys are implementation-dependent. Sun recommends that all implementations for a particular native platform use the same default values. The recommendations for Windows and Unix are listed below. These recommendations are used in the Sun AWT implementations.</target>
        </trans-unit>
        <trans-unit id="a0d60e3b0b78d36a301e251a9e6cbb8be15f912a" translate="yes" xml:space="preserve">
          <source>The default values for the &lt;code&gt;Graphics2D&lt;/code&gt; rendering attributes are:</source>
          <target state="translated">The default values for the &lt;code&gt;Graphics2D&lt;/code&gt; rendering attributes are:</target>
        </trans-unit>
        <trans-unit id="c99e343fcee52bbe2ff75a6da717d1c2247d596c" translate="yes" xml:space="preserve">
          <source>The default values for the default focus traversal keys are implementation-dependent. Sun recommends that all implementations for a particular native platform use the same default values. The recommendations for Windows and Unix are listed below. These recommendations are used in the Sun AWT implementations.</source>
          <target state="translated">The default values for the default focus traversal keys are implementation-dependent. Sun recommends that all implementations for a particular native platform use the same default values. The recommendations for Windows and Unix are listed below. These recommendations are used in the Sun AWT implementations.</target>
        </trans-unit>
        <trans-unit id="2d7fd74472dbd6f49943088087869369b8a73e16" translate="yes" xml:space="preserve">
          <source>The default values of security properties are read from an implementation-specific location, which is typically the properties file &lt;code&gt;conf/security/java.security&lt;/code&gt; in the Java installation directory.</source>
          <target state="translated">The default values of security properties are read from an implementation-specific location, which is typically the properties file &lt;code&gt;conf/security/java.security&lt;/code&gt; in the Java installation directory.</target>
        </trans-unit>
        <trans-unit id="a8d6243a4db1d53f508b92879981b4ab37f22d8e" translate="yes" xml:space="preserve">
          <source>The default values of security properties are read from an implementation-specific location, which is typically the properties file &lt;code&gt;lib/security/java.security&lt;/code&gt; in the Java installation directory.</source>
          <target state="translated">보안 특성의 기본값은 구현 별 위치에서 읽습니다. 일반적으로 Java 설치 디렉토리 의 특성 파일 &lt;code&gt;lib/security/java.security&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9798e75b90d25d8bdeb864b403b4a5a0573f42e0" translate="yes" xml:space="preserve">
          <source>The default varies based on the look and feel; to enable it set the client &lt;a href=&quot;jcomponent#putClientProperty(java.lang.Object,java.lang.Object)&quot;&gt;&lt;code&gt;property&lt;/code&gt;&lt;/a&gt; with this name to &lt;code&gt;Boolean.TRUE&lt;/code&gt;.</source>
          <target state="translated">The default varies based on the look and feel; to enable it set the client &lt;a href=&quot;jcomponent#putClientProperty(java.lang.Object,java.lang.Object)&quot;&gt; &lt;code&gt;property&lt;/code&gt; &lt;/a&gt; with this name to &lt;code&gt;Boolean.TRUE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c56290392bb498e2eacf1cba211686e7a5e24949" translate="yes" xml:space="preserve">
          <source>The default view of the models are provided as a hierarchy of View implementations, so one can easily customize how a particular element is displayed or add capabilities for new kinds of elements by providing new View implementations. The default set of views are provided by the &lt;code&gt;HTMLFactory&lt;/code&gt; class. This can be easily changed by subclassing or replacing the HTMLFactory and reimplementing the getViewFactory method to return the alternative factory.</source>
          <target state="translated">The default view of the models are provided as a hierarchy of View implementations, so one can easily customize how a particular element is displayed or add capabilities for new kinds of elements by providing new View implementations. The default set of views are provided by the &lt;code&gt;HTMLFactory&lt;/code&gt; class. This can be easily changed by subclassing or replacing the HTMLFactory and reimplementing the getViewFactory method to return the alternative factory.</target>
        </trans-unit>
        <trans-unit id="a61917a3186488cd9a2bac20f1fa15923bedac55" translate="yes" xml:space="preserve">
          <source>The defaults are:</source>
          <target state="translated">기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dc4cbf58d1d741a7153cfd21ee656b97b4893b35" translate="yes" xml:space="preserve">
          <source>The defaults property &lt;code&gt;swing.boldMetal&lt;/code&gt;, if set, takes precedence over the system property of the same name. After setting this defaults property you need to re-install &lt;code&gt;MetalLookAndFeel&lt;/code&gt;, as well as update the UI of any previously created widgets. Otherwise the results are undefined. The following illustrates how to do this:</source>
          <target state="translated">The defaults property &lt;code&gt;swing.boldMetal&lt;/code&gt; , if set, takes precedence over the system property of the same name. After setting this defaults property you need to re-install &lt;code&gt;MetalLookAndFeel&lt;/code&gt; , as well as update the UI of any previously created widgets. Otherwise the results are undefined. The following illustrates how to do this:</target>
        </trans-unit>
        <trans-unit id="40ac4b8e3f813351f8ea9005cdbeffd201d69d04" translate="yes" xml:space="preserve">
          <source>The definition of &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt; is the same for all calendar systems, thus it can be used for conversion.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 의 정의는 모든 캘린더 시스템에서 동일하므로 변환에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47edf3f6fa1075a9c008922332c88c6b6bb5192b" translate="yes" xml:space="preserve">
          <source>The definition of how to make a dash pattern by alternating between opaque and transparent sections.</source>
          <target state="translated">The definition of how to make a dash pattern by alternating between opaque and transparent sections.</target>
        </trans-unit>
        <trans-unit id="3010c51707d7e960a2ec3d3178052afe1b8fa1c1" translate="yes" xml:space="preserve">
          <source>The definition of this call depends on &lt;a href=&quot;#suspend()&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt;, which is deprecated.</source>
          <target state="translated">The definition of this call depends on &lt;a href=&quot;#suspend()&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt;, which is deprecated.</target>
        </trans-unit>
        <trans-unit id="704acf0fd8dd43ee895ebf2ff41c2cb48606f12c" translate="yes" xml:space="preserve">
          <source>The definition of this call depends on &lt;a href=&quot;#suspend()&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt;, which is deprecated. Further, the behavior of this call was never specified.</source>
          <target state="translated">The definition of this call depends on &lt;a href=&quot;#suspend()&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt;, which is deprecated. Further, the behavior of this call was never specified.</target>
        </trans-unit>
        <trans-unit id="024178cac0f3796621e09924ef4decab3173d861" translate="yes" xml:space="preserve">
          <source>The definition of this call depends on &lt;a href=&quot;#suspend()&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt;, which is deprecated. Further, the results of this call were never well-defined. This method is subject to removal in a future version of Java SE.</source>
          <target state="translated">The definition of this call depends on &lt;a href=&quot;#suspend()&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt;, which is deprecated. Further, the results of this call were never well-defined. This method is subject to removal in a future version of Java SE.</target>
        </trans-unit>
        <trans-unit id="2f8dc4f0ebd1242890b338bed21453ffb02b4c53" translate="yes" xml:space="preserve">
          <source>The definitions are the same in the two cases, except that with the MXBean, &lt;code&gt;MemoryUsage&lt;/code&gt; no longer needs to be marked &lt;code&gt;Serializable&lt;/code&gt; (though it can be). On the other hand, we have added a &lt;a href=&quot;constructorparameters&quot;&gt;&lt;code&gt;@ConstructorParameters&lt;/code&gt;&lt;/a&gt; annotation to link the constructor parameters to the corresponding getters. We will see more about this below.</source>
          <target state="translated">The definitions are the same in the two cases, except that with the MXBean, &lt;code&gt;MemoryUsage&lt;/code&gt; no longer needs to be marked &lt;code&gt;Serializable&lt;/code&gt; (though it can be). On the other hand, we have added a &lt;a href=&quot;constructorparameters&quot;&gt; &lt;code&gt;@ConstructorParameters&lt;/code&gt; &lt;/a&gt; annotation to link the constructor parameters to the corresponding getters. We will see more about this below.</target>
        </trans-unit>
        <trans-unit id="cc53d844d5dcb0b2342d79cd2a2b18ae8c5916b0" translate="yes" xml:space="preserve">
          <source>The definitions are the same in the two cases, except that with the MXBean, &lt;code&gt;MemoryUsage&lt;/code&gt; no longer needs to be marked &lt;code&gt;Serializable&lt;/code&gt; (though it can be). On the other hand, we have added a &lt;code&gt;@ConstructorProperties&lt;/code&gt; annotation to link the constructor parameters to the corresponding getters. We will see more about this below.</source>
          <target state="translated">MXBean의 경우 &lt;code&gt;MemoryUsage&lt;/code&gt; 를 더 이상 &lt;code&gt;Serializable&lt;/code&gt; 로 표시 할 필요가 없다는 점을 제외하고 두 가지 경우 모두 정의가 동일합니다 . 반면에 생성자 파라미터를 해당 게터에 연결하기 위해 &lt;code&gt;@ConstructorProperties&lt;/code&gt; 주석을 추가했습니다 . 우리는 이것에 대해 아래에서 더 볼 것입니다.</target>
        </trans-unit>
        <trans-unit id="73cfcd4a34d9dfab3171fed08a7ecf9c472968d8" translate="yes" xml:space="preserve">
          <source>The definitions of the data types referenced by the field definitions may be found in the &lt;a href=&quot;tifftag&quot;&gt;&lt;code&gt;TIFFTag&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">The definitions of the data types referenced by the field definitions may be found in the &lt;a href=&quot;tifftag&quot;&gt; &lt;code&gt;TIFFTag&lt;/code&gt; &lt;/a&gt; class.</target>
        </trans-unit>
        <trans-unit id="2e7b3c7b50f30ab95b1f9b75e5ea9e1a831e4144" translate="yes" xml:space="preserve">
          <source>The definitions of the rule elements is as follows:</source>
          <target state="translated">규칙 요소의 정의는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c901310db86132ac5a2d60bead838f92de2f9706" translate="yes" xml:space="preserve">
          <source>The deflation hint of a ZIP or JAR element indicates whether the element was deflated or stored directly.</source>
          <target state="translated">ZIP 또는 JAR 요소의 수축 힌트는 요소가 수축되었는지 또는 직접 저장되었는지를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3467a6619cc41595188d0a0e5221f37b84b7f994" translate="yes" xml:space="preserve">
          <source>The degree of completion is expressed as a percentage varying from &lt;code&gt;0.0F&lt;/code&gt; to &lt;code&gt;100.0F&lt;/code&gt;. The percentage should ideally be calculated in terms of the remaining time to completion, but it is usually more practical to use a more well-defined metric such as pixels decoded or portion of input stream consumed. In any case, a sequence of calls to this method during a given read operation should supply a monotonically increasing sequence of percentage values. It is not necessary to supply the exact values &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;100&lt;/code&gt;, as these may be inferred by the callee from other methods.</source>
          <target state="translated">완성의 정도의 변화 비율로 표현된다 &lt;code&gt;0.0F&lt;/code&gt; 에 &lt;code&gt;100.0F&lt;/code&gt; . 백분율은 남은 완료 시간 측면에서 이상적으로 계산해야하지만 일반적으로 디코딩 된 픽셀 또는 소비 된 입력 스트림의 일부와 같이보다 잘 정의 된 메트릭을 사용하는 것이 더 실용적입니다. 어쨌든, 주어진 읽기 작업 동안이 메소드에 대한 일련의 호출은 백분율 값의 단조 증가 시퀀스를 제공해야합니다. 다른 값들 로부터 수신자에 의해 추론 될 수 있기 때문에 정확한 값들 &lt;code&gt;0&lt;/code&gt; 및 &lt;code&gt;100&lt;/code&gt; 을 제공 할 필요는 없다 .</target>
        </trans-unit>
        <trans-unit id="2ffdf631cc74ed2ac1117237bc13b5422364570f" translate="yes" xml:space="preserve">
          <source>The degree of completion is expressed as an index indicating which image is being written, and a percentage varying from &lt;code&gt;0.0F&lt;/code&gt; to &lt;code&gt;100.0F&lt;/code&gt; indicating how much of the current image has been output. The percentage should ideally be calculated in terms of the remaining time to completion, but it is usually more practical to use a more well-defined metric such as pixels decoded or portion of input stream consumed. In any case, a sequence of calls to this method during a given read operation should supply a monotonically increasing sequence of percentage values. It is not necessary to supply the exact values &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;100&lt;/code&gt;, as these may be inferred by the callee from other methods.</source>
          <target state="translated">완성도가 기록되고있는 화상을 나타내는 인덱스로부터 변화 비율로 표현된다 &lt;code&gt;0.0F&lt;/code&gt; 에 &lt;code&gt;100.0F&lt;/code&gt; 출력 된 방법과 현재 영상의 대부분 나타낸다. 백분율은 남은 완료 시간 측면에서 이상적으로 계산해야하지만 일반적으로 디코딩 된 픽셀 또는 소비 된 입력 스트림의 일부와 같이보다 명확하게 정의 된 메트릭을 사용하는 것이 더 실용적입니다. 어쨌든, 주어진 읽기 작업 동안이 메소드에 대한 일련의 호출은 백분율 값의 단조 증가 시퀀스를 제공해야합니다. 다른 값들 로부터 수신자에 의해 추론 될 수 있기 때문에 정확한 값들 &lt;code&gt;0&lt;/code&gt; 및 &lt;code&gt;100&lt;/code&gt; 을 제공 할 필요는 없다 .</target>
        </trans-unit>
        <trans-unit id="c772188bfe420ca2a94f980167fd6888a8fd36f1" translate="yes" xml:space="preserve">
          <source>The delegate class which handles all methods sent from the &lt;code&gt;CellEditor&lt;/code&gt;.</source>
          <target state="translated">The delegate class which handles all methods sent from the &lt;code&gt;CellEditor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0863b68cf4a8d657c32f9061a4c35364b6ae9aff" translate="yes" xml:space="preserve">
          <source>The delivery of a push promise response is not coordinated with the delivery of the response to the initiating client-sent request. However, when the response body for the initiating client-sent request has been fully received, the map is guaranteed to be fully populated, that is, no more entries will be added. The individual &lt;code&gt;CompletableFutures&lt;/code&gt; contained in the map may or may not already be completed at this point.</source>
          <target state="translated">The delivery of a push promise response is not coordinated with the delivery of the response to the initiating client-sent request. However, when the response body for the initiating client-sent request has been fully received, the map is guaranteed to be fully populated, that is, no more entries will be added. The individual &lt;code&gt;CompletableFutures&lt;/code&gt; contained in the map may or may not already be completed at this point.</target>
        </trans-unit>
        <trans-unit id="4f08b640afc6ccd33e92b08c3ee4c6dbb7518d96" translate="yes" xml:space="preserve">
          <source>The dependence causes any module which depends on the</source>
          <target state="translated">The dependence causes any module which depends on the</target>
        </trans-unit>
        <trans-unit id="1cb62a516e1998c900e57b6b66006b7885984a15" translate="yes" xml:space="preserve">
          <source>The dependence is mandatory in the static phase, during compilation, but is optional in the dynamic phase, during execution.</source>
          <target state="translated">The dependence is mandatory in the static phase, during compilation, but is optional in the dynamic phase, during execution.</target>
        </trans-unit>
        <trans-unit id="9918af7a41a23848eb2587a78238df1070a3a752" translate="yes" xml:space="preserve">
          <source>The dependence was implicitly declared in the source of the module declaration.</source>
          <target state="translated">The dependence was implicitly declared in the source of the module declaration.</target>
        </trans-unit>
        <trans-unit id="9bf5ea842081f0f1418511b4472709410da60eeb" translate="yes" xml:space="preserve">
          <source>The dependence was not explicitly or implicitly declared in the source of the module declaration.</source>
          <target state="translated">The dependence was not explicitly or implicitly declared in the source of the module declaration.</target>
        </trans-unit>
        <trans-unit id="4d23dfab7c2ada0487dfd6e3bf3bb53a0d9a17be" translate="yes" xml:space="preserve">
          <source>The derived color</source>
          <target state="translated">The derived color</target>
        </trans-unit>
        <trans-unit id="5e83136375d91c8e9615b19c512e787a6522a7e0" translate="yes" xml:space="preserve">
          <source>The derived color, which will be a UIResource</source>
          <target state="translated">The derived color, which will be a UIResource</target>
        </trans-unit>
        <trans-unit id="7333023fc2b864360c0bc027a099893e99f8c0e0" translate="yes" xml:space="preserve">
          <source>The derived color, whose color value will change if the parent uiDefault color changes.</source>
          <target state="translated">The derived color, whose color value will change if the parent uiDefault color changes.</target>
        </trans-unit>
        <trans-unit id="622a976524ed481d2754b97f7a5bad4bec7f5898" translate="yes" xml:space="preserve">
          <source>The derived gauge for the specified MBean if this MBean is in the set of observed MBeans, or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">이 MBean가 감시 대상의 MBean 세트에있는 경우, 지정된 MBean 파생 게이지 . 그렇지 않은 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ea7deb1e8589b725bd49a88de4713e9844734a5" translate="yes" xml:space="preserve">
          <source>The derived gauge of the specified object.</source>
          <target state="translated">지정된 객체의 파생 게이지.</target>
        </trans-unit>
        <trans-unit id="ab2e53105c7c016ee5ef4c432335811e13095204" translate="yes" xml:space="preserve">
          <source>The derived gauge timestamp for the specified MBean if this MBean is in the set of observed MBeans, or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">이 MBean가 감시 대상의 MBean 세트에있는 경우, 지정된 MBean의 파생 게이지 타임 스탬프 . 그렇지 않은 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="918d0ea45853df33982f469ba8e883d71c15cad9" translate="yes" xml:space="preserve">
          <source>The derived gauge timestamp of the specified object.</source>
          <target state="translated">지정된 객체의 파생 게이지 타임 스탬프입니다.</target>
        </trans-unit>
        <trans-unit id="b8628a54ca7d03acc7fca1476c826bfdbf381af3" translate="yes" xml:space="preserve">
          <source>The derived gauge timestamp.</source>
          <target state="translated">파생 된 게이지 타임 스탬프</target>
        </trans-unit>
        <trans-unit id="47e0873d39cb4d938084449ff57e1ed328ee5697" translate="yes" xml:space="preserve">
          <source>The derived gauge value (V[t]) is calculated using the following method:</source>
          <target state="translated">파생 게이지 값 (V [t])은 다음 방법을 사용하여 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="a738d9e1b4632ee603b2672dbe53af96c180022b" translate="yes" xml:space="preserve">
          <source>The derived gauge.</source>
          <target state="translated">파생 게이지.</target>
        </trans-unit>
        <trans-unit id="c5582af838d3ded5d5e1c6e7c59ec31456b1a2f4" translate="yes" xml:space="preserve">
          <source>The descendants of the source node are recursively adopted.</source>
          <target state="translated">The descendants of the source node are recursively adopted.</target>
        </trans-unit>
        <trans-unit id="c68cd5e8c8b197daba980b5bb4eeaf13b32c30ee" translate="yes" xml:space="preserve">
          <source>The description is initialized to the &lt;code&gt;filename&lt;/code&gt; string.</source>
          <target state="translated">The description is initialized to the &lt;code&gt;filename&lt;/code&gt; string.</target>
        </trans-unit>
        <trans-unit id="6e2b2b219b70436ddff91fb78a9791c602594fa8" translate="yes" xml:space="preserve">
          <source>The description of a security service.</source>
          <target state="translated">보안 서비스에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="9eb3b0b493c05d5f164212704ce4ac88339de729" translate="yes" xml:space="preserve">
          <source>The description of a security service. It encapsulates the properties of a service and contains a factory method to obtain new implementation instances of this service.</source>
          <target state="translated">보안 서비스에 대한 설명입니다. 서비스의 속성을 캡슐화하고이 서비스의 새로운 구현 인스턴스를 얻기위한 팩토리 메소드를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="969469f11a23e8de53e48ff12aacf7f0460ef420" translate="yes" xml:space="preserve">
          <source>The description of the error</source>
          <target state="translated">오류에 대한 설명</target>
        </trans-unit>
        <trans-unit id="27400841f85996de2e1a7f5766f87a6372daf3ec" translate="yes" xml:space="preserve">
          <source>The description of this filter.</source>
          <target state="translated">The description of this filter.</target>
        </trans-unit>
        <trans-unit id="6389effce79b129f4ee54a9b2b39c70fd0b31f0c" translate="yes" xml:space="preserve">
          <source>The description of this filter. For example: &quot;JPG and GIF Images&quot;</source>
          <target state="translated">The description of this filter. For example: &quot;JPG and GIF Images&quot;</target>
        </trans-unit>
        <trans-unit id="c4516ec93ba8f8f0ea56eb82988997acd1dc53bd" translate="yes" xml:space="preserve">
          <source>The description of this filter. For example: &quot;JPG and GIF Images.&quot;</source>
          <target state="translated">The description of this filter. For example: &quot;JPG and GIF Images.&quot;</target>
        </trans-unit>
        <trans-unit id="6355e0ca2a13f31dea9eddb00d534ca397c26b74" translate="yes" xml:space="preserve">
          <source>The description returned by &lt;a href=&quot;#getDescription()&quot;&gt;&lt;code&gt;getDescription()&lt;/code&gt;&lt;/a&gt; and the descriptions of the contained attributes and operations are not specified.</source>
          <target state="translated">The description returned by &lt;a href=&quot;#getDescription()&quot;&gt; &lt;code&gt;getDescription()&lt;/code&gt; &lt;/a&gt; and the descriptions of the contained attributes and operations are not specified.</target>
        </trans-unit>
        <trans-unit id="ea41313256c5230eea46e12afb4c4f1ebd86e07b" translate="yes" xml:space="preserve">
          <source>The description returned by &lt;a href=&quot;mbeaninfo#getDescription--&quot;&gt;&lt;code&gt;getDescription()&lt;/code&gt;&lt;/a&gt; and the descriptions of the contained attributes and operations are not specified.</source>
          <target state="translated">&lt;a href=&quot;mbeaninfo#getDescription--&quot;&gt; &lt;code&gt;getDescription()&lt;/code&gt; &lt;/a&gt; 의해 리턴 된 설명 및 포함 된 속성 및 조작에 대한 설명이 지정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="c3b81e61c0a6a08ad74e75183195b7a367b8c01e" translate="yes" xml:space="preserve">
          <source>The descriptions should be localized for the &lt;code&gt;Locale&lt;/code&gt; returned by &lt;code&gt;getLocale&lt;/code&gt;, if it is non-&lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">설명이 &lt;code&gt;null&lt;/code&gt; &lt;code&gt;getLocale&lt;/code&gt; 의 경우는, getLocale 에 의해 돌려 주어진 &lt;code&gt;Locale&lt;/code&gt; 에 대한 설명을 현지화 할 필요가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="344a0689fe209e6b771f1512c673e6d6a695ac56" translate="yes" xml:space="preserve">
          <source>The design of the API encourages the use of &lt;code&gt;LocalDate&lt;/code&gt; rather than this interface, even in the case where the application needs to deal with multiple calendar systems.</source>
          <target state="translated">응용 프로그램이 여러 달력 시스템을 처리해야하는 경우에도 API 디자인은 이 인터페이스 대신 &lt;code&gt;LocalDate&lt;/code&gt; 를 사용하도록 권장합니다 .</target>
        </trans-unit>
        <trans-unit id="ba11f2c8ae2cc526f50b83b31dfd781fb499060a" translate="yes" xml:space="preserve">
          <source>The design of the API encourages the use of &lt;code&gt;LocalDateTime&lt;/code&gt; rather than this interface, even in the case where the application needs to deal with multiple calendar systems. The rationale for this is explored in detail in &lt;a href=&quot;chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">응용 프로그램이 여러 달력 시스템을 처리해야하는 경우에도 API 디자인은 이 인터페이스 대신 &lt;code&gt;LocalDateTime&lt;/code&gt; 을 사용하도록 권장합니다 . 이에 대한 이론적 근거는 &lt;a href=&quot;chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt; 에 자세히 설명되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4098159590d5a0be0ade361e674cb64f25bf4478" translate="yes" xml:space="preserve">
          <source>The design of the API encourages the use of &lt;code&gt;ZonedDateTime&lt;/code&gt; rather than this interface, even in the case where the application needs to deal with multiple calendar systems. The rationale for this is explored in detail in &lt;a href=&quot;chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">응용 프로그램이 여러 달력 시스템을 처리해야하는 경우에도 API 디자인은 이 인터페이스 대신 &lt;code&gt;ZonedDateTime&lt;/code&gt; 을 사용하도록 권장합니다 . 이에 대한 이론적 근거는 &lt;a href=&quot;chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt; 에 자세히 설명되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6acea7274dad724dcffcdf1ad7edaaf9c227b8cc" translate="yes" xml:space="preserve">
          <source>The designers of the Metal Look and Feel strive to keep the default look up to date, possibly through the use of new themes in the future. Therefore, developers should only use this class directly when they wish to customize the &quot;Ocean&quot; look, or force it to be the current theme, regardless of future updates.</source>
          <target state="translated">The designers of the Metal Look and Feel strive to keep the default look up to date, possibly through the use of new themes in the future. Therefore, developers should only use this class directly when they wish to customize the &quot;Ocean&quot; look, or force it to be the current theme, regardless of future updates.</target>
        </trans-unit>
        <trans-unit id="7998624e98208d9dca9c1f843311127f0c1df866" translate="yes" xml:space="preserve">
          <source>The desired rendering width and height of the source, if &lt;code&gt;canSetSourceRenderSize&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;canSetSourceRenderSize&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우 소스의 원하는 렌더링 폭과 높이 또는 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d917da9a5084f2f1af0166fdccfdc63e9aa954e9" translate="yes" xml:space="preserve">
          <source>The desktop properties change support.</source>
          <target state="translated">The desktop properties change support.</target>
        </trans-unit>
        <trans-unit id="1ce93ea6e7f03f4ac9871792cb66df828ded6dc2" translate="yes" xml:space="preserve">
          <source>The desktop properties.</source>
          <target state="translated">The desktop properties.</target>
        </trans-unit>
        <trans-unit id="ec1e3597e2d23e7e431726d124e68e07c482aa62" translate="yes" xml:space="preserve">
          <source>The destination color components need to be adjusted only if they are not in premultiplied form:</source>
          <target state="translated">The destination color components need to be adjusted only if they are not in premultiplied form:</target>
        </trans-unit>
        <trans-unit id="aefa9bbde256c3b0f7ea7830535fda90978d6d12" translate="yes" xml:space="preserve">
          <source>The destination for the output</source>
          <target state="translated">출력 대상</target>
        </trans-unit>
        <trans-unit id="6e47ed993244105ef3022d93b03329d1da144028" translate="yes" xml:space="preserve">
          <source>The destination is composited over the source and the result replaces the destination (Porter-Duff Destination Over Source rule).</source>
          <target state="translated">The destination is composited over the source and the result replaces the destination (Porter-Duff Destination Over Source rule).</target>
        </trans-unit>
        <trans-unit id="7be66831e0c36c54a290aed72d7e9a9c702280e5" translate="yes" xml:space="preserve">
          <source>The destination is left untouched (Porter-Duff Destination rule).</source>
          <target state="translated">The destination is left untouched (Porter-Duff Destination rule).</target>
        </trans-unit>
        <trans-unit id="72735db264afd0e418314675d8b222613d02883d" translate="yes" xml:space="preserve">
          <source>The destination of the formatted output is a &lt;a href=&quot;../lang/stringbuilder&quot;&gt;&lt;code&gt;StringBuilder&lt;/code&gt;&lt;/a&gt; which may be retrieved by invoking &lt;a href=&quot;#out()&quot;&gt;&lt;code&gt;out()&lt;/code&gt;&lt;/a&gt; and whose current content may be converted into a string by invoking &lt;a href=&quot;#toString()&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The destination of the formatted output is a &lt;a href=&quot;../lang/stringbuilder&quot;&gt; &lt;code&gt;StringBuilder&lt;/code&gt; &lt;/a&gt; which may be retrieved by invoking &lt;a href=&quot;#out()&quot;&gt; &lt;code&gt;out()&lt;/code&gt; &lt;/a&gt; and whose current content may be converted into a string by invoking &lt;a href=&quot;#toString()&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="16a5f7d85b506d8eda9a3539f85405b4fb3dac89" translate="yes" xml:space="preserve">
          <source>The destination of the formatted output is a &lt;a href=&quot;../lang/stringbuilder&quot;&gt;&lt;code&gt;StringBuilder&lt;/code&gt;&lt;/a&gt; which may be retrieved by invoking &lt;a href=&quot;#out()&quot;&gt;&lt;code&gt;out()&lt;/code&gt;&lt;/a&gt; and whose current content may be converted into a string by invoking &lt;a href=&quot;#toString()&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt;. The locale used is the &lt;a href=&quot;locale#getDefault(java.util.Locale.Category)&quot;&gt;default locale&lt;/a&gt; for &lt;a href=&quot;locale.category#FORMAT&quot;&gt;formatting&lt;/a&gt; for this instance of the Java virtual machine.</source>
          <target state="translated">The destination of the formatted output is a &lt;a href=&quot;../lang/stringbuilder&quot;&gt; &lt;code&gt;StringBuilder&lt;/code&gt; &lt;/a&gt; which may be retrieved by invoking &lt;a href=&quot;#out()&quot;&gt; &lt;code&gt;out()&lt;/code&gt; &lt;/a&gt; and whose current content may be converted into a string by invoking &lt;a href=&quot;#toString()&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;. The locale used is the &lt;a href=&quot;locale#getDefault(java.util.Locale.Category)&quot;&gt;default locale&lt;/a&gt; for &lt;a href=&quot;locale.category#FORMAT&quot;&gt;formatting&lt;/a&gt; for this instance of the Java virtual machine.</target>
        </trans-unit>
        <trans-unit id="f08645b6db1ebe7d6424f30f2504cbbedb0c2fdb" translate="yes" xml:space="preserve">
          <source>The destination of the formatted output is a &lt;a href=&quot;../lang/stringbuilder&quot;&gt;&lt;code&gt;StringBuilder&lt;/code&gt;&lt;/a&gt; which may be retrieved by invoking &lt;a href=&quot;formatter#out--&quot;&gt;&lt;code&gt;out()&lt;/code&gt;&lt;/a&gt; and whose current content may be converted into a string by invoking &lt;a href=&quot;formatter#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">형식화 된 출력의 대상은 &lt;a href=&quot;formatter#out--&quot;&gt; &lt;code&gt;out()&lt;/code&gt; &lt;/a&gt; 을 호출 하여 검색 할 수 있고 &lt;a href=&quot;formatter#toString--&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; 을 호출하여 현재 컨텐츠를 문자열로 변환 할 수 있는 &lt;a href=&quot;../lang/stringbuilder&quot;&gt; &lt;code&gt;StringBuilder&lt;/code&gt; &lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="5922b766b3984cfed20c7a5e5693f7ca47586ff2" translate="yes" xml:space="preserve">
          <source>The destination of the formatted output is a &lt;a href=&quot;../lang/stringbuilder&quot;&gt;&lt;code&gt;StringBuilder&lt;/code&gt;&lt;/a&gt; which may be retrieved by invoking &lt;a href=&quot;formatter#out--&quot;&gt;&lt;code&gt;out()&lt;/code&gt;&lt;/a&gt; and whose current content may be converted into a string by invoking &lt;a href=&quot;formatter#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt;. The locale used is the &lt;a href=&quot;locale#getDefault-java.util.Locale.Category-&quot;&gt;default locale&lt;/a&gt; for &lt;a href=&quot;locale.category#FORMAT&quot;&gt;formatting&lt;/a&gt; for this instance of the Java virtual machine.</source>
          <target state="translated">형식화 된 출력의 대상은 &lt;a href=&quot;formatter#out--&quot;&gt; &lt;code&gt;out()&lt;/code&gt; &lt;/a&gt; 을 호출 하여 검색 할 수 있고 &lt;a href=&quot;formatter#toString--&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; 을 호출하여 현재 컨텐츠를 문자열로 변환 할 수 있는 &lt;a href=&quot;../lang/stringbuilder&quot;&gt; &lt;code&gt;StringBuilder&lt;/code&gt; &lt;/a&gt; 입니다 . 사용되는 로케일은,이다 &lt;a href=&quot;locale#getDefault-java.util.Locale.Category-&quot;&gt;기본 로케일&lt;/a&gt; 에 대한 &lt;a href=&quot;locale.category#FORMAT&quot;&gt;서식&lt;/a&gt; 이 Java 가상 머신 인스턴스.</target>
        </trans-unit>
        <trans-unit id="c0f3d8e39e4a15746121302a291d05298071f204" translate="yes" xml:space="preserve">
          <source>The destination region is specified in the &lt;code&gt;param&lt;/code&gt; argument, and will be clipped to the image boundaries and the region supplied to &lt;code&gt;prepareReplacePixels&lt;/code&gt;. At least one pixel of the source must not be clipped, or an exception is thrown.</source>
          <target state="translated">대상 영역은 &lt;code&gt;param&lt;/code&gt; 인수에 지정되며 , 이미지 경계 및 &lt;code&gt;prepareReplacePixels&lt;/code&gt; 제공된 영역에 잘립니다 . 소스의 픽셀 하나 이상이 잘리지 않아야합니다. 그렇지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c64195340f2b1561568956b9b738819b8d888742" translate="yes" xml:space="preserve">
          <source>The details as to how the name of the directory is constructed is implementation dependent and therefore not specified. Where possible the &lt;code&gt;prefix&lt;/code&gt; is used to construct candidate names.</source>
          <target state="translated">디렉토리 이름의 구성 방법에 대한 세부 사항은 구현에 따라 다르므로 지정되지 않았습니다. 가능한 경우 &lt;code&gt;prefix&lt;/code&gt; 가 후보 이름을 구성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="66b1a6cda8f27d744856eb84132d6ea208070645" translate="yes" xml:space="preserve">
          <source>The details as to how the name of the file is constructed is implementation dependent and therefore not specified. Where possible the &lt;code&gt;prefix&lt;/code&gt; and &lt;code&gt;suffix&lt;/code&gt; are used to construct candidate names in the same manner as the &lt;a href=&quot;../../io/file#createTempFile(java.lang.String,java.lang.String,java.io.File)&quot;&gt;&lt;code&gt;File.createTempFile(String,String,File)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">The details as to how the name of the file is constructed is implementation dependent and therefore not specified. Where possible the &lt;code&gt;prefix&lt;/code&gt; and &lt;code&gt;suffix&lt;/code&gt; are used to construct candidate names in the same manner as the &lt;a href=&quot;../../io/file#createTempFile(java.lang.String,java.lang.String,java.io.File)&quot;&gt; &lt;code&gt;File.createTempFile(String,String,File)&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="13e3105ecc501e450654c55ee27633db720c9d10" translate="yes" xml:space="preserve">
          <source>The details as to how the name of the file is constructed is implementation dependent and therefore not specified. Where possible the &lt;code&gt;prefix&lt;/code&gt; and &lt;code&gt;suffix&lt;/code&gt; are used to construct candidate names in the same manner as the &lt;a href=&quot;../../io/file#createTempFile-java.lang.String-java.lang.String-java.io.File-&quot;&gt;&lt;code&gt;File.createTempFile(String,String,File)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">파일 이름의 구성 방법에 대한 세부 사항은 구현에 따라 다르므로 지정되지 않았습니다. 가능한 경우 &lt;code&gt;prefix&lt;/code&gt; 와 &lt;code&gt;suffix&lt;/code&gt; 가 &lt;a href=&quot;../../io/file#createTempFile-java.lang.String-java.lang.String-java.io.File-&quot;&gt; &lt;code&gt;File.createTempFile(String,String,File)&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 방식으로 후보 이름을 구성하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9eb6d04ea271daaaa74a74d533cfbb4f0d868b88" translate="yes" xml:space="preserve">
          <source>The details of this class are not important for simple applets, which draw in a default color space or manipulate and display imported images with a known color space. At most, such applets would need to get one of the default color spaces via ColorSpace.getInstance().</source>
          <target state="translated">The details of this class are not important for simple applets, which draw in a default color space or manipulate and display imported images with a known color space. At most, such applets would need to get one of the default color spaces via ColorSpace.getInstance().</target>
        </trans-unit>
        <trans-unit id="a740e7bd28a9ddf152769f3dfa9459ed9d4c64cd" translate="yes" xml:space="preserve">
          <source>The determination of preceding versus following is implementation-specific.</source>
          <target state="translated">The determination of preceding versus following is implementation-specific.</target>
        </trans-unit>
        <trans-unit id="0156d253af9492a7e56629d10bee3e7405834d90" translate="yes" xml:space="preserve">
          <source>The determination of the feedback effects, and the ultimate success or failure of the data transfer, should one occur, is parameterized as follows:</source>
          <target state="translated">The determination of the feedback effects, and the ultimate success or failure of the data transfer, should one occur, is parameterized as follows:</target>
        </trans-unit>
        <trans-unit id="962dd235370673feb2fce69536c5e372d3595897" translate="yes" xml:space="preserve">
          <source>The developer should consider examining the value of the &lt;a href=&quot;event/windowevent#getNewState()&quot;&gt;&lt;code&gt;WindowEvent.getNewState()&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;WindowEvent&lt;/code&gt; received through the &lt;a href=&quot;event/windowstatelistener&quot;&gt;&lt;code&gt;WindowStateListener&lt;/code&gt;&lt;/a&gt;, rather than assuming that the state given to the &lt;code&gt;setExtendedState()&lt;/code&gt; method will be definitely applied. For more information see the documentation for the &lt;a href=&quot;frame#setExtendedState(int)&quot;&gt;&lt;code&gt;Frame.setExtendedState(int)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">The developer should consider examining the value of the &lt;a href=&quot;event/windowevent#getNewState()&quot;&gt; &lt;code&gt;WindowEvent.getNewState()&lt;/code&gt; &lt;/a&gt; method of the &lt;code&gt;WindowEvent&lt;/code&gt; received through the &lt;a href=&quot;event/windowstatelistener&quot;&gt; &lt;code&gt;WindowStateListener&lt;/code&gt; &lt;/a&gt;, rather than assuming that the state given to the &lt;code&gt;setExtendedState()&lt;/code&gt; method will be definitely applied. For more information see the documentation for the &lt;a href=&quot;frame#setExtendedState(int)&quot;&gt; &lt;code&gt;Frame.setExtendedState(int)&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="2cba2519f0b1ce3a070aa5dd7763ad3ccf86e3d3" translate="yes" xml:space="preserve">
          <source>The device has a media jam.</source>
          <target state="translated">장치에 용지가 걸렸습니다.</target>
        </trans-unit>
        <trans-unit id="66006232695e41b5c6ac636adf56ec27c7ce85e4" translate="yes" xml:space="preserve">
          <source>The device is low on at least one marker supply (e.g. toner, ink, ribbon).</source>
          <target state="translated">장치에 하나 이상의 마커 공급 장치 (예 : 토너, 잉크, 리본)가 부족합니다.</target>
        </trans-unit>
        <trans-unit id="29f9dd9acfd7460a5bb63ab5fd2c2a3e3198166d" translate="yes" xml:space="preserve">
          <source>The device is low on developer.</source>
          <target state="translated">장치의 개발자가 부족합니다.</target>
        </trans-unit>
        <trans-unit id="542e2763c0b2510c401d46d8fd95e8dc50a4b179" translate="yes" xml:space="preserve">
          <source>The device is low on toner.</source>
          <target state="translated">토너가 부족합니다.</target>
        </trans-unit>
        <trans-unit id="2d766fd6e4a64bf066ff0d6e551d91bfb267900f" translate="yes" xml:space="preserve">
          <source>The device is out of at least one marker supply (e.g. toner, ink, ribbon).</source>
          <target state="translated">장치에 하나 이상의 마커 공급 장치 (예 : 토너, 잉크, 리본)가 없습니다.</target>
        </trans-unit>
        <trans-unit id="aa7f3afbbcec8442a53aed2b81e4cca4e3c5e7ee" translate="yes" xml:space="preserve">
          <source>The device is out of developer.</source>
          <target state="translated">장치에 개발자가 없습니다.</target>
        </trans-unit>
        <trans-unit id="9003dae5dc55c7520c1913a281ed7b8f4138a6f3" translate="yes" xml:space="preserve">
          <source>The device is out of toner.</source>
          <target state="translated">토너가 부족합니다.</target>
        </trans-unit>
        <trans-unit id="016818b5f80841ea367578651504c2c2e67f0f01" translate="yes" xml:space="preserve">
          <source>The device marker supply waste receptacle is almost full.</source>
          <target state="translated">장치 마커 공급 쓰레기통이 거의 찼습니다.</target>
        </trans-unit>
        <trans-unit id="f9002b26167422aebb9a8d3912d0ce925b8b97e0" translate="yes" xml:space="preserve">
          <source>The device marker supply waste receptacle is full.</source>
          <target state="translated">장치 마커 공급 폐기물 리셉터클이 가득 찼습니다.</target>
        </trans-unit>
        <trans-unit id="3046eb5cab9364e351efcf55b96205067a5477cb" translate="yes" xml:space="preserve">
          <source>The diagram at right shows the structure of a &lt;code&gt;JRootPane&lt;/code&gt;. A &lt;code&gt;JRootpane&lt;/code&gt; is made up of a &lt;code&gt;glassPane&lt;/code&gt;, an optional &lt;code&gt;menuBar&lt;/code&gt;, and a &lt;code&gt;contentPane&lt;/code&gt;. (The &lt;code&gt;JLayeredPane&lt;/code&gt; manages the &lt;code&gt;menuBar&lt;/code&gt; and the &lt;code&gt;contentPane&lt;/code&gt;.) The &lt;code&gt;glassPane&lt;/code&gt; sits over the top of everything, where it is in a position to intercept mouse movements. Since the &lt;code&gt;glassPane&lt;/code&gt; (like the &lt;code&gt;contentPane&lt;/code&gt;) can be an arbitrary component, it is also possible to set up the &lt;code&gt;glassPane&lt;/code&gt; for drawing. Lines and images on the &lt;code&gt;glassPane&lt;/code&gt; can then range over the frames underneath without being limited by their boundaries.</source>
          <target state="translated">The diagram at right shows the structure of a &lt;code&gt;JRootPane&lt;/code&gt; . A &lt;code&gt;JRootpane&lt;/code&gt; is made up of a &lt;code&gt;glassPane&lt;/code&gt; , an optional &lt;code&gt;menuBar&lt;/code&gt; , and a &lt;code&gt;contentPane&lt;/code&gt; . (The &lt;code&gt;JLayeredPane&lt;/code&gt; manages the &lt;code&gt;menuBar&lt;/code&gt; and the &lt;code&gt;contentPane&lt;/code&gt; .) The &lt;code&gt;glassPane&lt;/code&gt; sits over the top of everything, where it is in a position to intercept mouse movements. Since the &lt;code&gt;glassPane&lt;/code&gt; (like the &lt;code&gt;contentPane&lt;/code&gt; ) can be an arbitrary component, it is also possible to set up the &lt;code&gt;glassPane&lt;/code&gt; for drawing. Lines and images on the &lt;code&gt;glassPane&lt;/code&gt; can then range over the frames underneath without being limited by their boundaries.</target>
        </trans-unit>
        <trans-unit id="4ac92ac084842b5b582ce0fd74401843370cc965" translate="yes" xml:space="preserve">
          <source>The dialog may include a tab panel with custom UI lazily obtained from the &lt;code&gt;PrintService&lt;/code&gt;'s &lt;code&gt;ServiceUIFactory&lt;/code&gt; when the &lt;code&gt;PrintService&lt;/code&gt; is browsed. The dialog will attempt to locate a &lt;code&gt;MAIN_UIROLE&lt;/code&gt; first as a &lt;code&gt;JComponent&lt;/code&gt;, then as a &lt;code&gt;Panel&lt;/code&gt;. If there is no &lt;code&gt;ServiceUIFactory&lt;/code&gt; or no matching role the custom tab will be empty or not visible.</source>
          <target state="translated">The dialog may include a tab panel with custom UI lazily obtained from the &lt;code&gt;PrintService&lt;/code&gt; 's &lt;code&gt;ServiceUIFactory&lt;/code&gt; when the &lt;code&gt;PrintService&lt;/code&gt; is browsed. The dialog will attempt to locate a &lt;code&gt;MAIN_UIROLE&lt;/code&gt; first as a &lt;code&gt;JComponent&lt;/code&gt; , then as a &lt;code&gt;Panel&lt;/code&gt; . If there is no &lt;code&gt;ServiceUIFactory&lt;/code&gt; or no matching role the custom tab will be empty or not visible.</target>
        </trans-unit>
        <trans-unit id="69c893e55c76bdf9733ed371bb8a202b8b6db89e" translate="yes" xml:space="preserve">
          <source>The dialog may include a tab panel with custom UI lazily obtained from the PrintService's ServiceUIFactory when the PrintService is browsed. The dialog will attempt to locate a MAIN_UIROLE first as a JComponent, then as a Panel. If there is no ServiceUIFactory or no matching role the custom tab will be empty or not visible.</source>
          <target state="translated">대화 상자에는 PrintService를 찾아 볼 때 PrintService의 ServiceUIFactory에서 느리게 가져온 사용자 정의 UI가있는 탭 패널이 포함될 수 있습니다. 대화 상자는 먼저 MAIN_UIROLE을 JComponent로 찾은 다음 Panel로 찾으려고합니다. ServiceUIFactory가 없거나 일치하는 역할이 없으면 사용자 정의 탭이 비어 있거나 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2f36867dc97c7900fc4d40c5ca5cd3f93310516e" translate="yes" xml:space="preserve">
          <source>The dialog returns the print service selected by the user if the user OK's the dialog and &lt;code&gt;null&lt;/code&gt; if the user cancels the dialog.</source>
          <target state="translated">The dialog returns the print service selected by the user if the user OK's the dialog and &lt;code&gt;null&lt;/code&gt; if the user cancels the dialog.</target>
        </trans-unit>
        <trans-unit id="4cc399a15b8f756f5185fc205b17982999412260" translate="yes" xml:space="preserve">
          <source>The dialog returns the print service selected by the user if the user OK's the dialog and null if the user cancels the dialog.</source>
          <target state="translated">대화 상자는 사용자가 대화 상자를 확인한 경우 사용자가 선택한 인쇄 서비스를 반환하고 사용자가 대화 상자를 취소하면 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="579f01e86dd6699ada620aefc1c7afb266adc891" translate="yes" xml:space="preserve">
          <source>The dialogs are designed to work with pluggable print services though the public APIs of those print services.</source>
          <target state="translated">대화 상자는 해당 인쇄 서비스의 공용 API를 통해 플러그 가능한 인쇄 서비스와 작동하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="db3841cda9fb9966f1d8587166f67225d1444f8b" translate="yes" xml:space="preserve">
          <source>The dialogs follow a standard pattern of acting as a continue/cancel option for a user as well as allowing the user to select the print service to use and specify choices such as paper size and number of copies.</source>
          <target state="translated">대화 상자는 사용자가 계속 / 취소 옵션으로 작동하는 표준 패턴을 따르며 사용자가 사용할 인쇄 서비스를 선택하고 용지 크기 및 매수와 같은 선택을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c96480009197f705592107a5cb718405cd00f4db" translate="yes" xml:space="preserve">
          <source>The difference between the 'standard' and 'stand-alone' forms is trickier to describe as there is no difference in English. However, in other languages there is a difference in the word used when the text is used alone, as opposed to in a complete date. For example, the word used for a month when used alone in a date picker is different to the word used for month in association with a day and year in a date.</source>
          <target state="translated">'표준'양식과 '독립형'양식의 차이점은 영어에는 차이가 없으므로 설명하기가 더 까다 롭습니다. 그러나 다른 언어에서는 완전한 날짜가 아닌 텍스트를 단독으로 사용할 때 사용되는 단어에 차이가 있습니다. 예를 들어, 날짜 선택기에서 단독으로 사용될 때 한 달에 사용 된 단어는 날짜의 일 및 연도와 관련하여 월에 사용 된 단어와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="d40a3fc423cd4e4ebf79f443777971ee6f079eed" translate="yes" xml:space="preserve">
          <source>The difference between the three sizes is obvious in most languages. For example, in English the 'full' month is 'January', the 'short' month is 'Jan' and the 'narrow' month is 'J'. Note that the narrow size is often not unique. For example, 'January', 'June' and 'July' all have the 'narrow' text 'J'.</source>
          <target state="translated">세 가지 크기의 차이는 대부분의 언어에서 분명합니다. 예를 들어 영어에서 '전체'달은 '1 월'이고 '짧은'달은 '1 월'이고 '좁은'달은 'J'입니다. 좁은 크기는 종종 고유하지 않습니다. 예를 들어 'January', 'June'및 'July'는 모두 '좁은'텍스트 'J'를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="8d01b8818c08d858b2ee09d956697424edc75b8c" translate="yes" xml:space="preserve">
          <source>The difference in values between &lt;code&gt;floorMod&lt;/code&gt; and the &lt;code&gt;%&lt;/code&gt; operator is due to the difference between &lt;code&gt;floorDiv&lt;/code&gt; that returns the integer less than or equal to the quotient and the &lt;code&gt;/&lt;/code&gt; operator that returns the integer closest to zero.</source>
          <target state="translated">&lt;code&gt;floorMod&lt;/code&gt; 와 &lt;code&gt;%&lt;/code&gt; 연산자 의 값 차이 는 몫보다 작거나 같은 정수를 반환하는 &lt;code&gt;floorDiv&lt;/code&gt; 와 0에 가장 가까운 정수를 반환하는 &lt;code&gt;/&lt;/code&gt; 연산자 의 차이로 인해 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="7586d3a365a4d67c1c9b505b682867dabb42cd40" translate="yes" xml:space="preserve">
          <source>The differences between &lt;code&gt;IIOMetadataFormat&lt;/code&gt;-described structures and DTDs are as follows:</source>
          <target state="translated">&lt;code&gt;IIOMetadataFormat&lt;/code&gt; 기술 구조와 DTD 의 차이점은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ae28aa9bd9bde2c9ea45602f28fc04b20eab977c" translate="yes" xml:space="preserve">
          <source>The differences between this format and the standard UTF-8 format are the following:</source>
          <target state="translated">이 형식과 표준 UTF-8 형식의 차이점은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="443467df3062dda08fb61c5f1f09b1961e943d03" translate="yes" xml:space="preserve">
          <source>The digit-to-character mapping provided by &lt;code&gt;Character.forDigit&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;Character.forDigit&lt;/code&gt; 에서 제공하는 숫자-문자 매핑 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cdabe34d95ee2b49e101157e361587437533a830" translate="yes" xml:space="preserve">
          <source>The digits &lt;code&gt;'0'&lt;/code&gt; through &lt;code&gt;'9'&lt;/code&gt; (&lt;code&gt;'\u0030'&lt;/code&gt; through &lt;code&gt;'\u0039'&lt;/code&gt;),</source>
          <target state="translated">숫자 &lt;code&gt;'0'&lt;/code&gt; ~ &lt;code&gt;'9'&lt;/code&gt; ( &lt;code&gt;'\u0030'&lt;/code&gt; ~ &lt;code&gt;'\u0039'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7c530bb302970ee42b0845cf9230dcc428cd16c0" translate="yes" xml:space="preserve">
          <source>The dimensions of the source image are reported using the setDimensions method call.</source>
          <target state="translated">The dimensions of the source image are reported using the setDimensions method call.</target>
        </trans-unit>
        <trans-unit id="2da158d17d8b763f57749711076a1f6ab7378dbb" translate="yes" xml:space="preserve">
          <source>The direction of scrolling down.</source>
          <target state="translated">The direction of scrolling down.</target>
        </trans-unit>
        <trans-unit id="a42c94a732384909d5fec3aa106d3d0c269a740c" translate="yes" xml:space="preserve">
          <source>The direction of scrolling up.</source>
          <target state="translated">The direction of scrolling up.</target>
        </trans-unit>
        <trans-unit id="030015e101c9c02caf7e86644df595e33a70e2dd" translate="yes" xml:space="preserve">
          <source>The direction of scrolling.</source>
          <target state="translated">The direction of scrolling.</target>
        </trans-unit>
        <trans-unit id="d049365da86705fa316facfceca072ee8ecdec1c" translate="yes" xml:space="preserve">
          <source>The direction of the arrow.</source>
          <target state="translated">The direction of the arrow.</target>
        </trans-unit>
        <trans-unit id="fb11e8bed6738aedc0e8ab0d93bf1311b5c86f86" translate="yes" xml:space="preserve">
          <source>The direction of the arrow. One of &lt;code&gt;SwingConstants.NORTH&lt;/code&gt;, &lt;code&gt;SwingConstants.SOUTH&lt;/code&gt;, &lt;code&gt;SwingConstants.EAST&lt;/code&gt; or &lt;code&gt;SwingConstants.WEST&lt;/code&gt;.</source>
          <target state="translated">The direction of the arrow. One of &lt;code&gt;SwingConstants.NORTH&lt;/code&gt; , &lt;code&gt;SwingConstants.SOUTH&lt;/code&gt; , &lt;code&gt;SwingConstants.EAST&lt;/code&gt; or &lt;code&gt;SwingConstants.WEST&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef0045005b7f53322a7a7457d935946d4553e40f" translate="yes" xml:space="preserve">
          <source>The direction.</source>
          <target state="translated">The direction.</target>
        </trans-unit>
        <trans-unit id="f6c9c6a6e7be02e6daeaaa0b692f02eddae01f71" translate="yes" xml:space="preserve">
          <source>The directory service interface, containing methods for examining and updating attributes associated with objects, and for searching the directory.</source>
          <target state="translated">디렉토리 서비스 인터페이스. 오브젝트와 연관된 속성을 검사 및 업데이트하고 디렉토리를 검색하는 메소드가 들어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ad85b228a7beab98f22ad8fb5a84560b0bca97a" translate="yes" xml:space="preserve">
          <source>The dirty call requests leases for the remote object references associated with the object identifiers contained in the array 'ids'.</source>
          <target state="translated">The dirty call requests leases for the remote object references associated with the object identifiers contained in the array 'ids'.</target>
        </trans-unit>
        <trans-unit id="dc914d76358b0d2b9747e825ab3972315277ada4" translate="yes" xml:space="preserve">
          <source>The dirty call requests leases for the remote object references associated with the object identifiers contained in the array 'ids'. The 'lease' contains a client's unique VM identifier (VMID) and a requested lease period. For each remote object exported in the local VM, the garbage collector maintains a reference list-a list of clients that hold references to it. If the lease is granted, the garbage collector adds the client's VMID to the reference list for each remote object indicated in 'ids'. The 'sequenceNum' parameter is a sequence number that is used to detect and discard late calls to the garbage collector. The sequence number should always increase for each subsequent call to the garbage collector. Some clients are unable to generate a VMID, since a VMID is a universally unique identifier that contains a host address which some clients are unable to obtain due to security restrictions. In this case, a client can use a VMID of null, and the distributed garbage collector will assign a VMID for the client. The dirty call returns a Lease object that contains the VMID used and the lease period granted for the remote references (a server may decide to grant a smaller lease period than the client requests). A client must use the VMID the garbage collector uses in order to make corresponding clean calls when the client drops remote object references. A client VM need only make one initial dirty call for each remote reference referenced in the VM (even if it has multiple references to the same remote object). The client must also make a dirty call to renew leases on remote references before such leases expire. When the client no longer has any references to a specific remote object, it must schedule a clean call for the object ID associated with the reference.</source>
          <target state="translated">The dirty call requests leases for the remote object references associated with the object identifiers contained in the array 'ids'. The 'lease' contains a client's unique VM identifier (VMID) and a requested lease period. For each remote object exported in the local VM, the garbage collector maintains a reference list-a list of clients that hold references to it. If the lease is granted, the garbage collector adds the client's VMID to the reference list for each remote object indicated in 'ids'. The 'sequenceNum' parameter is a sequence number that is used to detect and discard late calls to the garbage collector. The sequence number should always increase for each subsequent call to the garbage collector. Some clients are unable to generate a VMID, since a VMID is a universally unique identifier that contains a host address which some clients are unable to obtain due to security restrictions. In this case, a client can use a VMID of null, and the distributed garbage collector will assign a VMID for the client. The dirty call returns a Lease object that contains the VMID used and the lease period granted for the remote references (a server may decide to grant a smaller lease period than the client requests). A client must use the VMID the garbage collector uses in order to make corresponding clean calls when the client drops remote object references. A client VM need only make one initial dirty call for each remote reference referenced in the VM (even if it has multiple references to the same remote object). The client must also make a dirty call to renew leases on remote references before such leases expire. When the client no longer has any references to a specific remote object, it must schedule a clean call for the object ID associated with the reference.</target>
        </trans-unit>
        <trans-unit id="03bddf843ccf72f679cd306d4d5724dee75cbf6b" translate="yes" xml:space="preserve">
          <source>The disjunction of the two arguments. The returned object will be serialized as an instance of the non-public class  javax.management.OrQueryExp.</source>
          <target state="translated">두 주장의 분리. 리턴 된 오브젝트는 비 공용 클래스 javax.management.OrQueryExp의 인스턴스로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="91de1edc071f959afa598ad056fddde2785a45af" translate="yes" xml:space="preserve">
          <source>The disjunction of the two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.OrQueryExp&quot;&gt; javax.management.OrQueryExp&lt;/a&gt;.</source>
          <target state="translated">The disjunction of the two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.OrQueryExp&quot;&gt; javax.management.OrQueryExp&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="16028d1f4a5e25572b2f01079eea733e5d26c204" translate="yes" xml:space="preserve">
          <source>The display mode must be one of the display modes returned by &lt;a href=&quot;#getDisplayModes()&quot;&gt;&lt;code&gt;getDisplayModes()&lt;/code&gt;&lt;/a&gt;, with one exception: passing a display mode with &lt;a href=&quot;displaymode#REFRESH_RATE_UNKNOWN&quot;&gt;&lt;code&gt;DisplayMode.REFRESH_RATE_UNKNOWN&lt;/code&gt;&lt;/a&gt; refresh rate will result in selecting a display mode from the list of available display modes with matching width, height and bit depth. However, passing a display mode with &lt;a href=&quot;displaymode#BIT_DEPTH_MULTI&quot;&gt;&lt;code&gt;DisplayMode.BIT_DEPTH_MULTI&lt;/code&gt;&lt;/a&gt; for bit depth is only allowed if such mode exists in the list returned by &lt;a href=&quot;#getDisplayModes()&quot;&gt;&lt;code&gt;getDisplayModes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The display mode must be one of the display modes returned by &lt;a href=&quot;#getDisplayModes()&quot;&gt; &lt;code&gt;getDisplayModes()&lt;/code&gt; &lt;/a&gt;, with one exception: passing a display mode with &lt;a href=&quot;displaymode#REFRESH_RATE_UNKNOWN&quot;&gt; &lt;code&gt;DisplayMode.REFRESH_RATE_UNKNOWN&lt;/code&gt; &lt;/a&gt; refresh rate will result in selecting a display mode from the list of available display modes with matching width, height and bit depth. However, passing a display mode with &lt;a href=&quot;displaymode#BIT_DEPTH_MULTI&quot;&gt; &lt;code&gt;DisplayMode.BIT_DEPTH_MULTI&lt;/code&gt; &lt;/a&gt; for bit depth is only allowed if such mode exists in the list returned by &lt;a href=&quot;#getDisplayModes()&quot;&gt; &lt;code&gt;getDisplayModes()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="70b0bf684f9d37699ae21723515abb62707cc192" translate="yes" xml:space="preserve">
          <source>The display name of this charset in the default locale</source>
          <target state="translated">기본 로케일에서이 문자 세트의 표시 이름</target>
        </trans-unit>
        <trans-unit id="f0d028866b466d6a1b80e5ff746a3a47c46f64b5" translate="yes" xml:space="preserve">
          <source>The display name of this charset in the given locale</source>
          <target state="translated">지정된 로케일에서이 문자 세트의 표시 이름</target>
        </trans-unit>
        <trans-unit id="08ba8df55cb4d05ccaf8b4cce5e33c15ca995916" translate="yes" xml:space="preserve">
          <source>The display policy for the horizontal scrollbar.</source>
          <target state="translated">The display policy for the horizontal scrollbar.</target>
        </trans-unit>
        <trans-unit id="9991bba9ec9f135eaf55d274f01bb22a8237a20e" translate="yes" xml:space="preserve">
          <source>The display policy for the horizontal scrollbar. The default is &lt;code&gt;ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED&lt;/code&gt;.</source>
          <target state="translated">The display policy for the horizontal scrollbar. The default is &lt;code&gt;ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4ea707e213a9d5871336a85cc406a8da65c8554" translate="yes" xml:space="preserve">
          <source>The display policy for the vertical scrollbar.</source>
          <target state="translated">수직 스크롤바의 표시 정책입니다.</target>
        </trans-unit>
        <trans-unit id="aeda00e1fd90874354ee8afc176204e50be3d83d" translate="yes" xml:space="preserve">
          <source>The display policy for the vertical scrollbar. The default is &lt;code&gt;ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED&lt;/code&gt;.</source>
          <target state="translated">수직 스크롤바의 표시 정책입니다. 기본값은 &lt;code&gt;ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2e9028f30817f1b67ebc91b8ab67a573c9c35fea" translate="yes" xml:space="preserve">
          <source>The dispose-window default window close operation.</source>
          <target state="translated">dispose-window 기본 창 닫기 작업입니다.</target>
        </trans-unit>
        <trans-unit id="02af758a9672ac81ed5f381136584bb5974376b1" translate="yes" xml:space="preserve">
          <source>The distance from its original position the column has been dragged.</source>
          <target state="translated">열이 드래그 된 원래 위치로부터의 거리입니다.</target>
        </trans-unit>
        <trans-unit id="baaa3ea63ed07be916c758a2e888e9067ba11dac" translate="yes" xml:space="preserve">
          <source>The distance that the track is from the side of the control</source>
          <target state="translated">컨트롤 측면에서 트랙까지의 거리</target>
        </trans-unit>
        <trans-unit id="6558e5722111fb8030f8f035b9e1182199e1e238" translate="yes" xml:space="preserve">
          <source>The distinction has other effects. Serializing the &lt;code&gt;ZoneId&lt;/code&gt; will only send the ID, whereas serializing the rules sends the entire data set. Similarly, a comparison of two IDs only examines the ID, whereas a comparison of two rules examines the entire data set.</source>
          <target state="translated">구별은 다른 영향을 미칩니다. &lt;code&gt;ZoneId&lt;/code&gt; 를 직렬화하면 ID 만 전송되고 규칙을 직렬화하면 전체 데이터 세트가 전송됩니다. 마찬가지로 두 ID를 비교하면 ID 만 검사하지만 두 규칙을 비교하면 전체 데이터 세트를 검사합니다.</target>
        </trans-unit>
        <trans-unit id="f42b3fe742ce51ed9620b157248f0acda3d9808f" translate="yes" xml:space="preserve">
          <source>The divider used for non-continuous layout is added to the split pane with this object.</source>
          <target state="translated">비 연속 레이아웃에 사용되는 구분선이이 개체와 함께 분할 창에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="38a85796cc6ed5c1cec11291d1d7b83212a9375d" translate="yes" xml:space="preserve">
          <source>The division type of the MIDI file.</source>
          <target state="translated">MIDI 파일의 분할 형식입니다.</target>
        </trans-unit>
        <trans-unit id="addbce6dba41590fdbc0b372e02d9d039d171caa" translate="yes" xml:space="preserve">
          <source>The do-nothing default window close operation.</source>
          <target state="translated">아무것도하지 않는 기본 창 닫기 작업입니다.</target>
        </trans-unit>
        <trans-unit id="8515e437df4b1dd815a7a36c81160360feb7e403" translate="yes" xml:space="preserve">
          <source>The doc flavor's representation class is a conduit for the JPS &lt;code&gt;DocPrintJob&lt;/code&gt; to obtain a sequence of characters or bytes from the client. The doc flavor's MIME type is one of the standard media types telling how to interpret the sequence of characters or bytes. For a list of standard media types, see the Internet Assigned Numbers Authority's (IANA's) &lt;a href=&quot;http://www.iana.org/assignments/media-types/&quot;&gt;Media Types Directory &lt;/a&gt;. Interface &lt;a href=&quot;doc&quot;&gt;&lt;code&gt;Doc&lt;/code&gt;&lt;/a&gt; provides two utility operations, &lt;a href=&quot;doc#getReaderForText()&quot;&gt;&lt;code&gt;getReaderForText&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;doc#getStreamForBytes()&quot;&gt;&lt;code&gt;getStreamForBytes()&lt;/code&gt;&lt;/a&gt;, to help a &lt;code&gt;Doc&lt;/code&gt; object's client extract client formatted print data.</source>
          <target state="translated">doc flavor의 표현 클래스는 JPS &lt;code&gt;DocPrintJob&lt;/code&gt; 이 클라이언트에서 일련의 문자 또는 바이트를 얻기 위한 도관입니다 . doc flavor의 MIME 유형은 문자 또는 바이트 시퀀스를 해석하는 방법을 알려주는 표준 미디어 유형 중 하나입니다. 표준 미디어 유형 목록은 IANA (Internet Assigned Numbers Authority)의 &lt;a href=&quot;http://www.iana.org/assignments/media-types/&quot;&gt;미디어 유형 디렉토리를 참조하십시오&lt;/a&gt; . Interface &lt;a href=&quot;doc&quot;&gt; &lt;code&gt;Doc&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;Doc&lt;/code&gt; 객체의 클라이언트가 클라이언트 형식의 인쇄 데이터를 추출 할 수 있도록 두 가지 유틸리티 작업 인 &lt;a href=&quot;doc#getReaderForText()&quot;&gt; &lt;code&gt;getReaderForText&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;doc#getStreamForBytes()&quot;&gt; &lt;code&gt;getStreamForBytes()&lt;/code&gt; &lt;/a&gt; 를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="869f1e09781f53f737dbed3b4023e5a59ef687d7" translate="yes" xml:space="preserve">
          <source>The doc flavor's representation class is a conduit for the JPS &lt;code&gt;DocPrintJob&lt;/code&gt; to obtain a sequence of characters or bytes from the client. The doc flavor's MIME type is one of the standard media types telling how to interpret the sequence of characters or bytes. For a list of standard media types, see the Internet Assigned Numbers Authority's (IANA's) &lt;a href=&quot;http://www.iana.org/assignments/media-types/&quot;&gt;Media Types Directory&lt;/a&gt;. Interface &lt;a href=&quot;doc&quot;&gt;&lt;code&gt;Doc&lt;/code&gt;&lt;/a&gt; provides two utility operations, &lt;a href=&quot;doc#getReaderForText--&quot;&gt;&lt;code&gt;getReaderForText&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;doc#getStreamForBytes--&quot;&gt;&lt;code&gt;getStreamForBytes()&lt;/code&gt;&lt;/a&gt;, to help a &lt;code&gt;Doc&lt;/code&gt; object's client extract client formatted print data.</source>
          <target state="translated">doc 플레이버의 표현 클래스는 JPS &lt;code&gt;DocPrintJob&lt;/code&gt; 이 클라이언트로부터 일련의 문자 또는 바이트를 얻기 위한 통로입니다 . doc 후 레이 바의 MIME 유형은 문자 또는 바이트 시퀀스를 해석하는 방법을 알려주는 표준 미디어 유형 중 하나입니다. 표준 미디어 유형 목록은 IANA (Internet Assigned Numbers Authority) &lt;a href=&quot;http://www.iana.org/assignments/media-types/&quot;&gt;미디어 유형 디렉토리를 참조하십시오&lt;/a&gt; . &lt;a href=&quot;doc&quot;&gt; &lt;code&gt;Doc&lt;/code&gt; &lt;/a&gt; 인터페이스 는 &lt;code&gt;Doc&lt;/code&gt; 객체의 클라이언트가 클라이언트 형식의 인쇄 데이터를 추출 할 수 있도록 &lt;a href=&quot;doc#getReaderForText--&quot;&gt; &lt;code&gt;getReaderForText&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;doc#getStreamForBytes--&quot;&gt; &lt;code&gt;getStreamForBytes()&lt;/code&gt; &lt;/a&gt; 두 가지 유틸리티 작업을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="a3636bed168062a4be7658e3dce8cd0ecc826622" translate="yes" xml:space="preserve">
          <source>The doc's print data representation object is obtained. Then, an input stream for reading the print data from the print data representation object as a stream of bytes is created and returned. However, if the print data representation object is itself an input stream then the print data representation object is simply returned.</source>
          <target state="translated">문서의 인쇄 데이터 표현 객체가 취득됩니다. 그리고, 바이트 스트림으로서 인쇄 데이터 표현 객체로부터 인쇄 데이터를 판독하기위한 입력 스트림이 생성되어 리턴된다. 그러나, 인쇄 데이터 표현 객체 자체가 입력 스트림이면, 인쇄 데이터 표현 객체가 단순히 반환된다.</target>
        </trans-unit>
        <trans-unit id="3f91aaed4e96bb3e312b02c04ea2422a5607a8e3" translate="yes" xml:space="preserve">
          <source>The doc's print data representation object is used to construct and return a &lt;code&gt;Reader&lt;/code&gt; for reading the print data as a stream of characters from the print data representation object. However, if the print data representation object is itself a &lt;code&gt;Reader&lt;/code&gt; then the print data representation object is simply returned.</source>
          <target state="translated">이 문서의 인쇄 데이터 표현 객체는 인쇄 데이터 표현 객체 로부터 인쇄 데이터를 문자 스트림으로서 판독하기위한 &lt;code&gt;Reader&lt;/code&gt; 를 구성하고 리턴하는데 사용됩니다 . 그러나 인쇄 데이터 표현 객체 자체가 &lt;code&gt;Reader&lt;/code&gt; 인 경우 인쇄 데이터 표현 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="463a55c0ffa26566806c7b3e73748c012f7993a9" translate="yes" xml:space="preserve">
          <source>The doc's print data representation object is used to construct and return a &lt;code&gt;Reader&lt;/code&gt; for reading the print data as a stream of characters from the print data representation object. However, if the print data representation object is itself a &lt;code&gt;Reader&lt;/code&gt;, then the print data representation object is simply returned.</source>
          <target state="translated">문서의 인쇄 데이터 표현 객체는 인쇄 데이터 표현 객체 에서 문자 스트림으로 인쇄 데이터를 읽기 위한 &lt;code&gt;Reader&lt;/code&gt; 를 구성하고 반환하는 데 사용됩니다 . 그러나 인쇄 데이터 표현 객체 자체가 &lt;code&gt;Reader&lt;/code&gt; 이면 인쇄 데이터 표현 객체가 단순히 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="86be973af863aa4f1edbeefcc60b36166183116f" translate="yes" xml:space="preserve">
          <source>The doc's print data representation object is used to construct and return a Reader for reading the print data as a stream of characters from the print data representation object. However, if the print data representation object is itself a Reader, then the print data representation object is simply returned.</source>
          <target state="translated">이 문서의 인쇄 데이터 표현 객체는 인쇄 데이터 표현 객체로부터 인쇄 데이터를 문자 스트림으로서 판독하기위한 리더를 구성하고 리턴하는데 사용됩니다. 그러나 인쇄 데이터 표현 객체 자체가 Reader 인 경우 인쇄 데이터 표현 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9ccc4e81c448a5cbb302d8c00596254a060de008" translate="yes" xml:space="preserve">
          <source>The document base is:</source>
          <target state="translated">문서 기반은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4346f386d24938e54c58e824844367e8315c425a" translate="yes" xml:space="preserve">
          <source>The document cis completely printed.</source>
          <target state="translated">문서 cis가 완전히 인쇄되었습니다.</target>
        </trans-unit>
        <trans-unit id="3c7b4474b120c3ef6b38fc4caf4a6a7e6a45e9cf" translate="yes" xml:space="preserve">
          <source>The document is completely printed.</source>
          <target state="translated">문서가 완전히 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="2758139de4740cc77d6d1134c35fc531823af653" translate="yes" xml:space="preserve">
          <source>The document models only HTML, and makes no attempt to store view attributes in it. The elements are identified by the &lt;code&gt;StyleContext.NameAttribute&lt;/code&gt; attribute, which should always have a value of type &lt;code&gt;HTML.Tag&lt;/code&gt; that identifies the kind of element. Some of the elements (such as comments) are synthesized. The &lt;code&gt;HTMLFactory&lt;/code&gt; uses this attribute to determine what kind of view to build.</source>
          <target state="translated">문서는 HTML 만 모델링하며보기 속성을 저장하지 않습니다. 요소는 &lt;code&gt;StyleContext.NameAttribute&lt;/code&gt; 특성 으로 식별되며 항상 요소의 종류를 식별하는 &lt;code&gt;HTML.Tag&lt;/code&gt; 유형의 값을 가져야합니다 . 일부 요소 (예 : 주석)가 합성됩니다. &lt;code&gt;HTMLFactory&lt;/code&gt; 는이 어떤 종류의 빌드 견해를 확인하려면이 속성을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8d3092f6e9302e57ecb92372f62c2f9a0a55f5d4" translate="yes" xml:space="preserve">
          <source>The document that finished loading.</source>
          <target state="translated">로드가 완료된 문서입니다.</target>
        </trans-unit>
        <trans-unit id="e1e1e129521668afdfb0bc599e4c0a4a6401e2bf" translate="yes" xml:space="preserve">
          <source>The documentation for each non-abstract method in this class describes its implementation in detail. Each of these methods may be overridden if the collection being implemented admits a more efficient implementation.</source>
          <target state="translated">이 클래스의 각 비추 상 메소드에 대한 문서는 해당 구현을 자세히 설명합니다. 구현되고있는 콜렉션이보다 효율적인 구현을 인정하는 경우, 이러한 각 메소드를 오버라이드 (override) 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c064c790f850928f176a0eed5acdd1dac84be16" translate="yes" xml:space="preserve">
          <source>The documentation for each non-abstract method in this class describes its implementation in detail. Each of these methods may be overridden if the map being implemented admits a more efficient implementation.</source>
          <target state="translated">이 클래스의 각 비추 상 메소드에 대한 문서는 해당 구현을 자세히 설명합니다. 구현중인 맵이보다 효율적인 구현을 허용하는 경우 이러한 각 메소드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="855aa4dcd96a9cc0a9c644257d2e51dd5c495453" translate="yes" xml:space="preserve">
          <source>The documentation for the methods contained in this class includes brief descriptions of the</source>
          <target state="translated">이 클래스에 포함 된 메서드에 대한 설명서에는</target>
        </trans-unit>
        <trans-unit id="25e25aacee17cd879d32cfcd3e2fabaae73ccff4" translate="yes" xml:space="preserve">
          <source>The documentation for the methods contained in this class includes briefs description of the</source>
          <target state="translated">이 클래스에 포함 된 메소드에 대한 문서에는 간략한 설명이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebdb4d98b88e2c546269aeb62054e235e5938f82" translate="yes" xml:space="preserve">
          <source>The documentation for the polymorphic algorithms contained in this class generally includes a brief description of the</source>
          <target state="translated">이 클래스에 포함 된 다형성 알고리즘에 대한 설명서에는 일반적으로</target>
        </trans-unit>
        <trans-unit id="fc6c1b4f0d015519ff7242bebe034b39d650617d" translate="yes" xml:space="preserve">
          <source>The domain name and the type key property in the &lt;code&gt;ObjectName&lt;/code&gt; for a &lt;a href=&quot;garbagecollectormxbean&quot;&gt;&lt;code&gt;GarbageCollectorMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">도메인 이름과의 형 키 속성 &lt;code&gt;ObjectName&lt;/code&gt; A에 대한 &lt;a href=&quot;garbagecollectormxbean&quot;&gt; &lt;code&gt;GarbageCollectorMXBean&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e1e1db6291b1775b87fec76a01adaa51114c3dd8" translate="yes" xml:space="preserve">
          <source>The domain name and the type key property in the &lt;code&gt;ObjectName&lt;/code&gt; for a &lt;a href=&quot;garbagecollectormxbean&quot;&gt;&lt;code&gt;GarbageCollectorMXBean&lt;/code&gt;&lt;/a&gt;. The unique &lt;code&gt;ObjectName&lt;/code&gt; for a &lt;code&gt;GarbageCollectorMXBean&lt;/code&gt; can be formed by appending this string with &quot;&lt;code&gt;,name=&lt;/code&gt;</source>
          <target state="translated">도메인 이름과의 형 키 속성 &lt;code&gt;ObjectName&lt;/code&gt; A에 대한 &lt;a href=&quot;garbagecollectormxbean&quot;&gt; &lt;code&gt;GarbageCollectorMXBean&lt;/code&gt; &lt;/a&gt; . 고유 &lt;code&gt;ObjectName&lt;/code&gt; A에 대한 &lt;code&gt;GarbageCollectorMXBean&lt;/code&gt; 는 &quot;이 문자열을 추가하여 형성 될 수있다 &lt;code&gt;,name=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4944bf43276b3652cfdff0513f005a9e29133c95" translate="yes" xml:space="preserve">
          <source>The domain name and the type key property in the &lt;code&gt;ObjectName&lt;/code&gt; for a &lt;a href=&quot;memorymanagermxbean&quot;&gt;&lt;code&gt;MemoryManagerMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">도메인 이름과의 형 키 속성 &lt;code&gt;ObjectName&lt;/code&gt; A의 &lt;a href=&quot;memorymanagermxbean&quot;&gt; &lt;code&gt;MemoryManagerMXBean&lt;/code&gt; 의&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="264fa33727dd99c3d72ccf4cdfba08ce5446f92f" translate="yes" xml:space="preserve">
          <source>The domain name and the type key property in the &lt;code&gt;ObjectName&lt;/code&gt; for a &lt;a href=&quot;memorymanagermxbean&quot;&gt;&lt;code&gt;MemoryManagerMXBean&lt;/code&gt;&lt;/a&gt;. The unique &lt;code&gt;ObjectName&lt;/code&gt; for a &lt;code&gt;MemoryManagerMXBean&lt;/code&gt; can be formed by appending this string with &quot;&lt;code&gt;,name=&lt;/code&gt;</source>
          <target state="translated">도메인 이름과의 형 키 속성 &lt;code&gt;ObjectName&lt;/code&gt; A의 &lt;a href=&quot;memorymanagermxbean&quot;&gt; &lt;code&gt;MemoryManagerMXBean&lt;/code&gt; 의&lt;/a&gt; . 고유 &lt;code&gt;ObjectName&lt;/code&gt; A의 &lt;code&gt;MemoryManagerMXBean&lt;/code&gt; 의는 &quot;이 문자열을 추가하여 형성 될 수있다 &lt;code&gt;,name=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e26208433129940f3ec260ccece8632c102ae455" translate="yes" xml:space="preserve">
          <source>The domain name and the type key property in the &lt;code&gt;ObjectName&lt;/code&gt; for a &lt;a href=&quot;memorypoolmxbean&quot;&gt;&lt;code&gt;MemoryPoolMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">도메인 이름과의 형 키 속성 &lt;code&gt;ObjectName&lt;/code&gt; A에 대한 &lt;a href=&quot;memorypoolmxbean&quot;&gt; &lt;code&gt;MemoryPoolMXBean&lt;/code&gt; 의&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ede1ca279c5f59b6e4da4ff4353367bbe5352a3c" translate="yes" xml:space="preserve">
          <source>The domain name and the type key property in the &lt;code&gt;ObjectName&lt;/code&gt; for a &lt;a href=&quot;memorypoolmxbean&quot;&gt;&lt;code&gt;MemoryPoolMXBean&lt;/code&gt;&lt;/a&gt;. The unique &lt;code&gt;ObjectName&lt;/code&gt; for a &lt;code&gt;MemoryPoolMXBean&lt;/code&gt; can be formed by appending this string with &lt;code&gt;,name=&lt;/code&gt;</source>
          <target state="translated">도메인 이름과의 형 키 속성 &lt;code&gt;ObjectName&lt;/code&gt; A에 대한 &lt;a href=&quot;memorypoolmxbean&quot;&gt; &lt;code&gt;MemoryPoolMXBean&lt;/code&gt; 의&lt;/a&gt; . 고유 &lt;code&gt;ObjectName&lt;/code&gt; A의 &lt;code&gt;MemoryPoolMXBean&lt;/code&gt; 의이 이 문자열을 추가하여 형성 할 수있다 &lt;code&gt;,name=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8158d808147de732c43a706f28d52f744973dc6c" translate="yes" xml:space="preserve">
          <source>The domain.</source>
          <target state="translated">도메인.</target>
        </trans-unit>
        <trans-unit id="76e0da4d6907e3c919488c5b5d05f2916cbfadd1" translate="yes" xml:space="preserve">
          <source>The dot can be placed by either calling &lt;code&gt;setDot&lt;/code&gt; or &lt;code&gt;moveDot&lt;/code&gt;. Setting the dot has the effect of removing any selection that may have previously existed. The dot and mark will be equal. Moving the dot has the effect of creating a selection as the mark is left at whatever position it previously had.</source>
          <target state="translated">점은 &lt;code&gt;setDot&lt;/code&gt; 또는 &lt;code&gt;moveDot&lt;/code&gt; 를 호출하여 배치 할 수 있습니다 . 점을 설정하면 이전에 존재했을 수있는 선택 항목이 제거되는 효과가 있습니다. 점과 표시는 동일합니다. 점을 이동하면 마크가 이전에 있던 위치에 남아 있으므로 선택을 만드는 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a65b7c0c36803800708cedb0df8738ed9f04e50e" translate="yes" xml:space="preserve">
          <source>The double at the buffer's current position</source>
          <target state="translated">버퍼의 현재 위치에서 더블</target>
        </trans-unit>
        <trans-unit id="bb422b89f341960d85df8d0d85c2bf012d8bd2f9" translate="yes" xml:space="preserve">
          <source>The double at the given index</source>
          <target state="translated">주어진 인덱스에서 더블</target>
        </trans-unit>
        <trans-unit id="7544f4bd4a98eece8837aaf5ef9e0593ff2a0e95" translate="yes" xml:space="preserve">
          <source>The double value at the buffer's current position</source>
          <target state="translated">버퍼의 현재 위치의 double 값</target>
        </trans-unit>
        <trans-unit id="f2a46aa41603b7c65b26cfad50f5d84de1e81b27" translate="yes" xml:space="preserve">
          <source>The double value at the given index</source>
          <target state="translated">주어진 인덱스의 double 값</target>
        </trans-unit>
        <trans-unit id="adde14f4d575069814d1f552f1044bb344825c01" translate="yes" xml:space="preserve">
          <source>The doubles between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the double at index</source>
          <target state="translated">버퍼의 현재 위치와 한계 사이의 두 배 (있는 경우)는 버퍼의 시작 부분에 복사됩니다. 즉, 인덱스의 이중</target>
        </trans-unit>
        <trans-unit id="ed7c8f11391a9951a5a01c75e542f471b7646063" translate="yes" xml:space="preserve">
          <source>The drawing buffer</source>
          <target state="translated">드로잉 버퍼</target>
        </trans-unit>
        <trans-unit id="d1099a423cfc599b0cd6fd459c660b63b6f5ea2b" translate="yes" xml:space="preserve">
          <source>The drawing buffer as a volatile image</source>
          <target state="translated">휘발성 이미지로서의 드로잉 버퍼</target>
        </trans-unit>
        <trans-unit id="de0e3d2022fd3c84a644f474224c7b4885daa506" translate="yes" xml:space="preserve">
          <source>The drawing surface of an image (the memory where the image contents actually reside) can be lost or invalidated, causing the contents of that memory to go away. The drawing surface thus needs to be restored or recreated and the contents of that surface need to be re-rendered. VolatileImage provides an interface for allowing the user to detect these problems and fix them when they occur.</source>
          <target state="translated">이미지의 그리기 표면 (이미지 내용이 실제로 상주하는 메모리)이 손실되거나 무효화되어 해당 메모리의 내용이 사라질 수 있습니다. 따라서 드로잉 표면을 복원하거나 재생성해야하며 해당 표면의 내용을 다시 렌더링해야합니다. VolatileImage는 사용자가 이러한 문제를 감지하고 문제가 발생할 때 수정할 수있는 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="193f0da19a6ab2ba163a336c81c3b9463da5dc5b" translate="yes" xml:space="preserve">
          <source>The driver calls this method on all &lt;code&gt;StatementEventListener&lt;/code&gt;s registered on the connection when it detects that a &lt;code&gt;PreparedStatement&lt;/code&gt; is closed.</source>
          <target state="translated">드라이버 는 &lt;code&gt;PreparedStatement&lt;/code&gt; 가 닫 혔음을 감지 할 때 연결에 등록 된 모든 &lt;code&gt;StatementEventListener&lt;/code&gt; 에서이 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="b93de3a89fec1d3bcf026d580b3724256f2e03a7" translate="yes" xml:space="preserve">
          <source>The driver calls this method on all &lt;code&gt;StatementEventListener&lt;/code&gt;s registered on the connection when it detects that a &lt;code&gt;PreparedStatement&lt;/code&gt; is invalid.</source>
          <target state="translated">드라이버 는 &lt;code&gt;PreparedStatement&lt;/code&gt; 가 유효하지 않음을 감지하면 연결에 등록 된 모든 &lt;code&gt;StatementEventListener&lt;/code&gt; 에서이 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="f73796fef393466a6f3dcd939c4a268850630b64" translate="yes" xml:space="preserve">
          <source>The driver calls this method on all &lt;code&gt;StatementEventListener&lt;/code&gt;s registered on the connection when it detects that a &lt;code&gt;PreparedStatement&lt;/code&gt; is invalid. The driver calls this method just before it throws the &lt;code&gt;SQLException&lt;/code&gt;, contained in the given event, to the application.</source>
          <target state="translated">드라이버 는 &lt;code&gt;PreparedStatement&lt;/code&gt; 가 유효하지 않음을 감지 할 때 연결에 등록 된 모든 &lt;code&gt;StatementEventListener&lt;/code&gt; 에서이 메소드를 호출합니다 . 드라이버 는 주어진 이벤트에 포함 된 &lt;code&gt;SQLException&lt;/code&gt; 을 애플리케이션에 던지기 직전에이 메소드를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="167a62d29249bc049b4eda4ac96ea7a290e86e41" translate="yes" xml:space="preserve">
          <source>The driver converts this object to the specified target SQL type before sending it to the database. If the object has a custom mapping (is of a class implementing &lt;code&gt;SQLData&lt;/code&gt;), the driver should call the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; to write the object to the SQL data stream. If, on the other hand, the object is of a class implementing &lt;code&gt;Ref&lt;/code&gt;, &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt;, &lt;code&gt;Struct&lt;/code&gt;, or &lt;code&gt;Array&lt;/code&gt;, the driver should pass it to the database as a value of the corresponding SQL type.</source>
          <target state="translated">드라이버는이 개체를 데이터베이스로 보내기 전에 지정된 대상 SQL 유형으로 변환합니다. 개체에 사용자 지정 매핑이있는 경우 ( &lt;code&gt;SQLData&lt;/code&gt; 를 구현하는 클래스에 속함 ) 드라이버는 &lt;code&gt;SQLData.writeSQL&lt;/code&gt; 메서드 를 호출 하여 개체를 SQL 데이터 스트림에 기록해야합니다. 반면에 객체가 &lt;code&gt;Ref&lt;/code&gt; , &lt;code&gt;Blob&lt;/code&gt; , &lt;code&gt;Clob&lt;/code&gt; , &lt;code&gt;Struct&lt;/code&gt; 또는 &lt;code&gt;Array&lt;/code&gt; 를 구현하는 클래스 인 경우 드라이버는 해당 SQL 유형의 값으로 데이터베이스에 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="bbe5988b15152a891a0eb1aa3317342d1079b41f" translate="yes" xml:space="preserve">
          <source>The driver shall generate a warning if the client info name specified is not recognized by the driver.</source>
          <target state="translated">드라이버는 지정된 클라이언트 정보 이름을 드라이버가 인식하지 못하는 경우 경고를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="204b35dd7701f9af1893f863e23bad238ccdd1cf" translate="yes" xml:space="preserve">
          <source>The driver should throw an &lt;code&gt;SQLException&lt;/code&gt; if it is the right driver to connect to the given URL but has trouble connecting to the database.</source>
          <target state="translated">드라이버는 주어진 URL에 연결하기에 적합한 드라이버이지만 데이터베이스 연결에 문제가있는 경우 &lt;code&gt;SQLException&lt;/code&gt; 을 발생 시켜야 합니다.</target>
        </trans-unit>
        <trans-unit id="32e07cc8d76f90e63fb383530525ccf0977164cd" translate="yes" xml:space="preserve">
          <source>The driver stores the value specified in a suitable location in the database. For example in a special register, session parameter, or system table column. For efficiency the driver may defer setting the value in the database until the next time a statement is executed or prepared. Other than storing the client information in the appropriate place in the database, these methods shall not alter the behavior of the connection in anyway. The values supplied to these methods are used for accounting, diagnostics and debugging purposes only.</source>
          <target state="translated">드라이버는 데이터베이스의 적절한 위치에 지정된 값을 저장합니다. 예를 들어 특수 레지스터, 세션 매개 변수 또는 시스템 테이블 열에 있습니다. 효율성을 위해 드라이버는 다음에 명령문이 실행되거나 준비 될 때까지 데이터베이스의 값 설정을 연기 할 수 있습니다. 클라이언트 정보를 데이터베이스의 적절한 위치에 저장하는 것 외에 이러한 방법은 어쨌든 연결 동작을 변경해서는 안됩니다. 이 메소드에 제공된 값은 회계, 진단 및 디버깅 목적으로 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1eed67186c11043c25faa6d998fda8075a795f28" translate="yes" xml:space="preserve">
          <source>The drop location should be tracked in terms of the column index where new columns should be inserted to accommodate the dropped data.</source>
          <target state="translated">삭제 위치는 삭제 된 데이터를 수용하기 위해 새 열을 삽입해야하는 열 인덱스 측면에서 추적되어야합니다.</target>
        </trans-unit>
        <trans-unit id="45df44ea506f5fc0cd7fad9e97d74e622f69d57c" translate="yes" xml:space="preserve">
          <source>The drop location should be tracked in terms of the column index where new columns should be inserted to accommodate the dropped data. This is useful for components that manage tabular data.</source>
          <target state="translated">삭제 위치는 삭제 된 데이터를 수용하기 위해 새 열을 삽입해야하는 열 인덱스 측면에서 추적되어야합니다. 이는 테이블 형식 데이터를 관리하는 구성 요소에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="daae47272724252b7d647f16007f68546604d671" translate="yes" xml:space="preserve">
          <source>The drop location should be tracked in terms of the index of existing items.</source>
          <target state="translated">드롭 위치는 기존 항목의 인덱스를 기준으로 추적해야합니다.</target>
        </trans-unit>
        <trans-unit id="257f2359e32a0698314d1c9e4730ae020407eb50" translate="yes" xml:space="preserve">
          <source>The drop location should be tracked in terms of the index of existing items. Useful for dropping on items in tables, lists, and trees.</source>
          <target state="translated">드롭 위치는 기존 항목의 인덱스를 기준으로 추적해야합니다. 테이블, 목록 및 트리의 항목을 놓을 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="707491d660e3fb1cf434b0ea458d11353ec7bc88" translate="yes" xml:space="preserve">
          <source>The drop location should be tracked in terms of the position where new data should be inserted.</source>
          <target state="translated">드롭 위치는 새 데이터를 삽입해야하는 위치를 추적해야합니다.</target>
        </trans-unit>
        <trans-unit id="1d881ca2000e4a2acf923cf1e835c2dab259fd0d" translate="yes" xml:space="preserve">
          <source>The drop location should be tracked in terms of the position where new data should be inserted. For components that manage a list of items (list and tree for example), the drop location should indicate the index where new data should be inserted. For text components the location should represent a position between characters. For components that manage tabular data (table for example), the drop location should indicate where to insert new rows, columns, or both, to accommodate the dropped data.</source>
          <target state="translated">드롭 위치는 새 데이터를 삽입해야하는 위치를 추적해야합니다. 항목 목록 (예 : 목록 및 트리)을 관리하는 구성 요소의 경우 드롭 위치는 새 데이터를 삽입해야하는 인덱스를 나타내야합니다. 텍스트 구성 요소의 경우 위치는 문자 사이의 위치를 ​​나타내야합니다. 테이블 형식 데이터 (예 : 테이블)를 관리하는 구성 요소의 경우 드롭 위치는 삭제 된 데이터를 수용하기 위해 새 행, 열 또는 둘 다를 삽입 할 위치를 나타내야합니다.</target>
        </trans-unit>
        <trans-unit id="9888e256243e0765a767a1df7c5c9f6d066ee1f1" translate="yes" xml:space="preserve">
          <source>The drop location should be tracked in terms of the row index where new rows should be inserted to accommodate the dropped data.</source>
          <target state="translated">삭제 위치는 삭제 된 데이터를 수용하기 위해 새 행을 삽입해야하는 행 인덱스 측면에서 추적되어야합니다.</target>
        </trans-unit>
        <trans-unit id="00e8ab39184ff5e82bb5b3f8e968bbd863dab0b3" translate="yes" xml:space="preserve">
          <source>The drop location should be tracked in terms of the row index where new rows should be inserted to accommodate the dropped data. This is useful for components that manage tabular data.</source>
          <target state="translated">삭제 위치는 삭제 된 데이터를 수용하기 위해 새 행을 삽입해야하는 행 인덱스 측면에서 추적되어야합니다. 이는 테이블 형식 데이터를 관리하는 구성 요소에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="862ab88a8a3af67d01c7d54f6bfe40306fb7ef5c" translate="yes" xml:space="preserve">
          <source>The drop mode is only meaningful if this component has a &lt;code&gt;TransferHandler&lt;/code&gt; that accepts drops.</source>
          <target state="translated">드롭 모드는이 컴포넌트에 드롭 을 허용 하는 &lt;code&gt;TransferHandler&lt;/code&gt; 가있는 경우에만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="000ca44958defd94a697efc34b8ebb4f18bd4b1c" translate="yes" xml:space="preserve">
          <source>The drop site accepts the drag.</source>
          <target state="translated">드롭 사이트는 드래그를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="64f2bc100357841d1f41ef6411d538e72ee323ca" translate="yes" xml:space="preserve">
          <source>The drop site associated with the previous dragEnter() invocation has rejected the drag.</source>
          <target state="translated">이전 dragEnter () 호출과 관련된 드롭 사이트가 드래그를 거부했습니다.</target>
        </trans-unit>
        <trans-unit id="f72e5f7ce1f2af5413e925cbda8c75286640d739" translate="yes" xml:space="preserve">
          <source>The drop site associated with the previous dragEnter() invocation is no longer active.</source>
          <target state="translated">이전 dragEnter () 호출과 관련된 드롭 사이트가 더 이상 활성화되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2709cd2285e5bd0543b2ec126d0280717376fa36" translate="yes" xml:space="preserve">
          <source>The drop site is</source>
          <target state="translated">드롭 사이트는</target>
        </trans-unit>
        <trans-unit id="d8771e2d6f193d50ed86aa0b4290d74153d6b50e" translate="yes" xml:space="preserve">
          <source>The drop site is active.</source>
          <target state="translated">드롭 사이트가 활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="3b241690325c5b09414b0509d616aa996508cc14" translate="yes" xml:space="preserve">
          <source>The drop site is still active.</source>
          <target state="translated">드롭 사이트는 여전히 활성 상태입니다.</target>
        </trans-unit>
        <trans-unit id="63a54bfb89b61787b847029d6258cbb24248d64d" translate="yes" xml:space="preserve">
          <source>The dtd.</source>
          <target state="translated">dtd.</target>
        </trans-unit>
        <trans-unit id="f08bd171d0fb78b8eb84ee1ca1586df91c1c8ef9" translate="yes" xml:space="preserve">
          <source>The duplicate node.</source>
          <target state="translated">중복 노드.</target>
        </trans-unit>
        <trans-unit id="9526ddd77fd1c2664ef716f4473239793e28c555" translate="yes" xml:space="preserve">
          <source>The duplicated Range.</source>
          <target state="translated">복제 된 범위입니다.</target>
        </trans-unit>
        <trans-unit id="4404c461672a5583b3569b84bc70161eb9e94fdb" translate="yes" xml:space="preserve">
          <source>The duration amount is measured in terms of the specified unit. Only a subset of units are accepted by this method. The unit must either have an &lt;a href=&quot;temporal/temporalunit#isDurationEstimated()&quot;&gt;exact duration&lt;/a&gt; or be &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;ChronoUnit.DAYS&lt;/code&gt;&lt;/a&gt; which is treated as 24 hours. Other units throw an exception.</source>
          <target state="translated">기간 금액은 지정된 단위로 측정됩니다. 이 방법에서는 단위의 하위 집합 만 허용됩니다. 단위는 &lt;a href=&quot;temporal/temporalunit#isDurationEstimated()&quot;&gt;정확한 기간&lt;/a&gt; 이거나 24 시간으로 처리되는 &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;ChronoUnit.DAYS&lt;/code&gt; &lt;/a&gt; 여야합니다 . 다른 유닛은 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="22e2f67d5a85f4f389e5c72a2bba9662f61ae9ab" translate="yes" xml:space="preserve">
          <source>The duration amount is measured in terms of the specified unit. Only a subset of units are accepted by this method. The unit must either have an &lt;a href=&quot;temporal/temporalunit#isDurationEstimated--&quot;&gt;exact duration&lt;/a&gt; or be &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;ChronoUnit.DAYS&lt;/code&gt;&lt;/a&gt; which is treated as 24 hours. Other units throw an exception.</source>
          <target state="translated">지속 시간은 지정된 단위로 측정됩니다. 이 방법에서는 단위의 하위 집합 만 허용됩니다. 단위는 &lt;a href=&quot;temporal/temporalunit#isDurationEstimated--&quot;&gt;정확한 기간을&lt;/a&gt; 갖거나 24 시간으로 처리되는 &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;ChronoUnit.DAYS&lt;/code&gt; &lt;/a&gt; 여야합니다 . 다른 부대는 예외를 던진다.</target>
        </trans-unit>
        <trans-unit id="6abef57b0f93c82e44d47ecad7e94788f986c7d1" translate="yes" xml:space="preserve">
          <source>The duration is measured in &quot;seconds&quot;, but these are not necessarily identical to the scientific &quot;SI second&quot; definition based on atomic clocks. This difference only impacts durations measured near a leap-second and should not affect most applications. See &lt;a href=&quot;instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt; for a discussion as to the meaning of the second and time-scales.</source>
          <target state="translated">지속 시간은 &quot;초&quot;로 측정되지만 원자 시계를 기반으로 한 과학적인 &quot;SI 초&quot;정의와 반드시 동일하지는 않습니다. 이 차이는 윤초 근처에서 측정 된 지속 시간에만 영향을 미치며 대부분의 응용 프로그램에는 영향을 미치지 않습니다. 초와 시간 척도의 의미에 대한 설명 은 &lt;a href=&quot;instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8204922d650956e148f922400129f8214b214218" translate="yes" xml:space="preserve">
          <source>The duration of the MIDI file in microseconds.</source>
          <target state="translated">MIDI 파일의 지속 시간 (마이크로 초)</target>
        </trans-unit>
        <trans-unit id="c03bf7c9920e33e65541c9be9c9d39e239d5d3f3" translate="yes" xml:space="preserve">
          <source>The east layout constraint (right side of container).</source>
          <target state="translated">동쪽 레이아웃 제약 (컨테이너의 오른쪽).</target>
        </trans-unit>
        <trans-unit id="f25a9849939c38e7bc2f2c68089f6374365e8849" translate="yes" xml:space="preserve">
          <source>The east-resize cursor type.</source>
          <target state="translated">동쪽 크기 조정 커서 유형입니다.</target>
        </trans-unit>
        <trans-unit id="04c5bd038a74170c97a9b286b8ba354e656654fe" translate="yes" xml:space="preserve">
          <source>The editor component used for JComboBox components.</source>
          <target state="translated">JComboBox 구성 요소에 사용되는 편집기 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="1d52af45bf400283a12e6a99ed0a7c35817ccfeb" translate="yes" xml:space="preserve">
          <source>The editor used to edit the data cells of the column.</source>
          <target state="translated">열의 데이터 셀을 편집하는 데 사용되는 편집기입니다.</target>
        </trans-unit>
        <trans-unit id="c7d889c976945f952f96bdc51465dc61af5ccd18" translate="yes" xml:space="preserve">
          <source>The effect of a &lt;code&gt;Copies&lt;/code&gt; attribute with a value of</source>
          <target state="translated">값이 있는 &lt;code&gt;Copies&lt;/code&gt; 속성 의 효과</target>
        </trans-unit>
        <trans-unit id="40b91809d75c12f84a3a56b7343245a17ab755b9" translate="yes" xml:space="preserve">
          <source>The effect of a &lt;code&gt;Finishings&lt;/code&gt; attribute on a multidoc print job (a job with multiple documents) depends on whether all the docs have the same binding specified or whether different docs have different bindings specified, and on the (perhaps defaulted) value of the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">다중 문서 인쇄 작업 (다중 문서가있는 작업)에 대한 &lt;code&gt;Finishings&lt;/code&gt; 속성 의 영향은 모든 문서에 동일한 바인딩이 지정되어 있는지 또는 다른 문서에 다른 바인딩이 지정되어 있는지 여부 및 &lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt; 속성 의 (아마도 기본값 인) 값에 따라 다릅니다. .</target>
        </trans-unit>
        <trans-unit id="2e4ad1670abd46a377c5189a57cb141e0e005f21" translate="yes" xml:space="preserve">
          <source>The effect of a &lt;code&gt;JobSheets&lt;/code&gt; attribute on multidoc print jobs (jobs with multiple documents) may be affected by the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; job attribute, depending on the meaning of the particular &lt;code&gt;JobSheets&lt;/code&gt; value.</source>
          <target state="translated">다중 문서 인쇄 작업 (여러 문서가있는 작업)에 대한 &lt;code&gt;JobSheets&lt;/code&gt; 속성 의 효과 는 특정 &lt;code&gt;JobSheets&lt;/code&gt; 값 의 의미에 따라 &lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt; 작업 속성의 영향을받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eadebb401f33751bae466ce984a5f2ca5aa19e19" translate="yes" xml:space="preserve">
          <source>The effect of a &lt;code&gt;NumberUp&lt;/code&gt; attribute on a multidoc print job (a job with multiple documents) depends on whether all the docs have the same number up values specified or whether different docs have different number up values specified, and on the (perhaps defaulted) value of the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">다중 문서 인쇄 작업 (여러 문서가있는 작업)에 대한 &lt;code&gt;NumberUp&lt;/code&gt; 속성 의 영향은 모든 문서에 동일한 번호 증가 값이 지정되어 있는지 또는 다른 문서에 다른 번호 증가 값이 지정되었는지 여부 및 (아마도 기본값 인) 값에 따라 다릅니다. 의 &lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt; 속성.</target>
        </trans-unit>
        <trans-unit id="4dbdfe8671048f687e079474bfe97c9637f3fafc" translate="yes" xml:space="preserve">
          <source>The effect of a &lt;code&gt;PageRanges&lt;/code&gt; attribute on a multidoc print job (a job with multiple documents) depends on whether all the docs have the same page ranges specified or whether different docs have different page ranges specified, and on the (perhaps defaulted) value of the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">다중 문서 인쇄 작업 (여러 문서가있는 작업)에 대한 &lt;code&gt;PageRanges&lt;/code&gt; 속성 의 효과는 모든 문서에 동일한 페이지 범위가 지정되어 있는지 또는 다른 문서에 다른 페이지 범위가 지정되어 있는지 여부와 (아마도 기본값으로 설정된) 값에 따라 달라집니다. &lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt; 속성입니다.</target>
        </trans-unit>
        <trans-unit id="95cd4c0a22ca1b8cb577ccff6195e5c8fdc3dbba" translate="yes" xml:space="preserve">
          <source>The effect of a &lt;code&gt;SheetCollate&lt;/code&gt; attribute on a multidoc print job (a job with multiple documents) depends on whether all the docs have the same sheet collation specified or whether different docs have different sheet collations specified, and on the (perhaps defaulted) value of the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">다중 문서 인쇄 작업 (여러 문서가있는 작업)에 대한 &lt;code&gt;SheetCollate&lt;/code&gt; 속성 의 영향은 모든 문서에 동일한 시트 정렬이 지정되어 있는지 또는 다른 문서에 다른 시트 정렬이 지정되어 있는지 여부 및 (아마도 기본값으로 설정된) 값에 따라 달라집니다. &lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt; 속성입니다.</target>
        </trans-unit>
        <trans-unit id="35ba2dc3cbfc6d278cd30392bd05074428653272" translate="yes" xml:space="preserve">
          <source>The effect of a &lt;code&gt;Sides&lt;/code&gt; attribute on a multidoc print job (a job with multiple documents) depends on whether all the docs have the same sides values specified or whether different docs have different sides values specified, and on the (perhaps defaulted) value of the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">다중 문서 인쇄 작업 (여러 문서가있는 작업)에 대한 &lt;code&gt;Sides&lt;/code&gt; 속성 의 영향은 모든 문서에 동일한면 값이 지정되어 있는지 또는 다른 문서에 다른면 값이 지정되어 있는지 여부 및 (아마도 기본값으로 설정된) 값에 따라 달라집니다. &lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt; 속성입니다.</target>
        </trans-unit>
        <trans-unit id="46c748aebf80472386e07211c6f120afd16ad95e" translate="yes" xml:space="preserve">
          <source>The effect of a Copies attribute with a value of</source>
          <target state="translated">값이 Copies 인 속성의 효과</target>
        </trans-unit>
        <trans-unit id="99c81a32e6fe7d95ef738fc6e5197a05ba683765" translate="yes" xml:space="preserve">
          <source>The effect of a Finishings attribute on a multidoc print job (a job with multiple documents) depends on whether all the docs have the same binding specified or whether different docs have different bindings specified, and on the (perhaps defaulted) value of the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">다중 문서 인쇄 작업 (여러 문서가있는 작업)에서 마무리 속성의 효과는 모든 문서에 동일한 바인딩이 지정되어 있는지 또는 다른 문서에 다른 바인딩이 지정되어 있는지 여부 및 &lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt; 속성 의 (기본값) 값에 따라 다릅니다. .</target>
        </trans-unit>
        <trans-unit id="ca28a91fe647ee89563cea14ff3cd42c9c4abad6" translate="yes" xml:space="preserve">
          <source>The effect of a JobSheets attribute on multidoc print jobs (jobs with multiple documents) may be affected by the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; job attribute, depending on the meaning of the particular JobSheets value.</source>
          <target state="translated">다중 문서 인쇄 작업 (여러 문서가있는 작업)에서 JobSheets 속성의 효과 는 특정 JobSheets 값의 의미에 따라 &lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt; 작업 속성의 영향을받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4dab0b65cd15fe15dc69345c7a99597f70822a1d" translate="yes" xml:space="preserve">
          <source>The effect of a NumberUp attribute on a multidoc print job (a job with multiple documents) depends on whether all the docs have the same number up values specified or whether different docs have different number up values specified, and on the (perhaps defaulted) value of the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">다중 문서 인쇄 작업 (여러 문서가있는 작업)에 대한 NumberUp 속성의 효과는 모든 문서에 동일한 번호 설정 값이 지정되어 있는지 또는 다른 문서에 다른 번호 설정 값이 지정되어 있는지 (및 기본값) 값에 따라 다릅니다. 의 &lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt; 속성.</target>
        </trans-unit>
        <trans-unit id="70dd2fd6d028415bf0d583d7e912b5a74d86f7de" translate="yes" xml:space="preserve">
          <source>The effect of a PageRanges attribute on a multidoc print job (a job with multiple documents) depends on whether all the docs have the same page ranges specified or whether different docs have different page ranges specified, and on the (perhaps defaulted) value of the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">다중 문서 인쇄 작업 (여러 문서가있는 작업)에서 PageRanges 속성의 효과는 모든 문서에 동일한 페이지 범위가 지정되어 있는지 또는 다른 문서에 다른 페이지 범위가 지정되어 있는지 여부 및 &lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt; 속성.</target>
        </trans-unit>
        <trans-unit id="331d96f910fe20a1bc1e50c890418b0b106bcc13" translate="yes" xml:space="preserve">
          <source>The effect of a SheetCollate attribute on a multidoc print job (a job with multiple documents) depends on whether all the docs have the same sheet collation specified or whether different docs have different sheet collations specified, and on the (perhaps defaulted) value of the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">다중 문서 인쇄 작업 (여러 문서가있는 작업)에 대한 SheetCollate 속성의 효과는 모든 문서에 동일한 시트 데이터 정렬이 지정되어 있는지 또는 다른 문서에 다른 시트 데이터 정렬이 지정되어 있는지 여부 및 기본값 (기본값)에 따라 다릅니다. &lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt; 속성.</target>
        </trans-unit>
        <trans-unit id="ac6b72215081f38ac969887ef91e4267f38b1a3a" translate="yes" xml:space="preserve">
          <source>The effect of a Sides attribute on a multidoc print job (a job with multiple documents) depends on whether all the docs have the same sides values specified or whether different docs have different sides values specified, and on the (perhaps defaulted) value of the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">복수 문서 인쇄 작업 (여러 문서가있는 작업)에 대한면 속성의 효과는 모든 문서에 동일한면 값이 지정되어 있는지 또는 다른 문서에 다른면 값이 지정되어 있는지 여부 및 기본값 (기본값)에 따라 다릅니다. &lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt; 속성.</target>
        </trans-unit>
        <trans-unit id="6829b6046ec27924944931d65a75557aac43dc72" translate="yes" xml:space="preserve">
          <source>The effect of calling this constructor is the same as calling &lt;code&gt;ScriptEngineManager(Thread.currentThread().getContextClassLoader())&lt;/code&gt;.</source>
          <target state="translated">이 생성자를 호출하면 &lt;code&gt;ScriptEngineManager(Thread.currentThread().getContextClassLoader())&lt;/code&gt; 호출과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="52beb7e2bc44bf47a6a16feac7703c69ab3195b7" translate="yes" xml:space="preserve">
          <source>The effect of this method is identical to that of the &lt;a href=&quot;#plus(java.math.MathContext)&quot;&gt;&lt;code&gt;plus(MathContext)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드의 효과는 &lt;a href=&quot;#plus(java.math.MathContext)&quot;&gt; &lt;code&gt;plus(MathContext)&lt;/code&gt; &lt;/a&gt; 메서드 의 효과와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="138373181569e4d6af88b2823e91ca0672622104" translate="yes" xml:space="preserve">
          <source>The effect of this method is identical to that of the &lt;a href=&quot;#round(java.math.MathContext)&quot;&gt;&lt;code&gt;round(MathContext)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드의 효과는 &lt;a href=&quot;#round(java.math.MathContext)&quot;&gt; &lt;code&gt;round(MathContext)&lt;/code&gt; &lt;/a&gt; 메서드 의 효과와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="8f05da664002548278889e82bb2f048a8b692ad3" translate="yes" xml:space="preserve">
          <source>The effect of this method is identical to that of the &lt;a href=&quot;bigdecimal#plus-java.math.MathContext-&quot;&gt;&lt;code&gt;plus(MathContext)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드의 효과는 &lt;a href=&quot;bigdecimal#plus-java.math.MathContext-&quot;&gt; &lt;code&gt;plus(MathContext)&lt;/code&gt; &lt;/a&gt; 메소드 의 효과와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="240610244ce46db1d65c39b9ece6d3e1892f2aea" translate="yes" xml:space="preserve">
          <source>The effect of this method is identical to that of the &lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt;&lt;code&gt;round(MathContext)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드의 효과는 &lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt; &lt;code&gt;round(MathContext)&lt;/code&gt; &lt;/a&gt; 메소드 의 효과와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b0a1f54a3aa4b4cc5dbf26335398ce36efb240bd" translate="yes" xml:space="preserve">
          <source>The effective host name that derives from the request-host does not domain-match the Domain attribute.</source>
          <target state="translated">요청 호스트에서 파생 된 유효 호스트 이름이 도메인 속성과 도메인 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a83bd2291f19a6ddae8b3a53bf655b9ae7b63b0c" translate="yes" xml:space="preserve">
          <source>The element buffer.</source>
          <target state="translated">요소 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="2519e1d22b1908a17bffc689d700f08503741193" translate="yes" xml:space="preserve">
          <source>The element corresponding to applet.</source>
          <target state="translated">애플릿에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="940f3dbf59e4aadfda2d7a53e64c991fd3ee38c4" translate="yes" xml:space="preserve">
          <source>The element corresponding to base.</source>
          <target state="translated">base에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="b709042d483063102d4e4045b53d9f4996cde104" translate="yes" xml:space="preserve">
          <source>The element corresponding to body.</source>
          <target state="translated">본문에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="b15960b47f31ee13c1839cfd38531774816b4682" translate="yes" xml:space="preserve">
          <source>The element corresponding to head.</source>
          <target state="translated">head에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="c6a54d7fc0d9962ab28abaa0eae3f7d7e96d8d54" translate="yes" xml:space="preserve">
          <source>The element corresponding to html.</source>
          <target state="translated">html에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="8afe1c4608a367272c195f5d2f28493eb3d4432c" translate="yes" xml:space="preserve">
          <source>The element corresponding to isindex.</source>
          <target state="translated">isindex에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="6dc311d81d016049caa3f7b7865bb9de333389de" translate="yes" xml:space="preserve">
          <source>The element corresponding to meta.</source>
          <target state="translated">메타에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="2520fe9f23d6e682460e9baf1c4818d9c884c3f9" translate="yes" xml:space="preserve">
          <source>The element corresponding to p.</source>
          <target state="translated">p에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="e7f755b9ba7bbee4fa24b0fcbfbdfcddd66840a1" translate="yes" xml:space="preserve">
          <source>The element corresponding to param.</source>
          <target state="translated">param에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="a69b93a0e99a07d5e1e94fc07454698c770c8fc7" translate="yes" xml:space="preserve">
          <source>The element corresponding to pcdata.</source>
          <target state="translated">pcdata에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="4a84ab7c6512ac4102a6eb548089a47fd917fb78" translate="yes" xml:space="preserve">
          <source>The element corresponding to title.</source>
          <target state="translated">제목에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="7fee7e2ed9716e23ed3e74ff44c29f64137c1752" translate="yes" xml:space="preserve">
          <source>The element created to represent the gap is not resizable.</source>
          <target state="translated">간격을 나타 내기 위해 생성 된 요소는 크기를 조정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ef1287adab0e13a0ff06779eeb94f0a12182a000" translate="yes" xml:space="preserve">
          <source>The element index</source>
          <target state="translated">요소 인덱스</target>
        </trans-unit>
        <trans-unit id="68ee2cf56c8340507a7ae57ff205cc890aa8b080" translate="yes" xml:space="preserve">
          <source>The element is removed from its parent element, as well as the text in the range identified by the element. If the element isn't associated with the document, &lt;code&gt;
 IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">요소가 해당 요소로 식별되는 범위의 텍스트뿐만 아니라 상위 요소에서 제거됩니다. 요소가 문서와 연결되지 않은 경우 &lt;code&gt; IllegalArgumentException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c5eab0e005a826c44a4d2502eec8455a3005cdea" translate="yes" xml:space="preserve">
          <source>The element node passed to &lt;code&gt;startElement&lt;/code&gt; for filtering will include all of the Element's attributes, but none of the children nodes. The Element may not yet be in place in the document being constructed (it may not have a parent node.)</source>
          <target state="translated">필터링 을 위해 &lt;code&gt;startElement&lt;/code&gt; 에 전달 된 요소 노드 는 요소의 모든 속성을 포함하지만 하위 노드는 포함하지 않습니다. 구성중인 문서에 요소가 아직 없을 수 있습니다 (부모 노드가 없을 수 있음).</target>
        </trans-unit>
        <trans-unit id="a0e29d3e5bbd6980e4d727c47aaf30d7e1cf71b6" translate="yes" xml:space="preserve">
          <source>The element type</source>
          <target state="translated">요소 유형</target>
        </trans-unit>
        <trans-unit id="8528845c5c4df26720cbcf625a610c0d09f4d337" translate="yes" xml:space="preserve">
          <source>The elements in the returned array are not sorted and are not in any particular order.</source>
          <target state="translated">반환 된 배열의 요소는 정렬되지 않으며 특정 순서가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="4747e5a9fa1beb70aa3841d35d6509a1676789ff" translate="yes" xml:space="preserve">
          <source>The elements of the returned iterator are the &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStores&lt;/code&gt;&lt;/a&gt; for this file system. The order of the elements is not defined and the file stores may change during the lifetime of the Java virtual machine. When an I/O error occurs, perhaps because a file store is not accessible, then it is not returned by the iterator.</source>
          <target state="translated">리턴 된 반복자의 요소는 이 파일 시스템의 파일 &lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStores&lt;/code&gt; &lt;/a&gt; 입니다. 요소의 순서는 정의되어 있지 않으며 파일 저장소는 Java 가상 머신의 수명 동안 변경 될 수 있습니다. 파일 저장소에 액세스 할 수 없기 때문에 I / O 오류가 발생하면 반복자에 의해 리턴되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f2a5c8fedf95db842d1e9b72c4be4ce32e900dce" translate="yes" xml:space="preserve">
          <source>The elements of the stream are &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; objects that are obtained as if by &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;. Some file systems maintain special links to the directory itself and the directory's parent directory. Entries representing these links are not included.</source>
          <target state="translated">스트림의 요소 는 디렉토리 항목의 이름을 &lt;code&gt;dir&lt;/code&gt; 에 대해 &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 하여 얻은 것처럼 얻은 &lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 객체입니다 . 일부 파일 시스템은 디렉토리 자체와 디렉토리의 상위 디렉토리에 대한 특수 링크를 유지합니다. 이러한 링크를 나타내는 항목은 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a60448268f4f78f386f7f84f2c5f1a05d7a5a619" translate="yes" xml:space="preserve">
          <source>The elements of the stream are &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; objects that are obtained as if by &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;. Some file systems maintain special links to the directory itself and the directory's parent directory. Entries representing these links are not included.</source>
          <target state="translated">스트림의 요소는 &lt;code&gt;dir&lt;/code&gt; 에 대한 디렉토리 항목 이름을 &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 하여 얻은 것처럼 &lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 객체입니다 . 일부 파일 시스템은 디렉토리 자체와 디렉토리의 상위 디렉토리에 대한 특수 링크를 유지합니다. 이러한 링크를 나타내는 항목은 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fbc2ae2f21b51f8bf47adefd8539ccb40f888682" translate="yes" xml:space="preserve">
          <source>The elements returned by the iterator are in no specific order. Some file systems maintain special links to the directory itself and the directory's parent directory. Entries representing these links are not returned by the iterator.</source>
          <target state="translated">반복자가 반환 한 요소는 특정 순서가 아닙니다. 일부 파일 시스템은 디렉토리 자체와 디렉토리의 상위 디렉토리에 대한 특수 링크를 유지합니다. 이 링크를 나타내는 항목은 반복자가 리턴하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c5245362c3e765b467877703d73efa2747ce4f12" translate="yes" xml:space="preserve">
          <source>The eliding of side-effects may also be surprising. With the exception of terminal operations &lt;a href=&quot;stream#forEach(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stream#forEachOrdered(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEachOrdered&lt;/code&gt;&lt;/a&gt;, side-effects of behavioral parameters may not always be executed when the stream implementation can optimize away the execution of behavioral parameters without affecting the result of the computation. (For a specific example see the API note documented on the &lt;a href=&quot;stream#count()&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; operation.)</source>
          <target state="translated">부작용을 제거하는 것도 놀랍습니다. &lt;a href=&quot;stream#forEach(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEach&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;stream#forEachOrdered(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEachOrdered&lt;/code&gt; &lt;/a&gt; 터미널 작업을 제외하고 , 스트림 구현이 계산 결과에 영향을주지 않고 동작 매개 변수의 실행을 최적화 할 수있을 때 동작 매개 변수의 부작용이 항상 실행되는 것은 아닙니다. (구체적인 예는 &lt;a href=&quot;stream#count()&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; 작업 에 대한 API 참고 사항을 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="f9ef353251d48288ffd3652f1f37c47124f1b9d2" translate="yes" xml:space="preserve">
          <source>The embedded code constructs &lt;code&gt;(?{&lt;/code&gt;</source>
          <target state="translated">임베디드 코드는 &lt;code&gt;(?{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0c2d1ad066e6739f583f355da9a4f5e3e8c69ad" translate="yes" xml:space="preserve">
          <source>The embedded comment syntax &lt;code&gt;(?#comment)&lt;/code&gt;, and</source>
          <target state="translated">포함 된 주석 구문 &lt;code&gt;(?#comment)&lt;/code&gt; 및</target>
        </trans-unit>
        <trans-unit id="2ac9f6f69ec96dbd7449b245c030db25a6bac57e" translate="yes" xml:space="preserve">
          <source>The embedded exception, or null if there is none.</source>
          <target state="translated">포함 된 예외 또는없는 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="6a88bf55348203ef6e9f6286a971b3e85a1f2f13" translate="yes" xml:space="preserve">
          <source>The emitted notification.</source>
          <target state="translated">생성 된 알림.</target>
        </trans-unit>
        <trans-unit id="cd73f61ba2f2a8d8e35835869b36bea5b5d6c871" translate="yes" xml:space="preserve">
          <source>The empty (default) prefix will be included in this enumeration; note that this behaviour differs from that of &lt;a href=&quot;#getPrefix(java.lang.String)&quot;&gt;&lt;code&gt;getPrefix(java.lang.String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getPrefixes()&quot;&gt;&lt;code&gt;getPrefixes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">빈 (기본값) 접두사가이 열거에 포함됩니다. 이 동작은 &lt;a href=&quot;#getPrefix(java.lang.String)&quot;&gt; &lt;code&gt;getPrefix(java.lang.String)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getPrefixes()&quot;&gt; &lt;code&gt;getPrefixes()&lt;/code&gt; &lt;/a&gt; 의 동작과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="6fac00ff3e5dd709823e6827990f282ac187b12b" translate="yes" xml:space="preserve">
          <source>The empty configuration</source>
          <target state="translated">빈 구성</target>
        </trans-unit>
        <trans-unit id="0d8c137901195921a3c750b93c7e832048c4f6c6" translate="yes" xml:space="preserve">
          <source>The empty layer</source>
          <target state="translated">빈 레이어</target>
        </trans-unit>
        <trans-unit id="86b78069639432e85ebb753167970567fe288386" translate="yes" xml:space="preserve">
          <source>The empty list (immutable).</source>
          <target state="translated">빈 목록 (불변).</target>
        </trans-unit>
        <trans-unit id="0cb0b0d6ef2409e36ed9fe34e19950b0163a49d3" translate="yes" xml:space="preserve">
          <source>The empty list (immutable). This list is serializable.</source>
          <target state="translated">빈리스트 (불변) 이 목록은 직렬화 가능합니다.</target>
        </trans-unit>
        <trans-unit id="c62c60011920396412118a2dcae4cc60975b530e" translate="yes" xml:space="preserve">
          <source>The empty map (immutable).</source>
          <target state="translated">빈지도 (불변).</target>
        </trans-unit>
        <trans-unit id="88137698e00d8f0652a82fe6508b16749429979f" translate="yes" xml:space="preserve">
          <source>The empty map (immutable). This map is serializable.</source>
          <target state="translated">빈 맵 (불변). 이 맵은 직렬화 가능합니다.</target>
        </trans-unit>
        <trans-unit id="dd6618e9e18428a488fdb1a7a601d5c01961fd42" translate="yes" xml:space="preserve">
          <source>The empty set (immutable).</source>
          <target state="translated">빈 세트 (불변).</target>
        </trans-unit>
        <trans-unit id="180ebf25843521d97d4f2d04fea45f85b9208bbe" translate="yes" xml:space="preserve">
          <source>The empty set (immutable). This set is serializable.</source>
          <target state="translated">빈 세트 (불변). 이 세트는 직렬화 가능합니다.</target>
        </trans-unit>
        <trans-unit id="aab0ce820465533937604e4176265722b31887ea" translate="yes" xml:space="preserve">
          <source>The empty spliterator reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;. Calls to &lt;a href=&quot;spliterator#trySplit()&quot;&gt;&lt;code&gt;Spliterator.trySplit()&lt;/code&gt;&lt;/a&gt; always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">빈 spliterator 보고서 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; 을&lt;/a&gt; . &lt;a href=&quot;spliterator#trySplit()&quot;&gt; &lt;code&gt;Spliterator.trySplit()&lt;/code&gt; &lt;/a&gt; 호출은 항상 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="04710e8ea7ef328080b66f61a16fa7d06fca71ab" translate="yes" xml:space="preserve">
          <source>The empty spliterator reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;. Calls to &lt;a href=&quot;spliterator#trySplit--&quot;&gt;&lt;code&gt;Spliterator.trySplit()&lt;/code&gt;&lt;/a&gt; always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">빈 spliterator 보고서 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; 을&lt;/a&gt; . &lt;a href=&quot;spliterator#trySplit--&quot;&gt; &lt;code&gt;Spliterator.trySplit()&lt;/code&gt; &lt;/a&gt; 호출은 항상 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1d039a5d9f2e66523b58ada74e51fb8c6246d746" translate="yes" xml:space="preserve">
          <source>The enabled/disabled state of the functionality. Instead of having to separately disable the menu item and the toolbar button, the application can disable the function that implements this interface. All components which are registered as listeners for the state change then know to disable event generation for that item and to modify the display accordingly.</source>
          <target state="translated">기능의 활성화 / 비활성화 상태입니다. 메뉴 항목과 도구 모음 버튼을 개별적으로 비활성화하는 대신 응용 프로그램은이 인터페이스를 구현하는 기능을 비활성화 할 수 있습니다. 상태 변경에 대한 리스너로 등록 된 모든 구성 요소는 해당 항목에 대한 이벤트 생성을 비활성화하고 그에 따라 디스플레이를 수정하는 것을 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c432a9e10bc929fcac65f48c8ec49c62fe540ca" translate="yes" xml:space="preserve">
          <source>The encapsulated &lt;code&gt;Transferable&lt;/code&gt; object.</source>
          <target state="translated">캡슐화 된 &lt;code&gt;Transferable&lt;/code&gt; 개체입니다.</target>
        </trans-unit>
        <trans-unit id="6ec432977679b8c4ab400647f6119da604c9cebb" translate="yes" xml:space="preserve">
          <source>The encapsulated exception, or null if there is none.</source>
          <target state="translated">캡슐화 된 예외 또는없는 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="a4258855a05f3c4988c5d23737a7b0335e728c12" translate="yes" xml:space="preserve">
          <source>The encapsulated object is unsealed (using the given Cipher, assuming that the Cipher is already properly initialized) and de-serialized, before it is returned.</source>
          <target state="translated">캡슐화 된 객체는 봉인되지 않은 상태로 (암호가 이미 올바르게 초기화되었다고 가정하여 주어진 암호를 사용하여) 직렬화 해제되어 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4cab56e097451f176a982ee92d2d74b62d281b8b" translate="yes" xml:space="preserve">
          <source>The encapsulated object is unsealed and de-serialized, before it is returned.</source>
          <target state="translated">캡슐화 된 객체는 반환되기 전에 봉인 해제되고 역 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="c717ea61ef4986b72624cfc5093e3af1180fcd4d" translate="yes" xml:space="preserve">
          <source>The encoded representation is &lt;code&gt;null&lt;/code&gt; if and only if the MIME type &lt;code&gt;String&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">인코딩 된 표현은 &lt;code&gt;null&lt;/code&gt; 만 MIME 타입 경우 경우 &lt;code&gt;String&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12867f82c9bd7777148afd28c5873c849dbc0d0d" translate="yes" xml:space="preserve">
          <source>The encoded representation is &lt;code&gt;null&lt;/code&gt; if and only if the specified &lt;code&gt;DataFlavor&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or its MIME type &lt;code&gt;String&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">부호화 된 표현이다 &lt;code&gt;null&lt;/code&gt; 지정된 경우에만, &lt;code&gt;DataFlavor&lt;/code&gt; 가 있다 &lt;code&gt;null&lt;/code&gt; 이나 MIME 타입 &lt;code&gt;String&lt;/code&gt; 인 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92c290d3d9692fd83e1c4ddfbceb045df9e846dc" translate="yes" xml:space="preserve">
          <source>The encoded representations for two non-&lt;code&gt;null&lt;/code&gt; MIME type &lt;code&gt;String&lt;/code&gt;s are equal if and only if these &lt;code&gt;String&lt;/code&gt;s are equal according to &lt;code&gt;String.equals(Object)&lt;/code&gt;</source>
          <target state="translated">두 개의 &lt;code&gt;null&lt;/code&gt; 이 아닌 MIME 유형 &lt;code&gt;String&lt;/code&gt; 에 대한 인코딩 된 표현은 이러한 &lt;code&gt;String&lt;/code&gt; 이 &lt;code&gt;String.equals(Object)&lt;/code&gt; 에 따라 동일한 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="dbd33f379a5eee5c81ca53b9290cd4a34ef73872" translate="yes" xml:space="preserve">
          <source>The encoded representations for two non-&lt;code&gt;null&lt;/code&gt;&lt;code&gt;DataFlavor&lt;/code&gt;s with non-&lt;code&gt;null&lt;/code&gt; MIME type &lt;code&gt;String&lt;/code&gt;s are equal if and only if the MIME type &lt;code&gt;String&lt;/code&gt;s of these &lt;code&gt;DataFlavor&lt;/code&gt;s are equal according to &lt;code&gt;String.equals(Object)&lt;/code&gt;</source>
          <target state="translated">위한 인코딩 표현 개의 비 - &lt;code&gt;null&lt;/code&gt; &lt;code&gt;DataFlavor&lt;/code&gt; S 비와 &lt;code&gt;null&lt;/code&gt; MIME 타입의 &lt;code&gt;String&lt;/code&gt; 들있는 동일한 경우에만 MIME 타입의 경우 &lt;code&gt;String&lt;/code&gt; 의 이들 &lt;code&gt;DataFlavor&lt;/code&gt; 에있어서 동일하다 S &lt;code&gt;String.equals(Object)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="199c2a38ff6aa6fabd32c8a3c9f3caf0eb39b53e" translate="yes" xml:space="preserve">
          <source>The encoding input P whose value equals byte[0].</source>
          <target state="translated">값이 byte [0]과 같은 인코딩 입력 P</target>
        </trans-unit>
        <trans-unit id="866e1ec28413dca3ae1e71d9b54008e333dbcfd0" translate="yes" xml:space="preserve">
          <source>The encoding must be a string acceptable for an XML encoding declaration (see section 4.3.3 of the XML 1.0 recommendation).</source>
          <target state="translated">인코딩은 XML 인코딩 선언에 허용되는 문자열이어야합니다 (XML 1.0 권장 사항의 섹션 4.3.3 참조).</target>
        </trans-unit>
        <trans-unit id="cfbc32ba92aba58363c14e07072f16236de40055" translate="yes" xml:space="preserve">
          <source>The encoding name. May be null, which indicates the default encoding should be used.</source>
          <target state="translated">인코딩 이름 기본 인코딩을 사용해야 함을 나타내는 null 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e05ebaa86b65502750822b548c59b7f59f18d9d5" translate="yes" xml:space="preserve">
          <source>The encoding scheme of this encoder instance is unaffected by this invocation. The returned encoder instance should be used for non-padding encoding operation.</source>
          <target state="translated">이 인코더 인스턴스의 인코딩 체계는이 호출의 영향을받지 않습니다. 리턴 된 인코더 인스턴스는 비 패딩 인코딩 조작에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="00a91fa3e606aaba9d4e25afa9d2cef72d5fc178" translate="yes" xml:space="preserve">
          <source>The encoding should be set before any &lt;code&gt;LogRecords&lt;/code&gt; are written to the &lt;code&gt;Handler&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LogRecords&lt;/code&gt; 가 &lt;code&gt;Handler&lt;/code&gt; 에 쓰여 지기 전에 인코딩을 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5b190dbd3c0542516c30fbdf092dfc2c5e09f344" translate="yes" xml:space="preserve">
          <source>The encoding, or null if none was supplied.</source>
          <target state="translated">인코딩 또는 제공되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="60091846e46c40257fd7a742d4619bbc19aa8175" translate="yes" xml:space="preserve">
          <source>The end argument must be greater than or equal to &lt;code&gt;start&lt;/code&gt;, and less than or equal to the length of s.</source>
          <target state="translated">end 인수는 &lt;code&gt;start&lt;/code&gt; 보다 크거나 같아야하고 s의 길이보다 작거나 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="bf46fea03f0ce50879440b927adbb4563eb3af22" translate="yes" xml:space="preserve">
          <source>The end index of the text sequence.</source>
          <target state="translated">텍스트 시퀀스의 끝 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="711a09ed66a073766bca3e7b6ef36bcbe9e2bcfa" translate="yes" xml:space="preserve">
          <source>The end of a line</source>
          <target state="translated">줄의 끝</target>
        </trans-unit>
        <trans-unit id="2b7cb3f2f726e71310a51789affbad5826f447fa" translate="yes" xml:space="preserve">
          <source>The end of the input</source>
          <target state="translated">입력의 끝</target>
        </trans-unit>
        <trans-unit id="83ac7dbc36de6be08d58b4bbfe9e0a56933b8da8" translate="yes" xml:space="preserve">
          <source>The end of the input but for the final &lt;a href=&quot;#lt&quot;&gt;terminator&lt;/a&gt;, if any</source>
          <target state="translated">입력의 끝이지만 최종 &lt;a href=&quot;#lt&quot;&gt;터미네이터&lt;/a&gt; (있는 경우)</target>
        </trans-unit>
        <trans-unit id="ef4414b7c806493fb5d10ea630e15048e7a0b572" translate="yes" xml:space="preserve">
          <source>The end of the previous match</source>
          <target state="translated">이전 경기의 끝</target>
        </trans-unit>
        <trans-unit id="6c7e56efe7ee716d847eb7e48baf1454323b7b72" translate="yes" xml:space="preserve">
          <source>The end-of-line sequence of characters to be used in the XML being written out.</source>
          <target state="translated">작성되는 XML에서 사용할 줄 끝 문자 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="f5874801e6c5636cae932aeda15c85b797d5bab2" translate="yes" xml:space="preserve">
          <source>The end-of-line sequence of characters to be used in the XML being written out. Any string is supported, but XML treats only a certain set of characters sequence as end-of-line (See section 2.11, &quot;End-of-Line Handling&quot; in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;], if the serialized content is XML 1.0 or section 2.11, &quot;End-of-Line Handling&quot; in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml11-20040204/&quot;&gt;XML 1.1&lt;/a&gt;], if the serialized content is XML 1.1). Using other character sequences than the recommended ones can result in a document that is either not serializable or not well-formed).</source>
          <target state="translated">작성되는 XML에서 사용할 줄 끝 문자 시퀀스입니다. 모든 문자열이 지원되지만 XML은 특정 문자 시퀀스 만 줄 끝으로 처리 합니다 (직렬화 된 내용이 XML 1.0 또는 섹션 2.11 인 경우 [ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt; ]의 섹션 2.11, &quot;줄 끝 처리&quot; 참조). , 직렬화 된 컨텐츠가 XML 1.1 인 경우 [ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml11-20040204/&quot;&gt;XML 1.1&lt;/a&gt; ] 의 &quot;End-of-Line Handling&quot; ). 권장되는 문자 시퀀스 이외의 다른 문자 시퀀스를 사용하면 문서가 직렬화되지 않거나 형식이 올바르지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8cee6a32786cc3670324944910a406a959bb6ac" translate="yes" xml:space="preserve">
          <source>The enforcement of argument correctness means that the retrieved set of recorded values obtained from a &lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; source instance may not be a legal set of arguments for this constructor due to arithmetic overflow of the source's recorded count of values. The consistent argument conditions are not sufficient to prevent the creation of an internally inconsistent instance. An example of such a state would be an instance with: &lt;code&gt;count&lt;/code&gt; = 2, &lt;code&gt;min&lt;/code&gt; = 1, &lt;code&gt;max&lt;/code&gt; = 2, and &lt;code&gt;sum&lt;/code&gt; = 0.</source>
          <target state="translated">인수 정확성의 적용은 &lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; 소스 인스턴스 에서 가져온 기록 된 값의 검색된 집합 이 소스의 기록 된 값 수의 산술 오버플로로 인해이 생성자에 대해 유효한 인수 집합이 아닐 수 있음을 의미합니다. 일관된 인수 조건은 내부적으로 일관되지 않은 인스턴스 생성을 방지하기에 충분하지 않습니다. 이러한 상태의 예는 &lt;code&gt;count&lt;/code&gt; = 2, &lt;code&gt;min&lt;/code&gt; = 1, &lt;code&gt;max&lt;/code&gt; = 2 및 &lt;code&gt;sum&lt;/code&gt; = 0 인 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="c606e16f292233b1e474bd07704d84ec483f395a" translate="yes" xml:space="preserve">
          <source>The enforcement of argument correctness means that the retrieved set of recorded values obtained from a &lt;code&gt;IntSummaryStatistics&lt;/code&gt; source instance may not be a legal set of arguments for this constructor due to arithmetic overflow of the source's recorded count of values. The consistent argument conditions are not sufficient to prevent the creation of an internally inconsistent instance. An example of such a state would be an instance with: &lt;code&gt;count&lt;/code&gt; = 2, &lt;code&gt;min&lt;/code&gt; = 1, &lt;code&gt;max&lt;/code&gt; = 2, and &lt;code&gt;sum&lt;/code&gt; = 0.</source>
          <target state="translated">인수 정확성의 적용은 &lt;code&gt;IntSummaryStatistics&lt;/code&gt; 소스 인스턴스 에서 가져온 기록 된 값의 검색된 집합 이 소스의 기록 된 값 수의 산술 오버플로로 인해이 생성자에 대한 유효한 인수 집합이 아닐 수 있음을 의미합니다. 일관된 인수 조건은 내부적으로 일관되지 않은 인스턴스 생성을 방지하기에 충분하지 않습니다. 이러한 상태의 예는 &lt;code&gt;count&lt;/code&gt; = 2, &lt;code&gt;min&lt;/code&gt; = 1, &lt;code&gt;max&lt;/code&gt; = 2 및 &lt;code&gt;sum&lt;/code&gt; = 0 인 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="2d39c09a2e8244ac39cb65479a835cbdcf160d57" translate="yes" xml:space="preserve">
          <source>The enforcement of argument correctness means that the retrieved set of recorded values obtained from a &lt;code&gt;LongSummaryStatistics&lt;/code&gt; source instance may not be a legal set of arguments for this constructor due to arithmetic overflow of the source's recorded count of values. The consistent argument conditions are not sufficient to prevent the creation of an internally inconsistent instance. An example of such a state would be an instance with: &lt;code&gt;count&lt;/code&gt; = 2, &lt;code&gt;min&lt;/code&gt; = 1, &lt;code&gt;max&lt;/code&gt; = 2, and &lt;code&gt;sum&lt;/code&gt; = 0.</source>
          <target state="translated">인수 정확성의 적용은 &lt;code&gt;LongSummaryStatistics&lt;/code&gt; 소스 인스턴스 에서 가져온 기록 된 값의 검색된 집합 이 소스의 기록 된 값 수의 산술 오버플로로 인해이 생성자에 대해 유효한 인수 집합이 아닐 수 있음을 의미합니다. 일관된 인수 조건은 내부적으로 일관되지 않은 인스턴스 생성을 방지하기에 충분하지 않습니다. 이러한 상태의 예는 &lt;code&gt;count&lt;/code&gt; = 2, &lt;code&gt;min&lt;/code&gt; = 1, &lt;code&gt;max&lt;/code&gt; = 2 및 &lt;code&gt;sum&lt;/code&gt; = 0 인 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="4fcef1061367fe496df98fb6e285795bde375b7d" translate="yes" xml:space="preserve">
          <source>The engine to handle scripts with this extension. Returns &lt;code&gt;null&lt;/code&gt; if not found.</source>
          <target state="translated">이 확장으로 스크립트를 처리하는 엔진입니다. 찾을 수 없으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c8026a80c8952092d49eb36b05845480d8dbedd6" translate="yes" xml:space="preserve">
          <source>The engine to handle scripts with this mime type. Returns &lt;code&gt;null&lt;/code&gt; if not found.</source>
          <target state="translated">이 MIME 유형으로 스크립트를 처리하는 엔진입니다. 찾을 수 없으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b5d9018d772f1115a9de50a7ae9129bb12d2e335" translate="yes" xml:space="preserve">
          <source>The entire name is converted to lower case using &lt;code&gt;String.toLowerCase(Locale.US)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String.toLowerCase(Locale.US)&lt;/code&gt; 사용하여 전체 이름이 소문자로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="276a2e35ec48a4b15619c06e947a59549e48ad49" translate="yes" xml:space="preserve">
          <source>The entire name is converted to upper case using &lt;code&gt;String.toUpperCase(Locale.US)&lt;/code&gt;</source>
          <target state="translated">전체 이름은 &lt;code&gt;String.toUpperCase(Locale.US)&lt;/code&gt; 사용하여 대문자 로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="cf2cf0cb7e58f2504fba1a3138d73c6049b494a8" translate="yes" xml:space="preserve">
          <source>The entire state of the object is compared.</source>
          <target state="translated">객체의 전체 상태가 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="02495081407ad5f1e8ae7f9b69d8c32662b479c8" translate="yes" xml:space="preserve">
          <source>The entity's name</source>
          <target state="translated">법인의 이름</target>
        </trans-unit>
        <trans-unit id="99f640bd2d4699e8124e99b2dab4320d559a8e61" translate="yes" xml:space="preserve">
          <source>The entity's public identifier, or null if none was given</source>
          <target state="translated">엔티티의 공용 식별자 또는 제공되지 않은 경우 null</target>
        </trans-unit>
        <trans-unit id="5fa432b053c3ddb33759dbc8f113eb9ecd1017aa" translate="yes" xml:space="preserve">
          <source>The entity's system identifier.</source>
          <target state="translated">엔티티의 시스템 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="47c0130f063f1660f8c0d872244fda8cbf918c22" translate="yes" xml:space="preserve">
          <source>The entry that was removed.</source>
          <target state="translated">제거 된 항목입니다.</target>
        </trans-unit>
        <trans-unit id="24ed1ad9a30ff55b0b4b2ee5dac0d716d19f6f9b" translate="yes" xml:space="preserve">
          <source>The entrySet returned from a &lt;code&gt;RenderingHints&lt;/code&gt; object is not modifiable.</source>
          <target state="translated">&lt;code&gt;RenderingHints&lt;/code&gt; 개체 에서 반환 된 entrySet 은 수정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f47478516478638d15798cd13d73e1f50e6e86d6" translate="yes" xml:space="preserve">
          <source>The enum-based ranges are a super set of the bit mask-based ones.</source>
          <target state="translated">열거 형 기반 범위는 비트 마스크 기반 범위의 상위 집합입니다.</target>
        </trans-unit>
        <trans-unit id="18f0442bd8b0a54d4c0285c94f5620f08066be05" translate="yes" xml:space="preserve">
          <source>The enumeration class &lt;code&gt;java.nio.ByteOrder&lt;/code&gt; is used to specify the byte order. A value of &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; specifies so-called big-endian or network byte order, in which the high-order byte comes first. Motorola and Sparc processors store data in this format, while Intel processors store data in the reverse &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; order.</source>
          <target state="translated">열거 클래스 &lt;code&gt;java.nio.ByteOrder&lt;/code&gt; 는 바이트 순서를 지정하는 데 사용됩니다. &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; 의 값은 소위 빅 엔디안 또는 네트워크 바이트 순서를 지정하며, 상위 바이트가 우선합니다. Motorola 및 Sparc 프로세서는이 형식으로 데이터를 저장하지만 Intel 프로세서는 역 &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; 순서로 데이터를 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="93a83d4b2463802ed63b71007b3d2a201c1657a1" translate="yes" xml:space="preserve">
          <source>The enumeration singleton value stored at index</source>
          <target state="translated">인덱스에 저장된 열거 형 싱글 톤 값</target>
        </trans-unit>
        <trans-unit id="447fe37c6bb84b1b519d70e69f405d19fe3bb27a" translate="yes" xml:space="preserve">
          <source>The envelope input tray in the printer.</source>
          <target state="translated">프린터의 봉투 입력 용지함.</target>
        </trans-unit>
        <trans-unit id="2812b194ea7bc99714514b3dd40839ac66432f4a" translate="yes" xml:space="preserve">
          <source>The environment associated with this InitialContext.</source>
          <target state="translated">이 InitialContext와 연관된 환경입니다.</target>
        </trans-unit>
        <trans-unit id="7320b1d90fa4d701e7a16f43a233c4390cf54ae6" translate="yes" xml:space="preserve">
          <source>The environment associated with this InitialContext. It is initialized to null and is updated by the constructor that accepts an environment or by the &lt;code&gt;init()&lt;/code&gt; method.</source>
          <target state="translated">이 InitialContext에 관련한 환경입니다. null로 초기화되고 환경을 허용하는 생성자 또는 &lt;code&gt;init()&lt;/code&gt; 메소드에 의해 업데이트됩니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
