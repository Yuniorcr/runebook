<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="cc14039f9542b116070e40ff4b44402d445c1c0e" translate="yes" xml:space="preserve">
          <source>Tells whether the file is a symbolic link.</source>
          <target state="translated">파일이 기호 링크인지 여부를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="1f4914090150733a7effa2b3e06ad205d1308748" translate="yes" xml:space="preserve">
          <source>Tells whether the file is something other than a regular file, directory, or symbolic link.</source>
          <target state="translated">파일이 일반 파일, 디렉토리 또는 기호 링크 이외의 파일인지를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d553077c6219eb50fd9f7ff3697b489b5c13a487" translate="yes" xml:space="preserve">
          <source>Tells whether the named charset is supported.</source>
          <target state="translated">명명 된 문자 세트가 지원되는지 여부를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="c90888c5609b0ad8f009748e22b55eb20c1c8c79" translate="yes" xml:space="preserve">
          <source>Tells whether there are any elements between the current position and the limit.</source>
          <target state="translated">현재 위치와 한계 사이에 요소가 있는지 여부를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="f1e307c18c7235ffac0bc9102a045b703288fb6d" translate="yes" xml:space="preserve">
          <source>Tells whether this WebSocket's input is closed.</source>
          <target state="translated">Tells whether this WebSocket's input is closed.</target>
        </trans-unit>
        <trans-unit id="fbca271839e4fc3941753942cb5157f96d7525bd" translate="yes" xml:space="preserve">
          <source>Tells whether this WebSocket's output is closed.</source>
          <target state="translated">Tells whether this WebSocket's output is closed.</target>
        </trans-unit>
        <trans-unit id="7684eeace43e468ddc40160695d339ed57d9ba0d" translate="yes" xml:space="preserve">
          <source>Tells whether this file store is read-only.</source>
          <target state="translated">Tells whether this file store is read-only.</target>
        </trans-unit>
        <trans-unit id="6c1b0cc691a8ba56d36bd81350a8816782b4c96a" translate="yes" xml:space="preserve">
          <source>Tells whether this file store is read-only. A file store is read-only if it does not support write operations or other changes to files. Any attempt to create a file, open an existing file for writing etc. causes an &lt;code&gt;IOException&lt;/code&gt; to be thrown.</source>
          <target state="translated">이 파일 저장소가 읽기 전용인지 여부를 알려줍니다. 파일 저장소는 쓰기 작업이나 파일에 대한 다른 변경을 지원하지 않는 경우 읽기 전용입니다. 파일 작성, 쓰기를 위해 기존 파일 열기 등을 시도하면 &lt;code&gt;IOException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fb83ba7cf71cb3ce5d966791408c7d9e3c891a4d" translate="yes" xml:space="preserve">
          <source>Tells whether this lock is shared.</source>
          <target state="translated">이 잠금이 공유되는지 여부를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="f7a5d31c04a0f8aec42cae000c2334d9fa7ef1b2" translate="yes" xml:space="preserve">
          <source>Tells whether this process builder merges standard error and standard output.</source>
          <target state="translated">이 프로세스 빌더가 표준 오류 및 표준 출력을 병합하는지 여부를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="7bf307eb0e21cade3a71192dcc7a0dde425d4d5b" translate="yes" xml:space="preserve">
          <source>Tells whether this stream is ready to be read.</source>
          <target state="translated">이 스트림을 읽을 준비가되었는지 여부를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="2deb36e8952f86642e1c7d386eba9349a39c3dbe" translate="yes" xml:space="preserve">
          <source>Tells whether this stream is ready to be read. A buffered character stream is ready if the buffer is not empty, or if the underlying character stream is ready.</source>
          <target state="translated">이 스트림을 읽을 준비가되었는지 여부를 알려줍니다. 버퍼가 비어 있지 않거나 기본 문자 스트림이 준비되면 버퍼링 된 문자 스트림이 준비됩니다.</target>
        </trans-unit>
        <trans-unit id="2ed8581f44b192ed5ac1593f6e99bffa98043db6" translate="yes" xml:space="preserve">
          <source>Tells whether this stream is ready to be read. An InputStreamReader is ready if its input buffer is not empty, or if bytes are available to be read from the underlying byte stream.</source>
          <target state="translated">이 스트림을 읽을 준비가되었는지 여부를 알려줍니다. 입력 버퍼가 비어 있지 않거나 기본 바이트 스트림에서 바이트를 읽을 수있는 경우 InputStreamReader가 준비됩니다.</target>
        </trans-unit>
        <trans-unit id="6c94665ddc8f2dcb5dc788aa07429449dd548862" translate="yes" xml:space="preserve">
          <source>Tells whether this stream is ready to be read. Character-array readers are always ready to be read.</source>
          <target state="translated">이 스트림을 읽을 준비가되었는지 여부를 알려줍니다. 문자 배열 판독기는 항상 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e30c73af260a015b813beaa7dea4212d680061ef" translate="yes" xml:space="preserve">
          <source>Tells whether this stream supports the mark() operation, which it does not.</source>
          <target state="translated">이 스트림이 mark () 작업을 지원하는지 여부를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="2a6710993d297b3eca5ee752f3c745fb06db41c7" translate="yes" xml:space="preserve">
          <source>Tells whether this stream supports the mark() operation, which it does.</source>
          <target state="translated">이 스트림이 mark () 작업을 지원하는지 여부를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="f4e4ca990766d636ab0b19a2df6bc3f321fe5e0f" translate="yes" xml:space="preserve">
          <source>Tells whether this stream supports the mark() operation.</source>
          <target state="translated">이 스트림이 mark () 작업을 지원하는지 여부를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="9e9652318ae932a49847e8ce079c7efe4d121332" translate="yes" xml:space="preserve">
          <source>Tells whether this stream supports the mark() operation. The default implementation always returns false. Subclasses should override this method.</source>
          <target state="translated">이 스트림이 mark () 작업을 지원하는지 여부를 알려줍니다. 기본 구현은 항상 false를 반환합니다. 서브 클래스는이 메소드를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="8519d6094da990d369e2fea23d4d3e93aae8da1a" translate="yes" xml:space="preserve">
          <source>Tells which access-protection classes of members this lookup object can produce.</source>
          <target state="translated">Tells which access-protection classes of members this lookup object can produce.</target>
        </trans-unit>
        <trans-unit id="f1410b6b75c8193f5f535786af030674cdd4bc82" translate="yes" xml:space="preserve">
          <source>Tells which access-protection classes of members this lookup object can produce. The result is a bit-mask of the bits &lt;a href=&quot;#PUBLIC&quot;&gt;PUBLIC (0x01)&lt;/a&gt;, &lt;a href=&quot;#PRIVATE&quot;&gt;PRIVATE (0x02)&lt;/a&gt;, &lt;a href=&quot;#PROTECTED&quot;&gt;PROTECTED (0x04)&lt;/a&gt;, &lt;a href=&quot;#PACKAGE&quot;&gt;PACKAGE (0x08)&lt;/a&gt;, &lt;a href=&quot;#MODULE&quot;&gt;MODULE (0x10)&lt;/a&gt;, and &lt;a href=&quot;#UNCONDITIONAL&quot;&gt;UNCONDITIONAL (0x20)&lt;/a&gt;.</source>
          <target state="translated">Tells which access-protection classes of members this lookup object can produce. The result is a bit-mask of the bits &lt;a href=&quot;#PUBLIC&quot;&gt;PUBLIC (0x01)&lt;/a&gt;, &lt;a href=&quot;#PRIVATE&quot;&gt;PRIVATE (0x02)&lt;/a&gt;, &lt;a href=&quot;#PROTECTED&quot;&gt;PROTECTED (0x04)&lt;/a&gt;, &lt;a href=&quot;#PACKAGE&quot;&gt;PACKAGE (0x08)&lt;/a&gt;, &lt;a href=&quot;#MODULE&quot;&gt;MODULE (0x10)&lt;/a&gt;, and &lt;a href=&quot;#UNCONDITIONAL&quot;&gt;UNCONDITIONAL (0x20)&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b82962a05765506d200f067df1a67e6c41e7dc86" translate="yes" xml:space="preserve">
          <source>Tells which access-protection classes of members this lookup object can produce. The result is a bit-mask of the bits &lt;a href=&quot;methodhandles.lookup#PUBLIC&quot;&gt;PUBLIC (0x01)&lt;/a&gt;, &lt;a href=&quot;methodhandles.lookup#PRIVATE&quot;&gt;PRIVATE (0x02)&lt;/a&gt;, &lt;a href=&quot;methodhandles.lookup#PROTECTED&quot;&gt;PROTECTED (0x04)&lt;/a&gt;, and &lt;a href=&quot;methodhandles.lookup#PACKAGE&quot;&gt;PACKAGE (0x08)&lt;/a&gt;.</source>
          <target state="translated">이 조회 오브젝트가 생성 할 수있는 멤버의 액세스 보호 클래스를 알려줍니다. 결과는 &lt;a href=&quot;methodhandles.lookup#PUBLIC&quot;&gt;PUBLIC (0x01)&lt;/a&gt; , &lt;a href=&quot;methodhandles.lookup#PRIVATE&quot;&gt;PRIVATE (0x02)&lt;/a&gt; , &lt;a href=&quot;methodhandles.lookup#PROTECTED&quot;&gt;PROTECTED (0x04)&lt;/a&gt; 및 &lt;a href=&quot;methodhandles.lookup#PACKAGE&quot;&gt;PACKAGE (0x08)&lt;/a&gt; 비트의 비트 마스크입니다 .</target>
        </trans-unit>
        <trans-unit id="97cb47f40b2c92eab2017d028f9c11a83e5dbc82" translate="yes" xml:space="preserve">
          <source>Tells which class is performing the lookup.</source>
          <target state="translated">Tells which class is performing the lookup.</target>
        </trans-unit>
        <trans-unit id="2273ffa0126ce571b130b0a37fe9e221186c9ec6" translate="yes" xml:space="preserve">
          <source>Tells which class is performing the lookup. It is this class against which checks are performed for visibility and access permissions.</source>
          <target state="translated">조회를 수행중인 클래스를 알려줍니다. 가시성 및 액세스 권한을 검사하는 것이이 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="8983724093546fb9c6f973ae60994f206093a8c7" translate="yes" xml:space="preserve">
          <source>Templates must be threadsafe for a given instance over multiple threads running concurrently, and may be used multiple times in a given session.</source>
          <target state="translated">Templates must be threadsafe for a given instance over multiple threads running concurrently, and may be used multiple times in a given session.</target>
        </trans-unit>
        <trans-unit id="834a28d2896837f659be4bd4cd02e11559b52b6b" translate="yes" xml:space="preserve">
          <source>TemplatesHandler</source>
          <target state="translated">TemplatesHandler</target>
        </trans-unit>
        <trans-unit id="0efe5fd2a34c24650008540e93242893db484cab" translate="yes" xml:space="preserve">
          <source>Temporal</source>
          <target state="translated">Temporal</target>
        </trans-unit>
        <trans-unit id="f286a2dc5192d3d5aa9f64e09927f6c1517a5849" translate="yes" xml:space="preserve">
          <source>Temporal.isSupported()</source>
          <target state="translated">Temporal.isSupported()</target>
        </trans-unit>
        <trans-unit id="b3e1a6ddb04e5295aab2518ee54693fee0260d0e" translate="yes" xml:space="preserve">
          <source>Temporal.minus()</source>
          <target state="translated">Temporal.minus()</target>
        </trans-unit>
        <trans-unit id="1b5a4e2165544e13530f8280087cf8452eb8f5e7" translate="yes" xml:space="preserve">
          <source>Temporal.plus()</source>
          <target state="translated">Temporal.plus()</target>
        </trans-unit>
        <trans-unit id="588d57472cbbee250c7f8f17a94c202edb4572af" translate="yes" xml:space="preserve">
          <source>Temporal.until()</source>
          <target state="translated">Temporal.until()</target>
        </trans-unit>
        <trans-unit id="0d242c39991a0f96255d76397e4fbcee4d31ab92" translate="yes" xml:space="preserve">
          <source>Temporal.with()</source>
          <target state="translated">Temporal.with()</target>
        </trans-unit>
        <trans-unit id="d7b64ec77bf66b8b294c77030f826e395aa9d393" translate="yes" xml:space="preserve">
          <source>TemporalAccessor</source>
          <target state="translated">TemporalAccessor</target>
        </trans-unit>
        <trans-unit id="d52be251debbdfa2aee296b0a0ee6558b77b08cb" translate="yes" xml:space="preserve">
          <source>TemporalAccessor.get()</source>
          <target state="translated">TemporalAccessor.get()</target>
        </trans-unit>
        <trans-unit id="5991f084a5a85c0f99e3691d47e4ca554b3dc4ae" translate="yes" xml:space="preserve">
          <source>TemporalAccessor.getLong()</source>
          <target state="translated">TemporalAccessor.getLong()</target>
        </trans-unit>
        <trans-unit id="0540e4d90dc793060238bc4fe835bcd32eeb5920" translate="yes" xml:space="preserve">
          <source>TemporalAccessor.isSupported()</source>
          <target state="translated">TemporalAccessor.isSupported()</target>
        </trans-unit>
        <trans-unit id="0507d7783739194e891f51b5711a2353fd008213" translate="yes" xml:space="preserve">
          <source>TemporalAccessor.query()</source>
          <target state="translated">TemporalAccessor.query()</target>
        </trans-unit>
        <trans-unit id="92b0a688dc1a9d4cb0439c61a6a5ff2e10d319bd" translate="yes" xml:space="preserve">
          <source>TemporalAccessor.range()</source>
          <target state="translated">TemporalAccessor.range()</target>
        </trans-unit>
        <trans-unit id="19188a92cfb3df6530f716fec82a3c52654b9596" translate="yes" xml:space="preserve">
          <source>TemporalAdjuster</source>
          <target state="translated">TemporalAdjuster</target>
        </trans-unit>
        <trans-unit id="ef64d3fd80da43b94af9036c57d6c1490f6d42cc" translate="yes" xml:space="preserve">
          <source>TemporalAdjuster.adjustInto()</source>
          <target state="translated">TemporalAdjuster.adjustInto()</target>
        </trans-unit>
        <trans-unit id="d461e12be922c3013b20d7f3d8450c02116c71d5" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters</source>
          <target state="translated">TemporalAdjusters</target>
        </trans-unit>
        <trans-unit id="0980fb23c839936939dcf1c707f344ca598088c3" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.dayOfWeekInMonth()</source>
          <target state="translated">TemporalAdjusters.dayOfWeekInMonth()</target>
        </trans-unit>
        <trans-unit id="749fe9f19c32aa5722a3ee1f0f74e8694c8f147b" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.firstDayOfMonth()</source>
          <target state="translated">TemporalAdjusters.firstDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="b79ca08bc46f1d64dc3cae63269be1ec236e176f" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.firstDayOfNextMonth()</source>
          <target state="translated">TemporalAdjusters.firstDayOfNextMonth()</target>
        </trans-unit>
        <trans-unit id="02d2a3224c0e19c614fa7524983829924756c994" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.firstDayOfNextYear()</source>
          <target state="translated">TemporalAdjusters.firstDayOfNextYear()</target>
        </trans-unit>
        <trans-unit id="cf03c2555cdf9797197f8ae6a7d5cb5366e747c5" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.firstDayOfYear()</source>
          <target state="translated">TemporalAdjusters.firstDayOfYear()</target>
        </trans-unit>
        <trans-unit id="fcaad7e0774f4332eb4f82b9d5b8e1aa7196166f" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.firstInMonth()</source>
          <target state="translated">TemporalAdjusters.firstInMonth()</target>
        </trans-unit>
        <trans-unit id="c138b0e8d0fc2858a951bbe51e2d5ef6f4aeb53c" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.lastDayOfMonth()</source>
          <target state="translated">TemporalAdjusters.lastDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="47b9e20800a22b8ab3e4f673a21a759f36ddb32a" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.lastDayOfYear()</source>
          <target state="translated">TemporalAdjusters.lastDayOfYear()</target>
        </trans-unit>
        <trans-unit id="921cdd23a397d35d9f326d6abaf60ab412ca3c57" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.lastInMonth()</source>
          <target state="translated">TemporalAdjusters.lastInMonth()</target>
        </trans-unit>
        <trans-unit id="e14087dfe7126031698256a4ef14493c23963271" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.next()</source>
          <target state="translated">TemporalAdjusters.next()</target>
        </trans-unit>
        <trans-unit id="c68f4680c39189da9282aff8017659addc6cc5e1" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.nextOrSame()</source>
          <target state="translated">TemporalAdjusters.nextOrSame()</target>
        </trans-unit>
        <trans-unit id="4a89433836f2ac3d6d85a60b4b5c56b15656d99d" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.ofDateAdjuster()</source>
          <target state="translated">TemporalAdjusters.ofDateAdjuster()</target>
        </trans-unit>
        <trans-unit id="298438f1caa92fd38059f52c9bdb2fce0473f010" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.previous()</source>
          <target state="translated">TemporalAdjusters.previous()</target>
        </trans-unit>
        <trans-unit id="3d86725b8b9062056762e37b39830c2d38e1ff48" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.previousOrSame()</source>
          <target state="translated">TemporalAdjusters.previousOrSame()</target>
        </trans-unit>
        <trans-unit id="7fa2903e1316f1b64a6a4f4c9b58102da774976d" translate="yes" xml:space="preserve">
          <source>TemporalAmount</source>
          <target state="translated">TemporalAmount</target>
        </trans-unit>
        <trans-unit id="5852bf5ccff0a44de515c0c9e8122e9b8faa2e45" translate="yes" xml:space="preserve">
          <source>TemporalAmount.addTo()</source>
          <target state="translated">TemporalAmount.addTo()</target>
        </trans-unit>
        <trans-unit id="b30c8a751fb346251b1354f330687cb2ace4134d" translate="yes" xml:space="preserve">
          <source>TemporalAmount.get()</source>
          <target state="translated">TemporalAmount.get()</target>
        </trans-unit>
        <trans-unit id="8351c093e27fad83572795b092f96d6678b0d146" translate="yes" xml:space="preserve">
          <source>TemporalAmount.getUnits()</source>
          <target state="translated">TemporalAmount.getUnits()</target>
        </trans-unit>
        <trans-unit id="5a5e4cc573a98a61e8f09ccecf10ff4801be1dae" translate="yes" xml:space="preserve">
          <source>TemporalAmount.subtractFrom()</source>
          <target state="translated">TemporalAmount.subtractFrom()</target>
        </trans-unit>
        <trans-unit id="a097d25f7afa633d90e98400711aaa30261fcce3" translate="yes" xml:space="preserve">
          <source>TemporalField</source>
          <target state="translated">TemporalField</target>
        </trans-unit>
        <trans-unit id="7e3d7455a8bdcbd30f9d2f53e79bdbf76d693eb4" translate="yes" xml:space="preserve">
          <source>TemporalField.adjustInto()</source>
          <target state="translated">TemporalField.adjustInto()</target>
        </trans-unit>
        <trans-unit id="9dcb3057deff1d7882c947b760999ba0464fd821" translate="yes" xml:space="preserve">
          <source>TemporalField.getBaseUnit()</source>
          <target state="translated">TemporalField.getBaseUnit()</target>
        </trans-unit>
        <trans-unit id="c57ab3ed56464d797330512843a6de112b2b6bd8" translate="yes" xml:space="preserve">
          <source>TemporalField.getDisplayName()</source>
          <target state="translated">TemporalField.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="2191c8a7f6d4045d1d962920bdf70bee17337e2f" translate="yes" xml:space="preserve">
          <source>TemporalField.getFrom()</source>
          <target state="translated">TemporalField.getFrom()</target>
        </trans-unit>
        <trans-unit id="6b9224fc391a9da015368e93aa383abac634c5e5" translate="yes" xml:space="preserve">
          <source>TemporalField.getRangeUnit()</source>
          <target state="translated">TemporalField.getRangeUnit()</target>
        </trans-unit>
        <trans-unit id="bfbaeddbe02e2c729b96ecd2969aa74aa5aab03f" translate="yes" xml:space="preserve">
          <source>TemporalField.isDateBased()</source>
          <target state="translated">TemporalField.isDateBased()</target>
        </trans-unit>
        <trans-unit id="f563b00e2df4f92fa622aacc67dd08b766fef9ae" translate="yes" xml:space="preserve">
          <source>TemporalField.isSupportedBy()</source>
          <target state="translated">TemporalField.isSupportedBy()</target>
        </trans-unit>
        <trans-unit id="22367005f75d38a6c3aace2cfa1da206f443c4e6" translate="yes" xml:space="preserve">
          <source>TemporalField.isTimeBased()</source>
          <target state="translated">TemporalField.isTimeBased()</target>
        </trans-unit>
        <trans-unit id="39a25c47d9cf555de727ab570b2999ce4fb7bec6" translate="yes" xml:space="preserve">
          <source>TemporalField.range()</source>
          <target state="translated">TemporalField.range()</target>
        </trans-unit>
        <trans-unit id="fa521cab2685b2b576323ca90a478c80ea4959c6" translate="yes" xml:space="preserve">
          <source>TemporalField.rangeRefinedBy()</source>
          <target state="translated">TemporalField.rangeRefinedBy()</target>
        </trans-unit>
        <trans-unit id="2c1340571d1317d3f07bb1e66184a451ad68ceaf" translate="yes" xml:space="preserve">
          <source>TemporalField.resolve()</source>
          <target state="translated">TemporalField.resolve()</target>
        </trans-unit>
        <trans-unit id="13cf2a03822d27148fb784a76049d6a0092b8eea" translate="yes" xml:space="preserve">
          <source>TemporalField.toString()</source>
          <target state="translated">TemporalField.toString()</target>
        </trans-unit>
        <trans-unit id="e172ffb79aa7ff0db4adb4581d000bb5aa49f03f" translate="yes" xml:space="preserve">
          <source>TemporalQueries</source>
          <target state="translated">TemporalQueries</target>
        </trans-unit>
        <trans-unit id="48aabdaa2b041100e4652f0a5f67d8d17ea9da46" translate="yes" xml:space="preserve">
          <source>TemporalQueries.chronology()</source>
          <target state="translated">TemporalQueries.chronology()</target>
        </trans-unit>
        <trans-unit id="6fa1ea8b8522cc270388138147a226f55c7408cc" translate="yes" xml:space="preserve">
          <source>TemporalQueries.localDate()</source>
          <target state="translated">TemporalQueries.localDate()</target>
        </trans-unit>
        <trans-unit id="62583c16e2323f8aea872d432520cb91676e2200" translate="yes" xml:space="preserve">
          <source>TemporalQueries.localTime()</source>
          <target state="translated">TemporalQueries.localTime()</target>
        </trans-unit>
        <trans-unit id="cfd0d9afb4912991aa55b1883ae17f8ced315cf6" translate="yes" xml:space="preserve">
          <source>TemporalQueries.offset()</source>
          <target state="translated">TemporalQueries.offset()</target>
        </trans-unit>
        <trans-unit id="e73bb6119d5eabc638d21a94b0046d4e5f40db53" translate="yes" xml:space="preserve">
          <source>TemporalQueries.precision()</source>
          <target state="translated">TemporalQueries.precision()</target>
        </trans-unit>
        <trans-unit id="6a82d040356652bb96075faa4887a159b180e82c" translate="yes" xml:space="preserve">
          <source>TemporalQueries.zone()</source>
          <target state="translated">TemporalQueries.zone()</target>
        </trans-unit>
        <trans-unit id="37b18187f55d2f820feacd9c12fb605c7ce10987" translate="yes" xml:space="preserve">
          <source>TemporalQueries.zoneId()</source>
          <target state="translated">TemporalQueries.zoneId()</target>
        </trans-unit>
        <trans-unit id="f306b083af37cf9827edee1543676f0e5f93ab5b" translate="yes" xml:space="preserve">
          <source>TemporalQuery</source>
          <target state="translated">TemporalQuery</target>
        </trans-unit>
        <trans-unit id="68173f0d7a70ad8b30b0c9415f50073d1ac9de8f" translate="yes" xml:space="preserve">
          <source>TemporalQuery.queryFrom()</source>
          <target state="translated">TemporalQuery.queryFrom()</target>
        </trans-unit>
        <trans-unit id="dcc743a34f3dcfb3faa51da93971e9d20905fdbc" translate="yes" xml:space="preserve">
          <source>TemporalUnit</source>
          <target state="translated">TemporalUnit</target>
        </trans-unit>
        <trans-unit id="d6ab2bf710d6d72ab0cd08ea299d878ea6eaa65e" translate="yes" xml:space="preserve">
          <source>TemporalUnit.addTo()</source>
          <target state="translated">TemporalUnit.addTo()</target>
        </trans-unit>
        <trans-unit id="c6b8bf94a664a5fa1c9565abe6fcf63d659957f2" translate="yes" xml:space="preserve">
          <source>TemporalUnit.between()</source>
          <target state="translated">TemporalUnit.between()</target>
        </trans-unit>
        <trans-unit id="d51745ad8117a1936508d6a0882cde4ae0b0c043" translate="yes" xml:space="preserve">
          <source>TemporalUnit.getDuration()</source>
          <target state="translated">TemporalUnit.getDuration()</target>
        </trans-unit>
        <trans-unit id="6b90685553413ba7f408060236d8f77e2be14daf" translate="yes" xml:space="preserve">
          <source>TemporalUnit.isDateBased()</source>
          <target state="translated">TemporalUnit.isDateBased()</target>
        </trans-unit>
        <trans-unit id="95ded006f64f4a6871680c7954eaa3f93b9c8036" translate="yes" xml:space="preserve">
          <source>TemporalUnit.isDurationEstimated()</source>
          <target state="translated">TemporalUnit.isDurationEstimated()</target>
        </trans-unit>
        <trans-unit id="a7be4369b55f5231d03bd564e826737bd5413558" translate="yes" xml:space="preserve">
          <source>TemporalUnit.isSupportedBy()</source>
          <target state="translated">TemporalUnit.isSupportedBy()</target>
        </trans-unit>
        <trans-unit id="89345799ec5e7c7f5be1373a91212efa391543cb" translate="yes" xml:space="preserve">
          <source>TemporalUnit.isTimeBased()</source>
          <target state="translated">TemporalUnit.isTimeBased()</target>
        </trans-unit>
        <trans-unit id="80ab41103e1ddf24fb925f3ba5e606a50d566a6e" translate="yes" xml:space="preserve">
          <source>TemporalUnit.toString()</source>
          <target state="translated">TemporalUnit.toString()</target>
        </trans-unit>
        <trans-unit id="8965c2a2c7eadcd8965f4ae9da536a21560a42fa" translate="yes" xml:space="preserve">
          <source>Terminal operations, such as &lt;code&gt;Stream.forEach&lt;/code&gt; or &lt;code&gt;IntStream.sum&lt;/code&gt;, may traverse the stream to produce a result or a side-effect. After the terminal operation is performed, the stream pipeline is considered consumed, and can no longer be used; if you need to traverse the same data source again, you must return to the data source to get a new stream. In almost all cases, terminal operations are &lt;em&gt;eager&lt;/em&gt;, completing their traversal of the data source and processing of the pipeline before returning. Only the terminal operations &lt;code&gt;iterator()&lt;/code&gt; and &lt;code&gt;spliterator()&lt;/code&gt; are not; these are provided as an &quot;escape hatch&quot; to enable arbitrary client-controlled pipeline traversals in the event that the existing operations are not sufficient to the task.</source>
          <target state="translated">&lt;code&gt;Stream.forEach&lt;/code&gt; 또는 &lt;code&gt;IntStream.sum&lt;/code&gt; 과 같은 터미널 작업 은 스트림을 통과하여 결과 또는 부작용을 일으킬 수 있습니다. 터미널 작업이 수행 된 후 스트림 파이프 라인은 소비 된 것으로 간주되어 더 이상 사용할 수 없습니다. 동일한 데이터 소스를 다시 탐색해야하는 경우 새 스트림을 얻으려면 데이터 소스로 돌아 가야합니다. 거의 모든 경우에 터미널 작업이 &lt;em&gt;열성적&lt;/em&gt; 이어서 데이터 소스에 대한 통과와 파이프 라인 처리가 완료되기 전에 완료됩니다. 터미널 작업 &lt;code&gt;iterator()&lt;/code&gt; 및 &lt;code&gt;spliterator()&lt;/code&gt; 그렇지 않다; 이는 기존 작업이 작업에 충분하지 않은 경우 임의의 클라이언트 제어 파이프 라인 통과를 가능하게하는 &quot;탈출 해치&quot;로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="9e7fe1cb4bfe32464b5e649ea6e65dfb77f89746" translate="yes" xml:space="preserve">
          <source>TerminalFactory</source>
          <target state="translated">TerminalFactory</target>
        </trans-unit>
        <trans-unit id="757c1f6aaceb676aa909092f5b2f049da2b66ec9" translate="yes" xml:space="preserve">
          <source>TerminalFactory utilizes an extensible service provider framework. Service providers that wish to add a new implementation should see the &lt;a href=&quot;terminalfactoryspi&quot;&gt;TerminalFactorySpi&lt;/a&gt; class for more information.</source>
          <target state="translated">TerminalFactory utilizes an extensible service provider framework. Service providers that wish to add a new implementation should see the &lt;a href=&quot;terminalfactoryspi&quot;&gt;TerminalFactorySpi&lt;/a&gt; class for more information.</target>
        </trans-unit>
        <trans-unit id="7de5a272d94f0dc142a784f93dd178e54667f91f" translate="yes" xml:space="preserve">
          <source>TerminalFactorySpi</source>
          <target state="translated">TerminalFactorySpi</target>
        </trans-unit>
        <trans-unit id="75bb594889fc299b22c6b123d54db2b965001a7c" translate="yes" xml:space="preserve">
          <source>Terminate.</source>
          <target state="translated">Terminate.</target>
        </trans-unit>
        <trans-unit id="8cd7f789c9997db311e7e6a41a6ecd661071edf5" translate="yes" xml:space="preserve">
          <source>Terminates a sequence of calls to &lt;code&gt;replacePixels&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;replacePixels&lt;/code&gt; 에 대한 일련의 호출을 종료합니다 .</target>
        </trans-unit>
        <trans-unit id="24ddc2bc7010645c34993e44dc38224630aec13f" translate="yes" xml:space="preserve">
          <source>Terminates an open connection.</source>
          <target state="translated">Terminates an open connection.</target>
        </trans-unit>
        <trans-unit id="d32793731f47ac0452108fde97be4031ec72442e" translate="yes" xml:space="preserve">
          <source>Terminates an open connection. Calling &lt;code&gt;abort&lt;/code&gt; results in:</source>
          <target state="translated">Terminates an open connection. Calling &lt;code&gt;abort&lt;/code&gt; results in:</target>
        </trans-unit>
        <trans-unit id="89ca4a51db5ae6016eb0008d1dd365028520b18b" translate="yes" xml:space="preserve">
          <source>Terminates the current line by writing the line separator string.</source>
          <target state="translated">Terminates the current line by writing the line separator string.</target>
        </trans-unit>
        <trans-unit id="c4d4f9a417b40d08c27fd6de31c06a21f2230fdf" translate="yes" xml:space="preserve">
          <source>Terminates the current line by writing the line separator string. The line separator string is defined by the system property &lt;code&gt;line.separator&lt;/code&gt;, and is not necessarily a single newline character (&lt;code&gt;'\n'&lt;/code&gt;).</source>
          <target state="translated">줄 구분자 문자열을 작성하여 현재 줄을 종료합니다. 행 구분자 문자열은 시스템 특성 &lt;code&gt;line.separator&lt;/code&gt; 에 의해 정의되며 반드시 단일 개행 문자 ( &lt;code&gt;'\n'&lt;/code&gt; ) 일 필요는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="f0cae13bb326cc7a4e49d35b2a11a9b120116098" translate="yes" xml:space="preserve">
          <source>Terminates the currently running Java Virtual Machine.</source>
          <target state="translated">Terminates the currently running Java Virtual Machine.</target>
        </trans-unit>
        <trans-unit id="84446a4de72f5ad3d5d3feeaf90637b3c3299095" translate="yes" xml:space="preserve">
          <source>Terminates the currently running Java Virtual Machine. The argument serves as a status code; by convention, a nonzero status code indicates abnormal termination.</source>
          <target state="translated">현재 실행중인 Java Virtual Machine을 종료합니다. 인수는 상태 코드 역할을합니다. 일반적으로 0이 아닌 상태 코드는 비정상 종료를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="75b77246d241a7a86922ee5ecb6e3d7d63cb749d" translate="yes" xml:space="preserve">
          <source>Terminates the currently running Java virtual machine by initiating its shutdown sequence.</source>
          <target state="translated">Terminates the currently running Java virtual machine by initiating its shutdown sequence.</target>
        </trans-unit>
        <trans-unit id="7f3fe88d0f286bdb39054dc6e0a9c16300e35b62" translate="yes" xml:space="preserve">
          <source>Terminates the currently running Java virtual machine by initiating its shutdown sequence. This method never returns normally. The argument serves as a status code; by convention, a nonzero status code indicates abnormal termination.</source>
          <target state="translated">종료 시퀀스를 시작하여 현재 실행중인 Java 가상 머신을 종료합니다. 이 메소드는 정상적으로 리턴되지 않습니다. 인수는 상태 코드 역할을합니다. 일반적으로 0이 아닌 상태 코드는 비정상 종료를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b3de8860cfe0fe57dbe59385b9d40551c34e8643" translate="yes" xml:space="preserve">
          <source>Terminates this timer, discarding any currently scheduled tasks.</source>
          <target state="translated">Terminates this timer, discarding any currently scheduled tasks.</target>
        </trans-unit>
        <trans-unit id="f13de16fc98a68204d23e740b65a54da2b871e6d" translate="yes" xml:space="preserve">
          <source>Terminates this timer, discarding any currently scheduled tasks. Does not interfere with a currently executing task (if it exists). Once a timer has been terminated, its execution thread terminates gracefully, and no more tasks may be scheduled on it.</source>
          <target state="translated">현재 예약 된 작업을 삭제하고이 타이머를 종료합니다. 현재 실행중인 작업 (있는 경우)을 방해하지 않습니다. 타이머가 종료되면 실행 스레드가 정상적으로 종료되고 더 이상 작업을 예약 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="8cd1c0791d3eaa3441fadb05902e9a404226474e" translate="yes" xml:space="preserve">
          <source>Test execute access.</source>
          <target state="translated">실행 액세스를 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="f2498fb3db6c0446b98c9e136714c3f101288064" translate="yes" xml:space="preserve">
          <source>Test if a name is part of this &lt;code&gt;NameList&lt;/code&gt;.</source>
          <target state="translated">Test if a name is part of this &lt;code&gt;NameList&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76fae1878eefcb923bbdc1ef0a8f5b1deb4a1391" translate="yes" xml:space="preserve">
          <source>Test if a string is part of this &lt;code&gt;DOMStringList&lt;/code&gt;.</source>
          <target state="translated">Test if a string is part of this &lt;code&gt;DOMStringList&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="586cbde8b4fe4205c0f718493390b9a24b6fcd63" translate="yes" xml:space="preserve">
          <source>Test if the DOM implementation implements a specific feature and version, as specified in &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM Features&lt;/a&gt;.</source>
          <target state="translated">Test if the DOM implementation implements a specific feature and version, as specified in &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM Features&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e31558afc01eeb4da57172d5bb62f523b21e0e0c" translate="yes" xml:space="preserve">
          <source>Test if the caller can access this reflected object.</source>
          <target state="translated">Test if the caller can access this reflected object.</target>
        </trans-unit>
        <trans-unit id="3e0e12b595e05b1be7079e3cb002971dd3594773" translate="yes" xml:space="preserve">
          <source>Test if the caller can access this reflected object. If this reflected object corresponds to an instance method or field then this method tests if the caller can access the given &lt;code&gt;obj&lt;/code&gt; with the reflected object. For instance methods or fields then the &lt;code&gt;obj&lt;/code&gt; argument must be an instance of the &lt;a href=&quot;member#getDeclaringClass()&quot;&gt;&lt;code&gt;declaring class&lt;/code&gt;&lt;/a&gt;. For static members and constructors then &lt;code&gt;obj&lt;/code&gt; must be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Test if the caller can access this reflected object. If this reflected object corresponds to an instance method or field then this method tests if the caller can access the given &lt;code&gt;obj&lt;/code&gt; with the reflected object. For instance methods or fields then the &lt;code&gt;obj&lt;/code&gt; argument must be an instance of the &lt;a href=&quot;member#getDeclaringClass()&quot;&gt; &lt;code&gt;declaring class&lt;/code&gt; &lt;/a&gt;. For static members and constructors then &lt;code&gt;obj&lt;/code&gt; must be &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dae3a4ae8be2982aca9f5694cc8834826ef2ac2e" translate="yes" xml:space="preserve">
          <source>Test if the current event is of the given type and if the namespace and name match the current namespace and name of the current event.</source>
          <target state="translated">Test if the current event is of the given type and if the namespace and name match the current namespace and name of the current event.</target>
        </trans-unit>
        <trans-unit id="b4e97a0edeffd8149a3c5c7d854872bf0cb81b99" translate="yes" xml:space="preserve">
          <source>Test if the current event is of the given type and if the namespace and name match the current namespace and name of the current event. If the namespaceURI is null it is not checked for equality, if the localName is null it is not checked for equality.</source>
          <target state="translated">Test if the current event is of the given type and if the namespace and name match the current namespace and name of the current event. If the namespaceURI is null it is not checked for equality, if the localName is null it is not checked for equality.</target>
        </trans-unit>
        <trans-unit id="b2eb80a014419e1be9f3781825cc63768df1a471" translate="yes" xml:space="preserve">
          <source>Test if the pair namespaceURI/name is part of this &lt;code&gt;NameList&lt;/code&gt;.</source>
          <target state="translated">Test if the pair namespaceURI/name is part of this &lt;code&gt;NameList&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a25d2c4f17eeb0452b47d543d8cca3283ff8f86e" translate="yes" xml:space="preserve">
          <source>Test if we are in design-mode.</source>
          <target state="translated">디자인 모드인지 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="5e3b7c362e373dbf01e1f334e51d8617b9143743" translate="yes" xml:space="preserve">
          <source>Test read access.</source>
          <target state="translated">읽기 액세스를 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="ea5662581751d1f7fe089e1565f7112b85932593" translate="yes" xml:space="preserve">
          <source>Test the equality of two HTTP cookies.</source>
          <target state="translated">두 개의 HTTP 쿠키가 동일한 지 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="a48eb3b499ac0600e1f02285100763bd43a60f7d" translate="yes" xml:space="preserve">
          <source>Test this &lt;code&gt;QName&lt;/code&gt; for equality with another &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">Test this &lt;code&gt;QName&lt;/code&gt; for equality with another &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="136e1078ba7851271b2fa4707f198ec5c04823f7" translate="yes" xml:space="preserve">
          <source>Test whether a specified node is visible in the logical view of a &lt;code&gt;TreeWalker&lt;/code&gt; or &lt;code&gt;NodeIterator&lt;/code&gt;.</source>
          <target state="translated">Test whether a specified node is visible in the logical view of a &lt;code&gt;TreeWalker&lt;/code&gt; or &lt;code&gt;NodeIterator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa98656d8e9c65b55b4b4662ddf9419103789b55" translate="yes" xml:space="preserve">
          <source>Test whether a specified node is visible in the logical view of a &lt;code&gt;TreeWalker&lt;/code&gt; or &lt;code&gt;NodeIterator&lt;/code&gt;. This function will be called by the implementation of &lt;code&gt;TreeWalker&lt;/code&gt; and &lt;code&gt;NodeIterator&lt;/code&gt;; it is not normally called directly from user code. (Though you could do so if you wanted to use the same filter to guide your own application logic.)</source>
          <target state="translated">Test whether a specified node is visible in the logical view of a &lt;code&gt;TreeWalker&lt;/code&gt; or &lt;code&gt;NodeIterator&lt;/code&gt; . This function will be called by the implementation of &lt;code&gt;TreeWalker&lt;/code&gt; and &lt;code&gt;NodeIterator&lt;/code&gt; ; it is not normally called directly from user code. (Though you could do so if you wanted to use the same filter to guide your own application logic.)</target>
        </trans-unit>
        <trans-unit id="6388a5fe1bd21a60590ca1aac16b379ca2768918" translate="yes" xml:space="preserve">
          <source>Test whether an interface is an MXBean interface.</source>
          <target state="translated">Test whether an interface is an MXBean interface.</target>
        </trans-unit>
        <trans-unit id="f55fb9e19e0aeaa0839eca70fbed8bf54f689ec2" translate="yes" xml:space="preserve">
          <source>Test whether an interface is an MXBean interface. An interface is an MXBean interface if it is public, annotated &lt;a href=&quot;mxbean&quot;&gt;&lt;code&gt;@MXBean&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;@MXBean(true)&lt;/code&gt; or if it does not have an &lt;code&gt;@MXBean&lt;/code&gt; annotation and its name ends with &quot;&lt;code&gt;MXBean&lt;/code&gt;&quot;.</source>
          <target state="translated">인터페이스가 MXBean 인터페이스인지 테스트하십시오. 공용 인터페이스 이거나 주석이 달린 &lt;a href=&quot;mxbean&quot;&gt; &lt;code&gt;@MXBean&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;@MXBean(true)&lt;/code&gt; 이거나 &lt;code&gt;@MXBean&lt;/code&gt; 주석이없고 이름이 &quot; &lt;code&gt;MXBean&lt;/code&gt; &quot;으로 끝나는 경우 인터페이스는 MXBean 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="7b970541496ae5e8463a485b2ccbe1dee6a6b844" translate="yes" xml:space="preserve">
          <source>Test whether that address is reachable.</source>
          <target state="translated">Test whether that address is reachable.</target>
        </trans-unit>
        <trans-unit id="7900224b61e1d3f14c293ec3e7d030ac658762dd" translate="yes" xml:space="preserve">
          <source>Test whether that address is reachable. Best effort is made by the implementation to try to reach the host, but firewalls and server configuration may block requests resulting in a unreachable status while some specific ports may be accessible. A typical implementation will use ICMP ECHO REQUESTs if the privilege can be obtained, otherwise it will try to establish a TCP connection on port 7 (Echo) of the destination host.</source>
          <target state="translated">해당 주소에 도달 할 수 있는지 테스트하십시오. 구현은 호스트에 도달하려고 최선을 다하지만 방화벽 및 서버 구성은 요청을 차단하여 도달 할 수없는 상태가되고 일부 특정 포트는 액세스 할 수 있습니다. 일반적인 구현에서는 권한을 얻을 수있는 경우 ICMP ECHO 요청을 사용하고, 그렇지 않으면 대상 호스트의 포트 7 (Echo)에서 TCP 연결을 설정하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="a3073ce0f99220df1e294901fe15b19fbc50b265" translate="yes" xml:space="preserve">
          <source>Test whether this ObjectName, which may be a pattern, matches another ObjectName.</source>
          <target state="translated">Test whether this ObjectName, which may be a pattern, matches another ObjectName.</target>
        </trans-unit>
        <trans-unit id="6d6bc4e44cf7e2e4e9df51ac9d51090725e19684" translate="yes" xml:space="preserve">
          <source>Test whether this ObjectName, which may be a pattern, matches another ObjectName. If &lt;code&gt;name&lt;/code&gt; is a pattern, the result is false. If this ObjectName is a pattern, the result is true if and only if &lt;code&gt;name&lt;/code&gt; matches the pattern. If neither this ObjectName nor &lt;code&gt;name&lt;/code&gt; is a pattern, the result is true if and only if the two ObjectNames are equal as described for the &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Test whether this ObjectName, which may be a pattern, matches another ObjectName. If &lt;code&gt;name&lt;/code&gt; is a pattern, the result is false. If this ObjectName is a pattern, the result is true if and only if &lt;code&gt;name&lt;/code&gt; matches the pattern. If neither this ObjectName nor &lt;code&gt;name&lt;/code&gt; is a pattern, the result is true if and only if the two ObjectNames are equal as described for the &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(Object)&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="1e6eb2d6cbeb14a0819809782eb97025d2a7248d" translate="yes" xml:space="preserve">
          <source>Test whether this ObjectName, which may be a pattern, matches another ObjectName. If &lt;code&gt;name&lt;/code&gt; is a pattern, the result is false. If this ObjectName is a pattern, the result is true if and only if &lt;code&gt;name&lt;/code&gt; matches the pattern. If neither this ObjectName nor &lt;code&gt;name&lt;/code&gt; is a pattern, the result is true if and only if the two ObjectNames are equal as described for the &lt;a href=&quot;objectname#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">패턴 일 수있는이 ObjectName이 다른 ObjectName과 일치하는지 테스트하십시오. 경우 &lt;code&gt;name&lt;/code&gt; 패턴이며, 결과는 false입니다. 이 ObjectName이 패턴 인 경우 &lt;code&gt;name&lt;/code&gt; 이 패턴과 일치하는 경우에만 결과가 적용됩니다 . 이 ObjectName이나 &lt;code&gt;name&lt;/code&gt; 이 모두 패턴 이 아닌 경우 &lt;a href=&quot;objectname#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(Object)&lt;/code&gt; &lt;/a&gt; 대해 설명한대로 두 ObjectName이 동일한 경우에만 결과가 true입니다. 메소드에 .</target>
        </trans-unit>
        <trans-unit id="6fdaa754552b0589f21d204f92a2758a3a5fff52" translate="yes" xml:space="preserve">
          <source>Test whether this Service can use the specified parameter.</source>
          <target state="translated">Test whether this Service can use the specified parameter.</target>
        </trans-unit>
        <trans-unit id="b2ad41cafda723983d8c1c7daef7f306ed636e4d" translate="yes" xml:space="preserve">
          <source>Test whether this Service can use the specified parameter. Returns false if this service cannot use the parameter. Returns true if this service can use the parameter, if a fast test is infeasible, or if the status is unknown.</source>
          <target state="translated">이 서비스가 지정된 매개 변수를 사용할 수 있는지 테스트하십시오. 이 서비스가 매개 변수를 사용할 수없는 경우 false를 리턴합니다. 이 서비스가 매개 변수를 사용할 수 있거나 빠른 테스트를 실행할 수 없거나 상태를 알 수없는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c608f0f35239c70c24034928f2073921f862cd67" translate="yes" xml:space="preserve">
          <source>Test write access.</source>
          <target state="translated">쓰기 권한을 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="55f27f5ab8ad6a67e06b0522f1aec012c8449fd4" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified identity and this identity.</source>
          <target state="translated">Tests for equality between the specified identity and this identity.</target>
        </trans-unit>
        <trans-unit id="620317808c7961a08c0a980568f06480ddc95f3b" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified identity and this identity. This method should be overriden by subclasses to test for equality. The default behavior is to return true if the names and public keys are equal.</source>
          <target state="translated">지정된 ID와이 ID가 동일한 지 테스트합니다. 이 메소드는 서브 클래스에 의해 대체되어 동등성을 테스트해야합니다. 이름과 공개 키가 같은 경우 기본 동작은 true를 반환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="3179683467ffb2cef2a50c66a684c522f9db2831" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this code signer.</source>
          <target state="translated">Tests for equality between the specified object and this code signer.</target>
        </trans-unit>
        <trans-unit id="b09e2f01e61502d952741bcb63b005afb94ffdc4" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this code signer. Two code signers are considered equal if their signer certificate paths are equal and if their timestamps are equal, if present in both.</source>
          <target state="translated">지정된 객체와이 코드 서명자 사이의 동등성을 테스트합니다. 서명자 인증서 경로가 동일하고 타임 스탬프가 동일한 경우 두 코드 서명자가 모두 동일한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="cdd70f9502e16fbaeb5cbd28796d2ee075294d86" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this identity.</source>
          <target state="translated">Tests for equality between the specified object and this identity.</target>
        </trans-unit>
        <trans-unit id="9d431d8856336abe3cfbc750cbf1b84050499087" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this identity. This first tests to see if the entities actually refer to the same object, in which case it returns true. Next, it checks to see if the entities have the same name and the same scope. If they do, the method returns true. Otherwise, it calls &lt;a href=&quot;#identityEquals(java.security.Identity)&quot;&gt;&lt;code&gt;identityEquals&lt;/code&gt;&lt;/a&gt;, which subclasses should override.</source>
          <target state="translated">Tests for equality between the specified object and this identity. This first tests to see if the entities actually refer to the same object, in which case it returns true. Next, it checks to see if the entities have the same name and the same scope. If they do, the method returns true. Otherwise, it calls &lt;a href=&quot;#identityEquals(java.security.Identity)&quot;&gt; &lt;code&gt;identityEquals&lt;/code&gt; &lt;/a&gt;, which subclasses should override.</target>
        </trans-unit>
        <trans-unit id="3ee97f37f3034452f8959a4d3e284398f9c8b792" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this identity. This first tests to see if the entities actually refer to the same object, in which case it returns true. Next, it checks to see if the entities have the same name and the same scope. If they do, the method returns true. Otherwise, it calls &lt;a href=&quot;identity#identityEquals-java.security.Identity-&quot;&gt;&lt;code&gt;identityEquals&lt;/code&gt;&lt;/a&gt;, which subclasses should override.</source>
          <target state="translated">지정된 객체와이 ID 사이의 동등성을 테스트합니다. 먼저 엔터티가 실제로 동일한 개체를 참조하는지 테스트하여이 경우 true를 반환합니다. 다음으로 엔터티의 이름과 범위가 같은지 확인합니다. 그렇다면, 메소드는 true를 리턴합니다. 그렇지 않은 경우, &lt;a href=&quot;identity#identityEquals-java.security.Identity-&quot;&gt; &lt;code&gt;identityEquals&lt;/code&gt; 를&lt;/a&gt; 호출 하여 서브 클래스를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="4b82eb070170731e043215b85817cc47b09128fe" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this object.</source>
          <target state="translated">Tests for equality between the specified object and this object.</target>
        </trans-unit>
        <trans-unit id="e846efd30d641142757ba73272c7634af77f3fb0" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this object. Two CodeSource objects are considered equal if their locations are of identical value and if their signer certificate chains are of identical value. It is not required that the certificate chains be in the same order.</source>
          <target state="translated">지정된 객체와이 객체의 동등성을 테스트합니다. 위치가 동일한 값이고 서명자 인증서 체인의 값이 동일한 경우 두 개의 CodeSource 객체가 동일한 것으로 간주됩니다. 인증서 체인이 동일한 순서 일 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="2e216d9c2351740e178f000f8eb26645b630cfb2" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this object. Two RC2ParameterSpec objects are considered equal if their effective key sizes and IVs are equal. (Two IV references are considered equal if both are &lt;code&gt;null&lt;/code&gt;.)</source>
          <target state="translated">지정된 객체와이 객체 사이의 동등성을 테스트합니다. 유효 키 크기와 IV가 동일한 경우 두 RC2ParameterSpec 오브젝트는 동일한 것으로 간주됩니다. (둘 다 &lt;code&gt;null&lt;/code&gt; 인 경우 두 IV 참조는 동일한 것으로 간주됩니다 .)</target>
        </trans-unit>
        <trans-unit id="4ebd7976496a6095c4382c97f651dbc377a2e97c" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this object. Two RC5ParameterSpec objects are considered equal if their version numbers, number of rounds, word sizes, and IVs are equal. (Two IV references are considered equal if both are &lt;code&gt;null&lt;/code&gt;.)</source>
          <target state="translated">지정된 객체와이 객체 사이의 동등성을 테스트합니다. 버전 번호, 라운드 수, 단어 크기 및 IV가 동일한 경우 두 RC5ParameterSpec 오브젝트는 동일한 것으로 간주됩니다. (둘 다 &lt;code&gt;null&lt;/code&gt; 인 경우 두 IV 참조는 동일한 것으로 간주됩니다 .)</target>
        </trans-unit>
        <trans-unit id="d94118b777999bbb8180e6778a9f193cd1f7177c" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this object. Two SecretKeySpec objects are considered equal if they are both SecretKey instances which have the same case-insensitive algorithm name and key encoding.</source>
          <target state="translated">지정된 객체와이 객체의 동등성을 테스트합니다. 대소 문자를 구분하지 않는 알고리즘 이름과 키 인코딩을 갖는 SecretKey 인스턴스 인 두 SecretKeySpec 객체는 동일한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="3e842125983005a85716151ea74a2a458c8b6a63" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this timestamp.</source>
          <target state="translated">Tests for equality between the specified object and this timestamp.</target>
        </trans-unit>
        <trans-unit id="e202fdc1ede6228728e18b363e32123368f17015" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this timestamp. Two timestamps are considered equal if the date and time of their timestamp's and their signer's certificate paths are equal.</source>
          <target state="translated">지정된 객체와이 타임 스탬프 사이의 동등성을 테스트합니다. 타임 스탬프의 날짜와 시간과 서명자의 인증서 경로가 동일한 경우 두 개의 타임 스탬프가 동일한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="40a652172d0d3752572cb26957f07fb65956c2a5" translate="yes" xml:space="preserve">
          <source>Tests if &lt;a href=&quot;socketoptions#SO_KEEPALIVE&quot;&gt;&lt;code&gt;SO_KEEPALIVE&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_KEEPALIVE&quot;&gt; &lt;code&gt;SO_KEEPALIVE&lt;/code&gt; &lt;/a&gt; 가 활성화되어 있는지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="5640cc756350ea712e4777a13931e3e40fd33cb0" translate="yes" xml:space="preserve">
          <source>Tests if &lt;a href=&quot;socketoptions#SO_OOBINLINE&quot;&gt;&lt;code&gt;SO_OOBINLINE&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_OOBINLINE&quot;&gt; &lt;code&gt;SO_OOBINLINE&lt;/code&gt; &lt;/a&gt; 이 사용 가능한지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="644dfe832fab41b7e14dcbc3ffa174eb998caac6" translate="yes" xml:space="preserve">
          <source>Tests if &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; &lt;/a&gt; 이 사용 가능한지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="57668a62afb79c7e79d1c39b93d1c381607245f0" translate="yes" xml:space="preserve">
          <source>Tests if &lt;a href=&quot;socketoptions#TCP_NODELAY&quot;&gt;&lt;code&gt;TCP_NODELAY&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#TCP_NODELAY&quot;&gt; &lt;code&gt;TCP_NODELAY&lt;/code&gt; &lt;/a&gt; 가 활성화되어 있는지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="9ff325ac533db8a9187010d4dae606b4cbad567b" translate="yes" xml:space="preserve">
          <source>Tests if SO_BROADCAST is enabled.</source>
          <target state="translated">SO_BROADCAST가 사용 가능한지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="5d3ebaff3d766fee921b8490a0d046a410a53e83" translate="yes" xml:space="preserve">
          <source>Tests if SO_REUSEADDR is enabled.</source>
          <target state="translated">SO_REUSEADDR이 사용 가능한지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="089b2516019b85bc6303c16886f397971a885824" translate="yes" xml:space="preserve">
          <source>Tests if a given &lt;code&gt;Point2D&lt;/code&gt; is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt;.</source>
          <target state="translated">Tests if a given &lt;code&gt;Point2D&lt;/code&gt; is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f21398c6e3debd68b5432c4bf373c3257818a38b" translate="yes" xml:space="preserve">
          <source>Tests if a given &lt;code&gt;Point2D&lt;/code&gt; is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt;. This method is required to implement the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns &lt;code&gt;false&lt;/code&gt; since a line contains no area.</source>
          <target state="translated">Tests if a given &lt;code&gt;Point2D&lt;/code&gt; is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt; . This method is required to implement the &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns &lt;code&gt;false&lt;/code&gt; since a line contains no area.</target>
        </trans-unit>
        <trans-unit id="f2beb578c764e0b7cceb8e9495ec41de762465ba" translate="yes" xml:space="preserve">
          <source>Tests if a later token had already been processed.</source>
          <target state="translated">Tests if a later token had already been processed.</target>
        </trans-unit>
        <trans-unit id="24ca3a685ec18df5709a6858ac60e286aaee1715" translate="yes" xml:space="preserve">
          <source>Tests if a method from a class with the specified name is on the execution stack.</source>
          <target state="translated">지정된 이름을 가진 클래스의 메소드가 실행 스택에 있는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="872a93712bc2424d0724304eba216c2642dd6949" translate="yes" xml:space="preserve">
          <source>Tests if a specified &lt;a href=&quot;geom/point2d&quot;&gt;&lt;code&gt;Point2D&lt;/code&gt;&lt;/a&gt; is inside the boundary of the &lt;code&gt;Shape&lt;/code&gt;, as described by the &lt;a href=&quot;shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</source>
          <target state="translated">Tests if a specified &lt;a href=&quot;geom/point2d&quot;&gt; &lt;code&gt;Point2D&lt;/code&gt; &lt;/a&gt; is inside the boundary of the &lt;code&gt;Shape&lt;/code&gt; , as described by the &lt;a href=&quot;shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7f69c2c8432a4d96ebe46712e507c69f3552245a" translate="yes" xml:space="preserve">
          <source>Tests if a specified &lt;a href=&quot;point2d&quot;&gt;&lt;code&gt;Point2D&lt;/code&gt;&lt;/a&gt; is inside the boundary of the &lt;code&gt;Shape&lt;/code&gt;, as described by the &lt;a href=&quot;../shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</source>
          <target state="translated">Tests if a specified &lt;a href=&quot;point2d&quot;&gt; &lt;code&gt;Point2D&lt;/code&gt; &lt;/a&gt; is inside the boundary of the &lt;code&gt;Shape&lt;/code&gt; , as described by the &lt;a href=&quot;../shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a0d20ae8cedd69566e588547f8a96cd4e54882a6" translate="yes" xml:space="preserve">
          <source>Tests if a specified coordinate is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt;.</source>
          <target state="translated">Tests if a specified coordinate is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4a0606cee077c66cfcf1f28539403394c7f8b6f" translate="yes" xml:space="preserve">
          <source>Tests if a specified coordinate is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt;. This method is required to implement the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns &lt;code&gt;false&lt;/code&gt; since a line contains no area.</source>
          <target state="translated">Tests if a specified coordinate is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt; . This method is required to implement the &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns &lt;code&gt;false&lt;/code&gt; since a line contains no area.</target>
        </trans-unit>
        <trans-unit id="9b56aaef08fcf92fc4640d29ba20b707d2367106" translate="yes" xml:space="preserve">
          <source>Tests if a specified file should be included in a file list.</source>
          <target state="translated">지정된 파일이 파일 목록에 포함되어야하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="92fd6bc8ba5d3531d2af0dfc56dc4cba72ef4b0c" translate="yes" xml:space="preserve">
          <source>Tests if a specified object is equal to this &lt;code&gt;BasicStroke&lt;/code&gt; by first testing if it is a &lt;code&gt;BasicStroke&lt;/code&gt; and then comparing its width, join, cap, miter limit, dash, and dash phase attributes with those of this &lt;code&gt;BasicStroke&lt;/code&gt;.</source>
          <target state="translated">Tests if a specified object is equal to this &lt;code&gt;BasicStroke&lt;/code&gt; by first testing if it is a &lt;code&gt;BasicStroke&lt;/code&gt; and then comparing its width, join, cap, miter limit, dash, and dash phase attributes with those of this &lt;code&gt;BasicStroke&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8543adf651f55d2d4910f2ebaf222e1e54bee183" translate="yes" xml:space="preserve">
          <source>Tests if an expected token was not received, i.e., one or more predecessor tokens have not yet been successfully processed.</source>
          <target state="translated">Tests if an expected token was not received, i.e., one or more predecessor tokens have not yet been successfully processed.</target>
        </trans-unit>
        <trans-unit id="60a2b6f538f56369d17c0b1ca0ccb950b94b7419" translate="yes" xml:space="preserve">
          <source>Tests if some key maps into the specified value in this hashtable.</source>
          <target state="translated">Tests if some key maps into the specified value in this hashtable.</target>
        </trans-unit>
        <trans-unit id="e8de0f611c57365cc2d0355d776e6c0ff0a53d35" translate="yes" xml:space="preserve">
          <source>Tests if some key maps into the specified value in this hashtable. This operation is more expensive than the &lt;a href=&quot;#containsKey(java.lang.Object)&quot;&gt;&lt;code&gt;containsKey&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Tests if some key maps into the specified value in this hashtable. This operation is more expensive than the &lt;a href=&quot;#containsKey(java.lang.Object)&quot;&gt; &lt;code&gt;containsKey&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="f7ea51141bb722c450ceeb00c520246e6ea92ee7" translate="yes" xml:space="preserve">
          <source>Tests if some key maps into the specified value in this hashtable. This operation is more expensive than the &lt;a href=&quot;hashtable#containsKey-java.lang.Object-&quot;&gt;&lt;code&gt;containsKey&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">일부 키가이 해시 테이블의 지정된 값에 매핑되는지 테스트합니다. 이 조작은 &lt;a href=&quot;hashtable#containsKey-java.lang.Object-&quot;&gt; &lt;code&gt;containsKey&lt;/code&gt; &lt;/a&gt; 메소드 보다 비쌉니다 .</target>
        </trans-unit>
        <trans-unit id="5fb815736873e34454c94811223e0a4810394010" translate="yes" xml:space="preserve">
          <source>Tests if some key maps into the specified value in this table.</source>
          <target state="translated">Tests if some key maps into the specified value in this table.</target>
        </trans-unit>
        <trans-unit id="2fa5a4893859ae5c92b66cacbaea53d9329066a0" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine implementation supports CPU time measurement for any thread.</source>
          <target state="translated">Tests if the Java virtual machine implementation supports CPU time measurement for any thread.</target>
        </trans-unit>
        <trans-unit id="7a2097b7b0179cc3bda4eb069c95a40142b4742c" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine implementation supports CPU time measurement for any thread. A Java virtual machine implementation that supports CPU time measurement for any thread will also support CPU time measurement for the current thread.</source>
          <target state="translated">JVM (Java Virtual Machine) 구현이 스레드에 대한 CPU 시간 측정을 지원하는지 테스트합니다. 모든 스레드에 대한 CPU 시간 측정을 지원하는 Java 가상 머신 구현은 현재 스레드에 대한 CPU 시간 측정도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="de00727d4cbe2d590a8a6190358cb567f49867e6" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports CPU time measurement for the current thread.</source>
          <target state="translated">Tests if the Java virtual machine supports CPU time measurement for the current thread.</target>
        </trans-unit>
        <trans-unit id="1177f97fd63cd5a2d418380702b3e9638df44d42" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports CPU time measurement for the current thread. This method returns &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;#isThreadCpuTimeSupported()&quot;&gt;&lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Tests if the Java virtual machine supports CPU time measurement for the current thread. This method returns &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;#isThreadCpuTimeSupported()&quot;&gt; &lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ba9f760a24fe1c2b0857b032303f5c1ed500793" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports CPU time measurement for the current thread. This method returns &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;threadmxbean#isThreadCpuTimeSupported--&quot;&gt;&lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Java 가상 머신이 현재 스레드에 대한 CPU 시간 측정을 지원하는지 테스트합니다. &lt;a href=&quot;threadmxbean#isThreadCpuTimeSupported--&quot;&gt; &lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 리턴 하면 이 메소드는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="22d12ae69e2128c6fe106d8d15c7cb6a36ec0652" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports monitoring of &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt; ownable synchronizer&lt;/a&gt; usage.</source>
          <target state="translated">Java 가상 머신이 &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;소유 가능한 동기화 프로그램&lt;/a&gt; 사용 모니터링을 지원하는지 테스트 합니다.</target>
        </trans-unit>
        <trans-unit id="c3360bbbfd90e6c09212757da6b1dcbdc52ed507" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports monitoring of object monitor usage.</source>
          <target state="translated">JVM (Java Virtual Machine)이 오브젝트 모니터 사용 모니터링을 지원하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="43a0e72e27fa6b3526b5bb164e8becbdea872880" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports the boot class path mechanism used by the bootstrap class loader to search for class files.</source>
          <target state="translated">Java 가상 머신이 부트 스트랩 클래스 로더가 클래스 파일을 검색하는 데 사용하는 부트 클래스 경로 메커니즘을 지원하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="05f3dfd28daeb0da6fe621fa0caa35011318cd8c" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports the monitoring of compilation time.</source>
          <target state="translated">Java 가상 머신이 컴파일 시간의 모니터링을 지원하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="ce50fff26b324c9d3354eaa9da5608d9665266d9" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports thread contention monitoring.</source>
          <target state="translated">JVM (Java Virtual Machine)이 스레드 경합 모니터링을 지원하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="5b8af7bc5b58273287f6d68a702a2cb67c42198d" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt;.</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="529cb57f4eeb873743e6cdf5d8d9caa6a1568ee5" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt;. The &lt;code&gt;Shape.contains()&lt;/code&gt; method allows a &lt;code&gt;Shape&lt;/code&gt; implementation to conservatively return &lt;code&gt;false&lt;/code&gt; when:</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt; . The &lt;code&gt;Shape.contains()&lt;/code&gt; method allows a &lt;code&gt;Shape&lt;/code&gt; implementation to conservatively return &lt;code&gt;false&lt;/code&gt; when:</target>
        </trans-unit>
        <trans-unit id="29bb7e8a5795be55b73a9c6112eec85064578c74" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified rectangular area.</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified rectangular area.</target>
        </trans-unit>
        <trans-unit id="f235368ac31720d2ce094e34d1ec453e3b75f4c4" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified rectangular area. All coordinates that lie inside the rectangular area must lie within the &lt;code&gt;Shape&lt;/code&gt; for the entire rectangular area to be considered contained within the &lt;code&gt;Shape&lt;/code&gt;.</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified rectangular area. All coordinates that lie inside the rectangular area must lie within the &lt;code&gt;Shape&lt;/code&gt; for the entire rectangular area to be considered contained within the &lt;code&gt;Shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dcde6280cdf78e9fee618b431c29568c2a6b493" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified &lt;code&gt;Rectangle2D&lt;/code&gt;.</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified &lt;code&gt;Rectangle2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="581f725a1ec04333ff0cdd46c6d69d072e6e0f26" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified &lt;code&gt;Rectangle2D&lt;/code&gt;. The &lt;code&gt;Shape.intersects()&lt;/code&gt; method allows a &lt;code&gt;Shape&lt;/code&gt; implementation to conservatively return &lt;code&gt;true&lt;/code&gt; when:</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified &lt;code&gt;Rectangle2D&lt;/code&gt; . The &lt;code&gt;Shape.intersects()&lt;/code&gt; method allows a &lt;code&gt;Shape&lt;/code&gt; implementation to conservatively return &lt;code&gt;true&lt;/code&gt; when:</target>
        </trans-unit>
        <trans-unit id="b8c8c9b16b17839c15911f4ef5825c2466cf28ff" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified rectangular area.</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified rectangular area.</target>
        </trans-unit>
        <trans-unit id="5182c0f953e3f18b9b7a93d2b4c496c01ed2a94a" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified rectangular area. The rectangular area is considered to intersect the &lt;code&gt;Shape&lt;/code&gt; if any point is contained in both the interior of the &lt;code&gt;Shape&lt;/code&gt; and the specified rectangular area.</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified rectangular area. The rectangular area is considered to intersect the &lt;code&gt;Shape&lt;/code&gt; if any point is contained in both the interior of the &lt;code&gt;Shape&lt;/code&gt; and the specified rectangular area.</target>
        </trans-unit>
        <trans-unit id="74f321d80d3e8f837b09a3227cc2595fafcb8a3c" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; intersects the interior of a specified &lt;a href=&quot;rectangle2d&quot;&gt;&lt;code&gt;Rectangle2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tests if the interior of the specified &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt; intersects the interior of a specified &lt;a href=&quot;rectangle2d&quot;&gt; &lt;code&gt;Rectangle2D&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cf58eb5ad62b5ed93f78e9643130c927f114e8e9" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; intersects the interior of a specified set of rectangular coordinates.</source>
          <target state="translated">Tests if the interior of the specified &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt; intersects the interior of a specified set of rectangular coordinates.</target>
        </trans-unit>
        <trans-unit id="c80edca0e0eafa2234efe57988b1d421528652ec" translate="yes" xml:space="preserve">
          <source>Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt;.</source>
          <target state="translated">Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="738e5dcb80e46e5c827f2be3565b95b34f616be8" translate="yes" xml:space="preserve">
          <source>Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt;. This method is required to implement the &lt;code&gt;Shape&lt;/code&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns &lt;code&gt;false&lt;/code&gt; since a line contains no area.</source>
          <target state="translated">Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt; . This method is required to implement the &lt;code&gt;Shape&lt;/code&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns &lt;code&gt;false&lt;/code&gt; since a line contains no area.</target>
        </trans-unit>
        <trans-unit id="cdc50164510c4d169f1b4d476fece7f03b077ba4" translate="yes" xml:space="preserve">
          <source>Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified set of rectangular coordinates.</source>
          <target state="translated">Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified set of rectangular coordinates.</target>
        </trans-unit>
        <trans-unit id="009282262cdffd24e4c6e8c924a6ce2bb299705e" translate="yes" xml:space="preserve">
          <source>Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified set of rectangular coordinates. This method is required to implement the &lt;code&gt;Shape&lt;/code&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns false since a line contains no area.</source>
          <target state="translated">Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified set of rectangular coordinates. This method is required to implement the &lt;code&gt;Shape&lt;/code&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns false since a line contains no area.</target>
        </trans-unit>
        <trans-unit id="da119a1e653da178be46a4aa738d46efe69eddc7" translate="yes" xml:space="preserve">
          <source>Tests if the iteration is complete.</source>
          <target state="translated">Tests if the iteration is complete.</target>
        </trans-unit>
        <trans-unit id="7b9a2d40fabf928c7491e1ce7aee0eaed6557c48" translate="yes" xml:space="preserve">
          <source>Tests if the line segment from &lt;code&gt;(x1,y1)&lt;/code&gt; to &lt;code&gt;(x2,y2)&lt;/code&gt; intersects the line segment from &lt;code&gt;(x3,y3)&lt;/code&gt; to &lt;code&gt;(x4,y4)&lt;/code&gt;.</source>
          <target state="translated">Tests if the line segment from &lt;code&gt;(x1,y1)&lt;/code&gt; to &lt;code&gt;(x2,y2)&lt;/code&gt; intersects the line segment from &lt;code&gt;(x3,y3)&lt;/code&gt; to &lt;code&gt;(x4,y4)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c93e916d6add6d0deb6bec1d705db617590d81eb" translate="yes" xml:space="preserve">
          <source>Tests if the line segment from &lt;code&gt;(x1,y1)&lt;/code&gt; to &lt;code&gt;(x2,y2)&lt;/code&gt; intersects this line segment.</source>
          <target state="translated">Tests if the line segment from &lt;code&gt;(x1,y1)&lt;/code&gt; to &lt;code&gt;(x2,y2)&lt;/code&gt; intersects this line segment.</target>
        </trans-unit>
        <trans-unit id="205ca6f6794761af7b3d2e9274622cf2862b86e9" translate="yes" xml:space="preserve">
          <source>Tests if the memory usage of this memory pool after the most recent collection on which the Java virtual machine has expended effort has reached or exceeded its collection usage threshold.</source>
          <target state="translated">Tests if the memory usage of this memory pool after the most recent collection on which the Java virtual machine has expended effort has reached or exceeded its collection usage threshold.</target>
        </trans-unit>
        <trans-unit id="589d6ead6695db963debe0595fb7df645128d97e" translate="yes" xml:space="preserve">
          <source>Tests if the memory usage of this memory pool after the most recent collection on which the Java virtual machine has expended effort has reached or exceeded its collection usage threshold. This method does not request the Java virtual machine to perform any garbage collection other than its normal automatic memory management.</source>
          <target state="translated">Java 가상 머신이 노력한 가장 최근의 콜렉션 이후에이 메모리 풀의 메모리 사용량이 콜렉션 사용량 임계 값에 도달했는지 또는 초과했는지 테스트합니다. 이 메소드는 Java 가상 머신이 일반 자동 메모리 관리 이외의 가비지 콜렉션을 수행하도록 요청하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="06e15add558ebdf1cf007c4ce672e9a43724f8d3" translate="yes" xml:space="preserve">
          <source>Tests if the memory usage of this memory pool reaches or exceeds its usage threshold value.</source>
          <target state="translated">이 메모리 풀의 메모리 사용량이 사용량 임계 값에 도달하거나 초과하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="cea372bb8f045163bec9b8681db1d7217328e146" translate="yes" xml:space="preserve">
          <source>Tests if the monitor MBean is active.</source>
          <target state="translated">Tests if the monitor MBean is active.</target>
        </trans-unit>
        <trans-unit id="2a6856dadf5872fe517fd09a16d82f584b3aaed2" translate="yes" xml:space="preserve">
          <source>Tests if the monitor MBean is active. A monitor MBean is marked active when the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;#stop()&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">Tests if the monitor MBean is active. A monitor MBean is marked active when the &lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;#stop()&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt; method is called.</target>
        </trans-unit>
        <trans-unit id="9ec21324bd2e358fc5cce3bd3f29fb53e2a92118" translate="yes" xml:space="preserve">
          <source>Tests if the monitor MBean is active. A monitor MBean is marked active when the &lt;a href=&quot;monitormbean#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;monitormbean#stop--&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">모니터 MBean가 활성화되어 있는지 테스트합니다. &lt;a href=&quot;monitormbean#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 때 모니터 MBean이 활성으로 표시됩니다 . &lt;a href=&quot;monitormbean#stop--&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt; 메소드가 호출 되면 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="12eb2631407d23da5e091aa6b7bd4aba08e780a3" translate="yes" xml:space="preserve">
          <source>Tests if the specified &lt;a href=&quot;point2d&quot;&gt;&lt;code&gt;Point2D&lt;/code&gt;&lt;/a&gt; is inside the closed boundary of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tests if the specified &lt;a href=&quot;point2d&quot;&gt; &lt;code&gt;Point2D&lt;/code&gt; &lt;/a&gt; is inside the closed boundary of the specified &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9609d0d59bbd19dc7f9329403f6ab571b63262d7" translate="yes" xml:space="preserve">
          <source>Tests if the specified &lt;a href=&quot;rectangle2d&quot;&gt;&lt;code&gt;Rectangle2D&lt;/code&gt;&lt;/a&gt; is entirely inside the closed boundary of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tests if the specified &lt;a href=&quot;rectangle2d&quot;&gt; &lt;code&gt;Rectangle2D&lt;/code&gt; &lt;/a&gt; is entirely inside the closed boundary of the specified &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a02ca50064d966419c7a6dc6eb90617b0b9521f8" translate="yes" xml:space="preserve">
          <source>Tests if the specified &lt;code&gt;GlyphVector&lt;/code&gt; exactly equals this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">Tests if the specified &lt;code&gt;GlyphVector&lt;/code&gt; exactly equals this &lt;code&gt;GlyphVector&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da4c513b3c59ff4fc776fc7839eb8478a6dc1a68" translate="yes" xml:space="preserve">
          <source>Tests if the specified &lt;code&gt;Object&lt;/code&gt; is an instance of &lt;code&gt;ComponentColorModel&lt;/code&gt; and equals this &lt;code&gt;ComponentColorModel&lt;/code&gt;.</source>
          <target state="translated">Tests if the specified &lt;code&gt;Object&lt;/code&gt; is an instance of &lt;code&gt;ComponentColorModel&lt;/code&gt; and equals this &lt;code&gt;ComponentColorModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1b423e0a401b87ac478a4a40467ed2280e4c574" translate="yes" xml:space="preserve">
          <source>Tests if the specified &lt;code&gt;Object&lt;/code&gt; is an instance of &lt;code&gt;IndexColorModel&lt;/code&gt; and if it equals this &lt;code&gt;IndexColorModel&lt;/code&gt;</source>
          <target state="translated">Tests if the specified &lt;code&gt;Object&lt;/code&gt; is an instance of &lt;code&gt;IndexColorModel&lt;/code&gt; and if it equals this &lt;code&gt;IndexColorModel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="922b46bb236637f4d8d72c6de2aace9dc89b84c2" translate="yes" xml:space="preserve">
          <source>Tests if the specified &lt;code&gt;Object&lt;/code&gt; is an instance of &lt;code&gt;PackedColorModel&lt;/code&gt; and equals this &lt;code&gt;PackedColorModel&lt;/code&gt;.</source>
          <target state="translated">Tests if the specified &lt;code&gt;Object&lt;/code&gt; is an instance of &lt;code&gt;PackedColorModel&lt;/code&gt; and equals this &lt;code&gt;PackedColorModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13f331a59f7c0878ed677f108f6f4f0da2523667" translate="yes" xml:space="preserve">
          <source>Tests if the specified coordinates are inside the boundary of the &lt;code&gt;Shape&lt;/code&gt;, as described by the &lt;a href=&quot;../shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</source>
          <target state="translated">Tests if the specified coordinates are inside the boundary of the &lt;code&gt;Shape&lt;/code&gt; , as described by the &lt;a href=&quot;../shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1b9d8ef113494657790128660cbf264a098edcbf" translate="yes" xml:space="preserve">
          <source>Tests if the specified coordinates are inside the boundary of the &lt;code&gt;Shape&lt;/code&gt;, as described by the &lt;a href=&quot;shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</source>
          <target state="translated">Tests if the specified coordinates are inside the boundary of the &lt;code&gt;Shape&lt;/code&gt; , as described by the &lt;a href=&quot;shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7acbbed132a47d3c8d867bd45d14d7c79c2f0350" translate="yes" xml:space="preserve">
          <source>Tests if the specified coordinates are inside the closed boundary of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tests if the specified coordinates are inside the closed boundary of the specified &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e5cbf688ecd1a53c6ae19f423dc6ff3c8686b799" translate="yes" xml:space="preserve">
          <source>Tests if the specified line segment intersects the interior of this &lt;code&gt;Rectangle2D&lt;/code&gt;.</source>
          <target state="translated">Tests if the specified line segment intersects the interior of this &lt;code&gt;Rectangle2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34f240de22d971f34b69e1ae3f7b193c0404fbb5" translate="yes" xml:space="preserve">
          <source>Tests if the specified line segment intersects this line segment.</source>
          <target state="translated">Tests if the specified line segment intersects this line segment.</target>
        </trans-unit>
        <trans-unit id="829ea16e88643c4354eb8e289328fcade68b7cd6" translate="yes" xml:space="preserve">
          <source>Tests if the specified object is a key in this hashtable.</source>
          <target state="translated">지정된 객체가이 해시 테이블의 키인지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="1e5b79dd75c69804ac69d0b591a74c9eee88301c" translate="yes" xml:space="preserve">
          <source>Tests if the specified object is a key in this table.</source>
          <target state="translated">지정된 객체가이 테이블의 키인지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="49176c522441078d0c397d9ea9f48775a9a7fe23" translate="yes" xml:space="preserve">
          <source>Tests if the specified rectangular area is entirely inside the closed boundary of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tests if the specified rectangular area is entirely inside the closed boundary of the specified &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fd3235e2fa5d8939fcbf413ff193b5687616fb84" translate="yes" xml:space="preserve">
          <source>Tests if the substring of this string beginning at the specified index starts with the specified prefix.</source>
          <target state="translated">지정된 색인에서 시작하는이 문자열의 하위 문자열이 지정된 접두어로 시작하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="f278d34e0140f3a8f1ad10e42a87c437cf2a12fd" translate="yes" xml:space="preserve">
          <source>Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is a &lt;a href=&quot;../../../../java.base/java/lang/thread#isDaemon()&quot;&gt;daemon thread&lt;/a&gt;.</source>
          <target state="translated">Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is a &lt;a href=&quot;../../../../java.base/java/lang/thread#isDaemon()&quot;&gt;daemon thread&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9b995d928d449b0aaa0f792bda30672bc6c8317b" translate="yes" xml:space="preserve">
          <source>Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is executing native code via the Java Native Interface (JNI).</source>
          <target state="translated">Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is executing native code via the Java Native Interface (JNI).</target>
        </trans-unit>
        <trans-unit id="468f6617f89a65261a19a8d28baf3bcabb1b80dd" translate="yes" xml:space="preserve">
          <source>Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is executing native code via the Java Native Interface (JNI). The JNI native code does not include the virtual machine support code or the compiled native code generated by the virtual machine.</source>
          <target state="translated">이 &lt;code&gt;ThreadInfo&lt;/code&gt; 에 관련한 thread가 있는지를 테스트합니다 가 JNI (Java Native Interface)를 통해 원시 코드를 실행 . JNI 기본 코드에는 가상 시스템 지원 코드 또는 가상 시스템에서 생성 된 컴파일 된 기본 코드가 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fbcf564a71f66da9fd534961891f1419bd1dda3b" translate="yes" xml:space="preserve">
          <source>Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is suspended.</source>
          <target state="translated">Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is suspended.</target>
        </trans-unit>
        <trans-unit id="6550927ad151019c4ec40bf0b28e64e42f59f7cf" translate="yes" xml:space="preserve">
          <source>Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is suspended. This method returns &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;../../../../java.base/java/lang/thread#suspend()&quot;&gt;&lt;code&gt;Thread.suspend()&lt;/code&gt;&lt;/a&gt; has been called.</source>
          <target state="translated">Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is suspended. This method returns &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;../../../../java.base/java/lang/thread#suspend()&quot;&gt; &lt;code&gt;Thread.suspend()&lt;/code&gt; &lt;/a&gt; has been called.</target>
        </trans-unit>
        <trans-unit id="44ae8e55cbddd846c3d29c7c636c18bd5b8c2fae" translate="yes" xml:space="preserve">
          <source>Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is suspended. This method returns &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;../thread#suspend--&quot;&gt;&lt;code&gt;Thread.suspend()&lt;/code&gt;&lt;/a&gt; has been called.</source>
          <target state="translated">이 &lt;code&gt;ThreadInfo&lt;/code&gt; 에 관련한 thread 가 중단 되고 있는지를 테스트합니다 . &lt;a href=&quot;../thread#suspend--&quot;&gt; &lt;code&gt;Thread.suspend()&lt;/code&gt; &lt;/a&gt; 경우이 메소드는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다. 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="89bc9ac87680e9de4f314ffe780453fe75db0b00" translate="yes" xml:space="preserve">
          <source>Tests if the verbose output for the class loading system is enabled.</source>
          <target state="translated">클래스 로딩 시스템에 대한 상세 출력이 사용 가능한지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="5bb981dce6053fac210678fa946f8539f470f112" translate="yes" xml:space="preserve">
          <source>Tests if there are more tokens available from this tokenizer's string.</source>
          <target state="translated">Tests if there are more tokens available from this tokenizer's string.</target>
        </trans-unit>
        <trans-unit id="a6650d4ae9e4db6e13d294c3c2dd317d8302d584" translate="yes" xml:space="preserve">
          <source>Tests if there are more tokens available from this tokenizer's string. If this method returns &lt;code&gt;true&lt;/code&gt;, then a subsequent call to &lt;code&gt;nextToken&lt;/code&gt; with no argument will successfully return a token.</source>
          <target state="translated">이 토크 나이저의 문자열에서 사용 가능한 토큰이 더 있는지 테스트합니다. 이 메소드가 &lt;code&gt;true&lt;/code&gt; 를 돌려주는 경우 &lt;code&gt;nextToken&lt;/code&gt; 에 대한 후속 호출 인수가없는 은 토큰을 성공적으로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c48c1f4c95f4ffffc88841e05b6cfcb4db399ad8" translate="yes" xml:space="preserve">
          <source>Tests if there is a security check in progress.</source>
          <target state="translated">보안 검사가 진행 중인지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="d72ac81e2b1381613fc52e591526f6a760a02045" translate="yes" xml:space="preserve">
          <source>Tests if this &lt;code&gt;InputStream&lt;/code&gt; supports mark/reset.</source>
          <target state="translated">Tests if this &lt;code&gt;InputStream&lt;/code&gt; supports mark/reset.</target>
        </trans-unit>
        <trans-unit id="fa4feeec7dee56f00c46a1f88381c96e7e6cca98" translate="yes" xml:space="preserve">
          <source>Tests if this &lt;code&gt;InputStream&lt;/code&gt; supports mark/reset. The &lt;code&gt;markSupported&lt;/code&gt; method of &lt;code&gt;ByteArrayInputStream&lt;/code&gt; always returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;InputStream&lt;/code&gt; 가 마크 / 리셋을 지원 하는지 테스트합니다 . &lt;code&gt;ByteArrayInputStream&lt;/code&gt; 의 &lt;code&gt;markSupported&lt;/code&gt; 메소드는 항상 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다. .</target>
        </trans-unit>
        <trans-unit id="f869c2d4dadf730da5549032b133b4a5311cb639" translate="yes" xml:space="preserve">
          <source>Tests if this GSSCredential asserts the same entity as the supplied object.</source>
          <target state="translated">이 GSSCredential이 제공된 객체와 동일한 엔티티를 주장하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="785692d0ed29c9b0295fccc72b94e3e713fd91d3" translate="yes" xml:space="preserve">
          <source>Tests if this GSSCredential asserts the same entity as the supplied object. The two credentials must be acquired over the same mechanisms and must refer to the same principal.</source>
          <target state="translated">이 GSSCredential이 제공된 객체와 동일한 엔티티를 주장하는지 테스트합니다. 두 자격 증명은 동일한 메커니즘을 통해 획득해야하며 동일한 주체를 참조해야합니다.</target>
        </trans-unit>
        <trans-unit id="77a88f0d30c8b9251d6617e646d1961117d202ce" translate="yes" xml:space="preserve">
          <source>Tests if this date is after the specified date.</source>
          <target state="translated">이 날짜가 지정된 날짜 이후인지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="493b22d31b4c0749f371bd16d78e70028618b8dc" translate="yes" xml:space="preserve">
          <source>Tests if this date is before the specified date.</source>
          <target state="translated">이 날짜가 지정된 날짜 이전인지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="1e1f68ab6be67292a24d0bb3cb3303475d1b939a" translate="yes" xml:space="preserve">
          <source>Tests if this dictionary maps no keys to value.</source>
          <target state="translated">이 사전이 값에 키를 매핑하지 않는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="8d73c41bea9ac1467d0c73aa19a3bd11f22ab73e" translate="yes" xml:space="preserve">
          <source>Tests if this dictionary maps no keys to value. The general contract for the &lt;code&gt;isEmpty&lt;/code&gt; method is that the result is true if and only if this dictionary contains no entries.</source>
          <target state="translated">이 사전이 키를 값에 매핑하지 않는지 테스트합니다. &lt;code&gt;isEmpty&lt;/code&gt; 메소드 의 일반적인 계약은 이 사전에 항목이없는 경우에만 결과가 적용되는 것입니다.</target>
        </trans-unit>
        <trans-unit id="65ac5dff26425c505b283f15e32c49061f185c54" translate="yes" xml:space="preserve">
          <source>Tests if this enumeration contains more elements.</source>
          <target state="translated">이 열거에 더 많은 요소가 포함되어 있는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="5f5af7c093f8f9f456dc1d94e796324884f5dd5c" translate="yes" xml:space="preserve">
          <source>Tests if this file descriptor object is valid.</source>
          <target state="translated">이 파일 기술자 객체가 유효한지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="e164f92e268148bbad9efa0fe1440f6463fccc1b" translate="yes" xml:space="preserve">
          <source>Tests if this hashtable maps no keys to values.</source>
          <target state="translated">이 해시 테이블이 키를 값에 매핑하지 않는지를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="40cd6174d30712287bb326d77fb3282f644245d8" translate="yes" xml:space="preserve">
          <source>Tests if this input stream supports the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods, which it does not.</source>
          <target state="translated">이 입력 스트림이 &lt;code&gt;mark&lt;/code&gt; 및 &lt;code&gt;reset&lt;/code&gt; 메소드를 지원하는지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="a24069bb2665fd32338d8d3841634d4b3af92df9" translate="yes" xml:space="preserve">
          <source>Tests if this input stream supports the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods.</source>
          <target state="translated">이 입력 스트림이 &lt;code&gt;mark&lt;/code&gt; 및 &lt;code&gt;reset&lt;/code&gt; 메서드를 지원하는지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="a7757143555f0dcad2870bbee6e0b52f07a77fbe" translate="yes" xml:space="preserve">
          <source>Tests if this input stream supports the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods. The &lt;code&gt;markSupported&lt;/code&gt; method of &lt;code&gt;BufferedInputStream&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 입력 스트림이 &lt;code&gt;mark&lt;/code&gt; 및 &lt;code&gt;reset&lt;/code&gt; 메소드를 지원하는지 테스트합니다 . &lt;code&gt;BufferedInputStream&lt;/code&gt; 의 &lt;code&gt;markSupported&lt;/code&gt; 메소드 는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다. .</target>
        </trans-unit>
        <trans-unit id="29039dc0cd154f4ab52f38d22848cdb94796f333" translate="yes" xml:space="preserve">
          <source>Tests if this input stream supports the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods. The &lt;code&gt;markSupported&lt;/code&gt; method of &lt;code&gt;InflaterInputStream&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 입력 스트림이 &lt;code&gt;mark&lt;/code&gt; 및 &lt;code&gt;reset&lt;/code&gt; 메소드를 지원하는지 테스트합니다 . &lt;code&gt;InflaterInputStream&lt;/code&gt; 의 &lt;code&gt;markSupported&lt;/code&gt; 메소드 는 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="08189f5e3d782650d89fff9685a67849a989be12" translate="yes" xml:space="preserve">
          <source>Tests if this input stream supports the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods. This method simply performs &lt;code&gt;in.markSupported()&lt;/code&gt;.</source>
          <target state="translated">이 입력 스트림이 &lt;code&gt;mark&lt;/code&gt; 및 &lt;code&gt;reset&lt;/code&gt; 메소드를 지원하는지 테스트합니다 . 이 메소드는 단순히 &lt;code&gt;in.markSupported()&lt;/code&gt; 를 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="f067791dc7bf78eee99c5e8db0e67466c1e87ec6" translate="yes" xml:space="preserve">
          <source>Tests if this input stream supports the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods. Whether or not &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; are supported is an invariant property of a particular input stream instance. The &lt;code&gt;markSupported&lt;/code&gt; method of &lt;code&gt;InputStream&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 입력 스트림이 &lt;code&gt;mark&lt;/code&gt; 및 &lt;code&gt;reset&lt;/code&gt; 메소드를 지원하는지 테스트합니다 . &lt;code&gt;mark&lt;/code&gt; 및 &lt;code&gt;reset&lt;/code&gt; 지원 여부 는 특정 입력 스트림 인스턴스의 변하지 않는 속성입니다. &lt;code&gt;InputStream&lt;/code&gt; 의 &lt;code&gt;markSupported&lt;/code&gt; 메소드 는 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다. .</target>
        </trans-unit>
        <trans-unit id="6d0dd0d674a38718f54316a46236fd2a50305d82" translate="yes" xml:space="preserve">
          <source>Tests if this is a duplicate of an earlier token.</source>
          <target state="translated">이것이 이전 토큰의 중복인지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="52c4cbef152cc3f530d62336e8145cb80e2ce4d7" translate="yes" xml:space="preserve">
          <source>Tests if this memory manager is valid in the Java virtual machine.</source>
          <target state="translated">이 메모리 관리자가 JVM (Java Virtual Machine)에서 유효한지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="ac5bfdb48aa956d7ad13db246bee0cb6f628fb82" translate="yes" xml:space="preserve">
          <source>Tests if this memory manager is valid in the Java virtual machine. A memory manager becomes invalid once the Java virtual machine removes it from the memory system.</source>
          <target state="translated">이 메모리 관리자가 Java 가상 머신에서 유효한지 테스트합니다. Java 가상 시스템이 메모리 시스템에서 메모리 관리자를 제거하면 메모리 관리자가 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3ddfdb7b5d4693edb0173a3b0711528b1ecbfb4c" translate="yes" xml:space="preserve">
          <source>Tests if this memory pool is valid in the Java virtual machine.</source>
          <target state="translated">이 메모리 풀이 JVM (Java Virtual Machine)에서 유효한지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="335fda410cc890d5b352a66cd3029f8bdf71f5b5" translate="yes" xml:space="preserve">
          <source>Tests if this memory pool is valid in the Java virtual machine. A memory pool becomes invalid once the Java virtual machine removes it from the memory system.</source>
          <target state="translated">이 메모리 풀이 Java 가상 머신에서 유효한지 테스트합니다. Java 가상 머신이 메모리 시스템에서 메모리 풀을 제거하면 메모리 풀이 유효하지 않게됩니다.</target>
        </trans-unit>
        <trans-unit id="a1d8345179b7cabc97588fdc4618e30be12087f1" translate="yes" xml:space="preserve">
          <source>Tests if this memory pool supports a collection usage threshold.</source>
          <target state="translated">이 메모리 풀이 콜렉션 사용 임계 값을 지원하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="8f4799f0708a0fee3689994e6047645224d8f602" translate="yes" xml:space="preserve">
          <source>Tests if this memory pool supports usage threshold.</source>
          <target state="translated">이 메모리 풀이 사용 임계 값을 지원하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="a4062e24c74d1123bea93641d47bd4405035f2a2" translate="yes" xml:space="preserve">
          <source>Tests if this name object represents a Mechanism Name (MN).</source>
          <target state="translated">이 이름 개체가 MN (메커니즘 이름)을 나타내는 지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="d5ed34b90221a7a4f9590161ca8ad4d7e8d21b7f" translate="yes" xml:space="preserve">
          <source>Tests if this name object represents a Mechanism Name (MN). An MN is a GSSName the contains exactly one mechanism's primitive name element.</source>
          <target state="translated">이 이름 개체가 MN (메커니즘 이름)을 나타내는 지 테스트합니다. MN은 정확히 하나의 메커니즘의 기본 이름 요소를 포함하는 GSSName입니다.</target>
        </trans-unit>
        <trans-unit id="052f245c3e3283a830dc0b3943e531f3155cd5c1" translate="yes" xml:space="preserve">
          <source>Tests if this name object represents an anonymous entity.</source>
          <target state="translated">이 이름 개체가 익명 엔터티를 나타내는 지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="6a5c24bb6458103c0f805f35cfb6019d8713a07d" translate="yes" xml:space="preserve">
          <source>Tests if this object has changed.</source>
          <target state="translated">이 객체가 변경되었는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="010bfcc74697ad38265d0453f103362f68ed4e6c" translate="yes" xml:space="preserve">
          <source>Tests if this path ends with a &lt;code&gt;Path&lt;/code&gt;, constructed by converting the given path string, in exactly the manner specified by the &lt;a href=&quot;#endsWith(java.nio.file.Path)&quot;&gt;&lt;code&gt;endsWith(Path)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 경로가 &lt;a href=&quot;#endsWith(java.nio.file.Path)&quot;&gt; &lt;code&gt;endsWith(Path)&lt;/code&gt; &lt;/a&gt; 메서드에 지정된 방식으로 정확하게 지정된 경로 문자열을 변환하여 생성 된 &lt;code&gt;Path&lt;/code&gt; 로 끝나는 지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="4f65997bb5a3d772d1a4445b347e1fd97fdc0f10" translate="yes" xml:space="preserve">
          <source>Tests if this path ends with a &lt;code&gt;Path&lt;/code&gt;, constructed by converting the given path string, in exactly the manner specified by the &lt;a href=&quot;#endsWith(java.nio.file.Path)&quot;&gt;&lt;code&gt;endsWith(Path)&lt;/code&gt;&lt;/a&gt; method. On UNIX for example, the path &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; ends with &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; and &quot;&lt;code&gt;bar&lt;/code&gt;&quot;. It does not end with &quot;&lt;code&gt;r&lt;/code&gt;&quot; or &quot;&lt;code&gt;/bar&lt;/code&gt;&quot;. Note that trailing separators are not taken into account, and so invoking this method on the &lt;code&gt;
 Path&lt;/code&gt;&quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; with the &lt;code&gt;String&lt;/code&gt; &quot;&lt;code&gt;bar/&lt;/code&gt;&quot; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 경로가 &lt;a href=&quot;#endsWith(java.nio.file.Path)&quot;&gt; &lt;code&gt;endsWith(Path)&lt;/code&gt; &lt;/a&gt; 메서드에 지정된 방식으로 정확하게 지정된 경로 문자열을 변환하여 생성 된 &lt;code&gt;Path&lt;/code&gt; 로 끝나는 지 테스트합니다 . 예를 들어, UNIX에서 &quot; &lt;code&gt;foo/bar&lt;/code&gt; &quot; 경로 는 &quot; &lt;code&gt;foo/bar&lt;/code&gt; &quot;및 &quot; &lt;code&gt;bar&lt;/code&gt; &quot;로 끝납니다 . &quot; &lt;code&gt;r&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;/bar&lt;/code&gt; &quot;로 끝나지 않습니다 . 후행 구분 기호는 고려되지 않으므로 &lt;code&gt;String&lt;/code&gt; &quot; &lt;code&gt;bar/&lt;/code&gt; &quot; 를 사용하여 &lt;code&gt; Path&lt;/code&gt; &quot; &lt;code&gt;foo/bar&lt;/code&gt; &quot; 에서이 메서드를 호출하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="6630570d4515bb90c011e59b418b10898f928957" translate="yes" xml:space="preserve">
          <source>Tests if this path ends with a &lt;code&gt;Path&lt;/code&gt;, constructed by converting the given path string, in exactly the manner specified by the &lt;a href=&quot;path#endsWith-java.nio.file.Path-&quot;&gt;&lt;code&gt;endsWith(Path)&lt;/code&gt;&lt;/a&gt; method. On UNIX for example, the path &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; ends with &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; and &quot;&lt;code&gt;bar&lt;/code&gt;&quot;. It does not end with &quot;&lt;code&gt;r&lt;/code&gt;&quot; or &quot;&lt;code&gt;/bar&lt;/code&gt;&quot;. Note that trailing separators are not taken into account, and so invoking this method on the &lt;code&gt;Path&lt;/code&gt;&quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; with the &lt;code&gt;String&lt;/code&gt; &quot;&lt;code&gt;bar/&lt;/code&gt;&quot; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">주어진 경로 문자열을 &lt;a href=&quot;path#endsWith-java.nio.file.Path-&quot;&gt; &lt;code&gt;endsWith(Path)&lt;/code&gt; &lt;/a&gt; 메소드에 의해 지정된 방식으로 정확하게 변환하여 생성 된 &lt;code&gt;Path&lt;/code&gt; 로 경로가 끝나는 지 테스트합니다 . 예를 들어 UNIX에서 &quot; &lt;code&gt;foo/bar&lt;/code&gt; &quot; 경로 는 &quot; &lt;code&gt;foo/bar&lt;/code&gt; &quot;및 &quot; &lt;code&gt;bar&lt;/code&gt; &quot;로 끝납니다 . &quot; &lt;code&gt;r&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;/bar&lt;/code&gt; &quot;로 끝나지 않습니다 . 후행 구분 기호는 고려되지 않으므로 &lt;code&gt;String&lt;/code&gt; &quot; &lt;code&gt;bar/&lt;/code&gt; &quot; 를 사용하여 &lt;code&gt;Path&lt;/code&gt; &quot; &lt;code&gt;foo/bar&lt;/code&gt; &quot; 에서이 메소드를 호출하면 &lt;code&gt;true&lt;/code&gt; 가 리턴 됩니다.</target>
        </trans-unit>
        <trans-unit id="17b4a34a64cbd464714119dd298f986de7d3b196" translate="yes" xml:space="preserve">
          <source>Tests if this path ends with the given path.</source>
          <target state="translated">이 경로가 지정된 경로로 끝나는 지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="09808fbd4ad12bd2abdd38858479f7dd7b87f661" translate="yes" xml:space="preserve">
          <source>Tests if this path starts with a &lt;code&gt;Path&lt;/code&gt;, constructed by converting the given path string, in exactly the manner specified by the &lt;a href=&quot;#startsWith(java.nio.file.Path)&quot;&gt;&lt;code&gt;startsWith(Path)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 경로가 &lt;a href=&quot;#startsWith(java.nio.file.Path)&quot;&gt; &lt;code&gt;startsWith(Path)&lt;/code&gt; &lt;/a&gt; 메서드에 지정된 방식으로 정확하게 지정된 경로 문자열을 변환하여 생성 된 &lt;code&gt;Path&lt;/code&gt; 로 시작하는지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="91dbe837ebb083c937dc150f33b88ee47142e88a" translate="yes" xml:space="preserve">
          <source>Tests if this path starts with a &lt;code&gt;Path&lt;/code&gt;, constructed by converting the given path string, in exactly the manner specified by the &lt;a href=&quot;#startsWith(java.nio.file.Path)&quot;&gt;&lt;code&gt;startsWith(Path)&lt;/code&gt;&lt;/a&gt; method. On UNIX for example, the path &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; starts with &quot;&lt;code&gt;foo&lt;/code&gt;&quot; and &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot;. It does not start with &quot;&lt;code&gt;f&lt;/code&gt;&quot; or &quot;&lt;code&gt;fo&lt;/code&gt;&quot;.</source>
          <target state="translated">이 경로가 &lt;a href=&quot;#startsWith(java.nio.file.Path)&quot;&gt; &lt;code&gt;startsWith(Path)&lt;/code&gt; &lt;/a&gt; 메서드에 지정된 방식으로 정확하게 지정된 경로 문자열을 변환하여 생성 된 &lt;code&gt;Path&lt;/code&gt; 로 시작하는지 테스트합니다 . 예를 들어, UNIX에서 &quot; &lt;code&gt;foo/bar&lt;/code&gt; &quot; 경로 는 &quot; &lt;code&gt;foo&lt;/code&gt; &quot;및 &quot; &lt;code&gt;foo/bar&lt;/code&gt; &quot;로 시작합니다. &quot; &lt;code&gt;f&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;fo&lt;/code&gt; &quot;로 시작하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="bfaad5ac804750ab7b2d77d4323bab70b8990cdb" translate="yes" xml:space="preserve">
          <source>Tests if this path starts with a &lt;code&gt;Path&lt;/code&gt;, constructed by converting the given path string, in exactly the manner specified by the &lt;a href=&quot;path#startsWith-java.nio.file.Path-&quot;&gt;&lt;code&gt;startsWith(Path)&lt;/code&gt;&lt;/a&gt; method. On UNIX for example, the path &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; starts with &quot;&lt;code&gt;foo&lt;/code&gt;&quot; and &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot;. It does not start with &quot;&lt;code&gt;f&lt;/code&gt;&quot; or &quot;&lt;code&gt;fo&lt;/code&gt;&quot;.</source>
          <target state="translated">주어진 경로 문자열을 &lt;a href=&quot;path#startsWith-java.nio.file.Path-&quot;&gt; &lt;code&gt;startsWith(Path)&lt;/code&gt; &lt;/a&gt; 메소드에 의해 지정된 방식으로 정확하게 변환하여 생성 된 &lt;code&gt;Path&lt;/code&gt; 로 시작하는 경로 인지 테스트합니다 . 예를 들어 UNIX에서 &quot; &lt;code&gt;foo/bar&lt;/code&gt; &quot; 경로 는 &quot; &lt;code&gt;foo&lt;/code&gt; &quot;및 &quot; &lt;code&gt;foo/bar&lt;/code&gt; &quot;로 시작합니다. &quot; &lt;code&gt;f&lt;/code&gt; &quot;또는 &quot;로 시작하지 않습니다 &lt;code&gt;fo&lt;/code&gt; &quot;로 .</target>
        </trans-unit>
        <trans-unit id="cfd959ff72bb39c7bc6cebf523bf3d2dd3a6be48" translate="yes" xml:space="preserve">
          <source>Tests if this path starts with the given path.</source>
          <target state="translated">이 경로가 지정된 경로로 시작하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="9a594c43c406305f1ac58992fea1a7c184371188" translate="yes" xml:space="preserve">
          <source>Tests if this stack is empty.</source>
          <target state="translated">이 스택이 비어 있는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="a72cb21d325c0875088c56d1ffcb8458f644b878" translate="yes" xml:space="preserve">
          <source>Tests if this string ends with the specified suffix.</source>
          <target state="translated">이 문자열이 지정된 접미어로 끝나는 지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="f648078e04951663f03ea03dcaedbfe7f612550f" translate="yes" xml:space="preserve">
          <source>Tests if this string starts with the specified prefix.</source>
          <target state="translated">이 문자열이 지정된 접두어로 시작하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="9c24c442501c93347432dba1ef79d241f332f935" translate="yes" xml:space="preserve">
          <source>Tests if this thread group has been destroyed.</source>
          <target state="translated">이 스레드 그룹이 손상되었는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="279e59c201a9521407d3f4aaf96033fe5010f6ca" translate="yes" xml:space="preserve">
          <source>Tests if this thread group is a daemon thread group.</source>
          <target state="translated">이 스레드 그룹이 데몬 스레드 그룹인지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="b1932aebb7380f5cce39beeab145c1c24e15d82a" translate="yes" xml:space="preserve">
          <source>Tests if this thread group is a daemon thread group. A daemon thread group is automatically destroyed when its last thread is stopped or its last thread group is destroyed.</source>
          <target state="translated">이 스레드 그룹이 데몬 스레드 그룹인지 테스트합니다. 마지막 스레드가 중지되거나 마지막 스레드 그룹이 삭제되면 데몬 스레드 그룹이 자동으로 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="35d45d6658d8668373e9acfa06e40eb5b0fedc64" translate="yes" xml:space="preserve">
          <source>Tests if this thread group is either the thread group argument or one of its ancestor thread groups.</source>
          <target state="translated">이 스레드 그룹이 스레드 그룹 인수인지 또는 상위 스레드 그룹 중 하나인지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="9a9e843150a0f6574bd7b4c07ff63197ddc89250" translate="yes" xml:space="preserve">
          <source>Tests if this thread is a daemon thread.</source>
          <target state="translated">이 스레드가 데몬 스레드인지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="ed0070dd3d71ed5c435dc79d3fac97271fc54789" translate="yes" xml:space="preserve">
          <source>Tests if this thread is alive.</source>
          <target state="translated">이 스레드가 살아 있는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="16bb2bd320617000eb9d9127d033df7b7cb72e44" translate="yes" xml:space="preserve">
          <source>Tests if this thread is alive. A thread is alive if it has been started and has not yet died.</source>
          <target state="translated">이 스레드가 살아 있는지 테스트합니다. 스레드가 시작되었지만 아직 죽지 않은 경우 스레드가 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="a01f326a43869ac8b84fe8fcdbdcfc7269437336" translate="yes" xml:space="preserve">
          <source>Tests if this token's validity period has expired, i.e., the token is too old to be checked for duplication.</source>
          <target state="translated">이 토큰의 유효 기간이 만료되었는지 테스트합니다. 즉, 토큰이 너무 오래되어 중복 여부를 확인할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="27508e5d3616ba9fc1f8085e3143b247833a4149" translate="yes" xml:space="preserve">
          <source>Tests if this vector has no components.</source>
          <target state="translated">이 벡터에 구성 요소가 없는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="f4debb5684fd8f3281bfb0184aca3223afb24b81" translate="yes" xml:space="preserve">
          <source>Tests if thread CPU time measurement is enabled.</source>
          <target state="translated">스레드 CPU 시간 측정이 사용 가능한지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="7dc21a2b1beffed1e6f22534038b78f6219ea6cf" translate="yes" xml:space="preserve">
          <source>Tests if thread contention monitoring is enabled.</source>
          <target state="translated">스레드 경합 모니터링이 사용 가능한지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="f6e473aefb1a8052ce0bcd10c801359693a789c7" translate="yes" xml:space="preserve">
          <source>Tests if two Oid objects represent the same Object identifier value.</source>
          <target state="translated">두 Oid 개체가 동일한 개체 식별자 값을 나타내는 지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="464905da8f3968b704a4932a14599f516a410e68" translate="yes" xml:space="preserve">
          <source>Tests if two paths locate the same file.</source>
          <target state="translated">두 경로가 동일한 파일을 찾는 지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="70238b02b09e590581333517d9260a6ec8e9140e" translate="yes" xml:space="preserve">
          <source>Tests if two paths locate the same file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt;&lt;code&gt;Files.isSameFile(java.nio.file.Path, java.nio.file.Path)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">두 경로가 동일한 파일을 찾는 지 테스트합니다. 이 메소드는 &lt;a href=&quot;../files#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt; &lt;code&gt;Files.isSameFile(java.nio.file.Path, java.nio.file.Path)&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 방식으로 정확히 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="3c31b5b531c5762ddbbf94d0dc7fef88239759d1" translate="yes" xml:space="preserve">
          <source>Tests if two paths locate the same file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt;&lt;code&gt;Files.isSameFile(java.nio.file.Path, java.nio.file.Path)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">두 경로가 동일한 파일을 찾는 지 테스트합니다. 이 메소드는 &lt;a href=&quot;../files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt; &lt;code&gt;Files.isSameFile(java.nio.file.Path, java.nio.file.Path)&lt;/code&gt; &lt;/a&gt; 메소드로 지정된 방식으로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="96cc8501455cd6d437d775f4a33d535f1d7a007b" translate="yes" xml:space="preserve">
          <source>Tests if two string regions are equal.</source>
          <target state="translated">두 문자열 영역이 같은지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="11726cf32c81a58c06f8546f6c3285a238b1f550" translate="yes" xml:space="preserve">
          <source>Tests if verbose output for the memory system is enabled.</source>
          <target state="translated">메모리 시스템에 대한 자세한 출력이 활성화되어 있는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="723c578329b3db12bcdfd74f206cd5fda1d0b98a" translate="yes" xml:space="preserve">
          <source>Tests the specified file, returning true if the file is accepted, false otherwise.</source>
          <target state="translated">지정된 파일을 테스트하여 파일이 승인되면 true를 리턴하고 그렇지 않으면 false를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6f53e93cf05d0b01ea26bdbd5064c9c70c1633a5" translate="yes" xml:space="preserve">
          <source>Tests the specified file, returning true if the file is accepted, false otherwise. True is returned if the extension matches one of the file name extensions of this &lt;code&gt;
 FileFilter&lt;/code&gt;, or the file is a directory.</source>
          <target state="translated">지정된 파일을 테스트하여 파일이 승인되면 true를 리턴하고 그렇지 않으면 false를 리턴합니다. 확장자가이 &lt;code&gt; FileFilter&lt;/code&gt; 의 파일 이름 확장자 중 하나와 일치 하거나 파일이 디렉토리 이면 True가 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="3d18cc904c4680e5c570e15b5ff31311430830f4" translate="yes" xml:space="preserve">
          <source>Tests this &lt;code&gt;FileTime&lt;/code&gt; for equality with the given object.</source>
          <target state="translated">이 &lt;code&gt;FileTime&lt;/code&gt; 이 지정된 객체와 같은지 테스트 합니다.</target>
        </trans-unit>
        <trans-unit id="980b0e7b84cbb0ca995ce1a4ebd816fd101ce9f7" translate="yes" xml:space="preserve">
          <source>Tests this HTTP headers instance for equality with the given object.</source>
          <target state="translated">이 HTTP 헤더 인스턴스가 지정된 객체와 같은지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="42092602e903e220babcc333f0e540369dd18be9" translate="yes" xml:space="preserve">
          <source>Tests this HTTP request instance for equality with the given object.</source>
          <target state="translated">이 HTTP 요청 인스턴스가 지정된 객체와 같은지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="a96151bb2f737e5fff936b5dec26298e6f95ab24" translate="yes" xml:space="preserve">
          <source>Tests this URI for equality with another object.</source>
          <target state="translated">이 URI를 다른 객체와 같은지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="0f36d537416d32633bf2525ab2484d558d8f30ce" translate="yes" xml:space="preserve">
          <source>Tests this abstract pathname for equality with the given object.</source>
          <target state="translated">이 추상 경로 이름이 주어진 객체와 같은지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="8185668c507de23080233654f7132735fb11b3a2" translate="yes" xml:space="preserve">
          <source>Tests this abstract pathname for equality with the given object. Returns &lt;code&gt;true&lt;/code&gt; if and only if the argument is not &lt;code&gt;null&lt;/code&gt; and is an abstract pathname that denotes the same file or directory as this abstract pathname. Whether or not two abstract pathnames are equal depends upon the underlying system. On UNIX systems, alphabetic case is significant in comparing pathnames; on Microsoft Windows systems it is not.</source>
          <target state="translated">이 추상 패스 명이 지정된 객체와 같은지 테스트합니다. 인수가 &lt;code&gt;null&lt;/code&gt; 이 아니고이 추상 경로 이름과 동일한 파일 또는 디렉토리를 나타내는 추상 경로 이름 인 경우에만 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 두 개의 추상 경로 이름이 같은지 여부는 기본 시스템에 따라 다릅니다. UNIX 시스템에서 영문자는 경로 이름을 비교할 때 중요합니다. Microsoft Windows 시스템에서는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8a7b4b0ed52c412ae9ca7e3342ec3e2a832eaafd" translate="yes" xml:space="preserve">
          <source>Tests this module dependence for equality with the given object.</source>
          <target state="translated">이 모듈 종속성을 지정된 개체와 같은지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="4a2d58c2f5e55a58d9d1e873e75b34200abaa17c" translate="yes" xml:space="preserve">
          <source>Tests this module descriptor for equality with the given object.</source>
          <target state="translated">이 모듈 설명자가 주어진 객체와 같은지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="336612e4e4722df30106c25fe7243252cf0235e8" translate="yes" xml:space="preserve">
          <source>Tests this module export for equality with the given object.</source>
          <target state="translated">이 모듈 내보내기가 주어진 객체와 같은지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="d104ced5c631704b61281cb4e16dc923a1b23d92" translate="yes" xml:space="preserve">
          <source>Tests this module opens for equality with the given object.</source>
          <target state="translated">이 모듈이 주어진 객체와 같은지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="2eaa42a3b280a02f2b19637b6bd7ae2a55a5cf90" translate="yes" xml:space="preserve">
          <source>Tests this module version for equality with the given object.</source>
          <target state="translated">이 모듈 버전이 주어진 객체와 같은지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="bd16e5b1dd8414109e32095d1b2fc5d3ef832efe" translate="yes" xml:space="preserve">
          <source>Tests this path for equality with the given object.</source>
          <target state="translated">주어진 객체와 동일한 지이 경로를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="88ad4920855d3a389e18a155cc5768590d26c553" translate="yes" xml:space="preserve">
          <source>Tests this provides for equality with the given object.</source>
          <target state="translated">이것이 주어진 객체와의 동등성을 제공하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="d850ad5f2176223630d3b998ff6138db29bbe571" translate="yes" xml:space="preserve">
          <source>Tests this resolved module for equality with the given object.</source>
          <target state="translated">이 해결 된 모듈이 지정된 개체와 같은지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="b39d332cf45d5b0f076fa28c3e7a76a07b75e797" translate="yes" xml:space="preserve">
          <source>Tests to see if all objects in the specified &lt;code&gt;Collection&lt;/code&gt; are children of this &lt;code&gt;BeanContext&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;Collection&lt;/code&gt; 내의 모든 객체 가이 &lt;code&gt;BeanContext&lt;/code&gt; 의 아이인가 어떤가를 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="e9d13084255a8f619ecd7b330cc8b93642edb500" translate="yes" xml:space="preserve">
          <source>Tests to see if this &lt;code&gt;Timestamp&lt;/code&gt; object is equal to the given &lt;code&gt;Timestamp&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;Timestamp&lt;/code&gt; 개체가 지정된 &lt;code&gt;Timestamp&lt;/code&gt; 개체와 같은지 테스트 합니다.</target>
        </trans-unit>
        <trans-unit id="e12e6d0b54d586e19da24dec3bcb8bddbd6ac128" translate="yes" xml:space="preserve">
          <source>Tests to see if this &lt;code&gt;Timestamp&lt;/code&gt; object is equal to the given object.</source>
          <target state="translated">이 &lt;code&gt;Timestamp&lt;/code&gt; 객체가 주어진 객체와 같은지 테스트 합니다.</target>
        </trans-unit>
        <trans-unit id="2c915fc19350a9e4430472b51454f1adb73b7fba" translate="yes" xml:space="preserve">
          <source>Tests to see if this &lt;code&gt;Timestamp&lt;/code&gt; object is equal to the given object. This version of the method &lt;code&gt;equals&lt;/code&gt; has been added to fix the incorrect signature of &lt;code&gt;Timestamp.equals(Timestamp)&lt;/code&gt; and to preserve backward compatibility with existing class files. Note: This method is not symmetric with respect to the &lt;code&gt;equals(Object)&lt;/code&gt; method in the base class.</source>
          <target state="translated">이 &lt;code&gt;Timestamp&lt;/code&gt; 객체가 주어진 객체와 같은지 테스트 합니다. 이 버전의 메소드 &lt;code&gt;equals&lt;/code&gt; 는 &lt;code&gt;Timestamp.equals(Timestamp)&lt;/code&gt; 의 잘못된 서명을 수정하고 기존 클래스 파일과의 역 호환성을 유지 하기 위해 추가되었습니다 . 참고 :이 메서드는 기본 클래스 의 &lt;code&gt;equals(Object)&lt;/code&gt; 메서드에 대해 대칭이 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="e179f12f5b169d478c209c6bf92d55e5010f1aa7" translate="yes" xml:space="preserve">
          <source>Tests to see if two class objects, or their names are equal.</source>
          <target state="translated">두 개의 클래스 객체 또는 이름이 같은지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="7a3ee955b8e8f25c927e3b6d3380851ca95a0288" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;code&gt;obj&lt;/code&gt; is a valid value for the attribute described by this &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; 가이 &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; 인스턴스에 의해 기술 된 속성에 유효한 값 일지 어떨지를 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="0c3c9f5188c2093812bd09100f073d9005e454d7" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;code&gt;obj&lt;/code&gt; is a valid value for the parameter described by this &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; 가이 &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; 인스턴스에 의해 설명 된 매개 변수에 유효한 값 인지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="5ee8d9d840e314dd7edb34d6b6e2f22909af0dd5" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;var&gt;obj&lt;/var&gt; is a valid value for the parameter described by this &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instance.</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; 가이 &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; 인스턴스에 의해 설명 된 매개 변수에 유효한 값 인지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="ea63b605375af93e8f4218759adec0285753101d" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;var&gt;obj&lt;/var&gt; is a value for this &lt;code&gt;ArrayType&lt;/code&gt; instance.</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; 가이 &lt;code&gt;ArrayType&lt;/code&gt; 인스턴스 의 값 인지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="09f18d3421299a9203c6820ec747e5cdc6d592c7" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;var&gt;obj&lt;/var&gt; is a value for this &lt;code&gt;SimpleType&lt;/code&gt; instance.</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; 가이 &lt;code&gt;SimpleType&lt;/code&gt; 인스턴스 의 값 인지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="c1317b510e9868f256fa88c8c4f898deb408dab5" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;var&gt;obj&lt;/var&gt; is a value for this open type.</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; 가이 공개 형의 값 인지를 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="a9a650b1d1fd33079f9a91b8b70c7478363eed3b" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;var&gt;obj&lt;/var&gt; is a value which could be described by this &lt;code&gt;CompositeType&lt;/code&gt; instance.</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; 가이 &lt;code&gt;CompositeType&lt;/code&gt; 인스턴스에 의해 기술 가능한 값 일지 어떨지를 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="dc23e49656365a6cd2230de52d366a3321bdc591" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;var&gt;obj&lt;/var&gt; is a value which could be described by this &lt;code&gt;TabularType&lt;/code&gt; instance.</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; 가이 &lt;code&gt;TabularType&lt;/code&gt; 에 의해 기술 가능한 값 일지 어떨지를 테스트합니다 인스턴스에 .</target>
        </trans-unit>
        <trans-unit id="560220faeabe7eb88a2bd982af7e1e8037cbf798" translate="yes" xml:space="preserve">
          <source>Tests whether a &lt;code&gt;Feature&lt;/code&gt; is supported on the current platform.</source>
          <target state="translated">&lt;code&gt;Feature&lt;/code&gt; 이 현재 플랫폼에서 지원 되는지 여부를 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="52b3c1cd8e48ebe54bf56ea08b5ef0bd706e26f3" translate="yes" xml:space="preserve">
          <source>Tests whether a class is modifiable by &lt;a href=&quot;#retransformClasses(java.lang.Class...)&quot;&gt;retransformation&lt;/a&gt; or &lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;redefinition&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#retransformClasses(java.lang.Class...)&quot;&gt;재 변환&lt;/a&gt; 또는 &lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;재정의를&lt;/a&gt; 통해 클래스를 수정할 수 있는지 여부를 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="08ce846909415caef7091ef3209ef86952974452" translate="yes" xml:space="preserve">
          <source>Tests whether a class is modifiable by &lt;a href=&quot;#retransformClasses(java.lang.Class...)&quot;&gt;retransformation&lt;/a&gt; or &lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;redefinition&lt;/a&gt;. If a class is modifiable then this method returns &lt;code&gt;true&lt;/code&gt;. If a class is not modifiable then this method returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#retransformClasses(java.lang.Class...)&quot;&gt;재 변환&lt;/a&gt; 또는 &lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;재정의를&lt;/a&gt; 통해 클래스를 수정할 수 있는지 여부를 테스트합니다 . 클래스가 수정 가능한 경우이 메서드는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 클래스를 수정할 수없는 경우이 메서드는 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="16c57ed3861fde80ea006b4f5db6d6651075ccaf" translate="yes" xml:space="preserve">
          <source>Tests whether a file exists.</source>
          <target state="translated">파일이 존재하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="e55210b46976197479747856de42825b74526f8c" translate="yes" xml:space="preserve">
          <source>Tests whether a file is a directory.</source>
          <target state="translated">파일이 디렉토리인지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="542f4106bf6d1e5645787a6f05e46ce6647f7520" translate="yes" xml:space="preserve">
          <source>Tests whether a file is a regular file with opaque content.</source>
          <target state="translated">파일이 불투명 한 내용을 가진 일반 파일인지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="f7c4341fde49197a58ec6c6398b08419883b5b1f" translate="yes" xml:space="preserve">
          <source>Tests whether a file is a symbolic link.</source>
          <target state="translated">파일이 기호 링크인지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="217989ddd80256b020ec916a08f8ca26201c8038" translate="yes" xml:space="preserve">
          <source>Tests whether a file is executable.</source>
          <target state="translated">파일이 실행 가능한지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="8af915de28f4424f5fb8c61b29c3bf344e84d747" translate="yes" xml:space="preserve">
          <source>Tests whether a file is executable. This method checks that a file exists and that this Java virtual machine has appropriate privileges to &lt;a href=&quot;../../lang/runtime#exec(java.lang.String)&quot;&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/a&gt; the file. The semantics may differ when checking access to a directory. For example, on UNIX systems, checking for execute access checks that the Java virtual machine has permission to search the directory in order to access file or subdirectories.</source>
          <target state="translated">파일이 실행 가능한지 여부를 테스트합니다. 이 메소드는 파일이 존재하고이 JVM (Java Virtual Machine)이 파일 을 &lt;a href=&quot;../../lang/runtime#exec(java.lang.String)&quot;&gt; &lt;code&gt;execute&lt;/code&gt; &lt;/a&gt; 있는 적절한 권한을 가지고 있는지 확인 합니다. 디렉토리에 대한 액세스를 확인할 때 의미가 다를 수 있습니다. 예를 들어, UNIX 시스템에서 실행 액세스를 확인하면 Java 가상 머신이 파일 또는 하위 디렉토리에 액세스하기 위해 디렉토리를 검색 할 수있는 권한이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="57b242f176cba76759073790e01e5c16e37d426d" translate="yes" xml:space="preserve">
          <source>Tests whether a file is executable. This method checks that a file exists and that this Java virtual machine has appropriate privileges to &lt;a href=&quot;../../lang/runtime#exec-java.lang.String-&quot;&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/a&gt; the file. The semantics may differ when checking access to a directory. For example, on UNIX systems, checking for execute access checks that the Java virtual machine has permission to search the directory in order to access file or subdirectories.</source>
          <target state="translated">파일이 실행 가능한지 테스트합니다. 이 메소드는 파일이 존재하는지와이 Java 가상 머신에 적절한 &lt;a href=&quot;../../lang/runtime#exec-java.lang.String-&quot;&gt; &lt;code&gt;execute&lt;/code&gt; &lt;/a&gt; 권한이 있는지 확인합니다. 에 파일 있는 합니다. 디렉토리에 대한 액세스를 확인할 때 의미가 다를 수 있습니다. 예를 들어, UNIX 시스템에서 실행 액세스 확인은 Java 가상 머신에 파일 또는 서브 디렉토리에 액세스하기 위해 디렉토리를 검색 할 권한이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1c6e750feecaf59d784cfdae8b4dbaaae0b57b2d" translate="yes" xml:space="preserve">
          <source>Tests whether a file is readable.</source>
          <target state="translated">파일을 읽을 수 있는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="4c1d0c6f81052671a7c870df818d10fd5e19b8a8" translate="yes" xml:space="preserve">
          <source>Tests whether a file is readable. This method checks that a file exists and that this Java virtual machine has appropriate privileges that would allow it open the file for reading. Depending on the implementation, this method may require to read file permissions, access control lists, or other file attributes in order to check the effective access to the file. Consequently, this method may not be atomic with respect to other file system operations.</source>
          <target state="translated">파일을 읽을 수 있는지 테스트합니다. 이 메소드는 파일이 존재하고이 Java 가상 머신에 파일을 읽기 위해 열 수있는 적절한 권한이 있는지 확인합니다. 구현에 따라이 방법은 파일에 대한 효과적인 액세스를 확인하기 위해 파일 권한, 액세스 제어 목록 또는 기타 파일 속성을 읽어야 할 수 있습니다. 결과적으로이 방법은 다른 파일 시스템 작업과 관련하여 원 자성이 아닐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f127903f798e27c1f90f9c297286abdcdcb85f4f" translate="yes" xml:space="preserve">
          <source>Tests whether a file is writable.</source>
          <target state="translated">파일이 쓰기 가능한지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="1b37ee2c3ed64224a7646a2acc2b895da858061e" translate="yes" xml:space="preserve">
          <source>Tests whether a file is writable. This method checks that a file exists and that this Java virtual machine has appropriate privileges that would allow it open the file for writing. Depending on the implementation, this method may require to read file permissions, access control lists, or other file attributes in order to check the effective access to the file. Consequently, this method may not be atomic with respect to other file system operations.</source>
          <target state="translated">파일이 쓰기 가능한지 테스트합니다. 이 메소드는 파일이 존재하고이 Java 가상 머신에 파일을 쓰기 위해 열 수있는 적절한 권한이 있는지 확인합니다. 구현에 따라이 방법은 파일에 대한 효과적인 액세스를 확인하기 위해 파일 권한, 액세스 제어 목록 또는 기타 파일 속성을 읽어야 할 수 있습니다. 결과적으로이 방법은 다른 파일 시스템 작업과 관련하여 원 자성이 아닐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="136809ed107e46f0027681c767513c383a9bdfb8" translate="yes" xml:space="preserve">
          <source>Tests whether a module can be modified with &lt;a href=&quot;#redefineModule(java.lang.Module,java.util.Set,java.util.Map,java.util.Map,java.util.Set,java.util.Map)&quot;&gt;&lt;code&gt;redefineModule&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#redefineModule(java.lang.Module,java.util.Set,java.util.Map,java.util.Map,java.util.Set,java.util.Map)&quot;&gt; &lt;code&gt;redefineModule&lt;/code&gt; 을 사용&lt;/a&gt; 하여 모듈을 수정할 수 있는지 여부를 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="1c6495b44c6774d95ab9a63b920788aa2a3a9cee" translate="yes" xml:space="preserve">
          <source>Tests whether a module can be modified with &lt;a href=&quot;#redefineModule(java.lang.Module,java.util.Set,java.util.Map,java.util.Map,java.util.Set,java.util.Map)&quot;&gt;&lt;code&gt;redefineModule&lt;/code&gt;&lt;/a&gt;. If a module is modifiable then this method returns &lt;code&gt;true&lt;/code&gt;. If a module is not modifiable then this method returns &lt;code&gt;false&lt;/code&gt;. This method always returns &lt;code&gt;true&lt;/code&gt; when the module is an unnamed module (as redefining an unnamed module is a no-op).</source>
          <target state="translated">&lt;a href=&quot;#redefineModule(java.lang.Module,java.util.Set,java.util.Map,java.util.Map,java.util.Set,java.util.Map)&quot;&gt; &lt;code&gt;redefineModule&lt;/code&gt; 을 사용&lt;/a&gt; 하여 모듈을 수정할 수 있는지 여부를 테스트합니다 . 모듈이 수정 가능한 경우이 메서드는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 모듈을 수정할 수없는 경우이 메서드는 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 이 메서드 는 모듈이 이름이 지정되지 않은 모듈 인 경우 항상 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 (이름이 지정되지 않은 모듈을 재정의하는 것은 no-op이므로).</target>
        </trans-unit>
        <trans-unit id="a0e9587817b247412b3ed76f215fb890711cfc0f" translate="yes" xml:space="preserve">
          <source>Tests whether a point lies after the rectangle range.</source>
          <target state="translated">점이 사각형 범위 뒤에 있는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="7beebd224f5d29686d8e0000706d66902a6acac3" translate="yes" xml:space="preserve">
          <source>Tests whether a point lies before the rectangle range.</source>
          <target state="translated">점이 사각형 범위 앞에 있는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="e6bbb24d9ffe00468548c6feb606ba56593eb5b0" translate="yes" xml:space="preserve">
          <source>Tests whether an action is supported on the current platform.</source>
          <target state="translated">현재 플랫폼에서 작업이 지원되는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="1546e5637ac385eebb286647d7682c4a58bfa2ec" translate="yes" xml:space="preserve">
          <source>Tests whether one method, as a member of a given type, overrides another method.</source>
          <target state="translated">한 메서드가 지정된 형식의 멤버로서 다른 메서드를 재정의하는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="ee78f9df0156bd4109254e370d0fd81b9fde5aaa" translate="yes" xml:space="preserve">
          <source>Tests whether one method, as a member of a given type, overrides another method. When a non-abstract method overrides an abstract one, the former is also said to</source>
          <target state="translated">주어진 유형의 멤버 인 한 메소드가 다른 메소드를 대체하는지 테스트합니다. 비 추상적 인 방법이 추상적 인 방법을 재정의하면 전자가</target>
        </trans-unit>
        <trans-unit id="937647361fc8e4f4714b9f1ac28f7ca84263767e" translate="yes" xml:space="preserve">
          <source>Tests whether one type argument</source>
          <target state="translated">하나의 타입 인수인지 테스트</target>
        </trans-unit>
        <trans-unit id="1a3525b9e276b94478f3cd645fca14717d320304" translate="yes" xml:space="preserve">
          <source>Tests whether one type is a subtype of another.</source>
          <target state="translated">한 유형이 다른 유형의 하위 유형인지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="47c2c60044600114f182b21e09ecd9618006261f" translate="yes" xml:space="preserve">
          <source>Tests whether one type is a subtype of another. Any type is considered to be a subtype of itself.</source>
          <target state="translated">한 유형이 다른 유형의 하위 유형인지 테스트합니다. 모든 유형은 자체의 하위 유형으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="d666bdd33db05b74fec644c88d179beaf1a013a4" translate="yes" xml:space="preserve">
          <source>Tests whether one type is assignable to another.</source>
          <target state="translated">한 유형이 다른 유형에 지정 가능한지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="4682067efb3c9f60d4687b0774f8a8c0d39bc437" translate="yes" xml:space="preserve">
          <source>Tests whether one type, method, or field hides another.</source>
          <target state="translated">한 유형, 메소드 또는 필드가 다른 유형, 메소드 또는 필드를 숨길 지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="c6d90df7f90edabeb7388abd0d34a71ab31f1747" translate="yes" xml:space="preserve">
          <source>Tests whether or not a display, keyboard, and mouse can be supported in this environment.</source>
          <target state="translated">이 환경에서 디스플레이, 키보드 및 마우스를 지원할 수 있는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="34f4c2d2e7203efad1136e3bee69ab36fe6c411e" translate="yes" xml:space="preserve">
          <source>Tests whether or not a display, keyboard, and mouse can be supported in this environment. If this method returns true, a HeadlessException is thrown from areas of the Toolkit and GraphicsEnvironment that are dependent on a display, keyboard, or mouse.</source>
          <target state="translated">이 환경에서 디스플레이, 키보드 및 마우스를 지원할 수 있는지 여부를 테스트합니다. 이 메서드가 true를 반환하면 디스플레이, 키보드 또는 마우스에 종속 된 Toolkit 및 GraphicsEnvironment 영역에서 HeadlessException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="63375cbfddce8ad197372d1dc474f78da6ab7fb1" translate="yes" xml:space="preserve">
          <source>Tests whether or not the specified abstract pathname should be included in a pathname list.</source>
          <target state="translated">지정된 추상 경로 이름이 경로 이름 목록에 포함되어야하는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="7a5434f967fe50cca5e123260d28d44722c86b02" translate="yes" xml:space="preserve">
          <source>Tests whether the DOM implementation implements a specific feature and that feature is supported by this node, as specified in .</source>
          <target state="translated">에 지정된대로 DOM 구현이 특정 기능을 구현하고 해당 기능이이 노드에서 지원되는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="96f0fea2f2a48a6fd7f733bcc243c90c87d9b881" translate="yes" xml:space="preserve">
          <source>Tests whether the application can execute the file denoted by this abstract pathname.</source>
          <target state="translated">응용 프로그램이이 추상 경로 이름으로 표시된 파일을 실행할 수 있는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="449d58237e6201d5a084acfcc7306cbdcc83c392" translate="yes" xml:space="preserve">
          <source>Tests whether the application can execute the file denoted by this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to execute files that are not marked executable. Consequently this method may return &lt;code&gt;true&lt;/code&gt; even though the file does not have execute permissions.</source>
          <target state="translated">응용 프로그램이이 추상 경로 이름으로 표시된 파일을 실행할 수 있는지 테스트합니다. 일부 플랫폼에서는 실행 가능으로 표시되지 않은 파일을 실행할 수있는 특수 권한으로 Java 가상 머신을 시작할 수 있습니다. 따라서 파일에 실행 권한이없는 &lt;code&gt;true&lt;/code&gt; 에도이 메서드는 true를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4185befc22a5267e0a129e68828bd87308a42a44" translate="yes" xml:space="preserve">
          <source>Tests whether the application can modify the file denoted by this abstract pathname.</source>
          <target state="translated">응용 프로그램이이 추상 경로 이름으로 표시된 파일을 수정할 수 있는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="9859e23a0ecf63cb3b1de0ab8d2c67c4659f743c" translate="yes" xml:space="preserve">
          <source>Tests whether the application can modify the file denoted by this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to modify files that are marked read-only. Consequently this method may return &lt;code&gt;true&lt;/code&gt; even though the file is marked read-only.</source>
          <target state="translated">애플리케이션이이 추상 경로 이름으로 표시된 파일을 수정할 수 있는지 테스트합니다. 일부 플랫폼에서는 읽기 전용으로 표시된 파일을 수정할 수있는 특수 권한으로 Java 가상 머신을 시작할 수 있습니다. 따라서이 메서드는 파일이 읽기 전용으로 표시되어 있어도 &lt;code&gt;true&lt;/code&gt; 를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8cdcb874a87845dfe3cd4d10a04932bdd6be54b7" translate="yes" xml:space="preserve">
          <source>Tests whether the application can read the file denoted by this abstract pathname.</source>
          <target state="translated">응용 프로그램이이 추상 경로 이름으로 표시된 파일을 읽을 수 있는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="6676e7b5ca356a16c50052dccf2586a312e98304" translate="yes" xml:space="preserve">
          <source>Tests whether the application can read the file denoted by this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to read files that are marked as unreadable. Consequently this method may return &lt;code&gt;true&lt;/code&gt; even though the file does not have read permissions.</source>
          <target state="translated">애플리케이션이이 추상 경로 이름으로 표시된 파일을 읽을 수 있는지 테스트합니다. 일부 플랫폼에서는 읽을 수없는 것으로 표시된 파일을 읽을 수있는 특수 권한으로 Java 가상 머신을 시작할 수 있습니다. 따라서 파일에 읽기 권한이없는 &lt;code&gt;true&lt;/code&gt; 에도이 메소드는 true를 리턴 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e2169b021e8bcd340e6002bbaa4a4a09f05e1738" translate="yes" xml:space="preserve">
          <source>Tests whether the current state is part of this stream.</source>
          <target state="translated">현재 상태가이 스트림의 일부인지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="d597590a87ebf02c70353d64c7b2c0ff476ec580" translate="yes" xml:space="preserve">
          <source>Tests whether the current state is part of this stream. This method will return true if this filter accepts this event and false otherwise. The method should not change the state of the reader when accepting a state.</source>
          <target state="translated">현재 상태가이 스트림의 일부인지 여부를 테스트합니다. 이 메서드는이 필터가이 이벤트를 받아들이면 true를 반환하고 그렇지 않으면 false를 반환합니다. 이 메서드는 상태를 수락 할 때 판독기의 상태를 변경해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="ccdd662fcd18f231642d33da0bf43a40ffeee25e" translate="yes" xml:space="preserve">
          <source>Tests whether the current thread has been interrupted.</source>
          <target state="translated">현재 스레드가 중단되었는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="394f5148380649e964324f6321d19c6327cf4592" translate="yes" xml:space="preserve">
          <source>Tests whether the current thread has been interrupted. The</source>
          <target state="translated">현재 스레드가 중단되었는지 테스트합니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="679a89b039ddf64a02747e3e89588ba3a1c240df" translate="yes" xml:space="preserve">
          <source>Tests whether the file denoted by this abstract pathname is a directory.</source>
          <target state="translated">이 추상 경로명이 나타내는 파일이 디렉토리인지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="3279fa940a2e62891f5334c9c2db059186e817a1" translate="yes" xml:space="preserve">
          <source>Tests whether the file denoted by this abstract pathname is a normal file.</source>
          <target state="translated">이 추상 경로 이름으로 표시된 파일이 일반 파일인지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="7c38eca61501a25389b23d316859375b96a94484" translate="yes" xml:space="preserve">
          <source>Tests whether the file denoted by this abstract pathname is a normal file. A file is &lt;em&gt;normal&lt;/em&gt; if it is not a directory and, in addition, satisfies other system-dependent criteria. Any non-directory file created by a Java application is guaranteed to be a normal file.</source>
          <target state="translated">이 추상 경로명이 나타내는 파일이 일반 파일인지 테스트합니다. 파일이 디렉토리가 아닌 경우 파일은 &lt;em&gt;정상&lt;/em&gt; 이며 다른 시스템 종속 기준을 만족시킵니다. Java 응용 프로그램에서 작성된 디렉토리가 아닌 파일은 모두 일반 파일입니다.</target>
        </trans-unit>
        <trans-unit id="5441d10cfbe1f4eddfebfd9cdc96deefccff1f6d" translate="yes" xml:space="preserve">
          <source>Tests whether the file located by this path does not exist.</source>
          <target state="translated">이 경로에있는 파일이 존재하지 않는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="4c626c1458472affa0efc82fa870d149fc7a7a97" translate="yes" xml:space="preserve">
          <source>Tests whether the file located by this path does not exist. This method is intended for cases where it is required to take action when it can be confirmed that a file does not exist.</source>
          <target state="translated">이 경로로 찾은 파일이 존재하지 않는지 테스트합니다. 이 방법은 파일이 존재하지 않음을 확인할 수있을 때 조치를 취해야하는 경우를위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="28fe06dc6fcbfa3f98a125bb6b6938007abc17c3" translate="yes" xml:space="preserve">
          <source>Tests whether the file named by this abstract pathname is a hidden file.</source>
          <target state="translated">이 추상 경로 이름으로 명명 된 파일이 숨겨진 파일인지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="621980ca7c2d295160c7aee5ac179778ede79f49" translate="yes" xml:space="preserve">
          <source>Tests whether the file named by this abstract pathname is a hidden file. The exact definition of &lt;em&gt;hidden&lt;/em&gt; is system-dependent. On UNIX systems, a file is considered to be hidden if its name begins with a period character (&lt;code&gt;'.'&lt;/code&gt;). On Microsoft Windows systems, a file is considered to be hidden if it has been marked as such in the filesystem.</source>
          <target state="translated">이 추상 경로명이 지정한 파일이 숨겨진 파일인지 테스트합니다. &lt;em&gt;숨겨진&lt;/em&gt; 정확한 정의 는 시스템에 따라 다릅니다. UNIX 시스템에서 파일 이름이 마침표 ( &lt;code&gt;'.'&lt;/code&gt; )로 시작하면 파일이 숨겨져있는 것으로 간주됩니다 . Microsoft Windows 시스템에서 파일은 파일 시스템에서 파일로 표시되어 있으면 숨겨져있는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="829be859a830e8d4d199302ab454be743a076fb7" translate="yes" xml:space="preserve">
          <source>Tests whether the file or directory denoted by this abstract pathname exists.</source>
          <target state="translated">이 추상 경로명이 나타내는 파일 또는 디렉토리가 존재하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="410d9b737cd0f8c826c5f5fc7fc5c3c37af699bd" translate="yes" xml:space="preserve">
          <source>Tests whether the geometries of the two &lt;code&gt;Area&lt;/code&gt; objects are equal.</source>
          <target state="translated">두 &lt;code&gt;Area&lt;/code&gt; 개체의 도형이 같은지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="1068452fc822637382827139d3118dab7a14ae71" translate="yes" xml:space="preserve">
          <source>Tests whether the geometries of the two &lt;code&gt;Area&lt;/code&gt; objects are equal. This method will return false if the argument is null.</source>
          <target state="translated">두 &lt;code&gt;Area&lt;/code&gt; 개체의 도형이 같은지 테스트합니다 . 이 메서드는 인수가 null 인 경우 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0e47046e7d62356bba9e96b8c625c7f3a5124930" translate="yes" xml:space="preserve">
          <source>Tests whether the list of timer notifications is empty.</source>
          <target state="translated">타이머 알림 목록이 비어 있는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="5cc51c3f502f39705f8790b6d99e9d397a59e6d0" translate="yes" xml:space="preserve">
          <source>Tests whether the monitor MBean is active.</source>
          <target state="translated">모니터 MBean이 활성 상태인지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="bf4ffacac53d628be253e6b3e4b8a931458e1853" translate="yes" xml:space="preserve">
          <source>Tests whether the monitor MBean is active. A monitor MBean is marked active when the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;#stop()&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">모니터 MBean이 활성 상태인지 여부를 테스트합니다. 모니터 MBean은 &lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 때 활성으로 표시됩니다 . &lt;a href=&quot;#stop()&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt; 메서드가 호출 되면 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="3e2e63cd4c003030b4f5ed47b271b1efc0b962f9" translate="yes" xml:space="preserve">
          <source>Tests whether the monitor MBean is active. A monitor MBean is marked active when the &lt;a href=&quot;monitor#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;monitor#stop--&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">모니터 MBean가 활성화되어 있는지 테스트합니다. &lt;a href=&quot;monitor#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 때 모니터 MBean이 활성으로 표시됩니다 . &lt;a href=&quot;monitor#stop--&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt; 메소드가 호출 되면 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="e79bdf1ec97466ca51133df8902cccbb4a201c5e" translate="yes" xml:space="preserve">
          <source>Tests whether the process represented by this &lt;code&gt;Process&lt;/code&gt; is alive.</source>
          <target state="translated">이 &lt;code&gt;Process&lt;/code&gt; 가 나타내는 프로세스 가 살아 있는지 여부를 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="86752fc7d9e598ddc99034a858801b254d416e62" translate="yes" xml:space="preserve">
          <source>Tests whether the process represented by this &lt;code&gt;ProcessHandle&lt;/code&gt; is alive.</source>
          <target state="translated">이 &lt;code&gt;ProcessHandle&lt;/code&gt; 이 나타내는 프로세스 가 살아 있는지 여부를 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="9848f6eef450d3ef485bb0c145c12e19eccbef0f" translate="yes" xml:space="preserve">
          <source>Tests whether the process represented by this &lt;code&gt;ProcessHandle&lt;/code&gt; is alive. Process termination is implementation and operating system specific. The process is considered alive as long as the PID is valid.</source>
          <target state="translated">이 &lt;code&gt;ProcessHandle&lt;/code&gt; 이 나타내는 프로세스 가 살아 있는지 여부를 테스트합니다 . 프로세스 종료는 구현 및 운영 체제에 따라 다릅니다. 프로세스는 PID가 유효한 한 살아있는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="9285a9b91548fe7a4e5aec9a3cc925964c023940" translate="yes" xml:space="preserve">
          <source>Tests whether the signature of one method is a</source>
          <target state="translated">한 방법의 서명이</target>
        </trans-unit>
        <trans-unit id="39e8d78c73b2d0973abc80bc677b95ba0f639284" translate="yes" xml:space="preserve">
          <source>Tests whether the specified object is a component in this list.</source>
          <target state="translated">지정된 개체가이 목록의 구성 요소인지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="08943a44f29a65037fa2c9ff30c174def355706b" translate="yes" xml:space="preserve">
          <source>Tests whether the specified object is in the set of observed MBeans.</source>
          <target state="translated">지정된 객체가 관찰 된 MBean 세트에 있는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="517de79f4c34645266e36260f8f2eb5669925656" translate="yes" xml:space="preserve">
          <source>Tests whether the specified object reference is a key in this identity hash map.</source>
          <target state="translated">지정된 객체 참조가이 아이덴티티 해시 맵의 키 일지 어떨지를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="41257b850be87f24028308b7ee700cb8f313aa2d" translate="yes" xml:space="preserve">
          <source>Tests whether the specified object reference is a value in this identity hash map.</source>
          <target state="translated">지정된 객체 참조가이 아이덴티티 해시 맵의 값인지를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="bb2ad3fa3eebd9fa1b12063691b05b71ceabbd87" translate="yes" xml:space="preserve">
          <source>Tests whether the subprocess represented by this &lt;code&gt;Process&lt;/code&gt; is alive.</source>
          <target state="translated">이 &lt;code&gt;Process&lt;/code&gt; 가 나타내는 하위 프로세스 가 살아 있는지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="2481f608cb7c5927fe3028ca3ba618ab1df44cec" translate="yes" xml:space="preserve">
          <source>Tests whether the timer MBean is active.</source>
          <target state="translated">타이머 MBean이 활성 상태인지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="a761fd9dff6458d3c727722f38e3d4609e0d23d9" translate="yes" xml:space="preserve">
          <source>Tests whether the timer MBean is active. A timer MBean is marked active when the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;#stop()&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">타이머 MBean이 활성 상태인지 여부를 테스트합니다. 타이머 MBean은 &lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 때 활성으로 표시됩니다 . &lt;a href=&quot;#stop()&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt; 메서드가 호출 되면 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="de2ba39ec9ae34b6dcd69b79c3b7c1da37286a76" translate="yes" xml:space="preserve">
          <source>Tests whether the timer MBean is active. A timer MBean is marked active when the &lt;a href=&quot;timer#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;timer#stop--&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">타이머 MBean가 활성화되어 있는지 테스트합니다. &lt;a href=&quot;timer#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 때 타이머 MBean이 활성으로 표시됩니다 . &lt;a href=&quot;timer#stop--&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt; 메소드가 호출 되면 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="547ac5deeface453e084d952565e6677afcb10ec" translate="yes" xml:space="preserve">
          <source>Tests whether the timer MBean is active. A timer MBean is marked active when the &lt;a href=&quot;timermbean#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;timermbean#stop--&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">타이머 MBean가 활성화되어 있는지 테스트합니다. &lt;a href=&quot;timermbean#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 때 타이머 MBean이 활성으로 표시됩니다 . &lt;a href=&quot;timermbean#stop--&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt; 메소드가 호출 되면 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="a7c1c9f1d9f9ad34794cb17238bc365b1787e207" translate="yes" xml:space="preserve">
          <source>Tests whether this &lt;code&gt;Area&lt;/code&gt; consists entirely of straight edged polygonal geometry.</source>
          <target state="translated">이 &lt;code&gt;Area&lt;/code&gt; 이 직선형 다각형 기하학으로 완전히 구성되어 있는지 여부를 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="b3ecfead75f6462876c9aa7dd3147d68d149af89" translate="yes" xml:space="preserve">
          <source>Tests whether this &lt;code&gt;Area&lt;/code&gt; is comprised of a single closed subpath.</source>
          <target state="translated">이 &lt;code&gt;Area&lt;/code&gt; 이 단일 닫힌 하위 경로로 구성되어 있는지 여부를 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="510ad4b8e113d91f39367dc963156350118b24a2" translate="yes" xml:space="preserve">
          <source>Tests whether this &lt;code&gt;Area&lt;/code&gt; is comprised of a single closed subpath. This method returns &lt;code&gt;true&lt;/code&gt; if the path contains 0 or 1 subpaths, or &lt;code&gt;false&lt;/code&gt; if the path contains more than 1 subpath. The subpaths are counted by the number of &lt;a href=&quot;pathiterator#SEG_MOVETO&quot;&gt;&lt;code&gt;SEG_MOVETO&lt;/code&gt;&lt;/a&gt; segments that appear in the path.</source>
          <target state="translated">이 &lt;code&gt;Area&lt;/code&gt; 이 단일 닫힌 하위 경로로 구성되어 있는지 여부를 테스트합니다 . 이 방법은 반환 &lt;code&gt;true&lt;/code&gt; 경로가 0 또는 1 서브 패스, 또는 포함 된 경우 &lt;code&gt;false&lt;/code&gt; 경로가 1 개 이상의 서브 패스가 포함되어있는 경우. &lt;a href=&quot;pathiterator#SEG_MOVETO&quot;&gt; &lt;code&gt;SEG_MOVETO&lt;/code&gt; &lt;/a&gt; 경로는 경로에 나타나는 SEG_MOVETO 세그먼트 수로 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="b5605f0dddcc0b3da7ea6891ff842ebb50922db2" translate="yes" xml:space="preserve">
          <source>Tests whether this &lt;code&gt;Area&lt;/code&gt; is rectangular in shape.</source>
          <target state="translated">이 &lt;code&gt;Area&lt;/code&gt; 이 직사각형 모양 인지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="cad6754c5064661920412b5cee3926ce0dc38608" translate="yes" xml:space="preserve">
          <source>Tests whether this &lt;code&gt;Area&lt;/code&gt; object encloses any area.</source>
          <target state="translated">이 &lt;code&gt;Area&lt;/code&gt; 개체가 영역을 포함 하는지 여부를 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="90545305d1150de0e9ff72696a3638bb3eb2dd2b" translate="yes" xml:space="preserve">
          <source>Tests whether this abstract pathname is absolute.</source>
          <target state="translated">이 추상 경로 이름이 절대인지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="88648f28bcebd3dd55ad5a0bf07ef64871f4478e" translate="yes" xml:space="preserve">
          <source>Tests whether this abstract pathname is absolute. The definition of absolute pathname is system dependent. On UNIX systems, a pathname is absolute if its prefix is &lt;code&gt;&quot;/&quot;&lt;/code&gt;. On Microsoft Windows systems, a pathname is absolute if its prefix is a drive specifier followed by &lt;code&gt;&quot;\\&quot;&lt;/code&gt;, or if its prefix is &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt;.</source>
          <target state="translated">이 추상 경로명이 절대인지 테스트합니다. 절대 경로 이름의 정의는 시스템에 따라 다릅니다. UNIX 시스템에서 접 두부가 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 인 경우 경로 이름은 절대 입니다. Microsoft Windows 시스템에서 접 두부가 드라이브 지정자 뒤에 &lt;code&gt;&quot;\\&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt; 두부가 &quot;\\\\&quot;인 경우 경로 이름은 절대 입니다.</target>
        </trans-unit>
        <trans-unit id="61cb38f3fbbc9febad05d4d0dcfab6b44b650df8" translate="yes" xml:space="preserve">
          <source>Tests whether this audio input stream supports the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods.</source>
          <target state="translated">이 오디오 입력 스트림이 &lt;code&gt;mark&lt;/code&gt; 및 &lt;code&gt;reset&lt;/code&gt; 메소드를 지원하는지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="1b293ca7b9d9fa4ed14696344dc8b88e6fc06bed" translate="yes" xml:space="preserve">
          <source>Tests whether this class is supported on the current platform.</source>
          <target state="translated">이 클래스가 현재 플랫폼에서 지원되는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="360d96897c5b49aba4b97278fa4d64c53a5bfc2b" translate="yes" xml:space="preserve">
          <source>Tests whether this class is supported on the current platform. If it's supported, use &lt;a href=&quot;#getDesktop()&quot;&gt;&lt;code&gt;getDesktop()&lt;/code&gt;&lt;/a&gt; to retrieve an instance.</source>
          <target state="translated">이 클래스가 현재 플랫폼에서 지원되는지 여부를 테스트합니다. 지원되는 경우&lt;a href=&quot;#getDesktop()&quot;&gt; &lt;code&gt;getDesktop()&lt;/code&gt; &lt;/a&gt; 을하여 인스턴스를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="603bf3cd410f4a301bc5672842c41d040af34ce4" translate="yes" xml:space="preserve">
          <source>Tests whether this class is supported on the current platform. If it's supported, use &lt;a href=&quot;#getTaskbar()&quot;&gt;&lt;code&gt;getTaskbar()&lt;/code&gt;&lt;/a&gt; to retrieve an instance.</source>
          <target state="translated">이 클래스가 현재 플랫폼에서 지원되는지 여부를 테스트합니다. 지원되는 경우&lt;a href=&quot;#getTaskbar()&quot;&gt; &lt;code&gt;getTaskbar()&lt;/code&gt; &lt;/a&gt; 를하여 인스턴스를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="d9bcc58fc6eb90b5ba3d911ec86fcf67324c37a8" translate="yes" xml:space="preserve">
          <source>Tests whether this event is part of this stream.</source>
          <target state="translated">이 이벤트가이 스트림의 일부인지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="e0cbc9991650b5ff29d026c4e11e161916cf938d" translate="yes" xml:space="preserve">
          <source>Tests whether this event is part of this stream. This method will return true if this filter accepts this event and false otherwise.</source>
          <target state="translated">이 이벤트가이 스트림의 일부인지 여부를 테스트합니다. 이 메서드는이 필터가이 이벤트를 받아들이면 true를 반환하고 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="264a787abc1d0c3b33b27ca3013fb89e0308caac" translate="yes" xml:space="preserve">
          <source>Tests whether this key's channel has either finished, or failed to finish, its socket-connection operation.</source>
          <target state="translated">이 키의 채널이 소켓 연결 조작을 완료했는지 또는 완료하지 않았는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="fabf0adae88981842164d4747c7f777d89cabbbd" translate="yes" xml:space="preserve">
          <source>Tests whether this key's channel is ready for reading.</source>
          <target state="translated">이 키의 채널을 읽을 준비가되었는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="b79264cb18b35fc13ad5264a1a9612e4da97144a" translate="yes" xml:space="preserve">
          <source>Tests whether this key's channel is ready for writing.</source>
          <target state="translated">이 키의 채널을 쓸 준비가되었는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="dddd1a800000dae101aac1e89fcdec3b08c15ac2" translate="yes" xml:space="preserve">
          <source>Tests whether this key's channel is ready to accept a new socket connection.</source>
          <target state="translated">이 키의 채널이 새로운 소켓 접속을 받아 들일 준비가되어 있는지를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="2c9688f595972d1bde0f253122cc4e0fd7e06efc" translate="yes" xml:space="preserve">
          <source>Tests whether this list has any components.</source>
          <target state="translated">이 목록에 구성 요소가 있는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="374c842a9d2e4f4525ac81dd53a2ea29f1b17eda" translate="yes" xml:space="preserve">
          <source>Tests whether this thread has been interrupted.</source>
          <target state="translated">이 스레드가 중단되었는지 여부를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="5d878c471adbc9b2c8a9fa6dbce748ad8cd28072" translate="yes" xml:space="preserve">
          <source>Tests whether this thread has been interrupted. The</source>
          <target state="translated">이 스레드가 중단되었는지 테스트합니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="3392e47c46aa945b753998473d535e85a39484fd" translate="yes" xml:space="preserve">
          <source>Tests whether two &lt;code&gt;TypeMirror&lt;/code&gt; objects represent the same type.</source>
          <target state="translated">두 개의 &lt;code&gt;TypeMirror&lt;/code&gt; 객체가 동일한 유형을 나타내는 지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="31d0256d84b4956cc509f70c7d5f6aeee9d2f47e" translate="yes" xml:space="preserve">
          <source>Tests whether two nodes are equal.</source>
          <target state="translated">두 노드가 같은지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="c3328c39b0e29f78e9ff45db674248b1d245887d" translate="yes" xml:space="preserve">
          <source>Text</source>
          <target state="translated">Text</target>
        </trans-unit>
        <trans-unit id="890e885d9e116b52f69e2ef63c1003d7d11c8d34" translate="yes" xml:space="preserve">
          <source>Text - the textual equivalent for the value</source>
          <target state="translated">텍스트-값에 해당하는 텍스트</target>
        </trans-unit>
        <trans-unit id="9de7e07004ed9106d2edbd1bcaf9994263874e01" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint key.</source>
          <target state="translated">텍스트 앤티 앨리어싱 힌트 키입니다.</target>
        </trans-unit>
        <trans-unit id="3548f4b3efb498e15d4889e95e644a67e943b1cb" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint key. The &lt;code&gt;TEXT_ANTIALIASING&lt;/code&gt; hint can control the use of antialiasing algorithms for text independently of the choice used for shape rendering. Often an application may want to use antialiasing for text only and not for other shapes. Additionally, the algorithms for reducing the aliasing artifacts for text are often more sophisticated than those that have been developed for general rendering so this hint key provides additional values which can control the choices of some of those text-specific algorithms. If left in the &lt;code&gt;DEFAULT&lt;/code&gt; state, this hint will generally defer to the value of the regular &lt;a href=&quot;#KEY_ANTIALIASING&quot;&gt;&lt;code&gt;KEY_ANTIALIASING&lt;/code&gt;&lt;/a&gt; hint key.</source>
          <target state="translated">텍스트 앤티 앨리어싱 힌트 키입니다. &lt;code&gt;TEXT_ANTIALIASING&lt;/code&gt; 의 힌트 독립적 형상 렌더링에 사용 된 선택 텍스트 앨리어싱 알고리즘의 사용을 제어 할 수있다. 종종 응용 프로그램은 텍스트에만 앤티 앨리어싱을 사용하고 다른 모양에는 사용하지 않을 수 있습니다. 또한 텍스트의 앨리어싱 아티팩트를 줄이기위한 알고리즘은 일반 렌더링 용으로 개발 된 알고리즘보다 더 정교하므로이 힌트 키는 이러한 텍스트 특정 알고리즘의 선택을 제어 할 수있는 추가 값을 제공합니다. &lt;code&gt;DEFAULT&lt;/code&gt; 상태로 두면 이 힌트는 일반적으로 일반 &lt;a href=&quot;#KEY_ANTIALIASING&quot;&gt; &lt;code&gt;KEY_ANTIALIASING&lt;/code&gt; &lt;/a&gt; 힌트 키 의 값에 따라 달라집니다 .</target>
        </trans-unit>
        <trans-unit id="89e78967f3424501a26b747836abecb10364b869" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixel organisation from display top to bottom of B,G,R such that the vertical subpixel resolution is three times that of the full pixel vertical resolution (VBGR).</source>
          <target state="translated">텍스트 앤티 앨리어싱 힌트 값-수직 하위 픽셀 해상도가 전체 픽셀 수직 해상도 (VBGR)의 3 배가되도록 B, G, R의 디스플레이 상단에서 하단까지 하위 픽셀 구성이있는 LCD 디스플레이에 최적화 된 텍스트를 표시하도록 요청합니다.</target>
        </trans-unit>
        <trans-unit id="b50b387a5c823fe052834cdced673f842f004f9a" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixel organisation from display top to bottom of B,G,R such that the vertical subpixel resolution is three times that of the full pixel vertical resolution (VBGR). Vertical orientation is very uncommon and probably mainly useful for a physically rotated display. Selecting this hint for displays with one of the other LCD subpixel configurations will likely result in unfocused text. See &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_LCD_HRGB&quot;&gt;&lt;code&gt;VALUE_TEXT_ANTIALIAS_LCD_HRGB&lt;/code&gt;&lt;/a&gt;, for more information on when this hint is applied.</source>
          <target state="translated">텍스트 앤티 앨리어싱 힌트 값-수직 하위 픽셀 해상도가 전체 픽셀 수직 해상도 (VBGR)의 3 배가되도록 B, G, R의 디스플레이 상단에서 하단까지 하위 픽셀 구성이있는 LCD 디스플레이에 최적화 된 텍스트를 표시하도록 요청합니다. 수직 방향은 매우 드물며 물리적으로 회전 된 디스플레이에 주로 유용합니다. 다른 LCD 서브 픽셀 구성 중 하나가있는 디스플레이에 대해이 힌트를 선택하면 텍스트의 초점이 맞지 않을 수 있습니다. &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_LCD_HRGB&quot;&gt; &lt;code&gt;VALUE_TEXT_ANTIALIAS_LCD_HRGB&lt;/code&gt; &lt;/a&gt; 참조 이 힌트가 적용되는시기에 대한 자세한 내용 .</target>
        </trans-unit>
        <trans-unit id="16243cafd25cd328847eac0f34519c3d0922c4a9" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixel organisation from display top to bottom of R,G,B such that the vertical subpixel resolution is three times that of the full pixel vertical resolution (VRGB).</source>
          <target state="translated">텍스트 앤티 앨리어싱 힌트 값-R, G, B의 디스플레이 상단에서 하단으로 하위 픽셀 구성이있는 LCD 디스플레이에 최적화 된 텍스트를 표시하도록 요청하여 수직 하위 픽셀 해상도가 전체 픽셀 수직 해상도 (VRGB)의 3 배가되도록합니다.</target>
        </trans-unit>
        <trans-unit id="d20546820370445fb3fd1c54fe1e2d59225d9ab5" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixel organisation from display top to bottom of R,G,B such that the vertical subpixel resolution is three times that of the full pixel vertical resolution (VRGB). Vertical orientation is very uncommon and probably mainly useful for a physically rotated display. Selecting this hint for displays with one of the other LCD subpixel configurations will likely result in unfocused text. See &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_LCD_HRGB&quot;&gt;&lt;code&gt;VALUE_TEXT_ANTIALIAS_LCD_HRGB&lt;/code&gt;&lt;/a&gt;, for more information on when this hint is applied.</source>
          <target state="translated">텍스트 앤티 앨리어싱 힌트 값-R, G, B의 디스플레이 상단에서 하단으로 하위 픽셀 구성이있는 LCD 디스플레이에 최적화 된 텍스트를 표시하도록 요청하여 수직 하위 픽셀 해상도가 전체 픽셀 수직 해상도 (VRGB)의 3 배가되도록합니다. 수직 방향은 매우 드물며 물리적으로 회전 된 디스플레이에 주로 유용합니다. 다른 LCD 서브 픽셀 구성 중 하나가있는 디스플레이에 대해이 힌트를 선택하면 텍스트의 초점이 맞지 않을 수 있습니다. 이 힌트가 적용되는시기에 대한 자세한 내용 은 &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_LCD_HRGB&quot;&gt; &lt;code&gt;VALUE_TEXT_ANTIALIAS_LCD_HRGB&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="04c8208a9f2e940d9f66287ac34781e81967cd32" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixels in order from display left to right of B,G,R such that the horizontal subpixel resolution is three times that of the full pixel horizontal resolution (HBGR).</source>
          <target state="translated">텍스트 앤티 앨리어싱 힌트 값-수평 하위 픽셀 해상도가 전체 픽셀 수평 해상도 (HBGR)의 3 배가되도록 B, G, R의 디스플레이 왼쪽에서 오른쪽으로 순서대로 하위 픽셀이있는 LCD 디스플레이에 최적화 된 텍스트를 표시하도록 요청합니다. .</target>
        </trans-unit>
        <trans-unit id="892b33c5dfa6ee611770a88b49497426a72fd3a4" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixels in order from display left to right of B,G,R such that the horizontal subpixel resolution is three times that of the full pixel horizontal resolution (HBGR). This is a much less common configuration than HRGB. Selecting this hint for displays with one of the other LCD subpixel configurations will likely result in unfocused text. See &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_LCD_HRGB&quot;&gt;&lt;code&gt;VALUE_TEXT_ANTIALIAS_LCD_HRGB&lt;/code&gt;&lt;/a&gt;, for more information on when this hint is applied.</source>
          <target state="translated">텍스트 앤티 앨리어싱 힌트 값-수평 하위 픽셀 해상도가 전체 픽셀 수평 해상도 (HBGR)의 3 배가되도록 B, G, R의 디스플레이 왼쪽에서 오른쪽으로 순서대로 하위 픽셀이있는 LCD 디스플레이에 최적화 된 텍스트를 표시하도록 요청합니다. . 이것은 HRGB보다 훨씬 덜 일반적인 구성입니다. 다른 LCD 서브 픽셀 구성 중 하나가있는 디스플레이에 대해이 힌트를 선택하면 텍스트의 초점이 맞지 않을 수 있습니다. 이 힌트가 적용되는시기에 대한 자세한 내용 은 &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_LCD_HRGB&quot;&gt; &lt;code&gt;VALUE_TEXT_ANTIALIAS_LCD_HRGB&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b68616cd28023f13583c6d2a8b03f38dd0ecf897" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixels in order from display left to right of R,G,B such that the horizontal subpixel resolution is three times that of the full pixel horizontal resolution (HRGB).</source>
          <target state="translated">텍스트 앤티 앨리어싱 힌트 값-가로 하위 픽셀 해상도가 전체 픽셀 가로 해상도 (HRGB)의 3 배가되도록 R, G, B의 디스플레이 왼쪽에서 오른쪽으로 하위 픽셀이있는 LCD 디스플레이에 최적화 된 텍스트를 표시하도록 요청합니다. .</target>
        </trans-unit>
        <trans-unit id="74c803cfec98fc159a7495de576591f755fd81e0" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixels in order from display left to right of R,G,B such that the horizontal subpixel resolution is three times that of the full pixel horizontal resolution (HRGB). This is the most common configuration. Selecting this hint for displays with one of the other LCD subpixel configurations will likely result in unfocused text.</source>
          <target state="translated">텍스트 앤티 앨리어싱 힌트 값-가로 하위 픽셀 해상도가 전체 픽셀 가로 해상도 (HRGB)의 3 배가되도록 R, G, B의 디스플레이 왼쪽에서 오른쪽으로 하위 픽셀이있는 LCD 디스플레이에 최적화 된 텍스트를 표시하도록 요청합니다. . 이것은 가장 일반적인 구성입니다. 다른 LCD 서브 픽셀 구성 중 하나가있는 디스플레이에 대해이 힌트를 선택하면 텍스트의 초점이 맞지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32d4180bdc5f9b73b6e8be2e65354553f987b740" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- text rendering is done according to the &lt;a href=&quot;#KEY_ANTIALIASING&quot;&gt;&lt;code&gt;KEY_ANTIALIASING&lt;/code&gt;&lt;/a&gt; hint or a default chosen by the implementation.</source>
          <target state="translated">텍스트 앤티 앨리어싱 힌트 값-텍스트 렌더링은 &lt;a href=&quot;#KEY_ANTIALIASING&quot;&gt; &lt;code&gt;KEY_ANTIALIASING&lt;/code&gt; &lt;/a&gt; 힌트 또는 구현에서 선택한 기본값에 따라 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="f2652b8a69967b4ee9909c12148770777e07354b" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- text rendering is done with some form of antialiasing.</source>
          <target state="translated">텍스트 앤티 앨리어싱 힌트 값-텍스트 렌더링은 어떤 형태의 앤티 앨리어싱으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="a4493609891ff2e4b3855ca0cb6591425939d42c" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- text rendering is done without any form of antialiasing.</source>
          <target state="translated">텍스트 앤티 앨리어싱 힌트 값-텍스트 렌더링은 어떤 형태의 앤티 앨리어싱없이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="45888e5c919cb2cd9e63ecc70eb7a7512a76ebaf" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- text rendering is requested to use information in the font resource which specifies for each point size whether to apply &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_ON&quot;&gt;&lt;code&gt;VALUE_TEXT_ANTIALIAS_ON&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_OFF&quot;&gt;&lt;code&gt;VALUE_TEXT_ANTIALIAS_OFF&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">텍스트 앤티 앨리어싱 힌트 값 &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_ON&quot;&gt; &lt;code&gt;VALUE_TEXT_ANTIALIAS_ON&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_OFF&quot;&gt; &lt;code&gt;VALUE_TEXT_ANTIALIAS_OFF&lt;/code&gt; &lt;/a&gt; 를 적용할지 여부를 포인트 크기별로 지정하는 글꼴 리소스의 정보를 사용하려면 텍스트 렌더링이 요청됩니다 .</target>
        </trans-unit>
        <trans-unit id="ec4d19a132304fb6e74d8275ddfc3762ef4579c0" translate="yes" xml:space="preserve">
          <source>Text components provide a number of commands that can be used to manipulate the component. This is essentially the way that the component expresses its capabilities. These are expressed in terms of the swing &lt;code&gt;Action&lt;/code&gt; interface, using the &lt;code&gt;TextAction&lt;/code&gt; implementation. The set of commands supported by the text component can be found with the &lt;a href=&quot;#getActions()&quot;&gt;&lt;code&gt;getActions()&lt;/code&gt;&lt;/a&gt; method. These actions can be bound to key events, fired from buttons, etc.</source>
          <target state="translated">텍스트 구성 요소는 구성 요소를 조작하는 데 사용할 수있는 여러 명령을 제공합니다. 이것은 본질적으로 구성 요소가 기능을 표현하는 방식입니다. 이는 &lt;code&gt;TextAction&lt;/code&gt; 구현을 사용하여 스윙 &lt;code&gt;Action&lt;/code&gt; 인터페이스 로 표현됩니다 . 텍스트 구성 요소에서 지원하는 명령 집합은 &lt;a href=&quot;#getActions()&quot;&gt; &lt;code&gt;getActions()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 찾을 수 있습니다 . 이러한 작업은 키 이벤트에 바인딩되거나 버튼에서 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec933e87a4586e6cb5f4556ab10c88c9b0551d52" translate="yes" xml:space="preserve">
          <source>Text direction.</source>
          <target state="translated">텍스트 방향.</target>
        </trans-unit>
        <trans-unit id="686a7f5eb7f1648068affaa7ed032380382004d9" translate="yes" xml:space="preserve">
          <source>Text editor user interface</source>
          <target state="translated">텍스트 편집기 사용자 인터페이스</target>
        </trans-unit>
        <trans-unit id="2c236b72cbb10f9edd52606dbd5c76f63dcab538" translate="yes" xml:space="preserve">
          <source>Text events are enabled via &lt;code&gt;enableEvents&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;enableEvents&lt;/code&gt; 를 통해 텍스트 이벤트가 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="1c4f2b895cd5304555ae25ed192df74b0fa42e40" translate="yes" xml:space="preserve">
          <source>Text icon gap</source>
          <target state="translated">텍스트 아이콘 간격</target>
        </trans-unit>
        <trans-unit id="75e3ea342081cafec7f96bff36c8f55abde348c6" translate="yes" xml:space="preserve">
          <source>Text is rarely represented simply as featureless content. Rather, text typically has some sort of structure associated with it. Exactly what structure is modeled is up to a particular Document implementation. It might be as simple as no structure (i.e. a simple text field), or it might be something like diagram below.</source>
          <target state="translated">텍스트는 기능이없는 콘텐츠로 표현되는 경우는 거의 없습니다. 오히려 텍스트에는 일반적으로 관련된 일종의 구조가 있습니다. 정확히 어떤 구조가 모델링되는지는 특정 문서 구현에 달려 있습니다. 구조가없는 것처럼 간단하거나 (예 : 간단한 텍스트 필드) 아래 다이어그램과 같은 것일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cd4f4ad22e30894dfd760bd655d6ca0d4086566" translate="yes" xml:space="preserve">
          <source>Text of notification.</source>
          <target state="translated">통지문.</target>
        </trans-unit>
        <trans-unit id="84b5008a43352c30bd5e7e53bc20f84945a7b7b7" translate="yes" xml:space="preserve">
          <source>Text styles define three sizes for the formatted text - 'full', 'short' and 'narrow'. Each of these three sizes is available in both 'standard' and 'stand-alone' variations.</source>
          <target state="translated">텍스트 스타일은 서식있는 텍스트에 대해 '전체', '짧음'및 '좁음'의 세 가지 크기를 정의합니다. 이 세 가지 크기는 각각 '표준'및 '독립형'변형으로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="c62d559f76902e22c7828bf2006e005bb471e6ef" translate="yes" xml:space="preserve">
          <source>TextAction</source>
          <target state="translated">TextAction</target>
        </trans-unit>
        <trans-unit id="6803da9ee11ff492530f9c8867cacf0bf23256dc" translate="yes" xml:space="preserve">
          <source>TextArea</source>
          <target state="translated">TextArea</target>
        </trans-unit>
        <trans-unit id="1141a05ff6115572b6faf474f48a70085ad86ad3" translate="yes" xml:space="preserve">
          <source>TextArea region.</source>
          <target state="translated">TextArea 영역.</target>
        </trans-unit>
        <trans-unit id="33f1c6b88b8ac58976d6ed7604232a6850c5dd96" translate="yes" xml:space="preserve">
          <source>TextArea region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;TextArea&lt;/code&gt;.</source>
          <target state="translated">TextArea 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;TextArea&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b9731723801d8367069023825529aad1bdc6179" translate="yes" xml:space="preserve">
          <source>TextArea.AccessibleAWTTextArea</source>
          <target state="translated">TextArea.AccessibleAWTTextArea</target>
        </trans-unit>
        <trans-unit id="cc6d5965106a97b437c821b506e6a6cc0b02b3a8" translate="yes" xml:space="preserve">
          <source>TextAttribute</source>
          <target state="translated">TextAttribute</target>
        </trans-unit>
        <trans-unit id="c657b178630e6ecddad573a066553cba3a050c9e" translate="yes" xml:space="preserve">
          <source>TextComponent</source>
          <target state="translated">TextComponent</target>
        </trans-unit>
        <trans-unit id="409e7e5277c74ad4ad57874777acc41ef06508d8" translate="yes" xml:space="preserve">
          <source>TextComponent.AccessibleAWTTextComponent</source>
          <target state="translated">TextComponent.AccessibleAWTTextComponent</target>
        </trans-unit>
        <trans-unit id="80694b2807ac275fa1b332f2b5daf26e73cbdaf5" translate="yes" xml:space="preserve">
          <source>TextEvent</source>
          <target state="translated">TextEvent</target>
        </trans-unit>
        <trans-unit id="ed595662ad10d27de0f2faece995e2ca2b8e7012" translate="yes" xml:space="preserve">
          <source>TextField</source>
          <target state="translated">TextField</target>
        </trans-unit>
        <trans-unit id="efb4de1491efa73753a852ae412adb6ec35c4e35" translate="yes" xml:space="preserve">
          <source>TextField region.</source>
          <target state="translated">TextField 영역.</target>
        </trans-unit>
        <trans-unit id="173f00afca6f72be7f67b2d86bbc2e9bf81fb8c5" translate="yes" xml:space="preserve">
          <source>TextField region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;TextField&lt;/code&gt;.</source>
          <target state="translated">TextField 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;TextField&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a8b5cc425a1410c3a0324cc07d2dfea9dbbfb58" translate="yes" xml:space="preserve">
          <source>TextField.AccessibleAWTTextField</source>
          <target state="translated">TextField.AccessibleAWTTextField</target>
        </trans-unit>
        <trans-unit id="45936df229c89a809f511cda10486846f3904399" translate="yes" xml:space="preserve">
          <source>TextFieldBorder</source>
          <target state="translated">TextFieldBorder</target>
        </trans-unit>
        <trans-unit id="2ebbd96a512872d328e1c81998e69ecc7e7bc8f1" translate="yes" xml:space="preserve">
          <source>TextHitInfo</source>
          <target state="translated">TextHitInfo</target>
        </trans-unit>
        <trans-unit id="c0a019987906550410814728141e87a01dcb706d" translate="yes" xml:space="preserve">
          <source>TextInputCallback</source>
          <target state="translated">TextInputCallback</target>
        </trans-unit>
        <trans-unit id="3fde12722a72456d8e4d6445b0a9a4654cb73300" translate="yes" xml:space="preserve">
          <source>TextInputCallback.getDefaultText()</source>
          <target state="translated">TextInputCallback.getDefaultText()</target>
        </trans-unit>
        <trans-unit id="0a5e8244825ced667ef0950c3decd6960ad62616" translate="yes" xml:space="preserve">
          <source>TextInputCallback.getPrompt()</source>
          <target state="translated">TextInputCallback.getPrompt()</target>
        </trans-unit>
        <trans-unit id="97cad89ebd01bcfd907d406cd9142c54409b192f" translate="yes" xml:space="preserve">
          <source>TextInputCallback.getText()</source>
          <target state="translated">TextInputCallback.getText()</target>
        </trans-unit>
        <trans-unit id="628928dea47b979f7fd4227e346208d91c210955" translate="yes" xml:space="preserve">
          <source>TextInputCallback.setText()</source>
          <target state="translated">TextInputCallback.setText()</target>
        </trans-unit>
        <trans-unit id="4948ddaa99e72ebe224bd404badce3f161ed78fd" translate="yes" xml:space="preserve">
          <source>TextLayout</source>
          <target state="translated">TextLayout</target>
        </trans-unit>
        <trans-unit id="95225223b54e70cbfa25c515904e18b25b0ad0de" translate="yes" xml:space="preserve">
          <source>TextLayout.CaretPolicy</source>
          <target state="translated">TextLayout.CaretPolicy</target>
        </trans-unit>
        <trans-unit id="f2c786dd8931cbf2877be0d05cee324ca3a30c60" translate="yes" xml:space="preserve">
          <source>TextListener</source>
          <target state="translated">TextListener</target>
        </trans-unit>
        <trans-unit id="ae7786ce5d880244d2f1d13c8a4815cac129b515" translate="yes" xml:space="preserve">
          <source>TextListener notification of a text value change.</source>
          <target state="translated">텍스트 값 변경에 대한 TextListener 알림.</target>
        </trans-unit>
        <trans-unit id="ac166623a76e86eeca946d862ad033d086a62638" translate="yes" xml:space="preserve">
          <source>TextMeasurer</source>
          <target state="translated">TextMeasurer</target>
        </trans-unit>
        <trans-unit id="588e445a7fb8a62cfbfe07fc7da7e4c3fa53c998" translate="yes" xml:space="preserve">
          <source>TextOutputCallback</source>
          <target state="translated">TextOutputCallback</target>
        </trans-unit>
        <trans-unit id="252f4df0a0cc7ef6d63b2964239d75a8cd935edb" translate="yes" xml:space="preserve">
          <source>TextOutputCallback.getMessage()</source>
          <target state="translated">TextOutputCallback.getMessage()</target>
        </trans-unit>
        <trans-unit id="04a3dc5e3172617d279fa04f4074aa7941b269e8" translate="yes" xml:space="preserve">
          <source>TextOutputCallback.getMessageType()</source>
          <target state="translated">TextOutputCallback.getMessageType()</target>
        </trans-unit>
        <trans-unit id="a9cd54a4125c7be8f147ce4971c5b600368543c7" translate="yes" xml:space="preserve">
          <source>TextPane region.</source>
          <target state="translated">TextPane 영역.</target>
        </trans-unit>
        <trans-unit id="d6076ba78418e80b00bf8b0fcf6accde6ba64df8" translate="yes" xml:space="preserve">
          <source>TextPane region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;TextPane&lt;/code&gt;.</source>
          <target state="translated">TextPane 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 이름 &lt;code&gt;TextPane&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9730e5eb39c447a1781ba61855df2714772d7751" translate="yes" xml:space="preserve">
          <source>TextStyle</source>
          <target state="translated">TextStyle</target>
        </trans-unit>
        <trans-unit id="f4dca53ffd389401b79d872c5e632fd324076eef" translate="yes" xml:space="preserve">
          <source>TextStyle.asNormal()</source>
          <target state="translated">TextStyle.asNormal()</target>
        </trans-unit>
        <trans-unit id="1ef9942c75cd5e393a8ead0a76131c8945ad5e66" translate="yes" xml:space="preserve">
          <source>TextStyle.asStandalone()</source>
          <target state="translated">TextStyle.asStandalone()</target>
        </trans-unit>
        <trans-unit id="0d128dd8c9acf7ee1c4c113528b8714efd712df9" translate="yes" xml:space="preserve">
          <source>TextStyle.isStandalone()</source>
          <target state="translated">TextStyle.isStandalone()</target>
        </trans-unit>
        <trans-unit id="c83b71a023441b2dec3ae28c844e030a94a564ce" translate="yes" xml:space="preserve">
          <source>TextStyle.valueOf()</source>
          <target state="translated">TextStyle.valueOf()</target>
        </trans-unit>
        <trans-unit id="a36d687140d6a14d13a30df1289134c5a96887bf" translate="yes" xml:space="preserve">
          <source>TextStyle.values()</source>
          <target state="translated">TextStyle.values()</target>
        </trans-unit>
        <trans-unit id="4ba1cb88f64bee051232816580fd6cb2672c9cf0" translate="yes" xml:space="preserve">
          <source>TextSyntax</source>
          <target state="translated">TextSyntax</target>
        </trans-unit>
        <trans-unit id="a0e31d45ecd3597bc9c201242058dd0894346074" translate="yes" xml:space="preserve">
          <source>TextSyntax.equals()</source>
          <target state="translated">TextSyntax.equals()</target>
        </trans-unit>
        <trans-unit id="01a8db3991f8df738125e4291a8f08e2dd90e0dd" translate="yes" xml:space="preserve">
          <source>TextSyntax.getLocale()</source>
          <target state="translated">TextSyntax.getLocale()</target>
        </trans-unit>
        <trans-unit id="36257532531c5aca445403e9ee18a7e5d3a9316c" translate="yes" xml:space="preserve">
          <source>TextSyntax.getValue()</source>
          <target state="translated">TextSyntax.getValue()</target>
        </trans-unit>
        <trans-unit id="cbae53268b404fa9327fcac8b160936d3d73e4f8" translate="yes" xml:space="preserve">
          <source>TextSyntax.hashCode()</source>
          <target state="translated">TextSyntax.hashCode()</target>
        </trans-unit>
        <trans-unit id="fab8c00792aa8223f14e1550d15267c9fe32de52" translate="yes" xml:space="preserve">
          <source>TextSyntax.toString()</source>
          <target state="translated">TextSyntax.toString()</target>
        </trans-unit>
        <trans-unit id="ada4026782ca69102c304790669fdfb4005da1b1" translate="yes" xml:space="preserve">
          <source>TextUI</source>
          <target state="translated">TextUI</target>
        </trans-unit>
        <trans-unit id="35e814370946e73a4be7cae92516751937de9ac7" translate="yes" xml:space="preserve">
          <source>Textual representation of IP addresses</source>
          <target state="translated">IP 주소의 텍스트 표현</target>
        </trans-unit>
        <trans-unit id="117803293fc433375561793178e0696f42010099" translate="yes" xml:space="preserve">
          <source>Textual representation of IPv4 address used as input to methods takes one of the following forms:</source>
          <target state="translated">메소드 입력으로 사용되는 IPv4 주소의 텍스트 표현은 다음 형식 중 하나를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7b4628af40961c1f376a18d8c40b6de5d38b2404" translate="yes" xml:space="preserve">
          <source>Textual representation of IPv6 address used as input to methods takes one of the following forms:</source>
          <target state="translated">메소드 입력으로 사용되는 IPv6 주소의 텍스트 표현은 다음 형식 중 하나를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8c4d1dd6105f0bc77857401185e81ff007acd88e" translate="yes" xml:space="preserve">
          <source>Textual representation of IPv6 scoped addresses</source>
          <target state="translated">IPv6 범위 주소의 텍스트 표현</target>
        </trans-unit>
        <trans-unit id="54dc10ae4aff9fa451f03265c48f0fd2e453c8f1" translate="yes" xml:space="preserve">
          <source>TexturePaint</source>
          <target state="translated">TexturePaint</target>
        </trans-unit>
        <trans-unit id="fc7e4006758ef1304dbc8a17ff24569b5872cba2" translate="yes" xml:space="preserve">
          <source>Thai Buddhist leap years occur exactly in line with ISO leap years. This method does not validate the year passed in, and only has a well-defined result for years in the supported range.</source>
          <target state="translated">태국 불교 도약 연도는 ISO 윤년과 정확히 일치합니다. 이 방법은 전달 된 연도의 유효성을 검사하지 않으며 지원되는 범위의 연도에 대해 잘 정의 된 결과 만 갖습니다.</target>
        </trans-unit>
        <trans-unit id="a3a88c31fc847e5975ca0d481465a31d6c2afb88" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology</source>
          <target state="translated">ThaiBuddhistChronology</target>
        </trans-unit>
        <trans-unit id="9f4e098c159feb8a1aaa3489340db7b582b8a923" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.date()</source>
          <target state="translated">ThaiBuddhistChronology.date()</target>
        </trans-unit>
        <trans-unit id="81a9c9b5b80bdfdae92d38adf091b7f3c1052eff" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.dateEpochDay()</source>
          <target state="translated">ThaiBuddhistChronology.dateEpochDay()</target>
        </trans-unit>
        <trans-unit id="23605069d3ce7143eb2a0a9211ed2c62103e6714" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.dateNow()</source>
          <target state="translated">ThaiBuddhistChronology.dateNow()</target>
        </trans-unit>
        <trans-unit id="af7b1ba8e6be27d0b854cb3a4d57c40d2446899f" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.dateYearDay()</source>
          <target state="translated">ThaiBuddhistChronology.dateYearDay()</target>
        </trans-unit>
        <trans-unit id="93910146fe36db4c0613d18ce6c1f9117ddaf7c2" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.eraOf()</source>
          <target state="translated">ThaiBuddhistChronology.eraOf()</target>
        </trans-unit>
        <trans-unit id="9cdaba971e2dea5eb16dff0e2ef133360ef742de" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.eras()</source>
          <target state="translated">ThaiBuddhistChronology.eras()</target>
        </trans-unit>
        <trans-unit id="8e2878dd01a7e76600e403a321b5ac1650f4749c" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.getCalendarType()</source>
          <target state="translated">ThaiBuddhistChronology.getCalendarType()</target>
        </trans-unit>
        <trans-unit id="5951fdcb7eaad658dd8f305149f76d4e28ab97cc" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.getId()</source>
          <target state="translated">ThaiBuddhistChronology.getId()</target>
        </trans-unit>
        <trans-unit id="5dc3d69674033a15206befd7f6f1f0bd82e1f586" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.isLeapYear()</source>
          <target state="translated">ThaiBuddhistChronology.isLeapYear()</target>
        </trans-unit>
        <trans-unit id="0ca9e1ad57b9dc845e3c7a8290592d23191a4c7c" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.localDateTime()</source>
          <target state="translated">ThaiBuddhistChronology.localDateTime()</target>
        </trans-unit>
        <trans-unit id="62c58c7a6de0785fc1963f4cdc3f687a137b9c8a" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.prolepticYear()</source>
          <target state="translated">ThaiBuddhistChronology.prolepticYear()</target>
        </trans-unit>
        <trans-unit id="84dec28471d39425c7517074060ef484dc960f5b" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.range()</source>
          <target state="translated">ThaiBuddhistChronology.range()</target>
        </trans-unit>
        <trans-unit id="6f1b85d9c539b822fc2c329e721c9f10d3615fda" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.resolveDate()</source>
          <target state="translated">ThaiBuddhistChronology.resolveDate()</target>
        </trans-unit>
        <trans-unit id="ef04f245e01dd1ed7ca48833a62e0cf965f8b9c8" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.zonedDateTime()</source>
          <target state="translated">ThaiBuddhistChronology.zonedDateTime()</target>
        </trans-unit>
        <trans-unit id="56cacb065b48fc5b20d838fbbe8bde43dbb623ac" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate</source>
          <target state="translated">ThaiBuddhistDate</target>
        </trans-unit>
        <trans-unit id="db18fff8c5f1eba899d8e2fec3b841757b2c64a3" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.atTime()</source>
          <target state="translated">ThaiBuddhistDate.atTime()</target>
        </trans-unit>
        <trans-unit id="9d6dc83ae18f9c046ce1ca0c1c1858d808569894" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.equals()</source>
          <target state="translated">ThaiBuddhistDate.equals()</target>
        </trans-unit>
        <trans-unit id="a1d0a76834da9825dbe7a22b7df411265b938345" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.from()</source>
          <target state="translated">ThaiBuddhistDate.from()</target>
        </trans-unit>
        <trans-unit id="631ff9458cac35099e69a03f2c39b78d3177d43d" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.getChronology()</source>
          <target state="translated">ThaiBuddhistDate.getChronology()</target>
        </trans-unit>
        <trans-unit id="867efbd62bb34492da2f93784ae9940be543f6e8" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.getEra()</source>
          <target state="translated">ThaiBuddhistDate.getEra()</target>
        </trans-unit>
        <trans-unit id="b20965a16ab7d753daa15fdd1445726a4b4bc735" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.getLong()</source>
          <target state="translated">ThaiBuddhistDate.getLong()</target>
        </trans-unit>
        <trans-unit id="1d08e48b0f31e7d132dcf2513888d58482f93533" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.hashCode()</source>
          <target state="translated">ThaiBuddhistDate.hashCode()</target>
        </trans-unit>
        <trans-unit id="05c327da97b723029b77d71ab87e5769aa49376d" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.lengthOfMonth()</source>
          <target state="translated">ThaiBuddhistDate.lengthOfMonth()</target>
        </trans-unit>
        <trans-unit id="83339f429fc8d1032f157bfa1a6f48584818ee22" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.minus()</source>
          <target state="translated">ThaiBuddhistDate.minus()</target>
        </trans-unit>
        <trans-unit id="1772e94bfa441b9d316fb8029d2e0a2880c086e9" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.now()</source>
          <target state="translated">ThaiBuddhistDate.now()</target>
        </trans-unit>
        <trans-unit id="eee511f518f709d927b64f0cf053d2bc3abdf547" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.of()</source>
          <target state="translated">ThaiBuddhistDate.of()</target>
        </trans-unit>
        <trans-unit id="6e5182152bdca111eee82cfccedeccac50e6be2b" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.plus()</source>
          <target state="translated">ThaiBuddhistDate.plus()</target>
        </trans-unit>
        <trans-unit id="3caf1e8127398daabc0daecbc7a3899bc28bf097" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.range()</source>
          <target state="translated">ThaiBuddhistDate.range()</target>
        </trans-unit>
        <trans-unit id="c9251bd315b835c130709c2bd5ad364ffcd087a2" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.toEpochDay()</source>
          <target state="translated">ThaiBuddhistDate.toEpochDay()</target>
        </trans-unit>
        <trans-unit id="e14e21c8865db3adeb700749d14718da3c6d5c12" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.toString()</source>
          <target state="translated">ThaiBuddhistDate.toString()</target>
        </trans-unit>
        <trans-unit id="b5d685fb3d918cd886b757988fe0097b71da0c52" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.until()</source>
          <target state="translated">ThaiBuddhistDate.until()</target>
        </trans-unit>
        <trans-unit id="0891bb4c3ac498e3de588a3b988abfe28bd45b3a" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.with()</source>
          <target state="translated">ThaiBuddhistDate.with()</target>
        </trans-unit>
        <trans-unit id="0c6f18d03a0410128636e15c4276fb431889de55" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra</source>
          <target state="translated">ThaiBuddhistEra</target>
        </trans-unit>
        <trans-unit id="1e44ae46b9f83afcc5d0dd91bd2ba339e3ffe2e6" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.getValue()</source>
          <target state="translated">ThaiBuddhistEra.getValue()</target>
        </trans-unit>
        <trans-unit id="1f8b419c0c527a193ab6d599bd7ec00e696ce392" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.of()</source>
          <target state="translated">ThaiBuddhistEra.of()</target>
        </trans-unit>
        <trans-unit id="551e2de4fb34142d0eff47396c16cf09f916c035" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.valueOf()</source>
          <target state="translated">ThaiBuddhistEra.valueOf()</target>
        </trans-unit>
        <trans-unit id="5ec30eac149daa0ab70fa50291d1ae80950de39a" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.values()</source>
          <target state="translated">ThaiBuddhistEra.values()</target>
        </trans-unit>
        <trans-unit id="8a430b0436fbafd13ff3f8f793fd3a22f31a2926" translate="yes" xml:space="preserve">
          <source>That</source>
          <target state="translated">That</target>
        </trans-unit>
        <trans-unit id="383a080e9d69d6f722f57039b9091b9f29317036" translate="yes" xml:space="preserve">
          <source>That a selection key indicates that its channel is ready for some operation is a hint, but not a guarantee, that such an operation can be performed by a thread without causing the thread to block. It is imperative that code that performs multiplexed I/O be written so as to ignore these hints when they prove to be incorrect.</source>
          <target state="translated">선택 키는 해당 채널이 일부 작업을 수행 할 준비가되었음을 암시하지만 이러한 작업이 스레드를 차단하지 않고 스레드에 의해 수행 될 수 있음을 보증하는 것은 아닙니다. 멀티플렉싱 된 I / O를 수행하는 코드는 이러한 힌트가 잘못된 것으로 판명 될 때 무시하도록 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="2e116fde30bfce6bc219f98a723200588db818f4" translate="yes" xml:space="preserve">
          <source>That a selection key's ready set indicates that its channel is ready for some operation category is a hint, but not a guarantee, that an operation in such a category may be performed by a thread without causing the thread to block. A ready set is most likely to be accurate immediately after the completion of a selection operation. It is likely to be made inaccurate by external events and by I/O operations that are invoked upon the corresponding channel.</source>
          <target state="translated">선택 키의 준비 세트는 해당 채널이 일부 작업 범주에 대해 준비되었음을 암시하지만 이러한 범주의 작업이 스레드를 차단하지 않고 스레드에 의해 수행 될 수 있음을 보증하지는 않습니다. 준비 작업은 선택 작업이 완료된 직후에 정확할 가능성이 높습니다. 외부 이벤트 및 해당 채널에서 호출되는 I / O 조작으로 인해 정확하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7293d0c8de22c531a5129cfdad90649cce36d51f" translate="yes" xml:space="preserve">
          <source>That implementation makes the operation suitable for short traversals from a known position. But to traverse all of the leaves in the tree, you should use &lt;code&gt;depthFirstEnumeration&lt;/code&gt; to enumerate the nodes in the tree and use &lt;code&gt;isLeaf&lt;/code&gt; on each node to determine which are leaves.</source>
          <target state="translated">이 구현은 알려진 위치에서 짧은 순회에 적합한 작업을 만듭니다. 그러나 트리의 모든 잎을 탐색하려면 &lt;code&gt;depthFirstEnumeration&lt;/code&gt; 을 사용 하여 트리의 노드를 열거하고 각 노드에서 &lt;code&gt;isLeaf&lt;/code&gt; 를 사용 하여 잎이 무엇인지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="afcead73a580f282a044b63d246784dd77d66756" translate="yes" xml:space="preserve">
          <source>That is, &lt;code&gt;cipher.getParameters().getEncoded()&lt;/code&gt;.</source>
          <target state="translated">즉, &lt;code&gt;cipher.getParameters().getEncoded()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5ffbb9cc7363c310d2444b1a8fa556ad01792b87" translate="yes" xml:space="preserve">
          <source>That is, if &lt;code&gt;AWTEvent&lt;/code&gt; A is enqueued to the &lt;code&gt;EventQueue&lt;/code&gt; before &lt;code&gt;AWTEvent&lt;/code&gt; B then event B will not be dispatched before event A.</source>
          <target state="translated">즉, &lt;code&gt;AWTEvent&lt;/code&gt; A가 &lt;code&gt;AWTEvent&lt;/code&gt; B 전에 &lt;code&gt;EventQueue&lt;/code&gt; 에 추가되면 이벤트 B가 이벤트 A보다 먼저 전달되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1838fbc3bd4ca130f9a4e006ec1c3120622cb2b7" translate="yes" xml:space="preserve">
          <source>That is, it is not permitted that several events from this queue are dispatched simultaneously.</source>
          <target state="translated">즉,이 큐의 여러 이벤트가 동시에 전달되는 것은 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7fbef03361aa2d11a29ea57ba9573d91992f1ee2" translate="yes" xml:space="preserve">
          <source>That supports three categories of application that modify entity resolution. &lt;em&gt;Old Style&lt;/em&gt; applications won't know about this interface; they will provide an EntityResolver. &lt;em&gt;Transitional Mode&lt;/em&gt; provide an EntityResolver2 and automatically get the benefit of its methods in any systems (parsers or other tools) supporting it, due to polymorphism. Both &lt;em&gt;Old Style&lt;/em&gt; and &lt;em&gt;Transitional Mode&lt;/em&gt; applications will work with any SAX2 parser. &lt;em&gt;New style&lt;/em&gt; applications will fail to run except on SAX2 parsers that support this particular feature. They will insist that feature flag have a value of &quot;true&quot;, and the EntityResolver2 implementation they provide might throw an exception if the original SAX 1.0 style entity resolution method is invoked.</source>
          <target state="translated">이는 엔터티 확인을 수정하는 세 가지 범주의 응용 프로그램을 지원합니다. &lt;em&gt;이전 스타일&lt;/em&gt; 응용 프로그램은이 인터페이스에 대해 알지 못합니다. EntityResolver를 제공합니다. &lt;em&gt;전환 모드&lt;/em&gt; 는 EntityResolver2를 제공하고 다형성으로 인해이를 지원하는 모든 시스템 (파서 또는 기타 도구)에서 해당 메서드의 이점을 자동으로 얻습니다. 모두 &lt;em&gt;올드 스타일&lt;/em&gt; 과 &lt;em&gt;과도 모드&lt;/em&gt; 응용 프로그램은 SAX2 파서와 함께 동작합니다. &lt;em&gt;새로운 스타일&lt;/em&gt;이 특정 기능을 지원하는 SAX2 파서를 제외하고는 응용 프로그램이 실행되지 않습니다. 그들은 기능 플래그의 값이 &quot;true&quot;라고 주장하고, 그들이 제공하는 EntityResolver2 구현은 원래 SAX 1.0 스타일 엔티티 확인 메서드가 호출되는 경우 예외를 throw 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="006efee9935d1d56869e21b1bac583a106240016" translate="yes" xml:space="preserve">
          <source>That this method returns &lt;code&gt;false&lt;/code&gt; does not imply that no bytes have yet been decoded. Some auto-detecting decoders are capable of decoding some, or even all, of an input byte sequence without fixing on a particular charset.</source>
          <target state="translated">이 메소드가 &lt;code&gt;false&lt;/code&gt; 를 리턴 한다고해서 아직 디코딩 된 바이트가 없음을 의미하지는 않습니다. 일부 자동 감지 디코더는 특정 문자 세트를 고정하지 않고 입력 바이트 시퀀스의 일부 또는 전체를 디코딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="d28a162efe56d735c7f674ab51f90529f140fe99" translate="yes" xml:space="preserve">
          <source>The &quot;&amp;lt;hostname&amp;gt;&quot; is an ASCII representation of the hostname, which may contains A-labels. For example, a returned value of an pseudo hostname may look like:</source>
          <target state="translated">&quot;&amp;lt;hostname&amp;gt;&quot;은 A 레이블을 포함 할 수있는 호스트 이름의 ASCII 표현입니다. 예를 들어, 의사 호스트 이름의 리턴 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fbe380e337c8737cb91d45f2fdda4edb182c7b59" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;code&gt;.jar&lt;/code&gt;&quot; suffix is removed.</source>
          <target state="translated">&quot; &lt;code&gt;.jar&lt;/code&gt; &quot;접미사가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="3cb83e70711efc11b9d5c355db1e4fee21b3d4ec" translate="yes" xml:space="preserve">
          <source>The &quot;Concurrent&quot; prefix used with some classes in this package is a shorthand indicating several differences from similar &quot;synchronized&quot; classes. For example &lt;code&gt;java.util.Hashtable&lt;/code&gt; and &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; are synchronized. But &lt;a href=&quot;concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; is &quot;concurrent&quot;. A concurrent collection is thread-safe, but not governed by a single exclusion lock. In the particular case of ConcurrentHashMap, it safely permits any number of concurrent reads as well as a large number of concurrent writes. &quot;Synchronized&quot; classes can be useful when you need to prevent all access to a collection via a single lock, at the expense of poorer scalability. In other cases in which multiple threads are expected to access a common collection, &quot;concurrent&quot; versions are normally preferable. And unsynchronized collections are preferable when either collections are unshared, or are accessible only when holding other locks.</source>
          <target state="translated">이 패키지의 일부 클래스와 함께 사용되는 &quot;Concurrent&quot;접두사는 유사한 &quot;동기화 된&quot;클래스와의 몇 가지 차이점을 나타내는 약어입니다. 예를 들어 &lt;code&gt;java.util.Hashtable&lt;/code&gt; 및 &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; 이 동기화됩니다. 하지만 &lt;a href=&quot;concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt;&quot;동시&quot;입니다. 동시 컬렉션은 스레드로부터 안전하지만 단일 제외 잠금이 적용되지 않습니다. ConcurrentHashMap의 특정 경우에는 많은 수의 동시 쓰기뿐만 아니라 모든 동시 읽기를 안전하게 허용합니다. &quot;동기화 된&quot;클래스는 확장 성이 떨어지는 대신 단일 잠금을 통해 컬렉션에 대한 모든 액세스를 차단해야 할 때 유용 할 수 있습니다. 여러 스레드가 공통 컬렉션에 액세스 할 것으로 예상되는 다른 경우에는 일반적으로 &quot;동시&quot;버전이 선호됩니다. 그리고 동기화되지 않은 컬렉션은 두 컬렉션 중 하나가 공유되지 않거나 다른 잠금을 보유 할 때만 액세스 할 수있는 경우 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="761b12883375956b1fd5c3659aa381596b01fdaa" translate="yes" xml:space="preserve">
          <source>The &quot;Concurrent&quot; prefix used with some classes in this package is a shorthand indicating several differences from similar &quot;synchronized&quot; classes. For example &lt;code&gt;java.util.Hashtable&lt;/code&gt; and &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; are synchronized. But &lt;a href=&quot;concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; is &quot;concurrent&quot;. A concurrent collection is thread-safe, but not governed by a single exclusion lock. In the particular case of ConcurrentHashMap, it safely permits any number of concurrent reads as well as a tunable number of concurrent writes. &quot;Synchronized&quot; classes can be useful when you need to prevent all access to a collection via a single lock, at the expense of poorer scalability. In other cases in which multiple threads are expected to access a common collection, &quot;concurrent&quot; versions are normally preferable. And unsynchronized collections are preferable when either collections are unshared, or are accessible only when holding other locks.</source>
          <target state="translated">이 패키지의 일부 클래스와 함께 사용되는 &quot;Concurrent&quot;접두사는 유사한 &quot;동기화 된&quot;클래스와 몇 가지 차이점을 나타내는 약칭입니다. 예를 들어 &lt;code&gt;java.util.Hashtable&lt;/code&gt; 과 &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; 은 동기화됩니다. 그러나 &lt;a href=&quot;concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt;&quot;동시&quot;입니다. 동시 콜렉션은 스레드로부터 안전하지만 단일 제외 잠금으로 관리되지 않습니다. ConcurrentHashMap의 특정 경우에는 여러 개의 동시 읽기와 조정 가능한 수의 동시 쓰기를 안전하게 허용합니다. &quot;동기화 된&quot;클래스는 확장 성이 떨어지는 대신 단일 잠금을 통해 컬렉션에 대한 모든 액세스를 방지해야 할 때 유용 할 수 있습니다. 다중 스레드가 공통 콜렉션에 액세스 할 것으로 예상되는 다른 경우에는 일반적으로 &quot;동시&quot;버전이 선호됩니다. 동기화되지 않은 컬렉션은 컬렉션 중 하나를 공유하지 않거나 다른 잠금을 보유한 경우에만 액세스 할 수있는 경우에 바람직합니다.</target>
        </trans-unit>
        <trans-unit id="2be3c7247d4c95e0eee9f8ccfea4760fa5e29c40" translate="yes" xml:space="preserve">
          <source>The &quot;TableExample&quot; directory in the demo area of the source distribution gives a number of complete examples of &lt;code&gt;JTable&lt;/code&gt; usage, covering how the &lt;code&gt;JTable&lt;/code&gt; can be used to provide an editable view of data taken from a database and how to modify the columns in the display to use specialized renderers and editors.</source>
          <target state="translated">소스 배포판의 demo 영역의 「TableExample &quot;디렉토리의 완전한 예제 수 있습니다 &lt;code&gt;JTable&lt;/code&gt; 가 어떻게 '커버 사용을 &lt;code&gt;JTable&lt;/code&gt; 가이 데이터베이스에서 가져온 데이터의 편집 가능한 뷰를 제공하는 데 사용할 수있는 디스플레이의 열을 수정하는 방법 특수 렌더러 및 편집기를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f5d233d2c83083380d6b780fce20712170e44145" translate="yes" xml:space="preserve">
          <source>The &quot;block&quot; increment for scrolling in the specified direction. This value should always be positive.</source>
          <target state="translated">지정된 방향으로 스크롤하기위한 &quot;블록&quot;증분입니다. 이 값은 항상 양수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="5c92ed0ed7f44357d29a0d93b7d5e34400a5966a" translate="yes" xml:space="preserve">
          <source>The &quot;class&quot; attribute is used to specify the target of a static method or constructor explicitly; its value being the fully qualified name of the class.</source>
          <target state="translated">&quot;class&quot;속성은 정적 메소드 또는 생성자의 대상을 명시 적으로 지정하는 데 사용됩니다. 그 값은 클래스의 정규화 된 이름입니다.</target>
        </trans-unit>
        <trans-unit id="410744ec5d7aaa6733716ca632b49febdb1c1415" translate="yes" xml:space="preserve">
          <source>The &quot;contentPane&quot; is the primary container for application specific components.</source>
          <target state="translated">&quot;contentPane&quot;은 응용 프로그램 특정 구성 요소의 기본 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="b5f47fbc154769f72f7809d97f7c4fc03a4116e0" translate="yes" xml:space="preserve">
          <source>The &quot;contentPane&quot; is the primary container for application specific components. Applications should add children to the contentPane, set its layout manager, and so on.</source>
          <target state="translated">&quot;contentPane&quot;은 응용 프로그램 특정 구성 요소의 기본 컨테이너입니다. 응용 프로그램은 contentPane에 자식을 추가하고 레이아웃 관리자 등을 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="99b714dc607d2a32a9e5ae18a28845a9ad7f9870" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; algorithms contained in this class, that is, the algorithms that modify the collection on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the collection does not support the appropriate mutation primitive(s), such as the &lt;code&gt;set&lt;/code&gt; method. These algorithms may, but are not required to, throw this exception if an invocation would have no effect on the collection. For example, invoking the &lt;code&gt;sort&lt;/code&gt; method on an unmodifiable list that is already sorted may or may not throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">이 클래스에 포함 된 &quot;파괴적인&quot;알고리즘, 즉 이들이 작동하는 컬렉션을 수정하는 알고리즘 은 컬렉션이 &lt;code&gt;set&lt;/code&gt; 메소드 와 같은 적절한 돌연변이 프리미티브를 지원하지 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 경우 UnsupportedOperationException을 발생 시키 도록 지정됩니다 . 이러한 알고리즘은 호출이 컬렉션에 영향을 미치지 않는 경우이 예외를 throw 할 수 있지만 반드시 그럴 필요는 없습니다. 예를 들어, 이미 정렬 된 수정 불가능한 목록 에서 &lt;code&gt;sort&lt;/code&gt; 메소드를 호출하면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 이 발생하거나 발생하지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d3799b0d99e9f9ae8ba59928fbe544b7e50ada4f" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; methods contained in this interface, that is, the methods that modify the collection on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this collection does not support the operation. If this is the case, these methods may, but are not required to, throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the invocation would have no effect on the collection. For example, invoking the &lt;a href=&quot;collection#addAll-java.util.Collection-&quot;&gt;&lt;code&gt;addAll(Collection)&lt;/code&gt;&lt;/a&gt; method on an unmodifiable collection may, but is not required to, throw the exception if the collection to be added is empty.</source>
          <target state="translated">이 인터페이스에 포함 된 &quot;파괴적인&quot;메서드, 즉 해당 메서드가 작동하는 컬렉션을 수정하는 메서드는 이 컬렉션이 작업을 지원하지 않으면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시키도록 지정됩니다 . 이 경우, 이러한 메소드는 호출이 콜렉션에 영향을 미치지 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 경우 UnsupportedOperationException을 발생 시킬 수 있지만 필수는 아닙니다 . 예를 들어, 수정 불가능한 컬렉션 에서 &lt;a href=&quot;collection#addAll-java.util.Collection-&quot;&gt; &lt;code&gt;addAll(Collection)&lt;/code&gt; &lt;/a&gt; 메서드를 호출하면 추가 할 컬렉션이 비어있는 경우 예외가 발생할 수 있지만 반드시 그런 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="f888ae94165a497ee34db90a9611055f9403494e" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; methods contained in this interface, that is, the methods that modify the map on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this map does not support the operation. If this is the case, these methods may, but are not required to, throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the invocation would have no effect on the map. For example, invoking the &lt;a href=&quot;#putAll(java.util.Map)&quot;&gt;&lt;code&gt;putAll(Map)&lt;/code&gt;&lt;/a&gt; method on an unmodifiable map may, but is not required to, throw the exception if the map whose mappings are to be &quot;superimposed&quot; is empty.</source>
          <target state="translated">이 인터페이스에 포함 된 &quot;파괴적&quot;메소드, 즉 작동하는 맵을 수정하는 메소드는 이 맵이 작업을 지원하지 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 경우 UnsupportedOperationException을 발생 하도록 지정됩니다 . 이 경우 호출이지도에 영향을 미치지 않으면 이러한 메서드가 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 throw 할 수 있지만 반드시 필요한 것은 아닙니다 . 예를 들어 수정 불가능한지도 에서 &lt;a href=&quot;#putAll(java.util.Map)&quot;&gt; &lt;code&gt;putAll(Map)&lt;/code&gt; &lt;/a&gt; 메서드를 호출하면 매핑이 &quot;중첩&quot;될지도가 비어있는 경우 예외가 발생할 수 있지만 반드시 필요한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="523d08144b8e0cc24e5d2b715228e9abf2df6508" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; methods contained in this interface, that is, the methods that modify the map on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this map does not support the operation. If this is the case, these methods may, but are not required to, throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the invocation would have no effect on the map. For example, invoking the &lt;a href=&quot;map#putAll-java.util.Map-&quot;&gt;&lt;code&gt;putAll(Map)&lt;/code&gt;&lt;/a&gt; method on an unmodifiable map may, but is not required to, throw the exception if the map whose mappings are to be &quot;superimposed&quot; is empty.</source>
          <target state="translated">이 인터페이스에 포함 된 &quot;파괴적인&quot;메소드, 즉 해당 맵이 조작하는 맵을 수정하는 메소드는 이 맵이 조작을 지원하지 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 경우 UnsupportedOperationException을 발생 시키도록 지정됩니다 . 이 경우, 이러한 메소드는 호출이 맵에 영향을 미치지 않으면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킬 수 있지만 반드시 필요한 것은 아닙니다 . 예를 들어, 수정 불가능한 맵 에서 &lt;a href=&quot;map#putAll-java.util.Map-&quot;&gt; &lt;code&gt;putAll(Map)&lt;/code&gt; &lt;/a&gt; 메소드를 호출하면 맵핑이 &quot;중첩 된&quot;맵이 비어있는 경우 예외를 처리 할 수 ​​있지만 반드시 그럴 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="eae4891e98416f7d88cd670a3c2c7ffcf50a66c3" translate="yes" xml:space="preserve">
          <source>The &quot;expert&quot; flag is used to distinguish between features that are intended for expert users from those that are intended for normal users.</source>
          <target state="translated">&quot;전문가&quot;플래그는 전문가 용 기능과 일반 사용자 용 기능을 구별하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="53de2781ee0e7ac40066ecc66400a0280e82b151" translate="yes" xml:space="preserve">
          <source>The &quot;expert&quot; flag is used to distinguish between those features that are intended for expert users from those that are intended for normal users.</source>
          <target state="translated">&quot;전문가&quot;플래그는 전문 사용자를위한 기능과 일반 사용자를위한 기능을 구별하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="96db2ea0542daeff5fb771b914acf904d52fda1e" translate="yes" xml:space="preserve">
          <source>The &quot;global&quot; Logger object is provided as a convenience to developers who are making casual use of the Logging package. Developers who are making serious use of the logging package (for example in products) should create and use their own Logger objects, with appropriate names, so that logging can be controlled on a suitable per-Logger granularity. Developers also need to keep a strong reference to their Logger objects to prevent them from being garbage collected.</source>
          <target state="translated">&quot;글로벌&quot;로거 오브젝트는 로깅 패키지를 자주 사용하는 개발자에게 편의를 위해 제공됩니다. 로깅 패키지 (예 : 제품)를 심각하게 사용하는 개발자는 적절한 로거 단위로 로깅을 제어 할 수 있도록 적절한 이름을 가진 고유 한 로거 개체를 만들어 사용해야합니다. 또한 개발자는 가비지 수집을 방지하기 위해 Logger 객체에 대한 강력한 참조를 유지해야합니다.</target>
        </trans-unit>
        <trans-unit id="6d7cb2b2bdfe06e56767bcb0bc7bde1627ef37ec" translate="yes" xml:space="preserve">
          <source>The &quot;heavyweight&quot; components (those that delegate to a peer, or native component on the host system) are shown with a darker, heavier box. The four heavyweight JFC/Swing containers (&lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;JDialog&lt;/code&gt;, &lt;code&gt;JWindow&lt;/code&gt;, and &lt;code&gt;JApplet&lt;/code&gt;) are shown in relation to the AWT classes they extend. These four components are the only heavyweight containers in the Swing library. The lightweight container &lt;code&gt;JInternalFrame&lt;/code&gt; is also shown. All five of these JFC/Swing containers implement the &lt;code&gt;RootPaneContainer&lt;/code&gt; interface, and they all delegate their operations to a &lt;code&gt;JRootPane&lt;/code&gt; (shown with a little &quot;handle&quot; on top).</source>
          <target state="translated">&quot;heavyweight&quot;구성 요소 (피어에게 위임하는 구성 요소 또는 호스트 시스템의 기본 구성 요소)는 더 어둡고 무거운 상자로 표시됩니다. 4 개의 무거운 JFC / Swing 컨테이너 ( &lt;code&gt;JFrame&lt;/code&gt; , &lt;code&gt;JDialog&lt;/code&gt; , &lt;code&gt;JWindow&lt;/code&gt; 및 &lt;code&gt;JApplet&lt;/code&gt; )는 확장 된 AWT 클래스와 관련하여 표시됩니다. 이 네 가지 구성 요소는 Swing 라이브러리에서 유일한 중량 컨테이너입니다. 경량 컨테이너 &lt;code&gt;JInternalFrame&lt;/code&gt; 도 표시됩니다. 이 5 개의 JFC / Swing 컨테이너는 모두 &lt;code&gt;RootPaneContainer&lt;/code&gt; 인터페이스를 구현하고 , 모두 &lt;code&gt;JRootPane&lt;/code&gt; 에 작업을 위임합니다 (위에 약간의 &quot;핸들&quot;이 표시됨).</target>
        </trans-unit>
        <trans-unit id="3c8addeccbf7f5e85580dfc2361b06f37794364c" translate="yes" xml:space="preserve">
          <source>The &quot;hidden&quot; flag is used to identify features that are intended only for tool use, and which should not be exposed to humans.</source>
          <target state="translated">&quot;숨겨진&quot;플래그는 도구 용도로만 사용되며 사람에게 노출되어서는 안되는 기능을 식별하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a488d2b6590253541ee7f92e1ac3dd1986e06a1b" translate="yes" xml:space="preserve">
          <source>The &quot;host_name&quot; type representing of a DNS hostname (see &lt;a href=&quot;snihostname&quot;&gt;&lt;code&gt;SNIHostName&lt;/code&gt;&lt;/a&gt;) in a Server Name Indication (SNI) extension.</source>
          <target state="translated">SNI (Server Name Indication) 확장에서 DNS 호스트 이름 ( &lt;a href=&quot;snihostname&quot;&gt; &lt;code&gt;SNIHostName&lt;/code&gt; &lt;/a&gt; 참조 )을 나타내는 &quot;host_name&quot;유형 입니다.</target>
        </trans-unit>
        <trans-unit id="10a044e56e8d6b8a40829767ab33a3bc7ae091b1" translate="yes" xml:space="preserve">
          <source>The &quot;key pressed&quot; event.</source>
          <target state="translated">&quot;키 누름&quot;이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="cb1a2a9817108a8f3fb0c74a1517f31d89883b1c" translate="yes" xml:space="preserve">
          <source>The &quot;key pressed&quot; event. This event is generated when a key is pushed down.</source>
          <target state="translated">&quot;키 누름&quot;이벤트입니다. 이 이벤트는 키를 눌렀을 때 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="15a0b36368e7533da45b107a8fdb9d0dbb87991b" translate="yes" xml:space="preserve">
          <source>The &quot;key released&quot; event.</source>
          <target state="translated">&quot;키 해제&quot;이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="89065abb7212cafb2aa0e60705c8e8fb49031c07" translate="yes" xml:space="preserve">
          <source>The &quot;key released&quot; event. This event is generated when a key is let up.</source>
          <target state="translated">&quot;키 해제&quot;이벤트입니다. 이 이벤트는 키를 놓을 때 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="c4db56f511a0b0caa531937b259ac838d670ef62" translate="yes" xml:space="preserve">
          <source>The &quot;key typed&quot; event.</source>
          <target state="translated">&quot;키 입력&quot;이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="1731c860a12ee2be3d3d567b4975c99da1c6b048" translate="yes" xml:space="preserve">
          <source>The &quot;key typed&quot; event. This event is generated when a character is entered. In the simplest case, it is produced by a single key press. Often, however, characters are produced by series of key presses, and the mapping from key pressed events to key typed events may be many-to-one or many-to-many.</source>
          <target state="translated">&quot;키 입력&quot;이벤트입니다. 이 이벤트는 문자 입력시 생성됩니다. 가장 간단한 경우에는 한 번의 키 누름으로 생성됩니다. 그러나 종종 문자는 일련의 키 누름으로 생성되며 키 누름 이벤트에서 키 입력 이벤트로의 매핑은 다 대일 또는 다 대다 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5ee252810cba0d533bf7f76c20a67b32a87cd3a" translate="yes" xml:space="preserve">
          <source>The &quot;listen&quot; action is only meaningful when used with &quot;localhost&quot; and means the ability to bind to a specified port. The &quot;resolve&quot; action is implied when any of the other actions are present. The action &quot;resolve&quot; refers to host/ip name service lookups.</source>
          <target state="translated">&quot;listen&quot;조치는 &quot;localhost&quot;와 함께 사용될 때만 의미가 있으며 지정된 포트에 바인드하는 기능을 의미합니다. 다른 조치가 있으면 &quot;해결&quot;조치가 내포됩니다. &quot;해결&quot;조치는 호스트 / ip 이름 서비스 조회를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d3c0ba0eee2ac7b66f3aef3fc73c2b223a4c0ec9" translate="yes" xml:space="preserve">
          <source>The &quot;mouse clicked&quot; event.</source>
          <target state="translated">&quot;마우스 클릭&quot;이벤트.</target>
        </trans-unit>
        <trans-unit id="fd95273f9e0f97ba6154493334dfbc88304d3745" translate="yes" xml:space="preserve">
          <source>The &quot;mouse clicked&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when a mouse button is pressed and released.</source>
          <target state="translated">&quot;마우스 클릭&quot;이벤트. 이 &lt;code&gt;MouseEvent&lt;/code&gt; 는 마우스 버튼을 눌렀다 놓을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="eb930dfd17a60925068d70705e9352f325ee57fe" translate="yes" xml:space="preserve">
          <source>The &quot;mouse dragged&quot; event.</source>
          <target state="translated">&quot;마우스 끌기&quot;이벤트.</target>
        </trans-unit>
        <trans-unit id="b075435502c8f7106ae0666596bf2e26f2c15d14" translate="yes" xml:space="preserve">
          <source>The &quot;mouse dragged&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse position changes while a mouse button is pressed.</source>
          <target state="translated">&quot;마우스 끌기&quot;이벤트. 이 &lt;code&gt;MouseEvent&lt;/code&gt; 는 마우스 버튼을 누르고있는 동안 마우스 위치가 변경 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="78c6cf4d6d751d3b148d29d91a9b44b79d81b329" translate="yes" xml:space="preserve">
          <source>The &quot;mouse entered&quot; event.</source>
          <target state="translated">&quot;마우스 입력&quot;이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="92484043e5f424f60214946af78c19a23cb0e672" translate="yes" xml:space="preserve">
          <source>The &quot;mouse entered&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse cursor enters the unobscured part of component's geometry.</source>
          <target state="translated">&quot;마우스 입력&quot;이벤트입니다. 이 &lt;code&gt;MouseEvent&lt;/code&gt; 는 마우스 커서가 컴포넌트 지오메트리의 가려지지 않은 부분에 들어갈 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7cf7efa1787704ba9875d107afd4470014ed223c" translate="yes" xml:space="preserve">
          <source>The &quot;mouse exited&quot; event.</source>
          <target state="translated">&quot;마우스 종료&quot;이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="7633a989f55a9a134d2f8ff1b7940365bbd2c29a" translate="yes" xml:space="preserve">
          <source>The &quot;mouse exited&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse cursor exits the unobscured part of component's geometry.</source>
          <target state="translated">&quot;마우스 종료&quot;이벤트입니다. 이 &lt;code&gt;MouseEvent&lt;/code&gt; 는 마우스 커서가 컴포넌트 지오메트리의 가려지지 않은 부분을 벗어날 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="19a32ec102054b05202c9958fa7c4841ba476534" translate="yes" xml:space="preserve">
          <source>The &quot;mouse moved&quot; event.</source>
          <target state="translated">&quot;마우스 이동&quot;이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="7c7e14a335bae48f1e5f91e66b80f93c264e4e45" translate="yes" xml:space="preserve">
          <source>The &quot;mouse moved&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse position changes.</source>
          <target state="translated">&quot;마우스 이동&quot;이벤트입니다. 이 &lt;code&gt;MouseEvent&lt;/code&gt; 는 마우스 위치가 변경 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b3bbcddb1dc3d6cbd24ab4a55e75d7a461d4f45a" translate="yes" xml:space="preserve">
          <source>The &quot;mouse pressed&quot; event.</source>
          <target state="translated">&quot;마우스 누름&quot;이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="ae781e8182fd3b20274560fd07afa5afdaa84dc5" translate="yes" xml:space="preserve">
          <source>The &quot;mouse pressed&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when a mouse button is pushed down.</source>
          <target state="translated">&quot;마우스 누름&quot;이벤트입니다. 이 &lt;code&gt;MouseEvent&lt;/code&gt; 는 마우스 버튼을 눌렀을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b0ffd7c3529bd8be1ff6ce38f355d520951884df" translate="yes" xml:space="preserve">
          <source>The &quot;mouse released&quot; event.</source>
          <target state="translated">&quot;마우스 출시&quot;이벤트.</target>
        </trans-unit>
        <trans-unit id="5339e6250ff74b2626aff20bcdc159359391a858" translate="yes" xml:space="preserve">
          <source>The &quot;mouse released&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when a mouse button is let up.</source>
          <target state="translated">&quot;마우스 출시&quot;이벤트. 이 &lt;code&gt;MouseEvent&lt;/code&gt; 는 마우스 버튼을 놓을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5f299653ce8809acb5d9b394aeb347b35b63a060" translate="yes" xml:space="preserve">
          <source>The &quot;mouse wheel&quot; event.</source>
          <target state="translated">&quot;마우스 휠&quot;이벤트.</target>
        </trans-unit>
        <trans-unit id="e2517857e2bd19f0daa1ea9a18fc38bf3b4b844e" translate="yes" xml:space="preserve">
          <source>The &quot;mouse wheel&quot; event. This is the only &lt;code&gt;MouseWheelEvent&lt;/code&gt;. It occurs when a mouse equipped with a wheel has its wheel rotated.</source>
          <target state="translated">&quot;마우스 휠&quot;이벤트. 이것은 유일한 &lt;code&gt;MouseWheelEvent&lt;/code&gt; 입니다. 휠이 장착 된 마우스의 휠이 회전 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="34537c0a9b18a5b97ca9dba2fc6ccb6e06339c2a" translate="yes" xml:space="preserve">
          <source>The &quot;no offset&quot; text controls what text is printed when the total amount of the offset fields to be output is zero. Example values would be 'Z', '+00:00', 'UTC' or 'GMT'. Three formats are accepted for parsing UTC - the &quot;no offset&quot; text, and the plus and minus versions of zero defined by the pattern.</source>
          <target state="translated">&quot;오프셋 없음&quot;텍스트는 출력 할 오프셋 필드의 총량이 0 일 때 인쇄 할 텍스트를 제어합니다. 예제 값은 'Z', '+00 : 00', 'UTC'또는 'GMT'입니다. UTC 구문 분석에는 &quot;오프셋 없음&quot;텍스트와 패턴에 의해 정의 된 플러스 및 마이너스 버전의 세 가지 형식이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="0039eb18c439a8fe0ded6f996e270014f44833ff" translate="yes" xml:space="preserve">
          <source>The &quot;object&quot; tag denotes an &lt;em&gt;expression&lt;/em&gt; whose value is to be used as the argument to the enclosing element.</source>
          <target state="translated">&quot;object&quot;태그 는 값이 둘러싸는 요소의 인수로 사용될 &lt;em&gt;표현식을&lt;/em&gt; 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="8b7ed3f19fc82e3673167bf96934264dcec09b2d" translate="yes" xml:space="preserve">
          <source>The &quot;preferred&quot; flag is used to identify features that are particularly important for presenting to humans.</source>
          <target state="translated">&quot;선호&quot;플래그는 사람에게 제시하는 데 특히 중요한 기능을 식별하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4b8e7b319e024eaf410d2b4884b5404343990997" translate="yes" xml:space="preserve">
          <source>The &quot;propagationId&quot; field is reserved for future use.</source>
          <target state="translated">&quot;propagationId&quot;필드는 향후 사용을 위해 예약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e52ae4af20949258e854e3591de7eb4159275419" translate="yes" xml:space="preserve">
          <source>The &quot;propagationId&quot; field is reserved for future use. In Beans 1.0 the sole requirement is that if a listener catches a PropertyChangeEvent and then fires a PropertyChangeEvent of its own, then it should make sure that it propagates the propagationId field from its incoming event to its outgoing event.</source>
          <target state="translated">&quot;propagationId&quot;필드는 나중에 사용하기 위해 예약되어 있습니다. Beans 1.0에서 유일한 요구 사항은 리스너가 PropertyChangeEvent를 포착 한 후 고유 한 PropertyChangeEvent를 발생시키는 경우 수신 이벤트에서 발신 이벤트로 propagationId 필드를 전파해야한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="28e0bfde4b5880a6ead92dd03fce5b3e532829ac" translate="yes" xml:space="preserve">
          <source>The &quot;selectionBackground&quot; is the color of the text when it is painted over an unfilled area of the progress bar.</source>
          <target state="translated">&quot;selectionBackground&quot;는 진행률 표시 줄의 채워지지 않은 영역 위에 칠해진 텍스트의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="217311dded8133e98a9dbffc4c619b4a9be712b0" translate="yes" xml:space="preserve">
          <source>The &quot;selectionForeground&quot; is the color of the text when it is painted over a filled area of the progress bar.</source>
          <target state="translated">&quot;selectionForeground&quot;는 진행률 표시 줄의 채워진 영역 위에 칠할 때 텍스트의 색상입니다.</target>
        </trans-unit>
        <trans-unit id="42bdeb61efcd06a145da747487352948dbf3d104" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; error output stream.</source>
          <target state="translated">&quot;표준&quot;오류 출력 스트림입니다.</target>
        </trans-unit>
        <trans-unit id="448f901e9880ca6676ec228309500276a588387c" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; error output stream. This stream is already open and ready to accept output data.</source>
          <target state="translated">&quot;표준&quot;오류 출력 스트림. 이 스트림은 이미 열려 있고 출력 데이터를 승인 할 준비가되었습니다.</target>
        </trans-unit>
        <trans-unit id="c09e43335de1888d318df0870ac4ad9eac45e377" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; input stream.</source>
          <target state="translated">&quot;표준&quot;입력 스트림.</target>
        </trans-unit>
        <trans-unit id="9b0fa7082ba453aa32dcb16ac03daf1ba9c65c4f" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; input stream. This stream is already open and ready to supply input data. Typically this stream corresponds to keyboard input or another input source specified by the host environment or user.</source>
          <target state="translated">&quot;표준&quot;입력 스트림 이 스트림은 이미 열려 있고 입력 데이터를 제공 할 준비가되었습니다. 일반적으로이 스트림은 키보드 입력 또는 호스트 환경이나 사용자가 지정한 다른 입력 소스에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="75482cec17e77687e4c5e4dd58db85c8319d6643" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; output stream.</source>
          <target state="translated">&quot;표준&quot;출력 스트림.</target>
        </trans-unit>
        <trans-unit id="8d594a48963bd0f322bbb684e19620412a6932c8" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; output stream. This stream is already open and ready to accept output data. Typically this stream corresponds to display output or another output destination specified by the host environment or user.</source>
          <target state="translated">&quot;표준&quot;출력 스트림. 이 스트림은 이미 열려 있고 출력 데이터를 승인 할 준비가되었습니다. 일반적으로이 스트림은 디스플레이 출력 또는 호스트 환경이나 사용자가 지정한 다른 출력 대상에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="e49f1b992ecac3c4246b928abba36653e8cfabb0" translate="yes" xml:space="preserve">
          <source>The &quot;unit&quot; increment for scrolling in the specified direction</source>
          <target state="translated">지정된 방향으로 스크롤하기위한 &quot;단위&quot;증분</target>
        </trans-unit>
        <trans-unit id="c7b2a0b2a156cc227469775e832652ef0030c0b5" translate="yes" xml:space="preserve">
          <source>The &quot;unit&quot; increment for scrolling in the specified direction. This value should always be positive.</source>
          <target state="translated">지정된 방향으로 스크롤하기위한 &quot;단위&quot;증분. 이 값은 항상 양수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="2dd42dc8f0100ef88f1c09f4b716e6faae9b9104" translate="yes" xml:space="preserve">
          <source>The &quot;viewport&quot; or &quot;porthole&quot; through which you see the underlying information.</source>
          <target state="translated">기본 정보를 볼 수있는 &quot;뷰포트&quot;또는 &quot;창&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="7abc451b2b8a02dae8147b6816d130c87349c8a6" translate="yes" xml:space="preserve">
          <source>The &quot;viewport&quot; or &quot;porthole&quot; through which you see the underlying information. When you scroll, what moves is the viewport. It is like peering through a camera's viewfinder. Moving the viewfinder upwards brings new things into view at the top of the picture and loses things that were at the bottom.</source>
          <target state="translated">기본 정보를 볼 수있는 &quot;뷰포트&quot;또는 &quot;창&quot;입니다. 스크롤 할 때 움직이는 것은 뷰포트입니다. 카메라의 뷰 파인더를 들여다 보는 것과 같습니다. 뷰 파인더를 위로 이동하면 사진 상단에 새로운 항목이 표시되고 하단에 있던 항목이 사라집니다.</target>
        </trans-unit>
        <trans-unit id="87b168e22e7b27d60154fb06e4407a5bdb2ba403" translate="yes" xml:space="preserve">
          <source>The &quot;virtual key&quot; constants defined in &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; can be used to specify the key code. For example:</source>
          <target state="translated">&lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; 에 정의 된 &quot;가상 키&quot;상수 를 사용하여 키 코드를 지정할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="42fa43eba557cdf1cf26626adea323a5cf291383" translate="yes" xml:space="preserve">
          <source>The &quot;virtual key&quot; constants defined in java.awt.event.KeyEvent can be used to specify the key code. For example:</source>
          <target state="translated">java.awt.event.KeyEvent에 정의 된 &quot;가상 키&quot;상수를 사용하여 키 코드를 지정할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="542ceac497d888731f108f54134d87b43e6e1e87" translate="yes" xml:space="preserve">
          <source>The &quot;void&quot; tag denotes a &lt;em&gt;statement&lt;/em&gt; which will be executed, but whose result will not be used as an argument to the enclosing method.</source>
          <target state="translated">&quot;void&quot;태그 는 실행될 &lt;em&gt;명령문&lt;/em&gt; 을 나타내지 만 결과는 엔 클로징 메소드의 인수로 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5413cb19ad08d0c83ec83a25d94198413a07db11" translate="yes" xml:space="preserve">
          <source>The &quot;widgets&quot; examples shown earlier shows how reduction combines with other operations to replace for loops with bulk operations. If &lt;code&gt;widgets&lt;/code&gt; is a collection of &lt;code&gt;Widget&lt;/code&gt; objects, which have a &lt;code&gt;getWeight&lt;/code&gt; method, we can find the heaviest widget with:</source>
          <target state="translated">앞에서 설명한 &quot;위젯&quot;예제는 축소를 다른 작업과 결합하여 루프를 벌크 작업으로 대체하는 방법을 보여줍니다. &lt;code&gt;widgets&lt;/code&gt; 가 &lt;code&gt;getWeight&lt;/code&gt; 메소드 를 갖는 &lt;code&gt;Widget&lt;/code&gt; 오브젝트 의 콜렉션 인 경우 다음을 사용 하여 가장 무거운 위젯을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ef7ea7bc7a6cc52453a4c0762bb67aa32d26c11" translate="yes" xml:space="preserve">
          <source>The &quot;window activated&quot; event type.</source>
          <target state="translated">&quot;창 활성화 됨&quot;이벤트 유형입니다.</target>
        </trans-unit>
        <trans-unit id="226427283659032d179c570438fad9fad0c92457" translate="yes" xml:space="preserve">
          <source>The &quot;window activated&quot; event type. This event indicates that keystrokes and mouse clicks are directed towards this internal frame.</source>
          <target state="translated">&quot;창 활성화 됨&quot;이벤트 유형입니다. 이 이벤트는 키 입력과 마우스 클릭이이 내부 프레임으로 향함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cf5285f557eaed961f7b089388434d1897fd8d74" translate="yes" xml:space="preserve">
          <source>The &quot;window closed&quot; event.</source>
          <target state="translated">&quot;창 닫힘&quot;이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="0bd85abd28b81dd4e92f480fe6c4ffc04de9ae6a" translate="yes" xml:space="preserve">
          <source>The &quot;window closed&quot; event. This event is delivered after the internal frame has been closed as the result of a call to the &lt;code&gt;setClosed&lt;/code&gt; or &lt;code&gt;dispose&lt;/code&gt; method.</source>
          <target state="translated">&quot;창 닫힘&quot;이벤트입니다. 이 이벤트는 &lt;code&gt;setClosed&lt;/code&gt; 또는 &lt;code&gt;dispose&lt;/code&gt; 메소드 호출의 결과로 내부 프레임이 닫힌 후에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="b02d8a38a7c497198054b98777fad1cda5bdb9c6" translate="yes" xml:space="preserve">
          <source>The &quot;window deactivated&quot; event type.</source>
          <target state="translated">&quot;창 비활성화 됨&quot;이벤트 유형입니다.</target>
        </trans-unit>
        <trans-unit id="f2fafc768c0f5cb1c334413348114360e836dc93" translate="yes" xml:space="preserve">
          <source>The &quot;window deactivated&quot; event type. This event indicates that keystrokes and mouse clicks are no longer directed to the internal frame.</source>
          <target state="translated">&quot;창 비활성화 됨&quot;이벤트 유형입니다. 이 이벤트는 키 입력과 마우스 클릭이 더 이상 내부 프레임으로 전달되지 않음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="408bbda837c71da78c76f55730fb50a043774050" translate="yes" xml:space="preserve">
          <source>The &quot;window deiconified&quot; event type.</source>
          <target state="translated">&quot;아이콘이 해제 된 창&quot;이벤트 유형입니다.</target>
        </trans-unit>
        <trans-unit id="52d2752f94b96c2494b60b46964d812e8cf6ba71" translate="yes" xml:space="preserve">
          <source>The &quot;window deiconified&quot; event type. This event indicates that the internal frame has been restored to its normal size.</source>
          <target state="translated">&quot;아이콘이 해제 된 창&quot;이벤트 유형입니다. 이 이벤트는 내부 프레임이 정상 크기로 복원되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="fdc7911a6dbe466488c70a583cd5451f62271756" translate="yes" xml:space="preserve">
          <source>The &quot;window iconified&quot; event.</source>
          <target state="translated">&quot;창 아이콘 화&quot;이벤트.</target>
        </trans-unit>
        <trans-unit id="cd6ed970523e6e0baed21a463189d7232d4321f4" translate="yes" xml:space="preserve">
          <source>The &quot;window iconified&quot; event. This event indicates that the internal frame was shrunk down to a small icon.</source>
          <target state="translated">&quot;창 아이콘 화&quot;이벤트. 이 이벤트는 내부 프레임이 작은 아이콘으로 축소되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ada4fcc113683f29a8a6153c0c2bf59ae79df5ab" translate="yes" xml:space="preserve">
          <source>The &quot;window is closing&quot; event.</source>
          <target state="translated">&quot;창 닫힘&quot;이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="77cf40f7c82e26ae7cb58dc8fb5f7a97d962f1db" translate="yes" xml:space="preserve">
          <source>The &quot;window is closing&quot; event. This event is delivered when the user attempts to close the internal frame, such as by clicking the internal frame's close button, or when a program attempts to close the internal frame by invoking the &lt;code&gt;setClosed&lt;/code&gt; method.</source>
          <target state="translated">&quot;창 닫힘&quot;이벤트입니다. 이 이벤트는 사용자가 내부 프레임의 닫기 버튼을 클릭하는 등 내부 프레임을 닫으려고 할 때 또는 프로그램이 &lt;code&gt;setClosed&lt;/code&gt; 메서드 를 호출하여 내부 프레임을 닫으려고 할 때 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="2f70a4fb74eeed3e23a4b7140075a7623a0646be" translate="yes" xml:space="preserve">
          <source>The &quot;window is closing&quot; event. This event is delivered when the user attempts to close the window from the window's system menu. If the program does not explicitly hide or dispose the window while processing this event, the window close operation will be cancelled.</source>
          <target state="translated">&quot;창 닫힘&quot;이벤트입니다. 이 이벤트는 사용자가 창의 시스템 메뉴에서 창을 닫으려고 할 때 전달됩니다. 이 이벤트를 처리하는 동안 프로그램이 창을 명시 적으로 숨기거나 삭제하지 않으면 창 닫기 작업이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="35b9ff91928feda93eb2bbd321ab8c5974e6a7a3" translate="yes" xml:space="preserve">
          <source>The &quot;window opened&quot; event.</source>
          <target state="translated">&quot;창이 열림&quot;이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="812e0c735e5c1dec67159170fe8e4124fe33b906" translate="yes" xml:space="preserve">
          <source>The &quot;window opened&quot; event. This event is delivered only the first time the internal frame is made visible.</source>
          <target state="translated">&quot;창이 열림&quot;이벤트입니다. 이 이벤트는 내부 프레임이 처음 표시 될 때만 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="dd51a31f2fb3c35a53c40953e7b137610fa538ba" translate="yes" xml:space="preserve">
          <source>The '*' and '-' may only be specified in the final segment of a path and must be the only character in that segment. Any query or fragment components of the url are ignored when constructing URLPermissions.</source>
          <target state="translated">'*'및 '-'는 경로의 마지막 세그먼트에서만 지정할 수 있으며 해당 세그먼트에서 유일한 문자 여야합니다. URLPermission을 구성 할 때 URL의 쿼리 또는 조각 구성 요소는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c3dd2c4f47449a4544b3de80cb83d745f1361cb0" translate="yes" xml:space="preserve">
          <source>The '*' character refers to all resources in the same &quot;directory&quot; - in other words all resources with the same number of path components, and which only differ in the final path component, represented by the '*'.</source>
          <target state="translated">'*'문자는 동일한 &quot;디렉토리&quot;에있는 모든 리소스를 나타냅니다. 즉, 동일한 수의 경로 구성 요소를 가진 모든 리소스를 말하며 '*'로 표시되는 최종 경로 구성 요소 만 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5b1a4b786fce275a14542316145f1ffc6265c6f2" translate="yes" xml:space="preserve">
          <source>The '-' character refers to all resources recursively below the preceding path (eg. http://www.oracle.com/a/b/c/d/e.html matches this example).</source>
          <target state="translated">'-'문자는 이전 경로 아래에서 재귀 적으로 모든 리소스를 나타냅니다 (예 : http://www.oracle.com/a/b/c/d/e.html이이 예와 일치).</target>
        </trans-unit>
        <trans-unit id="a61c324d5664eb3125e624c3e41910d6b8260976" translate="yes" xml:space="preserve">
          <source>The '-' is a literal (non-editable) character, and is skipped.</source>
          <target state="translated">'-'는 리터럴 (편집 불가능) 문자이며 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="b9075ee33f640272d08ecfd74afcc317aa1feeee" translate="yes" xml:space="preserve">
          <source>The '_' character represents any single character; the '%' character represents any sequence of zero or more characters.</source>
          <target state="translated">'_'문자는 단일 문자를 나타냅니다. '%'문자는 0 개 이상의 문자 시퀀스를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2d3d7549dcf0d83ed68ff060f89f99b12e4561e6" translate="yes" xml:space="preserve">
          <source>The (possibly empty) subsequence captured by the group during the previous match, or &lt;code&gt;null&lt;/code&gt; if the group failed to match part of the input</source>
          <target state="translated">이전 일치하는 동안 그룹이 캡처 한 (아마도 비어있는) 서브 시퀀스 또는 그룹이 입력의 일부와 일치하지 않으면 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f610b577e0d0c1aa68c7de09df91b0c3b1792629" translate="yes" xml:space="preserve">
          <source>The (possibly empty) subsequence captured by the named group during the previous match, or &lt;code&gt;null&lt;/code&gt; if the group failed to match part of the input</source>
          <target state="translated">이전에 일치하는 동안 명명 된 그룹이 캡처 한 (아마도 비어있는) 하위 시퀀스이거나 , 그룹이 입력의 일부와 일치하지 않으면 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b452ff3f7cd68722baf21b3005843847575b9ad" translate="yes" xml:space="preserve">
          <source>The (possibly empty) subsequence matched by the previous match, in string form</source>
          <target state="translated">문자열 형식의 이전 일치와 일치하는 (비어있을 수있는) 하위 시퀀스</target>
        </trans-unit>
        <trans-unit id="8341c85cf0c06e0be2262709eb4535bb0c5658b6" translate="yes" xml:space="preserve">
          <source>The (potentially null) Object whose notifyAll() method will be called immediately after the Runnable.run() method has returned or thrown an exception or after the event was disposed.</source>
          <target state="translated">Runnable.run () 메서드가 예외를 반환하거나 throw 한 직후 또는 이벤트가 삭제 된 직후 notifyAll () 메서드가 호출되는 (null 일 가능성이있는) 개체입니다.</target>
        </trans-unit>
        <trans-unit id="03e6e28175ae241b91674d1ee7e9f6b8e22a39c6" translate="yes" xml:space="preserve">
          <source>The (user-accessible) request headers that this request was (or will be) sent with.</source>
          <target state="translated">이 요청이 전송되었거나 전송 될 (사용자가 액세스 할 수있는) 요청 헤더입니다.</target>
        </trans-unit>
        <trans-unit id="db8c98f744455c4ea33c3652417a8d4d6babb38a" translate="yes" xml:space="preserve">
          <source>The +90 direction was chosen because simple finishing on the long edge is the same edge whether portrait or landscape.</source>
          <target state="translated">긴 쪽 가장자리의 간단한 마무리가 세로 또는 가로와 같은 가장자리이므로 +90 방향이 선택되었습니다.</target>
        </trans-unit>
        <trans-unit id="dc75f82aa609831b4e45d1280715e643c1e08fde" translate="yes" xml:space="preserve">
          <source>The 14 bit clock sequence value is constructed from the clock sequence field of this UUID. The clock sequence field is used to guarantee temporal uniqueness in a time-based UUID.</source>
          <target state="translated">14 비트 클록 시퀀스 값은이 UUID의 클록 시퀀스 필드에서 구성됩니다. 클럭 시퀀스 필드는 시간 기반 UUID에서 시간 고유성을 보장하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9244f80a9a7b954470832171ad15b5298b7c6027" translate="yes" xml:space="preserve">
          <source>The 48 bit node value is constructed from the node field of this UUID. This field is intended to hold the IEEE 802 address of the machine that generated this UUID to guarantee spatial uniqueness.</source>
          <target state="translated">48 비트 노드 값은이 UUID의 노드 필드에서 구성됩니다. 이 필드는 공간 고유성을 보장하기 위해이 UUID를 생성 한 시스템의 IEEE 802 주소를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="cf62656bdd2342ac213b17c11186efa9fdef0697" translate="yes" xml:space="preserve">
          <source>The 60 bit timestamp value is constructed from the time_low, time_mid, and time_hi fields of this &lt;code&gt;UUID&lt;/code&gt;. The resulting timestamp is measured in 100-nanosecond units since midnight, October 15, 1582 UTC.</source>
          <target state="translated">60 비트 타임 스탬프 값은이 &lt;code&gt;UUID&lt;/code&gt; 의 time_low, time_mid 및 time_hi 필드로 구성 됩니다 . 결과 타임 스탬프는 UTC 1582 년 10 월 15 일 자정 이후 100 나노초 단위로 측정됩니다.</target>
        </trans-unit>
        <trans-unit id="dece32256f323cee7e134d3087e518f2b7ddcafa" translate="yes" xml:space="preserve">
          <source>The 8 primitive Java types (&lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;
      long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;) are mapped to the corresponding boxed types from &lt;code&gt;java.lang&lt;/code&gt;, namely &lt;code&gt;
      Boolean&lt;/code&gt;, &lt;code&gt;Byte&lt;/code&gt;, etc. The Open Type is the corresponding &lt;code&gt;SimpleType&lt;/code&gt;. Thus, &lt;em&gt;opentype(&lt;/em&gt;&lt;code&gt;
      long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;SimpleType.LONG&lt;/code&gt;, and &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;
      java.lang.Long&lt;/code&gt;.</source>
          <target state="translated">8 개의 기본 Java 유형 ( &lt;code&gt;boolean&lt;/code&gt; , &lt;code&gt;byte&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; , &lt;code&gt; long&lt;/code&gt; , &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; , &lt;code&gt;char&lt;/code&gt; )은 &lt;code&gt;java.lang&lt;/code&gt; , 즉 &lt;code&gt; Boolean&lt;/code&gt; , &lt;code&gt;Byte&lt;/code&gt; 등의 해당 박스형 유형에 매핑됩니다 . Open Type은 해당 &lt;code&gt;SimpleType&lt;/code&gt; 입니다. 따라서 &lt;em&gt;opentype ( &lt;/em&gt; &lt;code&gt; long&lt;/code&gt; &lt;em&gt;)&lt;/em&gt; 은 &lt;code&gt;SimpleType.LONG&lt;/code&gt; 이고 &lt;em&gt;opendata ( &lt;/em&gt; &lt;code&gt;long&lt;/code&gt; &lt;em&gt;)&lt;/em&gt; 는 &lt;code&gt; java.lang.Long&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5148f442500cb2e7c77d69481afbed4f322b7043" translate="yes" xml:space="preserve">
          <source>The 8 primitive Java types (&lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;) are mapped to the corresponding boxed types from &lt;code&gt;java.lang&lt;/code&gt;, namely &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Byte&lt;/code&gt;, etc. The Open Type is the corresponding &lt;code&gt;SimpleType&lt;/code&gt;. Thus, &lt;em&gt;opentype(&lt;/em&gt;&lt;code&gt;long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;SimpleType.LONG&lt;/code&gt;, and &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;java.lang.Long&lt;/code&gt;.</source>
          <target state="translated">8 가지 기본 Java 유형 ( &lt;code&gt;boolean&lt;/code&gt; , &lt;code&gt;byte&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; , &lt;code&gt;char&lt;/code&gt; )은 &lt;code&gt;java.lang&lt;/code&gt; 의 해당 상자 유형 ( 예 : &lt;code&gt;Boolean&lt;/code&gt; , &lt;code&gt;Byte&lt;/code&gt; )에 맵핑됩니다 . Open Type은 해당 &lt;code&gt;SimpleType&lt;/code&gt; 입니다. 따라서 &lt;em&gt;opentype ( &lt;/em&gt; &lt;code&gt;long&lt;/code&gt; &lt;em&gt;)&lt;/em&gt; 은 &lt;code&gt;SimpleType.LONG&lt;/code&gt; 이고 &lt;em&gt;opendata ( &lt;/em&gt; &lt;code&gt;long&lt;/code&gt; &lt;em&gt;)&lt;/em&gt; 는 &lt;code&gt;java.lang.Long&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a6b61faaf0fa15e874e7aa6036cb8bbc437bc046" translate="yes" xml:space="preserve">
          <source>The 800-90Ar1 specification allows for a variety of DRBG implementation choices, such as:</source>
          <target state="translated">800-90Ar1 사양은 다음과 같은 다양한 DRBG 구현 선택을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="9e58fb199b65ff39292af5a70bd8d9990914fb0a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E()&quot;&gt;&lt;code&gt;ObjID()&lt;/code&gt;&lt;/a&gt; constructor can be used to generate a unique object identifier. Such an &lt;code&gt;ObjID&lt;/code&gt; is unique over time with respect to the host it is generated on. The &lt;a href=&quot;#%3Cinit%3E(int)&quot;&gt;&lt;code&gt;ObjID(int)&lt;/code&gt;&lt;/a&gt; constructor can be used to create a &quot;well-known&quot; object identifier. The scope of a well-known &lt;code&gt;ObjID&lt;/code&gt; depends on the RMI runtime it is exported to.</source>
          <target state="translated">&lt;a href=&quot;#%3Cinit%3E()&quot;&gt; &lt;code&gt;ObjID()&lt;/code&gt; &lt;/a&gt; 생성자는 객체 식별자를 생성하는데 사용될 수있다. 이러한 &lt;code&gt;ObjID&lt;/code&gt; 는 생성 된 호스트와 관련하여 시간이 지남에 따라 고유합니다. &lt;a href=&quot;#%3Cinit%3E(int)&quot;&gt; &lt;code&gt;ObjID(int)&lt;/code&gt; &lt;/a&gt; 생성자는 &quot;공지 된&quot;객체 식별자를 생성 할 수있다. 잘 알려진 &lt;code&gt;ObjID&lt;/code&gt; 의 범위 는 내보내는 RMI 런타임에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="b4e3f86cc07101d3686dcbfa5a8ccabe930104d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E()&quot;&gt;&lt;code&gt;UID()&lt;/code&gt;&lt;/a&gt; constructor can be used to generate an identifier that is unique over time with respect to the host it is generated on. The &lt;a href=&quot;#%3Cinit%3E(short)&quot;&gt;&lt;code&gt;UID(short)&lt;/code&gt;&lt;/a&gt; constructor can be used to create one of 2&lt;sup&gt;16&lt;/sup&gt; well-known identifiers.</source>
          <target state="translated">&lt;a href=&quot;#%3Cinit%3E()&quot;&gt; &lt;code&gt;UID()&lt;/code&gt; &lt;/a&gt; 생성자는 생성 된 호스트상에서 항상 고유 식별자를 생성하는데 사용될 수있다. &lt;a href=&quot;#%3Cinit%3E(short)&quot;&gt; &lt;code&gt;UID(short)&lt;/code&gt; &lt;/a&gt; 생성자 (2)의 하나 만드는 데 사용할 수있는 &lt;sup&gt;16 개의&lt;/sup&gt; 공지 식별자.</target>
        </trans-unit>
        <trans-unit id="682311c69459705b6611d2116dd3a23ba37087d4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;single-argument constructor&lt;/a&gt; requires any illegal characters in its argument to be quoted and preserves any escaped octets and</source>
          <target state="translated">&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;단일 인수 생성자가&lt;/a&gt; 인용 될 인수에 불법 문자를 필요로하고 탈출 옥텟을 보존하고</target>
        </trans-unit>
        <trans-unit id="0d511e9cdd40f514d5106cf2ef66216314a29c9d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;multi-argument constructors&lt;/a&gt; quote illegal characters as required by the components in which they appear. The percent character (&lt;code&gt;'%'&lt;/code&gt;) is always quoted by these constructors. Any</source>
          <target state="translated">&lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;멀티 인수 생성자&lt;/a&gt; 가 표시되는 구성 요소에 필요한 불법 문자를 인용. 퍼센트 문자 ( &lt;code&gt;'%'&lt;/code&gt; )는 항상 이러한 생성자에 의해 인용됩니다. 어떤</target>
        </trans-unit>
        <trans-unit id="12a6cdf59f396e7ede4167477fe96500e2984545" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#HOUR_OF_DAY&quot;&gt;&lt;code&gt;HOUR_OF_DAY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#HOUR&quot;&gt;&lt;code&gt;HOUR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#AM_PM&quot;&gt;&lt;code&gt;AM_PM&lt;/code&gt;&lt;/a&gt; fields are handled independently and the &lt;a href=&quot;#time_resolution&quot;&gt;the resolution rule for the time of day&lt;/a&gt; is applied. Clearing one of the fields doesn't reset the hour of day value of this &lt;code&gt;Calendar&lt;/code&gt;. Use &lt;a href=&quot;#set(int,int)&quot;&gt;&lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt;&lt;/a&gt; to reset the hour value.</source>
          <target state="translated">&lt;a href=&quot;#HOUR_OF_DAY&quot;&gt; &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#HOUR&quot;&gt; &lt;code&gt;HOUR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#AM_PM&quot;&gt; &lt;code&gt;AM_PM&lt;/code&gt; &lt;/a&gt; 필드는 독립적으로 처리하고, &lt;a href=&quot;#time_resolution&quot;&gt;하루 중 시간의 해결 규칙이&lt;/a&gt; 적용됩니다. 필드 중 하나를 지워도이 &lt;code&gt;Calendar&lt;/code&gt; 의 시간 값은 재설정되지 않습니다 . 시간 값을 재설정 하려면 &lt;a href=&quot;#set(int,int)&quot;&gt; &lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d3797757117e40a3e66974929944ba9d9f97b3d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ISO_LOCAL_DATE&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f15ef683ec00288c71d3577bc42eb084e27f694" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_LOCAL_DATE_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">그만큼 &lt;a href=&quot;#ISO_LOCAL_DATE_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f808d49e1dbf56a3c4398227f6b1e2bf8250f43f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_LOCAL_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">그만큼 &lt;a href=&quot;#ISO_LOCAL_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0c109d69bd2a94cc8708a4b92a21150d220aabd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">그만큼 &lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56ea47af67300951fe2f7673e1da328222067840" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt; where the instant is converted from &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;UTC&lt;/code&gt; offset. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt; 순간이 변환되어 &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;UTC&lt;/code&gt; 오프셋. 구문 분석은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6462b3412eddb31db3350f0bec08a7567c11bfe2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#SHOWA&quot;&gt;&lt;code&gt;SHOWA&lt;/code&gt;&lt;/a&gt; era that contains 1970-01-01 (ISO calendar system) has the value 1. Later eras are numbered from 2 (&lt;a href=&quot;#HEISEI&quot;&gt;&lt;code&gt;HEISEI&lt;/code&gt;&lt;/a&gt;). Earlier eras are numbered 0 (&lt;a href=&quot;#TAISHO&quot;&gt;&lt;code&gt;TAISHO&lt;/code&gt;&lt;/a&gt;), -1 (&lt;a href=&quot;#MEIJI&quot;&gt;&lt;code&gt;MEIJI&lt;/code&gt;&lt;/a&gt;)).</source>
          <target state="translated">1970-01-01 (ISO 달력 시스템)을 포함 하는 &lt;a href=&quot;#SHOWA&quot;&gt; &lt;code&gt;SHOWA&lt;/code&gt; &lt;/a&gt; 시대의 값은 1입니다. 이후 시대는 2 ( &lt;a href=&quot;#HEISEI&quot;&gt; &lt;code&gt;HEISEI&lt;/code&gt; &lt;/a&gt; ) 부터 번호가 지정됩니다 . 이전 연대는 0 ( &lt;a href=&quot;#TAISHO&quot;&gt; &lt;code&gt;TAISHO&lt;/code&gt; &lt;/a&gt; ), -1 (&lt;a href=&quot;#MEIJI&quot;&gt; &lt;code&gt;MEIJI&lt;/code&gt; &lt;/a&gt; ))입니다.</target>
        </trans-unit>
        <trans-unit id="1218f5e11c1b0fbb96868c89e68629f6c6f31a8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#SHOW_HIDDEN_FRAMES&quot;&gt;&lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt;&lt;/a&gt; option can also be used to show all reflection frames and it will also show other hidden frames that are implementation-specific.</source>
          <target state="translated">그만큼 &lt;a href=&quot;#SHOW_HIDDEN_FRAMES&quot;&gt; &lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt; 의&lt;/a&gt; 옵션은 모든 반사 프레임을 표시하는 데 사용 될 수 있으며, 또한 구현 고유의 다른 숨겨진 프레임을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="c3d51ccaaa6c7526c0b9fe4eaa230ff7631e6c8e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; methods that do not otherwise have a value to return are specified to return the network channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; &lt;/a&gt; 반환 값을 돌려주지 않는 방법은 자신을 호출 한 네트워크 채널을 반환하도록 지정됩니다. 이를 통해 메서드 호출이 연결될 수 있습니다. 이 인터페이스의 구현은 구현 클래스에 대한 메서드 호출이 연결될 수 있도록 반환 유형을 전문화해야합니다.</target>
        </trans-unit>
        <trans-unit id="7b41cd732268ff9ba7ada77977453a57f1631483" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method determines whether the access request indicated by a specified permission should be granted or denied. A sample call appears below. In this example, &lt;code&gt;checkPermission&lt;/code&gt; will determine whether or not to grant &quot;read&quot; access to the file named &quot;testFile&quot; in the &quot;/temp&quot; directory.</source>
          <target state="translated">&lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt; 방법은 특정 권한에 의해 지시 된 액세스 요구를 허용 할 것인지 또는 거부 할 것인지를 결정한다. 아래에 샘플 호출이 표시됩니다. 이 예에서 &lt;code&gt;checkPermission&lt;/code&gt; 은 &quot;/ temp&quot;디렉토리에있는 &quot;testFile&quot;이라는 파일에 &quot;읽기&quot;액세스 권한을 부여할지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="fc21b8772df57e16a19a32de1251db03dac1b038" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method synchronizes on the selector and its selected-key set in the same order as in a selection operation.</source>
          <target state="translated">그만큼 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 방법은 선택 및 선택 동작과 동일한 순서로 그 선택된 키 세트에 동기화한다.</target>
        </trans-unit>
        <trans-unit id="0c452ba0c8c3a01125dbd7aa512ab0bb6267b570" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#defineModulesWithOneLoader(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;defineModulesWithOneLoader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#defineModulesWithManyLoaders(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;defineModulesWithManyLoaders&lt;/code&gt;&lt;/a&gt; methods provide convenient ways to create a module layer where all modules are mapped to a single class loader or where each module is mapped to its own class loader. The &lt;a href=&quot;#defineModules(java.lang.module.Configuration,java.util.function.Function)&quot;&gt;&lt;code&gt;defineModules&lt;/code&gt;&lt;/a&gt; method is for more advanced cases where modules are mapped to custom class loaders by means of a function specified to the method. Each of these methods has an instance and static variant. The instance methods create a layer with the receiver as the parent layer. The static methods are for more advanced cases where there can be more than one parent layer or where a &lt;a href=&quot;modulelayer.controller&quot;&gt;&lt;code&gt;Controller&lt;/code&gt;&lt;/a&gt; is needed to control modules in the layer</source>
          <target state="translated">&lt;a href=&quot;#defineModulesWithOneLoader(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;defineModulesWithOneLoader&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#defineModulesWithManyLoaders(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;defineModulesWithManyLoaders&lt;/code&gt; &lt;/a&gt; 방법은 모든 모듈이 하나의 클래스 로더 또는 경우 각 모듈은 자체 클래스 로더에 매핑에 매핑되는 모듈 계층을 생성하는 편리한 방법을 제공합니다. &lt;a href=&quot;#defineModules(java.lang.module.Configuration,java.util.function.Function)&quot;&gt; &lt;code&gt;defineModules&lt;/code&gt; 의&lt;/a&gt; 방법은 모듈이 방법에 규정 된 함수에 의해 정의 된 클래스 로더에 매핑되는 경우에 더 상세하다. 이러한 각 메서드에는 인스턴스와 정적 변형이 있습니다. 인스턴스 메소드는 수신자를 상위 계층으로 사용하여 계층을 생성합니다. 정적 메서드는 상위 레이어가 두 개 이상있을 수 있거나 &lt;a href=&quot;modulelayer.controller&quot;&gt; &lt;code&gt;Controller&lt;/code&gt; &lt;/a&gt; 모듈을 제어하기 위해 가 필요한 입니다.</target>
        </trans-unit>
        <trans-unit id="8b028e1e9572581fd279877b772e9ad7c8a10ac0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#element()&quot;&gt;&lt;code&gt;element()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#peek()&quot;&gt;&lt;code&gt;peek()&lt;/code&gt;&lt;/a&gt; methods return, but do not remove, the head of the queue.</source>
          <target state="translated">&lt;a href=&quot;#element()&quot;&gt; &lt;code&gt;element()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#peek()&quot;&gt; &lt;code&gt;peek()&lt;/code&gt; &lt;/a&gt; 메소드는 큐의 선두를 돌려줍니다 만, 삭제는하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="59fe8ba28696ef3fa84a45d40a68ce4ad796fed3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#fillInStackTrace()&quot;&gt;&lt;code&gt;fillInStackTrace()&lt;/code&gt;&lt;/a&gt; method is called to initialize the stack trace data in the newly created throwable.</source>
          <target state="translated">&lt;a href=&quot;#fillInStackTrace()&quot;&gt; &lt;code&gt;fillInStackTrace()&lt;/code&gt; &lt;/a&gt; 메소드는 새롭게 생성 던질에서 스택 트레이스 데이터를 초기화한다.</target>
        </trans-unit>
        <trans-unit id="65031d3365faff2695a182538e3b2421b65176cb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#find()&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; method scans the input sequence looking for the next subsequence that matches the pattern.</source>
          <target state="translated">&lt;a href=&quot;#find()&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt; 방법은 패턴과 일치하는 다음의 부분 순서를 찾고 입력 시퀀스를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="485afabc350f71204e8f4d536d46cdaf239de32b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#find(java.lang.String)&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#findAll()&quot;&gt;&lt;code&gt;findAll&lt;/code&gt;&lt;/a&gt; methods defined here can fail for several reasons. These include I/O errors, errors detected parsing a module descriptor (&lt;code&gt;module-info.class&lt;/code&gt;), or in the case of &lt;code&gt;ModuleFinder&lt;/code&gt; returned by &lt;a href=&quot;#of(java.nio.file.Path...)&quot;&gt;&lt;code&gt;ModuleFinder.of&lt;/code&gt;&lt;/a&gt;, that two or more modules with the same name are found in a directory. When an error is detected then these methods throw &lt;a href=&quot;findexception&quot;&gt;&lt;code&gt;FindException&lt;/code&gt;&lt;/a&gt; with an appropriate &lt;a href=&quot;../throwable#getCause()&quot;&gt;&lt;code&gt;cause&lt;/code&gt;&lt;/a&gt;. The behavior of a &lt;code&gt;ModuleFinder&lt;/code&gt; after a &lt;code&gt;FindException&lt;/code&gt; is thrown is undefined. For example, invoking &lt;code&gt;find&lt;/code&gt; after an exception is thrown may or may not scan the same modules that lead to the exception. It is recommended that a module finder be discarded after an exception is thrown.</source>
          <target state="translated">&lt;a href=&quot;#find(java.lang.String)&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#findAll()&quot;&gt; &lt;code&gt;findAll&lt;/code&gt; &lt;/a&gt; 여기에 정의 된 방법은 여러 가지 이유로 실패 할 수 있습니다. 여기에는 I / O 오류, 모듈 설명자를 구문 분석하는 동안 감지 된 오류 ( &lt;code&gt;module-info.class&lt;/code&gt; ) 또는 &lt;code&gt;ModuleFinder&lt;/code&gt; .of가 반환 한 &lt;a href=&quot;#of(java.nio.file.Path...)&quot;&gt; &lt;code&gt;ModuleFinder.of&lt;/code&gt; &lt;/a&gt; 의 경우 디렉토리에서 동일한 이름을 가진 두 개 이상의 모듈이 발견 된 경우가 포함됩니다. 오류가 감지되면 이러한 메소드 는 적절한 &lt;a href=&quot;../throwable#getCause()&quot;&gt; &lt;code&gt;cause&lt;/code&gt; &lt;/a&gt; 과 함께 &lt;a href=&quot;findexception&quot;&gt; &lt;code&gt;FindException&lt;/code&gt; &lt;/a&gt; 을 발생 시킵니다. 예외가 &lt;code&gt;FindException&lt;/code&gt; 후 &lt;code&gt;ModuleFinder&lt;/code&gt; 이후 ModuleFinder 의 동작은 예외를 발생시키는 동일한 모듈을 스캔하거나 스캔하지 않을 수 있습니다. 예외가 발생한 후 모듈 파인더를 버릴 것을 권장합니다. 이 throw 된 은 정의되지 않았습니다. 예를 들어, &lt;code&gt;find&lt;/code&gt; 호출</target>
        </trans-unit>
        <trans-unit id="a0be6cc5b803049be30b6393527056072d664d40" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#findInLine(java.lang.String)&quot;&gt;&lt;code&gt;findInLine()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#findWithinHorizon(java.lang.String,int)&quot;&gt;&lt;code&gt;findWithinHorizon()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#skip(java.util.regex.Pattern)&quot;&gt;&lt;code&gt;skip()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#findAll(java.util.regex.Pattern)&quot;&gt;&lt;code&gt;findAll()&lt;/code&gt;&lt;/a&gt; methods operate independently of the delimiter pattern. These methods will attempt to match the specified pattern with no regard to delimiters in the input and thus can be used in special circumstances where delimiters are not relevant. These methods may block waiting for more input.</source>
          <target state="translated">&lt;a href=&quot;#findInLine(java.lang.String)&quot;&gt; &lt;code&gt;findInLine()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#findWithinHorizon(java.lang.String,int)&quot;&gt; &lt;code&gt;findWithinHorizon()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#skip(java.util.regex.Pattern)&quot;&gt; &lt;code&gt;skip()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#findAll(java.util.regex.Pattern)&quot;&gt; &lt;code&gt;findAll()&lt;/code&gt; &lt;/a&gt; 메소드는 분리 패턴에 독립적으로 동작한다. 이러한 메서드는 입력의 구분 기호에 관계없이 지정된 패턴을 일치 시키려고 시도하므로 구분 기호가 관련이없는 특수한 상황에서 사용할 수 있습니다. 이러한 메서드는 추가 입력 대기를 차단할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76c75e1993d06be0c203f41c01f7c21dc08dea73" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#flags()&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentryflag&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; to indicate how entries are inherited and propagated</source>
          <target state="translated">&lt;a href=&quot;#flags()&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt; 구성 요소의 집합입니다 &lt;a href=&quot;aclentryflag&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt; 항목이 상속 및 전파하는 방법을 나타 내기 위해</target>
        </trans-unit>
        <trans-unit id="190f5e4e1c44c5bff240e5e10541bfc811769ca9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#floatdFlags&quot;&gt;default behavior&lt;/a&gt; when no flags are given is the same as for Float and Double.</source>
          <target state="translated">플래그가 지정되지 않은 경우 의 &lt;a href=&quot;#floatdFlags&quot;&gt;기본 동작&lt;/a&gt; 은 Float 및 Double과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="8440ae8a2e8c8cb5abe641e67dc8c2628fb82898" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#format(double,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt;&lt;code&gt;format(double, StringBuffer, FieldPosition)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#format(long,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt;&lt;code&gt;format(long, StringBuffer, FieldPosition)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt;&lt;code&gt;parse(String, ParsePosition)&lt;/code&gt;&lt;/a&gt; methods may throw &lt;code&gt;NullPointerException&lt;/code&gt;, if any of their parameter is &lt;code&gt;null&lt;/code&gt;. The subclass may provide its own implementation and specification about &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#format(double,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt; &lt;code&gt;format(double, StringBuffer, FieldPosition)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#format(long,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt; &lt;code&gt;format(long, StringBuffer, FieldPosition)&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt; &lt;code&gt;parse(String, ParsePosition)&lt;/code&gt; &lt;/a&gt; 방법을 던질 수 &lt;code&gt;NullPointerException&lt;/code&gt; 이 자신의 매개 변수의 경우, &lt;code&gt;null&lt;/code&gt; . 서브 클래스는 &lt;code&gt;NullPointerException&lt;/code&gt; 에 대한 자체 구현 및 사양을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6ddeb2913f2a55c19f8bf8bdbf4bdad02909664b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt;&lt;code&gt;format(Date, StringBuffer, FieldPosition)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt;&lt;code&gt;parse(String, ParsePosition)&lt;/code&gt;&lt;/a&gt; methods may throw &lt;code&gt;NullPointerException&lt;/code&gt;, if any of their parameter is &lt;code&gt;null&lt;/code&gt;. The subclass may provide its own implementation and specification about &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt; &lt;code&gt;format(Date, StringBuffer, FieldPosition)&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt; &lt;code&gt;parse(String, ParsePosition)&lt;/code&gt; &lt;/a&gt; 방법을 던질 수 &lt;code&gt;NullPointerException&lt;/code&gt; 이 자신의 매개 변수의 경우, &lt;code&gt;null&lt;/code&gt; . 서브 클래스는 &lt;code&gt;NullPointerException&lt;/code&gt; 에 대한 자체 구현 및 사양을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c35eba97249f91e14a4aa2e210793e65c3843e54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#format(java.util.Locale,java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; method for this object which has a locale argument does not change this value.</source>
          <target state="translated">로케일 인수가있는이 오브젝트 의 &lt;a href=&quot;#format(java.util.Locale,java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt; 메소드는이 값을 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2c86df6f2aba994c7c6bab473720f8bbcbca5a50" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getAnnotationsByType(java.lang.Class)&quot;&gt;&lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getDeclaredAnnotationsByType(java.lang.Class)&quot;&gt;&lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; methods support multiple annotations of the same type on an element. If the argument to either method is a repeatable annotation type (JLS 9.6), then the method will &quot;look through&quot; a container annotation (JLS 9.7), if present, and return any annotations inside the container. Container annotations may be generated at compile-time to wrap multiple annotations of the argument type.</source>
          <target state="translated">&lt;a href=&quot;#getAnnotationsByType(java.lang.Class)&quot;&gt; &lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getDeclaredAnnotationsByType(java.lang.Class)&quot;&gt; &lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt; 방법은 요소에 동일한 유형의 다수의 주석을 지원한다. 두 메서드에 대한 인수가 반복 가능한 주석 유형 (JLS 9.6) 인 경우 메서드는 컨테이너 주석 (JLS 9.7)이있는 경우 &quot;검색&quot;하고 컨테이너 내부의 주석을 반환합니다. 컨테이너 주석은 컴파일 타임에 생성되어 인수 유형의 여러 주석을 래핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdab4d7eeb982b1f24089281c7dfb71b45783340" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getAttributes()&quot;&gt;&lt;code&gt;getAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getOperations()&quot;&gt;&lt;code&gt;getOperations()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getConstructors()&quot;&gt;&lt;code&gt;getConstructors()&lt;/code&gt;&lt;/a&gt; methods of the implementing class should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt;&lt;code&gt;MBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; respectively which implement the &lt;a href=&quot;openmbeanattributeinfo&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbeanoperationinfo&quot;&gt;&lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;openmbeanconstructorinfo&quot;&gt;&lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; interface respectively.</source>
          <target state="translated">구현 클래스 의 &lt;a href=&quot;#getAttributes()&quot;&gt; &lt;code&gt;getAttributes()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#getOperations()&quot;&gt; &lt;code&gt;getOperations()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getConstructors()&quot;&gt; &lt;code&gt;getConstructors()&lt;/code&gt; &lt;/a&gt; 메서드는 각각 &lt;a href=&quot;openmbeanattributeinfo&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;openmbeanoperationinfo&quot;&gt; &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;openmbeanconstructorinfo&quot;&gt; &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; &lt;/a&gt; 인터페이스 를 구현하는 &lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt; &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; &lt;/a&gt; 하위 클래스의 인스턴스 배열을 런타임에 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="72faf261c7a536f2c59a574937656ff7b51fe043" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getBody()&quot;&gt;&lt;code&gt;getBody()&lt;/code&gt;&lt;/a&gt; method returns a &lt;a href=&quot;../../../../java.base/java/util/concurrent/completionstage&quot;&gt;&lt;code&gt;CompletionStage&lt;/code&gt;&lt;/a&gt;&amp;lt;&lt;code&gt;T&lt;/code&gt;&amp;gt; that provides the response body object. The &lt;code&gt;CompletionStage&lt;/code&gt; must be obtainable at any time. When it completes depends on the nature of type &lt;code&gt;T&lt;/code&gt;. In many cases, when &lt;code&gt;T&lt;/code&gt; represents the entire body after being consumed then the &lt;code&gt;CompletionStage&lt;/code&gt; completes after the body has been consumed. If &lt;code&gt;T&lt;/code&gt; is a streaming type, such as &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;, then it completes before the body has been read, because the calling code uses the &lt;code&gt;InputStream&lt;/code&gt; to consume the data.</source>
          <target state="translated">&lt;a href=&quot;#getBody()&quot;&gt; &lt;code&gt;getBody()&lt;/code&gt; &lt;/a&gt; 메소드 리턴 &lt;a href=&quot;../../../../java.base/java/util/concurrent/completionstage&quot;&gt; &lt;code&gt;CompletionStage&lt;/code&gt; &lt;/a&gt; &amp;lt; &lt;code&gt;T&lt;/code&gt; &amp;gt; 응답 본체 객체를 제공한다. &lt;code&gt;CompletionStage&lt;/code&gt; 는 언제든지 얻을 수 있어야합니다. 완료시기는 &lt;code&gt;T&lt;/code&gt; 유형의 특성에 따라 다릅니다 . 많은 경우에 &lt;code&gt;T&lt;/code&gt; 가 소비 된 후 전신을 나타내면 &lt;code&gt;CompletionStage&lt;/code&gt; 는 신체가 소비 된 후 완료 됩니다. 경우 &lt;code&gt;T&lt;/code&gt; 는 같은 스트리밍 형이다 &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt; 몸 판독되기 전에 호출 코드를 사용하기 때문에, 그것은 완료된 &lt;code&gt;InputStream&lt;/code&gt; 에서 데이터를 소비 할.</target>
        </trans-unit>
        <trans-unit id="32435269bba763b6eed91c0fa1607a52b35430fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getCalendar()&quot;&gt;&lt;code&gt;getCalendar()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getNumberFormat()&quot;&gt;&lt;code&gt;getNumberFormat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getTimeZone()&quot;&gt;&lt;code&gt;getTimeZone()&lt;/code&gt;&lt;/a&gt; methods may return &lt;code&gt;null&lt;/code&gt;, if the respective values of this instance is set to &lt;code&gt;null&lt;/code&gt; through the corresponding setter methods. For Example: &lt;a href=&quot;#getTimeZone()&quot;&gt;&lt;code&gt;getTimeZone()&lt;/code&gt;&lt;/a&gt; may return &lt;code&gt;null&lt;/code&gt;, if the &lt;code&gt;TimeZone&lt;/code&gt; value of this instance is set as &lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt;&lt;code&gt;setTimeZone(null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#getCalendar()&quot;&gt; &lt;code&gt;getCalendar()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#getNumberFormat()&quot;&gt; &lt;code&gt;getNumberFormat()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getTimeZone()&quot;&gt; &lt;code&gt;getTimeZone()&lt;/code&gt; &lt;/a&gt; 메소드는 반환 될 &lt;code&gt;null&lt;/code&gt; 이 경우의 각각의 값으로 설정되어있는 경우, &lt;code&gt;null&lt;/code&gt; 대응 세터 방법으로. 예를 들어 : 이 인스턴스 의 &lt;code&gt;TimeZone&lt;/code&gt; 값이 &lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt; &lt;code&gt;setTimeZone(null)&lt;/code&gt; &lt;/a&gt; 로 설정된 경우 &lt;a href=&quot;#getTimeZone()&quot;&gt; &lt;code&gt;getTimeZone()&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;null&lt;/code&gt; 을 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6d548ec1adba7df814c35c56a9d94e05c3e1227d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getDeclaringClass()&quot;&gt;&lt;code&gt;getDeclaringClass()&lt;/code&gt;&lt;/a&gt; method may be unsupported as determined by the &lt;a href=&quot;stackwalker.option&quot;&gt;stack walking options&lt;/a&gt; of a &lt;a href=&quot;stackwalker&quot;&gt;stack walker&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#getDeclaringClass()&quot;&gt; &lt;code&gt;getDeclaringClass()&lt;/code&gt; &lt;/a&gt; 에 의해 결정되는 방법이 지원되지 않을 수도 &lt;a href=&quot;stackwalker.option&quot;&gt;스택 보행 옵션&lt;/a&gt; (A)의 &lt;a href=&quot;stackwalker&quot;&gt;스택 워커&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d4c01e514a6c723b1c356309d3d13365f6f6cf37" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getFileStores()&quot;&gt;&lt;code&gt;getFileStores&lt;/code&gt;&lt;/a&gt; method returns an iterator over the underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;file-stores&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#getFileStores()&quot;&gt; &lt;code&gt;getFileStores&lt;/code&gt; 의&lt;/a&gt; 방법은 기본에 대한 반복자를 반환 &lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;file-stores&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e2fd79ed77ea552ff89f8d8ead155a3581da1522" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getIterator(javax.swing.text.html.HTML.Tag)&quot;&gt;&lt;code&gt;getIterator(HTML.Tag t)&lt;/code&gt;&lt;/a&gt; method can also be used for finding all occurrences of the specified HTML tag in the document.</source>
          <target state="translated">&lt;a href=&quot;#getIterator(javax.swing.text.html.HTML.Tag)&quot;&gt; &lt;code&gt;getIterator(HTML.Tag t)&lt;/code&gt; &lt;/a&gt; 방법은 문서에 지정된 HTML 태그의 모든 항목을 찾는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3300fd87f6f8a6538e519485e93d458bc5394918" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getOwner()&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods may be used to read or update the owner of the file.</source>
          <target state="translated">&lt;a href=&quot;#getOwner()&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt; 방법을 읽거나 파일의 소유자를 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64901b8451e1c8852e7089d807ed5f8258270d8e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPath(java.lang.String,java.lang.String...)&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method converts a system dependent &lt;em&gt;path string&lt;/em&gt;, returning a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; object that may be used to locate and access a file.</source>
          <target state="translated">&lt;a href=&quot;#getPath(java.lang.String,java.lang.String...)&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; 의&lt;/a&gt; 방법은 시스템에 따라 변환 &lt;em&gt;경로 문자열을&lt;/em&gt; 복귀, &lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 파일의 위치를 액세스하기 위해 사용될 수있다 개체를.</target>
        </trans-unit>
        <trans-unit id="8fd2d9f74ec9cdead2e0184fbf49aa9ddf9115b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPathMatcher(java.lang.String)&quot;&gt;&lt;code&gt;getPathMatcher&lt;/code&gt;&lt;/a&gt; method is used to create a &lt;a href=&quot;pathmatcher&quot;&gt;&lt;code&gt;PathMatcher&lt;/code&gt;&lt;/a&gt; that performs match operations on paths.</source>
          <target state="translated">&lt;a href=&quot;#getPathMatcher(java.lang.String)&quot;&gt; &lt;code&gt;getPathMatcher&lt;/code&gt; &lt;/a&gt; 방법은 생성하는 데 사용된다 &lt;a href=&quot;pathmatcher&quot;&gt; &lt;code&gt;PathMatcher&lt;/code&gt; 과&lt;/a&gt; 수행이 경로에 대한 연산을 일치한다.</target>
        </trans-unit>
        <trans-unit id="a560f4cd636efba36278b039e9aa6637d4fa976d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPeerCertificates()&quot;&gt;&lt;code&gt;getPeerCertificates()&lt;/code&gt;&lt;/a&gt; method that returns an array of &lt;code&gt;java.security.cert.Certificate&lt;/code&gt; should be used instead.</source>
          <target state="translated">&lt;a href=&quot;#getPeerCertificates()&quot;&gt; &lt;code&gt;getPeerCertificates()&lt;/code&gt; &lt;/a&gt; 의 배열 방법에 반환 &lt;code&gt;java.security.cert.Certificate&lt;/code&gt; 대신 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="313bda01207414193392bffc5273876e5116943a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPlatformClassLoader()&quot;&gt;&lt;code&gt;platform class loader&lt;/code&gt;&lt;/a&gt; may delegate to the application class loader but the application class loader is not its ancestor. When invoked on the platform class loader, this method will not find packages defined to the application class loader.</source>
          <target state="translated">&lt;a href=&quot;#getPlatformClassLoader()&quot;&gt; &lt;code&gt;platform class loader&lt;/code&gt; &lt;/a&gt; 응용 프로그램 클래스 로더에 위임 할 수 있지만 응용 프로그램 클래스 로더는, 상위 아니다. 플랫폼 클래스 로더에서 호출 될 때이 메소드는 애플리케이션 클래스 로더에 정의 된 패키지를 찾지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0c93939323354c73ed8f0956cf1175a9c81572a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPlatformClassLoader()&quot;&gt;&lt;code&gt;platform class loader&lt;/code&gt;&lt;/a&gt; may delegate to the application class loader. In other words, packages in modules defined to the application class loader may be visible to the platform class loader. On the other hand, the application class loader is not its ancestor and hence when invoked on the platform class loader, this method will not return any packages defined to the application class loader.</source>
          <target state="translated">&lt;a href=&quot;#getPlatformClassLoader()&quot;&gt; &lt;code&gt;platform class loader&lt;/code&gt; &lt;/a&gt; 응용 프로그램 클래스 로더에 위임 할 수있다. 즉, 애플리케이션 클래스 로더에 정의 된 모듈의 패키지는 플랫폼 클래스 로더에 표시 될 수 있습니다. 반면에 애플리케이션 클래스 로더는 조상이 아니므로 플랫폼 클래스 로더에서 호출 될 때이 메서드는 애플리케이션 클래스 로더에 정의 된 패키지를 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="457ebe76737264b01c1e1c27299d64cf99dbc43d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPlatformManagementInterfaces()&quot;&gt;&lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt;&lt;/a&gt; method returns all management interfaces supported in the Java virtual machine including the standard management interfaces listed in the tables below as well as the management interfaces extended by the JDK implementation.</source>
          <target state="translated">&lt;a href=&quot;#getPlatformManagementInterfaces()&quot;&gt; &lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt; 의&lt;/a&gt; 방법은 테이블 아래뿐만 아니라 JDK 구현에 의해 확장 된 관리 인터페이스에 나와있는 표준 관리 인터페이스를 비롯한 자바 가상 머신에서 지원하는 모든 관리 인터페이스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="84b83e16e7d300b2d7773bc228f8821d4fecf3d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRawUserInfo()&quot;&gt;&lt;code&gt;getRawUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawPath()&quot;&gt;&lt;code&gt;getRawPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawQuery()&quot;&gt;&lt;code&gt;getRawQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawFragment()&quot;&gt;&lt;code&gt;getRawFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawAuthority()&quot;&gt;&lt;code&gt;getRawAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getRawSchemeSpecificPart()&quot;&gt;&lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods return the values of their corresponding components in raw form, without interpreting any escaped octets. The strings returned by these methods may contain both escaped octets and</source>
          <target state="translated">&lt;a href=&quot;#getRawUserInfo()&quot;&gt; &lt;code&gt;getRawUserInfo&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#getRawPath()&quot;&gt; &lt;code&gt;getRawPath&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#getRawQuery()&quot;&gt; &lt;code&gt;getRawQuery&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#getRawFragment()&quot;&gt; &lt;code&gt;getRawFragment&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#getRawAuthority()&quot;&gt; &lt;code&gt;getRawAuthority&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getRawSchemeSpecificPart()&quot;&gt; &lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt; 의&lt;/a&gt; 방법은 모든 탈출 옥텟을 해석하지 않고 원시 형태에서의 대응 구성 요소의 값을 반환한다. 이 메서드에서 반환하는 문자열에는 이스케이프 된 옥텟과</target>
        </trans-unit>
        <trans-unit id="891cbbb7b678ed269448de3333f3c927fe5fa40f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRemaining()&quot;&gt;remaining byte count&lt;/a&gt; will be reduced by the number of consumed input bytes. If the &lt;a href=&quot;#setInput(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;setInput(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method was called to provide a buffer for input, the input buffer's position will be advanced the number of consumed bytes.</source>
          <target state="translated">&lt;a href=&quot;#getRemaining()&quot;&gt;남은 바이트 수는&lt;/a&gt; 소비 입력 된 바이트의 수만큼 감소한다. 경우 &lt;a href=&quot;#setInput(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;setInput(ByteBuffer)&lt;/code&gt; &lt;/a&gt; 메소드가 입력 버퍼를 제공하기 위해 호출 된, 입력 버퍼의 위치는 소비 바이트 수를 진행한다.</target>
        </trans-unit>
        <trans-unit id="71a5ae33e22c851a1c1a637a5ed40b081c469403" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRevocationChecker()&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathBuilder&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">&lt;a href=&quot;#getRevocationChecker()&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt; 메소드는 애플리케이션에 의해 사용되는 추가적인 알고리즘 특정 파라미터 및 선택 지정할 수 &lt;code&gt;CertPathBuilder&lt;/code&gt; 에 인증서의 폐기 상태를 확인할 때한다. 다음은 PKIX 알고리즘과 함께 사용되는 방법을 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="6225f57b6a8a1feec5ebc1ed8607b650f0217212" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRevocationChecker()&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathValidator&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">&lt;a href=&quot;#getRevocationChecker()&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt; 메소드는 애플리케이션에 의해 사용되는 추가적인 알고리즘 특정 파라미터 및 선택 지정할 수 &lt;code&gt;CertPathValidator&lt;/code&gt; 는 인증서의 폐기 상태를 확인할 때한다. 다음은 PKIX 알고리즘과 함께 사용되는 방법을 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="8330d802646a04e518219a971d7d2f79724a3ffd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getSignature()&quot;&gt;&lt;code&gt;getSignature()&lt;/code&gt;&lt;/a&gt; method should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt; which implements the &lt;a href=&quot;openmbeanparameterinfo&quot;&gt;&lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt;&lt;/a&gt; interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;#getSignature()&quot;&gt; &lt;code&gt;getSignature()&lt;/code&gt; &lt;/a&gt; 메소드 실행시 서브 클래스의 인스턴스의 배열 돌려 &lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; 의&lt;/a&gt; 어떤 구현 &lt;a href=&quot;openmbeanparameterinfo&quot;&gt; &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; 의&lt;/a&gt; 인터페이스 (일반적으로 &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="31af394073090130fd1f8beb5c75278aebe2c90d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getSourceRegion(javax.imageio.ImageReadParam,int,int)&quot;&gt;&lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt;&lt;/a&gt; method may be used if only source clipping is desired.</source>
          <target state="translated">&lt;a href=&quot;#getSourceRegion(javax.imageio.ImageReadParam,int,int)&quot;&gt; &lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt; &lt;/a&gt; 에만 소스 클리핑이 요구된다면 방법이 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="83d43fd9e2a48582721d6f9affffd5098ee4bec9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getUsage()&quot;&gt;&lt;code&gt;getUsage()&lt;/code&gt;&lt;/a&gt; method provides an estimate of the current usage of a memory pool. For a garbage-collected memory pool, the amount of used memory includes the memory occupied by all objects in the pool including both &lt;em&gt;reachable&lt;/em&gt; and &lt;em&gt;unreachable&lt;/em&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;#getUsage()&quot;&gt; &lt;code&gt;getUsage()&lt;/code&gt; &lt;/a&gt; 메소드는 메모리 풀의 현재의 사용량의 추정치를 제공한다. 가비지 수집 된 메모리 풀의 경우 사용 된 메모리 양에는 연결 &lt;em&gt;가능한&lt;/em&gt; 개체 와 &lt;em&gt;연결할 수없는&lt;/em&gt; 개체 를 모두 포함하여 풀의 모든 개체가 차지하는 메모리가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="559aadec9e879fc10fa12147be2c7e895971e5af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getUserInfo()&quot;&gt;&lt;code&gt;getUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getPath()&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getQuery()&quot;&gt;&lt;code&gt;getQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getFragment()&quot;&gt;&lt;code&gt;getFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getAuthority()&quot;&gt;&lt;code&gt;getAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getSchemeSpecificPart()&quot;&gt;&lt;code&gt;getSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods decode any escaped octets in their corresponding components. The strings returned by these methods may contain both</source>
          <target state="translated">&lt;a href=&quot;#getUserInfo()&quot;&gt; &lt;code&gt;getUserInfo&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#getPath()&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#getQuery()&quot;&gt; &lt;code&gt;getQuery&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#getFragment()&quot;&gt; &lt;code&gt;getFragment&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#getAuthority()&quot;&gt; &lt;code&gt;getAuthority&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getSchemeSpecificPart()&quot;&gt; &lt;code&gt;getSchemeSpecificPart&lt;/code&gt; 의&lt;/a&gt; 방법은 대응하는 부품에있는 이스케이프 옥텟을 디코딩. 이 메서드에서 반환하는 문자열에는</target>
        </trans-unit>
        <trans-unit id="c1ecc682c394d5429ead1bc5e6b032e53a1e3cfd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getUserPrincipalLookupService()&quot;&gt;&lt;code&gt;getUserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt;&lt;code&gt;UserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; to lookup users or groups by name.</source>
          <target state="translated">&lt;a href=&quot;#getUserPrincipalLookupService()&quot;&gt; &lt;code&gt;getUserPrincipalLookupService&lt;/code&gt; 의&lt;/a&gt; 방법은 반환 &lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt; &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; &lt;/a&gt; 이름으로 사용자 또는 그룹을 조회 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="745b9cdeea817364e334364a39d0a45c736ab00e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isCollectionUsageThresholdSupported()&quot;&gt;&lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if this functionality is supported.</source>
          <target state="translated">&lt;a href=&quot;#isCollectionUsageThresholdSupported()&quot;&gt; &lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt; &lt;/a&gt; 메소드는이 기능이 지원되는지를 결정하기 위해 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="90fec33b491d33702594f93509a72af9d3f5cb90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isProxyClass(java.lang.Class)&quot;&gt;&lt;code&gt;Proxy.isProxyClass&lt;/code&gt;&lt;/a&gt; method can be used to determine if a given class is a proxy class.</source>
          <target state="translated">&lt;a href=&quot;#isProxyClass(java.lang.Class)&quot;&gt; &lt;code&gt;Proxy.isProxyClass&lt;/code&gt; 의&lt;/a&gt; 방법은 소정의 클래스가 프록시 클래스인지를 결정하기 위해 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="2c598e99d45cbbe9a04f38fa8dc91096cbd3a7d8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isThreadContentionMonitoringSupported()&quot;&gt;&lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports thread contention monitoring. The thread contention monitoring is disabled by default. The &lt;a href=&quot;#setThreadContentionMonitoringEnabled(boolean)&quot;&gt;&lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt;&lt;/a&gt; method can be used to enable thread contention monitoring.</source>
          <target state="translated">&lt;a href=&quot;#isThreadContentionMonitoringSupported()&quot;&gt; &lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt; &lt;/a&gt; 메소드는 자바 가상 머신 지원 스레드 경합 모니터링 여부를 결정하기 위해 사용될 수있다. 스레드 경합 모니터링은 기본적으로 비활성화되어 있습니다. &lt;a href=&quot;#setThreadContentionMonitoringEnabled(boolean)&quot;&gt; &lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt; &lt;/a&gt; 방법 스레드 경합 모니터링을 활성화하기 위해 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="7b9631e9f6d40e6b620e784137534f813361a172" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isThreadCpuTimeSupported()&quot;&gt;&lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for any thread. The &lt;a href=&quot;#isCurrentThreadCpuTimeSupported()&quot;&gt;&lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for the current thread. A Java virtual machine implementation that supports CPU time measurement for any thread will also support that for the current thread.</source>
          <target state="translated">&lt;a href=&quot;#isThreadCpuTimeSupported()&quot;&gt; &lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt; 메소드는 자바 가상 머신이 지원하는 모든 스레드에 대해 CPU 시간을 측정하는 경우를 결정하기 위해 사용될 수있다. &lt;a href=&quot;#isCurrentThreadCpuTimeSupported()&quot;&gt; &lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt; 메소드는 자바 가상 머신 지원은 현재 스레드에 대해 CPU 시간을 측정하는 경우를 결정하기 위해 사용될 수있다. 모든 스레드에 대한 CPU 시간 측정을 지원하는 Java 가상 머신 구현은 현재 스레드에 대해서도이를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="07a942a3ea7a2470fc40b97213df775f8393b88e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface)&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt;&lt;/a&gt; method is used to join a group and receive all multicast datagrams sent to the group. A channel may join several multicast groups and may join the same group on several &lt;a href=&quot;../../net/networkinterface&quot;&gt;&lt;code&gt;interfaces&lt;/code&gt;&lt;/a&gt;. Membership is dropped by invoking the &lt;a href=&quot;membershipkey#drop()&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method on the returned &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt;. If the underlying platform supports source filtering then the &lt;a href=&quot;membershipkey#block(java.net.InetAddress)&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;membershipkey#unblock(java.net.InetAddress)&quot;&gt;&lt;code&gt;unblock&lt;/code&gt;&lt;/a&gt; methods can be used to block or unblock multicast datagrams from particular source addresses.</source>
          <target state="translated">(가) &lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface)&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt; &lt;/a&gt; 방법은, 그룹에 가입하고 그룹에 전송 된 모든 멀티 캐스트 데이터 그램을 수신하는 데 사용된다. 채널은 여러 멀티 캐스트 그룹에 가입 할 수 있으며 여러 &lt;a href=&quot;../../net/networkinterface&quot;&gt; &lt;code&gt;interfaces&lt;/code&gt; &lt;/a&gt; 에서 동일한 그룹에 가입 할 수 있습니다 . 반환 된 &lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;membershipkey#drop()&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 Membership을 삭제합니다 . 기본 플랫폼이 소스 필터링을 지원하는 경우 &lt;a href=&quot;membershipkey#block(java.net.InetAddress)&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;membershipkey#unblock(java.net.InetAddress)&quot;&gt; &lt;code&gt;unblock&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 특정 소스 주소에서 멀티 캐스트 데이터 그램을 차단하거나 차단 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9227e6048eb60c8fc84d7128ee8ee2b101cf46af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress)&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt;&lt;/a&gt; method is used to begin receiving datagrams sent to a group whose source address matches a given source address. This method throws &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; if the underlying platform does not support source filtering. Membership is &lt;em&gt;cumulative&lt;/em&gt; and this method may be invoked again with the same group and interface to allow receiving datagrams from other source addresses. The method returns a &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt; that represents membership to receive datagrams from the given source address. Invoking the key's &lt;a href=&quot;membershipkey#drop()&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method drops membership so that datagrams from the source address can no longer be received.</source>
          <target state="translated">(가) &lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress)&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt; &lt;/a&gt; 메소드가 그 소스 어드레스 특정 소스 어드레스와 일치하는 그룹으로 전송 된 데이터 그램의 수신을 개시하는 데 사용된다. 이 메소드는 기본 플랫폼이 소스 필터링을 지원하지 &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt; 경우 UnsupportedOperationException을 발생시킵니다. 멤버십은 &lt;em&gt;누적되며이&lt;/em&gt; 메소드는 다른 소스 주소에서 데이터 그램을 수신 할 수 있도록 동일한 그룹 및 인터페이스로 다시 호출 될 수 있습니다. 이 메서드는 지정된 소스 주소에서 데이터 그램을 수신하기 위한 &lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; &lt;/a&gt; 을 나타내는 MembershipKey 를 반환합니다 . 키의 &lt;a href=&quot;membershipkey#drop()&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt; 메소드를 호출하면 멤버십이 삭제되므로 소스 주소의 데이터 그램을 더 이상 수신 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="283c2ba216ecb30af2542116821ebfc3dd6848c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#load(java.io.Reader)&quot;&gt;&lt;code&gt;load(Reader)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;#store(java.io.Writer,java.lang.String)&quot;&gt;&lt;code&gt;store(Writer, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties from and to a character based stream in a simple line-oriented format specified below. The &lt;a href=&quot;#load(java.io.InputStream)&quot;&gt;&lt;code&gt;load(InputStream)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;#store(java.io.OutputStream,java.lang.String)&quot;&gt;&lt;code&gt;store(OutputStream, String)&lt;/code&gt;&lt;/a&gt; methods work the same way as the load(Reader)/store(Writer, String) pair, except the input/output stream is encoded in ISO 8859-1 character encoding. Characters that cannot be directly represented in this encoding can be written using Unicode escapes as defined in section 3.3 of</source>
          <target state="translated">&lt;a href=&quot;#load(java.io.Reader)&quot;&gt; &lt;code&gt;load(Reader)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;#store(java.io.Writer,java.lang.String)&quot;&gt; &lt;code&gt;store(Writer, String)&lt;/code&gt; &lt;/a&gt; 단순한 행 지향 형식에서에서와 문자 기반 스트림 방법로드 및 저장 특성은 아래에 지정된. &lt;a href=&quot;#load(java.io.InputStream)&quot;&gt; &lt;code&gt;load(InputStream)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;#store(java.io.OutputStream,java.lang.String)&quot;&gt; &lt;code&gt;store(OutputStream, String)&lt;/code&gt; &lt;/a&gt; 입력 / 출력 스트림은 ISO 8859-1 문자 인코딩으로 인코딩 제외 방법은, 부하 (리더) / 스토어 (작가, 문자열) 쌍과 동일한 방식으로 작동한다. 이 인코딩에서 직접 표현할 수없는 문자는 섹션 3.3에 정의 된대로 유니 코드 이스케이프를 사용하여 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c64782820ca91ace54f1f86ea9f86492a8d8863" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#loadFromXML(java.io.InputStream)&quot;&gt;&lt;code&gt;loadFromXML(InputStream)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#storeToXML(java.io.OutputStream,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties in a simple XML format. By default the UTF-8 character encoding is used, however a specific encoding may be specified if required. Implementations are required to support UTF-8 and UTF-16 and may support other encodings. An XML properties document has the following DOCTYPE declaration:</source>
          <target state="translated">&lt;a href=&quot;#loadFromXML(java.io.InputStream)&quot;&gt; &lt;code&gt;loadFromXML(InputStream)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#storeToXML(java.io.OutputStream,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt; &lt;/a&gt; 간단한 XML 형식의 방법로드 및 저장 특성. 기본적으로 UTF-8 문자 인코딩이 사용되지만 필요한 경우 특정 인코딩을 지정할 수 있습니다. 구현은 UTF-8 및 UTF-16을 지원하는 데 필요하며 다른 인코딩을 지원할 수 있습니다. XML 속성 문서에는 다음과 같은 DOCTYPE 선언이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff9a153b92e71fa09c965e8f74027cdf39942b60" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lock&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; used to synchronize operations on the returned &lt;code&gt;Reader&lt;/code&gt; is not specified.</source>
          <target state="translated">&lt;a href=&quot;#lock&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt; 반환에 동기화 작업에 사용 &lt;code&gt;Reader&lt;/code&gt; 가 지정되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ea5963a2b34831a1c71c2fbc0dd2b148d5c67d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lock&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; used to synchronize operations on the returned &lt;code&gt;Writer&lt;/code&gt; is not specified.</source>
          <target state="translated">&lt;a href=&quot;#lock&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt; 반환에 동기화 작업에 사용 &lt;code&gt;Writer&lt;/code&gt; 지정되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="84550bbdc380964aefe4e00daea2a1ea69eda243" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lookingAt()&quot;&gt;&lt;code&gt;lookingAt&lt;/code&gt;&lt;/a&gt; method attempts to match the input sequence, starting at the beginning, against the pattern.</source>
          <target state="translated">&lt;a href=&quot;#lookingAt()&quot;&gt; &lt;code&gt;lookingAt&lt;/code&gt; 에&lt;/a&gt; 있어서의 시도는 패턴에 대해, 처음부터 시작하여, 입력 순서와 일치한다.</target>
        </trans-unit>
        <trans-unit id="78c866a477b89a46ec489346a183a845bc204d84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt; for this lookup must include &lt;a href=&quot;#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt; access as default (package) members will be accessible to the class. The &lt;code&gt;PACKAGE&lt;/code&gt; lookup mode serves to authenticate that the lookup object was created by a caller in the runtime package (or derived from a lookup originally created by suitably privileged code to a target class in the runtime package).</source>
          <target state="translated">이 &lt;a href=&quot;#lookupModes()&quot;&gt;조회를&lt;/a&gt; 위한 조회 모드 는 기본 (패키지) 멤버가 클래스에 액세스 할 수 있으므로 &lt;a href=&quot;#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt; 액세스를 포함해야합니다 . &lt;code&gt;PACKAGE&lt;/code&gt; 룩업 모드 룩업 객체가 런타임 패키지에서 호출자에 의해 생성 된 (또는 원래 런타임 패키지의 대상 클래스에 적합 특권 코드에 의해 생성 된 조회로부터 유래)되었는지를 인증하는 역할을한다.</target>
        </trans-unit>
        <trans-unit id="af8af1d74c30b23540127f0b0b432dad9af185a7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#matches()&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method attempts to match the entire input sequence against the pattern.</source>
          <target state="translated">&lt;a href=&quot;#matches()&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt; 방법을 시도 패턴에 대한 전체 입력 순서와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="9cf613d99e0fc77707140b31310fa50f3b661bdc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#newWatchService()&quot;&gt;&lt;code&gt;newWatchService&lt;/code&gt;&lt;/a&gt; method creates a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; that may be used to watch objects for changes and events.</source>
          <target state="translated">&lt;a href=&quot;#newWatchService()&quot;&gt; &lt;code&gt;newWatchService&lt;/code&gt; 의&lt;/a&gt; 방법은 생성 &lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt; 변경 및 이벤트에 대한 개체를 시청하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f2779d651def565116a29cb04d620dbba2f2dd2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#next()&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#hasNext()&quot;&gt;&lt;code&gt;hasNext()&lt;/code&gt;&lt;/a&gt; methods and their companion methods (such as &lt;a href=&quot;#nextInt()&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#hasNextInt()&quot;&gt;&lt;code&gt;hasNextInt()&lt;/code&gt;&lt;/a&gt;) first skip any input that matches the delimiter pattern, and then attempt to return the next token. Both &lt;code&gt;hasNext()&lt;/code&gt; and &lt;code&gt;next()&lt;/code&gt; methods may block waiting for further input. Whether a &lt;code&gt;hasNext()&lt;/code&gt; method blocks has no connection to whether or not its associated &lt;code&gt;next()&lt;/code&gt; method will block. The &lt;a href=&quot;#tokens()&quot;&gt;&lt;code&gt;tokens()&lt;/code&gt;&lt;/a&gt; method may also block waiting for input.</source>
          <target state="translated">&lt;a href=&quot;#next()&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#hasNext()&quot;&gt; &lt;code&gt;hasNext()&lt;/code&gt; &lt;/a&gt; 메소드와 (예 : 자신의 동반자 방법 &lt;a href=&quot;#nextInt()&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#hasNextInt()&quot;&gt; &lt;code&gt;hasNextInt()&lt;/code&gt; &lt;/a&gt; 첫 번째 단락 지어 문자 패턴에 일치하는 입력을 건너 뛰고 다음의 토큰을 돌려 주려고합니다). &lt;code&gt;hasNext()&lt;/code&gt; 및 &lt;code&gt;next()&lt;/code&gt; 메서드 모두 추가 입력 대기를 차단할 수 있습니다. 되든지 관계없이 &lt;code&gt;hasNext()&lt;/code&gt; 메소드 블록 관련 여부에 아무런 관련이없는 &lt;code&gt;next()&lt;/code&gt; 메소드를 차단한다. &lt;a href=&quot;#tokens()&quot;&gt; &lt;code&gt;tokens()&lt;/code&gt; &lt;/a&gt; 메소드는, 입력 대기를 방해 할 수있다.</target>
        </trans-unit>
        <trans-unit id="a4eabcb070201104bd4072f1fbef69e32c7ed568" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#of()&quot;&gt;&lt;code&gt;Map.of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ofEntries(java.util.Map.Entry...)&quot;&gt;&lt;code&gt;Map.ofEntries&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#copyOf(java.util.Map)&quot;&gt;&lt;code&gt;Map.copyOf&lt;/code&gt;&lt;/a&gt; static factory methods provide a convenient way to create unmodifiable maps. The &lt;code&gt;Map&lt;/code&gt; instances created by these methods have the following characteristics:</source>
          <target state="translated">&lt;a href=&quot;#of()&quot;&gt; &lt;code&gt;Map.of&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ofEntries(java.util.Map.Entry...)&quot;&gt; &lt;code&gt;Map.ofEntries&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#copyOf(java.util.Map)&quot;&gt; &lt;code&gt;Map.copyOf&lt;/code&gt; &lt;/a&gt; static 팩토리 메소드는 변경 불가능한 맵을 생성하는 편리한 방법을 제공합니다. &lt;code&gt;Map&lt;/code&gt; 이러한 방법으로 생성 된 인스턴스는 다음과 같은 특징이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="5a3652c966b080da38bf2f411dad00b6802884ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#of(E...)&quot;&gt;&lt;code&gt;List.of&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt;&lt;code&gt;List.copyOf&lt;/code&gt;&lt;/a&gt; static factory methods provide a convenient way to create unmodifiable lists. The &lt;code&gt;List&lt;/code&gt; instances created by these methods have the following characteristics:</source>
          <target state="translated">&lt;a href=&quot;#of(E...)&quot;&gt; &lt;code&gt;List.of&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt; &lt;code&gt;List.copyOf&lt;/code&gt; &lt;/a&gt; static 팩토리 메소드는 변경 불가능한 목록을 만들 수있는 편리한 방법을 제공합니다. &lt;code&gt;List&lt;/code&gt; 이러한 방법으로 생성 된 인스턴스는 다음과 같은 특징이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="b75ebf0e3eb357a1a5138bef731809fcdcfbdf5c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#of(E...)&quot;&gt;&lt;code&gt;Set.of&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt;&lt;code&gt;Set.copyOf&lt;/code&gt;&lt;/a&gt; static factory methods provide a convenient way to create unmodifiable sets. The &lt;code&gt;Set&lt;/code&gt; instances created by these methods have the following characteristics:</source>
          <target state="translated">&lt;a href=&quot;#of(E...)&quot;&gt; &lt;code&gt;Set.of&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt; &lt;code&gt;Set.copyOf&lt;/code&gt; &lt;/a&gt; 정적 팩토리 메소드는 변경 불가능한 세트를 만들 수있는 편리한 방법을 제공합니다. &lt;code&gt;Set&lt;/code&gt; 이 방법에 의해 생성 된 인스턴스는 다음과 같은 특징이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="fc4145739906a5fafcf27e7b758feb7e10fa3e1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#offer(E)&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt; method inserts an element if possible, otherwise returning &lt;code&gt;false&lt;/code&gt;. This differs from the &lt;a href=&quot;collection#add(E)&quot;&gt;&lt;code&gt;Collection.add&lt;/code&gt;&lt;/a&gt; method, which can fail to add an element only by throwing an unchecked exception. The &lt;code&gt;offer&lt;/code&gt; method is designed for use when failure is a normal, rather than exceptional occurrence, for example, in fixed-capacity (or &quot;bounded&quot;) queues.</source>
          <target state="translated">&lt;a href=&quot;#offer(E)&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt; 가능하다면 방법은, 그렇지 않으면 반환 요소를 삽입 &lt;code&gt;false&lt;/code&gt; . 이것은 체크되지 않은 예외를 던져서 만 요소를 추가하지 못할 수 있는 &lt;a href=&quot;collection#add(E)&quot;&gt; &lt;code&gt;Collection.add&lt;/code&gt; &lt;/a&gt; 메서드 와 다릅니다 . &lt;code&gt;offer&lt;/code&gt; 실패 고정 용량, 예를 들면, 정상이 아닌 경우 예외 발생 방법 (또는 &quot;경계&quot;) 큐를 사용하도록 설계된다.</target>
        </trans-unit>
        <trans-unit id="c9f6349a4ae2d3a238eb3271977a5ff56ad4db25" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#permissions()&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentrypermission&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#permissions()&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt; 컴포넌트의 집합 &lt;a href=&quot;aclentrypermission&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="404a185f9841c99d54d179b827ceceb997785ba3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#position(long)&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#truncate(long)&quot;&gt;&lt;code&gt;truncate&lt;/code&gt;&lt;/a&gt; methods which do not otherwise have a value to return are specified to return the channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">&lt;a href=&quot;#position(long)&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#truncate(long)&quot;&gt; &lt;code&gt;truncate&lt;/code&gt; &lt;/a&gt; 반환 값을 돌려주지 않는 방법은 자신을 호출 한 채널 정보를 돌려줍니다. 이를 통해 메서드 호출이 연결될 수 있습니다. 이 인터페이스의 구현은 구현 클래스에 대한 메서드 호출이 연결될 수 있도록 반환 유형을 전문화해야합니다.</target>
        </trans-unit>
        <trans-unit id="7901edc883e754854d8ae590ec6d7d61281b0f1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#principal()&quot;&gt;&lt;code&gt;principal&lt;/code&gt;&lt;/a&gt; component, sometimes called the &quot;who&quot; component, is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; corresponding to the identity that the entry grants or denies access</source>
          <target state="translated">&lt;a href=&quot;#principal()&quot;&gt; &lt;code&gt;principal&lt;/code&gt; &lt;/a&gt; 때때로 &quot;사람&quot;구성 요소라는 구성 요소는, A는 &lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; 는&lt;/a&gt; 엔트리 부여 또는 액세스를 거부하는 정체성에 해당하는</target>
        </trans-unit>
        <trans-unit id="0252e2b5ac28e835bd24e1eb9ad03a80bbc13d38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#read(java.io.InputStream,java.lang.Object)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method can be used to initialize the component from a &lt;code&gt;Reader&lt;/code&gt;. Note that if the content type is HTML, relative references (e.g. for things like images) can't be resolved unless the &amp;lt;base&amp;gt; tag is used or the &lt;em&gt;Base&lt;/em&gt; property on &lt;code&gt;HTMLDocument&lt;/code&gt; is set. In this case the current &lt;code&gt;EditorKit&lt;/code&gt; will be used, and the content type will be expected to be of this type.</source>
          <target state="translated">&lt;a href=&quot;#read(java.io.InputStream,java.lang.Object)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 방법은에서 구성 요소를 초기화하는 데 사용할 수있는 &lt;code&gt;Reader&lt;/code&gt; . 콘텐츠 유형이 HTML 인 경우 &amp;lt;base&amp;gt; 태그를 사용하거나 &lt;code&gt;HTMLDocument&lt;/code&gt; 의 &lt;em&gt;Base&lt;/em&gt; 속성을 설정 하지 않으면 상대 참조 (예 : 이미지와 같은 항목)를 확인할 수 없습니다 . 이 경우 현재 &lt;code&gt;EditorKit&lt;/code&gt; 이 사용되며 콘텐츠 유형은이 유형이 될 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="c3c9ff5626e9554f693ad6ddf85f19c656c52ccb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods defined by this class allow a timeout to be specified when initiating a read or write operation. If the timeout elapses before an operation completes then the operation completes with the exception &lt;a href=&quot;interruptedbytimeoutexception&quot;&gt;&lt;code&gt;InterruptedByTimeoutException&lt;/code&gt;&lt;/a&gt;. A timeout may leave the channel, or the underlying connection, in an inconsistent state. Where the implementation cannot guarantee that bytes have not been read from the channel then it puts the channel into an implementation specific &lt;em&gt;error state&lt;/em&gt;. A subsequent attempt to initiate a &lt;code&gt;read&lt;/code&gt; operation causes an unspecified runtime exception to be thrown. Similarly if a &lt;code&gt;write&lt;/code&gt; operation times out and the implementation cannot guarantee bytes have not been written to the channel then further attempts to &lt;code&gt;write&lt;/code&gt; to the channel cause an unspecified runtime exception to be thrown. When a timeout elapses then the state of the &lt;a href=&quot;../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, or the sequence of buffers, for the I/O operation is not defined. Buffers should be discarded or at least care must be taken to ensure that the buffers are not accessed while the channel remains open. All methods that accept timeout parameters treat values less than or equal to zero to mean that the I/O operation does not timeout.</source>
          <target state="translated">&lt;a href=&quot;#read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 이 클래스에 의해 정의 된 메소드는 읽기 나 쓰기 작업을 시작할 때 타임 아웃을 지정할 수 있습니다. 작업이 완료되기 전에 시간 초과가 경과하면 &lt;a href=&quot;interruptedbytimeoutexception&quot;&gt; &lt;code&gt;InterruptedByTimeoutException&lt;/code&gt; &lt;/a&gt; 예외와 함께 작업이 완료됩니다 . 시간 초과로 인해 채널 또는 기본 연결이 일관되지 않은 상태로 남을 수 있습니다. 구현시 채널에서 바이트를 읽지 않았 음을 보장 할 수없는 경우 채널을 구현 특정 &lt;em&gt;오류 상태로&lt;/em&gt; 만듭니다. 이후 &lt;code&gt;read&lt;/code&gt; 작업 을 시작하려고 하면 지정되지 않은 런타임 예외가 throw됩니다. 마찬가지로 &lt;code&gt;write&lt;/code&gt; 작업 시간이 초과되고 구현에서 바이트가 채널에 기록되지 않았 음을 보장 할 수 없으며 채널에 추가로 &lt;code&gt;write&lt;/code&gt; 하면 지정되지 않은 런타임 예외가 throw됩니다. 시간 초과가 경과 하면 I / O 작업 에 대한 &lt;a href=&quot;../bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; &lt;/a&gt; 상태 또는 버퍼 시퀀스가 ​​정의되지 않습니다. 버퍼를 버리거나 채널이 열려있는 동안 버퍼에 액세스하지 않도록 최소한주의해야합니다. 시간 초과 매개 변수를 허용하는 모든 메서드는 I / O 작업이 시간 초과되지 않음을 의미하기 위해 0보다 작거나 같은 값을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="1d9fe06809d0a55ee94fa7c5575ab00fb2cbf4e3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#readAttributes()&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method is used to read the file's attributes. The file &lt;a href=&quot;posixfileattributes#owner()&quot;&gt;&lt;code&gt;owner&lt;/code&gt;&lt;/a&gt; is represented by a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; that is the identity of the file owner for the purposes of access control. The &lt;a href=&quot;posixfileattributes#group()&quot;&gt;&lt;code&gt;group-owner&lt;/code&gt;&lt;/a&gt;, represented by a &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt;, is the identity of the group owner, where a group is an identity created for administrative purposes so as to determine the access rights for the members of the group.</source>
          <target state="translated">&lt;a href=&quot;#readAttributes()&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; 의&lt;/a&gt; 방법은 파일의 속성을 읽기 위해 사용된다. 파일 &lt;a href=&quot;posixfileattributes#owner()&quot;&gt; &lt;code&gt;owner&lt;/code&gt; &lt;/a&gt; 는 액세스 제어를 위해 파일 소유자의 ID 인 &lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt; 로 표시됩니다 . &lt;a href=&quot;posixfileattributes#group()&quot;&gt; &lt;code&gt;group-owner&lt;/code&gt; &lt;/a&gt; a로 표현 &lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; 는&lt;/a&gt; , 그룹이 그룹의 구성원에 대한 액세스 권한을 결정하기 위해 관리 목적으로 만든 정체성 인 그룹 소유자의 신원입니다.</target>
        </trans-unit>
        <trans-unit id="ef05e8d8630d24a4539bbca297c4ec8e95476f17" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#redirectErrorStream()&quot;&gt;&lt;code&gt;redirectErrorStream()&lt;/code&gt;&lt;/a&gt; of each ProcessBuilder applies to the respective process. If set to &lt;code&gt;true&lt;/code&gt;, the error stream is written to the same stream as standard output.</source>
          <target state="translated">각 ProcessBuilder 의 &lt;a href=&quot;#redirectErrorStream()&quot;&gt; &lt;code&gt;redirectErrorStream()&lt;/code&gt; &lt;/a&gt; 은 해당 프로세스에 적용됩니다. &lt;code&gt;true&lt;/code&gt; 로 설정 하면 오류 스트림이 표준 출력과 동일한 스트림에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="d60d96790fcf12bd52c7ceb255ee2290d4d63d7d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#remove()&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#poll()&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; methods remove and return the head of the queue. Exactly which element is removed from the queue is a function of the queue's ordering policy, which differs from implementation to implementation. The &lt;code&gt;remove()&lt;/code&gt; and &lt;code&gt;poll()&lt;/code&gt; methods differ only in their behavior when the queue is empty: the &lt;code&gt;remove()&lt;/code&gt; method throws an exception, while the &lt;code&gt;poll()&lt;/code&gt; method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#remove()&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;#poll()&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt; 메소드는 제거 큐의 헤드를 반환한다. 큐에서 정확히 제거되는 요소는 구현마다 다른 큐의 순서 지정 정책의 기능입니다. &lt;code&gt;remove()&lt;/code&gt; 와 &lt;code&gt;poll()&lt;/code&gt; 큐가 비어있을 때 방법은 자신의 행동 만 다른 다음 &lt;code&gt;remove()&lt;/code&gt; 메소드는 동안, 예외가 발생 &lt;code&gt;poll()&lt;/code&gt; 메소드의 반환 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b71740ad55dd486243123249a69711ae3adb45e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#removeEldestEntry(java.util.Map.Entry)&quot;&gt;&lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt;&lt;/a&gt; method may be overridden to impose a policy for removing stale mappings automatically when new mappings are added to the map.</source>
          <target state="translated">&lt;a href=&quot;#removeEldestEntry(java.util.Map.Entry)&quot;&gt; &lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt; &lt;/a&gt; 메소드는 맵에 새로운 매핑을 추가 할 때, 자동적으로 무효 인 매핑을 제거하기위한 정책을 부과 오버라이드 (override) 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f388f89464ce1efc48db1ad1eb74d58994279c54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#select()&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#select(long)&quot;&gt;&lt;code&gt;select(long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#selectNow()&quot;&gt;&lt;code&gt;selectNow()&lt;/code&gt;&lt;/a&gt; methods add the keys of channels ready to perform an operation to the selected-key set, or update the ready-operation set of keys already in the selected-key set.</source>
          <target state="translated">&lt;a href=&quot;#select()&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#select(long)&quot;&gt; &lt;code&gt;select(long)&lt;/code&gt; &lt;/a&gt; 하고, &lt;a href=&quot;#selectNow()&quot;&gt; &lt;code&gt;selectNow()&lt;/code&gt; &lt;/a&gt; 메서드는 선택된 키 세트에 이미 키의 실행 가능 조작 세트를 선택 키 세트에 작업을 수행하거나 업데이트 할 준비가 채널의 키를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3d9fe37bdba1bdbf40ca515feaaf9c3f126885ae" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#select(java.util.function.Consumer)&quot;&gt;&lt;code&gt;select(Consumer)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt;&lt;code&gt;select(Consumer, long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#selectNow(java.util.function.Consumer)&quot;&gt;&lt;code&gt;selectNow(Consumer)&lt;/code&gt;&lt;/a&gt; methods perform an</source>
          <target state="translated">&lt;a href=&quot;#select(java.util.function.Consumer)&quot;&gt; &lt;code&gt;select(Consumer)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt; &lt;code&gt;select(Consumer, long)&lt;/code&gt; &lt;/a&gt; 하고, &lt;a href=&quot;#selectNow(java.util.function.Consumer)&quot;&gt; &lt;code&gt;selectNow(Consumer)&lt;/code&gt; &lt;/a&gt; 방법은 수행</target>
        </trans-unit>
        <trans-unit id="fc7a14c324b4c491d6e144c3f63588c2f48f7a71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt;&lt;code&gt;setCalendar(Calendar)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setNumberFormat(java.text.NumberFormat)&quot;&gt;&lt;code&gt;setNumberFormat(NumberFormat)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt;&lt;code&gt;setTimeZone(TimeZone)&lt;/code&gt;&lt;/a&gt; methods do not throw &lt;code&gt;NullPointerException&lt;/code&gt; when their parameter is &lt;code&gt;null&lt;/code&gt;, but any subsequent operations on the same instance may throw &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt; &lt;code&gt;setCalendar(Calendar)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#setNumberFormat(java.text.NumberFormat)&quot;&gt; &lt;code&gt;setNumberFormat(NumberFormat)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt; &lt;code&gt;setTimeZone(TimeZone)&lt;/code&gt; &lt;/a&gt; 방법을 포기하지 않는다면 &lt;code&gt;NullPointerException&lt;/code&gt; 자신의 매개 변수 인 경우 &lt;code&gt;null&lt;/code&gt; 하지만 동일한 인스턴스에 후속 작업이 던질 수 &lt;code&gt;NullPointerException&lt;/code&gt; 이 .</target>
        </trans-unit>
        <trans-unit id="30fa18ad27f297296b044126d2041ea7ea479b67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#setPage(java.net.URL)&quot;&gt;&lt;code&gt;setPage&lt;/code&gt;&lt;/a&gt; method can be used to initialize the component from a URL. In this case, the content type will be determined from the URL, and the registered &lt;code&gt;EditorKit&lt;/code&gt; for that content type will be set.</source>
          <target state="translated">&lt;a href=&quot;#setPage(java.net.URL)&quot;&gt; &lt;code&gt;setPage&lt;/code&gt; 의&lt;/a&gt; 방법은 URL에서 구성 요소를 초기화 할 수 있습니다. 이 경우 콘텐츠 유형은 URL에서 결정되며 해당 콘텐츠 유형에 대해 등록 된 &lt;code&gt;EditorKit&lt;/code&gt; 이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="12baf4ccc1db7688f8d44afcde7b6744bb5c9dfe" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#setText(java.lang.String)&quot;&gt;&lt;code&gt;setText&lt;/code&gt;&lt;/a&gt; method can be used to initialize the component from a string. In this case the current &lt;code&gt;EditorKit&lt;/code&gt; will be used, and the content type will be expected to be of this type.</source>
          <target state="translated">&lt;a href=&quot;#setText(java.lang.String)&quot;&gt; &lt;code&gt;setText&lt;/code&gt; &lt;/a&gt; 방법은 문자열 요소를 초기화하기 위해 사용될 수있다. 이 경우 현재 &lt;code&gt;EditorKit&lt;/code&gt; 이 사용되며 콘텐츠 유형은이 유형이 될 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="5ba01f383f346e26e2c6a5defafb5896d214129d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#shutdown()&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; method is used to initiate an &lt;em&gt;orderly shutdown&lt;/em&gt; of a group. An orderly shutdown marks the group as shutdown; further attempts to construct a channel that binds to the group will throw &lt;a href=&quot;shutdownchannelgroupexception&quot;&gt;&lt;code&gt;ShutdownChannelGroupException&lt;/code&gt;&lt;/a&gt;. Whether or not a group is shutdown can be tested using the &lt;a href=&quot;#isShutdown()&quot;&gt;&lt;code&gt;isShutdown&lt;/code&gt;&lt;/a&gt; method. Once shutdown, the group &lt;em&gt;terminates&lt;/em&gt; when all asynchronous channels that are bound to the group are closed, all actively executing completion handlers have run to completion, and resources used by the group are released. No attempt is made to stop or interrupt threads that are executing completion handlers. The &lt;a href=&quot;#isTerminated()&quot;&gt;&lt;code&gt;isTerminated&lt;/code&gt;&lt;/a&gt; method is used to test if the group has terminated, and the &lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; method can be used to block until the group has terminated.</source>
          <target state="translated">&lt;a href=&quot;#shutdown()&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt; 방법은 초기화하는 데 사용되는 &lt;em&gt;정상 종료&lt;/em&gt; 그룹을. 정상적인 종료는 그룹을 종료로 표시합니다. 그룹에 바인드하는 채널을 생성하려는 추가 시도는 &lt;a href=&quot;shutdownchannelgroupexception&quot;&gt; &lt;code&gt;ShutdownChannelGroupException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다. 그룹이 종료되었는지 여부는 &lt;a href=&quot;#isShutdown()&quot;&gt; &lt;code&gt;isShutdown&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 테스트 할 수 있습니다 . 종료되면, 그룹의 &lt;em&gt;종료는&lt;/em&gt; 그룹에 바인딩 된 모든 비동기 채널이 폐쇄 될 때, 모든 적극적으로 실행 완료 핸들러는 실행을 완료하고, 그룹에 의해 사용되는 리소스는 해제됩니다. 완료 핸들러를 실행중인 스레드를 중지하거나 인터럽트하려고 시도하지 않습니다. &lt;a href=&quot;#isTerminated()&quot;&gt; &lt;code&gt;isTerminated&lt;/code&gt; 에&lt;/a&gt; 있어서, 상기 그룹이 종료되었는지 검사하기 위해 사용되며&lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 그룹이 종료 될 때까지 차단할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb8d7794284deaddd5c051be877e293a50aade4e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#shutdownNow()&quot;&gt;&lt;code&gt;shutdownNow&lt;/code&gt;&lt;/a&gt; method can be used to initiate a &lt;em&gt;forceful shutdown&lt;/em&gt; of the group. In addition to the actions performed by an orderly shutdown, the &lt;code&gt;shutdownNow&lt;/code&gt; method closes all open channels in the group as if by invoking the &lt;a href=&quot;asynchronouschannel#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#shutdownNow()&quot;&gt; &lt;code&gt;shutdownNow&lt;/code&gt; 의의&lt;/a&gt; 방법은 시작하는 데 사용할 수있는 &lt;em&gt;강력한 종료&lt;/em&gt; 그룹을. 순서에 따른 종료에 의해 수행되는 작업 외에도 &lt;code&gt;shutdownNow&lt;/code&gt; 메서드는 &lt;a href=&quot;asynchronouschannel#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하는 것처럼 그룹의 모든 열린 채널을 닫습니다 .</target>
        </trans-unit>
        <trans-unit id="33fb27c2c564d3705cef054d1baae924b5d2bf54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#startPipeline(java.util.List)&quot;&gt;&lt;code&gt;startPipeline&lt;/code&gt;&lt;/a&gt; method can be invoked to create a pipeline of new processes that send the output of each process directly to the next process. Each process has the attributes of its respective ProcessBuilder.</source>
          <target state="translated">&lt;a href=&quot;#startPipeline(java.util.List)&quot;&gt; &lt;code&gt;startPipeline&lt;/code&gt; 의&lt;/a&gt; 방법은 다음 공정에 직접 각 프로세스의 출력을 보내 새로운 프로세스의 파이프 라인을 만들기 위해 호출 할 수 있습니다. 각 프로세스에는 해당 ProcessBuilder의 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e337b45e7f50fae2c01488f43bd843f36ebcb157" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#syncAll(java.lang.invoke.MutableCallSite%5B%5D)&quot;&gt;&lt;code&gt;syncAll&lt;/code&gt;&lt;/a&gt; operation provides a way to force threads to accept a new target value, even if there is no other synchronization.</source>
          <target state="translated">&lt;a href=&quot;#syncAll(java.lang.invoke.MutableCallSite%5B%5D)&quot;&gt; &lt;code&gt;syncAll&lt;/code&gt; 의&lt;/a&gt; 작업은 다른 동기가없는 경우에도, 새로운 목표 값을 받아 스레드를 강제 할 수있는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="992fc683c8b560dbb6114a38df797c785f0f9454" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toASCIIString()&quot;&gt;&lt;code&gt;toASCIIString&lt;/code&gt;&lt;/a&gt; method returns a fully quoted and encoded URI string that does not contain any</source>
          <target state="translated">&lt;a href=&quot;#toASCIIString()&quot;&gt; &lt;code&gt;toASCIIString&lt;/code&gt; 의&lt;/a&gt; 방법은 포함되지 않은 완전히 인용 인코딩 된 URI 문자열을 반환</target>
        </trans-unit>
        <trans-unit id="35726dda3d36345e921ec2f26c1649acac41b9a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toDisplayString()&quot;&gt;&lt;code&gt;toDisplayString()&lt;/code&gt;&lt;/a&gt; method allows you to obtain the localized string for a locale independent key from a predefined &lt;code&gt;ResourceBundle&lt;/code&gt; for the keys defined in this class. This localized string is intended to be readable by humans.</source>
          <target state="translated">&lt;a href=&quot;#toDisplayString()&quot;&gt; &lt;code&gt;toDisplayString()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하면 미리 정의에서 로케일에 의존하지 않는 키의 지역 문자열을 취득 할 수 있습니다 &lt;code&gt;ResourceBundle&lt;/code&gt; 의 이 클래스에서 정의 된 키에 대해서입니다. 이 지역화 된 문자열은 사람이 읽을 수 있도록 만들어졌습니다.</target>
        </trans-unit>
        <trans-unit id="65b4b7be65a52928b9c78e34dccbe47a502708e2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toEngineeringString()&quot;&gt;&lt;code&gt;toEngineeringString()&lt;/code&gt;&lt;/a&gt; method may be used for presenting numbers with exponents in engineering notation, and the &lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt;&lt;code&gt;setScale&lt;/code&gt;&lt;/a&gt; method may be used for rounding a &lt;code&gt;BigDecimal&lt;/code&gt; so it has a known number of digits after the decimal point.</source>
          <target state="translated">&lt;a href=&quot;#toEngineeringString()&quot;&gt; &lt;code&gt;toEngineeringString()&lt;/code&gt; &lt;/a&gt; 메소드 공학 표기법 지수와 숫자를 표시에 이용 될 수 있고, &lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt; &lt;code&gt;setScale&lt;/code&gt; &lt;/a&gt; 방법은 라운딩을 위해 사용될 수있다 &lt;code&gt;BigDecimal&lt;/code&gt; 는 소수점 이후 숫자 알려진 번호를 갖도록.</target>
        </trans-unit>
        <trans-unit id="bc086637a391b1032b4d9a87f65f931f3ebfac84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toString()&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method returns a URI string with all necessary quotation but which may contain</source>
          <target state="translated">&lt;a href=&quot;#toString()&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt; 메소드는 모든 필요한 인용와 URI 문자열을 반환하지만 어느를 포함 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="478767a169faaeb53898bb2638beee30a4b18797" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#type()&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; component determines if the entry grants or denies access.</source>
          <target state="translated">&lt;a href=&quot;#type()&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt; 항목이 부여하거나 액세스를 거부하는 경우 구성 요소를 결정한다.</target>
        </trans-unit>
        <trans-unit id="22dd7f57ec39defcc50324c81f0f9c18cf2d4803" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#walk(java.util.function.Function)&quot;&gt;&lt;code&gt;walk&lt;/code&gt;&lt;/a&gt; method opens a sequential stream of &lt;a href=&quot;stackwalker.stackframe&quot;&gt;&lt;code&gt;StackFrame&lt;/code&gt;&lt;/a&gt;s for the current thread and then applies the given function to walk the &lt;code&gt;StackFrame&lt;/code&gt; stream. The stream reports stack frame elements in order, from the top most frame that represents the execution point at which the stack was generated to the bottom most frame. The &lt;code&gt;StackFrame&lt;/code&gt; stream is closed when the &lt;code&gt;walk&lt;/code&gt; method returns. If an attempt is made to reuse the closed stream, &lt;code&gt;IllegalStateException&lt;/code&gt; will be thrown.</source>
          <target state="translated">&lt;a href=&quot;#walk(java.util.function.Function)&quot;&gt; &lt;code&gt;walk&lt;/code&gt; &lt;/a&gt; 방법의 순차적 흐름 열리고 &lt;a href=&quot;stackwalker.stackframe&quot;&gt; &lt;code&gt;StackFrame&lt;/code&gt; 을&lt;/a&gt; S 현재 스레드를하고 걸을 주어진 함수 적용 &lt;code&gt;StackFrame&lt;/code&gt; 을 된 스트림. 스트림은 스택이 생성 된 실행 지점을 나타내는 최상위 프레임부터 최하위 프레임까지 스택 프레임 요소를 순서대로보고합니다. &lt;code&gt;StackFrame&lt;/code&gt; 을의 스트림이 때 닫혀 &lt;code&gt;walk&lt;/code&gt; 메소드가 리턴합니다. 닫힌 스트림을 재사용하려고하면 &lt;code&gt;IllegalStateException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="104e9821fb34ad83cbe06a664eb098239b1f2dbf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withChronology(java.time.chrono.Chronology)&quot;&gt;&lt;code&gt;withChronology&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the chronology. If overridden, the date-time value is converted to the chronology before formatting. During parsing the date-time value is converted to the chronology before it is returned.</source>
          <target state="translated">&lt;a href=&quot;#withChronology(java.time.chrono.Chronology)&quot;&gt; &lt;code&gt;withChronology&lt;/code&gt; 의&lt;/a&gt; 방법은 새로운 포매터 우선 그 연대기를 반환합니다. 재정의 된 경우 날짜-시간 값은 형식화하기 전에 연대순으로 변환됩니다. 구문 분석 중에 날짜-시간 값은 반환되기 전에 연대순으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="8e69011f7c1b9509096433b5315c14df4b0867c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withDecimalStyle(java.time.format.DecimalStyle)&quot;&gt;&lt;code&gt;withDecimalStyle&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the &lt;a href=&quot;decimalstyle&quot;&gt;&lt;code&gt;DecimalStyle&lt;/code&gt;&lt;/a&gt;. The DecimalStyle symbols are used for formatting and parsing.</source>
          <target state="translated">&lt;a href=&quot;#withDecimalStyle(java.time.format.DecimalStyle)&quot;&gt; &lt;code&gt;withDecimalStyle&lt;/code&gt; 의&lt;/a&gt; 방법은 새로운 포매터 우선 그 반환 &lt;a href=&quot;decimalstyle&quot;&gt; &lt;code&gt;DecimalStyle&lt;/code&gt; 을&lt;/a&gt; . DecimalStyle 기호는 형식화 및 구문 분석에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="179737e50aab62d467c3cc1df8b25dae572a53e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the locale. The locale affects some aspects of formatting and parsing. For example, the &lt;a href=&quot;#ofLocalizedDate(java.time.format.FormatStyle)&quot;&gt;&lt;code&gt;ofLocalizedDate&lt;/code&gt;&lt;/a&gt; provides a formatter that uses the locale specific date format.</source>
          <target state="translated">&lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale&lt;/code&gt; 의&lt;/a&gt; 방법은 새로운 포매터 무시하는 로케일을 돌려줍니다. 로케일은 형식화 및 구문 분석의 일부 측면에 영향을줍니다. 예를 들어 &lt;a href=&quot;#ofLocalizedDate(java.time.format.FormatStyle)&quot;&gt; &lt;code&gt;ofLocalizedDate&lt;/code&gt; &lt;/a&gt; 는 로케일 특정 날짜 형식을 사용하는 포맷터를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7b5f8f7f416846ce6c11368f1979062c39147ad9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withResolverFields(java.time.temporal.TemporalField...)&quot;&gt;&lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt;&lt;/a&gt; parameter allows the set of fields that will be resolved to be filtered before resolving starts. For example, if the formatter has parsed a year, month, day-of-month and day-of-year, then there are two approaches to resolve a date: (year + month + day-of-month) and (year + day-of-year). The resolver fields allows one of the two approaches to be selected. If no resolver fields are set then both approaches must result in the same date.</source>
          <target state="translated">&lt;a href=&quot;#withResolverFields(java.time.temporal.TemporalField...)&quot;&gt; &lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt; &lt;/a&gt; 매개 변수는 시작을 해결하기 전에 필터링 할 해결 될 것입니다 필드의 설정을 할 수 있습니다. 예를 들어 포맷터가 1 년, 월, 일 및 일을 구문 분석 한 경우 날짜를 확인하는 두 가지 방법이 있습니다. (년 + 월 + 일) 및 (연도 + 일). 리졸버 필드를 사용하면 두 가지 접근 방식 중 하나를 선택할 수 있습니다. 해석기 필드가 설정되지 않은 경우 두 접근 방식 모두 동일한 날짜가되어야합니다.</target>
        </trans-unit>
        <trans-unit id="4eb3b989121f5815135159b785773c5f4b0e5bee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withZone(java.time.ZoneId)&quot;&gt;&lt;code&gt;withZone&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the zone. If overridden, the date-time value is converted to a ZonedDateTime with the requested ZoneId before formatting. During parsing the ZoneId is applied before the value is returned.</source>
          <target state="translated">&lt;a href=&quot;#withZone(java.time.ZoneId)&quot;&gt; &lt;code&gt;withZone&lt;/code&gt; 의&lt;/a&gt; 방법은 영역을 재정의하는 새로운 포매터를 반환합니다. 재정의 된 경우 날짜-시간 값은 형식 지정 전에 요청 된 ZoneId를 사용하여 ZonedDateTime으로 변환됩니다. 구문 분석 중에 값이 반환되기 전에 ZoneId가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5767321150fbf304f9c853fe7423b79275141cc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;properties&lt;/a&gt; for loggers and Handlers will have names starting with the dot-separated name for the handler or logger.</source>
          <target state="translated">로거 및 핸들러 의 &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;특성&lt;/a&gt; 은 핸들러 또는 로거의 점으로 구분 된 이름으로 시작하는 이름을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="0069f70249676e93e664c0be115bc404720187e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; API. The &lt;code&gt;ServiceLoader&lt;/code&gt; API will look for a class name in the file &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; in jars available to the runtime. For example, to have the RowSetFactory implementation &lt;code&gt;com.sun.rowset.RowSetFactoryImpl &lt;/code&gt; loaded, the entry in &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; would be:</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; 의&lt;/a&gt; API. &lt;code&gt;ServiceLoader&lt;/code&gt; 의 API는 파일에서 클래스 이름을 찾을 것입니다 &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; , 실행시에 사용할 수있는 jar한다. 예를 들어, RowSetFactory 구현 &lt;code&gt;com.sun.rowset.RowSetFactoryImpl &lt;/code&gt; 을 로드하려면 &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; 의 항목 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="522c2e92bd2b278cbf22bf030310e50d7ce05ec7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../java.base/java/net/uri&quot;&gt;URI&lt;/a&gt; returned from &lt;code&gt;&lt;a href=&quot;fileobject#toUri()&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;fileobject#toUri()&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt; 에서 반환 된 &lt;a href=&quot;../../../java.base/java/net/uri&quot;&gt;URI&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a81bf25ed46b7ed4b581a608b7780d76bdc79dd9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../java.base/java/util/locale&quot;&gt;locale&lt;/a&gt; of the description in this &lt;code&gt;MBeanInfo&lt;/code&gt;, &lt;code&gt;MBeanAttributeInfo&lt;/code&gt;, etc, as returned by &lt;a href=&quot;../../../java.base/java/util/locale#toString()&quot;&gt;&lt;code&gt;Locale.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../java.base/java/util/locale#toString()&quot;&gt; &lt;code&gt;Locale.toString()&lt;/code&gt; &lt;/a&gt; 의해 리턴 된 이 &lt;code&gt;MBeanInfo&lt;/code&gt; , &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; 등에 있는 설명 의 &lt;a href=&quot;../../../java.base/java/util/locale&quot;&gt;로케일&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc51dcb232ef7f25e91fae041a5e61191866e752" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; that uniquely identifies the management interface for logging within the &lt;code&gt;MBeanServer&lt;/code&gt; is:</source>
          <target state="translated">&lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; 고유 내에서 기록의 관리 인터페이스를 식별 &lt;code&gt;MBeanServer&lt;/code&gt; 있습니다 :</target>
        </trans-unit>
        <trans-unit id="3c2067b4092577ae338b99899873d5c51ff4766a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../../io/file#toPath()&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method to construct a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; by converting the abstract path represented by the &lt;code&gt;java.io.File&lt;/code&gt; object. The resulting &lt;code&gt;Path&lt;/code&gt; can be used to operate on the same file as the &lt;code&gt;File&lt;/code&gt; object. The &lt;code&gt;Path&lt;/code&gt; specification provides further information on the &lt;a href=&quot;path#interop&quot;&gt;interoperability&lt;/a&gt; between &lt;code&gt;Path&lt;/code&gt; and &lt;code&gt;java.io.File&lt;/code&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;../../io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 클래스는 정의 &lt;a href=&quot;../../io/file#toPath()&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; 의&lt;/a&gt; 구성하는 방법 &lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 에 의해 표현 된 추상적 인 경로로 변환하여 &lt;code&gt;java.io.File&lt;/code&gt; 의의 객체를. 결과 &lt;code&gt;Path&lt;/code&gt; 는 &lt;code&gt;File&lt;/code&gt; 객체 와 동일한 파일에서 작동하는 데 사용할 수 있습니다 . &lt;code&gt;Path&lt;/code&gt; 사양은에 대한 자세한 정보를 제공하는 &lt;a href=&quot;path#interop&quot;&gt;상호 운용성&lt;/a&gt; 사이의 &lt;code&gt;Path&lt;/code&gt; 및 &lt;code&gt;java.io.File&lt;/code&gt; 의의 객체.</target>
        </trans-unit>
        <trans-unit id="9a85bd907f559c9802535fa51f23ef29d3d95c9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../../io/file#toPath--&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method to construct a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; by converting the abstract path represented by the &lt;code&gt;java.io.File&lt;/code&gt; object. The resulting &lt;code&gt;Path&lt;/code&gt; can be used to operate on the same file as the &lt;code&gt;File&lt;/code&gt; object. The &lt;code&gt;Path&lt;/code&gt; specification provides further information on the &lt;a href=&quot;path#interop&quot;&gt;interoperability&lt;/a&gt; between &lt;code&gt;Path&lt;/code&gt; and &lt;code&gt;java.io.File&lt;/code&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;../../io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 클래스는 정의 &lt;a href=&quot;../../io/file#toPath--&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; 의&lt;/a&gt; 구성하는 방법 &lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 에 의해 표현 된 추상적 인 경로로 변환하여 &lt;code&gt;java.io.File&lt;/code&gt; 의의 객체를. 결과 &lt;code&gt;Path&lt;/code&gt; 는 &lt;code&gt;File&lt;/code&gt; 객체 와 동일한 파일에서 작동하는 데 사용할 수 있습니다 . &lt;code&gt;Path&lt;/code&gt; 사양은에 대한 자세한 정보를 제공하는 &lt;a href=&quot;path#interop&quot;&gt;상호 운용성&lt;/a&gt; 사이의 &lt;code&gt;Path&lt;/code&gt; 및 &lt;code&gt;java.io.File&lt;/code&gt; 의의 객체.</target>
        </trans-unit>
        <trans-unit id="d5be3abde35d6105d79ad74bc634371ab99a05a5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../java/net/uri&quot;&gt;URI&lt;/a&gt; returned from &lt;code&gt;&lt;a href=&quot;fileobject#toUri--&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;fileobject#toUri--&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt; 에서 반환 된 &lt;a href=&quot;../../java/net/uri&quot;&gt;URI&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="134ad8107ae31bdb06239d777265c61dbef39bc0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../java/util/locale&quot;&gt;locale&lt;/a&gt; of the description in this &lt;code&gt;MBeanInfo&lt;/code&gt;, &lt;code&gt;MBeanAttributeInfo&lt;/code&gt;, etc, as returned by &lt;a href=&quot;../../java/util/locale#toString--&quot;&gt;&lt;code&gt;Locale.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../java/util/locale#toString--&quot;&gt; &lt;code&gt;Locale.toString()&lt;/code&gt; &lt;/a&gt; 의해 돌려 주어지는 이 &lt;code&gt;MBeanInfo&lt;/code&gt; , &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; 등 의 설명 의 &lt;a href=&quot;../../java/util/locale&quot;&gt;로케일&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="3c934c128f75a8a4fa5a31b7015ed85f88403315" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/protocolfamily&quot;&gt;&lt;code&gt;ProtocolFamily&lt;/code&gt;&lt;/a&gt; of the channel's socket is platform (and possibly configuration) dependent and therefore unspecified. The &lt;a href=&quot;#open(java.net.ProtocolFamily)&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; allows the protocol family to be selected when opening a datagram channel, and should be used to open datagram channels that are intended for Internet Protocol multicasting.</source>
          <target state="translated">채널 소켓 의 &lt;a href=&quot;../../net/protocolfamily&quot;&gt; &lt;code&gt;ProtocolFamily&lt;/code&gt; &lt;/a&gt; 는 플랫폼 (및 구성 가능)에 따라 다르므로 지정되지 않습니다. &lt;a href=&quot;#open(java.net.ProtocolFamily)&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 그램 채널을 개방 할 때, 상기 프로토콜 패밀리가 선택 될 수 있으며, 인터넷 프로토콜 멀티 캐스팅 의도 그램 오픈 채널을 사용하여야한다.</target>
        </trans-unit>
        <trans-unit id="f1ec0c7d3ac150a1e7303b1353c79b5a3e266162" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/protocolfamily&quot;&gt;&lt;code&gt;ProtocolFamily&lt;/code&gt;&lt;/a&gt; of the channel's socket is platform (and possibly configuration) dependent and therefore unspecified. The &lt;a href=&quot;datagramchannel#open-java.net.ProtocolFamily-&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; allows the protocol family to be selected when opening a datagram channel, and should be used to open datagram channels that are intended for Internet Protocol multicasting.</source>
          <target state="translated">채널 소켓 의 &lt;a href=&quot;../../net/protocolfamily&quot;&gt; &lt;code&gt;ProtocolFamily&lt;/code&gt; &lt;/a&gt; 는 플랫폼 (및 구성)에 따라 다르므로 지정되지 않습니다. &lt;a href=&quot;datagramchannel#open-java.net.ProtocolFamily-&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 그램 채널을 개방 할 때, 상기 프로토콜 패밀리가 선택 될 수 있으며, 인터넷 프로토콜 멀티 캐스팅 의도 그램 오픈 채널을 사용하여야한다.</target>
        </trans-unit>
        <trans-unit id="26ee394bd5a91389898fffb43587756f5372b01d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; option should be enabled prior to &lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;binding&lt;/code&gt;&lt;/a&gt; the socket. This is required to allow multiple members of the group to bind to the same address.</source>
          <target state="translated">&lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; 의&lt;/a&gt; 옵션은 이전에 사용하도록 설정해야합니다 &lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;binding&lt;/code&gt; &lt;/a&gt; 소켓을. 이는 그룹의 여러 구성원이 동일한 주소에 바인딩 할 수 있도록하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="17b844a7bf6569487aadb2b841362d26db2df769" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; option should be enabled prior to &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;binding&lt;/code&gt;&lt;/a&gt; the socket. This is required to allow multiple members of the group to bind to the same address.</source>
          <target state="translated">&lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; 의&lt;/a&gt; 옵션은 이전에 사용하도록 설정해야합니다 &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;binding&lt;/code&gt; &lt;/a&gt; 소켓을. 이는 그룹의 여러 구성원이 동일한 주소에 바인딩 할 수 있도록하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="5e9eeca29aab2965612038f9a3795990d96a2122" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../security/protectiondomain&quot;&gt;&lt;code&gt;ProtectionDomain&lt;/code&gt;&lt;/a&gt; of a proxy class is the same as that of system classes loaded by the bootstrap class loader, such as &lt;code&gt;java.lang.Object&lt;/code&gt;, because the code for a proxy class is generated by trusted system code. This protection domain will typically be granted &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">프록시 클래스 의 코드는 신뢰할 수있는 시스템 코드에 의해 생성되므로 프록시 클래스 의 &lt;a href=&quot;../../security/protectiondomain&quot;&gt; &lt;code&gt;ProtectionDomain&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;java.lang.Object&lt;/code&gt; 와 같은 부트 스트랩 클래스 로더에 의해로드 된 시스템 클래스의 것과 동일 합니다. 이 보호 도메인에는 일반적으로 &lt;code&gt;java.security.AllPermission&lt;/code&gt; 이 부여 됩니다.</target>
        </trans-unit>
        <trans-unit id="5ecb831d25072794a8321beb08d3f2989b4eb525" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../time/zoneid#systemDefault()&quot;&gt;&lt;code&gt;system default TimeZone&lt;/code&gt;&lt;/a&gt; is used to convert the UTC time to local date-time.</source>
          <target state="translated">&lt;a href=&quot;../../time/zoneid#systemDefault()&quot;&gt; &lt;code&gt;system default TimeZone&lt;/code&gt; &lt;/a&gt; 현지 날짜와 시간으로 UTC 시간을 변환하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8cce448bf1e954b21943bc931e3a7ed24ae93fed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../util/locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; class provide access to a range of information useful for localizing an application. This includes the language and region, such as &quot;en-GB&quot; for English as used in Great Britain.</source>
          <target state="translated">&lt;a href=&quot;../../util/locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt; 클래스는 응용 프로그램을 지역화에 대한 유용한 정보의 범위에 대한 액세스를 제공합니다. 여기에는 영국에서 사용되는 &quot;en-GB&quot;와 같은 언어 및 지역이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="7786edad52abe214490e50f86c58831524452f9b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; methods may also be used to read or update the owner. In that case, the owner attribute is identified by the name &lt;code&gt;&quot;owner&quot;&lt;/code&gt;, and the value of the attribute is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt; 방법도 읽거나 소유자를 업데이트 할 수 있습니다. 이 경우 소유자 속성은 &lt;code&gt;&quot;owner&quot;&lt;/code&gt; 라는 이름으로 식별되고 속성 값은 &lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f8a11726aa14cd73ca2137ecb864daef15163536" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes as if by invoking the &lt;a href=&quot;#readAttributes()&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt; 방법 것처럼 호출하여 이러한 속성 중 하나를 판독하기 위해 사용될 수있다 &lt;a href=&quot;#readAttributes()&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="85684b2fc47146275fdab7d2c9f839a7fdc85f8f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes, or any of the attributes defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; as if by invoking the &lt;a href=&quot;#readAttributes()&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt; 방법에 의해 정의 된 속성들의 이러한 특성 중 하나 또는 임의의 판독하는데 사용될 수있다 &lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; 을&lt;/a&gt; 것처럼 호출하여 &lt;a href=&quot;#readAttributes()&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="01813ca8a2f4cee820ce424da9550d8a914a2790" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read the ACL or owner attributes as if by invoking the &lt;a href=&quot;#getAcl()&quot;&gt;&lt;code&gt;getAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#getOwner()&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt; 방법 것처럼 호출하여 ACL 또는 소유자 속성을 판독하기 위해 사용될 수있다 &lt;a href=&quot;#getAcl()&quot;&gt; &lt;code&gt;getAcl&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;fileownerattributeview#getOwner()&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="f7bcc13ad5cb486576996f847be7d97aa0930b3d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; methods may also be used to read or update the owner. In that case, the owner attribute is identified by the name &lt;code&gt;&quot;owner&quot;&lt;/code&gt;, and the value of the attribute is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt; 방법도 읽거나 소유자를 업데이트 할 수 있습니다. 이 경우 소유자 속성은 &lt;code&gt;&quot;owner&quot;&lt;/code&gt; 이름으로 식별되며 속성 값은 &lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6c2baff7408e5ad54d49ec829c03c8add1ffdf24" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes as if by invoking the &lt;a href=&quot;basicfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt; 방법 것처럼 호출하여 이러한 속성 중 하나를 판독하기 위해 사용될 수있다 &lt;a href=&quot;basicfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="e42fb0b1ed94cf5c272dbff37a665442f101c72a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes, or any of the attributes defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; as if by invoking the &lt;a href=&quot;dosfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt; 방법에 의해 정의 된 속성들의 이러한 특성 중 하나 또는 임의의 판독하는데 사용될 수있다 &lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; 을&lt;/a&gt; 것처럼 호출하여 &lt;a href=&quot;dosfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="cc5e5360eedff08a35975f0e9a9480502f02b841" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes, or any of the attributes defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; as if by invoking the &lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt; 방법에 의해 정의 된 속성들의 이러한 특성 중 하나 또는 임의의 판독하는데 사용될 수있다 &lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; 을&lt;/a&gt; 것처럼 호출하여 &lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="52e7fac281b42fd7fe7452e241108ef2d5dcf7d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read the ACL or owner attributes as if by invoking the &lt;a href=&quot;aclfileattributeview#getAcl--&quot;&gt;&lt;code&gt;getAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt; 방법 것처럼 호출하여 ACL 또는 소유자 속성을 판독하기 위해 사용될 수있다 &lt;a href=&quot;aclfileattributeview#getAcl--&quot;&gt; &lt;code&gt;getAcl&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="a66d1389e68f17cf760e4ead06c81319bc1c611a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the ACL or owner attributes as if by invoking the &lt;a href=&quot;#setAcl(java.util.List)&quot;&gt;&lt;code&gt;setAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt; 방법은 경우로 호출하여 ACL 또는 소유자의 속성을 업데이트 할 수 있습니다 &lt;a href=&quot;#setAcl(java.util.List)&quot;&gt; &lt;code&gt;setAcl&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="a1ab88808fcc3905febfce9137a0e1f9a46f0aa3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the DOS attributes as if by invoking the &lt;a href=&quot;#setReadOnly(boolean)&quot;&gt;&lt;code&gt;setReadOnly&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setHidden(boolean)&quot;&gt;&lt;code&gt;setHidden&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setSystem(boolean)&quot;&gt;&lt;code&gt;setSystem&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#setArchive(boolean)&quot;&gt;&lt;code&gt;setArchive&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt; 방법은, 마지막 액세스 시간을 파일의 마지막 수정 시간을 업데이트하거나 의해 정의 된 시간 속성을 만들 수 있습니다 &lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt; . 또한 &lt;a href=&quot;#setReadOnly(boolean)&quot;&gt; &lt;code&gt;setReadOnly&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#setHidden(boolean)&quot;&gt; &lt;code&gt;setHidden&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#setSystem(boolean)&quot;&gt; &lt;code&gt;setSystem&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#setArchive(boolean)&quot;&gt; &lt;code&gt;setArchive&lt;/code&gt; &lt;/a&gt; 메서드를 각각 호출하는 것처럼 DOS 속성을 업데이트하는 데 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="324d0485d9b5471da8935266a3e2c4f243862906" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the permissions, owner, or group-owner as if by invoking the &lt;a href=&quot;#setPermissions(java.util.Set)&quot;&gt;&lt;code&gt;setPermissions&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#setGroup(java.nio.file.attribute.GroupPrincipal)&quot;&gt;&lt;code&gt;setGroup&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt; 방법은, 마지막 액세스 시간을 파일의 마지막 수정 시간을 업데이트하거나 의해 정의 된 시간 속성을 만들 수 있습니다 &lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt; . 또한 호출하여 것처럼 권한 소유자 또는 운영자 그룹을 업데이트하기 위해 사용될 수있다 &lt;a href=&quot;#setPermissions(java.util.Set)&quot;&gt; &lt;code&gt;setPermissions&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#setGroup(java.nio.file.attribute.GroupPrincipal)&quot;&gt; &lt;code&gt;setGroup&lt;/code&gt; 의&lt;/a&gt; 각각 방법.</target>
        </trans-unit>
        <trans-unit id="32d653cec997683485730f2c2e168b1cada5ca30" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as if by invoking the &lt;a href=&quot;#setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)&quot;&gt;&lt;code&gt;setTimes&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt; 방법은, 마지막 액세스 시간을 파일의 마지막 수정 시간을 업데이트하거나 호출하여 마치 시간 속성을 만들 수 있습니다 &lt;a href=&quot;#setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)&quot;&gt; &lt;code&gt;setTimes&lt;/code&gt; 의&lt;/a&gt; 방법을.</target>
        </trans-unit>
        <trans-unit id="1bfa9ca3b01e08a940097655d13c2a85724d95de" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the ACL or owner attributes as if by invoking the &lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt;&lt;code&gt;setAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt; 방법은 경우로 호출하여 ACL 또는 소유자의 속성을 업데이트 할 수 있습니다 &lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt; &lt;code&gt;setAcl&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="c435d3e3c46a4b9a0beff2ad2d5cec4c6ab7aa83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the DOS attributes as if by invoking the &lt;a href=&quot;dosfileattributeview#setReadOnly-boolean-&quot;&gt;&lt;code&gt;setReadOnly&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dosfileattributeview#setHidden-boolean-&quot;&gt;&lt;code&gt;setHidden&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dosfileattributeview#setSystem-boolean-&quot;&gt;&lt;code&gt;setSystem&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;dosfileattributeview#setArchive-boolean-&quot;&gt;&lt;code&gt;setArchive&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt; 방법은, 마지막 액세스 시간을 파일의 마지막 수정 시간을 업데이트하거나 의해 정의 된 시간 속성을 만들 수 있습니다 &lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;dosfileattributeview#setReadOnly-boolean-&quot;&gt; &lt;code&gt;setReadOnly&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;dosfileattributeview#setHidden-boolean-&quot;&gt; &lt;code&gt;setHidden&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;dosfileattributeview#setSystem-boolean-&quot;&gt; &lt;code&gt;setSystem&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;dosfileattributeview#setArchive-boolean-&quot;&gt; &lt;code&gt;setArchive&lt;/code&gt; &lt;/a&gt; 메소드를 각각 호출하여 마치 DOS 속성을 업데이트하는 데 사용될 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eda9c31c1c567716843eb27dfd24c5d17ae4a65a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the permissions, owner, or group-owner as if by invoking the &lt;a href=&quot;posixfileattributeview#setPermissions-java.util.Set-&quot;&gt;&lt;code&gt;setPermissions&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;posixfileattributeview#setGroup-java.nio.file.attribute.GroupPrincipal-&quot;&gt;&lt;code&gt;setGroup&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt; 방법은, 마지막 액세스 시간을 파일의 마지막 수정 시간을 업데이트하거나 의해 정의 된 시간 속성을 만들 수 있습니다 &lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt; . 또한 호출하여 것처럼 권한 소유자 또는 운영자 그룹을 업데이트하기 위해 사용될 수있다 &lt;a href=&quot;posixfileattributeview#setPermissions-java.util.Set-&quot;&gt; &lt;code&gt;setPermissions&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;posixfileattributeview#setGroup-java.nio.file.attribute.GroupPrincipal-&quot;&gt; &lt;code&gt;setGroup&lt;/code&gt; 의&lt;/a&gt; 각각 방법.</target>
        </trans-unit>
        <trans-unit id="a691ef8b98d41f4420b4aefb065db958be6429d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as if by invoking the &lt;a href=&quot;basicfileattributeview#setTimes-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-&quot;&gt;&lt;code&gt;setTimes&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt; 방법은, 마지막 액세스 시간을 파일의 마지막 수정 시간을 업데이트하거나 호출하여 마치 시간 속성을 만들 수 있습니다 &lt;a href=&quot;basicfileattributeview#setTimes-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-&quot;&gt; &lt;code&gt;setTimes&lt;/code&gt; 의&lt;/a&gt; 방법을.</target>
        </trans-unit>
        <trans-unit id="d6234f4c2f9f186f3857bbbd3b1aad9de4850aec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../filestore#supportsFileAttributeView(java.lang.Class)&quot;&gt;&lt;code&gt;supportsFileAttributeView&lt;/code&gt;&lt;/a&gt; method may be used to test if a specific &lt;a href=&quot;../filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the storage of user-defined attributes.</source>
          <target state="translated">&lt;a href=&quot;../filestore#supportsFileAttributeView(java.lang.Class)&quot;&gt; &lt;code&gt;supportsFileAttributeView&lt;/code&gt; 의&lt;/a&gt; 특정 경우에있어서 테스트하는데 사용될 수있다 &lt;a href=&quot;../filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt; 사용자 정의 속성의 저장을 지원한다.</target>
        </trans-unit>
        <trans-unit id="580a6d6beeb8ffe4eb2d62290bc22802acbffaee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../filestore#supportsFileAttributeView-java.lang.Class-&quot;&gt;&lt;code&gt;supportsFileAttributeView&lt;/code&gt;&lt;/a&gt; method may be used to test if a specific &lt;a href=&quot;../filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the storage of user-defined attributes.</source>
          <target state="translated">&lt;a href=&quot;../filestore#supportsFileAttributeView-java.lang.Class-&quot;&gt; &lt;code&gt;supportsFileAttributeView&lt;/code&gt; 의&lt;/a&gt; 특정 경우에있어서 테스트하는데 사용될 수있다 &lt;a href=&quot;../filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt; 사용자 정의 속성의 저장을 지원한다.</target>
        </trans-unit>
        <trans-unit id="c29872ec7ff5ff95dc63bc474c776a8113805f34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../function/supplier#get()&quot;&gt;&lt;code&gt;Supplier.get()&lt;/code&gt;&lt;/a&gt; method will be invoked on the supplier no more than once, and only after the terminal operation of the stream pipeline commences.</source>
          <target state="translated">&lt;a href=&quot;../function/supplier#get()&quot;&gt; &lt;code&gt;Supplier.get()&lt;/code&gt; &lt;/a&gt; 메소드는 한번 이상 보조 장비에 호출하지 않고, 단지 스트림 파이프의 말단이 시작된 것 수술후한다.</target>
        </trans-unit>
        <trans-unit id="0ee89249aaebf2f1fc5eeda71bacdd03058fa195" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../function/supplier#get--&quot;&gt;&lt;code&gt;Supplier.get()&lt;/code&gt;&lt;/a&gt; method will be invoked on the supplier no more than once, and only after the terminal operation of the stream pipeline commences.</source>
          <target state="translated">&lt;a href=&quot;../function/supplier#get--&quot;&gt; &lt;code&gt;Supplier.get()&lt;/code&gt; &lt;/a&gt; 메소드는 한번 이상 보조 장비에 호출하지 않고, 단지 스트림 파이프의 말단이 시작된 것 수술후한다.</target>
        </trans-unit>
        <trans-unit id="142dbbdea20e0ff6bd9b8a5f8d0a573aae47a0f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mappedbytebuffer&quot;&gt;&lt;code&gt;&lt;i&gt;mapped byte buffer&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; returned by this method will have a position of zero and a limit and capacity of &lt;code&gt;size&lt;/code&gt;; its mark will be undefined. The buffer and the mapping that it represents will remain valid until the buffer itself is garbage-collected.</source>
          <target state="translated">&lt;a href=&quot;../mappedbytebuffer&quot;&gt; &lt;code&gt;&lt;i&gt;mapped byte buffer&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 이러한 방법에 의해 리턴 제로의 위치와 한계 용량 것이다 &lt;code&gt;size&lt;/code&gt; ; 마크가 정의되지 않습니다. 버퍼와 버퍼가 나타내는 매핑은 버퍼 자체가 가비지 수집 될 때까지 유효합니다.</target>
        </trans-unit>
        <trans-unit id="1eef88d322f3e09ae53bc681f6806fe486829507" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will always be equal to this object's file-pointer offset as returned by the &lt;a href=&quot;#getFilePointer()&quot;&gt;&lt;code&gt;getFilePointer&lt;/code&gt;&lt;/a&gt; method. Changing this object's file-pointer offset, whether explicitly or by reading or writing bytes, will change the position of the channel, and vice versa. Changing the file's length via this object will change the length seen via the file channel, and vice versa.</source>
          <target state="translated">반환 된 채널 의 &lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt; 는 항상 &lt;a href=&quot;#getFilePointer()&quot;&gt; &lt;code&gt;getFilePointer&lt;/code&gt; &lt;/a&gt; 메서드에 의해 반환 된이 객체의 파일 포인터 오프셋과 같습니다 . 명시 적으로 또는 바이트를 읽거나 쓰는 방식으로이 개체의 파일 포인터 오프셋을 변경하면 채널의 위치가 변경되며 그 반대의 경우도 마찬가지입니다. 이 개체를 통해 파일 길이를 변경하면 파일 채널을 통해 표시되는 길이가 변경되며 그 반대의 경우도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="48db05c222075f07f78662388844eeb5f6f1bc01" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will always be equal to this object's file-pointer offset as returned by the &lt;a href=&quot;randomaccessfile#getFilePointer--&quot;&gt;&lt;code&gt;getFilePointer&lt;/code&gt;&lt;/a&gt; method. Changing this object's file-pointer offset, whether explicitly or by reading or writing bytes, will change the position of the channel, and vice versa. Changing the file's length via this object will change the length seen via the file channel, and vice versa.</source>
          <target state="translated">리턴 된 채널 의 &lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt; 는 항상 &lt;a href=&quot;randomaccessfile#getFilePointer--&quot;&gt; &lt;code&gt;getFilePointer&lt;/code&gt; &lt;/a&gt; 메소드에 의해 리턴 된이 오브젝트의 파일 포인터 오프셋과 같습니다 . 명시 적으로 또는 바이트를 읽거나 쓰는 방식으로이 객체의 파일 포인터 오프셋을 변경하면 채널의 위치가 변경되고 그 반대도 마찬가지입니다. 이 객체를 통해 파일 길이를 변경하면 파일 채널을 통해 보이는 길이가 변경되며 그 반대도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="1b7577f54ca9ebadbf67e174ed9fc74807c65a0b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class defines methods that operate on file attributes including file permissions. This may be used when finer manipulation of file permissions is required.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt; 파일 권한을 포함하여 파일 속성에서 작동 클래스를 정의 방법. 파일 권한을보다 세밀하게 조작해야 할 때 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b28607d7b75904cc426fcfb6ec4e099b107fd4d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/files#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;Files.createTempFile&lt;/code&gt;&lt;/a&gt; method provides an alternative method to create an empty file in the temporary-file directory. Files created by that method may have more restrictive access permissions to files created by this method and so may be more suited to security-sensitive applications.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;Files.createTempFile&lt;/code&gt; 의&lt;/a&gt; 방법은 임시 파일 디렉토리에 빈 파일을 만들 수있는 다른 방법을 제공한다. 이 방법으로 생성 된 파일은이 방법으로 생성 된 파일에 대해 더 제한적인 액세스 권한을 가질 수 있으므로 보안에 민감한 응용 프로그램에 더 적합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3185bf54751cfa5bf1ebba53d67faccb98bf6516" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/files#createTempFile-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;Files.createTempFile&lt;/code&gt;&lt;/a&gt; method provides an alternative method to create an empty file in the temporary-file directory. Files created by that method may have more restrictive access permissions to files created by this method and so may be more suited to security-sensitive applications.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files#createTempFile-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;Files.createTempFile&lt;/code&gt; 의&lt;/a&gt; 방법은 임시 파일 디렉토리에 빈 파일을 만들 수있는 다른 방법을 제공한다. 해당 방법으로 생성 된 파일은이 방법으로 생성 된 파일에 대해 더 제한적인 액세스 권한을 가질 수 있으므로 보안에 민감한 응용 프로그램에 더 적합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b177003ee97e039cabe9da4299828ca0c286e4b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/package-summary&quot;&gt;&lt;code&gt;java.nio.file&lt;/code&gt;&lt;/a&gt; package defines interfaces and classes for the Java virtual machine to access files, file attributes, and file systems. This API may be used to overcome many of the limitations of the &lt;code&gt;java.io.File&lt;/code&gt; class. The &lt;a href=&quot;#toPath()&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method may be used to obtain a &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; that uses the abstract path represented by a &lt;code&gt;File&lt;/code&gt; object to locate a file. The resulting &lt;code&gt;Path&lt;/code&gt; may be used with the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class to provide more efficient and extensive access to additional file operations, file attributes, and I/O exceptions to help diagnose errors when an operation on a file fails.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/package-summary&quot;&gt; &lt;code&gt;java.nio.file&lt;/code&gt; 의&lt;/a&gt; 패키지 액세스 파일, 파일 속성, 및 파일 시스템에 자바 가상 머신의 인터페이스 및 클래스를 정의합니다. 이 API는 &lt;code&gt;java.io.File&lt;/code&gt; 클래스 의 많은 한계를 극복하는 데 사용할 수 있습니다 . &lt;a href=&quot;#toPath()&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; 의&lt;/a&gt; 방법은 얻을 수 있습니다 &lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; a로 표현되는 추상적 인 경로를 사용하여 &lt;code&gt;File&lt;/code&gt; 파일을 찾을 수 개체를. 결과 &lt;code&gt;Path&lt;/code&gt; 를&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt; 클래스 와 함께 사용 하여 추가 파일 작업, 파일 속성 및 I / O 예외에 대한보다 효율적이고 광범위한 액세스를 제공하여 파일 작업이 실패 할 때 오류를 진단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1cd2dbce708c6940c8cf8ba35f1bba1e58ac0ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/package-summary&quot;&gt;&lt;code&gt;java.nio.file&lt;/code&gt;&lt;/a&gt; package defines interfaces and classes for the Java virtual machine to access files, file attributes, and file systems. This API may be used to overcome many of the limitations of the &lt;code&gt;java.io.File&lt;/code&gt; class. The &lt;a href=&quot;file#toPath--&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method may be used to obtain a &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; that uses the abstract path represented by a &lt;code&gt;File&lt;/code&gt; object to locate a file. The resulting &lt;code&gt;Path&lt;/code&gt; may be used with the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class to provide more efficient and extensive access to additional file operations, file attributes, and I/O exceptions to help diagnose errors when an operation on a file fails.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/package-summary&quot;&gt; &lt;code&gt;java.nio.file&lt;/code&gt; 의&lt;/a&gt; 패키지 액세스 파일, 파일 속성, 및 파일 시스템에 자바 가상 머신의 인터페이스 및 클래스를 정의합니다. 이 API는 &lt;code&gt;java.io.File&lt;/code&gt; 클래스 의 많은 제한 사항을 극복하는 데 사용될 수 있습니다 . &lt;a href=&quot;file#toPath--&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; 의&lt;/a&gt; 방법은 얻을 수 있습니다 &lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; a로 표현되는 추상적 인 경로를 사용하여 &lt;code&gt;File&lt;/code&gt; 파일을 찾을 수 개체를. 결과 &lt;code&gt;Path&lt;/code&gt; 는 &lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt; 클래스 와 함께 사용되어 파일 작업이 실패 할 때 오류를 진단하는 데 도움이되는 추가 파일 작업, 파일 특성 및 I / O 예외에 대한보다 효율적이고 광범위한 액세스를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d82b2361fe117f27f253cb0e774de64061c22b2d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliterator's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; if the &lt;a href=&quot;../sortedmap#comparator()&quot;&gt;map's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the map's comparator.</source>
          <target state="translated">&lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliterator의 비교기&lt;/a&gt; 입니다 &lt;code&gt;null&lt;/code&gt; 의 경우 생성 &lt;a href=&quot;../sortedmap#comparator()&quot;&gt;맵의 비교기&lt;/a&gt; 이다 &lt;code&gt;null&lt;/code&gt; . 그렇지 않으면 분할기의 비교기는 맵의 비교기와 동일하거나 동일한 총 순서를 부과합니다.</target>
        </trans-unit>
        <trans-unit id="98176dc88f06469dcca48fb3788ff30dc992f8b1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliterator's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; if the &lt;a href=&quot;../sortedset#comparator()&quot;&gt;set's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the set's comparator.</source>
          <target state="translated">&lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliterator의 비교기&lt;/a&gt; 입니다 &lt;code&gt;null&lt;/code&gt; 의 경우 생성 &lt;a href=&quot;../sortedset#comparator()&quot;&gt;세트의 비교기&lt;/a&gt; 이다 &lt;code&gt;null&lt;/code&gt; . 그렇지 않으면 분할기의 비교기는 세트의 비교기와 동일하거나 동일한 총 순서를 부과합니다.</target>
        </trans-unit>
        <trans-unit id="6e1a4cbb02bf6c03d5a44b8766a6b75e3bd7ef2d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;Epoch Day count&lt;/code&gt;&lt;/a&gt; is a simple incrementing count of days where day 0 is 1970-01-01 (ISO). This definition is the same for all chronologies, enabling conversion.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;Epoch Day count&lt;/code&gt; &lt;/a&gt; 일 0 1970-01-01 (ISO)입니다 일의 수를 증가 간단. 이 정의는 모든 연대기에서 동일하므로 변환이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="d90b2002fdcbda3f48a04b1c28d8f93afe9fd378" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; instance used for calculating the date-time fields and the instant of time.</source>
          <target state="translated">&lt;a href=&quot;../util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 날짜 - 시간 필드와 시간의 순간을 계산하는 데 사용 예.</target>
        </trans-unit>
        <trans-unit id="5e38b37aeff6c0bffbe4d4c7f1f5d153a7812a9f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; instance used for calculating the date-time fields and the instant of time. This field is used for both formatting and parsing.</source>
          <target state="translated">&lt;a href=&quot;../util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 날짜 - 시간 필드와 시간의 순간을 계산하는 데 사용 예. 이 필드는 형식화 및 구문 분석에 모두 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d349e9ab300acec984275666f0f2f7898835dbbc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt;&lt;code&gt;CompletableFuture&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;#onExit()&quot;&gt;&lt;code&gt;onExit()&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt;&lt;code&gt;completed&lt;/code&gt;&lt;/a&gt; when the process has terminated.</source>
          <target state="translated">&lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt; &lt;code&gt;CompletableFuture&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;#onExit()&quot;&gt; &lt;code&gt;onExit()&lt;/code&gt; &lt;/a&gt; 된다 &lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt; &lt;code&gt;completed&lt;/code&gt; &lt;/a&gt; 프로세스가 종료 될 때.</target>
        </trans-unit>
        <trans-unit id="19b1c9756a7bb0fa30123a5de981aa066dd9f14b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt;&lt;code&gt;CompletableFuture&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;#onExit()&quot;&gt;&lt;code&gt;onExit()&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt;completed&lt;/a&gt; when the process has terminated.</source>
          <target state="translated">&lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt; &lt;code&gt;CompletableFuture&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;#onExit()&quot;&gt; &lt;code&gt;onExit()&lt;/code&gt; &lt;/a&gt; 된다 &lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt;완료&lt;/a&gt; 프로세스가 종료 될 때.</target>
        </trans-unit>
        <trans-unit id="8df3e7a33aa49e28a1192bcf36d057cf0293415b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;zone ID&lt;/code&gt;&lt;/a&gt;. This is not part of the ISO-8601 standard. Parsing is case sensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;zone ID&lt;/code&gt; &lt;/a&gt; . 이것은 ISO-8601 표준의 일부가 아닙니다. 구문 분석은 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="bde57531a30d3dd5f7c37db7a69c3a1d61935c91" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;zone ID&lt;/code&gt;&lt;/a&gt;. This is not part of the ISO-8601 standard. Parsing is case sensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;zone ID&lt;/code&gt; &lt;/a&gt; . 이것은 ISO-8601 표준의 일부가 아닙니다. 파싱은 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="526e36bd9e115421a045dc56e1f87a5c3579d0c0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons or seconds. An offset of zero uses &quot;GMT&quot;. North American zone names and military zone names are not handled.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt; 콜론 또는 초없이. 0 오프셋은 &quot;GMT&quot;를 사용합니다. 북미 지역 이름과 군사 지역 이름은 처리되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e56b90af9202ee373bfa47364f3304adf4ca57ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. The offset parsing is lenient, which allows the minutes and seconds to be optional. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt; 콜론없이. 오프셋에 초가 있으면 ISO-8601 표준에 속하지 않더라도 처리됩니다. 오프셋 구문 분석은 관대하므로 분과 초가 선택 사항이 될 수 있습니다. 구문 분석은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5535a010f39cfbe7cdfaf718c4a1e14b41ecdf58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt; . 오프셋에 초가 있으면 ISO-8601 표준에 속하지 않더라도 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="144173739cb700aa98d81173233fe566b6071553" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt; . 오프셋에 초가 있으면 ISO-8601 표준에 속하지 않더라도 처리됩니다. 구문 분석은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="50f628752614c2df8ca094659bb098d1157b0637" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. The offset parsing is lenient, which allows the minutes and seconds to be optional. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt; . 오프셋에 초가 있으면 ISO-8601 표준에 속하지 않더라도 처리됩니다. 오프셋 구문 분석은 관대하므로 분과 초가 선택 사항이 될 수 있습니다. 구문 분석은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d3169944a88bbb1bad97a1a30cd73363ef99816c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons or seconds. An offset of zero uses &quot;GMT&quot;. North American zone names and military zone names are not handled.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt; 콜론 또는 초없이. 오프셋 0은 &quot;GMT&quot;를 사용합니다. 북미 지역 이름 및 군사 지역 이름은 처리되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ccd8df3518a4d9b943302ee23512831c55573aa6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt; 콜론없이. 오프셋에 초가 있으면 이것이 ISO-8601 표준의 일부가 아니더라도 처리됩니다. 파싱은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ef469acd11a9914f386735c8a07ac2ef3e1fdbdb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt; . 오프셋에 초가 있으면 이것이 ISO-8601 표준의 일부가 아니더라도 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="7eb4562aec376d8a60cf8842edb8d8443f0a1248" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt; . 오프셋에 초가 있으면 이것이 ISO-8601 표준의 일부가 아니더라도 처리됩니다. 파싱은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fbbeb22d9b7e39547534480fe8598ea8d98e6e22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt;&lt;/a&gt; class serves as a useful superclass for defining locks and other synchronizers that rely on queuing blocked threads. The &lt;a href=&quot;abstractqueuedlongsynchronizer&quot;&gt;&lt;code&gt;AbstractQueuedLongSynchronizer&lt;/code&gt;&lt;/a&gt; class provides the same functionality but extends support to 64 bits of synchronization state. Both extend class &lt;a href=&quot;abstractownablesynchronizer&quot;&gt;&lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt;&lt;/a&gt;, a simple class that helps record the thread currently holding exclusive synchronization. The &lt;a href=&quot;locksupport&quot;&gt;&lt;code&gt;LockSupport&lt;/code&gt;&lt;/a&gt; class provides lower-level blocking and unblocking support that is useful for those developers implementing their own customized lock classes.</source>
          <target state="translated">&lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; 의의&lt;/a&gt; 클래스 잠금 차단 된 스레드가 대기에 의존하는 다른 싱크로 나이저를 정의하는 수퍼 유용한 역할을한다. &lt;a href=&quot;abstractqueuedlongsynchronizer&quot;&gt; &lt;code&gt;AbstractQueuedLongSynchronizer&lt;/code&gt; 의&lt;/a&gt; 클래스는 동일한 기능을 제공하지만, 동기 상태의 64 비트 지원을 연장한다. 둘 다 현재 클래스 독점 동기화를 보유하고있는 스레드를 기록하는 데 도움이되는 간단한 클래스 인 &lt;a href=&quot;abstractownablesynchronizer&quot;&gt; &lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt; &lt;/a&gt; 클래스를 확장 합니다. &lt;a href=&quot;locksupport&quot;&gt; &lt;code&gt;LockSupport&lt;/code&gt; 의&lt;/a&gt; 클래스는 자신의 사용자 정의 잠금 클래스를 구현하는 개발자들에게 유용 차단 낮은 수준의 차단 해제 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cfef7de48d524821a8ec7c9579af151f13cdc049" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accesscontroller#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method determines whether the access request indicated by a specified permission should be granted or denied. A sample call appears below. In this example, &lt;code&gt;checkPermission&lt;/code&gt; will determine whether or not to grant &quot;read&quot; access to the file named &quot;testFile&quot; in the &quot;/temp&quot; directory.</source>
          <target state="translated">&lt;a href=&quot;accesscontroller#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt; 방법은 특정 권한에 의해 지시 된 액세스 요구를 허용 할 것인지 또는 거부 할 것인지를 결정한다. 아래에 샘플 통화가 나타납니다. 이 예에서 &lt;code&gt;checkPermission&lt;/code&gt; 은 &quot;/ temp&quot;디렉토리의 &quot;testFile&quot;파일에 &quot;읽기&quot;액세스 권한을 부여할지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="8838fb229596af6a0b8d0c55ad981647e1961bd8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessibleaction&quot;&gt;AccessibleAction&lt;/a&gt; interface should be supported by any object that can perform one or more actions. This interface provides the standard mechanism for an assistive technology to determine what those actions are as well as tell the object to perform those actions. Any object that can be manipulated should support this interface.</source>
          <target state="translated">&lt;a href=&quot;accessibleaction&quot;&gt;가 AccessibleAction&lt;/a&gt; 인터페이스는 1 개 이상의 액션을 실행할 수있는 모든 객체에 의해 지원 될 필요가 있습니다. 이 인터페이스는 보조 기술에 대한 표준 메커니즘을 제공하여 해당 작업이 무엇인지 확인하고 개체에게 해당 작업을 수행하도록 지시합니다. 조작 할 수있는 모든 개체는이 인터페이스를 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="8ae7ddd5290d55c841db71019a71a67d5d9c493e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt;&lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt;&lt;/a&gt; method allows you to obtain the localized string for a locale independent key from a predefined &lt;code&gt;ResourceBundle&lt;/code&gt; for the keys defined in this class.</source>
          <target state="translated">&lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt; &lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하면 미리 정의에서 로케일에 의존하지 않는 키의 지역 문자열을 취득 할 수 있습니다 &lt;code&gt;ResourceBundle&lt;/code&gt; 의 이 클래스에서 정의 된 키에 대해서입니다.</target>
        </trans-unit>
        <trans-unit id="9b77e4ce5068ed5e85d6cc9ed7b115da4ecc9dd1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblecomponent&quot;&gt;AccessibleComponent&lt;/a&gt; interface should be supported by any object that is rendered on the screen. This interface provides the standard mechanism for an assistive technology to determine and set the graphical representation of an object.</source>
          <target state="translated">&lt;a href=&quot;accessiblecomponent&quot;&gt;는 AccessibleComponent의&lt;/a&gt; 인터페이스는 화면에 렌더링되는 모든 객체에 의해 지원되어야한다. 이 인터페이스는 개체의 그래픽 표현을 결정하고 설정하는 보조 기술에 대한 표준 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b94cfd97d9dd9fae4586187050765fb100010225" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblehypertext&quot;&gt;AccessibleHypertext&lt;/a&gt; interface should be supported by any object that presents hypertext information on the display. This interface provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. It also provides standard mechanisms for manipulating &lt;a href=&quot;#AccessibleHyperlink&quot;&gt;hyperlinks&lt;/a&gt;. Applications can determine if an object supports the AccessibleHypertext interface by first obtaining its &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt; (see &lt;a href=&quot;#Accessible&quot;&gt;Accessible&lt;/a&gt;) and then calling the AccessibleContext.getAccessibleText() method of &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt;. If the return value is a class which extends AccessibleHypertext, then that object supports AccessibleHypertext.</source>
          <target state="translated">&lt;a href=&quot;accessiblehypertext&quot;&gt;는 AccessibleHypertext의&lt;/a&gt; 인터페이스는 화면에 물체가 선물 하이퍼 텍스트 정보에 의해 지원 될 필요가 있습니다. 이 인터페이스는 컨텐츠, 속성 및 공간 위치를 통해 해당 텍스트에 액세스하는 보조 기술에 대한 표준 메커니즘을 제공합니다. 또한 &lt;a href=&quot;#AccessibleHyperlink&quot;&gt;하이퍼 링크&lt;/a&gt; 를 조작하기위한 표준 메커니즘을 제공합니다 . 객체가 먼저 획득 AccessibleHypertext 인터페이스를 지원하는 경우를 판정 할 수 &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext를&lt;/a&gt; (참조 &lt;a href=&quot;#Accessible&quot;&gt;편의&lt;/a&gt; 의 AccessibleContext.getAccessibleText () 메소드를 호출 한 후)과 &lt;a href=&quot;#AccessibleContext&quot;&gt;의 AccessibleContext&lt;/a&gt; . 반환 값이 AccessibleHypertext를 확장하는 클래스 인 경우 해당 개체는 AccessibleHypertext를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c497281662eb34297821a824dd4c89d1971de1a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessibleselection&quot;&gt;AccessibleSelection&lt;/a&gt; interface provides the standard mechanism for an assistive technology to determine what the current selected children are, as well as modify the selection set. Any object that has children that can be selected should support this the AccessibleSelection interface.</source>
          <target state="translated">&lt;a href=&quot;accessibleselection&quot;&gt;가 AccessibleSelection&lt;/a&gt; 인터페이스는 선택되고있는 세트를 변경으로서, 현재 선택된 아이들이 무엇인지를 결정하기위한 표준 메커니즘을 제공합니다. 선택할 수있는 자식이있는 모든 개체는 AccessibleSelection 인터페이스를 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="fd58f92dbbbde65bfcc823d640b8c8cf6f567063" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblevalue&quot;&gt;AccessibleValue&lt;/a&gt; interface should be supported by any object that supports a numerical value (e.g., a scroll bar). This interface provides the standard mechanism for an assistive technology to determine and set the numerical value as well as get the minimum and maximum values.</source>
          <target state="translated">&lt;a href=&quot;accessiblevalue&quot;&gt;AccessibleValue가 된&lt;/a&gt; 인터페이스는 수치를 지원하는 임의의 개체 (예를 들어, 스크롤 바)에 의해 지원되어야한다. 이 인터페이스는 보조 기술이 숫자 값을 결정 및 설정하고 최소값과 최대 값을 가져 오는 표준 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7af739ac4d097cac2c6f5ee5bae27b0834134652" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#flags&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentryflag&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; to indicate how entries are inherited and propagated</source>
          <target state="translated">&lt;a href=&quot;aclentry#flags&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt; 구성 요소의 집합입니다 &lt;a href=&quot;aclentryflag&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt; 항목이 상속 및 전파하는 방법을 나타 내기 위해</target>
        </trans-unit>
        <trans-unit id="69c9b8c45ab29ebc4b01d4e76c2c7f6f5bb01e81" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#permissions--&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentrypermission&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;aclentry#permissions--&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt; 컴포넌트의 집합 &lt;a href=&quot;aclentrypermission&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4243500d113a1e8dca92fc8e0626cf084b1c7810" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#principal--&quot;&gt;&lt;code&gt;principal&lt;/code&gt;&lt;/a&gt; component, sometimes called the &quot;who&quot; component, is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; corresponding to the identity that the entry grants or denies access</source>
          <target state="translated">&quot;who&quot;구성 요소라고도 하는 &lt;a href=&quot;aclentry#principal--&quot;&gt; &lt;code&gt;principal&lt;/code&gt; &lt;/a&gt; 구성 요소 는 항목이 액세스 권한을 부여하거나 거부하는 ID에 해당 하는 &lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f2f5e00fa6ae64b393f6e7d80594412fecc00383" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#type--&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; component determines if the entry grants or denies access.</source>
          <target state="translated">&lt;a href=&quot;aclentry#type--&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt; 항목이 부여하거나 액세스를 거부하는 경우 구성 요소를 결정한다.</target>
        </trans-unit>
        <trans-unit id="f7f010146e9231a02191ac41817da03a8fd8aa8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclfileattributeview&quot;&gt;&lt;code&gt;AclFileAttributeView&lt;/code&gt;&lt;/a&gt; class defines methods to read and write the Access Control List (ACL) file attribute. The ACL model used by this file attribute view is based on the model defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt; &lt;i&gt;RFC 3530: Network File System (NFS) version 4 Protocol&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;aclfileattributeview&quot;&gt; &lt;code&gt;AclFileAttributeView&lt;/code&gt; &lt;/a&gt; 클래스를 정의 방법은 읽기 및 액세스 제어 목록 (ACL) 파일 속성을 작성합니다. 이 파일 속성보기에서 사용되는 ACL 모델은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530 : NFS (Network File System) 버전 4 프로토콜에&lt;/i&gt;&lt;/a&gt; 의해 정의 된 모델을 기반으로합니다 . &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="5cf038cbd7c0a12c38ae8e3f28f385b0f66f7649" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;alphacomposite#SRC_OVER&quot;&gt;&lt;code&gt;AlphaComposite.SRC_OVER&lt;/code&gt;&lt;/a&gt; rule.</source>
          <target state="translated">&lt;a href=&quot;alphacomposite#SRC_OVER&quot;&gt; &lt;code&gt;AlphaComposite.SRC_OVER&lt;/code&gt; 의&lt;/a&gt; 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="d757646f4f57b621bdd66e46c7cc777a0dd7b6f0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;annotatedelement#getAnnotationsByType-java.lang.Class-&quot;&gt;&lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;annotatedelement#getDeclaredAnnotationsByType-java.lang.Class-&quot;&gt;&lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; methods support multiple annotations of the same type on an element. If the argument to either method is a repeatable annotation type (JLS 9.6), then the method will &quot;look through&quot; a container annotation (JLS 9.7), if present, and return any annotations inside the container. Container annotations may be generated at compile-time to wrap multiple annotations of the argument type.</source>
          <target state="translated">&lt;a href=&quot;annotatedelement#getAnnotationsByType-java.lang.Class-&quot;&gt; &lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;annotatedelement#getDeclaredAnnotationsByType-java.lang.Class-&quot;&gt; &lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt; 방법은 요소에 동일한 유형의 다수의 주석을 지원한다. 두 메소드 중 하나에 대한 인수가 반복 가능한 어노테이션 유형 (JLS 9.6) 인 경우, 메소드는 컨테이너 어노테이션 (JLS 9.7)을 &quot;찾아보고&quot;컨테이너 내의 어노테이션을 리턴합니다. 컴파일시 컨테이너 주석이 생성되어 인수 유형의 여러 주석을 래핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5538279924c592259bec4c32883911ad4ee9986c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asynchronouschannelgroup#shutdown--&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; method is used to initiate an &lt;em&gt;orderly shutdown&lt;/em&gt; of a group. An orderly shutdown marks the group as shutdown; further attempts to construct a channel that binds to the group will throw &lt;a href=&quot;shutdownchannelgroupexception&quot;&gt;&lt;code&gt;ShutdownChannelGroupException&lt;/code&gt;&lt;/a&gt;. Whether or not a group is shutdown can be tested using the &lt;a href=&quot;asynchronouschannelgroup#isShutdown--&quot;&gt;&lt;code&gt;isShutdown&lt;/code&gt;&lt;/a&gt; method. Once shutdown, the group &lt;em&gt;terminates&lt;/em&gt; when all asynchronous channels that are bound to the group are closed, all actively executing completion handlers have run to completion, and resources used by the group are released. No attempt is made to stop or interrupt threads that are executing completion handlers. The &lt;a href=&quot;asynchronouschannelgroup#isTerminated--&quot;&gt;&lt;code&gt;isTerminated&lt;/code&gt;&lt;/a&gt; method is used to test if the group has terminated, and the &lt;a href=&quot;asynchronouschannelgroup#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; method can be used to block until the group has terminated.</source>
          <target state="translated">&lt;a href=&quot;asynchronouschannelgroup#shutdown--&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt; 방법은 초기화하는 데 사용되는 &lt;em&gt;정상 종료&lt;/em&gt; 그룹을. 순차적 종료는 그룹을 종료로 표시합니다. 그룹에 바인딩하는 채널을 구성하려고 시도하면 &lt;a href=&quot;shutdownchannelgroupexception&quot;&gt; &lt;code&gt;ShutdownChannelGroupException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다. 그룹의 종료 여부는 &lt;a href=&quot;asynchronouschannelgroup#isShutdown--&quot;&gt; &lt;code&gt;isShutdown&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 테스트 할 수 있습니다 . 종료되면, 그룹의 &lt;em&gt;종료는&lt;/em&gt; 그룹에 바인딩 된 모든 비동기 채널이 폐쇄 될 때, 모든 적극적으로 실행 완료 핸들러는 실행을 완료하고, 그룹에 의해 사용되는 리소스는 해제됩니다. 완료 핸들러를 실행중인 스레드를 중지하거나 중단하려고 시도하지 않습니다. &lt;a href=&quot;asynchronouschannelgroup#isTerminated--&quot;&gt; &lt;code&gt;isTerminated&lt;/code&gt; 에&lt;/a&gt; 있어서, 상기 그룹이 종료되었는지 검사하기 위해 사용되며&lt;a href=&quot;asynchronouschannelgroup#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt; 메소드는 그룹이 종료 될 때까지 차단하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b514369062ab3b9e80aad31b822e6bf912e55f38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asynchronouschannelgroup#shutdownNow--&quot;&gt;&lt;code&gt;shutdownNow&lt;/code&gt;&lt;/a&gt; method can be used to initiate a &lt;em&gt;forceful shutdown&lt;/em&gt; of the group. In addition to the actions performed by an orderly shutdown, the &lt;code&gt;shutdownNow&lt;/code&gt; method closes all open channels in the group as if by invoking the &lt;a href=&quot;asynchronouschannel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;asynchronouschannelgroup#shutdownNow--&quot;&gt; &lt;code&gt;shutdownNow&lt;/code&gt; 의의&lt;/a&gt; 방법은 시작하는 데 사용할 수있는 &lt;em&gt;강력한 종료&lt;/em&gt; 그룹을. 순차적 종료에 의해 수행 된 조치 외에도 &lt;code&gt;shutdownNow&lt;/code&gt; 메소드는 &lt;a href=&quot;asynchronouschannel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하는 것처럼 그룹의 모든 열린 채널을 닫습니다 .</target>
        </trans-unit>
        <trans-unit id="b0ba63e1a3f588adc27a9ff386437373fd12a3c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asynchronoussocketchannel#read-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asynchronoussocketchannel#write-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods defined by this class allow a timeout to be specified when initiating a read or write operation. If the timeout elapses before an operation completes then the operation completes with the exception &lt;a href=&quot;interruptedbytimeoutexception&quot;&gt;&lt;code&gt;InterruptedByTimeoutException&lt;/code&gt;&lt;/a&gt;. A timeout may leave the channel, or the underlying connection, in an inconsistent state. Where the implementation cannot guarantee that bytes have not been read from the channel then it puts the channel into an implementation specific &lt;em&gt;error state&lt;/em&gt;. A subsequent attempt to initiate a &lt;code&gt;read&lt;/code&gt; operation causes an unspecified runtime exception to be thrown. Similarly if a &lt;code&gt;write&lt;/code&gt; operation times out and the implementation cannot guarantee bytes have not been written to the channel then further attempts to &lt;code&gt;write&lt;/code&gt; to the channel cause an unspecified runtime exception to be thrown. When a timeout elapses then the state of the &lt;a href=&quot;../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, or the sequence of buffers, for the I/O operation is not defined. Buffers should be discarded or at least care must be taken to ensure that the buffers are not accessed while the channel remains open. All methods that accept timeout parameters treat values less than or equal to zero to mean that the I/O operation does not timeout.</source>
          <target state="translated">&lt;a href=&quot;asynchronoussocketchannel#read-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;asynchronoussocketchannel#write-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 이 클래스에 의해 정의 된 메소드는 읽기 나 쓰기 작업을 시작할 때 타임 아웃을 지정할 수 있습니다. 조작이 완료되기 전에 시간 종료가 경과하면 &lt;a href=&quot;interruptedbytimeoutexception&quot;&gt; &lt;code&gt;InterruptedByTimeoutException&lt;/code&gt; &lt;/a&gt; 예외로 조작이 완료됩니다 . 시간 초과로 인해 채널 또는 기본 연결이 일관성이없는 상태로 남아있을 수 있습니다. 구현시 채널에서 바이트를 읽지 않았다고 보장 할 수없는 경우에는 채널을 구현 관련 &lt;em&gt;오류 상태로&lt;/em&gt; 만듭니다. 이후에 &lt;code&gt;read&lt;/code&gt; 작업 을 시작 하면 지정되지 않은 런타임 예외가 발생합니다. 마찬가지로 &lt;code&gt;write&lt;/code&gt; 작업 시간이 초과되고 구현시 바이트가 채널에 기록되지 않았다고 보장 할 수없는 경우 채널에 &lt;code&gt;write&lt;/code&gt; 시도 하면 지정되지 않은 런타임 예외가 발생합니다. 시간 초과가 경과 하면 I / O 작업 에 대한 &lt;a href=&quot;../bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; &lt;/a&gt; 상태 또는 버퍼 시퀀스가 ​​정의되지 않습니다. 채널을 열어 둔 상태에서 버퍼에 액세스하지 않도록 버퍼를 폐기하거나 최소한주의를 기울여야합니다. 시간 종료 매개 변수를 승인하는 모든 메소드는 I / O 조작이 시간 종료되지 않음을 의미하기 위해 0보다 작거나 같은 값을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="ff23faa6b9710e7149b05774884ffc2d0c84dc55" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;atomicintegerarray&quot;&gt;&lt;code&gt;AtomicIntegerArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;atomiclongarray&quot;&gt;&lt;code&gt;AtomicLongArray&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;atomicreferencearray&quot;&gt;&lt;code&gt;AtomicReferenceArray&lt;/code&gt;&lt;/a&gt; classes further extend atomic operation support to arrays of these types. These classes are also notable in providing &lt;code&gt;volatile&lt;/code&gt; access semantics for their array elements, which is not supported for ordinary arrays.</source>
          <target state="translated">&lt;a href=&quot;atomicintegerarray&quot;&gt; &lt;code&gt;AtomicIntegerArray&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;atomiclongarray&quot;&gt; &lt;code&gt;AtomicLongArray&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;atomicreferencearray&quot;&gt; &lt;code&gt;AtomicReferenceArray&lt;/code&gt; &lt;/a&gt; 클래스는 이러한 형태의 배열 원자 동작 지원을 연장한다. 이 클래스는 또한 일반적인 배열에서는 지원되지 않는 배열 요소에 &lt;code&gt;volatile&lt;/code&gt; 액세스 의미론을 제공하는 데 주목할 만합니다 .</target>
        </trans-unit>
        <trans-unit id="7021ba930ee249423077383cf0109781f9028e26" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;atomicintegerarray&quot;&gt;&lt;code&gt;AtomicIntegerArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;atomiclongarray&quot;&gt;&lt;code&gt;AtomicLongArray&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;atomicreferencearray&quot;&gt;&lt;code&gt;AtomicReferenceArray&lt;/code&gt;&lt;/a&gt; classes further extend atomic operation support to arrays of these types. These classes are also notable in providing &lt;code&gt;volatile&lt;/code&gt; access semantics for their array elements.</source>
          <target state="translated">&lt;a href=&quot;atomicintegerarray&quot;&gt; &lt;code&gt;AtomicIntegerArray&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;atomiclongarray&quot;&gt; &lt;code&gt;AtomicLongArray&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;atomicreferencearray&quot;&gt; &lt;code&gt;AtomicReferenceArray&lt;/code&gt; &lt;/a&gt; 클래스는 이러한 형태의 배열 원자 동작 지원을 연장한다. 이러한 클래스는 배열 요소 에 대한 &lt;code&gt;volatile&lt;/code&gt; 액세스 의미 체계를 제공하는데도 유명 합니다.</target>
        </trans-unit>
        <trans-unit id="154013ac578d40011c0e881853d2d1cf4c7084e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;atomicmarkablereference&quot;&gt;&lt;code&gt;AtomicMarkableReference&lt;/code&gt;&lt;/a&gt; class associates a single boolean with a reference. For example, this bit might be used inside a data structure to mean that the object being referenced has logically been deleted. The &lt;a href=&quot;atomicstampedreference&quot;&gt;&lt;code&gt;AtomicStampedReference&lt;/code&gt;&lt;/a&gt; class associates an integer value with a reference. This may be used for example, to represent version numbers corresponding to series of updates.</source>
          <target state="translated">&lt;a href=&quot;atomicmarkablereference&quot;&gt; &lt;code&gt;AtomicMarkableReference&lt;/code&gt; 의&lt;/a&gt; 클래스는 단일의 불리언 값을 참조와 관련. 예를 들어,이 비트는 데이터 구조 내에서 사용되어 참조되는 객체가 논리적으로 삭제되었음을 의미 할 수 있습니다. &lt;a href=&quot;atomicstampedreference&quot;&gt; &lt;code&gt;AtomicStampedReference&lt;/code&gt; 의&lt;/a&gt; 클래스는 참조를 정수 값을 연관시킨다. 예를 들어 일련의 업데이트에 해당하는 버전 번호를 나타내는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e0bb33867e93c786974aecb9c28853d1fb48aa1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; is required to be supported and therefore the set contains at least one element, &quot;basic&quot;.</source>
          <target state="translated">&lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; 가&lt;/a&gt; 지원 될 필요가 있으므로 집합 &quot;기본&quot;은 적어도 하나 개의 원소를 포함한다.</target>
        </trans-unit>
        <trans-unit id="42fec1b7f85b596fee4ca045a99c27b6e05ae27f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;attribute/package-summary&quot;&gt;&lt;code&gt;javax.print.attribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;attribute/standard/package-summary&quot;&gt;&lt;code&gt;javax.print.attribute.standard&lt;/code&gt;&lt;/a&gt; packages define print attributes, which describe the capabilities of a print service, specify the requirements of a print job, and track the progress of a print job.</source>
          <target state="translated">&lt;a href=&quot;attribute/package-summary&quot;&gt; &lt;code&gt;javax.print.attribute&lt;/code&gt; 의&lt;/a&gt; 및 &lt;a href=&quot;attribute/standard/package-summary&quot;&gt; &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; 의&lt;/a&gt; 패키지는 인쇄 서비스의 기능을 설명하는 인쇄 속성, 인쇄 작업의 요구 사항을 지정하고 인쇄 작업의 진행 상황을 추적 정의합니다.</target>
        </trans-unit>
        <trans-unit id="1bec0e906f3a1df2a6a9ba13ac4e098e5f62af15" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt; class includes methods for determining the format of an audio file, obtaining an audio input stream from an audio file, and writing an audio file from an audio input stream.</source>
          <target state="translated">&lt;a href=&quot;audiosystem&quot;&gt; &lt;code&gt;AudioSystem&lt;/code&gt; &lt;/a&gt; 클래스는 오디오 파일의 포맷을 결정하는 단계, 오디오 파일의 오디오 입력 스트림을 획득하고, 오디오 입력 스트림에서 오디오 파일을 기록하기위한 방법을 포함한다.</target>
        </trans-unit>
        <trans-unit id="5ac6194267d0e25c2097930b8f5fbaf32e490bf5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; class defines methods to read and update a &lt;em&gt;basic&lt;/em&gt; set of file attributes that are common to many file systems.</source>
          <target state="translated">&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; 의&lt;/a&gt; 클래스를 정의 방법은 읽고 업데이트 &lt;em&gt;기본&lt;/em&gt; 많은 파일 시스템에 공통되는 파일 특성의 집합입니다.</target>
        </trans-unit>
        <trans-unit id="9008207e38a099728a1e599c9fd10ddfa22dae76" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;bigdecimal#toEngineeringString--&quot;&gt;&lt;code&gt;toEngineeringString()&lt;/code&gt;&lt;/a&gt; method may be used for presenting numbers with exponents in engineering notation, and the &lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt;&lt;code&gt;setScale&lt;/code&gt;&lt;/a&gt; method may be used for rounding a &lt;code&gt;BigDecimal&lt;/code&gt; so it has a known number of digits after the decimal point.</source>
          <target state="translated">&lt;a href=&quot;bigdecimal#toEngineeringString--&quot;&gt; &lt;code&gt;toEngineeringString()&lt;/code&gt; &lt;/a&gt; 메소드 공학 표기법 지수와 숫자를 표시에 이용 될 수 있고, &lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt; &lt;code&gt;setScale&lt;/code&gt; &lt;/a&gt; 방법은 라운딩을 위해 사용될 수있다 &lt;code&gt;BigDecimal&lt;/code&gt; 는 소수점 이후 숫자 알려진 번호를 갖도록.</target>
        </trans-unit>
        <trans-unit id="e2929b7aad495e34766a177c1e114f9cc3750748" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;blockingdeque&quot;&gt;&lt;code&gt;BlockingDeque&lt;/code&gt;&lt;/a&gt; interface extends &lt;code&gt;BlockingQueue&lt;/code&gt; to support both FIFO and LIFO (stack-based) operations. Class &lt;a href=&quot;linkedblockingdeque&quot;&gt;&lt;code&gt;LinkedBlockingDeque&lt;/code&gt;&lt;/a&gt; provides an implementation.</source>
          <target state="translated">&lt;a href=&quot;blockingdeque&quot;&gt; &lt;code&gt;BlockingDeque&lt;/code&gt; 를&lt;/a&gt; 인터페이스는 확장 &lt;code&gt;BlockingQueue&lt;/code&gt; 모두 FIFO 및 LIFO (스택 기반) 동작을 지원한다. &lt;a href=&quot;linkedblockingdeque&quot;&gt; &lt;code&gt;LinkedBlockingDeque&lt;/code&gt; &lt;/a&gt; 클래스 는 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b2fd22bc1464c414a0571863354563eb9bb6d8fd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;calendar#HOUR_OF_DAY&quot;&gt;&lt;code&gt;HOUR_OF_DAY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;calendar#HOUR&quot;&gt;&lt;code&gt;HOUR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#AM_PM&quot;&gt;&lt;code&gt;AM_PM&lt;/code&gt;&lt;/a&gt; fields are handled independently and the &lt;a href=&quot;#time_resolution&quot;&gt;the resolution rule for the time of day&lt;/a&gt; is applied. Clearing one of the fields doesn't reset the hour of day value of this &lt;code&gt;Calendar&lt;/code&gt;. Use &lt;a href=&quot;calendar#set-int-int-&quot;&gt;&lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt;&lt;/a&gt; to reset the hour value.</source>
          <target state="translated">&lt;a href=&quot;calendar#HOUR_OF_DAY&quot;&gt; &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;calendar#HOUR&quot;&gt; &lt;code&gt;HOUR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;calendar#AM_PM&quot;&gt; &lt;code&gt;AM_PM&lt;/code&gt; &lt;/a&gt; 필드는 독립적으로 처리하고, &lt;a href=&quot;#time_resolution&quot;&gt;하루 중 시간의 해결 규칙이&lt;/a&gt; 적용됩니다. 필드 중 하나를 지우면이 &lt;code&gt;Calendar&lt;/code&gt; 의 시간 값이 재설정되지 않습니다 . 시간 값을 재설정 하려면 &lt;a href=&quot;calendar#set-int-int-&quot;&gt; &lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f04591de46efc6d10158813651253c9ef9e12e5d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;certpathbuilder#getRevocationChecker--&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathBuilder&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">&lt;a href=&quot;certpathbuilder#getRevocationChecker--&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt; 메소드는 애플리케이션에 의해 사용되는 추가적인 알고리즘 특정 파라미터 및 선택 지정할 수 &lt;code&gt;CertPathBuilder&lt;/code&gt; 에 인증서의 폐기 상태를 확인할 때한다. 다음은 PKIX 알고리즘과 함께 사용되는 방법을 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="c2fe006c42d37a0e6b495c7077cf3ce1bbd6e97e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;certpathvalidator#getRevocationChecker--&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathValidator&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">&lt;a href=&quot;certpathvalidator#getRevocationChecker--&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt; 메소드는 애플리케이션에 의해 사용되는 추가적인 알고리즘 특정 파라미터 및 선택 지정할 수 &lt;code&gt;CertPathValidator&lt;/code&gt; 는 인증서의 폐기 상태를 확인할 때한다. 다음은 PKIX 알고리즘과 함께 사용되는 방법을 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="353391e89ff7caccf4fa0ecf1b6ada580292d90f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; interface is extended by several other interfaces.</source>
          <target state="translated">&lt;a href=&quot;channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt; 인터페이스는 여러 다른 인터페이스에 의해 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="12b29184356586926a8d665851524b8f725c12e2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;channels&quot;&gt;&lt;code&gt;Channels&lt;/code&gt;&lt;/a&gt; utility class defines static methods that support the interoperation of the stream classes of the &lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt; package with the channel classes of this package. An appropriate channel can be constructed from an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;, and conversely an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt; can be constructed from a channel. A &lt;a href=&quot;../../io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to decode bytes from a given readable byte channel, and conversely a &lt;a href=&quot;../../io/writer&quot;&gt;&lt;code&gt;Writer&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to encode characters into bytes and write them to a given writable byte channel.</source>
          <target state="translated">&lt;a href=&quot;channels&quot;&gt; &lt;code&gt;Channels&lt;/code&gt; &lt;/a&gt; 유틸리티 클래스는 스트림 클래스의 상호 지원 정적 메소드 정의 &lt;a href=&quot;../../io/package-summary&quot;&gt; &lt;code&gt;java.io&lt;/code&gt; 의&lt;/a&gt; 이 패키지의 채널 클래스와 패키지를. 적절한 채널은 &lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt; 에서 구성 할 수 있으며 반대로 &lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt; 은 채널에서 구성 할 수 있습니다. 주어진 문자 세트를 사용하여 주어진 읽기 가능한 바이트 채널에서 바이트를 디코딩 하는 &lt;a href=&quot;../../io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt; 할 수 있으며, 반대로 주어진 문자 세트를 사용하여 문자를 바이트로 인코딩하고 주어진 쓰기 가능한 바이트 채널에 쓰는 &lt;a href=&quot;../../io/writer&quot;&gt; &lt;code&gt;Writer&lt;/code&gt; 를 생성&lt;/a&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13bd1e29b4330451ff38da9cb77e5dbd6672f0ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;channels&quot;&gt;&lt;code&gt;Channels&lt;/code&gt;&lt;/a&gt; utility class defines static methods that support the interoperation of the stream classes of the &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; package with the channel classes of this package. An appropriate channel can be constructed from an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;, and conversely an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt; can be constructed from a channel. A &lt;a href=&quot;../../io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to decode bytes from a given readable byte channel, and conversely a &lt;a href=&quot;../../io/writer&quot;&gt;&lt;code&gt;Writer&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to encode characters into bytes and write them to a given writable byte channel.</source>
          <target state="translated">&lt;a href=&quot;channels&quot;&gt; &lt;code&gt;Channels&lt;/code&gt; &lt;/a&gt; 유틸리티 클래스는 스트림 클래스의 상호 지원 정적 메소드 정의 &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 의 이 패키지의 채널 클래스와 패키지를. 적절한 채널은 &lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt; 으로부터 구성 될 수 있고 , 반대로 &lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt; 은 채널로부터 구성 될 수 있습니다. 주어진 문자셋을 사용하여 주어진 읽을 수있는 바이트 채널에서 바이트를 디코딩 하는 &lt;a href=&quot;../../io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt; 를 구성 할 수 있으며, 반대로 주어진 문자셋을 사용하여 문자를 바이트로 인코딩하고 지정된 쓰기 가능한 바이트 채널에 기록 하는 &lt;a href=&quot;../../io/writer&quot;&gt; &lt;code&gt;Writer&lt;/code&gt; &lt;/a&gt; 를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f057642b4bb486cc33d79cbc367d51cb24e2bda" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; class defines methods for creating coders for a given charset and for retrieving the various names associated with a charset. It also defines static methods for testing whether a particular charset is supported, for locating charset instances by name, and for constructing a map that contains every charset for which support is available in the current Java virtual machine.</source>
          <target state="translated">&lt;a href=&quot;charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt; 클래스는 지정된 캐릭터 세트에 대한 코더의 작성 및 캐릭터 세트에 관련한 다양한 이름을 검색하는 방법을 정의합니다. 또한 특정 문자 세트가 지원되는지 테스트하고 이름으로 문자 세트 인스턴스를 찾고 현재 Java 가상 머신에서 지원되는 모든 문자 세트를 포함하는 맵을 구성하는 정적 메소드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="26b62da2bb56725ff2decf8f098a1aafbd9d9b2c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;classloader#builtinLoaders&quot;&gt;builtin class loaders&lt;/a&gt; do not explicitly define &lt;code&gt;Package&lt;/code&gt; objects for packages in &lt;em&gt;named modules&lt;/em&gt;. Instead those packages are automatically defined and have no specification and implementation versioning information.</source>
          <target state="translated">&lt;a href=&quot;classloader#builtinLoaders&quot;&gt;내장 클래스 로더는&lt;/a&gt; 명시 적으로 정의하지 않는 &lt;code&gt;Package&lt;/code&gt; 에서 패키지 개체를 &lt;em&gt;명명 된 모듈&lt;/em&gt; . 대신 이러한 패키지는 자동으로 정의되며 사양 및 구현 버전 정보가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a67cff32a8cc7c58f69e3c11acfe781fdb3c37d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;concurrentlinkedqueue&quot;&gt;&lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt;&lt;/a&gt; class supplies an efficient scalable thread-safe non-blocking FIFO queue. The &lt;a href=&quot;concurrentlinkeddeque&quot;&gt;&lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt;&lt;/a&gt; class is similar, but additionally supports the &lt;a href=&quot;../deque&quot;&gt;&lt;code&gt;Deque&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;concurrentlinkedqueue&quot;&gt; &lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt; 를&lt;/a&gt; 클래스 공급 효율적인 확장 성이 높고, thread 세이프 인 비 블로킹 FIFO 큐. &lt;a href=&quot;concurrentlinkeddeque&quot;&gt; &lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt; &lt;/a&gt; 클래스는 비슷하지만, 추가로 지원 &lt;a href=&quot;../deque&quot;&gt; &lt;code&gt;Deque&lt;/code&gt; 와&lt;/a&gt; 인터페이스를.</target>
        </trans-unit>
        <trans-unit id="8f05e709096b93b1da433f74acd77bc05bb25621" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; interface describes condition variables that may be associated with Locks. These are similar in usage to the implicit monitors accessed using &lt;code&gt;Object.wait&lt;/code&gt;, but offer extended capabilities. In particular, multiple &lt;code&gt;Condition&lt;/code&gt; objects may be associated with a single &lt;code&gt;Lock&lt;/code&gt;. To avoid compatibility issues, the names of &lt;code&gt;Condition&lt;/code&gt; methods are different from the corresponding &lt;code&gt;Object&lt;/code&gt; versions.</source>
          <target state="translated">&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt; 인터페이스와 연관된 잠금 상태 변수를 기술. &lt;code&gt;Object.wait&lt;/code&gt; 를 사용하여 액세스 한 암시 적 모니터와 사용법이 비슷 하지만 확장 된 기능을 제공합니다. 특히, 여러 &lt;code&gt;Condition&lt;/code&gt; 객체는 단일 &lt;code&gt;Lock&lt;/code&gt; 과 연관 될 수 있습니다 . 호환성 문제를 피하기 위해 &lt;code&gt;Condition&lt;/code&gt; 메서드 의 이름은 해당 &lt;code&gt;Object&lt;/code&gt; 버전 과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="9e8041c88b3dcafc9b4f4c5eb63f4ac4c547288c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e9dd68445d5385bb05545d5acae99f43bf46af4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd9235cbf846fb05154c7fff0a0c527bea890016" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_LOCAL_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_LOCAL_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6aeff022cca7462b1d24d181862f8642f26d64d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75e1a69d924196bb7f31b2df6ac058a6b61c95bc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt; where the instant is converted from &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;UTC&lt;/code&gt; offset. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt; 순간이 변환되어 &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt; 은 Using &lt;code&gt;UTC&lt;/code&gt; 오프셋. 파싱은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7bbd020b4b15b4b357c33b60139663bc5ab3a2b4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt;&lt;code&gt;withChronology&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the chronology. If overridden, the date-time value is converted to the chronology before formatting. During parsing the date-time value is converted to the chronology before it is returned.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt; &lt;code&gt;withChronology&lt;/code&gt; 의&lt;/a&gt; 방법은 새로운 포매터 우선 그 연대기를 반환합니다. 재정의하면 날짜-시간 값이 형식화되기 전에 연대기로 변환됩니다. 구문 분석하는 동안 날짜-시간 값은 반환되기 전에 연대기로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="c2be0f0e5c7bfb256821fc337fa24120b0dbdc22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withDecimalStyle-java.time.format.DecimalStyle-&quot;&gt;&lt;code&gt;withDecimalStyle&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the &lt;a href=&quot;decimalstyle&quot;&gt;&lt;code&gt;DecimalStyle&lt;/code&gt;&lt;/a&gt;. The DecimalStyle symbols are used for formatting and parsing.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#withDecimalStyle-java.time.format.DecimalStyle-&quot;&gt; &lt;code&gt;withDecimalStyle&lt;/code&gt; 의&lt;/a&gt; 방법은 새로운 포매터 우선 그 반환 &lt;a href=&quot;decimalstyle&quot;&gt; &lt;code&gt;DecimalStyle&lt;/code&gt; 을&lt;/a&gt; . DecimalStyle 기호는 형식화 및 구문 분석에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="65e1e451917eff1d1ca40b8cd181f08037d85fa5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the locale. The locale affects some aspects of formatting and parsing. For example, the &lt;a href=&quot;datetimeformatter#ofLocalizedDate-java.time.format.FormatStyle-&quot;&gt;&lt;code&gt;ofLocalizedDate&lt;/code&gt;&lt;/a&gt; provides a formatter that uses the locale specific date format.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale&lt;/code&gt; 의&lt;/a&gt; 방법은 새로운 포매터 무시하는 로케일을 돌려줍니다. 로케일은 형식화 및 구문 분석의 일부 측면에 영향을줍니다. 예를 들어 &lt;a href=&quot;datetimeformatter#ofLocalizedDate-java.time.format.FormatStyle-&quot;&gt; &lt;code&gt;ofLocalizedDate&lt;/code&gt; &lt;/a&gt; 는 로캘 별 날짜 형식을 사용하는 포맷터를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ac11e4705d1cea60755dd413e0d7e05004a9574f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withResolverFields-java.time.temporal.TemporalField...-&quot;&gt;&lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt;&lt;/a&gt; parameter allows the set of fields that will be resolved to be filtered before resolving starts. For example, if the formatter has parsed a year, month, day-of-month and day-of-year, then there are two approaches to resolve a date: (year + month + day-of-month) and (year + day-of-year). The resolver fields allows one of the two approaches to be selected. If no resolver fields are set then both approaches must result in the same date.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#withResolverFields-java.time.temporal.TemporalField...-&quot;&gt; &lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt; &lt;/a&gt; 매개 변수는 시작을 해결하기 전에 필터링 할 해결 될 것입니다 필드의 설정을 할 수 있습니다. 예를 들어, 포맷터가 연도, 월, 일 및 월을 구문 분석 한 경우 날짜를 해결하는 두 가지 방법이 있습니다 : (년 + 월 + 일) 및 (년 + 일). 리졸버 필드를 사용하면 두 가지 접근 방식 중 하나를 선택할 수 있습니다. 리졸버 필드가 설정되지 않은 경우 두 접근법 모두 동일한 날짜를 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="c56041ee24c2e62e6514b35eb7cc04f16f5b0ac1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withZone-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZone&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the zone. If overridden, the date-time value is converted to a ZonedDateTime with the requested ZoneId before formatting. During parsing the ZoneId is applied before the value is returned.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#withZone-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZone&lt;/code&gt; 의&lt;/a&gt; 방법은 영역을 재정의하는 새로운 포매터를 반환합니다. 재정의 된 경우 날짜-시간 값은 포맷하기 전에 요청 된 ZoneId를 사용하여 ZonedDateTime으로 변환됩니다. 파싱하는 동안 값이 반환되기 전에 ZoneId가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="cd859580f99613136d80c7938719b23f4da700bc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; for all of the &lt;code&gt;MBeanAttributeInfo&lt;/code&gt;, &lt;code&gt;MBeanParameterInfo&lt;/code&gt;, and &lt;code&gt;MBeanOperationInfo&lt;/code&gt; objects contained in the &lt;code&gt;MBeanInfo&lt;/code&gt; will have a field &lt;code&gt;openType&lt;/code&gt; whose value is the &lt;a href=&quot;openmbean/opentype&quot;&gt;&lt;code&gt;OpenType&lt;/code&gt;&lt;/a&gt; specified by the mapping rules above. So even when &lt;code&gt;getType()&lt;/code&gt; is &quot;&lt;code&gt;int&lt;/code&gt;&quot;, &lt;code&gt;getDescriptor().getField(&quot;openType&quot;)&lt;/code&gt; will be &lt;a href=&quot;openmbean/simpletype#INTEGER&quot;&gt;&lt;code&gt;SimpleType.INTEGER&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt; 의 모든 &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; , &lt;code&gt;MBeanParameterInfo&lt;/code&gt; 의 및 &lt;code&gt;MBeanOperationInfo&lt;/code&gt; 에 포함 된 객체 &lt;code&gt;MBeanInfo&lt;/code&gt; 필드해야합니다 &lt;code&gt;openType&lt;/code&gt; 에 그 값입니다 &lt;a href=&quot;openmbean/opentype&quot;&gt; &lt;code&gt;OpenType&lt;/code&gt; &lt;/a&gt; 위의 매핑 규칙에 의해 지정합니다. 따라서 &lt;code&gt;getType()&lt;/code&gt; 이 &quot; &lt;code&gt;int&lt;/code&gt; &quot;인 경우에도 &lt;code&gt;getDescriptor().getField(&quot;openType&quot;)&lt;/code&gt; 은 &lt;a href=&quot;openmbean/simpletype#INTEGER&quot;&gt; &lt;code&gt;SimpleType.INTEGER&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="83d652f00d8a04827d939d634a6f87310e7e3196" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;docflavor&quot;&gt;&lt;code&gt;DocFlavor&lt;/code&gt;&lt;/a&gt; class represents the print data format, such as JPEG or PostScript. A &lt;code&gt;DocFlavor&lt;/code&gt; object consists of a MIME type, which describes the format, and a document representation class name that indicates how the document is delivered to the printer or output stream. An application uses the &lt;code&gt;DocFlavor&lt;/code&gt; and an attribute set to find printers that can print the document type specified by the &lt;code&gt;DocFlavor&lt;/code&gt; and have the capabilities specified by the attribute set.</source>
          <target state="translated">&lt;a href=&quot;docflavor&quot;&gt; &lt;code&gt;DocFlavor&lt;/code&gt; &lt;/a&gt; 클래스는 JPEG 또는 PostScript 등의 인쇄 데이터 형식을 나타냅니다. &lt;code&gt;DocFlavor&lt;/code&gt; 객체 형식을 설명하는 MIME 유형 및 문서 프린터 또는 출력 스트림으로 전달되는 방법을 나타내는 문서 표현 클래스 명 구성된다. 응용 프로그램은 사용 &lt;code&gt;DocFlavor&lt;/code&gt; 에 의해 지정된 문서 유형 인쇄 할 수있는 프린터를 찾을 수 및 속성 세트를 &lt;code&gt;DocFlavor&lt;/code&gt; 의를 하고, 속성 세트로 지정된 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0513df95d4bb865252722a8d8255694866eed6fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domlocator&quot;&gt;&lt;code&gt;DOMLocator&lt;/code&gt;&lt;/a&gt; node may be passed to &lt;a href=&quot;../transformerexception&quot;&gt;&lt;code&gt;TransformerException&lt;/code&gt;&lt;/a&gt; objects, and retrieved by trying to cast the result of the &lt;a href=&quot;../transformerexception#getLocator()&quot;&gt;&lt;code&gt;TransformerException.getLocator()&lt;/code&gt;&lt;/a&gt; method. The implementation has no responsibility to use a DOMLocator instead of a &lt;a href=&quot;../sourcelocator&quot;&gt;&lt;code&gt;SourceLocator&lt;/code&gt;&lt;/a&gt; (though line numbers and the like do not make much sense for a DOM), so the result of getLocator must always be tested with an instanceof.</source>
          <target state="translated">&lt;a href=&quot;domlocator&quot;&gt; &lt;code&gt;DOMLocator&lt;/code&gt; 의&lt;/a&gt; 노드로 전달 될 수있다 &lt;a href=&quot;../transformerexception&quot;&gt; &lt;code&gt;TransformerException&lt;/code&gt; 에서&lt;/a&gt; 의 결과를 전송하려고하여 객체, 검색 &lt;a href=&quot;../transformerexception#getLocator()&quot;&gt; &lt;code&gt;TransformerException.getLocator()&lt;/code&gt; &lt;/a&gt; 방법. 구현은 &lt;a href=&quot;../sourcelocator&quot;&gt; &lt;code&gt;SourceLocator&lt;/code&gt; &lt;/a&gt; 대신 DOMLocator를 사용할 책임이 없으므로 (DOM에는 줄 번호 등이별로 의미가 없지만) getLocator의 결과는 항상 instanceof로 테스트해야합니다.</target>
        </trans-unit>
        <trans-unit id="1b6ef39fe04c1b93a69d3237b32d9c958a683847" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domresult&quot;&gt;&lt;code&gt;DOMResult&lt;/code&gt;&lt;/a&gt; class allows a &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; to be specified to which result DOM nodes will be appended. If an output node is not specified, the transformer will use &lt;a href=&quot;../../parsers/documentbuilder#newDocument()&quot;&gt;&lt;code&gt;DocumentBuilder.newDocument()&lt;/code&gt;&lt;/a&gt; to create an output &lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; node. If a node is specified, it should be one of the following: &lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../../org/w3c/dom/element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../../../org/w3c/dom/documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt;. Specification of any other node type is implementation dependent and undefined by this API. If the result is a &lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, the output of the transformation must have a single element root to set as the document element.</source>
          <target state="translated">&lt;a href=&quot;domresult&quot;&gt; &lt;code&gt;DOMResult&lt;/code&gt; &lt;/a&gt; 클래스는 허용 &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt; 있는에 DOM 노드가 추가됩니다 결과를 지정해야합니다. 출력 노드가 지정되지 않은 경우 변환기는 &lt;a href=&quot;../../parsers/documentbuilder#newDocument()&quot;&gt; &lt;code&gt;DocumentBuilder.newDocument()&lt;/code&gt; &lt;/a&gt; 를 사용하여 출력 &lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt; 노드 를 만듭니다 . 노드가 지정되면 &lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../../../org/w3c/dom/element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../../../org/w3c/dom/documentfragment&quot;&gt; &lt;code&gt;DocumentFragment&lt;/code&gt; &lt;/a&gt; 중 하나 여야합니다 . 다른 노드 유형의 사양은 구현에 따라 다르며이 API에 의해 정의되지 않습니다. 결과가 &lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt; 인 경우 변환 출력에는 문서 요소로 설정할 단일 요소 루트가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="59b5c96271b6b21c6c835702a2a5b8f3209ac347" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domsource&quot;&gt;&lt;code&gt;DOMSource&lt;/code&gt;&lt;/a&gt; class allows the client of the implementation of this API to specify a DOM &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; as the source of the input tree. The model of how the Transformer deals with the DOM tree in terms of mismatches with the &lt;a href=&quot;http://www.w3.org/TR/xslt#data-model&quot;&gt;XSLT data model&lt;/a&gt; or other data models is beyond the scope of this document. Any of the nodes derived from &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; are legal input.</source>
          <target state="translated">&lt;a href=&quot;domsource&quot;&gt; &lt;code&gt;DOMSource&lt;/code&gt; 인의&lt;/a&gt; 클래스는이 API의 구현의 클라이언트는 DOM를 지정할 수 있습니다 &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt; 입력 트리의 소스로. Transformer가 &lt;a href=&quot;http://www.w3.org/TR/xslt#data-model&quot;&gt;XSLT 데이터 모델&lt;/a&gt; 또는 기타 데이터 모델 과의 불일치 측면에서 DOM 트리를 처리하는 방법에 대한 모델은이 문서의 범위를 벗어납니다. &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt; 에서 파생 된 모든 노드 는 합법적 인 입력입니다.</target>
        </trans-unit>
        <trans-unit id="4a2a33b021a508069e12369db4ed8235c23dd820" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;dosfileattributeview&quot;&gt;&lt;code&gt;DosFileAttributeView&lt;/code&gt;&lt;/a&gt; class extends &lt;code&gt;BasicFileAttributeView&lt;/code&gt; by defining methods to access the legacy &quot;DOS&quot; file attributes supported on file systems such as File Allocation Tabl (FAT), commonly used in consumer devices.</source>
          <target state="translated">&lt;a href=&quot;dosfileattributeview&quot;&gt; &lt;code&gt;DosFileAttributeView&lt;/code&gt; 의&lt;/a&gt; 클래스는 확장 &lt;code&gt;BasicFileAttributeView&lt;/code&gt; 을 &quot;DOS&quot;파일은 일반적으로 소비자 기기에 사용되는 등의 파일 할당 TABL (FAT)와 같은 파일 시스템에 지원되는 속성 기존에 액세스하는 방법을 정의하여.</target>
        </trans-unit>
        <trans-unit id="7ab5e9ce6e03076464956d6cf8e9e21635c83e58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class contains utility methods to convert from other common forms to &lt;code&gt;Callable&lt;/code&gt; classes.</source>
          <target state="translated">&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt; 클래스는 다른 일반적인 형태로 변환하는 유틸리티 메소드가 포함되어 &lt;code&gt;Callable&lt;/code&gt; 클래스를.</target>
        </trans-unit>
        <trans-unit id="8883df3bd964eac1086fd88dfe3a79b6d06f9e71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class provides convenient factory methods for the ScheduledExecutorService implementations provided in this package.</source>
          <target state="translated">&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt; 클래스는이 패키지로 제공되는 ScheduledExecutorService 구현을위한 편리한 팩토리 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e042e1e41822ebb3dc29ae27670b8475a6541a52" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class provides factory methods for the executor services provided in this package.</source>
          <target state="translated">&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt; 클래스는,이 패키지로 제공되는 실행 프로그램 서비스에 대한 팩토리 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2310b091914d7e1f782b2d472dcaf0ac025a8afd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors#defaultThreadFactory()&quot;&gt;&lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt;&lt;/a&gt; method provides a more useful simple implementation, that sets the created thread context to known values before returning it.</source>
          <target state="translated">&lt;a href=&quot;executors#defaultThreadFactory()&quot;&gt; &lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt; &lt;/a&gt; 방법은 더 유용한 간단한 구현, 그 집합을 반환하기 전에 공지 된 값으로 만들어진 스레드 콘텍스트를 제공한다.</target>
        </trans-unit>
        <trans-unit id="89123dab0161f270435efa4f546d779073bf8797" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors#defaultThreadFactory--&quot;&gt;&lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt;&lt;/a&gt; method provides a more useful simple implementation, that sets the created thread context to known values before returning it.</source>
          <target state="translated">&lt;a href=&quot;executors#defaultThreadFactory--&quot;&gt; &lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt; &lt;/a&gt; 방법은 더 유용한 간단한 구현, 그 집합을 반환하기 전에 공지 된 값으로 만들어진 스레드 콘텍스트를 제공한다.</target>
        </trans-unit>
        <trans-unit id="5340eb811bb6c4f04eac908f1a47f6cb848e143e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt;&lt;code&gt;short description&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;beaninfo#getBeanDescriptor()&quot;&gt;&lt;code&gt;bean descriptor&lt;/code&gt;&lt;/a&gt; of the annotated class.</source>
          <target state="translated">&lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt; &lt;code&gt;short description&lt;/code&gt; &lt;/a&gt; 에 대한 &lt;a href=&quot;beaninfo#getBeanDescriptor()&quot;&gt; &lt;code&gt;bean descriptor&lt;/code&gt; &lt;/a&gt; 주석 클래스의.</target>
        </trans-unit>
        <trans-unit id="465886a723384dd38a46e42193428a7e1aeabfc9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt;&lt;code&gt;short description&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;beaninfo#getPropertyDescriptors()&quot;&gt;&lt;code&gt;descriptor&lt;/code&gt;&lt;/a&gt; of the annotated property.</source>
          <target state="translated">&lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt; &lt;code&gt;short description&lt;/code&gt; &lt;/a&gt; 에 대한 &lt;a href=&quot;beaninfo#getPropertyDescriptors()&quot;&gt; &lt;code&gt;descriptor&lt;/code&gt; &lt;/a&gt; 주석 재산의.</target>
        </trans-unit>
        <trans-unit id="452f568b1f5309f7b11b0f0b96affb2b04cc97db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;fileattribute&quot;&gt;&lt;code&gt;FileAttribute&lt;/code&gt;&lt;/a&gt; interface represents the value of an attribute for cases where the attribute value is required to be set atomically when creating an object in the file system.</source>
          <target state="translated">&lt;a href=&quot;fileattribute&quot;&gt; &lt;code&gt;FileAttribute&lt;/code&gt; 의&lt;/a&gt; 인터페이스는 파일 시스템에서 오브젝트를 생성 할 때 속성 값이 원자 적으로 설정해야 할 경우에 대한 속성의 값을 나타낸다.</target>
        </trans-unit>
        <trans-unit id="44a89ca3f8f23eed63e4ec0b6a8bbaea5d50e095" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class supports the usual operations of reading bytes from, and writing bytes to, a channel connected to a file, as well as those of querying and modifying the current file position and truncating the file to a specific size. It defines methods for acquiring locks on the whole file or on a specific region of a file; these methods return instances of the &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;FileLock&lt;/code&gt;&lt;/a&gt; class. Finally, it defines methods for forcing updates to the file to be written to the storage device that contains it, for efficiently transferring bytes between the file and other channels, and for mapping a region of the file directly into memory.</source>
          <target state="translated">&lt;a href=&quot;filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt; 하는 파일에 연결된 채널뿐만 아니라 질의 및 현재의 파일 위치를 수정하고, 특정 크기의 파일을 자르는 것과을 클래스의 바이트를 판독하는 통상의 동작을 지원하고, 쓰기 바이트. 전체 파일 또는 파일의 특정 영역에서 잠금을 획득하는 방법을 정의합니다. 이러한 메소드는 &lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;FileLock&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스를 리턴합니다 . 마지막으로, 파일과 다른 채널간에 바이트를 효율적으로 전송하고 파일 영역을 메모리에 직접 매핑하기 위해 파일에 대한 업데이트가 파일을 포함하는 저장 장치에 기록되도록하는 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="7eca07bd746a1861a27802a596cf1b4a71de4344" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods may be used to read or update the owner of the file.</source>
          <target state="translated">&lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt; 방법을 읽거나 파일의 소유자를 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73d3f705da9ee89357307dce73865b84f0d0035f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filer&quot;&gt;&lt;code&gt;Filer&lt;/code&gt;&lt;/a&gt; interface discusses restrictions on how processors can operate on files.</source>
          <target state="translated">&lt;a href=&quot;filer&quot;&gt; &lt;code&gt;Filer&lt;/code&gt; &lt;/a&gt; 인터페이스는 프로세서 파일에서 작동 할 수있는 방법에 대한 제한 사항에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ec58fefa4089af5e49bf486507980bb4e39cbe29" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filestore#supportsFileAttributeView(java.lang.String)&quot;&gt;&lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt;&lt;/a&gt; method may be used to test if an underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the file attributes identified by a file attribute view.</source>
          <target state="translated">&lt;a href=&quot;filestore#supportsFileAttributeView(java.lang.String)&quot;&gt; &lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt; &lt;/a&gt; 기본이되는 경우 방법은 시험에 사용될 수있는 &lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt; 파일이 파일 속성보기로 식별 속성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="b4b3f7c632fcbbe9935cc6379723468392ffc252" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filestore#supportsFileAttributeView-java.lang.String-&quot;&gt;&lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt;&lt;/a&gt; method may be used to test if an underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the file attributes identified by a file attribute view.</source>
          <target state="translated">&lt;a href=&quot;filestore#supportsFileAttributeView-java.lang.String-&quot;&gt; &lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt; &lt;/a&gt; 기본이되는 경우 방법은 시험에 사용될 수있는 &lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt; 파일이 파일 속성보기로 식별 속성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="f8cb4d9733bf198a655b4589202cc06dace82870" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getFileStores--&quot;&gt;&lt;code&gt;getFileStores&lt;/code&gt;&lt;/a&gt; method returns an iterator over the underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;file-stores&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getFileStores--&quot;&gt; &lt;code&gt;getFileStores&lt;/code&gt; 의&lt;/a&gt; 방법은 기본에 대한 반복자를 반환 &lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;file-stores&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cfd644bf38b0bb664dee5219ee6298f48860e300" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method converts a system dependent &lt;em&gt;path string&lt;/em&gt;, returning a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; object that may be used to locate and access a file.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; 의&lt;/a&gt; 방법은 시스템에 따라 변환 &lt;em&gt;경로 문자열을&lt;/em&gt; 복귀, &lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 파일의 위치를 액세스하기 위해 사용될 수있다 개체를.</target>
        </trans-unit>
        <trans-unit id="85bb054fbeaeb496dcbb5f7913fdc2da38a5d8df" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getPathMatcher-java.lang.String-&quot;&gt;&lt;code&gt;getPathMatcher&lt;/code&gt;&lt;/a&gt; method is used to create a &lt;a href=&quot;pathmatcher&quot;&gt;&lt;code&gt;PathMatcher&lt;/code&gt;&lt;/a&gt; that performs match operations on paths.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getPathMatcher-java.lang.String-&quot;&gt; &lt;code&gt;getPathMatcher&lt;/code&gt; &lt;/a&gt; 방법은 생성하는 데 사용된다 &lt;a href=&quot;pathmatcher&quot;&gt; &lt;code&gt;PathMatcher&lt;/code&gt; 과&lt;/a&gt; 수행이 경로에 대한 연산을 일치한다.</target>
        </trans-unit>
        <trans-unit id="5a69e75d4d560b20f800838bf2f2879aa7b27302" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getUserPrincipalLookupService--&quot;&gt;&lt;code&gt;getUserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt;&lt;code&gt;UserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; to lookup users or groups by name.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getUserPrincipalLookupService--&quot;&gt; &lt;code&gt;getUserPrincipalLookupService&lt;/code&gt; 의&lt;/a&gt; 방법은 반환 &lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt; &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; &lt;/a&gt; 이름으로 사용자 또는 그룹을 조회 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f447288e7932d315836b220e40a38ac2e592a02" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#newWatchService--&quot;&gt;&lt;code&gt;newWatchService&lt;/code&gt;&lt;/a&gt; method creates a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; that may be used to watch objects for changes and events.</source>
          <target state="translated">&lt;a href=&quot;filesystem#newWatchService--&quot;&gt; &lt;code&gt;newWatchService&lt;/code&gt; 의&lt;/a&gt; 방법은 생성 &lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt; 변경 및 이벤트에 대한 개체를 시청하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0df1d883900393179ef6a938286fb977dcd966a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;formatter#format-java.util.Locale-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; method for this object which has a locale argument does not change this value.</source>
          <target state="translated">로케일 인수가있는이 오브젝트 의 &lt;a href=&quot;formatter#format-java.util.Locale-java.lang.String-java.lang.Object...-&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt; 메소드는이 값을 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e68fc7c4ce0ce129079a142bdf3e6ba5e50c5128" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;futuretask&quot;&gt;&lt;code&gt;FutureTask&lt;/code&gt;&lt;/a&gt; class is an implementation of &lt;code&gt;Future&lt;/code&gt; that implements &lt;code&gt;Runnable&lt;/code&gt;, and so may be executed by an &lt;code&gt;Executor&lt;/code&gt;. For example, the above construction with &lt;code&gt;submit&lt;/code&gt; could be replaced by:</source>
          <target state="translated">&lt;a href=&quot;futuretask&quot;&gt; &lt;code&gt;FutureTask&lt;/code&gt; 의&lt;/a&gt; 클래스의 구현입니다 &lt;code&gt;Future&lt;/code&gt; 가 구현하는 것이 &lt;code&gt;Runnable&lt;/code&gt; 를 하고, 그래서에 의해 실행될 수있다 &lt;code&gt;Executor&lt;/code&gt; . 예를 들어, 위의 &lt;code&gt;submit&lt;/code&gt; 구조는 다음과 같이 대체 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ba414d1962554d1f8e4567bcf5d7da85351a76c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsconfiguration#getDefaultTransform()&quot;&gt;&lt;code&gt;getDefaultTransform&lt;/code&gt;&lt;/a&gt; for the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; of the &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;graphicsconfiguration#getDefaultTransform()&quot;&gt; &lt;code&gt;getDefaultTransform&lt;/code&gt; &lt;/a&gt; 에 대한 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 의 &lt;code&gt;Component&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39a8d2a83535770d869eebc4c30cb9198770d41d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSLUCENT&quot;&gt;&lt;code&gt;PERPIXEL_TRANSLUCENT&lt;/code&gt;&lt;/a&gt; translucency must be supported by the graphics device where this window is located</source>
          <target state="translated">&lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSLUCENT&quot;&gt; &lt;code&gt;PERPIXEL_TRANSLUCENT&lt;/code&gt; 의&lt;/a&gt; 투명성이 창가있는 그래픽 장치 지원해야합니다</target>
        </trans-unit>
        <trans-unit id="8a9920b2b3bdc4d70beb4a231bc49073bc86e240" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSPARENT&quot;&gt;&lt;code&gt;PERPIXEL_TRANSPARENT&lt;/code&gt;&lt;/a&gt; translucency must be supported by the underlying system</source>
          <target state="translated">&lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSPARENT&quot;&gt; &lt;code&gt;PERPIXEL_TRANSPARENT&lt;/code&gt; 의&lt;/a&gt; 투명도는 기본 시스템을 지원해야합니다</target>
        </trans-unit>
        <trans-unit id="c5d339fa5b74059e5d1ae5610caf66ae89534242" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsdevice.windowtranslucency#TRANSLUCENT&quot;&gt;&lt;code&gt;TRANSLUCENT&lt;/code&gt;&lt;/a&gt; translucency must be supported by the underlying system</source>
          <target state="translated">&lt;a href=&quot;graphicsdevice.windowtranslucency#TRANSLUCENT&quot;&gt; &lt;code&gt;TRANSLUCENT&lt;/code&gt; &lt;/a&gt; 반투명은 기본 시스템을 지원해야합니다</target>
        </trans-unit>
        <trans-unit id="ec992ef8c01d8a91b29b9663489a827132e70061" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsenvironment#getAllFonts()&quot;&gt;&lt;code&gt;getAllFonts&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;GraphicsEnvironment&lt;/code&gt; class returns an array of all font faces available in the system. These font faces are returned as &lt;code&gt;Font&lt;/code&gt; objects with a size of 1, identity transform and default font features. These base fonts can then be used to derive new &lt;code&gt;Font&lt;/code&gt; objects with varying sizes, styles, transforms and font features via the &lt;code&gt;deriveFont&lt;/code&gt; methods in this class.</source>
          <target state="translated">&lt;code&gt;GraphicsEnvironment&lt;/code&gt; 클래스 의 &lt;a href=&quot;graphicsenvironment#getAllFonts()&quot;&gt; &lt;code&gt;getAllFonts&lt;/code&gt; &lt;/a&gt; 메서드 는 시스템에서 사용할 수있는 모든 글꼴의 배열을 반환합니다. 이러한 글꼴은 크기가 1 인 &lt;code&gt;Font&lt;/code&gt; 개체, ID 변환 및 기본 글꼴 기능으로 반환됩니다 . 그런 다음 이러한 기본 글꼴을 사용 하여이 클래스 의 &lt;code&gt;deriveFont&lt;/code&gt; 메서드를 통해 다양한 크기, 스타일, 변형 및 글꼴 기능을 가진 새로운 &lt;code&gt;Font&lt;/code&gt; 객체 를 파생 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ac6fd445a8abbfdf6b8f85b02ec9c54bc64434b0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#base64&quot;&gt;Base64&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#base64&quot;&gt;Base64로는&lt;/a&gt; 알고리즘 URI를 변환.</target>
        </trans-unit>
        <trans-unit id="becff7faf751f42ccbca78d1ff611ab0fb00ba48" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;&gt;DSA-SHA1&lt;/a&gt; (DSS) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;&gt;DSA-SHA1&lt;/a&gt; (DSS) 서명 방식 알고리즘 URI.</target>
        </trans-unit>
        <trans-unit id="ee3f60b00b3529817693288491df29a6712e3331" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;&gt; Enveloped Signature&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;&gt;싸여의 서명&lt;/a&gt; 알고리즘 URI를 변환.</target>
        </trans-unit>
        <trans-unit id="0b88790d458afe33d2216d161472445474fc51cb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;&gt;HMAC-SHA1&lt;/a&gt; MAC signature method algorithm URI</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;&gt;HMAC-SHA1&lt;/a&gt; MAC 서명 방식 알고리즘 URI</target>
        </trans-unit>
        <trans-unit id="c19c2c2b7a22f554c7ae96b18019113331154992" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;&gt;RSA-SHA1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;&gt;RSA-SHA1&lt;/a&gt; (PKCS # 1)에있어서의 서명 알고리즘 URI.</target>
        </trans-unit>
        <trans-unit id="01bf5b4fc24fe23d8966259b4091df56900af996" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;&gt; SHA1&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;&gt;SHA1은&lt;/a&gt; 방법 알고리즘 URI 다이제스트.</target>
        </trans-unit>
        <trans-unit id="af7ee9cfcd3d6107b3c1dd50b03852f916c260e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1&quot;&gt; ECDSA-SHA1&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1&quot;&gt;ECDSA-SHA1은&lt;/a&gt; 서명 방식 알고리즘 URI (180-4을 FIPS).</target>
        </trans-unit>
        <trans-unit id="e4dedda2e7f7aea4568aa2c2eb187e63638d19af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224&quot;&gt; ECDSA-SHA224&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224&quot;&gt;ECDSA-SHA224은&lt;/a&gt; 서명 방식 알고리즘 URI (180-4을 FIPS).</target>
        </trans-unit>
        <trans-unit id="a53376ec8ca69ca3d54a2262f28511aa42273529" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256&quot;&gt; ECDSA-SHA256&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256&quot;&gt;ECDSA-SHA256은&lt;/a&gt; 서명 방식 알고리즘 URI (180-4을 FIPS).</target>
        </trans-unit>
        <trans-unit id="d85df8f41b660375d4442a1e15fa274557a89535" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384&quot;&gt; ECDSA-SHA384&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384&quot;&gt;ECDSA-SHA384은&lt;/a&gt; 서명 방식 알고리즘 URI (180-4을 FIPS).</target>
        </trans-unit>
        <trans-unit id="ad5bd96b17eae327314c8f39dfe7802a29acf09a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512&quot;&gt; ECDSA-SHA512&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512&quot;&gt;ECDSA-SHA512은&lt;/a&gt; 서명 방식 알고리즘 URI (180-4을 FIPS).</target>
        </trans-unit>
        <trans-unit id="8ae5b3c777b1e2d5a2186ca8a378affe9c7ade16" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha224&quot;&gt; HMAC-SHA224&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha224&quot;&gt;HMAC-SHA224&lt;/a&gt; MAC 서명 알고리즘 URI 방법.</target>
        </trans-unit>
        <trans-unit id="53de04ca23665c1a16a28adfdf8c893f824822a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha256&quot;&gt; HMAC-SHA256&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha256&quot;&gt;HMAC-SHA256&lt;/a&gt; MAC 서명 알고리즘 URI 방법.</target>
        </trans-unit>
        <trans-unit id="861114a3ecd86c3cab9aa4a66112c1e2ee43c6eb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha384&quot;&gt; HMAC-SHA384&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha384&quot;&gt;HMAC-SHA384&lt;/a&gt; MAC 서명 알고리즘 URI 방법.</target>
        </trans-unit>
        <trans-unit id="af1359431a4b4abc420088f3eaf4951469a38069" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha512&quot;&gt; HMAC-SHA512&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha512&quot;&gt;HMAC-SHA512&lt;/a&gt; MAC 서명 알고리즘 URI 방법.</target>
        </trans-unit>
        <trans-unit id="4fa675d632de88ac6516637e0feaed2abaaa090d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha224&quot;&gt; RSA-SHA224&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha224&quot;&gt;RSA-SHA224&lt;/a&gt; (PKCS # 1)에있어서의 서명 알고리즘 URI.</target>
        </trans-unit>
        <trans-unit id="eaddb66e627fa00f9ce8834f0acbf436a0c9d55a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;&gt; RSA-SHA256&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;&gt;RSA-SHA256&lt;/a&gt; (PKCS # 1)에있어서의 서명 알고리즘 URI.</target>
        </trans-unit>
        <trans-unit id="7fdeb91c4bb77cbff71ec5b53a24f31a2cfc8fb0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;&gt; RSA-SHA384&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;&gt;RSA-SHA384&lt;/a&gt; (PKCS # 1)에있어서의 서명 알고리즘 URI.</target>
        </trans-unit>
        <trans-unit id="36fa84d4352533e019faa9c861c57be646aeeb1f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;&gt; RSA-SHA512&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;&gt;RSA-SHA512&lt;/a&gt; (PKCS # 1)에있어서의 서명 알고리즘 URI.</target>
        </trans-unit>
        <trans-unit id="bc01f1e49eb4cbe40436d470538878c09a541e97" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha224&quot;&gt; SHA224&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha224&quot;&gt;SHA224&lt;/a&gt; 다이제스트 알고리즘 URI 방법.</target>
        </trans-unit>
        <trans-unit id="8c5c807f091255a14ff7a3da29c8287a037f9165" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha384&quot;&gt; SHA384&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha384&quot;&gt;SHA384&lt;/a&gt; 다이제스트 알고리즘 URI 방법.</target>
        </trans-unit>
        <trans-unit id="d84f835080934ddeca944780a8bafd9805086678" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#ripemd160&quot;&gt; RIPEMD-160&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#ripemd160&quot;&gt;RIPEMD-160&lt;/a&gt; 다이제스트 알고리즘 URI 방법.</target>
        </trans-unit>
        <trans-unit id="492ea7b910db2fa76b178f6f56dad826131e494e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;&gt; SHA256&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;&gt;SHA256&lt;/a&gt; 다이제스트 알고리즘 URI 방법.</target>
        </trans-unit>
        <trans-unit id="59642427325669eecdce19219f8c8dfb434e8443" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha512&quot;&gt; SHA512&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha512&quot;&gt;SHA512&lt;/a&gt; 다이제스트 알고리즘 URI 방법.</target>
        </trans-unit>
        <trans-unit id="6c7c6f971c0678438ecae16f111eb39141e3b969" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;Exclusive Canonical XML (without comments)&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;(의견 없음) 독점 정식 XML&lt;/a&gt; 정규화 방법 알고리즘 URI.</target>
        </trans-unit>
        <trans-unit id="9bba8474b6924be852a4fb82e20bd985dfbd627d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;&gt; Exclusive Canonical XML with comments&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;&gt;주석&lt;/a&gt; 정규화 메서드 알고리즘 URI가 있는 독점 정규 XML입니다 .</target>
        </trans-unit>
        <trans-unit id="9bc8e8bdb11de9b4d0c46e91f131a698d3a4fcc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2002/06/xmldsig-filter2&quot;&gt; XPath Filter 2&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2002/06/xmldsig-filter2&quot;&gt;의 XPath 필터 2&lt;/a&gt; 알고리즘 URI를 변환.</target>
        </trans-unit>
        <trans-unit id="31f1151a5b47c7982e4acc0910f8a4b52ca5d55f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha1-rsa-MGF1&quot;&gt; SHA1-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha1-rsa-MGF1&quot;&gt;SHA1-RSA-MGF1&lt;/a&gt; (PKCS # 1)에있어서의 서명 알고리즘 URI.</target>
        </trans-unit>
        <trans-unit id="c9aa58b291f03f83bf122fa950bfe3fcb22188d3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha224-rsa-MGF1&quot;&gt; SHA224-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha224-rsa-MGF1&quot;&gt;SHA224-RSA-MGF1&lt;/a&gt; (PKCS # 1)에있어서의 서명 알고리즘 URI.</target>
        </trans-unit>
        <trans-unit id="3175530d8fe15bfed754288d8676d3bf07d8afe0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1&quot;&gt; SHA256-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1&quot;&gt;SHA256-RSA-MGF1&lt;/a&gt; (PKCS # 1)에있어서의 서명 알고리즘 URI.</target>
        </trans-unit>
        <trans-unit id="3144f4088250ae9caf73443a7b313dce2cff775c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-224&quot;&gt; SHA3-224&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-224&quot;&gt;SHA3-224&lt;/a&gt; 다이제스트 알고리즘 URI 방법.</target>
        </trans-unit>
        <trans-unit id="5e6ba38dec8a0df92c6bd5c27c41609fff68bd20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-256&quot;&gt; SHA3-256&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-256&quot;&gt;SHA3-256&lt;/a&gt; 다이제스트 알고리즘 URI 방법.</target>
        </trans-unit>
        <trans-unit id="d7d8efc48e2075aca981620055a7e3c7b772d12c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-384&quot;&gt; SHA3-384&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-384&quot;&gt;SHA3-384&lt;/a&gt; 다이제스트 알고리즘 URI 방법.</target>
        </trans-unit>
        <trans-unit id="3fe8e6908bf5d6d9385ca4cfbc6956d3e11b3192" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-512&quot;&gt; SHA3-512&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-512&quot;&gt;SHA3-512&lt;/a&gt; 다이제스트 알고리즘 URI 방법.</target>
        </trans-unit>
        <trans-unit id="3e0da8972968f17f0432d7daf91118841009c746" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha384-rsa-MGF1&quot;&gt; SHA384-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha384-rsa-MGF1&quot;&gt;SHA384-RSA-MGF1&lt;/a&gt; (PKCS # 1)에있어서의 서명 알고리즘 URI.</target>
        </trans-unit>
        <trans-unit id="951b7da31a6ca5e6cfdec902f4b7f1ddcdba5734" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha512-rsa-MGF1&quot;&gt; SHA512-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha512-rsa-MGF1&quot;&gt;SHA512-RSA-MGF1&lt;/a&gt; (PKCS # 1)에있어서의 서명 알고리즘 URI.</target>
        </trans-unit>
        <trans-unit id="15e53346f59cf546f87a890d95118ee937cd487b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2009/xmldsig11#dsa-sha256&quot;&gt;DSA-SHA256&lt;/a&gt; (DSS) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2009/xmldsig11#dsa-sha256&quot;&gt;DSA-SHA256&lt;/a&gt; (DSS) 서명 방식 알고리즘 URI.</target>
        </trans-unit>
        <trans-unit id="f0a1935cb2f87664fbd1025122a44d8673e21bab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/1999/REC-xpath-19991116&quot;&gt;XPath&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/1999/REC-xpath-19991116&quot;&gt;XPath는&lt;/a&gt; 알고리즘 URI를 변환.</target>
        </trans-unit>
        <trans-unit id="90ca213841333d5dc68670f40a116f7342d94bf5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/1999/REC-xslt-19991116&quot;&gt;XSLT&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/1999/REC-xslt-19991116&quot;&gt;XSLT는&lt;/a&gt; 알고리즘 URI를 변환.</target>
        </trans-unit>
        <trans-unit id="fd24bfe3b04d3f02022c8e627280dee1e6b0b526" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;&gt;Canonical XML (without comments)&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;&gt;(의견 없음) 정규 XML&lt;/a&gt; 정규화 방법 알고리즘 URI.</target>
        </trans-unit>
        <trans-unit id="8d03ca9ec12e255299bb77708dc8410b70e2f6e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;&gt; Canonical XML with comments&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;&gt;주석&lt;/a&gt; 표준화 방법 알고리즘 URI가 있는 표준 XML입니다 .</target>
        </trans-unit>
        <trans-unit id="a98781d4e7260d7cef0e2c5a0ed41bd67c0822aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httprequest.bodypublishers#noBody()&quot;&gt;&lt;code&gt;noBody&lt;/code&gt;&lt;/a&gt; request body publisher can be used where no request body is required or appropriate. Whether a method is restricted, or not, is implementation specific. For example, some implementations may choose to restrict the &lt;code&gt;CONNECT&lt;/code&gt; method.</source>
          <target state="translated">&lt;a href=&quot;httprequest.bodypublishers#noBody()&quot;&gt; &lt;code&gt;noBody&lt;/code&gt; &lt;/a&gt; 없는 요청 본문이 요구되거나 적합한 곳 요청 본문 출판사 사용할 수있다. 메서드가 제한되는지 여부는 구현에 따라 다릅니다. 예를 들어, 일부 구현은 &lt;code&gt;CONNECT&lt;/code&gt; 메소드 를 제한하도록 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b121b64ccce6e083946b53f51efe1baa69ca2c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available after the entire response has been read.</source>
          <target state="translated">이 구독자를 사용 하는 &lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 는 전체 응답을 읽은 후에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="270c350cfd8851cc33080ad9adabc067ee58e5f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available immediately after the response headers have been read, without requiring to wait for the entire body to be processed. The response body bytes can then be obtained by subscribing to the publisher returned by the &lt;code&gt;HttpResponse&lt;/code&gt;&lt;a href=&quot;httpresponse#body()&quot;&gt;&lt;code&gt;body&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 구독자를 사용 하는 &lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 는 전체 본문이 처리 될 때까지 기다릴 필요없이 응답 헤더를 읽은 직후에 사용할 수 있습니다. 응답 본문 바이트는 &lt;code&gt;HttpResponse&lt;/code&gt; &lt;a href=&quot;httpresponse#body()&quot;&gt; &lt;code&gt;body&lt;/code&gt; &lt;/a&gt; 메서드 에서 반환 된 게시자를 구독하여 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc75a5baa31a01f6a547ced8e614c9253df03795" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available immediately after the response headers have been read, without requiring to wait for the entire body to be processed. The response body can then be read directly from the &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구독자를 사용 하는 &lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 는 전체 본문이 처리 될 때까지 기다릴 필요없이 응답 헤더를 읽은 직후에 사용할 수 있습니다. 그런 다음 응답 본문을 &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt; 에서 직접 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c4a301962377dbb6dfc7d3d088a9924195ee0fe6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available immediately after the response headers have been read, without requiring to wait for the entire body to be processed. The response body can then be read directly from the &lt;a href=&quot;../../../../java.base/java/util/stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 구독자를 사용 하는 &lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 는 전체 본문이 처리 될 때까지 기다릴 필요없이 응답 헤더를 읽은 직후에 사용할 수 있습니다. 그런 다음 응답 본문을 &lt;a href=&quot;../../../../java.base/java/util/stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; 에서 직접 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cee6ebd1c78062b9217ddd4f1433c90767823779" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html&quot;&gt; Catalog Standard&lt;/a&gt; distinguished &lt;code&gt;external identifiers&lt;/code&gt; from &lt;code&gt;uri entries&lt;/code&gt; as being used to solely identify DTDs, while &lt;code&gt;uri entries&lt;/code&gt; for other resources such as stylesheets and schema. The Java APIs, such as &lt;a href=&quot;../stream/xmlresolver&quot;&gt;&lt;code&gt;XMLResolver&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt;&lt;code&gt;LSResourceResolver&lt;/code&gt;&lt;/a&gt; however, make no such distinction. In consistent with the existing Java API, this CatalogResolver recognizes a system identifier as a URI and will search both &lt;code&gt;system&lt;/code&gt; and &lt;code&gt;uri&lt;/code&gt; entries in a catalog in order to find a matching entry.</source>
          <target state="translated">&lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html&quot;&gt;카탈로그 표준&lt;/a&gt; 구별 &lt;code&gt;external identifiers&lt;/code&gt; 에서 &lt;code&gt;uri entries&lt;/code&gt; 전적으로 DTD를 식별하는 데 사용되는 것으로 잠시 &lt;code&gt;uri entries&lt;/code&gt; 과 같은 스타일 시트 및 스키마와 같은 다른 자원. 그러나 &lt;a href=&quot;../stream/xmlresolver&quot;&gt; &lt;code&gt;XMLResolver&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt; &lt;code&gt;LSResourceResolver&lt;/code&gt; &lt;/a&gt; 와 같은 Java API 는 그러한 구분을하지 않습니다. 기존 Java API와 일치하는이 CatalogResolver는 시스템 식별자를 URI로 인식 하고 일치하는 항목을 찾기 위해 카탈로그에서 &lt;code&gt;system&lt;/code&gt; 및 &lt;code&gt;uri&lt;/code&gt; 항목을 모두 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="6a01a0650bec2f8bee323fb677c1487d4fef943f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=imf_overview&quot;&gt;Input Method Framework&lt;/a&gt; lets text components interact with input methods, separate software components that preprocess events to let users enter thousands of different characters using keyboards with far fewer keys. &lt;code&gt;JTextComponent&lt;/code&gt; is an &lt;em&gt;active client&lt;/em&gt; of the framework, so it implements the preferred user interface for interacting with input methods. As a consequence, some key events do not reach the text component because they are handled by an input method, and some text input reaches the text component as committed text within an &lt;a href=&quot;../../../java/awt/event/inputmethodevent&quot;&gt;&lt;code&gt;InputMethodEvent&lt;/code&gt;&lt;/a&gt; instead of as a key event. The complete text input is the combination of the characters in &lt;code&gt;keyTyped&lt;/code&gt; key events and committed text in input method events.</source>
          <target state="translated">&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=imf_overview&quot;&gt;입력 방법 프레임 워크는&lt;/a&gt; 입력 방법, 전처리 이벤트는 사용자가 훨씬 적은 키 키보드를 사용하여 수천 종류의 문자를 입력 할 수 있도록하는 것을 별도의 소프트웨어 구성 요소와 상호 작용 텍스트 구성 요소를 할 수 있습니다. &lt;code&gt;JTextComponent&lt;/code&gt; 는 프레임 워크 의 &lt;em&gt;활성 클라이언트&lt;/em&gt; 이므로 입력 메서드와 상호 작용하기위한 기본 사용자 인터페이스를 구현합니다. 결과적으로 일부 키 이벤트는 입력 메서드에 의해 처리되기 때문에 텍스트 구성 요소에 도달하지 않으며 일부 텍스트 입력 은 키 이벤트 대신 &lt;a href=&quot;../../../java/awt/event/inputmethodevent&quot;&gt; &lt;code&gt;InputMethodEvent&lt;/code&gt; &lt;/a&gt; 내에서 커밋 된 텍스트로 텍스트 구성 요소에 도달합니다 . 전체 텍스트 입력은 &lt;code&gt;keyTyped&lt;/code&gt; 키 이벤트의 문자와 입력 방법 이벤트의 커밋 된 텍스트 의 조합입니다 .</target>
        </trans-unit>
        <trans-unit id="761513f2b0bbba586605e4294850b23aff51188d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;imagereader#getSourceRegion-javax.imageio.ImageReadParam-int-int-&quot;&gt;&lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt;&lt;/a&gt; method may be used if only source clipping is desired.</source>
          <target state="translated">&lt;a href=&quot;imagereader#getSourceRegion-javax.imageio.ImageReadParam-int-int-&quot;&gt; &lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt; &lt;/a&gt; 에만 소스 클리핑이 요구된다면 방법이 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="1eedddde68bb46978d525f7790711dd02e0ebfc9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;inet6address#lform&quot;&gt;full uncompressed form&lt;/a&gt; of an IPv6 literal address is also valid.</source>
          <target state="translated">&lt;a href=&quot;inet6address#lform&quot;&gt;전체 비 압축 형태&lt;/a&gt; 의 IPv6 리터럴 주소는 유효합니다.</target>
        </trans-unit>
        <trans-unit id="89aa71069d9b64ba38bde1b7ed22da8a98a99b64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;inetaddress&quot;&gt;&lt;code&gt;InetAddress&lt;/code&gt;&lt;/a&gt; class is the abstraction representing an IP (Internet Protocol) address. It has two subclasses:</source>
          <target state="translated">&lt;a href=&quot;inetaddress&quot;&gt; &lt;code&gt;InetAddress&lt;/code&gt; &lt;/a&gt; 클래스는 IP (인터넷 프로토콜) 주소를 나타내는 추상화이다. 두 개의 서브 클래스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="63af60ec9959bd5779b0337a24c9f2bd2daa5ff3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;japaneseera#SHOWA&quot;&gt;&lt;code&gt;SHOWA&lt;/code&gt;&lt;/a&gt; era that contains 1970-01-01 (ISO calendar system) has the value 1 Later era is numbered 2 (&lt;a href=&quot;japaneseera#HEISEI&quot;&gt;&lt;code&gt;HEISEI&lt;/code&gt;&lt;/a&gt;). Earlier eras are numbered 0 (&lt;a href=&quot;japaneseera#TAISHO&quot;&gt;&lt;code&gt;TAISHO&lt;/code&gt;&lt;/a&gt;), -1 (&lt;a href=&quot;japaneseera#MEIJI&quot;&gt;&lt;code&gt;MEIJI&lt;/code&gt;&lt;/a&gt;), only Meiji and later eras are supported.</source>
          <target state="translated">1970-01-01 (ISO 달력 시스템)을 포함 하는 &lt;a href=&quot;japaneseera#SHOWA&quot;&gt; &lt;code&gt;SHOWA&lt;/code&gt; &lt;/a&gt; 시대의 값은 1입니다. 나중에 시대는 2 ( &lt;a href=&quot;japaneseera#HEISEI&quot;&gt; &lt;code&gt;HEISEI&lt;/code&gt; &lt;/a&gt; )입니다. 이전 시대 0 (번호가 &lt;a href=&quot;japaneseera#TAISHO&quot;&gt; &lt;code&gt;TAISHO&lt;/code&gt; 를&lt;/a&gt; ) -1 ( &lt;a href=&quot;japaneseera#MEIJI&quot;&gt; &lt;code&gt;MEIJI&lt;/code&gt; &lt;/a&gt; ) 만 이상 메이지 시대가 지원된다.</target>
        </trans-unit>
        <trans-unit id="5ad4c9f7c1d38ff17eed005c539f21753e0ecc72" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;japaneseera#SHOWA&quot;&gt;&lt;code&gt;SHOWA&lt;/code&gt;&lt;/a&gt; era that contains 1970-01-01 (ISO calendar system) has the value 1. Later eras are numbered from 2 (&lt;a href=&quot;japaneseera#HEISEI&quot;&gt;&lt;code&gt;HEISEI&lt;/code&gt;&lt;/a&gt;). Earlier eras are numbered 0 (&lt;a href=&quot;japaneseera#TAISHO&quot;&gt;&lt;code&gt;TAISHO&lt;/code&gt;&lt;/a&gt;), -1 (&lt;a href=&quot;japaneseera#MEIJI&quot;&gt;&lt;code&gt;MEIJI&lt;/code&gt;&lt;/a&gt;)).</source>
          <target state="translated">1970-01-01 (ISO 달력 시스템)을 포함 하는 &lt;a href=&quot;japaneseera#SHOWA&quot;&gt; &lt;code&gt;SHOWA&lt;/code&gt; &lt;/a&gt; 시대의 값은 1입니다. 이후 시대는 2부터 시작됩니다 ( &lt;a href=&quot;japaneseera#HEISEI&quot;&gt; &lt;code&gt;HEISEI&lt;/code&gt; &lt;/a&gt; ). 이전 시대는 0 ( &lt;a href=&quot;japaneseera#TAISHO&quot;&gt; &lt;code&gt;TAISHO&lt;/code&gt; &lt;/a&gt; ), -1 ( &lt;a href=&quot;japaneseera#MEIJI&quot;&gt; &lt;code&gt;MEIJI&lt;/code&gt; &lt;/a&gt; ))입니다.</target>
        </trans-unit>
        <trans-unit id="53e05d8dddbec45eaf69a1abeb3e0b1d8a3d4dde" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;linkedhashmap#removeEldestEntry-java.util.Map.Entry-&quot;&gt;&lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt;&lt;/a&gt; method may be overridden to impose a policy for removing stale mappings automatically when new mappings are added to the map.</source>
          <target state="translated">&lt;a href=&quot;linkedhashmap#removeEldestEntry-java.util.Map.Entry-&quot;&gt; &lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt; &lt;/a&gt; 메소드는 맵에 새로운 매핑을 추가 할 때, 자동적으로 무효 인 매핑을 제거하기위한 정책을 부과 오버라이드 (override) 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4349deb740443b661611a6b6b7d62724a4a215b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;locateregistry&quot;&gt;&lt;code&gt;LocateRegistry&lt;/code&gt;&lt;/a&gt; class provides a programmatic API for constructing a bootstrap reference to a &lt;code&gt;Registry&lt;/code&gt; at a remote address (see the static &lt;code&gt;getRegistry&lt;/code&gt; methods) and for creating and exporting a &lt;code&gt;Registry&lt;/code&gt; in the current VM on a particular local address (see the static &lt;code&gt;createRegistry&lt;/code&gt; methods).</source>
          <target state="translated">&lt;a href=&quot;locateregistry&quot;&gt; &lt;code&gt;LocateRegistry&lt;/code&gt; 의&lt;/a&gt; 클래스는 프로그래밍 (A)에 부트 스트랩 기준 구성하는 API 제공 &lt;code&gt;Registry&lt;/code&gt; 리모트 주소 (정적 참조 &lt;code&gt;getRegistry&lt;/code&gt; 의의 방법) 및 생성 및 내보내기 &lt;code&gt;Registry&lt;/code&gt; (정적 참조 특정 로컬 주소, 현재 VM하여 &lt;code&gt;createRegistry&lt;/code&gt; 된 메소드).</target>
        </trans-unit>
        <trans-unit id="685e9f05827cafac5b9700afb54eb83f6c776e78" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; interface supports locking disciplines that differ in semantics (reentrant, fair, etc), and that can be used in non-block-structured contexts including hand-over-hand and lock reordering algorithms. The main implementation is &lt;a href=&quot;reentrantlock&quot;&gt;&lt;code&gt;ReentrantLock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt; 인터페이스 의미론 (재진입 공정 등)이 다른 분야 잠금 지원하고, 그 핸드 오버 및 핸드 잠금 재정렬 알고리즘을 포함하여 비 - 블록 구조의 상황에서 사용될 수있다. 주요 구현은 &lt;a href=&quot;reentrantlock&quot;&gt; &lt;code&gt;ReentrantLock&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3180b0ec0d45d09638da4a7e022ef32c09072ff6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;managementfactory&quot;&gt;&lt;code&gt;ManagementFactory&lt;/code&gt;&lt;/a&gt; class is the management factory class for the Java platform. This class provides a set of static factory methods to obtain the MXBeans for the Java platform to allow an application to access the MXBeans directly.</source>
          <target state="translated">&lt;a href=&quot;managementfactory&quot;&gt; &lt;code&gt;ManagementFactory&lt;/code&gt; &lt;/a&gt; 클래스는 Java 플랫폼의 관리 팩토리 클래스입니다. 이 클래스는 애플리케이션이 MXBean에 직접 액세스 할 수 있도록 Java 플랫폼 용 MXBean을 얻기위한 정적 팩토리 메소드 세트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6aee927bc4b4fd7e8464ec83c8eda0aa86fccfbd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;managementfactory#getPlatformManagementInterfaces--&quot;&gt;&lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt;&lt;/a&gt; method returns all management interfaces supported in the Java virtual machine including the standard management interfaces listed in the tables below as well as the management interfaces extended by the JDK implementation.</source>
          <target state="translated">&lt;a href=&quot;managementfactory#getPlatformManagementInterfaces--&quot;&gt; &lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt; 의&lt;/a&gt; 방법은 테이블 아래뿐만 아니라 JDK 구현에 의해 확장 된 관리 인터페이스에 나와있는 표준 관리 인터페이스를 비롯한 자바 가상 머신에서 지원하는 모든 관리 인터페이스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c882421782dfc7080f4d7ba69c0672ccbaee2976" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matcher#find--&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; method scans the input sequence looking for the next subsequence that matches the pattern.</source>
          <target state="translated">&lt;a href=&quot;matcher#find--&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt; 방법은 패턴과 일치하는 다음의 부분 순서를 찾고 입력 시퀀스를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="f8f9d8ffa3354e5ea114ec9c9eecd670dfa20d2a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matcher#lookingAt--&quot;&gt;&lt;code&gt;lookingAt&lt;/code&gt;&lt;/a&gt; method attempts to match the input sequence, starting at the beginning, against the pattern.</source>
          <target state="translated">&lt;a href=&quot;matcher#lookingAt--&quot;&gt; &lt;code&gt;lookingAt&lt;/code&gt; 에&lt;/a&gt; 있어서의 시도는 패턴에 대해, 처음부터 시작하여, 입력 순서와 일치한다.</target>
        </trans-unit>
        <trans-unit id="81a4840468c5585768ffd0339442ff61c0e3f495" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matcher#matches--&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method attempts to match the entire input sequence against the pattern.</source>
          <target state="translated">&lt;a href=&quot;matcher#matches--&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt; 방법을 시도 패턴에 대한 전체 입력 순서와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="3b536101e87b34402f5a75ef5e45b85b8065447c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;memorypoolmxbean#getUsage--&quot;&gt;&lt;code&gt;getUsage()&lt;/code&gt;&lt;/a&gt; method provides an estimate of the current usage of a memory pool. For a garbage-collected memory pool, the amount of used memory includes the memory occupied by all objects in the pool including both &lt;em&gt;reachable&lt;/em&gt; and &lt;em&gt;unreachable&lt;/em&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;memorypoolmxbean#getUsage--&quot;&gt; &lt;code&gt;getUsage()&lt;/code&gt; &lt;/a&gt; 메소드는 메모리 풀의 현재의 사용량의 추정치를 제공한다. 가비지 수집 메모리 풀의 경우 사용 된 메모리 양에는 &lt;em&gt;도달 가능한&lt;/em&gt; 개체 와 &lt;em&gt;연결할 수없는&lt;/em&gt; 개체를 포함하여 풀의 모든 개체가 차지하는 메모리가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="2917cba2196f42068511cb8866976f8cefd8ba43" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported--&quot;&gt;&lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if this functionality is supported.</source>
          <target state="translated">&lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported--&quot;&gt; &lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt; &lt;/a&gt; 메소드는이 기능이 지원되는지를 결정하기 위해 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="00777c593762897a62ff30f882e9e994e0fd4435" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;Lookup Factory Methods&lt;/a&gt; correspond to all major use cases for methods, constructors, and fields. These use cases may be distinguished using small integers as follows:</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;조회 공장 방법&lt;/a&gt; 방법, 생성자, 및 필드의 모든 주요 사용 사례에 해당합니다. 이러한 사용 사례는 다음과 같이 작은 정수를 사용하여 구별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c3b7cfe91905e95935f97b235b0958422f4db84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;moduledescriptor#version()&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt;, and the module name when the attribute &quot;&lt;code&gt;Automatic-Module-Name&lt;/code&gt;&quot; is not present, are derived from the file name of the JAR file as follows:</source>
          <target state="translated">&lt;a href=&quot;moduledescriptor#version()&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt; 및 속성 &quot;모듈 이름 &lt;code&gt;Automatic-Module-Name&lt;/code&gt; 다음과 같이&quot;존재하지 않는이, JAR 파일의 파일 이름에서 파생됩니다 :</target>
        </trans-unit>
        <trans-unit id="803a5dc5363ca39a6c192f06387b9fe75f794ba3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt;&lt;/a&gt; method is used to join a group and receive all multicast datagrams sent to the group. A channel may join several multicast groups and may join the same group on several &lt;a href=&quot;../../net/networkinterface&quot;&gt;&lt;code&gt;interfaces&lt;/code&gt;&lt;/a&gt;. Membership is dropped by invoking the &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method on the returned &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt;. If the underlying platform supports source filtering then the &lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;membershipkey#unblock-java.net.InetAddress-&quot;&gt;&lt;code&gt;unblock&lt;/code&gt;&lt;/a&gt; methods can be used to block or unblock multicast datagrams from particular source addresses.</source>
          <target state="translated">(가) &lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt; &lt;/a&gt; 방법은, 그룹에 가입하고 그룹에 전송 된 모든 멀티 캐스트 데이터 그램을 수신하는 데 사용된다. 채널은 여러 멀티 캐스트 그룹에 참여할 수 있으며 여러 &lt;a href=&quot;../../net/networkinterface&quot;&gt; &lt;code&gt;interfaces&lt;/code&gt; &lt;/a&gt; 에서 동일한 그룹에 참여할 수 있습니다 . 반환 된 &lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; &lt;/a&gt; 에 대해 &lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 멤버쉽을 삭제합니다 . 기본 플랫폼이 소스 필터링을 지원하는 경우 &lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;membershipkey#unblock-java.net.InetAddress-&quot;&gt; &lt;code&gt;unblock&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 특정 소스 주소에서 멀티 캐스트 데이터 그램을 차단 또는 차단 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="586959a334aab9367192bda3b22ae8905ccfbfb5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-java.net.InetAddress-&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt;&lt;/a&gt; method is used to begin receiving datagrams sent to a group whose source address matches a given source address. This method throws &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; if the underlying platform does not support source filtering. Membership is &lt;em&gt;cumulative&lt;/em&gt; and this method may be invoked again with the same group and interface to allow receiving datagrams from other source addresses. The method returns a &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt; that represents membership to receive datagrams from the given source address. Invoking the key's &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method drops membership so that datagrams from the source address can no longer be received.</source>
          <target state="translated">(가) &lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-java.net.InetAddress-&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt; &lt;/a&gt; 메소드가 그 소스 어드레스 특정 소스 어드레스와 일치하는 그룹으로 전송 된 데이터 그램의 수신을 개시하는 데 사용된다. 기본 플랫폼이 소스 필터링을 지원하지 &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt; 경우이 메소드는 UnsupportedOperationException을 발생시킵니다. 멤버쉽은 &lt;em&gt;누적&lt;/em&gt; 되며 다른 소스 주소에서 데이터 그램을 수신 할 수 있도록 동일한 그룹 및 인터페이스로이 메소드를 다시 호출 할 수 있습니다. 이 메소드는 주어진 소스 주소에서 데이터 그램을 수신하기 위해 &lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; &lt;/a&gt; 을 나타내는 MembershipKey 를 리턴합니다 . 키의 &lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt; 메소드를 호출하면 멤버쉽이 삭제되어 소스 주소의 데이터 그램을 더 이상 수신 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ea1666c946dbc92e3963a08d51b7fe1ff2e05b97" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt;&lt;code&gt;syncAll&lt;/code&gt;&lt;/a&gt; operation provides a way to force threads to accept a new target value, even if there is no other synchronization.</source>
          <target state="translated">&lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt; &lt;code&gt;syncAll&lt;/code&gt; 의&lt;/a&gt; 작업은 다른 동기가없는 경우에도, 새로운 목표 값을 받아 스레드를 강제 할 수있는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4a33de6ddb9b787f9d72d46f03220512c25c8dcf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkchannel&quot;&gt;&lt;code&gt;NetworkChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to &lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; the channel's socket, obtain the address to which the socket is bound, and methods to &lt;a href=&quot;networkchannel#getOption(java.net.SocketOption)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; socket options. The &lt;a href=&quot;multicastchannel&quot;&gt;&lt;code&gt;MulticastChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to join Internet Protocol (IP) multicast groups.</source>
          <target state="translated">&lt;a href=&quot;networkchannel&quot;&gt; &lt;code&gt;NetworkChannel&lt;/code&gt; &lt;/a&gt; 인터페이스를 지정하는 방법은하기 &lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; , 채널의 소켓을 소켓의 바인드되는 주소를 구 및 방법을 &lt;a href=&quot;networkchannel#getOption(java.net.SocketOption)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;networkchannel#setOption(java.net.SocketOption,T)&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt; 소켓 옵션. &lt;a href=&quot;multicastchannel&quot;&gt; &lt;code&gt;MulticastChannel&lt;/code&gt; 의&lt;/a&gt; 인터페이스를 지정하는 방법은 인터넷 프로토콜 (IP) 멀티 캐스트 그룹에 합류.</target>
        </trans-unit>
        <trans-unit id="86bc696e481ab25ea679a816f2b2344f73e99298" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkchannel&quot;&gt;&lt;code&gt;NetworkChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; the channel's socket, obtain the address to which the socket is bound, and methods to &lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; socket options. The &lt;a href=&quot;multicastchannel&quot;&gt;&lt;code&gt;MulticastChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to join Internet Protocol (IP) multicast groups.</source>
          <target state="translated">&lt;a href=&quot;networkchannel&quot;&gt; &lt;code&gt;NetworkChannel&lt;/code&gt; &lt;/a&gt; 인터페이스를 지정하는 방법은하기 &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; , 채널의 소켓을 소켓의 바인드되는 주소를 구 및 방법을 &lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt; 소켓 옵션. &lt;a href=&quot;multicastchannel&quot;&gt; &lt;code&gt;MulticastChannel&lt;/code&gt; 의&lt;/a&gt; 인터페이스를 지정하는 방법은 인터넷 프로토콜 (IP) 멀티 캐스트 그룹에 합류.</target>
        </trans-unit>
        <trans-unit id="97e5a8c6cebdfee9806373945502b19fe12625e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; methods that do not otherwise have a value to return are specified to return the network channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; &lt;/a&gt; 반환 값을 돌려주지 않는 방법은 자신을 호출 한 네트워크 채널을 반환하도록 지정됩니다. 이를 통해 메소드 호출을 연결할 수 있습니다. 이 인터페이스의 구현은 구현 클래스에서 메소드 호출을 체인 할 수 있도록 리턴 유형을 특수화해야합니다.</target>
        </trans-unit>
        <trans-unit id="2aae4de2a8761dadc1703ebe8bd9d27e209c3303" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkinterface&quot;&gt;&lt;code&gt;NetworkInterface&lt;/code&gt;&lt;/a&gt; class provides APIs to browse and query all the networking interfaces (e.g. ethernet connection or PPP endpoint) of the local machine. It is through that class that you can check if any of the local interfaces is configured to support IPv6.</source>
          <target state="translated">&lt;a href=&quot;networkinterface&quot;&gt; &lt;code&gt;NetworkInterface&lt;/code&gt; &lt;/a&gt; 클래스는 검색 및 로컬 컴퓨터의 쿼리 모든 네트워크 인터페이스 (예 : 이더넷 연결 또는 PPP 엔드 포인트)에 API를 제공합니다. 해당 클래스를 통해 로컬 인터페이스가 IPv6을 지원하도록 구성되어 있는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d4398a2182ad9d3d156c72bc1e1b46b563498d0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;openmbeanconstructorinfo#getSignature--&quot;&gt;&lt;code&gt;getSignature()&lt;/code&gt;&lt;/a&gt; method should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt; which implements the &lt;a href=&quot;openmbeanparameterinfo&quot;&gt;&lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt;&lt;/a&gt; interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;openmbeanconstructorinfo#getSignature--&quot;&gt; &lt;code&gt;getSignature()&lt;/code&gt; &lt;/a&gt; 메소드 실행시 서브 클래스의 인스턴스의 배열 돌려 &lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; 의&lt;/a&gt; 어떤 구현 &lt;a href=&quot;openmbeanparameterinfo&quot;&gt; &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; 의&lt;/a&gt; 인터페이스 (일반적으로 &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ce3b1f0ce29ed84d089633cd109fcedd10fa19a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;openmbeaninfo#getAttributes--&quot;&gt;&lt;code&gt;getAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbeaninfo#getOperations--&quot;&gt;&lt;code&gt;getOperations()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;openmbeaninfo#getConstructors--&quot;&gt;&lt;code&gt;getConstructors()&lt;/code&gt;&lt;/a&gt; methods of the implementing class should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt;&lt;code&gt;MBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; respectively which implement the &lt;a href=&quot;openmbeanattributeinfo&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbeanoperationinfo&quot;&gt;&lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;openmbeanconstructorinfo&quot;&gt;&lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; interface respectively.</source>
          <target state="translated">구현 클래스 의 &lt;a href=&quot;openmbeaninfo#getAttributes--&quot;&gt; &lt;code&gt;getAttributes()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;openmbeaninfo#getOperations--&quot;&gt; &lt;code&gt;getOperations()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;openmbeaninfo#getConstructors--&quot;&gt; &lt;code&gt;getConstructors()&lt;/code&gt; &lt;/a&gt; 메소드는 각각 &lt;a href=&quot;openmbeanattributeinfo&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;openmbeanoperationinfo&quot;&gt; &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;openmbeanconstructorinfo&quot;&gt; &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; &lt;/a&gt; 인터페이스를 각각 구현하는 &lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt; &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; &lt;/a&gt; 의 서브 클래스 인스턴스 배열을 런타임에 리턴해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fc59af9de6b925c7a001de9e0cda1335db8b9216" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;openmbeanoperationinfo#getSignature--&quot;&gt;&lt;code&gt;getSignature()&lt;/code&gt;&lt;/a&gt; method should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt; which implements the &lt;a href=&quot;openmbeanparameterinfo&quot;&gt;&lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt;&lt;/a&gt; interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;openmbeanoperationinfo#getSignature--&quot;&gt; &lt;code&gt;getSignature()&lt;/code&gt; &lt;/a&gt; 메소드 실행시 서브 클래스의 인스턴스의 배열 돌려 &lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; 의&lt;/a&gt; 어떤 구현 &lt;a href=&quot;openmbeanparameterinfo&quot;&gt; &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; 의&lt;/a&gt; 인터페이스 (일반적으로 &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="264dc2096f52224fc7a2ff5e5ccbe792a29983b3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; interface has more detailed descriptions of the types of segments that make up a path and the winding rules that control how to determine which regions are inside or outside the path.</source>
          <target state="translated">&lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt; 인터페이스는 더 많은 경로를 구성하는 세그먼트의 유형에 대한 설명과 권취 규칙을 상술하고있다의 내부 또는 외부로되는 영역을 결정하는 방법을 제어하는.</target>
        </trans-unit>
        <trans-unit id="857b7af384088ef828c48d616bc078e73774a9aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributes#permissions()&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; attribute is a set of access permissions. This file attribute view provides access to the nine permission defined by the &lt;a href=&quot;posixfilepermission&quot;&gt;&lt;code&gt;PosixFilePermission&lt;/code&gt;&lt;/a&gt; class. These nine permission bits determine the &lt;em&gt;read&lt;/em&gt;, &lt;em&gt;write&lt;/em&gt;, and &lt;em&gt;execute&lt;/em&gt; access for the file owner, group, and others (others meaning identities other than the owner and members of the group). Some operating systems and file systems may provide additional permission bits but access to these other bits is not defined by this class in this release.</source>
          <target state="translated">&lt;a href=&quot;posixfileattributes#permissions()&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt; 속성은 액세스 권한의 집합입니다. 이 파일 속성보기는 &lt;a href=&quot;posixfilepermission&quot;&gt; &lt;code&gt;PosixFilePermission&lt;/code&gt; &lt;/a&gt; 클래스에 정의 된 9 개의 권한에 대한 액세스를 제공합니다 . 이 9 개의 권한 비트 는 파일 소유자, 그룹 및 기타 (그룹의 소유자 및 구성원 이외의 ID를 의미 함)에 대한 &lt;em&gt;읽기&lt;/em&gt; , &lt;em&gt;쓰기&lt;/em&gt; 및 &lt;em&gt;실행&lt;/em&gt; 액세스를 결정합니다 . 일부 운영 체제 및 파일 시스템은 추가 권한 비트를 제공 할 수 있지만 이러한 다른 비트에 대한 액세스는이 릴리스에서이 클래스에 의해 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4744c29d66c9935d41a7b7e162f4709ec4bf036a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributes#permissions--&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; attribute is a set of access permissions. This file attribute view provides access to the nine permission defined by the &lt;a href=&quot;posixfilepermission&quot;&gt;&lt;code&gt;PosixFilePermission&lt;/code&gt;&lt;/a&gt; class. These nine permission bits determine the &lt;em&gt;read&lt;/em&gt;, &lt;em&gt;write&lt;/em&gt;, and &lt;em&gt;execute&lt;/em&gt; access for the file owner, group, and others (others meaning identities other than the owner and members of the group). Some operating systems and file systems may provide additional permission bits but access to these other bits is not defined by this class in this release.</source>
          <target state="translated">&lt;a href=&quot;posixfileattributes#permissions--&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt; 속성은 액세스 권한의 집합입니다. 이 파일 속성보기는 &lt;a href=&quot;posixfilepermission&quot;&gt; &lt;code&gt;PosixFilePermission&lt;/code&gt; &lt;/a&gt; 클래스에 의해 정의 된 9 가지 권한에 대한 액세스를 제공합니다 . 이 9 개의 권한 비트 는 파일 소유자, 그룹 및 기타 (소유자 및 그룹 구성원 이외의 ID를 의미하는 기타)에 대한 &lt;em&gt;읽기&lt;/em&gt; , &lt;em&gt;쓰기&lt;/em&gt; 및 &lt;em&gt;실행&lt;/em&gt; 액세스를 결정합니다 . 일부 운영 체제 및 파일 시스템은 추가 권한 비트를 제공 할 수 있지만이 릴리스에서는이 비트가 다른 비트에 대한 액세스를 정의하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9d75e18b4bb9f537656575df11977b7323415855" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt; interface extends &lt;code&gt;BasicFileAttributeView&lt;/code&gt; by defining methods to access the file attributes commonly used by file systems and operating systems that implement the Portable Operating System Interface (POSIX) family of standards.</source>
          <target state="translated">&lt;a href=&quot;posixfileattributeview&quot;&gt; &lt;code&gt;PosixFileAttributeView&lt;/code&gt; 의&lt;/a&gt; 인터페이스는 확장 &lt;code&gt;BasicFileAttributeView&lt;/code&gt; 를 표준 휴대용 운영 체제 인터페이스 (POSIX) 제품군을 구현하는 시스템을 일반적으로 파일 시스템에 의해 사용되는 속성 파일에 액세스하는 방법을 정의하고 운영에 의해.</target>
        </trans-unit>
        <trans-unit id="6738d407658008666bc1a5053dfbc19962272b6f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method is used to read the file's attributes. The file &lt;a href=&quot;posixfileattributes#owner--&quot;&gt;&lt;code&gt;owner&lt;/code&gt;&lt;/a&gt; is represented by a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; that is the identity of the file owner for the purposes of access control. The &lt;a href=&quot;posixfileattributes#group--&quot;&gt;&lt;code&gt;group-owner&lt;/code&gt;&lt;/a&gt;, represented by a &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt;, is the identity of the group owner, where a group is an identity created for administrative purposes so as to determine the access rights for the members of the group.</source>
          <target state="translated">&lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; 의&lt;/a&gt; 방법은 파일의 속성을 읽기 위해 사용된다. 파일 &lt;a href=&quot;posixfileattributes#owner--&quot;&gt; &lt;code&gt;owner&lt;/code&gt; &lt;/a&gt; 는 액세스 제어를 위해 파일 소유자의 ID 인 &lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt; 로 표시됩니다 . &lt;a href=&quot;posixfileattributes#group--&quot;&gt; &lt;code&gt;group-owner&lt;/code&gt; &lt;/a&gt; a로 표현 &lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; 는&lt;/a&gt; , 그룹이 그룹의 구성원에 대한 액세스 권한을 결정하기 위해 관리 목적으로 만든 정체성 인 그룹 소유자의 신원입니다.</target>
        </trans-unit>
        <trans-unit id="f5cae7f82ee146d950bad36b2028281d1616c695" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfilepermissions&quot;&gt;&lt;code&gt;PosixFilePermissions&lt;/code&gt;&lt;/a&gt; class defines methods for manipulating set of permissions.</source>
          <target state="translated">&lt;a href=&quot;posixfilepermissions&quot;&gt; &lt;code&gt;PosixFilePermissions&lt;/code&gt; 의&lt;/a&gt; 클래스는 권한 설정을 조작하는 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="2102dd9dc30eda3c84421793f04949c973076a9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; instances created by &lt;a href=&quot;processbuilder&quot;&gt;&lt;code&gt;ProcessBuilder&lt;/code&gt;&lt;/a&gt; can be queried for a ProcessHandle that provides information about the Process. ProcessHandle references should not be freely distributed.</source>
          <target state="translated">&lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; 에 의해 생성 된 인스턴스 &lt;a href=&quot;processbuilder&quot;&gt; &lt;code&gt;ProcessBuilder&lt;/code&gt; 를이&lt;/a&gt; 프로세스에 대한 정보를 제공하는 ProcessHandle에 대해 조회 할 수 있습니다. ProcessHandle 참조는 자유롭게 배포해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="b47226c20611a769390944113a9bbd420bdbfa52" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;process#getInputStream()&quot;&gt;&lt;code&gt;standard output&lt;/code&gt;&lt;/a&gt; of all processes except the last process are</source>
          <target state="translated">마지막 프로세스를 제외한 모든 프로세스 의 &lt;a href=&quot;process#getInputStream()&quot;&gt; &lt;code&gt;standard output&lt;/code&gt; &lt;/a&gt; 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1c860f3bbab8e3f481494dd988c7bd96d51b73be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;Runtime.exec&lt;/code&gt;&lt;/a&gt; methods create a native process and return an instance of a subclass of &lt;code&gt;Process&lt;/code&gt; that can be used to control the process and obtain information about it.</source>
          <target state="translated">&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt; &lt;code&gt;Runtime.exec&lt;/code&gt; 의의&lt;/a&gt; 방법은 기본 프로세스를 생성하는 서브 클래스의 인스턴스를 리턴 &lt;code&gt;Process&lt;/code&gt; 프로세스를 제어하고 정보의 취득을 할 수있다.</target>
        </trans-unit>
        <trans-unit id="b1cb6821609bfac1723d508b0bb91d2d757fd59e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;Runtime.exec&lt;/code&gt;&lt;/a&gt; methods create a native process and return an instance of a subclass of &lt;code&gt;Process&lt;/code&gt; that can be used to control the process and obtain information about it. The class &lt;code&gt;Process&lt;/code&gt; provides methods for performing input from the process, performing output to the process, waiting for the process to complete, checking the exit status of the process, and destroying (killing) the process.</source>
          <target state="translated">&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt; &lt;code&gt;Runtime.exec&lt;/code&gt; 의의&lt;/a&gt; 방법은 기본 프로세스를 생성하는 서브 클래스의 인스턴스를 리턴 &lt;code&gt;Process&lt;/code&gt; 프로세스를 제어하고 정보의 취득을 할 수있다. &lt;code&gt;Process&lt;/code&gt; 클래스는 프로세스 에서 입력을 수행하고, 프로세스로 출력을 수행하고, 프로세스가 완료되기를 기다리고, 프로세스의 종료 상태를 확인하고, 프로세스를 제거 (killing)하기위한 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ea844c85f1e3f45d0fbdf528232a86e15887b986" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt;&lt;code&gt;load(Reader)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;properties#store-java.io.Writer-java.lang.String-&quot;&gt;&lt;code&gt;store(Writer, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties from and to a character based stream in a simple line-oriented format specified below. The &lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt;&lt;code&gt;load(InputStream)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;properties#store-java.io.OutputStream-java.lang.String-&quot;&gt;&lt;code&gt;store(OutputStream, String)&lt;/code&gt;&lt;/a&gt; methods work the same way as the load(Reader)/store(Writer, String) pair, except the input/output stream is encoded in ISO 8859-1 character encoding. Characters that cannot be directly represented in this encoding can be written using Unicode escapes as defined in section 3.3 of</source>
          <target state="translated">&lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt; &lt;code&gt;load(Reader)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;properties#store-java.io.Writer-java.lang.String-&quot;&gt; &lt;code&gt;store(Writer, String)&lt;/code&gt; &lt;/a&gt; 단순한 행 지향 형식에서에서와 문자 기반 스트림 방법로드 및 저장 특성은 아래에 지정된. &lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt; &lt;code&gt;load(InputStream)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;properties#store-java.io.OutputStream-java.lang.String-&quot;&gt; &lt;code&gt;store(OutputStream, String)&lt;/code&gt; &lt;/a&gt; 입력 / 출력 스트림은 ISO 8859-1 문자 인코딩으로 인코딩 제외 방법은, 부하 (리더) / 스토어 (작가, 문자열) 쌍과 동일한 방식으로 작동한다. 이 인코딩에서 직접 표현할 수없는 문자는 3.3 절에서 정의한대로 유니 코드 이스케이프를 사용하여 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43359c708823c69498cdd32a1f027924e4c33c67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;properties#loadFromXML-java.io.InputStream-&quot;&gt;&lt;code&gt;loadFromXML(InputStream)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;properties#storeToXML-java.io.OutputStream-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties in a simple XML format. By default the UTF-8 character encoding is used, however a specific encoding may be specified if required. Implementations are required to support UTF-8 and UTF-16 and may support other encodings. An XML properties document has the following DOCTYPE declaration:</source>
          <target state="translated">&lt;a href=&quot;properties#loadFromXML-java.io.InputStream-&quot;&gt; &lt;code&gt;loadFromXML(InputStream)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;properties#storeToXML-java.io.OutputStream-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt; &lt;/a&gt; 간단한 XML 형식의 방법로드 및 저장 특성. 기본적으로 UTF-8 문자 인코딩이 사용되지만 필요한 경우 특정 인코딩을 지정할 수 있습니다. UTF-8 및 UTF-16을 지원하려면 구현이 필요하며 다른 인코딩을 지원할 수 있습니다. XML 특성 문서에는 다음 DOCTYPE 선언이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8f6297aee07864a86e2bb6a0ea3ccd94df49256" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;proxy#isProxyClass-java.lang.Class-&quot;&gt;&lt;code&gt;Proxy.isProxyClass&lt;/code&gt;&lt;/a&gt; method will return true if it is passed a proxy class-- a class returned by &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; or the class of an object returned by &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;-- and false otherwise.</source>
          <target state="translated">&lt;a href=&quot;proxy#isProxyClass-java.lang.Class-&quot;&gt; &lt;code&gt;Proxy.isProxyClass&lt;/code&gt; 의&lt;/a&gt; 가에 의해 반환 된 클래스 그 수업 프록시 전달되는 경우 메소드는 true를 돌려줍니다 &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; 의 나에 의해 반환 된 객체의 클래스 &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; 를 , 그렇지 않으면 거짓 -.</target>
        </trans-unit>
        <trans-unit id="82b9b6df8d0389635e3baf324194adaf4d0a9535" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue#element--&quot;&gt;&lt;code&gt;element()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;queue#peek--&quot;&gt;&lt;code&gt;peek()&lt;/code&gt;&lt;/a&gt; methods return, but do not remove, the head of the queue.</source>
          <target state="translated">&lt;a href=&quot;queue#element--&quot;&gt; &lt;code&gt;element()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;queue#peek--&quot;&gt; &lt;code&gt;peek()&lt;/code&gt; &lt;/a&gt; 메소드는 큐의 선두를 돌려줍니다 만, 삭제는하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b3de824965777891d01ab953cb9a6bb37bc267d2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue#offer-E-&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt; method inserts an element if possible, otherwise returning &lt;code&gt;false&lt;/code&gt;. This differs from the &lt;a href=&quot;collection#add-E-&quot;&gt;&lt;code&gt;Collection.add&lt;/code&gt;&lt;/a&gt; method, which can fail to add an element only by throwing an unchecked exception. The &lt;code&gt;offer&lt;/code&gt; method is designed for use when failure is a normal, rather than exceptional occurrence, for example, in fixed-capacity (or &quot;bounded&quot;) queues.</source>
          <target state="translated">&lt;a href=&quot;queue#offer-E-&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt; 가능하다면 방법은, 그렇지 않으면 반환 요소를 삽입 &lt;code&gt;false&lt;/code&gt; . 이것은 점검되지 않은 예외를 던져야 만 요소를 추가 할 수없는 &lt;a href=&quot;collection#add-E-&quot;&gt; &lt;code&gt;Collection.add&lt;/code&gt; &lt;/a&gt; 메소드 와 다릅니다 . &lt;code&gt;offer&lt;/code&gt; 실패 고정 용량, 예를 들면, 정상이 아닌 경우 예외 발생 방법 (또는 &quot;경계&quot;) 큐를 사용하도록 설계된다.</target>
        </trans-unit>
        <trans-unit id="e8d4e252e82e3c4010bc6f24536b3c8e384a7a00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue#remove--&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;queue#poll--&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; methods remove and return the head of the queue. Exactly which element is removed from the queue is a function of the queue's ordering policy, which differs from implementation to implementation. The &lt;code&gt;remove()&lt;/code&gt; and &lt;code&gt;poll()&lt;/code&gt; methods differ only in their behavior when the queue is empty: the &lt;code&gt;remove()&lt;/code&gt; method throws an exception, while the &lt;code&gt;poll()&lt;/code&gt; method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;queue#remove--&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;queue#poll--&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt; 메소드는 제거 큐의 헤드를 반환한다. 정확히 어떤 요소가 대기열에서 제거되는지는 구현 순서에 따라 다른 대기열 순서 정책의 기능입니다. &lt;code&gt;remove()&lt;/code&gt; 와 &lt;code&gt;poll()&lt;/code&gt; 큐가 비어있을 때 방법은 자신의 행동 만 다른 다음 &lt;code&gt;remove()&lt;/code&gt; 메소드는 동안, 예외가 발생 &lt;code&gt;poll()&lt;/code&gt; 메소드의 반환 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16aaa4fa2dee4f0e0c1d205d7849d692a73afd79" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;readablebytechannel#read(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method that reads bytes from the channel into a buffer; similarly, the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method that writes bytes from a buffer to the channel. The &lt;a href=&quot;bytechannel&quot;&gt;&lt;code&gt;ByteChannel&lt;/code&gt;&lt;/a&gt; interface unifies these two interfaces for the common case of channels that can both read and write bytes. The &lt;a href=&quot;seekablebytechannel&quot;&gt;&lt;code&gt;SeekableByteChannel&lt;/code&gt;&lt;/a&gt; interface extends the &lt;code&gt;ByteChannel&lt;/code&gt; interface with methods to &lt;a href=&quot;seekablebytechannel#position()&quot;&gt;&lt;code&gt;query&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#position(long)&quot;&gt;&lt;code&gt;modify&lt;/code&gt;&lt;/a&gt; the channel's current position, and its &lt;a href=&quot;seekablebytechannel#size()&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; 의&lt;/a&gt; 인터페이스를 지정하는 &lt;a href=&quot;readablebytechannel#read(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 버퍼로 채널의 바이트를 읽는 단계; 유사하게 &lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스 는 버퍼에서 채널로 바이트를 쓰는 &lt;a href=&quot;writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 메소드를 지정합니다 . &lt;a href=&quot;bytechannel&quot;&gt; &lt;code&gt;ByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스 채널 수 읽기 및 쓰기 바이트 일반적인 경우에 대한 두 인터페이스를 통합. &lt;a href=&quot;seekablebytechannel&quot;&gt; &lt;code&gt;SeekableByteChannel&lt;/code&gt; 의&lt;/a&gt; 인터페이스는 확장 &lt;code&gt;ByteChannel&lt;/code&gt; 에 대한 방법과 인터페이스 &lt;a href=&quot;seekablebytechannel#position()&quot;&gt; &lt;code&gt;query&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;seekablebytechannel#position(long)&quot;&gt; &lt;code&gt;modify&lt;/code&gt; &lt;/a&gt; 채널의 현재 위치와 &lt;a href=&quot;seekablebytechannel#size()&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78e6516c0dec9e8c202d246bc450ed434c84f25b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;readablebytechannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method that reads bytes from the channel into a buffer; similarly, the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method that writes bytes from a buffer to the channel. The &lt;a href=&quot;bytechannel&quot;&gt;&lt;code&gt;ByteChannel&lt;/code&gt;&lt;/a&gt; interface unifies these two interfaces for the common case of channels that can both read and write bytes. The &lt;a href=&quot;seekablebytechannel&quot;&gt;&lt;code&gt;SeekableByteChannel&lt;/code&gt;&lt;/a&gt; interface extends the &lt;code&gt;ByteChannel&lt;/code&gt; interface with methods to &lt;a href=&quot;seekablebytechannel#position--&quot;&gt;&lt;code&gt;query&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt;&lt;code&gt;modify&lt;/code&gt;&lt;/a&gt; the channel's current position, and its &lt;a href=&quot;seekablebytechannel#size--&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; 의&lt;/a&gt; 인터페이스를 지정하는 &lt;a href=&quot;readablebytechannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 버퍼로 채널의 바이트를 읽는 단계; 마찬가지로 &lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스 는 버퍼에서 채널로 바이트를 쓰는 &lt;a href=&quot;writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 메소드를 지정합니다 . &lt;a href=&quot;bytechannel&quot;&gt; &lt;code&gt;ByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스는 바이트를 읽고 쓸 수있는 일반적인 채널 의 경우이 두 인터페이스를 통합합니다. &lt;a href=&quot;seekablebytechannel&quot;&gt; &lt;code&gt;SeekableByteChannel&lt;/code&gt; 의&lt;/a&gt; 인터페이스는 확장 &lt;code&gt;ByteChannel&lt;/code&gt; 에 대한 방법과 인터페이스 &lt;a href=&quot;seekablebytechannel#position--&quot;&gt; &lt;code&gt;query&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt; &lt;code&gt;modify&lt;/code&gt; &lt;/a&gt; 채널의 현재 위치와 &lt;a href=&quot;seekablebytechannel#size--&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c2ccfc4344d98344bac10a3d0beeebc75678f34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt; interface similarly defines locks that may be shared among readers but are exclusive to writers. Only a single implementation, &lt;a href=&quot;reentrantreadwritelock&quot;&gt;&lt;code&gt;ReentrantReadWriteLock&lt;/code&gt;&lt;/a&gt;, is provided, since it covers most standard usage contexts. But programmers may create their own implementations to cover nonstandard requirements.</source>
          <target state="translated">&lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; &lt;/a&gt; 인터페이스는 리더 사이에서는 공유 가능하지만, 라이터에는 배타적으로 설정 가능한 락을 정의합니다. 대부분의 표준 사용 컨텍스트를 다루기 때문에 단일 구현 인 &lt;a href=&quot;reentrantreadwritelock&quot;&gt; &lt;code&gt;ReentrantReadWriteLock&lt;/code&gt; &lt;/a&gt; 만 제공됩니다. 그러나 프로그래머는 비표준 요구 사항을 다루기 위해 자체 구현을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdf44d4882f2dcfdfc588519320608f9984766c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;&lt;code&gt;ResolverStyle&lt;/code&gt;&lt;/a&gt; is an enum that offers three different approaches, strict, smart and lenient. The smart option is the default. It can be set using &lt;a href=&quot;#withResolverStyle(java.time.format.ResolverStyle)&quot;&gt;&lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt; &lt;code&gt;ResolverStyle&lt;/code&gt; 은&lt;/a&gt; 열거입니다 이벤트 세 가지 접근 방법, 엄격한, 똑똑하고 관대 한 그. 스마트 옵션이 기본값입니다. &lt;a href=&quot;#withResolverStyle(java.time.format.ResolverStyle)&quot;&gt; &lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt; &lt;/a&gt; 사용하여 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ccb2a8fa5c45fda8065dbaad7a3c71bba458a361" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;&lt;code&gt;ResolverStyle&lt;/code&gt;&lt;/a&gt; is an enum that offers three different approaches, strict, smart and lenient. The smart option is the default. It can be set using &lt;a href=&quot;datetimeformatter#withResolverStyle-java.time.format.ResolverStyle-&quot;&gt;&lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt; &lt;code&gt;ResolverStyle&lt;/code&gt; 은&lt;/a&gt; 열거입니다 이벤트 세 가지 접근 방법, 엄격한, 똑똑하고 관대 한 그. 스마트 옵션이 기본값입니다. &lt;a href=&quot;datetimeformatter#withResolverStyle-java.time.format.ResolverStyle-&quot;&gt; &lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt; &lt;/a&gt; 사용하여 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="230eb0b70762cd391eb1aba658c2338c39426288" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:59' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt;해결의 스타일은&lt;/a&gt; 즉시 구문 분석에 영향을주지 않습니다. '24 : 00 '의 종료 시간은 다음 날 시작의 자정으로 처리됩니다. '23 : 59 : 59 '의 윤초 시간은 어느 정도 처리됩니다 . 자세한 내용 은 &lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="a61c3fe4bcefb9096a8ca84cf773684b1d6df713" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:59' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt;해결의 스타일은&lt;/a&gt; 즉시 구문 분석에 영향을주지 않습니다. '24 : 00 '의 종료 시간은 다음 날 시작시 자정으로 처리됩니다. '23 : 59 : 59 '의 윤초 시간은 어느 정도 처리됩니다 . 자세한 내용 은 &lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5158dacdde311d782c14bbee2d65ed5bcc2d0e9a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:60' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt;해결의 스타일은&lt;/a&gt; 즉시 구문 분석에 영향을주지 않습니다. '24 : 00 '의 종료 시간은 다음 날 시작의 자정으로 처리됩니다. '23 : 59 : 60 '의 윤초 시간은 어느 정도 처리됩니다 . 자세한 내용 은 &lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="ffbf4748dbac126c5220a08777eb15c9fdb0572e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:60' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt;해결의 스타일은&lt;/a&gt; 즉시 구문 분석에 영향을주지 않습니다. '24 : 00 '의 종료 시간은 다음 날 시작시 자정으로 처리됩니다. '23 : 59 : 60 '의 윤초 시간은 어느 정도 처리됩니다 . 자세한 내용 은 &lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c81588aa28a1eb4f1a2581775076c1ff69d4b5a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; class provides information necessary to perform the bundle loading process by the &lt;code&gt;getBundle&lt;/code&gt; factory methods that take a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instance. You can implement your own subclass in order to enable non-standard resource bundle formats, change the search strategy, or define caching parameters. Refer to the descriptions of the class and the &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt;&lt;code&gt;getBundle&lt;/code&gt;&lt;/a&gt; factory method for details.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt; 클래스에 의해 번들로드 처리를 수행하는 데 필요한 정보를 제공 &lt;code&gt;getBundle&lt;/code&gt; 는 테이크 팩토리 메소드 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 인스턴스를. 비표준 자원 번들 형식을 사용하거나 검색 전략을 변경하거나 캐싱 매개 변수를 정의하기 위해 고유 한 서브 클래스를 구현할 수 있습니다. 자세한 내용은 클래스 및 &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt; &lt;code&gt;getBundle&lt;/code&gt; &lt;/a&gt; 팩토리 메소드에 대한 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="844b2132f1798e9d55cc9c339a4149469ad05e5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; class provides information necessary to perform the bundle loading process by the &lt;code&gt;getBundle&lt;/code&gt; factory methods that take a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instance. You can implement your own subclass in order to enable non-standard resource bundle formats, change the search strategy, or define caching parameters. Refer to the descriptions of the class and the &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt;&lt;code&gt;getBundle&lt;/code&gt;&lt;/a&gt; factory method for details.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt; 클래스에 의해 번들로드 처리를 수행하는 데 필요한 정보를 제공 &lt;code&gt;getBundle&lt;/code&gt; 는 테이크 팩토리 메소드 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 인스턴스를. 비표준 리소스 번들 형식을 활성화하고 검색 전략을 변경하거나 캐싱 매개 변수를 정의하기 위해 자체 하위 클래스를 구현할 수 있습니다. 자세한 내용은 클래스 설명 및 &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt; &lt;code&gt;getBundle&lt;/code&gt; &lt;/a&gt; 팩토리 메소드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e57c3b809c8cee0138874cbd67eaba73e85e11c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;control.getCandidateLocales&lt;/code&gt;&lt;/a&gt; method is called with the target locale to get a list of &lt;em&gt;candidate &lt;code&gt;Locale&lt;/code&gt;s&lt;/em&gt; for which resource bundles are searched.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;control.getCandidateLocales&lt;/code&gt; 의&lt;/a&gt; 방법의 목록을 얻을 수있는 대상 로케일로 호출 &lt;em&gt;후보 &lt;code&gt;Locale&lt;/code&gt; 의&lt;/em&gt; 자원 번들이 검색되는 위해를.</target>
        </trans-unit>
        <trans-unit id="5b1b140c56a442f57e62e38c4c78a04d61105b58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;control.getCandidateLocales&lt;/code&gt;&lt;/a&gt; method is called with the target locale to get a list of &lt;em&gt;candidate &lt;code&gt;Locale&lt;/code&gt;s&lt;/em&gt; for which resource bundles are searched.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;control.getCandidateLocales&lt;/code&gt; 의&lt;/a&gt; 방법의 목록을 얻을 수있는 대상 로케일로 호출 &lt;em&gt;후보 &lt;code&gt;Locale&lt;/code&gt; 의&lt;/em&gt; 자원 번들이 검색되는 위해를.</target>
        </trans-unit>
        <trans-unit id="9db79ac6c90a6417df850016832ced248481b912" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFallbackLocale(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;control.getFallbackLocale&lt;/code&gt;&lt;/a&gt; method is called to get a fallback locale (alternative to the current target locale) to try further finding a resource bundle. If the method returns a non-null locale, it becomes the next target locale and the loading process starts over from Step 3. Otherwise, if a base bundle was found and put on hold in a previous Step 5, it is returned to the caller now. Otherwise, a MissingResourceException is thrown.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getFallbackLocale(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;control.getFallbackLocale&lt;/code&gt; 의&lt;/a&gt; 방법은 자원 번들을 찾아 더 시도 (현재의 대상 로케일로 대체) 대체 로케일을 얻기 위해 호출된다. 메소드가 널이 아닌 로케일을 리턴하면 다음 대상 로케일이되고로드 프로세스가 3 단계부터 다시 시작됩니다. 그렇지 않으면 기본 번들이 발견되어 이전 5 단계에서 보류 상태가 된 경우 호출자에게 리턴됩니다. 지금. 그렇지 않으면 MissingResourceException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="772adc8499f04f3dfcd1f7ee081e85fbe1b93725" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;control.getFallbackLocale&lt;/code&gt;&lt;/a&gt; method is called to get a fallback locale (alternative to the current target locale) to try further finding a resource bundle. If the method returns a non-null locale, it becomes the next target locale and the loading process starts over from Step 3. Otherwise, if a base bundle was found and put on hold in a previous Step 5, it is returned to the caller now. Otherwise, a MissingResourceException is thrown.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;control.getFallbackLocale&lt;/code&gt; 의&lt;/a&gt; 방법은 자원 번들을 찾아 더 시도 (현재의 대상 로케일로 대체) 대체 로케일을 얻기 위해 호출된다. 메소드가 널이 아닌 로케일을 리턴하면, 다음 대상 로케일이되고로드 프로세스는 3 단계부터 시작합니다. 그렇지 않으면 기본 번들이 발견되어 이전 5 단계에서 보류 된 경우 호출자에게 리턴됩니다. 지금. 그렇지 않으면 MissingResourceException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c5fbacfc9b01c70d6e8b2d6dde797d3664eec031" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFormats(java.lang.String)&quot;&gt;&lt;code&gt;control.getFormats&lt;/code&gt;&lt;/a&gt; method is called to get resource bundle formats to produce bundle or resource names. The strings &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; designate class-based and &lt;a href=&quot;propertyresourcebundle&quot;&gt;property&lt;/a&gt;-based resource bundles, respectively. Other strings starting with &lt;code&gt;&quot;java.&quot;&lt;/code&gt; are reserved for future extensions and must not be used for application-defined formats. Other strings designate application-defined formats.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getFormats(java.lang.String)&quot;&gt; &lt;code&gt;control.getFormats&lt;/code&gt; 의&lt;/a&gt; 방법은 생산 번들 또는 자원 이름에 자원 번들 형식을 얻기 위해 호출된다. 문자열 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 는 각각 클래스 기반 및 &lt;a href=&quot;propertyresourcebundle&quot;&gt;속성&lt;/a&gt; 기반 리소스 번들을 지정 합니다 . &lt;code&gt;&quot;java.&quot;&lt;/code&gt; 시작하는 기타 문자열 . 향후 확장을 위해 예약되어 있으며 응용 프로그램 정의 형식에 사용해서는 안됩니다. 다른 문자열은 응용 프로그램 정의 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="635f440f4fb0dc3df8028007964f525ee541d99c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFormats-java.lang.String-&quot;&gt;&lt;code&gt;control.getFormats&lt;/code&gt;&lt;/a&gt; method is called to get resource bundle formats to produce bundle or resource names. The strings &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; designate class-based and &lt;a href=&quot;propertyresourcebundle&quot;&gt;property&lt;/a&gt;-based resource bundles, respectively. Other strings starting with &lt;code&gt;&quot;java.&quot;&lt;/code&gt; are reserved for future extensions and must not be used for application-defined formats. Other strings designate application-defined formats.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getFormats-java.lang.String-&quot;&gt; &lt;code&gt;control.getFormats&lt;/code&gt; 의&lt;/a&gt; 방법은 생산 번들 또는 자원 이름에 자원 번들 형식을 얻기 위해 호출된다. &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 문자열 은 각각 클래스 기반 및 &lt;a href=&quot;propertyresourcebundle&quot;&gt;특성&lt;/a&gt; 기반 자원 번들을 지정 합니다 . &lt;code&gt;&quot;java.&quot;&lt;/code&gt; 시작하는 다른 문자열 향후 확장을 위해 예약되어 있으며 응용 프로그램 정의 형식에 사용해서는 안됩니다. 다른 문자열은 응용 프로그램 정의 형식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="098517283c774eeba3b3b15f041e0be79bde4704" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)&quot;&gt;&lt;code&gt;control.newBundle&lt;/code&gt;&lt;/a&gt; method is called to instantiate a &lt;code&gt;ResourceBundle&lt;/code&gt; for the base bundle name, a candidate locale, and a format. (Refer to the note on the cache lookup below.) This step is iterated over all combinations of the candidate locales and formats until the &lt;code&gt;newBundle&lt;/code&gt; method returns a &lt;code&gt;ResourceBundle&lt;/code&gt; instance or the iteration has used up all the combinations. For example, if the candidate locales are &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt;, &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; and &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; and the formats are &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;, then the following is the sequence of locale-format combinations to be used to call &lt;code&gt;control.newBundle&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)&quot;&gt; &lt;code&gt;control.newBundle&lt;/code&gt; &lt;/a&gt; 방법은 인스턴스화하기 위해 호출됩니다 &lt;code&gt;ResourceBundle&lt;/code&gt; 을 기본 번들 이름, 후보 로케일과 형식을. (아래 캐시 조회에 대한 참고 사항을 참조하십시오.)이 단계는 &lt;code&gt;newBundle&lt;/code&gt; 메서드가 &lt;code&gt;ResourceBundle&lt;/code&gt; 인스턴스를 반환 하거나 반복이 모든 조합을 사용할 때까지 후보 로케일 및 형식의 모든 조합에 대해 반복됩니다. 예를 들어 후보 로케일이 &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt; , &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; 및 &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; 이고 형식이 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 인 경우 ,다음은 호출에 사용할 로케일 형식 조합의 순서입니다. &lt;code&gt;control.newBundle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="143061f5a7fc551c0ad375aa5616ef6082a571b7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt;&lt;code&gt;control.newBundle&lt;/code&gt;&lt;/a&gt; method is called to instantiate a &lt;code&gt;ResourceBundle&lt;/code&gt; for the base bundle name, a candidate locale, and a format. (Refer to the note on the cache lookup below.) This step is iterated over all combinations of the candidate locales and formats until the &lt;code&gt;newBundle&lt;/code&gt; method returns a &lt;code&gt;ResourceBundle&lt;/code&gt; instance or the iteration has used up all the combinations. For example, if the candidate locales are &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt;, &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; and &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; and the formats are &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;, then the following is the sequence of locale-format combinations to be used to call &lt;code&gt;control.newBundle&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt; &lt;code&gt;control.newBundle&lt;/code&gt; &lt;/a&gt; 방법은 인스턴스화하기 위해 호출됩니다 &lt;code&gt;ResourceBundle&lt;/code&gt; 을 기본 번들 이름, 후보 로케일과 형식을. (아래의 캐시 조회에 대한 참고 사항을 참조하십시오.)이 단계는 &lt;code&gt;newBundle&lt;/code&gt; 메소드가 &lt;code&gt;ResourceBundle&lt;/code&gt; 인스턴스를 리턴 하거나 반복이 모든 조합을 다 쓸 때까지 후보 로케일 및 형식의 모든 조합에 대해 반복됩니다. 예를 들어, 후보 로케일이 &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt; , &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; 및 &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; 이고 형식이 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 인 경우 ,다음은 호출하는 데 사용되는 로케일 형식 조합 순서입니다. &lt;code&gt;control.newBundle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a415f074984a8725314b75563b370d9ae6b46c38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sasl&quot;&gt;&lt;code&gt;Sasl&lt;/code&gt;&lt;/a&gt; class includes several well-known property names (For example, &lt;a href=&quot;sasl#QOP&quot;&gt;&lt;code&gt;Sasl.QOP&lt;/code&gt;&lt;/a&gt;). A SASL provider can support other properties which are specific to the vendor and/or a mechanism.</source>
          <target state="translated">&lt;a href=&quot;sasl&quot;&gt; &lt;code&gt;Sasl&lt;/code&gt; 에의&lt;/a&gt; 클래스 (예를 들어, 몇 가지 잘 알려진 속성 이름이 포함 &lt;a href=&quot;sasl#QOP&quot;&gt; &lt;code&gt;Sasl.QOP&lt;/code&gt; 을&lt;/a&gt; ). SASL 공급자는 공급 업체 및 / 또는 메커니즘에 특정한 다른 속성을 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="257e05e9fa65e14e315705646288980e33146c06" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxresult&quot;&gt;&lt;code&gt;SAXResult&lt;/code&gt;&lt;/a&gt; class allows the setting of a &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; to be the receiver of SAX2 events from the transformation.</source>
          <target state="translated">&lt;a href=&quot;saxresult&quot;&gt; &lt;code&gt;SAXResult&lt;/code&gt; &lt;/a&gt; 클래스는의 설정 수 &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt; 변환의 SAX2 이벤트의 수신기로.</target>
        </trans-unit>
        <trans-unit id="a6dfb34cc4dd4b24effdf12adfef647af75d6cc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxsource&quot;&gt;&lt;code&gt;SAXSource&lt;/code&gt;&lt;/a&gt; class allows the setting of an &lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; to be used for pulling parse events, and an &lt;a href=&quot;../../../../org/xml/sax/inputsource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; that may be used to specify the SAX source.</source>
          <target state="translated">&lt;a href=&quot;saxsource&quot;&gt; &lt;code&gt;SAXSource&lt;/code&gt; &lt;/a&gt; 클래스는의 설정 허용 &lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt; 구문 분석 이벤트를 당기에 사용되는 및 &lt;a href=&quot;../../../../org/xml/sax/inputsource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; 의&lt;/a&gt; 색소폰 소스를 지정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6686fec400ee70f3fbed9514abdaf5cffbf56153" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxtransformerfactory&quot;&gt;&lt;code&gt;SAXTransformerFactory&lt;/code&gt;&lt;/a&gt; extends &lt;a href=&quot;../transformerfactory&quot;&gt;&lt;code&gt;TransformerFactory&lt;/code&gt;&lt;/a&gt; to provide factory methods for creating &lt;a href=&quot;templateshandler&quot;&gt;&lt;code&gt;TemplatesHandler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;transformerhandler&quot;&gt;&lt;code&gt;TransformerHandler&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;saxtransformerfactory&quot;&gt; &lt;code&gt;SAXTransformerFactory&lt;/code&gt; &lt;/a&gt; 확장 &lt;a href=&quot;../transformerfactory&quot;&gt; &lt;code&gt;TransformerFactory&lt;/code&gt; &lt;/a&gt; 생성하는 팩토리 메소드를 제공하도록 &lt;a href=&quot;templateshandler&quot;&gt; &lt;code&gt;TemplatesHandler&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;transformerhandler&quot;&gt; &lt;code&gt;TransformerHandler&lt;/code&gt; 는&lt;/a&gt; ,와 &lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt; 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="c2c462293ffae4c2b2f44a5989d27d11ce31aec4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxtransformerfactory#newXMLFilter(javax.xml.transform.Source)&quot;&gt;&lt;code&gt;SAXTransformerFactory.newXMLFilter(javax.xml.transform.Source)&lt;/code&gt;&lt;/a&gt; method allows the creation of a &lt;a href=&quot;../../../../org/xml/sax/xmlfilter&quot;&gt;&lt;code&gt;XMLFilter&lt;/code&gt;&lt;/a&gt;, which encapsulates the SAX2 notion of a &quot;pull&quot; transformation. The resulting &lt;code&gt;XMLFilters&lt;/code&gt; can be chained together so that a series of transformations can happen with one's output becoming another's input.</source>
          <target state="translated">&lt;a href=&quot;saxtransformerfactory#newXMLFilter(javax.xml.transform.Source)&quot;&gt; &lt;code&gt;SAXTransformerFactory.newXMLFilter(javax.xml.transform.Source)&lt;/code&gt; &lt;/a&gt; 방법은 생성있게 &lt;a href=&quot;../../../../org/xml/sax/xmlfilter&quot;&gt; &lt;code&gt;XMLFilter&lt;/code&gt; &lt;/a&gt; 은 &quot;풀&quot;변환의 SAX2의 개념을 캡슐화. 결과 &lt;code&gt;XMLFilters&lt;/code&gt; 는 한 사람의 출력이 다른 사람의 입력이되는 일련의 변환이 발생할 수 있도록 함께 연결될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10eb909f57a9444304efbbfb4230e34732f3b9b9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scanner#findInLine-java.lang.String-&quot;&gt;&lt;code&gt;findInLine(java.lang.String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;scanner#findWithinHorizon-java.lang.String-int-&quot;&gt;&lt;code&gt;findWithinHorizon(java.lang.String, int)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;scanner#skip-java.util.regex.Pattern-&quot;&gt;&lt;code&gt;skip(java.util.regex.Pattern)&lt;/code&gt;&lt;/a&gt; methods operate independently of the delimiter pattern. These methods will attempt to match the specified pattern with no regard to delimiters in the input and thus can be used in special circumstances where delimiters are not relevant. These methods may block waiting for more input.</source>
          <target state="translated">&lt;a href=&quot;scanner#findInLine-java.lang.String-&quot;&gt; &lt;code&gt;findInLine(java.lang.String)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;scanner#findWithinHorizon-java.lang.String-int-&quot;&gt; &lt;code&gt;findWithinHorizon(java.lang.String, int)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;scanner#skip-java.util.regex.Pattern-&quot;&gt; &lt;code&gt;skip(java.util.regex.Pattern)&lt;/code&gt; &lt;/a&gt; 메소드는 분리 패턴에 독립적으로 동작한다. 이 메소드는 입력의 분리 문자와 상관없이 지정된 패턴을 일치 시키려고 시도하므로 분리 문자가 관련이없는 특수한 환경에서 사용될 수 있습니다. 이러한 메소드는 추가 입력 대기를 차단할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="348c28db8b27cc9f18897b329f01ff9a7695b683" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scanner#next--&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;scanner#hasNext--&quot;&gt;&lt;code&gt;hasNext()&lt;/code&gt;&lt;/a&gt; methods and their primitive-type companion methods (such as &lt;a href=&quot;scanner#nextInt--&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;scanner#hasNextInt--&quot;&gt;&lt;code&gt;hasNextInt()&lt;/code&gt;&lt;/a&gt;) first skip any input that matches the delimiter pattern, and then attempt to return the next token. Both &lt;code&gt;hasNext&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt; methods may block waiting for further input. Whether a &lt;code&gt;hasNext&lt;/code&gt; method blocks has no connection to whether or not its associated &lt;code&gt;next&lt;/code&gt; method will block.</source>
          <target state="translated">&lt;a href=&quot;scanner#next--&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;scanner#hasNext--&quot;&gt; &lt;code&gt;hasNext()&lt;/code&gt; &lt;/a&gt; 메소드 (예로서의 프리미티브 타입 컴패니언 방법 &lt;a href=&quot;scanner#nextInt--&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;scanner#hasNextInt--&quot;&gt; &lt;code&gt;hasNextInt()&lt;/code&gt; &lt;/a&gt; 제 구분 패턴에 일치하는 입력을 스킵하고 다음 토큰을 반환하도록 시도). &lt;code&gt;hasNext&lt;/code&gt; 및 &lt;code&gt;next&lt;/code&gt; 메소드는 모두 추가 입력 대기를 차단할 수 있습니다. 여부 &lt;code&gt;hasNext&lt;/code&gt; 의 방법 블록 관련 여부에 아무런 관련이없는 &lt;code&gt;next&lt;/code&gt; 방법이 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="6036eaba06f3b7844114d0429c543f3e66646467" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scatteringbytechannel&quot;&gt;&lt;code&gt;ScatteringByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel&quot;&gt;&lt;code&gt;GatheringByteChannel&lt;/code&gt;&lt;/a&gt; interfaces extend the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interfaces, respectively, adding &lt;a href=&quot;scatteringbytechannel#read(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel#write(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods that take a sequence of buffers rather than a single buffer.</source>
          <target state="translated">&lt;a href=&quot;scatteringbytechannel&quot;&gt; &lt;code&gt;ScatteringByteChannel&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;gatheringbytechannel&quot;&gt; &lt;code&gt;GatheringByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스는 확장 &lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt; 부가 각각 인터페이스 &lt;a href=&quot;scatteringbytechannel#read(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;gatheringbytechannel#write(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 버퍼 순서보다는 하나의 버퍼를 가지고 방법.</target>
        </trans-unit>
        <trans-unit id="21137fd05c9ebb8f424df8db033cf26db6b1b34b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scatteringbytechannel&quot;&gt;&lt;code&gt;ScatteringByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel&quot;&gt;&lt;code&gt;GatheringByteChannel&lt;/code&gt;&lt;/a&gt; interfaces extend the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interfaces, respectively, adding &lt;a href=&quot;scatteringbytechannel#read-java.nio.ByteBuffer:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel#write-java.nio.ByteBuffer:A-int-int-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods that take a sequence of buffers rather than a single buffer.</source>
          <target state="translated">&lt;a href=&quot;scatteringbytechannel&quot;&gt; &lt;code&gt;ScatteringByteChannel&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;gatheringbytechannel&quot;&gt; &lt;code&gt;GatheringByteChannel&lt;/code&gt; &lt;/a&gt; 인터페이스는 확장 &lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt; 부가 각각 인터페이스 &lt;a href=&quot;scatteringbytechannel#read-java.nio.ByteBuffer:A-int-int-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;gatheringbytechannel#write-java.nio.ByteBuffer:A-int-int-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 버퍼 순서보다는 하나의 버퍼를 가지고 방법.</target>
        </trans-unit>
        <trans-unit id="494bd3af96f36fb31c00ac9c7e7c9c2375b3ac83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; class is not thread-safe. In other words, it is the application's responsibility to ensure that at most one thread is using a &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; object at any given moment. Implementations are encouraged to mark methods as &lt;code&gt;synchronized&lt;/code&gt; to protect themselves from broken clients.</source>
          <target state="translated">The &lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt; class is not thread-safe. In other words, it is the application's responsibility to ensure that at most one thread is using a &lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt; object at any given moment. Implementations are encouraged to mark methods as &lt;code&gt;synchronized&lt;/code&gt; to protect themselves from broken clients.</target>
        </trans-unit>
        <trans-unit id="07cb8eb23ad928e28854d19141c00b90056152a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#truncate-long-&quot;&gt;&lt;code&gt;truncate&lt;/code&gt;&lt;/a&gt; methods which do not otherwise have a value to return are specified to return the channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">&lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;seekablebytechannel#truncate-long-&quot;&gt; &lt;code&gt;truncate&lt;/code&gt; &lt;/a&gt; 반환 값을 돌려주지 않는 방법은 자신을 호출 한 채널 정보를 돌려줍니다. 이를 통해 메소드 호출을 연결할 수 있습니다. 이 인터페이스의 구현은 구현 클래스에서 메소드 호출을 체인 할 수 있도록 리턴 유형을 특수화해야합니다.</target>
        </trans-unit>
        <trans-unit id="90a51280115503dcf1e905f60856aff6ffe205d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;selector#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method synchronizes on the selector and all three key sets in the same order as in a selection operation.</source>
          <target state="translated">&lt;a href=&quot;selector#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 방법은 선택 및 선택 동작과 동일한 순서로 세 키 세트에 동기화한다.</target>
        </trans-unit>
        <trans-unit id="990f0f43a18226a7e173ee1e81b5cdf77566b089" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socketoption#name()&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; of each socket option defined by this class is its field name.</source>
          <target state="translated">The &lt;a href=&quot;socketoption#name()&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt; of each socket option defined by this class is its field name.</target>
        </trans-unit>
        <trans-unit id="d451b4a4efe00d347a54add6cb0af761ff11af1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socketoption#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; of each socket option defined by this class is its field name.</source>
          <target state="translated">이 클래스에 의해 정의 된 각 소켓 옵션 의 &lt;a href=&quot;socketoption#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt; 은 해당 필드 이름입니다.</target>
        </trans-unit>
        <trans-unit id="2dce7e060eed43bca6d4e88ec9e2f86ac29def42" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stackwalker.option&quot;&gt;&lt;em&gt;stack walking options&lt;/em&gt;&lt;/a&gt; of a &lt;code&gt;StackWalker&lt;/code&gt; determines the information of &lt;a href=&quot;stackwalker.stackframe&quot;&gt;&lt;code&gt;StackFrame&lt;/code&gt;&lt;/a&gt; objects to be returned. By default, stack frames of the reflection API and implementation classes are &lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;hidden&lt;/a&gt; and &lt;code&gt;StackFrame&lt;/code&gt;s have the class name and method name available but not the &lt;a href=&quot;stackwalker.stackframe#getDeclaringClass()&quot;&gt;&lt;code&gt;Class reference&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The &lt;a href=&quot;stackwalker.option&quot;&gt;&lt;em&gt;stack walking options&lt;/em&gt;&lt;/a&gt; of a &lt;code&gt;StackWalker&lt;/code&gt; determines the information of &lt;a href=&quot;stackwalker.stackframe&quot;&gt; &lt;code&gt;StackFrame&lt;/code&gt; &lt;/a&gt; objects to be returned. By default, stack frames of the reflection API and implementation classes are &lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;hidden&lt;/a&gt; and &lt;code&gt;StackFrame&lt;/code&gt; s have the class name and method name available but not the &lt;a href=&quot;stackwalker.stackframe#getDeclaringClass()&quot;&gt; &lt;code&gt;Class reference&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="277deff41b631710526c3be6a8bce3fa73e5a350" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardcharsets&quot;&gt;&lt;code&gt;StandardCharsets&lt;/code&gt;&lt;/a&gt; class defines constants for each of the standard charsets.</source>
          <target state="translated">&lt;a href=&quot;standardcharsets&quot;&gt; &lt;code&gt;StandardCharsets&lt;/code&gt; 의&lt;/a&gt; 클래스는 표준 캐릭터 세트의 각각에 대한 상수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a8dd9a9fec27603d78ed08617b0bdfc6d7c235da" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardcopyoption&quot;&gt;&lt;code&gt;StandardCopyOption&lt;/code&gt;&lt;/a&gt; enumeration type defines the</source>
          <target state="translated">&lt;a href=&quot;standardcopyoption&quot;&gt; &lt;code&gt;StandardCopyOption&lt;/code&gt; 의&lt;/a&gt; 열거 형을 정의하는</target>
        </trans-unit>
        <trans-unit id="80c99f93b54d2734b5913704c3b7bc58ac7bd819" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardopenoption&quot;&gt;&lt;code&gt;StandardOpenOption&lt;/code&gt;&lt;/a&gt; enumeration type defines the</source>
          <target state="translated">&lt;a href=&quot;standardopenoption&quot;&gt; &lt;code&gt;StandardOpenOption&lt;/code&gt; 의&lt;/a&gt; 열거 형을 정의하는</target>
        </trans-unit>
        <trans-unit id="72295d2f416f8a8448218b4363525cc646e9da94" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardopenoption#SYNC&quot;&gt;&lt;code&gt;SYNC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;standardopenoption#DSYNC&quot;&gt;&lt;code&gt;DSYNC&lt;/code&gt;&lt;/a&gt; options are used when opening a file to require that updates to the file are written synchronously to the underlying storage device. In the case of the default provider, and the file resides on a local storage device, and the &lt;a href=&quot;../channels/seekablebytechannel&quot;&gt;&lt;code&gt;seekable&lt;/code&gt;&lt;/a&gt; channel is connected to a file that was opened with one of these options, then an invocation of the &lt;a href=&quot;../channels/writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method is only guaranteed to return when all changes made to the file by that invocation have been written to the device. These options are useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made. Whether this guarantee is possible with other &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; implementations is provider specific.</source>
          <target state="translated">The &lt;a href=&quot;standardopenoption#SYNC&quot;&gt; &lt;code&gt;SYNC&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;standardopenoption#DSYNC&quot;&gt; &lt;code&gt;DSYNC&lt;/code&gt; &lt;/a&gt; options are used when opening a file to require that updates to the file are written synchronously to the underlying storage device. In the case of the default provider, and the file resides on a local storage device, and the &lt;a href=&quot;../channels/seekablebytechannel&quot;&gt; &lt;code&gt;seekable&lt;/code&gt; &lt;/a&gt; channel is connected to a file that was opened with one of these options, then an invocation of the &lt;a href=&quot;../channels/writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; method is only guaranteed to return when all changes made to the file by that invocation have been written to the device. These options are useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made. Whether this guarantee is possible with other &lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt; implementations is provider specific.</target>
        </trans-unit>
        <trans-unit id="3d74cb4498be8f94cc5abccf92b10b83b8240700" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardopenoption#SYNC&quot;&gt;&lt;code&gt;SYNC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;standardopenoption#DSYNC&quot;&gt;&lt;code&gt;DSYNC&lt;/code&gt;&lt;/a&gt; options are used when opening a file to require that updates to the file are written synchronously to the underlying storage device. In the case of the default provider, and the file resides on a local storage device, and the &lt;a href=&quot;../channels/seekablebytechannel&quot;&gt;&lt;code&gt;seekable&lt;/code&gt;&lt;/a&gt; channel is connected to a file that was opened with one of these options, then an invocation of the &lt;a href=&quot;../channels/writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method is only guaranteed to return when all changes made to the file by that invocation have been written to the device. These options are useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made. Whether this guarantee is possible with other &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; implementations is provider specific.</source>
          <target state="translated">&lt;a href=&quot;standardopenoption#SYNC&quot;&gt; &lt;code&gt;SYNC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;standardopenoption#DSYNC&quot;&gt; &lt;code&gt;DSYNC&lt;/code&gt; &lt;/a&gt; 파일을 열 때 사용되는 옵션은 파일에 업데이트가 기본 저장 장치에 동 기적으로 기록해야합니다. 기본 공급자의 경우 파일이 로컬 저장 장치에 있고 &lt;a href=&quot;../channels/seekablebytechannel&quot;&gt; &lt;code&gt;seekable&lt;/code&gt; &lt;/a&gt; 채널이 이러한 옵션 중 하나를 사용하여 열린 파일에 연결되면 &lt;a href=&quot;../channels/writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 메서드 호출은 모두 해당 호출에 의한 파일 변경 사항이 장치에 기록되었습니다. 이 옵션은 시스템 충돌시 중요한 정보가 손실되지 않도록하는 데 유용합니다. 파일이 로컬 장치에 없으면 그러한 보증이 이루어지지 않습니다. 다른 &lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt; 와 함께이 보증이 가능한지 여부 구현은 공급자마다 다릅니다.</target>
        </trans-unit>
        <trans-unit id="666585fcad66c94e607b17b82eebdf605f5fff6b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;staxresult&quot;&gt;&lt;code&gt;StAXResult&lt;/code&gt;&lt;/a&gt; class encapsulates a &lt;a href=&quot;../../stream/xmlstreamwriter&quot;&gt;&lt;code&gt;XMLStreamWriter&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../stream/xmleventwriter&quot;&gt;&lt;code&gt;XMLEventWriter&lt;/code&gt;&lt;/a&gt; and can be used as an output where a &lt;a href=&quot;../result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; object is accepted.</source>
          <target state="translated">The &lt;a href=&quot;staxresult&quot;&gt; &lt;code&gt;StAXResult&lt;/code&gt; &lt;/a&gt; class encapsulates a &lt;a href=&quot;../../stream/xmlstreamwriter&quot;&gt; &lt;code&gt;XMLStreamWriter&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;../../stream/xmleventwriter&quot;&gt; &lt;code&gt;XMLEventWriter&lt;/code&gt; &lt;/a&gt; and can be used as an output where a &lt;a href=&quot;../result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; object is accepted.</target>
        </trans-unit>
        <trans-unit id="9128fc3bc1eb1ff4d95279e4cf6f6224d3cc8961" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;staxsource&quot;&gt;&lt;code&gt;StAXSource&lt;/code&gt;&lt;/a&gt; class encapsulates a &lt;a href=&quot;../../stream/xmlstreamreader&quot;&gt;&lt;code&gt;XMLStreamReader&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../stream/xmleventreader&quot;&gt;&lt;code&gt;XMLEventReader&lt;/code&gt;&lt;/a&gt; and can be used as an input where a &lt;a href=&quot;../source&quot;&gt;&lt;code&gt;Source&lt;/code&gt;&lt;/a&gt; object is accepted.</source>
          <target state="translated">The &lt;a href=&quot;staxsource&quot;&gt; &lt;code&gt;StAXSource&lt;/code&gt; &lt;/a&gt; class encapsulates a &lt;a href=&quot;../../stream/xmlstreamreader&quot;&gt; &lt;code&gt;XMLStreamReader&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;../../stream/xmleventreader&quot;&gt; &lt;code&gt;XMLEventReader&lt;/code&gt; &lt;/a&gt; and can be used as an input where a &lt;a href=&quot;../source&quot;&gt; &lt;code&gt;Source&lt;/code&gt; &lt;/a&gt; object is accepted.</target>
        </trans-unit>
        <trans-unit id="15e9da6bf2a3f858875a9def12dcdd45826455c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;streamresult&quot;&gt;&lt;code&gt;StreamResult&lt;/code&gt;&lt;/a&gt; class provides methods for specifying &lt;a href=&quot;../../../../../java.base/java/io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../../../java.base/java/io/writer&quot;&gt;&lt;code&gt;Writer&lt;/code&gt;&lt;/a&gt;, or an output system ID, as the output of the transformation result.</source>
          <target state="translated">The &lt;a href=&quot;streamresult&quot;&gt; &lt;code&gt;StreamResult&lt;/code&gt; &lt;/a&gt; class provides methods for specifying &lt;a href=&quot;../../../../../java.base/java/io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../../../../../java.base/java/io/writer&quot;&gt; &lt;code&gt;Writer&lt;/code&gt; &lt;/a&gt;, or an output system ID, as the output of the transformation result.</target>
        </trans-unit>
        <trans-unit id="b73a57897e92c91dc3e9229806ea2a5d957e1fcf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;streamsource&quot;&gt;&lt;code&gt;StreamSource&lt;/code&gt;&lt;/a&gt; class provides methods for specifying &lt;a href=&quot;../../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; input, &lt;a href=&quot;../../../../../java.base/java/io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; input, and URL input in the form of strings. Even if an input stream or reader is specified as the source, &lt;a href=&quot;streamsource#setSystemId(java.lang.String)&quot;&gt;&lt;code&gt;StreamSource.setSystemId(java.lang.String)&lt;/code&gt;&lt;/a&gt; should still be called, so that the transformer can know from where it should resolve relative URIs. The public identifier is always optional: if the application writer includes one, it will be provided as part of the &lt;a href=&quot;../sourcelocator&quot;&gt;&lt;code&gt;SourceLocator&lt;/code&gt;&lt;/a&gt; information.</source>
          <target state="translated">The &lt;a href=&quot;streamsource&quot;&gt; &lt;code&gt;StreamSource&lt;/code&gt; &lt;/a&gt; class provides methods for specifying &lt;a href=&quot;../../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt; input, &lt;a href=&quot;../../../../../java.base/java/io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt; input, and URL input in the form of strings. Even if an input stream or reader is specified as the source, &lt;a href=&quot;streamsource#setSystemId(java.lang.String)&quot;&gt; &lt;code&gt;StreamSource.setSystemId(java.lang.String)&lt;/code&gt; &lt;/a&gt; should still be called, so that the transformer can know from where it should resolve relative URIs. The public identifier is always optional: if the application writer includes one, it will be provided as part of the &lt;a href=&quot;../sourcelocator&quot;&gt; &lt;code&gt;SourceLocator&lt;/code&gt; &lt;/a&gt; information.</target>
        </trans-unit>
        <trans-unit id="e9d9db88422c56d37b5213b36ef7275470166809" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;system#exit(int)&quot;&gt;&lt;code&gt;System.exit&lt;/code&gt;&lt;/a&gt; method is the conventional and convenient means of invoking this method.</source>
          <target state="translated">The &lt;a href=&quot;system#exit(int)&quot;&gt; &lt;code&gt;System.exit&lt;/code&gt; &lt;/a&gt; method is the conventional and convenient means of invoking this method.</target>
        </trans-unit>
        <trans-unit id="3dbae129ef5d648f47d6fba81499acd845594518" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;templateshandler&quot;&gt;&lt;code&gt;TemplatesHandler&lt;/code&gt;&lt;/a&gt; interface allows the creation of &lt;a href=&quot;../templates&quot;&gt;&lt;code&gt;Templates&lt;/code&gt;&lt;/a&gt; objects from SAX2 parse events. Once the &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; events are complete, the Templates object may be obtained from &lt;a href=&quot;templateshandler#getTemplates()&quot;&gt;&lt;code&gt;TemplatesHandler.getTemplates()&lt;/code&gt;&lt;/a&gt;. Note that &lt;a href=&quot;templateshandler#setSystemId(java.lang.String)&quot;&gt;&lt;code&gt;TemplatesHandler.setSystemId(java.lang.String)&lt;/code&gt;&lt;/a&gt; should normally be called in order to establish a base system ID from which relative URLs may be resolved.</source>
          <target state="translated">The &lt;a href=&quot;templateshandler&quot;&gt; &lt;code&gt;TemplatesHandler&lt;/code&gt; &lt;/a&gt; interface allows the creation of &lt;a href=&quot;../templates&quot;&gt; &lt;code&gt;Templates&lt;/code&gt; &lt;/a&gt; objects from SAX2 parse events. Once the &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt; events are complete, the Templates object may be obtained from &lt;a href=&quot;templateshandler#getTemplates()&quot;&gt; &lt;code&gt;TemplatesHandler.getTemplates()&lt;/code&gt; &lt;/a&gt;. Note that &lt;a href=&quot;templateshandler#setSystemId(java.lang.String)&quot;&gt; &lt;code&gt;TemplatesHandler.setSystemId(java.lang.String)&lt;/code&gt; &lt;/a&gt; should normally be called in order to establish a base system ID from which relative URLs may be resolved.</target>
        </trans-unit>
        <trans-unit id="65632e3304ce8a7430971d425d4ea6f5d7041352" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;Epoch Day count&lt;/code&gt;&lt;/a&gt; is a simple incrementing count of days where day 0 is 1970-01-01 (ISO). This definition is the same for all chronologies, enabling conversion.</source>
          <target state="translated">&lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;Epoch Day count&lt;/code&gt; &lt;/a&gt; 일 0 1970-01-01 (ISO)입니다 일의 수를 증가 간단. 이 정의는 모든 연대기에서 동일하므로 변환이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="5fe0b0a62926df5a411799abadea12e26424d776" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt; class contains a standard set of adjusters, available as static methods. These include:</source>
          <target state="translated">&lt;a href=&quot;temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; 의&lt;/a&gt; 클래스는 정적 메서드로 사용할 수 조정자의 표준 세트가 포함되어 있습니다. 여기에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="8ee0d1305c6ed8ac73c630b5768c7fd55bebbf44" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface models amounts of relative time.</source>
          <target state="translated">&lt;a href=&quot;temporalamount&quot;&gt; &lt;code&gt;TemporalAmount&lt;/code&gt; 의&lt;/a&gt; 인터페이스 모델은 상대적 시간의 금액.</target>
        </trans-unit>
        <trans-unit id="d603049ad9b812aec8a4461ab35e3fdfaf4b0a9c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt; interface provides another mechanism for querying temporal objects. That interface is limited to returning a &lt;code&gt;long&lt;/code&gt;. By contrast, queries can return any type.</source>
          <target state="translated">&lt;a href=&quot;temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; 의&lt;/a&gt; 인터페이스는 임시 객체를 조회하는 또 다른 메커니즘을 제공한다. 이 인터페이스는 &lt;code&gt;long&lt;/code&gt; 을 반환하는 것으로 제한됩니다 . 반대로 쿼리는 모든 유형을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49d039ee836590f5a2bcdafdec86bf461e5a5432" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadgroup#uncaughtException(java.lang.Thread,java.lang.Throwable)&quot;&gt;top-level error handler&lt;/a&gt; does not print out a message if &lt;code&gt;ThreadDeath&lt;/code&gt; is never caught.</source>
          <target state="translated">The &lt;a href=&quot;threadgroup#uncaughtException(java.lang.Thread,java.lang.Throwable)&quot;&gt;top-level error handler&lt;/a&gt; does not print out a message if &lt;code&gt;ThreadDeath&lt;/code&gt; is never caught.</target>
        </trans-unit>
        <trans-unit id="da0f2490753f88004eeaececd77ced0e3d26d3b9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadgroup#uncaughtException-java.lang.Thread-java.lang.Throwable-&quot;&gt;top-level error handler&lt;/a&gt; does not print out a message if &lt;code&gt;ThreadDeath&lt;/code&gt; is never caught.</source>
          <target state="translated">&lt;a href=&quot;threadgroup#uncaughtException-java.lang.Thread-java.lang.Throwable-&quot;&gt;최고 레벨의 에러 핸들러는&lt;/a&gt; 경우 메시지를 출력하지 않는 &lt;code&gt;ThreadDeath&lt;/code&gt; 잡힌되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="90e1d925999c201c8dd68d8ed236e67286b0b5ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadmxbean#isThreadContentionMonitoringSupported--&quot;&gt;&lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports thread contention monitoring. The thread contention monitoring is disabled by default. The &lt;a href=&quot;threadmxbean#setThreadContentionMonitoringEnabled-boolean-&quot;&gt;&lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt;&lt;/a&gt; method can be used to enable thread contention monitoring.</source>
          <target state="translated">&lt;a href=&quot;threadmxbean#isThreadContentionMonitoringSupported--&quot;&gt; &lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt; &lt;/a&gt; 메소드는 자바 가상 머신 지원 스레드 경합 모니터링 여부를 결정하기 위해 사용될 수있다. 스레드 경합 모니터링은 기본적으로 사용되지 않습니다. &lt;a href=&quot;threadmxbean#setThreadContentionMonitoringEnabled-boolean-&quot;&gt; &lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt; &lt;/a&gt; 방법 스레드 경합 모니터링을 활성화하기 위해 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="ed0642ec4c21f239693011a0d808e0a9a5551dee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadmxbean#isThreadCpuTimeSupported--&quot;&gt;&lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for any thread. The &lt;a href=&quot;threadmxbean#isCurrentThreadCpuTimeSupported--&quot;&gt;&lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for the current thread. A Java virtual machine implementation that supports CPU time measurement for any thread will also support that for the current thread.</source>
          <target state="translated">&lt;a href=&quot;threadmxbean#isThreadCpuTimeSupported--&quot;&gt; &lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt; 메소드는 자바 가상 머신이 지원하는 모든 스레드에 대해 CPU 시간을 측정하는 경우를 결정하기 위해 사용될 수있다. &lt;a href=&quot;threadmxbean#isCurrentThreadCpuTimeSupported--&quot;&gt; &lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt; 메소드는 자바 가상 머신 지원은 현재 스레드에 대해 CPU 시간을 측정하는 경우를 결정하기 위해 사용될 수있다. 모든 스레드의 CPU 시간 측정을 지원하는 Java 가상 머신 구현은 현재 스레드의 CPU 시간 측정도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="126515b65a295f042897ee7ca24299c10de24ac2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;throwable#fillInStackTrace--&quot;&gt;&lt;code&gt;fillInStackTrace()&lt;/code&gt;&lt;/a&gt; method is called to initialize the stack trace data in the newly created throwable.</source>
          <target state="translated">&lt;a href=&quot;throwable#fillInStackTrace--&quot;&gt; &lt;code&gt;fillInStackTrace()&lt;/code&gt; &lt;/a&gt; 메소드는 새롭게 생성 던질에서 스택 트레이스 데이터를 초기화한다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
