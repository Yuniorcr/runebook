<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="0952a5325cc57d9ab4b144b40fe5608f38dd2521" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Tamil&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Tamil&quot;.</target>
        </trans-unit>
        <trans-unit id="035f9c6054623a148c5a7cf01c838978dfe320e0" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Tangut&quot;.</source>
          <target state="translated">Unicode script &quot;Tangut&quot;.</target>
        </trans-unit>
        <trans-unit id="63c2f06b87376149dfa602389988b9177d254358" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Telugu&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;텔루구 어&quot;.</target>
        </trans-unit>
        <trans-unit id="55ef1474277b907b1f089581e563c78d10ee847f" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Thaana&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Thaana&quot;.</target>
        </trans-unit>
        <trans-unit id="a790244317ef6f8f22e001515f3afa6581f3b63d" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Thai&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;태국어&quot;.</target>
        </trans-unit>
        <trans-unit id="0d74a2f8886f4b4275b027ea6634a3f028d5e624" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Tibetan&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;티벳어&quot;.</target>
        </trans-unit>
        <trans-unit id="447194ee252203f005ae895e41c573a1b0e32c7e" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Tifinagh&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Tifinagh&quot;.</target>
        </trans-unit>
        <trans-unit id="5527722e91747b6ae8da230240f1bb34a857d287" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Tirhuta&quot;.</source>
          <target state="translated">Unicode script &quot;Tirhuta&quot;.</target>
        </trans-unit>
        <trans-unit id="86a8af449125c52e87cbc04402ca695102962af0" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Ugaritic&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Ugaritic&quot;.</target>
        </trans-unit>
        <trans-unit id="fbca9a168a0a2e469517e59f4adafef081385463" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Unknown&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;알 수 없음&quot;.</target>
        </trans-unit>
        <trans-unit id="fe838de5b6e22ca16b5d3eff936f49efb7772533" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Vai&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Vai&quot;.</target>
        </trans-unit>
        <trans-unit id="385f5c20168fc4b5cd3a26dd4cc32a7192dec074" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Warang Citi&quot;.</source>
          <target state="translated">Unicode script &quot;Warang Citi&quot;.</target>
        </trans-unit>
        <trans-unit id="d6c41a22fa95d87caa8eb9aa104e0600de4fed53" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Yi&quot;.</source>
          <target state="translated">유니 코드 스크립트 &quot;Yi&quot;.</target>
        </trans-unit>
        <trans-unit id="3a57f6037e474b3101595677c7991da9b2e92cf8" translate="yes" xml:space="preserve">
          <source>Unicode script &quot;Zanabazar Square&quot;.</source>
          <target state="translated">Unicode script &quot;Zanabazar Square&quot;.</target>
        </trans-unit>
        <trans-unit id="7305a77af6d86e2cb16fbc42ea10aae3d23cbca8" translate="yes" xml:space="preserve">
          <source>Unicode scripts, blocks, categories and binary properties are written with the &lt;code&gt;\p&lt;/code&gt; and &lt;code&gt;\P&lt;/code&gt; constructs as in Perl. &lt;code&gt;\p{&lt;/code&gt;</source>
          <target state="translated">유니 코드 스크립트, 블록, 범주 및 이진 속성은 Perl에서 와 같이 &lt;code&gt;\p&lt;/code&gt; 및 &lt;code&gt;\P&lt;/code&gt; 구문으로 작성됩니다. &lt;code&gt;\p{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4247bd31bdb74c5074c844a1f51c93a859ff8578" translate="yes" xml:space="preserve">
          <source>Unicode support</source>
          <target state="translated">유니 코드 지원</target>
        </trans-unit>
        <trans-unit id="b8f5ec45d7a5a3a4d9fd6dfd9fa57c477e519399" translate="yes" xml:space="preserve">
          <source>Unicode-aware case folding can also be enabled via the embedded flag expression &lt;code&gt;(?u)&lt;/code&gt;.</source>
          <target state="translated">임베디드 플래그 표현식 &lt;code&gt;(?u)&lt;/code&gt; 통해 유니 코드 인식 케이스 폴딩을 활성화 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="df43d35e4f1866ff3652c8576f1fd5c446edad72" translate="yes" xml:space="preserve">
          <source>UnicodeData</source>
          <target state="translated">UnicodeData</target>
        </trans-unit>
        <trans-unit id="12409ee65ced113260fe713f27dce3fe1f4cfecd" translate="yes" xml:space="preserve">
          <source>Uniform Resource Locator (&lt;a href=&quot;../../../java.base/java/net/url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt;) -- The print data consists of the bytes read from the URL location. The bytes are encoded in the character set specified by the doc flavor's MIME type. If the MIME type does not specify a character set, the default character set is US-ASCII. When the representation class is a &lt;code&gt;URL&lt;/code&gt;, the print service itself accesses and downloads the document directly from its &lt;code&gt;URL&lt;/code&gt; address, without involving the client. The service may be some form of network print service which is executing in a different environment. This means you should not use a &lt;code&gt;URL&lt;/code&gt; print data flavor to print a document at a restricted &lt;code&gt;URL&lt;/code&gt; that the client can see but the printer cannot see. This also means you should not use a &lt;code&gt;URL&lt;/code&gt; print data flavor to print a document stored in a local file that is not available at a &lt;code&gt;URL&lt;/code&gt; accessible independently of the client. For example, a file that is not served up by an HTTP server or FTP server. To print such documents, let the client open an input stream on the &lt;code&gt;URL&lt;/code&gt; or file and use an input stream data flavor.</source>
          <target state="translated">Uniform Resource Locator (&lt;a href=&quot;../../../java.base/java/net/url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;) -- The print data consists of the bytes read from the URL location. The bytes are encoded in the character set specified by the doc flavor's MIME type. If the MIME type does not specify a character set, the default character set is US-ASCII. When the representation class is a &lt;code&gt;URL&lt;/code&gt; , the print service itself accesses and downloads the document directly from its &lt;code&gt;URL&lt;/code&gt; address, without involving the client. The service may be some form of network print service which is executing in a different environment. This means you should not use a &lt;code&gt;URL&lt;/code&gt; print data flavor to print a document at a restricted &lt;code&gt;URL&lt;/code&gt; that the client can see but the printer cannot see. This also means you should not use a &lt;code&gt;URL&lt;/code&gt; print data flavor to print a document stored in a local file that is not available at a &lt;code&gt;URL&lt;/code&gt; accessible independently of the client. For example, a file that is not served up by an HTTP server or FTP server. To print such documents, let the client open an input stream on the &lt;code&gt;URL&lt;/code&gt; or file and use an input stream data flavor.</target>
        </trans-unit>
        <trans-unit id="b029b525bf5f42458954c7067e973f25aad85180" translate="yes" xml:space="preserve">
          <source>Uniform Resource Locator (&lt;a href=&quot;../../java/net/url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt;) -- The print data consists of the bytes read from the URL location. The bytes are encoded in the character set specified by the doc flavor's MIME type. If the MIME type does not specify a character set, the default character set is US-ASCII.</source>
          <target state="translated">&lt;a href=&quot;../../java/net/url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt; (Uniform Resource Locator) )-인쇄 데이터는 URL 위치에서 읽은 바이트로 구성됩니다. 바이트는 doc 후 레이 바의 MIME 타입으로 지정된 문자 세트로 인코딩됩니다. MIME 유형이 문자 세트를 지정하지 않으면 기본 문자 세트는 US-ASCII입니다.</target>
        </trans-unit>
        <trans-unit id="f3b0d3f410f4240d942717e4e7e7d48df21b80a2" translate="yes" xml:space="preserve">
          <source>Uninitializes &lt;code&gt;this.list&lt;/code&gt; by calling &lt;code&gt;uninstallListeners()&lt;/code&gt;, &lt;code&gt;uninstallKeyboardActions()&lt;/code&gt;, and &lt;code&gt;uninstallDefaults()&lt;/code&gt; in order.</source>
          <target state="translated">Uninitializes &lt;code&gt;this.list&lt;/code&gt; by calling &lt;code&gt;uninstallListeners()&lt;/code&gt; , &lt;code&gt;uninstallKeyboardActions()&lt;/code&gt; , and &lt;code&gt;uninstallDefaults()&lt;/code&gt; in order.</target>
        </trans-unit>
        <trans-unit id="827f3d992054312c80004b3c2a6ec83be5999b07" translate="yes" xml:space="preserve">
          <source>Uninitializes &lt;code&gt;this.list&lt;/code&gt; by calling &lt;code&gt;uninstallListeners()&lt;/code&gt;, &lt;code&gt;uninstallKeyboardActions()&lt;/code&gt;, and &lt;code&gt;uninstallDefaults()&lt;/code&gt; in order. Sets this.list to null.</source>
          <target state="translated">Uninitializes &lt;code&gt;this.list&lt;/code&gt; by calling &lt;code&gt;uninstallListeners()&lt;/code&gt; , &lt;code&gt;uninstallKeyboardActions()&lt;/code&gt; , and &lt;code&gt;uninstallDefaults()&lt;/code&gt; in order. Sets this.list to null.</target>
        </trans-unit>
        <trans-unit id="dd415abb44950326af41018635d40b77a4b60d53" translate="yes" xml:space="preserve">
          <source>Uninitializes the look and feel.</source>
          <target state="translated">Uninitializes the look and feel.</target>
        </trans-unit>
        <trans-unit id="e5ba5d253bfdf83131c38609ac6d64a79e13f0ba" translate="yes" xml:space="preserve">
          <source>Uninitializes the look and feel. While this method is public, it should only be invoked by the &lt;code&gt;UIManager&lt;/code&gt; when the look and feel is uninstalled. For example, &lt;code&gt;UIManager.setLookAndFeel&lt;/code&gt; invokes this when the look and feel is changed.</source>
          <target state="translated">Uninitializes the look and feel. While this method is public, it should only be invoked by the &lt;code&gt;UIManager&lt;/code&gt; when the look and feel is uninstalled. For example, &lt;code&gt;UIManager.setLookAndFeel&lt;/code&gt; invokes this when the look and feel is changed.</target>
        </trans-unit>
        <trans-unit id="83a615256c7064b50f7c32fe3ba8a8952c41a3f2" translate="yes" xml:space="preserve">
          <source>Uninstall the defaults.</source>
          <target state="translated">Uninstall the defaults.</target>
        </trans-unit>
        <trans-unit id="534448469e9a66c82d5f3fc4ddeb2a5f05285594" translate="yes" xml:space="preserve">
          <source>Uninstall the listeners.</source>
          <target state="translated">Uninstall the listeners.</target>
        </trans-unit>
        <trans-unit id="b747f1cac33b34f8533593641db5c26ab859252f" translate="yes" xml:space="preserve">
          <source>Uninstall view port properties.</source>
          <target state="translated">Uninstall view port properties.</target>
        </trans-unit>
        <trans-unit id="690af481d0906b916b45ca6a5569bf02c9fb4895" translate="yes" xml:space="preserve">
          <source>Uninstalls UI.</source>
          <target state="translated">Uninstalls UI.</target>
        </trans-unit>
        <trans-unit id="b89a1d369514caa40e1203c3b3566d28f044532f" translate="yes" xml:space="preserve">
          <source>Uninstalls a UI.</source>
          <target state="translated">Uninstalls a UI.</target>
        </trans-unit>
        <trans-unit id="7438d4a6e0cca5aac42270371d8a412bafbdd50e" translate="yes" xml:space="preserve">
          <source>Uninstalls any state that this style installed on the &lt;code&gt;JComponent&lt;/code&gt; from &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="translated">이 스타일은에 설치하는 것이 어떤 상태 언인스톨 &lt;code&gt;JComponent&lt;/code&gt; 의 에서 &lt;code&gt;context&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba4591facf9d07aae0c6cc119f75c13a6e3e58e1" translate="yes" xml:space="preserve">
          <source>Uninstalls any state the &lt;code&gt;AbstractFormatter&lt;/code&gt; may have installed on the &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AbstractFormatter&lt;/code&gt; 가 &lt;code&gt;JFormattedTextField&lt;/code&gt; 에 설치했을 수있는 모든 상태를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="45e03b6e6f36222aa08443257a8720aa3d5c46a8" translate="yes" xml:space="preserve">
          <source>Uninstalls any state the &lt;code&gt;AbstractFormatter&lt;/code&gt; may have installed on the &lt;code&gt;JFormattedTextField&lt;/code&gt;. This resets the &lt;code&gt;DocumentFilter&lt;/code&gt;, &lt;code&gt;NavigationFilter&lt;/code&gt; and additional &lt;code&gt;Action&lt;/code&gt;s installed on the &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AbstractFormatter&lt;/code&gt; 가 &lt;code&gt;JFormattedTextField&lt;/code&gt; 에 설치했을 수있는 모든 상태를 제거합니다 . 이는 &lt;code&gt;JFormattedTextField&lt;/code&gt; 에 설치된 &lt;code&gt;DocumentFilter&lt;/code&gt; , &lt;code&gt;NavigationFilter&lt;/code&gt; 및 추가 &lt;code&gt;Action&lt;/code&gt; 을 재설정합니다 .</target>
        </trans-unit>
        <trans-unit id="3951eb8f6db72e75c378dd99f25570bd72075690" translate="yes" xml:space="preserve">
          <source>Uninstalls default color choosers.</source>
          <target state="translated">기본 색상 선택기를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="4b26e8cc86db0d37f64350d1cbc3d35589685e51" translate="yes" xml:space="preserve">
          <source>Uninstalls default properties</source>
          <target state="translated">기본 속성을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="4085abac5e7896fc57431c90a1a7e2c6c9d06c84" translate="yes" xml:space="preserve">
          <source>Uninstalls default properties.</source>
          <target state="translated">기본 속성을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="abbc08af3f258602643e1064b0a50deaa1e1dae2" translate="yes" xml:space="preserve">
          <source>Uninstalls default setting.</source>
          <target state="translated">기본 설정을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="76becaa0db8805e3a01c86a38ac78a2ee93b65a5" translate="yes" xml:space="preserve">
          <source>Uninstalls default setting. This method is called when a &lt;code&gt;LookAndFeel&lt;/code&gt; is uninstalled.</source>
          <target state="translated">기본 설정을 제거합니다. 이 메서드는 &lt;code&gt;LookAndFeel&lt;/code&gt; 이 제거 될 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="bd85c2e6a6743e6a9ab227e65ae6faea7ce4965c" translate="yes" xml:space="preserve">
          <source>Uninstalls defaults from a viewport.</source>
          <target state="translated">뷰포트에서 기본값을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="b18277d549596b36d092da5fa584f1f745df0620" translate="yes" xml:space="preserve">
          <source>Uninstalls desktop manager.</source>
          <target state="translated">데스크탑 관리자를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="12bc60e4ba21e4cd7d27236512a422148fe6965f" translate="yes" xml:space="preserve">
          <source>Uninstalls keyboard actions.</source>
          <target state="translated">키보드 동작을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="73766241072d5d42f0aa90d2ee214da5390c3e0c" translate="yes" xml:space="preserve">
          <source>Uninstalls listeners for the UI.</source>
          <target state="translated">UI에 대한 리스너를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="c12801c6b9613d3bb3a3c708e3f7e1bdb250870b" translate="yes" xml:space="preserve">
          <source>Uninstalls listeners from the panel.</source>
          <target state="translated">패널에서 리스너를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="90614e714b2c41098adc7ae43f67dda1504c0114" translate="yes" xml:space="preserve">
          <source>Uninstalls listeners from the viewport.</source>
          <target state="translated">뷰포트에서 리스너를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="064c8830a29c24631087ee8752a39eb2c35afb0d" translate="yes" xml:space="preserve">
          <source>Uninstalls listeners.</source>
          <target state="translated">리스너를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="08d11f256a1dc049d406dc00db517a7798fd7897" translate="yes" xml:space="preserve">
          <source>Uninstalls listeners. This method is called when a &lt;code&gt;LookAndFeel&lt;/code&gt; is uninstalled.</source>
          <target state="translated">리스너를 제거합니다. 이 메서드는 &lt;code&gt;LookAndFeel&lt;/code&gt; 이 제거 될 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="029f4aa7c74c37b5e40b2755d8133051d39dd3ac" translate="yes" xml:space="preserve">
          <source>Uninstalls the &lt;code&gt;PropertyChangeListener&lt;/code&gt; returned from &lt;code&gt;createPropertyChangeListener&lt;/code&gt; from the &lt;code&gt;JDesktopPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JDesktopPane&lt;/code&gt; 에서 &lt;code&gt;createPropertyChangeListener&lt;/code&gt; 에서 반환 된 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 를 제거 합니다 .</target>
        </trans-unit>
        <trans-unit id="98af3cb8655ccd2182a6a9b6b55474b796394bf5" translate="yes" xml:space="preserve">
          <source>Uninstalls the UI defaults.</source>
          <target state="translated">UI 기본값을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="7677c6eac5c599ad7f60b9abdc759a6160d12765" translate="yes" xml:space="preserve">
          <source>Uninstalls the UI.</source>
          <target state="translated">UI를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="ab2c305e2302cdb93a8b2b5ddc7343955efadfca" translate="yes" xml:space="preserve">
          <source>Uninstalls the components.</source>
          <target state="translated">구성 요소를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="4c8dd990d92731a2b71e276c57eb8341efd19958" translate="yes" xml:space="preserve">
          <source>Uninstalls the default colors, default font, default renderer, and default editor from the combo box.</source>
          <target state="translated">콤보 상자에서 기본 색상, 기본 글꼴, 기본 렌더러 및 기본 편집기를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="411abd5a9389c1711aff368cd8e1aff96e839f91" translate="yes" xml:space="preserve">
          <source>Uninstalls the defaults.</source>
          <target state="translated">기본값을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="43b9e118b0dd3eceb0f5dada2ef16864f3a7d2bc" translate="yes" xml:space="preserve">
          <source>Uninstalls the event listeners for the UI.</source>
          <target state="translated">UI에 대한 이벤트 리스너를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="dffefbe4a3f4d067d504b3f23dc96ecca386da4b" translate="yes" xml:space="preserve">
          <source>Uninstalls the event listeners from the UI.</source>
          <target state="translated">UI에서 이벤트 리스너를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="96753af8fc1229c9c0e8e59f3f9f6a6237a29615" translate="yes" xml:space="preserve">
          <source>Uninstalls the icons.</source>
          <target state="translated">아이콘을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="dc63b6f4590cf81ece72c4dc1b5730fde8cdf4d5" translate="yes" xml:space="preserve">
          <source>Uninstalls the keyboard actions for the UI.</source>
          <target state="translated">UI에 대한 키보드 동작을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="4fc1edf1ff106d6adc840ced4140cef91250f93b" translate="yes" xml:space="preserve">
          <source>Uninstalls the keyboard actions.</source>
          <target state="translated">키보드 동작을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="446897550b17638d12f1d263968561267c214c2a" translate="yes" xml:space="preserve">
          <source>Uninstalls the listeners.</source>
          <target state="translated">리스너를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="4fcf8906c0dc47a431c5797ee7ac4b16a465a1d0" translate="yes" xml:space="preserve">
          <source>Uninstalls the renderer pane.</source>
          <target state="translated">렌더러 창을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="96f00f38ca1aba36dab16bee99d6baabe0330016" translate="yes" xml:space="preserve">
          <source>Uninstalls the strings.</source>
          <target state="translated">문자열을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="7937e477fb62a120ee0e0f3c358c81c1f69d7c5a" translate="yes" xml:space="preserve">
          <source>Unintalls default properties.</source>
          <target state="translated">기본 속성을 해제합니다.</target>
        </trans-unit>
        <trans-unit id="72d1bc1786787b9f5cf6f8701a1fb442f4f59285" translate="yes" xml:space="preserve">
          <source>Union</source>
          <target state="translated">Union</target>
        </trans-unit>
        <trans-unit id="3e92bb6f3198735b946058eb87f7dfe95141ed97" translate="yes" xml:space="preserve">
          <source>Union from step 1 is partitioned into subsets of methods with same signature (name, parameter types) and return type.</source>
          <target state="translated">1 단계의 통합은 동일한 서명 (이름, 매개 변수 유형) 및 반환 유형을 가진 메서드의 하위 집합으로 분할됩니다.</target>
        </trans-unit>
        <trans-unit id="2cfef1bfee0e9e671b5120696b51b26567441b4a" translate="yes" xml:space="preserve">
          <source>UnionType</source>
          <target state="translated">UnionType</target>
        </trans-unit>
        <trans-unit id="2526b93dc562a68ed40d7d722f8374200e7e4e25" translate="yes" xml:space="preserve">
          <source>UnionType.getAlternatives()</source>
          <target state="translated">UnionType.getAlternatives()</target>
        </trans-unit>
        <trans-unit id="9eb32ff45bef682d2597f8ef6dd752cde22b1e16" translate="yes" xml:space="preserve">
          <source>Unions the pair of source &lt;code&gt;Rectangle2D&lt;/code&gt; objects and puts the result into the specified destination &lt;code&gt;Rectangle2D&lt;/code&gt; object.</source>
          <target state="translated">소스 &lt;code&gt;Rectangle2D&lt;/code&gt; 객체 쌍을 결합 하고 결과를 지정된 대상 &lt;code&gt;Rectangle2D&lt;/code&gt; 객체에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="40c3fabcdc4e685081db54e6e7151d096ad3f045" translate="yes" xml:space="preserve">
          <source>Unions the pair of source &lt;code&gt;Rectangle2D&lt;/code&gt; objects and puts the result into the specified destination &lt;code&gt;Rectangle2D&lt;/code&gt; object. One of the source rectangles can also be the destination to avoid creating a third Rectangle2D object, but in this case the original points of this source rectangle will be overwritten by this method.</source>
          <target state="translated">소스 &lt;code&gt;Rectangle2D&lt;/code&gt; 객체 쌍을 결합 하고 결과를 지정된 대상 &lt;code&gt;Rectangle2D&lt;/code&gt; 객체에 넣습니다 . 소스 사각형 중 하나는 세 번째 Rectangle2D 객체 생성을 방지하기위한 대상이 될 수도 있지만이 경우이 소스 사각형의 원래 지점은이 메서드에 의해 덮어 쓰여집니다.</target>
        </trans-unit>
        <trans-unit id="7553b136bb52617dcd8cd2fc17176cf6e846745f" translate="yes" xml:space="preserve">
          <source>Unique key for message text (to allow translation, analysis).</source>
          <target state="translated">메시지 텍스트의 고유 키 (번역, 분석 가능)</target>
        </trans-unit>
        <trans-unit id="86e4640903e73b70a2842bbd6b955734fda71fca" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a century.</source>
          <target state="translated">세기의 개념을 나타내는 단위.</target>
        </trans-unit>
        <trans-unit id="9f9e8ae9a76d0c44c4e06e8c6c489f428f3062a6" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a century. For the ISO calendar system, it is equal to 100 years.</source>
          <target state="translated">세기의 개념을 나타내는 단위. ISO 캘린더 시스템의 경우 100 년입니다.</target>
        </trans-unit>
        <trans-unit id="5d24752cb3e0d31a6eae1c66de9c6277c698b75a" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a day.</source>
          <target state="translated">하루의 개념을 나타내는 단위입니다.</target>
        </trans-unit>
        <trans-unit id="aa542cbc7f0b2f05e5de66292062be35167ef3ec" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a day. For the ISO calendar system, it is the standard day from midnight to midnight. The estimated duration of a day is &lt;code&gt;24 Hours&lt;/code&gt;.</source>
          <target state="translated">하루의 개념을 나타내는 단위입니다. ISO 캘린더 시스템의 경우 자정부터 자정까지의 표준 요일입니다. 하루의 예상 지속 &lt;code&gt;24 Hours&lt;/code&gt; 은 24 시간입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="29e935cfd0b97f4efa71ed0298c1823ea093459c" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a decade.</source>
          <target state="translated">10 년의 개념을 나타내는 단위.</target>
        </trans-unit>
        <trans-unit id="28e3b680a177515dffb29196c9e8b5734714cc06" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a decade. For the ISO calendar system, it is equal to 10 years.</source>
          <target state="translated">10 년의 개념을 나타내는 단위. ISO 캘린더 시스템의 경우 10 년입니다.</target>
        </trans-unit>
        <trans-unit id="936c5b3c9b22c938f7a2b91f03857a3fd6583623" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a microsecond.</source>
          <target state="translated">마이크로 초의 개념을 나타내는 단위입니다.</target>
        </trans-unit>
        <trans-unit id="76cc7298e519e3192d4a51c54374f480794c6751" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a microsecond. For the ISO calendar system, it is equal to the 1,000,000th part of the second unit.</source>
          <target state="translated">마이크로 초의 개념을 나타내는 단위입니다. ISO 캘린더 시스템의 경우 두 번째 단위의 1,000,000 번째 부분과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c0d393aed8554628083719b8f0b506cf171ee780" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a millennium.</source>
          <target state="translated">천년의 개념을 나타내는 단위.</target>
        </trans-unit>
        <trans-unit id="2cb2dcbedda16f48962f95f0ab811f7ca7cdc1b0" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a millennium. For the ISO calendar system, it is equal to 1000 years.</source>
          <target state="translated">밀레니엄의 개념을 나타내는 단위. ISO 캘린더 시스템의 경우 1000 년입니다.</target>
        </trans-unit>
        <trans-unit id="dd69896d80fd1d7891cb262ce84481c05790abf2" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a millisecond.</source>
          <target state="translated">밀리 초의 개념을 나타내는 단위입니다.</target>
        </trans-unit>
        <trans-unit id="0b222767e0678a279e41981a3a25b41bd33e8807" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a millisecond. For the ISO calendar system, it is equal to the 1000th part of the second unit.</source>
          <target state="translated">밀리 초의 개념을 나타내는 단위입니다. ISO 캘린더 시스템의 경우 두 번째 단위의 1000 번째 부분과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3bd7d7b39b54d8ca5e02e1edef2b67206e0b3c75" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a minute.</source>
          <target state="translated">분의 개념을 나타내는 단위입니다.</target>
        </trans-unit>
        <trans-unit id="e5c57d74b7967b443c541c9d347cc933cb52ecd2" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a minute. For the ISO calendar system, it is equal to 60 seconds.</source>
          <target state="translated">분의 개념을 나타내는 단위입니다. ISO 캘린더 시스템의 경우 60 초입니다.</target>
        </trans-unit>
        <trans-unit id="3486879e4b51b9e91506c48bd05d0d8bb3ab0689" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a month.</source>
          <target state="translated">한 달의 개념을 나타내는 단위입니다.</target>
        </trans-unit>
        <trans-unit id="aae2933dd6d0a216713c2b3265e20d5634df6f13" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a month. For the ISO calendar system, the length of the month varies by month-of-year. The estimated duration of a month is one twelfth of &lt;code&gt;365.2425 Days&lt;/code&gt;.</source>
          <target state="translated">한 달의 개념을 나타내는 단위입니다. ISO 캘린더 시스템의 경우, 달의 길이는 일년을 변화시킵니다. 한 달의 예상 지속 기간은 &lt;code&gt;365.2425 Days&lt;/code&gt; 12 분의 1입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="fab5e05b6c4631245802ef9b4671e37cd83b55c9" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a nanosecond, the smallest supported unit of time.</source>
          <target state="translated">지원되는 최소 시간 단위 인 나노초의 개념을 나타내는 단위입니다.</target>
        </trans-unit>
        <trans-unit id="10d277a288c3706e5c30644c076d8f49b2d75d31" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a nanosecond, the smallest supported unit of time. For the ISO calendar system, it is equal to the 1,000,000,000th part of the second unit.</source>
          <target state="translated">최소 지원 시간 단위 인 나노초의 개념을 나타내는 단위입니다. ISO 캘린더 시스템의 경우 두 번째 단위의 1,000,000,000 번째와 같습니다.</target>
        </trans-unit>
        <trans-unit id="261fc2f970204cef309c481f4c3f5e7302615e01" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a quarter-year.</source>
          <target state="translated">분기 개념을 나타내는 단위입니다.</target>
        </trans-unit>
        <trans-unit id="caaefa6443294a2914fef3533cc04cf6083d264b" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a quarter-year. For the ISO calendar system, it is equal to 3 months. The estimated duration of a quarter-year is one quarter of &lt;code&gt;365.2425 Days&lt;/code&gt;.</source>
          <target state="translated">1/4 년의 개념을 나타내는 단위입니다. ISO 캘린더 시스템의 경우 3 개월입니다. 1/4 년의 예상 지속 기간은 &lt;code&gt;365.2425 Days&lt;/code&gt; 1/4입니다 .</target>
        </trans-unit>
        <trans-unit id="30e6c9f6696bc33284a77cf98ff24d959798b8b8" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a second.</source>
          <target state="translated">초의 개념을 나타내는 단위입니다.</target>
        </trans-unit>
        <trans-unit id="e4fc2298392742d99b347fd01c8cca812f4bb0f3" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a second. For the ISO calendar system, it is equal to the second in the SI system of units, except around a leap-second.</source>
          <target state="translated">초의 개념을 나타내는 단위입니다. ISO 캘린더 시스템의 경우 약 초 단위를 제외하고 SI 단위 시스템의 초와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="ef27c01fa0619532b369b737ef3d3e54c169e066" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a week.</source>
          <target state="translated">한주의 개념을 나타내는 단위입니다.</target>
        </trans-unit>
        <trans-unit id="44055e4e12f6a7beb6afade94dfeaffef12b25ba" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a week. For the ISO calendar system, it is equal to 7 days.</source>
          <target state="translated">일주일의 개념을 나타내는 단위입니다. ISO 캘린더 시스템의 경우 7 일과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d5dcf02d7e38620303068f68fab6d0526456c36d" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a year.</source>
          <target state="translated">1 년의 개념을 나타내는 단위입니다.</target>
        </trans-unit>
        <trans-unit id="dc8981fb3925fefa46782dae431dfb58e2298153" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a year. For the ISO calendar system, it is equal to 12 months. The estimated duration of a year is &lt;code&gt;365.2425 Days&lt;/code&gt;.</source>
          <target state="translated">연도의 개념을 나타내는 단위입니다. ISO 캘린더 시스템의 경우 12 개월입니다. 연간 추정 된 기간은 &lt;code&gt;365.2425 Days&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f4eadc3dadbd460a043460b3107041b7aa0bc66d" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of an era.</source>
          <target state="translated">시대의 개념을 나타내는 단위.</target>
        </trans-unit>
        <trans-unit id="de69187eb1d3b4eea3cdbefda5cfb59885860c57" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of an era. The ISO calendar system doesn't have eras thus it is impossible to add an era to a date or date-time. The estimated duration of the era is artificially defined as &lt;code&gt;1,000,000,000 Years&lt;/code&gt;.</source>
          <target state="translated">시대의 개념을 나타내는 단위. ISO 캘린더 시스템에는 시대가 없으므로 날짜 또는 날짜-시간에 시대를 추가하는 것은 불가능합니다. 예상되는 기간은 인위적으로 &lt;code&gt;1,000,000,000 Years&lt;/code&gt; 으로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="c603c49713c8a9acb3ed9c095bea074513661234" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of an hour.</source>
          <target state="translated">한 시간의 개념을 나타내는 단위입니다.</target>
        </trans-unit>
        <trans-unit id="35791b835ccae9dcd3e221885df9649918983922" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of an hour. For the ISO calendar system, it is equal to 60 minutes.</source>
          <target state="translated">시간의 개념을 나타내는 단위입니다. ISO 캘린더 시스템의 경우 60 분입니다.</target>
        </trans-unit>
        <trans-unit id="305b5ec6c54b3d3b9ffd9296d2b0d54d75eb59eb" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of half a day, as used in AM/PM.</source>
          <target state="translated">오전 / 오후에 사용되는 반나절 개념을 나타내는 단위입니다.</target>
        </trans-unit>
        <trans-unit id="8e7dc2b57c647629ad3b2fb9b5d230b46dadcbe9" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of half a day, as used in AM/PM. For the ISO calendar system, it is equal to 12 hours.</source>
          <target state="translated">오전 / 오후에 사용 된 반나절의 개념을 나타내는 단위입니다. ISO 캘린더 시스템의 경우 12 시간입니다.</target>
        </trans-unit>
        <trans-unit id="9b92cd16f227b89b79f19e9a392fdaee24d87d84" translate="yes" xml:space="preserve">
          <source>Units of date-time, such as years, months, days and hours</source>
          <target state="translated">년, 월, 일 및 시간과 같은 날짜-시간 단위</target>
        </trans-unit>
        <trans-unit id="6d0576845720c0b1785626c136d2a4a4ca679c74" translate="yes" xml:space="preserve">
          <source>Unix lines mode can also be enabled via the embedded flag expression &lt;code&gt;(?d)&lt;/code&gt;.</source>
          <target state="translated">내장 된 플래그 표현식 &lt;code&gt;(?d)&lt;/code&gt; 통해 유닉스 라인 모드를 활성화 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4421071f358af3669c1359597f1958a36ab5fc0d" translate="yes" xml:space="preserve">
          <source>UnixLoginModule</source>
          <target state="translated">UnixLoginModule</target>
        </trans-unit>
        <trans-unit id="ce1dcb016aacac559d33e4fc06bae15660291a09" translate="yes" xml:space="preserve">
          <source>Unknown properties may be ignored or rejected with an unspecified error, and invalid entries may cause an unspecified error to be thrown.</source>
          <target state="translated">알 수없는 속성은 지정되지 않은 오류로 무시되거나 거부 될 수 있으며 잘못된 항목은 지정되지 않은 오류를 발생시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f7164f6f4f45e1d46b8983fa63a16225ada84f8" translate="yes" xml:space="preserve">
          <source>UnknownAnnotationValueException</source>
          <target state="translated">UnknownAnnotationValueException</target>
        </trans-unit>
        <trans-unit id="5ac9f69a437206d3932d5b32cb5f4f85e86d9820" translate="yes" xml:space="preserve">
          <source>UnknownAnnotationValueException.getArgument()</source>
          <target state="translated">UnknownAnnotationValueException.getArgument()</target>
        </trans-unit>
        <trans-unit id="fcf6113e11cec18fbc8430dc017992147a7e9c42" translate="yes" xml:space="preserve">
          <source>UnknownAnnotationValueException.getUnknownAnnotationValue()</source>
          <target state="translated">UnknownAnnotationValueException.getUnknownAnnotationValue()</target>
        </trans-unit>
        <trans-unit id="ada0685427d8cefba4556afc6e38fe13cea16c2c" translate="yes" xml:space="preserve">
          <source>UnknownDirectiveException</source>
          <target state="translated">UnknownDirectiveException</target>
        </trans-unit>
        <trans-unit id="a3b67977250cdfa6c993a3a26f92bc180e1a1e2e" translate="yes" xml:space="preserve">
          <source>UnknownElementException</source>
          <target state="translated">UnknownElementException</target>
        </trans-unit>
        <trans-unit id="ccbe3cde69c50bd8dad81b9601681d15f3e3d503" translate="yes" xml:space="preserve">
          <source>UnknownElementException.getArgument()</source>
          <target state="translated">UnknownElementException.getArgument()</target>
        </trans-unit>
        <trans-unit id="bcd01e5077d5ddfba17ecd307ccbdbcd273c5659" translate="yes" xml:space="preserve">
          <source>UnknownElementException.getUnknownElement()</source>
          <target state="translated">UnknownElementException.getUnknownElement()</target>
        </trans-unit>
        <trans-unit id="21e2422cc44d784b50a6a1c37ec779fb26fb449b" translate="yes" xml:space="preserve">
          <source>UnknownEntityException</source>
          <target state="translated">UnknownEntityException</target>
        </trans-unit>
        <trans-unit id="149ca90d6675fa5edf8f070374f5e53074792ac2" translate="yes" xml:space="preserve">
          <source>UnknownError</source>
          <target state="translated">UnknownError</target>
        </trans-unit>
        <trans-unit id="612b5d62b7a3a98d70cabb056ef7934e9315be42" translate="yes" xml:space="preserve">
          <source>UnknownFormatConversionException</source>
          <target state="translated">UnknownFormatConversionException</target>
        </trans-unit>
        <trans-unit id="1df6a07d1ea42c57c29578495eae5c55f4616857" translate="yes" xml:space="preserve">
          <source>UnknownFormatConversionException.getConversion()</source>
          <target state="translated">UnknownFormatConversionException.getConversion()</target>
        </trans-unit>
        <trans-unit id="190c79e0f12edfcf0f1628da8f89d20aa6d30c13" translate="yes" xml:space="preserve">
          <source>UnknownFormatConversionException.getMessage()</source>
          <target state="translated">UnknownFormatConversionException.getMessage()</target>
        </trans-unit>
        <trans-unit id="2941b908b349709787fa2ff2f86e8bc3390d2123" translate="yes" xml:space="preserve">
          <source>UnknownFormatFlagsException</source>
          <target state="translated">UnknownFormatFlagsException</target>
        </trans-unit>
        <trans-unit id="46f6286f4525762ee40e9fe2dc150006bb7008e9" translate="yes" xml:space="preserve">
          <source>UnknownFormatFlagsException.getFlags()</source>
          <target state="translated">UnknownFormatFlagsException.getFlags()</target>
        </trans-unit>
        <trans-unit id="07434e7dfdfa80d7d5a5c5966720d3a87f859b25" translate="yes" xml:space="preserve">
          <source>UnknownFormatFlagsException.getMessage()</source>
          <target state="translated">UnknownFormatFlagsException.getMessage()</target>
        </trans-unit>
        <trans-unit id="3ed26124f88ff9d9ea3b8da1c2ec3dbd071fa087" translate="yes" xml:space="preserve">
          <source>UnknownGroupException</source>
          <target state="translated">UnknownGroupException</target>
        </trans-unit>
        <trans-unit id="31e16174700d4708a0b027d1150a223776ccdda6" translate="yes" xml:space="preserve">
          <source>UnknownHostException</source>
          <target state="translated">UnknownHostException</target>
        </trans-unit>
        <trans-unit id="be4173559253d1fe0dafa265e2ca7685fadca93a" translate="yes" xml:space="preserve">
          <source>UnknownObjectException</source>
          <target state="translated">UnknownObjectException</target>
        </trans-unit>
        <trans-unit id="5fea50cbc26e1b02ec050895179d21e343b4cc6c" translate="yes" xml:space="preserve">
          <source>UnknownServiceException</source>
          <target state="translated">UnknownServiceException</target>
        </trans-unit>
        <trans-unit id="f358e2c02c498ea7a277cfcee1d22be23751baed" translate="yes" xml:space="preserve">
          <source>UnknownTag</source>
          <target state="translated">UnknownTag</target>
        </trans-unit>
        <trans-unit id="873797c1b0ee0748c1292bce602e830f46a75dcd" translate="yes" xml:space="preserve">
          <source>UnknownTypeException</source>
          <target state="translated">UnknownTypeException</target>
        </trans-unit>
        <trans-unit id="adf7c08e5eccbba57d462d622178fbd5ad578c06" translate="yes" xml:space="preserve">
          <source>UnknownTypeException.getArgument()</source>
          <target state="translated">UnknownTypeException.getArgument()</target>
        </trans-unit>
        <trans-unit id="796711a768f6656e1b96b4247b71f745cdaa13da" translate="yes" xml:space="preserve">
          <source>UnknownTypeException.getUnknownType()</source>
          <target state="translated">UnknownTypeException.getUnknownType()</target>
        </trans-unit>
        <trans-unit id="5deeb4b2a45b3ec70f76c1880781d3868d3fa573" translate="yes" xml:space="preserve">
          <source>Unless already closed, issues &lt;a href=&quot;flow.subscriber#onComplete()&quot;&gt;&lt;code&gt;onComplete&lt;/code&gt;&lt;/a&gt; signals to current subscribers, and disallows subsequent attempts to publish.</source>
          <target state="translated">이미 종료되지 않는 한 &lt;a href=&quot;flow.subscriber#onComplete()&quot;&gt; &lt;code&gt;onComplete&lt;/code&gt; &lt;/a&gt; 는 현재 구독자에게 신호를 보내고 후속 게시 시도를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d291cabd514be8f23c103bbeb45ff869e7ee6955" translate="yes" xml:space="preserve">
          <source>Unless already closed, issues &lt;a href=&quot;flow.subscriber#onComplete()&quot;&gt;&lt;code&gt;onComplete&lt;/code&gt;&lt;/a&gt; signals to current subscribers, and disallows subsequent attempts to publish. Upon return, this method does &lt;em&gt;NOT&lt;/em&gt; guarantee that all subscribers have yet completed.</source>
          <target state="translated">이미 종료되지 않는 한 &lt;a href=&quot;flow.subscriber#onComplete()&quot;&gt; &lt;code&gt;onComplete&lt;/code&gt; &lt;/a&gt; 는 현재 구독자에게 신호를 보내고 후속 게시 시도를 허용하지 않습니다. 반환시이 방법은 모든 구독자가 아직 완료되었음을 보장 하지 &lt;em&gt;않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f3f24930f72e5b8db91e7b56d871e820b9f69e6f" translate="yes" xml:space="preserve">
          <source>Unless already closed, issues &lt;a href=&quot;flow.subscriber#onError(java.lang.Throwable)&quot;&gt;&lt;code&gt;onError&lt;/code&gt;&lt;/a&gt; signals to current subscribers with the given error, and disallows subsequent attempts to publish.</source>
          <target state="translated">이미 닫히지 않는 한 &lt;a href=&quot;flow.subscriber#onError(java.lang.Throwable)&quot;&gt; &lt;code&gt;onError&lt;/code&gt; &lt;/a&gt; 는 현재 구독자에게 주어진 오류로 신호를 보내고 후속 게시 시도를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2d9c715e58129b64a9b4fb9526beba2034bec1b5" translate="yes" xml:space="preserve">
          <source>Unless already closed, issues &lt;a href=&quot;flow.subscriber#onError(java.lang.Throwable)&quot;&gt;&lt;code&gt;onError&lt;/code&gt;&lt;/a&gt; signals to current subscribers with the given error, and disallows subsequent attempts to publish. Future subscribers also receive the given error. Upon return, this method does &lt;em&gt;NOT&lt;/em&gt; guarantee that all subscribers have yet completed.</source>
          <target state="translated">이미 닫히지 않는 한 &lt;a href=&quot;flow.subscriber#onError(java.lang.Throwable)&quot;&gt; &lt;code&gt;onError&lt;/code&gt; &lt;/a&gt; 는 현재 구독자에게 주어진 오류로 신호를 보내고 후속 게시 시도를 허용하지 않습니다. 향후 구독자도 주어진 오류를 수신합니다. 반환시이 방법은 모든 구독자가 아직 완료되었음을 보장 하지 &lt;em&gt;않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="191895e9cf7803718b3f7fa13f3a7b768e363fa9" translate="yes" xml:space="preserve">
          <source>Unless explicitly allowed, all methods in this interface might throw a NullPointerException if given a &lt;code&gt;null&lt;/code&gt; argument.</source>
          <target state="translated">명시 적으로 허용되지 않는 한,이 인터페이스의 모든 메소드는 &lt;code&gt;null&lt;/code&gt; 을 지정하면 NullPointerException을 발생시킬 수 있습니다. 인수 .</target>
        </trans-unit>
        <trans-unit id="8448601ec9e1297bd5c8353eb6f2816ef9218535" translate="yes" xml:space="preserve">
          <source>Unless explicitly allowed, all methods in this package might throw a &lt;a href=&quot;../../../java.base/java/lang/nullpointerexception&quot;&gt;NullPointerException&lt;/a&gt; if given a &lt;code&gt;null&lt;/code&gt; argument or if given a &lt;a href=&quot;../../../java.base/java/lang/iterable&quot;&gt;list or collection&lt;/a&gt; containing &lt;code&gt;null&lt;/code&gt; elements. Similarly, no method may return &lt;code&gt;null&lt;/code&gt; unless explicitly allowed.</source>
          <target state="translated">명시 적으로 허용되지 않는 한,이 패키지의 모든 메서드 는 &lt;code&gt;null&lt;/code&gt; 인수가 제공 &lt;a href=&quot;../../../java.base/java/lang/iterable&quot;&gt;되거나 &lt;/a&gt; &lt;code&gt;null&lt;/code&gt; 요소를 포함 하는 목록 또는 컬렉션이 제공되면 &lt;a href=&quot;../../../java.base/java/lang/nullpointerexception&quot;&gt;NullPointerException을&lt;/a&gt; throw 할 수 있습니다 . 마찬가지로 명시 적으로 허용되지 않는 한 어떤 메서드도 &lt;code&gt;null&lt;/code&gt; 을 반환 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="4e4ed9fec0d3c36d524624667d67b1bd1013fcda" translate="yes" xml:space="preserve">
          <source>Unless explicitly allowed, all methods in this package might throw a &lt;a href=&quot;../../java/lang/nullpointerexception&quot;&gt;NullPointerException&lt;/a&gt; if given a &lt;code&gt;null&lt;/code&gt; argument or if given a &lt;a href=&quot;../../java/lang/iterable&quot;&gt;list or collection&lt;/a&gt; containing &lt;code&gt;null&lt;/code&gt; elements. Similarly, no method may return &lt;code&gt;null&lt;/code&gt; unless explicitly allowed.</source>
          <target state="translated">명시 적으로 허용되지 않는 한,이 패키지의 모든 메소드 는 &lt;code&gt;null&lt;/code&gt; 인수가 제공 &lt;a href=&quot;../../java/lang/iterable&quot;&gt;되거나 &lt;/a&gt; &lt;code&gt;null&lt;/code&gt; 요소를 포함 하는 목록 또는 콜렉션이 제공된 경우 &lt;a href=&quot;../../java/lang/nullpointerexception&quot;&gt;NullPointerException을&lt;/a&gt; 발생 시킬 수 있습니다 . 마찬가지로 명시 적으로 허용되지 않는 한 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="44340e5ff570ab90b36f8f516b7dd1f4d2b88b2d" translate="yes" xml:space="preserve">
          <source>Unless explicitly chosen by way of &lt;code&gt;setDropAction&lt;/code&gt;, this returns the user drop action provided by &lt;code&gt;getUserDropAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setDropAction&lt;/code&gt; 을 통해 명시 적으로 선택하지 않는 한 &lt;code&gt;getUserDropAction&lt;/code&gt; 에서 제공하는 사용자 삭제 작업을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bbbabcfe44237242d52f345fb9c30c21cde2d7aa" translate="yes" xml:space="preserve">
          <source>Unless explicitly qualified, the term &quot;request controls&quot; refers to context request controls.</source>
          <target state="translated">명시 적으로 규정되지 않은 경우 &quot;요청 제어&quot;라는 용어는 컨텍스트 요청 제어를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2a1c1bc18fb07e2defbf56430d05d5e3a56ba193" translate="yes" xml:space="preserve">
          <source>Unless explicitly stated, null values or empty Strings are not valid parameters for the methods in this package. You may expect to see exceptions if these parameters are used.</source>
          <target state="translated">명시 적으로 언급되지 않는 한 null 값 또는 빈 문자열은이 패키지의 메소드에 유효한 매개 변수가 아닙니다. 이러한 매개 변수를 사용하면 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9568542a81bfe0790866590c77394e1f3cb2977" translate="yes" xml:space="preserve">
          <source>Unless otherwise mentioned, passing a &lt;code&gt;null&lt;/code&gt; parameter into any method of a &lt;code&gt;Scanner&lt;/code&gt; will cause a &lt;code&gt;NullPointerException&lt;/code&gt; to be thrown.</source>
          <target state="translated">달리 언급되지 않는 한, &lt;code&gt;null&lt;/code&gt; 매개 변수를 &lt;code&gt;Scanner&lt;/code&gt; 의 모든 메서드에 전달 하면 &lt;code&gt;NullPointerException&lt;/code&gt; 이 발생합니다. 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="78709c7df6da949cdf1d000c975e6cb8a90e37ee" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, invoking a method of any class or interface in this package created by one &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; with a parameter that is an object created by another provider, will throw &lt;a href=&quot;providermismatchexception&quot;&gt;&lt;code&gt;ProviderMismatchException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">달리 언급하지 않는 한, 한 &lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt; 가 만든 다른 패키지 또는 클래스의 인터페이스를 다른 공급자가 만든 개체 인 매개 변수로 호출하면 &lt;a href=&quot;providermismatchexception&quot;&gt; &lt;code&gt;ProviderMismatchException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="6628c44876b9e552410351b321fdba838b52393a" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, methods for comparing Strings do not take locale into account. The &lt;a href=&quot;../text/collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; class provides methods for finer-grain, locale-sensitive String comparison.</source>
          <target state="translated">달리 명시되지 않는 한, 문자열 비교 메소드는 로케일을 고려하지 않습니다. &lt;a href=&quot;../text/collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; 클래스는 미세한 곡물, 로케일에 의존하는 문자열 비교하는 방법을 제공한다.</target>
        </trans-unit>
        <trans-unit id="69967b69c0a1a20224bb5a1418ab7c5290c52d2a" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, methods that attempt to access the file system will throw &lt;a href=&quot;closedfilesystemexception&quot;&gt;&lt;code&gt;ClosedFileSystemException&lt;/code&gt;&lt;/a&gt; when invoked on objects associated with a &lt;a href=&quot;filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that has been &lt;a href=&quot;filesystem#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;. Additionally, any methods that attempt write access to a file system will throw &lt;a href=&quot;readonlyfilesystemexception&quot;&gt;&lt;code&gt;ReadOnlyFileSystemException&lt;/code&gt;&lt;/a&gt; when invoked on an object associated with a &lt;a href=&quot;filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that only provides read-only access.</source>
          <target state="translated">별도의 언급이없는 한, 파일 시스템에 액세스를 시도하는 메소드 는 &lt;a href=&quot;filesystem#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt; 과 연관된 객체에서 호출 될 때 &lt;a href=&quot;closedfilesystemexception&quot;&gt; &lt;code&gt;ClosedFileSystemException&lt;/code&gt; &lt;/a&gt; 을 발생시킵니다 . 또한 파일 시스템에 대한 쓰기 액세스를 시도하는 모든 메서드 는 읽기 전용 액세스 만 제공 하는 &lt;a href=&quot;filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt; 과 연결된 개체에서 호출 될 때 &lt;a href=&quot;readonlyfilesystemexception&quot;&gt; &lt;code&gt;ReadOnlyFileSystemException&lt;/code&gt; &lt;/a&gt; 을 throw 합니다.</target>
        </trans-unit>
        <trans-unit id="575e42d898d9f55e332136f6413aa0ba13ab019f" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, methods that attempt to access the file system will throw &lt;a href=&quot;closedfilesystemexception&quot;&gt;&lt;code&gt;ClosedFileSystemException&lt;/code&gt;&lt;/a&gt; when invoked on objects associated with a &lt;a href=&quot;filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that has been &lt;a href=&quot;filesystem#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;. Additionally, any methods that attempt write access to a file system will throw &lt;a href=&quot;readonlyfilesystemexception&quot;&gt;&lt;code&gt;ReadOnlyFileSystemException&lt;/code&gt;&lt;/a&gt; when invoked on an object associated with a &lt;a href=&quot;filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that only provides read-only access.</source>
          <target state="translated">달리 언급되지 않는 한, 파일 시스템에 액세스하려고 시도하는 메소드 는 &lt;a href=&quot;filesystem#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt; 과 연관된 오브젝트에서 호출 될 때 &lt;a href=&quot;closedfilesystemexception&quot;&gt; &lt;code&gt;ClosedFileSystemException&lt;/code&gt; &lt;/a&gt; 을 발생시킵니다 . 또한 파일 시스템에 대한 쓰기 액세스를 시도하는 모든 메소드 는 &lt;a href=&quot;filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt; 과 연관된 오브젝트에서 호출 될 때 &lt;a href=&quot;readonlyfilesystemexception&quot;&gt; &lt;code&gt;ReadOnlyFileSystemException&lt;/code&gt; &lt;/a&gt; 을 발생시킵니다. 는 읽기 전용 액세스 만 제공 .</target>
        </trans-unit>
        <trans-unit id="1dd1e9fa973efcd4267ad423951e4eea08c92eb3" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../../../../java.base/java/lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 명시되지 않는 한, 이 패키지의 모든 클래스 또는 인터페이스의 생성자 또는 메서드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../../../../java.base/java/lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="ba4a60eee36e8f2e7e69b165fb211c08a29ffaa3" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 명시되지 않는 한, 이 패키지의 클래스 또는 인터페이스에서 생성자 또는 메소드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2f28cfcd296be66cf8e454f1da31b3a375a596a3" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 명시되지 않는 한, 이 패키지의 클래스 또는 인터페이스에서 생성자 또는 메소드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="41fa6596c5425481131a295cd4cbf472eafb631a" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 명시되지 않는 한, 이 패키지의 클래스 또는 인터페이스에서 생성자 또는 메소드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3fc07ccda188c601bd06fa95e43277f3ffe17507" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 명시되지 않는 한, 이 패키지의 클래스 또는 인터페이스에서 생성자 또는 메소드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="14d895ea74ae4924de07df44b84152dd597fc716" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in this &lt;code&gt;StackWalker&lt;/code&gt; class will cause a &lt;a href=&quot;nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 명시되지 않는 한, 이 &lt;code&gt;StackWalker&lt;/code&gt; 클래스 의 생성자 또는 메서드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="519217a6ec54d7d7ddf908deb133eddba7a29b2c" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in this class will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 언급되지 않는 한, 이 클래스의 생성자 또는 메소드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="148943c4bf85ff86b9df78f30a4f5ae82fb4254a" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in this class will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown. If the verify flag is on when opening a signed jar file, the content of the file is verified against its signature embedded inside the file. Please note that the verification process does not include validating the signer's certificate. A caller should inspect the return value of &lt;a href=&quot;jarentry#getCodeSigners--&quot;&gt;&lt;code&gt;JarEntry.getCodeSigners()&lt;/code&gt;&lt;/a&gt; to further determine if the signature can be trusted.</source>
          <target state="translated">달리 언급되지 않는 한, 이 클래스의 생성자 또는 메소드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 서명 된 jar 파일을 열 때 verify 플래그가 켜져 있으면 파일 내용이 파일에 포함 된 서명과 비교하여 확인됩니다. 확인 과정에는 서명자의 인증서 확인이 포함되지 않습니다. 호출자는 서명을 신뢰할 수 있는지 여부를 추가로 판별하기 위해 &lt;a href=&quot;jarentry#getCodeSigners--&quot;&gt; &lt;code&gt;JarEntry.getCodeSigners()&lt;/code&gt; &lt;/a&gt; 의 리턴 값을 검사해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c88c785b1136b1c47840968751153d7b76990007" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in this class will cause a &lt;a href=&quot;../nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 명시되지 않는 한, 이 클래스의 생성자 또는 메서드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="da6e36f8047ec489c168eb5c0df5fc37cf73b7de" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in this class will cause a &lt;a href=&quot;nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 언급되지 않는 한, 이 클래스의 생성자 또는 메소드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d03c9f155b5b86733c35fc9ddab778b085ad290a" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method of any class or interface in this package will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown. Additionally, invoking a method with a collection containing a &lt;code&gt;null&lt;/code&gt; element will cause a &lt;code&gt;NullPointerException&lt;/code&gt;, unless otherwise specified.</source>
          <target state="translated">달리 언급되지 않는 한, 이 패키지에있는 클래스 또는 인터페이스의 생성자 또는 메소드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 또한 &lt;code&gt;null&lt;/code&gt; 요소를 포함하는 컬렉션으로 메서드를 호출 하면 &lt;code&gt;NullPointerException&lt;/code&gt; 이 발생합니다. 달리 지정되지 않는 합니다.</target>
        </trans-unit>
        <trans-unit id="7b424edefc1c57bcd32d64e2e88b94b2a03e7b5e" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method of any class or interface in this package will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown. Additionally, invoking a method with an array or collection containing a &lt;code&gt;null&lt;/code&gt; element will cause a &lt;code&gt;NullPointerException&lt;/code&gt;, unless otherwise specified.</source>
          <target state="translated">달리 명시되지 않는 한, 이 패키지에있는 클래스 또는 인터페이스의 생성자 또는 메서드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다. 추가로, &lt;code&gt;null&lt;/code&gt; 요소를 포함하는 배열 또는 컬렉션으로 메서드를 호출하면 별도로 지정하지 않는 한 &lt;code&gt;NullPointerException&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="72949b3f1d53e730b9c382ddccad48b6c6472a44" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method of any class or interface in this package will cause a &lt;a href=&quot;../nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown. Additionally, invoking a method with an array or collection containing a &lt;code&gt;null&lt;/code&gt; element will cause a &lt;code&gt;NullPointerException&lt;/code&gt;, unless otherwise specified.</source>
          <target state="translated">달리 명시되지 않는 한, 이 패키지에있는 클래스 또는 인터페이스의 생성자 또는 메서드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다. 추가로, &lt;code&gt;null&lt;/code&gt; 요소를 포함하는 배열 또는 컬렉션으로 메서드를 호출하면 별도로 지정하지 않는 한 &lt;code&gt;NullPointerException&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="2dd2f3c2e26b46755d44de7cd577a89aa135ee80" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a method in any class or interface in this package will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 언급되지 않는 한, 이 패키지의 클래스 또는 인터페이스에서 메소드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dca25f343643e7376e0bc148bd3f2de6f3ce0838" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a method in this interface and its nested classes will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 명시되지 않는 한, 이 인터페이스 및 중첩 된 클래스의 메서드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="1011613b3cdcfe5ce173a1cfe95d5c657a0b987b" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a method of this class will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 언급되지 않는 한, 이 클래스의 메소드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5897d3035eb14e2aed131d3c8174a4a2265523c0" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a null argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown. The Javadoc &quot;@param&quot; definition is used to summarise the null-behavior. The &quot;@throws &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;&quot; is not explicitly documented in each method.</source>
          <target state="translated">달리 명시되지 않는 한,이 패키지의 클래스 또는 인터페이스에서 생성자 또는 메소드에 널 인수를 전달하면 &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. Javadoc &quot;@param&quot;정의는 널 동작을 요약하는 데 사용됩니다. &quot;@throws &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; &quot;은 각 메소드에 명시 적으로 문서화되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9e472fbca8edbfea94fc80e5a070253d0e1e683c" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a null argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown. The Javadoc &quot;@param&quot; definition is used to summarise the null-behavior. The &quot;@throws &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;&quot; is not explicitly documented in each method.</source>
          <target state="translated">달리 명시되지 않는 한,이 패키지의 클래스 또는 인터페이스에서 생성자 또는 메소드에 널 인수를 전달하면 &lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. Javadoc &quot;@param&quot;정의는 널 동작을 요약하는 데 사용됩니다. &quot;@throws &lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; &quot;은 각 메소드에 명시 적으로 문서화되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8fe81e7ab924f3ac43352a725cb65cdea0ebf3f5" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a null argument to a constructor or method in any class or interface in this package will cause a &lt;code&gt;NullPointerException&lt;/code&gt; to be thrown.</source>
          <target state="translated">달리 명시되지 않는 한,이 패키지의 모든 클래스 또는 인터페이스의 생성자 또는 메서드에 null 인수를 전달하면 &lt;code&gt;NullPointerException&lt;/code&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="0c4a3636419682b1e8bf8c359ce1aaae4320191f" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a null parameter to any of the methods in a &lt;code&gt;BitSet&lt;/code&gt; will result in a &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">달리 언급되지 않는 한, null 매개 변수를 &lt;code&gt;BitSet&lt;/code&gt; 의 모든 메서드에 전달 하면 &lt;code&gt;NullPointerException&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="c633aef659f1a04ad0d51e61779ab52d9f4a2b68" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, the behavior of passing a null argument to a constructor or method in this class will cause NullPointerException to be thrown.</source>
          <target state="translated">달리 언급되지 않는 한,이 클래스의 생성자 또는 메소드에 널 인수를 전달하면 NullPointerException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8b9fb49c5e8ea108da4cccfa5d0e6fabb7af023f" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, the behavior of passing a null argument to a constructor or method in this class will cause a NullPointerException to be thrown.</source>
          <target state="translated">달리 언급되지 않는 한,이 클래스의 생성자 또는 메소드에 널 인수를 전달하면 NullPointerException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="84bb8fc9941e11c057f596535e9b74d8c43ff252" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified all the methods of &lt;code&gt;Group&lt;/code&gt; and its subclasses that allow you to specify a range throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if passed an invalid range. An invalid range is one in which any of the values are &amp;lt; 0 and not one of &lt;code&gt;PREFERRED_SIZE&lt;/code&gt; or &lt;code&gt;DEFAULT_SIZE&lt;/code&gt;, or the following is not met (for specific values): &lt;code&gt;min&lt;/code&gt; &amp;lt;= &lt;code&gt;pref&lt;/code&gt; &amp;lt;= &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">범위를 지정할 수있는 &lt;code&gt;Group&lt;/code&gt; 및 하위 클래스 의 모든 메소드를 달리 지정하지 않는 한 유효하지 않은 범위를 전달하면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생합니다. 유효하지 않은 범위는 값 중 하나라도 &amp;lt;0이고 &lt;code&gt;PREFERRED_SIZE&lt;/code&gt; 또는 &lt;code&gt;DEFAULT_SIZE&lt;/code&gt; 중 하나 가 아니거나 다음이 충족되지 않는 범위입니다 (특정 값의 경우) : &lt;code&gt;min&lt;/code&gt; &amp;lt;= &lt;code&gt;pref&lt;/code&gt; &amp;lt;= &lt;code&gt;max&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2cad149fe28c03dd42ad8a1db9886016e259c82e" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified in a particular implementation, the collections returned by methods in this package should be expected to be unmodifiable by the caller and unsafe for concurrent access.</source>
          <target state="translated">특정 구현에서 달리 지정하지 않는 한,이 패키지의 메소드가 리턴 한 콜렉션은 호출자가 수정할 수 없으며 동시 액세스에 대해 안전하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="20dd66f8413c97e99c8726ae213c16b44500cfd6" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified null is not a legal value to any of the methods defined in the synth package and if passed in will result in a &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">달리 지정하지 않는 한 null은 synth 패키지에 정의 된 메서드에 대한 유효한 값이 아니며 전달되면 &lt;code&gt;NullPointerException&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="96310fc9af4ef35b4abe8844b92d70aa17af1438" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, a write operation will return only after writing all of the</source>
          <target state="translated">달리 지정하지 않으면 쓰기 작업은 모든 쓰기 작업을 수행 한 후에 만 ​​반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f29a5be5730826396efc89042e91d41df99ac386" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, methods in this package will throw a &lt;code&gt;NullPointerException&lt;/code&gt; if given a &lt;code&gt;null&lt;/code&gt; argument.</source>
          <target state="translated">달리 지정하지 않는 한,이 패키지의 메소드 는 &lt;code&gt;null&lt;/code&gt; 가 지정되면 &lt;code&gt;NullPointerException&lt;/code&gt; 을 Throw합니다 인수 .</target>
        </trans-unit>
        <trans-unit id="3b3719c8aec887fc7542473af9c30f0e401d14f5" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, passing a &lt;code&gt;null&lt;/code&gt; argument to a method in this class causes a &lt;a href=&quot;nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 지정하지 않는 한, 이 클래스의 메서드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="86ee7f20bb531477c062e281908d7a13826f2d70" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, passing a &lt;code&gt;null&lt;/code&gt; argument to any method in this class will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 지정하지 않으면 이 클래스의 모든 메소드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b4f38a129f007381ecfb87c2b09a592beea0d4cd" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, passing a &lt;code&gt;null&lt;/code&gt; argument to any method in this interface will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 지정하지 않으면 이 인터페이스의 모든 메소드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e7a1569f2ba17f0d68ed6ede84cbaefb83766fda" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, passing a &lt;code&gt;null&lt;/code&gt; argument to any method or constructor in this class will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">달리 지정하지 않는 한, 이 클래스의 메소드 또는 생성자에 &lt;code&gt;null&lt;/code&gt; 인수를 전달 하면 &lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="18e8d60f6f6191b5d343d951ccddd3275d6d82b4" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.</source>
          <target state="translated">달리 지정하지 않으면이 클래스에 정의 된 메소드는 스레드로부터 안전하지 않습니다. 단일 객체에 동시에 액세스해야하는 여러 스레드는 서로 동기화하고 필요한 잠금을 제공해야합니다. 각각 별도의 객체를 조작하는 여러 스레드는 동기화 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="13ae8e09057b0719f91a07fb227d5641e1151757" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, the methods defined in this interface are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.</source>
          <target state="translated">달리 지정하지 않으면이 인터페이스에 정의 된 메소드는 스레드로부터 안전하지 않습니다. 단일 객체에 동시에 액세스해야하는 여러 스레드는 서로 동기화하고 필요한 잠금을 제공해야합니다. 각각 별도의 객체를 조작하는 여러 스레드는 동기화 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a2d3a3fe204fe7ca03b46b010044acd9ec0ab4d8" translate="yes" xml:space="preserve">
          <source>Unless otherwise stated, &lt;code&gt;null&lt;/code&gt; arguments will cause methods of &lt;code&gt;WebSocket&lt;/code&gt; to throw &lt;code&gt;NullPointerException&lt;/code&gt;, similarly, &lt;code&gt;WebSocket&lt;/code&gt; will not pass &lt;code&gt;null&lt;/code&gt; arguments to methods of &lt;code&gt;Listener&lt;/code&gt;. The state of a WebSocket is not changed by the invocations that throw or return a &lt;code&gt;CompletableFuture&lt;/code&gt; that completes with one of the &lt;code&gt;NullPointerException&lt;/code&gt;, &lt;code&gt;IllegalArgumentException&lt;/code&gt;, &lt;code&gt;IllegalStateException&lt;/code&gt; exceptions.</source>
          <target state="translated">달리 명시되지 않는 한, &lt;code&gt;null&lt;/code&gt; 인수는 &lt;code&gt;WebSocket&lt;/code&gt; 메서드가 &lt;code&gt;NullPointerException&lt;/code&gt; 을 throw하도록합니다 . 마찬가지로 &lt;code&gt;WebSocket&lt;/code&gt; 은 &lt;code&gt;Listener&lt;/code&gt; 메서드에 &lt;code&gt;null&lt;/code&gt; 인수를 전달하지 않습니다 . WebSocket의 상태는 &lt;code&gt;NullPointerException&lt;/code&gt; , &lt;code&gt;IllegalArgumentException&lt;/code&gt; , &lt;code&gt;IllegalStateException&lt;/code&gt; 예외 중 하나로 완료 되는 &lt;code&gt;CompletableFuture&lt;/code&gt; 를 던지거나 반환하는 호출에 의해 변경되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8220d5a7213e31a535128408ae6616099d0e19d2" translate="yes" xml:space="preserve">
          <source>Unless otherwise stated, &lt;code&gt;null&lt;/code&gt; parameter values will cause methods of all classes in this package to throw &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">달리 명시되지 않는 한, &lt;code&gt;null&lt;/code&gt; 매개 변수 값은이 패키지에있는 모든 클래스의 메서드가 &lt;code&gt;NullPointerException&lt;/code&gt; 을 throw하도록 합니다.</target>
        </trans-unit>
        <trans-unit id="15c7cd2a1dd2ad153d9327d382cca881a4871cc6" translate="yes" xml:space="preserve">
          <source>Unless overridden by a subclass, a new non-minimal CompletableFuture with all methods available can be obtained from a minimal CompletionStage via &lt;a href=&quot;#toCompletableFuture()&quot;&gt;&lt;code&gt;toCompletableFuture()&lt;/code&gt;&lt;/a&gt;. For example, completion of a minimal stage can be awaited by</source>
          <target state="translated">서브 클래스에 의해 재정의되지 않는 한, 사용 가능한 모든 메서드가있는 새로운 비 최소 CompletableFuture는 &lt;a href=&quot;#toCompletableFuture()&quot;&gt; &lt;code&gt;toCompletableFuture()&lt;/code&gt; &lt;/a&gt; 를 통해 최소 CompletionStage에서 얻을 수 있습니다 . 예를 들어, 최소 단계의 완료는 다음과 같이 기다릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="319eccd3d80767b4a14043234f4a5487bd57fab7" translate="yes" xml:space="preserve">
          <source>Unless overridden, this method re-throws the I/O exception that prevented the file from being visited.</source>
          <target state="translated">재정의되지 않는 한이 방법은 파일 방문을 방해하는 I / O 예외를 다시 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="c50b0d2bd56992ce85a536c2dc0e2245e45ed5e3" translate="yes" xml:space="preserve">
          <source>Unless overridden, this method returns &lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt;&lt;code&gt;CONTINUE&lt;/code&gt;&lt;/a&gt; if the directory iteration completes without an I/O exception; otherwise this method re-throws the I/O exception that caused the iteration of the directory to terminate prematurely.</source>
          <target state="translated">재정의되지 않는 한이 메소드는 디렉토리 반복이 I / O 예외없이 완료되면 &lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt; &lt;code&gt;CONTINUE&lt;/code&gt; 를&lt;/a&gt; 리턴합니다 . 그렇지 않으면이 메소드는 디렉토리 반복이 조기에 종료되게하는 I / O 예외를 다시 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="ca43281015c19de71d3001f16859b15bc9ddf4e8" translate="yes" xml:space="preserve">
          <source>Unless overridden, this method returns &lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt;&lt;code&gt;CONTINUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">재정의되지 않은 경우이 메서드는 &lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt; &lt;code&gt;CONTINUE&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2cd9db738aff9d008927bf89611b3da75a65933c" translate="yes" xml:space="preserve">
          <source>Unless overridden, this method synchronizes on the result of &lt;a href=&quot;#getClassLoadingLock(java.lang.String)&quot;&gt;&lt;code&gt;getClassLoadingLock&lt;/code&gt;&lt;/a&gt; method during the entire class loading process.</source>
          <target state="translated">재정의되지 않는 한이 메서드 는 전체 클래스로드 프로세스 동안 &lt;a href=&quot;#getClassLoadingLock(java.lang.String)&quot;&gt; &lt;code&gt;getClassLoadingLock&lt;/code&gt; &lt;/a&gt; 메서드 의 결과를 동기화 합니다.</target>
        </trans-unit>
        <trans-unit id="3fd1f7c65dcf34e673be16c699867c7f3461f8dd" translate="yes" xml:space="preserve">
          <source>Unless overridden, this method synchronizes on the result of &lt;a href=&quot;classloader#getClassLoadingLock-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;getClassLoadingLock&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method during the entire class loading process.</source>
          <target state="translated">재정의되지 않는 한,이 메소드는 &lt;a href=&quot;classloader#getClassLoadingLock-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;getClassLoadingLock&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 결과에서 동기화합니다 는 전체 클래스로드 프로세스 동안 메서드 합니다.</target>
        </trans-unit>
        <trans-unit id="8a7d5ba60e9194bd890bd397fb966d39cdb21dde" translate="yes" xml:space="preserve">
          <source>Unless the &lt;code&gt;CompletableFuture&lt;/code&gt; returned from this method completes with &lt;code&gt;IllegalArgumentException&lt;/code&gt;, or the method throws &lt;code&gt;NullPointerException&lt;/code&gt;, the output will be closed.</source>
          <target state="translated">이 메서드에서 반환 된 &lt;code&gt;CompletableFuture&lt;/code&gt; 가 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 으로 완료 되거나 메서드가 &lt;code&gt;NullPointerException&lt;/code&gt; 을 throw 하지 않는 한 출력은 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="0cd09e3323c38312ba7ef10823f22e7d181a1f60" translate="yes" xml:space="preserve">
          <source>Unless the attribute &lt;em&gt;type&lt;/em&gt; is CDATA, this attribute is marked as being declared in the DTD. To set that flag's value to true for CDATA attributes, use &lt;a href=&quot;#setDeclared(int,boolean)&quot;&gt;&lt;code&gt;setDeclared(int, boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">속성 &lt;em&gt;유형&lt;/em&gt; 이 CDATA가 아니면 이 속성은 DTD에서 선언 된 것으로 표시됩니다. CDATA 속성에 대해 해당 플래그의 값을 true로 설정하려면 &lt;a href=&quot;#setDeclared(int,boolean)&quot;&gt; &lt;code&gt;setDeclared(int, boolean)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="83062aeca2993e08d0a24454548e18a5335c56df" translate="yes" xml:space="preserve">
          <source>Unless the current thread is interrupting itself, which is always permitted, the &lt;a href=&quot;#checkAccess()&quot;&gt;&lt;code&gt;checkAccess&lt;/code&gt;&lt;/a&gt; method of this thread is invoked, which may cause a &lt;a href=&quot;securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">현재 스레드가 자신을 인터럽트하지 않는 한 (항상 허용됨) 이 스레드 의 &lt;a href=&quot;#checkAccess()&quot;&gt; &lt;code&gt;checkAccess&lt;/code&gt; &lt;/a&gt; 메서드가 호출되어 &lt;a href=&quot;securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt; 이 throw 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="584d1058692777c9f126d29d03cd80e6e7d0aade" translate="yes" xml:space="preserve">
          <source>Unless the current thread is interrupting itself, which is always permitted, the &lt;a href=&quot;thread#checkAccess--&quot;&gt;&lt;code&gt;checkAccess&lt;/code&gt;&lt;/a&gt; method of this thread is invoked, which may cause a &lt;a href=&quot;securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">항상 허용되는 현재 스레드 자체가 중단되지 않는 한이 스레드 의 &lt;a href=&quot;thread#checkAccess--&quot;&gt; &lt;code&gt;checkAccess&lt;/code&gt; &lt;/a&gt; 메소드가 호출되어 &lt;a href=&quot;securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt; 이 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a16f7c973ffd2f08d07a123732165027a06ae15" translate="yes" xml:space="preserve">
          <source>Unless this Spliterator covers an infinite number of elements, repeated calls to &lt;code&gt;trySplit()&lt;/code&gt; must eventually return &lt;code&gt;null&lt;/code&gt;. Upon non-null return:</source>
          <target state="translated">이 Spliterator가 무한한 수의 요소를 다루지 않는 한 &lt;code&gt;trySplit()&lt;/code&gt; 반복 된 호출 은 결국 &lt;code&gt;null&lt;/code&gt; 을 반환해야합니다 . 널이 아닌 리턴시 :</target>
        </trans-unit>
        <trans-unit id="cf18a9ab8a383692ef5813f71f0d3ac1364cde3e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#allSoundOff()&quot;&gt;&lt;code&gt;allSoundOff()&lt;/code&gt;&lt;/a&gt;, this method applies to only a specific channel, not to all channels. Further, it silences not only currently sounding notes, but also subsequently received notes.</source>
          <target state="translated">&lt;a href=&quot;#allSoundOff()&quot;&gt; &lt;code&gt;allSoundOff()&lt;/code&gt; &lt;/a&gt; 와 달리이 메서드는 모든 채널이 아닌 특정 채널에만 적용됩니다. 또한 현재 들리는 음을 음소거 할뿐만 아니라 이후에 수신 된 음을 묵음 처리합니다.</target>
        </trans-unit>
        <trans-unit id="b377755a55fc30d0ea53c06b4e69ff0628fa65d9" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#getSession()&quot;&gt;&lt;code&gt;getSession()&lt;/code&gt;&lt;/a&gt;, this method does not initiate the initial handshake and does not block until handshaking is complete.</source>
          <target state="translated">&lt;a href=&quot;#getSession()&quot;&gt; &lt;code&gt;getSession()&lt;/code&gt; &lt;/a&gt; 과 달리이 메서드는 초기 핸드 셰이크를 시작하지 않으며 핸드 셰이크가 완료 될 때까지 차단하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e49d6050e2efc5a1bda3a9abfdc887681aa540ed" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#setNeedClientAuth(boolean)&quot;&gt;&lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if the accepted socket's option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;#setNeedClientAuth(boolean)&quot;&gt; &lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt; &lt;/a&gt; 과 달리 , 수락 된 소켓의 옵션이 설정되고 클라이언트가 자신에 대한 인증 정보를 제공하지 않기로 선택하면</target>
        </trans-unit>
        <trans-unit id="d5744e79e937fce3557f81ba65388facf117c9d7" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#setNeedClientAuth(boolean)&quot;&gt;&lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if this option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;#setNeedClientAuth(boolean)&quot;&gt; &lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt; &lt;/a&gt; 과 달리이 옵션이 설정되고 클라이언트가 자신에 대한 인증 정보를 제공하지 않기로 선택하면</target>
        </trans-unit>
        <trans-unit id="08ca4dacd646f48f5a386efc3b209670e95b9864" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#setWantClientAuth(boolean)&quot;&gt;&lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if the accepted socket's option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;#setWantClientAuth(boolean)&quot;&gt; &lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt; &lt;/a&gt; 과 달리 , 수락 된 소켓의 옵션이 설정되고 클라이언트가 자신에 대한 인증 정보를 제공하지 않기로 선택하면</target>
        </trans-unit>
        <trans-unit id="0946025864eb61536a3831b462e636701b9bb724" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#setWantClientAuth(boolean)&quot;&gt;&lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if this option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;#setWantClientAuth(boolean)&quot;&gt; &lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt; &lt;/a&gt; 과 달리이 옵션이 설정되고 클라이언트가 자신에 대한 인증 정보를 제공하지 않기로 선택하면</target>
        </trans-unit>
        <trans-unit id="c1efa23d90162cc950959c549911fe2a287f1795" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;midichannel#allSoundOff--&quot;&gt;&lt;code&gt;allSoundOff()&lt;/code&gt;&lt;/a&gt;, this method applies to only a specific channel, not to all channels. Further, it silences not only currently sounding notes, but also subsequently received notes. It is possible that the underlying synthesizer does not support muting channels. In order to verify that a call to &lt;code&gt;setMute&lt;/code&gt; was successful, use &lt;code&gt;getMute&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;midichannel#allSoundOff--&quot;&gt; &lt;code&gt;allSoundOff()&lt;/code&gt; &lt;/a&gt; 와 달리이 메소드는 모든 채널이 아닌 특정 채널에만 적용됩니다. 또한 현재 소리가 나는 음뿐만 아니라 이후에 수신 된 음도 소거합니다. 기본 신디사이저가 뮤팅 채널을 지원하지 않을 수 있습니다. &lt;code&gt;setMute&lt;/code&gt; 호출 이 성공 했는지 확인 하려면 &lt;code&gt;getMute&lt;/code&gt; 를 사용 하십시오. .</target>
        </trans-unit>
        <trans-unit id="60ae1f36bc32e4f356c6d3deb8eeb0348ec7fd31" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslengine#setNeedClientAuth-boolean-&quot;&gt;&lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if this option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;sslengine#setNeedClientAuth-boolean-&quot;&gt; &lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt; &lt;/a&gt; 와 달리이 옵션이 설정되고 클라이언트가 자신에 대한 인증 정보를 제공하지 않기로 선택한 경우,</target>
        </trans-unit>
        <trans-unit id="0cb89c58b43228846f62c6aae66a0daa1bf8d799" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslengine#setWantClientAuth-boolean-&quot;&gt;&lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if this option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;sslengine#setWantClientAuth-boolean-&quot;&gt; &lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt; &lt;/a&gt; 와 달리이 옵션이 설정되고 클라이언트가 자신에 대한 인증 정보를 제공하지 않기로 선택한 경우,</target>
        </trans-unit>
        <trans-unit id="9da7b84d98871dab41e843834d9a44726d60f352" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslserversocket#setNeedClientAuth-boolean-&quot;&gt;&lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if the accepted socket's option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;sslserversocket#setNeedClientAuth-boolean-&quot;&gt; &lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt; &lt;/a&gt; 와 달리 , 승인 된 소켓의 옵션이 설정되고 클라이언트가 자신에 대한 인증 정보를 제공하지 않기로 선택한 경우,</target>
        </trans-unit>
        <trans-unit id="92a4efa13c7340a6315dd866755c49dcb3564943" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslserversocket#setWantClientAuth-boolean-&quot;&gt;&lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if the accepted socket's option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;sslserversocket#setWantClientAuth-boolean-&quot;&gt; &lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt; &lt;/a&gt; 과 달리 , 승인 된 소켓의 옵션이 설정되고 클라이언트가 자신에 대한 인증 정보를 제공하지 않기로 선택한 경우,</target>
        </trans-unit>
        <trans-unit id="a27f3180331afa8c236c66bde5a6c206febb2853" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslsocket#getSession()&quot;&gt;&lt;code&gt;SSLSocket.getSession()&lt;/code&gt;&lt;/a&gt; this method does not block until handshaking is complete.</source>
          <target state="translated">&lt;a href=&quot;sslsocket#getSession()&quot;&gt; &lt;code&gt;SSLSocket.getSession()&lt;/code&gt; &lt;/a&gt; 과 달리이 메서드는 핸드 셰이 킹이 완료 될 때까지 차단되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9be2460c8fcabe8ba8908f8cd88a3111899cc59a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslsocket#getSession--&quot;&gt;&lt;code&gt;SSLSocket.getSession()&lt;/code&gt;&lt;/a&gt; this method does not block until handshaking is complete.</source>
          <target state="translated">&lt;a href=&quot;sslsocket#getSession--&quot;&gt; &lt;code&gt;SSLSocket.getSession()&lt;/code&gt; &lt;/a&gt; 과 달리이 메소드는 핸드 쉐이킹이 완료 될 때까지 차단되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5cd0f644c77b7eb334c747c6648451da46ece2c5" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslsocket#getSession--&quot;&gt;&lt;code&gt;getSession()&lt;/code&gt;&lt;/a&gt;, this method does not initiate the initial handshake and does not block until handshaking is complete.</source>
          <target state="translated">&lt;a href=&quot;sslsocket#getSession--&quot;&gt; &lt;code&gt;getSession()&lt;/code&gt; &lt;/a&gt; 과 달리이 메소드는 초기 핸드 셰이크를 시작하지 않으며 핸드 쉐이킹이 완료 될 때까지 차단하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="984cefad788e4536a3aa3b7f44ce8a1686f5b115" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslsocket#setNeedClientAuth-boolean-&quot;&gt;&lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if this option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;sslsocket#setNeedClientAuth-boolean-&quot;&gt; &lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt; &lt;/a&gt; 와 달리이 옵션이 설정되고 클라이언트가 자신에 대한 인증 정보를 제공하지 않기로 선택한 경우,</target>
        </trans-unit>
        <trans-unit id="a28d8dca14013c04080ef19149f9f9baac7573f4" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslsocket#setWantClientAuth-boolean-&quot;&gt;&lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if this option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;sslsocket#setWantClientAuth-boolean-&quot;&gt; &lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt; &lt;/a&gt; 와 달리이 옵션이 설정되고 클라이언트가 자신에 대한 인증 정보를 제공하지 않기로 선택한 경우,</target>
        </trans-unit>
        <trans-unit id="0cbe19a0262394da434d6abc194ec24ce4d07b3e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;Comparable&lt;/code&gt;, a comparator may optionally permit comparison of null arguments, while maintaining the requirements for an equivalence relation.</source>
          <target state="translated">&lt;code&gt;Comparable&lt;/code&gt; 과 달리 비교기는 동등 관계에 대한 요구 사항을 유지하면서 널 인수의 비교를 선택적으로 허용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88a90cbacef75769aa8e58aca492df23b2dca479" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;MutableCallSite&lt;/code&gt;, there is no &lt;a href=&quot;mutablecallsite#syncAll(java.lang.invoke.MutableCallSite%5B%5D)&quot;&gt;syncAll operation&lt;/a&gt; on volatile call sites, since every write to a volatile variable is implicitly synchronized with reader threads.</source>
          <target state="translated">&lt;code&gt;MutableCallSite&lt;/code&gt; 와는 달리 , 휘발성 변수에 대한 모든 쓰기는 암시 적으로 판독기 스레드와 동기화되기 때문에 휘발성 호출 사이트 에는 &lt;a href=&quot;mutablecallsite#syncAll(java.lang.invoke.MutableCallSite%5B%5D)&quot;&gt;syncAll 작업&lt;/a&gt; 이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="ad06ca2eed8bc074e3c796515d89bb4334904d1a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;MutableCallSite&lt;/code&gt;, there is no &lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt;syncAll operation&lt;/a&gt; on volatile call sites, since every write to a volatile variable is implicitly synchronized with reader threads.</source>
          <target state="translated">&lt;code&gt;MutableCallSite&lt;/code&gt; 와 달리 , 휘발성 변수에 대한 모든 쓰기는 암시 적으로 리더 스레드와 동기화되므로 휘발성 호출 사이트 에는 &lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt;syncAll 작업&lt;/a&gt; 이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="070d459702e2b70bdf5928c321926da844b3ef83" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;SSLSocket&lt;/code&gt;, all methods of SSLEngine are non-blocking. &lt;code&gt;SSLEngine&lt;/code&gt; implementations may require the results of tasks that may take an extended period of time to complete, or may even block. For example, a TrustManager may need to connect to a remote certificate validation service, or a KeyManager might need to prompt a user to determine which certificate to use as part of client authentication. Additionally, creating cryptographic signatures and verifying them can be slow, seemingly blocking.</source>
          <target state="translated">같지 않은 &lt;code&gt;SSLSocket&lt;/code&gt; SSLEngine 의 모든 메소드는 차단되지 않습니다. &lt;code&gt;SSLEngine&lt;/code&gt; 구현에는 완료하는 데 오랜 시간이 걸리거나 차단 될 수있는 작업 결과가 필요할 수 있습니다. 예를 들어, TrustManager가 원격 인증서 유효성 검증 서비스에 연결해야하거나 KeyManager가 사용자에게 클라이언트 인증의 일부로 사용할 인증서를 판별하도록 프롬프트해야합니다. 또한 암호화 서명을 작성하고 확인하는 것이 느려서 차단하는 것처럼 보일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1671b2ea360c729b8fc1e944577e3c639f80fa1f" translate="yes" xml:space="preserve">
          <source>Unlike [&lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt;] , the &lt;code&gt;SHOW_ATTRIBUTE&lt;/code&gt; constant indicates that the &lt;code&gt;Attr&lt;/code&gt; nodes are shown and passed to the filter.</source>
          <target state="translated">[ &lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt; ] 와 달리 &lt;code&gt;SHOW_ATTRIBUTE&lt;/code&gt; 상수는 &lt;code&gt;Attr&lt;/code&gt; 노드가 표시되고 필터에 전달됨을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="366fd30ee70fdf33436603fe43f8caef8124f1c8" translate="yes" xml:space="preserve">
          <source>Unlike a &lt;a href=&quot;../keystore&quot;&gt;&lt;code&gt;KeyStore&lt;/code&gt;&lt;/a&gt;, which provides access to a cache of private keys and trusted certificates, a &lt;code&gt;CertStore&lt;/code&gt; is designed to provide access to a potentially vast repository of untrusted certificates and CRLs. For example, an LDAP implementation of &lt;code&gt;CertStore&lt;/code&gt; provides access to certificates and CRLs stored in one or more directories using the LDAP protocol and the schema as defined in the RFC service attribute.</source>
          <target state="translated">개인 키 및 신뢰할 수있는 인증서의 캐시에 대한 액세스를 제공 하는 &lt;a href=&quot;../keystore&quot;&gt; &lt;code&gt;KeyStore&lt;/code&gt; &lt;/a&gt; 와 달리 &lt;code&gt;CertStore&lt;/code&gt; 는 신뢰할 수없는 인증서 및 CRL의 잠재적 인 방대한 저장소에 대한 액세스를 제공하도록 설계되었습니다. 예를 들어, &lt;code&gt;CertStore&lt;/code&gt; 의 LDAP 구현은 RFC 서비스 속성에 정의 된 LDAP 프로토콜 및 스키마를 사용하여 하나 이상의 디렉토리에 저장된 인증서 및 CRL에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="52bb148cebc70af654135cff671632653bdef1a1" translate="yes" xml:space="preserve">
          <source>Unlike a &lt;code&gt;Frame&lt;/code&gt;, a &lt;code&gt;JFrame&lt;/code&gt; has some notion of how to respond when the user attempts to close the window. The default behavior is to simply hide the JFrame when the user closes the window. To change the default behavior, you invoke the method &lt;a href=&quot;#setDefaultCloseOperation(int)&quot;&gt;&lt;code&gt;setDefaultCloseOperation(int)&lt;/code&gt;&lt;/a&gt;. To make the &lt;code&gt;JFrame&lt;/code&gt; behave the same as a &lt;code&gt;Frame&lt;/code&gt; instance, use &lt;code&gt;setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE)&lt;/code&gt;.</source>
          <target state="translated">달리 &lt;code&gt;Frame&lt;/code&gt; 하는 &lt;code&gt;JFrame&lt;/code&gt; 의는 사용자 시도가 창을 닫을 때 대응하는 방법에 대한 몇 가지 개념을 가지고있다. 기본 동작은 사용자가 창을 닫을 때 JFrame을 숨기는 것입니다. 기본 동작을 변경하려면 &lt;a href=&quot;#setDefaultCloseOperation(int)&quot;&gt; &lt;code&gt;setDefaultCloseOperation(int)&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 . 만들기 위해 &lt;code&gt;JFrame&lt;/code&gt; 의 A와 같은 행동하라를 &lt;code&gt;Frame&lt;/code&gt; 경우, 사용 &lt;code&gt;setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c8bb040cae75de3ac6d4a317642fa2a7e45e882" translate="yes" xml:space="preserve">
          <source>Unlike a standard &lt;code&gt;OutputStream&lt;/code&gt;, ImageOutputStream extends its counterpart, &lt;code&gt;ImageInputStream&lt;/code&gt;. Thus it is possible to read from the stream as it is being written. The same seek and flush positions apply to both reading and writing, although the semantics for dealing with a non-zero bit offset before a byte-aligned write are necessarily different from the semantics for dealing with a non-zero bit offset before a byte-aligned read. When reading bytes, any bit offset is set to 0 before the read; when writing bytes, a non-zero bit offset causes the remaining bits in the byte to be written as 0s. The byte-aligned write then starts at the next byte position.</source>
          <target state="translated">표준 &lt;code&gt;OutputStream&lt;/code&gt; 과 달리 ImageOutputStream은 대응하는 &lt;code&gt;ImageInputStream&lt;/code&gt; . 따라서 스트림이 작성 될 때 스트림에서 읽을 수 있습니다. 바이트 정렬 쓰기 전에 0이 아닌 비트 오프셋을 처리하기위한 의미 체계가 바이트가 아닌 비트 오프셋을 처리하기위한 의미 체계와 반드시 다른 경우에도 동일한 찾기 및 플러시 위치가 읽기 및 쓰기 모두에 적용됩니다. 정렬 된 읽기. 바이트를 읽을 때 모든 비트 오프셋은 읽기 전에 0으로 설정됩니다. 바이트를 쓸 때 0이 아닌 비트 오프셋은 바이트의 나머지 비트가 0으로 쓰여지도록합니다. 바이트 정렬 쓰기는 다음 바이트 위치에서 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="58e072cb09b7c8d213ff17bb11b2c4a1806aed52" translate="yes" xml:space="preserve">
          <source>Unlike a weighted list, language ranges in a prioritized list are sorted in the descending order based on its priority. The first language range has the highest priority and meets the user's preference most.</source>
          <target state="translated">가중치 목록과 달리 우선 순위 목록의 언어 범위는 우선 순위에 따라 내림차순으로 정렬됩니다. 첫 번째 언어 범위는 우선 순위가 가장 높으며 사용자의 선호도를 가장 많이 충족시킵니다.</target>
        </trans-unit>
        <trans-unit id="2c3736112be6a7d8484b27d01a88aab8c69d94b5" translate="yes" xml:space="preserve">
          <source>Unlike environment properties, request controls of a context instance &lt;em&gt;are not inherited&lt;/em&gt; by context instances that are derived from it. Derived context instances have &lt;code&gt;null&lt;/code&gt; as their context request controls. You must set the request controls of a derived context instance explicitly using &lt;code&gt;setRequestControls()&lt;/code&gt;.</source>
          <target state="translated">환경 속성과 달리 컨텍스트 인스턴스의 요청 제어는 컨텍스트 인스턴스 에서 파생 된 컨텍스트 인스턴스에 의해 &lt;em&gt;상속되지 않습니다&lt;/em&gt; . 파생 된 컨텍스트 인스턴스는 컨텍스트 요청 제어로 &lt;code&gt;null&lt;/code&gt; 을 갖습니다 . &lt;code&gt;setRequestControls()&lt;/code&gt; 사용하여 파생 컨텍스트 인스턴스의 요청 제어를 명시 적으로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="89ce0441a8107c123aed195da6539ba1b157e290" translate="yes" xml:space="preserve">
          <source>Unlike method &lt;a href=&quot;#handle(java.util.function.BiFunction)&quot;&gt;&lt;code&gt;handle&lt;/code&gt;&lt;/a&gt;, this method is not designed to translate completion outcomes, so the supplied action should not throw an exception. However, if it does, the following rules apply: if this stage completed normally but the supplied action throws an exception, then the returned stage completes exceptionally with the supplied action's exception. Or, if this stage completed exceptionally and the supplied action throws an exception, then the returned stage completes exceptionally with this stage's exception.</source>
          <target state="translated">&lt;a href=&quot;#handle(java.util.function.BiFunction)&quot;&gt; &lt;code&gt;handle&lt;/code&gt; &lt;/a&gt; 메서드와 달리이 메서드 는 완료 결과를 변환하도록 설계되지 않았으므로 제공된 작업에서 예외를 throw하지 않아야합니다. 그러나 해당하는 경우 다음 규칙이 적용됩니다.이 단계가 정상적으로 완료되었지만 제공된 작업에서 예외가 발생하면 반환 된 단계가 제공된 작업의 예외와 함께 예외적으로 완료됩니다. 또는이 단계가 예외적으로 완료되고 제공된 작업에서 예외가 발생하면 반환 된 단계가 예외적으로이 단계의 예외와 함께 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="78303f5803c5d3ba3a967cedc2eed19c6a2ef92f" translate="yes" xml:space="preserve">
          <source>Unlike method &lt;a href=&quot;#handleAsync(java.util.function.BiFunction)&quot;&gt;&lt;code&gt;handleAsync&lt;/code&gt;&lt;/a&gt;, this method is not designed to translate completion outcomes, so the supplied action should not throw an exception. However, if it does, the following rules apply: If this stage completed normally but the supplied action throws an exception, then the returned stage completes exceptionally with the supplied action's exception. Or, if this stage completed exceptionally and the supplied action throws an exception, then the returned stage completes exceptionally with this stage's exception.</source>
          <target state="translated">&lt;a href=&quot;#handleAsync(java.util.function.BiFunction)&quot;&gt; &lt;code&gt;handleAsync&lt;/code&gt; &lt;/a&gt; 메서드와 달리이 메서드 는 완료 결과를 변환하도록 설계되지 않았으므로 제공된 작업에서 예외를 throw해서는 안됩니다. 그러나 해당하는 경우 다음 규칙이 적용됩니다.이 단계가 정상적으로 완료되었지만 제공된 작업에서 예외가 발생하면 반환 된 단계가 제공된 작업의 예외와 함께 예외적으로 완료됩니다. 또는이 단계가 예외적으로 완료되고 제공된 작업에서 예외가 발생하면 반환 된 단계가 예외적으로이 단계의 예외와 함께 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="0af63424b04fc1db287fd8c9024ea0ecaefa5147" translate="yes" xml:space="preserve">
          <source>Unlike method &lt;a href=&quot;#handleAsync(java.util.function.BiFunction,java.util.concurrent.Executor)&quot;&gt;&lt;code&gt;handleAsync&lt;/code&gt;&lt;/a&gt;, this method is not designed to translate completion outcomes, so the supplied action should not throw an exception. However, if it does, the following rules apply: If this stage completed normally but the supplied action throws an exception, then the returned stage completes exceptionally with the supplied action's exception. Or, if this stage completed exceptionally and the supplied action throws an exception, then the returned stage completes exceptionally with this stage's exception.</source>
          <target state="translated">&lt;a href=&quot;#handleAsync(java.util.function.BiFunction,java.util.concurrent.Executor)&quot;&gt; &lt;code&gt;handleAsync&lt;/code&gt; &lt;/a&gt; 메서드와 달리이 메서드 는 완료 결과를 변환하도록 설계되지 않았으므로 제공된 작업에서 예외를 throw해서는 안됩니다. 그러나 해당하는 경우 다음 규칙이 적용됩니다.이 단계가 정상적으로 완료되었지만 제공된 작업에서 예외가 발생하면 반환 된 단계가 제공된 작업의 예외와 함께 예외적으로 완료됩니다. 또는이 단계가 예외적으로 완료되고 제공된 작업에서 예외가 발생하면 반환 된 단계가 예외적으로이 단계의 예외와 함께 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="7e8e29de3f8d12b52fdbf6ecd85e82cd6a91c4e5" translate="yes" xml:space="preserve">
          <source>Unlike most methods in this class, this method does not throw security exceptions. If a security manager exists and its &lt;a href=&quot;../lang/securitymanager#checkRead(java.lang.String)&quot;&gt;&lt;code&gt;SecurityManager.checkRead(String)&lt;/code&gt;&lt;/a&gt; method denies read access to a particular root directory, then that directory will not appear in the result.</source>
          <target state="translated">이 클래스의 대부분의 메서드와 달리이 메서드는 보안 예외를 throw하지 않습니다. 보안 관리자가 있고 해당 &lt;a href=&quot;../lang/securitymanager#checkRead(java.lang.String)&quot;&gt; &lt;code&gt;SecurityManager.checkRead(String)&lt;/code&gt; &lt;/a&gt; 메서드가 특정 루트 디렉터리에 대한 읽기 액세스를 거부하면 해당 디렉터리가 결과에 나타나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="102500bfaa775c3d4fc30fa7b2d14dc7a97aaa73" translate="yes" xml:space="preserve">
          <source>Unlike most methods in this class, this method does not throw security exceptions. If a security manager exists and its &lt;a href=&quot;../lang/securitymanager#checkRead-java.lang.String-&quot;&gt;&lt;code&gt;SecurityManager.checkRead(String)&lt;/code&gt;&lt;/a&gt; method denies read access to a particular root directory, then that directory will not appear in the result.</source>
          <target state="translated">이 클래스의 대부분의 메소드와 달리이 메소드는 보안 예외를 발생시키지 않습니다. 보안 관리자가 존재하고 해당 &lt;a href=&quot;../lang/securitymanager#checkRead-java.lang.String-&quot;&gt; &lt;code&gt;SecurityManager.checkRead(String)&lt;/code&gt; &lt;/a&gt; 메소드가 특정 루트 디렉토리에 대한 읽기 액세스를 거부하면 해당 디렉토리가 결과에 나타나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="878e687971411d528990c43760e85c269e3be5b9" translate="yes" xml:space="preserve">
          <source>Unlike most other methods in this class, this method &lt;em&gt;does&lt;/em&gt; close the provided &lt;code&gt;ImageInputStream&lt;/code&gt; after the read operation has completed, unless &lt;code&gt;null&lt;/code&gt; is returned, in which case this method &lt;em&gt;does not&lt;/em&gt; close the stream.</source>
          <target state="translated">이 클래스의 다른 대부분의 메소드와 달리,이 메소드 &lt;em&gt;는 &lt;/em&gt; &lt;code&gt;null&lt;/code&gt; 이 리턴 되지 않는 한 읽기 조작이 완료된 후 제공된 &lt;code&gt;ImageInputStream&lt;/code&gt; 을 닫습니다. 이 경우이 메소드 &lt;em&gt;는&lt;/em&gt; 스트림을 닫지 &lt;em&gt;않습니다&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38250ce7282f7ea247d6ef945c076586db652831" translate="yes" xml:space="preserve">
          <source>Unlike most printing attributes which are immutable once constructed, class &lt;code&gt;PrinterStateReasons&lt;/code&gt; is designed to be mutable; you can add &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; objects to an existing &lt;code&gt;PrinterStateReasons&lt;/code&gt; object and remove them again. However, like class &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt;&lt;code&gt;java.util.HashMap&lt;/code&gt;&lt;/a&gt;, class &lt;code&gt;PrinterStateReasons&lt;/code&gt; is not multiple thread safe. If a &lt;code&gt;PrinterStateReasons&lt;/code&gt; object will be used by multiple threads, be sure to synchronize its operations (e.g., using a synchronized map view obtained from class &lt;a href=&quot;../../../../../java.base/java/util/collections&quot;&gt;&lt;code&gt;java.util.Collections&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">일단 생성되면 변경할 수없는 대부분의 인쇄 속성과 달리 &lt;code&gt;PrinterStateReasons&lt;/code&gt; 클래스 는 변경 가능하도록 설계되었습니다. 기존 &lt;code&gt;PrinterStateReasons&lt;/code&gt; 개체 에 &lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt; 개체를 추가 하고 다시 제거 할 수 있습니다. 그러나 &lt;a href=&quot;../../../../../java.base/java/util/hashmap&quot;&gt; &lt;code&gt;java.util.HashMap&lt;/code&gt; &lt;/a&gt; 클래스와 마찬가지로 &lt;code&gt;PrinterStateReasons&lt;/code&gt; 클래스 는 다중 스레드로부터 안전하지 않습니다. 경우 &lt;code&gt;PrinterStateReasons&lt;/code&gt; 속성의 객체가 multi-thread로 사용되는, 확실히 조작을 동기시켜주세요 (예를 들어, 클래스에서 얻은 동기화 된지도보기를 사용 &lt;a href=&quot;../../../../../java.base/java/util/collections&quot;&gt; &lt;code&gt;java.util.Collections&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b46cd822496b8f3982f8ff093f808c41c48712b9" translate="yes" xml:space="preserve">
          <source>Unlike most printing attributes which are immutable once constructed, class PrinterStateReasons is designed to be mutable; you can add &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; objects to an existing PrinterStateReasons object and remove them again. However, like class &lt;a href=&quot;../../../../java/util/hashmap&quot;&gt;&lt;code&gt;java.util.HashMap&lt;/code&gt;&lt;/a&gt;, class PrinterStateReasons is not multiple thread safe. If a PrinterStateReasons object will be used by multiple threads, be sure to synchronize its operations (e.g., using a synchronized map view obtained from class &lt;a href=&quot;../../../../java/util/collections&quot;&gt;&lt;code&gt;java.util.Collections&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">한 번 구성되면 변경할 수없는 대부분의 인쇄 속성과 달리 PrinterStateReasons 클래스는 변경 가능하도록 설계되었습니다. &lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt; 객체를 기존 PrinterStateReasons 객체에 추가 하고 다시 제거 할 수 있습니다. 그러나 클래스 &lt;a href=&quot;../../../../java/util/hashmap&quot;&gt; &lt;code&gt;java.util.HashMap&lt;/code&gt; &lt;/a&gt; 과 같이 PrinterStateReasons 클래스는 다중 스레드 안전이 아닙니다. PrinterStateReasons 객체가 복수의 thread에 의해 사용되는 경우, 조작을 동기화 (예를 들어, &lt;a href=&quot;../../../../java/util/collections&quot;&gt; &lt;code&gt;java.util.Collections&lt;/code&gt; &lt;/a&gt; 클래스로부터 취득 된 동기 맵 뷰를 사용해 )합니다.</target>
        </trans-unit>
        <trans-unit id="c70c8f6d8a4f05281505cea3d7fce6eaad3efe0a" translate="yes" xml:space="preserve">
          <source>Unlike other types of resource bundle, you don't subclass &lt;code&gt;PropertyResourceBundle&lt;/code&gt;. Instead, you supply properties files containing the resource data. &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; will automatically look for the appropriate properties file and create a &lt;code&gt;PropertyResourceBundle&lt;/code&gt; that refers to it. See &lt;a href=&quot;resourcebundle#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; for a complete description of the search and instantiation strategy.</source>
          <target state="translated">다른 유형의 리소스 번들과 달리 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 을 하위 클래스로 만들지 않습니다 . 대신 리소스 데이터가 포함 된 속성 파일을 제공합니다. &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 은 자동으로 적절한 속성 파일을 찾고 이를 참조 하는 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 을 만듭니다 . 검색 및 인스턴스화 전략에 대한 전체 설명은 &lt;a href=&quot;resourcebundle#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c7d269bced9c09d6f686a5195b5a4c09fb7cc027" translate="yes" xml:space="preserve">
          <source>Unlike other types of resource bundle, you don't subclass &lt;code&gt;PropertyResourceBundle&lt;/code&gt;. Instead, you supply properties files containing the resource data. &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; will automatically look for the appropriate properties file and create a &lt;code&gt;PropertyResourceBundle&lt;/code&gt; that refers to it. See &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; for a complete description of the search and instantiation strategy.</source>
          <target state="translated">다른 유형의 리소스 번들과 달리 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 을 서브 클래스 화하지 않습니다 . 대신 리소스 데이터가 포함 된 속성 파일을 제공합니다. &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 은 자동으로 적절한 속성 파일을 찾고 이를 참조 하는 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 을 만듭니다 . 검색 및 인스턴스화 전략에 대한 자세한 설명은 &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="219b990a3e2722a30618f12bcdc2334083d3d781" translate="yes" xml:space="preserve">
          <source>Unlike sets, lists typically allow duplicate elements. More formally, lists typically allow pairs of elements &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; such that &lt;code&gt;e1.equals(e2)&lt;/code&gt;, and they typically allow multiple null elements if they allow null elements at all. It is not inconceivable that someone might wish to implement a list that prohibits duplicates, by throwing runtime exceptions when the user attempts to insert them, but we expect this usage to be rare.</source>
          <target state="translated">집합과 달리 목록은 일반적으로 중복 요소를 허용합니다. 보다 공식적으로 목록은 일반적으로 &lt;code&gt;e1.equals(e2)&lt;/code&gt; 와 같이 요소 &lt;code&gt;e1&lt;/code&gt; 및 &lt;code&gt;e2&lt;/code&gt; 의 쌍을 허용 하며 , 널 요소를 전혀 허용하지 않는 경우 여러 개의 null 요소를 허용합니다. 사용자가 삽입하려고 할 때 런타임 예외를 발생시켜 중복을 금지하는 목록을 구현하려는 사람은 상상할 수 없지만,이 사용법은 드물 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="5f5803225dfa74d3c56da4861261faabd555cf07" translate="yes" xml:space="preserve">
          <source>Unlike soft and weak references, phantom references are not automatically cleared by the garbage collector as they are enqueued. An object that is reachable via phantom references will remain so until all such references are cleared or themselves become unreachable.</source>
          <target state="translated">부드럽고 약한 참조와 달리 팬텀 참조는 큐에 넣을 때 가비지 수집기에서 자동으로 지워지지 않습니다. 팬텀 참조를 통해 도달 할 수있는 객체는 그러한 모든 참조가 지워지거나 도달 할 수 없을 때까지 남아 있습니다.</target>
        </trans-unit>
        <trans-unit id="a290522c4fcc049744c3e569008d07ea66088fc1" translate="yes" xml:space="preserve">
          <source>Unlike some of the numeric methods of class &lt;code&gt;StrictMath&lt;/code&gt;, all implementations of the equivalent functions of class &lt;code&gt;Math&lt;/code&gt; are not defined to return the bit-for-bit same results. This relaxation permits better-performing implementations where strict reproducibility is not required.</source>
          <target state="translated">클래스 &lt;code&gt;StrictMath&lt;/code&gt; 의 숫자 메소드 중 일부와 달리 &lt;code&gt;Math&lt;/code&gt; 클래스의 동등한 함수에 대한 모든 구현은 비트마다 동일한 결과를 리턴하도록 정의되지 않습니다. 이러한 완화는 엄격한 재현성이 요구되지 않는 더 나은 성능의 구현을 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="6d40b4de6766b04edf3397d961669bedc75f412b" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;generic&lt;/code&gt;&lt;/a&gt; invocation mode, which can &quot;recycle&quot; an array argument, passing it directly to the target method, this invocation mode &lt;em&gt;always&lt;/em&gt; creates a new array parameter, even if the original array passed to &lt;code&gt;invokeWithArguments&lt;/code&gt; would have been acceptable as a direct argument to the target method. Even if the number &lt;code&gt;M&lt;/code&gt; of actual arguments is the arity &lt;code&gt;N&lt;/code&gt;, and the last argument is dynamically a suitable array of type &lt;code&gt;A[]&lt;/code&gt;, it will still be boxed into a new one-element array, since the call site statically types the argument as &lt;code&gt;Object&lt;/code&gt;, not an array type. This is not a special rule for this method, but rather a regular effect of the &lt;a href=&quot;#asVarargsCollector(java.lang.Class)&quot;&gt;rules for variable-arity invocation&lt;/a&gt;.</source>
          <target state="translated">배열 인수를 &quot;재활용&quot;하여 대상 메서드에 직접 전달할 수 있는 &lt;a href=&quot;#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;generic&lt;/code&gt; &lt;/a&gt; 호출 모드 와 달리이 호출 모드 &lt;em&gt;는 &lt;/em&gt; &lt;code&gt;invokeWithArguments&lt;/code&gt; 에 전달 된 원래 배열 이 직접 인수로 허용 되더라도 &lt;em&gt;항상&lt;/em&gt; 새 배열 매개 변수를 만듭니다. 대상 방법. 숫자하더라도 &lt;code&gt;M&lt;/code&gt; 실제 인수는 인수에 대응 인 &lt;code&gt;N&lt;/code&gt; , 마지막 인자는 동적 유형의 적합한 배열 &lt;code&gt;A[]&lt;/code&gt; , 그것은 여전히 콜 사이트 때문에, 새로운 소자 어레이로 정적 유형 인수와 박스형 될 배열 유형이 아닌 &lt;code&gt;Object&lt;/code&gt; 입니다. 이것은이 방법에 대한 특별한 규칙이 아니라&lt;a href=&quot;#asVarargsCollector(java.lang.Class)&quot;&gt;가변 인수 호출에 대한 규칙&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e00375184534dd00a20ce4f31712541d0d0a38a" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale&lt;/code&gt;&lt;/a&gt; method, the call to this method may produce a different formatter depending on the order of method chaining with other withXXXX() methods.</source>
          <target state="translated">&lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale&lt;/code&gt; &lt;/a&gt; 메서드 와 달리이 메서드에 대한 호출은 다른 withXXXX () 메서드와의 메서드 체인 순서에 따라 다른 포맷터를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79d5c082cc89bb121a01f27876d1cd6da8e88bec" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;files#delete(java.nio.file.Path)&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method, this method does not first examine the file to determine if the file is a directory. Whether a directory is deleted by this method is system dependent and therefore not specified. If the file is a symbolic link, then the link itself, not the final target of the link, is deleted. When the parameter is a relative path then the file to delete is relative to this open directory.</source>
          <target state="translated">&lt;a href=&quot;files#delete(java.nio.file.Path)&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; 메서드 와 달리이 메서드는 파일이 디렉토리인지 확인하기 위해 먼저 파일을 검사하지 않습니다. 이 방법으로 디렉토리가 삭제되는지 여부는 시스템에 따라 다르므로 지정되지 않습니다. 파일이 심볼릭 링크이면 링크의 최종 대상이 아닌 링크 자체가 삭제됩니다. 매개 변수가 상대 경로이면 삭제할 파일은이 열린 디렉토리에 상대적입니다.</target>
        </trans-unit>
        <trans-unit id="db46b47ffda90d6b41d21c422cce08ff63453e6b" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;files#delete(java.nio.file.Path)&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method, this method does not first examine the file to determine if the file is a directory. Whether non-directories are deleted by this method is system dependent and therefore not specified. When the parameter is a relative path then the directory to delete is relative to this open directory.</source>
          <target state="translated">&lt;a href=&quot;files#delete(java.nio.file.Path)&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; 메서드 와 달리이 메서드는 파일이 디렉토리인지 확인하기 위해 먼저 파일을 검사하지 않습니다. 이 방법으로 비 디렉토리를 삭제하는지 여부는 시스템에 따라 다르므로 지정되지 않습니다. 매개 변수가 상대 경로이면 삭제할 디렉토리는이 열린 디렉토리에 상대적입니다.</target>
        </trans-unit>
        <trans-unit id="39a88f70205b960b7a32b11a7de43d60ebd53f17" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;files#delete-java.nio.file.Path-&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method, this method does not first examine the file to determine if the file is a directory. Whether a directory is deleted by this method is system dependent and therefore not specified. If the file is a symbolic link, then the link itself, not the final target of the link, is deleted. When the parameter is a relative path then the file to delete is relative to this open directory.</source>
          <target state="translated">&lt;a href=&quot;files#delete-java.nio.file.Path-&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; 메소드 와 달리이 메소드는 먼저 파일을 검사하여 파일이 디렉토리인지 판별하지 않습니다. 이 방법으로 디렉토리를 삭제할지 여부는 시스템에 따라 다르므로 지정되지 않습니다. 파일이 기호 링크 인 경우 링크의 최종 대상이 아닌 링크 자체가 삭제됩니다. 매개 변수가 상대 경로 인 경우 삭제할 파일은이 열린 디렉토리에 상대적입니다.</target>
        </trans-unit>
        <trans-unit id="e6bae3306a9153178c1bed49d0fccefb5dcab836" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;files#delete-java.nio.file.Path-&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method, this method does not first examine the file to determine if the file is a directory. Whether non-directories are deleted by this method is system dependent and therefore not specified. When the parameter is a relative path then the directory to delete is relative to this open directory.</source>
          <target state="translated">&lt;a href=&quot;files#delete-java.nio.file.Path-&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; 메소드 와 달리이 메소드는 먼저 파일을 검사하여 파일이 디렉토리인지 판별하지 않습니다. 이 방법으로 비 디렉토리가 삭제되는지 여부는 시스템에 따라 다르므로 지정되지 않습니다. 매개 변수가 상대 경로 인 경우 삭제할 디렉토리는이 열린 디렉토리에 상대적입니다.</target>
        </trans-unit>
        <trans-unit id="5e75214bea57ef5a264a46ed260895d220110e92" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jobimpressions&quot;&gt;&lt;code&gt;JobImpressions&lt;/code&gt;&lt;/a&gt; attributes, the &lt;code&gt;JobMediaSheets&lt;/code&gt; value must include the multiplicative factors contributed by the number of copies specified by the &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute and a &quot;number of copies&quot; instruction embedded in the document data, if any. This difference allows the system administrator to control the lower and upper bounds of both (1) the size of the document(s) with &lt;a href=&quot;jobkoctetssupported&quot;&gt;&lt;code&gt;JobKOctetsSupported&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jobimpressionssupported&quot;&gt;&lt;code&gt;JobImpressionsSupported&lt;/code&gt;&lt;/a&gt; and (2) the size of the job with &lt;a href=&quot;jobmediasheetssupported&quot;&gt;&lt;code&gt;JobMediaSheetsSupported&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;jobkoctets&quot;&gt; &lt;code&gt;JobKOctets&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;jobimpressions&quot;&gt; &lt;code&gt;JobImpressions&lt;/code&gt; &lt;/a&gt; 속성 과 달리 &lt;code&gt;JobMediaSheets&lt;/code&gt; 값에는 &lt;a href=&quot;copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt; 속성에 지정된 복사본 수와 문서 데이터에 포함 된 &quot;복사본 수&quot;명령 ( 있는 경우)이 기여하는 곱셈 요소가 포함되어야 합니다. 이 차이를 통해 시스템 관리자는 (1) &lt;a href=&quot;jobkoctetssupported&quot;&gt; &lt;code&gt;JobKOctetsSupported&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;jobimpressionssupported&quot;&gt; &lt;code&gt;JobImpressionsSupported&lt;/code&gt; &lt;/a&gt; 를 사용하는 문서 크기 및 (2) &lt;a href=&quot;jobmediasheetssupported&quot;&gt; &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt; &lt;/a&gt; 를 사용하는 작업 크기의 하한 및 상한을 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e7dba1426e752b9874c2ce36095aaa659fd0d3dd" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jobimpressions&quot;&gt;&lt;code&gt;JobImpressions&lt;/code&gt;&lt;/a&gt; attributes, the JobMediaSheets value must include the multiplicative factors contributed by the number of copies specified by the &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute and a &quot;number of copies&quot; instruction embedded in the document data, if any. This difference allows the system administrator to control the lower and upper bounds of both (1) the size of the document(s) with &lt;a href=&quot;jobkoctetssupported&quot;&gt;&lt;code&gt;JobKOctetsSupported&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jobimpressionssupported&quot;&gt;&lt;code&gt;JobImpressionsSupported&lt;/code&gt;&lt;/a&gt; and (2) the size of the job with &lt;a href=&quot;jobmediasheetssupported&quot;&gt;&lt;code&gt;JobMediaSheetsSupported&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;jobkoctets&quot;&gt; &lt;code&gt;JobKOctets&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;jobimpressions&quot;&gt; &lt;code&gt;JobImpressions&lt;/code&gt; &lt;/a&gt; 속성 과 달리 JobMediaSheets 값에는 &lt;a href=&quot;copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt; 속성으로 지정된 사본 수와 문서 데이터에 포함 된 &quot;사본 수&quot;명령 (있는 경우)에 의해 제공되는 곱셈 요소가 포함되어야 합니다. 이 차이로 인해 시스템 관리자는 (1) &lt;a href=&quot;jobkoctetssupported&quot;&gt; &lt;code&gt;JobKOctetsSupported&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;jobimpressionssupported&quot;&gt; &lt;code&gt;JobImpressionsSupported&lt;/code&gt; &lt;/a&gt; 가있는 문서 크기 및 (2) &lt;a href=&quot;jobmediasheetssupported&quot;&gt; &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt; &lt;/a&gt; 가있는 작업 크기의 하한과 상한을 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5636c397adab06e521a951b1a28c91c0435d8fe1" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface, this interface does not provide support for indexed access to elements.</source>
          <target state="translated">&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; 인터페이스 와 달리이 인터페이스는 요소에 대한 인덱스 액세스를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ebed0fc65dd258b9b011292c101cdca62b8db0d" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;printstream&quot;&gt;&lt;code&gt;PrintStream&lt;/code&gt;&lt;/a&gt; class, if automatic flushing is enabled it will be done only when one of the &lt;code&gt;println&lt;/code&gt;, &lt;code&gt;printf&lt;/code&gt;, or &lt;code&gt;format&lt;/code&gt; methods is invoked, rather than whenever a newline character happens to be output. These methods use the platform's own notion of line separator rather than the newline character.</source>
          <target state="translated">&lt;a href=&quot;printstream&quot;&gt; &lt;code&gt;PrintStream&lt;/code&gt; &lt;/a&gt; 클래스 와 달리 자동 플러싱을 사용하는 경우 줄 바꾸기 문자가 출력 될 때가 아니라 &lt;code&gt;println&lt;/code&gt; , &lt;code&gt;printf&lt;/code&gt; 또는 &lt;code&gt;format&lt;/code&gt; 메소드 중 하나 가 호출 될 때만 수행됩니다 . 이 메소드는 개행 문자 대신 플랫폼 고유의 행 구분 기호를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="087850c6bfa4c8a184bea671ac1aa2a42a6f1ada" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;sslsocket#startHandshake()&quot;&gt;&lt;code&gt;SSLSocket#startHandshake()&lt;/code&gt;&lt;/a&gt; method, this method does not block until handshaking is completed.</source>
          <target state="translated">&lt;a href=&quot;sslsocket#startHandshake()&quot;&gt; &lt;code&gt;SSLSocket#startHandshake()&lt;/code&gt; &lt;/a&gt; 메서드 와 달리이 메서드는 핸드 셰이 킹이 완료 될 때까지 차단되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7f939254fee74cc40565692e311bbf135ecb6d66" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;sslsocket#startHandshake--&quot;&gt;&lt;code&gt;SSLSocket#startHandshake()&lt;/code&gt;&lt;/a&gt; method, this method does not block until handshaking is completed.</source>
          <target state="translated">&lt;a href=&quot;sslsocket#startHandshake--&quot;&gt; &lt;code&gt;SSLSocket#startHandshake()&lt;/code&gt; &lt;/a&gt; 메소드 와 달리이 메소드는 핸드 쉐이킹이 완료 될 때까지 차단되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="80896bb83b696305a15b613ef6f7cf9b08ca6f53" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;insertAfterEnd&lt;/code&gt; method, new elements become &lt;em&gt;children&lt;/em&gt; of the specified element, not siblings.</source>
          <target state="translated">&lt;code&gt;insertAfterEnd&lt;/code&gt; 메서드 와 달리 새 요소는 형제가 아닌 지정된 요소의 &lt;em&gt;자식&lt;/em&gt; 이됩니다.</target>
        </trans-unit>
        <trans-unit id="2b0b4315e5b0747e46b40ac911478b8b97075bf8" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;insertAfterStart&lt;/code&gt; method, new elements become &lt;em&gt;siblings&lt;/em&gt; of the specified element, not children.</source>
          <target state="translated">&lt;code&gt;insertAfterStart&lt;/code&gt; 메서드 와 달리 새 요소는 자식이 아닌 지정된 요소의 &lt;em&gt;형제&lt;/em&gt; 가됩니다.</target>
        </trans-unit>
        <trans-unit id="44d10758abf581d706be1a75958b343e21134c21" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;insertBeforeEnd&lt;/code&gt; method, new elements become &lt;em&gt;siblings&lt;/em&gt; of the specified element, not children.</source>
          <target state="translated">&lt;code&gt;insertBeforeEnd&lt;/code&gt; 메서드 와 달리 새 요소는 자식이 아닌 지정된 요소의 &lt;em&gt;형제&lt;/em&gt; 가됩니다.</target>
        </trans-unit>
        <trans-unit id="0de76b52d0bcdd291745d7258f109d73ab2a0e5e" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;insertBeforeStart&lt;/code&gt; method, new elements become &lt;em&gt;children&lt;/em&gt; of the specified element, not siblings.</source>
          <target state="translated">&lt;code&gt;insertBeforeStart&lt;/code&gt; 메서드 와 달리 새 요소는 형제가 아닌 지정된 요소의 &lt;em&gt;자식&lt;/em&gt; 이됩니다.</target>
        </trans-unit>
        <trans-unit id="d0d99f99deae88d6582fb90b98bf32a9c16b60e8" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;interestOps(int)&lt;/code&gt; and &lt;code&gt;interestOpsOr(int)&lt;/code&gt; methods, this method does not throw &lt;code&gt;IllegalArgumentException&lt;/code&gt; when invoked with bits in the interest set that do not correspond to an operation that is supported by this key's channel. This is to allow operation bits in the interest set to be cleared using bitwise complement values, e.g., &lt;code&gt;interestOpsAnd(~SelectionKey.OP_READ)&lt;/code&gt; will remove the &lt;code&gt;OP_READ&lt;/code&gt; from the interest set without affecting other bits.</source>
          <target state="translated">&lt;code&gt;interestOps(int)&lt;/code&gt; 및 &lt;code&gt;interestOpsOr(int)&lt;/code&gt; 메소드 와 달리이 메소드는 이 키의 채널에서 지원하는 작업에 해당하지 않는 관심 세트의 비트로 호출 될 때 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을 발생 시키지 않습니다 . 이것은 관심 세트의 연산 비트가 비트 보수 값을 사용하여 지워지도록 허용하기위한 것입니다. 예를 들어, &lt;code&gt;interestOpsAnd(~SelectionKey.OP_READ)&lt;/code&gt; 는 다른 비트에 영향을주지 않고 관심 세트에서 &lt;code&gt;OP_READ&lt;/code&gt; 를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="c58b3e9b661aeafd4ac33323b13e25cf5e4eb206" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;mark&lt;/code&gt; methods declared by the &lt;code&gt;Reader&lt;/code&gt; and &lt;code&gt;InputStream&lt;/code&gt; interfaces, no &lt;code&gt;readLimit&lt;/code&gt; parameter is used. An arbitrary amount of data may be read following the call to &lt;code&gt;mark&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Reader&lt;/code&gt; 및 &lt;code&gt;InputStream&lt;/code&gt; 인터페이스에서 선언 한 &lt;code&gt;mark&lt;/code&gt; 메소드 와 달리 &lt;code&gt;readLimit&lt;/code&gt; 매개 변수는 사용 되지 않습니다 . &lt;code&gt;mark&lt;/code&gt; to call 다음에 임의의 양의 데이터를 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b7d5ce9f1c2ad7fe4e6fa04497ca11c292a5ac29" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;set&lt;/code&gt; method, all of the calendar fields and &lt;code&gt;time&lt;/code&gt; values are calculated upon return.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 메소드 와 달리 모든 달력 필드와 &lt;code&gt;time&lt;/code&gt; 값은 반환시 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="de53b88a525e7d26b740bce7d29bb75a14f928b5" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;set&lt;/code&gt; method, all of the calendar fields and the instant of time value are calculated upon return.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 메소드 와 달리 , 모든 달력 필드와 시간 값은 반환시 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="c63c51ee7f6e8dfe5583e92b214e0f816ed28707" translate="yes" xml:space="preserve">
          <source>Unlike the method &lt;a href=&quot;#requireNonNull(T,java.lang.String)&quot;&gt;&lt;code&gt;requireNonNull(Object, String)&lt;/code&gt;&lt;/a&gt;, this method allows creation of the message to be deferred until after the null check is made. While this may confer a performance advantage in the non-null case, when deciding to call this method care should be taken that the costs of creating the message supplier are less than the cost of just creating the string message directly.</source>
          <target state="translated">&lt;a href=&quot;#requireNonNull(T,java.lang.String)&quot;&gt; &lt;code&gt;requireNonNull(Object, String)&lt;/code&gt; &lt;/a&gt; 메서드와 달리이 메서드를 사용하면 null 검사가 수행 될 때까지 메시지 생성을 연기 할 수 있습니다. null이 아닌 경우 성능 이점을 제공 할 수 있지만이 메서드를 호출하기로 결정할 때 메시지 공급자를 만드는 비용이 문자열 메시지를 직접 만드는 비용보다 적다는 점에주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="da4cc8b1d3dac1cde25f9afa8e0e9eb9575ac13e" translate="yes" xml:space="preserve">
          <source>Unlike the method &lt;a href=&quot;objects#requireNonNull-T-java.lang.String-&quot;&gt;&lt;code&gt;requireNonNull(Object, String)&lt;/code&gt;&lt;/a&gt;, this method allows creation of the message to be deferred until after the null check is made. While this may confer a performance advantage in the non-null case, when deciding to call this method care should be taken that the costs of creating the message supplier are less than the cost of just creating the string message directly.</source>
          <target state="translated">&lt;a href=&quot;objects#requireNonNull-T-java.lang.String-&quot;&gt; &lt;code&gt;requireNonNull(Object, String)&lt;/code&gt; &lt;/a&gt; 메소드와 달리 ,이 메소드를 사용하면 널 검사가 완료 될 때까지 메시지 작성을 연기 할 수 있습니다. 이것이 널이 아닌 경우에 성능 이점을 제공 할 수 있지만,이 메소드를 호출하기로 결정할 때 메시지 공급 업체 작성 비용이 문자열 메시지를 직접 작성하는 비용보다 낮도록주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="615ed4b5bf6780475400ace8b81c961072be98bc" translate="yes" xml:space="preserve">
          <source>Unlike the other abstract collection implementations, the programmer does</source>
          <target state="translated">다른 추상 컬렉션 구현과 달리 프로그래머는</target>
        </trans-unit>
        <trans-unit id="43d018b49ccf0d0c201a4d8c22d9263ce75b36ba" translate="yes" xml:space="preserve">
          <source>Unlike the other load methods defined here, the service type is the second parameter. The reason for this is to avoid source compatibility issues for code that uses &lt;code&gt;load(S, null)&lt;/code&gt;.</source>
          <target state="translated">여기에 정의 된 다른로드 방법과 달리 서비스 유형은 두 번째 매개 변수입니다. 그 이유는 &lt;code&gt;load(S, null)&lt;/code&gt; 을 사용하는 코드에 대한 소스 호환성 문제를 방지하기위한 것입니다 .</target>
        </trans-unit>
        <trans-unit id="b76695e655b540ebf3b7079dd86af14ae24ce989" translate="yes" xml:space="preserve">
          <source>Unlike the rest of Swing, this class is thread safe.</source>
          <target state="translated">나머지 Swing과 달리이 클래스는 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="ad2ba889bd53c10de4e209bdd22150a0627b66d8" translate="yes" xml:space="preserve">
          <source>Unlike the rest of Swing, this method can be invoked from any thread.</source>
          <target state="translated">나머지 Swing과 달리이 메서드는 모든 스레드에서 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c51147fec60801e3382da59609aefacd1d8b84a2" translate="yes" xml:space="preserve">
          <source>Unlike the signature polymorphic methods &lt;code&gt;invokeExact&lt;/code&gt; and &lt;code&gt;invoke&lt;/code&gt;, &lt;code&gt;invokeWithArguments&lt;/code&gt; can be accessed normally via the Core Reflection API and JNI. It can therefore be used as a bridge between native or reflective code and method handles.</source>
          <target state="translated">서명 방법 다형성 달리 &lt;code&gt;invokeExact&lt;/code&gt; 및 &lt;code&gt;invoke&lt;/code&gt; , &lt;code&gt;invokeWithArguments&lt;/code&gt; 는 코어 반사 API 및 JNI를 통해 정상적으로 액세스 될 수있다. 따라서 네이티브 또는 리플렉션 코드와 메서드 핸들 사이의 브리지로 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc85a8dd62e3e473996e69ca9cdb8238f8b91285" translate="yes" xml:space="preserve">
          <source>Unlike with the Core Reflection API, where access is checked every time a reflective method is invoked, VarHandle access checking is performed &lt;a href=&quot;methodhandles.lookup#access&quot;&gt;when the VarHandle is created&lt;/a&gt;. Thus, VarHandles to non-public variables, or to variables in non-public classes, should generally be kept secret. They should not be passed to untrusted code unless their use from the untrusted code would be harmless.</source>
          <target state="translated">리플 렉 티브 메서드가 호출 될 때마다 액세스가 확인되는 Core Reflection API와 달리 &lt;a href=&quot;methodhandles.lookup#access&quot;&gt;VarHandle이 생성 될 때&lt;/a&gt; VarHandle 액세스 확인이 수행 됩니다 . 따라서 공개되지 않은 변수 또는 공개되지 않은 클래스의 변수에 대한 VarHandles는 일반적으로 비밀로 유지되어야합니다. 신뢰할 수없는 코드에서 사용하는 것이 무해하지 않는 한 신뢰할 수없는 코드로 전달해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="fa5977f51a9207b140c7299bfb2b0081772514c7" translate="yes" xml:space="preserve">
          <source>Unlike with the Core Reflection API, where access is checked every time a reflective method is invoked, method handle access checking is performed &lt;a href=&quot;methodhandles.lookup#access&quot;&gt;when the method handle is created&lt;/a&gt;. In the case of &lt;code&gt;ldc&lt;/code&gt; (see below), access checking is performed as part of linking the constant pool entry underlying the constant method handle.</source>
          <target state="translated">코어 리플렉션 API와 달리, 리플렉션 메소드가 호출 될 때마다 액세스가 점검되는 &lt;a href=&quot;methodhandles.lookup#access&quot;&gt;경우, 메소드 핸들이 작성 될 때&lt;/a&gt; 메소드 핸들 액세스 점검이 수행 됩니다 . 의 경우, &lt;code&gt;ldc&lt;/code&gt; (아래 참조), 액세스 검사는 일정한 방법 핸들 밑에 상수 풀 엔트리를 링크의 일부로서 수행된다.</target>
        </trans-unit>
        <trans-unit id="f7b930b3c2b19b8bab32ef232b9f7ad3a7eb5dbd" translate="yes" xml:space="preserve">
          <source>Unload a zone (Convert the zone to its memory saving state).</source>
          <target state="translated">영역을 언로드합니다 (영역을 메모리 절약 상태로 변환).</target>
        </trans-unit>
        <trans-unit id="9ced809e69a38935a4b381a50f24fcf701f8ae6c" translate="yes" xml:space="preserve">
          <source>Unload a zone (Convert the zone to its memory saving state). The zones are expected to represent a subset of the child elements of the element this view is responsible for. Therefore, the default implementation is to simple remove all the children.</source>
          <target state="translated">영역을 언로드합니다 (영역을 메모리 절약 상태로 변환). 영역은이 뷰가 담당하는 요소의 하위 요소 하위 집합을 나타낼 것으로 예상됩니다. 따라서 기본 구현은 모든 하위 항목을 간단히 제거하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f9137c244b6c709f10e41d30ed4fc70c0a4d0aa3" translate="yes" xml:space="preserve">
          <source>Unloads a particular instrument.</source>
          <target state="translated">특정 기기를 언로드합니다.</target>
        </trans-unit>
        <trans-unit id="0c657143e1b9a1b6b101d699607b42bf38053e0c" translate="yes" xml:space="preserve">
          <source>Unloads all instruments contained in the specified &lt;code&gt;Soundbank&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;Soundbank&lt;/code&gt; 에 포함 된 모든 악기를 언로드 합니다 .</target>
        </trans-unit>
        <trans-unit id="30a18489219249ff1ecae0e657716d7febe1023e" translate="yes" xml:space="preserve">
          <source>Unloads the instruments referenced by the specified patches, from the MIDI sound bank specified.</source>
          <target state="translated">지정된 MIDI 사운드 뱅크에서 지정된 패치가 참조하는 악기를 언로드합니다.</target>
        </trans-unit>
        <trans-unit id="de039abdcd185000f7d3b3bbfcd90756adc75dcc" translate="yes" xml:space="preserve">
          <source>Unmappable characters for the specified charset will be encoded as numeric character references.</source>
          <target state="translated">지정된 문자 세트에 대해 매핑 할 수없는 문자는 숫자 문자 참조로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="de4af2e68cb45a5c7b00268a66368ed52615f452" translate="yes" xml:space="preserve">
          <source>UnmappableCharacterException</source>
          <target state="translated">UnmappableCharacterException</target>
        </trans-unit>
        <trans-unit id="bb9686baaf4248ea34bb57c4a3f0b8cc2c27e037" translate="yes" xml:space="preserve">
          <source>UnmappableCharacterException.getInputLength()</source>
          <target state="translated">UnmappableCharacterException.getInputLength()</target>
        </trans-unit>
        <trans-unit id="b907b974d2209627cc2443409c480967a79754c6" translate="yes" xml:space="preserve">
          <source>UnmappableCharacterException.getMessage()</source>
          <target state="translated">UnmappableCharacterException.getMessage()</target>
        </trans-unit>
        <trans-unit id="4af276d64e9633e1166e21d80392ffd3115351fd" translate="yes" xml:space="preserve">
          <source>UnmarshalException</source>
          <target state="translated">UnmarshalException</target>
        </trans-unit>
        <trans-unit id="97190f3d31fc3482f5d9f7553a983cb03fd62882" translate="yes" xml:space="preserve">
          <source>Unmarshalling XMLSignatures from XML</source>
          <target state="translated">XML에서 XMLSignatures 언 마샬링</target>
        </trans-unit>
        <trans-unit id="cf27dc2c50811cd4caee4bda75589ddf4e398585" translate="yes" xml:space="preserve">
          <source>Unmarshals a new &lt;code&gt;KeyInfo&lt;/code&gt; instance from a mechanism-specific &lt;code&gt;XMLStructure&lt;/code&gt; (ex: &lt;a href=&quot;../../dom/domstructure&quot;&gt;&lt;code&gt;DOMStructure&lt;/code&gt;&lt;/a&gt;) instance.</source>
          <target state="translated">메커니즘 별 &lt;code&gt;XMLStructure&lt;/code&gt; (예 : &lt;a href=&quot;../../dom/domstructure&quot;&gt; &lt;code&gt;DOMStructure&lt;/code&gt; &lt;/a&gt; ) 인스턴스 에서 새 &lt;code&gt;KeyInfo&lt;/code&gt; 인스턴스를 비 정렬 화 합니다.</target>
        </trans-unit>
        <trans-unit id="d89dfac92edb59551c3a265e3cbb507eb67665d1" translate="yes" xml:space="preserve">
          <source>Unmarshals a new &lt;code&gt;XMLSignature&lt;/code&gt; instance from a mechanism-specific &lt;code&gt;XMLStructure&lt;/code&gt; instance.</source>
          <target state="translated">메커니즘 별 &lt;code&gt;XMLStructure&lt;/code&gt; 인스턴스 에서 새 &lt;code&gt;XMLSignature&lt;/code&gt; 인스턴스를 비 정렬 화 합니다.</target>
        </trans-unit>
        <trans-unit id="9264e68a6f8fcfc33a10b7630582ab4a528c4c18" translate="yes" xml:space="preserve">
          <source>Unmarshals a new &lt;code&gt;XMLSignature&lt;/code&gt; instance from a mechanism-specific &lt;code&gt;XMLStructure&lt;/code&gt; instance. This method is useful if you only want to unmarshal (and not validate) an &lt;code&gt;XMLSignature&lt;/code&gt;.</source>
          <target state="translated">메커니즘 별 &lt;code&gt;XMLStructure&lt;/code&gt; 인스턴스 에서 새 &lt;code&gt;XMLSignature&lt;/code&gt; 인스턴스를 비 정렬 화 합니다. 이 메서드는 &lt;code&gt;XMLSignature&lt;/code&gt; 를 비 정렬 화 (유효화하지 않음)하려는 경우에만 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="a28c9a8149612c3363ec6de766a0d24ffb69b6d9" translate="yes" xml:space="preserve">
          <source>Unmarshals a new &lt;code&gt;XMLSignature&lt;/code&gt; instance from a mechanism-specific &lt;code&gt;XMLValidateContext&lt;/code&gt; instance.</source>
          <target state="translated">메커니즘 별 &lt;code&gt;XMLValidateContext&lt;/code&gt; 인스턴스 에서 새 &lt;code&gt;XMLSignature&lt;/code&gt; 인스턴스를 비 정렬 화 합니다.</target>
        </trans-unit>
        <trans-unit id="53794862db63e59705ca9cef84f9a6ade4eb64e2" translate="yes" xml:space="preserve">
          <source>Unmarshals arguments, calls the actual remote object implementation, and marshals the return value or any exception.</source>
          <target state="translated">인수를 마샬링하고 실제 원격 개체 구현을 호출하며 반환 값 또는 예외를 마샬링합니다.</target>
        </trans-unit>
        <trans-unit id="fc0b197f76d2567d502d146bf63cb5c6c3dafc01" translate="yes" xml:space="preserve">
          <source>Unmodifiable Collections</source>
          <target state="translated">수정할 수없는 컬렉션</target>
        </trans-unit>
        <trans-unit id="9888cd38cc00be3b867e2cf5fef490fe2e060cb7" translate="yes" xml:space="preserve">
          <source>Unmodifiable Lists</source>
          <target state="translated">수정할 수없는 목록</target>
        </trans-unit>
        <trans-unit id="5a3a4a9bda1ec34e1373b0458b1bf244d254311b" translate="yes" xml:space="preserve">
          <source>Unmodifiable Maps</source>
          <target state="translated">수정할 수없는지도</target>
        </trans-unit>
        <trans-unit id="62773f99f99c2e6ebc0df44df86ffcf60ac25a44" translate="yes" xml:space="preserve">
          <source>Unmodifiable Sets</source>
          <target state="translated">수정할 수없는 세트</target>
        </trans-unit>
        <trans-unit id="c027fd45d35a8633baaee7b2d01d42c47c1f3c72" translate="yes" xml:space="preserve">
          <source>Unmodifiable View Collections</source>
          <target state="translated">수정할 수없는보기 모음</target>
        </trans-unit>
        <trans-unit id="0981ed31c970e0b0ae65624838150c8fe906dcd8" translate="yes" xml:space="preserve">
          <source>Unmodifiable set of printing attributes for this doc, or null to obtain all attribute values from the job's attribute set.</source>
          <target state="translated">이 문서의 수정 불가능한 인쇄 속성 세트. 또는 작업 속성 세트로부터 모든 속성치를 취득하는 경우는 null</target>
        </trans-unit>
        <trans-unit id="33580b9e4f77504a5fb821467b719f26a9f69bcb" translate="yes" xml:space="preserve">
          <source>Unmodifiable snapshot of this Print Service's attribute set. May be empty, but not null.</source>
          <target state="translated">이 인쇄 서비스 속성 세트의 수정 불가능한 스냅 샷입니다. 비어있을 수 있지만 null은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="43a3885026e7a22a24013c6cc4c23a47666e45e0" translate="yes" xml:space="preserve">
          <source>Unmodifiable view of &lt;code&gt;attributeSet&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;attributeSet&lt;/code&gt; 의 수정 불가능한보기 .</target>
        </trans-unit>
        <trans-unit id="89249f565a70e980148331a9cb87332823132fb1" translate="yes" xml:space="preserve">
          <source>UnmodifiableClassException</source>
          <target state="translated">UnmodifiableClassException</target>
        </trans-unit>
        <trans-unit id="87c35652b172e61d0b0782007d1fc4b94b3a7808" translate="yes" xml:space="preserve">
          <source>UnmodifiableModuleException</source>
          <target state="translated">UnmodifiableModuleException</target>
        </trans-unit>
        <trans-unit id="b0148b4ddc04b861638d9433b81d3e63fc2b1cd3" translate="yes" xml:space="preserve">
          <source>UnmodifiableSetException</source>
          <target state="translated">UnmodifiableSetException</target>
        </trans-unit>
        <trans-unit id="b1f4d182e15c8290ec6ebd664ac962dfb65baccc" translate="yes" xml:space="preserve">
          <source>UnrecoverableEntryException</source>
          <target state="translated">UnrecoverableEntryException</target>
        </trans-unit>
        <trans-unit id="60941909c7b6d513a5a4fa28fa00fc800656ea6e" translate="yes" xml:space="preserve">
          <source>UnrecoverableKeyException</source>
          <target state="translated">UnrecoverableKeyException</target>
        </trans-unit>
        <trans-unit id="052f7a6dcdbaef48ec15aaa96f0e246760aa5cc0" translate="yes" xml:space="preserve">
          <source>Unreferenced</source>
          <target state="translated">Unreferenced</target>
        </trans-unit>
        <trans-unit id="36170a65758d2184bf7c48631e2c9c1cfd9a51e0" translate="yes" xml:space="preserve">
          <source>Unregister default key actions.</source>
          <target state="translated">기본 키 작업을 등록 취소합니다.</target>
        </trans-unit>
        <trans-unit id="d384f45aa427934ef1971555c10a52aa4c7e4e52" translate="yes" xml:space="preserve">
          <source>Unregisters &lt;code&gt;listener&lt;/code&gt; so that it will no longer receive &lt;code&gt;AncestorEvents&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 등록 취소 하여 더 이상 &lt;code&gt;AncestorEvents&lt;/code&gt; 를 수신하지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="e8f85cc9bc78fe1ad809a67dbb358f48436ff1ae" translate="yes" xml:space="preserve">
          <source>Unregisters a keyboard action. This will remove the binding from the &lt;code&gt;ActionMap&lt;/code&gt; (if it exists) as well as the &lt;code&gt;InputMap&lt;/code&gt;s.</source>
          <target state="translated">키보드 동작을 등록 취소합니다. 이것은 &lt;code&gt;InputMap&lt;/code&gt; 뿐만 아니라 &lt;code&gt;ActionMap&lt;/code&gt; (존재한다면) 에서 바인딩을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="acaa0e32e4ff4c9352c31932b246f7c43f903668" translate="yes" xml:space="preserve">
          <source>Unregisters all the bindings in the first tier &lt;code&gt;InputMaps&lt;/code&gt; and &lt;code&gt;ActionMap&lt;/code&gt;.</source>
          <target state="translated">첫 번째 계층 &lt;code&gt;InputMaps&lt;/code&gt; 및 &lt;code&gt;ActionMap&lt;/code&gt; 의 모든 바인딩을 등록 취소합니다 .</target>
        </trans-unit>
        <trans-unit id="e57d796384aa0420bffc466e2f10cd04c547a8ef" translate="yes" xml:space="preserve">
          <source>Unregisters all the bindings in the first tier &lt;code&gt;InputMaps&lt;/code&gt; and &lt;code&gt;ActionMap&lt;/code&gt;. This has the effect of removing any local bindings, and allowing the bindings defined in parent &lt;code&gt;InputMap/ActionMaps&lt;/code&gt; (the UI is usually defined in the second tier) to persist.</source>
          <target state="translated">첫 번째 계층 &lt;code&gt;InputMaps&lt;/code&gt; 및 &lt;code&gt;ActionMap&lt;/code&gt; 의 모든 바인딩을 등록 취소합니다 . 이는 로컬 바인딩을 제거하고 부모 &lt;code&gt;InputMap/ActionMaps&lt;/code&gt; (일반적으로 UI는 두 번째 계층에서 정의 됨)에 정의 된 바인딩 이 지속 되도록 허용하는 효과 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c09d8febbb37fcd48c3f506d665a6441a4217d8" translate="yes" xml:space="preserve">
          <source>Unregisters an MBean from the MBean server.</source>
          <target state="translated">MBean 서버에서 MBean 등록을 취소합니다.</target>
        </trans-unit>
        <trans-unit id="c3021c7c9aa6dada630bb1c7b53e4f589444cbab" translate="yes" xml:space="preserve">
          <source>Unregisters an MBean from the MBean server. The MBean is identified by its object name. Once the method has been invoked, the MBean may no longer be accessed by its object name.</source>
          <target state="translated">MBean 서버에서 MBean을 등록 해제합니다. MBean은 객체 이름으로 식별됩니다. 일단 메소드가 호출되면 해당 오브젝트 이름으로 더 이상 MBean에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b365d2c9ea158e48acfeeeaea3757c55e91c7cf6" translate="yes" xml:space="preserve">
          <source>Unregisters components.</source>
          <target state="translated">구성 요소를 등록 취소합니다.</target>
        </trans-unit>
        <trans-unit id="522995a5cec6989b66b1a14a800c52fe0870ee05" translate="yes" xml:space="preserve">
          <source>Unregisters default key actions.</source>
          <target state="translated">기본 키 작업을 등록 취소합니다.</target>
        </trans-unit>
        <trans-unit id="eca88fddf32d846cc7d732f3d50b64132e0562f3" translate="yes" xml:space="preserve">
          <source>Unregisters keyboard actions installed from &lt;code&gt;installKeyboardActions&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;installKeyboardActions&lt;/code&gt; 에서 설치된 키보드 작업을 등록 취소 합니다 .</target>
        </trans-unit>
        <trans-unit id="6d6f0cbf80c4ccf04df38ce6eaed791b0ec20568" translate="yes" xml:space="preserve">
          <source>Unregisters keyboard actions installed from &lt;code&gt;installKeyboardActions&lt;/code&gt;. This method is called at uninstallUI() time - subclassess should ensure that all of the keyboard actions registered at installUI time are removed here.</source>
          <target state="translated">&lt;code&gt;installKeyboardActions&lt;/code&gt; 에서 설치된 키보드 작업을 등록 취소 합니다 . 이 메서드는 uninstallUI () 시간에 호출됩니다. 하위 클래스에서는 installUI 시간에 등록 된 모든 키보드 작업이 여기에서 제거되었는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="0bf6cd23ef1afc1b1cff24e175be8c742abd9279" translate="yes" xml:space="preserve">
          <source>Unregisters keyboard actions.</source>
          <target state="translated">키보드 동작을 등록 취소합니다.</target>
        </trans-unit>
        <trans-unit id="816f8cad4386afcc105a76a3cd715abbcfd8d593" translate="yes" xml:space="preserve">
          <source>Unregisters listeners.</source>
          <target state="translated">리스너를 등록 취소합니다.</target>
        </trans-unit>
        <trans-unit id="29670c9b050eb9666ba89d0475102b2c5afb88f7" translate="yes" xml:space="preserve">
          <source>Unregisters the cleanable and invokes the cleaning action.</source>
          <target state="translated">정리 가능 항목의 등록을 취소하고 정리 작업을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="28af948778418a95530c27ec58163e1f18984921" translate="yes" xml:space="preserve">
          <source>Unregisters the cleanable and invokes the cleaning action. The cleanable's cleaning action is invoked at most once regardless of the number of calls to &lt;code&gt;clean&lt;/code&gt;.</source>
          <target state="translated">정리 가능 항목의 등록을 취소하고 정리 작업을 호출합니다. cleanable의 정리 작업은 &lt;code&gt;clean&lt;/code&gt; 호출 수에 관계없이 최대 한 번 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="38414019291448df458e0395cbe0f6ebe3a6e63a" translate="yes" xml:space="preserve">
          <source>Unregisters the given observer from the notification list so it will no longer receive change updates.</source>
          <target state="translated">알림 목록에서 지정된 관찰자를 등록 취소하여 더 이상 변경 업데이트를받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="31e9f1a544d7b39d7d12530301536ede8127c3d8" translate="yes" xml:space="preserve">
          <source>Unregisters the given observer from the notification list so it will no longer receive updates.</source>
          <target state="translated">알림 목록에서 지정된 관찰자를 등록 취소하여 더 이상 업데이트를받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b6d96a3e37d2848fb7fb9e9a1b5dff52927b8219" translate="yes" xml:space="preserve">
          <source>Unregisters the supplied transformer.</source>
          <target state="translated">제공된 변압기의 등록을 취소합니다.</target>
        </trans-unit>
        <trans-unit id="a5956613aa795ab5f45aa046e58efe0f302f6d14" translate="yes" xml:space="preserve">
          <source>Unregisters the supplied transformer. Future class definitions will not be shown to the transformer. Removes the most-recently-added matching instance of the transformer. Due to the multi-threaded nature of class loading, it is possible for a transformer to receive calls after it has been removed. Transformers should be written defensively to expect this situation.</source>
          <target state="translated">제공된 변압기를 등록 취소합니다. 미래의 클래스 정의는 변압기에 표시되지 않습니다. 가장 최근에 추가 된 일치하는 변압기 인스턴스를 제거합니다. 클래스 로딩의 다중 스레드 특성으로 인해 변환기가 제거 된 후 변환기가 호출을 수신 할 수 있습니다. 이러한 상황을 예상하려면 변압기를 방어 적으로 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="b7e933af3f14920271cd6e46316876db402bc9fe" translate="yes" xml:space="preserve">
          <source>UnresolvedAddressException</source>
          <target state="translated">UnresolvedAddressException</target>
        </trans-unit>
        <trans-unit id="993f3450a99797343b5c6866214dba99fa98c073" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission</source>
          <target state="translated">UnresolvedPermission</target>
        </trans-unit>
        <trans-unit id="dc8072cff1b6c345dafe8eb713ecc7ce292d7d4a" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.equals()</source>
          <target state="translated">UnresolvedPermission.equals()</target>
        </trans-unit>
        <trans-unit id="8db103911022111a45bf614c0b74b40b6dacbf47" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.getActions()</source>
          <target state="translated">UnresolvedPermission.getActions()</target>
        </trans-unit>
        <trans-unit id="2df2892f625ddd2e1396caeb3e0e53fe16153adb" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.getUnresolvedActions()</source>
          <target state="translated">UnresolvedPermission.getUnresolvedActions()</target>
        </trans-unit>
        <trans-unit id="543fdcb03a6ae15f1bd72dc9195db16ec882cfda" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.getUnresolvedCerts()</source>
          <target state="translated">UnresolvedPermission.getUnresolvedCerts()</target>
        </trans-unit>
        <trans-unit id="857f0597d66e7fb7cc196e42303ba32ba33d1d00" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.getUnresolvedName()</source>
          <target state="translated">UnresolvedPermission.getUnresolvedName()</target>
        </trans-unit>
        <trans-unit id="b2a9bb6ff4a8173382987735162114843e6e799d" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.getUnresolvedType()</source>
          <target state="translated">UnresolvedPermission.getUnresolvedType()</target>
        </trans-unit>
        <trans-unit id="9b6ad3eb817eb73e89c1e5e57d29aeaaa49a214d" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.hashCode()</source>
          <target state="translated">UnresolvedPermission.hashCode()</target>
        </trans-unit>
        <trans-unit id="60a48bb809e7f69080b2da98d8ef5333dbde40df" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.implies()</source>
          <target state="translated">UnresolvedPermission.implies()</target>
        </trans-unit>
        <trans-unit id="fa0446bb36e9a9a2d49b40f9b8902f1cf713a2a7" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.newPermissionCollection()</source>
          <target state="translated">UnresolvedPermission.newPermissionCollection()</target>
        </trans-unit>
        <trans-unit id="b245732f21d55dc5aa33c0df09330fd6937456de" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.toString()</source>
          <target state="translated">UnresolvedPermission.toString()</target>
        </trans-unit>
        <trans-unit id="65b377a625f4d66d09c2650463b476c87aa2a5ad" translate="yes" xml:space="preserve">
          <source>UnsatisfiedLinkError</source>
          <target state="translated">UnsatisfiedLinkError</target>
        </trans-unit>
        <trans-unit id="a2361ecf674f50d91371522f734da2febc052d2f" translate="yes" xml:space="preserve">
          <source>Unschedules and returns, without executing, the next task queued by the current thread but not yet executed, if the current thread is operating in a ForkJoinPool.</source>
          <target state="translated">현재 스레드가 ForkJoinPool에서 작동하는 경우 현재 스레드가 대기열에 넣었지만 아직 실행되지 않은 다음 작업을 실행하지 않고 예약 취소하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="639cfe117b0bc5829d5547c75e3345964ebcdf42" translate="yes" xml:space="preserve">
          <source>Unschedules and returns, without executing, the next task queued by the current thread but not yet executed, if the current thread is operating in a ForkJoinPool. This method is designed primarily to support extensions, and is unlikely to be useful otherwise.</source>
          <target state="translated">현재 스레드가 ForkJoinPool에서 작동중인 경우 현재 스레드에 의해 대기하지만 아직 실행되지 않은 다음 작업을 실행하지 않고 예약을 취소하고 반환합니다. 이 방법은 기본적으로 확장을 지원하도록 설계되었으며 다른 방법으로는 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="873a5033d5e052bb72b255e0e91289c442bed421" translate="yes" xml:space="preserve">
          <source>Unset all fields to undefined.</source>
          <target state="translated">모든 필드를 정의되지 않음으로 설정 해제합니다.</target>
        </trans-unit>
        <trans-unit id="03ff9944c0cfc00cc0b075b50ae3233e7c7c6b8c" translate="yes" xml:space="preserve">
          <source>Unset this field by invoking the setter with a parameter value of &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt;&lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">매개 변수 값이 &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt; &lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt; 인&lt;/a&gt; setter를 호출하여이 필드를 설정 해제하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b56b3b339b4ef2128871fe64434d0b98e9a143a" translate="yes" xml:space="preserve">
          <source>Unset this field by invoking the setter with a parameter value of &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">매개 변수 값이 &lt;code&gt;null&lt;/code&gt; 인 setter를 호출하여이 필드를 설정 해제하십시오 .</target>
        </trans-unit>
        <trans-unit id="602204e308e8a642d57c27213bbcf7dc5b11afae" translate="yes" xml:space="preserve">
          <source>Unsets the designated column as the match column for this &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;RowSet&lt;/code&gt; 개체에 대한 일치 열로 지정된 열을 설정 해제 합니다.</target>
        </trans-unit>
        <trans-unit id="507c06c5db5dee96ec1d8bf2fdf38200f2efebad" translate="yes" xml:space="preserve">
          <source>Unsets the designated columns as the match column for this &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;RowSet&lt;/code&gt; 개체에 대한 일치 열로 지정된 열을 설정 해제 합니다.</target>
        </trans-unit>
        <trans-unit id="a23e574f8a58314d4659c8a2c8f2ff93aea93622" translate="yes" xml:space="preserve">
          <source>Unsets the designated columns as the match columns for this &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;RowSet&lt;/code&gt; 개체에 대한 일치 열로 지정된 열을 설정 해제 합니다.</target>
        </trans-unit>
        <trans-unit id="39a78c4938f8ffc64e4175e0e1e41cffd25d5b76" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotification</source>
          <target state="translated">UnsolicitedNotification</target>
        </trans-unit>
        <trans-unit id="0d2c5900e6c156a2f457e00b402bdd255c7f1b73" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotification.getException()</source>
          <target state="translated">UnsolicitedNotification.getException()</target>
        </trans-unit>
        <trans-unit id="de5f2dcc5277860be3d64ea1ece477149eb9099b" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotification.getReferrals()</source>
          <target state="translated">UnsolicitedNotification.getReferrals()</target>
        </trans-unit>
        <trans-unit id="f9ff84b01932b42a4cbd06e74999ae9b32cd541d" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotificationEvent</source>
          <target state="translated">UnsolicitedNotificationEvent</target>
        </trans-unit>
        <trans-unit id="b8522720341d21ef01b893943f78a1300fdcd02f" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotificationEvent.dispatch()</source>
          <target state="translated">UnsolicitedNotificationEvent.dispatch()</target>
        </trans-unit>
        <trans-unit id="83085a8e790f3e72259d9f8640d793c2579e03b8" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotificationEvent.getNotification()</source>
          <target state="translated">UnsolicitedNotificationEvent.getNotification()</target>
        </trans-unit>
        <trans-unit id="28e179f1d4c9926bbaf600c540ec3f8d7ba3e529" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotificationListener</source>
          <target state="translated">UnsolicitedNotificationListener</target>
        </trans-unit>
        <trans-unit id="1adf511acc6589487b17377bc239588209e494dc" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotificationListener.notificationReceived()</source>
          <target state="translated">UnsolicitedNotificationListener.notificationReceived()</target>
        </trans-unit>
        <trans-unit id="a6e7eb706e115cdaf88206be37eb67b232d007bc" translate="yes" xml:space="preserve">
          <source>Unspecified</source>
          <target state="translated">Unspecified</target>
        </trans-unit>
        <trans-unit id="916302098d9e96ac5a25f92d7ce6da7c2d30b53d" translate="yes" xml:space="preserve">
          <source>Unspecified option type.</source>
          <target state="translated">지정되지 않은 옵션 유형.</target>
        </trans-unit>
        <trans-unit id="b032106135075af895dc113efcc9983bc8f4042a" translate="yes" xml:space="preserve">
          <source>Unspecified reason.</source>
          <target state="translated">불특정 이유.</target>
        </trans-unit>
        <trans-unit id="856e8a9f01e63cf9f0ffe11f4bed3ace17c8beb8" translate="yes" xml:space="preserve">
          <source>Unsuccessful locking and unlocking operations, and reentrant locking/unlocking operations, do not require any memory synchronization effects.</source>
          <target state="translated">실패한 잠금 및 잠금 해제 조작 및 재진입 잠금 / 잠금 해제 조작에는 메모리 동기화 효과가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="61f7a7b7dcf08179d24d4b98832b00e952f9efc4" translate="yes" xml:space="preserve">
          <source>Unsupported QOP value.</source>
          <target state="translated">지원되지 않는 QOP 값입니다.</target>
        </trans-unit>
        <trans-unit id="4ae62e051adbfe89ca4967c1592db17c578b85c6" translate="yes" xml:space="preserve">
          <source>Unsupported mechanism requested.</source>
          <target state="translated">지원되지 않는 메커니즘이 요청되었습니다.</target>
        </trans-unit>
        <trans-unit id="ce12c7ac2564e86cd53c8de20d527590cfd46dbd" translate="yes" xml:space="preserve">
          <source>UnsupportedAddressTypeException</source>
          <target state="translated">UnsupportedAddressTypeException</target>
        </trans-unit>
        <trans-unit id="62bde61003e236403f48a11ba855dfd0262f1063" translate="yes" xml:space="preserve">
          <source>UnsupportedAudioFileException</source>
          <target state="translated">UnsupportedAudioFileException</target>
        </trans-unit>
        <trans-unit id="ba27428dedd31e88f4f6e6e0624e2677091f7bce" translate="yes" xml:space="preserve">
          <source>UnsupportedCallbackException</source>
          <target state="translated">UnsupportedCallbackException</target>
        </trans-unit>
        <trans-unit id="31ede54fb0271960cfb827c244e26ad4774a9279" translate="yes" xml:space="preserve">
          <source>UnsupportedCallbackException.getCallback()</source>
          <target state="translated">UnsupportedCallbackException.getCallback()</target>
        </trans-unit>
        <trans-unit id="5aaf87d4a23af3d541d8bd2e06904c586d11b6e6" translate="yes" xml:space="preserve">
          <source>UnsupportedCharsetException</source>
          <target state="translated">UnsupportedCharsetException</target>
        </trans-unit>
        <trans-unit id="d8ddfadf3a5141f3204757f25629c90144c81acf" translate="yes" xml:space="preserve">
          <source>UnsupportedCharsetException.getCharsetName()</source>
          <target state="translated">UnsupportedCharsetException.getCharsetName()</target>
        </trans-unit>
        <trans-unit id="34ecc901794367e31d357b69fb8e4a9ac50b45a6" translate="yes" xml:space="preserve">
          <source>UnsupportedClassVersionError</source>
          <target state="translated">UnsupportedClassVersionError</target>
        </trans-unit>
        <trans-unit id="156ae2a23745cd8b01ab1f9ae129dda14ff67809" translate="yes" xml:space="preserve">
          <source>UnsupportedEncodingException</source>
          <target state="translated">UnsupportedEncodingException</target>
        </trans-unit>
        <trans-unit id="8053faa4d65a89739fed9d6925425d9d97efac2d" translate="yes" xml:space="preserve">
          <source>UnsupportedFlavorException</source>
          <target state="translated">UnsupportedFlavorException</target>
        </trans-unit>
        <trans-unit id="1557068d6653e42d4a8d2337232cca395f8fb9dd" translate="yes" xml:space="preserve">
          <source>UnsupportedLookAndFeelException</source>
          <target state="translated">UnsupportedLookAndFeelException</target>
        </trans-unit>
        <trans-unit id="d6b9cc70af4626956ac004db8653f110603b7231" translate="yes" xml:space="preserve">
          <source>UnsupportedOperationException</source>
          <target state="translated">UnsupportedOperationException</target>
        </trans-unit>
        <trans-unit id="25b3cdfbf8bda73a3b2da7074e5f77f3a06d5b4d" translate="yes" xml:space="preserve">
          <source>UnsupportedTemporalTypeException</source>
          <target state="translated">UnsupportedTemporalTypeException</target>
        </trans-unit>
        <trans-unit id="7a4bbb6c87d4e0868fa7881db7f5a0dda74bd625" translate="yes" xml:space="preserve">
          <source>UnsupportedTemporalTypeException indicates that a ChronoField or ChronoUnit is not supported for a Temporal class.</source>
          <target state="translated">UnsupportedTemporalTypeException은 ChronoField 또는 ChronoUnit이 Temporal 클래스에 대해 지원되지 않음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bdd266349196cfa47304ed7ee3fa47009995b710" translate="yes" xml:space="preserve">
          <source>Until that point, a &lt;code&gt;EventContext&lt;/code&gt; instance that has outstanding listeners will continue to exist and be maintained by the service provider.</source>
          <target state="translated">이 시점까지 미해결 리스너가 있는 &lt;code&gt;EventContext&lt;/code&gt; 인스턴스는 계속 존재하며 서비스 제공자가 유지 보수합니다.</target>
        </trans-unit>
        <trans-unit id="93395a7fa7e0ef709ba04ecdff1d9caf2f1b4d77" translate="yes" xml:space="preserve">
          <source>Until that point, an &lt;code&gt;EventContext&lt;/code&gt; instance that has outstanding listeners will continue to exist and be maintained by the service provider.</source>
          <target state="translated">그 때까지 미해결 리스너가 있는 &lt;code&gt;EventContext&lt;/code&gt; 인스턴스는 계속 존재하며 서비스 제공 업체에 의해 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="63771c017a3fb4938c53ebd2d93e7c80855dca74" translate="yes" xml:space="preserve">
          <source>Until the initial handshake has completed, this method returns a session object which reports an invalid cipher suite of &quot;SSL_NULL_WITH_NULL_NULL&quot;.</source>
          <target state="translated">초기 핸드 셰이크가 완료 될 때까지이 메소드는 유효하지 않은 &quot;SSL_NULL_WITH_NULL_NULL&quot;암호 그룹을보고하는 세션 오브젝트를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f05ddabacebeb4feaefee26e18f6f2ed12231ee0" translate="yes" xml:space="preserve">
          <source>Unused reason.</source>
          <target state="translated">사용하지 않은 이유.</target>
        </trans-unit>
        <trans-unit id="ae0b41f702f02745f38f76067d2c01850f5ea590" translate="yes" xml:space="preserve">
          <source>Unwrap a previously wrapped key.</source>
          <target state="translated">이전에 래핑 된 키를 풉니 다.</target>
        </trans-unit>
        <trans-unit id="a8416bdd8ad923c8869f2fadf0cb740bd5bf758d" translate="yes" xml:space="preserve">
          <source>Unwraps a byte array received from the client.</source>
          <target state="translated">클라이언트로부터받은 바이트 배열을 풉니 다.</target>
        </trans-unit>
        <trans-unit id="11b3e1d5ed89d2029a6bfdf3f88d88d2e9569761" translate="yes" xml:space="preserve">
          <source>Unwraps a byte array received from the client. This method can be called only after the authentication exchange has completed (i.e., when &lt;code&gt;isComplete()&lt;/code&gt; returns true) and only if the authentication exchange has negotiated integrity and/or privacy as the quality of protection; otherwise, an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown.</source>
          <target state="translated">클라이언트로부터받은 바이트 배열을 언랩합니다. 이 메소드는 인증 교환이 완료된 후 (즉, &lt;code&gt;isComplete()&lt;/code&gt; 가 true를 리턴 할 때 ) 인증 교환이 무결성 및 / 또는 프라이버시를 보호 품질로 협상 한 경우 에만 호출 할 수 있습니다 . 그렇지 않으면 &lt;code&gt;IllegalStateException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7d46e8ef492feb50f6bd19acc5796c50101885e3" translate="yes" xml:space="preserve">
          <source>Unwraps a byte array received from the server.</source>
          <target state="translated">서버에서받은 바이트 배열을 풉니 다.</target>
        </trans-unit>
        <trans-unit id="78550834f59fc38ca607cfc38bdaceb81240f89c" translate="yes" xml:space="preserve">
          <source>Unwraps a byte array received from the server. This method can be called only after the authentication exchange has completed (i.e., when &lt;code&gt;isComplete()&lt;/code&gt; returns true) and only if the authentication exchange has negotiated integrity and/or privacy as the quality of protection; otherwise, an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown.</source>
          <target state="translated">서버로부터받은 바이트 배열을 언랩합니다. 이 메소드는 인증 교환이 완료된 후 (즉, &lt;code&gt;isComplete()&lt;/code&gt; 가 true를 리턴 할 때 ) 인증 교환이 무결성 및 / 또는 프라이버시를 보호 품질로 협상 한 경우 에만 호출 할 수 있습니다 . 그렇지 않으면 &lt;code&gt;IllegalStateException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0cf0b8eee442a0f229d00982c5c2c8c5795126d1" translate="yes" xml:space="preserve">
          <source>Up folder icon</source>
          <target state="translated">위로 폴더 아이콘</target>
        </trans-unit>
        <trans-unit id="5ee3ef26193eedd8ecf88bfb7bbf33cbfb089795" translate="yes" xml:space="preserve">
          <source>Update any cached values that come from attributes.</source>
          <target state="translated">속성에서 가져온 캐시 된 값을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="d9a59815264e7ebf6cafa4a4b9b3baf2ce46cf37" translate="yes" xml:space="preserve">
          <source>Update button mnemonic</source>
          <target state="translated">업데이트 버튼 니모닉</target>
        </trans-unit>
        <trans-unit id="09436996bd6fde479f02abbc0dcbd82006abbac9" translate="yes" xml:space="preserve">
          <source>Update button text</source>
          <target state="translated">버튼 텍스트 업데이트</target>
        </trans-unit>
        <trans-unit id="9fd1be1c0b5ad8284f946b0f56ae1e084254de77" translate="yes" xml:space="preserve">
          <source>Update button tool tip text</source>
          <target state="translated">버튼 도구 설명 텍스트 업데이트</target>
        </trans-unit>
        <trans-unit id="d27c2f46d22ceda870d45ff6c92c3d80413775fa" translate="yes" xml:space="preserve">
          <source>Update elemVec with the list of elements that are part of the this contentModel.</source>
          <target state="translated">이 contentModel의 일부인 요소 목록으로 elemVec을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="7ac07052b6743c76e2afe688bd6960ebbf1093a6" translate="yes" xml:space="preserve">
          <source>Update or extend the validity period for this &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Object&lt;/code&gt; 의 유효 기간을 갱신 또는 연장합니다 .</target>
        </trans-unit>
        <trans-unit id="8485d84b96979963a0a42a01fcabd3326cebc5c9" translate="yes" xml:space="preserve">
          <source>Update the child state.</source>
          <target state="translated">자식 상태를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="96244221404e9d55c54c6d9ea25aaa821ca449bb" translate="yes" xml:space="preserve">
          <source>Update the child state. This should be called by the thread that desires to spend time updating the child state (intended to be the layout thread).</source>
          <target state="translated">자식 상태를 업데이트합니다. 이는 자식 상태 (레이아웃 스레드가 될 예정)를 업데이트하는 데 시간을 소비하려는 스레드에 의해 호출되어야합니다.</target>
        </trans-unit>
        <trans-unit id="03532a99f1292acd6805ba69ffd167da421c4eb6" translate="yes" xml:space="preserve">
          <source>Update the digest using the specified ByteBuffer.</source>
          <target state="translated">지정된 ByteBuffer를 사용하여 다이제스트를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="015c15fc94e179d73d08ee8528df08ee4c9a777f" translate="yes" xml:space="preserve">
          <source>Update the digest using the specified ByteBuffer. The digest is updated using the &lt;code&gt;input.remaining()&lt;/code&gt; bytes starting at &lt;code&gt;input.position()&lt;/code&gt;. Upon return, the buffer's position will be equal to its limit; its limit will not have changed.</source>
          <target state="translated">지정된 ByteBuffer를 사용하여 요약을 업데이트하십시오. 다이제스트가 갱신된다 &lt;code&gt;input.remaining()&lt;/code&gt; 에서 시작하여 바이트 &lt;code&gt;input.position()&lt;/code&gt; . 돌아 왔을 때, 버퍼의 위치는 한계와 같습니다. 한도는 변경되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="1d0a8faff1c568d10eda2dc06538faf97c929c4b" translate="yes" xml:space="preserve">
          <source>Update the flow on the given FlowView.</source>
          <target state="translated">지정된 FlowView에서 흐름을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="ea455ac3bf4f8ca7f93f74291b9971f29c75db3b" translate="yes" xml:space="preserve">
          <source>Update the flow on the given FlowView. By default, this causes all of the rows (child views) to be rebuilt to match the given constraints for each row. This is called by a FlowView.layout to update the child views in the flow.</source>
          <target state="translated">지정된 FlowView에서 흐름을 업데이트합니다. 기본적으로 이로 인해 모든 행 (하위 뷰)이 각 행에 대해 지정된 제약 조건과 일치하도록 다시 작성됩니다. FlowView.layout에 의해 호출되어 흐름의 자식 뷰를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="e7f9653e607a14b0a2d3ff91ee0071f1ae9fb3a3" translate="yes" xml:space="preserve">
          <source>Update the layout in response to receiving notification of change from the model.</source>
          <target state="translated">모델에서 변경 알림을 받으면 레이아웃을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="1f3507be1e71f4645279fe596296d85f9abe1039" translate="yes" xml:space="preserve">
          <source>Update the layout in response to receiving notification of change from the model. This is implemented to note the change on the ChildLocator so that offsets of the children will be correctly computed.</source>
          <target state="translated">모델에서 변경 알림을 받으면 레이아웃을 업데이트합니다. 이것은 ChildLocator의 변경 사항을 기록하기 위해 구현되어 자식 오프셋이 올바르게 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="0e90a75f3df5a0961ddd7682d37e6063c32f9dbc" translate="yes" xml:space="preserve">
          <source>Update the relevant ProtectionDomains with the Principals from the &lt;code&gt;Subject&lt;/code&gt; associated with this &lt;code&gt;SubjectDomainCombiner&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; 와 연관된 &lt;code&gt;Subject&lt;/code&gt; 의 프린시 펄로 관련 ProtectionDomain을 업데이트하십시오 .</target>
        </trans-unit>
        <trans-unit id="1712546b9c603cf14f126bf9f95b249645e67389" translate="yes" xml:space="preserve">
          <source>UpdateAction</source>
          <target state="translated">UpdateAction</target>
        </trans-unit>
        <trans-unit id="08a7f27acfc0fc915fe5793900dbe8acea95a9a5" translate="yes" xml:space="preserve">
          <source>Updates (replace) the access control list.</source>
          <target state="translated">액세스 제어 목록을 업데이트 (대체)합니다.</target>
        </trans-unit>
        <trans-unit id="43e8fbf7c486a2376b394d065e2c8171ba0275cf" translate="yes" xml:space="preserve">
          <source>Updates a file's last modified time attribute.</source>
          <target state="translated">파일의 마지막 수정 시간 속성을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="e0084475da4cab72cdc6360b30feaa6f306ab6f7" translate="yes" xml:space="preserve">
          <source>Updates a file's last modified time attribute. The file time is converted to the epoch and precision supported by the file system. Converting from finer to coarser granularities result in precision loss. The behavior of this method when attempting to set the last modified time when it is not supported by the file system or is outside the range supported by the underlying file store is not defined. It may or not fail by throwing an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">파일의 마지막 수정 시간 속성을 업데이트합니다. 파일 시간은 파일 시스템에서 지원하는 시대와 정밀도로 변환됩니다. 더 미세한 입자를 더 세밀한 입자로 변환하면 정밀한 손실이 발생합니다. 파일 시스템에서 지원하지 않거나 기본 파일 저장소에서 지원하는 범위를 벗어난 마지막 수정 시간을 설정하려고 할 때이 방법의 동작은 정의되지 않습니다. &lt;code&gt;IOException&lt;/code&gt; 을 발생시켜 실패 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="854b2373637371a42d6483d8da722a1d0c29b97d" translate="yes" xml:space="preserve">
          <source>Updates a scroll bar display policy.</source>
          <target state="translated">스크롤 막대 표시 정책을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="0111a6164005f70a261b8589f8a6b47a1c5cdfd1" translate="yes" xml:space="preserve">
          <source>Updates any document structure as a result of text removal.</source>
          <target state="translated">텍스트 제거의 결과로 모든 문서 구조를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="346a9d071a5297c484c1e77ab9dbdc5efd086ac5" translate="yes" xml:space="preserve">
          <source>Updates any document structure as a result of text removal. This method is called after the text has been removed from the Content. This will happen within a write lock. If a subclass of this class reimplements this method, it should delegate to the superclass as well.</source>
          <target state="translated">텍스트 제거의 결과로 모든 문서 구조를 업데이트합니다. 이 메서드는 콘텐츠에서 텍스트가 제거 된 후에 호출됩니다. 이것은 쓰기 잠금 내에서 발생합니다. 이 클래스의 하위 클래스가이 메서드를 다시 구현하는 경우 수퍼 클래스에도 위임해야합니다.</target>
        </trans-unit>
        <trans-unit id="e31b888492babab40c12177cf890dec2958dff17" translate="yes" xml:space="preserve">
          <source>Updates any document structure as a result of text removal. This method is called before the text is actually removed from the Content. This will happen within a write lock. If a subclass of this class reimplements this method, it should delegate to the superclass as well.</source>
          <target state="translated">텍스트 제거의 결과로 모든 문서 구조를 업데이트합니다. 이 메서드는 텍스트가 실제로 콘텐츠에서 제거되기 전에 호출됩니다. 이것은 쓰기 잠금 내에서 발생합니다. 이 클래스의 하위 클래스가이 메서드를 다시 구현하는 경우 수퍼 클래스에도 위임해야합니다.</target>
        </trans-unit>
        <trans-unit id="ee95ab6673c46a9b495005be0131353e0f8bd6c7" translate="yes" xml:space="preserve">
          <source>Updates any document structure as a result of text removal. This will happen within a write lock. Since the structure represents a line map, this just checks to see if the removal spans lines. If it does, the two lines outside of the removal area are joined together.</source>
          <target state="translated">텍스트 제거의 결과로 모든 문서 구조를 업데이트합니다. 이것은 쓰기 잠금 내에서 발생합니다. 구조가 라인 맵을 나타내므로 제거가 라인에 걸쳐 있는지 확인하기 만하면됩니다. 그렇다면 제거 영역 외부의 두 선이 함께 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="f38c2deb262128000857c6c4df69c21469bc3743" translate="yes" xml:space="preserve">
          <source>Updates any or all of the file's last modified time, last access time, and create time attributes.</source>
          <target state="translated">파일의 마지막 수정 시간, 마지막 액세스 시간 중 일부 또는 전부를 업데이트하고 시간 속성을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="17e7b4f92dac5f6f499effa03d17c8fed89500f4" translate="yes" xml:space="preserve">
          <source>Updates column header.</source>
          <target state="translated">열 헤더를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="02222503796df678d3a01e6c634d53f7aac59d53" translate="yes" xml:space="preserve">
          <source>Updates document structure as a result of text insertion.</source>
          <target state="translated">텍스트 삽입의 결과로 문서 구조를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="4af660e7ad9a3c6d96e2964ed2ea6bf3f3593eb2" translate="yes" xml:space="preserve">
          <source>Updates document structure as a result of text insertion. This will happen within a write lock. If a subclass of this class reimplements this method, it should delegate to the superclass as well.</source>
          <target state="translated">텍스트 삽입의 결과로 문서 구조를 업데이트합니다. 이것은 쓰기 잠금 내에서 발생합니다. 이 클래스의 하위 클래스가이 메서드를 다시 구현하는 경우 수퍼 클래스에도 위임해야합니다.</target>
        </trans-unit>
        <trans-unit id="b69a3b30150664546ce810a0b6a2549674ebe7ab" translate="yes" xml:space="preserve">
          <source>Updates document structure as a result of text insertion. This will happen within a write lock. Since this document simply maps out lines, we refresh the line map.</source>
          <target state="translated">텍스트 삽입의 결과로 문서 구조를 업데이트합니다. 이것은 쓰기 잠금 내에서 발생합니다. 이 문서는 단순히 선을 매핑하기 때문에 선 맵을 새로 고칩니다.</target>
        </trans-unit>
        <trans-unit id="193c5c7b5a891285fd95f93314b81358fd198cd4" translate="yes" xml:space="preserve">
          <source>Updates document structure as a result of text insertion. This will happen within a write lock. This implementation simply parses the inserted content for line breaks and builds up a set of instructions for the element buffer.</source>
          <target state="translated">텍스트 삽입의 결과로 문서 구조를 업데이트합니다. 이것은 쓰기 잠금 내에서 발생합니다. 이 구현은 삽입 된 내용을 줄 바꿈으로 구문 분석하고 요소 버퍼에 대한 일련의 명령을 구축합니다.</target>
        </trans-unit>
        <trans-unit id="2e87ef61998907aa3becd9920062f8d5ac59050c" translate="yes" xml:space="preserve">
          <source>Updates document structure as a result of text removal.</source>
          <target state="translated">텍스트 제거의 결과로 문서 구조를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="f637e666aa1f00c24112b4bad6f639c4413fb32b" translate="yes" xml:space="preserve">
          <source>Updates how much each depth should be offset by.</source>
          <target state="translated">각 깊이가 얼마나 오프셋되어야하는지 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="44dca201c765a07a3180ce394af64a0e73d09a71" translate="yes" xml:space="preserve">
          <source>Updates made to a file may be &lt;a href=&quot;#force(boolean)&quot;&gt;&lt;code&gt;&lt;i&gt;forced
   out&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; to the underlying storage device, ensuring that data are not lost in the event of a system crash.</source>
          <target state="translated">파일 업데이트는 기본 저장 장치 로 &lt;a href=&quot;#force(boolean)&quot;&gt; &lt;code&gt;&lt;i&gt;forced out&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 전송되어 시스템 충돌시 데이터가 손실되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ee020c412f92d97a56c3f40538a8a97333b064cc" translate="yes" xml:space="preserve">
          <source>Updates made to a file may be &lt;a href=&quot;asynchronousfilechannel#force-boolean-&quot;&gt;&lt;code&gt;&lt;i&gt;forced
   out&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; to the underlying storage device, ensuring that data are not lost in the event of a system crash.</source>
          <target state="translated">파일 업데이트는 기본 저장 장치에 &lt;a href=&quot;asynchronousfilechannel#force-boolean-&quot;&gt; &lt;code&gt;&lt;i&gt;forced out&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 로 적용되어 시스템 충돌시 데이터가 손실되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="aed5e31389f67cfc5ddf35ddc575417ddb12a4cc" translate="yes" xml:space="preserve">
          <source>Updates made to a file may be &lt;a href=&quot;filechannel#force-boolean-&quot;&gt;&lt;code&gt;&lt;i&gt;forced
   out&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; to the underlying storage device, ensuring that data are not lost in the event of a system crash.</source>
          <target state="translated">파일 업데이트는 기본 저장 장치에 &lt;a href=&quot;filechannel#force-boolean-&quot;&gt; &lt;code&gt;&lt;i&gt;forced out&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 로 적용되어 시스템 충돌시 데이터가 손실되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="c66c19b3cad76dcb93b355d5353a6961afe3567e" translate="yes" xml:space="preserve">
          <source>Updates module &lt;code&gt;source&lt;/code&gt; in the layer to export a package to module &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">계층의 모듈 &lt;code&gt;source&lt;/code&gt; 를 업데이트 하여 패키지를 모듈 &lt;code&gt;target&lt;/code&gt; 으로 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="8eca861c1ed381eff1b6bedbabece3f3daaa9b5b" translate="yes" xml:space="preserve">
          <source>Updates module &lt;code&gt;source&lt;/code&gt; in the layer to export a package to module &lt;code&gt;target&lt;/code&gt;. This method is a no-op if &lt;code&gt;source&lt;/code&gt; already exports the package to at least &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">계층의 모듈 &lt;code&gt;source&lt;/code&gt; 를 업데이트 하여 패키지를 모듈 &lt;code&gt;target&lt;/code&gt; 으로 내 보냅니다 . 이 방법은 &lt;code&gt;source&lt;/code&gt; 이미 적어도 &lt;code&gt;target&lt;/code&gt; 에 패키지를 내 보낸 경우 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="5a13b94e525e0217bef06d5c9446a93706fc0585" translate="yes" xml:space="preserve">
          <source>Updates module &lt;code&gt;source&lt;/code&gt; in the layer to open a package to module &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">계층의 모듈 &lt;code&gt;source&lt;/code&gt; 를 업데이트 하여 &lt;code&gt;target&lt;/code&gt; 모듈에 대한 패키지를 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="a806dbf45e3441adb41432f43bb23f22e4775ae9" translate="yes" xml:space="preserve">
          <source>Updates module &lt;code&gt;source&lt;/code&gt; in the layer to open a package to module &lt;code&gt;target&lt;/code&gt;. This method is a no-op if &lt;code&gt;source&lt;/code&gt; already opens the package to at least &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">계층의 모듈 &lt;code&gt;source&lt;/code&gt; 를 업데이트 하여 &lt;code&gt;target&lt;/code&gt; 모듈에 대한 패키지를 엽니 다 . 이 방법은 &lt;code&gt;source&lt;/code&gt; 이미 적어도 &lt;code&gt;target&lt;/code&gt; 패키지를 연 경우 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2cb80c5ec629df9e1cb1f4671f36858358bd5a99" translate="yes" xml:space="preserve">
          <source>Updates module &lt;code&gt;source&lt;/code&gt; in the layer to read module &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">모듈 &lt;code&gt;target&lt;/code&gt; 을 읽도록 계층의 모듈 &lt;code&gt;source&lt;/code&gt; 를 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="7941f3c7315a791f61db7055631d7cbf155a8163" translate="yes" xml:space="preserve">
          <source>Updates module &lt;code&gt;source&lt;/code&gt; in the layer to read module &lt;code&gt;target&lt;/code&gt;. This method is a no-op if &lt;code&gt;source&lt;/code&gt; already reads &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">모듈 &lt;code&gt;target&lt;/code&gt; 을 읽도록 계층의 모듈 &lt;code&gt;source&lt;/code&gt; 를 업데이트합니다 . &lt;code&gt;source&lt;/code&gt; 이미 &lt;code&gt;target&lt;/code&gt; 을 읽는 경우이 메서드는 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7104f4f7158604dad1be5239bd1b2ae0ca7333cd" translate="yes" xml:space="preserve">
          <source>Updates row header.</source>
          <target state="translated">행 헤더를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="e0610822940fbbd6bc91d36feda8f3cc85ea0d6c" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;TextMeasurer&lt;/code&gt; after a single character has been deleted from the paragraph currently represented by this &lt;code&gt;TextMeasurer&lt;/code&gt;.</source>
          <target state="translated">현재이 &lt;code&gt;TextMeasurer&lt;/code&gt; 가 나타내는 단락에서 단일 문자가 삭제 된 후 &lt;code&gt;TextMeasurer&lt;/code&gt; 를 업데이트 합니다 .</target>
        </trans-unit>
        <trans-unit id="9712e9ab4c4011806a1eb0f497f411fa8c6369c8" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;TextMeasurer&lt;/code&gt; after a single character has been deleted from the paragraph currently represented by this &lt;code&gt;TextMeasurer&lt;/code&gt;. After this call, this &lt;code&gt;TextMeasurer&lt;/code&gt; is equivalent to a new &lt;code&gt;TextMeasurer&lt;/code&gt; created from the text; however, it will usually be more efficient to update an existing &lt;code&gt;TextMeasurer&lt;/code&gt; than to create a new one from scratch.</source>
          <target state="translated">현재이 &lt;code&gt;TextMeasurer&lt;/code&gt; 가 나타내는 단락에서 단일 문자가 삭제 된 후 &lt;code&gt;TextMeasurer&lt;/code&gt; 를 업데이트 합니다 . 이 호출 후이 &lt;code&gt;TextMeasurer&lt;/code&gt; 는 텍스트에서 만든 새 &lt;code&gt;TextMeasurer&lt;/code&gt; 와 동일 합니다. 그러나 일반적으로 처음부터 새로 만드는 것보다 기존 &lt;code&gt;TextMeasurer&lt;/code&gt; 를 업데이트하는 것이 더 효율적 입니다.</target>
        </trans-unit>
        <trans-unit id="913a0fb615a5caa311031d5e9e7fde8a53dbed38" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;TextMeasurer&lt;/code&gt; after a single character has been inserted into the paragraph currently represented by this &lt;code&gt;TextMeasurer&lt;/code&gt;.</source>
          <target state="translated">현재이 &lt;code&gt;TextMeasurer&lt;/code&gt; 가 나타내는 단락에 단일 문자가 삽입 된 후 &lt;code&gt;TextMeasurer&lt;/code&gt; 를 업데이트 합니다 .</target>
        </trans-unit>
        <trans-unit id="019cb0b590fabb7bdd4c04c9a3a641f7c4da61f7" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;TextMeasurer&lt;/code&gt; after a single character has been inserted into the paragraph currently represented by this &lt;code&gt;TextMeasurer&lt;/code&gt;. After this call, this &lt;code&gt;TextMeasurer&lt;/code&gt; is equivalent to a new &lt;code&gt;TextMeasurer&lt;/code&gt; created from the text; however, it will usually be more efficient to update an existing &lt;code&gt;TextMeasurer&lt;/code&gt; than to create a new one from scratch.</source>
          <target state="translated">현재이 &lt;code&gt;TextMeasurer&lt;/code&gt; 가 나타내는 단락에 단일 문자가 삽입 된 후 &lt;code&gt;TextMeasurer&lt;/code&gt; 를 업데이트 합니다 . 이 호출 후이 &lt;code&gt;TextMeasurer&lt;/code&gt; 는 텍스트에서 만든 새 &lt;code&gt;TextMeasurer&lt;/code&gt; 와 동일 합니다. 그러나 일반적으로 처음부터 새로 만드는 것보다 기존 &lt;code&gt;TextMeasurer&lt;/code&gt; 를 업데이트하는 것이 더 효율적 입니다.</target>
        </trans-unit>
        <trans-unit id="b562a1dc50b60cef1a7a195d07460cbf20de6fd7" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;expandedState&lt;/code&gt;.</source>
          <target state="translated">업데이트 &lt;code&gt;expandedState&lt;/code&gt; 은 .</target>
        </trans-unit>
        <trans-unit id="6975676ead3b683ad28e957675c64922d85a2cd0" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;preferredSize&lt;/code&gt; instance variable, which is returned from &lt;code&gt;getPreferredSize()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getPreferredSize()&lt;/code&gt; 에서 반환 된 &lt;code&gt;preferredSize&lt;/code&gt; 인스턴스 변수를 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="3627c0ccaa61ce39974d9c90e37061983f6380c5" translate="yes" xml:space="preserve">
          <source>Updates the CRC-32 checksum with the bytes from the specified buffer.</source>
          <target state="translated">지정된 버퍼의 바이트로 CRC-32 체크섬을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="c1ed44b9c1fdacbe42c3e509bc355c800737a729" translate="yes" xml:space="preserve">
          <source>Updates the CRC-32 checksum with the bytes from the specified buffer. The checksum is updated with the remaining bytes in the buffer, starting at the buffer's position. Upon return, the buffer's position will be updated to its limit; its limit will not have been changed.</source>
          <target state="translated">지정된 버퍼의 바이트로 CRC-32 체크섬을 업데이트합니다. 체크섬은 버퍼의 위치에서 시작하여 버퍼의 나머지 바이트로 업데이트됩니다. 돌아 오면 버퍼의 위치가 한계까지 업데이트됩니다. 한계는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="902b17d91a80789a54572305df06dd47a83ae122" translate="yes" xml:space="preserve">
          <source>Updates the CRC-32 checksum with the specified array of bytes.</source>
          <target state="translated">지정된 바이트 배열로 CRC-32 체크섬을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="e5a613fc7d57442650af52c4062e3960a89bea07" translate="yes" xml:space="preserve">
          <source>Updates the CRC-32 checksum with the specified byte (the low eight bits of the argument b).</source>
          <target state="translated">지정된 바이트 (인수 b의 하위 8 비트)로 CRC-32 체크섬을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="1d10ea52c2fbef54ed07d51cf879986a141fd6a4" translate="yes" xml:space="preserve">
          <source>Updates the CRC-32C checksum with the bytes from the specified buffer.</source>
          <target state="translated">CRC-32C 체크섬을 지정된 버퍼의 바이트로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="b3590069d144d662d9a4130a1055871e0e8495e8" translate="yes" xml:space="preserve">
          <source>Updates the CRC-32C checksum with the bytes from the specified buffer. The checksum is updated with the remaining bytes in the buffer, starting at the buffer's position. Upon return, the buffer's position will be updated to its limit; its limit will not have been changed.</source>
          <target state="translated">CRC-32C 체크섬을 지정된 버퍼의 바이트로 업데이트합니다. 체크섬은 버퍼의 위치에서 시작하여 버퍼의 나머지 바이트로 업데이트됩니다. 돌아 오면 버퍼의 위치가 한계까지 업데이트됩니다. 한계는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c360869ceb9d8773fd0ab58955f195f32d7ae9f5" translate="yes" xml:space="preserve">
          <source>Updates the CRC-32C checksum with the specified array of bytes.</source>
          <target state="translated">지정된 바이트 배열로 CRC-32C 체크섬을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="1386275938ba6094637831d9c3363bea2667cb5f" translate="yes" xml:space="preserve">
          <source>Updates the CRC-32C checksum with the specified byte (the low eight bits of the argument b).</source>
          <target state="translated">CRC-32C 체크섬을 지정된 바이트 (인수 b의 하위 8 비트)로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="3252d90c70d5db939b887d923b232412aa79a333" translate="yes" xml:space="preserve">
          <source>Updates the TreeState in response to nodes expanding/collapsing.</source>
          <target state="translated">노드 확장 / 축소에 대한 응답으로 TreeState를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="4662ffa3859dafd950f1ba1ffe28ef649ff0931c" translate="yes" xml:space="preserve">
          <source>Updates the UIs for the labels in the label table by calling &lt;code&gt;updateUI&lt;/code&gt; on each label.</source>
          <target state="translated">각 레이블에서 &lt;code&gt;updateUI&lt;/code&gt; 를 호출하여 레이블 테이블의 레이블에 대한 UI를 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="0fbd68ba8285481434b7be0f65e90a040b02ae2c" translate="yes" xml:space="preserve">
          <source>Updates the UIs for the labels in the label table by calling &lt;code&gt;updateUI&lt;/code&gt; on each label. The UIs are updated from the current look and feel. The labels are also set to their preferred size.</source>
          <target state="translated">각 레이블에서 &lt;code&gt;updateUI&lt;/code&gt; 를 호출하여 레이블 테이블의 레이블에 대한 UI를 업데이트합니다 . UI는 현재 룩앤필에서 업데이트됩니다. 레이블도 원하는 크기로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="056b4b8a01f4466ff5c852793ade1003eb4b18f7" translate="yes" xml:space="preserve">
          <source>Updates the array reference that will be returned by subsequent calls to the &lt;code&gt;getData&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;getData&lt;/code&gt; 메소드 에 대한 후속 호출에서 리턴 될 배열 참조를 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="0b335e635e29d1cb5dd6584bf537424a5167273d" translate="yes" xml:space="preserve">
          <source>Updates the button's state in response to property changes in the associated action.</source>
          <target state="translated">연결된 작업의 속성 변경에 대한 응답으로 버튼의 상태를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="fe18c7b0325ca13ab9a2739113cd51e5a60e0073" translate="yes" xml:space="preserve">
          <source>Updates the button's state in response to property changes in the associated action. This method is invoked from the &lt;code&gt;PropertyChangeListener&lt;/code&gt; returned from &lt;code&gt;createActionPropertyChangeListener&lt;/code&gt;. Subclasses do not normally need to invoke this. Subclasses that support additional &lt;code&gt;Action&lt;/code&gt; properties should override this and &lt;code&gt;configurePropertiesFromAction&lt;/code&gt;.</source>
          <target state="translated">연결된 작업의 속성 변경에 대한 응답으로 버튼의 상태를 업데이트합니다. 이 메서드는 &lt;code&gt;createActionPropertyChangeListener&lt;/code&gt; 에서 반환 된 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 에서 호출됩니다 . 일반적으로 서브 클래스는 이것을 호출 할 필요가 없습니다. 추가 &lt;code&gt;Action&lt;/code&gt; 속성 을 지원하는 하위 클래스는 this 및 &lt;code&gt;configurePropertiesFromAction&lt;/code&gt; 을 재정의해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="042db91d64bf8d49ed5973835147558799e2c581" translate="yes" xml:space="preserve">
          <source>Updates the cellEditor based on the editability of the JTree that we're contained in.</source>
          <target state="translated">포함 된 JTree의 편집 가능성을 기반으로 cellEditor를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="db48ce6d2c530290ac313f0402d65c63fd135e01" translate="yes" xml:space="preserve">
          <source>Updates the cellEditor based on the editability of the JTree that we're contained in. If the tree is editable but doesn't have a cellEditor, a basic one will be used.</source>
          <target state="translated">포함 된 JTree의 편집 가능성에 따라 cellEditor를 업데이트합니다. 트리가 편집 가능하지만 cellEditor가없는 경우 기본 것이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="963ae9f7ed51e3fbee93093153e29df2b8586257" translate="yes" xml:space="preserve">
          <source>Updates the checksum with the bytes from the specified buffer.</source>
          <target state="translated">지정된 버퍼의 바이트로 체크섬을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="6e6b83ad441814b0380e891aed3a7717fab73d2e" translate="yes" xml:space="preserve">
          <source>Updates the checksum with the bytes from the specified buffer. The checksum is updated using buffer.&lt;a href=&quot;../../nio/buffer#remaining--&quot;&gt;&lt;code&gt;remaining()&lt;/code&gt;&lt;/a&gt; bytes starting at buffer.&lt;a href=&quot;../../nio/buffer#position--&quot;&gt;&lt;code&gt;position()&lt;/code&gt;&lt;/a&gt; Upon return, the buffer's position will be updated to its limit; its limit will not have been changed.</source>
          <target state="translated">지정된 버퍼의 바이트로 체크섬을 업데이트합니다. 체크섬은 버퍼를 사용하여 업데이트됩니다. 버퍼에서 시작하는 &lt;a href=&quot;../../nio/buffer#remaining--&quot;&gt; &lt;code&gt;remaining()&lt;/code&gt; &lt;/a&gt; 바이트. &lt;a href=&quot;../../nio/buffer#position--&quot;&gt; &lt;code&gt;position()&lt;/code&gt; &lt;/a&gt; 돌아 왔을 때, 버퍼의 위치가 한계로 갱신됩니다. 한도는 변경되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="f731b2ac810cb2ede617115d132d75b98ba3fe5a" translate="yes" xml:space="preserve">
          <source>Updates the checksum with the bytes from the specified buffer. The checksum is updated with the remaining bytes in the buffer, starting at the buffer's position. Upon return, the buffer's position will be updated to its limit; its limit will not have been changed.</source>
          <target state="translated">지정된 버퍼의 바이트로 체크섬을 업데이트합니다. 체크섬은 버퍼의 위치에서 시작하여 버퍼의 나머지 바이트로 업데이트됩니다. 돌아 오면 버퍼의 위치가 한계까지 업데이트됩니다. 한계는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="13fc4d504289541ba51f2e39a62c1348e40838b5" translate="yes" xml:space="preserve">
          <source>Updates the checksum with the specified array of bytes.</source>
          <target state="translated">지정된 바이트 배열로 체크섬을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="464cc2ea985b8e80d8bcc575c4f4ce30b34d9721" translate="yes" xml:space="preserve">
          <source>Updates the checksum with the specified byte (the low eight bits of the argument b).</source>
          <target state="translated">지정된 바이트 (인수 b의 하위 8 비트)로 체크섬을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="adada219035b94a8912a8491b819541c7671d6ec" translate="yes" xml:space="preserve">
          <source>Updates the child views in response to receiving notification that the model changed, and there is change record for the element this view is responsible for.</source>
          <target state="translated">모델이 변경되었으며이보기가 담당하는 요소에 대한 변경 레코드가 있다는 알림을 수신하면 하위보기를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="fdb08d8659031372c6743e60a06c8cd5524783f6" translate="yes" xml:space="preserve">
          <source>Updates the child views in response to receiving notification that the model changed, and there is change record for the element this view is responsible for. This is implemented to assume the child views are directly responsible for the child elements of the element this view represents. The &lt;code&gt;ViewFactory&lt;/code&gt; is used to create child views for each element specified as added in the &lt;code&gt;ElementChange&lt;/code&gt;, starting at the index specified in the given &lt;code&gt;ElementChange&lt;/code&gt;. The number of child views representing the removed elements specified are removed.</source>
          <target state="translated">모델이 변경되었으며이보기가 담당하는 요소에 대한 변경 레코드가 있다는 알림을 수신하면 하위보기를 업데이트합니다. 이는 하위 뷰가이 뷰가 나타내는 요소의 하위 요소에 직접 책임이 있다고 가정하기 위해 구현됩니다. &lt;code&gt;ViewFactory&lt;/code&gt; 추가로 지정한 각 요소에 대한 아이 뷰 생성하는데 사용된다 &lt;code&gt;ElementChange&lt;/code&gt; 주어진 지정된 인덱스에서 시작하여, &lt;code&gt;ElementChange&lt;/code&gt; . 지정된 제거 된 요소를 나타내는 하위보기 수가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="5289f4eb3d32d52787c6569d0e6a4f881bd1a2de" translate="yes" xml:space="preserve">
          <source>Updates the combobox's state in response to property changes in associated action.</source>
          <target state="translated">연결된 작업의 속성 변경에 대한 응답으로 콤보 상자의 상태를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="7cd14d3f75c661b303ba7b83c6e655c36610c603" translate="yes" xml:space="preserve">
          <source>Updates the combobox's state in response to property changes in associated action. This method is invoked from the &lt;code&gt;PropertyChangeListener&lt;/code&gt; returned from &lt;code&gt;createActionPropertyChangeListener&lt;/code&gt;. Subclasses do not normally need to invoke this. Subclasses that support additional &lt;code&gt;Action&lt;/code&gt; properties should override this and &lt;code&gt;configurePropertiesFromAction&lt;/code&gt;.</source>
          <target state="translated">연결된 작업의 속성 변경에 대한 응답으로 콤보 상자의 상태를 업데이트합니다. 이 메서드는 &lt;code&gt;createActionPropertyChangeListener&lt;/code&gt; 에서 반환 된 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 에서 호출됩니다 . 일반적으로 서브 클래스는 이것을 호출 할 필요가 없습니다. 추가 &lt;code&gt;Action&lt;/code&gt; 속성 을 지원하는 하위 클래스는 this 및 &lt;code&gt;configurePropertiesFromAction&lt;/code&gt; 을 재정의해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="6f7cec93973f636c3212745ba4f87eceeecce554" translate="yes" xml:space="preserve">
          <source>Updates the componentListener, if necessary.</source>
          <target state="translated">필요한 경우 componentListener를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="545b8c00fb4d6ac5267c161c8b0cf4408e38b53a" translate="yes" xml:space="preserve">
          <source>Updates the container.</source>
          <target state="translated">컨테이너를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="797b5da2a5a3cd9cb11703aa221449579731c8e4" translate="yes" xml:space="preserve">
          <source>Updates the container. This forwards the update to any lightweight components that are children of this container. If this method is reimplemented, super.update(g) should be called so that lightweight components are properly rendered. If a child component is entirely clipped by the current clipping setting in g, update() will not be forwarded to that child.</source>
          <target state="translated">컨테이너를 업데이트합니다. 이렇게하면이 컨테이너의 하위 인 모든 경량 구성 요소에 업데이트가 전달됩니다. 이 메서드를 다시 구현하면 경량 구성 요소가 제대로 렌더링되도록 super.update (g)를 호출해야합니다. 자식 구성 요소가 g의 현재 클리핑 설정에 의해 완전히 클리핑되면 update ()가 해당 자식에게 전달되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="854bac8b5e2507174da66bc77e74f0e595364ebc" translate="yes" xml:space="preserve">
          <source>Updates the current checksum with the bytes from the specified buffer.</source>
          <target state="translated">지정된 버퍼의 바이트로 현재 체크섬을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="6484a59965a610168b2821a6bd68183541b7e393" translate="yes" xml:space="preserve">
          <source>Updates the current checksum with the bytes from the specified buffer. The checksum is updated with the remaining bytes in the buffer, starting at the buffer's position. Upon return, the buffer's position will be updated to its limit; its limit will not have been changed.</source>
          <target state="translated">지정된 버퍼의 바이트로 현재 체크섬을 업데이트합니다. 체크섬은 버퍼의 위치에서 시작하여 버퍼의 나머지 바이트로 업데이트됩니다. 돌아 오면 버퍼의 위치가 한계까지 업데이트됩니다. 한계는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ded7886722b9de75628ffd683faf249b574ddbe9" translate="yes" xml:space="preserve">
          <source>Updates the current checksum with the specified array of bytes.</source>
          <target state="translated">지정된 바이트 배열로 현재 체크섬을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="7a33fe404b85df1ddbd5e0736dca91a5327146c7" translate="yes" xml:space="preserve">
          <source>Updates the current checksum with the specified byte.</source>
          <target state="translated">지정된 바이트로 현재 체크섬을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="843b7fe403b1d0561c5938739833267ad823f1fb" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified by a byte.</source>
          <target state="translated">바이트 단위로 서명 또는 확인 될 데이터를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="f7664bd15cae5903206c17dd0fbaf6a2dbb1917f" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified using the specified ByteBuffer.</source>
          <target state="translated">지정된 ByteBuffer를 사용하여 서명하거나 확인할 데이터를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="ad6d9f7036cc180eed265702a26dbf2ed9416d55" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified using the specified ByteBuffer. Processes the &lt;code&gt;data.remaining()&lt;/code&gt; bytes starting at &lt;code&gt;data.position()&lt;/code&gt;. Upon return, the buffer's position will be equal to its limit; its limit will not have changed.</source>
          <target state="translated">지정된 ByteBuffer를 사용하여 서명하거나 확인할 데이터를 업데이트합니다. &lt;code&gt;data.remaining()&lt;/code&gt; 에서 시작 하는 data.remaining () 바이트를 &lt;code&gt;data.position()&lt;/code&gt; . 돌아 오면 버퍼의 위치는 한계와 같습니다. 제한은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3af8c9ed66a94e149f764a292c59e5d9054580da" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified using the specified ByteBuffer. Processes the &lt;code&gt;data.remaining()&lt;/code&gt; bytes starting at at &lt;code&gt;data.position()&lt;/code&gt;. Upon return, the buffer's position will be equal to its limit; its limit will not have changed.</source>
          <target state="translated">지정된 ByteBuffer를 사용하여 서명되거나 확인 될 데이터를 업데이트합니다. &lt;code&gt;data.remaining()&lt;/code&gt; 에서 시작 하여 data.remaining () 바이트를 &lt;code&gt;data.position()&lt;/code&gt; . 돌아 왔을 때, 버퍼의 위치는 한계와 같습니다. 한도는 변경되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="bd31072336fcfa58a07a668dc351143ede54b3f8" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified using the specified byte.</source>
          <target state="translated">지정된 바이트를 사용하여 서명되거나 확인 될 데이터를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="def5ea9c4fd7fca454d7fe8b9e10a7697555b601" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified, using the specified array of bytes, starting at the specified offset.</source>
          <target state="translated">지정된 오프셋에서 시작하여 지정된 바이트 배열을 사용하여 서명되거나 확인 될 데이터를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="523ed659eb3e70b5342edceb340e858daf8a1779" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified, using the specified array of bytes.</source>
          <target state="translated">지정된 바이트 배열을 사용하여 서명 또는 확인 될 데이터를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="d81a41de04379305e589c161ccca7960b7bb7e0a" translate="yes" xml:space="preserve">
          <source>Updates the designated column using the given &lt;code&gt;Reader&lt;/code&gt; The data will be read from the stream as needed until end-of-stream is reached.</source>
          <target state="translated">지정된 &lt;code&gt;Reader&lt;/code&gt; 사용하여 지정된 열을 업데이트합니다 . 스트림 끝에 도달 할 때까지 필요에 따라 스트림에서 데이터를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="0af2ab86364307f9c557e5c19819ff7bb95d88c8" translate="yes" xml:space="preserve">
          <source>Updates the designated column using the given &lt;code&gt;Reader&lt;/code&gt; The data will be read from the stream as needed until end-of-stream is reached. The JDBC driver will do any necessary conversion from UNICODE to the database char format.</source>
          <target state="translated">지정된 &lt;code&gt;Reader&lt;/code&gt; 사용하여 지정된 열을 업데이트합니다 . 스트림 끝에 도달 할 때까지 필요에 따라 스트림에서 데이터를 읽습니다. JDBC 드라이버는 UNICODE에서 데이터베이스 char 형식으로 필요한 모든 변환을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="cf4c501270dab93fc4b213766b0ae1ada849be2f" translate="yes" xml:space="preserve">
          <source>Updates the designated column using the given &lt;code&gt;Reader&lt;/code&gt; object, which is the given number of characters long.</source>
          <target state="translated">지정된 문자 길이 인 지정된 &lt;code&gt;Reader&lt;/code&gt; 개체를 사용하여 지정된 열을 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="17544a1483b88bff64e7cb51481161871f5c8484" translate="yes" xml:space="preserve">
          <source>Updates the designated column using the given &lt;code&gt;Reader&lt;/code&gt; object, which is the given number of characters long. When a very large UNICODE value is input to a &lt;code&gt;LONGVARCHAR&lt;/code&gt; parameter, it may be more practical to send it via a &lt;code&gt;java.io.Reader&lt;/code&gt; object. The JDBC driver will do any necessary conversion from UNICODE to the database char format.</source>
          <target state="translated">지정된 문자 길이 인 지정된 &lt;code&gt;Reader&lt;/code&gt; 개체를 사용하여 지정된 열을 업데이트합니다 . 매우 큰 UNICODE 값이 &lt;code&gt;LONGVARCHAR&lt;/code&gt; 매개 변수에 입력 되면 &lt;code&gt;java.io.Reader&lt;/code&gt; 객체 를 통해 보내는 것이 더 실용적 일 수 있습니다 . JDBC 드라이버는 UNICODE에서 데이터베이스 char 형식으로 필요한 모든 변환을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="b9ccc1c5899cca232514bc2101de856f7289c3b8" translate="yes" xml:space="preserve">
          <source>Updates the designated column using the given &lt;code&gt;Reader&lt;/code&gt; object.</source>
          <target state="translated">지정된 &lt;code&gt;Reader&lt;/code&gt; 개체를 사용하여 지정된 열을 업데이트 합니다.</target>
        </trans-unit>
        <trans-unit id="c3175699624b9d48b1dda8a1208a53f06448e11a" translate="yes" xml:space="preserve">
          <source>Updates the designated column using the given &lt;code&gt;Reader&lt;/code&gt; object. The data will be read from the stream as needed until end-of-stream is reached. The JDBC driver will do any necessary conversion from UNICODE to the database char format.</source>
          <target state="translated">지정된 &lt;code&gt;Reader&lt;/code&gt; 개체를 사용하여 지정된 열을 업데이트 합니다. 스트림 끝에 도달 할 때까지 필요에 따라 스트림에서 데이터를 읽습니다. JDBC 드라이버는 UNICODE에서 데이터베이스 char 형식으로 필요한 모든 변환을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="850a002a0a9a18a533d98066f34d520b30910fef" translate="yes" xml:space="preserve">
          <source>Updates the designated column using the given input stream, which will have the specified number of bytes.</source>
          <target state="translated">지정된 바이트 수를 갖는 지정된 입력 스트림을 사용하여 지정된 열을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="9dca2bb6852129c3b0e882933e2f4db60040a0dd" translate="yes" xml:space="preserve">
          <source>Updates the designated column using the given input stream.</source>
          <target state="translated">지정된 입력 스트림을 사용하여 지정된 열을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="fe50201cce8c7e260afe454cb9e9da23ac45c40e" translate="yes" xml:space="preserve">
          <source>Updates the designated column using the given input stream. The data will be read from the stream as needed until end-of-stream is reached.</source>
          <target state="translated">지정된 입력 스트림을 사용하여 지정된 열을 업데이트합니다. 스트림 끝에 도달 할 때까지 필요에 따라 스트림에서 데이터를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="83029a51a9400e269272f20dcaf1393f4d61f197" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;RowId&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;RowId&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="1aa952a209fb3e1e6c0a873208f3d13c12d651d7" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;RowId&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;RowId&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="afe57649adb5bfb19b0f990ea2278e33e7e968ed" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;String&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;String&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="8c5aa240a71b8087b280e1dcbd0765f759996092" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;String&lt;/code&gt; value. It is intended for use when updating &lt;code&gt;NCHAR&lt;/code&gt;,&lt;code&gt;NVARCHAR&lt;/code&gt; and &lt;code&gt;LONGNVARCHAR&lt;/code&gt; columns. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;String&lt;/code&gt; 값으로 업데이트합니다 . &lt;code&gt;NCHAR&lt;/code&gt; , &lt;code&gt;NVARCHAR&lt;/code&gt; 및 &lt;code&gt;LONGNVARCHAR&lt;/code&gt; 열을 업데이트 할 때 사용하기위한 것입니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="90f8b59bc8c28cae81faf604d895a88a1cb40baa" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;String&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;String&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="647d43ab8b72897fb6b39e5d104c5331a18de3d9" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;boolean&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;boolean&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="a7083cb84d4a441b6f85ad4a6bc9dbe48d0e54da" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;boolean&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;boolean&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="127452b2fd53e70a61cb93e8f588a357a18fbe35" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;byte&lt;/code&gt; array value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;byte&lt;/code&gt; 배열 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="7c3d6193a5e55a48b17fefdd4b12ece9e78a1dda" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;byte&lt;/code&gt; array value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;byte&lt;/code&gt; 배열 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1b4c9b466731d1ca1fc4e822cfc959c12633d203" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;byte&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;byte&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="57285f6509544efce30d3006f5cc901cda44f780" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;byte&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;byte&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2cb3c406f082147e29bfe88a67e4c29bafe44369" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;double&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;double&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="29b4ecbe1178edb185ea10be7502f2f3cfb2611a" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;double&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;double&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4edfb1b476263b7ef753e38a3f6bc541e8180c5d" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;float &lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;float &lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="ca18abd33f786af3bc171ccc64b788ca1ab6ec5c" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;float &lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;float &lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="45f7cdeaeeb5392fa348526934b19f5467350bc3" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;float&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;float&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="a3670dd009cbb2fb306b512b29198020d32abdc9" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;float&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;float&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="92b06b676abe422515f542cc8358f1c21c2ad551" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.math.BigDecimal&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.math.BigDecimal&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="fea5f2b462c393dddba2e8f7b56982c75446e939" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.math.BigDecimal&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.math.BigDecimal&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c2a0acbed59a2716ac8dd3c34d79740ef075125f" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.Array&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.Array&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="03346203104aecefbb4b585db1e1fe0dc8052b8c" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.Array&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.Array&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="84097adf0343d346c89df8a782dd61d6f66b229c" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.BigDecimal&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.BigDecimal&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="2c5e95bdbed52e7a9d23509b0d535bec842cda58" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.BigDecimal&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.BigDecimal&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="08dac9b1e0e7c351115344fbb9235bd8c80be9df" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.Blob&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.Blob&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="15af4c9424c5c8c138d0ad8f79bf2efe03b937a2" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.Blob&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.Blob&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d8f95244fb7a6fca218accd1d398de0ee003428d" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.Clob&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.Clob&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="d9eba90809a4d729f0ef15975ae196340900bafd" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.Clob&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.Clob&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b49b9a6331d635cecc5d1770af2804166f90ca9b" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.Date&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.Date&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="e2d7caed4e16ea0543b70389fe6f264ca073f686" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.Date&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.Date&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="cef480395b6c75661a1a98ac21ac124c8fe71042" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.NClob&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.NClob&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="fa01c2f92d2921a23677e7d5fa48698e816e5a48" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.NClob&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.NClob&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="83e6b592ee56d4208fc4ce88402cc316076e5a17" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.Ref&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.Ref&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="a5620c3589250f8da47e5f93561d27217973138b" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.Ref&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.Ref&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="709763d736a46f32e5552f7b6afe94aa9179cb3a" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.SQLXML&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.SQLXML&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="66bd074e7283b8d75d762d41c76881a2b3041625" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.SQLXML&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.SQLXML&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5192438c4d825dc044dc39d67abdccb4b7307449" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.Time&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.Time&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="1c1a4dbc930cd4f79c55ea5adf7d710d51bc7f62" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.Time&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.Time&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5c64cc2094ed17dc09c67b6e6a2f2499b937dcb2" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.Timestamp&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.Timestamp&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="0ef56d52c2f524e20f75cee459879d1fe5d7ff55" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;java.sql.Timestamp&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;java.sql.Timestamp&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="94fc317efba47a2a3c664c5b70aa8b5e38215acd" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;long&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;long&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="57faf6639ed3c5799a35120bac75108b178e490d" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;long&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;long&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="89087e7780fee491c021521eab2e015db5cb741e" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;null&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="4bd0748a83aacf40448e1cc3dc4f1ad33e2adb87" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;null&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;null&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7dc2cc76b4f0e09f5ab76dd886b67fc62dcadfae" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;short&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;short&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="47fd8bbf0b5fb4f1542ae3c5ee0e0dc51dbc9c4f" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a &lt;code&gt;short&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;short&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f6e8ffec601b88049d27e39426019abd1bf611ad" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a binary stream value, which will have the specified number of bytes.</source>
          <target state="translated">지정된 바이트 수를 갖는 이진 스트림 값으로 지정된 열을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="be8182c719f672ffdd4f70301dc4a0e17fc58308" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a binary stream value, which will have the specified number of bytes. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 바이트 수를 갖는 이진 스트림 값으로 지정된 열을 업데이트합니다. 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="3a5e021a5ccfed50ad24479516a9b020616cf4c7" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a binary stream value.</source>
          <target state="translated">이진 스트림 값으로 지정된 열을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="962b8fce11394641d97c32118bc16c5f6b8d202c" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a binary stream value. The data will be read from the stream as needed until end-of-stream is reached.</source>
          <target state="translated">이진 스트림 값으로 지정된 열을 업데이트합니다. 스트림 끝에 도달 할 때까지 필요에 따라 스트림에서 데이터를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="be22abd12cb22c47fb6f51ceb6ca014f0330c604" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a byte array value.</source>
          <target state="translated">지정된 열을 바이트 배열 값으로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="a22d366fb801a1da870d7f6e513650ba0f1889b4" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a byte array value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 바이트 배열 값으로 업데이트합니다. 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5c23a67191fafbb417370b0c7f71bc7c67cf7c3a" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a character stream value, which will have the specified number of bytes.</source>
          <target state="translated">지정된 바이트 수를 갖는 문자 스트림 값으로 지정된 열을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="28df2400be1c1feaa4637b1ec9e138d5c7f6430c" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a character stream value, which will have the specified number of bytes. The driver does the necessary conversion from Java character format to the national character set in the database. It is intended for use when updating &lt;code&gt;NCHAR&lt;/code&gt;,&lt;code&gt;NVARCHAR&lt;/code&gt; and &lt;code&gt;LONGNVARCHAR&lt;/code&gt; columns.</source>
          <target state="translated">지정된 바이트 수를 갖는 문자 스트림 값으로 지정된 열을 업데이트합니다. 드라이버는 Java 문자 형식에서 데이터베이스의 국가 문자 집합으로 필요한 변환을 수행합니다. &lt;code&gt;NCHAR&lt;/code&gt; , &lt;code&gt;NVARCHAR&lt;/code&gt; 및 &lt;code&gt;LONGNVARCHAR&lt;/code&gt; 열을 업데이트 할 때 사용하기위한 것입니다 .</target>
        </trans-unit>
        <trans-unit id="5aa2a087492ebd501ee7244d7ea8ff3f0812be39" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a character stream value, which will have the specified number of bytes. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 바이트 수를 갖는 문자 스트림 값으로 지정된 열을 업데이트합니다. 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f82af41fa951460c46fabf3d95444b4e5418eec5" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a character stream value.</source>
          <target state="translated">지정된 열을 문자 스트림 값으로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="1ddf5978e01d3e7c7207a4840a9d18922ea3ae79" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a character stream value. The data will be read from the stream as needed until end-of-stream is reached.</source>
          <target state="translated">지정된 열을 문자 스트림 값으로 업데이트합니다. 스트림 끝에 도달 할 때까지 필요에 따라 스트림에서 데이터를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="8f6fc956a7a0a0a01de30c41fc63ed21a22c5333" translate="yes" xml:space="preserve">
          <source>Updates the designated column with a character stream value. The data will be read from the stream as needed until end-of-stream is reached. The driver does the necessary conversion from Java character format to the national character set in the database. It is intended for use when updating &lt;code&gt;NCHAR&lt;/code&gt;,&lt;code&gt;NVARCHAR&lt;/code&gt; and &lt;code&gt;LONGNVARCHAR&lt;/code&gt; columns.</source>
          <target state="translated">지정된 열을 문자 스트림 값으로 업데이트합니다. 스트림 끝에 도달 할 때까지 필요에 따라 스트림에서 데이터를 읽습니다. 드라이버는 Java 문자 형식에서 데이터베이스의 국가 문자 집합으로 필요한 변환을 수행합니다. &lt;code&gt;NCHAR&lt;/code&gt; , &lt;code&gt;NVARCHAR&lt;/code&gt; 및 &lt;code&gt;LONGNVARCHAR&lt;/code&gt; 열을 업데이트 할 때 사용하기위한 것입니다 .</target>
        </trans-unit>
        <trans-unit id="29e788b9fef175bbf33e0db9537982ca5309d9e5" translate="yes" xml:space="preserve">
          <source>Updates the designated column with an &lt;code&gt;Object&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;Object&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="093258598c59dbee532cabd10a4248d126a03b5b" translate="yes" xml:space="preserve">
          <source>Updates the designated column with an &lt;code&gt;Object&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;Object&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="70d344e91f051a6391b70c369a89f3132ec79af8" translate="yes" xml:space="preserve">
          <source>Updates the designated column with an &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">지정된 열을 &lt;code&gt;int&lt;/code&gt; 값으로 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="3204b83cacdc213b1d3c901e010e79b7db72de9e" translate="yes" xml:space="preserve">
          <source>Updates the designated column with an &lt;code&gt;int&lt;/code&gt; value. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 열을 &lt;code&gt;int&lt;/code&gt; 값으로 업데이트합니다 . 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="026736d5ec7c2983c8c35874dcee31c86f673433" translate="yes" xml:space="preserve">
          <source>Updates the designated column with an ascii stream value, which will have the specified number of bytes.</source>
          <target state="translated">지정된 바이트 수를 갖는 ASCII 스트림 값으로 지정된 열을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="1a73446ab68026e8bdc616dfafff1fbda96a0bcc" translate="yes" xml:space="preserve">
          <source>Updates the designated column with an ascii stream value, which will have the specified number of bytes. The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">지정된 바이트 수를 갖는 ASCII 스트림 값으로 지정된 열을 업데이트합니다. 업데이트 프로그램 메서드는 현재 행 또는 삽입 행의 열 값을 업데이트하는 데 사용됩니다. 업데이터 메서드는 기본 데이터베이스를 업데이트하지 않습니다. 대신 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 메소드가 데이터베이스를 업데이트하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b48f3cd05acce5a278f0c2d25fd18371e78d77ea" translate="yes" xml:space="preserve">
          <source>Updates the designated column with an ascii stream value.</source>
          <target state="translated">ASCII 스트림 값으로 지정된 열을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="392dd259216fbcc5e29cc5edd6d902e47359001b" translate="yes" xml:space="preserve">
          <source>Updates the designated column with an ascii stream value. The data will be read from the stream as needed until end-of-stream is reached.</source>
          <target state="translated">ASCII 스트림 값으로 지정된 열을 업데이트합니다. 스트림 끝에 도달 할 때까지 필요에 따라 스트림에서 데이터를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="e036043fb68f08e21d251ef235ba8084932b1f18" translate="yes" xml:space="preserve">
          <source>Updates the digest using the specified array of bytes, starting at the specified offset.</source>
          <target state="translated">지정된 오프셋에서 시작하여 지정된 바이트 배열을 사용하여 다이제스트를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="89712bda4fdbc435613ea0ccd4dc762e4c87a5f9" translate="yes" xml:space="preserve">
          <source>Updates the digest using the specified array of bytes.</source>
          <target state="translated">지정된 바이트 배열을 사용하여 다이제스트를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="6cf379365cadccbde9d2161109fe08171f04e0e8" translate="yes" xml:space="preserve">
          <source>Updates the digest using the specified byte.</source>
          <target state="translated">지정된 바이트를 사용하여 다이제스트를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="27eb522b4ac1b540ec2d0e75b4007f29f72c3622" translate="yes" xml:space="preserve">
          <source>Updates the element structure in response to a change in the document.</source>
          <target state="translated">문서 변경에 따라 요소 구조를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="3c81bf3aa8c4c7f052637b00c25d4d95cbce6b2c" translate="yes" xml:space="preserve">
          <source>Updates the element structure in response to a removal from the associated sequence in the document.</source>
          <target state="translated">문서의 연관된 시퀀스에서 제거되면 요소 구조를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="bbec4d39407a8bf283c18d9d2764d47ed9a3ec46" translate="yes" xml:space="preserve">
          <source>Updates the element structure in response to a removal from the associated sequence in the document. Any elements consumed by the span of the removal are removed.</source>
          <target state="translated">문서의 연관된 시퀀스에서 제거되면 요소 구조를 업데이트합니다. 제거 기간에 소비 된 모든 요소가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="6bb4ecbf9018f7a11eb7c8a328f1fc4edd01d40a" translate="yes" xml:space="preserve">
          <source>Updates the expanded state of all the descendants of &lt;code&gt;path&lt;/code&gt; by getting the expanded descendants from the tree and forwarding to the tree state.</source>
          <target state="translated">확장 된 하위 항목을 트리에서 가져와 트리 상태로 전달하여 &lt;code&gt;path&lt;/code&gt; 의 모든 하위 항목의 확장 된 상태를 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="a9aa35c53d822abc7aa1281093b6c033dad1c13b" translate="yes" xml:space="preserve">
          <source>Updates the file group-owner.</source>
          <target state="translated">파일 그룹 소유자를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="ce163aff679e6ccab2155872516dd460b0a9c8ea" translate="yes" xml:space="preserve">
          <source>Updates the file owner.</source>
          <target state="translated">파일 소유자를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="7092b9882ade92fc81348c0acf20b9b33494635f" translate="yes" xml:space="preserve">
          <source>Updates the file permissions.</source>
          <target state="translated">파일 권한을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="ca23c0ecc411bded01825fe0c8979f4231c6b0f6" translate="yes" xml:space="preserve">
          <source>Updates the layout in response to receiving notification of change from the model.</source>
          <target state="translated">모델에서 변경 알림을 수신하면 레이아웃을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="15274fcf0c39299c099da51e2d849a1348b58275" translate="yes" xml:space="preserve">
          <source>Updates the layout in response to receiving notification of change from the model. This is implemented to call &lt;code&gt;preferenceChanged&lt;/code&gt; to reschedule a new layout if the &lt;code&gt;ElementChange&lt;/code&gt; record is not &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">모델에서 변경 알림을 수신하면 레이아웃을 업데이트합니다. &lt;code&gt;ElementChange&lt;/code&gt; 레코드가 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 새 레이아웃을 다시 예약하기 위해 &lt;code&gt;preferenceChanged&lt;/code&gt; 를 호출하도록 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="df8b90366686b659181a33402bc8b462cae97beb" translate="yes" xml:space="preserve">
          <source>Updates the lead row of the selection.</source>
          <target state="translated">선택 항목의 선행 행을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="b84eb76df1a4f4071e120bd404500a341438e371" translate="yes" xml:space="preserve">
          <source>Updates the leadIndex instance variable.</source>
          <target state="translated">leadIndex 인스턴스 변수를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="566ef08fe9b188359bf03286cdf5bd6be1c25c84" translate="yes" xml:space="preserve">
          <source>Updates the logging configuration.</source>
          <target state="translated">로깅 구성을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="02d99913ba0fec467085f81babd8abd3bc8713ec" translate="yes" xml:space="preserve">
          <source>Updates the message digest (if the digest function is on) using the specified byte, and in any case writes the byte to the output stream.</source>
          <target state="translated">지정된 바이트를 사용하여 메시지 다이제스트 (다이제스트 기능이 켜져있는 경우)를 업데이트하고 어떤 경우 든 출력 스트림에 바이트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="3d91898a1202f4fbca2dfd5c68acfd7f27bea086" translate="yes" xml:space="preserve">
          <source>Updates the message digest (if the digest function is on) using the specified byte, and in any case writes the byte to the output stream. That is, if the digest function is on (see &lt;a href=&quot;#on(boolean)&quot;&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt;), this method calls &lt;code&gt;update&lt;/code&gt; on the message digest associated with this stream, passing it the byte &lt;code&gt;b&lt;/code&gt;. This method then writes the byte to the output stream, blocking until the byte is actually written.</source>
          <target state="translated">지정된 바이트를 사용하여 메시지 다이제스트 (다이제스트 기능이 켜져있는 경우)를 업데이트하고 어떤 경우 든 출력 스트림에 바이트를 씁니다. 즉, 다이제스트 함수 (참조에있는 경우 &lt;a href=&quot;#on(boolean)&quot;&gt; &lt;code&gt;on&lt;/code&gt; &lt;/a&gt; ),이 메소드 호출의 &lt;code&gt;update&lt;/code&gt; 메시지가 그것의 바이트 전달 스트림과 연관된 다이제스트 &lt;code&gt;b&lt;/code&gt; . 그런 다음이 메서드는 바이트가 실제로 기록 될 때까지 차단하여 출력 스트림에 바이트를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="665a6c2eb4809d0a68ace65533b9b60fb2810ec3" translate="yes" xml:space="preserve">
          <source>Updates the message digest (if the digest function is on) using the specified byte, and in any case writes the byte to the output stream. That is, if the digest function is on (see &lt;a href=&quot;digestoutputstream#on-boolean-&quot;&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt;), this method calls &lt;code&gt;update&lt;/code&gt; on the message digest associated with this stream, passing it the byte &lt;code&gt;b&lt;/code&gt;. This method then writes the byte to the output stream, blocking until the byte is actually written.</source>
          <target state="translated">지정된 바이트를 사용하여 메시지 다이제스트 (다이제스트 기능이 켜져있는 경우)를 업데이트하고, 어쨌든 바이트를 출력 스트림에 씁니다. 즉, 다이제스트 함수 (참조에있는 경우 &lt;a href=&quot;digestoutputstream#on-boolean-&quot;&gt; &lt;code&gt;on&lt;/code&gt; &lt;/a&gt; ),이 메소드 호출의 &lt;code&gt;update&lt;/code&gt; 메시지가 그것의 바이트 전달 스트림과 연관된 다이제스트 &lt;code&gt;b&lt;/code&gt; . 그런 다음이 메소드는 바이트를 출력 스트림에 작성하여 바이트가 실제로 작성 될 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="90feb92de3bc0a0f69adf4cec587d77643817093" translate="yes" xml:space="preserve">
          <source>Updates the message digest (if the digest function is on) using the specified subarray, and in any case writes the subarray to the output stream.</source>
          <target state="translated">지정된 하위 배열을 사용하여 메시지 요약 (요약 기능이 켜져있는 경우)을 업데이트하고 어떤 경우에도 하위 배열을 출력 스트림에 씁니다.</target>
        </trans-unit>
        <trans-unit id="06374143abe06a6f748f785d39d48d1f3baa0ac5" translate="yes" xml:space="preserve">
          <source>Updates the message digest (if the digest function is on) using the specified subarray, and in any case writes the subarray to the output stream. That is, if the digest function is on (see &lt;a href=&quot;#on(boolean)&quot;&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt;), this method calls &lt;code&gt;update&lt;/code&gt; on the message digest associated with this stream, passing it the subarray specifications. This method then writes the subarray bytes to the output stream, blocking until the bytes are actually written.</source>
          <target state="translated">지정된 하위 배열을 사용하여 메시지 요약 (요약 기능이 켜져있는 경우)을 업데이트하고 어떤 경우에도 하위 배열을 출력 스트림에 씁니다. 즉, 다이제스트 함수 (참조에있는 경우 &lt;a href=&quot;#on(boolean)&quot;&gt; &lt;code&gt;on&lt;/code&gt; &lt;/a&gt; ),이 메소드 호출의 &lt;code&gt;update&lt;/code&gt; 메시지에이 그것을 서브 어레이 사양 전달 스트림과 연관된 다이제스트. 그런 다음이 메서드는 하위 배열 바이트를 출력 스트림에 기록하고 바이트가 실제로 기록 될 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="d76ef061bca02656f593041b411ffdd946136db5" translate="yes" xml:space="preserve">
          <source>Updates the message digest (if the digest function is on) using the specified subarray, and in any case writes the subarray to the output stream. That is, if the digest function is on (see &lt;a href=&quot;digestoutputstream#on-boolean-&quot;&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt;), this method calls &lt;code&gt;update&lt;/code&gt; on the message digest associated with this stream, passing it the subarray specifications. This method then writes the subarray bytes to the output stream, blocking until the bytes are actually written.</source>
          <target state="translated">지정된 서브 어레이를 사용하여 메시지 다이제스트 (다이제스트 기능이 켜져있는 경우)를 업데이트하고, 어쨌든 서브 어레이를 출력 스트림에 씁니다. 즉, 다이제스트 함수가 켜져 있으면 ( &lt;a href=&quot;digestoutputstream#on-boolean-&quot;&gt; &lt;code&gt;on&lt;/code&gt; &lt;/a&gt; 참조 )이 메서드는 &lt;code&gt;update&lt;/code&gt; 메시지에이 그것을 서브 어레이 사양 전달 스트림과 연관된 다이제스트. 그런 다음이 메소드는 서브 어레이 바이트를 출력 스트림에 기록하여 바이트가 실제로 쓰여질 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="2fff00019e093964850247009de1f139aaa4fc8d" translate="yes" xml:space="preserve">
          <source>Updates the preferred size when scrolling (if necessary).</source>
          <target state="translated">스크롤 할 때 선호하는 크기를 업데이트합니다 (필요한 경우).</target>
        </trans-unit>
        <trans-unit id="0983e179c6310db6ec2439b24d61b25868abb59d" translate="yes" xml:space="preserve">
          <source>Updates the selection models of the table, depending on the state of the two flags: &lt;code&gt;toggle&lt;/code&gt; and &lt;code&gt;extend&lt;/code&gt;.</source>
          <target state="translated">두 플래그 ( &lt;code&gt;toggle&lt;/code&gt; 및 &lt;code&gt;extend&lt;/code&gt; ) 의 상태에 따라 테이블의 선택 모델을 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="843b47b01903999879d1e67e28ba2c709b5e10ae" translate="yes" xml:space="preserve">
          <source>Updates the selection models of the table, depending on the state of the two flags: &lt;code&gt;toggle&lt;/code&gt; and &lt;code&gt;extend&lt;/code&gt;. Most changes to the selection that are the result of keyboard or mouse events received by the UI are channeled through this method so that the behavior may be overridden by a subclass. Some UIs may need more functionality than this method provides, such as when manipulating the lead for discontiguous selection, and may not call into this method for some selection changes.</source>
          <target state="translated">두 플래그 ( &lt;code&gt;toggle&lt;/code&gt; 및 &lt;code&gt;extend&lt;/code&gt; ) 의 상태에 따라 테이블의 선택 모델을 업데이트합니다 . UI에서 수신 한 키보드 또는 마우스 이벤트의 결과 인 선택 항목에 대한 대부분의 변경 사항은이 메서드를 통해 전달되므로 동작이 하위 클래스에 의해 재정의 될 수 있습니다. 불연속 선택을 위해 리드를 조작 할 때와 같이 일부 UI에는이 메서드가 제공하는 것보다 더 많은 기능이 필요할 수 있으며 일부 선택 변경을 위해이 메서드를 호출하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78a11f08a192cb8d1e86b50fa7b7ee79c237d029" translate="yes" xml:space="preserve">
          <source>Updates the splash window with current contents of the overlay image.</source>
          <target state="translated">오버레이 이미지의 현재 내용으로 시작 창을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="5b005c56462bd49f2dd5184346af962d587a892f" translate="yes" xml:space="preserve">
          <source>Updates the style associated with &lt;code&gt;c&lt;/code&gt;, and all its children.</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; 와 관련된 스타일 및 모든 자식을 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="8f0e91ec16ff0b2558fd30108760c2013abb5c39" translate="yes" xml:space="preserve">
          <source>Updates the style associated with &lt;code&gt;c&lt;/code&gt;, and all its children. This is a lighter version of &lt;code&gt;SwingUtilities.updateComponentTreeUI&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; 와 관련된 스타일 및 모든 자식을 업데이트합니다 . 이것은 &lt;code&gt;SwingUtilities.updateComponentTreeUI&lt;/code&gt; 의 더 가벼운 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="5bcae125eff5c19f4dd9f34447ff81732e7b4ba7" translate="yes" xml:space="preserve">
          <source>Updates the target method of this call site, according to the behavior defined by this call site's specific class.</source>
          <target state="translated">이 호출 사이트의 특정 클래스에 정의 된 동작에 따라이 호출 사이트의 대상 메서드를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="97f4c9b27bc886a093b0b21fe1f1cfb787437c2b" translate="yes" xml:space="preserve">
          <source>Updates the target method of this call site, according to the behavior defined by this call site's specific class. The immediate subclasses of &lt;code&gt;CallSite&lt;/code&gt; document the class-specific behaviors of this method.</source>
          <target state="translated">이 호출 사이트의 특정 클래스에 의해 정의 된 동작에 따라이 호출 사이트의 대상 메소드를 업데이트합니다. &lt;code&gt;CallSite&lt;/code&gt; 의 직접적인 서브 클래스 는이 메소드의 클래스 별 동작을 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="95d416f7b01c8b0f8c3d410cee531c6af905aa1d" translate="yes" xml:space="preserve">
          <source>Updates the target method of this call site, as a normal variable.</source>
          <target state="translated">이 호출 사이트의 대상 메소드를 일반 변수로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="1c0593e2542db41160c275c01fe179a2e7d7031d" translate="yes" xml:space="preserve">
          <source>Updates the target method of this call site, as a normal variable. The type of the new target must agree with the type of the old target.</source>
          <target state="translated">이 호출 사이트의 대상 메소드를 일반 변수로 업데이트합니다. 새 대상의 유형은 이전 대상의 유형과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="e771f0f22258adddf2125f099e6077626c8b2510" translate="yes" xml:space="preserve">
          <source>Updates the target method of this call site, as a volatile variable.</source>
          <target state="translated">이 호출 사이트의 대상 메서드를 휘발성 변수로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="1c19aab82e517a26aa81e134dc3a2926582cc9cb" translate="yes" xml:space="preserve">
          <source>Updates the target method of this call site, as a volatile variable. The type of the new target must agree with the type of the old target.</source>
          <target state="translated">이 호출 사이트의 대상 메소드를 휘발성 변수로 업데이트합니다. 새 대상의 유형은 이전 대상의 유형과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="23e134b7c5dfb5dac0b4c08e7bb167c93143341c" translate="yes" xml:space="preserve">
          <source>Updates the textfield's state in response to property changes in associated action.</source>
          <target state="translated">연결된 작업의 속성 변경에 대한 응답으로 텍스트 필드의 상태를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="40e041613895e0f79f77381eadbe6e608a486f12" translate="yes" xml:space="preserve">
          <source>Updates the textfield's state in response to property changes in associated action. This method is invoked from the &lt;code&gt;PropertyChangeListener&lt;/code&gt; returned from &lt;code&gt;createActionPropertyChangeListener&lt;/code&gt;. Subclasses do not normally need to invoke this. Subclasses that support additional &lt;code&gt;Action&lt;/code&gt; properties should override this and &lt;code&gt;configurePropertiesFromAction&lt;/code&gt;.</source>
          <target state="translated">관련 작업의 속성 변경에 대한 응답으로 텍스트 필드의 상태를 업데이트합니다. 이 메서드는 &lt;code&gt;createActionPropertyChangeListener&lt;/code&gt; 에서 반환 된 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 에서 호출됩니다 . 일반적으로 서브 클래스는 이것을 호출 할 필요가 없습니다. 추가 &lt;code&gt;Action&lt;/code&gt; 속성 을 지원하는 하위 클래스는 this 및 &lt;code&gt;configurePropertiesFromAction&lt;/code&gt; 을 재정의해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="881601ede0d08ee49c4773f621c6fc97d948131a" translate="yes" xml:space="preserve">
          <source>Updates the underlying database with the new contents of the current row of this &lt;code&gt;ResultSet&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;ResultSet&lt;/code&gt; 오브젝트 의 현재 행의 새 컨텐츠로 기본 데이터베이스를 업데이트 합니다.</target>
        </trans-unit>
        <trans-unit id="365f2f87b7194b697ed549146f9571acf68e6f58" translate="yes" xml:space="preserve">
          <source>Updates the underlying database with the new contents of the current row of this &lt;code&gt;ResultSet&lt;/code&gt; object. This method cannot be called when the cursor is on the insert row.</source>
          <target state="translated">이 &lt;code&gt;ResultSet&lt;/code&gt; 오브젝트 의 현재 행의 새 컨텐츠로 기본 데이터베이스를 업데이트 합니다. 커서가 삽입 행에있을 때는이 메서드를 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="96f7b2e45a58ab8c6a3b1ac8082e1374f962d66c" translate="yes" xml:space="preserve">
          <source>Updates the value of the archive attribute.</source>
          <target state="translated">아카이브 속성의 값을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="7f8abd3d2d7ea62278513f2df1379366370940e7" translate="yes" xml:space="preserve">
          <source>Updates the value of the hidden attribute.</source>
          <target state="translated">숨겨진 속성의 값을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="284868c6c13c5de355e5c18b93e8001e301ab0d4" translate="yes" xml:space="preserve">
          <source>Updates the value of the read-only attribute.</source>
          <target state="translated">읽기 전용 속성의 값을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="017b739c1b2acd6c2a03231062ea3fe4db922faf" translate="yes" xml:space="preserve">
          <source>Updates the value of the system attribute.</source>
          <target state="translated">시스템 속성의 값을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="0609bb341c4a78714195e17d57bc3adba33ee916" translate="yes" xml:space="preserve">
          <source>Updates the value that will be returned by subsequent calls to the &lt;code&gt;getLength&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;getLength&lt;/code&gt; 메소드 에 대한 후속 호출에서 리턴 될 값을 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="50dc32ded1d630b41066a508f3464a5d76fb1a0a" translate="yes" xml:space="preserve">
          <source>Updates the value that will be returned by subsequent calls to the &lt;code&gt;getOffset&lt;/code&gt; method.</source>
          <target state="translated">후속 &lt;code&gt;getOffset&lt;/code&gt; 메소드 호출로 리턴 될 값을 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="c8f63a04555a8725ba2c360d958284f9320e7fde" translate="yes" xml:space="preserve">
          <source>Updates this &lt;code&gt;LineBreakMeasurer&lt;/code&gt; after a single character is deleted from the text, and sets the current position to the beginning of the paragraph.</source>
          <target state="translated">&lt;code&gt;LineBreakMeasurer&lt;/code&gt; 에서 단일 문자가 삭제 된 후이 LineBreakMeasurer를 업데이트 하고 현재 위치를 단락의 시작 부분으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="92eb7b32157d43dbc83aae633624c74c15854889" translate="yes" xml:space="preserve">
          <source>Updates this &lt;code&gt;LineBreakMeasurer&lt;/code&gt; after a single character is inserted into the text, and sets the current position to the beginning of the paragraph.</source>
          <target state="translated">단일 문자가 텍스트에 삽입 된 &lt;code&gt;LineBreakMeasurer&lt;/code&gt; 업데이트 하고 현재 위치를 단락의 시작 부분으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7b0d6ef4435b45b0b2cee8a454bd1bad4fa7df29" translate="yes" xml:space="preserve">
          <source>Updates this canvas.</source>
          <target state="translated">이 캔버스를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="738f8b329bed71bcfc3029a9ef7c5d6a4fc8cf34" translate="yes" xml:space="preserve">
          <source>Updates this component.</source>
          <target state="translated">이 구성 요소를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="1a3bf86e0153599c96198696c1fcd28b0f304a92" translate="yes" xml:space="preserve">
          <source>Updates this object's mapping from TreePath to rows.</source>
          <target state="translated">이 개체의 매핑을 TreePath에서 행으로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="78663b65b959420225e82ec23ab71683a74eb90b" translate="yes" xml:space="preserve">
          <source>Updates this object's mapping from TreePath to rows. This should be invoked when the mapping from TreePaths to integers has changed (for example, a node has been expanded).</source>
          <target state="translated">이 개체의 매핑을 TreePath에서 행으로 업데이트합니다. 이것은 TreePaths에서 정수로의 매핑이 변경되었을 때 호출되어야합니다 (예 : 노드가 확장 됨).</target>
        </trans-unit>
        <trans-unit id="a8c8f2783d55ce49e105a08b4490003b73b859b5" translate="yes" xml:space="preserve">
          <source>Updates this object's mapping from TreePaths to rows.</source>
          <target state="translated">이 개체의 매핑을 TreePath에서 행으로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="ff3e038b81d1e550663577b05d98b33a3a0f9935" translate="yes" xml:space="preserve">
          <source>Updates this object's mapping from TreePaths to rows. This should be invoked when the mapping from TreePaths to integers has changed (for example, a node has been expanded).</source>
          <target state="translated">이 개체의 매핑을 TreePath에서 행으로 업데이트합니다. 이것은 TreePaths에서 정수로의 매핑이 변경되었을 때 호출되어야합니다 (예 : 노드가 확장 됨).</target>
        </trans-unit>
        <trans-unit id="aab627edbe363971bb91bd6f428128c46547a3e8" translate="yes" xml:space="preserve">
          <source>Updates to &quot;bound&quot; properties will cause a &quot;PropertyChange&quot; event to get fired when the property is changed.</source>
          <target state="translated">&quot;바운드&quot;속성을 업데이트하면 속성이 변경 될 때 &quot;PropertyChange&quot;이벤트가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="dc4b9a9774e0089e43e09849f956ac4574aaa643" translate="yes" xml:space="preserve">
          <source>Updates viewport.</source>
          <target state="translated">뷰포트를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="9b4ae7f6d4ba9eb03e2c14d9474f1c1161b2a577" translate="yes" xml:space="preserve">
          <source>Updates with the given value.</source>
          <target state="translated">주어진 값으로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="ec6952e09b9cc6aee90f3110c55ff105e4facbf9" translate="yes" xml:space="preserve">
          <source>Updating</source>
          <target state="translated">Updating</target>
        </trans-unit>
        <trans-unit id="b1747562dc5f25f6a447ebce2ff3b673709080f8" translate="yes" xml:space="preserve">
          <source>Updating a &lt;code&gt;CachedRowSet&lt;/code&gt; object is similar to updating a &lt;code&gt;ResultSet&lt;/code&gt; object, but because the rowset is not connected to its data source while it is being updated, it must take an additional step to effect changes in its underlying data source. After calling the method &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt;, a &lt;code&gt;CachedRowSet&lt;/code&gt; object must also call the method &lt;code&gt;acceptChanges&lt;/code&gt; to have updates written to the data source. The following example, in which the cursor is on a row in the &lt;code&gt;CachedRowSet&lt;/code&gt; object</source>
          <target state="translated">업데이트 &lt;code&gt;CachedRowSet&lt;/code&gt; 객체하면 업데이트 비슷 &lt;code&gt;ResultSet&lt;/code&gt; 객체 있지만 업데이트되는 동안 집합이 데이터 소스에 접속되어 있지 않기 때문에, 그 기본이되는 데이터 소스의 효과를 변경하는 추가 단계를 수행한다. 메소드 호출 한 후 &lt;code&gt;updateRow&lt;/code&gt; 또는 &lt;code&gt;insertRow&lt;/code&gt; 하는 &lt;code&gt;CachedRowSet&lt;/code&gt; 객체는 메소드 호출해야합니다 &lt;code&gt;acceptChanges&lt;/code&gt; 데이터 소스에 기록 업데이트를 할 수 있습니다. 다음 예제에서는 커서가 &lt;code&gt;CachedRowSet&lt;/code&gt; 객체 의 행에 있습니다.</target>
        </trans-unit>
        <trans-unit id="76cd996f7e819bcb8f4e21461498f310a9db0d79" translate="yes" xml:space="preserve">
          <source>Updating configuration properties</source>
          <target state="translated">구성 속성 업데이트</target>
        </trans-unit>
        <trans-unit id="f75cc5752e1a908195476490977be1b5dde58608" translate="yes" xml:space="preserve">
          <source>Upon completion of this method, &lt;code&gt;isDone()&lt;/code&gt; reports &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;getException()&lt;/code&gt; reports &lt;code&gt;
 null&lt;/code&gt;. However, the value returned by &lt;code&gt;getRawResult&lt;/code&gt; is unaffected. To clear this value, you can invoke &lt;code&gt;
 setRawResult(null)&lt;/code&gt;.</source>
          <target state="translated">이 메서드가 완료되면 &lt;code&gt;isDone()&lt;/code&gt; 은 &lt;code&gt;false&lt;/code&gt; 를 보고 하고 &lt;code&gt;getException()&lt;/code&gt; 은 &lt;code&gt; null&lt;/code&gt; 을 보고합니다 . 그러나 &lt;code&gt;getRawResult&lt;/code&gt; 에서 반환 된 값 은 영향을받지 않습니다. 이 값을 지우려면 &lt;code&gt; setRawResult(null)&lt;/code&gt; 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d3699d6d4a7b6d1e97fd9a25d90038c22baf0a18" translate="yes" xml:space="preserve">
          <source>Upon completion of this method, &lt;code&gt;isDone()&lt;/code&gt; reports &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;getException()&lt;/code&gt; reports &lt;code&gt;null&lt;/code&gt;. However, the value returned by &lt;code&gt;getRawResult&lt;/code&gt; is unaffected. To clear this value, you can invoke &lt;code&gt;setRawResult(null)&lt;/code&gt;.</source>
          <target state="translated">이 메소드가 완료되면 &lt;code&gt;isDone()&lt;/code&gt; 은 &lt;code&gt;false&lt;/code&gt; 를 보고 하고 &lt;code&gt;getException()&lt;/code&gt; 은 &lt;code&gt;null&lt;/code&gt; 을 보고합니다 . 그러나 &lt;code&gt;getRawResult&lt;/code&gt; 에 의해 리턴 된 값 은 영향을받지 않습니다. 이 값을 지우려면 &lt;code&gt;setRawResult(null)&lt;/code&gt; 호출하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="c2e0fbbd4b28ccff9ec588d9207a0093caeab42f" translate="yes" xml:space="preserve">
          <source>Upon finishing, this method resets this cipher object to the state it was in when previously initialized via a call to &lt;code&gt;engineInit&lt;/code&gt;. That is, the object is reset and available to encrypt or decrypt (depending on the operation mode that was specified in the call to &lt;code&gt;engineInit&lt;/code&gt;) more data.</source>
          <target state="translated">완료시,이 메소드는이 암호 오브젝트를 &lt;code&gt;engineInit&lt;/code&gt; 호출을 통해 이전에 초기화되었을 때의 상태로 재설정합니다 . 즉, 오브젝트가 재설정되어 더 많은 데이터 를 암호화하거나 해독 할 수 있습니다 ( &lt;code&gt;engineInit&lt;/code&gt; 호출에 지정된 조작 모드에 따라 다름 ).</target>
        </trans-unit>
        <trans-unit id="c422f4c2323dc760bb13546606e70f98df8d7fb4" translate="yes" xml:space="preserve">
          <source>Upon finishing, this method resets this cipher object to the state it was in when previously initialized via a call to &lt;code&gt;init&lt;/code&gt;. That is, the object is reset and available to encrypt or decrypt (depending on the operation mode that was specified in the call to &lt;code&gt;init&lt;/code&gt;) more data.</source>
          <target state="translated">완료시,이 메소드는이 암호 객체를 &lt;code&gt;init&lt;/code&gt; 호출을 통해 이전에 초기화되었을 때의 상태로 재설정합니다 . 즉, 객체가 재설정되어 암호화 또는 암호 해독이 가능합니다 ( &lt;code&gt;init&lt;/code&gt; 호출에 지정된 작동 모드에 따라 다름) 더 많은 데이터 .</target>
        </trans-unit>
        <trans-unit id="71183a6dc34feb9860c70ddc289b703e03321156" translate="yes" xml:space="preserve">
          <source>Upon receiving this message the receiver should extract any relevant state out of &lt;em&gt;state&lt;/em&gt;.</source>
          <target state="translated">이 메시지를 받으면 수신자는 관련 상태를 다른 &lt;em&gt;상태로&lt;/em&gt; 추출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="cb0b035c007e601d3a8fe0b86ae5355491f96fd2" translate="yes" xml:space="preserve">
          <source>Upon receiving this message the receiver should place any relevant state into &lt;em&gt;state&lt;/em&gt;.</source>
          <target state="translated">이 메시지를 받으면 수신자는 관련 상태를 &lt;em&gt;상태&lt;/em&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="32c989991bef2e0ddd1c578a34270b770e84a5e5" translate="yes" xml:space="preserve">
          <source>Upon return, the source buffer's position will be updated to its limit; its limit will not have been changed. The returned output buffer's position will be zero and its limit will be the number of resulting decoded bytes</source>
          <target state="translated">돌아 왔을 때, 소스 버퍼의 위치가 한계로 갱신됩니다. 한도는 변경되지 않았습니다. 리턴 된 출력 버퍼의 위치는 0이되고 한계는 디코딩 된 결과 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="80f12f69049412703781d82ce5718d8aa93d3904" translate="yes" xml:space="preserve">
          <source>Upon return, this membership object will be &lt;a href=&quot;#isValid()&quot;&gt;&lt;code&gt;invalid&lt;/code&gt;&lt;/a&gt;. If the multicast group membership is already invalid then invoking this method has no effect. Once a multicast group membership is invalid, it remains invalid forever.</source>
          <target state="translated">반환시이 멤버십 개체는 &lt;a href=&quot;#isValid()&quot;&gt; &lt;code&gt;invalid&lt;/code&gt; &lt;/a&gt; . 멀티 캐스트 그룹 구성원이 이미 유효하지 않은 경우이 메서드를 호출해도 효과가 없습니다. 멀티 캐스트 그룹 구성원이 유효하지 않으면 영원히 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="29b4ecb3df396f95e69afa93711c30b261696ed7" translate="yes" xml:space="preserve">
          <source>Upon return, this membership object will be &lt;a href=&quot;membershipkey#isValid--&quot;&gt;&lt;code&gt;invalid&lt;/code&gt;&lt;/a&gt;. If the multicast group membership is already invalid then invoking this method has no effect. Once a multicast group membership is invalid, it remains invalid forever.</source>
          <target state="translated">돌아 왔을 때,이 멤버쉽 객체는 &lt;a href=&quot;membershipkey#isValid--&quot;&gt; &lt;code&gt;invalid&lt;/code&gt; &lt;/a&gt; 됩니다. 멀티 캐스트 그룹 멤버쉽이 이미 유효하지 않은 경우이 메소드를 호출해도 효과가 없습니다. 멀티 캐스트 그룹 멤버쉽이 유효하지 않으면 영원히 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2039134eb09ba4af75f970b182d2bc2812b9fbb9" translate="yes" xml:space="preserve">
          <source>Upper Case</source>
          <target state="translated">대문자</target>
        </trans-unit>
        <trans-unit id="83087183cf2fc461034d823bb990cf31750aea63" translate="yes" xml:space="preserve">
          <source>Uppercase</source>
          <target state="translated">Uppercase</target>
        </trans-unit>
        <trans-unit id="3cc3178d390779415c74ffc84d340451b664d426" translate="yes" xml:space="preserve">
          <source>Usable size of all banks.</source>
          <target state="translated">모든 뱅크의 사용 가능한 크기.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="d17cf28eb7701713654d3a2f67b57093ff517316" translate="yes" xml:space="preserve">
          <source>Usage Details About Controls</source>
          <target state="translated">컨트롤에 대한 사용법 세부 사항</target>
        </trans-unit>
        <trans-unit id="342c659777997bec12f413246e5e24d6a8317e2a" translate="yes" xml:space="preserve">
          <source>Usage Example</source>
          <target state="translated">사용 예</target>
        </trans-unit>
        <trans-unit id="31fdeb34a4f4bc8a7b882018ab434e09d2defd44" translate="yes" xml:space="preserve">
          <source>Usage Examples</source>
          <target state="translated">사용 예</target>
        </trans-unit>
        <trans-unit id="0165150b427ee5eba5db30142ff24f84776e081f" translate="yes" xml:space="preserve">
          <source>Usage Information</source>
          <target state="translated">사용 정보</target>
        </trans-unit>
        <trans-unit id="f3aea5cca0ddd71189e463baa0c48ce11300d657" translate="yes" xml:space="preserve">
          <source>Usage Note If the class path of a class loader that is used for provider loading includes remote network URLs then those URLs will be dereferenced in the process of searching for provider-configuration files.</source>
          <target state="translated">사용법 참고 제공자로드에 사용되는 클래스 로더의 클래스 경로에 원격 네트워크 URL이 포함 된 경우 제공자 구성 파일을 검색하는 과정에서 해당 URL이 역 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="1bdb5eaafd9f8eb46aedce6b7b5dedb00d8f18cf" translate="yes" xml:space="preserve">
          <source>Usage Notes:</source>
          <target state="translated">사용법 참고 :</target>
        </trans-unit>
        <trans-unit id="c75d28d3a9e20da30a1d6c2c70c33ca260e431d0" translate="yes" xml:space="preserve">
          <source>Usage Threshold</source>
          <target state="translated">사용 임계 값</target>
        </trans-unit>
        <trans-unit id="9d2e9a122502f7b2db6b82c7ffed057d15d9d207" translate="yes" xml:space="preserve">
          <source>Usage Threshold Notification</source>
          <target state="translated">사용 임계 값 알림</target>
        </trans-unit>
        <trans-unit id="5a11db1e76075d8af69162b48cf74ba7a785b98c" translate="yes" xml:space="preserve">
          <source>Usage example, based on a typical producer-consumer scenario. Note that a &lt;code&gt;BlockingQueue&lt;/code&gt; can safely be used with multiple producers and multiple consumers.</source>
          <target state="translated">일반적인 생산자-소비자 시나리오를 기반으로 한 사용 예입니다. &amp;bull; 그래도 참고 &lt;code&gt;BlockingQueue&lt;/code&gt; 를가 안전하게 다수의 생산자와 다수의 소비자와 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="950d9c1aee5a0b8ac1664c8a9f40a8cddde14c8b" translate="yes" xml:space="preserve">
          <source>Usage examples</source>
          <target state="translated">사용 예</target>
        </trans-unit>
        <trans-unit id="aabc75243121e9e20ceed9101a5f8abb3bab3f5e" translate="yes" xml:space="preserve">
          <source>Usage threshold notification will be emitted by &lt;a href=&quot;memorymxbean&quot;&gt;&lt;code&gt;MemoryMXBean&lt;/code&gt;&lt;/a&gt;. When the Java virtual machine detects that the memory usage of a memory pool has reached or exceeded the usage threshold the virtual machine will trigger the &lt;code&gt;MemoryMXBean&lt;/code&gt; to emit an &lt;a href=&quot;memorynotificationinfo#MEMORY_THRESHOLD_EXCEEDED&quot;&gt;&lt;code&gt;usage threshold exceeded notification&lt;/code&gt;&lt;/a&gt;. Another usage threshold exceeded notification will not be generated until the usage has fallen below the threshold and then exceeded it again.</source>
          <target state="translated">사용 임계 값 알림은 &lt;a href=&quot;memorymxbean&quot;&gt; &lt;code&gt;MemoryMXBean&lt;/code&gt; 에&lt;/a&gt; 의해 생성됩니다 . Java 가상 머신이 메모리 풀의 메모리 사용량이 사용량 임계 값에 도달했거나 초과했음을 감지하면 가상 머신은 &lt;a href=&quot;memorynotificationinfo#MEMORY_THRESHOLD_EXCEEDED&quot;&gt; &lt;code&gt;usage threshold exceeded notification&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MemoryMXBean&lt;/code&gt; 하도록 MemoryMXBean 을 트리거합니다. . 사용량이 임계 값 아래로 떨어졌다가 다시 초과 할 때까지 다른 사용 임계 값 초과 알림이 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e7ca9356685678c24cc48274d0cdd749974b5d4c" translate="yes" xml:space="preserve">
          <source>Usages of this class should typically be of the form: &lt;code&gt;ThreadLocalRandom.current().nextX(...)&lt;/code&gt; (where &lt;code&gt;X&lt;/code&gt; is &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, etc). When all usages are of this form, it is never possible to accidentally share a &lt;code&gt;ThreadLocalRandom&lt;/code&gt; across multiple threads.</source>
          <target state="translated">이 클래스의 사용법은 일반적으로 &lt;code&gt;ThreadLocalRandom.current().nextX(...)&lt;/code&gt; 형식이어야합니다 (여기서 &lt;code&gt;X&lt;/code&gt; 는 &lt;code&gt;Int&lt;/code&gt; , &lt;code&gt;Long&lt;/code&gt; 등). 모든 용도가이 형식이면 실수로 여러 스레드 에서 &lt;code&gt;ThreadLocalRandom&lt;/code&gt; 을 공유 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="8a5db3849744a6440376b799c94856ec0f6a7d99" translate="yes" xml:space="preserve">
          <source>Usages of this class should typically be of the form: &lt;code&gt;ThreadLocalRandom.current().nextX(...)&lt;/code&gt; (where &lt;code&gt;X&lt;/code&gt; is &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, etc). When all usages are of this form, it is never possible to accidently share a &lt;code&gt;ThreadLocalRandom&lt;/code&gt; across multiple threads.</source>
          <target state="translated">이 클래스의 사용법은 일반적으로 &lt;code&gt;ThreadLocalRandom.current().nextX(...)&lt;/code&gt; 형식이어야합니다 (여기서 &lt;code&gt;X&lt;/code&gt; 는 &lt;code&gt;Int&lt;/code&gt; , &lt;code&gt;Long&lt;/code&gt; 등). 모든 용도가이 형식 인 경우 실수로 여러 스레드 에서 &lt;code&gt;ThreadLocalRandom&lt;/code&gt; 을 공유 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="025f85cf1de3215f8fa291cdec16827bdb1ada21" translate="yes" xml:space="preserve">
          <source>Use #checkPermission(java.security.Permission) instead</source>
          <target state="translated">대신 #checkPermission (java.security.Permission)을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="39441919bba62e4e086f4e0a662422cccb1b367a" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#ALLOWED_CLASSNAMES_LIST&quot;&gt;&lt;code&gt;ALLOWED_CLASSNAMES_LIST&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;#ALLOWED_CLASSNAMES_LIST&quot;&gt; &lt;code&gt;ALLOWED_CLASSNAMES_LIST&lt;/code&gt; &lt;/a&gt; 를 사용하세요 .</target>
        </trans-unit>
        <trans-unit id="13cef85484058702f8d76c8db484e31e43f2cb9e" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#CREDENTIALS_FILTER_PATTERN&quot;&gt;&lt;code&gt;CREDENTIALS_FILTER_PATTERN&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;../../../../../java.base/java/io/objectinputfilter.config#createFilter(java.lang.String)&quot;&gt;filter pattern&lt;/a&gt; string instead.</source>
          <target state="translated">대신 &lt;a href=&quot;../../../../../java.base/java/io/objectinputfilter.config#createFilter(java.lang.String)&quot;&gt;필터 패턴&lt;/a&gt; 문자열 과 함께 &lt;a href=&quot;#CREDENTIALS_FILTER_PATTERN&quot;&gt; &lt;code&gt;CREDENTIALS_FILTER_PATTERN&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e746036b3258976bacdd05345817dcf8a0766319" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#getClassLoader(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getClassLoader&lt;/code&gt;&lt;/a&gt; to obtain the class loader for deserialization.</source>
          <target state="translated">deserialization을위한 클래스 로더를 얻으려면 &lt;a href=&quot;#getClassLoader(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getClassLoader&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="2551803b00f2d125f239c2ca8c65b5b768c0cca4" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#getClassLoaderFor(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getClassLoaderFor&lt;/code&gt;&lt;/a&gt; to obtain the appropriate class loader for deserialization.</source>
          <target state="translated">deserialization에 적합한 클래스 로더를 얻으려면 &lt;a href=&quot;#getClassLoaderFor(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getClassLoaderFor&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff4b55563b5fe8d3b3894f38cb9c622cc5f62dab" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#getClassLoaderRepository()&quot;&gt;&lt;code&gt;getClassLoaderRepository()&lt;/code&gt;&lt;/a&gt; to obtain the class loader repository and use it to deserialize.</source>
          <target state="translated">사용 &lt;a href=&quot;#getClassLoaderRepository()&quot;&gt; &lt;code&gt;getClassLoaderRepository()&lt;/code&gt; &lt;/a&gt; 클래스 로더 리포지터리 (repository)를 취득 해, 이것을 사용해 직렬화 복원을합니다.</target>
        </trans-unit>
        <trans-unit id="5077f30393d9861d1c7d4263765547e83d2fa1b7" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;logrb(java.util.logging.Level, java.lang.String,
   java.lang.String, java.util.ResourceBundle, java.lang.String,
   java.lang.Object...)&lt;/code&gt;&lt;/a&gt; instead</source>
          <target state="translated">대신 &lt;a href=&quot;#logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Object...)&lt;/code&gt; &lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6aa6c2a78a0196675d2a690c368fc30ff71c5a34" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;logrb(java.util.logging.Level, java.lang.String,
 java.lang.String, java.util.ResourceBundle, java.lang.String,
 java.lang.Object...)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;#logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Object...)&lt;/code&gt; &lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8f0745518c30198e44ea526e0785b5dd285e88de" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Throwable)&quot;&gt;&lt;code&gt;logrb(java.util.logging.Level, java.lang.String,
     java.lang.String, java.util.ResourceBundle, java.lang.String,
     java.lang.Throwable)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;#logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Throwable)&quot;&gt; &lt;code&gt;logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Throwable)&lt;/code&gt; &lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9ed6095b3d01ee90d9b5739210400d792256869d" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#newInstance()&quot;&gt;&lt;code&gt;newInstance()&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;DatatypeFactory&lt;/code&gt;.</source>
          <target state="translated">사용 &lt;a href=&quot;#newInstance()&quot;&gt; &lt;code&gt;newInstance()&lt;/code&gt; &lt;/a&gt; 만듭니다 &lt;code&gt;DatatypeFactory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b91ce8b2a0ce4a666eaa9e1bded030754d952e9" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#setParameter(java.security.spec.AlgorithmParameterSpec)&quot;&gt;&lt;code&gt;setParameter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#setParameter(java.security.spec.AlgorithmParameterSpec)&quot;&gt; &lt;code&gt;setParameter&lt;/code&gt; 를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="97d919d2e06dbc49c29769b2f1d3394363f862da" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../../../java.base/java/lang/securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;../../../java.base/java/lang/securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f2d810de2ba16f70f94df40a686e5a7203b22c3" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../../../java.base/java/lang/securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; instead. Application code should never directly reference this class, and &lt;code&gt;RMISecurityManager&lt;/code&gt; no longer throws this subclass of &lt;code&gt;java.lang.SecurityException&lt;/code&gt;.</source>
          <target state="translated">대신 &lt;a href=&quot;../../../java.base/java/lang/securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 . 애플리케이션 코드는이 클래스를 직접 참조해서는 안되며, &lt;code&gt;RMISecurityManager&lt;/code&gt; 는 더 이상 &lt;code&gt;java.lang.SecurityException&lt;/code&gt; 의이 서브 클래스를 발생시키지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b485f6eea283198b2d4dc0a41fa4352f4ee44fe2" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../../../java.base/java/lang/securitymanager&quot;&gt;&lt;code&gt;SecurityManager&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;../../../java.base/java/lang/securitymanager&quot;&gt; &lt;code&gt;SecurityManager&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c834c9f6291dcef7c9512d21c8cbb5207da34023" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../mbeanserver#getClassLoaderRepository()&quot;&gt;&lt;code&gt;MBeanServer.getClassLoaderRepository()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;../mbeanserver#getClassLoaderRepository()&quot;&gt; &lt;code&gt;MBeanServer.getClassLoaderRepository()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ea1712940b16ad0cb3634dd44699d59d9d9b97b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../mbeanserver#getClassLoaderRepository--&quot;&gt;&lt;code&gt;MBeanServer.getClassLoaderRepository()&lt;/code&gt;&lt;/a&gt;} instead.</source>
          <target state="translated">사용 &lt;a href=&quot;../mbeanserver#getClassLoaderRepository--&quot;&gt; &lt;code&gt;MBeanServer.getClassLoaderRepository()&lt;/code&gt; &lt;/a&gt; } 대신.</target>
        </trans-unit>
        <trans-unit id="e50c0a570f36993a35d215b051ebd42ff9ccb328" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;mbeanserver#getClassLoaderRepository()&quot;&gt;&lt;code&gt;MBeanServer.getClassLoaderRepository()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;mbeanserver#getClassLoaderRepository()&quot;&gt; &lt;code&gt;MBeanServer.getClassLoaderRepository()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6d0574ab5aabe590a7863598fc160b49b0616ed4" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;mbeanserver#getClassLoaderRepository--&quot;&gt;&lt;code&gt;MBeanServer.getClassLoaderRepository()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;mbeanserver#getClassLoaderRepository--&quot;&gt; &lt;code&gt;MBeanServer.getClassLoaderRepository()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="02111e23c3d4d57163c75b82a9b2fff767f30c69" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;path2d.float&quot;&gt;&lt;code&gt;Path2D.Float&lt;/code&gt;&lt;/a&gt; when dealing with data that can be represented and used with floating point precision. Use &lt;a href=&quot;path2d.double&quot;&gt;&lt;code&gt;Path2D.Double&lt;/code&gt;&lt;/a&gt; for data that requires the accuracy or range of double precision.</source>
          <target state="translated">부동 소수점 정밀도로 표현하고 사용할 수있는 데이터를 다룰 때는 &lt;a href=&quot;path2d.float&quot;&gt; &lt;code&gt;Path2D.Float&lt;/code&gt; 를&lt;/a&gt; 사용하십시오 . 정확도 또는 배정 밀도 범위가 필요한 데이터에는 &lt;a href=&quot;path2d.double&quot;&gt; &lt;code&gt;Path2D.Double&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d6e0685fefbf5db902de5df51cf1014c225a6fa8" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;roundingmode#CEILING&quot;&gt;&lt;code&gt;RoundingMode.CEILING&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;roundingmode#CEILING&quot;&gt; &lt;code&gt;RoundingMode.CEILING&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb1eda0a05729a3f636a5cdc65f6d7c065466748" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;roundingmode#DOWN&quot;&gt;&lt;code&gt;RoundingMode.DOWN&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;roundingmode#DOWN&quot;&gt; &lt;code&gt;RoundingMode.DOWN&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8d535a66801a91cec8f5ff1f1200e486d51e9631" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;roundingmode#FLOOR&quot;&gt;&lt;code&gt;RoundingMode.FLOOR&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;roundingmode#FLOOR&quot;&gt; &lt;code&gt;RoundingMode.FLOOR&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8800f484d2694c6aa5b8c6cee077bc5dbdd38495" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;roundingmode#HALF_DOWN&quot;&gt;&lt;code&gt;RoundingMode.HALF_DOWN&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;roundingmode#HALF_DOWN&quot;&gt; &lt;code&gt;RoundingMode.HALF_DOWN&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf384a5b7ecd498a4a28b28411e0aca6da09e878" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;roundingmode#HALF_EVEN&quot;&gt;&lt;code&gt;RoundingMode.HALF_EVEN&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;roundingmode#HALF_EVEN&quot;&gt; &lt;code&gt;RoundingMode.HALF_EVEN&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b9902fef76f31e516296af70a99d9a216f14b13" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;roundingmode#HALF_UP&quot;&gt;&lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;roundingmode#HALF_UP&quot;&gt; &lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c75b8f0319cc057c43f5c582ce1c75619d993456" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;roundingmode#UNNECESSARY&quot;&gt;&lt;code&gt;RoundingMode.UNNECESSARY&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;roundingmode#UNNECESSARY&quot;&gt; &lt;code&gt;RoundingMode.UNNECESSARY&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3a589c3a0918938b73715674a13e0113f4e2a8f0" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;roundingmode#UP&quot;&gt;&lt;code&gt;RoundingMode.UP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;roundingmode#UP&quot;&gt; &lt;code&gt;RoundingMode.UP&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d8de16fac3452689c1ca4ef6f6a87d76acd588ed" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;GMT&lt;/code&gt; as the last resort if the given or detected time zone ID is unknown.</source>
          <target state="translated">주어진 또는 감지 된 시간대 ID를 알 수없는 경우 최후의 수단으로 &lt;code&gt;GMT&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="fac12bc321a2a1e001dd41cb117ba17cd33bb23a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Path2D.Float&lt;/code&gt; (or this legacy &lt;code&gt;GeneralPath&lt;/code&gt; subclass) when dealing with data that can be represented and used with floating point precision. Use &lt;code&gt;Path2D.Double&lt;/code&gt; for data that requires the accuracy or range of double precision.</source>
          <target state="translated">사용 &lt;code&gt;Path2D.Float&lt;/code&gt; 를 (또는이 기존 &lt;code&gt;GeneralPath&lt;/code&gt; 의의 서브 클래스) 부동 소수점 정밀도로 나타내거나 사용 할 수있는 데이터 처리. 정확도 또는 배정 밀도 범위가 필요한 데이터에는 &lt;code&gt;Path2D.Double&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="72a1e1d022f6304b6779993a28a0d6a053434168" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;REMAINDER&lt;/code&gt; to specify that the component's display area will be from &lt;code&gt;gridx&lt;/code&gt; to the last cell in the row. Use &lt;code&gt;RELATIVE&lt;/code&gt; to specify that the component's display area will be from &lt;code&gt;gridx&lt;/code&gt; to the next to the last one in its row.</source>
          <target state="translated">사용 &lt;code&gt;REMAINDER&lt;/code&gt; 를 컴퍼넌트의 표시 영역에서 일하도록 지정하기 &lt;code&gt;gridx&lt;/code&gt; 행의 마지막 셀까지. 사용 &lt;code&gt;RELATIVE&lt;/code&gt; 컴퍼넌트의 표시 영역에서 일하도록 지정하기 &lt;code&gt;gridx&lt;/code&gt; 해당 행의 마지막에 다음에.</target>
        </trans-unit>
        <trans-unit id="953df7987410d657926e0f5687f6ad115f4d4afd" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;REMAINDER&lt;/code&gt; to specify that the component's display area will be from &lt;code&gt;gridy&lt;/code&gt; to the last cell in the column. Use &lt;code&gt;RELATIVE&lt;/code&gt; to specify that the component's display area will be from &lt;code&gt;gridy&lt;/code&gt; to the next to the last one in its column.</source>
          <target state="translated">사용 &lt;code&gt;REMAINDER&lt;/code&gt; 컴퍼넌트의 표시 영역에서 일하도록 지정합니다 &lt;code&gt;gridy&lt;/code&gt; 열의 마지막 셀까지. 사용 &lt;code&gt;RELATIVE&lt;/code&gt; 컴퍼넌트의 표시 영역에서 일하도록 지정하는 &lt;code&gt;gridy&lt;/code&gt; 그 열의 마지막 1 다음에.</target>
        </trans-unit>
        <trans-unit id="ab0b64b3a70955b0bee478de9fe933b6029ce40c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;e.getPath()&lt;/code&gt; to get the former parent of the deleted node(s). &lt;code&gt;e.getChildIndices()&lt;/code&gt; returns, in ascending order, the index(es) the node(s) had before being deleted.</source>
          <target state="translated">&lt;code&gt;e.getPath()&lt;/code&gt; 를 사용 하여 삭제 된 노드의 이전 부모를 가져옵니다. &lt;code&gt;e.getChildIndices()&lt;/code&gt; 는 노드가 삭제되기 전의 색인을 오름차순으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6f37bf40f9c8edf4aa47fd36382984b5c3fccfb4" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;e.getPath()&lt;/code&gt; to get the parent of the changed node(s). &lt;code&gt;e.getChildIndices()&lt;/code&gt; returns the index(es) of the changed node(s).</source>
          <target state="translated">&lt;code&gt;e.getPath()&lt;/code&gt; 를 사용 하여 변경된 노드의 부모를 가져옵니다. &lt;code&gt;e.getChildIndices()&lt;/code&gt; 는 변경된 노드의 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f456f2be87677ff98c6ab979b95e2ba692b7434d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;e.getPath()&lt;/code&gt; to get the parent of the new node(s). &lt;code&gt;e.getChildIndices()&lt;/code&gt; returns the index(es) of the new node(s) in ascending order.</source>
          <target state="translated">&lt;code&gt;e.getPath()&lt;/code&gt; 를 사용 하여 새 노드의 부모를 가져옵니다. &lt;code&gt;e.getChildIndices()&lt;/code&gt; 는 새 노드의 인덱스를 오름차순으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0c3de9ff1f0c6063c6d3de58d010046f1406a5dc" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;e.getPath()&lt;/code&gt; to get the path to the node. &lt;code&gt;e.getChildIndices()&lt;/code&gt; returns null.</source>
          <target state="translated">&lt;code&gt;e.getPath()&lt;/code&gt; 를 사용 하여 노드 경로를 가져옵니다. &lt;code&gt;e.getChildIndices()&lt;/code&gt; 는 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4caafd9444ebe31ebaa57dfed279a996bfecc8f3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;getBigDecimal(int columnIndex)&lt;/code&gt; or &lt;code&gt;getBigDecimal(String columnLabel)&lt;/code&gt;</source>
          <target state="translated">사용 &lt;code&gt;getBigDecimal(int columnIndex)&lt;/code&gt; 또는 &lt;code&gt;getBigDecimal(String columnLabel)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd36c44f9f73f4a2cf33119c24304fa939a750ae" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;getDateInstance&lt;/code&gt; to get the normal date format for that country. There are other static factory methods available. Use &lt;code&gt;getTimeInstance&lt;/code&gt; to get the time format for that country. Use &lt;code&gt;getDateTimeInstance&lt;/code&gt; to get a date and time format. You can pass in different options to these factory methods to control the length of the result; from &lt;a href=&quot;#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#MEDIUM&quot;&gt;&lt;code&gt;MEDIUM&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#FULL&quot;&gt;&lt;code&gt;FULL&lt;/code&gt;&lt;/a&gt;. The exact result depends on the locale, but generally:</source>
          <target state="translated">해당 국가의 일반 날짜 형식을 가져 오려면 &lt;code&gt;getDateInstance&lt;/code&gt; 를 사용하십시오 . 다른 정적 팩토리 방법을 사용할 수 있습니다. &lt;code&gt;getTimeInstance&lt;/code&gt; 를 사용 하여 해당 국가의 시간 형식을 가져옵니다. &lt;code&gt;getDateTimeInstance&lt;/code&gt; 를 사용 하여 날짜 및 시간 형식을 가져옵니다. 결과의 길이를 제어하기 위해 이러한 팩토리 메소드에 다른 옵션을 전달할 수 있습니다. 에서 &lt;a href=&quot;#SHORT&quot;&gt; &lt;code&gt;SHORT&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;#MEDIUM&quot;&gt; &lt;code&gt;MEDIUM&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;#LONG&quot;&gt; &lt;code&gt;LONG&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;#FULL&quot;&gt; &lt;code&gt;FULL&lt;/code&gt; &lt;/a&gt; . 정확한 결과는 로케일에 따라 다르지만 일반적으로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b6a4ff2935cbca02e9509a5e48d130a26c1d4814" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;getDateInstance&lt;/code&gt; to get the normal date format for that country. There are other static factory methods available. Use &lt;code&gt;getTimeInstance&lt;/code&gt; to get the time format for that country. Use &lt;code&gt;getDateTimeInstance&lt;/code&gt; to get a date and time format. You can pass in different options to these factory methods to control the length of the result; from &lt;a href=&quot;dateformat#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;dateformat#MEDIUM&quot;&gt;&lt;code&gt;MEDIUM&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;dateformat#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;dateformat#FULL&quot;&gt;&lt;code&gt;FULL&lt;/code&gt;&lt;/a&gt;. The exact result depends on the locale, but generally:</source>
          <target state="translated">해당 국가의 일반적인 날짜 형식을 얻으려면 &lt;code&gt;getDateInstance&lt;/code&gt; 를 사용하십시오 . 사용 가능한 다른 정적 팩토리 메소드가 있습니다. 해당 국가의 시간 형식을 얻으려면 &lt;code&gt;getTimeInstance&lt;/code&gt; 를 사용하십시오 . &lt;code&gt;getDateTimeInstance&lt;/code&gt; 를 사용 하여 날짜 및 시간 형식을 얻으십시오. 이 팩토리 메소드에 다른 옵션을 전달하여 결과 길이를 제어 할 수 있습니다. 에서 &lt;a href=&quot;dateformat#SHORT&quot;&gt; &lt;code&gt;SHORT&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;dateformat#MEDIUM&quot;&gt; &lt;code&gt;MEDIUM&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;dateformat#LONG&quot;&gt; &lt;code&gt;LONG&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;dateformat#FULL&quot;&gt; &lt;code&gt;FULL&lt;/code&gt; &lt;/a&gt; . 정확한 결과는 로케일에 따라 다르지만 일반적으로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="779e9f017641bff211e80572ad150f42be380ccc" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;getFontName&lt;/code&gt; to get the font face name of the font.</source>
          <target state="translated">&lt;code&gt;getFontName&lt;/code&gt; 을 사용 하여 글꼴의 글꼴 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="968e46a353174ddf63f0e24fa4545f927c21bb53" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;getInstance&lt;/code&gt; or &lt;code&gt;getNumberInstance&lt;/code&gt; to get the normal number format. Use &lt;code&gt;getIntegerInstance&lt;/code&gt; to get an integer number format. Use &lt;code&gt;getCurrencyInstance&lt;/code&gt; to get the currency number format. And use &lt;code&gt;getPercentInstance&lt;/code&gt; to get a format for displaying percentages. With this format, a fraction like 0.53 is displayed as 53%.</source>
          <target state="translated">일반적인 숫자 형식을 얻으려면 &lt;code&gt;getInstance&lt;/code&gt; 또는 &lt;code&gt;getNumberInstance&lt;/code&gt; 를 사용하십시오 . 정수 형식을 얻으려면 &lt;code&gt;getIntegerInstance&lt;/code&gt; 를 사용하십시오 . &lt;code&gt;getCurrencyInstance&lt;/code&gt; 를 사용 하여 통화 번호 형식을 얻으십시오. &lt;code&gt;getPercentInstance&lt;/code&gt; 를 사용 하여 백분율을 표시하기위한 형식을 얻으십시오. 이 형식을 사용하면 0.53과 같은 분수가 53 %로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="420ab09a57fca6815735d4b9214f3c6c9db94f40" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;getLogWriter&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;getLogWriter&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="702991d5c10bb5ed1b135c11172dd6fbd1296d19" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;getName&lt;/code&gt; to get the logical name of the font. Use &lt;code&gt;getFontName&lt;/code&gt; to get the font face name of the font.</source>
          <target state="translated">글꼴의 논리적 이름을 얻으려면 &lt;code&gt;getName&lt;/code&gt; 을 사용하십시오 . &lt;code&gt;getFontName&lt;/code&gt; 을 사용 하여 글꼴의 글꼴 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5680abef7508db2f42fbbbd71327014b619add5b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;graphics.copyArea&lt;/code&gt; to implement scrolling.</source>
          <target state="translated">&lt;code&gt;graphics.copyArea&lt;/code&gt; 를 사용 하여 스크롤을 구현 합니다 .</target>
        </trans-unit>
        <trans-unit id="eb0fe9aa07f7d1d79ed52e51763d6866ee01b82f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;graphics.copyArea&lt;/code&gt; to implement scrolling. This is the fastest for most applications.</source>
          <target state="translated">&lt;code&gt;graphics.copyArea&lt;/code&gt; 를 사용 하여 스크롤을 구현 합니다 . 이것은 대부분의 응용 프로그램에서 가장 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="694b86515aa35fc0e9dc38928a88a1c51297ebcb" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;isDocFlavorSupported()&lt;/code&gt; to verify that a &lt;code&gt;DocFlavor&lt;/code&gt; is supported before calling this method.</source>
          <target state="translated">사용 &lt;code&gt;isDocFlavorSupported()&lt;/code&gt; 있는지 확인합니다 &lt;code&gt;DocFlavor&lt;/code&gt; 를가 이 메서드를 호출하기 전에 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b284f9ea96688c364578153437d85e4f80b64f0f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;isDocFlavorSupported()&lt;/code&gt; to verify that a DocFlavor is supported before calling this method.</source>
          <target state="translated">이 메소드를 호출하기 전에 &lt;code&gt;isDocFlavorSupported()&lt;/code&gt; 를 사용하여 DocFlavor가 지원되는지 확인 하십시오 .</target>
        </trans-unit>
        <trans-unit id="1af60c916f092800d27a966c895637acebd0a432" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;nextSibling&lt;/code&gt; to specify the child node before which the result nodes should be inserted. If &lt;code&gt;nextSibling&lt;/code&gt; is not a descendant of &lt;code&gt;node&lt;/code&gt;, then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. If &lt;code&gt;node&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;nextSibling&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, then an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown. If &lt;code&gt;nextSibling&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the behavior is the same as calling &lt;a href=&quot;#%3Cinit%3E(org.w3c.dom.Node)&quot;&gt;&lt;code&gt;DOMResult(Node node)&lt;/code&gt;&lt;/a&gt;, i.e. append the result nodes as the last child of the specified &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">사용 &lt;code&gt;nextSibling&lt;/code&gt; 결과 노드가 삽입되기 직전의 자식 (child) 노드를 지정합니다. 경우 &lt;code&gt;nextSibling&lt;/code&gt; 가 의 자손 아닌 &lt;code&gt;node&lt;/code&gt; , 다음 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가 슬로우됩니다. 경우 &lt;code&gt;node&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; 와 &lt;code&gt;nextSibling&lt;/code&gt; 가 아닌 &lt;code&gt;null&lt;/code&gt; , 다음 &lt;code&gt;IllegalStateException&lt;/code&gt; 이가 슬로우됩니다. 경우 &lt;code&gt;nextSibling&lt;/code&gt; 가 있다 &lt;code&gt;null&lt;/code&gt; , 다음 동작을 호출하는 것과 동일 &lt;a href=&quot;#%3Cinit%3E(org.w3c.dom.Node)&quot;&gt; &lt;code&gt;DOMResult(Node node)&lt;/code&gt; &lt;/a&gt; , 즉 특정의 마지막 자식 같은 결과 노드 추가 &lt;code&gt;node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fda833e065737fdee3c3fa7e60d312119beb205" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;nextSibling&lt;/code&gt; to specify the child node where the result nodes should be inserted before. If &lt;code&gt;nextSibling&lt;/code&gt; is not a sibling of &lt;code&gt;node&lt;/code&gt;, then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. If &lt;code&gt;node&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;nextSibling&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. If &lt;code&gt;nextSibling&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the behavior is the same as calling &lt;a href=&quot;#%3Cinit%3E(org.w3c.dom.Node)&quot;&gt;&lt;code&gt;DOMResult(Node node)&lt;/code&gt;&lt;/a&gt;, i.e. append the result nodes as the last child of the specified &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">사용 &lt;code&gt;nextSibling&lt;/code&gt; 결과 노드가 삽입되기 직전의 자식 (child) 노드를 지정합니다. 경우 &lt;code&gt;nextSibling&lt;/code&gt; 가 의 형제 아닌 &lt;code&gt;node&lt;/code&gt; , 다음 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가 슬로우됩니다. 경우 &lt;code&gt;node&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; 와 &lt;code&gt;nextSibling&lt;/code&gt; 가 아닌 &lt;code&gt;null&lt;/code&gt; , 다음 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가 슬로우됩니다. 경우 &lt;code&gt;nextSibling&lt;/code&gt; 가 있다 &lt;code&gt;null&lt;/code&gt; , 다음 동작을 호출하는 것과 동일 &lt;a href=&quot;#%3Cinit%3E(org.w3c.dom.Node)&quot;&gt; &lt;code&gt;DOMResult(Node node)&lt;/code&gt; &lt;/a&gt; , 즉 특정의 마지막 자식 같은 결과 노드 추가 &lt;code&gt;node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="285004d8a1ae1f4494dbf686db81f34f0370c340" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;nextSibling&lt;/code&gt; to specify the child node where the result nodes should be inserted before. If &lt;code&gt;nextSibling&lt;/code&gt; is not a sibling of &lt;code&gt;node&lt;/code&gt;, then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. If &lt;code&gt;node&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;nextSibling&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. If &lt;code&gt;nextSibling&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the behavior is the same as calling &lt;a href=&quot;#%3Cinit%3E(org.w3c.dom.Node,java.lang.String)&quot;&gt;&lt;code&gt;DOMResult(Node node, String systemId)&lt;/code&gt;&lt;/a&gt;, i.e. append the result nodes as the last child of the specified node and use the specified System ID.</source>
          <target state="translated">사용 &lt;code&gt;nextSibling&lt;/code&gt; 결과 노드가 삽입되기 직전의 자식 (child) 노드를 지정합니다. 경우 &lt;code&gt;nextSibling&lt;/code&gt; 가 의 형제 아닌 &lt;code&gt;node&lt;/code&gt; , 다음 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가 슬로우됩니다. 경우 &lt;code&gt;node&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; 와 &lt;code&gt;nextSibling&lt;/code&gt; 가 아닌 &lt;code&gt;null&lt;/code&gt; , 다음 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가 슬로우됩니다. 경우 &lt;code&gt;nextSibling&lt;/code&gt; 가 있다 &lt;code&gt;null&lt;/code&gt; , 다음 동작은 호출과 동일 &lt;a href=&quot;#%3Cinit%3E(org.w3c.dom.Node,java.lang.String)&quot;&gt; &lt;code&gt;DOMResult(Node node, String systemId)&lt;/code&gt; &lt;/a&gt; 즉, APPEND 마지막 지정된 노드의 아이 지정된 시스템 ID를 사용하여 같은 결과 노드.</target>
        </trans-unit>
        <trans-unit id="e54473f73c2d22ad76e50366ffbd8fa4b91ab4e3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;reconnect()&lt;/code&gt; to change the connection request controls of a context. Invoking &lt;code&gt;ldapContext.reconnect()&lt;/code&gt; affects only the connection used by &lt;code&gt;ldapContext&lt;/code&gt; and any new contexts instances that are derived form &lt;code&gt;ldapContext&lt;/code&gt;. Contexts that previously shared the connection with &lt;code&gt;ldapContext&lt;/code&gt; remain unchanged. That is, a context's connection request controls must be explicitly changed and is not affected by changes to another context's connection request controls.</source>
          <target state="translated">컨텍스트의 연결 요청 제어를 변경 하려면 &lt;code&gt;reconnect()&lt;/code&gt; 를 사용하십시오 . 호출 &lt;code&gt;ldapContext.reconnect()&lt;/code&gt; 에 의해 사용 연결 만 영향 &lt;code&gt;ldapContext&lt;/code&gt; 및 양식 파생 새로운 콘텍스트 인스턴스 &lt;code&gt;ldapContext&lt;/code&gt; . 이전에 &lt;code&gt;ldapContext&lt;/code&gt; 와 연결을 공유 한 컨텍스트 는 변경되지 않습니다. 즉, 컨텍스트의 연결 요청 제어는 명시 적으로 변경되어야하며 다른 컨텍스트의 연결 요청 제어에 대한 변경의 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eff85c139fa939d079bdc65166baec23fa35ae14" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;setCharacterStream&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;setCharacterStream&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="e1d352b2c4abc53372a3b1fbf996c85b6e7586bb" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;setLogWriter&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;setLogWriter&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="e737c6e990a5b6b97bffb29534bc33afc88ede7d" translate="yes" xml:space="preserve">
          <source>Use CompoundBorder to nest multiple border objects, creating a single, combined border.</source>
          <target state="translated">CompoundBorder를 사용하여 여러 테두리 개체를 중첩하여 결합 된 단일 테두리를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d6a7f6f1129f57d15e66f9bfe66c911c2a147d49" translate="yes" xml:space="preserve">
          <source>Use CookieHandler.setDefault to set a brand new &lt;a href=&quot;cookiehandler&quot;&gt;&lt;code&gt;CookieHandler&lt;/code&gt;&lt;/a&gt; implementation</source>
          <target state="translated">CookieHandler.setDefault를 사용하여 새로운 &lt;a href=&quot;cookiehandler&quot;&gt; &lt;code&gt;CookieHandler&lt;/code&gt; &lt;/a&gt; 구현 을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="8d8ec2a7b620761b3e51cfd08c9db780fbf97f4c" translate="yes" xml:space="preserve">
          <source>Use DatagramSocket instead for UDP transport.</source>
          <target state="translated">UDP 전송에 대신 DatagramSocket을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="45136345037c83bd8e8f2211e80a3f3402a94c78" translate="yes" xml:space="preserve">
          <source>Use EmptyBorder to create a plain border (this mechanism replaces its predecessor, &lt;code&gt;setInsets&lt;/code&gt;).</source>
          <target state="translated">EmptyBorder를 사용하여 일반 테두리를 만듭니다 (이 메커니즘은 이전 버전 인 &lt;code&gt;setInsets&lt;/code&gt; 를 대체합니다 ).</target>
        </trans-unit>
        <trans-unit id="d03627fe110c55301b7657f70d21f5fb98478b22" translate="yes" xml:space="preserve">
          <source>Use TMNOFLAGS to indicate no flags value is selected.</source>
          <target state="translated">TMNOFLAGS를 사용하여 플래그 값이 선택되지 않았 음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="64ce5d5301bfbb4f02764d2a521074b26740c679" translate="yes" xml:space="preserve">
          <source>Use a DOM node to create a new output target specifying the child node where the result nodes should be inserted before and the specified System ID.</source>
          <target state="translated">DOM 노드를 사용하여 결과 노드가 앞에 삽입되어야하는 자식 노드와 지정된 시스템 ID를 지정하는 새 출력 대상을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f20671810cec9579156940dd9c1c3b2a12692283" translate="yes" xml:space="preserve">
          <source>Use a DOM node to create a new output target specifying the child node where the result nodes should be inserted before.</source>
          <target state="translated">DOM 노드를 사용하여 결과 노드가 이전에 삽입되어야하는 자식 노드를 지정하는 새 출력 대상을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="cc4306ba0bd2a789acc2a6ef86618ec6db21cf5e" translate="yes" xml:space="preserve">
          <source>Use a DOM node to create a new output target with the specified System ID.</source>
          <target state="translated">DOM 노드를 사용하여 지정된 시스템 ID로 새 출력 대상을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7f4bd922c924160105c2f7e0ae2ab49d1a3a8cd7" translate="yes" xml:space="preserve">
          <source>Use a DOM node to create a new output target.</source>
          <target state="translated">DOM 노드를 사용하여 새 출력 대상을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2635db2d19700978d16aa75735777cc50893fc71" translate="yes" xml:space="preserve">
          <source>Use caution when constructing streams from repeated concatenation. Accessing an element of a deeply concatenated stream can result in deep call chains, or even &lt;code&gt;StackOverflowError&lt;/code&gt;.</source>
          <target state="translated">반복 된 연결에서 스트림을 구성 할 때주의하십시오. 깊게 연결된 스트림의 요소에 액세스하면 깊은 호출 체인 또는 &lt;code&gt;StackOverflowError&lt;/code&gt; 가 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5f9eb5e22cdad367831e2e1d7b25d5f963b85b61" translate="yes" xml:space="preserve">
          <source>Use caution when constructing streams from repeated concatenation. Accessing an element of a deeply concatenated stream can result in deep call chains, or even &lt;code&gt;StackOverflowException&lt;/code&gt;.</source>
          <target state="translated">반복 연결에서 스트림을 구성 할 때는주의하십시오. 깊이 연결된 스트림의 요소에 액세스하면 깊은 콜 체인 또는 심지어 &lt;code&gt;StackOverflowException&lt;/code&gt; 이 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="708c6d8adc8ed3e57938531b8b0e23cedeb595ae" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;beginRequest&lt;/code&gt; and &lt;code&gt;endRequest&lt;/code&gt; is optional, vendor specific and should largely be transparent. In particular implementations may detect conditions that indicate dependence on other work such as an open transaction. It is recommended though not required that implementations throw a &lt;code&gt;SQLException&lt;/code&gt; if there is an active transaction and &lt;code&gt;beginRequest&lt;/code&gt; is called. Using these methods may improve performance or provide other benefits. Consult your vendors documentation for additional information.</source>
          <target state="translated">의 사용 &lt;code&gt;beginRequest&lt;/code&gt; 및 &lt;code&gt;endRequest&lt;/code&gt; 선택, 공급 업체 고유의 것입니다 크게 투명해야한다. 특정 구현에서는 공개 트랜잭션과 같은 다른 작업에 대한 종속성을 나타내는 조건을 감지 할 수 있습니다. 활성 트랜잭션이 있고 &lt;code&gt;beginRequest&lt;/code&gt; 가 호출 되는 경우 구현에서 &lt;code&gt;SQLException&lt;/code&gt; 을 throw하는 것이 필수는 아니지만 권장 됩니다. 이러한 방법을 사용하면 성능이 향상되거나 다른 이점을 얻을 수 있습니다. 추가 정보는 공급 업체 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2effb865eb7ca9542e528aee307a24b00bd72cfa" translate="yes" xml:space="preserve">
          <source>Use of Locale</source>
          <target state="translated">로케일 사용</target>
        </trans-unit>
        <trans-unit id="cb05a447cd7a37a80681ca041a26f4b78df9b004" translate="yes" xml:space="preserve">
          <source>Use of a &lt;code&gt;Clock&lt;/code&gt; is optional. All key date-time classes also have a &lt;code&gt;now()&lt;/code&gt; factory method that uses the system clock in the default time zone. The primary purpose of this abstraction is to allow alternate clocks to be plugged in as and when required. Applications use an object to obtain the current time rather than a static method. This can simplify testing.</source>
          <target state="translated">&lt;code&gt;Clock&lt;/code&gt; 사용 은 선택 사항입니다. 모든 주요 날짜-시간 클래스 에는 기본 시간대의 시스템 시계를 사용 하는 &lt;code&gt;now()&lt;/code&gt; 팩토리 메소드가 있습니다. 이 추상화의 주요 목적은 필요에 따라 대체 클럭을 연결할 수 있도록하는 것입니다. 응용 프로그램은 객체를 사용하여 정적 메서드가 아닌 현재 시간을 얻습니다. 이것은 테스트를 단순화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="369f1854ebeea7cd5961451e910b9ee767350d99" translate="yes" xml:space="preserve">
          <source>Use of a general &lt;code&gt;Object&lt;/code&gt; other than an &lt;code&gt;ImageInputStream&lt;/code&gt; is intended for readers that interact directly with a capture device or imaging protocol. The set of legal classes is advertised by the reader's service provider's &lt;code&gt;getInputTypes&lt;/code&gt; method; most readers will return a single-element array containing only &lt;code&gt;ImageInputStream.class&lt;/code&gt; to indicate that they accept only an &lt;code&gt;ImageInputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; 이외의 일반 &lt;code&gt;Object&lt;/code&gt; 사용은 캡처 장치 또는 이미징 프로토콜과 직접 상호 작용하는 독자를위한 것입니다. 법적 클래스 세트는 독자의 서비스 프로 바이더의 &lt;code&gt;getInputTypes&lt;/code&gt; 메소드에 의해 통지 됩니다. 대부분의 독자는 단지 포함하는 단일 요소의 배열 반환 &lt;code&gt;ImageInputStream.class&lt;/code&gt; 그들은 단지에 동의 함을 나타 내기 위해 &lt;code&gt;ImageInputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6217f56b73d214bf4cffb2a05aa4b6c8ffe43cf" translate="yes" xml:space="preserve">
          <source>Use of a general &lt;code&gt;Object&lt;/code&gt; other than an &lt;code&gt;ImageOutputStream&lt;/code&gt; is intended for writers that interact directly with an output device or imaging protocol. The set of legal classes is advertised by the writer's service provider's &lt;code&gt;getOutputTypes&lt;/code&gt; method; most writers will return a single-element array containing only &lt;code&gt;ImageOutputStream.class&lt;/code&gt; to indicate that they accept only an &lt;code&gt;ImageOutputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; 이외의 일반적인 &lt;code&gt;Object&lt;/code&gt; 사용은 출력 장치 또는 이미징 프로토콜과 직접 상호 작용하는 작성자를위한 것입니다. 법적 클래스 세트는 라이터의 서비스 프로 바이더의 &lt;code&gt;getOutputTypes&lt;/code&gt; 메소드에 의해 통지 됩니다. 대부분의 작가는 포함하는 단일 요소의 배열로 반환합니다 &lt;code&gt;ImageOutputStream.class&lt;/code&gt; 을 그들은 단지에 동의 함을 나타 내기 위해 &lt;code&gt;ImageOutputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="919fc92515203369ae15eb2d6fdc235b2e160fd8" translate="yes" xml:space="preserve">
          <source>Use of a type</source>
          <target state="translated">유형의 사용</target>
        </trans-unit>
        <trans-unit id="6ceed8f5dfd7977ae1f8630a515163d9d4b00ed9" translate="yes" xml:space="preserve">
          <source>Use of channel bindings is optional in GSS-API. ChannelBinding can be set for the &lt;a href=&quot;gsscontext&quot;&gt;&lt;code&gt;GSSContext&lt;/code&gt;&lt;/a&gt; using the &lt;a href=&quot;gsscontext#setChannelBinding(org.ietf.jgss.ChannelBinding)&quot;&gt;&lt;code&gt;setChannelBinding&lt;/code&gt;&lt;/a&gt; method before the first call to &lt;a href=&quot;gsscontext#initSecContext(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;initSecContext&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;gsscontext#acceptSecContext(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;acceptSecContext&lt;/code&gt;&lt;/a&gt; has been performed. Unless the &lt;code&gt;setChannelBinding&lt;/code&gt; method has been used to set the ChannelBinding for a GSSContext object, &lt;code&gt;null&lt;/code&gt; ChannelBinding will be assumed.</source>
          <target state="translated">채널 바인딩 사용은 GSS-API에서 선택 사항입니다. &lt;a href=&quot;gsscontext#initSecContext(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;initSecContext&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;gsscontext#acceptSecContext(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;acceptSecContext&lt;/code&gt; 에&lt;/a&gt; 대한 첫 번째 호출 이 수행 되기 전에 &lt;a href=&quot;gsscontext#setChannelBinding(org.ietf.jgss.ChannelBinding)&quot;&gt; &lt;code&gt;setChannelBinding&lt;/code&gt; &lt;/a&gt; 메소드를 사용 하여 &lt;a href=&quot;gsscontext&quot;&gt; &lt;code&gt;GSSContext&lt;/code&gt; 에&lt;/a&gt; 대해 ChannelBinding을 설정할 수 있습니다 . &lt;code&gt;setChannelBinding&lt;/code&gt; 메서드를 사용하여 GSSContext 개체에 대한 ChannelBinding을 설정 하지 않은 경우 &lt;code&gt;null&lt;/code&gt; ChannelBinding으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="ee1ee2f58c0e9bb91818cfabbbe458720edb1a63" translate="yes" xml:space="preserve">
          <source>Use of short zone IDs has been deprecated in &lt;code&gt;java.util.TimeZone&lt;/code&gt;. This map allows the IDs to continue to be used via the &lt;a href=&quot;#of(java.lang.String,java.util.Map)&quot;&gt;&lt;code&gt;of(String, Map)&lt;/code&gt;&lt;/a&gt; factory method.</source>
          <target state="translated">짧은 영역 ID 사용은 &lt;code&gt;java.util.TimeZone&lt;/code&gt; 에서 더 이상 사용되지 않습니다 . 이 맵을 사용하면 &lt;a href=&quot;#of(java.lang.String,java.util.Map)&quot;&gt; &lt;code&gt;of(String, Map)&lt;/code&gt; &lt;/a&gt; 팩토리 메소드 를 통해 ID를 계속 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5fbb66b60991b9d33cc1b3f5afa907a46906e307" translate="yes" xml:space="preserve">
          <source>Use of short zone IDs has been deprecated in &lt;code&gt;java.util.TimeZone&lt;/code&gt;. This map allows the IDs to continue to be used via the &lt;a href=&quot;zoneid#of-java.lang.String-java.util.Map-&quot;&gt;&lt;code&gt;of(String, Map)&lt;/code&gt;&lt;/a&gt; factory method.</source>
          <target state="translated">&lt;code&gt;java.util.TimeZone&lt;/code&gt; 에서는 단기 영역 ID 사용이 더 이상 사용되지 않습니다 . 이 맵을 사용하면 &lt;a href=&quot;zoneid#of-java.lang.String-java.util.Map-&quot;&gt; &lt;code&gt;of(String, Map)&lt;/code&gt; &lt;/a&gt; 팩토리 메소드 를 통해 ID를 계속 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="417e4eeadb1711caae16c6ea829d782b618726ed" translate="yes" xml:space="preserve">
          <source>Use of the DefaultHandler version of this method is recommended as the &lt;code&gt;HandlerBase&lt;/code&gt; class has been deprecated in SAX 2.0</source>
          <target state="translated">&lt;code&gt;HandlerBase&lt;/code&gt; 클래스는 SAX 2.0에서 더 이상 사용되지 않으므로이 메서드의 DefaultHandler 버전을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="1dc4af02d47522265e3d003776f5520cad8e4737" translate="yes" xml:space="preserve">
          <source>Use of the DefaultHandler version of this method is recommended as the HandlerBase class has been deprecated in SAX 2.0</source>
          <target state="translated">HandlerBase 클래스는 SAX 2.0에서 더 이상 사용되지 않으므로이 메서드의 DefaultHandler 버전을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b01d1cf78cd908bc4d6d0db21f37100e7c86900c" translate="yes" xml:space="preserve">
          <source>Use of this method is not recommended as each byte is interpreted as a Unicode code point in the range 0 to 255, and so can only be used to draw Latin characters in that range.</source>
          <target state="translated">각 바이트는 0에서 255 범위의 유니 코드 코드 포인트로 해석되므로이 방법을 사용하지 않는 것이 좋습니다. 따라서 해당 범위의 라틴 문자를 그리는 데만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdede25dcb13c6bbe24cf1d8bc015c2081eca389" translate="yes" xml:space="preserve">
          <source>Use of this permission is discouraged from further use because it is possible to circumvent the name restrictions by overriding the &lt;a href=&quot;provider#getName()&quot;&gt;&lt;code&gt;Provider.getName()&lt;/code&gt;&lt;/a&gt; method. Also, there is an equivalent level of risk associated with granting code permission to insert a provider with a specific name, or any name it chooses. Users should use the &quot;insertProvider&quot; permission instead.</source>
          <target state="translated">&lt;a href=&quot;provider#getName()&quot;&gt; &lt;code&gt;Provider.getName()&lt;/code&gt; &lt;/a&gt; 메서드를 재정 의하여 이름 제한을 피할 수 있으므로이 권한을 더 이상 사용하지 않는 것이 좋습니다 . 또한 특정 이름 또는 선택한 이름으로 공급자를 삽입 할 수있는 코드 권한을 부여하는 것과 관련된 위험 수준이 동일합니다. 사용자는 대신 &quot;insertProvider&quot;권한을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="47776f8de3b6e99b62367124396195d1311cc3e5" translate="yes" xml:space="preserve">
          <source>Use of this permission is discouraged from further use because it is possible to circumvent the name restrictions by overriding the &lt;a href=&quot;provider#getName--&quot;&gt;&lt;code&gt;Provider.getName()&lt;/code&gt;&lt;/a&gt; method. Also, there is an equivalent level of risk associated with granting code permission to insert a provider with a specific name, or any name it chooses. Users should use the &quot;insertProvider&quot; permission instead.</source>
          <target state="translated">&lt;a href=&quot;provider#getName--&quot;&gt; &lt;code&gt;Provider.getName()&lt;/code&gt; &lt;/a&gt; 메소드를 대체하여 이름 제한을 우회 할 수 있으므로이 권한의 사용은 더 이상 사용하지 않는 것이 좋습니다 . 또한 특정 이름 또는 선택한 이름을 가진 공급자를 삽입 할 수있는 코드 권한을 부여하는 것과 동등한 수준의 위험이 있습니다. 대신 &quot;insertProvider&quot;권한을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9051677a6e4fbcc422563bc59bd33e39fea73ade" translate="yes" xml:space="preserve">
          <source>Use serialVersionUID from JNDI 1.1.1 for interoperability.</source>
          <target state="translated">상호 운용성을 위해 JNDI 1.1.1의 serialVersionUID를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7ddaf31838a136e9c309d1bb709d82695fde5038" translate="yes" xml:space="preserve">
          <source>Use setURL(URL, String, String, int, String, String, String, String);</source>
          <target state="translated">setURL (URL, String, String, int, String, String, String, String);</target>
        </trans-unit>
        <trans-unit id="fbc9ac9277672c5403bd4fc62a472f102d00bbee" translate="yes" xml:space="preserve">
          <source>Use subclassing for naming systems that generate contents of a binding dynamically.</source>
          <target state="translated">바인딩의 컨텐츠를 동적으로 생성하는 이름 지정 시스템에 서브 클래 싱을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e911b55ff1c3850b36c69642edf91a97596384f6" translate="yes" xml:space="preserve">
          <source>Use subclassing for naming systems that generate contents of a name/class pair dynamically.</source>
          <target state="translated">이름 / 클래스 쌍의 컨텐츠를 동적으로 생성하는 이름 지정 시스템에 서브 클래 싱을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bcf6a1eed66a95486a3f9fff426a40065f53030a" translate="yes" xml:space="preserve">
          <source>Use the &quot;org.xml.sax.driver&quot; property to locate the SAX2 driver to embed.</source>
          <target state="translated">&quot;org.xml.sax.driver&quot;속성을 사용하여 포함 할 SAX2 드라이버를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="be76e422559bbb0051def9498535541b46d601b7" translate="yes" xml:space="preserve">
          <source>Use the &quot;org.xml.sax.parser&quot; property to locate the embedded SAX1 driver.</source>
          <target state="translated">&quot;org.xml.sax.parser&quot;속성을 사용하여 포함 된 SAX1 드라이버를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="8a35b0184c3a7e805eb67b0688d21eff72e1184f" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;#compareTo(java.util.Calendar)&quot;&gt;&lt;code&gt;compareTo&lt;/code&gt;&lt;/a&gt; method to compare only the time values.</source>
          <target state="translated">시간 값만 비교 하려면 &lt;a href=&quot;#compareTo(java.util.Calendar)&quot;&gt; &lt;code&gt;compareTo&lt;/code&gt; &lt;/a&gt; 메서드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8830af169574657002ea7e021be826a50d5de602" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;calendar#compareTo-java.util.Calendar-&quot;&gt;&lt;code&gt;compareTo&lt;/code&gt;&lt;/a&gt; method to compare only the time values.</source>
          <target state="translated">&lt;a href=&quot;calendar#compareTo-java.util.Calendar-&quot;&gt; &lt;code&gt;compareTo&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 시간 값만 비교하십시오.</target>
        </trans-unit>
        <trans-unit id="77b3922a77064dfd2f5179047923f5a109f4b04b" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;BeanInfo&lt;/code&gt; interface to create a &lt;code&gt;BeanInfo&lt;/code&gt; class and provide explicit information about the methods, properties, events, and other features of your beans.</source>
          <target state="translated">사용 &lt;code&gt;BeanInfo&lt;/code&gt; 만들 인터페이스를 &lt;code&gt;BeanInfo&lt;/code&gt; 클래스와 빈의 메서드, 속성, 이벤트 및 기타 기능에 대한 명시적인 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="08a1946569a048b1d9926101b54d2c830546c42a" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;Proxy.NO_PROXY&lt;/code&gt; constant for representing a direct connection.</source>
          <target state="translated">직접 연결을 나타내는 데 &lt;code&gt;Proxy.NO_PROXY&lt;/code&gt; 상수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="535b38431da565f50861354045a5a6583722e95f" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;javax.xml.parsers.DocumentBuilderFactory&lt;/code&gt; system property.</source>
          <target state="translated">&lt;code&gt;javax.xml.parsers.DocumentBuilderFactory&lt;/code&gt; 시스템 특성을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="948ac3ee598f466cea04edd180d864db0fea6801" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;javax.xml.parsers.SAXParserFactory&lt;/code&gt; system property.</source>
          <target state="translated">Use the &lt;code&gt;javax.xml.parsers.SAXParserFactory&lt;/code&gt; system property.</target>
        </trans-unit>
        <trans-unit id="8b84123e50b0172e193a126b298c413dca454ff7" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;javax.xml.transform.TransformerFactory&lt;/code&gt; system property.</source>
          <target state="translated">Use the &lt;code&gt;javax.xml.transform.TransformerFactory&lt;/code&gt; system property.</target>
        </trans-unit>
        <trans-unit id="91efc2cdb4c263923502710377884700378cd1be" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;user.timezone&lt;/code&gt; property value as the default time zone ID if it's available.</source>
          <target state="translated">사용 &lt;code&gt;user.timezone&lt;/code&gt; 의 이 가능한 경우 기본 시간대 ID로 속성 값을.</target>
        </trans-unit>
        <trans-unit id="5b0c6e5525e5046e275804b460c08219d5c2acba" translate="yes" xml:space="preserve">
          <source>Use the Area Averaging image scaling algorithm.</source>
          <target state="translated">Use the Area Averaging image scaling algorithm.</target>
        </trans-unit>
        <trans-unit id="839ce9b65e7c3f8a2aa2d507ed179a9c915c2369" translate="yes" xml:space="preserve">
          <source>Use the Area Averaging image scaling algorithm. The image object is free to substitute a different filter that performs the same algorithm yet integrates more efficiently into the image infrastructure supplied by the toolkit.</source>
          <target state="translated">Use the Area Averaging image scaling algorithm. The image object is free to substitute a different filter that performs the same algorithm yet integrates more efficiently into the image infrastructure supplied by the toolkit.</target>
        </trans-unit>
        <trans-unit id="c526c0c2e324f19dcce91048ad92e05eaf534290" translate="yes" xml:space="preserve">
          <source>Use the ResourceBundle.getLocale to determine the bundle's locale, then return the orientation for that locale.</source>
          <target state="translated">Use the ResourceBundle.getLocale to determine the bundle's locale, then return the orientation for that locale.</target>
        </trans-unit>
        <trans-unit id="8564cea1a701cc2f7fea3d30026522e2001d902e" translate="yes" xml:space="preserve">
          <source>Use the classes in &lt;code&gt;java.security.cert&lt;/code&gt; instead.</source>
          <target state="translated">Use the classes in &lt;code&gt;java.security.cert&lt;/code&gt; instead.</target>
        </trans-unit>
        <trans-unit id="4daae1abe47b1f39948777e1bdc549723a74c3ea" translate="yes" xml:space="preserve">
          <source>Use the configuration file &quot;jaxp.properties&quot;. The file is in standard &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;&lt;code&gt;Properties&lt;/code&gt;&lt;/a&gt; format and typically located in the &lt;code&gt;conf&lt;/code&gt; directory of the Java installation. It contains the fully qualified name of the implementation class with the key being the system property defined above.</source>
          <target state="translated">Use the configuration file &quot;jaxp.properties&quot;. The file is in standard &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt; &lt;code&gt;Properties&lt;/code&gt; &lt;/a&gt; format and typically located in the &lt;code&gt;conf&lt;/code&gt; directory of the Java installation. It contains the fully qualified name of the implementation class with the key being the system property defined above.</target>
        </trans-unit>
        <trans-unit id="059454d3a9a120ec731135130a806bc5d6796e70" translate="yes" xml:space="preserve">
          <source>Use the configuration file &quot;jaxp.properties&quot;. The file is in standard &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;&lt;code&gt;Properties&lt;/code&gt;&lt;/a&gt; format and typically located in the conf directory of the Java installation. It contains the fully qualified name of the implementation class with the key being the system property defined above.</source>
          <target state="translated">Use the configuration file &quot;jaxp.properties&quot;. The file is in standard &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt; &lt;code&gt;Properties&lt;/code&gt; &lt;/a&gt; format and typically located in the conf directory of the Java installation. It contains the fully qualified name of the implementation class with the key being the system property defined above.</target>
        </trans-unit>
        <trans-unit id="021a0b67f5ca449b020532d840b89b483ffa5ebe" translate="yes" xml:space="preserve">
          <source>Use the configuration file &quot;stax.properties&quot;. The file is in standard &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;&lt;code&gt;Properties&lt;/code&gt;&lt;/a&gt; format and typically located in the &lt;code&gt;conf&lt;/code&gt; directory of the Java installation. It contains the fully qualified name of the implementation class with the key being the system property defined above.</source>
          <target state="translated">Use the configuration file &quot;stax.properties&quot;. The file is in standard &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt; &lt;code&gt;Properties&lt;/code&gt; &lt;/a&gt; format and typically located in the &lt;code&gt;conf&lt;/code&gt; directory of the Java installation. It contains the fully qualified name of the implementation class with the key being the system property defined above.</target>
        </trans-unit>
        <trans-unit id="19c80e1fe33c3c05b776ad3eb56414742a517dd2" translate="yes" xml:space="preserve">
          <source>Use the configuration file &quot;stax.properties&quot;. The file is in standard &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;&lt;code&gt;Properties&lt;/code&gt;&lt;/a&gt; format and typically located in the conf directory of the Java installation. It contains the fully qualified name of the implementation class with the key being the system property defined above.</source>
          <target state="translated">Use the configuration file &quot;stax.properties&quot;. The file is in standard &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt; &lt;code&gt;Properties&lt;/code&gt; &lt;/a&gt; format and typically located in the conf directory of the Java installation. It contains the fully qualified name of the implementation class with the key being the system property defined above.</target>
        </trans-unit>
        <trans-unit id="9daed148c04c169b6c6124be4b44c8ef3c10035f" translate="yes" xml:space="preserve">
          <source>Use the constructor that takes a milliseconds value in place of this constructor</source>
          <target state="translated">Use the constructor that takes a milliseconds value in place of this constructor</target>
        </trans-unit>
        <trans-unit id="59df542fa6644cde9e8e00add13f594d57b4ceb9" translate="yes" xml:space="preserve">
          <source>Use the control factories specified in the &lt;code&gt;LdapContext.CONTROL_FACTORIES&lt;/code&gt; property of the environment, and of the provider resource file associated with &lt;code&gt;ctx&lt;/code&gt;, in that order. The value of this property is a colon-separated list of factory class names that are tried in order, and the first one that succeeds in creating the control is the one used. If none of the factories can be loaded, return &lt;code&gt;ctl&lt;/code&gt;. If an exception is encountered while creating the control, the exception is passed up to the caller.</source>
          <target state="translated">환경 의 &lt;code&gt;LdapContext.CONTROL_FACTORIES&lt;/code&gt; 특성 및 &lt;code&gt;ctx&lt;/code&gt; 와 연관된 제공자 자원 파일의 순서로 지정된 제어 팩토리를 사용하십시오 . 이 속성의 값은 순서대로 시도되는 콜론으로 구분 된 팩토리 클래스 이름 목록이며 제어를 작성하는 데 성공한 첫 번째 이름이 사용됩니다. 팩토리를로드 할 수 없으면 &lt;code&gt;ctl&lt;/code&gt; 을 리턴하십시오 . 컨트롤을 만드는 동안 예외가 발생하면 예외가 호출자에게 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="619ff9c6dc0900e865e52de7f0fb47eacee455f8" translate="yes" xml:space="preserve">
          <source>Use the default image-scaling algorithm.</source>
          <target state="translated">Use the default image-scaling algorithm.</target>
        </trans-unit>
        <trans-unit id="0dfa73d8a19ae6635badcdfdf224776765c17168" translate="yes" xml:space="preserve">
          <source>Use the default justification for the title text.</source>
          <target state="translated">Use the default justification for the title text.</target>
        </trans-unit>
        <trans-unit id="eda3b028ce79bf7226fa0cc4a80fb64792f3a469" translate="yes" xml:space="preserve">
          <source>Use the default vertical orientation for the title text.</source>
          <target state="translated">Use the default vertical orientation for the title text.</target>
        </trans-unit>
        <trans-unit id="c44023bbd984e3bf8cedb3890a1bd9e48c81db60" translate="yes" xml:space="preserve">
          <source>Use the following code or its equivalent instead: ......</source>
          <target state="translated">Use the following code or its equivalent instead: ......</target>
        </trans-unit>
        <trans-unit id="d564b414aa305e178cd608cf2010760f36a4da35" translate="yes" xml:space="preserve">
          <source>Use the following code or its equivalent instead: ...... int ttl = mcastSocket.getTimeToLive(); mcastSocket.setTimeToLive(newttl); mcastSocket.send(p); mcastSocket.setTimeToLive(ttl); ......</source>
          <target state="translated">Use the following code or its equivalent instead: ...... int ttl = mcastSocket.getTimeToLive(); mcastSocket.setTimeToLive(newttl); mcastSocket.send(p); mcastSocket.setTimeToLive(ttl); ......</target>
        </trans-unit>
        <trans-unit id="7948d640081f18ab5947c421005c42a695b76daa" translate="yes" xml:space="preserve">
          <source>Use the image scaling algorithm embodied in the &lt;code&gt;ReplicateScaleFilter&lt;/code&gt; class.</source>
          <target state="translated">Use the image scaling algorithm embodied in the &lt;code&gt;ReplicateScaleFilter&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="8866d404382ea5f8caacd61c06cbf1e5dc302bb9" translate="yes" xml:space="preserve">
          <source>Use the image scaling algorithm embodied in the &lt;code&gt;ReplicateScaleFilter&lt;/code&gt; class. The &lt;code&gt;Image&lt;/code&gt; object is free to substitute a different filter that performs the same algorithm yet integrates more efficiently into the imaging infrastructure supplied by the toolkit.</source>
          <target state="translated">Use the image scaling algorithm embodied in the &lt;code&gt;ReplicateScaleFilter&lt;/code&gt; class. The &lt;code&gt;Image&lt;/code&gt; object is free to substitute a different filter that performs the same algorithm yet integrates more efficiently into the imaging infrastructure supplied by the toolkit.</target>
        </trans-unit>
        <trans-unit id="7c832de16dec5692b2a5776cb3fafce384f06647" translate="yes" xml:space="preserve">
          <source>Use the implementation classes static &lt;code&gt;createUI()&lt;/code&gt; method to construct a look and feel delegate.</source>
          <target state="translated">Use the implementation classes static &lt;code&gt;createUI()&lt;/code&gt; method to construct a look and feel delegate.</target>
        </trans-unit>
        <trans-unit id="805f206d018b15bdbf7333ea3aa99017558a17e1" translate="yes" xml:space="preserve">
          <source>Use the javax.xml.stream.XMLEventFactory system property.</source>
          <target state="translated">Use the javax.xml.stream.XMLEventFactory system property.</target>
        </trans-unit>
        <trans-unit id="9ed769165213044cd539fb9915defe03b94eb1b5" translate="yes" xml:space="preserve">
          <source>Use the javax.xml.stream.XMLInputFactory system property.</source>
          <target state="translated">Use the javax.xml.stream.XMLInputFactory system property.</target>
        </trans-unit>
        <trans-unit id="5cfb19903ec516627df0190027cb7bc368a671a9" translate="yes" xml:space="preserve">
          <source>Use the javax.xml.stream.XMLOutputFactory system property.</source>
          <target state="translated">Use the javax.xml.stream.XMLOutputFactory system property.</target>
        </trans-unit>
        <trans-unit id="04b11f98d794860af9bee7fd79c377ad89e704f2" translate="yes" xml:space="preserve">
          <source>Use the jaxp configuration file &quot;jaxp.properties&quot;. The file is in the same format as stax.properties and will only be read if stax.properties does not exist.</source>
          <target state="translated">Use the jaxp configuration file &quot;jaxp.properties&quot;. The file is in the same format as stax.properties and will only be read if stax.properties does not exist.</target>
        </trans-unit>
        <trans-unit id="ae13ded529937cebe691ca01cd0112b1d94e2943" translate="yes" xml:space="preserve">
          <source>Use the object factories specified in the &lt;code&gt;Context.OBJECT_FACTORIES&lt;/code&gt; property of the environment, and of the provider resource file associated with &lt;code&gt;nameCtx&lt;/code&gt;, in that order. The value of this property is a colon-separated list of factory class names that are tried in order, and the first one that succeeds in creating an object is the one used. If none of the factories can be loaded, return &lt;code&gt;refInfo&lt;/code&gt;. If an exception is encountered while creating the object, the exception is passed up to the caller.</source>
          <target state="translated">환경 의 &lt;code&gt;Context.OBJECT_FACTORIES&lt;/code&gt; 특성 및 &lt;code&gt;nameCtx&lt;/code&gt; 와 연관된 제공자 자원 파일에 지정된 순서대로 오브젝트 팩토리를 사용하십시오 . 이 특성의 값은 순서대로 시도 된 콜론으로 구분 된 팩토리 클래스 이름 목록이며, 오브젝트 작성에 성공한 첫 번째 이름은 사용 된 이름입니다. 팩토리를로드 할 수없는 경우 &lt;code&gt;refInfo&lt;/code&gt; 를 리턴 하십시오 . 객체를 생성하는 동안 예외가 발생하면 예외가 호출자에게 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="88f7ad6713e05d77feccaf01db42d7f445a096e7" translate="yes" xml:space="preserve">
          <source>Use the provided integer constant &lt;a href=&quot;#NORMAL_CLOSURE&quot;&gt;&lt;code&gt;NORMAL_CLOSURE&lt;/code&gt;&lt;/a&gt; as a status code and an empty string as a reason in a typical case:</source>
          <target state="translated">Use the provided integer constant &lt;a href=&quot;#NORMAL_CLOSURE&quot;&gt; &lt;code&gt;NORMAL_CLOSURE&lt;/code&gt; &lt;/a&gt; as a status code and an empty string as a reason in a typical case:</target>
        </trans-unit>
        <trans-unit id="007ab01026abe035196e2a0bd054c258325cadd7" translate="yes" xml:space="preserve">
          <source>Use the service-provider loading facility, defined by the &lt;a href=&quot;../../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class, to attempt to locate and load an implementation of the service &lt;a href=&quot;../xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; by using the &lt;a href=&quot;../../../../../java.base/java/lang/thread#getContextClassLoader()&quot;&gt;current thread's context class loader&lt;/a&gt;. If the context class loader is null, the &lt;a href=&quot;../../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;system class loader&lt;/a&gt; will be used.</source>
          <target state="translated">Use the service-provider loading facility, defined by the &lt;a href=&quot;../../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; class, to attempt to locate and load an implementation of the service &lt;a href=&quot;../xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt; by using the &lt;a href=&quot;../../../../../java.base/java/lang/thread#getContextClassLoader()&quot;&gt;current thread's context class loader&lt;/a&gt;. If the context class loader is null, the &lt;a href=&quot;../../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;system class loader&lt;/a&gt; will be used.</target>
        </trans-unit>
        <trans-unit id="ecffa7fa39e3f920e9313be298ba162599c9f795" translate="yes" xml:space="preserve">
          <source>Use the service-provider loading facility, defined by the &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class, to attempt to locate and load an implementation of the service using the &lt;a href=&quot;../../../../java.base/java/util/serviceloader#load(java.lang.Class)&quot;&gt;default loading mechanism&lt;/a&gt;: the service-provider loading facility will use the &lt;a href=&quot;../../../../java.base/java/lang/thread#getContextClassLoader()&quot;&gt;current thread's context class loader&lt;/a&gt; to attempt to load the service. If the context class loader is null, the &lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;system class loader&lt;/a&gt; will be used.</source>
          <target state="translated">Use the service-provider loading facility, defined by the &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; class, to attempt to locate and load an implementation of the service using the &lt;a href=&quot;../../../../java.base/java/util/serviceloader#load(java.lang.Class)&quot;&gt;default loading mechanism&lt;/a&gt;: the service-provider loading facility will use the &lt;a href=&quot;../../../../java.base/java/lang/thread#getContextClassLoader()&quot;&gt;current thread's context class loader&lt;/a&gt; to attempt to load the service. If the context class loader is null, the &lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;system class loader&lt;/a&gt; will be used.</target>
        </trans-unit>
        <trans-unit id="7db852711fa0c4c30b1ba95bd87caaae1e2af6d1" translate="yes" xml:space="preserve">
          <source>Use the terminal colors to fill the remaining area.</source>
          <target state="translated">Use the terminal colors to fill the remaining area.</target>
        </trans-unit>
        <trans-unit id="d87762a5a5de19b1b4e052b1051046ba631a2e03" translate="yes" xml:space="preserve">
          <source>Use the value of the system property identified by &lt;code&gt;factoryId&lt;/code&gt;.</source>
          <target state="translated">Use the value of the system property identified by &lt;code&gt;factoryId&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af664692e8b4e477f3f84f7396c9e360d25200a4" translate="yes" xml:space="preserve">
          <source>Use this property to request processors that do not support DTDs</source>
          <target state="translated">Use this property to request processors that do not support DTDs</target>
        </trans-unit>
        <trans-unit id="23366edba1a25b51e30d47e7e7ea621fcf98e2c4" translate="yes" xml:space="preserve">
          <source>Used as a way to circumvent calling back into the Document to change it.</source>
          <target state="translated">Used as a way to circumvent calling back into the Document to change it.</target>
        </trans-unit>
        <trans-unit id="cbc18bcd32d79d242b16248bea7d812892ad7041" translate="yes" xml:space="preserve">
          <source>Used as a way to circumvent calling back into the Document to change it. Document implementations that wish to support a DocumentFilter must provide an implementation that will not callback into the DocumentFilter when the following methods are invoked from the DocumentFilter.</source>
          <target state="translated">Used as a way to circumvent calling back into the Document to change it. Document implementations that wish to support a DocumentFilter must provide an implementation that will not callback into the DocumentFilter when the following methods are invoked from the DocumentFilter.</target>
        </trans-unit>
        <trans-unit id="0f56c1648e95e339db14abab6bcec90326fcd130" translate="yes" xml:space="preserve">
          <source>Used as a way to circumvent calling back into the caret to position the cursor.</source>
          <target state="translated">Used as a way to circumvent calling back into the caret to position the cursor.</target>
        </trans-unit>
        <trans-unit id="83530e460469ef9d1d75e21973cb75c65767b54f" translate="yes" xml:space="preserve">
          <source>Used as a way to circumvent calling back into the caret to position the cursor. Caret implementations that wish to support a NavigationFilter must provide an implementation that will not callback into the NavigationFilter.</source>
          <target state="translated">Used as a way to circumvent calling back into the caret to position the cursor. Caret implementations that wish to support a NavigationFilter must provide an implementation that will not callback into the NavigationFilter.</target>
        </trans-unit>
        <trans-unit id="69a1b6c2d6727128a403a3e39035aebe604ba327" translate="yes" xml:space="preserve">
          <source>Used before starting the editing session.</source>
          <target state="translated">Used before starting the editing session.</target>
        </trans-unit>
        <trans-unit id="27a3913257aa2e69eda19e0b4712885b017d387d" translate="yes" xml:space="preserve">
          <source>Used by &lt;code&gt;AbstractLayoutCache&lt;/code&gt; to determine the size and x origin of a particular node.</source>
          <target state="translated">Used by &lt;code&gt;AbstractLayoutCache&lt;/code&gt; to determine the size and x origin of a particular node.</target>
        </trans-unit>
        <trans-unit id="e08c4f0aae52531f5ec2d1666adb1a66f841a5d8" translate="yes" xml:space="preserve">
          <source>Used by UI classes to decide whether to display a special icon for a computer node, e.g.</source>
          <target state="translated">Used by UI classes to decide whether to display a special icon for a computer node, e.g.</target>
        </trans-unit>
        <trans-unit id="b3c724a294c56ff35f607d478f97fb461db2c3ae" translate="yes" xml:space="preserve">
          <source>Used by UI classes to decide whether to display a special icon for a computer node, e.g. &quot;My Computer&quot; or a network server. The default implementation has no way of knowing, so always returns false.</source>
          <target state="translated">Used by UI classes to decide whether to display a special icon for a computer node, e.g. &quot;My Computer&quot; or a network server. The default implementation has no way of knowing, so always returns false.</target>
        </trans-unit>
        <trans-unit id="66c0374904394efb8c59f0d0f2f6a2cf468164cd" translate="yes" xml:space="preserve">
          <source>Used by UI classes to decide whether to display a special icon for a floppy disk.</source>
          <target state="translated">Used by UI classes to decide whether to display a special icon for a floppy disk.</target>
        </trans-unit>
        <trans-unit id="cf5a7cb161be66828ce5260ec573e2106d4ff2ca" translate="yes" xml:space="preserve">
          <source>Used by UI classes to decide whether to display a special icon for a floppy disk. Implies isDrive(dir). The default implementation has no way of knowing, so always returns false.</source>
          <target state="translated">Used by UI classes to decide whether to display a special icon for a floppy disk. Implies isDrive(dir). The default implementation has no way of knowing, so always returns false.</target>
        </trans-unit>
        <trans-unit id="6c13fcc427b003574ff61563d5d821f1956111f0" translate="yes" xml:space="preserve">
          <source>Used by UI classes to decide whether to display a special icon for drives or partitions, e.g. a &quot;hard disk&quot; icon.</source>
          <target state="translated">Used by UI classes to decide whether to display a special icon for drives or partitions, e.g. a &quot;hard disk&quot; icon.</target>
        </trans-unit>
        <trans-unit id="1fd1661b475cfa47e1de227fcdce6bb8cd5f2724" translate="yes" xml:space="preserve">
          <source>Used by UI classes to decide whether to display a special icon for drives or partitions, e.g. a &quot;hard disk&quot; icon. The default implementation has no way of knowing, so always returns false.</source>
          <target state="translated">Used by UI classes to decide whether to display a special icon for drives or partitions, e.g. a &quot;hard disk&quot; icon. The default implementation has no way of knowing, so always returns false.</target>
        </trans-unit>
        <trans-unit id="78d4a64996e34ba4ebf9fcdfde074ad4f6713750" translate="yes" xml:space="preserve">
          <source>Used by VM to control lowmem implicit suspension.</source>
          <target state="translated">VM에서 lowmem 암시 적 중단을 제어하는 ​​데 사용합니다.</target>
        </trans-unit>
        <trans-unit id="08459367ce881f0fc2526559cdacaa0b18843441" translate="yes" xml:space="preserve">
          <source>Used by factory methods to create a &lt;code&gt;Spring&lt;/code&gt;.</source>
          <target state="translated">Used by factory methods to create a &lt;code&gt;Spring&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70437f9ec3d7dc34159c956b846432e9d17eb36c" translate="yes" xml:space="preserve">
          <source>Used by the &lt;code&gt;Scrollable&lt;/code&gt; interface to determine the initial visible area.</source>
          <target state="translated">Used by the &lt;code&gt;Scrollable&lt;/code&gt; interface to determine the initial visible area.</target>
        </trans-unit>
        <trans-unit id="2a06be94f489d66b392e3cf7e9c67d36be44b7e5" translate="yes" xml:space="preserve">
          <source>Used by the exception thrower to set the mechanism level minor error code and its string explanation.</source>
          <target state="translated">Used by the exception thrower to set the mechanism level minor error code and its string explanation.</target>
        </trans-unit>
        <trans-unit id="654a51cea06a5e17e45f7d5df4e0dccaf0a549d2" translate="yes" xml:space="preserve">
          <source>Used by the exception thrower to set the mechanism level minor error code and its string explanation. This is used by mechanism providers to indicate error details.</source>
          <target state="translated">Used by the exception thrower to set the mechanism level minor error code and its string explanation. This is used by mechanism providers to indicate error details.</target>
        </trans-unit>
        <trans-unit id="feef8b362f6c336e2ae4fa32f8b2551aae1b132d" translate="yes" xml:space="preserve">
          <source>Used by the worker thread to get a new task to execute.</source>
          <target state="translated">Used by the worker thread to get a new task to execute.</target>
        </trans-unit>
        <trans-unit id="f089ba6628a9ebe9397fc69fcb7ce8eedd0734ce" translate="yes" xml:space="preserve">
          <source>Used by writeObject to serialize a Collection.</source>
          <target state="translated">writeObject에서 Collection을 직렬화하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9dc529dadfd528338f42341560a3916d2e0855c7" translate="yes" xml:space="preserve">
          <source>Used during context establishment to determine the state of the context.</source>
          <target state="translated">Used during context establishment to determine the state of the context.</target>
        </trans-unit>
        <trans-unit id="ec12913e7dc770754a443c2bb4d5bc156ec3580e" translate="yes" xml:space="preserve">
          <source>Used for error messages.</source>
          <target state="translated">Used for error messages.</target>
        </trans-unit>
        <trans-unit id="2a151b542b15582ce301083681c0b884a66757f6" translate="yes" xml:space="preserve">
          <source>Used for exporting a remote object with JRMP and obtaining a stub that communicates to the remote object.</source>
          <target state="translated">Used for exporting a remote object with JRMP and obtaining a stub that communicates to the remote object.</target>
        </trans-unit>
        <trans-unit id="4ff575378e61f1c77f563ace9141958457e45cf4" translate="yes" xml:space="preserve">
          <source>Used for exporting a remote object with JRMP and obtaining a stub that communicates to the remote object. Stubs are either generated at runtime using dynamic proxy objects, or they are generated statically at build time, typically using the &lt;code&gt;rmic&lt;/code&gt; tool.</source>
          <target state="translated">Used for exporting a remote object with JRMP and obtaining a stub that communicates to the remote object. Stubs are either generated at runtime using dynamic proxy objects, or they are generated statically at build time, typically using the &lt;code&gt;rmic&lt;/code&gt; tool.</target>
        </trans-unit>
        <trans-unit id="a342dbb4998173059b4be04073801899602b46a1" translate="yes" xml:space="preserve">
          <source>Used for information messages.</source>
          <target state="translated">Used for information messages.</target>
        </trans-unit>
        <trans-unit id="3bc158cb163fb81004acf41c8857cfa82b72b43e" translate="yes" xml:space="preserve">
          <source>Used for minimizing the drawing of vertical lines.</source>
          <target state="translated">Used for minimizing the drawing of vertical lines.</target>
        </trans-unit>
        <trans-unit id="b1a869b82f91aea914973f4e20dc234055b74838" translate="yes" xml:space="preserve">
          <source>Used for questions.</source>
          <target state="translated">Used for questions.</target>
        </trans-unit>
        <trans-unit id="51c552b8924bb247cdd639456a90cd872efbddc7" translate="yes" xml:space="preserve">
          <source>Used for warning messages.</source>
          <target state="translated">Used for warning messages.</target>
        </trans-unit>
        <trans-unit id="5baeecd07738a749cecd78db3cdc764d254a73bc" translate="yes" xml:space="preserve">
          <source>Used in</source>
          <target state="translated">에 사용</target>
        </trans-unit>
        <trans-unit id="46359889907c21002ed5416d941937326d7a42fa" translate="yes" xml:space="preserve">
          <source>Used in editing.</source>
          <target state="translated">Used in editing.</target>
        </trans-unit>
        <trans-unit id="7053444551f7514c590fa6f7c00fe77aafa52c0a" translate="yes" xml:space="preserve">
          <source>Used in editing. Indicates x position to place &lt;code&gt;editingComponent&lt;/code&gt;.</source>
          <target state="translated">Used in editing. Indicates x position to place &lt;code&gt;editingComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9de65447279598834af12315c0ca9487bfe695d3" translate="yes" xml:space="preserve">
          <source>Used only by subclasses.</source>
          <target state="translated">서브 클래스에서만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="48a65ae98a939b0d43426cb898489db33dbadf8a" translate="yes" xml:space="preserve">
          <source>Used only by subclasses. Constructs a TCP connection to a named host at a specified port. This acts as the SSL client.</source>
          <target state="translated">서브 클래스에서만 사용됩니다. 지정된 포트에서 명명 된 호스트에 대한 TCP 연결을 구성합니다. 이것은 SSL 클라이언트 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="5e7ab8476bfd35234f9cbe16408608fc70933694" translate="yes" xml:space="preserve">
          <source>Used only by subclasses. Constructs a TCP connection to a server at a specified address and port. This acts as the SSL client.</source>
          <target state="translated">서브 클래스에서만 사용됩니다. 지정된 주소와 포트에서 서버에 대한 TCP 연결을 구성합니다. 이것은 SSL 클라이언트 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="10af4e079828016fb0aedb6e23582ad48eb8f307" translate="yes" xml:space="preserve">
          <source>Used only by subclasses. Constructs an SSL connection to a named host at a specified port, binding the client side of the connection a given address and port. This acts as the SSL client.</source>
          <target state="translated">서브 클래스에서만 사용됩니다. 지정된 주소와 포트에 연결의 클라이언트 쪽을 바인딩하여 지정된 포트에서 명명 된 호스트에 대한 SSL 연결을 구성합니다. 이것은 SSL 클라이언트 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="91fa7f2c25747e62338e344309bafbb32d763769" translate="yes" xml:space="preserve">
          <source>Used only by subclasses. Constructs an SSL connection to a server at a specified address and TCP port, binding the client side of the connection a given address and port. This acts as the SSL client.</source>
          <target state="translated">서브 클래스에서만 사용됩니다. 지정된 주소 및 TCP 포트에서 서버에 대한 SSL 연결을 구성하여 지정된 주소 및 포트의 연결 클라이언트 쪽을 바인딩합니다. 이것은 SSL 클라이언트 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="0025fcfeddc3524b72110a78cdab26f2b892ea8e" translate="yes" xml:space="preserve">
          <source>Used only by subclasses. Constructs an uninitialized, unconnected TCP socket.</source>
          <target state="translated">서브 클래스에서만 사용됩니다. 초기화되지 않은 연결되지 않은 TCP 소켓을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="e571e853cf6598b8f7ab1abc7401f5d56a38f101" translate="yes" xml:space="preserve">
          <source>Used to add a &lt;code&gt;Component&lt;/code&gt; above the other &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">Used to add a &lt;code&gt;Component&lt;/code&gt; above the other &lt;code&gt;Component&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3e85d526d7426380355d9deb9700774804f75ff" translate="yes" xml:space="preserve">
          <source>Used to add a &lt;code&gt;Component&lt;/code&gt; below the other &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">Used to add a &lt;code&gt;Component&lt;/code&gt; below the other &lt;code&gt;Component&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f3ba9c230f4371153196b8e0bc632409a9e05b6" translate="yes" xml:space="preserve">
          <source>Used to add a &lt;code&gt;Component&lt;/code&gt; that will represent the divider.</source>
          <target state="translated">Used to add a &lt;code&gt;Component&lt;/code&gt; that will represent the divider.</target>
        </trans-unit>
        <trans-unit id="d3ec0d33a64b0583e2adebd80388f1b6a9be39c8" translate="yes" xml:space="preserve">
          <source>Used to add a &lt;code&gt;Component&lt;/code&gt; to the left of the other &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">Used to add a &lt;code&gt;Component&lt;/code&gt; to the left of the other &lt;code&gt;Component&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73e00ef6924b68d663f49ae7ff373d31d496ac48" translate="yes" xml:space="preserve">
          <source>Used to add a &lt;code&gt;Component&lt;/code&gt; to the right of the other &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">Used to add a &lt;code&gt;Component&lt;/code&gt; to the right of the other &lt;code&gt;Component&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0bddd463685892277a40abb16b680339bec2858" translate="yes" xml:space="preserve">
          <source>Used to call top-level procedures and functions defined in scripts.</source>
          <target state="translated">스크립트에 정의 된 최상위 프로 시저 및 함수를 호출하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b3a0365b75ebbe1be6c0478a857fd057501fda40" translate="yes" xml:space="preserve">
          <source>Used to collect diagnostics in a list, for example:</source>
          <target state="translated">예를 들어 목록에서 진단을 수집하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="40a689b435a731e49cffd203ca213b79f2c5e870" translate="yes" xml:space="preserve">
          <source>Used to control the method of scrolling the viewport contents.</source>
          <target state="translated">Used to control the method of scrolling the viewport contents.</target>
        </trans-unit>
        <trans-unit id="a56f73106a458a402b7241205315e91d45c502a2" translate="yes" xml:space="preserve">
          <source>Used to control the method of scrolling the viewport contents. You may want to change this mode to get maximum performance for your use case.</source>
          <target state="translated">Used to control the method of scrolling the viewport contents. You may want to change this mode to get maximum performance for your use case.</target>
        </trans-unit>
        <trans-unit id="96fc15ab0d8bf7e7fc30bb207959d3b678e87bf6" translate="yes" xml:space="preserve">
          <source>Used to create an event when nodes have been changed, inserted, or removed, identifying the path to the parent of the modified items as a TreePath object.</source>
          <target state="translated">Used to create an event when nodes have been changed, inserted, or removed, identifying the path to the parent of the modified items as a TreePath object.</target>
        </trans-unit>
        <trans-unit id="2f32aa092eeb413bf3c60be922302a18b0b4daa2" translate="yes" xml:space="preserve">
          <source>Used to create an event when nodes have been changed, inserted, or removed, identifying the path to the parent of the modified items as a TreePath object. For more information on how to specify the indexes and objects, see &lt;code&gt;TreeModelEvent(Object,Object[],int[],Object[])&lt;/code&gt;.</source>
          <target state="translated">Used to create an event when nodes have been changed, inserted, or removed, identifying the path to the parent of the modified items as a TreePath object. For more information on how to specify the indexes and objects, see &lt;code&gt;TreeModelEvent(Object,Object[],int[],Object[])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e25e780e1e894700e62f4a16b6764272191ca5d" translate="yes" xml:space="preserve">
          <source>Used to create an event when nodes have been changed, inserted, or removed, identifying the path to the parent of the modified items as an array of Objects.</source>
          <target state="translated">Used to create an event when nodes have been changed, inserted, or removed, identifying the path to the parent of the modified items as an array of Objects.</target>
        </trans-unit>
        <trans-unit id="c520b60735e5f4cdc084342c52878a4ad7bf5f7f" translate="yes" xml:space="preserve">
          <source>Used to create an event when nodes have been changed, inserted, or removed, identifying the path to the parent of the modified items as an array of Objects. All of the modified objects are siblings which are direct descendents (not grandchildren) of the specified parent. The positions at which the inserts, deletes, or changes occurred are specified by an array of &lt;code&gt;int&lt;/code&gt;. The indexes in that array must be in order, from lowest to highest.</source>
          <target state="translated">Used to create an event when nodes have been changed, inserted, or removed, identifying the path to the parent of the modified items as an array of Objects. All of the modified objects are siblings which are direct descendents (not grandchildren) of the specified parent. The positions at which the inserts, deletes, or changes occurred are specified by an array of &lt;code&gt;int&lt;/code&gt; . The indexes in that array must be in order, from lowest to highest.</target>
        </trans-unit>
        <trans-unit id="88ffc52675618837ae1d4e9e4ec7a493dcd3c3c7" translate="yes" xml:space="preserve">
          <source>Used to create an event when the node structure has changed in some way, identifying the path to the root of a modified subtree as an array of Objects.</source>
          <target state="translated">Used to create an event when the node structure has changed in some way, identifying the path to the root of a modified subtree as an array of Objects.</target>
        </trans-unit>
        <trans-unit id="2d4173d7b336d93dfd98d3d488800ffdcd8febe8" translate="yes" xml:space="preserve">
          <source>Used to create an event when the node structure has changed in some way, identifying the path to the root of a modified subtree as an array of Objects. A structure change event might involve nodes swapping position, for example, or it might encapsulate multiple inserts and deletes in the subtree stemming from the node, where the changes may have taken place at different levels of the subtree.</source>
          <target state="translated">Used to create an event when the node structure has changed in some way, identifying the path to the root of a modified subtree as an array of Objects. A structure change event might involve nodes swapping position, for example, or it might encapsulate multiple inserts and deletes in the subtree stemming from the node, where the changes may have taken place at different levels of the subtree.</target>
        </trans-unit>
        <trans-unit id="a570f59cf0e9fd8b82a6d161fdd535d2543d0a71" translate="yes" xml:space="preserve">
          <source>Used to create an event when the node structure has changed in some way, identifying the path to the root of the modified subtree as a TreePath object.</source>
          <target state="translated">Used to create an event when the node structure has changed in some way, identifying the path to the root of the modified subtree as a TreePath object.</target>
        </trans-unit>
        <trans-unit id="a833df9c2cbe6997820331eb6eb7b15977c46e7c" translate="yes" xml:space="preserve">
          <source>Used to create an event when the node structure has changed in some way, identifying the path to the root of the modified subtree as a TreePath object. For more information on this event specification, see &lt;code&gt;TreeModelEvent(Object,Object[])&lt;/code&gt;.</source>
          <target state="translated">Used to create an event when the node structure has changed in some way, identifying the path to the root of the modified subtree as a TreePath object. For more information on this event specification, see &lt;code&gt;TreeModelEvent(Object,Object[])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebdba892d1b7b4c1a72feab1c10a42ec0461e8f2" translate="yes" xml:space="preserve">
          <source>Used to determine how to distribute space, which is important for specifying resizing behavior. Unless you specify a weight for at least one component in a row (&lt;code&gt;weightx&lt;/code&gt;) and column (&lt;code&gt;weighty&lt;/code&gt;), all the components clump together in the center of their container. This is because when the weight is zero (the default), the &lt;code&gt;GridBagLayout&lt;/code&gt; object puts any extra space between its grid of cells and the edges of the container.</source>
          <target state="translated">Used to determine how to distribute space, which is important for specifying resizing behavior. Unless you specify a weight for at least one component in a row ( &lt;code&gt;weightx&lt;/code&gt; ) and column ( &lt;code&gt;weighty&lt;/code&gt; ), all the components clump together in the center of their container. This is because when the weight is zero (the default), the &lt;code&gt;GridBagLayout&lt;/code&gt; object puts any extra space between its grid of cells and the edges of the container.</target>
        </trans-unit>
        <trans-unit id="76e666f3fc2216cd9c4875ad9cb82c35eb5d82a0" translate="yes" xml:space="preserve">
          <source>Used to determine if the &lt;code&gt;BeanContext&lt;/code&gt; child is avoiding using its GUI.</source>
          <target state="translated">&lt;code&gt;BeanContext&lt;/code&gt; 하위가 GUI 사용을 피하고 있는지 판별하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="3846f0861535f9e838d70deca7643a1627458767" translate="yes" xml:space="preserve">
          <source>Used to determine limits on the size of the message that can be passed to &lt;code&gt;wrap&lt;/code&gt;.</source>
          <target state="translated">Used to determine limits on the size of the message that can be passed to &lt;code&gt;wrap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6ea626ae5f0db7736fbae5d90d829c5214c12ee" translate="yes" xml:space="preserve">
          <source>Used to determine limits on the size of the message that can be passed to &lt;code&gt;wrap&lt;/code&gt;. Returns the maximum message size that, if presented to the &lt;code&gt;wrap&lt;/code&gt; method with the same &lt;code&gt;confReq&lt;/code&gt; and &lt;code&gt;qop&lt;/code&gt; parameters, will result in an output token containing no more than &lt;code&gt;maxTokenSize&lt;/code&gt; bytes.</source>
          <target state="translated">Used to determine limits on the size of the message that can be passed to &lt;code&gt;wrap&lt;/code&gt; . Returns the maximum message size that, if presented to the &lt;code&gt;wrap&lt;/code&gt; method with the same &lt;code&gt;confReq&lt;/code&gt; and &lt;code&gt;qop&lt;/code&gt; parameters, will result in an output token containing no more than &lt;code&gt;maxTokenSize&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="3499d8fccfba4eed249017ceb648ed54a2aa4d2c" translate="yes" xml:space="preserve">
          <source>Used to determine what to display.</source>
          <target state="translated">Used to determine what to display.</target>
        </trans-unit>
        <trans-unit id="8229b271e6fc6d7c92cfd07fe6ef744733d8d0bf" translate="yes" xml:space="preserve">
          <source>Used to display a &quot;Tip&quot; for a Component.</source>
          <target state="translated">Used to display a &quot;Tip&quot; for a Component.</target>
        </trans-unit>
        <trans-unit id="d68c5f3e75472bf0dabc20980bc01f1a25b9a4a7" translate="yes" xml:space="preserve">
          <source>Used to display a &quot;Tip&quot; for a Component. Typically components provide api to automate the process of using &lt;code&gt;ToolTip&lt;/code&gt;s. For example, any Swing component can use the &lt;code&gt;JComponent&lt;/code&gt;&lt;code&gt;setToolTipText&lt;/code&gt; method to specify the text for a standard tooltip. A component that wants to create a custom &lt;code&gt;ToolTip&lt;/code&gt; display can override &lt;code&gt;JComponent&lt;/code&gt;'s &lt;code&gt;createToolTip&lt;/code&gt; method and use a subclass of this class.</source>
          <target state="translated">Used to display a &quot;Tip&quot; for a Component. Typically components provide api to automate the process of using &lt;code&gt;ToolTip&lt;/code&gt; s. For example, any Swing component can use the &lt;code&gt;JComponent&lt;/code&gt; &lt;code&gt;setToolTipText&lt;/code&gt; method to specify the text for a standard tooltip. A component that wants to create a custom &lt;code&gt;ToolTip&lt;/code&gt; display can override &lt;code&gt;JComponent&lt;/code&gt; 's &lt;code&gt;createToolTip&lt;/code&gt; method and use a subclass of this class.</target>
        </trans-unit>
        <trans-unit id="3949d149f130e199b03df0672d0324eb8e8b9d47" translate="yes" xml:space="preserve">
          <source>Used to get a gamma value or TRC for the blue component.</source>
          <target state="translated">Used to get a gamma value or TRC for the blue component.</target>
        </trans-unit>
        <trans-unit id="81ae9b6c6eb404e51d8f67abd8bb33c9f1e92969" translate="yes" xml:space="preserve">
          <source>Used to get a gamma value or TRC for the green component.</source>
          <target state="translated">Used to get a gamma value or TRC for the green component.</target>
        </trans-unit>
        <trans-unit id="b0a009961de14e5d7f006f97ddb0b1fa00e6f7b7" translate="yes" xml:space="preserve">
          <source>Used to get a gamma value or TRC for the red component.</source>
          <target state="translated">Used to get a gamma value or TRC for the red component.</target>
        </trans-unit>
        <trans-unit id="babb6d6ee3cc56dfacad2468285e1255f5acf831" translate="yes" xml:space="preserve">
          <source>Used to hold the location and size of the bouncing box (returned by getBox) to be painted.</source>
          <target state="translated">Used to hold the location and size of the bouncing box (returned by getBox) to be painted.</target>
        </trans-unit>
        <trans-unit id="e74c4c390f1e9772e8f5845653ca42a250d45460" translate="yes" xml:space="preserve">
          <source>Used to identify a secondary &lt;code&gt;EventTarget&lt;/code&gt; related to a UI event.</source>
          <target state="translated">Used to identify a secondary &lt;code&gt;EventTarget&lt;/code&gt; related to a UI event.</target>
        </trans-unit>
        <trans-unit id="a10e0f88d694155d8700b0f9b5536f42803585bc" translate="yes" xml:space="preserve">
          <source>Used to identify a secondary &lt;code&gt;EventTarget&lt;/code&gt; related to a UI event. Currently this attribute is used with the mouseover event to indicate the &lt;code&gt;EventTarget&lt;/code&gt; which the pointing device exited and with the mouseout event to indicate the &lt;code&gt;EventTarget&lt;/code&gt; which the pointing device entered.</source>
          <target state="translated">Used to identify a secondary &lt;code&gt;EventTarget&lt;/code&gt; related to a UI event. Currently this attribute is used with the mouseover event to indicate the &lt;code&gt;EventTarget&lt;/code&gt; which the pointing device exited and with the mouseout event to indicate the &lt;code&gt;EventTarget&lt;/code&gt; which the pointing device entered.</target>
        </trans-unit>
        <trans-unit id="f2b50685b50cc629754faa6d2e01e17e1c54dcd8" translate="yes" xml:space="preserve">
          <source>Used to indicate the &lt;code&gt;EventTarget&lt;/code&gt; to which the event was originally dispatched.</source>
          <target state="translated">Used to indicate the &lt;code&gt;EventTarget&lt;/code&gt; to which the event was originally dispatched.</target>
        </trans-unit>
        <trans-unit id="0686bf34f23501993f7ea33006327df30b4223d7" translate="yes" xml:space="preserve">
          <source>Used to indicate the &lt;code&gt;EventTarget&lt;/code&gt; whose &lt;code&gt;EventListeners&lt;/code&gt; are currently being processed.</source>
          <target state="translated">Used to indicate the &lt;code&gt;EventTarget&lt;/code&gt; whose &lt;code&gt;EventListeners&lt;/code&gt; are currently being processed.</target>
        </trans-unit>
        <trans-unit id="d2b5b566672715dd5259fa49d01450a72459a27b" translate="yes" xml:space="preserve">
          <source>Used to indicate the &lt;code&gt;EventTarget&lt;/code&gt; whose &lt;code&gt;EventListeners&lt;/code&gt; are currently being processed. This is particularly useful during capturing and bubbling.</source>
          <target state="translated">Used to indicate the &lt;code&gt;EventTarget&lt;/code&gt; whose &lt;code&gt;EventListeners&lt;/code&gt; are currently being processed. This is particularly useful during capturing and bubbling.</target>
        </trans-unit>
        <trans-unit id="059cba32d4ac662e6962e286fb1ad9b656ec1f30" translate="yes" xml:space="preserve">
          <source>Used to indicate whether of not we are running in an application builder environment.</source>
          <target state="translated">애플리케이션 빌더 환경에서 실행 중인지 여부를 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="24f417475b4eadca91689ec6e94c81dcb62d62b3" translate="yes" xml:space="preserve">
          <source>Used to indicate whether of not we are running in an environment where GUI interaction is available.</source>
          <target state="translated">GUI 상호 작용이 가능한 환경에서 실행 중인지 여부를 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9a64ffeaff2c72522cf4702d844a5062eccf8282" translate="yes" xml:space="preserve">
          <source>Used to indicate whether or not an event can have its default action prevented.</source>
          <target state="translated">Used to indicate whether or not an event can have its default action prevented.</target>
        </trans-unit>
        <trans-unit id="33ff67a849eb8a24af3863f2a85f55fecb505cfa" translate="yes" xml:space="preserve">
          <source>Used to indicate whether or not an event can have its default action prevented. If the default action can be prevented the value is true, else the value is false.</source>
          <target state="translated">Used to indicate whether or not an event can have its default action prevented. If the default action can be prevented the value is true, else the value is false.</target>
        </trans-unit>
        <trans-unit id="50b9e8e4b26ac4e61e218e44c357e0a8f55966f4" translate="yes" xml:space="preserve">
          <source>Used to indicate whether or not an event is a bubbling event.</source>
          <target state="translated">Used to indicate whether or not an event is a bubbling event.</target>
        </trans-unit>
        <trans-unit id="449a536cc04b75a04a16c1f69e2253ca0d45784d" translate="yes" xml:space="preserve">
          <source>Used to indicate whether or not an event is a bubbling event. If the event can bubble the value is true, else the value is false.</source>
          <target state="translated">Used to indicate whether or not an event is a bubbling event. If the event can bubble the value is true, else the value is false.</target>
        </trans-unit>
        <trans-unit id="011f3bd8e5e962fafded9282fe4121541bc727d7" translate="yes" xml:space="preserve">
          <source>Used to indicate whether the 'alt' key was depressed during the firing of the event.</source>
          <target state="translated">Used to indicate whether the 'alt' key was depressed during the firing of the event.</target>
        </trans-unit>
        <trans-unit id="46e1f0fc4bf7b4303fe748cd4de8e7f0c2a3c6b5" translate="yes" xml:space="preserve">
          <source>Used to indicate whether the 'alt' key was depressed during the firing of the event. On some platforms this key may map to an alternative key name.</source>
          <target state="translated">Used to indicate whether the 'alt' key was depressed during the firing of the event. On some platforms this key may map to an alternative key name.</target>
        </trans-unit>
        <trans-unit id="c604d287ffbb0f8b7098de0b3f08a4e43bf83f7c" translate="yes" xml:space="preserve">
          <source>Used to indicate whether the 'ctrl' key was depressed during the firing of the event.</source>
          <target state="translated">Used to indicate whether the 'ctrl' key was depressed during the firing of the event.</target>
        </trans-unit>
        <trans-unit id="f2b7427c7797f9494ed43628636ba79e1d54688d" translate="yes" xml:space="preserve">
          <source>Used to indicate whether the 'meta' key was depressed during the firing of the event.</source>
          <target state="translated">Used to indicate whether the 'meta' key was depressed during the firing of the event.</target>
        </trans-unit>
        <trans-unit id="90b610ec29f7cb24a2fc369d4bb05abf8ac7c6df" translate="yes" xml:space="preserve">
          <source>Used to indicate whether the 'meta' key was depressed during the firing of the event. On some platforms this key may map to an alternative key name.</source>
          <target state="translated">Used to indicate whether the 'meta' key was depressed during the firing of the event. On some platforms this key may map to an alternative key name.</target>
        </trans-unit>
        <trans-unit id="421d01f882bf05e75338b397d58fb412c572cb69" translate="yes" xml:space="preserve">
          <source>Used to indicate whether the 'shift' key was depressed during the firing of the event.</source>
          <target state="translated">Used to indicate whether the 'shift' key was depressed during the firing of the event.</target>
        </trans-unit>
        <trans-unit id="f2e12403ea9c4c137b964a6aa86f593b8517f1dc" translate="yes" xml:space="preserve">
          <source>Used to indicate which phase of event flow is currently being evaluated.</source>
          <target state="translated">Used to indicate which phase of event flow is currently being evaluated.</target>
        </trans-unit>
        <trans-unit id="0dc0de72ef455208dd5f40a24008248c106b3571" translate="yes" xml:space="preserve">
          <source>Used to layout a &lt;code&gt;BasicSplitPaneDivider&lt;/code&gt;.</source>
          <target state="translated">Used to layout a &lt;code&gt;BasicSplitPaneDivider&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="020783066b94b5ed4a3a3e90f7d54fdf4c642b5a" translate="yes" xml:space="preserve">
          <source>Used to layout a &lt;code&gt;BasicSplitPaneDivider&lt;/code&gt;. Layout for the divider involves appropriately moving the left/right buttons around.</source>
          <target state="translated">Used to layout a &lt;code&gt;BasicSplitPaneDivider&lt;/code&gt; . Layout for the divider involves appropriately moving the left/right buttons around.</target>
        </trans-unit>
        <trans-unit id="514c237b4e252990d5d825aaaa5729d76cd23c91" translate="yes" xml:space="preserve">
          <source>Used to make half-open intervals.</source>
          <target state="translated">반 개방 간격을 만드는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="325eff732eeb53330e23fe1cdbcfe15c43c54f1f" translate="yes" xml:space="preserve">
          <source>Used to messaged registered listeners.</source>
          <target state="translated">Used to messaged registered listeners.</target>
        </trans-unit>
        <trans-unit id="60d07dc941d0132780122728260c69985920a1f7" translate="yes" xml:space="preserve">
          <source>Used to paint the TreeCellRenderer.</source>
          <target state="translated">TreeCellRenderer를 그리는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e0a304ae9bb7b36fca2fe96b5802e3b42db1d8c8" translate="yes" xml:space="preserve">
          <source>Used to process tokens generated by the &lt;code&gt;wrap&lt;/code&gt; method on the other side of the context.</source>
          <target state="translated">컨텍스트의 다른 쪽에서 &lt;code&gt;wrap&lt;/code&gt; 메서드로 생성 된 토큰을 처리하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="6fe1e718812d7fd56d1d720236336d6bdf91e267" translate="yes" xml:space="preserve">
          <source>Used to process tokens generated by the &lt;code&gt;wrap&lt;/code&gt; method on the other side of the context. The method will return the message supplied by the peer application to its wrap call, while at the same time verifying the embedded MIC for that message.</source>
          <target state="translated">컨텍스트의 다른 쪽에서 &lt;code&gt;wrap&lt;/code&gt; 메서드로 생성 된 토큰을 처리하는 데 사용됩니다 . 이 메서드는 피어 응용 프로그램에서 제공 한 메시지를 랩 호출로 반환하는 동시에 해당 메시지에 대해 포함 된 MIC를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="095f05021f600517a58d2ffaa8fcb578f1b234e2" translate="yes" xml:space="preserve">
          <source>Used to quote special characters in a prefix or suffix, for example, &lt;code&gt;&quot;'#'#&quot;&lt;/code&gt; formats 123 to &lt;code&gt;&quot;#123&quot;&lt;/code&gt;. To create a single quote itself, use two in a row: &lt;code&gt;&quot;# o''clock&quot;&lt;/code&gt;.</source>
          <target state="translated">접두사 또는 접미사로 특수 문자를 인용하는 데 사용됩니다 (예 : &lt;code&gt;&quot;'#'#&quot;&lt;/code&gt; 형식 123 ~ &lt;code&gt;&quot;#123&quot;&lt;/code&gt; ) . 작은 따옴표 자체를 작성하려면 &lt;code&gt;&quot;# o''clock&quot;&lt;/code&gt; 행을 두 개 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b1595238933a4fafb192006d931e6956fb914d91" translate="yes" xml:space="preserve">
          <source>Used to render the currently selected item in the combo box.</source>
          <target state="translated">콤보 상자에서 현재 선택된 항목을 렌더링하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="13a6bd2838384d91e8c425af1e6ce3064b59b335" translate="yes" xml:space="preserve">
          <source>Used to render the currently selected item in the combo box. It doesn't have anything to do with the popup's rendering.</source>
          <target state="translated">콤보 상자에서 현재 선택된 항목을 렌더링하는 데 사용됩니다. 팝업의 렌더링과 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="e479e11383f8e69635bd6f43ec5192953964b157" translate="yes" xml:space="preserve">
          <source>Used to represent the object name of an MBean and its class name.</source>
          <target state="translated">MBean의 오브젝트 명과 그 클래스 명을 나타내는데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d558813a808dca19d4ce58ecce508279911763d8" translate="yes" xml:space="preserve">
          <source>Used to represent the object name of an MBean and its class name. If the MBean is a Dynamic MBean the class name should be retrieved from the &lt;code&gt;MBeanInfo&lt;/code&gt; it provides.</source>
          <target state="translated">MBean의 오브젝트 명과 그 클래스 명을 나타내는데 사용됩니다. MBean이 Dynamic MBean 인 경우, 제공 하는 &lt;code&gt;MBeanInfo&lt;/code&gt; 에서 클래스 이름을 검색해야 합니다.</target>
        </trans-unit>
        <trans-unit id="45ef7fad6c58c83bb9a3a4b1dd3f236dbe5fcc7d" translate="yes" xml:space="preserve">
          <source>Used to respond to a request to quit the application.</source>
          <target state="translated">응용 프로그램 종료 요청에 응답하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6f8f064a2148a0b2c4814c9752b23e329da1eac3" translate="yes" xml:space="preserve">
          <source>Used to see most DTD declarations except those treated as lexical (&quot;document element name is ...&quot;) or which are mandatory for all SAX parsers (&lt;em&gt;DTDHandler&lt;/em&gt;). The Object must implement &lt;a href=&quot;ext/declhandler&quot;&gt;&lt;em&gt;org.xml.sax.ext.DeclHandler&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">어휘 ( &quot;document element name is ...&quot;)로 처리되거나 모든 SAX 파서 ( &lt;em&gt;DTDHandler&lt;/em&gt; )에 필수 인 것을 제외한 대부분의 DTD 선언을 보는 데 사용됩니다 . Object는 &lt;a href=&quot;ext/declhandler&quot;&gt;&lt;em&gt;org.xml.sax.ext.DeclHandler&lt;/em&gt;&lt;/a&gt; 를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="67e0d86d3121f7e645ca45fcbc54ec054e764845" translate="yes" xml:space="preserve">
          <source>Used to see some syntax events that are essential in some applications: comments, CDATA delimiters, selected general entity inclusions, and the start and end of the DTD (and declaration of document element name). The Object must implement &lt;a href=&quot;ext/lexicalhandler&quot;&gt;&lt;em&gt;org.xml.sax.ext.LexicalHandler&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">주석, CDATA 구분 기호, 선택한 일반 엔터티 포함, DTD의 시작 및 끝 (및 문서 요소 이름 선언)과 같은 일부 응용 프로그램에서 필수적인 구문 이벤트를 확인하는 데 사용됩니다. Object는 &lt;a href=&quot;ext/lexicalhandler&quot;&gt;&lt;em&gt;org.xml.sax.ext.LexicalHandler&lt;/em&gt;&lt;/a&gt; 를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="eac1f99ed7a2a61518954ff6bb52b218f542b75a" translate="yes" xml:space="preserve">
          <source>Used to serialize all children of this &lt;code&gt;BeanContext&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;BeanContext&lt;/code&gt; 모든 아이를 직렬화하는데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="2f049183d0432d669f66294cf455472bc08a9080" translate="yes" xml:space="preserve">
          <source>Used to set the horizontal scroll bar policy so that horizontal scrollbars are always displayed.</source>
          <target state="translated">수평 스크롤바가 항상 표시되도록 수평 스크롤바 정책을 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b794f79176c618c0f1da493de1ea6924ce717515" translate="yes" xml:space="preserve">
          <source>Used to set the horizontal scroll bar policy so that horizontal scrollbars are displayed only when needed.</source>
          <target state="translated">수평 스크롤바가 필요할 때만 표시되도록 수평 스크롤바 정책을 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="41137eaed500355d3385df356b1166daf8b1df0d" translate="yes" xml:space="preserve">
          <source>Used to set the horizontal scroll bar policy so that horizontal scrollbars are never displayed.</source>
          <target state="translated">수평 스크롤바가 표시되지 않도록 수평 스크롤바 정책을 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="57016fc8edf4316651dea62780c61b1f072771fd" translate="yes" xml:space="preserve">
          <source>Used to set the vertical scroll bar policy so that vertical scrollbars are always displayed.</source>
          <target state="translated">수직 스크롤바가 항상 표시되도록 수직 스크롤바 정책을 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="51cae42a8189abecd02739da3224b7baab4e4848" translate="yes" xml:space="preserve">
          <source>Used to set the vertical scroll bar policy so that vertical scrollbars are displayed only when needed.</source>
          <target state="translated">세로 스크롤바가 필요할 때만 표시되도록 세로 스크롤바 정책을 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2e99a3aa3b77ad83572f6e4e6c06ad9630755bd8" translate="yes" xml:space="preserve">
          <source>Used to set the vertical scroll bar policy so that vertical scrollbars are never displayed.</source>
          <target state="translated">수직 스크롤바가 표시되지 않도록 수직 스크롤바 정책을 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b5feb7ebf078ae8f31e7fe60d62dedb4eeb39559" translate="yes" xml:space="preserve">
          <source>Used to signal that no position is available.</source>
          <target state="translated">사용 가능한 위치가 없음을 알리는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7bc57405da88dfbfe7bc6e767ce955c9a4d56685" translate="yes" xml:space="preserve">
          <source>Used to specify the amount of time before the user has to wait &lt;code&gt;initialDelay&lt;/code&gt; milliseconds before a tooltip will be shown.</source>
          <target state="translated">툴팁이 표시되기 전에 사용자가 &lt;code&gt;initialDelay&lt;/code&gt; 밀리 초 를 기다려야하는 시간을 지정하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="19cd7b41fb575fc8fb96ee488b381f8c7fc0b438" translate="yes" xml:space="preserve">
          <source>Used to specify the amount of time before the user has to wait &lt;code&gt;initialDelay&lt;/code&gt; milliseconds before a tooltip will be shown. That is, if the tooltip is hidden, and the user moves into a region of the same Component that has a valid tooltip within &lt;code&gt;milliseconds&lt;/code&gt; milliseconds the tooltip will immediately be shown. Otherwise, if the user moves into a region with a valid tooltip after &lt;code&gt;milliseconds&lt;/code&gt; milliseconds, the user will have to wait an additional &lt;code&gt;initialDelay&lt;/code&gt; milliseconds before the tooltip is shown again.</source>
          <target state="translated">툴팁이 표시되기 전에 사용자가 &lt;code&gt;initialDelay&lt;/code&gt; 밀리 초 를 기다려야하는 시간을 지정하는 데 사용됩니다 . 즉, 도구 설명이 숨겨져 있고 사용자가 &lt;code&gt;milliseconds&lt;/code&gt; 초 밀리 초 내에 유효한 도구 설명이있는 동일한 구성 요소의 영역으로 이동 하면 도구 설명이 즉시 표시됩니다. 그렇지 않으면 사용자가 &lt;code&gt;milliseconds&lt;/code&gt; 초 밀리 초 후에 유효한 도구 설명이있는 영역으로 이동 하면 도구 설명이 다시 표시되기 전에 추가 &lt;code&gt;initialDelay&lt;/code&gt; 밀리 초 를 기다려야 합니다.</target>
        </trans-unit>
        <trans-unit id="827430a201c3e47a258e57421f62686096e9174f" translate="yes" xml:space="preserve">
          <source>Used to specify the time (in milliseconds relative to the epoch) at which the event was created.</source>
          <target state="translated">이벤트가 생성 된 시간 (기원에 상대적인 밀리 초)을 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="db00aeac60a1c90d727bafd311d3e0ee69cf6207" translate="yes" xml:space="preserve">
          <source>Used to specify the time (in milliseconds relative to the epoch) at which the event was created. Due to the fact that some systems may not provide this information the value of &lt;code&gt;timeStamp&lt;/code&gt; may be not available for all events. When not available, a value of 0 will be returned. Examples of epoch time are the time of the system start or 0:0:0 UTC 1st January 1970.</source>
          <target state="translated">이벤트가 생성 된 시간 (기원을 기준으로 한 밀리 초)을 지정하는 데 사용됩니다. 일부 시스템은이 정보를 제공 하지 않을 수 있기 때문에 모든 이벤트에 대해 &lt;code&gt;timeStamp&lt;/code&gt; 값을 사용하지 못할 수 있습니다. 사용할 수없는 경우 0 값이 반환됩니다. epoch 시간의 예는 시스템 시작 시간 또는 1970 년 1 월 1 일 0 : 0 : 0 UTC입니다.</target>
        </trans-unit>
        <trans-unit id="96b7171e09afc54fc69831e4cbd0992a99da72c8" translate="yes" xml:space="preserve">
          <source>Used to specify what label will be drawn at any given value.</source>
          <target state="translated">주어진 값에 어떤 레이블을 그릴 것인지 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="83f3a0a5ec361600024a723eb526c0e5ab4bb989" translate="yes" xml:space="preserve">
          <source>Used to specify what label will be drawn at any given value. The key-value pairs are of this format: &lt;code&gt;{ Integer value, java.swing.JComponent label }&lt;/code&gt;.</source>
          <target state="translated">주어진 값에 어떤 레이블을 그릴 것인지 지정하는 데 사용됩니다. 키-값 쌍은 &lt;code&gt;{ Integer value, java.swing.JComponent label }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5f17a8a74bb36730e3f13b55ed516e5615949ed" translate="yes" xml:space="preserve">
          <source>Used to test if a particular set of &lt;code&gt;TreePath&lt;/code&gt;s can be added.</source>
          <target state="translated">특정 &lt;code&gt;TreePath&lt;/code&gt; 집합을 추가 할 수 있는지 테스트하는 데 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="47151697519f6dbf0fea76d1ea9ad4143ffa7d94" translate="yes" xml:space="preserve">
          <source>Used to test if a particular set of &lt;code&gt;TreePath&lt;/code&gt;s can be added. This will return true if &lt;code&gt;paths&lt;/code&gt; is null (or empty), or this object has no RowMapper, or nothing is currently selected, or the selection mode is &lt;code&gt;DISCONTIGUOUS_TREE_SELECTION&lt;/code&gt;, or adding the paths to the current selection still results in a contiguous set of &lt;code&gt;TreePath&lt;/code&gt;s.</source>
          <target state="translated">특정 &lt;code&gt;TreePath&lt;/code&gt; 집합을 추가 할 수 있는지 테스트하는 데 사용 됩니다. 이 경우에 true를 돌려줍니다 &lt;code&gt;paths&lt;/code&gt; 널 (null)이 (또는 비어 있음), 또는이 객체에 RowMapper가없는, 또는 아무것도 현재 선택되어 있지 않은, 또는 선택 모드가 &lt;code&gt;DISCONTIGUOUS_TREE_SELECTION&lt;/code&gt; , 또는 현재의 선택에 경로를 추가하는 것은 아직도의 연속 세트에 결과 &lt;code&gt;TreePath&lt;/code&gt; 의 .</target>
        </trans-unit>
        <trans-unit id="e273252cb32d20ed0a0c8c667fda95c0dc284c82" translate="yes" xml:space="preserve">
          <source>Used when the component's display area is larger than the component's requested size to determine whether (and how) to resize the component. Possible values are &lt;code&gt;GridBagConstraints.NONE&lt;/code&gt; (the default), &lt;code&gt;GridBagConstraints.HORIZONTAL&lt;/code&gt; (make the component wide enough to fill its display area horizontally, but don't change its height), &lt;code&gt;GridBagConstraints.VERTICAL&lt;/code&gt; (make the component tall enough to fill its display area vertically, but don't change its width), and &lt;code&gt;GridBagConstraints.BOTH&lt;/code&gt; (make the component fill its display area entirely).</source>
          <target state="translated">구성 요소의 표시 영역이 구성 요소의 크기 조정 여부 (및 방법)를 결정하기 위해 구성 요소가 요청한 크기보다 클 때 사용됩니다. 가능한 값은 &lt;code&gt;GridBagConstraints.NONE&lt;/code&gt; (기본값), &lt;code&gt;GridBagConstraints.HORIZONTAL&lt;/code&gt; (디스플레이 영역을 가로로 채울 수있을만큼 충분히 넓게 구성하지만 높이는 변경하지 않음), &lt;code&gt;GridBagConstraints.VERTICAL&lt;/code&gt; (디스플레이 영역을 채울만큼 충분히 높이 구성 요소 수직으로, 너비를 변경하지 마십시오) 및 &lt;code&gt;GridBagConstraints.BOTH&lt;/code&gt; (구성 요소가 표시 영역을 완전히 채우도록 함).</target>
        </trans-unit>
        <trans-unit id="9b2db44eb417a2796f150e7f0b6522f2fb7cdc3d" translate="yes" xml:space="preserve">
          <source>Useful constant for AM_PM field alignment.</source>
          <target state="translated">AM_PM 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="1e630c1b8d00940e76e0e39623045dd2e3f9e1dc" translate="yes" xml:space="preserve">
          <source>Useful constant for AM_PM field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">AM_PM 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="486b716ef2248457c7ab19e404d7f02708b2e164" translate="yes" xml:space="preserve">
          <source>Useful constant for DATE field alignment.</source>
          <target state="translated">DATE 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="1717090a53383cb7ddf3f7a3376e802f7c727013" translate="yes" xml:space="preserve">
          <source>Useful constant for DATE field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">DATE 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="069f31965fbeb36ed80eb6cd2e65751ff19e862f" translate="yes" xml:space="preserve">
          <source>Useful constant for DAY_OF_WEEK field alignment.</source>
          <target state="translated">DAY_OF_WEEK 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="b0585b1e568bc9a7fd6265dec9f4c6e64cf2f936" translate="yes" xml:space="preserve">
          <source>Useful constant for DAY_OF_WEEK field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">DAY_OF_WEEK 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="de8c49a19aab6ec3dd4823c711757469ea499986" translate="yes" xml:space="preserve">
          <source>Useful constant for DAY_OF_WEEK_IN_MONTH field alignment.</source>
          <target state="translated">DAY_OF_WEEK_IN_MONTH 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="c22a4d9c5053ffc74d1b60613d4aa751e298e0e9" translate="yes" xml:space="preserve">
          <source>Useful constant for DAY_OF_WEEK_IN_MONTH field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">DAY_OF_WEEK_IN_MONTH 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6b76aef95a84e6694394f0ca3469575bf5de9c56" translate="yes" xml:space="preserve">
          <source>Useful constant for DAY_OF_YEAR field alignment.</source>
          <target state="translated">DAY_OF_YEAR 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="078ea5137d804494257e458c9087180c6f3e076e" translate="yes" xml:space="preserve">
          <source>Useful constant for DAY_OF_YEAR field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">DAY_OF_YEAR 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e862ef6595c1e20d2fa0041e5396054e3f9f8bad" translate="yes" xml:space="preserve">
          <source>Useful constant for ERA field alignment.</source>
          <target state="translated">ERA 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="cdfee4d58afecb05695edc7410effd94885ad3fe" translate="yes" xml:space="preserve">
          <source>Useful constant for ERA field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">ERA 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="eca634f1afc10e2ac62bbbb34f4a5f462f478ef9" translate="yes" xml:space="preserve">
          <source>Useful constant for MILLISECOND field alignment.</source>
          <target state="translated">MILLISECOND 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="7496d909fd055ddd02f76b81f65f66da16e55578" translate="yes" xml:space="preserve">
          <source>Useful constant for MILLISECOND field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">MILLISECOND 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="875940cae2c591b5b14a2407d1d0b2c341d6a587" translate="yes" xml:space="preserve">
          <source>Useful constant for MINUTE field alignment.</source>
          <target state="translated">MINUTE 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="760f058c406409026daa276330254588d98487d7" translate="yes" xml:space="preserve">
          <source>Useful constant for MINUTE field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">MINUTE 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="39e965714d49ea4b074c5aaed6c14c2d2039100a" translate="yes" xml:space="preserve">
          <source>Useful constant for MONTH field alignment.</source>
          <target state="translated">MONTH 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="48f280da5895751f3da21ecc589b1c6b090f3914" translate="yes" xml:space="preserve">
          <source>Useful constant for MONTH field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">MONTH 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2e145447433d398f5741a940d8792e0a326bd3d6" translate="yes" xml:space="preserve">
          <source>Useful constant for SECOND field alignment.</source>
          <target state="translated">SECOND 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="36deccc88dd7749fb281cf8a90a9fd727798252a" translate="yes" xml:space="preserve">
          <source>Useful constant for SECOND field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">SECOND 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3c2dd265146006b87e61bac728f2deb6df687fa7" translate="yes" xml:space="preserve">
          <source>Useful constant for TIMEZONE field alignment.</source>
          <target state="translated">TIMEZONE 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="cfb365bfb37cf7061fe1055a69f32a7c16d0ac10" translate="yes" xml:space="preserve">
          <source>Useful constant for TIMEZONE field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">TIMEZONE 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="058b0ef5ecf254a718597ec861d63f3e32780513" translate="yes" xml:space="preserve">
          <source>Useful constant for WEEK_OF_MONTH field alignment.</source>
          <target state="translated">WEEK_OF_MONTH 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="e52a4998d4de3a751f8eab00aa01d9d109e32893" translate="yes" xml:space="preserve">
          <source>Useful constant for WEEK_OF_MONTH field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">WEEK_OF_MONTH 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c9662be18e0c90d7f6aa45246f081efe68db07e7" translate="yes" xml:space="preserve">
          <source>Useful constant for WEEK_OF_YEAR field alignment.</source>
          <target state="translated">WEEK_OF_YEAR 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="4046930157759bf774a76acb156fab3cbd2a0869" translate="yes" xml:space="preserve">
          <source>Useful constant for WEEK_OF_YEAR field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">WEEK_OF_YEAR 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4eb5370b2eaac02c2e96ff893473cb0fc671ab81" translate="yes" xml:space="preserve">
          <source>Useful constant for YEAR field alignment.</source>
          <target state="translated">YEAR 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="7f0db4caf9bdd1f3dad161d524726dbab3efc387" translate="yes" xml:space="preserve">
          <source>Useful constant for YEAR field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">YEAR 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="02dc34e0f9c65e59e814be3f08bd243301794280" translate="yes" xml:space="preserve">
          <source>Useful constant for country.</source>
          <target state="translated">국가에 유용한 상수.</target>
        </trans-unit>
        <trans-unit id="752c091cbd64e117708e5d1e26ae74635ab5f5e4" translate="yes" xml:space="preserve">
          <source>Useful constant for language.</source>
          <target state="translated">언어에 유용한 상수.</target>
        </trans-unit>
        <trans-unit id="2d88265d6d4db092ab609b799f2c2df988def308" translate="yes" xml:space="preserve">
          <source>Useful constant for one-based HOUR field alignment.</source>
          <target state="translated">1 기반 HOUR 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="e7a30c73acd7f2c30aa123ee08961cec2cc94a3f" translate="yes" xml:space="preserve">
          <source>Useful constant for one-based HOUR field alignment. Used in FieldPosition of date/time formatting. HOUR1_FIELD is used for the one-based 12-hour clock. For example, 11:30 PM + 1 hour results in 12:30 AM.</source>
          <target state="translated">1 기반 HOUR 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다. HOUR1_FIELD는 1 기준 12 시간 시계에 사용됩니다. 예를 들어, 오후 11:30 + 1 시간은 오전 12:30입니다.</target>
        </trans-unit>
        <trans-unit id="df4b01911c36bdd7f182aa960d4423a8c81e3eed" translate="yes" xml:space="preserve">
          <source>Useful constant for one-based HOUR_OF_DAY field alignment.</source>
          <target state="translated">1부터 시작하는 HOUR_OF_DAY 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="9518c0269a7db77b936bd3697851473f4a433bd6" translate="yes" xml:space="preserve">
          <source>Useful constant for one-based HOUR_OF_DAY field alignment. Used in FieldPosition of date/time formatting. HOUR_OF_DAY1_FIELD is used for the one-based 24-hour clock. For example, 23:59 + 01:00 results in 24:59.</source>
          <target state="translated">1 기준 HOUR_OF_DAY 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다. HOUR_OF_DAY1_FIELD는 1 기반 24 시간 시계에 사용됩니다. 예를 들어 23:59 + 01:00의 결과는 24:59입니다.</target>
        </trans-unit>
        <trans-unit id="170c5e01e19172afc1ee7bb7f16705a651449ea7" translate="yes" xml:space="preserve">
          <source>Useful constant for the root locale.</source>
          <target state="translated">루트 로케일에 유용한 상수.</target>
        </trans-unit>
        <trans-unit id="a17421ff86d0dcfb29ea06a1017edc53a44c5900" translate="yes" xml:space="preserve">
          <source>Useful constant for the root locale. The root locale is the locale whose language, country, and variant are empty (&quot;&quot;) strings. This is regarded as the base locale of all locales, and is used as the language/country neutral locale for the locale sensitive operations.</source>
          <target state="translated">루트 로케일에 유용한 상수. 루트 로캘은 언어, 국가 및 변형이 비어있는 ( &quot;&quot;) 문자열 인 로캘입니다. 이는 모든 로캘의 기본 로캘로 간주되며 로캘 구분 작업을위한 언어 / 국가 중립 로캘로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="548fa12a940b9bf50f360a6dc38c1ccd099687fe" translate="yes" xml:space="preserve">
          <source>Useful constant for zero-based HOUR field alignment.</source>
          <target state="translated">0부터 시작하는 HOUR 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="b7c8994d2281159d3a096671d167b72b594747ab" translate="yes" xml:space="preserve">
          <source>Useful constant for zero-based HOUR field alignment. Used in FieldPosition of date/time formatting. HOUR0_FIELD is used for the zero-based 12-hour clock. For example, 11:30 PM + 1 hour results in 00:30 AM.</source>
          <target state="translated">0부터 시작하는 HOUR 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다. HOUR0_FIELD는 0부터 시작하는 12 시간 시계에 사용됩니다. 예를 들어, 11:30 PM + 1 시간은 00:30 AM입니다.</target>
        </trans-unit>
        <trans-unit id="aaf91352b7713ef09c8f1b212135c74f394be9c3" translate="yes" xml:space="preserve">
          <source>Useful constant for zero-based HOUR_OF_DAY field alignment.</source>
          <target state="translated">0부터 시작하는 HOUR_OF_DAY 필드 정렬에 유용한 상수입니다.</target>
        </trans-unit>
        <trans-unit id="1804ef42b6094fcfa1e24dabc30104e845e88f6c" translate="yes" xml:space="preserve">
          <source>Useful constant for zero-based HOUR_OF_DAY field alignment. Used in FieldPosition of date/time formatting. HOUR_OF_DAY0_FIELD is used for the zero-based 24-hour clock. For example, 23:59 + 01:00 results in 00:59.</source>
          <target state="translated">0부터 시작하는 HOUR_OF_DAY 필드 정렬에 유용한 상수. 날짜 / 시간 형식의 FieldPosition에 사용됩니다. HOUR_OF_DAY0_FIELD는 0부터 시작하는 24 시간 시계에 사용됩니다. 예를 들어 23:59 + 01:00의 결과는 00:59입니다.</target>
        </trans-unit>
        <trans-unit id="96c0600dea36d1ce7ad37a039fb4b6391c594445" translate="yes" xml:space="preserve">
          <source>User changed the kind of files to display.</source>
          <target state="translated">사용자가 표시 할 파일 종류를 변경했습니다.</target>
        </trans-unit>
        <trans-unit id="7323e97d860493ed6b8f4e2ea90e443efe9b00a2" translate="yes" xml:space="preserve">
          <source>User code does not usually implement this interface. Instead, an object that implements this interface is obtained with one of the methods in the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">사용자 코드는 일반적으로이 인터페이스를 구현하지 않습니다. 대신,이 인터페이스를 구현하는 객체는 &lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; &lt;/a&gt; 클래스 의 메소드 중 하나를 사용하여 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="769613a1552b3fa5b235c3cba3c0eb3410b41b0a" translate="yes" xml:space="preserve">
          <source>User code does not usually refer to this interface. It is specified as part of the public API so that different implementations of that API will interoperate.</source>
          <target state="translated">사용자 코드는 일반적으로이 인터페이스를 참조하지 않습니다. API의 다른 구현이 상호 운용되도록 공용 API의 일부로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="7b20335318c67df03b23830f0159f2759938ac33" translate="yes" xml:space="preserve">
          <source>User code does not usually reference this class directly. RMI connection servers are usually created with the class &lt;a href=&quot;rmiconnectorserver&quot;&gt;&lt;code&gt;RMIConnectorServer&lt;/code&gt;&lt;/a&gt;. Remote clients usually create connections either with &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; or by instantiating &lt;a href=&quot;rmiconnector&quot;&gt;&lt;code&gt;RMIConnector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자 코드는 일반적으로이 클래스를 직접 참조하지 않습니다. RMI 연결 서버는 일반적으로 &lt;a href=&quot;rmiconnectorserver&quot;&gt; &lt;code&gt;RMIConnectorServer&lt;/code&gt; &lt;/a&gt; 클래스로 생성됩니다 . 원격 클라이언트는 일반적으로 &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; 를 사용&lt;/a&gt; 하거나 &lt;a href=&quot;rmiconnector&quot;&gt; &lt;code&gt;RMIConnector&lt;/code&gt; &lt;/a&gt; 를 인스턴스화 하여 연결을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="98fc5ea770063874a158ad7620ac557ceb249d53" translate="yes" xml:space="preserve">
          <source>User code does not usually reference this class directly. RMI connection servers are usually created with the class &lt;a href=&quot;rmiconnectorserver&quot;&gt;&lt;code&gt;RMIConnectorServer&lt;/code&gt;&lt;/a&gt;. Remote clients usually create connections either with &lt;a href=&quot;../jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; or by instantiating &lt;a href=&quot;rmiconnector&quot;&gt;&lt;code&gt;RMIConnector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자 코드는 일반적으로이 클래스를 직접 참조하지 않습니다. RMI 연결 서버는 일반적으로 &lt;a href=&quot;rmiconnectorserver&quot;&gt; &lt;code&gt;RMIConnectorServer&lt;/code&gt; &lt;/a&gt; 클래스로 작성됩니다 . 원격 클라이언트는 일반적으로 &lt;a href=&quot;../jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;rmiconnector&quot;&gt; &lt;code&gt;RMIConnector&lt;/code&gt; &lt;/a&gt; 를 인스턴스화 하여 연결을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="b0939ac7426e60b171187d64e82a7db9dac73ca3" translate="yes" xml:space="preserve">
          <source>User drop action</source>
          <target state="translated">사용자 삭제 조치</target>
        </trans-unit>
        <trans-unit id="470db50815c75a4421e1e3e69ef0f53604f7e2da" translate="yes" xml:space="preserve">
          <source>User interfaces and operating systems use system-dependent &lt;em&gt;pathname strings&lt;/em&gt; to name files and directories. This class presents an abstract, system-independent view of hierarchical pathnames. An &lt;em&gt;abstract pathname&lt;/em&gt; has two components:</source>
          <target state="translated">사용자 인터페이스 및 운영 체제는 시스템 종속 &lt;em&gt;경로 이름 문자열&lt;/em&gt; 을 사용하여 파일 및 디렉토리 이름을 지정합니다. 이 클래스는 시스템에 독립적 인 계층 적 경로 이름보기를 제공합니다. &lt;em&gt;추상 패스는&lt;/em&gt; 두 가지 구성 요소가 있습니다 :</target>
        </trans-unit>
        <trans-unit id="18becf225322e1329f99848d010f797c596b8aeb" translate="yes" xml:space="preserve">
          <source>User's account name</source>
          <target state="translated">사용자의 계정 이름</target>
        </trans-unit>
        <trans-unit id="5afefe71b24cc782f7bdec73d760815edcfc743b" translate="yes" xml:space="preserve">
          <source>User's current working directory</source>
          <target state="translated">사용자의 현재 작업 디렉토리</target>
        </trans-unit>
        <trans-unit id="f08fe0bf6dfaf09e97a0137919cb4dbb30048d83" translate="yes" xml:space="preserve">
          <source>User's home directory</source>
          <target state="translated">사용자의 홈 디렉토리</target>
        </trans-unit>
        <trans-unit id="83bfcc04a4ce5af2d24c0f0c96dfadfd09827d2f" translate="yes" xml:space="preserve">
          <source>User-defined attributes may be used in some implementations to store security related attributes so consequently, in the case of the default provider at least, all methods that access user-defined attributes require the &lt;code&gt;RuntimePermission(&quot;accessUserDefinedAttributes&quot;)&lt;/code&gt; permission when a security manager is installed.</source>
          <target state="translated">사용자 정의 속성은 일부 구현에서 보안 관련 속성을 저장하는 데 사용될 수 있으므로 결과적으로 기본 제공자의 경우 사용자 정의 속성에 액세스하는 모든 메소드 에는 보안 관리자가있을 때 &lt;code&gt;RuntimePermission(&quot;accessUserDefinedAttributes&quot;)&lt;/code&gt; 권한이 필요합니다. 설치되었습니다.</target>
        </trans-unit>
        <trans-unit id="1e9637ae33200dcc5fa5f6b41e9ef43ad52150de" translate="yes" xml:space="preserve">
          <source>User-defined connector protocols are also possible using the &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; and, optionally, the Generic Connector (not part of this bundle, see note below).</source>
          <target state="translated">&lt;a href=&quot;jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt; 및 선택적으로 일반 커넥터 (이 번들의 일부가 아닌 아래 참고 참조)를 사용하여 사용자 정의 커넥터 프로토콜도 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="2b9a9aa362bea019de94b1bb4891c2327fe7add0" translate="yes" xml:space="preserve">
          <source>UserDataHandler</source>
          <target state="translated">UserDataHandler</target>
        </trans-unit>
        <trans-unit id="3c3c973c116f6d5e4da4352238faa225b96d3186" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView</source>
          <target state="translated">UserDefinedFileAttributeView</target>
        </trans-unit>
        <trans-unit id="75c1e2e5fde85912139123bc71055893c3297dd0" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.delete()</source>
          <target state="translated">UserDefinedFileAttributeView.delete()</target>
        </trans-unit>
        <trans-unit id="87722629291ad85412459bfbe644ff495ee7b637" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.list()</source>
          <target state="translated">UserDefinedFileAttributeView.list()</target>
        </trans-unit>
        <trans-unit id="62c0a0413d5bbc8976220551e62b4bf76b5bf134" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.name()</source>
          <target state="translated">UserDefinedFileAttributeView.name()</target>
        </trans-unit>
        <trans-unit id="ede0f4e2d26cc8160d5a5b9ee9e48cdd492a4a61" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.read()</source>
          <target state="translated">UserDefinedFileAttributeView.read()</target>
        </trans-unit>
        <trans-unit id="1b82bc93beb601ec3d909b3fde3886b3de7e943a" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.size()</source>
          <target state="translated">UserDefinedFileAttributeView.size()</target>
        </trans-unit>
        <trans-unit id="c687ec99c49ea7a32167b8b12adf178757f27308" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.write()</source>
          <target state="translated">UserDefinedFileAttributeView.write()</target>
        </trans-unit>
        <trans-unit id="844ea263d61d5ed56fa1bc82cd753b1747ffb55f" translate="yes" xml:space="preserve">
          <source>UserPrincipal</source>
          <target state="translated">UserPrincipal</target>
        </trans-unit>
        <trans-unit id="bd0a60b59c4da806a482b55818c755e501c7ac80" translate="yes" xml:space="preserve">
          <source>UserPrincipalLookupService</source>
          <target state="translated">UserPrincipalLookupService</target>
        </trans-unit>
        <trans-unit id="e0840bba6e112c75ffe66ac30f47b21f2ee1d493" translate="yes" xml:space="preserve">
          <source>UserPrincipalLookupService.lookupPrincipalByGroupName()</source>
          <target state="translated">UserPrincipalLookupService.lookupPrincipalByGroupName()</target>
        </trans-unit>
        <trans-unit id="a7825f199743bc5d242aca386612daca76570320" translate="yes" xml:space="preserve">
          <source>UserPrincipalLookupService.lookupPrincipalByName()</source>
          <target state="translated">UserPrincipalLookupService.lookupPrincipalByName()</target>
        </trans-unit>
        <trans-unit id="72784aa1f92c2222c84e34f40fd34df125ee6eac" translate="yes" xml:space="preserve">
          <source>UserPrincipalNotFoundException</source>
          <target state="translated">UserPrincipalNotFoundException</target>
        </trans-unit>
        <trans-unit id="e69ec342d5b6b3b0a3b5d7fba11c87298a3efe00" translate="yes" xml:space="preserve">
          <source>UserPrincipalNotFoundException.getName()</source>
          <target state="translated">UserPrincipalNotFoundException.getName()</target>
        </trans-unit>
        <trans-unit id="c18b5ec03f53a427a2ca623ae764708e1d232654" translate="yes" xml:space="preserve">
          <source>UserSessionEvent</source>
          <target state="translated">UserSessionEvent</target>
        </trans-unit>
        <trans-unit id="112b80c85f48c7888c6cdb89ed0c7280d0b4bf45" translate="yes" xml:space="preserve">
          <source>UserSessionEvent.Reason</source>
          <target state="translated">UserSessionEvent.Reason</target>
        </trans-unit>
        <trans-unit id="c3d86f166c00882728d9ec37370f211e510e87dc" translate="yes" xml:space="preserve">
          <source>UserSessionListener</source>
          <target state="translated">UserSessionListener</target>
        </trans-unit>
        <trans-unit id="ef3a21a074fb301ebae0e1829dfb7404033b1c4f" translate="yes" xml:space="preserve">
          <source>Users can supersede the Java runtime currency data by means of the system property &lt;code&gt;java.util.currency.data&lt;/code&gt;. If this system property is defined then its value is the location of a properties file, the contents of which are key/value pairs of the ISO 3166 country codes and the ISO 4217 currency data respectively. The value part consists of three ISO 4217 values of a currency, i.e., an alphabetic code, a numeric code, and a minor unit. Those three ISO 4217 values are separated by commas. The lines which start with '#'s are considered comment lines. An optional UTC timestamp may be specified per currency entry if users need to specify a cutover date indicating when the new data comes into effect. The timestamp is appended to the end of the currency properties and uses a comma as a separator. If a UTC datestamp is present and valid, the JRE will only use the new currency properties if the current UTC date is later than the date specified at class loading time. The format of the timestamp must be of ISO 8601 format : &lt;code&gt;'yyyy-MM-dd'T'HH:mm:ss'&lt;/code&gt;. For example,</source>
          <target state="translated">사용자는 시스템 특성 &lt;code&gt;java.util.currency.data&lt;/code&gt; 를 사용하여 Java 런타임 통화 데이터를 대체 할 수 있습니다.. 이 시스템 특성이 정의 된 경우 해당 값은 특성 파일의 위치이며 그 내용은 각각 ISO 3166 국가 코드 및 ISO 4217 통화 데이터의 키 / 값 쌍입니다. 값 부분은 통화, 즉 알파벳 코드, 숫자 코드 및 부 단위의 세 가지 ISO 4217 값으로 구성됩니다. 이 3 개의 ISO 4217 값은 쉼표로 구분됩니다. '#'으로 시작하는 줄은 주석 줄로 간주됩니다. 사용자가 새 데이터가 적용되는시기를 나타내는 컷 오버 날짜를 지정해야하는 경우 통화 항목별로 옵션 UTC 타임 스탬프를 지정할 수 있습니다. 타임 스탬프는 통화 속성 끝에 추가되며 쉼표를 구분 기호로 사용합니다. UTC 날짜 스탬프가 있고 유효하면,JRE는 현재 UTC 날짜가 클래스 로딩 시간에 지정된 날짜보다 늦은 경우에만 새 통화 특성을 사용합니다. 타임 스탬프 형식은 ISO 8601 형식이어야합니다. &lt;code&gt;'yyyy-MM-dd'T'HH:mm:ss'&lt;/code&gt; 입니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="44d0574cab395fb59d075ddc29e51cba8a5b8545" translate="yes" xml:space="preserve">
          <source>Users create RenderContexts and pass them to the RenderableImage via the createRendering method. Most of the methods of RenderContexts are not meant to be used directly by applications, but by the RenderableImage and operator classes to which it is passed.</source>
          <target state="translated">사용자는 RenderContext를 생성하고 createRendering 메서드를 통해 RenderableImage에 전달합니다. RenderContexts의 대부분의 메서드는 응용 프로그램에서 직접 사용하기위한 것이 아니라 RenderableImage 및 전달되는 연산자 클래스에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1df4da318d284bc20c5958d27a7ed3c38f4602e0" translate="yes" xml:space="preserve">
          <source>Users of this API are typically developers who produce client library implementations for connection-based protocols, such as LDAPv3 and IMAPv4, and developers who write servers (such as LDAP servers and IMAP servers). Developers who write client libraries use the &lt;code&gt;SaslClient&lt;/code&gt; and &lt;code&gt;SaslClientFactory&lt;/code&gt; interfaces. Developers who write servers use the &lt;code&gt;SaslServer&lt;/code&gt; and &lt;code&gt;SaslServerFactory&lt;/code&gt; interfaces. Among these two groups of users, each can be further divided into two groups: those who &lt;em&gt;produce&lt;/em&gt; the SASL mechanisms and those who &lt;em&gt;use&lt;/em&gt; the SASL mechanisms. The producers of SASL mechanisms need to provide implementations for these interfaces, while users of the SASL mechanisms use the APIs in this package to access those implementations.</source>
          <target state="translated">이 API의 사용자는 일반적으로 LDAPv3 및 IMAPv4와 같은 연결 기반 프로토콜에 대한 클라이언트 라이브러리 구현을 생성하는 개발자와 서버 (LDAP 서버 및 IMAP 서버 등)를 작성하는 개발자입니다. 클라이언트 라이브러리를 작성하는 개발자는 &lt;code&gt;SaslClient&lt;/code&gt; 및 &lt;code&gt;SaslClientFactory&lt;/code&gt; 인터페이스를 사용합니다 . 서버를 작성하는 개발자는 &lt;code&gt;SaslServer&lt;/code&gt; 및 &lt;code&gt;SaslServerFactory&lt;/code&gt; 인터페이스를 사용합니다 . 사람들 : 사용자가이 두 그룹 중 각각 추가로 두 그룹으로 나눌 수 있습니다 &lt;em&gt;생산&lt;/em&gt; SASL기구와 사람들 &lt;em&gt;사용&lt;/em&gt;SASL 메커니즘. SASL 메커니즘의 생산자는 이러한 인터페이스에 대한 구현을 제공해야하지만, SASL 메커니즘의 사용자는이 패키지의 API를 사용하여 해당 구현에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="80e2698a6181fd45859666c8ffd995432dc96215" translate="yes" xml:space="preserve">
          <source>Users of this class should typically ignore this method as it exists primarily to fulfill the &lt;a href=&quot;chrono/chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt; contract where it is necessary to support the Japanese calendar system.</source>
          <target state="translated">이 클래스의 사용자는 일반적으로 일본어 달력 시스템을 지원 &lt;a href=&quot;chrono/chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt; 계약 을 이행하기 위해 주로 존재 하므로이 메소드를 무시해야 합니다.</target>
        </trans-unit>
        <trans-unit id="55237b8c76ad7910ea782ad8f36738173524ed31" translate="yes" xml:space="preserve">
          <source>Users should cast the generic URLConnection to a JarURLConnection when they know that the URL they created is a JAR URL, and they need JAR-specific functionality. For example:</source>
          <target state="translated">사용자는 자신이 작성한 URL이 JAR URL이고 JAR 특정 기능이 필요하다는 것을 알 때 일반 URLConnection을 JarURLConnection으로 캐스트해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0580748d3bf3cde9131cd6e6bc14558971212bee" translate="yes" xml:space="preserve">
          <source>Users should not refer to this field; it is intended only to document a factory implementation detail.</source>
          <target state="translated">사용자는이 필드를 참조해서는 안됩니다. 이는 공장 구현 세부 사항을 문서화하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="b1843f52119a981e05a886ca7acaec227a5d0e69" translate="yes" xml:space="preserve">
          <source>Users should set either the Url property or the dataSourceName property. If both properties are set, the driver will use the property set most recently.</source>
          <target state="translated">사용자는 Url 속성 또는 dataSourceName 속성을 설정해야합니다. 두 속성이 모두 설정된 경우 드라이버는 가장 최근에 설정된 속성을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="70c3cca18c907271fdb84e1745d152491f2813f0" translate="yes" xml:space="preserve">
          <source>Users should set either the url or the data source name property. The driver will use the property set most recently to establish a connection.</source>
          <target state="translated">사용자는 url 또는 데이터 소스 이름 속성을 설정해야합니다. 드라이버는 가장 최근에 설정된 속성을 사용하여 연결을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e0c0b2a27dd7e100ff6ef46e8af9a1980c698565" translate="yes" xml:space="preserve">
          <source>Users wishing to indicate DSA-specific parameters, and to generate a key pair suitable for use with the DSA algorithm typically</source>
          <target state="translated">DSA 특정 매개 변수를 표시하고 DSA 알고리즘과 함께 사용하기에 적합한 키 페어를 생성하려는 사용자</target>
        </trans-unit>
        <trans-unit id="62be4731dedfbbc70aa7fa30d6649d816af8ca4b" translate="yes" xml:space="preserve">
          <source>Uses</source>
          <target state="translated">Uses</target>
        </trans-unit>
        <trans-unit id="f372d435c8b2343291032fd7414e1ad1a27585f4" translate="yes" xml:space="preserve">
          <source>Uses &quot;The Base64 Alphabet&quot; as specified in Table 1 of RFC 2045 for encoding and decoding operation. The encoded output must be represented in lines of no more than 76 characters each and uses a carriage return &lt;code&gt;'\r'&lt;/code&gt; followed immediately by a linefeed &lt;code&gt;'\n'&lt;/code&gt; as the line separator. No line separator is added to the end of the encoded output. All line separators or other characters not found in the base64 alphabet table are ignored in decoding operation.</source>
          <target state="translated">인코딩 및 디코딩 작업을 위해 RFC 2045의 표 1에 지정된 &quot;Base64 알파벳&quot;을 사용합니다. 인코딩 된 출력은 각각 76 자 이하의 줄로 표시되어야하며 캐리지 리턴 &lt;code&gt;'\r'&lt;/code&gt; 다음에 바로 줄 바꿈 &lt;code&gt;'\n'&lt;/code&gt; 을 줄 구분 기호로 사용합니다. 인코딩 된 출력 끝에 줄 구분 기호가 추가되지 않습니다. base64 알파벳 테이블에없는 모든 줄 구분 기호 또는 기타 문자는 디코딩 작업에서 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="7b82d0f919502b65991bb0495ebd8b2328c7d544" translate="yes" xml:space="preserve">
          <source>Uses &quot;The Base64 Alphabet&quot; as specified in Table 1 of RFC 4648 and RFC 2045 for encoding and decoding operation. The encoder does not add any line feed (line separator) character. The decoder rejects data that contains characters outside the base64 alphabet.</source>
          <target state="translated">인코딩 및 디코딩 작업에 RFC 4648 및 RFC 2045의 표 1에 지정된 &quot;Base64 알파벳&quot;을 사용합니다. 인코더는 줄 바꿈 문자를 추가하지 않습니다. 디코더는 base64 알파벳 이외의 문자가 포함 된 데이터를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="47aaf14815ccfc889cc8975df5f50d37911f6970" translate="yes" xml:space="preserve">
          <source>Uses for this method include facilitating data validation when interoperating with XML processors that would always require undesirable network accesses for external entities, or which for other reasons adopt a &quot;no DTDs&quot; policy. Non-validation motives include forcing documents to include DTDs so that attributes are handled consistently. For example, an XPath processor needs to know which attibutes have type &quot;ID&quot; before it can process a widely used type of reference.</source>
          <target state="translated">이 방법의 사용에는 외부 엔터티에 대해 항상 원하지 않는 네트워크 액세스가 필요하거나 다른 이유로 &quot;DTD 없음&quot;정책을 채택하는 XML 프로세서와 상호 운용 할 때 데이터 유효성 검사를 용이하게하는 것이 포함됩니다. 비 검증 동기에는 속성이 일관되게 처리되도록 문서에 DTD를 포함하도록 강제하는 것이 포함됩니다. 예를 들어 XPath 프로세서는 널리 사용되는 참조 유형을 처리하기 전에 &quot;ID&quot;유형이있는 속성을 알아야합니다.</target>
        </trans-unit>
        <trans-unit id="f640d25bce82873b44c5436c6d6834aeb1cab534" translate="yes" xml:space="preserve">
          <source>Uses streams to process tokens generated by the &lt;code&gt;wrap&lt;/code&gt; method on the other side of the context. The method will return the message supplied by the peer application to its wrap call, while at the same time verifying the embedded MIC for that message.</source>
          <target state="translated">스트림을 사용 하여 컨텍스트의 다른 쪽에서 &lt;code&gt;wrap&lt;/code&gt; 메서드에 의해 생성 된 토큰을 처리 합니다. 이 메서드는 피어 응용 프로그램에서 제공 한 메시지를 랩 호출로 반환하는 동시에 해당 메시지에 대해 포함 된 MIC를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="88c08276e6542f6d4deaaa13df42a8de1114e083" translate="yes" xml:space="preserve">
          <source>Uses streams to produce a token containing a cryptographic MIC for the supplied message, for transfer to the peer application. Unlike wrap, which encapsulates the user message in the returned token, only the message MIC is produced in the output token. This method is equivalent to the byte array based &lt;a href=&quot;#getMIC(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;getMIC&lt;/code&gt;&lt;/a&gt; method. Note that privacy can only be applied through the wrap call.</source>
          <target state="translated">스트림을 사용하여 피어 애플리케이션으로 전송하기 위해 제공된 메시지에 대한 암호화 MIC가 포함 된 토큰을 생성합니다. 반환 된 토큰에 사용자 메시지를 캡슐화하는 랩과 달리 출력 토큰에는 메시지 MIC 만 생성됩니다. 이 메소드는 바이트 배열 기반 &lt;a href=&quot;#getMIC(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;getMIC&lt;/code&gt; &lt;/a&gt; 메소드 와 동일합니다 . 프라이버시는 랩 콜을 통해서만 적용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="40577755d93ae31dbac1103b0e0d5b78c259b74c" translate="yes" xml:space="preserve">
          <source>Uses streams to verify the cryptographic MIC, contained in the token parameter, over the supplied message. This method is equivalent to the byte array based &lt;a href=&quot;#verifyMIC(byte%5B%5D,int,int,byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;verifyMIC&lt;/code&gt;&lt;/a&gt; method. The MessageProp object is instantiated by the application and is used by the underlying mechanism to return information to the caller such as the QOP indicating the strength of protection that was applied to the message and other supplementary message state information.</source>
          <target state="translated">스트림을 사용하여 제공된 메시지를 통해 token 매개 변수에 포함 된 암호화 MIC를 확인합니다. 이 메서드는 바이트 배열 기반 &lt;a href=&quot;#verifyMIC(byte%5B%5D,int,int,byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;verifyMIC&lt;/code&gt; &lt;/a&gt; 메서드 와 동일합니다 . MessageProp 개체는 응용 프로그램에 의해 인스턴스화되고 기본 메커니즘에서 메시지 및 기타 추가 메시지 상태 정보에 적용된 보호 강도를 나타내는 QOP와 같은 정보를 호출자에게 반환하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fe96d26de32e8c1c5fd883226f3db667abb4bc03" translate="yes" xml:space="preserve">
          <source>Uses the &quot;The Base64 Alphabet&quot; as specified in Table 1 of RFC 2045 for encoding and decoding operation. The encoded output must be represented in lines of no more than 76 characters each and uses a carriage return &lt;code&gt;'\r'&lt;/code&gt; followed immediately by a linefeed &lt;code&gt;'\n'&lt;/code&gt; as the line separator. No line separator is added to the end of the encoded output. All line separators or other characters not found in the base64 alphabet table are ignored in decoding operation.</source>
          <target state="translated">인코딩 및 디코딩 작업에 RFC 2045의 표 1에 지정된 &quot;Base64 알파벳&quot;을 사용합니다. 인코딩 된 출력은 각각 76 자 이하 여야하며 캐리지 리턴 &lt;code&gt;'\r'&lt;/code&gt; 다음에 줄 바꿈 &lt;code&gt;'\n'&lt;/code&gt; 을 줄 구분자로 사용합니다. 인코딩 된 출력 끝에 줄 구분 기호가 추가되지 않습니다. base64 알파벳 표에없는 모든 행 구분 기호 나 다른 문자는 디코딩 작업에서 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="e846d675917cc6469bee8f9dc213b99e034fe6a3" translate="yes" xml:space="preserve">
          <source>Uses the &quot;URL and Filename safe Base64 Alphabet&quot; as specified in Table 2 of RFC 4648 for encoding and decoding. The encoder does not add any line feed (line separator) character. The decoder rejects data that contains characters outside the base64 alphabet.</source>
          <target state="translated">인코딩 및 디코딩에 RFC 4648의 표 2에 지정된 &quot;URL 및 파일 이름 안전 Base64 알파벳&quot;을 사용합니다. 인코더는 줄 바꿈 문자를 추가하지 않습니다. 디코더는 base64 알파벳 이외의 문자가 포함 된 데이터를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="eeb3e5ae3000cb4861d44998612cf82f924af575" translate="yes" xml:space="preserve">
          <source>Uses the &lt;code&gt;Bindings&lt;/code&gt; returned by the abstract &lt;code&gt;getGlobalScope&lt;/code&gt; method as its &lt;code&gt;GLOBAL_SCOPE&lt;/code&gt;</source>
          <target state="translated">용도 &lt;code&gt;Bindings&lt;/code&gt; 추상에 의해 반환 &lt;code&gt;getGlobalScope&lt;/code&gt; 의 그와 같은 방법 &lt;code&gt;GLOBAL_SCOPE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="203a61b07904d7718cd7b7494af32f4c4b35209c" translate="yes" xml:space="preserve">
          <source>Uses the Reader and Writer in the default &lt;code&gt;ScriptContext&lt;/code&gt; of this &lt;code&gt;ScriptEngine&lt;/code&gt;</source>
          <target state="translated">이 &lt;code&gt;ScriptEngine&lt;/code&gt; 의 기본 &lt;code&gt;ScriptContext&lt;/code&gt; 에서 Reader와 Writer를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="891e2d44073b5010b12ee3b97afc59c6b6f18dfa" translate="yes" xml:space="preserve">
          <source>Uses the constructor represented by this &lt;code&gt;Constructor&lt;/code&gt; object to create and initialize a new instance of the constructor's declaring class, with the specified initialization parameters.</source>
          <target state="translated">이 &lt;code&gt;Constructor&lt;/code&gt; 객체가 나타내는 생성자를 사용하여 지정된 초기화 매개 변수를 사용하여 생성자 선언 클래스의 새 인스턴스를 만들고 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="1a0d6510b882760c1b04dcd907ebc56b88379148" translate="yes" xml:space="preserve">
          <source>Uses the constructor represented by this &lt;code&gt;Constructor&lt;/code&gt; object to create and initialize a new instance of the constructor's declaring class, with the specified initialization parameters. Individual parameters are automatically unwrapped to match primitive formal parameters, and both primitive and reference parameters are subject to method invocation conversions as necessary.</source>
          <target state="translated">&lt;code&gt;Constructor&lt;/code&gt; 객체가 나타내는 생성자를 사용하여 지정된 초기화 매개 변수를 사용하여 생성자 선언 클래스의 새 인스턴스를 작성하고 초기화합니다. 개별 매개 변수는 기본 형식 매개 변수와 일치하도록 자동으로 랩핑 해제되며 기본 및 참조 매개 변수 모두 필요에 따라 메소드 호출 변환에 종속됩니다.</target>
        </trans-unit>
        <trans-unit id="2f41e59de5853a92bc45b401931704f5e09f91c3" translate="yes" xml:space="preserve">
          <source>Uses the specified &lt;code&gt;Bindings&lt;/code&gt; for its &lt;code&gt;ENGINE_SCOPE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ENGINE_SCOPE&lt;/code&gt; 에 지정된 &lt;code&gt;Bindings&lt;/code&gt; 을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1cfe76d437a239ad1ab917463d3bab5d665c7319" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#onExit()&quot;&gt;&lt;code&gt;onExit&lt;/code&gt;&lt;/a&gt; is an alternative to &lt;a href=&quot;#waitFor()&quot;&gt;&lt;code&gt;waitFor&lt;/code&gt;&lt;/a&gt; that enables both additional concurrency and convenient access to the result of the Process. Lambda expressions can be used to evaluate the result of the Process execution. If there is other processing to be done before the value is used then &lt;a href=&quot;#onExit()&quot;&gt;onExit&lt;/a&gt; is a convenient mechanism to free the current thread and block only if and when the value is needed.</source>
          <target state="translated">&lt;a href=&quot;#onExit()&quot;&gt; &lt;code&gt;onExit&lt;/code&gt; 를&lt;/a&gt; 사용 하는 것은 &lt;a href=&quot;#waitFor()&quot;&gt; &lt;code&gt;waitFor&lt;/code&gt; &lt;/a&gt; 의 대안으로 추가 동시성과 프로세스 결과에 대한 편리한 액세스를 모두 가능하게합니다. Lambda 표현식을 사용하여 프로세스 실행 결과를 평가할 수 있습니다. 값이 사용되기 전에 수행 할 다른 처리가있는 경우 &lt;a href=&quot;#onExit()&quot;&gt;onExit&lt;/a&gt; 는 값이 필요한 경우에만 현재 스레드 및 블록을 해제하는 편리한 메커니즘입니다.</target>
        </trans-unit>
        <trans-unit id="83f38d3c8cc1ce56571de5c1baaa761dd5a6add7" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;locale.builder&quot;&gt;&lt;code&gt;Locale.Builder&lt;/code&gt;&lt;/a&gt; you can construct a &lt;code&gt;Locale&lt;/code&gt; object that conforms to BCP 47 syntax.</source>
          <target state="translated">&lt;a href=&quot;locale.builder&quot;&gt; &lt;code&gt;Locale.Builder&lt;/code&gt; &lt;/a&gt; 를 사용하면 BCP 47 구문을 따르는 &lt;code&gt;Locale&lt;/code&gt; 객체를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="31e876b371846698065275b4777bc2fbe7908cc9" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;getDataElements&lt;/code&gt; and &lt;code&gt;setDataElements&lt;/code&gt; to transfer between two &lt;code&gt;DataBuffer/SampleModel&lt;/code&gt; pairs is legitimate if the &lt;code&gt;SampleModel&lt;/code&gt; objects have the same number of bands, corresponding bands have the same number of bits per sample, and the &lt;code&gt;TransferType&lt;/code&gt;s are the same.</source>
          <target state="translated">&lt;code&gt;getDataElements&lt;/code&gt; 및 &lt;code&gt;setDataElements&lt;/code&gt; 를 사용하여 두 &lt;code&gt;DataBuffer/SampleModel&lt;/code&gt; 쌍 간에 전송 하는 것은 &lt;code&gt;SampleModel&lt;/code&gt; 객체에 동일한 수의 밴드가 있고 해당 밴드의 샘플 당 비트 수가 동일하며 &lt;code&gt;TransferType&lt;/code&gt; 이 동일한 경우 합법적 입니다.</target>
        </trans-unit>
        <trans-unit id="1e20d3212fb52a11574551f5d3fa89668462b6a4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;getDataElements&lt;/code&gt; or &lt;code&gt;setDataElements&lt;/code&gt; to transfer between two &lt;code&gt;DataBuffer/SampleModel&lt;/code&gt; pairs is legitimate if the &lt;code&gt;SampleModel&lt;/code&gt; objects have the same number of bands, corresponding bands have the same number of bits per sample, and the TransferTypes are the same.</source>
          <target state="translated">&lt;code&gt;getDataElements&lt;/code&gt; 또는 &lt;code&gt;setDataElements&lt;/code&gt; 를 사용하여 두 &lt;code&gt;DataBuffer/SampleModel&lt;/code&gt; 쌍 사이에서 전송 하는 것은 &lt;code&gt;SampleModel&lt;/code&gt; 객체에 동일한 수의 밴드가 있고 해당 밴드에 동일한 샘플 당 비트 수를 가지며 TransferTypes가 동일한 경우 합법적 입니다.</target>
        </trans-unit>
        <trans-unit id="6ee656d8538a805bae4a849058c87bab3f08961e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;getDataElements&lt;/code&gt; or &lt;code&gt;setDataElements&lt;/code&gt; to transfer between two &lt;code&gt;DataBuffer/SampleModel&lt;/code&gt; pairs is legitimate if the &lt;code&gt;SampleModels&lt;/code&gt; have the same number of bands, corresponding bands have the same number of bits per sample, and the TransferTypes are the same.</source>
          <target state="translated">&lt;code&gt;getDataElements&lt;/code&gt; 또는 &lt;code&gt;setDataElements&lt;/code&gt; 를 사용하여 두 &lt;code&gt;DataBuffer/SampleModel&lt;/code&gt; 쌍 간에 전송 하는 것은 &lt;code&gt;SampleModels&lt;/code&gt; 에 동일한 수의 밴드가 있고 해당 밴드에 동일한 샘플 당 비트 수가 있고 TransferTypes가 동일한 경우 합법적 입니다.</target>
        </trans-unit>
        <trans-unit id="fb62d313af3aad728ab5f7edc456541d47f0be14" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;timeZone&lt;/code&gt; value as defined above, create a new &lt;code&gt;java.util.GregorianCalendar(timeZone,Locale.getDefault())&lt;/code&gt;.</source>
          <target state="translated">사용 &lt;code&gt;timeZone&lt;/code&gt; 새로 만든 상기 정의 된 값 &lt;code&gt;java.util.GregorianCalendar(timeZone,Locale.getDefault())&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0f0960e30bde99a78aafef52a13eb97be34b2c7" translate="yes" xml:space="preserve">
          <source>Using Attributes</source>
          <target state="translated">속성 사용</target>
        </trans-unit>
        <trans-unit id="61bb96cb5e546c8e0aa0c7dc6bedc057616e82ef" translate="yes" xml:space="preserve">
          <source>Using LocalDate instead</source>
          <target state="translated">대신 LocalDate 사용</target>
        </trans-unit>
        <trans-unit id="c2b7b67de5b0a9449d1e126ff0ec59c13369deb3" translate="yes" xml:space="preserve">
          <source>Using a &lt;code&gt;DataSource&lt;/code&gt; Object to Make a Connection</source>
          <target state="translated">&lt;code&gt;DataSource&lt;/code&gt; 개체를 사용하여 연결 만들기</target>
        </trans-unit>
        <trans-unit id="2b93ef7599412e4dd2af0b49160dfbdbf726d2e2" translate="yes" xml:space="preserve">
          <source>Using a constructor</source>
          <target state="translated">생성자 사용</target>
        </trans-unit>
        <trans-unit id="5f4876bf7e5a097482233fd92f0351b417125b82" translate="yes" xml:space="preserve">
          <source>Using an MBean proxy is just a convenience. The second example ends up calling the same &lt;code&gt;MBeanServer&lt;/code&gt; operations as the first one.</source>
          <target state="translated">MBean 프록시 사용은 편리합니다. 두 번째 예는 첫 번째 와 동일한 &lt;code&gt;MBeanServer&lt;/code&gt; 조작을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="f6b23bded44d3550a2defb2bdcc0df03a3dc7d91" translate="yes" xml:space="preserve">
          <source>Using an MXBean proxy is a convenience remote access to a platform MXBean of a running virtual machine. All method calls to the MXBean proxy are forwarded to an &lt;code&gt;MBeanServerConnection&lt;/code&gt; where &lt;a href=&quot;../../../../java.base/java/io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; may be thrown when the communication problem occurs with the connector server. If thrown, &lt;a href=&quot;../../../../java.base/java/io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; will be wrappped in &lt;a href=&quot;../../../../java.base/java/lang/reflect/undeclaredthrowableexception&quot;&gt;&lt;code&gt;UndeclaredThrowableException&lt;/code&gt;&lt;/a&gt;. An application remotely accessing the platform MXBeans using proxy should prepare to catch &lt;code&gt;UndeclaredThrowableException&lt;/code&gt; and handle its &lt;a href=&quot;../../../../java.base/java/lang/reflect/undeclaredthrowableexception#getCause()&quot;&gt;cause&lt;/a&gt; as if that cause had been thrown by the &lt;code&gt;MBeanServerConnection&lt;/code&gt; interface.</source>
          <target state="translated">MXBean 프록시를 사용하면 실행중인 가상 머신의 플랫폼 MXBean에 편리하게 원격으로 액세스 할 수 있습니다. MXBean의 프록시에 대한 모든 메소드 호출은 전달됩니다 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 를&lt;a href=&quot;../../../../java.base/java/io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; 이가&lt;/a&gt; 통신 문제가 커넥터 서버와 함께 발생하는 경우 발생 할 수있다. throw되면 &lt;a href=&quot;../../../../java.base/java/io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; 이 &lt;a href=&quot;../../../../java.base/java/lang/reflect/undeclaredthrowableexception&quot;&gt; &lt;code&gt;UndeclaredThrowableException&lt;/code&gt; 에&lt;/a&gt; 래핑됩니다 . 프록시를 사용하여 플랫폼 MXBean에 원격으로 액세스하는 응용 프로그램은 &lt;code&gt;UndeclaredThrowableException&lt;/code&gt; 을 포착 하고 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 인터페이스에 의해 원인이 발생한 것처럼 &lt;a href=&quot;../../../../java.base/java/lang/reflect/undeclaredthrowableexception#getCause()&quot;&gt;원인&lt;/a&gt; 을 처리 할 준비를해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1e8df2fe46b9e932e0db3592537261df3f03821d" translate="yes" xml:space="preserve">
          <source>Using an MXBean proxy is a convenience remote access to a platform MXBean of a running virtual machine. All method calls to the MXBean proxy are forwarded to an &lt;code&gt;MBeanServerConnection&lt;/code&gt; where &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; may be thrown when the communication problem occurs with the connector server. An application remotely accesses the platform MXBeans using proxy should prepare to catch &lt;code&gt;IOException&lt;/code&gt; as if accessing with the &lt;code&gt;MBeanServerConnector&lt;/code&gt; interface.</source>
          <target state="translated">MXBean 프록시를 사용하면 실행중인 가상 머신의 플랫폼 MXBean에 편리하게 원격으로 액세스 할 수 있습니다. MXBean의 프록시에 대한 모든 메소드 호출은 전달됩니다 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 를&lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; 이가&lt;/a&gt; 통신 문제가 커넥터 서버와 함께 발생하는 경우 발생 할 수있다. 프록시를 사용하여 애플리케이션이 플랫폼 MXBean에 원격으로 액세스 하면 &lt;code&gt;MBeanServerConnector&lt;/code&gt; 인터페이스로 액세스하는 것처럼 &lt;code&gt;IOException&lt;/code&gt; 을 포착 할 수 있도록 준비해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a7e9c4e0ef646900c9d37259efe42bb9d6a54acf" translate="yes" xml:space="preserve">
          <source>Using anchoring bounds, the boundaries of this matcher's region match anchors such as ^ and $.</source>
          <target state="translated">앵커링 경계를 사용하면이 매처 영역의 경계는 ^ 및 $와 같은 앵커와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="0da11761e9b93ed42e1459871d97f3907f53b28b" translate="yes" xml:space="preserve">
          <source>Using factory methods in the &lt;a href=&quot;methodhandles.lookup&quot;&gt;&lt;code&gt;Lookup&lt;/code&gt;&lt;/a&gt; API, any class member represented by a Core Reflection API object can be converted to a behaviorally equivalent method handle. For example, a reflective &lt;a href=&quot;../reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; can be converted to a method handle using &lt;a href=&quot;methodhandles.lookup#unreflect(java.lang.reflect.Method)&quot;&gt;&lt;code&gt;Lookup.unreflect&lt;/code&gt;&lt;/a&gt;. The resulting method handles generally provide more direct and efficient access to the underlying class members.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup&quot;&gt; &lt;code&gt;Lookup&lt;/code&gt; &lt;/a&gt; API의 팩토리 메서드를 사용하면 Core Reflection API 개체가 나타내는 모든 클래스 멤버를 동작에 상응하는 메서드 핸들로 변환 할 수 있습니다. 예를 들어 반사 &lt;a href=&quot;../reflect/method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;methodhandles.lookup#unreflect(java.lang.reflect.Method)&quot;&gt; &lt;code&gt;Lookup.unreflect&lt;/code&gt; 를&lt;/a&gt; 사용하여 메서드 핸들로 변환 할 수 있습니다 . 결과 메서드 핸들은 일반적으로 기본 클래스 멤버에 대한보다 직접적이고 효율적인 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cdd78d1f86e78fec3ea599004d8fad8c76d9d7da" translate="yes" xml:space="preserve">
          <source>Using factory methods in the &lt;a href=&quot;methodhandles.lookup&quot;&gt;&lt;code&gt;Lookup&lt;/code&gt;&lt;/a&gt; API, any class member represented by a Core Reflection API object can be converted to a behaviorally equivalent method handle. For example, a reflective &lt;a href=&quot;../reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; can be converted to a method handle using &lt;a href=&quot;methodhandles.lookup#unreflect-java.lang.reflect.Method-&quot;&gt;&lt;code&gt;Lookup.unreflect&lt;/code&gt;&lt;/a&gt;. The resulting method handles generally provide more direct and efficient access to the underlying class members.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup&quot;&gt; &lt;code&gt;Lookup&lt;/code&gt; &lt;/a&gt; API 에서 팩토리 메소드를 사용하면 Core Reflection API 객체로 표시되는 모든 클래스 멤버를 동작 적으로 동등한 메소드 핸들로 변환 할 수 있습니다. 예를 들어, &lt;a href=&quot;methodhandles.lookup#unreflect-java.lang.reflect.Method-&quot;&gt; &lt;code&gt;Lookup.unreflect&lt;/code&gt; 를&lt;/a&gt; 사용하여 반사 형 &lt;a href=&quot;../reflect/method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 를 메소드 핸들로 변환 할 수 있습니다 . 결과 메소드 핸들은 일반적으로 기본 클래스 멤버에 대한보다 직접적이고 효율적인 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b00b81ffa41c0d8b516be8cdb12e4ca4bd59b9f4" translate="yes" xml:space="preserve">
          <source>Using factory methods in the &lt;a href=&quot;methodhandles.lookup&quot;&gt;&lt;code&gt;Lookup&lt;/code&gt;&lt;/a&gt; API, any field represented by a Core Reflection API object can be converted to a behaviorally equivalent VarHandle. For example, a reflective &lt;a href=&quot;../reflect/field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; can be converted to a VarHandle using &lt;a href=&quot;methodhandles.lookup#unreflectVarHandle(java.lang.reflect.Field)&quot;&gt;&lt;code&gt;Lookup.unreflectVarHandle&lt;/code&gt;&lt;/a&gt;. The resulting VarHandles generally provide more direct and efficient access to the underlying fields.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup&quot;&gt; &lt;code&gt;Lookup&lt;/code&gt; &lt;/a&gt; API의 팩토리 메서드를 사용하면 Core Reflection API 개체로 표현되는 모든 필드를 동작에 상응하는 VarHandle로 변환 할 수 있습니다. 예를 들어, Lookup.unreflectVarHandle을 사용하여 반사 &lt;a href=&quot;../reflect/field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;methodhandles.lookup#unreflectVarHandle(java.lang.reflect.Field)&quot;&gt; &lt;code&gt;Lookup.unreflectVarHandle&lt;/code&gt; &lt;/a&gt; 로 변환 할 수 있습니다 . 결과 VarHandles는 일반적으로 기본 필드에 대한보다 직접적이고 효율적인 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="12c09276dee16d1c75dad2a21a3d5253839c98e7" translate="yes" xml:space="preserve">
          <source>Using getDataElements/setDataElements to transfer between two DataBuffer/SampleModel pairs is legitimate if the SampleModels have the same number of bands, corresponding bands have the same number of bits per sample, and the TransferTypes are the same.</source>
          <target state="translated">getDataElements / setDataElements를 사용하여 두 DataBuffer / SampleModel 쌍간에 전송하는 것은 SampleModel에 동일한 수의 대역이 있고 해당 대역에 샘플 당 동일한 수의 비트가 있으며 TransferType이 동일한 경우 합법적입니다.</target>
        </trans-unit>
        <trans-unit id="21c8ad4b3f87d2f794dcde2cdb625766302c4526" translate="yes" xml:space="preserve">
          <source>Using lenient resolution will resolve the values in an appropriate lenient manner. Individual fields will interpret this differently.</source>
          <target state="translated">관대 한 해결 방법을 사용하면 적절한 관대 한 방식으로 값을 해결합니다. 개별 필드는 이것을 다르게 해석합니다.</target>
        </trans-unit>
        <trans-unit id="8561c3ec91d9448080b4d951ea48a4072c5c1776" translate="yes" xml:space="preserve">
          <source>Using localized styles, such as &lt;code&gt;long&lt;/code&gt; or &lt;code&gt;medium&lt;/code&gt;</source>
          <target state="translated">같은 현지화 스타일, 사용 &lt;code&gt;long&lt;/code&gt; 또는 &lt;code&gt;medium&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e36c81294d6be7d4f7e763263948b03e4a7d50de" translate="yes" xml:space="preserve">
          <source>Using modes such as &lt;code&gt;CFB&lt;/code&gt; and &lt;code&gt;OFB&lt;/code&gt;, block ciphers can encrypt data in units smaller than the cipher's actual block size. When requesting such a mode, you may optionally specify the number of bits to be processed at a time by appending this number to the mode name as shown in the &quot;&lt;code&gt;AES/CFB8/NoPadding&lt;/code&gt;&quot; and &quot;&lt;code&gt;AES/OFB32/PKCS5Padding&lt;/code&gt;&quot; transformations. If no such number is specified, a provider-specific default is used. (See the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jdk_providers&quot;&gt;JDK Providers Documentation&lt;/a&gt; for the JDK Providers default values.) Thus, block ciphers can be turned into byte-oriented stream ciphers by using an 8 bit mode such as CFB8 or OFB8.</source>
          <target state="translated">&lt;code&gt;CFB&lt;/code&gt; 및 &lt;code&gt;OFB&lt;/code&gt; 와 같은 모드를 사용하여 블록 암호는 암호의 실제 블록 크기보다 작은 단위로 데이터를 암호화 할 수 있습니다. 이러한 모드를 요청할 때 &quot; &lt;code&gt;AES/CFB8/NoPadding&lt;/code&gt; &quot;및 &quot; &lt;code&gt;AES/OFB32/PKCS5Padding&lt;/code&gt; &quot;변환에 표시된대로 모드 이름에이 번호를 추가하여 한 번에 처리 할 비트 수를 선택적으로 지정할 수 있습니다 . 이러한 번호를 지정하지 않으면 공급자 별 기본값이 사용됩니다. ( JDK Providers 기본값 은 &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jdk_providers&quot;&gt;JDK Providers Documentation&lt;/a&gt; 을 참조하십시오 .) 따라서 CFB8 또는 OFB8과 같은 8 비트 모드를 사용하여 블록 암호를 바이트 지향 스트림 암호로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="253df803fe00960ddb3b3a9f6c13edaaab2b99da" translate="yes" xml:space="preserve">
          <source>Using modes such as &lt;code&gt;CFB&lt;/code&gt; and &lt;code&gt;OFB&lt;/code&gt;, block ciphers can encrypt data in units smaller than the cipher's actual block size. When requesting such a mode, you may optionally specify the number of bits to be processed at a time by appending this number to the mode name as shown in the &quot;&lt;code&gt;DES/CFB8/NoPadding&lt;/code&gt;&quot; and &quot;&lt;code&gt;DES/OFB32/PKCS5Padding&lt;/code&gt;&quot; transformations. If no such number is specified, a provider-specific default is used. (For example, the SunJCE provider uses a default of 64 bits for DES.) Thus, block ciphers can be turned into byte-oriented stream ciphers by using an 8 bit mode such as CFB8 or OFB8.</source>
          <target state="translated">&lt;code&gt;CFB&lt;/code&gt; 및 &lt;code&gt;OFB&lt;/code&gt; 와 같은 모드를 사용하여 블록 암호는 암호의 실제 블록 크기보다 작은 단위로 데이터를 암호화 할 수 있습니다. 이러한 모드를 요청하는 경우 &quot; &lt;code&gt;DES/CFB8/NoPadding&lt;/code&gt; &quot;및 &quot; &lt;code&gt;DES/OFB32/PKCS5Padding&lt;/code&gt; &quot;변환에 표시된대로이 이름을 모드 이름에 추가하여 한 번에 처리 할 비트 수를 선택적으로 지정할 수 있습니다 . 해당 번호를 지정하지 않으면 공급자 별 기본값이 사용됩니다. (예를 들어, SunJCE 제공자는 DES에 대해 기본 64 비트를 사용합니다.) 따라서 블록 암호는 CFB8 또는 OFB8과 같은 8 비트 모드를 사용하여 바이트 지향 스트림 암호로 전환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9deca9aeafc463fa6ca2b88d4ccb83b12d7abad" translate="yes" xml:space="preserve">
          <source>Using non-ISO calendar systems in an application introduces significant extra complexity. Ensure that the warnings and recommendations in &lt;code&gt;ChronoLocalDate&lt;/code&gt; have been read before working with the &quot;chrono&quot; interfaces.</source>
          <target state="translated">응용 프로그램에서 ISO가 아닌 달력 시스템을 사용하면 상당히 복잡해집니다. &quot;chrono&quot;인터페이스로 작업하기 전에 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 의 경고 및 권장 사항을 읽었 는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="4fdc9e47759ec12a744c9d9d657a505eec33b711" translate="yes" xml:space="preserve">
          <source>Using normal paint/event mechanics results in 1a appearing at the bottom and 5a being above all other components.</source>
          <target state="translated">일반 페인트 / 이벤트 메커니즘을 사용하면 하단에 1a가 나타나고 다른 모든 구성 요소보다 위에 5a가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="573cc26e7099971b8835749f74d2d06635f24f52" translate="yes" xml:space="preserve">
          <source>Using opaque bounds, the boundaries of this matcher's region are opaque to lookahead, lookbehind, and boundary matching constructs that may try to see beyond them. Those constructs cannot look past the boundaries so they will fail to match anything outside of the region.</source>
          <target state="translated">이 경계 영역의 경계는 불투명 경계를 사용하여 경계, 경계, 경계 경계를 넘어서 보이지 않게 할 수 있습니다. 이러한 구조는 경계를지나 볼 수 없으므로 지역 외부의 항목과 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="89b2e216c005cff81225b83bc0d9df94e32fec36" translate="yes" xml:space="preserve">
          <source>Using pattern letters, such as &lt;code&gt;uuuu-MMM-dd&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;uuuu-MMM-dd&lt;/code&gt; 와 같은 패턴 문자 사용</target>
        </trans-unit>
        <trans-unit id="ec6d902b3955039aca3e3152683e259b76146b8e" translate="yes" xml:space="preserve">
          <source>Using predefined constants, such as &lt;a href=&quot;#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ISO_LOCAL_DATE&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt; &lt;/a&gt; 와 같은 사전 정의 된 상수 사용</target>
        </trans-unit>
        <trans-unit id="180c277dc63d51c2b6b593d31797e5272463d61c" translate="yes" xml:space="preserve">
          <source>Using predefined constants, such as &lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt; &lt;/a&gt; 와 같은 미리 정의 된 상수 사용</target>
        </trans-unit>
        <trans-unit id="b5b75e2ea752e51b08714485a1e1d68bf8a4a87c" translate="yes" xml:space="preserve">
          <source>Using smart resolution will perform the sensible default for each field, which may be the same as strict, the same as lenient, or a third behavior. Individual fields will interpret this differently.</source>
          <target state="translated">스마트 해상도를 사용하면 각 필드에 대해 합리적인 기본값을 수행합니다. 이는 엄격함, 관대함과 같거나 세 번째 동작 일 수 있습니다. 개별 필드는 이것을 다르게 해석합니다.</target>
        </trans-unit>
        <trans-unit id="6198983076e23d70c804f77c8fd2cd98922f7d2c" translate="yes" xml:space="preserve">
          <source>Using strict resolution will ensure that all parsed values are within the outer range of valid values for the field. Individual fields may be further processed for strictness.</source>
          <target state="translated">엄격한 해상도를 사용하면 구문 분석 된 모든 값이 필드에 유효한 값의 외부 범위 내에 있어야합니다. 엄격 성을 위해 개별 필드를 추가로 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="57adc219b02cd4b546d84ce9cc08a6823fa927f0" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;AWTKeyStroke&lt;/code&gt; API, client code can specify on which of two specific &lt;code&gt;KeyEvent&lt;/code&gt;s, &lt;code&gt;KEY_PRESSED&lt;/code&gt; or &lt;code&gt;KEY_RELEASED&lt;/code&gt;, the focus traversal operation will occur. Regardless of which &lt;code&gt;KeyEvent&lt;/code&gt; is specified, however, all &lt;code&gt;KeyEvent&lt;/code&gt;s related to the focus traversal key, including the associated &lt;code&gt;KEY_TYPED&lt;/code&gt; event, will be consumed, and will not be dispatched to any &lt;code&gt;Component&lt;/code&gt;. It is a runtime error to specify a &lt;code&gt;KEY_TYPED&lt;/code&gt; event as mapping to a focus traversal operation, or to map the same event to multiple default focus traversal operations.</source>
          <target state="translated">&lt;code&gt;AWTKeyStroke&lt;/code&gt; API를 사용하여 클라이언트 코드는 두 개의 특정 &lt;code&gt;KeyEvent&lt;/code&gt; 중 &lt;code&gt;KEY_PRESSED&lt;/code&gt; 또는 &lt;code&gt;KEY_RELEASED&lt;/code&gt; 중 포커스 탐색 작업이 발생하도록 지정할 수 있습니다. 그러나 어떤 &lt;code&gt;KeyEvent&lt;/code&gt; 가 지정 되었는지에 관계없이 연관된 &lt;code&gt;KEY_TYPED&lt;/code&gt; 이벤트를 포함하여 포커스 순회 키와 관련된 모든 &lt;code&gt;KeyEvent&lt;/code&gt; 는 소비되며 &lt;code&gt;Component&lt;/code&gt; 로 전달되지 않습니다 . &lt;code&gt;KEY_TYPED&lt;/code&gt; 이벤트를 포커스 탐색 작업에 대한 매핑 으로 지정 하거나 동일한 이벤트를 여러 기본 포커스 탐색 작업에 매핑 하는 것은 런타임 오류 입니다.</target>
        </trans-unit>
        <trans-unit id="46cb7d1cac83ca20a64472ab3ae7324ea142909d" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;setSyncProvider&lt;/code&gt; method</source>
          <target state="translated">은 Using &lt;code&gt;setSyncProvider&lt;/code&gt; 방법을</target>
        </trans-unit>
        <trans-unit id="ddc6d587f01bd48a87c73ce65a0e9221289aaef1" translate="yes" xml:space="preserve">
          <source>Using the API</source>
          <target state="translated">API 사용</target>
        </trans-unit>
        <trans-unit id="54f2b9a37e73d6d304c1071d905b44fa561c4e83" translate="yes" xml:space="preserve">
          <source>Using the AWTKeyStroke API, client code can specify on which of two specific KeyEvents, KEY_PRESSED or KEY_RELEASED, the focus traversal operation will occur. Regardless of which KeyEvent is specified, however, all KeyEvents related to the focus traversal key, including the associated KEY_TYPED event, will be consumed, and will not be dispatched to any Component. It is a runtime error to specify a KEY_TYPED event as mapping to a focus traversal operation, or to map the same event to multiple default focus traversal operations.</source>
          <target state="translated">AWTKeyStroke API를 사용하여 클라이언트 코드는 두 개의 특정 KeyEvents, KEY_PRESSED 또는 KEY_RELEASED 중 어느 것에 초점 순회 작업이 발생하는지 지정할 수 있습니다. 그러나 지정된 KeyEvent에 관계없이 연관된 KEY_TYPED 이벤트를 포함하여 포커스 순회 키와 관련된 모든 KeyEvents가 소비되고 구성 요소로 전달되지 않습니다. KEY_TYPED 이벤트를 포커스 탐색 작업에 대한 매핑으로 지정하거나 동일한 이벤트를 여러 기본 포커스 탐색 작업에 매핑하는 것은 런타임 오류입니다.</target>
        </trans-unit>
        <trans-unit id="36644b558882f58bb10f350d7cb74efe9cececfa" translate="yes" xml:space="preserve">
          <source>Using the AWTKeyStroke API, client code can specify on which of two specific KeyEvents, KEY_PRESSED or KEY_RELEASED, the focus traversal operation will occur. Regardless of which KeyEvent is specified, however, all KeyEvents related to the focus traversal key, including the associated KEY_TYPED event, will be consumed, and will not be dispatched to any Container. It is a runtime error to specify a KEY_TYPED event as mapping to a focus traversal operation, or to map the same event to multiple default focus traversal operations.</source>
          <target state="translated">AWTKeyStroke API를 사용하여 클라이언트 코드는 두 개의 특정 KeyEvents, KEY_PRESSED 또는 KEY_RELEASED 중 어느 것에 초점 순회 작업이 발생하는지 지정할 수 있습니다. 그러나 지정된 KeyEvent에 관계없이 연관된 KEY_TYPED 이벤트를 포함하여 포커스 순회 키와 관련된 모든 KeyEvents가 소비되고 컨테이너로 전달되지 않습니다. KEY_TYPED 이벤트를 포커스 탐색 작업에 대한 매핑으로 지정하거나 동일한 이벤트를 여러 기본 포커스 탐색 작업에 매핑하는 것은 런타임 오류입니다.</target>
        </trans-unit>
        <trans-unit id="c8f41fcf0e283fdc0f846432706ec80f46cc28cb" translate="yes" xml:space="preserve">
          <source>Using the class to generate input events differs from posting events to the AWT event queue or AWT components in that the events are generated in the platform's native input queue. For example, &lt;code&gt;Robot.mouseMove&lt;/code&gt; will actually move the mouse cursor instead of just generating mouse move events.</source>
          <target state="translated">클래스를 사용하여 입력 이벤트를 생성하는 것은 이벤트가 플랫폼의 기본 입력 큐에서 생성된다는 점에서 AWT 이벤트 큐 또는 AWT 구성 요소에 이벤트를 게시하는 것과 다릅니다. 예를 들어 &lt;code&gt;Robot.mouseMove&lt;/code&gt; 는 마우스 이동 이벤트를 생성하는 대신 실제로 마우스 커서를 이동합니다.</target>
        </trans-unit>
        <trans-unit id="0f125f8054c876d5b61f66059381705229cb4461" translate="yes" xml:space="preserve">
          <source>Using the public constructor &lt;a href=&quot;#%3Cinit%3E(T,java.lang.Class,boolean)&quot;&gt;&lt;code&gt;StandardMBean(impl,interface)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">공용 생성자 &lt;a href=&quot;#%3Cinit%3E(T,java.lang.Class,boolean)&quot;&gt; &lt;code&gt;StandardMBean(impl,interface)&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="470a33ba31755e72cbf379c38bb36ff96909a02c" translate="yes" xml:space="preserve">
          <source>Using the public constructor &lt;a href=&quot;standardmbean#StandardMBean-T-java.lang.Class-boolean-&quot;&gt;&lt;code&gt;StandardMBean(impl,interface)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">공용 생성자 &lt;a href=&quot;standardmbean#StandardMBean-T-java.lang.Class-boolean-&quot;&gt; &lt;code&gt;StandardMBean(impl,interface)&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="f08caaea9a88beb7acb495f252c735a1315d1558" translate="yes" xml:space="preserve">
          <source>Using the search filter, it is possible to register interest in objects that do not exist at the time of registration but later come into existence and satisfy the filter. However, there might be limitations in the extent to which this can be supported by the service provider and underlying protocol/service. If the caller submits a filter that cannot be supported in this way, &lt;code&gt;addNamingListener()&lt;/code&gt; throws an &lt;code&gt;InvalidSearchFilterException&lt;/code&gt;.</source>
          <target state="translated">검색 필터를 사용하면 등록시 존재하지 않지만 나중에 존재하여 필터를 만족시키는 객체에 관심을 등록 할 수 있습니다. 그러나 서비스 공급자 및 기본 프로토콜 / 서비스에서 지원할 수있는 범위에는 제한이있을 수 있습니다. 호출자가 이런 방식으로 지원할 수없는 필터를 제출하면 &lt;code&gt;addNamingListener()&lt;/code&gt; 는 &lt;code&gt;InvalidSearchFilterException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="8fcbc8605dff4aedb248347ffe55f2bdfa316c81" translate="yes" xml:space="preserve">
          <source>Using these factors, Porter and Duff define 12 ways of choosing the blending factors &lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; to produce each of 12 desirable visual effects. The equations for determining &lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; are given in the descriptions of the 12 static fields that specify visual effects. For example, the description for &lt;a href=&quot;#SRC_OVER&quot;&gt;&lt;code&gt;SRC_OVER&lt;/code&gt;&lt;/a&gt; specifies that &lt;em&gt;F&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; = 1 and &lt;em&gt;F&lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; = (1-&lt;em&gt;A&lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt;). Once a set of equations for determining the blending factors is known they can then be applied to each pixel to produce a result using the following set of equations:</source>
          <target state="translated">이러한 요소를 이용하고 포터 더프 블렌딩 선택의 방법 (12)을 정의하는 인자 &lt;em&gt;F &lt;sub&gt;S&lt;/sub&gt;&lt;/em&gt; 및 &lt;em&gt;F의 &lt;sub&gt;D는&lt;/sub&gt;&lt;/em&gt; 12 개 바람직한 시각 효과를 각각 생성한다. &lt;em&gt;F &lt;sub&gt;s&lt;/sub&gt;&lt;/em&gt; 및 &lt;em&gt;F &lt;sub&gt;d&lt;/sub&gt;&lt;/em&gt; 를 결정하는 방정식은 시각 효과를 지정하는 12 개의 정적 필드에 대한 설명에 나와 있습니다. 예를 들어,에 대한 설명 &lt;a href=&quot;#SRC_OVER&quot;&gt; &lt;code&gt;SRC_OVER&lt;/code&gt; 의&lt;/a&gt; 지정이 &lt;em&gt;F &lt;sub&gt;(S)&lt;/sub&gt;&lt;/em&gt; = 1 및 &lt;em&gt;F &lt;sub&gt;(D)&lt;/sub&gt;&lt;/em&gt; = (1- &lt;em&gt;&lt;sub&gt;S&lt;/sub&gt;&lt;/em&gt; ). 블렌딩 인자를 결정하기위한 방정식 세트가 알려지면 각 픽셀에 적용하여 다음 방정식 세트를 사용하여 결과를 생성 할 수 있습니다.&lt;em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d02b33bcdb59e58d97f9f0dd3b6bd6bee21849ee" translate="yes" xml:space="preserve">
          <source>Using this class, an MBean can be created with any implementation class name</source>
          <target state="translated">이 클래스를 사용하면 모든 구현 클래스 이름으로 MBean을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a808472e5512ec6ec52bb2234c76dc0b1a3686b" translate="yes" xml:space="preserve">
          <source>Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법을 사용하면 테스트를 위해 대체 시계를 사용할 수 있습니다. 대체 클럭은 &lt;a href=&quot;clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt; 사용하여 도입 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5b267006a1cc7bc47256d9163f71b26dbaf18741" translate="yes" xml:space="preserve">
          <source>Using this method hard codes a dependency to the default time-zone into your application. It is recommended to avoid this and use a specific time-zone whenever possible. The &lt;a href=&quot;#systemUTC()&quot;&gt;&lt;code&gt;UTC clock&lt;/code&gt;&lt;/a&gt; should be used when you need the current instant without the date or time.</source>
          <target state="translated">이 방법을 사용하면 기본 시간대에 대한 종속성이 애플리케이션에 하드 코딩됩니다. 이를 피하고 가능하면 특정 시간대를 사용하는 것이 좋습니다. &lt;a href=&quot;#systemUTC()&quot;&gt; &lt;code&gt;UTC clock&lt;/code&gt; &lt;/a&gt; 당신이 날짜 또는 시간없이 현재의 순간을 필요로 할 때 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="b3a4d576735b547cb796fe2ec8f648e82476869f" translate="yes" xml:space="preserve">
          <source>Using this method hard codes a dependency to the default time-zone into your application. It is recommended to avoid this and use a specific time-zone whenever possible. The &lt;a href=&quot;clock#systemUTC--&quot;&gt;&lt;code&gt;UTC clock&lt;/code&gt;&lt;/a&gt; should be used when you need the current instant without the date or time.</source>
          <target state="translated">이 방법을 사용하면 기본 시간대에 대한 종속성을 응용 프로그램에 하드 코딩합니다. 이를 피하고 가능할 때마다 특정 시간대를 사용하는 것이 좋습니다. &lt;a href=&quot;clock#systemUTC--&quot;&gt; &lt;code&gt;UTC clock&lt;/code&gt; &lt;/a&gt; 당신이 날짜 또는 시간없이 현재의 순간을 필요로 할 때 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="31bb653f87c7adcd93896a64f57477f9258c49cf" translate="yes" xml:space="preserve">
          <source>Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.</source>
          <target state="translated">이 방법을 사용하면 시계가 하드 코딩되어 있기 때문에 테스트를 위해 대체 시계를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f6be570ec8df9f33a39b137ee90edbcc72d040b1" translate="yes" xml:space="preserve">
          <source>Using this method will prevent the ability to use an alternate time-source for testing because the clock is effectively hard-coded.</source>
          <target state="translated">이 방법을 사용하면 클럭이 효과적으로 하드 코딩되므로 테스트를 위해 대체 시간 소스를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c5fa35aa83a3e27a4f265dd3dbcf5ef46556b0bc" translate="yes" xml:space="preserve">
          <source>Using transparent bounds, the boundaries of this matcher's region are transparent to lookahead, lookbehind, and boundary matching constructs. Those constructs can see beyond the boundaries of the region to see if a match is appropriate.</source>
          <target state="translated">투명한 경계를 사용하면이 매처 영역의 경계는 미리보기, 뒤쳐보기 및 경계 일치 구문에 투명합니다. 이러한 구성은 해당 영역의 경계를 넘어서서 일치하는 것이 적절한 지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85fd7a48725cb0e3bcc135eaeabf6857e1216532" translate="yes" xml:space="preserve">
          <source>Usually an application that uses a logging framework will log messages through a logger facade defined (or supported) by that framework. Applications that wish to use an external framework should log through the facade associated with that framework.</source>
          <target state="translated">일반적으로 로깅 프레임 워크를 사용하는 애플리케이션은 해당 프레임 워크에서 정의 (또는 지원)하는 로거 파사드를 통해 메시지를 로깅합니다. 외부 프레임 워크를 사용하려는 애플리케이션은 해당 프레임 워크와 관련된 파사드를 통해 로그해야합니다.</target>
        </trans-unit>
        <trans-unit id="49368aa974f1d5119aef1f27de9a331083fb45ca" translate="yes" xml:space="preserve">
          <source>Usually the &lt;code&gt;MBeanInfo&lt;/code&gt; for any given MBean does not change over the lifetime of that MBean. Dynamic MBeans can change their &lt;code&gt;MBeanInfo&lt;/code&gt; and in that case it is recommended that they emit a &lt;a href=&quot;notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;notification#getType()&quot;&gt;type&lt;/a&gt; of &lt;code&gt;
 &quot;jmx.mbean.info.changed&quot;&lt;/code&gt; and a &lt;a href=&quot;notification#getUserData()&quot;&gt;userData&lt;/a&gt; that is the new &lt;code&gt;MBeanInfo&lt;/code&gt;. This is not required, but provides a conventional way for clients of the MBean to discover the change. See also the &lt;a href=&quot;descriptor#immutableInfo&quot;&gt;immutableInfo&lt;/a&gt; and &lt;a href=&quot;descriptor#infoTimeout&quot;&gt;infoTimeout&lt;/a&gt; fields in the &lt;code&gt;
 MBeanInfo&lt;/code&gt;&lt;a href=&quot;descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">일반적으로 주어진 MBean에 대한 &lt;code&gt;MBeanInfo&lt;/code&gt; 는 해당 MBean의 수명 동안 변경되지 않습니다. 동적 MBean는, 그 변경 &lt;code&gt;MBeanInfo&lt;/code&gt; 그 경우 그들이 방출하는 것이 좋습니다 &lt;a href=&quot;notification&quot;&gt; &lt;code&gt;Notification&lt;/code&gt; &lt;/a&gt; A를 &lt;a href=&quot;notification#getType()&quot;&gt;유형&lt;/a&gt; 의 &lt;code&gt; &quot;jmx.mbean.info.changed&quot;&lt;/code&gt; 과 &lt;a href=&quot;notification#getUserData()&quot;&gt;userData에&lt;/a&gt; 새로운이다 &lt;code&gt;MBeanInfo&lt;/code&gt; . 이것은 필수는 아니지만 MBean의 클라이언트가 변경 사항을 발견 할 수있는 일반적인 방법을 제공합니다. &lt;code&gt; MBeanInfo&lt;/code&gt; &lt;a href=&quot;descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;descriptor#immutableInfo&quot;&gt;immutableInfo&lt;/a&gt; 및 &lt;a href=&quot;descriptor#infoTimeout&quot;&gt;infoTimeout&lt;/a&gt; 필드 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f20dec6afa5973f6ff91629936c1d90192d0e756" translate="yes" xml:space="preserve">
          <source>Usually the &lt;code&gt;MBeanInfo&lt;/code&gt; for any given MBean does not change over the lifetime of that MBean. Dynamic MBeans can change their &lt;code&gt;MBeanInfo&lt;/code&gt; and in that case it is recommended that they emit a &lt;a href=&quot;notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;notification#getType--&quot;&gt;type&lt;/a&gt; of &lt;code&gt;&quot;jmx.mbean.info.changed&quot;&lt;/code&gt; and a &lt;a href=&quot;notification#getUserData--&quot;&gt;userData&lt;/a&gt; that is the new &lt;code&gt;MBeanInfo&lt;/code&gt;. This is not required, but provides a conventional way for clients of the MBean to discover the change. See also the &lt;a href=&quot;descriptor#immutableInfo&quot;&gt;immutableInfo&lt;/a&gt; and &lt;a href=&quot;descriptor#infoTimeout&quot;&gt;infoTimeout&lt;/a&gt; fields in the &lt;code&gt;MBeanInfo&lt;/code&gt;&lt;a href=&quot;descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">일반적으로 주어진 MBean에 대한 &lt;code&gt;MBeanInfo&lt;/code&gt; 는 해당 MBean의 수명 동안 변경되지 않습니다. 동적 MBean는, 그 변경 &lt;code&gt;MBeanInfo&lt;/code&gt; 그 경우 그들이 방출하는 것이 좋습니다 &lt;a href=&quot;notification&quot;&gt; &lt;code&gt;Notification&lt;/code&gt; &lt;/a&gt; A를 &lt;a href=&quot;notification#getType--&quot;&gt;유형&lt;/a&gt; 의 &lt;code&gt;&quot;jmx.mbean.info.changed&quot;&lt;/code&gt; 과 &lt;a href=&quot;notification#getUserData--&quot;&gt;userData에&lt;/a&gt; 새로운이다 &lt;code&gt;MBeanInfo&lt;/code&gt; . 이것은 필수는 아니지만 MBean 클라이언트가 변경 사항을 발견 할 수있는 일반적인 방법을 제공합니다. &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;a href=&quot;descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;descriptor#immutableInfo&quot;&gt;immutableInfo&lt;/a&gt; 및 &lt;a href=&quot;descriptor#infoTimeout&quot;&gt;infoTimeout&lt;/a&gt; 필드 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="68f7a180713ce8afdb949d8125a6751d3c88beb9" translate="yes" xml:space="preserve">
          <source>Usually the returned receiver implements the &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; interface.</source>
          <target state="translated">일반적으로 반환 된 수신자는 &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; 인터페이스를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="789cbfd196e194af95ef3eaa77e73aee1e7b80ac" translate="yes" xml:space="preserve">
          <source>Usually the returned receivers implement the &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; interface.</source>
          <target state="translated">일반적으로 반환 된 수신자는 &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; 인터페이스를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="b10eacb0417247e0044aaa6541784c7e9d437b58" translate="yes" xml:space="preserve">
          <source>Usually the returned transmitter implements the &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; interface.</source>
          <target state="translated">일반적으로 반환 된 송신기는 &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; 인터페이스를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="cb55df489e19ba6c63d7efc57af80457bae2b5b8" translate="yes" xml:space="preserve">
          <source>Usually the returned transmitters implement the &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; interface.</source>
          <target state="translated">일반적으로 반환 된 송신기는 &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; 인터페이스를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="18fdc5ee8b1f8fba8dabaa933373c0483ab7fad7" translate="yes" xml:space="preserve">
          <source>Utilities</source>
          <target state="translated">Utilities</target>
        </trans-unit>
        <trans-unit id="a4911d951b010a523017f11a6f4b45a3909cacb1" translate="yes" xml:space="preserve">
          <source>Utilities to assist in the processing of &lt;a href=&quot;../element/package-summary&quot;&gt;program elements&lt;/a&gt; and &lt;a href=&quot;../type/package-summary&quot;&gt;types&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../element/package-summary&quot;&gt;프로그램 요소&lt;/a&gt; 및 &lt;a href=&quot;../type/package-summary&quot;&gt;유형&lt;/a&gt; 처리를 지원하는 유틸리티 .</target>
        </trans-unit>
        <trans-unit id="882ce0fc43a4a5fd7771c00aecc3ba0eae4aba7d" translate="yes" xml:space="preserve">
          <source>Utilities to assist in the processing of &lt;a href=&quot;javax/lang/model/element/package-summary&quot;&gt;program elements&lt;/a&gt; and &lt;a href=&quot;javax/lang/model/type/package-summary&quot;&gt;types&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;javax/lang/model/element/package-summary&quot;&gt;프로그램 요소&lt;/a&gt; 및 &lt;a href=&quot;javax/lang/model/type/package-summary&quot;&gt;유형&lt;/a&gt; 처리를 지원하는 유틸리티 .</target>
        </trans-unit>
        <trans-unit id="02db94e534b83ec7229aaeff4260db775b80b9cc" translate="yes" xml:space="preserve">
          <source>Utility class for HTML form decoding.</source>
          <target state="translated">HTML 양식 디코딩을위한 유틸리티 클래스.</target>
        </trans-unit>
        <trans-unit id="848c4fb8e6852707e9fde48a3c974a3374e7a94b" translate="yes" xml:space="preserve">
          <source>Utility class for HTML form decoding. This class contains static methods for decoding a String from the &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; MIME format.</source>
          <target state="translated">HTML 양식 디코딩을위한 유틸리티 클래스. 이 클래스에는 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; MIME 형식 에서 문자열을 디코딩하기위한 정적 메서드가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af38bffe9fcf259b3eac7b750d631dec758ac335" translate="yes" xml:space="preserve">
          <source>Utility class for HTML form encoding.</source>
          <target state="translated">HTML 양식 인코딩을위한 유틸리티 클래스.</target>
        </trans-unit>
        <trans-unit id="986013cdc6d3bf10c305a2fdd0111a4416bc77fb" translate="yes" xml:space="preserve">
          <source>Utility class for HTML form encoding. This class contains static methods for converting a String to the &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; MIME format. For more information about HTML form encoding, consult the HTML &lt;a href=&quot;http://www.w3.org/TR/html4/&quot;&gt;specification&lt;/a&gt;.</source>
          <target state="translated">HTML 양식 인코딩을위한 유틸리티 클래스. 이 클래스에는 문자열을 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; MIME 형식으로 변환하기위한 정적 메소드가 포함되어 있습니다 . HTML 양식 인코딩에 대한 자세한 내용은 HTML &lt;a href=&quot;http://www.w3.org/TR/html4/&quot;&gt;사양을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3aba945a13d442e425e9e27d6041638c7daf11b0" translate="yes" xml:space="preserve">
          <source>Utility class for assembling &lt;a href=&quot;completion&quot;&gt;&lt;code&gt;Completion&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;completion&quot;&gt; &lt;code&gt;Completion&lt;/code&gt; &lt;/a&gt; 객체 를 조립하기위한 유틸리티 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="1d865e15db3b8159b3d938329b995ff80edbdd3b" translate="yes" xml:space="preserve">
          <source>Utility class to contain basic Datatype values as constants.</source>
          <target state="translated">기본 데이터 유형 값을 상수로 포함하는 유틸리티 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="f91621447cbe274b2181598f956f782ed025195d" translate="yes" xml:space="preserve">
          <source>Utility class to contain basic XML values as constants.</source>
          <target state="translated">기본 XML 값을 상수로 포함하는 유틸리티 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c19cabcb8ecdeecd309eb769b904b564909ae4af" translate="yes" xml:space="preserve">
          <source>Utility classes commonly useful in concurrent programming.</source>
          <target state="translated">동시 프로그래밍에 일반적으로 유용한 유틸리티 클래스.</target>
        </trans-unit>
        <trans-unit id="150201240396f25f2027d06e54168dd5d56c91ac" translate="yes" xml:space="preserve">
          <source>Utility classes commonly useful in concurrent programming. This package includes a few small standardized extensible frameworks, as well as some classes that provide useful functionality and are otherwise tedious or difficult to implement. Here are brief descriptions of the main components. See also the &lt;a href=&quot;locks/package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.locks&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;atomic/package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.atomic&lt;/code&gt;&lt;/a&gt; packages.</source>
          <target state="translated">동시 프로그래밍에 일반적으로 유용한 유틸리티 클래스. 이 패키지에는 몇 가지 작은 확장 가능한 프레임 워크와 유용한 기능을 제공하고 지루하거나 구현하기 어려운 클래스가 포함되어 있습니다. 다음은 주요 구성 요소에 대한 간략한 설명입니다. &lt;a href=&quot;locks/package-summary&quot;&gt; &lt;code&gt;java.util.concurrent.locks&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;atomic/package-summary&quot;&gt; &lt;code&gt;java.util.concurrent.atomic&lt;/code&gt; &lt;/a&gt; 패키지 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="713fba369eb5abb74c18b0fc8ce45e26cb0ec082" translate="yes" xml:space="preserve">
          <source>Utility method to take a string and convert it to normal Java variable name capitalization.</source>
          <target state="translated">문자열을 가져와 일반 Java 변수 이름 대문자로 변환하는 유틸리티 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="e4a20e688682bb57c03b92d2e7bc4b96cf592350" translate="yes" xml:space="preserve">
          <source>Utility method to take a string and convert it to normal Java variable name capitalization. This normally means converting the first character from upper case to lower case, but in the (unusual) special case when there is more than one character and both the first and second characters are upper case, we leave it alone.</source>
          <target state="translated">문자열을 가져 와서 일반적인 Java 변수 이름 대문자로 변환하는 유틸리티 메소드입니다. 이것은 일반적으로 첫 번째 문자를 대문자에서 소문자로 변환하는 것을 의미하지만, (특이하지 않은) 특별한 경우에는 두 개 이상의 문자가 있고 첫 번째 문자와 두 번째 문자가 모두 대문자 인 경우에는 그대로 둡니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
