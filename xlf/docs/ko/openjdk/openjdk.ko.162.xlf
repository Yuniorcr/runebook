<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="240610244ce46db1d65c39b9ece6d3e1892f2aea" translate="yes" xml:space="preserve">
          <source>The effect of this method is identical to that of the &lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt;&lt;code&gt;round(MathContext)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드의 효과는 &lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt; &lt;code&gt;round(MathContext)&lt;/code&gt; &lt;/a&gt; 메소드 의 효과와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b0a1f54a3aa4b4cc5dbf26335398ce36efb240bd" translate="yes" xml:space="preserve">
          <source>The effective host name that derives from the request-host does not domain-match the Domain attribute.</source>
          <target state="translated">요청 호스트에서 파생 된 유효 호스트 이름이 도메인 속성과 도메인 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a83bd2291f19a6ddae8b3a53bf655b9ae7b63b0c" translate="yes" xml:space="preserve">
          <source>The element buffer.</source>
          <target state="translated">요소 버퍼입니다.</target>
        </trans-unit>
        <trans-unit id="2519e1d22b1908a17bffc689d700f08503741193" translate="yes" xml:space="preserve">
          <source>The element corresponding to applet.</source>
          <target state="translated">애플릿에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="940f3dbf59e4aadfda2d7a53e64c991fd3ee38c4" translate="yes" xml:space="preserve">
          <source>The element corresponding to base.</source>
          <target state="translated">base에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="b709042d483063102d4e4045b53d9f4996cde104" translate="yes" xml:space="preserve">
          <source>The element corresponding to body.</source>
          <target state="translated">본문에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="b15960b47f31ee13c1839cfd38531774816b4682" translate="yes" xml:space="preserve">
          <source>The element corresponding to head.</source>
          <target state="translated">head에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="c6a54d7fc0d9962ab28abaa0eae3f7d7e96d8d54" translate="yes" xml:space="preserve">
          <source>The element corresponding to html.</source>
          <target state="translated">html에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="8afe1c4608a367272c195f5d2f28493eb3d4432c" translate="yes" xml:space="preserve">
          <source>The element corresponding to isindex.</source>
          <target state="translated">isindex에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="6dc311d81d016049caa3f7b7865bb9de333389de" translate="yes" xml:space="preserve">
          <source>The element corresponding to meta.</source>
          <target state="translated">메타에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="2520fe9f23d6e682460e9baf1c4818d9c884c3f9" translate="yes" xml:space="preserve">
          <source>The element corresponding to p.</source>
          <target state="translated">p에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="e7f755b9ba7bbee4fa24b0fcbfbdfcddd66840a1" translate="yes" xml:space="preserve">
          <source>The element corresponding to param.</source>
          <target state="translated">param에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="a69b93a0e99a07d5e1e94fc07454698c770c8fc7" translate="yes" xml:space="preserve">
          <source>The element corresponding to pcdata.</source>
          <target state="translated">pcdata에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="4a84ab7c6512ac4102a6eb548089a47fd917fb78" translate="yes" xml:space="preserve">
          <source>The element corresponding to title.</source>
          <target state="translated">제목에 해당하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="7fee7e2ed9716e23ed3e74ff44c29f64137c1752" translate="yes" xml:space="preserve">
          <source>The element created to represent the gap is not resizable.</source>
          <target state="translated">간격을 나타 내기 위해 생성 된 요소는 크기를 조정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ef1287adab0e13a0ff06779eeb94f0a12182a000" translate="yes" xml:space="preserve">
          <source>The element index</source>
          <target state="translated">요소 인덱스</target>
        </trans-unit>
        <trans-unit id="68ee2cf56c8340507a7ae57ff205cc890aa8b080" translate="yes" xml:space="preserve">
          <source>The element is removed from its parent element, as well as the text in the range identified by the element. If the element isn't associated with the document, &lt;code&gt;
 IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">요소가 해당 요소로 식별되는 범위의 텍스트뿐만 아니라 상위 요소에서 제거됩니다. 요소가 문서와 연결되지 않은 경우 &lt;code&gt; IllegalArgumentException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6d402f75cd11159a238cf88939775d164da2aa9b" translate="yes" xml:space="preserve">
          <source>The element layout associated with this sequence layout.</source>
          <target state="translated">이 시퀀스 레이아웃과 연관된 요소 레이아웃입니다.</target>
        </trans-unit>
        <trans-unit id="c5eab0e005a826c44a4d2502eec8455a3005cdea" translate="yes" xml:space="preserve">
          <source>The element node passed to &lt;code&gt;startElement&lt;/code&gt; for filtering will include all of the Element's attributes, but none of the children nodes. The Element may not yet be in place in the document being constructed (it may not have a parent node.)</source>
          <target state="translated">필터링 을 위해 &lt;code&gt;startElement&lt;/code&gt; 에 전달 된 요소 노드 는 요소의 모든 속성을 포함하지만 하위 노드는 포함하지 않습니다. 구성중인 문서에 요소가 아직 없을 수 있습니다 (부모 노드가 없을 수 있음).</target>
        </trans-unit>
        <trans-unit id="be2eac2248b4f5488cdfc2fb01b914b10653fa1c" translate="yes" xml:space="preserve">
          <source>The element that contains the content for the document.</source>
          <target state="translated">문서의 컨텐츠를 포함하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="a7071fa567889db65c6d05ef8f4b641682cab3d4" translate="yes" xml:space="preserve">
          <source>The element that contains the content for the document. In documents with &lt;code&gt;BODY&lt;/code&gt; contents, returns the &lt;code&gt;BODY&lt;/code&gt; element. In frameset documents, this returns the outermost &lt;code&gt;FRAMESET&lt;/code&gt; element.</source>
          <target state="translated">문서의 컨텐츠를 포함하는 요소입니다. &lt;code&gt;BODY&lt;/code&gt; 콘텐츠가있는 문서 에서 &lt;code&gt;BODY&lt;/code&gt; 요소를 반환합니다 . 프레임 셋 문서에서 가장 바깥 쪽 &lt;code&gt;FRAMESET&lt;/code&gt; 요소를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a0e29d3e5bbd6980e4d727c47aaf30d7e1cf71b6" translate="yes" xml:space="preserve">
          <source>The element type</source>
          <target state="translated">요소 유형</target>
        </trans-unit>
        <trans-unit id="65862e6b5052b9e35e765d435b1b6a16eb9764f8" translate="yes" xml:space="preserve">
          <source>The element's advisory title.</source>
          <target state="translated">요소의 권고 제목입니다.</target>
        </trans-unit>
        <trans-unit id="3135015c7d161ce8e2f565eef191fdb69abde9b6" translate="yes" xml:space="preserve">
          <source>The element's advisory title. See the title attribute definition in HTML 4.0.</source>
          <target state="translated">요소의 권고 제목입니다. HTML 4.0의 제목 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="541d70e44338173216d9b9ce711eea8ba8a1bec9" translate="yes" xml:space="preserve">
          <source>The element's identifier.</source>
          <target state="translated">요소의 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="3120eee40026def60678479368912719cf8743a9" translate="yes" xml:space="preserve">
          <source>The element's identifier. See the id attribute definition in HTML 4.0.</source>
          <target state="translated">요소의 식별자입니다. HTML 4.0의 id 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8528845c5c4df26720cbcf625a610c0d09f4d337" translate="yes" xml:space="preserve">
          <source>The elements in the returned array are not sorted and are not in any particular order.</source>
          <target state="translated">반환 된 배열의 요소는 정렬되지 않으며 특정 순서가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="4747e5a9fa1beb70aa3841d35d6509a1676789ff" translate="yes" xml:space="preserve">
          <source>The elements of the returned iterator are the &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStores&lt;/code&gt;&lt;/a&gt; for this file system. The order of the elements is not defined and the file stores may change during the lifetime of the Java virtual machine. When an I/O error occurs, perhaps because a file store is not accessible, then it is not returned by the iterator.</source>
          <target state="translated">리턴 된 반복자의 요소는 이 파일 시스템의 파일 &lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStores&lt;/code&gt; &lt;/a&gt; 입니다. 요소의 순서는 정의되어 있지 않으며 파일 저장소는 Java 가상 머신의 수명 동안 변경 될 수 있습니다. 파일 저장소에 액세스 할 수 없기 때문에 I / O 오류가 발생하면 반복자에 의해 리턴되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f2a5c8fedf95db842d1e9b72c4be4ce32e900dce" translate="yes" xml:space="preserve">
          <source>The elements of the stream are &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; objects that are obtained as if by &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;. Some file systems maintain special links to the directory itself and the directory's parent directory. Entries representing these links are not included.</source>
          <target state="translated">스트림의 요소 는 디렉토리 항목의 이름을 &lt;code&gt;dir&lt;/code&gt; 에 대해 &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 하여 얻은 것처럼 얻은 &lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 객체입니다 . 일부 파일 시스템은 디렉토리 자체와 디렉토리의 상위 디렉토리에 대한 특수 링크를 유지합니다. 이러한 링크를 나타내는 항목은 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a60448268f4f78f386f7f84f2c5f1a05d7a5a619" translate="yes" xml:space="preserve">
          <source>The elements of the stream are &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; objects that are obtained as if by &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;. Some file systems maintain special links to the directory itself and the directory's parent directory. Entries representing these links are not included.</source>
          <target state="translated">스트림의 요소는 &lt;code&gt;dir&lt;/code&gt; 에 대한 디렉토리 항목 이름을 &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 하여 얻은 것처럼 &lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 객체입니다 . 일부 파일 시스템은 디렉토리 자체와 디렉토리의 상위 디렉토리에 대한 특수 링크를 유지합니다. 이러한 링크를 나타내는 항목은 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fbc2ae2f21b51f8bf47adefd8539ccb40f888682" translate="yes" xml:space="preserve">
          <source>The elements returned by the iterator are in no specific order. Some file systems maintain special links to the directory itself and the directory's parent directory. Entries representing these links are not returned by the iterator.</source>
          <target state="translated">반복자가 반환 한 요소는 특정 순서가 아닙니다. 일부 파일 시스템은 디렉토리 자체와 디렉토리의 상위 디렉토리에 대한 특수 링크를 유지합니다. 이 링크를 나타내는 항목은 반복자가 리턴하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c5245362c3e765b467877703d73efa2747ce4f12" translate="yes" xml:space="preserve">
          <source>The eliding of side-effects may also be surprising. With the exception of terminal operations &lt;a href=&quot;stream#forEach(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stream#forEachOrdered(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEachOrdered&lt;/code&gt;&lt;/a&gt;, side-effects of behavioral parameters may not always be executed when the stream implementation can optimize away the execution of behavioral parameters without affecting the result of the computation. (For a specific example see the API note documented on the &lt;a href=&quot;stream#count()&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; operation.)</source>
          <target state="translated">부작용을 제거하는 것도 놀랍습니다. &lt;a href=&quot;stream#forEach(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEach&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;stream#forEachOrdered(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEachOrdered&lt;/code&gt; &lt;/a&gt; 터미널 작업을 제외하고 , 스트림 구현이 계산 결과에 영향을주지 않고 동작 매개 변수의 실행을 최적화 할 수있을 때 동작 매개 변수의 부작용이 항상 실행되는 것은 아닙니다. (구체적인 예는 &lt;a href=&quot;stream#count()&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; 작업 에 대한 API 참고 사항을 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="f9ef353251d48288ffd3652f1f37c47124f1b9d2" translate="yes" xml:space="preserve">
          <source>The embedded code constructs &lt;code&gt;(?{&lt;/code&gt;</source>
          <target state="translated">임베디드 코드는 &lt;code&gt;(?{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0c2d1ad066e6739f583f355da9a4f5e3e8c69ad" translate="yes" xml:space="preserve">
          <source>The embedded comment syntax &lt;code&gt;(?#comment)&lt;/code&gt;, and</source>
          <target state="translated">포함 된 주석 구문 &lt;code&gt;(?#comment)&lt;/code&gt; 및</target>
        </trans-unit>
        <trans-unit id="2ac9f6f69ec96dbd7449b245c030db25a6bac57e" translate="yes" xml:space="preserve">
          <source>The embedded exception, or null if there is none.</source>
          <target state="translated">포함 된 예외 또는없는 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="6a88bf55348203ef6e9f6286a971b3e85a1f2f13" translate="yes" xml:space="preserve">
          <source>The emitted notification.</source>
          <target state="translated">생성 된 알림.</target>
        </trans-unit>
        <trans-unit id="cd73f61ba2f2a8d8e35835869b36bea5b5d6c871" translate="yes" xml:space="preserve">
          <source>The empty (default) prefix will be included in this enumeration; note that this behaviour differs from that of &lt;a href=&quot;#getPrefix(java.lang.String)&quot;&gt;&lt;code&gt;getPrefix(java.lang.String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getPrefixes()&quot;&gt;&lt;code&gt;getPrefixes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">빈 (기본값) 접두사가이 열거에 포함됩니다. 이 동작은 &lt;a href=&quot;#getPrefix(java.lang.String)&quot;&gt; &lt;code&gt;getPrefix(java.lang.String)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getPrefixes()&quot;&gt; &lt;code&gt;getPrefixes()&lt;/code&gt; &lt;/a&gt; 의 동작과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="6fac00ff3e5dd709823e6827990f282ac187b12b" translate="yes" xml:space="preserve">
          <source>The empty configuration</source>
          <target state="translated">빈 구성</target>
        </trans-unit>
        <trans-unit id="0d8c137901195921a3c750b93c7e832048c4f6c6" translate="yes" xml:space="preserve">
          <source>The empty layer</source>
          <target state="translated">빈 레이어</target>
        </trans-unit>
        <trans-unit id="86b78069639432e85ebb753167970567fe288386" translate="yes" xml:space="preserve">
          <source>The empty list (immutable).</source>
          <target state="translated">빈 목록 (불변).</target>
        </trans-unit>
        <trans-unit id="0cb0b0d6ef2409e36ed9fe34e19950b0163a49d3" translate="yes" xml:space="preserve">
          <source>The empty list (immutable). This list is serializable.</source>
          <target state="translated">빈리스트 (불변) 이 목록은 직렬화 가능합니다.</target>
        </trans-unit>
        <trans-unit id="c62c60011920396412118a2dcae4cc60975b530e" translate="yes" xml:space="preserve">
          <source>The empty map (immutable).</source>
          <target state="translated">빈지도 (불변).</target>
        </trans-unit>
        <trans-unit id="88137698e00d8f0652a82fe6508b16749429979f" translate="yes" xml:space="preserve">
          <source>The empty map (immutable). This map is serializable.</source>
          <target state="translated">빈 맵 (불변). 이 맵은 직렬화 가능합니다.</target>
        </trans-unit>
        <trans-unit id="dd6618e9e18428a488fdb1a7a601d5c01961fd42" translate="yes" xml:space="preserve">
          <source>The empty set (immutable).</source>
          <target state="translated">빈 세트 (불변).</target>
        </trans-unit>
        <trans-unit id="180ebf25843521d97d4f2d04fea45f85b9208bbe" translate="yes" xml:space="preserve">
          <source>The empty set (immutable). This set is serializable.</source>
          <target state="translated">빈 세트 (불변). 이 세트는 직렬화 가능합니다.</target>
        </trans-unit>
        <trans-unit id="aab0ce820465533937604e4176265722b31887ea" translate="yes" xml:space="preserve">
          <source>The empty spliterator reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;. Calls to &lt;a href=&quot;spliterator#trySplit()&quot;&gt;&lt;code&gt;Spliterator.trySplit()&lt;/code&gt;&lt;/a&gt; always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">빈 spliterator 보고서 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; 을&lt;/a&gt; . &lt;a href=&quot;spliterator#trySplit()&quot;&gt; &lt;code&gt;Spliterator.trySplit()&lt;/code&gt; &lt;/a&gt; 호출은 항상 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="04710e8ea7ef328080b66f61a16fa7d06fca71ab" translate="yes" xml:space="preserve">
          <source>The empty spliterator reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;. Calls to &lt;a href=&quot;spliterator#trySplit--&quot;&gt;&lt;code&gt;Spliterator.trySplit()&lt;/code&gt;&lt;/a&gt; always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">빈 spliterator 보고서 &lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; 을&lt;/a&gt; . &lt;a href=&quot;spliterator#trySplit--&quot;&gt; &lt;code&gt;Spliterator.trySplit()&lt;/code&gt; &lt;/a&gt; 호출은 항상 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1d039a5d9f2e66523b58ada74e51fb8c6246d746" translate="yes" xml:space="preserve">
          <source>The enabled/disabled state of the functionality. Instead of having to separately disable the menu item and the toolbar button, the application can disable the function that implements this interface. All components which are registered as listeners for the state change then know to disable event generation for that item and to modify the display accordingly.</source>
          <target state="translated">기능의 활성화 / 비활성화 상태입니다. 메뉴 항목과 도구 모음 버튼을 개별적으로 비활성화하는 대신 응용 프로그램은이 인터페이스를 구현하는 기능을 비활성화 할 수 있습니다. 상태 변경에 대한 리스너로 등록 된 모든 구성 요소는 해당 항목에 대한 이벤트 생성을 비활성화하고 그에 따라 디스플레이를 수정하는 것을 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c432a9e10bc929fcac65f48c8ec49c62fe540ca" translate="yes" xml:space="preserve">
          <source>The encapsulated &lt;code&gt;Transferable&lt;/code&gt; object.</source>
          <target state="translated">캡슐화 된 &lt;code&gt;Transferable&lt;/code&gt; 개체입니다.</target>
        </trans-unit>
        <trans-unit id="6ec432977679b8c4ab400647f6119da604c9cebb" translate="yes" xml:space="preserve">
          <source>The encapsulated exception, or null if there is none.</source>
          <target state="translated">캡슐화 된 예외 또는없는 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="a4258855a05f3c4988c5d23737a7b0335e728c12" translate="yes" xml:space="preserve">
          <source>The encapsulated object is unsealed (using the given Cipher, assuming that the Cipher is already properly initialized) and de-serialized, before it is returned.</source>
          <target state="translated">캡슐화 된 객체는 봉인되지 않은 상태로 (암호가 이미 올바르게 초기화되었다고 가정하여 주어진 암호를 사용하여) 직렬화 해제되어 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4cab56e097451f176a982ee92d2d74b62d281b8b" translate="yes" xml:space="preserve">
          <source>The encapsulated object is unsealed and de-serialized, before it is returned.</source>
          <target state="translated">캡슐화 된 객체는 반환되기 전에 봉인 해제되고 역 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="c717ea61ef4986b72624cfc5093e3af1180fcd4d" translate="yes" xml:space="preserve">
          <source>The encoded representation is &lt;code&gt;null&lt;/code&gt; if and only if the MIME type &lt;code&gt;String&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">인코딩 된 표현은 &lt;code&gt;null&lt;/code&gt; 만 MIME 타입 경우 경우 &lt;code&gt;String&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12867f82c9bd7777148afd28c5873c849dbc0d0d" translate="yes" xml:space="preserve">
          <source>The encoded representation is &lt;code&gt;null&lt;/code&gt; if and only if the specified &lt;code&gt;DataFlavor&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or its MIME type &lt;code&gt;String&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">부호화 된 표현이다 &lt;code&gt;null&lt;/code&gt; 지정된 경우에만, &lt;code&gt;DataFlavor&lt;/code&gt; 가 있다 &lt;code&gt;null&lt;/code&gt; 이나 MIME 타입 &lt;code&gt;String&lt;/code&gt; 인 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92c290d3d9692fd83e1c4ddfbceb045df9e846dc" translate="yes" xml:space="preserve">
          <source>The encoded representations for two non-&lt;code&gt;null&lt;/code&gt; MIME type &lt;code&gt;String&lt;/code&gt;s are equal if and only if these &lt;code&gt;String&lt;/code&gt;s are equal according to &lt;code&gt;String.equals(Object)&lt;/code&gt;</source>
          <target state="translated">두 개의 &lt;code&gt;null&lt;/code&gt; 이 아닌 MIME 유형 &lt;code&gt;String&lt;/code&gt; 에 대한 인코딩 된 표현은 이러한 &lt;code&gt;String&lt;/code&gt; 이 &lt;code&gt;String.equals(Object)&lt;/code&gt; 에 따라 동일한 경우에만 동일합니다.</target>
        </trans-unit>
        <trans-unit id="dbd33f379a5eee5c81ca53b9290cd4a34ef73872" translate="yes" xml:space="preserve">
          <source>The encoded representations for two non-&lt;code&gt;null&lt;/code&gt;&lt;code&gt;DataFlavor&lt;/code&gt;s with non-&lt;code&gt;null&lt;/code&gt; MIME type &lt;code&gt;String&lt;/code&gt;s are equal if and only if the MIME type &lt;code&gt;String&lt;/code&gt;s of these &lt;code&gt;DataFlavor&lt;/code&gt;s are equal according to &lt;code&gt;String.equals(Object)&lt;/code&gt;</source>
          <target state="translated">위한 인코딩 표현 개의 비 - &lt;code&gt;null&lt;/code&gt; &lt;code&gt;DataFlavor&lt;/code&gt; S 비와 &lt;code&gt;null&lt;/code&gt; MIME 타입의 &lt;code&gt;String&lt;/code&gt; 들있는 동일한 경우에만 MIME 타입의 경우 &lt;code&gt;String&lt;/code&gt; 의 이들 &lt;code&gt;DataFlavor&lt;/code&gt; 에있어서 동일하다 S &lt;code&gt;String.equals(Object)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="915d6895db9b6046e66af04d83ee0ef935f24da9" translate="yes" xml:space="preserve">
          <source>The encoding information used in this &lt;code&gt;@charset&lt;/code&gt; rule.</source>
          <target state="translated">이 &lt;code&gt;@charset&lt;/code&gt; 규칙에 사용 된 인코딩 정보 입니다.</target>
        </trans-unit>
        <trans-unit id="199c2a38ff6aa6fabd32c8a3c9f3caf0eb39b53e" translate="yes" xml:space="preserve">
          <source>The encoding input P whose value equals byte[0].</source>
          <target state="translated">값이 byte [0]과 같은 인코딩 입력 P</target>
        </trans-unit>
        <trans-unit id="866e1ec28413dca3ae1e71d9b54008e333dbcfd0" translate="yes" xml:space="preserve">
          <source>The encoding must be a string acceptable for an XML encoding declaration (see section 4.3.3 of the XML 1.0 recommendation).</source>
          <target state="translated">인코딩은 XML 인코딩 선언에 허용되는 문자열이어야합니다 (XML 1.0 권장 사항의 섹션 4.3.3 참조).</target>
        </trans-unit>
        <trans-unit id="cfbc32ba92aba58363c14e07072f16236de40055" translate="yes" xml:space="preserve">
          <source>The encoding name. May be null, which indicates the default encoding should be used.</source>
          <target state="translated">인코딩 이름 기본 인코딩을 사용해야 함을 나타내는 null 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e05ebaa86b65502750822b548c59b7f59f18d9d5" translate="yes" xml:space="preserve">
          <source>The encoding scheme of this encoder instance is unaffected by this invocation. The returned encoder instance should be used for non-padding encoding operation.</source>
          <target state="translated">이 인코더 인스턴스의 인코딩 체계는이 호출의 영향을받지 않습니다. 리턴 된 인코더 인스턴스는 비 패딩 인코딩 조작에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="00a91fa3e606aaba9d4e25afa9d2cef72d5fc178" translate="yes" xml:space="preserve">
          <source>The encoding should be set before any &lt;code&gt;LogRecords&lt;/code&gt; are written to the &lt;code&gt;Handler&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LogRecords&lt;/code&gt; 가 &lt;code&gt;Handler&lt;/code&gt; 에 쓰여 지기 전에 인코딩을 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5b190dbd3c0542516c30fbdf092dfc2c5e09f344" translate="yes" xml:space="preserve">
          <source>The encoding, or null if none was supplied.</source>
          <target state="translated">인코딩 또는 제공되지 않은 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="60091846e46c40257fd7a742d4619bbc19aa8175" translate="yes" xml:space="preserve">
          <source>The end argument must be greater than or equal to &lt;code&gt;start&lt;/code&gt;, and less than or equal to the length of s.</source>
          <target state="translated">end 인수는 &lt;code&gt;start&lt;/code&gt; 보다 크거나 같아야하고 s의 길이보다 작거나 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="bf46fea03f0ce50879440b927adbb4563eb3af22" translate="yes" xml:space="preserve">
          <source>The end index of the text sequence.</source>
          <target state="translated">텍스트 시퀀스의 끝 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="711a09ed66a073766bca3e7b6ef36bcbe9e2bcfa" translate="yes" xml:space="preserve">
          <source>The end of a line</source>
          <target state="translated">줄의 끝</target>
        </trans-unit>
        <trans-unit id="2b7cb3f2f726e71310a51789affbad5826f447fa" translate="yes" xml:space="preserve">
          <source>The end of the input</source>
          <target state="translated">입력의 끝</target>
        </trans-unit>
        <trans-unit id="83ac7dbc36de6be08d58b4bbfe9e0a56933b8da8" translate="yes" xml:space="preserve">
          <source>The end of the input but for the final &lt;a href=&quot;#lt&quot;&gt;terminator&lt;/a&gt;, if any</source>
          <target state="translated">입력의 끝이지만 최종 &lt;a href=&quot;#lt&quot;&gt;터미네이터&lt;/a&gt; (있는 경우)</target>
        </trans-unit>
        <trans-unit id="ef4414b7c806493fb5d10ea630e15048e7a0b572" translate="yes" xml:space="preserve">
          <source>The end of the previous match</source>
          <target state="translated">이전 경기의 끝</target>
        </trans-unit>
        <trans-unit id="c47f244b8cfe5bd206e59f479bae4fee02f7dd8a" translate="yes" xml:space="preserve">
          <source>The end time must be set before starting the stream.</source>
          <target state="translated">스트림을 시작하기 전에 종료 시간을 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="6c7e56efe7ee716d847eb7e48baf1454323b7b72" translate="yes" xml:space="preserve">
          <source>The end-of-line sequence of characters to be used in the XML being written out.</source>
          <target state="translated">작성되는 XML에서 사용할 줄 끝 문자 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="f5874801e6c5636cae932aeda15c85b797d5bab2" translate="yes" xml:space="preserve">
          <source>The end-of-line sequence of characters to be used in the XML being written out. Any string is supported, but XML treats only a certain set of characters sequence as end-of-line (See section 2.11, &quot;End-of-Line Handling&quot; in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;], if the serialized content is XML 1.0 or section 2.11, &quot;End-of-Line Handling&quot; in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml11-20040204/&quot;&gt;XML 1.1&lt;/a&gt;], if the serialized content is XML 1.1). Using other character sequences than the recommended ones can result in a document that is either not serializable or not well-formed).</source>
          <target state="translated">작성되는 XML에서 사용할 줄 끝 문자 시퀀스입니다. 모든 문자열이 지원되지만 XML은 특정 문자 시퀀스 만 줄 끝으로 처리 합니다 (직렬화 된 내용이 XML 1.0 또는 섹션 2.11 인 경우 [ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt; ]의 섹션 2.11, &quot;줄 끝 처리&quot; 참조). , 직렬화 된 컨텐츠가 XML 1.1 인 경우 [ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml11-20040204/&quot;&gt;XML 1.1&lt;/a&gt; ] 의 &quot;End-of-Line Handling&quot; ). 권장되는 문자 시퀀스 이외의 다른 문자 시퀀스를 사용하면 문서가 직렬화되지 않거나 형식이 올바르지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff660017144ecccbcb99248c7346ec1435ba7f12" translate="yes" xml:space="preserve">
          <source>The end-of-line sequence of characters to be used in the XML being written out. Any string is supported, but XML treats only a certain set of characters sequence as end-of-line (See section 2.11, &quot;End-of-Line Handling&quot; in [&lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;], if the serialized content is XML 1.0 or section 2.11, &quot;End-of-Line Handling&quot; in [&lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml11-20040204/&quot;&gt;XML 1.1&lt;/a&gt;], if the serialized content is XML 1.1). Using other character sequences than the recommended ones can result in a document that is either not serializable or not well-formed).</source>
          <target state="translated">작성되는 XML에서 사용할 줄 끝 문자 시퀀스입니다. 모든 문자열이 지원되지만 XML은 특정 문자 시퀀스 만 줄 끝으로 처리 합니다 (직렬화 된 내용이 XML 1.0 또는 섹션 2.11 인 경우 [ &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt; ]의 섹션 2.11, &quot;줄 끝 처리&quot; 참조). , 직렬화 된 컨텐츠가 XML 1.1 인 경우 [ &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml11-20040204/&quot;&gt;XML 1.1&lt;/a&gt; ] 의 &quot;End-of-Line Handling&quot; ). 권장되는 문자 시퀀스 이외의 다른 문자 시퀀스를 사용하면 문서가 직렬화되지 않거나 형식이 올바르지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8cee6a32786cc3670324944910a406a959bb6ac" translate="yes" xml:space="preserve">
          <source>The enforcement of argument correctness means that the retrieved set of recorded values obtained from a &lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; source instance may not be a legal set of arguments for this constructor due to arithmetic overflow of the source's recorded count of values. The consistent argument conditions are not sufficient to prevent the creation of an internally inconsistent instance. An example of such a state would be an instance with: &lt;code&gt;count&lt;/code&gt; = 2, &lt;code&gt;min&lt;/code&gt; = 1, &lt;code&gt;max&lt;/code&gt; = 2, and &lt;code&gt;sum&lt;/code&gt; = 0.</source>
          <target state="translated">인수 정확성의 적용은 &lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; 소스 인스턴스 에서 가져온 기록 된 값의 검색된 집합 이 소스의 기록 된 값 수의 산술 오버플로로 인해이 생성자에 대해 유효한 인수 집합이 아닐 수 있음을 의미합니다. 일관된 인수 조건은 내부적으로 일관되지 않은 인스턴스 생성을 방지하기에 충분하지 않습니다. 이러한 상태의 예는 &lt;code&gt;count&lt;/code&gt; = 2, &lt;code&gt;min&lt;/code&gt; = 1, &lt;code&gt;max&lt;/code&gt; = 2 및 &lt;code&gt;sum&lt;/code&gt; = 0 인 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="c606e16f292233b1e474bd07704d84ec483f395a" translate="yes" xml:space="preserve">
          <source>The enforcement of argument correctness means that the retrieved set of recorded values obtained from a &lt;code&gt;IntSummaryStatistics&lt;/code&gt; source instance may not be a legal set of arguments for this constructor due to arithmetic overflow of the source's recorded count of values. The consistent argument conditions are not sufficient to prevent the creation of an internally inconsistent instance. An example of such a state would be an instance with: &lt;code&gt;count&lt;/code&gt; = 2, &lt;code&gt;min&lt;/code&gt; = 1, &lt;code&gt;max&lt;/code&gt; = 2, and &lt;code&gt;sum&lt;/code&gt; = 0.</source>
          <target state="translated">인수 정확성의 적용은 &lt;code&gt;IntSummaryStatistics&lt;/code&gt; 소스 인스턴스 에서 가져온 기록 된 값의 검색된 집합 이 소스의 기록 된 값 수의 산술 오버플로로 인해이 생성자에 대한 유효한 인수 집합이 아닐 수 있음을 의미합니다. 일관된 인수 조건은 내부적으로 일관되지 않은 인스턴스 생성을 방지하기에 충분하지 않습니다. 이러한 상태의 예는 &lt;code&gt;count&lt;/code&gt; = 2, &lt;code&gt;min&lt;/code&gt; = 1, &lt;code&gt;max&lt;/code&gt; = 2 및 &lt;code&gt;sum&lt;/code&gt; = 0 인 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="2d39c09a2e8244ac39cb65479a835cbdcf160d57" translate="yes" xml:space="preserve">
          <source>The enforcement of argument correctness means that the retrieved set of recorded values obtained from a &lt;code&gt;LongSummaryStatistics&lt;/code&gt; source instance may not be a legal set of arguments for this constructor due to arithmetic overflow of the source's recorded count of values. The consistent argument conditions are not sufficient to prevent the creation of an internally inconsistent instance. An example of such a state would be an instance with: &lt;code&gt;count&lt;/code&gt; = 2, &lt;code&gt;min&lt;/code&gt; = 1, &lt;code&gt;max&lt;/code&gt; = 2, and &lt;code&gt;sum&lt;/code&gt; = 0.</source>
          <target state="translated">인수 정확성의 적용은 &lt;code&gt;LongSummaryStatistics&lt;/code&gt; 소스 인스턴스 에서 가져온 기록 된 값의 검색된 집합 이 소스의 기록 된 값 수의 산술 오버플로로 인해이 생성자에 대해 유효한 인수 집합이 아닐 수 있음을 의미합니다. 일관된 인수 조건은 내부적으로 일관되지 않은 인스턴스 생성을 방지하기에 충분하지 않습니다. 이러한 상태의 예는 &lt;code&gt;count&lt;/code&gt; = 2, &lt;code&gt;min&lt;/code&gt; = 1, &lt;code&gt;max&lt;/code&gt; = 2 및 &lt;code&gt;sum&lt;/code&gt; = 0 인 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="4fcef1061367fe496df98fb6e285795bde375b7d" translate="yes" xml:space="preserve">
          <source>The engine to handle scripts with this extension. Returns &lt;code&gt;null&lt;/code&gt; if not found.</source>
          <target state="translated">이 확장으로 스크립트를 처리하는 엔진입니다. 찾을 수 없으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c8026a80c8952092d49eb36b05845480d8dbedd6" translate="yes" xml:space="preserve">
          <source>The engine to handle scripts with this mime type. Returns &lt;code&gt;null&lt;/code&gt; if not found.</source>
          <target state="translated">이 MIME 유형으로 스크립트를 처리하는 엔진입니다. 찾을 수 없으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b5d9018d772f1115a9de50a7ae9129bb12d2e335" translate="yes" xml:space="preserve">
          <source>The entire name is converted to lower case using &lt;code&gt;String.toLowerCase(Locale.US)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String.toLowerCase(Locale.US)&lt;/code&gt; 사용하여 전체 이름이 소문자로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="276a2e35ec48a4b15619c06e947a59549e48ad49" translate="yes" xml:space="preserve">
          <source>The entire name is converted to upper case using &lt;code&gt;String.toUpperCase(Locale.US)&lt;/code&gt;</source>
          <target state="translated">전체 이름은 &lt;code&gt;String.toUpperCase(Locale.US)&lt;/code&gt; 사용하여 대문자 로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="cf2cf0cb7e58f2504fba1a3138d73c6049b494a8" translate="yes" xml:space="preserve">
          <source>The entire state of the object is compared.</source>
          <target state="translated">객체의 전체 상태가 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="02495081407ad5f1e8ae7f9b69d8c32662b479c8" translate="yes" xml:space="preserve">
          <source>The entity's name</source>
          <target state="translated">법인의 이름</target>
        </trans-unit>
        <trans-unit id="99f640bd2d4699e8124e99b2dab4320d559a8e61" translate="yes" xml:space="preserve">
          <source>The entity's public identifier, or null if none was given</source>
          <target state="translated">엔티티의 공용 식별자 또는 제공되지 않은 경우 null</target>
        </trans-unit>
        <trans-unit id="5fa432b053c3ddb33759dbc8f113eb9ecd1017aa" translate="yes" xml:space="preserve">
          <source>The entity's system identifier.</source>
          <target state="translated">엔티티의 시스템 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="e8b926cce7987109ea3dc5973aa6b643aeb89012" translate="yes" xml:space="preserve">
          <source>The entry point of the doclet.</source>
          <target state="translated">doclet의 진입 점입니다.</target>
        </trans-unit>
        <trans-unit id="63ecfe7ac1c8b1b60ad4b928fb9036047abfcaa0" translate="yes" xml:space="preserve">
          <source>The entry point of the doclet. Further processing will commence as instructed by this method.</source>
          <target state="translated">doclet의 진입 점입니다. 이 방법의 지시에 따라 추가 처리가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="47c0130f063f1660f8c0d872244fda8cbf918c22" translate="yes" xml:space="preserve">
          <source>The entry that was removed.</source>
          <target state="translated">제거 된 항목입니다.</target>
        </trans-unit>
        <trans-unit id="24ed1ad9a30ff55b0b4b2ee5dac0d716d19f6f9b" translate="yes" xml:space="preserve">
          <source>The entrySet returned from a &lt;code&gt;RenderingHints&lt;/code&gt; object is not modifiable.</source>
          <target state="translated">&lt;code&gt;RenderingHints&lt;/code&gt; 개체 에서 반환 된 entrySet 은 수정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f47478516478638d15798cd13d73e1f50e6e86d6" translate="yes" xml:space="preserve">
          <source>The enum-based ranges are a super set of the bit mask-based ones.</source>
          <target state="translated">열거 형 기반 범위는 비트 마스크 기반 범위의 상위 집합입니다.</target>
        </trans-unit>
        <trans-unit id="18f0442bd8b0a54d4c0285c94f5620f08066be05" translate="yes" xml:space="preserve">
          <source>The enumeration class &lt;code&gt;java.nio.ByteOrder&lt;/code&gt; is used to specify the byte order. A value of &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; specifies so-called big-endian or network byte order, in which the high-order byte comes first. Motorola and Sparc processors store data in this format, while Intel processors store data in the reverse &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; order.</source>
          <target state="translated">열거 클래스 &lt;code&gt;java.nio.ByteOrder&lt;/code&gt; 는 바이트 순서를 지정하는 데 사용됩니다. &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; 의 값은 소위 빅 엔디안 또는 네트워크 바이트 순서를 지정하며, 상위 바이트가 우선합니다. Motorola 및 Sparc 프로세서는이 형식으로 데이터를 저장하지만 Intel 프로세서는 역 &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; 순서로 데이터를 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="93a83d4b2463802ed63b71007b3d2a201c1657a1" translate="yes" xml:space="preserve">
          <source>The enumeration singleton value stored at index</source>
          <target state="translated">인덱스에 저장된 열거 형 싱글 톤 값</target>
        </trans-unit>
        <trans-unit id="447fe37c6bb84b1b519d70e69f405d19fe3bb27a" translate="yes" xml:space="preserve">
          <source>The envelope input tray in the printer.</source>
          <target state="translated">프린터의 봉투 입력 용지함.</target>
        </trans-unit>
        <trans-unit id="2812b194ea7bc99714514b3dd40839ac66432f4a" translate="yes" xml:space="preserve">
          <source>The environment associated with this InitialContext.</source>
          <target state="translated">이 InitialContext와 연관된 환경입니다.</target>
        </trans-unit>
        <trans-unit id="7320b1d90fa4d701e7a16f43a233c4390cf54ae6" translate="yes" xml:space="preserve">
          <source>The environment associated with this InitialContext. It is initialized to null and is updated by the constructor that accepts an environment or by the &lt;code&gt;init()&lt;/code&gt; method.</source>
          <target state="translated">이 InitialContext에 관련한 환경입니다. null로 초기화되고 환경을 허용하는 생성자 또는 &lt;code&gt;init()&lt;/code&gt; 메소드에 의해 업데이트됩니다 .</target>
        </trans-unit>
        <trans-unit id="a209249a1bb001079ff30fe84944238386409855" translate="yes" xml:space="preserve">
          <source>The environment is inherited from the parent context as context methods proceed from one context to the next. Changes to the environment of one context do not directly affect those of other contexts.</source>
          <target state="translated">하나의 컨텍스트에서 다음 컨텍스트로 컨텍스트 메소드가 진행됨에 따라 환경은 상위 컨텍스트에서 상속됩니다. 한 컨텍스트의 환경에 대한 변경은 다른 컨텍스트의 환경에 직접적인 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2a7ae3b87859dfdfc8f90b77c7dc529516229077" translate="yes" xml:space="preserve">
          <source>The environment may be used to access utility classes for &lt;a href=&quot;../../../../java.compiler/javax/lang/model/util/elements&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../../java.compiler/javax/lang/model/util/types&quot;&gt;&lt;code&gt;types&lt;/code&gt;&lt;/a&gt; if needed.</source>
          <target state="translated">환경은 필요한 경우 &lt;a href=&quot;../../../../java.compiler/javax/lang/model/util/elements&quot;&gt; &lt;code&gt;elements&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../../../java.compiler/javax/lang/model/util/types&quot;&gt; &lt;code&gt;types&lt;/code&gt; &lt;/a&gt; 에 대한 유틸리티 클래스에 액세스하는 데 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f9dee9225753fc6b669ebb73bdd54e1d209d99ca" translate="yes" xml:space="preserve">
          <source>The environment of the context being operated on.</source>
          <target state="translated">컨텍스트의 환경이 운영되고 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef8a562764f2b68aa9e4e0b27ff74e8ea33e36dd" translate="yes" xml:space="preserve">
          <source>The environment parameter is owned by the caller. The implementation will not modify the object or keep a reference to it, although it may keep a reference to a clone or copy.</source>
          <target state="translated">환경 매개 변수는 호출자가 소유합니다. 구현은 객체를 수정하거나 참조를 유지하지 않지만 복제 또는 복사에 대한 참조를 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73513013d840568497d96e281a5e7d4e7a8991b6" translate="yes" xml:space="preserve">
          <source>The environment variable that stores a keystore password. Alternatively, passwords may be supplied to the constructor method in a &lt;code&gt;Map&amp;lt;String, ProtectionParameter&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">키 저장소 비밀번호를 저장하는 환경 변수입니다. 또는 비밀번호가 &lt;code&gt;Map&amp;lt;String, ProtectionParameter&amp;gt;&lt;/code&gt; 의 생성자 메소드에 제공 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b61120168558233e16a6b0f8ec1f8c14f9f7256b" translate="yes" xml:space="preserve">
          <source>The eon of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;. The value returned is an integer multiple of 10^9.</source>
          <target state="translated">이 &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 의 영원 . 반환 된 값은 10 ^ 9의 정수배입니다.</target>
        </trans-unit>
        <trans-unit id="57999414d5724d1cf04f9e4820e57cd11a0935b4" translate="yes" xml:space="preserve">
          <source>The epoch second count is a simple incrementing count of seconds where second 0 is 1970-01-01T00:00:00Z. The nanosecond part is returned by &lt;a href=&quot;#getNano()&quot;&gt;&lt;code&gt;getNano()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">epoch 초 카운트는 초의 단순 증가 카운트이며 초 0은 1970-01-01T00 : 00 : 00Z입니다. 나노초 부분은 &lt;a href=&quot;#getNano()&quot;&gt; &lt;code&gt;getNano()&lt;/code&gt; &lt;/a&gt; 의해 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="451d2b13281af07c21676b10d78a114a9213b989" translate="yes" xml:space="preserve">
          <source>The epoch second count is a simple incrementing count of seconds where second 0 is 1970-01-01T00:00:00Z. The nanosecond part of the day is returned by &lt;code&gt;getNanosOfSecond&lt;/code&gt;.</source>
          <target state="translated">에포크 초 카운트는 초 0이 1970-01-01T00 : 00 : 00Z 인 단순한 증분 초입니다. 오늘의 나노초 부분은 &lt;code&gt;getNanosOfSecond&lt;/code&gt; 에 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="7c57dffa7938448b87eeca6b945432ce30d9655f" translate="yes" xml:space="preserve">
          <source>The epoch year &lt;code&gt;LocalDate&lt;/code&gt;, '1970-01-01'.</source>
          <target state="translated">epoch year &lt;code&gt;LocalDate&lt;/code&gt; , '1970-01-01'.</target>
        </trans-unit>
        <trans-unit id="13f61041587cde1d2ef70a5612d087fffea4f8a6" translate="yes" xml:space="preserve">
          <source>The epoch-day, based on the Java epoch of 1970-01-01 (ISO).</source>
          <target state="translated">1970 년 1 월 1 일 (ISO)의 Java 시대를 기반으로 한 시대.</target>
        </trans-unit>
        <trans-unit id="e49cb9c9ef141f068ac6e8b8f41d3d18c5453e3f" translate="yes" xml:space="preserve">
          <source>The equals comparison for the &lt;code&gt;DataFlavor&lt;/code&gt; class is implemented as follows: Two &lt;code&gt;DataFlavor&lt;/code&gt;s are considered equal if and only if their MIME primary type and subtype and representation class are equal. Additionally, if the primary type is &quot;text&quot;, the subtype denotes a text flavor which supports the charset parameter, and the representation class is not &lt;code&gt;java.io.Reader&lt;/code&gt;, &lt;code&gt;java.lang.String&lt;/code&gt;, &lt;code&gt;java.nio.CharBuffer&lt;/code&gt;, or &lt;code&gt;[C&lt;/code&gt;, the &lt;code&gt;charset&lt;/code&gt; parameter must also be equal. If a charset is not explicitly specified for one or both &lt;code&gt;DataFlavor&lt;/code&gt;s, the platform default encoding is assumed. See &lt;code&gt;selectBestTextFlavor&lt;/code&gt; for a list of text flavors which support the charset parameter.</source>
          <target state="translated">&lt;code&gt;DataFlavor&lt;/code&gt; 클래스에 대한 같음 비교 는 다음과 같이 구현됩니다. 두 &lt;code&gt;DataFlavor&lt;/code&gt; 는 MIME 기본 유형과 하위 유형 및 표현 클래스가 동일한 경우에만 동일한 것으로 간주됩니다. 또한 기본 유형이 &quot;text&quot;인 경우 하위 유형은 charset 매개 변수를 지원하는 텍스트 특징을 나타내며 표현 클래스는 &lt;code&gt;java.io.Reader&lt;/code&gt; , &lt;code&gt;java.lang.String&lt;/code&gt; , &lt;code&gt;java.nio.CharBuffer&lt;/code&gt; 또는 &lt;code&gt;[C&lt;/code&gt; , &lt;code&gt;charset&lt;/code&gt; 매개 변수도 동일해야합니다. &lt;code&gt;DataFlavor&lt;/code&gt; 중 하나 또는 둘 다에 대해 문자 집합이 명시 적으로 지정되지 않은 경우 플랫폼 기본 인코딩이 가정됩니다. &lt;code&gt;selectBestTextFlavor&lt;/code&gt; 참조 charset 매개 변수를 지원하는 텍스트 풍미 목록을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c1b8293f4c97e7205ec67ebb7e83b218aa57ebae" translate="yes" xml:space="preserve">
          <source>The equals method for all Key objects will return the same result as the equality operator '=='.</source>
          <target state="translated">모든 Key 객체에 대한 equals 메소드는 같음 연산자 '=='와 동일한 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f79c64d33ada160a9aa9a0dee87d4b4477a4a32f" translate="yes" xml:space="preserve">
          <source>The era AH has the value 1.</source>
          <target state="translated">AH 시대의 가치는 1입니다.</target>
        </trans-unit>
        <trans-unit id="3e1c9900b94880fd7e7c021ee09ac2c00bf64a53" translate="yes" xml:space="preserve">
          <source>The era BCE has the value 0, while the era CE has the value 1.</source>
          <target state="translated">BCE 시대는 0, CE 시대는 1입니다.</target>
        </trans-unit>
        <trans-unit id="5051bf50e01fc2774c8eb947eb59b6962dbe9b88" translate="yes" xml:space="preserve">
          <source>The era BEFORE_BE has the value 0, while the era BE has the value 1.</source>
          <target state="translated">BEFORE_BE는 값이 0 인 반면 BE는 값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="f1e8420b21ccf344f49d55914b45558ed396505c" translate="yes" xml:space="preserve">
          <source>The era BEFORE_ROC has the value 0, while the era ROC has the value 1.</source>
          <target state="translated">BEFORE_ROC의 시대는 0이고, ROC의 시대는 1입니다.</target>
        </trans-unit>
        <trans-unit id="9f4534bad72f013551c9f764a1def4ccdab2de91" translate="yes" xml:space="preserve">
          <source>The era in use at 1970-01-01 must have the value 1. Later eras must have sequentially higher values. Earlier eras must have sequentially lower values. Each chronology must refer to an enum or similar singleton to provide the era values.</source>
          <target state="translated">1970-01-01의 사용 기간은 값 1이어야합니다. 나중에는 순차적으로 높은 값을 가져야합니다. 초기는 순차적으로 낮아야합니다. 각 연대기는 시대 값을 제공하기 위해 열거 형 또는 유사한 싱글 톤을 참조해야합니다.</target>
        </trans-unit>
        <trans-unit id="87541603348e098b6e3532cfb361646f1efe0412" translate="yes" xml:space="preserve">
          <source>The era in use at the epoch 1970-01-01 (ISO) has the value 1.</source>
          <target state="translated">신기원 1970-01-01 (ISO)에서 사용되는 기간은 1입니다.</target>
        </trans-unit>
        <trans-unit id="09028bc65a868277e7b5ae99345ad33a969765b4" translate="yes" xml:space="preserve">
          <source>The era is, conceptually, the largest division of the time-line. Most calendar systems have a single epoch dividing the time-line into two eras. However, some have multiple eras, such as one for the reign of each leader. The exact meaning is determined by the &lt;code&gt;Chronology&lt;/code&gt;.</source>
          <target state="translated">시대는 개념 상 타임 라인의 가장 큰 부분입니다. 대부분의 달력 시스템에는 타임 라인을 두 가지 시대로 나누는 단일 시대가 있습니다. 그러나 어떤 지도자들은 각 지도자의 통치 기간과 같은 여러 시대를 가지고 있습니다. 정확한 의미는 &lt;code&gt;Chronology&lt;/code&gt; 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="ff2e26c4f18353f82283eccb549a2ce5f2603627" translate="yes" xml:space="preserve">
          <source>The era is, conceptually, the largest division of the time-line. Most calendar systems have a single epoch dividing the time-line into two eras. However, some have multiple eras, such as one for the reign of each leader. The exact meaning is determined by the chronology according to the following constraints.</source>
          <target state="translated">시대는 개념 상 타임 라인의 가장 큰 부분입니다. 대부분의 달력 시스템에는 타임 라인을 두 가지 시대로 나누는 단일 시대가 있습니다. 그러나 어떤 지도자들은 각 지도자의 통치 기간과 같은 여러 시대를 가지고 있습니다. 정확한 의미는 다음 제약 조건에 따라 연대기에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="745a52e844df97899a3ede65646ea36c0fd17371" translate="yes" xml:space="preserve">
          <source>The era.</source>
          <target state="translated">시대.</target>
        </trans-unit>
        <trans-unit id="2caffe614643d6e127ea5c039dc53ac14adaff9a" translate="yes" xml:space="preserve">
          <source>The erroneous pattern</source>
          <target state="translated">잘못된 패턴</target>
        </trans-unit>
        <trans-unit id="db5d419bcb7da634fd0bf25f990053a80acf9868" translate="yes" xml:space="preserve">
          <source>The error code</source>
          <target state="translated">오류 코드</target>
        </trans-unit>
        <trans-unit id="41b5b045786eb1032e2a6259c048d27d95a3aa1f" translate="yes" xml:space="preserve">
          <source>The error code with which to create the SystemException.</source>
          <target state="translated">SystemException을 만드는 데 사용하는 오류 코드입니다.</target>
        </trans-unit>
        <trans-unit id="c9f3f6b0ac21c18b5b5b46a7c3598f345b813e3c" translate="yes" xml:space="preserve">
          <source>The error handler can abort further validation immediately by throwing &lt;a href=&quot;../../../org/xml/sax/saxexception&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt; from the handler. Or for example it can print an error to the screen and try to continue the validation by returning normally from the &lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">오류 처리기는 처리기에서 &lt;a href=&quot;../../../org/xml/sax/saxexception&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; &lt;/a&gt; 을 발생시켜 추가 유효성 검사를 즉시 중단 할 수 있습니다 . 또는 예를 들어 화면에 오류를 인쇄하고 &lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; &lt;/a&gt; 에서 정상적으로 반환하여 유효성 검사를 계속할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca91a015f391a8274e6489f904246f21f852828f" translate="yes" xml:space="preserve">
          <source>The error handler can abort the parsing of a schema immediately by throwing &lt;a href=&quot;../../../org/xml/sax/saxexception&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt; from the handler. Or for example it can print an error to the screen and try to continue the processing by returning normally from the &lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">오류 처리기는 처리기에서 &lt;a href=&quot;../../../org/xml/sax/saxexception&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; &lt;/a&gt; 을 발생시켜 즉시 스키마 구문 분석을 중단 할 수 있습니다 . 또는 예를 들어 화면에 오류를 인쇄하고 &lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; &lt;/a&gt; 에서 정상적으로 반환하여 처리를 계속할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e98ccc16f95f86f47c7a57ca3607f40e966ecd8" translate="yes" xml:space="preserve">
          <source>The error index</source>
          <target state="translated">에러 인덱스</target>
        </trans-unit>
        <trans-unit id="4a0628012c2d77c4a62f2562528b964f8e826cdc" translate="yes" xml:space="preserve">
          <source>The error message.</source>
          <target state="translated">오류 메시지</target>
        </trans-unit>
        <trans-unit id="155f296108df1212e1fa7c200cb6147e704d7079" translate="yes" xml:space="preserve">
          <source>The error method is called when a Handler failure occurs.</source>
          <target state="translated">핸들러 실패가 발생하면 오류 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1d0bef9253965f89ce98be7e5b21759cac6eff03" translate="yes" xml:space="preserve">
          <source>The error or warning message.</source>
          <target state="translated">오류 또는 경고 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="605148fa6105b2e119d77c76174af023cd61d1fc" translate="yes" xml:space="preserve">
          <source>The errorCode gives the reason why the send failed, and if set, will be a SCTP protocol error code as defined in RFC2960 section 3.3.10</source>
          <target state="translated">errorCode는 전송이 실패한 이유를 제공하며, 설정된 경우 RFC2960 섹션 3.3.10에 정의 된 SCTP 프로토콜 오류 코드가됩니다.</target>
        </trans-unit>
        <trans-unit id="0a410fae8eeeeb214fc59888859b3800e99fda5d" translate="yes" xml:space="preserve">
          <source>The escape character (&lt;code&gt;'\u001B'&lt;/code&gt;)</source>
          <target state="translated">이스케이프 문자 ( &lt;code&gt;'\u001B'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c91df01c97c30e37b80ecbd3ef0c79f56e113f6e" translate="yes" xml:space="preserve">
          <source>The evaluation of XPath expressions is provided by &lt;code&gt;XPathEvaluator&lt;/code&gt;.</source>
          <target state="translated">XPath 표현식의 평가는 &lt;code&gt;XPathEvaluator&lt;/code&gt; 에서 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="932c2ad004646828de304bdeb118b0bd35d00dae" translate="yes" xml:space="preserve">
          <source>The evaluation of XPath expressions is provided by &lt;code&gt;XPathEvaluator&lt;/code&gt;. In a DOM implementation which supports the XPath 3.0 feature, as described above, the &lt;code&gt;XPathEvaluator&lt;/code&gt; interface will be implemented on the same object which implements the &lt;code&gt;Document&lt;/code&gt; interface permitting it to be obtained by the usual binding-specific method such as casting or by using the DOM Level 3 getInterface method. In this case the implementation obtained from the Document supports the XPath DOM module and is compatible with the XPath 1.0 specification.</source>
          <target state="translated">XPath 표현식의 평가는 &lt;code&gt;XPathEvaluator&lt;/code&gt; 에서 제공합니다 . 위에서 설명한대로 XPath 3.0 기능을 지원하는 DOM 구현에서 &lt;code&gt;XPathEvaluator&lt;/code&gt; 인터페이스는 &lt;code&gt;Document&lt;/code&gt; 인터페이스 를 구현하는 동일한 객체에 구현 되어 캐스팅 또는 DOM 사용과 같은 일반적인 바인딩 관련 메서드를 통해 얻을 수 있습니다. 레벨 3 getInterface 메소드. 이 경우 문서에서 얻은 구현은 XPath DOM 모듈을 지원하며 XPath 1.0 사양과 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="61c4e5321be488393232ebfc2c998015598d95d3" translate="yes" xml:space="preserve">
          <source>The event</source>
          <target state="translated">이벤트</target>
        </trans-unit>
        <trans-unit id="36c181ff6056db9593338574ecdc945b6067d4de" translate="yes" xml:space="preserve">
          <source>The event id indicating an ancestor-Container was moved.</source>
          <target state="translated">상위-컨테이너가 이동되었음을 나타내는 이벤트 ID입니다.</target>
        </trans-unit>
        <trans-unit id="e1443dfaf4b6b85db28fbdb25b53c165f541ec0a" translate="yes" xml:space="preserve">
          <source>The event id indicating an ancestor-Container was resized.</source>
          <target state="translated">상위 컨테이너의 크기가 조정되었음을 나타내는 이벤트 ID입니다.</target>
        </trans-unit>
        <trans-unit id="70d35f470ffeef37b54f836e3cd9f0b651ae9aa7" translate="yes" xml:space="preserve">
          <source>The event id indicating that modification was made to the entire hierarchy tree.</source>
          <target state="translated">전체 계층 구조 트리가 수정되었음을 나타내는 이벤트 ID입니다.</target>
        </trans-unit>
        <trans-unit id="562a97f9bd92f31f73ffbe57af477a5ba2406946" translate="yes" xml:space="preserve">
          <source>The event instance is created if necessary, and stored in &lt;code&gt;changeEvent&lt;/code&gt;.</source>
          <target state="translated">필요한 경우 이벤트 인스턴스가 생성되고 &lt;code&gt;changeEvent&lt;/code&gt; 에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="0ef14c999b3719bfd7c8883c82c16c66341c96f6" translate="yes" xml:space="preserve">
          <source>The event is currently being evaluated at the target &lt;code&gt;EventTarget&lt;/code&gt;.</source>
          <target state="translated">이벤트는 현재 대상 &lt;code&gt;EventTarget&lt;/code&gt; 에서 평가되고 있습니다.</target>
        </trans-unit>
        <trans-unit id="17d00264cedd71d7e857c367b4af9222389e91c0" translate="yes" xml:space="preserve">
          <source>The event is passed to every &lt;code&gt;WindowListener&lt;/code&gt; or &lt;code&gt;WindowAdapter&lt;/code&gt; object which registered to receive such events using the window's &lt;code&gt;addWindowListener&lt;/code&gt; method. (&lt;code&gt;WindowAdapter&lt;/code&gt; objects implement the &lt;code&gt;WindowListener&lt;/code&gt; interface.) Each such listener object gets this &lt;code&gt;WindowEvent&lt;/code&gt; when the event occurs.</source>
          <target state="translated">이벤트는 윈도우의 &lt;code&gt;addWindowListener&lt;/code&gt; 메소드를 사용하여 이러한 이벤트를 수신하도록 등록 된 모든 &lt;code&gt;WindowListener&lt;/code&gt; 또는 &lt;code&gt;WindowAdapter&lt;/code&gt; 객체 로 전달됩니다 . ( &lt;code&gt;WindowAdapter&lt;/code&gt; 객체는 &lt;code&gt;WindowListener&lt;/code&gt; 인터페이스를 구현합니다 .) 이러한 각 리스너 객체는 이벤트가 발생할 때이 &lt;code&gt;WindowEvent&lt;/code&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="1abd8f6fbae26f079345d6412b7aa0c070389945" translate="yes" xml:space="preserve">
          <source>The event listener list for the document.</source>
          <target state="translated">문서의 이벤트 리스너 목록입니다.</target>
        </trans-unit>
        <trans-unit id="0091e8c476dc1c7031fbbb41fedd65ed1eb317c6" translate="yes" xml:space="preserve">
          <source>The event listener list.</source>
          <target state="translated">이벤트 리스너 목록입니다.</target>
        </trans-unit>
        <trans-unit id="b87c7de0d8e9fe74014722e9133592b331a94776" translate="yes" xml:space="preserve">
          <source>The event mask for selecting action events.</source>
          <target state="translated">액션 이벤트를 선택하기위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="f8465af8a3d205902e607d80f71a24a06c6dcaec" translate="yes" xml:space="preserve">
          <source>The event mask for selecting adjustment events.</source>
          <target state="translated">조정 이벤트 선택 용 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="8d8cade455cf753680d2662860fe8dc4825d577b" translate="yes" xml:space="preserve">
          <source>The event mask for selecting component events.</source>
          <target state="translated">구성 요소 이벤트를 선택하기위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="7bc78b08314a4e10ffe2dc8666ee7cff2ef64b6d" translate="yes" xml:space="preserve">
          <source>The event mask for selecting container events.</source>
          <target state="translated">컨테이너 이벤트를 선택하기위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="08b3362dfd97442548ee4781e310da11d95dd09b" translate="yes" xml:space="preserve">
          <source>The event mask for selecting focus events.</source>
          <target state="translated">포커스 이벤트를 선택하기위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="503c954ae1d7480fa1d1835de752e5eab2f048d5" translate="yes" xml:space="preserve">
          <source>The event mask for selecting hierarchy bounds events.</source>
          <target state="translated">계층 경계 이벤트를 선택하기위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="95b568d37697e91c43083791ab88b985fcd3f888" translate="yes" xml:space="preserve">
          <source>The event mask for selecting hierarchy events.</source>
          <target state="translated">계층 이벤트를 선택하기위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="618b82a70beb576ee4875f5097359a278d101abb" translate="yes" xml:space="preserve">
          <source>The event mask for selecting input method events.</source>
          <target state="translated">입력 방법 이벤트를 선택하기위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="d9a77162c6707a8a87f9742abf7019ec4f3de966" translate="yes" xml:space="preserve">
          <source>The event mask for selecting invocation events.</source>
          <target state="translated">호출 이벤트를 선택하기위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="50a46c48f92a8902f2db7051788a964120df69b9" translate="yes" xml:space="preserve">
          <source>The event mask for selecting item events.</source>
          <target state="translated">아이템 이벤트 선택을위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="b158d22c61f92f3ea3859cf9b84da72a61f627e2" translate="yes" xml:space="preserve">
          <source>The event mask for selecting key events.</source>
          <target state="translated">주요 이벤트를 선택하기위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="9b2204c56d8c920ea81c853ad161b33986873ce6" translate="yes" xml:space="preserve">
          <source>The event mask for selecting mouse events.</source>
          <target state="translated">마우스 이벤트 선택을위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="3daadebe7d86d27ac261849cebba44c3c58604a8" translate="yes" xml:space="preserve">
          <source>The event mask for selecting mouse motion events.</source>
          <target state="translated">마우스 모션 이벤트를 선택하기위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="143e7aab788b29b1897b3f9301e4a1bd57c7b1a0" translate="yes" xml:space="preserve">
          <source>The event mask for selecting mouse wheel events.</source>
          <target state="translated">마우스 휠 이벤트를 선택하기위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="7303f9dfdb43b99bc4a8b24183aafd56bedd921d" translate="yes" xml:space="preserve">
          <source>The event mask for selecting paint events.</source>
          <target state="translated">페인트 이벤트를 선택하기위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="6393b80ca81908852dcb4fe7b0b6a84bc70bc0dc" translate="yes" xml:space="preserve">
          <source>The event mask for selecting text events.</source>
          <target state="translated">텍스트 이벤트를 선택하기위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="e5374359f6883c4e32a6c33c303b2252932cffe6" translate="yes" xml:space="preserve">
          <source>The event mask for selecting window events.</source>
          <target state="translated">창 이벤트 선택을위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="87aa3994fe1dbeca3fe3cef28257f680aaf7a10a" translate="yes" xml:space="preserve">
          <source>The event mask for selecting window focus events.</source>
          <target state="translated">창 포커스 이벤트를 선택하기위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="a89cabea541857d15e82c9a9b6d50b110bb619a7" translate="yes" xml:space="preserve">
          <source>The event mask for selecting window state events.</source>
          <target state="translated">창 상태 이벤트를 선택하기위한 이벤트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="0724b71d607877d8b379f2ccb49adf32cafd5611" translate="yes" xml:space="preserve">
          <source>The event masks defined in this class are needed by Component subclasses which are using Component.enableEvents() to select for event types not selected by registered listeners. If a listener is registered on a component, the appropriate event mask is already set internally by the component.</source>
          <target state="translated">이 클래스에 정의 된 이벤트 마스크는 등록 된 리스너가 선택하지 않은 이벤트 유형을 선택하기 위해 Component.enableEvents ()를 사용하는 Component 서브 클래스에 필요합니다. 리스너가 구성 요소에 등록 된 경우 적절한 이벤트 마스크는 이미 구성 요소에 의해 내부적으로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d34d828cba8da1b4111d6f70690a234a819abfb3" translate="yes" xml:space="preserve">
          <source>The event property may be &quot;qualified&quot; with an arbitrary number of property prefixes delimited with the &quot;.&quot; character. The &quot;qualifying&quot; names that appear before the &quot;.&quot; characters are taken as the names of properties that should be applied, left-most first, to the event object.</source>
          <target state="translated">이벤트 속성은 &quot;.&quot;로 구분 된 임의의 수의 속성 접두사를 사용하여 &quot;규격화&quot;될 수 있습니다. 캐릭터. &quot;.&quot;앞에 나타나는 &quot;자격&quot;이름 문자는 맨 왼쪽 이벤트 개체에 적용해야하는 속성 이름으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f559f796a4abfc896af3dfc6be310d8b091505bc" translate="yes" xml:space="preserve">
          <source>The event source: the &lt;code&gt;EventContext&lt;/code&gt; which fired this event.</source>
          <target state="translated">이벤트 소스 : 이 이벤트를 시작한 &lt;code&gt;EventContext&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3c9fd95961b86943e1f2aa4dbff83d13cbf36e7" translate="yes" xml:space="preserve">
          <source>The event that the exception was created for.</source>
          <target state="translated">예외가 생성 된 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="ee5e29fb93f9c21916d767a675ad47355b1d6a37" translate="yes" xml:space="preserve">
          <source>The event type indicating a changed insertion point in input method text.</source>
          <target state="translated">입력 방법 텍스트에서 변경된 삽입 지점을 나타내는 이벤트 유형입니다.</target>
        </trans-unit>
        <trans-unit id="b0f553322903980cd0149eaf7aaaa4e359a525f7" translate="yes" xml:space="preserve">
          <source>The event type indicating a changed insertion point in input method text. This event is generated by input methods while processing input if only the caret changed.</source>
          <target state="translated">입력 방법 텍스트에서 변경된 삽입 지점을 나타내는 이벤트 유형입니다. 이 이벤트는 캐럿 만 변경된 경우 입력을 처리하는 동안 입력 방법에 의해 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="ee63f479a327b468d252de6237f7cf6fd4de4477" translate="yes" xml:space="preserve">
          <source>The event type indicating changed input method text.</source>
          <target state="translated">변경된 입력 방법 텍스트를 나타내는 이벤트 유형입니다.</target>
        </trans-unit>
        <trans-unit id="5ee78817480980dd147e27ae0d69b8619d8d9a89" translate="yes" xml:space="preserve">
          <source>The event type indicating changed input method text. This event is generated by input methods while processing input.</source>
          <target state="translated">변경된 입력 방법 텍스트를 나타내는 이벤트 유형입니다. 이 이벤트는 입력을 처리하는 동안 입력 방법에 의해 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="b7d703d953f82fc64328567ded4065357410b7d7" translate="yes" xml:space="preserve">
          <source>The event type.</source>
          <target state="translated">이벤트 유형</target>
        </trans-unit>
        <trans-unit id="3469a61b89e3ba596d3849895eab6680d98a5750" translate="yes" xml:space="preserve">
          <source>The event's id.</source>
          <target state="translated">이벤트의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="a8494d802d092d1ca50afc82a84da40bd6c4d3ac" translate="yes" xml:space="preserve">
          <source>The events in the lexical handler apply to the entire document, not just to the document element, and all lexical handler events must appear between the content handler's startDocument and endDocument events.</source>
          <target state="translated">어휘 핸들러의 이벤트는 문서 요소뿐만 아니라 전체 문서에 적용되며 모든 어휘 핸들러 이벤트는 컨텐츠 핸들러의 startDocument 및 endDocument 이벤트 사이에 나타나야합니다.</target>
        </trans-unit>
        <trans-unit id="8c1be1e79b4b77d5ca8b28fc3b594a4c65ed6faa" translate="yes" xml:space="preserve">
          <source>The events that are grouped in an EventSet are restricted in the following ways:</source>
          <target state="translated">EventSet에 그룹화 된 이벤트는 다음과 같은 방식으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="801bb999f2915842503297d7a55e5337855dcb13" translate="yes" xml:space="preserve">
          <source>The exact behavior is as follows. Parse the full set of fields and determine the effective chronology using the last chronology if it appears more than once. Then convert the base date to the effective chronology. Then extract the specified field from the chronology-specific base date and use it to determine the &lt;code&gt;baseValue&lt;/code&gt; used below.</source>
          <target state="translated">정확한 동작은 다음과 같습니다. 전체 필드 세트를 구문 분석하고 마지막 연대기가 두 번 이상 나타나는 경우 유효 연대기를 판별하십시오. 그런 다음 기준 날짜를 유효 연대기로 변환하십시오. 그런 다음 연대기 별 기준 날짜에서 지정된 필드를 추출하여이를 사용하여 아래에 사용 된 &lt;code&gt;baseValue&lt;/code&gt; 을 결정하십시오 .</target>
        </trans-unit>
        <trans-unit id="630cc010a102155b8411df8b412a09f2a3535533" translate="yes" xml:space="preserve">
          <source>The exact behavior of calling this function varies on a component-by-component and L&amp;amp;F-by-L&amp;amp;F basis.</source>
          <target state="translated">이 함수를 호출하는 정확한 동작은 구성 요소 별 및 L &amp;amp; F 별 및 L &amp;amp; F별로 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c12e27171aa51bd9aa8f7f961c2ff8b5eca35700" translate="yes" xml:space="preserve">
          <source>The exact behavior of monitors is detailed in the &lt;a href=&quot;#spec&quot;&gt;JMX Specification&lt;/a&gt;. What follows is a summary.</source>
          <target state="translated">모니터의 정확한 동작은 &lt;a href=&quot;#spec&quot;&gt;JMX 사양에&lt;/a&gt; 자세히 설명되어 있습니다. 다음은 요약입니다.</target>
        </trans-unit>
        <trans-unit id="f5996b274c754ff765916b69a1116e38e763f760" translate="yes" xml:space="preserve">
          <source>The exact behavior of this method is vendor specific. In particular implementations may detect conditions that indicate dependence on other work such as an open transaction. It is recommended though not required that implementations throw a &lt;code&gt;SQLException&lt;/code&gt; if there is an active transaction and &lt;code&gt;endRequest&lt;/code&gt; is called.</source>
          <target state="translated">이 방법의 정확한 동작은 공급 업체별로 다릅니다. 특정 구현에서는 공개 트랜잭션과 같은 다른 작업에 대한 종속성을 나타내는 조건을 감지 할 수 있습니다. 활성 트랜잭션이 있고 &lt;code&gt;endRequest&lt;/code&gt; 가 호출 된 경우 구현에서 &lt;code&gt;SQLException&lt;/code&gt; 을 throw하는 것이 필수는 아니지만 권장 됩니다.</target>
        </trans-unit>
        <trans-unit id="0adcbf7915efe7e852f0a0f70973b55eb8f3dfe0" translate="yes" xml:space="preserve">
          <source>The exact calling sequence is up to the layout functionality of the parent view (if the view has any children). The view may collect the preferences of the children prior to determining what it will give each child, or it might iteratively update the children one at a time.</source>
          <target state="translated">정확한 호출 순서는 부모 뷰의 레이아웃 기능에 달려 있습니다 (뷰에 자식이있는 경우). 보기는 각 자녀에게 무엇을 줄 것인지 결정하기 전에 자녀의 선호도를 수집하거나 자녀를 한 번에 하나씩 반복적으로 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85903011b61cd586781b00fd60c60fc1c4171c96" translate="yes" xml:space="preserve">
          <source>The exact definition of hidden is platform or provider dependent. On UNIX for example a file is considered to be hidden if its name begins with a period character ('.'). On Windows a file is considered hidden if the DOS &lt;a href=&quot;attribute/dosfileattributes#isHidden()&quot;&gt;&lt;code&gt;hidden&lt;/code&gt;&lt;/a&gt; attribute is set.</source>
          <target state="translated">숨김의 정확한 정의는 플랫폼 또는 공급자에 따라 다릅니다. 예를 들어 UNIX에서 파일 이름이 마침표 ( '.')로 시작하면 숨겨진 파일로 간주됩니다. Windows에서 DOS &lt;a href=&quot;attribute/dosfileattributes#isHidden()&quot;&gt; &lt;code&gt;hidden&lt;/code&gt; &lt;/a&gt; 속성이 설정 되면 파일이 숨겨진 것으로 간주 됩니다.</target>
        </trans-unit>
        <trans-unit id="b44a7e8297a7f234948e4b10e76ca799709f23e4" translate="yes" xml:space="preserve">
          <source>The exact definitions of a byte stream and a character stream are binding dependent.</source>
          <target state="translated">바이트 스트림과 문자 스트림의 정확한 정의는 바인딩에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="bd471b56699ef39010fba9b749ad14cd54415b7d" translate="yes" xml:space="preserve">
          <source>The exact details of the representation are unspecified and subject to change, but the following may be regarded as typical:</source>
          <target state="translated">표현의 정확한 세부 사항은 지정되지 않았으며 변경 될 수 있지만 다음은 일반적인 것으로 간주 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d66df7228668613a58111f2895d7f4a5daf80cea" translate="yes" xml:space="preserve">
          <source>The exact form of a &lt;code&gt;file:&lt;/code&gt; URI is system-dependent, hence the transformation performed by this constructor is also system-dependent.</source>
          <target state="translated">&lt;code&gt;file:&lt;/code&gt; 의 정확한 형식 : URI는 시스템에 따라 다르므로이 생성자가 수행하는 변환도 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="f662fbb86a38df169afc1048c172f82e4e4f193b" translate="yes" xml:space="preserve">
          <source>The exact form of the URI is file system provider dependent. In the case of the default provider, the URI scheme is &lt;code&gt;&quot;file&quot;&lt;/code&gt; and the given URI has a non-empty path component, and undefined query, and fragment components. The resulting &lt;code&gt;Path&lt;/code&gt; is associated with the default &lt;a href=&quot;../filesystems#getDefault()&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;&lt;code&gt;FileSystem&lt;/code&gt;.</source>
          <target state="translated">URI의 정확한 형식은 파일 시스템 공급자에 따라 다릅니다. 기본 공급자의 경우 URI 체계는 &lt;code&gt;&quot;file&quot;&lt;/code&gt; 이고 지정된 URI에는 비어 있지 않은 경로 구성 요소, 정의되지 않은 쿼리 및 조각 구성 요소가 있습니다. 결과 &lt;code&gt;Path&lt;/code&gt; 는 기본 &lt;a href=&quot;../filesystems#getDefault()&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt; &lt;code&gt;FileSystem&lt;/code&gt; 과 연결됩니다 .</target>
        </trans-unit>
        <trans-unit id="dc981df5951ebbd2d225b7d4ed612eca36ff7515" translate="yes" xml:space="preserve">
          <source>The exact form of the URI is file system provider dependent. In the case of the default provider, the URI scheme is &lt;code&gt;&quot;file&quot;&lt;/code&gt; and the given URI has a non-empty path component, and undefined query, and fragment components. The resulting &lt;code&gt;Path&lt;/code&gt; is associated with the default &lt;a href=&quot;../filesystems#getDefault--&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;&lt;code&gt;FileSystem&lt;/code&gt;.</source>
          <target state="translated">URI의 정확한 형식은 파일 시스템 공급자에 따라 다릅니다. 기본 공급자의 경우 URI 체계는 &lt;code&gt;&quot;file&quot;&lt;/code&gt; 이며 지정된 URI에는 비어 있지 않은 경로 구성 요소와 정의되지 않은 쿼리 및 조각 구성 요소가 있습니다. 결과 &lt;code&gt;Path&lt;/code&gt; 는 기본 &lt;a href=&quot;../filesystems#getDefault--&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt; &lt;code&gt;FileSystem&lt;/code&gt; 과 연관됩니다 .</target>
        </trans-unit>
        <trans-unit id="9697a2a14d97c5e708bf64a93aac8e3b81e327df" translate="yes" xml:space="preserve">
          <source>The exact form of the URI is system-dependent. If it can be determined that the file denoted by this abstract pathname is a directory, then the resulting URI will end with a slash.</source>
          <target state="translated">URI의 정확한 형식은 시스템에 따라 다릅니다. 이 추상 경로명으로 표시된 파일이 디렉토리 인 것으로 판별 될 경우 결과 URI는 슬래시로 끝납니다.</target>
        </trans-unit>
        <trans-unit id="9aa800104b8645f432b1c0777e913b6648da24d1" translate="yes" xml:space="preserve">
          <source>The exact meaning and format of the version is provider specific. The version must follow lexicographical order, thus the returned map will be order from the oldest known rules to the newest available rules. The default 'TZDB' group uses version numbering consisting of the year followed by a letter, such as '2009e' or '2012f'.</source>
          <target state="translated">버전의 정확한 의미와 형식은 공급자마다 다릅니다. 버전은 사전 식 순서를 따라야하므로 반환 된 맵은 가장 오래된 알려진 규칙에서 사용 가능한 최신 규칙으로 정렬됩니다. 기본 'TZDB'그룹은 연도로 구성된 버전 번호 매기기와 '2009e'또는 '2012f'와 같은 문자를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="202e6f1d0220247616c834f1fe78276d90a9f0ce" translate="yes" xml:space="preserve">
          <source>The exact naming patterns for Standard MBeans are detailed in the &lt;a href=&quot;#spec&quot;&gt;JMX Specification&lt;/a&gt;.</source>
          <target state="translated">표준 MBean의 정확한 이름 지정 패턴은 &lt;a href=&quot;#spec&quot;&gt;JMX 사양에&lt;/a&gt; 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="25d2a903e4f369778a39675882ed8ca3dfabde11" translate="yes" xml:space="preserve">
          <source>The exact operation of the &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; instance depends on the &lt;code&gt;Lock&lt;/code&gt; implementation and must be documented by that implementation.</source>
          <target state="translated">&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt; 인스턴스 의 정확한 작동은 &lt;code&gt;Lock&lt;/code&gt; 구현 에 따라 다르며 해당 구현에서 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="ad308ddfc514de8e0c7d95c6e03d21d0eec88e24" translate="yes" xml:space="preserve">
          <source>The exact semantics of the returned &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object depend on the schema language for which this &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; is created.</source>
          <target state="translated">반환 된 &lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt; 개체 의 정확한 의미는 이 &lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt; 가 생성 된 스키마 언어에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="5b0d4d6e7aa50a3ce0bc0196f6c80877208e0249" translate="yes" xml:space="preserve">
          <source>The exact semantics of this socket options are system dependent. In particular, it is system dependent whether the loopback applies to multicast datagrams sent from the socket or received by the socket. For &lt;a href=&quot;standardprotocolfamily#INET6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; sockets then it is system dependent whether the option also applies to multicast datagrams sent to IPv4 addresses.</source>
          <target state="translated">이 소켓 옵션의 정확한 의미는 시스템에 따라 다릅니다. 특히 루프백이 소켓에서 전송되거나 소켓에서 수신 된 멀티 캐스트 데이터 그램에 적용되는지 여부는 시스템에 따라 다릅니다. 대한 &lt;a href=&quot;standardprotocolfamily#INET6&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; &lt;/a&gt; 소켓 다음은 옵션이 아니라 IPv4 주소로 전송 멀티 캐스트 데이터 그램에 적용되는지 여부 시스템에 따라 달라집니다.</target>
        </trans-unit>
        <trans-unit id="dcf3b498256a8390df6c831306b8777539da56b0" translate="yes" xml:space="preserve">
          <source>The exact set of locations searched depends on the implementation of the Java runtime environment.</source>
          <target state="translated">검색된 정확한 위치 세트는 Java 런타임 환경의 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5c806ff52a09110c8d9bf29d349a44f6e490013e" translate="yes" xml:space="preserve">
          <source>The example above creates a simple HttpServer which uses the calling application thread to invoke the handle() method for incoming http requests directed to port 8000, and to the path /applications/myapp/.</source>
          <target state="translated">위의 예제는 호출 애플리케이션 스레드를 사용하여 포트 8000 및 경로 / applications / myapp /으로 향하는 수신 http 요청에 대한 handle () 메소드를 호출하는 간단한 HttpServer를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="ed24ee1b6649fd578f53eb49dfd544b8310ea439" translate="yes" xml:space="preserve">
          <source>The example above implements a simple range predicate. Note, that implementations should but are not required to provide &lt;code&gt;String&lt;/code&gt; and integer index based constructors to provide for JDBC RowSet Implementation applications that use both column identification conventions.</source>
          <target state="translated">위의 예는 간단한 범위 술어를 구현합니다. 구현은 두 열 식별 규칙을 모두 사용하는 JDBC RowSet 구현 응용 프로그램을 제공 하기 위해 &lt;code&gt;String&lt;/code&gt; 및 정수 인덱스 기반 생성자를 제공 해야하지만 필수는 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="86d5f50a60c75d2a382d582e096f5124b4eb83d9" translate="yes" xml:space="preserve">
          <source>The example above shows only one form of address. An address for the RMI Connector can take several forms, as detailed in the documentation for the package &lt;code&gt;&lt;a href=&quot;../../../../java.management.rmi/javax/management/remote/rmi/package-summary&quot;&gt;&lt;code&gt;javax.management.remote.rmi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">위의 예는 한 가지 형식의 주소 만 보여줍니다. RMI 커넥터의 주소는 &lt;code&gt;&lt;a href=&quot;../../../../java.management.rmi/javax/management/remote/rmi/package-summary&quot;&gt;&lt;code&gt;javax.management.remote.rmi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 패키지에 대한 문서에 자세히 설명 된대로 여러 형식을 취할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a46638a46aa36be6870c59328abd975a302ed5d9" translate="yes" xml:space="preserve">
          <source>The example above shows only one form of address. An address for the RMI Connector can take several forms, as detailed in the documentation for the package &lt;code&gt;&lt;a href=&quot;rmi/package-summary&quot;&gt;&lt;code&gt;javax.management.remote.rmi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">위의 예는 한 가지 형식의 주소 만 보여줍니다. RMI 커넥터의 주소는 &lt;code&gt;&lt;a href=&quot;rmi/package-summary&quot;&gt;&lt;code&gt;javax.management.remote.rmi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 패키지의 문서에 자세히 기술 된대로 여러 형태를 취할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6725c0acd0e06ab0756f998f95be7afe68e98f51" translate="yes" xml:space="preserve">
          <source>The example can be achieved by using the following categories:</source>
          <target state="translated">다음 범주를 사용하여 예제를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73fb8e3e2f0b010b1c0fb1ec4369809e065e53da" translate="yes" xml:space="preserve">
          <source>The example code presented below demonstrates the usage of the &lt;code&gt;GSSContext&lt;/code&gt; interface for the initiating peer. Different operations on the &lt;code&gt;GSSContext&lt;/code&gt; object are presented, including: object instantiation, setting of desired flags, context establishment, query of actual context flags, per-message operations on application data, and finally context deletion.</source>
          <target state="translated">아래에 제시된 예제 코드는 시작 피어에 대한 &lt;code&gt;GSSContext&lt;/code&gt; 인터페이스 의 사용법을 보여줍니다 . 객체 인스턴스화, 원하는 플래그 설정, 컨텍스트 설정, 실제 컨텍스트 플래그 쿼리, 애플리케이션 데이터에 대한 메시지 별 작업, 마지막으로 컨텍스트 삭제를 포함 하여 &lt;code&gt;GSSContext&lt;/code&gt; 객체 에 대한 다양한 작업 이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="a07bc1a32762aa38814256dfd667aaaa6b754e9e" translate="yes" xml:space="preserve">
          <source>The exception (and its subclasses) requested with &lt;a href=&quot;eventrequestmanager#createExceptionRequest(com.sun.jdi.ReferenceType,boolean,boolean)&quot;&gt;&lt;code&gt;EventRequestManager.createExceptionRequest(com.sun.jdi.ReferenceType, boolean, boolean)&lt;/code&gt;&lt;/a&gt;, or null if, as by default, all exceptions are requested.</source>
          <target state="translated">&lt;a href=&quot;eventrequestmanager#createExceptionRequest(com.sun.jdi.ReferenceType,boolean,boolean)&quot;&gt; &lt;code&gt;EventRequestManager.createExceptionRequest(com.sun.jdi.ReferenceType, boolean, boolean)&lt;/code&gt; &lt;/a&gt; )로 요청 된 예외 (및 해당 하위 클래스) 또는 기본적으로 모든 예외가 요청 된 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="d8a972011740df1b54be01476c1a301cf0eb9b3c" translate="yes" xml:space="preserve">
          <source>The exception class handles errors that may happen while processing or using a catalog.</source>
          <target state="translated">예외 클래스는 카탈로그를 처리하거나 사용하는 동안 발생할 수있는 오류를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="cf256aa92da408eb634bac9c48df3a1edf45330c" translate="yes" xml:space="preserve">
          <source>The exception handler for this stream. Will return the default exception listener if this has not explicitly been set.</source>
          <target state="translated">이 스트림의 예외 핸들러 명시 적으로 설정되지 않은 경우 기본 예외 리스너를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2aa040dbff462a04d3abbb5593e1fb08753604d8" translate="yes" xml:space="preserve">
          <source>The exception handler for this stream; Will return the default exception listener if this has not explicitly been set.</source>
          <target state="translated">이 스트림의 예외 핸들러입니다. 명시 적으로 설정되지 않은 경우 기본 예외 리스너를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3725f62226b7f5164a5c53cb1c5db24d41640d24" translate="yes" xml:space="preserve">
          <source>The exception that was thrown.</source>
          <target state="translated">발생한 예외입니다.</target>
        </trans-unit>
        <trans-unit id="4f5c2015856d130d3a003b24c3086bc7f659cbf4" translate="yes" xml:space="preserve">
          <source>The exception thrown when an agent cannot be loaded into the target Java virtual machine.</source>
          <target state="translated">에이전트를 대상 JVM (Java Virtual Machine)에로드 할 수 없을 때 발생하는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="3caa56518c9b9f7e9abaaa9e8e781579d3371af4" translate="yes" xml:space="preserve">
          <source>The exception thrown when an agent fails to initialize in the target Java virtual machine.</source>
          <target state="translated">에이전트가 대상 JVM (Java Virtual Machine)에서 초기화에 실패 할 때 발생하는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="1b74aaa2703470e90f28d9b9ca620765332c9fec" translate="yes" xml:space="preserve">
          <source>The executable is represented as when viewed as a method (or constructor or initializer) of some reference type. If that reference type is parameterized, then its actual type arguments are substituted into any types returned by the methods of this interface.</source>
          <target state="translated">실행 파일은 일부 참조 유형의 메소드 (또는 생성자 또는 이니셜 라이저)로 볼 때 표시됩니다. 해당 참조 유형이 매개 변수화 된 경우 실제 유형 인수는이 인터페이스의 메소드가 리턴 한 모든 유형으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="eb539585405c8e823f90d2f746e91e61574086c1" translate="yes" xml:space="preserve">
          <source>The executable pathname may contain only the name of the executable without the full path information. It is undecideable whether white space separates different arguments or is part of a single argument.</source>
          <target state="translated">실행 경로 이름에는 전체 경로 정보없이 실행 파일 이름 만 포함될 수 있습니다. 공백이 다른 인수를 구분하는지 또는 단일 인수의 일부인지 여부는 결정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f27b0cda8d8e73fd383b388aa8d859be3858d613" translate="yes" xml:space="preserve">
          <source>The execution of the cleaning action is performed by a thread associated with the cleaner. All exceptions thrown by the cleaning action are ignored. The cleaner and other cleaning actions are not affected by exceptions in a cleaning action. The thread runs until all registered cleaning actions have completed and the cleaner itself is reclaimed by the garbage collector.</source>
          <target state="translated">청소 동작의 실행은 청소기와 관련된 스레드에 의해 수행됩니다. 정리 조치에서 발생한 모든 예외는 무시됩니다. 클리너 및 기타 클리닝 작업은 클리닝 작업의 예외에 영향을받지 않습니다. 스레드는 등록 된 모든 정리 작업이 완료되고 가비지 수집기에서 클리너 자체를 회수 할 때까지 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="d29a50e79da812a685fcf8e4148c18068c2c4497" translate="yes" xml:space="preserve">
          <source>The execution status of tasks may be queried at several levels of detail: &lt;a href=&quot;forkjointask#isDone--&quot;&gt;&lt;code&gt;isDone()&lt;/code&gt;&lt;/a&gt; is true if a task completed in any way (including the case where a task was cancelled without executing); &lt;a href=&quot;forkjointask#isCompletedNormally--&quot;&gt;&lt;code&gt;isCompletedNormally()&lt;/code&gt;&lt;/a&gt; is true if a task completed without cancellation or encountering an exception; &lt;a href=&quot;forkjointask#isCancelled--&quot;&gt;&lt;code&gt;isCancelled()&lt;/code&gt;&lt;/a&gt; is true if the task was cancelled (in which case &lt;a href=&quot;forkjointask#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; returns a &lt;a href=&quot;cancellationexception&quot;&gt;&lt;code&gt;CancellationException&lt;/code&gt;&lt;/a&gt;); and &lt;a href=&quot;forkjointask#isCompletedAbnormally--&quot;&gt;&lt;code&gt;isCompletedAbnormally()&lt;/code&gt;&lt;/a&gt; is true if a task was either cancelled or encountered an exception, in which case &lt;a href=&quot;forkjointask#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; will return either the encountered exception or &lt;a href=&quot;cancellationexception&quot;&gt;&lt;code&gt;CancellationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">작업의 실행 상태는 몇 가지 세부 수준으로 쿼리 될 수 있습니다 . 작업이 어떤 방식 으로든 완료된 경우 (작업이 실행되지 않고 작업이 취소 된 경우를 포함하여 &lt;a href=&quot;forkjointask#isDone--&quot;&gt; &lt;code&gt;isDone()&lt;/code&gt; &lt;/a&gt; 은 true입니다. 작업이 취소 또는 예외없이 완료된 경우 &lt;a href=&quot;forkjointask#isCompletedNormally--&quot;&gt; &lt;code&gt;isCompletedNormally()&lt;/code&gt; &lt;/a&gt; 는 true입니다. 작업이 취소 된 경우 &lt;a href=&quot;forkjointask#isCancelled--&quot;&gt; &lt;code&gt;isCancelled()&lt;/code&gt; &lt;/a&gt; 는 true입니다 (이 경우 &lt;a href=&quot;forkjointask#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt; 이 &lt;a href=&quot;cancellationexception&quot;&gt; &lt;code&gt;CancellationException&lt;/code&gt; 을&lt;/a&gt; 반환 함 ). 및 &lt;a href=&quot;forkjointask#isCompletedAbnormally--&quot;&gt; &lt;code&gt;isCompletedAbnormally()&lt;/code&gt; &lt;/a&gt; 작업 중 하나를 취소하는 경우있는 예외, 발생했을 경우 사실이다 &lt;a href=&quot;forkjointask#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt; 만난 예외 또는 중 하나를 반환합니다 &lt;a href=&quot;cancellationexception&quot;&gt; &lt;code&gt;CancellationException&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8ca944f0e12c04260f851c499a103b46e2f78c38" translate="yes" xml:space="preserve">
          <source>The execution status of tasks may be queried at several levels of detail: &lt;a href=&quot;future#isDone()&quot;&gt;&lt;code&gt;Future.isDone()&lt;/code&gt;&lt;/a&gt; is true if a task completed in any way (including the case where a task was cancelled without executing); &lt;a href=&quot;#isCompletedNormally()&quot;&gt;&lt;code&gt;isCompletedNormally()&lt;/code&gt;&lt;/a&gt; is true if a task completed without cancellation or encountering an exception; &lt;a href=&quot;future#isCancelled()&quot;&gt;&lt;code&gt;Future.isCancelled()&lt;/code&gt;&lt;/a&gt; is true if the task was cancelled (in which case &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; returns a &lt;a href=&quot;cancellationexception&quot;&gt;&lt;code&gt;CancellationException&lt;/code&gt;&lt;/a&gt;); and &lt;a href=&quot;#isCompletedAbnormally()&quot;&gt;&lt;code&gt;isCompletedAbnormally()&lt;/code&gt;&lt;/a&gt; is true if a task was either cancelled or encountered an exception, in which case &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; will return either the encountered exception or &lt;a href=&quot;cancellationexception&quot;&gt;&lt;code&gt;CancellationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">작업의 실행 상태는 여러 세부 수준에서 쿼리 될 수 있습니다. &lt;a href=&quot;future#isDone()&quot;&gt; &lt;code&gt;Future.isDone()&lt;/code&gt; &lt;/a&gt; 은 작업이 어떤 방식 으로든 완료되면 참입니다 (작업이 실행되지 않고 취소 된 경우 포함). &lt;a href=&quot;#isCompletedNormally()&quot;&gt; &lt;code&gt;isCompletedNormally()&lt;/code&gt; &lt;/a&gt; 는 작업이 취소없이 완료되거나 예외가 발생하는 경우 true입니다. 작업이 취소 된 경우 &lt;a href=&quot;future#isCancelled()&quot;&gt; &lt;code&gt;Future.isCancelled()&lt;/code&gt; &lt;/a&gt; 는 true입니다 (이 경우 &lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;cancellationexception&quot;&gt; &lt;code&gt;CancellationException&lt;/code&gt; 을&lt;/a&gt; 반환합니다 ). 및 &lt;a href=&quot;#isCompletedAbnormally()&quot;&gt; &lt;code&gt;isCompletedAbnormally()&lt;/code&gt; &lt;/a&gt; 작업 중 하나를 취소하는 경우있는 예외, 발생했을 경우 사실이다 &lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt; 만난 예외 또는 중 하나를 반환합니다 &lt;a href=&quot;cancellationexception&quot;&gt; &lt;code&gt;CancellationException&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61ee783ae0a4dbc146b63cabe4edc1f1f21887c6" translate="yes" xml:space="preserve">
          <source>The executor is intended to be used exclusively by the resulting asynchronous channel group. Termination of the group results in the orderly &lt;a href=&quot;../../util/concurrent/executorservice#shutdown()&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; of the executor service. Shutting down the executor service by other means results in unspecified behavior.</source>
          <target state="translated">실행 프로그램은 결과 비동기 채널 그룹에서만 독점적으로 사용됩니다. 그룹이 &lt;a href=&quot;../../util/concurrent/executorservice#shutdown()&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt; 되면 실행기 서비스 가 순서대로 종료 됩니다. 다른 방법으로 실행기 서비스를 종료하면 지정되지 않은 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f4d9dd131f37a7f42a4bcff42d9a1446d224c987" translate="yes" xml:space="preserve">
          <source>The executor is intended to be used exclusively by the resulting asynchronous channel group. Termination of the group results in the orderly &lt;a href=&quot;../../util/concurrent/executorservice#shutdown--&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; of the executor service. Shutting down the executor service by other means results in unspecified behavior.</source>
          <target state="translated">실행기는 결과 비동기 채널 그룹에 의해 독점적으로 사용됩니다. 그룹이 &lt;a href=&quot;../../util/concurrent/executorservice#shutdown--&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt; 되면 실행기 서비스 가 순서대로 종료 됩니다. 다른 방법으로 실행기 서비스를 종료하면 지정되지 않은 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0915fb17fd9a3deff60262d6dbbc9333b72ef7a6" translate="yes" xml:space="preserve">
          <source>The executor terminates, also resulting in task cancellation.</source>
          <target state="translated">실행 프로그램이 종료되고 작업이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="73d17b75ffdd10e82284de19837faa1af9e8f3a5" translate="yes" xml:space="preserve">
          <source>The existing exception will be embedded in the new one, and its message will become the default message for the SAXException.</source>
          <target state="translated">기존 예외가 새 예외에 포함되고 해당 메시지가 SAXException에 대한 기본 메시지가됩니다.</target>
        </trans-unit>
        <trans-unit id="6ab63fc8bf60cc8bbffa4c2deb5037bbfee50797" translate="yes" xml:space="preserve">
          <source>The existing exception will be embedded in the new one, but the new exception will have its own message.</source>
          <target state="translated">기존 예외는 새 예외에 포함되지만 새 예외에는 자체 메시지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="637065bc8425d8a004b128e7401327923a1d4e4a" translate="yes" xml:space="preserve">
          <source>The exit application default window close operation.</source>
          <target state="translated">종료 응용 프로그램 기본 창 닫기 작업입니다.</target>
        </trans-unit>
        <trans-unit id="dedf5604849e0a8d9f2e022a91d3d232a9319d36" translate="yes" xml:space="preserve">
          <source>The exit application default window close operation. Attempting to set this on Windows that support this, such as &lt;code&gt;JFrame&lt;/code&gt;, may throw a &lt;code&gt;SecurityException&lt;/code&gt; based on the &lt;code&gt;SecurityManager&lt;/code&gt;. It is recommended you only use this in an application.</source>
          <target state="translated">종료 응용 프로그램 기본 창 닫기 작업입니다. &lt;code&gt;JFrame&lt;/code&gt; 과 같이이를 지원하는 Windows에서이를 설정하려고 하면 &lt;code&gt;SecurityException&lt;/code&gt; 기반으로하는 &lt;code&gt;SecurityManager&lt;/code&gt; 발생할 수 있습니다 . 응용 프로그램에서만 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6b915efb7873bd4164652f10dbaeaabeafe4c12a" translate="yes" xml:space="preserve">
          <source>The expanded icon.</source>
          <target state="translated">확장 된 아이콘입니다.</target>
        </trans-unit>
        <trans-unit id="a2eb29e8b9fad3392d8398feee094f4bb641bc31" translate="yes" xml:space="preserve">
          <source>The expectation is that an instance of the &lt;code&gt;DOMImplementationLS&lt;/code&gt; interface can be obtained by using binding-specific casting methods on an instance of the &lt;code&gt;DOMImplementation&lt;/code&gt; interface or, if the &lt;code&gt;Document&lt;/code&gt; supports the feature &lt;code&gt;&quot;Core&quot;&lt;/code&gt; version &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; defined in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM Level 3 Core&lt;/a&gt;] , by using the method &lt;code&gt;DOMImplementation.getFeature&lt;/code&gt; with parameter values &lt;code&gt;&quot;LS&quot;&lt;/code&gt; (or &lt;code&gt;&quot;LS-Async&quot;&lt;/code&gt;) and &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; (respectively).</source>
          <target state="translated">기대는 인스턴스이다 &lt;code&gt;DOMImplementationLS&lt;/code&gt; 의 인터페이스는의 인스턴스 메소드를 주조 결합 특정 사용하여 얻을 수있다 &lt;code&gt;DOMImplementation&lt;/code&gt; 인터페이스 또는, 만약 &lt;code&gt;Document&lt;/code&gt; 기능 지원 &lt;code&gt;&quot;Core&quot;&lt;/code&gt; 버전 &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; 에 정의 된 [ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM 레벨 3 코어&lt;/a&gt; ] , 매개 변수 값 &lt;code&gt;&quot;LS&quot;&lt;/code&gt; (또는 &lt;code&gt;&quot;LS-Async&quot;&lt;/code&gt; ) 및 &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; (각각) 과 함께 &lt;code&gt;DOMImplementation.getFeature&lt;/code&gt; 메소드를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="b95150a7f4614bb2e61318b82bec3d2bd902d6cd" translate="yes" xml:space="preserve">
          <source>The expectation is that an instance of the &lt;code&gt;DOMImplementationLS&lt;/code&gt; interface can be obtained by using binding-specific casting methods on an instance of the &lt;code&gt;DOMImplementation&lt;/code&gt; interface or, if the &lt;code&gt;Document&lt;/code&gt; supports the feature &lt;code&gt;&quot;Core&quot;&lt;/code&gt; version &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; defined in [&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM Level 3 Core&lt;/a&gt;] , by using the method &lt;code&gt;DOMImplementation.getFeature&lt;/code&gt; with parameter values &lt;code&gt;&quot;LS&quot;&lt;/code&gt; (or &lt;code&gt;&quot;LS-Async&quot;&lt;/code&gt;) and &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; (respectively).</source>
          <target state="translated">기대는 인스턴스이다 &lt;code&gt;DOMImplementationLS&lt;/code&gt; 의 인터페이스는의 인스턴스 메소드를 주조 결합 특정 사용하여 얻을 수있다 &lt;code&gt;DOMImplementation&lt;/code&gt; 인터페이스 또는, 만약 &lt;code&gt;Document&lt;/code&gt; 기능 지원 &lt;code&gt;&quot;Core&quot;&lt;/code&gt; 버전 &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; 에 정의 된 [ &lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM 레벨 3 코어&lt;/a&gt; ] , 매개 변수 값 &lt;code&gt;&quot;LS&quot;&lt;/code&gt; (또는 &lt;code&gt;&quot;LS-Async&quot;&lt;/code&gt; ) 및 &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; (각각) 과 함께 &lt;code&gt;DOMImplementation.getFeature&lt;/code&gt; 메소드를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="113d39c71bb5eb793a0b83db2058fe276921d9eb" translate="yes" xml:space="preserve">
          <source>The expectation is that an instance of the &lt;code&gt;DocumentCSS&lt;/code&gt; interface can be obtained by using binding-specific casting methods on an instance of the &lt;code&gt;Document&lt;/code&gt; interface.</source>
          <target state="translated">기대는 인스턴스이다 &lt;code&gt;DocumentCSS&lt;/code&gt; 의 인터페이스의 인스턴스 메소드를 주조 결합 특정 사용함으로써 얻어 질 수 &lt;code&gt;Document&lt;/code&gt; 인터페이스.</target>
        </trans-unit>
        <trans-unit id="a95fbb190d5638fb3b30583cc67f264f46846fca" translate="yes" xml:space="preserve">
          <source>The expectation is that an instance of the &lt;code&gt;ViewCSS&lt;/code&gt; interface can be obtained by using binding-specific casting methods on an instance of the &lt;code&gt;AbstractView&lt;/code&gt; interface.</source>
          <target state="translated">기대는 인스턴스이다 &lt;code&gt;ViewCSS&lt;/code&gt; 의 인터페이스의 인스턴스에 바인딩 특정 캐스팅 방법을 사용하여 얻을 수있다 &lt;code&gt;AbstractView&lt;/code&gt; 인터페이스.</target>
        </trans-unit>
        <trans-unit id="2da0bfb56bb5ec3dd2ac18e35db3bfea4f467380" translate="yes" xml:space="preserve">
          <source>The expiration affects only the bundle loading process by the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; factory method. That is, if the factory method finds a resource bundle in the cache that has expired, the factory method calls the &lt;a href=&quot;#needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long)&quot;&gt;&lt;code&gt;needsReload&lt;/code&gt;&lt;/a&gt; method to determine whether the resource bundle needs to be reloaded. If &lt;code&gt;needsReload&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, the cached resource bundle instance is removed from the cache. Otherwise, the instance stays in the cache, updated with the new TTL value returned by this method.</source>
          <target state="translated">만료는 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 팩토리 메소드에 의한 번들로드 프로세스에만 영향을줍니다 . 즉, 팩토리 메서드가 만료 된 캐시에서 리소스 번들을 찾으면 팩토리 메서드는 &lt;a href=&quot;#needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long)&quot;&gt; &lt;code&gt;needsReload&lt;/code&gt; &lt;/a&gt; 메서드를 호출 하여 리소스 번들을 다시로드해야하는지 여부를 결정합니다. 경우 &lt;code&gt;needsReload&lt;/code&gt; 가 반환 &lt;code&gt;true&lt;/code&gt; , 예를 번들 캐시 된 리소스는 캐시에서 제거됩니다. 그렇지 않으면 인스턴스가 캐시에 유지되고이 메서드에서 반환 된 새 TTL 값으로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="d9d8f0bcf70d559439cda5ca1964e2a9c53e1f14" translate="yes" xml:space="preserve">
          <source>The expiration affects only the bundle loading process by the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; factory method. That is, if the factory method finds a resource bundle in the cache that has expired, the factory method calls the &lt;a href=&quot;resourcebundle.control#needsReload-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-java.util.ResourceBundle-long-&quot;&gt;&lt;code&gt;needsReload&lt;/code&gt;&lt;/a&gt; method to determine whether the resource bundle needs to be reloaded. If &lt;code&gt;needsReload&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, the cached resource bundle instance is removed from the cache. Otherwise, the instance stays in the cache, updated with the new TTL value returned by this method.</source>
          <target state="translated">만료는 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 팩토리 메소드에 의한 번들로드 프로세스에만 영향을줍니다 . 즉, 팩토리 메소드가 만료 된 캐시에서 자원 번들을 찾으면 팩토리 메소드는 &lt;a href=&quot;resourcebundle.control#needsReload-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-java.util.ResourceBundle-long-&quot;&gt; &lt;code&gt;needsReload&lt;/code&gt; &lt;/a&gt; 메소드를 호출 하여 자원 번들을 다시로드해야하는지 여부를 판별합니다. 경우 &lt;code&gt;needsReload&lt;/code&gt; 가 반환 &lt;code&gt;true&lt;/code&gt; , 예를 번들 캐시 된 리소스는 캐시에서 제거됩니다. 그렇지 않으면 인스턴스가 캐시에 유지되고이 메소드에서 리턴 한 새 TTL 값으로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="683879150a40c61e38bdd0eaf4e437759304d62b" translate="yes" xml:space="preserve">
          <source>The explicit purpose of this variation on the &lt;code&gt;createFont(int, File)&lt;/code&gt; method is to support font sources which represent a TrueType/OpenType font collection and be able to return all individual fonts in that collection. Consequently this method will throw &lt;code&gt;FontFormatException&lt;/code&gt; if the data source does not contain at least one TrueType/OpenType font. The same exception will also be thrown if any of the fonts in the collection does not contain the required font tables.</source>
          <target state="translated">&lt;code&gt;createFont(int, File)&lt;/code&gt; 메서드 에 대한이 변형의 명시적인 목적은 TrueType / OpenType 글꼴 컬렉션을 나타내는 글꼴 소스를 지원하고 해당 컬렉션의 모든 개별 글꼴을 반환 할 수 있도록하는 것입니다. &lt;code&gt;FontFormatException&lt;/code&gt; 메서드는 데이터 소스에 TrueType / OpenType 글꼴이 하나 이상 포함되어 있지 않으면 FontFormatException이 발생합니다. 컬렉션의 글꼴에 필요한 글꼴 테이블이없는 경우에도 동일한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2f7fb41a871d246f4fdde7907583f21de6ee40fc" translate="yes" xml:space="preserve">
          <source>The explicit purpose of this variation on the &lt;code&gt;createFont(int, InputStream)&lt;/code&gt; method is to support font sources which represent a TrueType/OpenType font collection and be able to return all individual fonts in that collection. Consequently this method will throw &lt;code&gt;FontFormatException&lt;/code&gt; if the data source does not contain at least one TrueType/OpenType font. The same exception will also be thrown if any of the fonts in the collection does not contain the required font tables.</source>
          <target state="translated">&lt;code&gt;createFont(int, InputStream)&lt;/code&gt; 메서드 에 대한이 변형의 명시적인 목적은 TrueType / OpenType 글꼴 컬렉션을 나타내는 글꼴 소스를 지원하고 해당 컬렉션의 모든 개별 글꼴을 반환 할 수 있도록하는 것입니다. &lt;code&gt;FontFormatException&lt;/code&gt; 메서드는 데이터 소스에 TrueType / OpenType 글꼴이 하나 이상 포함되어 있지 않으면 FontFormatException이 발생합니다. 컬렉션의 글꼴에 필요한 글꼴 테이블이없는 경우에도 동일한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2dc14daed0248ca40fd5504121c75a52196ab986" translate="yes" xml:space="preserve">
          <source>The explicit state of a matcher includes the start and end indices of the most recent successful match. It also includes the start and end indices of the input subsequence captured by each &lt;a href=&quot;pattern#cg&quot;&gt;capturing group&lt;/a&gt; in the pattern as well as a total count of such subsequences. As a convenience, methods are also provided for returning these captured subsequences in string form.</source>
          <target state="translated">매처의 명시 적 상태에는 가장 최근에 성공한 경기의 시작 및 끝 인덱스가 포함됩니다. 또한 패턴에서 각 &lt;a href=&quot;pattern#cg&quot;&gt;캡처 그룹&lt;/a&gt; 에 의해 캡처 된 입력 서브 시퀀스의 시작 및 종료 인덱스 와 이러한 서브 시퀀스의 총 수를 포함합니다. 편의상, 이러한 캡처 된 서브 시퀀스를 문자열 형태로 리턴하기위한 메소드도 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="e7b30369bd27defe750e02c533a376297b7fac15" translate="yes" xml:space="preserve">
          <source>The explicit state of a matcher is initially undefined; attempting to query any part of it before a successful match will cause an &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt; to be thrown. The explicit state of a matcher is recomputed by every match operation.</source>
          <target state="translated">매처의 명시 적 상태는 처음에 정의되지 않습니다. 일치하기 전에 해당 부분을 쿼리하려고하면 &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt; 이 발생합니다. 매처의 명시 적 상태는 모든 일치 조작에 의해 재 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="a3c7c1344d3645ede9619e20180ea6a536e509b1" translate="yes" xml:space="preserve">
          <source>The exponent consists of the character &lt;code&gt;'e'&lt;/code&gt; (&lt;code&gt;'\u0065'&lt;/code&gt;) or &lt;code&gt;'E'&lt;/code&gt; (&lt;code&gt;'\u0045'&lt;/code&gt;) followed by one or more decimal digits. The value of the exponent must lie between -&lt;a href=&quot;../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;../lang/integer#MIN_VALUE&quot;&gt;&lt;code&gt;Integer.MIN_VALUE&lt;/code&gt;&lt;/a&gt;+1) and &lt;a href=&quot;../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;, inclusive.</source>
          <target state="translated">지수는 문자 &lt;code&gt;'e'&lt;/code&gt; ( &lt;code&gt;'\u0065'&lt;/code&gt; ) 또는 &lt;code&gt;'E'&lt;/code&gt; ( &lt;code&gt;'\u0045'&lt;/code&gt; )와 하나 이상의 10 진수로 구성됩니다. - 지수의 값이 아니면 안됩니다 &lt;a href=&quot;../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;../lang/integer#MIN_VALUE&quot;&gt; &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; &lt;/a&gt; +1)과 &lt;a href=&quot;../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/a&gt; (포함).</target>
        </trans-unit>
        <trans-unit id="22cb2e2834e039174e52d5280adb7e843a000950" translate="yes" xml:space="preserve">
          <source>The export was implicitly declared in the source of the module declaration.</source>
          <target state="translated">내보내기는 모듈 선언의 소스에서 암시 적으로 선언되었습니다.</target>
        </trans-unit>
        <trans-unit id="bdb505c12ab3c537f37654a8d6eb008f47b8391c" translate="yes" xml:space="preserve">
          <source>The export was not explicitly or implicitly declared in the source of the module declaration.</source>
          <target state="translated">모듈 선언의 소스에서 내보내기가 명시 적으로 또는 암시 적으로 선언되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="ba1bbb5344514fa0674e6756fb7c32a4079b14c0" translate="yes" xml:space="preserve">
          <source>The exported constant &lt;a href=&quot;#DPI&quot;&gt;&lt;code&gt;DPI&lt;/code&gt;&lt;/a&gt; is actually the conversion factor by which to multiply a value in dpi to get the value in dphi. Likewise, the exported constant &lt;a href=&quot;#DPCM&quot;&gt;&lt;code&gt;DPCM&lt;/code&gt;&lt;/a&gt; is the conversion factor by which to multiply a value in dpcm to get the value in dphi. A client can specify a resolution value in units other than dpi or dpcm by supplying its own conversion factor. However, since the internal units of dphi was chosen with supporting only the external units of dpi and dpcm in mind, there is no guarantee that the conversion factor for the client's units will be an exact integer. If the conversion factor isn't an exact integer, resolution values in the client's units won't be stored precisely.</source>
          <target state="translated">내 보낸 상수 &lt;a href=&quot;#DPI&quot;&gt; &lt;code&gt;DPI&lt;/code&gt; &lt;/a&gt; 는 실제로 dphi 값을 얻기 위해 dpi 값을 곱하는 변환 계수입니다. 마찬가지로 내 보낸 상수 &lt;a href=&quot;#DPCM&quot;&gt; &lt;code&gt;DPCM&lt;/code&gt; &lt;/a&gt; 은 dphi 값을 얻기 위해 dpcm 값에 곱하는 변환 계수입니다. 클라이언트는 자체 변환 계수를 제공하여 dpi 또는 dpcm 이외의 단위로 해상도 값을 지정할 수 있습니다. 그러나 dphi의 내부 단위는 dpi 및 dpcm의 외부 단위 만 지원하도록 선택되었으므로 클라이언트 단위의 변환 계수가 정확한 정수라는 보장은 없습니다. 변환 계수가 정확한 정수가 아닌 경우 클라이언트 단위의 해상도 값이 정확하게 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d9e0ab1b5a3db4ff1da6ce513058b99030c385ab" translate="yes" xml:space="preserve">
          <source>The exported constant &lt;a href=&quot;#INCH&quot;&gt;&lt;code&gt;INCH&lt;/code&gt;&lt;/a&gt; is actually the conversion factor by which to multiply a value in inches to get the value in &amp;micro;m. Likewise, the exported constant &lt;a href=&quot;#MM&quot;&gt;&lt;code&gt;MM&lt;/code&gt;&lt;/a&gt; is the conversion factor by which to multiply a value in mm to get the value in &amp;micro;m. A client can specify a resolution value in units other than inches or mm by supplying its own conversion factor. However, since the internal units of &amp;micro;m was chosen with supporting only the external units of inch and mm in mind, there is no guarantee that the conversion factor for the client's units will be an exact integer. If the conversion factor isn't an exact integer, resolution values in the client's units won't be stored precisely.</source>
          <target state="translated">내 보낸 상수 &lt;a href=&quot;#INCH&quot;&gt; &lt;code&gt;INCH&lt;/code&gt; &lt;/a&gt; 는 실제로 &amp;micro;m 단위의 값을 얻기 위해 인치 단위의 값을 곱하는 변환 계수입니다. 마찬가지로 내 보낸 상수 &lt;a href=&quot;#MM&quot;&gt; &lt;code&gt;MM&lt;/code&gt; &lt;/a&gt; 은 &amp;micro;m 단위의 값을 얻기 위해 mm 단위의 값을 곱하는 변환 계수입니다. 클라이언트는 자체 변환 계수를 제공하여 인치 또는 mm 이외의 단위로 해상도 값을 지정할 수 있습니다. 그러나 &amp;micro;m의 내부 단위는 인치와 mm의 외부 단위 만 지원한다는 점을 염두에두고 선택 되었기 때문에 클라이언트 단위의 변환 계수가 정확한 정수라는 보장은 없습니다. 변환 계수가 정확한 정수가 아닌 경우 클라이언트 단위의 해상도 값이 정확하게 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f0533f2a29f52d331ec56f16f61c10c53b5897f4" translate="yes" xml:space="preserve">
          <source>The exported constant &lt;a href=&quot;resolutionsyntax#DPI&quot;&gt;&lt;code&gt;DPI&lt;/code&gt;&lt;/a&gt; is actually the conversion factor by which to multiply a value in dpi to get the value in dphi. Likewise, the exported constant &lt;a href=&quot;resolutionsyntax#DPCM&quot;&gt;&lt;code&gt;DPCM&lt;/code&gt;&lt;/a&gt; is the conversion factor by which to multiply a value in dpcm to get the value in dphi. A client can specify a resolution value in units other than dpi or dpcm by supplying its own conversion factor. However, since the internal units of dphi was chosen with supporting only the external units of dpi and dpcm in mind, there is no guarantee that the conversion factor for the client's units will be an exact integer. If the conversion factor isn't an exact integer, resolution values in the client's units won't be stored precisely.</source>
          <target state="translated">내 보낸 상수 &lt;a href=&quot;resolutionsyntax#DPI&quot;&gt; &lt;code&gt;DPI&lt;/code&gt; &lt;/a&gt; 는 실제로 dphi의 값을 얻기 위해 dpi의 값을 곱하는 변환 계수입니다. 마찬가지로, 내 보낸 상수 &lt;a href=&quot;resolutionsyntax#DPCM&quot;&gt; &lt;code&gt;DPCM&lt;/code&gt; &lt;/a&gt; 은 dphi의 값을 얻기 위해 dpcm의 값을 곱하는 변환 계수입니다. 클라이언트는 자체 변환 계수를 제공하여 dpi 또는 dpcm 이외의 단위로 해상도 값을 지정할 수 있습니다. 그러나 dpi의 내부 단위는 dpi와 dpcm의 외부 단위 만 지원하도록 선택되었으므로 클라이언트 단위의 변환 계수가 정확한 정수일 것이라는 보장은 없습니다. 변환 계수가 정확한 정수가 아닌 경우 클라이언트 단위의 분해능 값이 정확하게 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ffeca453b85f8c0c2115aaee678b47fadf06c73" translate="yes" xml:space="preserve">
          <source>The exported constant &lt;a href=&quot;size2dsyntax#INCH&quot;&gt;&lt;code&gt;INCH&lt;/code&gt;&lt;/a&gt; is actually the conversion factor by which to multiply a value in inches to get the value in &amp;micro;m. Likewise, the exported constant &lt;a href=&quot;size2dsyntax#MM&quot;&gt;&lt;code&gt;MM&lt;/code&gt;&lt;/a&gt; is the conversion factor by which to multiply a value in mm to get the value in &amp;micro;m. A client can specify a resolution value in units other than inches or mm by supplying its own conversion factor. However, since the internal units of &amp;micro;m was chosen with supporting only the external units of inch and mm in mind, there is no guarantee that the conversion factor for the client's units will be an exact integer. If the conversion factor isn't an exact integer, resolution values in the client's units won't be stored precisely.</source>
          <target state="translated">내 보낸 상수 &lt;a href=&quot;size2dsyntax#INCH&quot;&gt; &lt;code&gt;INCH&lt;/code&gt; &lt;/a&gt; 는 실제로 &amp;micro;m 단위의 값을 얻기 위해 인치 단위의 값을 곱하는 변환 계수입니다. 마찬가지로, 내 보낸 상수 &lt;a href=&quot;size2dsyntax#MM&quot;&gt; &lt;code&gt;MM&lt;/code&gt; &lt;/a&gt; 은 값을 mm 단위로 곱하여 &amp;micro;m 단위의 값을 얻는 변환 계수입니다. 클라이언트는 자체 변환 계수를 제공하여 인치 또는 mm 이외의 단위로 해상도 값을 지정할 수 있습니다. 그러나 인치와 밀리미터의 외부 단위 만 지원하도록 &amp;micro;m의 내부 단위를 선택 했으므로 클라이언트 단위의 변환 계수가 정확한 정수일 것이라는 보장은 없습니다. 변환 계수가 정확한 정수가 아닌 경우 클라이언트 단위의 분해능 값이 정확하게 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bd5f3309ccc2057ce1e6f32e3aa2d5bd529b30d6" translate="yes" xml:space="preserve">
          <source>The exported name is useful when used in large access control lists where the overhead of creating a &lt;code&gt;GSSName&lt;/code&gt; object on each name and invoking the equals method on each name from the ACL may be prohibitive.</source>
          <target state="translated">내 보낸 이름은 각 이름에 대해 &lt;code&gt;GSSName&lt;/code&gt; 객체를 생성 하고 ACL에서 각 이름에 대해 equals 메소드를 호출하는 오버 헤드 가 금지 될 수 있는 대규모 액세스 제어 목록에서 사용될 때 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="bc59d340ea1d8edf392f9599ad9de2d1cd0c7ff0" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;/foo/bar&lt;/code&gt; is an example of a location path. While XPath location paths resemble Unix-style file system paths, an important distinction is that XPath expressions return &lt;em&gt;all&lt;/em&gt; nodes that match the expression. Thus, all three &lt;code&gt;&amp;lt;bar&amp;gt;&lt;/code&gt; elements in the following document would be selected by the &lt;code&gt;/foo/bar&lt;/code&gt; expression:</source>
          <target state="translated">&lt;code&gt;/foo/bar&lt;/code&gt; 표현식 은 위치 경로의 예입니다. XPath 위치 경로는 Unix 스타일 파일 시스템 경로와 비슷하지만 중요한 차이점은 XPath 표현식 이 표현식과 일치하는 &lt;em&gt;모든&lt;/em&gt; 노드를 반환 한다는 것입니다. 따라서 다음 문서의 세 가지 &lt;code&gt;&amp;lt;bar&amp;gt;&lt;/code&gt; 요소는 모두 &lt;code&gt;/foo/bar&lt;/code&gt; 표현식에 의해 선택됩니다 .</target>
        </trans-unit>
        <trans-unit id="9983f8becda32e3c76ff137c9b312e802e0349f6" translate="yes" xml:space="preserve">
          <source>The expression is currently either a simple named reference to a variable (&lt;a href=&quot;snippet.subkind#VAR_VALUE_SUBKIND&quot;&gt;&lt;code&gt;Snippet.SubKind.VAR_VALUE_SUBKIND&lt;/code&gt;&lt;/a&gt;) or an assignment (both of which have natural referencing names) -- see &lt;a href=&quot;snippet.subkind&quot;&gt;&lt;code&gt;Snippet.SubKind&lt;/code&gt;&lt;/a&gt; to differentiate. All other expression forms (operators, method calls, ...) generate a scratch variable and so are instead of the VAR Kind.</source>
          <target state="translated">표현식은 현재 변수에 대한 단순 명명 된 참조 ( &lt;a href=&quot;snippet.subkind#VAR_VALUE_SUBKIND&quot;&gt; &lt;code&gt;Snippet.SubKind.VAR_VALUE_SUBKIND&lt;/code&gt; &lt;/a&gt; ) 또는 할당 (둘 다 자연 참조 이름이 있음) 입니다. 구별 하려면 &lt;a href=&quot;snippet.subkind&quot;&gt; &lt;code&gt;Snippet.SubKind&lt;/code&gt; &lt;/a&gt; 를 참조 하세요 . 다른 모든 표현식 형식 (연산자, 메서드 호출 등)은 스크래치 변수를 생성하므로 VAR 종류 대신 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="354a30d629ef1248aee3a6abac0f26fa957a6318" translate="yes" xml:space="preserve">
          <source>The extended GSSContext interface for supporting additional functionalities not defined by &lt;code&gt;org.ietf.jgss.GSSContext&lt;/code&gt;, such as querying context-specific attributes.</source>
          <target state="translated">컨텍스트 별 속성 쿼리와 같이 &lt;code&gt;org.ietf.jgss.GSSContext&lt;/code&gt; 로 정의되지 않은 추가 기능을 지원하기위한 확장 된 GSSContext 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="92f2e0e53cb6455d4da2e76e3e0fd81fe5c51084" translate="yes" xml:space="preserve">
          <source>The extended GSSCredential interface for supporting additional functionalities not defined by &lt;code&gt;org.ietf.jgss.GSSCredential&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;org.ietf.jgss.GSSCredential&lt;/code&gt; 에 정의되지 않은 추가 기능을 지원하기위한 확장 된 GSSCredential 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="f797bd4b5d3803bccb2bf4443971ca848ad473e5" translate="yes" xml:space="preserve">
          <source>The extension which (by convention) is normally used for this kind of file object.</source>
          <target state="translated">일반적으로 이런 종류의 파일 객체에 사용되는 확장자입니다.</target>
        </trans-unit>
        <trans-unit id="c526e4b628135ef20bb3ec78aeb7857b7e29b6f2" translate="yes" xml:space="preserve">
          <source>The extension which (by convention) is normally used for this kind of file object. If no convention exists, the empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) is used.</source>
          <target state="translated">일반적으로 이러한 종류의 파일 객체에 사용되는 확장명입니다. 규칙이 없으면 빈 문자열 ( &lt;code&gt;&quot;&quot;&lt;/code&gt; )이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b7077b0dc29af6cf86699b7e028c9503e4db51e1" translate="yes" xml:space="preserve">
          <source>The extension, or null if this locale defines no extension for the specified key.</source>
          <target state="translated">확장자.이 로케일이 지정된 키의 확장자를 정의하지 않는 경우는 null</target>
        </trans-unit>
        <trans-unit id="5a1dab9e41a5beec5f05c63e6ecb9a3afbdcbb0e" translate="yes" xml:space="preserve">
          <source>The extensions defined for X.509 v3 &lt;a href=&quot;x509certificate&quot;&gt;&lt;code&gt;Certificates&lt;/code&gt;&lt;/a&gt; and v2 &lt;a href=&quot;x509crl&quot;&gt;&lt;code&gt;CRLs&lt;/code&gt;&lt;/a&gt; (Certificate Revocation Lists) provide methods for associating additional attributes with users or public keys, for managing the certification hierarchy, and for managing CRL distribution. The X.509 extensions format also allows communities to define private extensions to carry information unique to those communities.</source>
          <target state="translated">X.509 v3 &lt;a href=&quot;x509certificate&quot;&gt; &lt;code&gt;Certificates&lt;/code&gt; &lt;/a&gt; 및 v2 &lt;a href=&quot;x509crl&quot;&gt; &lt;code&gt;CRLs&lt;/code&gt; &lt;/a&gt; (인증서 해지 목록)에 대해 정의 된 확장 기능은 추가 속성을 사용자 또는 공개 키와 연결하고 인증 계층을 관리하고 CRL 배포를 관리하는 방법을 제공합니다. X.509 확장 형식을 사용하면 커뮤니티가 개인 확장을 정의하여 해당 커뮤니티에 고유 한 정보를 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef70034c532ebffee8e66aca3f214a22c5e40a15" translate="yes" xml:space="preserve">
          <source>The facility that a disconnected &lt;code&gt;RowSet&lt;/code&gt; object calls on to populate itself with rows of data.</source>
          <target state="translated">연결이 끊어진 &lt;code&gt;RowSet&lt;/code&gt; 개체가 데이터 행으로 자신을 채우기 위해 호출 하는 기능입니다 .</target>
        </trans-unit>
        <trans-unit id="72202a3ad0c147eaa41c7897c87ffc243071ccbc" translate="yes" xml:space="preserve">
          <source>The facility that a disconnected &lt;code&gt;RowSet&lt;/code&gt; object calls on to populate itself with rows of data. A reader (an object implementing the &lt;code&gt;RowSetReader&lt;/code&gt; interface) may be registered with a &lt;code&gt;RowSet&lt;/code&gt; object that supports the reader/writer paradigm. When the &lt;code&gt;RowSet&lt;/code&gt; object's &lt;code&gt;execute&lt;/code&gt; method is called, it in turn calls the reader's &lt;code&gt;readData&lt;/code&gt; method.</source>
          <target state="translated">연결이 끊어진 &lt;code&gt;RowSet&lt;/code&gt; 개체가 데이터 행으로 자신을 채우기 위해 호출 하는 기능입니다 . 판독기 ( &lt;code&gt;RowSetReader&lt;/code&gt; 인터페이스를 구현하는 객체 )는 판독기 / 기록기 패러다임을 지원 하는 &lt;code&gt;RowSet&lt;/code&gt; 객체에 등록 될 수 있습니다 . 때 &lt;code&gt;RowSet&lt;/code&gt; 객체의 &lt;code&gt;execute&lt;/code&gt; 메소드가 호출 될 때, 그것은 결국 독자의 호출 &lt;code&gt;readData&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="0664d9fe950364ce2964d5f524212ff501587b8c" translate="yes" xml:space="preserve">
          <source>The fact that a client connection object is in this internal list does not prevent it from being garbage collected.</source>
          <target state="translated">클라이언트 연결 개체가이 내부 목록에 있다고해서 가비지 수집을 방해하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="21ce72be6b52dbd64592f3385a8d86f3fe793972" translate="yes" xml:space="preserve">
          <source>The factory is used by the service provider to return controls that it reads from the LDAP protocol as specialized control classes. Without this mechanism, the provider would be returning controls that only contained data in BER encoded format.</source>
          <target state="translated">팩토리는 서비스 제공자가 LDAP 프로토콜에서 읽은 제어를 특수 제어 클래스로 리턴하기 위해 사용됩니다. 이 메커니즘이 없으면 공급자는 BER 인코딩 형식의 데이터 만 포함 된 컨트롤을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="35b84653a32f1a9f17fa155fd0e0418d7e8f354a" translate="yes" xml:space="preserve">
          <source>The factory methods limit access to ProcessHandles using the SecurityManager checking the &lt;a href=&quot;runtimepermission&quot;&gt;&lt;code&gt;RuntimePermission(&quot;manageProcess&quot;)&lt;/code&gt;&lt;/a&gt;. The ability to control processes is also restricted by the native system, ProcessHandle provides no more access to, or control over, the native process than would be allowed by a native application.</source>
          <target state="translated">팩토리 메소드는 &lt;a href=&quot;runtimepermission&quot;&gt; &lt;code&gt;RuntimePermission(&quot;manageProcess&quot;)&lt;/code&gt; 를&lt;/a&gt; 확인하는 SecurityManager를 사용하여 ProcessHandles에 대한 액세스를 제한합니다 . 프로세스를 제어하는 ​​기능도 기본 시스템에 의해 제한되며 ProcessHandle은 기본 응용 프로그램에서 허용하는 것보다 기본 프로세스에 대한 액세스 또는 제어를 더 이상 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e6c42fd94f3fbd0037101f65af16abb9630b8269" translate="yes" xml:space="preserve">
          <source>The factory methods on a &lt;code&gt;Lookup&lt;/code&gt; object correspond to all major use cases for methods, constructors, and fields. Each method handle created by a factory method is the functional equivalent of a particular &lt;em&gt;bytecode behavior&lt;/em&gt;. (Bytecode behaviors are described in section 5.4.3.5 of the Java Virtual Machine Specification.) Here is a summary of the correspondence between these factory methods and the behavior of the resulting method handles:</source>
          <target state="translated">&lt;code&gt;Lookup&lt;/code&gt; 개체 의 팩토리 메서드 는 메서드, 생성자 및 필드에 대한 모든 주요 사용 사례에 해당합니다. 팩토리 메서드에 의해 생성 된 각 메서드 핸들은 특정 &lt;em&gt;바이트 코드 동작&lt;/em&gt; 과 기능적으로 동일 합니다. (바이트 코드 동작은 Java 가상 머신 사양의 섹션 5.4.3.5에 설명되어 있습니다.) 다음은 이러한 팩토리 메서드와 결과 메서드 핸들 동작 간의 대응에 대한 요약입니다.</target>
        </trans-unit>
        <trans-unit id="b5a2c92a2eca28e67f326ce843048d8b7bd41378" translate="yes" xml:space="preserve">
          <source>The factory methods on a &lt;code&gt;Lookup&lt;/code&gt; object correspond to all major use cases for methods, constructors, and fields. Each method handle created by a factory method is the functional equivalent of a particular &lt;em&gt;bytecode behavior&lt;/em&gt;. (Bytecode behaviors are described in section 5.4.3.5 of the Java Virtual Machine Specification.) Here is a summary of the correspondence between these factory methods and the behavior the resulting method handles:</source>
          <target state="translated">&lt;code&gt;Lookup&lt;/code&gt; 객체 의 팩토리 메소드 는 메소드, 생성자 및 필드의 모든 주요 사용 사례에 해당합니다. 팩토리 메소드에 의해 작성된 각 메소드 핸들은 특정 &lt;em&gt;바이트 코드 동작&lt;/em&gt; 과 기능적으로 같습니다 . (바이트 코드 동작은 Java Virtual Machine Specification의 5.4.3.5 섹션에 설명되어 있습니다.) 다음은 이러한 팩토리 메소드와 결과 메소드가 처리하는 동작 사이의 대응에 대한 요약입니다.</target>
        </trans-unit>
        <trans-unit id="3ad62b009c6a96813accb45070b9d93a7dd077f7" translate="yes" xml:space="preserve">
          <source>The factory methods on a &lt;code&gt;Lookup&lt;/code&gt; object correspond to all major use cases for methods, constructors, and fields. Each method handle created by a factory method is the functional equivalent of a particular &lt;em&gt;bytecode behavior&lt;/em&gt;. (Bytecode behaviors are described in section &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.3.5&quot;&gt;5.4.3.5&lt;/a&gt; of the Java Virtual Machine Specification.) Here is a summary of the correspondence between these factory methods and the behavior of the resulting method handles:</source>
          <target state="translated">&lt;code&gt;Lookup&lt;/code&gt; 개체 의 팩토리 메서드 는 메서드, 생성자 및 필드에 대한 모든 주요 사용 사례에 해당합니다. 팩토리 메서드에 의해 생성 된 각 메서드 핸들은 특정 &lt;em&gt;바이트 코드 동작&lt;/em&gt; 과 기능적으로 동일 합니다. (바이트 코드 동작은 Java 가상 머신 사양의 섹션 &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.3.5&quot;&gt;5.4.3.5&lt;/a&gt; 에 설명되어 있습니다 .) 다음은 이러한 팩토리 메서드와 결과 메서드 핸들 동작 간의 대응에 대한 요약입니다.</target>
        </trans-unit>
        <trans-unit id="3669df2b0d8feae5a747749ca77262d7e06c86a2" translate="yes" xml:space="preserve">
          <source>The family name of a font is font specific. Two fonts such as Helvetica Italic and Helvetica Bold have the same family name,</source>
          <target state="translated">글꼴의 패밀리 이름은 글꼴에 따라 다릅니다. Helvetica Italic 및 Helvetica Bold와 같은 두 글꼴은 동일한 족 이름을 가지고 있습니다.</target>
        </trans-unit>
        <trans-unit id="af8935690a4466165d81f669e4a0337a589c7982" translate="yes" xml:space="preserve">
          <source>The feature name is any fully-qualified URI. It is possible for a &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; to expose a feature value but to be unable to change the current value.</source>
          <target state="translated">기능 이름은 정규화 된 URI입니다. A에 대한 것이 가능하다 &lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; 를이&lt;/a&gt; 기능의 값을 표시 할 수 있습니다 만, 현재의 값을 변경할 수 없습니다 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e25f173633d1d3213d95f0ba8615c555662068fc" translate="yes" xml:space="preserve">
          <source>The feature name is any fully-qualified URI. It is possible for a &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; to recognize a feature name but temporarily be unable to return its value.</source>
          <target state="translated">기능 이름은 정규화 된 URI입니다. A에 대한 것이 가능하다 &lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; 를이&lt;/a&gt; 기능의 이름을 인식 할 수 있습니다 만, 일시적으로 그 값을 돌려 줄 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0048d169a23d75a602733bc3c158bb3bb6facf07" translate="yes" xml:space="preserve">
          <source>The feature name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;/a&gt; to expose a feature value but to be unable to change the current value. Some feature values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.</source>
          <target state="translated">기능 이름은 정규화 된 URI입니다. A에 대한 것이 가능 &lt;a href=&quot;validator&quot;&gt; &lt;code&gt;Validator&lt;/code&gt; &lt;/a&gt; 기능의 값을 표시 할 수 있습니다 만, 현재의 값을 변경할 수 없습니다 수 있습니다. 일부 특성 값은 유효성 검사 전, 도중 또는 후와 같은 특정 컨텍스트에서만 변경할 수 없거나 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d91d67590ac33f4ffa2c013b9f240cf25685b1c4" translate="yes" xml:space="preserve">
          <source>The feature name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;/a&gt; to recognize a feature name but temporarily be unable to return its value. Some feature values may be available only in specific contexts, such as before, during, or after a validation.</source>
          <target state="translated">기능 이름은 정규화 된 URI입니다. A에 대한 것이 가능 &lt;a href=&quot;validator&quot;&gt; &lt;code&gt;Validator&lt;/code&gt; &lt;/a&gt; 기능 명을 인식 할 수 있습니다 만, 일시적으로 그 값을 돌려 줄 수 없습니다. 일부 기능 값은 유효성 검사 전, 도중 또는 후에와 같은 특정 컨텍스트에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="949080a2f1cca3e0a76865e4f76dc667c938f1af" translate="yes" xml:space="preserve">
          <source>The feature name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; to recognize a feature name but temporarily be unable to return its value. Some feature values may be available only in specific contexts, such as before, during, or after a validation.</source>
          <target state="translated">기능 이름은 정규화 된 URI입니다. A에 대한 것이 가능 &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt; 기능 명을 인식 할 수 있습니다 만, 일시적으로 그 값을 돌려 줄 수 없습니다. 일부 기능 값은 유효성 검사 전, 도중 또는 후에와 같은 특정 컨텍스트에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfc5e4c752e9cf392e8c989784b55f720c750e9b" translate="yes" xml:space="preserve">
          <source>The feature name is any fully-qualified URI. It is possible for an XMLReader to expose a feature value but to be unable to change the current value. Some feature values may be immutable or mutable only in specific contexts, such as before, during, or after a parse.</source>
          <target state="translated">기능 이름은 정규화 된 URI입니다. XMLReader가 기능 값을 노출 할 수 있지만 현재 값을 변경할 수는 없습니다. 일부 특성 값은 구문 분석 전, 중 또는 후와 같은 특정 컨텍스트에서만 변경 불가능하거나 변경 가능할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ef42c41248d6e2857b1d6c2a1ffc761e5328ccf" translate="yes" xml:space="preserve">
          <source>The feature name is any fully-qualified URI. It is possible for an XMLReader to recognize a feature name but temporarily be unable to return its value. Some feature values may be available only in specific contexts, such as before, during, or after a parse. Also, some feature values may not be programmatically accessible. (In the case of an adapter for SAX1 &lt;a href=&quot;parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt;, there is no implementation-independent way to expose whether the underlying parser is performing validation, expanding external entities, and so forth.)</source>
          <target state="translated">기능 이름은 정규화 된 URI입니다. XMLReader가 기능 이름을 인식 할 수 있지만 일시적으로 해당 값을 반환 할 수 없습니다. 일부 기능 값은 구문 분석 전, 중 또는 후와 같은 특정 컨텍스트에서만 사용할 수 있습니다. 또한 일부 기능 값은 프로그래밍 방식으로 액세스 할 수 없습니다. (SAX1 &lt;a href=&quot;parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt; 용 어댑터의 경우 기본 파서가 유효성 검사를 수행하는지, 외부 엔티티를 확장하는지 등을 노출하는 구현 독립적 인 방법이 없습니다.)</target>
        </trans-unit>
        <trans-unit id="b91218e70f871a17a2f6362660e1e868c721d3f4" translate="yes" xml:space="preserve">
          <source>The ffi ligature is not a distinct semantic character, and strictly speaking it shouldn't be in Unicode at all, but it was included for compatibility with existing character sets that already provided it. The Unicode standard identifies such characters by giving them &quot;compatibility&quot; decompositions into the corresponding semantic characters. When sorting and searching, you will often want to use these mappings.</source>
          <target state="translated">ffi 합자는 고유 한 의미 론적 문자가 아니며 엄격하게 말해서 전혀 유니 코드로되어서는 안되지만 이미 제공 한 기존 문자 세트와의 호환성을 위해 포함되었습니다. 유니 코드 표준은 해당하는 시맨틱 문자로 &quot;호환성&quot;분해를 제공하여 이러한 문자를 식별합니다. 정렬 및 검색 할 때 종종 이러한 매핑을 사용하려고합니다.</target>
        </trans-unit>
        <trans-unit id="fc1056366c58e729dc6afba4a88b156e84cb7c50" translate="yes" xml:space="preserve">
          <source>The field has a range that matches &lt;a href=&quot;../localdate#MAX&quot;&gt;&lt;code&gt;LocalDate.MAX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../localdate#MIN&quot;&gt;&lt;code&gt;LocalDate.MIN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">필드는 &lt;a href=&quot;../localdate#MAX&quot;&gt; &lt;code&gt;LocalDate.MAX&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../localdate#MIN&quot;&gt; &lt;code&gt;LocalDate.MIN&lt;/code&gt; &lt;/a&gt; 과 일치하는 범위를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="712e6cc0a25fd23aff0938900316cf865ad97a3d" translate="yes" xml:space="preserve">
          <source>The field is set to the possibly unwrapped and widened new value.</source>
          <target state="translated">이 필드는 랩핑되지 않고 확장 된 새 값으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="ec741d1bc5da33c15fd4cf9fae30220bb200e38a" translate="yes" xml:space="preserve">
          <source>The field that represents the day-of-quarter.</source>
          <target state="translated">분기를 나타내는 필드입니다.</target>
        </trans-unit>
        <trans-unit id="8b7d9fb854224c991ea3360c6b4c23f03fd566dd" translate="yes" xml:space="preserve">
          <source>The field that represents the quarter-of-year.</source>
          <target state="translated">분기를 나타내는 필드입니다.</target>
        </trans-unit>
        <trans-unit id="795dbdb11ae198b5c6c80f4f325863a9203509aa" translate="yes" xml:space="preserve">
          <source>The field that represents the week-based-year.</source>
          <target state="translated">주별 연도를 나타내는 필드입니다.</target>
        </trans-unit>
        <trans-unit id="b9b5cb4820b010459b1459912d80e5cb74d3e0ec" translate="yes" xml:space="preserve">
          <source>The field that represents the week-of-week-based-year.</source>
          <target state="translated">주별 연도를 나타내는 필드입니다.</target>
        </trans-unit>
        <trans-unit id="834baa107830e85ae99531915176dbb04eccdac0" translate="yes" xml:space="preserve">
          <source>The field to be reflected is determined by the algorithm that follows. Let C be the class or interface represented by this &lt;code&gt;Class&lt;/code&gt; object:</source>
          <target state="translated">반영 할 필드는 다음 알고리즘에 의해 결정됩니다. C를이 &lt;code&gt;Class&lt;/code&gt; 객체가 나타내는 클래스 또는 인터페이스라고 합니다.</target>
        </trans-unit>
        <trans-unit id="11a83d8eda116d371253332d6166c5c806d645ad" translate="yes" xml:space="preserve">
          <source>The field to be reflected is determined by the algorithm that follows. Let C be the class or interface represented by this object:</source>
          <target state="translated">반영 될 필드는 다음 알고리즘에 의해 결정됩니다. C를이 객체가 나타내는 클래스 또는 인터페이스라고하자.</target>
        </trans-unit>
        <trans-unit id="3065ed970efb34e44cb7669dd9013a7609717b99" translate="yes" xml:space="preserve">
          <source>The field value will be validated before it is set. If it is not valid, then an exception will be thrown. If the arrays are empty, then no change will take effect.</source>
          <target state="translated">필드 값은 설정되기 전에 확인됩니다. 유효하지 않은 경우 예외가 발생합니다. 배열이 비어 있으면 변경 사항이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f4511f22417eeea0c45d403aa99ec6c4e5f493b0" translate="yes" xml:space="preserve">
          <source>The field value will be validated before it is set. If it is not valid, then an exception will be thrown. The meaning of validity is dependent on the descriptor implementation.</source>
          <target state="translated">필드 값은 설정되기 전에 확인됩니다. 유효하지 않은 경우 예외가 발생합니다. 유효성의 의미는 설명자 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="f4f3c25408da24ec64080897e774ca4ee83c6a8b" translate="yes" xml:space="preserve">
          <source>The field works using double dispatch. Client code calls methods on a date-time like &lt;code&gt;LocalDateTime&lt;/code&gt; which check if the field is a &lt;code&gt;ChronoField&lt;/code&gt;. If it is, then the date-time must handle it. Otherwise, the method call is re-dispatched to the matching method in this interface.</source>
          <target state="translated">이 필드는 이중 디스패치를 ​​사용하여 작동합니다. 클라이언트 코드 는 필드가 &lt;code&gt;ChronoField&lt;/code&gt; 인지 확인하는 &lt;code&gt;LocalDateTime&lt;/code&gt; 과 같은 날짜-시간에 메소드를 호출합니다 . 그렇다면 날짜-시간이 처리해야합니다. 그렇지 않은 경우, 메소드 호출은이 인터페이스에서 일치하는 메소드로 다시 디스패치됩니다.</target>
        </trans-unit>
        <trans-unit id="e4839ebe0ad3becd201658aabfeaad5b34a64e2c" translate="yes" xml:space="preserve">
          <source>The fields and methods of class &lt;code&gt;Character&lt;/code&gt; are defined in terms of character information from the Unicode Standard, specifically the</source>
          <target state="translated">&lt;code&gt;Character&lt;/code&gt; 클래스의 필드와 메서드 는 유니 코드 표준의 문자 정보, 특히</target>
        </trans-unit>
        <trans-unit id="d2445e43410c56b93c9fa902256806bdd8ac4225" translate="yes" xml:space="preserve">
          <source>The fields are defined as follows:</source>
          <target state="translated">필드는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="3950e6b64e221a1449f2c57aec2e0333531ef343" translate="yes" xml:space="preserve">
          <source>The fields are implemented relative to &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. The fields are supported, and can be queried and set if &lt;code&gt;EPOCH_DAY&lt;/code&gt; is available. The fields work with all chronologies.</source>
          <target state="translated">필드는 &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; 에&lt;/a&gt; 상대적으로 구현됩니다 . 이 필드는 지원되며 &lt;code&gt;EPOCH_DAY&lt;/code&gt; 가 사용 가능한 경우 쿼리하고 설정할 수 있습니다. 이 필드는 모든 연대기에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="416b3833cc7cce95a21e499f3289802c5a8cb7d0" translate="yes" xml:space="preserve">
          <source>The fields declared in this class may evolve over time, in line with the results of the &lt;a href=&quot;#values()&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; method. However, there is not necessarily a 1:1 correspondence between the fields and the singleton instances., The Japanese government may announce a new era and define its start date but not its official name. In this scenario, the singleton instance that represents the new era may return a name that is not stable until the official name is defined. Developers should exercise caution when relying on the name returned by any singleton instance that does not correspond to a public static final field.</source>
          <target state="translated">이 클래스에서 선언 된 필드는 &lt;a href=&quot;#values()&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; 메서드 의 결과에 따라 시간이 지남에 따라 발전 할 수 있습니다 . 그러나 필드와 싱글 톤 인스턴스간에 반드시 1 : 1 통신이 필요한 것은 아닙니다. 일본 정부는 새로운 시대를 발표하고 시작 날짜를 정의 할 수 있지만 공식 명칭은 아닙니다. 이 시나리오에서 새로운 시대를 나타내는 싱글 톤 인스턴스는 공식 이름이 정의 될 때까지 안정적이지 않은 이름을 반환 할 수 있습니다. 개발자는 공개 정적 최종 필드에 해당하지 않는 싱글 톤 인스턴스에서 반환 된 이름을 사용할 때주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="199b733d0ffa6832d77eb936ddcc1d5a1518b3c2" translate="yes" xml:space="preserve">
          <source>The fields in the descriptor are defined, but not limited to, the following. Note that when the Type in this table is Number, a String that is the decimal representation of a Long can also be used.</source>
          <target state="translated">디스크립터의 필드는 다음과 같이 정의되지만 이에 국한되지는 않습니다. 이 테이블의 Type이 Number 인 경우 Long의 10 진수 표시 인 String도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7aaadf5bb6f708c9bde8a8c259cf01d22980be49" translate="yes" xml:space="preserve">
          <source>The fields look-and-feel implementation manages the values of the minimum, maximum, and extent properties on the &lt;code&gt;BoundedRangeModel&lt;/code&gt;.</source>
          <target state="translated">필드 룩앤필 구현은 &lt;code&gt;BoundedRangeModel&lt;/code&gt; 의 최소값, 최대 값 및 범위 속성 값을 관리합니다 .</target>
        </trans-unit>
        <trans-unit id="099b596e3512e7c46df50b765ec430971ea0930b" translate="yes" xml:space="preserve">
          <source>The fifth and later elements of a version number are free for use by platform implementors, to identify implementor-specific patch releases.</source>
          <target state="translated">버전 번호의 다섯 번째 및 이후 요소는 구현 자별 패치 릴리스를 식별하기 위해 플랫폼 구현자가 무료로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="77a383d343c59d3896d5803d4ffc93f25fe7eded" translate="yes" xml:space="preserve">
          <source>The file MyResources_fr_CH.properties is never used because it is hidden by the MyResources_fr_CH.class. Likewise, MyResources.properties is also hidden by MyResources.class.</source>
          <target state="translated">MyResources_fr_CH.properties 파일은 MyResources_fr_CH.class에 의해 숨겨져 있으므로 사용되지 않습니다. 마찬가지로 MyResources.properties도 MyResources.class에 의해 숨겨집니다.</target>
        </trans-unit>
        <trans-unit id="460768a160dbe254fd47bae9a1c6fbf466aa407e" translate="yes" xml:space="preserve">
          <source>The file and its description are available from the Unicode Consortium at:</source>
          <target state="translated">파일 및 설명은 다음 유니 코드 컨소시엄에서 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="f251bc6a4d2b0bde005fe4027e04e7ba955f80f7" translate="yes" xml:space="preserve">
          <source>The file attributes are retrieved from the file system as a &lt;em&gt;bulk operation&lt;/em&gt; by invoking the &lt;a href=&quot;#readAttributes()&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method. This class also defines the &lt;a href=&quot;#setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)&quot;&gt;&lt;code&gt;setTimes&lt;/code&gt;&lt;/a&gt; method to update the file's time attributes.</source>
          <target state="translated">파일 속성은 &lt;a href=&quot;#readAttributes()&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 파일 시스템에서 &lt;em&gt;대량 작업&lt;/em&gt; 으로 검색됩니다 . 이 클래스는 파일의 시간 속성을 업데이트하는 &lt;a href=&quot;#setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)&quot;&gt; &lt;code&gt;setTimes&lt;/code&gt; &lt;/a&gt; 메소드 도 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="d38047699bda15b24d821107e47230d44ea40f06" translate="yes" xml:space="preserve">
          <source>The file attributes are retrieved from the file system as a &lt;em&gt;bulk operation&lt;/em&gt; by invoking the &lt;a href=&quot;basicfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method. This class also defines the &lt;a href=&quot;basicfileattributeview#setTimes-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-&quot;&gt;&lt;code&gt;setTimes&lt;/code&gt;&lt;/a&gt; method to update the file's time attributes.</source>
          <target state="translated">&lt;a href=&quot;basicfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 &lt;em&gt;대량&lt;/em&gt; 속성으로 파일 시스템에서 파일 속성을 검색합니다 . 이 클래스는 또한 파일의 시간 속성을 업데이트하기 위해 &lt;a href=&quot;basicfileattributeview#setTimes-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-&quot;&gt; &lt;code&gt;setTimes&lt;/code&gt; &lt;/a&gt; 메소드를 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="3d0ad957ceac44bd60f317f1b1648150ac44473f" translate="yes" xml:space="preserve">
          <source>The file channel, or &lt;code&gt;null&lt;/code&gt; if the file lock was not acquired by a file channel.</source>
          <target state="translated">파일 채널. 파일 채널 이 파일 잠금을 얻지 못한 경우 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="500deb1ea9502c9ecef51d1cffe190f21f116b2f" translate="yes" xml:space="preserve">
          <source>The file contents must not change between the time this object is constructed and the time of the last call to a read method.</source>
          <target state="translated">파일 내용은이 객체가 생성 된 시간과 마지막으로 read 메소드를 호출 한 시간 사이에서 변경되어서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="3117d2550b74f219a5e4412223eb2945551e2f2b" translate="yes" xml:space="preserve">
          <source>The file contents should not be modified during the execution of the terminal stream operation. Otherwise, the result of the terminal stream operation is undefined.</source>
          <target state="translated">터미널 스트림 작업을 실행하는 동안 파일 내용을 수정해서는 안됩니다. 그렇지 않으면 터미널 스트림 작업의 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6987d175ec15b9fcb76b79ad3971d92541e405c9" translate="yes" xml:space="preserve">
          <source>The file creation methods take a variable number of arguments to allow the &lt;em&gt;originating elements&lt;/em&gt; to be provided as hints to the tool infrastructure to better manage dependencies. The originating elements are the types or packages (representing &lt;code&gt;
 package-info&lt;/code&gt; files) or modules (representing &lt;code&gt;
 module-info&lt;/code&gt; files) which caused an annotation processor to attempt to create a new file. For example, if an annotation processor tries to create a source file, &lt;code&gt;
 GeneratedFromUserSource&lt;/code&gt;, in response to processing</source>
          <target state="translated">The file creation methods take a variable number of arguments to allow the &lt;em&gt;originating elements&lt;/em&gt; to be provided as hints to the tool infrastructure to better manage dependencies. The originating elements are the types or packages (representing &lt;code&gt; package-info&lt;/code&gt; files) or modules (representing &lt;code&gt; module-info&lt;/code&gt; files) which caused an annotation processor to attempt to create a new file. For example, if an annotation processor tries to create a source file, &lt;code&gt; GeneratedFromUserSource&lt;/code&gt; , in response to processing</target>
        </trans-unit>
        <trans-unit id="6abc4cd51296b6f0da0c0a949b11937dfb0ddb48" translate="yes" xml:space="preserve">
          <source>The file creation methods take a variable number of arguments to allow the &lt;em&gt;originating elements&lt;/em&gt; to be provided as hints to the tool infrastructure to better manage dependencies. The originating elements are the types or packages (representing &lt;code&gt;package-info&lt;/code&gt; files) which caused an annotation processor to attempt to create a new file. For example, if an annotation processor tries to create a source file, &lt;code&gt;GeneratedFromUserSource&lt;/code&gt;, in response to processing</source>
          <target state="translated">파일 생성 방법은 다양한 &lt;em&gt;요소&lt;/em&gt; 를 사용하여 &lt;em&gt;시작 요소&lt;/em&gt; 를 도구 인프라에 힌트로 제공하여 종속성을보다 잘 관리 할 수 ​​있습니다. 시작 요소는 어노테이션 프로세서가 새 파일을 작성하게하는 유형 또는 패키지 ( &lt;code&gt;package-info&lt;/code&gt; 파일을 나타냄)입니다. 예를 들어, 주석 처리기가 처리에 응답하여 소스 파일 &lt;code&gt;GeneratedFromUserSource&lt;/code&gt; 를 작성하려고하면</target>
        </trans-unit>
        <trans-unit id="67561e9ae30efb52fd2ccb565fc1f4c64205ef9b" translate="yes" xml:space="preserve">
          <source>The file denoted by the returned abstract pathname did not exist before this method was invoked, and</source>
          <target state="translated">이 메소드를 호출하기 전에 리턴 된 추상 경로 이름으로 표시된 파일이 존재하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="9aa2ea757056f97f63f34c1ea5a82cce074962fc" translate="yes" xml:space="preserve">
          <source>The file descriptor object for this socket.</source>
          <target state="translated">이 소켓의 파일 기술자 객체입니다.</target>
        </trans-unit>
        <trans-unit id="7314353b4cf774f72ba9ddad96690ede6bed41df" translate="yes" xml:space="preserve">
          <source>The file descriptor object.</source>
          <target state="translated">파일 기술자 객체.</target>
        </trans-unit>
        <trans-unit id="f09dc1410e94ff66898b33b377f334bb2824ec23" translate="yes" xml:space="preserve">
          <source>The file key returned by this method can only be guaranteed to be unique if the file system and files remain static. Whether a file system re-uses identifiers after a file is deleted is implementation dependent and therefore unspecified.</source>
          <target state="translated">이 방법으로 반환 된 파일 키는 파일 시스템과 파일이 정적으로 유지되는 경우에만 고유 할 수 있습니다. 파일이 삭제 된 후 파일 시스템이 식별자를 재사용하는지 여부는 구현에 따라 다르므로 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f25f321f8eb0a82b7ff487834df19c31087676d0" translate="yes" xml:space="preserve">
          <source>The file manager returned by calling &lt;a href=&quot;documentationtool#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;&lt;code&gt;getStandardFileManager&lt;/code&gt;&lt;/a&gt; on this tool supports paths provided by any &lt;a href=&quot;../../../java.base/java/nio/file/filesystem&quot;&gt;filesystem&lt;/a&gt;.</source>
          <target state="translated">The file manager returned by calling &lt;a href=&quot;documentationtool#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt; &lt;code&gt;getStandardFileManager&lt;/code&gt; &lt;/a&gt; on this tool supports paths provided by any &lt;a href=&quot;../../../java.base/java/nio/file/filesystem&quot;&gt;filesystem&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7799300b539af42175bcd2d293282140270baea9" translate="yes" xml:space="preserve">
          <source>The file manager returned by calling &lt;a href=&quot;javacompiler#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;&lt;code&gt;getStandardFileManager&lt;/code&gt;&lt;/a&gt; on this compiler supports paths provided by any &lt;a href=&quot;../../../java.base/java/nio/file/filesystem&quot;&gt;filesystem&lt;/a&gt;.</source>
          <target state="translated">The file manager returned by calling &lt;a href=&quot;javacompiler#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt; &lt;code&gt;getStandardFileManager&lt;/code&gt; &lt;/a&gt; on this compiler supports paths provided by any &lt;a href=&quot;../../../java.base/java/nio/file/filesystem&quot;&gt;filesystem&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b7425c0f40a18828eac5ac2c682f75622122775e" translate="yes" xml:space="preserve">
          <source>The file manager which all methods are delegated to.</source>
          <target state="translated">모든 메소드가 위임 된 파일 관리자.</target>
        </trans-unit>
        <trans-unit id="c8db30cdd7f6bac3afaba29ab13bca0e83da6504" translate="yes" xml:space="preserve">
          <source>The file name of the script or some other string describing the script source. May return some implementation-defined string such as</source>
          <target state="translated">스크립트의 파일 이름 또는 스크립트 소스를 설명하는 다른 문자열 다음과 같은 구현 정의 문자열을 반환 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="1bb2b9f1de9de831304e060cac7b16327f82123a" translate="yes" xml:space="preserve">
          <source>The file object which all methods are delegated to.</source>
          <target state="translated">모든 메소드가 위임 된 파일 객체.</target>
        </trans-unit>
        <trans-unit id="3877731ad7b42f0a5b1e4c1ebc66cdccdffe4475" translate="yes" xml:space="preserve">
          <source>The file owner and group owner attributes are not persisted, meaning they are not stored in the zip file. The &quot;&lt;code&gt;defaultOwner&lt;/code&gt;&quot; and &quot;&lt;code&gt;defaultGroup&lt;/code&gt;&quot; provider properties (listed below) can be used to configure the default values for these attributes. If these properties are not set then the file owner defaults to the owner of the zip file, and the group owner defaults to the zip file's group owner (or the file owner on platforms that don't support a group owner).</source>
          <target state="translated">파일 소유자 및 그룹 소유자 속성은 유지되지 않습니다. 즉, zip 파일에 저장되지 않습니다. &quot; &lt;code&gt;defaultOwner&lt;/code&gt; &quot;및 &quot; &lt;code&gt;defaultGroup&lt;/code&gt; &quot;공급자 속성 (아래에 나열 됨)을 사용하여 이러한 속성의 기본값을 구성 할 수 있습니다. 이러한 속성이 설정되지 않은 경우 파일 소유자는 기본적으로 zip 파일의 소유자가되고 그룹 소유자는 기본적으로 zip 파일의 그룹 소유자 (또는 그룹 소유자를 지원하지 않는 플랫폼의 파일 소유자)가됩니다.</target>
        </trans-unit>
        <trans-unit id="3a806133f7b79e0318d4ff99608188522a38bce2" translate="yes" xml:space="preserve">
          <source>The file should contain a list of fully-qualified class names, one per line, of classes implementing the &lt;code&gt;java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; interface. Space and tab characters surrounding each name, as well as blank lines, are ignored. The comment character is &lt;code&gt;'#'&lt;/code&gt; (&lt;code&gt;\u0023&lt;/code&gt;); on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8.</source>
          <target state="translated">The file should contain a list of fully-qualified class names, one per line, of classes implementing the &lt;code&gt;java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; interface. Space and tab characters surrounding each name, as well as blank lines, are ignored. The comment character is &lt;code&gt;'#'&lt;/code&gt; ( &lt;code&gt;\u0023&lt;/code&gt; ); on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8.</target>
        </trans-unit>
        <trans-unit id="0825f60097e94d1e85c49fd153a3b65272d6b95a" translate="yes" xml:space="preserve">
          <source>The file system</source>
          <target state="translated">파일 시스템</target>
        </trans-unit>
        <trans-unit id="892992d41ee2a7e3dd444630c84d3445a2903083" translate="yes" xml:space="preserve">
          <source>The filter is configured during the initialization of the &lt;code&gt;ObjectInputFilter.Config&lt;/code&gt; class. For example, by calling &lt;a href=&quot;#getSerialFilter()&quot;&gt;&lt;code&gt;Config.getSerialFilter&lt;/code&gt;&lt;/a&gt;. If the Java virtual machine is started with the system property &lt;code&gt;&lt;span id=&quot;jdk.serialFilter&quot;&gt;jdk.serialFilter&lt;/span&gt;&lt;/code&gt;, its value is used to configure the filter. If the system property is not defined, and the &lt;a href=&quot;../security/security&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;jdk.serialFilter&lt;/code&gt; is defined then it is used to configure the filter. Otherwise, the filter is not configured during initialization and can be set with &lt;a href=&quot;#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;Config.setSerialFilter&lt;/code&gt;&lt;/a&gt;. Setting the &lt;code&gt;jdk.serialFilter&lt;/code&gt; with &lt;a href=&quot;../lang/system#setProperty(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;System.setProperty&lt;/code&gt;&lt;/a&gt;&lt;em&gt;does not set the filter&lt;/em&gt;. The syntax for each property is the same as for the &lt;a href=&quot;#createFilter(java.lang.String)&quot;&gt;&lt;code&gt;createFilter&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">필터는 &lt;code&gt;ObjectInputFilter.Config&lt;/code&gt; 클래스를 초기화하는 동안 구성됩니다 . 예를 들어 &lt;a href=&quot;#getSerialFilter()&quot;&gt; &lt;code&gt;Config.getSerialFilter&lt;/code&gt; &lt;/a&gt; 를 호출 합니다. JVM (Java Virtual Machine)이 시스템 특성 &lt;code&gt;&lt;span id=&quot;jdk.serialFilter&quot;&gt;jdk.serialFilter&lt;/span&gt;&lt;/code&gt; 로 시작 되면 해당 값이 필터를 구성하는 데 사용됩니다. 시스템 속성이 정의되어 있지 않고 &lt;a href=&quot;../security/security&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt; 속성 &lt;code&gt;jdk.serialFilter&lt;/code&gt; 가 정의되어 있으면 필터를 구성하는 데 사용됩니다. 그렇지 않으면 필터가 초기화 중에 구성되지 않으며 &lt;a href=&quot;#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;Config.setSerialFilter&lt;/code&gt; &lt;/a&gt; 로 설정할 수 있습니다 . 설정 &lt;code&gt;jdk.serialFilter&lt;/code&gt; 와 &lt;a href=&quot;../lang/system#setProperty(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;System.setProperty&lt;/code&gt; 를하는 것은&lt;/a&gt;&lt;em&gt; 필터를 설정하지 않습니다&lt;/em&gt;. 각 속성의 구문은 &lt;a href=&quot;#createFilter(java.lang.String)&quot;&gt; &lt;code&gt;createFilter&lt;/code&gt; &lt;/a&gt; 메서드 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="9a90e8cfc4e09b5ed06ec962ead13f62606cf4ed" translate="yes" xml:space="preserve">
          <source>The filter is configured during the initialization of the &lt;code&gt;ObjectInputFilter.Config&lt;/code&gt; class. For example, by calling &lt;a href=&quot;#getSerialFilter()&quot;&gt;&lt;code&gt;Config.getSerialFilter&lt;/code&gt;&lt;/a&gt;. If the system property &lt;code&gt;jdk.serialFilter&lt;/code&gt; is defined, it is used to configure the filter. If the system property is not defined, and the &lt;a href=&quot;../security/security&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;jdk.serialFilter&lt;/code&gt; is defined then it is used to configure the filter. Otherwise, the filter is not configured during initialization. The syntax for each property is the same as for the &lt;a href=&quot;#createFilter(java.lang.String)&quot;&gt;&lt;code&gt;createFilter&lt;/code&gt;&lt;/a&gt; method. If a filter is not configured, it can be set with &lt;a href=&quot;#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;Config.setSerialFilter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The filter is configured during the initialization of the &lt;code&gt;ObjectInputFilter.Config&lt;/code&gt; class. For example, by calling &lt;a href=&quot;#getSerialFilter()&quot;&gt; &lt;code&gt;Config.getSerialFilter&lt;/code&gt; &lt;/a&gt;. If the system property &lt;code&gt;jdk.serialFilter&lt;/code&gt; is defined, it is used to configure the filter. If the system property is not defined, and the &lt;a href=&quot;../security/security&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt; property &lt;code&gt;jdk.serialFilter&lt;/code&gt; is defined then it is used to configure the filter. Otherwise, the filter is not configured during initialization. The syntax for each property is the same as for the &lt;a href=&quot;#createFilter(java.lang.String)&quot;&gt; &lt;code&gt;createFilter&lt;/code&gt; &lt;/a&gt; method. If a filter is not configured, it can be set with &lt;a href=&quot;#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;Config.setSerialFilter&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ff4b58737685fb954d5e6efd0b5fae17d564182d" translate="yes" xml:space="preserve">
          <source>The filter is invoked after the operations requested by the &lt;code&gt;DOMConfiguration&lt;/code&gt; parameters have been applied. For example, CDATA sections won't be passed to the filter if &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-cdata-sections&quot;&gt;cdata-sections&lt;/a&gt;&quot; is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">The filter is invoked after the operations requested by the &lt;code&gt;DOMConfiguration&lt;/code&gt; parameters have been applied. For example, CDATA sections won't be passed to the filter if &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-cdata-sections&quot;&gt;cdata-sections&lt;/a&gt;&quot; is set to &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aee74c092bc8041c2e7b9c7b125cf7d0d399124b" translate="yes" xml:space="preserve">
          <source>The filter is invoked after the operations requested by the &lt;code&gt;DOMConfiguration&lt;/code&gt; parameters have been applied. For example, if &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-validate&quot;&gt;validate&lt;/a&gt;&quot; is set to &lt;code&gt;true&lt;/code&gt;, the validation is done before invoking the filter.</source>
          <target state="translated">The filter is invoked after the operations requested by the &lt;code&gt;DOMConfiguration&lt;/code&gt; parameters have been applied. For example, if &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-validate&quot;&gt;validate&lt;/a&gt;&quot; is set to &lt;code&gt;true&lt;/code&gt; , the validation is done before invoking the filter.</target>
        </trans-unit>
        <trans-unit id="906ee1389ef5cd14a7ec03e188e600e544d2552c" translate="yes" xml:space="preserve">
          <source>The filter pattern must be in same format as used in &lt;a href=&quot;../../../../../java.base/java/io/objectinputfilter.config#createFilter(java.lang.String)&quot;&gt;&lt;code&gt;ObjectInputFilter.Config.createFilter(java.lang.String)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">The filter pattern must be in same format as used in &lt;a href=&quot;../../../../../java.base/java/io/objectinputfilter.config#createFilter(java.lang.String)&quot;&gt; &lt;code&gt;ObjectInputFilter.Config.createFilter(java.lang.String)&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ed7ce7533f8762abf456d783918b102ff8a2c23" translate="yes" xml:space="preserve">
          <source>The filter used to screen nodes.</source>
          <target state="translated">The filter used to screen nodes.</target>
        </trans-unit>
        <trans-unit id="ce369c494176a07dc8044cc958be4b24a28b2631" translate="yes" xml:space="preserve">
          <source>The filter will be called for any class found in the serialized stream sent to server by client, including all JMX defined classes (such as &lt;a href=&quot;../../../../../java.management/javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt;), all method parameters, and, if present in the stream, all classes transitively referred by the serial form of any deserialized object. The pattern must be in same format as used in &lt;a href=&quot;../../../../../java.base/java/io/objectinputfilter.config#createFilter(java.lang.String)&quot;&gt;&lt;code&gt;ObjectInputFilter.Config.createFilter(java.lang.String)&lt;/code&gt;&lt;/a&gt;. It may define a white list of permitted classes, a black list of rejected classes, a maximum depth for the deserialized objects, etc.</source>
          <target state="translated">The filter will be called for any class found in the serialized stream sent to server by client, including all JMX defined classes (such as &lt;a href=&quot;../../../../../java.management/javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;), all method parameters, and, if present in the stream, all classes transitively referred by the serial form of any deserialized object. The pattern must be in same format as used in &lt;a href=&quot;../../../../../java.base/java/io/objectinputfilter.config#createFilter(java.lang.String)&quot;&gt; &lt;code&gt;ObjectInputFilter.Config.createFilter(java.lang.String)&lt;/code&gt; &lt;/a&gt;. It may define a white list of permitted classes, a black list of rejected classes, a maximum depth for the deserialized objects, etc.</target>
        </trans-unit>
        <trans-unit id="283ebc0cee047a651cef3bfafef961690ec56e62" translate="yes" xml:space="preserve">
          <source>The filter, when not &lt;code&gt;null&lt;/code&gt;, is invoked during &lt;a href=&quot;#readObject()&quot;&gt;&lt;code&gt;readObject&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#readUnshared()&quot;&gt;&lt;code&gt;readUnshared&lt;/code&gt;&lt;/a&gt; for each object (regular or class) in the stream. Strings are treated as primitives and do not invoke the filter. The filter is called for:</source>
          <target state="translated">The filter, when not &lt;code&gt;null&lt;/code&gt; , is invoked during &lt;a href=&quot;#readObject()&quot;&gt; &lt;code&gt;readObject&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#readUnshared()&quot;&gt; &lt;code&gt;readUnshared&lt;/code&gt; &lt;/a&gt; for each object (regular or class) in the stream. Strings are treated as primitives and do not invoke the filter. The filter is called for:</target>
        </trans-unit>
        <trans-unit id="9da1890ea92c18a80409737edd5b3b2d29e7817f" translate="yes" xml:space="preserve">
          <source>The filtered &lt;code&gt;BufferedImage&lt;/code&gt;.</source>
          <target state="translated">The filtered &lt;code&gt;BufferedImage&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65f3a38e57b9dd6fdfb5778ac5db35b1bc7064a3" translate="yes" xml:space="preserve">
          <source>The filtered &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">The filtered &lt;code&gt;Raster&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82f5231af999cd534e151548b4f1675b3dfd6445" translate="yes" xml:space="preserve">
          <source>The filtering method will behave as follows:</source>
          <target state="translated">필터링 방법은 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d896ef01136035a55ade69aaf7e02f44f8e7c594" translate="yes" xml:space="preserve">
          <source>The filtering operation returns all matching language tags. It is defined in RFC 4647 as follows: &quot;In filtering, each language range represents the least specific language tag (that is, the language tag with fewest number of subtags) that is an acceptable match. All of the language tags in the matching set of tags will have an equal or greater number of subtags than the language range. Every non-wildcard subtag in the language range will appear in every one of the matching language tags.&quot;</source>
          <target state="translated">필터링 작업은 일치하는 모든 언어 태그를 반환합니다. RFC 4647에서 다음과 같이 정의됩니다. &quot;필터링에서 각 언어 범위는 허용 가능한 일치하는 가장 낮은 특정 언어 태그 (즉, 하위 태그 수가 가장 적은 언어 태그)를 나타냅니다. 일치하는 세트의 모든 언어 태그 태그의 개수는 언어 범위와 같거나 더 많은 수의 하위 태그를 갖습니다. 언어 범위의 모든 비 와일드 카드 하위 태그는 일치하는 언어 태그마다 표시됩니다. &quot;</target>
        </trans-unit>
        <trans-unit id="58673811cc709742eb06b89d83fea33b405113c2" translate="yes" xml:space="preserve">
          <source>The final mechanism is to attempt to instantiate the &lt;code&gt;Class&lt;/code&gt; specified by &lt;a href=&quot;#DATATYPEFACTORY_IMPLEMENTATION_CLASS&quot;&gt;&lt;code&gt;DATATYPEFACTORY_IMPLEMENTATION_CLASS&lt;/code&gt;&lt;/a&gt;. Any Exception thrown during the instantiation process is wrapped as a &lt;a href=&quot;datatypeconfigurationexception&quot;&gt;&lt;code&gt;DatatypeConfigurationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The final mechanism is to attempt to instantiate the &lt;code&gt;Class&lt;/code&gt; specified by &lt;a href=&quot;#DATATYPEFACTORY_IMPLEMENTATION_CLASS&quot;&gt; &lt;code&gt;DATATYPEFACTORY_IMPLEMENTATION_CLASS&lt;/code&gt; &lt;/a&gt;. Any Exception thrown during the instantiation process is wrapped as a &lt;a href=&quot;datatypeconfigurationexception&quot;&gt; &lt;code&gt;DatatypeConfigurationException&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a257823443c7ca437aee24668254699a62d64cf7" translate="yes" xml:space="preserve">
          <source>The final memory location accessed by a memory access var handle can be computed as follows:</source>
          <target state="translated">메모리 액세스 var 핸들이 액세스하는 최종 메모리 위치는 다음과 같이 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3162e7feec30f14f4aa6ef15c92c46449634803" translate="yes" xml:space="preserve">
          <source>The final results of decoding will be the same whether or not intermediate updates are performed. Thus if only the final image is desired it may be preferable not to register any &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s. In general, progressive updating is most effective when fetching images over a network connection that is very slow compared to local CPU processing; over a fast connection, progressive updates may actually slow down the presentation of the image.</source>
          <target state="translated">디코딩의 최종 결과는 중간 업데이트 수행 여부에 관계없이 동일합니다. 따라서 최종 이미지 만 필요한 경우 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 를 등록하지 않는 것이 좋습니다 . 일반적으로 점진적 업데이트는 로컬 CPU 처리와 비교할 때 네트워크 연결을 통해 이미지를 가져올 때 가장 효과적입니다. 빠른 연결을 통해 점진적 업데이트는 실제로 이미지 표시 속도를 저하시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d110cf80264e279c1436d299ebda35ec112c3fd" translate="yes" xml:space="preserve">
          <source>The final value from either the positive or negative case is then rounded to the destination precision.</source>
          <target state="translated">양수 또는 음수의 최종 값은 대상 정밀도로 반올림됩니다.</target>
        </trans-unit>
        <trans-unit id="85e44e3203522806af8cd170951c01b954d7f6b9" translate="yes" xml:space="preserve">
          <source>The finalization mechanism is inherently problematic.</source>
          <target state="translated">The finalization mechanism is inherently problematic.</target>
        </trans-unit>
        <trans-unit id="43ad00bd49bb737cdb4c6319c59540923fdbcb9f" translate="yes" xml:space="preserve">
          <source>The finalization mechanism is inherently problematic. Finalization can lead to performance issues, deadlocks, and hangs. Errors in finalizers can lead to resource leaks; there is no way to cancel finalization if it is no longer necessary; and no ordering is specified among calls to &lt;code&gt;finalize&lt;/code&gt; methods of different objects. Furthermore, there are no guarantees regarding the timing of finalization. The &lt;code&gt;finalize&lt;/code&gt; method might be called on a finalizable object only after an indefinite delay, if at all. Classes whose instances hold non-heap resources should provide a method to enable explicit release of those resources, and they should also implement &lt;a href=&quot;autocloseable&quot;&gt;&lt;code&gt;AutoCloseable&lt;/code&gt;&lt;/a&gt; if appropriate. The &lt;a href=&quot;ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ref/phantomreference&quot;&gt;&lt;code&gt;PhantomReference&lt;/code&gt;&lt;/a&gt; provide more flexible and efficient ways to release resources when an object becomes unreachable.</source>
          <target state="translated">The finalization mechanism is inherently problematic. Finalization can lead to performance issues, deadlocks, and hangs. Errors in finalizers can lead to resource leaks; there is no way to cancel finalization if it is no longer necessary; and no ordering is specified among calls to &lt;code&gt;finalize&lt;/code&gt; methods of different objects. Furthermore, there are no guarantees regarding the timing of finalization. The &lt;code&gt;finalize&lt;/code&gt; method might be called on a finalizable object only after an indefinite delay, if at all. Classes whose instances hold non-heap resources should provide a method to enable explicit release of those resources, and they should also implement &lt;a href=&quot;autocloseable&quot;&gt; &lt;code&gt;AutoCloseable&lt;/code&gt; &lt;/a&gt; if appropriate. The &lt;a href=&quot;ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;ref/phantomreference&quot;&gt; &lt;code&gt;PhantomReference&lt;/code&gt; &lt;/a&gt; provide more flexible and efficient ways to release resources when an object becomes unreachable.</target>
        </trans-unit>
        <trans-unit id="96b7c65ae72d541b50bbc707f4905bb257fc7bac" translate="yes" xml:space="preserve">
          <source>The findComponentAt method is different from getComponentAt in that getComponentAt only searches the Container's immediate children; if the containing component is a Container, findComponentAt will search that child to find a nested component.</source>
          <target state="translated">The findComponentAt method is different from getComponentAt in that getComponentAt only searches the Container's immediate children; if the containing component is a Container, findComponentAt will search that child to find a nested component.</target>
        </trans-unit>
        <trans-unit id="f304bceeb53570b9b6ea4460744619719b33e8a1" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;colormodel#getNumColorComponents()&quot;&gt;&lt;code&gt;getNumColorComponents&lt;/code&gt;&lt;/a&gt; indices refer to color samples.</source>
          <target state="translated">The first &lt;a href=&quot;colormodel#getNumColorComponents()&quot;&gt; &lt;code&gt;getNumColorComponents&lt;/code&gt; &lt;/a&gt; indices refer to color samples.</target>
        </trans-unit>
        <trans-unit id="225e537eb7919c395c9c76cb321d5092e5dfa93e" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;RowSet&lt;/code&gt; object added to this &lt;code&gt;JoinRowSet&lt;/code&gt; object forms the basis for the &lt;code&gt;JOIN&lt;/code&gt; relationship.</source>
          <target state="translated">The first &lt;code&gt;RowSet&lt;/code&gt; object added to this &lt;code&gt;JoinRowSet&lt;/code&gt; object forms the basis for the &lt;code&gt;JOIN&lt;/code&gt; relationship.</target>
        </trans-unit>
        <trans-unit id="dceb51577509ae3dfa0af99f1bc1e752a22466e6" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;SysexMessage&lt;/code&gt; object containing data for a particular system exclusive message should have the status value 0xF0. If this message contains all the system exclusive data for the message, it should end with the status byte 0xF7 (EOX). Otherwise, additional system exclusive data should be sent in one or more &lt;code&gt;SysexMessages&lt;/code&gt; with a status value of 0xF7. The &lt;code&gt;SysexMessage&lt;/code&gt; containing the last of the data for the system exclusive message should end with the value 0xF7 (EOX) to mark the end of the system exclusive message.</source>
          <target state="translated">특정 시스템 독점 메시지에 대한 데이터를 포함하는 첫 번째 &lt;code&gt;SysexMessage&lt;/code&gt; 오브젝트의 상태 값은 0xF0이어야합니다. 이 메시지에 메시지에 대한 모든 시스템 독점 데이터가 포함 된 경우 상태 바이트 0xF7 (EOX)로 끝나야합니다. 그렇지 않으면 상태 값이 0xF7 인 하나 이상의 &lt;code&gt;SysexMessages&lt;/code&gt; 에 추가 시스템 독점 데이터를 보내야합니다 . &lt;code&gt;SysexMessage&lt;/code&gt; 값 나타내는 0xF7 (EOX)로 끝나야 시스템 독점 메시지의 마지막 데이터를 포함하는 시스템 독점 메시지의 끝을 표시한다.</target>
        </trans-unit>
        <trans-unit id="d2e2f7cac12c5ca488060725f68a6ecc25a456b2" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;inputLen&lt;/code&gt; bytes in the &lt;code&gt;input&lt;/code&gt; buffer, starting at &lt;code&gt;inputOffset&lt;/code&gt; inclusive, and any input bytes that may have been buffered during a previous &lt;code&gt;update&lt;/code&gt; operation, are processed, with padding (if requested) being applied. If an AEAD mode such as GCM/CCM is being used, the authentication tag is appended in the case of encryption, or verified in the case of decryption. The result is stored in a new buffer.</source>
          <target state="translated">최초 &lt;code&gt;inputLen&lt;/code&gt; 바이트 &lt;code&gt;input&lt;/code&gt; 에서 시작하여, 버퍼 &lt;code&gt;inputOffset&lt;/code&gt; 를 포함한, 임의의 입력이 이전 동안 버퍼링되었을 수 바이트 &lt;code&gt;update&lt;/code&gt; 동작 처리, 패딩 (요청한 경우)이 적용된다. GCM / CCM과 같은 AEAD 모드를 사용하는 경우 암호화의 경우 인증 태그가 추가되거나 암호 해독의 경우 확인됩니다. 결과는 새로운 버퍼에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="450b35c105bb3a8a209c60a29d62db449ae9ed42" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;inputLen&lt;/code&gt; bytes in the &lt;code&gt;input&lt;/code&gt; buffer, starting at &lt;code&gt;inputOffset&lt;/code&gt; inclusive, and any input bytes that may have been buffered during a previous &lt;code&gt;update&lt;/code&gt; operation, are processed, with padding (if requested) being applied. If an AEAD mode such as GCM/CCM is being used, the authentication tag is appended in the case of encryption, or verified in the case of decryption. The result is stored in the &lt;code&gt;output&lt;/code&gt; buffer, starting at &lt;code&gt;outputOffset&lt;/code&gt; inclusive.</source>
          <target state="translated">최초 &lt;code&gt;inputLen&lt;/code&gt; 바이트 &lt;code&gt;input&lt;/code&gt; 에서 시작하여, 버퍼 &lt;code&gt;inputOffset&lt;/code&gt; 를 포함한, 임의의 입력이 이전 동안 버퍼링되었을 수 바이트 &lt;code&gt;update&lt;/code&gt; 동작 처리, 패딩 (요청한 경우)이 적용된다. GCM / CCM과 같은 AEAD 모드를 사용하는 경우 암호화의 경우 인증 태그가 추가되거나 암호 해독의 경우 확인됩니다. 결과는 &lt;code&gt;outputOffset&lt;/code&gt; 에서 시작 하여 &lt;code&gt;output&lt;/code&gt; 버퍼에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="a8bbd7df6363c689dcf63bfdd1fdab1320c3d681" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;inputLen&lt;/code&gt; bytes in the &lt;code&gt;input&lt;/code&gt; buffer, starting at &lt;code&gt;inputOffset&lt;/code&gt; inclusive, and any input bytes that may have been buffered during a previous &lt;code&gt;update&lt;/code&gt; operation, are processed, with padding (if requested) being applied. If an AEAD mode such as GCM/CCM is being used, the authentication tag is appended in the case of encryption, or verified in the case of decryption. The result is stored in the &lt;code&gt;output&lt;/code&gt; buffer.</source>
          <target state="translated">최초 &lt;code&gt;inputLen&lt;/code&gt; 바이트 &lt;code&gt;input&lt;/code&gt; 에서 시작하여, 버퍼 &lt;code&gt;inputOffset&lt;/code&gt; 를 포함한, 임의의 입력이 이전 동안 버퍼링되었을 수 바이트 &lt;code&gt;update&lt;/code&gt; 동작 처리, 패딩 (요청한 경우)이 적용된다. GCM / CCM과 같은 AEAD 모드를 사용중인 경우 암호화의 경우 인증 태그가 추가되거나 암호 해독의 경우 확인됩니다. 결과는 &lt;code&gt;output&lt;/code&gt; 버퍼에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="28af7ec760e52fc6a243e293787fc7c9a7265ce5" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;inputLen&lt;/code&gt; bytes in the &lt;code&gt;input&lt;/code&gt; buffer, starting at &lt;code&gt;inputOffset&lt;/code&gt; inclusive, are processed, and the result is stored in a new buffer.</source>
          <target state="translated">최초 &lt;code&gt;inputLen&lt;/code&gt; 바이트 &lt;code&gt;input&lt;/code&gt; 에서 시작하여, 버퍼 &lt;code&gt;inputOffset&lt;/code&gt; 의 포괄적 처리되어 결과가 새 버퍼에 저장된다.</target>
        </trans-unit>
        <trans-unit id="dee5e44e4c07e3f64df924e1f093b2408bc750bf" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;inputLen&lt;/code&gt; bytes in the &lt;code&gt;input&lt;/code&gt; buffer, starting at &lt;code&gt;inputOffset&lt;/code&gt; inclusive, are processed, and the result is stored in the &lt;code&gt;output&lt;/code&gt; buffer, starting at &lt;code&gt;outputOffset&lt;/code&gt; inclusive.</source>
          <target state="translated">최초 &lt;code&gt;inputLen&lt;/code&gt; 바이트 &lt;code&gt;input&lt;/code&gt; 에서 시작하여, 버퍼 &lt;code&gt;inputOffset&lt;/code&gt; 의 포괄적 처리되어 결과가 저장되는 &lt;code&gt;output&lt;/code&gt; 에서 시작하여, 버퍼 &lt;code&gt;outputOffset&lt;/code&gt; 포함.</target>
        </trans-unit>
        <trans-unit id="642f9a22f339ca697888f292e90a89ff6619eb68" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;inputLen&lt;/code&gt; bytes in the &lt;code&gt;input&lt;/code&gt; buffer, starting at &lt;code&gt;inputOffset&lt;/code&gt; inclusive, are processed, and the result is stored in the &lt;code&gt;output&lt;/code&gt; buffer.</source>
          <target state="translated">최초 &lt;code&gt;inputLen&lt;/code&gt; 바이트 &lt;code&gt;input&lt;/code&gt; 에서 시작하여, 버퍼 &lt;code&gt;inputOffset&lt;/code&gt; 에 , 처리를 포함한, 그 결과가 저장되는 &lt;code&gt;output&lt;/code&gt; 버퍼.</target>
        </trans-unit>
        <trans-unit id="823a750eb068b083af9a3eec820704505156eba9" translate="yes" xml:space="preserve">
          <source>The first ClassLoader in a &lt;code&gt;ClassLoaderRepository&lt;/code&gt; is always the MBean Server's own ClassLoader.</source>
          <target state="translated">ClassLoaderRepository의 최초의 &lt;code&gt;ClassLoaderRepository&lt;/code&gt; 는 항상 MBean Server 자신의 ClassLoader입니다.</target>
        </trans-unit>
        <trans-unit id="4afcd821de0aeb2abc8a3499b614746092f5e523" translate="yes" xml:space="preserve">
          <source>The first DOM implementation that support the desired features, or &lt;code&gt;null&lt;/code&gt; if this source has none.</source>
          <target state="translated">The first DOM implementation that support the desired features, or &lt;code&gt;null&lt;/code&gt; if this source has none.</target>
        </trans-unit>
        <trans-unit id="0aee605bf67dfc0c50ce0346dbcf9350e8a06cf8" translate="yes" xml:space="preserve">
          <source>The first argument is &lt;code&gt;null&lt;/code&gt; or is a string of length zero.</source>
          <target state="translated">첫 번째 인수는 &lt;code&gt;null&lt;/code&gt; 이거나 길이가 0 인 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="ae629cadb34db7e527f2a80bc1163c69c5a2e3f8" translate="yes" xml:space="preserve">
          <source>The first argument is treated as the name of a system property to be obtained. The string value of this property is then interpreted as an integer which is then converted to a &lt;code&gt;Color&lt;/code&gt; object.</source>
          <target state="translated">The first argument is treated as the name of a system property to be obtained. The string value of this property is then interpreted as an integer which is then converted to a &lt;code&gt;Color&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="86224aafef149436e8f761076011cbbcfd14ad03" translate="yes" xml:space="preserve">
          <source>The first argument is treated as the name of a system property. System properties are accessible through the &lt;a href=&quot;system#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt;&lt;/a&gt; method. The string value of this property is then interpreted as a &lt;code&gt;
 long&lt;/code&gt; value using the grammar supported by &lt;a href=&quot;#decode(java.lang.String)&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; and a &lt;code&gt;Long&lt;/code&gt; object representing this value is returned.</source>
          <target state="translated">The first argument is treated as the name of a system property. System properties are accessible through the &lt;a href=&quot;system#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt; &lt;/a&gt; method. The string value of this property is then interpreted as a &lt;code&gt; long&lt;/code&gt; value using the grammar supported by &lt;a href=&quot;#decode(java.lang.String)&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; and a &lt;code&gt;Long&lt;/code&gt; object representing this value is returned.</target>
        </trans-unit>
        <trans-unit id="6d2885db10350eaece5dd6fc42094a4b81bf28f0" translate="yes" xml:space="preserve">
          <source>The first argument is treated as the name of a system property. System properties are accessible through the &lt;a href=&quot;system#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt;&lt;/a&gt; method. The string value of this property is then interpreted as an integer value using the grammar supported by &lt;a href=&quot;#decode(java.lang.String)&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; and an &lt;code&gt;Integer&lt;/code&gt; object representing this value is returned.</source>
          <target state="translated">The first argument is treated as the name of a system property. System properties are accessible through the &lt;a href=&quot;system#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt; &lt;/a&gt; method. The string value of this property is then interpreted as an integer value using the grammar supported by &lt;a href=&quot;#decode(java.lang.String)&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; and an &lt;code&gt;Integer&lt;/code&gt; object representing this value is returned.</target>
        </trans-unit>
        <trans-unit id="2d03bc23e5360de30337060058588182a9ceb237" translate="yes" xml:space="preserve">
          <source>The first argument is treated as the name of a system property. System properties are accessible through the &lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt;&lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt;&lt;/a&gt; method. The string value of this property is then interpreted as a &lt;code&gt;long&lt;/code&gt; value using the grammar supported by &lt;a href=&quot;long#decode-java.lang.String-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; and a &lt;code&gt;Long&lt;/code&gt; object representing this value is returned.</source>
          <target state="translated">첫 번째 인수는 시스템 특성의 이름으로 취급됩니다. 시스템 특성은 &lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt; &lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt; &lt;/a&gt; 메소드를 통해 액세스 할 수 있습니다 . 이 속성의 문자열 값은 다음과 같이 해석됩니다 &lt;code&gt;long&lt;/code&gt; 지원하는 문법을 사용하여 값을 &lt;a href=&quot;long#decode-java.lang.String-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 하고 &lt;code&gt;Long&lt;/code&gt; 이 값을 나타내는 개체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1ca7bb292bb179eff369391d94b8d8d3d6c76e98" translate="yes" xml:space="preserve">
          <source>The first argument is treated as the name of a system property. System properties are accessible through the &lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt;&lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt;&lt;/a&gt; method. The string value of this property is then interpreted as an integer value using the grammar supported by &lt;a href=&quot;integer#decode-java.lang.String-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; and an &lt;code&gt;Integer&lt;/code&gt; object representing this value is returned.</source>
          <target state="translated">첫 번째 인수는 시스템 특성의 이름으로 취급됩니다. 시스템 특성은 &lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt; &lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt; &lt;/a&gt; 메소드를 통해 액세스 할 수 있습니다 . 이 속성의 문자열 값은 다음에 의해 지원되는 문법을 사용하여 정수 값으로 해석되어 &lt;a href=&quot;integer#decode-java.lang.String-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;Integer&lt;/code&gt; 이 값을 나타내는 객체가 반환된다.</target>
        </trans-unit>
        <trans-unit id="b2ae25b2e2ebc2286380592b87b73e4532b3206e" translate="yes" xml:space="preserve">
          <source>The first argument passed to the accumulator function, both arguments passed to the combiner function, and the argument passed to the finisher function must be the result of a previous invocation of the result supplier, accumulator, or combiner functions.</source>
          <target state="translated">누산기 함수에 전달 된 첫 번째 인수, 결합기 함수에 전달 된 인수 및 피니셔 함수에 전달 된 인수는 이전에 결과 공급자, 누산기 또는 결합기 함수를 호출 한 결과 여야합니다.</target>
        </trans-unit>
        <trans-unit id="b8fb133ed9ac9f35d1632cf6521f669da4fe312e" translate="yes" xml:space="preserve">
          <source>The first argument will be of type &lt;code&gt;refc&lt;/code&gt; if the lookup class has full privileges to access the member. Otherwise the member must be &lt;code&gt;protected&lt;/code&gt; and the first argument will be restricted in type to the lookup class.</source>
          <target state="translated">조회 클래스에 멤버에 액세스 할 수있는 모든 권한이있는 경우 첫 번째 인수는 &lt;code&gt;refc&lt;/code&gt; 유형 입니다. 그렇지 않으면 멤버를 &lt;code&gt;protected&lt;/code&gt; 해야하며 첫 번째 인수는 조회 클래스 유형으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="3fdce5da33999948b7b9edbf1747b81239005798" translate="yes" xml:space="preserve">
          <source>The first boundary after the specified offset or &lt;code&gt;BreakIterator.DONE&lt;/code&gt; if the last text boundary is passed in as the offset.</source>
          <target state="translated">지정된 오프셋 이후의 첫 번째 경계 또는 마지막 텍스트 경계가 오프셋으로 전달 된 경우 &lt;code&gt;BreakIterator.DONE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f43ed7dbcb89ab6b52e6cd9fb7b818ebc4af52e" translate="yes" xml:space="preserve">
          <source>The first byte data array.</source>
          <target state="translated">The first byte data array.</target>
        </trans-unit>
        <trans-unit id="60f933636fde5ae8ebd2c0b809d58ad8770e0632" translate="yes" xml:space="preserve">
          <source>The first byte read is stored into element &lt;code&gt;b[0]&lt;/code&gt;, the next one into &lt;code&gt;b[1]&lt;/code&gt;, and so on. The number of bytes read is, at most, equal to the length of &lt;code&gt;b&lt;/code&gt;. Let</source>
          <target state="translated">첫 번째 바이트는 판독 소자에 저장된 &lt;code&gt;b[0]&lt;/code&gt; , 다음으로 하나 &lt;code&gt;b[1]&lt;/code&gt; 그래서, 및. 읽은 바이트 수는 기껏해야 &lt;code&gt;b&lt;/code&gt; 길이와 같습니다 . 허락하다</target>
        </trans-unit>
        <trans-unit id="d03b0acc59bce24602d657d7614371387c0d8fd1" translate="yes" xml:space="preserve">
          <source>The first byte read is stored into element &lt;code&gt;b[0]&lt;/code&gt;, the next one into &lt;code&gt;b[1]&lt;/code&gt;, and so on. The number of bytes read is, at most, equal to the length of &lt;code&gt;b&lt;/code&gt;. Let &lt;code&gt;k&lt;/code&gt; be the number of bytes actually read; these bytes will be stored in elements &lt;code&gt;b[0]&lt;/code&gt; through &lt;code&gt;b[k-1]&lt;/code&gt;, leaving elements &lt;code&gt;b[k]&lt;/code&gt; through &lt;code&gt;b[b.length-1]&lt;/code&gt; unaffected.</source>
          <target state="translated">첫 번째 바이트는 판독 소자에 저장된 &lt;code&gt;b[0]&lt;/code&gt; , 다음으로 하나 &lt;code&gt;b[1]&lt;/code&gt; 그래서, 및. 읽은 바이트 수는 기껏해야 &lt;code&gt;b&lt;/code&gt; 길이와 같습니다 . &lt;code&gt;k&lt;/code&gt; 가 실제로 읽은 바이트 수를 보자 . 이 바이트는 소자에 저장 될 것이다 &lt;code&gt;b[0]&lt;/code&gt; 을 &lt;code&gt;b[k-1]&lt;/code&gt; , 원소 이탈 &lt;code&gt;b[k]&lt;/code&gt; 내지 &lt;code&gt;b[b.length-1]&lt;/code&gt; 영향을받지 않는다.</target>
        </trans-unit>
        <trans-unit id="e123521dff5a7003e4f6481bb02965e6f695e618" translate="yes" xml:space="preserve">
          <source>The first byte read is stored into element &lt;code&gt;b[off]&lt;/code&gt;, the next one in to &lt;code&gt;b[off+1]&lt;/code&gt;, and so on. The number of bytes read is, at most, equal to &lt;code&gt;len&lt;/code&gt;. Let</source>
          <target state="translated">The first byte read is stored into element &lt;code&gt;b[off]&lt;/code&gt; , the next one in to &lt;code&gt;b[off+1]&lt;/code&gt; , and so on. The number of bytes read is, at most, equal to &lt;code&gt;len&lt;/code&gt; . Let</target>
        </trans-unit>
        <trans-unit id="a8f1de6428cb4228c88c1554b26b34675848c6a6" translate="yes" xml:space="preserve">
          <source>The first byte read is stored into element &lt;code&gt;b[off]&lt;/code&gt;, the next one into &lt;code&gt;b[off+1]&lt;/code&gt;, and so on. The number of bytes read is, at most, equal to &lt;code&gt;len&lt;/code&gt;. Let</source>
          <target state="translated">첫 번째 바이트는 판독 소자에 저장된다 &lt;code&gt;b[off]&lt;/code&gt; 로 다음의 하나의 &lt;code&gt;b[off+1]&lt;/code&gt; , 등. 읽은 바이트 수는 최대 &lt;code&gt;len&lt;/code&gt; 과 같습니다 . 허락하다</target>
        </trans-unit>
        <trans-unit id="db2c520ad4319c6e2902420d8cd1385f52ff1286" translate="yes" xml:space="preserve">
          <source>The first call to the &lt;a href=&quot;#getKeyStore()&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; method on the returned builder will create a KeyStore of type &lt;code&gt;type&lt;/code&gt; and call its &lt;a href=&quot;keystore#load(java.io.InputStream,char%5B%5D)&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; method. The &lt;code&gt;inputStream&lt;/code&gt; argument is constructed from &lt;code&gt;file&lt;/code&gt;. If &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;PasswordProtection&lt;/code&gt;, the password is obtained by calling the &lt;code&gt;getPassword&lt;/code&gt; method. Otherwise, if &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;CallbackHandlerProtection&lt;/code&gt;, the password is obtained by invoking the CallbackHandler.</source>
          <target state="translated">The first call to the &lt;a href=&quot;#getKeyStore()&quot;&gt; &lt;code&gt;getKeyStore()&lt;/code&gt; &lt;/a&gt; method on the returned builder will create a KeyStore of type &lt;code&gt;type&lt;/code&gt; and call its &lt;a href=&quot;keystore#load(java.io.InputStream,char%5B%5D)&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt; method. The &lt;code&gt;inputStream&lt;/code&gt; argument is constructed from &lt;code&gt;file&lt;/code&gt; . If &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;PasswordProtection&lt;/code&gt; , the password is obtained by calling the &lt;code&gt;getPassword&lt;/code&gt; method. Otherwise, if &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;CallbackHandlerProtection&lt;/code&gt; , the password is obtained by invoking the CallbackHandler.</target>
        </trans-unit>
        <trans-unit id="83cb61e754162d1ecf4d214461dc4fea766c8488" translate="yes" xml:space="preserve">
          <source>The first call to the &lt;a href=&quot;#getKeyStore()&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; method on the returned builder will create a KeyStore using &lt;code&gt;file&lt;/code&gt; to detect the keystore type and then call its &lt;a href=&quot;keystore#load(java.io.InputStream,char%5B%5D)&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; method. It uses the same algorithm to determine the keystore type as described in &lt;a href=&quot;keystore#getInstance(java.io.File,java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;KeyStore.getInstance(File, LoadStoreParameter)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;inputStream&lt;/code&gt; argument is constructed from &lt;code&gt;file&lt;/code&gt;. If &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;PasswordProtection&lt;/code&gt;, the password is obtained by calling the &lt;code&gt;getPassword&lt;/code&gt; method. Otherwise, if &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;CallbackHandlerProtection&lt;/code&gt;, the password is obtained by invoking the CallbackHandler.</source>
          <target state="translated">The first call to the &lt;a href=&quot;#getKeyStore()&quot;&gt; &lt;code&gt;getKeyStore()&lt;/code&gt; &lt;/a&gt; method on the returned builder will create a KeyStore using &lt;code&gt;file&lt;/code&gt; to detect the keystore type and then call its &lt;a href=&quot;keystore#load(java.io.InputStream,char%5B%5D)&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt; method. It uses the same algorithm to determine the keystore type as described in &lt;a href=&quot;keystore#getInstance(java.io.File,java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;KeyStore.getInstance(File, LoadStoreParameter)&lt;/code&gt; &lt;/a&gt;. The &lt;code&gt;inputStream&lt;/code&gt; argument is constructed from &lt;code&gt;file&lt;/code&gt; . If &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;PasswordProtection&lt;/code&gt; , the password is obtained by calling the &lt;code&gt;getPassword&lt;/code&gt; method. Otherwise, if &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;CallbackHandlerProtection&lt;/code&gt; , the password is obtained by invoking the CallbackHandler.</target>
        </trans-unit>
        <trans-unit id="c1d045c55ceefb91cc2dece8b6706b626a6357c6" translate="yes" xml:space="preserve">
          <source>The first call to the &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; method on the returned builder will create a KeyStore of type &lt;code&gt;type&lt;/code&gt; and call its &lt;a href=&quot;keystore#load-java.io.InputStream-char:A-&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; method. The &lt;code&gt;inputStream&lt;/code&gt; argument is constructed from &lt;code&gt;file&lt;/code&gt;. If &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;PasswordProtection&lt;/code&gt;, the password is obtained by calling the &lt;code&gt;getPassword&lt;/code&gt; method. Otherwise, if &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;CallbackHandlerProtection&lt;/code&gt;, the password is obtained by invoking the CallbackHandler.</source>
          <target state="translated">받는 첫 번째 호출 &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt; &lt;code&gt;getKeyStore()&lt;/code&gt; &lt;/a&gt; 반환 빌더에 대한 방법은 타입의 키 스토어 생성합니다 &lt;code&gt;type&lt;/code&gt; 하고 전화를 &lt;a href=&quot;keystore#load-java.io.InputStream-char:A-&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt; 메소드를. &lt;code&gt;inputStream&lt;/code&gt; 인수로 구성됩니다 &lt;code&gt;file&lt;/code&gt; . 경우 &lt;code&gt;protection&lt;/code&gt; A는 &lt;code&gt;PasswordProtection&lt;/code&gt; , 암호 호출에 의해 얻어진다 &lt;code&gt;getPassword&lt;/code&gt; 방법. 그렇지 않으면 &lt;code&gt;protection&lt;/code&gt; 가 &lt;code&gt;CallbackHandlerProtection&lt;/code&gt; 인 경우 CallbackHandler 를 호출하여 비밀번호를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="a263b78c091df4149c36c4396f2815c0fce9f331" translate="yes" xml:space="preserve">
          <source>The first character is an alphabetic character from a through z, or from A through Z</source>
          <target state="translated">The first character is an alphabetic character from a through z, or from A through Z</target>
        </trans-unit>
        <trans-unit id="2f9b613c261320a940fcb9e06c67d081c2e33e53" translate="yes" xml:space="preserve">
          <source>The first character of the resulting string will be the character at this buffer's position, while the last character will be the character at index &lt;code&gt;limit()&lt;/code&gt; - 1. Invoking this method does not change the buffer's position.</source>
          <target state="translated">결과 문자열의 첫 번째 문자는이 버퍼 위치의 문자이고 마지막 문자는 index &lt;code&gt;limit()&lt;/code&gt; -1 의 문자입니다 .이 메소드를 호출해도 버퍼의 위치는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dbf37e7b81a7fb879c8f2e225eb28bf22a25c9af" translate="yes" xml:space="preserve">
          <source>The first character to be copied is at index &lt;code&gt;srcBegin&lt;/code&gt;; the last character to be copied is at index &lt;code&gt;srcEnd-1&lt;/code&gt; (thus the total number of characters to be copied is &lt;code&gt;srcEnd-srcBegin&lt;/code&gt;). The characters are copied into the subarray of &lt;code&gt;dst&lt;/code&gt; starting at index &lt;code&gt;dstBegin&lt;/code&gt; and ending at index:</source>
          <target state="translated">복사 될 첫 문자는 index &lt;code&gt;srcBegin&lt;/code&gt; 입니다 . 복사 될 마지막 문자는 인덱스 &lt;code&gt;srcEnd-1&lt;/code&gt; 에 있습니다 (따라서 복사 될 총 문자 수는 &lt;code&gt;srcEnd-srcBegin&lt;/code&gt; 입니다 ). 문자는 인덱스 &lt;code&gt;dstBegin&lt;/code&gt; 에서 시작하여 인덱스에서 끝나는 &lt;code&gt;dst&lt;/code&gt; 의 서브 어레이에 복사됩니다 .</target>
        </trans-unit>
        <trans-unit id="e7722b11f3aef8f14caa14ee77828b008194775f" translate="yes" xml:space="preserve">
          <source>The first character to be copied is at index &lt;code&gt;srcBegin&lt;/code&gt;; the last character to be copied is at index &lt;code&gt;srcEnd-1&lt;/code&gt;. The total number of characters to be copied is &lt;code&gt;srcEnd-srcBegin&lt;/code&gt;. The characters, converted to bytes, are copied into the subarray of &lt;code&gt;
 dst&lt;/code&gt; starting at index &lt;code&gt;dstBegin&lt;/code&gt; and ending at index:</source>
          <target state="translated">The first character to be copied is at index &lt;code&gt;srcBegin&lt;/code&gt; ; the last character to be copied is at index &lt;code&gt;srcEnd-1&lt;/code&gt; . The total number of characters to be copied is &lt;code&gt;srcEnd-srcBegin&lt;/code&gt; . The characters, converted to bytes, are copied into the subarray of &lt;code&gt; dst&lt;/code&gt; starting at index &lt;code&gt;dstBegin&lt;/code&gt; and ending at index:</target>
        </trans-unit>
        <trans-unit id="de566e0e6c84a80db615c5af628dc587bf7facb7" translate="yes" xml:space="preserve">
          <source>The first character to be copied is at index &lt;code&gt;srcBegin&lt;/code&gt;; the last character to be copied is at index &lt;code&gt;srcEnd-1&lt;/code&gt;. The total number of characters to be copied is &lt;code&gt;srcEnd-srcBegin&lt;/code&gt;. The characters, converted to bytes, are copied into the subarray of &lt;code&gt;dst&lt;/code&gt; starting at index &lt;code&gt;dstBegin&lt;/code&gt; and ending at index:</source>
          <target state="translated">복사 될 첫 문자는 index &lt;code&gt;srcBegin&lt;/code&gt; 입니다 . 복사 될 마지막 문자는 인덱스 &lt;code&gt;srcEnd-1&lt;/code&gt; 입니다. 복사 될 총 문자 수는 &lt;code&gt;srcEnd-srcBegin&lt;/code&gt; 입니다. 바이트로 변환 된 문자 는 인덱스 &lt;code&gt;dstBegin&lt;/code&gt; 에서 시작하여 인덱스에서 끝나는 &lt;code&gt;dst&lt;/code&gt; 의 하위 배열에 복사됩니다 .</target>
        </trans-unit>
        <trans-unit id="eaabb9f00e50f3bf7294302ed9e39cca04a5618c" translate="yes" xml:space="preserve">
          <source>The first child of this node.</source>
          <target state="translated">이 노드의 첫 번째 자식입니다.</target>
        </trans-unit>
        <trans-unit id="82f23c5a5a075e723f10662e38703476e5a7bf48" translate="yes" xml:space="preserve">
          <source>The first child of this node. If there is no such node, this returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">The first child of this node. If there is no such node, this returns &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ecf2e38c35f8de71bd3d5a9b4b40324da1f7036a" translate="yes" xml:space="preserve">
          <source>The first class defined in a package determines the exact set of certificates that all subsequent classes defined in that package must contain. The set of certificates for a class is obtained from the &lt;a href=&quot;../security/codesource&quot;&gt;&lt;code&gt;&lt;code&gt;CodeSource&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; within the &lt;code&gt;ProtectionDomain&lt;/code&gt; of the class. Any classes added to that package must contain the same set of certificates or a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown. Note that if &lt;code&gt;name&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this check is not performed. You should always pass in the &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt; of the class you are defining as well as the bytes. This ensures that the class you are defining is indeed the class you think it is.</source>
          <target state="translated">패키지에 정의 된 첫 번째 클래스는 해당 패키지에 정의 된 모든 후속 클래스에 포함되어야하는 정확한 인증서 세트를 결정합니다. 클래스에 대한 인증서 세트는 클래스 의 &lt;code&gt;ProtectionDomain&lt;/code&gt; 내의 &lt;a href=&quot;../security/codesource&quot;&gt; &lt;code&gt;&lt;code&gt;CodeSource&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 에서 가져옵니다 . 해당 패키지에 추가 된 모든 클래스는 동일한 인증서 세트를 포함해야합니다. 그렇지 않으면 &lt;code&gt;SecurityException&lt;/code&gt; 이 발생합니다. 경우합니다 &lt;code&gt;name&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; 이 검사가 수행되지 않습니다. 항상 정의하고있는 클래스 의 &lt;a href=&quot;#name&quot;&gt;이진 이름&lt;/a&gt; 과 바이트를 전달해야합니다. 이것은 당신이 정의하고있는 클래스가 실제로 당신이 생각하는 클래스가되도록합니다.</target>
        </trans-unit>
        <trans-unit id="367a67e292ca391b3458ed7684121677f1963997" translate="yes" xml:space="preserve">
          <source>The first class defined in a package determines the exact set of certificates that all subsequent classes defined in that package must contain. The set of certificates for a class is obtained from the &lt;a href=&quot;../security/codesource&quot;&gt;&lt;code&gt;CodeSource&lt;/code&gt;&lt;/a&gt; within the &lt;code&gt;ProtectionDomain&lt;/code&gt; of the class. Any classes added to that package must contain the same set of certificates or a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown. Note that if &lt;code&gt;name&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this check is not performed. You should always pass in the &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; of the class you are defining as well as the bytes. This ensures that the class you are defining is indeed the class you think it is.</source>
          <target state="translated">The first class defined in a package determines the exact set of certificates that all subsequent classes defined in that package must contain. The set of certificates for a class is obtained from the &lt;a href=&quot;../security/codesource&quot;&gt; &lt;code&gt;CodeSource&lt;/code&gt; &lt;/a&gt; within the &lt;code&gt;ProtectionDomain&lt;/code&gt; of the class. Any classes added to that package must contain the same set of certificates or a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown. Note that if &lt;code&gt;name&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; , this check is not performed. You should always pass in the &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; of the class you are defining as well as the bytes. This ensures that the class you are defining is indeed the class you think it is.</target>
        </trans-unit>
        <trans-unit id="77ea805d80991cc84a0466fc40f83f5ced7c59b5" translate="yes" xml:space="preserve">
          <source>The first column</source>
          <target state="translated">The first column</target>
        </trans-unit>
        <trans-unit id="3a2e1acc3dd6e2be13a7cf2a6463f7153aae9448" translate="yes" xml:space="preserve">
          <source>The first column in a line is position 1.</source>
          <target state="translated">The first column in a line is position 1.</target>
        </trans-unit>
        <trans-unit id="8cb4363b69689efa2e879cbfc2f2088fbcfa0e7b" translate="yes" xml:space="preserve">
          <source>The first conversion is better than the second one.</source>
          <target state="translated">첫 번째 변환이 두 번째 변환보다 낫습니다.</target>
        </trans-unit>
        <trans-unit id="955b718107c9a85fdf32d9b7ba615294c28a2d9c" translate="yes" xml:space="preserve">
          <source>The first day-of-week defines the ISO &lt;code&gt;DayOfWeek&lt;/code&gt; that is day 1 of the week. The minimal number of days in the first week defines how many days must be present in a month or year, starting from the first day-of-week, before the week is counted as the first week. A value of 1 will count the first day of the month or year as part of the first week, whereas a value of 7 will require the whole seven days to be in the new month or year.</source>
          <target state="translated">첫 번째 요일 은 요일 1 인 ISO &lt;code&gt;DayOfWeek&lt;/code&gt; 를 정의합니다 . 첫 번째 주에서 최소 일 수는 첫 주부터 시작하여 첫 주로 계산되기까지 한 달 또는 연도에 몇 일이 있어야하는지 정의합니다. 값이 1이면 해당 월 또는 연도의 첫날이 첫 번째주의 일부로 계산되지만 값이 7이면 전체 7 일이 새 달 또는 연도에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="ede957077563e4ac1530acfa41dc3ea489ec60df" translate="yes" xml:space="preserve">
          <source>The first day-of-week varies by culture. For example, the US uses Sunday, while France and the ISO-8601 standard use Monday. This method returns the first day using the standard &lt;code&gt;DayOfWeek&lt;/code&gt; enum.</source>
          <target state="translated">첫 번째 요일은 문화에 따라 다릅니다. 예를 들어 미국은 일요일을 사용하고 프랑스와 ISO-8601 표준은 월요일을 사용합니다. 이 메서드는 표준 &lt;code&gt;DayOfWeek&lt;/code&gt; 열거 형을 사용하여 첫날을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a1da0a3f174bbc2d15f94c1f2cc8178e672bfa46" translate="yes" xml:space="preserve">
          <source>The first day-of-week. For example, the ISO-8601 standard considers Monday to be the first day-of-week.</source>
          <target state="translated">첫 번째 요일. 예를 들어, ISO-8601 표준은 월요일을 첫 번째 요일로 간주합니다.</target>
        </trans-unit>
        <trans-unit id="82e2b795a8a8cbc96640a5d47b1525ee3c2a5661" translate="yes" xml:space="preserve">
          <source>The first element (position &lt;code&gt;0&lt;/code&gt;) in the &lt;code&gt;DoubleStream&lt;/code&gt; will be the provided &lt;code&gt;seed&lt;/code&gt;. For &lt;code&gt;n &amp;gt; 0&lt;/code&gt;, the element at position &lt;code&gt;n&lt;/code&gt;, will be the result of applying the function &lt;code&gt;f&lt;/code&gt; to the element at position &lt;code&gt;n - 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DoubleStream&lt;/code&gt; 의 첫 번째 요소 (위치 &lt;code&gt;0&lt;/code&gt; ) 는 제공된 &lt;code&gt;seed&lt;/code&gt; 됩니다. 들면 &lt;code&gt;n &amp;gt; 0&lt;/code&gt; , 위치의 요소는 &lt;code&gt;n&lt;/code&gt; , 함수 적용의 결과 일 것이다 &lt;code&gt;f&lt;/code&gt; 위치의 요소를 &lt;code&gt;n - 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bded7ce8d5601d17d37c716de18a736a7543797d" translate="yes" xml:space="preserve">
          <source>The first element (position &lt;code&gt;0&lt;/code&gt;) in the &lt;code&gt;IntStream&lt;/code&gt; will be the provided &lt;code&gt;seed&lt;/code&gt;. For &lt;code&gt;n &amp;gt; 0&lt;/code&gt;, the element at position &lt;code&gt;n&lt;/code&gt;, will be the result of applying the function &lt;code&gt;f&lt;/code&gt; to the element at position &lt;code&gt;n - 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IntStream&lt;/code&gt; 의 첫 번째 요소 (위치 &lt;code&gt;0&lt;/code&gt; ) 는 제공된 &lt;code&gt;seed&lt;/code&gt; 됩니다. 들면 &lt;code&gt;n &amp;gt; 0&lt;/code&gt; , 위치의 요소는 &lt;code&gt;n&lt;/code&gt; , 함수 적용의 결과 일 것이다 &lt;code&gt;f&lt;/code&gt; 위치의 요소를 &lt;code&gt;n - 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a194dadcec7148ad3f47ec6fd680590400a3449e" translate="yes" xml:space="preserve">
          <source>The first element (position &lt;code&gt;0&lt;/code&gt;) in the &lt;code&gt;LongStream&lt;/code&gt; will be the provided &lt;code&gt;seed&lt;/code&gt;. For &lt;code&gt;n &amp;gt; 0&lt;/code&gt;, the element at position &lt;code&gt;n&lt;/code&gt;, will be the result of applying the function &lt;code&gt;f&lt;/code&gt; to the element at position &lt;code&gt;n - 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LongStream&lt;/code&gt; 의 첫 번째 요소 (위치 &lt;code&gt;0&lt;/code&gt; ) 는 제공된 &lt;code&gt;seed&lt;/code&gt; 됩니다. 들면 &lt;code&gt;n &amp;gt; 0&lt;/code&gt; , 위치의 요소는 &lt;code&gt;n&lt;/code&gt; , 함수 적용의 결과 일 것이다 &lt;code&gt;f&lt;/code&gt; 위치의 요소를 &lt;code&gt;n - 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a165f1a0b54273ae7adbf840b0c7faa2330e5ac4" translate="yes" xml:space="preserve">
          <source>The first element (position &lt;code&gt;0&lt;/code&gt;) in the &lt;code&gt;Stream&lt;/code&gt; will be the provided &lt;code&gt;seed&lt;/code&gt;. For &lt;code&gt;n &amp;gt; 0&lt;/code&gt;, the element at position &lt;code&gt;n&lt;/code&gt;, will be the result of applying the function &lt;code&gt;f&lt;/code&gt; to the element at position &lt;code&gt;n - 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Stream&lt;/code&gt; 의 첫 번째 요소 (위치 &lt;code&gt;0&lt;/code&gt; ) 는 제공된 &lt;code&gt;seed&lt;/code&gt; 됩니다. 들면 &lt;code&gt;n &amp;gt; 0&lt;/code&gt; , 위치의 요소는 &lt;code&gt;n&lt;/code&gt; , 함수 적용의 결과 일 것이다 &lt;code&gt;f&lt;/code&gt; 위치의 요소를 &lt;code&gt;n - 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5aab3f29aca09be0c5627c5a993c1167fb0b36b" translate="yes" xml:space="preserve">
          <source>The first element of the iterator should be the most &quot;natural&quot; type for decoding the image with as little loss as possible. For example, for a JPEG image the first entry should be an RGB image, even though the image data is stored internally in a YCbCr color space.</source>
          <target state="translated">반복자의 첫 번째 요소는 가능한 한 적은 손실로 이미지를 디코딩하는 가장 &quot;자연적인&quot;유형이어야합니다. 예를 들어 JPEG 이미지의 경우 이미지 데이터가 YCbCr 색상 공간에 내부적으로 저장되어 있어도 첫 번째 항목은 RGB 이미지 여야합니다.</target>
        </trans-unit>
        <trans-unit id="780baa695b0265440aa1ef37be800e344c7c7242" translate="yes" xml:space="preserve">
          <source>The first element returned by the iterator represents the name element that is closest to the root in the directory hierarchy, the second element is the next closest, and so on. The last element returned is the name of the file or directory denoted by this path. The &lt;a href=&quot;#getRoot()&quot;&gt;&lt;code&gt;root&lt;/code&gt;&lt;/a&gt; component, if present, is not returned by the iterator.</source>
          <target state="translated">The first element returned by the iterator represents the name element that is closest to the root in the directory hierarchy, the second element is the next closest, and so on. The last element returned is the name of the file or directory denoted by this path. The &lt;a href=&quot;#getRoot()&quot;&gt; &lt;code&gt;root&lt;/code&gt; &lt;/a&gt; component, if present, is not returned by the iterator.</target>
        </trans-unit>
        <trans-unit id="a4f67dca9f7c2569783dcc958d9c49f4cfb6a3bb" translate="yes" xml:space="preserve">
          <source>The first element returned by the iterator represents the name element that is closest to the root in the directory hierarchy, the second element is the next closest, and so on. The last element returned is the name of the file or directory denoted by this path. The &lt;a href=&quot;path#getRoot--&quot;&gt;&lt;code&gt;root&lt;/code&gt;&lt;/a&gt; component, if present, is not returned by the iterator.</source>
          <target state="translated">반복자가 리턴 한 첫 번째 요소는 디렉토리 계층에서 루트에 가장 가까운 이름 요소를 나타내고 두 번째 요소는 다음으로 가장 가까운 요소입니다. 마지막으로 리턴 된 요소는이 경로로 표시된 파일 또는 디렉토리의 이름입니다. &lt;a href=&quot;path#getRoot--&quot;&gt; &lt;code&gt;root&lt;/code&gt; &lt;/a&gt; 구성 요소가 존재하는 경우, 반복자에 의해 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d373f684ec8e70f9e47427a2755704ec23ef7c5f" translate="yes" xml:space="preserve">
          <source>The first example shows a stack trace element consisting of three elements, each separated by &lt;code&gt;&quot;/&quot;&lt;/code&gt; followed with the source file name and the line number of the source line containing the execution point. The first element &quot;&lt;code&gt;com.foo.loader&lt;/code&gt;&quot; is the name of the class loader. The second element &quot;&lt;code&gt;foo@9.0&lt;/code&gt;&quot; is the module name and version. The third element is the method containing the execution point; &quot;&lt;code&gt;com.foo.Main&quot;&lt;/code&gt;&quot; is the fully-qualified class name and &quot;&lt;code&gt;run&lt;/code&gt;&quot; is the name of the method. &quot;&lt;code&gt;Main.java&lt;/code&gt;&quot; is the source file name and &quot;&lt;code&gt;101&lt;/code&gt;&quot; is the line number.</source>
          <target state="translated">The first example shows a stack trace element consisting of three elements, each separated by &lt;code&gt;&quot;/&quot;&lt;/code&gt; followed with the source file name and the line number of the source line containing the execution point. The first element &quot; &lt;code&gt;com.foo.loader&lt;/code&gt; &quot; is the name of the class loader. The second element &quot; &lt;code&gt;foo@9.0&lt;/code&gt; &quot; is the module name and version. The third element is the method containing the execution point; &quot; &lt;code&gt;com.foo.Main&quot;&lt;/code&gt; &quot; is the fully-qualified class name and &quot; &lt;code&gt;run&lt;/code&gt; &quot; is the name of the method. &quot; &lt;code&gt;Main.java&lt;/code&gt; &quot; is the source file name and &quot; &lt;code&gt;101&lt;/code&gt; &quot; is the line number.</target>
        </trans-unit>
        <trans-unit id="c9df982ded0059a42a5326715d9b35822b9222f7" translate="yes" xml:space="preserve">
          <source>The first example shows a stack trace element consisting of three elements, each separated by &lt;code&gt;&quot;/&quot;&lt;/code&gt;, followed by the source file name and the line number of the source line containing the execution point. The first element &quot;&lt;code&gt;com.foo.loader&lt;/code&gt;&quot; is the name of the class loader. The second element &quot;&lt;code&gt;foo@9.0&lt;/code&gt;&quot; is the module name and version. The third element is the method containing the execution point; &quot;&lt;code&gt;com.foo.Main&quot;&lt;/code&gt;&quot; is the fully-qualified class name and &quot;&lt;code&gt;run&lt;/code&gt;&quot; is the name of the method. &quot;&lt;code&gt;Main.java&lt;/code&gt;&quot; is the source file name and &quot;&lt;code&gt;101&lt;/code&gt;&quot; is the line number.</source>
          <target state="translated">첫 번째 예는 각각 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 로 구분 된 세 개의 요소로 구성된 스택 추적 요소 와 소스 파일 이름 및 실행 지점을 포함하는 소스 행의 행 번호를 보여줍니다. 첫 번째 요소 &quot; &lt;code&gt;com.foo.loader&lt;/code&gt; &quot;는 클래스 로더의 이름입니다. 두 번째 요소 &quot; &lt;code&gt;foo@9.0&lt;/code&gt; &quot;은 모듈 이름과 버전입니다. 세 번째 요소는 실행 지점을 포함하는 메서드입니다. &quot; &lt;code&gt;com.foo.Main&quot;&lt;/code&gt; &quot;은 완전한 클래스 이름이고&quot; &lt;code&gt;run&lt;/code&gt; &quot;은 메소드의 이름입니다.&quot; &lt;code&gt;Main.java&lt;/code&gt; &quot;는 소스 파일 이름이고&quot; &lt;code&gt;101&lt;/code&gt; &quot;은 행 번호입니다.</target>
        </trans-unit>
        <trans-unit id="d6413ccd6f5782f5342b586620e6f4a0abde22ef" translate="yes" xml:space="preserve">
          <source>The first example specifies the methods: POST, GET and DELETE, but no request headers. The second example specifies one request method and two headers. The third example specifies two request methods, and two headers.</source>
          <target state="translated">첫 번째 예는 POST, GET 및 DELETE 메소드를 지정하지만 요청 헤더는 지정하지 않습니다. 두 번째 예는 하나의 요청 방법과 두 개의 헤더를 지정합니다. 세 번째 예는 두 개의 요청 메소드와 두 개의 헤더를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="232fe5799d43af6e10cb304776efde1739a6180e" translate="yes" xml:space="preserve">
          <source>The first example uses the static method &lt;code&gt;MessageFormat.format&lt;/code&gt;, which internally creates a &lt;code&gt;MessageFormat&lt;/code&gt; for one-time use:</source>
          <target state="translated">첫 번째 예는 정적 메소드 &lt;code&gt;MessageFormat.format&lt;/code&gt; 을 사용하여 내부적 으로 일회용 으로 &lt;code&gt;MessageFormat&lt;/code&gt; 을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="fe870d496f992cfccff0251dbbae3331dfec9862" translate="yes" xml:space="preserve">
          <source>The first five fields have non-negative (&amp;gt;=0) integers or null (which represents that the field is not set), and the seconds field has a non-negative decimal or null. A negative sign indicates a negative duration.</source>
          <target state="translated">The first five fields have non-negative (&amp;gt;=0) integers or null (which represents that the field is not set), and the seconds field has a non-negative decimal or null. A negative sign indicates a negative duration.</target>
        </trans-unit>
        <trans-unit id="6b46b643ffc068ef7965d6231b3153ce167aa87e" translate="yes" xml:space="preserve">
          <source>The first integer data array.</source>
          <target state="translated">The first integer data array.</target>
        </trans-unit>
        <trans-unit id="9f9027453c27f495317af2745753a0e023e2b7cf" translate="yes" xml:space="preserve">
          <source>The first invocation of any of the methods defined by this class causes the default &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; to be loaded. The default provider, identified by the URI scheme &quot;file&quot;, creates the &lt;a href=&quot;filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that provides access to the file systems accessible to the Java virtual machine. If the process of loading or initializing the default provider fails then an unspecified error is thrown.</source>
          <target state="translated">이 클래스에 의해 정의 된 메소드를 처음 호출하면 기본 &lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt; 가로드됩니다. URI 체계 &quot;file&quot;로 식별되는 기본 제공자 는 Java 가상 머신에 액세스 가능한 파일 시스템에 대한 액세스를 제공 하는 &lt;a href=&quot;filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt; 을 작성합니다 . 기본 제공자를로드하거나 초기화하는 프로세스가 실패하면 지정되지 않은 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6b707d2f98066d10d4d06e91896be54d4b5b28f2" translate="yes" xml:space="preserve">
          <source>The first invocation of any of the methods defined by this class locates the default &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; object. Where the system property &lt;code&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; is not defined then the default provider is a system-default provider that is invoked to create the default file system.</source>
          <target state="translated">이 클래스에 의해 정의 된 메소드 중 첫 번째 호출은 기본 &lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt; 오브젝트를 찾습니다 . 시스템 특성 &lt;code&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; 가 정의되지 않은 경우 기본 제공자는 기본 파일 시스템을 작성하기 위해 호출되는 시스템 기본 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="9eb8bef38b28e15b1a42751b14de53ed5402bed9" translate="yes" xml:space="preserve">
          <source>The first invocation of the &lt;a href=&quot;spi/filesystemprovider#installedProviders&quot;&gt;&lt;code&gt;installedProviders&lt;/code&gt;&lt;/a&gt; method, by way of invoking any of the &lt;code&gt;newFileSystem&lt;/code&gt; methods defined by this class, locates and loads all installed file system providers. Installed providers are loaded using the service-provider loading facility defined by the &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class. Installed providers are loaded using the system class loader. If the system class loader cannot be found then the extension class loader is used; if there is no extension class loader then the bootstrap class loader is used. Providers are typically installed by placing them in a JAR file on the application class path or in the extension directory, the JAR file contains a provider-configuration file named &lt;code&gt;java.nio.file.spi.FileSystemProvider&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;, and the file lists one or more fully-qualified names of concrete subclass of &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;FileSystemProvider&lt;/code&gt;&lt;/a&gt; that have a zero argument constructor. The ordering that installed providers are located is implementation specific. If a provider is instantiated and its &lt;a href=&quot;spi/filesystemprovider#getScheme--&quot;&gt;&lt;code&gt;getScheme&lt;/code&gt;&lt;/a&gt; returns the same URI scheme of a provider that was previously instantiated then the most recently instantiated duplicate is discarded. URI schemes are compared without regard to case. During construction a provider may safely access files associated with the default provider but care needs to be taken to avoid circular loading of other installed providers. If circular loading of installed providers is detected then an unspecified error is thrown.</source>
          <target state="translated">이 클래스에 의해 정의 된 &lt;code&gt;newFileSystem&lt;/code&gt; 메소드 를 호출 하여 &lt;a href=&quot;spi/filesystemprovider#installedProviders&quot;&gt; &lt;code&gt;installedProviders&lt;/code&gt; &lt;/a&gt; 메소드를 처음 호출하면 설치된 모든 파일 시스템 제공자를 찾아로드합니다. 설치된 제공자는 &lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; 클래스에 의해 정의 된 서비스 제공자로드 기능을 사용하여로드됩니다 . 설치된 프로 바이더는 시스템 클래스 로더를 사용하여로드됩니다. 시스템 클래스 로더를 찾을 수 없으면 확장 클래스 로더가 사용됩니다. 확장 클래스 로더가 없으면 부트 스트랩 클래스 로더가 사용됩니다. 제공자는 일반적으로 애플리케이션 클래스 경로 또는 확장 디렉토리의 JAR 파일에 배치하여 설치되며, JAR 파일에는 자원 디렉토리에 이름이 지정된 제공자 구성 파일이 포함됩니다. &lt;code&gt;java.nio.file.spi.FileSystemProvider&lt;/code&gt; &lt;code&gt;META-INF/services&lt;/code&gt; 및 파일에는 인수 생성자가없는 &lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;FileSystemProvider&lt;/code&gt; &lt;/a&gt; 의 구체적인 서브 클래스의 정규화 된 이름이 하나 이상 나열 됩니다. 설치된 공급자가있는 순서는 구현에 따라 다릅니다. 제공자가 인스턴스화되고 해당 &lt;a href=&quot;spi/filesystemprovider#getScheme--&quot;&gt; &lt;code&gt;getScheme&lt;/code&gt; &lt;/a&gt; 이 이전에 인스턴스화 된 제공자의 동일한 URI 스킴을 리턴하면 가장 최근에 인스턴스화 된 복제본이 삭제됩니다. URI 스킴은 대소 문자와 상관없이 비교됩니다. 구성하는 동안 공급자는 기본 공급자와 관련된 파일에 안전하게 액세스 할 수 있지만 설치된 다른 공급자의 순환로드를 피하기 위해주의를 기울여야합니다. 설치된 제공자의 순환로드가 감지되면 지정되지 않은 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8c101353a36400f0f63bb3ab9abfa6a9016bbaca" translate="yes" xml:space="preserve">
          <source>The first invocation of the &lt;a href=&quot;spi/filesystemprovider#installedProviders()&quot;&gt;&lt;code&gt;installedProviders&lt;/code&gt;&lt;/a&gt; method, by way of invoking any of the &lt;code&gt;
 newFileSystem&lt;/code&gt; methods defined by this class, locates and loads all installed file system providers. Installed providers are loaded using the service-provider loading facility defined by the &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class. Installed providers are loaded using the system class loader. If the system class loader cannot be found then the platform class loader is used. Providers are typically installed by placing them in a JAR file on the application class path, the JAR file contains a provider-configuration file named &lt;code&gt;java.nio.file.spi.FileSystemProvider&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;, and the file lists one or more fully-qualified names of concrete subclass of &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;FileSystemProvider&lt;/code&gt;&lt;/a&gt; that have a zero argument constructor. The ordering that installed providers are located is implementation specific. If a provider is instantiated and its &lt;a href=&quot;spi/filesystemprovider#getScheme()&quot;&gt;&lt;code&gt;getScheme&lt;/code&gt;&lt;/a&gt; returns the same URI scheme of a provider that was previously instantiated then the most recently instantiated duplicate is discarded. URI schemes are compared without regard to case. During construction a provider may safely access files associated with the default provider but care needs to be taken to avoid circular loading of other installed providers. If circular loading of installed providers is detected then an unspecified error is thrown.</source>
          <target state="translated">The first invocation of the &lt;a href=&quot;spi/filesystemprovider#installedProviders()&quot;&gt; &lt;code&gt;installedProviders&lt;/code&gt; &lt;/a&gt; method, by way of invoking any of the &lt;code&gt; newFileSystem&lt;/code&gt; methods defined by this class, locates and loads all installed file system providers. Installed providers are loaded using the service-provider loading facility defined by the &lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; class. Installed providers are loaded using the system class loader. If the system class loader cannot be found then the platform class loader is used. Providers are typically installed by placing them in a JAR file on the application class path, the JAR file contains a provider-configuration file named &lt;code&gt;java.nio.file.spi.FileSystemProvider&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt; , and the file lists one or more fully-qualified names of concrete subclass of &lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;FileSystemProvider&lt;/code&gt; &lt;/a&gt; that have a zero argument constructor. The ordering that installed providers are located is implementation specific. If a provider is instantiated and its &lt;a href=&quot;spi/filesystemprovider#getScheme()&quot;&gt; &lt;code&gt;getScheme&lt;/code&gt; &lt;/a&gt; returns the same URI scheme of a provider that was previously instantiated then the most recently instantiated duplicate is discarded. URI schemes are compared without regard to case. During construction a provider may safely access files associated with the default provider but care needs to be taken to avoid circular loading of other installed providers. If circular loading of installed providers is detected then an unspecified error is thrown.</target>
        </trans-unit>
        <trans-unit id="50b4cfa2ac06af0620f808ca10930df4c3cf1775" translate="yes" xml:space="preserve">
          <source>The first invocation of this method causes the default provider to be initialized (if not already initialized) and loads any other installed providers as described by the &lt;a href=&quot;../filesystems&quot;&gt;&lt;code&gt;FileSystems&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">이 메소드를 처음 호출하면 기본 제공자가 초기화되고 (아직 초기화되지 않은 경우) &lt;a href=&quot;../filesystems&quot;&gt; &lt;code&gt;FileSystems&lt;/code&gt; &lt;/a&gt; 클래스에 설명 된대로 설치된 다른 제공자를로드합니다 .</target>
        </trans-unit>
        <trans-unit id="04ddabf3609314c77fc9442c207329a5bac474e5" translate="yes" xml:space="preserve">
          <source>The first invocation of this method creates the channel that is returned. Subsequent invocations of this method return the same channel.</source>
          <target state="translated">이 메소드의 첫 번째 호출은 리턴되는 채널을 작성합니다. 이 메소드의 후속 호출은 동일한 채널을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="41806187d179ed163c43e135856d8b855c241487" translate="yes" xml:space="preserve">
          <source>The first invocation of this method locates the default provider object as follows:</source>
          <target state="translated">이 메소드의 첫 번째 호출은 다음과 같이 기본 제공자 오브젝트를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="58220b7cc0880c65c446fb69fdba5d879036d3cd" translate="yes" xml:space="preserve">
          <source>The first invocation of this method works as if invoking it were equivalent to evaluating the expression:</source>
          <target state="translated">이 메소드의 첫 번째 호출은 호출하는 것이 표현식을 평가하는 것과 동일하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="7ca058cd84f4d90ef57f22561005b44549ee1824" translate="yes" xml:space="preserve">
          <source>The first is a start signal that prevents any worker from proceeding until the driver is ready for them to proceed;</source>
          <target state="translated">첫 번째는 운전자가 진행할 준비가 될 때까지 작업자가 진행하지 못하게하는 시작 신호입니다.</target>
        </trans-unit>
        <trans-unit id="89010690973d5a466a568016925bd8250e0db1e5" translate="yes" xml:space="preserve">
          <source>The first item in the array must be the name of the service provider for the &quot;preferred&quot; reader, as it will be used to instantiate the &lt;code&gt;ImageReader&lt;/code&gt; returned by &lt;code&gt;ImageIO.getImageReader(ImageWriter)&lt;/code&gt;.</source>
          <target state="translated">배열의 첫 번째 항목은 &quot;선호&quot;리더에 대한 서비스 제공자의 이름이어야합니다 . &lt;code&gt;ImageIO.getImageReader(ImageWriter)&lt;/code&gt; 의해 리턴 된 &lt;code&gt;ImageReader&lt;/code&gt; 를 인스턴스화하는 데 사용되기 때문입니다 .</target>
        </trans-unit>
        <trans-unit id="9b96b213b3a7afec438c64603d9c66e3022ffe8e" translate="yes" xml:space="preserve">
          <source>The first item in the array must be the name of the service provider for the &quot;preferred&quot; writer, as it will be used to instantiate the &lt;code&gt;ImageWriter&lt;/code&gt; returned by &lt;code&gt;ImageIO.getImageWriter(ImageReader)&lt;/code&gt;.</source>
          <target state="translated">배열의 첫 번째 항목은 &quot;선호&quot;작성기에 대한 서비스 제공자의 이름이어야합니다 . &lt;code&gt;ImageIO.getImageWriter(ImageReader)&lt;/code&gt; 의해 리턴 된 &lt;code&gt;ImageWriter&lt;/code&gt; 를 인스턴스화하는 데 사용되기 때문입니다 .</target>
        </trans-unit>
        <trans-unit id="82745ec93db99b445485eed887cfade634be0e88" translate="yes" xml:space="preserve">
          <source>The first line is line 1.</source>
          <target state="translated">The first line is line 1.</target>
        </trans-unit>
        <trans-unit id="d712c8c96e658d28ae5bf8727956e1bad67dd834" translate="yes" xml:space="preserve">
          <source>The first name in an abstract pathname may be a directory name or, in the case of Microsoft Windows UNC pathnames, a hostname. Each subsequent name in an abstract pathname denotes a directory; the last name may denote either a directory or a file. The &lt;em&gt;empty&lt;/em&gt; abstract pathname has no prefix and an empty name sequence.</source>
          <target state="translated">추상 경로 이름의 첫 번째 이름은 디렉토리 이름이거나 Microsoft Windows UNC 경로 이름의 경우 호스트 이름 일 수 있습니다. 추상 경로명의 각 후속 이름은 디렉토리를 나타냅니다. 성은 디렉토리 또는 파일을 나타낼 수 있습니다. &lt;em&gt;빈&lt;/em&gt; 추상 패스는 접두사와 하늘의 이름 순서가 없습니다.</target>
        </trans-unit>
        <trans-unit id="9bc303af8db48e36c4c66c6bdedc67a512bd52cf" translate="yes" xml:space="preserve">
          <source>The first number in the range of IDs used for internal frame events.</source>
          <target state="translated">The first number in the range of IDs used for internal frame events.</target>
        </trans-unit>
        <trans-unit id="37141897704a9f57efd5588b0c01740b744d6fb2" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for action events.</source>
          <target state="translated">The first number in the range of ids used for action events.</target>
        </trans-unit>
        <trans-unit id="5b311455257b5f8396bcd1a51a9d0c1bd4251848" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for component events.</source>
          <target state="translated">The first number in the range of ids used for component events.</target>
        </trans-unit>
        <trans-unit id="ea2dec83a5590e133d8a736a424395f9110cfee6" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for container events.</source>
          <target state="translated">The first number in the range of ids used for container events.</target>
        </trans-unit>
        <trans-unit id="b9b26b88c313013146d03dc163d14340b6c78c9d" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for focus events.</source>
          <target state="translated">The first number in the range of ids used for focus events.</target>
        </trans-unit>
        <trans-unit id="fd2879600cbc09ebe50ee9cc9af9b6ba0a6705e3" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for item events.</source>
          <target state="translated">The first number in the range of ids used for item events.</target>
        </trans-unit>
        <trans-unit id="152d070f7807fc1757fefb801204288c7ee66f3d" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for key events.</source>
          <target state="translated">The first number in the range of ids used for key events.</target>
        </trans-unit>
        <trans-unit id="8dd930b4621934d75ddab8e7be255982b72242de" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for mouse events.</source>
          <target state="translated">The first number in the range of ids used for mouse events.</target>
        </trans-unit>
        <trans-unit id="884054f92755178e2c0ecb00a6d504f92ce507c8" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for text events.</source>
          <target state="translated">The first number in the range of ids used for text events.</target>
        </trans-unit>
        <trans-unit id="29bb2f4b5ef4ebb2ea108d313ba1df485fdc86b4" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for window events.</source>
          <target state="translated">The first number in the range of ids used for window events.</target>
        </trans-unit>
        <trans-unit id="eb460a3d41545816fab893228040f63048f7d7fb" translate="yes" xml:space="preserve">
          <source>The first occurrence of the property from the constructor's environment parameter and (for appropriate properties) the applet parameters and system properties.</source>
          <target state="translated">생성자의 환경 매개 변수 및 애플릿 매개 변수 및 시스템 특성 (적절한 특성의 경우)에서 특성이 처음으로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="8f6308e6ea90bd6d645d7b067d249f24b93a9343" translate="yes" xml:space="preserve">
          <source>The first occurrence of the property from the constructor's environment parameter and system properties.</source>
          <target state="translated">The first occurrence of the property from the constructor's environment parameter and system properties.</target>
        </trans-unit>
        <trans-unit id="ff7a6ea7d00a42f276b2164fd60502c29eb70ffa" translate="yes" xml:space="preserve">
          <source>The first of two UUIDs is greater than the second if the most significant field in which the UUIDs differ is greater for the first UUID.</source>
          <target state="translated">UUID가 다른 최상위 필드가 첫 번째 UUID보다 큰 경우 두 UUID 중 첫 번째가 두 번째 UUID보다 큽니다.</target>
        </trans-unit>
        <trans-unit id="32cab14236cd798cfadf3e1be64fb360b8030f9a" translate="yes" xml:space="preserve">
          <source>The first row</source>
          <target state="translated">The first row</target>
        </trans-unit>
        <trans-unit id="2d8ffc9fbdb5b42ccb7e6113a4bea28052899dce" translate="yes" xml:space="preserve">
          <source>The first row that has changed.</source>
          <target state="translated">The first row that has changed.</target>
        </trans-unit>
        <trans-unit id="349d7a74a12185a372204feb651bef45ef76c7d7" translate="yes" xml:space="preserve">
          <source>The first service provider found that supports the specified schema language is returned.</source>
          <target state="translated">The first service provider found that supports the specified schema language is returned.</target>
        </trans-unit>
        <trans-unit id="6f39de29791b960b0050651d1adaf3db95249f62" translate="yes" xml:space="preserve">
          <source>The first service provider or empty &lt;code&gt;Optional&lt;/code&gt; if no service providers are located</source>
          <target state="translated">The first service provider or empty &lt;code&gt;Optional&lt;/code&gt; if no service providers are located</target>
        </trans-unit>
        <trans-unit id="5b88e35bd663e8d6a276c15cdae081f89486351b" translate="yes" xml:space="preserve">
          <source>The first short data array.</source>
          <target state="translated">The first short data array.</target>
        </trans-unit>
        <trans-unit id="5e23cf40c525068cb2aa6e67ac2fbcec503f3f80" translate="yes" xml:space="preserve">
          <source>The first subscript is the row index and the second is the column index. This operation uses none of the currently defined rendering hints; the &lt;code&gt;RenderingHints&lt;/code&gt; argument can be null.</source>
          <target state="translated">The first subscript is the row index and the second is the column index. This operation uses none of the currently defined rendering hints; the &lt;code&gt;RenderingHints&lt;/code&gt; argument can be null.</target>
        </trans-unit>
        <trans-unit id="396d36f59149714c5c3764da6a2772b77784a9b2" translate="yes" xml:space="preserve">
          <source>The first three indices refer to color samples; index 0 corresponds to red, index 1 to green, and index 2 to blue.</source>
          <target state="translated">The first three indices refer to color samples; index 0 corresponds to red, index 1 to green, and index 2 to blue.</target>
        </trans-unit>
        <trans-unit id="f47ae950941163171dfda88d6714786ffab47ac4" translate="yes" xml:space="preserve">
          <source>The first time a &lt;code&gt;invokevirtual&lt;/code&gt; instruction is executed it is linked, by symbolically resolving the names in the instruction and verifying that the method call is statically legal. This is true of calls to &lt;code&gt;invokeExact&lt;/code&gt; and &lt;code&gt;invoke&lt;/code&gt;. In this case, the symbolic type descriptor emitted by the compiler is checked for correct syntax and names it contains are resolved. Thus, an &lt;code&gt;invokevirtual&lt;/code&gt; instruction which invokes a method handle will always link, as long as the symbolic type descriptor is syntactically well-formed and the types exist.</source>
          <target state="translated">호출 &lt;code&gt;invokevirtual&lt;/code&gt; 명령이 처음 실행될 때 명령의 이름을 상징적으로 확인하고 메소드 호출이 정적으로 합법적인지 확인하여 연결됩니다. 이것은 &lt;code&gt;invokeExact&lt;/code&gt; 및 &lt;code&gt;invoke&lt;/code&gt; 호출에 해당 됩니다. 이 경우 컴파일러에서 생성 한 기호 형식 설명자가 올바른 구문인지 확인하고 포함 된 이름이 확인됩니다. 따라서, 메소드 핸들을 호출 하는 &lt;code&gt;invokevirtual&lt;/code&gt; 명령은 기호 유형 설명자가 구문 상 올바르게 구성되고 유형이 존재하는 한 항상 링크됩니다.</target>
        </trans-unit>
        <trans-unit id="985e51731d29ab2953416b90ddb0f5a15a287400" translate="yes" xml:space="preserve">
          <source>The first time an &lt;code&gt;invokevirtual&lt;/code&gt; instruction is executed it is linked by symbolically resolving the names in the instruction and verifying that the method call is statically legal. This also holds for calls to &lt;code&gt;invokeExact&lt;/code&gt; and &lt;code&gt;invoke&lt;/code&gt;. In this case, the symbolic type descriptor emitted by the compiler is checked for correct syntax, and names it contains are resolved. Thus, an &lt;code&gt;invokevirtual&lt;/code&gt; instruction which invokes a method handle will always link, as long as the symbolic type descriptor is syntactically well-formed and the types exist.</source>
          <target state="translated">The first time an &lt;code&gt;invokevirtual&lt;/code&gt; instruction is executed it is linked by symbolically resolving the names in the instruction and verifying that the method call is statically legal. This also holds for calls to &lt;code&gt;invokeExact&lt;/code&gt; and &lt;code&gt;invoke&lt;/code&gt; . In this case, the symbolic type descriptor emitted by the compiler is checked for correct syntax, and names it contains are resolved. Thus, an &lt;code&gt;invokevirtual&lt;/code&gt; instruction which invokes a method handle will always link, as long as the symbolic type descriptor is syntactically well-formed and the types exist.</target>
        </trans-unit>
        <trans-unit id="4efbaef427b41c4cddb7b71dd9ca3b801b917cbc" translate="yes" xml:space="preserve">
          <source>The first time an &lt;code&gt;invokevirtual&lt;/code&gt; instruction is executed it is linked by symbolically resolving the names in the instruction and verifying that the method call is statically legal. This also holds for calls to access mode methods. In this case, the symbolic type descriptor emitted by the compiler is checked for correct syntax, and names it contains are resolved. Thus, an &lt;code&gt;invokevirtual&lt;/code&gt; instruction which invokes an access mode method will always link, as long as the symbolic type descriptor is syntactically well-formed and the types exist.</source>
          <target state="translated">The first time an &lt;code&gt;invokevirtual&lt;/code&gt; instruction is executed it is linked by symbolically resolving the names in the instruction and verifying that the method call is statically legal. This also holds for calls to access mode methods. In this case, the symbolic type descriptor emitted by the compiler is checked for correct syntax, and names it contains are resolved. Thus, an &lt;code&gt;invokevirtual&lt;/code&gt; instruction which invokes an access mode method will always link, as long as the symbolic type descriptor is syntactically well-formed and the types exist.</target>
        </trans-unit>
        <trans-unit id="7984f8d9f334e66a61a472a9952f92a917e7ab62" translate="yes" xml:space="preserve">
          <source>The first time this method is called, the security property &quot;ssl.ServerSocketFactory.provider&quot; is examined. If it is non-null, a class by that name is loaded and instantiated. If that is successful and the object is an instance of SSLServerSocketFactory, it is made the default SSL server socket factory.</source>
          <target state="translated">이 메소드를 처음 호출하면 보안 특성 &quot;ssl.ServerSocketFactory.provider&quot;가 검사됩니다. 널이 아닌 경우 해당 이름의 클래스가로드되고 인스턴스화됩니다. 성공하고 오브젝트가 SSLServerSocketFactory의 인스턴스 인 경우 기본 SSL 서버 소켓 팩토리가됩니다.</target>
        </trans-unit>
        <trans-unit id="e23a8d2403200f42d35c95dbaa01e126e21da9de" translate="yes" xml:space="preserve">
          <source>The first time this method is called, the security property &quot;ssl.SocketFactory.provider&quot; is examined. If it is non-null, a class by that name is loaded and instantiated. If that is successful and the object is an instance of SSLSocketFactory, it is made the default SSL socket factory.</source>
          <target state="translated">이 메소드를 처음 호출하면 보안 특성 &quot;ssl.SocketFactory.provider&quot;가 검사됩니다. 널이 아닌 경우 해당 이름의 클래스가로드되고 인스턴스화됩니다. 성공하고 객체가 SSLSocketFactory의 인스턴스 인 경우 기본 SSL 소켓 팩토리가됩니다.</target>
        </trans-unit>
        <trans-unit id="8a962c97e6518122f548b76af705929079edf476" translate="yes" xml:space="preserve">
          <source>The first two bytes are read, starting from the current file pointer, as if by &lt;code&gt;readUnsignedShort&lt;/code&gt;. This value gives the number of following bytes that are in the encoded string, not the length of the resulting string. The following bytes are then interpreted as bytes encoding characters in the modified UTF-8 format and are converted into characters.</source>
          <target state="translated">&lt;code&gt;readUnsignedShort&lt;/code&gt; 처럼 현재 파일 포인터에서 시작하여 처음 두 바이트를 읽습니다 . 이 값은 결과 문자열의 길이가 아니라 인코딩 된 문자열에있는 다음 바이트 수를 제공합니다. 다음 바이트는 수정 된 UTF-8 형식의 문자를 인코딩하는 바이트로 해석되어 문자로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="93f09dc332a6d87cbc7f2700d1dcb772db50c731" translate="yes" xml:space="preserve">
          <source>The first two items are simple menu items, labeled &lt;code&gt;&quot;Basic&quot;&lt;/code&gt; and &lt;code&gt;&quot;Simple&quot;&lt;/code&gt;. Following these two items is a separator, which is itself a menu item, created with the label &lt;code&gt;&quot;-&quot;&lt;/code&gt;. Next is an instance of &lt;code&gt;CheckboxMenuItem&lt;/code&gt; labeled &lt;code&gt;&quot;Check&quot;&lt;/code&gt;. The final menu item is a submenu labeled &lt;code&gt;&quot;More&amp;nbsp;Examples&quot;&lt;/code&gt;, and this submenu is an instance of &lt;code&gt;Menu&lt;/code&gt;.</source>
          <target state="translated">The first two items are simple menu items, labeled &lt;code&gt;&quot;Basic&quot;&lt;/code&gt; and &lt;code&gt;&quot;Simple&quot;&lt;/code&gt; . Following these two items is a separator, which is itself a menu item, created with the label &lt;code&gt;&quot;-&quot;&lt;/code&gt; . Next is an instance of &lt;code&gt;CheckboxMenuItem&lt;/code&gt; labeled &lt;code&gt;&quot;Check&quot;&lt;/code&gt; . The final menu item is a submenu labeled &lt;code&gt;&quot;More&amp;nbsp;Examples&quot;&lt;/code&gt; , and this submenu is an instance of &lt;code&gt;Menu&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d15c31a1476ba8c9f7c7d8d27e82b5d640f1a77" translate="yes" xml:space="preserve">
          <source>The first unsigned-short data array.</source>
          <target state="translated">The first unsigned-short data array.</target>
        </trans-unit>
        <trans-unit id="c213cb05e58269d0e6559b0fac1fb591d498dc45" translate="yes" xml:space="preserve">
          <source>The first view shows the button as it appears normally. The second view shows the button when it has input focus. Its outline is darkened to let the user know that it is an active object. The third view shows the button when the user clicks the mouse over the button, and thus requests that an action be performed.</source>
          <target state="translated">The first view shows the button as it appears normally. The second view shows the button when it has input focus. Its outline is darkened to let the user know that it is an active object. The third view shows the button when the user clicks the mouse over the button, and thus requests that an action be performed.</target>
        </trans-unit>
        <trans-unit id="fbae85dad2c6f7a5278ce4329244cf84e25dc187" translate="yes" xml:space="preserve">
          <source>The first week of a week-based-year is the first Monday-based week of the standard ISO year that has at least 4 days in the new year.</source>
          <target state="translated">주별 첫 번째주는 표준 ISO 연도의 첫 번째 월요일 기반 주이며 새해에는 최소 4 일이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6840846e65ec7f260d3170cb487c39754d2913de" translate="yes" xml:space="preserve">
          <source>The fist argument of the permission required to execute this diagnostic command or null if no permission is required</source>
          <target state="translated">이 진단 명령을 실행하는 데 필요한 권한의 첫 번째 인수 또는 권한이 필요하지 않은 경우 null</target>
        </trans-unit>
        <trans-unit id="0316cde32b5bdfb9b4fd9633c6be6b42a876e337" translate="yes" xml:space="preserve">
          <source>The fixed content-length when using fixed-length streaming mode.</source>
          <target state="translated">The fixed content-length when using fixed-length streaming mode.</target>
        </trans-unit>
        <trans-unit id="4cf30efc47ef55fd6ea1c557d0031cbff7deeca7" translate="yes" xml:space="preserve">
          <source>The fixed content-length when using fixed-length streaming mode. A value of &lt;code&gt;-1&lt;/code&gt; means fixed-length streaming mode is disabled for output.</source>
          <target state="translated">고정 길이 스트리밍 모드를 사용할 때 고정 컨텐트 길이입니다. &lt;code&gt;-1&lt;/code&gt; 값은 고정 길이 스트리밍 모드가 출력에 대해 비활성화됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="18122c06563b7f982531824d6ea7e1e9e3c9b49b" translate="yes" xml:space="preserve">
          <source>The flag</source>
          <target state="translated">깃발</target>
        </trans-unit>
        <trans-unit id="9ce4a81d34da195f11b58288ebb14bbff3d3462c" translate="yes" xml:space="preserve">
          <source>The flag for recalculating the minimum preferred size.</source>
          <target state="translated">The flag for recalculating the minimum preferred size.</target>
        </trans-unit>
        <trans-unit id="3bdde16f19a07f9b8dc2c1020a660b4e0748e32a" translate="yes" xml:space="preserve">
          <source>The flag implies UNICODE_CASE, that is, it enables Unicode-aware case folding.</source>
          <target state="translated">이 플래그는 UNICODE_CASE를 의미합니다. 즉, 유니 코드를 인식하는 대소 문자 접기가 가능합니다.</target>
        </trans-unit>
        <trans-unit id="8475b1dcbef3b5a8dfaaa365038143cbaecb1e14" translate="yes" xml:space="preserve">
          <source>The flags</source>
          <target state="translated">깃발</target>
        </trans-unit>
        <trans-unit id="acf1c6f398fdcbcb2dd9d5e16e98bf9f77cfd517" translate="yes" xml:space="preserve">
          <source>The flags CASE_INSENSITIVE and UNICODE_CASE retain their impact on matching when used in conjunction with this flag. The other flags become superfluous.</source>
          <target state="translated">CASE_INSENSITIVE 및 UNICODE_CASE 플래그는이 플래그와 함께 사용될 때 일치에 대한 영향을 유지합니다. 다른 깃발들은 불필요 해집니다.</target>
        </trans-unit>
        <trans-unit id="07c51b56a837ef2b8a02eed0aace501dd2b7868a" translate="yes" xml:space="preserve">
          <source>The flags field contains an illegal flag (something other than FINAL, SYNTHETIC, or MANDATED)</source>
          <target state="translated">flags 필드에 잘못된 플래그가 포함되어 있습니다 (FINAL, SYNTHETIC 또는 MANDATED 이외)</target>
        </trans-unit>
        <trans-unit id="f7b6efae110c00fda7a7b4252851296766762bd5" translate="yes" xml:space="preserve">
          <source>The flags which tell if a specified calendar field for the calendar is set.</source>
          <target state="translated">The flags which tell if a specified calendar field for the calendar is set.</target>
        </trans-unit>
        <trans-unit id="6d843126f25e81dcab6945d31541378846e0fe18" translate="yes" xml:space="preserve">
          <source>The flags which tell if a specified calendar field for the calendar is set. A new object has no fields set. After the first call to a method which generates the fields, they all remain set after that. This is an array of &lt;code&gt;FIELD_COUNT&lt;/code&gt; booleans, with index values &lt;code&gt;ERA&lt;/code&gt; through &lt;code&gt;DST_OFFSET&lt;/code&gt;.</source>
          <target state="translated">달력에 지정된 달력 필드가 설정되어 있는지 여부를 알려주는 플래그입니다. 새 개체에는 필드가 설정되어 있지 않습니다. 필드를 생성하는 메소드를 처음 호출 한 후에는 모두 그 이후에 설정된 상태로 유지됩니다. 인덱스 값이 &lt;code&gt;ERA&lt;/code&gt; ~ &lt;code&gt;DST_OFFSET&lt;/code&gt; 인 &lt;code&gt;FIELD_COUNT&lt;/code&gt; 부울 의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="c0adaae78bcbe2a1b61d64399723374aac50d29d" translate="yes" xml:space="preserve">
          <source>The float at the buffer's current position</source>
          <target state="translated">버퍼의 현재 위치에있는 float</target>
        </trans-unit>
        <trans-unit id="5f5dd8efc09209346141f04c0616a37cc7043005" translate="yes" xml:space="preserve">
          <source>The float at the given index</source>
          <target state="translated">주어진 인덱스에서의 float</target>
        </trans-unit>
        <trans-unit id="df503d78651dfa6cbdc66ce61ad5b430069142aa" translate="yes" xml:space="preserve">
          <source>The float value at the buffer's current position</source>
          <target state="translated">버퍼의 현재 위치의 float 값</target>
        </trans-unit>
        <trans-unit id="9d0d1c8af02f3824120d9d83ef3d660c0196db65" translate="yes" xml:space="preserve">
          <source>The float value at the given index</source>
          <target state="translated">주어진 인덱스의 float 값</target>
        </trans-unit>
        <trans-unit id="a61f9f8de1e090952e6ef736612095d26f83c261" translate="yes" xml:space="preserve">
          <source>The float value in the specified unit.</source>
          <target state="translated">지정된 단위의 부동 소수점 값입니다.</target>
        </trans-unit>
        <trans-unit id="cf38f97e89711d18ff8d18b3b447db9c2e704c37" translate="yes" xml:space="preserve">
          <source>The floating-point number adjacent to &lt;code&gt;start&lt;/code&gt; in the direction of &lt;code&gt;direction&lt;/code&gt;.</source>
          <target state="translated">인접 부동 소수점 수는하기 &lt;code&gt;start&lt;/code&gt; 하는 방향으로 &lt;code&gt;direction&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6c9bf2083aa59da93c11b568d897301a010de3b" translate="yes" xml:space="preserve">
          <source>The floats between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the float at index</source>
          <target state="translated">버퍼의 현재 위치와 한계 사이에있는 수레는 버퍼의 시작 부분에 복사됩니다 (있는 경우). 즉, 인덱스에서 부동</target>
        </trans-unit>
        <trans-unit id="e0d99827c8ce6a7f1ce1c355b0240827dea1dca3" translate="yes" xml:space="preserve">
          <source>The floor modulus is &lt;code&gt;x - (floorDiv(x, y) * y)&lt;/code&gt;, has the same sign as the divisor &lt;code&gt;y&lt;/code&gt;, and is in the range of &lt;code&gt;-abs(y) &amp;lt; r &amp;lt; +abs(y)&lt;/code&gt;.</source>
          <target state="translated">바닥 계수이다 &lt;code&gt;x - (floorDiv(x, y) * y)&lt;/code&gt; , 제수와 같은 투표 &lt;code&gt;y&lt;/code&gt; , 그리고 범위 인 &lt;code&gt;-abs(y) &amp;lt; r &amp;lt; +abs(y)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="280e33602d3b6fb786402cff680f04e20b71bb69" translate="yes" xml:space="preserve">
          <source>The flow of data containing the response body is immutable. Specifically, it is a flow of unmodifiable lists of read-only ByteBuffers.</source>
          <target state="translated">The flow of data containing the response body is immutable. Specifically, it is a flow of unmodifiable lists of read-only ByteBuffers.</target>
        </trans-unit>
        <trans-unit id="bc909ee2dbad402f4622da99457457697a983db4" translate="yes" xml:space="preserve">
          <source>The focus behavior of this method can be implemented uniformly across platforms, and thus developers are strongly encouraged to use this method over &lt;code&gt;requestFocus(FocusEvent.Cause)&lt;/code&gt; when possible. Code which relies on &lt;code&gt;requestFocus(FocusEvent.Cause)&lt;/code&gt; may exhibit different focus behavior on different platforms.</source>
          <target state="translated">The focus behavior of this method can be implemented uniformly across platforms, and thus developers are strongly encouraged to use this method over &lt;code&gt;requestFocus(FocusEvent.Cause)&lt;/code&gt; when possible. Code which relies on &lt;code&gt;requestFocus(FocusEvent.Cause)&lt;/code&gt; may exhibit different focus behavior on different platforms.</target>
        </trans-unit>
        <trans-unit id="fe48a0cbbce340eaf18bd00bd02e43fdb1ec2645" translate="yes" xml:space="preserve">
          <source>The focus behavior of this method can be implemented uniformly across platforms, and thus developers are strongly encouraged to use this method over &lt;code&gt;requestFocus&lt;/code&gt; when possible. Code which relies on &lt;code&gt;requestFocus&lt;/code&gt; may exhibit different focus behavior on different platforms.</source>
          <target state="translated">The focus behavior of this method can be implemented uniformly across platforms, and thus developers are strongly encouraged to use this method over &lt;code&gt;requestFocus&lt;/code&gt; when possible. Code which relies on &lt;code&gt;requestFocus&lt;/code&gt; may exhibit different focus behavior on different platforms.</target>
        </trans-unit>
        <trans-unit id="ed1e3f15a9fbddf35cf3b3d88086c04d0af8792d" translate="yes" xml:space="preserve">
          <source>The focus owner component will receive a permanent FOCUS_LOST event. After this operation completes, the native windowing system will discard all user-generated KeyEvents until the user selects a new Component to receive focus, or a Component is given focus explicitly via a call to &lt;code&gt;requestFocus()&lt;/code&gt;. This operation does not change the focused or active Windows.</source>
          <target state="translated">The focus owner component will receive a permanent FOCUS_LOST event. After this operation completes, the native windowing system will discard all user-generated KeyEvents until the user selects a new Component to receive focus, or a Component is given focus explicitly via a call to &lt;code&gt;requestFocus()&lt;/code&gt; . This operation does not change the focused or active Windows.</target>
        </trans-unit>
        <trans-unit id="d82ebe64b2c66aa82c60f6744718ef051e35870d" translate="yes" xml:space="preserve">
          <source>The focus request effect may also depend on the provided cause value. If this request is succeed the &lt;code&gt;FocusEvent&lt;/code&gt; generated in the result will receive the cause value specified as the argument of method. If this request is denied because this Component's top-level Window cannot become the focused Window, the request will be remembered and will be granted when the Window is later focused by the user.</source>
          <target state="translated">The focus request effect may also depend on the provided cause value. If this request is succeed the &lt;code&gt;FocusEvent&lt;/code&gt; generated in the result will receive the cause value specified as the argument of method. If this request is denied because this Component's top-level Window cannot become the focused Window, the request will be remembered and will be granted when the Window is later focused by the user.</target>
        </trans-unit>
        <trans-unit id="5dea7f848e14ad78950943d5697e0debbf25f958" translate="yes" xml:space="preserve">
          <source>The focus request effect may also depend on the provided cause value. If this request is succeed the &lt;code&gt;FocusEvent&lt;/code&gt; generated in the result will receive the cause value specified as the argument of the method.</source>
          <target state="translated">The focus request effect may also depend on the provided cause value. If this request is succeed the &lt;code&gt;FocusEvent&lt;/code&gt; generated in the result will receive the cause value specified as the argument of the method.</target>
        </trans-unit>
        <trans-unit id="8daf20c9b447db91c0278200268412cb2757a1c2" translate="yes" xml:space="preserve">
          <source>The focus request effect may also depend on the provided cause value. If this request is succeed the {FocusEvent} generated in the result will receive the cause value specified as the argument of the method.</source>
          <target state="translated">The focus request effect may also depend on the provided cause value. If this request is succeed the {FocusEvent} generated in the result will receive the cause value specified as the argument of the method.</target>
        </trans-unit>
        <trans-unit id="52e727459f97e367a24e63ce5e26868c1cacfac2" translate="yes" xml:space="preserve">
          <source>The focusability of a peer is implementation-dependent. Sun recommends that all implementations for a particular native platform construct peers with the same focusability. The recommendations for Windows and Unix are that Canvases, Labels, Panels, Scrollbars, ScrollPanes, Windows, and lightweight Components have non-focusable peers, and all other Components have focusable peers. These recommendations are used in the Sun AWT implementations. Note that the focusability of a Component's peer is different from, and does not impact, the focusability of the Component itself.</source>
          <target state="translated">The focusability of a peer is implementation-dependent. Sun recommends that all implementations for a particular native platform construct peers with the same focusability. The recommendations for Windows and Unix are that Canvases, Labels, Panels, Scrollbars, ScrollPanes, Windows, and lightweight Components have non-focusable peers, and all other Components have focusable peers. These recommendations are used in the Sun AWT implementations. Note that the focusability of a Component's peer is different from, and does not impact, the focusability of the Component itself.</target>
        </trans-unit>
        <trans-unit id="c1c6d627ead12229c807ce22675b0c1519b3cc76" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;xml&lt;/a&gt; accomplishes the same thing:</source>
          <target state="translated">The following &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;xml&lt;/a&gt; accomplishes the same thing:</target>
        </trans-unit>
        <trans-unit id="ebb150d5516ba40c7da18d05a5ad5efc9186389f" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;xml&lt;/a&gt; accomplishes the same thing:</source>
          <target state="translated">다음 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;xml&lt;/a&gt; 은 동일한 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="a4881b74aec50637258a768368531331b69b2cb6" translate="yes" xml:space="preserve">
          <source>The following &lt;a id=&quot;dFlags&quot;&gt;flags&lt;/a&gt; apply to general conversions:</source>
          <target state="translated">The following &lt;a id=&quot;dFlags&quot;&gt;flags&lt;/a&gt; apply to general conversions:</target>
        </trans-unit>
        <trans-unit id="4c91ab1fe4100c95d32d44f78a5b7e9f4ad435ab" translate="yes" xml:space="preserve">
          <source>The following &lt;a id=&quot;example&quot;&gt;example&lt;/a&gt; shows how this may be done:</source>
          <target state="translated">다음 &lt;a id=&quot;example&quot;&gt;예&lt;/a&gt; 는이 작업을 수행하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2d2e8bee1741cb35e48bf15acf57384e8c8d6ebd" translate="yes" xml:space="preserve">
          <source>The following &lt;a id=&quot;intFlags&quot;&gt;flags&lt;/a&gt; apply to numeric integral conversions:</source>
          <target state="translated">The following &lt;a id=&quot;intFlags&quot;&gt;flags&lt;/a&gt; apply to numeric integral conversions:</target>
        </trans-unit>
        <trans-unit id="12aac71ba5c65f1b9823244ddc37b779b34b0675" translate="yes" xml:space="preserve">
          <source>The following &lt;a id=&quot;sample&quot;&gt;example&lt;/a&gt; shows a member of a resource bundle family with the base name &quot;MyResources&quot;. The text defines the bundle &quot;MyResources_de&quot;, the German member of the bundle family. This member is based on &lt;code&gt;PropertyResourceBundle&lt;/code&gt;, and the text therefore is the content of the file &quot;MyResources_de.properties&quot; (a related &lt;a href=&quot;listresourcebundle#sample&quot;&gt;example&lt;/a&gt; shows how you can add bundles to this family that are implemented as subclasses of &lt;code&gt;ListResourceBundle&lt;/code&gt;). The keys in this example are of the form &quot;s1&quot; etc. The actual keys are entirely up to your choice, so long as they are the same as the keys you use in your program to retrieve the objects from the bundle. Keys are case-sensitive.</source>
          <target state="translated">The following &lt;a id=&quot;sample&quot;&gt;example&lt;/a&gt; shows a member of a resource bundle family with the base name &quot;MyResources&quot;. The text defines the bundle &quot;MyResources_de&quot;, the German member of the bundle family. This member is based on &lt;code&gt;PropertyResourceBundle&lt;/code&gt; , and the text therefore is the content of the file &quot;MyResources_de.properties&quot; (a related &lt;a href=&quot;listresourcebundle#sample&quot;&gt;example&lt;/a&gt; shows how you can add bundles to this family that are implemented as subclasses of &lt;code&gt;ListResourceBundle&lt;/code&gt; ). The keys in this example are of the form &quot;s1&quot; etc. The actual keys are entirely up to your choice, so long as they are the same as the keys you use in your program to retrieve the objects from the bundle. Keys are case-sensitive.</target>
        </trans-unit>
        <trans-unit id="a1d70d7905db1922022a89a8a3ea9dc6885b1ebe" translate="yes" xml:space="preserve">
          <source>The following &lt;a id=&quot;sample&quot;&gt;example&lt;/a&gt; shows two members of a resource bundle family with the base name &quot;MyResources&quot;. &quot;MyResources&quot; is the default member of the bundle family, and &quot;MyResources_fr&quot; is the French member. These members are based on &lt;code&gt;ListResourceBundle&lt;/code&gt; (a related &lt;a href=&quot;propertyresourcebundle#sample&quot;&gt;example&lt;/a&gt; shows how you can add a bundle to this family that's based on a properties file). The keys in this example are of the form &quot;s1&quot; etc. The actual keys are entirely up to your choice, so long as they are the same as the keys you use in your program to retrieve the objects from the bundle. Keys are case-sensitive.</source>
          <target state="translated">The following &lt;a id=&quot;sample&quot;&gt;example&lt;/a&gt; shows two members of a resource bundle family with the base name &quot;MyResources&quot;. &quot;MyResources&quot; is the default member of the bundle family, and &quot;MyResources_fr&quot; is the French member. These members are based on &lt;code&gt;ListResourceBundle&lt;/code&gt; (a related &lt;a href=&quot;propertyresourcebundle#sample&quot;&gt;example&lt;/a&gt; shows how you can add a bundle to this family that's based on a properties file). The keys in this example are of the form &quot;s1&quot; etc. The actual keys are entirely up to your choice, so long as they are the same as the keys you use in your program to retrieve the objects from the bundle. Keys are case-sensitive.</target>
        </trans-unit>
        <trans-unit id="34b31fc78f10c0c8e222a5a96f8da8b395480561" translate="yes" xml:space="preserve">
          <source>The following &lt;a name=&quot;dFlags&quot;&gt;flags&lt;/a&gt; apply to general conversions:</source>
          <target state="translated">다음 &lt;a name=&quot;dFlags&quot;&gt;플래그&lt;/a&gt; 는 일반 변환에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="718105550381be452dea567eb4cb4d403db03a9d" translate="yes" xml:space="preserve">
          <source>The following &lt;a name=&quot;intFlags&quot;&gt;flags&lt;/a&gt; apply to numeric integral conversions:</source>
          <target state="translated">다음 &lt;a name=&quot;intFlags&quot;&gt;플래그&lt;/a&gt; 는 숫자 적분 변환에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="6c97a3fa3251171b01f24900b04fa28963a31f2e" translate="yes" xml:space="preserve">
          <source>The following &lt;a name=&quot;sample&quot;&gt;example&lt;/a&gt; shows a member of a resource bundle family with the base name &quot;MyResources&quot;. The text defines the bundle &quot;MyResources_de&quot;, the German member of the bundle family. This member is based on &lt;code&gt;PropertyResourceBundle&lt;/code&gt;, and the text therefore is the content of the file &quot;MyResources_de.properties&quot; (a related &lt;a href=&quot;listresourcebundle#sample&quot;&gt;example&lt;/a&gt; shows how you can add bundles to this family that are implemented as subclasses of &lt;code&gt;ListResourceBundle&lt;/code&gt;). The keys in this example are of the form &quot;s1&quot; etc. The actual keys are entirely up to your choice, so long as they are the same as the keys you use in your program to retrieve the objects from the bundle. Keys are case-sensitive.</source>
          <target state="translated">다음 &lt;a name=&quot;sample&quot;&gt;예&lt;/a&gt; 는 기본 이름이 &quot;MyResources&quot;인 자원 번들 제품군의 구성원을 보여줍니다. 이 텍스트는 번들 제품군의 독일어 멤버 인 &quot;MyResources_de&quot;번들을 정의합니다. 이 멤버는 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 에 기반 하므로 텍스트는 &quot;MyResources_de.properties&quot;파일의 컨텐츠입니다 (관련 &lt;a href=&quot;listresourcebundle#sample&quot;&gt;예제&lt;/a&gt; 는 &lt;code&gt;ListResourceBundle&lt;/code&gt; 의 서브 클래스로 구현되는이 제품군에 번들을 추가하는 방법을 보여줍니다 ). 이 예제의 키는 &quot;s1&quot;형식입니다. 실제 키는 번들에서 오브젝트를 검색하기 위해 프로그램에서 사용하는 키와 동일한 한 전적으로 원하는대로 선택됩니다. 키는 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="ab872f1920dd3b6207973c5efd102398d0548897" translate="yes" xml:space="preserve">
          <source>The following &lt;a name=&quot;sample&quot;&gt;example&lt;/a&gt; shows two members of a resource bundle family with the base name &quot;MyResources&quot;. &quot;MyResources&quot; is the default member of the bundle family, and &quot;MyResources_fr&quot; is the French member. These members are based on &lt;code&gt;ListResourceBundle&lt;/code&gt; (a related &lt;a href=&quot;propertyresourcebundle#sample&quot;&gt;example&lt;/a&gt; shows how you can add a bundle to this family that's based on a properties file). The keys in this example are of the form &quot;s1&quot; etc. The actual keys are entirely up to your choice, so long as they are the same as the keys you use in your program to retrieve the objects from the bundle. Keys are case-sensitive.</source>
          <target state="translated">다음 &lt;a name=&quot;sample&quot;&gt;예&lt;/a&gt; 는 기본 이름이 &quot;MyResources&quot;인 자원 번들 제품군의 두 구성원을 보여줍니다. &quot;MyResources&quot;는 번들 제품군의 기본 멤버이고 &quot;MyResources_fr&quot;은 프랑스어 멤버입니다. 이 멤버는 &lt;code&gt;ListResourceBundle&lt;/code&gt; 을 기반으로합니다 (관련 &lt;a href=&quot;propertyresourcebundle#sample&quot;&gt;예제&lt;/a&gt; 는 특성 파일을 기반으로이 패밀리에 번들을 추가하는 방법을 보여줍니다). 이 예제의 키는 &quot;s1&quot;형식입니다. 실제 키는 번들에서 오브젝트를 검색하기 위해 프로그램에서 사용하는 키와 동일한 한 전적으로 원하는대로 선택됩니다. 키는 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="4d7bc9d38cfb742a7ccf3ed1fac435611b40a277" translate="yes" xml:space="preserve">
          <source>The following &lt;b&gt;Predefined Character classes&lt;/b&gt; and &lt;b&gt;POSIX character classes&lt;/b&gt; are in conformance with the recommendation of</source>
          <target state="translated">다음 &lt;b&gt;사전 정의 된 문자 클래스&lt;/b&gt; 및 &lt;b&gt;POSIX 문자 클래스&lt;/b&gt; 는 다음 의 권장 사항을 준수합니다.</target>
        </trans-unit>
        <trans-unit id="3bdbb766d31b298fea0830eadf61cfd0cf5d8817" translate="yes" xml:space="preserve">
          <source>The following &lt;b&gt;conversions&lt;/b&gt; are performed:</source>
          <target state="translated">다음과 같은 &lt;b&gt;변환&lt;/b&gt; 이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="44d784bdfbe5ffed1bb41380bc3830e293c48f1e" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;Finishings&lt;/code&gt; values are more specific; they indicate a corner or an edge as if the document were a portrait document:</source>
          <target state="translated">The following &lt;code&gt;Finishings&lt;/code&gt; values are more specific; they indicate a corner or an edge as if the document were a portrait document:</target>
        </trans-unit>
        <trans-unit id="c12b850130d44e2cdaecf419de9717707a564dd0" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;JTree&lt;/code&gt; methods use &quot;visible&quot; to mean &quot;displayed&quot;:</source>
          <target state="translated">The following &lt;code&gt;JTree&lt;/code&gt; methods use &quot;visible&quot; to mean &quot;displayed&quot;:</target>
        </trans-unit>
        <trans-unit id="dae9623d0c0d956fdb794a25b86835fd7a72be31" translate="yes" xml:space="preserve">
          <source>The following Finishings values are more specific; they indicate a corner or an edge as if the document were a portrait document:</source>
          <target state="translated">다음 마감 값이 더 구체적입니다. 문서가 세로 문서 인 것처럼 모서리 나 가장자리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9cdbc4fef23bc1ae88072bf001afc496ccf5effd" translate="yes" xml:space="preserve">
          <source>The following JNDI environment properties may be used when creating the initial context.</source>
          <target state="translated">초기 컨텍스트를 만들 때 다음 JNDI 환경 속성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d489fbed0473aef722ac8b09e75be9176cc9c80" translate="yes" xml:space="preserve">
          <source>The following MIME types do not support, or are treated as though they do not support, the charset parameter:</source>
          <target state="translated">The following MIME types do not support, or are treated as though they do not support, the charset parameter:</target>
        </trans-unit>
        <trans-unit id="998e8b1f1fff339ae9d53d38b65e9d8fd529ed6a" translate="yes" xml:space="preserve">
          <source>The following MIME types support, or are treated as though they support, the charset parameter:</source>
          <target state="translated">The following MIME types support, or are treated as though they support, the charset parameter:</target>
        </trans-unit>
        <trans-unit id="df4565a08976159f98d000170c1e13b94b809704" translate="yes" xml:space="preserve">
          <source>The following Unicode characters are ignorable in a Java identifier or a Unicode identifier:</source>
          <target state="translated">다음 유니 코드 문자는 Java 식별자 또는 유니 코드 식별자에서 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ca21e25a67399fdd5f6d00d42c8747788aa0b41" translate="yes" xml:space="preserve">
          <source>The following XML standards apply:</source>
          <target state="translated">The following XML standards apply:</target>
        </trans-unit>
        <trans-unit id="e1ee2b7fc161b561363a09eb8a74b719ec01fd3b" translate="yes" xml:space="preserve">
          <source>The following are calendar-specific fields and their values to be supported.</source>
          <target state="translated">다음은 일정 별 필드와 지원되는 값입니다.</target>
        </trans-unit>
        <trans-unit id="f0b92be08cad28f715f6320945131c35c8b3277f" translate="yes" xml:space="preserve">
          <source>The following are errors:</source>
          <target state="translated">다음은 오류입니다.</target>
        </trans-unit>
        <trans-unit id="27f242fe17aebfc38c4d46f59d88bb9f72485164" translate="yes" xml:space="preserve">
          <source>The following are examples of lowercase characters:</source>
          <target state="translated">다음은 소문자의 예입니다.</target>
        </trans-unit>
        <trans-unit id="05d1989cc2fb19eeffe91f625bf1710856eae32f" translate="yes" xml:space="preserve">
          <source>The following are examples of parameters for constructing time zone objects.</source>
          <target state="translated">다음은 표준 시간대 개체를 구성하기위한 매개 변수의 예입니다.</target>
        </trans-unit>
        <trans-unit id="c270078ad6b151e92fcc3a3f5df550c25921664d" translate="yes" xml:space="preserve">
          <source>The following are examples of uppercase characters:</source>
          <target state="translated">다음은 대문자의 예입니다.</target>
        </trans-unit>
        <trans-unit id="7f902e7ce71e7969f8b0bc66620cd5a7f55944f6" translate="yes" xml:space="preserve">
          <source>The following are examples of using the predefined body handlers to convert a flow of response body data into common high-level Java objects:</source>
          <target state="translated">The following are examples of using the predefined body handlers to convert a flow of response body data into common high-level Java objects:</target>
        </trans-unit>
        <trans-unit id="f5ee0e0b8a290697ed79df522190652147f3e31a" translate="yes" xml:space="preserve">
          <source>The following are examples of using the predefined body publishers to convert common high-level Java objects into a flow of data suitable for sending as a request body:</source>
          <target state="translated">The following are examples of using the predefined body publishers to convert common high-level Java objects into a flow of data suitable for sending as a request body:</target>
        </trans-unit>
        <trans-unit id="bd3e8596127bc1cb56466afb3fa9267998bd21de" translate="yes" xml:space="preserve">
          <source>The following are examples of using the predefined body subscribers to convert a flow of response body data into common high-level Java objects:</source>
          <target state="translated">The following are examples of using the predefined body subscribers to convert a flow of response body data into common high-level Java objects:</target>
        </trans-unit>
        <trans-unit id="60a5c21ec25e055a782b032c59385ba40939fb9a" translate="yes" xml:space="preserve">
          <source>The following are examples of using the predefined collectors to perform common mutable reduction tasks:</source>
          <target state="translated">다음은 사전 정의 된 콜렉터를 사용하여 일반적인 변경 가능한 축소 작업을 수행하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="b97bba4fff0b3918e7f07a18b65329ce403bc4f5" translate="yes" xml:space="preserve">
          <source>The following are modeled, but currently not rendered.</source>
          <target state="translated">The following are modeled, but currently not rendered.</target>
        </trans-unit>
        <trans-unit id="9869b3b737829b0afd57282f629afb3659f3487b" translate="yes" xml:space="preserve">
          <source>The following are sample usages. Sample code assumes that the &lt;code&gt;Calendar&lt;/code&gt; constants are statically imported.</source>
          <target state="translated">다음은 샘플 사용법입니다. 샘플 코드는 &lt;code&gt;Calendar&lt;/code&gt; 상수를 정적으로 가져 오는 것으로 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="71d987106f2fadf17c35148925f24373778218fc" translate="yes" xml:space="preserve">
          <source>The following are standard client info properties. Drivers are not required to support these properties however if the driver supports a client info property that can be described by one of the standard properties, the standard property name should be used.</source>
          <target state="translated">The following are standard client info properties. Drivers are not required to support these properties however if the driver supports a client info property that can be described by one of the standard properties, the standard property name should be used.</target>
        </trans-unit>
        <trans-unit id="62d730b0f64c93754a84e32c9c2254f5b445ccc9" translate="yes" xml:space="preserve">
          <source>The following builds a panel consisting of two labels in one column, followed by two textfields in the next column:</source>
          <target state="translated">The following builds a panel consisting of two labels in one column, followed by two textfields in the next column:</target>
        </trans-unit>
        <trans-unit id="d04cf50de153033d5654b8c69914c1515d75abe8" translate="yes" xml:space="preserve">
          <source>The following cases may result in an AttributeNotFoundException:</source>
          <target state="translated">다음과 같은 경우 AttributeNotFoundException이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5acfaa953e3076c682c3b2882e4f2bd0aa0de39" translate="yes" xml:space="preserve">
          <source>The following class and property files are provided:</source>
          <target state="translated">다음과 같은 클래스 및 특성 파일이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="90fef22caa25d68a95a94801857aaaf77c6b34fa" translate="yes" xml:space="preserve">
          <source>The following classes and interfaces make up the &lt;code&gt;javax.sql.rowset.spi&lt;/code&gt; package:</source>
          <target state="translated">The following classes and interfaces make up the &lt;code&gt;javax.sql.rowset.spi&lt;/code&gt; package:</target>
        </trans-unit>
        <trans-unit id="81dad332c4884662d7929a6f97cdab033d2eefd0" translate="yes" xml:space="preserve">
          <source>The following code can be used to dump a delay queue into a newly allocated array of &lt;code&gt;Delayed&lt;/code&gt;:</source>
          <target state="translated">다음 코드를 사용하여 지연 큐를 새로 할당 된 &lt;code&gt;Delayed&lt;/code&gt; 배열로 덤프 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="227d1820cd21095e7e036ac8daa93ccb8e9a7890" translate="yes" xml:space="preserve">
          <source>The following code demonstrates typical usage of &lt;code&gt;LinearGradientPaint&lt;/code&gt;:</source>
          <target state="translated">The following code demonstrates typical usage of &lt;code&gt;LinearGradientPaint&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e2633b08939a6cb725fe62e6be55fea8c45c8e11" translate="yes" xml:space="preserve">
          <source>The following code demonstrates typical usage of &lt;code&gt;RadialGradientPaint&lt;/code&gt;, where the center and focus points are the same:</source>
          <target state="translated">The following code demonstrates typical usage of &lt;code&gt;RadialGradientPaint&lt;/code&gt; , where the center and focus points are the same:</target>
        </trans-unit>
        <trans-unit id="54180ef3871ceb997221df27b4e4a11af5d8f1aa" translate="yes" xml:space="preserve">
          <source>The following code example creates a set of check boxes in a grid layout:</source>
          <target state="translated">The following code example creates a set of check boxes in a grid layout:</target>
        </trans-unit>
        <trans-unit id="0abb0b51490ecf3f6bcdc7c433981853ae7afe8c" translate="yes" xml:space="preserve">
          <source>The following code example produces a new check box group, with three check boxes:</source>
          <target state="translated">The following code example produces a new check box group, with three check boxes:</target>
        </trans-unit>
        <trans-unit id="26b12edd9c74f32a315f18d6e0245a8d205f462f" translate="yes" xml:space="preserve">
          <source>The following code example produces a pop-up menu:</source>
          <target state="translated">The following code example produces a pop-up menu:</target>
        </trans-unit>
        <trans-unit id="26190c69388e00e900b9c89c33b9000b686392c1" translate="yes" xml:space="preserve">
          <source>The following code example shows how to construct an Rdn using the constructor that takes type and value as arguments:</source>
          <target state="translated">다음 코드 예제에서는 형식과 값을 인수로 사용하는 생성자를 사용하여 Rdn을 구성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b4dde6fd46d9d98ad6bdb352548d11eda0d76882" translate="yes" xml:space="preserve">
          <source>The following code fragment adds an additional &lt;code&gt;CachedRowSet&lt;/code&gt; object. In this case, the match column (&lt;code&gt;EMP_ID&lt;/code&gt;) is set when the &lt;code&gt;CachedRowSet&lt;/code&gt; object is added to the &lt;code&gt;JoinRowSet&lt;/code&gt; object.</source>
          <target state="translated">The following code fragment adds an additional &lt;code&gt;CachedRowSet&lt;/code&gt; object. In this case, the match column ( &lt;code&gt;EMP_ID&lt;/code&gt; ) is set when the &lt;code&gt;CachedRowSet&lt;/code&gt; object is added to the &lt;code&gt;JoinRowSet&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="8df174f921047ae28580b54b0cdcc047748ea1ed" translate="yes" xml:space="preserve">
          <source>The following code fragment adds two &lt;code&gt;CachedRowSet&lt;/code&gt; objects to a &lt;code&gt;JoinRowSet&lt;/code&gt; object. Note that in this example, no SQL &lt;code&gt;JOIN&lt;/code&gt; type is set, so the default &lt;code&gt;JOIN&lt;/code&gt; type, which is</source>
          <target state="translated">The following code fragment adds two &lt;code&gt;CachedRowSet&lt;/code&gt; objects to a &lt;code&gt;JoinRowSet&lt;/code&gt; object. Note that in this example, no SQL &lt;code&gt;JOIN&lt;/code&gt; type is set, so the default &lt;code&gt;JOIN&lt;/code&gt; type, which is</target>
        </trans-unit>
        <trans-unit id="6773b465b3d404ad261c509a280ba3f40b8e5320" translate="yes" xml:space="preserve">
          <source>The following code fragment assumes a continuation from the previous code fragment, meaning that the cursor for the tenth &lt;code&gt;CachedRowSet&lt;/code&gt; object is on the last row. The code moves the cursor to after the last row so that the first call to the method &lt;code&gt;previous&lt;/code&gt; will put the cursor back on the last row. After going through all of the rows in the last page (the &lt;code&gt;CachedRowSet&lt;/code&gt; object</source>
          <target state="translated">The following code fragment assumes a continuation from the previous code fragment, meaning that the cursor for the tenth &lt;code&gt;CachedRowSet&lt;/code&gt; object is on the last row. The code moves the cursor to after the last row so that the first call to the method &lt;code&gt;previous&lt;/code&gt; will put the cursor back on the last row. After going through all of the rows in the last page (the &lt;code&gt;CachedRowSet&lt;/code&gt; object</target>
        </trans-unit>
        <trans-unit id="eba32858f7519f61ceb0b5a48950849803b2f189" translate="yes" xml:space="preserve">
          <source>The following code fragment changes the second column value in the row just inserted. Note that this code applies when new rows are inserted right after the current row, which is why the method &lt;code&gt;next&lt;/code&gt; moves the cursor to the correct row. Calling the method &lt;code&gt;acceptChanges&lt;/code&gt; writes the change to the data source.</source>
          <target state="translated">The following code fragment changes the second column value in the row just inserted. Note that this code applies when new rows are inserted right after the current row, which is why the method &lt;code&gt;next&lt;/code&gt; moves the cursor to the correct row. Calling the method &lt;code&gt;acceptChanges&lt;/code&gt; writes the change to the data source.</target>
        </trans-unit>
        <trans-unit id="1d5968a08703e94a4a5aee0f8466d3006c4a1e9e" translate="yes" xml:space="preserve">
          <source>The following code fragment demonstrates a trivial compression and decompression of a string using &lt;code&gt;Deflater&lt;/code&gt; and &lt;code&gt;Inflater&lt;/code&gt;.</source>
          <target state="translated">다음 코드 조각은 &lt;code&gt;Deflater&lt;/code&gt; 및 &lt;code&gt;Inflater&lt;/code&gt; 를 사용하여 문자열을 간단하게 압축 및 압축 해제하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="96094c650cc9a333311a4f9bc2c173955b909112" translate="yes" xml:space="preserve">
          <source>The following code fragment demonstrates how a disconnected &lt;code&gt;RowSet&lt;/code&gt; object</source>
          <target state="translated">The following code fragment demonstrates how a disconnected &lt;code&gt;RowSet&lt;/code&gt; object</target>
        </trans-unit>
        <trans-unit id="42405a142dbf11f8cdb3fb4c05bfa6fda4339531" translate="yes" xml:space="preserve">
          <source>The following code fragment demonstrates setting the two parameters in the query from the previous example.</source>
          <target state="translated">다음 코드 조각은 이전 예제의 쿼리에서 두 매개 변수를 설정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8b3e91b81a281144249ef6addd147d0853975575" translate="yes" xml:space="preserve">
          <source>The following code fragment illustrates how the &lt;code&gt;CachedRowSet&lt;/code&gt; object &lt;code&gt;crs&lt;/code&gt; might have its command property set. Note that if a tool is used to set properties, this is the code that the tool would use.</source>
          <target state="translated">다음 코드 조각은 &lt;code&gt;CachedRowSet&lt;/code&gt; 개체 &lt;code&gt;crs&lt;/code&gt; 에 명령 속성이 설정되는 방법을 보여줍니다 . 도구가 속성을 설정하는 데 사용되는 경우 도구가 사용하는 코드입니다.</target>
        </trans-unit>
        <trans-unit id="0c5ed96b41606026b4ffa723b73e4581205b95f9" translate="yes" xml:space="preserve">
          <source>The following code fragment illustrates how the &lt;code&gt;CachedRowSet&lt;/code&gt;&amp;trade; object &lt;code&gt;crs&lt;/code&gt; might have its command property set. Note that if a tool is used to set properties, this is the code that the tool would use.</source>
          <target state="translated">다음 코드 단편은 &lt;code&gt;CachedRowSet&lt;/code&gt; &amp;trade; 오브젝트 &lt;code&gt;crs&lt;/code&gt; 에 명령 특성 세트가있는 방법을 보여줍니다 . 도구가 속성을 설정하는 데 사용되는 경우 도구가 사용하는 코드입니다.</target>
        </trans-unit>
        <trans-unit id="7a5a5f06f72114240302fe24ea2111f8e178428b" translate="yes" xml:space="preserve">
          <source>The following code illustrates extracting the bits for pixel &lt;code&gt;x,&amp;nbsp;y&lt;/code&gt; from &lt;code&gt;DataBuffer data&lt;/code&gt; and storing the pixel data in data elements of type &lt;code&gt;dataType&lt;/code&gt;:</source>
          <target state="translated">다음 코드 는 &lt;code&gt;DataBuffer data&lt;/code&gt; 에서 픽셀 &lt;code&gt;x,&amp;nbsp;y&lt;/code&gt; 대한 비트를 추출하고 &lt;code&gt;dataType&lt;/code&gt; 유형의 데이터 요소에 픽셀 데이터를 저장하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="3730434f3e75feda52293db7b56b2003199dc119" translate="yes" xml:space="preserve">
          <source>The following code illustrates extracting the bits of the sample representing band &lt;code&gt;b&lt;/code&gt; for pixel &lt;code&gt;x,y&lt;/code&gt; from DataBuffer &lt;code&gt;data&lt;/code&gt;:</source>
          <target state="translated">다음 코드 는 DataBuffer &lt;code&gt;data&lt;/code&gt; 에서 픽셀 &lt;code&gt;x,y&lt;/code&gt; 에 대한 밴드 &lt;code&gt;b&lt;/code&gt; 를 나타내는 샘플의 비트를 추출하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b6eed7502c028b2834e03ee8b5d0c55922f8bb13" translate="yes" xml:space="preserve">
          <source>The following code illustrates transferring data for a rectangular region of pixels from DataBuffer &lt;code&gt;db1&lt;/code&gt;, whose storage layout is described by SampleModel &lt;code&gt;sm1&lt;/code&gt;, to DataBuffer &lt;code&gt;db2&lt;/code&gt;, whose storage layout is described by SampleModel &lt;code&gt;sm2&lt;/code&gt;. The transfer will generally be more efficient than using getPixels/setPixels.</source>
          <target state="translated">다음 코드 는 스토리지 레이아웃이 SampleModel &lt;code&gt;sm1&lt;/code&gt; 에서 설명되는 DataBuffer &lt;code&gt;db1&lt;/code&gt; 에서 스토리지 레이아웃이 SampleModel &lt;code&gt;sm2&lt;/code&gt; 에서 설명되는 DataBuffer &lt;code&gt;db2&lt;/code&gt; 로 픽셀의 직사각형 영역에 대한 데이터를 전송하는 것을 보여 줍니다 . 전송은 일반적으로 getPixels / setPixels를 사용하는 것보다 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="cda7de20ca2983fc3786e70123c92da540700ceb" translate="yes" xml:space="preserve">
          <source>The following code illustrates transferring data for one pixel from &lt;code&gt;DataBuffer db1&lt;/code&gt;, whose storage layout is described by &lt;code&gt;ComponentSampleModel csm1&lt;/code&gt;, to &lt;code&gt;DataBuffer db2&lt;/code&gt;, whose storage layout is described by &lt;code&gt;ComponentSampleModel csm2&lt;/code&gt;. The transfer is usually more efficient than using &lt;code&gt;getPixel&lt;/code&gt; and &lt;code&gt;setPixel&lt;/code&gt;.</source>
          <target state="translated">다음의 코드는 하나 개의 픽셀에 대한 데이터를 전송하는 예시 &lt;code&gt;DataBuffer db1&lt;/code&gt; 저장 배열에 의해 기술되어, &lt;code&gt;ComponentSampleModel csm1&lt;/code&gt; 로 &lt;code&gt;DataBuffer db2&lt;/code&gt; 에 그 기억 레이아웃으로 설명되어 &lt;code&gt;ComponentSampleModel csm2&lt;/code&gt; . 전송은 일반적으로 &lt;code&gt;getPixel&lt;/code&gt; 및 &lt;code&gt;setPixel&lt;/code&gt; 을 사용하는 것보다 더 효율적 입니다.</target>
        </trans-unit>
        <trans-unit id="d0e78dca23788effecb923a2485f4949cc8762dd" translate="yes" xml:space="preserve">
          <source>The following code illustrates transferring data for one pixel from &lt;code&gt;DataBuffer db1&lt;/code&gt;, whose storage layout is described by &lt;code&gt;MultiPixelPackedSampleModel&lt;/code&gt;&lt;code&gt;mppsm1&lt;/code&gt;, to &lt;code&gt;DataBuffer db2&lt;/code&gt;, whose storage layout is described by &lt;code&gt;MultiPixelPackedSampleModel mppsm2&lt;/code&gt;. The transfer is generally more efficient than using &lt;code&gt;getPixel&lt;/code&gt; or &lt;code&gt;setPixel&lt;/code&gt;.</source>
          <target state="translated">다음의 코드는 하나 개의 픽셀에 대한 데이터를 전송하는 예시 &lt;code&gt;DataBuffer db1&lt;/code&gt; 저장 배열에 의해 기술되어, &lt;code&gt;MultiPixelPackedSampleModel&lt;/code&gt; &lt;code&gt;mppsm1&lt;/code&gt; 에 로 &lt;code&gt;DataBuffer db2&lt;/code&gt; 에 그 기억 레이아웃에 의해 설명되며, &lt;code&gt;MultiPixelPackedSampleModel mppsm2&lt;/code&gt; . 전송은 일반적으로 &lt;code&gt;getPixel&lt;/code&gt; 또는 &lt;code&gt;setPixel&lt;/code&gt; 을 사용하는 것보다 더 효율적 입니다.</target>
        </trans-unit>
        <trans-unit id="f7c9581a48bebdc273b3472a6803be3c51068a1c" translate="yes" xml:space="preserve">
          <source>The following code illustrates transferring data for one pixel from DataBuffer &lt;code&gt;db1&lt;/code&gt;, whose storage layout is described by BandedSampleModel &lt;code&gt;bsm1&lt;/code&gt;, to DataBuffer &lt;code&gt;db2&lt;/code&gt;, whose storage layout is described by BandedSampleModel &lt;code&gt;bsm2&lt;/code&gt;. The transfer will generally be more efficient than using getPixel/setPixel.</source>
          <target state="translated">다음 코드의 DataBuffer에서 하나 개의 화소에 대한 데이터 전송을 나타낸다 &lt;code&gt;db1&lt;/code&gt; 저장 레이아웃의 BandedSampleModel에 의해 설명된다 &lt;code&gt;bsm1&lt;/code&gt; 에 있는 DataBuffer에, &lt;code&gt;db2&lt;/code&gt; , 그 기억 된 BandedSampleModel 레이아웃에 의해 설명된다 &lt;code&gt;bsm2&lt;/code&gt; . 전송은 일반적으로 getPixel / setPixel을 사용하는 것보다 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="786fa58553bbb22bd44b32bbedcc35d26731553a" translate="yes" xml:space="preserve">
          <source>The following code illustrates transferring data for one pixel from DataBuffer &lt;code&gt;db1&lt;/code&gt;, whose storage layout is described by SampleModel &lt;code&gt;sm1&lt;/code&gt;, to DataBuffer &lt;code&gt;db2&lt;/code&gt;, whose storage layout is described by SampleModel &lt;code&gt;sm2&lt;/code&gt;. The transfer will generally be more efficient than using getPixel/setPixel.</source>
          <target state="translated">다음 코드 는 스토리지 레이아웃이 SampleModel &lt;code&gt;sm1&lt;/code&gt; 에서 설명되는 DataBuffer &lt;code&gt;db1&lt;/code&gt; 에서 스토리지 레이아웃이 SampleModel &lt;code&gt;sm2&lt;/code&gt; 에서 설명되는 DataBuffer &lt;code&gt;db2&lt;/code&gt; 로 한 픽셀에 대한 데이터를 전송하는 것을 보여 줍니다 . 전송은 일반적으로 getPixel / setPixel을 사용하는 것보다 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="b6b234ff7b7d5ab1a3fd3a8d7587dd8ea82bea1d" translate="yes" xml:space="preserve">
          <source>The following code illustrates transferring data for one pixel from DataBuffer &lt;code&gt;db1&lt;/code&gt;, whose storage layout is described by SinglePixelPackedSampleModel &lt;code&gt;sppsm1&lt;/code&gt;, to DataBuffer &lt;code&gt;db2&lt;/code&gt;, whose storage layout is described by SinglePixelPackedSampleModel &lt;code&gt;sppsm2&lt;/code&gt;. The transfer will generally be more efficient than using getPixel/setPixel.</source>
          <target state="translated">다음 코드 는 스토리지 레이아웃이 SinglePixelPackedSampleModel &lt;code&gt;sppsm2&lt;/code&gt; 설명 된 DataBuffer &lt;code&gt;db1&lt;/code&gt; 에서 스토리지 레이아웃이 SinglePixelPackedSampleModel &lt;code&gt;sppsm1&lt;/code&gt; 설명 된 DataBuffer &lt;code&gt;db2&lt;/code&gt; 로 한 픽셀에 대한 데이터를 전송하는 방법을 보여 줍니다 . 전송은 일반적으로 getPixel / setPixel을 사용하는 것보다 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="72e0bde62e0509950a2948eb0be98aef7dd9a610" translate="yes" xml:space="preserve">
          <source>The following code lets &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; look up only properties-based resources.</source>
          <target state="translated">다음 코드는 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 이 속성 기반 리소스 만 조회 하도록 합니다.</target>
        </trans-unit>
        <trans-unit id="1f1b78e1c0e997e909e37d743d046d8f92f4a541" translate="yes" xml:space="preserve">
          <source>The following code obtains a service loader for the &lt;code&gt;CodecFactory&lt;/code&gt; service, then uses its iterator (created automatically by the enhanced-for loop) to yield instances of the service providers that are located:</source>
          <target state="translated">다음 코드는 &lt;code&gt;CodecFactory&lt;/code&gt; 서비스에 대한 서비스 로더를 가져온 다음 해당 반복기 (enhanced-for 루프에 의해 자동으로 생성됨)를 사용하여 위치하는 서비스 공급자의 인스턴스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="163794ef580a81f8d8edef9ba10c1ba07de234f2" translate="yes" xml:space="preserve">
          <source>The following code pops up a file chooser for the user's home directory that sees only .jpg and .gif images:</source>
          <target state="translated">다음 코드는 .jpg 및 .gif 이미지 만 보는 사용자의 홈 디렉토리에 대한 파일 선택기를 팝업합니다.</target>
        </trans-unit>
        <trans-unit id="471278ae41758f2c54b16869909329024c1ee488" translate="yes" xml:space="preserve">
          <source>The following code prints a message every time an MBean is registered or unregistered in the MBean Server &lt;code&gt;mbeanServer&lt;/code&gt;:</source>
          <target state="translated">다음 코드는 MBean이 MBean 서버 &lt;code&gt;mbeanServer&lt;/code&gt; 에 등록되거나 등록 해제 될 때마다 메시지를 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="1a6a91a281ec6e889efce394abfb1affdb89dbd0" translate="yes" xml:space="preserve">
          <source>The following code produces a &lt;code&gt;Calendar&lt;/code&gt; with date 2012-12-31 (Gregorian) because Monday is the first day of a week with the &lt;a href=&quot;gregoriancalendar#iso8601_compatible_setting&quot;&gt; ISO 8601 compatible week parameters&lt;/a&gt;.</source>
          <target state="translated">다음 코드는 월요일이 &lt;a href=&quot;gregoriancalendar#iso8601_compatible_setting&quot;&gt;ISO 8601 호환 가능 주 매개 변수를&lt;/a&gt; 가진 주중 첫 번째 날이므로 2012-12-31 (Gregorian) 날짜 의 &lt;code&gt;Calendar&lt;/code&gt; 을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="ab87950614c84f4772b1d7cc623a175f6ebb12a9" translate="yes" xml:space="preserve">
          <source>The following code produces a Japanese &lt;code&gt;Calendar&lt;/code&gt; with date 1989-01-08 (Gregorian), assuming that the default &lt;a href=&quot;calendar#ERA&quot;&gt;&lt;code&gt;ERA&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;Heisei&lt;/em&gt; that started on that day.</source>
          <target state="translated">다음 코드는 기본 &lt;a href=&quot;calendar#ERA&quot;&gt; &lt;code&gt;ERA&lt;/code&gt; &lt;/a&gt; 가 해당 날짜에 시작된 &lt;em&gt;Heisei&lt;/em&gt; 라고 가정하고 날짜가 1989-01-08 (Gregorian) 인 일본어 &lt;code&gt;Calendar&lt;/code&gt; 을 생성합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1fcb95ad0021945bf1fe0b77677f62f2eddf938b" translate="yes" xml:space="preserve">
          <source>The following code sample demonstrates a typical use of the Java Print Service API: locating printers that can print five double-sided copies of a Postscript document on size A4 paper, creating a print job from one of the returned print services, and calling print.</source>
          <target state="translated">다음 코드 샘플은 Java Print Service API의 일반적인 사용법을 보여줍니다. A4 용지에 Postscript 문서의 양면 사본 5 개를 인쇄 할 수있는 프린터 찾기, 반환 된 인쇄 서비스 중 하나에서 인쇄 작업 생성 및 인쇄 호출.</target>
        </trans-unit>
        <trans-unit id="61a3e32e5712ad50c78bb9995574b8ec96afd4b2" translate="yes" xml:space="preserve">
          <source>The following code sample shows how &lt;code&gt;ReferralException&lt;/code&gt; can be used.</source>
          <target state="translated">다음 코드 샘플은 &lt;code&gt;ReferralException&lt;/code&gt; 을 사용 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="295dfd5f08ff24826ebdec76538be9d8a00cde7a" translate="yes" xml:space="preserve">
          <source>The following code sample shows how the class may be used:</source>
          <target state="translated">다음 코드 샘플은 클래스 사용 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3aafaec893d934c6419ff83a93f47322a1d7a950" translate="yes" xml:space="preserve">
          <source>The following code sets the location of a &lt;code&gt;Window&lt;/code&gt; at (10, 10) relative to the origin of the physical screen of the corresponding &lt;code&gt;GraphicsConfiguration&lt;/code&gt;. If the bounds of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; is not taken into account, the &lt;code&gt;Window&lt;/code&gt; location would be set at (10, 10) relative to the virtual-coordinate system and would appear on the primary physical screen, which might be different from the physical screen of the specified &lt;code&gt;GraphicsConfiguration&lt;/code&gt;.</source>
          <target state="translated">다음 코드는 해당 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 의 물리적 화면의 원점을 기준으로 (10, 10)에 &lt;code&gt;Window&lt;/code&gt; 위치를 설정합니다 . &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 의 경계 를 고려하지 않으면 &lt;code&gt;Window&lt;/code&gt; 위치는 가상 좌표계를 기준으로 (10, 10)으로 설정되고 기본 실제 화면에 표시되며 이는 실제 화면과 다를 수 있습니다. 지정된 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67f6a1717d96bf1b300af99b3d22f11d89ab908e" translate="yes" xml:space="preserve">
          <source>The following code sets the location of the &lt;code&gt;Frame&lt;/code&gt; at (10, 10) relative to the origin of the physical screen of the corresponding &lt;code&gt;GraphicsConfiguration&lt;/code&gt;. If the bounds of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; is not taken into account, the &lt;code&gt;Frame&lt;/code&gt; location would be set at (10, 10) relative to the virtual-coordinate system and would appear on the primary physical screen, which might be different from the physical screen of the specified &lt;code&gt;GraphicsConfiguration&lt;/code&gt;.</source>
          <target state="translated">다음 코드는 해당 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 의 물리적 화면의 원점을 기준으로 (10, 10)에 &lt;code&gt;Frame&lt;/code&gt; 의 위치를 ​​설정합니다 . &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 의 경계 를 고려하지 않으면 &lt;code&gt;Frame&lt;/code&gt; 위치가 가상 좌표계에 상대적인 (10, 10)으로 설정되고 기본 물리적 화면에 표시되며 이는 실제 화면과 다를 수 있습니다. 지정된 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="471600d6625c941bb8af63162f7ac0aea7a33185" translate="yes" xml:space="preserve">
          <source>The following code shows how to configure a &lt;code&gt;JFormattedTextField&lt;/code&gt; with two &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt;s, one for display and one for editing.</source>
          <target state="translated">다음 코드는 두 개의 &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; 로 &lt;code&gt;JFormattedTextField&lt;/code&gt; 를 구성하는 방법을 보여줍니다 . 하나는 표시 용이고 다른 하나는 편집 용입니다.</target>
        </trans-unit>
        <trans-unit id="0d05af0e96fe721120fbd83211a0e8aa28f5fa0a" translate="yes" xml:space="preserve">
          <source>The following code snippet demonstrates how to access and customize the system tray:</source>
          <target state="translated">다음 코드 스 니펫은 시스템 트레이에 액세스하고 사용자 정의하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c2684c37b3b077871a2d4e193478dca11f29cf45" translate="yes" xml:space="preserve">
          <source>The following code would then create a thread and start it running:</source>
          <target state="translated">다음 코드는 스레드를 작성하고 실행을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="946ced931944ab0fcf761b372c7c62806047c2f5" translate="yes" xml:space="preserve">
          <source>The following conditions must be met for these fields:</source>
          <target state="translated">이 필드에 대해 다음 조건이 충족되어야합니다.</target>
        </trans-unit>
        <trans-unit id="133aba4f59186bfc1d62f5dbf7c33022c51da793" translate="yes" xml:space="preserve">
          <source>The following conditions must be met in order to set the opacity value less than &lt;code&gt;1.0f&lt;/code&gt;:</source>
          <target state="translated">불투명도 값을 &lt;code&gt;1.0f&lt;/code&gt; 미만으로 설정하려면 다음 조건을 충족해야합니다 .</target>
        </trans-unit>
        <trans-unit id="cefd2e7b0b62523071be05b86d1d0c18a2b02c1b" translate="yes" xml:space="preserve">
          <source>The following conditions must be met to set a non-null shape:</source>
          <target state="translated">널이 아닌 모양을 설정하려면 다음 조건이 충족되어야합니다.</target>
        </trans-unit>
        <trans-unit id="f38ba93abbce590c90018a23bf3e81cef79cf784" translate="yes" xml:space="preserve">
          <source>The following conversion characters are used for formatting common date/time compositions.</source>
          <target state="translated">다음 변환 문자는 일반적인 날짜 / 시간 구성 형식을 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d5c66b6555275a8ae7b8cd84818ca1b598e5538c" translate="yes" xml:space="preserve">
          <source>The following conversion characters are used for formatting dates:</source>
          <target state="translated">날짜를 형식화하는 데 다음 변환 문자가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d8bd8675f37c0b0472b0f1f740378fad3a66a09e" translate="yes" xml:space="preserve">
          <source>The following conversion characters are used for formatting times:</source>
          <target state="translated">다음 변환 문자는 형식화 시간에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="31da467b8ae22861cce42f28720a8a402495a4aa" translate="yes" xml:space="preserve">
          <source>The following conversions may be applied &lt;a href=&quot;../math/bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 변환은 &lt;a href=&quot;../math/bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; 에&lt;/a&gt; 적용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="106372fe58a46e0b53a99e94653db8a635804bea" translate="yes" xml:space="preserve">
          <source>The following conversions may be applied to &lt;a href=&quot;../math/biginteger&quot;&gt;&lt;code&gt;BigInteger&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 변환이 &lt;a href=&quot;../math/biginteger&quot;&gt; &lt;code&gt;BigInteger&lt;/code&gt; 에&lt;/a&gt; 적용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="425f9f130ceaded63e8cd23ffbe952eb42b803cd" translate="yes" xml:space="preserve">
          <source>The following conversions may be applied to &lt;code&gt;byte&lt;/code&gt;, &lt;a href=&quot;../lang/byte&quot;&gt;&lt;code&gt;Byte&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;a href=&quot;../lang/short&quot;&gt;&lt;code&gt;Short&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;int&lt;/code&gt; and &lt;a href=&quot;../lang/integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;long&lt;/code&gt;, and &lt;a href=&quot;../lang/long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;byte&lt;/code&gt; , &lt;a href=&quot;../lang/byte&quot;&gt; &lt;code&gt;Byte&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;a href=&quot;../lang/short&quot;&gt; &lt;code&gt;Short&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;int&lt;/code&gt; 및 &lt;a href=&quot;../lang/integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;long&lt;/code&gt; 및 &lt;a href=&quot;../lang/long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; 에&lt;/a&gt; 다음 변환이 적용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="628b61b529939ce21c13396cc22e331c7a3b9d5c" translate="yes" xml:space="preserve">
          <source>The following conversions may be applied to &lt;code&gt;float&lt;/code&gt;, &lt;a href=&quot;../lang/float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;double&lt;/code&gt; and &lt;a href=&quot;../lang/double&quot;&gt;&lt;code&gt;Double&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; , &lt;a href=&quot;../lang/float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;double&lt;/code&gt; 및 &lt;a href=&quot;../lang/double&quot;&gt; &lt;code&gt;Double&lt;/code&gt; 에&lt;/a&gt; 다음 변환이 적용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bdf545ba7fe2ae6fd85883f41cc47873b6d1c669" translate="yes" xml:space="preserve">
          <source>The following date and time conversion character suffixes are defined for the &lt;code&gt;'t'&lt;/code&gt; and &lt;code&gt;'T'&lt;/code&gt; conversions. The types are similar to but not completely identical to those defined by GNU &lt;code&gt;date&lt;/code&gt; and POSIX &lt;code&gt;strftime(3c)&lt;/code&gt;. Additional conversion types are provided to access Java-specific functionality (e.g. &lt;code&gt;'L'&lt;/code&gt; for milliseconds within the second).</source>
          <target state="translated">다음 날짜 및 시간 변환 문자 접미사는 &lt;code&gt;'t'&lt;/code&gt; 및 &lt;code&gt;'T'&lt;/code&gt; 변환에 대해 정의됩니다 . 형식은 GNU &lt;code&gt;date&lt;/code&gt; 및 POSIX &lt;code&gt;strftime(3c)&lt;/code&gt; 의해 정의 된 형식과 유사하지만 완전히 동일하지는 않습니다 . Java 특정 기능에 액세스하기 위해 추가 변환 유형이 제공됩니다 (예 : 1 초 내에 밀리 초 동안 &lt;code&gt;'L'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cc0bdf19d79e85fd3faa8257d73b9cf092721d6e" translate="yes" xml:space="preserve">
          <source>The following date and time conversion suffix characters are defined for the &lt;code&gt;'t'&lt;/code&gt; and &lt;code&gt;'T'&lt;/code&gt; conversions. The types are similar to but not completely identical to those defined by GNU &lt;code&gt;date&lt;/code&gt; and POSIX &lt;code&gt;strftime(3c)&lt;/code&gt;. Additional conversion types are provided to access Java-specific functionality (e.g. &lt;code&gt;'L'&lt;/code&gt; for milliseconds within the second).</source>
          <target state="translated">다음 날짜 및 시간 변환 접미사 문자는 &lt;code&gt;'t'&lt;/code&gt; 및 &lt;code&gt;'T'&lt;/code&gt; 변환에 대해 정의됩니다 . 형식은 GNU &lt;code&gt;date&lt;/code&gt; 및 POSIX &lt;code&gt;strftime(3c)&lt;/code&gt; 의해 정의 된 형식과 유사하지만 완전히 동일하지는 않습니다 . Java 특정 기능에 액세스하기 위해 추가 변환 유형이 제공됩니다 (예 : 1 초 내에 밀리 초 동안 &lt;code&gt;'L'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ddfdaa63d1eff39c00a8f64d80b4ee6217147ac0" translate="yes" xml:space="preserve">
          <source>The following definitions of general legacy methods perform identically to previously specified behavior under default attribute settings:</source>
          <target state="translated">일반 레거시 방법에 대한 다음 정의는 기본 속성 설정에서 이전에 지정한 동작과 동일하게 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="753e4d88ac6c063d466dfdedc7d9b3c76f212b07" translate="yes" xml:space="preserve">
          <source>The following describes the CSS properties that are supported by the rendering engine:</source>
          <target state="translated">다음은 렌더링 엔진에서 지원하는 CSS 속성에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="e348781b0edec6d7cb8acbbd00233fee763ecae7" translate="yes" xml:space="preserve">
          <source>The following diagram shows a sequential group along both the horizontal and vertical axis.</source>
          <target state="translated">다음 다이어그램은 수평 및 수직 축을 따라 순차적 인 그룹을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="016bbd37d2f2317d0f1f262f34705a0fa46f084d" translate="yes" xml:space="preserve">
          <source>The following diagram shows a sequential group along the horizontal axis. The sequential group contains three components. A parallel group was used along the vertical axis.</source>
          <target state="translated">다음 다이어그램은 수평 축을 따라 순차적 인 그룹을 보여줍니다. 순차 그룹에는 세 가지 구성 요소가 있습니다. 수직 축을 따라 평행 그룹이 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="facdf31fd77524b6999c2bc143d39ffa10155252" translate="yes" xml:space="preserve">
          <source>The following diagram shows the same three components, but with the parallel group along the horizontal axis and the sequential group along the vertical axis.</source>
          <target state="translated">다음 다이어그램은 동일한 세 가지 구성 요소를 보여 주지만 수평 축을 따라 평행 그룹이 있고 수직 축을 따라 순차 그룹이 있습니다.</target>
        </trans-unit>
        <trans-unit id="33dd939ab9a8811a3f514f61fa7645ae76748a7a" translate="yes" xml:space="preserve">
          <source>The following documentation applies to all LoginContext constructors:</source>
          <target state="translated">다음 문서는 모든 LoginContext 생성자에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="320a95b6b1eff732752676660004dbf33979b776" translate="yes" xml:space="preserve">
          <source>The following effects are apparent, for each individual call site &lt;code&gt;S&lt;/code&gt;:</source>
          <target state="translated">각 개별 통화 사이트 &lt;code&gt;S&lt;/code&gt; 에 대해 다음과 같은 효과가 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="4097483bbe9bfaaaab44e7f0041fc1d669d2113b" translate="yes" xml:space="preserve">
          <source>The following element or null if &lt;code&gt;value&lt;/code&gt; is the last element of the sequence.</source>
          <target state="translated">다음 요소 또는 &lt;code&gt;value&lt;/code&gt; 이 시퀀스의 마지막 요소 인 경우 null 입니다.</target>
        </trans-unit>
        <trans-unit id="ab040e8d0f9661f3d2c2a54f122890a1dd93d9a4" translate="yes" xml:space="preserve">
          <source>The following example adds &lt;code&gt;myComponent&lt;/code&gt; to &lt;code&gt;group&lt;/code&gt; using a combination of the forms. The minimum size is forced to be the same as the preferred size, the preferred size is determined by using &lt;code&gt;myComponent.getPreferredSize&lt;/code&gt; and the maximum is determined by invoking &lt;code&gt;getMaximumSize&lt;/code&gt; on the component.</source>
          <target state="translated">다음 예제에서는 양식 조합을 사용하여 &lt;code&gt;myComponent&lt;/code&gt; 를 &lt;code&gt;group&lt;/code&gt; 추가 합니다. 최소 크기는 기본 크기와 동일하게 강제되며 기본 크기는 &lt;code&gt;myComponent.getPreferredSize&lt;/code&gt; 를 사용하여 결정되며 최대 크기는 구성 요소에서 &lt;code&gt;getMaximumSize&lt;/code&gt; 를 호출하여 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="8ee75bf951bc5e2f6330df56847c305f0c40eea8" translate="yes" xml:space="preserve">
          <source>The following example code demonstrates how this method might be used:</source>
          <target state="translated">다음 예제 코드는이 메서드를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3776e6ebce8a39acc2fb88b527e6d72ee54876b6" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;code&gt;FileNameExtensionFilter&lt;/code&gt; that will show &lt;code&gt;jpg&lt;/code&gt; files:</source>
          <target state="translated">다음 예제 는 &lt;code&gt;jpg&lt;/code&gt; 파일 을 표시 하는 &lt;code&gt;FileNameExtensionFilter&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="463ef87e1f64592c662b8763e7359844386e8e8c" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;code&gt;MessageFormat&lt;/code&gt; instance that can be used repeatedly:</source>
          <target state="translated">다음 예제는 반복적으로 사용할 수 있는 &lt;code&gt;MessageFormat&lt;/code&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b0c695c3a8bf8d2d01fc9c9a9685aa97f739854c" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;code&gt;RowFilter&lt;/code&gt; that will include any entries containing the string &quot;foo&quot; and the string &quot;bar&quot;:</source>
          <target state="translated">다음 예제 는 문자열 &quot;foo&quot;및 문자열 &quot;bar&quot;를 포함하는 모든 항목을 포함 하는 &lt;code&gt;RowFilter&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="83848b052ff0bafddbb96e14d34dc616809817a6" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;code&gt;RowFilter&lt;/code&gt; that will include any entries containing the string &quot;foo&quot; or the string &quot;bar&quot;:</source>
          <target state="translated">다음 예제 는 문자열 &quot;foo&quot;또는 문자열 &quot;bar&quot;를 포함하는 모든 항목을 포함 하는 &lt;code&gt;RowFilter&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f7f34f67da205eb9845401b2a8218e982d5ab668" translate="yes" xml:space="preserve">
          <source>The following example creates a custom &lt;code&gt;SynthStyleFactory&lt;/code&gt; that returns a different style based on the &lt;code&gt;Region&lt;/code&gt;:</source>
          <target state="translated">다음 예제 는 &lt;code&gt;Region&lt;/code&gt; 에 따라 다른 스타일을 반환 하는 사용자 지정 &lt;code&gt;SynthStyleFactory&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f6383d6c78f857110ba281899d9b5575be3617be" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how VirtualMachine may be used:</source>
          <target state="translated">다음 예제는 VirtualMachine을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="4c0362218022022478f648938bce1a3580a3ed64" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to change the order of non-spacing accents,</source>
          <target state="translated">다음 예는 간격이없는 악센트의 순서를 변경하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="0d866bed2269ab73118465effd5d20d22d3435e0" translate="yes" xml:space="preserve">
          <source>The following example has two text fields, with the first one expecting the string &quot;pass&quot; to be entered by the user. If either that string is entered in the first text field or the second text field contains &quot;accept&quot; string, then the user can advance focus to the second text field by clicking in it or by pressing TAB. However, if another string is entered in the first text field and the second text field does not contain &quot;accept&quot;, then the user will be unable to transfer focus to the second text field.</source>
          <target state="translated">다음 예제에는 두 개의 텍스트 필드가 있으며 첫 번째 필드는 사용자가 입력 할 문자열 &quot;pass&quot;를 예상합니다. 해당 문자열이 첫 번째 텍스트 필드에 입력되거나 두 번째 텍스트 필드에 &quot;accept&quot;문자열이 포함 된 경우 사용자는 두 번째 텍스트 필드를 클릭하거나 TAB을 눌러 포커스를 두 번째 텍스트 필드로 이동할 수 있습니다. 그러나 첫 번째 텍스트 필드에 다른 문자열을 입력하고 두 번째 텍스트 필드에 &quot;accept&quot;가 포함되지 않은 경우 사용자는 두 번째 텍스트 필드로 포커스를 전송할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9bd423eb5b23c81d6945b1de137e1611d9efebc4" translate="yes" xml:space="preserve">
          <source>The following example illustrates a simple use case of secondary loops:</source>
          <target state="translated">다음 예는 보조 루프의 간단한 사용 사례를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9544db90443cafd3f6fc0065fcfeac4c28840a8a" translate="yes" xml:space="preserve">
          <source>The following example illustrates an aggregate operation using &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;doublestream&quot;&gt;&lt;code&gt;DoubleStream&lt;/code&gt;&lt;/a&gt;, computing the sum of the weights of the red widgets:</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;doublestream&quot;&gt; &lt;code&gt;DoubleStream&lt;/code&gt; 을&lt;/a&gt; 사용 하여 빨간색 위젯의 가중치 합계를 계산 하는 집계 조작을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="fb0fc38b0edfba8464de0f6ce5acb42f0c3826b7" translate="yes" xml:space="preserve">
          <source>The following example illustrates an aggregate operation using &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;intstream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/a&gt;, computing the sum of the weights of the red widgets:</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;intstream&quot;&gt; &lt;code&gt;IntStream&lt;/code&gt; 을&lt;/a&gt; 사용 하여 빨간색 위젯의 가중치 합계를 계산 하는 집계 조작을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="56de90bb181885f2389c4de7a52719567afaa7dc" translate="yes" xml:space="preserve">
          <source>The following example illustrates an aggregate operation using &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;longstream&quot;&gt;&lt;code&gt;LongStream&lt;/code&gt;&lt;/a&gt;, computing the sum of the weights of the red widgets:</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;longstream&quot;&gt; &lt;code&gt;LongStream&lt;/code&gt; 을&lt;/a&gt; 사용 하여 빨간색 위젯의 가중치 합계를 계산 하는 집계 조작을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="d307e70e669cb72cdcb168be4cbe00d64608c629" translate="yes" xml:space="preserve">
          <source>The following example illustrates creating a &lt;code&gt;KeyBinding&lt;/code&gt; array from six alternating &lt;code&gt;key-action&lt;/code&gt; pairs:</source>
          <target state="translated">다음 예제 는 6 개의 교대 &lt;code&gt;key-action&lt;/code&gt; 쌍 에서 &lt;code&gt;KeyBinding&lt;/code&gt; 배열을 만드는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="8ddec311e730687f1c9ec6444d2caa4fa990646a" translate="yes" xml:space="preserve">
          <source>The following example illustrates how the &lt;code&gt;String.split&lt;/code&gt; method can be used to break up a string into its basic tokens:</source>
          <target state="translated">다음 예제는 &lt;code&gt;String.split&lt;/code&gt; 메소드를 사용하여 문자열을 기본 토큰으로 나누는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="8d50265afb04b1a4dc77b0bf535a5a8d4b1cadb8" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use this class:</source>
          <target state="translated">다음 예제는이 클래스를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d35723ba3d5e3e8c3a356af7783b1f3266635763" translate="yes" xml:space="preserve">
          <source>The following example illustrates setting the current look and feel from an instance of &lt;code&gt;LookAndFeelInfo&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 &lt;code&gt;LookAndFeelInfo&lt;/code&gt; 인스턴스에서 현재 룩앤필을 설정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f9da5969c1496c88c7306406befa7c66be969059" translate="yes" xml:space="preserve">
          <source>The following example illustrates setting the look and feel based on class name:</source>
          <target state="translated">다음 예제는 클래스 이름을 기반으로 룩앤필을 설정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3748733e6de1f4871baf1bb05d5ddce1922aa9c4" translate="yes" xml:space="preserve">
          <source>The following example illustrates some refinements and idioms that may lead to better performance: RecursiveActions need not be fully recursive, so long as they maintain the basic divide-and-conquer approach. Here is a class that sums the squares of each element of a double array, by subdividing out only the right-hand-sides of repeated divisions by two, and keeping track of them with a chain of &lt;code&gt;next&lt;/code&gt; references. It uses a dynamic threshold based on method &lt;code&gt;getSurplusQueuedTaskCount&lt;/code&gt;, but counterbalances potential excess partitioning by directly performing leaf actions on unstolen tasks rather than further subdividing.</source>
          <target state="translated">다음 예는 성능을 향상시킬 수있는 몇 가지 개선 및 관용구를 보여줍니다. RecursiveAction은 기본 분할 및 정복 방식을 유지하는 한 완전히 재귀적일 필요는 없습니다. 반복 배열의 오른쪽 만 두 개로 세분화하고 &lt;code&gt;next&lt;/code&gt; 참조 체인으로 추적하여 이중 배열의 각 요소의 제곱을 합산하는 클래스가 있습니다 . &lt;code&gt;getSurplusQueuedTaskCount&lt;/code&gt; 메소드를 기반으로하는 동적 임계 값을 사용 하지만, 더 세분화하지 않고 도난되지 않은 태스크에 대해 리프 조치를 직접 수행하여 잠재적 인 초과 파티셔닝을 카운터 밸런스합니다.</target>
        </trans-unit>
        <trans-unit id="d87d1db380d07faa1d30e5a04bd96b4b3ae7dc5a" translate="yes" xml:space="preserve">
          <source>The following example illustrates the simplest use case. Some processing is done in the background and when done you update a Swing component.</source>
          <target state="translated">다음 예제는 가장 간단한 사용 사례를 보여줍니다. 일부 처리는 백그라운드에서 수행되며 완료되면 Swing 구성 요소를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="68ddb2ddfcdc8913f37db43e57241769ef4e65d9" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of &lt;a href=&quot;shardingkeybuilder&quot;&gt;&lt;code&gt;ShardingKeyBuilder&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;ShardingKey&lt;/code&gt;:</source>
          <target state="translated">다음 예제의 사용 설명 &lt;a href=&quot;shardingkeybuilder&quot;&gt; &lt;code&gt;ShardingKeyBuilder&lt;/code&gt; 을&lt;/a&gt; 만들 &lt;code&gt;ShardingKey&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="b8b348252a81c67a1d2fe27f014aadc97dbcc209" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of &lt;a href=&quot;shardingkeybuilder&quot;&gt;&lt;code&gt;ShardingKeyBuilder&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;superShardingKey&lt;/code&gt; for an eastern region with a &lt;code&gt;ShardingKey&lt;/code&gt; specified for the Pittsburgh branch office:</source>
          <target state="translated">다음 예제의 사용 설명 &lt;a href=&quot;shardingkeybuilder&quot;&gt; &lt;code&gt;ShardingKeyBuilder&lt;/code&gt; 을&lt;/a&gt; 만들 &lt;code&gt;superShardingKey&lt;/code&gt; 를 A의 동부 지역 &lt;code&gt;ShardingKey&lt;/code&gt; 피츠버그 지사에 대해 지정 :</target>
        </trans-unit>
        <trans-unit id="3e101469e89fbdd4347ecf7874ab5d383fecef17" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of &lt;code&gt;ConnectionBuilder&lt;/code&gt; to create a &lt;a href=&quot;connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">다음 예제의 사용 설명 &lt;code&gt;ConnectionBuilder&lt;/code&gt; 을 만들 &lt;a href=&quot;connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d8e4b5070895b163f1a284ef67fa6006475d5ada" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of &lt;code&gt;PooledConnectionBuilder&lt;/code&gt; to create a &lt;a href=&quot;xaconnection&quot;&gt;&lt;code&gt;XAConnection&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">다음 예제는 &lt;code&gt;PooledConnectionBuilder&lt;/code&gt; 를 사용하여 &lt;a href=&quot;xaconnection&quot;&gt; &lt;code&gt;XAConnection&lt;/code&gt; &lt;/a&gt; 을 생성하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="fa993e0cdf5cf1219a364219e068fb941b4bbae6" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of &lt;code&gt;ShardingKeyBuilder&lt;/code&gt; to create a &lt;a href=&quot;shardingkey&quot;&gt;&lt;code&gt;ShardingKey&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">다음 예제의 사용 설명 &lt;code&gt;ShardingKeyBuilder&lt;/code&gt; 을 만들 &lt;a href=&quot;shardingkey&quot;&gt; &lt;code&gt;ShardingKey&lt;/code&gt; 를&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c6b5aab123e96ace2d06a9a85c7ff2192ebd6c23" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of &lt;code&gt;XAConnectionBuilder&lt;/code&gt; to create a &lt;a href=&quot;xaconnection&quot;&gt;&lt;code&gt;XAConnection&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">다음 예제의 사용 설명 &lt;code&gt;XAConnectionBuilder&lt;/code&gt; 을 만들 &lt;a href=&quot;xaconnection&quot;&gt; &lt;code&gt;XAConnection&lt;/code&gt; 를&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="f8f82bf402adadf527ca538f2a684dbed664a6ab" translate="yes" xml:space="preserve">
          <source>The following example loads the first available service provider. If no service providers are located then it uses a default implementation.</source>
          <target state="translated">다음 예제는 사용 가능한 첫 번째 서비스 공급자를로드합니다. 서비스 제공 업체가 없으면 기본 구현을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a6e6290101eb5dc8885bc7d24ad7895acf725371" translate="yes" xml:space="preserve">
          <source>The following example parses a PKCS#7-formatted certificate reply stored in a file and extracts all the certificates from it:</source>
          <target state="translated">다음 예제는 파일에 저장된 PKCS # 7 형식의 인증서 응답을 구문 분석하고 모든 인증서를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="42afd5399a20f35ce8bb844ce91049a2cf9b546d" translate="yes" xml:space="preserve">
          <source>The following example prints the CPU usage for ten seconds. When the current thread leaves the try-with-resources block the stream is stopped/closed.</source>
          <target state="translated">다음 예제는 10 초 동안 CPU 사용량을 인쇄합니다. 현재 스레드가 try-with-resources 블록을 떠나면 스트림이 중지 / 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="b6581c0e64b1be525be912d116aeb461af451685" translate="yes" xml:space="preserve">
          <source>The following example reads a file with Base64 encoded certificates, which are each bounded at the beginning by -----BEGIN CERTIFICATE-----, and bounded at the end by -----END CERTIFICATE-----. We convert the &lt;code&gt;FileInputStream&lt;/code&gt; (which does not support &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt;) to a &lt;code&gt;BufferedInputStream&lt;/code&gt; (which supports those methods), so that each call to &lt;code&gt;generateCertificate&lt;/code&gt; consumes only one certificate, and the read position of the input stream is positioned to the next certificate in the file:</source>
          <target state="translated">다음 예제는 Base64로 인코딩 된 인증서가있는 파일을 읽습니다.이 인증서는 각각 ----- BEGIN CERTIFICATE -----로 시작하고 끝에 ----- END CERTIFICATE ----- . 우리는 변환 &lt;code&gt;FileInputStream&lt;/code&gt; 에 (안지지 않습니다 &lt;code&gt;mark&lt;/code&gt; 와 &lt;code&gt;reset&lt;/code&gt; A를) &lt;code&gt;BufferedInputStream&lt;/code&gt; 을 (그 방식을 지원합니다) 때문에, 호출 할 때마다 것을 &lt;code&gt;generateCertificate&lt;/code&gt; 로는 내의 다음의 증명서에 배치되도록 하나의 인증서, 입력 스트림의 read 위치를 소비 파일:</target>
        </trans-unit>
        <trans-unit id="7aa7e3d5107355bcf8ccc7f5c63970b36c0aed94" translate="yes" xml:space="preserve">
          <source>The following example records 20 seconds using the &quot;default&quot; configuration and then changes settings to the &quot;profile&quot; configuration.</source>
          <target state="translated">다음 예에서는 &quot;기본&quot;구성을 사용하여 20 초를 기록한 다음 설정을 &quot;프로필&quot;구성으로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="f4c63e2e5d2c5bad8b48d446236f32973f675b19" translate="yes" xml:space="preserve">
          <source>The following example shows a Model MBean being used to make the &lt;code&gt;get&lt;/code&gt; method of a &lt;code&gt;HashMap&lt;/code&gt; available for management through an MBean server. No other methods are available through the MBean server. There is nothing special about &lt;code&gt;HashMap&lt;/code&gt; here. Public methods from any public class can be exposed for management in the same way.</source>
          <target state="translated">다음 예제는 MBean 서버를 통해 &lt;code&gt;HashMap&lt;/code&gt; 의 &lt;code&gt;get&lt;/code&gt; 메소드 를 관리 하는 데 사용하기 위해 사용되는 Model MBean을 보여줍니다 . MBean 서버를 통해 사용할 수있는 다른 방법은 없습니다. &lt;code&gt;HashMap&lt;/code&gt; 에는 특별한 것이 없습니다 . 모든 공개 클래스의 공개 메소드는 동일한 방식으로 관리에 노출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc0415620b4f09b1c46986757c91750d257417fa" translate="yes" xml:space="preserve">
          <source>The following example shows a custom &lt;code&gt;SynthStyle&lt;/code&gt; that returns a red Color for the &lt;code&gt;DISABLED&lt;/code&gt; state, otherwise a black color.</source>
          <target state="translated">다음 예제는 &lt;code&gt;DISABLED&lt;/code&gt; 상태에 대해 빨간색을 반환하고 그렇지 않으면 검은 색 을 반환 하는 사용자 지정 &lt;code&gt;SynthStyle&lt;/code&gt; 을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="2045ca0da6d52947c05422124a31ebb897aab76e" translate="yes" xml:space="preserve">
          <source>The following example shows a naive implementation of a setting control for regular expressions:</source>
          <target state="translated">다음 예제는 정규식에 대한 설정 제어의 순진한 구현을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="688ab75c2f0c0164529e7ba6b2a3e4039b8453b3" translate="yes" xml:space="preserve">
          <source>The following example shows how &lt;code&gt;AnnotationElement&lt;/code&gt; can be used to dynamically define events.</source>
          <target state="translated">다음 예제는 &lt;code&gt;AnnotationElement&lt;/code&gt; 를 사용하여 이벤트를 동적으로 정의 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="fea50f0b6178150f168fc19ed1cb369f75bd8701" translate="yes" xml:space="preserve">
          <source>The following example shows how &lt;code&gt;CollationKey&lt;/code&gt;s might be used to sort a list of &lt;code&gt;String&lt;/code&gt;s.</source>
          <target state="translated">다음 예제는 &lt;code&gt;CollationKey&lt;/code&gt; 를 사용하여 &lt;code&gt;String&lt;/code&gt; 목록을 정렬하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="47324d06a9e76033640d8ae637d680657229799f" translate="yes" xml:space="preserve">
          <source>The following example shows how an &lt;code&gt;EventStream&lt;/code&gt; can be used to listen to events on a JVM running Flight Recorder</source>
          <target state="translated">다음 예제는 &lt;code&gt;EventStream&lt;/code&gt; 을 사용하여 Flight Recorder를 실행하는 JVM에서 이벤트를 수신 하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="62c36d7643403fcadd19aa8ee575a427776f0293" translate="yes" xml:space="preserve">
          <source>The following example shows how an event can be filtered by assigning the &lt;code&gt;&quot;uriFilter&quot;&lt;/code&gt; setting with the specified regular expressions.</source>
          <target state="translated">다음 예제는 지정된 정규식으로 &lt;code&gt;&quot;uriFilter&quot;&lt;/code&gt; 설정을 지정하여 이벤트를 필터링하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="629d25120c22382f08909d4fccb6ff6ca6d4cff1" translate="yes" xml:space="preserve">
          <source>The following example shows how configure, start, stop and dump recording data to disk.</source>
          <target state="translated">다음 예제는 디스크에 기록 데이터를 구성, 시작, 중지 및 덤프하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e5391d49a27cb95b0bed6b486c15049f3f08cfa5" translate="yes" xml:space="preserve">
          <source>The following example shows how create a recording that uses a predefined configuration.</source>
          <target state="translated">다음 예는 사전 정의 된 구성을 사용하는 기록을 만드는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="0b5b4b31110835704a36d695fc5e40afb56e285c" translate="yes" xml:space="preserve">
          <source>The following example shows how read and print all events in a recording file.</source>
          <target state="translated">다음 예제는 녹화 파일의 모든 이벤트를 읽고 인쇄하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c8603f4755c28323507a67b2fd208e400e7d76ef" translate="yes" xml:space="preserve">
          <source>The following example shows how to annotate a method in an event class.</source>
          <target state="translated">다음 예제는 이벤트 클래스에서 메소드에 주석을 추가하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ce6e79fdf9431b4c01ca7a6d0321f3ae696e0bd6" translate="yes" xml:space="preserve">
          <source>The following example shows how to compare two strings using the &lt;code&gt;Collator&lt;/code&gt; for the default locale.</source>
          <target state="translated">다음 예제는 기본 로케일에 대해 &lt;code&gt;Collator&lt;/code&gt; 를 사용하여 두 문자열을 비교하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0cf0ae4f898e0fe5e7d002475f1e1d524ed4b2c7" translate="yes" xml:space="preserve">
          <source>The following example shows how to correctly use this method in the &lt;code&gt;LayerUI&lt;/code&gt; implementations:</source>
          <target state="translated">다음 예제는 &lt;code&gt;LayerUI&lt;/code&gt; 구현 에서이 메서드를 올바르게 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c187db380cfc2f123c5979ca0ebed27c25c70c1d" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a &lt;code&gt;Locale&lt;/code&gt; object with the &lt;code&gt;Builder&lt;/code&gt;.</source>
          <target state="translated">다음 예제는 &lt;code&gt;Builder&lt;/code&gt; 로 &lt;code&gt;Locale&lt;/code&gt; 객체 를 만드는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="bcae6e3d77741791ff101396b2bc79ecd647bf55" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a recording stream that uses a predefined configuration.</source>
          <target state="translated">다음 예는 사전 정의 된 구성을 사용하는 녹화 스트림을 만드는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d9582f12296d6e71d6d9fcc0ab6519e41254d5e2" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a snapshot and write a subset of the data to a file.</source>
          <target state="translated">다음 예에서는 스냅 샷을 만들고 데이터의 하위 집합을 파일에 쓰는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2b8c1f2ad8067de40417ecb0a025683df3e99f73" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an event that uses the regular expression filter defined above.</source>
          <target state="translated">다음 예제는 위에서 정의한 정규식 필터를 사용하는 이벤트를 생성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7e3abc914a0e524b6946d29560eb958e4ebc40c3" translate="yes" xml:space="preserve">
          <source>The following example shows how to implement a dynamic &lt;code&gt;Event&lt;/code&gt; class.</source>
          <target state="translated">다음 예제는 동적 &lt;code&gt;Event&lt;/code&gt; 클래스 를 구현하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="264cc94c34cb46b9a6b5465f3002ea64463b0371" translate="yes" xml:space="preserve">
          <source>The following example shows how to implement an &lt;code&gt;Event&lt;/code&gt; class.</source>
          <target state="translated">다음 예제는 &lt;code&gt;Event&lt;/code&gt; 클래스 를 구현하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="8aa068cd12dc75a5039a7fcddcf1effd6aa6096a" translate="yes" xml:space="preserve">
          <source>The following example shows how to merge settings.</source>
          <target state="translated">다음 예는 설정을 병합하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="29cd2b761e842823dde3ccb08cbcef68de4e0202" translate="yes" xml:space="preserve">
          <source>The following example shows how to record events using the default configuration and print the Garbage Collection, CPU Load and JVM Information event to standard out.</source>
          <target state="translated">다음 예제는 기본 구성을 사용하여 이벤트를 기록하고 가비지 콜렉션, CPU로드 및 JVM 정보 이벤트를 표준 출력으로 인쇄하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6c7e8b1c50e7c5d55bc6c1cf1dd809105325fc4f" translate="yes" xml:space="preserve">
          <source>The following example shows how to set event settings for a recording.</source>
          <target state="translated">다음 예는 녹화에 대한 이벤트 설정을 지정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="03471ff73f4b154adcb0055c65e24b672be88999" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;EventSettings&lt;/code&gt; class.</source>
          <target state="translated">다음 예제는 &lt;code&gt;EventSettings&lt;/code&gt; 클래스 를 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="150e09ca9847d84414dbe1fa53852bf6280551da" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the public constructor &lt;a href=&quot;#%3Cinit%3E(T,java.lang.Class,javax.management.NotificationEmitter)&quot;&gt;&lt;code&gt;StandardEmitterMBean(implementation, mbeanInterface, emitter)&lt;/code&gt;&lt;/a&gt; to create an MBean emitting notifications with any implementation class name</source>
          <target state="translated">다음 예제는 공용 생성자 &lt;a href=&quot;#%3Cinit%3E(T,java.lang.Class,javax.management.NotificationEmitter)&quot;&gt; &lt;code&gt;StandardEmitterMBean(implementation, mbeanInterface, emitter)&lt;/code&gt; &lt;/a&gt; 을 사용하여 구현 클래스 이름으로 알림을 방출하는 MBean을 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="34a66fd3c2e9d5a20b80170ff37d4fcae56dbf7b" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the public constructor &lt;a href=&quot;standardemittermbean#StandardEmitterMBean-T-java.lang.Class-javax.management.NotificationEmitter-&quot;&gt;&lt;code&gt;StandardEmitterMBean(implementation, mbeanInterface, emitter)&lt;/code&gt;&lt;/a&gt; to create an MBean emitting notifications with any implementation class name</source>
          <target state="translated">다음 예제는 공용 생성자 &lt;a href=&quot;standardemittermbean#StandardEmitterMBean-T-java.lang.Class-javax.management.NotificationEmitter-&quot;&gt; &lt;code&gt;StandardEmitterMBean(implementation, mbeanInterface, emitter)&lt;/code&gt; &lt;/a&gt; 을 사용하여 구현 클래스 이름으로 MBean 방출 알림을 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="0332a21704227b2fe01c6ea2919706eb14858df4" translate="yes" xml:space="preserve">
          <source>The following example uses a &lt;code&gt;Class&lt;/code&gt; object to print the class name of an object:</source>
          <target state="translated">다음 예제는 &lt;code&gt;Class&lt;/code&gt; 객체를 사용하여 객체의 클래스 이름을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="105fab9a92f7744114e1e113e7a7e36eff93a442" translate="yes" xml:space="preserve">
          <source>The following example uses one of the &lt;a href=&quot;httpresponse.bodyhandlers&quot;&gt;predefined body handlers&lt;/a&gt; that always process the response body in the same way ( streams the response body to a file ).</source>
          <target state="translated">다음 예제에서는 항상 동일한 방식으로 응답 본문을 처리 하는 &lt;a href=&quot;httpresponse.bodyhandlers&quot;&gt;미리 정의 된 본문 처리기&lt;/a&gt; 중 하나를 사용 합니다 (응답 본문을 파일로 스트리밍).</target>
        </trans-unit>
        <trans-unit id="74feb2533320ada267d3e34c037f75c2166c6bfc" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;a href=&quot;#resolve(java.lang.module.ModuleFinder,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt; method to resolve a module named &lt;em&gt;myapp&lt;/em&gt; with the configuration for the boot layer as the parent configuration. It prints the name of each resolved module and the names of the modules that each module reads.</source>
          <target state="translated">다음 예에서는 &lt;a href=&quot;#resolve(java.lang.module.ModuleFinder,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 부팅 계층에 대한 구성을 부모 구성으로 사용하는 &lt;em&gt;myapp&lt;/em&gt; 모듈을 확인 합니다. 해결 된 각 모듈의 이름과 각 모듈이 읽는 모듈의 이름을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="13094b1afd628aca804009d6503e45d3606912cb" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate possible values for the &lt;code&gt;
 attributes&lt;/code&gt; parameter:</source>
          <target state="translated">다음 예제는 &lt;code&gt; attributes&lt;/code&gt; 매개 변수의 가능한 값을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="70e1b9830a3df588a8b8a729994679251f34346f" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate possible values for the &lt;code&gt;attributes&lt;/code&gt; parameter:</source>
          <target state="translated">다음 예제는 &lt;code&gt;attributes&lt;/code&gt; 매개 변수에 가능한 값을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9288a923ae0848eff92cd52b3c4755b3510286a3" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate usage. The first example creates a stream of &lt;code&gt;CodecFactory&lt;/code&gt; objects, the second example is the same except that it sorts the providers by provider class name (and so locate all providers).</source>
          <target state="translated">다음 예제는 사용법을 보여줍니다. 첫 번째 예제는 &lt;code&gt;CodecFactory&lt;/code&gt; 개체 의 스트림을 만들고 두 번째 예제는 공급자를 공급자 클래스 이름별로 정렬한다는 점을 제외하면 동일합니다 (따라서 모든 공급자를 찾습니다).</target>
        </trans-unit>
        <trans-unit id="97ea0c19b95e394c32268e376ed83f7f985b11a8" translate="yes" xml:space="preserve">
          <source>The following examples illustrate using these methods. Each example assumes the HTML document is initialized in the following way:</source>
          <target state="translated">다음 예제는 이러한 방법을 사용하는 방법을 보여줍니다. 각 예제에서는 HTML 문서가 다음과 같은 방식으로 초기화되었다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="6cf471a50873b59781f1a5d22c6455b5de64fb64" translate="yes" xml:space="preserve">
          <source>The following examples show how date and time patterns are interpreted in the U.S. locale. The given date and time are 2001-07-04 12:08:56 local time in the U.S. Pacific Time time zone.</source>
          <target state="translated">다음 예제는 미국 로케일에서 날짜 및 시간 패턴이 해석되는 방식을 보여줍니다. 주어진 날짜와 시간은 미국 태평양 표준시의 2001-07-04 12:08:56 현지 시간입니다.</target>
        </trans-unit>
        <trans-unit id="9514a949b32595fe680081e76c54845b30a0aec5" translate="yes" xml:space="preserve">
          <source>The following examples shows how the category is used to determine how events are visualized in a tree:</source>
          <target state="translated">다음 예는 이벤트가 트리에서 시각화되는 방식을 결정하기 위해 범주를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b0632e6225effa0dd63e846e4520249121991123" translate="yes" xml:space="preserve">
          <source>The following factors are used in the description of the blending equation in the Porter and Duff paper:</source>
          <target state="translated">Porter와 Duff 논문의 혼합 방정식 설명에는 다음 요소가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b060c7c49d5c47fafe67983831ac5a2196238ddc" translate="yes" xml:space="preserve">
          <source>The following factors will be used to discuss our extensions to the blending equation in the Porter and Duff paper:</source>
          <target state="translated">Porter와 Duff 논문에서 혼합 방정식에 대한 확장을 논의하는 데 다음 요소가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3e4ce72fcea17db538dc08375b9af49bdf3a0d34" translate="yes" xml:space="preserve">
          <source>The following figure shows a baseline layout and includes a component that spans rows:</source>
          <target state="translated">다음 그림은 기준선 레이아웃을 보여 주며 행에 걸쳐있는 구성 요소를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="c9b480102aa80b7116ba081776d8fc9c47c998d2" translate="yes" xml:space="preserve">
          <source>The following figure shows the relationship between size and position data for a multi-column component.</source>
          <target state="translated">다음 그림은 다중 열 구성 요소에 대한 크기와 위치 데이터 간의 관계를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="906ef8373352bf4e852cc52a802ab4cdf9b65eb5" translate="yes" xml:space="preserve">
          <source>The following figures show ten components (all buttons) managed by a grid bag layout. Figure 2 shows the layout for a horizontal, left-to-right container and Figure 3 shows the layout for a horizontal, right-to-left container.</source>
          <target state="translated">다음 그림은 그리드 백 레이아웃으로 관리되는 10 개의 구성 요소 (모든 버튼)를 보여줍니다. 그림 2는 수평 왼쪽에서 오른쪽 컨테이너의 레이아웃을 보여주고 그림 3은 수평 오른쪽에서 왼쪽 컨테이너의 레이아웃을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d27a5fac9684ab445570c45c6aa8783eca1e2a54" translate="yes" xml:space="preserve">
          <source>The following form:</source>
          <target state="translated">다음과 같은 형태 :</target>
        </trans-unit>
        <trans-unit id="25a756a58cb2655e8ad539845d1c9b0926cdf9aa" translate="yes" xml:space="preserve">
          <source>The following formulas are always true for a &lt;code&gt;Constraints&lt;/code&gt; object (here WEST and &lt;code&gt;x&lt;/code&gt; are synonyms, as are and NORTH and &lt;code&gt;y&lt;/code&gt;):</source>
          <target state="translated">다음 공식은 &lt;code&gt;Constraints&lt;/code&gt; 객체에 대해 항상 참입니다 (여기서 WEST 및 &lt;code&gt;x&lt;/code&gt; 는있는 그대로, NORTH 및 &lt;code&gt;y&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="279fcc4d026d6759301de3593759ad5dea9bdb03" translate="yes" xml:space="preserve">
          <source>The following general conversions may be applied to any argument type:</source>
          <target state="translated">다음과 같은 일반적인 변환이 모든 인수 유형에 적용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="346aa8af59d095a0cf819e2a13e769a2c2aa85e6" translate="yes" xml:space="preserve">
          <source>The following illustrates loading an &lt;code&gt;InputMap&lt;/code&gt; with two &lt;code&gt;key-action&lt;/code&gt; pairs:</source>
          <target state="translated">다음은 두 개의 &lt;code&gt;key-action&lt;/code&gt; 쌍으로 &lt;code&gt;InputMap&lt;/code&gt; 을 로드하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="174393cc0bd44b845cea1cc9ee5a2f036c3003ea" translate="yes" xml:space="preserve">
          <source>The following image shows the appearance of a text area:</source>
          <target state="translated">다음 이미지는 텍스트 영역의 모양을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1dd40017212822f21694ba3d70bff633a44c4e65" translate="yes" xml:space="preserve">
          <source>The following image shows the relationships between the classes that use root panes.</source>
          <target state="translated">다음 이미지는 루트 창을 사용하는 클래스 간의 관계를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="75a6aefb999d419cd1a82d97d1a727b01ec7b7ec" translate="yes" xml:space="preserve">
          <source>The following interfaces are not MXBean interfaces:</source>
          <target state="translated">다음 인터페이스는 MXBean 인터페이스가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="ed265a42fc53230e870ef0ae1b0b98d73373ccaa" translate="yes" xml:space="preserve">
          <source>The following interfaces, in the &lt;code&gt;javax.sql&lt;/code&gt; package, are also part of the SPI:</source>
          <target state="translated">&lt;code&gt;javax.sql&lt;/code&gt; 패키지 의 다음 인터페이스 도 SPI의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="5b0b30e55e796a5ec6b2164196050ba8bf078c28" translate="yes" xml:space="preserve">
          <source>The following invariant holds for the mark, position, limit, and capacity values:</source>
          <target state="translated">마크, 위치, 한계 및 용량 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="edfb837a44de40c003fa4a1712d49041093f4267" translate="yes" xml:space="preserve">
          <source>The following is a list of conditions under which this exception can be thrown:</source>
          <target state="translated">다음은이 예외가 발생할 수있는 조건 목록입니다.</target>
        </trans-unit>
        <trans-unit id="0b5a6fd8e7a44cb844d1b9a7ee45ff3a2f634441" translate="yes" xml:space="preserve">
          <source>The following is a list of configuration options supported for &lt;code&gt;Krb5LoginModule&lt;/code&gt;:</source>
          <target state="translated">다음은 &lt;code&gt;Krb5LoginModule&lt;/code&gt; 에 지원되는 구성 옵션 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="3c66588b87527f1a5baf11483bf18ea1e5e20a3b" translate="yes" xml:space="preserve">
          <source>The following is a very simple example of a &lt;code&gt;ResourceBundle&lt;/code&gt; subclass, &lt;code&gt;MyResources&lt;/code&gt;, that manages two resources (for a larger number of resources you would probably use a &lt;code&gt;Map&lt;/code&gt;). Notice that you don't need to supply a value if a &quot;parent-level&quot; &lt;code&gt;ResourceBundle&lt;/code&gt; handles the same key with the same value (as for the okKey below).</source>
          <target state="translated">다음은 두 개의 자원을 관리 하는 &lt;code&gt;ResourceBundle&lt;/code&gt; 서브 클래스 &lt;code&gt;MyResources&lt;/code&gt; 의 매우 간단한 예입니다 (더 많은 수의 자원에 대해서는 &lt;code&gt;Map&lt;/code&gt; 을 사용할 것입니다 ). &quot;parent-level&quot; &lt;code&gt;ResourceBundle&lt;/code&gt; 이 동일한 값을 가진 동일한 키를 처리하는 경우 (아래 okKey와 같이) 값을 제공 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="a35019878874a7fd8dd74b1784ae216cc20be6ae" translate="yes" xml:space="preserve">
          <source>The following is an example doclet that displays information of a class and its members, supporting an option.</source>
          <target state="translated">다음은 옵션을 지원하는 클래스 및 해당 멤버의 정보를 표시하는 예제 doclet입니다.</target>
        </trans-unit>
        <trans-unit id="22998b14b84e5464217ecc64a23f424a4e89dae6" translate="yes" xml:space="preserve">
          <source>The following is an example of a GET request that prints the response body as a String:</source>
          <target state="translated">다음은 응답 본문을 문자열로 인쇄하는 GET 요청의 예입니다.</target>
        </trans-unit>
        <trans-unit id="9853868399354f386c11be29586d4baa4163b9e2" translate="yes" xml:space="preserve">
          <source>The following is an example of a simple XPath expression:</source>
          <target state="translated">다음은 간단한 XPath 표현식의 예입니다.</target>
        </trans-unit>
        <trans-unit id="bdaadb43c4aeb6da55f35a1a37d30ab08c2123d1" translate="yes" xml:space="preserve">
          <source>The following is an example of how to use a key factory in order to instantiate a DSA public key from its encoding. Assume Alice has received a digital signature from Bob. Bob also sent her his public key (in encoded format) to verify his signature. Alice then performs the following actions:</source>
          <target state="translated">다음은 인코딩에서 DSA 공개 키를 인스턴스화하기 위해 키 팩토리를 사용하는 방법의 예입니다. Alice가 Bob으로부터 디지털 서명을 받았다고 가정하십시오. 또한 Bob은 서명을 확인하기 위해 공개 키 (인코딩 형식)를 보냈습니다. 그런 다음 Alice는 다음 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="948ce4f3bc2eb80eaf11902cafb5d347833f9db3" translate="yes" xml:space="preserve">
          <source>The following is an example of loading XML-based bundles using &lt;a href=&quot;properties#loadFromXML(java.io.InputStream)&quot;&gt;&lt;code&gt;Properties.loadFromXML&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음은 &lt;a href=&quot;properties#loadFromXML(java.io.InputStream)&quot;&gt; &lt;code&gt;Properties.loadFromXML&lt;/code&gt; 을&lt;/a&gt; 사용하여 XML 기반 번들을로드하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="804b14ddfbb725fdd0c6db2c193593fa8a180d72" translate="yes" xml:space="preserve">
          <source>The following is an example of loading XML-based bundles using &lt;a href=&quot;properties#loadFromXML-java.io.InputStream-&quot;&gt;&lt;code&gt;Properties.loadFromXML&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음은 &lt;a href=&quot;properties#loadFromXML-java.io.InputStream-&quot;&gt; &lt;code&gt;Properties.loadFromXML&lt;/code&gt; 을&lt;/a&gt; 사용하여 XML 기반 번들을로드하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="67b3505277b8510442adfa39552de8621cf4bfdb" translate="yes" xml:space="preserve">
          <source>The following is an example of retrieving a response as a String:</source>
          <target state="translated">다음은 응답을 문자열로 검색하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="b19e1ceab964624bd7adda3910cb263b99752918" translate="yes" xml:space="preserve">
          <source>The following is an example of the bundle loading process with the default &lt;code&gt;ResourceBundle.Control&lt;/code&gt; implementation.</source>
          <target state="translated">다음은 기본 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 구현을 사용한 번들로드 프로세스의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="bea54c2ee0652c739fb146ce39cebf51995f73cb" translate="yes" xml:space="preserve">
          <source>The following is one example of the use of the tokenizer. The code:</source>
          <target state="translated">다음은 토크 나이저 사용의 한 예입니다. 코드:</target>
        </trans-unit>
        <trans-unit id="52b9ec700425589fbdc086ec3a939db1893539c5" translate="yes" xml:space="preserve">
          <source>The following kinds of information can be obtained from a &lt;code&gt;SyncResolver&lt;/code&gt; object:</source>
          <target state="translated">&lt;code&gt;SyncResolver&lt;/code&gt; 객체 에서 다음과 같은 종류의 정보를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ea9d9bada0a8ef0aed953f6ecd23f2e2098da85d" translate="yes" xml:space="preserve">
          <source>The following line of code creates the &lt;code&gt;CachedRowSet&lt;/code&gt; object</source>
          <target state="translated">다음 코드 줄은 &lt;code&gt;CachedRowSet&lt;/code&gt; 개체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f37574f5f93fb3008e9bc387bd52bb13322878b9" translate="yes" xml:space="preserve">
          <source>The following line of code resets the &lt;code&gt;SyncProvider&lt;/code&gt; object for</source>
          <target state="translated">다음 코드 줄은 다음에 대한 &lt;code&gt;SyncProvider&lt;/code&gt; 객체를 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="f79cfbf4566791f20e92a99e823ec9bfc7ed889e" translate="yes" xml:space="preserve">
          <source>The following line of code uses the default constructor for &lt;code&gt;CachedRowSet&lt;/code&gt; supplied in the reference implementation (RI) to create a default &lt;code&gt;CachedRowSet&lt;/code&gt; object.</source>
          <target state="translated">다음 코드 줄은 참조 구현 (RI)에 제공된 &lt;code&gt;CachedRowSet&lt;/code&gt; 의 기본 생성자 를 사용하여 기본 &lt;code&gt;CachedRowSet&lt;/code&gt; 개체 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b0c56cda4a595a6aaa8230eda97af6594295a798" translate="yes" xml:space="preserve">
          <source>The following line of code uses the fully qualified name to register this implementation with the &lt;code&gt;SyncFactory&lt;/code&gt; static instance.</source>
          <target state="translated">다음 코드 줄은 정규화 된 이름을 사용하여이 구현을 &lt;code&gt;SyncFactory&lt;/code&gt; 정적 인스턴스 에 등록 합니다.</target>
        </trans-unit>
        <trans-unit id="a8babc37cfd9a2c16e54d44c9b07cc4e8aec3a0d" translate="yes" xml:space="preserve">
          <source>The following list describes the accepted selection modes:</source>
          <target state="translated">다음 목록은 허용되는 선택 모드를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b7e3606d490054cb4d21babd105a9cf2ebf6b80f" translate="yes" xml:space="preserve">
          <source>The following list of parameters defined in the DOM:</source>
          <target state="translated">DOM에 정의 된 다음 매개 변수 목록 :</target>
        </trans-unit>
        <trans-unit id="17ab3ffda462facda1394413471c75399824926c" translate="yes" xml:space="preserve">
          <source>The following low-level information summarizes relevant parts of the Java Virtual Machine specification. For full details, please see the current version of that specification.</source>
          <target state="translated">다음 하위 수준 정보는 Java Virtual Machine 사양의 관련 부분을 요약합니다. 자세한 내용은 해당 사양의 최신 버전을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c2c0d7dfb61bac087e83f84901457fcbf7f4359a" translate="yes" xml:space="preserve">
          <source>The following low-level information summarizes relevant parts of the Java Virtual Machine specification. For full details, please see the current version of that specification. Each occurrence of an &lt;code&gt;invokedynamic&lt;/code&gt; instruction is called a &lt;em&gt;dynamic call site&lt;/em&gt;.</source>
          <target state="translated">다음의 저수준 정보는 Java Virtual Machine 사양의 관련 부분을 요약합니다. 자세한 내용은 해당 사양의 현재 버전을 참조하십시오. &lt;code&gt;invokedynamic&lt;/code&gt; 명령 의 각 발생을 &lt;em&gt;동적 호출 사이트라고합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="bc850c367b3d55d030ac5fba689706da95bcf62c" translate="yes" xml:space="preserve">
          <source>The following manifest attributes are defined for an agent JAR file:</source>
          <target state="translated">에이전트 JAR 파일에 대해 다음 매니페스트 속성이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="b1a314b46d00422122cdcb27ebe2ea8043e6f6b1" translate="yes" xml:space="preserve">
          <source>The following method shuts down an &lt;code&gt;ExecutorService&lt;/code&gt; in two phases, first by calling &lt;code&gt;shutdown&lt;/code&gt; to reject incoming tasks, and then calling &lt;code&gt;shutdownNow&lt;/code&gt;, if necessary, to cancel any lingering tasks:</source>
          <target state="translated">다음 방법은 먼저 &lt;code&gt;shutdown&lt;/code&gt; 을 호출 하여 수신 작업을 거부 한 다음 필요한 경우 &lt;code&gt;shutdownNow&lt;/code&gt; 를 호출 하여 느린 작업을 취소 하여 두 단계 로 &lt;code&gt;ExecutorService&lt;/code&gt; 를 종료 합니다.</target>
        </trans-unit>
        <trans-unit id="a328e9adb76cbb68764d8f97da4a65fd0868eb7c" translate="yes" xml:space="preserve">
          <source>The following method types are handled as special cases:</source>
          <target state="translated">다음과 같은 메소드 유형이 특수한 경우로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="e9a1bbd9e3c20e8c58669c2f26139ca6f2e0fec7" translate="yes" xml:space="preserve">
          <source>The following methods are related to mutation of the document content:</source>
          <target state="translated">다음 방법은 문서 내용의 변형과 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="32c5f835db7f701a964e6eeb354a81d6919fa866" translate="yes" xml:space="preserve">
          <source>The following methods are used to access the header fields and the contents after the connection is made to the remote object:</source>
          <target state="translated">원격 객체에 연결 한 후 헤더 필드 및 내용에 액세스하는 데 다음 방법이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5d718c0190660979044332a467b14434f2c40769" translate="yes" xml:space="preserve">
          <source>The following methods give access to the character data that makes up the content.</source>
          <target state="translated">다음 메서드는 콘텐츠를 구성하는 문자 데이터에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="033ba12390d0946290eb6e67df6857757d06f3c1" translate="yes" xml:space="preserve">
          <source>The following methods give access to the document structure.</source>
          <target state="translated">다음 메소드는 문서 구조에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="50a1bbb1b771696673bad8905b2f708ce5822988" translate="yes" xml:space="preserve">
          <source>The following notes apply to the &quot;DRBG&quot; implementation in the SUN provider of the JDK reference implementation.</source>
          <target state="translated">다음 참고 사항은 JDK 참조 구현의 SUN 공급자에서 &quot;DRBG&quot;구현에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="bab784498a1090741bc7bcbb128bd96d44390724" translate="yes" xml:space="preserve">
          <source>The following operations are defined for this class:</source>
          <target state="translated">이 클래스에 대해 다음 작업이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="30a4db2338b89e038c1cc452b10ce7642236ba11" translate="yes" xml:space="preserve">
          <source>The following option is mandatory and must be specified in this module's login &lt;a href=&quot;../../../../../../java.base/javax/security/auth/login/configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">다음 옵션은 필수이며이 모듈의 로그인 &lt;a href=&quot;../../../../../../java.base/javax/security/auth/login/configuration&quot;&gt; &lt;code&gt;Configuration&lt;/code&gt; &lt;/a&gt; 지정되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c98f5bf240579a5e055310b3d44156bec892f4f9" translate="yes" xml:space="preserve">
          <source>The following options can be used to specify the elements to be documented:</source>
          <target state="translated">다음 옵션을 사용하여 문서화 할 요소를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4aee0a6de1b9f655ca7af28697158bc4a87c8e48" translate="yes" xml:space="preserve">
          <source>The following paragraphs describe the namespace and prefix repair algorithm:</source>
          <target state="translated">다음 단락은 네임 스페이스 및 접두사 복구 알고리즘을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="d58a87561186b3df4cf28fc117db16e1fb370f26" translate="yes" xml:space="preserve">
          <source>The following pattern letters are defined (all other characters from &lt;code&gt;'A'&lt;/code&gt; to &lt;code&gt;'Z'&lt;/code&gt; and from &lt;code&gt;'a'&lt;/code&gt; to &lt;code&gt;'z'&lt;/code&gt; are reserved):</source>
          <target state="translated">다음 패턴 문자가 정의되어 있습니다 (모든 다른 문자 &lt;code&gt;'A'&lt;/code&gt; 에 &lt;code&gt;'Z'&lt;/code&gt; 과에서를 &lt;code&gt;'a'&lt;/code&gt; 에 &lt;code&gt;'z'&lt;/code&gt; 예약되어 있습니다) :</target>
        </trans-unit>
        <trans-unit id="0581e85badd78769c153a1b23a991b8102df6ee3" translate="yes" xml:space="preserve">
          <source>The following permissions have been superseded by newer permissions or are associated with classes that have been deprecated: &lt;a href=&quot;identity&quot;&gt;&lt;code&gt;Identity&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;identityscope&quot;&gt;&lt;code&gt;IdentityScope&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;signer&quot;&gt;&lt;code&gt;Signer&lt;/code&gt;&lt;/a&gt;. Use of them is discouraged. See the applicable classes for more information.</source>
          <target state="translated">다음 권한은 최신 권한으로 대체되었거나 더 이상 사용되지 않는 클래스 ( &lt;a href=&quot;identity&quot;&gt; &lt;code&gt;Identity&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;identityscope&quot;&gt; &lt;code&gt;IdentityScope&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;signer&quot;&gt; &lt;code&gt;Signer&lt;/code&gt; )&lt;/a&gt; 와 연관되어 있습니다 . 그것들의 사용은 권장되지 않습니다. 자세한 내용은 해당 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0ce1ce1082433f08b5898ba357a42b396c18a94b" translate="yes" xml:space="preserve">
          <source>The following picture depicts a menu which contains an instance of &lt;code&gt;CheckBoxMenuItem&lt;/code&gt;:</source>
          <target state="translated">다음 그림은 &lt;code&gt;CheckBoxMenuItem&lt;/code&gt; 인스턴스가 포함 된 메뉴를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0b19fc8974415be4515bd98831bb56ee0af08745" translate="yes" xml:space="preserve">
          <source>The following properties can be set by an application using the &lt;a href=&quot;../xmlcryptocontext#setProperty(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;setProperty&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">다음 속성은 &lt;a href=&quot;../xmlcryptocontext#setProperty(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;setProperty&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 응용 프로그램에서 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f9f9efa67d2f67a9c06dba17961a71fba1930dcf" translate="yes" xml:space="preserve">
          <source>The following properties can be set using the &lt;a href=&quot;../xmlcryptocontext#setProperty(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;setProperty&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../xmlcryptocontext#setProperty(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;setProperty&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 다음 속성을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8372277a7920b07e43bb0a2b05852021ccc2682f" translate="yes" xml:space="preserve">
          <source>The following properties have been deprecated in favor of the corresponding ones for the &lt;code&gt;BODY&lt;/code&gt; element: alinkColor background bgColor fgColor linkColor vlinkColor In DOM Level 2, the method &lt;code&gt;getElementById&lt;/code&gt; is inherited from the &lt;code&gt;Document&lt;/code&gt; interface where it was moved.</source>
          <target state="translated">다음 속성은 &lt;code&gt;BODY&lt;/code&gt; 요소에 해당하는 속성 대신 사용되지 않습니다 . alinkColor background bgColor fgColor linkColor vlinkColor DOM 레벨 2에서 &lt;code&gt;getElementById&lt;/code&gt; 메소드 는 이동 된 &lt;code&gt;Document&lt;/code&gt; 인터페이스에서 상속됩니다 .</target>
        </trans-unit>
        <trans-unit id="c56cd66602459179aafcf7141a3eed89fa1cb5b3" translate="yes" xml:space="preserve">
          <source>The following properties may be specified when creating a Zip file system:</source>
          <target state="translated">Zip 파일 시스템을 만들 때 다음 속성을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="095e3e7355fa19f5ee58289d9796e3e988d310d1" translate="yes" xml:space="preserve">
          <source>The following represents an example &lt;code&gt;Configuration&lt;/code&gt; entry based on the syntax above:</source>
          <target state="translated">다음은 위 구문을 기반으로 한 예제 &lt;code&gt;Configuration&lt;/code&gt; 항목을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="37ceef4725c7a0cd363a2cacc2e6b899d6b4fb89" translate="yes" xml:space="preserve">
          <source>The following requirements MUST be abided by when implementing a DOM-based &lt;code&gt;XMLSignatureFactory&lt;/code&gt;, &lt;code&gt;KeyInfoFactory&lt;/code&gt; or &lt;code&gt;
 TransformService&lt;/code&gt; in order to minimize interoperability problems:</source>
          <target state="translated">상호 운용성 문제를 최소화하기 위해 DOM 기반 &lt;code&gt;XMLSignatureFactory&lt;/code&gt; , &lt;code&gt;KeyInfoFactory&lt;/code&gt; 또는 &lt;code&gt; TransformService&lt;/code&gt; 를 구현할 때 다음 요구 사항을 준수해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b548a437c93d820df4dce7f8288d69def9ab4607" translate="yes" xml:space="preserve">
          <source>The following resolver would provide the application with a special character stream for the entity with the system identifier &quot;http://www.myhost.com/today&quot;:</source>
          <target state="translated">다음 해석기는 시스템 식별자가 &quot;http://www.myhost.com/today&quot;인 엔티티에 대한 특수 문자 스트림을 응용 프로그램에 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f897dc897276fa2272fca1b98488f908fe0ba63e" translate="yes" xml:space="preserve">
          <source>The following rule is used to create the control:</source>
          <target state="translated">컨트롤을 만드는 데 다음 규칙이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7e08456c6517fc0c2e3ee51167af4648cf8de1dd" translate="yes" xml:space="preserve">
          <source>The following rules are applied in the conversion:</source>
          <target state="translated">다음 규칙이 변환에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="08205e616ea1bce1e08b0bc0e1129d0240a8555c" translate="yes" xml:space="preserve">
          <source>The following rules are used to interpret glob patterns:</source>
          <target state="translated">glob 패턴을 해석하는 데 다음 규칙이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="928b2cc192bd54d187e07b35ee1aebe277bfa0d3" translate="yes" xml:space="preserve">
          <source>The following rules hold for the argument handles:</source>
          <target state="translated">인수 핸들에는 다음 규칙이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="d8c3936624028ddf5fc126c8eada1c05272c495e" translate="yes" xml:space="preserve">
          <source>The following rules hold for these argument handles:</source>
          <target state="translated">이러한 인수 핸들에는 다음 규칙이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="ad4c5b4cd8bd37cf908e5ed29500d2cf8fce0b0b" translate="yes" xml:space="preserve">
          <source>The following sections demonstrates how a &lt;code&gt;WebRowSet&lt;/code&gt; implementation should use the XML Schema to describe update, insert, and delete operations and to describe the state of a &lt;code&gt;WebRowSet&lt;/code&gt; object in XML.</source>
          <target state="translated">다음 섹션에서는 &lt;code&gt;WebRowSet&lt;/code&gt; 구현에서 XML 스키마를 사용하여 업데이트, 삽입 및 삭제 작업을 설명하고 XML에서 &lt;code&gt;WebRowSet&lt;/code&gt; 개체 의 상태를 설명하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e662f5cafdbd5ecb60e1c6f67533b72f8424da4a" translate="yes" xml:space="preserve">
          <source>The following sections give further details of these rules.</source>
          <target state="translated">다음 섹션에서는 이러한 규칙에 대한 자세한 내용을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3dc3552c73c17ca1b9c5aa43bfd7d5dfaf26a9bf" translate="yes" xml:space="preserve">
          <source>The following shows two of the &lt;code&gt;name-color&lt;/code&gt; pairs:</source>
          <target state="translated">다음은 두 개의 &lt;code&gt;name-color&lt;/code&gt; 쌍을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="1d29f60bac8cc9a33818a808a558b8ff33982da4" translate="yes" xml:space="preserve">
          <source>The following standard button masks are also accepted:</source>
          <target state="translated">다음 표준 버튼 마스크도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e981f6a80c2f4b200d1c20e0f2e1b9057f274cc5" translate="yes" xml:space="preserve">
          <source>The following standard type names have been defined:</source>
          <target state="translated">다음 표준 유형 이름이 정의되었습니다.</target>
        </trans-unit>
        <trans-unit id="059245ffb9cf67aa21ae5627f1571722543f9fdb" translate="yes" xml:space="preserve">
          <source>The following statement:</source>
          <target state="translated">다음 진술 :</target>
        </trans-unit>
        <trans-unit id="dc17f56a6c7df0d6dab18fd32c3d2b022583dfb1" translate="yes" xml:space="preserve">
          <source>The following steps are used to determine the set of glyphs required to render the indicated &lt;code&gt;String&lt;/code&gt;:</source>
          <target state="translated">다음 단계는 표시된 &lt;code&gt;String&lt;/code&gt; 을 렌더링하는 데 필요한 글리프 세트를 결정하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="0d1054dd27a2b54725c034e56e595342eef2e37d" translate="yes" xml:space="preserve">
          <source>The following string attributes are equal: &lt;code&gt;nodeName&lt;/code&gt;, &lt;code&gt;localName&lt;/code&gt;, &lt;code&gt;namespaceURI&lt;/code&gt;, &lt;code&gt;prefix&lt;/code&gt;, &lt;code&gt;nodeValue&lt;/code&gt; . This is: they are both &lt;code&gt;null&lt;/code&gt;, or they have the same length and are character for character identical.</source>
          <target state="translated">다음 문자열 속성은 동일합니다 : &lt;code&gt;nodeName&lt;/code&gt; , &lt;code&gt;localName&lt;/code&gt; , &lt;code&gt;namespaceURI&lt;/code&gt; , &lt;code&gt;prefix&lt;/code&gt; , &lt;code&gt;nodeValue&lt;/code&gt; . 이것은 둘 다 &lt;code&gt;null&lt;/code&gt; 이거나 길이가 같고 문자가 동일한 문자입니다.</target>
        </trans-unit>
        <trans-unit id="4860201a1768a9dc24bcaa52fb5ec801c2e06f8c" translate="yes" xml:space="preserve">
          <source>The following string attributes are equal: &lt;code&gt;publicId&lt;/code&gt;, &lt;code&gt;systemId&lt;/code&gt;, &lt;code&gt;internalSubset&lt;/code&gt;.</source>
          <target state="translated">다음 문자열 속성은 동일합니다 : &lt;code&gt;publicId&lt;/code&gt; , &lt;code&gt;systemId&lt;/code&gt; , &lt;code&gt;internalSubset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="616bdaa8268db9337c435490cc6ea5d71fc28b55" translate="yes" xml:space="preserve">
          <source>The following syntax is supported for configuration data:</source>
          <target state="translated">구성 데이터에 대해 다음 구문이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="ecd14701074ee88ad3cd6b898bb2965df70eb0b9" translate="yes" xml:space="preserve">
          <source>The following table describes the properties used by &lt;code&gt;Swing&lt;/code&gt; components that support &lt;code&gt;Actions&lt;/code&gt;. In the table, &lt;em&gt;button&lt;/em&gt; refers to any &lt;code&gt;AbstractButton&lt;/code&gt; subclass, which includes not only &lt;code&gt;JButton&lt;/code&gt; but also classes such as &lt;code&gt;JMenuItem&lt;/code&gt;. Unless otherwise stated, a &lt;code&gt;null&lt;/code&gt; property value in an &lt;code&gt;Action&lt;/code&gt; (or a &lt;code&gt;Action&lt;/code&gt; that is &lt;code&gt;null&lt;/code&gt;) results in the button's corresponding property being set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">다음 표는 &lt;code&gt;Actions&lt;/code&gt; 를 지원 하는 &lt;code&gt;Swing&lt;/code&gt; 구성 요소에서 사용하는 속성을 설명합니다 . 표에서 &lt;em&gt;button&lt;/em&gt; 은 &lt;code&gt;JButton&lt;/code&gt; 뿐만 아니라 &lt;code&gt;JMenuItem&lt;/code&gt; 과 같은 클래스도 포함 하는 &lt;code&gt;AbstractButton&lt;/code&gt; 하위 클래스를 나타냅니다 . 달리 언급하지 않는 한 &lt;code&gt;null&lt;/code&gt; 의 속성 값 &lt;code&gt;Action&lt;/code&gt; (또는 &lt;code&gt;Action&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; )으로 설정되고, 버튼의 속성에 대응하는 결과를 &lt;code&gt;null&lt;/code&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2515e4e89d813c49f09f4f13c10f030d89493ebc" translate="yes" xml:space="preserve">
          <source>The following table describes which methods are valid in what state. If a method is called in an invalid state the method will throw a java.lang.IllegalStateException.</source>
          <target state="translated">다음 표는 어떤 상태에서 유효한 메소드를 설명합니다. 메소드가 유효하지 않은 상태에서 호출되면 메소드는 java.lang.IllegalStateException을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="a1310e13e33e71344af51ef4d534e48124a4b7ea" translate="yes" xml:space="preserve">
          <source>The following table gives a guide to the mapping from old types to their replacements. In some cases, there is no direct equivalent.</source>
          <target state="translated">다음 표는 이전 유형에서 대체 유형으로의 매핑에 대한 가이드를 제공합니다. 어떤 경우에는 직접적인 동등 물이 없습니다.</target>
        </trans-unit>
        <trans-unit id="03f8e9c0a8d9f72f0813be38c030c257d4885703" translate="yes" xml:space="preserve">
          <source>The following table gives some examples of the relations between the attribute value in the original document (parsed attribute), the value as exposed in the DOM, and the serialization of the value:</source>
          <target state="translated">다음 표는 원본 문서의 속성 값 (파싱 된 속성), DOM에 노출 된 값 및 값의 직렬화 간의 관계에 대한 몇 가지 예를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8f6c72bcfb202d2d7dedc0558ca2b904fe019842" translate="yes" xml:space="preserve">
          <source>The following table illustrates the features that the &lt;code&gt;BaseRowSet&lt;/code&gt; abstract class provides.</source>
          <target state="translated">다음 표는 &lt;code&gt;BaseRowSet&lt;/code&gt; 추상 클래스가 제공 하는 기능을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="7151bc690e351dd9a1f336d910b7933181defb79" translate="yes" xml:space="preserve">
          <source>The following table lists all the possible &lt;code&gt;AWTPermission&lt;/code&gt; target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">다음 표는 가능한 모든 &lt;code&gt;AWTPermission&lt;/code&gt; 대상 이름을 나열하고 각각에 대해 권한이 허용하는 항목에 대한 설명과 코드에 권한을 부여 할 때의 위험에 대한 설명을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="edc4758a2f7a1b8c0bd50af3aaf086d8b3a4a2e0" translate="yes" xml:space="preserve">
          <source>The following table lists all the possible &lt;code&gt;SQLPermission&lt;/code&gt; target names. The table gives a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">다음 표는 가능한 모든 &lt;code&gt;SQLPermission&lt;/code&gt; 대상 이름을 나열합니다 . 이 표는 권한이 허용하는 사항에 대한 설명과 코드에 권한을 부여 할 때의 위험에 대한 설명을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ef5787f391778d570faa8f529dd2d4b7ec4d7af7" translate="yes" xml:space="preserve">
          <source>The following table lists all the possible NetPermission target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">다음 표에는 가능한 모든 NetPermission 대상 이름이 나열되어 있으며 각각에 대해 권한이 허용하는 내용과 코드에 권한을 부여하는 위험에 대한 설명이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="17260818ccc38c24f91ff1a15d0d3826faa41c0e" translate="yes" xml:space="preserve">
          <source>The following table lists all the possible RuntimePermission target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">다음 표는 가능한 모든 RuntimePermission 대상 이름을 나열하고 각각에 대해 권한이 허용하는 대상에 대한 설명과 코드에 권한을 부여하는 위험에 대한 설명을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7ff5627793347ef7ce9be716f4b73a272dd3f460" translate="yes" xml:space="preserve">
          <source>The following table lists all the possible SSLPermission target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">다음 표는 가능한 모든 SSLPermission 대상 이름을 나열하고 각각에 대해 권한이 무엇을 허용하는지에 대한 설명과 코드에 권한을 부여하는 위험에 대한 설명을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3f4e15c4be2288a1f5a4c41bc7168d70d61fef07" translate="yes" xml:space="preserve">
          <source>The following table lists all the possible SecurityPermission target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">다음 표는 가능한 모든 SecurityPermission 대상 이름을 나열하고 각각에 대해 권한이 허용하는 내용과 코드에 권한을 부여하는 위험에 대한 설명을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9c80eaace1109e654052b6da7dfbb1e233a7e068" translate="yes" xml:space="preserve">
          <source>The following table lists all the possible SerializablePermission target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">다음 표에는 가능한 모든 SerializablePermission 대상 이름이 나열되어 있으며 각각에 대해 권한이 허용하는 대상에 대한 설명과 코드에 권한을 부여 할 때의 위험에 대한 설명이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="f54160ed60b7126e0f30578518989c027ea5ce1b" translate="yes" xml:space="preserve">
          <source>The following table lists some common properties that should be used in implementations:</source>
          <target state="translated">다음 표는 구현에 사용해야하는 몇 가지 일반적인 속성을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="660a03ca8d2ac49279e69071cdeceb003e271b59" translate="yes" xml:space="preserve">
          <source>The following table lists some common properties which service providers should use, if applicable:</source>
          <target state="translated">다음 표에는 해당되는 경우 서비스 제공 업체가 사용해야하는 몇 가지 공통 속성이 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="179bd60df88f32c14ede99ee9b73f1703dc32793" translate="yes" xml:space="preserve">
          <source>The following table lists the possible &lt;code&gt;AudioPermission&lt;/code&gt; target names. For each name, the table provides a description of exactly what that permission allows, as well as a discussion of the risks of granting code the permission.</source>
          <target state="translated">다음 표는 가능한 &lt;code&gt;AudioPermission&lt;/code&gt; 대상 이름을 나열합니다 . 각 이름에 대해 표는 해당 권한이 허용하는 내용에 대한 설명과 코드 권한 부여에 대한 위험에 대한 설명을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="15aefb289888c8cfd85bc93026363772d88eaf66" translate="yes" xml:space="preserve">
          <source>The following table lists the standard &lt;code&gt;RuntimePermission&lt;/code&gt; target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">다음 표는 표준 &lt;code&gt;RuntimePermission&lt;/code&gt; 대상 이름을 나열하고 각각에 대해 권한이 허용하는 항목에 대한 설명과 코드에 권한을 부여 할 때의 위험에 대한 설명을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2b3fd6bd4cbc5933b1b8c133bd8c749890f2bdf2" translate="yes" xml:space="preserve">
          <source>The following table lists the standard &lt;code&gt;SecurityPermission&lt;/code&gt; target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">다음 표에는 표준 &lt;code&gt;SecurityPermission&lt;/code&gt; 대상 이름이 나열되어 있으며 각각에 대해 권한이 허용하는 항목에 대한 설명과 코드에 권한을 부여 할 때의 위험에 대한 설명이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="038977495624e64859de9d0346555f965fab9bf9" translate="yes" xml:space="preserve">
          <source>The following table lists the standard &lt;code&gt;SerializablePermission&lt;/code&gt; target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">다음 표는 표준 &lt;code&gt;SerializablePermission&lt;/code&gt; 대상 이름을 나열하고 각각에 대해 권한이 허용하는 항목에 대한 설명과 코드에 권한을 부여 할 때의 위험에 대한 설명을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5f6419110b0992b709e7b426cfe6e047d341e1eb" translate="yes" xml:space="preserve">
          <source>The following table lists the standard NetPermission target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">다음 표에는 표준 NetPermission 대상 이름이 나열되어 있으며 각각에 대해 권한이 허용하는 항목에 대한 설명과 코드에 권한을 부여 할 때의 위험에 대한 설명이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="c596c0991d22917115d21c4df40bbc0100da38f5" translate="yes" xml:space="preserve">
          <source>The following table provides a summary description of what the permission allows, and discusses the risks of granting code the permission.</source>
          <target state="translated">다음 표는 권한이 허용하는 것에 대한 요약 설명을 제공하고 코드에 권한을 부여하는 위험에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="0123d6346bef0a0a078072ae237647da76bc771d" translate="yes" xml:space="preserve">
          <source>The following table provides a summary of what the permission allows, and the risks of granting code the permission.</source>
          <target state="translated">다음 표는 권한이 허용하는 항목과 코드에 권한을 부여 할 때의 위험에 대한 요약을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9999335da83646da96e144319d66729289535a5b" translate="yes" xml:space="preserve">
          <source>The following table shows the example document and the results of various methods described above.</source>
          <target state="translated">다음 표는 예제 문서와 위에서 설명한 다양한 방법의 결과를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3fb03bbeb28d7133cf7e0d5afb2838bb29bb561e" translate="yes" xml:space="preserve">
          <source>The following table shows the options names to use with &lt;a href=&quot;#setRecordingOptions(long,java.util.Map)&quot;&gt;&lt;code&gt;setRecordingOptions(long, Map)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getRecordingOptions(long)&quot;&gt;&lt;code&gt;getRecordingOptions(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 표는 &lt;a href=&quot;#setRecordingOptions(long,java.util.Map)&quot;&gt; &lt;code&gt;setRecordingOptions(long, Map)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getRecordingOptions(long)&quot;&gt; &lt;code&gt;getRecordingOptions(long)&lt;/code&gt; &lt;/a&gt; 와 함께 사용할 옵션 이름을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="ff6f5314e2e2f057c3085713c18f500a69f59408" translate="yes" xml:space="preserve">
          <source>The following table shows the required attributes that the specified &lt;code&gt;CompositeData&lt;/code&gt; must contain.</source>
          <target state="translated">다음 표는 지정된 &lt;code&gt;CompositeData&lt;/code&gt; 에 포함되어야 하는 필수 속성을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="a300318a4bbec53addd65106cc96eb86122b2ebf" translate="yes" xml:space="preserve">
          <source>The following table shows what components get built by this view.</source>
          <target state="translated">다음 표는이보기에서 빌드되는 구성 요소를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="f2fb49e04ae635cd7cfef1d54fffded805a24728" translate="yes" xml:space="preserve">
          <source>The following table shows what parameter values an implementation might use for a representative set of reverberation settings.</source>
          <target state="translated">다음 표는 구현에서 대표적인 잔향 설정 세트에 사용할 수있는 매개 변수 값을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ba7efe8c61b0da53598a46929132d482972b0d1f" translate="yes" xml:space="preserve">
          <source>The following table summarizes the supported conversions. Conversions denoted by an upper-case character (i.e. &lt;code&gt;'B'&lt;/code&gt;, &lt;code&gt;'H'&lt;/code&gt;, &lt;code&gt;'S'&lt;/code&gt;, &lt;code&gt;'C'&lt;/code&gt;, &lt;code&gt;'X'&lt;/code&gt;, &lt;code&gt;'E'&lt;/code&gt;, &lt;code&gt;'G'&lt;/code&gt;, &lt;code&gt;'A'&lt;/code&gt;, and &lt;code&gt;'T'&lt;/code&gt;) are the same as those for the corresponding lower-case conversion characters except that the result is converted to upper case according to the rules of the prevailing &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt;. If there is no explicit locale specified, either at the construction of the instance or as a parameter to its method invocation, then the &lt;a href=&quot;locale.category#FORMAT&quot;&gt;&lt;code&gt;default locale&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">다음 표에는 지원되는 변환이 요약되어 있습니다. 대문자로 표시된 변환 (예 : &lt;code&gt;'B'&lt;/code&gt; , &lt;code&gt;'H'&lt;/code&gt; , &lt;code&gt;'S'&lt;/code&gt; , &lt;code&gt;'C'&lt;/code&gt; , &lt;code&gt;'X'&lt;/code&gt; , &lt;code&gt;'E'&lt;/code&gt; , &lt;code&gt;'G'&lt;/code&gt; , &lt;code&gt;'A'&lt;/code&gt; 및 &lt;code&gt;'T'&lt;/code&gt; )는 동일합니다. 결과가 우세한 &lt;a href=&quot;locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt; 규칙에 따라 대문자로 변환된다는 점을 제외하고는 해당 소문자 변환 문자의 경우와 같습니다 . 인스턴스 생성시 또는 메서드 호출에 대한 매개 변수로 명시 적 로캘이 지정되지 않은 경우 &lt;a href=&quot;locale.category#FORMAT&quot;&gt; &lt;code&gt;default locale&lt;/code&gt; &lt;/a&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="36442fed0b3c21cba2fc0264c571657e0341e0c1" translate="yes" xml:space="preserve">
          <source>The following table summarizes the supported conversions. Conversions denoted by an upper-case character (i.e. &lt;code&gt;'B'&lt;/code&gt;, &lt;code&gt;'H'&lt;/code&gt;, &lt;code&gt;'S'&lt;/code&gt;, &lt;code&gt;'C'&lt;/code&gt;, &lt;code&gt;'X'&lt;/code&gt;, &lt;code&gt;'E'&lt;/code&gt;, &lt;code&gt;'G'&lt;/code&gt;, &lt;code&gt;'A'&lt;/code&gt;, and &lt;code&gt;'T'&lt;/code&gt;) are the same as those for the corresponding lower-case conversion characters except that the result is converted to upper case according to the rules of the prevailing &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt;. The result is equivalent to the following invocation of &lt;a href=&quot;../lang/string#toUpperCase--&quot;&gt;&lt;code&gt;String.toUpperCase()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음 표는 지원되는 변환을 요약 한 것입니다. 대문자로 표시된 변환 (예 : &lt;code&gt;'B'&lt;/code&gt; , &lt;code&gt;'H'&lt;/code&gt; , &lt;code&gt;'S'&lt;/code&gt; , &lt;code&gt;'C'&lt;/code&gt; , &lt;code&gt;'X'&lt;/code&gt; , &lt;code&gt;'E'&lt;/code&gt; , &lt;code&gt;'G'&lt;/code&gt; , &lt;code&gt;'A'&lt;/code&gt; 및 &lt;code&gt;'T'&lt;/code&gt; )은 동일합니다 결과가 일반적인 &lt;a href=&quot;locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt; 규칙에 따라 대문자로 변환된다는 점을 제외하고 해당하는 소문자 변환 문자의 경우와 같습니다 . 결과는 다음 &lt;a href=&quot;../lang/string#toUpperCase--&quot;&gt; &lt;code&gt;String.toUpperCase()&lt;/code&gt; &lt;/a&gt; 호출과 같습니다.</target>
        </trans-unit>
        <trans-unit id="65e243be51f564c984aa8e7b3c0b24bf9c633580" translate="yes" xml:space="preserve">
          <source>The following table summarizes the supported flags.</source>
          <target state="translated">다음 표는 지원되는 플래그를 요약합니다.</target>
        </trans-unit>
        <trans-unit id="ccb7111863ddef3a44afb63ff5af119b506708e5" translate="yes" xml:space="preserve">
          <source>The following table summarizes the type mapping rules.</source>
          <target state="translated">다음 표는 유형 매핑 규칙을 요약 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="0d25ca64aad3e8abeb211fb627bd0b1b622bac8e" translate="yes" xml:space="preserve">
          <source>The following tables illustrate which subinterfaces of Type are used to mirror types in the target VM --</source>
          <target state="translated">다음 표는 대상 VM의 유형을 미러링하는 데 사용되는 Type의 하위 인터페이스를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="5a232febccd4b2f1e4420f797f08dc0ebda4431b" translate="yes" xml:space="preserve">
          <source>The following tables illustrate which subinterfaces of Value are used to mirror values in the target VM --</source>
          <target state="translated">다음 표는 대상 VM의 값을 미러링하는 데 사용되는 Value의 하위 인터페이스를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6eb3829191aadf52b3efa4b3303459432ed38cd5" translate="yes" xml:space="preserve">
          <source>The following target name has been deprecated in favor of &lt;code&gt;createLoginContext.{name}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;createLoginContext.{name}&lt;/code&gt; 을 위해 다음 대상 이름이 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ff3a76ac8c797d1b540cfe5e374bfb9ac59b4699" translate="yes" xml:space="preserve">
          <source>The following two rules provide predictable rendering behavior whether aliasing or antialiasing is being used.</source>
          <target state="translated">다음 두 가지 규칙은 앨리어싱 또는 앤티 앨리어싱 사용 여부에 관계없이 예측 가능한 렌더링 동작을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c734167c81ee7d5e27dd0815c6c9a86a53980591" translate="yes" xml:space="preserve">
          <source>The following types are supported:</source>
          <target state="translated">다음 유형이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c1da9cc4ffc1de3101c943837c22bc1fd9afac2e" translate="yes" xml:space="preserve">
          <source>The following update policies are allowed:</source>
          <target state="translated">다음 업데이트 정책이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="2c3b7dc38ed8f8df0932176f3dbdae53509c7c3b" translate="yes" xml:space="preserve">
          <source>The following values are valid for &lt;code&gt;fill&lt;/code&gt;:</source>
          <target state="translated">다음 값은 &lt;code&gt;fill&lt;/code&gt; 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="afdac2a010fa57a2dfe61a41c9681bcbd6e19c74" translate="yes" xml:space="preserve">
          <source>The following visualization shows overlapping events belonging to a single thread. By assigning the events to different categories they can be visually separated and stacked vertically.</source>
          <target state="translated">다음 시각화는 단일 스레드에 속하는 겹치는 이벤트를 보여줍니다. 이벤트를 다른 범주에 할당하여 시각적으로 분리하고 수직으로 쌓을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="767c290d473216ed800a2d2c5b604bde8a49d85d" translate="yes" xml:space="preserve">
          <source>The following will accumulate strings into a List:</source>
          <target state="translated">다음은 목록에 문자열을 누적합니다.</target>
        </trans-unit>
        <trans-unit id="05b2a57dc3dff480b15b59294cea7041689febef" translate="yes" xml:space="preserve">
          <source>The following will accumulate strings into an ArrayList:</source>
          <target state="translated">다음은 문자열을 ArrayList에 누적합니다.</target>
        </trans-unit>
        <trans-unit id="ff3f1c7285fc03704a549b7ebe12c02f8a4efaf9" translate="yes" xml:space="preserve">
          <source>The following will classify &lt;code&gt;Person&lt;/code&gt; objects by city:</source>
          <target state="translated">다음은 도시별로 &lt;code&gt;Person&lt;/code&gt; 객체를 분류 합니다.</target>
        </trans-unit>
        <trans-unit id="659f4685dccfaaf333b539f6e067f1ae741d4c90" translate="yes" xml:space="preserve">
          <source>The following will classify &lt;code&gt;Person&lt;/code&gt; objects by state and city, cascading two &lt;code&gt;Collector&lt;/code&gt;s together:</source>
          <target state="translated">다음은 두 개의 &lt;code&gt;Collector&lt;/code&gt; 하나로 묶어 &lt;code&gt;Person&lt;/code&gt; 객체를 주 및 도시별로 분류 합니다.</target>
        </trans-unit>
        <trans-unit id="6241dc4fdeacf1d1841f3cd3b25a57ea3305649e" translate="yes" xml:space="preserve">
          <source>The following will take a stream of strings and concatenates them into a single string:</source>
          <target state="translated">다음은 문자열 스트림을 가져와 단일 문자열로 연결합니다.</target>
        </trans-unit>
        <trans-unit id="cb96cbae2ec8c9d5aa930342501810327a163404" translate="yes" xml:space="preserve">
          <source>The font conflicts with a non-created &lt;code&gt;Font&lt;/code&gt; already in this &lt;code&gt;GraphicsEnvironment&lt;/code&gt;. For example if the name is that of a system font, or a logical font as described in the documentation of the &lt;a href=&quot;font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt; class. It is implementation dependent whether a font may also conflict if it has the same family name as a system font.</source>
          <target state="translated">비 생성과 글꼴 충돌 &lt;code&gt;Font&lt;/code&gt; 이미에서 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; . 예를 들어 이름이 시스템 글꼴의 이름이거나 &lt;a href=&quot;font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt; 클래스 의 설명서에 설명 된 논리 글꼴 인 경우 입니다. 글꼴이 시스템 글꼴과 동일한 계열 이름을 갖는 경우 글꼴이 충돌 할 수도 있는지 여부는 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="cbf8a7d1f416da0dab5030de4c91ce5cd0084bbd" translate="yes" xml:space="preserve">
          <source>The font for rendering the title.</source>
          <target state="translated">제목을 렌더링하기위한 글꼴입니다.</target>
        </trans-unit>
        <trans-unit id="c26d39ae1f8070236b4aac3bbf67a4c109e59cc4" translate="yes" xml:space="preserve">
          <source>The font is not a</source>
          <target state="translated">글꼴이 아닙니다</target>
        </trans-unit>
        <trans-unit id="da8c97a5025dea48a0af564004e56ecc1ee5d375" translate="yes" xml:space="preserve">
          <source>The font name can be a font face name or a font family name. It is used together with the style to find an appropriate font face. When a font family name is specified, the style argument is used to select the most appropriate face from the family. When a font face name is specified, the face's style and the style argument are merged to locate the best matching font from the same family. For example if face name &quot;Arial Bold&quot; is specified with style &lt;code&gt;Font.ITALIC&lt;/code&gt;, the font system looks for a face in the &quot;Arial&quot; family that is bold and italic, and may associate the font instance with the physical font face &quot;Arial Bold Italic&quot;. The style argument is merged with the specified face's style, not added or subtracted. This means, specifying a bold face and a bold style does not double-embolden the font, and specifying a bold face and a plain style does not lighten the font.</source>
          <target state="translated">글꼴 이름은 글꼴 이름 또는 글꼴 패밀리 이름이 될 수 있습니다. 적절한 글꼴을 찾기 위해 스타일과 함께 사용됩니다. 글꼴 패밀리 이름을 지정하면 스타일 인수를 사용하여 패밀리에서 가장 적합한면을 선택합니다. 글꼴 이름이 지정되면 동일한 패밀리에서 가장 일치하는 글꼴을 찾기 위해 얼굴의 스타일과 스타일 인수가 병합됩니다. 예를 들어, &quot;Arial Bold&quot;라는 얼굴 이름이 &lt;code&gt;Font.ITALIC&lt;/code&gt; 스타일 로 지정된 경우, 글꼴 시스템은 &quot;Arial&quot;계열에서 굵은 기울임 꼴 인 얼굴을 찾고 글꼴 인스턴스를 물리적 글꼴 &quot;Arial Bold Italic&quot;과 연결할 수 있습니다. 스타일 인수는 더하거나 빼지 않고 지정된 얼굴의 스타일과 병합됩니다. 즉, 굵은 글꼴과 굵은 스타일을 지정해도 글꼴이 두 번 강조되지 않고 굵은 글꼴과 일반 스타일을 지정해도 글꼴이 밝아지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="57a9fb3a7b0e93bd09e1f89825278e77ea79f8f0" translate="yes" xml:space="preserve">
          <source>The font size decrease to next value action identifier</source>
          <target state="translated">글꼴 크기가 다음 값 작업 식별자로 감소합니다.</target>
        </trans-unit>
        <trans-unit id="4e63b256f18c29f2463d23edd430f8ad24e1a7c8" translate="yes" xml:space="preserve">
          <source>The font size increase to next value action identifier</source>
          <target state="translated">다음 값 동작 식별자로 글꼴 크기 증가</target>
        </trans-unit>
        <trans-unit id="6f2dc215d93752d9fe3fbbfa542e99ec51035bf4" translate="yes" xml:space="preserve">
          <source>The foreground color of selected cells.</source>
          <target state="translated">선택한 셀의 전경색입니다.</target>
        </trans-unit>
        <trans-unit id="f490a248b8701376898bff36a2d349e6094b6458" translate="yes" xml:space="preserve">
          <source>The foreground painter associated for the given state, or null if none could be found.</source>
          <target state="translated">주어진 상태에 연관된 전경 페인터. 찾을 수없는 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="bbfa942ce1023e5baebf9a307baa7bd02eece99d" translate="yes" xml:space="preserve">
          <source>The form of the domain name is specified by RFC 2965. A domain name begins with a dot (&lt;code&gt;.foo.com&lt;/code&gt;) and means that the cookie is visible to servers in a specified Domain Name System (DNS) zone (for example, &lt;code&gt;www.foo.com&lt;/code&gt;, but not &lt;code&gt;a.b.foo.com&lt;/code&gt;). By default, cookies are only returned to the server that sent them.</source>
          <target state="translated">도메인 이름의 형식은 RFC 2965에 의해 지정됩니다. 도메인 이름은 점 ( &lt;code&gt;.foo.com&lt;/code&gt; )으로 시작 하며 쿠키는 지정된 DNS (Domain Name System) 영역 (예 : &lt;code&gt;www.foo.com&lt;/code&gt; )의 서버에서 볼 수 있음을 의미합니다 . foo.com 이지만 &lt;code&gt;a.b.foo.com&lt;/code&gt; ). 기본적으로 쿠키는 쿠키를 보낸 서버로만 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="186d34b99f6c159fe7b20960d58eebbd64ab2b53" translate="yes" xml:space="preserve">
          <source>The form-feed character (&lt;code&gt;'\u000C'&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;'\u000C'&lt;/code&gt; 공급 문자 ( '\ u000C' )</target>
        </trans-unit>
        <trans-unit id="914e9cea1783412ce51085616ae7c2f4e6dbabf1" translate="yes" xml:space="preserve">
          <source>The formal grammar for connection ids that follow this convention is as follows (using the grammar notation from section 2.4 of &lt;em&gt;The Java Language Specification&lt;/em&gt;):</source>
          <target state="translated">이 규칙을 따르는 연결 ID의 공식 문법은 다음과 같습니다 ( &lt;em&gt;Java 언어 사양&lt;/em&gt; 섹션 2.4의 문법 표기법 사용 ).</target>
        </trans-unit>
        <trans-unit id="ac10df27c6523117883e512c48a3dc443ff47107" translate="yes" xml:space="preserve">
          <source>The formal grammar for connection ids that follow this convention is as follows (using the grammar notation from section 2.4 of &lt;em&gt;The Java&amp;trade; Language Specification&lt;/em&gt;):</source>
          <target state="translated">이 규칙을 따르는 연결 ID의 공식 문법은 다음과 같습니다 ( &lt;em&gt;The Java &amp;trade; Language Specification의&lt;/em&gt; 2.4 섹션의 문법 표기법 사용 ).</target>
        </trans-unit>
        <trans-unit id="2cf1258d334e355d142bef03535337a03ed0c616" translate="yes" xml:space="preserve">
          <source>The format and interpretation of &lt;code&gt;filter&lt;/code&gt; follows RFC 2254 with the following interpretations for &lt;code&gt;attr&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; mentioned in the RFC.</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 의 형식 및 해석은 RFC에 언급 된 &lt;code&gt;attr&lt;/code&gt; 및 &lt;code&gt;value&lt;/code&gt; 대한 다음 해석과 함께 RFC 2254를 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="5b744b244f5335a7221e3aa66efc0d53650d86fb" translate="yes" xml:space="preserve">
          <source>The format consists of the &lt;code&gt;LocalDateTime&lt;/code&gt; followed by the &lt;code&gt;ZoneOffset&lt;/code&gt;. If the &lt;code&gt;ZoneId&lt;/code&gt; is not the same as the offset, then the ID is output. The output is compatible with ISO-8601 if the offset and ID are the same.</source>
          <target state="translated">형식은 &lt;code&gt;LocalDateTime&lt;/code&gt; 과 &lt;code&gt;ZoneOffset&lt;/code&gt; 으로 구성됩니다 . 경우] &lt;code&gt;ZoneId&lt;/code&gt; 이 (가) 오프셋과 동일하지 후 ID를 출력한다. 오프셋과 ID가 동일한 경우 출력이 ISO-8601과 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="e348646ae1fcbac451ad03744c692f77282975a4" translate="yes" xml:space="preserve">
          <source>The format consists of:</source>
          <target state="translated">형식은 다음으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="df1f5d73ce8daa80b355a835165a962246b8c645" translate="yes" xml:space="preserve">
          <source>The format in which the user's information must be stored in the directory service is specified in RFC 2307. Specifically, this &lt;code&gt;LoginModule&lt;/code&gt; will search for the user's entry in the directory service using the user's</source>
          <target state="translated">사용자 정보가 디렉토리 서비스에 저장되어야하는 형식은 RFC 2307에 지정되어 있습니다. 특히이 &lt;code&gt;LoginModule&lt;/code&gt; 은 사용자의 정보를 사용하여 디렉토리 서비스에서 사용자 항목을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="9c6440eac25ca25ad1f5532fd5250acc6573ef48" translate="yes" xml:space="preserve">
          <source>The format is locale independent and digits must be taken from the Basic Latin block of the Unicode standard. No daylight saving time transition schedule can be specified with a custom time zone ID. If the specified string doesn't match the syntax, &lt;code&gt;&quot;GMT&quot;&lt;/code&gt; is used.</source>
          <target state="translated">형식은 로케일 독립적이며 숫자는 유니 코드 표준의 기본 라틴 블록에서 가져와야합니다. 사용자 지정 표준 시간대 ID로 일광 절약 시간 전환 일정을 지정할 수 없습니다. 지정된 문자열이 구문과 일치하지 않으면 &lt;code&gt;&quot;GMT&quot;&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d4a86dbcac0624f8f00a3128c0cec66b617732f1" translate="yes" xml:space="preserve">
          <source>The format is not defined, but an implementation must ensure that the string returned by this method can be used to build an equivalent descriptor when instantiated using the constructor &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;DescriptorSupport(String inStr)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">형식은 정의되어 있지 않지만 구현시 생성자 &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;DescriptorSupport(String inStr)&lt;/code&gt; &lt;/a&gt; 사용하여 인스턴스화 할 때이 메서드에서 반환 된 문자열을 사용하여 동등한 설명자를 빌드 할 수 있는지 확인해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2abc0d69d332bd14c8108e7ef901fd679e5a23cb" translate="yes" xml:space="preserve">
          <source>The format is not defined, but an implementation must ensure that the string returned by this method can be used to build an equivalent descriptor when instantiated using the constructor &lt;a href=&quot;descriptorsupport#DescriptorSupport-java.lang.String-&quot;&gt;&lt;code&gt;DescriptorSupport(String inStr)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">형식은 정의되어 있지 않지만 구현에서는 &lt;a href=&quot;descriptorsupport#DescriptorSupport-java.lang.String-&quot;&gt; &lt;code&gt;DescriptorSupport(String inStr)&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 인스턴스화 할 때이 메소드가 리턴 한 문자열을 사용하여 동등한 설명자를 빌드 할 수 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="c239b759e0bd91e3deaa124baf341e96eadd502f" translate="yes" xml:space="preserve">
          <source>The format of a provider-configuration file violates the &lt;a href=&quot;serviceloader#format&quot;&gt;specification&lt;/a&gt;;</source>
          <target state="translated">공급자 구성 파일의 형식이 &lt;a href=&quot;serviceloader#format&quot;&gt;사양을&lt;/a&gt; 위반합니다 .</target>
        </trans-unit>
        <trans-unit id="10a6300c9d0f42d3b1164cab5831a27b66704f50" translate="yes" xml:space="preserve">
          <source>The format of the IPv6reference should follow that specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;RFC 2732: Format for Literal IPv6 Addresses in URLs&lt;/i&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;IPv6 참조 형식&lt;/i&gt;&lt;/a&gt; 은 &lt;i&gt;RFC 2732 : URL의 리터럴 IPv6 주소 형식에&lt;/i&gt; 지정된 형식을 따라야 &lt;i&gt;합니다&lt;/i&gt; .</target>
        </trans-unit>
        <trans-unit id="f35f3b15a9b15efbc2092cdaa43d0ecfc847a333" translate="yes" xml:space="preserve">
          <source>The format of the IPv6reference should follow that specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;RFC 2732: Format for Literal IPv6 Addresses in URLs&lt;/i&gt;&lt;/a&gt;:</source>
          <target state="translated">IPv6reference의 형식은 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;RFC 2732 : URL의 리터럴 IPv6 주소 형식에&lt;/i&gt;&lt;/a&gt; 지정된 형식을 따라야 &lt;i&gt;합니다&lt;/i&gt; .</target>
        </trans-unit>
        <trans-unit id="6b8138c2c9da0ec8d6e19cf5312cb8b37838a661" translate="yes" xml:space="preserve">
          <source>The format of the XML string is not defined, but an implementation must ensure that the string returned by &lt;a href=&quot;#toXMLString()&quot;&gt;&lt;code&gt;toXMLString()&lt;/code&gt;&lt;/a&gt; on an existing descriptor can be used to instantiate an equivalent descriptor using this constructor.</source>
          <target state="translated">XML 문자열의 형식은 정의되어 있지 않지만 구현시 기존 설명자에서 &lt;a href=&quot;#toXMLString()&quot;&gt; &lt;code&gt;toXMLString()&lt;/code&gt; &lt;/a&gt; 에 의해 반환 된 문자열을 사용하여이 생성자를 사용하여 동등한 설명자를 인스턴스화 할 수 있는지 확인해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e1864d871bbfba4b54130ce6fa9ccd149fe6fcc6" translate="yes" xml:space="preserve">
          <source>The format of the XML string is not defined, but an implementation must ensure that the string returned by &lt;a href=&quot;descriptorsupport#toXMLString--&quot;&gt;&lt;code&gt;toXMLString()&lt;/code&gt;&lt;/a&gt; on an existing descriptor can be used to instantiate an equivalent descriptor using this constructor.</source>
          <target state="translated">XML 문자열의 형식은 정의되어 있지 않지만 구현시 기존 설명자에서 &lt;a href=&quot;descriptorsupport#toXMLString--&quot;&gt; &lt;code&gt;toXMLString()&lt;/code&gt; &lt;/a&gt; 리턴 한 문자열을 사용하여이 생성자를 사용하여 동등한 설명자를 인스턴스화 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="d99535add274a0feacad81889acf4221b07d0c89" translate="yes" xml:space="preserve">
          <source>The format of the audio data contained in the stream.</source>
          <target state="translated">스트림에 포함 된 오디오 데이터의 형식입니다.</target>
        </trans-unit>
        <trans-unit id="ee979ff775433a4c037cb40853991fa64734e45a" translate="yes" xml:space="preserve">
          <source>The format of the input token that this method reads is defined in the specification for the underlying mechanism that will be used. This method will attempt to read one of these tokens per invocation. If the mechanism token contains a definitive start and end this method may block on the &lt;code&gt;InputStream&lt;/code&gt; if only part of the token is available. If the start and end of the token are not definitive then the method will attempt to treat all available bytes as part of the token.</source>
          <target state="translated">이 메소드가 읽는 입력 토큰의 형식은 사용될 기본 메커니즘의 사양에 정의되어 있습니다. 이 메소드는 호출 당 이러한 토큰 중 하나를 읽으려고 시도합니다. 메커니즘 토큰에 명확한 시작 및 종료가 포함 된 경우 토큰의 일부만 사용할 수있는 경우이 메서드가 &lt;code&gt;InputStream&lt;/code&gt; 에서 차단 될 수 있습니다. 토큰의 시작과 끝이 명확하지 않은 경우 메서드는 사용 가능한 모든 바이트를 토큰의 일부로 처리하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="05fc3b303a60aef7cfaee1c74286f09fc7d392d0" translate="yes" xml:space="preserve">
          <source>The format of the metadata contained in the XML &lt;code&gt;Document&lt;/code&gt; is identified by a string which appears as the root node of the tree of &lt;code&gt;IIOMetadataNode&lt;/code&gt; objects. This string contains a version number, e.g. &quot;javax_imageio_jpeg_image_1.0&quot;. Readers and writers may support multiple versions of the same basic format and the Image I/O API has methods that allow specifying which version to use by passing the string to the method/constructor used to obtain an &lt;code&gt;IIOMetadata&lt;/code&gt; object. In some cases, a more recent version may not be strictly compatible with a program written expecting an older version (for an example, see the Native Metadata Format section of the JPEG Metadata Usage Notes below).</source>
          <target state="translated">XML &lt;code&gt;Document&lt;/code&gt; 포함 된 메타 데이터의 형식은 &lt;code&gt;IIOMetadataNode&lt;/code&gt; 객체 트리의 루트 노드로 나타나는 문자열로 식별됩니다 . 이 문자열은 버전 번호 (예 : &quot;javax_imageio_jpeg_image_1.0&quot;)를 포함합니다. 독자와 작가는 동일한 기본 형식의 여러 버전을 지원할 수 있으며 Image I / O API에는 &lt;code&gt;IIOMetadata&lt;/code&gt; 객체 를 얻는 데 사용 된 메서드 / 생성자에 문자열을 전달하여 사용할 버전을 지정할 수있는 메서드가 있습니다 . 경우에 따라 최신 버전이 이전 버전으로 작성된 프로그램과 완전히 호환되지 않을 수 있습니다 (예를 들어, 아래 JPEG 메타 데이터 사용 메모의 기본 메타 데이터 형식 섹션 참조).</target>
        </trans-unit>
        <trans-unit id="cbdbd7a56c0b79b1e7da582d74bf2a348a161879" translate="yes" xml:space="preserve">
          <source>The format of the offset is controlled by a pattern which must be one of the following:</source>
          <target state="translated">오프셋 형식은 다음 중 하나 여야하는 패턴으로 제어됩니다.</target>
        </trans-unit>
        <trans-unit id="26a1428e370ad8643239064b045e2c25874755d3" translate="yes" xml:space="preserve">
          <source>The format of the provider configuration file is one fully-qualified class name per line. Space and tab characters surrounding each class name, as well as blank lines are ignored. The comment character is &lt;code&gt;'#'&lt;/code&gt; (&lt;code&gt;0x23&lt;/code&gt;), and on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8.</source>
          <target state="translated">공급자 구성 파일의 형식은 한 줄에 하나의 정규화 된 클래스 이름입니다. 각 클래스 이름을 둘러싼 공백 및 탭 문자와 빈 줄은 무시됩니다. 주석 문자는 &lt;code&gt;'#'&lt;/code&gt; ( &lt;code&gt;0x23&lt;/code&gt; )이며 각 줄에서 첫 번째 주석 문자 다음의 모든 문자는 무시됩니다. 파일은 UTF-8로 인코딩되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a8deb155671191df84cbd52b08680ae0e03cb5a8" translate="yes" xml:space="preserve">
          <source>The format of the provider-configuration file violates the &lt;a href=&quot;serviceloader#format&quot;&gt;format&lt;/a&gt; specified above;</source>
          <target state="translated">공급자 구성 파일의 &lt;a href=&quot;serviceloader#format&quot;&gt;형식이&lt;/a&gt; 위에 지정된 형식을 위반합니다 .</target>
        </trans-unit>
        <trans-unit id="66255b715513f5e734bbd855aa0ecb644eb59ba8" translate="yes" xml:space="preserve">
          <source>The format of the read data is not specified, but if an implementation supports &lt;a href=&quot;#readExternal(java.io.ObjectInput)&quot;&gt;&lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt;&lt;/a&gt; it must also support &lt;a href=&quot;#writeExternal(java.io.ObjectOutput)&quot;&gt;&lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt;&lt;/a&gt; in such a way that what is written by the latter can be read by the former.</source>
          <target state="translated">읽은 데이터의 형식은 지정되어 있지 않지만 구현이 &lt;a href=&quot;#readExternal(java.io.ObjectInput)&quot;&gt; &lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt; &lt;/a&gt; 을 지원 하는 경우 후자가 쓴 내용을 읽을 수 있도록 &lt;a href=&quot;#writeExternal(java.io.ObjectOutput)&quot;&gt; &lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt; &lt;/a&gt; 도 지원해야합니다. 전자.</target>
        </trans-unit>
        <trans-unit id="ef2c2b152a17451e766c6d0d785dd6c0c42c5238" translate="yes" xml:space="preserve">
          <source>The format of the read data is not specified, but if an implementation supports &lt;a href=&quot;mlet#readExternal-java.io.ObjectInput-&quot;&gt;&lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt;&lt;/a&gt; it must also support &lt;a href=&quot;mlet#writeExternal-java.io.ObjectOutput-&quot;&gt;&lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt;&lt;/a&gt; in such a way that what is written by the latter can be read by the former.</source>
          <target state="translated">읽은 데이터의 형식은 지정되지 않지만 구현에서 &lt;a href=&quot;mlet#readExternal-java.io.ObjectInput-&quot;&gt; &lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt; &lt;/a&gt; 을 지원 하는 경우 후자가 작성한 내용을 읽을 수있는 방식으로 &lt;a href=&quot;mlet#writeExternal-java.io.ObjectOutput-&quot;&gt; &lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt; &lt;/a&gt; 도 지원해야합니다. 전자.</target>
        </trans-unit>
        <trans-unit id="fbf991f65c863ce81f15c443fc068ade469b4433" translate="yes" xml:space="preserve">
          <source>The format of the returned string will be &lt;code&gt;PTnHnMnS&lt;/code&gt;, where n is the relevant hours, minutes or seconds part of the duration. Any fractional seconds are placed after a decimal point i the seconds section. If a section has a zero value, it is omitted. The hours, minutes and seconds will all have the same sign.</source>
          <target state="translated">리턴 된 문자열의 형식은 &lt;code&gt;PTnHnMnS&lt;/code&gt; 입니다 . 여기서 n은 지속 시간의 관련 시간, 분 또는 초 부분입니다. 소수 부분 초는 소수 부분 i 초 섹션 뒤에 위치합니다. 섹션의 값이 0이면 생략됩니다. 시, 분 및 초는 모두 같은 부호를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="53238208233a747f471c96749291f5b88e5e4a9d" translate="yes" xml:space="preserve">
          <source>The format of the returned string will be &lt;code&gt;PTnHnMnS&lt;/code&gt;, where n is the relevant hours, minutes or seconds part of the duration. Any fractional seconds are placed after a decimal point in the seconds section. If a section has a zero value, it is omitted. The hours, minutes and seconds will all have the same sign.</source>
          <target state="translated">반환 된 문자열의 형식은 &lt;code&gt;PTnHnMnS&lt;/code&gt; 입니다 . 여기서 n은 기간의 관련 시간, 분 또는 초 부분입니다. 분수 초는 초 섹션의 소수점 뒤에 위치합니다. 섹션의 값이 0이면 생략됩니다. 시, 분, 초는 모두 같은 부호를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="f504d28c270f13a15deb747709fbbc28c2a06377" translate="yes" xml:space="preserve">
          <source>The format of the string does not correspond to a valid ObjectName.</source>
          <target state="translated">문자열 형식이 유효한 ObjectName에 해당하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a82e57a0f3938590eefb7ff1f02d1b6bdc7782e1" translate="yes" xml:space="preserve">
          <source>The format of the written data is not specified, but if an implementation supports &lt;a href=&quot;#writeExternal(java.io.ObjectOutput)&quot;&gt;&lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt;&lt;/a&gt; it must also support &lt;a href=&quot;#readExternal(java.io.ObjectInput)&quot;&gt;&lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt;&lt;/a&gt; in such a way that what is written by the former can be read by the latter.</source>
          <target state="translated">작성된 데이터의 형식은 지정되어 있지 않지만 구현이 &lt;a href=&quot;#writeExternal(java.io.ObjectOutput)&quot;&gt; &lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt; &lt;/a&gt; 을 지원 하는 경우 전자가 작성한 내용을 읽을 수있는 방식으로 &lt;a href=&quot;#readExternal(java.io.ObjectInput)&quot;&gt; &lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt; &lt;/a&gt; 도 지원해야합니다. 후자의.</target>
        </trans-unit>
        <trans-unit id="67213f01e1e8583efbac8e7258bbba0c3fc20def" translate="yes" xml:space="preserve">
          <source>The format of the written data is not specified, but if an implementation supports &lt;a href=&quot;mlet#writeExternal-java.io.ObjectOutput-&quot;&gt;&lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt;&lt;/a&gt; it must also support &lt;a href=&quot;mlet#readExternal-java.io.ObjectInput-&quot;&gt;&lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt;&lt;/a&gt; in such a way that what is written by the former can be read by the latter.</source>
          <target state="translated">기록 된 데이터의 형식은 지정되지 않지만 구현에서 &lt;a href=&quot;mlet#writeExternal-java.io.ObjectOutput-&quot;&gt; &lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt; &lt;/a&gt; 을 지원 하는 경우 전자가 작성한 내용을 읽을 수있는 방식으로 &lt;a href=&quot;mlet#readExternal-java.io.ObjectInput-&quot;&gt; &lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt; &lt;/a&gt; 도 지원해야합니다. 후자의.</target>
        </trans-unit>
        <trans-unit id="3fed849d22cdbcaabd25d1ad3dce1b48dd41d8c8" translate="yes" xml:space="preserve">
          <source>The format of this string depends on the implementation, but the following examples may be regarded as typical:</source>
          <target state="translated">이 문자열의 형식은 구현에 따라 다르지만 다음 예제는 일반적인 것으로 간주 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6020ce09c1e4d4ec666557878868f95d5d65fb6" translate="yes" xml:space="preserve">
          <source>The format of this string is described in the section &lt;a href=&quot;mxbean#type-names&quot;&gt;Type Names&lt;/a&gt; of the MXBean specification.</source>
          <target state="translated">이 문자열의 형식은 MXBean 스펙의 &lt;a href=&quot;mxbean#type-names&quot;&gt;유형 이름&lt;/a&gt; 섹션에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5d3b3bc4192e2a3475a44b9d2b7b65fd6277144" translate="yes" xml:space="preserve">
          <source>The format should include the entire state of the object.</source>
          <target state="translated">형식은 객체의 전체 상태를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="c7596810905a51fecd6f83bdfab4d5540921936d" translate="yes" xml:space="preserve">
          <source>The format specifier which does not have a width</source>
          <target state="translated">너비가없는 형식 지정자</target>
        </trans-unit>
        <trans-unit id="043084d451c25a99dbe68ad95096051b578a0bcb" translate="yes" xml:space="preserve">
          <source>The format specifiers for general, character, and numeric types have the following syntax:</source>
          <target state="translated">일반, 문자 및 숫자 유형의 형식 지정자는 다음 구문을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="445503196824627d242ab13a02f403b7cf0ba95e" translate="yes" xml:space="preserve">
          <source>The format specifiers for types which are used to represents dates and times have the following syntax:</source>
          <target state="translated">날짜와 시간을 나타내는 데 사용되는 형식의 형식 지정자는 다음 구문을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="1f5372c3a3d6ab4effeaec652a6cca082ace5f1a" translate="yes" xml:space="preserve">
          <source>The format specifiers which do not correspond to arguments have the following syntax:</source>
          <target state="translated">인수에 해당하지 않는 형식 지정자는 다음 구문을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="578480d24c9aa71ffd93d6698d6025b396d96e7b" translate="yes" xml:space="preserve">
          <source>The format used is the same as &lt;a href=&quot;format/datetimeformatter#ISO_INSTANT&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_INSTANT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용되는 형식은 &lt;a href=&quot;format/datetimeformatter#ISO_INSTANT&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_INSTANT&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="d30c57ca5e389c0408c9e4853695750e44db69b9" translate="yes" xml:space="preserve">
          <source>The format used will be the shortest that outputs the full value of the time where the omitted parts are implied to be zero.</source>
          <target state="translated">사용 된 형식은 생략 된 부분이 0으로 암시되는 시간의 전체 값을 출력하는 가장 짧은 형식입니다.</target>
        </trans-unit>
        <trans-unit id="b5668256a561602f226996b461ed4d6a78b7620c" translate="yes" xml:space="preserve">
          <source>The format will be '{min}/{largestMin} - {smallestMax}/{max}', where the largestMin or smallestMax sections may be omitted, together with associated slash, if they are the same as the min or max.</source>
          <target state="translated">형식은 '{min} / {largestMin}-{smallestMax} / {max}'입니다. 여기서 maximumMin 또는 smallestMax 섹션은 최소 또는 최대와 같으면 연관된 슬래시와 함께 생략 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee64ee2387db8b2113be88947867bd3203a8bb2e" translate="yes" xml:space="preserve">
          <source>The formats returned by the &lt;a href=&quot;#getFormats(java.lang.String)&quot;&gt;&lt;code&gt;getFormats&lt;/code&gt;&lt;/a&gt; method and candidate locales returned by the &lt;a href=&quot;#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;getCandidateLocales&lt;/code&gt;&lt;/a&gt; method must be consistent in all &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; invocations for the same base bundle. Otherwise, the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; methods may return unintended bundles. For example, if only &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; is returned by the &lt;code&gt;getFormats&lt;/code&gt; method for the first call to &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; and only &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; for the second call, then the second call will return the class-based one that has been cached during the first call.</source>
          <target state="translated">&lt;a href=&quot;#getFormats(java.lang.String)&quot;&gt; &lt;code&gt;getFormats&lt;/code&gt; &lt;/a&gt; 메소드에서 리턴 한 형식 과 &lt;a href=&quot;#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;getCandidateLocales&lt;/code&gt; &lt;/a&gt; 메소드에서 리턴 한 후보 로케일 은 동일한 기본 번들에 대한 모든 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 호출 에서 일관되어야합니다 . 그렇지 않으면 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 메서드가 의도하지 않은 번들을 반환 할 수 있습니다. 예를 들어, &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 에 대한 첫 번째 호출에 대해 &lt;code&gt;getFormats&lt;/code&gt; 메소드에 의해 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 만 리턴되고 두 번째 호출에 대해 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 만 리턴 된 경우 두 번째 호출은 첫 번째 호출 중에 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="509d4cab08978635bbfa5b631cb5bb8efac09dae" translate="yes" xml:space="preserve">
          <source>The formats returned by the &lt;a href=&quot;resourcebundle.control#getFormats-java.lang.String-&quot;&gt;&lt;code&gt;getFormats&lt;/code&gt;&lt;/a&gt; method and candidate locales returned by the &lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;getCandidateLocales&lt;/code&gt;&lt;/a&gt; method must be consistent in all &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; invocations for the same base bundle. Otherwise, the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; methods may return unintended bundles. For example, if only &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; is returned by the &lt;code&gt;getFormats&lt;/code&gt; method for the first call to &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; and only &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; for the second call, then the second call will return the class-based one that has been cached during the first call.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getFormats-java.lang.String-&quot;&gt; &lt;code&gt;getFormats&lt;/code&gt; &lt;/a&gt; 메소드가 리턴 한 형식 및 &lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;getCandidateLocales&lt;/code&gt; &lt;/a&gt; 메소드가 리턴 한 후보 로케일 은 동일한 기본 번들에 대한 모든 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 호출 에서 일관성이 있어야합니다 . 그렇지 않으면 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 메소드가 의도하지 않은 번들을 리턴 할 수 있습니다. 예를 들어 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 만 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 에 대한 첫 번째 호출 에 대해서는 &lt;code&gt;getFormats&lt;/code&gt; 메소드 가 리턴 하고 두 번째 호출에 대해서는 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 만 리턴하면 두 번째 호출은 클래스 기반 호출을 리턴합니다. 첫 번째 통화 중에 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="fa01f15b0b2302f3a77b309cda420bc04d7418d1" translate="yes" xml:space="preserve">
          <source>The formatted number string</source>
          <target state="translated">서식이 지정된 숫자 문자열</target>
        </trans-unit>
        <trans-unit id="182105ef6901365d5695117e4cfb7d169f95dc6a" translate="yes" xml:space="preserve">
          <source>The formatter will format if data is available for all the fields contained within it. The formatter will parse if the string matches, otherwise no error is returned.</source>
          <target state="translated">포맷터는 데이터가 포함 된 모든 필드에 대해 데이터를 사용할 수있는 경우 포맷합니다. 문자열이 일치하면 포맷터가 구문 분석하고 그렇지 않으면 오류가 리턴되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="21ba2b3731f4ac7077ca7f9e6d199abe8b38bd4c" translate="yes" xml:space="preserve">
          <source>The formatter will use the &lt;a href=&quot;../../util/locale#getDefault(java.util.Locale.Category)&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. This can be changed using &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the returned formatter. Alternatively use the &lt;a href=&quot;#ofPattern(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;ofPattern(String, Locale)&lt;/code&gt;&lt;/a&gt; variant of this method.</source>
          <target state="translated">포맷터는 &lt;a href=&quot;../../util/locale#getDefault(java.util.Locale.Category)&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt; 사용합니다 . 반환 된 포맷터에서 &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt; 을 사용하여 변경할 수 있습니다 . 또는 이 메서드 의 &lt;a href=&quot;#ofPattern(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;ofPattern(String, Locale)&lt;/code&gt; &lt;/a&gt; 변형을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1f3d2dba38dbe5eb07f6491258e9927edabf3d82" translate="yes" xml:space="preserve">
          <source>The formatter will use the &lt;a href=&quot;../../util/locale#getDefault-java.util.Locale.Category-&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. This can be changed using &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the returned formatter Alternatively use the &lt;a href=&quot;datetimeformatter#ofPattern-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;ofPattern(String, Locale)&lt;/code&gt;&lt;/a&gt; variant of this method.</source>
          <target state="translated">포맷터는 &lt;a href=&quot;../../util/locale#getDefault-java.util.Locale.Category-&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt; 사용합니다 . 반환 된 포맷터에서 &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt; 을 사용하여 변경할 수 있습니다 .&lt;a href=&quot;datetimeformatter#ofPattern-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;ofPattern(String, Locale)&lt;/code&gt; &lt;/a&gt;이 메소드 ofPattern (String, Locale) 변형을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="93c19202124a2a46e12cd466b8761ae5ee653773" translate="yes" xml:space="preserve">
          <source>The formatter will use the specified locale. This can be changed using &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the returned formatter.</source>
          <target state="translated">포맷터는 지정된 로케일을 사용합니다. 반환 된 포맷터에서 &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt; 을 사용하여 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="10900480441d4fb200d2493b9b165c75a96be514" translate="yes" xml:space="preserve">
          <source>The formatter will use the specified locale. This can be changed using &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the returned formatter</source>
          <target state="translated">포맷터는 지정된 로케일을 사용합니다. 이것은을 사용하여 변경할 수 있습니다&lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt;반환 된 포매터에서 withLocale (Locale) 을</target>
        </trans-unit>
        <trans-unit id="b8a6884838b5d2380f0211a6d7b078af03a56063" translate="yes" xml:space="preserve">
          <source>The formatting can be customized by specifying the &lt;a href=&quot;../formatter#syntax&quot;&gt;format string&lt;/a&gt; in the &lt;a href=&quot;#formatting&quot;&gt; &lt;code&gt;java.util.logging.SimpleFormatter.format&lt;/code&gt;&lt;/a&gt; property. The given &lt;code&gt;LogRecord&lt;/code&gt; will be formatted as if by calling:</source>
          <target state="translated">&lt;a href=&quot;#formatting&quot;&gt; &lt;code&gt;java.util.logging.SimpleFormatter.format&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;../formatter#syntax&quot;&gt;형식 문자열&lt;/a&gt; 을 지정하여 형식화를 사용자 정의 할 수 있습니다. 특성 . 주어진 &lt;code&gt;LogRecord&lt;/code&gt; 는 다음과 같이 호출하여 형식이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="5785ba11198931aef6232862a86717d88b96a053" translate="yes" xml:space="preserve">
          <source>The formatting can be customized by specifying the format string in the &lt;a href=&quot;#formatting&quot;&gt; &lt;code&gt;java.util.logging.SimpleFormatter.format&lt;/code&gt;&lt;/a&gt; property. The given &lt;code&gt;LogRecord&lt;/code&gt; will be formatted as if by calling:</source>
          <target state="translated">형식화는 &lt;a href=&quot;#formatting&quot;&gt; &lt;code&gt;java.util.logging.SimpleFormatter.format&lt;/code&gt; &lt;/a&gt; 특성 에서 형식 문자열을 지정하여 사용자 정의 할 수 있습니다 . 주어진 &lt;code&gt;LogRecord&lt;/code&gt; 는 다음을 호출하는 것처럼 형식화됩니다.</target>
        </trans-unit>
        <trans-unit id="ad810658b54468ba29faa08fbcb8a912699a741b" translate="yes" xml:space="preserve">
          <source>The formatting engine allows the positive and negative signs of numbers to be controlled using this enum. See &lt;a href=&quot;datetimeformatterbuilder&quot;&gt;&lt;code&gt;DateTimeFormatterBuilder&lt;/code&gt;&lt;/a&gt; for usage.</source>
          <target state="translated">서식 엔진을 사용하면이 열거 형을 사용하여 양수 및 음수 부호를 제어 할 수 있습니다. 사용법 은 &lt;a href=&quot;datetimeformatterbuilder&quot;&gt; &lt;code&gt;DateTimeFormatterBuilder&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f994484334957b5e0ec6abc999ce7977df9d0433" translate="yes" xml:space="preserve">
          <source>The formatting of the magnitude</source>
          <target state="translated">크기의 서식</target>
        </trans-unit>
        <trans-unit id="bac9328bbe8404cc24578cda59316d244c5919ca" translate="yes" xml:space="preserve">
          <source>The former is used whenever a connection needs to be established or re-established with an LDAP server. The latter is used when all other LDAP operations are sent to the LDAP server. The reason why a distinction between these two types of request controls is necessary is because JNDI is a high-level API that does not deal directly with connections. It is the job of service providers to do any necessary connection management. Consequently, a single connection may be shared by multiple context instances, and a service provider is free to use its own algorithms to conserve connection and network usage. Thus, when a method is invoked on the context instance, the service provider might need to do some connection management in addition to performing the corresponding LDAP operations. For connection management, it uses the &lt;em&gt;connection request controls&lt;/em&gt;, while for the normal LDAP operations, it uses the &lt;em&gt;context request controls&lt;/em&gt;.</source>
          <target state="translated">전자는 LDAP 서버와의 연결을 설정하거나 다시 설정해야 할 때마다 사용됩니다. 후자는 다른 모든 LDAP 작업이 LDAP 서버로 전송 될 때 사용됩니다. 이 두 가지 유형의 요청 제어를 구별해야하는 이유는 JNDI가 연결을 직접 처리하지 않는 고급 API이기 때문입니다. 필요한 연결 관리를 수행하는 것은 서비스 제공 업체의 임무입니다. 결과적으로 단일 연결은 여러 컨텍스트 인스턴스에서 공유 될 수 있으며 서비스 공급자는 자체 알고리즘을 사용하여 연결 및 네트워크 사용을 절약 할 수 있습니다. 따라서 컨텍스트 인스턴스에서 메소드가 호출되면 서비스 제공자는 해당 LDAP 조작을 수행하는 것 외에도 일부 연결 관리를 수행해야 할 수도 있습니다. 연결 관리를 위해&lt;em&gt;연결 요청 제어&lt;/em&gt; , 일반 LDAP 조작의 경우 &lt;em&gt;컨텍스트 요청 제어를&lt;/em&gt; 사용 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="394504329301f4cfe8e8f730248f4496ace33bdd" translate="yes" xml:space="preserve">
          <source>The four BoundedRangeModel values are defined as Java Beans properties however Swing ChangeEvents are used to notify clients of changes rather than PropertyChangeEvents. This was done to keep the overhead of monitoring a BoundedRangeModel low. Changes are often reported at MouseDragged rates.</source>
          <target state="translated">네 개의 BoundedRangeModel 값은 Java Beans 속성으로 정의되지만 Swing ChangeEvents는 PropertyChangeEvents가 아닌 클라이언트에게 변경 사항을 알리는 데 사용됩니다. 이것은 BoundedRangeModel 모니터링 오버 헤드를 낮게 유지하기 위해 수행되었습니다. 변경 사항은 종종 MouseDragged 비율로보고됩니다.</target>
        </trans-unit>
        <trans-unit id="85e8fff89a57c7eb926b86779c8d6fafa4505803" translate="yes" xml:space="preserve">
          <source>The fourth technique, &lt;a href=&quot;#exportObject(java.rmi.Remote)&quot;&gt;&lt;code&gt;exportObject(Remote)&lt;/code&gt;&lt;/a&gt;, always uses statically generated stubs and is deprecated.</source>
          <target state="translated">네 번째 기술인 &lt;a href=&quot;#exportObject(java.rmi.Remote)&quot;&gt; &lt;code&gt;exportObject(Remote)&lt;/code&gt; &lt;/a&gt; 는 항상 정적으로 생성 된 스텁을 사용하며 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f21520d7d456f5c00184b6c77d28a66fae2bd2ae" translate="yes" xml:space="preserve">
          <source>The fraction consists of a decimal point followed by zero or more decimal digits. The string must contain at least one digit in either the integer or the fraction. The number formed by the sign, the integer and the fraction is referred to as the</source>
          <target state="translated">분수는 소수점 이하 0 자리 이상의 소수점으로 구성됩니다. 문자열은 정수 또는 분수 중 하나 이상의 숫자를 포함해야합니다. 부호, 정수 및 분수로 형성된 숫자를</target>
        </trans-unit>
        <trans-unit id="6f49809e86cf974fe275860950ae0472de435862" translate="yes" xml:space="preserve">
          <source>The fractional value of the field will be output including the preceding decimal point. The preceding value is not output. For example, the second-of-minute value of 15 would be output as &lt;code&gt;.25&lt;/code&gt;.</source>
          <target state="translated">앞의 소수점을 포함하여 필드의 분수 값이 출력됩니다. 앞의 값은 출력되지 않습니다. 예를 들어, 분의 초 값 15는 &lt;code&gt;.25&lt;/code&gt; 로 출력됩니다 .</target>
        </trans-unit>
        <trans-unit id="d0d3ed6299aa9c75b61db9ef56cc15810b1d204f" translate="yes" xml:space="preserve">
          <source>The fragment component of a URI, if defined, only contains legal URI characters.</source>
          <target state="translated">URI의 조각 구성 요소는 정의 된 경우 유효한 URI 문자 만 포함합니다.</target>
        </trans-unit>
        <trans-unit id="a4dca7bd1432980e330331fbc13a419c4bdfb5a1" translate="yes" xml:space="preserve">
          <source>The frame can &quot;iconified&quot; (shrunk down and displayed as an icon-image).</source>
          <target state="translated">프레임은 &quot;아이콘 화&quot;될 수 있습니다 (축소되어 아이콘 이미지로 표시됨).</target>
        </trans-unit>
        <trans-unit id="4b765e5ef70b77ceddc0138a53384918bbdda588" translate="yes" xml:space="preserve">
          <source>The frame can be closed.</source>
          <target state="translated">프레임을 닫을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a192ebb27bf51fb37c5b51a24ba55cdefbc3f8f" translate="yes" xml:space="preserve">
          <source>The frame can be expanded to the size of the desktop pane.</source>
          <target state="translated">프레임은 데스크탑 창의 크기로 확장 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="125ddc5cb41fd80918b88c71e89e63b542704c22" translate="yes" xml:space="preserve">
          <source>The frame has been closed.</source>
          <target state="translated">프레임이 닫혔습니다.</target>
        </trans-unit>
        <trans-unit id="6ba9312663f24328e7445d8cd559f9c8b41c3232" translate="yes" xml:space="preserve">
          <source>The frame has been expanded to its maximum size.</source>
          <target state="translated">프레임이 최대 크기로 확장되었습니다.</target>
        </trans-unit>
        <trans-unit id="85f287b5b2d06f3a5ef24134ab32b5e0000463ca" translate="yes" xml:space="preserve">
          <source>The frame has been iconified.</source>
          <target state="translated">프레임이 아이콘 화되었습니다.</target>
        </trans-unit>
        <trans-unit id="f8d9ae468a4f1456110a2e7e66aa197390c9a9ff" translate="yes" xml:space="preserve">
          <source>The frame is currently selected.</source>
          <target state="translated">현재 프레임이 선택되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d11533cf2691a798df6e7bed182e7d636190a609" translate="yes" xml:space="preserve">
          <source>The frame name (object of the &lt;code&gt;target&lt;/code&gt; attribute).</source>
          <target state="translated">프레임 이름 ( &lt;code&gt;target&lt;/code&gt; 속성의 개체 )입니다.</target>
        </trans-unit>
        <trans-unit id="41a6a4dcdc29767e79ca4afea93e08f8fbb37949" translate="yes" xml:space="preserve">
          <source>The frame name (object of the &lt;code&gt;target&lt;/code&gt; attribute). See the name attribute definition in HTML 4.0.</source>
          <target state="translated">프레임 이름 ( &lt;code&gt;target&lt;/code&gt; 속성의 개체 )입니다. HTML 4.0의 이름 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c7f4264dce9f2570469b4b2805c4cd518e8c6b78" translate="yes" xml:space="preserve">
          <source>The frame's size can be changed.</source>
          <target state="translated">프레임의 크기를 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b045361cfaffd0cd8b7868eeb08d022948c4e3dd" translate="yes" xml:space="preserve">
          <source>The full detail message</source>
          <target state="translated">상세 메시지</target>
        </trans-unit>
        <trans-unit id="6670ee785c7e540607d8084d9e96ec52d9cdb17d" translate="yes" xml:space="preserve">
          <source>The full help message for this diagnostic command (same output as the one produced by the 'help' command)</source>
          <target state="translated">이 진단 명령에 대한 전체 도움말 메시지 ( 'help'명령에 의해 생성 된 것과 동일한 출력)</target>
        </trans-unit>
        <trans-unit id="6e6af340438b798b4af65334c20b15a8a6ab7f82" translate="yes" xml:space="preserve">
          <source>The full name of this binding.</source>
          <target state="translated">이 바인딩의 전체 이름입니다.</target>
        </trans-unit>
        <trans-unit id="98e139129d3d144948d18b386c2a063173376f20" translate="yes" xml:space="preserve">
          <source>The full sequence of all iteration variable types, in clause order, will be notated as &lt;code&gt;(V...)&lt;/code&gt;. The values themselves will be &lt;code&gt;(v...)&lt;/code&gt;. When we speak of &quot;parameter lists&quot;, we will usually be referring to types, but in some contexts (describing execution) the lists will be of actual values.</source>
          <target state="translated">절 순서에서 모든 반복 변수 유형의 전체 시퀀스는 &lt;code&gt;(V...)&lt;/code&gt; 됩니다. 값 자체는 &lt;code&gt;(v...)&lt;/code&gt; 입니다. &quot;매개 변수 목록&quot;에 대해 이야기 할 때 일반적으로 유형을 참조하지만 일부 컨텍스트 (실행 설명)에서는 목록이 실제 값입니다.</target>
        </trans-unit>
        <trans-unit id="e2e8ad3cad9cd9a7c5ceff9a5d59565630dc6be2" translate="yes" xml:space="preserve">
          <source>The full set of mixer info objects that represent the mixers supported by this &lt;code&gt;MixerProvider&lt;/code&gt; may be obtained through the &lt;code&gt;getMixerInfo&lt;/code&gt; method.</source>
          <target state="translated">이 &lt;code&gt;MixerProvider&lt;/code&gt; 가 지원하는 믹서를 나타내는 믹서 정보 객체의 전체 세트 는 &lt;code&gt;getMixerInfo&lt;/code&gt; 메소드 를 통해 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="045b6c4a34c997a5ff03677d71a427fd8c213949" translate="yes" xml:space="preserve">
          <source>The full set of the mixer info objects that represent the mixers supported by this &lt;code&gt;MixerProvider&lt;/code&gt; may be obtained through the &lt;code&gt;getMixerInfo&lt;/code&gt; method. Use the &lt;code&gt;isMixerSupported&lt;/code&gt; method to test whether this &lt;code&gt;MixerProvider&lt;/code&gt; supports a particular mixer.</source>
          <target state="translated">이 &lt;code&gt;MixerProvider&lt;/code&gt; 가 지원하는 믹서를 나타내는 믹서 정보 객체의 전체 세트 는 &lt;code&gt;getMixerInfo&lt;/code&gt; 메소드 를 통해 얻을 수 있습니다 . 사용 &lt;code&gt;isMixerSupported&lt;/code&gt; 의 이 있는지 여부를 테스트 방법을 &lt;code&gt;MixerProvider&lt;/code&gt; 가이 특정 믹서를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="d7e276cca42226e1d7f83b0ce05c1d7eb79b5abb" translate="yes" xml:space="preserve">
          <source>The full type signature of the method, including return type.</source>
          <target state="translated">반환 형식을 포함한 메서드의 전체 형식 서명입니다.</target>
        </trans-unit>
        <trans-unit id="ad817d15b58554f4b61df06c705ec9574cb8b3e5" translate="yes" xml:space="preserve">
          <source>The fully qualified class name of the module's main class</source>
          <target state="translated">모듈 기본 클래스의 정규화 된 클래스 이름</target>
        </trans-unit>
        <trans-unit id="48ad991d9dc4396060b69a71c3db1cc7e1ece97f" translate="yes" xml:space="preserve">
          <source>The fully qualified class name of the service type</source>
          <target state="translated">서비스 유형의 완전한 클래스 이름</target>
        </trans-unit>
        <trans-unit id="75e634abd512af1008080e4c7a639343ae697365" translate="yes" xml:space="preserve">
          <source>The fully qualified directory name where the MBean should be persisted (if appropriate).</source>
          <target state="translated">MBean을 유지해야하는 완전한 디렉토리 이름 (적절한 경우).</target>
        </trans-unit>
        <trans-unit id="de074ad56ac8abd4797277639691ef7de662d175" translate="yes" xml:space="preserve">
          <source>The fully qualified name of a named package that is not a subpackage of a named package is its simple name. The fully qualified name of a named package that is a subpackage of another named package consists of the fully qualified name of the containing package, followed by &quot;&lt;code&gt;.&lt;/code&gt;&quot;, followed by the simple (member) name of the subpackage.</source>
          <target state="translated">명명 된 패키지의 하위 패키지가 아닌 명명 된 패키지의 정규화 된 이름은 단순한 이름입니다. 다른 명명 된 패키지의 서브 패키지 인 명명 된 패키지의 정규화 된 이름은 포함하는 패키지의 정규화 된 이름, &quot; &lt;code&gt;.&lt;/code&gt; &quot;, 하위 패키지의 단순 (구성원) 이름으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="f08d6d7401fc9ae382da885fdc61f3b1d5cf0c2d" translate="yes" xml:space="preserve">
          <source>The fully-qualified name of this package as defined in section 6.5.3 of</source>
          <target state="translated">섹션 6.5.3에 정의 된이 패키지의 정규화 된 이름</target>
        </trans-unit>
        <trans-unit id="322b80361dc210bb26cb16137caf000fff8d9ec3" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;MethodHandles.lookup&lt;/code&gt; is caller sensitive so that there can be a secure foundation for lookups. Nearly all other methods in the JSR 292 API rely on lookup objects to check access requests.</source>
          <target state="translated">&lt;code&gt;MethodHandles.lookup&lt;/code&gt; 함수 는 호출자에 민감하므로 검색을위한 안전한 기반이 될 수 있습니다. JSR 292 API의 거의 모든 다른 메소드는 조회 오브젝트를 사용하여 액세스 요청을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e1b22103686230dfe40dc275e38134fd2ece6c00" translate="yes" xml:space="preserve">
          <source>The function or &lt;code&gt;null&lt;/code&gt; if no function named &lt;code&gt;functionName&lt;/code&gt; with &lt;code&gt;arity&lt;/code&gt; arguments exists.</source>
          <target state="translated">함수 또는 &lt;code&gt;null&lt;/code&gt; 라는 이름의 함수 경우 &lt;code&gt;functionName&lt;/code&gt; 와 &lt;code&gt;arity&lt;/code&gt; 에의 인수는 존재하지 않는다.</target>
        </trans-unit>
        <trans-unit id="c2e8bd4442f494c93af0ed558dac52300d861f27" translate="yes" xml:space="preserve">
          <source>The function's first argument allows the current &lt;code&gt;SSLEngine&lt;/code&gt; to be inspected, including the handshake session and configuration settings.</source>
          <target state="translated">함수의 첫 번째 인수는 핸드 셰이크 세션 및 구성 설정을 포함하여 현재 &lt;code&gt;SSLEngine&lt;/code&gt; 을 검사 할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="7086d9d8c6a0eb4040856e463d1b8e6e73d6091a" translate="yes" xml:space="preserve">
          <source>The function's first argument allows the current &lt;code&gt;SSLSocket&lt;/code&gt; to be inspected, including the handshake session and configuration settings.</source>
          <target state="translated">함수의 첫 번째 인수는 핸드 셰이크 세션 및 구성 설정을 포함하여 현재 &lt;code&gt;SSLSocket&lt;/code&gt; 을 검사 할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="21a650b8a755f38564eadb7914f668f808be338c" translate="yes" xml:space="preserve">
          <source>The function's result is an application protocol name, or null to indicate that none of the advertised names are acceptable. If the return value is an empty &lt;code&gt;String&lt;/code&gt; then application protocol indications will not be used. If the return value is null (no value chosen) or is a value that was not advertised by the peer, the underlying protocol will determine what action to take. (For example, ALPN will send a &quot;no_application_protocol&quot; alert and terminate the connection.)</source>
          <target state="translated">함수의 결과는 응용 프로그램 프로토콜 이름이거나, 보급 된 이름이 허용되지 않음을 나타내는 null입니다. 반환 값이 빈 &lt;code&gt;String&lt;/code&gt; 이면 응용 프로그램 프로토콜 표시가 사용되지 않습니다. 반환 값이 null (선택된 값 없음)이거나 피어에서 알려지지 않은 값인 경우 기본 프로토콜은 수행 할 작업을 결정합니다. (예를 들어, ALPN은 &quot;no_application_protocol&quot;경고를 보내고 연결을 종료합니다.)</target>
        </trans-unit>
        <trans-unit id="049e9803ce4c318a041efa39ffa0357125f7cb2e" translate="yes" xml:space="preserve">
          <source>The function's second argument lists the application protocol names advertised by the TLS peer.</source>
          <target state="translated">함수의 두 번째 인수는 TLS 피어가 알리는 애플리케이션 프로토콜 이름을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="7b75d2f564388e2749324f7684de8741790d40b7" translate="yes" xml:space="preserve">
          <source>The functional interfaces in this package follow an extensible naming convention, as follows:</source>
          <target state="translated">이 패키지의 기능 인터페이스는 다음과 같이 확장 가능한 명명 규칙을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="7f14c8b36482cb555ef9a0ced1041ea27c6b22e5" translate="yes" xml:space="preserve">
          <source>The functionality has been migrated into &lt;code&gt;ItemHandler&lt;/code&gt;.</source>
          <target state="translated">기능이 &lt;code&gt;ItemHandler&lt;/code&gt; 로 마이그레이션되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ce5bd4822dc4a170ef833d344202fd62505c6b26" translate="yes" xml:space="preserve">
          <source>The functionality of this interface is duplicated by the &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interface. In addition, &lt;code&gt;Iterator&lt;/code&gt; adds an optional remove operation, and has shorter method names. New implementations should consider using &lt;code&gt;Iterator&lt;/code&gt; in preference to &lt;code&gt;Enumeration&lt;/code&gt;. It is possible to adapt an &lt;code&gt;Enumeration&lt;/code&gt; to an &lt;code&gt;Iterator&lt;/code&gt; by using the &lt;a href=&quot;#asIterator()&quot;&gt;&lt;code&gt;asIterator()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 인터페이스의 기능은 &lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인터페이스에 의해 복제됩니다 . 또한 &lt;code&gt;Iterator&lt;/code&gt; 는 선택적 제거 작업을 추가하고 메서드 이름이 더 짧습니다. 새로운 구현 에서는 &lt;code&gt;Enumeration&lt;/code&gt; 보다 &lt;code&gt;Iterator&lt;/code&gt; 사용을 고려해야 합니다. &lt;a href=&quot;#asIterator()&quot;&gt; &lt;code&gt;asIterator()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 &lt;code&gt;Enumeration&lt;/code&gt; 을 &lt;code&gt;Iterator&lt;/code&gt; 에 적용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd1adb1c6cdaf34899213972486b61cb86d4b763" translate="yes" xml:space="preserve">
          <source>The fundamental notion of the JMX API is the &lt;em&gt;MBean&lt;/em&gt;. An MBean is a named &lt;em&gt;managed object&lt;/em&gt; representing a resource. It has a &lt;em id=&quot;mgIface&quot;&gt;management interface&lt;/em&gt; which must be &lt;em&gt;public&lt;/em&gt; and consist of:</source>
          <target state="translated">JMX API의 기본 개념은 &lt;em&gt;MBean&lt;/em&gt; 입니다. MBean은 자원을 나타내는 명명 된 &lt;em&gt;관리 객체&lt;/em&gt; 입니다. 그것은이 &lt;em id=&quot;mgIface&quot;&gt;관리 인터페이스&lt;/em&gt; 해야합니다 &lt;em&gt;공공&lt;/em&gt; 및 구성을 :</target>
        </trans-unit>
        <trans-unit id="affa9a95efd7c99562b168220dc0b3a62ddadab8" translate="yes" xml:space="preserve">
          <source>The fuser temperature is above normal.</source>
          <target state="translated">퓨저 온도가 정상보다 높습니다.</target>
        </trans-unit>
        <trans-unit id="b432c989f957660cc61cab309227c58b52d723b4" translate="yes" xml:space="preserve">
          <source>The fuser temperature is below normal.</source>
          <target state="translated">퓨저 온도가 정상보다 낮습니다.</target>
        </trans-unit>
        <trans-unit id="ba25e2a915ceb047c917b9ea9787ccdd3cac6068" translate="yes" xml:space="preserve">
          <source>The gap between the text and the icon.</source>
          <target state="translated">텍스트와 아이콘 사이의 간격입니다.</target>
        </trans-unit>
        <trans-unit id="d165af52d9801f2b9c6ca7bc842ffcb4a3efd77c" translate="yes" xml:space="preserve">
          <source>The general contract for the &lt;code&gt;Object.equals&lt;/code&gt; method states that equals must be symmetric (in other words, &lt;code&gt;a.equals(b)&lt;/code&gt; if and only if &lt;code&gt;b.equals(a)&lt;/code&gt;). The contracts for &lt;code&gt;List.equals&lt;/code&gt; and &lt;code&gt;Set.equals&lt;/code&gt; state that lists are only equal to other lists, and sets to other sets. Thus, a custom &lt;code&gt;equals&lt;/code&gt; method for a collection class that implements neither the &lt;code&gt;List&lt;/code&gt; nor &lt;code&gt;Set&lt;/code&gt; interface must return &lt;code&gt;false&lt;/code&gt; when this collection is compared to any list or set. (By the same logic, it is not possible to write a class that correctly implements both the &lt;code&gt;Set&lt;/code&gt; and &lt;code&gt;List&lt;/code&gt; interfaces.)</source>
          <target state="translated">&lt;code&gt;Object.equals&lt;/code&gt; 메소드 의 일반 계약에 따르면 equals는 대칭이어야합니다 (즉, &lt;code&gt;a.equals(b)&lt;/code&gt; 경우에만 a.equals (b &lt;code&gt;b.equals(a)&lt;/code&gt; ). &lt;code&gt;List.equals&lt;/code&gt; 및 &lt;code&gt;Set.equals&lt;/code&gt; 계약은 목록이 다른 목록과 동일하고 다른 세트로 설정 됨을 나타냅니다 . 따라서 &lt;code&gt;List&lt;/code&gt; 또는 &lt;code&gt;Set&lt;/code&gt; 인터페이스 를 구현하지 않는 컬렉션 클래스에 대한 사용자 정의 &lt;code&gt;equals&lt;/code&gt; 메소드는 이 컬렉션을 목록 또는 세트와 비교할 때 &lt;code&gt;false&lt;/code&gt; 를 반환 하지 않아야합니다 . 동일한 논리에 의해 &lt;code&gt;Set&lt;/code&gt; 및 &lt;code&gt;List&lt;/code&gt; 인터페이스를 모두 올바르게 구현하는 클래스를 작성할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="4e6457a04a192222364a3fdd43c4856716671752" translate="yes" xml:space="preserve">
          <source>The general contract is that if you need to change the size of the &lt;code&gt;Component&lt;/code&gt;, or location of the &lt;code&gt;Popup&lt;/code&gt;, you should obtain a new &lt;code&gt;Popup&lt;/code&gt;.</source>
          <target state="translated">일반적인 계약은 &lt;code&gt;Component&lt;/code&gt; 의 크기 또는 &lt;code&gt;Popup&lt;/code&gt; 의 위치 를 변경해야하는 경우 새 &lt;code&gt;Popup&lt;/code&gt; 을 얻어야한다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="98b1c621b589519528c36a122daf84c30e4edddf" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;finalize&lt;/code&gt; is that it is invoked if and when the Java virtual machine has determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, except as a result of an action taken by the finalization of some other object or class which is ready to be finalized. The &lt;code&gt;finalize&lt;/code&gt; method may take any action, including making this object available again to other threads; the usual purpose of &lt;code&gt;finalize&lt;/code&gt;, however, is to perform cleanup actions before the object is irrevocably discarded. For example, the finalize method for an object that represents an input/output connection might perform explicit I/O transactions to break the connection before the object is permanently discarded.</source>
          <target state="translated">&lt;code&gt;finalize&lt;/code&gt; 의 일반 계약은 Java 가상 머신이 조치의 결과를 제외하고 아직 종료되지 않은 스레드가이 오브젝트에 더 이상 액세스 할 수있는 수단이 없다고 결정한 경우 호출된다는 것입니다. 마무리 할 준비가 된 다른 개체 또는 클래스의 마무리에 의해. &lt;code&gt;finalize&lt;/code&gt; 방법은 다른 thread로 다시 이용 가능하게하는이 객체을 포함한 모든 조치를 취할 수; 그러나 &lt;code&gt;finalize&lt;/code&gt; 의 일반적인 목적은 객체가 취소 불가능하게 삭제되기 전에 정리 작업을 수행하는 것입니다. 예를 들어, 입 / 출력 연결을 나타내는 개체에 대한 finalize 메서드는 개체가 영구적으로 삭제되기 전에 연결을 끊기 위해 명시 적 I / O 트랜잭션을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5cdfce9e4b05d212da94fe95d771caea20d5dc9" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;finalize&lt;/code&gt; is that it is invoked if and when the Java&amp;trade; virtual machine has determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, except as a result of an action taken by the finalization of some other object or class which is ready to be finalized. The &lt;code&gt;finalize&lt;/code&gt; method may take any action, including making this object available again to other threads; the usual purpose of &lt;code&gt;finalize&lt;/code&gt;, however, is to perform cleanup actions before the object is irrevocably discarded. For example, the finalize method for an object that represents an input/output connection might perform explicit I/O transactions to break the connection before the object is permanently discarded.</source>
          <target state="translated">의 일반 계약 &lt;code&gt;finalize&lt;/code&gt; 이 호출되는 경우와 자바 (Java &amp;trade;) 가상 머신은 더 이상 객체가 아직 행동의 결과를 제외하고, 생존하고있는 임의의 thread에 액세스하는 방법이 있음을 결정하지 때 완성 될 준비가 된 다른 객체 또는 클래스의 완성으로 가져옵니다. &lt;code&gt;finalize&lt;/code&gt; 방법은 다른 thread로 다시 이용 가능하게하는이 객체을 포함한 모든 조치를 취할 수; 그러나 &lt;code&gt;finalize&lt;/code&gt; 의 일반적인 목적은 개체를 취소 할 수없는 방식으로 삭제하기 전에 정리 작업을 수행하는 것입니다. 예를 들어, 입출력 연결을 나타내는 오브젝트의 finalize 메소드는 오브젝트가 영구적으로 삭제되기 전에 명시 적 I / O 트랜잭션을 수행하여 연결을 끊을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="edb9c7d88cc1ce8aa97ce8fb3d5a87c01fd408d1" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;hashCode&lt;/code&gt; is:</source>
          <target state="translated">일반 계약 &lt;code&gt;hashCode&lt;/code&gt; 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0d0761a5d4d4cfe1bb133ae32ec4751724e2ff9b" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;mark&lt;/code&gt; is that, if the method &lt;code&gt;markSupported&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, the stream somehow remembers all the bytes read after the call to &lt;code&gt;mark&lt;/code&gt; and stands ready to supply those same bytes again if and whenever the method &lt;code&gt;reset&lt;/code&gt; is called. However, the stream is not required to remember any data at all if more than &lt;code&gt;readlimit&lt;/code&gt; bytes are read from the stream before &lt;code&gt;reset&lt;/code&gt; is called.</source>
          <target state="translated">의 일반 계약 &lt;code&gt;mark&lt;/code&gt; 방법이있는 경우 즉, &lt;code&gt;markSupported&lt;/code&gt; 반환 &lt;code&gt;true&lt;/code&gt; , 스트림이 어떻게 든 모든 바이트가 호출 후 읽기 기억 &lt;code&gt;mark&lt;/code&gt; 와 메소드 때마다 경우 다시 그 같은 바이트를 제공 할 준비가되어 &lt;code&gt;reset&lt;/code&gt; 이라고합니다. 그러나 &lt;code&gt;reset&lt;/code&gt; 이 호출 되기 전에 스트림에서 &lt;code&gt;readlimit&lt;/code&gt; 바이트 이상 을 읽는 경우 스트림은 데이터를 전혀 기억하지 않아도됩니다 .</target>
        </trans-unit>
        <trans-unit id="78814a25bae5a1e5785d20a4fef6c1ed9141d5cb" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;next&lt;/code&gt; is that it returns an &lt;code&gt;int&lt;/code&gt; value and if the argument &lt;code&gt;bits&lt;/code&gt; is between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;32&lt;/code&gt; (inclusive), then that many low-order bits of the returned value will be (approximately) independently chosen bit values, each of which is (approximately) equally likely to be &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;. The method &lt;code&gt;next&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; by atomically updating the seed to</source>
          <target state="translated">일반 계약 &lt;code&gt;next&lt;/code&gt; 그것이 리턴이다 &lt;code&gt;int&lt;/code&gt; 값과 인수 경우 &lt;code&gt;bits&lt;/code&gt; 사이 인 &lt;code&gt;1&lt;/code&gt; 과 &lt;code&gt;32&lt;/code&gt; 이들은 각각 독립적으로 선택된 비트의 값 (범위) 후 리턴 값의 많은 하위 비트 (약) 될 것이라고 는 대략적으로 &lt;code&gt;0&lt;/code&gt; 또는 &lt;code&gt;1&lt;/code&gt; 일 것 입니다. 방법 &lt;code&gt;next&lt;/code&gt; 클래스에 의해 구현되는 &lt;code&gt;Random&lt;/code&gt; 원자에 씨앗을 업데이트하여</target>
        </trans-unit>
        <trans-unit id="3a2499a7d19b1785e56ca1842106c833aeadeaff" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;nextDouble&lt;/code&gt; is that one &lt;code&gt;double&lt;/code&gt; value, chosen (approximately) uniformly from the range &lt;code&gt;0.0d&lt;/code&gt; (inclusive) to &lt;code&gt;1.0d&lt;/code&gt; (exclusive), is pseudorandomly generated and returned.</source>
          <target state="translated">&lt;code&gt;nextDouble&lt;/code&gt; 의 일반적인 계약은 &lt;code&gt;0.0d&lt;/code&gt; (포함)에서 &lt;code&gt;1.0d&lt;/code&gt; (제외) 범위에서 (대략) 균일하게 선택된 하나의 &lt;code&gt;double&lt;/code&gt; 값 이 의사 난수로 생성되어 반환 된다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="33e5522f2cf381304bb4acc1f444b2ec6731ffff" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;nextFloat&lt;/code&gt; is that one &lt;code&gt;float&lt;/code&gt; value, chosen (approximately) uniformly from the range &lt;code&gt;0.0f&lt;/code&gt; (inclusive) to &lt;code&gt;1.0f&lt;/code&gt; (exclusive), is pseudorandomly generated and returned. All 2&lt;sup&gt;24&lt;/sup&gt; possible &lt;code&gt;float&lt;/code&gt; values of the form</source>
          <target state="translated">&lt;code&gt;nextFloat&lt;/code&gt; 의 일반적인 계약은 &lt;code&gt;0.0f&lt;/code&gt; (포함)에서 &lt;code&gt;1.0f&lt;/code&gt; (제외) 범위에서 (대략) 균일하게 선택된 하나의 &lt;code&gt;float&lt;/code&gt; 값 이 의사 난수로 생성되어 반환 된다는 것 입니다. 형식의 모든 2 &lt;sup&gt;24&lt;/sup&gt; 가능한 &lt;code&gt;float&lt;/code&gt; 값&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a6108c9c3bb11e8358e1337d11fb7dd99c819fca" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;nextGaussian&lt;/code&gt; is that one &lt;code&gt;double&lt;/code&gt; value, chosen from (approximately) the usual normal distribution with mean &lt;code&gt;0.0&lt;/code&gt; and standard deviation &lt;code&gt;1.0&lt;/code&gt;, is pseudorandomly generated and returned.</source>
          <target state="translated">&lt;code&gt;nextGaussian&lt;/code&gt; 의 일반적인 계약은 평균이 &lt;code&gt;0.0&lt;/code&gt; 인 정규 정규 분포 (대략)에서 선택한 &lt;code&gt;double&lt;/code&gt; 값 하나입니다. 및 표준 편차 &lt;code&gt;1.0&lt;/code&gt; 으로 이 의사 난수로 생성되고 반환 입니다.</target>
        </trans-unit>
        <trans-unit id="a39c42a97f8cc2bfa84444b9a77fa5e02fd465b3" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;reset&lt;/code&gt; is:</source>
          <target state="translated">일반 계약 &lt;code&gt;reset&lt;/code&gt; 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b12c78c2fa8a5ae02abd10ed060377fad12b602d" translate="yes" xml:space="preserve">
          <source>The general contract of the method &lt;code&gt;run&lt;/code&gt; is that it may take any action whatsoever.</source>
          <target state="translated">방법의 일반 계약 &lt;code&gt;run&lt;/code&gt; 어떤 조치 든 취할 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7b26618e1345d461e2aa57cbd21c3a074e197e40" translate="yes" xml:space="preserve">
          <source>The general format for specifying the</source>
          <target state="translated">지정하는 일반적인 형식</target>
        </trans-unit>
        <trans-unit id="85f63b8785c0e8ae0fb39a8cfe0e34a1ad8bb8fa" translate="yes" xml:space="preserve">
          <source>The generated name must be unique within active snippets.</source>
          <target state="translated">생성 된 이름은 활성 스 니펫 내에서 고유해야합니다.</target>
        </trans-unit>
        <trans-unit id="e1c6603490c157d63530476a255326eaf6caa43f" translate="yes" xml:space="preserve">
          <source>The generated transport-specific address at which VM is listening for debugger connection.</source>
          <target state="translated">VM이 디버거 연결을 수신하는 생성 된 전송 특정 주소입니다.</target>
        </trans-unit>
        <trans-unit id="836684afab62f49f45418668a259cd352042272e" translate="yes" xml:space="preserve">
          <source>The generator function takes an integer, which is the size of the desired array, and produces an array of the desired size. This can be concisely expressed with an array constructor reference:</source>
          <target state="translated">생성기 함수는 원하는 배열의 크기 인 정수를 취하여 원하는 크기의 배열을 생성합니다. 이것은 배열 생성자 참조로 간결하게 표현 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecfb13a04db6d698e4ce462e806bf72683c82f1e" translate="yes" xml:space="preserve">
          <source>The generator will be used for newly created Snippet instances. The identifying name (id) is accessed with &lt;a href=&quot;snippet#id()&quot;&gt;&lt;code&gt;Snippet.id()&lt;/code&gt;&lt;/a&gt; and can be seen in the &lt;code&gt;StackTraceElement.getFileName()&lt;/code&gt; for a &lt;a href=&quot;evalexception&quot;&gt;&lt;code&gt;EvalException&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;unresolvedreferenceexception&quot;&gt;&lt;code&gt;UnresolvedReferenceException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">생성기는 새로 생성 된 Snippet 인스턴스에 사용됩니다. 식별 이름 (id)은 &lt;a href=&quot;snippet#id()&quot;&gt; &lt;code&gt;Snippet.id()&lt;/code&gt; &lt;/a&gt; 액세스되며 &lt;a href=&quot;evalexception&quot;&gt; &lt;code&gt;EvalException&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;unresolvedreferenceexception&quot;&gt; &lt;code&gt;UnresolvedReferenceException&lt;/code&gt; 에&lt;/a&gt; 대한 &lt;code&gt;StackTraceElement.getFileName()&lt;/code&gt; 에서 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ebf0400e8d32a0c35c9ec1bb12805f77c31bed28" translate="yes" xml:space="preserve">
          <source>The generator will be used for newly created VarSnippet instances. The name of a variable is queried with &lt;a href=&quot;persistentsnippet#name()&quot;&gt;&lt;code&gt;PersistentSnippet.name()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">생성기는 새로 생성 된 VarSnippet 인스턴스에 사용됩니다. 변수 이름은 &lt;a href=&quot;persistentsnippet#name()&quot;&gt; &lt;code&gt;PersistentSnippet.name()&lt;/code&gt; &lt;/a&gt; 쿼리됩니다 .</target>
        </trans-unit>
        <trans-unit id="22988a82c700434c5bff9a5cb2087e4845138282" translate="yes" xml:space="preserve">
          <source>The generic &lt;code&gt;Exception&lt;/code&gt; class for the Scripting APIs.</source>
          <target state="translated">일반적인 &lt;code&gt;Exception&lt;/code&gt; 스크립팅 API 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="50eca365888aa60e1583460ae7dbd0f1387e5760" translate="yes" xml:space="preserve">
          <source>The generic &lt;code&gt;Exception&lt;/code&gt; class for the Scripting APIs. Checked exception types thrown by underlying scripting implementations must be wrapped in instances of &lt;code&gt;ScriptException&lt;/code&gt;. The class has members to store line and column numbers and filenames if this information is available.</source>
          <target state="translated">스크립팅 API 의 일반 &lt;code&gt;Exception&lt;/code&gt; 클래스입니다. 기본 스크립팅 구현에서 발생 된 확인 된 예외 유형은 &lt;code&gt;ScriptException&lt;/code&gt; 인스턴스로 랩핑해야합니다 . 이 정보가있는 경우 클래스에는 행 및 열 번호와 파일 이름을 저장하는 멤버가 있습니다.</target>
        </trans-unit>
        <trans-unit id="34d751203fcfaae4c2dcf23fd2c630ff3255ac97" translate="yes" xml:space="preserve">
          <source>The generics mechanism in the language provides compile-time (static) type checking, but it is possible to defeat this mechanism with unchecked casts. Usually this is not a problem, as the compiler issues warnings on all such unchecked operations. There are, however, times when static type checking alone is not sufficient. For example, suppose a collection is passed to a third-party library and it is imperative that the library code not corrupt the collection by inserting an element of the wrong type.</source>
          <target state="translated">언어의 제네릭 메커니즘은 컴파일 타임 (정적) 유형 검사를 제공하지만, 확인되지 않은 캐스트로이 메커니즘을 물리 칠 수 있습니다. 컴파일러는 검사되지 않은 모든 작업에 대해 경고를 발행하므로 일반적으로 문제가되지 않습니다. 그러나 정적 유형 검사만으로는 충분하지 않은 경우가 있습니다. 예를 들어, 콜렉션이 써드 파티 라이브러리로 전달되고 라이브러리 코드가 잘못된 유형의 요소를 삽입하여 콜렉션을 손상시키지 않아야한다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="9658cbf453cc4becc4cbe8333437594fe45f326f" translate="yes" xml:space="preserve">
          <source>The geometry of the path describing the outline of the &lt;code&gt;Area&lt;/code&gt; resembles the path from which it was constructed only in that it describes the same enclosed 2-dimensional area, but may use entirely different types and ordering of the path segments to do so.</source>
          <target state="translated">&lt;code&gt;Area&lt;/code&gt; 의 외곽선을 설명하는 경로의 기하학적 구조는 동일한 둘러싸인 2 차원 영역을 설명한다는 점에서만 구성되는 경로와 비슷하지만 그렇게하기 위해 경로 세그먼트의 완전히 다른 유형과 순서를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f01b6abf45568cc54379123db1fec2168778ddd6" translate="yes" xml:space="preserve">
          <source>The gesture itself moves a logical cursor across the GUI hierarchy, intersecting the geometry of GUI Component(s), possibly resulting in the logical &quot;Drag&quot; cursor entering, crossing, and subsequently leaving &lt;code&gt;Component&lt;/code&gt;(s) and associated &lt;code&gt;DropTarget&lt;/code&gt;(s).</source>
          <target state="translated">제스처 자체는 GUI 계층을 가로 질러 논리적 커서를 이동하여 GUI 구성 요소의 지오메트리를 교차하여 논리적 &quot;드래그&quot;커서가 &lt;code&gt;Component&lt;/code&gt; 및 관련 &lt;code&gt;DropTarget&lt;/code&gt; 에 들어가고 교차 한 후 이탈 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b84c57928a61b40849f4e1f7b954f80ed5345f78" translate="yes" xml:space="preserve">
          <source>The gesture of clicking on a button with the mouse is associated with one instance of &lt;code&gt;ActionEvent&lt;/code&gt;, which is sent out when the mouse is both pressed and released over the button. If an application is interested in knowing when the button has been pressed but not released, as a separate gesture, it can specialize &lt;code&gt;processMouseEvent&lt;/code&gt;, or it can register itself as a listener for mouse events by calling &lt;code&gt;addMouseListener&lt;/code&gt;. Both of these methods are defined by &lt;code&gt;Component&lt;/code&gt;, the abstract superclass of all components.</source>
          <target state="translated">마우스로 버튼을 클릭하는 제스처는 &lt;code&gt;ActionEvent&lt;/code&gt; 의 한 인스턴스와 연관되며 , 마우스를 버튼 위에서 눌렀다 놓을 때 전송됩니다. 애플리케이션이 버튼을 눌렀지만 놓지 않은 시점을 알고 자하는 경우 별도의 제스처로 &lt;code&gt;processMouseEvent&lt;/code&gt; 를 특수화 하거나 &lt;code&gt;addMouseListener&lt;/code&gt; 를 호출하여 자신을 마우스 이벤트의 리스너로 등록 할 수 있습니다 . 이 두 메서드는 모든 구성 요소의 추상 수퍼 클래스 인 &lt;code&gt;Component&lt;/code&gt; 에 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="bd897795698de01db8d036abb2bef2cd803f0353" translate="yes" xml:space="preserve">
          <source>The getEncoding method will return the character encoding for this byte stream, or null if unknown.</source>
          <target state="translated">getEncoding 메서드는이 바이트 스트림에 대한 문자 인코딩을 반환하거나 알 수없는 경우 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7b219cbe102fff1dda6092b063119870bd86478d" translate="yes" xml:space="preserve">
          <source>The getEncoding method will return the character encoding of the object pointed to, or null if unknown.</source>
          <target state="translated">getEncoding 메소드는 가리키는 객체의 문자 인코딩을 반환하거나 알 수없는 경우 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a5cbbe75fcc96cb9452f9a6c7c0c548318b820d6" translate="yes" xml:space="preserve">
          <source>The getKeyChar method always returns a valid Unicode character or CHAR_UNDEFINED. Character input is reported by KEY_TYPED events: KEY_PRESSED and KEY_RELEASED events are not necessarily associated with character input. Therefore, the result of the getKeyChar method is guaranteed to be meaningful only for KEY_TYPED events.</source>
          <target state="translated">getKeyChar 메소드는 항상 유효한 유니 코드 문자 또는 CHAR_UNDEFINED를 리턴합니다. 문자 입력은 KEY_TYPED 이벤트에 의해보고됩니다. KEY_PRESSED 및 KEY_RELEASED 이벤트는 문자 입력과 반드시 ​​연관되지는 않습니다. 따라서 getKeyChar 메서드의 결과는 KEY_TYPED 이벤트에 대해서만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="17607035e1067bccfbdc24ec6f6fef5ac0edd8c8" translate="yes" xml:space="preserve">
          <source>The getter methods all require the key as an argument and return the object if found. If the object is not found, the getter method throws a &lt;code&gt;MissingResourceException&lt;/code&gt;.</source>
          <target state="translated">getter 메소드는 모두 키를 인수로 요구하고 발견되면 오브젝트를 리턴합니다. 객체가 발견되지 않은 경우, getter 메소드는 &lt;code&gt;MissingResourceException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="f32be84888915ac3aac8f3a538a2b7e9bb3c96a3" translate="yes" xml:space="preserve">
          <source>The getter methods may &lt;a href=&quot;messager#printMessage(javax.tools.Diagnostic.Kind,java.lang.CharSequence)&quot;&gt;issue warnings&lt;/a&gt; about noteworthy conditions using the facilities available after the processor has been &lt;a href=&quot;#isInitialized()&quot;&gt;initialized&lt;/a&gt;.</source>
          <target state="translated">getter 메소드는 프로세서가 &lt;a href=&quot;#isInitialized()&quot;&gt;초기화 된&lt;/a&gt; 후 사용 가능한 기능을 사용하여 주목할만한 조건에 대한 &lt;a href=&quot;messager#printMessage(javax.tools.Diagnostic.Kind,java.lang.CharSequence)&quot;&gt;경고&lt;/a&gt; 를 발행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f1838c464e5ae39d5db0e960e217af9f7c2dcff4" translate="yes" xml:space="preserve">
          <source>The getter methods may &lt;a href=&quot;messager#printMessage-javax.tools.Diagnostic.Kind-java.lang.CharSequence-&quot;&gt;issue warnings&lt;/a&gt; about noteworthy conditions using the facilities available after the processor has been &lt;a href=&quot;abstractprocessor#isInitialized--&quot;&gt;initialized&lt;/a&gt;.</source>
          <target state="translated">getter 메소드는 프로세서가 &lt;a href=&quot;abstractprocessor#isInitialized--&quot;&gt;초기화 된&lt;/a&gt; 후 사용 가능한 기능을 사용하여 주목할만한 조건에 대한 &lt;a href=&quot;messager#printMessage-javax.tools.Diagnostic.Kind-java.lang.CharSequence-&quot;&gt;경고&lt;/a&gt; 를 발행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c8bbd09e2f9282fab1c5b17105f5168116e9943f" translate="yes" xml:space="preserve">
          <source>The getter names.</source>
          <target state="translated">게터 이름.</target>
        </trans-unit>
        <trans-unit id="28b39e17a1484aedf1c82694acf5dc8fcf9dab78" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;contentLength&lt;/code&gt; is a positive number, that represents the exact amount of bytes the &lt;code&gt;publisher&lt;/code&gt; must publish.</source>
          <target state="translated">지정된 &lt;code&gt;contentLength&lt;/code&gt; 는 &lt;code&gt;publisher&lt;/code&gt; 가 게시해야하는 정확한 바이트 양을 나타내는 양수 입니다.</target>
        </trans-unit>
        <trans-unit id="e73a3a7a5d43775c4405ff5d0d8213179aa8eabb" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;finisher&lt;/code&gt; function is applied after the given subscriber's &lt;code&gt;onComplete&lt;/code&gt; has been invoked. The &lt;code&gt;finisher&lt;/code&gt; function is invoked with the given subscriber, and returns a value that is set as the response's body.</source>
          <target state="translated">지정된 &lt;code&gt;finisher&lt;/code&gt; 기능은 지정된 구독자의 &lt;code&gt;onComplete&lt;/code&gt; 가 호출 된 후에 적용 됩니다. &lt;code&gt;finisher&lt;/code&gt; 함수는 주어진 가입자 호출 및 응답의 본문으로 설정되어있는 값을 반환한다.</target>
        </trans-unit>
        <trans-unit id="ee07db4a9afb88d70f978c9557d54a36e2844c3a" translate="yes" xml:space="preserve">
          <source>The given Graphics object will have the default font, color, etc of the parent container. The PropertyEditor may change graphics attributes such as font and color and doesn't need to restore the old values.</source>
          <target state="translated">주어진 Graphics 객체는 부모 컨테이너의 기본 글꼴, 색상 등을 갖습니다. PropertyEditor는 글꼴 및 색상과 같은 그래픽 속성을 변경할 수 있으며 이전 값을 복원 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="80e16f59801b09178472236065c0402723fad16a" translate="yes" xml:space="preserve">
          <source>The given Java object will be converted to the given targetSqlType before being sent to the database. If the object has a custom mapping (is of a class implementing the interface &lt;code&gt;SQLData&lt;/code&gt;), the JDBC driver should call the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; to write it to the SQL data stream. If, on the other hand, the object is of a class implementing &lt;code&gt;Ref&lt;/code&gt;, &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt;, &lt;code&gt;NClob&lt;/code&gt;, &lt;code&gt;Struct&lt;/code&gt;, &lt;code&gt;java.net.URL&lt;/code&gt;, or &lt;code&gt;Array&lt;/code&gt;, the driver should pass it to the database as a value of the corresponding SQL type.</source>
          <target state="translated">주어진 Java 객체는 데이터베이스로 전송되기 전에 주어진 targetSqlType으로 변환됩니다. 개체에 사용자 지정 매핑이있는 경우 ( &lt;code&gt;SQLData&lt;/code&gt; 인터페이스를 구현하는 클래스에 속함 ) JDBC 드라이버는 &lt;code&gt;SQLData.writeSQL&lt;/code&gt; 메서드 를 호출 하여 SQL 데이터 스트림에 기록해야합니다. 반면에 객체가 &lt;code&gt;Ref&lt;/code&gt; , &lt;code&gt;Blob&lt;/code&gt; , &lt;code&gt;Clob&lt;/code&gt; , &lt;code&gt;NClob&lt;/code&gt; , &lt;code&gt;Struct&lt;/code&gt; , &lt;code&gt;java.net.URL&lt;/code&gt; 또는 &lt;code&gt;Array&lt;/code&gt; 를 구현하는 클래스 인 경우 드라이버는 해당 SQL 유형의 값으로 데이터베이스에 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="b933b1be3a77c2cbdbf7badcb4530cf76f073f97" translate="yes" xml:space="preserve">
          <source>The given Java object will be converted to the targetSqlType before being sent to the database.</source>
          <target state="translated">주어진 Java 오브젝트는 데이터베이스로 전송되기 전에 targetSqlType으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="9d55dc02ae96e2b20706439dd2fe4ab5382f341e" translate="yes" xml:space="preserve">
          <source>The given address must not be the &lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address. The channel must be first bound using &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; before invoking this method, otherwise &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; is thrown. If this method is invoked on a channel that does not have &lt;code&gt;address&lt;/code&gt; as one of its bound addresses or that has only one local address bound to it, then this method throws &lt;a href=&quot;illegalunbindexception&quot;&gt;&lt;code&gt;IllegalUnbindException&lt;/code&gt;&lt;/a&gt;. The initial address that the channel's socket is bound to using &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; may be removed from the bound addresses for the channel's socket.</source>
          <target state="translated">주어진 주소는 &lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt; 주소 가 아니어야합니다 . 이 메서드를 호출하기 전에 먼저 &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 를 사용하여 채널을 바인딩해야합니다 . 그렇지 않으면 &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다. 이 방법이없는 채널에서 호출하면 &lt;code&gt;address&lt;/code&gt; 바인딩 된 주소 중 하나 또는 그 바인드 하나의 로컬 주소를 가지고,이 메소드는 발생 &lt;a href=&quot;illegalunbindexception&quot;&gt; &lt;code&gt;IllegalUnbindException&lt;/code&gt; 을&lt;/a&gt; . &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 를 사용하여 채널의 소켓이 바인딩 된 초기 주소는 채널 소켓 의 바인딩 된 주소에서 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="beb626eaaa271322af407d7a7070c4e21eba7a43" translate="yes" xml:space="preserve">
          <source>The given address must not be the &lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address. The channel must be first bound using &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; before invoking this method, otherwise &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; is thrown. If this method is invoked on a channel that does not have &lt;code&gt;address&lt;/code&gt; as one of its bound addresses, or that has only one local address bound to it, then this method throws &lt;a href=&quot;illegalunbindexception&quot;&gt;&lt;code&gt;IllegalUnbindException&lt;/code&gt;&lt;/a&gt;. The initial address that the channel's socket is bound to using &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; may be removed from the bound addresses for the channel's socket.</source>
          <target state="translated">주어진 주소는 &lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt; 주소 가 아니어야합니다 . 이 메서드를 호출하기 전에 먼저 &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 를 사용하여 채널을 바인딩해야합니다 . 그렇지 않으면 &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다. 이 방법이없는 채널에서 호출하면 &lt;code&gt;address&lt;/code&gt; 바인딩 된 주소 중 하나, 또는 그 바인드 하나의 로컬 주소를 가지고,이 메소드는 발생 &lt;a href=&quot;illegalunbindexception&quot;&gt; &lt;code&gt;IllegalUnbindException&lt;/code&gt; 을&lt;/a&gt; . &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 를 사용하여 채널의 소켓이 바인딩 된 초기 주소는 채널 소켓 의 바인딩 된 주소에서 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="904ee745613b675f7a67c3fb5b8dd1c0c0662e2b" translate="yes" xml:space="preserve">
          <source>The given address must not be the &lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address. The channel must be first bound using &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; before invoking this method, otherwise &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; is thrown. The &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method takes a &lt;code&gt;SocketAddress&lt;/code&gt; as its argument which typically contains a port number as well as an address. Addresses subquently bound using this method are simply addresses as the SCTP port number remains the same for the lifetime of the channel.</source>
          <target state="translated">주어진 주소는 &lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt; 주소 가 아니어야합니다 . 이 메서드를 호출하기 전에 먼저 &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 를 사용하여 채널을 바인딩해야합니다 . 그렇지 않으면 &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다. &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 방법은 소요 &lt;code&gt;SocketAddress&lt;/code&gt; 그 통상적으로 포트 번호를 포함하는 인자뿐만 아니라 어드레스한다. 이 방법을 사용하여 후속 바인딩 된 주소는 SCTP 포트 번호가 채널 수명 동안 동일하게 유지되므로 단순히 주소입니다.</target>
        </trans-unit>
        <trans-unit id="802076c1d8b97f55257439f06e7588cd75dc231b" translate="yes" xml:space="preserve">
          <source>The given address must not be the &lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address. The channel must be first bound using &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; before invoking this method, otherwise &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">주어진 주소는 &lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt; 주소 가 아니어야합니다 . 이 메서드를 호출하기 전에 먼저 &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 를 사용하여 채널을 바인딩해야합니다 . 그렇지 않으면 &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="618546e827dde7c4969d970e3871c3771695793e" translate="yes" xml:space="preserve">
          <source>The given address must not be the &lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address. The channel must be first bound using &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; before invoking this method, otherwise &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; is thrown. The &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method takes a &lt;code&gt;SocketAddress&lt;/code&gt; as its argument which typically contains a port number as well as an address. Addresses subquently bound using this method are simply addresses as the SCTP port number remains the same for the lifetime of the channel.</source>
          <target state="translated">주어진 주소는 &lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt; 주소 가 아니어야합니다 . 이 메서드를 호출하기 전에 먼저 &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 를 사용하여 채널을 바인딩해야합니다 . 그렇지 않으면 &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다. &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 방법은 소요 &lt;code&gt;SocketAddress&lt;/code&gt; 그 통상적으로 포트 번호를 포함하는 인자뿐만 아니라 어드레스한다. 이 방법을 사용하여 후속 바인딩 된 주소는 SCTP 포트 번호가 채널 수명 동안 동일하게 유지되므로 단순히 주소입니다.</target>
        </trans-unit>
        <trans-unit id="3e1ab895eb09cd51e4ae1b72466a1c4334ab8b83" translate="yes" xml:space="preserve">
          <source>The given array controls the reordering. Call &lt;code&gt;#I&lt;/code&gt; the number of incoming coordinates (the value &lt;code&gt;newCoordinates.size()&lt;/code&gt;, and call &lt;code&gt;#O&lt;/code&gt; the number of outgoing coordinates (the number of coordinates associated with the target var handle). Then the length of the reordering array must be &lt;code&gt;#O&lt;/code&gt;, and each element must be a non-negative number less than &lt;code&gt;#I&lt;/code&gt;. For every &lt;code&gt;N&lt;/code&gt; less than &lt;code&gt;#O&lt;/code&gt;, the &lt;code&gt;N&lt;/code&gt;-th outgoing coordinate will be taken from the &lt;code&gt;I&lt;/code&gt;-th incoming coordinate, where &lt;code&gt;I&lt;/code&gt; is &lt;code&gt;reorder[N]&lt;/code&gt;.</source>
          <target state="translated">주어진 배열은 재정렬을 제어합니다. 통화 &lt;code&gt;#I&lt;/code&gt; 입력 좌표의 수 (값 &lt;code&gt;newCoordinates.size()&lt;/code&gt; , 및 호 &lt;code&gt;#O&lt;/code&gt; 출사 좌표의 수 (목표 VAR 핸들과 연관된 좌표의 수). 그 후 재정렬 배열의 길이 여야 &lt;code&gt;#O&lt;/code&gt; , 각 요소는 &lt;code&gt;#I&lt;/code&gt; 보다 작은 음이 아닌 숫자 여야합니다 . &lt;code&gt;#O&lt;/code&gt; 보다 작은 모든 &lt;code&gt;N&lt;/code&gt; 에 대해 &lt;code&gt;N&lt;/code&gt; 번째 나가는 좌표는 &lt;code&gt;I&lt;/code&gt; 번째 들어오는 좌표 에서 가져옵니다 . 여기서 &lt;code&gt;I&lt;/code&gt; 는 &lt;code&gt;reorder[N]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="183415761a8e6024f617fa5cc5c9cfc1f85baa21" translate="yes" xml:space="preserve">
          <source>The given array controls the reordering. Call &lt;code&gt;#I&lt;/code&gt; the number of incoming parameters (the value &lt;code&gt;newType.parameterCount()&lt;/code&gt;, and call &lt;code&gt;#O&lt;/code&gt; the number of outgoing parameters (the value &lt;code&gt;target.type().parameterCount()&lt;/code&gt;). Then the length of the reordering array must be &lt;code&gt;#O&lt;/code&gt;, and each element must be a non-negative number less than &lt;code&gt;#I&lt;/code&gt;. For every &lt;code&gt;N&lt;/code&gt; less than &lt;code&gt;#O&lt;/code&gt;, the &lt;code&gt;N&lt;/code&gt;-th outgoing argument will be taken from the &lt;code&gt;I&lt;/code&gt;-th incoming argument, where &lt;code&gt;I&lt;/code&gt; is &lt;code&gt;reorder[N]&lt;/code&gt;.</source>
          <target state="translated">주어진 배열은 재정렬을 제어합니다. 전화 &lt;code&gt;#I&lt;/code&gt; 입력 매개 변수의 수 (값 &lt;code&gt;newType.parameterCount()&lt;/code&gt; 및 전화 &lt;code&gt;#O&lt;/code&gt; 나가는 매개 변수의 수 (값 &lt;code&gt;target.type().parameterCount()&lt;/code&gt; ). 그런 다음 재정렬 배열의 길이가되어야합니다 &lt;code&gt;#O&lt;/code&gt; , 각각의 요소는 이하의 음이 아닌 수 있어야 &lt;code&gt;#I&lt;/code&gt; . 들어 모든 &lt;code&gt;N&lt;/code&gt; 미만 &lt;code&gt;#O&lt;/code&gt; 의 &lt;code&gt;N&lt;/code&gt; 번째 송신 인수는 찍은 것이다 &lt;code&gt;I&lt;/code&gt; 번째 수신 인수 &lt;code&gt;I&lt;/code&gt; 이 인 &lt;code&gt;reorder[N]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbb1845b2ea26cc16acea594e41d7dfdb60518bd" translate="yes" xml:space="preserve">
          <source>The given buffer's position will be advanced as deflate operations are performed, up to the buffer's limit. The input buffer may be modified (refilled) between deflate operations; doing so is equivalent to creating a new buffer and setting it with this method.</source>
          <target state="translated">deflate 작업이 수행됨에 따라 주어진 버퍼의 위치가 버퍼의 한계까지 올라갑니다. 입력 버퍼는 수축 작업 사이에 수정 (리필) 될 수 있습니다. 이렇게하는 것은 새 버퍼를 만들고이 메서드로 설정하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f9a3f14ff7292335d29497383195cfdc28cdc10e" translate="yes" xml:space="preserve">
          <source>The given buffer's position will be advanced as inflate operations are performed, up to the buffer's limit. The input buffer may be modified (refilled) between inflate operations; doing so is equivalent to creating a new buffer and setting it with this method.</source>
          <target state="translated">주어진 버퍼의 위치는 버퍼의 한계까지 팽창 작업이 수행됨에 따라 전진됩니다. 입력 버퍼는 팽창 작업 사이에 수정 (리필) 될 수 있습니다. 이렇게하는 것은 새 버퍼를 만들고이 메서드로 설정하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e9bfe10768ac8ebf123eacbeb22fa9fcfb73e5ff" translate="yes" xml:space="preserve">
          <source>The given date is first converted into a &lt;a href=&quot;../../../../java.base/java/util/gregoriancalendar&quot;&gt;&lt;code&gt;GregorianCalendar&lt;/code&gt;&lt;/a&gt;, then the duration is added exactly like the &lt;a href=&quot;#addTo(java.util.Calendar)&quot;&gt;&lt;code&gt;addTo(Calendar)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">주어진 날짜가 먼저 &lt;a href=&quot;../../../../java.base/java/util/gregoriancalendar&quot;&gt; &lt;code&gt;GregorianCalendar&lt;/code&gt; &lt;/a&gt; 로 변환 된 다음 기간이 &lt;a href=&quot;#addTo(java.util.Calendar)&quot;&gt; &lt;code&gt;addTo(Calendar)&lt;/code&gt; &lt;/a&gt; 메서드 와 똑같이 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="a2669fa211063f5b919eea48e61d97097faa78f5" translate="yes" xml:space="preserve">
          <source>The given file descriptor is a socket or resource that can be multiplexed by a &lt;a href=&quot;../../../java.base/java/nio/channels/selector&quot;&gt;&lt;code&gt;Selector&lt;/code&gt;&lt;/a&gt; for read and write readiness. Great care is required to coordinate direct use of the file descriptor with the use of the selectable channel. In particular, changing the blocking mode or closing the file descriptor without careful coordination will result in unspecified and unsafe side effects. The given &lt;a href=&quot;channels.selectablechannelcloser&quot;&gt;&lt;code&gt;SelectableChannelCloser&lt;/code&gt;&lt;/a&gt; is invoked to close the file descriptor and to coordinate the closing when the channel is registered with a &lt;code&gt;Selector&lt;/code&gt;.</source>
          <target state="translated">주어진 파일 설명자는 읽기 및 쓰기 준비를 위해 &lt;a href=&quot;../../../java.base/java/nio/channels/selector&quot;&gt; &lt;code&gt;Selector&lt;/code&gt; &lt;/a&gt; 에 의해 다중화 될 수있는 소켓 또는 리소스입니다 . 선택 가능한 채널을 사용하여 파일 설명 자의 직접 사용을 조정하려면 세심한주의가 필요합니다. 특히, 신중한 조정없이 차단 모드를 변경하거나 파일 설명자를 닫으면 지정되지 않고 안전하지 않은 부작용이 발생합니다. 주어진 &lt;a href=&quot;channels.selectablechannelcloser&quot;&gt; &lt;code&gt;SelectableChannelCloser&lt;/code&gt; &lt;/a&gt; 가 호출되어 파일 설명자를 닫고 채널이 &lt;code&gt;Selector&lt;/code&gt; 에 등록 될 때 닫힘을 조정합니다 .</target>
        </trans-unit>
        <trans-unit id="703c48b1d2340b04df1d9cc4e78601063cf33268" translate="yes" xml:space="preserve">
          <source>The given group of events are all delivered as method calls on a single event listener interface, and an event listener object can be registered via a call on a registration method supplied by the event source.</source>
          <target state="translated">지정된 이벤트 그룹은 모두 단일 이벤트 리스너 인터페이스에서 메소드 호출로 전달되며 이벤트 소스에서 제공 한 등록 메소드에 대한 호출을 통해 이벤트 리스너 오브젝트를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffdfa6782f35f4a8c141a6192add2493234091aa" translate="yes" xml:space="preserve">
          <source>The given object is serialized, and its serialized contents are encrypted using the given Cipher, which must be fully initialized.</source>
          <target state="translated">주어진 객체는 직렬화되고, 그 직렬화 된 내용은 주어진 암호를 사용하여 암호화되며, 이는 완전히 초기화되어야합니다.</target>
        </trans-unit>
        <trans-unit id="de74a14f86936f74a5695e46c440b16e67204567" translate="yes" xml:space="preserve">
          <source>The given path</source>
          <target state="translated">주어진 경로</target>
        </trans-unit>
        <trans-unit id="b968d9519c241838e51d4b5e19a88c965c3b01c5" translate="yes" xml:space="preserve">
          <source>The glass pane that overlays the menu bar and content pane, so it can intercept mouse movements and such.</source>
          <target state="translated">메뉴 표시 줄과 콘텐츠 창을 오버레이하여 마우스 움직임 등을 차단할 수있는 유리 창입니다.</target>
        </trans-unit>
        <trans-unit id="412d8e28acf0ec16e743068cdcad9991d5b8f647" translate="yes" xml:space="preserve">
          <source>The glassPane is always the first child of the rootPane and the rootPanes layout manager ensures that it's always as big as the rootPane.</source>
          <target state="translated">glassPane은 항상 rootPane의 첫 번째 자식이며 rootPanes 레이아웃 관리자는 항상 rootPane만큼 큰지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4f04c45ec6f21be9a6ef279ec08ebbf197fbfb99" translate="yes" xml:space="preserve">
          <source>The glassPane is always the first child of the rootPane and the rootPanes layout manager ensures that it's always as big as the rootPane. By default it's transparent and not visible. It can be used to temporarily grab all keyboard and mouse input by adding listeners and then making it visible. by default it's not visible.</source>
          <target state="translated">glassPane은 항상 rootPane의 첫 번째 자식이며 rootPanes 레이아웃 관리자는 항상 rootPane만큼 큰지 확인합니다. 기본적으로 투명하고 보이지 않습니다. 리스너를 추가 한 다음 표시되도록하여 모든 키보드 및 마우스 입력을 일시적으로 잡는 데 사용할 수 있습니다. 기본적으로 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3e10fe916d4ec191f5b418cccb11905a2a6833b2" translate="yes" xml:space="preserve">
          <source>The glassPane may not be null.</source>
          <target state="translated">glassPane은 null 일 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2d8a013ff12d3a4688960660289fa06921be7c57" translate="yes" xml:space="preserve">
          <source>The global LogManager object can be retrieved using LogManager.getLogManager(). The LogManager object is created during class initialization and cannot subsequently be changed.</source>
          <target state="translated">전역 LogManager 객체는 LogManager.getLogManager ()를 사용하여 검색 할 수 있습니다. LogManager 객체는 클래스 초기화 중에 만들어지며 나중에 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="48c726674f74cb2aff8847caf7527cd3e0074a2a" translate="yes" xml:space="preserve">
          <source>The global logging properties may include:</source>
          <target state="translated">글로벌 로깅 특성에는 다음이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e07a1d0c0f4cd0a58eb556541bb0061d79fff226" translate="yes" xml:space="preserve">
          <source>The globalScope field.</source>
          <target state="translated">globalScope 필드</target>
        </trans-unit>
        <trans-unit id="614b07111296fa1da1685c16997f9ec374711d10" translate="yes" xml:space="preserve">
          <source>The globbing pattern is specified by the &lt;a href=&quot;filesystem#getPathMatcher(java.lang.String)&quot;&gt;&lt;code&gt;getPathMatcher&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">globbing 패턴은 &lt;a href=&quot;filesystem#getPathMatcher(java.lang.String)&quot;&gt; &lt;code&gt;getPathMatcher&lt;/code&gt; &lt;/a&gt; 메소드에 의해 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="11f1f51aa9771116b126b51dc32fcfd9d04831e3" translate="yes" xml:space="preserve">
          <source>The globbing pattern is specified by the &lt;a href=&quot;filesystem#getPathMatcher-java.lang.String-&quot;&gt;&lt;code&gt;getPathMatcher&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">globbing 패턴은 &lt;a href=&quot;filesystem#getPathMatcher-java.lang.String-&quot;&gt; &lt;code&gt;getPathMatcher&lt;/code&gt; &lt;/a&gt; 메소드에 의해 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="8937687f2af88776c3e820a3f8d7c35d4bb55dfc" translate="yes" xml:space="preserve">
          <source>The granularity period value.</source>
          <target state="translated">입도 기간 값입니다.</target>
        </trans-unit>
        <trans-unit id="88e6210bb5ce3e1e84b64575d362a93f604005d7" translate="yes" xml:space="preserve">
          <source>The granularity period.</source>
          <target state="translated">입도 기간.</target>
        </trans-unit>
        <trans-unit id="3e7ff380b27ec8c38c90275d8ecac31281874ca9" translate="yes" xml:space="preserve">
          <source>The graphics pen hangs down and to the right from the path it traverses. This has the following implications:</source>
          <target state="translated">그래픽 펜은 가로 지르는 경로에서 오른쪽으로 내려갑니다. 이는 다음과 같은 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="723895853cbff24dde1cc72d06cadbb85beecc13" translate="yes" xml:space="preserve">
          <source>The green color component for the specified pixel, as an int.</source>
          <target state="translated">지정된 픽셀의 녹색 구성 요소 (int)입니다.</target>
        </trans-unit>
        <trans-unit id="7c23969a8a14098cef3bce5066ad65abcb50383e" translate="yes" xml:space="preserve">
          <source>The grid bag layout manager calculates the weight of a column to be the maximum &lt;code&gt;weightx&lt;/code&gt; of all the components in a column. If the resulting layout is smaller horizontally than the area it needs to fill, the extra space is distributed to each column in proportion to its weight. A column that has a weight of zero receives no extra space.</source>
          <target state="translated">그리드 백 레이아웃 매니저의 산출은 열 중량은 최대 될 &lt;code&gt;weightx&lt;/code&gt; 에는 열의 모든 성분. 결과 레이아웃이 채워야하는 영역보다 가로로 작 으면 추가 공간이 가중치에 비례하여 각 열에 분배됩니다. 가중치가 0 인 열은 추가 공간을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8f43b14e04b0e22ba8891acef9690c7eec87a07a" translate="yes" xml:space="preserve">
          <source>The grid bag layout manager calculates the weight of a row to be the maximum &lt;code&gt;weighty&lt;/code&gt; of all the components in a row. If the resulting layout is smaller vertically than the area it needs to fill, the extra space is distributed to each row in proportion to its weight. A row that has a weight of zero receives no extra space.</source>
          <target state="translated">그리드 백 레이아웃 매니저 계산은 행의 웨이트가 최대 될 &lt;code&gt;weighty&lt;/code&gt; 행의 모든 구성 요소. 결과 레이아웃이 채워야하는 영역보다 세로로 작 으면 추가 공간이 가중치에 비례하여 각 행에 분배됩니다. 가중치가 0 인 행은 추가 공간을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="62963bc885a16c1c6378b24168b5de920f7d93ae" translate="yes" xml:space="preserve">
          <source>The grid layout manager determines the size of individual components by dividing the free space in the container into equal-sized portions according to the number of rows and columns in the layout. The container's free space equals the container's size minus any insets and any specified horizontal or vertical gap. All components in a grid layout are given the same size.</source>
          <target state="translated">그리드 레이아웃 관리자는 레이아웃의 행 및 열 수에 따라 컨테이너의 여유 공간을 동일한 크기로 나누어 개별 구성 요소의 크기를 결정합니다. 컨테이너의 여유 공간은 컨테이너 크기에서 삽입 및 지정된 가로 또는 세로 간격을 뺀 값과 같습니다. 그리드 레이아웃의 모든 구성 요소에는 동일한 크기가 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="a05f1c35a99276ca35fd8caa96c11ab7eac6e202" translate="yes" xml:space="preserve">
          <source>The group class specified by the &lt;code&gt;ActivationGroupDesc&lt;/code&gt; must be a concrete subclass of &lt;code&gt;ActivationGroup&lt;/code&gt; and have a public constructor that takes two arguments: the &lt;code&gt;ActivationGroupID&lt;/code&gt; for the group and the &lt;code&gt;MarshalledObject&lt;/code&gt; containing the group's initialization data (obtained from the &lt;code&gt;ActivationGroupDesc&lt;/code&gt;.</source>
          <target state="translated">에 의해 지정된 그룹 클래스 &lt;code&gt;ActivationGroupDesc&lt;/code&gt; 의 구상 서브 클래스해야 &lt;code&gt;ActivationGroup&lt;/code&gt; 에 두 개의 인수를 취하는 public 생성자가 다음 &lt;code&gt;ActivationGroupID&lt;/code&gt; 가 그룹에 대한과 &lt;code&gt;MarshalledObject&lt;/code&gt; 를 으로부터 얻은 그룹의 초기화 데이터를 포함하는 ( &lt;code&gt;ActivationGroupDesc&lt;/code&gt; 을을 .</target>
        </trans-unit>
        <trans-unit id="b8d143fbb62153c3ebf6cbe3c8f7181648a688c3" translate="yes" xml:space="preserve">
          <source>The group is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup(int,java.util.concurrent.ThreadFactory)&quot;&gt;&lt;code&gt;openAsynchronousChannelGroup(int,ThreadFactory)&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">그룹은 시스템 전체의 기본 &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt; 개체 의 &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup(int,java.util.concurrent.ThreadFactory)&quot;&gt; &lt;code&gt;openAsynchronousChannelGroup(int,ThreadFactory)&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="3ef4aa9627a0f046f2c95daeb5ba3437a2bd14bf" translate="yes" xml:space="preserve">
          <source>The group is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup(java.util.concurrent.ExecutorService,int)&quot;&gt;&lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; object with an &lt;code&gt;
 initialSize&lt;/code&gt; of &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">그룹은 &lt;code&gt; initialSize&lt;/code&gt; 가 &lt;code&gt;0&lt;/code&gt; 인 시스템 전체 기본 &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup(java.util.concurrent.ExecutorService,int)&quot;&gt; &lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="9469ed0e693a80454bdf5043689f5531bc9a80f6" translate="yes" xml:space="preserve">
          <source>The group is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup(java.util.concurrent.ExecutorService,int)&quot;&gt;&lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">그룹은 시스템 전체의 기본 &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt; 개체 의 &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup(java.util.concurrent.ExecutorService,int)&quot;&gt; &lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="3420277017038a0f3a7a8735146a1a372f94b576" translate="yes" xml:space="preserve">
          <source>The group is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup-int-java.util.concurrent.ThreadFactory-&quot;&gt;&lt;code&gt;openAsynchronousChannelGroup(int,ThreadFactory)&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">그룹은 시스템 전체 기본 &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup-int-java.util.concurrent.ThreadFactory-&quot;&gt; &lt;code&gt;openAsynchronousChannelGroup(int,ThreadFactory)&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="cb720d2e33987d2cf50e3dfc5d3cb6091f00a40a" translate="yes" xml:space="preserve">
          <source>The group is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup-java.util.concurrent.ExecutorService-int-&quot;&gt;&lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; object with an &lt;code&gt;initialSize&lt;/code&gt; of &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">그룹이 호출에 의해 생성된다 &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup-java.util.concurrent.ExecutorService-int-&quot;&gt; &lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt; &lt;/a&gt; 시스템 전체의 기본 방법 &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; 의&lt;/a&gt; 와 오브젝트 &lt;code&gt;initialSize&lt;/code&gt; 가 의 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="667fea1471914e720a235f53da83ac53eff12116" translate="yes" xml:space="preserve">
          <source>The group is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup-java.util.concurrent.ExecutorService-int-&quot;&gt;&lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">그룹은 시스템 전체 기본 &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup-java.util.concurrent.ExecutorService-int-&quot;&gt; &lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="6e2250b894087a5132f38c73310c0171daccc227" translate="yes" xml:space="preserve">
          <source>The group's &lt;code&gt;activeObject&lt;/code&gt; method is called when an object is exported (either by &lt;code&gt;Activatable&lt;/code&gt; object construction or an explicit call to &lt;code&gt;Activatable.exportObject&lt;/code&gt;.</source>
          <target state="translated">그룹의 &lt;code&gt;activeObject&lt;/code&gt; 객체가 하나가 (내보낼 때 메소드가 불려 &lt;code&gt;Activatable&lt;/code&gt; 객체 생성 또는 명시 적으로 호출 &lt;code&gt;Activatable.exportObject&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6c08c796fba887f0b99267de419a44fc4004d94" translate="yes" xml:space="preserve">
          <source>The group's &lt;code&gt;activeObject&lt;/code&gt; method is called when an object is exported (either by &lt;code&gt;Activatable&lt;/code&gt; object construction or an explicit call to &lt;code&gt;Activatable.exportObject&lt;/code&gt;. The group must inform its &lt;code&gt;ActivationMonitor&lt;/code&gt; that the object is active (via the monitor's &lt;code&gt;activeObject&lt;/code&gt; method) if the group hasn't already done so.</source>
          <target state="translated">그룹의 &lt;code&gt;activeObject&lt;/code&gt; 객체가 하나가 (내보낼 때 메소드가 불려 &lt;code&gt;Activatable&lt;/code&gt; 객체 생성 또는 명시 적으로 호출 &lt;code&gt;Activatable.exportObject&lt;/code&gt; . 그룹은 알려야합니다 &lt;code&gt;ActivationMonitor&lt;/code&gt; 에 모니터의를 통해 개체가 활성화되어 있음을 ( &lt;code&gt;activeObject&lt;/code&gt; 방법) 그룹이없는 경우 이미 그렇게했습니다.</target>
        </trans-unit>
        <trans-unit id="d73a5b7197d40972e24fd4eed83fd8cd74b216ed" translate="yes" xml:space="preserve">
          <source>The group's &lt;code&gt;inactiveObject&lt;/code&gt; method is called indirectly via a call to the &lt;code&gt;Activatable.inactive&lt;/code&gt; method.</source>
          <target state="translated">그룹의 &lt;code&gt;inactiveObject&lt;/code&gt; 메서드는 &lt;code&gt;Activatable.inactive&lt;/code&gt; 메서드에 대한 호출을 통해 간접적으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="6c2f105092e0c22983019ddce538cb9fe51ed770" translate="yes" xml:space="preserve">
          <source>The group's &lt;code&gt;inactiveObject&lt;/code&gt; method is called indirectly via a call to the &lt;code&gt;Activatable.inactive&lt;/code&gt; method. A remote object implementation must call &lt;code&gt;Activatable&lt;/code&gt;'s &lt;code&gt;inactive&lt;/code&gt; method when that object deactivates (the object deems that it is no longer active). If the object does not call &lt;code&gt;Activatable.inactive&lt;/code&gt; when it deactivates, the object will never be garbage collected since the group keeps strong references to the objects it creates.</source>
          <target state="translated">그룹의 &lt;code&gt;inactiveObject&lt;/code&gt; 메서드는 &lt;code&gt;Activatable.inactive&lt;/code&gt; 메서드에 대한 호출을 통해 간접적으로 호출됩니다 . 원격 객체 구현은 해당 객체가 비활성화 될 때 &lt;code&gt;Activatable&lt;/code&gt; 의 &lt;code&gt;inactive&lt;/code&gt; 메서드를 호출해야합니다 (객체가 더 이상 활성화되지 않은 것으로 간주). 개체가 비활성화 될 때 &lt;code&gt;Activatable.inactive&lt;/code&gt; 를 호출하지 않으면 그룹이 생성하는 개체에 대한 강력한 참조를 유지하므로 개체가 가비지 수집되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="124ca13d7a74c7c5f766edfca03e78ec4af2f050" translate="yes" xml:space="preserve">
          <source>The group's &lt;code&gt;inactiveObject&lt;/code&gt; method unexports the remote object from the RMI runtime so that the object can no longer receive incoming RMI calls. An object will only be unexported if the object has no pending or executing calls. The subclass of &lt;code&gt;ActivationGroup&lt;/code&gt; must override this method and unexport the object.</source>
          <target state="translated">그룹의 &lt;code&gt;inactiveObject&lt;/code&gt; 메서드는 RMI 런타임에서 원격 개체를 내 보내지 않으므로 개체가 더 이상 들어오는 RMI 호출을받을 수 없습니다. 개체에 보류 중이거나 실행중인 호출이없는 경우에만 개체 내보내기가 취소됩니다. &lt;code&gt;ActivationGroup&lt;/code&gt; 의 하위 클래스는 이 메서드를 재정의하고 개체 내보내기를 취소해야합니다.</target>
        </trans-unit>
        <trans-unit id="57f544dce5daf7bc7ce9da00546c7d127d8ac783" translate="yes" xml:space="preserve">
          <source>The group's class must be a concrete subclass of &lt;code&gt;ActivationGroup&lt;/code&gt;. A subclass of &lt;code&gt;ActivationGroup&lt;/code&gt; is created/recreated via the &lt;code&gt;ActivationGroup.createGroup&lt;/code&gt; static method that invokes a special constructor that takes two arguments:</source>
          <target state="translated">그룹의 클래스는 &lt;code&gt;ActivationGroup&lt;/code&gt; 의 구체적인 하위 클래스 여야합니다 . &lt;code&gt;ActivationGroup&lt;/code&gt; 의 하위 클래스 는 두 개의 인수를 사용하는 특수 생성자를 호출하는 &lt;code&gt;ActivationGroup.createGroup&lt;/code&gt; 정적 메서드를 통해 생성 / 다시 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="ac647a1b50a49dce6768605287c17212490f6461" translate="yes" xml:space="preserve">
          <source>The grouping separator is commonly used for thousands, but in some countries it separates ten-thousands. The grouping size is a constant number of digits between the grouping characters, such as 3 for 100,000,000 or 4 for 1,0000,0000. If you supply a pattern with multiple grouping characters, the interval between the last one and the end of the integer is the one that is used. So &lt;code&gt;&quot;#,##,###,####&quot;&lt;/code&gt; == &lt;code&gt;&quot;######,####&quot;&lt;/code&gt; == &lt;code&gt;&quot;##,####,####&quot;&lt;/code&gt;.</source>
          <target state="translated">그룹화 구분 기호는 일반적으로 수천 명에 사용되지만 일부 국가에서는 10 만 개를 분리합니다. 그룹화 크기는 그룹화 문자 사이의 일정한 자릿수입니다 (예 : 100,000,000의 경우 3 또는 1,0000,0000의 경우 4). 여러 그룹화 문자가있는 패턴을 제공하는 경우 마지막 문자와 정수 끝 사이의 간격이 사용됩니다. 따라서 &lt;code&gt;&quot;#,##,###,####&quot;&lt;/code&gt; == &lt;code&gt;&quot;######,####&quot;&lt;/code&gt; == &lt;code&gt;&quot;##,####,####&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9e203381ec812362ab8d65d07cf7bfbb629c7170" translate="yes" xml:space="preserve">
          <source>The hand cursor type.</source>
          <target state="translated">손 모양 커서 유형입니다.</target>
        </trans-unit>
        <trans-unit id="2e399af2306df289e2ac126c697d6fbbe53bf6db" translate="yes" xml:space="preserve">
          <source>The handler can be used to display signing progress. The first argument of the handler can be &quot;adding&quot;, &quot;signing&quot;, or &quot;updating&quot;, and the second argument is the name of the &lt;a href=&quot;../../../../java.base/java/util/jar/jarentry&quot;&gt;&lt;code&gt;JarEntry&lt;/code&gt;&lt;/a&gt; being processed.</source>
          <target state="translated">처리기를 사용하여 서명 진행률을 표시 할 수 있습니다. 핸들러의 첫 번째 인수는 &quot;adding&quot;, &quot;signing&quot;또는 &quot;updating&quot;일 수 있으며 두 번째 인수는 처리중인 &lt;a href=&quot;../../../../java.base/java/util/jar/jarentry&quot;&gt; &lt;code&gt;JarEntry&lt;/code&gt; &lt;/a&gt; 의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="89402ca5ad0597f8dbdad36841cfa4d2b81a828f" translate="yes" xml:space="preserve">
          <source>The handler result</source>
          <target state="translated">핸들러 결과</target>
        </trans-unit>
        <trans-unit id="9e390f031711c2f4bfa840a906c0f567e1f9980d" translate="yes" xml:space="preserve">
          <source>The handler to fire &lt;code&gt;PropertyChange&lt;/code&gt; when children are added or removed</source>
          <target state="translated">자식이 추가되거나 제거 될 때 &lt;code&gt;PropertyChange&lt;/code&gt; 를 실행하는 핸들러</target>
        </trans-unit>
        <trans-unit id="6ceafe9eefbcc97f4f7bb8454227163eadbde95e" translate="yes" xml:space="preserve">
          <source>The handlers need to be registered differently than core SAX2 handlers.</source>
          <target state="translated">핸들러는 코어 SAX2 핸들러와 다르게 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="1c2a58b3d6792b3317ea94e3204b0c17ef5386eb" translate="yes" xml:space="preserve">
          <source>The hardware's minimum margins is not just a property of the printer, but may be a function of the media size, orientation, media type, and any specified finishings. &lt;code&gt;PrintService&lt;/code&gt; provides the method to query the supported values of an attribute in a suitable context : See &lt;a href=&quot;../../printservice#getSupportedAttributeValues(java.lang.Class,javax.print.DocFlavor,javax.print.attribute.AttributeSet)&quot;&gt;&lt;code&gt;PrintService.getSupportedAttributeValues()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">하드웨어의 최소 여백은 프린터의 속성 일뿐만 아니라 용지 크기, 방향, 용지 유형 및 지정된 마감의 기능 일 수 있습니다. &lt;code&gt;PrintService&lt;/code&gt; 는 적절한 컨텍스트에서 지원되는 속성 값을 쿼리하는 메소드를 제공합니다. &lt;a href=&quot;../../printservice#getSupportedAttributeValues(java.lang.Class,javax.print.DocFlavor,javax.print.attribute.AttributeSet)&quot;&gt; &lt;code&gt;PrintService.getSupportedAttributeValues()&lt;/code&gt; &lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a3f7c4e20300c4bd0cb6b80a481daa7faae00611" translate="yes" xml:space="preserve">
          <source>The hardware's minimum margins is not just a property of the printer, but may be a function of the media size, orientation, media type, and any specified finishings. &lt;code&gt;PrintService&lt;/code&gt; provides the method to query the supported values of an attribute in a suitable context : See &lt;a href=&quot;../../printservice#getSupportedAttributeValues-java.lang.Class-javax.print.DocFlavor-javax.print.attribute.AttributeSet-&quot;&gt;&lt;code&gt;PrintService.getSupportedAttributeValues()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">하드웨어의 최소 여백은 프린터의 속성 일뿐만 아니라 용지 크기, 방향, 용지 종류 및 지정된 마무리 기능에 따라 달라질 수 있습니다. &lt;code&gt;PrintService&lt;/code&gt; 는 적절한 컨텍스트에서 지원되는 속성 값을 쿼리하는 메소드를 제공합니다. &lt;a href=&quot;../../printservice#getSupportedAttributeValues-java.lang.Class-javax.print.DocFlavor-javax.print.attribute.AttributeSet-&quot;&gt; &lt;code&gt;PrintService.getSupportedAttributeValues()&lt;/code&gt; &lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e3593586b61594b848850102afa86c46baa3924d" translate="yes" xml:space="preserve">
          <source>The hash code for all Key objects will be the same as the system identity code of the object as defined by the System.identityHashCode() method.</source>
          <target state="translated">모든 Key 객체의 해시 코드는 System.identityHashCode () 메서드에 정의 된 객체의 시스템 식별 코드와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="b9538c39f3494d1f790686c158fa3908b95b519b" translate="yes" xml:space="preserve">
          <source>The hash code is based upon all the URL components relevant for URL comparison. As such, this operation is a blocking operation.</source>
          <target state="translated">해시 코드는 URL 비교와 관련된 모든 URL 구성 요소를 기반으로합니다. 따라서이 작업은 차단 작업입니다.</target>
        </trans-unit>
        <trans-unit id="a5c2024fe4050877867d89922aa9b09bc82dfb20" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the HTTP request's URI, method, and header components, and satisfies the general contract of the &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">해시 코드는 HTTP 요청의 URI, 메서드 및 헤더 구성 요소를 기반으로하며 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="e3f3e47f47400fca462141e06519982515ce787c" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the components of the HTTP headers &lt;a href=&quot;#map()&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;, and satisfies the general contract of the &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">해시 코드는 HTTP 헤더 &lt;a href=&quot;#map()&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; 의 구성 요소를 기반으로 하며 &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="c81905bd6ef34df1f977640dbc61ad6cbd9b17f8" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the components of the module descriptor, and satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">해시 코드는 모듈 디스크립터의 구성 요소를 기반으로하며 &lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="9c7a51541cedfde643d056814ad4ce3abbbb0eaa" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the components of the path, and satisfies the general contract of the &lt;a href=&quot;../../lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">해시 코드는 경로의 구성 요소를 기반으로하며 &lt;a href=&quot;../../lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="c70cace9970285dcf9cdf6965c3562c7040cae45" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the components of the path, and satisfies the general contract of the &lt;a href=&quot;../../lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">해시 코드는 경로의 구성 요소를 기반으로하며 &lt;a href=&quot;../../lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="c4ec5d189ec2537f7c907fffdd7ad0083085f874" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the components of the resolved module and satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">해시 코드는 해결 된 모듈의 구성 요소를 기반으로하며 &lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="fa2977c7551c3b7d38be1c6d1be86b0cbd62c47e" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the components of the version and satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">해시 코드는 버전의 구성 요소를 기반으로하며 &lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="61140f4c5245ba4be6ecd12e21b340b8892094f7" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the modifiers, the package name, and for a qualified &lt;code&gt;Opens&lt;/code&gt;, the set of modules names to which the package is opened. It satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">해시 코드는 수정 자, 패키지 이름 및 정규화 된 &lt;code&gt;Opens&lt;/code&gt; 의 경우 패키지가 열리는 모듈 이름 집합을 기반으로합니다 . &lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 만족합니다 .</target>
        </trans-unit>
        <trans-unit id="5e44998c3ec183e48a635b08c7350554dddf8c6e" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the modifiers, the package name, and for a qualified export, the set of modules names to which the package is exported. It satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">해시 코드는 수정 자, 패키지 이름 및 정규화 된 내보내기의 경우 패키지를 내보낼 모듈 이름 세트를 기반으로합니다. &lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 만족합니다 .</target>
        </trans-unit>
        <trans-unit id="6349242e9ab13a1bb0fff5815b5cb8074fa442f7" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the modifiers, the package name, and for a qualified opens, the set of modules names to which the package is opened. It satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">The hash code is based upon the modifiers, the package name, and for a qualified opens, the set of modules names to which the package is opened. It satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="ca41094bb8dc7dca77e1e03bc7515b00e704557c" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the module name, modifiers, and the module version if recorded at compile time. It satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">The hash code is based upon the module name, modifiers, and the module version if recorded at compile time. It satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="9852bb81d4ee7252a48ab651f1d8b4ad3b8ad54c" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the service type and the set of providers. It satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">The hash code is based upon the service type and the set of providers. It satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="77caf5a9c1f81f08c3bdcb2c937a75e2a0ca688a" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the value represented, and satisfies the general contract of the &lt;a href=&quot;../../../lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">The hash code is based upon the value represented, and satisfies the general contract of the &lt;a href=&quot;../../../lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="c527b264eac325d09725ecb4874d7a3ee1aba8e2" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the value represented, and satisfies the general contract of the &lt;a href=&quot;../../../lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">해시 코드는 표시된 값을 기반으로하며 &lt;a href=&quot;../../../lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 메서드 의 일반 계약을 충족합니다 .</target>
        </trans-unit>
        <trans-unit id="3b1c8cc2dac12696b4358157a1e4151ba43bfe5e" translate="yes" xml:space="preserve">
          <source>The hash code is calculated using both the Namespace URI and the local part of the &lt;code&gt;QName&lt;/code&gt;. The prefix is &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; used to calculate the hash code.</source>
          <target state="translated">The hash code is calculated using both the Namespace URI and the local part of the &lt;code&gt;QName&lt;/code&gt; . The prefix is &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; used to calculate the hash code.</target>
        </trans-unit>
        <trans-unit id="6aaf165addd90a50c9183a3d2875d6a72cb1ef7a" translate="yes" xml:space="preserve">
          <source>The hash code is calculated via: &lt;code&gt;getName(X500Principal.CANONICAL).hashCode()&lt;/code&gt;</source>
          <target state="translated">해시 코드는 &lt;code&gt;getName(X500Principal.CANONICAL).hashCode()&lt;/code&gt; 를 통해 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="0ba358f7e4c5629a504cdd4a1c1f292ba74a0a9d" translate="yes" xml:space="preserve">
          <source>The hash code is computed by adding the hash code of the attribute's id and that of all of its values except for values that are arrays. For an array, the hash code of each element of the array is summed. If a subclass overrides &lt;code&gt;hashCode()&lt;/code&gt;, it should override &lt;code&gt;equals()&lt;/code&gt; as well so that two attributes that are equal have the same hash code.</source>
          <target state="translated">해시 코드는 배열의 값을 제외하고 속성의 id 및 모든 값의 해시 코드를 추가하여 계산됩니다. 배열의 경우 배열의 각 요소의 해시 코드가 합산됩니다. 서브 클래스가 &lt;code&gt;hashCode()&lt;/code&gt; 를 대체 하는 경우 동일한 두 속성이 동일한 해시 코드를 갖도록 &lt;code&gt;equals()&lt;/code&gt; 를 대체해야 합니다.</target>
        </trans-unit>
        <trans-unit id="280b797559d043d8daa32c7b2b5ee41ca3702e4d" translate="yes" xml:space="preserve">
          <source>The hash code is computed by adding the hash code of the attributes of this object. If this BasicAttributes ignores case of its attribute IDs, one is added to the hash code. If a subclass overrides &lt;code&gt;hashCode()&lt;/code&gt;, it should override &lt;code&gt;equals()&lt;/code&gt; as well so that two &lt;code&gt;Attributes&lt;/code&gt; instances that are equal have the same hash code.</source>
          <target state="translated">해시 코드는이 객체 속성의 해시 코드를 추가하여 계산됩니다. 이 BasicAttributes가 속성 ID의 대소 문자를 무시하면 해시 코드에 추가됩니다. 서브 클래스가 &lt;code&gt;hashCode()&lt;/code&gt; 대체하는 경우, &lt;code&gt;equals()&lt;/code&gt; 두 개의 &lt;code&gt;Attributes&lt;/code&gt; 인스턴스가 동일한 해시 코드를 갖도록 equals () 를 대체해야 합니다.</target>
        </trans-unit>
        <trans-unit id="bbaead227f6f55e6d05891b8aa6b6409429186cb" translate="yes" xml:space="preserve">
          <source>The hash code is defined to be the result of the following calculation:</source>
          <target state="translated">해시 코드는 다음 계산 결과로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="bbd08498997ed584941a561e6db8ab3f78bf82c2" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;CompositeData&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its</source>
          <target state="translated">a의 해시 코드 &lt;code&gt;CompositeData&lt;/code&gt; 인스턴스에 사용되는 모든 정보 요소의 해시 코드의 합계 것은 &lt;code&gt;equals&lt;/code&gt; 비교 (예 : 그</target>
        </trans-unit>
        <trans-unit id="d55d18b3e39ef2ab73da42191dee5a25b8360e6e" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;CompositeDataSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its</source>
          <target state="translated">a의 해시 코드 &lt;code&gt;CompositeDataSupport&lt;/code&gt; 의 인스턴스에 사용되는 모든 정보 요소의 해시 코드의 합계 것은 &lt;code&gt;equals&lt;/code&gt; 비교 (예 : 그</target>
        </trans-unit>
        <trans-unit id="36175eae8ecdd8a6b3c7d59f2ed00a2a5791d061" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;CompositeType&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: name, items names, items types). This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;CompositeType&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The hash code of a &lt;code&gt;CompositeType&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: name, items names, items types). This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;CompositeType&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt; , as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="23d71a4647e5d7c762e18b1c5f72a5feccc76928" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;CompositeType&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: name, items names, items types). This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;CompositeType&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">a의 해시 코드 &lt;code&gt;CompositeType&lt;/code&gt; 인스턴스에 사용되는 모든 정보 요소의 해시 코드의 합계입니다 &lt;code&gt;equals&lt;/code&gt; (이름, 항목 이름, 항목 유형 예) 비교. 이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 임의의 두 &lt;code&gt;CompositeType&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d318826cde719be40f380791a8f546b82ed80cd5" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;TabularData&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its</source>
          <target state="translated">a의 해시 코드 &lt;code&gt;TabularData&lt;/code&gt; 의 인스턴스에 사용되는 모든 정보 요소의 해시 코드의 합계 것은 &lt;code&gt;equals&lt;/code&gt; 비교 (예 : 그</target>
        </trans-unit>
        <trans-unit id="7be5b5cc6924ee6b06115e4c236b4aa63d3a3653" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;TabularDataSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its</source>
          <target state="translated">a의 해시 코드 &lt;code&gt;TabularDataSupport&lt;/code&gt; 인스턴스에 사용되는 모든 정보 요소의 해시 코드의 합계 것은 &lt;code&gt;equals&lt;/code&gt; 비교 (예 : 그</target>
        </trans-unit>
        <trans-unit id="94f2e24e0d4aa6700c323efa861df2a2f7da5988" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;TabularType&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: name, row type, index names). This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;TabularType&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The hash code of a &lt;code&gt;TabularType&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: name, row type, index names). This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;TabularType&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt; , as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="247a077ccfc174f8e6662782ad271b4b18c19d87" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;TabularType&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: name, row type, index names). This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;TabularType&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">a의 해시 코드 &lt;code&gt;TabularType&lt;/code&gt; 인스턴스에 사용되는 모든 정보 요소의 해시 코드의 합계 것은 &lt;code&gt;equals&lt;/code&gt; (이름, 행의 형태, 인덱스 이름 예) 비교. 이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 두 용 &lt;code&gt;TabularType&lt;/code&gt; 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="870f42492879e018456513ed48f2e9081dd2adc9" translate="yes" xml:space="preserve">
          <source>The hash code of a byte buffer depends only upon its remaining elements; that is, upon the elements from &lt;code&gt;position()&lt;/code&gt; up to, and including, the element at &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">바이트 버퍼의 해시 코드는 나머지 요소에만 의존합니다. 즉, 상기의 요소에, 인 &lt;code&gt;position()&lt;/code&gt; 까지, 및 포함의 요소 &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae060928fbf5519b2c2adaf53bf19772feaa56c3" translate="yes" xml:space="preserve">
          <source>The hash code of a char buffer depends only upon its remaining elements; that is, upon the elements from &lt;code&gt;position()&lt;/code&gt; up to, and including, the element at &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">char 버퍼의 해시 코드는 나머지 요소에만 의존합니다. 즉, 상기의 요소에, 인 &lt;code&gt;position()&lt;/code&gt; 까지, 및 포함의 요소 &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e856bea9bb9b618831e36d6cb05e907153d7b262" translate="yes" xml:space="preserve">
          <source>The hash code of a double buffer depends only upon its remaining elements; that is, upon the elements from &lt;code&gt;position()&lt;/code&gt; up to, and including, the element at &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">이중 버퍼의 해시 코드는 나머지 요소에만 의존합니다. 즉, 상기의 요소에, 인 &lt;code&gt;position()&lt;/code&gt; 까지, 및 포함의 요소 &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77547da71388901473497d1b6c4f94fc525f313f" translate="yes" xml:space="preserve">
          <source>The hash code of a float buffer depends only upon its remaining elements; that is, upon the elements from &lt;code&gt;position()&lt;/code&gt; up to, and including, the element at &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">플로트 버퍼의 해시 코드는 나머지 요소에만 의존합니다. 즉, 상기의 요소에, 인 &lt;code&gt;position()&lt;/code&gt; 까지, 및 포함의 요소 &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7daacfd0664bde6221147f25fc4590d2f02384b5" translate="yes" xml:space="preserve">
          <source>The hash code of a int buffer depends only upon its remaining elements; that is, upon the elements from &lt;code&gt;position()&lt;/code&gt; up to, and including, the element at &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">int 버퍼의 해시 코드는 나머지 요소에만 의존합니다. 즉, 상기의 요소에, 인 &lt;code&gt;position()&lt;/code&gt; 까지, 및 포함의 요소 &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="448d49d6ad775b6519c9d1b6671194f14b98ec77" translate="yes" xml:space="preserve">
          <source>The hash code of a long buffer depends only upon its remaining elements; that is, upon the elements from &lt;code&gt;position()&lt;/code&gt; up to, and including, the element at &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">긴 버퍼의 해시 코드는 나머지 요소에만 의존합니다. 즉, 상기의 요소에, 인 &lt;code&gt;position()&lt;/code&gt; 까지, 및 포함의 요소 &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="210cdb9a0ce5d545d18adc0fc1f6167261b16830" translate="yes" xml:space="preserve">
          <source>The hash code of a member-value depends on its type:</source>
          <target state="translated">멤버 값의 해시 코드는 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="eeb946081a225b8dea385c7f788fc1184326ddf3" translate="yes" xml:space="preserve">
          <source>The hash code of a primitive value</source>
          <target state="translated">The hash code of a primitive value</target>
        </trans-unit>
        <trans-unit id="2134ae5696f587a6755931aaf788a2d6221bf325" translate="yes" xml:space="preserve">
          <source>The hash code of a primitive value &lt;code&gt;&lt;i&gt;v&lt;/i&gt;&lt;/code&gt; is equal to &lt;code&gt;&lt;i&gt;WrapperType&lt;/i&gt;.valueOf(&lt;i&gt;v&lt;/i&gt;).hashCode()&lt;/code&gt;, where &lt;code&gt;&lt;i&gt;WrapperType&lt;/i&gt;&lt;/code&gt; is the wrapper type corresponding to the primitive type of &lt;code&gt;&lt;i&gt;v&lt;/i&gt;&lt;/code&gt; (&lt;a href=&quot;../byte&quot;&gt;&lt;code&gt;Byte&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../double&quot;&gt;&lt;code&gt;Double&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../short&quot;&gt;&lt;code&gt;Short&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">원시 값의 해시 코드 &lt;code&gt;&lt;i&gt;v&lt;/i&gt;&lt;/code&gt; 같다 &lt;code&gt;&lt;i&gt;WrapperType&lt;/i&gt;.valueOf(&lt;i&gt;v&lt;/i&gt;).hashCode()&lt;/code&gt; , &lt;code&gt;&lt;i&gt;WrapperType&lt;/i&gt;&lt;/code&gt; 가 의 프리미티브 타입에 대응 랩퍼 타입 &lt;code&gt;&lt;i&gt;v&lt;/i&gt;&lt;/code&gt; ( &lt;a href=&quot;../byte&quot;&gt; &lt;code&gt;Byte&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../double&quot;&gt; &lt;code&gt;Double&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../short&quot;&gt; &lt;code&gt;Short&lt;/code&gt; &lt;/a&gt; , 또는 &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1d02a73fa0f7e8ac01c968c0c089bcfd10620f9c" translate="yes" xml:space="preserve">
          <source>The hash code of a short buffer depends only upon its remaining elements; that is, upon the elements from &lt;code&gt;position()&lt;/code&gt; up to, and including, the element at &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">짧은 버퍼의 해시 코드는 나머지 요소에만 의존합니다. 즉, 상기의 요소에, 인 &lt;code&gt;position()&lt;/code&gt; 까지, 및 포함의 요소 &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c977d5991df99f6e1be819ca9756a418a375c909" translate="yes" xml:space="preserve">
          <source>The hash code of a string, enum, class, or annotation member-value</source>
          <target state="translated">문자열, 열거 형, 클래스 또는 주석 멤버 값의 해시 코드</target>
        </trans-unit>
        <trans-unit id="d7d14243bc9c88dd73661c2370e4d91f3c2d8aef" translate="yes" xml:space="preserve">
          <source>The hash code of a string, enum, class, or annotation member-value I</source>
          <target state="translated">The hash code of a string, enum, class, or annotation member-value I</target>
        </trans-unit>
        <trans-unit id="c5b69f411272182de725ee87c28429b094dc5c1c" translate="yes" xml:space="preserve">
          <source>The hash code of a string, enum, class, or annotation member-value I &lt;code&gt;&lt;i&gt;v&lt;/i&gt;&lt;/code&gt; is computed as by calling &lt;code&gt;&lt;i&gt;v&lt;/i&gt;.hashCode()&lt;/code&gt;. (In the case of annotation member values, this is a recursive definition.)</source>
          <target state="translated">문자열, 열거 형, 클래스 또는 주석 멤버 값 I &lt;code&gt;&lt;i&gt;v&lt;/i&gt;&lt;/code&gt; 의 해시 코드는 &lt;code&gt;&lt;i&gt;v&lt;/i&gt;.hashCode()&lt;/code&gt; 호출하여 계산됩니다 . 주석 멤버 값의 경우 재귀 적 정의입니다.</target>
        </trans-unit>
        <trans-unit id="01d1fa6e57ef84b5eecfaa822a60e3bc34f1f826" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;ArrayType&lt;/code&gt; instance is the sum of the hash codes of all the elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (i.e. dimension, elements' open type and primitive array flag). The hashcode for a primitive value is the hashcode of the corresponding boxed object (e.g. the hashcode for &lt;code&gt;true&lt;/code&gt; is &lt;code&gt;Boolean.TRUE.hashCode()&lt;/code&gt;). This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;ArrayType&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 해시 코드 &lt;code&gt;ArrayType&lt;/code&gt; 의 인스턴스에 사용되는 정보의 모든 요소의 해시 코드의 합계 &lt;code&gt;equals&lt;/code&gt; 비교 (즉, 차원, 요소의 오픈 타입 및 기본 배열 플래그). 프리미티브 값의 해시 코드는 해당 박스 객체의 해시 코드입니다 (예 : &lt;code&gt;true&lt;/code&gt; 의 해시 코드 는 &lt;code&gt;Boolean.TRUE.hashCode()&lt;/code&gt; ). 이 것을 보장하지만 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 의미하는 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; 임의의 두 &lt;code&gt;ArrayType&lt;/code&gt; 의 인스턴스 &lt;code&gt;t1&lt;/code&gt; 및 &lt;code&gt;t2&lt;/code&gt; 에있어서의 일반 계약에 의해 필요에 따라 &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1a2573b1b7a6841ea4b97efa1dcc1c78c9b4a766" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;ArrayType&lt;/code&gt; instance is the sum of the hash codes of all the elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (i.e. dimension, elements' open type and primitive array flag). The hashcode for a primitive value is the hashcode of the corresponding boxed object (e.g. the hashcode for &lt;code&gt;true&lt;/code&gt; is &lt;code&gt;Boolean.TRUE.hashCode()&lt;/code&gt;). This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;ArrayType&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The hash code of an &lt;code&gt;ArrayType&lt;/code&gt; instance is the sum of the hash codes of all the elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (i.e. dimension, elements' open type and primitive array flag). The hashcode for a primitive value is the hashcode of the corresponding boxed object (e.g. the hashcode for &lt;code&gt;true&lt;/code&gt; is &lt;code&gt;Boolean.TRUE.hashCode()&lt;/code&gt; ). This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;ArrayType&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt; , as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="89859869abc1e87bea0cedbd234cccfbd6292353" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name, its</source>
          <target state="translated">의 해시 코드 &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; 인스턴스에 사용되는 모든 정보 요소의 해시 코드의 합계 것은 &lt;code&gt;equals&lt;/code&gt; 비교 (예 : 이름을, 그</target>
        </trans-unit>
        <trans-unit id="d4009fccc58869916c6960aab5f22a0c9ff7dbc5" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name, its</source>
          <target state="translated">의 해시 코드 &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; 인스턴스에 사용되는 모든 정보 요소의 해시 코드의 합계 것은 &lt;code&gt;equals&lt;/code&gt; 비교 (예 : 이름을, 그</target>
        </trans-unit>
        <trans-unit id="2f397ac542d0038cb102144a0cc57e017b2c4f8d" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name and signature, where the signature hashCode is calculated by a call to &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt;).</source>
          <target state="translated">의 해시 코드 &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; 인스턴스에 사용되는 모든 정보 요소의 해시 코드의 합계입니다 &lt;code&gt;equals&lt;/code&gt; (비교 예 : 서명 해시 코드가 호출에 의해 계산의 이름과 서명, &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b4bf3fc4a7e5d7aa9cdb23fbe6d4aaab5631efe8" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name and signature, where the signature hashCode is calculated by a call to &lt;code&gt;
 java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt;).</source>
          <target state="translated">The hash code of an &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name and signature, where the signature hashCode is calculated by a call to &lt;code&gt; java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="04266c1edbee1d94b1f76015779f40d46219c679" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name and signature, where the signature hashCode is calculated by a call to &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt;).</source>
          <target state="translated">의 해시 코드 &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; 의 인스턴스에 사용되는 모든 정보 요소의 해시 코드의 합계입니다 &lt;code&gt;equals&lt;/code&gt; (비교 예 : 서명 해시 코드가 호출에 의해 계산의 이름과 서명, &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2a41b2af637d21816176cf096c670471a0f1f21d" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanInfo&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its class name, and its infos on attributes, constructors, operations and notifications, where the hashCode of each of these arrays is calculated by a call to &lt;code&gt;new java.util.HashSet(java.util.Arrays.asList(this.getSignature)).hashCode()&lt;/code&gt;).</source>
          <target state="translated">의 해시 코드 &lt;code&gt;OpenMBeanInfo&lt;/code&gt; 에의 인스턴스에 사용되는 모든 정보 요소의 해시 코드의 합계입니다 &lt;code&gt;equals&lt;/code&gt; (비교 예 : 클래스 명과 속성, 생성자, 운영 및 알림의 정보를 정기적으로, 개개의 배열의 hashCode &lt;code&gt;new java.util.HashSet(java.util.Arrays.asList(this.getSignature)).hashCode()&lt;/code&gt; 호출에 의해 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="7134d10e582e012e058ace133bc0a5e89599df5c" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its class name, and its infos on attributes, constructors, operations and notifications, where the hashCode of each of these arrays is calculated by a call to &lt;code&gt;new
 java.util.HashSet(java.util.Arrays.asList(this.getSignature)).hashCode()&lt;/code&gt;).</source>
          <target state="translated">의 해시 코드 &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; 의 인스턴스에 사용되는 모든 정보 요소의 해시 코드의 합계입니다 &lt;code&gt;equals&lt;/code&gt; (비교 예 : 클래스 명과 속성, 생성자, 운영 및 알림의 정보를 정기적으로, 개개의 배열의 hashCode &lt;code&gt;new java.util.HashSet(java.util.Arrays.asList(this.getSignature)).hashCode()&lt;/code&gt; 호출에 의해 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="f54d7fb241c970213208d826f32b3107dda26d22" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name, return open type, impact and signature, where the signature hashCode is calculated by a call to &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt;).</source>
          <target state="translated">의 해시 코드 &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; 인스턴스에 사용되는 모든 정보 요소의 해시 코드의 합계입니다 &lt;code&gt;equals&lt;/code&gt; 이름이 서명 해시 코드가 호출에 의해 계산되는 공개 형, 영향 및 서명, 반환 : 예 (비교 &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e8aeea1393fe0c4be8026ba476bcdaa2aeddf8bc" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name, return open type, impact and signature, where the signature hashCode is calculated by a call to &lt;code&gt;
 java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt;).</source>
          <target state="translated">The hash code of an &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name, return open type, impact and signature, where the signature hashCode is calculated by a call to &lt;code&gt; java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bbcfc09c215717c345d74980a70a4ff3a832c4e1" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name, return open type, impact and signature, where the signature hashCode is calculated by a call to &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt;).</source>
          <target state="translated">의 해시 코드 &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; 의 인스턴스에 사용되는 모든 정보 요소의 해시 코드의 합계입니다 &lt;code&gt;equals&lt;/code&gt; (비교 예 : 그 이름은, 서명 해시 코드가 호출에 의해 계산되는 공개 형, 영향 및 서명, 돌려 &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="00e028f4abde36a33f7e7c1ecf97c6a5135da15d" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name, its</source>
          <target state="translated">의 해시 코드 &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; 의 인스턴스에 사용되는 모든 정보 요소의 해시 코드의 합계 것은 &lt;code&gt;equals&lt;/code&gt; 비교 (예 : 이름을, 그</target>
        </trans-unit>
        <trans-unit id="31d61d2f8f6cfb064e5c7aa593ca2ca50815ceaf" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name, its</source>
          <target state="translated">의 해시 코드 &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 의 인스턴스에 사용되는 정보의 모든 요소의 해시 코드의 합계 것은 &lt;code&gt;equals&lt;/code&gt; 비교 (예 : 이름을, 그</target>
        </trans-unit>
        <trans-unit id="ad19edf14f30cef209a8184f7035e14288cbeb22" translate="yes" xml:space="preserve">
          <source>The hash code of an annotation is the sum of the hash codes of its members (including those with default values), as defined below: The hash code of an annotation member is (127 times the hash code of the member-name as computed by &lt;a href=&quot;../string#hashCode()&quot;&gt;&lt;code&gt;String.hashCode()&lt;/code&gt;&lt;/a&gt;) XOR the hash code of the member-value, as defined below:</source>
          <target state="translated">The hash code of an annotation is the sum of the hash codes of its members (including those with default values), as defined below: The hash code of an annotation member is (127 times the hash code of the member-name as computed by &lt;a href=&quot;../string#hashCode()&quot;&gt; &lt;code&gt;String.hashCode()&lt;/code&gt; &lt;/a&gt;) XOR the hash code of the member-value, as defined below:</target>
        </trans-unit>
        <trans-unit id="ec70ed87a298662c34b1f376ba077c2bc1d629fc" translate="yes" xml:space="preserve">
          <source>The hash code of an annotation is the sum of the hash codes of its members (including those with default values), as defined below: The hash code of an annotation member is (127 times the hash code of the member-name as computed by &lt;a href=&quot;../string#hashCode--&quot;&gt;&lt;code&gt;String.hashCode()&lt;/code&gt;&lt;/a&gt;) XOR the hash code of the member-value, as defined below:</source>
          <target state="translated">주석의 해시 코드는 아래에 정의 된대로 멤버의 해시 코드의 합계 (기본값이있는 코드 포함)입니다. 주석 멤버의 해시 코드는 다음과 같이 계산됩니다. &lt;a href=&quot;../string#hashCode--&quot;&gt; &lt;code&gt;String.hashCode()&lt;/code&gt; &lt;/a&gt; ) 아래에 정의 된대로 멤버 값의 해시 코드를 XOR합니다.</target>
        </trans-unit>
        <trans-unit id="5d1b19e581d24e7a8bf88b5ada0f6a0c846f91cf" translate="yes" xml:space="preserve">
          <source>The hash code of an array member-value is computed by calling the appropriate overloading of &lt;a href=&quot;../../util/arrays#hashCode(long%5B%5D)&quot;&gt;&lt;code&gt;Arrays.hashCode&lt;/code&gt;&lt;/a&gt; on the value. (There is one overloading for each primitive type, and one for object reference types.)</source>
          <target state="translated">The hash code of an array member-value is computed by calling the appropriate overloading of &lt;a href=&quot;../../util/arrays#hashCode(long%5B%5D)&quot;&gt; &lt;code&gt;Arrays.hashCode&lt;/code&gt; &lt;/a&gt; on the value. (There is one overloading for each primitive type, and one for object reference types.)</target>
        </trans-unit>
        <trans-unit id="c3b05c5d540ac9609ca285969339a76621c23f02" translate="yes" xml:space="preserve">
          <source>The hash code of an array member-value is computed by calling the appropriate overloading of &lt;a href=&quot;../../util/arrays#hashCode-long:A-&quot;&gt;&lt;code&gt;Arrays.hashCode&lt;/code&gt;&lt;/a&gt; on the value. (There is one overloading for each primitive type, and one for object reference types.)</source>
          <target state="translated">배열 멤버 값의 해시 코드는 값에서 &lt;a href=&quot;../../util/arrays#hashCode-long:A-&quot;&gt; &lt;code&gt;Arrays.hashCode&lt;/code&gt; &lt;/a&gt; 의 적절한 오버로드를 호출하여 계산됩니다 . 각 기본 유형마다 하나의 오버로드가 있으며 오브젝트 참조 유형마다 하나의 오버로드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2bb2f0111cd6022a0599aca13287860989104c38" translate="yes" xml:space="preserve">
          <source>The hash code of this address as an int.</source>
          <target state="translated">이 주소의 해시 코드를 정수로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="fbc46fa08eff76ca50a494a67a9f9afc3402dc72" translate="yes" xml:space="preserve">
          <source>The hash code should be based on the entire state of the object.</source>
          <target state="translated">해시 코드는 객체의 전체 상태를 기반으로해야합니다.</target>
        </trans-unit>
        <trans-unit id="712b5a084994256ad3e9968d5206089d7ea3c72c" translate="yes" xml:space="preserve">
          <source>The hash code value for this attribute set.</source>
          <target state="translated">이 속성 세트의 해시 코드 값</target>
        </trans-unit>
        <trans-unit id="2b53bb94c3bfc0bbacc248ee138e0c2f7cbbffc9" translate="yes" xml:space="preserve">
          <source>The hash code value is generated using the case-insensitive hostname of this &lt;code&gt;SNIHostName&lt;/code&gt;.</source>
          <target state="translated">해시 코드 값은이 &lt;code&gt;SNIHostName&lt;/code&gt; 의 대소 문자를 구분하지 않는 호스트 이름을 사용하여 생성됩니다. .</target>
        </trans-unit>
        <trans-unit id="a94e0117685d82860b0a3c8054cc73b78793fa96" translate="yes" xml:space="preserve">
          <source>The hash code value is generated using the name type and encoded value of this server name.</source>
          <target state="translated">해시 코드 값은이 서버 이름의 이름 유형 및 인코딩 된 값을 사용하여 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="fe1d6dcf3d32aad84ace2f1668e42a0886801dee" translate="yes" xml:space="preserve">
          <source>The hash table contains an &lt;code&gt;Object&lt;/code&gt; and the corresponding &lt;code&gt;Entity&lt;/code&gt;</source>
          <target state="translated">The hash table contains an &lt;code&gt;Object&lt;/code&gt; and the corresponding &lt;code&gt;Entity&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="166894a160be7236b786b6cf2d897b19a4b7983f" translate="yes" xml:space="preserve">
          <source>The hash table contains the name of element and the corresponding element.</source>
          <target state="translated">The hash table contains the name of element and the corresponding element.</target>
        </trans-unit>
        <trans-unit id="12b7c2e3fed5fedeca7c74cea07b3c8d928b404d" translate="yes" xml:space="preserve">
          <source>The hash-code value for this module &lt;code&gt;Opens&lt;/code&gt;</source>
          <target state="translated">이 모듈의 해시 코드 값이 &lt;code&gt;Opens&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8a72ebb55ba31635c6a6269f563a04148937211" translate="yes" xml:space="preserve">
          <source>The hash-code value for this module dependence</source>
          <target state="translated">The hash-code value for this module dependence</target>
        </trans-unit>
        <trans-unit id="9be86fd4f6165883b7425611b19516dbc44cbe65" translate="yes" xml:space="preserve">
          <source>The hash-code value for this module descriptor</source>
          <target state="translated">The hash-code value for this module descriptor</target>
        </trans-unit>
        <trans-unit id="3d0dbd6446926905dd1d23ee3f16bcb4e8b56ce1" translate="yes" xml:space="preserve">
          <source>The hash-code value for this module export</source>
          <target state="translated">The hash-code value for this module export</target>
        </trans-unit>
        <trans-unit id="96747c64ef53441dfca3c12471f7b8a813d46cc2" translate="yes" xml:space="preserve">
          <source>The hash-code value for this module opens</source>
          <target state="translated">The hash-code value for this module opens</target>
        </trans-unit>
        <trans-unit id="ea2081f6b1a6483c60f5f1f1e8389a02f0db9e3b" translate="yes" xml:space="preserve">
          <source>The hash-code value for this module provides</source>
          <target state="translated">The hash-code value for this module provides</target>
        </trans-unit>
        <trans-unit id="c7a85005de87c9f937b25ebe7816c515a9c9abcf" translate="yes" xml:space="preserve">
          <source>The hash-code value for this module version</source>
          <target state="translated">The hash-code value for this module version</target>
        </trans-unit>
        <trans-unit id="6c6ae7273d0a50cc50b49ac4c6415f03b7a65666" translate="yes" xml:space="preserve">
          <source>The hash-code value for this resolved module</source>
          <target state="translated">The hash-code value for this resolved module</target>
        </trans-unit>
        <trans-unit id="5a3e1afff0d50668c46802f1477ed35d0f91a154" translate="yes" xml:space="preserve">
          <source>The hashcode of this version</source>
          <target state="translated">The hashcode of this version</target>
        </trans-unit>
        <trans-unit id="6fb0842996fa13780c2faaae081f966b5b45ef57" translate="yes" xml:space="preserve">
          <source>The header for a column of data.</source>
          <target state="translated">The header for a column of data.</target>
        </trans-unit>
        <trans-unit id="70368afbc14eda860a6d9acb86b4b982e4a9c963" translate="yes" xml:space="preserve">
          <source>The header for a row of data.</source>
          <target state="translated">The header for a row of data.</target>
        </trans-unit>
        <trans-unit id="2f40840f8df0b9b982dd48f033917e60387a6978" translate="yes" xml:space="preserve">
          <source>The header value of the column.</source>
          <target state="translated">The header value of the column.</target>
        </trans-unit>
        <trans-unit id="536d7623d1b3e33ffe89509fa39178919882bcb0" translate="yes" xml:space="preserve">
          <source>The heap may be of a fixed size or may be expanded and shrunk. The memory for the heap does not need to be contiguous.</source>
          <target state="translated">힙은 고정 된 크기이거나 확장 및 축소 될 수 있습니다. 힙의 메모리는 연속적 일 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="fe99f73535e48cc29eb310f157bfbe2aace7c59b" translate="yes" xml:space="preserve">
          <source>The heaviest predefined weight.</source>
          <target state="translated">The heaviest predefined weight.</target>
        </trans-unit>
        <trans-unit id="f81b9ca5d1cfd1e67c799ae3c17e744c07d9afc0" translate="yes" xml:space="preserve">
          <source>The hedge &quot;approximately&quot; is used in the foregoing description because default source of randomness is only approximately an unbiased source of independently chosen bits. If it were a perfect source of randomly chosen bits, then the algorithm would choose permutations with perfect uniformity.</source>
          <target state="translated">&quot;임의의&quot;헤지는 전술 한 설명에서 사용되는데, 디폴트 랜덤 소스는 대략 독립적으로 선택된 비트의 바이어스되지 않은 소스이기 때문이다. 무작위로 선택된 비트의 완벽한 소스라면 알고리즘은 완벽한 균일 성을 가진 순열을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="67a3fd782abccfd0623f5ed131c4181f7176648a" translate="yes" xml:space="preserve">
          <source>The hedge &quot;approximately&quot; is used in the foregoing description only because the &lt;code&gt;next&lt;/code&gt; method is only approximately an unbiased source of independently chosen bits. If it were a perfect source of randomly chosen bits, then the algorithm shown would choose &lt;code&gt;double&lt;/code&gt; values from the stated range with perfect uniformity.</source>
          <target state="translated">헤지 &quot;대략&quot;은 전술 한 설명에서 단지 &lt;code&gt;next&lt;/code&gt; 방법이 단지 독립적으로 선택된 비트의 바이어스되지 않은 소스 이기 때문에 사용 된다. 무작위로 선택된 비트의 완벽한 소스라면 표시된 알고리즘은 &lt;code&gt;double&lt;/code&gt; 을 선택합니다. 은 지정된 범위에서 완벽한 균일 성을 가진 값을 .</target>
        </trans-unit>
        <trans-unit id="58816a4e8f485de5ac4b356dc59cc5616b00d6ae" translate="yes" xml:space="preserve">
          <source>The hedge &quot;approximately&quot; is used in the foregoing description only because the next method is only approximately an unbiased source of independently chosen bits. If it were a perfect source of randomly chosen bits, then the algorithm shown would choose &lt;code&gt;float&lt;/code&gt; values from the stated range with perfect uniformity.</source>
          <target state="translated">헤지 &quot;대략&quot;은 전술 한 설명에서 단지 다음 방법이 단지 독립적으로 선택된 비트의 바이어스되지 않은 소스이기 때문에 사용된다. 무작위로 선택된 비트의 완벽한 소스라면, 표시된 알고리즘 은 명시된 범위에서 완벽한 균일 성을 가진 &lt;code&gt;float&lt;/code&gt; 값을 선택할 것 입니다.</target>
        </trans-unit>
        <trans-unit id="502b6b76db7ef6889c24c49044d80cfde1ed3dae" translate="yes" xml:space="preserve">
          <source>The hedge &quot;approximately&quot; is used in the foregoing description only because the next method is only approximately an unbiased source of independently chosen bits. If it were a perfect source of randomly chosen bits, then the algorithm shown would choose &lt;code&gt;int&lt;/code&gt; values from the stated range with perfect uniformity.</source>
          <target state="translated">헤지 &quot;대략&quot;은 전술 한 설명에서 단지 다음 방법이 단지 독립적으로 선택된 비트의 바이어스되지 않은 소스이기 때문에 사용된다. 무작위로 선택된 비트의 완벽한 소스라면, 표시된 알고리즘 은 명시된 균일 한 범위에서 &lt;code&gt;int&lt;/code&gt; 값을 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="805f1481305a0a003c0c02fe760455a1ed3fd1f1" translate="yes" xml:space="preserve">
          <source>The height dimension; negative values can be used.</source>
          <target state="translated">The height dimension; negative values can be used.</target>
        </trans-unit>
        <trans-unit id="03634a10e1205e95d36ba4cdc0cfae3b5e8d11b6" translate="yes" xml:space="preserve">
          <source>The height in pixels of each row in the table.</source>
          <target state="translated">The height in pixels of each row in the table.</target>
        </trans-unit>
        <trans-unit id="646d9ab9d69ac011a77c7d3bb4bcfd24e2ac4511" translate="yes" xml:space="preserve">
          <source>The height in pixels of the margin between the cells in each row.</source>
          <target state="translated">The height in pixels of the margin between the cells in each row.</target>
        </trans-unit>
        <trans-unit id="83ed1a6113277228a18b9d691ce3c2bc45f56c15" translate="yes" xml:space="preserve">
          <source>The height of cell.</source>
          <target state="translated">The height of cell.</target>
        </trans-unit>
        <trans-unit id="da00b26100024c30455a77a2df48917625c3b007" translate="yes" xml:space="preserve">
          <source>The height of each tile if tiling has been set, or 0 otherwise.</source>
          <target state="translated">The height of each tile if tiling has been set, or 0 otherwise.</target>
        </trans-unit>
        <trans-unit id="f23417dbb721134e36b8caed73cad75ac4c3a829" translate="yes" xml:space="preserve">
          <source>The height of each tile if tiling has been set, or 0 otherwise. The initial value is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">바둑판 식 배열이 설정된 경우 각 타일의 높이, 그렇지 않으면 0입니다. 초기 값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="510b0a31f4dcce94a238dea65e7e006e3dd7e168" translate="yes" xml:space="preserve">
          <source>The height of the &lt;code&gt;Rectangle&lt;/code&gt;.</source>
          <target state="translated">The height of the &lt;code&gt;Rectangle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ef36e84a417d2fafbdf72cfa93d46b2a8b81517" translate="yes" xml:space="preserve">
          <source>The height of the arc that rounds off the corners.</source>
          <target state="translated">The height of the arc that rounds off the corners.</target>
        </trans-unit>
        <trans-unit id="d6a525b79763bd2b875b6764281475654bac67db" translate="yes" xml:space="preserve">
          <source>The height of the palette title.</source>
          <target state="translated">The height of the palette title.</target>
        </trans-unit>
        <trans-unit id="7a63ab000024777ce854d706337a587e757dfa56" translate="yes" xml:space="preserve">
          <source>The height of the rule.</source>
          <target state="translated">규칙의 높이입니다.</target>
        </trans-unit>
        <trans-unit id="ccbe36e78690f6c9084308de29beb86a3224e213" translate="yes" xml:space="preserve">
          <source>The height of the rule. See the size attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">규칙의 높이입니다. HTML 4.0의 크기 속성 정의를 참조하십시오. 이 속성은 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="004e0f9b346cda939ac1004aca1e0896a17362cb" translate="yes" xml:space="preserve">
          <source>The height of the source image.</source>
          <target state="translated">The height of the source image.</target>
        </trans-unit>
        <trans-unit id="008df043b6acd32175c21c4e6511d767355b18ad" translate="yes" xml:space="preserve">
          <source>The height of this &lt;code&gt;Rectangle2D&lt;/code&gt;.</source>
          <target state="translated">The height of this &lt;code&gt;Rectangle2D&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
