<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="2ea9417e46d243404ec3c296058e12f5458be748" translate="yes" xml:space="preserve">
          <source>Function pointer to pointer cast</source>
          <target state="translated">포인터 캐스트에 대한 함수 포인터</target>
        </trans-unit>
        <trans-unit id="aff25779a650561f51919916715a331dbe79e151" translate="yes" xml:space="preserve">
          <source>Function pointer types</source>
          <target state="translated">함수 포인터 타입</target>
        </trans-unit>
        <trans-unit id="45d7a4aae060a99add3462979349c03f64926590" translate="yes" xml:space="preserve">
          <source>Function pointer types (e.g., &lt;code&gt;fn() -&amp;gt; i32&lt;/code&gt;)</source>
          <target state="translated">함수 포인터 유형 (예 : &lt;code&gt;fn() -&amp;gt; i32&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b24ffbdb9339fdeaf0aa7876f8b677a6e93905b1" translate="yes" xml:space="preserve">
          <source>Function pointer types, written using the &lt;code&gt;fn&lt;/code&gt; keyword, refer to a function whose identity is not necessarily known at compile-time. They can be created via a coercion from both &lt;a href=&quot;function-item&quot;&gt;function items&lt;/a&gt; and non-capturing &lt;a href=&quot;closure&quot;&gt;closures&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; 키워드를 사용하여 작성된 함수 포인터 유형 은 컴파일 타임에 ID를 반드시 알 필요가없는 함수를 나타냅니다. &lt;a href=&quot;function-item&quot;&gt;함수 아이템&lt;/a&gt; 과 비 캡처 &lt;a href=&quot;closure&quot;&gt;클로저&lt;/a&gt; 모두에서 강제로 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d6054df2c54398efbf27ace21713f95c0a24cb59" translate="yes" xml:space="preserve">
          <source>Function pointers</source>
          <target state="translated">함수 포인터</target>
        </trans-unit>
        <trans-unit id="fbcf7edbb2c6d77dc22438afcec72a59e2993480" translate="yes" xml:space="preserve">
          <source>Function pointers are pointers that point to &lt;em&gt;code&lt;/em&gt;, not data. They can be called just like functions. Like references, function pointers are, among other things, assumed to not be null, so if you want to pass a function pointer over FFI and be able to accommodate null pointers, make your type &lt;code&gt;Option&amp;lt;fn()&amp;gt;&lt;/code&gt; with your required signature.</source>
          <target state="translated">함수 포인터는 데이터가 아니라 &lt;em&gt;코드를&lt;/em&gt; 가리키는 포인터입니다 . 함수처럼 호출 할 수 있습니다. 참조와 마찬가지로 함수 포인터는 무엇보다도 null이 아닌 것으로 간주되므로 FFI를 통해 함수 포인터를 전달하고 null 포인터를 수용 하려면 필요한 서명으로 &lt;code&gt;Option&amp;lt;fn()&amp;gt;&lt;/code&gt; 유형을 만드십시오 .</target>
        </trans-unit>
        <trans-unit id="15cdfd633c5d7b0c70793f7c9489a755e1d6379f" translate="yes" xml:space="preserve">
          <source>Function pointers implement all three of the closure traits (&lt;code&gt;Fn&lt;/code&gt;, &lt;code&gt;FnMut&lt;/code&gt;, and &lt;code&gt;FnOnce&lt;/code&gt;), so you can always pass a function pointer as an argument for a function that expects a closure. It&amp;rsquo;s best to write functions using a generic type and one of the closure traits so your functions can accept either functions or closures.</source>
          <target state="translated">함수 포인터는 세 가지 클로저 특성 ( &lt;code&gt;Fn&lt;/code&gt; , &lt;code&gt;FnMut&lt;/code&gt; 및 &lt;code&gt;FnOnce&lt;/code&gt; )을 모두 구현 하므로 항상 클로저를 기대하는 함수의 인수로 함수 포인터를 전달할 수 있습니다. 제네릭 형식과 클로저 특성 중 하나를 사용하여 함수를 작성하는 것이 가장 좋으므로 함수는 함수 나 클로저를 받아 들일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e715fbc2788b68f15adb3e2fe42db1f1b3eb63be" translate="yes" xml:space="preserve">
          <source>Function pointers implement the following traits:</source>
          <target state="translated">함수 포인터는 다음과 같은 특성을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="99b2ae8582343bc9c462a6f08e79b5d728c91e61" translate="yes" xml:space="preserve">
          <source>Function pointers, like &lt;code&gt;fn(usize) -&amp;gt; bool&lt;/code&gt;.</source>
          <target state="translated">함수 포인터와 같은 &lt;code&gt;fn(usize) -&amp;gt; bool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a456906988ca1f218d8ec9026e2b7d0d28b99d1f" translate="yes" xml:space="preserve">
          <source>Function results&amp;mdash;either the final line of a block if it is not semicolon-terminated or any expression in a &lt;code&gt;return&lt;/code&gt; statement</source>
          <target state="translated">함수 결과-세미콜론으로 끝나지 않은 경우 블록의 마지막 줄 또는 &lt;code&gt;return&lt;/code&gt; 문 에있는 표현식</target>
        </trans-unit>
        <trans-unit id="36a229e02f3fc60bc509ebb974aa38b72eb187af" translate="yes" xml:space="preserve">
          <source>Function results, either the final line of a block if it is not semicolon-terminated or any expression in a &lt;code&gt;return&lt;/code&gt; statement</source>
          <target state="translated">함수는 세미콜론으로 끝나지 않은 블록의 마지막 행이거나 &lt;code&gt;return&lt;/code&gt; 명령문의 표현식입니다 .</target>
        </trans-unit>
        <trans-unit id="29f4f46b2b3a18a824f7e4d35e9bedb57b1f2175" translate="yes" xml:space="preserve">
          <source>Function std::alloc::alloc</source>
          <target state="translated">기능 std :: alloc :: alloc</target>
        </trans-unit>
        <trans-unit id="c194290249edf0618f600e420e211418fd7ea58d" translate="yes" xml:space="preserve">
          <source>Function std::alloc::alloc_zeroed</source>
          <target state="translated">std :: alloc :: alloc_zeroed 함수</target>
        </trans-unit>
        <trans-unit id="c55dc24d1719cca7c04e3e54ee8524fba6daf3ee" translate="yes" xml:space="preserve">
          <source>Function std::alloc::dealloc</source>
          <target state="translated">기능 std :: alloc :: dealloc</target>
        </trans-unit>
        <trans-unit id="f0a706cc72c3f62f4ea5f25a2d577f9c7dcb0b9c" translate="yes" xml:space="preserve">
          <source>Function std::alloc::handle_alloc_error</source>
          <target state="translated">함수 std :: alloc :: handle_alloc_error</target>
        </trans-unit>
        <trans-unit id="5107e49cfb1f88cc3e2a0a8f7ef7e8b1243aeff1" translate="yes" xml:space="preserve">
          <source>Function std::alloc::realloc</source>
          <target state="translated">기능 std :: alloc :: realloc</target>
        </trans-unit>
        <trans-unit id="cdfb037e537e5020acc31cc65ff942f2e9f7206e" translate="yes" xml:space="preserve">
          <source>Function std::alloc::set_alloc_error_hook</source>
          <target state="translated">기능 std :: alloc :: set_alloc_error_hook</target>
        </trans-unit>
        <trans-unit id="d3914accafdbce71005fb9461f231fd4f5ddabd1" translate="yes" xml:space="preserve">
          <source>Function std::alloc::take_alloc_error_hook</source>
          <target state="translated">std :: alloc :: take_alloc_error_hook 함수</target>
        </trans-unit>
        <trans-unit id="02460030ea5749077815712a0ec7615c21f8abed" translate="yes" xml:space="preserve">
          <source>Function std::ascii::escape_default</source>
          <target state="translated">기능 std :: ascii :: escape_default</target>
        </trans-unit>
        <trans-unit id="7c07dd33165ae734e5190fd9441a0896193554d6" translate="yes" xml:space="preserve">
          <source>Function std::char::decode_utf16</source>
          <target state="translated">함수 std :: char :: decode_utf16</target>
        </trans-unit>
        <trans-unit id="4247dc6a69dffc51becd83114cd73f82d393cde9" translate="yes" xml:space="preserve">
          <source>Function std::char::from_digit</source>
          <target state="translated">함수 std :: char :: from_digit</target>
        </trans-unit>
        <trans-unit id="01947a1ff576a2d0100c1951a0c5226b70685cd8" translate="yes" xml:space="preserve">
          <source>Function std::char::from_u32</source>
          <target state="translated">함수 std :: char :: from_u32</target>
        </trans-unit>
        <trans-unit id="6dfcd96fdbe2623e4e1d282ca8990e4d07c57639" translate="yes" xml:space="preserve">
          <source>Function std::char::from_u32_unchecked</source>
          <target state="translated">함수 std :: char :: from_u32_unchecked</target>
        </trans-unit>
        <trans-unit id="966fc7af79edea1b5d808685aa0ece42863cd0bd" translate="yes" xml:space="preserve">
          <source>Function std::cmp::max</source>
          <target state="translated">기능 std :: cmp :: max</target>
        </trans-unit>
        <trans-unit id="d81416a60431cc075bb472188b6b7e44301f4309" translate="yes" xml:space="preserve">
          <source>Function std::cmp::min</source>
          <target state="translated">기능 std :: cmp :: min</target>
        </trans-unit>
        <trans-unit id="3e137b166d99decd00ae7a0d041b9dad569ce9b9" translate="yes" xml:space="preserve">
          <source>Function std::convert::identity</source>
          <target state="translated">기능 std :: convert :: identity</target>
        </trans-unit>
        <trans-unit id="bef3f6086da2cb5d3c82ba307db11b82bdd500e4" translate="yes" xml:space="preserve">
          <source>Function std::env::args</source>
          <target state="translated">기능 std :: env :: args</target>
        </trans-unit>
        <trans-unit id="a7011b47e8ac03fcbd9255878cf4c2155deab1f8" translate="yes" xml:space="preserve">
          <source>Function std::env::args_os</source>
          <target state="translated">기능 std :: env :: args_os</target>
        </trans-unit>
        <trans-unit id="fb6d2bc291dd13ab649f3064189f28948f498c90" translate="yes" xml:space="preserve">
          <source>Function std::env::current_dir</source>
          <target state="translated">기능 std :: env :: current_dir</target>
        </trans-unit>
        <trans-unit id="33c219e274f54fd4c2901cadeb8cb8a1716b07ee" translate="yes" xml:space="preserve">
          <source>Function std::env::current_exe</source>
          <target state="translated">기능 std :: env :: current_exe</target>
        </trans-unit>
        <trans-unit id="93bdb0baaee9eb9479f683bb8e51de0bf9436845" translate="yes" xml:space="preserve">
          <source>Function std::env::home_dir</source>
          <target state="translated">기능 std :: env :: home_dir</target>
        </trans-unit>
        <trans-unit id="dc6d846e434726288d053c67c7f123047bc5b25a" translate="yes" xml:space="preserve">
          <source>Function std::env::join_paths</source>
          <target state="translated">함수 std :: env :: join_paths</target>
        </trans-unit>
        <trans-unit id="bbe13942873b051106118872ceff377d6414cbd0" translate="yes" xml:space="preserve">
          <source>Function std::env::remove_var</source>
          <target state="translated">기능 std :: env :: remove_var</target>
        </trans-unit>
        <trans-unit id="a0ef2707df0c48fd4a3170eabef1fe897798e008" translate="yes" xml:space="preserve">
          <source>Function std::env::set_current_dir</source>
          <target state="translated">기능 std :: env :: set_current_dir</target>
        </trans-unit>
        <trans-unit id="40c0dc02c3e18407f97eaa7464d7aab31d55dfea" translate="yes" xml:space="preserve">
          <source>Function std::env::set_var</source>
          <target state="translated">기능 std :: env :: set_var</target>
        </trans-unit>
        <trans-unit id="59db75e19e909089d5b25a261bb16556aafffc1d" translate="yes" xml:space="preserve">
          <source>Function std::env::split_paths</source>
          <target state="translated">기능 std :: env :: split_paths</target>
        </trans-unit>
        <trans-unit id="c9d56410023af3d25f02f24fd607ad8d19e28e03" translate="yes" xml:space="preserve">
          <source>Function std::env::temp_dir</source>
          <target state="translated">기능 std :: env :: temp_dir</target>
        </trans-unit>
        <trans-unit id="b44ade5af9baa85bddb409115f11d8a3c50eb27b" translate="yes" xml:space="preserve">
          <source>Function std::env::var</source>
          <target state="translated">기능 std :: env :: var</target>
        </trans-unit>
        <trans-unit id="515bff141b585b0fb43f2fd81c4ab54894f59b00" translate="yes" xml:space="preserve">
          <source>Function std::env::var_os</source>
          <target state="translated">기능 std :: env :: var_os</target>
        </trans-unit>
        <trans-unit id="50d6f97705009dc1e9db00019a283d41dc6945fd" translate="yes" xml:space="preserve">
          <source>Function std::env::vars</source>
          <target state="translated">기능 std :: env :: vars</target>
        </trans-unit>
        <trans-unit id="d0827162d968005e34a0d42ba5ac51aa36efcf56" translate="yes" xml:space="preserve">
          <source>Function std::env::vars_os</source>
          <target state="translated">기능 std :: env :: vars_os</target>
        </trans-unit>
        <trans-unit id="797538d7608a17a03d5648866da9d6b3f078ba33" translate="yes" xml:space="preserve">
          <source>Function std::fmt::format</source>
          <target state="translated">기능 std :: fmt :: format</target>
        </trans-unit>
        <trans-unit id="76a06aa8251b2d9f167fedfb35746c3cf97e2ac8" translate="yes" xml:space="preserve">
          <source>Function std::fmt::write</source>
          <target state="translated">기능 std :: fmt :: write</target>
        </trans-unit>
        <trans-unit id="7fdb91a20cf7c4148e5350b6228d741645e0e6c4" translate="yes" xml:space="preserve">
          <source>Function std::fs::canonicalize</source>
          <target state="translated">기능 std :: fs :: canonicalize</target>
        </trans-unit>
        <trans-unit id="44ca34ff0e7fcde3369397bebf2cb450b447625e" translate="yes" xml:space="preserve">
          <source>Function std::fs::copy</source>
          <target state="translated">기능 std :: fs :: copy</target>
        </trans-unit>
        <trans-unit id="79b6cf93dfdb5969925a9bbf30fbc1a32165b6cc" translate="yes" xml:space="preserve">
          <source>Function std::fs::create_dir</source>
          <target state="translated">기능 std :: fs :: create_dir</target>
        </trans-unit>
        <trans-unit id="649c1df373944ba216c813f37e0990377d5a6ab3" translate="yes" xml:space="preserve">
          <source>Function std::fs::create_dir_all</source>
          <target state="translated">함수 std :: fs :: create_dir_all</target>
        </trans-unit>
        <trans-unit id="aec64a3774022c217f50a9076ac42b9fb6d48ec2" translate="yes" xml:space="preserve">
          <source>Function std::fs::hard_link</source>
          <target state="translated">기능 std :: fs :: hard_link</target>
        </trans-unit>
        <trans-unit id="2e6dfe4827a34c58684389da7b0164086c1599e4" translate="yes" xml:space="preserve">
          <source>Function std::fs::metadata</source>
          <target state="translated">기능 std :: fs :: metadata</target>
        </trans-unit>
        <trans-unit id="257ab42da62059ca592eb29ecce0ba6bb9f767ea" translate="yes" xml:space="preserve">
          <source>Function std::fs::read</source>
          <target state="translated">기능 std :: fs :: read</target>
        </trans-unit>
        <trans-unit id="488209597226b1646d1224bfbda57c84f45dc7d2" translate="yes" xml:space="preserve">
          <source>Function std::fs::read_dir</source>
          <target state="translated">기능 std :: fs :: read_dir</target>
        </trans-unit>
        <trans-unit id="0f7c945a8871e4c87b4c07b8880a2b36fc0ce855" translate="yes" xml:space="preserve">
          <source>Function std::fs::read_link</source>
          <target state="translated">기능 std :: fs :: read_link</target>
        </trans-unit>
        <trans-unit id="28b8da08cde6c3f8ae6f6e98d4dd66e03f939569" translate="yes" xml:space="preserve">
          <source>Function std::fs::read_to_string</source>
          <target state="translated">함수 std :: fs :: read_to_string</target>
        </trans-unit>
        <trans-unit id="1069c1141b6eaeb5de5bd2c0a071bfa97d894617" translate="yes" xml:space="preserve">
          <source>Function std::fs::remove_dir</source>
          <target state="translated">기능 std :: fs :: remove_dir</target>
        </trans-unit>
        <trans-unit id="c3cdc1eed161b18d3222b0df7bb2a073cb3a3c45" translate="yes" xml:space="preserve">
          <source>Function std::fs::remove_dir_all</source>
          <target state="translated">기능 std :: fs :: remove_dir_all</target>
        </trans-unit>
        <trans-unit id="cbcb0bbc9d59dd97c42d329740ea7f8f01cc1fb7" translate="yes" xml:space="preserve">
          <source>Function std::fs::remove_file</source>
          <target state="translated">기능 std :: fs :: remove_file</target>
        </trans-unit>
        <trans-unit id="af4b065e7ab7d2238b740f9812576377e5cd02d1" translate="yes" xml:space="preserve">
          <source>Function std::fs::rename</source>
          <target state="translated">기능 std :: fs :: rename</target>
        </trans-unit>
        <trans-unit id="62954bd39f77dcd80b31f5a005cdf3185851bf80" translate="yes" xml:space="preserve">
          <source>Function std::fs::set_permissions</source>
          <target state="translated">기능 std :: fs :: set_permissions</target>
        </trans-unit>
        <trans-unit id="b73007edcf070db673623f198d05db893c057abf" translate="yes" xml:space="preserve">
          <source>Function std::fs::soft_link</source>
          <target state="translated">기능 std :: fs :: soft_link</target>
        </trans-unit>
        <trans-unit id="c1609b2e48046eeca39f684e9f2c1c5ab0e14c04" translate="yes" xml:space="preserve">
          <source>Function std::fs::symlink_metadata</source>
          <target state="translated">함수 std :: fs :: symlink_metadata</target>
        </trans-unit>
        <trans-unit id="42a53d0022af817a39762880cd798efaddb33270" translate="yes" xml:space="preserve">
          <source>Function std::fs::write</source>
          <target state="translated">기능 std :: fs :: write</target>
        </trans-unit>
        <trans-unit id="44b1ca263375f3e80c5d474d85e7edb549b59317" translate="yes" xml:space="preserve">
          <source>Function std::hint::black_box</source>
          <target state="translated">기능 std :: hint :: black_box</target>
        </trans-unit>
        <trans-unit id="23fd76dd636e9b48c8e0406a01f4377257e851c2" translate="yes" xml:space="preserve">
          <source>Function std::hint::spin_loop</source>
          <target state="translated">기능 std :: hint :: spin_loop</target>
        </trans-unit>
        <trans-unit id="c1dcca4e40039d28eec49d9f033066ddf377892d" translate="yes" xml:space="preserve">
          <source>Function std::hint::unreachable_unchecked</source>
          <target state="translated">std :: hint :: unreachable_unchecked 함수</target>
        </trans-unit>
        <trans-unit id="c04a12aeb32eb6ee408f0172379e7189d04f7fa7" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::abort</source>
          <target state="translated">기능 std :: intrinsics :: abort</target>
        </trans-unit>
        <trans-unit id="083951e2b60b4a5d3ecc13ab8a8c68c9bcb5e379" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::add_with_overflow</source>
          <target state="translated">함수 std :: intrinsics :: add_with_overflow</target>
        </trans-unit>
        <trans-unit id="9576b2752f5e3b22d5d58bfbf2ee067369a00927" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::arith_offset</source>
          <target state="translated">함수 std :: intrinsics :: arith_offset</target>
        </trans-unit>
        <trans-unit id="55e9043125ea3a71432799ddbd5b5de5c59e4507" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::assume</source>
          <target state="translated">기능 std :: intrinsics :: assume</target>
        </trans-unit>
        <trans-unit id="97bd81f0aecc23f2c1c6e2f2556a8a5a193fa85e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_and</source>
          <target state="translated">함수 std :: intrinsics :: atomic_and</target>
        </trans-unit>
        <trans-unit id="83db485cd65a9c1d60ee6553eeb93464c015dcd6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_and_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_and_acq</target>
        </trans-unit>
        <trans-unit id="2a136fca51e5841f60fee7bd01c6763f69802dd1" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_and_acqrel</source>
          <target state="translated">std :: intrinsics :: atomic_and_acqrel 함수</target>
        </trans-unit>
        <trans-unit id="de28434a57082bbad9e31bcf13a493f64eeed44c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_and_rel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_and_rel</target>
        </trans-unit>
        <trans-unit id="35b947f77ad8b80a16f2858b7963283c7447f554" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_and_relaxed</source>
          <target state="translated">std :: intrinsics :: atomic_and_relaxed 함수</target>
        </trans-unit>
        <trans-unit id="a85031e9d18ed4fd2273a2554abf20d5d0e04d42" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchg</target>
        </trans-unit>
        <trans-unit id="21bafabb725c8d186f53d9a39873b76562515d5e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchg_acq</target>
        </trans-unit>
        <trans-unit id="9956c269fbb5ef5958060b15ea303e7f003fbf56" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_acq_failrelaxed</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchg_acq_failrelaxed</target>
        </trans-unit>
        <trans-unit id="e1a505536784b5179da9f68a2284af4a99c45b36" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_acqrel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchg_acqrel</target>
        </trans-unit>
        <trans-unit id="192a1cc6826d7c91266da1d6cb911584811f7a90" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_acqrel_failrelaxed</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchg_acqrel_failrelaxed</target>
        </trans-unit>
        <trans-unit id="0156b2ddfed79dfb74958e12504cd6470faf5b91" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_failacq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchg_failacq</target>
        </trans-unit>
        <trans-unit id="55409e6ca1ad5c432b928eb8ce23a904c33f647f" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_failrelaxed</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchg_failrelaxed</target>
        </trans-unit>
        <trans-unit id="39f0c4bec736294fa36eea7dac60d5fa82a8a97d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_rel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchg_rel</target>
        </trans-unit>
        <trans-unit id="eaaab3b78d863b2e9f71342b771707d5b6ede81a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_relaxed</source>
          <target state="translated">std :: intrinsics :: atomic_cxchg_relaxed 함수</target>
        </trans-unit>
        <trans-unit id="23a2de8b090010417f7343ed9f647e4c4638c9fe" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchgweak</target>
        </trans-unit>
        <trans-unit id="d32ebae9ccacf8b7aaf5dcdd672e08c3462188de" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchgweak_acq</target>
        </trans-unit>
        <trans-unit id="a0d6493411c30c055a9bbf2189993ff6cb18a401" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_acq_failrelaxed</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchgweak_acq_failrelaxed</target>
        </trans-unit>
        <trans-unit id="84d51cb5de7124a1441c5850c06600665e87afbf" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_acqrel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchgweak_acqrel</target>
        </trans-unit>
        <trans-unit id="be384c57178230ae73b1a71a2f45edbcd29561cb" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_acqrel_failrelaxed</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchgweak_acqrel_failrelaxed</target>
        </trans-unit>
        <trans-unit id="1cae0c31481303abd7d3122fbbb4550b4b0fe2ae" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_failacq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchgweak_failacq</target>
        </trans-unit>
        <trans-unit id="b2a3b45d3b55aecacb1cf5ad3f42130bd04b90ee" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_failrelaxed</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchgweak_failrelaxed</target>
        </trans-unit>
        <trans-unit id="dbdc85ce325264420dee74eb369011abf2328c62" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_rel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_cxchgweak_rel</target>
        </trans-unit>
        <trans-unit id="dfea14fc309810b18b76b8d8d9eea0624c669c56" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_relaxed</source>
          <target state="translated">std :: intrinsics :: atomic_cxchgweak_relaxed 함수</target>
        </trans-unit>
        <trans-unit id="93e77549e8c09b3d6a47e1aae1153a3c86f218d6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_fence</source>
          <target state="translated">함수 std :: intrinsics :: atomic_fence</target>
        </trans-unit>
        <trans-unit id="9e80e29f5375e2b133e83fcec9042440ad13c3ab" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_fence_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_fence_acq</target>
        </trans-unit>
        <trans-unit id="e276f5f0bdfe137b7fb724ce874c30180445d419" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_fence_acqrel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_fence_acqrel</target>
        </trans-unit>
        <trans-unit id="5e0c13004af1995e4249efaadcf55bab23d8b1f0" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_fence_rel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_fence_rel</target>
        </trans-unit>
        <trans-unit id="fa5f8c9ce76fefde99e7d3efd807ca1a43f8ab6c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_load</source>
          <target state="translated">함수 std :: intrinsics :: atomic_load</target>
        </trans-unit>
        <trans-unit id="12a79df9539f7af796dbd45e1c54ed05f27b0df6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_load_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_load_acq</target>
        </trans-unit>
        <trans-unit id="e773d44fb21e58e51b7c05a644c45d38cd9ed277" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_load_relaxed</source>
          <target state="translated">std :: intrinsics :: atomic_load_relaxed 함수</target>
        </trans-unit>
        <trans-unit id="44d5fbea38425f45c85b674130abc87f20105c47" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_load_unordered</source>
          <target state="translated">함수 std :: intrinsics :: atomic_load_unorder</target>
        </trans-unit>
        <trans-unit id="76f39339c62e3cc8ba58c9228348d006ee9dc8cb" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_max</source>
          <target state="translated">함수 std :: intrinsics :: atomic_max</target>
        </trans-unit>
        <trans-unit id="adfa1e651df3ca8dba7602e63cea98a1124a3cd4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_max_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_max_acq</target>
        </trans-unit>
        <trans-unit id="a3b4665a7942063ce1a70d83d46c8633384f998d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_max_acqrel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_max_acqrel</target>
        </trans-unit>
        <trans-unit id="ac0d6a9ff3e4081282044c1c5ed630f732b0b4ef" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_max_rel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_max_rel</target>
        </trans-unit>
        <trans-unit id="68181ba12e9fcb9131b0368bcff2f202617a904e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_max_relaxed</source>
          <target state="translated">std :: intrinsics :: atomic_max_relaxed 함수</target>
        </trans-unit>
        <trans-unit id="03d60645d9fdf40f0cdeadc9c62a66beccce73b2" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_min</source>
          <target state="translated">함수 std :: intrinsics :: atomic_min</target>
        </trans-unit>
        <trans-unit id="f412529642bae09c91a2918ae76b0083cdd116a8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_min_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_min_acq</target>
        </trans-unit>
        <trans-unit id="4f0129fd24c052c26d2cff0213021ffaa5a26141" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_min_acqrel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_min_acqrel</target>
        </trans-unit>
        <trans-unit id="accc88f6c6162721f5f1f08f16e77b97f84e8136" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_min_rel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_min_rel</target>
        </trans-unit>
        <trans-unit id="1a894d7d0ff97fe3d1bff6f23c3876e0e8d5cf01" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_min_relaxed</source>
          <target state="translated">std :: intrinsics :: atomic_min_relaxed 함수</target>
        </trans-unit>
        <trans-unit id="2d5cfe1e0da2c8b604a13fb0c4d5def3bcc0fe05" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_nand</source>
          <target state="translated">함수 std :: intrinsics :: atomic_nand</target>
        </trans-unit>
        <trans-unit id="20cb0e70c7eab21657d6b9196e100e7a7268e389" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_nand_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_nand_acq</target>
        </trans-unit>
        <trans-unit id="d829c3f5e5c25cd5f078e02412ed8b497893e505" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_nand_acqrel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_nand_acqrel</target>
        </trans-unit>
        <trans-unit id="51745bee93cb553dd515cd26d97a744e50b00f88" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_nand_rel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_nand_rel</target>
        </trans-unit>
        <trans-unit id="8f2184a53d3faf2dfbc8096bda41da42742d4b11" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_nand_relaxed</source>
          <target state="translated">std :: intrinsics :: atomic_nand_relaxed 함수</target>
        </trans-unit>
        <trans-unit id="e15a1fa056a17ed12cc0ca7d799d64f4b13ff6b8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_or</source>
          <target state="translated">함수 std :: intrinsics :: atomic_or</target>
        </trans-unit>
        <trans-unit id="b9d93151e4115df6ee3345d8dd3e7a0481a98842" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_or_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_or_acq</target>
        </trans-unit>
        <trans-unit id="aa3340aafd6e5592ddd2e22891c16b56b7d9e0a8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_or_acqrel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_or_acqrel</target>
        </trans-unit>
        <trans-unit id="c8119dff5e090cc7f4cf0747a6a6c6d4b63325b3" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_or_rel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_or_rel</target>
        </trans-unit>
        <trans-unit id="dc81e065a9758719576edcdd6d60fa47c707097e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_or_relaxed</source>
          <target state="translated">std :: intrinsics :: atomic_or_relaxed 함수</target>
        </trans-unit>
        <trans-unit id="e81aaceb1658f487c55b38d935c756ae401295c3" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_singlethreadfence</source>
          <target state="translated">함수 std :: intrinsics :: atomic_singlethreadfence</target>
        </trans-unit>
        <trans-unit id="4402db0d845f0af53cd4059d26807a4df5d6498c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_singlethreadfence_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_singlethreadfence_acq</target>
        </trans-unit>
        <trans-unit id="9ebbf7f70d332b8ce126f2b6c1afe34a6b19b914" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_singlethreadfence_acqrel</source>
          <target state="translated">std :: intrinsics :: atomic_singlethreadfence_acqrel 함수</target>
        </trans-unit>
        <trans-unit id="ffd7f5b2ce700d60a15d682ab64dd10cccc20ad4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_singlethreadfence_rel</source>
          <target state="translated">std :: intrinsics :: atomic_singlethreadfence_rel 함수</target>
        </trans-unit>
        <trans-unit id="0c2a81d047c561e9cb87fb39f4b1b32eebbf8ca8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_store</source>
          <target state="translated">함수 std :: intrinsics :: atomic_store</target>
        </trans-unit>
        <trans-unit id="2ee549969e877c7b27baf516286ad29d8db0c0dc" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_store_rel</source>
          <target state="translated">std :: intrinsics :: atomic_store_rel 함수</target>
        </trans-unit>
        <trans-unit id="590261a38bfb6fc19deeb0e18f6328d56154e62c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_store_relaxed</source>
          <target state="translated">std :: intrinsics :: atomic_store_relaxed 함수</target>
        </trans-unit>
        <trans-unit id="709a5314326fee461b3fe825b79f13e4bbc51906" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_store_unordered</source>
          <target state="translated">함수 std :: intrinsics :: atomic_store_unorder</target>
        </trans-unit>
        <trans-unit id="2f05d15ea8839ab0a5f6a982beb914d4cd94497f" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umax</source>
          <target state="translated">기능 std :: intrinsics :: atomic_umax</target>
        </trans-unit>
        <trans-unit id="58caab0e44c28da818bfa8b21fb1e0a3854275db" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umax_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_umax_acq</target>
        </trans-unit>
        <trans-unit id="485410d09deb7d4db9b4294336198ec95c5aac38" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umax_acqrel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_umax_acqrel</target>
        </trans-unit>
        <trans-unit id="e7d030aa6897ab0c8e4b57031c7be08644c7d4a4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umax_rel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_umax_rel</target>
        </trans-unit>
        <trans-unit id="1c60325138a8d36005ec6ea575e5ea16dc74339b" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umax_relaxed</source>
          <target state="translated">std :: intrinsics :: atomic_umax_relaxed 함수</target>
        </trans-unit>
        <trans-unit id="b5cd699b1fc54fbec84c2a134a8833717d98009a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umin</source>
          <target state="translated">함수 std :: intrinsics :: atomic_umin</target>
        </trans-unit>
        <trans-unit id="f66c3e7aa0946f69185ad6161b3e2b5d1c7c0360" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umin_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_umin_acq</target>
        </trans-unit>
        <trans-unit id="6e3486c411158f0476ad8b3eb187ad36f8e05522" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umin_acqrel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_umin_acqrel</target>
        </trans-unit>
        <trans-unit id="e8b768c6a791e83dfbc74046b1f169cc0824883d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umin_rel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_umin_rel</target>
        </trans-unit>
        <trans-unit id="8152554e0ce02fe3689452d05678c8a75c70e6cb" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umin_relaxed</source>
          <target state="translated">std :: intrinsics :: atomic_umin_relaxed 함수</target>
        </trans-unit>
        <trans-unit id="2c9460022df088a0a553484dcfacf73c4d2c6c49" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xadd</source>
          <target state="translated">std :: intrinsics :: atomic_xadd 함수</target>
        </trans-unit>
        <trans-unit id="bbfbb2d9fa5b20d2d0a52f974a74a8be7d1250a3" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xadd_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_xadd_acq</target>
        </trans-unit>
        <trans-unit id="80a5c9fa25e8dacd29916af7a7876806c0c7b801" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xadd_acqrel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_xadd_acqrel</target>
        </trans-unit>
        <trans-unit id="2681580a518ae1108079209ad3e87c09ac578238" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xadd_rel</source>
          <target state="translated">std :: intrinsics :: atomic_xadd_rel 함수</target>
        </trans-unit>
        <trans-unit id="a6632774d34b6d8bdf98921289f3bf98305b65c3" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xadd_relaxed</source>
          <target state="translated">std :: intrinsics :: atomic_xadd_relaxed 함수</target>
        </trans-unit>
        <trans-unit id="680cf8b973773ce9f5cb5d5e143980ef48d38f83" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xchg</source>
          <target state="translated">함수 std :: intrinsics :: atomic_xchg</target>
        </trans-unit>
        <trans-unit id="06fa06a9a882944323a8537e5812f44de2b15574" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xchg_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_xchg_acq</target>
        </trans-unit>
        <trans-unit id="514738ba82bccec7209c92dc3e542667c9f46aa0" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xchg_acqrel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_xchg_acqrel</target>
        </trans-unit>
        <trans-unit id="e7e8b533420ea0deb98c9b6023dbdbf8c22178a5" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xchg_rel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_xchg_rel</target>
        </trans-unit>
        <trans-unit id="b92febd7f8f2a2256f778fadeb825e82008c19e9" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xchg_relaxed</source>
          <target state="translated">std :: intrinsics :: atomic_xchg_relaxed 함수</target>
        </trans-unit>
        <trans-unit id="2ea2937587ac1814222761b67af1039837c7653d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xor</source>
          <target state="translated">함수 std :: intrinsics :: atomic_xor</target>
        </trans-unit>
        <trans-unit id="707de9981acd22a67a9431dbb504cf4159395ac2" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xor_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_xor_acq</target>
        </trans-unit>
        <trans-unit id="833e4418ab431a17a9d91675e43ac8138046eb6d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xor_acqrel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_xor_acqrel</target>
        </trans-unit>
        <trans-unit id="35ec5057adba987f011914a33d5a6c2d44c7e8e4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xor_rel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_xor_rel</target>
        </trans-unit>
        <trans-unit id="b44cf1a28973fbd20f73163fe499efb58d6f607f" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xor_relaxed</source>
          <target state="translated">std :: intrinsics :: atomic_xor_relaxed 함수</target>
        </trans-unit>
        <trans-unit id="3b36393cd0aa9496b4ae784a4407d76dc0812c10" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xsub</source>
          <target state="translated">함수 std :: intrinsics :: atomic_xsub</target>
        </trans-unit>
        <trans-unit id="0e05edf4266ca38cec129d7cbea17e2b5615af9c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xsub_acq</source>
          <target state="translated">함수 std :: intrinsics :: atomic_xsub_acq</target>
        </trans-unit>
        <trans-unit id="ec5065f3f0f50521d5a5dce38c88ff20b63d0fa5" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xsub_acqrel</source>
          <target state="translated">함수 std :: intrinsics :: atomic_xsub_acqrel</target>
        </trans-unit>
        <trans-unit id="8ef37695d8e866884c3d116d76da8d567f0eb2b0" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xsub_rel</source>
          <target state="translated">기능 std :: intrinsics :: atomic_xsub_rel</target>
        </trans-unit>
        <trans-unit id="9535a9ea988c35b98c9a100edb8dbbfcdb21cc0a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xsub_relaxed</source>
          <target state="translated">std :: intrinsics :: atomic_xsub_relaxed 함수</target>
        </trans-unit>
        <trans-unit id="0260761aac2d147168334337babec7c746cf1e11" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::bitreverse</source>
          <target state="translated">기능 std :: intrinsics :: bitreverse</target>
        </trans-unit>
        <trans-unit id="349680778834fca16f9d706876d86fef2c5f6a4d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::breakpoint</source>
          <target state="translated">기능 std :: intrinsics :: breakpoint</target>
        </trans-unit>
        <trans-unit id="44a50e7b9e7f8cceb58990743bc9f61879dd5383" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::bswap</source>
          <target state="translated">기능 std :: intrinsics :: bswap</target>
        </trans-unit>
        <trans-unit id="f8a2bd170e3a75454c4f05d5bbcb8639c2aa54ff" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ceilf32</source>
          <target state="translated">기능 std :: intrinsics :: ceilf32</target>
        </trans-unit>
        <trans-unit id="976747cd2c5e09a74b339fc0666d68d4cfde0c5e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ceilf64</source>
          <target state="translated">기능 std :: intrinsics :: ceilf64</target>
        </trans-unit>
        <trans-unit id="faffd8585027515ddae4f1331689122329742d1c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::copy</source>
          <target state="translated">기능 std :: intrinsics :: copy</target>
        </trans-unit>
        <trans-unit id="7f8aef550653229ec93aa002745a05a7de864fc8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::copy_nonoverlapping</source>
          <target state="translated">함수 std :: intrinsics :: copy_nonoverlapping</target>
        </trans-unit>
        <trans-unit id="b1913a2055a535ce3e7b5d8fcdb5564f85606921" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::copysignf32</source>
          <target state="translated">함수 std :: intrinsics :: copysignf32</target>
        </trans-unit>
        <trans-unit id="137086a9e3acf79d7f58e815b9cf53cf5c487284" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::copysignf64</source>
          <target state="translated">함수 std :: intrinsics :: copysignf64</target>
        </trans-unit>
        <trans-unit id="ba20d643ea9b3e1f178eae70ce17f616603801ed" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::cosf32</source>
          <target state="translated">기능 std :: intrinsics :: cosf32</target>
        </trans-unit>
        <trans-unit id="7844690936abbf209a7dc3fedfccc3bbd90ec9cc" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::cosf64</source>
          <target state="translated">기능 std :: intrinsics :: cosf64</target>
        </trans-unit>
        <trans-unit id="545d20596e2a8383e286ad517cc0ec75c2f9ab02" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ctlz</source>
          <target state="translated">기능 std :: intrinsics :: ctlz</target>
        </trans-unit>
        <trans-unit id="586da9633fdd054b9e8a48419276b9ebfe15778d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ctlz_nonzero</source>
          <target state="translated">함수 std :: intrinsics :: ctlz_nonzero</target>
        </trans-unit>
        <trans-unit id="78aa0af231e9d9cdb012b5f501d915f806f6f319" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ctpop</source>
          <target state="translated">기능 std :: intrinsics :: ctpop</target>
        </trans-unit>
        <trans-unit id="8e1aff64d8386fcb240654511fcd6b1efe27e021" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::cttz</source>
          <target state="translated">기능 std :: intrinsics :: cttz</target>
        </trans-unit>
        <trans-unit id="8203326fe691f7f3a7d6ceb9fbe41c6aa246d5ad" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::cttz_nonzero</source>
          <target state="translated">함수 std :: intrinsics :: cttz_nonzero</target>
        </trans-unit>
        <trans-unit id="3cafd9582dca45d45f6436f5c5cc310e40a2e757" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::discriminant_value</source>
          <target state="translated">함수 std :: intrinsics :: discriminant_value</target>
        </trans-unit>
        <trans-unit id="310254651639c9db365ac028773fcd16703837c0" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::drop_in_place</source>
          <target state="translated">함수 std :: intrinsics :: drop_in_place</target>
        </trans-unit>
        <trans-unit id="6504fb6abec53cb5ae5ba0d14dc3bbdc1460d019" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::exact_div</source>
          <target state="translated">함수 std :: intrinsics :: exact_div</target>
        </trans-unit>
        <trans-unit id="82932dd085b91a4d031ba681d9948195cde3cd38" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::exp2f32</source>
          <target state="translated">함수 std :: intrinsics :: exp2f32</target>
        </trans-unit>
        <trans-unit id="e028afe12378e9a7dec9c17ebc90e34a8dc9600f" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::exp2f64</source>
          <target state="translated">함수 std :: intrinsics :: exp2f64</target>
        </trans-unit>
        <trans-unit id="18af580843073152f816810c9976eb7720febbca" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::expf32</source>
          <target state="translated">함수 std :: intrinsics :: expf32</target>
        </trans-unit>
        <trans-unit id="a487e6b4e2e45873fc4f641e5c506c952d1524af" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::expf64</source>
          <target state="translated">함수 std :: intrinsics :: expf64</target>
        </trans-unit>
        <trans-unit id="a8adaa7a58d666f4fbdf1e5525dfd0c198e51252" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fabsf32</source>
          <target state="translated">기능 std :: intrinsics :: fabsf32</target>
        </trans-unit>
        <trans-unit id="7629eebcb33c16f80571048ef86b1dfdd1a0f885" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fabsf64</source>
          <target state="translated">기능 std :: intrinsics :: fabsf64</target>
        </trans-unit>
        <trans-unit id="69b4f3a5e06eb557862c2a57da3d1fc73419e30a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fadd_fast</source>
          <target state="translated">기능 std :: intrinsics :: fadd_fast</target>
        </trans-unit>
        <trans-unit id="c7a18d7f11ba26cb1ed1051c2e9c904a9165cd84" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fdiv_fast</source>
          <target state="translated">함수 std :: intrinsics :: fdiv_fast</target>
        </trans-unit>
        <trans-unit id="53805e4a6d094a1ed0fc8ae314253cf3d18e4925" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::floorf32</source>
          <target state="translated">기능 std :: intrinsics :: floorf32</target>
        </trans-unit>
        <trans-unit id="5087cca6667fde2e528e02304268dd29727f68d5" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::floorf64</source>
          <target state="translated">기능 std :: intrinsics :: floorf64</target>
        </trans-unit>
        <trans-unit id="6d9e80778a8a8bb7b076af29d264cc6ac4d31464" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fmaf32</source>
          <target state="translated">기능 std :: intrinsics :: fmaf32</target>
        </trans-unit>
        <trans-unit id="69ccf507111b23d6b5f24105fccac6844e451347" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fmaf64</source>
          <target state="translated">기능 std :: intrinsics :: fmaf64</target>
        </trans-unit>
        <trans-unit id="2349408da65549dbec5bb73465311981246bbf97" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fmul_fast</source>
          <target state="translated">함수 std :: intrinsics :: fmul_fast</target>
        </trans-unit>
        <trans-unit id="cceed86fa20f56a919cf803345dd9b828df9674a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::forget</source>
          <target state="translated">기능 std :: intrinsics :: forget</target>
        </trans-unit>
        <trans-unit id="86f07f2b4a1330c776c20237c7c64e5350fe7a5e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::frem_fast</source>
          <target state="translated">함수 std :: intrinsics :: frem_fast</target>
        </trans-unit>
        <trans-unit id="231639afbfa8bf549bf19aa8a5784f9d60021d98" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fsub_fast</source>
          <target state="translated">함수 std :: intrinsics :: fsub_fast</target>
        </trans-unit>
        <trans-unit id="ed9c4a8ed619340f92e2a9df5452869c312b0de1" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::init</source>
          <target state="translated">기능 std :: intrinsics :: init</target>
        </trans-unit>
        <trans-unit id="7c1b33d44ee817a1195ff1ae434f17a8c881520d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::likely</source>
          <target state="translated">기능 std :: intrinsics :: likely</target>
        </trans-unit>
        <trans-unit id="9c1a2ccf1bde488fbc644dc3f8f44d65849caac1" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::log10f32</source>
          <target state="translated">함수 std :: intrinsics :: log10f32</target>
        </trans-unit>
        <trans-unit id="20d4bfb5aa64df87eaa6900cf1beefc654cf4a7a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::log10f64</source>
          <target state="translated">기능 std :: intrinsics :: log10f64</target>
        </trans-unit>
        <trans-unit id="c6b24066c8aa075221162eedd883f8b99c6e7962" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::log2f32</source>
          <target state="translated">함수 std :: intrinsics :: log2f32</target>
        </trans-unit>
        <trans-unit id="9727143de27fc62370d2a1b5926f675d501a3b4d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::log2f64</source>
          <target state="translated">함수 std :: intrinsics :: log2f64</target>
        </trans-unit>
        <trans-unit id="8932c55ef33afa4acde60b583c83ca8dc7bb2b5d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::logf32</source>
          <target state="translated">함수 std :: intrinsics :: logf32</target>
        </trans-unit>
        <trans-unit id="7f22cdc0fa2dacd7415fc7e9d0a094184c3cb950" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::logf64</source>
          <target state="translated">함수 std :: intrinsics :: logf64</target>
        </trans-unit>
        <trans-unit id="5d69b377a76975ef03024043cab2db73bb7cfd6e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::maxnumf32</source>
          <target state="translated">함수 std :: intrinsics :: maxnumf32</target>
        </trans-unit>
        <trans-unit id="a61de5d98ba89ecd434c9fa3a3ec1e6ad271b371" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::maxnumf64</source>
          <target state="translated">함수 std :: intrinsics :: maxnumf64</target>
        </trans-unit>
        <trans-unit id="88db98a255bac3fca6c1a7aded0061f0c5ffb992" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::min_align_of</source>
          <target state="translated">기능 std :: intrinsics :: min_align_of</target>
        </trans-unit>
        <trans-unit id="247c74b0f39ff5d9c9103b8959e5632c25d36333" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::min_align_of_val</source>
          <target state="translated">함수 std :: intrinsics :: min_align_of_val</target>
        </trans-unit>
        <trans-unit id="4e255574eb58b5b232e8ca21b4231687388852a6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::minnumf32</source>
          <target state="translated">함수 std :: intrinsics :: minnumf32</target>
        </trans-unit>
        <trans-unit id="4cb1c4535cd483762169b7280f6b0d67d38dc715" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::minnumf64</source>
          <target state="translated">함수 std :: intrinsics :: minnumf64</target>
        </trans-unit>
        <trans-unit id="64b7dd1362cd90b88d2e4cf4ba5b57fb272d0e86" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::move_val_init</source>
          <target state="translated">함수 std :: intrinsics :: move_val_init</target>
        </trans-unit>
        <trans-unit id="ba6b9dc8d20816d73a44eae1ff702793043a6c6b" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::mul_with_overflow</source>
          <target state="translated">함수 std :: intrinsics :: mul_with_overflow</target>
        </trans-unit>
        <trans-unit id="cc363bbfcaf0ddc1c5ccc5d4bf6c45a506adf48e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::nearbyintf32</source>
          <target state="translated">함수 std :: intrinsics :: nearbyintf32</target>
        </trans-unit>
        <trans-unit id="0e1ee55cf307484318085364bbe8e054ff2d4b2c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::nearbyintf64</source>
          <target state="translated">함수 std :: intrinsics :: nearbyintf64</target>
        </trans-unit>
        <trans-unit id="d28a1a5c27c1207609e01cd087a0b7734625a4b6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::needs_drop</source>
          <target state="translated">함수 std :: intrinsics :: needs_drop</target>
        </trans-unit>
        <trans-unit id="cb650b3e42edf7fc293ce90a39e6cb676d382183" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::nontemporal_store</source>
          <target state="translated">함수 std :: intrinsics :: nontemporal_store</target>
        </trans-unit>
        <trans-unit id="fafa1c6d37c3693abf8f4f9d868d6f55012eb92f" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::offset</source>
          <target state="translated">기능 std :: intrinsics :: offset</target>
        </trans-unit>
        <trans-unit id="5a22426f8e762b657e9fc40aeb64ce5e6c72d064" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::overflowing_add</source>
          <target state="translated">함수 std :: intrinsics :: overflowing_add</target>
        </trans-unit>
        <trans-unit id="4df7d5cfb3e78f525f98823f4fdfc3f1b6a232d3" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::overflowing_mul</source>
          <target state="translated">함수 std :: intrinsics :: overflowing_mul</target>
        </trans-unit>
        <trans-unit id="cfd20a808c9a3a59059a78ac374417c18c147162" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::overflowing_sub</source>
          <target state="translated">함수 std :: intrinsics :: overflowing_sub</target>
        </trans-unit>
        <trans-unit id="8aab4244d4cb857730352617a712962fe12596d7" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::panic_if_uninhabited</source>
          <target state="translated">std :: intrinsics :: panic_if_uninhabited 함수</target>
        </trans-unit>
        <trans-unit id="c0aa024e255736ab35130f77373eafc270b53271" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::powf32</source>
          <target state="translated">기능 std :: intrinsics :: powf32</target>
        </trans-unit>
        <trans-unit id="01ed7bdb862e4b6b2be4dd8a79730895bdce1811" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::powf64</source>
          <target state="translated">기능 std :: intrinsics :: powf64</target>
        </trans-unit>
        <trans-unit id="687108b30d40e0e24c3c047502aa9ccd4b054f8d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::powif32</source>
          <target state="translated">기능 std :: intrinsics :: powif32</target>
        </trans-unit>
        <trans-unit id="1ac5843df07be2dac60ad62b042b4211533da2e6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::powif64</source>
          <target state="translated">기능 std :: intrinsics :: powif64</target>
        </trans-unit>
        <trans-unit id="0a6e8570156d01a735127c81e305ad49d4e17077" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::pref_align_of</source>
          <target state="translated">함수 std :: intrinsics :: pref_align_of</target>
        </trans-unit>
        <trans-unit id="12a6591a462d811e6218d01e0da3c4ce046e4577" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::prefetch_read_data</source>
          <target state="translated">함수 std :: intrinsics :: prefetch_read_data</target>
        </trans-unit>
        <trans-unit id="b612cc839b74b18def501a5c39142a31d05c3251" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::prefetch_read_instruction</source>
          <target state="translated">함수 std :: intrinsics :: prefetch_read_instruction</target>
        </trans-unit>
        <trans-unit id="7cc4fef16b4e3346cf3e97a3bcfa63f4965a73fb" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::prefetch_write_data</source>
          <target state="translated">함수 std :: intrinsics :: prefetch_write_data</target>
        </trans-unit>
        <trans-unit id="98446d47acd3b1adcc37c4e4edac6c4d5d410bc1" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::prefetch_write_instruction</source>
          <target state="translated">함수 std :: intrinsics :: prefetch_write_instruction</target>
        </trans-unit>
        <trans-unit id="d3635ca7a4ece00d22e8745333a108e09321070e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::rintf32</source>
          <target state="translated">함수 std :: intrinsics :: rintf32</target>
        </trans-unit>
        <trans-unit id="b52123f2feab6d81200c8b6c82009aa05af9d5e8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::rintf64</source>
          <target state="translated">함수 std :: intrinsics :: rintf64</target>
        </trans-unit>
        <trans-unit id="5d25a2d6ed8eb295f10db9229d10b9b801b62aac" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::rotate_left</source>
          <target state="translated">함수 std :: intrinsics :: rotate_left</target>
        </trans-unit>
        <trans-unit id="6f64a0f1e08ebc04835dfcafc082dfa995ecca65" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::rotate_right</source>
          <target state="translated">함수 std :: intrinsics :: rotate_right</target>
        </trans-unit>
        <trans-unit id="01761bc7b91f5d00e064051e941086db75bc64eb" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::roundf32</source>
          <target state="translated">함수 std :: intrinsics :: roundf32</target>
        </trans-unit>
        <trans-unit id="e3f3c017ce47d7b4613d489a7dfa5c51d99c122a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::roundf64</source>
          <target state="translated">함수 std :: intrinsics :: roundf64</target>
        </trans-unit>
        <trans-unit id="56592ea3364203da6002bb091c8b5ada90dd06be" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::rustc_peek</source>
          <target state="translated">함수 std :: intrinsics :: rustc_peek</target>
        </trans-unit>
        <trans-unit id="4b62ddf100ee5e23c3b1e9f82f34aa6e7bbce1af" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::saturating_add</source>
          <target state="translated">함수 std :: intrinsics :: saturating_add</target>
        </trans-unit>
        <trans-unit id="c47d89e89860bbcd6e10cd71fc55d76f9c148c16" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::saturating_sub</source>
          <target state="translated">함수 std :: intrinsics :: saturating_sub</target>
        </trans-unit>
        <trans-unit id="a2f910e6e38dfbab9f3fe62488dc49c833f38693" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::sinf32</source>
          <target state="translated">기능 std :: intrinsics :: sinf32</target>
        </trans-unit>
        <trans-unit id="5b619a447d74b5fd6738770896593b7fe76db6ca" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::sinf64</source>
          <target state="translated">기능 std :: intrinsics :: sinf64</target>
        </trans-unit>
        <trans-unit id="602d9a20834ba884f5b93e6b43af744d53b52e84" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::size_of</source>
          <target state="translated">함수 std :: intrinsics :: size_of</target>
        </trans-unit>
        <trans-unit id="d932ae577dbc34467190ebf5837932cf7fbb0e16" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::size_of_val</source>
          <target state="translated">함수 std :: intrinsics :: size_of_val</target>
        </trans-unit>
        <trans-unit id="d08e2158f5b8cfa3eab183618a77ec54b076b30a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::sqrtf32</source>
          <target state="translated">함수 std :: intrinsics :: sqrtf32</target>
        </trans-unit>
        <trans-unit id="8dbb591c1397f0ba91c7f236b0a614975c326f6a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::sqrtf64</source>
          <target state="translated">기능 std :: intrinsics :: sqrtf64</target>
        </trans-unit>
        <trans-unit id="740c5394484a39f579e83b184235503d95960198" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::sub_with_overflow</source>
          <target state="translated">함수 std :: intrinsics :: sub_with_overflow</target>
        </trans-unit>
        <trans-unit id="393e4373d62b400801116f27af3199376f6e2ca1" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::transmute</source>
          <target state="translated">기능 std :: intrinsics :: transmute</target>
        </trans-unit>
        <trans-unit id="1226c6bc2b3fcfeb6f782c3e8390b9416f380d57" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::truncf32</source>
          <target state="translated">함수 std :: intrinsics :: truncf32</target>
        </trans-unit>
        <trans-unit id="edb587d16baed0c03c665836869638e3d11d6f56" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::truncf64</source>
          <target state="translated">함수 std :: intrinsics :: truncf64</target>
        </trans-unit>
        <trans-unit id="a57d356a02b0ff34ec68a387e9131952f056f9aa" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::try</source>
          <target state="translated">기능 std :: intrinsics :: try</target>
        </trans-unit>
        <trans-unit id="048a5087acf80c0faff9b518dcc85010ea41ae06" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::type_id</source>
          <target state="translated">함수 std :: intrinsics :: type_id</target>
        </trans-unit>
        <trans-unit id="e75acaff03c74f3f8ac169c744a94d8a2861e33a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::type_name</source>
          <target state="translated">함수 std :: intrinsics :: type_name</target>
        </trans-unit>
        <trans-unit id="187c861d5662a2fda8a4bf5846d843bd0201c65a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unaligned_volatile_load</source>
          <target state="translated">함수 std :: intrinsics :: unaligned_volatile_load</target>
        </trans-unit>
        <trans-unit id="e8eb96d3a4cd10e2625c8223b4805c89ed68cf61" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unaligned_volatile_store</source>
          <target state="translated">함수 std :: intrinsics :: unaligned_volatile_store</target>
        </trans-unit>
        <trans-unit id="93c26151cb053ed2646156176f682b5a446e90f0" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_add</source>
          <target state="translated">함수 std :: intrinsics :: unchecked_add</target>
        </trans-unit>
        <trans-unit id="4e47211d92e063ddfd83890496af3139cde8fc16" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_div</source>
          <target state="translated">함수 std :: intrinsics :: unchecked_div</target>
        </trans-unit>
        <trans-unit id="ad08da36331e84c72eea9029948dfa845c72a90e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_mul</source>
          <target state="translated">함수 std :: intrinsics :: unchecked_mul</target>
        </trans-unit>
        <trans-unit id="b2134ce439c68a3e1c68abdd0075fe3ce7125860" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_rem</source>
          <target state="translated">std :: intrinsics :: unchecked_rem 함수</target>
        </trans-unit>
        <trans-unit id="4c92ba0932c92f93ec0a719533727714b58b0697" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_shl</source>
          <target state="translated">함수 std :: intrinsics :: unchecked_shl</target>
        </trans-unit>
        <trans-unit id="ba6d2658ad2136cb3776c0d405847fb2996a7b26" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_shr</source>
          <target state="translated">std :: intrinsics :: unchecked_shr 함수</target>
        </trans-unit>
        <trans-unit id="3d1d1be087221db7a4bfc8d7ed23b90aa230d61e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_sub</source>
          <target state="translated">함수 std :: intrinsics :: unchecked_sub</target>
        </trans-unit>
        <trans-unit id="5a775a1f84e4e5935e7a1fa50f24f474b2f2ece9" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::uninit</source>
          <target state="translated">함수 std :: intrinsics :: uninit</target>
        </trans-unit>
        <trans-unit id="ac3412d8fdd72040d3536bb26f45818e160ddc4a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unlikely</source>
          <target state="translated">std :: intrinsics :: unlikely 기능</target>
        </trans-unit>
        <trans-unit id="bedb934a4c63e4e31201c35f9bd36ac2036acf4c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unreachable</source>
          <target state="translated">기능 std :: intrinsics :: unreachable</target>
        </trans-unit>
        <trans-unit id="345df5921d118e19bbbe36d890c957478b05ad24" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::volatile_copy_memory</source>
          <target state="translated">std :: intrinsics :: volatile_copy_memory 함수</target>
        </trans-unit>
        <trans-unit id="d15cadb9febd1bff809e35db3daeb66b7188a917" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::volatile_copy_nonoverlapping_memory</source>
          <target state="translated">기능 std :: intrinsics :: volatile_copy_nonoverlapping_memory</target>
        </trans-unit>
        <trans-unit id="07c6d83d44a425af2f32ab2dd74d20f7a63f96d4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::volatile_load</source>
          <target state="translated">함수 std :: intrinsics :: volatile_load</target>
        </trans-unit>
        <trans-unit id="c9412efc461309c92b831fdd57c484471b4f3eea" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::volatile_set_memory</source>
          <target state="translated">함수 std :: intrinsics :: volatile_set_memory</target>
        </trans-unit>
        <trans-unit id="1eb394e96696e1469e03dd3a669f002772e46b9a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::volatile_store</source>
          <target state="translated">함수 std :: intrinsics :: volatile_store</target>
        </trans-unit>
        <trans-unit id="4bb898dc02fd331bafb306f521470ae8500576f2" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::write_bytes</source>
          <target state="translated">std :: intrinsics :: write_bytes 함수</target>
        </trans-unit>
        <trans-unit id="1462d4d75a2c1721ae019391a3145504468f86be" translate="yes" xml:space="preserve">
          <source>Function std::io::copy</source>
          <target state="translated">기능 std :: io :: copy</target>
        </trans-unit>
        <trans-unit id="9d322972ffb0afbe003983c33a48b9602bb2f27f" translate="yes" xml:space="preserve">
          <source>Function std::io::empty</source>
          <target state="translated">기능 std :: io :: empty</target>
        </trans-unit>
        <trans-unit id="0e44261c77f2a9a37128f44301117effed40f1c3" translate="yes" xml:space="preserve">
          <source>Function std::io::repeat</source>
          <target state="translated">기능 std :: io :: repeat</target>
        </trans-unit>
        <trans-unit id="c29e5e3e5ed19f15f59bfadf33f1b68ff0bcec24" translate="yes" xml:space="preserve">
          <source>Function std::io::sink</source>
          <target state="translated">기능 std :: io :: sink</target>
        </trans-unit>
        <trans-unit id="f05871015518914000f1553345c9cdc1aacee082" translate="yes" xml:space="preserve">
          <source>Function std::io::stderr</source>
          <target state="translated">기능 std :: io :: stderr</target>
        </trans-unit>
        <trans-unit id="9f387e200f166807748357421615ad6cd24836ef" translate="yes" xml:space="preserve">
          <source>Function std::io::stdin</source>
          <target state="translated">기능 std :: io :: stdin</target>
        </trans-unit>
        <trans-unit id="08deee2644283017a2d65fbd802faf47f51890da" translate="yes" xml:space="preserve">
          <source>Function std::io::stdout</source>
          <target state="translated">기능 std :: io :: stdout</target>
        </trans-unit>
        <trans-unit id="3db86c4bbed75ef0f573f856b5cce7f9cf2ceefb" translate="yes" xml:space="preserve">
          <source>Function std::iter::empty</source>
          <target state="translated">기능 std :: iter :: empty</target>
        </trans-unit>
        <trans-unit id="66b49fad94d10ec92ebc41d1cee4b7f8d9b3b8fd" translate="yes" xml:space="preserve">
          <source>Function std::iter::from_fn</source>
          <target state="translated">함수 std :: iter :: from_fn</target>
        </trans-unit>
        <trans-unit id="dff51980c0868fb23253f76a41dc563a29201f61" translate="yes" xml:space="preserve">
          <source>Function std::iter::once</source>
          <target state="translated">기능 std :: iter :: once</target>
        </trans-unit>
        <trans-unit id="3d48207de32201be75ffe9021e62b76b7d2e78dd" translate="yes" xml:space="preserve">
          <source>Function std::iter::once_with</source>
          <target state="translated">기능 std :: iter :: once_with</target>
        </trans-unit>
        <trans-unit id="a2b35eb94e24a9505503301e6633d676822bef0c" translate="yes" xml:space="preserve">
          <source>Function std::iter::repeat</source>
          <target state="translated">기능 std :: iter :: repeat</target>
        </trans-unit>
        <trans-unit id="87a88047b36d48b765b5020959d507cb5f244ac7" translate="yes" xml:space="preserve">
          <source>Function std::iter::repeat_with</source>
          <target state="translated">함수 std :: iter :: repeat_with</target>
        </trans-unit>
        <trans-unit id="5ef587525044407aa0b4094d8f081edd2daddc8e" translate="yes" xml:space="preserve">
          <source>Function std::iter::successors</source>
          <target state="translated">기능 std :: iter :: successors</target>
        </trans-unit>
        <trans-unit id="e69ba0a2b2f3ad4e91cf8a195f315895ae885650" translate="yes" xml:space="preserve">
          <source>Function std::mem::align_of</source>
          <target state="translated">함수 std :: mem :: align_of</target>
        </trans-unit>
        <trans-unit id="f925a0568c240c6dd15386b07765248dacabf3db" translate="yes" xml:space="preserve">
          <source>Function std::mem::align_of_val</source>
          <target state="translated">함수 std :: mem :: align_of_val</target>
        </trans-unit>
        <trans-unit id="d9e95f4da151ab2a40c7e9698a17adc132df0f46" translate="yes" xml:space="preserve">
          <source>Function std::mem::discriminant</source>
          <target state="translated">기능 std :: mem :: discriminant</target>
        </trans-unit>
        <trans-unit id="6475a81fa7667dcc4953d17a2ae5fd2196a16c35" translate="yes" xml:space="preserve">
          <source>Function std::mem::drop</source>
          <target state="translated">기능 std :: mem :: drop</target>
        </trans-unit>
        <trans-unit id="34977281a088ed668126c16ffced4c672d9ee045" translate="yes" xml:space="preserve">
          <source>Function std::mem::forget</source>
          <target state="translated">기능 std :: mem :: forget</target>
        </trans-unit>
        <trans-unit id="93c2b9571818c664355ea5a0dcd917eacf555574" translate="yes" xml:space="preserve">
          <source>Function std::mem::forget_unsized</source>
          <target state="translated">함수 std :: mem :: forget_unsized</target>
        </trans-unit>
        <trans-unit id="6ddede8e9373838661e83d5e49c5870ddfc635d4" translate="yes" xml:space="preserve">
          <source>Function std::mem::min_align_of</source>
          <target state="translated">함수 std :: mem :: min_align_of</target>
        </trans-unit>
        <trans-unit id="22810ad4b80752b76f6272e78e7f24408c71745f" translate="yes" xml:space="preserve">
          <source>Function std::mem::min_align_of_val</source>
          <target state="translated">함수 std :: mem :: min_align_of_val</target>
        </trans-unit>
        <trans-unit id="e1b2757db0555bef1a5af563113bea383ea658f1" translate="yes" xml:space="preserve">
          <source>Function std::mem::needs_drop</source>
          <target state="translated">기능 std :: mem :: needs_drop</target>
        </trans-unit>
        <trans-unit id="1d250c3f7215728aec0a7bfa6379b0d693c87c55" translate="yes" xml:space="preserve">
          <source>Function std::mem::replace</source>
          <target state="translated">기능 std :: mem :: replace</target>
        </trans-unit>
        <trans-unit id="273ddf6ee92bb4e40157a902d61bcf24a9c611ad" translate="yes" xml:space="preserve">
          <source>Function std::mem::size_of</source>
          <target state="translated">기능 std :: mem :: size_of</target>
        </trans-unit>
        <trans-unit id="f9365fb71c6db7ab8823f257068c1fa0c61895c4" translate="yes" xml:space="preserve">
          <source>Function std::mem::size_of_val</source>
          <target state="translated">함수 std :: mem :: size_of_val</target>
        </trans-unit>
        <trans-unit id="5bf15dfcadccab356db41c543e7d2dd0719bc54b" translate="yes" xml:space="preserve">
          <source>Function std::mem::swap</source>
          <target state="translated">기능 std :: mem :: swap</target>
        </trans-unit>
        <trans-unit id="a9a358b3691976e722e4f46966a0191a117318e2" translate="yes" xml:space="preserve">
          <source>Function std::mem::take</source>
          <target state="translated">기능 std :: mem :: take</target>
        </trans-unit>
        <trans-unit id="8000c51bce3358a180dec44b363d021f765dee13" translate="yes" xml:space="preserve">
          <source>Function std::mem::transmute</source>
          <target state="translated">기능 std :: mem :: transmute</target>
        </trans-unit>
        <trans-unit id="a34058ce750ce0e9d7fea1e2756db0e58fabdb12" translate="yes" xml:space="preserve">
          <source>Function std::mem::transmute_copy</source>
          <target state="translated">함수 std :: mem :: transmute_copy</target>
        </trans-unit>
        <trans-unit id="e2168cf325d9fdb4bb40acb9002e87cae0a35230" translate="yes" xml:space="preserve">
          <source>Function std::mem::uninitialized</source>
          <target state="translated">기능 std :: mem :: uninitialized</target>
        </trans-unit>
        <trans-unit id="d6aee94a962f29ccad67cacb5695c37eb2e57120" translate="yes" xml:space="preserve">
          <source>Function std::mem::zeroed</source>
          <target state="translated">기능 std :: mem :: zeroed</target>
        </trans-unit>
        <trans-unit id="9fbabcc1415c98e197c63a5df4d5f8ec75a6fd2b" translate="yes" xml:space="preserve">
          <source>Function std::os::unix::fs::symlink</source>
          <target state="translated">기능 std :: os :: unix :: fs :: symlink</target>
        </trans-unit>
        <trans-unit id="0cb9d4491f67786e23110780ee139d285c647816" translate="yes" xml:space="preserve">
          <source>Function std::os::unix::process::parent_id</source>
          <target state="translated">함수 std :: os :: unix :: process :: parent_id</target>
        </trans-unit>
        <trans-unit id="955a8b38ef9ca7cc74dba342165900b733f89c71" translate="yes" xml:space="preserve">
          <source>Function std::os::windows::fs::symlink_dir</source>
          <target state="translated">기능 std :: os :: windows :: fs :: symlink_dir</target>
        </trans-unit>
        <trans-unit id="7030c8af6886acb93aefd94038042b18937920ce" translate="yes" xml:space="preserve">
          <source>Function std::os::windows::fs::symlink_file</source>
          <target state="translated">기능 std :: os :: windows :: fs :: symlink_file</target>
        </trans-unit>
        <trans-unit id="8561ba72a9691a11d16234536f898f0406c41e4b" translate="yes" xml:space="preserve">
          <source>Function std::panic::catch_unwind</source>
          <target state="translated">기능 std :: panic :: catch_unwind</target>
        </trans-unit>
        <trans-unit id="d0b54652683b0f081f3c450fac3c724be97e0e07" translate="yes" xml:space="preserve">
          <source>Function std::panic::resume_unwind</source>
          <target state="translated">기능 std :: panic :: resume_unwind</target>
        </trans-unit>
        <trans-unit id="39271975d3373b9cea19608740e1ec82ed2ae6b7" translate="yes" xml:space="preserve">
          <source>Function std::panic::set_hook</source>
          <target state="translated">기능 std :: panic :: set_hook</target>
        </trans-unit>
        <trans-unit id="bbe33939a3aefba77a1076ac9c7e64784a3a15b1" translate="yes" xml:space="preserve">
          <source>Function std::panic::take_hook</source>
          <target state="translated">기능 std :: panic :: take_hook</target>
        </trans-unit>
        <trans-unit id="25a8c22b45e0de0551522051b0461b2b6ab3b0ee" translate="yes" xml:space="preserve">
          <source>Function std::path::is_separator</source>
          <target state="translated">함수 std :: path :: is_separator</target>
        </trans-unit>
        <trans-unit id="f5cf3f4b834aa36120f315ecc6215ba2718045a8" translate="yes" xml:space="preserve">
          <source>Function std::process::abort</source>
          <target state="translated">기능 std :: process :: abort</target>
        </trans-unit>
        <trans-unit id="91cb6a8fd57a0224ea3dfbfbdf9c471db4732292" translate="yes" xml:space="preserve">
          <source>Function std::process::exit</source>
          <target state="translated">기능 std :: process :: exit</target>
        </trans-unit>
        <trans-unit id="64d60f6bf21bdc40c4034158a74b2e2029d72d52" translate="yes" xml:space="preserve">
          <source>Function std::process::id</source>
          <target state="translated">기능 std :: process :: id</target>
        </trans-unit>
        <trans-unit id="fde6de7146b98e72342b68e2f087fb2c0df102c7" translate="yes" xml:space="preserve">
          <source>Function std::ptr::copy</source>
          <target state="translated">함수 std :: ptr :: copy</target>
        </trans-unit>
        <trans-unit id="a761215fdab6c66c0e836d73083b80b5919290f7" translate="yes" xml:space="preserve">
          <source>Function std::ptr::copy_nonoverlapping</source>
          <target state="translated">함수 std :: ptr :: copy_nonoverlapping</target>
        </trans-unit>
        <trans-unit id="e5cd973501b571a40a9d66363842f4e1f61d69db" translate="yes" xml:space="preserve">
          <source>Function std::ptr::drop_in_place</source>
          <target state="translated">함수 std :: ptr :: drop_in_place</target>
        </trans-unit>
        <trans-unit id="7d8139ca630c43a21993cd3cc28785c5944a7309" translate="yes" xml:space="preserve">
          <source>Function std::ptr::eq</source>
          <target state="translated">기능 std :: ptr :: eq</target>
        </trans-unit>
        <trans-unit id="9f66565ab45d94ff05fc6926dcfe0bbd68272b62" translate="yes" xml:space="preserve">
          <source>Function std::ptr::hash</source>
          <target state="translated">함수 std :: ptr :: hash</target>
        </trans-unit>
        <trans-unit id="a03cdb32dfba992c5ba308341a9ecf47921cafcd" translate="yes" xml:space="preserve">
          <source>Function std::ptr::null</source>
          <target state="translated">함수 std :: ptr :: null</target>
        </trans-unit>
        <trans-unit id="4c7d5ac57a6bf5a7b544b85794d87b81e4bab2bb" translate="yes" xml:space="preserve">
          <source>Function std::ptr::null_mut</source>
          <target state="translated">함수 std :: ptr :: null_mut</target>
        </trans-unit>
        <trans-unit id="c850fed4a12786c6b64cf8983a8b4ed6836f871b" translate="yes" xml:space="preserve">
          <source>Function std::ptr::read</source>
          <target state="translated">기능 std :: ptr :: read</target>
        </trans-unit>
        <trans-unit id="b5627f9e5c58db99606464fa93bdcc9942395ffe" translate="yes" xml:space="preserve">
          <source>Function std::ptr::read_unaligned</source>
          <target state="translated">함수 std :: ptr :: read_unaligned</target>
        </trans-unit>
        <trans-unit id="cfe13a6b31ec05872aa7514cbd914f1bb5861485" translate="yes" xml:space="preserve">
          <source>Function std::ptr::read_volatile</source>
          <target state="translated">함수 std :: ptr :: read_volatile</target>
        </trans-unit>
        <trans-unit id="d039612bde4c6048992efb15148a025858e32b3b" translate="yes" xml:space="preserve">
          <source>Function std::ptr::replace</source>
          <target state="translated">함수 std :: ptr :: replace</target>
        </trans-unit>
        <trans-unit id="d248267b6dd81ea6d45a36bf72ea24089aebcfc9" translate="yes" xml:space="preserve">
          <source>Function std::ptr::slice_from_raw_parts</source>
          <target state="translated">함수 std :: ptr :: slice_from_raw_parts</target>
        </trans-unit>
        <trans-unit id="993ad2b27084f4ef376400115cc16edac21caa44" translate="yes" xml:space="preserve">
          <source>Function std::ptr::slice_from_raw_parts_mut</source>
          <target state="translated">함수 std :: ptr :: slice_from_raw_parts_mut</target>
        </trans-unit>
        <trans-unit id="9d32d4c811c372eac376d6b3bdbf406666808400" translate="yes" xml:space="preserve">
          <source>Function std::ptr::swap</source>
          <target state="translated">기능 std :: ptr :: swap</target>
        </trans-unit>
        <trans-unit id="ddca334754be5ad5ccbbcff1fdd2a964723a383a" translate="yes" xml:space="preserve">
          <source>Function std::ptr::swap_nonoverlapping</source>
          <target state="translated">함수 std :: ptr :: swap_nonoverlapping</target>
        </trans-unit>
        <trans-unit id="0a29c6829aba2904ca27c5fa1c9fe49944ebe1c7" translate="yes" xml:space="preserve">
          <source>Function std::ptr::write</source>
          <target state="translated">함수 std :: ptr :: write</target>
        </trans-unit>
        <trans-unit id="6f751c45c330611925cbdc91328104f0d8563329" translate="yes" xml:space="preserve">
          <source>Function std::ptr::write_bytes</source>
          <target state="translated">함수 std :: ptr :: write_bytes</target>
        </trans-unit>
        <trans-unit id="1fda9527bc74f49c29a63948c2c6dbd1ab94b1f4" translate="yes" xml:space="preserve">
          <source>Function std::ptr::write_unaligned</source>
          <target state="translated">함수 std :: ptr :: write_unaligned</target>
        </trans-unit>
        <trans-unit id="6144b17aff45708885f2b21a0ccd281ad4b03511" translate="yes" xml:space="preserve">
          <source>Function std::ptr::write_volatile</source>
          <target state="translated">함수 std :: ptr :: write_volatile</target>
        </trans-unit>
        <trans-unit id="a2b7a6ea0f1d928fd925aaf7a8ce4d41592caaba" translate="yes" xml:space="preserve">
          <source>Function std::slice::from_mut</source>
          <target state="translated">함수 std :: slice :: from_mut</target>
        </trans-unit>
        <trans-unit id="c9b1f099f247a42a47b176a483889ae2efb191a9" translate="yes" xml:space="preserve">
          <source>Function std::slice::from_raw_parts</source>
          <target state="translated">함수 std :: slice :: from_raw_parts</target>
        </trans-unit>
        <trans-unit id="1572930120c6eeb9d2f52363340245d3c52eeaa2" translate="yes" xml:space="preserve">
          <source>Function std::slice::from_raw_parts_mut</source>
          <target state="translated">함수 std :: slice :: from_raw_parts_mut</target>
        </trans-unit>
        <trans-unit id="ec11607378374baf49258a7deea8633da5e2c00f" translate="yes" xml:space="preserve">
          <source>Function std::slice::from_ref</source>
          <target state="translated">함수 std :: slice :: from_ref</target>
        </trans-unit>
        <trans-unit id="5f10d43fc04f417378de60595b6a08287404fc58" translate="yes" xml:space="preserve">
          <source>Function std::str::from_boxed_utf8_unchecked</source>
          <target state="translated">std :: str :: from_boxed_utf8_unchecked 함수</target>
        </trans-unit>
        <trans-unit id="b3494167f42728c01d009e107c9996379772b067" translate="yes" xml:space="preserve">
          <source>Function std::str::from_utf8</source>
          <target state="translated">함수 std :: str :: from_utf8</target>
        </trans-unit>
        <trans-unit id="8ab808fea002d56433d1a4c8010bde81eaf0bafe" translate="yes" xml:space="preserve">
          <source>Function std::str::from_utf8_mut</source>
          <target state="translated">함수 std :: str :: from_utf8_mut</target>
        </trans-unit>
        <trans-unit id="c9eb986ba9ada7c0b92ddab5aeb8be6542adebfb" translate="yes" xml:space="preserve">
          <source>Function std::str::from_utf8_unchecked</source>
          <target state="translated">함수 std :: str :: from_utf8_unchecked</target>
        </trans-unit>
        <trans-unit id="ff6fb073e193843ab8761db003fa3d1397bde0ae" translate="yes" xml:space="preserve">
          <source>Function std::str::from_utf8_unchecked_mut</source>
          <target state="translated">함수 std :: str :: from_utf8_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="426edab7099b267d5c0fadbf655008d3c3071033" translate="yes" xml:space="preserve">
          <source>Function std::sync::atomic::compiler_fence</source>
          <target state="translated">함수 std :: sync :: atomic :: compiler_fence</target>
        </trans-unit>
        <trans-unit id="746c3ced7e8fb5967d8a30871aeec3190755754d" translate="yes" xml:space="preserve">
          <source>Function std::sync::atomic::fence</source>
          <target state="translated">기능 std :: sync :: atomic :: fence</target>
        </trans-unit>
        <trans-unit id="417c1f03a8782ffed0046f05147205a5928d2325" translate="yes" xml:space="preserve">
          <source>Function std::sync::atomic::spin_loop_hint</source>
          <target state="translated">기능 std :: sync :: atomic :: spin_loop_hint</target>
        </trans-unit>
        <trans-unit id="ca876872e4c8a255561392341646d67ae0b513b3" translate="yes" xml:space="preserve">
          <source>Function std::sync::mpsc::channel</source>
          <target state="translated">기능 std :: sync :: mpsc :: channel</target>
        </trans-unit>
        <trans-unit id="ed61e6291293ba5e6efc025a526a4ca0aeef12a5" translate="yes" xml:space="preserve">
          <source>Function std::sync::mpsc::sync_channel</source>
          <target state="translated">기능 std :: sync :: mpsc :: sync_channel</target>
        </trans-unit>
        <trans-unit id="0af550e5e373712dc2a979ef83bfd2ff92a021a5" translate="yes" xml:space="preserve">
          <source>Function std::thread::current</source>
          <target state="translated">기능 std :: thread :: current</target>
        </trans-unit>
        <trans-unit id="fe9807edb6332c001f6afe09456d514679fa63c2" translate="yes" xml:space="preserve">
          <source>Function std::thread::panicking</source>
          <target state="translated">기능 std :: thread :: panicking</target>
        </trans-unit>
        <trans-unit id="9315e3ef8d5452c0247f62dbf54f7a6f10da132d" translate="yes" xml:space="preserve">
          <source>Function std::thread::park</source>
          <target state="translated">기능 std :: thread :: park</target>
        </trans-unit>
        <trans-unit id="fcab5565f3d2f6769e2d47ead2f243674b5700e5" translate="yes" xml:space="preserve">
          <source>Function std::thread::park_timeout</source>
          <target state="translated">함수 std :: thread :: park_timeout</target>
        </trans-unit>
        <trans-unit id="2f1f8ca90cd667cbf91c70fd5328d42118f543d6" translate="yes" xml:space="preserve">
          <source>Function std::thread::park_timeout_ms</source>
          <target state="translated">함수 std :: thread :: park_timeout_ms</target>
        </trans-unit>
        <trans-unit id="11ae6d9580fb9910ca48b8e032535befd540831c" translate="yes" xml:space="preserve">
          <source>Function std::thread::sleep</source>
          <target state="translated">기능 std :: thread :: sleep</target>
        </trans-unit>
        <trans-unit id="1f22ee1120ba93e964441735b057a58abda65aa0" translate="yes" xml:space="preserve">
          <source>Function std::thread::sleep_ms</source>
          <target state="translated">함수 std :: thread :: sleep_ms</target>
        </trans-unit>
        <trans-unit id="659b9896115b8a757c17153932bb710d0018ce8b" translate="yes" xml:space="preserve">
          <source>Function std::thread::spawn</source>
          <target state="translated">기능 std :: thread :: spawn</target>
        </trans-unit>
        <trans-unit id="e317cb6f0697f119f701c359a0df2074f48a4962" translate="yes" xml:space="preserve">
          <source>Function std::thread::yield_now</source>
          <target state="translated">함수 std :: thread :: yield_now</target>
        </trans-unit>
        <trans-unit id="6cd47a4c3bb4392119be7e20d333f200330e1d43" translate="yes" xml:space="preserve">
          <source>Function types:</source>
          <target state="translated">기능 유형 :</target>
        </trans-unit>
        <trans-unit id="2e3030f5a7f048cef8382d50828336e71bb753d2" translate="yes" xml:space="preserve">
          <source>Function-like macros</source>
          <target state="translated">함수형 매크로</target>
        </trans-unit>
        <trans-unit id="2a9fd93daca58d7ebff71d8a39637cdf3ce39fd8" translate="yes" xml:space="preserve">
          <source>Function-like macros define macros that look like function calls. Similarly to &lt;code&gt;macro_rules!&lt;/code&gt; macros, they&amp;rsquo;re more flexible than functions; for example, they can take an unknown number of arguments. However, &lt;code&gt;macro_rules!&lt;/code&gt; macros can be defined only using the match-like syntax we discussed in the section &lt;a href=&quot;#declarative-macros-with-macro_rules-for-general-metaprogramming&quot;&gt;&amp;ldquo;Declarative Macros with &lt;code&gt;macro_rules!&lt;/code&gt; for General Metaprogramming&amp;rdquo;&lt;/a&gt; earlier. Function-like macros take a &lt;code&gt;TokenStream&lt;/code&gt; parameter and their definition manipulates that &lt;code&gt;TokenStream&lt;/code&gt; using Rust code as the other two types of procedural macros do. An example of a function-like macro is an &lt;code&gt;sql!&lt;/code&gt; macro that might be called like so:</source>
          <target state="translated">함수형 매크로는 함수 호출처럼 보이는 매크로를 정의합니다. &lt;code&gt;macro_rules!&lt;/code&gt; 유사합니다 ! 매크로는 함수보다 유연합니다. 예를 들어, 알려지지 않은 수의 인수를 취할 수 있습니다. 그러나 &lt;code&gt;macro_rules!&lt;/code&gt; 매크로는 &lt;a href=&quot;#declarative-macros-with-macro_rules-for-general-metaprogramming&quot;&gt;&amp;ldquo; &lt;code&gt;macro_rules!&lt;/code&gt; 선언적 매크로 ! &quot;일반 메타 프로그래밍에 대한&lt;/a&gt; 이전. 함수형 매크로는 &lt;code&gt;TokenStream&lt;/code&gt; 매개 변수를 사용하며 정의 는 다른 두 가지 유형의 절차 매크로와 마찬가지로 Rust 코드를 사용하여 해당 &lt;code&gt;TokenStream&lt;/code&gt; 을 조작합니다 . 함수형 매크로의 예는 &lt;code&gt;sql!&lt;/code&gt; 다음과 같이 매크로가 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13e701d0c602544129b90642819e8ce654632b4a" translate="yes" xml:space="preserve">
          <source>Function-like macros that look like function calls but operate on the tokens specified as their argument</source>
          <target state="translated">함수 호출처럼 보이지만 인수로 지정된 토큰에서 작동하는 함수 유사 매크로</target>
        </trans-unit>
        <trans-unit id="08300f312a4ed1b5c2034356b30682b98bac9713" translate="yes" xml:space="preserve">
          <source>Function-like procedural macros</source>
          <target state="translated">함수형 절차 매크로</target>
        </trans-unit>
        <trans-unit id="f7211ee113b9788f705f277792fadeeb3dfa5aa3" translate="yes" xml:space="preserve">
          <source>Function-like procedural macros may be invoked in any macro invocation position, which includes &lt;a href=&quot;statements&quot;&gt;statements&lt;/a&gt;, &lt;a href=&quot;expressions&quot;&gt;expressions&lt;/a&gt;, &lt;a href=&quot;patterns&quot;&gt;patterns&lt;/a&gt;, &lt;a href=&quot;types#type-expressions&quot;&gt;type expressions&lt;/a&gt;, &lt;a href=&quot;items&quot;&gt;item&lt;/a&gt; positions, including items in &lt;a href=&quot;items/external-blocks&quot;&gt;&lt;code&gt;extern&lt;/code&gt; blocks&lt;/a&gt;, inherent and trait &lt;a href=&quot;items/implementations&quot;&gt;implementations&lt;/a&gt;, and &lt;a href=&quot;items/traits&quot;&gt;trait definitions&lt;/a&gt;.</source>
          <target state="translated">함수와 유사한 절차 적 매크로는 &lt;a href=&quot;statements&quot;&gt;구문&lt;/a&gt; , &lt;a href=&quot;expressions&quot;&gt;표현식&lt;/a&gt; , &lt;a href=&quot;patterns&quot;&gt;패턴&lt;/a&gt; , &lt;a href=&quot;types#type-expressions&quot;&gt;유형 표현식&lt;/a&gt; , &lt;a href=&quot;items&quot;&gt;항목&lt;/a&gt; 위치 ( &lt;a href=&quot;items/external-blocks&quot;&gt; &lt;code&gt;extern&lt;/code&gt; 블록의&lt;/a&gt; 항목 포함) , 고유 및 특성 &lt;a href=&quot;items/implementations&quot;&gt;구현&lt;/a&gt; 및 &lt;a href=&quot;items/traits&quot;&gt;특성 정의&lt;/a&gt; 를 포함하는 모든 매크로 호출 위치에서 호출 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="95ee21bcc50578b01a326947473e22f8250802dc" translate="yes" xml:space="preserve">
          <source>Functional Language Features: Iterators and Closures</source>
          <target state="translated">기능적 언어 기능 : 반복자와 클로저</target>
        </trans-unit>
        <trans-unit id="4e21f7bee8221a74639e92992dc14d632a7c8af0" translate="yes" xml:space="preserve">
          <source>Functional update syntax</source>
          <target state="translated">기능 업데이트 구문</target>
        </trans-unit>
        <trans-unit id="1a08f42a1b56e730c49367ca1e924228662ea26b" translate="yes" xml:space="preserve">
          <source>Functionality for ordering and comparison.</source>
          <target state="translated">주문 및 비교 기능.</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="79a1ec8a61d65a41557e7d6041585e466687237c" translate="yes" xml:space="preserve">
          <source>Functions and consts can both be defined in an implementation. A function defined in an &lt;code&gt;impl&lt;/code&gt; block can be standalone, meaning it would be called like &lt;code&gt;Foo::bar()&lt;/code&gt;. If the function takes &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;&amp;amp;self&lt;/code&gt;, or &lt;code&gt;&amp;amp;mut self&lt;/code&gt; as its first argument, it can also be called using method-call syntax, a familiar feature to any object oriented programmer, like &lt;code&gt;foo.bar()&lt;/code&gt;.</source>
          <target state="translated">함수와 const는 모두 구현에서 정의 할 수 있습니다. &lt;code&gt;impl&lt;/code&gt; 블록에 정의 된 함수 는 독립형 일 수 있으며 &lt;code&gt;Foo::bar()&lt;/code&gt; 와 같이 호출 됩니다. 함수가 &lt;code&gt;self&lt;/code&gt; , &lt;code&gt;&amp;amp;self&lt;/code&gt; 또는 &lt;code&gt;&amp;amp;mut self&lt;/code&gt; 를 첫 번째 인수로 사용하는 경우 &lt;code&gt;foo.bar()&lt;/code&gt; 와 같은 객체 지향 프로그래머에게 친숙한 기능인 메소드 호출 구문을 사용하여 호출 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="349871b1a6efea930aaaf0ae51e6d8084ba76744" translate="yes" xml:space="preserve">
          <source>Functions are pervasive in Rust code. You&amp;rsquo;ve already seen one of the most important functions in the language: the &lt;code&gt;main&lt;/code&gt; function, which is the entry point of many programs. You&amp;rsquo;ve also seen the &lt;code&gt;fn&lt;/code&gt; keyword, which allows you to declare new functions.</source>
          <target state="translated">Rust 코드에는 함수가 널리 사용됩니다. 이미 언어에서 가장 중요한 기능 중 하나 인 &lt;code&gt;main&lt;/code&gt; 기능은 많은 프로그램의 진입 점입니다. 새로운 기능을 선언 할 수있는 &lt;code&gt;fn&lt;/code&gt; 키워드 도 보았습니다 .</target>
        </trans-unit>
        <trans-unit id="ec13d42591018f6323f28c9a51bc9ae1f1e62226" translate="yes" xml:space="preserve">
          <source>Functions are the primary way code is executed within Rust. Function blocks, usually just called functions, can be defined in a variety of different places and be assigned many different attributes and modifiers.</source>
          <target state="translated">함수는 Rust 내에서 코드가 실행되는 기본 방식입니다. 일반적으로 기능이라고하는 기능 블록은 다양한 장소에 정의 할 수 있으며 여러 가지 속성과 수정자를 할당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c9b40f565c06060c423846265af5229e6fca5a3" translate="yes" xml:space="preserve">
          <source>Functions can also be defined to have &lt;em&gt;parameters&lt;/em&gt;, which are special variables that are part of a function&amp;rsquo;s signature. When a function has parameters, you can provide it with concrete values for those parameters. Technically, the concrete values are called &lt;em&gt;arguments&lt;/em&gt;, but in casual conversation, people tend to use the words &lt;em&gt;parameter&lt;/em&gt; and &lt;em&gt;argument&lt;/em&gt; interchangeably for either the variables in a function&amp;rsquo;s definition or the concrete values passed in when you call a function.</source>
          <target state="translated">또한 함수는 시그니처의 일부인 특수 변수 인 &lt;em&gt;parameters&lt;/em&gt; 를 갖도록 정의 할 수 있습니다 . 함수에 매개 변수가 있으면 해당 매개 변수에 대한 구체적인 값을 제공 할 수 있습니다. 기술적으로 구체적인 값은 &lt;em&gt;arguments&lt;/em&gt; 이지만 우연한 대화에서는 사람들이 함수 정의의 변수 또는 함수를 호출 할 때 전달되는 구체적 값에 대해 단어 &lt;em&gt;매개 변수&lt;/em&gt; 와 &lt;em&gt;인수를&lt;/em&gt; 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7772489f6a9ea8bcb945930292f262cd76d7056" translate="yes" xml:space="preserve">
          <source>Functions can declare an argument to be an anonymous type parameter where the callee must provide a type that has the bounds declared by the anonymous type parameter and the function can only use the methods available by the trait bounds of the anonymous type parameter.</source>
          <target state="translated">함수는 인수가 익명 형식 매개 변수로 선언 할 수 있으며 여기서 수신자는 익명 형식 매개 변수에 의해 선언 된 범위를 가진 형식을 제공해야하며 익명 형식 매개 변수의 특성 범위에서만 사용할 수있는 메서드 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e06e07a734b3acc49e3963f1c74ffeae667ea5a" translate="yes" xml:space="preserve">
          <source>Functions can return values to the code that calls them. We don&amp;rsquo;t name return values, but we do declare their type after an arrow (&lt;code&gt;-&amp;gt;&lt;/code&gt;). In Rust, the return value of the function is synonymous with the value of the final expression in the block of the body of a function. You can return early from a function by using the &lt;code&gt;return&lt;/code&gt; keyword and specifying a value, but most functions return the last expression implicitly. Here&amp;rsquo;s an example of a function that returns a value:</source>
          <target state="translated">함수는이를 호출하는 코드에 값을 반환 할 수 있습니다. 반환 값의 이름은 지정하지 않지만 화살표 ( &lt;code&gt;-&amp;gt;&lt;/code&gt; ) 뒤에 유형을 선언합니다 . Rust에서 함수의 반환 값은 함수 본문 블록의 최종 표현식 값과 동의어입니다. &lt;code&gt;return&lt;/code&gt; 키워드 를 사용하고 값을 지정 하여 함수에서 일찍 반환 할 수 있지만 대부분의 함수는 마지막 식을 암시 적으로 반환합니다. 다음은 값을 반환하는 함수의 예입니다.</target>
        </trans-unit>
        <trans-unit id="8578e1edc63515b51db6bed787869c23c34bb35c" translate="yes" xml:space="preserve">
          <source>Functions do not capture local variables. To fix this error, you can replace the function with a closure:</source>
          <target state="translated">함수는 지역 변수를 캡처하지 않습니다. 이 오류를 해결하기 위해 함수를 클로저로 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a188df8eec44f8cdac6c18fd47adbe486ec7642" translate="yes" xml:space="preserve">
          <source>Functions in Rust can be called by foreign code, and using an ABI that differs from Rust allows, for example, to provide functions that can be called from other programming languages like C:</source>
          <target state="translated">Rust의 함수는 외래 코드로 호출 할 수 있으며, Rust와 다른 ABI를 사용하면 예를 들어 C와 같은 다른 프로그래밍 언어에서 호출 할 수있는 함수를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c048b3feb011016ec1af315c1f0d26b938c26a99" translate="yes" xml:space="preserve">
          <source>Functions in this module will block the current &lt;strong&gt;thread&lt;/strong&gt; of execution and are bindings to system-provided condition variables where possible. Note that this module places one additional restriction over the system condition variables: each condvar can be used with precisely one mutex at runtime. Any attempt to use multiple mutexes on the same condition variable will result in a runtime panic. If this is not desired, then the unsafe primitives in &lt;code&gt;sys&lt;/code&gt; do not have this restriction but may result in undefined behavior.</source>
          <target state="translated">이 모듈의 함수는 현재 실행 &lt;strong&gt;스레드&lt;/strong&gt; 를 차단하고 가능한 경우 시스템 제공 조건 변수에 바인딩합니다. 이 모듈은 시스템 조건 변수에 대해 하나의 추가 제한 사항을 적용합니다. 각 condvar는 런타임시 정확히 하나의 뮤텍스와 함께 사용할 수 있습니다. 동일한 조건 변수에서 여러 뮤텍스를 사용하려고하면 런타임 패닉이 발생합니다. 이것이 바람직하지 않은 경우, &lt;code&gt;sys&lt;/code&gt; 의 안전하지 않은 프리미티브 에는이 제한이 없지만 정의되지 않은 동작이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19486dfa520b69c11a03500cb78fcde335f9a159" translate="yes" xml:space="preserve">
          <source>Functions in this module will block the current &lt;strong&gt;thread&lt;/strong&gt; of execution. Note that any attempt to use multiple mutexes on the same condition variable may result in a runtime panic.</source>
          <target state="translated">이 모듈의 함수는 현재 실행 &lt;strong&gt;스레드&lt;/strong&gt; 를 차단합니다 . 동일한 조건 변수에 여러 뮤텍스를 사용하려고하면 런타임 패닉이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a797a5b3b54d57d908332f50a0ff14a598f923ef" translate="yes" xml:space="preserve">
          <source>Functions marked with &lt;code&gt;target_feature&lt;/code&gt; are not inlined into a context that does not support the given features. The &lt;code&gt;#[inline(always)]&lt;/code&gt; attribute may not be used with a &lt;code&gt;target_feature&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;target_feature&lt;/code&gt; 로 표시된 함수 는 지정된 기능을 지원하지 않는 컨텍스트에 인라인되지 않습니다. &lt;code&gt;#[inline(always)]&lt;/code&gt; 속성은 함께 사용할 수 없다 &lt;code&gt;target_feature&lt;/code&gt; 의 속성.</target>
        </trans-unit>
        <trans-unit id="0500c980225aaa328a97ddd71516215766d4d2c7" translate="yes" xml:space="preserve">
          <source>Functions may be qualified as async, and this can also be combined with the &lt;code&gt;unsafe&lt;/code&gt; qualifier:</source>
          <target state="translated">함수는 비동기로 규정 될 수 있으며 &lt;code&gt;unsafe&lt;/code&gt; 규정 자 와 결합 될 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="19ba2d6d6d2c4bf90e78758d9ffb195fa04a9907" translate="yes" xml:space="preserve">
          <source>Functions qualified with the &lt;code&gt;const&lt;/code&gt; keyword are &lt;a href=&quot;../const_eval#const-functions&quot;&gt;const functions&lt;/a&gt;, as are &lt;a href=&quot;structs&quot;&gt;tuple struct&lt;/a&gt; and &lt;a href=&quot;enumerations&quot;&gt;tuple variant&lt;/a&gt; constructors. &lt;em&gt;Const functions&lt;/em&gt; can be called from within &lt;a href=&quot;../const_eval#const-context&quot;&gt;const context&lt;/a&gt;s.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 키워드로 정규화 된 &lt;a href=&quot;../const_eval#const-functions&quot;&gt;함수&lt;/a&gt; 는 &lt;a href=&quot;structs&quot;&gt;튜플 구조체&lt;/a&gt; 및 &lt;a href=&quot;enumerations&quot;&gt;튜플 변형&lt;/a&gt; 생성자 와 마찬가지로 const 함수 입니다. &lt;em&gt;Const 함수&lt;/em&gt; 는 &lt;a href=&quot;../const_eval#const-context&quot;&gt;const 컨텍스트&lt;/a&gt; 내에서 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="debf8c3aa1da35922894a71fde41ce5baca3e6ad" translate="yes" xml:space="preserve">
          <source>Functions qualified with the &lt;code&gt;const&lt;/code&gt; keyword are const functions. &lt;em&gt;Const functions&lt;/em&gt; can be called from within &lt;a href=&quot;../const_eval#const-context&quot;&gt;const context&lt;/a&gt;s. When called from a const context, the function is interpreted by the compiler at compile time. The interpretation happens in the environment of the compilation target and not the host. So &lt;code&gt;usize&lt;/code&gt; is &lt;code&gt;32&lt;/code&gt; bits if you are compiling against a &lt;code&gt;32&lt;/code&gt; bit system, irrelevant of whether you are building on a &lt;code&gt;64&lt;/code&gt; bit or a &lt;code&gt;32&lt;/code&gt; bit system.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 키워드로 한정된 함수는 const 함수입니다. &lt;a href=&quot;../const_eval#const-context&quot;&gt;const 컨텍스트&lt;/a&gt; 내에서 const &lt;em&gt;함수&lt;/em&gt; 를 호출 할 수 있습니다 . const 컨텍스트에서 호출되면 함수는 컴파일 타임에 컴파일러에 의해 해석됩니다. 해석은 호스트가 아닌 컴파일 대상 환경에서 발생합니다. 따라서 &lt;code&gt;64&lt;/code&gt; 비트 또는 &lt;code&gt;32&lt;/code&gt; 비트 시스템 에서 빌드하는지 여부와 상관없이 &lt;code&gt;32&lt;/code&gt; 비트 시스템 에 대해 컴파일하는 경우 &lt;code&gt;usize&lt;/code&gt; 는 &lt;code&gt;32&lt;/code&gt; 비트 입니다.</target>
        </trans-unit>
        <trans-unit id="27716c2844ef6662e00babc6885a69e2dec63380" translate="yes" xml:space="preserve">
          <source>Functions return &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; whenever errors are expected and recoverable. In the &lt;code&gt;std&lt;/code&gt; crate, &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; is most prominently used for &lt;a href=&quot;../io/index&quot;&gt;I/O&lt;/a&gt;.</source>
          <target state="translated">오류가 예상되고 복구 가능할 때마다 함수가 &lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; 반환 합니다. 에서 &lt;code&gt;std&lt;/code&gt; 상자, &lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; 가장 눈에 띄게 사용되는 &lt;a href=&quot;../io/index&quot;&gt;I / O&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ba4110fcc3e4c930df9cd4a44d4369d4a726954" translate="yes" xml:space="preserve">
          <source>Functions which take an &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; and return another &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; are often called 'iterator adapters', as they're a form of the 'adapter pattern'.</source>
          <target state="translated">&lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 를 가져와 다른 &lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; 를&lt;/a&gt; 반환 하는 함수 는 '어댑터 패턴'의 형식이므로 종종 '반복자 어댑터'라고합니다.</target>
        </trans-unit>
        <trans-unit id="e3428425ba667eae06c3ff2021c3de7d88b772af" translate="yes" xml:space="preserve">
          <source>Functions with Return Values</source>
          <target state="translated">반환 값이있는 함수</target>
        </trans-unit>
        <trans-unit id="b18578d36545499a01a7076ba62b48fa01f0c848" translate="yes" xml:space="preserve">
          <source>Functions with an ABI that differs from &lt;code&gt;&quot;Rust&quot;&lt;/code&gt; do not support unwinding in the exact same way that Rust does. Therefore, unwinding past the end of functions with such ABIs causes the process to abort.</source>
          <target state="translated">&lt;code&gt;&quot;Rust&quot;&lt;/code&gt; 와 다른 ABI를 사용하는 함수는 Rust 와 똑같은 방식으로 해제를 지원하지 않습니다. 따라서 이러한 ABI를 사용하여 기능의 끝을지나 풀면 프로세스가 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="92807c856bd111462699f9e06c09bb56c14702fe" translate="yes" xml:space="preserve">
          <source>Functions within external blocks are declared in the same way as other Rust functions, with the exception that they may not have a body and are instead terminated by a semicolon. Patterns are not allowed in parameters, only &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; or &lt;code&gt;_&lt;/code&gt; may be used.</source>
          <target state="translated">외부 블록 내의 함수는 다른 Rust 함수와 동일한 방식으로 선언됩니다. 단, 본문이 없을 수 있고 세미콜론으로 종료됩니다. 매개 변수에는 패턴을 사용할 수 없으며 &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; 또는 &lt;code&gt;_&lt;/code&gt; 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc77dcb074f08a32cc87de1996bea238f078997a" translate="yes" xml:space="preserve">
          <source>Functions within external blocks may be called by Rust code, just like functions defined in Rust. The Rust compiler automatically translates between the Rust ABI and the foreign ABI.</source>
          <target state="translated">외부 블록 내의 함수는 Rust에 정의 된 함수와 마찬가지로 Rust 코드에 의해 호출 될 수 있습니다. Rust 컴파일러는 Rust ABI와 외부 ABI 사이를 자동으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="255f924e1ffd5da6e3f850e0ae72ac4d9101aff6" translate="yes" xml:space="preserve">
          <source>Functions within external blocks may be variadic by specifying &lt;code&gt;...&lt;/code&gt; after one or more named arguments in the argument list:</source>
          <target state="translated">인수 목록에서 하나 이상의 명명 된 인수 뒤에 &lt;code&gt;...&lt;/code&gt; 를 지정하여 외부 블록 내의 함수는 가변적 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="559bba4281b9cbb5285ad035b18e638f9254aa96" translate="yes" xml:space="preserve">
          <source>Functions, except for associated trait functions, can return an abstract return type. These types stand in for another concrete type where the use-site may only use the trait methods declared by the trait bounds of the type.</source>
          <target state="translated">연관된 특성 함수를 제외한 함수는 추상 리턴 유형을 리턴 할 수 있습니다. 이러한 유형은 사용 사이트가 유형의 특성 경계에 의해 선언 된 특성 메소드 만 사용할 수있는 또 다른 구체적인 유형을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5234ca15ccfb340b3c32fd38f23a4ff8df3cca57" translate="yes" xml:space="preserve">
          <source>Functions, type aliases, structs, enumerations, unions, traits and implementations may be &lt;em&gt;parameterized&lt;/em&gt; by types and lifetimes. These parameters are listed in angle brackets (&lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt;), usually immediately after the name of the item and before its definition. For implementations, which don't have a name, they come directly after &lt;code&gt;impl&lt;/code&gt;. Lifetime parameters must be declared before type parameters. Some examples of items with type and lifetime parameters:</source>
          <target state="translated">함수, 타입 별칭, 구조체, 열거 형, 공용체, 특성 및 구현은 타입과 수명에 의해 &lt;em&gt;파라미터 화&lt;/em&gt; 될 수 있습니다 . 이러한 매개 변수는 일반적으로 항목 이름 바로 뒤에 정의하기 전에 꺾쇠 괄호 ( &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; )로 표시됩니다. 이름이없는 구현의 경우, &lt;code&gt;impl&lt;/code&gt; 바로 뒤에옵니다 . 수명 매개 변수는 유형 매개 변수보다 먼저 선언해야합니다. 유형 및 수명 매개 변수가있는 항목의 일부 예 :</target>
        </trans-unit>
        <trans-unit id="d83a6029c4947c75a3d349d25be545ca402bff11" translate="yes" xml:space="preserve">
          <source>Functions, type aliases, structs, enumerations, unions, traits, and implementations may be &lt;em&gt;parameterized&lt;/em&gt; by types and lifetimes. These parameters are listed in angle brackets (&lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt;), usually immediately after the name of the item and before its definition. For implementations, which don't have a name, they come directly after &lt;code&gt;impl&lt;/code&gt;. Lifetime parameters must be declared before type parameters. Some examples of items with type and lifetime parameters:</source>
          <target state="translated">함수, 형식 별칭, 구조체, 열거 형, 공용체, 특성 및 구현은 형식 및 수명에 따라 &lt;em&gt;매개 변수화&lt;/em&gt; 될 수 있습니다 . 이러한 매개 변수는 꺾쇠 괄호 ( &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; ) 로 나열되며 일반적으로 항목 이름 바로 뒤와 해당 정의 앞입니다. 이름이없는 구현의 경우 &lt;code&gt;impl&lt;/code&gt; 바로 뒤에옵니다 . 수명 매개 변수는 유형 매개 변수보다 먼저 선언해야합니다. 유형 및 수명 매개 변수가있는 항목의 몇 가지 예 :</target>
        </trans-unit>
        <trans-unit id="f57878d0751d3ab5ce8210b78147f1fbca3e0b4a" translate="yes" xml:space="preserve">
          <source>Fundamental traits</source>
          <target state="translated">기본 특성</target>
        </trans-unit>
        <trans-unit id="9e006ca099899d227345d125f7604094fb4ac496" translate="yes" xml:space="preserve">
          <source>Fundamental type constructors</source>
          <target state="translated">기본 형식 생성자</target>
        </trans-unit>
        <trans-unit id="bc0f9166454ea8a2d6c4817bb65ab3b4f20a8394" translate="yes" xml:space="preserve">
          <source>Fundamentally, macros are a way of writing code that writes other code, which is known as &lt;em&gt;metaprogramming&lt;/em&gt;. In Appendix C, we discuss the &lt;code&gt;derive&lt;/code&gt; attribute, which generates an implementation of various traits for you. We&amp;rsquo;ve also used the &lt;code&gt;println!&lt;/code&gt; and &lt;code&gt;vec!&lt;/code&gt; macros throughout the book. All of these macros &lt;em&gt;expand&lt;/em&gt; to produce more code than the code you&amp;rsquo;ve written manually.</source>
          <target state="translated">기본적으로 매크로는 &lt;em&gt;metaprogramming&lt;/em&gt; 이라고하는 다른 코드를 작성하는 코드를 작성하는 방법입니다 . 부록 C에서는 다양한 특성의 구현을 생성하는 &lt;code&gt;derive&lt;/code&gt; 속성에 대해 설명합니다. 우리는 또한 &lt;code&gt;println!&lt;/code&gt; 사용했습니다 ! 그리고 &lt;code&gt;vec!&lt;/code&gt; 책 전체에서 매크로. 이 매크로는 모두 수동으로 작성한 코드보다 더 많은 코드를 생성하도록 &lt;em&gt;확장&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="33aa27b63995ba1fcb3ce7d14470a2ebda4e9afb" translate="yes" xml:space="preserve">
          <source>Further examples</source>
          <target state="translated">추가 예</target>
        </trans-unit>
        <trans-unit id="d09598b8462cb55fafc0925eb6b3707aebcdffff" translate="yes" xml:space="preserve">
          <source>Further methods that return iterators are &lt;a href=&quot;../primitive.slice#method.split&quot;&gt;&lt;code&gt;.split&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../primitive.slice#method.splitn&quot;&gt;&lt;code&gt;.splitn&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../primitive.slice#method.chunks&quot;&gt;&lt;code&gt;.chunks&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../primitive.slice#method.windows&quot;&gt;&lt;code&gt;.windows&lt;/code&gt;&lt;/a&gt; and more.</source>
          <target state="translated">반복자를 반환하는 추가 메서드는 &lt;a href=&quot;../primitive.slice#method.split&quot;&gt; &lt;code&gt;.split&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../primitive.slice#method.splitn&quot;&gt; &lt;code&gt;.splitn&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../primitive.slice#method.chunks&quot;&gt; &lt;code&gt;.chunks&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../primitive.slice#method.windows&quot;&gt; &lt;code&gt;.windows&lt;/code&gt; &lt;/a&gt; 등입니다.</target>
        </trans-unit>
        <trans-unit id="1ca30366a5d0ab34525f2208365c1ca94a1f8b77" translate="yes" xml:space="preserve">
          <source>Further, when providing implementations for additional traits, it needs to be considered whether they should behave identical to those of the underlying type as a consequence of acting as a representation of that underlying type. Generic code typically uses &lt;code&gt;Borrow&amp;lt;T&amp;gt;&lt;/code&gt; when it relies on the identical behavior of these additional trait implementations. These traits will likely appear as additional trait bounds.</source>
          <target state="translated">또한, 추가 특성에 대한 구현을 제공 할 때 해당 기본 유형의 표현으로 작동 한 결과 기본 유형과 동일하게 작동해야하는지 여부를 고려해야합니다. 일반 코드는 일반적으로 이러한 추가 특성 구현의 동일한 동작에 의존 할 때 &lt;code&gt;Borrow&amp;lt;T&amp;gt;&lt;/code&gt; 를 사용합니다. 이러한 특성은 추가 특성 범위로 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb1960550ff747636004d7c48533ff64eb2c7cb0" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;usize&lt;/code&gt; and &lt;code&gt;isize&lt;/code&gt; have the same size.</source>
          <target state="translated">또한 &lt;code&gt;usize&lt;/code&gt; 와 &lt;code&gt;isize&lt;/code&gt; 의 크기는 같습니다.</target>
        </trans-unit>
        <trans-unit id="cdc25e51f3bd03cefd6c886e6015dd4e5ab94438" translate="yes" xml:space="preserve">
          <source>Fuse</source>
          <target state="translated">Fuse</target>
        </trans-unit>
        <trans-unit id="5b5bb3bd654173bbe0ca32ea3cdd799fc39be7e0" translate="yes" xml:space="preserve">
          <source>Fuse::all</source>
          <target state="translated">Fuse::all</target>
        </trans-unit>
        <trans-unit id="be234633fcc19983cf10e500a6cea263759de0ec" translate="yes" xml:space="preserve">
          <source>Fuse::any</source>
          <target state="translated">Fuse::any</target>
        </trans-unit>
        <trans-unit id="fb657f6faeb38bdc2196ebc9819c5d95fe340748" translate="yes" xml:space="preserve">
          <source>Fuse::borrow</source>
          <target state="translated">Fuse::borrow</target>
        </trans-unit>
        <trans-unit id="8f3044155e9d5c84cd57e23debc6442d0e4670b3" translate="yes" xml:space="preserve">
          <source>Fuse::borrow_mut</source>
          <target state="translated">Fuse::borrow_mut</target>
        </trans-unit>
        <trans-unit id="1d289dac98b2c0ee8af0ae119550bb75a8647436" translate="yes" xml:space="preserve">
          <source>Fuse::by_ref</source>
          <target state="translated">Fuse::by_ref</target>
        </trans-unit>
        <trans-unit id="831eb7c4481fb4be2c2082f7b1da24d8f9f757ec" translate="yes" xml:space="preserve">
          <source>Fuse::chain</source>
          <target state="translated">Fuse::chain</target>
        </trans-unit>
        <trans-unit id="438fd4561c9ccfadcfc75a150d349251bb6bad15" translate="yes" xml:space="preserve">
          <source>Fuse::clone</source>
          <target state="translated">Fuse::clone</target>
        </trans-unit>
        <trans-unit id="1430674975c3f47c8efafda98d99fb2a28139d1d" translate="yes" xml:space="preserve">
          <source>Fuse::clone_from</source>
          <target state="translated">Fuse::clone_from</target>
        </trans-unit>
        <trans-unit id="9be81b457f16a4af2ac97486a4694037294d9f73" translate="yes" xml:space="preserve">
          <source>Fuse::clone_into</source>
          <target state="translated">Fuse::clone_into</target>
        </trans-unit>
        <trans-unit id="98f760afb80a8eff0c0ef367859e40f090d49189" translate="yes" xml:space="preserve">
          <source>Fuse::cloned</source>
          <target state="translated">Fuse::cloned</target>
        </trans-unit>
        <trans-unit id="6da9651643728cd0c44496dee9b4303124cabbfa" translate="yes" xml:space="preserve">
          <source>Fuse::cmp</source>
          <target state="translated">Fuse::cmp</target>
        </trans-unit>
        <trans-unit id="0c4f37e97803f9d70993fa59d61809aea7d9011a" translate="yes" xml:space="preserve">
          <source>Fuse::collect</source>
          <target state="translated">Fuse::collect</target>
        </trans-unit>
        <trans-unit id="ddc6005989b65675ac3ce7404f4341aa3e45bd46" translate="yes" xml:space="preserve">
          <source>Fuse::copied</source>
          <target state="translated">Fuse::copied</target>
        </trans-unit>
        <trans-unit id="6086889f4261af2a35bbde15545aa2b38e286eb0" translate="yes" xml:space="preserve">
          <source>Fuse::count</source>
          <target state="translated">Fuse::count</target>
        </trans-unit>
        <trans-unit id="2c7439b70ce0f07bef285135b6810c8416ce3ceb" translate="yes" xml:space="preserve">
          <source>Fuse::cycle</source>
          <target state="translated">Fuse::cycle</target>
        </trans-unit>
        <trans-unit id="1d21878382d8db3eef5c3ccb0162b537561d5fe1" translate="yes" xml:space="preserve">
          <source>Fuse::enumerate</source>
          <target state="translated">Fuse::enumerate</target>
        </trans-unit>
        <trans-unit id="823d811ae87865a3afe81991f5b1ce5c5d3e05fb" translate="yes" xml:space="preserve">
          <source>Fuse::eq</source>
          <target state="translated">Fuse::eq</target>
        </trans-unit>
        <trans-unit id="bd7cbe6bf9c8e8d0dbf1a520e5d8f393c41d5e76" translate="yes" xml:space="preserve">
          <source>Fuse::filter</source>
          <target state="translated">Fuse::filter</target>
        </trans-unit>
        <trans-unit id="ff249feec5a8ff44c09ac4d58cf0c46bc03c2e27" translate="yes" xml:space="preserve">
          <source>Fuse::filter_map</source>
          <target state="translated">Fuse::filter_map</target>
        </trans-unit>
        <trans-unit id="d65f3a653005a9aca1a47f1daa9574aadcf81146" translate="yes" xml:space="preserve">
          <source>Fuse::find</source>
          <target state="translated">Fuse::find</target>
        </trans-unit>
        <trans-unit id="92189ce0a3d924bfcfe5daafee0096f97e345e8a" translate="yes" xml:space="preserve">
          <source>Fuse::find_map</source>
          <target state="translated">Fuse::find_map</target>
        </trans-unit>
        <trans-unit id="1cf8f29dde6618a7c7a45ae0ed611ea18dc6d814" translate="yes" xml:space="preserve">
          <source>Fuse::flat_map</source>
          <target state="translated">Fuse::flat_map</target>
        </trans-unit>
        <trans-unit id="9f855deea4a227b1c412204b1b500286ca9898ff" translate="yes" xml:space="preserve">
          <source>Fuse::flatten</source>
          <target state="translated">Fuse::flatten</target>
        </trans-unit>
        <trans-unit id="27bca4d23d19f854df553c1f82824f7edd33ecdd" translate="yes" xml:space="preserve">
          <source>Fuse::fmt</source>
          <target state="translated">Fuse::fmt</target>
        </trans-unit>
        <trans-unit id="8293be1030013adbfbddb7413ab47a9d5713fbb2" translate="yes" xml:space="preserve">
          <source>Fuse::fold</source>
          <target state="translated">Fuse::fold</target>
        </trans-unit>
        <trans-unit id="d70e6b78ab1bfb6ecef7e95f085adfaeb6422f4a" translate="yes" xml:space="preserve">
          <source>Fuse::for_each</source>
          <target state="translated">Fuse::for_each</target>
        </trans-unit>
        <trans-unit id="c637a607309c42c80a08d11fa1900890151225d1" translate="yes" xml:space="preserve">
          <source>Fuse::from</source>
          <target state="translated">Fuse::from</target>
        </trans-unit>
        <trans-unit id="3f4b35dca4545ef8a3669e274f565d795f26df61" translate="yes" xml:space="preserve">
          <source>Fuse::fuse</source>
          <target state="translated">Fuse::fuse</target>
        </trans-unit>
        <trans-unit id="d32ae472a05f042237f60672a294af6e0f780002" translate="yes" xml:space="preserve">
          <source>Fuse::ge</source>
          <target state="translated">Fuse::ge</target>
        </trans-unit>
        <trans-unit id="db14a349561c9657cb02ec4378f0041d394de512" translate="yes" xml:space="preserve">
          <source>Fuse::gt</source>
          <target state="translated">Fuse::gt</target>
        </trans-unit>
        <trans-unit id="8e137668bb3688ae855ccc5853810b47754a3872" translate="yes" xml:space="preserve">
          <source>Fuse::inspect</source>
          <target state="translated">Fuse::inspect</target>
        </trans-unit>
        <trans-unit id="5cfef3b06c43a18ed973402f005ed7cd09e8c04c" translate="yes" xml:space="preserve">
          <source>Fuse::into</source>
          <target state="translated">Fuse::into</target>
        </trans-unit>
        <trans-unit id="f0ca9438fb188b5b8dad26c6bf148f9659520041" translate="yes" xml:space="preserve">
          <source>Fuse::into_iter</source>
          <target state="translated">Fuse::into_iter</target>
        </trans-unit>
        <trans-unit id="391ea300511ad72ed0c52d931ec32f9ad0fd9c6f" translate="yes" xml:space="preserve">
          <source>Fuse::is_empty</source>
          <target state="translated">Fuse::is_empty</target>
        </trans-unit>
        <trans-unit id="dbc1aa11443b40a7ec81e5ce0dd280ae99df5395" translate="yes" xml:space="preserve">
          <source>Fuse::is_sorted</source>
          <target state="translated">Fuse::is_sorted</target>
        </trans-unit>
        <trans-unit id="6de34202c0045be112d2ee0f948bb537aa9be637" translate="yes" xml:space="preserve">
          <source>Fuse::is_sorted_by</source>
          <target state="translated">Fuse::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="6e5a92b697e11f4f97be1cb92bf8a2c8203571cd" translate="yes" xml:space="preserve">
          <source>Fuse::is_sorted_by_key</source>
          <target state="translated">Fuse::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="c01cf3c78cdbb7fdd9e68eeecd85fe4f5fc5bcc7" translate="yes" xml:space="preserve">
          <source>Fuse::last</source>
          <target state="translated">Fuse::last</target>
        </trans-unit>
        <trans-unit id="fca9c9805a04224315e282c3be9b6a888b5ed9a1" translate="yes" xml:space="preserve">
          <source>Fuse::le</source>
          <target state="translated">Fuse::le</target>
        </trans-unit>
        <trans-unit id="53bec7ede087d7f3b55b0287278a68b38404a6d6" translate="yes" xml:space="preserve">
          <source>Fuse::len</source>
          <target state="translated">Fuse::len</target>
        </trans-unit>
        <trans-unit id="7b4183ba0f386cd9443aa4992eba62aa3b6deb95" translate="yes" xml:space="preserve">
          <source>Fuse::lt</source>
          <target state="translated">Fuse::lt</target>
        </trans-unit>
        <trans-unit id="5c262325339cd3156152addc6dd873caf49ad2b7" translate="yes" xml:space="preserve">
          <source>Fuse::map</source>
          <target state="translated">Fuse::map</target>
        </trans-unit>
        <trans-unit id="f34722d429c594a066614633112c87b369af6d10" translate="yes" xml:space="preserve">
          <source>Fuse::max</source>
          <target state="translated">Fuse::max</target>
        </trans-unit>
        <trans-unit id="74cd81b2b264540f6cf86176ce650c3ace7df66c" translate="yes" xml:space="preserve">
          <source>Fuse::max_by</source>
          <target state="translated">Fuse::max_by</target>
        </trans-unit>
        <trans-unit id="6363e416dfff32dea4b85f002985261e301ff120" translate="yes" xml:space="preserve">
          <source>Fuse::max_by_key</source>
          <target state="translated">Fuse::max_by_key</target>
        </trans-unit>
        <trans-unit id="ea71fbd8ca048cb3a4327bc3c665fd836b260d15" translate="yes" xml:space="preserve">
          <source>Fuse::min</source>
          <target state="translated">Fuse::min</target>
        </trans-unit>
        <trans-unit id="3e45b43694c4d735e3284df51fc1d5afa72689a1" translate="yes" xml:space="preserve">
          <source>Fuse::min_by</source>
          <target state="translated">Fuse::min_by</target>
        </trans-unit>
        <trans-unit id="460a4dae2436a52e10ab6fe47215192d0d2cc26c" translate="yes" xml:space="preserve">
          <source>Fuse::min_by_key</source>
          <target state="translated">Fuse::min_by_key</target>
        </trans-unit>
        <trans-unit id="fdbe92dea6e61847df85f41bba1c90d74049ae28" translate="yes" xml:space="preserve">
          <source>Fuse::ne</source>
          <target state="translated">Fuse::ne</target>
        </trans-unit>
        <trans-unit id="5230c2613200a1d46de34a7083facac940e009ab" translate="yes" xml:space="preserve">
          <source>Fuse::next</source>
          <target state="translated">Fuse::next</target>
        </trans-unit>
        <trans-unit id="51b95d33641283d83b2d3ca707d3b05b32955f7c" translate="yes" xml:space="preserve">
          <source>Fuse::next_back</source>
          <target state="translated">Fuse::next_back</target>
        </trans-unit>
        <trans-unit id="732184abb4e4b26b7896c98d0f1f6fb79face59a" translate="yes" xml:space="preserve">
          <source>Fuse::nth</source>
          <target state="translated">Fuse::nth</target>
        </trans-unit>
        <trans-unit id="ecf2d99b326b90bba4e5e94a2cfcb8fca5d36bf8" translate="yes" xml:space="preserve">
          <source>Fuse::nth_back</source>
          <target state="translated">Fuse::nth_back</target>
        </trans-unit>
        <trans-unit id="645b953e826c63fc9e513fa454ed5315f66f63e7" translate="yes" xml:space="preserve">
          <source>Fuse::partial_cmp</source>
          <target state="translated">Fuse::partial_cmp</target>
        </trans-unit>
        <trans-unit id="909f5215d0717af781bec722f3b0dd010a16016b" translate="yes" xml:space="preserve">
          <source>Fuse::partition</source>
          <target state="translated">Fuse::partition</target>
        </trans-unit>
        <trans-unit id="01e3171662432979d4756fdb5c7d60d5e3d3688a" translate="yes" xml:space="preserve">
          <source>Fuse::peekable</source>
          <target state="translated">Fuse::peekable</target>
        </trans-unit>
        <trans-unit id="6b80140311ab3ce2aaec8ebfd30dcf2e8f274077" translate="yes" xml:space="preserve">
          <source>Fuse::position</source>
          <target state="translated">Fuse::position</target>
        </trans-unit>
        <trans-unit id="cdf77414329bacb067e1a8328f80ce08984f20c6" translate="yes" xml:space="preserve">
          <source>Fuse::product</source>
          <target state="translated">Fuse::product</target>
        </trans-unit>
        <trans-unit id="8ef76fc13b788c76e379230ed857338ce665522c" translate="yes" xml:space="preserve">
          <source>Fuse::rev</source>
          <target state="translated">Fuse::rev</target>
        </trans-unit>
        <trans-unit id="c6ceda460157839498baef5d44fcbf90dfa55a4d" translate="yes" xml:space="preserve">
          <source>Fuse::rfind</source>
          <target state="translated">Fuse::rfind</target>
        </trans-unit>
        <trans-unit id="d330c64599fdb09d15b95c557b4d7892f68af3e1" translate="yes" xml:space="preserve">
          <source>Fuse::rfold</source>
          <target state="translated">Fuse::rfold</target>
        </trans-unit>
        <trans-unit id="4b3396affd9754021af0b44df2dd12d80df33ae6" translate="yes" xml:space="preserve">
          <source>Fuse::rposition</source>
          <target state="translated">Fuse::rposition</target>
        </trans-unit>
        <trans-unit id="ab43bd0b883653041efa0ea7cc154b6bf9af47c1" translate="yes" xml:space="preserve">
          <source>Fuse::scan</source>
          <target state="translated">Fuse::scan</target>
        </trans-unit>
        <trans-unit id="1b8b4c672f99a52b32d55c7bb8972a6f72ece7cf" translate="yes" xml:space="preserve">
          <source>Fuse::size_hint</source>
          <target state="translated">Fuse::size_hint</target>
        </trans-unit>
        <trans-unit id="d347c87cd849d9a01c9a979b0311dbcf96965bae" translate="yes" xml:space="preserve">
          <source>Fuse::skip</source>
          <target state="translated">Fuse::skip</target>
        </trans-unit>
        <trans-unit id="ecd51b0feeb4bb83cc2ee12bb364791884b19e9f" translate="yes" xml:space="preserve">
          <source>Fuse::skip_while</source>
          <target state="translated">Fuse::skip_while</target>
        </trans-unit>
        <trans-unit id="31f474af09ad27dc8cad30dd87438f396efab185" translate="yes" xml:space="preserve">
          <source>Fuse::step_by</source>
          <target state="translated">Fuse::step_by</target>
        </trans-unit>
        <trans-unit id="a8a56103bdd56576e7451868c2de237a02390598" translate="yes" xml:space="preserve">
          <source>Fuse::sum</source>
          <target state="translated">Fuse::sum</target>
        </trans-unit>
        <trans-unit id="29656f53c0fe5965acddeba06fd4f327a57a6b22" translate="yes" xml:space="preserve">
          <source>Fuse::take</source>
          <target state="translated">Fuse::take</target>
        </trans-unit>
        <trans-unit id="70ed5974147d5d5c47345358f79e9fe42830a0e2" translate="yes" xml:space="preserve">
          <source>Fuse::take_while</source>
          <target state="translated">Fuse::take_while</target>
        </trans-unit>
        <trans-unit id="c61f9148a2472fccbc543adcedcaef00ebc36916" translate="yes" xml:space="preserve">
          <source>Fuse::to_owned</source>
          <target state="translated">Fuse::to_owned</target>
        </trans-unit>
        <trans-unit id="9b8e9e88c43c584957c03c4a9790125c18a326dc" translate="yes" xml:space="preserve">
          <source>Fuse::try_fold</source>
          <target state="translated">Fuse::try_fold</target>
        </trans-unit>
        <trans-unit id="019976673022e8a2538f04e41619085b0509b968" translate="yes" xml:space="preserve">
          <source>Fuse::try_for_each</source>
          <target state="translated">Fuse::try_for_each</target>
        </trans-unit>
        <trans-unit id="fe419dd037d95472b807e093d3ea02ccb57032fd" translate="yes" xml:space="preserve">
          <source>Fuse::try_from</source>
          <target state="translated">Fuse::try_from</target>
        </trans-unit>
        <trans-unit id="f05020a71bfc101fbe84356da0aa7b927615342b" translate="yes" xml:space="preserve">
          <source>Fuse::try_into</source>
          <target state="translated">Fuse::try_into</target>
        </trans-unit>
        <trans-unit id="c841af43e247c2928b1064e08f72070c26de3b92" translate="yes" xml:space="preserve">
          <source>Fuse::try_rfold</source>
          <target state="translated">Fuse::try_rfold</target>
        </trans-unit>
        <trans-unit id="5d8927e5ec76098e5f2f5c0d2886eb49af8b8071" translate="yes" xml:space="preserve">
          <source>Fuse::type_id</source>
          <target state="translated">Fuse::type_id</target>
        </trans-unit>
        <trans-unit id="11c88abe9b80924ead19e08c32a0e7d6ff055afa" translate="yes" xml:space="preserve">
          <source>Fuse::unzip</source>
          <target state="translated">Fuse::unzip</target>
        </trans-unit>
        <trans-unit id="6e1886d4b16f1cab13382140a5a4f1a5275134bc" translate="yes" xml:space="preserve">
          <source>Fuse::zip</source>
          <target state="translated">Fuse::zip</target>
        </trans-unit>
        <trans-unit id="9c86bce2cc6fe0fed1d906293dbdc3155ee68bd1" translate="yes" xml:space="preserve">
          <source>Fused multiply-add. Computes &lt;code&gt;(self * a) + b&lt;/code&gt; with only one rounding error, yielding a more accurate result than an unfused multiply-add.</source>
          <target state="translated">융합 곱셈 추가. 계산해 &lt;code&gt;(self * a) + b&lt;/code&gt; 하나의 에러 라운딩 융착 곱셈 - 덧셈보다 정확한 결과를 산출와.</target>
        </trans-unit>
        <trans-unit id="b5bb5c0c622a64179c02df6d378fd9fe00019e5d" translate="yes" xml:space="preserve">
          <source>FusedIterator</source>
          <target state="translated">FusedIterator</target>
        </trans-unit>
        <trans-unit id="047ca54032a1756c098d3bc1a941a0ed8e583df8" translate="yes" xml:space="preserve">
          <source>Future</source>
          <target state="translated">Future</target>
        </trans-unit>
        <trans-unit id="34f9f68cc95c47f600ff51f98b51efdc1e4973b7" translate="yes" xml:space="preserve">
          <source>Future compatibility</source>
          <target state="translated">향후 호환성</target>
        </trans-unit>
        <trans-unit id="fe870fd01f0abd72a18fbaf5c5cbed77f351525a" translate="yes" xml:space="preserve">
          <source>Future::poll</source>
          <target state="translated">Future::poll</target>
        </trans-unit>
        <trans-unit id="5404be636a9f63c6aa8f665b2d42ad260f8e8dfb" translate="yes" xml:space="preserve">
          <source>Futures alone are &lt;em&gt;inert&lt;/em&gt;; they must be &lt;em&gt;actively&lt;/em&gt;&lt;code&gt;poll&lt;/code&gt;ed to make progress, meaning that each time the current task is woken up, it should actively re-&lt;code&gt;poll&lt;/code&gt; pending futures that it still has an interest in.</source>
          <target state="translated">선물만으로는 &lt;em&gt;불활성이다&lt;/em&gt; . 그들이해야 &lt;em&gt;적극적으로 &lt;/em&gt; &lt;code&gt;poll&lt;/code&gt; 때마다이 현재 작업이 깨어 것을 의미 메이크업의 발전에 에드, 적극적 다시해야 &lt;code&gt;poll&lt;/code&gt; 가 여전히 관심을 가지고 미래를 보류.</target>
        </trans-unit>
        <trans-unit id="170618a3c56100e7f9817b28534dee7fda36bd36" translate="yes" xml:space="preserve">
          <source>GNU C library Bugzilla</source>
          <target state="translated">GNU C 라이브러리 Bugzilla</target>
        </trans-unit>
        <trans-unit id="ae44bdb1ff1d7f62acdd7de8bfa0f16c08c76789" translate="yes" xml:space="preserve">
          <source>Gain a reference to the underlying &lt;code&gt;stat&lt;/code&gt; structure which contains the raw information returned by the OS.</source>
          <target state="translated">OS가 반환 한 원시 정보를 포함 하는 기본 &lt;code&gt;stat&lt;/code&gt; 구조에 대한 참조를 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="28e18309d45539def481f7786d4cc8d73b9f5aec" translate="yes" xml:space="preserve">
          <source>Gain a reference to the underlying &lt;code&gt;stat&lt;/code&gt; structure which contains the raw information returned by the OS. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.as_raw_stat&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">OS가 반환 한 원시 정보를 포함 하는 기본 &lt;code&gt;stat&lt;/code&gt; 구조에 대한 참조를 얻습니다 . &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.as_raw_stat&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5023fde21a93efcc45f3ef1278a03020db274d7f" translate="yes" xml:space="preserve">
          <source>Ge</source>
          <target state="translated">Ge</target>
        </trans-unit>
        <trans-unit id="826e54d9f3341da0639215d591e03f7d7c85bcf1" translate="yes" xml:space="preserve">
          <source>Generalizing the latter case, any type implementing &lt;a href=&quot;../ops/trait.drop&quot;&gt;&lt;code&gt;Drop&lt;/code&gt;&lt;/a&gt; can't be &lt;code&gt;Copy&lt;/code&gt;, because it's managing some resource besides its own &lt;a href=&quot;../mem/fn.size_of&quot;&gt;&lt;code&gt;size_of::&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; bytes.</source>
          <target state="translated">후자의 경우를 일반화하면 &lt;a href=&quot;../ops/trait.drop&quot;&gt; &lt;code&gt;Drop&lt;/code&gt; &lt;/a&gt; 을 구현하는 모든 유형 은 자체 &lt;a href=&quot;../mem/fn.size_of&quot;&gt; &lt;code&gt;size_of::&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 바이트 이외의 일부 리소스를 관리하기 때문에 &lt;code&gt;Copy&lt;/code&gt; 일 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b3f505d3f65e19757f523841da2ceb51bc20ba3c" translate="yes" xml:space="preserve">
          <source>Generally speaking, if your type &lt;em&gt;can&lt;/em&gt; implement &lt;code&gt;Copy&lt;/code&gt;, it should. Keep in mind, though, that implementing &lt;code&gt;Copy&lt;/code&gt; is part of the public API of your type. If the type might become non-&lt;code&gt;Copy&lt;/code&gt; in the future, it could be prudent to omit the &lt;code&gt;Copy&lt;/code&gt; implementation now, to avoid a breaking API change.</source>
          <target state="translated">일반적으로 타입 &lt;em&gt;이 &lt;/em&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;em&gt;를&lt;/em&gt; 구현할 &lt;em&gt;수&lt;/em&gt; 있다면 , 그렇게해야합니다. 그러나 &lt;code&gt;Copy&lt;/code&gt; 구현 은 사용자 유형의 공용 API의 일부입니다. 향후에 유형이 &lt;code&gt;Copy&lt;/code&gt; 가 아닌 경우 API 변경을 피하기 위해 지금 &lt;code&gt;Copy&lt;/code&gt; 구현 을 생략하는 것이 현명 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5f188724c393355d9852c11495e877635da2c7cf" translate="yes" xml:space="preserve">
          <source>Generally speaking, when using &lt;code&gt;OpenOptions&lt;/code&gt;, you'll first call &lt;a href=&quot;struct.openoptions#method.new&quot;&gt;&lt;code&gt;OpenOptions::new&lt;/code&gt;&lt;/a&gt;, then chain calls to methods to set each option, then call &lt;a href=&quot;struct.openoptions#method.open&quot;&gt;&lt;code&gt;OpenOptions::open&lt;/code&gt;&lt;/a&gt;, passing the path of the file you're trying to open. This will give you a &lt;a href=&quot;../io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;struct.file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; inside that you can further operate on.</source>
          <target state="translated">일반적으로 &lt;code&gt;OpenOptions&lt;/code&gt; 를 사용할 때 먼저 &lt;a href=&quot;struct.openoptions#method.new&quot;&gt; &lt;code&gt;OpenOptions::new&lt;/code&gt; &lt;/a&gt; 를 호출 한 다음 메서드에 대한 호출을 연결하여 각 옵션을 설정 한 다음 &lt;a href=&quot;struct.openoptions#method.open&quot;&gt; &lt;code&gt;OpenOptions::open&lt;/code&gt; &lt;/a&gt; 을 호출 하여 열려고하는 파일의 경로를 전달합니다. 그러면 추가로 작업 할 수 있는 &lt;a href=&quot;struct.file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 이 포함 된 &lt;a href=&quot;../io/type.result&quot;&gt; &lt;code&gt;io::Result&lt;/code&gt; &lt;/a&gt; 가 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="f413a99b90fcebaf815708bcac6bf2c609712621" translate="yes" xml:space="preserve">
          <source>Generally speaking, when using &lt;code&gt;OpenOptions&lt;/code&gt;, you'll first call &lt;a href=&quot;struct.openoptions#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;, then chain calls to methods to set each option, then call &lt;a href=&quot;struct.openoptions#method.open&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt;, passing the path of the file you're trying to open. This will give you a &lt;a href=&quot;../io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;struct.file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; inside that you can further operate on.</source>
          <target state="translated">일반적으로 &lt;code&gt;OpenOptions&lt;/code&gt; 를 사용할 때는 먼저 &lt;a href=&quot;struct.openoptions#method.new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; 를 호출 한 다음 메소드를 호출하여 각 옵션을 설정 한 다음 &lt;a href=&quot;struct.openoptions#method.open&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 을 호출하여 열려고 하는 파일의 경로를 전달합니다. 그러면 &lt;a href=&quot;struct.file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 을 추가로 조작 할 수 있는 &lt;a href=&quot;../io/type.result&quot;&gt; &lt;code&gt;io::Result&lt;/code&gt; &lt;/a&gt; 가 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="ef7a9d88d07b5708f08d417b4551f7e7322bf0bc" translate="yes" xml:space="preserve">
          <source>Generally speaking, you should just &lt;code&gt;derive&lt;/code&gt; a &lt;code&gt;Debug&lt;/code&gt; implementation.</source>
          <target state="translated">일반적으로, 당신은해야한다 &lt;code&gt;derive&lt;/code&gt; &lt;code&gt;Debug&lt;/code&gt; 구현을.</target>
        </trans-unit>
        <trans-unit id="732f11f2232d28d3cd17a16f8d12c4158ae671a2" translate="yes" xml:space="preserve">
          <source>Generally, &lt;code&gt;Self: Sized&lt;/code&gt; is used to indicate that the trait should not be used as a trait object. If the trait comes from your own crate, consider removing this restriction.</source>
          <target state="translated">일반적으로 &lt;code&gt;Self: Sized&lt;/code&gt; 은 특성을 특성 오브젝트로 사용해서는 안됨을 나타내는 데 사용됩니다. 특성이 자신의 상자에서 나온 경우이 제한을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="4e2b4a1c449efa70704f19e5e57263ca0c4ffc22" translate="yes" xml:space="preserve">
          <source>Generally, for smart pointers you will implement &lt;code&gt;CoerceUnsized&amp;lt;Ptr&amp;lt;U&amp;gt;&amp;gt; for Ptr&amp;lt;T&amp;gt; where T: Unsize&amp;lt;U&amp;gt;, U: ?Sized&lt;/code&gt;, with an optional &lt;code&gt;?Sized&lt;/code&gt; bound on &lt;code&gt;T&lt;/code&gt; itself. For wrapper types that directly embed &lt;code&gt;T&lt;/code&gt; like &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;, you can directly implement &lt;code&gt;CoerceUnsized&amp;lt;Wrap&amp;lt;U&amp;gt;&amp;gt; for Wrap&amp;lt;T&amp;gt; where T: CoerceUnsized&amp;lt;U&amp;gt;&lt;/code&gt;. This will let coercions of types like &lt;code&gt;Cell&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; work.</source>
          <target state="translated">일반적으로, 스마트 포인터를 위해 당신이 구현할 &lt;code&gt;CoerceUnsized&amp;lt;Ptr&amp;lt;U&amp;gt;&amp;gt; for Ptr&amp;lt;T&amp;gt; where T: Unsize&amp;lt;U&amp;gt;, U: ?Sized&lt;/code&gt; , 옵션으로 &lt;code&gt;?Sized&lt;/code&gt; 에 바인딩 &lt;code&gt;T&lt;/code&gt; 자체. &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; 및 &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; &amp;lt;T&amp;gt; 와 같이 &lt;code&gt;T&lt;/code&gt; 를 직접 임베드하는 랩퍼 유형의 &lt;code&gt;CoerceUnsized&amp;lt;Wrap&amp;lt;U&amp;gt;&amp;gt; for Wrap&amp;lt;T&amp;gt; where T: CoerceUnsized&amp;lt;U&amp;gt;&lt;/code&gt; 직접 구현할 수 있습니다 . 여기서 T : CoerceUnsized &amp;lt;U&amp;gt; 입니다. 이렇게하면 &lt;code&gt;Cell&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 와 같은 유형의 강제가 작동합니다.</target>
        </trans-unit>
        <trans-unit id="5a24acc6c6f1f6f5fa4a70e0c8ec97be7ad2c8f4" translate="yes" xml:space="preserve">
          <source>Generate the nth Fibonacci number.</source>
          <target state="translated">n 번째 피보나치 수를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="4055bcedf4ef42a40655c354d55e695956e52c99" translate="yes" xml:space="preserve">
          <source>Generates a wide character sequence for potentially ill-formed UTF-16.</source>
          <target state="translated">잠재적으로 잘못된 형식의 UTF-16에 대한 넓은 문자 시퀀스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2358686f35ad9babf41475908fbf7fb94c7fb8f0" translate="yes" xml:space="preserve">
          <source>Generates the base configuration for spawning a thread, from which configuration methods can be chained.</source>
          <target state="translated">구성 방법을 체인화 할 수있는 스레드 생성을위한 기본 구성을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="4eed3f4ef0910be56eecb5b88bc01f17517c6c08" translate="yes" xml:space="preserve">
          <source>Generating a Random Number</source>
          <target state="translated">난수 생성</target>
        </trans-unit>
        <trans-unit id="4344ed85b4c6edaff3d6a74283da67d4030e7149" translate="yes" xml:space="preserve">
          <source>Generating a Secret Number</source>
          <target state="translated">비밀 번호 생성</target>
        </trans-unit>
        <trans-unit id="1d20de03126b297e05c13a7d280f33e24c72c537" translate="yes" xml:space="preserve">
          <source>Generator</source>
          <target state="translated">Generator</target>
        </trans-unit>
        <trans-unit id="be3352ebf40a7e8e4b021ce3ac0440a124629bf5" translate="yes" xml:space="preserve">
          <source>Generator::resume</source>
          <target state="translated">Generator::resume</target>
        </trans-unit>
        <trans-unit id="8a05177b6fef574c9007b27a5b9c1d6d147b496c" translate="yes" xml:space="preserve">
          <source>GeneratorState</source>
          <target state="translated">GeneratorState</target>
        </trans-unit>
        <trans-unit id="d04f291cf43bb98ceb2d5124b4e75aa6ba1544d4" translate="yes" xml:space="preserve">
          <source>GeneratorState::borrow</source>
          <target state="translated">GeneratorState::borrow</target>
        </trans-unit>
        <trans-unit id="e237a5c5d934ed2bcc036a7ec579e8363436fa8f" translate="yes" xml:space="preserve">
          <source>GeneratorState::borrow_mut</source>
          <target state="translated">GeneratorState::borrow_mut</target>
        </trans-unit>
        <trans-unit id="2502b2db43ac135d156ec67093f193a1d551ada7" translate="yes" xml:space="preserve">
          <source>GeneratorState::clamp</source>
          <target state="translated">GeneratorState::clamp</target>
        </trans-unit>
        <trans-unit id="14c55996161a4d9905bb442a79bebdda60c0a770" translate="yes" xml:space="preserve">
          <source>GeneratorState::clone</source>
          <target state="translated">GeneratorState::clone</target>
        </trans-unit>
        <trans-unit id="3f7f8fe2855b988679d6469ba23b116c95fb7f94" translate="yes" xml:space="preserve">
          <source>GeneratorState::clone_from</source>
          <target state="translated">GeneratorState::clone_from</target>
        </trans-unit>
        <trans-unit id="80b100a3f0da64d40e398e415f7da34b79e8c141" translate="yes" xml:space="preserve">
          <source>GeneratorState::clone_into</source>
          <target state="translated">GeneratorState::clone_into</target>
        </trans-unit>
        <trans-unit id="e257c93690e4d8869ec57678eef2e65d13e430ee" translate="yes" xml:space="preserve">
          <source>GeneratorState::cmp</source>
          <target state="translated">GeneratorState::cmp</target>
        </trans-unit>
        <trans-unit id="8a2e0ed5e7b43d7400dac081e69edcd39c918c34" translate="yes" xml:space="preserve">
          <source>GeneratorState::eq</source>
          <target state="translated">GeneratorState::eq</target>
        </trans-unit>
        <trans-unit id="89c2703dea761c8c48ffa4254fb375381596d10f" translate="yes" xml:space="preserve">
          <source>GeneratorState::fmt</source>
          <target state="translated">GeneratorState::fmt</target>
        </trans-unit>
        <trans-unit id="eda2eb9f12fc2973fa0ac082be186f3fadfe23bd" translate="yes" xml:space="preserve">
          <source>GeneratorState::from</source>
          <target state="translated">GeneratorState::from</target>
        </trans-unit>
        <trans-unit id="a10861d2a70c2a97bea18ae69516399a36bee43f" translate="yes" xml:space="preserve">
          <source>GeneratorState::ge</source>
          <target state="translated">GeneratorState::ge</target>
        </trans-unit>
        <trans-unit id="72a246cb6eeb7bd47306411db8d35d82c5c697bd" translate="yes" xml:space="preserve">
          <source>GeneratorState::gt</source>
          <target state="translated">GeneratorState::gt</target>
        </trans-unit>
        <trans-unit id="f47d401161e51de0bd3708a6aa6b0162f13c3a4d" translate="yes" xml:space="preserve">
          <source>GeneratorState::hash</source>
          <target state="translated">GeneratorState::hash</target>
        </trans-unit>
        <trans-unit id="0d2cf74073e99ac2f7b4a8d84ac45a2dec7d63a3" translate="yes" xml:space="preserve">
          <source>GeneratorState::hash_slice</source>
          <target state="translated">GeneratorState::hash_slice</target>
        </trans-unit>
        <trans-unit id="d362c3c3176b8bb099ef83d916f2d082b1a7c9b7" translate="yes" xml:space="preserve">
          <source>GeneratorState::into</source>
          <target state="translated">GeneratorState::into</target>
        </trans-unit>
        <trans-unit id="b756ce5dda7c46f9d07b0d1aca348d701a969f8c" translate="yes" xml:space="preserve">
          <source>GeneratorState::le</source>
          <target state="translated">GeneratorState::le</target>
        </trans-unit>
        <trans-unit id="93e42bf71e3b440df1059a94e8e0dc45070ae52f" translate="yes" xml:space="preserve">
          <source>GeneratorState::lt</source>
          <target state="translated">GeneratorState::lt</target>
        </trans-unit>
        <trans-unit id="6d1cac78c83d7c9a11d1fbbd289720c9f3206ab7" translate="yes" xml:space="preserve">
          <source>GeneratorState::max</source>
          <target state="translated">GeneratorState::max</target>
        </trans-unit>
        <trans-unit id="37560d6c837e27a56cbfe576d408ec65983cd14a" translate="yes" xml:space="preserve">
          <source>GeneratorState::min</source>
          <target state="translated">GeneratorState::min</target>
        </trans-unit>
        <trans-unit id="3549d5021f412f184a2ec1f2eb1ad44c8d1d5469" translate="yes" xml:space="preserve">
          <source>GeneratorState::ne</source>
          <target state="translated">GeneratorState::ne</target>
        </trans-unit>
        <trans-unit id="eaf2826ae0eabec3e56edf7fd20219fdbd1719d8" translate="yes" xml:space="preserve">
          <source>GeneratorState::partial_cmp</source>
          <target state="translated">GeneratorState::partial_cmp</target>
        </trans-unit>
        <trans-unit id="bc63dfa2c5dc307fd7de8a64413574342399b682" translate="yes" xml:space="preserve">
          <source>GeneratorState::to_owned</source>
          <target state="translated">GeneratorState::to_owned</target>
        </trans-unit>
        <trans-unit id="50328fd3c1aba2c5f8f065dcd6362c0cc51dfd2c" translate="yes" xml:space="preserve">
          <source>GeneratorState::try_from</source>
          <target state="translated">GeneratorState::try_from</target>
        </trans-unit>
        <trans-unit id="98ea27a003d07dda294e378b634a2c17ba4c3a3e" translate="yes" xml:space="preserve">
          <source>GeneratorState::try_into</source>
          <target state="translated">GeneratorState::try_into</target>
        </trans-unit>
        <trans-unit id="87741a9ed7c3b2106ba319e6c46fba99b623309a" translate="yes" xml:space="preserve">
          <source>GeneratorState::type_id</source>
          <target state="translated">GeneratorState::type_id</target>
        </trans-unit>
        <trans-unit id="7f39e996a867af2cbe188c7b44ecc3d06e5acc04" translate="yes" xml:space="preserve">
          <source>Generators, also commonly referred to as coroutines, are currently an experimental language feature in Rust. Added in &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/2033&quot;&gt;RFC 2033&lt;/a&gt; generators are currently intended to primarily provide a building block for async/await syntax but will likely extend to also providing an ergonomic definition for iterators and other primitives.</source>
          <target state="translated">일반적으로 코 루틴이라고도하는 생성기는 현재 Rust의 실험 언어 기능입니다. &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/2033&quot;&gt;RFC 2033에&lt;/a&gt; 추가 된 제너레이터는 현재 주로 비동기 / 대기 구문을위한 빌딩 블록을 제공하지만 반복자와 다른 프리미티브에 대한 인체 공학적 정의를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="326f639e29705946500c3f82d8731c2e1774c768" translate="yes" xml:space="preserve">
          <source>Generic &lt;a href=&quot;types/parameters&quot;&gt;type parameters&lt;/a&gt;.</source>
          <target state="translated">일반 &lt;a href=&quot;types/parameters&quot;&gt;유형 매개 변수&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1807cc787d281913c23f12bd3560541d8f00b032" translate="yes" xml:space="preserve">
          <source>Generic Data Types</source>
          <target state="translated">일반 데이터 유형</target>
        </trans-unit>
        <trans-unit id="98f64976fc4f70ae5ee15f3bc5b13a2d6b9d672a" translate="yes" xml:space="preserve">
          <source>Generic Implementations</source>
          <target state="translated">일반적인 구현</target>
        </trans-unit>
        <trans-unit id="f072da836e4d916032d518ff0f18fd650d4581ad" translate="yes" xml:space="preserve">
          <source>Generic Lifetimes in Functions</source>
          <target state="translated">함수의 일반적인 수명</target>
        </trans-unit>
        <trans-unit id="27eeb642b1a0c27c15bf839571b69f7e44c24936" translate="yes" xml:space="preserve">
          <source>Generic Traits</source>
          <target state="translated">일반 특성</target>
        </trans-unit>
        <trans-unit id="efb89da0fe84fb1c10e0e67f29f7eeede9f0ba20" translate="yes" xml:space="preserve">
          <source>Generic Type Parameters, Trait Bounds, and Lifetimes Together</source>
          <target state="translated">일반 유형 매개 변수, 특성 경계 및 수명 함께</target>
        </trans-unit>
        <trans-unit id="9cd42050d57736e2d4fca7655d0893381fa92cbb" translate="yes" xml:space="preserve">
          <source>Generic Types, Traits, and Lifetimes</source>
          <target state="translated">일반 유형, 특성 및 수명</target>
        </trans-unit>
        <trans-unit id="8d490f5f674a359f8f4f73405d1a00a44fb2ed0a" translate="yes" xml:space="preserve">
          <source>Generic arguments were not provided in the same order as the corresponding generic parameters are declared.</source>
          <target state="translated">해당하는 일반 매개 변수가 선언 된 것과 동일한 순서로 일반 인수가 제공되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="37f5365cdbef14515226dcd384583192170cc525" translate="yes" xml:space="preserve">
          <source>Generic functions</source>
          <target state="translated">일반 함수</target>
        </trans-unit>
        <trans-unit id="1f4659089d7ab3bbc1fbc01f1bd9729f123901fd" translate="yes" xml:space="preserve">
          <source>Generic functions and generic structs can use traits to constrain, or bound, the types they accept.</source>
          <target state="translated">제네릭 함수와 제네릭 구조체는 특성을 사용하여 허용되는 형식을 제한하거나 바인딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eae8cd46084865929b442cf8ea6d11173b23b60b" translate="yes" xml:space="preserve">
          <source>Generic functions and types with a &lt;code&gt;T: Trait&lt;/code&gt; bounds can be used with &lt;code&gt;Ty&lt;/code&gt; being used for &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">A의 일반 기능 및 유형 &lt;code&gt;T: Trait&lt;/code&gt; 경계는 함께 사용할 수있는 &lt;code&gt;Ty&lt;/code&gt; 에 사용되는 &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bcab43ed4f07d581db4e91c1af83663a27b91de" translate="yes" xml:space="preserve">
          <source>Generic hashing support.</source>
          <target state="translated">일반 해싱 지원.</target>
        </trans-unit>
        <trans-unit id="5c44d31fa6749df8167db78b7f69c1e6b8112cff" translate="yes" xml:space="preserve">
          <source>Generic items may use traits as &lt;a href=&quot;../trait-bounds&quot;&gt;bounds&lt;/a&gt; on their type parameters.</source>
          <target state="translated">일반 항목은 특성을 유형 매개 변수의 &lt;a href=&quot;../trait-bounds&quot;&gt;경계&lt;/a&gt; 로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="910a23e27585722660fb101574581723e9023985" translate="yes" xml:space="preserve">
          <source>Generic lifetime &lt;code&gt;'b&lt;/code&gt; must outlive lifetime &lt;code&gt;'a&lt;/code&gt;</source>
          <target state="translated">일반 수명 &lt;code&gt;'b&lt;/code&gt; 수명보다 수명이 길어야합니다 &lt;code&gt;'a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7374523f7aaffe9d327555dcc2269e6002424197" translate="yes" xml:space="preserve">
          <source>Generic lifetime and type parameters allow &lt;a href=&quot;../attributes&quot;&gt;attributes&lt;/a&gt; on them. There are no built-in attributes that do anything in this position, although custom derive attributes may give meaning to it.</source>
          <target state="translated">일반 수명 및 유형 매개 변수는 &lt;a href=&quot;../attributes&quot;&gt;속성&lt;/a&gt; 을 허용 합니다. 사용자 지정 파생 속성에 의미가있을 수 있지만이 위치에 어떤 작업을 수행하는 기본 제공 속성은 없습니다.</target>
        </trans-unit>
        <trans-unit id="070d7b64bfe57bcc62addca63e2c1cff8dd83211" translate="yes" xml:space="preserve">
          <source>Generic parameter &lt;code&gt;T&lt;/code&gt; constrained to types that implement &lt;code&gt;U&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; 를 구현하는 유형으로 제한되는 일반 매개 변수 &lt;code&gt;T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="358eed37fa63fd6b1e5193acd34abc17d6db4cd2" translate="yes" xml:space="preserve">
          <source>Generic parameters are implicit with &lt;code&gt;Self&lt;/code&gt;:</source>
          <target state="translated">일반 매개 변수는 &lt;code&gt;Self&lt;/code&gt; 에 암시 적입니다 .</target>
        </trans-unit>
        <trans-unit id="a0662e93a0c0518f55b130b80b54fb79df0d0c94" translate="yes" xml:space="preserve">
          <source>Generic type &lt;code&gt;T&lt;/code&gt; contains no borrowed references other than &lt;code&gt;'static&lt;/code&gt; ones</source>
          <target state="translated">일반 타입 &lt;code&gt;T&lt;/code&gt; 는 더 이상 다른 참조를 빌려하지 포함 &lt;code&gt;'static&lt;/code&gt; 들</target>
        </trans-unit>
        <trans-unit id="aff0c7dbfb36e71d34305b173306f472b0221612" translate="yes" xml:space="preserve">
          <source>Generic type &lt;code&gt;T&lt;/code&gt; must outlive lifetime &lt;code&gt;'a&lt;/code&gt; (meaning the type cannot transitively contain any references with lifetimes shorter than &lt;code&gt;'a&lt;/code&gt;)</source>
          <target state="translated">제네릭 형식 &lt;code&gt;T&lt;/code&gt; 수명보다 오래해야한다 &lt;code&gt;'a&lt;/code&gt; (유형을 의미하는 것은 이적으로보다 짧은 수명에 대한 참조를 포함 할 수 없습니다 &lt;code&gt;'a&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e6e64547108bd126e5d53a717612fe87ff383d16" translate="yes" xml:space="preserve">
          <source>Generic type parameters in a struct definition aren&amp;rsquo;t always the same as those you use in that struct&amp;rsquo;s method signatures. For example, Listing 10-11 defines the method &lt;code&gt;mixup&lt;/code&gt; on the &lt;code&gt;Point&amp;lt;T, U&amp;gt;&lt;/code&gt; struct from Listing 10-8. The method takes another &lt;code&gt;Point&lt;/code&gt; as a parameter, which might have different types from the &lt;code&gt;self&lt;/code&gt;&lt;code&gt;Point&lt;/code&gt; we&amp;rsquo;re calling &lt;code&gt;mixup&lt;/code&gt; on. The method creates a new &lt;code&gt;Point&lt;/code&gt; instance with the &lt;code&gt;x&lt;/code&gt; value from the &lt;code&gt;self&lt;/code&gt;&lt;code&gt;Point&lt;/code&gt; (of type &lt;code&gt;T&lt;/code&gt;) and the &lt;code&gt;y&lt;/code&gt; value from the passed-in &lt;code&gt;Point&lt;/code&gt; (of type &lt;code&gt;W&lt;/code&gt;).</source>
          <target state="translated">구조체 정의의 제네릭 형식 매개 변수가 해당 구조체의 메서드 시그니처에서 사용하는 것과 항상 같지는 않습니다. 예를 들어, 목록 10-11은 목록 10-8 의 &lt;code&gt;Point&amp;lt;T, U&amp;gt;&lt;/code&gt; 구조체에서 메서드 &lt;code&gt;mixup&lt;/code&gt; 을 정의합니다 . 이 메서드는 다른 &lt;code&gt;Point&lt;/code&gt; 를 매개 변수로 사용합니다 . 이 &lt;code&gt;Point&lt;/code&gt; 는 &lt;code&gt;mixup&lt;/code&gt; 을 호출 하는 &lt;code&gt;self&lt;/code&gt; 포인트 와 다른 유형을 가질 수 있습니다 . 이 방법은 새로 생성 &lt;code&gt;Point&lt;/code&gt; 와 인스턴스 &lt;code&gt;x&lt;/code&gt; 로부터 값 &lt;code&gt;self&lt;/code&gt; &lt;code&gt;Point&lt;/code&gt; (유형의 &lt;code&gt;T&lt;/code&gt; ) 및 &lt;code&gt;y&lt;/code&gt; 전달 된 값에서 &lt;code&gt;Point&lt;/code&gt; (A 타입의 &lt;code&gt;W&lt;/code&gt; )를.</target>
        </trans-unit>
        <trans-unit id="24a4c08697368c16f5fbbfbba45a86f6181cd53e" translate="yes" xml:space="preserve">
          <source>Generics have been used on an auto trait.</source>
          <target state="translated">제네릭은 자동 특성에 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="0504e570433bf881c8e4f524e7865541e64b7072" translate="yes" xml:space="preserve">
          <source>Get a pinned mutable reference from a static mutable reference.</source>
          <target state="translated">정적 가변 참조에서 고정 된 가변 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="eb95181a8c4c34e71821bcb5b2d547968b70fff0" translate="yes" xml:space="preserve">
          <source>Get a pinned reference from a static reference.</source>
          <target state="translated">정적 참조에서 고정 된 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="4be352f47b5e6ad288f45c1ffb564c03acea5928" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut bool&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut bool&lt;/code&gt; 대한 원자 적 액세스 권한을 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="be6a3b4e003eb4b0da26051861e6a8afd27a77f2" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut i16&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut i16&lt;/code&gt; 대한 원자 적 액세스 권한을 얻으십시오 .</target>
        </trans-unit>
        <trans-unit id="dfaa4b24fd6ed6fa9005fce55a46cedaf4873afb" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut i32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut i32&lt;/code&gt; 대한 원자 적 액세스 권한을 얻으십시오 .</target>
        </trans-unit>
        <trans-unit id="0d0fbe251cddfe77d2382a7fe1ddccda6727f7dc" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut i64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut i64&lt;/code&gt; 대한 원자 적 액세스 권한을 얻으십시오 .</target>
        </trans-unit>
        <trans-unit id="f94480ecfd23dbc87f67caa39256ed88bbd75535" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut i8&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut i8&lt;/code&gt; 대한 원자 적 액세스 권한을 얻으십시오 .</target>
        </trans-unit>
        <trans-unit id="995c7f0c6e5302e5c0b1595c6739a6650e6aa199" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut isize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut isize&lt;/code&gt; 대한 원자 적 액세스 권한을 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="ec51732ae25a09c8ca12e18b2914268b7138ae43" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut u16&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut u16&lt;/code&gt; 대한 원자 적 액세스 권한을 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="be052f4c09cb9e78d37bcccedbd0ef6b81373d25" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut u32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut u32&lt;/code&gt; 대한 원자 적 액세스를 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="b64feb94dc70a119380d14818e3261d6eef2ff01" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut u64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut u64&lt;/code&gt; 대한 원자 적 액세스 권한을 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="93c9e695d154c5f3dd3abe64bcd503125f1a6943" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut u8&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut u8&lt;/code&gt; 대한 원자 적 액세스 권한을 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="1606b3b4a9988dd96e8df625d37ad2f352009b53" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut usize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut usize&lt;/code&gt; 대한 원자 적 액세스 권한을 얻으십시오 .</target>
        </trans-unit>
        <trans-unit id="f6d022441dfa4197ede9226c6cd05c31e113bcb1" translate="yes" xml:space="preserve">
          <source>Get atomic access to a pointer.</source>
          <target state="translated">포인터에 대한 원자 적 액세스를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="cf81408f02d917373b6c30a23d98790dc9a5d471" translate="yes" xml:space="preserve">
          <source>Get the formatted string, if it has no arguments to be formatted.</source>
          <target state="translated">형식화 할 인수가없는 경우 형식화 된 문자열을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7a5cd7c90099ca5a967101e4cfad667e3decbf3d" translate="yes" xml:space="preserve">
          <source>Gets a handle to the thread that invokes it.</source>
          <target state="translated">호출하는 스레드에 대한 핸들을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="76d4e2388fe5518e4d670520e3733f09619ee790" translate="yes" xml:space="preserve">
          <source>Gets a mutable (unique) reference to the contained value.</source>
          <target state="translated">포함 된 값에 대한 변경 가능한 (고유 한) 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d82a8f0547b098b3e15a8465f846472c994e131e" translate="yes" xml:space="preserve">
          <source>Gets a mutable iterator over the entries of the map, sorted by key.</source>
          <target state="translated">키로 정렬 된 맵 항목에 대해 변경 가능한 반복자를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1ac6a489d416bd5c5ef9fe3e6c54e36610970d42" translate="yes" xml:space="preserve">
          <source>Gets a mutable iterator over the values of the map, in order by key.</source>
          <target state="translated">키를 기준으로 맵 값에 대해 변경 가능한 반복자를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c387218a90a9bb1918a7924816b86e529b82f080" translate="yes" xml:space="preserve">
          <source>Gets a mutable pointer to the contained value. Reading from this pointer or turning it into a reference is undefined behavior unless the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; is initialized.</source>
          <target state="translated">포함 된 값에 대한 가변 포인터를 가져옵니다. &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 가 초기화 되지 않으면이 포인터에서 읽거나 참조로 바꾸는 것은 정의되지 않은 동작 입니다.</target>
        </trans-unit>
        <trans-unit id="b569ba746c83e8a3f0560e8c5640e4d7d0cf471a" translate="yes" xml:space="preserve">
          <source>Gets a mutable pointer to the first element of the array.</source>
          <target state="translated">배열의 첫 번째 요소에 대한 가변 포인터를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="93221faf609cb53b66eed583ddd8ff4650ad1090" translate="yes" xml:space="preserve">
          <source>Gets a mutable pointer to the wrapped value.</source>
          <target state="translated">랩핑 된 값에 대한 변경 가능한 포인터를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1afb8b1fa7a141c132899f91a60cb50d53c480a9" translate="yes" xml:space="preserve">
          <source>Gets a mutable pointer to the wrapped value. The difference to &lt;a href=&quot;#method.get&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; is that this function accepts a raw pointer, which is useful to avoid the creation of temporary references.</source>
          <target state="translated">래핑 된 값에 대한 변경 가능한 포인터를 가져옵니다. &lt;a href=&quot;#method.get&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 있는 차이점 은이 함수가 원시 포인터를 허용한다는 점입니다. 이는 임시 참조 생성을 피하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6d7b2240ef54c761d6faa307793ba693f884b564" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the contained value.</source>
          <target state="translated">포함 된 값에 대한 변경 가능한 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="baa6d6ef07f8226c5636c761217972d8dab55984" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the data inside of this &lt;code&gt;Pin&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Pin&lt;/code&gt; 내부의 데이터에 대한 변경 가능한 참조를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="be59995f2e9c7b5e3f2085e347793a76d09f5142" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the key and value in the entry.</source>
          <target state="translated">항목의 키 및 값에 대한 변경 가능한 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="392a07775c4cbc76c6f5c44ba9a3213fc2da81fd" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the key in the entry.</source>
          <target state="translated">항목의 키에 대한 변경 가능한 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5011a90347126d03d01127126a86107c5208ff3e" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the underlying reader.</source>
          <target state="translated">기본 판독기에 대한 변경 가능한 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f2e7f5b6ab637a03072f9c7e9b6f73027700454e" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the underlying value in this cursor.</source>
          <target state="translated">이 커서의 기본 값에 대한 변경 가능한 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="dec4b0e863c4ca94f197dad1d6d087c7c4489b09" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the underlying writer.</source>
          <target state="translated">기본 작성기에 대한 변경 가능한 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="46ecc0b581f4368e77b78de6bcf33878428bee2b" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the value in the entry.</source>
          <target state="translated">항목의 값에 대한 변경 가능한 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="325584547464337b8a139f4e032f2c9235b63738" translate="yes" xml:space="preserve">
          <source>Gets a pinned mutable reference from this pinned pointer.</source>
          <target state="translated">이 고정 된 포인터에서 고정 된 가변 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b99a2e7f3dd3f0850a631d924a0f85ceb5ab793c" translate="yes" xml:space="preserve">
          <source>Gets a pinned shared reference from this pinned pointer.</source>
          <target state="translated">이 고정 포인터에서 고정 공유 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="4518638a3643d66963581854e8f287c3740674d7" translate="yes" xml:space="preserve">
          <source>Gets a pointer to the contained value. Reading from this pointer or turning it into a reference is undefined behavior unless the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; is initialized. Writing to memory that this pointer (non-transitively) points to is undefined behavior (except inside an &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">포함 된 값에 대한 포인터를 가져옵니다. &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 가 초기화 되지 않으면이 포인터에서 읽거나 참조로 바꾸는 것은 정의되지 않은 동작 입니다. 이 포인터가 (전 이적으로) 가리키는 메모리에 쓰는 것은 정의되지 않은 동작입니다 ( &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; 내부 제외 ).</target>
        </trans-unit>
        <trans-unit id="df26339f7815b59c7db8559b2dc091cf260e6a95" translate="yes" xml:space="preserve">
          <source>Gets a pointer to the first element of the array.</source>
          <target state="translated">배열의 첫 번째 요소에 대한 포인터를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="51fc3b713ce675163511b6b7c0001b3242a0e070" translate="yes" xml:space="preserve">
          <source>Gets a reference to a static &lt;code&gt;Location&lt;/code&gt; indicating where it was called.</source>
          <target state="translated">호출 된 &lt;code&gt;Location&lt;/code&gt; 나타내는 정적 위치에 대한 참조를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="de0b41d5362a52c7e2047db8d30137b1ccf260d5" translate="yes" xml:space="preserve">
          <source>Gets a reference to the contained value.</source>
          <target state="translated">포함 된 값에 대한 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="cff65263d72903c422d0a7597523c0375366ab3b" translate="yes" xml:space="preserve">
          <source>Gets a reference to the key and value in the entry.</source>
          <target state="translated">항목의 키 및 값에 대한 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a73b6b64fba7c9a4c0709973dbffd936a0e9fbd2" translate="yes" xml:space="preserve">
          <source>Gets a reference to the key in the entry.</source>
          <target state="translated">항목의 키에 대한 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="feddda07d6595d79eeaf54c555c5ae797d32fafa" translate="yes" xml:space="preserve">
          <source>Gets a reference to the key that would be used when inserting a value through the &lt;code&gt;VacantEntry&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;VacantEntry&lt;/code&gt; 를 통해 값을 삽입 할 때 사용될 키에 대한 참조를 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="7ec6e3eeb0b6ad5023996187968d591cae5085ca" translate="yes" xml:space="preserve">
          <source>Gets a reference to the key that would be used when inserting a value through the VacantEntry.</source>
          <target state="translated">VacantEntry를 통해 값을 삽입 할 때 사용될 키에 대한 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="cf505aa88d1d27b7fd7210fea3eb5f424893e421" translate="yes" xml:space="preserve">
          <source>Gets a reference to the underlying reader.</source>
          <target state="translated">기본 독자에 대한 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="bcf7058743e55a29769e9f52c6d7eb995745282c" translate="yes" xml:space="preserve">
          <source>Gets a reference to the underlying value in this cursor.</source>
          <target state="translated">이 커서의 기본 값에 대한 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="cb7cc9508e37a0159bd3a7b3b0845509f330a592" translate="yes" xml:space="preserve">
          <source>Gets a reference to the underlying writer.</source>
          <target state="translated">기본 작성자에 대한 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a9eb138b06bc622e04583407ce48c73c001c324e" translate="yes" xml:space="preserve">
          <source>Gets a reference to the value in the entry.</source>
          <target state="translated">항목의 값에 대한 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="bf39c650c88ad522e7aa25fef3aa0cf8f15445c4" translate="yes" xml:space="preserve">
          <source>Gets a shared reference out of a pin.</source>
          <target state="translated">핀에서 공유 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c8d67ec62dc724790a39413d95104cb2f25712dc" translate="yes" xml:space="preserve">
          <source>Gets a shared reference to the contained value.</source>
          <target state="translated">포함 된 값에 대한 공유 참조를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7979bb5a2e24a20633426914599d65cc13e380ce" translate="yes" xml:space="preserve">
          <source>Gets a static string slice containing the name of a type.</source>
          <target state="translated">형식 이름이 포함 된 정적 문자열 슬라이스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a1f0dbc00515171edea6468d519fe0276ba8e73e" translate="yes" xml:space="preserve">
          <source>Gets an approximation of the number of &lt;code&gt;Weak&lt;/code&gt; pointers pointing to this allocation.</source>
          <target state="translated">이 할당을 가리키는 &lt;code&gt;Weak&lt;/code&gt; 포인터 수의 근사치를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="fe0c54b937e7b93e8f39dc4887850e732a02eae2" translate="yes" xml:space="preserve">
          <source>Gets an approximation of the number of &lt;code&gt;Weak&lt;/code&gt; pointers pointing to this value.</source>
          <target state="translated">이 값을 가리키는 &lt;code&gt;Weak&lt;/code&gt; 포인터 수의 근사값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="234ebcadb6ac6bb0def6ad4173e0e189daeb1439" translate="yes" xml:space="preserve">
          <source>Gets an identifier which is globally unique to the specified type. This function will return the same value for a type regardless of whichever crate it is invoked in.</source>
          <target state="translated">지정된 형식에 대해 전역 적으로 고유 한 식별자를 가져옵니다. 이 함수는 호출 된 상자에 관계없이 유형에 대해 동일한 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="77e393eb1ab1f3573f4cc8c8d9a6214bd3e5808e" translate="yes" xml:space="preserve">
          <source>Gets an iterator for moving out the &lt;code&gt;BTreeSet&lt;/code&gt;'s contents.</source>
          <target state="translated">&lt;code&gt;BTreeSet&lt;/code&gt; 의 내용 을 옮기는 반복자를 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="11b43ebc9818fa3526a8e800dba2a829340904c9" translate="yes" xml:space="preserve">
          <source>Gets an iterator over the entries of the map, sorted by key.</source>
          <target state="translated">키로 정렬 된 맵 항목에 대한 반복자를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="4282f4ebb370a2d3e37842bf8bea7691a93cc17f" translate="yes" xml:space="preserve">
          <source>Gets an iterator over the keys of the map, in sorted order.</source>
          <target state="translated">정렬 된 순서로 맵의 키에 대한 반복자를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="88cd2b443e0410f773c3db3b4b02c30273a29587" translate="yes" xml:space="preserve">
          <source>Gets an iterator over the values of the map, in order by key.</source>
          <target state="translated">키 순서대로 맵 값에 대한 반복자를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f7d58dcf7a90c88a6dd8d8e2a936de88caad9b01" translate="yes" xml:space="preserve">
          <source>Gets an iterator that visits the values in the &lt;code&gt;BTreeSet&lt;/code&gt; in ascending order.</source>
          <target state="translated">&lt;code&gt;BTreeSet&lt;/code&gt; 의 값 을 오름차순으로 방문하는 반복자를 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="bf50547bde43305eadfc81da6c51963036f0b0bc" translate="yes" xml:space="preserve">
          <source>Gets mutable references to the underlying readers in this &lt;code&gt;Chain&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Chain&lt;/code&gt; 의 기본 독자에 대한 변경 가능한 참조를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="c5d75c4c07b578c3182dd1391a22f0515f568828" translate="yes" xml:space="preserve">
          <source>Gets references to the underlying readers in this &lt;code&gt;Chain&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Chain&lt;/code&gt; 의 기본 독자에 대한 참조를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="4099d19a8a1a54e1ad72f73ecdd2402a0b7a3136" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 &lt;code&gt;TypeId&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="41602bda251eaed54ccea25679c0483e128331bf" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;. &lt;a href=&quot;../../../any/trait.any#tymethod.type_id&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 &lt;code&gt;TypeId&lt;/code&gt; 를 가져옵니다 . &lt;a href=&quot;../../../any/trait.any#tymethod.type_id&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7397491fe536b6ab323bc3962fba8e1fb15e1948" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;. &lt;a href=&quot;../../any/trait.any#tymethod.type_id&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 &lt;code&gt;TypeId&lt;/code&gt; 를 가져옵니다 . &lt;a href=&quot;../../any/trait.any#tymethod.type_id&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0958a5367c67c57557138ce54a3c5f59d233668" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;. &lt;a href=&quot;../any/trait.any#tymethod.type_id&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 &lt;code&gt;TypeId&lt;/code&gt; 를 가져옵니다 . &lt;a href=&quot;../any/trait.any#tymethod.type_id&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0dc7f61a814ccb0f4c7bc6d983b16e56f33b8b7" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;. &lt;a href=&quot;any/trait.any#tymethod.type_id&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 &lt;code&gt;TypeId&lt;/code&gt; 를 가져옵니다 . &lt;a href=&quot;any/trait.any#tymethod.type_id&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6053452902f00975747e0db67cb9da5bcc78254" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;. &lt;a href=&quot;trait.any#tymethod.type_id&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 의 &lt;code&gt;TypeId&lt;/code&gt; 를 가져옵니다 . &lt;a href=&quot;trait.any#tymethod.type_id&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3d8aeac371c3726d0823d3e47870ae432d791d1" translate="yes" xml:space="preserve">
          <source>Gets the entire contents of the &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; as an array, if its size exactly matches that of the requested array.</source>
          <target state="translated">크기가 요청 된 배열의 크기와 정확히 일치하는 경우 &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 의 전체 내용을 배열로 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="cfed0516ca0cceacbef295ac249aa061f2675ee1" translate="yes" xml:space="preserve">
          <source>Gets the given key's corresponding entry in the map for in-place manipulation.</source>
          <target state="translated">전체 조작을 위해 맵에서 지정된 키의 해당 항목을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="4c299d04fef3ac60e871ddceb7fed1d58a4373a4" translate="yes" xml:space="preserve">
          <source>Gets the number of &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&lt;/code&gt;&lt;/a&gt; pointers to this allocation.</source>
          <target state="translated">이 할당에 대한 &lt;a href=&quot;struct.weak&quot;&gt; &lt;code&gt;Weak&lt;/code&gt; &lt;/a&gt; 포인터 의 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="82785258c5148ac429e819aa10802824ac7d2a46" translate="yes" xml:space="preserve">
          <source>Gets the number of &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&lt;/code&gt;&lt;/a&gt; pointers to this value.</source>
          <target state="translated">이 값에 대한 &lt;a href=&quot;struct.weak&quot;&gt; &lt;code&gt;Weak&lt;/code&gt; &lt;/a&gt; 포인터 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="ea2a4acdf77bc69347663f277f505d5ad15cc026" translate="yes" xml:space="preserve">
          <source>Gets the number of &lt;code&gt;Weak&lt;/code&gt; pointers pointing to this allocation.</source>
          <target state="translated">이 할당을 가리키는 &lt;code&gt;Weak&lt;/code&gt; 포인터 의 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="2d6bb90de6f3314e5b0aa7676e3fa2574049a5b1" translate="yes" xml:space="preserve">
          <source>Gets the number of &lt;code&gt;Weak&lt;/code&gt; pointers pointing to this value.</source>
          <target state="translated">이 값을 가리키는 &lt;code&gt;Weak&lt;/code&gt; 포인터 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="266325732ccd237fd7f26bfdb76bb89eb62a4114" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Arc&lt;/code&gt;) pointers pointing to this allocation.</source>
          <target state="translated">이 할당을 가리키는 강력한 ( &lt;code&gt;Arc&lt;/code&gt; ) 포인터 의 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="55f33a15ae6da7b8fd099c7f81c55a8c43992a9c" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Arc&lt;/code&gt;) pointers pointing to this value.</source>
          <target state="translated">이 값을 가리키는 강한 ( &lt;code&gt;Arc&lt;/code&gt; ) 포인터 의 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="acc981beee8d18e67fc3a5059aa645efdb5cb013" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Arc&lt;/code&gt;) pointers to this allocation.</source>
          <target state="translated">이 할당에 대한 강력한 ( &lt;code&gt;Arc&lt;/code&gt; ) 포인터 의 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="8c9d8a68862d17ae50fe9b2191b4bc755a3b2c57" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Arc&lt;/code&gt;) pointers to this value.</source>
          <target state="translated">이 값에 대한 강한 ( &lt;code&gt;Arc&lt;/code&gt; ) 포인터 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="86df16ff86121c6f4046474b56b37a148e7c840c" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Rc&lt;/code&gt;) pointers pointing to this allocation.</source>
          <target state="translated">이 할당을 가리키는 강력한 ( &lt;code&gt;Rc&lt;/code&gt; ) 포인터 의 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="6dfd6b399c6a7a5e5c213f4220d6a406180d8d29" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Rc&lt;/code&gt;) pointers pointing to this value.</source>
          <target state="translated">이 값을 가리키는 강한 ( &lt;code&gt;Rc&lt;/code&gt; ) 포인터 의 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="86da648c891a7c42ebdf312b33a4ab9ada05ef68" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Rc&lt;/code&gt;) pointers to this allocation.</source>
          <target state="translated">이 할당에 대한 강력한 ( &lt;code&gt;Rc&lt;/code&gt; ) 포인터 의 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="62256e04434cb17270e60d73bd90064ac287c70a" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Rc&lt;/code&gt;) pointers to this value.</source>
          <target state="translated">이 값에 대한 강한 ( &lt;code&gt;Rc&lt;/code&gt; ) 포인터 의 수를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="7b980936990012ea161b866d1758615b20bb0b9e" translate="yes" xml:space="preserve">
          <source>Gets the peer credentials for this Unix domain socket.</source>
          <target state="translated">이 Unix 도메인 소켓에 대한 피어 자격 증명을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="9a803af3c996a7aeaae26131be70879a8de1e8ca" translate="yes" xml:space="preserve">
          <source>Gets the thread's name.</source>
          <target state="translated">스레드 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="49ee03c4c760e66b9e940fbfa2d32f04a888601b" translate="yes" xml:space="preserve">
          <source>Gets the thread's unique identifier.</source>
          <target state="translated">스레드의 고유 식별자를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e80f24c5e15d0db75eb52ca4f146d8328ad163c8" translate="yes" xml:space="preserve">
          <source>Gets the underlying byte view of the &lt;a href=&quot;../../../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; slice.</source>
          <target state="translated">&lt;a href=&quot;../../../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; 슬라이스 의 기본 바이트보기를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="7d3e5946e7ecbe9a325741ceead9ec7679286f06" translate="yes" xml:space="preserve">
          <source>Gets the underlying byte view of the &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; slice. &lt;a href=&quot;../os/unix/ffi/trait.osstrext#tymethod.as_bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; 슬라이스 의 기본 바이트보기를 가져옵니다 . &lt;a href=&quot;../os/unix/ffi/trait.osstrext#tymethod.as_bytes&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ce976fab972b71cb3689e58f2c81f4c1b2c23c3" translate="yes" xml:space="preserve">
          <source>Gets the underlying byte view of the [&lt;code&gt;OsStr&lt;/code&gt;] slice. &lt;a href=&quot;../os/unix/ffi/trait.osstrext#tymethod.as_bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">[ &lt;code&gt;OsStr&lt;/code&gt; ] 슬라이스 의 기본 바이트보기를 가져옵니다 . &lt;a href=&quot;../os/unix/ffi/trait.osstrext#tymethod.as_bytes&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b70bb73da43a0dacb273f9c29de1ad90c047f9b2" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;IPV6_MULTICAST_LOOP&lt;/code&gt; option for this socket.</source>
          <target state="translated">이 소켓 의 &lt;code&gt;IPV6_MULTICAST_LOOP&lt;/code&gt; 옵션 의 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="541e09715c0e448d9ee0ceae38a6c62a42e062e7" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;IP_MULTICAST_LOOP&lt;/code&gt; option for this socket.</source>
          <target state="translated">이 소켓 의 &lt;code&gt;IP_MULTICAST_LOOP&lt;/code&gt; 옵션 의 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="ee99abd672fa0bc29c2f53bc51cd2022f7fe6174" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;IP_MULTICAST_TTL&lt;/code&gt; option for this socket.</source>
          <target state="translated">이 소켓 의 &lt;code&gt;IP_MULTICAST_TTL&lt;/code&gt; 옵션 의 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="ca264fa81bb9d68241254fa46d7aa2c2cda498bc" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;IP_TTL&lt;/code&gt; option for this socket.</source>
          <target state="translated">이 소켓 의 &lt;code&gt;IP_TTL&lt;/code&gt; 옵션 의 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="081675c2121b5c0eba69352ff7f20ab17e65e3d1" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;SO_BROADCAST&lt;/code&gt; option for this socket.</source>
          <target state="translated">이 소켓 의 &lt;code&gt;SO_BROADCAST&lt;/code&gt; 옵션 의 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="0f6a73f5b7aaab6427c36574dc2e96dbd9e394ff" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;SO_ERROR&lt;/code&gt; option on this socket.</source>
          <target state="translated">이 소켓 의 &lt;code&gt;SO_ERROR&lt;/code&gt; 옵션 의 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="fd9694065ed8ce77dc78229e63dba85fa8ab43e4" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;TCP_NODELAY&lt;/code&gt; option on this socket.</source>
          <target state="translated">이 소켓 에서 &lt;code&gt;TCP_NODELAY&lt;/code&gt; 옵션 의 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="a351f54361bf1111912e96b2243de3d3ba2e710e" translate="yes" xml:space="preserve">
          <source>Getter for the underlying string to be searched in</source>
          <target state="translated">검색 할 기본 문자열에 대한 Getter</target>
        </trans-unit>
        <trans-unit id="946249472d59c612c049bc459ef794710e06ea0f" translate="yes" xml:space="preserve">
          <source>Getter for the underlying string to be searched in &lt;a href=&quot;trait.searcher#tymethod.haystack&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">기본 문자열에 대한 게터는에서 검색 할 &lt;a href=&quot;trait.searcher#tymethod.haystack&quot;&gt;더 읽기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="5995d36c171cb98f5012509471c6af75ae9b7b83" translate="yes" xml:space="preserve">
          <source>Getting a handle to the current thread with &lt;code&gt;thread::current()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;thread::current()&lt;/code&gt; 사용하여 현재 스레드에 대한 핸들 가져 오기 :</target>
        </trans-unit>
        <trans-unit id="18ecec4eaf70488e9516f42f4c700b0d3f3801c9" translate="yes" xml:space="preserve">
          <source>Getting grapheme clusters from strings is complex, so this functionality is not provided by the standard library. Crates are available on &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; if this is the functionality you need.</source>
          <target state="translated">문자열에서 grapheme 클러스터를 얻는 것은 복잡하므로이 기능은 표준 라이브러리에서 제공되지 않습니다. 크레이트는 필요한 기능이라면 &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io에서&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="40b8f0b0dd8c757df38c0efb486cc65a37413fd0" translate="yes" xml:space="preserve">
          <source>Getting immutable access to the contiguous slice.</source>
          <target state="translated">연속 슬라이스에 대한 변경 불가능한 액세스 권한 얻기.</target>
        </trans-unit>
        <trans-unit id="6ce1a3d0561d101c4db29f248d240d379840a525" translate="yes" xml:space="preserve">
          <source>Give it text interactively by running the executable directly, in which case it will wait for the Enter key to be pressed before continuing</source>
          <target state="translated">실행 파일을 직접 실행하여 대화식으로 텍스트를 제공하십시오.이 경우 계속하기 전에 Enter 키를 누를 때까지 기다리십시오.</target>
        </trans-unit>
        <trans-unit id="81432d4fe569ad1c70c83fd457057f8aff028c0e" translate="yes" xml:space="preserve">
          <source>Given &lt;code&gt;impl&amp;lt;P1..=Pn&amp;gt; Trait&amp;lt;T1..=Tn&amp;gt; for T0&lt;/code&gt;, an &lt;code&gt;impl&lt;/code&gt; is valid only if at least one of the following is true:</source>
          <target state="translated">&lt;code&gt;impl&amp;lt;P1..=Pn&amp;gt; Trait&amp;lt;T1..=Tn&amp;gt; for T0&lt;/code&gt; 에 대해 impl &amp;lt;P1 .. = Pn&amp;gt; Trait &amp;lt;T1 .. = Tn&amp;gt;이 주어지면 다음 중 하나 이상이 참인 경우에만 &lt;code&gt;impl&lt;/code&gt; 이 유효합니다.</target>
        </trans-unit>
        <trans-unit id="2c541ca5b28906f0b0b887376717739a6ff63fa9" translate="yes" xml:space="preserve">
          <source>Given a function, or closure, there are drop scopes for:</source>
          <target state="translated">함수 또는 클로저가 주어지면 다음과 같은 드롭 범위가 있습니다.</target>
        </trans-unit>
        <trans-unit id="460459e684630e18d67dce5af60c9aa1a9d7fe48" translate="yes" xml:space="preserve">
          <source>Given a list of integers, use a vector and return the mean (the average value), median (when sorted, the value in the middle position), and mode (the value that occurs most often; a hash map will be helpful here) of the list.</source>
          <target state="translated">정수 목록이 주어지면 벡터를 사용하여 평균 (평균 값), 중앙값 (정렬시 중간 위치의 값) 및 모드 (가장 자주 발생하는 값; 해시 맵이 도움이 됨)를 반환 목록의.</target>
        </trans-unit>
        <trans-unit id="ea3d2794af8f5c0a103590ed2dfa3cbed7263acb" translate="yes" xml:space="preserve">
          <source>Given a path, query the file system to get information about a file, directory, etc.</source>
          <target state="translated">경로가 주어지면 파일 시스템을 쿼리하여 파일, 디렉토리 등에 대한 정보를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="caef16517cee4d24248fc21d836a1a72f7d7936b" translate="yes" xml:space="preserve">
          <source>Given an element the closure must return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. The returned iterator will yield only the elements for which the closure returns true.</source>
          <target state="translated">요소가 주어지면 클로저는 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환해야합니다 . 반환 된 반복자는 클로저가 true를 반환하는 요소 만 생성합니다.</target>
        </trans-unit>
        <trans-unit id="30386826e248fa1c007d69f26e43a06ce7da9de9" translate="yes" xml:space="preserve">
          <source>Given that a &lt;a href=&quot;../macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; will call &lt;code&gt;drop&lt;/code&gt; as it unwinds, any &lt;a href=&quot;../macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; in a &lt;code&gt;drop&lt;/code&gt; implementation will likely abort.</source>
          <target state="translated">그 &lt;a href=&quot;../macro.panic&quot;&gt; &lt;code&gt;panic!&lt;/code&gt; &lt;/a&gt; 감안할 때 ! 풀리면 &lt;code&gt;drop&lt;/code&gt; 을 호출 합니다 &lt;a href=&quot;../macro.panic&quot;&gt; &lt;code&gt;panic!&lt;/code&gt; &lt;/a&gt;A의 &lt;code&gt;drop&lt;/code&gt; 구현 가능성이 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="6263eb5ed7ee7fa0481696a92c8f43d9efb00e4c" translate="yes" xml:space="preserve">
          <source>Given that a &lt;a href=&quot;https://doc.rust-lang.org/core/macro.panic.html&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; will call &lt;code&gt;drop&lt;/code&gt; as it unwinds, any &lt;a href=&quot;https://doc.rust-lang.org/core/macro.panic.html&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; in a &lt;code&gt;drop&lt;/code&gt; implementation will likely abort.</source>
          <target state="translated">그 &lt;a href=&quot;https://doc.rust-lang.org/core/macro.panic.html&quot;&gt; &lt;code&gt;panic!&lt;/code&gt; &lt;/a&gt; 감안할 때 ! 그것이 풀리면 &lt;code&gt;drop&lt;/code&gt; 이라고 부를 것입니다 &lt;a href=&quot;https://doc.rust-lang.org/core/macro.panic.html&quot;&gt; &lt;code&gt;panic!&lt;/code&gt; &lt;/a&gt; &lt;code&gt;drop&lt;/code&gt; 구현 에서 중단 될 가능성이 높습니다.</target>
        </trans-unit>
        <trans-unit id="e523f1998c41a0b9adf80292e1554bbf7101fb13" translate="yes" xml:space="preserve">
          <source>Given that the &lt;code&gt;String&lt;/code&gt; is empty, this will not allocate any initial buffer. While that means that this initial operation is very inexpensive, it may cause excessive allocation later when you add data. If you have an idea of how much data the &lt;code&gt;String&lt;/code&gt; will hold, consider the &lt;a href=&quot;#method.with_capacity&quot;&gt;&lt;code&gt;with_capacity&lt;/code&gt;&lt;/a&gt; method to prevent excessive re-allocation.</source>
          <target state="translated">점을 감안 &lt;code&gt;String&lt;/code&gt; 비어 있습니다, 이것은 어떤 초기 버퍼를 할당하지 않습니다. 이는이 초기 작업이 매우 저렴하다는 것을 의미하지만 나중에 데이터를 추가 할 때 과도한 할당이 발생할 수 있습니다. &lt;code&gt;String&lt;/code&gt; 이 얼마나 많은 데이터 를 보유 할 지 &lt;a href=&quot;#method.with_capacity&quot;&gt; &lt;code&gt;with_capacity&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 과도한 재 할당을 방지하십시오.</target>
        </trans-unit>
        <trans-unit id="a59bf69ea093a125173bce72323495b1305959b6" translate="yes" xml:space="preserve">
          <source>Given that the &lt;code&gt;String&lt;/code&gt; is empty, this will not allocate any initial buffer. While that means that this initial operation is very inexpensive, it may cause excessive allocation later when you add data. If you have an idea of how much data the &lt;code&gt;String&lt;/code&gt; will hold, consider the &lt;a href=&quot;struct.string#method.with_capacity&quot;&gt;&lt;code&gt;with_capacity&lt;/code&gt;&lt;/a&gt; method to prevent excessive re-allocation.</source>
          <target state="translated">점을 감안 &lt;code&gt;String&lt;/code&gt; 비어 있습니다, 이것은 어떤 초기 버퍼를 할당하지 않습니다. 이는이 초기 작업이 매우 저렴하다는 것을 의미하지만 나중에 데이터를 추가 할 때 과도한 할당이 발생할 수 있습니다. &lt;code&gt;String&lt;/code&gt; 이 얼마나 많은 데이터 를 보유 할 것인지 알고있는 경우 과도한 재 할당을 방지하기 위해 &lt;a href=&quot;struct.string#method.with_capacity&quot;&gt; &lt;code&gt;with_capacity&lt;/code&gt; &lt;/a&gt; 메소드를 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad539d6fb0976a5b2b95b62832510a1f84220951" translate="yes" xml:space="preserve">
          <source>Given that the smart pointer pattern is a general design pattern used frequently in Rust, this chapter won&amp;rsquo;t cover every existing smart pointer. Many libraries have their own smart pointers, and you can even write your own. We&amp;rsquo;ll cover the most common smart pointers in the standard library:</source>
          <target state="translated">스마트 포인터 패턴은 Rust에서 자주 사용되는 일반적인 디자인 패턴이므로이 장에서는 기존의 모든 스마트 포인터를 다루지 않습니다. 많은 라이브러리에는 자체 스마트 포인터가 있으며 직접 작성할 수도 있습니다. 표준 라이브러리에서 가장 일반적인 스마트 포인터를 다룰 것입니다.</target>
        </trans-unit>
        <trans-unit id="4a31e9d96bd27c24e6fc00ba6a064634849de284" translate="yes" xml:space="preserve">
          <source>Given that we don't know what type the pointer is, and there's potential ambiguity for some types, we disallow calling methods on raw pointers when the type is unknown.</source>
          <target state="translated">우리는 포인터가 어떤 타입인지 알지 못하고, 어떤 타입에는 모호성이있을 수 있으므로 타입을 알 수 없을 때 원시 포인터에 대한 메소드 호출을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5f1184f7df96c5928092ad9c6b550699bf887826" translate="yes" xml:space="preserve">
          <source>Global</source>
          <target state="translated">Global</target>
        </trans-unit>
        <trans-unit id="597030c6c4f56fe393a1ab438473028f6c480a3f" translate="yes" xml:space="preserve">
          <source>Global::alloc</source>
          <target state="translated">Global::alloc</target>
        </trans-unit>
        <trans-unit id="bc8440f1b0fd5e4f27413dbc2c9588f0ac4b35e6" translate="yes" xml:space="preserve">
          <source>Global::alloc_array</source>
          <target state="translated">Global::alloc_array</target>
        </trans-unit>
        <trans-unit id="286809b4d3acafb6b79ba2357ef09d081752bcd8" translate="yes" xml:space="preserve">
          <source>Global::alloc_excess</source>
          <target state="translated">Global::alloc_excess</target>
        </trans-unit>
        <trans-unit id="055e192998c987cc2408347852310a7d777d50b2" translate="yes" xml:space="preserve">
          <source>Global::alloc_one</source>
          <target state="translated">Global::alloc_one</target>
        </trans-unit>
        <trans-unit id="4916367e840ff297f5f655976deb8d56431c82b1" translate="yes" xml:space="preserve">
          <source>Global::alloc_zeroed</source>
          <target state="translated">Global::alloc_zeroed</target>
        </trans-unit>
        <trans-unit id="422dfaa437889aa6a38e0ce319516d4e1aa7ccbe" translate="yes" xml:space="preserve">
          <source>Global::borrow</source>
          <target state="translated">Global::borrow</target>
        </trans-unit>
        <trans-unit id="7a0370da6de58c97a35cfc99cd0bed7729121756" translate="yes" xml:space="preserve">
          <source>Global::borrow_mut</source>
          <target state="translated">Global::borrow_mut</target>
        </trans-unit>
        <trans-unit id="f77b715da0c371e387a1c0cabbb0d1af068041af" translate="yes" xml:space="preserve">
          <source>Global::clone</source>
          <target state="translated">Global::clone</target>
        </trans-unit>
        <trans-unit id="50d4c87192aeed0b09b4440b16be390f6a750a2f" translate="yes" xml:space="preserve">
          <source>Global::clone_from</source>
          <target state="translated">Global::clone_from</target>
        </trans-unit>
        <trans-unit id="9cfb69614980015da407f6e7048f1148f4930023" translate="yes" xml:space="preserve">
          <source>Global::clone_into</source>
          <target state="translated">Global::clone_into</target>
        </trans-unit>
        <trans-unit id="7b2c4b961ebce1561e240a7194da73b5841efb82" translate="yes" xml:space="preserve">
          <source>Global::dealloc</source>
          <target state="translated">Global::dealloc</target>
        </trans-unit>
        <trans-unit id="1a080a708cdd5439e5302ec1934574d59cf90d7d" translate="yes" xml:space="preserve">
          <source>Global::dealloc_array</source>
          <target state="translated">Global::dealloc_array</target>
        </trans-unit>
        <trans-unit id="d428b88cec77fa2bb91fead3f27848981c76580d" translate="yes" xml:space="preserve">
          <source>Global::dealloc_one</source>
          <target state="translated">Global::dealloc_one</target>
        </trans-unit>
        <trans-unit id="995b6ad6ac004f90a18a104ffb9147bf847cb8d1" translate="yes" xml:space="preserve">
          <source>Global::default</source>
          <target state="translated">Global::default</target>
        </trans-unit>
        <trans-unit id="76169c6a841dcf12cff8e0b09058ec8d2b45201d" translate="yes" xml:space="preserve">
          <source>Global::fmt</source>
          <target state="translated">Global::fmt</target>
        </trans-unit>
        <trans-unit id="5c3cece4620e1e6edac7a400fcf912adfe0d27cb" translate="yes" xml:space="preserve">
          <source>Global::from</source>
          <target state="translated">Global::from</target>
        </trans-unit>
        <trans-unit id="a59d2fc290a04b6f0c31c9e50dafd716b2e306ed" translate="yes" xml:space="preserve">
          <source>Global::grow_in_place</source>
          <target state="translated">Global::grow_in_place</target>
        </trans-unit>
        <trans-unit id="25a7d5ad4d365ca4c966f334f3295d6b1ceaaf1d" translate="yes" xml:space="preserve">
          <source>Global::into</source>
          <target state="translated">Global::into</target>
        </trans-unit>
        <trans-unit id="ce7a411799e0b5091e1cb6d261729a98fde69476" translate="yes" xml:space="preserve">
          <source>Global::realloc</source>
          <target state="translated">Global::realloc</target>
        </trans-unit>
        <trans-unit id="55cd704a6f196baec10e6f8fc46f13be6be1a4da" translate="yes" xml:space="preserve">
          <source>Global::realloc_array</source>
          <target state="translated">Global::realloc_array</target>
        </trans-unit>
        <trans-unit id="2dc3bca035c872b5fad904a8f47f338aa69c712d" translate="yes" xml:space="preserve">
          <source>Global::realloc_excess</source>
          <target state="translated">Global::realloc_excess</target>
        </trans-unit>
        <trans-unit id="2eba0652c97a930f2bb92b95f7d1bce1986c871b" translate="yes" xml:space="preserve">
          <source>Global::shrink_in_place</source>
          <target state="translated">Global::shrink_in_place</target>
        </trans-unit>
        <trans-unit id="736720c59f4f431a038c46cc3aa525e5758a39ba" translate="yes" xml:space="preserve">
          <source>Global::to_owned</source>
          <target state="translated">Global::to_owned</target>
        </trans-unit>
        <trans-unit id="8ce6860d43ee49cdb5334bdd351c1035cc8ff38c" translate="yes" xml:space="preserve">
          <source>Global::try_from</source>
          <target state="translated">Global::try_from</target>
        </trans-unit>
        <trans-unit id="617366a681bd521ad66de932f01b46a609e71cb1" translate="yes" xml:space="preserve">
          <source>Global::try_into</source>
          <target state="translated">Global::try_into</target>
        </trans-unit>
        <trans-unit id="a23ee2c26cf33d2d9d02972f8660c76e5304674f" translate="yes" xml:space="preserve">
          <source>Global::type_id</source>
          <target state="translated">Global::type_id</target>
        </trans-unit>
        <trans-unit id="af4b996fed7b58c24cbe5ab00c833b6e42a8a4d4" translate="yes" xml:space="preserve">
          <source>Global::usable_size</source>
          <target state="translated">Global::usable_size</target>
        </trans-unit>
        <trans-unit id="240acfbbf20ecc23d32a755b89f3059599c547b8" translate="yes" xml:space="preserve">
          <source>GlobalAlloc</source>
          <target state="translated">GlobalAlloc</target>
        </trans-unit>
        <trans-unit id="fc670f003f08164e69bb95fb98d8c6ed228f9f51" translate="yes" xml:space="preserve">
          <source>GlobalAlloc::alloc</source>
          <target state="translated">GlobalAlloc::alloc</target>
        </trans-unit>
        <trans-unit id="90c20880262c918bb85b13b512a72e9595a71d28" translate="yes" xml:space="preserve">
          <source>GlobalAlloc::alloc_zeroed</source>
          <target state="translated">GlobalAlloc::alloc_zeroed</target>
        </trans-unit>
        <trans-unit id="aebfa8de2c70a18e38a89cd348582fe45986c6b2" translate="yes" xml:space="preserve">
          <source>GlobalAlloc::dealloc</source>
          <target state="translated">GlobalAlloc::dealloc</target>
        </trans-unit>
        <trans-unit id="fe2c144d895a892ee23f306ecdb0f1fde3f96ad7" translate="yes" xml:space="preserve">
          <source>GlobalAlloc::realloc</source>
          <target state="translated">GlobalAlloc::realloc</target>
        </trans-unit>
        <trans-unit id="7427cf697be16a4ec1d916910128a59d920125e7" translate="yes" xml:space="preserve">
          <source>Glossary</source>
          <target state="translated">Glossary</target>
        </trans-unit>
        <trans-unit id="2514908c36408ef2ed4444834c9f5ccbe93b670b" translate="yes" xml:space="preserve">
          <source>Glue for usage of the &lt;a href=&quot;../macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt; macro with implementors of this trait.</source>
          <target state="translated">&lt;a href=&quot;../macro.write&quot;&gt; &lt;code&gt;write!&lt;/code&gt; &lt;/a&gt; 사용을위한 접착제 ! 이 특성의 구현 자와 매크로.</target>
        </trans-unit>
        <trans-unit id="3a1c017ccb35f05e8443d7a3eddb7ce45674e092" translate="yes" xml:space="preserve">
          <source>Glue for usage of the &lt;a href=&quot;../macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt; macro with implementors of this trait. &lt;a href=&quot;../fmt/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../macro.write&quot;&gt; &lt;code&gt;write!&lt;/code&gt; &lt;/a&gt; 용 접착제 ! 이 특성의 구현 자와 함께 매크로. &lt;a href=&quot;../fmt/trait.write#method.write_fmt&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1dbe04d6160f33e99282ce3fd010eb4fb67bcb2" translate="yes" xml:space="preserve">
          <source>Glue for usage of the &lt;a href=&quot;../macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt; macro with implementors of this trait. &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../macro.write&quot;&gt; &lt;code&gt;write!&lt;/code&gt; &lt;/a&gt; 용 접착제 ! 이 특성의 구현 자와 함께 매크로. &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="801bded4f0d6ed0381cd90ad308e8e87612227ff" translate="yes" xml:space="preserve">
          <source>Glue for usage of the &lt;a href=&quot;macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt; macro with implementors of this trait. &lt;a href=&quot;fmt/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;macro.write&quot;&gt; &lt;code&gt;write!&lt;/code&gt; &lt;/a&gt; 용 접착제 ! 이 특성의 구현 자와 함께 매크로. &lt;a href=&quot;fmt/trait.write#method.write_fmt&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63f9aa2e6d4ad074b5cfe6a907121a6231effb73" translate="yes" xml:space="preserve">
          <source>Glue for usage of the [&lt;code&gt;write!&lt;/code&gt;] macro with implementors of this trait. &lt;a href=&quot;../fmt/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">[ &lt;code&gt;write!&lt;/code&gt; 사용을위한 접착제 ]이 특성을 구현 한 매크로 &lt;a href=&quot;../fmt/trait.write#method.write_fmt&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34773aa1db362e995011ad93000d8b9d338dfdd1" translate="yes" xml:space="preserve">
          <source>Glue for usage of the [&lt;code&gt;write!&lt;/code&gt;] macro with implementors of this trait. &lt;a href=&quot;fmt/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">[ &lt;code&gt;write!&lt;/code&gt; 사용을위한 접착제 ]이 특성을 구현 한 매크로 &lt;a href=&quot;fmt/trait.write#method.write_fmt&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bbef5a72f8aabf3ae93fcc57e62c0a0223a518e5" translate="yes" xml:space="preserve">
          <source>Glue for usage of the [&lt;code&gt;write!&lt;/code&gt;] macro with implementors of this trait. &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">[ &lt;code&gt;write!&lt;/code&gt; 사용을위한 접착제 ]이 특성을 구현 한 매크로 &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="103e6499a37e08740be45a6eeb4c1b026a8ac079" translate="yes" xml:space="preserve">
          <source>Go into the &lt;em&gt;hello_cargo&lt;/em&gt; directory and list the files. You&amp;rsquo;ll see that Cargo has generated two files and one directory for us: a &lt;em&gt;Cargo.toml&lt;/em&gt; file and a &lt;em&gt;src&lt;/em&gt; directory with a &lt;em&gt;main.rs&lt;/em&gt; file inside.</source>
          <target state="translated">&lt;em&gt;hello_cargo&lt;/em&gt; 디렉토리 로 이동 하여 파일을 나열하십시오. Cargo가 &lt;em&gt;Cargo.toml&lt;/em&gt; 파일과 &lt;em&gt;main.rs&lt;/em&gt; 파일이 들어 있는 &lt;em&gt;src&lt;/em&gt; 디렉토리 라는 두 개의 파일과 하나의 디렉토리를 생성 한 것을 볼 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c5134e463153b73435701f263a503592ab3d53a" translate="yes" xml:space="preserve">
          <source>Go into the &lt;em&gt;hello_cargo&lt;/em&gt; directory and list the files. You&amp;rsquo;ll see that Cargo has generated two files and one directory for us: a &lt;em&gt;Cargo.toml&lt;/em&gt; file and a &lt;em&gt;src&lt;/em&gt; directory with a &lt;em&gt;main.rs&lt;/em&gt; file inside. It has also initialized a new Git repository along with a &lt;em&gt;.gitignore&lt;/em&gt; file.</source>
          <target state="translated">&lt;em&gt;hello_cargo&lt;/em&gt; 디렉토리 로 이동 하여 파일을 나열하십시오. Cargo가 두 개의 파일과 하나의 디렉토리 ( &lt;em&gt;Cargo.toml&lt;/em&gt; 파일과 &lt;em&gt;main.rs&lt;/em&gt; 파일이있는 &lt;em&gt;src&lt;/em&gt; 디렉토리)를 &lt;em&gt;생성했음을 알 수&lt;/em&gt; 있습니다. 또한 &lt;em&gt;.gitignore&lt;/em&gt; 파일 과 함께 새로운 Git 리포지토리를 초기화했습니다 .</target>
        </trans-unit>
        <trans-unit id="50e6889164bb8054d882b924cda71582b6d6d180" translate="yes" xml:space="preserve">
          <source>Going finite with &lt;a href=&quot;trait.iterator#method.take&quot;&gt;&lt;code&gt;Iterator::take()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;trait.iterator#method.take&quot;&gt; &lt;code&gt;Iterator::take()&lt;/code&gt; &lt;/a&gt; 유한 해집니다 .</target>
        </trans-unit>
        <trans-unit id="b6849789947c3320fec7645aaddce84614976c34" translate="yes" xml:space="preserve">
          <source>Going finite with &lt;a href=&quot;trait.iterator#method.take&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;trait.iterator#method.take&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt; 와 함께 유한 :</target>
        </trans-unit>
        <trans-unit id="62320f24d2e67e3a996b5eb69a47e8e61772abe1" translate="yes" xml:space="preserve">
          <source>Graceful Shutdown and Cleanup</source>
          <target state="translated">정상 종료 및 정리</target>
        </trans-unit>
        <trans-unit id="14b567b853879017732fc7e6b51b1225fb2590d3" translate="yes" xml:space="preserve">
          <source>Gradual initialization of an &lt;code&gt;UnsafeCell&lt;/code&gt; requires &lt;code&gt;raw_get&lt;/code&gt;, as calling &lt;code&gt;get&lt;/code&gt; would require creating a reference to uninitialized data:</source>
          <target state="translated">의 점진적 초기화 &lt;code&gt;UnsafeCell&lt;/code&gt; 이 필요 &lt;code&gt;raw_get&lt;/code&gt; 호출로, &lt;code&gt;get&lt;/code&gt; 초기화되지 않은 데이터에 대한 참조를 만들 필요 :</target>
        </trans-unit>
        <trans-unit id="dd17342cb47b948d64f169d73cfeec3f8b3e3f31" translate="yes" xml:space="preserve">
          <source>Grammar</source>
          <target state="translated">Grammar</target>
        </trans-unit>
        <trans-unit id="78e61d853fc7dbe21e195185b06132c0a0b3267c" translate="yes" xml:space="preserve">
          <source>Great! The code read and then printed the contents of the file. But the code has a few flaws. The &lt;code&gt;main&lt;/code&gt; function has multiple responsibilities: generally, functions are clearer and easier to maintain if each function is responsible for only one idea. The other problem is that we&amp;rsquo;re not handling errors as well as we could. The program is still small, so these flaws aren&amp;rsquo;t a big problem, but as the program grows, it will be harder to fix them cleanly. It&amp;rsquo;s good practice to begin refactoring early on when developing a program, because it&amp;rsquo;s much easier to refactor smaller amounts of code. We&amp;rsquo;ll do that next.</source>
          <target state="translated">큰! 코드는 파일의 내용을 읽고 인쇄했습니다. 그러나 코드에는 몇 가지 결함이 있습니다. &lt;code&gt;main&lt;/code&gt; 기능은 여러 책임이있다 : 각 기능은 하나의 아이디어에 대한 책임이 경우 일반적으로, 기능을 유지하기 위해 명확하고 쉽다. 다른 문제는 우리가 할 수있는만큼 오류를 처리하지 않는다는 것입니다. 프로그램은 여전히 ​​작기 때문에 이러한 결함은 큰 문제는 아니지만 프로그램이 커질수록 깨끗하게 수정하기가 더 어려워집니다. 적은 양의 코드를 리팩토링하는 것이 훨씬 쉽기 때문에 프로그램을 개발할 때 리팩토링을 일찍 시작하는 것이 좋습니다. 다음에 해보겠습니다.</target>
        </trans-unit>
        <trans-unit id="24a6854de536fe8272a59608dce7cfe696deeaaa" translate="yes" xml:space="preserve">
          <source>Great! They passed. Now, let&amp;rsquo;s call the new &lt;code&gt;search_case_insensitive&lt;/code&gt; function from the &lt;code&gt;run&lt;/code&gt; function. First, we&amp;rsquo;ll add a configuration option to the &lt;code&gt;Config&lt;/code&gt; struct to switch between case-sensitive and case-insensitive search. Adding this field will cause compiler errors because we aren&amp;rsquo;t initializing this field anywhere yet:</source>
          <target state="translated">큰! 그들은 통과했다. 이제 &lt;code&gt;run&lt;/code&gt; 함수 에서 새로운 &lt;code&gt;search_case_insensitive&lt;/code&gt; 함수를 호출 해 봅시다 . 먼저 &lt;code&gt;Config&lt;/code&gt; 구조체에 구성 옵션을 추가하여 대소 문자를 구분하는 검색과 대소 문자를 구분하지 않는 검색을 전환합니다. 이 필드를 추가하면 아직이 필드를 초기화하지 않기 때문에 컴파일러 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="64d373f5a71955e4f9210539868f04851ae696bb" translate="yes" xml:space="preserve">
          <source>Great! This error tells us we need a &lt;code&gt;ThreadPool&lt;/code&gt; type or module, so we&amp;rsquo;ll build one now. Our &lt;code&gt;ThreadPool&lt;/code&gt; implementation will be independent of the kind of work our web server is doing. So, let&amp;rsquo;s switch the &lt;code&gt;hello&lt;/code&gt; crate from a binary crate to a library crate to hold our &lt;code&gt;ThreadPool&lt;/code&gt; implementation. After we change to a library crate, we could also use the separate thread pool library for any work we want to do using a thread pool, not just for serving web requests.</source>
          <target state="translated">큰! 이 에러는 &lt;code&gt;ThreadPool&lt;/code&gt; 타입이나 모듈이 필요하다는 것을 알려주 므로 지금 빌드 할 것입니다. 우리의 &lt;code&gt;ThreadPool&lt;/code&gt; 구현은 웹 서버가 수행하는 작업의 종류와 무관합니다. 자,이 전환 할 수 &lt;code&gt;hello&lt;/code&gt; 우리 개최 라이브러리 상자에 진 상자에서 상자를 &lt;code&gt;ThreadPool&lt;/code&gt; 구현. 라이브러리 상자로 변경 한 후에는 웹 요청을 처리하기위한 것이 아니라 스레드 풀을 사용하여 수행하려는 모든 작업에 별도의 스레드 풀 라이브러리를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="99b891e6f196f47f49f63f0b20ce223eaba55683" translate="yes" xml:space="preserve">
          <source>Great! This output is much friendlier for our users.</source>
          <target state="translated">큰! 이 결과는 사용자에게 훨씬 친숙합니다.</target>
        </trans-unit>
        <trans-unit id="2929f4d3537f13046a6a6654b391acff14ad5b53" translate="yes" xml:space="preserve">
          <source>Great, the program is working! The values of the arguments we need are being saved into the right variables. Later we&amp;rsquo;ll add some error handling to deal with certain potential erroneous situations, such as when the user provides no arguments; for now, we&amp;rsquo;ll ignore that situation and work on adding file-reading capabilities instead.</source>
          <target state="translated">프로그램이 작동하고 있습니다. 필요한 인수 값이 올바른 변수에 저장됩니다. 나중에 사용자가 인수를 제공하지 않는 경우와 같이 특정 잠재적 오류 상황을 처리하기 위해 오류 처리를 추가 할 것입니다. 지금은 그러한 상황을 무시하고 대신 파일 읽기 기능을 추가하는 작업을합니다.</target>
        </trans-unit>
        <trans-unit id="c5f93da0af9ef56fee44e82925405c317fbf7afc" translate="yes" xml:space="preserve">
          <source>Great, the test fails, exactly as we expected. Let&amp;rsquo;s get the test to pass!</source>
          <target state="translated">테스트가 예상대로 정확하게 실패합니다. 시험에 합격합시다!</target>
        </trans-unit>
        <trans-unit id="599294f23ef04a992bc69ba465066344c3c7cf34" translate="yes" xml:space="preserve">
          <source>Greater than</source>
          <target state="translated">보다 큰</target>
        </trans-unit>
        <trans-unit id="cc21fdb8f5e4e1d5b5c729ed455db20a348682c5" translate="yes" xml:space="preserve">
          <source>Greater than comparison</source>
          <target state="translated">비교보다 큼</target>
        </trans-unit>
        <trans-unit id="a2919540599e9df0beb579ca8d46bdc142657611" translate="yes" xml:space="preserve">
          <source>Greater than or equal to</source>
          <target state="translated">크거나 같음</target>
        </trans-unit>
        <trans-unit id="17e61387621cb5a7a3632ffc26d2a8ab3f16e769" translate="yes" xml:space="preserve">
          <source>Greater than or equal to comparison</source>
          <target state="translated">비교 이상</target>
        </trans-unit>
        <trans-unit id="d667800b5ed7b98aa0dde326047666b10d805fc3" translate="yes" xml:space="preserve">
          <source>Greater-than comparison for two &lt;code&gt;Arc&lt;/code&gt;s.</source>
          <target state="translated">두 &lt;code&gt;Arc&lt;/code&gt; 대한 비교보다 큽니다 .</target>
        </trans-unit>
        <trans-unit id="3f06e7136cc69760b0d1c2aa5adb37088b0a0311" translate="yes" xml:space="preserve">
          <source>Greater-than comparison for two &lt;code&gt;Rc&lt;/code&gt;s.</source>
          <target state="translated">두 &lt;code&gt;Rc&lt;/code&gt; 에 대한 비교보다 큽니다 .</target>
        </trans-unit>
        <trans-unit id="f464c4ed26773e9c5252581a89a104e8de23d490" translate="yes" xml:space="preserve">
          <source>Greek letters &quot;&amp;alpha;&quot; &quot;&amp;beta;&quot; &quot;&amp;gamma;&quot; &quot;&amp;delta;&quot; stand for potentially empty token-tree sequences. (However, the Greek letter &quot;&amp;epsilon;&quot; (epsilon) has a special role in the presentation and does not stand for a token-tree sequence.)</source>
          <target state="translated">그리스 문자 &quot;&amp;alpha;&quot; &quot;&amp;beta;&quot; &quot;&amp;gamma;&quot; &quot;&amp;delta;&quot;는 잠재적으로 비어있는 토큰 트리 시퀀스를 나타냅니다. 그러나 그리스 문자 &quot;&amp;epsilon;&quot;(epsilon)는 프레젠테이션에서 특별한 역할을하며 토큰 트리 시퀀스를 나타내지 않습니다.</target>
        </trans-unit>
        <trans-unit id="90accf7e4de3f988bebb9b0fcc656094cc41c05f" translate="yes" xml:space="preserve">
          <source>Group expression attributes</source>
          <target state="translated">그룹 표현식 속성</target>
        </trans-unit>
        <trans-unit id="ef7a9bb1a692431ae6d8dff02418977a8053e1b7" translate="yes" xml:space="preserve">
          <source>Grouped expressions</source>
          <target state="translated">그룹화 된 표현</target>
        </trans-unit>
        <trans-unit id="13970f54032da4ae14dbff0318664d8c8f7ae9de" translate="yes" xml:space="preserve">
          <source>Grouped patterns</source>
          <target state="translated">그룹화 된 패턴</target>
        </trans-unit>
        <trans-unit id="990b2d14bf2da723821496eca71bc9a4f287e41e" translate="yes" xml:space="preserve">
          <source>Grouping Configuration Values</source>
          <target state="translated">구성 값 그룹화</target>
        </trans-unit>
        <trans-unit id="ad08922b155e0f0ecfa878359b6bdba11de6fcc5" translate="yes" xml:space="preserve">
          <source>Groups items</source>
          <target state="translated">그룹스 항목</target>
        </trans-unit>
        <trans-unit id="1dee13ac09a18c736a85fb7212501ca3f0535655" translate="yes" xml:space="preserve">
          <source>Gt</source>
          <target state="translated">Gt</target>
        </trans-unit>
        <trans-unit id="e72af43a28130c6f52db641d01a37aabf78c282e" translate="yes" xml:space="preserve">
          <source>Guarantees</source>
          <target state="translated">Guarantees</target>
        </trans-unit>
        <trans-unit id="643a27fb6062be0d6499f01fc4bde0f4334880b4" translate="yes" xml:space="preserve">
          <source>Guidance on which license is appropriate for your project is beyond the scope of this book. Many people in the Rust community license their projects in the same way as Rust by using a dual license of &lt;code&gt;MIT OR Apache-2.0&lt;/code&gt;. This practice demonstrates that you can also specify multiple license identifiers separated by &lt;code&gt;OR&lt;/code&gt; to have multiple licenses for your project.</source>
          <target state="translated">프로젝트에 적합한 라이센스에 대한 지침은이 책의 범위를 벗어납니다. Rust 커뮤니티의 많은 사람들은 &lt;code&gt;MIT OR Apache-2.0&lt;/code&gt; 의 이중 라이센스를 사용하여 Rust와 동일한 방식으로 프로젝트 라이센스를 부여합니다 . 이 연습에서는 &lt;code&gt;OR&lt;/code&gt; 로 구분 된 여러 라이센스 식별자를 지정 하여 프로젝트에 대한 여러 라이센스를 가질 수도 있음을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="bf073fae640ded81eeb7a4cee70faff4a623c16c" translate="yes" xml:space="preserve">
          <source>Guide</source>
          <target state="translated">Guide</target>
        </trans-unit>
        <trans-unit id="5662999f81a9d63d43963dff643c8f2e0db48c56" translate="yes" xml:space="preserve">
          <source>Guidelines for Error Handling</source>
          <target state="translated">오류 처리 지침</target>
        </trans-unit>
        <trans-unit id="0b19d1e1b8a5918571f9c9d135638b9f04547d8f" translate="yes" xml:space="preserve">
          <source>HANDLE</source>
          <target state="translated">HANDLE</target>
        </trans-unit>
        <trans-unit id="1a486ce8f36726233061ec65b3f6bda493fd48c9" translate="yes" xml:space="preserve">
          <source>HEX_DIGIT : [&lt;code&gt;0&lt;/code&gt;-&lt;code&gt;9&lt;/code&gt;&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;f&lt;/code&gt;&lt;code&gt;A&lt;/code&gt;-&lt;code&gt;F&lt;/code&gt;]</source>
          <target state="translated">HEX_DIGIT : &lt;code&gt;0&lt;/code&gt; - &lt;code&gt;9&lt;/code&gt; - &lt;code&gt;f&lt;/code&gt; - &lt;code&gt;F&lt;/code&gt; ] &lt;code&gt;a&lt;/code&gt; &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e195a9555456bea0e92fe340c3ae06ff639810c6" translate="yes" xml:space="preserve">
          <source>HEX_DIGIT&lt;sup&gt;1..6&lt;/sup&gt;</source>
          <target state="translated">HEX_DIGIT&lt;sup&gt;1..6&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5f9c36747e4699e63511061195cedb992801b9d3" translate="yes" xml:space="preserve">
          <source>HEX_LITERAL :</source>
          <target state="translated">HEX_LITERAL :</target>
        </trans-unit>
        <trans-unit id="85b770e7ec266276f5de99706626234eb555c7b0" translate="yes" xml:space="preserve">
          <source>HTTP is a text-based protocol, and a request takes this format:</source>
          <target state="translated">HTTP는 텍스트 기반 프로토콜이며 요청은 다음 형식을 취합니다.</target>
        </trans-unit>
        <trans-unit id="3c47a723a85c131d97bf2d4bd392d2947fe77f70" translate="yes" xml:space="preserve">
          <source>Had &lt;code&gt;path&lt;/code&gt; contained invalid unicode, the &lt;code&gt;to_string_lossy&lt;/code&gt; call might have returned &lt;code&gt;&quot;fo�.txt&quot;&lt;/code&gt;.</source>
          <target state="translated">했다 &lt;code&gt;path&lt;/code&gt; , 유효하지 않은 유니 코드 포함 &lt;code&gt;to_string_lossy&lt;/code&gt; 의 호출이 반환 수도 &lt;code&gt;&quot;fo�.txt&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ee4aa46e82881f4a75375987b71c3131634f94f" translate="yes" xml:space="preserve">
          <source>Handling Errors Returned from &lt;code id=&quot;handling-errors-returned-from-run-in-main&quot;&gt;run&lt;/code&gt; in &lt;code&gt;main&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;main&lt;/code&gt; 에서 &lt;code id=&quot;handling-errors-returned-from-run-in-main&quot;&gt;run&lt;/code&gt; 에서 리턴 된 처리 오류</target>
        </trans-unit>
        <trans-unit id="187689d6fbeb450bd6ea4e652dae8dbfd0f10e3e" translate="yes" xml:space="preserve">
          <source>Handling I/O</source>
          <target state="translated">I / O 처리</target>
        </trans-unit>
        <trans-unit id="f85b58414971efcc7eee439597523a8f745698cd" translate="yes" xml:space="preserve">
          <source>Handling Invalid Input</source>
          <target state="translated">유효하지 않은 입력 처리</target>
        </trans-unit>
        <trans-unit id="99ae89ce9129c070f0e68c272cb53e5ebe7623fe" translate="yes" xml:space="preserve">
          <source>Handling Multiple Conditions with &lt;code id=&quot;handling-multiple-conditions-with-else-if&quot;&gt;else if&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;handling-multiple-conditions-with-else-if&quot;&gt;else if&lt;/code&gt; 여러 조건 처리</target>
        </trans-unit>
        <trans-unit id="59aadebe3071fa59f50f2105cef14ad03fb21914" translate="yes" xml:space="preserve">
          <source>Handling Potential Failure with the &lt;code id=&quot;handling-potential-failure-with-the-result-type&quot;&gt;Result&lt;/code&gt; Type</source>
          <target state="translated">&lt;code id=&quot;handling-potential-failure-with-the-result-type&quot;&gt;Result&lt;/code&gt; 유형으로 잠재적 실패 처리</target>
        </trans-unit>
        <trans-unit id="90b8d168f939ff8e48ed694781964a3efae61546" translate="yes" xml:space="preserve">
          <source>Handling concurrent programming safely and efficiently is another of Rust&amp;rsquo;s major goals. &lt;em&gt;Concurrent programming&lt;/em&gt;, where different parts of a program execute independently, and &lt;em&gt;parallel programming&lt;/em&gt;, where different parts of a program execute at the same time, are becoming increasingly important as more computers take advantage of their multiple processors. Historically, programming in these contexts has been difficult and error prone: Rust hopes to change that.</source>
          <target state="translated">동시 프로그래밍을 안전하고 효율적으로 처리하는 것은 Rust의 주요 목표 중 하나입니다. &lt;em&gt;프로그램의&lt;/em&gt; 다른 부분이 독립적으로 실행되는 &lt;em&gt;동시 프로그래밍&lt;/em&gt; 과 프로그램의 다른 부분이 동시에 실행 되는 &lt;em&gt;병렬 프로그래밍&lt;/em&gt; 은 더 많은 컴퓨터가 여러 프로세서를 활용함에 따라 점점 더 중요 해지고 있습니다. 역사적으로 이러한 맥락에서 프로그래밍하는 것은 어렵고 오류가 발생하기 쉽습니다. Rust는이를 변경하기를 희망합니다.</target>
        </trans-unit>
        <trans-unit id="8f7b16e3844bb9bbaa86ba42b5bf793b3b5747f5" translate="yes" xml:space="preserve">
          <source>Handling errors (&lt;a href=&quot;ch09-00-error-handling&quot;&gt;Chapter 9&lt;/a&gt;)</source>
          <target state="translated">에러 처리 ( &lt;a href=&quot;ch09-00-error-handling&quot;&gt;9 장&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="a8a516b582d8ee827caa06b852f0927dd7ea1aa9" translate="yes" xml:space="preserve">
          <source>Handling the error if &lt;code&gt;run&lt;/code&gt; returns an error</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; 에서 오류를 반환하는 경우 오류 처리</target>
        </trans-unit>
        <trans-unit id="605c9af0dc3550ddfefeee4d42138a7f1adc2bd1" translate="yes" xml:space="preserve">
          <source>Has the effects of both &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; together: For loads it uses &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; ordering. For stores it uses the &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; ordering.</source>
          <target state="translated">&lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; 의 효과가 함께 있음 :로드의 경우 &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 순서를 사용합니다 . 상점의 경우 &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; 순서를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="72f36c92a5a7396e8365dbdfe793e5eef4ad9431" translate="yes" xml:space="preserve">
          <source>Has the effects of both &lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://llvm.org/docs/Atomics.html#release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; together: For loads it uses &lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; ordering. For stores it uses the &lt;a href=&quot;https://llvm.org/docs/Atomics.html#release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; ordering.</source>
          <target state="translated">&lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;https://llvm.org/docs/Atomics.html#release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; 가&lt;/a&gt; 함께 효과가 있습니다.로드의 경우 &lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 주문을 사용합니다 . 상점의 경우 &lt;a href=&quot;https://llvm.org/docs/Atomics.html#release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; 주문을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="873507a022b58de26a88deae87268cbd8d6af5b1" translate="yes" xml:space="preserve">
          <source>Hash</source>
          <target state="translated">Hash</target>
        </trans-unit>
        <trans-unit id="d16b2d08d75092ccdbc53063c23e2c3fe71d7f34" translate="yes" xml:space="preserve">
          <source>Hash Maps and Ownership</source>
          <target state="translated">해시 맵 및 소유권</target>
        </trans-unit>
        <trans-unit id="49d09ebb7291bff93c80ac3f381f55fe8a3c4cbf" translate="yes" xml:space="preserve">
          <source>Hash a raw pointer.</source>
          <target state="translated">원시 포인터를 해시하십시오.</target>
        </trans-unit>
        <trans-unit id="6c5bfe7d7f5d3cec7864d666ab67d3faebb741c0" translate="yes" xml:space="preserve">
          <source>Hash maps are useful when you want to look up data not by using an index, as you can with vectors, but by using a key that can be of any type. For example, in a game, you could keep track of each team&amp;rsquo;s score in a hash map in which each key is a team&amp;rsquo;s name and the values are each team&amp;rsquo;s score. Given a team name, you can retrieve its score.</source>
          <target state="translated">해시 맵은 벡터를 사용할 때처럼 인덱스를 사용하지 않고 모든 유형의 키를 사용하여 데이터를 조회 할 때 유용합니다. 예를 들어 게임에서 각 키는 팀 이름이고 값은 각 팀의 점수 인 해시 맵에서 각 팀의 점수를 추적 할 수 있습니다. 팀 이름이 주어지면 점수를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f26fb9fba1361d959b70bbd8e0907090c8a67651" translate="yes" xml:space="preserve">
          <source>Hash memoization</source>
          <target state="translated">해시 메모</target>
        </trans-unit>
        <trans-unit id="1ca569e43628039695db4d117d37cb0433c51032" translate="yes" xml:space="preserve">
          <source>Hash::hash</source>
          <target state="translated">Hash::hash</target>
        </trans-unit>
        <trans-unit id="bac71fb916a479ac2558a2194819bf301931ca8b" translate="yes" xml:space="preserve">
          <source>Hash::hash_slice</source>
          <target state="translated">Hash::hash_slice</target>
        </trans-unit>
        <trans-unit id="ba62d7b8d0b157f714c6a6132554b38789c6ada5" translate="yes" xml:space="preserve">
          <source>HashMap</source>
          <target state="translated">HashMap</target>
        </trans-unit>
        <trans-unit id="fb7d8a23eadd1e4ece9d9a20a984c6c31289cb8b" translate="yes" xml:space="preserve">
          <source>HashMap::borrow</source>
          <target state="translated">HashMap::borrow</target>
        </trans-unit>
        <trans-unit id="610c174a39c8908fe163a07919237940fc37c1ca" translate="yes" xml:space="preserve">
          <source>HashMap::borrow_mut</source>
          <target state="translated">HashMap::borrow_mut</target>
        </trans-unit>
        <trans-unit id="5b073a19c1d948d2ff7ea181c3e6faa47ac950b7" translate="yes" xml:space="preserve">
          <source>HashMap::capacity</source>
          <target state="translated">HashMap::capacity</target>
        </trans-unit>
        <trans-unit id="290ef182063e668dbc9d6f81f0f99bd696eaa3ad" translate="yes" xml:space="preserve">
          <source>HashMap::clear</source>
          <target state="translated">HashMap::clear</target>
        </trans-unit>
        <trans-unit id="4504d7762629b3f09d106b8b2c49316387f83111" translate="yes" xml:space="preserve">
          <source>HashMap::clone</source>
          <target state="translated">HashMap::clone</target>
        </trans-unit>
        <trans-unit id="755ecc8e2fe0d53bf8d40f09d15dc41f5c72dee3" translate="yes" xml:space="preserve">
          <source>HashMap::clone_from</source>
          <target state="translated">HashMap::clone_from</target>
        </trans-unit>
        <trans-unit id="18149fd5a2f0ddb0a754ee5b20ae060122824af4" translate="yes" xml:space="preserve">
          <source>HashMap::clone_into</source>
          <target state="translated">HashMap::clone_into</target>
        </trans-unit>
        <trans-unit id="c981dd589a66a9541ad1bd942f956a943a21c776" translate="yes" xml:space="preserve">
          <source>HashMap::contains_key</source>
          <target state="translated">HashMap::contains_key</target>
        </trans-unit>
        <trans-unit id="6790c064706283f72985a00fd5d63757494362ee" translate="yes" xml:space="preserve">
          <source>HashMap::default</source>
          <target state="translated">HashMap::default</target>
        </trans-unit>
        <trans-unit id="ef89e29aa59c76930b39d07bb7c27f4f62ca4bc9" translate="yes" xml:space="preserve">
          <source>HashMap::drain</source>
          <target state="translated">HashMap::drain</target>
        </trans-unit>
        <trans-unit id="5c70bb5f39da25e4a3243cd372f9722cdd0aaa06" translate="yes" xml:space="preserve">
          <source>HashMap::entry</source>
          <target state="translated">HashMap::entry</target>
        </trans-unit>
        <trans-unit id="16580b886dde904eb2189a50aaa2ec8e66754a76" translate="yes" xml:space="preserve">
          <source>HashMap::eq</source>
          <target state="translated">HashMap::eq</target>
        </trans-unit>
        <trans-unit id="006972122bed4c52275751aaa6b1a76aa26a72f6" translate="yes" xml:space="preserve">
          <source>HashMap::extend</source>
          <target state="translated">HashMap::extend</target>
        </trans-unit>
        <trans-unit id="eef27e5aeaaee7ca97ef32c4174c3b7aefbfc638" translate="yes" xml:space="preserve">
          <source>HashMap::fmt</source>
          <target state="translated">HashMap::fmt</target>
        </trans-unit>
        <trans-unit id="2bac685119eec98678bcc3e2df09e34b76b251fb" translate="yes" xml:space="preserve">
          <source>HashMap::from</source>
          <target state="translated">HashMap::from</target>
        </trans-unit>
        <trans-unit id="23702b4af8c6608c05d1fc72b700af47889b23e4" translate="yes" xml:space="preserve">
          <source>HashMap::from_iter</source>
          <target state="translated">HashMap::from_iter</target>
        </trans-unit>
        <trans-unit id="688fd04b9fb0128d305e248d2f3d8f8222392c9c" translate="yes" xml:space="preserve">
          <source>HashMap::get</source>
          <target state="translated">HashMap::get</target>
        </trans-unit>
        <trans-unit id="ecd394b5e97d505b5180c88396d32eb04f7a2ef5" translate="yes" xml:space="preserve">
          <source>HashMap::get_key_value</source>
          <target state="translated">HashMap::get_key_value</target>
        </trans-unit>
        <trans-unit id="59fd726634d31c7b61261668c05f7485bf9decb1" translate="yes" xml:space="preserve">
          <source>HashMap::get_mut</source>
          <target state="translated">HashMap::get_mut</target>
        </trans-unit>
        <trans-unit id="9e2f5e352b69c23e1f8634441216dbbc589410a2" translate="yes" xml:space="preserve">
          <source>HashMap::hasher</source>
          <target state="translated">HashMap::hasher</target>
        </trans-unit>
        <trans-unit id="977407424016d1150ed5a54f71aa720d8b5fc1e0" translate="yes" xml:space="preserve">
          <source>HashMap::index</source>
          <target state="translated">HashMap::index</target>
        </trans-unit>
        <trans-unit id="575b9b99b8b6536e98f82916772ec179324759de" translate="yes" xml:space="preserve">
          <source>HashMap::insert</source>
          <target state="translated">HashMap::insert</target>
        </trans-unit>
        <trans-unit id="4241974ff3713d57ec86ed4fb2960fb964b4c28f" translate="yes" xml:space="preserve">
          <source>HashMap::into</source>
          <target state="translated">HashMap::into</target>
        </trans-unit>
        <trans-unit id="2ee397e85e03d2df5163ed8c1f36f63a8275c934" translate="yes" xml:space="preserve">
          <source>HashMap::into_iter</source>
          <target state="translated">HashMap::into_iter</target>
        </trans-unit>
        <trans-unit id="a649d7141d86759b290a9b727d47ad161b114361" translate="yes" xml:space="preserve">
          <source>HashMap::is_empty</source>
          <target state="translated">HashMap::is_empty</target>
        </trans-unit>
        <trans-unit id="cfdbb20825a41950e4f6625ab41ffc0a12e6cfd4" translate="yes" xml:space="preserve">
          <source>HashMap::iter</source>
          <target state="translated">HashMap::iter</target>
        </trans-unit>
        <trans-unit id="2bfca7b0b17c04d487077c012bec3c640635d95c" translate="yes" xml:space="preserve">
          <source>HashMap::iter_mut</source>
          <target state="translated">HashMap::iter_mut</target>
        </trans-unit>
        <trans-unit id="15748fe38a254ba57dde931f14941b25230915de" translate="yes" xml:space="preserve">
          <source>HashMap::keys</source>
          <target state="translated">HashMap::keys</target>
        </trans-unit>
        <trans-unit id="013a2db0fc0510df2be8bb9a81336355dd6c81f5" translate="yes" xml:space="preserve">
          <source>HashMap::len</source>
          <target state="translated">HashMap::len</target>
        </trans-unit>
        <trans-unit id="bbd14da0450a45b2de193fcab5c00bb0eb5903d6" translate="yes" xml:space="preserve">
          <source>HashMap::ne</source>
          <target state="translated">HashMap::ne</target>
        </trans-unit>
        <trans-unit id="7a43b41cd29931fa0443de6420eab17418a5775e" translate="yes" xml:space="preserve">
          <source>HashMap::new</source>
          <target state="translated">HashMap::new</target>
        </trans-unit>
        <trans-unit id="292e274cb26beafe87f9986cd7a69d6e80f0d70e" translate="yes" xml:space="preserve">
          <source>HashMap::raw_entry</source>
          <target state="translated">HashMap::raw_entry</target>
        </trans-unit>
        <trans-unit id="ddac1348f5646998be5c764f10f7f59d986ae24a" translate="yes" xml:space="preserve">
          <source>HashMap::raw_entry_mut</source>
          <target state="translated">HashMap::raw_entry_mut</target>
        </trans-unit>
        <trans-unit id="eb7e68ea1cad35b4a180ddda2294c0954904ff9c" translate="yes" xml:space="preserve">
          <source>HashMap::remove</source>
          <target state="translated">HashMap::remove</target>
        </trans-unit>
        <trans-unit id="daa065a9f2946c9de97f049237fe61d1096fd3ad" translate="yes" xml:space="preserve">
          <source>HashMap::remove_entry</source>
          <target state="translated">HashMap::remove_entry</target>
        </trans-unit>
        <trans-unit id="0121bfc051e62887774fc3f9ec592514d686885b" translate="yes" xml:space="preserve">
          <source>HashMap::reserve</source>
          <target state="translated">HashMap::reserve</target>
        </trans-unit>
        <trans-unit id="88a2076f3660ecd79e0adb0243f0e9d4a8862721" translate="yes" xml:space="preserve">
          <source>HashMap::retain</source>
          <target state="translated">HashMap::retain</target>
        </trans-unit>
        <trans-unit id="f4991ea8c7797b408f7805334922bf7e0c8d10d6" translate="yes" xml:space="preserve">
          <source>HashMap::shrink_to</source>
          <target state="translated">HashMap::shrink_to</target>
        </trans-unit>
        <trans-unit id="dc8f377e69db6a1e9ed141ae6bf011880bd42c53" translate="yes" xml:space="preserve">
          <source>HashMap::shrink_to_fit</source>
          <target state="translated">HashMap::shrink_to_fit</target>
        </trans-unit>
        <trans-unit id="bab5c2ac135dfe90b9b32c652153883ceeee3b33" translate="yes" xml:space="preserve">
          <source>HashMap::to_owned</source>
          <target state="translated">HashMap::to_owned</target>
        </trans-unit>
        <trans-unit id="391acc19f610e927b497bb4e11b352a7b2af949e" translate="yes" xml:space="preserve">
          <source>HashMap::try_from</source>
          <target state="translated">HashMap::try_from</target>
        </trans-unit>
        <trans-unit id="2893c51bf9c281d2ca7aba047803684d9a1aa860" translate="yes" xml:space="preserve">
          <source>HashMap::try_into</source>
          <target state="translated">HashMap::try_into</target>
        </trans-unit>
        <trans-unit id="9e7015c3cc0d5bc1003d09ff24337d2b0ad55c7b" translate="yes" xml:space="preserve">
          <source>HashMap::try_reserve</source>
          <target state="translated">HashMap::try_reserve</target>
        </trans-unit>
        <trans-unit id="b2ebec04fba53bc16fb11b0073bb6cc66af50890" translate="yes" xml:space="preserve">
          <source>HashMap::type_id</source>
          <target state="translated">HashMap::type_id</target>
        </trans-unit>
        <trans-unit id="d17a786e030134db4f1882f47a85dce856cb6c49" translate="yes" xml:space="preserve">
          <source>HashMap::values</source>
          <target state="translated">HashMap::values</target>
        </trans-unit>
        <trans-unit id="162e585c9055d46d3b3067b924bb60d67e948304" translate="yes" xml:space="preserve">
          <source>HashMap::values_mut</source>
          <target state="translated">HashMap::values_mut</target>
        </trans-unit>
        <trans-unit id="01bde569a6ca247f70b925283ac4eabf1fae164b" translate="yes" xml:space="preserve">
          <source>HashMap::with_capacity</source>
          <target state="translated">HashMap::with_capacity</target>
        </trans-unit>
        <trans-unit id="c95ee5e43e53e6378ec649a9c2e69ab43598f8fb" translate="yes" xml:space="preserve">
          <source>HashMap::with_capacity_and_hasher</source>
          <target state="translated">HashMap::with_capacity_and_hasher</target>
        </trans-unit>
        <trans-unit id="e7c4071d4f77cdf1820942e0c1ab3de0a91ed2cf" translate="yes" xml:space="preserve">
          <source>HashMap::with_hasher</source>
          <target state="translated">HashMap::with_hasher</target>
        </trans-unit>
        <trans-unit id="cac17f9bdb6febebe0052a72f2ab8a6828d20944" translate="yes" xml:space="preserve">
          <source>HashSet</source>
          <target state="translated">HashSet</target>
        </trans-unit>
        <trans-unit id="b68646e63dfce36d83be9cbaa54a303ef6a007af" translate="yes" xml:space="preserve">
          <source>HashSet::bitand</source>
          <target state="translated">HashSet::bitand</target>
        </trans-unit>
        <trans-unit id="1ab81639812d7d4b62dc39b7419600230fdcf25f" translate="yes" xml:space="preserve">
          <source>HashSet::bitor</source>
          <target state="translated">HashSet::bitor</target>
        </trans-unit>
        <trans-unit id="8075cc2581f90ca9a8938fc5f82b21b6e3d28edf" translate="yes" xml:space="preserve">
          <source>HashSet::bitxor</source>
          <target state="translated">HashSet::bitxor</target>
        </trans-unit>
        <trans-unit id="c77b68f5068bcecde6e8ffd8572dfb041513399a" translate="yes" xml:space="preserve">
          <source>HashSet::borrow</source>
          <target state="translated">HashSet::borrow</target>
        </trans-unit>
        <trans-unit id="03d0b56c31db1f8ba8c12e20646074ec753d52c9" translate="yes" xml:space="preserve">
          <source>HashSet::borrow_mut</source>
          <target state="translated">HashSet::borrow_mut</target>
        </trans-unit>
        <trans-unit id="bdd5342708fbc173156c0ad0e7ccdcf72b87bbec" translate="yes" xml:space="preserve">
          <source>HashSet::capacity</source>
          <target state="translated">HashSet::capacity</target>
        </trans-unit>
        <trans-unit id="b496a7fc22db5dfee5a71eb5501bd54af27226af" translate="yes" xml:space="preserve">
          <source>HashSet::clear</source>
          <target state="translated">HashSet::clear</target>
        </trans-unit>
        <trans-unit id="f6f7e84776c0a1492c95ca329cccd559dae22239" translate="yes" xml:space="preserve">
          <source>HashSet::clone</source>
          <target state="translated">HashSet::clone</target>
        </trans-unit>
        <trans-unit id="ad872e535653208fd311ddac1851f60e92c27461" translate="yes" xml:space="preserve">
          <source>HashSet::clone_from</source>
          <target state="translated">HashSet::clone_from</target>
        </trans-unit>
        <trans-unit id="30071df27bb602cc36f2524cd6272f86cf175d82" translate="yes" xml:space="preserve">
          <source>HashSet::clone_into</source>
          <target state="translated">HashSet::clone_into</target>
        </trans-unit>
        <trans-unit id="e9929a76352b9c6c4517057784d174ca502e4659" translate="yes" xml:space="preserve">
          <source>HashSet::contains</source>
          <target state="translated">HashSet::contains</target>
        </trans-unit>
        <trans-unit id="ee9499c5d925a80b927374f5fc18c8cf7acba286" translate="yes" xml:space="preserve">
          <source>HashSet::default</source>
          <target state="translated">HashSet::default</target>
        </trans-unit>
        <trans-unit id="c5666651d6d13e045665faaee91da5ee35aefa99" translate="yes" xml:space="preserve">
          <source>HashSet::difference</source>
          <target state="translated">HashSet::difference</target>
        </trans-unit>
        <trans-unit id="559bf337908631f9dc2cd3ab1c34c4b7158b1609" translate="yes" xml:space="preserve">
          <source>HashSet::drain</source>
          <target state="translated">HashSet::drain</target>
        </trans-unit>
        <trans-unit id="f25e9846b65f287b930b9d456cbbec8f01e240e9" translate="yes" xml:space="preserve">
          <source>HashSet::eq</source>
          <target state="translated">HashSet::eq</target>
        </trans-unit>
        <trans-unit id="6a91f6923c3310862ee3596940ed5b097a1bf087" translate="yes" xml:space="preserve">
          <source>HashSet::extend</source>
          <target state="translated">HashSet::extend</target>
        </trans-unit>
        <trans-unit id="8be48241f0d314ab0acacea29d3d926070bb5fa9" translate="yes" xml:space="preserve">
          <source>HashSet::fmt</source>
          <target state="translated">HashSet::fmt</target>
        </trans-unit>
        <trans-unit id="b4f60277034657d60f3728ccd3956ff96b1819e2" translate="yes" xml:space="preserve">
          <source>HashSet::from</source>
          <target state="translated">HashSet::from</target>
        </trans-unit>
        <trans-unit id="60f387d38899e1b57c8d30e798c352963e26a097" translate="yes" xml:space="preserve">
          <source>HashSet::from_iter</source>
          <target state="translated">HashSet::from_iter</target>
        </trans-unit>
        <trans-unit id="33cae8d46ad9832e17073c4a9f1abb51a6504d81" translate="yes" xml:space="preserve">
          <source>HashSet::get</source>
          <target state="translated">HashSet::get</target>
        </trans-unit>
        <trans-unit id="6c7ba6a45c151f970088dcc70a1b7618e6395baf" translate="yes" xml:space="preserve">
          <source>HashSet::get_or_insert</source>
          <target state="translated">HashSet::get_or_insert</target>
        </trans-unit>
        <trans-unit id="3c9bf791b1bc89ff50ed8e094f3d77efdc799512" translate="yes" xml:space="preserve">
          <source>HashSet::get_or_insert_with</source>
          <target state="translated">HashSet::get_or_insert_with</target>
        </trans-unit>
        <trans-unit id="01c1744d870244b7145beb071040d269b906cc15" translate="yes" xml:space="preserve">
          <source>HashSet::hasher</source>
          <target state="translated">HashSet::hasher</target>
        </trans-unit>
        <trans-unit id="6f9a670d4aa69b73fdbaf199b1f0dd8253423bff" translate="yes" xml:space="preserve">
          <source>HashSet::insert</source>
          <target state="translated">HashSet::insert</target>
        </trans-unit>
        <trans-unit id="5c5bf765bc94406fc16ab265fee5caf8d4d6d147" translate="yes" xml:space="preserve">
          <source>HashSet::intersection</source>
          <target state="translated">HashSet::intersection</target>
        </trans-unit>
        <trans-unit id="1847c872f1c798ce2ed7fda1f927b3db87be02ae" translate="yes" xml:space="preserve">
          <source>HashSet::into</source>
          <target state="translated">HashSet::into</target>
        </trans-unit>
        <trans-unit id="06dc65fe61329213ae7394dadf80b120758e58bf" translate="yes" xml:space="preserve">
          <source>HashSet::into_iter</source>
          <target state="translated">HashSet::into_iter</target>
        </trans-unit>
        <trans-unit id="67c6eb738c50bfb089cc9e9dd3c556b76c5e5a19" translate="yes" xml:space="preserve">
          <source>HashSet::is_disjoint</source>
          <target state="translated">HashSet::is_disjoint</target>
        </trans-unit>
        <trans-unit id="9463f6acefaba610600eb7b086516e06a56e7415" translate="yes" xml:space="preserve">
          <source>HashSet::is_empty</source>
          <target state="translated">HashSet::is_empty</target>
        </trans-unit>
        <trans-unit id="3494ecfcdfcc0fd49b4716ada245492c590484c8" translate="yes" xml:space="preserve">
          <source>HashSet::is_subset</source>
          <target state="translated">HashSet::is_subset</target>
        </trans-unit>
        <trans-unit id="5a5bed7c64ac7bd90ff2fd3978bbf37d738addfa" translate="yes" xml:space="preserve">
          <source>HashSet::is_superset</source>
          <target state="translated">HashSet::is_superset</target>
        </trans-unit>
        <trans-unit id="d4aa44a96215a84918fccfb358fa46f4343aa9e3" translate="yes" xml:space="preserve">
          <source>HashSet::iter</source>
          <target state="translated">HashSet::iter</target>
        </trans-unit>
        <trans-unit id="e772fc3259c95bf6f1d149e4fe5b58f7beb84957" translate="yes" xml:space="preserve">
          <source>HashSet::len</source>
          <target state="translated">HashSet::len</target>
        </trans-unit>
        <trans-unit id="9d950bd82fcd2e87760e296232658decf6487907" translate="yes" xml:space="preserve">
          <source>HashSet::ne</source>
          <target state="translated">HashSet::ne</target>
        </trans-unit>
        <trans-unit id="faff6aa961e961cb5d0e5be8b0c1765f5a91c089" translate="yes" xml:space="preserve">
          <source>HashSet::new</source>
          <target state="translated">HashSet::new</target>
        </trans-unit>
        <trans-unit id="ab12b0529a6e1a5dea72839456e2d81f89fbb648" translate="yes" xml:space="preserve">
          <source>HashSet::remove</source>
          <target state="translated">HashSet::remove</target>
        </trans-unit>
        <trans-unit id="11dfa3918fa59c9dba2c405236023985e68113d1" translate="yes" xml:space="preserve">
          <source>HashSet::replace</source>
          <target state="translated">HashSet::replace</target>
        </trans-unit>
        <trans-unit id="f3111bd9bb9284dd24b994e9c70b335390828fac" translate="yes" xml:space="preserve">
          <source>HashSet::reserve</source>
          <target state="translated">HashSet::reserve</target>
        </trans-unit>
        <trans-unit id="ce64d74e2bc22c15cfa1eaba2edb312838993eda" translate="yes" xml:space="preserve">
          <source>HashSet::retain</source>
          <target state="translated">HashSet::retain</target>
        </trans-unit>
        <trans-unit id="029a9cdc9ae9ee65ed460a0ec02d113e093964b2" translate="yes" xml:space="preserve">
          <source>HashSet::shrink_to</source>
          <target state="translated">HashSet::shrink_to</target>
        </trans-unit>
        <trans-unit id="3aba29e196a563c0a26e6c5d67e4388b6713cebf" translate="yes" xml:space="preserve">
          <source>HashSet::shrink_to_fit</source>
          <target state="translated">HashSet::shrink_to_fit</target>
        </trans-unit>
        <trans-unit id="137d5ee967421f3423450e1436080f3b38640647" translate="yes" xml:space="preserve">
          <source>HashSet::sub</source>
          <target state="translated">HashSet::sub</target>
        </trans-unit>
        <trans-unit id="39cf21ce1dee41e9b1e7cb0c554d9ccf20702455" translate="yes" xml:space="preserve">
          <source>HashSet::symmetric_difference</source>
          <target state="translated">HashSet::symmetric_difference</target>
        </trans-unit>
        <trans-unit id="b78b12fa7d65d7ed557c2e12c743c86bcbc88775" translate="yes" xml:space="preserve">
          <source>HashSet::take</source>
          <target state="translated">HashSet::take</target>
        </trans-unit>
        <trans-unit id="93138236c5609c2dee4b1e913e9fcc9e3e9fdf44" translate="yes" xml:space="preserve">
          <source>HashSet::to_owned</source>
          <target state="translated">HashSet::to_owned</target>
        </trans-unit>
        <trans-unit id="96f13425b733a2e08673b87dffc523aee111609b" translate="yes" xml:space="preserve">
          <source>HashSet::try_from</source>
          <target state="translated">HashSet::try_from</target>
        </trans-unit>
        <trans-unit id="85d076b1561829592d046d057f0210cf9a4ff355" translate="yes" xml:space="preserve">
          <source>HashSet::try_into</source>
          <target state="translated">HashSet::try_into</target>
        </trans-unit>
        <trans-unit id="a9c0b3c82611415705e046ee581719e01be9eecc" translate="yes" xml:space="preserve">
          <source>HashSet::try_reserve</source>
          <target state="translated">HashSet::try_reserve</target>
        </trans-unit>
        <trans-unit id="105a18b817256119cb17af97da897c56eba29e40" translate="yes" xml:space="preserve">
          <source>HashSet::type_id</source>
          <target state="translated">HashSet::type_id</target>
        </trans-unit>
        <trans-unit id="685fa7682d344986ee2f2ae55086a7531364bc35" translate="yes" xml:space="preserve">
          <source>HashSet::union</source>
          <target state="translated">HashSet::union</target>
        </trans-unit>
        <trans-unit id="c3204331b41dcd6ae424437b8e36081a10f0c506" translate="yes" xml:space="preserve">
          <source>HashSet::with_capacity</source>
          <target state="translated">HashSet::with_capacity</target>
        </trans-unit>
        <trans-unit id="6bb25440ddefbed0a8db0d432f23f0ca38d089d8" translate="yes" xml:space="preserve">
          <source>HashSet::with_capacity_and_hasher</source>
          <target state="translated">HashSet::with_capacity_and_hasher</target>
        </trans-unit>
        <trans-unit id="550d3800dfa4eb2bdb493d733dabf4b1ffabf984" translate="yes" xml:space="preserve">
          <source>HashSet::with_hasher</source>
          <target state="translated">HashSet::with_hasher</target>
        </trans-unit>
        <trans-unit id="fc0f48d98ae0d2092a247d5cee9ccdb867d1d001" translate="yes" xml:space="preserve">
          <source>Hasher</source>
          <target state="translated">Hasher</target>
        </trans-unit>
        <trans-unit id="e9a193bcbf138ba881c64b5b1a29eba015da6009" translate="yes" xml:space="preserve">
          <source>Hasher::finish</source>
          <target state="translated">Hasher::finish</target>
        </trans-unit>
        <trans-unit id="2b1c79f133b4285e8cbe820d3b0dbaa110a81b6c" translate="yes" xml:space="preserve">
          <source>Hasher::write</source>
          <target state="translated">Hasher::write</target>
        </trans-unit>
        <trans-unit id="aea45433ea07ad24495217b0093e410e9770ebb6" translate="yes" xml:space="preserve">
          <source>Hasher::write_i128</source>
          <target state="translated">Hasher::write_i128</target>
        </trans-unit>
        <trans-unit id="f97466e2fd5ec3a618a0b518a5dd39118b1b15e0" translate="yes" xml:space="preserve">
          <source>Hasher::write_i16</source>
          <target state="translated">Hasher::write_i16</target>
        </trans-unit>
        <trans-unit id="10de8ddcd6d092ee0ae793c2f146d59545948d06" translate="yes" xml:space="preserve">
          <source>Hasher::write_i32</source>
          <target state="translated">Hasher::write_i32</target>
        </trans-unit>
        <trans-unit id="fa2e80124215b4059a687baa99ddde7e8adc899d" translate="yes" xml:space="preserve">
          <source>Hasher::write_i64</source>
          <target state="translated">Hasher::write_i64</target>
        </trans-unit>
        <trans-unit id="fe5b0947dfe31def847c17d1e11ec3d408a4124c" translate="yes" xml:space="preserve">
          <source>Hasher::write_i8</source>
          <target state="translated">Hasher::write_i8</target>
        </trans-unit>
        <trans-unit id="53164f3f3dd297fb85292187a041f87e1d16695e" translate="yes" xml:space="preserve">
          <source>Hasher::write_isize</source>
          <target state="translated">Hasher::write_isize</target>
        </trans-unit>
        <trans-unit id="e477fb5169da10ce163639bd122b949d5314f471" translate="yes" xml:space="preserve">
          <source>Hasher::write_u128</source>
          <target state="translated">Hasher::write_u128</target>
        </trans-unit>
        <trans-unit id="05c5de3720de3f253e1541c3b244cb58450b4be2" translate="yes" xml:space="preserve">
          <source>Hasher::write_u16</source>
          <target state="translated">Hasher::write_u16</target>
        </trans-unit>
        <trans-unit id="1cf90d27fda48a3335fb25c8aa60e25c50bc3767" translate="yes" xml:space="preserve">
          <source>Hasher::write_u32</source>
          <target state="translated">Hasher::write_u32</target>
        </trans-unit>
        <trans-unit id="420bdb25cc27d8fac4c5399c4359ccee510eacbd" translate="yes" xml:space="preserve">
          <source>Hasher::write_u64</source>
          <target state="translated">Hasher::write_u64</target>
        </trans-unit>
        <trans-unit id="82a921392efa7001c790d5b80024db7be281f9cb" translate="yes" xml:space="preserve">
          <source>Hasher::write_u8</source>
          <target state="translated">Hasher::write_u8</target>
        </trans-unit>
        <trans-unit id="d1a0408c2f79ae7c9f420468772c41716a5e1a04" translate="yes" xml:space="preserve">
          <source>Hasher::write_usize</source>
          <target state="translated">Hasher::write_usize</target>
        </trans-unit>
        <trans-unit id="461629db972167b8f4c1f8c130db9885c4944304" translate="yes" xml:space="preserve">
          <source>Hashing Functions</source>
          <target state="translated">해싱 함수</target>
        </trans-unit>
        <trans-unit id="baf48f49b04e2fe65712d113e9024e4c5a00d1bc" translate="yes" xml:space="preserve">
          <source>Haskell (GHC): typeclasses, type families</source>
          <target state="translated">Haskell (GHC) : 타입 클래스, 타입 패밀리</target>
        </trans-unit>
        <trans-unit id="0561de3a6257f6d36364146fd6581f1315dd2333" translate="yes" xml:space="preserve">
          <source>Having &lt;code&gt;common&lt;/code&gt; appear in the test results with &lt;code&gt;running 0 tests&lt;/code&gt; displayed for it is not what we wanted. We just wanted to share some code with the other integration test files.</source>
          <target state="translated">갖는 &lt;code&gt;common&lt;/code&gt; 테스트 결과에 표시 &lt;code&gt;running 0 tests&lt;/code&gt; 이를 표시하는 것은 우리가 원하는 것이 아니다. 우리는 다른 통합 테스트 파일과 일부 코드를 공유하고 싶었습니다.</target>
        </trans-unit>
        <trans-unit id="11f087b15a668ce62e66a014863909ef9d55cd94" translate="yes" xml:space="preserve">
          <source>Having Multiple Owners of Mutable Data by Combining &lt;code id=&quot;having-multiple-owners-of-mutable-data-by-combining-rct-and-refcellt&quot;&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;having-multiple-owners-of-mutable-data-by-combining-rct-and-refcellt&quot;&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 와 &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 를 결합하여 여러 개의 가변 데이터 소유자 보유</target>
        </trans-unit>
        <trans-unit id="b3039ad6abf86928bcfdadaa49d3256f9e624f29" translate="yes" xml:space="preserve">
          <source>Having multiple relaxed default bounds is unsupported.</source>
          <target state="translated">완화 된 기본 경계가 여러 개있는 것은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6b19652c5d2b3e9984ece4975d1cc403d1ab4a0a" translate="yes" xml:space="preserve">
          <source>Having one mutable reference (&lt;code&gt;&amp;amp;mut T&lt;/code&gt;) to the object (also known as &lt;strong&gt;mutability&lt;/strong&gt;).</source>
          <target state="translated">객체에 대한 하나의 변경 가능한 참조 ( &lt;code&gt;&amp;amp;mut T&lt;/code&gt; )가 있습니다 ( &lt;strong&gt;mutability&lt;/strong&gt; 라고도 함 ).</target>
        </trans-unit>
        <trans-unit id="08041929016b8a695800e1c093d6357eb61d9428" translate="yes" xml:space="preserve">
          <source>Having several immutable references (&lt;code&gt;&amp;amp;T&lt;/code&gt;) to the object (also known as &lt;strong&gt;aliasing&lt;/strong&gt;).</source>
          <target state="translated">오브젝트에 대한 여러 불변의 참조 ( &lt;code&gt;&amp;amp;T&lt;/code&gt; )가 있습니다 ( &lt;strong&gt;앨리어싱&lt;/strong&gt; 이라고도 함 ).</target>
        </trans-unit>
        <trans-unit id="89c8fa1c2c4d0b146e76f764a7dc959cbfc87737" translate="yes" xml:space="preserve">
          <source>Having to worry about the index in &lt;code&gt;word&lt;/code&gt; getting out of sync with the data in &lt;code&gt;s&lt;/code&gt; is tedious and error prone! Managing these indices is even more brittle if we write a &lt;code&gt;second_word&lt;/code&gt; function. Its signature would have to look like this:</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 의 데이터와 동기화되지 않는 &lt;code&gt;word&lt;/code&gt; 의 색인에 대해 걱정 해야하는 것은 지루하고 오류가 발생하기 쉽습니다! &lt;code&gt;second_word&lt;/code&gt; 함수를 작성하면 이러한 인덱스를 관리하는 것이 훨씬 더 취약 합니다. 서명은 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="257810d9a0b57b3d3f2b083b4e88460a9ed6c299" translate="yes" xml:space="preserve">
          <source>Hello, Cargo!</source>
          <target state="translated">안녕하세요,화물!</target>
        </trans-unit>
        <trans-unit id="0a0a9f2a6772942557ab5355d76af442f8f65e01" translate="yes" xml:space="preserve">
          <source>Hello, World!</source>
          <target state="translated">안녕, 월드!</target>
        </trans-unit>
        <trans-unit id="d9d2b1e388fd73fa4e7cc0203db99342ed1255e1" translate="yes" xml:space="preserve">
          <source>Helper struct for safely printing paths with &lt;a href=&quot;../macro.format&quot;&gt;&lt;code&gt;format!&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../macro.format&quot;&gt; &lt;code&gt;format!&lt;/code&gt; &lt;/a&gt; 경로를 안전하게 인쇄하기위한 도우미 구조 ! 와 &lt;code&gt;{}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8498955fde08da370bacddfd1434e8493282db8" translate="yes" xml:space="preserve">
          <source>Helper trait for &lt;a href=&quot;../primitive.slice#method.concat&quot;&gt;&lt;code&gt;[T]::concat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.slice#method.concat&quot;&gt; &lt;code&gt;[T]::concat&lt;/code&gt; 에&lt;/a&gt; 대한 도우미 특성입니다 .</target>
        </trans-unit>
        <trans-unit id="bbdd82587ac5843ce3d9f6e79bf40efba742c5a2" translate="yes" xml:space="preserve">
          <source>Helper trait for &lt;a href=&quot;../primitive.slice#method.join&quot;&gt;&lt;code&gt;[T]::join&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../primitive.slice#method.join&quot;&gt; &lt;code&gt;[T]::join&lt;/code&gt; 의&lt;/a&gt; 도우미 특성</target>
        </trans-unit>
        <trans-unit id="d8870a3f309d445b4b67cf35abad15e6e3e773d8" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;T&lt;/code&gt; is a trait object with two explicit lifetime bounds, 'a and 'b.</source>
          <target state="translated">여기서 &lt;code&gt;T&lt;/code&gt; 는 'a와'b '라는 두 개의 명시 적 수명 경계가있는 특성 객체입니다.</target>
        </trans-unit>
        <trans-unit id="5c4fbb21f9ed5068758832ea51d122515fab93c7" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;X&lt;/code&gt; will have already been specified the discriminant 0 by the time &lt;code&gt;Y&lt;/code&gt; is encountered, so a conflict occurs.</source>
          <target state="translated">여기서 &lt;code&gt;X&lt;/code&gt; 는 &lt;code&gt;Y&lt;/code&gt; 가 발생할 때까지 판별 자 0으로 이미 지정 되었으므로 충돌이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b3f6e00f3163ec48a9acfd477c8ec87919fc2c8c" translate="yes" xml:space="preserve">
          <source>Here are a couple examples of this error:</source>
          <target state="translated">이 오류의 몇 가지 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8ff34494ac843686469f6f02e338741820201079" translate="yes" xml:space="preserve">
          <source>Here are examples of the comparison operators being used.</source>
          <target state="translated">사용중인 비교 연산자의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bca374bff5c3dac21037ded7599cd1fe12249f7d" translate="yes" xml:space="preserve">
          <source>Here are examples of these operators being used.</source>
          <target state="translated">사용되는 이러한 연산자의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="07272e166a1d2e40b130f94ad3a0aa3df774ca3b" translate="yes" xml:space="preserve">
          <source>Here are similar examples but now for LAST.</source>
          <target state="translated">다음은 비슷한 예이지만 지금은 마지막입니다.</target>
        </trans-unit>
        <trans-unit id="0a1abd5c7569db9404cdcd75f1cc6cdc0c6dca93" translate="yes" xml:space="preserve">
          <source>Here are some example of these operators</source>
          <target state="translated">다음은 이러한 연산자의 예입니다</target>
        </trans-unit>
        <trans-unit id="4684b015ded3bc0731a2cef8198e5596403f6b07" translate="yes" xml:space="preserve">
          <source>Here are some examples of elision errors:</source>
          <target state="translated">다음은 제거 오류의 예입니다.</target>
        </trans-unit>
        <trans-unit id="4bcc69e7a08f9cc053bd0cff82d93712f586660e" translate="yes" xml:space="preserve">
          <source>Here are some examples where expressions don't have extended temporary scopes:</source>
          <target state="translated">다음은 표현식에 확장 된 임시 범위가없는 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="c92962597dc4ffea4ff897a85b4d5e4dec6ca581" translate="yes" xml:space="preserve">
          <source>Here are some examples where expressions have extended temporary scopes:</source>
          <target state="translated">다음은 표현식에 확장 된 임시 범위가있는 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="0931022beea83b3afc095873234631b7243eeca4" translate="yes" xml:space="preserve">
          <source>Here are some examples:</source>
          <target state="translated">여기 몇 가지 예가 있어요.</target>
        </trans-unit>
        <trans-unit id="51de71d79af0f5165810b64b8288dc0e2f418033" translate="yes" xml:space="preserve">
          <source>Here are some examples: a reference to an &lt;code&gt;i32&lt;/code&gt; without a lifetime parameter, a reference to an &lt;code&gt;i32&lt;/code&gt; that has a lifetime parameter named &lt;code&gt;'a&lt;/code&gt;, and a mutable reference to an &lt;code&gt;i32&lt;/code&gt; that also has the lifetime &lt;code&gt;'a&lt;/code&gt;.</source>
          <target state="translated">참조 : 몇 가지 예 &lt;code&gt;i32&lt;/code&gt; 수명 파라미터 제공되지 않을 경우에 참조 &lt;code&gt;i32&lt;/code&gt; 이라는 수명 파라미터 가진다 &lt;code&gt;'a&lt;/code&gt; 내지 An 및 가변 기준 &lt;code&gt;i32&lt;/code&gt; 또한 수명이 있는지 &lt;code&gt;'a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20d5c7a1de98768721ba1e4861f1afaf92322548" translate="yes" xml:space="preserve">
          <source>Here are some of the things this module contains:</source>
          <target state="translated">이 모듈에 포함 된 것들 중 일부는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2a92602de41a70e7040e9f2a4fb9598c573570c2" translate="yes" xml:space="preserve">
          <source>Here are some simple examples of where you'll run into this error:</source>
          <target state="translated">이 오류가 발생하는 간단한 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3a02d5c5d61bf51906767acca68761775d677fe8" translate="yes" xml:space="preserve">
          <source>Here are the abilities Unsafe Rust has in addition to Safe Rust:</source>
          <target state="translated">다음은 안전한 Rust에 더해 Unsafe Rust의 능력입니다.</target>
        </trans-unit>
        <trans-unit id="5b8f26110eb51a4ab181ea0b693d59c927775bab" translate="yes" xml:space="preserve">
          <source>Here are the topics we&amp;rsquo;ll cover in this chapter:</source>
          <target state="translated">이 장에서 다룰 주제는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bc16616a997e1c54d6f12cfc92a13207a77b9160" translate="yes" xml:space="preserve">
          <source>Here are the two primary ways in which &lt;code&gt;entry&lt;/code&gt; is used. First, a simple example where the logic performed on the values is trivial.</source>
          <target state="translated">다음은 &lt;code&gt;entry&lt;/code&gt; 이 사용 되는 두 가지 기본 방법입니다 . 첫째, 값에 대해 수행되는 논리가 사소한 예입니다.</target>
        </trans-unit>
        <trans-unit id="8d3de595e318046b488878fdfd592e24474accd6" translate="yes" xml:space="preserve">
          <source>Here executing &lt;code&gt;x = None&lt;/code&gt; would modify the value being matched and require us to go &quot;back in time&quot; to the &lt;code&gt;None&lt;/code&gt; arm.</source>
          <target state="translated">다음은 실행 &lt;code&gt;x = None&lt;/code&gt; 일치되는 값을 수정하지 않으며이 &quot;시간을 거슬러&quot;가서 우리를 필요 &lt;code&gt;None&lt;/code&gt; 팔을.</target>
        </trans-unit>
        <trans-unit id="b54fff02e5e3fe8139f3151b798d2ca6781ef79d" translate="yes" xml:space="preserve">
          <source>Here executing &lt;code&gt;x = None&lt;/code&gt; would modify the value being matched and require us to go &quot;back in time&quot; to the &lt;code&gt;None&lt;/code&gt; arm. To fix it, change the value in the match arm:</source>
          <target state="translated">여기서 &lt;code&gt;x = None&lt;/code&gt; 실행 하면 일치하는 값이 수정되고 &lt;code&gt;None&lt;/code&gt; 팔로 &quot;시간을 거슬러 올라갑니다&quot; . 이를 수정하려면 매치 암의 값을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="87b503ee6f76be5b3f344961161f897b4c2e8a33" translate="yes" xml:space="preserve">
          <source>Here is a basic example:</source>
          <target state="translated">기본 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="40d986bccf61bb4616c6b2d5e45138cb6f650868" translate="yes" xml:space="preserve">
          <source>Here is a recap of the reasons to choose &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;, &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;, or &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; , &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 를 선택해야하는 이유를 요약하면 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="2fd70c4f72651018616cf4fae80bda013db29aef" translate="yes" xml:space="preserve">
          <source>Here is a variation on the previous example, showing that no further elements are taken from &lt;code&gt;iter&lt;/code&gt; after the first &lt;code&gt;Err&lt;/code&gt;.</source>
          <target state="translated">다음은 이전 예제의 변형으로 , 첫 번째 &lt;code&gt;Err&lt;/code&gt; 이후의 &lt;code&gt;iter&lt;/code&gt; 에서 더 이상 요소를 가져 오지 않음을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f2d33e000bef3fae0bc1e18459c72a6974d4c8ec" translate="yes" xml:space="preserve">
          <source>Here is a variation on the previous example, showing that no further elements are taken from &lt;code&gt;iter&lt;/code&gt; after the first &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">다음 예제 는 첫 번째 &lt;code&gt;None&lt;/code&gt; 이후 &lt;code&gt;iter&lt;/code&gt; 에서 더 이상 요소를 가져 오지 않음을 보여주는 변형입니다 .</target>
        </trans-unit>
        <trans-unit id="64fa9f151e952c55124309eb57d3e7e04cdb27ce" translate="yes" xml:space="preserve">
          <source>Here is an example of the same &lt;code&gt;Point&lt;/code&gt; struct implementing the &lt;code&gt;Add&lt;/code&gt; trait using generics.</source>
          <target state="translated">다음은 제네릭을 사용하여 &lt;code&gt;Add&lt;/code&gt; 특성을 구현하는 동일한 &lt;code&gt;Point&lt;/code&gt; 구조체 의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="f4eeb15c7a7b93e1eb2dc6a8750be5fd94bbc8b2" translate="yes" xml:space="preserve">
          <source>Here is an example of the same &lt;code&gt;Point&lt;/code&gt; struct implementing the &lt;code&gt;Sub&lt;/code&gt; trait using generics.</source>
          <target state="translated">다음은 제네릭을 사용하여 &lt;code&gt;Sub&lt;/code&gt; 특성을 구현하는 동일한 &lt;code&gt;Point&lt;/code&gt; 구조체 의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="e2a455b6868a34c4c660661290fdc27380049549" translate="yes" xml:space="preserve">
          <source>Here is an example response that uses HTTP version 1.1, has a status code of 200, an OK reason phrase, no headers, and no body:</source>
          <target state="translated">다음은 HTTP 버전 1.1을 사용하고 상태 코드 200, 확인 이유 문구, 헤더 및 본문이없는 응답 예입니다.</target>
        </trans-unit>
        <trans-unit id="8d3dccad44a11aba4a0bfd15fb7b2845992244bd" translate="yes" xml:space="preserve">
          <source>Here is an example showcasing how to soundly mutate the contents of an &lt;code&gt;UnsafeCell&amp;lt;_&amp;gt;&lt;/code&gt; despite there being multiple references aliasing the cell:</source>
          <target state="translated">다음은 셀 별칭을 지정하는 여러 참조가 있음에도 불구하고 &lt;code&gt;UnsafeCell&amp;lt;_&amp;gt;&lt;/code&gt; 의 내용을 제대로 변경하는 방법을 보여주는 예제입니다 .</target>
        </trans-unit>
        <trans-unit id="f7c4ae388ef10758f9c1ee112d05af3dedb5a8c1" translate="yes" xml:space="preserve">
          <source>Here is an example that demonstrates the error:</source>
          <target state="translated">다음은 오류를 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="eb168180e8af601284ef4a6f97cd122e9d48a93f" translate="yes" xml:space="preserve">
          <source>Here is an example using ranges of &lt;code&gt;char&lt;/code&gt; values:</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 값의 범위를 사용하는 예는 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="2190806deeaf3eb0d2b99ddd8ded1889adb9e2dc" translate="yes" xml:space="preserve">
          <source>Here is an example where the third lifetime elision rule applies:</source>
          <target state="translated">다음은 세 번째 수명 제거 규칙이 적용되는 예입니다.</target>
        </trans-unit>
        <trans-unit id="8be714949bc61ee0dfb58dd8b6d077f499efa300" translate="yes" xml:space="preserve">
          <source>Here is an example which increments every integer in a vector, checking for overflow:</source>
          <target state="translated">다음은 벡터의 모든 정수를 증가시키고 오버플로를 확인하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="b8d2a1ec18a168b45aede187d064b1d87d98387f" translate="yes" xml:space="preserve">
          <source>Here is an example which increments every integer in a vector. We use the checked variant of &lt;code&gt;add&lt;/code&gt; that returns &lt;code&gt;None&lt;/code&gt; when the calculation would result in an overflow.</source>
          <target state="translated">다음은 벡터의 모든 정수를 증가시키는 예입니다. 계산에 오버플로가 발생하면 &lt;code&gt;None&lt;/code&gt; 을 반환 하는 &lt;code&gt;add&lt;/code&gt; 의 확인 된 변형을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="669e450458761957293db53fc0e8c919ba0f5a7a" translate="yes" xml:space="preserve">
          <source>Here is an unsafe function named &lt;code&gt;dangerous&lt;/code&gt; that doesn&amp;rsquo;t do anything in its body:</source>
          <target state="translated">다음은 본문에서 아무 것도하지 않는 &lt;code&gt;dangerous&lt;/code&gt; 라는 안전하지 않은 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="d9606eca0f59289409929077841f751f72b656be" translate="yes" xml:space="preserve">
          <source>Here is another example that tries to subtract one from another list of integers, this time checking for underflow:</source>
          <target state="translated">다음은 언더 플로를 검사하는 다른 정수 목록에서 하나를 빼려는 또 다른 예입니다.</target>
        </trans-unit>
        <trans-unit id="967e8f702b29651ccfd3eff162bdd1236f185e1b" translate="yes" xml:space="preserve">
          <source>Here is how you would define and use a &lt;code&gt;calculate_length&lt;/code&gt; function that has a reference to an object as a parameter instead of taking ownership of the value:</source>
          <target state="translated">다음은 값의 소유권을 가져 오는 대신 객체에 대한 참조가 있는 &lt;code&gt;calculate_length&lt;/code&gt; 함수를 정의하고 사용하는 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="853cb0e889b6e921d08e41239a16f75171fa3cf1" translate="yes" xml:space="preserve">
          <source>Here is that same example again, with some explanatory comments:</source>
          <target state="translated">다음은 몇 가지 설명 주석이 포함 된 동일한 예입니다.</target>
        </trans-unit>
        <trans-unit id="183c940df02f2ac1c7e0b320aa5e4607c7fd14f0" translate="yes" xml:space="preserve">
          <source>Here is the error we get when we compile this code:</source>
          <target state="translated">이 코드를 컴파일 할 때 발생하는 오류는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="20e589c1d30a718b69866f0e87eb12f8b53bb806" translate="yes" xml:space="preserve">
          <source>Here is the plan to build the web server:</source>
          <target state="translated">웹 서버 구축 계획은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c50f83c6cf619c1c5fb8951e5f26cafe1c807151" translate="yes" xml:space="preserve">
          <source>Here is the previous example again, with the correct order:</source>
          <target state="translated">올바른 순서로 이전 예를 다시 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="c6b6ce6ac56caf7839b74c32ae618de3ed902bea" translate="yes" xml:space="preserve">
          <source>Here is this algorithm described in pseudocode.</source>
          <target state="translated">여기이 알고리즘은 의사 코드로 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ade7d43a649a8f35a37c5c4df50d404ac17d264" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;Apple&lt;/code&gt; variant has two fields, and should be matched against like so:</source>
          <target state="translated">여기 &lt;code&gt;Apple&lt;/code&gt; 변형에는 두 개의 필드가 있으며 다음과 같이 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="847a36b4e8f5bc18d0a990ee9501fe6c952a3db3" translate="yes" xml:space="preserve">
          <source>Here the type &lt;code&gt;T&lt;/code&gt; cannot have a relaxed bound for multiple default traits (&lt;code&gt;Sized&lt;/code&gt; and &lt;code&gt;Send&lt;/code&gt;). This can be fixed by only using one relaxed bound.</source>
          <target state="translated">여기서 유형 &lt;code&gt;T&lt;/code&gt; 는 여러 기본 특성 ( &lt;code&gt;Sized&lt;/code&gt; 및 &lt;code&gt;Send&lt;/code&gt; )에 대해 완화 된 경계를 가질 수 없습니다 . 이것은 하나의 완화 된 경계를 사용하여 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="77492962523ab1872ec0db64f3e31206c8e37741" translate="yes" xml:space="preserve">
          <source>Here we create &lt;code&gt;Status::Value&lt;/code&gt; instances using each &lt;code&gt;u32&lt;/code&gt; value in the range that &lt;code&gt;map&lt;/code&gt; is called on by using the initializer function of &lt;code&gt;Status::Value&lt;/code&gt;. Some people prefer this style, and some people prefer to use closures. They compile to the same code, so use whichever style is clearer to you.</source>
          <target state="translated">여기에서 우리는 만들 &lt;code&gt;Status::Value&lt;/code&gt; 각 사용 인스턴스 &lt;code&gt;u32&lt;/code&gt; 하는 범위에서 값 &lt;code&gt;map&lt;/code&gt; 의 초기화 기능을 사용하여 호출됩니다 &lt;code&gt;Status::Value&lt;/code&gt; . 어떤 사람들은이 스타일을 선호하고 어떤 사람들은 클로저를 사용하는 것을 선호합니다. 그것들은 같은 코드로 컴파일되므로, 당신에게 더 명확한 스타일을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ab78b83024b9be055a5f592dcee8323d7eae1a44" translate="yes" xml:space="preserve">
          <source>Here we get a warning about not using the variable &lt;code&gt;y&lt;/code&gt;, but we don&amp;rsquo;t get a warning about not using the variable preceded by the underscore.</source>
          <target state="translated">여기에 변수 &lt;code&gt;y&lt;/code&gt; 를 사용 하지 않는다는 경고가 표시되지만 밑줄 앞에 변수를 사용하지 않는다는 경고는 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e6c5079a1585dd8c6aa581475ab7d948402fef68" translate="yes" xml:space="preserve">
          <source>Here we have an iterator &lt;code&gt;results&lt;/code&gt; over &lt;code&gt;Result&amp;lt;bool, ()&amp;gt;&lt;/code&gt;. Hence, &lt;code&gt;results.collect()&lt;/code&gt; can return any type implementing &lt;code&gt;FromIterator&amp;lt;Result&amp;lt;bool, ()&amp;gt;&amp;gt;&lt;/code&gt;. On the other hand, the &lt;code&gt;?&lt;/code&gt; operator can accept any type implementing &lt;code&gt;Try&lt;/code&gt;.</source>
          <target state="translated">여기 에 &lt;code&gt;Result&amp;lt;bool, ()&amp;gt;&lt;/code&gt; 대한 반복자 &lt;code&gt;results&lt;/code&gt; 가 있습니다 . 따라서 &lt;code&gt;results.collect()&lt;/code&gt; 는 &lt;code&gt;FromIterator&amp;lt;Result&amp;lt;bool, ()&amp;gt;&amp;gt;&lt;/code&gt; 구현하는 모든 유형을 리턴 할 수 있습니다 . 반면에 &lt;code&gt;?&lt;/code&gt; 연산자는 &lt;code&gt;Try&lt;/code&gt; 를 구현하는 모든 유형을 허용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb5b6fe6a43391cbaff0a797a1749d4999cf682c" translate="yes" xml:space="preserve">
          <source>Here we have declared a string literal, also known as a string slice. String literals have a static lifetime, which means the string &lt;code&gt;hello_world&lt;/code&gt; is guaranteed to be valid for the duration of the entire program. We can explicitly specify &lt;code&gt;hello_world&lt;/code&gt;'s lifetime as well:</source>
          <target state="translated">여기에서는 문자열 슬라이스라고도하는 문자열 리터럴을 선언했습니다. 문자열 리터럴은 정적 수명을 가지므로 &lt;code&gt;hello_world&lt;/code&gt; 문자열 은 전체 프로그램 기간 동안 유효합니다. &lt;code&gt;hello_world&lt;/code&gt; 의 수명도 명시 적으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f6025ae753da089e1d8586a3532b960124e6dc6" translate="yes" xml:space="preserve">
          <source>Here we have used the &lt;code&gt;continue&lt;/code&gt; keyword incorrectly. As we have seen above that &lt;code&gt;continue&lt;/code&gt; pointing to a labeled block.</source>
          <target state="translated">여기에서는 &lt;code&gt;continue&lt;/code&gt; 키워드를 잘못 사용했습니다 . 위에서 보았 듯이 &lt;code&gt;continue&lt;/code&gt; 레이블이 지정된 블록을 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="c6a5e69251fb02d97a8da5895df070cb741e7a14" translate="yes" xml:space="preserve">
          <source>Here we see that &lt;code&gt;flatten()&lt;/code&gt; does not perform a &quot;deep&quot; flatten. Instead, only one level of nesting is removed. That is, if you &lt;code&gt;flatten()&lt;/code&gt; a three-dimensional array the result will be two-dimensional and not one-dimensional. To get a one-dimensional structure, you have to &lt;code&gt;flatten()&lt;/code&gt; again.</source>
          <target state="translated">여기서 &lt;code&gt;flatten()&lt;/code&gt; 은 &quot;deep&quot;flatten을 수행하지 않습니다. 대신, 한 수준의 중첩 만 제거됩니다. 즉, 3 차원 배열 을 &lt;code&gt;flatten()&lt;/code&gt; 하면 결과는 2 차원이며 1 차원이 아닙니다. 1 차원 구조를 얻으려면 다시 &lt;code&gt;flatten()&lt;/code&gt; 해야합니다.</target>
        </trans-unit>
        <trans-unit id="72ccb25410f6e8d0ac401f0e115875ab4db2e28c" translate="yes" xml:space="preserve">
          <source>Here we tell Rust that when the result is &lt;code&gt;Ok&lt;/code&gt;, return the inner &lt;code&gt;file&lt;/code&gt; value out of the &lt;code&gt;Ok&lt;/code&gt; variant, and we then assign that file handle value to the variable &lt;code&gt;f&lt;/code&gt;. After the &lt;code&gt;match&lt;/code&gt;, we can use the file handle for reading or writing.</source>
          <target state="translated">여기서 Rust에 결과가 &lt;code&gt;Ok&lt;/code&gt; 일 때 &lt;code&gt;Ok&lt;/code&gt; 변형 에서 내부 &lt;code&gt;file&lt;/code&gt; 값을 반환 한 다음 해당 파일 핸들 값을 변수 &lt;code&gt;f&lt;/code&gt; 에 지정 합니다. &lt;code&gt;match&lt;/code&gt; 후에 파일 핸들을 사용하여 읽거나 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80012795e5bb9f7fa353370133e88ca78ecd6ec8" translate="yes" xml:space="preserve">
          <source>Here we&amp;rsquo;re calling the &lt;code&gt;hello&lt;/code&gt; function with the argument &lt;code&gt;&amp;amp;m&lt;/code&gt;, which is a reference to a &lt;code&gt;MyBox&amp;lt;String&amp;gt;&lt;/code&gt; value. Because we implemented the &lt;code&gt;Deref&lt;/code&gt; trait on &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; in Listing 15-10, Rust can turn &lt;code&gt;&amp;amp;MyBox&amp;lt;String&amp;gt;&lt;/code&gt; into &lt;code&gt;&amp;amp;String&lt;/code&gt; by calling &lt;code&gt;deref&lt;/code&gt;. The standard library provides an implementation of &lt;code&gt;Deref&lt;/code&gt; on &lt;code&gt;String&lt;/code&gt; that returns a string slice, and this is in the API documentation for &lt;code&gt;Deref&lt;/code&gt;. Rust calls &lt;code&gt;deref&lt;/code&gt; again to turn the &lt;code&gt;&amp;amp;String&lt;/code&gt; into &lt;code&gt;&amp;amp;str&lt;/code&gt;, which matches the &lt;code&gt;hello&lt;/code&gt; function&amp;rsquo;s definition.</source>
          <target state="translated">여기서는 &lt;code&gt;MyBox&amp;lt;String&amp;gt;&lt;/code&gt; 값에 대한 참조 인 &lt;code&gt;&amp;amp;m&lt;/code&gt; 인수와 함께 &lt;code&gt;hello&lt;/code&gt; 함수를 호출합니다 . Listing 15-10의 &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Deref&lt;/code&gt; 특성을 구현했기 때문에 Rust는 &lt;code&gt;deref&lt;/code&gt; 를 호출 하여 &lt;code&gt;&amp;amp;String&lt;/code&gt; &lt;code&gt;&amp;amp;MyBox&amp;lt;String&amp;gt;&lt;/code&gt; 을 &amp;amp; String 으로 바꿀 수있다 . 표준 라이브러리의 구현 제공 &lt;code&gt;Deref&lt;/code&gt; 에 &lt;code&gt;String&lt;/code&gt; 문자열 조각을 반환하고이에 대한 API 문서에 &lt;code&gt;Deref&lt;/code&gt; . 녹 호출 &lt;code&gt;deref&lt;/code&gt; 차례 다시 &lt;code&gt;&amp;amp;String&lt;/code&gt; 로 &lt;code&gt;&amp;amp;str&lt;/code&gt; 성냥하는 &lt;code&gt;hello&lt;/code&gt; 함수의 정의.</target>
        </trans-unit>
        <trans-unit id="466e3552c39fe3a92c2d4c054173a56d883575cc" translate="yes" xml:space="preserve">
          <source>Here we&amp;rsquo;ve defined a struct and named it &lt;code&gt;Rectangle&lt;/code&gt;. Inside the curly brackets, we defined the fields as &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;, both of which have type &lt;code&gt;u32&lt;/code&gt;. Then in &lt;code&gt;main&lt;/code&gt;, we created a particular instance of &lt;code&gt;Rectangle&lt;/code&gt; that has a width of 30 and a height of 50.</source>
          <target state="translated">여기에 구조체를 정의하고 이름을 &lt;code&gt;Rectangle&lt;/code&gt; 로 지정했습니다 . 중괄호 안에 필드를 &lt;code&gt;width&lt;/code&gt; 및 &lt;code&gt;height&lt;/code&gt; 로 정의했으며 둘 다 유형이 &lt;code&gt;u32&lt;/code&gt; 입니다. 그런 다음 &lt;code&gt;main&lt;/code&gt; 에서 너비가 30이고 높이가 50 인 &lt;code&gt;Rectangle&lt;/code&gt; 의 특정 인스턴스를 만들었습니다 .</target>
        </trans-unit>
        <trans-unit id="817f9efff3a295f34cca74e6a4819cd4626be8b2" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a simple comment:</source>
          <target state="translated">간단한 의견은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="539936e83a01369f912b07f9a46070e22c533c8a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a small programming problem: write a function that takes a string and returns the first word it finds in that string. If the function doesn&amp;rsquo;t find a space in the string, the whole string must be one word, so the entire string should be returned.</source>
          <target state="translated">다음은 작은 프로그래밍 문제입니다. 문자열을 가져 와서 해당 문자열에서 찾은 첫 번째 단어를 반환하는 함수를 작성하십시오. 함수가 문자열에서 공백을 찾지 못하면 전체 문자열이 한 단어 여야하므로 전체 문자열을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="7f3b7e87f399f43770545cc13990ab6cc8dd6c83" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a constant declaration where the constant&amp;rsquo;s name is &lt;code&gt;MAX_POINTS&lt;/code&gt; and its value is set to 100,000. (Rust&amp;rsquo;s naming convention for constants is to use all uppercase with underscores between words, and underscores can be inserted in numeric literals to improve readability):</source>
          <target state="translated">다음은 상수 이름이 &lt;code&gt;MAX_POINTS&lt;/code&gt; 이고 값이 100,000으로 설정된 상수 선언의 예입니다 . 상수에 대한 Rust의 명명 규칙은 단어 사이에 밑줄이있는 모든 대문자를 사용하는 것이며 가독성을 높이기 위해 밑줄을 숫자 리터럴로 삽입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e399b9c3b58dba78ca66c0c45518f8657e4f783" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how the development and release process works: let&amp;rsquo;s assume that the Rust team is working on the release of Rust 1.5. That release happened in December of 2015, but it will provide us with realistic version numbers. A new feature is added to Rust: a new commit lands on the &lt;code&gt;master&lt;/code&gt; branch. Each night, a new nightly version of Rust is produced. Every day is a release day, and these releases are created by our release infrastructure automatically. So as time passes, our releases look like this, once a night:</source>
          <target state="translated">다음은 개발 및 릴리스 프로세스의 작동 방식에 대한 예입니다. Rust 팀이 Rust 1.5 릴리스를 작업 중이라고 가정 해 봅시다. 이 릴리스는 2015 년 12 월에 발생했지만 실제 버전 번호를 제공 할 것입니다. Rust에 새로운 기능이 추가되었습니다 : 새로운 커밋이 &lt;code&gt;master&lt;/code&gt; 브랜치 . 매일 밤 Rust의 새로운 야간 버전이 생성됩니다. 매일은 릴리스 일이며 이러한 릴리스는 릴리스 인프라에서 자동으로 생성됩니다. 시간이 지남에 따라 릴리스는 다음과 같이 밤에 한 번 나타납니다.</target>
        </trans-unit>
        <trans-unit id="dd2c057fc04f01fae93788be5795a76d18a55fe9" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of the &lt;code&gt;clone&lt;/code&gt; method in action:</source>
          <target state="translated">여기에 예가 있습니다 &lt;code&gt;clone&lt;/code&gt; 방법의 실제 .</target>
        </trans-unit>
        <trans-unit id="01162de636320bfb3aac73f8ee64a4ca8f8b3f36" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that shows floating-point numbers in action:</source>
          <target state="translated">다음은 실제 부동 소수점 숫자를 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="b756692957834549ddc1e80ed843e1c05120a8e7" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how it works: when you call a method with &lt;code&gt;object.something()&lt;/code&gt;, Rust automatically adds in &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;&amp;amp;mut&lt;/code&gt;, or &lt;code&gt;*&lt;/code&gt; so &lt;code&gt;object&lt;/code&gt; matches the signature of the method. In other words, the following are the same:</source>
          <target state="translated">작동 방식은 다음과 같습니다. &lt;code&gt;object.something()&lt;/code&gt; 으로 메소드를 호출하면 Rust가 자동으로 &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;&amp;amp;mut&lt;/code&gt; 또는 &lt;code&gt;*&lt;/code&gt; so &lt;code&gt;object&lt;/code&gt; 는 메서드의 서명과 일치합니다. 다시 말해 다음은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="bbfc2aa9173a426f43e60848a0174bac37b702fe" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the compiler error:</source>
          <target state="translated">컴파일러 오류는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7ba4bf6763c0003ca703ce8f7299229f35cbda9a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the error:</source>
          <target state="translated">오류는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="916eb038e9d9b0f05a6d2dec1a88d2849aef616b" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the full code for reference:</source>
          <target state="translated">다음은 참조를위한 전체 코드입니다.</target>
        </trans-unit>
        <trans-unit id="815ea8397604a0309cd918e79463e69ce092e31e" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the resulting compilation error:</source>
          <target state="translated">결과 컴파일 오류는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0221cef214e9504c84ca1c9204c7ee34f36785b0" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the scenario we&amp;rsquo;ll test: we&amp;rsquo;ll create a library that tracks a value against a maximum value and sends messages based on how close to the maximum value the current value is. This library could be used to keep track of a user&amp;rsquo;s quota for the number of API calls they&amp;rsquo;re allowed to make, for example.</source>
          <target state="translated">테스트 할 시나리오는 다음과 같습니다. 최대 값에 대해 값을 추적하고 현재 값이 최대 값에 얼마나 가까운 지에 따라 메시지를 보내는 라이브러리를 만듭니다. 이 라이브러리는 예를 들어 사용자가 허용 한 API 호출 수에 대한 사용자 할당량을 추적하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d29162aaec04ffdbb58bf12aa825c48d5666dd6" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what the countdown would look like using a &lt;code&gt;for&lt;/code&gt; loop and another method we&amp;rsquo;ve not yet talked about, &lt;code&gt;rev&lt;/code&gt;, to reverse the range:</source>
          <target state="translated">다음은 &lt;code&gt;for&lt;/code&gt; 루프와 범위를 뒤집기 위해 아직 이야기하지 않은 또 다른 방법 인 &lt;code&gt;rev&lt;/code&gt; 를 사용하여 카운트 다운을하는 모습입니다 .</target>
        </trans-unit>
        <trans-unit id="d3bb7457d5469dff80002a12eb2b6537482105f8" translate="yes" xml:space="preserve">
          <source>Here's an example of a program which exemplifies the three cases outlined above:</source>
          <target state="translated">다음은 위에서 설명한 세 가지 사례를 보여주는 프로그램의 예입니다.</target>
        </trans-unit>
        <trans-unit id="8f4d98d4c0a8996c7a0518c8611a7d795ca5c7fb" translate="yes" xml:space="preserve">
          <source>Here's an example of a struct that has this problem:</source>
          <target state="translated">이 문제가있는 구조체의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="38707ff87f1d5297f1ba77c802780450fd07e571" translate="yes" xml:space="preserve">
          <source>Here's an example of how a collection might make use of &lt;code&gt;needs_drop&lt;/code&gt;:</source>
          <target state="translated">다음은 컬렉션이 &lt;code&gt;needs_drop&lt;/code&gt; 을 사용하는 방법에 대한 예입니다 .</target>
        </trans-unit>
        <trans-unit id="6b4165c575ea75c83f4faaec0830fc7c979ed3b7" translate="yes" xml:space="preserve">
          <source>Here's an example of some in-progress code. We have a trait &lt;code&gt;Foo&lt;/code&gt;:</source>
          <target state="translated">다음은 진행중인 코드의 예입니다. &lt;code&gt;Foo&lt;/code&gt; 라는 특성이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f441ef09b0ea3aff9bb06d2bb0621baad2037ee9" translate="yes" xml:space="preserve">
          <source>Here's an example of this error:</source>
          <target state="translated">이 오류의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c9ee387ebc736d2db87034681c5da1089287c37d" translate="yes" xml:space="preserve">
          <source>Here's an example where you want to sort people by height only, disregarding &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;:</source>
          <target state="translated">다음은 &lt;code&gt;id&lt;/code&gt; 와 &lt;code&gt;name&lt;/code&gt; 을 무시하고 키만 기준으로 사람을 정렬하려는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="51e85e4e8113fb3e1f07e1727e78d73f5f0043e6" translate="yes" xml:space="preserve">
          <source>Here's an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4cce1c09bcbbaec9487020ee6e7f8025e34bed6b" translate="yes" xml:space="preserve">
          <source>Here's another example but here we do not try and return an expression:</source>
          <target state="translated">여기 또 다른 예가 있지만 여기에서는 표현식을 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="52eb68597e531c606446cb2bd5c17dccc5e369fd" translate="yes" xml:space="preserve">
          <source>Here's another example that will fail:</source>
          <target state="translated">실패 할 또 다른 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cb729976f0325910542c6a857a3758115eda6f00" translate="yes" xml:space="preserve">
          <source>Here's one example of this error:</source>
          <target state="translated">이 오류의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4919036b58ea25eeee47e5a5bbcefebd8f5446fd" translate="yes" xml:space="preserve">
          <source>Here's the same example, but with &lt;a href=&quot;#method.filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">다음은 같은 예제이지만 &lt;a href=&quot;#method.filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;#method.map&quot;&gt; &lt;code&gt;map&lt;/code&gt; 이 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f461dd8cfe66dce3c71bb1a0db34025a57dc2b4e" translate="yes" xml:space="preserve">
          <source>Here's the same example, but with &lt;a href=&quot;trait.iterator#method.filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.iterator#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">다음은 동일한 예이지만 &lt;a href=&quot;trait.iterator#method.filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;trait.iterator#method.map&quot;&gt; &lt;code&gt;map&lt;/code&gt; 사용&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="b538038816d2b9d80e3095023dd492b1ae3c134a" translate="yes" xml:space="preserve">
          <source>Here's the same example, but with &lt;a href=&quot;trait.iterator#method.take_while&quot;&gt;&lt;code&gt;take_while&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.iterator#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">다음은 동일한 예이지만 &lt;a href=&quot;trait.iterator#method.take_while&quot;&gt; &lt;code&gt;take_while&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;trait.iterator#method.map&quot;&gt; &lt;code&gt;map&lt;/code&gt; 사용&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3adc3a6ab8335913c0c03d10dd56aa70986ccdbc" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;&amp;amp;mut fancy&lt;/code&gt; is mutable, but &lt;code&gt;&amp;amp;(&amp;amp;mut fancy)&lt;/code&gt; is not. Creating an immutable reference to a value borrows it immutably. There can be multiple references of type &lt;code&gt;&amp;amp;(&amp;amp;mut T)&lt;/code&gt; that point to the same value, so they must be immutable to prevent multiple mutable references to the same value.</source>
          <target state="translated">여기서 &lt;code&gt;&amp;amp;mut fancy&lt;/code&gt; 는 변경할 수 있지만 &lt;code&gt;&amp;amp;(&amp;amp;mut fancy)&lt;/code&gt; 는 변경할 수 없습니다. 값에 대한 불변의 참조를 작성하면 불변으로 차용됩니다. 동일한 값을 가리키는 &lt;code&gt;&amp;amp;(&amp;amp;mut T)&lt;/code&gt; 유형에 대한 여러 참조가있을 수 있으므로 동일한 값에 대한 여러 변경 가능한 참조를 방지하려면 변경 불가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="ae9903eacaebe1bfadd3100f5d35d502f8c50279" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;Grams2&lt;/code&gt; is a not equivalent to &lt;code&gt;Grams&lt;/code&gt; -- the former transparently wraps a (non-transparent) struct containing a single float, while &lt;code&gt;Grams&lt;/code&gt; is a transparent wrapper around a float. This can make a difference for the ABI.</source>
          <target state="translated">여기에서 &lt;code&gt;Grams2&lt;/code&gt; 는 &lt;code&gt;Grams&lt;/code&gt; 와 동등하지 않습니다 . 전자는 단일 float를 포함하는 (투명하지 않은) 구조체를 투명하게 감싸고, &lt;code&gt;Grams&lt;/code&gt; 는 float 주위의 투명한 래퍼입니다. 이것은 ABI를 변화시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc33c2bfb4ee352bfa1ddf50a16705d99896734f" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;demo&lt;/code&gt; tries to borrow the string data held within its argument &lt;code&gt;s&lt;/code&gt; and then return that borrow. However, &lt;code&gt;S&lt;/code&gt; is declared as implementing &lt;code&gt;Drop&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;demo&lt;/code&gt; 는 인수 &lt;code&gt;s&lt;/code&gt; 내에 보유 된 문자열 데이터 를 빌린 다음 빌린 값을 반환 하려고 시도합니다 . 그러나 &lt;code&gt;S&lt;/code&gt; 는 &lt;code&gt;Drop&lt;/code&gt; 구현으로 선언됩니다 .</target>
        </trans-unit>
        <trans-unit id="d42c53fe9a57832c14dca225308392012e6122d1" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;fancy_num&lt;/code&gt; is borrowed by &lt;code&gt;fancy_ref&lt;/code&gt; and so cannot be moved into the closure &lt;code&gt;x&lt;/code&gt;. There is no way to move a value into a closure while it is borrowed, as that would invalidate the borrow.</source>
          <target state="translated">여기서 &lt;code&gt;fancy_num&lt;/code&gt; 은 fancy_ref 에 의해 빌려 &lt;code&gt;fancy_ref&lt;/code&gt; 클로저 &lt;code&gt;x&lt;/code&gt; 로 이동할 수 없습니다 . 차용을 무효화 할 수 있기 때문에 차용 한 값을 클로저로 옮길 수있는 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="125b181d950db988334868421de4a90fab534474" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;first&lt;/code&gt; has type &lt;code&gt;A&lt;/code&gt;, referring to &lt;code&gt;to_vec&lt;/code&gt;'s &lt;code&gt;A&lt;/code&gt; type parameter; and &lt;code&gt;rest&lt;/code&gt; has type &lt;code&gt;Vec&amp;lt;A&amp;gt;&lt;/code&gt;, a vector with element type &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">여기에서는 &lt;code&gt;first&lt;/code&gt; &lt;code&gt;to_vec&lt;/code&gt; 의 &lt;code&gt;A&lt;/code&gt; 유형 매개 변수를 참조하여 유형 &lt;code&gt;A&lt;/code&gt; 를 갖습니다 . 그리고 &lt;code&gt;rest&lt;/code&gt; 유형이 &lt;code&gt;Vec&amp;lt;A&amp;gt;&lt;/code&gt; , 요소 유형과 벡터 &lt;code&gt;A&lt;/code&gt; 는 .</target>
        </trans-unit>
        <trans-unit id="843f8d3cb9b3a29d042bd0b638e62192879181c8" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;i32&lt;/code&gt; is the type of each element. After the semicolon, the number &lt;code&gt;5&lt;/code&gt; indicates the array contains five elements.</source>
          <target state="translated">여기서 &lt;code&gt;i32&lt;/code&gt; 는 각 요소의 유형입니다. 세미콜론 뒤의 숫자 &lt;code&gt;5&lt;/code&gt; 는 배열에 5 개의 요소가 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="df5a4c41f4c7ffd30b5c670cb408c350a9013b94" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;i32&lt;/code&gt; is the type of each element. After the semicolon, the number &lt;code&gt;5&lt;/code&gt; indicates the element contains five items.</source>
          <target state="translated">여기서 &lt;code&gt;i32&lt;/code&gt; 는 각 요소의 유형입니다. 세미콜론 다음에 숫자 &lt;code&gt;5&lt;/code&gt; 는 요소에 5 개의 항목이 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1068c0619a68aa52935f67e1c63f9f6ef1422570" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;s&lt;/code&gt; will be a &lt;code&gt;&amp;amp;str&lt;/code&gt; that contains the first 4 bytes of the string. Earlier, we mentioned that each of these characters was 2 bytes, which means &lt;code&gt;s&lt;/code&gt; will be &lt;code&gt;Зд&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;s&lt;/code&gt; 는 문자열의 처음 4 바이트를 포함 하는 &lt;code&gt;&amp;amp;str&lt;/code&gt; 입니다. 앞에서 우리는이 문자들 각각이 2 바이트라고 언급했는데, 이는 &lt;code&gt;s&lt;/code&gt; 가 &lt;code&gt;Зд&lt;/code&gt; 일 것 입니다.</target>
        </trans-unit>
        <trans-unit id="75b866d15247e93817fc99798a57f0ab2950be56" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;score&lt;/code&gt; will have the value that&amp;rsquo;s associated with the Blue team, and the result will be &lt;code&gt;Some(&amp;amp;10)&lt;/code&gt;. The result is wrapped in &lt;code&gt;Some&lt;/code&gt; because &lt;code&gt;get&lt;/code&gt; returns an &lt;code&gt;Option&amp;lt;&amp;amp;V&amp;gt;&lt;/code&gt;; if there&amp;rsquo;s no value for that key in the hash map, &lt;code&gt;get&lt;/code&gt; will return &lt;code&gt;None&lt;/code&gt;. The program will need to handle the &lt;code&gt;Option&lt;/code&gt; in one of the ways that we covered in Chapter 6.</source>
          <target state="translated">여기서 &lt;code&gt;score&lt;/code&gt; 는 Blue 팀과 관련된 값을 가지며 결과는 &lt;code&gt;Some(&amp;amp;10)&lt;/code&gt; 입니다. &lt;code&gt;get&lt;/code&gt; 은 &lt;code&gt;Option&amp;lt;&amp;amp;V&amp;gt;&lt;/code&gt; 반환 하므로 결과는 &lt;code&gt;Some&lt;/code&gt; 로 래핑됩니다 . 해시 맵에 해당 키에 대한 값이 없으면 &lt;code&gt;get&lt;/code&gt; 은 &lt;code&gt;None&lt;/code&gt; 을 반환 합니다. 프로그램은 6 장에서 다룬 방법 중 하나로 &lt;code&gt;Option&lt;/code&gt; 을 처리해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8bd05f4a31a90f3b6414a315addec81f40aa24ad" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;x&lt;/code&gt; has the lifetime &lt;code&gt;'b&lt;/code&gt;, which in this case is larger than &lt;code&gt;'a&lt;/code&gt;. This means &lt;code&gt;r&lt;/code&gt; can reference &lt;code&gt;x&lt;/code&gt; because Rust knows that the reference in &lt;code&gt;r&lt;/code&gt; will always be valid while &lt;code&gt;x&lt;/code&gt; is valid.</source>
          <target state="translated">여기서 &lt;code&gt;x&lt;/code&gt; 의 수명은 &lt;code&gt;'b&lt;/code&gt; ' 이며,이 경우 &lt;code&gt;'a&lt;/code&gt; ' 보다 큽니다 . 이 방법은 &lt;code&gt;r&lt;/code&gt; 에 참조 할 수 &lt;code&gt;x&lt;/code&gt; 녹에서 참조 것을 알고 있기 때문에 &lt;code&gt;r&lt;/code&gt; 은 동안 항상 유효합니다 &lt;code&gt;x&lt;/code&gt; 는 유효합니다.</target>
        </trans-unit>
        <trans-unit id="e10c369ea788e27a00713fc168a85308c89bf1c9" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;y&lt;/code&gt; is bound by-value in one case and by-reference in the other.</source>
          <target state="translated">여기서 &lt;code&gt;y&lt;/code&gt; 는 하나의 경우 값에 의해 바인딩되고 다른 경우에는 참조에 의해 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="7d5607669abd7c37655a986b9a8d2fca66769741" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;y&lt;/code&gt; is bound to the contents of the &lt;code&gt;Some&lt;/code&gt; and can be used within the block corresponding to the match arm. However, in case &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, we have not specified what &lt;code&gt;y&lt;/code&gt; is, and the block will use a nonexistent variable.</source>
          <target state="translated">여기서, &lt;code&gt;y&lt;/code&gt; 는 &lt;code&gt;Some&lt;/code&gt; 의 내용에 묶여 있고 매치 암에 해당하는 블록 내에서 사용될 수있다. 그러나 &lt;code&gt;x&lt;/code&gt; 가 &lt;code&gt;None&lt;/code&gt; 인 경우 &lt;code&gt;y&lt;/code&gt; 가 무엇인지 지정하지 않았 으며 블록은 존재하지 않는 변수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a792c6d2920136f42b2c0328d50b11b4b1f68c36" translate="yes" xml:space="preserve">
          <source>Here, all types implementing &lt;code&gt;Foo&lt;/code&gt; must have a method &lt;code&gt;foo&amp;lt;T&amp;gt;(x: T)&lt;/code&gt; which can take any type &lt;code&gt;T&lt;/code&gt;. However, in the &lt;code&gt;impl&lt;/code&gt; for &lt;code&gt;bool&lt;/code&gt;, we have added an extra bound that &lt;code&gt;T&lt;/code&gt; is &lt;code&gt;Copy&lt;/code&gt;, which isn't compatible with the original trait.</source>
          <target state="translated">여기에 구현 모든 유형의 &lt;code&gt;Foo&lt;/code&gt; 메소드가 있어야합니다 &lt;code&gt;foo&amp;lt;T&amp;gt;(x: T)&lt;/code&gt; 모든 종류의 걸릴 수 &lt;code&gt;T&lt;/code&gt; 를 . 그러나 &lt;code&gt;bool&lt;/code&gt; 의 &lt;code&gt;impl&lt;/code&gt; 에 추가 경계를 추가했습니다. &lt;code&gt;T&lt;/code&gt; 는 &lt;code&gt;Copy&lt;/code&gt; 인 하여 원래 특성과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e86bf62ea38db4534581f774aebf9c330891b88f" translate="yes" xml:space="preserve">
          <source>Here, even though &lt;code&gt;x&lt;/code&gt; is not one of the parameters of &lt;code&gt;equal_to_x&lt;/code&gt;, the &lt;code&gt;equal_to_x&lt;/code&gt; closure is allowed to use the &lt;code&gt;x&lt;/code&gt; variable that&amp;rsquo;s defined in the same scope that &lt;code&gt;equal_to_x&lt;/code&gt; is defined in.</source>
          <target state="translated">여기서, 비록 &lt;code&gt;x&lt;/code&gt; 의 파라미터 중 하나가 아닌 &lt;code&gt;equal_to_x&lt;/code&gt; 상기 &lt;code&gt;equal_to_x&lt;/code&gt; 클로져가 사용하도록 허용 &lt;code&gt;x&lt;/code&gt; 것과 동일한 범위에 정의되어 가변 &lt;code&gt;equal_to_x&lt;/code&gt; 가 정의된다.</target>
        </trans-unit>
        <trans-unit id="3efa2682153806eb1dbead68e3ef30ae590912ca" translate="yes" xml:space="preserve">
          <source>Here, even though we&amp;rsquo;ve specified a lifetime parameter &lt;code&gt;'a&lt;/code&gt; for the return type, this implementation will fail to compile because the return value lifetime is not related to the lifetime of the parameters at all. Here is the error message we get:</source>
          <target state="translated">여기서는 평생 매개 변수를 지정했지만 &lt;code&gt;'a&lt;/code&gt; 반환 유형에 'a 를 반환 값 수명이 매개 변수의 수명과 전혀 관련이 없으므로이 구현은 컴파일에 실패합니다. 우리가 얻는 오류 메시지는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="da2b63d2db9c34aa4fad7b681faf1cae153440c5" translate="yes" xml:space="preserve">
          <source>Here, our response has a status line with status code 404 and the reason phrase &lt;code&gt;NOT FOUND&lt;/code&gt;. We&amp;rsquo;re still not returning headers, and the body of the response will be the HTML in the file &lt;em&gt;404.html&lt;/em&gt;. You&amp;rsquo;ll need to create a &lt;em&gt;404.html&lt;/em&gt; file next to &lt;em&gt;hello.html&lt;/em&gt; for the error page; again feel free to use any HTML you want or use the example HTML in Listing 20-8.</source>
          <target state="translated">여기에 응답에 상태 코드가 404 인 상태 표시 줄과 이유 구문 &lt;code&gt;NOT FOUND&lt;/code&gt; 가 있습니다. 우리는 여전히 헤더를 반환하지 않으며 응답 본문은 &lt;em&gt;404.html&lt;/em&gt; 파일의 HTML이됩니다 . &lt;em&gt;404.html&lt;/em&gt; 을 만들어야합니다&lt;em&gt;&lt;/em&gt;오류 페이지에 대해 &lt;em&gt;hello.html&lt;/em&gt; 옆에 파일 합니다. 원하는 HTML을 사용하거나 Listing 20-8의 예제 HTML을 자유롭게 사용한다.</target>
        </trans-unit>
        <trans-unit id="a2749e5eb8656bede400f4e0b8d184580a4d9adf" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;BitAndAssign&lt;/code&gt; trait is implemented for a wrapper around &lt;code&gt;Vec&amp;lt;bool&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">여기, &lt;code&gt;BitAndAssign&lt;/code&gt; 특성은 &lt;code&gt;Vec&amp;lt;bool&amp;gt;&lt;/code&gt; 주위의 래퍼에 대해 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="73314800534c2c9290a895f1b2e09cd5c74b13fa" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;nothing_is_true&lt;/code&gt; method takes the ownership of &lt;code&gt;self&lt;/code&gt;. However, &lt;code&gt;self&lt;/code&gt; cannot be moved because &lt;code&gt;.borrow()&lt;/code&gt; only provides an &lt;code&gt;&amp;amp;TheDarkKnight&lt;/code&gt;, which is a borrow of the content owned by the &lt;code&gt;RefCell&lt;/code&gt;. To fix this error, you have three choices:</source>
          <target state="translated">여기서 &lt;code&gt;nothing_is_true&lt;/code&gt; 메소드는 &lt;code&gt;self&lt;/code&gt; 의 소유권을 갖습니다 . 그러나 &lt;code&gt;.borrow()&lt;/code&gt; 는 &lt;code&gt;RefCell&lt;/code&gt; 소유의 컨텐츠를 빌린 &lt;code&gt;&amp;amp;TheDarkKnight&lt;/code&gt; 만 제공 하기 때문에 &lt;code&gt;self&lt;/code&gt; 를 이동할 수 없습니다 . 이 오류를 해결하려면 세 가지 선택 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ecdeb34514236dc334d979e1fa6dac1a4f47ca1" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;yield&lt;/code&gt; keyword is used in an &lt;code&gt;async&lt;/code&gt; block, which is not yet supported.</source>
          <target state="translated">여기서 &lt;code&gt;yield&lt;/code&gt; 키워드는 아직 지원되지 않는 &lt;code&gt;async&lt;/code&gt; 블록 에서 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="a5f1ad21d4790c6fa776cb2d79a7da13085bbb0b" translate="yes" xml:space="preserve">
          <source>Here, the code counts up through the elements in the array. It starts at index &lt;code&gt;0&lt;/code&gt;, and then loops until it reaches the final index in the array (that is, when &lt;code&gt;index &amp;lt; 5&lt;/code&gt; is no longer true). Running this code will print every element in the array:</source>
          <target state="translated">여기서 코드는 배열의 요소를 통해 계산됩니다. 인덱스 &lt;code&gt;0&lt;/code&gt; 에서 시작한 다음 배열의 최종 인덱스에 도달 할 때까지 (즉, &lt;code&gt;index &amp;lt; 5&lt;/code&gt; 가 더 이상 참이 아닌 경우) 반복됩니다 . 이 코드를 실행하면 배열의 모든 요소가 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="f6e9fdb531b1a1a673e70ab403c2068ef72bf3e1" translate="yes" xml:space="preserve">
          <source>Here, the expression &lt;code&gt;&amp;amp;foo()&lt;/code&gt; is borrowing the expression &lt;code&gt;foo()&lt;/code&gt;. As &lt;code&gt;foo()&lt;/code&gt; is a call to a function, and not the name of a variable, this creates a &lt;strong&gt;temporary&lt;/strong&gt; -- that temporary stores the return value from &lt;code&gt;foo()&lt;/code&gt; so that it can be borrowed. You could imagine that &lt;code&gt;let p = bar(&amp;amp;foo());&lt;/code&gt; is equivalent to this:</source>
          <target state="translated">여기에서 &lt;code&gt;&amp;amp;foo()&lt;/code&gt; 표현식은 &lt;code&gt;foo()&lt;/code&gt; 표현식을 빌리고 있습니다. 마찬가지로 &lt;code&gt;foo()&lt;/code&gt; A A 함수 호출, 그리고 변수의 이름이며, 이는 생성 &lt;strong&gt;일시&lt;/strong&gt; - 즉 임시 저장 반환 값 &lt;code&gt;foo()&lt;/code&gt; 가 대여 할 수 있도록한다. 당신이 상상할 수있는 &lt;code&gt;let p = bar(&amp;amp;foo());&lt;/code&gt; 이것과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="408c7fbfdfe961fb58eba63dc21b905f34fe6b5c" translate="yes" xml:space="preserve">
          <source>Here, the function &lt;code&gt;eat&lt;/code&gt; takes ownership of &lt;code&gt;x&lt;/code&gt;. However, &lt;code&gt;x&lt;/code&gt; cannot be moved because the borrow to &lt;code&gt;_ref_to_val&lt;/code&gt; needs to last till the function &lt;code&gt;borrow&lt;/code&gt;. To fix that you can do a few different things:</source>
          <target state="translated">여기서 &lt;code&gt;eat&lt;/code&gt; 함수 는 &lt;code&gt;x&lt;/code&gt; 의 소유권을 갖습니다 . 그러나 &lt;code&gt;_ref_to_val&lt;/code&gt; 에 &lt;code&gt;borrow&lt;/code&gt; 함수는 차용 함수까지 지속 되어야하므로 &lt;code&gt;x&lt;/code&gt; 를 이동할 수 없습니다 . 이를 해결하기 위해 몇 가지 다른 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34b4fc7688b4cc55dbce35a5cbba7cf5aa481597" translate="yes" xml:space="preserve">
          <source>Here, the function &lt;code&gt;foo&lt;/code&gt; returns a value of type &lt;code&gt;Cell&amp;lt;&amp;amp;'x u32&amp;gt;&lt;/code&gt;, which references the lifetime &lt;code&gt;'x&lt;/code&gt;. However, the return type is declared as &lt;code&gt;impl Trait&amp;lt;'y&amp;gt;&lt;/code&gt; -- this indicates that &lt;code&gt;foo&lt;/code&gt; returns &quot;some type that implements &lt;code&gt;Trait&amp;lt;'y&amp;gt;&lt;/code&gt;&quot;, but it also indicates that the return type &lt;strong&gt;only captures data referencing the lifetime &lt;code&gt;'y&lt;/code&gt;&lt;/strong&gt;. In this case, though, we are referencing data with lifetime &lt;code&gt;'x&lt;/code&gt;, so this function is in error.</source>
          <target state="translated">여기서 &lt;code&gt;foo&lt;/code&gt; 함수 는 수명 &lt;code&gt;'x&lt;/code&gt; 를 참조하는 &lt;code&gt;Cell&amp;lt;&amp;amp;'x u32&amp;gt;&lt;/code&gt; 유형의 값을 리턴합니다 . 그러나 반환 유형은 &lt;code&gt;impl Trait&amp;lt;'y&amp;gt;&lt;/code&gt; 로 선언됩니다. 이는 &lt;code&gt;foo&lt;/code&gt; 가 &quot; &lt;code&gt;Trait&amp;lt;'y&amp;gt;&lt;/code&gt; 를 구현하는 일부 유형&quot;을 반환 하지만 반환 유형 &lt;strong&gt;은 수명 &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;'y&lt;/code&gt; 를&lt;/strong&gt;&lt;strong&gt; 참조하는 데이터 만 캡처&lt;/strong&gt; 함을 나타냅니다.&lt;strong&gt;&lt;/strong&gt; . 이 경우 수명이 &lt;code&gt;'x&lt;/code&gt; 인 데이터를 참조 하므로이 기능에 오류가 있습니다.</target>
        </trans-unit>
        <trans-unit id="89055a364d466030b4b32dbb99ee9d2965691a35" translate="yes" xml:space="preserve">
          <source>Here, the loop never ends, so &lt;code&gt;!&lt;/code&gt; is the value of the expression. However, this wouldn&amp;rsquo;t be true if we included a &lt;code&gt;break&lt;/code&gt;, because the loop would terminate when it got to the &lt;code&gt;break&lt;/code&gt;.</source>
          <target state="translated">여기서 루프는 끝나지 않습니다 &lt;code&gt;!&lt;/code&gt; 식의 값입니다. 우리가 포함 된 경우,이 사실이되지 않을 것 &lt;code&gt;break&lt;/code&gt; 가 도착했을 때 루프가 종료 때문에, &lt;code&gt;break&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df47ee6ed5cabbf7215bb10c59a544458415fee2" translate="yes" xml:space="preserve">
          <source>Here, the problem is that a reference type like &lt;code&gt;&amp;amp;'a T&lt;/code&gt; is only valid if all the data in T outlives the lifetime &lt;code&gt;'a&lt;/code&gt;. But this impl as written is applicable to any lifetime &lt;code&gt;'a&lt;/code&gt; and any type &lt;code&gt;T&lt;/code&gt; -- we have no guarantee that &lt;code&gt;T&lt;/code&gt; outlives &lt;code&gt;'a&lt;/code&gt;. To fix this, you can add a where clause like &lt;code&gt;where T: 'a&lt;/code&gt;.</source>
          <target state="translated">여기서 문제는 &lt;code&gt;&amp;amp;'a T&lt;/code&gt; 와 같은 참조 유형 이 T의 모든 데이터가 수명 &lt;code&gt;'a&lt;/code&gt; 보다 오래 지속되는 경우에만 유효하다는 것 입니다. 그러나 작성된이 IMPL은 평생에 적용 할 수있다 &lt;code&gt;'a&lt;/code&gt; 어떤 타입의 &lt;code&gt;T&lt;/code&gt; - 우리는 보장이 없다는 &lt;code&gt;T&lt;/code&gt; 의 들보 다 오래 남았습니다 &lt;code&gt;'a&lt;/code&gt; . 이 문제를 해결하기 위해 &lt;code&gt;where T: 'a&lt;/code&gt; 와 같은 where 절을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d0ef28f4a5284b6e2516b2e042ed2f018d33a029" translate="yes" xml:space="preserve">
          <source>Here, the problem is that the compiler cannot be sure that the &lt;code&gt;'b&lt;/code&gt; lifetime will live longer than &lt;code&gt;'a&lt;/code&gt;, which should be mandatory in order to be sure that &lt;code&gt;Trait::Out&lt;/code&gt; will always have a reference pointing to an existing type. So in this case, we just need to tell the compiler than &lt;code&gt;'b&lt;/code&gt; must outlive &lt;code&gt;'a&lt;/code&gt;:</source>
          <target state="translated">여기에서 문제는 컴파일러가 있는지 확인하는 것이 될 수 없다는 것입니다 &lt;code&gt;'b&lt;/code&gt; 수명보다 더 오래 살 것이다 &lt;code&gt;'a&lt;/code&gt; 있는지 확인하기 위해 의무적으로해야하는 &lt;code&gt;Trait::Out&lt;/code&gt; 항상 기존의 유형에 대한 참조를 가리키는 것입니다. 따라서이 경우 컴파일러에게 &lt;code&gt;'b&lt;/code&gt; 는 'a 보다 오래 살아야한다 &lt;code&gt;'a&lt;/code&gt; 알려 주면됩니다 .</target>
        </trans-unit>
        <trans-unit id="362d656c8582920eb1fa6e2f837dcd77621e2783" translate="yes" xml:space="preserve">
          <source>Here, the supertrait might have methods as follows:</source>
          <target state="translated">여기에서, 초 특성은 다음과 같은 방법을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09d377b97ceff52f388bef9d69ecd4e08de82e8e" translate="yes" xml:space="preserve">
          <source>Here, the type of &lt;code&gt;bar&lt;/code&gt; isn't known; it could be a pointer to anything. Instead, specify a type for the pointer (preferably something that makes sense for the thing you're pointing to):</source>
          <target state="translated">여기, &lt;code&gt;bar&lt;/code&gt; 의 종류 알려져 있지 않습니다. 그것은 무엇이든에 대한 포인터 일 수 있습니다. 대신 포인터의 유형을 지정하십시오 (바람직하게 가리키는 대상).</target>
        </trans-unit>
        <trans-unit id="6683d46fded95c67df0b49024b3446d80dd204a6" translate="yes" xml:space="preserve">
          <source>Here, the where clause &lt;code&gt;T: 'a&lt;/code&gt; that appears on the impl is not known to be satisfied on the struct. To make this example compile, you have to add a where-clause like &lt;code&gt;T: 'a&lt;/code&gt; to the struct definition:</source>
          <target state="translated">여기서 impl에 나타나는 where 절 &lt;code&gt;T: 'a&lt;/code&gt; 는 구조체에서 충족되는 것으로 알려져 있지 않습니다. 이 예제를 컴파일하려면 구조체 정의에 &lt;code&gt;T: 'a&lt;/code&gt; 와 같은 where-clause를 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5f5bdb12ef17925552b810b20339fc4188e58923" translate="yes" xml:space="preserve">
          <source>Here, there's no need to allocate more memory inside the loop.</source>
          <target state="translated">루프 내부에 더 많은 메모리를 할당 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="64f50e4beb0199dca819447bd86bfb2e950cfebb" translate="yes" xml:space="preserve">
          <source>Here, transmute is being used to convert the types of the fn arguments. This pattern is incorrect because, because the type of &lt;code&gt;foo&lt;/code&gt; is a function &lt;strong&gt;item&lt;/strong&gt; (&lt;code&gt;typeof(foo)&lt;/code&gt;), which is zero-sized, and the target type (&lt;code&gt;fn()&lt;/code&gt;) is a function pointer, which is not zero-sized. This pattern should be rewritten. There are a few possible ways to do this:</source>
          <target state="translated">여기서 변환은 fn 인수의 유형을 변환하는 데 사용됩니다. 이 패턴은 &lt;code&gt;foo&lt;/code&gt; 의 유형이 크기가 0 인 함수 &lt;strong&gt;항목&lt;/strong&gt; ( &lt;code&gt;typeof(foo)&lt;/code&gt; )이고 대상 유형 ( &lt;code&gt;fn()&lt;/code&gt; )이 0이 아닌 함수 포인터이기 때문에 올바르지 않습니다. 이 패턴을 다시 작성해야합니다. 이를 수행 할 수있는 몇 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="11f7e7a9427d5e270e6bb9180be033e23a1b7abb" translate="yes" xml:space="preserve">
          <source>Here, we are still borrowing &lt;code&gt;foo()&lt;/code&gt;, but as the borrow is assigned directly into a variable, the temporary will not be dropped until the end of the enclosing block. Similar rules apply when temporaries are stored into aggregate structures like a tuple or struct:</source>
          <target state="translated">여기서 우리는 여전히 &lt;code&gt;foo()&lt;/code&gt; 빌리고 있지만, 빌려 오기가 변수에 직접 할당되기 때문에 임시 블록은 둘러싸는 블록이 끝날 때까지 삭제되지 않습니다. 임시 규칙이 튜플 또는 구조체와 같은 집계 구조에 저장 될 때 유사한 규칙이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="2fe93444419186b520c70f702a92a3495d890ab8" translate="yes" xml:space="preserve">
          <source>Here, we create a new variable &lt;code&gt;case_sensitive&lt;/code&gt;. To set its value, we call the &lt;code&gt;env::var&lt;/code&gt; function and pass it the name of the &lt;code&gt;CASE_INSENSITIVE&lt;/code&gt; environment variable. The &lt;code&gt;env::var&lt;/code&gt; function returns a &lt;code&gt;Result&lt;/code&gt; that will be the successful &lt;code&gt;Ok&lt;/code&gt; variant that contains the value of the environment variable if the environment variable is set. It will return the &lt;code&gt;Err&lt;/code&gt; variant if the environment variable is not set.</source>
          <target state="translated">여기에 새로운 변수 &lt;code&gt;case_sensitive&lt;/code&gt; 를 만듭니다 . 값을 설정하기 위해 &lt;code&gt;env::var&lt;/code&gt; 함수를 호출 하고 &lt;code&gt;CASE_INSENSITIVE&lt;/code&gt; 환경 변수 의 이름을 전달합니다 . &lt;code&gt;env::var&lt;/code&gt; 함수는 반환 &lt;code&gt;Result&lt;/code&gt; 성공적으로 될 것입니다 &lt;code&gt;Ok&lt;/code&gt; 환경 변수가 설정되어있는 경우 환경 변수의 값을 포함 변형. 환경 변수가 설정되지 않은 경우 &lt;code&gt;Err&lt;/code&gt; 변형 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="629de8d4fd404424f68755750d18203229995313" translate="yes" xml:space="preserve">
          <source>Here, we declare a trait using the &lt;code&gt;trait&lt;/code&gt; keyword and then the trait&amp;rsquo;s name, which is &lt;code&gt;Summary&lt;/code&gt; in this case. Inside the curly brackets, we declare the method signatures that describe the behaviors of the types that implement this trait, which in this case is &lt;code&gt;fn summarize(&amp;amp;self) -&amp;gt; String&lt;/code&gt;.</source>
          <target state="translated">여기서는 &lt;code&gt;trait&lt;/code&gt; 키워드를 사용하여 특성을 선언 한 다음 특성의 이름 ( 이 경우 &lt;code&gt;Summary&lt;/code&gt; 을 선언합니다 . 중괄호 안에이 특성을 구현하는 유형의 동작을 설명하는 메소드 시그니처를 선언합니다.이 경우 &lt;code&gt;fn summarize(&amp;amp;self) -&amp;gt; String&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d5d31c7a816695d5663a1af214bdd61a0f312631" translate="yes" xml:space="preserve">
          <source>Here, we first call &lt;code&gt;lock&lt;/code&gt; on the &lt;code&gt;receiver&lt;/code&gt; to acquire the mutex, and then we call &lt;code&gt;unwrap&lt;/code&gt; to panic on any errors. Acquiring a lock might fail if the mutex is in a &lt;em&gt;poisoned&lt;/em&gt; state, which can happen if some other thread panicked while holding the lock rather than releasing the lock. In this situation, calling &lt;code&gt;unwrap&lt;/code&gt; to have this thread panic is the correct action to take. Feel free to change this &lt;code&gt;unwrap&lt;/code&gt; to an &lt;code&gt;expect&lt;/code&gt; with an error message that is meaningful to you.</source>
          <target state="translated">먼저 &lt;code&gt;receiver&lt;/code&gt; 에서 &lt;code&gt;lock&lt;/code&gt; 을 호출 하여 뮤텍스를 얻은 다음 &lt;code&gt;unwrap&lt;/code&gt; 을 호출 하여 오류가 발생하면 패닉 상태가됩니다. 뮤텍스가 &lt;em&gt;독&lt;/em&gt; 상태 인 경우 잠금을 획득하지 못할 수 있습니다. 잠금을 해제하지 않고 잠금을 잡고있는 동안 다른 스레드가 당황한 경우 발생할 수 있습니다. 이 상황에서 &lt;code&gt;unwrap&lt;/code&gt; 을 호출 하여이 스레드 패닉이 발생하도록하는 것이 올바른 조치입니다. 의미있는 오류 메시지와 함께이 &lt;code&gt;unwrap&lt;/code&gt; 를 &lt;code&gt;expect&lt;/code&gt; 대로 변경하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="90ed3acfd08d6add91c92898299f8f082c9b0a5d" translate="yes" xml:space="preserve">
          <source>Here, we give a description of what the &lt;code&gt;add_one&lt;/code&gt; function does, start a section with the heading &lt;code&gt;Examples&lt;/code&gt;, and then provide code that demonstrates how to use the &lt;code&gt;add_one&lt;/code&gt; function. We can generate the HTML documentation from this documentation comment by running &lt;code&gt;cargo doc&lt;/code&gt;. This command runs the &lt;code&gt;rustdoc&lt;/code&gt; tool distributed with Rust and puts the generated HTML documentation in the &lt;em&gt;target/doc&lt;/em&gt; directory.</source>
          <target state="translated">여기에서는 &lt;code&gt;add_one&lt;/code&gt; 함수의 기능에 대한 설명 을 제공 하고 제목 &lt;code&gt;Examples&lt;/code&gt; 로 섹션을 시작한 다음 &lt;code&gt;add_one&lt;/code&gt; 함수 를 사용하는 방법을 보여주는 코드를 제공 합니다. &lt;code&gt;cargo doc&lt;/code&gt; 을 실행하여이 문서 주석에서 HTML 문서를 생성 할 수 있습니다 . 이 명령은 Rust와 함께 배포 된 &lt;code&gt;rustdoc&lt;/code&gt; 도구를 실행하고 생성 된 HTML 문서를 &lt;em&gt;target / doc&lt;/em&gt; 디렉토리 에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="509084bc1cc2854ecab3677678733d63bccc2260" translate="yes" xml:space="preserve">
          <source>Here, we have a package that only contains &lt;em&gt;src/main.rs&lt;/em&gt;, meaning it only contains a binary crate named &lt;code&gt;my-project&lt;/code&gt;. If a package contains &lt;em&gt;src/main.rs&lt;/em&gt; and &lt;em&gt;src/lib.rs&lt;/em&gt;, it has two crates: a library and a binary, both with the same name as the package. A package can have multiple binary crates by placing files in the &lt;em&gt;src/bin&lt;/em&gt; directory: each file will be a separate binary crate.</source>
          <target state="translated">여기에는 &lt;em&gt;src / main.rs&lt;/em&gt; 만 포함하는 패키지가 있습니다 . 즉, &lt;code&gt;my-project&lt;/code&gt; 라는 이진 상자 만 포함합니다 . 패키지에 &lt;em&gt;src / main.rs&lt;/em&gt; 및 &lt;em&gt;src / lib.rs&lt;/em&gt; 가 포함 된 경우 패키지 와 이름이 같은 라이브러리와 바이너리라는 두 개의 상자가 있습니다. 패키지는 &lt;em&gt;src / bin&lt;/em&gt; 디렉토리에 파일을 배치하여 여러 바이너리 상자를 가질 수 있습니다 . 각 파일은 별도의 바이너리 상자입니다.</target>
        </trans-unit>
        <trans-unit id="214685b848acbf415bb3dbd9186c1466aa631aa7" translate="yes" xml:space="preserve">
          <source>Here, we have two parameters of type &lt;code&gt;TokenStream&lt;/code&gt;. The first is for the contents of the attribute: the &lt;code&gt;GET, &quot;/&quot;&lt;/code&gt; part. The second is the body of the item the attribute is attached to: in this case, &lt;code&gt;fn index() {}&lt;/code&gt; and the rest of the function&amp;rsquo;s body.</source>
          <target state="translated">여기에는 &lt;code&gt;TokenStream&lt;/code&gt; 유형의 두 매개 변수가 있습니다 . 첫 번째는 속성의 내용 인 &lt;code&gt;GET, &quot;/&quot;&lt;/code&gt; 부분입니다. 두 번째는 속성이 첨부 된 항목의 본문입니다.이 경우 &lt;code&gt;fn index() {}&lt;/code&gt; 및 나머지 함수의 본문입니다.</target>
        </trans-unit>
        <trans-unit id="9da25d2edfbc8a834054d09a3a531a79272bf467" translate="yes" xml:space="preserve">
          <source>Here, we match a tuple against a pattern. Rust compares the value &lt;code&gt;(1, 2, 3)&lt;/code&gt; to the pattern &lt;code&gt;(x, y, z)&lt;/code&gt; and sees that the value matches the pattern, so Rust binds &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; to &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;3&lt;/code&gt; to &lt;code&gt;z&lt;/code&gt;. You can think of this tuple pattern as nesting three individual variable patterns inside it.</source>
          <target state="translated">여기서 우리는 패턴과 튜플을 일치시킵니다. Rust는 값 &lt;code&gt;(1, 2, 3)&lt;/code&gt; 을 패턴 &lt;code&gt;(x, y, z)&lt;/code&gt; 와 비교하고 값이 패턴과 일치하는 것을 확인하므로 Rust는 &lt;code&gt;1&lt;/code&gt; 을 &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;2&lt;/code&gt; 를 &lt;code&gt;y&lt;/code&gt; , &lt;code&gt;3&lt;/code&gt; 을 &lt;code&gt;z&lt;/code&gt; 에 바인딩 합니다. 이 튜플 패턴은 그 안에 세 개의 개별 변수 패턴을 중첩시키는 것으로 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3807aec2b6a72b122da57a852fc8dc8b9b746c8b" translate="yes" xml:space="preserve">
          <source>Here, we tried to move a field out of a struct of type &lt;code&gt;DropStruct&lt;/code&gt; which implements the &lt;code&gt;Drop&lt;/code&gt; trait. However, a struct cannot be dropped if one or more of its fields have been moved.</source>
          <target state="translated">여기에서는 &lt;code&gt;Drop&lt;/code&gt; 특성 을 구현하는 &lt;code&gt;DropStruct&lt;/code&gt; 유형의 구조체에서 필드를 이동하려고했습니다 . 그러나 하나 이상의 필드가 이동 된 경우 구조체를 삭제할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="182fd49127f0c327471148134a76b7aecc6837c0" translate="yes" xml:space="preserve">
          <source>Here, we try to print &lt;code&gt;val&lt;/code&gt; after we&amp;rsquo;ve sent it down the channel via &lt;code&gt;tx.send&lt;/code&gt;. Allowing this would be a bad idea: once the value has been sent to another thread, that thread could modify or drop it before we try to use the value again. Potentially, the other thread&amp;rsquo;s modifications could cause errors or unexpected results due to inconsistent or nonexistent data. However, Rust gives us an error if we try to compile the code in Listing 16-9:</source>
          <target state="translated">여기에서는 &lt;code&gt;tx.send&lt;/code&gt; 를 통해 &lt;code&gt;val&lt;/code&gt; 을 채널로 보낸 후에 val 을 인쇄하려고합니다 . 이것을 허용하는 것은 나쁜 생각입니다. 일단 값이 다른 스레드로 보내지면 값을 다시 사용하기 전에 해당 스레드가 수정하거나 삭제할 수 있습니다. 잠재적으로 다른 스레드의 수정으로 인해 데이터가 일치하지 않거나 존재하지 않아 오류가 발생하거나 예기치 않은 결과가 발생할 수 있습니다. 그러나 Listing 16-9의 코드를 컴파일하려고하면 Rust에서 오류가 발생한다.</target>
        </trans-unit>
        <trans-unit id="e6e942400049c5831b3b39dbc83c98fc061c7f27" translate="yes" xml:space="preserve">
          <source>Here, we&amp;rsquo;ll work up to a program that has one thread to generate values and send them down a channel, and another thread that will receive the values and print them out. We&amp;rsquo;ll be sending simple values between threads using a channel to illustrate the feature. Once you&amp;rsquo;re familiar with the technique, you could use channels to implement a chat system or a system where many threads perform parts of a calculation and send the parts to one thread that aggregates the results.</source>
          <target state="translated">여기서 우리는 하나의 스레드가 값을 생성하여 채널로 전송하고 다른 스레드가 값을 수신하여 인쇄하는 프로그램으로 작업합니다. 기능을 설명하기 위해 채널을 사용하여 스레드간에 간단한 값을 전송합니다. 이 기술에 익숙해지면 채널을 사용하여 많은 스레드가 계산의 일부를 수행하고 결과를 집계하는 하나의 스레드로 부품을 보내는 채팅 시스템 또는 시스템을 구현할 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
