<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="a08d2f909e3471cb46b8a263e7a79e40988f96a3" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;#method.wrapping_offset_from-1&quot;&gt;&lt;code&gt;wrapping_offset_from&lt;/code&gt;&lt;/a&gt; instead if these constraints are difficult to satisfy. The only advantage of this method is that it enables more aggressive compiler optimizations.</source>
          <target state="translated">이러한 제약 조건을 충족하기 어려운 경우 &lt;a href=&quot;#method.wrapping_offset_from-1&quot;&gt; &lt;code&gt;wrapping_offset_from&lt;/code&gt; 을&lt;/a&gt; 대신 사용하십시오 . 이 방법의 유일한 장점은보다 적극적인 컴파일러 최적화가 가능하다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="65d198018283c93c0267e587cca86d0d7357db30" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;#method.wrapping_sub&quot;&gt;&lt;code&gt;wrapping_sub&lt;/code&gt;&lt;/a&gt; instead if these constraints are difficult to satisfy. The only advantage of this method is that it enables more aggressive compiler optimizations.</source>
          <target state="translated">사용을 고려 &lt;a href=&quot;#method.wrapping_sub&quot;&gt; &lt;code&gt;wrapping_sub&lt;/code&gt; 을&lt;/a&gt; 이러한 제약이 만족하기 어려운 경우 대신. 이 방법의 유일한 장점은보다 적극적인 컴파일러 최적화를 가능하게한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9b58c27d06e5f1986ad262fff1b7389d609781af" translate="yes" xml:space="preserve">
          <source>Consider using &lt;code&gt;wrapping_offset&lt;/code&gt; instead if these constraints are difficult to satisfy. The only advantage of this method is that it enables more aggressive compiler optimizations.</source>
          <target state="translated">이러한 제약 조건을 충족하기 어려운 경우 &lt;code&gt;wrapping_offset&lt;/code&gt; 을 대신 사용하십시오 . 이 방법의 유일한 장점은보다 적극적인 컴파일러 최적화가 가능하다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="660c7402d5b39240c9ee5b94d156a17dab59cd5a" translate="yes" xml:space="preserve">
          <source>Consider using the &lt;a href=&quot;#method.reserve&quot;&gt;&lt;code&gt;reserve&lt;/code&gt;&lt;/a&gt; method unless you absolutely know better than the allocator.</source>
          <target state="translated">할당 자보다 완전히 알지 않는 한 &lt;a href=&quot;#method.reserve&quot;&gt; &lt;code&gt;reserve&lt;/code&gt; &lt;/a&gt; 방법을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="fe8273b7e7cc7bc905bf73cc0b6d0980b0367132" translate="yes" xml:space="preserve">
          <source>Consider using the &lt;a href=&quot;struct.string#method.reserve&quot;&gt;&lt;code&gt;reserve&lt;/code&gt;&lt;/a&gt; method unless you absolutely know better than the allocator.</source>
          <target state="translated">할당 자보다 더 잘 아는 경우가 아니면 &lt;a href=&quot;struct.string#method.reserve&quot;&gt; &lt;code&gt;reserve&lt;/code&gt; &lt;/a&gt; 방법 사용을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="d37f53c75fe6e4ec1ab1b84dc3a54c790b0951e8" translate="yes" xml:space="preserve">
          <source>Considering that this would be a long explanation, we instead recommend you take a look at the [&lt;code&gt;llvm_asm&lt;/code&gt;] chapter of the Unstable book:</source>
          <target state="translated">이것이 긴 설명이라는 점을 고려하여 대신 Unstable 책 의 [ &lt;code&gt;llvm_asm&lt;/code&gt; ] 장을 살펴 보는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="d838b82b17961bfee7f71761e1fd256b67208735" translate="yes" xml:space="preserve">
          <source>Const Functions</source>
          <target state="translated">Const 함수</target>
        </trans-unit>
        <trans-unit id="ed5f0c3cd562db1b4fd164b24577eb8734b5fffb" translate="yes" xml:space="preserve">
          <source>Const context</source>
          <target state="translated">콘 스트 컨텍스트</target>
        </trans-unit>
        <trans-unit id="fe5251cbe2e5db401d2fb8f972d0d353e63508e2" translate="yes" xml:space="preserve">
          <source>Const functions</source>
          <target state="translated">Const 기능</target>
        </trans-unit>
        <trans-unit id="cd6d1befcab0193321d9a8f3edb9f3035f40a481" translate="yes" xml:space="preserve">
          <source>Const functions have various restrictions to make sure that they can be evaluated at compile-time. It is, for example, not possible to write a random number generator as a const function. Calling a const function at compile-time will always yield the same result as calling it at runtime, even when called multiple times. There's one exception to this rule: if you are doing complex floating point operations in extreme situations, then you might get (very slightly) different results. It is advisable to not make array lengths and enum discriminants depend on floating point computations.</source>
          <target state="translated">Const 함수에는 컴파일 타임에 평가할 수 있도록 다양한 제한이 있습니다. 예를 들어, 난수 생성기를 const 함수로 작성할 수 없습니다. 컴파일 타임에 const 함수를 호출하면 여러 번 호출 된 경우에도 런타임에 호출하는 것과 항상 동일한 결과가 생성됩니다. 이 규칙에는 한 가지 예외가 있습니다. 극한 상황에서 복잡한 부동 소수점 연산을 수행하는 경우 (매우 약간) 다른 결과를 얻을 수 있습니다. 배열 길이와 열거 형 판별자를 부동 소수점 계산에 의존하지 않도록하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0f200028183cbf172a5fb978b74ba682ab57b271" translate="yes" xml:space="preserve">
          <source>Const intrinsics</source>
          <target state="translated">상수 내장 함수</target>
        </trans-unit>
        <trans-unit id="4f010fe7613d402114b33648d674fa1ee1f8ed10" translate="yes" xml:space="preserve">
          <source>Const parameters cannot depend on type parameters. The following is therefore invalid:</source>
          <target state="translated">Const 매개 변수는 유형 매개 변수에 의존 할 수 없습니다. 따라서 다음은 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e58d8b6f4812bf1c50839e8e7a477e7a94ce8524" translate="yes" xml:space="preserve">
          <source>Constant evaluation</source>
          <target state="translated">지속적인 평가</target>
        </trans-unit>
        <trans-unit id="d481b6bf166fb8c1f9b0f6eb1e60d3a487522ae3" translate="yes" xml:space="preserve">
          <source>Constant evaluation is the process of computing the result of &lt;a href=&quot;expressions&quot;&gt;expressions&lt;/a&gt; during compilation. Only a subset of all expressions can be evaluated at compile-time.</source>
          <target state="translated">상수 평가는 컴파일 &lt;a href=&quot;expressions&quot;&gt;하는&lt;/a&gt; 동안 표현식 결과를 계산하는 프로세스입니다 . 컴파일시 모든 표현식의 서브 세트 만 평가할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01f3d0f48081336b622122d8a98fa589e08cae6c" translate="yes" xml:space="preserve">
          <source>Constant expressions</source>
          <target state="translated">상수 표현식</target>
        </trans-unit>
        <trans-unit id="8acb60e86187bcf5db1b2debeee7ee1064c11ce1" translate="yes" xml:space="preserve">
          <source>Constant items</source>
          <target state="translated">상수 아이템</target>
        </trans-unit>
        <trans-unit id="97bc31a9a5e21a9ae0468be81bf3783159ae84ec" translate="yes" xml:space="preserve">
          <source>Constant promotion</source>
          <target state="translated">지속적인 승진</target>
        </trans-unit>
        <trans-unit id="1e50a126ace8eddbc45729ad5924fe44c40085dd" translate="yes" xml:space="preserve">
          <source>Constant std::char::MAX</source>
          <target state="translated">상수 std :: char :: MAX</target>
        </trans-unit>
        <trans-unit id="007ca025a968277252799218ac2455c8b750153a" translate="yes" xml:space="preserve">
          <source>Constant std::char::REPLACEMENT_CHARACTER</source>
          <target state="translated">상수 std :: char :: REPLACEMENT_CHARACTER</target>
        </trans-unit>
        <trans-unit id="9b95e97f0785ad804f15f770186f949d067ca368" translate="yes" xml:space="preserve">
          <source>Constant std::char::UNICODE_VERSION</source>
          <target state="translated">상수 std :: char :: UNICODE_VERSION</target>
        </trans-unit>
        <trans-unit id="c0e725499fb94aa02784739c35063180ed9136a5" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::ARCH</source>
          <target state="translated">상수 std :: env :: consts :: ARCH</target>
        </trans-unit>
        <trans-unit id="d139716e78c552889eb5b55b825dc149778179f6" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::DLL_EXTENSION</source>
          <target state="translated">상수 std :: env :: consts :: DLL_EXTENSION</target>
        </trans-unit>
        <trans-unit id="c6a55937345cfab1b3b6ea054770f95cbf526879" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::DLL_PREFIX</source>
          <target state="translated">상수 std :: env :: consts :: DLL_PREFIX</target>
        </trans-unit>
        <trans-unit id="3015dc2e17a3e8dd2a835e301dfb946d034e682e" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::DLL_SUFFIX</source>
          <target state="translated">상수 std :: env :: consts :: DLL_SUFFIX</target>
        </trans-unit>
        <trans-unit id="df78b1d313faea234e10c9a7250a63fc6f62c4b2" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::EXE_EXTENSION</source>
          <target state="translated">상수 std :: env :: consts :: EXE_EXTENSION</target>
        </trans-unit>
        <trans-unit id="277462e5742c2761111a19e463369307c6796c64" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::EXE_SUFFIX</source>
          <target state="translated">상수 std :: env :: consts :: EXE_SUFFIX</target>
        </trans-unit>
        <trans-unit id="1b4794bfd538a2f073a5010660cf3d1c405c4347" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::FAMILY</source>
          <target state="translated">상수 std :: env :: consts :: FAMILY</target>
        </trans-unit>
        <trans-unit id="7de7334275f48d3c50010becbb818925177a3ea9" translate="yes" xml:space="preserve">
          <source>Constant std::env::consts::OS</source>
          <target state="translated">상수 std :: env :: consts :: OS</target>
        </trans-unit>
        <trans-unit id="99645f0b3b11ce4f96e16b3edce290f31955eab9" translate="yes" xml:space="preserve">
          <source>Constant std::f32::DIGITS</source>
          <target state="translated">상수 std :: f32 :: DIGITS</target>
        </trans-unit>
        <trans-unit id="c0db867a66e07455025232c700d249a4cec65b69" translate="yes" xml:space="preserve">
          <source>Constant std::f32::EPSILON</source>
          <target state="translated">상수 std :: f32 :: EPSILON</target>
        </trans-unit>
        <trans-unit id="9f9819354017bdba868f791ed792c4a20bf1b088" translate="yes" xml:space="preserve">
          <source>Constant std::f32::INFINITY</source>
          <target state="translated">상수 std :: f32 :: INFINITY</target>
        </trans-unit>
        <trans-unit id="8efb766c071e9e43f6fbf374665e0c37d47eac0f" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MANTISSA_DIGITS</source>
          <target state="translated">상수 std :: f32 :: MANTISSA_DIGITS</target>
        </trans-unit>
        <trans-unit id="38fed7e2da2a001d94df205818f1e6c8164bbb37" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MAX</source>
          <target state="translated">상수 std :: f32 :: MAX</target>
        </trans-unit>
        <trans-unit id="c308d4f06079dadb21f0b31f4304cd7e9a2ab912" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MAX_10_EXP</source>
          <target state="translated">상수 std :: f32 :: MAX_10_EXP</target>
        </trans-unit>
        <trans-unit id="f0d909971db166372d6419197c849dbde3e6a342" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MAX_EXP</source>
          <target state="translated">상수 std :: f32 :: MAX_EXP</target>
        </trans-unit>
        <trans-unit id="8cef46f94fb043277f777fdb0c396836f1066f8d" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MIN</source>
          <target state="translated">상수 std :: f32 :: MIN</target>
        </trans-unit>
        <trans-unit id="1da87a8c8d52c00db57a59c30c397721231d1398" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MIN_10_EXP</source>
          <target state="translated">상수 std :: f32 :: MIN_10_EXP</target>
        </trans-unit>
        <trans-unit id="2ba496ec77981eef08a2d6362e980c6ccdcf72b4" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MIN_EXP</source>
          <target state="translated">상수 std :: f32 :: MIN_EXP</target>
        </trans-unit>
        <trans-unit id="493df668eafd9ccd4fb0b75e01531ae811d252ce" translate="yes" xml:space="preserve">
          <source>Constant std::f32::MIN_POSITIVE</source>
          <target state="translated">상수 std :: f32 :: MIN_POSITIVE</target>
        </trans-unit>
        <trans-unit id="39affa81157864d20786617d730536186a0f1442" translate="yes" xml:space="preserve">
          <source>Constant std::f32::NAN</source>
          <target state="translated">상수 std :: f32 :: NAN</target>
        </trans-unit>
        <trans-unit id="dab2aed8deb57c0da7b1d07c2cb30c88bc795140" translate="yes" xml:space="preserve">
          <source>Constant std::f32::NEG_INFINITY</source>
          <target state="translated">상수 std :: f32 :: NEG_INFINITY</target>
        </trans-unit>
        <trans-unit id="2ed61c5307e3e3d9f33aefc98d8b0e2e9501ad87" translate="yes" xml:space="preserve">
          <source>Constant std::f32::RADIX</source>
          <target state="translated">상수 std :: f32 :: RADIX</target>
        </trans-unit>
        <trans-unit id="8281d34f3bc25934d728e91edb05aef1b24af8a4" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::E</source>
          <target state="translated">상수 std :: f32 :: consts :: E</target>
        </trans-unit>
        <trans-unit id="173d921fd5e0d8dcfb45b3638bc3ae177c4c6915" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_1_PI</source>
          <target state="translated">상수 std :: f32 :: consts :: FRAC_1_PI</target>
        </trans-unit>
        <trans-unit id="9ae5c6129baf3787e97f464c3aee5522a0b57b36" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_1_SQRT_2</source>
          <target state="translated">상수 std :: f32 :: consts :: FRAC_1_SQRT_2</target>
        </trans-unit>
        <trans-unit id="5f36bf0366127c3e4989b5e2276c8fb48352bd91" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_2_PI</source>
          <target state="translated">상수 std :: f32 :: consts :: FRAC_2_PI</target>
        </trans-unit>
        <trans-unit id="54d429d79fc6a7f81e7a91b9494e54a0871efe2c" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_2_SQRT_PI</source>
          <target state="translated">상수 std :: f32 :: consts :: FRAC_2_SQRT_PI</target>
        </trans-unit>
        <trans-unit id="c2ef3e6ebd230f70e6c36d3bfd9d6c8d74b116ad" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_PI_2</source>
          <target state="translated">상수 std :: f32 :: consts :: FRAC_PI_2</target>
        </trans-unit>
        <trans-unit id="608f2df0928254ac3a17043c63aad1986468a7e2" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_PI_3</source>
          <target state="translated">상수 std :: f32 :: consts :: FRAC_PI_3</target>
        </trans-unit>
        <trans-unit id="a13c88d5d98b7c04fd4c60c9a655da11db4e0c36" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_PI_4</source>
          <target state="translated">상수 std :: f32 :: consts :: FRAC_PI_4</target>
        </trans-unit>
        <trans-unit id="f4e7ed08df1870f6dddc8143eabe4faf65cf2069" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_PI_6</source>
          <target state="translated">상수 std :: f32 :: consts :: FRAC_PI_6</target>
        </trans-unit>
        <trans-unit id="928c7891c26b829f56b58b9164edaa74486fb550" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::FRAC_PI_8</source>
          <target state="translated">상수 std :: f32 :: consts :: FRAC_PI_8</target>
        </trans-unit>
        <trans-unit id="00f74c0d0ca5a180e17767df1f6eee30bd305ea2" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::LN_10</source>
          <target state="translated">상수 std :: f32 :: consts :: LN_10</target>
        </trans-unit>
        <trans-unit id="4c99cb86f3f68320f7abe388a7dc4e7f111ea9fe" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::LN_2</source>
          <target state="translated">상수 std :: f32 :: consts :: LN_2</target>
        </trans-unit>
        <trans-unit id="9603421e7f8e7ea58346016741b1063ffe3db8cb" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::LOG10_2</source>
          <target state="translated">상수 std :: f32 :: consts :: LOG10_2</target>
        </trans-unit>
        <trans-unit id="3a84cfea549fd7c4ce4e5896d19d4b1c7f6e7526" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::LOG10_E</source>
          <target state="translated">상수 std :: f32 :: consts :: LOG10_E</target>
        </trans-unit>
        <trans-unit id="5cee39948a35cdbd4ac289de2aabfd99a89aa0d1" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::LOG2_10</source>
          <target state="translated">상수 std :: f32 :: consts :: LOG2_10</target>
        </trans-unit>
        <trans-unit id="9c9073a69193fe4d4879a66ef3b1b446bf93d4db" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::LOG2_E</source>
          <target state="translated">상수 std :: f32 :: consts :: LOG2_E</target>
        </trans-unit>
        <trans-unit id="d6b3e621590d46dcb08b535799b24bba03666e30" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::PI</source>
          <target state="translated">상수 std :: f32 :: consts :: PI</target>
        </trans-unit>
        <trans-unit id="d29028b92ab3261e610480fa4cdd7859dcf230f6" translate="yes" xml:space="preserve">
          <source>Constant std::f32::consts::SQRT_2</source>
          <target state="translated">상수 std :: f32 :: consts :: SQRT_2</target>
        </trans-unit>
        <trans-unit id="991a7522cc9e96d217b7fd2d614c6a7b52687f0b" translate="yes" xml:space="preserve">
          <source>Constant std::f64::DIGITS</source>
          <target state="translated">상수 std :: f64 :: DIGITS</target>
        </trans-unit>
        <trans-unit id="6d0f7b631c6f3a7a7f9c0f1b34b47d4128f03ee2" translate="yes" xml:space="preserve">
          <source>Constant std::f64::EPSILON</source>
          <target state="translated">상수 std :: f64 :: EPSILON</target>
        </trans-unit>
        <trans-unit id="2d15e3787404a88bf37c936aa13f65e547359626" translate="yes" xml:space="preserve">
          <source>Constant std::f64::INFINITY</source>
          <target state="translated">상수 std :: f64 :: INFINITY</target>
        </trans-unit>
        <trans-unit id="c9274539051c92d6c851fd164bc9eeabb28f04c9" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MANTISSA_DIGITS</source>
          <target state="translated">상수 std :: f64 :: MANTISSA_DIGITS</target>
        </trans-unit>
        <trans-unit id="a42a6b009f4a5e0fec49978b9fce72ebe1745c3d" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MAX</source>
          <target state="translated">상수 std :: f64 :: MAX</target>
        </trans-unit>
        <trans-unit id="1dd83a4500474d6790decd97aa52dc3684344d6d" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MAX_10_EXP</source>
          <target state="translated">상수 std :: f64 :: MAX_10_EXP</target>
        </trans-unit>
        <trans-unit id="d8d1677fa6f41eb6f83c4141d1f2401385366595" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MAX_EXP</source>
          <target state="translated">상수 std :: f64 :: MAX_EXP</target>
        </trans-unit>
        <trans-unit id="f50cd4f49988d14c076a605457b52cff007c4971" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MIN</source>
          <target state="translated">상수 std :: f64 :: MIN</target>
        </trans-unit>
        <trans-unit id="baa285d22bb3493c83396c7ed0a328830f297c03" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MIN_10_EXP</source>
          <target state="translated">상수 std :: f64 :: MIN_10_EXP</target>
        </trans-unit>
        <trans-unit id="cf5f7e123d639e53544e1b80a92f314281a1860d" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MIN_EXP</source>
          <target state="translated">상수 std :: f64 :: MIN_EXP</target>
        </trans-unit>
        <trans-unit id="5a79de3dea87b86db581ad61d5299ccdd6f91846" translate="yes" xml:space="preserve">
          <source>Constant std::f64::MIN_POSITIVE</source>
          <target state="translated">상수 std :: f64 :: MIN_POSITIVE</target>
        </trans-unit>
        <trans-unit id="730afd108830ede47a9899934ee7b80b5db76c8b" translate="yes" xml:space="preserve">
          <source>Constant std::f64::NAN</source>
          <target state="translated">상수 std :: f64 :: NAN</target>
        </trans-unit>
        <trans-unit id="ec4fb2112702d9cde3817100f0585576ec4ea2e1" translate="yes" xml:space="preserve">
          <source>Constant std::f64::NEG_INFINITY</source>
          <target state="translated">상수 std :: f64 :: NEG_INFINITY</target>
        </trans-unit>
        <trans-unit id="3bdb8cb93019b274c61c2cebd9184dee0ac0433d" translate="yes" xml:space="preserve">
          <source>Constant std::f64::RADIX</source>
          <target state="translated">상수 std :: f64 :: RADIX</target>
        </trans-unit>
        <trans-unit id="aea8dacf24fafa066223a147bbd1ce3be52db6a0" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::E</source>
          <target state="translated">상수 std :: f64 :: consts :: E</target>
        </trans-unit>
        <trans-unit id="642d0ccc2a4018fe222545fce8f2a1d818d0656a" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_1_PI</source>
          <target state="translated">상수 std :: f64 :: consts :: FRAC_1_PI</target>
        </trans-unit>
        <trans-unit id="1cad566ae384c77d0ffb995d7ae0cb37bc3fe4ca" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_1_SQRT_2</source>
          <target state="translated">상수 std :: f64 :: consts :: FRAC_1_SQRT_2</target>
        </trans-unit>
        <trans-unit id="e849df00306dcbd9e3fafc8fd8b784c77c00797e" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_2_PI</source>
          <target state="translated">상수 std :: f64 :: consts :: FRAC_2_PI</target>
        </trans-unit>
        <trans-unit id="edabf6b9d354e56e6fb6a436a56f54afa4739f10" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_2_SQRT_PI</source>
          <target state="translated">상수 std :: f64 :: consts :: FRAC_2_SQRT_PI</target>
        </trans-unit>
        <trans-unit id="6ea2788198ec0a41b52279e4223f492bbce9075a" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_PI_2</source>
          <target state="translated">상수 std :: f64 :: consts :: FRAC_PI_2</target>
        </trans-unit>
        <trans-unit id="f7886ccb5ce1f87569131716ea7209f917873907" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_PI_3</source>
          <target state="translated">상수 std :: f64 :: consts :: FRAC_PI_3</target>
        </trans-unit>
        <trans-unit id="3afcb8beb52cd27b1c95cf53b6c560708a858e41" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_PI_4</source>
          <target state="translated">상수 std :: f64 :: consts :: FRAC_PI_4</target>
        </trans-unit>
        <trans-unit id="0010fdfa823498637c1644ffc436bc287954e33d" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_PI_6</source>
          <target state="translated">상수 std :: f64 :: consts :: FRAC_PI_6</target>
        </trans-unit>
        <trans-unit id="07869f26acf9798bda6c11b46374efebbd900cb8" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::FRAC_PI_8</source>
          <target state="translated">상수 std :: f64 :: consts :: FRAC_PI_8</target>
        </trans-unit>
        <trans-unit id="1d19eb06f8430ac58561840f346c1da1282bdb12" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::LN_10</source>
          <target state="translated">상수 std :: f64 :: consts :: LN_10</target>
        </trans-unit>
        <trans-unit id="11859e6229960cd516898c9ad8a8de7cd29da32e" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::LN_2</source>
          <target state="translated">상수 std :: f64 :: consts :: LN_2</target>
        </trans-unit>
        <trans-unit id="ea45c103121afecc11071a2bef7cb6755ac279df" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::LOG10_2</source>
          <target state="translated">상수 std :: f64 :: consts :: LOG10_2</target>
        </trans-unit>
        <trans-unit id="96ac41d0b7df9ea60d36c643d8ca3ff0e364715b" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::LOG10_E</source>
          <target state="translated">상수 std :: f64 :: consts :: LOG10_E</target>
        </trans-unit>
        <trans-unit id="6628f7ccc2b24399a5dfdafbc7c2cc47a8938b94" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::LOG2_10</source>
          <target state="translated">상수 std :: f64 :: consts :: LOG2_10</target>
        </trans-unit>
        <trans-unit id="6ff43849e16e94bc042d71b9ef5fbbfcc69662c5" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::LOG2_E</source>
          <target state="translated">상수 std :: f64 :: consts :: LOG2_E</target>
        </trans-unit>
        <trans-unit id="6c39e8ab6e3fdc4b67bc398183903360a66e5fc0" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::PI</source>
          <target state="translated">상수 std :: f64 :: consts :: PI</target>
        </trans-unit>
        <trans-unit id="7466a15d186ef849d05b552b419e5e6e0d15cbbc" translate="yes" xml:space="preserve">
          <source>Constant std::f64::consts::SQRT_2</source>
          <target state="translated">상수 std :: f64 :: consts :: SQRT_2</target>
        </trans-unit>
        <trans-unit id="8ccbc4fae07cc31d2691d3b08a27938fa7a16726" translate="yes" xml:space="preserve">
          <source>Constant std::i128::MAX</source>
          <target state="translated">상수 std :: i128 :: MAX</target>
        </trans-unit>
        <trans-unit id="22b029bd4d1eeb2ffaf4504b9236b07176ebd36e" translate="yes" xml:space="preserve">
          <source>Constant std::i128::MIN</source>
          <target state="translated">상수 std :: i128 :: MIN</target>
        </trans-unit>
        <trans-unit id="1311f14bce10ce309335f74d10064edb920c7c23" translate="yes" xml:space="preserve">
          <source>Constant std::i16::MAX</source>
          <target state="translated">상수 std :: i16 :: MAX</target>
        </trans-unit>
        <trans-unit id="53cb2f83ab29500fde11be73358a2d717bff3196" translate="yes" xml:space="preserve">
          <source>Constant std::i16::MIN</source>
          <target state="translated">상수 std :: i16 :: MIN</target>
        </trans-unit>
        <trans-unit id="5d8b42f874e26af83d12d8ee10546133ed1dca9a" translate="yes" xml:space="preserve">
          <source>Constant std::i32::MAX</source>
          <target state="translated">상수 std :: i32 :: MAX</target>
        </trans-unit>
        <trans-unit id="fed7189ccd1d3c2cfcd2087250e2ae0a5a803d49" translate="yes" xml:space="preserve">
          <source>Constant std::i32::MIN</source>
          <target state="translated">상수 std :: i32 :: MIN</target>
        </trans-unit>
        <trans-unit id="9321fb9fd7e7c51fc4141e610fbb09611a4f31aa" translate="yes" xml:space="preserve">
          <source>Constant std::i64::MAX</source>
          <target state="translated">상수 std :: i64 :: MAX</target>
        </trans-unit>
        <trans-unit id="8b26f8c31906b7a416701eba53cd5d93f73e481a" translate="yes" xml:space="preserve">
          <source>Constant std::i64::MIN</source>
          <target state="translated">상수 std :: i64 :: MIN</target>
        </trans-unit>
        <trans-unit id="79b29ab5bebbf944c7fc8dee02322333b728d7d0" translate="yes" xml:space="preserve">
          <source>Constant std::i8::MAX</source>
          <target state="translated">상수 표준 :: i8 :: MAX</target>
        </trans-unit>
        <trans-unit id="dc7438f9881ae6a0e0ac4cdfddaa5a73e4a56620" translate="yes" xml:space="preserve">
          <source>Constant std::i8::MIN</source>
          <target state="translated">상수 std :: i8 :: MIN</target>
        </trans-unit>
        <trans-unit id="cf1f299a77b726e348eeac023b3755e8827dd103" translate="yes" xml:space="preserve">
          <source>Constant std::isize::MAX</source>
          <target state="translated">상수 std :: isize :: MAX</target>
        </trans-unit>
        <trans-unit id="639cde0e9a485d14f49f511fd65b8d00edaf7a2a" translate="yes" xml:space="preserve">
          <source>Constant std::isize::MIN</source>
          <target state="translated">상수 std :: isize :: MIN</target>
        </trans-unit>
        <trans-unit id="11d88ec99aa7745d1ebc4226f720008baac2965a" translate="yes" xml:space="preserve">
          <source>Constant std::path::MAIN_SEPARATOR</source>
          <target state="translated">상수 std :: path :: MAIN_SEPARATOR</target>
        </trans-unit>
        <trans-unit id="8e6f77f0a8e44dd26b92e97a27250d446f7256b0" translate="yes" xml:space="preserve">
          <source>Constant std::sync::ONCE_INIT</source>
          <target state="translated">상수 std :: sync :: ONCE_INIT</target>
        </trans-unit>
        <trans-unit id="b2f7093ed51aed319e66fd75cb54af792d2c0778" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_BOOL_INIT</source>
          <target state="translated">상수 std :: sync :: atomic :: ATOMIC_BOOL_INIT</target>
        </trans-unit>
        <trans-unit id="43d2ad4706e87af8b4b92224008a650d70f15a93" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_I16_INIT</source>
          <target state="translated">상수 std :: sync :: atomic :: ATOMIC_I16_INIT</target>
        </trans-unit>
        <trans-unit id="113e96c777b4aeba61709d5cba1dcc4453322bd3" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_I32_INIT</source>
          <target state="translated">상수 std :: sync :: atomic :: ATOMIC_I32_INIT</target>
        </trans-unit>
        <trans-unit id="d7768eb86ce0a349cd26ab4499c6bddee5ef2373" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_I64_INIT</source>
          <target state="translated">상수 std :: sync :: atomic :: ATOMIC_I64_INIT</target>
        </trans-unit>
        <trans-unit id="db342bac6e6ac70780bd4f23c83fdb3c06769b18" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_I8_INIT</source>
          <target state="translated">상수 std :: sync :: atomic :: ATOMIC_I8_INIT</target>
        </trans-unit>
        <trans-unit id="7de57cf0bad1bde78e18b1cb037387d0d7de4e44" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_ISIZE_INIT</source>
          <target state="translated">상수 std :: sync :: atomic :: ATOMIC_ISIZE_INIT</target>
        </trans-unit>
        <trans-unit id="550556f5c0c938b012649692d8c3d1dd034b2de3" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_U16_INIT</source>
          <target state="translated">상수 std :: sync :: atomic :: ATOMIC_U16_INIT</target>
        </trans-unit>
        <trans-unit id="3b030fca447510c493bfc654c0b51237c1fed24a" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_U32_INIT</source>
          <target state="translated">상수 std :: sync :: atomic :: ATOMIC_U32_INIT</target>
        </trans-unit>
        <trans-unit id="a542bee7f468c965196c763a1afcf2cd86d3ae27" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_U64_INIT</source>
          <target state="translated">상수 std :: sync :: atomic :: ATOMIC_U64_INIT</target>
        </trans-unit>
        <trans-unit id="90a7ff937826cf01df966094051b6236a0bfba1b" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_U8_INIT</source>
          <target state="translated">상수 std :: sync :: atomic :: ATOMIC_U8_INIT</target>
        </trans-unit>
        <trans-unit id="0d4414db526187bac1f56ed65c7d6827a1339005" translate="yes" xml:space="preserve">
          <source>Constant std::sync::atomic::ATOMIC_USIZE_INIT</source>
          <target state="translated">상수 std :: sync :: atomic :: ATOMIC_USIZE_INIT</target>
        </trans-unit>
        <trans-unit id="933aad854de788f9758648f2599083a99e392bc1" translate="yes" xml:space="preserve">
          <source>Constant std::time::UNIX_EPOCH</source>
          <target state="translated">상수 std :: time :: UNIX_EPOCH</target>
        </trans-unit>
        <trans-unit id="b47251ae180bc30d48421f3f292e8ee0d59a7a5f" translate="yes" xml:space="preserve">
          <source>Constant std::u128::MAX</source>
          <target state="translated">상수 std :: u128 :: MAX</target>
        </trans-unit>
        <trans-unit id="9a7223245085fe93f36305a52686c906b13331ea" translate="yes" xml:space="preserve">
          <source>Constant std::u128::MIN</source>
          <target state="translated">상수 std :: u128 :: MIN</target>
        </trans-unit>
        <trans-unit id="129e201426045fa6a5dcb26c1576ccbf5e933a4c" translate="yes" xml:space="preserve">
          <source>Constant std::u16::MAX</source>
          <target state="translated">상수 std :: u16 :: MAX</target>
        </trans-unit>
        <trans-unit id="28d789f5108cac22088595091ccf63497b7230ec" translate="yes" xml:space="preserve">
          <source>Constant std::u16::MIN</source>
          <target state="translated">상수 std :: u16 :: MIN</target>
        </trans-unit>
        <trans-unit id="975f4304d742154f7845f02be594da0638bf04c3" translate="yes" xml:space="preserve">
          <source>Constant std::u32::MAX</source>
          <target state="translated">상수 std :: u32 :: MAX</target>
        </trans-unit>
        <trans-unit id="6b45e7454943d2738e1d7c1dab1006724b3cd74a" translate="yes" xml:space="preserve">
          <source>Constant std::u32::MIN</source>
          <target state="translated">상수 std :: u32 :: MIN</target>
        </trans-unit>
        <trans-unit id="e6e90f64f44011cfff425a388e626600c1b96176" translate="yes" xml:space="preserve">
          <source>Constant std::u64::MAX</source>
          <target state="translated">상수 std :: u64 :: MAX</target>
        </trans-unit>
        <trans-unit id="35edefcbc5fbf1bd6a58ccab755b4faa2d6f1f6b" translate="yes" xml:space="preserve">
          <source>Constant std::u64::MIN</source>
          <target state="translated">상수 std :: u64 :: MIN</target>
        </trans-unit>
        <trans-unit id="c0733810d38ec1128d29488725c474c3c5a7b3f2" translate="yes" xml:space="preserve">
          <source>Constant std::u8::MAX</source>
          <target state="translated">상수 std :: u8 :: MAX</target>
        </trans-unit>
        <trans-unit id="85205c26a2920a23bbd66b0a85d5657945943431" translate="yes" xml:space="preserve">
          <source>Constant std::u8::MIN</source>
          <target state="translated">상수 std :: u8 :: MIN</target>
        </trans-unit>
        <trans-unit id="aec2abb6e2e00d5700b4088b94e6290b6cc69fc9" translate="yes" xml:space="preserve">
          <source>Constant std::usize::MAX</source>
          <target state="translated">상수 std :: usize :: MAX</target>
        </trans-unit>
        <trans-unit id="7f1e88fc64b878bfae09443130cb4f7ca20a679f" translate="yes" xml:space="preserve">
          <source>Constant std::usize::MIN</source>
          <target state="translated">상수 std :: usize :: MIN</target>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="69a56883c12e8c0b802793e07a32255ef6ee2ce0" translate="yes" xml:space="preserve">
          <source>Constants and immutable static variables might seem similar, but a subtle difference is that values in a static variable have a fixed address in memory. Using the value will always access the same data. Constants, on the other hand, are allowed to duplicate their data whenever they&amp;rsquo;re used.</source>
          <target state="translated">상수와 불변의 정적 변수는 비슷해 보일 수 있지만 미묘한 차이는 정적 변수의 값이 메모리에 고정 주소를 가지고 있다는 것입니다. 값을 사용하면 항상 동일한 데이터에 액세스합니다. 반면에 상수는 사용될 때마다 데이터를 복제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b46fa34783c68a1612db2baebea375ce88b46c0e" translate="yes" xml:space="preserve">
          <source>Constants are valid for the entire time a program runs, within the scope they were declared in, making them a useful choice for values in your application domain that multiple parts of the program might need to know about, such as the maximum number of points any player of a game is allowed to earn or the speed of light.</source>
          <target state="translated">상수는 프로그램이 선언 된 범위 내에서 프로그램이 실행되는 전체 시간 동안 유효하므로 프로그램의 여러 부분 (예 : 최대 포인트 수)에 대해 알아야 할 응용 프로그램 도메인의 값에 유용한 선택입니다. 게임의 플레이어는 빛의 속도를 얻거나 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="98ef931bb12e523822107e6476d82e9084ce709b" translate="yes" xml:space="preserve">
          <source>Constants associated with the current target</source>
          <target state="translated">현재 대상과 관련된 상수</target>
        </trans-unit>
        <trans-unit id="cfd0dc3e347eaa177a9226b1a616bb3c984b71a6" translate="yes" xml:space="preserve">
          <source>Constants can be declared in any scope, including the global scope, which makes them useful for values that many parts of code need to know about.</source>
          <target state="translated">전역 범위를 포함하여 모든 범위에서 상수를 선언 할 수 있으므로 많은 코드 부분에서 알아야 할 값에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="66f6052ea185d8c8fc2aa5a8204b5eeaf49aa2fb" translate="yes" xml:space="preserve">
          <source>Constants can contain destructors. Destructors are run when the value goes out of scope.</source>
          <target state="translated">상수는 소멸자를 포함 할 수 있습니다. 값이 범위를 벗어나면 소멸자가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="44b1148a6fbbab601b6b4b2ec174e7ee7f841dbb" translate="yes" xml:space="preserve">
          <source>Constants can only be initialized by a constant value or, in a future version of Rust, a call to a const function. This error indicates the use of a path (like a::b, or x) denoting something other than one of these allowed items.</source>
          <target state="translated">상수는 상수 값으로 만 초기화 될 수 있으며, Rust의 향후 버전에서는 const 함수에 대한 호출로만 초기화 될 수 있습니다. 이 오류는 이러한 허용 된 항목 중 하나가 아닌 다른 것을 나타내는 경로 (예 : a :: b 또는 x)를 사용함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0c866bbd815e69717aac5b587194312357c6b6e9" translate="yes" xml:space="preserve">
          <source>Constants cannot be a union type. Struct and enum constants must have &lt;code&gt;#[derive(PartialEq, Eq)]&lt;/code&gt; (not merely implemented).</source>
          <target state="translated">상수는 공용체 유형이 될 수 없습니다. 구조 및 열거 상수는 &lt;code&gt;#[derive(PartialEq, Eq)]&lt;/code&gt; (단순히 구현 된 것이 아님).</target>
        </trans-unit>
        <trans-unit id="3180a4feb81dccf82eab3d2e743e454007a9ea9a" translate="yes" xml:space="preserve">
          <source>Constants cannot refer to statics.</source>
          <target state="translated">상수는 정적을 참조 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f2016d6b09f2350ea12f6c6bd7612a849559e9ec" translate="yes" xml:space="preserve">
          <source>Constants may refer to the address of other constants, in which case the address will have elided lifetimes where applicable, otherwise &amp;ndash; in most cases &amp;ndash; defaulting to the &lt;code&gt;static&lt;/code&gt; lifetime. (See &lt;a href=&quot;../lifetime-elision#static-lifetime-elision&quot;&gt;static lifetime elision&lt;/a&gt;.) The compiler is, however, still at liberty to translate the constant many times, so the address referred to may not be stable.</source>
          <target state="translated">상수는 다른 상수의 주소를 참조 할 수 있으며,이 경우 주소는 적용 가능한 경우 수명을 생략합니다. 그렇지 않은 경우 대부분의 경우 &lt;code&gt;static&lt;/code&gt; 수명이 기본값 입니다. 그러나 &lt;a href=&quot;../lifetime-elision#static-lifetime-elision&quot;&gt;정적 수명 제거를&lt;/a&gt; 참조하십시오 . 그러나 컴파일러는 여전히 상수를 여러 번 번역 할 자유가 있으므로 참조 된 주소가 안정적이지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56f8c97db5f4593649509c95a80f110567e700fd" translate="yes" xml:space="preserve">
          <source>Constants must be explicitly typed, unlike with &lt;code&gt;let&lt;/code&gt; you can't ignore its type and let the compiler figure it out. Any constant value can be defined in a const, which in practice happens to be most things that would be reasonable to have a constant (barring &lt;code&gt;const fn&lt;/code&gt;s). For example, you can't have a File as a &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">상수는 명시 적으로 달리, 입력해야 &lt;code&gt;let&lt;/code&gt; 당신이 유형을 무시하고 컴파일러 그림에게 그것을 할 수 없습니다. 상수 값은 const에 정의 할 수 있으며 실제로 상수를 갖는 것이 합리적 인 대부분의 일입니다 ( &lt;code&gt;const fn&lt;/code&gt; s 제외 ). 예를 들어, File을 &lt;code&gt;const&lt;/code&gt; 로 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="92f0780bc1ddff5c0a5178eec755ed6aeb2690d7" translate="yes" xml:space="preserve">
          <source>Constants must be explicitly typed. The type must have a &lt;code&gt;'static&lt;/code&gt; lifetime: any references in the initializer must have &lt;code&gt;'static&lt;/code&gt; lifetimes.</source>
          <target state="translated">상수는 명시 적으로 입력해야합니다. 형식은 있어야합니다 &lt;code&gt;'static&lt;/code&gt; : 이니셜 라이저에 대한 참조가 있어야합니다 평생 &lt;code&gt;'static&lt;/code&gt; 수명을.</target>
        </trans-unit>
        <trans-unit id="f44be7a956c22e723f8c33dd89f6deff607db54d" translate="yes" xml:space="preserve">
          <source>Constants must be explicitly typed. The type must have a &lt;code&gt;'static&lt;/code&gt; lifetime: any references it contains must have &lt;code&gt;'static&lt;/code&gt; lifetimes.</source>
          <target state="translated">상수는 명시 적으로 입력해야합니다. 유형에는 &lt;code&gt;'static&lt;/code&gt; 수명이 있어야합니다 . 포함 된 모든 참조에는 &lt;code&gt;'static&lt;/code&gt; 수명 이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="46312bcd5a59fb2e1e169c762b692ec10cdff414" translate="yes" xml:space="preserve">
          <source>Constants must be explicitly typed; unlike with &lt;code&gt;let&lt;/code&gt;, you can't ignore their type and let the compiler figure it out. Any constant value can be defined in a &lt;code&gt;const&lt;/code&gt;, which in practice happens to be most things that would be reasonable to have in a constant (barring &lt;code&gt;const fn&lt;/code&gt;s). For example, you can't have a &lt;a href=&quot;fs/struct.file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; as a &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">상수는 명시 적으로 입력해야합니다. &lt;code&gt;let&lt;/code&gt; 과 달리 유형을 무시하고 컴파일러가 알아낼 수는 없습니다. 모든 상수 값은 &lt;code&gt;const&lt;/code&gt; 에서 정의 할 수 있으며 , 실제로는 상수에있는 것이 합리적 일 수있는 대부분의 것입니다 ( &lt;code&gt;const fn&lt;/code&gt; s 제외 ). 예를 들어 &lt;a href=&quot;fs/struct.file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;const&lt;/code&gt; 로 가질 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="bedad8959cc32c5ec574766684406ac166879909" translate="yes" xml:space="preserve">
          <source>Constants with Destructors</source>
          <target state="translated">소멸자와 상수</target>
        </trans-unit>
        <trans-unit id="1e59d1d93463327298ef52937fbc233d58005e16" translate="yes" xml:space="preserve">
          <source>Constants, as with statics, should always be in SCREAMING_SNAKE_CASE.</source>
          <target state="translated">정적과 마찬가지로 상수는 항상 SCREAMING_SNAKE_CASE에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="ffef07212e6fe65a786f61f9eee051cbc2efeb29" translate="yes" xml:space="preserve">
          <source>Constants, like statics, should always be in &lt;code&gt;SCREAMING_SNAKE_CASE&lt;/code&gt;.</source>
          <target state="translated">정적과 같은 상수는 항상 &lt;code&gt;SCREAMING_SNAKE_CASE&lt;/code&gt; 에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="52e68a873a2be3470675b9ee933b98d781ae7fef" translate="yes" xml:space="preserve">
          <source>Constraints</source>
          <target state="translated">Constraints</target>
        </trans-unit>
        <trans-unit id="8232adc4277033a5d8e517fe29e38c6f41dc7f53" translate="yes" xml:space="preserve">
          <source>Construct I/O objects from raw handles.</source>
          <target state="translated">원시 핸들에서 I / O 오브젝트를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="f078ee4173b019e9a16fe3fa080e82ad18d0c589" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; around a pointer to some data of a type that implements &lt;a href=&quot;../marker/trait.unpin&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../marker/trait.unpin&quot;&gt; &lt;code&gt;Unpin&lt;/code&gt; &lt;/a&gt; 을 구현하는 형식의 일부 데이터에 대한 포인터 주위에 새로운 &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="458f756a19df9b463a457c79d2f613aa006705b7" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; around a reference to some data of a type that may or may not implement &lt;code&gt;Unpin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Unpin&lt;/code&gt; 을 구현하거나 구현하지 않을 수있는 유형의 일부 데이터에 대한 참조 주위에 새로운 &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; 를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="3967b36bcebd4326066136b538620deb228d3faa" translate="yes" xml:space="preserve">
          <source>Construct a new pin by mapping the interior value.</source>
          <target state="translated">내부 값을 매핑하여 새 핀을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="04eecfb7df0c24c6e2880d7045b0d634dafa8cad" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;Layout&lt;/code&gt; from a given &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;align&lt;/code&gt;, or returns &lt;code&gt;LayoutErr&lt;/code&gt; if any of the following conditions are not met:</source>
          <target state="translated">지정된 &lt;code&gt;size&lt;/code&gt; 로 &lt;code&gt;Layout&lt;/code&gt; 을 구성 하고 &lt;code&gt;align&lt;/code&gt; , 또는 다음 조건 중 하나라도 충족되지 않으면 &lt;code&gt;LayoutErr&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b42c2a4fefbb924c8cf055d2c7b9a94103738729" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;Layout&lt;/code&gt; from a given &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;align&lt;/code&gt;, or returns &lt;code&gt;LayoutErr&lt;/code&gt; if either of the following conditions are not met:</source>
          <target state="translated">구성하는 &lt;code&gt;Layout&lt;/code&gt; 주어진에서 &lt;code&gt;size&lt;/code&gt; 및 &lt;code&gt;align&lt;/code&gt; , 또는 반환 &lt;code&gt;LayoutErr&lt;/code&gt; 는 다음 조건 중 하나가 충족되지 않으면 :</target>
        </trans-unit>
        <trans-unit id="f103af7dbea14aa0864d39396e14a6ebcb2d6631" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;Layout&lt;/code&gt; suitable for holding a value of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 형의 값을 보관 유지하는데 적절한 &lt;code&gt;Layout&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="c46040f0a72395a435c25d2ec7941bb980f8d880" translate="yes" xml:space="preserve">
          <source>Constructs a box from a raw pointer.</source>
          <target state="translated">raw 포인터로부터 박스를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="37f1dc6a040b08982291af52abf5a0bf60fa3704" translate="yes" xml:space="preserve">
          <source>Constructs a double-ended iterator over a sub-range of elements in the map. The simplest way is to use the range syntax &lt;code&gt;min..max&lt;/code&gt;, thus &lt;code&gt;range(min..max)&lt;/code&gt; will yield elements from min (inclusive) to max (exclusive). The range may also be entered as &lt;code&gt;(Bound&amp;lt;T&amp;gt;, Bound&amp;lt;T&amp;gt;)&lt;/code&gt;, so for example &lt;code&gt;range((Excluded(4), Included(10)))&lt;/code&gt; will yield a left-exclusive, right-inclusive range from 4 to 10.</source>
          <target state="translated">지도의 하위 요소 범위에 대해 이중 종단 반복자를 구성합니다. 가장 간단한 방법은 범위 구문 &lt;code&gt;min..max&lt;/code&gt; 를 사용하는 것이므로 &lt;code&gt;range(min..max)&lt;/code&gt; 는 min (포함)에서 max (제외)까지의 요소를 생성합니다. 범위는 &lt;code&gt;(Bound&amp;lt;T&amp;gt;, Bound&amp;lt;T&amp;gt;)&lt;/code&gt; 로 입력 할 수도 있으므로 예를 들어 &lt;code&gt;range((Excluded(4), Included(10)))&lt;/code&gt; 는 왼쪽에서 오른쪽으로, 오른쪽에서 4까지의 범위를 생성합니다. 10.</target>
        </trans-unit>
        <trans-unit id="8ed545efd7d90d0249d6ed7678970540d88a2e79" translate="yes" xml:space="preserve">
          <source>Constructs a double-ended iterator over a sub-range of elements in the set. The simplest way is to use the range syntax &lt;code&gt;min..max&lt;/code&gt;, thus &lt;code&gt;range(min..max)&lt;/code&gt; will yield elements from min (inclusive) to max (exclusive). The range may also be entered as &lt;code&gt;(Bound&amp;lt;T&amp;gt;, Bound&amp;lt;T&amp;gt;)&lt;/code&gt;, so for example &lt;code&gt;range((Excluded(4), Included(10)))&lt;/code&gt; will yield a left-exclusive, right-inclusive range from 4 to 10.</source>
          <target state="translated">세트 내의 요소의 범위에 걸쳐 더블 엔드 반복자를 구축합니다. 가장 간단한 방법은 범위 구문 &lt;code&gt;min..max&lt;/code&gt; 를 사용하는 것이므로 &lt;code&gt;range(min..max)&lt;/code&gt; 는 min (포함)에서 max (제외)까지의 요소를 생성합니다. 범위는 &lt;code&gt;(Bound&amp;lt;T&amp;gt;, Bound&amp;lt;T&amp;gt;)&lt;/code&gt; 로 입력 할 수도 있습니다. 예를 들어 &lt;code&gt;range((Excluded(4), Included(10)))&lt;/code&gt; 는 왼쪽에서 오른쪽으로, 오른쪽에서 4까지의 범위를 생성합니다. 10.</target>
        </trans-unit>
        <trans-unit id="192e83322938744836e7b9b4c93a08248769c9d0" translate="yes" xml:space="preserve">
          <source>Constructs a mutable double-ended iterator over a sub-range of elements in the map. The simplest way is to use the range syntax &lt;code&gt;min..max&lt;/code&gt;, thus &lt;code&gt;range(min..max)&lt;/code&gt; will yield elements from min (inclusive) to max (exclusive). The range may also be entered as &lt;code&gt;(Bound&amp;lt;T&amp;gt;, Bound&amp;lt;T&amp;gt;)&lt;/code&gt;, so for example &lt;code&gt;range((Excluded(4), Included(10)))&lt;/code&gt; will yield a left-exclusive, right-inclusive range from 4 to 10.</source>
          <target state="translated">맵의 하위 범위 요소에 대해 가변 이중 엔드 반복자를 구성합니다. 가장 간단한 방법은 범위 구문 &lt;code&gt;min..max&lt;/code&gt; 를 사용하는 것이므로 &lt;code&gt;range(min..max)&lt;/code&gt; 는 min (포함)에서 max (제외)까지의 요소를 생성합니다. 범위는 &lt;code&gt;(Bound&amp;lt;T&amp;gt;, Bound&amp;lt;T&amp;gt;)&lt;/code&gt; 로 입력 할 수도 있습니다. 예를 들어 &lt;code&gt;range((Excluded(4), Included(10)))&lt;/code&gt; 는 왼쪽에서 오른쪽으로, 오른쪽에서 4까지의 범위를 생성합니다. 10.</target>
        </trans-unit>
        <trans-unit id="c7a0c840c4ea7ef08d90fe8df26e5fe5c91abf7f" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; using a weak reference to itself. Attempting to upgrade the weak reference before this function returns will result in a &lt;code&gt;None&lt;/code&gt; value. However, the weak reference may be cloned freely and stored for use at a later time.</source>
          <target state="translated">자신에 대한 약한 참조를 사용하여 새 &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 를 생성합니다. 이 함수가 반환되기 전에 약한 참조를 업그레이드하려고하면 &lt;code&gt;None&lt;/code&gt; 값이됩니다. 그러나 약한 참조는 자유롭게 복제하여 나중에 사용하기 위해 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b5ee07d8a53a04501289d2d6ec137ad074fee56" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="c88298f0487047ea1d3b1e23a64d138c3770a2e1" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Arc&lt;/code&gt; with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="translated">메모리가 &lt;code&gt;0&lt;/code&gt; 바이트 로 채워지는 초기화되지 않은 내용 으로 새로운 &lt;code&gt;Arc&lt;/code&gt; 를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="7d102bc18138ea987f3bda4b128d3c0cca3ef892" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Arc&lt;/code&gt; with uninitialized contents.</source>
          <target state="translated">초기화되지 않은 내용 으로 새로운 &lt;code&gt;Arc&lt;/code&gt; 를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="df52ed326fe1e1fe65231aea4b694bd8f2117fe0" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Box&lt;/code&gt; with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="translated">메모리가 &lt;code&gt;0&lt;/code&gt; 바이트 로 채워지는 초기화되지 않은 내용 으로 새 &lt;code&gt;Box&lt;/code&gt; 를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="649bfb0939e9db8b8976681d027864024cfa1478" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Command&lt;/code&gt; for launching the program at path &lt;code&gt;program&lt;/code&gt;, with the following default configuration:</source>
          <target state="translated">다음 기본 구성으로 path &lt;code&gt;program&lt;/code&gt; 에서 프로그램을 시작하기위한 새 &lt;code&gt;Command&lt;/code&gt; 를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="43826142799b2999b4dc4a806f8dd1fe399fc671" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Pin&amp;lt;Arc&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;. If &lt;code&gt;T&lt;/code&gt; does not implement &lt;code&gt;Unpin&lt;/code&gt;, then &lt;code&gt;data&lt;/code&gt; will be pinned in memory and unable to be moved.</source>
          <target state="translated">새로운 &lt;code&gt;Pin&amp;lt;Arc&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 합니다. 경우 &lt;code&gt;T&lt;/code&gt; 는 구현하지 않는 &lt;code&gt;Unpin&lt;/code&gt; 한 후 &lt;code&gt;data&lt;/code&gt; 메모리에 고정되고없는이 이동 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae427ad6bb072d10189a3e2d84050f0f140561cc" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;. If &lt;code&gt;T&lt;/code&gt; does not implement &lt;code&gt;Unpin&lt;/code&gt;, then &lt;code&gt;x&lt;/code&gt; will be pinned in memory and unable to be moved.</source>
          <target state="translated">새로운 &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 합니다. 경우 &lt;code&gt;T&lt;/code&gt; 가 구현하지 않는 &lt;code&gt;Unpin&lt;/code&gt; 한 후 &lt;code&gt;x&lt;/code&gt; 메모리에 고정되고없는이 이동 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a399cf74c0003f482d072c406bfaa06d0858df11" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Pin&amp;lt;Rc&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;. If &lt;code&gt;T&lt;/code&gt; does not implement &lt;code&gt;Unpin&lt;/code&gt;, then &lt;code&gt;value&lt;/code&gt; will be pinned in memory and unable to be moved.</source>
          <target state="translated">새로운 &lt;code&gt;Pin&amp;lt;Rc&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 합니다. 경우 &lt;code&gt;T&lt;/code&gt; 가 구현하지 않는 &lt;code&gt;Unpin&lt;/code&gt; , 다음 &lt;code&gt;value&lt;/code&gt; 메모리에 고정되고없는이 이동 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="215abb63e46a71a3b3af6cf534181da957a5b6b1" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;RandomState&lt;/code&gt; that is initialized with random keys.</source>
          <target state="translated">임의의 키로 초기화 된 새로운 &lt;code&gt;RandomState&lt;/code&gt; 를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="990966799ffab96bdb51fee33a4b0a380c6924bf" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;RandomState&lt;/code&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;RandomState&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="fe1b4a150fec681af363353b665e9d20e4b38054" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; using a weak reference to itself. Attempting to upgrade the weak reference before this function returns will result in a &lt;code&gt;None&lt;/code&gt; value. However, the weak reference may be cloned freely and stored for use at a later time.</source>
          <target state="translated">자신에 대한 약한 참조를 사용하여 새로운 &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 를 생성합니다. 이 함수가 반환되기 전에 약한 참조를 업그레이드하려고하면 &lt;code&gt;None&lt;/code&gt; 값이됩니다. 그러나 약한 참조는 자유롭게 복제하여 나중에 사용하기 위해 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29c159dd2b62a424ed3d56cf3633b65ceb2506a2" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22fd3fb3d0a39cabe1183235985b3de87d115369" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Rc&lt;/code&gt; with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="translated">메모리가 &lt;code&gt;0&lt;/code&gt; 바이트 로 채워지는 초기화되지 않은 내용 으로 새로운 &lt;code&gt;Rc&lt;/code&gt; 를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="576804b3ee3156ebe8dcf88fab60835feeed0321" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Rc&lt;/code&gt; with uninitialized contents.</source>
          <target state="translated">초기화되지 않은 내용 으로 새로운 &lt;code&gt;Rc&lt;/code&gt; 를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="d35c712814a156cfce1cf5769068ee860f7dd9ed" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;, allocating memory for &lt;code&gt;T&lt;/code&gt; without initializing it. Calling &lt;a href=&quot;../rc/struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the return value always gives &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">초기화하지 않고 &lt;code&gt;T&lt;/code&gt; 에 메모리를 할당 하여 새로운 &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; 합니다. 반환 값에서 &lt;a href=&quot;../rc/struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt; 를 호출 하면 항상 &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;None&lt;/code&gt; 이&lt;/a&gt; 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="d62aa3d7fbe44f6f235db78cd78d519c5b8e5aa7" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;, allocating memory for &lt;code&gt;T&lt;/code&gt; without initializing it. Calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the return value always gives &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">초기화하지 않고 &lt;code&gt;T&lt;/code&gt; 에 메모리를 할당 하여 새로운 &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; 합니다. 반환 값에서 &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt; 를 호출 하면 항상 &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;None&lt;/code&gt; 이&lt;/a&gt; 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="4dffbc58ed3de5d551c97a8d7722980dcaf10e59" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;, without allocating any memory. Calling &lt;a href=&quot;#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the return value always gives &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">메모리를 할당하지 않고 새로운 &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; 합니다. 반환 값에서 &lt;a href=&quot;#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt; 를 호출 하면 항상 &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;None&lt;/code&gt; 이&lt;/a&gt; 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="37675f48642a627d4001158a31a99e23445b1859" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;, without allocating any memory. Calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the return value always gives &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">메모리를 할당하지 않고 새로운 &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; 합니다. 반환 값에서 &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt; 를 호출 하면 항상 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; 이&lt;/a&gt; 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="9747ec04ca2c6d973b07ff35cc198234eb4483f5" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;, without allocating memory. Calling &lt;a href=&quot;../sync/struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the return value always gives &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">메모리를 할당하지 않고 새로운 &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; 를 구성합니다. 반환 값에서 &lt;a href=&quot;../sync/struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt; 를 호출 하면 항상 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; 이&lt;/a&gt; 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="972500561761a1c7caaad085a7d96b8402a9a8d2" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;, without allocating memory. Calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the return value always gives &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">메모리를 할당하지 않고 새로운 &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; 를 구성합니다. 반환 값에서 &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt; 를 호출 하면 항상 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; 이&lt;/a&gt; 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="4496cc6d5d5745f6e13649d89706ecf389ae66e3" translate="yes" xml:space="preserve">
          <source>Constructs a new I/O object from the specified raw handle.</source>
          <target state="translated">지정된 raw 핸들로부터 새로운 I / O 객체를 구축합니다.</target>
        </trans-unit>
        <trans-unit id="891fa8466fd55fe7d4ddedfb308499932510af07" translate="yes" xml:space="preserve">
          <source>Constructs a new I/O object from the specified raw handle. &lt;a href=&quot;../os/windows/io/trait.fromrawhandle#tymethod.from_raw_handle&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">지정된 raw 핸들로부터 새로운 I / O 객체를 구축합니다. &lt;a href=&quot;../os/windows/io/trait.fromrawhandle#tymethod.from_raw_handle&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="613eed9ea3fdf48d54478112c74673a636810b9c" translate="yes" xml:space="preserve">
          <source>Constructs a new atomically reference-counted slice with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 바이트 로 채워진 메모리를 사용하여 초기화되지 않은 내용으로 원자 적으로 참조 카운트되는 새로운 슬라이스를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="aac50188186d37638f6847cc875268b1dd9775a6" translate="yes" xml:space="preserve">
          <source>Constructs a new atomically reference-counted slice with uninitialized contents.</source>
          <target state="translated">초기화되지 않은 내용으로 원자 적으로 참조 횟수가 계산 된 새로운 슬라이스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="475b93712d93e1f5941fff4b6beaa6a60da0b3df" translate="yes" xml:space="preserve">
          <source>Constructs a new box with uninitialized contents.</source>
          <target state="translated">초기화되지 않은 내용으로 새 상자를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="6cb9760283dc789d7479d33e3be61915965ca26e" translate="yes" xml:space="preserve">
          <source>Constructs a new boxed slice with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="translated">메모리가 &lt;code&gt;0&lt;/code&gt; 바이트 로 채워진 상태에서 초기화되지 않은 내용으로 새로운 박스형 슬라이스를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="811e1721217879db3e069afe508778238f833646" translate="yes" xml:space="preserve">
          <source>Constructs a new boxed slice with uninitialized contents.</source>
          <target state="translated">초기화되지 않은 내용으로 새로운 박스형 슬라이스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0b9c3b3ca4291ed6fcd5ea6cf2d68b2a60a896b0" translate="yes" xml:space="preserve">
          <source>Constructs a new empty &lt;code&gt;OsString&lt;/code&gt;.</source>
          <target state="translated">새로운 빈 &lt;code&gt;OsString&lt;/code&gt; 을 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="116c6c6d0d202935ba424bddf04e7be3584f242c" translate="yes" xml:space="preserve">
          <source>Constructs a new handle to an empty reader.</source>
          <target state="translated">빈 판독기에 대한 새 핸들을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="f05995d5c0d63623f4e2f49a06500cf9a30d18e1" translate="yes" xml:space="preserve">
          <source>Constructs a new handle to the standard error of the current process.</source>
          <target state="translated">현재 프로세스의 표준 오류에 대한 새 핸들을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="aa3e3bdc4cd18bdadba2a89e241df3ea035b45e1" translate="yes" xml:space="preserve">
          <source>Constructs a new handle to the standard input of the current process.</source>
          <target state="translated">현재 프로세스의 표준 입력에 대한 새 핸들을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="5e1ca399f6f2acfa795d1198650cfad744ff098c" translate="yes" xml:space="preserve">
          <source>Constructs a new handle to the standard output of the current process.</source>
          <target state="translated">현재 프로세스의 표준 출력에 대한 새 핸들을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="8068787f0a385d84fcc2339e6a02bb7b6185dca6" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of &lt;code&gt;Self&lt;/code&gt; from the given raw file descriptor.</source>
          <target state="translated">지정된 raw 파일 기술자로부터 &lt;code&gt;Self&lt;/code&gt; 의 새로운 인스턴스를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="888a632746173833b62421f6d1eb4ed033b33886" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of &lt;code&gt;Self&lt;/code&gt; from the given raw file descriptor. &lt;a href=&quot;../io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">지정된 raw 파일 기술자로부터 &lt;code&gt;Self&lt;/code&gt; 의 새로운 인스턴스를 구축합니다 . &lt;a href=&quot;../io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="257b5d25f69c7d79d480f9e3b2d10cdf0fe04dbc" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of &lt;code&gt;Self&lt;/code&gt; from the given raw file descriptor. &lt;a href=&quot;../os/unix/io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">지정된 raw 파일 기술자로부터 &lt;code&gt;Self&lt;/code&gt; 의 새로운 인스턴스를 구축합니다 . &lt;a href=&quot;../os/unix/io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b2978cc576a95afa988eb0b80e27846b2728aaa" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of &lt;code&gt;Self&lt;/code&gt; from the given raw file descriptor. &lt;a href=&quot;trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">지정된 원시 파일 설명자에서 &lt;code&gt;Self&lt;/code&gt; 의 새 인스턴스를 구성합니다 . &lt;a href=&quot;trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="798e09ea7e6d21d1a7a290870721ce593181a669" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of &lt;code&gt;UnsafeCell&lt;/code&gt; which will wrap the specified value.</source>
          <target state="translated">지정된 값을 랩하는 &lt;code&gt;UnsafeCell&lt;/code&gt; 의 새로운 인스턴스를 구축 합니다.</target>
        </trans-unit>
        <trans-unit id="6d790e16a3f6885c0e9298b961c21581f0de2364" translate="yes" xml:space="preserve">
          <source>Constructs a new pin by mapping the interior value.</source>
          <target state="translated">내부 값을 매핑하여 새 핀을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="d2a619eede861b59500487f88ec782d7506e77d0" translate="yes" xml:space="preserve">
          <source>Constructs a new reference-counted slice with uninitialized contents, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 바이트 로 채워지는 메모리를 사용하여 초기화되지 않은 내용이있는 새로운 참조 카운트 슬라이스를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="17fcb8d41c58515295663f6e5d0c9cc860a7dd66" translate="yes" xml:space="preserve">
          <source>Constructs a new reference-counted slice with uninitialized contents.</source>
          <target state="translated">초기화되지 않은 내용으로 새로운 참조 카운트 슬라이스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="6245a960f2e8e31321d445308a392077c13592d3" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; with the specified capacity.</source>
          <target state="translated">지정된 용량으로 비어있는 새로운 &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 구축합니다.</target>
        </trans-unit>
        <trans-unit id="e517bb17135772eb56399ec87ae5af65fb2c2277" translate="yes" xml:space="preserve">
          <source>Constructs a new, empty &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">비어있는 새로운 &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="5888c903b26dbdee946f0d3a7f47c6c4e116bc5d" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; from a raw pointer.</source>
          <target state="translated">구축합니다 &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 원료로부터 포인터.</target>
        </trans-unit>
        <trans-unit id="40a5e764cd81a0a84cd27bce3deb18f469f7f256" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;Arc&lt;/code&gt; from a raw pointer.</source>
          <target state="translated">raw 포인터로부터 &lt;code&gt;Arc&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="b13fbfaf79edff641750b81be4d68684bd7165d5" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; from a raw pointer.</source>
          <target state="translated">구축합니다 &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 원료로부터 포인터.</target>
        </trans-unit>
        <trans-unit id="8a6aebd0d964532473b10d41481ee3f5cfcc2c32" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;Rc&lt;/code&gt; from a raw pointer.</source>
          <target state="translated">raw 포인터로부터 &lt;code&gt;Rc&lt;/code&gt; 를 구축합니다 .</target>
        </trans-unit>
        <trans-unit id="d631447123e0cc99a6667992c531ed32bf02a6c4" translate="yes" xml:space="preserve">
          <source>Constructs an empty &lt;code&gt;OsString&lt;/code&gt;.</source>
          <target state="translated">빈 &lt;code&gt;OsString&lt;/code&gt; 을 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="271e62a3037c0958e8dca74d136cd3800cb7f175" translate="yes" xml:space="preserve">
          <source>Constructs parameters for the other string-formatting macros.</source>
          <target state="translated">다른 문자열 형식화 매크로에 대한 매개 변수를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="89a179e9a409c4115e9a115ce27b5971f932af08" translate="yes" xml:space="preserve">
          <source>Constructs the associated searcher from &lt;code&gt;self&lt;/code&gt; and the &lt;code&gt;haystack&lt;/code&gt; to search in.</source>
          <target state="translated">검색 할 &lt;code&gt;self&lt;/code&gt; 검색 및 &lt;code&gt;haystack&lt;/code&gt; 에서 관련 검색 자를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="7309e2aff6564a87fe9a9b85b80909228512a2c4" translate="yes" xml:space="preserve">
          <source>Constructs the associated searcher from &lt;code&gt;self&lt;/code&gt; and the &lt;code&gt;haystack&lt;/code&gt; to search in. &lt;a href=&quot;../str/pattern/trait.pattern#tymethod.into_searcher&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">에서 관련 수색자를 구축 &lt;code&gt;self&lt;/code&gt; 와 &lt;code&gt;haystack&lt;/code&gt; 에서 검색 할 수 있습니다. &lt;a href=&quot;../str/pattern/trait.pattern#tymethod.into_searcher&quot;&gt;읽기 더&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ccb2d5fc12ec8726bc284cc4242715d42e88a2b3" translate="yes" xml:space="preserve">
          <source>Constructs the associated searcher from &lt;code&gt;self&lt;/code&gt; and the &lt;code&gt;haystack&lt;/code&gt; to search in. &lt;a href=&quot;str/pattern/trait.pattern#tymethod.into_searcher&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">에서 관련 수색자를 구축 &lt;code&gt;self&lt;/code&gt; 와 &lt;code&gt;haystack&lt;/code&gt; 에서 검색 할 수 있습니다. &lt;a href=&quot;str/pattern/trait.pattern#tymethod.into_searcher&quot;&gt;읽기 더&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22d81e15ebd96f4416112e3bf52a00326dd5f3df" translate="yes" xml:space="preserve">
          <source>Consume a number if it's equal to 0.</source>
          <target state="translated">0과 같으면 숫자를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="370a9376e2986b168c89afaaaa3068a4df77bb5b" translate="yes" xml:space="preserve">
          <source>Consume and return the next item if it is equal to &lt;code&gt;expected&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;expected&lt;/code&gt; 과 같으면 다음 항목을 소비하고 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="00bf468542f9fe4f2a71921c00ab77f926485798" translate="yes" xml:space="preserve">
          <source>Consume and return the next value of this iterator if a condition is true.</source>
          <target state="translated">조건이 참이면이 반복자의 다음 값을 소비하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e0c72bbf89fe0c2fb08073ad1eaaa085ec0a05a5" translate="yes" xml:space="preserve">
          <source>Consume any number less than 10.</source>
          <target state="translated">10보다 작은 숫자를 소비하십시오.</target>
        </trans-unit>
        <trans-unit id="f9376a17162f5057921041fab272b966366e79b4" translate="yes" xml:space="preserve">
          <source>Consumes &lt;code&gt;self&lt;/code&gt; while expecting &lt;a href=&quot;enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; and returning nothing.</source>
          <target state="translated">&lt;a href=&quot;enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 을 기대하고 아무것도 반환하지 않고 &lt;code&gt;self&lt;/code&gt; 를 소비합니다 .</target>
        </trans-unit>
        <trans-unit id="bedcb0457115ca890514e48dd2337e07cf23fd4a" translate="yes" xml:space="preserve">
          <source>Consumes an iterator, creating two collections from it.</source>
          <target state="translated">이터레이터를 소비하여 두 개의 컬렉션을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2b3b9a04bd76d2da72bfeeec2a4468dc867ab8fd" translate="yes" xml:space="preserve">
          <source>Consumes an iterator, creating two collections from it. &lt;a href=&quot;../../../iter/trait.iterator#method.partition&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이터레이터를 소비하여 두 개의 컬렉션을 만듭니다. &lt;a href=&quot;../../../iter/trait.iterator#method.partition&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88586247e3556ec2c7f344e071d5ec652c0131da" translate="yes" xml:space="preserve">
          <source>Consumes an iterator, creating two collections from it. &lt;a href=&quot;../../iter/trait.iterator#method.partition&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이터레이터를 소비하여 두 개의 컬렉션을 만듭니다. &lt;a href=&quot;../../iter/trait.iterator#method.partition&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="201aac3748d0121d4b7ad2c464d8509e6d163f83" translate="yes" xml:space="preserve">
          <source>Consumes an iterator, creating two collections from it. &lt;a href=&quot;../iter/trait.iterator#method.partition&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이터레이터를 소비하여 두 개의 컬렉션을 만듭니다. &lt;a href=&quot;../iter/trait.iterator#method.partition&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40e555111daf3d9eda14463aba865f2b701cb0a7" translate="yes" xml:space="preserve">
          <source>Consumes an iterator, creating two collections from it. &lt;a href=&quot;iter/trait.iterator#method.partition&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이터레이터를 소비하여 두 개의 컬렉션을 만듭니다. &lt;a href=&quot;iter/trait.iterator#method.partition&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="924d8f9d1a6fafc5d85b222fe6e13af00fb63dc0" translate="yes" xml:space="preserve">
          <source>Consumes an iterator, creating two collections from it. &lt;a href=&quot;trait.iterator#method.partition&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이터레이터를 소비하여 두 개의 컬렉션을 만듭니다. &lt;a href=&quot;trait.iterator#method.partition&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89e5c19b5f19640841a9721b2bb77de22f860284" translate="yes" xml:space="preserve">
          <source>Consumes and leaks the &lt;code&gt;Box&lt;/code&gt;, returning a mutable reference, &lt;code&gt;&amp;amp;'a mut T&lt;/code&gt;. Note that the type &lt;code&gt;T&lt;/code&gt; must outlive the chosen lifetime &lt;code&gt;'a&lt;/code&gt;. If the type has only static references, or none at all, then this may be chosen to be &lt;code&gt;'static&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Box&lt;/code&gt; 를 소비하고 누설하여 변경 가능한 참조 &lt;code&gt;&amp;amp;'a mut T&lt;/code&gt; 리턴합니다 . 유형의 것을 참고 &lt;code&gt;T&lt;/code&gt; 가 선택한 수명보다 오래해야한다 &lt;code&gt;'a&lt;/code&gt; . 유형에 정적 참조 만 있거나 전혀없는 경우 &lt;code&gt;'static&lt;/code&gt; 으로 선택 될 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="98751f731e6bdb707774989fb229533649e140b4" translate="yes" xml:space="preserve">
          <source>Consumes and leaks the &lt;code&gt;Vec&lt;/code&gt;, returning a mutable reference to the contents, &lt;code&gt;&amp;amp;'a mut [T]&lt;/code&gt;. Note that the type &lt;code&gt;T&lt;/code&gt; must outlive the chosen lifetime &lt;code&gt;'a&lt;/code&gt;. If the type has only static references, or none at all, then this may be chosen to be &lt;code&gt;'static&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Vec&lt;/code&gt; 를 소비하고 누출하여 내용에 대한 가변 참조를 반환합니다. &lt;code&gt;&amp;amp;'a mut [T]&lt;/code&gt; . 유형 &lt;code&gt;T&lt;/code&gt; 는 선택한 수명 &lt;code&gt;'a&lt;/code&gt; 보다 오래 살아야합니다 . 유형에 정적 참조 만 있거나 전혀없는 경우 &lt;code&gt;'static&lt;/code&gt; 으로 선택 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8af1057c474d4e5b60fe3f6bb451a66ce504cdf9" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Arc&lt;/code&gt;, returning the wrapped pointer as &lt;code&gt;NonNull&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">래핑 된 포인터를 &lt;code&gt;NonNull&amp;lt;T&amp;gt;&lt;/code&gt; 로 반환 하여 &lt;code&gt;Arc&lt;/code&gt; 를 소비합니다 .</target>
        </trans-unit>
        <trans-unit id="e6bd0845b9e221ba4597bbc9758cc02d103f3270" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Arc&lt;/code&gt;, returning the wrapped pointer.</source>
          <target state="translated">랩 된 포인터를 돌려주는 &lt;code&gt;Arc&lt;/code&gt; 를 소비합니다 .</target>
        </trans-unit>
        <trans-unit id="dbfefcefd972c3d0ed938c94fd910b3064d3075b" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;BinaryHeap&lt;/code&gt; and returns a vector in sorted (ascending) order.</source>
          <target state="translated">&lt;code&gt;BinaryHeap&lt;/code&gt; 을 소비하고 정렬 된 (오름차순) 순서로 벡터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="342ce6d3fd37b857cfa38575d20c7716c49a55ad" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;BinaryHeap&lt;/code&gt; and returns the underlying vector in arbitrary order.</source>
          <target state="translated">&lt;code&gt;BinaryHeap&lt;/code&gt; 을 소비하고 기본 벡터를 임의의 순서로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="92e7ae7c67396f041082c3cc7372b3affda1ee33" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Box&lt;/code&gt;, returning a wrapped raw pointer.</source>
          <target state="translated">&lt;code&gt;Box&lt;/code&gt; 소비랩 된 raw 포인터를 돌려주는 .</target>
        </trans-unit>
        <trans-unit id="bb330e9a211208681b31ba3a9b728930bc8f1ac1" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Box&lt;/code&gt;, returning the wrapped pointer as &lt;code&gt;NonNull&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">랩 된 포인터를 &lt;code&gt;NonNull&amp;lt;T&amp;gt;&lt;/code&gt; 로서 돌려주는 &lt;code&gt;Box&lt;/code&gt; 를 소비합니다 .</target>
        </trans-unit>
        <trans-unit id="d65deb87cbead640f5a8e7cbca5d350987dc2adf" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;CString&lt;/code&gt; and returns the underlying byte buffer.</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; 을 소비하고 기본 바이트 버퍼를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6a1ca546e57f882d5b6895023def69c2697ef0d1" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;CString&lt;/code&gt; and transfers ownership of the string to a C caller.</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; 을 소비하고 문자열 소유권을 C 호출자에게 전송합니다.</target>
        </trans-unit>
        <trans-unit id="69e4d5bd9aa8f33d274d633ff376dd3db7d70f60" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Chain&lt;/code&gt;, returning the wrapped readers.</source>
          <target state="translated">&lt;code&gt;Chain&lt;/code&gt; 소비하여 랩핑 된 리더를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8a04c5d6a932090e711897e776ba8d8350303049" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Error&lt;/code&gt;, returning its inner error (if any).</source>
          <target state="translated">내부 오류 (있는 경우)를 반환 하여 &lt;code&gt;Error&lt;/code&gt; 를 소비합니다 .</target>
        </trans-unit>
        <trans-unit id="e56ff82d9a44becca8536c3779b602bb282b38b6" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;PathBuf&lt;/code&gt;, yielding its internal &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; storage.</source>
          <target state="translated">내부 &lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; 스토리지를 생성 하는 &lt;code&gt;PathBuf&lt;/code&gt; 를 소비합니다 .</target>
        </trans-unit>
        <trans-unit id="fcae5d3c6431bd470bfc52ba96771acd8c041846" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Rc&lt;/code&gt;, returning the wrapped pointer as &lt;code&gt;NonNull&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">랩 된 포인터를 &lt;code&gt;NonNull&amp;lt;T&amp;gt;&lt;/code&gt; 로서 돌려주는 &lt;code&gt;Rc&lt;/code&gt; 를 소비합니다 .</target>
        </trans-unit>
        <trans-unit id="d4a2e2345591515540d5dc5605c65797209f4156" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Rc&lt;/code&gt;, returning the wrapped pointer.</source>
          <target state="translated">&lt;code&gt;Rc&lt;/code&gt; 소비랩 된 포인터를 돌려주는 .</target>
        </trans-unit>
        <trans-unit id="1b11918ce5d9a31884715321a9dfca45f209a871" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;RefCell&lt;/code&gt;, returning the wrapped value.</source>
          <target state="translated">래핑 된 값을 반환 하는 &lt;code&gt;RefCell&lt;/code&gt; 을 소비합니다 .</target>
        </trans-unit>
        <trans-unit id="e62148b7382db0e8e3123660c439b6412df80776" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Take&lt;/code&gt;, returning the wrapped reader.</source>
          <target state="translated">&lt;code&gt;Take&lt;/code&gt; 소비하여 랩핑 된 리더를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e1bc60e97d53971da14a3c560acf7dc4df8a80ba" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;VecDeque&lt;/code&gt; into a front-to-back iterator yielding elements by value.</source>
          <target state="translated">&lt;code&gt;VecDeque&lt;/code&gt; 를 앞뒤 반복자로 소비하여 값을 기준으로 요소를 산출합니다.</target>
        </trans-unit>
        <trans-unit id="c48ddb001736220abc7376d88718761306f4da9e" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; and turns it into a raw pointer.</source>
          <target state="translated">&lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; 소비하여 원시 포인터로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="ceb40caadc1f67b465ff185739de319d6f6c574d" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;self&lt;/code&gt; argument then, if &lt;a href=&quot;#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt;, returns the contained value, otherwise if &lt;a href=&quot;#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, returns the &lt;a href=&quot;../default/trait.default#tymethod.default&quot;&gt;default value&lt;/a&gt; for that type.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 인수를 소비 하면 &lt;a href=&quot;#variant.Some&quot;&gt; &lt;code&gt;Some&lt;/code&gt; &lt;/a&gt; 이면 포함 된 값을 반환하고, 그렇지 않으면 &lt;a href=&quot;#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 이면 해당 유형 의 &lt;a href=&quot;../default/trait.default#tymethod.default&quot;&gt;기본값을&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="41d4facf8b6e6856a14545bcb1d2163523116304" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;self&lt;/code&gt; argument then, if &lt;a href=&quot;enum.option#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt;, returns the contained value, otherwise if &lt;a href=&quot;enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, returns the &lt;a href=&quot;../default/trait.default#tymethod.default&quot;&gt;default value&lt;/a&gt; for that type.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 인수를 소비하고 &lt;a href=&quot;enum.option#variant.Some&quot;&gt; &lt;code&gt;Some&lt;/code&gt; &lt;/a&gt; 이면 포함 된 값을 반환하고 그렇지 않으면 &lt;a href=&quot;enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 이면 해당 유형 의 &lt;a href=&quot;../default/trait.default#tymethod.default&quot;&gt;기본값을&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4b2c07656d35369d8e7938fb2e395e3c35affd45" translate="yes" xml:space="preserve">
          <source>Consumes the &lt;code&gt;self&lt;/code&gt; argument then, if &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;, returns the contained value, otherwise if &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt;, returns the default value for that type.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 인수를 소비하고 &lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; 인 경우 포함 된 값을 리턴하고, 그렇지 않으면 &lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; 인 경우 해당 유형의 기본값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="34fe0b52af65d33efb642000c8f316d35ad2cb7e" translate="yes" xml:space="preserve">
          <source>Consumes the atomic and returns the contained value.</source>
          <target state="translated">원자를 소비하고 포함 된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="731705c3859358317ba8e4addd045638b77ca497" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, counting the number of iterations and returning it.</source>
          <target state="translated">반복자 수를 계산하여 반복 횟수를 세어 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d49b1b99e5b43b4fea4a7448df0310a64a42a109" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, counting the number of iterations and returning it. &lt;a href=&quot;../../../iter/trait.iterator#method.count&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">반복자 수를 계산하여 반복 횟수를 세어 리턴합니다. &lt;a href=&quot;../../../iter/trait.iterator#method.count&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a9e8a15576c6c45f19e491e1a0f6c9927669da9" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, counting the number of iterations and returning it. &lt;a href=&quot;../../iter/trait.iterator#method.count&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">반복자 수를 계산하여 반복 횟수를 세어 리턴합니다. &lt;a href=&quot;../../iter/trait.iterator#method.count&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81265307b5b1725ae223692ec4449b623287e1ad" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, counting the number of iterations and returning it. &lt;a href=&quot;../iter/trait.iterator#method.count&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">반복자 수를 계산하여 반복 횟수를 세어 리턴합니다. &lt;a href=&quot;../iter/trait.iterator#method.count&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86b467568f412dd2180154cf1628f8f8bbc91ace" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, counting the number of iterations and returning it. &lt;a href=&quot;iter/trait.iterator#method.count&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">반복자 수를 계산하여 반복 횟수를 세어 리턴합니다. &lt;a href=&quot;iter/trait.iterator#method.count&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e572ef4dfc4cf712fa35beddaab475a085a83534" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, counting the number of iterations and returning it. &lt;a href=&quot;trait.iterator#method.count&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">반복자 수를 계산하여 반복 횟수를 세어 리턴합니다. &lt;a href=&quot;trait.iterator#method.count&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6be631c95fe8526ab43f34ee017c12cc0b57798" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, returning the last element.</source>
          <target state="translated">반복자를 소비하여 마지막 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="320abeeba81eb3ba2ea0154eda792924469672eb" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, returning the last element. &lt;a href=&quot;../../../iter/trait.iterator#method.last&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">반복자를 소비하여 마지막 요소를 반환합니다. &lt;a href=&quot;../../../iter/trait.iterator#method.last&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11860f915e3e26bb4e0192fdfec253cd9f8eef9d" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, returning the last element. &lt;a href=&quot;../../iter/trait.iterator#method.last&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">반복자를 소비하여 마지막 요소를 반환합니다. &lt;a href=&quot;../../iter/trait.iterator#method.last&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b3b22900c5c10af1cd34efdd994d3cd9dc22fd4" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, returning the last element. &lt;a href=&quot;../iter/trait.iterator#method.last&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">반복자를 소비하여 마지막 요소를 반환합니다. &lt;a href=&quot;../iter/trait.iterator#method.last&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2647f7d658be65626b4f9c09b98eada3baa9fddf" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, returning the last element. &lt;a href=&quot;iter/trait.iterator#method.last&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">반복자를 소비하여 마지막 요소를 반환합니다. &lt;a href=&quot;iter/trait.iterator#method.last&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39c3470339646bcd8941cb0a89249b8875387a4d" translate="yes" xml:space="preserve">
          <source>Consumes the iterator, returning the last element. &lt;a href=&quot;trait.iterator#method.last&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">반복자를 소비하여 마지막 요소를 반환합니다. &lt;a href=&quot;trait.iterator#method.last&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dff142fca06d91036831ead4f39c74323e28cd83" translate="yes" xml:space="preserve">
          <source>Consumes the list into an iterator yielding elements by value.</source>
          <target state="translated">값을 기준으로 요소를 생성하는 반복자로 목록을 소비합니다.</target>
        </trans-unit>
        <trans-unit id="85722a3e6e43496f5586f71b89639cdbd07b242b" translate="yes" xml:space="preserve">
          <source>Consumes the thread, returning the raw pthread_t</source>
          <target state="translated">스레드를 소비하여 원시 pthread_t를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f016f360b0b7afde44df65dd499678daaf642fe9" translate="yes" xml:space="preserve">
          <source>Consumes the thread, returning the raw pthread_t &lt;a href=&quot;../os/unix/thread/trait.joinhandleext#tymethod.into_pthread_t&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">원시가 pthread_t 반환 스레드를 소모 &lt;a href=&quot;../os/unix/thread/trait.joinhandleext#tymethod.into_pthread_t&quot;&gt;더 읽기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a360cb81d6b6b9f7df7a732ad34b0519b5fce95e" translate="yes" xml:space="preserve">
          <source>Consumes this &lt;code&gt;RwLock&lt;/code&gt;, returning the underlying data.</source>
          <target state="translated">이 &lt;code&gt;RwLock&lt;/code&gt; 을 소비 하여 기본 데이터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2b7be8c73bec0659f5fe075043f079bf58af79aa" translate="yes" xml:space="preserve">
          <source>Consumes this cursor, returning the underlying value.</source>
          <target state="translated">이 커서를 소비하여 기본 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f476188742ab01fc54a3051d770d35dfff2e6785" translate="yes" xml:space="preserve">
          <source>Consumes this error indicating that a lock is poisoned, returning the underlying guard to allow access regardless.</source>
          <target state="translated">잠금이 감염되었음을 나타내는이 오류가 발생하여 기본 가드를 반환하여 액세스에 관계없이 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5db78ef3b9badfb4f68a1ad2e89810d00faffba9" translate="yes" xml:space="preserve">
          <source>Consumes this error, returning original &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; which generated the error.</source>
          <target state="translated">이 오류를 소비하고 오류 를 생성 한 원래 &lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="664126a0996a4735a77003a413752311bba7d6ec" translate="yes" xml:space="preserve">
          <source>Consumes this error, returning the underlying vector of bytes which generated the error in the first place.</source>
          <target state="translated">이 오류를 사용하여 처음에 오류를 생성 한 기본 바이트 벡터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="52fedaa69eb5406b41213f56b5187c8bc2c88b5e" translate="yes" xml:space="preserve">
          <source>Consumes this mutex, returning the underlying data.</source>
          <target state="translated">이 뮤텍스를 소비하여 기본 데이터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="899d67ae36ad60786b3ddce582e9aa4951486a4b" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying file descriptor.</source>
          <target state="translated">원시 기본 파일 디스크립터를 리턴하여이 오브젝트를 소비합니다.</target>
        </trans-unit>
        <trans-unit id="e1bb204224526999e19051645e0ceaa4debbe856" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying file descriptor. &lt;a href=&quot;../io/trait.intorawfd#tymethod.into_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">원시 기본 파일 디스크립터를 리턴하여이 오브젝트를 소비합니다. &lt;a href=&quot;../io/trait.intorawfd#tymethod.into_raw_fd&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e54cc261c94f5e4acec4ce3bd36ab7ec6bf1f85d" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying file descriptor. &lt;a href=&quot;../os/unix/io/trait.intorawfd#tymethod.into_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">원시 기본 파일 디스크립터를 리턴하여이 오브젝트를 소비합니다. &lt;a href=&quot;../os/unix/io/trait.intorawfd#tymethod.into_raw_fd&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da9b21ad229a7c988cb3b9101ec518098b8c4c0c" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying file descriptor. &lt;a href=&quot;trait.intorawfd#tymethod.into_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 개체를 사용하여 원시 기본 파일 설명자를 반환합니다. &lt;a href=&quot;trait.intorawfd#tymethod.into_raw_fd&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2634374739c97a25ec43d6ea3421adb65f1a223b" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying handle.</source>
          <target state="translated">이 객체를 소비하여 원시 기본 핸들을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="63ec81086c0de5a467b87fb931278a37b366986b" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying handle. &lt;a href=&quot;../os/windows/io/trait.intorawhandle#tymethod.into_raw_handle&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 객체를 소비하여 원시 기본 핸들을 반환합니다. &lt;a href=&quot;../os/windows/io/trait.intorawhandle#tymethod.into_raw_handle&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69d0867df0e1c5bcfda60e3fcf190e5d7e48e63f" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying socket.</source>
          <target state="translated">이 객체를 소비하여 원시 기본 소켓을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="74553b31856fd1f0d72dbd05aba42306c197a100" translate="yes" xml:space="preserve">
          <source>Consumes this object, returning the raw underlying socket. &lt;a href=&quot;../os/windows/io/trait.intorawsocket#tymethod.into_raw_socket&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 객체를 소비하여 원시 기본 소켓을 반환합니다. &lt;a href=&quot;../os/windows/io/trait.intorawsocket#tymethod.into_raw_socket&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c8f443a92f7ec0a563b52d3aa6d1843e77a4215" translate="yes" xml:space="preserve">
          <source>Container type for copied ASCII characters.</source>
          <target state="translated">복사 된 ASCII 문자의 컨테이너 유형입니다.</target>
        </trans-unit>
        <trans-unit id="23f055fdbeb2a0535242202ac13c7332f92fce3d" translate="yes" xml:space="preserve">
          <source>Containers and collections</source>
          <target state="translated">컨테이너 및 컬렉션</target>
        </trans-unit>
        <trans-unit id="9f86c9f36bdb5e7e1c5348479bc33b752a16aca0" translate="yes" xml:space="preserve">
          <source>Contains an invalid digit.</source>
          <target state="translated">유효하지 않은 숫자를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="59d7d83d9af2d32994ca60fb2bb445f72f6e7e69" translate="yes" xml:space="preserve">
          <source>Contains struct definitions for the layout of compiler built-in types.</source>
          <target state="translated">컴파일러 내장 유형의 레이아웃에 대한 구조체 정의를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="c76f50ac6b72d1021fa529d20d4e56e874207013" translate="yes" xml:space="preserve">
          <source>Contains the error value</source>
          <target state="translated">오류 값을 포함합니다</target>
        </trans-unit>
        <trans-unit id="cd7b95fda18d884a88e2263e885b30a6e407fff6" translate="yes" xml:space="preserve">
          <source>Contains the success value</source>
          <target state="translated">성공 가치를 포함</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="1565dbaa93d969753a40a9d70f61c1696b03118c" translate="yes" xml:space="preserve">
          <source>Context::borrow</source>
          <target state="translated">Context::borrow</target>
        </trans-unit>
        <trans-unit id="e3d1c02435c6a2d687138f66ddcc40e73641cd1c" translate="yes" xml:space="preserve">
          <source>Context::borrow_mut</source>
          <target state="translated">Context::borrow_mut</target>
        </trans-unit>
        <trans-unit id="0898d65dcfba5e48fda111a778d370a9d715471e" translate="yes" xml:space="preserve">
          <source>Context::fmt</source>
          <target state="translated">Context::fmt</target>
        </trans-unit>
        <trans-unit id="af6cd1441831eb65dca04e60a71500ab552676b9" translate="yes" xml:space="preserve">
          <source>Context::from</source>
          <target state="translated">Context::from</target>
        </trans-unit>
        <trans-unit id="a86162adeb4ffc5c250e312791ae927f3ecee520" translate="yes" xml:space="preserve">
          <source>Context::from_waker</source>
          <target state="translated">Context::from_waker</target>
        </trans-unit>
        <trans-unit id="daf36cab311b5d83aa9bb216e4788de0bcb535b1" translate="yes" xml:space="preserve">
          <source>Context::into</source>
          <target state="translated">Context::into</target>
        </trans-unit>
        <trans-unit id="72cbb026ee7607dd2f80a005f1d24e823c98983a" translate="yes" xml:space="preserve">
          <source>Context::try_from</source>
          <target state="translated">Context::try_from</target>
        </trans-unit>
        <trans-unit id="d326198662d3ba935aff00ee2fe110321826c543" translate="yes" xml:space="preserve">
          <source>Context::try_into</source>
          <target state="translated">Context::try_into</target>
        </trans-unit>
        <trans-unit id="ff59099d57a0af6f3c5e5b3332a9f0bbe81ac0f1" translate="yes" xml:space="preserve">
          <source>Context::type_id</source>
          <target state="translated">Context::type_id</target>
        </trans-unit>
        <trans-unit id="636dd081a114b46f92a5a1e315289fa9428bd440" translate="yes" xml:space="preserve">
          <source>Context::waker</source>
          <target state="translated">Context::waker</target>
        </trans-unit>
        <trans-unit id="f634493483ecf86e1ff52ab45c423371f04d0515" translate="yes" xml:space="preserve">
          <source>Contiguous separators are separated by the empty string.</source>
          <target state="translated">연속적인 구분 기호는 빈 문자열로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="2afa282886d5b8c1adbe117bcd3172ed85da4fb5" translate="yes" xml:space="preserve">
          <source>Contiguous separators can lead to possibly surprising behavior when whitespace is used as the separator. This code is correct:</source>
          <target state="translated">연속적인 구분 기호는 공백이 구분 기호로 사용될 때 놀라운 동작으로 이어질 수 있습니다. 이 코드는 정확합니다 :</target>
        </trans-unit>
        <trans-unit id="adf4707abbd4ad3ebbf9b0b75ce5e002baa96df2" translate="yes" xml:space="preserve">
          <source>Continuing with our &lt;code&gt;largest&lt;/code&gt; function, Listing 10-4 shows two functions that both find the largest value in a slice.</source>
          <target state="translated">&lt;code&gt;largest&lt;/code&gt; 함수로 계속해서 , Listing 10-4는 슬라이스에서 가장 큰 값을 찾는 두 가지 함수를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1b7c7a0261ae178e3c9059e91b3b86057d1530f2" translate="yes" xml:space="preserve">
          <source>Contrast this with what happens when Rust tries to determine how much space a recursive type like the &lt;code&gt;List&lt;/code&gt; enum in Listing 15-2 needs. The compiler starts by looking at the &lt;code&gt;Cons&lt;/code&gt; variant, which holds a value of type &lt;code&gt;i32&lt;/code&gt; and a value of type &lt;code&gt;List&lt;/code&gt;. Therefore, &lt;code&gt;Cons&lt;/code&gt; needs an amount of space equal to the size of an &lt;code&gt;i32&lt;/code&gt; plus the size of a &lt;code&gt;List&lt;/code&gt;. To figure out how much memory the &lt;code&gt;List&lt;/code&gt; type needs, the compiler looks at the variants, starting with the &lt;code&gt;Cons&lt;/code&gt; variant. The &lt;code&gt;Cons&lt;/code&gt; variant holds a value of type &lt;code&gt;i32&lt;/code&gt; and a value of type &lt;code&gt;List&lt;/code&gt;, and this process continues infinitely, as shown in Figure 15-1.</source>
          <target state="translated">Rust가 Listing 15-2 의 &lt;code&gt;List&lt;/code&gt; 열거 형과 같은 재귀 유형이 필요한 공간을 결정하려고 할 때 발생하는 상황과 이와 대조하십시오 . 컴파일러는 &lt;code&gt;i32&lt;/code&gt; 유형 의 값과 &lt;code&gt;List&lt;/code&gt; 유형의 값을 보유하는 &lt;code&gt;Cons&lt;/code&gt; 변형 을 살펴보면서 시작합니다 . 따라서 &lt;code&gt;Cons&lt;/code&gt; 에는 &lt;code&gt;i32&lt;/code&gt; 크기와 &lt;code&gt;List&lt;/code&gt; 크기에 해당 하는 공간이 필요합니다 . &lt;code&gt;List&lt;/code&gt; 유형에 필요한 메모리 양을 파악하기 위해 컴파일러는 &lt;code&gt;Cons&lt;/code&gt; 변형 부터 시작하여 변형을 살펴 봅니다 . &lt;code&gt;Cons&lt;/code&gt; 변형 형의 값을 보유 &lt;code&gt;i32&lt;/code&gt; 와 형의 값 &lt;code&gt;List&lt;/code&gt; 이 프로세스는 그림 15-1에 표시된대로 무한정 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">Contributing</target>
        </trans-unit>
        <trans-unit id="daf672e0c147a0e9bab677b209616585123c8834" translate="yes" xml:space="preserve">
          <source>Contributing changes to the documentation</source>
          <target state="translated">설명서 변경 사항 제공</target>
        </trans-unit>
        <trans-unit id="e9e6acf5a539717a2a1c11bdab18154d5f44486b" translate="yes" xml:space="preserve">
          <source>Contributions are appreciated! If you see a part of the docs that can be improved, submit a PR, or chat with us first on &lt;a href=&quot;https://discord.gg/rust-lang&quot;&gt;Discord&lt;/a&gt; #docs.</source>
          <target state="translated">기여에 감사드립니다! 개선 할 수있는 문서의 일부를 발견하면 PR을 제출하거나 먼저 &lt;a href=&quot;https://discord.gg/rust-lang&quot;&gt;Discord&lt;/a&gt; #docs 에서 당사와 채팅하십시오 .</target>
        </trans-unit>
        <trans-unit id="32d5e73cc786c925f3da2cd069f7e326999234ed" translate="yes" xml:space="preserve">
          <source>Contributions are appreciated! If you see a part of the docs that can be improved, submit a PR, or chat with us first on irc.mozilla.org #rust-docs.</source>
          <target state="translated">기부에 감사드립니다! 개선 할 수있는 문서의 일부가 보이면 먼저 PR을 제출하거나 irc.mozilla.org # rust-docs에서 당사와 채팅하십시오.</target>
        </trans-unit>
        <trans-unit id="4722c5ea64f5bf604117b9b25da5ac1ab2753262" translate="yes" xml:space="preserve">
          <source>Control Flow</source>
          <target state="translated">제어 흐름</target>
        </trans-unit>
        <trans-unit id="c7df0db6bad4e8585308b8102850117602eb62d1" translate="yes" xml:space="preserve">
          <source>Control codes (code points with the general category of &lt;code&gt;Cc&lt;/code&gt;) are described in Chapter 4 (Character Properties) of the &lt;a href=&quot;https://www.unicode.org/versions/latest/&quot;&gt;Unicode Standard&lt;/a&gt; and specified in the &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;Unicode Character Database&lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt&quot;&gt;&lt;code&gt;UnicodeData.txt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제어 코드 (일반 범주가 &lt;code&gt;Cc&lt;/code&gt; 인 코드 포인트 )는 &lt;a href=&quot;https://www.unicode.org/versions/latest/&quot;&gt;유니 코드 표준&lt;/a&gt; 의 4 장 (문자 속성)에 설명 되어 있으며 &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;유니 코드 문자 데이터베이스 &lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt&quot;&gt; &lt;code&gt;UnicodeData.txt&lt;/code&gt; 에&lt;/a&gt; 지정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="45095d8dc69b4648143056c214455a4d7009a8c4" translate="yes" xml:space="preserve">
          <source>Control flow based on pattern matching.</source>
          <target state="translated">패턴 일치를 기반으로 흐름을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="1b952765486271a66399576ae71e520e40ee4783" translate="yes" xml:space="preserve">
          <source>Control structures that check for &lt;strong&gt;true&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참을&lt;/strong&gt; 확인하는 제어 구조&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e0572ae17a43a2df2638497d94908f8eb5a0503" translate="yes" xml:space="preserve">
          <source>Control-flow operators</source>
          <target state="translated">제어 흐름 연산자</target>
        </trans-unit>
        <trans-unit id="2c65773824f6929ec26bae8f353f6ed64c7f3286" translate="yes" xml:space="preserve">
          <source>ControlFlow</source>
          <target state="translated">ControlFlow</target>
        </trans-unit>
        <trans-unit id="36cf6a85afb3fd9109379f61591bea9c201dd973" translate="yes" xml:space="preserve">
          <source>Controlling How Tests Are Run</source>
          <target state="translated">테스트 실행 방법 제어</target>
        </trans-unit>
        <trans-unit id="5707c60aebea83cbd7837ffbf8e431127141e410" translate="yes" xml:space="preserve">
          <source>Controls whether this socket sees the multicast packets it sends itself. Note that this may not have any affect on IPv4 sockets.</source>
          <target state="translated">이 소켓이 자신에게 보내는 멀티 캐스트 패킷을 볼지 여부를 제어합니다. 이는 IPv4 소켓에 영향을 미치지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61856b8c17a4ff32006fe4b7dcc6f96f253b2120" translate="yes" xml:space="preserve">
          <source>Conventions</source>
          <target state="translated">Conventions</target>
        </trans-unit>
        <trans-unit id="092aa89502826a1ba0604d4eb73039978fa5a111" translate="yes" xml:space="preserve">
          <source>Conversely, the following are possible in a const function, but not in a const context:</source>
          <target state="translated">반대로 다음은 const 함수에서 가능하지만 const 컨텍스트에서는 가능하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="55a8297e0b79d52dcaa5d700da77e6ccf4c643bf" translate="yes" xml:space="preserve">
          <source>Conversion from an &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 에서 변환 .</target>
        </trans-unit>
        <trans-unit id="b0728f8954771f0cf2a6d90b9336f6216e4de343" translate="yes" xml:space="preserve">
          <source>Conversion from an &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 에서 변환 .</target>
        </trans-unit>
        <trans-unit id="e2f1c886d4402d3452f7af4ab3d78e0cd036e8ff" translate="yes" xml:space="preserve">
          <source>Conversion into a &lt;code&gt;Future&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Future&lt;/code&gt; 로의 전환 .</target>
        </trans-unit>
        <trans-unit id="4685ebfc2fe93695d3a598db9f24aa00087f46ee" translate="yes" xml:space="preserve">
          <source>Conversion into an &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 로 변환 .</target>
        </trans-unit>
        <trans-unit id="f4c6e0e2914a6a9cc436ac2207e563d7c9c7895d" translate="yes" xml:space="preserve">
          <source>Conversion into an &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 로 변환 .</target>
        </trans-unit>
        <trans-unit id="b08eaadf77cfdba7944ddcaf69eee5a983b74af3" translate="yes" xml:space="preserve">
          <source>Conversions</source>
          <target state="translated">Conversions</target>
        </trans-unit>
        <trans-unit id="632a3eb38bb1301cca465e65b2f77c8549ef23ba" translate="yes" xml:space="preserve">
          <source>Convert a &lt;code&gt;VaListImpl&lt;/code&gt; into a &lt;code&gt;VaList&lt;/code&gt; that is binary-compatible with C's &lt;code&gt;va_list&lt;/code&gt;.</source>
          <target state="translated">개종자 &lt;code&gt;VaListImpl&lt;/code&gt; 을 에 &lt;code&gt;VaList&lt;/code&gt; C의와 바이너리 호환 &lt;code&gt;va_list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ae80f882753c1d4ea0594d1744a65e014dba83a" translate="yes" xml:space="preserve">
          <source>Convert a host byte order &lt;code&gt;u128&lt;/code&gt; into an &lt;code&gt;Ipv6Addr&lt;/code&gt;.</source>
          <target state="translated">호스트 바이트 순서로 변환 &lt;code&gt;u128&lt;/code&gt; 을 에 &lt;code&gt;Ipv6Addr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9cd775641215a015813ce4baccc628dea1e3ea7c" translate="yes" xml:space="preserve">
          <source>Convert an &lt;code&gt;Ipv6Addr&lt;/code&gt; into a host byte order &lt;code&gt;u128&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ipv6Addr&lt;/code&gt; 을 호스트 바이트 순서로 변환 &lt;code&gt;u128&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29b4c962da0060360ea45bbdd0dec66bf9f4f5b1" translate="yes" xml:space="preserve">
          <source>Convert into a mutable reference to the underlying data.</source>
          <target state="translated">기본 데이터에 대한 변경 가능한 참조로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="b4a1aab35574f79c29675d3bd0d69092c5c5fa08" translate="yes" xml:space="preserve">
          <source>Convert into a reference to the underlying data.</source>
          <target state="translated">기본 데이터에 대한 참조로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="2663f76b761b8d4f0ad5db78669e3169ecb9e4e4" translate="yes" xml:space="preserve">
          <source>Convert strings to pig latin. The first consonant of each word is moved to the end of the word and &amp;ldquo;ay&amp;rdquo; is added, so &amp;ldquo;first&amp;rdquo; becomes &amp;ldquo;irst-fay.&amp;rdquo; Words that start with a vowel have &amp;ldquo;hay&amp;rdquo; added to the end instead (&amp;ldquo;apple&amp;rdquo; becomes &amp;ldquo;apple-hay&amp;rdquo;). Keep in mind the details about UTF-8 encoding!</source>
          <target state="translated">문자열을 돼지 라틴어로 변환하십시오. 각 단어의 첫 번째 자음이 단어의 끝으로 이동하고 &quot;ay&quot;가 추가되므로 &quot;first&quot;는 &quot;irst-fay&quot;가됩니다. 모음으로 시작하는 단어는 끝에&amp;ldquo;hay&amp;rdquo;가 추가됩니다 (&amp;ldquo;apple&amp;rdquo;은&amp;ldquo;apple-hay&amp;rdquo;가 됨). UTF-8 인코딩에 대한 세부 사항을 명심하십시오!</target>
        </trans-unit>
        <trans-unit id="21df0ccb0f8ffc845f6196c0e1cbfa95c3c51820" translate="yes" xml:space="preserve">
          <source>Convert temperatures between Fahrenheit and Celsius.</source>
          <target state="translated">화씨와 섭씨 온도를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="091349b6ffaa4917f7277a7641371ef8df385330" translate="yes" xml:space="preserve">
          <source>Convert to a &lt;code&gt;Ready&lt;/code&gt; variant.</source>
          <target state="translated">&lt;code&gt;Ready&lt;/code&gt; 변형으로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ffcd5ffc0efc925f8263fdb1438fe188212c8c1" translate="yes" xml:space="preserve">
          <source>Convert with LLVM&amp;rsquo;s fptoui/fptosi, which may return undef for values out of range (&lt;a href=&quot;https://github.com/rust-lang/rust/issues/10184&quot;&gt;https://github.com/rust-lang/rust/issues/10184&lt;/a&gt;)</source>
          <target state="translated">범위를 벗어난 값에 대해 undef를 반환 할 수있는 LLVM의 fptoui / fptosi로 변환 ( &lt;a href=&quot;https://github.com/rust-lang/rust/issues/10184&quot;&gt;https://github.com/rust-lang/rust/issues/10184&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="8928dc4a5e7c5f22246fed4bcd01ddfc89bdf7a8" translate="yes" xml:space="preserve">
          <source>Converting a foreign C string into a Rust &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">외래 C 문자열을 Rust &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 으로 변환 :</target>
        </trans-unit>
        <trans-unit id="f8157f41cdecccc67a582dcd96bfffe31b49aebf" translate="yes" xml:space="preserve">
          <source>Converting the raw pointer back into a &lt;code&gt;Box&lt;/code&gt; with &lt;a href=&quot;struct.box#method.from_raw&quot;&gt;&lt;code&gt;Box::from_raw&lt;/code&gt;&lt;/a&gt; for automatic cleanup:</source>
          <target state="translated">에 원시 포인터 다시 변환 &lt;code&gt;Box&lt;/code&gt; 와 &lt;a href=&quot;struct.box#method.from_raw&quot;&gt; &lt;code&gt;Box::from_raw&lt;/code&gt; &lt;/a&gt; 자동 정리를 들어 :</target>
        </trans-unit>
        <trans-unit id="baa923dfbcebb6ad2daa98e4440769d475172a5e" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI16&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI16&lt;/code&gt; 을 &lt;code&gt;NonZeroI128&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="c641a7f3a20a073809c26b096c770917ca1b8fa0" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI16&lt;/code&gt; to &lt;code&gt;NonZeroI32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI16&lt;/code&gt; 을 &lt;code&gt;NonZeroI32&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="07161e6f6cf7705592f9f7dd773233dec37c2ea8" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI16&lt;/code&gt; to &lt;code&gt;NonZeroI64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI16&lt;/code&gt; 을 &lt;code&gt;NonZeroI64&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="68be8506a5e190f2af40f2aa50bc8a996987104d" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI16&lt;/code&gt; to &lt;code&gt;NonZeroIsize&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI16&lt;/code&gt; 을 &lt;code&gt;NonZeroIsize&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="86f4f3eebcfe7667a750f187d74dd7e19d2956ef" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI32&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI32&lt;/code&gt; 를 &lt;code&gt;NonZeroI128&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="4ed53b1c748d637092780b67cfac6af1f6ea4224" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI32&lt;/code&gt; to &lt;code&gt;NonZeroI64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI32&lt;/code&gt; 를 &lt;code&gt;NonZeroI64&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="096b1ae0c601d984fa5cf2109f8b801db8814a56" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI64&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI64&lt;/code&gt; 를 &lt;code&gt;NonZeroI128&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="402e3fc64c15ba260be1dd62281c85260a8b4b09" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI8&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI8&lt;/code&gt; 을 &lt;code&gt;NonZeroI128&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="04a0f5b1983660d7798dc7c24010f1245af209c0" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI8&lt;/code&gt; to &lt;code&gt;NonZeroI16&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI8&lt;/code&gt; 을 &lt;code&gt;NonZeroI16&lt;/code&gt; 으로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="42479bae0d89974c52409a05d9c2a2e02e1a0dc1" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI8&lt;/code&gt; to &lt;code&gt;NonZeroI32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI8&lt;/code&gt; 을 &lt;code&gt;NonZeroI32&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="1a20fe546183aee90a1f2aa9023dceb208e00315" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI8&lt;/code&gt; to &lt;code&gt;NonZeroI64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI8&lt;/code&gt; 을 &lt;code&gt;NonZeroI64&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="3adcfa785da92847e310d780d1f6d90896ab77a5" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroI8&lt;/code&gt; to &lt;code&gt;NonZeroIsize&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroI8&lt;/code&gt; 을 &lt;code&gt;NonZeroIsize&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b8799f3d2fb779c683c0c6e080f0cc43c45ec798" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU16&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU16&lt;/code&gt; 을 &lt;code&gt;NonZeroI128&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="26a8b8a7a76d61bacc74bbd1749a0f5ec1337234" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU16&lt;/code&gt; to &lt;code&gt;NonZeroI32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU16&lt;/code&gt; 을 &lt;code&gt;NonZeroI32&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="c0a917356876a1e4098603fd869a05c1fb9f3cb6" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU16&lt;/code&gt; to &lt;code&gt;NonZeroI64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU16&lt;/code&gt; 을 &lt;code&gt;NonZeroI64&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b6712a025f1e9fe97991e46a7fc7d8da6d415eed" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU16&lt;/code&gt; to &lt;code&gt;NonZeroU128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU16&lt;/code&gt; 을 &lt;code&gt;NonZeroU128&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="df6f803b29fefe841cb4b0f76dae27cbe0082c53" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU16&lt;/code&gt; to &lt;code&gt;NonZeroU32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU16&lt;/code&gt; 을 &lt;code&gt;NonZeroU32&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="161b3795d904e939acb559f3d492aba114edceb5" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU16&lt;/code&gt; to &lt;code&gt;NonZeroU64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU16&lt;/code&gt; 을 &lt;code&gt;NonZeroU64&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="52e2f95cb54e5fa30831be959f06b54bf242304a" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU16&lt;/code&gt; to &lt;code&gt;NonZeroUsize&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU16&lt;/code&gt; 을 &lt;code&gt;NonZeroUsize&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="030d4154ecbd05fc294c23ac91bf96067ca7c99b" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU32&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU32&lt;/code&gt; 를 &lt;code&gt;NonZeroI128&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b9dd12a38aa037b11f08bca202811cb483b0b5c6" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU32&lt;/code&gt; to &lt;code&gt;NonZeroI64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU32&lt;/code&gt; 를 &lt;code&gt;NonZeroI64&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="3edb1b5d801ea71ac0204fce566c0afb2ac2ae86" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU32&lt;/code&gt; to &lt;code&gt;NonZeroU128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU32&lt;/code&gt; 를 &lt;code&gt;NonZeroU128&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0526c2a9f7d4d502d47677da7ddea38ee66ba9c7" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU32&lt;/code&gt; to &lt;code&gt;NonZeroU64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU32&lt;/code&gt; 를 &lt;code&gt;NonZeroU64&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="89bfe679eafeb135d27b5ad1be5b49e79e05bc35" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU64&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU64&lt;/code&gt; 를 &lt;code&gt;NonZeroI128&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="a97d7a1a48ea6f685cae0769468794bd754f71ce" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU64&lt;/code&gt; to &lt;code&gt;NonZeroU128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU64&lt;/code&gt; 를 &lt;code&gt;NonZeroU128&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="cd66e8967a6c34a2d23ecd1e32520a4759311f80" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroI128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; 을 &lt;code&gt;NonZeroI128&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="10ec73c2a19ae41861e9c9367eb1ee460f057d8c" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroI16&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; 을 &lt;code&gt;NonZeroI16&lt;/code&gt; 으로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="7d5a3eb7d4674db0116e2e5f4bbeb50caa813887" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroI32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; 을 &lt;code&gt;NonZeroI32&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="6e33e4c5a98525259124815c740bed9bac9b5517" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroI64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; 을 &lt;code&gt;NonZeroI64&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="6a7a0a687cc1aeebe638e7655a540267bf3cf01a" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroIsize&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; 을 &lt;code&gt;NonZeroIsize&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="793b46c318e6436f640baf3ce73690517a94fa4e" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroU128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; 을 &lt;code&gt;NonZeroU128&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="419691bf7a1cb1f462addc416718e59ae2b78b7e" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroU16&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; 을 &lt;code&gt;NonZeroU16&lt;/code&gt; 으로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="bdcdd7d6eabf746f3164fdb20956afc145aced4c" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroU32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; 을 &lt;code&gt;NonZeroU32&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="89921efa1a13ccedd0b9cd6ee90c40ce39fa30a3" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroU64&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; 을 &lt;code&gt;NonZeroU64&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="762de145b915490ca488401d08b4fe84a7bc2887" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;NonZeroU8&lt;/code&gt; to &lt;code&gt;NonZeroUsize&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; 을 &lt;code&gt;NonZeroUsize&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="9e885056ac185138dc78092d4ea54041a37dc5d3" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;f32&lt;/code&gt; to &lt;code&gt;f64&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;f32&lt;/code&gt; 를 &lt;code&gt;f64&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="9450ee8901fa8fec9b4dc5593c1f65b5fca3afa4" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i16&lt;/code&gt; to &lt;code&gt;f32&lt;/code&gt; losslessly.</source>
          <target state="translated">손실 &lt;code&gt;i16&lt;/code&gt; 을 &lt;code&gt;f32&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="c13ea6f475d9ab6e5c07e35d4696724453401fac" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i16&lt;/code&gt; to &lt;code&gt;f64&lt;/code&gt; losslessly.</source>
          <target state="translated">변환은 &lt;code&gt;i16&lt;/code&gt; 에 &lt;code&gt;f64&lt;/code&gt; 손실없이.</target>
        </trans-unit>
        <trans-unit id="7df4ea64c8885220b9a2fe713491b60ba3c56972" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i16&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">손실 &lt;code&gt;i16&lt;/code&gt; 을 &lt;code&gt;i128&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="066b12c2023635591803a7de8873d9f2185e673c" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i16&lt;/code&gt; to &lt;code&gt;i32&lt;/code&gt; losslessly.</source>
          <target state="translated">손실 &lt;code&gt;i16&lt;/code&gt; 을 &lt;code&gt;i32&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="32b66b3b21b63cd882a59815269257e778e4e766" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i16&lt;/code&gt; to &lt;code&gt;i64&lt;/code&gt; losslessly.</source>
          <target state="translated">손실 &lt;code&gt;i16&lt;/code&gt; 을 &lt;code&gt;i64&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="176169519451b78ef7d9454c6c09e44d6e6348aa" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i16&lt;/code&gt; to &lt;code&gt;isize&lt;/code&gt; losslessly.</source>
          <target state="translated">변환은 &lt;code&gt;i16&lt;/code&gt; 하는 &lt;code&gt;isize&lt;/code&gt; 손실없이.</target>
        </trans-unit>
        <trans-unit id="325b6dac0fadc7819edc16d662042406351bb7b5" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i32&lt;/code&gt; to &lt;code&gt;f64&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;i32&lt;/code&gt; 를 &lt;code&gt;f64&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="6039d806ea44fcbfa5aafe10e76cf46494541e6e" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i32&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;i32&lt;/code&gt; 를 &lt;code&gt;i128&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="3cda6e447827fd770aac022a77a94052f07c2f9a" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i32&lt;/code&gt; to &lt;code&gt;i64&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;i32&lt;/code&gt; 를 &lt;code&gt;i64&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="bcffb3b4c2bf59f7885d95bb4d5f9b107a68e919" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i64&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">손실 &lt;code&gt;i64&lt;/code&gt; 를 &lt;code&gt;i128&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="f806826bb95cc560d9e8854c897990e2b5b540f7" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i8&lt;/code&gt; to &lt;code&gt;f32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;i8&lt;/code&gt; 을 &lt;code&gt;f32&lt;/code&gt; 로 변환손실없이 .</target>
        </trans-unit>
        <trans-unit id="991359588e15175c8e81cc7a9174c1857f1132ac" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i8&lt;/code&gt; to &lt;code&gt;f64&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;i8&lt;/code&gt; 을 &lt;code&gt;f64&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="4b1ef1b13e16d41ca33dc5b12ba030e96eac47d9" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i8&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;i8&lt;/code&gt; 을 &lt;code&gt;i128&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="50826e19009afe19f35fcfd608dc46c40e21ef12" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i8&lt;/code&gt; to &lt;code&gt;i16&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;i8&lt;/code&gt; 을 &lt;code&gt;i16&lt;/code&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="e269283f07eea8b0123d5a6c4933c030d3bb2289" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i8&lt;/code&gt; to &lt;code&gt;i32&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;i8&lt;/code&gt; 을 &lt;code&gt;i32&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="750d95f279cf7437e6254205c1b12f19fccb7484" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i8&lt;/code&gt; to &lt;code&gt;i64&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;i8&lt;/code&gt; 을 &lt;code&gt;i64&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="f80b1a937ec301729c021d700aed300da903ba7f" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;i8&lt;/code&gt; to &lt;code&gt;isize&lt;/code&gt; losslessly.</source>
          <target state="translated">변환은 &lt;code&gt;i8&lt;/code&gt; 하는 &lt;code&gt;isize&lt;/code&gt; 손실없이.</target>
        </trans-unit>
        <trans-unit id="b3118d157bebbe145c80cae4a3ba4473fe7e2baa" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;self&lt;/code&gt; into a vector without clones or allocation.</source>
          <target state="translated">복제 또는 할당없이 &lt;code&gt;self&lt;/code&gt; 를 벡터로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="3e1847a1d36577d583430e2b6aaa855126511bf5" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;self&lt;/code&gt; into an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&amp;lt;E&amp;gt;&lt;/code&gt;&lt;/a&gt;, consuming &lt;code&gt;self&lt;/code&gt;, and discarding the success value, if any.</source>
          <target state="translated">변환의 &lt;code&gt;self&lt;/code&gt; 에 &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&amp;lt;E&amp;gt;&lt;/code&gt; &lt;/a&gt; , 소모 &lt;code&gt;self&lt;/code&gt; 하고있는 경우, 성공 값을 폐기.</target>
        </trans-unit>
        <trans-unit id="380e92b4601a9003a61c30a1c01ca2d45214a21d" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;self&lt;/code&gt; into an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, consuming &lt;code&gt;self&lt;/code&gt;, and discarding the error, if any.</source>
          <target state="translated">변환의 &lt;code&gt;self&lt;/code&gt; 에 &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; , 소모 &lt;code&gt;self&lt;/code&gt; 하고있는 경우, 오류를 폐기.</target>
        </trans-unit>
        <trans-unit id="0d2d146dfe027d061d306c284b59eef1cbacf690" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;self&lt;/code&gt; to big endian from the target's endianness.</source>
          <target state="translated">대상의 엔디안에서 &lt;code&gt;self&lt;/code&gt; 를 빅 엔디안으로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="48b2205b108536ac02137ea0238a9a7baa385e81" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;self&lt;/code&gt; to little endian from the target's endianness.</source>
          <target state="translated">대상의 엔디안에서 &lt;code&gt;self&lt;/code&gt; 을 리틀 엔디안으로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="be0f27a68f5769d87c8f6b469342edf755ece094" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;f32&lt;/code&gt; losslessly.</source>
          <target state="translated">손실 &lt;code&gt;u16&lt;/code&gt; 을 &lt;code&gt;f32&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="6b12c7976b1f010430fa97687761afc5a486919a" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;f64&lt;/code&gt; losslessly.</source>
          <target state="translated">변환은 &lt;code&gt;u16&lt;/code&gt; 에 &lt;code&gt;f64&lt;/code&gt; 손실없이.</target>
        </trans-unit>
        <trans-unit id="2ca1abfa7b7e1ab1ca12c49bc58a94a4fca1814f" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;u16&lt;/code&gt; 을 &lt;code&gt;i128&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="662b7cf51a074addb9b063d75e6b3d736f46b9cb" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;i32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;u16&lt;/code&gt; 을 &lt;code&gt;i32&lt;/code&gt; 로 변환 무손실로 .</target>
        </trans-unit>
        <trans-unit id="a6fd4c43ee772f1a7deaeb8da687490cfe2c4b14" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;i64&lt;/code&gt; losslessly.</source>
          <target state="translated">손실 &lt;code&gt;u16&lt;/code&gt; 을 &lt;code&gt;i64&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="bcaf1501de01e0391536824e521f0df7222df02e" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;u128&lt;/code&gt; losslessly.</source>
          <target state="translated">손실 &lt;code&gt;u16&lt;/code&gt; 을 &lt;code&gt;u128&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="f00f0433f6828b8350a805670e92a0f59ef871b8" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;u32&lt;/code&gt; losslessly.</source>
          <target state="translated">손실 &lt;code&gt;u16&lt;/code&gt; 을 &lt;code&gt;u32&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="1cd184d23668186c5a7962d548c84e3b2039ab4b" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;u64&lt;/code&gt; losslessly.</source>
          <target state="translated">손실 &lt;code&gt;u16&lt;/code&gt; 을 &lt;code&gt;u64&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="ebd639b560738a148d7b6fa18b6ebd3272d9e04c" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u16&lt;/code&gt; to &lt;code&gt;usize&lt;/code&gt; losslessly.</source>
          <target state="translated">변환은 &lt;code&gt;u16&lt;/code&gt; 하는 &lt;code&gt;usize&lt;/code&gt; 손실없이.</target>
        </trans-unit>
        <trans-unit id="fc2695359ec0ec35a15bba23386e90b3e58768bf" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u32&lt;/code&gt; to &lt;code&gt;f64&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;u32&lt;/code&gt; 를 &lt;code&gt;f64&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0f6e366dca089b959ebd4359026f9f012f0c6d09" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u32&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;u32&lt;/code&gt; 를 &lt;code&gt;i128&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="68a1a10087e7fb2093cade49bb8a90e301ae2830" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u32&lt;/code&gt; to &lt;code&gt;i64&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;u32&lt;/code&gt; 를 &lt;code&gt;i64&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="98d09bc8923763636fae8c1543635d01aa5ef84c" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u32&lt;/code&gt; to &lt;code&gt;u128&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;u32&lt;/code&gt; 를 &lt;code&gt;u128&lt;/code&gt; 로 변환손실없이 .</target>
        </trans-unit>
        <trans-unit id="6d168d327a65dad66209ce6d7b009cd85f05f838" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u32&lt;/code&gt; to &lt;code&gt;u64&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;u32&lt;/code&gt; 를 &lt;code&gt;u64&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="f1df8b31f36d6ab5d17e2e3ada90c9b955cbda58" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u64&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">손실 &lt;code&gt;u64&lt;/code&gt; 를 &lt;code&gt;i128&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="51e4288ae7b143e29bef2cd6a08ed1ce9981f99e" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u64&lt;/code&gt; to &lt;code&gt;u128&lt;/code&gt; losslessly.</source>
          <target state="translated">손실 &lt;code&gt;u64&lt;/code&gt; 를 &lt;code&gt;u128&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="69075374550a9bd756bf2b8536a8adea67408dd6" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;f32&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;u8&lt;/code&gt; 을 &lt;code&gt;f32&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="8ed7d95e8c4ff5bcbb4951fc64ac876e6638ba8c" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;f64&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;u8&lt;/code&gt; 을 &lt;code&gt;f64&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="1898b4d40bb99c10044cb16946cda4ed3cee72a5" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;u8&lt;/code&gt; 을 &lt;code&gt;i128&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="8466fd73320ea471b03f856e4d5a2ffa2198a076" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;i16&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;u8&lt;/code&gt; 을 &lt;code&gt;i16&lt;/code&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="5d28c5d2be13dcf9aee4cedc21552b340b2a0051" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;i32&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; 을 &lt;code&gt;i32&lt;/code&gt; 로 무손실로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="8562da8513d804122b58558a773734a9cc71b463" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;i64&lt;/code&gt; losslessly.</source>
          <target state="translated">변환의 &lt;code&gt;u8&lt;/code&gt; 에 &lt;code&gt;i64&lt;/code&gt; 손실없이.</target>
        </trans-unit>
        <trans-unit id="608b7967f1987a832ce728b21dfd6966e3111f08" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;isize&lt;/code&gt; losslessly.</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; 을 &lt;code&gt;isize&lt;/code&gt; 로 변환 손실없이.</target>
        </trans-unit>
        <trans-unit id="3baa2112f8d58e246513a70b1e2768fd90ce79a6" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;u128&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;u8&lt;/code&gt; 을 &lt;code&gt;u128&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="906f605028953532df33d1cfe91a7d5970f2e81b" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;u16&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;u8&lt;/code&gt; 을 &lt;code&gt;u16&lt;/code&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="fad924d9a87ad0b4589a9adb2c124e7954501e85" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;u32&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;u8&lt;/code&gt; 을 &lt;code&gt;u32&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="875a85e71de252953090d2635940f205519e68ad" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;u64&lt;/code&gt; losslessly.</source>
          <target state="translated">손실없이 &lt;code&gt;u8&lt;/code&gt; 을 &lt;code&gt;u64&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="9f5b71d089a8a39a75736d6263ad69d78eaf550e" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;u8&lt;/code&gt; to &lt;code&gt;usize&lt;/code&gt; losslessly.</source>
          <target state="translated">변환은 &lt;code&gt;u8&lt;/code&gt; 하는 &lt;code&gt;usize&lt;/code&gt; 손실없이.</target>
        </trans-unit>
        <trans-unit id="7f0e2a992aecd7ee5e678dfcb5c0e25f64dff6d1" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../borrow/enum.cow&quot;&gt;&lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../borrow/enum.cow&quot;&gt; &lt;code&gt;Cow&lt;/code&gt; &lt;/a&gt; 를 dyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; 상자로 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="2d519ff6564f97e18beb3b962000b0a1153ea56b" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../borrow/enum.cow&quot;&gt;&lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../borrow/enum.cow&quot;&gt; &lt;code&gt;Cow&lt;/code&gt; &lt;/a&gt; 를 dyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 박스로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="bd185ddf40bf4f4282976fbb642305b57972bce6" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;Path&amp;gt;&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.pathbuf&quot;&gt;&lt;code&gt;PathBuf&lt;/code&gt;&lt;/a&gt; without copying or allocating.</source>
          <target state="translated">복사하거나 할당하지 않고 &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&amp;lt;Path&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;struct.pathbuf&quot;&gt; &lt;code&gt;PathBuf&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="ec8381ac260e9466000646de46b6785b7aa780bc" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; into a &lt;code&gt;OsString&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">변환 &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 에 &lt;code&gt;OsString&lt;/code&gt; 복사하거나 할당하지 않고.</target>
        </trans-unit>
        <trans-unit id="7eeb0a53f8be8ea4d2d64f620f250ccbd144c43e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; into a &lt;code&gt;OsString&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">변환 &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 에 &lt;code&gt;OsString&lt;/code&gt; 복사하거나 할당하지 않고.</target>
        </trans-unit>
        <trans-unit id="70cdf963ecfb37f31fd639a71e5420130c2e0202" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; without copying or allocating.</source>
          <target state="translated">복사 또는 할당하지 않고 &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="20579263f5ef79ca2f2af596c8fed5b7f14851a5" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; without copying or allocating.</source>
          <target state="translated">복사 또는 할당하지 않고 &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="8775043aa7e2b057314e82610119f1102d226265" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; into an &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; without copying or allocating.</source>
          <target state="translated">변환 &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; 에 &lt;a href=&quot;struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; 복사하거나 할당하지 않고.</target>
        </trans-unit>
        <trans-unit id="6bd06e97341fb5f3a39329e8841d5444bc3ecb15" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../u32/index&quot;&gt;&lt;code&gt;u32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;../u32/index&quot;&gt; &lt;code&gt;u32&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="caeca028cb8bdf36baa402f0be0932511cc2d199" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">복사하거나 할당하지 않고 &lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b49c06567b4e64b9ba7f29be594606979fe04301" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">복사 또는 할당하지 않고 &lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="2b14ff55708fcc77b1efd87454be75ae2389c9f1" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../sync/struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">복사하거나 할당하지 않고 &lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../sync/struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="fc96e0065e77ad2d7688149694cde1edd17eda20" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b25fdf18361b662e363cd40d0a4ed84a7a3357bc" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">복사하거나 할당하지 않고 &lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="e18c978ef917b0bedb37b4f77206394ea3f28a89" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">복사하거나 할당하지 않고 &lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="d85cca2f429b11ef84561caf22bf3b584b9f1b3d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">복사 또는 할당하지 않고 &lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="8ca318758961d8db693744bff574fe9b43d28452" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="d2333fd0158fcde3e483aa8e7aab586bedc4c311" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.nulerror&quot;&gt;&lt;code&gt;NulError&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../io/struct.error&quot;&gt;&lt;code&gt;io::Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.nulerror&quot;&gt; &lt;code&gt;NulError&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;../io/struct.error&quot;&gt; &lt;code&gt;io::Error&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="a29a23680dabf90f4d4c26e879f3e167aea1235c" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.nulerror&quot;&gt;&lt;code&gt;NulError&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.error&quot;&gt;&lt;code&gt;io::Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.nulerror&quot;&gt; &lt;code&gt;NulError&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;struct.error&quot;&gt; &lt;code&gt;io::Error&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="da9d7c0c49bdd8d72ca9287a23e58771984fa53e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">변환하는 &lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; 를 복사하거나 할당하지 않고.</target>
        </trans-unit>
        <trans-unit id="a4b70caa48603bcd2e89580ae7a0d82f619e80d3" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">변환 &lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; (A) 내로 &lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; 를&lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; 를 복사하거나 할당하지.</target>
        </trans-unit>
        <trans-unit id="b5594c80207ef1e4cb5832cdc1e9ddfd4d593df9" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../sync/struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">변환 &lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; (A) 내로 &lt;a href=&quot;../sync/struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; 를 복사하거나 할당하지.</target>
        </trans-unit>
        <trans-unit id="ee53b6823c7c846b33c2a0849d1522605a8722d2" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">변환 &lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; (A) 내로 &lt;a href=&quot;struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; 를 복사하거나 할당하지.</target>
        </trans-unit>
        <trans-unit id="8c0c7a2ce85d03ccb3daa32f44b5bd06143a88fc" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">변환하는 &lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; 를 복사하거나 할당하지 않고.</target>
        </trans-unit>
        <trans-unit id="fb6461e9e6c7f6b165c2e70e235f38ebe4c8a713" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">변환 &lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; (A) 내로 &lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; 를&lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; 를 복사하거나 할당하지.</target>
        </trans-unit>
        <trans-unit id="11a9355dc43fec6a7c5b71c761aa152d644f92bf" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../net/struct.socketaddrv4&quot;&gt;&lt;code&gt;SocketAddrV4&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../net/enum.socketaddr#variant.V4&quot;&gt;&lt;code&gt;SocketAddr::V4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../net/struct.socketaddrv4&quot;&gt; &lt;code&gt;SocketAddrV4&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;../net/enum.socketaddr#variant.V4&quot;&gt; &lt;code&gt;SocketAddr::V4&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="4efa0ae4d69c1233e946aed107c60db9fb2f1d4b" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../net/struct.socketaddrv6&quot;&gt;&lt;code&gt;SocketAddrV6&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../net/enum.socketaddr#variant.V6&quot;&gt;&lt;code&gt;SocketAddr::V6&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../net/struct.socketaddrv6&quot;&gt; &lt;code&gt;SocketAddrV6&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../net/enum.socketaddr#variant.V6&quot;&gt; &lt;code&gt;SocketAddr::V6&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="d6f46c51fd9611f09703a25383e821089f84503d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../primitive.u32&quot;&gt;&lt;code&gt;u32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;../primitive.u32&quot;&gt; &lt;code&gt;u32&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="9c8deffaefbdf9717e199753e8534879e32512fb" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="5037bcde3664654156237fa47e62e10fb006bcc5" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../str/index&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../str/index&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 을 dyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; 박스로 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="f7ae439d8afade5ece83a25e03e960c976840c2e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../str/index&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../str/index&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 을 dyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 박스로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="4ac066010049d764978e46278abaf206f09c11fa" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="01a32ba02d89d0a559fe07ee796372a68705229b" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="03dcc77cc842e488e17b4eb5e62a5b7fb6eb6517" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 을 dyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; 상자로 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="97e93e77e494acf6b5243f3ee481a41a13934cde" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 을 dyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 상자로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="05446e89773cc0816f8f0130cbf7cc5366cadd6f" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../u8/index&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../u8/index&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="3d7f9771ef94cfd7e18dbeaaba137246e3750f83" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../num/struct.nonzerou8&quot;&gt;&lt;code&gt;NonZeroU8&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; without copying nor checking for inner null bytes.</source>
          <target state="translated">내부 null 바이트를 복사하거나 확인하지 않고 &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../num/struct.nonzerou8&quot;&gt; &lt;code&gt;NonZeroU8&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 을 &lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 으로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="302deb1f4d6c01df2ae43d855622787ce55fb74c" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../num/struct.nonzerou8&quot;&gt;&lt;code&gt;NonZeroU8&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; without copying nor checking for inner null bytes.</source>
          <target state="translated">내부 null 바이트를 복사하거나 확인하지 않고 &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../num/struct.nonzerou8&quot;&gt; &lt;code&gt;NonZeroU8&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 을 &lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 으로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="f6ae4c959e7b50cfd14a15fd97054883b4b9d2fb" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt; to a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; without checking the invariants on the given &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; 의 불변을 확인하지 않고 &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt; 을 &lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; 으로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="2678c99fd8fdc43f16d7467eadb82d93e78c58e2" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;str&amp;gt;&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; without copying or allocating.</source>
          <target state="translated">복사하거나 할당하지 않고 &lt;a href=&quot;boxed/struct.box&quot;&gt; &lt;code&gt;Box&amp;lt;str&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="130030a2baf6c6eb54f698adef7750699c1911cb" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;u32/index&quot;&gt;&lt;code&gt;u32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;u32/index&quot;&gt; &lt;code&gt;u32&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="2e44ce998bccceebfa7a05532cd930bd0674e79d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;enum.cow&quot;&gt;&lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;enum.cow&quot;&gt; &lt;code&gt;Cow&lt;/code&gt; &lt;/a&gt; 를 dyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; 상자로 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="629ea0f945cffea58091bb84ab503dc6d08d2c45" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;enum.cow&quot;&gt;&lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;enum.cow&quot;&gt; &lt;code&gt;Cow&lt;/code&gt; &lt;/a&gt; 를 dyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 박스로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0e65942989638bce57ca860a15f9353124a34134" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 을 dyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; 상자로 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="56486b1a7d06c44cfafea1293c146d46b5041d62" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; 을 dyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 상자로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="9141fc35db3a28a46cc87810b784094e41b4da37" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;primitive.u32&quot;&gt;&lt;code&gt;u32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;primitive.u32&quot;&gt; &lt;code&gt;u32&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="9544a8c668ed44f4a6e8054267ca167647eb38f9" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="3deb0c9a9f83bd7090d7b2fb3493f15d4af07efb" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; into a &lt;code&gt;OsString&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">변환 &lt;a href=&quot;struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 에 &lt;code&gt;OsString&lt;/code&gt; 복사하거나 할당하지 않고.</target>
        </trans-unit>
        <trans-unit id="50129c53ae4eb92a6ff5b04e126f88e8ca54e86e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; without copying or allocating.</source>
          <target state="translated">복사 또는 할당하지 않고 &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; &lt;a href=&quot;struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="7c96fae541b351683fe9f8bba6309005a7f5044b" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">복사 또는 할당하지 않고 &lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="00e53719150a327cc01c7ca8a988a6a5eda6e79d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">복사 또는 할당하지 않고 &lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b6e1ed3d81f61b4800db71326eac4a692ebff7d5" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../sync/struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">복사 또는 할당하지 않고 &lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../sync/struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;CStr&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="83ef98f3af5ff6d179a460803d51411341bc656d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="3a4c21f1fe950ebd401db7315b07a169a4c62981" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.nulerror&quot;&gt;&lt;code&gt;NulError&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../io/struct.error&quot;&gt;&lt;code&gt;io::Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.nulerror&quot;&gt; &lt;code&gt;NulError&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;../io/struct.error&quot;&gt; &lt;code&gt;io::Error&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="c961b860653ffae5954488d0c345e6c5f84386c0" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">변환하는 &lt;a href=&quot;struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; 를 복사하거나 할당하지 않고.</target>
        </trans-unit>
        <trans-unit id="b7410d710a6f08a4266ed34ce0bd9421324e6c77" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">변환 &lt;a href=&quot;struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; (A) 내로 &lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; 를&lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; 를 복사하거나 할당하지.</target>
        </trans-unit>
        <trans-unit id="80d8a9afc471ef80c18b47fff0419a5b090ace6d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../sync/struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">변환 &lt;a href=&quot;struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; (A) 내로 &lt;a href=&quot;../sync/struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;OsStr&amp;gt;&lt;/code&gt; 를 복사하거나 할당하지.</target>
        </trans-unit>
        <trans-unit id="6431406076c64b76f904c00b5194f273b831260f" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.socketaddrv4&quot;&gt;&lt;code&gt;SocketAddrV4&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;enum.socketaddr#variant.V4&quot;&gt;&lt;code&gt;SocketAddr::V4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.socketaddrv4&quot;&gt; &lt;code&gt;SocketAddrV4&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;enum.socketaddr#variant.V4&quot;&gt; &lt;code&gt;SocketAddr::V4&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="791ee8f9b1a4469418bb4afa8fc3e245927636e3" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.socketaddrv6&quot;&gt;&lt;code&gt;SocketAddrV6&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;enum.socketaddr#variant.V6&quot;&gt;&lt;code&gt;SocketAddr::V6&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.socketaddrv6&quot;&gt; &lt;code&gt;SocketAddrV6&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;enum.socketaddr#variant.V6&quot;&gt; &lt;code&gt;SocketAddr::V6&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="cf0b398e78cd40a705807e37ba53b34cd7683621" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="2fe48be71fb1ff65cd2d46afeff9f94c6dcc7aa4" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 을 dyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; 상자로 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="ff32bdd0d2f3418ad19df6e93c0c3d13fbf68e43" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 을 dyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 상자로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="24367f23bb853e16e2ec00e9fc105762ca4f808c" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../num/struct.nonzerou8&quot;&gt;&lt;code&gt;NonZeroU8&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; without copying nor checking for inner null bytes.</source>
          <target state="translated">내부 null 바이트를 복사하거나 확인하지 않고 &lt;a href=&quot;struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../num/struct.nonzerou8&quot;&gt; &lt;code&gt;NonZeroU8&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 을 &lt;a href=&quot;../ffi/struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; 으로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="d4c1e662741447ad062146bca0d17982c339ead0" translate="yes" xml:space="preserve">
          <source>Converts a &lt;a href=&quot;u8/index&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;u8/index&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="bcb50a1d14840aa1865afdda5fbba02cd6c28c3f" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&amp;amp;[T]&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;[T]&lt;/code&gt; 를 &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt; 로 변환 &amp;lt;&amp;lt; T]&amp;gt;</target>
        </trans-unit>
        <trans-unit id="52b61a90530c1398c90bc5313e44f61fc0821ec6" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&amp;amp;mut str&lt;/code&gt; into a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut str&lt;/code&gt; 을 &lt;code&gt;String&lt;/code&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="1bafe80a66f71d97b087a825fd4e45818e750a52" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&amp;amp;str&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;str&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;str&lt;/code&gt; 을 &lt;code&gt;Box&amp;lt;str&amp;gt;&lt;/code&gt; 로 변환 &amp;lt;str&amp;gt;</target>
        </trans-unit>
        <trans-unit id="83567149ae2e3508a5885e26f888fe84aaf63a7e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;BinaryHeap&amp;lt;T&amp;gt;&lt;/code&gt; into a &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BinaryHeap&amp;lt;T&amp;gt;&lt;/code&gt; 를 &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="b41f5195e016e753adfde65f148db081c9422123" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Box&amp;lt;OsStr&amp;gt;&lt;/code&gt; into a &lt;code&gt;OsString&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">변환 &lt;code&gt;Box&amp;lt;OsStr&amp;gt;&lt;/code&gt; 에 &lt;code&gt;OsString&lt;/code&gt; 복사하거나 할당하지 않고.</target>
        </trans-unit>
        <trans-unit id="8e6b447489ef6fcdf6c86be112a05c9bcc83a010" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Box&amp;lt;Path&amp;gt;&lt;/code&gt; into a &lt;code&gt;PathBuf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;Path&amp;gt;&lt;/code&gt; 를 &lt;code&gt;PathBuf&lt;/code&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="0a8c2399b3e07b786db4d24aabb658e78c04d7ba" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 를 &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt; 로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="91e94c6ecac78f1cb58346a0d0e52a3cfa7708db" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; into a &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">변환 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc1ffd001a1d54190107d29ad62eb6e5fb71488c" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Box&amp;lt;str&amp;gt;&amp;gt;&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;[u8]&amp;gt;&lt;/code&gt;</source>
          <target state="translated">변환 &lt;code&gt;Box&amp;lt;str&amp;gt;&amp;gt;&lt;/code&gt; (A) 내로 &lt;code&gt;Box&amp;lt;[u8]&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8eff31fce2c7f05e934ef590a70594ab2c578b68" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Box&amp;lt;str&amp;gt;&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;[u8]&amp;gt;&lt;/code&gt; without copying or allocating.</source>
          <target state="translated">복사하거나 할당하지 않고 &lt;code&gt;Box&amp;lt;str&amp;gt;&lt;/code&gt; 를 &lt;code&gt;Box&amp;lt;[u8]&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="cf9ae497c8472d72a09fda61c2822e37bf25d88e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;CStr&lt;/code&gt; into a &lt;a href=&quot;../borrow/enum.cow&quot;&gt;&lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CStr&lt;/code&gt; 을 &lt;a href=&quot;../borrow/enum.cow&quot;&gt; &lt;code&gt;Cow&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="2f67bf585cd38bc241e1b2c3224eebea5639509b" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;CStr&lt;/code&gt; into a &lt;a href=&quot;../borrow/enum.cow&quot;&gt;&lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CStr&lt;/code&gt; 을 &lt;a href=&quot;../borrow/enum.cow&quot;&gt; &lt;code&gt;Cow&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="dc1a46f892ce2931a3f7b1bdf1ea82665d848aaf" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;ChildStderr&lt;/code&gt; into a &lt;code&gt;Stdio&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ChildStderr&lt;/code&gt; 를 &lt;code&gt;Stdio&lt;/code&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="47411ceb563cfd0d8418d3a7d85ebbf602b1247a" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;ChildStdin&lt;/code&gt; into a &lt;code&gt;Stdio&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ChildStdin&lt;/code&gt; 을 &lt;code&gt;Stdio&lt;/code&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="3f7300d5183c175cacd491adfc9b55da4e1d2831" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;ChildStdout&lt;/code&gt; into a &lt;code&gt;Stdio&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ChildStdout&lt;/code&gt; 을 &lt;code&gt;Stdio&lt;/code&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="594d05935f944760cf6bbdf66de9e7a23f43345e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;File&lt;/code&gt; into a &lt;code&gt;Stdio&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; 을 &lt;code&gt;Stdio&lt;/code&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="47b664e550418f87220133b148bc20e423beb7b9" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroI128&lt;/code&gt; into an &lt;code&gt;i128&lt;/code&gt;</source>
          <target state="translated">변환 &lt;code&gt;NonZeroI128&lt;/code&gt; 을 에 &lt;code&gt;i128&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d7578f40bb33a71e39534b65c3acaa1cd61d8cdf" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroI16&lt;/code&gt; into an &lt;code&gt;i16&lt;/code&gt;</source>
          <target state="translated">변환 &lt;code&gt;NonZeroI16&lt;/code&gt; 을 로 &lt;code&gt;i16&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="565c5466dc904ce2cc44cc0493f4eedbd5d61a30" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroI32&lt;/code&gt; into an &lt;code&gt;i32&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroI32&lt;/code&gt; 를 &lt;code&gt;i32&lt;/code&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="c9d9daa044746766790bb629517cf3705f281eba" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroI64&lt;/code&gt; into an &lt;code&gt;i64&lt;/code&gt;</source>
          <target state="translated">변환 &lt;code&gt;NonZeroI64&lt;/code&gt; 을 로 &lt;code&gt;i64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="79020ca41757af1ca9f516424a6e4d207f5daa1c" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroI8&lt;/code&gt; into an &lt;code&gt;i8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroI8&lt;/code&gt; 을 &lt;code&gt;i8&lt;/code&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="cde676153b014bd936e7417a310b133f9d75e959" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroIsize&lt;/code&gt; into an &lt;code&gt;isize&lt;/code&gt;</source>
          <target state="translated">변환 &lt;code&gt;NonZeroIsize&lt;/code&gt; 을 에 &lt;code&gt;isize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="517b71de0f49f40d0272468a12bf0219e2e98ebb" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroU128&lt;/code&gt; into an &lt;code&gt;u128&lt;/code&gt;</source>
          <target state="translated">변환 &lt;code&gt;NonZeroU128&lt;/code&gt; 을 에 &lt;code&gt;u128&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ee28eed4c174167605c6eb9e97e79c6185cdadb" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroU16&lt;/code&gt; into an &lt;code&gt;u16&lt;/code&gt;</source>
          <target state="translated">변환 &lt;code&gt;NonZeroU16&lt;/code&gt; 을 에 &lt;code&gt;u16&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9531e9d534d1c1f7162192869f2e80aa2a9e0045" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroU32&lt;/code&gt; into an &lt;code&gt;u32&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroU32&lt;/code&gt; 를 &lt;code&gt;u32&lt;/code&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="6396a9d868c19a85ec6221b1a66b066a1e336bc1" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroU64&lt;/code&gt; into an &lt;code&gt;u64&lt;/code&gt;</source>
          <target state="translated">변환 &lt;code&gt;NonZeroU64&lt;/code&gt; 을 에 &lt;code&gt;u64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e68a161d6fe4b0971729632901cac2888f5d022e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroU8&lt;/code&gt; into an &lt;code&gt;u8&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NonZeroU8&lt;/code&gt; 을 &lt;code&gt;u8&lt;/code&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="b7a5a46d06b88298bf6dadb805e18e58e2a4e5cc" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;NonZeroUsize&lt;/code&gt; into an &lt;code&gt;usize&lt;/code&gt;</source>
          <target state="translated">변환 &lt;code&gt;NonZeroUsize&lt;/code&gt; 을 에 &lt;code&gt;usize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98fad3b87fe329cdb28c2472db1177be714e3392" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;OsString&lt;/code&gt; into a &lt;code&gt;PathBuf&lt;/code&gt;</source>
          <target state="translated">변환하는 &lt;code&gt;OsString&lt;/code&gt; 을 에 &lt;code&gt;PathBuf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03863d55ad289c17cb9083da1fed0834b328a3c9" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Path&lt;/code&gt; into an &lt;code&gt;Arc&lt;/code&gt; by copying the &lt;code&gt;Path&lt;/code&gt; data into a new &lt;code&gt;Arc&lt;/code&gt; buffer.</source>
          <target state="translated">변환 &lt;code&gt;Path&lt;/code&gt; 로 &lt;code&gt;Arc&lt;/code&gt; 복사하여 &lt;code&gt;Path&lt;/code&gt; 신규로 데이터를 &lt;code&gt;Arc&lt;/code&gt; 버퍼.</target>
        </trans-unit>
        <trans-unit id="7ca10193cd13d03a85955c2c796d75dd06e23e59" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Path&lt;/code&gt; into an &lt;code&gt;Rc&lt;/code&gt; by copying the &lt;code&gt;Path&lt;/code&gt; data into a new &lt;code&gt;Rc&lt;/code&gt; buffer.</source>
          <target state="translated">변환 &lt;code&gt;Path&lt;/code&gt; 으로 &lt;code&gt;Rc&lt;/code&gt; 를를 복사하여 &lt;code&gt;Path&lt;/code&gt; 새로운 데이터로 &lt;code&gt;Rc&lt;/code&gt; 버퍼.</target>
        </trans-unit>
        <trans-unit id="b4a9829245ea605e4087e03bdac6c4dc04a77c50" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Path&lt;/code&gt; to a &lt;a href=&quot;../borrow/enum.cow&quot;&gt;&lt;code&gt;Cow&amp;lt;str&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Path&lt;/code&gt; 를 &lt;a href=&quot;../borrow/enum.cow&quot;&gt; &lt;code&gt;Cow&amp;lt;str&amp;gt;&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="e10fd97cf9cf5599eeb86af5178a9840684d830a" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Path&lt;/code&gt; to an owned &lt;a href=&quot;struct.pathbuf&quot;&gt;&lt;code&gt;PathBuf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Path&lt;/code&gt; 를 소유 한 &lt;a href=&quot;struct.pathbuf&quot;&gt; &lt;code&gt;PathBuf&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="eb0109e2dc898f4cd22be0dd1fb080947b495e8a" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;PathBuf&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;Path&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PathBuf&lt;/code&gt; 를 &lt;code&gt;Box&amp;lt;Path&amp;gt;&lt;/code&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="79ef207eacd8c844ef3305fc3019cecf5a497ac8" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;PathBuf&lt;/code&gt; into a &lt;code&gt;OsString&lt;/code&gt;</source>
          <target state="translated">변환하는 &lt;code&gt;PathBuf&lt;/code&gt; 을 에 &lt;code&gt;OsString&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75d08c6944a5f2afaaca4432b19d74d46d6c9646" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;PathBuf&lt;/code&gt; into an &lt;code&gt;Arc&lt;/code&gt; by moving the &lt;code&gt;PathBuf&lt;/code&gt; data into a new &lt;code&gt;Arc&lt;/code&gt; buffer.</source>
          <target state="translated">변환 &lt;code&gt;PathBuf&lt;/code&gt; 로 &lt;code&gt;Arc&lt;/code&gt; 이동하여 &lt;code&gt;PathBuf&lt;/code&gt; 의 새로운 데이터로 &lt;code&gt;Arc&lt;/code&gt; 버퍼.</target>
        </trans-unit>
        <trans-unit id="5656068f6cb8d70f7137b95714ffbaf75cdce4e4" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;PathBuf&lt;/code&gt; into an &lt;code&gt;Rc&lt;/code&gt; by moving the &lt;code&gt;PathBuf&lt;/code&gt; data into a new &lt;code&gt;Rc&lt;/code&gt; buffer.</source>
          <target state="translated">변환 &lt;code&gt;PathBuf&lt;/code&gt; 으로 &lt;code&gt;Rc&lt;/code&gt; 를를 이동하여 &lt;code&gt;PathBuf&lt;/code&gt; 의 새로운 데이터로 &lt;code&gt;Rc&lt;/code&gt; 버퍼.</target>
        </trans-unit>
        <trans-unit id="d832a43f8ec0d4ca8efc3a87f8cf3a7416b01ae1" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;RecvError&lt;/code&gt; into a &lt;code&gt;RecvTimeoutError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RecvError&lt;/code&gt; 를 &lt;code&gt;RecvTimeoutError&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="cee77b2e179030ba9450d7acd26ad7171c3359ef" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;RecvError&lt;/code&gt; into a &lt;code&gt;TryRecvError&lt;/code&gt;.</source>
          <target state="translated">변환하는 &lt;code&gt;RecvError&lt;/code&gt; 에 &lt;code&gt;TryRecvError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c764f49ee62702bbeefaf62f621fe381b709fe64" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;SendError&amp;lt;T&amp;gt;&lt;/code&gt; into a &lt;code&gt;TrySendError&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;SendError&amp;lt;T&amp;gt;&lt;/code&gt; (A) 내로 &lt;code&gt;TrySendError&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdaa659a4f6bcc5404af4dd88387e22ed7c31125" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;String&lt;/code&gt; into a &lt;code&gt;PathBuf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 을 &lt;code&gt;PathBuf&lt;/code&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="189d6b3f1d45bf60434960667cb203ae044af1da" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;String&lt;/code&gt; into a byte vector.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 을 바이트 벡터로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0fdcfdecade353d503da1650e37c7d056fce188a" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;String&lt;/code&gt; into a mutable string slice.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 을 변경 가능한 문자열 슬라이스로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="a005776af8cdbc1e4ce274e9b626c45d6e0a737b" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; into a &lt;code&gt;BinaryHeap&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 를 &lt;code&gt;BinaryHeap&amp;lt;T&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="bb3d38b712aa2507136b81017131058657b76bbf" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;[T; N]&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;</source>
          <target state="translated">변환 &lt;code&gt;[T; N]&lt;/code&gt; (A) 내로 &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f0f6c5dcf6c5004f4556ede1a8d88df4fff7790" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; into an &lt;code&gt;AtomicBool&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 을 &lt;code&gt;AtomicBool&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="70101800425c6ea71ada9a1d451229e9886771f1" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;i128&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 을 &lt;code&gt;i128&lt;/code&gt; 로 변환합니다 . 결과 값은 &lt;code&gt;0&lt;/code&gt; 에 대한 &lt;code&gt;false&lt;/code&gt; 및 &lt;code&gt;1&lt;/code&gt; 에 대한 &lt;code&gt;true&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="929f027be27a006120b46e13c82e048fb59174df" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;i16&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 을 &lt;code&gt;i16&lt;/code&gt; 으로 변환합니다 . 결과 값은 &lt;code&gt;0&lt;/code&gt; 에 대한 &lt;code&gt;false&lt;/code&gt; 및 &lt;code&gt;1&lt;/code&gt; 에 대한 &lt;code&gt;true&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="1fd9262da6a49289a0422a7b3aeae91ed2be4fea" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;i32&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 을 &lt;code&gt;i32&lt;/code&gt; 로 변환합니다 . 결과 값은 &lt;code&gt;0&lt;/code&gt; 에 대한 &lt;code&gt;false&lt;/code&gt; 및 &lt;code&gt;1&lt;/code&gt; 에 대한 &lt;code&gt;true&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="f89ecc9b61abaefec84a5f51aec5bb043e75788d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;i64&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 을 &lt;code&gt;i64&lt;/code&gt; 로 변환합니다 . 결과 값은 &lt;code&gt;0&lt;/code&gt; 에 대한 &lt;code&gt;false&lt;/code&gt; 및 &lt;code&gt;1&lt;/code&gt; 에 대한 &lt;code&gt;true&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="f060822416214b74d945cffca02732ddb751eed6" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;i8&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 을 &lt;code&gt;i8&lt;/code&gt; 로 변환합니다 . 결과 값은 &lt;code&gt;0&lt;/code&gt; 에 대한 &lt;code&gt;false&lt;/code&gt; 및 &lt;code&gt;1&lt;/code&gt; 에 대한 &lt;code&gt;true&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="5b5d51c7e068453d730661130d649d6b1a0d5cc6" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;isize&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 을 &lt;code&gt;isize&lt;/code&gt; 로 변환합니다 . 결과 값은 &lt;code&gt;0&lt;/code&gt; 에 대한 &lt;code&gt;false&lt;/code&gt; 및 &lt;code&gt;1&lt;/code&gt; 에 대한 &lt;code&gt;true&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="b9328ab1d682bdef3cab778bfeac7f924548328d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;u128&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 을 &lt;code&gt;u128&lt;/code&gt; 로 변환합니다 . 결과 값은 &lt;code&gt;0&lt;/code&gt; 에 대한 &lt;code&gt;false&lt;/code&gt; 및 &lt;code&gt;1&lt;/code&gt; 에 대한 &lt;code&gt;true&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="8aa7a598a7228fada2160a79130cdca3c70467ca" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;u16&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 을 &lt;code&gt;u16&lt;/code&gt; 으로 변환합니다 . 결과 값은 &lt;code&gt;0&lt;/code&gt; 에 대한 &lt;code&gt;false&lt;/code&gt; 및 &lt;code&gt;1&lt;/code&gt; 에 대한 &lt;code&gt;true&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="599434807547538a9ac054391b9eeada0895b267" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;u32&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 을 &lt;code&gt;u32&lt;/code&gt; 로 변환합니다 . 결과 값은 &lt;code&gt;0&lt;/code&gt; 에 대한 &lt;code&gt;false&lt;/code&gt; 및 &lt;code&gt;1&lt;/code&gt; 에 대한 &lt;code&gt;true&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="8db02dda26ac25eeea637389f0de03b7c425c449" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;u64&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 을 &lt;code&gt;u64&lt;/code&gt; 로 변환합니다 . 결과 값은 &lt;code&gt;0&lt;/code&gt; 에 대한 &lt;code&gt;false&lt;/code&gt; 및 &lt;code&gt;1&lt;/code&gt; 에 대한 &lt;code&gt;true&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="a86fe90d460f1dc268a8512055f95bb51cb32464" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;u8&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 을 &lt;code&gt;u8&lt;/code&gt; 로 변환합니다 . 결과 값은 &lt;code&gt;0&lt;/code&gt; 에 대한 &lt;code&gt;false&lt;/code&gt; 및 &lt;code&gt;1&lt;/code&gt; 에 대한 &lt;code&gt;true&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="93bd531b59ec6b027ca1de4b4023f011f09c0bc5" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;bool&lt;/code&gt; to a &lt;code&gt;usize&lt;/code&gt;. The resulting value is &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;true&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; 을 &lt;code&gt;usize&lt;/code&gt; 로 변환합니다 . 결과 값은 &lt;code&gt;0&lt;/code&gt; 에 대한 &lt;code&gt;false&lt;/code&gt; 및 &lt;code&gt;1&lt;/code&gt; 에 대한 &lt;code&gt;true&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="457339c197484d0834bd470bb3055e6a996b2ac3" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;char&lt;/code&gt; to a digit in the given radix.</source>
          <target state="translated">주어진 기수 의 &lt;code&gt;char&lt;/code&gt; 를 숫자로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="c6fdef231b91e9827bf5362ab16dbeccaacb412d" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;u32&lt;/code&gt; to a &lt;code&gt;char&lt;/code&gt;, ignoring validity.</source>
          <target state="translated">유효성을 무시하고 &lt;code&gt;u32&lt;/code&gt; 를 &lt;code&gt;char&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="f21611b03f5d0510e836842cff70c3865f5e851a" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;u32&lt;/code&gt; to a &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;u32&lt;/code&gt; 를 &lt;code&gt;char&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="36a973083c660deb6a18070fe865a550715a42b0" translate="yes" xml:space="preserve">
          <source>Converts a Path into a Rc by copying the Path data into a new Rc buffer.</source>
          <target state="translated">Path 데이터를 새로운 Rc 버퍼에 복사하여 Path를 Rc로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="06ffb7f201b4481138fdd417928c3c66370e06fd" translate="yes" xml:space="preserve">
          <source>Converts a boxed slice of bytes to a boxed string slice without checking that the string contains valid UTF-8.</source>
          <target state="translated">문자열에 유효한 UTF-8이 포함되어 있는지 확인하지 않고 상자가있는 바이트 조각을 상자가있는 문자열 조각으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="194aa8e8e10e7bf946af1548897bb1e52a99d431" translate="yes" xml:space="preserve">
          <source>Converts a digit in the given radix to a &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">지정된 기수의 숫자를 &lt;code&gt;char&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="56b8b94e8fd327d6205c9f59c9eb0670cc2b0f73" translate="yes" xml:space="preserve">
          <source>Converts a generic type &lt;code&gt;T&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">제네릭 형식 &lt;code&gt;T&lt;/code&gt; 를 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 로 변환</target>
        </trans-unit>
        <trans-unit id="d3ca9303503e3a6fbcdd41e1789eafe4c7eb181a" translate="yes" xml:space="preserve">
          <source>Converts a host byte order &lt;code&gt;u32&lt;/code&gt; into an &lt;code&gt;Ipv4Addr&lt;/code&gt;.</source>
          <target state="translated">호스트 바이트 순서 &lt;code&gt;u32&lt;/code&gt; 를 &lt;code&gt;Ipv4Addr&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="91320d709e2ac19e0dfc9be6f86cf512d7edb5ca" translate="yes" xml:space="preserve">
          <source>Converts a mutable reference to &lt;code&gt;T&lt;/code&gt; into a mutable reference to an array of length 1 (without copying).</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 에 대한 변경 가능한 참조를 길이 1의 배열에 대한 변경 가능한 참조로 변환합니다 (복사하지 않음).</target>
        </trans-unit>
        <trans-unit id="4c622f5ec6ca8cc5700575c43853637aacb34b4e" translate="yes" xml:space="preserve">
          <source>Converts a mutable slice of bytes to a mutable string slice.</source>
          <target state="translated">가변 바이트 슬라이스를 가변 문자열 슬라이스로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="764f33f1850bf6b4368ebbc45bf4fe9f4379bbb8" translate="yes" xml:space="preserve">
          <source>Converts a mutable string slice to a mutable byte slice.</source>
          <target state="translated">변경 가능한 문자열 슬라이스를 변경 가능한 바이트 슬라이스로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="0d02765932717e776464c2711f382a4fc35b1a55" translate="yes" xml:space="preserve">
          <source>Converts a mutable string slice to a mutable byte slice. To convert the mutable byte slice back into a mutable string slice, use the &lt;a href=&quot;str/fn.from_utf8_mut&quot;&gt;&lt;code&gt;str::from_utf8_mut&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">가변 문자열 슬라이스를 가변 바이트 슬라이스로 변환합니다. 변경 가능한 바이트 슬라이스를 다시 변경 가능한 문자열 슬라이스로 변환하려면 &lt;a href=&quot;str/fn.from_utf8_mut&quot;&gt; &lt;code&gt;str::from_utf8_mut&lt;/code&gt; &lt;/a&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad81024213e868a6383a59da85867362f82aba61" translate="yes" xml:space="preserve">
          <source>Converts a mutable string slice to a raw pointer.</source>
          <target state="translated">변경 가능한 문자열 슬라이스를 원시 포인터로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="23fa31ec96ebc3a1c0c28d937085d2ab8d52ee8c" translate="yes" xml:space="preserve">
          <source>Converts a raw pointer previously created by &lt;a href=&quot;struct.weak#method.into_raw&quot;&gt;&lt;code&gt;into_raw&lt;/code&gt;&lt;/a&gt; back into &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.weak#method.into_raw&quot;&gt; &lt;code&gt;into_raw&lt;/code&gt; 에&lt;/a&gt; 의해 이전에 작성된 raw 포인터 를 &lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt; 로 다시 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="6e4213e799fe61dc5dc8b9a6e640cb5c3996ca40" translate="yes" xml:space="preserve">
          <source>Converts a reference to &lt;code&gt;T&lt;/code&gt; into a reference to an array of length 1 (without copying).</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 에 대한 참조를 길이가 1 인 배열에 대한 참조로 변환합니다 (복사하지 않음).</target>
        </trans-unit>
        <trans-unit id="c352b487035da80fa46a591658f8d11ee1f96cbb" translate="yes" xml:space="preserve">
          <source>Converts a reference to T into a slice of length 1 (without copying).</source>
          <target state="translated">T에 대한 참조를 길이가 1 인 슬라이스로 변환합니다 (복사하지 않음).</target>
        </trans-unit>
        <trans-unit id="1de468daac84b3022b5853f863ad0362bf41aa2d" translate="yes" xml:space="preserve">
          <source>Converts a slice of bytes to a string slice without checking that the string contains valid UTF-8.</source>
          <target state="translated">문자열에 유효한 UTF-8이 포함되어 있는지 확인하지 않고 바이트 슬라이스를 문자열 슬라이스로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="8873be30b93b2adcab1d083688a0abe5f31a0951" translate="yes" xml:space="preserve">
          <source>Converts a slice of bytes to a string slice without checking that the string contains valid UTF-8; mutable version.</source>
          <target state="translated">문자열에 유효한 UTF-8이 포함되어 있는지 확인하지 않고 바이트 슬라이스를 문자열 슬라이스로 변환합니다. 가변 버전.</target>
        </trans-unit>
        <trans-unit id="ea5b0c4c2fba9471d92c1c862b803e4a0ac9b1b3" translate="yes" xml:space="preserve">
          <source>Converts a slice of bytes to a string slice.</source>
          <target state="translated">바이트 슬라이스를 문자열 슬라이스로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="ce9520a0614988e0d1cff79ffd6b51cb737a3cba" translate="yes" xml:space="preserve">
          <source>Converts a slice of bytes to a string, including invalid characters.</source>
          <target state="translated">유효하지 않은 문자를 포함하여 바이트 슬라이스를 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="940acf14e650522ac4fda99dbb2a9c07c34ebee0" translate="yes" xml:space="preserve">
          <source>Converts a string in base 10 to a float. Accepts an optional decimal exponent.</source>
          <target state="translated">밑이 10 인 문자열을 부동 소수점으로 변환합니다. 선택적 소수 지수를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="58e1f00741960a2db2644fb62685d89cf3afbf93" translate="yes" xml:space="preserve">
          <source>Converts a string slice in a given base to an integer.</source>
          <target state="translated">주어진 밑의 문자열 슬라이스를 정수로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="615362b0eaa4b5787787d1672b34678384533267" translate="yes" xml:space="preserve">
          <source>Converts a string slice to a byte slice. To convert the byte slice back into a string slice, use the &lt;a href=&quot;../str/fn.from_utf8&quot;&gt;&lt;code&gt;from_utf8&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">문자열 조각을 바이트 조각으로 변환합니다. 바이트 슬라이스를 다시 문자열 슬라이스로 변환하려면 &lt;a href=&quot;../str/fn.from_utf8&quot;&gt; &lt;code&gt;from_utf8&lt;/code&gt; &lt;/a&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b4d96839aac4730a925950ed018466921caabb9" translate="yes" xml:space="preserve">
          <source>Converts a string slice to a byte slice. To convert the byte slice back into a string slice, use the &lt;a href=&quot;str/fn.from_utf8&quot;&gt;&lt;code&gt;from_utf8&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">문자열 조각을 바이트 조각으로 변환합니다. 바이트 슬라이스를 다시 문자열 슬라이스로 변환하려면 &lt;a href=&quot;str/fn.from_utf8&quot;&gt; &lt;code&gt;from_utf8&lt;/code&gt; &lt;/a&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="de670cd391406f2a862df01df79b8545d4ec96bb" translate="yes" xml:space="preserve">
          <source>Converts a string slice to a byte slice. To convert the byte slice back into a string slice, use the &lt;a href=&quot;str/fn.from_utf8&quot;&gt;&lt;code&gt;str::from_utf8&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">문자열 슬라이스를 바이트 슬라이스로 변환합니다. 바이트 슬라이스를 다시 문자열 슬라이스로 변환하려면 &lt;a href=&quot;str/fn.from_utf8&quot;&gt; &lt;code&gt;str::from_utf8&lt;/code&gt; &lt;/a&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="cdd60bdab18cd686b2f950306bb48b1fa5f92efe" translate="yes" xml:space="preserve">
          <source>Converts a string slice to a raw pointer.</source>
          <target state="translated">문자열 슬라이스를 원시 포인터로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="30ad257845d4be3d9fa6cb4c6c7277bc7c96dddd" translate="yes" xml:space="preserve">
          <source>Converts a string to an integer, turning poorly-formed strings into 0 (the default value for integers). &lt;a href=&quot;../primitive.str#method.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt; converts a string to any other type that implements &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt;, returning &lt;a href=&quot;#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; on error.</source>
          <target state="translated">문자열을 정수로 변환하여 형식이 잘못된 문자열을 0 (정수의 기본값)으로 바꿉니다. &lt;a href=&quot;../primitive.str#method.parse&quot;&gt; &lt;code&gt;parse&lt;/code&gt; &lt;/a&gt; 는 문자열을 &lt;a href=&quot;../str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt; 을 구현하는 다른 유형으로 변환하여 오류시 &lt;a href=&quot;#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="412a0b1d1771282a32d06ccf153d17d74b048c92" translate="yes" xml:space="preserve">
          <source>Converts a string to an integer, turning poorly-formed strings into 0 (the default value for integers). &lt;a href=&quot;../primitive.str#method.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt; converts a string to any other type that implements &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt;, returning &lt;a href=&quot;enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; on error.</source>
          <target state="translated">문자열을 정수로 변환하여 형식이 잘못된 문자열을 0 (정수의 기본값)으로 바꿉니다. &lt;a href=&quot;../primitive.str#method.parse&quot;&gt; &lt;code&gt;parse&lt;/code&gt; &lt;/a&gt; 는 문자열을 &lt;a href=&quot;../str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt; 을 구현하는 다른 유형으로 변환하여 오류시 &lt;a href=&quot;enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="75de3131dad76ca67a57e8d0dc159a558691bacf" translate="yes" xml:space="preserve">
          <source>Converts a string to an integer, turning poorly-formed strings into 0 (the default value for integers). &lt;a href=&quot;../primitive.str#method.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt; converts a string to any other type that implements &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt;, returning an &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; on error.</source>
          <target state="translated">문자열을 정수로 변환하여 형식이 잘못된 문자열을 0 (정수의 기본값)으로 바꿉니다. &lt;a href=&quot;../primitive.str#method.parse&quot;&gt; &lt;code&gt;parse&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;../str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt; 을 구현하는 다른 유형으로 문자열을 변환하여 오류 발생시 &lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f3fa80c2dc05288884326420c03f29bce1e373c3" translate="yes" xml:space="preserve">
          <source>Converts a tuple struct (Into&amp;lt;&lt;a href=&quot;../net/enum.ipaddr&quot;&gt;&lt;code&gt;IpAddr&lt;/code&gt;&lt;/a&gt;&amp;gt;, &lt;code&gt;u16&lt;/code&gt;) into a &lt;a href=&quot;../net/enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">튜플 구조체 ( &lt;a href=&quot;../net/enum.ipaddr&quot;&gt; &lt;code&gt;IpAddr&lt;/code&gt; &lt;/a&gt; &amp;lt; IpAddr &amp;gt;, &lt;code&gt;u16&lt;/code&gt; )를 &lt;a href=&quot;../net/enum.socketaddr&quot;&gt; &lt;code&gt;SocketAddr&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="c9cf73feb6357922047bfeb35977048be20f8b99" translate="yes" xml:space="preserve">
          <source>Converts a tuple struct (Into&amp;lt;&lt;a href=&quot;enum.ipaddr&quot;&gt;&lt;code&gt;IpAddr&lt;/code&gt;&lt;/a&gt;&amp;gt;, &lt;code&gt;u16&lt;/code&gt;) into a &lt;a href=&quot;enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">튜플 구조체 ( &lt;a href=&quot;enum.ipaddr&quot;&gt; &lt;code&gt;IpAddr&lt;/code&gt; &lt;/a&gt; &amp;lt; IpAddr &amp;gt;, &lt;code&gt;u16&lt;/code&gt; )를 &lt;a href=&quot;enum.socketaddr&quot;&gt; &lt;code&gt;SocketAddr&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="ce64484d32e0f8b69223730eaf30e47f5d2c1e62" translate="yes" xml:space="preserve">
          <source>Converts a type of &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; 유형을 dyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; 상자로 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="e10bff37ef01cb50ce7c4790da359105077e74b1" translate="yes" xml:space="preserve">
          <source>Converts a type of &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; into a box of dyn &lt;a href=&quot;../error/trait.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 유형 을 dyn &lt;a href=&quot;../error/trait.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 상자로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="9dd19d774c852b283dfc84ea71fdcf1fdf3627b6" translate="yes" xml:space="preserve">
          <source>Converts a vector of bytes to a &lt;code&gt;String&lt;/code&gt; without checking that the string contains valid UTF-8.</source>
          <target state="translated">문자열에 유효한 UTF-8이 포함되어 있는지 확인하지 않고 바이트 벡터를 &lt;code&gt;String&lt;/code&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0cbf0892c1f36793f52be43b458c27d045dcdd67" translate="yes" xml:space="preserve">
          <source>Converts a vector of bytes to a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">바이트 벡터를 &lt;code&gt;String&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="d8206e29533ffd1df4d736510712dfcaa07709c0" translate="yes" xml:space="preserve">
          <source>Converts an &lt;a href=&quot;../io/enum.errorkind&quot;&gt;&lt;code&gt;ErrorKind&lt;/code&gt;&lt;/a&gt; into an &lt;a href=&quot;../io/struct.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../io/enum.errorkind&quot;&gt; &lt;code&gt;ErrorKind&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;../io/struct.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="e30c8018efac42860d87b462b8aadc26f681806a" translate="yes" xml:space="preserve">
          <source>Converts an &lt;a href=&quot;enum.errorkind&quot;&gt;&lt;code&gt;ErrorKind&lt;/code&gt;&lt;/a&gt; into an &lt;a href=&quot;struct.error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;enum.errorkind&quot;&gt; &lt;code&gt;ErrorKind&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;struct.error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="abe290a2fc111884900847f2845e0aafaf501b0d" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;Ipv4Addr&lt;/code&gt; into a host byte order &lt;code&gt;u32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ipv4Addr&lt;/code&gt; 을 호스트 바이트 순서 &lt;code&gt;u32&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="d4e81caa4d874911339d7191c309c343aa3f2537" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;Option&amp;lt;&lt;/code&gt;&lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; into an &lt;code&gt;Option&amp;lt;&lt;/code&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;&lt;code&gt;usize&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;, consuming the original:</source>
          <target state="translated">원본을 소비하면서 &lt;code&gt;Option&amp;lt;&lt;/code&gt; &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 을 &lt;code&gt;Option&amp;lt;&lt;/code&gt; &lt;a href=&quot;../primitive.usize&quot;&gt; &lt;code&gt;usize&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0804a55e9a2bce5cff779d1685010ee9c9c5b02b" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;Option&amp;lt;&lt;/code&gt;&lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; into an &lt;code&gt;Option&amp;lt;&lt;/code&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;&lt;code&gt;usize&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;, preserving the original. The &lt;a href=&quot;../option/enum.option#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; method takes the &lt;code&gt;self&lt;/code&gt; argument by value, consuming the original, so this technique uses &lt;code&gt;as_ref&lt;/code&gt; to first take an &lt;code&gt;Option&lt;/code&gt; to a reference to the value inside the original.</source>
          <target state="translated">&lt;code&gt;Option&amp;lt;&lt;/code&gt; &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 을 &lt;code&gt;Option&amp;lt;&lt;/code&gt; &lt;a href=&quot;../primitive.usize&quot;&gt; &lt;code&gt;usize&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 로 변환 하여 원본을 유지합니다. &lt;a href=&quot;../option/enum.option#method.map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; 방법은 소요 &lt;code&gt;self&lt;/code&gt; 이 기술에서 사용하므로, 원래 소모 값 인수 &lt;code&gt;as_ref&lt;/code&gt; 첫번째 행이 걸릴 &lt;code&gt;Option&lt;/code&gt; 원래 내부 값에 기준한다.</target>
        </trans-unit>
        <trans-unit id="e948014ce4af29e195f1051f3e0b33786d864d01" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;Option&amp;lt;&lt;/code&gt;&lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; into an &lt;code&gt;Option&amp;lt;&lt;/code&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;&lt;code&gt;usize&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;, preserving the original. The &lt;a href=&quot;enum.option#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; method takes the &lt;code&gt;self&lt;/code&gt; argument by value, consuming the original, so this technique uses &lt;code&gt;as_ref&lt;/code&gt; to first take an &lt;code&gt;Option&lt;/code&gt; to a reference to the value inside the original.</source>
          <target state="translated">원본을 유지하면서 &lt;code&gt;Option&amp;lt;&lt;/code&gt; &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 을 &lt;code&gt;Option&amp;lt;&lt;/code&gt; &lt;a href=&quot;../primitive.usize&quot;&gt; &lt;code&gt;usize&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 로 변환합니다 . &lt;a href=&quot;enum.option#method.map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; 방법은 소요 &lt;code&gt;self&lt;/code&gt; 이 기술에서 사용하므로, 원래 소모 값 인수 &lt;code&gt;as_ref&lt;/code&gt; 첫번째 행이 걸릴 &lt;code&gt;Option&lt;/code&gt; 원래 내부 값에 기준한다.</target>
        </trans-unit>
        <trans-unit id="5df3f0d8cfb743b1879bd6de44e5c771fa6c0e5f" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;OsStr&lt;/code&gt; to a &lt;a href=&quot;../borrow/enum.cow&quot;&gt;&lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OsStr&lt;/code&gt; 을 &lt;a href=&quot;../borrow/enum.cow&quot;&gt; &lt;code&gt;Cow&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="e27860eff35411d7d81be4a4df98f4fdd0b28962" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;OsStr&lt;/code&gt; to a &lt;a href=&quot;../borrow/enum.cow&quot;&gt;&lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OsStr&lt;/code&gt; 을 &lt;a href=&quot;../borrow/enum.cow&quot;&gt; &lt;code&gt;Cow&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="41b4550a8359b36ad812888c4ec218d601d6a8e9" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;i16&lt;/code&gt; into an &lt;code&gt;AtomicI16&lt;/code&gt;.</source>
          <target state="translated">변환하는 &lt;code&gt;i16&lt;/code&gt; 에 &lt;code&gt;AtomicI16&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d04fc059b3ff2981e97a42d82f2dab689970dbc" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;i32&lt;/code&gt; into an &lt;code&gt;AtomicI32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;i32&lt;/code&gt; 를 &lt;code&gt;AtomicI32&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="f9165e169995960bed71e2c9457e4f500478ac7a" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;i64&lt;/code&gt; into an &lt;code&gt;AtomicI64&lt;/code&gt;.</source>
          <target state="translated">변환하는 &lt;code&gt;i64&lt;/code&gt; 에 &lt;code&gt;AtomicI64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b29cf1db374d4ade965fe8506bf6365cc9d85146" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;i8&lt;/code&gt; into an &lt;code&gt;AtomicI8&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;i8&lt;/code&gt; 을 &lt;code&gt;AtomicI8&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="856a5cd5ae61cc2961e935532031530f6228f15f" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;isize&lt;/code&gt; into an &lt;code&gt;AtomicIsize&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;isize&lt;/code&gt; 에 &lt;code&gt;AtomicIsize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d40744002fa4c684c3a8acf1fddd8e582359c68" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;u16&lt;/code&gt; into an &lt;code&gt;AtomicU16&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;u16&lt;/code&gt; 에 &lt;code&gt;AtomicU16&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="dfa1950494328ad8cac623b0e24b5a9e6ddc4cf5" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;u32&lt;/code&gt; into an &lt;code&gt;AtomicU32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;u32&lt;/code&gt; 를 &lt;code&gt;AtomicU32&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="303f83557bcd92081c07c95e216171278c9491bf" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;u64&lt;/code&gt; into an &lt;code&gt;AtomicU64&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;u64&lt;/code&gt; 에 &lt;code&gt;AtomicU64&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="db89d9ac32c546daaa1e8d99e115c6ef2566e378" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;u8&lt;/code&gt; into an &lt;code&gt;AtomicU8&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;u8&lt;/code&gt; 을 &lt;code&gt;AtomicU8&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="8aac0125bed780d64d68c810579e4998cffe5784" translate="yes" xml:space="preserve">
          <source>Converts an &lt;code&gt;usize&lt;/code&gt; into an &lt;code&gt;AtomicUsize&lt;/code&gt;.</source>
          <target state="translated">변환 &lt;code&gt;usize&lt;/code&gt; 을 에 &lt;code&gt;AtomicUsize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94b72bfdc547f2f2991a54eb0368082534a2ed86" translate="yes" xml:space="preserve">
          <source>Converts an integer from big endian to the target's endianness.</source>
          <target state="translated">정수를 빅 엔디안에서 대상 엔디안으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="832dd1061b5dc1447ce0f11b5a8465233fcbb480" translate="yes" xml:space="preserve">
          <source>Converts an integer from little endian to the target's endianness.</source>
          <target state="translated">리틀 엔디안에서 대상 엔디안으로 정수를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="2391ddfdfadc6c18ed8e3c657fe9ad01ab673c30" translate="yes" xml:space="preserve">
          <source>Converts an iterator of pairs into a pair of containers.</source>
          <target state="translated">쌍의 반복자를 컨테이너 쌍으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="5665cf094f95857cb2fb820025db28ce9d7f9c1b" translate="yes" xml:space="preserve">
          <source>Converts an iterator of pairs into a pair of containers. &lt;a href=&quot;../../../iter/trait.iterator#method.unzip&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">쌍의 반복자를 컨테이너 쌍으로 변환합니다. &lt;a href=&quot;../../../iter/trait.iterator#method.unzip&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45d7e509700ec40bfc901b36c833fff203c66a7c" translate="yes" xml:space="preserve">
          <source>Converts an iterator of pairs into a pair of containers. &lt;a href=&quot;../../iter/trait.iterator#method.unzip&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">쌍의 반복자를 컨테이너 쌍으로 변환합니다. &lt;a href=&quot;../../iter/trait.iterator#method.unzip&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff4eca2bf177150367e1c50e1c74810809a3d745" translate="yes" xml:space="preserve">
          <source>Converts an iterator of pairs into a pair of containers. &lt;a href=&quot;../iter/trait.iterator#method.unzip&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">쌍의 반복자를 컨테이너 쌍으로 변환합니다. &lt;a href=&quot;../iter/trait.iterator#method.unzip&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e26001a6cd55c770efad267ee9826bdc20862e5" translate="yes" xml:space="preserve">
          <source>Converts an iterator of pairs into a pair of containers. &lt;a href=&quot;iter/trait.iterator#method.unzip&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">쌍의 반복자를 컨테이너 쌍으로 변환합니다. &lt;a href=&quot;iter/trait.iterator#method.unzip&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fe9842cfc7c1b98089bb9f56675495db7426b06" translate="yes" xml:space="preserve">
          <source>Converts an iterator of pairs into a pair of containers. &lt;a href=&quot;trait.iterator#method.unzip&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">쌍의 반복자를 컨테이너 쌍으로 변환합니다. &lt;a href=&quot;trait.iterator#method.unzip&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aefa04aace8efd9c9aec36e4a13289b1c140095f" translate="yes" xml:space="preserve">
          <source>Converts degrees to radians.</source>
          <target state="translated">도를 라디안으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="23b117e06eb7a11f303bf4fe78676ad18f1228f9" translate="yes" xml:space="preserve">
          <source>Converts from &lt;a href=&quot;../pin/struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&amp;amp;Option&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; to &lt;code&gt;Option&amp;lt;&lt;/code&gt;&lt;a href=&quot;../pin/struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&amp;amp;T&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">으로 변환 &lt;a href=&quot;../pin/struct.pin&quot;&gt; &lt;code&gt;Pin&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&amp;amp;Option&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Option&amp;lt;&lt;/code&gt; &lt;a href=&quot;../pin/struct.pin&quot;&gt; &lt;code&gt;Pin&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&amp;amp;T&amp;gt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb1fefe713b59da110cd5d07c731b4f118bdc353" translate="yes" xml:space="preserve">
          <source>Converts from &lt;a href=&quot;../pin/struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&amp;amp;mut Option&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; to &lt;code&gt;Option&amp;lt;&lt;/code&gt;&lt;a href=&quot;../pin/struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&amp;amp;mut T&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">으로 변환 &lt;a href=&quot;../pin/struct.pin&quot;&gt; &lt;code&gt;Pin&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&amp;amp;mut Option&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Option&amp;lt;&lt;/code&gt; &lt;a href=&quot;../pin/struct.pin&quot;&gt; &lt;code&gt;Pin&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&amp;amp;mut T&amp;gt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="576d3b7067c0cf249756038ca0762222f51b0120" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;&amp;amp;Option&amp;lt;T&amp;gt;&lt;/code&gt; to &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">에서 변환 &lt;code&gt;&amp;amp;Option&amp;lt;T&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5307124b94a6a15527c5b45e935d6b96d8829fde" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;&amp;amp;Option&amp;lt;T&amp;gt;&lt;/code&gt; to &lt;code&gt;Option&amp;lt;&amp;amp;T::Target&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">에서 변환 &lt;code&gt;&amp;amp;Option&amp;lt;T&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Option&amp;lt;&amp;amp;T::Target&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0073fea4f7190e3bef577116942660ecd9d20771" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;&amp;amp;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;code&gt;Result&amp;lt;&amp;amp;T, &amp;amp;E&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">으로 변환 &lt;code&gt;&amp;amp;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 하기 &lt;code&gt;Result&amp;lt;&amp;amp;T, &amp;amp;E&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06341a88cfe05fe6fac3709cfd3294a88cc8e313" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;&amp;amp;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;code&gt;Result&amp;lt;&amp;amp;T, &amp;amp;E::Target&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">에서 변환 &lt;code&gt;&amp;amp;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 하는 &lt;code&gt;Result&amp;lt;&amp;amp;T, &amp;amp;E::Target&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f6a97dc07d4b4fb7c88b2af6f0bbb8aec358bee" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;&amp;amp;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;code&gt;Result&amp;lt;&amp;amp;T::Target, &amp;amp;E&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">에서 변환 &lt;code&gt;&amp;amp;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Result&amp;lt;&amp;amp;T::Target, &amp;amp;E&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17e311593338a2ab0cac42ce46ef9263d11c929f" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;&amp;amp;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;code&gt;Result&amp;lt;&amp;amp;T::Target, &amp;amp;E::Target&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">에서 변환 &lt;code&gt;&amp;amp;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Result&amp;lt;&amp;amp;T::Target, &amp;amp;E::Target&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ff0df5ce0951dae6512c3c0f6a364b84adb8171" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;&amp;amp;mut Option&amp;lt;T&amp;gt;&lt;/code&gt; to &lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">에서 변환 &lt;code&gt;&amp;amp;mut Option&amp;lt;T&amp;gt;&lt;/code&gt; 로 &lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="980b0d4ed9041c1a8aaaf87eba3960d789b8ca00" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;&amp;amp;mut Option&amp;lt;T&amp;gt;&lt;/code&gt; to &lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">에서 변환 &lt;code&gt;&amp;amp;mut Option&amp;lt;T&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Option&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cead777c1c7c5a81777636ca7473d548927a71a7" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;&amp;amp;mut Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;code&gt;Result&amp;lt;&amp;amp;mut T, &amp;amp;mut E&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">으로 변환 &lt;code&gt;&amp;amp;mut Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 하기 &lt;code&gt;Result&amp;lt;&amp;amp;mut T, &amp;amp;mut E&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5792d8dc1febf8838d0763cc3062d2507465534b" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;Option&amp;lt;Option&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; to &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">으로 변환 &lt;code&gt;Option&amp;lt;Option&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a809131dd10afa032d979915c9db3e31a47f5382" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; (or &lt;code&gt;&amp;amp;Option&amp;lt;T&amp;gt;&lt;/code&gt;) to &lt;code&gt;Option&amp;lt;&amp;amp;T::Target&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">에서 변환 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; (또는 &lt;code&gt;&amp;amp;Option&amp;lt;T&amp;gt;&lt;/code&gt; )에 &lt;code&gt;Option&amp;lt;&amp;amp;T::Target&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8918c57a156a13bddba0028d35d8305b19c327f5" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; (or &lt;code&gt;&amp;amp;mut Option&amp;lt;T&amp;gt;&lt;/code&gt;) to &lt;code&gt;Option&amp;lt;&amp;amp;mut T::Target&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">에서 변환 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; (또는 &lt;code&gt;&amp;amp;mut Option&amp;lt;T&amp;gt;&lt;/code&gt; 에) &lt;code&gt;Option&amp;lt;&amp;amp;mut T::Target&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08c9c552f700bc6462b09f5c7a125aa01312ef1e" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;Pin&amp;lt;&amp;amp;Option&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; to &lt;code&gt;Option&amp;lt;Pin&amp;lt;&amp;amp;T&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">으로 변환 &lt;code&gt;Pin&amp;lt;&amp;amp;Option&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Option&amp;lt;Pin&amp;lt;&amp;amp;T&amp;gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="904e47a35a3d9d95e78023490bb7ac85ef8dcf59" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;Pin&amp;lt;&amp;amp;mut Option&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; to &lt;code&gt;Option&amp;lt;Pin&amp;lt;&amp;amp;mut T&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">으로 변환 &lt;code&gt;Pin&amp;lt;&amp;amp;mut Option&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; 에 &lt;code&gt;Option&amp;lt;Pin&amp;lt;&amp;amp;mut T&amp;gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d3f12786b018fa587bf6bd9545bf645e497719d" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;Result&amp;lt;Result&amp;lt;T, E&amp;gt;, E&amp;gt;&lt;/code&gt; to &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;</source>
          <target state="translated">변환의 &lt;code&gt;Result&amp;lt;Result&amp;lt;T, E&amp;gt;, E&amp;gt;&lt;/code&gt; 하기 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4bcbf99e1f46df9f36bcbb06453936d7daebf97" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; (or &lt;code&gt;&amp;amp;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;) to &lt;code&gt;Result&amp;lt;&amp;amp;&amp;lt;T as Deref&amp;gt;::Target, &amp;amp;E&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">변환의 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; (또는 &lt;code&gt;&amp;amp;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 일) &lt;code&gt;Result&amp;lt;&amp;amp;&amp;lt;T as Deref&amp;gt;::Target, &amp;amp;E&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff04c8c39ab0c93e47af3ac86ca381434eeee1e9" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; (or &lt;code&gt;&amp;amp;mut Result&amp;lt;T, E&amp;gt;&lt;/code&gt;) to &lt;code&gt;Result&amp;lt;&amp;amp;mut &amp;lt;T as DerefMut&amp;gt;::Target, &amp;amp;mut E&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">변환의 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; (또는 &lt;code&gt;&amp;amp;mut Result&amp;lt;T, E&amp;gt;&lt;/code&gt; )하는 &lt;code&gt;Result&amp;lt;&amp;amp;mut &amp;lt;T as DerefMut&amp;gt;::Target, &amp;amp;mut E&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a27ba9b78d2a74389f8fbfdd37b5d0ecf8d69fe" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&amp;lt;E&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">변환의 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 에 &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&amp;lt;E&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca8d4e9e105bba3ac426658fc622890530b74db2" translate="yes" xml:space="preserve">
          <source>Converts from &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">변환의 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 에 &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9e5e1ffe1ac73f148b5f050a0437d57ba3d3c7d" translate="yes" xml:space="preserve">
          <source>Converts radians to degrees.</source>
          <target state="translated">라디안을도 단위로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="61647a43c03c8fface4a5e68d426344505398be9" translate="yes" xml:space="preserve">
          <source>Converts the &lt;code&gt;CString&lt;/code&gt; into a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; if it contains valid UTF-8 data.</source>
          <target state="translated">유효한 UTF-8 데이터가 포함 된 경우 &lt;code&gt;CString&lt;/code&gt; 을 &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0709ed12ac5910edae95a2050b838aa905735c1b" translate="yes" xml:space="preserve">
          <source>Converts the &lt;code&gt;OsString&lt;/code&gt; into a &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; if it contains valid Unicode data.</source>
          <target state="translated">유효한 유니 코드 데이터가 포함 된 &lt;code&gt;OsString&lt;/code&gt; 을 &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="c9cb43f0e9791c6fa8b5884e3e4b16dc0a6150f8" translate="yes" xml:space="preserve">
          <source>Converts the OccupiedEntry into a mutable reference to the key and value in the entry with a lifetime bound to the map itself.</source>
          <target state="translated">OccupiedEntry를 맵 자체에 수명이 바인딩 된 항목의 키 및 값에 대한 변경 가능한 참조로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d5d1ed47830d4067742f12f9074752262e542109" translate="yes" xml:space="preserve">
          <source>Converts the OccupiedEntry into a mutable reference to the value in the entry with a lifetime bound to the map itself.</source>
          <target state="translated">OccupiedEntry를 맵 자체에 수명이 바인딩 된 항목 값에 대한 변경 가능한 참조로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="da5c32452c13947b1cc5a59fe2580e55ac78868a" translate="yes" xml:space="preserve">
          <source>Converts the array to immutable slice</source>
          <target state="translated">배열을 불변 슬라이스로 변환합니다</target>
        </trans-unit>
        <trans-unit id="9ab6335e38c76d5c2c5484e465fc74a3e718b378" translate="yes" xml:space="preserve">
          <source>Converts the array to mutable slice</source>
          <target state="translated">배열을 가변 슬라이스로 변환</target>
        </trans-unit>
        <trans-unit id="6509e9eb9ecef3df58a9d0031d36bb00577b31ab" translate="yes" xml:space="preserve">
          <source>Converts the entry into a mutable reference to its value.</source>
          <target state="translated">항목을 값에 대한 변경 가능한 참조로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="1b9f0d4fbed02c60f2add3e21e31321846b9ee94" translate="yes" xml:space="preserve">
          <source>Converts the entry into a mutable reference to the key in the entry with a lifetime bound to the map itself.</source>
          <target state="translated">항목 자체를 맵 자체에 바인드 한 항목의 키에 대한 변경 가능한 참조로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="f669c514bc3ec2ce4f85c0d3a4ef2941428726b1" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;String&lt;/code&gt; to a boxed &lt;code&gt;str&lt;/code&gt; slice that is owned.</source>
          <target state="translated">주어진 &lt;code&gt;String&lt;/code&gt; 을 소유 한 박스형 &lt;code&gt;str&lt;/code&gt; 슬라이스 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="6111e4096544d00abadfdc7420f540f1ac00c6c4" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;String&lt;/code&gt; to a vector &lt;code&gt;Vec&lt;/code&gt; that holds values of type &lt;code&gt;u8&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;String&lt;/code&gt; 을 &lt;code&gt;u8&lt;/code&gt; 유형의 값을 보유 하는 벡터 &lt;code&gt;Vec&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="465fa52a4a20933592d302efd7be059b1c17e123" translate="yes" xml:space="preserve">
          <source>Converts the given boxed &lt;code&gt;str&lt;/code&gt; slice to a &lt;code&gt;String&lt;/code&gt;. It is notable that the &lt;code&gt;str&lt;/code&gt; slice is owned.</source>
          <target state="translated">지정된 박스형 &lt;code&gt;str&lt;/code&gt; 슬라이스를 &lt;code&gt;String&lt;/code&gt; 으로 변환합니다 . &lt;code&gt;str&lt;/code&gt; 슬라이스가 소유되어 있음이 주목할 만하다 .</target>
        </trans-unit>
        <trans-unit id="8234aad24d1493e9c8022a9b9f5634a2091e940a" translate="yes" xml:space="preserve">
          <source>Converts the given value to a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">지정된 값을 &lt;code&gt;String&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="ef00a13622f56a1eab51078f83d20a82f01343ec" translate="yes" xml:space="preserve">
          <source>Converts the given value to a &lt;code&gt;String&lt;/code&gt;. &lt;a href=&quot;../../string/trait.tostring#tymethod.to_string&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">지정된 값을 &lt;code&gt;String&lt;/code&gt; 로 변환합니다 . &lt;a href=&quot;../../string/trait.tostring#tymethod.to_string&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41d35fda15c7d8dae4c4e21f7cf2d129f4ec5568" translate="yes" xml:space="preserve">
          <source>Converts the given value to a &lt;code&gt;String&lt;/code&gt;. &lt;a href=&quot;../string/trait.tostring#tymethod.to_string&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">지정된 값을 &lt;code&gt;String&lt;/code&gt; 로 변환합니다 . &lt;a href=&quot;../string/trait.tostring#tymethod.to_string&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4d9b951918a6e946e586cf9da5c10827afb61a7" translate="yes" xml:space="preserve">
          <source>Converts the given value to a &lt;code&gt;String&lt;/code&gt;. &lt;a href=&quot;string/trait.tostring#tymethod.to_string&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">지정된 값을 &lt;code&gt;String&lt;/code&gt; 로 변환합니다 . &lt;a href=&quot;string/trait.tostring#tymethod.to_string&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8d5564235a9b73bc8f13decf2a97cca6efcdcde" translate="yes" xml:space="preserve">
          <source>Converts the given value to a &lt;code&gt;String&lt;/code&gt;. &lt;a href=&quot;trait.tostring#tymethod.to_string&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">지정된 값을 &lt;code&gt;String&lt;/code&gt; 로 변환합니다 . &lt;a href=&quot;trait.tostring#tymethod.to_string&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3cc94b0b7263646af45c9307117e6b5c4370e1a" translate="yes" xml:space="preserve">
          <source>Converts the vector into &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">벡터를 &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="49ebdf742489ba1a7e02e64a58bee1c21ccd6e41" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;CString&lt;/code&gt; into a boxed &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;code&gt;CString&lt;/code&gt; 을 박스형 &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="391c97959367a38948ee2c3b676782df8d489aa3" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;OsString&lt;/code&gt; into a boxed &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">변환이 &lt;code&gt;OsString&lt;/code&gt; 박스형으로 &lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fdc5379b88e134fcb83efd419bd8fbeb9238e5b9" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;PathBuf&lt;/code&gt; into a &lt;a href=&quot;../boxed/struct.box&quot;&gt;boxed&lt;/a&gt;&lt;a href=&quot;struct.path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;code&gt;PathBuf&lt;/code&gt; 를 &lt;a href=&quot;../boxed/struct.box&quot;&gt;박스형 &lt;/a&gt;&lt;a href=&quot;struct.path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="3c2aacf00548ae4655d4fd4df421ccfbebfc7659" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; into a &lt;code&gt;Pin&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; with the same lifetime.</source>
          <target state="translated">이 &lt;code&gt;Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; 를 같은 수명 으로 &lt;code&gt;Pin&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; 로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d25cd2f6b28fe1d137bf9199c2d444e2c83474d1" translate="yes" xml:space="preserve">
          <source>Converts this &lt;code&gt;String&lt;/code&gt; into a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;String&lt;/code&gt; 을 &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="4f55afb23dd7a863690a144440d33027a392b2c2" translate="yes" xml:space="preserve">
          <source>Converts this C string to a byte slice containing the trailing 0 byte.</source>
          <target state="translated">이 C 문자열을 후행 0 바이트를 포함하는 바이트 슬라이스로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="112d93e699c5f89c1e82e6676e96dd22e9842b69" translate="yes" xml:space="preserve">
          <source>Converts this C string to a byte slice.</source>
          <target state="translated">이 C 문자열을 바이트 슬라이스로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="035e0030e04bdce5042c268949e3bae4e2045ada" translate="yes" xml:space="preserve">
          <source>Converts this address to an &lt;a href=&quot;struct.ipv4addr&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt; address&lt;/a&gt; if it's an &quot;IPv4-mapped IPv6 address&quot; defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc4291#section-2.5.5.2&quot;&gt;IETF RFC 4291 section 2.5.5.2&lt;/a&gt;, otherwise returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">변환하는이 주소 &lt;a href=&quot;struct.ipv4addr&quot;&gt; &lt;code&gt;IPv4&lt;/code&gt; 주소&lt;/a&gt; 가에 정의 된 &quot;IPv4 맵 IPv6 주소&quot;의 경우 &lt;a href=&quot;https://tools.ietf.org/html/rfc4291#section-2.5.5.2&quot;&gt;IETF RFC 4291 섹션 2.5.5.2는&lt;/a&gt; , 그렇지 않으면 반환 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3832d8efb5a2bffa10edc0b478d33afdaef309cb" translate="yes" xml:space="preserve">
          <source>Converts this address to an &lt;a href=&quot;struct.ipv4addr&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt; address&lt;/a&gt;. Returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if this address is neither IPv4-compatible or IPv4-mapped.</source>
          <target state="translated">이 주소를 &lt;a href=&quot;struct.ipv4addr&quot;&gt; &lt;code&gt;IPv4&lt;/code&gt; &lt;/a&gt; 주소로 변환 합니다 . 이 주소가 IPv4 호환 또는 IPv4 매핑이 아닌 경우 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; 을&lt;/a&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="01350d96cb2b791c5ab32a54a50e3c136aaa2f1d" translate="yes" xml:space="preserve">
          <source>Converts this address to an &lt;a href=&quot;struct.ipv4addr&quot;&gt;IPv4 address&lt;/a&gt;. Returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if this address is neither IPv4-compatible or IPv4-mapped.</source>
          <target state="translated">이 주소를 &lt;a href=&quot;struct.ipv4addr&quot;&gt;IPv4&lt;/a&gt; 주소로 변환 합니다 . 이 주소가 IPv4 호환 또는 IPv4 매핑이 아닌 경우 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; 을&lt;/a&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="cfe7f85c0203a20bc77dbd94f3b3f0d71cc4d3da" translate="yes" xml:space="preserve">
          <source>Converts this address to an IPv4-compatible &lt;a href=&quot;struct.ipv6addr&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt; address&lt;/a&gt;.</source>
          <target state="translated">이 주소를 IPv4 호환 &lt;a href=&quot;struct.ipv6addr&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; 주소로&lt;/a&gt; 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="274262796f61c4a36b9762792a9e62110f632d62" translate="yes" xml:space="preserve">
          <source>Converts this address to an IPv4-compatible &lt;a href=&quot;struct.ipv6addr&quot;&gt;IPv6 address&lt;/a&gt;.</source>
          <target state="translated">이 주소를 IPv4 호환 &lt;a href=&quot;struct.ipv6addr&quot;&gt;IPv6 주소로&lt;/a&gt; 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="16a93be5ee2b217b7fbc8747873b42129cc41839" translate="yes" xml:space="preserve">
          <source>Converts this address to an IPv4-mapped &lt;a href=&quot;struct.ipv6addr&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt; address&lt;/a&gt;.</source>
          <target state="translated">이 주소를 IPv4 매핑 된 &lt;a href=&quot;struct.ipv6addr&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; 주소로&lt;/a&gt; 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="6571ac59b45d0ab13d740f7bbaea0377b247d4c2" translate="yes" xml:space="preserve">
          <source>Converts this address to an IPv4-mapped &lt;a href=&quot;struct.ipv6addr&quot;&gt;IPv6 address&lt;/a&gt;.</source>
          <target state="translated">이 주소를 IPv4로 매핑 된 &lt;a href=&quot;struct.ipv6addr&quot;&gt;IPv6 주소로&lt;/a&gt; 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="86978a00302b59a6faefaeed9c27d0e23121e3eb" translate="yes" xml:space="preserve">
          <source>Converts this object to an iterator of resolved &lt;code&gt;SocketAddr&lt;/code&gt;s.</source>
          <target state="translated">이 객체를 해결 된 &lt;code&gt;SocketAddr&lt;/code&gt; 의 반복자로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="3c84a86386f5da9543bdc86a4f4a9c0425db45da" translate="yes" xml:space="preserve">
          <source>Converts this object to an iterator of resolved &lt;code&gt;SocketAddr&lt;/code&gt;s. &lt;a href=&quot;../net/trait.tosocketaddrs#tymethod.to_socket_addrs&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 객체를 해결 된 &lt;code&gt;SocketAddr&lt;/code&gt; 의 반복자로 변환합니다 . &lt;a href=&quot;../net/trait.tosocketaddrs#tymethod.to_socket_addrs&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36a6d36d3cb7113b3407e306a1e7a9c3c69984f6" translate="yes" xml:space="preserve">
          <source>Converts this object to an iterator of resolved &lt;code&gt;SocketAddr&lt;/code&gt;s. &lt;a href=&quot;net/trait.tosocketaddrs#tymethod.to_socket_addrs&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 객체를 해결 된 &lt;code&gt;SocketAddr&lt;/code&gt; 의 반복자로 변환합니다 . &lt;a href=&quot;net/trait.tosocketaddrs#tymethod.to_socket_addrs&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e6aca513979bb0cd64c39ebe1c099d4c2a64c1d" translate="yes" xml:space="preserve">
          <source>Converts this object to an iterator of resolved &lt;code&gt;SocketAddr&lt;/code&gt;s. &lt;a href=&quot;trait.tosocketaddrs#tymethod.to_socket_addrs&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 객체를 해결 된 &lt;code&gt;SocketAddr&lt;/code&gt; 의 반복자로 변환합니다 . &lt;a href=&quot;trait.tosocketaddrs#tymethod.to_socket_addrs&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c71e4ad3242a935d0dd2c3912e53fc6c43f3c5c" translate="yes" xml:space="preserve">
          <source>Converts this slice to its ASCII lower case equivalent in-place.</source>
          <target state="translated">이 슬라이스를 해당 위치의 ASCII 소문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="946ec2a7835629abbdae5aba92b56b07a630acf5" translate="yes" xml:space="preserve">
          <source>Converts this slice to its ASCII upper case equivalent in-place.</source>
          <target state="translated">이 슬라이스를 해당 위치의 ASCII 대문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="230fd1105c12c6ab91e87fb3bd5815ef7de2a5d4" translate="yes" xml:space="preserve">
          <source>Converts this string to its ASCII lower case equivalent in-place.</source>
          <target state="translated">이 문자열을 해당 위치의 ASCII 소문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="8402b7a6fdd4e85c93f8fce642b8ce30ddcb25d2" translate="yes" xml:space="preserve">
          <source>Converts this string to its ASCII upper case equivalent in-place.</source>
          <target state="translated">이 문자열을 해당 위치의 ASCII 대문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="01e31ddaf12df294bf440a20082d4cce3b659185" translate="yes" xml:space="preserve">
          <source>Converts this type to its ASCII lower case equivalent in-place.</source>
          <target state="translated">이 유형을 해당 위치의 ASCII 소문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="dd6b744f530334e2a47467f032c40d3bf653b1d0" translate="yes" xml:space="preserve">
          <source>Converts this type to its ASCII lower case equivalent in-place. &lt;a href=&quot;ascii/trait.asciiext#tymethod.make_ascii_lowercase&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 유형을 해당 위치의 ASCII 소문자로 변환합니다. &lt;a href=&quot;ascii/trait.asciiext#tymethod.make_ascii_lowercase&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="274406c97ed922e4dad80e76f56d608efb9185c1" translate="yes" xml:space="preserve">
          <source>Converts this type to its ASCII upper case equivalent in-place.</source>
          <target state="translated">이 유형을 해당 위치의 ASCII 대문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="4700554527a2e3ad0b5f3ab60124be984c1b72e7" translate="yes" xml:space="preserve">
          <source>Converts this type to its ASCII upper case equivalent in-place. &lt;a href=&quot;ascii/trait.asciiext#tymethod.make_ascii_uppercase&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 유형을 해당 위치의 ASCII 대문자로 변환합니다. &lt;a href=&quot;ascii/trait.asciiext#tymethod.make_ascii_uppercase&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fda535e5f45f82edea973d7875be1654e9bf015d" translate="yes" xml:space="preserve">
          <source>Converts this value to its ASCII lower case equivalent in-place.</source>
          <target state="translated">이 값을 해당 위치의 ASCII 소문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="37476b48d8db31e869c715f44c535dbd7319549e" translate="yes" xml:space="preserve">
          <source>Converts this value to its ASCII upper case equivalent in-place.</source>
          <target state="translated">이 값을 해당 위치의 ASCII 대문자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d371c51eef31b41b62abf11f2d78f4a427eb0797" translate="yes" xml:space="preserve">
          <source>Converts to &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0e04dc065b613262812e422a98f3d3d8f05e307b" translate="yes" xml:space="preserve">
          <source>Converts to &lt;code&gt;Arc&amp;lt;[T]&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Arc&amp;lt;[T]&amp;gt;&lt;/code&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="cb678e101040dd7f4e66b69693a38716d7929140" translate="yes" xml:space="preserve">
          <source>Converts to &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="7fe29f2efec180ae589e53827b1756db89251956" translate="yes" xml:space="preserve">
          <source>Converts to &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="174e6eb65b3f1db4bbd8cc2297b9e4ea4ba50dd0" translate="yes" xml:space="preserve">
          <source>Converts to &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="ff6631976f0503d8887f1d2990b06450f3a43228" translate="yes" xml:space="preserve">
          <source>Converts to &lt;code&gt;Rc&amp;lt;[T]&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Rc&amp;lt;[T]&amp;gt;&lt;/code&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="32a13592cfa7133ce745f97b801aae8e2d6781fb" translate="yes" xml:space="preserve">
          <source>Converts to an &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; slice.</source>
          <target state="translated">&lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; 슬라이스로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="16c50d5e7b463d0573a288ee2524af70cac94395" translate="yes" xml:space="preserve">
          <source>Cool! Now let&amp;rsquo;s try a word that will match multiple lines, like &amp;ldquo;body&amp;rdquo;:</source>
          <target state="translated">멋있는! 이제 &quot;body&quot;와 같이 여러 줄과 일치하는 단어를 시도해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="bbb7203c5399e9dfc8a4122875b84401b46367ee" translate="yes" xml:space="preserve">
          <source>Cooperatively gives up a timeslice to the OS scheduler.</source>
          <target state="translated">OS 스케줄러에 협력하여 타임 슬라이스를 포기합니다.</target>
        </trans-unit>
        <trans-unit id="8e3df45a49dba2b26f8ea64a22410bde72f9c8ac" translate="yes" xml:space="preserve">
          <source>Copied</source>
          <target state="translated">Copied</target>
        </trans-unit>
        <trans-unit id="0725e2afb7230c2d54503e772f3b77ddeff30b38" translate="yes" xml:space="preserve">
          <source>Copied::all</source>
          <target state="translated">Copied::all</target>
        </trans-unit>
        <trans-unit id="01a981dd42dfefb0229ea8dc2ec4454ec0a2c86e" translate="yes" xml:space="preserve">
          <source>Copied::any</source>
          <target state="translated">Copied::any</target>
        </trans-unit>
        <trans-unit id="c1532434bdccc7097211a605807f9d86047a5ae3" translate="yes" xml:space="preserve">
          <source>Copied::borrow</source>
          <target state="translated">Copied::borrow</target>
        </trans-unit>
        <trans-unit id="92b40daf39f8f1fb823e024c94a369b4721044a6" translate="yes" xml:space="preserve">
          <source>Copied::borrow_mut</source>
          <target state="translated">Copied::borrow_mut</target>
        </trans-unit>
        <trans-unit id="dadf829db0d2a3266fde47e0a237a583c4cddc3c" translate="yes" xml:space="preserve">
          <source>Copied::by_ref</source>
          <target state="translated">Copied::by_ref</target>
        </trans-unit>
        <trans-unit id="c65fa73124f19b1226abf66e61aaf93316bb1137" translate="yes" xml:space="preserve">
          <source>Copied::chain</source>
          <target state="translated">Copied::chain</target>
        </trans-unit>
        <trans-unit id="c467bcac2e655ca1c692b378ca5c6d82827a45b8" translate="yes" xml:space="preserve">
          <source>Copied::clone</source>
          <target state="translated">Copied::clone</target>
        </trans-unit>
        <trans-unit id="c4329b133a7dd3fabc613ca1188a8da811ff202a" translate="yes" xml:space="preserve">
          <source>Copied::clone_from</source>
          <target state="translated">Copied::clone_from</target>
        </trans-unit>
        <trans-unit id="94f0ce209cd1158f7cf5099419e1d6e5fd360868" translate="yes" xml:space="preserve">
          <source>Copied::clone_into</source>
          <target state="translated">Copied::clone_into</target>
        </trans-unit>
        <trans-unit id="7121fe268df10abca20a971c1b3f6a72fb57807e" translate="yes" xml:space="preserve">
          <source>Copied::cloned</source>
          <target state="translated">Copied::cloned</target>
        </trans-unit>
        <trans-unit id="5708daa784b060850e579ffafaee88fb158104c6" translate="yes" xml:space="preserve">
          <source>Copied::cmp</source>
          <target state="translated">Copied::cmp</target>
        </trans-unit>
        <trans-unit id="04e13f4e20fdec6641ad1d25cd98c90043924e1c" translate="yes" xml:space="preserve">
          <source>Copied::collect</source>
          <target state="translated">Copied::collect</target>
        </trans-unit>
        <trans-unit id="dc7ebac14d63c7c5439993f49f2410f708f9fdd8" translate="yes" xml:space="preserve">
          <source>Copied::copied</source>
          <target state="translated">Copied::copied</target>
        </trans-unit>
        <trans-unit id="2627c74c5bc8c0334b1cc70a88ac71a0e420226e" translate="yes" xml:space="preserve">
          <source>Copied::count</source>
          <target state="translated">Copied::count</target>
        </trans-unit>
        <trans-unit id="ca3d62fdf78b5c7437bdd820736c0562d58bdb4b" translate="yes" xml:space="preserve">
          <source>Copied::cycle</source>
          <target state="translated">Copied::cycle</target>
        </trans-unit>
        <trans-unit id="81f95fa0faf31c03fae4db5a751b00e6c3bf7f92" translate="yes" xml:space="preserve">
          <source>Copied::enumerate</source>
          <target state="translated">Copied::enumerate</target>
        </trans-unit>
        <trans-unit id="14dfcda6f05a83becf8671ec905c5ef3037ca987" translate="yes" xml:space="preserve">
          <source>Copied::eq</source>
          <target state="translated">Copied::eq</target>
        </trans-unit>
        <trans-unit id="98e694b338b1a924484874a88c03e59c5884eec7" translate="yes" xml:space="preserve">
          <source>Copied::filter</source>
          <target state="translated">Copied::filter</target>
        </trans-unit>
        <trans-unit id="5ba3d53aec999892f06204ffeee3911943334a05" translate="yes" xml:space="preserve">
          <source>Copied::filter_map</source>
          <target state="translated">Copied::filter_map</target>
        </trans-unit>
        <trans-unit id="6710b4e37136290597b7e3f862466cda9331bb95" translate="yes" xml:space="preserve">
          <source>Copied::find</source>
          <target state="translated">Copied::find</target>
        </trans-unit>
        <trans-unit id="10221697cffe7891744b956e3d84733c648f8cf3" translate="yes" xml:space="preserve">
          <source>Copied::find_map</source>
          <target state="translated">Copied::find_map</target>
        </trans-unit>
        <trans-unit id="eded3b12dbb6c33294fe04582313730ba50393c3" translate="yes" xml:space="preserve">
          <source>Copied::flat_map</source>
          <target state="translated">Copied::flat_map</target>
        </trans-unit>
        <trans-unit id="6233e1222443829693fbebfd490f3c3c7cc11e78" translate="yes" xml:space="preserve">
          <source>Copied::flatten</source>
          <target state="translated">Copied::flatten</target>
        </trans-unit>
        <trans-unit id="41022ab9f651b078828364f442ca322419f029ce" translate="yes" xml:space="preserve">
          <source>Copied::fmt</source>
          <target state="translated">Copied::fmt</target>
        </trans-unit>
        <trans-unit id="a9086bd4294c70a4b1b71986e06a2c8e5a8e25d2" translate="yes" xml:space="preserve">
          <source>Copied::fold</source>
          <target state="translated">Copied::fold</target>
        </trans-unit>
        <trans-unit id="778541d46881b716f565613d034bf831da4c11b9" translate="yes" xml:space="preserve">
          <source>Copied::for_each</source>
          <target state="translated">Copied::for_each</target>
        </trans-unit>
        <trans-unit id="d3eb3f3ed8db392b937781901da4b167227c13d1" translate="yes" xml:space="preserve">
          <source>Copied::from</source>
          <target state="translated">Copied::from</target>
        </trans-unit>
        <trans-unit id="8830e7c913e211f0718dbbe67060d30bfdf37f3b" translate="yes" xml:space="preserve">
          <source>Copied::fuse</source>
          <target state="translated">Copied::fuse</target>
        </trans-unit>
        <trans-unit id="c9740fc7f4e835408a916cc5dfd6414e5a8b5c9d" translate="yes" xml:space="preserve">
          <source>Copied::ge</source>
          <target state="translated">Copied::ge</target>
        </trans-unit>
        <trans-unit id="9c505b41b2ccd404ec841b332714eb8df838444b" translate="yes" xml:space="preserve">
          <source>Copied::gt</source>
          <target state="translated">Copied::gt</target>
        </trans-unit>
        <trans-unit id="eeb604639dfc88e64dad1dde296690386b1ac6d5" translate="yes" xml:space="preserve">
          <source>Copied::inspect</source>
          <target state="translated">Copied::inspect</target>
        </trans-unit>
        <trans-unit id="a6841e947ac63b2176e3553b63c5e02fb4e78ea6" translate="yes" xml:space="preserve">
          <source>Copied::into</source>
          <target state="translated">Copied::into</target>
        </trans-unit>
        <trans-unit id="76841a232ed3d212a5496bca5c8b9855331815c8" translate="yes" xml:space="preserve">
          <source>Copied::into_iter</source>
          <target state="translated">Copied::into_iter</target>
        </trans-unit>
        <trans-unit id="2ce90f8dfee1ba686c189e5810f9074e1d1ff1fe" translate="yes" xml:space="preserve">
          <source>Copied::is_empty</source>
          <target state="translated">Copied::is_empty</target>
        </trans-unit>
        <trans-unit id="3b4fe2324b60ad764ce070742b8f139727d754e0" translate="yes" xml:space="preserve">
          <source>Copied::is_sorted</source>
          <target state="translated">Copied::is_sorted</target>
        </trans-unit>
        <trans-unit id="7846345ef4bd0be68a7417a590999d0e820ae6d2" translate="yes" xml:space="preserve">
          <source>Copied::is_sorted_by</source>
          <target state="translated">Copied::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="8f31d7d75ab3000a8d4dbcedfe2da3f7b52a27b8" translate="yes" xml:space="preserve">
          <source>Copied::is_sorted_by_key</source>
          <target state="translated">Copied::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="4af028a93d9288f865cf6fef4f5b8d35af2fc5f1" translate="yes" xml:space="preserve">
          <source>Copied::last</source>
          <target state="translated">Copied::last</target>
        </trans-unit>
        <trans-unit id="871d70aa2f06098b742d4dc7c6be33767b84ad03" translate="yes" xml:space="preserve">
          <source>Copied::le</source>
          <target state="translated">Copied::le</target>
        </trans-unit>
        <trans-unit id="f704021b8fc186f7200cc86eb187b27a2d576da4" translate="yes" xml:space="preserve">
          <source>Copied::len</source>
          <target state="translated">Copied::len</target>
        </trans-unit>
        <trans-unit id="a2180f2d25e271eba0b014d5d789e4d4f043226b" translate="yes" xml:space="preserve">
          <source>Copied::lt</source>
          <target state="translated">Copied::lt</target>
        </trans-unit>
        <trans-unit id="ec24210f56d5d2e805178f2f74f4edeef7efd6cd" translate="yes" xml:space="preserve">
          <source>Copied::map</source>
          <target state="translated">Copied::map</target>
        </trans-unit>
        <trans-unit id="9c46a302a3c38e5af8ef73d0089cdfe098fedc39" translate="yes" xml:space="preserve">
          <source>Copied::max</source>
          <target state="translated">Copied::max</target>
        </trans-unit>
        <trans-unit id="1b4f8cd6fe4acaca491133f498b7813af10d3869" translate="yes" xml:space="preserve">
          <source>Copied::max_by</source>
          <target state="translated">Copied::max_by</target>
        </trans-unit>
        <trans-unit id="26b7284c8c867fc013a26d207dbf1919f1176025" translate="yes" xml:space="preserve">
          <source>Copied::max_by_key</source>
          <target state="translated">Copied::max_by_key</target>
        </trans-unit>
        <trans-unit id="bcd3aabd05530bbaeef72b09c0cbb6000b4a84d4" translate="yes" xml:space="preserve">
          <source>Copied::min</source>
          <target state="translated">Copied::min</target>
        </trans-unit>
        <trans-unit id="10440bb7ed8b43a477a820f9a1c279c3a5feeb75" translate="yes" xml:space="preserve">
          <source>Copied::min_by</source>
          <target state="translated">Copied::min_by</target>
        </trans-unit>
        <trans-unit id="89ba71859783fafaa0825e088f2b623f09589f87" translate="yes" xml:space="preserve">
          <source>Copied::min_by_key</source>
          <target state="translated">Copied::min_by_key</target>
        </trans-unit>
        <trans-unit id="bd184eef01ab988866df991795618817e6304594" translate="yes" xml:space="preserve">
          <source>Copied::ne</source>
          <target state="translated">Copied::ne</target>
        </trans-unit>
        <trans-unit id="8d45bf11c7f6f5421010e48e63ade733b6d2bbee" translate="yes" xml:space="preserve">
          <source>Copied::next</source>
          <target state="translated">Copied::next</target>
        </trans-unit>
        <trans-unit id="a5f17888e71974dbba62969dcb215a3a54023329" translate="yes" xml:space="preserve">
          <source>Copied::next_back</source>
          <target state="translated">Copied::next_back</target>
        </trans-unit>
        <trans-unit id="3ad3cfed272e525d16509461e0d29453b7ac12f6" translate="yes" xml:space="preserve">
          <source>Copied::nth</source>
          <target state="translated">Copied::nth</target>
        </trans-unit>
        <trans-unit id="cdb87c5eeffcf25e489139d528cb99d8486f29a4" translate="yes" xml:space="preserve">
          <source>Copied::nth_back</source>
          <target state="translated">Copied::nth_back</target>
        </trans-unit>
        <trans-unit id="d9b12cec6dfdd2e662bd99ef06f2210aaa7745f5" translate="yes" xml:space="preserve">
          <source>Copied::partial_cmp</source>
          <target state="translated">Copied::partial_cmp</target>
        </trans-unit>
        <trans-unit id="a74488f48cd4163cd44b19541bb679f419745fec" translate="yes" xml:space="preserve">
          <source>Copied::partition</source>
          <target state="translated">Copied::partition</target>
        </trans-unit>
        <trans-unit id="0bc1b9ecb5493ef117e56fd00b7dc5f6dffb2f92" translate="yes" xml:space="preserve">
          <source>Copied::peekable</source>
          <target state="translated">Copied::peekable</target>
        </trans-unit>
        <trans-unit id="740ac07fc0e89f7b0e1918b3ed2ed107f6faa5b5" translate="yes" xml:space="preserve">
          <source>Copied::position</source>
          <target state="translated">Copied::position</target>
        </trans-unit>
        <trans-unit id="b5e56b8c3a52d4e2c59b8bc907b6f84b9f89c1d2" translate="yes" xml:space="preserve">
          <source>Copied::product</source>
          <target state="translated">Copied::product</target>
        </trans-unit>
        <trans-unit id="8080a13fcda65f4e7bba85211f2e87340d3b4c14" translate="yes" xml:space="preserve">
          <source>Copied::rev</source>
          <target state="translated">Copied::rev</target>
        </trans-unit>
        <trans-unit id="31aa64a9f92827a0941af03a86a7aefe9df91b87" translate="yes" xml:space="preserve">
          <source>Copied::rfind</source>
          <target state="translated">Copied::rfind</target>
        </trans-unit>
        <trans-unit id="e2b1a3087fa4822f6fff4d5fca186d70ac45ce06" translate="yes" xml:space="preserve">
          <source>Copied::rfold</source>
          <target state="translated">Copied::rfold</target>
        </trans-unit>
        <trans-unit id="02f119fa0cdf67df18fe524c58f6ad52437411f7" translate="yes" xml:space="preserve">
          <source>Copied::rposition</source>
          <target state="translated">Copied::rposition</target>
        </trans-unit>
        <trans-unit id="539cf6f182925d81d76b64584c3a735ac0d79aa4" translate="yes" xml:space="preserve">
          <source>Copied::scan</source>
          <target state="translated">Copied::scan</target>
        </trans-unit>
        <trans-unit id="611e1632d430f996e3caf2b6f5acf83529280acd" translate="yes" xml:space="preserve">
          <source>Copied::size_hint</source>
          <target state="translated">Copied::size_hint</target>
        </trans-unit>
        <trans-unit id="9165926a3ca828e80641709f043c827289e2b05a" translate="yes" xml:space="preserve">
          <source>Copied::skip</source>
          <target state="translated">Copied::skip</target>
        </trans-unit>
        <trans-unit id="a7c086f2952836846e3c0c87c8819a16481f811f" translate="yes" xml:space="preserve">
          <source>Copied::skip_while</source>
          <target state="translated">Copied::skip_while</target>
        </trans-unit>
        <trans-unit id="796981ba9b52ad35521d4993fca56744cebf2c50" translate="yes" xml:space="preserve">
          <source>Copied::step_by</source>
          <target state="translated">Copied::step_by</target>
        </trans-unit>
        <trans-unit id="6c05946525498eeb4bc702780477f88462c42c1c" translate="yes" xml:space="preserve">
          <source>Copied::sum</source>
          <target state="translated">Copied::sum</target>
        </trans-unit>
        <trans-unit id="dbef1c9161fe5ff66a8631c845da613a1b0b83b8" translate="yes" xml:space="preserve">
          <source>Copied::take</source>
          <target state="translated">Copied::take</target>
        </trans-unit>
        <trans-unit id="92ac98fef3a8b7cee5dc6f3dfcbe949d2734b6f0" translate="yes" xml:space="preserve">
          <source>Copied::take_while</source>
          <target state="translated">Copied::take_while</target>
        </trans-unit>
        <trans-unit id="99c580af3e4ebe41c0e3c2d38cf49dd4685473d2" translate="yes" xml:space="preserve">
          <source>Copied::to_owned</source>
          <target state="translated">Copied::to_owned</target>
        </trans-unit>
        <trans-unit id="d3b6abae78f7bafe7e0b50df74cc33e7f4131aec" translate="yes" xml:space="preserve">
          <source>Copied::try_fold</source>
          <target state="translated">Copied::try_fold</target>
        </trans-unit>
        <trans-unit id="0e8d4514a1bfbb8f4ef3c334b7818478d38cc8da" translate="yes" xml:space="preserve">
          <source>Copied::try_for_each</source>
          <target state="translated">Copied::try_for_each</target>
        </trans-unit>
        <trans-unit id="07808d8e04935072c50edfadcb77d4f5286b7ab2" translate="yes" xml:space="preserve">
          <source>Copied::try_from</source>
          <target state="translated">Copied::try_from</target>
        </trans-unit>
        <trans-unit id="527f4a618dab6fd21f4644e3b39861fbeaf39057" translate="yes" xml:space="preserve">
          <source>Copied::try_into</source>
          <target state="translated">Copied::try_into</target>
        </trans-unit>
        <trans-unit id="a3b6ea26b27323f2e3ef948f6ded42db01cac1c8" translate="yes" xml:space="preserve">
          <source>Copied::try_rfold</source>
          <target state="translated">Copied::try_rfold</target>
        </trans-unit>
        <trans-unit id="da1f08afaa8cccd01b91345515b825b0c9eebbc7" translate="yes" xml:space="preserve">
          <source>Copied::type_id</source>
          <target state="translated">Copied::type_id</target>
        </trans-unit>
        <trans-unit id="61908191ab0b1c4ad16efaa30376626fd939bdef" translate="yes" xml:space="preserve">
          <source>Copied::unzip</source>
          <target state="translated">Copied::unzip</target>
        </trans-unit>
        <trans-unit id="55af569160ca5ba4f2baa0bd288838b3d549e307" translate="yes" xml:space="preserve">
          <source>Copied::zip</source>
          <target state="translated">Copied::zip</target>
        </trans-unit>
        <trans-unit id="8e73c5f9e6833a2e3ac023a0599526ebf73ac579" translate="yes" xml:space="preserve">
          <source>Copies &lt;code&gt;count * size_of&amp;lt;T&amp;gt;&lt;/code&gt; bytes from &lt;code&gt;self&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt;. The source and destination may &lt;em&gt;not&lt;/em&gt; overlap.</source>
          <target state="translated">&lt;code&gt;count * size_of&amp;lt;T&amp;gt;&lt;/code&gt; 바이트를 &lt;code&gt;self&lt;/code&gt; 에서 &lt;code&gt;dest&lt;/code&gt; 로 복사 합니다. 소스와 대상이 겹치지 &lt;em&gt;않을&lt;/em&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="22d9cd544bc26bb0f4bdabd80db48512a8fbf718" translate="yes" xml:space="preserve">
          <source>Copies &lt;code&gt;count * size_of&amp;lt;T&amp;gt;&lt;/code&gt; bytes from &lt;code&gt;self&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt;. The source and destination may overlap.</source>
          <target state="translated">&lt;code&gt;count * size_of&amp;lt;T&amp;gt;&lt;/code&gt; 바이트를 &lt;code&gt;self&lt;/code&gt; 에서 &lt;code&gt;dest&lt;/code&gt; 로 복사 합니다. 소스와 대상이 겹칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="754a47d2c0f441dd3716939c991c72132a61e23a" translate="yes" xml:space="preserve">
          <source>Copies &lt;code&gt;count * size_of&amp;lt;T&amp;gt;&lt;/code&gt; bytes from &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;self&lt;/code&gt;. The source and destination may &lt;em&gt;not&lt;/em&gt; overlap.</source>
          <target state="translated">&lt;code&gt;count * size_of&amp;lt;T&amp;gt;&lt;/code&gt; 바이트를 &lt;code&gt;src&lt;/code&gt; 에서 &lt;code&gt;self&lt;/code&gt; 로 복사 합니다. 소스와 대상이 겹치지 &lt;em&gt;않을&lt;/em&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bfe7c917d7dc276230f477d9288264437a380407" translate="yes" xml:space="preserve">
          <source>Copies &lt;code&gt;count * size_of&amp;lt;T&amp;gt;&lt;/code&gt; bytes from &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;self&lt;/code&gt;. The source and destination may overlap.</source>
          <target state="translated">&lt;code&gt;count * size_of&amp;lt;T&amp;gt;&lt;/code&gt; 바이트를 &lt;code&gt;src&lt;/code&gt; 에서 &lt;code&gt;self&lt;/code&gt; 로 복사 합니다. 소스와 대상이 겹칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66b8290fc7bcbc4d8cf311fff731eca75a123302" translate="yes" xml:space="preserve">
          <source>Copies &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes from &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dst&lt;/code&gt;. The source and destination may overlap.</source>
          <target state="translated">사본은 &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 에서 바이트 &lt;code&gt;src&lt;/code&gt; 에 &lt;code&gt;dst&lt;/code&gt; . 소스와 대상이 겹칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8c3c1813f29eac658dbabbc70a35769851715c4" translate="yes" xml:space="preserve">
          <source>Copies &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes from &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dst&lt;/code&gt;. The source and destination must &lt;em&gt;not&lt;/em&gt; overlap.</source>
          <target state="translated">사본은 &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 에서 바이트 &lt;code&gt;src&lt;/code&gt; 에 &lt;code&gt;dst&lt;/code&gt; . 소스 및 대상은해야 &lt;em&gt;하지&lt;/em&gt; 겹치는.</target>
        </trans-unit>
        <trans-unit id="da9a473f802ff20122340f0a00686e17f0d3ae6b" translate="yes" xml:space="preserve">
          <source>Copies &lt;code&gt;self&lt;/code&gt; into a new &lt;code&gt;Vec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 을 새로운 &lt;code&gt;Vec&lt;/code&gt; 에 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="407425e9348d4e5f7eea2264b1cae068959d9842" translate="yes" xml:space="preserve">
          <source>Copies &lt;code&gt;source&lt;/code&gt;'s contents into &lt;code&gt;self&lt;/code&gt; without creating a new allocation.</source>
          <target state="translated">새로운 할당을 만들지 않고 &lt;code&gt;source&lt;/code&gt; 의 내용을 &lt;code&gt;self&lt;/code&gt; 복사 합니다 .</target>
        </trans-unit>
        <trans-unit id="18afb1b503b3983793c70cf51be3bcfda99d21b7" translate="yes" xml:space="preserve">
          <source>Copies &lt;code&gt;val&lt;/code&gt; into a new &lt;code&gt;Some&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;val&lt;/code&gt; 을 새로운 &lt;code&gt;Some&lt;/code&gt; 에 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="5fe1d283480054b36d89be2fc133c0c552a04708" translate="yes" xml:space="preserve">
          <source>Copies a &lt;code&gt;Ref&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ref&lt;/code&gt; 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="e823e4ef9b72e2391dbbc017e09a550fc0e39e41" translate="yes" xml:space="preserve">
          <source>Copies all elements from &lt;code&gt;src&lt;/code&gt; into &lt;code&gt;self&lt;/code&gt;, using a memcpy.</source>
          <target state="translated">memcpy를 사용하여 &lt;code&gt;src&lt;/code&gt; 의 모든 요소 를 &lt;code&gt;self&lt;/code&gt; 로 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="7bab793017a4ce72417a0e692388f7105906ccfd" translate="yes" xml:space="preserve">
          <source>Copies elements from one part of the slice to another part of itself, using a memmove.</source>
          <target state="translated">memmove를 사용하여 슬라이스의 한 부분에서 다른 부분으로 요소를 복사합니다.</target>
        </trans-unit>
        <trans-unit id="4c4978fb851430750424486e9ebc3981097cf460" translate="yes" xml:space="preserve">
          <source>Copies happen implicitly, for example as part of an assignment &lt;code&gt;y = x&lt;/code&gt;. The behavior of &lt;code&gt;Copy&lt;/code&gt; is not overloadable; it is always a simple bit-wise copy.</source>
          <target state="translated">복사는 예를 들어 할당 &lt;code&gt;y = x&lt;/code&gt; 일부로 암시 적으로 발생 합니다. &lt;code&gt;Copy&lt;/code&gt; 동작은 오버로드 할 수 없습니다. 항상 간단한 비트 단위 사본입니다.</target>
        </trans-unit>
        <trans-unit id="d5885bb4cd28ddf63f133a5f46ceb173ffa5b99a" translate="yes" xml:space="preserve">
          <source>Copies the &lt;code&gt;va_list&lt;/code&gt; at the current location.</source>
          <target state="translated">현재 위치에서 &lt;code&gt;va_list&lt;/code&gt; 를 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="f2f802a9ccedcd1c0b340dd9a1acf8e09f6406cc" translate="yes" xml:space="preserve">
          <source>Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file.</source>
          <target state="translated">한 파일의 내용을 다른 파일로 복사합니다. 이 기능은 원본 파일의 권한 비트를 대상 파일로 복사합니다.</target>
        </trans-unit>
        <trans-unit id="d7de38cf477c242133ab93443342dd1532175e81" translate="yes" xml:space="preserve">
          <source>Copies the elements from &lt;code&gt;src&lt;/code&gt; into &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 에서 &lt;code&gt;self&lt;/code&gt; 로 요소를 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="645ed71147f14d965419df93c34dec56e9fd78c3" translate="yes" xml:space="preserve">
          <source>Copies the entire contents of a reader into a writer.</source>
          <target state="translated">리더의 전체 내용을 라이터에 복사합니다.</target>
        </trans-unit>
        <trans-unit id="ec098586f4e0377c9b26cd4b40b7980aa5b58116" translate="yes" xml:space="preserve">
          <source>Copies the sign from &lt;code&gt;y&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt; for &lt;code&gt;f32&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;f32&lt;/code&gt; 값에 대해 부호를 &lt;code&gt;y&lt;/code&gt; 에서 &lt;code&gt;x&lt;/code&gt; 로 복사 합니다.</target>
        </trans-unit>
        <trans-unit id="4979d8b9811698a9b4bbdfec123892f23715e948" translate="yes" xml:space="preserve">
          <source>Copies the sign from &lt;code&gt;y&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt; for &lt;code&gt;f64&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;f64&lt;/code&gt; 값에 대해 부호를 &lt;code&gt;y&lt;/code&gt; 에서 &lt;code&gt;x&lt;/code&gt; 로 복사 합니다.</target>
        </trans-unit>
        <trans-unit id="d284985a69d0785a782a448036ac7282de04ffce" translate="yes" xml:space="preserve">
          <source>Copies the slice into an owned &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">슬라이스를 소유 한 &lt;a href=&quot;struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; 에&lt;/a&gt; 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="9ed1b82040bbcd56ea4c9047b58138cb1608f25d" translate="yes" xml:space="preserve">
          <source>Copies this address to a new &lt;code&gt;IpAddr::V4&lt;/code&gt;.</source>
          <target state="translated">이 주소를 새 &lt;code&gt;IpAddr::V4&lt;/code&gt; 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="f35df35c28d1acf87c5854efc88322861570b9b5" translate="yes" xml:space="preserve">
          <source>Copies this address to a new &lt;code&gt;IpAddr::V6&lt;/code&gt;.</source>
          <target state="translated">이 주소를 새 &lt;code&gt;IpAddr::V6&lt;/code&gt; 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="af74f7c5362aaee985bf8cda3dd75fc80751ce51" translate="yes" xml:space="preserve">
          <source>Copy</source>
          <target state="translated">Copy</target>
        </trans-unit>
        <trans-unit id="bb282818d5f7396eb52f36d089317ba46d7cd493" translate="yes" xml:space="preserve">
          <source>Copying four bytes within a slice:</source>
          <target state="translated">슬라이스 내에서 4 바이트 복사</target>
        </trans-unit>
        <trans-unit id="b10fc0d032d80345a5382e20a6ec5d569f91ea98" translate="yes" xml:space="preserve">
          <source>Copying two elements from a slice into another:</source>
          <target state="translated">슬라이스에서 다른 요소로 두 요소 복사</target>
        </trans-unit>
        <trans-unit id="0776bd4bfe6e36d62e2c46ebe5416f5e2052198b" translate="yes" xml:space="preserve">
          <source>Corollary: &lt;code&gt;Step::backward(a, 0) == a&lt;/code&gt;</source>
          <target state="translated">결과 : &lt;code&gt;Step::backward(a, 0) == a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1fe0465a3705a3e6216de705f272615cc6e78c2b" translate="yes" xml:space="preserve">
          <source>Corollary: &lt;code&gt;Step::backward_checked(&amp;amp;a, 0) == Some(a)&lt;/code&gt;</source>
          <target state="translated">결과 : &lt;code&gt;Step::backward_checked(&amp;amp;a, 0) == Some(a)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="558ee1a2d0fcf62e21aa35dfbe0bd7446db76dcf" translate="yes" xml:space="preserve">
          <source>Corollary: &lt;code&gt;Step::forward(a, 0) == a&lt;/code&gt;</source>
          <target state="translated">결과 : &lt;code&gt;Step::forward(a, 0) == a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c994102a7ff5716c64a64da6f01572f8275b986a" translate="yes" xml:space="preserve">
          <source>Corollary: &lt;code&gt;Step::forward_checked(&amp;amp;a, 0) == Some(a)&lt;/code&gt;</source>
          <target state="translated">결과 : &lt;code&gt;Step::forward_checked(&amp;amp;a, 0) == Some(a)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9119543f40c383fa14d36d7b84006a3f83eaaf45" translate="yes" xml:space="preserve">
          <source>Corollary: &lt;code&gt;steps_between(&amp;amp;a, &amp;amp;b) == Some(0)&lt;/code&gt; if and only if &lt;code&gt;a == b&lt;/code&gt;</source>
          <target state="translated">추론 : &lt;code&gt;steps_between(&amp;amp;a, &amp;amp;b) == Some(0)&lt;/code&gt; if and only if &lt;code&gt;a == b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8ade04c6961543c7e8ea6ad14ff8699a092c520" translate="yes" xml:space="preserve">
          <source>Correct and Efficient Usage of Collections</source>
          <target state="translated">컬렉션의 정확하고 효율적인 사용법</target>
        </trans-unit>
        <trans-unit id="c121cdb6db5b0f3119d303cb21f0b7923a440571" translate="yes" xml:space="preserve">
          <source>Correct example:</source>
          <target state="translated">올바른 예 :</target>
        </trans-unit>
        <trans-unit id="1b811419d2ce9497eb9b9d116844a9e63caa5f6e" translate="yes" xml:space="preserve">
          <source>Correct usage of this function: initializing a struct with zero, where all fields of the struct can hold the bit-pattern 0 as a valid value.</source>
          <target state="translated">이 함수의 올바른 사용법 : 구조체의 모든 필드가 비트 패턴 0을 유효한 값으로 유지할 수있는 0으로 구조체를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="8cc887fdbf52dd0c5f1a92b0237f46cf3098a111" translate="yes" xml:space="preserve">
          <source>Correct usage of this function: initializing an integer with zero.</source>
          <target state="translated">이 함수의 올바른 사용법 : 0으로 정수 초기화.</target>
        </trans-unit>
        <trans-unit id="d9f7a1d79f4720c0b6ee10c4b32bacd7152d5f2c" translate="yes" xml:space="preserve">
          <source>Correct usage of this method:</source>
          <target state="translated">이 방법의 올바른 사용법 :</target>
        </trans-unit>
        <trans-unit id="24b1eb7ea6655d21539154e6222710d9b5b47fa1" translate="yes" xml:space="preserve">
          <source>Corrected example:</source>
          <target state="translated">수정 된 예 :</target>
        </trans-unit>
        <trans-unit id="3b622fa789802bcb09c9d2f8ea5f065bc04ab985" translate="yes" xml:space="preserve">
          <source>Correctness in our programs is the extent to which our code does what we intend it to do. Rust is designed with a high degree of concern about the correctness of programs, but correctness is complex and not easy to prove. Rust&amp;rsquo;s type system shoulders a huge part of this burden, but the type system cannot catch every kind of incorrectness. As such, Rust includes support for writing automated software tests within the language.</source>
          <target state="translated">프로그램의 정확성은 코드가 의도 한대로 수행하는 정도입니다. Rust는 프로그램의 정확성에 대해 높은 관심을 가지고 설계되었지만 정확성은 복잡하고 증명하기 쉽지 않습니다. Rust의 타입 시스템은 이러한 부담의 큰 부분을 차지하지만 타입 시스템은 모든 종류의 부정확성을 포착 할 수 없습니다. 따라서 Rust는 언어 내에서 자동화 된 소프트웨어 테스트 작성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="575d55d0130936e7da6f3fed4e8962dab659f838" translate="yes" xml:space="preserve">
          <source>Correspondingly, however, &lt;em&gt;callers&lt;/em&gt; of this method may not assume any guarantees about how the implementation uses &lt;code&gt;buf&lt;/code&gt;. The trait is safe to implement, before calling &lt;code&gt;read&lt;/code&gt;. Calling &lt;code&gt;read&lt;/code&gt; with an uninitialized &lt;code&gt;buf&lt;/code&gt; (of the kind one obtains via &lt;a href=&quot;../mem/union.maybeuninit&quot;&gt;&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;) is not safe, and can lead to undefined behavior.</source>
          <target state="translated">그러나 이에 상응 하여이 메소드의 &lt;em&gt;호출자&lt;/em&gt; 는 구현이 &lt;code&gt;buf&lt;/code&gt; 를 사용하는 방법에 대해 어떠한 보장도 할 수 없습니다 . 이 특성은 &lt;code&gt;read&lt;/code&gt; 를 호출하기 전에 구현하기에 안전합니다 . 초기화되지 않은 &lt;code&gt;buf&lt;/code&gt; ( &lt;a href=&quot;../mem/union.maybeuninit&quot;&gt; &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 통해 얻은 종류)로 &lt;code&gt;read&lt;/code&gt; 를 호출 하는 것은 안전하지 않으며 정의되지 않은 동작으로 이어질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="118e4f4c52b561fcf9acd553d1285273b9290ab9" translate="yes" xml:space="preserve">
          <source>Correspondingly, however, &lt;em&gt;callers&lt;/em&gt; of this method may not assume any guarantees about how the implementation uses &lt;code&gt;buf&lt;/code&gt;. The trait is safe to implement, so it is possible that the code that's supposed to write to the buffer might also read from it. It is your responsibility to make sure that &lt;code&gt;buf&lt;/code&gt; is initialized before calling &lt;code&gt;read&lt;/code&gt;. Calling &lt;code&gt;read&lt;/code&gt; with an uninitialized &lt;code&gt;buf&lt;/code&gt; (of the kind one obtains via &lt;a href=&quot;../mem/union.maybeuninit&quot;&gt;&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;) is not safe, and can lead to undefined behavior.</source>
          <target state="translated">그러나 이에 따라이 메서드의 &lt;em&gt;호출자&lt;/em&gt; 는 구현에서 &lt;code&gt;buf&lt;/code&gt; 를 사용하는 방법에 대한 보장을 가정하지 않을 수 있습니다 . 이 특성은 구현하기에 안전하므로 버퍼에 쓰도록되어있는 코드도 버퍼에서 읽을 수 있습니다. &lt;code&gt;read&lt;/code&gt; 를 호출하기 전에 &lt;code&gt;buf&lt;/code&gt; 가 초기화 되었는지 확인하는 것은 귀하의 책임 입니다. 초기화되지 않은 &lt;code&gt;buf&lt;/code&gt; ( &lt;a href=&quot;../mem/union.maybeuninit&quot;&gt; &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 통해 얻는 종류)로 &lt;code&gt;read&lt;/code&gt; 를 호출 하는 것은 안전하지 않으며 정의되지 않은 동작으로 이어질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c5260c69dc1fc932bd4df6b50aa988c7696f974" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/memory_order#Relaxed_ordering&quot;&gt;&lt;code&gt;memory_order_relaxed&lt;/code&gt;&lt;/a&gt; in C++20.</source>
          <target state="translated">C ++ 20의 &lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/memory_order#Relaxed_ordering&quot;&gt; &lt;code&gt;memory_order_relaxed&lt;/code&gt; &lt;/a&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="91f1dc48b79e1f3233d6d2fb8aeccae0110e6cde" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/memory_order#Release-Acquire_ordering&quot;&gt;&lt;code&gt;memory_order_acq_rel&lt;/code&gt;&lt;/a&gt; in C++20.</source>
          <target state="translated">C ++ 20의 &lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/memory_order#Release-Acquire_ordering&quot;&gt; &lt;code&gt;memory_order_acq_rel&lt;/code&gt; &lt;/a&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="ffcbe74009d77b71c9e14220379b7bcb258a8b52" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/memory_order#Release-Acquire_ordering&quot;&gt;&lt;code&gt;memory_order_acquire&lt;/code&gt;&lt;/a&gt; in C++20.</source>
          <target state="translated">C ++ 20의 &lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/memory_order#Release-Acquire_ordering&quot;&gt; &lt;code&gt;memory_order_acquire&lt;/code&gt; &lt;/a&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="ea5ce133ad2e2cbd754112905bff4b56a53f1453" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/memory_order#Release-Acquire_ordering&quot;&gt;&lt;code&gt;memory_order_release&lt;/code&gt;&lt;/a&gt; in C++20.</source>
          <target state="translated">C ++ 20의 &lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/memory_order#Release-Acquire_ordering&quot;&gt; &lt;code&gt;memory_order_release&lt;/code&gt; &lt;/a&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="ac8bdd32c1d6f6c1176f89bc4ce0063f92e6c5cd" translate="yes" xml:space="preserve">
          <source>Corresponds to &lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/memory_order#Sequentially-consistent_ordering&quot;&gt;&lt;code&gt;memory_order_seq_cst&lt;/code&gt;&lt;/a&gt; in C++20.</source>
          <target state="translated">C ++ 20의 &lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/memory_order#Sequentially-consistent_ordering&quot;&gt; &lt;code&gt;memory_order_seq_cst&lt;/code&gt; &lt;/a&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="0a41bdd85995aee20319dd5020be70218ba7123c" translate="yes" xml:space="preserve">
          <source>Corresponds to LLVM's &lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; ordering.</source>
          <target state="translated">LLVM의 &lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; 주문에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="911a6e4bb70e2ffe1b7ef863d56f27f01c3fc3e9" translate="yes" xml:space="preserve">
          <source>Corresponds to LLVM's &lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquirerelease&quot;&gt;&lt;code&gt;AcquireRelease&lt;/code&gt;&lt;/a&gt; ordering.</source>
          <target state="translated">LLVM의 &lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquirerelease&quot;&gt; &lt;code&gt;AcquireRelease&lt;/code&gt; &lt;/a&gt; 주문에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="7859ab1b7f6c440afd9ae4644e912c2d657bf83d" translate="yes" xml:space="preserve">
          <source>Corresponds to LLVM's &lt;a href=&quot;https://llvm.org/docs/Atomics.html#monotonic&quot;&gt;&lt;code&gt;Monotonic&lt;/code&gt;&lt;/a&gt; ordering.</source>
          <target state="translated">LLVM의 &lt;a href=&quot;https://llvm.org/docs/Atomics.html#monotonic&quot;&gt; &lt;code&gt;Monotonic&lt;/code&gt; &lt;/a&gt; 주문에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="dc056c09ee8b569718c5590a2a1623d473b331fa" translate="yes" xml:space="preserve">
          <source>Corresponds to LLVM's &lt;a href=&quot;https://llvm.org/docs/Atomics.html#release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; ordering.</source>
          <target state="translated">LLVM의 &lt;a href=&quot;https://llvm.org/docs/Atomics.html#release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; 순서에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="f0290a32ed2a42eada11789a34bbee1dead05f50" translate="yes" xml:space="preserve">
          <source>Corresponds to LLVM's &lt;a href=&quot;https://llvm.org/docs/Atomics.html#sequentiallyconsistent&quot;&gt;&lt;code&gt;SequentiallyConsistent&lt;/code&gt;&lt;/a&gt; ordering.</source>
          <target state="translated">LLVM의 &lt;a href=&quot;https://llvm.org/docs/Atomics.html#sequentiallyconsistent&quot;&gt; &lt;code&gt;SequentiallyConsistent&lt;/code&gt; &lt;/a&gt; 일치 순서에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="f08c346abc15f2333345a09ec38f898e5a3c37f4" translate="yes" xml:space="preserve">
          <source>Cost is &lt;em&gt;O&lt;/em&gt;(1) in the worst case.</source>
          <target state="translated">최악의 경우 비용은 &lt;em&gt;O&lt;/em&gt; (1)입니다.</target>
        </trans-unit>
        <trans-unit id="09ce2e9304ae5b383f1632fbb44a39ef3060234c" translate="yes" xml:space="preserve">
          <source>Cost is O(1) in the worst case.</source>
          <target state="translated">최악의 경우 비용은 O (1)입니다.</target>
        </trans-unit>
        <trans-unit id="4565dac88acbb7caf8a606f26f1a40ae8ffd1c83" translate="yes" xml:space="preserve">
          <source>Counting the number of times each character in a string occurs</source>
          <target state="translated">문자열의 각 문자가 발생하는 횟수 계산</target>
        </trans-unit>
        <trans-unit id="33935f03e2050408f5414a4ce0ae315ea392ec16" translate="yes" xml:space="preserve">
          <source>Cow</source>
          <target state="translated">Cow</target>
        </trans-unit>
        <trans-unit id="693955de587b375013c6570bf823a68dfd67917d" translate="yes" xml:space="preserve">
          <source>Cow::add</source>
          <target state="translated">Cow::add</target>
        </trans-unit>
        <trans-unit id="7cbe8211cbeef402d10ebf93bfa757f6e2139508" translate="yes" xml:space="preserve">
          <source>Cow::add_assign</source>
          <target state="translated">Cow::add_assign</target>
        </trans-unit>
        <trans-unit id="32e5fc6c56d5604169c226a3a944c073c12140c7" translate="yes" xml:space="preserve">
          <source>Cow::as_ref</source>
          <target state="translated">Cow::as_ref</target>
        </trans-unit>
        <trans-unit id="0a5d6acea679c8099a6bbb9a416bd6729a13bc2f" translate="yes" xml:space="preserve">
          <source>Cow::borrow</source>
          <target state="translated">Cow::borrow</target>
        </trans-unit>
        <trans-unit id="796a45dcb867e9830884b0690f9a272e819f5f3a" translate="yes" xml:space="preserve">
          <source>Cow::borrow_mut</source>
          <target state="translated">Cow::borrow_mut</target>
        </trans-unit>
        <trans-unit id="7e39dc06c961703bf1c460cfd6b96092d922bbde" translate="yes" xml:space="preserve">
          <source>Cow::clamp</source>
          <target state="translated">Cow::clamp</target>
        </trans-unit>
        <trans-unit id="7b15f2c3bfdb27a5cabafc7f0ad588221725b072" translate="yes" xml:space="preserve">
          <source>Cow::clone</source>
          <target state="translated">Cow::clone</target>
        </trans-unit>
        <trans-unit id="966aa7081fe4cf6f42dd4acb0bc7fcfd36a6e01f" translate="yes" xml:space="preserve">
          <source>Cow::clone_from</source>
          <target state="translated">Cow::clone_from</target>
        </trans-unit>
        <trans-unit id="33201e2c4f59d80236b56d492f272cb3c2ab346b" translate="yes" xml:space="preserve">
          <source>Cow::clone_into</source>
          <target state="translated">Cow::clone_into</target>
        </trans-unit>
        <trans-unit id="028a59b6cc6ecfb8febc6dc3dd5d3dc356c53c23" translate="yes" xml:space="preserve">
          <source>Cow::cmp</source>
          <target state="translated">Cow::cmp</target>
        </trans-unit>
        <trans-unit id="2e5b7f3004475d1f8e4955e27f33e2152324f652" translate="yes" xml:space="preserve">
          <source>Cow::default</source>
          <target state="translated">Cow::default</target>
        </trans-unit>
        <trans-unit id="b699cecf1f0d7f529a1a6f64b8a4903dcd1001ed" translate="yes" xml:space="preserve">
          <source>Cow::deref</source>
          <target state="translated">Cow::deref</target>
        </trans-unit>
        <trans-unit id="6bc94223417332709b4b63272dcb8b4305db7891" translate="yes" xml:space="preserve">
          <source>Cow::eq</source>
          <target state="translated">Cow::eq</target>
        </trans-unit>
        <trans-unit id="2d104060ce81cbbb3886aeba50d79a35444450ea" translate="yes" xml:space="preserve">
          <source>Cow::extend</source>
          <target state="translated">Cow::extend</target>
        </trans-unit>
        <trans-unit id="fe60e1a7453821175b1a861b940c910975fc4310" translate="yes" xml:space="preserve">
          <source>Cow::fmt</source>
          <target state="translated">Cow::fmt</target>
        </trans-unit>
        <trans-unit id="fca34a50e1bfcf0f247b1169df9b14f1b8428d49" translate="yes" xml:space="preserve">
          <source>Cow::from</source>
          <target state="translated">Cow::from</target>
        </trans-unit>
        <trans-unit id="e367ea07f6e4d63f248c649b12e294dc43303629" translate="yes" xml:space="preserve">
          <source>Cow::from_iter</source>
          <target state="translated">Cow::from_iter</target>
        </trans-unit>
        <trans-unit id="d12d86dc5a7f9ffe202177b8e115ee33875a2d8d" translate="yes" xml:space="preserve">
          <source>Cow::ge</source>
          <target state="translated">Cow::ge</target>
        </trans-unit>
        <trans-unit id="22818597dcded615134fe9a1b6bb8626b033e296" translate="yes" xml:space="preserve">
          <source>Cow::gt</source>
          <target state="translated">Cow::gt</target>
        </trans-unit>
        <trans-unit id="51cf9f48532dc9da964f91b7522b27baaa2d4c0c" translate="yes" xml:space="preserve">
          <source>Cow::hash</source>
          <target state="translated">Cow::hash</target>
        </trans-unit>
        <trans-unit id="d042eb93c4a4d7f640eab07a196cb05fb390b9df" translate="yes" xml:space="preserve">
          <source>Cow::hash_slice</source>
          <target state="translated">Cow::hash_slice</target>
        </trans-unit>
        <trans-unit id="97fb1be95d12f842dcf3c638a87ba0b2b8944b97" translate="yes" xml:space="preserve">
          <source>Cow::into</source>
          <target state="translated">Cow::into</target>
        </trans-unit>
        <trans-unit id="b8e553eaa3186de0fe51ca5f3c0b4841c5ae5c04" translate="yes" xml:space="preserve">
          <source>Cow::into_owned</source>
          <target state="translated">Cow::into_owned</target>
        </trans-unit>
        <trans-unit id="0e1c80a19711560c1f116de54a1f7e719d1bf442" translate="yes" xml:space="preserve">
          <source>Cow::le</source>
          <target state="translated">Cow::le</target>
        </trans-unit>
        <trans-unit id="93a9c0a2628918700020fecd5abf72577d1de50c" translate="yes" xml:space="preserve">
          <source>Cow::lt</source>
          <target state="translated">Cow::lt</target>
        </trans-unit>
        <trans-unit id="56e7afeac7bd6ef65adc6d32143bb8dab6b08222" translate="yes" xml:space="preserve">
          <source>Cow::max</source>
          <target state="translated">Cow::max</target>
        </trans-unit>
        <trans-unit id="4aaaf9d7dbe72651e1b030b2262eb0e8e8cb78b9" translate="yes" xml:space="preserve">
          <source>Cow::min</source>
          <target state="translated">Cow::min</target>
        </trans-unit>
        <trans-unit id="9ab3103ee1509fd6a54106bb7381607716ed0138" translate="yes" xml:space="preserve">
          <source>Cow::ne</source>
          <target state="translated">Cow::ne</target>
        </trans-unit>
        <trans-unit id="f044809d018419aa69f3a820e029c02c164aa551" translate="yes" xml:space="preserve">
          <source>Cow::partial_cmp</source>
          <target state="translated">Cow::partial_cmp</target>
        </trans-unit>
        <trans-unit id="ebeb9986333e97f2bbde42528a31ea5b0c3c685e" translate="yes" xml:space="preserve">
          <source>Cow::to_mut</source>
          <target state="translated">Cow::to_mut</target>
        </trans-unit>
        <trans-unit id="a3edd74dc1b5e1ddc3c8bf77bc0c1300fbe12c7a" translate="yes" xml:space="preserve">
          <source>Cow::to_owned</source>
          <target state="translated">Cow::to_owned</target>
        </trans-unit>
        <trans-unit id="e88592e59ccc38b4d59be087417232c9110d93ee" translate="yes" xml:space="preserve">
          <source>Cow::to_string</source>
          <target state="translated">Cow::to_string</target>
        </trans-unit>
        <trans-unit id="40b9ec03a5cec2936f5d7f046fb627d8e4fbfe33" translate="yes" xml:space="preserve">
          <source>Cow::try_from</source>
          <target state="translated">Cow::try_from</target>
        </trans-unit>
        <trans-unit id="58e7fdeb9b72b29c39d64b56b36d86e410e88fad" translate="yes" xml:space="preserve">
          <source>Cow::try_into</source>
          <target state="translated">Cow::try_into</target>
        </trans-unit>
        <trans-unit id="1fe64d0caae123b8b82e7a38873038a43e5d637b" translate="yes" xml:space="preserve">
          <source>Cow::type_id</source>
          <target state="translated">Cow::type_id</target>
        </trans-unit>
        <trans-unit id="511047aee6ef07c2cf5bfb5bfce8379f7f4ff0d7" translate="yes" xml:space="preserve">
          <source>Crate std</source>
          <target state="translated">상자 표준</target>
        </trans-unit>
        <trans-unit id="8f11bdf9ce6198dd51c1c5023a46121d1ac9d8b4" translate="yes" xml:space="preserve">
          <source>Crates</source>
          <target state="translated">Crates</target>
        </trans-unit>
        <trans-unit id="54a760409100eb3d0cf2335a44a83249f918ef6c" translate="yes" xml:space="preserve">
          <source>Crates and source files</source>
          <target state="translated">상자와 소스 파일</target>
        </trans-unit>
        <trans-unit id="81846c0ce3d60d6c98fda1ad99d8e815fa36aed3" translate="yes" xml:space="preserve">
          <source>Crates may also learn about how the C runtime is being linked. Code on MSVC, for example, needs to be compiled differently (e.g. with &lt;code&gt;/MT&lt;/code&gt; or &lt;code&gt;/MD&lt;/code&gt;) depending on the runtime being linked. This is exported currently through the &lt;a href=&quot;conditional-compilation#target_feature&quot;&gt;&lt;code&gt;cfg&lt;/code&gt; attribute &lt;code&gt;target_feature&lt;/code&gt; option&lt;/a&gt;:</source>
          <target state="translated">상자는 또한 C 런타임이 어떻게 연결되고 있는지 배울 수 있습니다. 예를 들어 MSVC의 코드 는 링크되는 런타임에 따라 다르게 컴파일해야합니다 (예 : &lt;code&gt;/MT&lt;/code&gt; 또는 &lt;code&gt;/MD&lt;/code&gt; 사용 ). 현재 &lt;a href=&quot;conditional-compilation#target_feature&quot;&gt; &lt;code&gt;cfg&lt;/code&gt; 속성 &lt;code&gt;target_feature&lt;/code&gt; 옵션을&lt;/a&gt; 통해 내보내집니다 .</target>
        </trans-unit>
        <trans-unit id="106010044d4f1f1beaea337fae0e18c89b67b5dc" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; containing a given list of elements:</source>
          <target state="translated">주어진 요소 목록을 포함 하는 &lt;a href=&quot;vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="08512da9b9631b9ad0299589cfdce97af650a4af" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; from a given element and size:</source>
          <target state="translated">주어진 요소와 크기 로 &lt;a href=&quot;vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="6887be00e79042f00517ecdcb279252e481cce7b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;const&lt;/code&gt; raw pointer to a place, without creating an intermediate reference.</source>
          <target state="translated">중간 참조를 만들지 않고 장소에 대한 &lt;code&gt;const&lt;/code&gt; 원시 포인터를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e8f88f84cbce6cd3d87b8b4e0c02ce0db7e09718" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;mut&lt;/code&gt; raw pointer to a place, without creating an intermediate reference.</source>
          <target state="translated">중간 참조를 만들지 않고 장소에 대한 &lt;code&gt;mut&lt;/code&gt; raw 포인터를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="dadc65fc1cc97ba934751fe27ff9c73111665bb6" translate="yes" xml:space="preserve">
          <source>Create a &lt;em&gt;src/lib.rs&lt;/em&gt; that contains the following, which is the simplest definition of a &lt;code&gt;ThreadPool&lt;/code&gt; struct that we can have for now:</source>
          <target state="translated">다음을 포함 하는 &lt;em&gt;src / lib.rs&lt;/em&gt; 를 작성하십시오. 이는 현재 우리가 가질 수 있는 &lt;code&gt;ThreadPool&lt;/code&gt; 구조체 의 가장 간단한 정의입니다 .</target>
        </trans-unit>
        <trans-unit id="f347ec024d82eb6b89c2dd7f293208cbc1526227" translate="yes" xml:space="preserve">
          <source>Create a floating point value from its representation as a byte array in big endian.</source>
          <target state="translated">빅 엔디안의 바이트 배열로 표현에서 부동 소수점 값을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="738eb68374d58eca55f11ff82de4043965980cae" translate="yes" xml:space="preserve">
          <source>Create a floating point value from its representation as a byte array in little endian.</source>
          <target state="translated">리틀 엔디안의 바이트 배열로 표현에서 부동 소수점 값을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4a603ee22aea5d470343b311f421ae51172d2c39" translate="yes" xml:space="preserve">
          <source>Create a floating point value from its representation as a byte array in native endian.</source>
          <target state="translated">네이티브 엔디안의 바이트 배열로 표현에서 부동 소수점 값을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b7f61c879edfd0a45d7f9ea67f2cf1df05c737a7" translate="yes" xml:space="preserve">
          <source>Create a native endian integer value from its memory representation as a byte array in native endianness.</source>
          <target state="translated">네이티브 엔디안의 바이트 배열로 메모리 표현에서 네이티브 엔디안 정수 값을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="df6229db42ef4dafc7a180d1330b9a8f69d7fa1f" translate="yes" xml:space="preserve">
          <source>Create a native endian integer value from its representation as a byte array in big endian.</source>
          <target state="translated">빅 엔디안의 바이트 배열로 표현에서 네이티브 엔디안 정수 값을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="51d495418f093348cadd3c42ede09a86d9d385c1" translate="yes" xml:space="preserve">
          <source>Create a native endian integer value from its representation as a byte array in little endian.</source>
          <target state="translated">리틀 엔디안의 바이트 배열로 표현 된 네이티브 엔디안 정수 값을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a5e05951e26f0ac1f3e1782521ac4d97124e1e43" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;Context&lt;/code&gt; from a &lt;code&gt;&amp;amp;Waker&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;Waker&lt;/code&gt; 에서 새 &lt;code&gt;Context&lt;/code&gt; 를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="1573b61a5aefaf75d05d038cd9b74b32106f81d5" translate="yes" xml:space="preserve">
          <source>Create a new array of &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; items, in an uninitialized state.</source>
          <target state="translated">초기화되지 않은 상태에서 &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 항목 의 새 배열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="fc2b95be4b476076ff98a704cd14c423842d1bc0" translate="yes" xml:space="preserve">
          <source>Create a new project called &lt;em&gt;branches&lt;/em&gt; in your &lt;em&gt;projects&lt;/em&gt; directory to explore the &lt;code&gt;if&lt;/code&gt; expression. In the &lt;em&gt;src/main.rs&lt;/em&gt; file, input the following:</source>
          <target state="translated">새 프로젝트를 호출 만들기 &lt;em&gt;가지를&lt;/em&gt; 당신의 &lt;em&gt;프로젝트&lt;/em&gt; 탐색 할 디렉토리 &lt;code&gt;if&lt;/code&gt; 표현. 에서 &lt;em&gt;SRC / main.rs의&lt;/em&gt; 파일, 입력은 다음과 같은 :</target>
        </trans-unit>
        <trans-unit id="6018c3ae5328bae6985607148a16666db7ade84b" translate="yes" xml:space="preserve">
          <source>Create a proper HTTP response.</source>
          <target state="translated">적절한 HTTP 응답을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="d439578ea401a7b7b1ed8ba278f389cb961cb29e" translate="yes" xml:space="preserve">
          <source>Create an integer value from its memory representation as a byte array in native endianness.</source>
          <target state="translated">고유 한 엔디안에서 바이트 단위로 메모리 표현에서 정수 값을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="edadb155e110b7152a3af83ab6dc9bcd41c5f792" translate="yes" xml:space="preserve">
          <source>Create an integer value from its representation as a byte array in big endian.</source>
          <target state="translated">빅 엔디안에서 바이트 배열로 표현하여 정수 값을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="79d89966c01183ef583d394ab66736d72e5ab2a4" translate="yes" xml:space="preserve">
          <source>Create an integer value from its representation as a byte array in little endian.</source>
          <target state="translated">리틀 엔디안에서 바이트 배열로 표현하여 정수 값을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="25d9f5bbee57eb46f4d71f4619cd2954dab40b6a" translate="yes" xml:space="preserve">
          <source>Create and run a new project using the conventions of Cargo</source>
          <target state="translated">화물 규칙을 사용하여 새 프로젝트 작성 및 실행</target>
        </trans-unit>
        <trans-unit id="4022af3050254311f09f639a107112b87a62cf71" translate="yes" xml:space="preserve">
          <source>Created by &lt;a href=&quot;enum.result#method.iter&quot;&gt;&lt;code&gt;Result::iter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">만든 &lt;a href=&quot;enum.result#method.iter&quot;&gt; &lt;code&gt;Result::iter&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="af0c83f28db824845c100a582780b8f20508d394" translate="yes" xml:space="preserve">
          <source>Created by &lt;a href=&quot;enum.result#method.iter_mut&quot;&gt;&lt;code&gt;Result::iter_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;enum.result#method.iter_mut&quot;&gt; &lt;code&gt;Result::iter_mut&lt;/code&gt; &lt;/a&gt; 의해 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="09811f267c1ebc50f95d66fc983b0d7082c3ae69" translate="yes" xml:space="preserve">
          <source>Created by the &lt;a href=&quot;fn.stdin&quot;&gt;&lt;code&gt;io::stdin&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">에 의해 생성 된 &lt;a href=&quot;fn.stdin&quot;&gt; &lt;code&gt;io::stdin&lt;/code&gt; &lt;/a&gt; 하는 방법.</target>
        </trans-unit>
        <trans-unit id="aa4eda3fc81c73b324209a0ed053e3502c7b6d3a" translate="yes" xml:space="preserve">
          <source>Created by the &lt;a href=&quot;fn.stdout&quot;&gt;&lt;code&gt;io::stdout&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">에 의해 생성 된 &lt;a href=&quot;fn.stdout&quot;&gt; &lt;code&gt;io::stdout&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="4118ac7e788ef0c9786b67fbda36272b1c4996cd" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.lines_any&quot;&gt;&lt;code&gt;lines_any&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.str#method.lines_any&quot;&gt; &lt;code&gt;lines_any&lt;/code&gt; &lt;/a&gt; 메소드로 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="59262292850307c7c68fd149910ff46990cb490b" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.match_indices&quot;&gt;&lt;code&gt;match_indices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.str#method.match_indices&quot;&gt; &lt;code&gt;match_indices&lt;/code&gt; &lt;/a&gt; 메소드로 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="69007e7b352974d2ed5a0645adfb2a0e511b43d9" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.matches&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">메소드 &lt;a href=&quot;../primitive.str#method.matches&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt; 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="0c07e4ab70e8dd8054e05dc1dda6b7b088cec14a" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.rmatch_indices&quot;&gt;&lt;code&gt;rmatch_indices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.str#method.rmatch_indices&quot;&gt; &lt;code&gt;rmatch_indices&lt;/code&gt; &lt;/a&gt; 메소드로 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="f8f1b36ba4c6f5f7293de7c9293d9136170acffe" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.rmatches&quot;&gt;&lt;code&gt;rmatches&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.str#method.rmatches&quot;&gt; &lt;code&gt;rmatches&lt;/code&gt; &lt;/a&gt; 메소드로 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="eef49ccb04e77a74dfee92c547a3ffe707fa5c65" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.rsplit&quot;&gt;&lt;code&gt;rsplit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.str#method.rsplit&quot;&gt; &lt;code&gt;rsplit&lt;/code&gt; &lt;/a&gt; 메소드로 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="d94820cdb27352da5110e5e8ca3318ed87798da3" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.rsplit_terminator&quot;&gt;&lt;code&gt;rsplit_terminator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.str#method.rsplit_terminator&quot;&gt; &lt;code&gt;rsplit_terminator&lt;/code&gt; &lt;/a&gt; 메소드로 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="bd48ff5a5ed05db4cd4900ae8bbab6c4468c965c" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.rsplitn&quot;&gt;&lt;code&gt;rsplitn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.str#method.rsplitn&quot;&gt; &lt;code&gt;rsplitn&lt;/code&gt; &lt;/a&gt; 메소드로 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="41150054fb3e04a6eb2f60c89a0c622a8b687e9f" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.str#method.split&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt; 메소드로 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="736af07e54c1a03aed92b1a7eb6db1ffdbce9dfc" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.split_terminator&quot;&gt;&lt;code&gt;split_terminator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.str#method.split_terminator&quot;&gt; &lt;code&gt;split_terminator&lt;/code&gt; &lt;/a&gt; 메소드로 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="34e66b6ac298ec2a03ac33fa2c496d6b931aa7f7" translate="yes" xml:space="preserve">
          <source>Created with the method &lt;a href=&quot;../primitive.str#method.splitn&quot;&gt;&lt;code&gt;splitn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.str#method.splitn&quot;&gt; &lt;code&gt;splitn&lt;/code&gt; &lt;/a&gt; 메소드로 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="2dd142425da747e12befd4f5b44fb2a02ff2fd2f" translate="yes" xml:space="preserve">
          <source>Creates I/O objects from raw sockets.</source>
          <target state="translated">원시 소켓에서 I / O 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="adc7360d03682b9ce3e40bde033153a742669e22" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;AllocRef&lt;/code&gt;. &lt;a href=&quot;alloc/trait.allocref#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;AllocRef&lt;/code&gt; 인스턴스에 대한 &quot;참조 별&quot;어댑터를 만듭니다 . &lt;a href=&quot;alloc/trait.allocref#method.by_ref&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49e98c67adbb6f030254f89831552d25dcc5c44a" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;AllocRef&lt;/code&gt;. &lt;a href=&quot;trait.allocref#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;AllocRef&lt;/code&gt; 인스턴스에 대한 &quot;참조 별&quot;어댑터를 만듭니다 . &lt;a href=&quot;trait.allocref#method.by_ref&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a278d518f40bfe407b65ae92472554f0ad43b0e9" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Read&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Read&lt;/code&gt; 인스턴스에 대한 &quot;기준 별&quot;어댑터를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="a8c6aace43e5222b1b4a67c3314eb668fa59a95b" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Read&lt;/code&gt;. &lt;a href=&quot;../../../io/trait.read#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Read&lt;/code&gt; 인스턴스에 대한 &quot;기준 별&quot;어댑터를 작성합니다 . &lt;a href=&quot;../../../io/trait.read#method.by_ref&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa1120735f9b617bfcf4c408c364721e2474cfac" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Read&lt;/code&gt;. &lt;a href=&quot;../io/trait.read#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Read&lt;/code&gt; 인스턴스에 대한 &quot;기준 별&quot;어댑터를 작성합니다 . &lt;a href=&quot;../io/trait.read#method.by_ref&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c23950f757a3b5a0564d63c695e29d699148b00" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Read&lt;/code&gt;. &lt;a href=&quot;io/trait.read#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Read&lt;/code&gt; 인스턴스에 대한 &quot;기준 별&quot;어댑터를 작성합니다 . &lt;a href=&quot;io/trait.read#method.by_ref&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0dd31fabcecb658aaa6493cf0457334c216005a" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Read&lt;/code&gt;. &lt;a href=&quot;trait.read#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Read&lt;/code&gt; 인스턴스에 대한 &quot;기준 별&quot;어댑터를 작성합니다 . &lt;a href=&quot;trait.read#method.by_ref&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5351601dd7e1d6a711ac1b03e723d4cf003ac2c" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Write&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Write&lt;/code&gt; 인스턴스에 대한 &quot;기준 별&quot;어댑터를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="c9988f2100bdf98ad9b37f6f532ce86603b20f78" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Write&lt;/code&gt;. &lt;a href=&quot;../../../io/trait.write#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Write&lt;/code&gt; 인스턴스에 대한 &quot;기준 별&quot;어댑터를 작성 합니다. &lt;a href=&quot;../../../io/trait.write#method.by_ref&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f47d2f8cb902e7b21c7adcb08944a9e00262efbd" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Write&lt;/code&gt;. &lt;a href=&quot;../io/trait.write#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Write&lt;/code&gt; 인스턴스에 대한 &quot;기준 별&quot;어댑터를 작성 합니다. &lt;a href=&quot;../io/trait.write#method.by_ref&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c99cb43cbdda30f4ad3392b170e0ff9d377fdbb7" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Write&lt;/code&gt;. &lt;a href=&quot;io/trait.write#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Write&lt;/code&gt; 인스턴스에 대한 &quot;기준 별&quot;어댑터를 작성 합니다. &lt;a href=&quot;io/trait.write#method.by_ref&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a85a9e9d25d9e345d63fefe60877566ee12ee3a5" translate="yes" xml:space="preserve">
          <source>Creates a &quot;by reference&quot; adaptor for this instance of &lt;code&gt;Write&lt;/code&gt;. &lt;a href=&quot;trait.write#method.by_ref&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Write&lt;/code&gt; 인스턴스에 대한 &quot;기준 별&quot;어댑터를 작성 합니다. &lt;a href=&quot;trait.write#method.by_ref&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f219c50ef6b1636aad391feae92a5a6ba5fcaaa9" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;struct.debugstruct&quot;&gt;&lt;code&gt;DebugStruct&lt;/code&gt;&lt;/a&gt; builder designed to assist with creation of &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;fmt::Debug&lt;/code&gt;&lt;/a&gt; implementations for structs.</source>
          <target state="translated">작성 &lt;a href=&quot;struct.debugstruct&quot;&gt; &lt;code&gt;DebugStruct&lt;/code&gt; 의&lt;/a&gt; 생성을 지원하도록 설계 빌더 &lt;a href=&quot;trait.debug&quot;&gt; &lt;code&gt;fmt::Debug&lt;/code&gt; &lt;/a&gt; 구조체에 대한 구현을.</target>
        </trans-unit>
        <trans-unit id="739fb641f1f016f93a6f73322b4ce14626637551" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; containing the arguments.</source>
          <target state="translated">인수를 포함 하는 &lt;a href=&quot;vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; 을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="20ac12e51666ff19269f656f8ed337ce37aa8f96" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for T.</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 의 &lt;code&gt;Default&lt;/code&gt; 사용하여 Box &amp;lt;T&amp;gt;를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="6ffffc37f2ecbb6a8bb4083f12327ca3d6f4223a" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;CString&lt;/code&gt;, pass ownership to an &lt;code&gt;extern&lt;/code&gt; function (via raw pointer), then retake ownership with &lt;code&gt;from_raw&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; 을 만들고, 원시 포인터를 통해 소유권을 &lt;code&gt;extern&lt;/code&gt; 함수에 &lt;code&gt;from_raw&lt;/code&gt; 다음 from_raw로 소유권을 다시 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="e697eeab2968b2fe6b1eaad6636bc85accf362d3" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for T.</source>
          <target state="translated">&lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; 의 &lt;code&gt;Default&lt;/code&gt; 사용하여 Cell &amp;lt;T&amp;gt;를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="55a80b9868a6c43d379540049d65f50ea1da2ffd" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Condvar&lt;/code&gt; which is ready to be waited on and notified.</source>
          <target state="translated">기다릴 준비가 된 &lt;code&gt;Condvar&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c7eaba70ca9585d52f8873cbf27e20698cc83ca9" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;DebugList&lt;/code&gt; builder designed to assist with creation of &lt;code&gt;fmt::Debug&lt;/code&gt; implementations for list-like structures.</source>
          <target state="translated">작성 &lt;code&gt;DebugList&lt;/code&gt; 의 생성을 지원하도록 설계 빌더 &lt;code&gt;fmt::Debug&lt;/code&gt; 목록 같은 구조의 구현을.</target>
        </trans-unit>
        <trans-unit id="78f2b0bf71bda8bfb83fdfb6f61982d96c436b41" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;DebugMap&lt;/code&gt; builder designed to assist with creation of &lt;code&gt;fmt::Debug&lt;/code&gt; implementations for map-like structures.</source>
          <target state="translated">작성 &lt;code&gt;DebugMap&lt;/code&gt; 의 생성을 지원하도록 설계 빌더 &lt;code&gt;fmt::Debug&lt;/code&gt; 구조지도와 같은 구현을.</target>
        </trans-unit>
        <trans-unit id="6b223e3e99a64a1329ad13395fb3de1305791f79" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;DebugSet&lt;/code&gt; builder designed to assist with creation of &lt;code&gt;fmt::Debug&lt;/code&gt; implementations for set-like structures.</source>
          <target state="translated">작성 &lt;code&gt;DebugSet&lt;/code&gt; 의 생성을 지원하도록 설계 빌더 &lt;code&gt;fmt::Debug&lt;/code&gt; 구조 세트 같은 구현을.</target>
        </trans-unit>
        <trans-unit id="3a043481d83beb3910de7ff88ad967a32c4cdea8" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;DebugTuple&lt;/code&gt; builder designed to assist with creation of &lt;code&gt;fmt::Debug&lt;/code&gt; implementations for tuple structs.</source>
          <target state="translated">작성 &lt;code&gt;DebugTuple&lt;/code&gt; 의 생성을 지원하도록 설계 빌더 &lt;code&gt;fmt::Debug&lt;/code&gt; 튜플 구조체에 대한 구현을.</target>
        </trans-unit>
        <trans-unit id="c2e945b534e7387a676cdf2092f05ed3ca7e6a0d" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for T.</source>
          <target state="translated">&lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; 의 &lt;code&gt;Default&lt;/code&gt; 사용하여 Mutex &amp;lt;T&amp;gt;를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="2457dcfd86eed40ee77c1be89b5497e483ff1fb1" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;NonNull&lt;/code&gt; that is dangling, but well-aligned for this Layout.</source>
          <target state="translated">매달려 있지만이 레이아웃에 대해 잘 정렬 된 &lt;code&gt;NonNull&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="5c0d085c7250037263700b6cfb18ce731e674d4b" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;PoisonError&lt;/code&gt;.</source>
          <target state="translated">작성 &lt;code&gt;PoisonError&lt;/code&gt; 은 .</target>
        </trans-unit>
        <trans-unit id="2e0a49f1052dbc1a3b0a1749902359f56811b9e5" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;RawEntryMut&lt;/code&gt; from the given hash.</source>
          <target state="translated">지정된 해시로부터 &lt;code&gt;RawEntryMut&lt;/code&gt; 를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="de5c5c1cf0d19ac46ba4373288253b2f05653f7c" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;RawEntryMut&lt;/code&gt; from the given key and its hash.</source>
          <target state="translated">지정된 키와 해시로부터 &lt;code&gt;RawEntryMut&lt;/code&gt; 를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="62c5d99a4d7585b6ed324067726f3b9bcf468406" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;RawEntryMut&lt;/code&gt; from the given key.</source>
          <target state="translated">주어진 키에서 &lt;code&gt;RawEntryMut&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="783dd143d9e57f2eac1643efca4369484a4560cb" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for T.</source>
          <target state="translated">작성 &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 의와 &lt;code&gt;Default&lt;/code&gt; T. 가치</target>
        </trans-unit>
        <trans-unit id="3fff5893e4b016c790ee41387abc252e0a3dbbc9" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;SipHasher&lt;/code&gt; that is keyed off the provided keys.</source>
          <target state="translated">제공된 키를 사용 하여 &lt;code&gt;SipHasher&lt;/code&gt; 를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="7d2164d0001388156d7dc65bb3766604bcd46f23" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;String&lt;/code&gt; using interpolation of runtime expressions.</source>
          <target state="translated">작성 &lt;code&gt;String&lt;/code&gt; 런타임 표현을 사용하여 보간.</target>
        </trans-unit>
        <trans-unit id="186312d3e8f02c67bef7a02b5d523802c4aa8934" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; directly from the raw components of another vector.</source>
          <target state="translated">작성 &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 직접 다른 벡터의 원료 성분에서.</target>
        </trans-unit>
        <trans-unit id="1d9bce70c0580be8c8b97ba5c3bd8fd776ca7cd1" translate="yes" xml:space="preserve">
          <source>Creates a C string wrapper from a byte slice.</source>
          <target state="translated">바이트 슬라이스에서 C 문자열 래퍼를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2760a55dc42de0ca1b9aa402a75cb2cd901bf4c7" translate="yes" xml:space="preserve">
          <source>Creates a C-compatible string by consuming a byte vector, without checking for interior 0 bytes.</source>
          <target state="translated">내부 0 바이트를 확인하지 않고 바이트 벡터를 소비하여 C 호환 문자열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8f3450537e212e5ded854c29cc430df9d6399fe6" translate="yes" xml:space="preserve">
          <source>Creates a TCP listener bound to &lt;code&gt;127.0.0.1:80&lt;/code&gt;. If that fails, create a TCP listener bound to &lt;code&gt;127.0.0.1:443&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;127.0.0.1:80&lt;/code&gt; 에 바인딩 된 TCP 리스너를 작성 합니다 . 실패하면 &lt;code&gt;127.0.0.1:443&lt;/code&gt; 에 바인딩 된 TCP 리스너를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="09ead757efb04dcd3b56b97156680495cc215787" translate="yes" xml:space="preserve">
          <source>Creates a TCP listener bound to &lt;code&gt;127.0.0.1:80&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;127.0.0.1:80&lt;/code&gt; 에 바인딩 된 TCP 리스너를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="125547a7cdfd055c791ab9fe907dbb901276dc4e" translate="yes" xml:space="preserve">
          <source>Creates a UDP socket bound to &lt;code&gt;127.0.0.1:3400&lt;/code&gt; and connect the socket to &lt;code&gt;127.0.0.1:8080&lt;/code&gt;:</source>
          <target state="translated">은 UDP 소켓에 바인드 작성 &lt;code&gt;127.0.0.1:3400&lt;/code&gt; 과에 소켓을 연결 &lt;code&gt;127.0.0.1:8080&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b3e6bdcae553ddb22df2dc99d1291e7f6adae2cb" translate="yes" xml:space="preserve">
          <source>Creates a UDP socket bound to &lt;code&gt;127.0.0.1:3400&lt;/code&gt;. If the socket cannot be bound to that address, create a UDP socket bound to &lt;code&gt;127.0.0.1:3401&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;127.0.0.1:3400&lt;/code&gt; 에 바인딩 된 UDP 소켓을 만듭니다 . 소켓이 해당 주소에 바인딩 될 수없는 경우 &lt;code&gt;127.0.0.1:3401&lt;/code&gt; 에 바인딩 된 UDP 소켓을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="970a978688cc0f0cc3cd91c8aee2643dc529be5e" translate="yes" xml:space="preserve">
          <source>Creates a UDP socket bound to &lt;code&gt;127.0.0.1:3400&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;127.0.0.1:3400&lt;/code&gt; 에 바인딩 된 UDP 소켓을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="6d67e9f4331cb8a94ca8c11e0fa8d4c1d232fb18" translate="yes" xml:space="preserve">
          <source>Creates a UDP socket bound to &lt;code&gt;127.0.0.1:7878&lt;/code&gt; and read bytes in nonblocking mode:</source>
          <target state="translated">&lt;code&gt;127.0.0.1:7878&lt;/code&gt; 에 바인딩 된 UDP 소켓을 작성 하고 비 블로킹 모드에서 바이트를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="1151249da77e9f2de50f7481ee50add938a7ab4f" translate="yes" xml:space="preserve">
          <source>Creates a UDP socket from the given address.</source>
          <target state="translated">주어진 주소에서 UDP 소켓을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="795fe524ed6f584d4e9afe0e80df1ee90a45cd0b" translate="yes" xml:space="preserve">
          <source>Creates a Unix Datagram socket which is not bound to any address.</source>
          <target state="translated">주소에 바인딩되지 않은 Unix 데이터 그램 소켓을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d924c364ce8b29f794812fd360b1f7778311ab84" translate="yes" xml:space="preserve">
          <source>Creates a Unix datagram socket bound to the given path.</source>
          <target state="translated">주어진 경로에 바인딩 된 Unix 데이터 그램 소켓을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4c2cfa537cff8be0489b9b009b909857fe251042" translate="yes" xml:space="preserve">
          <source>Creates a blank new set of options ready for configuration.</source>
          <target state="translated">구성 준비가 된 빈 새 옵션 세트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="126f592716e99eb8b2f011b315511a7abe434c67" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator visiting all the keys in arbitrary order. The map cannot be used after calling this. The iterator element type is &lt;code&gt;K&lt;/code&gt;.</source>
          <target state="translated">임의의 순서로 모든 키를 방문하는 소비 반복기를 만듭니다. 이것을 호출 한 후에는지도를 사용할 수 없습니다. 반복기 요소 유형은 &lt;code&gt;K&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7c40975f7aca2548822b2c017b5f70dd4d1cc3cc" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator visiting all the keys, in sorted order. The map cannot be used after calling this. The iterator element type is &lt;code&gt;K&lt;/code&gt;.</source>
          <target state="translated">정렬 된 순서로 모든 키를 방문하는 소비 반복기를 만듭니다. 이것을 호출 한 후에는지도를 사용할 수 없습니다. 반복기 요소 유형은 &lt;code&gt;K&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="214a64ab897dee52561a07fdff1b80d5d939e941" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator visiting all the values in arbitrary order. The map cannot be used after calling this. The iterator element type is &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">임의의 순서로 모든 값을 방문하는 소비 반복기를 만듭니다. 이것을 호출 한 후에는지도를 사용할 수 없습니다. 반복기 요소 유형은 &lt;code&gt;V&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="19a6064fc4e6c00c6fd2244ac07d8131e44e7638" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator visiting all the values, in order by key. The map cannot be used after calling this. The iterator element type is &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">키순으로 모든 값을 방문하는 소비 반복자를 만듭니다. 이것을 호출 한 후에는지도를 사용할 수 없습니다. 반복기 요소 유형은 &lt;code&gt;V&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c3d1a6f5d907d5005528a9e611c70f14eac0e563" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator, that is, one that moves each key-value pair out of the map in arbitrary order. The map cannot be used after calling this.</source>
          <target state="translated">소비하는 반복기, 즉 각 키-값 쌍을 임의의 순서로 맵 밖으로 이동시키는 반복기를 만듭니다. 이것을 호출 한 후 맵을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="79b001f20ad5ddba645d473cd2eabf2f0b9fab15" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator, that is, one that moves each value out of the binary heap in arbitrary order. The binary heap cannot be used after calling this.</source>
          <target state="translated">소비 반복기 즉, 각 값을 임의의 순서로 이진 힙 밖으로 이동시키는 반복기를 작성합니다. 이것을 호출 한 후에는 바이너리 힙을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7feed7f78b7ec26ae1634185d6a9758340531778" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator, that is, one that moves each value out of the set in arbitrary order. The set cannot be used after calling this.</source>
          <target state="translated">소비 반복기, 즉 각 값을 임의 순서로 세트 밖으로 이동시키는 반복기를 작성합니다. 이것을 호출 한 후에는 세트를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="21cd148d772cd2056fdb8294260ce5794f1a496f" translate="yes" xml:space="preserve">
          <source>Creates a consuming iterator, that is, one that moves each value out of the vector (from start to end). The vector cannot be used after calling this.</source>
          <target state="translated">소비 반복기, 즉 각 값을 벡터 밖으로 이동시킵니다 (시작부터 끝까지). 이것을 호출 한 후 벡터를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e25f6dea08ae4574fa8e540a54d8cc1337d77224" translate="yes" xml:space="preserve">
          <source>Creates a draining iterator that removes the specified range in the &lt;code&gt;String&lt;/code&gt; and yields the removed &lt;code&gt;chars&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 에서 지정된 범위를 제거하고 제거 된 &lt;code&gt;chars&lt;/code&gt; 생성하는 배수 반복자를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="7db96b23148a77de869b5eca7a045e98737fe84f" translate="yes" xml:space="preserve">
          <source>Creates a draining iterator that removes the specified range in the &lt;code&gt;VecDeque&lt;/code&gt; and yields the removed items.</source>
          <target state="translated">&lt;code&gt;VecDeque&lt;/code&gt; 에서 지정된 범위를 제거하고 제거 된 항목을 생성하는 배수 반복기를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="30705a0e8a834bf60d65b0e913c943e74e2345a0" translate="yes" xml:space="preserve">
          <source>Creates a draining iterator that removes the specified range in the vector and yields the removed items.</source>
          <target state="translated">벡터에서 지정된 범위를 제거하고 제거 된 항목을 생성하는 배수 반복기를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0a3ace82b47facecc11751d667241e41c5433bb3" translate="yes" xml:space="preserve">
          <source>Creates a future from a value.</source>
          <target state="translated">가치에서 미래를 창조합니다.</target>
        </trans-unit>
        <trans-unit id="a4904c979ded2cb022be948e4bb7e724529681fe" translate="yes" xml:space="preserve">
          <source>Creates a future that is immediately ready with a value.</source>
          <target state="translated">가치로 즉시 준비되는 미래를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a911b1f09940050ef78aeaffea81a903d921b3d4" translate="yes" xml:space="preserve">
          <source>Creates a future which never resolves, representing a computation that never finishes.</source>
          <target state="translated">결코 끝나지 않는 계산을 나타내는 결코 해결되지 않는 미래를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="436c8bdec76df1112a2f44268113a4f34c8a8a35" translate="yes" xml:space="preserve">
          <source>Creates a layout by rounding the size of this layout up to a multiple of the layout's alignment.</source>
          <target state="translated">이 레이아웃의 크기를 레이아웃 정렬의 배수로 올림하여 레이아웃을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="50260a92d64c851dba9e3cd2c96fc0f61579a3fa" translate="yes" xml:space="preserve">
          <source>Creates a layout describing the record for &lt;code&gt;n&lt;/code&gt; instances of &lt;code&gt;self&lt;/code&gt;, with a suitable amount of padding between each to ensure that each instance is given its requested size and alignment. On success, returns &lt;code&gt;(k, offs)&lt;/code&gt; where &lt;code&gt;k&lt;/code&gt; is the layout of the array and &lt;code&gt;offs&lt;/code&gt; is the distance between the start of each element in the array.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 개의 &lt;code&gt;self&lt;/code&gt; 인스턴스에 대한 레코드를 설명하는 레이아웃을 작성하고 각 인스턴스에 요청 된 크기와 정렬이 제공되도록 각 인스턴스 사이에 적절한 양의 패딩을 작성하십시오. 성공하면 &lt;code&gt;(k, offs)&lt;/code&gt; 반환합니다. 여기서 &lt;code&gt;k&lt;/code&gt; 는 배열의 레이아웃이고 &lt;code&gt;offs&lt;/code&gt; 는 배열 의 각 요소 시작 사이의 거리입니다.</target>
        </trans-unit>
        <trans-unit id="268f12b9c493a33dcef1cd52c4873aea2c4bfee9" translate="yes" xml:space="preserve">
          <source>Creates a layout describing the record for &lt;code&gt;n&lt;/code&gt; instances of &lt;code&gt;self&lt;/code&gt;, with no padding between each instance.</source>
          <target state="translated">각 인스턴스 사이에 패딩없이 &lt;code&gt;n&lt;/code&gt; 개의 &lt;code&gt;self&lt;/code&gt; 인스턴스에 대한 레코드를 설명하는 레이아웃을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="8ef29cf4bd3ff8c9dc61d9840e7fe86d594cf7ea" translate="yes" xml:space="preserve">
          <source>Creates a layout describing the record for &lt;code&gt;self&lt;/code&gt; followed by &lt;code&gt;next&lt;/code&gt; with no additional padding between the two. Since no padding is inserted, the alignment of &lt;code&gt;next&lt;/code&gt; is irrelevant, and is not incorporated &lt;em&gt;at all&lt;/em&gt; into the resulting layout.</source>
          <target state="translated">위한 기록을 설명하기위한 레이아웃 생성 &lt;code&gt;self&lt;/code&gt; 뒤에 &lt;code&gt;next&lt;/code&gt; 둘 사이 추가적인 패딩. 패딩이 삽입되지 않기 때문에, 정렬의 &lt;code&gt;next&lt;/code&gt; 무관하며, 통합되지 &lt;em&gt;전혀&lt;/em&gt; 생성 된 레이아웃으로.</target>
        </trans-unit>
        <trans-unit id="b28cc5cd8d23aba4c2d3ab83f94dacdbb74a4144" translate="yes" xml:space="preserve">
          <source>Creates a layout describing the record for &lt;code&gt;self&lt;/code&gt; followed by &lt;code&gt;next&lt;/code&gt;, including any necessary padding to ensure that &lt;code&gt;next&lt;/code&gt; will be properly aligned, but &lt;em&gt;no trailing padding&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; 가 제대로 정렬되지만 &lt;em&gt;후행 패딩&lt;/em&gt; 이 없는지 확인하는 데 필요한 패딩을 포함하여 &lt;code&gt;self&lt;/code&gt; 다음에 &lt;code&gt;next&lt;/code&gt; 가 오는 레코드를 설명하는 레이아웃을 만듭니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c8a339bd6044081931512d7181022dc336e0d927" translate="yes" xml:space="preserve">
          <source>Creates a layout describing the record for &lt;code&gt;self&lt;/code&gt; followed by &lt;code&gt;next&lt;/code&gt;, including any necessary padding to ensure that &lt;code&gt;next&lt;/code&gt; will be properly aligned. Note that the result layout will satisfy the alignment properties of both &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="translated">위한 기록을 설명하기위한 레이아웃 생성 &lt;code&gt;self&lt;/code&gt; 이어서 &lt;code&gt;next&lt;/code&gt; 을 보장하기 위하여 필요한 패딩을 포함하여 &lt;code&gt;next&lt;/code&gt; 적절히 정렬 될 것이다. 결과 레이아웃은 &lt;code&gt;self&lt;/code&gt; 와 &lt;code&gt;next&lt;/code&gt; 모두의 정렬 속성을 만족합니다 .</target>
        </trans-unit>
        <trans-unit id="e9eb164e50415b51b0271091ac7a99d5413e2a1e" translate="yes" xml:space="preserve">
          <source>Creates a layout describing the record for a &lt;code&gt;[T; n]&lt;/code&gt;.</source>
          <target state="translated">A에 대한 기록을 설명하는 레이아웃 작성 &lt;code&gt;[T; n]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="389dad686e39af29b9b280293b52a42a6430962d" translate="yes" xml:space="preserve">
          <source>Creates a layout describing the record that can hold a value of the same layout as &lt;code&gt;self&lt;/code&gt;, but that also is aligned to alignment &lt;code&gt;align&lt;/code&gt; (measured in bytes).</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 와 동일한 레이아웃 값을 보유 할 수 있지만 정렬 &lt;code&gt;align&lt;/code&gt; (바이트 단위로) 로 정렬 된 레코드를 설명하는 레이아웃을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="e588f25c4e6b7ac7ea5caf6c5e06d4755cf5af31" translate="yes" xml:space="preserve">
          <source>Creates a layout, bypassing all checks.</source>
          <target state="translated">모든 검사를 무시하고 레이아웃을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2817fb61697399c19b58cca3a8fdd90cbe8f1971" translate="yes" xml:space="preserve">
          <source>Creates a mutable empty slice.</source>
          <target state="translated">변경 가능한 빈 슬라이스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e9df76e91971de9dcb6fc67a0fae7b04f68b9134" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; by repeating a string &lt;code&gt;n&lt;/code&gt; times.</source>
          <target state="translated">문자열을 &lt;code&gt;n&lt;/code&gt; 번 반복 하여 새 &lt;a href=&quot;string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="31012fb6bbd1810c8b9f76097430713c7a6abb1a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; by repeating a string &lt;code&gt;n&lt;/code&gt; times.</source>
          <target state="translated">문자열을 &lt;code&gt;n&lt;/code&gt; 번 반복 하여 새 &lt;a href=&quot;struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b29497ce5a46da557b14f6b4d2ebca275af52b14" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&lt;/code&gt;&lt;/a&gt; pointer to this allocation.</source>
          <target state="translated">이 할당에 대한 새 &lt;a href=&quot;struct.weak&quot;&gt; &lt;code&gt;Weak&lt;/code&gt; &lt;/a&gt; 포인터를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1fd7999bf71d6912e1a04411cb9e145cd825dabf" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&lt;/code&gt;&lt;/a&gt; pointer to this value.</source>
          <target state="translated">이 값에 대한 새로운 &lt;a href=&quot;struct.weak&quot;&gt; &lt;code&gt;Weak&lt;/code&gt; &lt;/a&gt; 포인터를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="807ffb64a9c1d7c6b34cf14a23c5c2110d7f3f31" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">새로운 작성 &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; 의와 &lt;code&gt;Default&lt;/code&gt; 가치 &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99ef26d0672391b7800bf502312643fb4577ee24" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AtomicBool&lt;/code&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;AtomicBool&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="65045a23e7b234e7546b04c58c4a8f40ab5f175b" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;AtomicPtr&lt;/code&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;AtomicPtr&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1af905254bd28a16477b0ee056f080f37df04308" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufReader&amp;lt;R&amp;gt;&lt;/code&gt; with a default buffer capacity. The default is currently 8 KB, but may change in the future.</source>
          <target state="translated">기본 버퍼 용량으로 새 &lt;code&gt;BufReader&amp;lt;R&amp;gt;&lt;/code&gt; 을 만듭니다 . 기본값은 현재 8KB이지만 나중에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83f093efbc0350ba55fc2e1d6b4a2a524c09471a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufReader&amp;lt;R&amp;gt;&lt;/code&gt; with the specified buffer capacity.</source>
          <target state="translated">지정된 버퍼 용량 으로 새 &lt;code&gt;BufReader&amp;lt;R&amp;gt;&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="fcf38db8656a4ba5c6c6fe72b32bd43098614713" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufReader&lt;/code&gt; with a default buffer capacity. The default is currently 8 KB, but may change in the future.</source>
          <target state="translated">기본 버퍼 용량으로 새로운 &lt;code&gt;BufReader&lt;/code&gt; 를 작성합니다. 기본값은 현재 8KB이지만 향후 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67804ff6b85e90a2d980b3a1c2e871ccde3859fa" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufReader&lt;/code&gt; with the specified buffer capacity.</source>
          <target state="translated">지정된 버퍼 용량 으로 새로운 &lt;code&gt;BufReader&lt;/code&gt; 를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="f62e390375d42a44f731ae89152595f4f9af74a2" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufWriter&amp;lt;W&amp;gt;&lt;/code&gt; with a default buffer capacity. The default is currently 8 KB, but may change in the future.</source>
          <target state="translated">기본 버퍼 용량을 사용 하여 새 &lt;code&gt;BufWriter&amp;lt;W&amp;gt;&lt;/code&gt; 를 만듭니다 . 기본값은 현재 8KB이지만 나중에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0bd18eed39836994abba67796e9ca63c465a3cc2" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufWriter&amp;lt;W&amp;gt;&lt;/code&gt; with the specified buffer capacity.</source>
          <target state="translated">지정된 버퍼 용량 으로 새 &lt;code&gt;BufWriter&amp;lt;W&amp;gt;&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="066e33af0aa472fa3e8c8b27730733cce1804b11" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufWriter&lt;/code&gt; with a default buffer capacity. The default is currently 8 KB, but may change in the future.</source>
          <target state="translated">기본 버퍼 용량으로 새로운 &lt;code&gt;BufWriter&lt;/code&gt; 를 작성합니다. 기본값은 현재 8KB이지만 향후 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dda444016d344ac62e443818aad1aa9269ea0cd0" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;BufWriter&lt;/code&gt; with the specified buffer capacity.</source>
          <target state="translated">지정된 버퍼 용량 으로 새로운 &lt;code&gt;BufWriter&lt;/code&gt; 를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="ba8ad7d1fcbae32069c8b306593ac23f6cb511e4" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Cell&lt;/code&gt; containing the given value.</source>
          <target state="translated">주어진 값을 포함 하는 새로운 &lt;code&gt;Cell&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b9d2b6177e4e9be9aacf869587ccada30900a5cc" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;DefaultHasher&lt;/code&gt; using &lt;a href=&quot;../collections/hash_map/struct.defaulthasher#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="translated">새로운 작성 &lt;code&gt;DefaultHasher&lt;/code&gt; 사용하여 &lt;a href=&quot;../collections/hash_map/struct.defaulthasher#method.new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; . 자세한 내용은 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a58ce1a3743a2768136b99607cdae8b4185b440f" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;DefaultHasher&lt;/code&gt; using &lt;a href=&quot;struct.defaulthasher#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;. See its documentation for more.</source>
          <target state="translated">새로운 작성 &lt;code&gt;DefaultHasher&lt;/code&gt; 사용하여 &lt;a href=&quot;struct.defaulthasher#method.new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; . 자세한 내용은 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f304e05ff89799828ae510c8ed9b70a76d3ac86b" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;DefaultHasher&lt;/code&gt; using &lt;code&gt;new&lt;/code&gt;. See its documentation for more.</source>
          <target state="translated">새로운 작성 &lt;code&gt;DefaultHasher&lt;/code&gt; 사용하여 &lt;code&gt;new&lt;/code&gt; . 자세한 내용은 해당 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e776f772fa00078a1230fbf70cf606d2f7f7a82b" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;DefaultHasher&lt;/code&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;DefaultHasher&lt;/code&gt; 를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="ac1919fbbb2fe7072f84e13a4b91b90e6d25fdc4" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; from the specified number of microseconds.</source>
          <target state="translated">지정된 &lt;code&gt;Duration&lt;/code&gt; 마이크로 초)에서 새 지속 시간 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="d1c8945480eb390fc4c3cc7d988b2e7b9adcd43a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; from the specified number of milliseconds.</source>
          <target state="translated">지정된 &lt;code&gt;Duration&lt;/code&gt; 밀리 초)에서 새 지속 시간 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="8fbbf7fd3c6c92a75e1e34b568a1b924fa36a984" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; from the specified number of nanoseconds.</source>
          <target state="translated">지정된 수의 나노초에서 새 &lt;code&gt;Duration&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="cfa9562be769593a7e87d38990184c91f9589a6e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; from the specified number of seconds represented as &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f32&lt;/code&gt; 로 표시된 지정된 &lt;code&gt;Duration&lt;/code&gt; 초)에서 새 Duration 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="47028819bc03f40c46ee37ebefa2ecf952787f7c" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; from the specified number of seconds represented as &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f64&lt;/code&gt; 로 표시된 지정된 &lt;code&gt;Duration&lt;/code&gt; 초)에서 새 Duration 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="7e738616afd1d02fb1c01ef1c8da746fbd673198" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; from the specified number of whole seconds and additional nanoseconds.</source>
          <target state="translated">지정된 전체 초 수 및 추가 나노초에서 새 &lt;code&gt;Duration&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="587d29ed6b51190b5b14de549d69d716511e4c67" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; from the specified number of whole seconds.</source>
          <target state="translated">지정된 전체 초 수에서 새 &lt;code&gt;Duration&lt;/code&gt; 을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="cfe09547fea1dc0f13c85efa7a063cc23ea3e22e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Duration&lt;/code&gt; that spans no time.</source>
          <target state="translated">&lt;code&gt;Duration&lt;/code&gt; 이없는 새 Duration 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="df5ff87acbb972a65afaee2f4544dd49e05923a9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;ExitStatus&lt;/code&gt; from the raw underlying &lt;code&gt;i32&lt;/code&gt; return value of a process.</source>
          <target state="translated">프로세스 의 원시 기본 &lt;code&gt;i32&lt;/code&gt; 리턴 값 에서 새 &lt;code&gt;ExitStatus&lt;/code&gt; 를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="52fe5caa89c1904f743c20af8d459d8ea0d54f66" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;ExitStatus&lt;/code&gt; from the raw underlying &lt;code&gt;i32&lt;/code&gt; return value of a process. &lt;a href=&quot;../os/unix/process/trait.exitstatusext#tymethod.from_raw&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">프로세스 의 원시 기본 &lt;code&gt;i32&lt;/code&gt; 리턴 값 에서 새 &lt;code&gt;ExitStatus&lt;/code&gt; 를 작성합니다 . &lt;a href=&quot;../os/unix/process/trait.exitstatusext#tymethod.from_raw&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64d4e497a4325552204be0953e113e9c4996198e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;ExitStatus&lt;/code&gt; from the raw underlying &lt;code&gt;u32&lt;/code&gt; return value of a process.</source>
          <target state="translated">프로세스 의 원시 기본 &lt;code&gt;u32&lt;/code&gt; 리턴 값 에서 새 &lt;code&gt;ExitStatus&lt;/code&gt; 를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="b16ec7ae2a57c52f9a63e577ed32017e5ea38296" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;ExitStatus&lt;/code&gt; from the raw underlying &lt;code&gt;u32&lt;/code&gt; return value of a process. &lt;a href=&quot;../os/windows/process/trait.exitstatusext#tymethod.from_raw&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">프로세스 의 원시 기본 &lt;code&gt;u32&lt;/code&gt; 리턴 값 에서 새 &lt;code&gt;ExitStatus&lt;/code&gt; 를 작성합니다 . &lt;a href=&quot;../os/windows/process/trait.exitstatusext#tymethod.from_raw&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c54c6b6e1ac99a29c5886d973030c90ecbe09703" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;File&lt;/code&gt; instance that shares the same underlying file handle as the existing &lt;code&gt;File&lt;/code&gt; instance. Reads, writes, and seeks will affect both &lt;code&gt;File&lt;/code&gt; instances simultaneously.</source>
          <target state="translated">기존 &lt;code&gt;File&lt;/code&gt; 인스턴스 와 동일한 기본 파일 핸들을 공유 하는 새 &lt;code&gt;File&lt;/code&gt; 인스턴스를 만듭니다 . 읽기, 쓰기 및 검색은 두 &lt;code&gt;File&lt;/code&gt; 인스턴스에 동시에 영향을 미칩니다 .</target>
        </trans-unit>
        <trans-unit id="fc40d753662125fab6bff7ec77e45558fad3313e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;IoSlice&lt;/code&gt; wrapping a byte slice.</source>
          <target state="translated">바이트 슬라이스를 감싸는 새로운 &lt;code&gt;IoSlice&lt;/code&gt; 를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="6262ac945fe4f065843bdc921d137c7ba882edd8" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;IoSliceMut&lt;/code&gt; wrapping a byte slice.</source>
          <target state="translated">바이트 슬라이스를 감싸는 새로운 &lt;code&gt;IoSliceMut&lt;/code&gt; 를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="cdba9bc8b65ba1c91c154d3143d90612e003ad88" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;LineWriter&lt;/code&gt; with a specified capacity for the internal buffer.</source>
          <target state="translated">내부 버퍼에 지정된 용량 으로 새 &lt;code&gt;LineWriter&lt;/code&gt; 를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="e0600662edab1bcab51ac0bc096522a5c92ba496" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;LineWriter&lt;/code&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;LineWriter&lt;/code&gt; 를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="af68ad9875bc8f87d7804de24b784586df687e95" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; in an uninitialized state, with the memory being filled with &lt;code&gt;0&lt;/code&gt; bytes. It depends on &lt;code&gt;T&lt;/code&gt; whether that already makes for proper initialization. For example, &lt;code&gt;MaybeUninit&amp;lt;usize&amp;gt;::zeroed()&lt;/code&gt; is initialized, but &lt;code&gt;MaybeUninit&amp;lt;&amp;amp;'static i32&amp;gt;::zeroed()&lt;/code&gt; is not because references must not be null.</source>
          <target state="translated">초기화되지 않은 상태에서 메모리가 &lt;code&gt;0&lt;/code&gt; 바이트 로 채워져 새로운 &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 를 작성 합니다. 이미 적절한 초기화를 수행했는지 여부는 &lt;code&gt;T&lt;/code&gt; 에 따라 다릅니다 . 예를 들어, &lt;code&gt;MaybeUninit&amp;lt;usize&amp;gt;::zeroed()&lt;/code&gt; 는 초기화되었지만 &lt;code&gt;MaybeUninit&amp;lt;&amp;amp;'static i32&amp;gt;::zeroed()&lt;/code&gt; 는 참조가 null이 아니어야하기 때문에 아닙니다.</target>
        </trans-unit>
        <trans-unit id="892753767efd9bdc2117ddd3a626fe350155a2f7" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; in an uninitialized state.</source>
          <target state="translated">초기화되지 않은 상태에서 새로운 &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="20fe211b21fb0f95cc5631b2c5906351919cf296" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; initialized with the given value. It is safe to call &lt;a href=&quot;#method.assume_init&quot;&gt;&lt;code&gt;assume_init&lt;/code&gt;&lt;/a&gt; on the return value of this function.</source>
          <target state="translated">지정된 값으로 초기화 된 새로운 &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 합니다. 이 함수의 반환 값에서 &lt;a href=&quot;#method.assume_init&quot;&gt; &lt;code&gt;assume_init&lt;/code&gt; &lt;/a&gt; 를 호출하는 것이 안전 합니다.</target>
        </trans-unit>
        <trans-unit id="c037622005756a3f8893da57c8c8db85d4d2339f" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; initialized with the given value. It is safe to call &lt;a href=&quot;union.maybeuninit#method.assume_init&quot;&gt;&lt;code&gt;assume_init&lt;/code&gt;&lt;/a&gt; on the return value of this function.</source>
          <target state="translated">지정된 값으로 초기화 된 새 &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 만듭니다 . 이 함수의 반환 값에 대해 &lt;a href=&quot;union.maybeuninit#method.assume_init&quot;&gt; &lt;code&gt;assume_init&lt;/code&gt; &lt;/a&gt; 를 호출하는 것이 안전 합니다.</target>
        </trans-unit>
        <trans-unit id="b792bb4fa6b2af9606db216f84b9e37a8238e7e9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;NonNull&lt;/code&gt; if &lt;code&gt;ptr&lt;/code&gt; is non-null.</source>
          <target state="translated">&lt;code&gt;ptr&lt;/code&gt; 이 널이 아닌 경우 새 &lt;code&gt;NonNull&lt;/code&gt; 을 작성 합니다 .</target>
        </trans-unit>
        <trans-unit id="6d95c9c1a436aaa0561205a0afb98c6b8948e877" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;NonNull&lt;/code&gt; that is dangling, but well-aligned.</source>
          <target state="translated">매달려 있지만 잘 정렬 된 새 &lt;code&gt;NonNull&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="d88819d9f52fd4c66f2d811b6b36f7817fc8811e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;NonNull&lt;/code&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;NonNull&lt;/code&gt; 을 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="57d86a84e8f9fc81ee203b6616499b4d2e65244a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Once&lt;/code&gt; value.</source>
          <target state="translated">새로운 &lt;code&gt;Once&lt;/code&gt; 값을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="bb7591bd908639c4722b535363e45ec6207c325b" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;OsString&lt;/code&gt; with the given capacity.</source>
          <target state="translated">주어진 용량 으로 새로운 &lt;code&gt;OsString&lt;/code&gt; 을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="919cf27d5e403554cee61d10d7b01fa674a86681" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;PathBuf&lt;/code&gt; with a given capacity used to create the internal &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;../ffi/struct.osstring#method.with_capacity&quot;&gt;&lt;code&gt;with_capacity&lt;/code&gt;&lt;/a&gt; defined on &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">내부 &lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; 을 만드는 데 사용 된 지정된 용량 으로 새 &lt;code&gt;PathBuf&lt;/code&gt; 를 만듭니다 . &lt;a href=&quot;../ffi/struct.osstring#method.with_capacity&quot;&gt; &lt;code&gt;with_capacity&lt;/code&gt; &lt;/a&gt; 정의 된 &lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4679da04f2e5f846a389076a683398439f2c0e56" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;RawWaker&lt;/code&gt; from the provided &lt;code&gt;data&lt;/code&gt; pointer and &lt;code&gt;vtable&lt;/code&gt;.</source>
          <target state="translated">제공된 &lt;code&gt;data&lt;/code&gt; 포인터 및 &lt;code&gt;vtable&lt;/code&gt; 에서 새 &lt;code&gt;RawWaker&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a801aae93956af0cf79382be3b6ec17384d1028d" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;RawWakerVTable&lt;/code&gt; from the provided &lt;code&gt;clone&lt;/code&gt;, &lt;code&gt;wake&lt;/code&gt;, &lt;code&gt;wake_by_ref&lt;/code&gt;, and &lt;code&gt;drop&lt;/code&gt; functions.</source>
          <target state="translated">제공된 &lt;code&gt;clone&lt;/code&gt; , &lt;code&gt;wake&lt;/code&gt; , &lt;code&gt;wake_by_ref&lt;/code&gt; 및 &lt;code&gt;drop&lt;/code&gt; 함수 에서 새로운 &lt;code&gt;RawWakerVTable&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="2e1c3db31c2d4985356e904afc90ec7df1984b0d" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">새로운 작성 &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 의와 &lt;code&gt;Default&lt;/code&gt; 가치 &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dee07ff67ad42b50be68a36af39da71db45883d5" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;RefCell&lt;/code&gt; containing &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RefCell&lt;/code&gt; 포함 하는 새로운 RefCell 을 작성 &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47dfe3dbe40a838fcde041e915587b61249f1c8f" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;RwLock&amp;lt;T&amp;gt;&lt;/code&gt;, with the &lt;code&gt;Default&lt;/code&gt; value for T.</source>
          <target state="translated">새로운 생성 &lt;code&gt;RwLock&amp;lt;T&amp;gt;&lt;/code&gt; 의와 &lt;code&gt;Default&lt;/code&gt; T. 가치</target>
        </trans-unit>
        <trans-unit id="2fab82ed27b80c732d845b7856fca2db0a142b3a" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;SipHasher&lt;/code&gt; with the two initial keys set to 0.</source>
          <target state="translated">두 개의 초기 키가 0으로 설정된 새 &lt;code&gt;SipHasher&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
