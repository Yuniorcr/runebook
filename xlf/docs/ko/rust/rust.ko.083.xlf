<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="0acfe1b8ce2d5eddb55cfcd74f0582990d67f75a" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::try_into</source>
          <target state="translated">EncodeUtf16::try_into</target>
        </trans-unit>
        <trans-unit id="d51ca481ff69910765af1e31df8462b2f6a9a7e6" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::type_id</source>
          <target state="translated">EncodeUtf16::type_id</target>
        </trans-unit>
        <trans-unit id="4f82acd3f53a72088194e6e6579934c3b87f413f" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::unzip</source>
          <target state="translated">EncodeUtf16::unzip</target>
        </trans-unit>
        <trans-unit id="645e8c4913bdf28e95c799cf40e99ac9fed68d20" translate="yes" xml:space="preserve">
          <source>EncodeUtf16::zip</source>
          <target state="translated">EncodeUtf16::zip</target>
        </trans-unit>
        <trans-unit id="843f11bc4069ceca4f72ceff4b56a6a90d70d0e1" translate="yes" xml:space="preserve">
          <source>EncodeWide</source>
          <target state="translated">EncodeWide</target>
        </trans-unit>
        <trans-unit id="8a0d134aa9ae0c6cad102005376c6e0bb3da9c6f" translate="yes" xml:space="preserve">
          <source>Encodes this character as UTF-16 into the provided &lt;code&gt;u16&lt;/code&gt; buffer, and then returns the subslice of the buffer that contains the encoded character.</source>
          <target state="translated">이 문자를 제공된 &lt;code&gt;u16&lt;/code&gt; 버퍼에 UTF-16으로 인코딩 한 다음 인코딩 된 문자가 포함 된 버퍼의 하위 슬라이스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="687b074cc61ba52fde0fb773045bd9d6e1557a76" translate="yes" xml:space="preserve">
          <source>Encodes this character as UTF-8 into the provided byte buffer, and then returns the subslice of the buffer that contains the encoded character.</source>
          <target state="translated">이 문자를 제공된 바이트 버퍼에 UTF-8로 인코딩 한 다음 인코딩 된 문자가 포함 된 버퍼의 하위 슬라이스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b9ef2fea9a545689e8874fb3e0e4c5e4cc5f5144" translate="yes" xml:space="preserve">
          <source>Encoding States and Behavior as Types</source>
          <target state="translated">유형으로 인코딩 상태 및 동작</target>
        </trans-unit>
        <trans-unit id="3676359621256ff5957842bfefe8d40cab282839" translate="yes" xml:space="preserve">
          <source>End index bound.</source>
          <target state="translated">끝 인덱스 바운드.</target>
        </trans-unit>
        <trans-unit id="2ad6ad2573400026df17d34c935b9c0d7ff6aae7" translate="yes" xml:space="preserve">
          <source>End index bound. &lt;a href=&quot;ops/trait.rangebounds#tymethod.end_bound&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">끝 인덱스 바운드. &lt;a href=&quot;ops/trait.rangebounds#tymethod.end_bound&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37d494c4674a4c1f2f0b399896434d94593eba3c" translate="yes" xml:space="preserve">
          <source>End index bound. &lt;a href=&quot;trait.rangebounds#tymethod.end_bound&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">끝 인덱스 바운드. &lt;a href=&quot;trait.rangebounds#tymethod.end_bound&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7388b490f32d69bda9888a11e33caaa3065a6b0a" translate="yes" xml:space="preserve">
          <source>Ending the expression with &lt;a href=&quot;../macro.try&quot;&gt;&lt;code&gt;?&lt;/code&gt;&lt;/a&gt; will result in the unwrapped success (&lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;) value, unless the result is &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt;, in which case &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; is returned early from the enclosing function.</source>
          <target state="translated">&lt;a href=&quot;../macro.try&quot;&gt; &lt;code&gt;?&lt;/code&gt; 로&lt;/a&gt; 표현 끝내기 결과가 &lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; 이 아닌 경우 래핑되지 않은 성공 ( &lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; ) 값이 됩니다.이 경우 &lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; 은 엔 클로징 함수에서 일찍 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="863ed0259a9c3a38b685a0b41a4059ad329a34ec" translate="yes" xml:space="preserve">
          <source>Ending the expression with &lt;a href=&quot;../ops/trait.try&quot;&gt;&lt;code&gt;?&lt;/code&gt;&lt;/a&gt; will result in the unwrapped success (&lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;) value, unless the result is &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt;, in which case &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; is returned early from the enclosing function.</source>
          <target state="translated">식을 &lt;a href=&quot;../ops/trait.try&quot;&gt; &lt;code&gt;?&lt;/code&gt; &lt;/a&gt;결과가 &lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; 이 아니면 둘러싸는 함수에서 &lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; 이 일찍 반환 되는 경우 가 아니면 래핑되지 않은 성공 ( &lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; ) 값 이됩니다.</target>
        </trans-unit>
        <trans-unit id="3a65bf9349cbcc7a32b63bf1cb88e01bc4e34ec1" translate="yes" xml:space="preserve">
          <source>Enforce that &lt;code&gt;'a&lt;/code&gt; lives at least as long as &lt;code&gt;'b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'a&lt;/code&gt; 는 적어도 &lt;code&gt;'b&lt;/code&gt; ' 만큼 살도록 강요하십시오 .</target>
        </trans-unit>
        <trans-unit id="35f3afa560fd78bcd88388920c6d32ed6d26609e" translate="yes" xml:space="preserve">
          <source>Enforcing Borrowing Rules at Runtime with &lt;code id=&quot;enforcing-borrowing-rules-at-runtime-with-refcellt&quot;&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;enforcing-borrowing-rules-at-runtime-with-refcellt&quot;&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 하여 런타임에 차용 규칙 시행</target>
        </trans-unit>
        <trans-unit id="41dc62e0abdc36afee260ab853e23ecd6b6a9cfe" translate="yes" xml:space="preserve">
          <source>Ensure that the expressions given can be evaluated as the desired integer type.</source>
          <target state="translated">주어진 표현식이 원하는 정수 유형으로 평가 될 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e741b7684269f691a4fafe48259d2a463e8aba7e" translate="yes" xml:space="preserve">
          <source>Ensure that the expressions given can be evaluated as the desired integer type. See the FFI section of the Reference for more information about using a custom integer type:</source>
          <target state="translated">제공된 표현식이 원하는 정수 유형으로 평가 될 수 있는지 확인하십시오. 사용자 정의 정수 유형 사용에 대한 자세한 정보는 참조의 FFI 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c7547812f495615ad03bb3098df2db60f0cad0b9" translate="yes" xml:space="preserve">
          <source>Ensure that the label is within scope. Labels are not reachable through functions, closures, async blocks or modules. Example:</source>
          <target state="translated">레이블이 범위 내에 있는지 확인하십시오. 레이블은 함수, 클로저, 비동기 블록 또는 모듈을 통해 도달 할 수 없습니다. 예:</target>
        </trans-unit>
        <trans-unit id="0abbd9783f23249e07d36f38058dff5ef9a59102" translate="yes" xml:space="preserve">
          <source>Ensure that the matched array has at least as many elements as the pattern requires. You can match an arbitrary number of remaining elements with &lt;code&gt;..&lt;/code&gt;:</source>
          <target state="translated">일치하는 배열에는 패턴에 필요한만큼의 요소가 있어야합니다. 임의의 수의 나머지 요소를 &lt;code&gt;..&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0c626009c906b5442ff81667bb40d5f078b8036f" translate="yes" xml:space="preserve">
          <source>Ensure that the pattern and the expression being matched on are of consistent types:</source>
          <target state="translated">일치하는 패턴과 표현식이 일관된 유형인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="477d3e7a4b0f87f3da353673163b5e9dc7931085" translate="yes" xml:space="preserve">
          <source>Ensure that the pattern is consistent with the size of the matched array. Additional elements can be matched with &lt;code&gt;..&lt;/code&gt;:</source>
          <target state="translated">패턴이 일치하는 배열의 크기와 일치하는지 확인하십시오. 추가 요소는 &lt;code&gt;..&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e2de0e5c4f109574d1676efa4c7e9d7fe093850f" translate="yes" xml:space="preserve">
          <source>Ensure the ordering of the match arm is correct and remove any superfluous arms.</source>
          <target state="translated">성냥 암의 순서가 올바른지 확인하고 불필요한 암을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="52324da6b76ad31c23818be99af30e92393c26cc" translate="yes" xml:space="preserve">
          <source>Ensures a value is in the entry by inserting the default if empty, and returns a mutable reference to the value in the entry.</source>
          <target state="translated">비어있는 경우 기본값을 삽입하여 값이 항목에 있는지 확인하고 항목의 값에 대한 변경 가능한 참조를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d3d34304502c9d31e892eee4a24eadf8d436752d" translate="yes" xml:space="preserve">
          <source>Ensures a value is in the entry by inserting the default if empty, and returns mutable references to the key and value in the entry.</source>
          <target state="translated">비어있는 경우 기본값을 삽입하여 값이 항목에 있는지 확인하고 항목의 키 및 값에 대한 변경 가능한 참조를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="12dbb1ba9d0bf9bea6b9666200705f4b7a3b92fa" translate="yes" xml:space="preserve">
          <source>Ensures a value is in the entry by inserting the default value if empty, and returns a mutable reference to the value in the entry.</source>
          <target state="translated">비어있는 경우 기본값을 삽입하여 값이 항목에 있는지 확인하고 항목의 값에 대한 변경 가능한 참조를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="91eb62f08fa1e9f1c8fef0576f5f6f51a7075bd3" translate="yes" xml:space="preserve">
          <source>Ensures a value is in the entry by inserting the result of the default function if empty, and returns a mutable reference to the value in the entry.</source>
          <target state="translated">비어있는 경우 기본 함수의 결과를 삽입하여 값이 항목에 있는지 확인하고 항목의 값에 대한 변경 가능한 참조를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8a70404bc566001003acd7999c238a7c63466896" translate="yes" xml:space="preserve">
          <source>Ensures a value is in the entry by inserting the result of the default function if empty, and returns mutable references to the key and value in the entry.</source>
          <target state="translated">비어있는 경우 기본 함수의 결과를 삽입하여 값이 항목에 있는지 확인하고 항목의 키 및 값에 대한 변경 가능한 참조를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e929d91bcc8b385a287367bde618b1e3b37492a1" translate="yes" xml:space="preserve">
          <source>Ensures a value is in the entry by inserting, if empty, the result of the default function, which takes the key as its argument, and returns a mutable reference to the value in the entry.</source>
          <target state="translated">비어있는 경우 키를 인수로 사용하고 항목의 값에 대한 변경 가능한 참조를 반환하는 기본 함수의 결과를 삽입하여 값이 항목에 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6090e80f899e3fc3659b85b1ce29239491058e17" translate="yes" xml:space="preserve">
          <source>Ensures that this &lt;code&gt;String&lt;/code&gt;'s capacity is &lt;code&gt;additional&lt;/code&gt; bytes larger than its length.</source>
          <target state="translated">이 &lt;code&gt;String&lt;/code&gt; 의 용량이 길이보다 큰 &lt;code&gt;additional&lt;/code&gt; 바이트가되도록합니다.</target>
        </trans-unit>
        <trans-unit id="e25e1b6637adad8903002d15d14f6006ff7e734b" translate="yes" xml:space="preserve">
          <source>Ensures that this &lt;code&gt;String&lt;/code&gt;'s capacity is at least &lt;code&gt;additional&lt;/code&gt; bytes larger than its length.</source>
          <target state="translated">이 &lt;code&gt;String&lt;/code&gt; 의 용량이 길이보다 적어도 &lt;code&gt;additional&lt;/code&gt; 바이트가 큰지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c28dd38104875a0c1934d0c3d27ef146c3fb21d3" translate="yes" xml:space="preserve">
          <source>Ensuring Reproducible Builds with the &lt;em id=&quot;ensuring-reproducible-builds-with-the-cargolock-file&quot;&gt;Cargo.lock&lt;/em&gt; File</source>
          <target state="translated">&lt;em id=&quot;ensuring-reproducible-builds-with-the-cargolock-file&quot;&gt;Cargo.lock&lt;/em&gt; 파일을 사용하여 재현 가능한 빌드 보장</target>
        </trans-unit>
        <trans-unit id="4001e8408671d2b64f15377bf0dd7db16d9f3884" translate="yes" xml:space="preserve">
          <source>Ensuring the Content of a Draft Post Is Empty</source>
          <target state="translated">초안 게시물의 내용이 비어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="f056d0d56afcad712d11464b0db2cfa06742ce13" translate="yes" xml:space="preserve">
          <source>Entries</source>
          <target state="translated">Entries</target>
        </trans-unit>
        <trans-unit id="908d591390886eb3ce7cacfe18cd38fd5f4bd251" translate="yes" xml:space="preserve">
          <source>Entries returned by the &lt;a href=&quot;struct.readdir&quot;&gt;&lt;code&gt;ReadDir&lt;/code&gt;&lt;/a&gt; iterator.</source>
          <target state="translated">&lt;a href=&quot;struct.readdir&quot;&gt; &lt;code&gt;ReadDir&lt;/code&gt; &lt;/a&gt; 반복자가 리턴 한 항목 .</target>
        </trans-unit>
        <trans-unit id="19172e9e47fee4109f3d1d86c3076acdc36822f2" translate="yes" xml:space="preserve">
          <source>Entry</source>
          <target state="translated">Entry</target>
        </trans-unit>
        <trans-unit id="20588ae8e5c269292d35f9dfffa8f2eb3fd3c259" translate="yes" xml:space="preserve">
          <source>Enum</source>
          <target state="translated">Enum</target>
        </trans-unit>
        <trans-unit id="b2e5e902b1971489c8bd86ea7e44ac1bef195074" translate="yes" xml:space="preserve">
          <source>Enum Values</source>
          <target state="translated">열거 형 값</target>
        </trans-unit>
        <trans-unit id="6db7dadb683dfbdb59d016f570c90b8c231dea12" translate="yes" xml:space="preserve">
          <source>Enum cast</source>
          <target state="translated">열거 형 캐스트</target>
        </trans-unit>
        <trans-unit id="2602ba347e0d7cd01c4cf212ea93978d0ef2673e" translate="yes" xml:space="preserve">
          <source>Enum constructors can have either named or unnamed fields:</source>
          <target state="translated">열거 형 생성자는 명명 된 필드 나 명명되지 않은 필드를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e688bb3fd3463d105323422cdef963383c5293af" translate="yes" xml:space="preserve">
          <source>Enum discriminants are used to differentiate enum variants stored in memory. This error indicates that the same value was used for two or more variants, making it impossible to distinguish them.</source>
          <target state="translated">열거 형 판별은 메모리에 저장된 열거 형 변형을 구별하는 데 사용됩니다. 이 오류는 둘 이상의 변형에 동일한 값이 사용되어 구분이 불가능 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d0c5b6447a37acb764d0265034e908a91f765fe0" translate="yes" xml:space="preserve">
          <source>Enum discriminants are used to differentiate enum variants stored in memory. This error indicates that the same value was used for two or more variants, making them impossible to tell apart.</source>
          <target state="translated">열거 형 판별 기는 메모리에 저장된 열거 형 변형을 구별하는 데 사용됩니다. 이 오류는 둘 이상의 변형에 동일한 값이 사용되어 구분할 수 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a03886c340458545d7206451b9f5d11f69ebaf7f" translate="yes" xml:space="preserve">
          <source>Enum std::borrow::Cow</source>
          <target state="translated">열거 형 std :: borrow :: Cow</target>
        </trans-unit>
        <trans-unit id="8a19099e4a33a1f6d4ab4aaabaf8429c30834ae2" translate="yes" xml:space="preserve">
          <source>Enum std::cmp::Ordering</source>
          <target state="translated">열거 형 표준 :: cmp :: 주문</target>
        </trans-unit>
        <trans-unit id="a906312d753da86d825160309ab6b94f07803b17" translate="yes" xml:space="preserve">
          <source>Enum std::collections::CollectionAllocErr</source>
          <target state="translated">열거 형 std :: collections :: CollectionAllocErr</target>
        </trans-unit>
        <trans-unit id="a0529dc76cf5663d9b929ac2223b68cd3ce96139" translate="yes" xml:space="preserve">
          <source>Enum std::collections::btree_map::Entry</source>
          <target state="translated">열거 형 std :: collections :: btree_map :: Entry</target>
        </trans-unit>
        <trans-unit id="a26e0c5424cd8a0fa6aa449a501bce68be76d5dc" translate="yes" xml:space="preserve">
          <source>Enum std::collections::hash_map::Entry</source>
          <target state="translated">열거 형 std :: collections :: hash_map :: Entry</target>
        </trans-unit>
        <trans-unit id="088beae48ffc4dd9f717044edf08e9627e52e13e" translate="yes" xml:space="preserve">
          <source>Enum std::collections::hash_map::RawEntryMut</source>
          <target state="translated">열거 형 std :: collections :: hash_map :: RawEntryMut</target>
        </trans-unit>
        <trans-unit id="db8e38f908a035e61ab108b6f3d4fb3010dd40ad" translate="yes" xml:space="preserve">
          <source>Enum std::convert::Infallible</source>
          <target state="translated">열거 형 std :: convert :: infallible</target>
        </trans-unit>
        <trans-unit id="02c4acb668d8a2d290f0e517e401e15f6c6625d9" translate="yes" xml:space="preserve">
          <source>Enum std::env::VarError</source>
          <target state="translated">열거 형 std :: env :: VarError</target>
        </trans-unit>
        <trans-unit id="4e4f017fc55b493d3a565c018ae6b3efa6c48ae3" translate="yes" xml:space="preserve">
          <source>Enum std::ffi::c_void</source>
          <target state="translated">열거 형 std :: ffi :: c_void</target>
        </trans-unit>
        <trans-unit id="b95d431d3ea146292ab6321a7eeefac707195630" translate="yes" xml:space="preserve">
          <source>Enum std::fmt::Alignment</source>
          <target state="translated">열거 형 표준 :: fmt :: 정렬</target>
        </trans-unit>
        <trans-unit id="5679d1936b1856603acc103ed02b3dfb58d1bbf9" translate="yes" xml:space="preserve">
          <source>Enum std::io::ErrorKind</source>
          <target state="translated">열거 형 std :: io :: ErrorKind</target>
        </trans-unit>
        <trans-unit id="c3388c362d304c45249f992ac84c72ac93900d39" translate="yes" xml:space="preserve">
          <source>Enum std::io::SeekFrom</source>
          <target state="translated">열거 형 std :: io :: SeekFrom</target>
        </trans-unit>
        <trans-unit id="e185fbfa56b0b966a7f281f36c4c4a1d2862ccf3" translate="yes" xml:space="preserve">
          <source>Enum std::net::IpAddr</source>
          <target state="translated">열거 형 std :: net :: IpAddr</target>
        </trans-unit>
        <trans-unit id="bc9400331c680d88f1f6aff354d90613ee1a1df4" translate="yes" xml:space="preserve">
          <source>Enum std::net::Ipv6MulticastScope</source>
          <target state="translated">열거 형 std :: net :: Ipv6MulticastScope</target>
        </trans-unit>
        <trans-unit id="c80ad861d24a6873feb87deb337af535836a0d04" translate="yes" xml:space="preserve">
          <source>Enum std::net::Shutdown</source>
          <target state="translated">열거 형 std :: net :: 종료</target>
        </trans-unit>
        <trans-unit id="4814be63b637669ec88f04775d3d1c629f5b94bf" translate="yes" xml:space="preserve">
          <source>Enum std::net::SocketAddr</source>
          <target state="translated">열거 형 std :: net :: SocketAddr</target>
        </trans-unit>
        <trans-unit id="ed2c2572ce6b9a5b901e85fae8ffb949e21687b7" translate="yes" xml:space="preserve">
          <source>Enum std::num::FpCategory</source>
          <target state="translated">열거 형 표준 :: num :: FpCategory</target>
        </trans-unit>
        <trans-unit id="1ca7e70e5029ee3f6f32cd42eeea0aeb6b20f5b5" translate="yes" xml:space="preserve">
          <source>Enum std::num::IntErrorKind</source>
          <target state="translated">열거 형 std :: num :: IntErrorKind</target>
        </trans-unit>
        <trans-unit id="1ebb2a7aaad177ff740cd9acfd59fffdbd87b880" translate="yes" xml:space="preserve">
          <source>Enum std::ops::Bound</source>
          <target state="translated">열거 형 std :: ops :: Bound</target>
        </trans-unit>
        <trans-unit id="c78df29388f847c37007ab5c1da89606a8fe11b2" translate="yes" xml:space="preserve">
          <source>Enum std::ops::GeneratorState</source>
          <target state="translated">열거 형 std :: ops :: GeneratorState</target>
        </trans-unit>
        <trans-unit id="ff6e130a028661924b6fd8346d712d565f01d40a" translate="yes" xml:space="preserve">
          <source>Enum std::option::Option</source>
          <target state="translated">열거 형 표준 :: 옵션 :: 옵션</target>
        </trans-unit>
        <trans-unit id="a0acf447e91cbaa1cade4b716e52fd7ede383487" translate="yes" xml:space="preserve">
          <source>Enum std::path::Component</source>
          <target state="translated">열거 형 std :: path :: Component</target>
        </trans-unit>
        <trans-unit id="cd80b2975834c5aa46ae7664755122a3e5265714" translate="yes" xml:space="preserve">
          <source>Enum std::path::Prefix</source>
          <target state="translated">열거 형 std :: path :: 접두사</target>
        </trans-unit>
        <trans-unit id="366d8a2cd765622a59309973f90f11ee7d3411fa" translate="yes" xml:space="preserve">
          <source>Enum std::result::Result</source>
          <target state="translated">열거 형 std :: result :: Result</target>
        </trans-unit>
        <trans-unit id="0b5173f713050e2c1b188be249f1e093bcf8490b" translate="yes" xml:space="preserve">
          <source>Enum std::str::pattern::SearchStep</source>
          <target state="translated">열거 형 std :: str :: pattern :: SearchStep</target>
        </trans-unit>
        <trans-unit id="22343b7c1385bb798e7abcbac4d7aa2f6e785e63" translate="yes" xml:space="preserve">
          <source>Enum std::sync::TryLockError</source>
          <target state="translated">열거 형 std :: sync :: TryLockError</target>
        </trans-unit>
        <trans-unit id="ab38cfe6801ed5d9c4bb9c9cef4f3f3b0a23ce0e" translate="yes" xml:space="preserve">
          <source>Enum std::sync::atomic::Ordering</source>
          <target state="translated">열거 형 std :: sync :: atomic :: Ordering</target>
        </trans-unit>
        <trans-unit id="3e1f03f1dc49f478b6049aa83ea9e4cc6527a28c" translate="yes" xml:space="preserve">
          <source>Enum std::sync::mpsc::RecvTimeoutError</source>
          <target state="translated">열거 형 std :: sync :: mpsc :: RecvTimeoutError</target>
        </trans-unit>
        <trans-unit id="1c400de244902fed9cf33e98e3ccb497bd93f4a8" translate="yes" xml:space="preserve">
          <source>Enum std::sync::mpsc::TryRecvError</source>
          <target state="translated">열거 형 std :: sync :: mpsc :: TryRecvError</target>
        </trans-unit>
        <trans-unit id="f0642750a6fb95d77857bc849c3fdf37c6c39866" translate="yes" xml:space="preserve">
          <source>Enum std::sync::mpsc::TrySendError</source>
          <target state="translated">열거 형 std :: sync :: mpsc :: TrySendError</target>
        </trans-unit>
        <trans-unit id="e6974bd4a7cf5773272e93f4d39bee1d1076860b" translate="yes" xml:space="preserve">
          <source>Enum std::task::Poll</source>
          <target state="translated">열거 형 std :: task :: Poll</target>
        </trans-unit>
        <trans-unit id="0c2b2b71e631a7254549c4a44d361c1056b2a7be" translate="yes" xml:space="preserve">
          <source>Enum to store the various types of errors that can cause parsing an integer to fail.</source>
          <target state="translated">정수 구문 분석에 실패 할 수있는 다양한 유형의 오류를 저장하는 열거 형입니다.</target>
        </trans-unit>
        <trans-unit id="73e9c51dc0792051a5876f1b6b0c9cccad0e35cc" translate="yes" xml:space="preserve">
          <source>Enum types cannot be denoted &lt;em&gt;structurally&lt;/em&gt; as types, but must be denoted by named reference to an &lt;a href=&quot;../items/enumerations&quot;&gt;&lt;code&gt;enum&lt;/code&gt; item&lt;/a&gt;.</source>
          <target state="translated">열거 형은 &lt;em&gt;구조적&lt;/em&gt; 으로 유형 으로 표시 될 수 없지만 &lt;a href=&quot;../items/enumerations&quot;&gt; &lt;code&gt;enum&lt;/code&gt; item에&lt;/a&gt; 대한 명명 된 참조로 표시되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="695337c1fe7433fa9d62d634a8e65544ced1c0f7" translate="yes" xml:space="preserve">
          <source>Enum variant expressions have the same syntax, behavior, and restrictions as &lt;a href=&quot;struct-expr&quot;&gt;struct expressions&lt;/a&gt;, except they do not support base update with the &lt;code&gt;..&lt;/code&gt; syntax.</source>
          <target state="translated">열거 형 변형 표현식은 &lt;code&gt;..&lt;/code&gt; 구문으로 기본 업데이트를 지원하지 않는다는 점을 제외하고 &lt;a href=&quot;struct-expr&quot;&gt;구조체 표현식&lt;/a&gt; 과 동일한 구문, 동작 및 제한 사항을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="8d0e6de08e8283e929cffacec1b9802dce2655fb" translate="yes" xml:space="preserve">
          <source>Enum variants are qualified by default. For example, given this type:</source>
          <target state="translated">열거 형 변형은 기본적으로 정규화됩니다. 예를 들어,이 유형이 주어지면 :</target>
        </trans-unit>
        <trans-unit id="0b08a3bc7cfb7ded0ccdfbe6ec1887f3052667dd" translate="yes" xml:space="preserve">
          <source>Enum variants syntactically allow a &lt;a href=&quot;../visibility-and-privacy&quot;&gt;&lt;em&gt;Visibility&lt;/em&gt;&lt;/a&gt; annotation, but this is rejected when the enum is validated. This allows items to be parsed with a unified syntax across different contexts where they are used.</source>
          <target state="translated">열거 형 변형은 구문 적으로 &lt;a href=&quot;../visibility-and-privacy&quot;&gt;&lt;em&gt;가시성&lt;/em&gt;&lt;/a&gt; 주석을 허용 하지만 열거 형이 검증되면 거부됩니다. 이를 통해 항목이 사용되는 여러 컨텍스트에서 통합 구문으로 항목을 구문 분석 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="314f2039c6f5c9a047c9df5d08efdf012ed6ebfb" translate="yes" xml:space="preserve">
          <source>Enumerate</source>
          <target state="translated">Enumerate</target>
        </trans-unit>
        <trans-unit id="a39077a0b1b3b430dce489a90c9c5f5aa88edd7c" translate="yes" xml:space="preserve">
          <source>Enumerate::all</source>
          <target state="translated">Enumerate::all</target>
        </trans-unit>
        <trans-unit id="ec2fa6d5d4f1c8be073425621f77eacfb8edabba" translate="yes" xml:space="preserve">
          <source>Enumerate::any</source>
          <target state="translated">Enumerate::any</target>
        </trans-unit>
        <trans-unit id="98c1cda15cee0dede09a0fe601e039d428e6f02c" translate="yes" xml:space="preserve">
          <source>Enumerate::borrow</source>
          <target state="translated">Enumerate::borrow</target>
        </trans-unit>
        <trans-unit id="0e6eef1f51705f2671d8c8991bf9dbbf78449104" translate="yes" xml:space="preserve">
          <source>Enumerate::borrow_mut</source>
          <target state="translated">Enumerate::borrow_mut</target>
        </trans-unit>
        <trans-unit id="a1adeb45afeadd9875603c24716860d9f9519ea4" translate="yes" xml:space="preserve">
          <source>Enumerate::by_ref</source>
          <target state="translated">Enumerate::by_ref</target>
        </trans-unit>
        <trans-unit id="692b595e78a37257b5d4697e883ff3f5814eb9d6" translate="yes" xml:space="preserve">
          <source>Enumerate::chain</source>
          <target state="translated">Enumerate::chain</target>
        </trans-unit>
        <trans-unit id="17f314f0425a829ad53ec6bf5c9454953e39f1d3" translate="yes" xml:space="preserve">
          <source>Enumerate::clone</source>
          <target state="translated">Enumerate::clone</target>
        </trans-unit>
        <trans-unit id="2fcc04be32e4178f86909469cb69d0f8f80dcba7" translate="yes" xml:space="preserve">
          <source>Enumerate::clone_from</source>
          <target state="translated">Enumerate::clone_from</target>
        </trans-unit>
        <trans-unit id="81c6165f89ac6d03db812777d379c49115dbbcc1" translate="yes" xml:space="preserve">
          <source>Enumerate::clone_into</source>
          <target state="translated">Enumerate::clone_into</target>
        </trans-unit>
        <trans-unit id="02aeb42daad1bdb7fabddcd9cf2ef84ebb1cb768" translate="yes" xml:space="preserve">
          <source>Enumerate::cloned</source>
          <target state="translated">Enumerate::cloned</target>
        </trans-unit>
        <trans-unit id="d65dcb0d1e6bbca90b19abd4054388fd1e000bd5" translate="yes" xml:space="preserve">
          <source>Enumerate::cmp</source>
          <target state="translated">Enumerate::cmp</target>
        </trans-unit>
        <trans-unit id="bda6ca845dbac86c405f8244d50d705caad84fdb" translate="yes" xml:space="preserve">
          <source>Enumerate::collect</source>
          <target state="translated">Enumerate::collect</target>
        </trans-unit>
        <trans-unit id="313658d0cc1ccedc16677cdc5bca22601e7adc66" translate="yes" xml:space="preserve">
          <source>Enumerate::copied</source>
          <target state="translated">Enumerate::copied</target>
        </trans-unit>
        <trans-unit id="86f31e1782f22ea94286b9f40e724015407c54e0" translate="yes" xml:space="preserve">
          <source>Enumerate::count</source>
          <target state="translated">Enumerate::count</target>
        </trans-unit>
        <trans-unit id="669d96468f02aee28b2439ad798964cd3badf592" translate="yes" xml:space="preserve">
          <source>Enumerate::cycle</source>
          <target state="translated">Enumerate::cycle</target>
        </trans-unit>
        <trans-unit id="9145631d4495d356e5bca3c6a44364932f594135" translate="yes" xml:space="preserve">
          <source>Enumerate::enumerate</source>
          <target state="translated">Enumerate::enumerate</target>
        </trans-unit>
        <trans-unit id="82428d16070c2d09b6af0b1fbe69003eb8e2b911" translate="yes" xml:space="preserve">
          <source>Enumerate::eq</source>
          <target state="translated">Enumerate::eq</target>
        </trans-unit>
        <trans-unit id="16b5cb21527cf2bdab801962b940228289abde1f" translate="yes" xml:space="preserve">
          <source>Enumerate::filter</source>
          <target state="translated">Enumerate::filter</target>
        </trans-unit>
        <trans-unit id="cc5690f103841c5f008dd6e8bf7ab89e08db6241" translate="yes" xml:space="preserve">
          <source>Enumerate::filter_map</source>
          <target state="translated">Enumerate::filter_map</target>
        </trans-unit>
        <trans-unit id="be5fdebf0195fac290ce9e0959f99d51f037e2e1" translate="yes" xml:space="preserve">
          <source>Enumerate::find</source>
          <target state="translated">Enumerate::find</target>
        </trans-unit>
        <trans-unit id="abb36617595e894860b5b4e0510cd5030549b5f9" translate="yes" xml:space="preserve">
          <source>Enumerate::find_map</source>
          <target state="translated">Enumerate::find_map</target>
        </trans-unit>
        <trans-unit id="8f4e9f9f29bf97620c1ff7991f2fc893c2e55887" translate="yes" xml:space="preserve">
          <source>Enumerate::flat_map</source>
          <target state="translated">Enumerate::flat_map</target>
        </trans-unit>
        <trans-unit id="8c38343a6d068108409cc9cf2c6685f22e117344" translate="yes" xml:space="preserve">
          <source>Enumerate::flatten</source>
          <target state="translated">Enumerate::flatten</target>
        </trans-unit>
        <trans-unit id="9eb12a58ea2f6ccc5d5c35c7bc60a4b4b71ff5c8" translate="yes" xml:space="preserve">
          <source>Enumerate::fmt</source>
          <target state="translated">Enumerate::fmt</target>
        </trans-unit>
        <trans-unit id="b15a1187d17612313e4cb153326cb1612d8cc002" translate="yes" xml:space="preserve">
          <source>Enumerate::fold</source>
          <target state="translated">Enumerate::fold</target>
        </trans-unit>
        <trans-unit id="b6497d8532996b38f792af5af838add6252e5864" translate="yes" xml:space="preserve">
          <source>Enumerate::for_each</source>
          <target state="translated">Enumerate::for_each</target>
        </trans-unit>
        <trans-unit id="4d59e3171e83970eb66ed99b2ae64cadb4c0d95b" translate="yes" xml:space="preserve">
          <source>Enumerate::from</source>
          <target state="translated">Enumerate::from</target>
        </trans-unit>
        <trans-unit id="d66292b90a370ce7ffd76e7edb50c604ad56fe77" translate="yes" xml:space="preserve">
          <source>Enumerate::fuse</source>
          <target state="translated">Enumerate::fuse</target>
        </trans-unit>
        <trans-unit id="32fa15b2d69ef05bda793bb2df462e4c7d45d9ab" translate="yes" xml:space="preserve">
          <source>Enumerate::ge</source>
          <target state="translated">Enumerate::ge</target>
        </trans-unit>
        <trans-unit id="b2d2e35988ad984c51a126b00b57f722a04813ad" translate="yes" xml:space="preserve">
          <source>Enumerate::gt</source>
          <target state="translated">Enumerate::gt</target>
        </trans-unit>
        <trans-unit id="1506a9020cd887529949922978a6d1f040cf385b" translate="yes" xml:space="preserve">
          <source>Enumerate::inspect</source>
          <target state="translated">Enumerate::inspect</target>
        </trans-unit>
        <trans-unit id="6b3f696ed7c75b187f9dfda69649760cfb6afa1e" translate="yes" xml:space="preserve">
          <source>Enumerate::into</source>
          <target state="translated">Enumerate::into</target>
        </trans-unit>
        <trans-unit id="5ab71a164bcf467b3f72c2fe2857fab0833d694f" translate="yes" xml:space="preserve">
          <source>Enumerate::into_iter</source>
          <target state="translated">Enumerate::into_iter</target>
        </trans-unit>
        <trans-unit id="fb7ed6b6be04d5df42bdfaee42eb735c4f94138b" translate="yes" xml:space="preserve">
          <source>Enumerate::is_empty</source>
          <target state="translated">Enumerate::is_empty</target>
        </trans-unit>
        <trans-unit id="83f9c146ad186b6e60f86d68bea1f4263d9becdf" translate="yes" xml:space="preserve">
          <source>Enumerate::is_sorted</source>
          <target state="translated">Enumerate::is_sorted</target>
        </trans-unit>
        <trans-unit id="58bc83e37ae7495572a45579619887c4cc43e066" translate="yes" xml:space="preserve">
          <source>Enumerate::is_sorted_by</source>
          <target state="translated">Enumerate::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="fe599b84c352146d2e7d220a983d76926f5b6f39" translate="yes" xml:space="preserve">
          <source>Enumerate::is_sorted_by_key</source>
          <target state="translated">Enumerate::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="ab7e30011d51a9b8a7113623cdf79af796393fb1" translate="yes" xml:space="preserve">
          <source>Enumerate::last</source>
          <target state="translated">Enumerate::last</target>
        </trans-unit>
        <trans-unit id="2b160bfc36620b5d90420a724b5fa9cd6f9f105a" translate="yes" xml:space="preserve">
          <source>Enumerate::le</source>
          <target state="translated">Enumerate::le</target>
        </trans-unit>
        <trans-unit id="eaacb7a02965012d5dc904224f30e66a797ce243" translate="yes" xml:space="preserve">
          <source>Enumerate::len</source>
          <target state="translated">Enumerate::len</target>
        </trans-unit>
        <trans-unit id="e2c48252c4aed717c0e1f79886abc381eaacced4" translate="yes" xml:space="preserve">
          <source>Enumerate::lt</source>
          <target state="translated">Enumerate::lt</target>
        </trans-unit>
        <trans-unit id="7898fe027e691a40aeacf4672a8086c1adac8042" translate="yes" xml:space="preserve">
          <source>Enumerate::map</source>
          <target state="translated">Enumerate::map</target>
        </trans-unit>
        <trans-unit id="1794b8a54377dd063e4edca314127c4f74cca288" translate="yes" xml:space="preserve">
          <source>Enumerate::max</source>
          <target state="translated">Enumerate::max</target>
        </trans-unit>
        <trans-unit id="c373021f6c4ffc91e50c55c85b62e14249b7d204" translate="yes" xml:space="preserve">
          <source>Enumerate::max_by</source>
          <target state="translated">Enumerate::max_by</target>
        </trans-unit>
        <trans-unit id="8c98e7ca00042643846808aeb397fc59c239e140" translate="yes" xml:space="preserve">
          <source>Enumerate::max_by_key</source>
          <target state="translated">Enumerate::max_by_key</target>
        </trans-unit>
        <trans-unit id="768aa7bb087973f1cbf17ade0ae0716e4962abec" translate="yes" xml:space="preserve">
          <source>Enumerate::min</source>
          <target state="translated">Enumerate::min</target>
        </trans-unit>
        <trans-unit id="0c7933da63edbe9737fc2f6d2c7e03c991125380" translate="yes" xml:space="preserve">
          <source>Enumerate::min_by</source>
          <target state="translated">Enumerate::min_by</target>
        </trans-unit>
        <trans-unit id="b3e165dbee985e6a9e332a295d31ae587119a468" translate="yes" xml:space="preserve">
          <source>Enumerate::min_by_key</source>
          <target state="translated">Enumerate::min_by_key</target>
        </trans-unit>
        <trans-unit id="57a5ad76c50de8c95c2da2a227e2c358e51a4d0c" translate="yes" xml:space="preserve">
          <source>Enumerate::ne</source>
          <target state="translated">Enumerate::ne</target>
        </trans-unit>
        <trans-unit id="a114e8e4e6d416306a3bef2c53065bfe5c04feef" translate="yes" xml:space="preserve">
          <source>Enumerate::next</source>
          <target state="translated">Enumerate::next</target>
        </trans-unit>
        <trans-unit id="7ad0f5d83bfc21ddd5360e1ed821caa342cb1dfc" translate="yes" xml:space="preserve">
          <source>Enumerate::next_back</source>
          <target state="translated">Enumerate::next_back</target>
        </trans-unit>
        <trans-unit id="fe2dbc2cac2412ca4e1818d3a7c9f52b256a005a" translate="yes" xml:space="preserve">
          <source>Enumerate::nth</source>
          <target state="translated">Enumerate::nth</target>
        </trans-unit>
        <trans-unit id="26061f2f230c6c23841449a4e7701a1730a1a7ea" translate="yes" xml:space="preserve">
          <source>Enumerate::nth_back</source>
          <target state="translated">Enumerate::nth_back</target>
        </trans-unit>
        <trans-unit id="eb9c458ec6e639f0323b41b22e8c179ff6fd8ca1" translate="yes" xml:space="preserve">
          <source>Enumerate::partial_cmp</source>
          <target state="translated">Enumerate::partial_cmp</target>
        </trans-unit>
        <trans-unit id="59ee9d4c5b51c608c475f024d909c8fd17efea3e" translate="yes" xml:space="preserve">
          <source>Enumerate::partition</source>
          <target state="translated">Enumerate::partition</target>
        </trans-unit>
        <trans-unit id="d384858d39fbc03016ed1f757e620cf47fc645f5" translate="yes" xml:space="preserve">
          <source>Enumerate::peekable</source>
          <target state="translated">Enumerate::peekable</target>
        </trans-unit>
        <trans-unit id="2310dad35dd194019013235e51235a1c50831605" translate="yes" xml:space="preserve">
          <source>Enumerate::position</source>
          <target state="translated">Enumerate::position</target>
        </trans-unit>
        <trans-unit id="b1bfe0c8edf3d7fef14564223b7e0e5002b4df98" translate="yes" xml:space="preserve">
          <source>Enumerate::product</source>
          <target state="translated">Enumerate::product</target>
        </trans-unit>
        <trans-unit id="1efb277eb865e2493175396927be9fcdfca2f5a0" translate="yes" xml:space="preserve">
          <source>Enumerate::rev</source>
          <target state="translated">Enumerate::rev</target>
        </trans-unit>
        <trans-unit id="2648bcc3f1ca46a294c3ee4f7fc72cd0fb795cd9" translate="yes" xml:space="preserve">
          <source>Enumerate::rfind</source>
          <target state="translated">Enumerate::rfind</target>
        </trans-unit>
        <trans-unit id="6c41128f0e4a6049130261829395e6cae972a6df" translate="yes" xml:space="preserve">
          <source>Enumerate::rfold</source>
          <target state="translated">Enumerate::rfold</target>
        </trans-unit>
        <trans-unit id="705df40f27a676206690fe8d4a8c4e25c4b04014" translate="yes" xml:space="preserve">
          <source>Enumerate::rposition</source>
          <target state="translated">Enumerate::rposition</target>
        </trans-unit>
        <trans-unit id="3d04befb4c720d8c2d55110652bad838941f9ea7" translate="yes" xml:space="preserve">
          <source>Enumerate::scan</source>
          <target state="translated">Enumerate::scan</target>
        </trans-unit>
        <trans-unit id="7f44e2ec681c2469d81f1db98c07ab3d0ba05363" translate="yes" xml:space="preserve">
          <source>Enumerate::size_hint</source>
          <target state="translated">Enumerate::size_hint</target>
        </trans-unit>
        <trans-unit id="c1625ae89e1318dc6b78c1182110445b85ccdeac" translate="yes" xml:space="preserve">
          <source>Enumerate::skip</source>
          <target state="translated">Enumerate::skip</target>
        </trans-unit>
        <trans-unit id="ed203eb609995275384a88c3983406279492b314" translate="yes" xml:space="preserve">
          <source>Enumerate::skip_while</source>
          <target state="translated">Enumerate::skip_while</target>
        </trans-unit>
        <trans-unit id="277b5ecfeb11530756726f70d5d03aa06e9d27ca" translate="yes" xml:space="preserve">
          <source>Enumerate::step_by</source>
          <target state="translated">Enumerate::step_by</target>
        </trans-unit>
        <trans-unit id="17b65a108f6885bec54789f8c74fee98ffca596a" translate="yes" xml:space="preserve">
          <source>Enumerate::sum</source>
          <target state="translated">Enumerate::sum</target>
        </trans-unit>
        <trans-unit id="d9858d8fc38a9546c9f0929b60dd61fd6d697417" translate="yes" xml:space="preserve">
          <source>Enumerate::take</source>
          <target state="translated">Enumerate::take</target>
        </trans-unit>
        <trans-unit id="45666910daa19873ea1770d1ef597f0128e63df8" translate="yes" xml:space="preserve">
          <source>Enumerate::take_while</source>
          <target state="translated">Enumerate::take_while</target>
        </trans-unit>
        <trans-unit id="44bbb4a1547a8a0da4ef48b8b71a72a22f42639e" translate="yes" xml:space="preserve">
          <source>Enumerate::to_owned</source>
          <target state="translated">Enumerate::to_owned</target>
        </trans-unit>
        <trans-unit id="26026f97a59a9a7fa57499815e51f3fee1c4e61f" translate="yes" xml:space="preserve">
          <source>Enumerate::try_fold</source>
          <target state="translated">Enumerate::try_fold</target>
        </trans-unit>
        <trans-unit id="00273da397c166b36465246b9116c5855a5e239b" translate="yes" xml:space="preserve">
          <source>Enumerate::try_for_each</source>
          <target state="translated">Enumerate::try_for_each</target>
        </trans-unit>
        <trans-unit id="0ef7eec6a78d13a7063fe8d4d792a07dd56d2664" translate="yes" xml:space="preserve">
          <source>Enumerate::try_from</source>
          <target state="translated">Enumerate::try_from</target>
        </trans-unit>
        <trans-unit id="bd7e4d10d7efe221271a7b83d078b1cecf74418c" translate="yes" xml:space="preserve">
          <source>Enumerate::try_into</source>
          <target state="translated">Enumerate::try_into</target>
        </trans-unit>
        <trans-unit id="1c958e8cbbe1a542a031df4ad24fd70ec4d84ac6" translate="yes" xml:space="preserve">
          <source>Enumerate::try_rfold</source>
          <target state="translated">Enumerate::try_rfold</target>
        </trans-unit>
        <trans-unit id="b3bd36a160c27f3f0215274cdc41312c123d7ea5" translate="yes" xml:space="preserve">
          <source>Enumerate::type_id</source>
          <target state="translated">Enumerate::type_id</target>
        </trans-unit>
        <trans-unit id="3ce6ccb4e4512cf33ac707de6f17f2ef02ce0d2e" translate="yes" xml:space="preserve">
          <source>Enumerate::unzip</source>
          <target state="translated">Enumerate::unzip</target>
        </trans-unit>
        <trans-unit id="eb5c20683246957e6670b019a590a1c38409fec1" translate="yes" xml:space="preserve">
          <source>Enumerate::zip</source>
          <target state="translated">Enumerate::zip</target>
        </trans-unit>
        <trans-unit id="8ea41b40c0807902b383921b120f19aadff7d0a6" translate="yes" xml:space="preserve">
          <source>Enumerated types</source>
          <target state="translated">열거 형</target>
        </trans-unit>
        <trans-unit id="c5d21d1c37023b200603823a8bd155344f7f8b17" translate="yes" xml:space="preserve">
          <source>Enumeration Variant expressions</source>
          <target state="translated">열거 형 변형 표현</target>
        </trans-unit>
        <trans-unit id="cdce973b3c492568a571f2d4a76f5f2b237c4025" translate="yes" xml:space="preserve">
          <source>Enumeration of possible methods to seek within an I/O object.</source>
          <target state="translated">I / O 오브젝트 내에서 탐색 할 수있는 가능한 메소드의 열거.</target>
        </trans-unit>
        <trans-unit id="624f3ff9c3b551a7cb172ef63ed22f37c151f87b" translate="yes" xml:space="preserve">
          <source>Enumeration variants can be constructed similarly to &lt;a href=&quot;struct-expr&quot;&gt;structs&lt;/a&gt;, using a path to an enum variant instead of to a struct:</source>
          <target state="translated">열거 형 변형은 &lt;a href=&quot;struct-expr&quot;&gt;구조체&lt;/a&gt; 대신 열거 형 변형에 대한 경로를 사용하여 structs 와 유사하게 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="413e9110db4f37157b581483ed8d7133f5021d89" translate="yes" xml:space="preserve">
          <source>Enumerations</source>
          <target state="translated">Enumerations</target>
        </trans-unit>
        <trans-unit id="b9d827ad44579d07ddfea44ecffc410574b7a3e1" translate="yes" xml:space="preserve">
          <source>Enumerations are declared with the keyword &lt;code&gt;enum&lt;/code&gt;.</source>
          <target state="translated">열거 형은 키워드 &lt;code&gt;enum&lt;/code&gt; 으로 선언됩니다 .</target>
        </trans-unit>
        <trans-unit id="f3104dd45718e6d1ac6a03b91ae67193ae8361f0" translate="yes" xml:space="preserve">
          <source>Enums</source>
          <target state="translated">Enums</target>
        </trans-unit>
        <trans-unit id="b1bae4144086638d52ac91d0fa73650e3e324d9a" translate="yes" xml:space="preserve">
          <source>Enums and Pattern Matching</source>
          <target state="translated">열거 형과 패턴 매칭</target>
        </trans-unit>
        <trans-unit id="29d1e793dd5ff89342cc10cdfcc04b3c27829bc3" translate="yes" xml:space="preserve">
          <source>Enums are a feature in many languages, but their capabilities differ in each language. Rust&amp;rsquo;s enums are most similar to &lt;em&gt;algebraic data types&lt;/em&gt; in functional languages, such as F#, OCaml, and Haskell.</source>
          <target state="translated">열거 형은 여러 언어로 제공되는 기능이지만 각 언어마다 기능이 다릅니다. Rust의 열거 형은 F #, OCaml 및 Haskell과 같은 기능적 언어의 &lt;em&gt;대수 데이터 형식&lt;/em&gt; 과 가장 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="c00c45daf90518781271117a88cc6b6bf8f40d67" translate="yes" xml:space="preserve">
          <source>Enums can use multiple generic types as well. The definition of the &lt;code&gt;Result&lt;/code&gt; enum that we used in Chapter 9 is one example:</source>
          <target state="translated">열거 형은 여러 제네릭 형식도 사용할 수 있습니다. 9 장에서 사용한 &lt;code&gt;Result&lt;/code&gt; 열거 의 정의 는 한 예입니다.</target>
        </trans-unit>
        <trans-unit id="77653211d002e5da1e92cfe69e290edeb74a2fda" translate="yes" xml:space="preserve">
          <source>Enums in Rust are similar to those of other compiled languages like C, but have important differences that make them considerably more powerful. What Rust calls enums are more commonly known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Algebraic_data_type&quot;&gt;Algebraic Data Types&lt;/a&gt; if you're coming from a functional programming background. The important detail is that each enum variant can have data to go along with it.</source>
          <target state="translated">Rust의 열거 형은 C와 같은 다른 컴파일 된 언어의 열거 형과 비슷하지만 훨씬 더 강력한 중요한 차이점이 있습니다. 함수형 프로그래밍 배경에서 오는 경우 Rust라고 부르는 열거 형을보다 일반적으로 &lt;a href=&quot;https://en.wikipedia.org/wiki/Algebraic_data_type&quot;&gt;대수 데이터 형식&lt;/a&gt; 이라고합니다. 중요한 세부 사항은 각 열거 형 변형에 따라갈 데이터가있을 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a7932169790b9ae3d486b1fa44f1494c4c7c0425" translate="yes" xml:space="preserve">
          <source>Enums that carry no data other than the discriminant have the same size as C enums on the platform they are compiled for.</source>
          <target state="translated">판별 자 이외의 데이터가없는 열거 형은 컴파일 된 플랫폼의 C 열거 형과 크기가 같습니다.</target>
        </trans-unit>
        <trans-unit id="55965abb28128c0efbf6804cc70a5550204de017" translate="yes" xml:space="preserve">
          <source>Enums with zero variants are known as &lt;em&gt;zero-variant enums&lt;/em&gt;. As they have no valid values, they cannot be instantiated.</source>
          <target state="translated">변형이 0 인 열거 형을 0 &lt;em&gt;변형 열거 형이라고&lt;/em&gt; 합니다. 유효한 값이 없으므로 인스턴스화 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="eeb2022856d69a582a1f16324be2c7eef1792857" translate="yes" xml:space="preserve">
          <source>Environment variable is not present</source>
          <target state="translated">환경 변수가 없습니다</target>
        </trans-unit>
        <trans-unit id="1a6c58863f1bbbfd07cb1beaa53eaa23e2925fac" translate="yes" xml:space="preserve">
          <source>Environment variable is not valid unicode</source>
          <target state="translated">환경 변수가 유효한 유니 코드가 아닙니다</target>
        </trans-unit>
        <trans-unit id="afcfba63ae8c7c116df2f46471e75a3359724931" translate="yes" xml:space="preserve">
          <source>Eq</source>
          <target state="translated">Eq</target>
        </trans-unit>
        <trans-unit id="b62fd0547a8c1527b794ea00dd9836542686a2f8" translate="yes" xml:space="preserve">
          <source>EqEq</source>
          <target state="translated">EqEq</target>
        </trans-unit>
        <trans-unit id="a472ce8d19d10484177dabb05deb4ee299058a0c" translate="yes" xml:space="preserve">
          <source>Equal</source>
          <target state="translated">Equal</target>
        </trans-unit>
        <trans-unit id="405a251de130511276f39e55ec9df55ba69f2df4" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self&lt;/code&gt; if the sign of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;sign&lt;/code&gt; are the same, otherwise equal to &lt;code&gt;-self&lt;/code&gt;. If &lt;code&gt;self&lt;/code&gt; is a &lt;code&gt;NAN&lt;/code&gt;, then a &lt;code&gt;NAN&lt;/code&gt; with the sign of &lt;code&gt;sign&lt;/code&gt; is returned.</source>
          <target state="translated">같음 &lt;code&gt;self&lt;/code&gt; 의 부호 경우 &lt;code&gt;self&lt;/code&gt; 와 &lt;code&gt;sign&lt;/code&gt; 달리, 동일로 동일 &lt;code&gt;-self&lt;/code&gt; . 경우 &lt;code&gt;self&lt;/code&gt; A는 &lt;code&gt;NAN&lt;/code&gt; , 다음 &lt;code&gt;NAN&lt;/code&gt; 의 부호와 &lt;code&gt;sign&lt;/code&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7e6f5b495f8a4e458ef3a061841a33a5e4f18979" translate="yes" xml:space="preserve">
          <source>Equality comparison</source>
          <target state="translated">평등 비교</target>
        </trans-unit>
        <trans-unit id="5f41aea6c09b33c06645c0766aaecfedd792ccc6" translate="yes" xml:space="preserve">
          <source>Equality for two &lt;code&gt;Arc&lt;/code&gt;s.</source>
          <target state="translated">두 개의 &lt;code&gt;Arc&lt;/code&gt; 대한 평등 .</target>
        </trans-unit>
        <trans-unit id="3aa1e173d05b48dca7557f6bab092467f78ca8c9" translate="yes" xml:space="preserve">
          <source>Equality for two &lt;code&gt;Rc&lt;/code&gt;s.</source>
          <target state="translated">두 &lt;code&gt;Rc&lt;/code&gt; 에 대한 평등 .</target>
        </trans-unit>
        <trans-unit id="1f55cac8623bcd3e718c002528aa20c26ca69289" translate="yes" xml:space="preserve">
          <source>Equivalent</source>
          <target state="translated">Equivalent</target>
        </trans-unit>
        <trans-unit id="a578720d2ebce2cf30841367e32e8f0bd0b0b22c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#method.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;, except that the trailing substring is skipped if empty.</source>
          <target state="translated">후행 하위 문자열이 비어있는 경우 건너 뛴다는 점을 제외하면 &lt;a href=&quot;#method.split&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e1fe70a9013b9f7ad52543eb074d60df3e652fa5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../primitive.str#method.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;, except that the trailing substring is skipped if empty.</source>
          <target state="translated">동등 &lt;a href=&quot;../primitive.str#method.split&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt; , 비어있는 경우 후행 문자열이 생략되는 것을 제외.</target>
        </trans-unit>
        <trans-unit id="e107c080060b9ae42d47d1adc35885a18ad2376a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;primitive.str#method.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;, except that the trailing substring is skipped if empty.</source>
          <target state="translated">동등 &lt;a href=&quot;primitive.str#method.split&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt; , 비어있는 경우 후행 문자열이 생략되는 것을 제외.</target>
        </trans-unit>
        <trans-unit id="f4d4c5ad5ed4d546680f19b164a88f1e0df94dc1" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;struct.cstring#method.as_bytes&quot;&gt;&lt;code&gt;CString::as_bytes()&lt;/code&gt;&lt;/a&gt; except that the returned slice includes the trailing nul terminator.</source>
          <target state="translated">동등 &lt;a href=&quot;struct.cstring#method.as_bytes&quot;&gt; &lt;code&gt;CString::as_bytes()&lt;/code&gt; &lt;/a&gt; 반환 슬라이스 후단 NUL 터미네이터를 포함하는 것 이외에는.</target>
        </trans-unit>
        <trans-unit id="8e09a4314eb2aac92e3bbcd11268ea5eabb19c15" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;struct.cstring#method.into_bytes&quot;&gt;&lt;code&gt;CString::into_bytes()&lt;/code&gt;&lt;/a&gt; except that the returned vector includes the trailing nul terminator.</source>
          <target state="translated">동등 &lt;a href=&quot;struct.cstring#method.into_bytes&quot;&gt; &lt;code&gt;CString::into_bytes()&lt;/code&gt; &lt;/a&gt; 반환 벡터 후단 NUL 터미네이터를 포함하는 것 이외에는.</target>
        </trans-unit>
        <trans-unit id="520ec4df60576047dc6953cb6e9a90f79e8c34af" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&amp;amp;mut s[..]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut s[..]&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="37288772f40eeba4a16d383aae7f00fba4942540" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&amp;amp;s[..]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;s[..]&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="7b61ccc658e4cdf275fde6588076abc022d0a9ce" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&amp;amp;self[0 .. len]&lt;/code&gt; or &lt;code&gt;&amp;amp;mut self[0 .. len]&lt;/code&gt;.</source>
          <target state="translated">동등 &lt;code&gt;&amp;amp;self[0 .. len]&lt;/code&gt; 또는 &lt;code&gt;&amp;amp;mut self[0 .. len]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="beccb6f9ce4ea8fe1f797ec93ce8aae8564f97f5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;to_ascii_lowercase(a) == to_ascii_lowercase(b)&lt;/code&gt;.</source>
          <target state="translated">상당 &lt;code&gt;to_ascii_lowercase(a) == to_ascii_lowercase(b)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30fd2550afd1dfab7729d0cd3a295d45e23e1fd6" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;char&lt;/code&gt; type.</source>
          <target state="translated">C의 &lt;code&gt;char&lt;/code&gt; 유형과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fe5d96bd900ba762d3ae3004062988f64d02efc2" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;double&lt;/code&gt; type.</source>
          <target state="translated">C의 &lt;code&gt;double&lt;/code&gt; 유형과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cc4e7a1a539169a38158ff00da857107cb2c1ff4" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;float&lt;/code&gt; type.</source>
          <target state="translated">C의 &lt;code&gt;float&lt;/code&gt; 유형과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1d0ed3b86c432a566c7e37d909d740b7df7c763d" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;signed char&lt;/code&gt; type.</source>
          <target state="translated">C의 &lt;code&gt;signed char&lt;/code&gt; 유형과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cd9e7c22a743e1e144a7cb0f17f18f94081052b8" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;signed int&lt;/code&gt; (&lt;code&gt;int&lt;/code&gt;) type.</source>
          <target state="translated">C의 &lt;code&gt;signed int&lt;/code&gt; ( &lt;code&gt;int&lt;/code&gt; ) 유형과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6fa274bc22fa90964570ee36afaf10f043a4dac2" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;signed long long&lt;/code&gt; (&lt;code&gt;long long&lt;/code&gt;) type.</source>
          <target state="translated">C의 &lt;code&gt;signed long long&lt;/code&gt; ( &lt;code&gt;long long&lt;/code&gt; ) 유형과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b838c3f9398b5073227215c8465e1c0743f70a09" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;signed long&lt;/code&gt; (&lt;code&gt;long&lt;/code&gt;) type.</source>
          <target state="translated">C의 &lt;code&gt;signed long&lt;/code&gt; ( &lt;code&gt;long&lt;/code&gt; ) 유형과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9137a4ce3f48d2c2c3c1de4a81ba6a0d6131e984" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;signed short&lt;/code&gt; (&lt;code&gt;short&lt;/code&gt;) type.</source>
          <target state="translated">C의 &lt;code&gt;signed short&lt;/code&gt; ( &lt;code&gt;short&lt;/code&gt; ) 유형과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2001a64bb4f156b5b695b049dbe89ebb2aafe34d" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;unsigned char&lt;/code&gt; type.</source>
          <target state="translated">C의 &lt;code&gt;unsigned char&lt;/code&gt; 유형과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fb7b04edd9da02fb05c64fcf998b723d3c5a4d85" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;unsigned int&lt;/code&gt; type.</source>
          <target state="translated">C의 &lt;code&gt;unsigned int&lt;/code&gt; 유형과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a92b05b4be5ba5d26db92658a367d95893a07fab" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;unsigned long long&lt;/code&gt; type.</source>
          <target state="translated">C의 &lt;code&gt;unsigned long long&lt;/code&gt; 유형과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2b4aa8d1d8fcdc89be8cd9a4f4a1b3f8af4286a3" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;unsigned long&lt;/code&gt; type.</source>
          <target state="translated">C의 &lt;code&gt;unsigned long&lt;/code&gt; 유형과 같습니다.</target>
        </trans-unit>
        <trans-unit id="21994295625e2adb043d30b75542a094d322568b" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;unsigned short&lt;/code&gt; type.</source>
          <target state="translated">C의 &lt;code&gt;unsigned short&lt;/code&gt; 유형과 같습니다.</target>
        </trans-unit>
        <trans-unit id="11fb84dd17447c802002de727eafffd74f87212e" translate="yes" xml:space="preserve">
          <source>Equivalent to C's &lt;code&gt;void&lt;/code&gt; type when used as a &lt;a href=&quot;../primitive.pointer&quot;&gt;pointer&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.pointer&quot;&gt;포인터&lt;/a&gt; 로 사용될 때 C의 &lt;code&gt;void&lt;/code&gt; 유형과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6f0f20b21cf3a4db5aabd8499cca599fe84f0489" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;a href=&quot;#method.as_bytes&quot;&gt;&lt;code&gt;as_bytes&lt;/code&gt;&lt;/a&gt; function except that the returned slice includes the trailing nul terminator.</source>
          <target state="translated">리턴 된 슬라이스에 후행 &lt;a href=&quot;#method.as_bytes&quot;&gt; &lt;code&gt;as_bytes&lt;/code&gt; &lt;/a&gt; 종결자가 포함된다는 점을 제외하고 as_bytes 함수 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="2d259b1deaffdda43650de85037b35507164253c" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;a href=&quot;#method.into_bytes&quot;&gt;&lt;code&gt;into_bytes&lt;/code&gt;&lt;/a&gt; function except that the returned vector includes the trailing nul terminator.</source>
          <target state="translated">반환 된 벡터에 후행 &lt;a href=&quot;#method.into_bytes&quot;&gt; &lt;code&gt;into_bytes&lt;/code&gt; &lt;/a&gt; 종결자가 포함된다는 점을 제외하고 into_bytes 함수 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="11359624403d05f21d9be479e7f5d5078192e88c" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;a href=&quot;macro.print&quot;&gt;&lt;code&gt;print!&lt;/code&gt;&lt;/a&gt; macro, except that output goes to &lt;a href=&quot;io/fn.stderr&quot;&gt;&lt;code&gt;io::stderr&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;io/fn.stdout&quot;&gt;&lt;code&gt;io::stdout&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;macro.print&quot;&gt;&lt;code&gt;print!&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">받는 동등한 &lt;a href=&quot;macro.print&quot;&gt; &lt;code&gt;print!&lt;/code&gt; &lt;/a&gt;매크로를 제외하고 출력은 &lt;a href=&quot;io/fn.stdout&quot;&gt; &lt;code&gt;io::stdout&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;io/fn.stderr&quot;&gt; &lt;code&gt;io::stderr&lt;/code&gt; &lt;/a&gt; 로 이동합니다 . &lt;a href=&quot;macro.print&quot;&gt; &lt;code&gt;print!&lt;/code&gt; &lt;/a&gt; 보기 ! 예를 들어 사용법.</target>
        </trans-unit>
        <trans-unit id="cf02d51ee9f0075a3e0407f60766bc21ffa97f33" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;a href=&quot;macro.print&quot;&gt;&lt;code&gt;print!&lt;/code&gt;&lt;/a&gt; macro, except that output goes to &lt;a href=&quot;io/struct.stderr&quot;&gt;&lt;code&gt;io::stderr&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;io::stdout&lt;/code&gt;. See &lt;a href=&quot;macro.print&quot;&gt;&lt;code&gt;print!&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">&lt;a href=&quot;macro.print&quot;&gt; &lt;code&gt;print!&lt;/code&gt; &lt;/a&gt; 와 동일합니다 ! 매크로는 출력이 &lt;code&gt;io::stdout&lt;/code&gt; 대신 &lt;a href=&quot;io/struct.stderr&quot;&gt; &lt;code&gt;io::stderr&lt;/code&gt; &lt;/a&gt; 로 이동한다는 점을 제외하고 . &lt;a href=&quot;macro.print&quot;&gt; &lt;code&gt;print!&lt;/code&gt; &lt;/a&gt; 참조 ! 예를 들어 사용법.</target>
        </trans-unit>
        <trans-unit id="0f135709bd74c6b9ed255dbf4268c7ebf5c86c50" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;a href=&quot;macro.println&quot;&gt;&lt;code&gt;println!&lt;/code&gt;&lt;/a&gt; macro except that a newline is not printed at the end of the message.</source>
          <target state="translated">받는 등가 &lt;a href=&quot;macro.println&quot;&gt; &lt;code&gt;println!&lt;/code&gt; &lt;/a&gt;메시지 끝에 줄 바꿈이 인쇄되지 않는 것을 제외하고 매크로.</target>
        </trans-unit>
        <trans-unit id="388ca29321046ed16eb06ab0fd4ca5e00ee9e149" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;a href=&quot;macro.println&quot;&gt;&lt;code&gt;println!&lt;/code&gt;&lt;/a&gt; macro, except that output goes to &lt;a href=&quot;io/fn.stderr&quot;&gt;&lt;code&gt;io::stderr&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;io/fn.stdout&quot;&gt;&lt;code&gt;io::stdout&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;macro.println&quot;&gt;&lt;code&gt;println!&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">&lt;a href=&quot;macro.println&quot;&gt; &lt;code&gt;println!&lt;/code&gt; &lt;/a&gt; 동일합니다 ! 매크로를 제외하고 출력은 &lt;a href=&quot;io/fn.stdout&quot;&gt; &lt;code&gt;io::stdout&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;io/fn.stderr&quot;&gt; &lt;code&gt;io::stderr&lt;/code&gt; &lt;/a&gt; 로 이동합니다 . &lt;a href=&quot;macro.println&quot;&gt; &lt;code&gt;println!&lt;/code&gt; &lt;/a&gt; 참조하십시오 ! 예를 들어 사용법.</target>
        </trans-unit>
        <trans-unit id="9b612036702d33a6a546ca5118b9e2422c85faf1" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;a href=&quot;macro.println&quot;&gt;&lt;code&gt;println!&lt;/code&gt;&lt;/a&gt; macro, except that output goes to &lt;a href=&quot;io/struct.stderr&quot;&gt;&lt;code&gt;io::stderr&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;io::stdout&lt;/code&gt;. See &lt;a href=&quot;macro.println&quot;&gt;&lt;code&gt;println!&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">받는 등가 &lt;a href=&quot;macro.println&quot;&gt; &lt;code&gt;println!&lt;/code&gt; &lt;/a&gt;매크로는 출력이 &lt;code&gt;io::stdout&lt;/code&gt; 대신 &lt;a href=&quot;io/struct.stderr&quot;&gt; &lt;code&gt;io::stderr&lt;/code&gt; &lt;/a&gt; 로 이동한다는 점을 제외하고 . 보기 &lt;a href=&quot;macro.println&quot;&gt; &lt;code&gt;println!&lt;/code&gt; &lt;/a&gt;예를 들어 사용법.</target>
        </trans-unit>
        <trans-unit id="0bdb51b90a639b122b5a4aaf1dc88977e5e38965" translate="yes" xml:space="preserve">
          <source>Equivalent to the appropriate &lt;code&gt;llvm.memcpy.p0i8.0i8.*&lt;/code&gt; intrinsic, with a size of &lt;code&gt;count&lt;/code&gt; * &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; and an alignment of &lt;code&gt;min_align_of::&amp;lt;T&amp;gt;()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; * &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 의 크기와 min_align_of ::: T 의 정렬 을 갖는 적절한 &lt;code&gt;llvm.memcpy.p0i8.0i8.*&lt;/code&gt; 내장 함수와 &lt;code&gt;min_align_of::&amp;lt;T&amp;gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10bf5f3deeda5edf7a0faa5c4444a053d8235289" translate="yes" xml:space="preserve">
          <source>Equivalent to the appropriate &lt;code&gt;llvm.memmove.p0i8.0i8.*&lt;/code&gt; intrinsic, with a size of &lt;code&gt;count&lt;/code&gt; * &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; and an alignment of &lt;code&gt;min_align_of::&amp;lt;T&amp;gt;()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; * &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 의 크기와 min_align_of ::: &amp;lt;T&amp;gt; () 의 정렬을 가진 적절한 &lt;code&gt;llvm.memmove.p0i8.0i8.*&lt;/code&gt; 내장 함수와 &lt;code&gt;min_align_of::&amp;lt;T&amp;gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f67c1ea40a38529f7dc73cfd47d92c27ec74dd74" translate="yes" xml:space="preserve">
          <source>Equivalent to the appropriate &lt;code&gt;llvm.memset.p0i8.*&lt;/code&gt; intrinsic, with a size of &lt;code&gt;count&lt;/code&gt; * &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; and an alignment of &lt;code&gt;min_align_of::&amp;lt;T&amp;gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; * &lt;code&gt;size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 의 크기와 min_align_of :: &amp;lt;T&amp;gt; () 의 정렬 을 갖는 적절한 &lt;code&gt;llvm.memset.p0i8.*&lt;/code&gt; 내장 함수와 &lt;code&gt;min_align_of::&amp;lt;T&amp;gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5abb5ea96382d02e76f7d80f2fa2df82acf8c9d4" translate="yes" xml:space="preserve">
          <source>Equivalently,</source>
          <target state="translated">Equivalently,</target>
        </trans-unit>
        <trans-unit id="c3aec62f01b02fefce53e99d7ad2f8787712ba62" translate="yes" xml:space="preserve">
          <source>Erlang: message passing, thread failure, &lt;strike&gt;linked thread failure&lt;/strike&gt;, &lt;strike&gt;lightweight concurrency&lt;/strike&gt;</source>
          <target state="translated">Erlang : 메시지 전달, 스레드 실패, &lt;strike&gt;링크 된 스레드 실패&lt;/strike&gt; , &lt;strike&gt;경량 동시성&lt;/strike&gt;</target>
        </trans-unit>
        <trans-unit id="e11685bac8354615d61ebe036088d0c4c929e1b4" translate="yes" xml:space="preserve">
          <source>Erroneous code code:</source>
          <target state="translated">잘못된 코드 코드 :</target>
        </trans-unit>
        <trans-unit id="ac45dc1541b3387a5c75b3af2001ef9eb9e56876" translate="yes" xml:space="preserve">
          <source>Erroneous code example:</source>
          <target state="translated">잘못된 코드 예 :</target>
        </trans-unit>
        <trans-unit id="bcfe0e860ee04a6ab672554e1a2d468af0dcefbc" translate="yes" xml:space="preserve">
          <source>Erroneous code examples:</source>
          <target state="translated">잘못된 코드 예 :</target>
        </trans-unit>
        <trans-unit id="d80b2ebf07c00e4fe35f5780bb8f2096a563a4e2" translate="yes" xml:space="preserve">
          <source>Erroneous example:</source>
          <target state="translated">잘못된 예 :</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="5fff1f56919b006049c274c6c76fbbe56470ee4c" translate="yes" xml:space="preserve">
          <source>Error Handling</source>
          <target state="translated">오류 처리</target>
        </trans-unit>
        <trans-unit id="7ae926478f4235575cf8de025ad5fae5ef6bff67" translate="yes" xml:space="preserve">
          <source>Error due to the allocator (see the &lt;code&gt;AllocErr&lt;/code&gt; type's docs).</source>
          <target state="translated">할당 &lt;code&gt;AllocErr&lt;/code&gt; 인한 오류 ( AllocErr 유형의 문서 참조)</target>
        </trans-unit>
        <trans-unit id="9ea0e53093de195d4dbdb70df7b3f7a8398b73b5" translate="yes" xml:space="preserve">
          <source>Error due to the computed capacity exceeding the collection's maximum (usually &lt;code&gt;isize::MAX&lt;/code&gt; bytes).</source>
          <target state="translated">계산 된 용량이 컬렉션의 최대 값 (일반적으로 &lt;code&gt;isize::MAX&lt;/code&gt; 바이트)을 초과하여 오류가 발생했습니다 .</target>
        </trans-unit>
        <trans-unit id="676ac89a3f3553d0b80db8057d9ed4e3fd953d78" translate="yes" xml:space="preserve">
          <source>Error example 1</source>
          <target state="translated">오류 예 1</target>
        </trans-unit>
        <trans-unit id="696064c5e9ba15e9a251569a1ede5708d4a9adee" translate="yes" xml:space="preserve">
          <source>Error example 2</source>
          <target state="translated">오류 예 2</target>
        </trans-unit>
        <trans-unit id="6b8c3c7802740fdba2ff293f271859e1c9eef5fb" translate="yes" xml:space="preserve">
          <source>Error handling with the &lt;code&gt;Result&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;Result&lt;/code&gt; 유형 처리 오류 .</target>
        </trans-unit>
        <trans-unit id="8b0c0f6da06324384f8cea5aba8ad0d43949ed58" translate="yes" xml:space="preserve">
          <source>Error propagation</source>
          <target state="translated">오류 전파</target>
        </trans-unit>
        <trans-unit id="c9c1811042df6d8655bfc0ef3accbc3dac411ce0" translate="yes" xml:space="preserve">
          <source>Error::borrow</source>
          <target state="translated">Error::borrow</target>
        </trans-unit>
        <trans-unit id="27fbc8c96a4a3a6e5df37788f9c0bec5338c6410" translate="yes" xml:space="preserve">
          <source>Error::borrow_mut</source>
          <target state="translated">Error::borrow_mut</target>
        </trans-unit>
        <trans-unit id="a5a34ef7d8732a5c6f2299420adf7993344da125" translate="yes" xml:space="preserve">
          <source>Error::cause</source>
          <target state="translated">Error::cause</target>
        </trans-unit>
        <trans-unit id="8f4b324ad306db17f767ba7f7c03b774afe7bb8a" translate="yes" xml:space="preserve">
          <source>Error::clamp</source>
          <target state="translated">Error::clamp</target>
        </trans-unit>
        <trans-unit id="0a013c38bbd91642acb14e6d94113ac42c823db8" translate="yes" xml:space="preserve">
          <source>Error::clone</source>
          <target state="translated">Error::clone</target>
        </trans-unit>
        <trans-unit id="fef2a1f7c02d295b34d2ec373e4d337d258a3549" translate="yes" xml:space="preserve">
          <source>Error::clone_from</source>
          <target state="translated">Error::clone_from</target>
        </trans-unit>
        <trans-unit id="acdfa150dc8c2f5ea8f0166df083084f8f782d0f" translate="yes" xml:space="preserve">
          <source>Error::clone_into</source>
          <target state="translated">Error::clone_into</target>
        </trans-unit>
        <trans-unit id="877de87d3c803dd682640de6cdf78c52fb7bee1f" translate="yes" xml:space="preserve">
          <source>Error::cmp</source>
          <target state="translated">Error::cmp</target>
        </trans-unit>
        <trans-unit id="23f30d96191c3a7643d14c94dfb469f704b05aa4" translate="yes" xml:space="preserve">
          <source>Error::default</source>
          <target state="translated">Error::default</target>
        </trans-unit>
        <trans-unit id="e388e1edbd7a27e927336ea0fa220440eb353e4f" translate="yes" xml:space="preserve">
          <source>Error::description</source>
          <target state="translated">Error::description</target>
        </trans-unit>
        <trans-unit id="8a37255a468996312549889b0ab0192986460354" translate="yes" xml:space="preserve">
          <source>Error::downcast</source>
          <target state="translated">Error::downcast</target>
        </trans-unit>
        <trans-unit id="1f7ff6c952f193850e4c6ecbf439abf598495018" translate="yes" xml:space="preserve">
          <source>Error::downcast_mut</source>
          <target state="translated">Error::downcast_mut</target>
        </trans-unit>
        <trans-unit id="55f5cb582143da889a9624743684f78ba98c4bfd" translate="yes" xml:space="preserve">
          <source>Error::downcast_ref</source>
          <target state="translated">Error::downcast_ref</target>
        </trans-unit>
        <trans-unit id="5d76f5304dae034d9a0f8645cd674b06f7eae87d" translate="yes" xml:space="preserve">
          <source>Error::eq</source>
          <target state="translated">Error::eq</target>
        </trans-unit>
        <trans-unit id="cd33ae164422424c5c03032c1cbd8abee3a83fd1" translate="yes" xml:space="preserve">
          <source>Error::fmt</source>
          <target state="translated">Error::fmt</target>
        </trans-unit>
        <trans-unit id="431ea39cab473ac0ba84b0267ce6254bfa289644" translate="yes" xml:space="preserve">
          <source>Error::from</source>
          <target state="translated">Error::from</target>
        </trans-unit>
        <trans-unit id="be7af209adc075ec98f6b0c5dfe7d7a698c1b58a" translate="yes" xml:space="preserve">
          <source>Error::from_raw_os_error</source>
          <target state="translated">Error::from_raw_os_error</target>
        </trans-unit>
        <trans-unit id="0eec7117b080320155e1dd83ce265e8f853fcd63" translate="yes" xml:space="preserve">
          <source>Error::ge</source>
          <target state="translated">Error::ge</target>
        </trans-unit>
        <trans-unit id="fd6fc2c9814ef2ff7654680b15c3ef541e762337" translate="yes" xml:space="preserve">
          <source>Error::get_mut</source>
          <target state="translated">Error::get_mut</target>
        </trans-unit>
        <trans-unit id="eea25728b2f25e24aac53110afa1436c0767b978" translate="yes" xml:space="preserve">
          <source>Error::get_ref</source>
          <target state="translated">Error::get_ref</target>
        </trans-unit>
        <trans-unit id="2640372730a8aa1ecc96d8ccd78f72b11b5db66c" translate="yes" xml:space="preserve">
          <source>Error::gt</source>
          <target state="translated">Error::gt</target>
        </trans-unit>
        <trans-unit id="3adcad88c39514bb7c03dde916fb22d3fce7a971" translate="yes" xml:space="preserve">
          <source>Error::hash</source>
          <target state="translated">Error::hash</target>
        </trans-unit>
        <trans-unit id="b5864113f515a985f9343d1bdcf4dbaa41b305cb" translate="yes" xml:space="preserve">
          <source>Error::hash_slice</source>
          <target state="translated">Error::hash_slice</target>
        </trans-unit>
        <trans-unit id="cabf07b2a5074c19ed53c54cda3b1327ea3376e5" translate="yes" xml:space="preserve">
          <source>Error::into</source>
          <target state="translated">Error::into</target>
        </trans-unit>
        <trans-unit id="d5d79bfaabb4cf080d891e86c73af2aab63b9b8c" translate="yes" xml:space="preserve">
          <source>Error::into_inner</source>
          <target state="translated">Error::into_inner</target>
        </trans-unit>
        <trans-unit id="12f4d6008c2623bb1cb7436ba6e4341209351a00" translate="yes" xml:space="preserve">
          <source>Error::is</source>
          <target state="translated">Error::is</target>
        </trans-unit>
        <trans-unit id="811b10fd99e037312e0ff41bb7e3725c408f892e" translate="yes" xml:space="preserve">
          <source>Error::iter_chain</source>
          <target state="translated">Error::iter_chain</target>
        </trans-unit>
        <trans-unit id="4fdf56d6c4a5e74f21b83b51366e54ef244d514c" translate="yes" xml:space="preserve">
          <source>Error::iter_sources</source>
          <target state="translated">Error::iter_sources</target>
        </trans-unit>
        <trans-unit id="76cce834e921ce55885d2fa9ffb911f60fc84ee7" translate="yes" xml:space="preserve">
          <source>Error::kind</source>
          <target state="translated">Error::kind</target>
        </trans-unit>
        <trans-unit id="2a636b40126c0e0da44fa183f3203731ddf5cf2b" translate="yes" xml:space="preserve">
          <source>Error::last_os_error</source>
          <target state="translated">Error::last_os_error</target>
        </trans-unit>
        <trans-unit id="8f76cee83f8b1da204711a8705c4c35e2d11dc80" translate="yes" xml:space="preserve">
          <source>Error::le</source>
          <target state="translated">Error::le</target>
        </trans-unit>
        <trans-unit id="d242c57e372c095a386fb1b9ea29644d56c81ab4" translate="yes" xml:space="preserve">
          <source>Error::lt</source>
          <target state="translated">Error::lt</target>
        </trans-unit>
        <trans-unit id="bfbc0742b9e39acc5b9fc63fb561bc3aaa9db104" translate="yes" xml:space="preserve">
          <source>Error::max</source>
          <target state="translated">Error::max</target>
        </trans-unit>
        <trans-unit id="dbe16a1942001b3fe792a01894dda0e6db02ef48" translate="yes" xml:space="preserve">
          <source>Error::min</source>
          <target state="translated">Error::min</target>
        </trans-unit>
        <trans-unit id="7e65d7b0eeb79d984bc7dba8652c6ebf2a1ea272" translate="yes" xml:space="preserve">
          <source>Error::ne</source>
          <target state="translated">Error::ne</target>
        </trans-unit>
        <trans-unit id="5d7bcfa1d2fe7676d295dc41d99b34b20d023c84" translate="yes" xml:space="preserve">
          <source>Error::new</source>
          <target state="translated">Error::new</target>
        </trans-unit>
        <trans-unit id="28d90b994fd0c91dcc7990cc0ecaec0d5e760af9" translate="yes" xml:space="preserve">
          <source>Error::partial_cmp</source>
          <target state="translated">Error::partial_cmp</target>
        </trans-unit>
        <trans-unit id="5c1a38dce31a8b50097cad5419054de9a918a9bd" translate="yes" xml:space="preserve">
          <source>Error::raw_os_error</source>
          <target state="translated">Error::raw_os_error</target>
        </trans-unit>
        <trans-unit id="ab34d9f79591c65515a63d29c8697da3918b1b67" translate="yes" xml:space="preserve">
          <source>Error::source</source>
          <target state="translated">Error::source</target>
        </trans-unit>
        <trans-unit id="42687807937d8e1436ff3eae8c6de0b446c1cf5e" translate="yes" xml:space="preserve">
          <source>Error::to_owned</source>
          <target state="translated">Error::to_owned</target>
        </trans-unit>
        <trans-unit id="b0faf8673d1aa039809db4a0ca31cfe6bfb24551" translate="yes" xml:space="preserve">
          <source>Error::to_string</source>
          <target state="translated">Error::to_string</target>
        </trans-unit>
        <trans-unit id="d17f0a86764f1ea745c846fec67b5c7567adfed3" translate="yes" xml:space="preserve">
          <source>Error::try_from</source>
          <target state="translated">Error::try_from</target>
        </trans-unit>
        <trans-unit id="87459884d6f31bbc0a98e64c9f22e18aa2330477" translate="yes" xml:space="preserve">
          <source>Error::try_into</source>
          <target state="translated">Error::try_into</target>
        </trans-unit>
        <trans-unit id="a2bc10df678ac3319a12672d224c47ec3aefb167" translate="yes" xml:space="preserve">
          <source>Error::type_id</source>
          <target state="translated">Error::type_id</target>
        </trans-unit>
        <trans-unit id="06ab716d6b6df21282717af03b8eb6ef305c6249" translate="yes" xml:space="preserve">
          <source>ErrorIter</source>
          <target state="translated">ErrorIter</target>
        </trans-unit>
        <trans-unit id="91043185bf6aab5264c0e408311b84db1a0fb5e8" translate="yes" xml:space="preserve">
          <source>ErrorIter::all</source>
          <target state="translated">ErrorIter::all</target>
        </trans-unit>
        <trans-unit id="8df457e3cf3fc1687ada53e82f98763478469b23" translate="yes" xml:space="preserve">
          <source>ErrorIter::any</source>
          <target state="translated">ErrorIter::any</target>
        </trans-unit>
        <trans-unit id="c9e802e1b5bed892fc44202c87de37586478a361" translate="yes" xml:space="preserve">
          <source>ErrorIter::borrow</source>
          <target state="translated">ErrorIter::borrow</target>
        </trans-unit>
        <trans-unit id="1775b681cabd4bfb41850c9225629727b3db02b7" translate="yes" xml:space="preserve">
          <source>ErrorIter::borrow_mut</source>
          <target state="translated">ErrorIter::borrow_mut</target>
        </trans-unit>
        <trans-unit id="ea805504e04a1f41dd619245f64ade6327d91d2b" translate="yes" xml:space="preserve">
          <source>ErrorIter::by_ref</source>
          <target state="translated">ErrorIter::by_ref</target>
        </trans-unit>
        <trans-unit id="a41c456c5b8c6027bb242f48b4746af1d84aa688" translate="yes" xml:space="preserve">
          <source>ErrorIter::chain</source>
          <target state="translated">ErrorIter::chain</target>
        </trans-unit>
        <trans-unit id="76d6364331dd254f7cfc57a24ef9a8f11207e038" translate="yes" xml:space="preserve">
          <source>ErrorIter::clone</source>
          <target state="translated">ErrorIter::clone</target>
        </trans-unit>
        <trans-unit id="08ca480dbce99991f6aa015c6ab8297547e99edb" translate="yes" xml:space="preserve">
          <source>ErrorIter::clone_from</source>
          <target state="translated">ErrorIter::clone_from</target>
        </trans-unit>
        <trans-unit id="c75578c8fe04456c827488ebc5b484c4f440e702" translate="yes" xml:space="preserve">
          <source>ErrorIter::clone_into</source>
          <target state="translated">ErrorIter::clone_into</target>
        </trans-unit>
        <trans-unit id="f6ca6311feefe93aa3ff662cc57af6bb26c1df01" translate="yes" xml:space="preserve">
          <source>ErrorIter::cloned</source>
          <target state="translated">ErrorIter::cloned</target>
        </trans-unit>
        <trans-unit id="39d7b71286dffe1e8112336d0155fad0cb8939ff" translate="yes" xml:space="preserve">
          <source>ErrorIter::cmp</source>
          <target state="translated">ErrorIter::cmp</target>
        </trans-unit>
        <trans-unit id="26db5782e75a95dafcced9b6ef52894ed5fd2ef3" translate="yes" xml:space="preserve">
          <source>ErrorIter::collect</source>
          <target state="translated">ErrorIter::collect</target>
        </trans-unit>
        <trans-unit id="6d88e70ee3639b8d2aeab09a5876f956c7dfd835" translate="yes" xml:space="preserve">
          <source>ErrorIter::copied</source>
          <target state="translated">ErrorIter::copied</target>
        </trans-unit>
        <trans-unit id="2167a685a74b2509bc9f1b702a90eb311ada299d" translate="yes" xml:space="preserve">
          <source>ErrorIter::count</source>
          <target state="translated">ErrorIter::count</target>
        </trans-unit>
        <trans-unit id="81b3e3f8a09e70a6da9303c857b1b6a4f026ce12" translate="yes" xml:space="preserve">
          <source>ErrorIter::cycle</source>
          <target state="translated">ErrorIter::cycle</target>
        </trans-unit>
        <trans-unit id="317a6cf98623321e6cdb478da60097ca7f60c8d0" translate="yes" xml:space="preserve">
          <source>ErrorIter::enumerate</source>
          <target state="translated">ErrorIter::enumerate</target>
        </trans-unit>
        <trans-unit id="d2c6b309130c35901cb8511c21e1cc4bff343112" translate="yes" xml:space="preserve">
          <source>ErrorIter::eq</source>
          <target state="translated">ErrorIter::eq</target>
        </trans-unit>
        <trans-unit id="9ce04821944e69ece8d845f8f23dd99add317778" translate="yes" xml:space="preserve">
          <source>ErrorIter::filter</source>
          <target state="translated">ErrorIter::filter</target>
        </trans-unit>
        <trans-unit id="9f1b4a216f6c1e93e80f983274e4ce0cc156f868" translate="yes" xml:space="preserve">
          <source>ErrorIter::filter_map</source>
          <target state="translated">ErrorIter::filter_map</target>
        </trans-unit>
        <trans-unit id="ca73f731ff488a406d9d3cad80fc75568ea18c6d" translate="yes" xml:space="preserve">
          <source>ErrorIter::find</source>
          <target state="translated">ErrorIter::find</target>
        </trans-unit>
        <trans-unit id="a2d99ef42596a0439182e206e926ffe92c354eef" translate="yes" xml:space="preserve">
          <source>ErrorIter::find_map</source>
          <target state="translated">ErrorIter::find_map</target>
        </trans-unit>
        <trans-unit id="bad5ee004bac6f4c928c4b117650510fceaf8bfe" translate="yes" xml:space="preserve">
          <source>ErrorIter::flat_map</source>
          <target state="translated">ErrorIter::flat_map</target>
        </trans-unit>
        <trans-unit id="b1981d1d1da1062d93d5dc14d979958b12ab9edf" translate="yes" xml:space="preserve">
          <source>ErrorIter::flatten</source>
          <target state="translated">ErrorIter::flatten</target>
        </trans-unit>
        <trans-unit id="6ac02b4bd4b134bf3756af190c955220f6f03c42" translate="yes" xml:space="preserve">
          <source>ErrorIter::fmt</source>
          <target state="translated">ErrorIter::fmt</target>
        </trans-unit>
        <trans-unit id="f1f19a7e4c2a3f6f64983208404498558a7c4681" translate="yes" xml:space="preserve">
          <source>ErrorIter::fold</source>
          <target state="translated">ErrorIter::fold</target>
        </trans-unit>
        <trans-unit id="99ae147b4f6e5f242225a2afad86725ab6e4348b" translate="yes" xml:space="preserve">
          <source>ErrorIter::for_each</source>
          <target state="translated">ErrorIter::for_each</target>
        </trans-unit>
        <trans-unit id="efce1afdc65039bcd4078703c38961aee06da0a1" translate="yes" xml:space="preserve">
          <source>ErrorIter::from</source>
          <target state="translated">ErrorIter::from</target>
        </trans-unit>
        <trans-unit id="4e5a8744f335560b34b09dc34308d0056a106537" translate="yes" xml:space="preserve">
          <source>ErrorIter::fuse</source>
          <target state="translated">ErrorIter::fuse</target>
        </trans-unit>
        <trans-unit id="927bad5fd536db91abebe6d23f559d293ffe454a" translate="yes" xml:space="preserve">
          <source>ErrorIter::ge</source>
          <target state="translated">ErrorIter::ge</target>
        </trans-unit>
        <trans-unit id="d362ecf4fbf64b83324bdcc2b41987c4e0280112" translate="yes" xml:space="preserve">
          <source>ErrorIter::gt</source>
          <target state="translated">ErrorIter::gt</target>
        </trans-unit>
        <trans-unit id="d2da2c2b1bfe76b056455e41956b02780d4b4c1a" translate="yes" xml:space="preserve">
          <source>ErrorIter::inspect</source>
          <target state="translated">ErrorIter::inspect</target>
        </trans-unit>
        <trans-unit id="2e662179fef843796050cff2ea91a0bbec268d16" translate="yes" xml:space="preserve">
          <source>ErrorIter::into</source>
          <target state="translated">ErrorIter::into</target>
        </trans-unit>
        <trans-unit id="a6ecb53d24d32ed261cccaa2104b8698489c1f5e" translate="yes" xml:space="preserve">
          <source>ErrorIter::into_iter</source>
          <target state="translated">ErrorIter::into_iter</target>
        </trans-unit>
        <trans-unit id="109a7d928f65801a408ea6df957693e0a8c6dff1" translate="yes" xml:space="preserve">
          <source>ErrorIter::is_sorted</source>
          <target state="translated">ErrorIter::is_sorted</target>
        </trans-unit>
        <trans-unit id="d86c6d8ec9db204e0257ff86a56ad73dc0d70220" translate="yes" xml:space="preserve">
          <source>ErrorIter::is_sorted_by</source>
          <target state="translated">ErrorIter::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="0b3190903a26c14e4d3dac8cd5b121a55ef094c9" translate="yes" xml:space="preserve">
          <source>ErrorIter::is_sorted_by_key</source>
          <target state="translated">ErrorIter::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="87f5e824393c5afd589357155a9f5cfe9704fbba" translate="yes" xml:space="preserve">
          <source>ErrorIter::last</source>
          <target state="translated">ErrorIter::last</target>
        </trans-unit>
        <trans-unit id="489977883556c303806bcf1355f15d731d68561a" translate="yes" xml:space="preserve">
          <source>ErrorIter::le</source>
          <target state="translated">ErrorIter::le</target>
        </trans-unit>
        <trans-unit id="63be8f3a9809328e3e6301fb5202c3adb561ab94" translate="yes" xml:space="preserve">
          <source>ErrorIter::lt</source>
          <target state="translated">ErrorIter::lt</target>
        </trans-unit>
        <trans-unit id="49f1d228b25d6cf6ca66899cbd0f696261068889" translate="yes" xml:space="preserve">
          <source>ErrorIter::map</source>
          <target state="translated">ErrorIter::map</target>
        </trans-unit>
        <trans-unit id="6f31d09b8fe33cac5a4595eb0fbc6ed3e7975dd4" translate="yes" xml:space="preserve">
          <source>ErrorIter::max</source>
          <target state="translated">ErrorIter::max</target>
        </trans-unit>
        <trans-unit id="abd663cebef0c63f0b765bb7f3b9132bf1c389b6" translate="yes" xml:space="preserve">
          <source>ErrorIter::max_by</source>
          <target state="translated">ErrorIter::max_by</target>
        </trans-unit>
        <trans-unit id="88b59eeaaa6b2c8714fdc1e04c1609bf80b5b337" translate="yes" xml:space="preserve">
          <source>ErrorIter::max_by_key</source>
          <target state="translated">ErrorIter::max_by_key</target>
        </trans-unit>
        <trans-unit id="bc6638c81b3773f829090d87ea5f748d874b26a5" translate="yes" xml:space="preserve">
          <source>ErrorIter::min</source>
          <target state="translated">ErrorIter::min</target>
        </trans-unit>
        <trans-unit id="715087be39effd23569dac5b8603cca1eefabdd8" translate="yes" xml:space="preserve">
          <source>ErrorIter::min_by</source>
          <target state="translated">ErrorIter::min_by</target>
        </trans-unit>
        <trans-unit id="143e60560536ea273049ceb1fdbf02aa9faecbf6" translate="yes" xml:space="preserve">
          <source>ErrorIter::min_by_key</source>
          <target state="translated">ErrorIter::min_by_key</target>
        </trans-unit>
        <trans-unit id="98f048958bd83a0eb5bfc578cabf331b673e8bf8" translate="yes" xml:space="preserve">
          <source>ErrorIter::ne</source>
          <target state="translated">ErrorIter::ne</target>
        </trans-unit>
        <trans-unit id="43130c9b404c0207d45f88008f6b12b339ac9b72" translate="yes" xml:space="preserve">
          <source>ErrorIter::next</source>
          <target state="translated">ErrorIter::next</target>
        </trans-unit>
        <trans-unit id="661c44f015a0f08b2adadbd8a6e33db60c7d5cb9" translate="yes" xml:space="preserve">
          <source>ErrorIter::nth</source>
          <target state="translated">ErrorIter::nth</target>
        </trans-unit>
        <trans-unit id="5d758aca8c429b6c0965ebdaa5e7df77718f4752" translate="yes" xml:space="preserve">
          <source>ErrorIter::partial_cmp</source>
          <target state="translated">ErrorIter::partial_cmp</target>
        </trans-unit>
        <trans-unit id="d4ef2555472fd18733a48d2e98afd0cb97ddcd1b" translate="yes" xml:space="preserve">
          <source>ErrorIter::partition</source>
          <target state="translated">ErrorIter::partition</target>
        </trans-unit>
        <trans-unit id="7156fa170e10a2c1bef42e6ea173f6df2c374943" translate="yes" xml:space="preserve">
          <source>ErrorIter::peekable</source>
          <target state="translated">ErrorIter::peekable</target>
        </trans-unit>
        <trans-unit id="526a6dfc8e9c8447bd2e4c5e7d9c2e090eb70da6" translate="yes" xml:space="preserve">
          <source>ErrorIter::position</source>
          <target state="translated">ErrorIter::position</target>
        </trans-unit>
        <trans-unit id="6aa89adaf5d385081dadea3ed316a38253f8b2c9" translate="yes" xml:space="preserve">
          <source>ErrorIter::product</source>
          <target state="translated">ErrorIter::product</target>
        </trans-unit>
        <trans-unit id="ba6872f319b20d4b7c8ed12d395c54de7777ce12" translate="yes" xml:space="preserve">
          <source>ErrorIter::rev</source>
          <target state="translated">ErrorIter::rev</target>
        </trans-unit>
        <trans-unit id="20efdc92e8c052c4e74f98b2ff771e859729871a" translate="yes" xml:space="preserve">
          <source>ErrorIter::rposition</source>
          <target state="translated">ErrorIter::rposition</target>
        </trans-unit>
        <trans-unit id="9ba947f0f16aea6d1449058db3d29fe2e872cbc2" translate="yes" xml:space="preserve">
          <source>ErrorIter::scan</source>
          <target state="translated">ErrorIter::scan</target>
        </trans-unit>
        <trans-unit id="577761fa1238fe8853eb997d76220ee576a33605" translate="yes" xml:space="preserve">
          <source>ErrorIter::size_hint</source>
          <target state="translated">ErrorIter::size_hint</target>
        </trans-unit>
        <trans-unit id="0ab1fbcc4d98566483f23fa2bf9b99b18f8867d1" translate="yes" xml:space="preserve">
          <source>ErrorIter::skip</source>
          <target state="translated">ErrorIter::skip</target>
        </trans-unit>
        <trans-unit id="370cf207fa70bc9aa4562e962432a6545d0cb842" translate="yes" xml:space="preserve">
          <source>ErrorIter::skip_while</source>
          <target state="translated">ErrorIter::skip_while</target>
        </trans-unit>
        <trans-unit id="85c0c528d3fee7da1d43112adebf68f08e41edce" translate="yes" xml:space="preserve">
          <source>ErrorIter::step_by</source>
          <target state="translated">ErrorIter::step_by</target>
        </trans-unit>
        <trans-unit id="8a90acb08f66ed2efc432397f60d6c488429f91b" translate="yes" xml:space="preserve">
          <source>ErrorIter::sum</source>
          <target state="translated">ErrorIter::sum</target>
        </trans-unit>
        <trans-unit id="16c8c93ac7d119f95436b8191f828e172550d85a" translate="yes" xml:space="preserve">
          <source>ErrorIter::take</source>
          <target state="translated">ErrorIter::take</target>
        </trans-unit>
        <trans-unit id="34a55d7a94ae1b6a93a446fbc88d67c07b37736f" translate="yes" xml:space="preserve">
          <source>ErrorIter::take_while</source>
          <target state="translated">ErrorIter::take_while</target>
        </trans-unit>
        <trans-unit id="6bb89732501c88e3882522c2487bec2fa8c6e1b6" translate="yes" xml:space="preserve">
          <source>ErrorIter::to_owned</source>
          <target state="translated">ErrorIter::to_owned</target>
        </trans-unit>
        <trans-unit id="f71921b1ac52bb96f998e3df7a23ae89272d2703" translate="yes" xml:space="preserve">
          <source>ErrorIter::try_fold</source>
          <target state="translated">ErrorIter::try_fold</target>
        </trans-unit>
        <trans-unit id="006379f6696475eb369876240c8298a1550b4b92" translate="yes" xml:space="preserve">
          <source>ErrorIter::try_for_each</source>
          <target state="translated">ErrorIter::try_for_each</target>
        </trans-unit>
        <trans-unit id="8b33e0004061b2fad07dee9a12c33d7f73d5c6e2" translate="yes" xml:space="preserve">
          <source>ErrorIter::try_from</source>
          <target state="translated">ErrorIter::try_from</target>
        </trans-unit>
        <trans-unit id="fbda61b2216aa0d6820636b30c5058063277e0e3" translate="yes" xml:space="preserve">
          <source>ErrorIter::try_into</source>
          <target state="translated">ErrorIter::try_into</target>
        </trans-unit>
        <trans-unit id="064ba71e1ac3a639a701d85b4c10f6f0c03052ac" translate="yes" xml:space="preserve">
          <source>ErrorIter::type_id</source>
          <target state="translated">ErrorIter::type_id</target>
        </trans-unit>
        <trans-unit id="d1fb0d85eef9b409463670f3e7cbedaf6ed1899b" translate="yes" xml:space="preserve">
          <source>ErrorIter::unzip</source>
          <target state="translated">ErrorIter::unzip</target>
        </trans-unit>
        <trans-unit id="0c70622ee8b65b81cbc6c9e11a0a194074da14fb" translate="yes" xml:space="preserve">
          <source>ErrorIter::zip</source>
          <target state="translated">ErrorIter::zip</target>
        </trans-unit>
        <trans-unit id="84c5a637a1e81dc8cea0953625129cc071e8fe22" translate="yes" xml:space="preserve">
          <source>ErrorKind</source>
          <target state="translated">ErrorKind</target>
        </trans-unit>
        <trans-unit id="661f3db342d40d161c815e24dcd28fd90072182e" translate="yes" xml:space="preserve">
          <source>ErrorKind::borrow</source>
          <target state="translated">ErrorKind::borrow</target>
        </trans-unit>
        <trans-unit id="a7c0e6672941125f13f7425b682289bf6f270084" translate="yes" xml:space="preserve">
          <source>ErrorKind::borrow_mut</source>
          <target state="translated">ErrorKind::borrow_mut</target>
        </trans-unit>
        <trans-unit id="512f1996ce370b96a6c9d734472221a8c6d10bc2" translate="yes" xml:space="preserve">
          <source>ErrorKind::clamp</source>
          <target state="translated">ErrorKind::clamp</target>
        </trans-unit>
        <trans-unit id="0bb88486e95f4c4535e615559b601fa571e80e2d" translate="yes" xml:space="preserve">
          <source>ErrorKind::clone</source>
          <target state="translated">ErrorKind::clone</target>
        </trans-unit>
        <trans-unit id="42f07958af05164e3b5481fd181b5daf228078c4" translate="yes" xml:space="preserve">
          <source>ErrorKind::clone_from</source>
          <target state="translated">ErrorKind::clone_from</target>
        </trans-unit>
        <trans-unit id="d4faf1211f323ff4a3e9d22587bc469e0ea0acc6" translate="yes" xml:space="preserve">
          <source>ErrorKind::clone_into</source>
          <target state="translated">ErrorKind::clone_into</target>
        </trans-unit>
        <trans-unit id="699ad34c098b58c9ae5199d8c326a06627454b22" translate="yes" xml:space="preserve">
          <source>ErrorKind::cmp</source>
          <target state="translated">ErrorKind::cmp</target>
        </trans-unit>
        <trans-unit id="600073c582521666f7a8cdca06a024019eb42c8b" translate="yes" xml:space="preserve">
          <source>ErrorKind::eq</source>
          <target state="translated">ErrorKind::eq</target>
        </trans-unit>
        <trans-unit id="870fbb5ab6681bb642f25062aabacdf4204c2549" translate="yes" xml:space="preserve">
          <source>ErrorKind::fmt</source>
          <target state="translated">ErrorKind::fmt</target>
        </trans-unit>
        <trans-unit id="9cf1590cfbe1ae248877811fc6fb4179da992261" translate="yes" xml:space="preserve">
          <source>ErrorKind::from</source>
          <target state="translated">ErrorKind::from</target>
        </trans-unit>
        <trans-unit id="f1418c60b27299c29626f5e264f75f81ff0b2d6f" translate="yes" xml:space="preserve">
          <source>ErrorKind::ge</source>
          <target state="translated">ErrorKind::ge</target>
        </trans-unit>
        <trans-unit id="5696d03cd71a347e97d1d4cf43ae7b553decbd3b" translate="yes" xml:space="preserve">
          <source>ErrorKind::gt</source>
          <target state="translated">ErrorKind::gt</target>
        </trans-unit>
        <trans-unit id="5b32b39a188cf662b3f6b60b32c1a90ec82cbc31" translate="yes" xml:space="preserve">
          <source>ErrorKind::hash</source>
          <target state="translated">ErrorKind::hash</target>
        </trans-unit>
        <trans-unit id="15602f3189b3529aebcc2465b516f40c90dc4336" translate="yes" xml:space="preserve">
          <source>ErrorKind::hash_slice</source>
          <target state="translated">ErrorKind::hash_slice</target>
        </trans-unit>
        <trans-unit id="5c2d93df4341bbe210c069aadfa57574bb396fd0" translate="yes" xml:space="preserve">
          <source>ErrorKind::into</source>
          <target state="translated">ErrorKind::into</target>
        </trans-unit>
        <trans-unit id="a1e29dfd09d0f799ab36804aa2308647ce6eab0f" translate="yes" xml:space="preserve">
          <source>ErrorKind::le</source>
          <target state="translated">ErrorKind::le</target>
        </trans-unit>
        <trans-unit id="3d104950c3d01e45500c34d939b46ee8657cbe97" translate="yes" xml:space="preserve">
          <source>ErrorKind::lt</source>
          <target state="translated">ErrorKind::lt</target>
        </trans-unit>
        <trans-unit id="42518e9d6e310cb8f1d9daf12d8289338dd37059" translate="yes" xml:space="preserve">
          <source>ErrorKind::max</source>
          <target state="translated">ErrorKind::max</target>
        </trans-unit>
        <trans-unit id="dd0d47b52baf4626044901e80bf0f1b9e1d38aed" translate="yes" xml:space="preserve">
          <source>ErrorKind::min</source>
          <target state="translated">ErrorKind::min</target>
        </trans-unit>
        <trans-unit id="e8ed6ea0417b24701f5d386634f3ec1d84f3acd5" translate="yes" xml:space="preserve">
          <source>ErrorKind::ne</source>
          <target state="translated">ErrorKind::ne</target>
        </trans-unit>
        <trans-unit id="46d011754636b09593cb8a683d317fe309faec89" translate="yes" xml:space="preserve">
          <source>ErrorKind::partial_cmp</source>
          <target state="translated">ErrorKind::partial_cmp</target>
        </trans-unit>
        <trans-unit id="ef8b6b3e78c949fd8037b9405e7bd6d1277e51bd" translate="yes" xml:space="preserve">
          <source>ErrorKind::to_owned</source>
          <target state="translated">ErrorKind::to_owned</target>
        </trans-unit>
        <trans-unit id="98986f9b9bd9e3954b7a7943add6b56199e3f3df" translate="yes" xml:space="preserve">
          <source>ErrorKind::try_from</source>
          <target state="translated">ErrorKind::try_from</target>
        </trans-unit>
        <trans-unit id="031ba76e8fe0a945a726b7f1adc2ce8b8c218311" translate="yes" xml:space="preserve">
          <source>ErrorKind::try_into</source>
          <target state="translated">ErrorKind::try_into</target>
        </trans-unit>
        <trans-unit id="95af2226eb090255473b97cfaed8ae5e62c77771" translate="yes" xml:space="preserve">
          <source>ErrorKind::type_id</source>
          <target state="translated">ErrorKind::type_id</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="1ba66ce42361e4649fa32fe22a5ce1fe36634ba9" translate="yes" xml:space="preserve">
          <source>Errors mostly originate from the underlying OS, but custom instances of &lt;code&gt;Error&lt;/code&gt; can be created with crafted error messages and a particular value of &lt;a href=&quot;enum.errorkind&quot;&gt;&lt;code&gt;ErrorKind&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">오류는 대부분 기본 OS에서 발생하지만, 사용자 지정 인스턴스 &lt;code&gt;Error&lt;/code&gt; 제작 된 오류 메시지의 특정 값을 생성 할 수 있습니다 &lt;a href=&quot;enum.errorkind&quot;&gt; &lt;code&gt;ErrorKind&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21fb05591d3103c9493d6620320e7e405f59ad58" translate="yes" xml:space="preserve">
          <source>Errors that are &lt;code&gt;Other&lt;/code&gt; now may move to a different or a new &lt;a href=&quot;enum.errorkind&quot;&gt;&lt;code&gt;ErrorKind&lt;/code&gt;&lt;/a&gt; variant in the future. It is not recommended to match an error against &lt;code&gt;Other&lt;/code&gt; and to expect any additional characteristics, e.g., a specific &lt;a href=&quot;struct.error#method.raw_os_error&quot;&gt;&lt;code&gt;Error::raw_os_error&lt;/code&gt;&lt;/a&gt; return value.</source>
          <target state="translated">&lt;code&gt;Other&lt;/code&gt; 오류 는 향후 다른 또는 새로운 &lt;a href=&quot;enum.errorkind&quot;&gt; &lt;code&gt;ErrorKind&lt;/code&gt; &lt;/a&gt; 변형으로 이동할 수 있습니다. &lt;code&gt;Other&lt;/code&gt; 대한 오류를 일치 시키고 특정 &lt;a href=&quot;struct.error#method.raw_os_error&quot;&gt; &lt;code&gt;Error::raw_os_error&lt;/code&gt; &lt;/a&gt; 반환 값 과 같은 추가 특성을 기대 하는 것은 권장되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="617231aeb459776cab6c72fadc2e075debd8f0e1" translate="yes" xml:space="preserve">
          <source>Errors which can occur when attempting to interpret a sequence of &lt;a href=&quot;../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; as a string.</source>
          <target state="translated">&lt;a href=&quot;../primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt; 시퀀스를 문자열로 해석하려고 할 때 발생할 수있는 오류입니다 .</target>
        </trans-unit>
        <trans-unit id="572650de1d30fa3946f8dcf507d7dccb6e03cc31" translate="yes" xml:space="preserve">
          <source>EscapeDebug</source>
          <target state="translated">EscapeDebug</target>
        </trans-unit>
        <trans-unit id="f851a971b0b5eadcc642f419fafefaaf9a2db208" translate="yes" xml:space="preserve">
          <source>EscapeDebug::all</source>
          <target state="translated">EscapeDebug::all</target>
        </trans-unit>
        <trans-unit id="4997d045b3bd7ef806841f6131ad4a795c2ff521" translate="yes" xml:space="preserve">
          <source>EscapeDebug::any</source>
          <target state="translated">EscapeDebug::any</target>
        </trans-unit>
        <trans-unit id="31484f8a5d6386bec728800641ae797ce976ba34" translate="yes" xml:space="preserve">
          <source>EscapeDebug::borrow</source>
          <target state="translated">EscapeDebug::borrow</target>
        </trans-unit>
        <trans-unit id="a921027c6ec31ca6851a12e1bc2f7b696b3e3562" translate="yes" xml:space="preserve">
          <source>EscapeDebug::borrow_mut</source>
          <target state="translated">EscapeDebug::borrow_mut</target>
        </trans-unit>
        <trans-unit id="e192c290802349931dddd02e7976ae46c2b06fcd" translate="yes" xml:space="preserve">
          <source>EscapeDebug::by_ref</source>
          <target state="translated">EscapeDebug::by_ref</target>
        </trans-unit>
        <trans-unit id="219eb645dbfe050683f6c5d99becaaf6b5fa5b33" translate="yes" xml:space="preserve">
          <source>EscapeDebug::chain</source>
          <target state="translated">EscapeDebug::chain</target>
        </trans-unit>
        <trans-unit id="84d8c6f7670ac726b4a5999f99987879fe803b8e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::clone</source>
          <target state="translated">EscapeDebug::clone</target>
        </trans-unit>
        <trans-unit id="0fd60e634a08eba48314a085c9523c9136486b07" translate="yes" xml:space="preserve">
          <source>EscapeDebug::clone_from</source>
          <target state="translated">EscapeDebug::clone_from</target>
        </trans-unit>
        <trans-unit id="db0970b68de395fbd83871baec922bd8449441bc" translate="yes" xml:space="preserve">
          <source>EscapeDebug::clone_into</source>
          <target state="translated">EscapeDebug::clone_into</target>
        </trans-unit>
        <trans-unit id="ab9372640426f09e33fcfd0a966dcb6e03a091ef" translate="yes" xml:space="preserve">
          <source>EscapeDebug::cloned</source>
          <target state="translated">EscapeDebug::cloned</target>
        </trans-unit>
        <trans-unit id="69a70889e4201d22630174bf27ed62729904d3d6" translate="yes" xml:space="preserve">
          <source>EscapeDebug::cmp</source>
          <target state="translated">EscapeDebug::cmp</target>
        </trans-unit>
        <trans-unit id="a9708a871e133fbc380631800417f97f2c6c6385" translate="yes" xml:space="preserve">
          <source>EscapeDebug::collect</source>
          <target state="translated">EscapeDebug::collect</target>
        </trans-unit>
        <trans-unit id="90f37428d7eb5762dae339603b70498e7bd12964" translate="yes" xml:space="preserve">
          <source>EscapeDebug::copied</source>
          <target state="translated">EscapeDebug::copied</target>
        </trans-unit>
        <trans-unit id="d63c9499fa360b1b3c6e249081e949cb9b9c63be" translate="yes" xml:space="preserve">
          <source>EscapeDebug::count</source>
          <target state="translated">EscapeDebug::count</target>
        </trans-unit>
        <trans-unit id="6aee966b4dd14f10e887c419eaaf7b8e2eecdcae" translate="yes" xml:space="preserve">
          <source>EscapeDebug::cycle</source>
          <target state="translated">EscapeDebug::cycle</target>
        </trans-unit>
        <trans-unit id="7c567b372fb87e0913a13eee35788b3ea21d6514" translate="yes" xml:space="preserve">
          <source>EscapeDebug::enumerate</source>
          <target state="translated">EscapeDebug::enumerate</target>
        </trans-unit>
        <trans-unit id="37fa311f735d0539ca0789d26cfee80109cd52bd" translate="yes" xml:space="preserve">
          <source>EscapeDebug::eq</source>
          <target state="translated">EscapeDebug::eq</target>
        </trans-unit>
        <trans-unit id="e3f8910289f7163e9e811caea02b821bca1cff9e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::filter</source>
          <target state="translated">EscapeDebug::filter</target>
        </trans-unit>
        <trans-unit id="b9e5de818d4b65261f37b3c95d410b9be1003692" translate="yes" xml:space="preserve">
          <source>EscapeDebug::filter_map</source>
          <target state="translated">EscapeDebug::filter_map</target>
        </trans-unit>
        <trans-unit id="c447df5f56b65fad4a436903c5d379793be60ec1" translate="yes" xml:space="preserve">
          <source>EscapeDebug::find</source>
          <target state="translated">EscapeDebug::find</target>
        </trans-unit>
        <trans-unit id="a16a6792b2eca3506329b7d92286ada08f0d492f" translate="yes" xml:space="preserve">
          <source>EscapeDebug::find_map</source>
          <target state="translated">EscapeDebug::find_map</target>
        </trans-unit>
        <trans-unit id="04c8abe31c6d6a0027d88e78e3830b72ddecd65e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::flat_map</source>
          <target state="translated">EscapeDebug::flat_map</target>
        </trans-unit>
        <trans-unit id="3f953abd99203a2a0745b24ae2ad8775fb635a5c" translate="yes" xml:space="preserve">
          <source>EscapeDebug::flatten</source>
          <target state="translated">EscapeDebug::flatten</target>
        </trans-unit>
        <trans-unit id="322207c662c6b9226bf5fccc68e11cf4cf5f9191" translate="yes" xml:space="preserve">
          <source>EscapeDebug::fmt</source>
          <target state="translated">EscapeDebug::fmt</target>
        </trans-unit>
        <trans-unit id="1a14ffcebcff1935f949f9c61c2a9c31dd2deb7e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::fold</source>
          <target state="translated">EscapeDebug::fold</target>
        </trans-unit>
        <trans-unit id="3fce21febfd27ff9f278db8e2e83bf584dbc60f9" translate="yes" xml:space="preserve">
          <source>EscapeDebug::for_each</source>
          <target state="translated">EscapeDebug::for_each</target>
        </trans-unit>
        <trans-unit id="243e1e23691d93496fd0e7fe8f9754c9fc55f571" translate="yes" xml:space="preserve">
          <source>EscapeDebug::from</source>
          <target state="translated">EscapeDebug::from</target>
        </trans-unit>
        <trans-unit id="99042fa59815fc225a3eb42dd6e2eba0b2c17e42" translate="yes" xml:space="preserve">
          <source>EscapeDebug::fuse</source>
          <target state="translated">EscapeDebug::fuse</target>
        </trans-unit>
        <trans-unit id="7e7452fe6197edf28ac3fb0922355878e2d488a6" translate="yes" xml:space="preserve">
          <source>EscapeDebug::ge</source>
          <target state="translated">EscapeDebug::ge</target>
        </trans-unit>
        <trans-unit id="9ea77d1b90438f759ee8fc21fde6468957ea443c" translate="yes" xml:space="preserve">
          <source>EscapeDebug::gt</source>
          <target state="translated">EscapeDebug::gt</target>
        </trans-unit>
        <trans-unit id="00f182f15fbd77f1b89dc7c9b6e31552c0fffc17" translate="yes" xml:space="preserve">
          <source>EscapeDebug::inspect</source>
          <target state="translated">EscapeDebug::inspect</target>
        </trans-unit>
        <trans-unit id="28f7751aca4d6a080babd7aae46052ffe2acab3b" translate="yes" xml:space="preserve">
          <source>EscapeDebug::into</source>
          <target state="translated">EscapeDebug::into</target>
        </trans-unit>
        <trans-unit id="bf5deee2e1752e2bf92cd46736a37f0130260c5d" translate="yes" xml:space="preserve">
          <source>EscapeDebug::into_iter</source>
          <target state="translated">EscapeDebug::into_iter</target>
        </trans-unit>
        <trans-unit id="54224f110c5f77290b7486385dbc979ce3576c6a" translate="yes" xml:space="preserve">
          <source>EscapeDebug::is_empty</source>
          <target state="translated">EscapeDebug::is_empty</target>
        </trans-unit>
        <trans-unit id="ef17b8ec73a9c37772199b0ac6c6b2babaf12734" translate="yes" xml:space="preserve">
          <source>EscapeDebug::is_sorted</source>
          <target state="translated">EscapeDebug::is_sorted</target>
        </trans-unit>
        <trans-unit id="edb457a92329a54870a49a5ca5748e23586b1d7a" translate="yes" xml:space="preserve">
          <source>EscapeDebug::is_sorted_by</source>
          <target state="translated">EscapeDebug::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="73b7c668beea25c5c4ebe92ccad8550ae772a13e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::is_sorted_by_key</source>
          <target state="translated">EscapeDebug::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="bc64784557d85110ff746d3f97e433ff9a9a9377" translate="yes" xml:space="preserve">
          <source>EscapeDebug::last</source>
          <target state="translated">EscapeDebug::last</target>
        </trans-unit>
        <trans-unit id="ea67597e516e1f459498d455c57e5c471aac1dd5" translate="yes" xml:space="preserve">
          <source>EscapeDebug::le</source>
          <target state="translated">EscapeDebug::le</target>
        </trans-unit>
        <trans-unit id="f34a2cea8231ba9f8ad668c56ece3f675ef00f21" translate="yes" xml:space="preserve">
          <source>EscapeDebug::len</source>
          <target state="translated">EscapeDebug::len</target>
        </trans-unit>
        <trans-unit id="d7c4acc91f20eb30f7b2d320e529538a3e8ac98f" translate="yes" xml:space="preserve">
          <source>EscapeDebug::lt</source>
          <target state="translated">EscapeDebug::lt</target>
        </trans-unit>
        <trans-unit id="7450c0fac7a0a6fce02f82f917fd853e5275365a" translate="yes" xml:space="preserve">
          <source>EscapeDebug::map</source>
          <target state="translated">EscapeDebug::map</target>
        </trans-unit>
        <trans-unit id="27d445546097456d20cb821cb6f04d55acb1a563" translate="yes" xml:space="preserve">
          <source>EscapeDebug::max</source>
          <target state="translated">EscapeDebug::max</target>
        </trans-unit>
        <trans-unit id="0be2e21b673780373384f7d01ca769a8971b4cb5" translate="yes" xml:space="preserve">
          <source>EscapeDebug::max_by</source>
          <target state="translated">EscapeDebug::max_by</target>
        </trans-unit>
        <trans-unit id="edb16f6956009635b34365be87340ab27e2e2eaf" translate="yes" xml:space="preserve">
          <source>EscapeDebug::max_by_key</source>
          <target state="translated">EscapeDebug::max_by_key</target>
        </trans-unit>
        <trans-unit id="9160e222b23449832056c9710a112358b4c05934" translate="yes" xml:space="preserve">
          <source>EscapeDebug::min</source>
          <target state="translated">EscapeDebug::min</target>
        </trans-unit>
        <trans-unit id="b827a8a2c83e22b2f5d3bd2d7ea52b9b1dc3d4b6" translate="yes" xml:space="preserve">
          <source>EscapeDebug::min_by</source>
          <target state="translated">EscapeDebug::min_by</target>
        </trans-unit>
        <trans-unit id="b6e799461b8608ff70f98c23b3333752ef1cc28a" translate="yes" xml:space="preserve">
          <source>EscapeDebug::min_by_key</source>
          <target state="translated">EscapeDebug::min_by_key</target>
        </trans-unit>
        <trans-unit id="f9efd3bfdb62be8a0fcc650ec17ea66ac1101ef9" translate="yes" xml:space="preserve">
          <source>EscapeDebug::ne</source>
          <target state="translated">EscapeDebug::ne</target>
        </trans-unit>
        <trans-unit id="7138466f1ab2c2c66280bb69e817157652fe6ad9" translate="yes" xml:space="preserve">
          <source>EscapeDebug::next</source>
          <target state="translated">EscapeDebug::next</target>
        </trans-unit>
        <trans-unit id="ae8c8b124dc57e7fb6b9592a2ca7608f810fcbc1" translate="yes" xml:space="preserve">
          <source>EscapeDebug::nth</source>
          <target state="translated">EscapeDebug::nth</target>
        </trans-unit>
        <trans-unit id="14bc5438490c227654217f32e03393d380a61bc2" translate="yes" xml:space="preserve">
          <source>EscapeDebug::partial_cmp</source>
          <target state="translated">EscapeDebug::partial_cmp</target>
        </trans-unit>
        <trans-unit id="d0c9c88077a1179c230062db952f6fb6fce028a2" translate="yes" xml:space="preserve">
          <source>EscapeDebug::partition</source>
          <target state="translated">EscapeDebug::partition</target>
        </trans-unit>
        <trans-unit id="fb5691b29734f49107a92e1b1671c090415c3cca" translate="yes" xml:space="preserve">
          <source>EscapeDebug::peekable</source>
          <target state="translated">EscapeDebug::peekable</target>
        </trans-unit>
        <trans-unit id="1af5d4ed909d4d2eff2a2538936a4711810602e0" translate="yes" xml:space="preserve">
          <source>EscapeDebug::position</source>
          <target state="translated">EscapeDebug::position</target>
        </trans-unit>
        <trans-unit id="b7b44b2427d64c5bb9739f39b142e7072c6ef97e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::product</source>
          <target state="translated">EscapeDebug::product</target>
        </trans-unit>
        <trans-unit id="039f46c2dfb06cb23c44dea6f2b929fad9165f14" translate="yes" xml:space="preserve">
          <source>EscapeDebug::rev</source>
          <target state="translated">EscapeDebug::rev</target>
        </trans-unit>
        <trans-unit id="1191b9896fd4031f269c48b0ce266530f88f6d1a" translate="yes" xml:space="preserve">
          <source>EscapeDebug::rposition</source>
          <target state="translated">EscapeDebug::rposition</target>
        </trans-unit>
        <trans-unit id="6438c60e088f96c76919374f08f399bb15d6eecd" translate="yes" xml:space="preserve">
          <source>EscapeDebug::scan</source>
          <target state="translated">EscapeDebug::scan</target>
        </trans-unit>
        <trans-unit id="df517cb62c4bd38809d6f6eefd11361a36305a53" translate="yes" xml:space="preserve">
          <source>EscapeDebug::size_hint</source>
          <target state="translated">EscapeDebug::size_hint</target>
        </trans-unit>
        <trans-unit id="2117c666e235c723952d6c587cac4ff6f2497aa8" translate="yes" xml:space="preserve">
          <source>EscapeDebug::skip</source>
          <target state="translated">EscapeDebug::skip</target>
        </trans-unit>
        <trans-unit id="3a7ff6c86e6035e47972d04d9f03ed94ce5a716d" translate="yes" xml:space="preserve">
          <source>EscapeDebug::skip_while</source>
          <target state="translated">EscapeDebug::skip_while</target>
        </trans-unit>
        <trans-unit id="40fc5601b025d208e66bb737f57d6da06b47ade0" translate="yes" xml:space="preserve">
          <source>EscapeDebug::step_by</source>
          <target state="translated">EscapeDebug::step_by</target>
        </trans-unit>
        <trans-unit id="48b3d1abdb3455603d2d212580461917f3ecb092" translate="yes" xml:space="preserve">
          <source>EscapeDebug::sum</source>
          <target state="translated">EscapeDebug::sum</target>
        </trans-unit>
        <trans-unit id="408dca79de01bcb165d02684cbf1e8eaa7b0694c" translate="yes" xml:space="preserve">
          <source>EscapeDebug::take</source>
          <target state="translated">EscapeDebug::take</target>
        </trans-unit>
        <trans-unit id="bbee152a32ff416e74daec9e3bb2dc2b1e379e81" translate="yes" xml:space="preserve">
          <source>EscapeDebug::take_while</source>
          <target state="translated">EscapeDebug::take_while</target>
        </trans-unit>
        <trans-unit id="349ff6ee944494af4cdd8d0105f154a03a530886" translate="yes" xml:space="preserve">
          <source>EscapeDebug::to_owned</source>
          <target state="translated">EscapeDebug::to_owned</target>
        </trans-unit>
        <trans-unit id="3c49e3a31484dfb37f8a787108ff6927a5fc086c" translate="yes" xml:space="preserve">
          <source>EscapeDebug::to_string</source>
          <target state="translated">EscapeDebug::to_string</target>
        </trans-unit>
        <trans-unit id="7a3982e9d31b237ce98c9ae8b17c962c98262e80" translate="yes" xml:space="preserve">
          <source>EscapeDebug::try_fold</source>
          <target state="translated">EscapeDebug::try_fold</target>
        </trans-unit>
        <trans-unit id="db5587e57b5b91ccf9d0a7f8659a32c17e61d90c" translate="yes" xml:space="preserve">
          <source>EscapeDebug::try_for_each</source>
          <target state="translated">EscapeDebug::try_for_each</target>
        </trans-unit>
        <trans-unit id="87594b3a02da30aa66a7d13db18e0a0a4c9362be" translate="yes" xml:space="preserve">
          <source>EscapeDebug::try_from</source>
          <target state="translated">EscapeDebug::try_from</target>
        </trans-unit>
        <trans-unit id="a815a2f8f27ce9813e30b77cd8859bb40438d811" translate="yes" xml:space="preserve">
          <source>EscapeDebug::try_into</source>
          <target state="translated">EscapeDebug::try_into</target>
        </trans-unit>
        <trans-unit id="1c18a75264b62c832abbe7a772699202f524cb6e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::type_id</source>
          <target state="translated">EscapeDebug::type_id</target>
        </trans-unit>
        <trans-unit id="59d663cd9b027121642ba0a7c0d37654ef30b755" translate="yes" xml:space="preserve">
          <source>EscapeDebug::unzip</source>
          <target state="translated">EscapeDebug::unzip</target>
        </trans-unit>
        <trans-unit id="98a8e7bfd1bda21317c8668982022c90d80cd52e" translate="yes" xml:space="preserve">
          <source>EscapeDebug::zip</source>
          <target state="translated">EscapeDebug::zip</target>
        </trans-unit>
        <trans-unit id="2c49d638507bef6ec508ed1d5a011148b8ab99d6" translate="yes" xml:space="preserve">
          <source>EscapeDefault</source>
          <target state="translated">EscapeDefault</target>
        </trans-unit>
        <trans-unit id="c8d390e0189d165c1ccd94cc5606abda369cda8e" translate="yes" xml:space="preserve">
          <source>EscapeDefault::all</source>
          <target state="translated">EscapeDefault::all</target>
        </trans-unit>
        <trans-unit id="7b1457a363be06394fb7df21484088cab81b23a8" translate="yes" xml:space="preserve">
          <source>EscapeDefault::any</source>
          <target state="translated">EscapeDefault::any</target>
        </trans-unit>
        <trans-unit id="83c226877f88d2d845db6252099a90103d5b95e3" translate="yes" xml:space="preserve">
          <source>EscapeDefault::borrow</source>
          <target state="translated">EscapeDefault::borrow</target>
        </trans-unit>
        <trans-unit id="eab34231135a49263a09f28ecfb83f837488eacf" translate="yes" xml:space="preserve">
          <source>EscapeDefault::borrow_mut</source>
          <target state="translated">EscapeDefault::borrow_mut</target>
        </trans-unit>
        <trans-unit id="d32d5867d95ead458f63044b1b2b70705a54ce25" translate="yes" xml:space="preserve">
          <source>EscapeDefault::by_ref</source>
          <target state="translated">EscapeDefault::by_ref</target>
        </trans-unit>
        <trans-unit id="025c92b9b8008e9036590117da0b3f599c306756" translate="yes" xml:space="preserve">
          <source>EscapeDefault::chain</source>
          <target state="translated">EscapeDefault::chain</target>
        </trans-unit>
        <trans-unit id="ea0c55a5e8aa922150585cabcbd133e1af302fbc" translate="yes" xml:space="preserve">
          <source>EscapeDefault::clone</source>
          <target state="translated">EscapeDefault::clone</target>
        </trans-unit>
        <trans-unit id="5496012109ae1656d11b96bc4ac9d0b3c901205d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::clone_from</source>
          <target state="translated">EscapeDefault::clone_from</target>
        </trans-unit>
        <trans-unit id="3051ba64fc5271d1bd321d7a5f4847d17e0df1d2" translate="yes" xml:space="preserve">
          <source>EscapeDefault::clone_into</source>
          <target state="translated">EscapeDefault::clone_into</target>
        </trans-unit>
        <trans-unit id="49e1b7672f40aae8f6520462e85fc291badefa91" translate="yes" xml:space="preserve">
          <source>EscapeDefault::cloned</source>
          <target state="translated">EscapeDefault::cloned</target>
        </trans-unit>
        <trans-unit id="f08dd9a8a1df13e20a11290f26989bec2f119628" translate="yes" xml:space="preserve">
          <source>EscapeDefault::cmp</source>
          <target state="translated">EscapeDefault::cmp</target>
        </trans-unit>
        <trans-unit id="a4a50b297a8af9075cbefc1a210828bf0ba5f8f4" translate="yes" xml:space="preserve">
          <source>EscapeDefault::collect</source>
          <target state="translated">EscapeDefault::collect</target>
        </trans-unit>
        <trans-unit id="dc41e4599252b0a81a5edcb22fca26b33190b37a" translate="yes" xml:space="preserve">
          <source>EscapeDefault::copied</source>
          <target state="translated">EscapeDefault::copied</target>
        </trans-unit>
        <trans-unit id="8acfbb605a582fd09e9cb50af6ad258424d718e8" translate="yes" xml:space="preserve">
          <source>EscapeDefault::count</source>
          <target state="translated">EscapeDefault::count</target>
        </trans-unit>
        <trans-unit id="59d69646937c92208f7673aa6f0c0dcc854554c5" translate="yes" xml:space="preserve">
          <source>EscapeDefault::cycle</source>
          <target state="translated">EscapeDefault::cycle</target>
        </trans-unit>
        <trans-unit id="2eb59b24aa04a702fb49bb3819c53e9696260fd0" translate="yes" xml:space="preserve">
          <source>EscapeDefault::enumerate</source>
          <target state="translated">EscapeDefault::enumerate</target>
        </trans-unit>
        <trans-unit id="e6623db72fe48cd268932ff83da490c772606ad1" translate="yes" xml:space="preserve">
          <source>EscapeDefault::eq</source>
          <target state="translated">EscapeDefault::eq</target>
        </trans-unit>
        <trans-unit id="bcb06f360163014f78c3db605676a533f14c905f" translate="yes" xml:space="preserve">
          <source>EscapeDefault::filter</source>
          <target state="translated">EscapeDefault::filter</target>
        </trans-unit>
        <trans-unit id="c91216450618d24e538da64ab42926525db6804b" translate="yes" xml:space="preserve">
          <source>EscapeDefault::filter_map</source>
          <target state="translated">EscapeDefault::filter_map</target>
        </trans-unit>
        <trans-unit id="e20a18bd348e3dcd15ef5a7f186e306ffa36c59d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::find</source>
          <target state="translated">EscapeDefault::find</target>
        </trans-unit>
        <trans-unit id="82be58dcaa89bc2d05f77950dd8ce717d19ef45d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::find_map</source>
          <target state="translated">EscapeDefault::find_map</target>
        </trans-unit>
        <trans-unit id="1d3a7cf1d1fbfb00c4e30bffca47db6485d1024f" translate="yes" xml:space="preserve">
          <source>EscapeDefault::flat_map</source>
          <target state="translated">EscapeDefault::flat_map</target>
        </trans-unit>
        <trans-unit id="ec867eee2eb35e4a07424fc4a70317c1dd390e03" translate="yes" xml:space="preserve">
          <source>EscapeDefault::flatten</source>
          <target state="translated">EscapeDefault::flatten</target>
        </trans-unit>
        <trans-unit id="d9d14ab1b7f518b676653447da8fb9f446ae0acf" translate="yes" xml:space="preserve">
          <source>EscapeDefault::fmt</source>
          <target state="translated">EscapeDefault::fmt</target>
        </trans-unit>
        <trans-unit id="bb94f91e350f810886920c60f3f74603d11ba76d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::fold</source>
          <target state="translated">EscapeDefault::fold</target>
        </trans-unit>
        <trans-unit id="9d423ea509871d53af9a21a1ae4c3160432ad799" translate="yes" xml:space="preserve">
          <source>EscapeDefault::for_each</source>
          <target state="translated">EscapeDefault::for_each</target>
        </trans-unit>
        <trans-unit id="644f4ea6ce4dcc1d460b46ddf6a879686e926827" translate="yes" xml:space="preserve">
          <source>EscapeDefault::from</source>
          <target state="translated">EscapeDefault::from</target>
        </trans-unit>
        <trans-unit id="beb4dce1ed14df8f3aff0364e332ed02a1394bbf" translate="yes" xml:space="preserve">
          <source>EscapeDefault::fuse</source>
          <target state="translated">EscapeDefault::fuse</target>
        </trans-unit>
        <trans-unit id="15daf3c83ca40564e0f9f3ff26459dc96c9ac4cf" translate="yes" xml:space="preserve">
          <source>EscapeDefault::ge</source>
          <target state="translated">EscapeDefault::ge</target>
        </trans-unit>
        <trans-unit id="cd98c58dfefc40db78ce2893a09882f16d3442bc" translate="yes" xml:space="preserve">
          <source>EscapeDefault::gt</source>
          <target state="translated">EscapeDefault::gt</target>
        </trans-unit>
        <trans-unit id="eacf8a62c06fa5b47fd7661efc3a643736967905" translate="yes" xml:space="preserve">
          <source>EscapeDefault::inspect</source>
          <target state="translated">EscapeDefault::inspect</target>
        </trans-unit>
        <trans-unit id="222b7c35c7a4ccd57306ad294e6c503eb8aa7681" translate="yes" xml:space="preserve">
          <source>EscapeDefault::into</source>
          <target state="translated">EscapeDefault::into</target>
        </trans-unit>
        <trans-unit id="3eef642ab467d970fa67e2d795dfc529e5ab06b3" translate="yes" xml:space="preserve">
          <source>EscapeDefault::into_iter</source>
          <target state="translated">EscapeDefault::into_iter</target>
        </trans-unit>
        <trans-unit id="989ebe052f7264be5b90e7455f2c22004cfd663a" translate="yes" xml:space="preserve">
          <source>EscapeDefault::is_empty</source>
          <target state="translated">EscapeDefault::is_empty</target>
        </trans-unit>
        <trans-unit id="ace15f7ad05bc5cca2d0d4905e261e764df8adff" translate="yes" xml:space="preserve">
          <source>EscapeDefault::is_sorted</source>
          <target state="translated">EscapeDefault::is_sorted</target>
        </trans-unit>
        <trans-unit id="ddf7c3321bc9afbb92521d92ee4c888303535416" translate="yes" xml:space="preserve">
          <source>EscapeDefault::is_sorted_by</source>
          <target state="translated">EscapeDefault::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="d96cf0d36b39d667b9b3ee756d8579e0289fb904" translate="yes" xml:space="preserve">
          <source>EscapeDefault::is_sorted_by_key</source>
          <target state="translated">EscapeDefault::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="45262fa99b327234791e4fea3ce5f091eff36de4" translate="yes" xml:space="preserve">
          <source>EscapeDefault::last</source>
          <target state="translated">EscapeDefault::last</target>
        </trans-unit>
        <trans-unit id="99d2c3864aed6762dd24c6fc99bbdcb5d81968a1" translate="yes" xml:space="preserve">
          <source>EscapeDefault::le</source>
          <target state="translated">EscapeDefault::le</target>
        </trans-unit>
        <trans-unit id="8b560c65243ccfe78b50d719c08bd53c88470b59" translate="yes" xml:space="preserve">
          <source>EscapeDefault::len</source>
          <target state="translated">EscapeDefault::len</target>
        </trans-unit>
        <trans-unit id="88e2aaac0798d925388638a5ba98a29996b32585" translate="yes" xml:space="preserve">
          <source>EscapeDefault::lt</source>
          <target state="translated">EscapeDefault::lt</target>
        </trans-unit>
        <trans-unit id="e98e35f9f162549d57b27db6061f6cb4b07a64d4" translate="yes" xml:space="preserve">
          <source>EscapeDefault::map</source>
          <target state="translated">EscapeDefault::map</target>
        </trans-unit>
        <trans-unit id="48fabe70e0dd3d46394d877b7e272278324171c8" translate="yes" xml:space="preserve">
          <source>EscapeDefault::max</source>
          <target state="translated">EscapeDefault::max</target>
        </trans-unit>
        <trans-unit id="1f7172bcb9d49b013dad56022f11c7cbe2551b88" translate="yes" xml:space="preserve">
          <source>EscapeDefault::max_by</source>
          <target state="translated">EscapeDefault::max_by</target>
        </trans-unit>
        <trans-unit id="838e895eafcbc8b7e872e447f6f3d78de6bd8002" translate="yes" xml:space="preserve">
          <source>EscapeDefault::max_by_key</source>
          <target state="translated">EscapeDefault::max_by_key</target>
        </trans-unit>
        <trans-unit id="4e048e15b4f03d96a7a8acfe0af747c15b186ce6" translate="yes" xml:space="preserve">
          <source>EscapeDefault::min</source>
          <target state="translated">EscapeDefault::min</target>
        </trans-unit>
        <trans-unit id="7000fbe502be89a90b61b4bb9ecd4ba9b5160c6e" translate="yes" xml:space="preserve">
          <source>EscapeDefault::min_by</source>
          <target state="translated">EscapeDefault::min_by</target>
        </trans-unit>
        <trans-unit id="9b30be3d5f503e371c286382064d5cf8a70e0727" translate="yes" xml:space="preserve">
          <source>EscapeDefault::min_by_key</source>
          <target state="translated">EscapeDefault::min_by_key</target>
        </trans-unit>
        <trans-unit id="93c4143ff3e7141abb0406bcb307cb46d013156d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::ne</source>
          <target state="translated">EscapeDefault::ne</target>
        </trans-unit>
        <trans-unit id="07f794c656dd08220694c812ad1b40ba5de2dfbd" translate="yes" xml:space="preserve">
          <source>EscapeDefault::next</source>
          <target state="translated">EscapeDefault::next</target>
        </trans-unit>
        <trans-unit id="b0b7f105b402375d8d37e94053a7be932e0f5b0b" translate="yes" xml:space="preserve">
          <source>EscapeDefault::next_back</source>
          <target state="translated">EscapeDefault::next_back</target>
        </trans-unit>
        <trans-unit id="f1bc6d43bd50f8f87f8369534f1183ed1d86f6ad" translate="yes" xml:space="preserve">
          <source>EscapeDefault::nth</source>
          <target state="translated">EscapeDefault::nth</target>
        </trans-unit>
        <trans-unit id="48b43205a16a6be089cfd5147f284b564c1c8276" translate="yes" xml:space="preserve">
          <source>EscapeDefault::nth_back</source>
          <target state="translated">EscapeDefault::nth_back</target>
        </trans-unit>
        <trans-unit id="71f2e3e189254ca066415241eb5522da6b526c2b" translate="yes" xml:space="preserve">
          <source>EscapeDefault::partial_cmp</source>
          <target state="translated">EscapeDefault::partial_cmp</target>
        </trans-unit>
        <trans-unit id="d798d68412346bfe3301520c540cb718747e83cb" translate="yes" xml:space="preserve">
          <source>EscapeDefault::partition</source>
          <target state="translated">EscapeDefault::partition</target>
        </trans-unit>
        <trans-unit id="5c0ff15b85cae1835c576432fc41880518ecca65" translate="yes" xml:space="preserve">
          <source>EscapeDefault::peekable</source>
          <target state="translated">EscapeDefault::peekable</target>
        </trans-unit>
        <trans-unit id="739321aafe7186085248dbad4c98b921d3d0b3e1" translate="yes" xml:space="preserve">
          <source>EscapeDefault::position</source>
          <target state="translated">EscapeDefault::position</target>
        </trans-unit>
        <trans-unit id="76475de1a9c8522c4960566ded75947e2651a164" translate="yes" xml:space="preserve">
          <source>EscapeDefault::product</source>
          <target state="translated">EscapeDefault::product</target>
        </trans-unit>
        <trans-unit id="3066fefb8e0879b8529af5d94df2a99b0352340f" translate="yes" xml:space="preserve">
          <source>EscapeDefault::rev</source>
          <target state="translated">EscapeDefault::rev</target>
        </trans-unit>
        <trans-unit id="a95f49409576fc45e4143af3adbe9f86767d07fa" translate="yes" xml:space="preserve">
          <source>EscapeDefault::rfind</source>
          <target state="translated">EscapeDefault::rfind</target>
        </trans-unit>
        <trans-unit id="166f8536d102f8f719fcc59c69b0d91b493b991d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::rfold</source>
          <target state="translated">EscapeDefault::rfold</target>
        </trans-unit>
        <trans-unit id="3c4d30f10da77bc2ac5182818f4097d3db5695d6" translate="yes" xml:space="preserve">
          <source>EscapeDefault::rposition</source>
          <target state="translated">EscapeDefault::rposition</target>
        </trans-unit>
        <trans-unit id="f063501d23242be7fe5f46dee09f94e1fdbc4d49" translate="yes" xml:space="preserve">
          <source>EscapeDefault::scan</source>
          <target state="translated">EscapeDefault::scan</target>
        </trans-unit>
        <trans-unit id="6320b8b7ec506ea3976a15ca62499cfbaf384d01" translate="yes" xml:space="preserve">
          <source>EscapeDefault::size_hint</source>
          <target state="translated">EscapeDefault::size_hint</target>
        </trans-unit>
        <trans-unit id="b59f7fbf1a222c7149d4477c8fe971bb1d2be80e" translate="yes" xml:space="preserve">
          <source>EscapeDefault::skip</source>
          <target state="translated">EscapeDefault::skip</target>
        </trans-unit>
        <trans-unit id="177acb056504c667f56fd0ee42606ebca06a010d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::skip_while</source>
          <target state="translated">EscapeDefault::skip_while</target>
        </trans-unit>
        <trans-unit id="79f56c72865ad082ce8614565ca6a5eac037a250" translate="yes" xml:space="preserve">
          <source>EscapeDefault::step_by</source>
          <target state="translated">EscapeDefault::step_by</target>
        </trans-unit>
        <trans-unit id="8571affcda2aebe685239f5251a13e3c68e47f91" translate="yes" xml:space="preserve">
          <source>EscapeDefault::sum</source>
          <target state="translated">EscapeDefault::sum</target>
        </trans-unit>
        <trans-unit id="83340eb53538865e57c916372718139f49b7960c" translate="yes" xml:space="preserve">
          <source>EscapeDefault::take</source>
          <target state="translated">EscapeDefault::take</target>
        </trans-unit>
        <trans-unit id="a2fba6d2c09a902279ea9aa430f6399b1b3fcd42" translate="yes" xml:space="preserve">
          <source>EscapeDefault::take_while</source>
          <target state="translated">EscapeDefault::take_while</target>
        </trans-unit>
        <trans-unit id="e504d7a0bdee17bfdce6673fd1944e04ac8baa12" translate="yes" xml:space="preserve">
          <source>EscapeDefault::to_owned</source>
          <target state="translated">EscapeDefault::to_owned</target>
        </trans-unit>
        <trans-unit id="c3b16c4c1b036937005924214d8a2f44890ced65" translate="yes" xml:space="preserve">
          <source>EscapeDefault::to_string</source>
          <target state="translated">EscapeDefault::to_string</target>
        </trans-unit>
        <trans-unit id="71696d55ed84461f6a461d08b79a6fc78889ef18" translate="yes" xml:space="preserve">
          <source>EscapeDefault::try_fold</source>
          <target state="translated">EscapeDefault::try_fold</target>
        </trans-unit>
        <trans-unit id="05d01804e2a96603271d21c960ce7f5a78dc37ff" translate="yes" xml:space="preserve">
          <source>EscapeDefault::try_for_each</source>
          <target state="translated">EscapeDefault::try_for_each</target>
        </trans-unit>
        <trans-unit id="f2f553b83de134e1e69387ed70158d31efae709d" translate="yes" xml:space="preserve">
          <source>EscapeDefault::try_from</source>
          <target state="translated">EscapeDefault::try_from</target>
        </trans-unit>
        <trans-unit id="10fe68a047717f619d0ff82c61f904c3de7318a3" translate="yes" xml:space="preserve">
          <source>EscapeDefault::try_into</source>
          <target state="translated">EscapeDefault::try_into</target>
        </trans-unit>
        <trans-unit id="c5fa491666370b5b02acd3d86c8aa8678dfdaf61" translate="yes" xml:space="preserve">
          <source>EscapeDefault::try_rfold</source>
          <target state="translated">EscapeDefault::try_rfold</target>
        </trans-unit>
        <trans-unit id="b16d0c0058e4f545309bddf5e58c40882e88f965" translate="yes" xml:space="preserve">
          <source>EscapeDefault::type_id</source>
          <target state="translated">EscapeDefault::type_id</target>
        </trans-unit>
        <trans-unit id="247220328f780b13ca15fb15c8decbd28a2efffa" translate="yes" xml:space="preserve">
          <source>EscapeDefault::unzip</source>
          <target state="translated">EscapeDefault::unzip</target>
        </trans-unit>
        <trans-unit id="743588f5dc429f9c68efc4cced91ad4503444abd" translate="yes" xml:space="preserve">
          <source>EscapeDefault::zip</source>
          <target state="translated">EscapeDefault::zip</target>
        </trans-unit>
        <trans-unit id="5b08d708ad0d47d75358dca66ce2be2b9aba334f" translate="yes" xml:space="preserve">
          <source>EscapeUnicode</source>
          <target state="translated">EscapeUnicode</target>
        </trans-unit>
        <trans-unit id="338163d429dd7fbe43d129f6850e28f4b455efd9" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::all</source>
          <target state="translated">EscapeUnicode::all</target>
        </trans-unit>
        <trans-unit id="628858297365d4a4438fcfc7dd8d30dc698065d3" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::any</source>
          <target state="translated">EscapeUnicode::any</target>
        </trans-unit>
        <trans-unit id="6d63f08209a6bd9dd015c1a1db8ee6e4e7efe023" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::borrow</source>
          <target state="translated">EscapeUnicode::borrow</target>
        </trans-unit>
        <trans-unit id="78577ac6a9c32a2ecd6dc7eb2f887093a3c44560" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::borrow_mut</source>
          <target state="translated">EscapeUnicode::borrow_mut</target>
        </trans-unit>
        <trans-unit id="26218fa4c966e54951938330aa4730f2fcc4d848" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::by_ref</source>
          <target state="translated">EscapeUnicode::by_ref</target>
        </trans-unit>
        <trans-unit id="70ac0e3a423821d9a024a452d05e9d57234e1b6f" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::chain</source>
          <target state="translated">EscapeUnicode::chain</target>
        </trans-unit>
        <trans-unit id="0afc0d46cff70768dfa196b4242ace28d32629bf" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::clone</source>
          <target state="translated">EscapeUnicode::clone</target>
        </trans-unit>
        <trans-unit id="37f61119789d01c80ccad50f93e42088c149ef2a" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::clone_from</source>
          <target state="translated">EscapeUnicode::clone_from</target>
        </trans-unit>
        <trans-unit id="a69a5a523734b43cae2867c9dcd92980762a188a" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::clone_into</source>
          <target state="translated">EscapeUnicode::clone_into</target>
        </trans-unit>
        <trans-unit id="49213d801e9c16a64cb4d65e9e8cf9cd006d7255" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::cloned</source>
          <target state="translated">EscapeUnicode::cloned</target>
        </trans-unit>
        <trans-unit id="09aed60ade949e3fb8bf9aa8a315bec8f74b6d40" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::cmp</source>
          <target state="translated">EscapeUnicode::cmp</target>
        </trans-unit>
        <trans-unit id="e81e4ebf3847459a7993c1387811d34affb83b5e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::collect</source>
          <target state="translated">EscapeUnicode::collect</target>
        </trans-unit>
        <trans-unit id="0d3ab602f00f6cd24f6d047879215a868407079c" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::copied</source>
          <target state="translated">EscapeUnicode::copied</target>
        </trans-unit>
        <trans-unit id="1f7e93442912390be7ac37ec6707ddf060fcdcc3" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::count</source>
          <target state="translated">EscapeUnicode::count</target>
        </trans-unit>
        <trans-unit id="c5816fead6895134e7332fd61a4ebbb93edd4c6e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::cycle</source>
          <target state="translated">EscapeUnicode::cycle</target>
        </trans-unit>
        <trans-unit id="91ebf1a374f53ffe64235dd62d85e7824fdf98fa" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::enumerate</source>
          <target state="translated">EscapeUnicode::enumerate</target>
        </trans-unit>
        <trans-unit id="624c3c4eaa626b53b5f3567a6a0886688bee812c" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::eq</source>
          <target state="translated">EscapeUnicode::eq</target>
        </trans-unit>
        <trans-unit id="1b80627264519a884e250e6abcb99f6a9358c5f4" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::filter</source>
          <target state="translated">EscapeUnicode::filter</target>
        </trans-unit>
        <trans-unit id="6ad3883341432c8fdeca20bec8ed9915dc3e6d9c" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::filter_map</source>
          <target state="translated">EscapeUnicode::filter_map</target>
        </trans-unit>
        <trans-unit id="22af0c82774533dcba3e67943da4985a58b22480" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::find</source>
          <target state="translated">EscapeUnicode::find</target>
        </trans-unit>
        <trans-unit id="8b7a2e416abe07d4d3e4b1477617d8f0e078b759" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::find_map</source>
          <target state="translated">EscapeUnicode::find_map</target>
        </trans-unit>
        <trans-unit id="d0fc0df0f7b1a4cc96b1cd5bfd7fa34c162c3acf" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::flat_map</source>
          <target state="translated">EscapeUnicode::flat_map</target>
        </trans-unit>
        <trans-unit id="e713c66cee1265d7cc9554df7c5e68c1e0c767c2" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::flatten</source>
          <target state="translated">EscapeUnicode::flatten</target>
        </trans-unit>
        <trans-unit id="0caddef2e4978f256b08382e18fec43ab463bdf9" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::fmt</source>
          <target state="translated">EscapeUnicode::fmt</target>
        </trans-unit>
        <trans-unit id="fcef23622002269e5beec9379be0569d62d28f1e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::fold</source>
          <target state="translated">EscapeUnicode::fold</target>
        </trans-unit>
        <trans-unit id="b84872daa6e6195ef4e504f3bd9bd2d6978c769b" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::for_each</source>
          <target state="translated">EscapeUnicode::for_each</target>
        </trans-unit>
        <trans-unit id="1e1ff72b5bb8e76fbe07dd5ba80db36e47e71953" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::from</source>
          <target state="translated">EscapeUnicode::from</target>
        </trans-unit>
        <trans-unit id="00f439e23aadac9efce5955c7043b1d335e59147" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::fuse</source>
          <target state="translated">EscapeUnicode::fuse</target>
        </trans-unit>
        <trans-unit id="c1cd1e99c3b3323e2b471e91ee347505c6c7368c" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::ge</source>
          <target state="translated">EscapeUnicode::ge</target>
        </trans-unit>
        <trans-unit id="ea93c1c8610d8fca3701b3bc68fdc287fe6583a1" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::gt</source>
          <target state="translated">EscapeUnicode::gt</target>
        </trans-unit>
        <trans-unit id="fb6e744c73c6dec1c915a3ccb8df927dbcdac63e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::inspect</source>
          <target state="translated">EscapeUnicode::inspect</target>
        </trans-unit>
        <trans-unit id="04a6919af5c13d6a42719ded258f92f22357619e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::into</source>
          <target state="translated">EscapeUnicode::into</target>
        </trans-unit>
        <trans-unit id="0e571730ac10c717da86bccd36b90ffb3c7a01a3" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::into_iter</source>
          <target state="translated">EscapeUnicode::into_iter</target>
        </trans-unit>
        <trans-unit id="0a0560ff6ccd04bbc6587a17959ae7a43e873b29" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::is_empty</source>
          <target state="translated">EscapeUnicode::is_empty</target>
        </trans-unit>
        <trans-unit id="fb2fe92538e6e612d15c82977d24ceaf3392d54a" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::is_sorted</source>
          <target state="translated">EscapeUnicode::is_sorted</target>
        </trans-unit>
        <trans-unit id="56783676cf0c414af8ea0201e21204493dcbbb61" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::is_sorted_by</source>
          <target state="translated">EscapeUnicode::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="82c350920bf2841c71b78a8cc46f3960f2c60737" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::is_sorted_by_key</source>
          <target state="translated">EscapeUnicode::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="73eb9337b1ba515cef881d025db8cfb9a38db48b" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::last</source>
          <target state="translated">EscapeUnicode::last</target>
        </trans-unit>
        <trans-unit id="0003e23acbc637a64c8355649e271719969c41c3" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::le</source>
          <target state="translated">EscapeUnicode::le</target>
        </trans-unit>
        <trans-unit id="257347191a0fac0135af121b7d5fed9af19c5790" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::len</source>
          <target state="translated">EscapeUnicode::len</target>
        </trans-unit>
        <trans-unit id="0c0366d1822da413e57fa9b0093dc17d9dcfa841" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::lt</source>
          <target state="translated">EscapeUnicode::lt</target>
        </trans-unit>
        <trans-unit id="a9241fdd65a99b328e6ea7b4ddcbea38168f8179" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::map</source>
          <target state="translated">EscapeUnicode::map</target>
        </trans-unit>
        <trans-unit id="dc4a3e1eb5ac1e75b4ddb5fcd83a64e505ed4b4e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::max</source>
          <target state="translated">EscapeUnicode::max</target>
        </trans-unit>
        <trans-unit id="130bf86fe6249b7265d9d38e830de9c52ca3ee5b" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::max_by</source>
          <target state="translated">EscapeUnicode::max_by</target>
        </trans-unit>
        <trans-unit id="46c7b290210cd1e69a1849bfe78d0a563883e983" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::max_by_key</source>
          <target state="translated">EscapeUnicode::max_by_key</target>
        </trans-unit>
        <trans-unit id="920545ee8bea9174479acb1461ae0d24605ec09b" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::min</source>
          <target state="translated">EscapeUnicode::min</target>
        </trans-unit>
        <trans-unit id="110b77ebf9dead9287b5903d1a2154a4259c30d1" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::min_by</source>
          <target state="translated">EscapeUnicode::min_by</target>
        </trans-unit>
        <trans-unit id="f2c43efcdcfbfa14b7a093249b972405956abd53" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::min_by_key</source>
          <target state="translated">EscapeUnicode::min_by_key</target>
        </trans-unit>
        <trans-unit id="3f0d1b302c4945cd77ac97b42b24b796bedeb1e3" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::ne</source>
          <target state="translated">EscapeUnicode::ne</target>
        </trans-unit>
        <trans-unit id="df3d1eb95accf7f741ace476517450fb4dba748d" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::next</source>
          <target state="translated">EscapeUnicode::next</target>
        </trans-unit>
        <trans-unit id="a3acbed68464123dcb4c275bca03968d93b3e671" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::nth</source>
          <target state="translated">EscapeUnicode::nth</target>
        </trans-unit>
        <trans-unit id="642fa545e023f6277acba6e430850c845c7d4003" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::partial_cmp</source>
          <target state="translated">EscapeUnicode::partial_cmp</target>
        </trans-unit>
        <trans-unit id="bc7bdea70b7fcde08556b6c8e91335e1ad5eaa9e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::partition</source>
          <target state="translated">EscapeUnicode::partition</target>
        </trans-unit>
        <trans-unit id="6665ad27e3148710cb4e4fb562fc4ec4db1c47fb" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::peekable</source>
          <target state="translated">EscapeUnicode::peekable</target>
        </trans-unit>
        <trans-unit id="6f8fcc8c70cc7592ca8eaf2b54b9e2ad6eb50b2d" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::position</source>
          <target state="translated">EscapeUnicode::position</target>
        </trans-unit>
        <trans-unit id="4d2fb0cb516e823012d3cb29401298553fa89b16" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::product</source>
          <target state="translated">EscapeUnicode::product</target>
        </trans-unit>
        <trans-unit id="303570e879b1f6e790aaa3671f13e9fe7a626010" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::rev</source>
          <target state="translated">EscapeUnicode::rev</target>
        </trans-unit>
        <trans-unit id="0c8213cad840a995661998ea79bdc9dd67ad5163" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::rposition</source>
          <target state="translated">EscapeUnicode::rposition</target>
        </trans-unit>
        <trans-unit id="e0ae3f548940995a9b9ad36014afc4f6eb030555" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::scan</source>
          <target state="translated">EscapeUnicode::scan</target>
        </trans-unit>
        <trans-unit id="7a61e7c2e293a853a6c95c255171c877e9c89185" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::size_hint</source>
          <target state="translated">EscapeUnicode::size_hint</target>
        </trans-unit>
        <trans-unit id="90012f3506f0e7514a7ee8681a74ca203cc2725f" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::skip</source>
          <target state="translated">EscapeUnicode::skip</target>
        </trans-unit>
        <trans-unit id="e9dadfa112cc4b631f57be703d4fce65b9640b92" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::skip_while</source>
          <target state="translated">EscapeUnicode::skip_while</target>
        </trans-unit>
        <trans-unit id="c9739decdfa52577bf97064b6a35f26103da22bd" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::step_by</source>
          <target state="translated">EscapeUnicode::step_by</target>
        </trans-unit>
        <trans-unit id="1ab839dc8dec9b3051d8d0f3c1c2bea92372898e" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::sum</source>
          <target state="translated">EscapeUnicode::sum</target>
        </trans-unit>
        <trans-unit id="894b4b1223d7aabca2df42e4e23d7469b01e534b" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::take</source>
          <target state="translated">EscapeUnicode::take</target>
        </trans-unit>
        <trans-unit id="50095ec963d926ad273ce8f7680857fdc6d99883" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::take_while</source>
          <target state="translated">EscapeUnicode::take_while</target>
        </trans-unit>
        <trans-unit id="89951cb4016665275a1f0c79d63c3a41d48b9bbc" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::to_owned</source>
          <target state="translated">EscapeUnicode::to_owned</target>
        </trans-unit>
        <trans-unit id="9c010d42b1b68dd68e35100205cc6b9b13b87ceb" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::to_string</source>
          <target state="translated">EscapeUnicode::to_string</target>
        </trans-unit>
        <trans-unit id="2a2492f0b69674651dcf41e24aca83b747264abb" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::try_fold</source>
          <target state="translated">EscapeUnicode::try_fold</target>
        </trans-unit>
        <trans-unit id="abdbdf8e5fdbc93bccdba1f8f4b3d554e0588d03" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::try_for_each</source>
          <target state="translated">EscapeUnicode::try_for_each</target>
        </trans-unit>
        <trans-unit id="499fc66c5b31571d53103934f102bd44ecc45003" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::try_from</source>
          <target state="translated">EscapeUnicode::try_from</target>
        </trans-unit>
        <trans-unit id="7c689d351d4d6b0dd069f827dafcd20d09391602" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::try_into</source>
          <target state="translated">EscapeUnicode::try_into</target>
        </trans-unit>
        <trans-unit id="ca5591fdf66699030e3f72b363a9b43416735ad7" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::type_id</source>
          <target state="translated">EscapeUnicode::type_id</target>
        </trans-unit>
        <trans-unit id="e8a0c661607f4a50cd01e13dc6f5a9fa5b042bb1" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::unzip</source>
          <target state="translated">EscapeUnicode::unzip</target>
        </trans-unit>
        <trans-unit id="8d40fc69a25f77fbcf7dc2e7f43271b1e57cfd55" translate="yes" xml:space="preserve">
          <source>EscapeUnicode::zip</source>
          <target state="translated">EscapeUnicode::zip</target>
        </trans-unit>
        <trans-unit id="a93a4e0ef80150a1a033177365048c386c52720b" translate="yes" xml:space="preserve">
          <source>Escapes</source>
          <target state="translated">Escapes</target>
        </trans-unit>
        <trans-unit id="2779ea444cb47200f1b0085d04662b33c09fc23f" translate="yes" xml:space="preserve">
          <source>Escaping</source>
          <target state="translated">Escaping</target>
        </trans-unit>
        <trans-unit id="4c2c45d27a40b2998f04b13b9d7872a526ef8792" translate="yes" xml:space="preserve">
          <source>Esperanto</source>
          <target state="translated">Esperanto</target>
        </trans-unit>
        <trans-unit id="768321cc50f5d114bfad1c578f68791ccf6e88fb" translate="yes" xml:space="preserve">
          <source>Euler's number (e)</source>
          <target state="translated">오일러 수 (e)</target>
        </trans-unit>
        <trans-unit id="31cbd333cae389613a7fb2ed2211d9e0c3b3f093" translate="yes" xml:space="preserve">
          <source>Evaluate a block if a condition holds.</source>
          <target state="translated">조건이 유지되는 경우 블록을 평가하십시오.</target>
        </trans-unit>
        <trans-unit id="a44f082e00d0add30a3696eec24a505adfd8f6c0" translate="yes" xml:space="preserve">
          <source>Evaluates boolean combinations of configuration flags at compile-time.</source>
          <target state="translated">컴파일 타임에 구성 플래그의 부울 조합을 평가합니다.</target>
        </trans-unit>
        <trans-unit id="4d9da6da0ea8c2a843cd3b868ef90237e224509e" translate="yes" xml:space="preserve">
          <source>Evaluating an assignment expression &lt;a href=&quot;../destructors&quot;&gt;drops&lt;/a&gt; the left-hand operand, unless it's an uninitialized local variable or field of a local variable, and &lt;a href=&quot;../expressions#moved-and-copied-types&quot;&gt;either copies or moves&lt;/a&gt; its right-hand operand to its left-hand operand. The left-hand operand must be a place expression: using a value expression results in a compiler error, rather than promoting it to a temporary.</source>
          <target state="translated">대입 식을 평가하는 &lt;a href=&quot;../destructors&quot;&gt;상품&lt;/a&gt; 이 로컬 변수의 초기화되지 않은 로컬 변수 또는 필드, 그리고 않는 왼쪽을 연산 &lt;a href=&quot;../expressions#moved-and-copied-types&quot;&gt;중 복사 또는 이동&lt;/a&gt; 피연산자의 좌측에 피연산자는 우측한다. 왼쪽 피연산자는 장소 표현식이어야합니다. 값 표현식을 사용하면 임시로 승격하는 대신 컴파일러 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8ee0ecdb4fa4e379f7068e7406054da1ee3b3dcc" translate="yes" xml:space="preserve">
          <source>Even after we&amp;rsquo;ve called &lt;code&gt;add_text&lt;/code&gt; and added some content to our post, we still want the &lt;code&gt;content&lt;/code&gt; method to return an empty string slice because the post is still in the draft state, as shown on line 7 of Listing 17-11. For now, let&amp;rsquo;s implement the &lt;code&gt;content&lt;/code&gt; method with the simplest thing that will fulfill this requirement: always returning an empty string slice. We&amp;rsquo;ll change this later once we implement the ability to change a post&amp;rsquo;s state so it can be published. So far, posts can only be in the draft state, so the post content should always be empty. Listing 17-14 shows this placeholder implementation:</source>
          <target state="translated">&lt;code&gt;add_text&lt;/code&gt; 를 호출 하고 게시물에 일부 내용을 추가 한 후에도 목록 17-11의 7 행에 표시된 것처럼 게시물이 아직 초안 상태이므로 &lt;code&gt;content&lt;/code&gt; 메소드가 빈 문자열 슬라이스를 반환하기를 원합니다 . 지금 은이 요구 사항을 충족시키는 가장 간단한 방법으로 &lt;code&gt;content&lt;/code&gt; 메소드를 구현해 봅시다 . 항상 빈 문자열 슬라이스를 리턴합니다. 게시물의 상태를 변경하여 게시 할 수있는 기능을 구현하면 나중에 변경하겠습니다. 지금까지 게시물은 초안 상태 일 수 있으므로 게시물 내용은 항상 비어 있어야합니다. Listing 17-14는이 자리 표시 자 구현을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="37d0141ea9c61ae4a6562b3cf98eab7edd31ea09" translate="yes" xml:space="preserve">
          <source>Even if we remove the implementation of &lt;code&gt;Drop&lt;/code&gt; for &lt;code&gt;HasTwoDrop&lt;/code&gt;, the destructors of its fields are still called. This would result in</source>
          <target state="translated">&lt;code&gt;Drop&lt;/code&gt; for &lt;code&gt;HasTwoDrop&lt;/code&gt; 구현을 제거하더라도 해당 필드의 소멸자는 여전히 호출됩니다. 이로 인해</target>
        </trans-unit>
        <trans-unit id="ab173ff29f7b7004702d67804fc33628bc12a45e" translate="yes" xml:space="preserve">
          <source>Even if you&amp;rsquo;ve chosen a unique name, when you run &lt;code&gt;cargo publish&lt;/code&gt; to publish the crate at this point, you&amp;rsquo;ll get a warning and then an error:</source>
          <target state="translated">고유 한 이름을 선택한 경우에도 &lt;code&gt;cargo publish&lt;/code&gt; 를 실행 하여이 시점에서 상자를 게시하면 경고가 표시되고 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6ec55377ca5df23ef0219d7b6e615849e8e678c8" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; is a single token (&lt;a href=&quot;#lazy-boolean-operators&quot;&gt;the lazy 'and' operator&lt;/a&gt;), when used in the context of borrow expressions it works as two borrows:</source>
          <target state="translated">&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 가 단일 토큰 ( &lt;a href=&quot;#lazy-boolean-operators&quot;&gt;게으른 'and'연산자&lt;/a&gt; ) 임에도 불구하고 , 차용 식의 컨텍스트에서 사용되면 두 차용으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="420077d5f09a0ce345e8fa51720467e57996c78f" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; is a single token (&lt;a href=&quot;operator-expr#lazy-boolean-operators&quot;&gt;the lazy 'and' operator&lt;/a&gt;), when used in the context of borrow expressions it works as two borrows:</source>
          <target state="translated">비록 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 는 하나의 토큰 (이다 &lt;a href=&quot;operator-expr#lazy-boolean-operators&quot;&gt;게으른 '와'연산자&lt;/a&gt; 는 두 차용로 작동 빌려 표현의 맥락에서 사용) :</target>
        </trans-unit>
        <trans-unit id="035cb7335b9071630d76a6cac22f3690d8a901ec" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; has the same representation and C ABI as a C pointer, this does not mean that you can convert an arbitrary &lt;code&gt;T*&lt;/code&gt; into a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; and expect things to work. &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; values will always be fully aligned, non-null pointers. Moreover, the destructor for &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; will attempt to free the value with the global allocator. In general, the best practice is to only use &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; for pointers that originated from the global allocator.</source>
          <target state="translated">비록 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 는 C 포인터와 같은 표현과 C ABI를 가지고, 이것은 당신이 임의 변환 할 수있는 것을 의미하지 않는다 &lt;code&gt;T*&lt;/code&gt; 에 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 작업에 일을 기대합니다. &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 값은 항상 완전히 정렬되고 null이 아닌 포인터입니다. 또한 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 의 소멸자 는 전역 할당 자로 값을 해제하려고합니다. 일반적으로 가장 좋은 방법은 전역 할당 자에서 시작된 포인터 에 대해서만 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 를 사용 하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="91ee5e90d74ce606b0229131c8cc64d6f3ee06e7" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;is_null()&lt;/code&gt; exists as a method on any raw pointer, Rust shows this error because Rust allows for &lt;code&gt;self&lt;/code&gt; to have arbitrary types (behind the arbitrary_self_types feature flag).</source>
          <target state="translated">&lt;code&gt;is_null()&lt;/code&gt; 이 모든 원시 포인터에 메소드로 존재 하더라도 Rust는 &lt;code&gt;self&lt;/code&gt; 가 임의의 유형 (임의의 _self_types 기능 플래그 뒤에 있음)을 가질 수 있기 때문에이 오류를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="8c186a95c8257fdcb7a8df67d4c166687bcdf7e1" translate="yes" xml:space="preserve">
          <source>Even though Listing 5-8 works and figures out the area of the rectangle by calling the &lt;code&gt;area&lt;/code&gt; function with each dimension, we can do better. The width and the height are related to each other because together they describe one rectangle.</source>
          <target state="translated">목록 5-8이 작동하고 각 차원마다 &lt;code&gt;area&lt;/code&gt; 함수를 호출하여 사각형의 영역을 파악 하더라도 더 잘 수행 할 수 있습니다. 너비와 높이는 함께 하나의 사각형을 설명하기 때문에 서로 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb06d2c8b3d18e861072fe22916749403b015e47" translate="yes" xml:space="preserve">
          <source>Even though borrowing errors may be frustrating at times, remember that it&amp;rsquo;s the Rust compiler pointing out a potential bug early (at compile time rather than at runtime) and showing you exactly where the problem is. Then you don&amp;rsquo;t have to track down why your data isn&amp;rsquo;t what you thought it was.</source>
          <target state="translated">차용 오류는 때때로 실망 스럽지만 Rust 컴파일러는 잠재적 버그를 조기에 (런타임이 아닌 컴파일 타임에) 지적하고 문제의 정확한 위치를 보여줍니다. 그런 다음 왜 데이터가 생각과 다른지 추적 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="8ee3f464e87cacd50ef37867b4262b1a2c8adac6" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;hello_cargo&lt;/code&gt; project is simple, it now uses much of the real tooling you&amp;rsquo;ll use in the rest of your Rust career. In fact, to work on any existing projects, you can use the following commands to check out the code using Git, change to that project&amp;rsquo;s directory, and build:</source>
          <target state="translated">짝수하지만 &lt;code&gt;hello_cargo&lt;/code&gt; 의 프로젝트는 간단합니다, 지금 당신은 당신의 녹 경력의 나머지 부분에 사용합니다 실제 도구의 대부분을 사용합니다. 실제로 기존 프로젝트에서 작업하려면 다음 명령을 사용하여 Git을 사용하여 코드를 확인하고 해당 프로젝트 디렉토리로 변경 한 후 빌드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8a4a7fb26f3188e28a4219c11d55ad8831cf7cd" translate="yes" xml:space="preserve">
          <source>Even though we&amp;rsquo;re no longer defining the &lt;code&gt;summarize&lt;/code&gt; method on &lt;code&gt;NewsArticle&lt;/code&gt; directly, we&amp;rsquo;ve provided a default implementation and specified that &lt;code&gt;NewsArticle&lt;/code&gt; implements the &lt;code&gt;Summary&lt;/code&gt; trait. As a result, we can still call the &lt;code&gt;summarize&lt;/code&gt; method on an instance of &lt;code&gt;NewsArticle&lt;/code&gt;, like this:</source>
          <target state="translated">더 이상 &lt;code&gt;NewsArticle&lt;/code&gt; 에서 &lt;code&gt;summarize&lt;/code&gt; 메소드를 직접 정의하지 않더라도 기본 구현을 제공하고 &lt;code&gt;NewsArticle&lt;/code&gt; 이 &lt;code&gt;Summary&lt;/code&gt; 특성을 구현하도록 지정했습니다 . 그 결과, 우리는 여전히 호출 할 수 있습니다 &lt;code&gt;summarize&lt;/code&gt; 인스턴스에 방법을 &lt;code&gt;NewsArticle&lt;/code&gt; 과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="fbb0e8f1a58e917e841b10b78e92da6dc706ef76" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;break&lt;/code&gt; in a loop has to have the same type. When it's not explicitly giving something, &lt;code&gt;break;&lt;/code&gt; returns &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">루프의 모든 &lt;code&gt;break&lt;/code&gt; 는 같은 유형이어야합니다. 명시 적으로 무언가를 제공하지 않으면 &lt;code&gt;break;&lt;/code&gt; &lt;code&gt;()&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bc778fc30ee752a7d4f4f19d38c17a4680a1a896" translate="yes" xml:space="preserve">
          <source>Every associated item kind comes in two varieties: definitions that contain the actual implementation and declarations that declare signatures for definitions.</source>
          <target state="translated">모든 관련 항목 종류는 두 가지 종류로 제공됩니다. 실제 구현을 포함하는 정의와 정의의 서명을 선언하는 선언입니다.</target>
        </trans-unit>
        <trans-unit id="223636711bd916c83b0c1c1d50bb03c43f02e7d8" translate="yes" xml:space="preserve">
          <source>Every binding in each &lt;code&gt;|&lt;/code&gt; separated pattern must appear in all of the patterns in the arm. Every binding of the same name must have the same type, and have the same binding mode.</source>
          <target state="translated">각각의 모든 바인딩 &lt;code&gt;|&lt;/code&gt; 분리 된 패턴은 팔의 모든 패턴에 나타나야합니다. 동일한 이름의 모든 바인딩은 동일한 유형이어야하며 동일한 바인딩 모드를 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="f737446eafc5a17a8ec946c9c5af55ffd56f7fc6" translate="yes" xml:space="preserve">
          <source>Every programming language has tools for effectively handling the duplication of concepts. In Rust, one such tool is &lt;em&gt;generics&lt;/em&gt;. Generics are abstract stand-ins for concrete types or other properties. When we&amp;rsquo;re writing code, we can express the behavior of generics or how they relate to other generics without knowing what will be in their place when compiling and running the code.</source>
          <target state="translated">모든 프로그래밍 언어에는 개념 복제를 효과적으로 처리하기위한 도구가 있습니다. Rust에서 그러한 도구 중 하나는 &lt;em&gt;generics&lt;/em&gt; 입니다. 제네릭은 콘크리트 유형 또는 기타 속성에 대한 추상 스탠드 인입니다. 코드를 작성할 때 코드를 컴파일하고 실행할 때 어떤 위치에 있는지 알지 않고도 제네릭의 동작 또는 다른 제네릭과의 관계를 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4e5ea4250d5e82010eb406e2a4f6595cd8eb17e" translate="yes" xml:space="preserve">
          <source>Every reference to a value of the type &lt;code&gt;T&lt;/code&gt; must be a multiple of this number.</source>
          <target state="translated">유형 &lt;code&gt;T&lt;/code&gt; 의 값에 대한 모든 참조 는이 숫자의 배수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="b2b297070b39157818fb52cce13340b22664a05d" translate="yes" xml:space="preserve">
          <source>Every six weeks, it&amp;rsquo;s time to prepare a new release! The &lt;code&gt;beta&lt;/code&gt; branch of the Rust repository branches off from the &lt;code&gt;master&lt;/code&gt; branch used by nightly. Now, there are two releases:</source>
          <target state="translated">6 주마다 새로운 릴리스를 준비 할 때입니다! Rust 저장소 의 &lt;code&gt;beta&lt;/code&gt; 지점은 야간에 사용되는 &lt;code&gt;master&lt;/code&gt; 지점에서 분기됩니다. 이제 두 가지 릴리스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b368f07214c45db61fd3d58dd74504e2a16a0b1" translate="yes" xml:space="preserve">
          <source>Every thread is equipped with some basic low-level blocking support, via the &lt;a href=&quot;fn.park&quot;&gt;&lt;code&gt;park&lt;/code&gt;&lt;/a&gt; function and the &lt;code&gt;unpark()&lt;/code&gt; method. These can be used as a more CPU-efficient implementation of a spinlock.</source>
          <target state="translated">모든 스레드에는 &lt;a href=&quot;fn.park&quot;&gt; &lt;code&gt;park&lt;/code&gt; &lt;/a&gt; 함수 및 &lt;code&gt;unpark()&lt;/code&gt; 메소드 를 통해 기본적인 저수준 차단 지원 기능이 있습니다. 이들은 스핀 록의 CPU 효율이 높은 구현으로 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3fd2a9561db500bb9d0da237c1cbe58bde7a76a" translate="yes" xml:space="preserve">
          <source>Every thread is equipped with some basic low-level blocking support, via the &lt;a href=&quot;fn.park&quot;&gt;&lt;code&gt;thread::park&lt;/code&gt;&lt;/a&gt; function and &lt;a href=&quot;struct.thread#method.unpark&quot;&gt;&lt;code&gt;thread::Thread::unpark&lt;/code&gt;&lt;/a&gt; method. &lt;a href=&quot;fn.park&quot;&gt;&lt;code&gt;park&lt;/code&gt;&lt;/a&gt; blocks the current thread, which can then be resumed from another thread by calling the &lt;a href=&quot;struct.thread#method.unpark&quot;&gt;&lt;code&gt;unpark&lt;/code&gt;&lt;/a&gt; method on the blocked thread's handle.</source>
          <target state="translated">모든 스레드에는 &lt;a href=&quot;fn.park&quot;&gt; &lt;code&gt;thread::park&lt;/code&gt; &lt;/a&gt; 함수 및 &lt;a href=&quot;struct.thread#method.unpark&quot;&gt; &lt;code&gt;thread::Thread::unpark&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 기본적인 저수준 차단 지원 기능이 있습니다. &lt;a href=&quot;fn.park&quot;&gt; &lt;code&gt;park&lt;/code&gt; &lt;/a&gt; 은 현재 스레드를 차단 한 다음 차단 된 스레드 핸들 에서 &lt;a href=&quot;struct.thread#method.unpark&quot;&gt; &lt;code&gt;unpark&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 다른 스레드에서 재개 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2e699d3d67c0cff58c1aa9e18f48ce00d748e2e" translate="yes" xml:space="preserve">
          <source>Every two or three years, the Rust team produces a new Rust &lt;em&gt;edition&lt;/em&gt;. Each edition brings together the features that have landed into a clear package with fully updated documentation and tooling. New editions ship as part of the usual six-week release process.</source>
          <target state="translated">2 ~ 3 년마다 Rust 팀은 새로운 Rust &lt;em&gt;에디션을 제작&lt;/em&gt; 합니다. 각 버전은 완전히 업데이트 된 설명서 및 툴링을 통해 명확한 패키지에 포함 된 기능을 통합합니다. 새 버전은 일반적인 6 주 릴리스 프로세스의 일부로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="53b902771046989665a92604fb9ab46703388afa" translate="yes" xml:space="preserve">
          <source>Every value in Rust is of a certain &lt;em&gt;data type&lt;/em&gt;, which tells Rust what kind of data is being specified so it knows how to work with that data. We&amp;rsquo;ll look at two data type subsets: scalar and compound.</source>
          <target state="translated">Rust의 모든 값은 특정 &lt;em&gt;데이터 유형으로&lt;/em&gt; , Rust에게 어떤 종류의 데이터가 지정되는지 알려주므로 해당 데이터로 작업하는 방법을 알 수 있습니다. 스칼라와 복합의 두 가지 데이터 유형 하위 집합을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="c0bb7784cb1f387d176d36590603da6e68c6346f" translate="yes" xml:space="preserve">
          <source>Every variable, item and value in a Rust program has a type. The &lt;em&gt;type&lt;/em&gt; of a &lt;em&gt;value&lt;/em&gt; defines the interpretation of the memory holding it and the operations that may be performed on the value.</source>
          <target state="translated">Rust 프로그램의 모든 변수, 항목 및 값에는 유형이 있습니다. &lt;em&gt;값&lt;/em&gt; 의 &lt;em&gt;유형&lt;/em&gt; 은 &lt;em&gt;값을&lt;/em&gt; 보유한 메모리의 해석 및 값에 대해 수행 될 수있는 조작을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a7ba8dc4d2e8318330c227618f02b6a3d6a485d1" translate="yes" xml:space="preserve">
          <source>Every variable, item, and value in a Rust program has a type. The &lt;em&gt;type&lt;/em&gt; of a &lt;em&gt;value&lt;/em&gt; defines the interpretation of the memory holding it and the operations that may be performed on the value.</source>
          <target state="translated">Rust 프로그램의 모든 변수, 항목 및 값에는 유형이 있습니다. &lt;em&gt;값&lt;/em&gt; 의 &lt;em&gt;유형&lt;/em&gt; 은 &lt;em&gt;값을&lt;/em&gt; 보유하는 메모리의 해석과 값에 대해 수행 될 수있는 작업을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="e5d0186e8728baeab6c41facdf93f768a88a492b" translate="yes" xml:space="preserve">
          <source>Everything possible with &lt;code&gt;Copy&lt;/code&gt; you can also accomplish with &lt;code&gt;Clone&lt;/code&gt;, but the code might be slower or have to use &lt;code&gt;clone&lt;/code&gt; in places.</source>
          <target state="translated">&lt;code&gt;Copy&lt;/code&gt; 가능한 모든 것은 &lt;code&gt;Clone&lt;/code&gt; 으로 도 달성 할 수 있지만 코드가 느리거나 &lt;code&gt;clone&lt;/code&gt; 을 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="3146101ecfa785f2d78080e0cc6a0d3503e3150a" translate="yes" xml:space="preserve">
          <source>ExactSizeIterator</source>
          <target state="translated">ExactSizeIterator</target>
        </trans-unit>
        <trans-unit id="41cf591951d2d7beb31eb3343cd4db3af8e57c20" translate="yes" xml:space="preserve">
          <source>ExactSizeIterator::is_empty</source>
          <target state="translated">ExactSizeIterator::is_empty</target>
        </trans-unit>
        <trans-unit id="751cc21500a7d7ee17b2f0da7fa4415a88a14eff" translate="yes" xml:space="preserve">
          <source>ExactSizeIterator::len</source>
          <target state="translated">ExactSizeIterator::len</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="ea72eaaf017adfe62fdd1e99e5bfc7eafbab0c64" translate="yes" xml:space="preserve">
          <source>Example of erroneous code (on a stable compiler):</source>
          <target state="translated">잘못된 코드의 예 (안정적인 컴파일러) :</target>
        </trans-unit>
        <trans-unit id="d1be55f5a5e8633f6ca767327d6ffbd2b73f390b" translate="yes" xml:space="preserve">
          <source>Example of erroneous code:</source>
          <target state="translated">잘못된 코드의 예 :</target>
        </trans-unit>
        <trans-unit id="be4b93eb6f82c4178ceabca452a27ceb4158ddd6" translate="yes" xml:space="preserve">
          <source>Example of illegal &lt;code&gt;DispatchFromDyn&lt;/code&gt; implementation (illegal because of extra field)</source>
          <target state="translated">잘못된 &lt;code&gt;DispatchFromDyn&lt;/code&gt; 구현 예 (추가 필드로 인한 불법)</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">사용법 예 :</target>
        </trans-unit>
        <trans-unit id="7629d161925d53d8c07052430e5179b9cd73df9f" translate="yes" xml:space="preserve">
          <source>Example values:</source>
          <target state="translated">예제 값 :</target>
        </trans-unit>
        <trans-unit id="fe024fc50c42665f35ef632be8bce2be9071e454" translate="yes" xml:space="preserve">
          <source>Example with a slice:</source>
          <target state="translated">슬라이스가있는 예 :</target>
        </trans-unit>
        <trans-unit id="544ec83edaaeafcc4cc305d0e2e6d04b135cc057" translate="yes" xml:space="preserve">
          <source>Example with an array with a fixed length:</source>
          <target state="translated">길이가 고정 된 배열의 예 :</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="230703cf217e08cd431878d7b6d6b7ff5ccb00db" translate="yes" xml:space="preserve">
          <source>Example: intrusive doubly-linked list</source>
          <target state="translated">예 : 이중 연결리스트</target>
        </trans-unit>
        <trans-unit id="a363e70ae555493671c2074eba9434f0f10d22e4" translate="yes" xml:space="preserve">
          <source>Example: self-referential struct</source>
          <target state="translated">예 : 자기 참조 구조체</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="504949c19448e1d28dd86072199a95c3060c8653" translate="yes" xml:space="preserve">
          <source>Examples for byte string literals:</source>
          <target state="translated">바이트 문자열 리터럴의 예 :</target>
        </trans-unit>
        <trans-unit id="65f96bb6473bf49ea5a2532013969ed04304777b" translate="yes" xml:space="preserve">
          <source>Examples for string literals:</source>
          <target state="translated">문자열 리터럴의 예 :</target>
        </trans-unit>
        <trans-unit id="2b9f5ebc8bf70f5cd20a64246adda6fce8d80cb9" translate="yes" xml:space="preserve">
          <source>Examples of FIRST and LAST</source>
          <target state="translated">첫 번째와 마지막 예</target>
        </trans-unit>
        <trans-unit id="4f69dc35c5188614946261cae793c365f8f070ba" translate="yes" xml:space="preserve">
          <source>Examples of FOLLOW for complex M:</source>
          <target state="translated">복잡한 M에 대한 FOLLOW의 예 :</target>
        </trans-unit>
        <trans-unit id="475ed2196b5eed6aae0929450b2e017a53d203e7" translate="yes" xml:space="preserve">
          <source>Examples of erroneous code:</source>
          <target state="translated">잘못된 코드의 예 :</target>
        </trans-unit>
        <trans-unit id="e44283640465bc24f4846139632af27bff59f97f" translate="yes" xml:space="preserve">
          <source>Examples of floating-point literals of various forms:</source>
          <target state="translated">다양한 형식의 부동 소수점 리터럴 예 :</target>
        </trans-unit>
        <trans-unit id="20265a7ac86f2018ea7005f50471da3fc3f072e7" translate="yes" xml:space="preserve">
          <source>Examples of integer literals of various forms:</source>
          <target state="translated">다양한 형식의 정수 리터럴 예 :</target>
        </trans-unit>
        <trans-unit id="3940a23e3ef887983adab9997e687a55b439de86" translate="yes" xml:space="preserve">
          <source>Examples of invalid integer literals:</source>
          <target state="translated">유효하지 않은 정수 리터럴의 예 :</target>
        </trans-unit>
        <trans-unit id="2b25c77bfdf1d1552ef0bbfa469ce8d62e5fd274" translate="yes" xml:space="preserve">
          <source>Examples of operations that require the trait</source>
          <target state="translated">특성이 필요한 작업의 예</target>
        </trans-unit>
        <trans-unit id="b9acf60b57b2d3b797f6ad69be2caed995f4289f" translate="yes" xml:space="preserve">
          <source>Examples of this error include:</source>
          <target state="translated">이 오류의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="100ef8f675809d602a846ef1b2275dd4f7faaa08" translate="yes" xml:space="preserve">
          <source>Examples of valid and invalid matchers</source>
          <target state="translated">유효하고 유효하지 않은 매처의 예</target>
        </trans-unit>
        <trans-unit id="747dd22ecd6b689c0e332fe68ec6f6bb31f239fe" translate="yes" xml:space="preserve">
          <source>Examples, Prototype Code, and Tests</source>
          <target state="translated">예제, 프로토 타입 코드 및 테스트</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="43a61309e189219e20c136cf9a618743f41e2459" translate="yes" xml:space="preserve">
          <source>Excellent! We&amp;rsquo;ve built our own mini version of a classic tool and learned a lot about how to structure applications. We&amp;rsquo;ve also learned a bit about file input and output, lifetimes, testing, and command line parsing.</source>
          <target state="translated">우수한! 우리는 고전적인 도구의 미니 버전을 만들었고 응용 프로그램을 구성하는 방법에 대해 많은 것을 배웠습니다. 또한 파일 입력 및 출력, 수명, 테스트 및 명령 줄 구문 분석에 대해 약간 배웠습니다.</target>
        </trans-unit>
        <trans-unit id="0a19b54597560e3b4fb3dfb50c3ffd609d90b30b" translate="yes" xml:space="preserve">
          <source>Excellent, we also got lines containing &amp;ldquo;To&amp;rdquo;! Our &lt;code&gt;minigrep&lt;/code&gt; program can now do case-insensitive searching controlled by an environment variable. Now you know how to manage options set using either command line arguments or environment variables.</source>
          <target state="translated">훌륭합니다.&amp;ldquo;To&amp;rdquo;가 포함 된 줄도 있습니다! 우리 &lt;code&gt;minigrep&lt;/code&gt; 의 프로그램은 이제 환경 변수에 의해 제어 대소 문자를 구분 검색을 할 수 있습니다. 이제 명령 행 인수 또는 환경 변수를 사용하여 옵션 세트를 관리하는 방법을 알게되었습니다.</target>
        </trans-unit>
        <trans-unit id="a1ad1cd0df10d5b78ddd5c10568c7b6ba49956bd" translate="yes" xml:space="preserve">
          <source>Excess</source>
          <target state="translated">Excess</target>
        </trans-unit>
        <trans-unit id="213ac679129944cf35b52d3f166247a3476e33dd" translate="yes" xml:space="preserve">
          <source>Excess::borrow</source>
          <target state="translated">Excess::borrow</target>
        </trans-unit>
        <trans-unit id="2aa3ff98b7c6f889ec18867c1d879d31601fb976" translate="yes" xml:space="preserve">
          <source>Excess::borrow_mut</source>
          <target state="translated">Excess::borrow_mut</target>
        </trans-unit>
        <trans-unit id="69de6edf75670f83bf3d8c7612c28b32864662df" translate="yes" xml:space="preserve">
          <source>Excess::fmt</source>
          <target state="translated">Excess::fmt</target>
        </trans-unit>
        <trans-unit id="bae672085f5259844ae325ef19a7fbc823650dc3" translate="yes" xml:space="preserve">
          <source>Excess::from</source>
          <target state="translated">Excess::from</target>
        </trans-unit>
        <trans-unit id="3363cf55711fe555cd263a5f080aea1e2742f961" translate="yes" xml:space="preserve">
          <source>Excess::into</source>
          <target state="translated">Excess::into</target>
        </trans-unit>
        <trans-unit id="424dd77390342ae96d6be4663e2d673101095f6a" translate="yes" xml:space="preserve">
          <source>Excess::try_from</source>
          <target state="translated">Excess::try_from</target>
        </trans-unit>
        <trans-unit id="186dd3392df9a7ea057cfa2caeb2981aafeba862" translate="yes" xml:space="preserve">
          <source>Excess::try_into</source>
          <target state="translated">Excess::try_into</target>
        </trans-unit>
        <trans-unit id="fb79516f9afb5e67966091ce36a4e5750009a75b" translate="yes" xml:space="preserve">
          <source>Excess::type_id</source>
          <target state="translated">Excess::type_id</target>
        </trans-unit>
        <trans-unit id="6844909cde8e4da71d8365e268bda7441f803c28" translate="yes" xml:space="preserve">
          <source>Executes a breakpoint trap, for inspection by a debugger.</source>
          <target state="translated">디버거에서 검사하기 위해 중단 점 트랩을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="7d5df1b7eb69039d1df43d4fce510e000a51b106" translate="yes" xml:space="preserve">
          <source>Executes a command as a child process, waiting for it to finish and collecting its exit status.</source>
          <target state="translated">하위 프로세스로 명령을 실행하여 완료 될 때까지 대기하고 종료 상태를 수집합니다.</target>
        </trans-unit>
        <trans-unit id="6a9be9437f2e17bce8bdfe27c265a90a0b3b13c8" translate="yes" xml:space="preserve">
          <source>Executes an operation of the &lt;code&gt;IPV6_ADD_MEMBERSHIP&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;IPV6_ADD_MEMBERSHIP&lt;/code&gt; 유형 의 작업을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="0570b69919b49638c7581c2f5f7e745acac96b18" translate="yes" xml:space="preserve">
          <source>Executes an operation of the &lt;code&gt;IPV6_DROP_MEMBERSHIP&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;IPV6_DROP_MEMBERSHIP&lt;/code&gt; 유형 의 작업을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="40fbdcbcf3c3fc0f5d4fb231720c04e19886ed36" translate="yes" xml:space="preserve">
          <source>Executes an operation of the &lt;code&gt;IP_ADD_MEMBERSHIP&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;IP_ADD_MEMBERSHIP&lt;/code&gt; 유형 의 작업을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="95072943c905b0126c579c18ad7e5ab7d362940a" translate="yes" xml:space="preserve">
          <source>Executes an operation of the &lt;code&gt;IP_DROP_MEMBERSHIP&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;IP_DROP_MEMBERSHIP&lt;/code&gt; 유형 의 작업을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="6743cba9287a9caaff1cd440b7d64282c6049053" translate="yes" xml:space="preserve">
          <source>Executes the command as a child process, returning a handle to it.</source>
          <target state="translated">자식 프로세스로 명령을 실행하고 핸들을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b30f963dd62b9cb6f21b5fac9b505666d74b5221" translate="yes" xml:space="preserve">
          <source>Executes the command as a child process, waiting for it to finish and collecting all of its output.</source>
          <target state="translated">명령을 하위 프로세스로 실행하여 완료 될 때까지 기다렸다가 모든 출력을 수집합니다.</target>
        </trans-unit>
        <trans-unit id="2817cb06c5b73332022cf111098d6bcb52bffbf9" translate="yes" xml:space="preserve">
          <source>Executes the destructor (if any) of the pointed-to value.</source>
          <target state="translated">지정된 값의 소멸자 (있는 경우)를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="17bebc4fe982bc5987b474e37f88af148d80ee3a" translate="yes" xml:space="preserve">
          <source>Executes the destructor for this type.</source>
          <target state="translated">이 유형의 소멸자를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="52c42692b06f8f96ca5eac28d8eb9b409a21b5d6" translate="yes" xml:space="preserve">
          <source>Executes the destructor for this type. &lt;a href=&quot;../../ops/trait.drop#tymethod.drop&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 유형의 소멸자를 실행합니다. &lt;a href=&quot;../../ops/trait.drop#tymethod.drop&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f264f5a6fea12730ab8cdf161fec7b22c4658d43" translate="yes" xml:space="preserve">
          <source>Executes the destructor for this type. &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 유형의 소멸자를 실행합니다. &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5803bf23e85137290e380e7120cf5cda940241d" translate="yes" xml:space="preserve">
          <source>Executing an &lt;code&gt;as&lt;/code&gt; expression casts the value on the left-hand side to the type on the right-hand side.</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; 식을 실행하면 왼쪽의 값이 오른쪽의 유형으로 캐스팅됩니다.</target>
        </trans-unit>
        <trans-unit id="f227ddba90126d9b19972677ff1e5de9bf4b8baf" translate="yes" xml:space="preserve">
          <source>Executing an async block is similar to executing a closure expression: its immediate effect is to produce and return an anonymous type. Whereas closures return a type that implements one or more of the &lt;a href=&quot;../../std/ops/trait.fn&quot;&gt;&lt;code&gt;std::ops::Fn&lt;/code&gt;&lt;/a&gt; traits, however, the type returned for an async block implements the &lt;a href=&quot;../../std/future/trait.future&quot;&gt;&lt;code&gt;std::future::Future&lt;/code&gt;&lt;/a&gt; trait. The actual data format for this type is unspecified.</source>
          <target state="translated">비동기 블록을 실행하는 것은 클로저 표현식을 실행하는 것과 유사합니다. 즉각 효과는 익명 유형을 생성하고 반환하는 것입니다. 클로저는 &lt;a href=&quot;../../std/ops/trait.fn&quot;&gt; &lt;code&gt;std::ops::Fn&lt;/code&gt; &lt;/a&gt; 특성 중 하나 이상을 구현 하는 유형을 반환하지만 비동기 블록에 대해 반환 된 유형은 &lt;a href=&quot;../../std/future/trait.future&quot;&gt; &lt;code&gt;std::future::Future&lt;/code&gt; &lt;/a&gt; 특성을 구현합니다 . 이 유형의 실제 데이터 형식은 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="82d5a597261b3a537849f1b372f9b78e7b625eb8" translate="yes" xml:space="preserve">
          <source>Executing code compiled with platform features that the current platform does not support (see &lt;a href=&quot;attributes/codegen#the-target_feature-attribute&quot;&gt;&lt;code&gt;target_feature&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">현재 플랫폼에서 지원하지 않는 플랫폼 기능으로 컴파일 된 코드 실행 ( &lt;a href=&quot;attributes/codegen#the-target_feature-attribute&quot;&gt; &lt;code&gt;target_feature&lt;/code&gt; &lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="b06f8d63833c073486a1fdfd5916e0d398ec4cd0" translate="yes" xml:space="preserve">
          <source>Exhaustive list of permitted structures in const functions:</source>
          <target state="translated">const 함수에서 허용되는 구조의 전체 목록 :</target>
        </trans-unit>
        <trans-unit id="86a8f90bc64cf5df00aa90e18788357137564fbe" translate="yes" xml:space="preserve">
          <source>Exit early from a loop.</source>
          <target state="translated">루프에서 일찍 나갑니다.</target>
        </trans-unit>
        <trans-unit id="0ff1b7133e455e31a96b40324f51f574297a78d9" translate="yes" xml:space="preserve">
          <source>ExitCode</source>
          <target state="translated">ExitCode</target>
        </trans-unit>
        <trans-unit id="e1ae1acdd19956469141874d789907a490e9de55" translate="yes" xml:space="preserve">
          <source>ExitCode::borrow</source>
          <target state="translated">ExitCode::borrow</target>
        </trans-unit>
        <trans-unit id="a7c5a114734064fcccce67a9cd3dfdfdd76445d7" translate="yes" xml:space="preserve">
          <source>ExitCode::borrow_mut</source>
          <target state="translated">ExitCode::borrow_mut</target>
        </trans-unit>
        <trans-unit id="5bc752a76a7e5d3cc8b0c1d1e796fcbadc8039c7" translate="yes" xml:space="preserve">
          <source>ExitCode::clone</source>
          <target state="translated">ExitCode::clone</target>
        </trans-unit>
        <trans-unit id="e3aa3ff5485bd9294736387dd7b9f8d0c75a260b" translate="yes" xml:space="preserve">
          <source>ExitCode::clone_from</source>
          <target state="translated">ExitCode::clone_from</target>
        </trans-unit>
        <trans-unit id="060819903443bc1767dc26493ecf28b9dacb53f7" translate="yes" xml:space="preserve">
          <source>ExitCode::clone_into</source>
          <target state="translated">ExitCode::clone_into</target>
        </trans-unit>
        <trans-unit id="88c7fb509d4ffac9b282b1107a33514bd2b03738" translate="yes" xml:space="preserve">
          <source>ExitCode::fmt</source>
          <target state="translated">ExitCode::fmt</target>
        </trans-unit>
        <trans-unit id="1ce2ab0ed3bb706748e0b3c735c0688aff5160bf" translate="yes" xml:space="preserve">
          <source>ExitCode::from</source>
          <target state="translated">ExitCode::from</target>
        </trans-unit>
        <trans-unit id="b7bae028a6211fed92006d269593eb905ff449b3" translate="yes" xml:space="preserve">
          <source>ExitCode::into</source>
          <target state="translated">ExitCode::into</target>
        </trans-unit>
        <trans-unit id="df1e11e3310a78305718c30303c6e2d585a97898" translate="yes" xml:space="preserve">
          <source>ExitCode::report</source>
          <target state="translated">ExitCode::report</target>
        </trans-unit>
        <trans-unit id="2ad5a69a740cfdba845cbcd4d855863f15dc8419" translate="yes" xml:space="preserve">
          <source>ExitCode::to_owned</source>
          <target state="translated">ExitCode::to_owned</target>
        </trans-unit>
        <trans-unit id="b3d7600372ff90a15d8a6af9f58e0f3703b33bf4" translate="yes" xml:space="preserve">
          <source>ExitCode::try_from</source>
          <target state="translated">ExitCode::try_from</target>
        </trans-unit>
        <trans-unit id="185ac9887db2c6d26575ff67cb5a611fc101a07d" translate="yes" xml:space="preserve">
          <source>ExitCode::try_into</source>
          <target state="translated">ExitCode::try_into</target>
        </trans-unit>
        <trans-unit id="d18c4ea9574f15037debc13139109e30412ae359" translate="yes" xml:space="preserve">
          <source>ExitCode::type_id</source>
          <target state="translated">ExitCode::type_id</target>
        </trans-unit>
        <trans-unit id="c111aeda61ffb30094d669bbbfd2bc91a42cd8b8" translate="yes" xml:space="preserve">
          <source>ExitStatus</source>
          <target state="translated">ExitStatus</target>
        </trans-unit>
        <trans-unit id="1974f260a6f0d3b98fe0a9d8c2855e1574bf736a" translate="yes" xml:space="preserve">
          <source>ExitStatus::borrow</source>
          <target state="translated">ExitStatus::borrow</target>
        </trans-unit>
        <trans-unit id="2e8dc59f4c3302f6a185b095cb7a63489f63705c" translate="yes" xml:space="preserve">
          <source>ExitStatus::borrow_mut</source>
          <target state="translated">ExitStatus::borrow_mut</target>
        </trans-unit>
        <trans-unit id="6d4d42d0ac2545f85258d6aeff490a183d94bdde" translate="yes" xml:space="preserve">
          <source>ExitStatus::clone</source>
          <target state="translated">ExitStatus::clone</target>
        </trans-unit>
        <trans-unit id="6b9f4647c8bbb11d090a3ad7a23f835f91d4e1f3" translate="yes" xml:space="preserve">
          <source>ExitStatus::clone_from</source>
          <target state="translated">ExitStatus::clone_from</target>
        </trans-unit>
        <trans-unit id="7f70f957cde58c8fa54e2f3d5c363a834dc94fd9" translate="yes" xml:space="preserve">
          <source>ExitStatus::clone_into</source>
          <target state="translated">ExitStatus::clone_into</target>
        </trans-unit>
        <trans-unit id="fb34c74ca984270958cdf7e209f3f61f917dd89e" translate="yes" xml:space="preserve">
          <source>ExitStatus::code</source>
          <target state="translated">ExitStatus::code</target>
        </trans-unit>
        <trans-unit id="5d276ae9b5eb288da3fb43e86a9dfcb2560769d0" translate="yes" xml:space="preserve">
          <source>ExitStatus::eq</source>
          <target state="translated">ExitStatus::eq</target>
        </trans-unit>
        <trans-unit id="9327a6d9903d1c0cd219988422f92e0424dd692a" translate="yes" xml:space="preserve">
          <source>ExitStatus::fmt</source>
          <target state="translated">ExitStatus::fmt</target>
        </trans-unit>
        <trans-unit id="bc98aeee9f7f4b636747178371ae035d543a7d73" translate="yes" xml:space="preserve">
          <source>ExitStatus::from</source>
          <target state="translated">ExitStatus::from</target>
        </trans-unit>
        <trans-unit id="33187a0a7c122e0dc9144590daee2a62f6ddf619" translate="yes" xml:space="preserve">
          <source>ExitStatus::from_raw</source>
          <target state="translated">ExitStatus::from_raw</target>
        </trans-unit>
        <trans-unit id="93f1b4bcf00cab23c41a7e1a9a12b16b01301289" translate="yes" xml:space="preserve">
          <source>ExitStatus::into</source>
          <target state="translated">ExitStatus::into</target>
        </trans-unit>
        <trans-unit id="62581279cf1b3936bce1dcf62db029ec5612c875" translate="yes" xml:space="preserve">
          <source>ExitStatus::ne</source>
          <target state="translated">ExitStatus::ne</target>
        </trans-unit>
        <trans-unit id="cfac0374512ce042704c82ce7fa68a8364d0e58f" translate="yes" xml:space="preserve">
          <source>ExitStatus::signal</source>
          <target state="translated">ExitStatus::signal</target>
        </trans-unit>
        <trans-unit id="ed4f39a2d8c7a9a57537b3c31d5431dd2f115cdc" translate="yes" xml:space="preserve">
          <source>ExitStatus::success</source>
          <target state="translated">ExitStatus::success</target>
        </trans-unit>
        <trans-unit id="62b47c36650840b0108126f3adde26e48b61617d" translate="yes" xml:space="preserve">
          <source>ExitStatus::to_owned</source>
          <target state="translated">ExitStatus::to_owned</target>
        </trans-unit>
        <trans-unit id="0bfe5d5113bfde9b81de6719accbb3be938d9509" translate="yes" xml:space="preserve">
          <source>ExitStatus::to_string</source>
          <target state="translated">ExitStatus::to_string</target>
        </trans-unit>
        <trans-unit id="29bd286a73a29a6827e8115de57ab58bfab614df" translate="yes" xml:space="preserve">
          <source>ExitStatus::try_from</source>
          <target state="translated">ExitStatus::try_from</target>
        </trans-unit>
        <trans-unit id="04fd7f5c8e73d6df1fa6efbe1a61914cbf761794" translate="yes" xml:space="preserve">
          <source>ExitStatus::try_into</source>
          <target state="translated">ExitStatus::try_into</target>
        </trans-unit>
        <trans-unit id="520d14d48b9052fe8fb50d5d6c071024ebf5dbbd" translate="yes" xml:space="preserve">
          <source>ExitStatus::type_id</source>
          <target state="translated">ExitStatus::type_id</target>
        </trans-unit>
        <trans-unit id="2627903d418f2f228b709bdaae9456f1231acdaa" translate="yes" xml:space="preserve">
          <source>ExitStatusExt</source>
          <target state="translated">ExitStatusExt</target>
        </trans-unit>
        <trans-unit id="29e45ab9d14b5913718450c7b9f0d56077e83e7e" translate="yes" xml:space="preserve">
          <source>Exiting without calling destructors</source>
          <target state="translated">소멸자를 호출하지 않고 종료</target>
        </trans-unit>
        <trans-unit id="28d9b17570ad88d114dcb8b6b92211f2f97de502" translate="yes" xml:space="preserve">
          <source>Expands to a string that represents the current module path.</source>
          <target state="translated">현재 모듈 경로를 나타내는 문자열로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="111566545f49cd21933fc1fea69c690da33c96ff" translate="yes" xml:space="preserve">
          <source>Expands to the column number at which it was invoked.</source>
          <target state="translated">호출 된 열 번호로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="415d4a1b98b5b38e7136a2569231ef3c795170fb" translate="yes" xml:space="preserve">
          <source>Expands to the file name in which it was invoked.</source>
          <target state="translated">호출 된 파일 이름으로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="a45f83d80d16c44c92eee689c97673f06829c8ce" translate="yes" xml:space="preserve">
          <source>Expands to the line number on which it was invoked.</source>
          <target state="translated">호출 된 행 번호로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="a4c577a2ac16bd3ba372061e96a947970d947bf7" translate="yes" xml:space="preserve">
          <source>Expected type did not match the received type.</source>
          <target state="translated">예상 유형이 수신 유형과 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b718f8c3a83788b1b360cc38380401a994fb4892" translate="yes" xml:space="preserve">
          <source>Experimental</source>
          <target state="translated">Experimental</target>
        </trans-unit>
        <trans-unit id="9560abec248c2d8a474706784a0064e62c9f3bc6" translate="yes" xml:space="preserve">
          <source>ExperimentalUnix</source>
          <target state="translated">ExperimentalUnix</target>
        </trans-unit>
        <trans-unit id="9c999b61cac476de27b9f2b90682b4f512986004" translate="yes" xml:space="preserve">
          <source>ExperimentalWindows</source>
          <target state="translated">ExperimentalWindows</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="fb0c7f76ba2eebc8ef86d8e08fdc9b8c28d34904" translate="yes" xml:space="preserve">
          <source>Explicitly implementing both &lt;code&gt;Drop&lt;/code&gt; and &lt;code&gt;Copy&lt;/code&gt; trait on a type is currently disallowed. This feature can make some sense in theory, but the current implementation is incorrect and can lead to memory unsafety (see &lt;a href=&quot;https://github.com/rust-lang/rust/issues/20126&quot;&gt;issue #20126&lt;/a&gt;), so it has been disabled for now.</source>
          <target state="translated">유형에 &lt;code&gt;Drop&lt;/code&gt; 및 &lt;code&gt;Copy&lt;/code&gt; 특성을 모두 명시 적으로 구현 하는 것은 현재 허용되지 않습니다. 이 기능은 이론상 어느 정도 의미가있을 수 있지만 현재 구현이 잘못되어 메모리 가 안전하지 않을 수 있으므로 ( &lt;a href=&quot;https://github.com/rust-lang/rust/issues/20126&quot;&gt;문제 # 20126&lt;/a&gt; 참조 ) 지금은 비활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="d698ba47df5ae5a811a1350c6abdd8a4ed0fff8c" translate="yes" xml:space="preserve">
          <source>Explicitly implementing both Drop and Copy for a type is currently disallowed. This feature can make some sense in theory, but the current implementation is incorrect and can lead to memory unsafety (see &lt;a href=&quot;https://github.com/rust-lang/rust/issues/20126&quot;&gt;issue #20126&lt;/a&gt;), so it has been disabled for now.</source>
          <target state="translated">유형에 대해 Drop 및 Copy를 명시 적으로 구현하는 것은 현재 허용되지 않습니다. 이 기능은 이론적으로는 의미가 있지만 현재 구현이 잘못되어 메모리 안전을 초래할 수 있으므로 ( &lt;a href=&quot;https://github.com/rust-lang/rust/issues/20126&quot;&gt;문제 # 20126&lt;/a&gt; 참조 ) 현재로서는 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d165ee97f26b031b938fc12621899c47ca3e7175" translate="yes" xml:space="preserve">
          <source>Exponentiation</source>
          <target state="translated">Exponentiation</target>
        </trans-unit>
        <trans-unit id="bd112165280d2f00f9e756f129da9dc704c3f593" translate="yes" xml:space="preserve">
          <source>Exporting a Convenient Public API with &lt;code id=&quot;exporting-a-convenient-public-api-with-pub-use&quot;&gt;pub use&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;exporting-a-convenient-public-api-with-pub-use&quot;&gt;pub use&lt;/code&gt; 으로 편리한 퍼블릭 API 내보내기</target>
        </trans-unit>
        <trans-unit id="9150316825e9f6d857b4398d59d6a96682d74585" translate="yes" xml:space="preserve">
          <source>Exposing Paths with the &lt;code id=&quot;exposing-paths-with-the-pub-keyword&quot;&gt;pub&lt;/code&gt; Keyword</source>
          <target state="translated">&lt;code id=&quot;exposing-paths-with-the-pub-keyword&quot;&gt;pub&lt;/code&gt; 키워드로 경로 노출</target>
        </trans-unit>
        <trans-unit id="ae50b85a56c1e601d894825d1bcd5433f309e845" translate="yes" xml:space="preserve">
          <source>Exposing randomized base addresses through pointer leaks</source>
          <target state="translated">포인터 누출을 통해 무작위 기본 주소 노출</target>
        </trans-unit>
        <trans-unit id="1cce5cf4c494ba29ff4d7ae159b2451a4462e9e9" translate="yes" xml:space="preserve">
          <source>Expresses that &lt;code&gt;haystack[a..b]&lt;/code&gt; has been rejected as a possible match of the pattern.</source>
          <target state="translated">그 표현 &lt;code&gt;haystack[a..b]&lt;/code&gt; 패턴의 가능한 매치로서 거부되었습니다.</target>
        </trans-unit>
        <trans-unit id="d9fc1c82d92eeab98426878b759fceb2c4c1a8a6" translate="yes" xml:space="preserve">
          <source>Expresses that a match of the pattern has been found at &lt;code&gt;haystack[a..b]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;haystack[a..b]&lt;/code&gt; 에서 패턴과 일치하는 것을 나타 냅니다 .</target>
        </trans-unit>
        <trans-unit id="e9413e7cf480a6b3fb1a89962b712e0076f99371" translate="yes" xml:space="preserve">
          <source>Expresses that every byte of the haystack has been visited, ending the iteration.</source>
          <target state="translated">건초 더미의 모든 바이트가 방문되었음을 나타내며 반복을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="97b695b9b9cfde3612c21b3add972cc0f21f4e26" translate="yes" xml:space="preserve">
          <source>Expression</source>
          <target state="translated">Expression</target>
        </trans-unit>
        <trans-unit id="1c214c7f9bfde2d572e04368579436132fb7c9dc" translate="yes" xml:space="preserve">
          <source>Expression Attributes</source>
          <target state="translated">식 속성</target>
        </trans-unit>
        <trans-unit id="e290d0bd398f4e40e7ad97a44c3e4a14487bc65b" translate="yes" xml:space="preserve">
          <source>Expression precedence</source>
          <target state="translated">표현 우선 순위</target>
        </trans-unit>
        <trans-unit id="0a7a6ba0d7d2af3106edf9d912c2fc5a47512f54" translate="yes" xml:space="preserve">
          <source>Expression statements</source>
          <target state="translated">표현 문</target>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="7bb2466f3a73df210b2543c2d61b582e81a11f51" translate="yes" xml:space="preserve">
          <source>Expressions accept outer attributes in limited situations, see &lt;a href=&quot;expressions#expression-attributes&quot;&gt;Expression Attributes&lt;/a&gt; for details.</source>
          <target state="translated">표현식은 제한된 상황에서 외부 속성을 허용합니다 . 자세한 내용 은 &lt;a href=&quot;expressions#expression-attributes&quot;&gt;표현식 속성&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ea5a29e3a572dfe0ff53324d950b33e506a558c6" translate="yes" xml:space="preserve">
          <source>Expressions are divided into two main categories: place expressions and value expressions. Likewise within each expression, sub-expressions may occur in either place context or value context. The evaluation of an expression depends both on its own category and the context it occurs within.</source>
          <target state="translated">식은 장소 식과 값 식의 두 가지 주요 범주로 나뉩니다. 마찬가지로 각 표현 내에서 하위 표현은 장소 컨텍스트 또는 값 컨텍스트에서 발생할 수 있습니다. 식의 평가는 자체 범주와 그 안에서 발생하는 컨텍스트에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="f3f87c5952fa93a03448097e06e822130ba38581" translate="yes" xml:space="preserve">
          <source>Expressions evaluate to something and make up most of the rest of the code that you&amp;rsquo;ll write in Rust. Consider a simple math operation, such as &lt;code&gt;5 + 6&lt;/code&gt;, which is an expression that evaluates to the value &lt;code&gt;11&lt;/code&gt;. Expressions can be part of statements: in Listing 3-1, the &lt;code&gt;6&lt;/code&gt; in the statement &lt;code&gt;let y = 6;&lt;/code&gt; is an expression that evaluates to the value &lt;code&gt;6&lt;/code&gt;. Calling a function is an expression. Calling a macro is an expression. The block that we use to create new scopes, &lt;code&gt;{}&lt;/code&gt;, is an expression, for example:</source>
          <target state="translated">표현식은 무언가로 평가하고 Rust에서 작성할 나머지 코드의 대부분을 구성합니다. 값 &lt;code&gt;11&lt;/code&gt; 로 평가되는 표현식 인 &lt;code&gt;5 + 6&lt;/code&gt; 과 같은 간단한 수학 연산을 고려하십시오 . 표현식은 명령문의 일부일 수 있습니다. 목록 3-1 에서 명령문 의 &lt;code&gt;6&lt;/code&gt; 은 &lt;code&gt;let y = 6;&lt;/code&gt; &lt;code&gt;6&lt;/code&gt; 값으로 평가되는 표현식입니다 . 함수 호출은 표현식입니다. 매크로 호출은 표현식입니다. 새 범위 &lt;code&gt;{}&lt;/code&gt; 를 작성하는 데 사용하는 블록 은 다음과 같은 표현식입니다.</target>
        </trans-unit>
        <trans-unit id="281dd83602a2719ee60a63350e4c59f5a5ec31ba" translate="yes" xml:space="preserve">
          <source>Extend</source>
          <target state="translated">Extend</target>
        </trans-unit>
        <trans-unit id="3d400e57b7ebc958150362b7ccf527570885afef" translate="yes" xml:space="preserve">
          <source>Extend Cargo using custom commands</source>
          <target state="translated">사용자 명령을 사용하여화물 확장</target>
        </trans-unit>
        <trans-unit id="1aa1b8d09aeae60b76b14c43da05508c2308568e" translate="yes" xml:space="preserve">
          <source>Extend a collection with the contents of an iterator.</source>
          <target state="translated">반복자의 컨텐츠로 콜렉션을 확장하십시오.</target>
        </trans-unit>
        <trans-unit id="63d17bd5e813a98108e872632dda1e3f6fca9930" translate="yes" xml:space="preserve">
          <source>Extend implementation that copies elements out of references before pushing them onto the Vec.</source>
          <target state="translated">요소를 Vec로 푸시하기 전에 참조에서 요소를 복사하는 구현을 확장하십시오.</target>
        </trans-unit>
        <trans-unit id="6ca321bc031c66209872c995fde2c9958df48aec" translate="yes" xml:space="preserve">
          <source>Extend::extend</source>
          <target state="translated">Extend::extend</target>
        </trans-unit>
        <trans-unit id="0bdb432d95a5f44684c48bb5ff9c63a8b741778d" translate="yes" xml:space="preserve">
          <source>Extending Cargo with Custom Commands</source>
          <target state="translated">사용자 명령으로화물 확장</target>
        </trans-unit>
        <trans-unit id="0bfe02d755fba1dacbc3abdb4bc60dfdcb8cf321" translate="yes" xml:space="preserve">
          <source>Extending a lifetime, or shortening an invariant lifetime. This is advanced, very unsafe Rust!</source>
          <target state="translated">수명 연장 또는 불변 수명 단축 이것은 매우 안전하지 않은 고급 녹입니다!</target>
        </trans-unit>
        <trans-unit id="f3982b58ea128693a466b38fe551940ae59fc928" translate="yes" xml:space="preserve">
          <source>Extending based on expressions</source>
          <target state="translated">표현식을 기반으로 확장</target>
        </trans-unit>
        <trans-unit id="165c503abcbf685b22633768fa14b61e6111321a" translate="yes" xml:space="preserve">
          <source>Extending based on patterns</source>
          <target state="translated">패턴을 기반으로 확장</target>
        </trans-unit>
        <trans-unit id="5e7a6525f01fc44c66d625472111d46906a702a3" translate="yes" xml:space="preserve">
          <source>Extends &lt;code&gt;self&lt;/code&gt; with &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 로 &lt;code&gt;self&lt;/code&gt; 을 확장 합니다 .</target>
        </trans-unit>
        <trans-unit id="5b0d8441b27aafa3374d0798ba679165b9c0bf75" translate="yes" xml:space="preserve">
          <source>Extends a collection with exactly one element.</source>
          <target state="translated">정확히 하나의 요소로 컬렉션을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="c596f05a0a374226d4d89af6b8fc31f100676800" translate="yes" xml:space="preserve">
          <source>Extends a collection with the contents of an iterator.</source>
          <target state="translated">이터레이터의 내용으로 컬렉션을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="34684b1f4466b8bac4b0eb3da31f67f046bcdfaf" translate="yes" xml:space="preserve">
          <source>Extends a collection with the contents of an iterator. &lt;a href=&quot;../../iter/trait.extend#tymethod.extend&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이터레이터의 내용으로 컬렉션을 확장합니다. &lt;a href=&quot;../../iter/trait.extend#tymethod.extend&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53d3d99ff458e4308538b8fa842ffa49b1175ef6" translate="yes" xml:space="preserve">
          <source>Extends a collection with the contents of an iterator. &lt;a href=&quot;../iter/trait.extend#tymethod.extend&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이터레이터의 내용으로 컬렉션을 확장합니다. &lt;a href=&quot;../iter/trait.extend#tymethod.extend&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22bdb7eb07189c9fee4746d6cf601a24763232c3" translate="yes" xml:space="preserve">
          <source>Extends a collection with the contents of an iterator. &lt;a href=&quot;iter/trait.extend#tymethod.extend&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이터레이터의 내용으로 컬렉션을 확장합니다. &lt;a href=&quot;iter/trait.extend#tymethod.extend&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6747fcd458b4db93fa07e978eeadfc404e97d049" translate="yes" xml:space="preserve">
          <source>Extends the string with the given &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;&amp;amp;OsStr&lt;/code&gt;&lt;/a&gt; slice.</source>
          <target state="translated">주어진 &lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;&amp;amp;OsStr&lt;/code&gt; &lt;/a&gt; 슬라이스로 문자열을 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="a449e6ae4ae76fbd14bf33b19229c470ef831252" translate="yes" xml:space="preserve">
          <source>Extensible Concurrency with the &lt;code id=&quot;extensible-concurrency-with-the-sync-and-send-traits&quot;&gt;Sync&lt;/code&gt; and &lt;code&gt;Send&lt;/code&gt; Traits</source>
          <target state="translated">&lt;code id=&quot;extensible-concurrency-with-the-sync-and-send-traits&quot;&gt;Sync&lt;/code&gt; 및 &lt;code&gt;Send&lt;/code&gt; 특성을 통한 확장 가능한 동시성</target>
        </trans-unit>
        <trans-unit id="35c3ace074cac5108c2b6392030678de1734abf0" translate="yes" xml:space="preserve">
          <source>Extension methods for ASCII-subset only operations.</source>
          <target state="translated">ASCII 서브 세트 전용 조작을위한 확장 메소드.</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="5660e0fb3b8978f5c7dd8e664a4a677b0daa23bf" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;std::process&lt;/code&gt; for Windows.</source>
          <target state="translated">Windows 용 &lt;code&gt;std::process&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="8e8b96cc72db0c4dc075e35bc9cdf0733b6acb09" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;std::thread&lt;/code&gt; for Windows.</source>
          <target state="translated">Windows 용 &lt;code&gt;std::thread&lt;/code&gt; 확장 .</target>
        </trans-unit>
        <trans-unit id="f0c28f41a9e3fa7fb027e52e2670951b4ac96708" translate="yes" xml:space="preserve">
          <source>Extern Prelude</source>
          <target state="translated">Extern Prelude</target>
        </trans-unit>
        <trans-unit id="6514bbb426cf43d7f3f90e0fe10f9d7ff363e600" translate="yes" xml:space="preserve">
          <source>Extern crate declarations</source>
          <target state="translated">엑스 턴 상자 선언</target>
        </trans-unit>
        <trans-unit id="1eddd7e69cdbd60c0d72ebdd3c45472a5da1f730" translate="yes" xml:space="preserve">
          <source>Extern function declarations with the &quot;C&quot; or &quot;cdecl&quot; ABIs can also be &lt;em&gt;variadic&lt;/em&gt;, allowing them to be called with a variable number of arguments. Normal Rust functions, even those with an &lt;code&gt;extern &quot;ABI&quot;&lt;/code&gt;, cannot be variadic. For more information, see &lt;a href=&quot;https://doc.rust-lang.org/nomicon/ffi.html#variadic-functions&quot;&gt;the nomicon's section on variadic functions&lt;/a&gt;.</source>
          <target state="translated">은 &quot;C&quot;또는 &quot;cdecl 규칙&quot;ABI를 가진 외부 입력 함수 선언도 할 수 있습니다 &lt;em&gt;가변&lt;/em&gt; , 그들을 가변 수의 인수로 호출 할 수 있도록. 일반 Rust 함수, 심지어 &lt;code&gt;extern &quot;ABI&quot;&lt;/code&gt; 가있는 함수도 가변적이지 않습니다. 자세한 내용 &lt;a href=&quot;https://doc.rust-lang.org/nomicon/ffi.html#variadic-functions&quot;&gt;은 가변 함수에 대한 nomicon 섹션을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="30ed2ac66ec6b9cc0432e6d5a4601ee33b6bb930" translate="yes" xml:space="preserve">
          <source>Extern function declarations with the &quot;C&quot; or &quot;cdecl&quot; ABIs can also be &lt;em&gt;variadic&lt;/em&gt;, allowing them to be called with a variable number of arguments. Normal rust functions, even those with an &lt;code&gt;extern &quot;ABI&quot;&lt;/code&gt;, cannot be variadic. For more information, see &lt;a href=&quot;https://doc.rust-lang.org/nomicon/ffi.html#variadic-functions&quot;&gt;the nomicon's section on variadic functions&lt;/a&gt;.</source>
          <target state="translated">은 &quot;C&quot;또는 &quot;cdecl 규칙&quot;ABI를 가진 외부 입력 함수 선언도 할 수 있습니다 &lt;em&gt;가변&lt;/em&gt; , 그들을 가변 수의 인수로 호출 할 수 있도록. &lt;code&gt;extern &quot;ABI&quot;&lt;/code&gt; 가있는 일반적인 녹 기능도 가변적 일 수 없습니다. 자세한 내용 &lt;a href=&quot;https://doc.rust-lang.org/nomicon/ffi.html#variadic-functions&quot;&gt;은 variadic 함수에 대한 nomicon 섹션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="65d89d6a6f18d5795e8b05b432b6cd52044db0ee" translate="yes" xml:space="preserve">
          <source>Extern function qualifier</source>
          <target state="translated">외부 함수 한정자</target>
        </trans-unit>
        <trans-unit id="1f7eccef81a98e5c471b9d99ccf4b50c1b88fe3f" translate="yes" xml:space="preserve">
          <source>Extern functions</source>
          <target state="translated">외부 함수</target>
        </trans-unit>
        <trans-unit id="a2d449c2066cab7d81ea015424bd8d14387bea22" translate="yes" xml:space="preserve">
          <source>Extern functions are part of Rust's foreign function interface, providing the opposite functionality to &lt;a href=&quot;external-blocks&quot;&gt;external blocks&lt;/a&gt;. Whereas external blocks allow Rust code to call foreign code, extern functions with bodies defined in Rust code &lt;em&gt;can be called by foreign code&lt;/em&gt;. They are defined in the same way as any other Rust function, except that they have the &lt;code&gt;extern&lt;/code&gt; qualifier.</source>
          <target state="translated">Extern 함수는 Rust의 외부 함수 인터페이스의 일부이며 &lt;a href=&quot;external-blocks&quot;&gt;외부 블록&lt;/a&gt; 과 반대되는 기능을 제공합니다 . 외부 블록을 통해 Rust 코드가 외부 코드를 호출 할 수있는 반면, Rust 코드에 정의 된 바디가있는 외부 함수는 외부 코드로 호출 &lt;em&gt;할 수 있습니다&lt;/em&gt; . 그것들은 &lt;code&gt;extern&lt;/code&gt; 한정자 가 있다는 것을 제외하고 다른 Rust 함수와 같은 방식으로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="4ce0af43c07f2157bc2038fa0249d689eb463c91" translate="yes" xml:space="preserve">
          <source>Extern statics can be either immutable or mutable just like &lt;a href=&quot;static-items&quot;&gt;statics&lt;/a&gt; outside of external blocks. An immutable static &lt;em&gt;must&lt;/em&gt; be initialized before any Rust code is executed. It is not enough for the static to be initialized before Rust code reads from it.</source>
          <target state="translated">외부 &lt;a href=&quot;static-items&quot;&gt;정적&lt;/a&gt; 은 외부 블록 외부의 정적 처럼 불변이거나 변경 가능할 수 있습니다 . 변경 불가능한 정적 &lt;em&gt;은&lt;/em&gt; Rust 코드가 실행되기 전에 초기화 &lt;em&gt;되어야합니다&lt;/em&gt; . Rust 코드가 읽기 전에 정적을 초기화하는 것만으로는 충분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="224dea6c3333066e46cdb1ca575646da5bfd214d" translate="yes" xml:space="preserve">
          <source>External C functions are allowed to be variadic. However, a variadic function takes a minimum number of arguments. For example, consider C's variadic &lt;code&gt;printf&lt;/code&gt; function:</source>
          <target state="translated">외부 C 함수는 가변적 일 수 있습니다. 그러나 variadic 함수는 최소 개수의 인수를 사용합니다. 예를 들어, C의 variadic &lt;code&gt;printf&lt;/code&gt; 함수를 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="342d6c5cca77be476d8a95967d8d0db8741e506c" translate="yes" xml:space="preserve">
          <source>External blocks</source>
          <target state="translated">외부 블록</target>
        </trans-unit>
        <trans-unit id="83d8db48341a32267147990e9523818d742c54b5" translate="yes" xml:space="preserve">
          <source>External blocks form the basis for Rust's foreign function interface. Declarations in an external block describe symbols in external, non-Rust libraries.</source>
          <target state="translated">외부 블록은 Rust의 외부 기능 인터페이스의 기초를 형성합니다. 외부 블록의 선언은 외부 비 Rust 라이브러리의 기호를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ace0915a6c1896ef0020e8c3d63897ba9f7ed170" translate="yes" xml:space="preserve">
          <source>External blocks provide &lt;em&gt;declarations&lt;/em&gt; of items that are not &lt;em&gt;defined&lt;/em&gt; in the current crate and are the basis of Rust's foreign function interface. These are akin to unchecked imports.</source>
          <target state="translated">외부 블록 은 현재 상자에 &lt;em&gt;정의&lt;/em&gt; 되지 않은 항목의 &lt;em&gt;선언&lt;/em&gt; 을 제공 하며 Rust의 외부 함수 인터페이스의 기반이됩니다. 이것은 확인되지 않은 수입품과 유사합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="48e7f57651ea7eed7c7272c6b08048522b200ade" translate="yes" xml:space="preserve">
          <source>External code (like our server in &lt;em&gt;src/bin/main.rs&lt;/em&gt;) doesn&amp;rsquo;t need to know the implementation details regarding using a &lt;code&gt;Worker&lt;/code&gt; struct within &lt;code&gt;ThreadPool&lt;/code&gt;, so we make the &lt;code&gt;Worker&lt;/code&gt; struct and its &lt;code&gt;new&lt;/code&gt; function private. The &lt;code&gt;Worker::new&lt;/code&gt; function uses the &lt;code&gt;id&lt;/code&gt; we give it and stores a &lt;code&gt;JoinHandle&amp;lt;()&amp;gt;&lt;/code&gt; instance that is created by spawning a new thread using an empty closure.</source>
          <target state="translated">(우리 서버와 같은 외부 코드 &lt;em&gt;SRC / 빈 / main.rs은&lt;/em&gt; )는 사용에 관한 구현 세부 사항 알 필요가 없습니다 &lt;code&gt;Worker&lt;/code&gt; 내에서 구조체를 &lt;code&gt;ThreadPool&lt;/code&gt; 이를 우리가 만들 수 있도록, &lt;code&gt;Worker&lt;/code&gt; 구조체와 &lt;code&gt;new&lt;/code&gt; 기능은 개인. &lt;code&gt;Worker::new&lt;/code&gt; 기능은 사용 &lt;code&gt;id&lt;/code&gt; 우리가하고 저장합니다 줄 &lt;code&gt;JoinHandle&amp;lt;()&amp;gt;&lt;/code&gt; 빈 폐쇄를 사용하여 새 스레드를 산란에 의해 만들어진 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="6613e88e66a635a2565b186ccf4e3b12f673582c" translate="yes" xml:space="preserve">
          <source>External crates imported with &lt;code&gt;extern crate&lt;/code&gt; in the root module or provided to the compiler (as with the &lt;code&gt;--extern&lt;/code&gt; flag with &lt;code&gt;rustc&lt;/code&gt;) are added to the &quot;extern prelude&quot;. Crates in the extern prelude are in scope in the entire crate, including inner modules. If imported with &lt;code&gt;extern crate orig_name as new_name&lt;/code&gt;, then the symbol &lt;code&gt;new_name&lt;/code&gt; is instead added to the prelude.</source>
          <target state="translated">루트 모듈에서 &lt;code&gt;extern crate&lt;/code&gt; 로 가져 오거나 컴파일러에 제공되는 외부 상자 ( &lt;code&gt;rustc&lt;/code&gt; 와 함께 &lt;code&gt;--extern&lt;/code&gt; 플래그 사용 )가 &quot;extern prelude&quot;에 추가됩니다. extern prelude의 상자는 내부 모듈을 포함하여 전체 상자 안에 있습니다. &lt;code&gt;extern crate orig_name as new_name&lt;/code&gt; 가져 오면 대신 &lt;code&gt;new_name&lt;/code&gt; 기호 가 서곡에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="32ece7447e212ccb757012ae5e86643f98cfc6c5" translate="yes" xml:space="preserve">
          <source>Extra Conditionals with Match Guards</source>
          <target state="translated">성냥 가드와 함께 추가 조건</target>
        </trans-unit>
        <trans-unit id="d752dee9295f4dfe5d392179a84af08c86a16b3f" translate="yes" xml:space="preserve">
          <source>Extract the duplicate code into the body of the function and specify the inputs and return values of that code in the function signature.</source>
          <target state="translated">함수 본문에 중복 코드를 추출하고 함수 서명에서 해당 코드의 입력 및 리턴 값을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="c23bc5711c4106716527b5647362f08a92113ff9" translate="yes" xml:space="preserve">
          <source>Extracting Logic from &lt;code id=&quot;extracting-logic-from-main&quot;&gt;main&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;extracting-logic-from-main&quot;&gt;main&lt;/code&gt; 에서 로직 추출</target>
        </trans-unit>
        <trans-unit id="f8d7602f3461fa54951122f27033f10fd4dd6680" translate="yes" xml:space="preserve">
          <source>Extracting a borrowed reference to the whole OS string</source>
          <target state="translated">전체 OS 문자열에 대한 빌린 참조 추출</target>
        </trans-unit>
        <trans-unit id="bd1c17a8059d60877bed23a8c062ed6219764c29" translate="yes" xml:space="preserve">
          <source>Extracting a raw pointer to the whole C string</source>
          <target state="translated">전체 C 문자열에 대한 원시 포인터 추출</target>
        </trans-unit>
        <trans-unit id="f3f51cc80e3ae1982747ef739eae23585f64efc4" translate="yes" xml:space="preserve">
          <source>Extracting a slice of the whole C string</source>
          <target state="translated">전체 C 문자열의 슬라이스 추출</target>
        </trans-unit>
        <trans-unit id="7c6025beb99c95c0892b851cf9a727b399d3c515" translate="yes" xml:space="preserve">
          <source>Extracting the Argument Parser</source>
          <target state="translated">인수 파서 추출</target>
        </trans-unit>
        <trans-unit id="12801130beeedd079871761a20c76e767840cb13" translate="yes" xml:space="preserve">
          <source>Extracts a &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt; slice containing the entire string.</source>
          <target state="translated">전체 문자열을 포함 하는 &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; &lt;/a&gt; 슬라이스를 추출 합니다.</target>
        </trans-unit>
        <trans-unit id="077bce36ea34a8682de40493d76c550ac66ae1ea" translate="yes" xml:space="preserve">
          <source>Extracts a handle to the underlying thread.</source>
          <target state="translated">기본 스레드에 대한 핸들을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="aa6ee9425f37e1c341efbcd4e8925124891481c6" translate="yes" xml:space="preserve">
          <source>Extracts a mutable slice of the entire vector.</source>
          <target state="translated">전체 벡터의 가변 슬라이스를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="e8196634fb250cabfeeb8a4a353d72847d5abea9" translate="yes" xml:space="preserve">
          <source>Extracts a slice containing the entire vector.</source>
          <target state="translated">전체 벡터를 포함하는 슬라이스를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="bc4640cdf6554d00501ee6f64b836dde5c00e850" translate="yes" xml:space="preserve">
          <source>Extracts a slice corresponding to the portion of the path remaining for iteration.</source>
          <target state="translated">반복을 위해 남아있는 경로 부분에 해당하는 슬라이스를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="f68aae8ae781accce97421c5e61e3829b8563586" translate="yes" xml:space="preserve">
          <source>Extracts a string slice containing the entire &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">전체 &lt;code&gt;String&lt;/code&gt; 을 포함하는 문자열 슬라이스를 추출합니다 .</target>
        </trans-unit>
        <trans-unit id="6dd84a0b0798bd462adfd72caf33efd2748e9c71" translate="yes" xml:space="preserve">
          <source>Extracts raw handles.</source>
          <target state="translated">원시 핸들을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="c6728342203a48ea78b904344daa2644f7bc9bca" translate="yes" xml:space="preserve">
          <source>Extracts raw sockets.</source>
          <target state="translated">원시 소켓을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="d3570013dd1716a99b0c2c5aa380c86577276340" translate="yes" xml:space="preserve">
          <source>Extracts the extension of &lt;a href=&quot;struct.path#method.file_name&quot;&gt;&lt;code&gt;self.file_name&lt;/code&gt;&lt;/a&gt;, if possible.</source>
          <target state="translated">가능한 경우 &lt;a href=&quot;struct.path#method.file_name&quot;&gt; &lt;code&gt;self.file_name&lt;/code&gt; &lt;/a&gt; 의 확장자를 추출 합니다.</target>
        </trans-unit>
        <trans-unit id="aba9f813990b5d9b5e64eb012431f01eb12a62e1" translate="yes" xml:space="preserve">
          <source>Extracts the owned data.</source>
          <target state="translated">소유 한 데이터를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="4bb8a1ffc5fe23d30e47788db4b04e4bd7ef9dde" translate="yes" xml:space="preserve">
          <source>Extracts the raw file descriptor.</source>
          <target state="translated">원시 파일 디스크립터를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="145e41f4f95335ea695a373cf463fcbaa9c860e2" translate="yes" xml:space="preserve">
          <source>Extracts the raw file descriptor. &lt;a href=&quot;../io/trait.asrawfd#tymethod.as_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">원시 파일 디스크립터를 추출합니다. &lt;a href=&quot;../io/trait.asrawfd#tymethod.as_raw_fd&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="157d6bba148c30ad9080b9f153526fca61cf9fe7" translate="yes" xml:space="preserve">
          <source>Extracts the raw file descriptor. &lt;a href=&quot;../os/unix/io/trait.asrawfd#tymethod.as_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">원시 파일 디스크립터를 추출합니다. &lt;a href=&quot;../os/unix/io/trait.asrawfd#tymethod.as_raw_fd&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf843522fb743becb77da1f3973dfc766fb5fb45" translate="yes" xml:space="preserve">
          <source>Extracts the raw file descriptor. &lt;a href=&quot;trait.asrawfd#tymethod.as_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">원시 파일 설명자를 추출합니다. &lt;a href=&quot;trait.asrawfd#tymethod.as_raw_fd&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1ecbe9d7e6f6348c9a2a37d377a77cab837df15" translate="yes" xml:space="preserve">
          <source>Extracts the raw handle, without taking any ownership.</source>
          <target state="translated">소유권을 가지지 않고 원시 핸들을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="fb58f79e9d98b1a88cfc91994de4506ca5b76415" translate="yes" xml:space="preserve">
          <source>Extracts the raw pthread_t without taking ownership</source>
          <target state="translated">소유권을 가지지 않고 원시 pthread_t를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="264c6329df802b250e08319ad78e526de637a284" translate="yes" xml:space="preserve">
          <source>Extracts the stem (non-extension) portion of &lt;a href=&quot;struct.path#method.file_name&quot;&gt;&lt;code&gt;self.file_name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.path#method.file_name&quot;&gt; &lt;code&gt;self.file_name&lt;/code&gt; &lt;/a&gt; 의 스템 (비 확장) 부분을 추출합니다. .</target>
        </trans-unit>
        <trans-unit id="aa7c9b77e315be6b4940e226a98d1c2a71199fcd" translate="yes" xml:space="preserve">
          <source>Extracts the successful type of a &lt;code&gt;Poll&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">성공적인 유형의 &lt;code&gt;Poll&amp;lt;T&amp;gt;&lt;/code&gt; 추출합니다 .</target>
        </trans-unit>
        <trans-unit id="650999695577c161ded55abd72cdc4bc351a6093" translate="yes" xml:space="preserve">
          <source>Extracts the underlying &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; slice.</source>
          <target state="translated">기본 &lt;a href=&quot;../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; 슬라이스를 추출합니다 .</target>
        </trans-unit>
        <trans-unit id="9bfd07353b81ed06ed256e3b838944349974b425" translate="yes" xml:space="preserve">
          <source>Extracts the underlying raw socket from this object.</source>
          <target state="translated">이 객체에서 기본 원시 소켓을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="5ee8247b6d05870f64aaf871d2729bdc31ac6272" translate="yes" xml:space="preserve">
          <source>Extracts the value from the &lt;code&gt;ManuallyDrop&lt;/code&gt; container.</source>
          <target state="translated">로부터 값을 추출 &lt;code&gt;ManuallyDrop&lt;/code&gt; 용 용기.</target>
        </trans-unit>
        <trans-unit id="62d749f502c802698c8a607ffdae632027824402" translate="yes" xml:space="preserve">
          <source>Extracts the value from the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; container. This is a great way to ensure that the data will get dropped, because the resulting &lt;code&gt;T&lt;/code&gt; is subject to the usual drop handling.</source>
          <target state="translated">&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 컨테이너 에서 값을 추출합니다 . 결과 &lt;code&gt;T&lt;/code&gt; 는 일반적인 드롭 처리의 대상이 되므로 데이터가 삭제되도록하는 좋은 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="d77ba39cee073972bc000f3eb60f7cf221c2412f" translate="yes" xml:space="preserve">
          <source>FAMILY</source>
          <target state="translated">FAMILY</target>
        </trans-unit>
        <trans-unit id="2f20f7ce5f89c0638962299aea08b6280742c461" translate="yes" xml:space="preserve">
          <source>FIRST</source>
          <target state="translated">FIRST</target>
        </trans-unit>
        <trans-unit id="eb81392957b389f13a1eb1aff4a90a77051ccc8d" translate="yes" xml:space="preserve">
          <source>FIRST and FOLLOW, informally</source>
          <target state="translated">비공식적으로 FIRST 및 FOLLOW</target>
        </trans-unit>
        <trans-unit id="76aa8b011108f3fc78ef01901d036d34558de308" translate="yes" xml:space="preserve">
          <source>FIRST(&lt;code&gt;$($d:ident $e:expr );* $( $(h)* );* $( f ;)+ g&lt;/code&gt;) = { &lt;code&gt;$d:ident&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;f&lt;/code&gt; }</source>
          <target state="translated">FIRST ( &lt;code&gt;$($d:ident $e:expr );* $( $(h)* );* $( f ;)+ g&lt;/code&gt; ) = { &lt;code&gt;$d:ident&lt;/code&gt; , &lt;code&gt;h&lt;/code&gt; , &lt;code&gt;;&lt;/code&gt; , &lt;code&gt;f&lt;/code&gt; }</target>
        </trans-unit>
        <trans-unit id="e8000c6cb4a71cc183161d8db5dc14548c68a90f" translate="yes" xml:space="preserve">
          <source>FIRST(&lt;code&gt;$($d:ident $e:expr );* $( $(h)* );* $($( f ;)+ g)*&lt;/code&gt;) = { &lt;code&gt;$d:ident&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;f&lt;/code&gt;, &amp;epsilon; }</source>
          <target state="translated">FIRST ( &lt;code&gt;$($d:ident $e:expr );* $( $(h)* );* $($( f ;)+ g)*&lt;/code&gt; ) = { &lt;code&gt;$d:ident&lt;/code&gt; , &lt;code&gt;h&lt;/code&gt; , &lt;code&gt;;&lt;/code&gt; , &lt;code&gt;f&lt;/code&gt; , &amp;epsilon;}</target>
        </trans-unit>
        <trans-unit id="e2fd18272a4c09d4e029ae98fd4afb46c1c6f501" translate="yes" xml:space="preserve">
          <source>FIRST(M) = (FIRST(&lt;code&gt;tt ...&lt;/code&gt;) \ {&amp;epsilon;}) &amp;cup; SEP_SET(M) &amp;cup; ALPHA_SET(M).</source>
          <target state="translated">FIRST (M) = (FIRST ( &lt;code&gt;tt ...&lt;/code&gt; ) \ {&amp;epsilon;}) &amp;cup; SEP_SET (M) &amp;cup; ALPHA_SET (M).</target>
        </trans-unit>
        <trans-unit id="570891275149514a941164503f52d96a230e8f72" translate="yes" xml:space="preserve">
          <source>FIRST(M) is defined by case analysis on the sequence M and the structure of its first token-tree (if any):</source>
          <target state="translated">FIRST (M)은 시퀀스 M에 대한 사례 분석 및 첫 번째 토큰 트리 구조 (있는 경우)에 의해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="2770ed7ea07727161a590105d2cced4460e6fb7a" translate="yes" xml:space="preserve">
          <source>FIRST(M): collects the tokens potentially used first when matching a fragment to M.</source>
          <target state="translated">FIRST (M) : 조각을 M에 일치시킬 때 잠재적으로 가장 먼저 사용되는 토큰을 수집합니다.</target>
        </trans-unit>
        <trans-unit id="0cc51227cb07c287afd998c5485405007129eb98" translate="yes" xml:space="preserve">
          <source>FIRST, LAST</source>
          <target state="translated">첫 번째, 마지막</target>
        </trans-unit>
        <trans-unit id="d54a79c953c49229ca1b999a3877fc833c78a625" translate="yes" xml:space="preserve">
          <source>FLOAT_EXPONENT :</source>
          <target state="translated">FLOAT_EXPONENT :</target>
        </trans-unit>
        <trans-unit id="5688d97bfcb3dd848972075906e724309a5c4fc7" translate="yes" xml:space="preserve">
          <source>FLOAT_LITERAL :</source>
          <target state="translated">FLOAT_LITERAL :</target>
        </trans-unit>
        <trans-unit id="643e5757b63e729e09982a4bc89c853df6f16736" translate="yes" xml:space="preserve">
          <source>FLOAT_SUFFIX :</source>
          <target state="translated">FLOAT_SUFFIX :</target>
        </trans-unit>
        <trans-unit id="5e03334c60577d8657d4920c7623f56e324bf8c1" translate="yes" xml:space="preserve">
          <source>FOLLOW(&lt;code&gt;$( $d:ident $e:expr )\* $(;)\* $( f |)+&lt;/code&gt;) = ANYTOKEN</source>
          <target state="translated">추종 ( &lt;code&gt;$( $d:ident $e:expr )\* $(;)\* $( f |)+&lt;/code&gt; ) = ANYTOKEN</target>
        </trans-unit>
        <trans-unit id="167d62ac4e7d3790ad97aedf4ba14cb8341fe3a2" translate="yes" xml:space="preserve">
          <source>FOLLOW(&lt;code&gt;$( $d:ident $e:expr )\* $(;)\*&lt;/code&gt;) = FOLLOW(&lt;code&gt;$e:expr&lt;/code&gt;) &amp;cap; ANYTOKEN = FOLLOW(&lt;code&gt;$e:expr&lt;/code&gt;)</source>
          <target state="translated">FOLLOW ( &lt;code&gt;$( $d:ident $e:expr )\* $(;)\*&lt;/code&gt; ) = FOLLOW ( &lt;code&gt;$e:expr&lt;/code&gt; ) NY ANYTOKEN = FOLLOW ( &lt;code&gt;$e:expr&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6626c4141f57e9b60be30be617c2cdb171317a01" translate="yes" xml:space="preserve">
          <source>FOLLOW(&lt;code&gt;$( $d:ident $e:expr )\*&lt;/code&gt;) = FOLLOW(&lt;code&gt;$e:expr&lt;/code&gt;)</source>
          <target state="translated">FOLLOW ( &lt;code&gt;$( $d:ident $e:expr )\*&lt;/code&gt; ) = FOLLOW ( &lt;code&gt;$e:expr&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f66d5e29e70cd589cff4e5ab08177a93ed0611c5" translate="yes" xml:space="preserve">
          <source>FOLLOW(M)</source>
          <target state="translated">FOLLOW(M)</target>
        </trans-unit>
        <trans-unit id="9e09d2ab82f025a7e64828cab6c43d0b06a57274" translate="yes" xml:space="preserve">
          <source>FOLLOW(M), for any other M, is defined as the intersection, as t ranges over (LAST(M) \ {&amp;epsilon;}), of FOLLOW(t).</source>
          <target state="translated">다른 M에 대한 FOLLOW (M)은 t가 FOLLOW (t)의 (LAST (M) \ {&amp;epsilon;})에 걸쳐서 범위 인 교점으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="4206a86ea038ea435c1ed347f0969f9d822ce69d" translate="yes" xml:space="preserve">
          <source>FOLLOW(M): the set of tokens allowed to follow immediately after some fragment matched by M.</source>
          <target state="translated">FOLLOW (M) : M과 일치하는 일부 조각 직후에 따라갈 수있는 토큰 세트.</target>
        </trans-unit>
        <trans-unit id="e8725359cf480c43172e8daff805567af5ab28a1" translate="yes" xml:space="preserve">
          <source>FOLLOW(expr) = FOLLOW(stmt) = {&lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;}`.</source>
          <target state="translated">FOLLOW (EXPR) = FOLLOW (STMT) = { &lt;code&gt;=&amp;gt;&lt;/code&gt; , &lt;code&gt;,&lt;/code&gt; , &lt;code&gt;;&lt;/code&gt; }`.</target>
        </trans-unit>
        <trans-unit id="f1c94b0843a99531c8c835aca785adb4c5a90dfb" translate="yes" xml:space="preserve">
          <source>FOLLOW(pat) = {&lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;in&lt;/code&gt;}`.</source>
          <target state="translated">FOLLOW (팻) = { &lt;code&gt;=&amp;gt;&lt;/code&gt; , &lt;code&gt;,&lt;/code&gt; , &lt;code&gt;=&lt;/code&gt; , &lt;code&gt;|&lt;/code&gt; , &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;in&lt;/code&gt; `}.</target>
        </trans-unit>
        <trans-unit id="885a9fff1d5cc3b15f49b530772bdc214e6a723a" translate="yes" xml:space="preserve">
          <source>FOLLOW(t) = ANYTOKEN for any other simple token, including block, ident, tt, item, lifetime, literal and meta simple nonterminals, and all terminals.</source>
          <target state="translated">FOLLOW (t) = 블록, ID, tt, 항목, 수명, 리터럴 및 메타 단순 비 터미널 및 모든 터미널을 포함한 다른 모든 단순 토큰에 대한 ANYTOKEN.</target>
        </trans-unit>
        <trans-unit id="ba430e4179365d182ff4146ae1dcefc0d6523dab" translate="yes" xml:space="preserve">
          <source>FOLLOW(ty) = FOLLOW(path) = {&lt;code&gt;{&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;as&lt;/code&gt;, &lt;code&gt;where&lt;/code&gt;, block nonterminals}.</source>
          <target state="translated">FOLLOW (TY) = FOLLOW (경로) = { &lt;code&gt;{&lt;/code&gt; , &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;,&lt;/code&gt; , &lt;code&gt;=&amp;gt;&lt;/code&gt; , &lt;code&gt;:&lt;/code&gt; , &lt;code&gt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;;&lt;/code&gt; , &lt;code&gt;|&lt;/code&gt; , &lt;code&gt;as&lt;/code&gt; , &lt;code&gt;where&lt;/code&gt; , 블록 비끝}.</target>
        </trans-unit>
        <trans-unit id="52673718fb30daab6c2f4857915def92bbf5b6a9" translate="yes" xml:space="preserve">
          <source>FOLLOW(vis) = {&lt;code&gt;,&lt;/code&gt;l any keyword or identifier except a non-raw &lt;code&gt;priv&lt;/code&gt;; any token that can begin a type; ident, ty, and path nonterminals}.</source>
          <target state="translated">FOLLOW (힘) = { &lt;code&gt;,&lt;/code&gt; L 비 원시 제외한 키워드 또는 식별자 &lt;code&gt;priv&lt;/code&gt; ; 유형을 시작할 수있는 모든 토큰; ident, ty 및 path nonterminals}.</target>
        </trans-unit>
        <trans-unit id="f90089a1ed80c5ba9419cdf50dfc612afc536d22" translate="yes" xml:space="preserve">
          <source>FRAC_1_PI</source>
          <target state="translated">FRAC_1_PI</target>
        </trans-unit>
        <trans-unit id="e0319e1e557b6305c1c1499cfe0364b5f5cc1130" translate="yes" xml:space="preserve">
          <source>FRAC_1_SQRT_2</source>
          <target state="translated">FRAC_1_SQRT_2</target>
        </trans-unit>
        <trans-unit id="a81334f47dfc908c4c0fb84f83be29c7ab8a4f51" translate="yes" xml:space="preserve">
          <source>FRAC_2_PI</source>
          <target state="translated">FRAC_2_PI</target>
        </trans-unit>
        <trans-unit id="abd901b4867c68111461f7868ae952e8b3de69c1" translate="yes" xml:space="preserve">
          <source>FRAC_2_SQRT_PI</source>
          <target state="translated">FRAC_2_SQRT_PI</target>
        </trans-unit>
        <trans-unit id="573bed53f67faec190045c494f61c1a015153c37" translate="yes" xml:space="preserve">
          <source>FRAC_PI_2</source>
          <target state="translated">FRAC_PI_2</target>
        </trans-unit>
        <trans-unit id="22e278fb1970a27028037caf41c34dee6e5f7c42" translate="yes" xml:space="preserve">
          <source>FRAC_PI_3</source>
          <target state="translated">FRAC_PI_3</target>
        </trans-unit>
        <trans-unit id="e6b17be70a78fe06e105098e0e4ee099ad3f5080" translate="yes" xml:space="preserve">
          <source>FRAC_PI_4</source>
          <target state="translated">FRAC_PI_4</target>
        </trans-unit>
        <trans-unit id="d3d8ae944016d01d1e199f96bd61ce54950f390e" translate="yes" xml:space="preserve">
          <source>FRAC_PI_6</source>
          <target state="translated">FRAC_PI_6</target>
        </trans-unit>
        <trans-unit id="0de52d1fda4d16632d5fb2ad97ae761dc9c7a143" translate="yes" xml:space="preserve">
          <source>FRAC_PI_8</source>
          <target state="translated">FRAC_PI_8</target>
        </trans-unit>
        <trans-unit id="7dc91a3674464a8b5ea13cab4dcb4989d95397d1" translate="yes" xml:space="preserve">
          <source>Failing that, the returned string slice may reference invalid memory or violate the invariants communicated by the &lt;code&gt;str&lt;/code&gt; type.</source>
          <target state="translated">실패하면, 리턴 된 문자열 슬라이스는 유효하지 않은 메모리를 참조하거나 &lt;code&gt;str&lt;/code&gt; 유형에 의해 통신 된 불변량을 위반할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="59f40a06eb57b6054d241382e155735a3d65877b" translate="yes" xml:space="preserve">
          <source>Failing to parse:</source>
          <target state="translated">파싱 ​​실패 :</target>
        </trans-unit>
        <trans-unit id="7cbcd570eef4be686a49dc2bc2d0e5442816cd50" translate="yes" xml:space="preserve">
          <source>Failure to call &lt;a href=&quot;#method.from_raw&quot;&gt;&lt;code&gt;from_raw&lt;/code&gt;&lt;/a&gt; will lead to a memory leak.</source>
          <target state="translated">&lt;a href=&quot;#method.from_raw&quot;&gt; &lt;code&gt;from_raw&lt;/code&gt; &lt;/a&gt; 를 호출하지 않으면 메모리 누수가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="63226f57689a39a588b9556e8ae268e590c871c9" translate="yes" xml:space="preserve">
          <source>Failure to call &lt;a href=&quot;struct.cstring#method.from_raw&quot;&gt;&lt;code&gt;CString::from_raw&lt;/code&gt;&lt;/a&gt; will lead to a memory leak.</source>
          <target state="translated">&lt;a href=&quot;struct.cstring#method.from_raw&quot;&gt; &lt;code&gt;CString::from_raw&lt;/code&gt; &lt;/a&gt; 를 호출하지 못하면 메모리 누수가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ef83abf2a1fc75890fc470998be15db9d3f0072b" translate="yes" xml:space="preserve">
          <source>Farsi</source>
          <target state="translated">Farsi</target>
        </trans-unit>
        <trans-unit id="64af9d58fb2be75f9f4f919ce107fc70b472fbec" translate="yes" xml:space="preserve">
          <source>Fat pointers are pointers referencing Dynamically Sized Types (also called DST). DST don't have a statically known size, therefore they can only exist behind some kind of pointers that contain additional information. Slices and trait objects are DSTs. In the case of slices, the additional information the fat pointer holds is their size.</source>
          <target state="translated">팻 포인터는 동적 크기 유형 (DST라고도 함)을 참조하는 포인터입니다. DST에는 정적으로 알려진 크기가 없으므로 추가 정보가 포함 된 특정 유형의 포인터 뒤에 만 존재할 수 있습니다. 슬라이스와 특성 오브젝트는 DST입니다. 슬라이스의 경우 지방 포인터가 보유한 추가 정보는 크기입니다.</target>
        </trans-unit>
        <trans-unit id="28b58decbe9e8a9fb1763209ba7f2c5ddd1c193d" translate="yes" xml:space="preserve">
          <source>Fat pointers are pointers referencing Dynamically Sized Types (also called DSTs). DSTs don't have a statically known size, therefore they can only exist behind some kind of pointer that contains additional information. For example, slices and trait objects are DSTs. In the case of slices, the additional information the fat pointer holds is their size.</source>
          <target state="translated">팻 포인터는 동적 크기 유형 (DST라고도 함)을 참조하는 포인터입니다. DST는 정적으로 알려진 크기가 없으므로 추가 정보가 포함 된 포인터 뒤에 만 존재할 수 있습니다. 예를 들어, 슬라이스 및 특성 개체는 DST입니다. 슬라이스의 경우 팻 포인터가 보유하는 추가 정보는 크기입니다.</target>
        </trans-unit>
        <trans-unit id="50d55b8c7dec496f1ef87e07f896e26b69229e1b" translate="yes" xml:space="preserve">
          <source>FatArrow</source>
          <target state="translated">FatArrow</target>
        </trans-unit>
        <trans-unit id="7e4287b17a40231f59d61622530e62a29a3443af" translate="yes" xml:space="preserve">
          <source>Fatal logic errors in Rust cause &lt;em&gt;thread panic&lt;/em&gt;, during which a thread will unwind the stack, running destructors and freeing owned resources. While not meant as a 'try/catch' mechanism, panics in Rust can nonetheless be caught (unless compiling with &lt;code&gt;panic=abort&lt;/code&gt;) with &lt;a href=&quot;../panic/fn.catch_unwind&quot;&gt;&lt;code&gt;catch_unwind&lt;/code&gt;&lt;/a&gt; and recovered from, or alternatively be resumed with &lt;a href=&quot;../panic/fn.resume_unwind&quot;&gt;&lt;code&gt;resume_unwind&lt;/code&gt;&lt;/a&gt;. If the panic is not caught the thread will exit, but the panic may optionally be detected from a different thread with &lt;a href=&quot;struct.joinhandle#method.join&quot;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt;. If the main thread panics without the panic being caught, the application will exit with a non-zero exit code.</source>
          <target state="translated">Rust의 치명적인 로직 오류로 인해 &lt;em&gt;스레드 패닉&lt;/em&gt; 이 발생하여 스레드가 스택을 풀고 소멸자를 실행하고 소유 한 리소스를 해제합니다. 는 '시도 / 캐치'메커니즘으로 의미하는 것은 아니지만, 녹에 패닉 그럼에도 불구하고 (컴파일하지 않으면 잡을 수 &lt;code&gt;panic=abort&lt;/code&gt; 과) &lt;a href=&quot;../panic/fn.catch_unwind&quot;&gt; &lt;code&gt;catch_unwind&lt;/code&gt; &lt;/a&gt; 과에서 회수, 또는 대안으로 재개 될 &lt;a href=&quot;../panic/fn.resume_unwind&quot;&gt; &lt;code&gt;resume_unwind&lt;/code&gt; &lt;/a&gt; . 패닉이 발생하지 않으면 스레드가 종료되지만 &lt;a href=&quot;struct.joinhandle#method.join&quot;&gt; &lt;code&gt;join&lt;/code&gt; &lt;/a&gt; 은 다른 스레드에서 패닉을 선택적으로 감지 할 수 있습니다 . 패닉이 발생하지 않고 메인 스레드 패닉이 발생하면 애플리케이션은 0이 아닌 종료 코드로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="ddbe3169df2a0f74f163681bf351df5db1d13339" translate="yes" xml:space="preserve">
          <source>Fearless Concurrency</source>
          <target state="translated">두려움없는 동시성</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="0b807bdc730a4b27845b24638a849382424bab42" translate="yes" xml:space="preserve">
          <source>Feature attributes are only allowed on the nightly release channel. Stable or beta compilers will not comply.</source>
          <target state="translated">기능 속성은 야간 릴리스 채널에서만 허용됩니다. 안정적인 또는 베타 컴파일러는 준수하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="e9283f20f4304ed3eb3ce57ab07963c3a1b777bf" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given &lt;a href=&quot;../../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 유형의 조각을 주어진 &lt;a href=&quot;../../hash/trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; 에 공급&lt;/a&gt; 합니다. &lt;a href=&quot;../../hash/trait.hash#method.hash_slice&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94e7a00a78ea9d3b1a1df39ebe9775ab03b8b174" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given &lt;a href=&quot;../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 유형의 조각을 주어진 &lt;a href=&quot;../hash/trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; 에 공급&lt;/a&gt; 합니다. &lt;a href=&quot;../hash/trait.hash#method.hash_slice&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3086754a1899641d3271946a0c848c3c20b60f8" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given &lt;a href=&quot;hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 유형의 조각을 주어진 &lt;a href=&quot;hash/trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; 에 공급&lt;/a&gt; 합니다. &lt;a href=&quot;hash/trait.hash#method.hash_slice&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c777023546e54e748b36703160b53d183118a8bb" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 유형의 슬라이스를 지정된 &lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; 에 공급&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="ce5e264a52b8a95f0d288d4a511af0782f37de5d" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;../../hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 유형의 슬라이스를 주어진 [ &lt;code&gt;Hasher&lt;/code&gt; ]에 공급합니다. &lt;a href=&quot;../../hash/trait.hash#method.hash_slice&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5b2875a97a1836943f337622e3bfe4abf69acb3" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;../hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 유형의 슬라이스를 주어진 [ &lt;code&gt;Hasher&lt;/code&gt; ]에 공급합니다. &lt;a href=&quot;../hash/trait.hash#method.hash_slice&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a51782694579b108f11b3021d7eed3af1932ab8" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 유형의 슬라이스를 주어진 [ &lt;code&gt;Hasher&lt;/code&gt; ]에 공급합니다. &lt;a href=&quot;hash/trait.hash#method.hash_slice&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6e4eeab3a7b22e0bacc65049fc3dbdd0361b21f" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given &lt;a href=&quot;../../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 값을 주어진 &lt;a href=&quot;../../hash/trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; 에 공급&lt;/a&gt; 합니다. &lt;a href=&quot;../../hash/trait.hash#tymethod.hash&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9336eaa28085928d881d753dbb23a679ec860ef" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given &lt;a href=&quot;../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 값을 주어진 &lt;a href=&quot;../hash/trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; 에 공급&lt;/a&gt; 합니다. &lt;a href=&quot;../hash/trait.hash#tymethod.hash&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="553b072888e14f6fb589f877d5453630501eeea6" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given &lt;a href=&quot;hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 값을 주어진 &lt;a href=&quot;hash/trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; 에 공급&lt;/a&gt; 합니다. &lt;a href=&quot;hash/trait.hash#tymethod.hash&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="712dd6a1f0b25bc76164e57bc7b7ed06b793d8d1" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 값을 지정된 &lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; 에 공급&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="528dc4ba180b5e0fdf3a460356136d0d4538452c" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;../../hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 값을 주어진 [ &lt;code&gt;Hasher&lt;/code&gt; ]에 공급합니다. &lt;a href=&quot;../../hash/trait.hash#tymethod.hash&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a7253be47a5e33a8974cf031ca870cdd79ea7e2" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;../hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 값을 주어진 [ &lt;code&gt;Hasher&lt;/code&gt; ]에 공급합니다. &lt;a href=&quot;../hash/trait.hash#tymethod.hash&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8b797a2e1e90add5c3065eedd796f7422be504b" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 값을 주어진 [ &lt;code&gt;Hasher&lt;/code&gt; ]에 공급합니다. &lt;a href=&quot;hash/trait.hash#tymethod.hash&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20c6342d5558b78fbfcaebca035cf96cfc09fd61" translate="yes" xml:space="preserve">
          <source>Ferris</source>
          <target state="translated">Ferris</target>
        </trans-unit>
        <trans-unit id="4e97b12e606426cf2a177817b263cd257d8395c3" translate="yes" xml:space="preserve">
          <source>Fetch a &lt;code&gt;Utf8Error&lt;/code&gt; to get more details about the conversion failure.</source>
          <target state="translated">변환 실패에 대한 자세한 정보를 얻으려면 &lt;code&gt;Utf8Error&lt;/code&gt; 를 가져 오십시오 .</target>
        </trans-unit>
        <trans-unit id="aed2f625af6f4e5c53c8ff520b59a87ae9f84782" translate="yes" xml:space="preserve">
          <source>Fetches the environment variable &lt;code&gt;key&lt;/code&gt; from the current process, returning &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the variable isn't set.</source>
          <target state="translated">현재 프로세스에서 환경 변수 &lt;code&gt;key&lt;/code&gt; 가져오고 변수가 설정되어 있지 않으면 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; 을&lt;/a&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b340540df67cdd46ed6d6149644b82642c536a79" translate="yes" xml:space="preserve">
          <source>Fetches the environment variable &lt;code&gt;key&lt;/code&gt; from the current process.</source>
          <target state="translated">현재 프로세스에서 환경 변수 &lt;code&gt;key&lt;/code&gt; 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6f772ad7b037ef600e878b61e303f6b7de4e1cd5" translate="yes" xml:space="preserve">
          <source>Fetches the value, and applies a function to it that returns an optional new value. Returns a &lt;code&gt;Result&lt;/code&gt; of &lt;code&gt;Ok(previous_value)&lt;/code&gt; if the function returned &lt;code&gt;Some(_)&lt;/code&gt;, else &lt;code&gt;Err(previous_value)&lt;/code&gt;.</source>
          <target state="translated">값을 가져오고 선택적인 새 값을 반환하는 함수를 적용합니다. 함수가 &lt;code&gt;Some(_)&lt;/code&gt; 반환 한 경우 &lt;code&gt;Ok(previous_value)&lt;/code&gt; ) , 그렇지 않으면 &lt;code&gt;Err(previous_value)&lt;/code&gt; 의 &lt;code&gt;Result&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="026307a2e2b198a7b11b4e487771b106a1c55079" translate="yes" xml:space="preserve">
          <source>Field access expressions</source>
          <target state="translated">필드 액세스 표현식</target>
        </trans-unit>
        <trans-unit id="c65fecfa2a096796cbc5310420806ac4c241ef80" translate="yes" xml:space="preserve">
          <source>Field accesses on structs and tuples</source>
          <target state="translated">구조체와 튜플에 대한 필드 액세스</target>
        </trans-unit>
        <trans-unit id="caa8c98ec1d007ced9fbda047a0a1b901d77e628" translate="yes" xml:space="preserve">
          <source>Field expressions</source>
          <target state="translated">필드 표현식</target>
        </trans-unit>
        <trans-unit id="deb6e7b9bef56dbdb9c8601b67588b2bb8dc955b" translate="yes" xml:space="preserve">
          <source>Field struct expression</source>
          <target state="translated">필드 구조체 표현</target>
        </trans-unit>
        <trans-unit id="e8b685271238adf161cffed3c91f54d97023262b" translate="yes" xml:space="preserve">
          <source>Fields</source>
          <target state="translated">Fields</target>
        </trans-unit>
        <trans-unit id="9cce6e78930a15ffa1e05f69626dac54cef653ea" translate="yes" xml:space="preserve">
          <source>Fields and &lt;a href=&quot;items/enumerations&quot;&gt;variants&lt;/a&gt;</source>
          <target state="translated">필드와 &lt;a href=&quot;items/enumerations&quot;&gt;변형&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3ca41b484fb0424fdf0e477fab4e7d183fa2eac" translate="yes" xml:space="preserve">
          <source>Fields without structural pinning may have a projection method that turns &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&amp;amp;mut Struct&amp;gt;&lt;/code&gt; into &lt;code&gt;&amp;amp;mut Field&lt;/code&gt;:</source>
          <target state="translated">구조적 고정이없는 필드에는 &lt;code&gt;&amp;lt;&amp;amp;mut Struct&amp;gt;&lt;/code&gt; &lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;&amp;amp;mut Field&lt;/code&gt; 로 바꾸는 투영 방법이있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3334577210e32a2009e2aeab4e368b539dfe28a0" translate="yes" xml:space="preserve">
          <source>Fields without structural pinning may have a projection method that turns &lt;code&gt;Pin&amp;lt;&amp;amp;mut Struct&amp;gt;&lt;/code&gt; into &lt;code&gt;&amp;amp;mut Field&lt;/code&gt;:</source>
          <target state="translated">구조적 고정이없는 필드에는 &lt;code&gt;Pin&amp;lt;&amp;amp;mut Struct&amp;gt;&lt;/code&gt; 를 &lt;code&gt;&amp;amp;mut Field&lt;/code&gt; 로 변환 하는 투영 방법이있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f9b5c22ad800082c7a5957c226059bbfcb18e083" translate="yes" xml:space="preserve">
          <source>Figure 14-1: HTML documentation for the &lt;code&gt;add_one&lt;/code&gt; function</source>
          <target state="translated">그림 14-1 : &lt;code&gt;add_one&lt;/code&gt; 함수에 대한 HTML 문서</target>
        </trans-unit>
        <trans-unit id="47215be469a189ca970f4bde70948486d8efef2a" translate="yes" xml:space="preserve">
          <source>Figure 14-2: Rendered documentation for &lt;code&gt;my_crate&lt;/code&gt;, including the comment describing the crate as a whole</source>
          <target state="translated">그림 14-2 : 상자 전체를 설명하는 주석을 포함하여 &lt;code&gt;my_crate&lt;/code&gt; 에 대한 렌더링 된 문서</target>
        </trans-unit>
        <trans-unit id="9d23324502a10649bdfd0211dc814e9d6f80f334" translate="yes" xml:space="preserve">
          <source>Figure 14-3 shows what the front page of the documentation for this crate generated by &lt;code&gt;cargo doc&lt;/code&gt; would look like:</source>
          <target state="translated">그림 14-3 &lt;code&gt;cargo doc&lt;/code&gt; 생성 한이 상자에 대한 설명서의 첫 페이지를 보여줍니다. .</target>
        </trans-unit>
        <trans-unit id="6cbdc555f4e8275dbf75958fe807fbcf1bd028c3" translate="yes" xml:space="preserve">
          <source>Figure 14-3: Front page of the documentation for &lt;code&gt;art&lt;/code&gt; that lists the &lt;code&gt;kinds&lt;/code&gt; and &lt;code&gt;utils&lt;/code&gt; modules</source>
          <target state="translated">그림 14-3 : &lt;code&gt;kinds&lt;/code&gt; 및 &lt;code&gt;utils&lt;/code&gt; 모듈 이 나열된 &lt;code&gt;art&lt;/code&gt; 관련 문서의 첫 페이지</target>
        </trans-unit>
        <trans-unit id="c9d76b1e9908cad97786dd3a47ce45581971b401" translate="yes" xml:space="preserve">
          <source>Figure 14-4: The front page of the documentation for &lt;code&gt;art&lt;/code&gt; that lists the re-exports</source>
          <target state="translated">그림 14-4 : &lt;code&gt;art&lt;/code&gt; 관련 문서의 첫 페이지 재수출을 나열한</target>
        </trans-unit>
        <trans-unit id="6a60f2bc2c0b4fba0e9c2110209113455ada6763" translate="yes" xml:space="preserve">
          <source>Figure 15-1: An infinite &lt;code&gt;List&lt;/code&gt; consisting of infinite &lt;code&gt;Cons&lt;/code&gt; variants</source>
          <target state="translated">그림 15-1 : 무한 &lt;code&gt;Cons&lt;/code&gt; 으로 구성된 무한 &lt;code&gt;List&lt;/code&gt; 변형</target>
        </trans-unit>
        <trans-unit id="7ceebef5638620d07e5bc17ec9f5c0097945b32b" translate="yes" xml:space="preserve">
          <source>Figure 15-2: A &lt;code&gt;List&lt;/code&gt; that is not infinitely sized because &lt;code&gt;Cons&lt;/code&gt; holds a &lt;code&gt;Box&lt;/code&gt;</source>
          <target state="translated">그림 15-2 : &lt;code&gt;Cons&lt;/code&gt; 에 &lt;code&gt;Box&lt;/code&gt; 있기 때문에 크기가 무한한 &lt;code&gt;List&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3979138bda43e17af7993681a6c9de25829d6b5c" translate="yes" xml:space="preserve">
          <source>Figure 15-3: Two lists, &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;, sharing ownership of a third list, &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">그림 15-3 : 두 번째 목록 &lt;code&gt;b&lt;/code&gt; 와 &lt;code&gt;c&lt;/code&gt; 는 세 번째 목록의 소유권을 공유 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9749a310dbf65124d6b52c446cbeadf16aca2868" translate="yes" xml:space="preserve">
          <source>Figure 15-4: A reference cycle of lists &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; pointing to each other</source>
          <target state="translated">그림 15-4 : 목록 &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 의 참조주기 가 서로를 가리키는</target>
        </trans-unit>
        <trans-unit id="d911acbcc012bd6ae8a8d34419e851de3d989743" translate="yes" xml:space="preserve">
          <source>Figure 20-1: Our final shared project</source>
          <target state="translated">그림 20-1 : 최종 공유 프로젝트</target>
        </trans-unit>
        <trans-unit id="94348a85e2baa754a6c88b9f15b8f20ecff6ca6a" translate="yes" xml:space="preserve">
          <source>Figure 4-1: Representation in memory of a &lt;code&gt;String&lt;/code&gt; holding the value &lt;code&gt;&quot;hello&quot;&lt;/code&gt; bound to &lt;code&gt;s1&lt;/code&gt;</source>
          <target state="translated">그림 4-1 : &lt;code&gt;s1&lt;/code&gt; 에 바인드 된 &lt;code&gt;&quot;hello&quot;&lt;/code&gt; 값을 보유한 &lt;code&gt;String&lt;/code&gt; 메모리 표현</target>
        </trans-unit>
        <trans-unit id="6d60241f03ce61fbfde9bb38dff136b2ebc9f438" translate="yes" xml:space="preserve">
          <source>Figure 4-2: Representation in memory of the variable &lt;code&gt;s2&lt;/code&gt; that has a copy of the pointer, length, and capacity of &lt;code&gt;s1&lt;/code&gt;</source>
          <target state="translated">도 4-2 : 변수를 메모리에 표현 &lt;code&gt;s2&lt;/code&gt; 포인터 길이의 복사본을 가지고 있으며, 용량 &lt;code&gt;s1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b4c9fe8ce2ac2fe08f18ef7384d2f5e33c8f6dd" translate="yes" xml:space="preserve">
          <source>Figure 4-3: Another possibility for what &lt;code&gt;s2 = s1&lt;/code&gt; might do if Rust copied the heap data as well</source>
          <target state="translated">그림 4-3 : Rust이 힙 데이터를 복사 한 경우 &lt;code&gt;s2 = s1&lt;/code&gt; 이 수행 할 수있는 또 다른 가능성</target>
        </trans-unit>
        <trans-unit id="3ee3bdd573f51164612a3321eeda173f6e011080" translate="yes" xml:space="preserve">
          <source>Figure 4-4: Representation in memory after &lt;code&gt;s1&lt;/code&gt; has been invalidated</source>
          <target state="translated">그림 4-4 : &lt;code&gt;s1&lt;/code&gt; 이 무효화 된 후 메모리에 표시</target>
        </trans-unit>
        <trans-unit id="40e2720f5df50422ab02b09a5a1f6311c2356514" translate="yes" xml:space="preserve">
          <source>Figure 4-5: A diagram of &lt;code&gt;&amp;amp;String s&lt;/code&gt; pointing at &lt;code&gt;String s1&lt;/code&gt;</source>
          <target state="translated">그림 4-5 : &lt;code&gt;String s1&lt;/code&gt; 가리키는 &lt;code&gt;&amp;amp;String s&lt;/code&gt; 다이어그램</target>
        </trans-unit>
        <trans-unit id="362f8cc9378a25ae691e8ceef6aac1b07a01360f" translate="yes" xml:space="preserve">
          <source>Figure 4-6 shows this in a diagram.</source>
          <target state="translated">그림 4-6은 이것을 다이어그램으로 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="64753bfc974befeeb207db9ae8164a90b743dadb" translate="yes" xml:space="preserve">
          <source>Figure 4-6: String slice referring to part of a &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">그림 4-6 : 문자열 조각은의 일부를 참조 &lt;code&gt;String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="71586db00903f9292b2b685a2888975f06820d67" translate="yes" xml:space="preserve">
          <source>File 'main.rs':</source>
          <target state="translated">'main.rs'파일 :</target>
        </trans-unit>
        <trans-unit id="f189168706980cccdcec9897ca166a464ad0c3c5" translate="yes" xml:space="preserve">
          <source>File 'monkeys.in':</source>
          <target state="translated">'monkeys.in'파일 :</target>
        </trans-unit>
        <trans-unit id="64ae82ace4169c576e88c6922bb42eb840728222" translate="yes" xml:space="preserve">
          <source>File 'spanish.in':</source>
          <target state="translated">'spanish.in'파일 :</target>
        </trans-unit>
        <trans-unit id="5f69c18fff67e9bb3de98093917fcea8886d0491" translate="yes" xml:space="preserve">
          <source>File Contents</source>
          <target state="translated">파일 내용</target>
        </trans-unit>
        <trans-unit id="3a8ce65b275014da9366a333c528cc11a27603ad" translate="yes" xml:space="preserve">
          <source>File::as_raw_fd</source>
          <target state="translated">File::as_raw_fd</target>
        </trans-unit>
        <trans-unit id="3d449c38270541419bb0081c528587aba3397218" translate="yes" xml:space="preserve">
          <source>File::as_raw_handle</source>
          <target state="translated">File::as_raw_handle</target>
        </trans-unit>
        <trans-unit id="2056fccad8d9b2001409dacfc6cf02024cffb307" translate="yes" xml:space="preserve">
          <source>File::borrow</source>
          <target state="translated">File::borrow</target>
        </trans-unit>
        <trans-unit id="c5830e06e8a92a0fd9c3e097ccddd2b690bdc088" translate="yes" xml:space="preserve">
          <source>File::borrow_mut</source>
          <target state="translated">File::borrow_mut</target>
        </trans-unit>
        <trans-unit id="d65814ca1f8b90061da3e18a4bc24397f086a9fe" translate="yes" xml:space="preserve">
          <source>File::by_ref</source>
          <target state="translated">File::by_ref</target>
        </trans-unit>
        <trans-unit id="773cd8a79ad9c419222201aaf0bf0218f2c7accf" translate="yes" xml:space="preserve">
          <source>File::bytes</source>
          <target state="translated">File::bytes</target>
        </trans-unit>
        <trans-unit id="a0f3595139353ee753bcd2ff03a5fc64e77911ae" translate="yes" xml:space="preserve">
          <source>File::chain</source>
          <target state="translated">File::chain</target>
        </trans-unit>
        <trans-unit id="95e8cd86390d00f3896c2230ccdd160c9bc23025" translate="yes" xml:space="preserve">
          <source>File::create</source>
          <target state="translated">File::create</target>
        </trans-unit>
        <trans-unit id="54ca8ca0fc241592a42be655c6d268820df9355f" translate="yes" xml:space="preserve">
          <source>File::flush</source>
          <target state="translated">File::flush</target>
        </trans-unit>
        <trans-unit id="e01a168a8912a7cc5799bfb1c398439aec9f4ed1" translate="yes" xml:space="preserve">
          <source>File::fmt</source>
          <target state="translated">File::fmt</target>
        </trans-unit>
        <trans-unit id="462aa700e0b01fb5561cb0c83a065ba37dc301cd" translate="yes" xml:space="preserve">
          <source>File::from</source>
          <target state="translated">File::from</target>
        </trans-unit>
        <trans-unit id="70291bc5b9877c92db3ab4265d45317b2b617c36" translate="yes" xml:space="preserve">
          <source>File::from_raw_fd</source>
          <target state="translated">File::from_raw_fd</target>
        </trans-unit>
        <trans-unit id="0fbc45812981a1ce2ce84aee914f58e3a41e23c0" translate="yes" xml:space="preserve">
          <source>File::from_raw_handle</source>
          <target state="translated">File::from_raw_handle</target>
        </trans-unit>
        <trans-unit id="1e1628b4f36ad5c24d1f52ec7885156a03c69cbc" translate="yes" xml:space="preserve">
          <source>File::initializer</source>
          <target state="translated">File::initializer</target>
        </trans-unit>
        <trans-unit id="4980cc2e25a5cf505b6373948c23c2147c3a35ab" translate="yes" xml:space="preserve">
          <source>File::into</source>
          <target state="translated">File::into</target>
        </trans-unit>
        <trans-unit id="c078e8bb3863ea50046b3ae960bde55336bec78f" translate="yes" xml:space="preserve">
          <source>File::into_raw_fd</source>
          <target state="translated">File::into_raw_fd</target>
        </trans-unit>
        <trans-unit id="6528c63ba1553592afcf8e7bc775ae0f3c8bed47" translate="yes" xml:space="preserve">
          <source>File::into_raw_handle</source>
          <target state="translated">File::into_raw_handle</target>
        </trans-unit>
        <trans-unit id="68e2be694ec5d58cce4c91be7471cd46c71bebcf" translate="yes" xml:space="preserve">
          <source>File::metadata</source>
          <target state="translated">File::metadata</target>
        </trans-unit>
        <trans-unit id="97bcf3457432f7eaa769c60bfb1da6e5b2780916" translate="yes" xml:space="preserve">
          <source>File::open</source>
          <target state="translated">File::open</target>
        </trans-unit>
        <trans-unit id="f871edcbffd3f22d5da646d84c3dcfcd912271d1" translate="yes" xml:space="preserve">
          <source>File::read</source>
          <target state="translated">File::read</target>
        </trans-unit>
        <trans-unit id="a645722c97df48da34622d9796c05e2576e3949e" translate="yes" xml:space="preserve">
          <source>File::read_at</source>
          <target state="translated">File::read_at</target>
        </trans-unit>
        <trans-unit id="ba13bba4025a75bb86d9ef57bbcadf6dcfeba9ee" translate="yes" xml:space="preserve">
          <source>File::read_exact</source>
          <target state="translated">File::read_exact</target>
        </trans-unit>
        <trans-unit id="f847ce48410e6c56a723a0a7624fc3229f0b997d" translate="yes" xml:space="preserve">
          <source>File::read_exact_at</source>
          <target state="translated">File::read_exact_at</target>
        </trans-unit>
        <trans-unit id="d22500382a9c0cd111fa13ebe7d3d2e5c87ce67d" translate="yes" xml:space="preserve">
          <source>File::read_to_end</source>
          <target state="translated">File::read_to_end</target>
        </trans-unit>
        <trans-unit id="eb02a5b72eeb117477f8d7c6607e258e1005512b" translate="yes" xml:space="preserve">
          <source>File::read_to_string</source>
          <target state="translated">File::read_to_string</target>
        </trans-unit>
        <trans-unit id="cbfa0a4bdbeaaeef6f070f890e816cbe54330552" translate="yes" xml:space="preserve">
          <source>File::read_vectored</source>
          <target state="translated">File::read_vectored</target>
        </trans-unit>
        <trans-unit id="f8f3a35a864cf614552d87389a77af39b10a4fdc" translate="yes" xml:space="preserve">
          <source>File::seek</source>
          <target state="translated">File::seek</target>
        </trans-unit>
        <trans-unit id="04234ec7d9e227d6b902291ecda0b26743335f10" translate="yes" xml:space="preserve">
          <source>File::seek_read</source>
          <target state="translated">File::seek_read</target>
        </trans-unit>
        <trans-unit id="9b3226909081e77cc3da58c19157a3a7f35c0e54" translate="yes" xml:space="preserve">
          <source>File::seek_write</source>
          <target state="translated">File::seek_write</target>
        </trans-unit>
        <trans-unit id="176345e9fefce2a35bb8ca66cb1a1bc24e2975ef" translate="yes" xml:space="preserve">
          <source>File::set_len</source>
          <target state="translated">File::set_len</target>
        </trans-unit>
        <trans-unit id="9c04a0373a283e053cc19271b282da528b3c5f40" translate="yes" xml:space="preserve">
          <source>File::set_permissions</source>
          <target state="translated">File::set_permissions</target>
        </trans-unit>
        <trans-unit id="33cb7aebce418bea76661c32675dbfc4ba91da35" translate="yes" xml:space="preserve">
          <source>File::stream_len</source>
          <target state="translated">File::stream_len</target>
        </trans-unit>
        <trans-unit id="4e28fcaafba833a3d432094b16feb7b889799db7" translate="yes" xml:space="preserve">
          <source>File::stream_position</source>
          <target state="translated">File::stream_position</target>
        </trans-unit>
        <trans-unit id="64b1d6dad78834024e7e0e9efe098ba606d995db" translate="yes" xml:space="preserve">
          <source>File::sync_all</source>
          <target state="translated">File::sync_all</target>
        </trans-unit>
        <trans-unit id="e709350c4bb12a169bd7cc6ec460be2e12353b3a" translate="yes" xml:space="preserve">
          <source>File::sync_data</source>
          <target state="translated">File::sync_data</target>
        </trans-unit>
        <trans-unit id="a8fb7874744d19f9cbaacb8302104416299da469" translate="yes" xml:space="preserve">
          <source>File::take</source>
          <target state="translated">File::take</target>
        </trans-unit>
        <trans-unit id="834539604b9138ec19d39db9187ec1234190ba52" translate="yes" xml:space="preserve">
          <source>File::try_clone</source>
          <target state="translated">File::try_clone</target>
        </trans-unit>
        <trans-unit id="51ee322f66b2862e4ae82ee32794015cf227438c" translate="yes" xml:space="preserve">
          <source>File::try_from</source>
          <target state="translated">File::try_from</target>
        </trans-unit>
        <trans-unit id="5a6f3e363dc60b9c57befeee82045b9cfe478aeb" translate="yes" xml:space="preserve">
          <source>File::try_into</source>
          <target state="translated">File::try_into</target>
        </trans-unit>
        <trans-unit id="8736e53b16ffd23f947d8208f6dbbb524a31eea9" translate="yes" xml:space="preserve">
          <source>File::type_id</source>
          <target state="translated">File::type_id</target>
        </trans-unit>
        <trans-unit id="542b4a5df3e669a9980dda08577e7f13b255e2f1" translate="yes" xml:space="preserve">
          <source>File::write</source>
          <target state="translated">File::write</target>
        </trans-unit>
        <trans-unit id="9142df1de524fe95cbc714c918278848b708bd2d" translate="yes" xml:space="preserve">
          <source>File::write_all</source>
          <target state="translated">File::write_all</target>
        </trans-unit>
        <trans-unit id="44e2a43a786d888ec9d0f0e51986a7811f73a422" translate="yes" xml:space="preserve">
          <source>File::write_all_at</source>
          <target state="translated">File::write_all_at</target>
        </trans-unit>
        <trans-unit id="54384dddf08125669e0c4d1cdbd9b1b83db9d608" translate="yes" xml:space="preserve">
          <source>File::write_at</source>
          <target state="translated">File::write_at</target>
        </trans-unit>
        <trans-unit id="9fa986c60627d48b6e3d5772525cc8a9825efd1a" translate="yes" xml:space="preserve">
          <source>File::write_fmt</source>
          <target state="translated">File::write_fmt</target>
        </trans-unit>
        <trans-unit id="7ce04c077eea4442a92bc0af3afbd94829db0fb5" translate="yes" xml:space="preserve">
          <source>File::write_vectored</source>
          <target state="translated">File::write_vectored</target>
        </trans-unit>
        <trans-unit id="78b5a47a53fa4fa99be68dceb6634fc119d54a3f" translate="yes" xml:space="preserve">
          <source>FileExt</source>
          <target state="translated">FileExt</target>
        </trans-unit>
        <trans-unit id="1baa34e6560f1522cca6ce9d9df461092e8ec59b" translate="yes" xml:space="preserve">
          <source>FileType</source>
          <target state="translated">FileType</target>
        </trans-unit>
        <trans-unit id="0a5f31a5f7fa3700db102d4fc6aa5b19c0ebb2d7" translate="yes" xml:space="preserve">
          <source>FileType::borrow</source>
          <target state="translated">FileType::borrow</target>
        </trans-unit>
        <trans-unit id="2562b8c22c9447e2362ce675adc3f4ddeac34448" translate="yes" xml:space="preserve">
          <source>FileType::borrow_mut</source>
          <target state="translated">FileType::borrow_mut</target>
        </trans-unit>
        <trans-unit id="fe2bbc6cec2535dadcf4d56c61f7d1e8ecc65cf5" translate="yes" xml:space="preserve">
          <source>FileType::clone</source>
          <target state="translated">FileType::clone</target>
        </trans-unit>
        <trans-unit id="89c6ed45341ac2e4f56d80de606e3a25cc033a21" translate="yes" xml:space="preserve">
          <source>FileType::clone_from</source>
          <target state="translated">FileType::clone_from</target>
        </trans-unit>
        <trans-unit id="37889d4ad9d83c99f2e5f40ede3353cf703d878b" translate="yes" xml:space="preserve">
          <source>FileType::clone_into</source>
          <target state="translated">FileType::clone_into</target>
        </trans-unit>
        <trans-unit id="6db90bf5c72f0b1ae6fffb6b3290d61092ba6e4c" translate="yes" xml:space="preserve">
          <source>FileType::eq</source>
          <target state="translated">FileType::eq</target>
        </trans-unit>
        <trans-unit id="88e6100ee83e3e063affc8bd1d38b8abbe750f90" translate="yes" xml:space="preserve">
          <source>FileType::fmt</source>
          <target state="translated">FileType::fmt</target>
        </trans-unit>
        <trans-unit id="4c24140c0d7c4231c1c1f84a69f75acd5abee26c" translate="yes" xml:space="preserve">
          <source>FileType::from</source>
          <target state="translated">FileType::from</target>
        </trans-unit>
        <trans-unit id="d27aebc50548197adbf3d79440d218e68ac191db" translate="yes" xml:space="preserve">
          <source>FileType::hash</source>
          <target state="translated">FileType::hash</target>
        </trans-unit>
        <trans-unit id="b3e96c343c991ffee71bdd440a5ee51a29ba889b" translate="yes" xml:space="preserve">
          <source>FileType::hash_slice</source>
          <target state="translated">FileType::hash_slice</target>
        </trans-unit>
        <trans-unit id="b1da059fdf3ae975b1ff2ecd9a45dc8ee7d9f6f0" translate="yes" xml:space="preserve">
          <source>FileType::into</source>
          <target state="translated">FileType::into</target>
        </trans-unit>
        <trans-unit id="a480026f947841bd5dfd2bee65d966da23be2c07" translate="yes" xml:space="preserve">
          <source>FileType::is_block_device</source>
          <target state="translated">FileType::is_block_device</target>
        </trans-unit>
        <trans-unit id="929ec805338d0df6f5cce8afbf2a4a027cd1760c" translate="yes" xml:space="preserve">
          <source>FileType::is_char_device</source>
          <target state="translated">FileType::is_char_device</target>
        </trans-unit>
        <trans-unit id="da96f9ff8310fbe6949063c55fb9b0080bb1235b" translate="yes" xml:space="preserve">
          <source>FileType::is_dir</source>
          <target state="translated">FileType::is_dir</target>
        </trans-unit>
        <trans-unit id="a6d81d0cd16f71094838b204a36990745cb29023" translate="yes" xml:space="preserve">
          <source>FileType::is_fifo</source>
          <target state="translated">FileType::is_fifo</target>
        </trans-unit>
        <trans-unit id="2af1f0a4636078633359db0f3181940d1c2a204b" translate="yes" xml:space="preserve">
          <source>FileType::is_file</source>
          <target state="translated">FileType::is_file</target>
        </trans-unit>
        <trans-unit id="3c1333f1991bced2e5ce2d74904700f65938202d" translate="yes" xml:space="preserve">
          <source>FileType::is_socket</source>
          <target state="translated">FileType::is_socket</target>
        </trans-unit>
        <trans-unit id="60df6415a8b30206c092cfe0fbae9032ba5e2cd1" translate="yes" xml:space="preserve">
          <source>FileType::is_symlink</source>
          <target state="translated">FileType::is_symlink</target>
        </trans-unit>
        <trans-unit id="4e343fd9143441200113a8f67932edca6bc93b9f" translate="yes" xml:space="preserve">
          <source>FileType::is_symlink_dir</source>
          <target state="translated">FileType::is_symlink_dir</target>
        </trans-unit>
        <trans-unit id="c9ad14b62a571a2536098caeee8ea7b916e53728" translate="yes" xml:space="preserve">
          <source>FileType::is_symlink_file</source>
          <target state="translated">FileType::is_symlink_file</target>
        </trans-unit>
        <trans-unit id="a7096bc6ac2d873191e604408d3cd0131982214d" translate="yes" xml:space="preserve">
          <source>FileType::ne</source>
          <target state="translated">FileType::ne</target>
        </trans-unit>
        <trans-unit id="1f1334a629b5790555cc45dc52576d862e1b09bf" translate="yes" xml:space="preserve">
          <source>FileType::to_owned</source>
          <target state="translated">FileType::to_owned</target>
        </trans-unit>
        <trans-unit id="4e9fe33eecd6adda90387c8f66e59fffd6597a45" translate="yes" xml:space="preserve">
          <source>FileType::try_from</source>
          <target state="translated">FileType::try_from</target>
        </trans-unit>
        <trans-unit id="aee4d692b20b4419f3509460ce95c21892a13f39" translate="yes" xml:space="preserve">
          <source>FileType::try_into</source>
          <target state="translated">FileType::try_into</target>
        </trans-unit>
        <trans-unit id="5ff5f887e7b3e8aff555d49306612e357675c9bd" translate="yes" xml:space="preserve">
          <source>FileType::type_id</source>
          <target state="translated">FileType::type_id</target>
        </trans-unit>
        <trans-unit id="929cc186c19be1918402ad5662ea29c9cc865b4b" translate="yes" xml:space="preserve">
          <source>FileTypeExt</source>
          <target state="translated">FileTypeExt</target>
        </trans-unit>
        <trans-unit id="3972652ca488790a15415879855d53ac012c75d8" translate="yes" xml:space="preserve">
          <source>Filename: 404.html</source>
          <target state="translated">파일 이름 : 404.html</target>
        </trans-unit>
        <trans-unit id="187ac0475d2c3726c770569bbd34586a2bc90a27" translate="yes" xml:space="preserve">
          <source>Filename: Cargo.toml</source>
          <target state="translated">파일 이름 : Cargo.toml</target>
        </trans-unit>
        <trans-unit id="e98cdddb1ee8e7c4da95cb3ab4be1e783886b76c" translate="yes" xml:space="preserve">
          <source>Filename: add-one/Cargo.toml</source>
          <target state="translated">파일 이름 : add-one / Cargo.toml</target>
        </trans-unit>
        <trans-unit id="8b0ea8f4a250a566178380bcc9a555524c06a32d" translate="yes" xml:space="preserve">
          <source>Filename: add-one/src/lib.rs</source>
          <target state="translated">파일 이름 : add-one / src / lib.rs</target>
        </trans-unit>
        <trans-unit id="ab8fe577535c87d7dd689486f1d41a8080c2f271" translate="yes" xml:space="preserve">
          <source>Filename: adder/Cargo.toml</source>
          <target state="translated">파일 이름 : adder / Cargo.toml</target>
        </trans-unit>
        <trans-unit id="a90b8a2a0f924bd6227af083f347aa7353d3f031" translate="yes" xml:space="preserve">
          <source>Filename: adder/src/main.rs</source>
          <target state="translated">파일 이름 : adder / src / main.rs</target>
        </trans-unit>
        <trans-unit id="55f9db44bd21ac460147a956ffca8a2b4cb94f18" translate="yes" xml:space="preserve">
          <source>Filename: hello.html</source>
          <target state="translated">파일 이름 : hello.html</target>
        </trans-unit>
        <trans-unit id="5c1a8e7babcba6042bc1a6786f94a4f521498fff" translate="yes" xml:space="preserve">
          <source>Filename: hello_macro_derive/Cargo.toml</source>
          <target state="translated">파일 이름 : hello_macro_derive / Cargo.toml</target>
        </trans-unit>
        <trans-unit id="0c53901dfc6059b090347760f0e4570d0a6ea6b4" translate="yes" xml:space="preserve">
          <source>Filename: hello_macro_derive/src/lib.rs</source>
          <target state="translated">파일 이름 : hello_macro_derive / src / lib.rs</target>
        </trans-unit>
        <trans-unit id="c085a35a49926c12b0b2f35a9d7e21e1f29ddfad" translate="yes" xml:space="preserve">
          <source>Filename: main.rs</source>
          <target state="translated">파일 이름 : main.rs</target>
        </trans-unit>
        <trans-unit id="81f5927534928d025112f0d5ae4d73cccfd04baa" translate="yes" xml:space="preserve">
          <source>Filename: output.txt</source>
          <target state="translated">파일 이름 : output.txt</target>
        </trans-unit>
        <trans-unit id="6360f8e91fa7b0fef745323be28824d312222104" translate="yes" xml:space="preserve">
          <source>Filename: poem.txt</source>
          <target state="translated">파일 이름 : poem.txt</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
