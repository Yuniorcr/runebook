<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="65abf9fc033ef993ad3616561604bc6168d2ccbe" translate="yes" xml:space="preserve">
          <source>MatchIndices::min_by_key</source>
          <target state="translated">MatchIndices::min_by_key</target>
        </trans-unit>
        <trans-unit id="07fc13c698bd94933a040c5a662601d3baa2e9fe" translate="yes" xml:space="preserve">
          <source>MatchIndices::ne</source>
          <target state="translated">MatchIndices::ne</target>
        </trans-unit>
        <trans-unit id="310938ae31ecec7a264e7277687593734d44568f" translate="yes" xml:space="preserve">
          <source>MatchIndices::next</source>
          <target state="translated">MatchIndices::next</target>
        </trans-unit>
        <trans-unit id="c31cf9fcd888382ae0ea7f383f70a3b44d3ec196" translate="yes" xml:space="preserve">
          <source>MatchIndices::next_back</source>
          <target state="translated">MatchIndices::next_back</target>
        </trans-unit>
        <trans-unit id="96ef6e6af4fd7d98ef4e1e43a8b441ed1e0c34cc" translate="yes" xml:space="preserve">
          <source>MatchIndices::nth</source>
          <target state="translated">MatchIndices::nth</target>
        </trans-unit>
        <trans-unit id="7d368eba8c884cae30ca39ce974f4608867e96d3" translate="yes" xml:space="preserve">
          <source>MatchIndices::nth_back</source>
          <target state="translated">MatchIndices::nth_back</target>
        </trans-unit>
        <trans-unit id="ab962565ed9fafac9d7ff2b1a2e63f1fd3710d5e" translate="yes" xml:space="preserve">
          <source>MatchIndices::partial_cmp</source>
          <target state="translated">MatchIndices::partial_cmp</target>
        </trans-unit>
        <trans-unit id="57254eb362bbbf8b679504cfd2a2d5e3ec1f0dfa" translate="yes" xml:space="preserve">
          <source>MatchIndices::partition</source>
          <target state="translated">MatchIndices::partition</target>
        </trans-unit>
        <trans-unit id="1e7e9422949dcdc28a75d0836c9aebd087900b8c" translate="yes" xml:space="preserve">
          <source>MatchIndices::peekable</source>
          <target state="translated">MatchIndices::peekable</target>
        </trans-unit>
        <trans-unit id="12be4b9a10cadd68ecaf54663c00f4a34b5f4ecc" translate="yes" xml:space="preserve">
          <source>MatchIndices::position</source>
          <target state="translated">MatchIndices::position</target>
        </trans-unit>
        <trans-unit id="348fe66eb091edea41f27fba3b3e350602376bed" translate="yes" xml:space="preserve">
          <source>MatchIndices::product</source>
          <target state="translated">MatchIndices::product</target>
        </trans-unit>
        <trans-unit id="1963aa77d2e51a1cd8995d3a7783963289df1dfa" translate="yes" xml:space="preserve">
          <source>MatchIndices::rev</source>
          <target state="translated">MatchIndices::rev</target>
        </trans-unit>
        <trans-unit id="0a8c8a9860d2936ff3103a39728b1f7122a37be7" translate="yes" xml:space="preserve">
          <source>MatchIndices::rfind</source>
          <target state="translated">MatchIndices::rfind</target>
        </trans-unit>
        <trans-unit id="f68b89eb92b49e5293f3bc6009baae718e58a00e" translate="yes" xml:space="preserve">
          <source>MatchIndices::rfold</source>
          <target state="translated">MatchIndices::rfold</target>
        </trans-unit>
        <trans-unit id="315b4220cbd8e0c545f07547765f5832a9c86221" translate="yes" xml:space="preserve">
          <source>MatchIndices::rposition</source>
          <target state="translated">MatchIndices::rposition</target>
        </trans-unit>
        <trans-unit id="2ab2384d0375db50c9c56dc9c650d7a18fc9cfca" translate="yes" xml:space="preserve">
          <source>MatchIndices::scan</source>
          <target state="translated">MatchIndices::scan</target>
        </trans-unit>
        <trans-unit id="2b77624dba127ee70a08d8deb81afce43d4451ff" translate="yes" xml:space="preserve">
          <source>MatchIndices::size_hint</source>
          <target state="translated">MatchIndices::size_hint</target>
        </trans-unit>
        <trans-unit id="e11016fd82a8ae6b1cc4431c096024383cd55289" translate="yes" xml:space="preserve">
          <source>MatchIndices::skip</source>
          <target state="translated">MatchIndices::skip</target>
        </trans-unit>
        <trans-unit id="66537225c0c97f9b5ed8f0b1d276134fb031158a" translate="yes" xml:space="preserve">
          <source>MatchIndices::skip_while</source>
          <target state="translated">MatchIndices::skip_while</target>
        </trans-unit>
        <trans-unit id="ea0d009d45cb6d7e6d3bb7b20ed5bcea6fc3295b" translate="yes" xml:space="preserve">
          <source>MatchIndices::step_by</source>
          <target state="translated">MatchIndices::step_by</target>
        </trans-unit>
        <trans-unit id="a281813e58bcc4fe4ecfc5f52608eaa03bea658a" translate="yes" xml:space="preserve">
          <source>MatchIndices::sum</source>
          <target state="translated">MatchIndices::sum</target>
        </trans-unit>
        <trans-unit id="096f4326ed06e3754c6af15c4a48de95d9807c80" translate="yes" xml:space="preserve">
          <source>MatchIndices::take</source>
          <target state="translated">MatchIndices::take</target>
        </trans-unit>
        <trans-unit id="dd509dc4aa10cbf86aa0cedca0fb11bb8d228ba4" translate="yes" xml:space="preserve">
          <source>MatchIndices::take_while</source>
          <target state="translated">MatchIndices::take_while</target>
        </trans-unit>
        <trans-unit id="7ba6b4d532f5fe105f4c17cfa277856ecc93cc91" translate="yes" xml:space="preserve">
          <source>MatchIndices::to_owned</source>
          <target state="translated">MatchIndices::to_owned</target>
        </trans-unit>
        <trans-unit id="d53bd53761ca88b3d4f96c0e1da7e805ecc1a162" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_fold</source>
          <target state="translated">MatchIndices::try_fold</target>
        </trans-unit>
        <trans-unit id="e55d2c69102746bda08c66c4290fa28c373fe4d1" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_for_each</source>
          <target state="translated">MatchIndices::try_for_each</target>
        </trans-unit>
        <trans-unit id="ce0fcc30049ca458576119cb2101ceaf48da4b9a" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_from</source>
          <target state="translated">MatchIndices::try_from</target>
        </trans-unit>
        <trans-unit id="591ae842ca203ad1f776a040ba0ef67aa76a60e1" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_into</source>
          <target state="translated">MatchIndices::try_into</target>
        </trans-unit>
        <trans-unit id="f087c03238f8f86bc47404dfad613d4c63b4e2e0" translate="yes" xml:space="preserve">
          <source>MatchIndices::try_rfold</source>
          <target state="translated">MatchIndices::try_rfold</target>
        </trans-unit>
        <trans-unit id="5ce0bb4829d8b7bbb7369d2b9ae77a51efbf54f6" translate="yes" xml:space="preserve">
          <source>MatchIndices::type_id</source>
          <target state="translated">MatchIndices::type_id</target>
        </trans-unit>
        <trans-unit id="52c4c724db47afc62f2fdf9a014929e13ed5bbba" translate="yes" xml:space="preserve">
          <source>MatchIndices::unzip</source>
          <target state="translated">MatchIndices::unzip</target>
        </trans-unit>
        <trans-unit id="a0fd217e64097f5938d4a8d5755e5fced6da54a0" translate="yes" xml:space="preserve">
          <source>MatchIndices::zip</source>
          <target state="translated">MatchIndices::zip</target>
        </trans-unit>
        <trans-unit id="ee2dbd5d6d82d0833069b07e7dd2848d3bf4d83a" translate="yes" xml:space="preserve">
          <source>Matches</source>
          <target state="translated">Matches</target>
        </trans-unit>
        <trans-unit id="5cc6987e7ed2a2b2e62c548b42089341976209aa" translate="yes" xml:space="preserve">
          <source>Matches Are Exhaustive</source>
          <target state="translated">경기는 철저하다</target>
        </trans-unit>
        <trans-unit id="3a0d932544aa8e3d9374e99e6710f8a85f6c0c7d" translate="yes" xml:space="preserve">
          <source>Matches::all</source>
          <target state="translated">Matches::all</target>
        </trans-unit>
        <trans-unit id="16fb890dd8ce7dfcb5a0e63ba8978c2471f380a3" translate="yes" xml:space="preserve">
          <source>Matches::any</source>
          <target state="translated">Matches::any</target>
        </trans-unit>
        <trans-unit id="5e4f547e5a9c68b04b7459d87531f3392cef812c" translate="yes" xml:space="preserve">
          <source>Matches::borrow</source>
          <target state="translated">Matches::borrow</target>
        </trans-unit>
        <trans-unit id="eb7a33e738fd491a8440d0e486d0da0f4b7357df" translate="yes" xml:space="preserve">
          <source>Matches::borrow_mut</source>
          <target state="translated">Matches::borrow_mut</target>
        </trans-unit>
        <trans-unit id="442cbd680df62a68364c435a1bb0ae46b79a7eac" translate="yes" xml:space="preserve">
          <source>Matches::by_ref</source>
          <target state="translated">Matches::by_ref</target>
        </trans-unit>
        <trans-unit id="20dfc02cc86de67d6fdaf58ce4461b2fd5815f11" translate="yes" xml:space="preserve">
          <source>Matches::chain</source>
          <target state="translated">Matches::chain</target>
        </trans-unit>
        <trans-unit id="e26629789994660e4224d4cebf44f28566fa8954" translate="yes" xml:space="preserve">
          <source>Matches::clone</source>
          <target state="translated">Matches::clone</target>
        </trans-unit>
        <trans-unit id="4c01d6dc1417a885eff4cea68ae3c49c30339c23" translate="yes" xml:space="preserve">
          <source>Matches::clone_from</source>
          <target state="translated">Matches::clone_from</target>
        </trans-unit>
        <trans-unit id="908070155acaacd57ea50bc0c693a8d4d38e9084" translate="yes" xml:space="preserve">
          <source>Matches::clone_into</source>
          <target state="translated">Matches::clone_into</target>
        </trans-unit>
        <trans-unit id="f1039a5bd9dd87408160a7bc89f5aee247baed0e" translate="yes" xml:space="preserve">
          <source>Matches::cloned</source>
          <target state="translated">Matches::cloned</target>
        </trans-unit>
        <trans-unit id="19c9fd0279baa24b411e3947534ec46f6b80b29b" translate="yes" xml:space="preserve">
          <source>Matches::cmp</source>
          <target state="translated">Matches::cmp</target>
        </trans-unit>
        <trans-unit id="b28a79700065ba26a75e2535566b0111e766961d" translate="yes" xml:space="preserve">
          <source>Matches::collect</source>
          <target state="translated">Matches::collect</target>
        </trans-unit>
        <trans-unit id="23a42c659f214505d85c65acf90795a53cbbd9c7" translate="yes" xml:space="preserve">
          <source>Matches::copied</source>
          <target state="translated">Matches::copied</target>
        </trans-unit>
        <trans-unit id="8ddc41164c9c903c75ffabc4216778ab2b92a07b" translate="yes" xml:space="preserve">
          <source>Matches::count</source>
          <target state="translated">Matches::count</target>
        </trans-unit>
        <trans-unit id="c5bb9e45a2d04384d39504bf8fed06af4eb949f4" translate="yes" xml:space="preserve">
          <source>Matches::cycle</source>
          <target state="translated">Matches::cycle</target>
        </trans-unit>
        <trans-unit id="25d821be5ab0c31669a0c65bee52e76ca6e2dfda" translate="yes" xml:space="preserve">
          <source>Matches::enumerate</source>
          <target state="translated">Matches::enumerate</target>
        </trans-unit>
        <trans-unit id="8fe87f5ab4c69eee8b3e42d4ef7d3f0bc9b6bd46" translate="yes" xml:space="preserve">
          <source>Matches::eq</source>
          <target state="translated">Matches::eq</target>
        </trans-unit>
        <trans-unit id="bd6c3e4a09141a6b1687bc6edcbc4725f14d6e9b" translate="yes" xml:space="preserve">
          <source>Matches::filter</source>
          <target state="translated">Matches::filter</target>
        </trans-unit>
        <trans-unit id="f28215c08cf52a08c1113104ff10156614b2d4dc" translate="yes" xml:space="preserve">
          <source>Matches::filter_map</source>
          <target state="translated">Matches::filter_map</target>
        </trans-unit>
        <trans-unit id="7e979d935feb5504226bf8fd99bc7ddddbae73ed" translate="yes" xml:space="preserve">
          <source>Matches::find</source>
          <target state="translated">Matches::find</target>
        </trans-unit>
        <trans-unit id="f417888fb6c581ab01ae22da17789e08d5d30a43" translate="yes" xml:space="preserve">
          <source>Matches::find_map</source>
          <target state="translated">Matches::find_map</target>
        </trans-unit>
        <trans-unit id="aac48d806deb17c5fb6f87226315aa3b6f58319d" translate="yes" xml:space="preserve">
          <source>Matches::flat_map</source>
          <target state="translated">Matches::flat_map</target>
        </trans-unit>
        <trans-unit id="0721b37fe4fd2773176992136934d02d73295f86" translate="yes" xml:space="preserve">
          <source>Matches::flatten</source>
          <target state="translated">Matches::flatten</target>
        </trans-unit>
        <trans-unit id="a82571e1d46a7c4bd3c2adc55d5ec1e13ef469b7" translate="yes" xml:space="preserve">
          <source>Matches::fmt</source>
          <target state="translated">Matches::fmt</target>
        </trans-unit>
        <trans-unit id="81d2cf00372eb5d8702e03ec8c630dd8ec00c4bb" translate="yes" xml:space="preserve">
          <source>Matches::fold</source>
          <target state="translated">Matches::fold</target>
        </trans-unit>
        <trans-unit id="1fbe90aeae0d2764bf797ea002efc575a587c806" translate="yes" xml:space="preserve">
          <source>Matches::for_each</source>
          <target state="translated">Matches::for_each</target>
        </trans-unit>
        <trans-unit id="b935cf9ba4ffa6f06d97d64621e3d2de0895f4ba" translate="yes" xml:space="preserve">
          <source>Matches::from</source>
          <target state="translated">Matches::from</target>
        </trans-unit>
        <trans-unit id="4d32cbce51a48f695b8fea902b09c284a29cde2e" translate="yes" xml:space="preserve">
          <source>Matches::fuse</source>
          <target state="translated">Matches::fuse</target>
        </trans-unit>
        <trans-unit id="9b2e7ede1acc6f67900d4a4d3ab2c98e1aaad7f8" translate="yes" xml:space="preserve">
          <source>Matches::ge</source>
          <target state="translated">Matches::ge</target>
        </trans-unit>
        <trans-unit id="31fe4a3fccced0fe0c71960e54c70b3121c12d76" translate="yes" xml:space="preserve">
          <source>Matches::gt</source>
          <target state="translated">Matches::gt</target>
        </trans-unit>
        <trans-unit id="9a91adab19d2f651b421bcb0b782f148955b87df" translate="yes" xml:space="preserve">
          <source>Matches::inspect</source>
          <target state="translated">Matches::inspect</target>
        </trans-unit>
        <trans-unit id="cdaa2f6866b152ff52f54f63d328297e95ffefc9" translate="yes" xml:space="preserve">
          <source>Matches::into</source>
          <target state="translated">Matches::into</target>
        </trans-unit>
        <trans-unit id="fbfdb405e53ca49b4f0a6aa96e0707e0b10af640" translate="yes" xml:space="preserve">
          <source>Matches::into_iter</source>
          <target state="translated">Matches::into_iter</target>
        </trans-unit>
        <trans-unit id="b86a1a91695e60a826f9cbcbe7744cdd9377aa24" translate="yes" xml:space="preserve">
          <source>Matches::is_sorted</source>
          <target state="translated">Matches::is_sorted</target>
        </trans-unit>
        <trans-unit id="88b5d9a696f322ca51982376a518e086721e6020" translate="yes" xml:space="preserve">
          <source>Matches::is_sorted_by</source>
          <target state="translated">Matches::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="3af6013a8cdc222cc7dcf468759ca7a196ae2a35" translate="yes" xml:space="preserve">
          <source>Matches::is_sorted_by_key</source>
          <target state="translated">Matches::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="19db6decfee88589fa49e71164a6c424bfab43c4" translate="yes" xml:space="preserve">
          <source>Matches::last</source>
          <target state="translated">Matches::last</target>
        </trans-unit>
        <trans-unit id="2b3c79eaacf0da1aceb94340410e1bf3e66ed35d" translate="yes" xml:space="preserve">
          <source>Matches::le</source>
          <target state="translated">Matches::le</target>
        </trans-unit>
        <trans-unit id="dc89550af976d29f1cd838ad118281c1c59ff27c" translate="yes" xml:space="preserve">
          <source>Matches::lt</source>
          <target state="translated">Matches::lt</target>
        </trans-unit>
        <trans-unit id="82f4602ea6fb73360443d9745b09df18459d58b6" translate="yes" xml:space="preserve">
          <source>Matches::map</source>
          <target state="translated">Matches::map</target>
        </trans-unit>
        <trans-unit id="c8d9d7e742cfadc7e42da43df1666f94b32c56dd" translate="yes" xml:space="preserve">
          <source>Matches::max</source>
          <target state="translated">Matches::max</target>
        </trans-unit>
        <trans-unit id="381ae5d9564473d6e8dd9a2749230d133255ad00" translate="yes" xml:space="preserve">
          <source>Matches::max_by</source>
          <target state="translated">Matches::max_by</target>
        </trans-unit>
        <trans-unit id="eb15db6391ca1dcfb4eb7997be38ea7ac31e86d5" translate="yes" xml:space="preserve">
          <source>Matches::max_by_key</source>
          <target state="translated">Matches::max_by_key</target>
        </trans-unit>
        <trans-unit id="2a7f00fe010cb33ba0a91dd9c43d06d20c3144c3" translate="yes" xml:space="preserve">
          <source>Matches::min</source>
          <target state="translated">Matches::min</target>
        </trans-unit>
        <trans-unit id="0511629eee2ebb309e8d692bfafa7146e73ab99a" translate="yes" xml:space="preserve">
          <source>Matches::min_by</source>
          <target state="translated">Matches::min_by</target>
        </trans-unit>
        <trans-unit id="92b4e0376aa22e37c9b2a710dfa2ea1a89fb5ad8" translate="yes" xml:space="preserve">
          <source>Matches::min_by_key</source>
          <target state="translated">Matches::min_by_key</target>
        </trans-unit>
        <trans-unit id="d1e00a92c27dc4a08ef517bcbb3c16d1d7c73fa2" translate="yes" xml:space="preserve">
          <source>Matches::ne</source>
          <target state="translated">Matches::ne</target>
        </trans-unit>
        <trans-unit id="80100501d955233d0aad678a7a0522b50d083d41" translate="yes" xml:space="preserve">
          <source>Matches::next</source>
          <target state="translated">Matches::next</target>
        </trans-unit>
        <trans-unit id="f87ed28aa3c643fcff8c2a323261a5ab3c47af41" translate="yes" xml:space="preserve">
          <source>Matches::next_back</source>
          <target state="translated">Matches::next_back</target>
        </trans-unit>
        <trans-unit id="06e8a5ed4403652966532401d85cecb2a059ab86" translate="yes" xml:space="preserve">
          <source>Matches::nth</source>
          <target state="translated">Matches::nth</target>
        </trans-unit>
        <trans-unit id="2d97ef2f69ba88eadeb3c0a353560d47aa8d892d" translate="yes" xml:space="preserve">
          <source>Matches::nth_back</source>
          <target state="translated">Matches::nth_back</target>
        </trans-unit>
        <trans-unit id="1e59a6c73ae29a25bdcf2a99e065e71f8bb68764" translate="yes" xml:space="preserve">
          <source>Matches::partial_cmp</source>
          <target state="translated">Matches::partial_cmp</target>
        </trans-unit>
        <trans-unit id="10bc67bf25acda7fdf7709fb020ef7093757f048" translate="yes" xml:space="preserve">
          <source>Matches::partition</source>
          <target state="translated">Matches::partition</target>
        </trans-unit>
        <trans-unit id="ca97a164faa6e48e7f0155c295145750469b483d" translate="yes" xml:space="preserve">
          <source>Matches::peekable</source>
          <target state="translated">Matches::peekable</target>
        </trans-unit>
        <trans-unit id="cb6e62672281dd6247bc9a5dfdecde19ffbc8916" translate="yes" xml:space="preserve">
          <source>Matches::position</source>
          <target state="translated">Matches::position</target>
        </trans-unit>
        <trans-unit id="8541181e1bc4494e2d6b28d4f7775de0da6559c4" translate="yes" xml:space="preserve">
          <source>Matches::product</source>
          <target state="translated">Matches::product</target>
        </trans-unit>
        <trans-unit id="7aa9e259d1203fa5740a53d399d7183277702354" translate="yes" xml:space="preserve">
          <source>Matches::rev</source>
          <target state="translated">Matches::rev</target>
        </trans-unit>
        <trans-unit id="e02709763e2207e61e4d933e858c99b7a28d8bcb" translate="yes" xml:space="preserve">
          <source>Matches::rfind</source>
          <target state="translated">Matches::rfind</target>
        </trans-unit>
        <trans-unit id="a9cc66b976865799bd4716ff397f93b4a843b5ae" translate="yes" xml:space="preserve">
          <source>Matches::rfold</source>
          <target state="translated">Matches::rfold</target>
        </trans-unit>
        <trans-unit id="04c297da099729a5b43001f9d0063ee6a901e844" translate="yes" xml:space="preserve">
          <source>Matches::rposition</source>
          <target state="translated">Matches::rposition</target>
        </trans-unit>
        <trans-unit id="91a658d8a0294b7bd18e5d0570dba1b46dc2ddb4" translate="yes" xml:space="preserve">
          <source>Matches::scan</source>
          <target state="translated">Matches::scan</target>
        </trans-unit>
        <trans-unit id="bff98e95d244b87dfd471f3aa1b0b9776052e73a" translate="yes" xml:space="preserve">
          <source>Matches::size_hint</source>
          <target state="translated">Matches::size_hint</target>
        </trans-unit>
        <trans-unit id="ea769d36db0ecdf9a449becbbea0e918770b1961" translate="yes" xml:space="preserve">
          <source>Matches::skip</source>
          <target state="translated">Matches::skip</target>
        </trans-unit>
        <trans-unit id="96627df75057a48d2e0d9c40c523b84e3b33c7af" translate="yes" xml:space="preserve">
          <source>Matches::skip_while</source>
          <target state="translated">Matches::skip_while</target>
        </trans-unit>
        <trans-unit id="4ca4138e4a3268a198c5cdc5a737a6380795549e" translate="yes" xml:space="preserve">
          <source>Matches::step_by</source>
          <target state="translated">Matches::step_by</target>
        </trans-unit>
        <trans-unit id="721b319e30617315060e55781f7380c841c6ace9" translate="yes" xml:space="preserve">
          <source>Matches::sum</source>
          <target state="translated">Matches::sum</target>
        </trans-unit>
        <trans-unit id="f9e758615e71ff38d6f7a5c65eecde2590e23098" translate="yes" xml:space="preserve">
          <source>Matches::take</source>
          <target state="translated">Matches::take</target>
        </trans-unit>
        <trans-unit id="af24995f9c4fd5dd2457e65743d9a60e9e9ffcde" translate="yes" xml:space="preserve">
          <source>Matches::take_while</source>
          <target state="translated">Matches::take_while</target>
        </trans-unit>
        <trans-unit id="1565bfd09bd2f23c0095b4606ab9e834a51712c8" translate="yes" xml:space="preserve">
          <source>Matches::to_owned</source>
          <target state="translated">Matches::to_owned</target>
        </trans-unit>
        <trans-unit id="50cf72084a8dfa7ad581505a5ddcd33faf655fa9" translate="yes" xml:space="preserve">
          <source>Matches::try_fold</source>
          <target state="translated">Matches::try_fold</target>
        </trans-unit>
        <trans-unit id="549e63df22456e9fa5caee460202dea317cd527f" translate="yes" xml:space="preserve">
          <source>Matches::try_for_each</source>
          <target state="translated">Matches::try_for_each</target>
        </trans-unit>
        <trans-unit id="91833652262591b5f00ea537d289de5b67c4c727" translate="yes" xml:space="preserve">
          <source>Matches::try_from</source>
          <target state="translated">Matches::try_from</target>
        </trans-unit>
        <trans-unit id="c0c530573a1f2dab2a0a124a457144714f1af70b" translate="yes" xml:space="preserve">
          <source>Matches::try_into</source>
          <target state="translated">Matches::try_into</target>
        </trans-unit>
        <trans-unit id="1d6807a096cceb3f086a98b72caed6864b350d48" translate="yes" xml:space="preserve">
          <source>Matches::try_rfold</source>
          <target state="translated">Matches::try_rfold</target>
        </trans-unit>
        <trans-unit id="4ed84d268d517902f1ee835907ba616731437e78" translate="yes" xml:space="preserve">
          <source>Matches::type_id</source>
          <target state="translated">Matches::type_id</target>
        </trans-unit>
        <trans-unit id="82df0ef498c0500087358c2ad708f2591ff13a74" translate="yes" xml:space="preserve">
          <source>Matches::unzip</source>
          <target state="translated">Matches::unzip</target>
        </trans-unit>
        <trans-unit id="4f51ed1bb8aedce5983b27a82ba200a62553b0de" translate="yes" xml:space="preserve">
          <source>Matches::zip</source>
          <target state="translated">Matches::zip</target>
        </trans-unit>
        <trans-unit id="50c7753425f81366ad955ad648ef1402bbd0bdcd" translate="yes" xml:space="preserve">
          <source>Matching Literals</source>
          <target state="translated">일치하는 리터럴</target>
        </trans-unit>
        <trans-unit id="a4b76dc421c21dad908aceac8ef24107ed076e94" translate="yes" xml:space="preserve">
          <source>Matching Named Variables</source>
          <target state="translated">명명 된 변수 일치</target>
        </trans-unit>
        <trans-unit id="116c1a129c8dd758e30ed686c4946011c26b8dc1" translate="yes" xml:space="preserve">
          <source>Matching Ranges of Values with &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;...&lt;/code&gt;</source>
          <target state="translated">값 범위 일치 &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85dbe67c3ce6228be02004258ed55391b9cbf81e" translate="yes" xml:space="preserve">
          <source>Matching Ranges of Values with &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;..=&lt;/code&gt;</source>
          <target state="translated">값 범위를 &lt;code id=&quot;matching-ranges-of-values-with-&quot;&gt;..=&lt;/code&gt; 와 일치</target>
        </trans-unit>
        <trans-unit id="d07b8ccde1bae5f429be81f6528205564b8930b4" translate="yes" xml:space="preserve">
          <source>Matching on Different Errors</source>
          <target state="translated">다른 오류에 일치</target>
        </trans-unit>
        <trans-unit id="3ac1a688c9f9a53fc22834e447e836a1464d2897" translate="yes" xml:space="preserve">
          <source>Matching on unions</source>
          <target state="translated">유니온 매칭</target>
        </trans-unit>
        <trans-unit id="5c23b58f42105349394b72c44a9e0c8e30cfb1c7" translate="yes" xml:space="preserve">
          <source>Matching with &lt;code id=&quot;matching-with-optiont&quot;&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code id=&quot;matching-with-optiont&quot;&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 와 일치</target>
        </trans-unit>
        <trans-unit id="6746eb65af6871e0e05e248c440e5aefea8b6fc2" translate="yes" xml:space="preserve">
          <source>Matching with the wrong number of fields has no sensible interpretation:</source>
          <target state="translated">잘못된 수의 필드와 일치하는 것은 현명한 해석이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="e962ad60673258d2f89e18021a55117503f9d972" translate="yes" xml:space="preserve">
          <source>Mathematically significant numbers are provided in the &lt;code&gt;consts&lt;/code&gt; sub-module.</source>
          <target state="translated">수학적으로 중요한 숫자는 &lt;code&gt;consts&lt;/code&gt; 서브 모듈에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="a8df2fec28d8948a0326722029c7492b88ee4fbe" translate="yes" xml:space="preserve">
          <source>Maximum</source>
          <target state="translated">Maximum</target>
        </trans-unit>
        <trans-unit id="24ecf2527de68fa30e51892809349a8c5974beff" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 10 exponent.</source>
          <target state="translated">최대 지수 10의 거듭 제곱.</target>
        </trans-unit>
        <trans-unit id="9b80b0220e2a1cfba556bc68a3ae18dd04ca555f" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 10 exponent. Use &lt;a href=&quot;../primitive.f32#associatedconstant.MAX_10_EXP&quot;&gt;&lt;code&gt;f32::MAX_10_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">10 지수의 최대 가능한 거듭 제곱입니다. 대신 &lt;a href=&quot;../primitive.f32#associatedconstant.MAX_10_EXP&quot;&gt; &lt;code&gt;f32::MAX_10_EXP&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="14a9a3e421ae4adf1ac38d3d026e245423621fd6" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 10 exponent. Use &lt;a href=&quot;../primitive.f64#associatedconstant.MAX_10_EXP&quot;&gt;&lt;code&gt;f64::MAX_10_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">10 지수의 최대 가능한 거듭 제곱입니다. 대신 &lt;a href=&quot;../primitive.f64#associatedconstant.MAX_10_EXP&quot;&gt; &lt;code&gt;f64::MAX_10_EXP&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="86392c8e5a7e87515616425adb01dd9226d9dffe" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 2 exponent.</source>
          <target state="translated">최대 2의 거듭 제곱</target>
        </trans-unit>
        <trans-unit id="9aa9636d9f2be0da47be065e0c7d353d7567c7eb" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 2 exponent. Use &lt;a href=&quot;../primitive.f32#associatedconstant.MAX_EXP&quot;&gt;&lt;code&gt;f32::MAX_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">2 지수의 최대 가능한 거듭 제곱입니다. 대신 &lt;a href=&quot;../primitive.f32#associatedconstant.MAX_EXP&quot;&gt; &lt;code&gt;f32::MAX_EXP&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b256bdd9a7e1cdc07523395c526401d41fbaa024" translate="yes" xml:space="preserve">
          <source>Maximum possible power of 2 exponent. Use &lt;a href=&quot;../primitive.f64#associatedconstant.MAX_EXP&quot;&gt;&lt;code&gt;f64::MAX_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">2 지수의 최대 가능한 거듭 제곱입니다. 대신 &lt;a href=&quot;../primitive.f64#associatedconstant.MAX_EXP&quot;&gt; &lt;code&gt;f64::MAX_EXP&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="766be5e052191ff8eba5c2e3f2b1a1b838f4d50a" translate="yes" xml:space="preserve">
          <source>Maximum with the current value using a signed comparison.</source>
          <target state="translated">부호있는 비교를 사용하는 현재 값의 최대 값입니다.</target>
        </trans-unit>
        <trans-unit id="9351d4078eb47c9b5544bef45a78aaa02d855e4e" translate="yes" xml:space="preserve">
          <source>Maximum with the current value using an unsigned comparison.</source>
          <target state="translated">부호없는 비교를 사용하는 현재 값의 최대 값입니다.</target>
        </trans-unit>
        <trans-unit id="f7750430a3882e92eb8337af201fa180c2fbb566" translate="yes" xml:space="preserve">
          <source>Maximum with the current value.</source>
          <target state="translated">현재 값으로 최대 값입니다.</target>
        </trans-unit>
        <trans-unit id="f19c24c7e8b87604106489a66b28772b598f6b35" translate="yes" xml:space="preserve">
          <source>Maybe you just misspelled the lint name or the lint doesn't exist anymore. Either way, try to update/remove it in order to fix the error.</source>
          <target state="translated">아마 보풀 이름을 잘못 입력했거나 보푸라기가 더 이상 존재하지 않을 수 있습니다. 어느 쪽이든, 오류를 수정하려면 업데이트 / 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="22c5a738f61d1560d21875d83c8951314a7f1948" translate="yes" xml:space="preserve">
          <source>MaybeUninit</source>
          <target state="translated">MaybeUninit</target>
        </trans-unit>
        <trans-unit id="a44ab7dbe0cde09757fb1b4dd939c97aee493195" translate="yes" xml:space="preserve">
          <source>MaybeUninit::as_mut_ptr</source>
          <target state="translated">MaybeUninit::as_mut_ptr</target>
        </trans-unit>
        <trans-unit id="2e8f9abe8f0c08c924ac4559ea36a2868edf193c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::as_ptr</source>
          <target state="translated">MaybeUninit::as_ptr</target>
        </trans-unit>
        <trans-unit id="e1dd151013280c4f30271f0f104514aec380c95c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::assume_init</source>
          <target state="translated">MaybeUninit::assume_init</target>
        </trans-unit>
        <trans-unit id="b1d1838a31c2c75fa59b89a7ab49435bba63a56d" translate="yes" xml:space="preserve">
          <source>MaybeUninit::borrow</source>
          <target state="translated">MaybeUninit::borrow</target>
        </trans-unit>
        <trans-unit id="a4bd23ea05be7819a23ca240934851baaf368f66" translate="yes" xml:space="preserve">
          <source>MaybeUninit::borrow_mut</source>
          <target state="translated">MaybeUninit::borrow_mut</target>
        </trans-unit>
        <trans-unit id="00da197228ec4cbebb9a48bf7d0d5d3897d0f688" translate="yes" xml:space="preserve">
          <source>MaybeUninit::clone</source>
          <target state="translated">MaybeUninit::clone</target>
        </trans-unit>
        <trans-unit id="796164cb8ea5a1c4d0c3e89dc0dfc3140435eea9" translate="yes" xml:space="preserve">
          <source>MaybeUninit::clone_from</source>
          <target state="translated">MaybeUninit::clone_from</target>
        </trans-unit>
        <trans-unit id="19917792b095268faeb706604925e2b6e4601cdc" translate="yes" xml:space="preserve">
          <source>MaybeUninit::clone_into</source>
          <target state="translated">MaybeUninit::clone_into</target>
        </trans-unit>
        <trans-unit id="6aaeccae7a8603cf84871ff7d9f6d72bbae00843" translate="yes" xml:space="preserve">
          <source>MaybeUninit::first_ptr</source>
          <target state="translated">MaybeUninit::first_ptr</target>
        </trans-unit>
        <trans-unit id="b2731997cc044a29850216c34ed7b2af6f757272" translate="yes" xml:space="preserve">
          <source>MaybeUninit::first_ptr_mut</source>
          <target state="translated">MaybeUninit::first_ptr_mut</target>
        </trans-unit>
        <trans-unit id="ee80e55e0462f555d62ecf479729778c2792940a" translate="yes" xml:space="preserve">
          <source>MaybeUninit::from</source>
          <target state="translated">MaybeUninit::from</target>
        </trans-unit>
        <trans-unit id="68ed3d2ac72b021d64280ccfce1d512f796b7866" translate="yes" xml:space="preserve">
          <source>MaybeUninit::get_mut</source>
          <target state="translated">MaybeUninit::get_mut</target>
        </trans-unit>
        <trans-unit id="f1a2a1267ae897ec9afd26b0801711626f42622c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::get_ref</source>
          <target state="translated">MaybeUninit::get_ref</target>
        </trans-unit>
        <trans-unit id="b7ce4c445d543adc399f6af5ed234119732fcd7d" translate="yes" xml:space="preserve">
          <source>MaybeUninit::into</source>
          <target state="translated">MaybeUninit::into</target>
        </trans-unit>
        <trans-unit id="bdcb34ac76eeb0b6ab305cf39705377f28d916a3" translate="yes" xml:space="preserve">
          <source>MaybeUninit::new</source>
          <target state="translated">MaybeUninit::new</target>
        </trans-unit>
        <trans-unit id="7134280ee1359eff29bec32e4670d803b9181af9" translate="yes" xml:space="preserve">
          <source>MaybeUninit::read</source>
          <target state="translated">MaybeUninit::read</target>
        </trans-unit>
        <trans-unit id="a887e0697a801d5760dd067e4907b33cac927028" translate="yes" xml:space="preserve">
          <source>MaybeUninit::to_owned</source>
          <target state="translated">MaybeUninit::to_owned</target>
        </trans-unit>
        <trans-unit id="7dc9f792640725a6cecb6f81a4e42e83461a6abe" translate="yes" xml:space="preserve">
          <source>MaybeUninit::try_from</source>
          <target state="translated">MaybeUninit::try_from</target>
        </trans-unit>
        <trans-unit id="8b12b56b9f617d5d7f3945aef0bc3328d56d0391" translate="yes" xml:space="preserve">
          <source>MaybeUninit::try_into</source>
          <target state="translated">MaybeUninit::try_into</target>
        </trans-unit>
        <trans-unit id="5e34c0cc0c05d1c11d92d758dfd9eb546ac718be" translate="yes" xml:space="preserve">
          <source>MaybeUninit::type_id</source>
          <target state="translated">MaybeUninit::type_id</target>
        </trans-unit>
        <trans-unit id="6d196fc5db7278a9d9758ce0ec7ef03ec5379e9c" translate="yes" xml:space="preserve">
          <source>MaybeUninit::uninit</source>
          <target state="translated">MaybeUninit::uninit</target>
        </trans-unit>
        <trans-unit id="2f8fd2d121ed93f168b51c2d802af7d29e8bc671" translate="yes" xml:space="preserve">
          <source>MaybeUninit::write</source>
          <target state="translated">MaybeUninit::write</target>
        </trans-unit>
        <trans-unit id="be630dd4779c289571757af988e536f8c58f8978" translate="yes" xml:space="preserve">
          <source>MaybeUninit::zeroed</source>
          <target state="translated">MaybeUninit::zeroed</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="d880b0db33396f09e94ad458e37bf499710140d0" translate="yes" xml:space="preserve">
          <source>Member access</source>
          <target state="translated">회원 액세스</target>
        </trans-unit>
        <trans-unit id="711aeb171229297561befc7fcf7c64be1c7bad67" translate="yes" xml:space="preserve">
          <source>Members of the Rust community have made many packages available at &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;, and pulling any of them into your package involves these same steps: listing them in your package&amp;rsquo;s &lt;em&gt;Cargo.toml&lt;/em&gt; file and using &lt;code&gt;use&lt;/code&gt; to bring items from their crates into scope.</source>
          <target state="translated">Rust 커뮤니티의 구성원은 &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; 에서 많은 패키지를 사용할 수 있도록 만들었으며 패키지 로 가져 오려면 패키지의 &lt;em&gt;Cargo.toml&lt;/em&gt; 파일에 &lt;em&gt;나열&lt;/em&gt; 하고 사용하여 상자에서 항목을 범위로 가져 오는 데 사용 &lt;code&gt;use&lt;/code&gt; 것과 동일한 단계가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="146533db3fc38f7b706b77ba72e7df0357d2e39f" translate="yes" xml:space="preserve">
          <source>Members of the Rust community have made many packages available at &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt;, and pulling any of them into your package involves these same steps: listing them in your package&amp;rsquo;s &lt;em&gt;Cargo.toml&lt;/em&gt; file and using &lt;code&gt;use&lt;/code&gt; to bring items into scope.</source>
          <target state="translated">Rust 커뮤니티 회원은 &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; 에서 많은 패키지를 사용할 수있게 만들었으며 패키지에 패키지 를 가져 오려면 패키지의 &lt;em&gt;Cargo.toml&lt;/em&gt; 파일에 패키지를 나열하고 항목을 범위로 가져 오는 데 사용 &lt;code&gt;use&lt;/code&gt; 것과 동일한 단계를 &lt;em&gt;거쳐야&lt;/em&gt; 합니다 .</target>
        </trans-unit>
        <trans-unit id="2d6f4ca6e81d6132b393ed23c50a82522bb4eb19" translate="yes" xml:space="preserve">
          <source>Memory accesses will never be reordered across this barrier by the compiler, but no instructions will be emitted for it. This is appropriate for operations on the same thread that may be preempted, such as when interacting with signal handlers.</source>
          <target state="translated">메모리 액세스는 컴파일러에 의해이 장벽을 넘어서 다시 정렬되지는 않지만 이에 대한 명령어는 생성되지 않습니다. 이는 신호 처리기와 상호 작용할 때와 같이 선점 될 수있는 동일한 스레드에서의 작업에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="b6bee5018a7e72cff7d1df71077553bda7588c2a" translate="yes" xml:space="preserve">
          <source>Memory allocation APIs</source>
          <target state="translated">메모리 할당 API</target>
        </trans-unit>
        <trans-unit id="9be755c16f3fbdbf43ec9463cafab25c253fea10" translate="yes" xml:space="preserve">
          <source>Memory allocation and lifetime</source>
          <target state="translated">메모리 할당 및 수명</target>
        </trans-unit>
        <trans-unit id="78f88c2700a9711b2514c20dff02f5f5982c250e" translate="yes" xml:space="preserve">
          <source>Memory and Allocation</source>
          <target state="translated">메모리 및 할당</target>
        </trans-unit>
        <trans-unit id="ec9a362f08612fb77b9f0b713369a332f48651a9" translate="yes" xml:space="preserve">
          <source>Memory can be &quot;invalidated&quot; by deallocation, but also by replacing a &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(v)&lt;/code&gt;&lt;/a&gt; by &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, or calling &lt;a href=&quot;../vec/struct.vec#method.set_len&quot;&gt;&lt;code&gt;Vec::set_len&lt;/code&gt;&lt;/a&gt; to &quot;kill&quot; some elements off of a vector. It can be repurposed by using &lt;a href=&quot;../ptr/fn.write&quot;&gt;&lt;code&gt;ptr::write&lt;/code&gt;&lt;/a&gt; to overwrite it without calling the destructor first. None of this is allowed for pinned data without calling &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">메모리는 할당 해제에 의해 &quot;무효화&quot;될 수 있지만 &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(v)&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 으로 바꾸 거나 &lt;a href=&quot;../vec/struct.vec#method.set_len&quot;&gt; &lt;code&gt;Vec::set_len&lt;/code&gt; &lt;/a&gt; 을 호출 하여 벡터에서 일부 요소를 &quot;죽일&quot;수도 있습니다. &lt;a href=&quot;../ptr/fn.write&quot;&gt; &lt;code&gt;ptr::write&lt;/code&gt; &lt;/a&gt; 를 사용 하여 소멸자를 먼저 호출하지 않고 덮어 쓰는 방식 으로 용도를 변경할 수 있습니다 . &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt; 을 호출하지 않고 고정 된 데이터에는이 중 어느 것도 허용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="475bc2651561a3c3ff5fe7691308be8b459d93e5" translate="yes" xml:space="preserve">
          <source>Memory layout</source>
          <target state="translated">메모리 레이아웃</target>
        </trans-unit>
        <trans-unit id="ab97ff6f2dba5d3f1cd5aeb9b43d517c7ff39baa" translate="yes" xml:space="preserve">
          <source>Memory model</source>
          <target state="translated">메모리 모델</target>
        </trans-unit>
        <trans-unit id="64f050cf8ce861fb451d8ebe7ed180d3e0b08ad3" translate="yes" xml:space="preserve">
          <source>Memory orderings specify the way atomic operations synchronize memory. In its weakest &lt;a href=&quot;#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, only the memory directly touched by the operation is synchronized. On the other hand, a store-load pair of &lt;a href=&quot;#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt; operations synchronize other memory while additionally preserving a total order of such operations across all threads.</source>
          <target state="translated">메모리 순서는 원자 연산이 메모리를 동기화하는 방법을 지정합니다. 가장 약한 &lt;a href=&quot;#variant.Relaxed&quot;&gt; &lt;code&gt;Relaxed&lt;/code&gt; &lt;/a&gt; 에서는 작업이 직접 터치 한 메모리 만 동기화됩니다. 반면, &lt;a href=&quot;#variant.SeqCst&quot;&gt; &lt;code&gt;SeqCst&lt;/code&gt; &lt;/a&gt; 작업 의 저장소로드 쌍은 다른 스레드를 동기화하면서 모든 스레드에서 이러한 작업의 총 순서를 추가로 유지합니다.</target>
        </trans-unit>
        <trans-unit id="03e2538c8eaa31e61eba2183330660d56415ebcf" translate="yes" xml:space="preserve">
          <source>Memory orderings specify the way atomic operations synchronize memory. In its weakest &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Ordering::Relaxed&lt;/code&gt;&lt;/a&gt;, only the memory directly touched by the operation is synchronized. On the other hand, a store-load pair of &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;Ordering::SeqCst&lt;/code&gt;&lt;/a&gt; operations synchronize other memory while additionally preserving a total order of such operations across all threads.</source>
          <target state="translated">메모리 순서는 원자 적 작업이 메모리를 동기화하는 방식을 지정합니다. 가장 약한 &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt; &lt;code&gt;Ordering::Relaxed&lt;/code&gt; &lt;/a&gt; 에서는 작업에 의해 직접 접촉 된 메모리 만 동기화됩니다. 반면에 &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt; &lt;code&gt;Ordering::SeqCst&lt;/code&gt; &lt;/a&gt; 작업 의 저장로드 쌍은 모든 스레드에서 이러한 작업의 전체 순서를 추가로 유지하면서 다른 메모리를 동기화합니다.</target>
        </trans-unit>
        <trans-unit id="22c02bdcac42d16560e88c9cdab7cac8538ffbcb" translate="yes" xml:space="preserve">
          <source>Memory ownership</source>
          <target state="translated">메모리 소유권</target>
        </trans-unit>
        <trans-unit id="b70cefd0a9c3186fc3ad2fca9d8f59f0972163e5" translate="yes" xml:space="preserve">
          <source>Message passing is a fine way of handling concurrency, but it&amp;rsquo;s not the only one. Consider this part of the slogan from the Go language documentation again: &amp;ldquo;communicate by sharing memory.&amp;rdquo;</source>
          <target state="translated">메시지 전달은 동시성을 처리하는 좋은 방법이지만 유일한 방법은 아닙니다. Go 언어 문서의 슬로건 중이 부분을 다시 생각해보십시오.&amp;ldquo;메모리를 공유하여 의사 소통하십시오.&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="a03a90d59c75d716e1941e5fb5b8746472062e0e" translate="yes" xml:space="preserve">
          <source>Message passing is a fine way of handling concurrency, but it&amp;rsquo;s not the only one. Consider this part of the slogan from the Go language documentation again: &amp;ldquo;do not communicate by sharing memory.&amp;rdquo;</source>
          <target state="translated">메시지 전달은 동시성을 처리하는 좋은 방법이지만 유일한 방법은 아닙니다. Go 언어 문서의 슬로건의이 부분을 다시 고려하십시오. &quot;메모리를 공유하여 통신하지 마십시오.&quot;</target>
        </trans-unit>
        <trans-unit id="d47924059f378f859c3137ecc92f3018c8554c48" translate="yes" xml:space="preserve">
          <source>Messages can be sent through this channel with &lt;a href=&quot;struct.sender#method.send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.sender#method.send&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt; 로이 채널을 통해 메시지를 보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d56b67df96e3223775707154a8618c734f2b8a7b" translate="yes" xml:space="preserve">
          <source>Messages can be sent through this channel with &lt;a href=&quot;struct.syncsender#method.send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.syncsender#method.try_send&quot;&gt;&lt;code&gt;try_send&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.syncsender#method.send&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;struct.syncsender#method.try_send&quot;&gt; &lt;code&gt;try_send&lt;/code&gt; &lt;/a&gt; 와 함께이 채널을 통해 메시지를 보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e5fc413e41d8882a3983a228d24cde55dfc6fca3" translate="yes" xml:space="preserve">
          <source>Messages sent to the channel can be retrieved using &lt;a href=&quot;struct.receiver#method.recv&quot;&gt;&lt;code&gt;recv&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">채널로 전송 된 메시지는 &lt;a href=&quot;struct.receiver#method.recv&quot;&gt; &lt;code&gt;recv&lt;/code&gt; 를&lt;/a&gt; 사용하여 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f57866593059968e971f86172293e7f4c20bbf7f" translate="yes" xml:space="preserve">
          <source>Meta Item Attribute Syntax</source>
          <target state="translated">메타 항목 속성 구문</target>
        </trans-unit>
        <trans-unit id="073695a20c371f27457f6aab051f26f7536b49bf" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. Each key may only be used once in each attribute.</source>
          <target state="translated">메타 항목은 속성 내부의 키-값 쌍입니다. 각 키는 각 속성에서 한 번만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da50cb07b82024b80368e7f1d0d9ee941c6a68a0" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. The keys provided must be one of the valid keys for the specified attribute.</source>
          <target state="translated">메타 항목은 속성 내부의 키-값 쌍입니다. 제공된 키는 지정된 속성에 유효한 키 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="ded036d51fe4b3fb3eddc611d6778ba8e4dcef98" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. To fix these issues you need to give required key-value pairs.</source>
          <target state="translated">메타 항목은 속성 내부의 키-값 쌍입니다. 이러한 문제를 해결하려면 필수 키-값 쌍을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="fda66a74788b36b4a9cc97c2d88181628e7d03cd" translate="yes" xml:space="preserve">
          <source>Meta items are the key-value pairs inside of an attribute. To fix this issue, you need to give a value to the &lt;code&gt;note&lt;/code&gt; key. Example:</source>
          <target state="translated">메타 항목은 속성 내부의 키-값 쌍입니다. 이 문제를 해결하려면 &lt;code&gt;note&lt;/code&gt; 키에 값을 제공해야합니다 . 예:</target>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="translated">Metadata</target>
        </trans-unit>
        <trans-unit id="6fbea655dc155b182628eb902f62724120a1efca" translate="yes" xml:space="preserve">
          <source>Metadata information about a file.</source>
          <target state="translated">파일에 대한 메타 데이터 정보.</target>
        </trans-unit>
        <trans-unit id="084830b6199879b13e88117f115361f568aadfed" translate="yes" xml:space="preserve">
          <source>Metadata::accessed</source>
          <target state="translated">Metadata::accessed</target>
        </trans-unit>
        <trans-unit id="ea03a6d8c078cad675d89ba6e750f9418bc0c495" translate="yes" xml:space="preserve">
          <source>Metadata::as_raw_stat</source>
          <target state="translated">Metadata::as_raw_stat</target>
        </trans-unit>
        <trans-unit id="c0545109dd814c2f2913abc28479e6d94ee0114d" translate="yes" xml:space="preserve">
          <source>Metadata::atime</source>
          <target state="translated">Metadata::atime</target>
        </trans-unit>
        <trans-unit id="50367585ad74ed80fa1cbe2b541c19bd0b2de90e" translate="yes" xml:space="preserve">
          <source>Metadata::atime_nsec</source>
          <target state="translated">Metadata::atime_nsec</target>
        </trans-unit>
        <trans-unit id="a680da2613a5aedd0f376ab10667b053d5d40a97" translate="yes" xml:space="preserve">
          <source>Metadata::blksize</source>
          <target state="translated">Metadata::blksize</target>
        </trans-unit>
        <trans-unit id="233007abda8ced2d64fc02c99f7a9b937493f947" translate="yes" xml:space="preserve">
          <source>Metadata::blocks</source>
          <target state="translated">Metadata::blocks</target>
        </trans-unit>
        <trans-unit id="0c9cb348d31160eb04b04dc9d0a8c9a6c7bb3082" translate="yes" xml:space="preserve">
          <source>Metadata::borrow</source>
          <target state="translated">Metadata::borrow</target>
        </trans-unit>
        <trans-unit id="fb7e7385698a1d59ac894814c418b5e972ac017f" translate="yes" xml:space="preserve">
          <source>Metadata::borrow_mut</source>
          <target state="translated">Metadata::borrow_mut</target>
        </trans-unit>
        <trans-unit id="81bdb5794047e85d36b507a5703800ac21e7b116" translate="yes" xml:space="preserve">
          <source>Metadata::clone</source>
          <target state="translated">Metadata::clone</target>
        </trans-unit>
        <trans-unit id="6063837d957ee30e1e495b46a1c85b6125b18ecc" translate="yes" xml:space="preserve">
          <source>Metadata::clone_from</source>
          <target state="translated">Metadata::clone_from</target>
        </trans-unit>
        <trans-unit id="9e01066e110fc02d3274390539e97c3ce87be38e" translate="yes" xml:space="preserve">
          <source>Metadata::clone_into</source>
          <target state="translated">Metadata::clone_into</target>
        </trans-unit>
        <trans-unit id="24bc22c259e7b47fee155cccf102870ea5319289" translate="yes" xml:space="preserve">
          <source>Metadata::created</source>
          <target state="translated">Metadata::created</target>
        </trans-unit>
        <trans-unit id="0a5fa59a9bdd4af484124f7b881a605786b1c5fc" translate="yes" xml:space="preserve">
          <source>Metadata::creation_time</source>
          <target state="translated">Metadata::creation_time</target>
        </trans-unit>
        <trans-unit id="eb8ad0815aeb8f84922c1ba42934ea060392d848" translate="yes" xml:space="preserve">
          <source>Metadata::ctime</source>
          <target state="translated">Metadata::ctime</target>
        </trans-unit>
        <trans-unit id="34107d78458895bc36cb2a586370e9a33f001d4e" translate="yes" xml:space="preserve">
          <source>Metadata::ctime_nsec</source>
          <target state="translated">Metadata::ctime_nsec</target>
        </trans-unit>
        <trans-unit id="4de93a5e1be0a62280e753f74aead534158e32fa" translate="yes" xml:space="preserve">
          <source>Metadata::dev</source>
          <target state="translated">Metadata::dev</target>
        </trans-unit>
        <trans-unit id="1ddf7b6dcaac670ecb58c655d7c29e7efcc7b976" translate="yes" xml:space="preserve">
          <source>Metadata::file_attributes</source>
          <target state="translated">Metadata::file_attributes</target>
        </trans-unit>
        <trans-unit id="d0242558abd414a74f34089244fa5d62391b4237" translate="yes" xml:space="preserve">
          <source>Metadata::file_size</source>
          <target state="translated">Metadata::file_size</target>
        </trans-unit>
        <trans-unit id="a80334eec47f4ec592f2356b1c15e66616fe6d79" translate="yes" xml:space="preserve">
          <source>Metadata::file_type</source>
          <target state="translated">Metadata::file_type</target>
        </trans-unit>
        <trans-unit id="8c5b2aa68de07863010f75c33869a67231d8a86c" translate="yes" xml:space="preserve">
          <source>Metadata::fmt</source>
          <target state="translated">Metadata::fmt</target>
        </trans-unit>
        <trans-unit id="22c4729ff6931a968eb928ba73151ec865e539bd" translate="yes" xml:space="preserve">
          <source>Metadata::from</source>
          <target state="translated">Metadata::from</target>
        </trans-unit>
        <trans-unit id="9aecb9b26fb5e2f5ecf3ae7fec8ad1913791d4fb" translate="yes" xml:space="preserve">
          <source>Metadata::gid</source>
          <target state="translated">Metadata::gid</target>
        </trans-unit>
        <trans-unit id="2dfe494860d779fdeab8e4a5d4ab49c9979a2c22" translate="yes" xml:space="preserve">
          <source>Metadata::ino</source>
          <target state="translated">Metadata::ino</target>
        </trans-unit>
        <trans-unit id="36d9dbdaea92dec9fd9a367943daf11c2968a4d9" translate="yes" xml:space="preserve">
          <source>Metadata::into</source>
          <target state="translated">Metadata::into</target>
        </trans-unit>
        <trans-unit id="29f1788d2917dee377c894e5f697e2f775dbe3c2" translate="yes" xml:space="preserve">
          <source>Metadata::is_dir</source>
          <target state="translated">Metadata::is_dir</target>
        </trans-unit>
        <trans-unit id="3aa539a19a6b3e2c584510ba64204dfdd9773023" translate="yes" xml:space="preserve">
          <source>Metadata::is_file</source>
          <target state="translated">Metadata::is_file</target>
        </trans-unit>
        <trans-unit id="afa64cd752db362df2a19d1dc5a178b5cc2f28bb" translate="yes" xml:space="preserve">
          <source>Metadata::last_access_time</source>
          <target state="translated">Metadata::last_access_time</target>
        </trans-unit>
        <trans-unit id="eaad95ea1d9df1f852c79a83a750592a287faefd" translate="yes" xml:space="preserve">
          <source>Metadata::last_write_time</source>
          <target state="translated">Metadata::last_write_time</target>
        </trans-unit>
        <trans-unit id="f9881c504082a9c98f72732ac253d46ddfcdd091" translate="yes" xml:space="preserve">
          <source>Metadata::len</source>
          <target state="translated">Metadata::len</target>
        </trans-unit>
        <trans-unit id="a1e80cdaa5a7c4b60866de711876b3a869fae063" translate="yes" xml:space="preserve">
          <source>Metadata::mode</source>
          <target state="translated">Metadata::mode</target>
        </trans-unit>
        <trans-unit id="7ccfeed6204cf299fd71093fa88a387e2f40cf29" translate="yes" xml:space="preserve">
          <source>Metadata::modified</source>
          <target state="translated">Metadata::modified</target>
        </trans-unit>
        <trans-unit id="fed36d469e25519f5d756495cbef355ed7e91ebc" translate="yes" xml:space="preserve">
          <source>Metadata::mtime</source>
          <target state="translated">Metadata::mtime</target>
        </trans-unit>
        <trans-unit id="f89d0ee281fc80e82b34a04d9ec5669992f853fe" translate="yes" xml:space="preserve">
          <source>Metadata::mtime_nsec</source>
          <target state="translated">Metadata::mtime_nsec</target>
        </trans-unit>
        <trans-unit id="7ea3185afb2cc66c1d1c43bb7e0c9431a71d5c0f" translate="yes" xml:space="preserve">
          <source>Metadata::nlink</source>
          <target state="translated">Metadata::nlink</target>
        </trans-unit>
        <trans-unit id="af6dc5bc6a15bc877f1b97832fdbaad7638e9e01" translate="yes" xml:space="preserve">
          <source>Metadata::permissions</source>
          <target state="translated">Metadata::permissions</target>
        </trans-unit>
        <trans-unit id="b8f0501a86acbf9b1c6ecec7d4736817cdf817cd" translate="yes" xml:space="preserve">
          <source>Metadata::rdev</source>
          <target state="translated">Metadata::rdev</target>
        </trans-unit>
        <trans-unit id="4d6596297451f34a3f748901f33eeaf5ca1ce581" translate="yes" xml:space="preserve">
          <source>Metadata::size</source>
          <target state="translated">Metadata::size</target>
        </trans-unit>
        <trans-unit id="e9067cb7fc933272c2ee73372bde8b5d793cec95" translate="yes" xml:space="preserve">
          <source>Metadata::st_atime</source>
          <target state="translated">Metadata::st_atime</target>
        </trans-unit>
        <trans-unit id="340d2deeb996099feda8b2e71ceee4746a54e895" translate="yes" xml:space="preserve">
          <source>Metadata::st_atime_nsec</source>
          <target state="translated">Metadata::st_atime_nsec</target>
        </trans-unit>
        <trans-unit id="0ae9039ec88beb8fc2f0f3bd1bb8ef8e5c525cab" translate="yes" xml:space="preserve">
          <source>Metadata::st_blksize</source>
          <target state="translated">Metadata::st_blksize</target>
        </trans-unit>
        <trans-unit id="a25bdcb2eb0e69a91b6e2eff09a462eca581884d" translate="yes" xml:space="preserve">
          <source>Metadata::st_blocks</source>
          <target state="translated">Metadata::st_blocks</target>
        </trans-unit>
        <trans-unit id="e8b580c6f030ddce2f3b41279b8814a4d974c39d" translate="yes" xml:space="preserve">
          <source>Metadata::st_ctime</source>
          <target state="translated">Metadata::st_ctime</target>
        </trans-unit>
        <trans-unit id="fdbb925376f8fb42348d70bd8f7efc024fe60076" translate="yes" xml:space="preserve">
          <source>Metadata::st_ctime_nsec</source>
          <target state="translated">Metadata::st_ctime_nsec</target>
        </trans-unit>
        <trans-unit id="b757b695e74311ba3c6e636e55b5ad9fdd73dd6b" translate="yes" xml:space="preserve">
          <source>Metadata::st_dev</source>
          <target state="translated">Metadata::st_dev</target>
        </trans-unit>
        <trans-unit id="6105b8b71960b47bdcdea43e0b8e7952849ef7c3" translate="yes" xml:space="preserve">
          <source>Metadata::st_gid</source>
          <target state="translated">Metadata::st_gid</target>
        </trans-unit>
        <trans-unit id="3db7b256e8dd1ff1c7ca3b4ec363649b620ce482" translate="yes" xml:space="preserve">
          <source>Metadata::st_ino</source>
          <target state="translated">Metadata::st_ino</target>
        </trans-unit>
        <trans-unit id="ccf6656b53d7732815f828000bde9df01154c5f7" translate="yes" xml:space="preserve">
          <source>Metadata::st_mode</source>
          <target state="translated">Metadata::st_mode</target>
        </trans-unit>
        <trans-unit id="a4761c3748e8e19cc614ab97572a55d03b74ded1" translate="yes" xml:space="preserve">
          <source>Metadata::st_mtime</source>
          <target state="translated">Metadata::st_mtime</target>
        </trans-unit>
        <trans-unit id="577eec1f21e7645e8b3ba3b96112265814eaab93" translate="yes" xml:space="preserve">
          <source>Metadata::st_mtime_nsec</source>
          <target state="translated">Metadata::st_mtime_nsec</target>
        </trans-unit>
        <trans-unit id="4af1b80839dea5a20a8f02919825911bfcfe6451" translate="yes" xml:space="preserve">
          <source>Metadata::st_nlink</source>
          <target state="translated">Metadata::st_nlink</target>
        </trans-unit>
        <trans-unit id="69d962fce72392be8edddc9a53681e0f08b9b69f" translate="yes" xml:space="preserve">
          <source>Metadata::st_rdev</source>
          <target state="translated">Metadata::st_rdev</target>
        </trans-unit>
        <trans-unit id="5faa5088298b4ae9ae7b08b3962a9a150635dfec" translate="yes" xml:space="preserve">
          <source>Metadata::st_size</source>
          <target state="translated">Metadata::st_size</target>
        </trans-unit>
        <trans-unit id="f4f89d23b5f0cd7c330566cf669e3a00205d72a7" translate="yes" xml:space="preserve">
          <source>Metadata::st_uid</source>
          <target state="translated">Metadata::st_uid</target>
        </trans-unit>
        <trans-unit id="1db7c9309be564ff6bf65531b173171534332f43" translate="yes" xml:space="preserve">
          <source>Metadata::to_owned</source>
          <target state="translated">Metadata::to_owned</target>
        </trans-unit>
        <trans-unit id="6732c96994bf6d2c0e20506c4bb4e662b9256862" translate="yes" xml:space="preserve">
          <source>Metadata::try_from</source>
          <target state="translated">Metadata::try_from</target>
        </trans-unit>
        <trans-unit id="73fe4168a94e1f02fc1b289a25908017bcf2159f" translate="yes" xml:space="preserve">
          <source>Metadata::try_into</source>
          <target state="translated">Metadata::try_into</target>
        </trans-unit>
        <trans-unit id="a718e80ede3faf1769107826f6fe239c5ded8be3" translate="yes" xml:space="preserve">
          <source>Metadata::type_id</source>
          <target state="translated">Metadata::type_id</target>
        </trans-unit>
        <trans-unit id="1d7387a664bb0cc1f5c78326600bd1342e97632f" translate="yes" xml:space="preserve">
          <source>Metadata::uid</source>
          <target state="translated">Metadata::uid</target>
        </trans-unit>
        <trans-unit id="1a9ddfb0caa33f4742d361d8a2f00bef568db02a" translate="yes" xml:space="preserve">
          <source>MetadataExt</source>
          <target state="translated">MetadataExt</target>
        </trans-unit>
        <trans-unit id="40b8dd00df3d6447af8e9e83e083a7745c1c189d" translate="yes" xml:space="preserve">
          <source>Metaprogramming is useful for reducing the amount of code you have to write and maintain, which is also one of the roles of functions. However, macros have some additional powers that functions don&amp;rsquo;t.</source>
          <target state="translated">메타 프로그래밍은 작성하고 유지 관리해야하는 코드의 양을 줄이는 데 유용하며 이는 기능의 역할 중 하나이기도합니다. 그러나 매크로에는 작동하지 않는 몇 가지 추가 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cbf3f8dcb1e2f43e65d88ac0f8a6b93a1658631" translate="yes" xml:space="preserve">
          <source>Metavariables</source>
          <target state="translated">Metavariables</target>
        </trans-unit>
        <trans-unit id="076edf57211eeac67aa1aad417b7d7a1ffc8d699" translate="yes" xml:space="preserve">
          <source>Method Syntax</source>
          <target state="translated">메소드 구문</target>
        </trans-unit>
        <trans-unit id="aa23ba323c11de2437b737ae399da090864345e1" translate="yes" xml:space="preserve">
          <source>Method calls</source>
          <target state="translated">메소드 호출</target>
        </trans-unit>
        <trans-unit id="db3e2af666e649fa244ecde8200f6f3e54c8deaf" translate="yes" xml:space="preserve">
          <source>Method has generic type parameters</source>
          <target state="translated">메소드에는 일반 유형 매개 변수가 있습니다</target>
        </trans-unit>
        <trans-unit id="9fe2b64db1642155c9d0f52ba05e45faefa0cb4b" translate="yes" xml:space="preserve">
          <source>Method has no receiver</source>
          <target state="translated">메소드에 수신자가 없습니다</target>
        </trans-unit>
        <trans-unit id="9fbefc33104f8433b35bf7c08d6416988a59e97a" translate="yes" xml:space="preserve">
          <source>Method references the &lt;code&gt;Self&lt;/code&gt; type in its arguments or return type</source>
          <target state="translated">메소드 는 인수 또는 리턴 유형에서 &lt;code&gt;Self&lt;/code&gt; 유형을 참조합니다.</target>
        </trans-unit>
        <trans-unit id="2e20e820f64e959b3049d8c2e89b632aa89d87d7" translate="yes" xml:space="preserve">
          <source>Method references the &lt;code&gt;Self&lt;/code&gt; type in its parameters or return type</source>
          <target state="translated">메서드 는 매개 변수 또는 반환 유형에서 &lt;code&gt;Self&lt;/code&gt; 유형을 참조합니다.</target>
        </trans-unit>
        <trans-unit id="4caa5dd0258db2dcd504dc2546dbae39450d3d76" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by &quot;summing up&quot; the items.</source>
          <target state="translated">항목을 &quot;합산&quot; 하여 반복자를 가져 와서 요소에서 &lt;code&gt;Self&lt;/code&gt; 를 생성하는 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="0bfbad119f3cf91e8a3caba0dfc0e91aabd256df" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by &quot;summing up&quot; the items. &lt;a href=&quot;../iter/trait.sum#tymethod.sum&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">항목을 &quot;합산&quot; 하여 반복자를 가져 와서 요소에서 &lt;code&gt;Self&lt;/code&gt; 를 생성하는 방법입니다 . &lt;a href=&quot;../iter/trait.sum#tymethod.sum&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a49c93b99f5d6fa2929221bf68c97c440d6e08d7" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by &quot;summing up&quot; the items. &lt;a href=&quot;iter/trait.sum#tymethod.sum&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">항목을 &quot;합산&quot; 하여 반복자를 가져 와서 요소에서 &lt;code&gt;Self&lt;/code&gt; 를 생성하는 방법입니다 . &lt;a href=&quot;iter/trait.sum#tymethod.sum&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea69507e1801650f83f78a153ac7b6a2ad0138d3" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by multiplying the items.</source>
          <target state="translated">항목을 곱하여 반복자를 가져 와서 요소에서 &lt;code&gt;Self&lt;/code&gt; 를 생성하는 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="73a5734b7c8ee797666395ff82c8551e1baecbfd" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by multiplying the items. &lt;a href=&quot;../iter/trait.product#tymethod.product&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">항목을 곱하여 반복자를 가져 와서 요소에서 &lt;code&gt;Self&lt;/code&gt; 를 생성하는 방법입니다 . &lt;a href=&quot;../iter/trait.product#tymethod.product&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05e078fee77d9f52059120342f63434db6b130d7" translate="yes" xml:space="preserve">
          <source>Method which takes an iterator and generates &lt;code&gt;Self&lt;/code&gt; from the elements by multiplying the items. &lt;a href=&quot;iter/trait.product#tymethod.product&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">항목을 곱하여 반복자를 가져 와서 요소에서 &lt;code&gt;Self&lt;/code&gt; 를 생성하는 방법입니다 . &lt;a href=&quot;iter/trait.product#tymethod.product&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a92d08f589c40b54496b3a1fbc8d96e770e0ced7" translate="yes" xml:space="preserve">
          <source>Method-call expressions</source>
          <target state="translated">메소드 호출 표현식</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="ee8ca348ec57b6e6b019969d4eed66807417ce83" translate="yes" xml:space="preserve">
          <source>Methods can be chained on it in order to configure it.</source>
          <target state="translated">구성하기 위해 메소드를 체인화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b021a05f7c2a7c30d999e3a3dbfdfbb325ce5b50" translate="yes" xml:space="preserve">
          <source>Methods for Iterating Over Strings</source>
          <target state="translated">문자열을 반복하는 방법</target>
        </trans-unit>
        <trans-unit id="00dd2d8a3c6af309cfff5d80bf81a66f5911b4af" translate="yes" xml:space="preserve">
          <source>Methods for string slices.</source>
          <target state="translated">문자열 슬라이스 방법.</target>
        </trans-unit>
        <trans-unit id="c07aa4ee0c7df87d7696c4013a8c13bb9865c6c1" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = CStr&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = CStr&amp;gt;의 메소드</target>
        </trans-unit>
        <trans-unit id="52ba76ad3be01e9c1922f800d6dd033b03df424a" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = OsStr&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = OsStr&amp;gt;의 메소드</target>
        </trans-unit>
        <trans-unit id="2c4d2afb0c4f85edb3758b4b74f07ed37559c41d" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = Path&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = Path&amp;gt;의 메소드</target>
        </trans-unit>
        <trans-unit id="4fe785a58d64e13b3eb4b5b3048abd19034b85d5" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = VaListImpl&amp;lt;'f&amp;gt;&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = VaListImpl &amp;lt; 'f &amp;gt;&amp;gt;의 메소드</target>
        </trans-unit>
        <trans-unit id="886ed7558512e092a63227354a168c0f7c713bf8" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = [T]&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = [T]&amp;gt;의 메소드</target>
        </trans-unit>
        <trans-unit id="aeaea61088adeb05abf57ffbd37dfaa9942f2c9c" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = [u8]&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = [u8]&amp;gt;의 메소드</target>
        </trans-unit>
        <trans-unit id="2d000ac3199600cab3d62328aab7e663fe156377" translate="yes" xml:space="preserve">
          <source>Methods from Deref&amp;lt;Target = str&amp;gt;</source>
          <target state="translated">Deref &amp;lt;Target = str&amp;gt;의 메소드</target>
        </trans-unit>
        <trans-unit id="15acf73029decb61b9edc8c57e095d1568d02f80" translate="yes" xml:space="preserve">
          <source>Methods take a special first parameter, of which there are three variants: &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;&amp;amp;self&lt;/code&gt;, and &lt;code&gt;&amp;amp;mut self&lt;/code&gt;. These are syntactic sugar for &lt;code&gt;self: Self&lt;/code&gt;, &lt;code&gt;self: &amp;amp;Self&lt;/code&gt;, and &lt;code&gt;self: &amp;amp;mut Self&lt;/code&gt; respectively.</source>
          <target state="translated">메소드는 특별한 첫 번째 매개 변수를 취하며, 그중 &lt;code&gt;self&lt;/code&gt; , &lt;code&gt;&amp;amp;self&lt;/code&gt; 및 &lt;code&gt;&amp;amp;mut self&lt;/code&gt; 세 가지 변형이 있습니다 . &lt;code&gt;self: Self&lt;/code&gt; , &lt;code&gt;self: &amp;amp;Self&lt;/code&gt; 및 &lt;code&gt;self: &amp;amp;mut Self&lt;/code&gt; 대한 구문 설탕입니다 .</target>
        </trans-unit>
        <trans-unit id="fe4104ca2fabda0b7616f0224304804e72d4ac2a" translate="yes" xml:space="preserve">
          <source>Methods that Consume the Iterator</source>
          <target state="translated">반복자를 소비하는 메소드</target>
        </trans-unit>
        <trans-unit id="043d81030ec2d2447aaee9862fecf17f9a5197d0" translate="yes" xml:space="preserve">
          <source>Methods that Produce Other Iterators</source>
          <target state="translated">다른 반복자를 생성하는 방법</target>
        </trans-unit>
        <trans-unit id="679313b3ec5d9213f11610dd488f1716be31fd55" translate="yes" xml:space="preserve">
          <source>Methods that call &lt;code&gt;next&lt;/code&gt; are called &lt;em&gt;consuming adaptors&lt;/em&gt;, because calling them uses up the iterator. One example is the &lt;code&gt;sum&lt;/code&gt; method, which takes ownership of the iterator and iterates through the items by repeatedly calling &lt;code&gt;next&lt;/code&gt;, thus consuming the iterator. As it iterates through, it adds each item to a running total and returns the total when iteration is complete. Listing 13-16 has a test illustrating a use of the &lt;code&gt;sum&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; 에 호출 &lt;em&gt;하는&lt;/em&gt; 메소드를 호출 &lt;em&gt;어댑터&lt;/em&gt; 라고 합니다. 호출하면 이터레이터가 사용되기 때문입니다. 한 가지 예는 &lt;code&gt;sum&lt;/code&gt; 메소드입니다.이 메소드는 반복자의 소유권을 가져오고 &lt;code&gt;next&lt;/code&gt; 를 반복적으로 호출하여 항목을 반복 하여 반복자를 소비합니다. 반복 될 때 각 항목을 누적 합계에 추가하고 반복이 완료되면 합계를 반환합니다. Listing 13-16에는 &lt;code&gt;sum&lt;/code&gt; 메소드 사용을 보여주는 테스트가있다 .</target>
        </trans-unit>
        <trans-unit id="3ee9e7dcc3b812dd7c3d130ea59dea4e2ffafdfc" translate="yes" xml:space="preserve">
          <source>Methods that do not take a &lt;code&gt;self&lt;/code&gt; parameter can't be called since there won't be a way to get a pointer to the method table for them.</source>
          <target state="translated">테이크하지 않는 방법 &lt;code&gt;self&lt;/code&gt; 그 방법 테이블에 대한 포인터를 얻을 수있는 방법이 없을 것이기 때문에 매개 변수는 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ae3a1f0113af9f3ea9e116941ce0ea3243f869f0" translate="yes" xml:space="preserve">
          <source>Methods which take no arguments, like &lt;a href=&quot;../../std/default/trait.default#tymethod.default&quot;&gt;&lt;code&gt;default()&lt;/code&gt;&lt;/a&gt;, and return properties of a type, like &lt;a href=&quot;../../std/mem/fn.size_of&quot;&gt;&lt;code&gt;size_of()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../std/default/trait.default#tymethod.default&quot;&gt; &lt;code&gt;default()&lt;/code&gt; &lt;/a&gt; 와 같은 인수를받지 않고 &lt;a href=&quot;../../std/mem/fn.size_of&quot;&gt; &lt;code&gt;size_of()&lt;/code&gt; &lt;/a&gt; 와 같은 유형의 속성을 반환하는 메서드</target>
        </trans-unit>
        <trans-unit id="f508ce51136df60a01c2c9efd3801fc4a432141c" translate="yes" xml:space="preserve">
          <source>Methods which take no arguments, like &lt;code&gt;default()&lt;/code&gt;, and return properties of a type, like &lt;code&gt;size_of()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;default()&lt;/code&gt; 와 같은 인수를 취하지 않고 &lt;code&gt;size_of()&lt;/code&gt; 와 같은 유형의 속성을 반환하는 메서드</target>
        </trans-unit>
        <trans-unit id="511541816029367d0abeb46600cba6c7968497a0" translate="yes" xml:space="preserve">
          <source>Methods with More Parameters</source>
          <target state="translated">더 많은 매개 변수를 가진 메소드</target>
        </trans-unit>
        <trans-unit id="802461e6fd7e65d5e9a22bd62f94115d8960193a" translate="yes" xml:space="preserve">
          <source>Micro (or Update) version.</source>
          <target state="translated">마이크로 (또는 업데이트) 버전.</target>
        </trans-unit>
        <trans-unit id="1d43f011780167b829f8c795b301b234700476ad" translate="yes" xml:space="preserve">
          <source>Might panic if the index of the element overflows a &lt;code&gt;usize&lt;/code&gt;.</source>
          <target state="translated">요소의 인덱스가 &lt;code&gt;usize&lt;/code&gt; 오버플로하면 패닉이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="779f4caecdf181b1f5c98a94586ba57d3d722311" translate="yes" xml:space="preserve">
          <source>Min-heap</source>
          <target state="translated">Min-heap</target>
        </trans-unit>
        <trans-unit id="5d398eef3ecc3ea6a161734581d0bd3d920b64d8" translate="yes" xml:space="preserve">
          <source>Minimum</source>
          <target state="translated">Minimum</target>
        </trans-unit>
        <trans-unit id="9686035ca169e7d2c603263a9dbe434de5abc91a" translate="yes" xml:space="preserve">
          <source>Minimum possible normal power of 10 exponent.</source>
          <target state="translated">10 지수의 최소 가능 정규 출력.</target>
        </trans-unit>
        <trans-unit id="ffb2ad89a1dd6c4804093e8354f75dbc1aa1f5e7" translate="yes" xml:space="preserve">
          <source>Minimum possible normal power of 10 exponent. Use &lt;a href=&quot;../primitive.f32#associatedconstant.MIN_10_EXP&quot;&gt;&lt;code&gt;f32::MIN_10_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">10 지수의 가능한 최소 정규 거듭 제곱입니다. 대신 &lt;a href=&quot;../primitive.f32#associatedconstant.MIN_10_EXP&quot;&gt; &lt;code&gt;f32::MIN_10_EXP&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="28b12c5c97636794c572ef7bb8ea42845c9ea039" translate="yes" xml:space="preserve">
          <source>Minimum possible normal power of 10 exponent. Use &lt;a href=&quot;../primitive.f64#associatedconstant.MIN_10_EXP&quot;&gt;&lt;code&gt;f64::MIN_10_EXP&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">10 지수의 가능한 최소 정규 거듭 제곱입니다. 대신 &lt;a href=&quot;../primitive.f64#associatedconstant.MIN_10_EXP&quot;&gt; &lt;code&gt;f64::MIN_10_EXP&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a4d51f63ad6ed8d5102aae64b1f14cf4ad7186d1" translate="yes" xml:space="preserve">
          <source>Minimum with the current value using a signed comparison.</source>
          <target state="translated">부호있는 비교를 사용하는 현재 값의 최소값입니다.</target>
        </trans-unit>
        <trans-unit id="f7d307d26ef7401783092ce67c5e5dfce79391c8" translate="yes" xml:space="preserve">
          <source>Minimum with the current value using an unsigned comparison.</source>
          <target state="translated">부호없는 비교를 사용하는 현재 값의 최소값입니다.</target>
        </trans-unit>
        <trans-unit id="bc9c56954a5369c8cefef30b5732fd34372d7311" translate="yes" xml:space="preserve">
          <source>Minimum with the current value.</source>
          <target state="translated">현재 값의 최소값.</target>
        </trans-unit>
        <trans-unit id="59f366bad4114cb2cc36b8a33f5423f9ac6fd71f" translate="yes" xml:space="preserve">
          <source>Minor version.</source>
          <target state="translated">부 버전.</target>
        </trans-unit>
        <trans-unit id="02b11141c2e4b7a3f351c2572f6527000b3797a8" translate="yes" xml:space="preserve">
          <source>Minus</source>
          <target state="translated">Minus</target>
        </trans-unit>
        <trans-unit id="022838872d4385168e069837fce8660a01c5ed91" translate="yes" xml:space="preserve">
          <source>MinusEq</source>
          <target state="translated">MinusEq</target>
        </trans-unit>
        <trans-unit id="c5f80ef4e4318adbcf9d144d914ef70f5c17933b" translate="yes" xml:space="preserve">
          <source>Misc: &lt;a href=&quot;struct.binaryheap&quot;&gt;&lt;code&gt;BinaryHeap&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">기타 : &lt;a href=&quot;struct.binaryheap&quot;&gt; &lt;code&gt;BinaryHeap&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1c83ad0d224e2f3eec634234f5566e77e746484" translate="yes" xml:space="preserve">
          <source>Modifies the &lt;code&gt;VecDeque&lt;/code&gt; in-place so that &lt;code&gt;len()&lt;/code&gt; is equal to &lt;code&gt;new_len&lt;/code&gt;, either by removing excess elements from the back or by appending elements generated by calling &lt;code&gt;generator&lt;/code&gt; to the back.</source>
          <target state="translated">뒷면에서 초과 요소를 제거하거나 &lt;code&gt;generator&lt;/code&gt; 를 호출하여 생성 된 요소를 뒷면에 추가하여 &lt;code&gt;len()&lt;/code&gt; 이 &lt;code&gt;new_len&lt;/code&gt; 과 동일하도록 VecDeque를 &lt;code&gt;VecDeque&lt;/code&gt; 에서 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="259e0f4ab5708c9eae56da4674bd459c6c84d47d" translate="yes" xml:space="preserve">
          <source>Modifies the &lt;code&gt;VecDeque&lt;/code&gt; in-place so that &lt;code&gt;len()&lt;/code&gt; is equal to new_len, either by removing excess elements from the back or by appending clones of &lt;code&gt;value&lt;/code&gt; to the back.</source>
          <target state="translated">&lt;code&gt;VecDeque&lt;/code&gt; 를 내부 에서 수정하여 &lt;code&gt;len()&lt;/code&gt; 이 new_len과 같도록합니다 (뒤에서 초과 요소를 제거하거나 &lt;code&gt;value&lt;/code&gt; 복제본을 뒤에 추가) .</target>
        </trans-unit>
        <trans-unit id="388953bd58be40c58525d23884620eb769a245cf" translate="yes" xml:space="preserve">
          <source>Modifies the readonly flag for this set of permissions. If the &lt;code&gt;readonly&lt;/code&gt; argument is &lt;code&gt;true&lt;/code&gt;, using the resulting &lt;code&gt;Permission&lt;/code&gt; will update file permissions to forbid writing. Conversely, if it's &lt;code&gt;false&lt;/code&gt;, using the resulting &lt;code&gt;Permission&lt;/code&gt; will update file permissions to allow writing.</source>
          <target state="translated">이 권한 세트에 대한 읽기 전용 플래그를 수정합니다. 경우 &lt;code&gt;readonly&lt;/code&gt; 인수가 &lt;code&gt;true&lt;/code&gt; , 그 결과 사용 &lt;code&gt;Permission&lt;/code&gt; 파일 권한을 업데이트하는 것은 쓰기를 금지합니다. 반대로 &lt;code&gt;false&lt;/code&gt; 인 경우 결과 &lt;code&gt;Permission&lt;/code&gt; 을 사용하면 파일 권한 이 업데이트되어 쓰기가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="6685c1ab86d7b3200ddad05850d044f335910e37" translate="yes" xml:space="preserve">
          <source>Modifying the container referenced by this slice may cause its buffer to be reallocated, which would also make any pointers to it invalid.</source>
          <target state="translated">이 슬라이스가 참조하는 컨테이너를 수정하면 버퍼가 재 할당되어 포인터가 잘못 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd695f53eb7e8aa3d751b63b95373a718454f083" translate="yes" xml:space="preserve">
          <source>Module Path</source>
          <target state="translated">모듈 경로</target>
        </trans-unit>
        <trans-unit id="358ab95660416089a183bc3d4af1ea1d91ce74b3" translate="yes" xml:space="preserve">
          <source>Module Source Filenames</source>
          <target state="translated">모듈 소스 파일 이름</target>
        </trans-unit>
        <trans-unit id="9438c342e44c174f90e843017ea4487401effee4" translate="yes" xml:space="preserve">
          <source>Module filenames may also be the name of the module as a directory with the contents in a file named &lt;code&gt;mod.rs&lt;/code&gt; within that directory. The above example can alternately be expressed with &lt;code&gt;crate::util&lt;/code&gt;'s contents in a file named &lt;code&gt;util/mod.rs&lt;/code&gt;. It is not allowed to have both &lt;code&gt;util.rs&lt;/code&gt; and &lt;code&gt;util/mod.rs&lt;/code&gt;.</source>
          <target state="translated">모듈 파일 이름은 해당 디렉토리 내의 &lt;code&gt;mod.rs&lt;/code&gt; 파일에 내용이있는 디렉토리의 모듈 이름 일 수도 있습니다 . 위의 예는 &lt;code&gt;util/mod.rs&lt;/code&gt; 라는 파일에서 &lt;code&gt;crate::util&lt;/code&gt; 의 내용으로 번갈아 표현 될 수 있습니다 . &lt;code&gt;util.rs&lt;/code&gt; 및 &lt;code&gt;util/mod.rs&lt;/code&gt; 를 모두 가질 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="67e7cc7f99628a4986b6a1f3cec75594ae2a421d" translate="yes" xml:space="preserve">
          <source>Module std::alloc</source>
          <target state="translated">모듈 std :: alloc</target>
        </trans-unit>
        <trans-unit id="1f168b0ce3b5f4140561435dd8191fdd8d1f8400" translate="yes" xml:space="preserve">
          <source>Module std::any</source>
          <target state="translated">모듈 std :: any</target>
        </trans-unit>
        <trans-unit id="74dcac8707e89902448dfa1c14f9f7c425346aa8" translate="yes" xml:space="preserve">
          <source>Module std::array</source>
          <target state="translated">모듈 std :: array</target>
        </trans-unit>
        <trans-unit id="eb88c7aeb0713036089449fecb0c4f55f2b78393" translate="yes" xml:space="preserve">
          <source>Module std::ascii</source>
          <target state="translated">모듈 std :: ascii</target>
        </trans-unit>
        <trans-unit id="c1baa0271b255c4579475b533c596937f9caca25" translate="yes" xml:space="preserve">
          <source>Module std::borrow</source>
          <target state="translated">모듈 std :: borrow</target>
        </trans-unit>
        <trans-unit id="944aa644b01a70375b135a1296686f1614357d19" translate="yes" xml:space="preserve">
          <source>Module std::boxed</source>
          <target state="translated">모듈 std :: boxed</target>
        </trans-unit>
        <trans-unit id="3b5f7e15fd316c8d34b81bf8061e390af9288b4b" translate="yes" xml:space="preserve">
          <source>Module std::cell</source>
          <target state="translated">모듈 std :: cell</target>
        </trans-unit>
        <trans-unit id="f8bf99c4dd201de2fdc07a15b2cc6fbbca18e6cd" translate="yes" xml:space="preserve">
          <source>Module std::char</source>
          <target state="translated">모듈 std :: char</target>
        </trans-unit>
        <trans-unit id="c5dd89ff5c6a7d776cfcfe78e55674c03d5223be" translate="yes" xml:space="preserve">
          <source>Module std::clone</source>
          <target state="translated">모듈 std :: clone</target>
        </trans-unit>
        <trans-unit id="732c478dc0b8b1af9e2281c8805a09a43713023c" translate="yes" xml:space="preserve">
          <source>Module std::cmp</source>
          <target state="translated">모듈 표준 :: cmp</target>
        </trans-unit>
        <trans-unit id="1c527c4c50093bdafdd449b15cd58deed5226111" translate="yes" xml:space="preserve">
          <source>Module std::collections</source>
          <target state="translated">모듈 std :: collections</target>
        </trans-unit>
        <trans-unit id="22399e3b667d659ffdf0bd0d2a242938115b334d" translate="yes" xml:space="preserve">
          <source>Module std::collections::binary_heap</source>
          <target state="translated">모듈 std :: collections :: binary_heap</target>
        </trans-unit>
        <trans-unit id="8831b08122b4025abd8f4cce52120cf0293000eb" translate="yes" xml:space="preserve">
          <source>Module std::collections::btree_map</source>
          <target state="translated">모듈 std :: collections :: btree_map</target>
        </trans-unit>
        <trans-unit id="0fda50906c532c1e2a0ad6e3de7fe45a0e660208" translate="yes" xml:space="preserve">
          <source>Module std::collections::btree_set</source>
          <target state="translated">모듈 std :: collections :: btree_set</target>
        </trans-unit>
        <trans-unit id="bf9f7bc09a39f746ccb1fb9dd1b68ca2f37b3ac8" translate="yes" xml:space="preserve">
          <source>Module std::collections::hash_map</source>
          <target state="translated">모듈 std :: collections :: hash_map</target>
        </trans-unit>
        <trans-unit id="82d4e5a9b2b747b555ec1f59cc3ee8b6040f0ea4" translate="yes" xml:space="preserve">
          <source>Module std::collections::hash_set</source>
          <target state="translated">모듈 std :: collections :: hash_set</target>
        </trans-unit>
        <trans-unit id="3b9e90623541cf502101a0da3f9cd7a22f337bee" translate="yes" xml:space="preserve">
          <source>Module std::collections::linked_list</source>
          <target state="translated">모듈 std :: collections :: linked_list</target>
        </trans-unit>
        <trans-unit id="1cc384ca31725520529bcef0534d2d6ef4a59015" translate="yes" xml:space="preserve">
          <source>Module std::collections::vec_deque</source>
          <target state="translated">모듈 std :: collections :: vec_deque</target>
        </trans-unit>
        <trans-unit id="5c101adb0bf7699694386752ddfb2c4e7c3acc27" translate="yes" xml:space="preserve">
          <source>Module std::convert</source>
          <target state="translated">모듈 std :: convert</target>
        </trans-unit>
        <trans-unit id="1696cfce739558be5ebc0f8ef2878137df7f39dd" translate="yes" xml:space="preserve">
          <source>Module std::default</source>
          <target state="translated">모듈 std :: default</target>
        </trans-unit>
        <trans-unit id="a7964893576681a36f1c7c99505b4891038450ef" translate="yes" xml:space="preserve">
          <source>Module std::env</source>
          <target state="translated">모듈 std :: env</target>
        </trans-unit>
        <trans-unit id="18e031a86caea66de408ccae8837f2b2b874a6fb" translate="yes" xml:space="preserve">
          <source>Module std::env::consts</source>
          <target state="translated">모듈 std :: env :: consts</target>
        </trans-unit>
        <trans-unit id="714e701bd4a34342e7c5c2a54b206b9d64a36fd2" translate="yes" xml:space="preserve">
          <source>Module std::error</source>
          <target state="translated">모듈 std :: error</target>
        </trans-unit>
        <trans-unit id="024e18310861ff85880bdf1bd192fded2a7f7fae" translate="yes" xml:space="preserve">
          <source>Module std::f32</source>
          <target state="translated">모듈 std :: f32</target>
        </trans-unit>
        <trans-unit id="d3dfc2ef589d6b2fe26d70f811bd98d775db9b43" translate="yes" xml:space="preserve">
          <source>Module std::f32::consts</source>
          <target state="translated">모듈 std :: f32 :: consts</target>
        </trans-unit>
        <trans-unit id="a908a9121b2baed35830f37aa5f643dad8dd2a69" translate="yes" xml:space="preserve">
          <source>Module std::f64</source>
          <target state="translated">모듈 std :: f64</target>
        </trans-unit>
        <trans-unit id="6ebde8a62115282c608377191e51eec94ae36ac7" translate="yes" xml:space="preserve">
          <source>Module std::f64::consts</source>
          <target state="translated">모듈 std :: f64 :: consts</target>
        </trans-unit>
        <trans-unit id="b48745452ac486d7491517605613a3997acd41e1" translate="yes" xml:space="preserve">
          <source>Module std::ffi</source>
          <target state="translated">모듈 std :: ffi</target>
        </trans-unit>
        <trans-unit id="513413625cb667d1a23a6bdf55d8291c2a415569" translate="yes" xml:space="preserve">
          <source>Module std::fmt</source>
          <target state="translated">모듈 std :: fmt</target>
        </trans-unit>
        <trans-unit id="ba31839aa5198e5b217aeb76bb7ef860415500f7" translate="yes" xml:space="preserve">
          <source>Module std::fs</source>
          <target state="translated">모듈 std :: fs</target>
        </trans-unit>
        <trans-unit id="ed3fa75d05c230ee7e55688c40c7a666e8d77259" translate="yes" xml:space="preserve">
          <source>Module std::future</source>
          <target state="translated">모듈 std :: future</target>
        </trans-unit>
        <trans-unit id="ebc2a772ed30a81840a1d451a8c2c89aab5c92b4" translate="yes" xml:space="preserve">
          <source>Module std::hash</source>
          <target state="translated">모듈 std :: hash</target>
        </trans-unit>
        <trans-unit id="d24afb2059821706f68be9725e265ed398fbbe08" translate="yes" xml:space="preserve">
          <source>Module std::hint</source>
          <target state="translated">모듈 std :: hint</target>
        </trans-unit>
        <trans-unit id="faf4d0919a773dd46bc0ea50e8553ab459a11552" translate="yes" xml:space="preserve">
          <source>Module std::i128</source>
          <target state="translated">모듈 std :: i128</target>
        </trans-unit>
        <trans-unit id="79357e954e2b2694b7e153bf655cf2500d8798dd" translate="yes" xml:space="preserve">
          <source>Module std::i16</source>
          <target state="translated">모듈 std :: i16</target>
        </trans-unit>
        <trans-unit id="36fd00a7fbc538ecafcc456a9917547646d03ef3" translate="yes" xml:space="preserve">
          <source>Module std::i32</source>
          <target state="translated">모듈 std :: i32</target>
        </trans-unit>
        <trans-unit id="e63c251332db3cdab1c09f68009ab5cea31d30ca" translate="yes" xml:space="preserve">
          <source>Module std::i64</source>
          <target state="translated">모듈 std :: i64</target>
        </trans-unit>
        <trans-unit id="1db4b4a2c54c784d4898f7607b6032a2da53eebf" translate="yes" xml:space="preserve">
          <source>Module std::i8</source>
          <target state="translated">모듈 std :: i8</target>
        </trans-unit>
        <trans-unit id="57d9247242555ef52e05b7666b250df82a8a67f2" translate="yes" xml:space="preserve">
          <source>Module std::intrinsics</source>
          <target state="translated">모듈 std :: intrinsics</target>
        </trans-unit>
        <trans-unit id="e09c0021069c0b5dc7fa0552436af600e87d48ec" translate="yes" xml:space="preserve">
          <source>Module std::io</source>
          <target state="translated">모듈 std :: io</target>
        </trans-unit>
        <trans-unit id="387a9fa1ef32cff8e09d4bb8bd02d4f53e1b3480" translate="yes" xml:space="preserve">
          <source>Module std::io::prelude</source>
          <target state="translated">모듈 std :: io :: prelude</target>
        </trans-unit>
        <trans-unit id="7842ca2efa605585ef115faa072b699cfc65676e" translate="yes" xml:space="preserve">
          <source>Module std::isize</source>
          <target state="translated">모듈 std :: isize</target>
        </trans-unit>
        <trans-unit id="601c1ba18661cd27d5610644b24553dece1976f3" translate="yes" xml:space="preserve">
          <source>Module std::iter</source>
          <target state="translated">모듈 std :: iter</target>
        </trans-unit>
        <trans-unit id="da0499ff04c78dc7910317cdcd69930464227eb5" translate="yes" xml:space="preserve">
          <source>Module std::marker</source>
          <target state="translated">모듈 std :: marker</target>
        </trans-unit>
        <trans-unit id="2a3e749b607cb57406551010f876024c0c08dd92" translate="yes" xml:space="preserve">
          <source>Module std::mem</source>
          <target state="translated">모듈 std :: mem</target>
        </trans-unit>
        <trans-unit id="c3f0b3647f4485c1d3f60dd7745d15046a0394e2" translate="yes" xml:space="preserve">
          <source>Module std::net</source>
          <target state="translated">모듈 std :: net</target>
        </trans-unit>
        <trans-unit id="c77d2a44ca46d3b377b843d90632c7f049270aa5" translate="yes" xml:space="preserve">
          <source>Module std::num</source>
          <target state="translated">모듈 std :: num</target>
        </trans-unit>
        <trans-unit id="9b2965277551e3bc8df52c5ac3fb1f339bf8d5d6" translate="yes" xml:space="preserve">
          <source>Module std::ops</source>
          <target state="translated">모듈 std :: ops</target>
        </trans-unit>
        <trans-unit id="e45a8da7735323b76386e35efab4701fd0ca8fbb" translate="yes" xml:space="preserve">
          <source>Module std::option</source>
          <target state="translated">모듈 std :: option</target>
        </trans-unit>
        <trans-unit id="307fafb17725b95023deaf1a6801c2a5ac4f03cb" translate="yes" xml:space="preserve">
          <source>Module std::os</source>
          <target state="translated">모듈 std :: os</target>
        </trans-unit>
        <trans-unit id="505dd09c9a71b2838c7035bc67e62349d53c8dc3" translate="yes" xml:space="preserve">
          <source>Module std::os::linux</source>
          <target state="translated">모듈 std :: os :: linux</target>
        </trans-unit>
        <trans-unit id="fa0dc21a3daaf135d69d911638837a8b9d2d630d" translate="yes" xml:space="preserve">
          <source>Module std::os::linux::fs</source>
          <target state="translated">모듈 std :: os :: linux :: fs</target>
        </trans-unit>
        <trans-unit id="1ca3824e634b18182698b8ba7bcf1d5541585e2f" translate="yes" xml:space="preserve">
          <source>Module std::os::linux::raw</source>
          <target state="translated">모듈 std :: os :: linux :: raw</target>
        </trans-unit>
        <trans-unit id="582caf1e2f62f8bab46f235f3c754b626e233672" translate="yes" xml:space="preserve">
          <source>Module std::os::raw</source>
          <target state="translated">모듈 std :: os :: raw</target>
        </trans-unit>
        <trans-unit id="d11d414140e55c223e9dc48ec87e8796ccd2b3f4" translate="yes" xml:space="preserve">
          <source>Module std::os::unix</source>
          <target state="translated">모듈 std :: os :: unix</target>
        </trans-unit>
        <trans-unit id="af56c4b5931b2847016fbfd39d2585e1fdfd5b8c" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::ffi</source>
          <target state="translated">모듈 std :: os :: unix :: ffi</target>
        </trans-unit>
        <trans-unit id="3c5b94d9dc17e4fdbbcdc6a46f2e9a32ae5cf92b" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::fs</source>
          <target state="translated">모듈 std :: os :: unix :: fs</target>
        </trans-unit>
        <trans-unit id="f25625cf4aa908a37e36073f3b8cf3ff3c9fdadc" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::io</source>
          <target state="translated">모듈 std :: os :: unix :: io</target>
        </trans-unit>
        <trans-unit id="1ad5bcc975ebe113e7aff4ca1ac2085e8a6e283d" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::net</source>
          <target state="translated">모듈 std :: os :: unix :: net</target>
        </trans-unit>
        <trans-unit id="08e71b66acb88da56278c3ca887195904d0231bc" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::prelude</source>
          <target state="translated">모듈 std :: os :: unix :: prelude</target>
        </trans-unit>
        <trans-unit id="45906151349e8d44b6c1080c120767e9f40795a0" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::process</source>
          <target state="translated">모듈 std :: os :: unix :: process</target>
        </trans-unit>
        <trans-unit id="9b65405323e9bf4ef1b88c304e5ec0dfe3eb2c2e" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::raw</source>
          <target state="translated">모듈 std :: os :: unix :: raw</target>
        </trans-unit>
        <trans-unit id="eda535add8f6a9e9aa82a314016a472708ba626f" translate="yes" xml:space="preserve">
          <source>Module std::os::unix::thread</source>
          <target state="translated">모듈 std :: os :: unix :: thread</target>
        </trans-unit>
        <trans-unit id="e0d43b7d1d112f6d717881b08a1b8360eeeb3de7" translate="yes" xml:space="preserve">
          <source>Module std::os::windows</source>
          <target state="translated">모듈 std :: os :: windows</target>
        </trans-unit>
        <trans-unit id="f5337c9e4fddf5f309a1b852756b69889a5e1ed7" translate="yes" xml:space="preserve">
          <source>Module std::os::windows::ffi</source>
          <target state="translated">모듈 std :: os :: windows :: ffi</target>
        </trans-unit>
        <trans-unit id="9a5eadcc218fb3b0ed96394fe1a8b6e9aaf4efcd" translate="yes" xml:space="preserve">
          <source>Module std::os::windows::fs</source>
          <target state="translated">모듈 std :: os :: windows :: fs</target>
        </trans-unit>
        <trans-unit id="9800232b824a17f8674dba073742accd03a5c7b4" translate="yes" xml:space="preserve">
          <source>Module std::os::windows::io</source>
          <target state="translated">모듈 std :: os :: windows :: io</target>
        </trans-unit>
        <trans-unit id="f64b2edc640f0b863a86e9fc1c63b93491ecb73e" translate="yes" xml:space="preserve">
          <source>Module std::os::windows::prelude</source>
          <target state="translated">모듈 std :: os :: windows :: prelude</target>
        </trans-unit>
        <trans-unit id="c3a33d8f5b07f49ebbb466bdc5b0c55d9f30a1a4" translate="yes" xml:space="preserve">
          <source>Module std::os::windows::process</source>
          <target state="translated">모듈 std :: os :: windows :: process</target>
        </trans-unit>
        <trans-unit id="d5984edd78151ee0b86049ca16fe84ae4281aba6" translate="yes" xml:space="preserve">
          <source>Module std::os::windows::raw</source>
          <target state="translated">모듈 std :: os :: windows :: raw</target>
        </trans-unit>
        <trans-unit id="ce2dd33c5819fd4ec975020da7690a04606049df" translate="yes" xml:space="preserve">
          <source>Module std::os::windows::thread</source>
          <target state="translated">모듈 std :: os :: windows :: thread</target>
        </trans-unit>
        <trans-unit id="1e56e7038b8ac2517d919e74dd6ff5affae26278" translate="yes" xml:space="preserve">
          <source>Module std::panic</source>
          <target state="translated">모듈 std :: panic</target>
        </trans-unit>
        <trans-unit id="40741efebae8310393287d7e27414f9dd61b5684" translate="yes" xml:space="preserve">
          <source>Module std::path</source>
          <target state="translated">모듈 std :: path</target>
        </trans-unit>
        <trans-unit id="dc08f19b2b5942ca70666472d7824576a229b191" translate="yes" xml:space="preserve">
          <source>Module std::pin</source>
          <target state="translated">모듈 std :: pin</target>
        </trans-unit>
        <trans-unit id="e00e5920fcfa2a371eecc3d8ce29ba6d6438eb84" translate="yes" xml:space="preserve">
          <source>Module std::prelude</source>
          <target state="translated">모듈 std :: prelude</target>
        </trans-unit>
        <trans-unit id="fefd1d724d34848239d3e045d418f35d9b208fc9" translate="yes" xml:space="preserve">
          <source>Module std::prelude::v1</source>
          <target state="translated">모듈 std :: prelude :: v1</target>
        </trans-unit>
        <trans-unit id="65c28b370cc205bebff871a57e62031b24ec4a43" translate="yes" xml:space="preserve">
          <source>Module std::process</source>
          <target state="translated">모듈 std :: process</target>
        </trans-unit>
        <trans-unit id="7b9e8bf21d42be55d01196ef987f8cbb37fc224a" translate="yes" xml:space="preserve">
          <source>Module std::ptr</source>
          <target state="translated">모듈 std :: ptr</target>
        </trans-unit>
        <trans-unit id="28199ad0111f666412d3aac539bb85773b597888" translate="yes" xml:space="preserve">
          <source>Module std::raw</source>
          <target state="translated">모듈 std :: raw</target>
        </trans-unit>
        <trans-unit id="282923935aad5d5fe4841c8b5e180098d5fe65e2" translate="yes" xml:space="preserve">
          <source>Module std::rc</source>
          <target state="translated">모듈 std :: rc</target>
        </trans-unit>
        <trans-unit id="f76d25c62f168207fc204e65332783a5d150cb8b" translate="yes" xml:space="preserve">
          <source>Module std::result</source>
          <target state="translated">모듈 std :: result</target>
        </trans-unit>
        <trans-unit id="27cb2f9fc9b89fd1a70b0710886b9cb09fd35544" translate="yes" xml:space="preserve">
          <source>Module std::slice</source>
          <target state="translated">모듈 std :: slice</target>
        </trans-unit>
        <trans-unit id="b77cc21e7e49e96d2397bb7380f5d3cdd704c79f" translate="yes" xml:space="preserve">
          <source>Module std::str</source>
          <target state="translated">모듈 std :: str</target>
        </trans-unit>
        <trans-unit id="dea701188b273fc04096957bb1bc877ece1217e7" translate="yes" xml:space="preserve">
          <source>Module std::str::pattern</source>
          <target state="translated">모듈 std :: str :: pattern</target>
        </trans-unit>
        <trans-unit id="6fd27e0113a1de10eb71fecbf4a0503b0ac43319" translate="yes" xml:space="preserve">
          <source>Module std::string</source>
          <target state="translated">모듈 std :: string</target>
        </trans-unit>
        <trans-unit id="8926d1f47e5d766b1c5cf6669ce0f9090e988bec" translate="yes" xml:space="preserve">
          <source>Module std::sync</source>
          <target state="translated">모듈 std :: sync</target>
        </trans-unit>
        <trans-unit id="3f8c3c8747e4c27d7fa67f501603c55dd9682772" translate="yes" xml:space="preserve">
          <source>Module std::sync::atomic</source>
          <target state="translated">모듈 std :: sync :: atomic</target>
        </trans-unit>
        <trans-unit id="b48714ec7da5332ac87a26f5a933baa549bfa338" translate="yes" xml:space="preserve">
          <source>Module std::sync::mpsc</source>
          <target state="translated">모듈 std :: sync :: mpsc</target>
        </trans-unit>
        <trans-unit id="aee4e612154c80072bb3fe90b082bacce5aed533" translate="yes" xml:space="preserve">
          <source>Module std::task</source>
          <target state="translated">모듈 std :: task</target>
        </trans-unit>
        <trans-unit id="1022333fdc4443428b44d90e0b03525e65cdc63c" translate="yes" xml:space="preserve">
          <source>Module std::thread</source>
          <target state="translated">모듈 std :: thread</target>
        </trans-unit>
        <trans-unit id="c8c97cfe535e0087eca60f19f8932d01609705e4" translate="yes" xml:space="preserve">
          <source>Module std::time</source>
          <target state="translated">모듈 std :: time</target>
        </trans-unit>
        <trans-unit id="76a71314fe23c5db0ec81783d2749c460fa38783" translate="yes" xml:space="preserve">
          <source>Module std::u128</source>
          <target state="translated">모듈 std :: u128</target>
        </trans-unit>
        <trans-unit id="12fe4b62dacfc7d423417c92fa4041cf277a9862" translate="yes" xml:space="preserve">
          <source>Module std::u16</source>
          <target state="translated">모듈 std :: u16</target>
        </trans-unit>
        <trans-unit id="8fda3c7e5af83a49ffac1d15404ab5301d7cf97c" translate="yes" xml:space="preserve">
          <source>Module std::u32</source>
          <target state="translated">모듈 std :: u32</target>
        </trans-unit>
        <trans-unit id="3cedb947fc5671194a69be4b83a79ddec58ad211" translate="yes" xml:space="preserve">
          <source>Module std::u64</source>
          <target state="translated">모듈 std :: u64</target>
        </trans-unit>
        <trans-unit id="165b8cb195ac2ec75de3ff752eb65046b594dce9" translate="yes" xml:space="preserve">
          <source>Module std::u8</source>
          <target state="translated">모듈 std :: u8</target>
        </trans-unit>
        <trans-unit id="b102b76b0626198e73aa2c3edeee79b1784bf4fb" translate="yes" xml:space="preserve">
          <source>Module std::usize</source>
          <target state="translated">모듈 std :: usize</target>
        </trans-unit>
        <trans-unit id="82cbe241ce94c801b0d2980247896f1d9b03b922" translate="yes" xml:space="preserve">
          <source>Module std::vec</source>
          <target state="translated">모듈 std :: vec</target>
        </trans-unit>
        <trans-unit id="29b66d670d54eac9d4e45a14658084f9001c209c" translate="yes" xml:space="preserve">
          <source>Module-level inline assembly.</source>
          <target state="translated">모듈 수준 인라인 어셈블리.</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="77b5cf98259ec5b0ff342bdba310975e1bab1b10" translate="yes" xml:space="preserve">
          <source>Modules and types share the same namespace. Declaring a named type with the same name as a module in scope is forbidden: that is, a type definition, trait, struct, enumeration, union, type parameter or crate can't shadow the name of a module in scope, or vice versa. Items brought into scope with &lt;code&gt;use&lt;/code&gt; also have this restriction.</source>
          <target state="translated">모듈과 유형은 동일한 네임 스페이스를 공유합니다. 범위 내의 모듈과 이름이 같은 명명 된 유형을 선언하는 것은 금지됩니다. 즉, 유형 정의, 특성, 구조체, 열거, 공용체, 유형 매개 변수 또는 상자는 범위 내의 모듈 이름을 가리거나 그 반대로 할 수 없습니다 . &lt;code&gt;use&lt;/code&gt; 범위 내로 가져온 품목에도이 제한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8d88c49dc7335756df022d9a0942322d892bf31" translate="yes" xml:space="preserve">
          <source>Modules aren&amp;rsquo;t useful only for organizing your code. They also define Rust&amp;rsquo;s &lt;em&gt;privacy boundary&lt;/em&gt;: the line that encapsulates the implementation details external code isn&amp;rsquo;t allowed to know about, call, or rely on. So, if you want to make an item like a function or struct private, you put it in a module.</source>
          <target state="translated">모듈은 코드 구성에만 유용하지 않습니다. 또한 Rust의 &lt;em&gt;프라이버시 경계를&lt;/em&gt; 정의 합니다. 구현 세부 정보를 캡슐화하는 라인은 외부 코드가 알거나 호출하거나 의존 할 수 없습니다. 따라서 함수 또는 구조체와 같은 항목을 비공개로 만들려면 모듈에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="bd557da0146a5e50bc37d63c90af625d07e7d2d9" translate="yes" xml:space="preserve">
          <source>Modules implicitly have some names in scope. These name are to built-in types, macros imported with &lt;a href=&quot;../macros-by-example#the-macro_use-attribute&quot;&gt;&lt;code&gt;#[macro_use]&lt;/code&gt;&lt;/a&gt; on an extern crate, and by the crate's &lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;prelude&lt;/a&gt;. These names are all made of a single identifier. These names are not part of the module, so for example, any name &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;self::name&lt;/code&gt; is not a valid path. The names added by the &lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;prelude&lt;/a&gt; can be removed by placing the &lt;code&gt;no_implicit_prelude&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;attribute&lt;/a&gt; onto the module or one of its ancestor modules.</source>
          <target state="translated">모듈은 암시 적으로 범위에 일부 이름이 있습니다. 이 이름은 내장 유형, 외부 상자에서 &lt;a href=&quot;../macros-by-example#the-macro_use-attribute&quot;&gt; &lt;code&gt;#[macro_use]&lt;/code&gt; 로&lt;/a&gt; 가져온 매크로 및 상자의 &lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;전주곡에&lt;/a&gt; 의해 지정됩니다 . 이러한 이름은 모두 단일 식별자로 구성됩니다. 이러한 이름은 모듈의 일부가 아니므로 예를 들어 name &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;self::name&lt;/code&gt; 은 유효한 경로가 아닙니다. &lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;prelude&lt;/a&gt; 에 의해 추가 된 이름 은 &lt;code&gt;no_implicit_prelude&lt;/code&gt; &lt;a href=&quot;../attributes&quot;&gt;속성&lt;/a&gt; 을 모듈 또는 상위 모듈 중 하나 에 배치하여 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0291ff6d7ab0361e35e29525a101c6e3961e4e76" translate="yes" xml:space="preserve">
          <source>Modules implicitly have some names in scope. These name are to built-in types, macros imported with &lt;a href=&quot;../macros-by-example#the-macro_use-attribute&quot;&gt;&lt;code&gt;#[macro_use]&lt;/code&gt;&lt;/a&gt; on an extern crate, and by the crate's &lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;prelude&lt;/a&gt;. These names are all made of a single identifier. These names are not part of the module, so for example, any name &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;self::name&lt;/code&gt; is not a valid path. The names added by the &lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;prelude&lt;/a&gt; can be removed by placing the &lt;code&gt;no_implicit_prelude&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;attribute&lt;/a&gt; onto the module.</source>
          <target state="translated">모듈은 내재적으로 일부 이름을 갖습니다. 이 이름은 내장 유형, extern 크레이트에서 &lt;a href=&quot;../macros-by-example#the-macro_use-attribute&quot;&gt; &lt;code&gt;#[macro_use]&lt;/code&gt; 로&lt;/a&gt; 가져온 매크로 및 크레이트의 &lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;prelude에&lt;/a&gt; 의해 가져옵니다 . 이 이름은 모두 단일 식별자로 만들어집니다. 이 이름은 모듈의 일부가 아니므로 예를 들어, name &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;self::name&lt;/code&gt; 은 유효한 경로가 아닙니다. &lt;code&gt;no_implicit_prelude&lt;/code&gt; &lt;a href=&quot;../attributes&quot;&gt;속성&lt;/a&gt; 을 모듈 에 배치하면 &lt;a href=&quot;../crates-and-source-files#preludes-and-no_std&quot;&gt;서문&lt;/a&gt; 에 의해 추가 된 이름을 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ff1fbd413fa236739023997953ac21a3b2cc4538" translate="yes" xml:space="preserve">
          <source>Modules, like all items, accept outer attributes. They also accept inner attributes: either after &lt;code&gt;{&lt;/code&gt; for a module with a body, or at the beginning of the source file, after the optional BOM and shebang.</source>
          <target state="translated">모듈은 모든 항목과 마찬가지로 외부 속성을 허용합니다. 또한 내부 속성 ( 본문이있는 모듈의 경우 &lt;code&gt;{&lt;/code&gt; 뒤에 또는 선택적 BOM 및 shebang 다음에 소스 파일의 시작 부분에 있음) 을 승인합니다 .</target>
        </trans-unit>
        <trans-unit id="a80c4acdab9385909e7dbad1128c0839eb07a18a" translate="yes" xml:space="preserve">
          <source>More About Cargo and Crates.io</source>
          <target state="translated">화물 및 상자에 대한 추가 정보</target>
        </trans-unit>
        <trans-unit id="8b506b766f38c963c4fb67cf54510e809b00d630" translate="yes" xml:space="preserve">
          <source>More Information About the Cons List</source>
          <target state="translated">단점 목록에 대한 추가 정보</target>
        </trans-unit>
        <trans-unit id="9dcdcdd7563f636d0f735cacd3835c7a85a1b37b" translate="yes" xml:space="preserve">
          <source>More Lints with Clippy</source>
          <target state="translated">Clippy를 사용한 린트</target>
        </trans-unit>
        <trans-unit id="0eb5e0f014499c13cd573691dd8d842c73505771" translate="yes" xml:space="preserve">
          <source>More about patterns and matching can be found in &lt;a href=&quot;ch18-00-patterns&quot;&gt;chapter 18&lt;/a&gt;.</source>
          <target state="translated">패턴과 매칭에 대한 자세한 내용은 &lt;a href=&quot;ch18-00-patterns&quot;&gt;18 장&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1f80fff5e4e5f11f26a8df18755f4ba4ad3a6ae5" translate="yes" xml:space="preserve">
          <source>More complex patterns using point-free style and closures:</source>
          <target state="translated">포인트없는 스타일과 클로저를 사용하는보다 복잡한 패턴 :</target>
        </trans-unit>
        <trans-unit id="3a143e7d940f49baace66eb851b7d8db887d67e7" translate="yes" xml:space="preserve">
          <source>More complex patterns with closures:</source>
          <target state="translated">클로저가있는 더 복잡한 패턴 :</target>
        </trans-unit>
        <trans-unit id="59901ea555299e532747ae0c72098ee315285615" translate="yes" xml:space="preserve">
          <source>More details about the overall approach can be found in the &lt;a href=&quot;index&quot;&gt;module documentation&lt;/a&gt;.</source>
          <target state="translated">전반적인 접근 방식에 대한 자세한 내용은 &lt;a href=&quot;index&quot;&gt;모듈 설명서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="03e29df8563f2c7d15d433645463bb8454472bc1" translate="yes" xml:space="preserve">
          <source>More details can be found in &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/438&quot;&gt;RFC 438&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/438&quot;&gt;RFC 438&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7c64d98076877e493846d8fb81f60069893823ea" translate="yes" xml:space="preserve">
          <source>More details can be found in the &lt;a href=&quot;reference/expressions#places-rvalues-and-temporaries&quot;&gt;Expressions&lt;/a&gt; section of the Reference.</source>
          <target state="translated">자세한 내용은 참조 의 &lt;a href=&quot;reference/expressions#places-rvalues-and-temporaries&quot;&gt;식&lt;/a&gt; 섹션 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5b016e48793899f84c9dc4f741c54bbe0469e235" translate="yes" xml:space="preserve">
          <source>More details on the functionality shown can be seen at the &lt;a href=&quot;iter/trait.intoiterator&quot;&gt;&lt;code&gt;IntoIterator&lt;/code&gt;&lt;/a&gt; docs.</source>
          <target state="translated">표시된 기능에 대한 자세한 내용은 &lt;a href=&quot;iter/trait.intoiterator&quot;&gt; &lt;code&gt;IntoIterator&lt;/code&gt; &lt;/a&gt; 문서 에서 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8c36e81c7e986e12ec31df752d60b5c100e110f7" translate="yes" xml:space="preserve">
          <source>More documentation of generators can be found in the unstable book.</source>
          <target state="translated">불안정한 책에서 더 많은 생성기 문서를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="160f6ee360990ab6dc539b3a8325ac927a353a75" translate="yes" xml:space="preserve">
          <source>More information on mutable references and pointers can be found in``` &lt;a href=&quot;../reference/types/pointer#mutable-references-mut&quot;&gt;Reference&lt;/a&gt;.</source>
          <target state="translated">변경 가능한 참조 및 포인터에 대한 자세한 내용은 '`` &lt;a href=&quot;../reference/types/pointer#mutable-references-mut&quot;&gt;Reference&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6711f14f448620f82d0dd1c9f52457ca6b91764e" translate="yes" xml:space="preserve">
          <source>More on &lt;code&gt;Deref&lt;/code&gt; coercion</source>
          <target state="translated">&lt;code&gt;Deref&lt;/code&gt; 강제 에 대한 추가 정보</target>
        </trans-unit>
        <trans-unit id="d621c989973e9c17e9cde0b21eb6d04678695b72" translate="yes" xml:space="preserve">
          <source>More specifically, this is the offset in bytes between successive elements in an array with that item type including alignment padding. Thus, for any type &lt;code&gt;T&lt;/code&gt; and length &lt;code&gt;n&lt;/code&gt;, &lt;code&gt;[T; n]&lt;/code&gt; has a size of &lt;code&gt;n * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt;.</source>
          <target state="translated">보다 구체적으로, 이것은 정렬 패딩을 포함하여 해당 항목 유형을 가진 배열의 연속 요소 사이의 바이트 단위 오프셋입니다. 따라서, 임의의 유형 &lt;code&gt;T&lt;/code&gt; 및 길이 &lt;code&gt;n&lt;/code&gt; 에 대해 , &lt;code&gt;[T; n]&lt;/code&gt; 의 크기는 &lt;code&gt;n * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5cd2a26924c123e5d1ea8bb92a1d25942aab575d" translate="yes" xml:space="preserve">
          <source>More specifically, this is the offset in bytes between successive items of the same type, including alignment padding.</source>
          <target state="translated">보다 구체적으로, 이것은 정렬 패딩을 포함하여 동일한 유형의 연속 항목 사이의 바이트 단위 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="f3b524cd9541fd42971bc0ab9235a90326b7abb3" translate="yes" xml:space="preserve">
          <source>More specifically, we&amp;rsquo;ll cover:</source>
          <target state="translated">보다 구체적으로 다음을 다룰 것입니다.</target>
        </trans-unit>
        <trans-unit id="6280ba9424a15f03fdde313064799f9fac845fb7" translate="yes" xml:space="preserve">
          <source>More than one &lt;code&gt;deprecated&lt;/code&gt; attribute has been put on an item.</source>
          <target state="translated">하나 이상의 &lt;code&gt;deprecated&lt;/code&gt; 속성이 항목에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="cefd0883c31d6980158a3fa042e84d2d520e19ee" translate="yes" xml:space="preserve">
          <source>More than one &lt;code&gt;main&lt;/code&gt; function was found.</source>
          <target state="translated">둘 이상의 &lt;code&gt;main&lt;/code&gt; 기능이 발견되었습니다.</target>
        </trans-unit>
        <trans-unit id="56e5e936562012f849b3e1edd7314a39a109286a" translate="yes" xml:space="preserve">
          <source>More than one explicit lifetime bound was used on a trait object.</source>
          <target state="translated">하나 이상의 명시 적 수명 경계가 특성 개체에 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="0ac23505321d1b26de051244f9ea7df5362d07c6" translate="yes" xml:space="preserve">
          <source>More than one function parameter have the same name.</source>
          <target state="translated">둘 이상의 함수 매개 변수의 이름이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="e8ba882606d0c8163ab0c901024f2759bfa657b5" translate="yes" xml:space="preserve">
          <source>More than one function was declared with the &lt;code&gt;#[main]&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;#[main]&lt;/code&gt; 속성으로 둘 이상의 함수가 선언되었습니다 .</target>
        </trans-unit>
        <trans-unit id="5f9532259b064ec79ee052f90461e412025c9d29" translate="yes" xml:space="preserve">
          <source>More than one function was declared with the &lt;code&gt;#[start]&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;#[start]&lt;/code&gt; 속성으로 둘 이상의 함수가 선언되었습니다 .</target>
        </trans-unit>
        <trans-unit id="e6d406d608676b21119a1a2cc93c12a6680b4fcb" translate="yes" xml:space="preserve">
          <source>More than one parameter was used for a generator.</source>
          <target state="translated">발전기에 둘 이상의 매개 변수가 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="3b9736800f16b69d3879ffacd66ef274c022daca" translate="yes" xml:space="preserve">
          <source>Moreover, if your type is &lt;code&gt;#[repr(packed)]&lt;/code&gt;, the compiler will automatically move fields around to be able to drop them. As a consequence, you cannot use pinning with a &lt;code&gt;#[repr(packed)]&lt;/code&gt; type.</source>
          <target state="translated">또한 유형이 &lt;code&gt;#[repr(packed)]&lt;/code&gt; 인 경우 컴파일러는 필드를 자동으로 이동하여 필드를 삭제할 수 있습니다. 결과적으로 &lt;code&gt;#[repr(packed)]&lt;/code&gt; 유형으로 고정을 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="eb05286fee4aa465691d2082174e06298b972289" translate="yes" xml:space="preserve">
          <source>Moreover, if your type is &lt;code&gt;#[repr(packed)]&lt;/code&gt;, the compiler will automatically move fields around to be able to drop them. It might even do that for fields that happen to be sufficiently aligned. As a consequence, you cannot use pinning with a &lt;code&gt;#[repr(packed)]&lt;/code&gt; type.</source>
          <target state="translated">또한 유형이 &lt;code&gt;#[repr(packed)]&lt;/code&gt; 인 경우 컴파일러는 필드를 삭제할 수 있도록 자동으로 필드를 이동합니다. 충분히 정렬 된 필드에 대해서도 그렇게 할 수 있습니다. 결과적으로 &lt;code&gt;#[repr(packed)]&lt;/code&gt; 유형으로 고정을 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="0c8e3e71e669c1b52e93628b2d983e5658861c25" translate="yes" xml:space="preserve">
          <source>Moreover, this leaves a copy of the same data behind in the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;. When using multiple copies of the data (by calling &lt;code&gt;assume_init_read&lt;/code&gt; multiple times, or first calling &lt;code&gt;assume_init_read&lt;/code&gt; and then &lt;a href=&quot;union.maybeuninit#method.assume_init&quot;&gt;&lt;code&gt;assume_init&lt;/code&gt;&lt;/a&gt;), it is your responsibility to ensure that that data may indeed be duplicated.</source>
          <target state="translated">또한, &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 에 동일한 데이터의 사본이 남습니다 . 데이터의 여러 복사본을 사용하는 경우 ( &lt;code&gt;assume_init_read&lt;/code&gt; 여러 번 호출하거나 먼저 &lt;code&gt;assume_init_read&lt;/code&gt; 를 호출 한 다음 &lt;a href=&quot;union.maybeuninit#method.assume_init&quot;&gt; &lt;code&gt;assume_init&lt;/code&gt; 를&lt;/a&gt; 호출 하여) 데이터가 실제로 복제 될 수 있는지 확인하는 것은 사용자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="b83d01c347c3f0838e253771c1cdcc4254556b6b" translate="yes" xml:space="preserve">
          <source>Moreover, this leaves a copy of the same data behind in the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;. When using multiple copies of the data (by calling &lt;code&gt;read&lt;/code&gt; multiple times, or first calling &lt;code&gt;read&lt;/code&gt; and then &lt;a href=&quot;#method.assume_init&quot;&gt;&lt;code&gt;assume_init&lt;/code&gt;&lt;/a&gt;), it is your responsibility to ensure that that data may indeed be duplicated.</source>
          <target state="translated">또한 &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; 에 동일한 데이터의 복사본이 남습니다 . 여러 번의 데이터 사본을 사용하는 경우 ( &lt;code&gt;read&lt;/code&gt; 여러 번 호출하거나 먼저 &lt;code&gt;read&lt;/code&gt; 를 호출 한 다음 &lt;a href=&quot;#method.assume_init&quot;&gt; &lt;code&gt;assume_init&lt;/code&gt; &lt;/a&gt; 호출 ) 데이터가 실제로 복제 될 수 있도록하는 것은 사용자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="397bb4af8d0aaad716e315cf0b7702aa85056a50" translate="yes" xml:space="preserve">
          <source>Moreover, uninitialized memory is special in that the compiler knows that it does not have a fixed value. This makes it undefined behavior to have uninitialized data in a variable even if that variable has an integer type, which otherwise can hold any &lt;em&gt;fixed&lt;/em&gt; bit pattern:</source>
          <target state="translated">또한 초기화되지 않은 메모리는 컴파일러가 고정 된 값이 없다는 것을 알고 있다는 점에서 특별합니다. 따라서 변수에 정수 유형이 있어도 &lt;em&gt;고정&lt;/em&gt; 비트 패턴을 보유 할 수있는 경우에도 변수에 초기화되지 않은 데이터가있는 정의되지 않은 동작이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="4bf2d71e181166bc0e04b2b08dbd9deb6dcc8cfa" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;statements&quot;&gt;statements&lt;/a&gt; accept outer attributes (see &lt;a href=&quot;expressions#expression-attributes&quot;&gt;Expression Attributes&lt;/a&gt; for limitations on expression statements).</source>
          <target state="translated">대부분의 &lt;a href=&quot;statements&quot;&gt;명령문&lt;/a&gt; 은 외부 속성을 허용합니다 ( &lt;a href=&quot;expressions#expression-attributes&quot;&gt;표현식에&lt;/a&gt; 대한 제한 사항 은 표현식 속성 참조 ).</target>
        </trans-unit>
        <trans-unit id="8c3542b0039ed219b27529952c16fc4b334b235c" translate="yes" xml:space="preserve">
          <source>Most Rust developers primarily use the stable channel, but those who want to try out experimental new features may use nightly or beta.</source>
          <target state="translated">대부분의 Rust 개발자는 주로 안정적인 채널을 사용하지만 실험적인 새로운 기능을 시험해보고 싶은 사람은 야간 또는 베타 버전을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29018cdfcbfbfce31a8ead4b336062e9b6cf7a98" translate="yes" xml:space="preserve">
          <source>Most Rust users do not use beta releases actively, but test against beta in their CI system to help Rust discover possible regressions. In the meantime, there&amp;rsquo;s still a nightly release every night:</source>
          <target state="translated">대부분의 Rust 사용자는 베타 릴리스를 적극적으로 사용하지 않지만 CI 시스템에서 베타에 대해 테스트하여 Rust가 가능한 회귀를 찾도록 도와줍니다. 그 동안 매일 밤마다 야간 릴리스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="70da42e65bc671e9a4d71da7bf00c46172961b5b" translate="yes" xml:space="preserve">
          <source>Most collections therefore use an &lt;em&gt;amortized&lt;/em&gt; allocation strategy. They generally let themselves have a fair amount of unoccupied space so that they only have to grow on occasion. When they do grow, they allocate a substantially larger array to move the elements into so that it will take a while for another grow to be required. While this strategy is great in general, it would be even better if the collection &lt;em&gt;never&lt;/em&gt; had to resize its backing array. Unfortunately, the collection itself doesn't have enough information to do this itself. Therefore, it is up to us programmers to give it hints.</source>
          <target state="translated">따라서 대부분의 컬렉션은 &lt;em&gt;상각 된&lt;/em&gt; 할당 전략을 사용합니다 . 그들은 일반적으로 충분한 양의 빈 공간을 확보하여 가끔씩 만 자라도록합니다. 그들이 자랄 때, 그들은 다른 자라기가 필요할 때까지 시간이 걸리도록 요소들을 이동시키기 위해 실질적으로 더 큰 배열을 할당합니다. 이 전략은 일반적으로 큰 반면 컬렉션이 있다면, 그것은 더 나은 것 &lt;em&gt;결코&lt;/em&gt; 그것의 보조 배열 크기를 조정할 수 없었다. 불행히도 컬렉션 자체에는이를 수행하기에 충분한 정보가 없습니다. 따라서 힌트를주는 것은 프로그래머에게 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f084859346ec0aca36a3e1b8612899686a0bd1a" translate="yes" xml:space="preserve">
          <source>Most documentation comments don&amp;rsquo;t need all of these sections, but this is a good checklist to remind you of the aspects of your code that people calling your code will be interested in knowing about.</source>
          <target state="translated">대부분의 문서 주석에는 이러한 섹션이 모두 필요하지는 않지만 코드를 호출하는 사람들이 알고 싶어하는 코드의 측면을 상기시키기위한 좋은 점검 목록입니다.</target>
        </trans-unit>
        <trans-unit id="5ffa244fb547e8974a04a1c03e5c30be30143ed1" translate="yes" xml:space="preserve">
          <source>Most errors aren&amp;rsquo;t serious enough to require the program to stop entirely. Sometimes, when a function fails, it&amp;rsquo;s for a reason that you can easily interpret and respond to. For example, if you try to open a file and that operation fails because the file doesn&amp;rsquo;t exist, you might want to create the file instead of terminating the process.</source>
          <target state="translated">대부분의 오류는 프로그램을 완전히 중지해야 할 정도로 심각하지 않습니다. 때로는 함수가 실패하면 쉽게 해석하고 응답 할 수있는 이유가 있습니다. 예를 들어, 파일을 열려고하는데 파일이 없기 때문에 해당 작업이 실패하면 프로세스를 종료하는 대신 파일을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ba773a5c0df60e16aeba581f5a54767ff1a24cc" translate="yes" xml:space="preserve">
          <source>Most fundamentally, &lt;code&gt;Vec&lt;/code&gt; is and always will be a (pointer, capacity, length) triplet. No more, no less. The order of these fields is completely unspecified, and you should use the appropriate methods to modify these. The pointer will never be null, so this type is null-pointer-optimized.</source>
          <target state="translated">가장 근본적으로 &lt;code&gt;Vec&lt;/code&gt; 은 항상 (포인터, 용량, 길이) 삼중 항입니다. 그 이상도 이하도 아닌. 이러한 필드의 순서는 완전히 지정되어 있지 않으므로 적절한 방법을 사용하여 수정해야합니다. 포인터는 null이되지 않으므로이 형식은 null 포인터에 최적화됩니다.</target>
        </trans-unit>
        <trans-unit id="958f57b670c19f5ad7bbf0104c478d29e5d8679d" translate="yes" xml:space="preserve">
          <source>Most languages don&amp;rsquo;t distinguish between these two kinds of errors and handle both in the same way, using mechanisms such as exceptions. Rust doesn&amp;rsquo;t have exceptions. Instead, it has the type &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; for recoverable errors and the &lt;code&gt;panic!&lt;/code&gt; macro that stops execution when the program encounters an unrecoverable error. This chapter covers calling &lt;code&gt;panic!&lt;/code&gt; first and then talks about returning &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; values. Additionally, we&amp;rsquo;ll explore considerations when deciding whether to try to recover from an error or to stop execution.</source>
          <target state="translated">대부분의 언어는 이러한 두 종류의 오류를 구별하지 않고 예외와 같은 메커니즘을 사용하여 동일한 방식으로 처리합니다. 녹에는 예외가 없습니다. 대신 복구 가능한 오류 및 &lt;code&gt;panic!&lt;/code&gt; 대해 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 유형이 있습니다 ! 프로그램에 복구 할 수없는 오류가 발생하면 실행을 중지하는 매크로 이 장에서는 &lt;code&gt;panic!&lt;/code&gt; 부름에 대해 다룹니다 ! 먼저 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 값 반환에 대해 설명 합니다. 또한 오류 복구 시도 또는 실행 중지 여부를 결정할 때 고려해야 할 사항도 살펴 봅니다.</target>
        </trans-unit>
        <trans-unit id="50f1f38b341fad6f4d56c11542754d03d8b6f10e" translate="yes" xml:space="preserve">
          <source>Most of the low-level synchronization primitives are quite error-prone and inconvenient to use, which is why the standard library also exposes some higher-level synchronization objects.</source>
          <target state="translated">대부분의 저수준 동기화 프리미티브는 오류가 발생하기 쉽고 사용하기 불편하므로 표준 라이브러리도 일부 고수준 동기화 객체를 노출합니다.</target>
        </trans-unit>
        <trans-unit id="45842a65c91f33ef72023fea07bcb074a0717e37" translate="yes" xml:space="preserve">
          <source>Most of the other (forward) methods have default implementations in terms of this one, so try to implement this explicitly if it can do something better than the default &lt;code&gt;for&lt;/code&gt; loop implementation.</source>
          <target state="translated">다른 (앞으로) 메소드의 대부분은이 방법으로 기본 구현을 가지고 있으므로 기본 &lt;code&gt;for&lt;/code&gt; 루프 구현 보다 더 나은 것을 할 수 있다면 명시 적으로 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="03c5a14179a1f6e72d19d5cfec89966bcfe49ba7" translate="yes" xml:space="preserve">
          <source>Most of the time when specifying one of the &lt;code&gt;Fn&lt;/code&gt; trait bounds, you can start with &lt;code&gt;Fn&lt;/code&gt; and the compiler will tell you if you need &lt;code&gt;FnMut&lt;/code&gt; or &lt;code&gt;FnOnce&lt;/code&gt; based on what happens in the closure body.</source>
          <target state="translated">중 하나 지정할 때 대부분의 시간 &lt;code&gt;Fn&lt;/code&gt; 특성 경계, 당신은 시작할 수있다 &lt;code&gt;Fn&lt;/code&gt; 당신이 필요로하는 경우 컴파일러는 당신을 말할 것이다 &lt;code&gt;FnMut&lt;/code&gt; 또는 &lt;code&gt;FnOnce&lt;/code&gt; 을 폐쇄 본문에 무슨 일을 기준으로.</target>
        </trans-unit>
        <trans-unit id="da4e141fca4e0afe1cd6ac0675436058c611eefb" translate="yes" xml:space="preserve">
          <source>Most platforms fundamentally can't even construct such an allocation. For instance, no known 64-bit platform can ever serve a request for 2&lt;sup&gt;63&lt;/sup&gt; bytes due to page-table limitations or splitting the address space. However, some 32-bit and 16-bit platforms may successfully serve a request for more than &lt;code&gt;isize::MAX&lt;/code&gt; bytes with things like Physical Address Extension. As such, memory acquired directly from allocators or memory mapped files &lt;em&gt;may&lt;/em&gt; be too large to handle with this function.</source>
          <target state="translated">대부분의 플랫폼은 기본적으로 이러한 할당을 구성 할 수도 없습니다. 예를 들어, 알려진 64 비트 플랫폼은 페이지 테이블 제한이나 주소 공간 분할로 인해 2 &lt;sup&gt;63&lt;/sup&gt; 바이트에 대한 요청을 처리 할 수 ​​없습니다 . 그러나 일부 32 비트 및 16 비트 플랫폼은 실제 주소 확장과 같은 &lt;code&gt;isize::MAX&lt;/code&gt; 바이트 이상에 대한 요청을 성공적으로 제공 할 수 있습니다 . 따라서 할당 자 또는 메모리 매핑 파일에서 직접 가져온 메모리 가이 기능으로 처리하기에는 너무 클 &lt;em&gt;수&lt;/em&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f7b392b93b303d14e5eba66f48c56491e04e2b1" translate="yes" xml:space="preserve">
          <source>Most primitives are generally aligned to their size, although this is platform-specific behavior. In particular, on x86 u64 and f64 are only aligned to 32 bits.</source>
          <target state="translated">플랫폼 별 동작이지만 대부분의 프리미티브는 일반적으로 크기에 맞게 정렬됩니다. 특히 x86에서 u64와 f64는 32 비트로 만 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="5ff0d1ff3d2d4c051c8f323ba109968c86507f39" translate="yes" xml:space="preserve">
          <source>Most string operations in Rust act on UTF-8 strings. However, at times it makes more sense to only consider the ASCII character set for a specific operation.</source>
          <target state="translated">Rust에서 대부분의 문자열 연산은 UTF-8 문자열에서 작동합니다. 그러나 때때로 특정 조작에 대한 ASCII 문자 세트 만 고려하는 것이 더 합리적입니다.</target>
        </trans-unit>
        <trans-unit id="9677cb4403181dff567b3b3138809fbca5b2b3a3" translate="yes" xml:space="preserve">
          <source>Most types have a fixed size that is known at compile time and implement the trait &lt;a href=&quot;special-types-and-traits#sized&quot;&gt;&lt;code&gt;Sized&lt;/code&gt;&lt;/a&gt;. A type with a size that is known only at run-time is called a &lt;em&gt;dynamically sized type&lt;/em&gt; (&lt;em&gt;DST&lt;/em&gt;) or, informally, an unsized type. &lt;a href=&quot;types/slice&quot;&gt;Slices&lt;/a&gt; and &lt;a href=&quot;types/trait-object&quot;&gt;trait objects&lt;/a&gt; are two examples of</source>
          <target state="translated">대부분의 유형은 컴파일 타임에 알려진 고정 크기를 가지며 &lt;a href=&quot;special-types-and-traits#sized&quot;&gt; &lt;code&gt;Sized&lt;/code&gt; &lt;/a&gt; 특성을 구현합니다 . 런타임에만 알려진 &lt;em&gt;크기의 유형을 동적 크기 유형&lt;/em&gt; ( &lt;em&gt;DST&lt;/em&gt; ) 또는 비공식적 &lt;em&gt;으로 크기&lt;/em&gt; 가 지정되지 않은 유형이라고합니다. &lt;a href=&quot;types/slice&quot;&gt;슬라이스&lt;/a&gt; 와 &lt;a href=&quot;types/trait-object&quot;&gt;특성 오브젝트&lt;/a&gt; 는</target>
        </trans-unit>
        <trans-unit id="ef68ca25c12250d53c99628a48a2f0197abb8a8a" translate="yes" xml:space="preserve">
          <source>Most types implement &lt;code&gt;Any&lt;/code&gt;. However, any type which contains a non-&lt;code&gt;'static&lt;/code&gt; reference does not. See the &lt;a href=&quot;index&quot;&gt;module-level documentation&lt;/a&gt; for more details.</source>
          <target state="translated">대부분의 유형은 &lt;code&gt;Any&lt;/code&gt; 를 구현 합니다. 그러나 &lt;code&gt;'static&lt;/code&gt; 이 아닌 참조 를 포함하는 모든 유형 은 그렇지 않습니다. 자세한 내용은 &lt;a href=&quot;index&quot;&gt;모듈 수준 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0c6631c82a54c3f6386b2c06a91b566d27239d41" translate="yes" xml:space="preserve">
          <source>Most types in the standard library are marked &lt;code&gt;Clone&lt;/code&gt;. The example below demonstrates using &lt;code&gt;clone()&lt;/code&gt; on a string. &lt;code&gt;s1&lt;/code&gt; is first set to &quot;many&quot;, and then copied to &lt;code&gt;s2&lt;/code&gt;. Then the first character of &lt;code&gt;s1&lt;/code&gt; is removed, without affecting &lt;code&gt;s2&lt;/code&gt;. &quot;any many&quot; is printed to the console.</source>
          <target state="translated">표준 라이브러리에서 대부분의 유형은 &lt;code&gt;Clone&lt;/code&gt; 으로 표시 됩니다. 아래 예제 는 문자열에서 &lt;code&gt;clone()&lt;/code&gt; 을 사용하는 방법을 보여줍니다 . &lt;code&gt;s1&lt;/code&gt; 은 먼저 &quot;many&quot;로 설정된 다음 &lt;code&gt;s2&lt;/code&gt; 로 복사됩니다 . 그런 다음 &lt;code&gt;s1&lt;/code&gt; 의 첫 문자는 &lt;code&gt;s2&lt;/code&gt; 에 영향을주지 않고 제거됩니다 . &quot;다수&quot;가 콘솔에 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="1cd742a9ceccf5d20629665bf40182605100b10d" translate="yes" xml:space="preserve">
          <source>Move a value from a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt; back to the stack by &lt;a href=&quot;../ops/trait.deref&quot;&gt;dereferencing&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../ops/trait.deref&quot;&gt;역 참조&lt;/a&gt; 하여 &lt;a href=&quot;struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; 에서 스택으로 값을 다시 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="935c4f1405b15e5b82bfb04029f450ae632b8671" translate="yes" xml:space="preserve">
          <source>Move a value from the stack to the heap by creating a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; 를 작성하여 스택에서 힙으로 값을 이동하십시오 .</target>
        </trans-unit>
        <trans-unit id="f29cd020e7c547e08e26acc9ffed915241bec615" translate="yes" xml:space="preserve">
          <source>Moved and copied types</source>
          <target state="translated">이동 및 복사 된 유형</target>
        </trans-unit>
        <trans-unit id="53a1d8932db0e6bed87e33c7d5de8c0af8087c52" translate="yes" xml:space="preserve">
          <source>Moves &lt;code&gt;src&lt;/code&gt; into the pointed &lt;code&gt;dst&lt;/code&gt;, returning the previous &lt;code&gt;dst&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 를 지정된 &lt;code&gt;dst&lt;/code&gt; 로 이동 하여 이전 &lt;code&gt;dst&lt;/code&gt; 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e3dcdde14c3aa147dfabeae55330264c813b1e5a" translate="yes" xml:space="preserve">
          <source>Moves &lt;code&gt;src&lt;/code&gt; into the referenced &lt;code&gt;dest&lt;/code&gt;, returning the previous &lt;code&gt;dest&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 를 참조 된 &lt;code&gt;dest&lt;/code&gt; 로 이동 하여 이전 &lt;code&gt;dest&lt;/code&gt; 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4050f7b0941c8fb8f727572a7c43d5df8fbbe3d3" translate="yes" xml:space="preserve">
          <source>Moves a value out of scope without running drop glue.</source>
          <target state="translated">드롭 접착제를 실행하지 않고 값을 범위 밖으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="3449cde17e65d98095b98828c5cc0579f71b4cf8" translate="yes" xml:space="preserve">
          <source>Moves a value to an uninitialized memory location.</source>
          <target state="translated">초기화되지 않은 메모리 위치로 값을 이동합니다.</target>
        </trans-unit>
        <trans-unit id="8d36e10d798f7d8f015f1a268ea8a4f001de9e7a" translate="yes" xml:space="preserve">
          <source>Moves all but the first of consecutive elements to the end of the slice satisfying a given equality relation.</source>
          <target state="translated">연속 요소의 첫 번째 요소를 제외한 모든 요소를 ​​주어진 동등 관계를 만족하는 슬라이스의 끝으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="90dc92e249e4045f2df19fe5863b01f0d381a1dd" translate="yes" xml:space="preserve">
          <source>Moves all but the first of consecutive elements to the end of the slice that resolve to the same key.</source>
          <target state="translated">첫 번째 연속 요소를 제외한 모든 요소를 ​​동일한 키로 해석되는 슬라이스의 끝으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="7b51346776885a3c951f1374a27a37ab6fa4ba64" translate="yes" xml:space="preserve">
          <source>Moves all consecutive repeated elements to the end of the slice according to the &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt; trait implementation.</source>
          <target state="translated">&lt;a href=&quot;../cmp/trait.partialeq&quot;&gt; &lt;code&gt;PartialEq&lt;/code&gt; &lt;/a&gt; 특성 구현 에 따라 모든 연속 된 반복 요소를 슬라이스의 끝으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="dd2eef506f42784c3edada1784459627524feac1" translate="yes" xml:space="preserve">
          <source>Moves all consecutive repeated elements to the end of the slice according to the &lt;a href=&quot;cmp/trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt; trait implementation.</source>
          <target state="translated">&lt;a href=&quot;cmp/trait.partialeq&quot;&gt; &lt;code&gt;PartialEq&lt;/code&gt; &lt;/a&gt; 특성 구현 에 따라 모든 연속 된 반복 요소를 슬라이스의 끝으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="5fe424ea4e0a685b7c23ffeca2e9899213584477" translate="yes" xml:space="preserve">
          <source>Moves all elements from &lt;code&gt;other&lt;/code&gt; into &lt;code&gt;Self&lt;/code&gt;, leaving &lt;code&gt;other&lt;/code&gt; empty.</source>
          <target state="translated">모든 요소 이동 &lt;code&gt;other&lt;/code&gt; 에 &lt;code&gt;Self&lt;/code&gt; 떠나 &lt;code&gt;other&lt;/code&gt; 빈을.</target>
        </trans-unit>
        <trans-unit id="8e1c0e5843f20567dd9c23dda304f99a13d895f0" translate="yes" xml:space="preserve">
          <source>Moves all elements from &lt;code&gt;other&lt;/code&gt; to the begin of the list.</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; 모든 요소를 목록의 시작 부분으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="c67d917da3329c924a5ed3bfdafb74f3c2d27351" translate="yes" xml:space="preserve">
          <source>Moves all elements from &lt;code&gt;other&lt;/code&gt; to the end of the list.</source>
          <target state="translated">모든 요소를 &lt;code&gt;other&lt;/code&gt; 요소에서 목록의 끝으로 이동 합니다.</target>
        </trans-unit>
        <trans-unit id="e19c427e120934a6f18591f019a5d8d7c8c9bb90" translate="yes" xml:space="preserve">
          <source>Moves all the elements of &lt;code&gt;other&lt;/code&gt; into &lt;code&gt;Self&lt;/code&gt;, leaving &lt;code&gt;other&lt;/code&gt; empty.</source>
          <target state="translated">의 모든 요소 이동 &lt;code&gt;other&lt;/code&gt; 에 &lt;code&gt;Self&lt;/code&gt; 떠나 &lt;code&gt;other&lt;/code&gt; 빈을.</target>
        </trans-unit>
        <trans-unit id="394ed70dc750ade766d8a7affdf104389ae4a41b" translate="yes" xml:space="preserve">
          <source>Moves all the elements of &lt;code&gt;other&lt;/code&gt; into &lt;code&gt;self&lt;/code&gt;, leaving &lt;code&gt;other&lt;/code&gt; empty.</source>
          <target state="translated">모든 이동의 요소 &lt;code&gt;other&lt;/code&gt; 로 &lt;code&gt;self&lt;/code&gt; 떠나, &lt;code&gt;other&lt;/code&gt; 빈을.</target>
        </trans-unit>
        <trans-unit id="4081ad7604822fc3863325bfbc9c6b23eefd10c5" translate="yes" xml:space="preserve">
          <source>Moves the socket into or out of nonblocking mode.</source>
          <target state="translated">소켓을 비 블로킹 모드로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="3f132740261eaea1c058f822397565c2ea169662" translate="yes" xml:space="preserve">
          <source>Moves the value &lt;code&gt;v&lt;/code&gt; out of the &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; if it is &lt;a href=&quot;#variant.Some&quot;&gt;&lt;code&gt;Some(v)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값 이 &lt;a href=&quot;#variant.Some&quot;&gt; &lt;code&gt;Some(v)&lt;/code&gt; &lt;/a&gt; 경우 &lt;code&gt;v&lt;/code&gt; 값을 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 밖으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="d923a42481a31c898588f7632c4104ccc079b9a8" translate="yes" xml:space="preserve">
          <source>Moves this TCP stream into or out of nonblocking mode.</source>
          <target state="translated">이 TCP 스트림을 비 블로킹 모드로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="857058a663cc2ef223e5bcf3b913916ca7203127" translate="yes" xml:space="preserve">
          <source>Moves this UDP socket into or out of nonblocking mode.</source>
          <target state="translated">이 UDP 소켓을 비 블로킹 모드로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="35fbed2269b14f8388d3641b845768d91a9c88f6" translate="yes" xml:space="preserve">
          <source>Moving a member out of a mutably borrowed struct will also cause E0507 error:</source>
          <target state="translated">변경 가능하게 빌린 구조체에서 멤버를 이동하면 E0507 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4f45a6d62a116cf766d4acf9ec5d831a79f46388" translate="yes" xml:space="preserve">
          <source>Moving out of a place expression that evaluates to a local variable, the location is deinitialized and cannot be read from again until it is reinitialized. In all other cases, trying to use a place expression in a value expression context is an error.</source>
          <target state="translated">지역 변수로 평가되는 작업 공간 표현식에서 이동하면 위치가 초기화되지 않으며 위치가 다시 초기화 될 때까지 다시 읽을 수 없습니다. 다른 모든 경우에는 값 표현식 컨텍스트에서 장소 표현식을 사용하려고하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="84acd8bc955a67b3e57fc5d4e1f21da9ff4cd61d" translate="yes" xml:space="preserve">
          <source>Mul</source>
          <target state="translated">Mul</target>
        </trans-unit>
        <trans-unit id="a44823a91768e5e95df3efe5561280bcca377a9b" translate="yes" xml:space="preserve">
          <source>Mul::mul</source>
          <target state="translated">Mul::mul</target>
        </trans-unit>
        <trans-unit id="66a17e016059d249b4c2e6eaead00d3ff5892a8d" translate="yes" xml:space="preserve">
          <source>MulAssign</source>
          <target state="translated">MulAssign</target>
        </trans-unit>
        <trans-unit id="644d3414fe5aac6848364363e1259070e386b29c" translate="yes" xml:space="preserve">
          <source>MulAssign::mul_assign</source>
          <target state="translated">MulAssign::mul_assign</target>
        </trans-unit>
        <trans-unit id="a83f62b59a24bf7ff1d2e1176308d59c260a2d7c" translate="yes" xml:space="preserve">
          <source>Multi-producer, single-consumer FIFO queue communication primitives.</source>
          <target state="translated">다중 생산자, 단일 소비자 FIFO 대기열 통신 프리미티브.</target>
        </trans-unit>
        <trans-unit id="e8f275576880c08d9cb72256ebb5c5550da0ae5f" translate="yes" xml:space="preserve">
          <source>Multicast addresses have a most significant octet between 224 and 239, and is defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc5771&quot;&gt;IETF RFC 5771&lt;/a&gt;.</source>
          <target state="translated">멀티 캐스트 주소는 224와 239 사이에서 가장 중요한 옥텟을 가지며 &lt;a href=&quot;https://tools.ietf.org/html/rfc5771&quot;&gt;IETF RFC 5771에&lt;/a&gt; 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="131527b580414c642a15e34f9b2b06ac063866dc" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code id=&quot;multiple-impl-blocks&quot;&gt;impl&lt;/code&gt; Blocks</source>
          <target state="translated">여러 &lt;code id=&quot;multiple-impl-blocks&quot;&gt;impl&lt;/code&gt; 블록</target>
        </trans-unit>
        <trans-unit id="3ba016b087265e8c0df188a419d0407dbc2db032" translate="yes" xml:space="preserve">
          <source>Multiple Ownership with Multiple Threads</source>
          <target state="translated">여러 스레드가있는 여러 소유권</target>
        </trans-unit>
        <trans-unit id="96799ac6d39880a60f56792870e3f698a44d9f25" translate="yes" xml:space="preserve">
          <source>Multiple Patterns</source>
          <target state="translated">여러 패턴</target>
        </trans-unit>
        <trans-unit id="880b82e87c7718d117edf6049c501691c39d7707" translate="yes" xml:space="preserve">
          <source>Multiple candidate files were found for an out-of-line module.</source>
          <target state="translated">라인 외부 모듈에 대해 여러 후보 파일이 발견되었습니다.</target>
        </trans-unit>
        <trans-unit id="bd944a217bb8ced4adfb9b29cccccdde6f94d8b2" translate="yes" xml:space="preserve">
          <source>Multiple closures can be registered and they will be called in order of their registration. If a closure returns &lt;code&gt;Err&lt;/code&gt; then no further closures will be called and the spawn operation will immediately return with a failure.</source>
          <target state="translated">여러 폐쇄를 등록 할 수 있으며 등록 순서대로 호출됩니다. 클로저가 &lt;code&gt;Err&lt;/code&gt; 을 반환 하면 더 이상 클로저가 호출되지 않으며 스폰 작업은 즉시 실패와 함께 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f8bfe4a1f8665d86c42967d287e06dcfdbd2a416" translate="yes" xml:space="preserve">
          <source>Multiple in-scope traits define methods with the same name for the same types</source>
          <target state="translated">여러 범위 내 특성은 동일한 유형에 대해 동일한 이름을 가진 메소드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="7f57fc35ae9f13c2759a07f510481de830ebcb1f" translate="yes" xml:space="preserve">
          <source>Multiple match patterns may be joined with the &lt;code&gt;|&lt;/code&gt; operator. Each pattern will be tested in left-to-right sequence until a successful match is found.</source>
          <target state="translated">여러 개의 일치 패턴이 &lt;code&gt;|&lt;/code&gt; 운영자. 각 패턴은 성공적으로 일치 할 때까지 왼쪽에서 오른쪽 순서로 테스트됩니다.</target>
        </trans-unit>
        <trans-unit id="32acf98c4434cd3afcb06d0594c524c0d173439d" translate="yes" xml:space="preserve">
          <source>Multiple patterns may be specified with the &lt;code&gt;|&lt;/code&gt; operator. This has the same semantics as with &lt;code&gt;|&lt;/code&gt; in &lt;code&gt;match&lt;/code&gt; expressions:</source>
          <target state="translated">여러 패턴을 &lt;code&gt;|&lt;/code&gt; 운영자. 이것은 &lt;code&gt;|&lt;/code&gt; 와 동일한 의미를 갖습니다. 에서 &lt;code&gt;match&lt;/code&gt; 식 :</target>
        </trans-unit>
        <trans-unit id="3cbe1704448a8be6f6cb7b5df8bbc8ae2c951a0e" translate="yes" xml:space="preserve">
          <source>Multiple types were used as bounds for a closure or trait object.</source>
          <target state="translated">클로저 또는 트레이 트 객체의 경계로 여러 유형이 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="61688d36e37f9b0059485c05c26bf5dbf9d908fa" translate="yes" xml:space="preserve">
          <source>Multiple variables can be defined with the same name, known as shadowing. This doesn't affect the original variable in any way beyond being unable to directly access it beyond the point of shadowing. It continues to remain in scope, getting dropped only when it falls out of scope. Shadowed variables don't need to have the same type as the variables shadowing them.</source>
          <target state="translated">섀도 잉으로 알려진 동일한 이름으로 여러 변수를 정의 할 수 있습니다. 이것은 그림자를 넘어서서 직접 접근 할 수없는 것 이상으로 원래 변수에 영향을 미치지 않습니다. 범위를 벗어나지 않을 경우에만 계속 범위 내에서 유지됩니다. 그림자 변수는 그림자 변수와 같은 유형일 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="0a28713b802733c23cc35ef454d3f1c1fc36efdc" translate="yes" xml:space="preserve">
          <source>Multiple variables can interact with the same data in different ways in Rust. Let&amp;rsquo;s look at an example using an integer in Listing 4-2.</source>
          <target state="translated">Rust에서 여러 변수가 동일한 데이터와 다른 방식으로 상호 작용할 수 있습니다. Listing 4-2에서 정수를 사용하는 예제를 보자.</target>
        </trans-unit>
        <trans-unit id="2b9ee6e2b5fcdbd970e8f069acf17877e49e0441" translate="yes" xml:space="preserve">
          <source>Multiplication</source>
          <target state="translated">Multiplication</target>
        </trans-unit>
        <trans-unit id="bc5f7a8e3f6c574a340d00ceb468d9ad4997d1a2" translate="yes" xml:space="preserve">
          <source>Multiplication assignment</source>
          <target state="translated">곱셈 대입</target>
        </trans-unit>
        <trans-unit id="20018a803d4e69df922c16d0019e2f27ede1b107" translate="yes" xml:space="preserve">
          <source>Multiplies &lt;code&gt;Duration&lt;/code&gt; by &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Duration&lt;/code&gt; 에 &lt;code&gt;f32&lt;/code&gt; 를 곱합니다 .</target>
        </trans-unit>
        <trans-unit id="05f59b6c6a4f48034c9df701431f127015086e9c" translate="yes" xml:space="preserve">
          <source>Multiplies &lt;code&gt;Duration&lt;/code&gt; by &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Duration&lt;/code&gt; 에 &lt;code&gt;f64&lt;/code&gt; 를 곱합니다 .</target>
        </trans-unit>
        <trans-unit id="5e4385922c1cb179c0fef470b33c3151d7e99ec3" translate="yes" xml:space="preserve">
          <source>Multiplying vectors by scalars as in linear algebra</source>
          <target state="translated">선형 대수에서와 같이 벡터에 스칼라를 곱</target>
        </trans-unit>
        <trans-unit id="0b624351b5cd3201f9dffff20f656615d250adb4" translate="yes" xml:space="preserve">
          <source>Must always be called with exactly two arguments, e.g., &lt;code&gt;f(2, &quot;test&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f(2, &quot;test&quot;)&lt;/code&gt; 와 같이 항상 정확히 두 개의 인수를 사용하여 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="0b79f8e4890c8608e67c29a1e344d765772f2753" translate="yes" xml:space="preserve">
          <source>Mutability</source>
          <target state="translated">Mutability</target>
        </trans-unit>
        <trans-unit id="25bc44284f7469aa18ce8d2018ebb79f8bda5466" translate="yes" xml:space="preserve">
          <source>Mutability:</source>
          <target state="translated">Mutability:</target>
        </trans-unit>
        <trans-unit id="2254ac7d15b79a3982ee657fd941675d1118b345" translate="yes" xml:space="preserve">
          <source>Mutable &lt;a href=&quot;variables&quot;&gt;variables&lt;/a&gt;, which are not currently borrowed.</source>
          <target state="translated">현재 빌려지지 않은 가변 &lt;a href=&quot;variables&quot;&gt;변수&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51d947bca6dc6daa21fd55054748064504d465b5" translate="yes" xml:space="preserve">
          <source>Mutable &lt;code&gt;static&lt;/code&gt;s</source>
          <target state="translated">변경 가능한 &lt;code&gt;static&lt;/code&gt; 의</target>
        </trans-unit>
        <trans-unit id="73a6ca773e0129ab88c342db95a16c2e597fe027" translate="yes" xml:space="preserve">
          <source>Mutable &lt;code&gt;static&lt;/code&gt;s, just like simple &lt;code&gt;static&lt;/code&gt;s, have some restrictions that apply to them. See the &lt;a href=&quot;../reference/items/static-items&quot;&gt;Reference&lt;/a&gt; for more information.</source>
          <target state="translated">단순한 &lt;code&gt;static&lt;/code&gt; 과 마찬가지로 변경 가능한 &lt;code&gt;static&lt;/code&gt; 에도 적용되는 몇 가지 제한 사항이 있습니다. 자세한 내용은 &lt;a href=&quot;../reference/items/static-items&quot;&gt;참조&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a85864e0508044cfca06bb749d86a2d95063aada" translate="yes" xml:space="preserve">
          <source>Mutable References</source>
          <target state="translated">가변 참조</target>
        </trans-unit>
        <trans-unit id="4ae4e12cbc02746a1ff720435f4bc1ce18747dba" translate="yes" xml:space="preserve">
          <source>Mutable borrows are not allowed in pattern guards, because matching cannot have side effects. Side effects could alter the matched object or the environment on which the match depends in such a way, that the match would not be exhaustive. For instance, the following would not match any arm if mutable borrows were allowed:</source>
          <target state="translated">매칭은 부작용이 없기 때문에 패턴 가드에서는 가변 차입이 허용되지 않습니다. 부작용으로 인해 일치하는 개체 또는 일치하는 환경이 변경되어 일치하는 항목이 완전하지 않을 수 있습니다. 예를 들어, 변경 가능한 차용이 허용 된 경우 다음은 팔과 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bce9ec15c27b88a115b07a4fb0bd820131127a3c" translate="yes" xml:space="preserve">
          <source>Mutable raw pointers work much like mutable references, with the added possibility of not pointing to a valid object. The syntax is &lt;code&gt;*mut Type&lt;/code&gt;.</source>
          <target state="translated">변경 가능한 원시 포인터는 유효한 객체를 가리 키지 않을 가능성이 추가되어 변경 가능한 참조와 매우 유사합니다. 구문은 &lt;code&gt;*mut Type&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="14a50cb6021aef34ebbadd3bdc8e0a2c8aa37b86" translate="yes" xml:space="preserve">
          <source>Mutable references (&lt;code id=&quot;mutable-references-mut&quot;&gt;&amp;amp;mut&lt;/code&gt;)</source>
          <target state="translated">변경 가능한 참조 ( &lt;code id=&quot;mutable-references-mut&quot;&gt;&amp;amp;mut&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5fa3b51295b66d6f308b38cdc6ecce7d889c5606" translate="yes" xml:space="preserve">
          <source>Mutable references (&lt;code&gt;&amp;amp;mut&lt;/code&gt;)</source>
          <target state="translated">가변 참조 ( &lt;code&gt;&amp;amp;mut&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ec3c63093396d50094aef9c95a4bb18d50ec6b9d" translate="yes" xml:space="preserve">
          <source>Mutable references (&lt;code&gt;&amp;amp;mut&lt;/code&gt;) can only be used in constant functions, not statics or constants. This limitation exists to prevent the creation of constants that have a mutable reference in their final value. If you had a constant of &lt;code&gt;&amp;amp;mut i32&lt;/code&gt; type, you could modify the value through that reference, making the constant essentially mutable.</source>
          <target state="translated">가변 참조 ( &lt;code&gt;&amp;amp;mut&lt;/code&gt; )는 정적 또는 상수가 아닌 상수 함수에서만 사용할 수 있습니다. 이 제한은 최종 값에 변경 가능한 참조가있는 상수 생성을 방지하기 위해 존재합니다. &lt;code&gt;&amp;amp;mut i32&lt;/code&gt; 유형 의 상수가있는 경우 해당 참조를 통해 값을 수정하여 상수를 본질적으로 변경 가능하게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="807698746e1bb008f7832bb9ecf71b91a1a6d75d" translate="yes" xml:space="preserve">
          <source>Mutable slice iterator.</source>
          <target state="translated">가변 슬라이스 반복자.</target>
        </trans-unit>
        <trans-unit id="d378259ee8c41de8764dfe80d547382a8bfb9a6d" translate="yes" xml:space="preserve">
          <source>Mutable statics</source>
          <target state="translated">가변 정적</target>
        </trans-unit>
        <trans-unit id="251e4f7a695616bf015910b905cc56d4d0cdcb5d" translate="yes" xml:space="preserve">
          <source>Mutable statics are still very useful, however. They can be used with C libraries and can also be bound from C libraries in an &lt;code&gt;extern&lt;/code&gt; block.</source>
          <target state="translated">그러나 가변 정적은 여전히 ​​매우 유용합니다. C 라이브러리와 함께 사용할 수 있으며 &lt;code&gt;extern&lt;/code&gt; 블록의 C 라이브러리에서 바인딩 될 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="35a250da62f146757b2bb997376c9c1f1b0697e9" translate="yes" xml:space="preserve">
          <source>Mutable statics have the same restrictions as normal statics, except that the type does not have to implement the &lt;code&gt;Sync&lt;/code&gt; trait.</source>
          <target state="translated">가변 정적은 유형이 &lt;code&gt;Sync&lt;/code&gt; 특성 을 구현할 필요가 없다는 점을 제외하고 일반 정적과 동일한 제한이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="07709586244d2902e96feb26498a180327651bfb" translate="yes" xml:space="preserve">
          <source>Mutably borrows from an owned value.</source>
          <target state="translated">소유 한 가치에서 차용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23aec1af14256dd29e38ccd00f64d7409572720f" translate="yes" xml:space="preserve">
          <source>Mutably borrows from an owned value. &lt;a href=&quot;../../../borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">소유 한 가치에서 차용 할 수 있습니다. &lt;a href=&quot;../../../borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36185fe04a97d1f6f42e66edf6e3f3db3976acc8" translate="yes" xml:space="preserve">
          <source>Mutably borrows from an owned value. &lt;a href=&quot;../../borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">소유 한 가치에서 차용 할 수 있습니다. &lt;a href=&quot;../../borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be90a7bb28ce0ba66b4185070fafdd998508baca" translate="yes" xml:space="preserve">
          <source>Mutably borrows from an owned value. &lt;a href=&quot;../borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">소유 한 가치에서 차용 할 수 있습니다. &lt;a href=&quot;../borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b075f3b74cbfcb7773b9c81d1913acc5fe6e0e1" translate="yes" xml:space="preserve">
          <source>Mutably borrows from an owned value. &lt;a href=&quot;borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">소유 한 가치에서 차용 할 수 있습니다. &lt;a href=&quot;borrow/trait.borrowmut#tymethod.borrow_mut&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="002d34554fc3a003b69453f4fa394932bfeb64d7" translate="yes" xml:space="preserve">
          <source>Mutably borrows from an owned value. &lt;a href=&quot;trait.borrowmut#tymethod.borrow_mut&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">소유 한 가치에서 차용 할 수 있습니다. &lt;a href=&quot;trait.borrowmut#tymethod.borrow_mut&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0525184a8828ec5244bc08eb3db976fa38e4d393" translate="yes" xml:space="preserve">
          <source>Mutably borrows the wrapped value, returning an error if the value is currently borrowed.</source>
          <target state="translated">래핑 된 값을 차용하여 값을 현재 차용 한 경우 오류를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d6eb72446fb5d0e81d80186c2aea34036d37a462" translate="yes" xml:space="preserve">
          <source>Mutably borrows the wrapped value.</source>
          <target state="translated">래핑 된 값을 차용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95331faeca1dbc6cb40218f815911edfe0146d93" translate="yes" xml:space="preserve">
          <source>Mutably dereferences the content.</source>
          <target state="translated">내용을 상호 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fef57cb29809c3fdf7ff34d83de2555ca5dd2c0" translate="yes" xml:space="preserve">
          <source>Mutably dereferences the value.</source>
          <target state="translated">변경 가능하게 값을 역 참조합니다.</target>
        </trans-unit>
        <trans-unit id="4ee0c78f0e77bb758490b62387f47c9c2280d3cb" translate="yes" xml:space="preserve">
          <source>Mutate &lt;a href=&quot;keyword.static&quot;&gt;&lt;code&gt;static&lt;/code&gt;&lt;/a&gt;s (including &lt;a href=&quot;keyword.extern&quot;&gt;&lt;code&gt;extern&lt;/code&gt;&lt;/a&gt;al ones)</source>
          <target state="translated">돌연변이 &lt;a href=&quot;keyword.static&quot;&gt; &lt;code&gt;static&lt;/code&gt; &lt;/a&gt; (포함의 &lt;a href=&quot;keyword.extern&quot;&gt; &lt;code&gt;extern&lt;/code&gt; &lt;/a&gt; 알 것)</target>
        </trans-unit>
        <trans-unit id="9fe085d236e81b702bb73ff5289610fb669f5333" translate="yes" xml:space="preserve">
          <source>Mutating immutable data. All data inside a &lt;a href=&quot;items/constant-items&quot;&gt;&lt;code&gt;const&lt;/code&gt;&lt;/a&gt; item is immutable. Moreover, all data reached through a shared reference or data owned by an immutable binding is immutable, unless that data is contained within an &lt;a href=&quot;../std/cell/struct.unsafecell&quot;&gt;&lt;code&gt;UnsafeCell&amp;lt;U&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">불변 데이터 변형. &lt;a href=&quot;items/constant-items&quot;&gt; &lt;code&gt;const&lt;/code&gt; &lt;/a&gt; 항목 내의 모든 데이터 는 변경할 수 없습니다. 또한 공유 참조 또는 변경 불가능한 바인딩이 소유 한 데이터를 통해 도달 한 모든 데이터는 해당 데이터가 &lt;a href=&quot;../std/cell/struct.unsafecell&quot;&gt; &lt;code&gt;UnsafeCell&amp;lt;U&amp;gt;&lt;/code&gt; &lt;/a&gt; 내에 포함되지 않는 한 변경 불가능 합니다.</target>
        </trans-unit>
        <trans-unit id="5a1c46d3df93a0f32072ac195f523e3a373551b5" translate="yes" xml:space="preserve">
          <source>Mutating implementations of &lt;code&gt;Clone&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Clone&lt;/code&gt; 구현 변경</target>
        </trans-unit>
        <trans-unit id="db6b11e1ed5a87b6d2dff2e54357e35132e62505" translate="yes" xml:space="preserve">
          <source>Mutating implementations of &lt;code&gt;Clone&lt;/code&gt;.</source>
          <target state="translated">의 구현 돌연변이 &lt;code&gt;Clone&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f427230fb9092700678c0b5c69e93d76d2146f74" translate="yes" xml:space="preserve">
          <source>Mutating non-mutable data &amp;mdash; that is, data reached through a shared reference or data owned by a &lt;code&gt;let&lt;/code&gt; binding), unless that data is contained within an &lt;a href=&quot;../std/cell/struct.unsafecell&quot;&gt;&lt;code&gt;UnsafeCell&amp;lt;U&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">a로 소유 공유 레퍼런스 또는 데이터를 통해 도달 할 때, 데이터 - 비 가변 데이터 돌연변이 &lt;code&gt;let&lt;/code&gt; 데이터가 포함되어 있지 않으면, 바인딩) &lt;a href=&quot;../std/cell/struct.unsafecell&quot;&gt; &lt;code&gt;UnsafeCell&amp;lt;U&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef5ac9e21297c98398b41dfda16cfd26de5a780d" translate="yes" xml:space="preserve">
          <source>Mutating the value inside an immutable value is the &lt;em&gt;interior mutability&lt;/em&gt; pattern. Let&amp;rsquo;s look at a situation in which interior mutability is useful and examine how it&amp;rsquo;s possible.</source>
          <target state="translated">불변 값으로 내부 값을 돌연변이하면 인 &lt;em&gt;내부 가변성&lt;/em&gt; 패턴. 내부 변이가 유용한 상황을 살펴보고 그것이 가능한 방법을 살펴 보자.</target>
        </trans-unit>
        <trans-unit id="bd2b0f087b02e413546a53c4f93f4cdf1581cc30" translate="yes" xml:space="preserve">
          <source>Mutex</source>
          <target state="translated">Mutex</target>
        </trans-unit>
        <trans-unit id="8b1ec69b0491d67da19fa319445ffc0a71413314" translate="yes" xml:space="preserve">
          <source>Mutex::borrow</source>
          <target state="translated">Mutex::borrow</target>
        </trans-unit>
        <trans-unit id="5d8e0cd94eca43b9d430fe82a2c656ee51fa1df8" translate="yes" xml:space="preserve">
          <source>Mutex::borrow_mut</source>
          <target state="translated">Mutex::borrow_mut</target>
        </trans-unit>
        <trans-unit id="faaec1e4812fa8f67d20103e196aed51a3af055f" translate="yes" xml:space="preserve">
          <source>Mutex::default</source>
          <target state="translated">Mutex::default</target>
        </trans-unit>
        <trans-unit id="b21fb6d7e26d11656f3a2bf0e012015692546955" translate="yes" xml:space="preserve">
          <source>Mutex::drop</source>
          <target state="translated">Mutex::drop</target>
        </trans-unit>
        <trans-unit id="0ce0d14d0e8a1582d02e769dfae4e0d04c41beb0" translate="yes" xml:space="preserve">
          <source>Mutex::fmt</source>
          <target state="translated">Mutex::fmt</target>
        </trans-unit>
        <trans-unit id="f3b32a1191db577a5a668469ee3f5fe5e5a39af1" translate="yes" xml:space="preserve">
          <source>Mutex::from</source>
          <target state="translated">Mutex::from</target>
        </trans-unit>
        <trans-unit id="b72d111db4b9c772bf94ea8a593458fb72c02358" translate="yes" xml:space="preserve">
          <source>Mutex::get_mut</source>
          <target state="translated">Mutex::get_mut</target>
        </trans-unit>
        <trans-unit id="9afd670758015679deed62310d5564b19cb86bc6" translate="yes" xml:space="preserve">
          <source>Mutex::into</source>
          <target state="translated">Mutex::into</target>
        </trans-unit>
        <trans-unit id="4f7654c9cc4309477d3b0aaf43e4e1bbc0d73cb6" translate="yes" xml:space="preserve">
          <source>Mutex::into_inner</source>
          <target state="translated">Mutex::into_inner</target>
        </trans-unit>
        <trans-unit id="68911d5cae85b79a0fe42d47b0dd1e08c6ec7a93" translate="yes" xml:space="preserve">
          <source>Mutex::is_poisoned</source>
          <target state="translated">Mutex::is_poisoned</target>
        </trans-unit>
        <trans-unit id="45e2a8305c697b4c7a758e3debe7bcee30f43862" translate="yes" xml:space="preserve">
          <source>Mutex::lock</source>
          <target state="translated">Mutex::lock</target>
        </trans-unit>
        <trans-unit id="271afa54f4dc6f415115426049fc5cf28802b93d" translate="yes" xml:space="preserve">
          <source>Mutex::new</source>
          <target state="translated">Mutex::new</target>
        </trans-unit>
        <trans-unit id="40fb23d545d310ce345b4641563a6c676e0d612d" translate="yes" xml:space="preserve">
          <source>Mutex::try_from</source>
          <target state="translated">Mutex::try_from</target>
        </trans-unit>
        <trans-unit id="0afc79fca30a1f8960756b3e5d3691e48e62a949" translate="yes" xml:space="preserve">
          <source>Mutex::try_into</source>
          <target state="translated">Mutex::try_into</target>
        </trans-unit>
        <trans-unit id="31ef69564e11080bc8cdd503010cb02266bdab68" translate="yes" xml:space="preserve">
          <source>Mutex::try_lock</source>
          <target state="translated">Mutex::try_lock</target>
        </trans-unit>
        <trans-unit id="e2c9a914ed8d18818acfd496506788093f73979d" translate="yes" xml:space="preserve">
          <source>Mutex::type_id</source>
          <target state="translated">Mutex::type_id</target>
        </trans-unit>
        <trans-unit id="0b5712250374171ff19e40af90ec2bff6eb040c5" translate="yes" xml:space="preserve">
          <source>MutexGuard</source>
          <target state="translated">MutexGuard</target>
        </trans-unit>
        <trans-unit id="3d11ea2f26e39e1cd8b7f52691661b58b8e8e3fd" translate="yes" xml:space="preserve">
          <source>MutexGuard::borrow</source>
          <target state="translated">MutexGuard::borrow</target>
        </trans-unit>
        <trans-unit id="9341c2640cd2f34e67aca6befc272df424743715" translate="yes" xml:space="preserve">
          <source>MutexGuard::borrow_mut</source>
          <target state="translated">MutexGuard::borrow_mut</target>
        </trans-unit>
        <trans-unit id="78c3dd5ebf5528db902b33f842bfd5bb14362c4b" translate="yes" xml:space="preserve">
          <source>MutexGuard::deref</source>
          <target state="translated">MutexGuard::deref</target>
        </trans-unit>
        <trans-unit id="5ee7b2c2acd6f9fc3824398729e9a37454a6dc55" translate="yes" xml:space="preserve">
          <source>MutexGuard::deref_mut</source>
          <target state="translated">MutexGuard::deref_mut</target>
        </trans-unit>
        <trans-unit id="d225bcc97df4591af2aa3460780b58f67fe017f4" translate="yes" xml:space="preserve">
          <source>MutexGuard::drop</source>
          <target state="translated">MutexGuard::drop</target>
        </trans-unit>
        <trans-unit id="33d03326e6a9aaa3def233527ec6e75eab8a6d58" translate="yes" xml:space="preserve">
          <source>MutexGuard::fmt</source>
          <target state="translated">MutexGuard::fmt</target>
        </trans-unit>
        <trans-unit id="e8ea1492f2c82871fc274cc07f6a8f2dc0a54669" translate="yes" xml:space="preserve">
          <source>MutexGuard::from</source>
          <target state="translated">MutexGuard::from</target>
        </trans-unit>
        <trans-unit id="3d606f16270cd972992caa6ec2bf3f97c0badfd1" translate="yes" xml:space="preserve">
          <source>MutexGuard::into</source>
          <target state="translated">MutexGuard::into</target>
        </trans-unit>
        <trans-unit id="5a647be7a2ca84b94dbddd7a86eaa710861ba051" translate="yes" xml:space="preserve">
          <source>MutexGuard::to_string</source>
          <target state="translated">MutexGuard::to_string</target>
        </trans-unit>
        <trans-unit id="eac6d1e73119ccfd2cfefa430288537143225294" translate="yes" xml:space="preserve">
          <source>MutexGuard::try_from</source>
          <target state="translated">MutexGuard::try_from</target>
        </trans-unit>
        <trans-unit id="e9aa082c858ae836955c925d4f4c3f91897023e2" translate="yes" xml:space="preserve">
          <source>MutexGuard::try_into</source>
          <target state="translated">MutexGuard::try_into</target>
        </trans-unit>
        <trans-unit id="7cc0c79e70fec88d83d4d42891cb2ec74d704d30" translate="yes" xml:space="preserve">
          <source>MutexGuard::type_id</source>
          <target state="translated">MutexGuard::type_id</target>
        </trans-unit>
        <trans-unit id="26a560ac7b8f05b58df28cf62e1853751f8be1f6" translate="yes" xml:space="preserve">
          <source>Mutexes have a reputation for being difficult to use because you have to remember two rules:</source>
          <target state="translated">뮤텍스는 두 가지 규칙을 기억해야하기 때문에 사용하기 어려운 것으로 유명합니다.</target>
        </trans-unit>
        <trans-unit id="cf3d28a732d3ec6dcf9f21895ad1ca4792aed77d" translate="yes" xml:space="preserve">
          <source>N.B., this is very different from the &lt;code&gt;unreachable!()&lt;/code&gt; macro: Unlike the macro, which panics when it is executed, it is &lt;em&gt;undefined behavior&lt;/em&gt; to reach code marked with this function.</source>
          <target state="translated">NB, 이것은 &lt;code&gt;unreachable!()&lt;/code&gt; 매크로와 는 매우 다릅니다 . 매크로가 실행될 때 패닉하는 매크로와 달리이 함수로 표시된 코드에 도달 하는 것은 &lt;em&gt;정의되지 않은 동작&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="08d2e98e6754af941484848930ccbaddfefe13d6" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>
        </trans-unit>
        <trans-unit id="d82a19a46f2f7da0f84cb56740a41e0148eda5c1" translate="yes" xml:space="preserve">
          <source>NAN</source>
          <target state="translated">NAN</target>
        </trans-unit>
        <trans-unit id="fe71a16b983d42d7ba54430b5ff04f41e29f434b" translate="yes" xml:space="preserve">
          <source>NB. The default behavior here is &quot;allowed&quot;, but this is unspecified and likely to change in the future.</source>
          <target state="translated">NB. 여기서 기본 동작은 &quot;허용&quot;되지만 지정되지 않았으며 향후 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1ddef6d81a568c2827c10ea4d6ba71abf3a5714" translate="yes" xml:space="preserve">
          <source>NEG_INFINITY</source>
          <target state="translated">NEG_INFINITY</target>
        </trans-unit>
        <trans-unit id="fdf6112c558923a52a1ea8211e793722ff83d94f" translate="yes" xml:space="preserve">
          <source>NIL, Hermes: &lt;strike&gt;typestate&lt;/strike&gt;</source>
          <target state="translated">NIL, 헤르메스 : &lt;strike&gt;typestate&lt;/strike&gt;</target>
        </trans-unit>
        <trans-unit id="a05fee8cdc79c30b4abc969705f32d15aa756a6a" translate="yes" xml:space="preserve">
          <source>NON_KEYWORD_IDENTIFIER : IDENTIFIER_OR_KEYWORD &lt;sub&gt;&lt;em&gt;Except a &lt;a href=&quot;keywords#strict-keywords&quot;&gt;strict&lt;/a&gt; or &lt;a href=&quot;keywords#reserved-keywords&quot;&gt;reserved&lt;/a&gt; keyword&lt;/em&gt;&lt;/sub&gt;</source>
          <target state="translated">NON_KEYWORD_IDENTIFIER : IDENTIFIER_OR_KEYWORD &lt;sub&gt;&lt;em&gt;&lt;a href=&quot;keywords#strict-keywords&quot;&gt;엄격&lt;/a&gt;&lt;/em&gt;&lt;/sub&gt;&lt;sub&gt;&lt;em&gt; 하거나 &lt;/em&gt;&lt;/sub&gt;&lt;sub&gt;&lt;em&gt;&lt;a href=&quot;keywords#reserved-keywords&quot;&gt;예약 된&lt;/a&gt;&lt;/em&gt;&lt;/sub&gt;&lt;sub&gt;&lt;em&gt; 키워드 &lt;/em&gt;&lt;/sub&gt;&lt;sub&gt;&lt;em&gt;는 제외&lt;/em&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="604c091e6520bd70a283112b3d1cb5ab614885f3" translate="yes" xml:space="preserve">
          <source>NON_KEYWORD_IDENTIFIER | RAW_IDENTIFIER</source>
          <target state="translated">NON_KEYWORD_IDENTIFIER | RAW_IDENTIFIER</target>
        </trans-unit>
        <trans-unit id="dfa8b3449dac324be0d4ec9c1ddc0fca8a64ae4a" translate="yes" xml:space="preserve">
          <source>NON_ZERO_DEC_DIGIT : [&lt;code&gt;1&lt;/code&gt;-&lt;code&gt;9&lt;/code&gt;]</source>
          <target state="translated">NON_ZERO_DEC_DIGIT : [ &lt;code&gt;1&lt;/code&gt; - &lt;code&gt;9&lt;/code&gt; ]</target>
        </trans-unit>
        <trans-unit id="89a25c668207f5b4de73462d1ddb7646256ccc51" translate="yes" xml:space="preserve">
          <source>NOTE: It is almost always better to use &lt;a href=&quot;../../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&lt;/code&gt;&lt;/a&gt; because array-based containers are generally faster, more memory efficient, and make better use of CPU cache.</source>
          <target state="translated">참고 : 어레이 기반 컨테이너는 일반적으로 더 빠르고 메모리 효율적이며 CPU 캐시를 더 잘 사용하기 때문에 &lt;a href=&quot;../../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 거의 항상 더 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="9842f0bfbc5e5be039c20495708a361823545497" translate="yes" xml:space="preserve">
          <source>NOTE: It is almost always better to use &lt;code&gt;Vec&lt;/code&gt; or &lt;code&gt;VecDeque&lt;/code&gt; because array-based containers are generally faster, more memory efficient, and make better use of CPU cache.</source>
          <target state="translated">참고 : 어레이 기반 컨테이너는 일반적으로 더 빠르고 메모리 효율적이며 CPU 캐시를 더 잘 사용하기 때문에 &lt;code&gt;Vec&lt;/code&gt; 또는 &lt;code&gt;VecDeque&lt;/code&gt; 를 사용하는 것이 거의 항상 더 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="cc274d5d2263838f79d29729cbb093b2edf78847" translate="yes" xml:space="preserve">
          <source>NOTE: this has the &lt;em&gt;opposite&lt;/em&gt; argument order of &lt;a href=&quot;ptr/fn.copy&quot;&gt;&lt;code&gt;ptr::copy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참고 : 이것의 &lt;em&gt;반대&lt;/em&gt; 순서는 &lt;a href=&quot;ptr/fn.copy&quot;&gt; &lt;code&gt;ptr::copy&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="04245176ce021c5996ae94cb1d734e59fa5be8e1" translate="yes" xml:space="preserve">
          <source>NOTE: this has the &lt;em&gt;opposite&lt;/em&gt; argument order of &lt;a href=&quot;ptr/fn.copy_nonoverlapping&quot;&gt;&lt;code&gt;ptr::copy_nonoverlapping&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참고 : 이것의 &lt;em&gt;반대&lt;/em&gt; 순서는 &lt;a href=&quot;ptr/fn.copy_nonoverlapping&quot;&gt; &lt;code&gt;ptr::copy_nonoverlapping&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="24f0c636b2534446f5c3e8e4920567881a0a19de" translate="yes" xml:space="preserve">
          <source>NOTE: this has the &lt;em&gt;same&lt;/em&gt; argument order as &lt;a href=&quot;ptr/fn.copy&quot;&gt;&lt;code&gt;ptr::copy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참고 : 이것은 &lt;a href=&quot;ptr/fn.copy&quot;&gt; &lt;code&gt;ptr::copy&lt;/code&gt; &lt;/a&gt;&lt;em&gt; 와 동일한&lt;/em&gt; 인수 순서를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="42ffb4a7a2d5da14ae26a6e648692385c772e707" translate="yes" xml:space="preserve">
          <source>NOTE: this has the &lt;em&gt;same&lt;/em&gt; argument order as &lt;a href=&quot;ptr/fn.copy_nonoverlapping&quot;&gt;&lt;code&gt;ptr::copy_nonoverlapping&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참고 : 이것은 &lt;a href=&quot;ptr/fn.copy_nonoverlapping&quot;&gt; &lt;code&gt;ptr::copy_nonoverlapping&lt;/code&gt; &lt;/a&gt; 과 &lt;em&gt;동일한&lt;/em&gt; 인수 순서를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="69fbc7b4d017cc8ef97c313f3b88986888b4509e" translate="yes" xml:space="preserve">
          <source>Naive factorial implementation:</source>
          <target state="translated">순진한 팩토리얼 구현 :</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="34f864e719f4c2657ab4411ddf58c4e944c84e5c" translate="yes" xml:space="preserve">
          <source>Name the type of a &lt;a href=&quot;../book/ch17-02-trait-objects&quot;&gt;trait object&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../book/ch17-02-trait-objects&quot;&gt;특성 오브젝트&lt;/a&gt; 의 유형을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="73d05c292bc3a5ced866ff46712e815b2ba46830" translate="yes" xml:space="preserve">
          <source>Named lifetime or loop label</source>
          <target state="translated">명명 된 수명 또는 루프 레이블</target>
        </trans-unit>
        <trans-unit id="e6c4fd05ac071605352883668025a2439dd60991" translate="yes" xml:space="preserve">
          <source>Named parameters</source>
          <target state="translated">명명 된 매개 변수</target>
        </trans-unit>
        <trans-unit id="356a0c3d459bf98a0577b99ed80776c2dfdf95c3" translate="yes" xml:space="preserve">
          <source>Named variables are irrefutable patterns that match any value, and we&amp;rsquo;ve used them many times in the book. However, there is a complication when you use named variables in &lt;code&gt;match&lt;/code&gt; expressions. Because &lt;code&gt;match&lt;/code&gt; starts a new scope, variables declared as part of a pattern inside the &lt;code&gt;match&lt;/code&gt; expression will shadow those with the same name outside the &lt;code&gt;match&lt;/code&gt; construct, as is the case with all variables. In Listing 18-11, we declare a variable named &lt;code&gt;x&lt;/code&gt; with the value &lt;code&gt;Some(5)&lt;/code&gt; and a variable &lt;code&gt;y&lt;/code&gt; with the value &lt;code&gt;10&lt;/code&gt;. We then create a &lt;code&gt;match&lt;/code&gt; expression on the value &lt;code&gt;x&lt;/code&gt;. Look at the patterns in the match arms and &lt;code&gt;println!&lt;/code&gt; at the end, and try to figure out what the code will print before running this code or reading further.</source>
          <target state="translated">명명 된 변수는 어떤 값과도 일치하는 반박 할 수없는 패턴이며, 책에서 여러 번 사용했습니다. 그러나 &lt;code&gt;match&lt;/code&gt; 식에 명명 된 변수를 사용하면 문제가 발생합니다 . &lt;code&gt;match&lt;/code&gt; 는 새로운 범위를 시작 하기 때문에 모든 변수의 경우와 같이 &lt;code&gt;match&lt;/code&gt; 표현식 내에서 패턴의 일부로 선언 된 변수는 &lt;code&gt;match&lt;/code&gt; 구문 외부에서 동일한 이름을 가진 변수 를 음영 처리 합니다. Listing 18-11에서는 값이 &lt;code&gt;Some(5)&lt;/code&gt; 인 &lt;code&gt;x&lt;/code&gt; 라는 변수 와 값이 &lt;code&gt;10&lt;/code&gt; 인 변수 &lt;code&gt;y&lt;/code&gt; 를 선언한다 . 그런 다음 &lt;code&gt;x&lt;/code&gt; 값에 &lt;code&gt;match&lt;/code&gt; 식 을 만듭니다.. 성냥 팔과 &lt;code&gt;println!&lt;/code&gt; 에있는 본을보십시오 ! 이 코드를 실행하거나 추가로 읽기 전에 코드가 인쇄 할 내용을 파악하십시오.</target>
        </trans-unit>
        <trans-unit id="fec4cc49af99b20cd6c730b646421b9a64ccbb53" translate="yes" xml:space="preserve">
          <source>Names bound in match arms retain their type in pattern guards. As such, if a name is bound by move in a pattern, it should also be moved to wherever it is referenced in the pattern guard code. Doing so however would prevent the name from being available in the body of the match arm. Consider the following:</source>
          <target state="translated">성냥 팔에 묶인 이름은 패턴 가드에서 유형을 유지합니다. 따라서 이름이 패턴에서 이동하여 바인딩되는 경우 패턴 가드 코드에서 참조되는 위치로 이동해야합니다. 그러나 그렇게하면 성냥 팔의 몸체에서 이름을 사용할 수 없게됩니다. 다음을 고려하세요:</target>
        </trans-unit>
        <trans-unit id="eeb9d4ad1e5d5cd83096958c44ff4a037353dcbc" translate="yes" xml:space="preserve">
          <source>Names the thread-to-be. Currently the name is used for identification only in panic messages.</source>
          <target state="translated">스레드 수를 지정합니다. 현재이 이름은 공황 메시지에서만 식별에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d4945a59276bcf1f4830f2a8c1b3defd3c68cde5" translate="yes" xml:space="preserve">
          <source>Namespace path</source>
          <target state="translated">네임 스페이스 경로</target>
        </trans-unit>
        <trans-unit id="59cb29ad5b08231ec027d2b58b07b4db4094a48e" translate="yes" xml:space="preserve">
          <source>Naming hardcoded values used throughout your program as constants is useful in conveying the meaning of that value to future maintainers of the code. It also helps to have only one place in your code you would need to change if the hardcoded value needed to be updated in the future.</source>
          <target state="translated">프로그램 전체에서 사용되는 하드 코딩 된 값의 이름을 상수로 지정하면 해당 값의 의미를 향후 코드 관리자에게 전달하는 데 유용합니다. 또한 나중에 하드 코딩 된 값을 업데이트해야하는 경우 변경해야 할 코드에 코드를 한 곳에 배치하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="4ea0a808e9b003709a882c3eda3364c5952aaed6" translate="yes" xml:space="preserve">
          <source>Naming threads</source>
          <target state="translated">명명 스레드</target>
        </trans-unit>
        <trans-unit id="2773f0d2f9f4e7e59e9c30b201b04dd1a5c30189" translate="yes" xml:space="preserve">
          <source>Native threads.</source>
          <target state="translated">기본 스레드.</target>
        </trans-unit>
        <trans-unit id="f736bf35e196e5f8a2152cf612783a7b401c2cad" translate="yes" xml:space="preserve">
          <source>Ne</source>
          <target state="translated">Ne</target>
        </trans-unit>
        <trans-unit id="ad9041802b2ad5cd647573800f68f895c77cc8fe" translate="yes" xml:space="preserve">
          <source>Neg</source>
          <target state="translated">Neg</target>
        </trans-unit>
        <trans-unit id="64377c7ff3fff06094951f56bcf30132ee73161a" translate="yes" xml:space="preserve">
          <source>Neg::neg</source>
          <target state="translated">Neg::neg</target>
        </trans-unit>
        <trans-unit id="2133424c311abcb51295591d17f0ab0ae52b1f1a" translate="yes" xml:space="preserve">
          <source>Negates self in an overflowing fashion.</source>
          <target state="translated">넘치는 방식으로 자기를 부정합니다.</target>
        </trans-unit>
        <trans-unit id="163f10b84a51abc2d56ad3b9131ea073b011f340" translate="yes" xml:space="preserve">
          <source>Negates self, overflowing if this is equal to the minimum value.</source>
          <target state="translated">이 값이 최소값과 같으면 오버플로됩니다.</target>
        </trans-unit>
        <trans-unit id="24048c04eba343a323fecac37d642445c66f6c28" translate="yes" xml:space="preserve">
          <source>Negation</source>
          <target state="translated">Negation</target>
        </trans-unit>
        <trans-unit id="f43c19cc20dec09f56a336941f1748c0f4c49844" translate="yes" xml:space="preserve">
          <source>Negation operators</source>
          <target state="translated">부정 연산자</target>
        </trans-unit>
        <trans-unit id="17843c0405b3d56c0f1f2a9c5762b3ce7f769007" translate="yes" xml:space="preserve">
          <source>Negation*</source>
          <target state="translated">Negation*</target>
        </trans-unit>
        <trans-unit id="b07705471769113a1673291a380e793691cb93d8" translate="yes" xml:space="preserve">
          <source>Negative implementations are a promise that the trait will never be implemented for the given types. Therefore, both cannot exists at the same time.</source>
          <target state="translated">부정적인 구현은 특성이 주어진 유형에 대해 구현되지 않을 것이라는 약속입니다. 따라서 둘 다 동시에 존재할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3b31bd178b9fc5ff620f5314f9aa5aa57ccd4286" translate="yes" xml:space="preserve">
          <source>Negative impls are not allowed to have any items. Negative impls declare that a trait is &lt;strong&gt;not&lt;/strong&gt; implemented (and never will be) and hence there is no need to specify the values for trait methods or other items.</source>
          <target state="translated">네거티브 impl에는 항목이 허용되지 않습니다. 네거티브 impls는 트레이 트가 구현되지 않았고 결코 구현 &lt;strong&gt;되지 않을&lt;/strong&gt; 것이라고 선언하므로 트레이 트 메서드 나 다른 항목에 대한 값을 지정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e113717082f98a849bcb00740af62ca1b508554b" translate="yes" xml:space="preserve">
          <source>Negative impls are only allowed for auto traits. For more information see the &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0019-opt-in-builtin-traits.md&quot;&gt;opt-in builtin traits RFC&lt;/a&gt;.</source>
          <target state="translated">네거티브 임펄스는 자동 특성에만 허용됩니다. 자세한 정보는 &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0019-opt-in-builtin-traits.md&quot;&gt;옵트 인 내장 특성 RFC를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0615e40800cad75c4988298cdebe16d2bc992b36" translate="yes" xml:space="preserve">
          <source>Negative impls cannot be default impls. A default impl supplies default values for the items within to be used by other impls, whereas a negative impl declares that there are no other impls. Combining it does not make sense.</source>
          <target state="translated">음의 impl은 기본 impl이 될 수 없습니다. 기본 impl은 다른 impl에서 사용할 항목에 대한 기본값을 제공하는 반면 음수 impl은 다른 impl이 없음을 선언합니다. 그것을 결합하는 것은 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="075388f0e224328f0ef13d31f89995f6f2c54896" translate="yes" xml:space="preserve">
          <source>Negative infinity</source>
          <target state="translated">음의 무한대</target>
        </trans-unit>
        <trans-unit id="bb6b7b244457f2bc0330b32b4347438278828967" translate="yes" xml:space="preserve">
          <source>Negative infinity (&amp;minus;&amp;infin;).</source>
          <target state="translated">음의 무한대 (&amp;minus;&amp;infin;).</target>
        </trans-unit>
        <trans-unit id="31031ada08602da6a93f5f5a6962d2039849eda8" translate="yes" xml:space="preserve">
          <source>Negative infinity (&amp;minus;&amp;infin;). Use &lt;a href=&quot;../primitive.f32#associatedconstant.NEG_INFINITY&quot;&gt;&lt;code&gt;f32::NEG_INFINITY&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">음의 무한대 (&amp;minus;&amp;infin;). 대신 &lt;a href=&quot;../primitive.f32#associatedconstant.NEG_INFINITY&quot;&gt; &lt;code&gt;f32::NEG_INFINITY&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f342b4f8475b808f61b1967602254bedfcdc5688" translate="yes" xml:space="preserve">
          <source>Negative infinity (&amp;minus;&amp;infin;). Use &lt;a href=&quot;../primitive.f64#associatedconstant.NEG_INFINITY&quot;&gt;&lt;code&gt;f64::NEG_INFINITY&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">음의 무한대 (&amp;minus;&amp;infin;). 대신 &lt;a href=&quot;../primitive.f64#associatedconstant.NEG_INFINITY&quot;&gt; &lt;code&gt;f64::NEG_INFINITY&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f0bc318765f26abdc2b2efb29b7106a82fb8fb4b" translate="yes" xml:space="preserve">
          <source>Negative infinity (-&amp;infin;).</source>
          <target state="translated">음의 무한대 (-&amp;infin;).</target>
        </trans-unit>
        <trans-unit id="0b247e3c8355086599e15be9efdc87a68cb4c92b" translate="yes" xml:space="preserve">
          <source>Negative numbers</source>
          <target state="translated">음수</target>
        </trans-unit>
        <trans-unit id="72021c01935802b94d4bcd9c9615be5e2c464ac9" translate="yes" xml:space="preserve">
          <source>Negative quiet NaN</source>
          <target state="translated">네거티브 조용한 NaN</target>
        </trans-unit>
        <trans-unit id="3bb8a4159eba393bec0f206dd4b2eb1942475e21" translate="yes" xml:space="preserve">
          <source>Negative signaling NaN</source>
          <target state="translated">음성 신호 NaN</target>
        </trans-unit>
        <trans-unit id="16ee7bf9e7ed5622172a82905b10c817e30e7444" translate="yes" xml:space="preserve">
          <source>Negative subnormal numbers</source>
          <target state="translated">음의 비정규 숫자</target>
        </trans-unit>
        <trans-unit id="dbee361595328b1b81f0564c184162939e173b0f" translate="yes" xml:space="preserve">
          <source>Negative zero</source>
          <target state="translated">음의 제로</target>
        </trans-unit>
        <trans-unit id="ecf5959ac45ac960a39abb26044226e763422de4" translate="yes" xml:space="preserve">
          <source>Neither value is dropped.</source>
          <target state="translated">두 값 모두 삭제되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4826200965c37ead358d19d4ff8ed0153fd42955" translate="yes" xml:space="preserve">
          <source>Neither will this, which is a syntax error:</source>
          <target state="translated">이것도 구문 오류입니다.</target>
        </trans-unit>
        <trans-unit id="665ede9ba12690daf481e44869ce86ddcafb335a" translate="yes" xml:space="preserve">
          <source>Nesting groups of the previous features multiple times, such as &lt;code&gt;use a::b::{self as ab, c, d::{*, e::f}};&lt;/code&gt;</source>
          <target state="translated">이전 기능의 중첩 그룹 (예 &lt;code&gt;use a::b::{self as ab, c, d::{*, e::f}};&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4245fc09474f28a0f0142b9ff14b33a73b77c8f" translate="yes" xml:space="preserve">
          <source>Networking primitives for TCP/UDP communication.</source>
          <target state="translated">TCP / UDP 통신을위한 네트워킹 기본 요소.</target>
        </trans-unit>
        <trans-unit id="0512d9d610f7bd86dbd1ca707603a7ad85ac4816" translate="yes" xml:space="preserve">
          <source>Never type</source>
          <target state="translated">입력하지 마십시오</target>
        </trans-unit>
        <trans-unit id="34989675de773cc2985533af4611fcdec5ac0eea" translate="yes" xml:space="preserve">
          <source>New instances of a &lt;code&gt;struct&lt;/code&gt; can be constructed with a &lt;a href=&quot;../expressions/struct-expr&quot;&gt;struct expression&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; 의 새로운 인스턴스 는 &lt;a href=&quot;../expressions/struct-expr&quot;&gt;구조체 식&lt;/a&gt; 으로 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="474d969a41224d27a052b2157645ae6ea6fdc69d" translate="yes" xml:space="preserve">
          <source>New instances of an &lt;code&gt;enum&lt;/code&gt; can be constructed in an &lt;a href=&quot;../expressions/enum-variant-expr&quot;&gt;enumeration variant expression&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt; 의 새 인스턴스 는 &lt;a href=&quot;../expressions/enum-variant-expr&quot;&gt;열거 변형 표현식&lt;/a&gt; 으로 구성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="83c2612a110d45187eac1c39a648ac614b8c7d56" translate="yes" xml:space="preserve">
          <source>New versions of Unicode are released regularly and subsequently all methods in the standard library depending on Unicode are updated. Therefore the behavior of some &lt;code&gt;char&lt;/code&gt; and &lt;code&gt;str&lt;/code&gt; methods and the value of this constant changes over time. This is &lt;em&gt;not&lt;/em&gt; considered to be a breaking change.</source>
          <target state="translated">새 버전의 유니 코드가 정기적으로 릴리스되고 이후 유니 코드에 따라 표준 라이브러리의 모든 메서드가 업데이트됩니다. 따라서 일부 &lt;code&gt;char&lt;/code&gt; 및 &lt;code&gt;str&lt;/code&gt; 메서드 의 동작 과이 상수의 값은 시간이 지남에 따라 변경됩니다. 이는 주요 변경 사항으로 간주 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="d706a7f27906e3a8bf4f4fed0f9c3d7edc4a240a" translate="yes" xml:space="preserve">
          <source>Newline</source>
          <target state="translated">Newline</target>
        </trans-unit>
        <trans-unit id="d783d54db2abcb54d1f3f2d8b19273a6830adb8c" translate="yes" xml:space="preserve">
          <source>Newsqueak, Alef, Limbo: channels, concurrency</source>
          <target state="translated">Newsqueak, Alef, Limbo : 채널, 동시성</target>
        </trans-unit>
        <trans-unit id="9000cfe362fe35a00622dc16de8a42fe71435817" translate="yes" xml:space="preserve">
          <source>Newtypes can also hide internal implementation. For example, we could provide a &lt;code&gt;People&lt;/code&gt; type to wrap a &lt;code&gt;HashMap&amp;lt;i32, String&amp;gt;&lt;/code&gt; that stores a person&amp;rsquo;s ID associated with their name. Code using &lt;code&gt;People&lt;/code&gt; would only interact with the public API we provide, such as a method to add a name string to the &lt;code&gt;People&lt;/code&gt; collection; that code wouldn&amp;rsquo;t need to know that we assign an &lt;code&gt;i32&lt;/code&gt; ID to names internally. The newtype pattern is a lightweight way to achieve encapsulation to hide implementation details, which we discussed in the &lt;a href=&quot;ch17-01-what-is-oo#encapsulation-that-hides-implementation-details&quot;&gt;&amp;ldquo;Encapsulation that Hides Implementation Details&amp;rdquo;&lt;/a&gt; section of Chapter 17.</source>
          <target state="translated">새로운 유형은 내부 구현을 숨길 수도 있습니다. 예를 들어, 이름과 관련된 사람의 ID를 저장하는 &lt;code&gt;HashMap&amp;lt;i32, String&amp;gt;&lt;/code&gt; 을 감싸기 위해 &lt;code&gt;People&lt;/code&gt; 유형을 제공 할 수 있습니다 . &lt;code&gt;People&lt;/code&gt; 을 사용하는 코드 는 &lt;code&gt;People&lt;/code&gt; 컬렉션에 이름 문자열을 추가하는 방법과 같이 우리가 제공하는 공개 API 와만 상호 작용합니다 . 이 코드는 내부적으로 이름에 &lt;code&gt;i32&lt;/code&gt; ID를 할당한다는 것을 알 필요가 없습니다 . 새 유형 패턴은 구현 세부 사항을 숨기기 위해 캡슐화를 달성하는 간단한 방법으로, 17 장의 &lt;a href=&quot;ch17-01-what-is-oo#encapsulation-that-hides-implementation-details&quot;&gt;&quot;구현 세부 사항을 숨기는 캡슐화&quot;&lt;/a&gt; 섹션 에서 논의했습니다 .</target>
        </trans-unit>
        <trans-unit id="7bae91cced3da7b704f84e06989b7947e80e541e" translate="yes" xml:space="preserve">
          <source>Next are the &lt;code&gt;match&lt;/code&gt; arms. An arm has two parts: a pattern and some code. The first arm here has a pattern that is the value &lt;code&gt;Coin::Penny&lt;/code&gt; and then the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator that separates the pattern and the code to run. The code in this case is just the value &lt;code&gt;1&lt;/code&gt;. Each arm is separated from the next with a comma.</source>
          <target state="translated">다음은 &lt;code&gt;match&lt;/code&gt; 팔입니다. 팔에는 패턴과 코드의 두 부분이 있습니다. 제 1 아암 여기 값인 패턴 갖는 &lt;code&gt;Coin::Penny&lt;/code&gt; 다음 &lt;code&gt;=&amp;gt;&lt;/code&gt; 패턴을 실행하는 코드를 분리 연산자. 이 경우 코드는 값 &lt;code&gt;1&lt;/code&gt; 입니다. 각 팔은 쉼표로 다음 팔과 분리됩니다.</target>
        </trans-unit>
        <trans-unit id="bf7420cff34f7205e5c081be758df804f4a3397f" translate="yes" xml:space="preserve">
          <source>Next is the &lt;code&gt;main&lt;/code&gt; function, which contains the parts of the workout app important for this example. This function represents the code that the app will call when a user asks for a workout plan. Because the interaction with the app&amp;rsquo;s frontend isn&amp;rsquo;t relevant to the use of closures, we&amp;rsquo;ll hardcode values representing inputs to our program and print the outputs.</source>
          <target state="translated">다음은 이 예제에서 중요한 운동 앱의 일부를 포함 하는 &lt;code&gt;main&lt;/code&gt; 기능입니다. 이 함수는 사용자가 운동 계획을 요청할 때 앱이 호출하는 코드를 나타냅니다. 앱의 프런트 엔드와의 상호 작용은 클로저 사용과 관련이 없으므로 프로그램의 입력을 나타내는 값을 하드 코딩하고 출력을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="c65bbe969462e1bc44ee3000579ab22fe481fd4c" translate="yes" xml:space="preserve">
          <source>Next, for the penultimate chapter of the book, we&amp;rsquo;ll look at some advanced aspects of a variety of Rust&amp;rsquo;s features.</source>
          <target state="translated">다음으로이 책의 두 번째 장을 위해 다양한 Rust 기능의 고급 측면을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="52208e82490358e0e353201224729d0b32e9211f" translate="yes" xml:space="preserve">
          <source>Next, in the &lt;em&gt;add&lt;/em&gt; directory, we create the &lt;em&gt;Cargo.toml&lt;/em&gt; file that will configure the entire workspace. This file won&amp;rsquo;t have a &lt;code&gt;[package]&lt;/code&gt; section or the metadata we&amp;rsquo;ve seen in other &lt;em&gt;Cargo.toml&lt;/em&gt; files. Instead, it will start with a &lt;code&gt;[workspace]&lt;/code&gt; section that will allow us to add members to the workspace by specifying the path to our binary crate; in this case, that path is &lt;em&gt;adder&lt;/em&gt;:</source>
          <target state="translated">다음으로, &lt;em&gt;add&lt;/em&gt; 디렉토리 에서 전체 작업 공간을 구성 할 &lt;em&gt;Cargo.toml&lt;/em&gt; 파일을 만듭니다 . 이 파일에는 &lt;code&gt;[package]&lt;/code&gt; 섹션이나 다른 &lt;em&gt;Cargo.toml&lt;/em&gt; 파일 에서 본 메타 데이터가 &lt;em&gt;없습니다&lt;/em&gt; . 대신 이진 상자의 경로를 지정하여 작업 영역에 멤버를 추가 할 수 있는 &lt;code&gt;[workspace]&lt;/code&gt; 섹션으로 시작합니다 . 이 경우 해당 경로는 &lt;em&gt;adder입니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="cf3583fbb6ba42fdef61381eb0f22f26cc65cb4c" translate="yes" xml:space="preserve">
          <source>Next, in the &lt;em&gt;add&lt;/em&gt; directory, we create the &lt;em&gt;Cargo.toml&lt;/em&gt; file that will configure the entire workspace. This file won&amp;rsquo;t have a &lt;code&gt;[package]&lt;/code&gt; section or the metadata we&amp;rsquo;ve seen in other &lt;em&gt;Cargo.toml&lt;/em&gt; files. Instead, it will start with a &lt;code&gt;[workspace]&lt;/code&gt; section that will allow us to add members to the workspace by specifying the path to the package with our binary crate; in this case, that path is &lt;em&gt;adder&lt;/em&gt;:</source>
          <target state="translated">다음으로 &lt;em&gt;add&lt;/em&gt; 디렉터리 에서 전체 작업 공간을 구성 할 &lt;em&gt;Cargo.toml&lt;/em&gt; 파일을 만듭니다 . 이 파일 에는 다른 &lt;em&gt;Cargo.toml&lt;/em&gt; 파일 에서 본 &lt;code&gt;[package]&lt;/code&gt; 섹션이나 메타 데이터가 &lt;em&gt;없습니다&lt;/em&gt; . 대신 바이너리 크레이트로 패키지 경로를 지정하여 작업 공간에 구성원을 추가 할 수 있는 &lt;code&gt;[workspace]&lt;/code&gt; 섹션으로 시작합니다 . 이 경우 해당 경로는 &lt;em&gt;adder입니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="4d5673d4c0782df5e2ab93b6ac7b7285949caf0a" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s create another member crate in the workspace and call it &lt;code&gt;add-one&lt;/code&gt;. Change the top-level &lt;em&gt;Cargo.toml&lt;/em&gt; to specify the &lt;em&gt;add-one&lt;/em&gt; path in the &lt;code&gt;members&lt;/code&gt; list:</source>
          <target state="translated">다음으로, 작업 공간에 다른 멤버 상자를 만들어 &lt;code&gt;add-one&lt;/code&gt; 이라고합시다 . &lt;code&gt;members&lt;/code&gt; 목록 에서 &lt;em&gt;추가&lt;/em&gt; 경로 를 지정하려면 최상위 &lt;em&gt;Cargo.toml&lt;/em&gt; 을 변경하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b3259a6676f65921f501e882bdad69e2021df7f" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s create another member package in the workspace and call it &lt;code&gt;add-one&lt;/code&gt;. Change the top-level &lt;em&gt;Cargo.toml&lt;/em&gt; to specify the &lt;em&gt;add-one&lt;/em&gt; path in the &lt;code&gt;members&lt;/code&gt; list:</source>
          <target state="translated">다음으로 작업 공간에 다른 구성원 패키지를 만들고 &lt;code&gt;add-one&lt;/code&gt; 이라고합니다 . &lt;code&gt;members&lt;/code&gt; 목록 에서 &lt;em&gt;추가&lt;/em&gt; 경로 를 지정하려면 최상위 &lt;em&gt;Cargo.toml&lt;/em&gt; 을 변경하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ba0c012105d9f7e5a4cb08c9812f147ef92fc3f" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s explore how the other kinds of procedural macros differ from custom derive macros.</source>
          <target state="translated">다음으로 다른 종류의 절차 매크로가 사용자 정의 파생 매크로와 어떻게 다른지 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="7388ce6c4f87a59e05725876ec1ba13ab5a6c132" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s look at macros!</source>
          <target state="translated">다음으로 매크로를 보자!</target>
        </trans-unit>
        <trans-unit id="a41ab1aeb6ce0234b517ca6ca3124ad3db811d40" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s try an example that shows that the lifetime of the reference in &lt;code&gt;result&lt;/code&gt; must be the smaller lifetime of the two arguments. We&amp;rsquo;ll move the declaration of the &lt;code&gt;result&lt;/code&gt; variable outside the inner scope but leave the assignment of the value to the &lt;code&gt;result&lt;/code&gt; variable inside the scope with &lt;code&gt;string2&lt;/code&gt;. Then we&amp;rsquo;ll move the &lt;code&gt;println!&lt;/code&gt; that uses &lt;code&gt;result&lt;/code&gt; outside the inner scope, after the inner scope has ended. The code in Listing 10-24 will not compile.</source>
          <target state="translated">다음으로 &lt;code&gt;result&lt;/code&gt; 의 참조 수명이 두 인수의 수명보다 작아야 한다는 것을 보여주는 예를 살펴 보겠습니다 . &lt;code&gt;result&lt;/code&gt; 변수 의 선언을 내부 범위 외부 로 이동 하지만 &lt;code&gt;string2&lt;/code&gt; 를 사용 하여 범위 내의 &lt;code&gt;result&lt;/code&gt; 변수에 값을 할당합니다 . 그런 다음 &lt;code&gt;println!&lt;/code&gt; 움직입니다 ! 내부 범위가 종료 된 후 내부 범위 외부의 &lt;code&gt;result&lt;/code&gt; 를 사용합니다 . 코드 10-24의 코드는 컴파일되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4cd72ee75b765bce66036759ad44f05bffbba3a1" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s use the &lt;code&gt;add_one&lt;/code&gt; function from the &lt;code&gt;add-one&lt;/code&gt; crate in the &lt;code&gt;adder&lt;/code&gt; crate. Open the &lt;em&gt;adder/src/main.rs&lt;/em&gt; file and add a &lt;code&gt;use&lt;/code&gt; line at the top to bring the new &lt;code&gt;add-one&lt;/code&gt; library crate into scope. Then change the &lt;code&gt;main&lt;/code&gt; function to call the &lt;code&gt;add_one&lt;/code&gt; function, as in Listing 14-7.</source>
          <target state="translated">다음으로 &lt;code&gt;adder&lt;/code&gt; crate 의 &lt;code&gt;add-one&lt;/code&gt; crate에서 &lt;code&gt;add_one&lt;/code&gt; 함수를 사용하겠습니다 . &lt;em&gt;adder / src / main.rs&lt;/em&gt; 파일을 열고 맨 위에 &lt;code&gt;use&lt;/code&gt; 줄을 &lt;code&gt;add-one&lt;/code&gt; 하여 새 애드온 라이브러리 상자를 범위에 넣습니다. 그런 다음 Listing 14-7에서와 &lt;code&gt;add_one&lt;/code&gt; &lt;code&gt;main&lt;/code&gt; 함수를 변경하여 add_one 함수를 호출하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e1fe2a2a98ce9e857e8667aa0e6390f716cb1d28" translate="yes" xml:space="preserve">
          <source>Next, make a new source file and call it &lt;em&gt;main.rs&lt;/em&gt;. Rust files always end with the &lt;em&gt;.rs&lt;/em&gt; extension. If you&amp;rsquo;re using more than one word in your filename, use an underscore to separate them. For example, use &lt;em&gt;hello_world.rs&lt;/em&gt; rather than &lt;em&gt;helloworld.rs&lt;/em&gt;.</source>
          <target state="translated">다음으로, 새 소스 파일을 만들어 &lt;em&gt;main.rs&lt;/em&gt; 라고합니다 . 녹 파일은 항상 &lt;em&gt;.rs&lt;/em&gt; 확장자로 끝납니다 . 파일 이름에 둘 이상의 단어를 사용하는 경우 밑줄을 사용하여 구분하십시오. 예를 들어 &lt;em&gt;helloworld.rs&lt;/em&gt; 대신 &lt;em&gt;hello_world.rs를&lt;/em&gt; 사용하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="03d3c37a590f1ae7381c9279be8f7a97b6800076" translate="yes" xml:space="preserve">
          <source>Next, we add a call to &lt;code&gt;to_lowercase&lt;/code&gt; on each &lt;code&gt;line&lt;/code&gt; before we check whether it contains &lt;code&gt;query&lt;/code&gt; to lowercase all characters. Now that we&amp;rsquo;ve converted &lt;code&gt;line&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt; to lowercase, we&amp;rsquo;ll find matches no matter what the case of the query is.</source>
          <target state="translated">다음으로, 모든 문자를 소문자로하는 &lt;code&gt;query&lt;/code&gt; 가 포함되어 있는지 확인하기 전에 각 &lt;code&gt;line&lt;/code&gt; 마다 &lt;code&gt;to_lowercase&lt;/code&gt; 에 대한 호출을 추가합니다 . 이제 &lt;code&gt;line&lt;/code&gt; 과 &lt;code&gt;query&lt;/code&gt; 를 소문자 로 변환 했으므로 쿼리 의 경우에 관계없이 일치하는 항목을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e52d9272848f0823ca640fddf0b693b0608206b" translate="yes" xml:space="preserve">
          <source>Next, we create an iterator over the array of bytes using the &lt;code&gt;iter&lt;/code&gt; method:</source>
          <target state="translated">다음으로 &lt;code&gt;iter&lt;/code&gt; 메소드를 사용하여 바이트 배열에 대해 반복자를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="fbb5669be934c8d9daa09d2fb6f075709e7fa5e2" translate="yes" xml:space="preserve">
          <source>Next, we implement a method named &lt;code&gt;value&lt;/code&gt; that borrows &lt;code&gt;self&lt;/code&gt;, doesn&amp;rsquo;t have any other parameters, and returns an &lt;code&gt;i32&lt;/code&gt;. This kind of method is sometimes called a &lt;em&gt;getter&lt;/em&gt;, because its purpose is to get some data from its fields and return it. This public method is necessary because the &lt;code&gt;value&lt;/code&gt; field of the &lt;code&gt;Guess&lt;/code&gt; struct is private. It&amp;rsquo;s important that the &lt;code&gt;value&lt;/code&gt; field be private so code using the &lt;code&gt;Guess&lt;/code&gt; struct is not allowed to set &lt;code&gt;value&lt;/code&gt; directly: code outside the module &lt;em&gt;must&lt;/em&gt; use the &lt;code&gt;Guess::new&lt;/code&gt; function to create an instance of &lt;code&gt;Guess&lt;/code&gt;, thereby ensuring there&amp;rsquo;s no way for a &lt;code&gt;Guess&lt;/code&gt; to have a &lt;code&gt;value&lt;/code&gt; that hasn&amp;rsquo;t been checked by the conditions in the &lt;code&gt;Guess::new&lt;/code&gt; function.</source>
          <target state="translated">다음으로 &lt;code&gt;self&lt;/code&gt; 를 빌리고 다른 매개 변수가 없으며 &lt;code&gt;i32&lt;/code&gt; 를 반환하는 &lt;code&gt;value&lt;/code&gt; 라는 메서드를 구현합니다 . 이러한 종류의 메소드는 &lt;em&gt;getter&lt;/em&gt; 라고도 합니다. 목적은 필드에서 일부 데이터를 가져 와서 리턴하기 때문입니다. 이 공개 방법은 &lt;code&gt;Guess&lt;/code&gt; 구조체 의 &lt;code&gt;value&lt;/code&gt; 필드 가 private 이므로 필요합니다 . 그것은 것이 중요 &lt;code&gt;value&lt;/code&gt; 필드는 사용하여 개인 그래서 코드가 될 &lt;code&gt;Guess&lt;/code&gt; 세트에 허용되지 않는 구조체 &lt;code&gt;value&lt;/code&gt; 을 직접 : 모듈 외부의 코드가 &lt;em&gt;있어야&lt;/em&gt; 사용 &lt;code&gt;Guess::new&lt;/code&gt; 의 인스턴스를 생성하는 기능을 &lt;code&gt;Guess&lt;/code&gt; &lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;따라서 &lt;code&gt;Guess::new&lt;/code&gt; 함수 의 조건에 의해 확인되지 않은 &lt;code&gt;value&lt;/code&gt; 을 &lt;code&gt;Guess&lt;/code&gt; 할 수있는 방법 이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="605d6de7987c12e157a0df6ee5c1a07b22d453f2" translate="yes" xml:space="preserve">
          <source>Next, we implement the &lt;code&gt;FnBox&lt;/code&gt; trait for any type &lt;code&gt;F&lt;/code&gt; that implements the &lt;code&gt;FnOnce()&lt;/code&gt; trait. Effectively, this means that any &lt;code&gt;FnOnce()&lt;/code&gt; closures can use our &lt;code&gt;call_box&lt;/code&gt; method. The implementation of &lt;code&gt;call_box&lt;/code&gt; uses &lt;code&gt;(*self)()&lt;/code&gt; to move the closure out of the &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; and call the closure.</source>
          <target state="translated">다음으로 &lt;code&gt;FnOnce()&lt;/code&gt; 특성 을 구현하는 모든 유형 &lt;code&gt;F&lt;/code&gt; 에 대해 &lt;code&gt;FnBox&lt;/code&gt; 특성을 구현합니다 . 실제로 이것은 모든 &lt;code&gt;FnOnce()&lt;/code&gt; 클로저가 &lt;code&gt;call_box&lt;/code&gt; 메소드를 사용할 수 있음을 의미합니다 . &lt;code&gt;call_box&lt;/code&gt; 의 구현 은 &lt;code&gt;(*self)()&lt;/code&gt; 를 사용하여 클로저를 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 밖으로 이동시키고 클로저를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="813cf7c3c4cb11a394f89f5d5322e12f202af557" translate="yes" xml:space="preserve">
          <source>Next, we need to actually read from the stream. We do this in two steps: first, we declare a &lt;code&gt;buffer&lt;/code&gt; on the stack to hold the data that is read in. We&amp;rsquo;ve made the buffer 1024 bytes in size, which is big enough to hold the data of a basic request and sufficient for our purposes in this chapter. If we wanted to handle requests of an arbitrary size, buffer management would need to be more complicated; we&amp;rsquo;ll keep it simple for now. We pass the buffer to &lt;code&gt;stream.read&lt;/code&gt;, which will read bytes from the &lt;code&gt;TcpStream&lt;/code&gt; and put them in the buffer.</source>
          <target state="translated">다음으로 실제로 스트림에서 읽어야합니다. 이 작업은 두 단계로 수행합니다. 먼저 읽은 데이터를 보관할 &lt;code&gt;buffer&lt;/code&gt; 를 스택에 선언합니다 . 기본 요청의 데이터를 보관할 수있을만큼 충분히 크고 충분한 크기의 버퍼를 1024 바이트로 만들었습니다. 이 장에서 우리의 목적을 위해. 임의의 크기의 요청을 처리하려면 버퍼 관리가 더 복잡해야합니다. 지금은 간단하게 유지하겠습니다. 우리는에 버퍼 통과 &lt;code&gt;stream.read&lt;/code&gt; 로부터 바이트를 읽어, &lt;code&gt;TcpStream&lt;/code&gt; 을 버퍼에 넣어합니다.</target>
        </trans-unit>
        <trans-unit id="7cc7c952c5d6180788b66b960a497f1bbb0d5cfe" translate="yes" xml:space="preserve">
          <source>Next, we need to actually read from the stream. We do this in two steps: first, we declare a &lt;code&gt;buffer&lt;/code&gt; on the stack to hold the data that is read in. We&amp;rsquo;ve made the buffer 512 bytes in size, which is big enough to hold the data of a basic request and sufficient for our purposes in this chapter. If we wanted to handle requests of an arbitrary size, buffer management would need to be more complicated; we&amp;rsquo;ll keep it simple for now. We pass the buffer to &lt;code&gt;stream.read&lt;/code&gt;, which will read bytes from the &lt;code&gt;TcpStream&lt;/code&gt; and put them in the buffer.</source>
          <target state="translated">다음으로 스트림에서 실제로 읽어야합니다. 먼저 두 단계로이 작업을 수행합니다. 먼저 읽은 데이터를 보유하기 위해 스택에 &lt;code&gt;buffer&lt;/code&gt; 를 선언합니다 . 버퍼를 512 바이트 크기로 만들었습니다. 기본 요청의 데이터를 보유 할 수있을만큼 충분히 크고 이 장에서 우리의 목적을 위해. 임의 크기의 요청을 처리하려면 버퍼 관리가 더 복잡해야합니다. 우리는 지금 간단하게 유지할 것입니다. 버퍼를 &lt;code&gt;stream.read&lt;/code&gt; 에 전달하면 TcpStream 에서 바이트를 읽 &lt;code&gt;TcpStream&lt;/code&gt; 버퍼에 넣어합니다.</target>
        </trans-unit>
        <trans-unit id="76351bb871037a13a112e6c874825b1ebb4611c8" translate="yes" xml:space="preserve">
          <source>Next, we need to add functionality to request a review of a post, which should change its state from &lt;code&gt;Draft&lt;/code&gt; to &lt;code&gt;PendingReview&lt;/code&gt;. Listing 17-15 shows this code:</source>
          <target state="translated">다음으로 게시물 검토를 요청하는 기능을 추가해야합니다.이 상태는 &lt;code&gt;Draft&lt;/code&gt; 에서 &lt;code&gt;PendingReview&lt;/code&gt; 중인 검토로 변경되어야합니다. . 코드 17-15는이 코드를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="92e1faec54108ffc0dae30cd9cc0b93fd8d1895e" translate="yes" xml:space="preserve">
          <source>Next, we need to generate a secret number that the user will try to guess. The secret number should be different every time so the game is fun to play more than once. Let&amp;rsquo;s use a random number between 1 and 100 so the game isn&amp;rsquo;t too difficult. Rust doesn&amp;rsquo;t yet include random number functionality in its standard library. However, the Rust team does provide a &lt;a href=&quot;https://crates.io/crates/rand&quot;&gt;&lt;code&gt;rand&lt;/code&gt; crate&lt;/a&gt;.</source>
          <target state="translated">다음으로, 사용자가 추측하려고하는 비밀 번호를 생성해야합니다. 비밀 번호는 매번 달라야 게임이 두 번 이상 재미있어집니다. 게임이 그렇게 어렵지 않도록 1에서 100 사이의 난수를 사용합시다. Rust는 아직 표준 라이브러리에 난수 기능을 포함하지 않습니다. 그러나 Rust 팀은 &lt;a href=&quot;https://crates.io/crates/rand&quot;&gt; &lt;code&gt;rand&lt;/code&gt; &lt;/a&gt; 상자를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="b3048ae1981e29d8fc7bb24867dd28498448fb02" translate="yes" xml:space="preserve">
          <source>Next, we need to update the definition of &lt;code&gt;Config::new&lt;/code&gt;. In your I/O project&amp;rsquo;s &lt;em&gt;src/lib.rs&lt;/em&gt; file, let&amp;rsquo;s change the signature of &lt;code&gt;Config::new&lt;/code&gt; to look like Listing 13-26. This still won&amp;rsquo;t compile because we need to update the function body.</source>
          <target state="translated">다음으로 &lt;code&gt;Config::new&lt;/code&gt; 정의를 업데이트해야합니다 . I / O 프로젝트의 &lt;em&gt;src / lib.rs&lt;/em&gt; 파일에서 &lt;code&gt;Config::new&lt;/code&gt; 의 서명을 변경하십시오 Listing 13-26과 같이 . 함수 본문을 업데이트해야하기 때문에 여전히 컴파일되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f7002fc97279e473d70d4660362de14f1e116f1c" translate="yes" xml:space="preserve">
          <source>Next, we use &lt;code&gt;format!&lt;/code&gt; to add the file&amp;rsquo;s contents as the body of the success response.</source>
          <target state="translated">다음 &lt;code&gt;format!&lt;/code&gt; 을 사용 합니다!성공 응답 본문으로 파일 내용을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5f1848680d22a75c771965dd71d24a16003163fc" translate="yes" xml:space="preserve">
          <source>Next, we use &lt;code&gt;format!&lt;/code&gt; to add the file&amp;rsquo;s contents as the body of the success response. To ensure a valid HTTP response, we add the &lt;code&gt;Content-Length&lt;/code&gt; header which is set to the size of our response body, in this case the size of &lt;code&gt;hello.html&lt;/code&gt;.</source>
          <target state="translated">다음 &lt;code&gt;format!&lt;/code&gt; 을 사용 합니다! 성공 응답의 본문으로 파일의 내용을 추가합니다. 유효한 HTTP 응답을 보장하기 위해 응답 본문의 크기 (이 경우 &lt;code&gt;hello.html&lt;/code&gt; 크기)로 설정된 &lt;code&gt;Content-Length&lt;/code&gt; 헤더를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="e1cb8822a67321b8c02da9e7e8c260dc9c0b608d" translate="yes" xml:space="preserve">
          <source>Next, we want to enable a request for a review of the post, and we want &lt;code&gt;content&lt;/code&gt; to return an empty string while waiting for the review. When the post receives approval, it should get published, meaning the text of the post will be returned when &lt;code&gt;content&lt;/code&gt; is called.</source>
          <target state="translated">다음으로 게시물 검토 요청을 활성화하고 검토 를 기다리는 동안 빈 문자열을 반환하는 &lt;code&gt;content&lt;/code&gt; 가 필요합니다. 게시물이 승인을 받으면 게시되어야합니다. 즉, &lt;code&gt;content&lt;/code&gt; 가 게시 될 때 게시물의 텍스트가 반환됩니다. 가 호출 .</target>
        </trans-unit>
        <trans-unit id="dc0c1d1b57e4826864a1d45c2ceee72d00bff7d9" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll check whether the current line contains our query string. Fortunately, strings have a helpful method named &lt;code&gt;contains&lt;/code&gt; that does this for us! Add a call to the &lt;code&gt;contains&lt;/code&gt; method in the &lt;code&gt;search&lt;/code&gt; function, as shown in Listing 12-18. Note this still won&amp;rsquo;t compile yet.</source>
          <target state="translated">다음으로 현재 줄에 쿼리 문자열이 포함되어 있는지 확인합니다. 다행스럽게도 문자열에는 &lt;code&gt;contains&lt;/code&gt; 라는 이름의 유용한 메소드가 있습니다 . &lt;code&gt;search&lt;/code&gt; 에서 &lt;code&gt;contains&lt;/code&gt; 메소드에 대한 호출 추가목록 12-18에 표시된대로 함수 . 아직 컴파일되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5ac1479b99a85012a6bea69ba1759d1f7cc3ad30" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll create a place to store the user input, like this:</source>
          <target state="translated">다음으로 다음과 같이 사용자 입력을 저장할 장소를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e5a328539b3bbff608c05675d0f98ba529495a33" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll create a raw pointer whose validity we can&amp;rsquo;t be so certain of. Listing 19-2 shows how to create a raw pointer to an arbitrary location in memory. Trying to use arbitrary memory is undefined: there might be data at that address or there might not, the compiler might optimize the code so there is no memory access, or the program might error with a segmentation fault. Usually, there is no good reason to write code like this, but it is possible.</source>
          <target state="translated">다음으로 우리는 유효성을 확신 할 수없는 원시 포인터를 만듭니다. 목록 19-2는 메모리의 임의 위치에 대한 원시 포인터를 만드는 방법을 보여줍니다. 임의의 메모리를 사용하려는 시도는 정의되지 않았습니다. 해당 주소에 데이터가 있거나 없을 수 있습니다. 컴파일러가 코드를 최적화하여 메모리 액세스가 없거나 프로그램이 오류로 인해 오류가 발생할 수 있습니다. 일반적으로 이와 같은 코드를 작성해야 할 이유는 없지만 가능합니다.</target>
        </trans-unit>
        <trans-unit id="629644a5201c55cb9634591304da90b26a4571c8" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll create the &lt;code&gt;adder&lt;/code&gt; binary crate by running &lt;code&gt;cargo new&lt;/code&gt; within the &lt;em&gt;add&lt;/em&gt; directory:</source>
          <target state="translated">다음으로 &lt;em&gt;add&lt;/em&gt; 디렉토리 내에서 &lt;code&gt;cargo new&lt;/code&gt; 를 실행 하여 &lt;code&gt;adder&lt;/code&gt; 바이너리 상자를 만듭니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c8171dc56214044bf871f6ef39d7d39bc7a5954" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll define the &lt;code&gt;HelloMacro&lt;/code&gt; trait and its associated function:</source>
          <target state="translated">다음으로 &lt;code&gt;HelloMacro&lt;/code&gt; 특성과 관련 기능을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="a47fb6ac34c3efb030b781d2a69ff8c26654e8b7" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll explore some Rust features that were influenced by functional languages: closures and iterators.</source>
          <target state="translated">다음으로 함수형 언어에 영향을받은 Rust 기능인 클로저 및 반복자를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="de89b671f67de5d1f170a1b7712e3f2c4f2d52b0" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll explore some advanced features related to functions and closures, which include function pointers and returning closures.</source>
          <target state="translated">다음으로, 함수 포인터 및 반환 클로저를 포함하는 함수 및 클로저와 관련된 몇 가지 고급 기능을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="df380b1f8d3c4226cb4356e67a4308029f7b04af" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll fix the body of &lt;code&gt;Config::new&lt;/code&gt;. The standard library documentation also mentions that &lt;code&gt;std::env::Args&lt;/code&gt; implements the &lt;code&gt;Iterator&lt;/code&gt; trait, so we know we can call the &lt;code&gt;next&lt;/code&gt; method on it! Listing 13-27 updates the code from Listing 12-23 to use the &lt;code&gt;next&lt;/code&gt; method:</source>
          <target state="translated">다음으로 &lt;code&gt;Config::new&lt;/code&gt; 본문을 수정합니다 . 표준 라이브러리 문서에는 &lt;code&gt;std::env::Args&lt;/code&gt; 가 &lt;code&gt;Iterator&lt;/code&gt; 특성을 구현 하므로 &lt;code&gt;next&lt;/code&gt; 메소드를 호출 할 수 있음을 알고 있습니다 ! Listing 13-27은 &lt;code&gt;next&lt;/code&gt; 방법 을 사용하도록 Listing 12-23의 코드를 업데이트한다 .</target>
        </trans-unit>
        <trans-unit id="3a19f54b1a11fc876360a8c3cf621da7fa07cef6" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll implement the &lt;code&gt;Iterator&lt;/code&gt; trait for our &lt;code&gt;Counter&lt;/code&gt; type by defining the body of the &lt;code&gt;next&lt;/code&gt; method to specify what we want to happen when this iterator is used, as shown in Listing 13-21:</source>
          <target state="translated">다음 으로 Listing 13-21에 표시된 것처럼이 반복자를 사용할 때 발생하는 작업을 지정하기 위해 &lt;code&gt;next&lt;/code&gt; 메소드 의 본문을 정의하여 &lt;code&gt;Counter&lt;/code&gt; 유형에 대한 &lt;code&gt;Iterator&lt;/code&gt; 특성을 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="8192333a1969b9548e0a4b704aec1d71dbd5da8d" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll look at a different kind of reference: slices.</source>
          <target state="translated">다음으로 다른 종류의 참조 : 슬라이스를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="4634a5dae53b28ce905455154ee2c8f9020614d5" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll look at patterns, which are another of Rust&amp;rsquo;s features that enable lots of flexibility. We&amp;rsquo;ve looked at them briefly throughout the book but haven&amp;rsquo;t seen their full capability yet. Let&amp;rsquo;s go!</source>
          <target state="translated">다음으로 많은 유연성을 가능하게하는 Rust의 또 다른 특징 인 패턴을 살펴 보겠습니다. 우리는이 책 전체에서 그것들을 간략히 살펴 보았지만 아직 완전한 기능을 보지 못했습니다. 가자!</target>
        </trans-unit>
        <trans-unit id="c7d28f3c2f2542f898d8da87d4a31466a385d3a6" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll put everything we&amp;rsquo;ve discussed throughout the book into practice and do one more project!</source>
          <target state="translated">다음으로, 우리는 책 전체에 걸쳐 논의한 모든 것을 실용화하고 하나 이상의 프로젝트를 수행 할 것입니다!</target>
        </trans-unit>
        <trans-unit id="b241e1c5f37c0baa3f70582a9ac2883d59e35af5" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll talk about concurrency in Rust. You&amp;rsquo;ll even learn about a few new smart pointers.</source>
          <target state="translated">다음으로 Rust의 동시성에 대해 이야기하겠습니다. 몇 가지 새로운 스마트 포인터에 대해서도 배우게됩니다.</target>
        </trans-unit>
        <trans-unit id="03a59d930c382bd744dde7a012f05351047ee5cc" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll talk about functions and closures!</source>
          <target state="translated">다음으로 함수와 클로저에 대해 이야기하겠습니다!</target>
        </trans-unit>
        <trans-unit id="1fde554107211f23cac1a0bbf25be3203f7855d9" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll talk about idiomatic ways to model problems and structure solutions as your Rust programs get bigger. In addition, we&amp;rsquo;ll discuss how Rust&amp;rsquo;s idioms relate to those you might be familiar with from object-oriented programming.</source>
          <target state="translated">다음으로 Rust 프로그램이 커짐에 따라 문제를 모델링하고 솔루션을 구조화하는 관용적 방법에 대해 이야기하겠습니다. 또한 Rust의 관용구가 객체 지향 프로그래밍에서 익숙 할 수있는 관용구와 어떤 관련이 있는지 논의합니다.</target>
        </trans-unit>
        <trans-unit id="12c381a078ea586c1a6dde5139c1770828ccdb51" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll use our struct definition and create one &lt;code&gt;Node&lt;/code&gt; instance named &lt;code&gt;leaf&lt;/code&gt; with the value 3 and no children, and another instance named &lt;code&gt;branch&lt;/code&gt; with the value 5 and &lt;code&gt;leaf&lt;/code&gt; as one of its children, as shown in Listing 15-27:</source>
          <target state="translated">다음으로 구조체 정의를 사용 하고 값이 3이고 자식이없는 &lt;code&gt;leaf&lt;/code&gt; 라는 &lt;code&gt;Node&lt;/code&gt; 인스턴스를 하나 만들고 값이 5이고 &lt;code&gt;leaf&lt;/code&gt; 인 &lt;code&gt;branch&lt;/code&gt; 라는 다른 인스턴스를 만듭니다. Listing 15-27 참조).</target>
        </trans-unit>
        <trans-unit id="49cce52cf3729ef44c726e5a417fc215b857117b" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll use these same steps with generics to reduce code duplication in different ways. In the same way that the function body can operate on an abstract &lt;code&gt;list&lt;/code&gt; instead of specific values, generics allow code to operate on abstract types.</source>
          <target state="translated">다음으로 제네릭과 동일한 단계를 사용하여 다른 방법으로 코드 중복을 줄입니다. 함수 본문 이 특정 값 대신 추상 &lt;code&gt;list&lt;/code&gt; 에서 작동하는 것과 동일한 방식으로 제네릭을 사용하면 코드가 추상 유형에서 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05f6878762b08e453ff7c9c981e816c32f84aa8d" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;re adding two lines in the middle. The &lt;code&gt;rand::thread_rng&lt;/code&gt; function will give us the particular random number generator that we&amp;rsquo;re going to use: one that is local to the current thread of execution and seeded by the operating system. Then we call the &lt;code&gt;gen_range&lt;/code&gt; method on the random number generator. This method is defined by the &lt;code&gt;Rng&lt;/code&gt; trait that we brought into scope with the &lt;code&gt;use rand::Rng&lt;/code&gt; statement. The &lt;code&gt;gen_range&lt;/code&gt; method takes two numbers as arguments and generates a random number between them. It&amp;rsquo;s inclusive on the lower bound but exclusive on the upper bound, so we need to specify &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;101&lt;/code&gt; to request a number between 1 and 100.</source>
          <target state="translated">다음으로 중간에 두 줄을 추가합니다. &lt;code&gt;rand::thread_rng&lt;/code&gt; 현재 실행 스레드 로컬 및 운영 체제에서 시드 하나 : 기능은 우리에게 우리가 사용 거라고 특정 난수 생성기를 제공 할 것입니다. 그런 다음 난수 생성기 에서 &lt;code&gt;gen_range&lt;/code&gt; 메소드를 호출합니다 . 이 방법은 우리가 &lt;code&gt;use rand::Rng&lt;/code&gt; 문을 사용 하여 &lt;code&gt;Rng&lt;/code&gt; 특성에 의해 정의됩니다 . &lt;code&gt;gen_range&lt;/code&gt; 의 방법은 인수로 두 개의 숫자를 받아 그들 사이의 난수를 생성합니다. 하한에는 포함되지만 상한에는 배타적이므로 1과 100 사이의 숫자를 요청하려면 &lt;code&gt;1&lt;/code&gt; 과 &lt;code&gt;101&lt;/code&gt; 을 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="188a1831aead9f2050d9903c88b40256b8d0ba24" translate="yes" xml:space="preserve">
          <source>Nice! Even though spaces were added before the guess, the program still figured out that the user guessed 76. Run the program a few times to verify the different behavior with different kinds of input: guess the number correctly, guess a number that is too high, and guess a number that is too low.</source>
          <target state="translated">좋은! 추측하기 전에 공백이 추가되었지만 프로그램은 여전히 ​​사용자가 76을 추측했다고 생각했습니다. 프로그램을 몇 번 실행하여 다른 종류의 입력으로 다른 동작을 확인하십시오. 숫자를 올바르게 추측하고, 너무 높은 숫자를 추측하십시오. 너무 낮은 숫자를 추측하십시오.</target>
        </trans-unit>
        <trans-unit id="41d756e582a9b7133fefe3aba97d94609533d175" translate="yes" xml:space="preserve">
          <source>Nice! It&amp;rsquo;s not the prettiest output, but it shows the values of all the fields for this instance, which would definitely help during debugging. When we have larger structs, it&amp;rsquo;s useful to have output that&amp;rsquo;s a bit easier to read; in those cases, we can use &lt;code&gt;{:#?}&lt;/code&gt; instead of &lt;code&gt;{:?}&lt;/code&gt; in the &lt;code&gt;println!&lt;/code&gt; string. When we use the &lt;code&gt;{:#?}&lt;/code&gt; style in the example, the output will look like this:</source>
          <target state="translated">좋은! 가장 아름다운 출력은 아니지만이 인스턴스의 모든 필드 값을 표시하므로 디버깅 중에 도움이됩니다. 우리가 더 큰 구조체를 가질 때, 좀 더 읽기 쉬운 출력을 갖는 것이 유용합니다; 이런 경우에는 &lt;code&gt;{:#?}&lt;/code&gt; &lt;code&gt;println!&lt;/code&gt; 에서 &lt;code&gt;{:?}&lt;/code&gt; 대신 {: #?}을 ! 끈. &lt;code&gt;{:#?}&lt;/code&gt; 를 사용할 때 의 예에서 스타일을, 출력은 다음과 같이 표시됩니다</target>
        </trans-unit>
        <trans-unit id="c9e429b1798d0142b8b31e82c1f9da5d8e0c9420" translate="yes" xml:space="preserve">
          <source>Nightly</source>
          <target state="translated">Nightly</target>
        </trans-unit>
        <trans-unit id="0e61ca1796e0a674ec697f05ff94882071738de7" translate="yes" xml:space="preserve">
          <source>No &lt;a href=&quot;../glossary#uncovered-type&quot;&gt;uncovered type&lt;/a&gt; parameters &lt;code&gt;P1..=Pn&lt;/code&gt; may appear in &lt;code&gt;T0..Ti&lt;/code&gt; (excluding &lt;code&gt;Ti&lt;/code&gt;)</source>
          <target state="translated">어떤 &lt;a href=&quot;../glossary#uncovered-type&quot;&gt;노출 된 입력&lt;/a&gt; 파라미터 &lt;code&gt;P1..=Pn&lt;/code&gt; 표시되지있다 &lt;code&gt;T0..Ti&lt;/code&gt; (제외 &lt;code&gt;Ti&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6dabebe1f19f9827a4f8cf661fd813509cd607c6" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;main&lt;/code&gt; function was found in a binary crate.</source>
          <target state="translated">이진 상자에는 &lt;code&gt;main&lt;/code&gt; 기능이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="3334d46bace193a18342fe23d9ec73cf45eeee44" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;main&lt;/code&gt; function was found in a binary crate. To fix this error, add a &lt;code&gt;main&lt;/code&gt; function. For example:</source>
          <target state="translated">이진 상자에 &lt;code&gt;main&lt;/code&gt; 기능이 없습니다 . 이 오류를 해결하려면 &lt;code&gt;main&lt;/code&gt; 추가하십시오 기능을 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="40e9183fb0e170dc10c265ea9f5ac313b7e7824e" translate="yes" xml:space="preserve">
          <source>No arguments to the program</source>
          <target state="translated">프로그램에 대한 논증 없음</target>
        </trans-unit>
        <trans-unit id="86e59c19b9b6a6d88fc2db18875d3bedb5eeda2c" translate="yes" xml:space="preserve">
          <source>No code is generated for this intrinsic, but the optimizer will try to preserve it (and its condition) between passes, which may interfere with optimization of surrounding code and reduce performance. It should not be used if the invariant can be discovered by the optimizer on its own, or if it does not enable any significant optimizations.</source>
          <target state="translated">이 내장 코드에 대해서는 코드가 생성되지 않지만, 옵티마이 저는 패스간에 코드 (및 해당 조건)를 보존하려고 시도하므로 주변 코드의 최적화를 방해하고 성능이 저하 될 수 있습니다. 옵티마이 저가 불변량을 자체적으로 발견 할 수 있거나 중요한 최적화를 사용하지 않는 경우에는 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="6d24aa51295019d1b05b76a7e56a3b4b701ef15c" translate="yes" xml:space="preserve">
          <source>No data is allocated on the heap.</source>
          <target state="translated">힙에는 데이터가 할당되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b940936fa4a1fc768ca623a652084963506c1c89" translate="yes" xml:space="preserve">
          <source>No file is allowed to exist at the target location, also no (dangling) symlink. In this way, if the call succeeds, the file returned is guaranteed to be new.</source>
          <target state="translated">대상 위치에 파일이 존재할 수 없으며 (매달린) 심볼릭 링크도 없습니다. 이런 식으로 호출이 성공하면 반환 된 파일은 새 파일이됩니다.</target>
        </trans-unit>
        <trans-unit id="bd44839870a9b58128d358fce877ecbaa11fd40a" translate="yes" xml:space="preserve">
          <source>No formal timeline for turning the warnings into errors has been set. See &lt;a href=&quot;https://github.com/rust-lang/rust/issues/58781&quot;&gt;GitHub issue 58781&lt;/a&gt; for more information.</source>
          <target state="translated">경고를 오류로 전환하기위한 공식 일정은 설정되지 않았습니다. 자세한 내용은 &lt;a href=&quot;https://github.com/rust-lang/rust/issues/58781&quot;&gt;GitHub 문제 58781&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f506aac03a59ef1406f6d0689bfcd0dc4c05822a" translate="yes" xml:space="preserve">
          <source>No guarantees are provided about the contents of &lt;code&gt;buf&lt;/code&gt; when this function is called, implementations cannot rely on any property of the contents of &lt;code&gt;buf&lt;/code&gt; being true. It is recommended that &lt;em&gt;implementations&lt;/em&gt; only write data to &lt;code&gt;buf&lt;/code&gt; instead of reading its contents.</source>
          <target state="translated">이 함수가 호출 될 때 &lt;code&gt;buf&lt;/code&gt; 의 내용에 대해 어떠한 보장도 제공 되지 않으며, 구현은 &lt;code&gt;buf&lt;/code&gt; 의 내용에 대한 어떠한 속성도 사실에 의존 할 수 없습니다 . 다음을 권장합니다&lt;em&gt;구현시 &lt;/em&gt; &lt;code&gt;buf&lt;/code&gt; 에만 데이터를 쓰는 내용을 읽는 대신 .</target>
        </trans-unit>
        <trans-unit id="4f0a95bf47b8945eb4629fd1207fec71669b8c5c" translate="yes" xml:space="preserve">
          <source>No guarantees are provided about the contents of &lt;code&gt;buf&lt;/code&gt; when this function is called, implementations cannot rely on any property of the contents of &lt;code&gt;buf&lt;/code&gt; being true. It is recommended that implementations only write data to &lt;code&gt;buf&lt;/code&gt; instead of reading its contents.</source>
          <target state="translated">이 함수가 호출 될 때 &lt;code&gt;buf&lt;/code&gt; 의 내용에 대해 어떠한 보장도 제공 되지 않으며, 구현은 &lt;code&gt;buf&lt;/code&gt; 의 내용에 대한 어떠한 속성도 사실에 의존 할 수 없습니다 . 구현시 내용을 읽는 대신 &lt;code&gt;buf&lt;/code&gt; 에 데이터를 쓰는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="44c3fb55dfa5ac1ea3e6cc8751e2f98b499318f5" translate="yes" xml:space="preserve">
          <source>No guarantees are provided about the contents of &lt;code&gt;buf&lt;/code&gt; when this function is called, implementations cannot rely on any property of the contents of &lt;code&gt;buf&lt;/code&gt; being true. It is recommended that implementations only write data to &lt;code&gt;buf&lt;/code&gt; instead of reading its contents. The documentation on &lt;a href=&quot;trait.read#tymethod.read&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; has a more detailed explanation on this subject.</source>
          <target state="translated">이 함수가 호출 될 때 &lt;code&gt;buf&lt;/code&gt; 의 내용에 대한 보장은 제공 되지 않으며, 구현은 &lt;code&gt;buf&lt;/code&gt; 내용의 속성 이 true 인 것에 의존 할 수 없습니다 . 구현시 내용을 읽는 대신 &lt;code&gt;buf&lt;/code&gt; 에만 데이터를 쓰는 것이 좋습니다 . &lt;a href=&quot;trait.read#tymethod.read&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 에 대한 문서 에는이 주제에 대한 자세한 설명이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce0692c18a626152270d81a21a828cf37a6f5e5b" translate="yes" xml:space="preserve">
          <source>No matter whether or not you think Rust is an object-oriented language after reading this chapter, you now know that you can use trait objects to get some object-oriented features in Rust. Dynamic dispatch can give your code some flexibility in exchange for a bit of runtime performance. You can use this flexibility to implement object-oriented patterns that can help your code&amp;rsquo;s maintainability. Rust also has other features, like ownership, that object-oriented languages don&amp;rsquo;t have. An object-oriented pattern won&amp;rsquo;t always be the best way to take advantage of Rust&amp;rsquo;s strengths, but is an available option.</source>
          <target state="translated">이 장을 읽은 후 Rust가 객체 지향 언어라고 생각하든, 이제 특성 객체를 사용하여 Rust에서 객체 지향 기능을 얻을 수 있다는 것을 알고 있습니다. 동적 디스패치는 약간의 런타임 성능과 교환하여 코드에 유연성을 제공 할 수 있습니다. 이 유연성을 사용하여 코드 유지 관리에 도움이되는 객체 지향 패턴을 구현할 수 있습니다. Rust에는 소유권과 같은 객체 지향 언어에는없는 다른 기능도 있습니다. 객체 지향 패턴이 Rust의 강점을 활용하는 가장 좋은 방법은 아니지만 사용 가능한 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="11ac1612603c0c3d5163e13082f76411af9ee697" translate="yes" xml:space="preserve">
          <source>No ordering constraints, only atomic operations.</source>
          <target state="translated">순서 제한이없고 원자 연산 만 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d3c73825e4a8031f1bb82e1a976c1ab255294e6" translate="yes" xml:space="preserve">
          <source>No truncation occurs when &lt;code&gt;len&lt;/code&gt; is greater than the vector's current length:</source>
          <target state="translated">&lt;code&gt;len&lt;/code&gt; 이 벡터의 현재 길이보다 길면 잘림이 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9d9d7a3fa61acc7fab275007c75a11f20d8c99c2" translate="yes" xml:space="preserve">
          <source>No uncovered type parameters &lt;code&gt;P1..=Pm&lt;/code&gt; may appear in &lt;code&gt;T0..Ti&lt;/code&gt; (excluding &lt;code&gt;Ti&lt;/code&gt;).</source>
          <target state="translated">커버되지 않은 유형 매개 변수 &lt;code&gt;P1..=Pm&lt;/code&gt; 은 &lt;code&gt;T0..Ti&lt;/code&gt; 에 나타날 수 없습니다 ( &lt;code&gt;Ti&lt;/code&gt; 제외 ).</target>
        </trans-unit>
        <trans-unit id="1d402441c3b972c1257d41a23a0cf7d56800bfb6" translate="yes" xml:space="preserve">
          <source>No value</source>
          <target state="translated">가치 없음</target>
        </trans-unit>
        <trans-unit id="b8b9f1367ad6269845f5ec54d66262066092883f" translate="yes" xml:space="preserve">
          <source>No.</source>
          <target state="translated">No.</target>
        </trans-unit>
        <trans-unit id="e1e00ea722ddcc62dfc3b69613fb2a2d565490a9" translate="yes" xml:space="preserve">
          <source>Nominal types</source>
          <target state="translated">공칭 유형</target>
        </trans-unit>
        <trans-unit id="cdb02ce94d87fb6259e95b77d6deab219ecd04ba" translate="yes" xml:space="preserve">
          <source>Nominal types &amp;mdash; &lt;a href=&quot;types/struct&quot;&gt;structs&lt;/a&gt;, &lt;a href=&quot;types/enum&quot;&gt;enumerations&lt;/a&gt; and &lt;a href=&quot;types/union&quot;&gt;unions&lt;/a&gt; &amp;mdash; may be recursive. That is, each &lt;code&gt;enum&lt;/code&gt; variant or &lt;code&gt;struct&lt;/code&gt; or &lt;code&gt;union&lt;/code&gt; field may refer, directly or indirectly, to the enclosing &lt;code&gt;enum&lt;/code&gt; or &lt;code&gt;struct&lt;/code&gt; type itself. Such recursion has restrictions:</source>
          <target state="translated">공칭 유형 - &lt;a href=&quot;types/struct&quot;&gt;구조체&lt;/a&gt; , &lt;a href=&quot;types/enum&quot;&gt;열거&lt;/a&gt; 및 &lt;a href=&quot;types/union&quot;&gt;조합은&lt;/a&gt; - 재귀 수 있습니다. 즉, 각 &lt;code&gt;enum&lt;/code&gt; 변형 또는 &lt;code&gt;struct&lt;/code&gt; 또는 &lt;code&gt;union&lt;/code&gt; 필드는 엔 클로징 &lt;code&gt;enum&lt;/code&gt; 또는 &lt;code&gt;struct&lt;/code&gt; 를 직접 또는 간접적으로 참조 할 수 있습니다. 유형 자체 있습니다. 이러한 재귀에는 제한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4149c46b37e254e72be155dd7b9caf947125984" translate="yes" xml:space="preserve">
          <source>Nominal types &amp;mdash; &lt;a href=&quot;types/struct&quot;&gt;structs&lt;/a&gt;, &lt;a href=&quot;types/enum&quot;&gt;enumerations&lt;/a&gt;, and &lt;a href=&quot;types/union&quot;&gt;unions&lt;/a&gt; &amp;mdash; may be recursive. That is, each &lt;code&gt;enum&lt;/code&gt; variant or &lt;code&gt;struct&lt;/code&gt; or &lt;code&gt;union&lt;/code&gt; field may refer, directly or indirectly, to the enclosing &lt;code&gt;enum&lt;/code&gt; or &lt;code&gt;struct&lt;/code&gt; type itself. Such recursion has restrictions:</source>
          <target state="translated">명목 형 ( &lt;a href=&quot;types/struct&quot;&gt;structs&lt;/a&gt; , &lt;a href=&quot;types/enum&quot;&gt;enumerations&lt;/a&gt; 및 &lt;a href=&quot;types/union&quot;&gt;unions)&lt;/a&gt; 은 재귀적일 수 있습니다. 즉, 각 &lt;code&gt;enum&lt;/code&gt; 변형 또는 &lt;code&gt;struct&lt;/code&gt; 또는 &lt;code&gt;union&lt;/code&gt; 필드는 둘러싸는 &lt;code&gt;enum&lt;/code&gt; 또는 &lt;code&gt;struct&lt;/code&gt; 유형 자체 를 직접 또는 간접적으로 참조 할 수 있습니다. 이러한 재귀에는 제한 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2b8571666155408fb60b3d7bfe218ca438c97ed" translate="yes" xml:space="preserve">
          <source>Nominal types without a &lt;code&gt;repr&lt;/code&gt; attribute have the default representation. Informally, this representation is also called the &lt;code&gt;rust&lt;/code&gt; representation.</source>
          <target state="translated">&lt;code&gt;repr&lt;/code&gt; 속성이 없는 명목 유형 에는 기본 표현이 있습니다. 비공식적으로이 표현을 &lt;code&gt;rust&lt;/code&gt; 표현 이라고도합니다 .</target>
        </trans-unit>
        <trans-unit id="5059fea19d0d88b99facd98e04beb3723c567878" translate="yes" xml:space="preserve">
          <source>Non capturing closures to &lt;code&gt;fn&lt;/code&gt; pointers</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; 포인터에 대한 비 캡처 클로저</target>
        </trans-unit>
        <trans-unit id="a51a0d057519ba84abe774072805e81677bec4c4" translate="yes" xml:space="preserve">
          <source>Non-&lt;code&gt;mut&lt;/code&gt; static items that contain a type that is not &lt;a href=&quot;../interior-mutability&quot;&gt;interior mutable&lt;/a&gt; may be placed in read-only memory.</source>
          <target state="translated">&lt;a href=&quot;../interior-mutability&quot;&gt;내부 변경 가능&lt;/a&gt; 하지 않은 유형을 포함하는 &lt;code&gt;mut&lt;/code&gt; - mut 정적 항목 은 읽기 전용 메모리에 배치 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1983af4c53629f3985aabae2faea197763bce6d6" translate="yes" xml:space="preserve">
          <source>Non-UTF-8 byte sequences in a &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 에서 비 UTF-8 바이트 시퀀스 .</target>
        </trans-unit>
        <trans-unit id="c7afa6ec3e9abfb77b76d7813a424b3a22eeb6a6" translate="yes" xml:space="preserve">
          <source>Non-allocating substring search.</source>
          <target state="translated">비 할당 하위 문자열 검색</target>
        </trans-unit>
        <trans-unit id="918c67058d00d25e0f0f3d637bc930eba67e9f26" translate="yes" xml:space="preserve">
          <source>Non-ascii can be used as module names if it is inlined or if a &lt;code&gt;#[path]&lt;/code&gt; attribute is specified. For example:</source>
          <target state="translated">비 ASCII는 인라인되거나 &lt;code&gt;#[path]&lt;/code&gt; 속성이 지정된 경우 모듈 이름으로 사용할 수 있습니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="3dcd44915e2ff9a86c47e1f5d9c641f6ca3a035b" translate="yes" xml:space="preserve">
          <source>Non-doc comments</source>
          <target state="translated">비 문서 댓글</target>
        </trans-unit>
        <trans-unit id="824440476584993bab7b4958488eb74ef1df4ce3" translate="yes" xml:space="preserve">
          <source>Non-doc comments are interpreted as a form of whitespace.</source>
          <target state="translated">비 문서 주석은 공백 형태로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="aa21851a9f906887214ca347fd6a9f54a7e9f855" translate="yes" xml:space="preserve">
          <source>Non-exhaustive enums could have additional variants added in future. Therefore, when matching against variants of non-exhaustive enums, an extra wildcard arm must be added to account for any future variants.</source>
          <target state="translated">포괄적이지 않은 열거 형에는 향후 추가 변형이 추가 될 수 있습니다. 따라서 완전하지 않은 열거 형의 변형과 일치하는 경우 향후 변형을 고려하여 추가 와일드 카드 암을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="10cecc28192fc5e84850b4a3c1cd7bbfd836407b" translate="yes" xml:space="preserve">
          <source>Non-exhaustive enums could have additional variants added in future. Therefore, when matching against variants of non-exhaustive enums, an extra wildcard arm must be added to account for any future variants.&lt;span id=&quot;variant.Empty&quot;&gt;&lt;code id=&quot;Empty.v&quot;&gt;Empty&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">전체가 아닌 열거 형에는 나중에 추가 변형이 추가 될 수 있습니다. 따라서 전체가 아닌 열거 형의 변형과 일치하는 경우 향후 변형을 설명하기 위해 추가 와일드 카드 암을 추가해야합니다. &lt;span id=&quot;variant.Empty&quot;&gt; &lt;code id=&quot;Empty.v&quot;&gt;Empty&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c2d926eda1237eaff90e4752c522197b25cce1b5" translate="yes" xml:space="preserve">
          <source>Non-exhaustive enums could have additional variants added in future. Therefore, when matching against variants of non-exhaustive enums, an extra wildcard arm must be added to account for any future variants.&lt;span id=&quot;variant.NotFound&quot;&gt;&lt;code id=&quot;NotFound.v&quot;&gt;NotFound&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">전체가 아닌 열거 형에는 나중에 추가 변형이 추가 될 수 있습니다. 따라서 전체가 아닌 열거 형의 변형과 일치하는 경우 향후 변형을 설명하기 위해 추가 와일드 카드 암을 추가해야합니다. &lt;span id=&quot;variant.NotFound&quot;&gt; &lt;code id=&quot;NotFound.v&quot;&gt;NotFound&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9ffc5a4a3c3cd6c9da0af373638cb3d4d5bda691" translate="yes" xml:space="preserve">
          <source>Non-exhaustive enums could have additional variants added in future. Therefore, when matching against variants of non-exhaustive enums, an extra wildcard arm must be added to account for any future variants.&lt;span id=&quot;variant.Relaxed&quot;&gt;&lt;code id=&quot;Relaxed.v&quot;&gt;Relaxed&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">전체가 아닌 열거 형에는 나중에 추가 변형이 추가 될 수 있습니다. 따라서 전체가 아닌 열거 형의 변형과 일치하는 경우 향후 변형을 설명하기 위해 추가 와일드 카드 암을 추가해야합니다. &lt;span id=&quot;variant.Relaxed&quot;&gt; &lt;code id=&quot;Relaxed.v&quot;&gt;Relaxed&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="677ced73d5856aaca0b6f678eabc91c14dca818b" translate="yes" xml:space="preserve">
          <source>Non-operator Symbols</source>
          <target state="translated">비 연산자 기호</target>
        </trans-unit>
        <trans-unit id="4e30c9c45a102a66eb26f8221fcbff4ef463e321" translate="yes" xml:space="preserve">
          <source>NonNull</source>
          <target state="translated">NonNull</target>
        </trans-unit>
        <trans-unit id="4406dddaf8fa2617ceb6cc8c44402048c8cf820a" translate="yes" xml:space="preserve">
          <source>NonNull::as_mut</source>
          <target state="translated">NonNull::as_mut</target>
        </trans-unit>
        <trans-unit id="2114c5e9abc5430a075844ac84cde8dc1be1fea6" translate="yes" xml:space="preserve">
          <source>NonNull::as_ptr</source>
          <target state="translated">NonNull::as_ptr</target>
        </trans-unit>
        <trans-unit id="1cabae6d82425bb900a0d474f79596c63d831307" translate="yes" xml:space="preserve">
          <source>NonNull::as_ref</source>
          <target state="translated">NonNull::as_ref</target>
        </trans-unit>
        <trans-unit id="6ed17b6bc3c37842c56b35d303eedea6a7299966" translate="yes" xml:space="preserve">
          <source>NonNull::borrow</source>
          <target state="translated">NonNull::borrow</target>
        </trans-unit>
        <trans-unit id="7e334211ca12677d4c793a4a4f5aff0a42317022" translate="yes" xml:space="preserve">
          <source>NonNull::borrow_mut</source>
          <target state="translated">NonNull::borrow_mut</target>
        </trans-unit>
        <trans-unit id="d14ea41704eb3153152593ae4083750dca37c043" translate="yes" xml:space="preserve">
          <source>NonNull::cast</source>
          <target state="translated">NonNull::cast</target>
        </trans-unit>
        <trans-unit id="898faa9b1446e51151d3471366dee5a575326bb3" translate="yes" xml:space="preserve">
          <source>NonNull::clamp</source>
          <target state="translated">NonNull::clamp</target>
        </trans-unit>
        <trans-unit id="bf5ade412290b7a0e9f887083d2f7add59f5a5fc" translate="yes" xml:space="preserve">
          <source>NonNull::clone</source>
          <target state="translated">NonNull::clone</target>
        </trans-unit>
        <trans-unit id="d26e757d1bc68cfc66ec9cac7468feab54ad3bf1" translate="yes" xml:space="preserve">
          <source>NonNull::clone_from</source>
          <target state="translated">NonNull::clone_from</target>
        </trans-unit>
        <trans-unit id="ec88376a17645ec47ad005ff58328f13df7dd535" translate="yes" xml:space="preserve">
          <source>NonNull::clone_into</source>
          <target state="translated">NonNull::clone_into</target>
        </trans-unit>
        <trans-unit id="fd33327c1c03c18157e310949eb3ee49adc1b771" translate="yes" xml:space="preserve">
          <source>NonNull::cmp</source>
          <target state="translated">NonNull::cmp</target>
        </trans-unit>
        <trans-unit id="987e425f6d75ea2d5d6595ecf927bb4ee065890c" translate="yes" xml:space="preserve">
          <source>NonNull::dangling</source>
          <target state="translated">NonNull::dangling</target>
        </trans-unit>
        <trans-unit id="c22e4114ed2e98fa57926d0f979b5e4f67cb57d4" translate="yes" xml:space="preserve">
          <source>NonNull::eq</source>
          <target state="translated">NonNull::eq</target>
        </trans-unit>
        <trans-unit id="d00b2d876766572056074e351b4e54188d623d2b" translate="yes" xml:space="preserve">
          <source>NonNull::fmt</source>
          <target state="translated">NonNull::fmt</target>
        </trans-unit>
        <trans-unit id="920d1fd41b172fec04d2e45bb2bdef697e4fe777" translate="yes" xml:space="preserve">
          <source>NonNull::from</source>
          <target state="translated">NonNull::from</target>
        </trans-unit>
        <trans-unit id="e069f30f0197691ef84cfb150cfed51e68e388e1" translate="yes" xml:space="preserve">
          <source>NonNull::ge</source>
          <target state="translated">NonNull::ge</target>
        </trans-unit>
        <trans-unit id="c04dde85527ee18200a552eae552b457a7f99bd6" translate="yes" xml:space="preserve">
          <source>NonNull::gt</source>
          <target state="translated">NonNull::gt</target>
        </trans-unit>
        <trans-unit id="1962f7d627fcf30051ef24ad505c0bc5f914d525" translate="yes" xml:space="preserve">
          <source>NonNull::hash</source>
          <target state="translated">NonNull::hash</target>
        </trans-unit>
        <trans-unit id="947f5524bfbda623a81d3a1c8013f457968a7a86" translate="yes" xml:space="preserve">
          <source>NonNull::hash_slice</source>
          <target state="translated">NonNull::hash_slice</target>
        </trans-unit>
        <trans-unit id="389c43bbeacefc5b6764890179f4b9b2032438f2" translate="yes" xml:space="preserve">
          <source>NonNull::into</source>
          <target state="translated">NonNull::into</target>
        </trans-unit>
        <trans-unit id="47e7802874702c46a2e861846c1495c139c4c850" translate="yes" xml:space="preserve">
          <source>NonNull::le</source>
          <target state="translated">NonNull::le</target>
        </trans-unit>
        <trans-unit id="9345c04e2a031789eec4e0c10625a029c4ae6f61" translate="yes" xml:space="preserve">
          <source>NonNull::lt</source>
          <target state="translated">NonNull::lt</target>
        </trans-unit>
        <trans-unit id="7a29d42be85ea3d359fc0499cfc787631cbd8fc5" translate="yes" xml:space="preserve">
          <source>NonNull::max</source>
          <target state="translated">NonNull::max</target>
        </trans-unit>
        <trans-unit id="61df043b4cb69b06e977ed45aa61b72a55c0c1a7" translate="yes" xml:space="preserve">
          <source>NonNull::min</source>
          <target state="translated">NonNull::min</target>
        </trans-unit>
        <trans-unit id="abded46d5ba3ed8a510f52a6c525d34081184868" translate="yes" xml:space="preserve">
          <source>NonNull::ne</source>
          <target state="translated">NonNull::ne</target>
        </trans-unit>
        <trans-unit id="28098f7280cb4f6eb94dfb98674503d36042312c" translate="yes" xml:space="preserve">
          <source>NonNull::new</source>
          <target state="translated">NonNull::new</target>
        </trans-unit>
        <trans-unit id="faebd85a1d1a684a9974b3cced67816fb864d3e2" translate="yes" xml:space="preserve">
          <source>NonNull::new_unchecked</source>
          <target state="translated">NonNull::new_unchecked</target>
        </trans-unit>
        <trans-unit id="daad03caa96878a899bd74268cdf22f8762238fc" translate="yes" xml:space="preserve">
          <source>NonNull::partial_cmp</source>
          <target state="translated">NonNull::partial_cmp</target>
        </trans-unit>
        <trans-unit id="4a54ca911ffa7ae9c156cb290778a55bb5102986" translate="yes" xml:space="preserve">
          <source>NonNull::to_owned</source>
          <target state="translated">NonNull::to_owned</target>
        </trans-unit>
        <trans-unit id="9c8c974cd30a86ae9347bdcc34e89477c2ec64af" translate="yes" xml:space="preserve">
          <source>NonNull::try_from</source>
          <target state="translated">NonNull::try_from</target>
        </trans-unit>
        <trans-unit id="cbe36570c4b5d03cc4de672aa3768cec6ff79fc7" translate="yes" xml:space="preserve">
          <source>NonNull::try_into</source>
          <target state="translated">NonNull::try_into</target>
        </trans-unit>
        <trans-unit id="5c4656d738141e414301ef5f2fc675edf57dbe67" translate="yes" xml:space="preserve">
          <source>NonNull::type_id</source>
          <target state="translated">NonNull::type_id</target>
        </trans-unit>
        <trans-unit id="3551d2c727366d003ebd8c642167f4ef9debfb26" translate="yes" xml:space="preserve">
          <source>NonZeroI128</source>
          <target state="translated">NonZeroI128</target>
        </trans-unit>
        <trans-unit id="f7717a5e03944c9f7da8d5810a2b468333e1dd38" translate="yes" xml:space="preserve">
          <source>NonZeroI128::borrow</source>
          <target state="translated">NonZeroI128::borrow</target>
        </trans-unit>
        <trans-unit id="f964efe706788bf3868121236c120eec56d477d3" translate="yes" xml:space="preserve">
          <source>NonZeroI128::borrow_mut</source>
          <target state="translated">NonZeroI128::borrow_mut</target>
        </trans-unit>
        <trans-unit id="5ff8443b26f494de74b190931a04e5ad0a0f8bce" translate="yes" xml:space="preserve">
          <source>NonZeroI128::clamp</source>
          <target state="translated">NonZeroI128::clamp</target>
        </trans-unit>
        <trans-unit id="b41821f2bbc6d793e496bf8cf8e0961c8c6cf20e" translate="yes" xml:space="preserve">
          <source>NonZeroI128::clone</source>
          <target state="translated">NonZeroI128::clone</target>
        </trans-unit>
        <trans-unit id="86b0e71b93cf7cfc8d3f88502fefd684a7508a83" translate="yes" xml:space="preserve">
          <source>NonZeroI128::clone_from</source>
          <target state="translated">NonZeroI128::clone_from</target>
        </trans-unit>
        <trans-unit id="e87976c36fbb769fdf82eb4fc79b3850621b2d11" translate="yes" xml:space="preserve">
          <source>NonZeroI128::clone_into</source>
          <target state="translated">NonZeroI128::clone_into</target>
        </trans-unit>
        <trans-unit id="1fbab26faccad65c9594c9912db60595257c834d" translate="yes" xml:space="preserve">
          <source>NonZeroI128::cmp</source>
          <target state="translated">NonZeroI128::cmp</target>
        </trans-unit>
        <trans-unit id="e40f0ecb53bba7364d61eeddde211916e2de23b0" translate="yes" xml:space="preserve">
          <source>NonZeroI128::eq</source>
          <target state="translated">NonZeroI128::eq</target>
        </trans-unit>
        <trans-unit id="06203fb0241e3db251fdbeb37b55ecf55bc73b90" translate="yes" xml:space="preserve">
          <source>NonZeroI128::fmt</source>
          <target state="translated">NonZeroI128::fmt</target>
        </trans-unit>
        <trans-unit id="0fc860ac20708b78eba2f88aebf4c0cae43f1b01" translate="yes" xml:space="preserve">
          <source>NonZeroI128::from</source>
          <target state="translated">NonZeroI128::from</target>
        </trans-unit>
        <trans-unit id="e9225e88cc3a187fc6e8da37813f50d8aace8352" translate="yes" xml:space="preserve">
          <source>NonZeroI128::from_str</source>
          <target state="translated">NonZeroI128::from_str</target>
        </trans-unit>
        <trans-unit id="1060cfd82a1c5a4f9319951b3ccf33667960e338" translate="yes" xml:space="preserve">
          <source>NonZeroI128::ge</source>
          <target state="translated">NonZeroI128::ge</target>
        </trans-unit>
        <trans-unit id="1174fff40e9915f0fddc11dc5e858638caff1eb7" translate="yes" xml:space="preserve">
          <source>NonZeroI128::get</source>
          <target state="translated">NonZeroI128::get</target>
        </trans-unit>
        <trans-unit id="6360aa3b732a77c2367a197d6649d264398a3733" translate="yes" xml:space="preserve">
          <source>NonZeroI128::gt</source>
          <target state="translated">NonZeroI128::gt</target>
        </trans-unit>
        <trans-unit id="74c9ab59cffa5d7149b9a4669f4269b74eeb9074" translate="yes" xml:space="preserve">
          <source>NonZeroI128::hash</source>
          <target state="translated">NonZeroI128::hash</target>
        </trans-unit>
        <trans-unit id="683d8b9cc521cc55c631921795be0979d992e3f0" translate="yes" xml:space="preserve">
          <source>NonZeroI128::hash_slice</source>
          <target state="translated">NonZeroI128::hash_slice</target>
        </trans-unit>
        <trans-unit id="aa52174afecb1310862de00467bdc35c65937a26" translate="yes" xml:space="preserve">
          <source>NonZeroI128::into</source>
          <target state="translated">NonZeroI128::into</target>
        </trans-unit>
        <trans-unit id="148aa4d7eea87fc4622065d40fb8f2ec58899a47" translate="yes" xml:space="preserve">
          <source>NonZeroI128::le</source>
          <target state="translated">NonZeroI128::le</target>
        </trans-unit>
        <trans-unit id="4cab526460d9eafdf6e790d31dfeefc0f6385568" translate="yes" xml:space="preserve">
          <source>NonZeroI128::lt</source>
          <target state="translated">NonZeroI128::lt</target>
        </trans-unit>
        <trans-unit id="c0e0f0d6f1984e61de46b50df3dd15bb2c3be699" translate="yes" xml:space="preserve">
          <source>NonZeroI128::max</source>
          <target state="translated">NonZeroI128::max</target>
        </trans-unit>
        <trans-unit id="afd96d69d525973449f87aee12afd0af77bb90ff" translate="yes" xml:space="preserve">
          <source>NonZeroI128::min</source>
          <target state="translated">NonZeroI128::min</target>
        </trans-unit>
        <trans-unit id="246cde0659cbc3a878d28d1aa05929c570deac33" translate="yes" xml:space="preserve">
          <source>NonZeroI128::ne</source>
          <target state="translated">NonZeroI128::ne</target>
        </trans-unit>
        <trans-unit id="8673425a72ca5491b6fece38839c045e52eb4d36" translate="yes" xml:space="preserve">
          <source>NonZeroI128::new</source>
          <target state="translated">NonZeroI128::new</target>
        </trans-unit>
        <trans-unit id="83c86c3acc20bd4fdf03572b0722c1f12370f0bb" translate="yes" xml:space="preserve">
          <source>NonZeroI128::new_unchecked</source>
          <target state="translated">NonZeroI128::new_unchecked</target>
        </trans-unit>
        <trans-unit id="7d31a0e09cd71a4a287a5059ffc925fb40c7ce05" translate="yes" xml:space="preserve">
          <source>NonZeroI128::partial_cmp</source>
          <target state="translated">NonZeroI128::partial_cmp</target>
        </trans-unit>
        <trans-unit id="608c27b25bdd1b009cc3a24d8a6782000bd55a1c" translate="yes" xml:space="preserve">
          <source>NonZeroI128::to_owned</source>
          <target state="translated">NonZeroI128::to_owned</target>
        </trans-unit>
        <trans-unit id="744cd6d60888a33636a82b0368460edf2109a4f4" translate="yes" xml:space="preserve">
          <source>NonZeroI128::to_string</source>
          <target state="translated">NonZeroI128::to_string</target>
        </trans-unit>
        <trans-unit id="ac99be0bfb14a319fad21b69b5e280921b9604e7" translate="yes" xml:space="preserve">
          <source>NonZeroI128::try_from</source>
          <target state="translated">NonZeroI128::try_from</target>
        </trans-unit>
        <trans-unit id="2abe344dbf2f82320c3d223157d57b6766d23549" translate="yes" xml:space="preserve">
          <source>NonZeroI128::try_into</source>
          <target state="translated">NonZeroI128::try_into</target>
        </trans-unit>
        <trans-unit id="10a577a305c3efc3499cc94da566386465669213" translate="yes" xml:space="preserve">
          <source>NonZeroI128::type_id</source>
          <target state="translated">NonZeroI128::type_id</target>
        </trans-unit>
        <trans-unit id="36f429958b2bd2e0923475b148a0c1f6e808e911" translate="yes" xml:space="preserve">
          <source>NonZeroI16</source>
          <target state="translated">NonZeroI16</target>
        </trans-unit>
        <trans-unit id="18b48de75cdc24dca01c5ee1c28e20115a7eb2a1" translate="yes" xml:space="preserve">
          <source>NonZeroI16::borrow</source>
          <target state="translated">NonZeroI16::borrow</target>
        </trans-unit>
        <trans-unit id="bdbca21815164e23bce622eb47091fb5f9f2176c" translate="yes" xml:space="preserve">
          <source>NonZeroI16::borrow_mut</source>
          <target state="translated">NonZeroI16::borrow_mut</target>
        </trans-unit>
        <trans-unit id="2541826a258687d3b644073478113268e63c74af" translate="yes" xml:space="preserve">
          <source>NonZeroI16::clamp</source>
          <target state="translated">NonZeroI16::clamp</target>
        </trans-unit>
        <trans-unit id="115ee98eb9f17414d1638645fa06af3167003827" translate="yes" xml:space="preserve">
          <source>NonZeroI16::clone</source>
          <target state="translated">NonZeroI16::clone</target>
        </trans-unit>
        <trans-unit id="0278b33294858e10f554d1971ffc6f87bb8f5b09" translate="yes" xml:space="preserve">
          <source>NonZeroI16::clone_from</source>
          <target state="translated">NonZeroI16::clone_from</target>
        </trans-unit>
        <trans-unit id="c7c71d2e0fcced1b160e7459dff80d6f48dcbc4f" translate="yes" xml:space="preserve">
          <source>NonZeroI16::clone_into</source>
          <target state="translated">NonZeroI16::clone_into</target>
        </trans-unit>
        <trans-unit id="850888fdd17f8d9104362438c1677057b27654a4" translate="yes" xml:space="preserve">
          <source>NonZeroI16::cmp</source>
          <target state="translated">NonZeroI16::cmp</target>
        </trans-unit>
        <trans-unit id="f05c890da588a6175c01f462a0b77681853ea3b1" translate="yes" xml:space="preserve">
          <source>NonZeroI16::eq</source>
          <target state="translated">NonZeroI16::eq</target>
        </trans-unit>
        <trans-unit id="afd24843e5add4461be3e24eb291a9cc7627956c" translate="yes" xml:space="preserve">
          <source>NonZeroI16::fmt</source>
          <target state="translated">NonZeroI16::fmt</target>
        </trans-unit>
        <trans-unit id="4858ff995b8e659abd51265d63ea466463440d7f" translate="yes" xml:space="preserve">
          <source>NonZeroI16::from</source>
          <target state="translated">NonZeroI16::from</target>
        </trans-unit>
        <trans-unit id="e029bc06979cac03c696126c7078fc97b9d215f8" translate="yes" xml:space="preserve">
          <source>NonZeroI16::from_str</source>
          <target state="translated">NonZeroI16::from_str</target>
        </trans-unit>
        <trans-unit id="bafd6163144db642a0a88ae9a0d1f67a9aa327c8" translate="yes" xml:space="preserve">
          <source>NonZeroI16::ge</source>
          <target state="translated">NonZeroI16::ge</target>
        </trans-unit>
        <trans-unit id="8aabc8e5c65d44f1317cc2c944b8544a7d7743b4" translate="yes" xml:space="preserve">
          <source>NonZeroI16::get</source>
          <target state="translated">NonZeroI16::get</target>
        </trans-unit>
        <trans-unit id="f4bd402ef0cb908aeee7f003297047e0d4730ffe" translate="yes" xml:space="preserve">
          <source>NonZeroI16::gt</source>
          <target state="translated">NonZeroI16::gt</target>
        </trans-unit>
        <trans-unit id="eea24fe60c2ee511de571b916e274e0b8b9953ea" translate="yes" xml:space="preserve">
          <source>NonZeroI16::hash</source>
          <target state="translated">NonZeroI16::hash</target>
        </trans-unit>
        <trans-unit id="2072b7c0817666ffd6461a331c7f56a7e3159241" translate="yes" xml:space="preserve">
          <source>NonZeroI16::hash_slice</source>
          <target state="translated">NonZeroI16::hash_slice</target>
        </trans-unit>
        <trans-unit id="609c336f653a5586992a687fdc21a4e12e0e5bfc" translate="yes" xml:space="preserve">
          <source>NonZeroI16::into</source>
          <target state="translated">NonZeroI16::into</target>
        </trans-unit>
        <trans-unit id="dcd26dca67e989e320ea7d8ce4a6b4b2f5a19253" translate="yes" xml:space="preserve">
          <source>NonZeroI16::le</source>
          <target state="translated">NonZeroI16::le</target>
        </trans-unit>
        <trans-unit id="764441ce7cfb74845e4e5601e7c04d15cb44d34d" translate="yes" xml:space="preserve">
          <source>NonZeroI16::lt</source>
          <target state="translated">NonZeroI16::lt</target>
        </trans-unit>
        <trans-unit id="ba011aa8171b9001b2fd20e4d332efc5ad115b12" translate="yes" xml:space="preserve">
          <source>NonZeroI16::max</source>
          <target state="translated">NonZeroI16::max</target>
        </trans-unit>
        <trans-unit id="a323327b77c7bebd588241f8e49fcd0eb80d98c1" translate="yes" xml:space="preserve">
          <source>NonZeroI16::min</source>
          <target state="translated">NonZeroI16::min</target>
        </trans-unit>
        <trans-unit id="2ea2360fbbb5c24f384364e47a1ccf667fabf208" translate="yes" xml:space="preserve">
          <source>NonZeroI16::ne</source>
          <target state="translated">NonZeroI16::ne</target>
        </trans-unit>
        <trans-unit id="8a2d9c5311b2f8e5e740b1521cf3f032afe2075a" translate="yes" xml:space="preserve">
          <source>NonZeroI16::new</source>
          <target state="translated">NonZeroI16::new</target>
        </trans-unit>
        <trans-unit id="d31ab8bc0d5d31927c609f1a69be30fb3accda97" translate="yes" xml:space="preserve">
          <source>NonZeroI16::new_unchecked</source>
          <target state="translated">NonZeroI16::new_unchecked</target>
        </trans-unit>
        <trans-unit id="9f248594130914dc8c1850b1503ca6a5baa9ab10" translate="yes" xml:space="preserve">
          <source>NonZeroI16::partial_cmp</source>
          <target state="translated">NonZeroI16::partial_cmp</target>
        </trans-unit>
        <trans-unit id="e47f6505b2ad746102f22ad01953cb709a47b9ca" translate="yes" xml:space="preserve">
          <source>NonZeroI16::to_owned</source>
          <target state="translated">NonZeroI16::to_owned</target>
        </trans-unit>
        <trans-unit id="9e491563b10305c5dc822fc5b251f24741e46929" translate="yes" xml:space="preserve">
          <source>NonZeroI16::to_string</source>
          <target state="translated">NonZeroI16::to_string</target>
        </trans-unit>
        <trans-unit id="f4ff4d972a8c42fa8c0abaffc2f1e2b76fcb4197" translate="yes" xml:space="preserve">
          <source>NonZeroI16::try_from</source>
          <target state="translated">NonZeroI16::try_from</target>
        </trans-unit>
        <trans-unit id="63b8ff5cf42ec223a0adb54868428b7e995a5c22" translate="yes" xml:space="preserve">
          <source>NonZeroI16::try_into</source>
          <target state="translated">NonZeroI16::try_into</target>
        </trans-unit>
        <trans-unit id="c06a21dec83a42f8edb2e0d6693bc0ed2ab66da7" translate="yes" xml:space="preserve">
          <source>NonZeroI16::type_id</source>
          <target state="translated">NonZeroI16::type_id</target>
        </trans-unit>
        <trans-unit id="e97bcb5feaee0189523545e2b1d1eaf6c4e683e0" translate="yes" xml:space="preserve">
          <source>NonZeroI32</source>
          <target state="translated">NonZeroI32</target>
        </trans-unit>
        <trans-unit id="54c92b19f0c002e52d95b9a54c687cabaec7d0c3" translate="yes" xml:space="preserve">
          <source>NonZeroI32::borrow</source>
          <target state="translated">NonZeroI32::borrow</target>
        </trans-unit>
        <trans-unit id="6269e913feb8c230d29ea7ab62da579bdbf5a4eb" translate="yes" xml:space="preserve">
          <source>NonZeroI32::borrow_mut</source>
          <target state="translated">NonZeroI32::borrow_mut</target>
        </trans-unit>
        <trans-unit id="1224c3cd7e71ba3386431b31298d37d70f8c5b82" translate="yes" xml:space="preserve">
          <source>NonZeroI32::clamp</source>
          <target state="translated">NonZeroI32::clamp</target>
        </trans-unit>
        <trans-unit id="84582bf1efcf9bffacf576b2dc9d228ded21783f" translate="yes" xml:space="preserve">
          <source>NonZeroI32::clone</source>
          <target state="translated">NonZeroI32::clone</target>
        </trans-unit>
        <trans-unit id="6d253c4ffdb7629f523cd7bb9f9e369a62759084" translate="yes" xml:space="preserve">
          <source>NonZeroI32::clone_from</source>
          <target state="translated">NonZeroI32::clone_from</target>
        </trans-unit>
        <trans-unit id="1193f158b2ad7d7a268d3f866cb7f7b1315214d1" translate="yes" xml:space="preserve">
          <source>NonZeroI32::clone_into</source>
          <target state="translated">NonZeroI32::clone_into</target>
        </trans-unit>
        <trans-unit id="4b603b1e9d2c2afaaf494daaf899ac95dbaaf60d" translate="yes" xml:space="preserve">
          <source>NonZeroI32::cmp</source>
          <target state="translated">NonZeroI32::cmp</target>
        </trans-unit>
        <trans-unit id="36ea7e2e5a4bb27588581579d297e2d75bde8c04" translate="yes" xml:space="preserve">
          <source>NonZeroI32::eq</source>
          <target state="translated">NonZeroI32::eq</target>
        </trans-unit>
        <trans-unit id="1edda6e591f89ce442f2cb26f60edda071d57e45" translate="yes" xml:space="preserve">
          <source>NonZeroI32::fmt</source>
          <target state="translated">NonZeroI32::fmt</target>
        </trans-unit>
        <trans-unit id="ddd4914f74fdfcbf44e61dac8ed824dc7daf8835" translate="yes" xml:space="preserve">
          <source>NonZeroI32::from</source>
          <target state="translated">NonZeroI32::from</target>
        </trans-unit>
        <trans-unit id="40c6ed7e5bb0241e56fda5056b11bd5c06468ef7" translate="yes" xml:space="preserve">
          <source>NonZeroI32::from_str</source>
          <target state="translated">NonZeroI32::from_str</target>
        </trans-unit>
        <trans-unit id="ade03fa8f0e3d00c9d57318b69563c321a5de2eb" translate="yes" xml:space="preserve">
          <source>NonZeroI32::ge</source>
          <target state="translated">NonZeroI32::ge</target>
        </trans-unit>
        <trans-unit id="1d06e8a039855892a9b222f01348adf7e49edc4d" translate="yes" xml:space="preserve">
          <source>NonZeroI32::get</source>
          <target state="translated">NonZeroI32::get</target>
        </trans-unit>
        <trans-unit id="fa60ed7434a0539f3d9490e5fd97303495e8e4c6" translate="yes" xml:space="preserve">
          <source>NonZeroI32::gt</source>
          <target state="translated">NonZeroI32::gt</target>
        </trans-unit>
        <trans-unit id="f8325277d4aaaad37e3f8e3f7eea57d33a82b14d" translate="yes" xml:space="preserve">
          <source>NonZeroI32::hash</source>
          <target state="translated">NonZeroI32::hash</target>
        </trans-unit>
        <trans-unit id="15d30eee444980fbb702c19bb0e763a3a3edcf54" translate="yes" xml:space="preserve">
          <source>NonZeroI32::hash_slice</source>
          <target state="translated">NonZeroI32::hash_slice</target>
        </trans-unit>
        <trans-unit id="803e758732aa4ff1933498c8c223c849e07ecb60" translate="yes" xml:space="preserve">
          <source>NonZeroI32::into</source>
          <target state="translated">NonZeroI32::into</target>
        </trans-unit>
        <trans-unit id="790804224c71a8a913941fd99262449cfc4eae1f" translate="yes" xml:space="preserve">
          <source>NonZeroI32::le</source>
          <target state="translated">NonZeroI32::le</target>
        </trans-unit>
        <trans-unit id="67201699a9447f0b39d54ba4f84c3b95336721f4" translate="yes" xml:space="preserve">
          <source>NonZeroI32::lt</source>
          <target state="translated">NonZeroI32::lt</target>
        </trans-unit>
        <trans-unit id="ed55b8cb9ce6596e0102020b3149699afc739afa" translate="yes" xml:space="preserve">
          <source>NonZeroI32::max</source>
          <target state="translated">NonZeroI32::max</target>
        </trans-unit>
        <trans-unit id="ea9de8a6d3342c8565ee626a42eaee51ddecb252" translate="yes" xml:space="preserve">
          <source>NonZeroI32::min</source>
          <target state="translated">NonZeroI32::min</target>
        </trans-unit>
        <trans-unit id="b4954c9a76b0d358e8ac80094df9a4364fff4cb7" translate="yes" xml:space="preserve">
          <source>NonZeroI32::ne</source>
          <target state="translated">NonZeroI32::ne</target>
        </trans-unit>
        <trans-unit id="6049048c2192264cafbbf66dce8946d4e59179cf" translate="yes" xml:space="preserve">
          <source>NonZeroI32::new</source>
          <target state="translated">NonZeroI32::new</target>
        </trans-unit>
        <trans-unit id="fffc2d80845e3795deaddee315cce1ed09540038" translate="yes" xml:space="preserve">
          <source>NonZeroI32::new_unchecked</source>
          <target state="translated">NonZeroI32::new_unchecked</target>
        </trans-unit>
        <trans-unit id="da01db7b3738e2a15dd55235e9cf2517c43505ad" translate="yes" xml:space="preserve">
          <source>NonZeroI32::partial_cmp</source>
          <target state="translated">NonZeroI32::partial_cmp</target>
        </trans-unit>
        <trans-unit id="86e152a0c12749dda033dd64bbf2468b20925901" translate="yes" xml:space="preserve">
          <source>NonZeroI32::to_owned</source>
          <target state="translated">NonZeroI32::to_owned</target>
        </trans-unit>
        <trans-unit id="c8e2c1746dcaaf891c7f0924e2a7d50565492f1c" translate="yes" xml:space="preserve">
          <source>NonZeroI32::to_string</source>
          <target state="translated">NonZeroI32::to_string</target>
        </trans-unit>
        <trans-unit id="55a921f848a7b22a94032abe096e9e693c57d8c2" translate="yes" xml:space="preserve">
          <source>NonZeroI32::try_from</source>
          <target state="translated">NonZeroI32::try_from</target>
        </trans-unit>
        <trans-unit id="153dc660977b7dbd63100838a1c1f00c97814fda" translate="yes" xml:space="preserve">
          <source>NonZeroI32::try_into</source>
          <target state="translated">NonZeroI32::try_into</target>
        </trans-unit>
        <trans-unit id="d326f8bf5b1e05bd3e854148e764814dfa31fec6" translate="yes" xml:space="preserve">
          <source>NonZeroI32::type_id</source>
          <target state="translated">NonZeroI32::type_id</target>
        </trans-unit>
        <trans-unit id="47326afc55d69221c5bab6f6fc50b489aa6e615c" translate="yes" xml:space="preserve">
          <source>NonZeroI64</source>
          <target state="translated">NonZeroI64</target>
        </trans-unit>
        <trans-unit id="dc475e1ce0d61071c86badb53c4876f712060aa4" translate="yes" xml:space="preserve">
          <source>NonZeroI64::borrow</source>
          <target state="translated">NonZeroI64::borrow</target>
        </trans-unit>
        <trans-unit id="b34344f17d4f0c2fd181fff34ce7e309683eb1f9" translate="yes" xml:space="preserve">
          <source>NonZeroI64::borrow_mut</source>
          <target state="translated">NonZeroI64::borrow_mut</target>
        </trans-unit>
        <trans-unit id="ed2423a4aa70c798c0ab5645f6d832bd412161f6" translate="yes" xml:space="preserve">
          <source>NonZeroI64::clamp</source>
          <target state="translated">NonZeroI64::clamp</target>
        </trans-unit>
        <trans-unit id="f5d711fdbab29c1437fb83b2a0f49dcbcc2c895c" translate="yes" xml:space="preserve">
          <source>NonZeroI64::clone</source>
          <target state="translated">NonZeroI64::clone</target>
        </trans-unit>
        <trans-unit id="267a861768f4cde9358a3ce3dea2c45f82d2d70c" translate="yes" xml:space="preserve">
          <source>NonZeroI64::clone_from</source>
          <target state="translated">NonZeroI64::clone_from</target>
        </trans-unit>
        <trans-unit id="5cb0bd8479d4a4e335894c67e9f47406638b985a" translate="yes" xml:space="preserve">
          <source>NonZeroI64::clone_into</source>
          <target state="translated">NonZeroI64::clone_into</target>
        </trans-unit>
        <trans-unit id="62c821c3e10a9bc5dda6564e62e097e6d1aaded4" translate="yes" xml:space="preserve">
          <source>NonZeroI64::cmp</source>
          <target state="translated">NonZeroI64::cmp</target>
        </trans-unit>
        <trans-unit id="69e086a251f574f1bcd8ddeee49f798091de65ae" translate="yes" xml:space="preserve">
          <source>NonZeroI64::eq</source>
          <target state="translated">NonZeroI64::eq</target>
        </trans-unit>
        <trans-unit id="4628e95346886a1385b96213a08e94cab6a3e3ec" translate="yes" xml:space="preserve">
          <source>NonZeroI64::fmt</source>
          <target state="translated">NonZeroI64::fmt</target>
        </trans-unit>
        <trans-unit id="fa74211c65ed03702df0d7fec92011a00e46da4e" translate="yes" xml:space="preserve">
          <source>NonZeroI64::from</source>
          <target state="translated">NonZeroI64::from</target>
        </trans-unit>
        <trans-unit id="374c31c818806d2d53cf7d6521ef765de951d640" translate="yes" xml:space="preserve">
          <source>NonZeroI64::from_str</source>
          <target state="translated">NonZeroI64::from_str</target>
        </trans-unit>
        <trans-unit id="716f09379283859a96964aa90f9488fffda7f930" translate="yes" xml:space="preserve">
          <source>NonZeroI64::ge</source>
          <target state="translated">NonZeroI64::ge</target>
        </trans-unit>
        <trans-unit id="2826557154d33d398abcd879206752804a2bdf65" translate="yes" xml:space="preserve">
          <source>NonZeroI64::get</source>
          <target state="translated">NonZeroI64::get</target>
        </trans-unit>
        <trans-unit id="c03423dc02e1ef948358b0f5f0ef5c13016b5d96" translate="yes" xml:space="preserve">
          <source>NonZeroI64::gt</source>
          <target state="translated">NonZeroI64::gt</target>
        </trans-unit>
        <trans-unit id="7c084405e2fa1d7847475c21cc64bd06540a721b" translate="yes" xml:space="preserve">
          <source>NonZeroI64::hash</source>
          <target state="translated">NonZeroI64::hash</target>
        </trans-unit>
        <trans-unit id="bb8f897598ee6dc20d33aa36af3c10e2b97e157a" translate="yes" xml:space="preserve">
          <source>NonZeroI64::hash_slice</source>
          <target state="translated">NonZeroI64::hash_slice</target>
        </trans-unit>
        <trans-unit id="ef8da458756764d04abbf9c4bf5a7d43687e9799" translate="yes" xml:space="preserve">
          <source>NonZeroI64::into</source>
          <target state="translated">NonZeroI64::into</target>
        </trans-unit>
        <trans-unit id="361205d1a32febcfc1190394e636de20cf9980ff" translate="yes" xml:space="preserve">
          <source>NonZeroI64::le</source>
          <target state="translated">NonZeroI64::le</target>
        </trans-unit>
        <trans-unit id="bfa76864905ebec51d3cd7370cb21f3b8325bc2a" translate="yes" xml:space="preserve">
          <source>NonZeroI64::lt</source>
          <target state="translated">NonZeroI64::lt</target>
        </trans-unit>
        <trans-unit id="d05fd485f6f48cbcf9797f21c7f72b7da774ef73" translate="yes" xml:space="preserve">
          <source>NonZeroI64::max</source>
          <target state="translated">NonZeroI64::max</target>
        </trans-unit>
        <trans-unit id="4445fa7cd5899e3dddfe813b834bacaadd0b1f16" translate="yes" xml:space="preserve">
          <source>NonZeroI64::min</source>
          <target state="translated">NonZeroI64::min</target>
        </trans-unit>
        <trans-unit id="0e8b97484e878d06b6ee68465379752feed3cd3d" translate="yes" xml:space="preserve">
          <source>NonZeroI64::ne</source>
          <target state="translated">NonZeroI64::ne</target>
        </trans-unit>
        <trans-unit id="bde2e9f1fb06520bab485b2e3afb4e80b33dba82" translate="yes" xml:space="preserve">
          <source>NonZeroI64::new</source>
          <target state="translated">NonZeroI64::new</target>
        </trans-unit>
        <trans-unit id="f82a0245493af04b7985ed399fa466dc4edc8ced" translate="yes" xml:space="preserve">
          <source>NonZeroI64::new_unchecked</source>
          <target state="translated">NonZeroI64::new_unchecked</target>
        </trans-unit>
        <trans-unit id="ff0c4a829e7306aac0aa333126abf09bbe21f706" translate="yes" xml:space="preserve">
          <source>NonZeroI64::partial_cmp</source>
          <target state="translated">NonZeroI64::partial_cmp</target>
        </trans-unit>
        <trans-unit id="12b3dd3db76faeb57eec7254b2c1977c25f88349" translate="yes" xml:space="preserve">
          <source>NonZeroI64::to_owned</source>
          <target state="translated">NonZeroI64::to_owned</target>
        </trans-unit>
        <trans-unit id="898927cce217ffb93b1463253607e0954996b3fd" translate="yes" xml:space="preserve">
          <source>NonZeroI64::to_string</source>
          <target state="translated">NonZeroI64::to_string</target>
        </trans-unit>
        <trans-unit id="2d19979b95b66165d9cce2a874b5b50774c07fee" translate="yes" xml:space="preserve">
          <source>NonZeroI64::try_from</source>
          <target state="translated">NonZeroI64::try_from</target>
        </trans-unit>
        <trans-unit id="a50be005ecf5a07bc843f676f748462b8adca096" translate="yes" xml:space="preserve">
          <source>NonZeroI64::try_into</source>
          <target state="translated">NonZeroI64::try_into</target>
        </trans-unit>
        <trans-unit id="0134deb92dae159c2082bceaef595cfc9df55dce" translate="yes" xml:space="preserve">
          <source>NonZeroI64::type_id</source>
          <target state="translated">NonZeroI64::type_id</target>
        </trans-unit>
        <trans-unit id="de2b631972cf994d47d76eac38bd59ef1aa6e707" translate="yes" xml:space="preserve">
          <source>NonZeroI8</source>
          <target state="translated">NonZeroI8</target>
        </trans-unit>
        <trans-unit id="02a97b1be1b57111983e0f301eaade35ec979636" translate="yes" xml:space="preserve">
          <source>NonZeroI8::borrow</source>
          <target state="translated">NonZeroI8::borrow</target>
        </trans-unit>
        <trans-unit id="585184585d76b6d884767a1ba1173bf3fdcf9087" translate="yes" xml:space="preserve">
          <source>NonZeroI8::borrow_mut</source>
          <target state="translated">NonZeroI8::borrow_mut</target>
        </trans-unit>
        <trans-unit id="61d82766a6745e76c9a921124d58b68ee8622344" translate="yes" xml:space="preserve">
          <source>NonZeroI8::clamp</source>
          <target state="translated">NonZeroI8::clamp</target>
        </trans-unit>
        <trans-unit id="9639aa6f98547170260a0dbed71fe42368a45037" translate="yes" xml:space="preserve">
          <source>NonZeroI8::clone</source>
          <target state="translated">NonZeroI8::clone</target>
        </trans-unit>
        <trans-unit id="69bea805436f5d9faeecb421d3ad1efbed040ab0" translate="yes" xml:space="preserve">
          <source>NonZeroI8::clone_from</source>
          <target state="translated">NonZeroI8::clone_from</target>
        </trans-unit>
        <trans-unit id="f79563630b90126fa16369923d147a8e6ffaf90f" translate="yes" xml:space="preserve">
          <source>NonZeroI8::clone_into</source>
          <target state="translated">NonZeroI8::clone_into</target>
        </trans-unit>
        <trans-unit id="2e5b078a7705aaa646d49606a0e296d4af0f1acd" translate="yes" xml:space="preserve">
          <source>NonZeroI8::cmp</source>
          <target state="translated">NonZeroI8::cmp</target>
        </trans-unit>
        <trans-unit id="cdfffa6f6db5c090ca460987b1da2d174ad3dd70" translate="yes" xml:space="preserve">
          <source>NonZeroI8::eq</source>
          <target state="translated">NonZeroI8::eq</target>
        </trans-unit>
        <trans-unit id="303fe1ff3066af96ac1869cf4c4fcfeeee433dc7" translate="yes" xml:space="preserve">
          <source>NonZeroI8::fmt</source>
          <target state="translated">NonZeroI8::fmt</target>
        </trans-unit>
        <trans-unit id="77bf7d94ae999f9b201e336425c9ca11763912ae" translate="yes" xml:space="preserve">
          <source>NonZeroI8::from</source>
          <target state="translated">NonZeroI8::from</target>
        </trans-unit>
        <trans-unit id="058ab838a9faa626f87b01a68a1ab8af9ceffa5e" translate="yes" xml:space="preserve">
          <source>NonZeroI8::from_str</source>
          <target state="translated">NonZeroI8::from_str</target>
        </trans-unit>
        <trans-unit id="5ffec8af45e4b9e098c857beafee4bb4710502df" translate="yes" xml:space="preserve">
          <source>NonZeroI8::ge</source>
          <target state="translated">NonZeroI8::ge</target>
        </trans-unit>
        <trans-unit id="39931bb71d49054bdf1fb8e4a5d156766e03a349" translate="yes" xml:space="preserve">
          <source>NonZeroI8::get</source>
          <target state="translated">NonZeroI8::get</target>
        </trans-unit>
        <trans-unit id="47babee6888e0103956b5d6fb324645bab23db7a" translate="yes" xml:space="preserve">
          <source>NonZeroI8::gt</source>
          <target state="translated">NonZeroI8::gt</target>
        </trans-unit>
        <trans-unit id="93874d53399c77a41bf9531800d5f0fa474a4cda" translate="yes" xml:space="preserve">
          <source>NonZeroI8::hash</source>
          <target state="translated">NonZeroI8::hash</target>
        </trans-unit>
        <trans-unit id="29013108ddf40e18600983e97e9034bd5257369c" translate="yes" xml:space="preserve">
          <source>NonZeroI8::hash_slice</source>
          <target state="translated">NonZeroI8::hash_slice</target>
        </trans-unit>
        <trans-unit id="037dc348d54512f4eac4bc525c27d1f766b25a1a" translate="yes" xml:space="preserve">
          <source>NonZeroI8::into</source>
          <target state="translated">NonZeroI8::into</target>
        </trans-unit>
        <trans-unit id="0515501fa1d050e6a321477214d1c4d9c56b0a91" translate="yes" xml:space="preserve">
          <source>NonZeroI8::le</source>
          <target state="translated">NonZeroI8::le</target>
        </trans-unit>
        <trans-unit id="7cad17cf5fce8924f80e26fc0cc84eaa9e833005" translate="yes" xml:space="preserve">
          <source>NonZeroI8::lt</source>
          <target state="translated">NonZeroI8::lt</target>
        </trans-unit>
        <trans-unit id="90330e65e0da907071c3c4c3d6a116bb84c932c4" translate="yes" xml:space="preserve">
          <source>NonZeroI8::max</source>
          <target state="translated">NonZeroI8::max</target>
        </trans-unit>
        <trans-unit id="e20ad8db00b5d962f11dd424a9bc3a6c8e774305" translate="yes" xml:space="preserve">
          <source>NonZeroI8::min</source>
          <target state="translated">NonZeroI8::min</target>
        </trans-unit>
        <trans-unit id="73e8e9fd3f901d81ee2336d6e8ea9cf220fba88b" translate="yes" xml:space="preserve">
          <source>NonZeroI8::ne</source>
          <target state="translated">NonZeroI8::ne</target>
        </trans-unit>
        <trans-unit id="af45d6c29f79e266eb5d7ab85309f358f8208a69" translate="yes" xml:space="preserve">
          <source>NonZeroI8::new</source>
          <target state="translated">NonZeroI8::new</target>
        </trans-unit>
        <trans-unit id="81a02f698c1e4f2332bb4e3e7c3edf4ff27a1c50" translate="yes" xml:space="preserve">
          <source>NonZeroI8::new_unchecked</source>
          <target state="translated">NonZeroI8::new_unchecked</target>
        </trans-unit>
        <trans-unit id="2686fbb343af79a855c02e59fa60522e101b42ae" translate="yes" xml:space="preserve">
          <source>NonZeroI8::partial_cmp</source>
          <target state="translated">NonZeroI8::partial_cmp</target>
        </trans-unit>
        <trans-unit id="cd75ff5beac899fb4e419778f9513cbe1ad0b2a5" translate="yes" xml:space="preserve">
          <source>NonZeroI8::to_owned</source>
          <target state="translated">NonZeroI8::to_owned</target>
        </trans-unit>
        <trans-unit id="2b4fc6493819df1f404760f50612536b8bbfc7bd" translate="yes" xml:space="preserve">
          <source>NonZeroI8::to_string</source>
          <target state="translated">NonZeroI8::to_string</target>
        </trans-unit>
        <trans-unit id="44995331a911be947ba3e877e13ce380ef4d9378" translate="yes" xml:space="preserve">
          <source>NonZeroI8::try_from</source>
          <target state="translated">NonZeroI8::try_from</target>
        </trans-unit>
        <trans-unit id="c6edd8a860f42d4c84935088ebf51ade98d95115" translate="yes" xml:space="preserve">
          <source>NonZeroI8::try_into</source>
          <target state="translated">NonZeroI8::try_into</target>
        </trans-unit>
        <trans-unit id="694926ab4cd6b261f66a7c4ea43bd5a538ca07a5" translate="yes" xml:space="preserve">
          <source>NonZeroI8::type_id</source>
          <target state="translated">NonZeroI8::type_id</target>
        </trans-unit>
        <trans-unit id="39eb2a5ae94e10b055d94f86300fae4bd3a2c861" translate="yes" xml:space="preserve">
          <source>NonZeroIsize</source>
          <target state="translated">NonZeroIsize</target>
        </trans-unit>
        <trans-unit id="4075b4a43affee6576128660a15087ef7d46f01c" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::borrow</source>
          <target state="translated">NonZeroIsize::borrow</target>
        </trans-unit>
        <trans-unit id="ec545959e67fee5329d2293a10abf7982b0e5d27" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::borrow_mut</source>
          <target state="translated">NonZeroIsize::borrow_mut</target>
        </trans-unit>
        <trans-unit id="a61bacb1affb3b3a864b9054448b3c878abd8923" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::clamp</source>
          <target state="translated">NonZeroIsize::clamp</target>
        </trans-unit>
        <trans-unit id="191e1ee11e03e2904eddf99c3224190191357bac" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::clone</source>
          <target state="translated">NonZeroIsize::clone</target>
        </trans-unit>
        <trans-unit id="5dc48b7609417f7ce614e10e63d58e556492bcf9" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::clone_from</source>
          <target state="translated">NonZeroIsize::clone_from</target>
        </trans-unit>
        <trans-unit id="d38a3dead1294ded03ccb72c57ad049cf009cb60" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::clone_into</source>
          <target state="translated">NonZeroIsize::clone_into</target>
        </trans-unit>
        <trans-unit id="ca7ed6d7cb5393e8a7ba6e95fd43e5b4d5bb7809" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::cmp</source>
          <target state="translated">NonZeroIsize::cmp</target>
        </trans-unit>
        <trans-unit id="2fe615f032ce982861bba71b45a232958641a0cd" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::eq</source>
          <target state="translated">NonZeroIsize::eq</target>
        </trans-unit>
        <trans-unit id="d9ec29b8a341c99081d89a3bd91dc15ff5f6812f" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::fmt</source>
          <target state="translated">NonZeroIsize::fmt</target>
        </trans-unit>
        <trans-unit id="817a465d80d81fe1b61c88aca0859799182b0ced" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::from</source>
          <target state="translated">NonZeroIsize::from</target>
        </trans-unit>
        <trans-unit id="d2cfcb21d317b6fab455622f5d899c19b4caab20" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::from_str</source>
          <target state="translated">NonZeroIsize::from_str</target>
        </trans-unit>
        <trans-unit id="955b4cb4cf6dd3e94857ccb753d3fe4d1fb111bb" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::ge</source>
          <target state="translated">NonZeroIsize::ge</target>
        </trans-unit>
        <trans-unit id="94dfb4eb2acf5d4199e2494aa3141f234b7ec552" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::get</source>
          <target state="translated">NonZeroIsize::get</target>
        </trans-unit>
        <trans-unit id="ee800c8db94226df90984d0310a1c3b583e90f13" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::gt</source>
          <target state="translated">NonZeroIsize::gt</target>
        </trans-unit>
        <trans-unit id="36fffe56efef4816a331398e4562a265e92bfb10" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::hash</source>
          <target state="translated">NonZeroIsize::hash</target>
        </trans-unit>
        <trans-unit id="cf00fd8ca399a52d34e9a8feac17a1b26fe0bcee" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::hash_slice</source>
          <target state="translated">NonZeroIsize::hash_slice</target>
        </trans-unit>
        <trans-unit id="882f34faf603e4c98fc372332977f902076ab5a0" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::into</source>
          <target state="translated">NonZeroIsize::into</target>
        </trans-unit>
        <trans-unit id="0d24785358cfb27caebb3a32bf5c7678cb2e30ee" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::le</source>
          <target state="translated">NonZeroIsize::le</target>
        </trans-unit>
        <trans-unit id="f8f7c7c85f4aab3786722bfd2d7aefb8b686bd6e" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::lt</source>
          <target state="translated">NonZeroIsize::lt</target>
        </trans-unit>
        <trans-unit id="19c94dc6fa11f95d35e7c7c4f115e86acb80fc00" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::max</source>
          <target state="translated">NonZeroIsize::max</target>
        </trans-unit>
        <trans-unit id="9bf079159116a040501bb2bee238b98de390d6b7" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::min</source>
          <target state="translated">NonZeroIsize::min</target>
        </trans-unit>
        <trans-unit id="78420580500ef47e7d9c63e510686240542d08c3" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::ne</source>
          <target state="translated">NonZeroIsize::ne</target>
        </trans-unit>
        <trans-unit id="9b5caea647537e28a582a1b68216f403a92bdea7" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::new</source>
          <target state="translated">NonZeroIsize::new</target>
        </trans-unit>
        <trans-unit id="f92bdba42fa66b6909fc4ad5b38b7d0a8808cced" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::new_unchecked</source>
          <target state="translated">NonZeroIsize::new_unchecked</target>
        </trans-unit>
        <trans-unit id="2b55347d5d71b451caf945bb5b1b4cacc28afc98" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::partial_cmp</source>
          <target state="translated">NonZeroIsize::partial_cmp</target>
        </trans-unit>
        <trans-unit id="717d7fcf3dd2db66a5b657bdcd5df3b72e3ca14d" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::to_owned</source>
          <target state="translated">NonZeroIsize::to_owned</target>
        </trans-unit>
        <trans-unit id="1a88ee49d5b8865561ef951ccbe17add31975cf3" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::to_string</source>
          <target state="translated">NonZeroIsize::to_string</target>
        </trans-unit>
        <trans-unit id="aeed335ba630cd0f02972d3792f625986e0da579" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::try_from</source>
          <target state="translated">NonZeroIsize::try_from</target>
        </trans-unit>
        <trans-unit id="3b703381eaac2b4d7c2b865c4b56d5e07385cb0d" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::try_into</source>
          <target state="translated">NonZeroIsize::try_into</target>
        </trans-unit>
        <trans-unit id="cfd236d892fc65a9056aca980b3c2a0c1b08fc90" translate="yes" xml:space="preserve">
          <source>NonZeroIsize::type_id</source>
          <target state="translated">NonZeroIsize::type_id</target>
        </trans-unit>
        <trans-unit id="0044d6a252510995bf93ecb1dd199ad6280b0298" translate="yes" xml:space="preserve">
          <source>NonZeroU128</source>
          <target state="translated">NonZeroU128</target>
        </trans-unit>
        <trans-unit id="d33cdcef0f6bce3ae4d1c100820f29fb8e8de6be" translate="yes" xml:space="preserve">
          <source>NonZeroU128::borrow</source>
          <target state="translated">NonZeroU128::borrow</target>
        </trans-unit>
        <trans-unit id="3f647fdd084e34cb19c62fa95a5df0d0b02f7830" translate="yes" xml:space="preserve">
          <source>NonZeroU128::borrow_mut</source>
          <target state="translated">NonZeroU128::borrow_mut</target>
        </trans-unit>
        <trans-unit id="6dd84c262632c4ce99cd20fd6d4cce46ad766f6c" translate="yes" xml:space="preserve">
          <source>NonZeroU128::clamp</source>
          <target state="translated">NonZeroU128::clamp</target>
        </trans-unit>
        <trans-unit id="54a6620faedc0c0d7296506b17b24167c833f343" translate="yes" xml:space="preserve">
          <source>NonZeroU128::clone</source>
          <target state="translated">NonZeroU128::clone</target>
        </trans-unit>
        <trans-unit id="361f908936891415e62dbb126d73b91cdd535809" translate="yes" xml:space="preserve">
          <source>NonZeroU128::clone_from</source>
          <target state="translated">NonZeroU128::clone_from</target>
        </trans-unit>
        <trans-unit id="95b289a7b3408284866f730f49c7cefc4940ea32" translate="yes" xml:space="preserve">
          <source>NonZeroU128::clone_into</source>
          <target state="translated">NonZeroU128::clone_into</target>
        </trans-unit>
        <trans-unit id="939d6fc64a58c3aad5a29fd29b5cb1ddf18ffa03" translate="yes" xml:space="preserve">
          <source>NonZeroU128::cmp</source>
          <target state="translated">NonZeroU128::cmp</target>
        </trans-unit>
        <trans-unit id="e3d76ecf73e9d2bddfdc690dd3583c65cb4e8c6b" translate="yes" xml:space="preserve">
          <source>NonZeroU128::eq</source>
          <target state="translated">NonZeroU128::eq</target>
        </trans-unit>
        <trans-unit id="cf1f402d3b803071978d5c02ef20145ad5e75f93" translate="yes" xml:space="preserve">
          <source>NonZeroU128::fmt</source>
          <target state="translated">NonZeroU128::fmt</target>
        </trans-unit>
        <trans-unit id="1cb47e3de5cf28c31000e229db50c161ce7a7c28" translate="yes" xml:space="preserve">
          <source>NonZeroU128::from</source>
          <target state="translated">NonZeroU128::from</target>
        </trans-unit>
        <trans-unit id="04a3a610d61c54fe04e5c4fb7dc3736c9608563d" translate="yes" xml:space="preserve">
          <source>NonZeroU128::from_str</source>
          <target state="translated">NonZeroU128::from_str</target>
        </trans-unit>
        <trans-unit id="b8dacf31071a7dcf6913c1d5f60e1467a0c7b52c" translate="yes" xml:space="preserve">
          <source>NonZeroU128::ge</source>
          <target state="translated">NonZeroU128::ge</target>
        </trans-unit>
        <trans-unit id="bc070e9b4c11812f956c2c3942dbeeb60e1907d7" translate="yes" xml:space="preserve">
          <source>NonZeroU128::get</source>
          <target state="translated">NonZeroU128::get</target>
        </trans-unit>
        <trans-unit id="bf61b92a5979f684a74d24d35e7223a980f74915" translate="yes" xml:space="preserve">
          <source>NonZeroU128::gt</source>
          <target state="translated">NonZeroU128::gt</target>
        </trans-unit>
        <trans-unit id="66888226d70c2e49258374545510affc0bdd95ec" translate="yes" xml:space="preserve">
          <source>NonZeroU128::hash</source>
          <target state="translated">NonZeroU128::hash</target>
        </trans-unit>
        <trans-unit id="11f423a193c168fdc5ff7611f300ac57dfd70171" translate="yes" xml:space="preserve">
          <source>NonZeroU128::hash_slice</source>
          <target state="translated">NonZeroU128::hash_slice</target>
        </trans-unit>
        <trans-unit id="b29bc2e8eba682c97ef473e0bd889b9b87439b43" translate="yes" xml:space="preserve">
          <source>NonZeroU128::into</source>
          <target state="translated">NonZeroU128::into</target>
        </trans-unit>
        <trans-unit id="dd97daae9ce7a0b9ab85c6cf73bd03826d2dacad" translate="yes" xml:space="preserve">
          <source>NonZeroU128::le</source>
          <target state="translated">NonZeroU128::le</target>
        </trans-unit>
        <trans-unit id="4c5ffedb155e243e75eb535bd12d40831e3c5755" translate="yes" xml:space="preserve">
          <source>NonZeroU128::lt</source>
          <target state="translated">NonZeroU128::lt</target>
        </trans-unit>
        <trans-unit id="cefe09ff65521779b9f59c83b8f0425d577bc41f" translate="yes" xml:space="preserve">
          <source>NonZeroU128::max</source>
          <target state="translated">NonZeroU128::max</target>
        </trans-unit>
        <trans-unit id="66bc9dddfd54e67077a2f3098f5b87831d049d31" translate="yes" xml:space="preserve">
          <source>NonZeroU128::min</source>
          <target state="translated">NonZeroU128::min</target>
        </trans-unit>
        <trans-unit id="1af4ac1a95b7f36c718aa21d748fb13ce2e824ee" translate="yes" xml:space="preserve">
          <source>NonZeroU128::ne</source>
          <target state="translated">NonZeroU128::ne</target>
        </trans-unit>
        <trans-unit id="774e6ffc8823e6223f1ffa87fab102416ea1637d" translate="yes" xml:space="preserve">
          <source>NonZeroU128::new</source>
          <target state="translated">NonZeroU128::new</target>
        </trans-unit>
        <trans-unit id="80588590ec2ef5a265edf292dba20ca05ed9ff1d" translate="yes" xml:space="preserve">
          <source>NonZeroU128::new_unchecked</source>
          <target state="translated">NonZeroU128::new_unchecked</target>
        </trans-unit>
        <trans-unit id="4f33be7cbf8c678c8187f371f4f5d027a69d0647" translate="yes" xml:space="preserve">
          <source>NonZeroU128::partial_cmp</source>
          <target state="translated">NonZeroU128::partial_cmp</target>
        </trans-unit>
        <trans-unit id="3dea4243dcea470ba4d4f180f81f6eecca14e04e" translate="yes" xml:space="preserve">
          <source>NonZeroU128::to_owned</source>
          <target state="translated">NonZeroU128::to_owned</target>
        </trans-unit>
        <trans-unit id="24acde94eff6342ff2fba2e9d267a2fdb25acd94" translate="yes" xml:space="preserve">
          <source>NonZeroU128::to_string</source>
          <target state="translated">NonZeroU128::to_string</target>
        </trans-unit>
        <trans-unit id="b21ef37ea8ca3269318a2c852c86163df43432be" translate="yes" xml:space="preserve">
          <source>NonZeroU128::try_from</source>
          <target state="translated">NonZeroU128::try_from</target>
        </trans-unit>
        <trans-unit id="6c546400526ea1ed6ea89201862535a6549699f1" translate="yes" xml:space="preserve">
          <source>NonZeroU128::try_into</source>
          <target state="translated">NonZeroU128::try_into</target>
        </trans-unit>
        <trans-unit id="5b4b31430f7adfc4f26872a558ae35d43d7da9ff" translate="yes" xml:space="preserve">
          <source>NonZeroU128::type_id</source>
          <target state="translated">NonZeroU128::type_id</target>
        </trans-unit>
        <trans-unit id="70d9b595abe5e850f484266bc477e3d70b58c790" translate="yes" xml:space="preserve">
          <source>NonZeroU16</source>
          <target state="translated">NonZeroU16</target>
        </trans-unit>
        <trans-unit id="a2e830bdc612e459ecbf94a5d900db9adf22d552" translate="yes" xml:space="preserve">
          <source>NonZeroU16::borrow</source>
          <target state="translated">NonZeroU16::borrow</target>
        </trans-unit>
        <trans-unit id="84a81450427618c9efd99c6046bdcfcb15a8f7bb" translate="yes" xml:space="preserve">
          <source>NonZeroU16::borrow_mut</source>
          <target state="translated">NonZeroU16::borrow_mut</target>
        </trans-unit>
        <trans-unit id="4eb94e8343ecdde314f21ae1472878c2e5be4f43" translate="yes" xml:space="preserve">
          <source>NonZeroU16::clamp</source>
          <target state="translated">NonZeroU16::clamp</target>
        </trans-unit>
        <trans-unit id="4f9cad5198a59312536b10433f5195716121d4f5" translate="yes" xml:space="preserve">
          <source>NonZeroU16::clone</source>
          <target state="translated">NonZeroU16::clone</target>
        </trans-unit>
        <trans-unit id="d8ef4ec4d957a02aaa882335c6f3d0a67035a3c7" translate="yes" xml:space="preserve">
          <source>NonZeroU16::clone_from</source>
          <target state="translated">NonZeroU16::clone_from</target>
        </trans-unit>
        <trans-unit id="3808aec2130dc48a153e5a520294b26744b3e702" translate="yes" xml:space="preserve">
          <source>NonZeroU16::clone_into</source>
          <target state="translated">NonZeroU16::clone_into</target>
        </trans-unit>
        <trans-unit id="9d0062487248621e89b96fe5bf643abe821bb17a" translate="yes" xml:space="preserve">
          <source>NonZeroU16::cmp</source>
          <target state="translated">NonZeroU16::cmp</target>
        </trans-unit>
        <trans-unit id="41a2d5bd4797b2d1eb6b20161786347a9f0dd370" translate="yes" xml:space="preserve">
          <source>NonZeroU16::eq</source>
          <target state="translated">NonZeroU16::eq</target>
        </trans-unit>
        <trans-unit id="4e58083d69fb5df5404d73e024559cb858948a6f" translate="yes" xml:space="preserve">
          <source>NonZeroU16::fmt</source>
          <target state="translated">NonZeroU16::fmt</target>
        </trans-unit>
        <trans-unit id="f40fdab8202fbcb58f6fbdbc2b16303b0de2f1ee" translate="yes" xml:space="preserve">
          <source>NonZeroU16::from</source>
          <target state="translated">NonZeroU16::from</target>
        </trans-unit>
        <trans-unit id="97bb49319fe5098129502422bda785cd16c5234a" translate="yes" xml:space="preserve">
          <source>NonZeroU16::from_str</source>
          <target state="translated">NonZeroU16::from_str</target>
        </trans-unit>
        <trans-unit id="12e676e778fbbdbfffb5d2b98fabd5a4306c10e5" translate="yes" xml:space="preserve">
          <source>NonZeroU16::ge</source>
          <target state="translated">NonZeroU16::ge</target>
        </trans-unit>
        <trans-unit id="1313691aadbfef04a5d2c70132da7c9072b9834a" translate="yes" xml:space="preserve">
          <source>NonZeroU16::get</source>
          <target state="translated">NonZeroU16::get</target>
        </trans-unit>
        <trans-unit id="e4a7103dfe5dfdaccf5405172a6bfb6564cbb39e" translate="yes" xml:space="preserve">
          <source>NonZeroU16::gt</source>
          <target state="translated">NonZeroU16::gt</target>
        </trans-unit>
        <trans-unit id="4843257888dce95e20cf1eaff515263fe997bf35" translate="yes" xml:space="preserve">
          <source>NonZeroU16::hash</source>
          <target state="translated">NonZeroU16::hash</target>
        </trans-unit>
        <trans-unit id="b9c900dd5aa52134650740a33c407b05339dc782" translate="yes" xml:space="preserve">
          <source>NonZeroU16::hash_slice</source>
          <target state="translated">NonZeroU16::hash_slice</target>
        </trans-unit>
        <trans-unit id="83aabdee7d487ec9cb728178e573f802394226b4" translate="yes" xml:space="preserve">
          <source>NonZeroU16::into</source>
          <target state="translated">NonZeroU16::into</target>
        </trans-unit>
        <trans-unit id="7970d0eb118d83ab0b72df82542034727ba2a453" translate="yes" xml:space="preserve">
          <source>NonZeroU16::le</source>
          <target state="translated">NonZeroU16::le</target>
        </trans-unit>
        <trans-unit id="2e5e858925d50659f9b1b6d9aae3740085d6d25b" translate="yes" xml:space="preserve">
          <source>NonZeroU16::lt</source>
          <target state="translated">NonZeroU16::lt</target>
        </trans-unit>
        <trans-unit id="5d3b1652b96c8f150360a583d2605f47b1963560" translate="yes" xml:space="preserve">
          <source>NonZeroU16::max</source>
          <target state="translated">NonZeroU16::max</target>
        </trans-unit>
        <trans-unit id="1e4034b09df30190832a52072bcf8af6041bbf4d" translate="yes" xml:space="preserve">
          <source>NonZeroU16::min</source>
          <target state="translated">NonZeroU16::min</target>
        </trans-unit>
        <trans-unit id="815e8d53bff937d8e0463d3319f42f6179bc0760" translate="yes" xml:space="preserve">
          <source>NonZeroU16::ne</source>
          <target state="translated">NonZeroU16::ne</target>
        </trans-unit>
        <trans-unit id="23ac83515dc8fab41df4280bc33fe4bc456b4ff2" translate="yes" xml:space="preserve">
          <source>NonZeroU16::new</source>
          <target state="translated">NonZeroU16::new</target>
        </trans-unit>
        <trans-unit id="bb140336d169ad21d933a68a3d8746b26d1b8b72" translate="yes" xml:space="preserve">
          <source>NonZeroU16::new_unchecked</source>
          <target state="translated">NonZeroU16::new_unchecked</target>
        </trans-unit>
        <trans-unit id="d8dd3cac934926e6de446e12a7408c3a4890b68e" translate="yes" xml:space="preserve">
          <source>NonZeroU16::partial_cmp</source>
          <target state="translated">NonZeroU16::partial_cmp</target>
        </trans-unit>
        <trans-unit id="93b1877253643b0a75cda9a47fc455fc67b284f7" translate="yes" xml:space="preserve">
          <source>NonZeroU16::to_owned</source>
          <target state="translated">NonZeroU16::to_owned</target>
        </trans-unit>
        <trans-unit id="450d0b2017abf1787e4b40c9180053f5f1c5d6b5" translate="yes" xml:space="preserve">
          <source>NonZeroU16::to_string</source>
          <target state="translated">NonZeroU16::to_string</target>
        </trans-unit>
        <trans-unit id="565d7bfa4f368119e8eb8c597666eee168d3ec36" translate="yes" xml:space="preserve">
          <source>NonZeroU16::try_from</source>
          <target state="translated">NonZeroU16::try_from</target>
        </trans-unit>
        <trans-unit id="c9ffda0c65ec9d2c6dac8e1259fd7cb09818b7a4" translate="yes" xml:space="preserve">
          <source>NonZeroU16::try_into</source>
          <target state="translated">NonZeroU16::try_into</target>
        </trans-unit>
        <trans-unit id="35a3919e55cf0455983744e7e8ab659cda957d3b" translate="yes" xml:space="preserve">
          <source>NonZeroU16::type_id</source>
          <target state="translated">NonZeroU16::type_id</target>
        </trans-unit>
        <trans-unit id="027b94edf209f9b339fcc3f9fcbe95bea73b0fff" translate="yes" xml:space="preserve">
          <source>NonZeroU32</source>
          <target state="translated">NonZeroU32</target>
        </trans-unit>
        <trans-unit id="19103157b2dd994e271093d37a26558f253c1df5" translate="yes" xml:space="preserve">
          <source>NonZeroU32::borrow</source>
          <target state="translated">NonZeroU32::borrow</target>
        </trans-unit>
        <trans-unit id="d5900a35010072cf8f8a0e31e3295500e147138f" translate="yes" xml:space="preserve">
          <source>NonZeroU32::borrow_mut</source>
          <target state="translated">NonZeroU32::borrow_mut</target>
        </trans-unit>
        <trans-unit id="a3d0eea5bcf469a951789307713538f7dd48cc64" translate="yes" xml:space="preserve">
          <source>NonZeroU32::clamp</source>
          <target state="translated">NonZeroU32::clamp</target>
        </trans-unit>
        <trans-unit id="ca9c328d071b73e6fec77d280d2dec16c6afe8be" translate="yes" xml:space="preserve">
          <source>NonZeroU32::clone</source>
          <target state="translated">NonZeroU32::clone</target>
        </trans-unit>
        <trans-unit id="4d0cce4f0af9fe9b58667070ea3aae8608af18fc" translate="yes" xml:space="preserve">
          <source>NonZeroU32::clone_from</source>
          <target state="translated">NonZeroU32::clone_from</target>
        </trans-unit>
        <trans-unit id="beeb1f8a7db4e17dce219e3b75ed85a27a214ce6" translate="yes" xml:space="preserve">
          <source>NonZeroU32::clone_into</source>
          <target state="translated">NonZeroU32::clone_into</target>
        </trans-unit>
        <trans-unit id="66de3d60d49a5fd2460c7fce4fc4af569dea2ea8" translate="yes" xml:space="preserve">
          <source>NonZeroU32::cmp</source>
          <target state="translated">NonZeroU32::cmp</target>
        </trans-unit>
        <trans-unit id="b9a64d225fbd880a1d363e7928600204954c435d" translate="yes" xml:space="preserve">
          <source>NonZeroU32::eq</source>
          <target state="translated">NonZeroU32::eq</target>
        </trans-unit>
        <trans-unit id="d198043d6e6b2dcbdbd140d6e9a9832d41ef00b0" translate="yes" xml:space="preserve">
          <source>NonZeroU32::fmt</source>
          <target state="translated">NonZeroU32::fmt</target>
        </trans-unit>
        <trans-unit id="f99dcfdc314e32f70a453660a94f7ab9fd67185e" translate="yes" xml:space="preserve">
          <source>NonZeroU32::from</source>
          <target state="translated">NonZeroU32::from</target>
        </trans-unit>
        <trans-unit id="298799838c58c16143fcd9e2418534b329517ba2" translate="yes" xml:space="preserve">
          <source>NonZeroU32::from_str</source>
          <target state="translated">NonZeroU32::from_str</target>
        </trans-unit>
        <trans-unit id="6cd1cc0b365f1d3d480575dcbc2de54dae6a1d17" translate="yes" xml:space="preserve">
          <source>NonZeroU32::ge</source>
          <target state="translated">NonZeroU32::ge</target>
        </trans-unit>
        <trans-unit id="1dbe40ea77f784440de6e51cfcfb8778482bc067" translate="yes" xml:space="preserve">
          <source>NonZeroU32::get</source>
          <target state="translated">NonZeroU32::get</target>
        </trans-unit>
        <trans-unit id="e88628f83bc918c532752959c92d4ac82adbf0fd" translate="yes" xml:space="preserve">
          <source>NonZeroU32::gt</source>
          <target state="translated">NonZeroU32::gt</target>
        </trans-unit>
        <trans-unit id="7104f6c9a14d29e93513632fa9934f8edd1d6e95" translate="yes" xml:space="preserve">
          <source>NonZeroU32::hash</source>
          <target state="translated">NonZeroU32::hash</target>
        </trans-unit>
        <trans-unit id="ed57c71253659bc0210251e89d76fbd4f29b25de" translate="yes" xml:space="preserve">
          <source>NonZeroU32::hash_slice</source>
          <target state="translated">NonZeroU32::hash_slice</target>
        </trans-unit>
        <trans-unit id="708299fe453aae6d855b8d5980451e3d6fa01e3f" translate="yes" xml:space="preserve">
          <source>NonZeroU32::into</source>
          <target state="translated">NonZeroU32::into</target>
        </trans-unit>
        <trans-unit id="18cade9c6a5784c63e5e9e3cd947c01187616ffa" translate="yes" xml:space="preserve">
          <source>NonZeroU32::le</source>
          <target state="translated">NonZeroU32::le</target>
        </trans-unit>
        <trans-unit id="258acfab28050bc7bb168cbfd4ef30a6d48665c5" translate="yes" xml:space="preserve">
          <source>NonZeroU32::lt</source>
          <target state="translated">NonZeroU32::lt</target>
        </trans-unit>
        <trans-unit id="030aea2e6963a8f4da13cbc262733cb19ce4afc3" translate="yes" xml:space="preserve">
          <source>NonZeroU32::max</source>
          <target state="translated">NonZeroU32::max</target>
        </trans-unit>
        <trans-unit id="ec7f1e7d4f631759d2fa095faa8ca43552f8684a" translate="yes" xml:space="preserve">
          <source>NonZeroU32::min</source>
          <target state="translated">NonZeroU32::min</target>
        </trans-unit>
        <trans-unit id="1339b30fe6c5981bffbab3f00e68cdd9c9f8a0bc" translate="yes" xml:space="preserve">
          <source>NonZeroU32::ne</source>
          <target state="translated">NonZeroU32::ne</target>
        </trans-unit>
        <trans-unit id="0d42ac2122a8ce6e542130048262c73787d65cfa" translate="yes" xml:space="preserve">
          <source>NonZeroU32::new</source>
          <target state="translated">NonZeroU32::new</target>
        </trans-unit>
        <trans-unit id="53b766be632e74846603297c0e0ac6f9ccfdb9cc" translate="yes" xml:space="preserve">
          <source>NonZeroU32::new_unchecked</source>
          <target state="translated">NonZeroU32::new_unchecked</target>
        </trans-unit>
        <trans-unit id="8d058b61ea076257a2a74125c037a43db242bed9" translate="yes" xml:space="preserve">
          <source>NonZeroU32::partial_cmp</source>
          <target state="translated">NonZeroU32::partial_cmp</target>
        </trans-unit>
        <trans-unit id="daeb2592a753cbd5361feb58a583b78797b11fc9" translate="yes" xml:space="preserve">
          <source>NonZeroU32::to_owned</source>
          <target state="translated">NonZeroU32::to_owned</target>
        </trans-unit>
        <trans-unit id="60aaf34cff920dc42256dc10eec23c5ea806feec" translate="yes" xml:space="preserve">
          <source>NonZeroU32::to_string</source>
          <target state="translated">NonZeroU32::to_string</target>
        </trans-unit>
        <trans-unit id="73f9e4f2ad5073070910a47ac63d54b649f8d6e8" translate="yes" xml:space="preserve">
          <source>NonZeroU32::try_from</source>
          <target state="translated">NonZeroU32::try_from</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
