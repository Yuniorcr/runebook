<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="40806bdac66961c97f14caf3bdb5bd4161107da4" translate="yes" xml:space="preserve">
          <source>To resolve this error use the concrete type:</source>
          <target state="translated">이 오류를 해결하려면 구체적 유형을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bba50911f39e97c448e79f8065cbe76ff37d962c" translate="yes" xml:space="preserve">
          <source>To resolve this error, use a concrete type for the intermediate expression:</source>
          <target state="translated">이 오류를 해결하려면 중간 표현식에 구체적 유형을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="336222d4e74857a65248fce76ba73fa02fe1c00a" translate="yes" xml:space="preserve">
          <source>To return a new lowercased value without modifying the existing one, use &lt;a href=&quot;#method.to_ascii_lowercase&quot;&gt;&lt;code&gt;to_ascii_lowercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기존 값을 수정하지 않고 새로운 소문자 값을 반환하려면 &lt;a href=&quot;#method.to_ascii_lowercase&quot;&gt; &lt;code&gt;to_ascii_lowercase&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c6eff45b987ef30ba84b5033a569d4671d667c28" translate="yes" xml:space="preserve">
          <source>To return a new lowercased value without modifying the existing one, use &lt;a href=&quot;#tymethod.to_ascii_lowercase&quot;&gt;&lt;code&gt;to_ascii_lowercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기존 값을 수정하지 않고 새로운 소문자 값을 반환하려면 &lt;a href=&quot;#tymethod.to_ascii_lowercase&quot;&gt; &lt;code&gt;to_ascii_lowercase&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a6b8af0a2d7bad5168dd7563a5faab87aca3dc2" translate="yes" xml:space="preserve">
          <source>To return a new lowercased value without modifying the existing one, use &lt;a href=&quot;struct.osstr#method.to_ascii_lowercase&quot;&gt;&lt;code&gt;OsStr::to_ascii_lowercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기존 값을 수정하지 않고 새 소문자 값을 반환하려면 &lt;a href=&quot;struct.osstr#method.to_ascii_lowercase&quot;&gt; &lt;code&gt;OsStr::to_ascii_lowercase&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="99049f339cacaaabe4b0c50ed3b0d3a63d16bda2" translate="yes" xml:space="preserve">
          <source>To return a new lowercased value without modifying the existing one, use &lt;a href=&quot;trait.asciiext#tymethod.to_ascii_lowercase&quot;&gt;&lt;code&gt;to_ascii_lowercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기존 값을 수정하지 않고 새 소문자 값을 반환하려면 &lt;a href=&quot;trait.asciiext#tymethod.to_ascii_lowercase&quot;&gt; &lt;code&gt;to_ascii_lowercase&lt;/code&gt; 를&lt;/a&gt; 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="4fc2431e450771dead21af33dda64aadfaf2de37" translate="yes" xml:space="preserve">
          <source>To return a new uppercased value without modifying the existing one, use &lt;a href=&quot;#method.to_ascii_uppercase&quot;&gt;&lt;code&gt;to_ascii_uppercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기존 값을 수정하지 않고 새로운 대문자 값을 반환하려면 &lt;a href=&quot;#method.to_ascii_uppercase&quot;&gt; &lt;code&gt;to_ascii_uppercase&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3f98861983753d9167b54a4036b6c14ee7465a79" translate="yes" xml:space="preserve">
          <source>To return a new uppercased value without modifying the existing one, use &lt;a href=&quot;#tymethod.to_ascii_uppercase&quot;&gt;&lt;code&gt;to_ascii_uppercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기존 값을 수정하지 않고 새로운 대문자 값을 반환하려면 &lt;a href=&quot;#tymethod.to_ascii_uppercase&quot;&gt; &lt;code&gt;to_ascii_uppercase&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b269c5e12c3307032fd7c3ae09e5e6e5ef1b2811" translate="yes" xml:space="preserve">
          <source>To return a new uppercased value without modifying the existing one, use &lt;a href=&quot;struct.osstr#method.to_ascii_uppercase&quot;&gt;&lt;code&gt;OsStr::to_ascii_uppercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기존 값을 수정하지 않고 새 대문자 값을 반환하려면 &lt;a href=&quot;struct.osstr#method.to_ascii_uppercase&quot;&gt; &lt;code&gt;OsStr::to_ascii_uppercase&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b8bdcca7b53a29d96e387d59f21508e247003424" translate="yes" xml:space="preserve">
          <source>To return a new uppercased value without modifying the existing one, use &lt;a href=&quot;trait.asciiext#tymethod.to_ascii_uppercase&quot;&gt;&lt;code&gt;to_ascii_uppercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기존 값을 수정하지 않고 새 대문자 값을 반환하려면 &lt;a href=&quot;trait.asciiext#tymethod.to_ascii_uppercase&quot;&gt; &lt;code&gt;to_ascii_uppercase&lt;/code&gt; 를&lt;/a&gt; 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="b3eb99467dbfaa372dd0858f79acae31153782c2" translate="yes" xml:space="preserve">
          <source>To round out this project, we&amp;rsquo;ll briefly demonstrate how to work with environment variables and how to print to standard error, both of which are useful when you&amp;rsquo;re writing command line programs.</source>
          <target state="translated">이 프로젝트를 마무리하기 위해 환경 변수 작업 방법과 표준 오류로 인쇄하는 방법에 대해 간략하게 설명합니다.이 두 가지 방법은 명령 줄 프로그램을 작성할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="1d354bd55577a0ae6fc2f95a62753d1f62548897" translate="yes" xml:space="preserve">
          <source>To run Clippy&amp;rsquo;s lints on any Cargo project, enter the following:</source>
          <target state="translated">Cargo 프로젝트에서 Clippy의 보푸라기를 실행하려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="38b636b1ad46eb0add3e75f7e9d97cbfc1d6f9d8" translate="yes" xml:space="preserve">
          <source>To run the binary crate from the &lt;em&gt;add&lt;/em&gt; directory, we can specify which package in the workspace we want to run by using the &lt;code&gt;-p&lt;/code&gt; argument and the package name with &lt;code&gt;cargo run&lt;/code&gt;:</source>
          <target state="translated">&lt;em&gt;add&lt;/em&gt; 디렉토리 에서 바이너리 크레이트를 실행하려면 &lt;code&gt;-p&lt;/code&gt; 인수와 &lt;code&gt;cargo run&lt;/code&gt; 에서 패키지 이름을 사용하여 실행할 작업 공간의 패키지를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d744134b2344eca07ba0f4cf9819619cc570948e" translate="yes" xml:space="preserve">
          <source>To run the binary crate from the &lt;em&gt;add&lt;/em&gt; directory, we need to specify which package in the workspace we want to use by using the &lt;code&gt;-p&lt;/code&gt; argument and the package name with &lt;code&gt;cargo run&lt;/code&gt;:</source>
          <target state="translated">&lt;em&gt;add&lt;/em&gt; 디렉토리 에서 바이너리 상자를 실행하려면 &lt;code&gt;-p&lt;/code&gt; 인수와 &lt;code&gt;cargo run&lt;/code&gt; 과 함께 패키지 이름 을 사용하여 작업 공간에서 사용할 패키지를 지정해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="8bc4f6782a835ae358ae31b6f96421e46fc704f9" translate="yes" xml:space="preserve">
          <source>To see deref coercion in action, let&amp;rsquo;s use the &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; type we defined in Listing 15-8 as well as the implementation of &lt;code&gt;Deref&lt;/code&gt; that we added in Listing 15-10. Listing 15-11 shows the definition of a function that has a string slice parameter:</source>
          <target state="translated">deref 강제 변환이 실제로 작동 &lt;code&gt;Deref&lt;/code&gt; 확인하기 위해 Listing 15-8에서 정의한 &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; 유형 과 Listing 15-10에서 추가 한 Deref 의 구현을 사용 하자 . 코드 15-11은 문자열 슬라이스 매개 변수가있는 함수의 정의를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="0acf6acdd95133438e45baebe84203f1ed05a023" translate="yes" xml:space="preserve">
          <source>To see destructors in action, let's take a look at the following program:</source>
          <target state="translated">작동중인 소멸자를보기 위해 다음 프로그램을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="46d871d99b751923bfc8199196805ccdb06df1da" translate="yes" xml:space="preserve">
          <source>To see the pattern matching aspect of &lt;code&gt;let&lt;/code&gt; more clearly, consider Listing 18-4, which uses a pattern with &lt;code&gt;let&lt;/code&gt; to destructure a tuple.</source>
          <target state="translated">의 패턴 매칭 측면 보려면 &lt;code&gt;let&lt;/code&gt; 가있는 패턴을 사용 18-4, 목록을 고려, 더 명확하게 &lt;code&gt;let&lt;/code&gt; 튜플을 destructure 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76ec71028cdc11f78838d4138f08838dc91ccb67" translate="yes" xml:space="preserve">
          <source>To see this code in action, let&amp;rsquo;s modify &lt;code&gt;main&lt;/code&gt; to accept only two requests before gracefully shutting down the server, as shown in Listing 20-25.</source>
          <target state="translated">이 코드가 작동하는 것을보기 위해 Listing 20-25에 표시된 것처럼 서버를 정상적으로 종료하기 전에 두 개의 요청 만 수락 하도록 &lt;code&gt;main&lt;/code&gt; 을 수정 해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="be7f1edd4187697ed5c2e4f6dc220a6d712ca92f" translate="yes" xml:space="preserve">
          <source>To see this code in action, let&amp;rsquo;s modify &lt;code&gt;main&lt;/code&gt; to accept only two requests before gracefully shutting down the server, as shown in Listing 20-26.</source>
          <target state="translated">이 코드가 실제로 작동 하는지 확인하려면 Listing 20-26에 표시된대로 서버를 정상적으로 종료하기 전에 &lt;code&gt;main&lt;/code&gt; 을 수정 하여 두 개의 요청 만 수락 하도록하자 .</target>
        </trans-unit>
        <trans-unit id="a7940de3192aef0247f83e244b60b2d3b6e58939" translate="yes" xml:space="preserve">
          <source>To see what happens when a &lt;code&gt;should_panic&lt;/code&gt; test with an &lt;code&gt;expected&lt;/code&gt; message fails, let&amp;rsquo;s again introduce a bug into our code by swapping the bodies of the &lt;code&gt;if value &amp;lt; 1&lt;/code&gt; and the &lt;code&gt;else if value &amp;gt; 100&lt;/code&gt; blocks:</source>
          <target state="translated">&lt;code&gt;expected&lt;/code&gt; 메시지가 있는 &lt;code&gt;should_panic&lt;/code&gt; 테스트가 실패 할 때 발생하는 상황을 확인하려면 &lt;code&gt;if value &amp;lt; 1&lt;/code&gt; 과 &lt;code&gt;else if value &amp;gt; 100&lt;/code&gt; 블록 의 본문을 교체하여 코드에 버그를 다시 도입 해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="8576f35029f2c29efb15d99933a9de10a34dcb7b" translate="yes" xml:space="preserve">
          <source>To see why that last example was allowed, you need to understand the general rule. Unfortunately this rule is a bit tricky to state. Consider an &lt;code&gt;impl&lt;/code&gt;:</source>
          <target state="translated">마지막 예가 허용 된 이유를 보려면 일반 규칙을 이해해야합니다. 불행히도이 규칙은 설명하기가 약간 까다 롭습니다. &lt;code&gt;impl&lt;/code&gt; 을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="a14fdfe6208af1cb452de86927ad706e8201fb30" translate="yes" xml:space="preserve">
          <source>To seek without discarding the internal buffer, use &lt;a href=&quot;struct.bufreader#method.seek_relative&quot;&gt;&lt;code&gt;BufReader::seek_relative&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">내부 버퍼를 &lt;a href=&quot;struct.bufreader#method.seek_relative&quot;&gt; &lt;code&gt;BufReader::seek_relative&lt;/code&gt; &lt;/a&gt; 않고 찾으려면 BufReader :: seek_relative를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="0d7ebdd071ebe03ef9670cc1129fd6804ce04dfa" translate="yes" xml:space="preserve">
          <source>To service better ergonomics, patterns operate in different &lt;em&gt;binding modes&lt;/em&gt; in order to make it easier to bind references to values. When a reference value is matched by a non-reference pattern, it will be automatically treated as a &lt;code&gt;ref&lt;/code&gt; or &lt;code&gt;ref mut&lt;/code&gt; binding. Example:</source>
          <target state="translated">보다 나은 인체 공학적 서비스를 제공 하기 위해 패턴은 참조를 값에 쉽게 바인딩하기 위해 서로 다른 &lt;em&gt;바인딩 모드&lt;/em&gt; 에서 작동 합니다. 참조 값이 비 참조 패턴과 일치하면 &lt;code&gt;ref&lt;/code&gt; 또는 &lt;code&gt;ref mut&lt;/code&gt; 바인딩 으로 자동 처리됩니다 . 예:</target>
        </trans-unit>
        <trans-unit id="a3d0badb6b5b316657f5cb3fda3963d136213146" translate="yes" xml:space="preserve">
          <source>To set up a new project, go to the &lt;em&gt;projects&lt;/em&gt; directory that you created in Chapter 1 and make a new project using Cargo, like so:</source>
          <target state="translated">새 프로젝트를 설정하려면 1 장에서 생성 한 &lt;em&gt;프로젝트&lt;/em&gt; 디렉토리 로 이동하여 다음 과 같이 Cargo를 사용하여 새 프로젝트를 만드십시오.</target>
        </trans-unit>
        <trans-unit id="58b49ff05dd6fb8ece812d318c3efc42db98cdbb" translate="yes" xml:space="preserve">
          <source>To show Rust where to find an item in a module tree, we use a path in the same way we use a path when navigating a filesystem. If we want to call a function, we need to know its path.</source>
          <target state="translated">Rust가 모듈 트리에서 아이템을 찾을 위치를 보여주기 위해 파일 시스템을 탐색 할 때 경로를 사용하는 것과 같은 방식으로 경로를 사용합니다. 함수를 호출하려면 경로를 알아야합니다.</target>
        </trans-unit>
        <trans-unit id="da1e1e9f2dd7b1c40ddec9ecef1f4d928ddb4f25" translate="yes" xml:space="preserve">
          <source>To silence this warning, edit your code to use an explicit bound. Most of the time, this means that you will want to change the signature of a function that you are calling. For example, if the error is reported on a call like &lt;code&gt;foo(x)&lt;/code&gt;, and &lt;code&gt;foo&lt;/code&gt; is defined as follows:</source>
          <target state="translated">이 경고를 끄려면 명시 적 범위를 사용하도록 코드를 편집하십시오. 대부분의 경우 이것은 호출하는 함수의 서명을 변경하려고 함을 의미합니다. 예를 들어, &lt;code&gt;foo(x)&lt;/code&gt; 와 같은 호출에서 오류가보고 되고 &lt;code&gt;foo&lt;/code&gt; 는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="0ae8db76a02a996f64985b9fc49d037c6c1ea0c5" translate="yes" xml:space="preserve">
          <source>To solve this error you can use conditional compilation:</source>
          <target state="translated">이 오류를 해결하려면 조건부 컴파일을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="384aa431a554e0c72ecb63fe411f4d1d9ac5425c" translate="yes" xml:space="preserve">
          <source>To solve this error, please ensure that the trait is also public. The trait can be made inaccessible if necessary by placing it into a private inner module, but it still has to be marked with &lt;code&gt;pub&lt;/code&gt;. Example:</source>
          <target state="translated">이 오류를 해결하려면 특성도 공개해야합니다. 필요한 경우 특성을 전용 내부 모듈에 배치하여 특성에 액세스 할 수 없지만 여전히 &lt;code&gt;pub&lt;/code&gt; 로 표시해야합니다 . 예:</target>
        </trans-unit>
        <trans-unit id="e8fd0f72a971d26cc1bbb2830412854500357f79" translate="yes" xml:space="preserve">
          <source>To solve this error, please ensure that the type is also public. The type can be made inaccessible if necessary by placing it into a private inner module, but it still has to be marked with &lt;code&gt;pub&lt;/code&gt;. Example:</source>
          <target state="translated">이 오류를 해결하려면 형식도 공용인지 확인하십시오. 필요한 경우 개인 내부 모듈에 배치하여 유형에 액세스 할 수 없게 만들 수 있지만 여전히 &lt;code&gt;pub&lt;/code&gt; 로 표시해야합니다 . 예:</target>
        </trans-unit>
        <trans-unit id="3cffb477b8b527a4ad5d6a5090b9a2b24adc51f1" translate="yes" xml:space="preserve">
          <source>To solve this error, please move the type bindings in the type parameter declaration:</source>
          <target state="translated">이 오류를 해결하려면 형식 매개 변수 선언에서 형식 바인딩을 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="4a77dd198bd76ba335ad5b87d56789f39f1b6b5e" translate="yes" xml:space="preserve">
          <source>To solve this error, the best solution is generally to keep the path before the item when using it. Example:</source>
          <target state="translated">이 오류를 해결하려면 가장 좋은 해결책은 일반적으로 항목을 사용할 때 경로를 유지하는 것입니다. 예:</target>
        </trans-unit>
        <trans-unit id="e0683b0386295fb5b1a3a7f5a6c76d0ac644fc3b" translate="yes" xml:space="preserve">
          <source>To solve this issue, multiple solutions are available. First, is it required for this variable to be used in more than one closure at a time? If it is the case, use reference counted types such as &lt;code&gt;Rc&lt;/code&gt; (or &lt;code&gt;Arc&lt;/code&gt; if it runs concurrently):</source>
          <target state="translated">이 문제를 해결하기 위해 여러 솔루션을 사용할 수 있습니다. 첫째,이 변수를 한 번에 둘 이상의 클로저에서 사용해야합니까? 이 경우 &lt;code&gt;Rc&lt;/code&gt; (또는 동시에 실행되는 경우 &lt;code&gt;Arc&lt;/code&gt; ) 와 같은 참조 횟수 유형을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="41f267efd7ba6e9990897495f245eaad001164fa" translate="yes" xml:space="preserve">
          <source>To solve, ensure that the trait object has at least one trait:</source>
          <target state="translated">해결하려면 특성 개체에 특성이 하나 이상 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="d8595d9620d15e23dd7e60f0c946808adb0c94b9" translate="yes" xml:space="preserve">
          <source>To split by Unicode &lt;code&gt;Whitespace&lt;/code&gt; instead, use &lt;a href=&quot;#method.split_whitespace&quot;&gt;&lt;code&gt;split_whitespace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대신 유니 코드 &lt;code&gt;Whitespace&lt;/code&gt; 분할하려면 &lt;a href=&quot;#method.split_whitespace&quot;&gt; &lt;code&gt;split_whitespace&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f4419c6b42b03b7ee73a5252ee2ba8b90aa54d16" translate="yes" xml:space="preserve">
          <source>To split by Unicode &lt;code&gt;Whitespace&lt;/code&gt; instead, use &lt;a href=&quot;../primitive.str#method.split_whitespace&quot;&gt;&lt;code&gt;split_whitespace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대신 유니 코드 &lt;code&gt;Whitespace&lt;/code&gt; 분할하려면 &lt;a href=&quot;../primitive.str#method.split_whitespace&quot;&gt; &lt;code&gt;split_whitespace&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="008a095ac9e41d95c26562938b70663fdac5db0b" translate="yes" xml:space="preserve">
          <source>To split by Unicode &lt;code&gt;Whitespace&lt;/code&gt; instead, use &lt;a href=&quot;primitive.str#method.split_whitespace&quot;&gt;&lt;code&gt;split_whitespace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대신 유니 코드 &lt;code&gt;Whitespace&lt;/code&gt; 분할하려면 &lt;a href=&quot;primitive.str#method.split_whitespace&quot;&gt; &lt;code&gt;split_whitespace&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="39efc8d301c98f5b54ae3dfd338106520f5157d1" translate="yes" xml:space="preserve">
          <source>To start defining the procedural macro, place the code in Listing 19-31 into your &lt;em&gt;src/lib.rs&lt;/em&gt; file for the &lt;code&gt;hello_macro_derive&lt;/code&gt; crate. Note that this code won&amp;rsquo;t compile until we add a definition for the &lt;code&gt;impl_hello_macro&lt;/code&gt; function.</source>
          <target state="translated">절차 적 매크로 정의를 시작하려면 Listing 19-31의 코드를 &lt;code&gt;hello_macro_derive&lt;/code&gt; 상자 의 &lt;em&gt;src / lib.rs&lt;/em&gt; 파일에 넣으십시오 . 이 코드는 &lt;code&gt;impl_hello_macro&lt;/code&gt; 함수에 대한 정의를 추가 할 때까지 컴파일되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="4cd7a51fb6e1263e5fbdd69b060072fe94d9dc2f" translate="yes" xml:space="preserve">
          <source>To start, we&amp;rsquo;ll build a tree with nodes that know about their child nodes. We&amp;rsquo;ll create a struct named &lt;code&gt;Node&lt;/code&gt; that holds its own &lt;code&gt;i32&lt;/code&gt; value as well as references to its children &lt;code&gt;Node&lt;/code&gt; values:</source>
          <target state="translated">먼저 자식 노드에 대해 알고있는 노드가있는 트리를 만듭니다. 자체 &lt;code&gt;Node&lt;/code&gt; 값에 대한 참조뿐만 아니라 자체 &lt;code&gt;i32&lt;/code&gt; 값 을 보유하는 &lt;code&gt;Node&lt;/code&gt; 라는 이름의 구조체를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e88b248a81f262510bb36c205a0d4dc2d7d064a2" translate="yes" xml:space="preserve">
          <source>To structure our crate in the same way that a real restaurant works, we can organize the functions into nested modules. Create a new library named &lt;code&gt;restaurant&lt;/code&gt; by running &lt;code&gt;cargo new --lib restaurant&lt;/code&gt;; then put the code in Listing 7-1 into &lt;em&gt;src/lib.rs&lt;/em&gt; to define some modules and function signatures.</source>
          <target state="translated">실제 식당과 같은 방식으로 상자를 구성하기 위해 함수를 중첩 모듈로 구성 할 수 있습니다. &lt;code&gt;cargo new --lib restaurant&lt;/code&gt; 을 실행하여 &lt;code&gt;restaurant&lt;/code&gt; 이라는 이름의 새로운 라이브러리를 만듭니다 . 그런 다음 Listing 7-1의 코드를 &lt;em&gt;src / lib.rs&lt;/em&gt; 에 넣어 일부 모듈과 함수 시그니처를 정의하십시오.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="314819f76bd8c5d973c493b80242bed1a2fc84f6" translate="yes" xml:space="preserve">
          <source>To summarize, here you can find the full grammar of format strings. The syntax for the formatting language used is drawn from other languages, so it should not be too alien. Arguments are formatted with Python-like syntax, meaning that arguments are surrounded by &lt;code&gt;{}&lt;/code&gt; instead of the C-like &lt;code&gt;%&lt;/code&gt;. The actual grammar for the formatting syntax is:</source>
          <target state="translated">요약하면 여기에서 형식 문자열의 전체 문법을 찾을 수 있습니다. 사용 된 서식 지정 언어의 구문은 다른 언어에서 가져온 것이므로 너무 이질적이어서는 안됩니다. 인수는 Python과 유사한 구문으로 형식이 지정됩니다. 즉, 인수는 C와 유사한 &lt;code&gt;%&lt;/code&gt; 대신 &lt;code&gt;{}&lt;/code&gt; 로 둘러싸여 있습니다. 형식화 구문의 실제 문법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9f66b79eaf886d6c72a892191c1e18c1c1df90d3" translate="yes" xml:space="preserve">
          <source>To summarize, strings are complicated. Different programming languages make different choices about how to present this complexity to the programmer. Rust has chosen to make the correct handling of &lt;code&gt;String&lt;/code&gt; data the default behavior for all Rust programs, which means programmers have to put more thought into handling UTF-8 data upfront. This trade-off exposes more of the complexity of strings than is apparent in other programming languages, but it prevents you from having to handle errors involving non-ASCII characters later in your development life cycle.</source>
          <target state="translated">요약하면 문자열이 복잡합니다. 다른 프로그래밍 언어는 이러한 복잡성을 프로그래머에게 제시하는 방법에 대해 다른 선택을합니다. Rust는 모든 Rust 프로그램에서 &lt;code&gt;String&lt;/code&gt; 데이터를 올바르게 처리하는 것을 기본 동작으로 선택했습니다. 이는 프로그래머가 UTF-8 데이터를 미리 처리하는 데 더 많은 생각을해야한다는 것을 의미합니다. 이 절충은 다른 프로그래밍 언어에서 볼 수있는 것보다 더 복잡한 문자열을 노출하지만 나중에 개발 라이프 사이클에서 비 ASCII 문자와 관련된 오류를 처리하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="de7e750f454d2e6ac7a8ffdfb7a0160a0d2868ee" translate="yes" xml:space="preserve">
          <source>To summarize, the &lt;code&gt;let mut guess = String::new();&lt;/code&gt; line has created a mutable variable that is currently bound to a new, empty instance of a &lt;code&gt;String&lt;/code&gt;. Whew!</source>
          <target state="translated">요약하면, &lt;code&gt;let mut guess = String::new();&lt;/code&gt; line은 현재 비어있는 새로운 &lt;code&gt;String&lt;/code&gt; 인스턴스에 바인딩 된 가변 변수를 작성했습니다 . 아휴!</target>
        </trans-unit>
        <trans-unit id="9cb396520770d271c92551f4d7e0bcd83c651b95" translate="yes" xml:space="preserve">
          <source>To switch to unsafe Rust, use the &lt;code&gt;unsafe&lt;/code&gt; keyword and then start a new block that holds the unsafe code. You can take five actions in unsafe Rust, called &lt;em&gt;unsafe superpowers&lt;/em&gt;, that you can&amp;rsquo;t in safe Rust. Those superpowers include the ability to:</source>
          <target state="translated">안전하지 않은 Rust로 전환하려면 안전하지 &lt;code&gt;unsafe&lt;/code&gt; 키워드를 사용한 다음 안전하지 않은 코드를 포함하는 새 블록을 시작하십시오. 안전하지 않은 Rust에서는 &lt;em&gt;안전하지 않은 슈퍼 파워&lt;/em&gt; 라고하는 다섯 가지 조치를 취할 수 있지만 안전한 Rust에서는 할 수 없습니다. 이러한 초강대국에는 다음 기능이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f43e14ce7587570f1bef4bdb30b6cbaa4b75f17f" translate="yes" xml:space="preserve">
          <source>To switch to unsafe Rust, use the &lt;code&gt;unsafe&lt;/code&gt; keyword and then start a new block that holds the unsafe code. You can take four actions in unsafe Rust, called &lt;em&gt;unsafe superpowers&lt;/em&gt;, that you can&amp;rsquo;t in safe Rust. Those superpowers include the ability to:</source>
          <target state="translated">안전하지 않은 Rust로 전환하려면 &lt;code&gt;unsafe&lt;/code&gt; 키워드를 사용한 다음 안전하지 않은 코드를 보유한 새 블록을 시작하십시오. &lt;em&gt;unsafe superpowers&lt;/em&gt; 라는 &lt;em&gt;안전&lt;/em&gt; 하지 않은 Rust에서 안전하지 않은 Rust에서는 수행 할 수없는 네 가지 작업을 수행 할 수 있습니다. 이러한 초능력에는 다음과 같은 기능이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="11f1d9981c2d0b02d68889e44295f6ab0f30c56d" translate="yes" xml:space="preserve">
          <source>To terminate a raw string, you have to have the same number of &lt;code&gt;#&lt;/code&gt; at the end as at the beginning. Example:</source>
          <target state="translated">원시 문자열을 종료하려면 시작 부분과 끝 부분에 동일한 수의 &lt;code&gt;#&lt;/code&gt; 이 있어야합니다 . 예:</target>
        </trans-unit>
        <trans-unit id="31217910df272b1f25ece09faa304c39aefdc3a5" translate="yes" xml:space="preserve">
          <source>To this:</source>
          <target state="translated">이에:</target>
        </trans-unit>
        <trans-unit id="057adfa85ddef458f115bd296031094452f5b4a0" translate="yes" xml:space="preserve">
          <source>To understand better how closures work in Rust, read: https://doc.rust-lang.org/book/ch13-01-closures.html</source>
          <target state="translated">Rust에서 클로저가 어떻게 작동하는지 더 잘 이해하려면 https://doc.rust-lang.org/book/ch13-01-closures.html을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="28d2bbf95b0b86d0881e2c7c6550fc005fe06275" translate="yes" xml:space="preserve">
          <source>To understand what this means, it is perhaps easier to consider a few examples.</source>
          <target state="translated">이것이 의미하는 바를 이해하려면 몇 가지 예를 고려하는 것이 더 쉬울 것입니다.</target>
        </trans-unit>
        <trans-unit id="c87f629cfb96af20696ef3d804bdc670ac7c36a2" translate="yes" xml:space="preserve">
          <source>To understand when we might want to use structs, let&amp;rsquo;s write a program that calculates the area of a rectangle. We&amp;rsquo;ll start with single variables, and then refactor the program until we&amp;rsquo;re using structs instead.</source>
          <target state="translated">구조체를 언제 사용하고 싶을 지 이해하기 위해 사각형의 면적을 계산하는 프로그램을 작성해 봅시다. 단일 변수로 시작한 다음 대신 구조체를 사용할 때까지 프로그램을 리팩터링합니다.</target>
        </trans-unit>
        <trans-unit id="f3887dc1ab813c2423acfe9d57d029c4502fb78e" translate="yes" xml:space="preserve">
          <source>To uninstall Rust and &lt;code&gt;rustup&lt;/code&gt;, run the following uninstall script from your shell:</source>
          <target state="translated">Rust and &lt;code&gt;rustup&lt;/code&gt; 을 제거하려면 셸에서 다음 제거 스크립트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="662f41af8eb574e21b57913c6f9a0bd1516cbc7a" translate="yes" xml:space="preserve">
          <source>To uppercase ASCII characters in addition to non-ASCII characters, use &lt;a href=&quot;#method.to_uppercase&quot;&gt;&lt;code&gt;to_uppercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비 ASCII 문자 외에 ASCII 문자를 대문자로하려면 &lt;a href=&quot;#method.to_uppercase&quot;&gt; &lt;code&gt;to_uppercase&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="bae7e9e1be3baf0aecb5ead601705215f7341743" translate="yes" xml:space="preserve">
          <source>To uppercase ASCII characters in addition to non-ASCII characters, use &lt;a href=&quot;../primitive.str#method.to_uppercase&quot;&gt;&lt;code&gt;str::to_uppercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비 ASCII 문자 외에 ASCII 문자를 대문자로 만들려면 &lt;a href=&quot;../primitive.str#method.to_uppercase&quot;&gt; &lt;code&gt;str::to_uppercase&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ceeb5afb45130513f95c0c76f8c194cbc22cc90" translate="yes" xml:space="preserve">
          <source>To uppercase ASCII characters in addition to non-ASCII characters, use &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html#method.to_uppercase&quot;&gt;&lt;code&gt;str::to_uppercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비 ASCII 문자 외에 ASCII 문자를 대문자로하려면 &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html#method.to_uppercase&quot;&gt; &lt;code&gt;str::to_uppercase&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="00c3dbee0cfe96289d27fa6bc805ddc167d97ef8" translate="yes" xml:space="preserve">
          <source>To uppercase the value in-place, use &lt;a href=&quot;#method.make_ascii_uppercase&quot;&gt;&lt;code&gt;make_ascii_uppercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 위치의 대문자를 &lt;a href=&quot;#method.make_ascii_uppercase&quot;&gt; &lt;code&gt;make_ascii_uppercase&lt;/code&gt; &lt;/a&gt; 려면 make_ascii_uppercase를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f0fee41197e5788cb8d5e92ad9fa5f070d016314" translate="yes" xml:space="preserve">
          <source>To uppercase the value in-place, use &lt;a href=&quot;#tymethod.make_ascii_uppercase&quot;&gt;&lt;code&gt;make_ascii_uppercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 위치의 대문자를 &lt;a href=&quot;#tymethod.make_ascii_uppercase&quot;&gt; &lt;code&gt;make_ascii_uppercase&lt;/code&gt; &lt;/a&gt; 려면 make_ascii_uppercase를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="03872893861b26ce89768ebad491eb1be2bc29f7" translate="yes" xml:space="preserve">
          <source>To uppercase the value in-place, use &lt;a href=&quot;../primitive.str#method.make_ascii_uppercase&quot;&gt;&lt;code&gt;make_ascii_uppercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제자리에서 값을 대문자로 &lt;a href=&quot;../primitive.str#method.make_ascii_uppercase&quot;&gt; &lt;code&gt;make_ascii_uppercase&lt;/code&gt; &lt;/a&gt; 려면 make_ascii_uppercase를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="52ba625fbc6adb072f55ed4d3847b030100a31e3" translate="yes" xml:space="preserve">
          <source>To uppercase the value in-place, use &lt;a href=&quot;../primitive.u8#method.make_ascii_uppercase&quot;&gt;&lt;code&gt;make_ascii_uppercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제자리에서 값을 대문자로 &lt;a href=&quot;../primitive.u8#method.make_ascii_uppercase&quot;&gt; &lt;code&gt;make_ascii_uppercase&lt;/code&gt; &lt;/a&gt; 려면 make_ascii_uppercase를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8d877f3de3ce27771a5ff9e83ea6d9c1e61cdbd" translate="yes" xml:space="preserve">
          <source>To uppercase the value in-place, use &lt;a href=&quot;primitive.str#method.make_ascii_uppercase&quot;&gt;&lt;code&gt;make_ascii_uppercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제자리에서 값을 대문자로 &lt;a href=&quot;primitive.str#method.make_ascii_uppercase&quot;&gt; &lt;code&gt;make_ascii_uppercase&lt;/code&gt; &lt;/a&gt; 려면 make_ascii_uppercase를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a9ebf88e0ca05fe29ac69ce486bd57ddd729efb8" translate="yes" xml:space="preserve">
          <source>To uppercase the value in-place, use &lt;a href=&quot;primitive.u8#method.make_ascii_uppercase&quot;&gt;&lt;code&gt;make_ascii_uppercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제자리에서 값을 대문자로 &lt;a href=&quot;primitive.u8#method.make_ascii_uppercase&quot;&gt; &lt;code&gt;make_ascii_uppercase&lt;/code&gt; &lt;/a&gt; 려면 make_ascii_uppercase를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ad9a8481cb2cb5dd232df2f396463103d3a41d2" translate="yes" xml:space="preserve">
          <source>To uppercase the value in-place, use &lt;a href=&quot;struct.osstr#method.make_ascii_uppercase&quot;&gt;&lt;code&gt;OsStr::make_ascii_uppercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제자리에서 값을 대문자로 &lt;a href=&quot;struct.osstr#method.make_ascii_uppercase&quot;&gt; &lt;code&gt;OsStr::make_ascii_uppercase&lt;/code&gt; &lt;/a&gt; 려면 OsStr :: make_ascii_uppercase를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2ec9e0a0dd307f8b51434cf6c875a527cefcad70" translate="yes" xml:space="preserve">
          <source>To uppercase the value in-place, use &lt;a href=&quot;trait.asciiext#tymethod.make_ascii_uppercase&quot;&gt;&lt;code&gt;make_ascii_uppercase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">제자리에서 값을 대문자로 &lt;a href=&quot;trait.asciiext#tymethod.make_ascii_uppercase&quot;&gt; &lt;code&gt;make_ascii_uppercase&lt;/code&gt; &lt;/a&gt; 려면 make_ascii_uppercase를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a0a581c19fda5f34a2ecc353cab28485839d3f8" translate="yes" xml:space="preserve">
          <source>To use a default implementation to summarize instances of &lt;code&gt;NewsArticle&lt;/code&gt; instead of defining a custom implementation, we specify an empty &lt;code&gt;impl&lt;/code&gt; block with &lt;code&gt;impl Summary for NewsArticle {}&lt;/code&gt;.</source>
          <target state="translated">사용자 지정 구현을 정의하는 대신 기본 구현을 사용하여 &lt;code&gt;NewsArticle&lt;/code&gt; 인스턴스를 요약하려면 &lt;code&gt;impl Summary for NewsArticle {}&lt;/code&gt; 사용하여 빈 &lt;code&gt;impl&lt;/code&gt; 블록을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="9f435d65416d088237053151174da52702ca2759" translate="yes" xml:space="preserve">
          <source>To use a module from your current crate, add the &lt;code&gt;crate::&lt;/code&gt; prefix to the path.</source>
          <target state="translated">현재 상자의 모듈을 사용하려면 경로에 &lt;code&gt;crate::&lt;/code&gt; 접두사를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="adbf67a283306a6366d793a3b3158fdc68b8ad73" translate="yes" xml:space="preserve">
          <source>To use a namespace itself in addition to some of its members, &lt;code&gt;self&lt;/code&gt; may appear as part of a brace-enclosed list of imports:</source>
          <target state="translated">일부 멤버 외에 네임 스페이스 자체를 사용하기 위해 &lt;code&gt;self&lt;/code&gt; 는 중괄호로 묶은 가져 오기 목록의 일부로 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b03ec43b2895de636748b67704c685a1fa98427" translate="yes" xml:space="preserve">
          <source>To use a pattern, we compare it to some value. If the pattern matches the value, we use the value parts in our code. Recall the &lt;code&gt;match&lt;/code&gt; expressions in Chapter 6 that used patterns, such as the coin-sorting machine example. If the value fits the shape of the pattern, we can use the named pieces. If it doesn&amp;rsquo;t, the code associated with the pattern won&amp;rsquo;t run.</source>
          <target state="translated">패턴을 사용하기 위해 어떤 값과 비교합니다. 패턴이 값과 일치하면 코드에서 값 부분을 사용합니다. 6 장에서 동전 분류 기계 예제와 같은 패턴을 사용한 &lt;code&gt;match&lt;/code&gt; 표현식을 상기하십시오 . 값이 패턴의 모양에 맞는 경우 명명 된 조각을 사용할 수 있습니다. 그렇지 않으면 패턴과 관련된 코드가 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6cd526c3f5cdfb3e49b95a57c88c2fc1245de535" translate="yes" xml:space="preserve">
          <source>To use a slice type it generally has to be used behind a pointer for example as:</source>
          <target state="translated">슬라이스 유형을 사용하려면 일반적으로 다음과 같이 포인터 뒤에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1d9510373e7fd3a8d97cc9744e3544cf1ebe365c" translate="yes" xml:space="preserve">
          <source>To use a struct after we&amp;rsquo;ve defined it, we create an &lt;em&gt;instance&lt;/em&gt; of that struct by specifying concrete values for each of the fields. We create an instance by stating the name of the struct and then add curly brackets containing &lt;code&gt;key: value&lt;/code&gt; pairs, where the keys are the names of the fields and the values are the data we want to store in those fields. We don&amp;rsquo;t have to specify the fields in the same order in which we declared them in the struct. In other words, the struct definition is like a general template for the type, and instances fill in that template with particular data to create values of the type. For example, we can declare a particular user as shown in Listing 5-2.</source>
          <target state="translated">구조체를 정의한 후 사용하려면 각 필드에 구체적인 값을 지정하여 해당 구조체 의 &lt;em&gt;인스턴스&lt;/em&gt; 를 만듭니다 . 구조체의 이름을 지정하여 인스턴스를 생성 한 다음 &lt;code&gt;key: value&lt;/code&gt; 쌍을 포함하는 중괄호를 추가 합니다. 여기서 키는 필드 이름이고 값은 해당 필드에 저장하려는 데이터입니다. 구조체에서 선언 한 순서대로 필드를 지정할 필요는 없습니다. 즉, 구조체 정의는 형식에 대한 일반적인 템플릿과 같으며 인스턴스는 형식에 대한 값을 만들기 위해 특정 데이터로 해당 템플릿을 채 웁니다. 예를 들어, 목록 5-2와 같이 특정 사용자를 선언 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27989b6610882b719a5ea410b5f71f23c1e34efa" translate="yes" xml:space="preserve">
          <source>To use this feature locally, you typically will use the &lt;code&gt;RUSTFLAGS&lt;/code&gt; environment variable to specify flags to the compiler through Cargo. For example to compile a statically linked binary on MSVC you would execute:</source>
          <target state="translated">이 기능을 로컬로 사용하려면 일반적으로 &lt;code&gt;RUSTFLAGS&lt;/code&gt; 환경 변수를 사용하여 Cargo를 통해 컴파일러에 플래그를 지정합니다. 예를 들어 MSVC에서 정적으로 링크 된 바이너리를 컴파일하려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="aa8b8effb94e7abcaae16085a72643f10b8227aa" translate="yes" xml:space="preserve">
          <source>To use this version of &lt;code&gt;Summary&lt;/code&gt;, we only need to define &lt;code&gt;summarize_author&lt;/code&gt; when we implement the trait on a type:</source>
          <target state="translated">이 버전의 &lt;code&gt;Summary&lt;/code&gt; 를 사용하려면 유형에 특성을 구현할 때 summary_author 만 정의 &lt;code&gt;summarize_author&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="bc4c76af44cf81aae5a3bedd1a4fabcaf591ba2f" translate="yes" xml:space="preserve">
          <source>To wake up all threads, see &lt;a href=&quot;#method.notify_all&quot;&gt;&lt;code&gt;notify_all&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모든 스레드를 깨우려면 &lt;a href=&quot;#method.notify_all&quot;&gt; &lt;code&gt;notify_all&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1bba606e9595f006eac21496e730831a817fd203" translate="yes" xml:space="preserve">
          <source>To wake up all threads, see &lt;a href=&quot;struct.condvar#method.notify_all&quot;&gt;&lt;code&gt;notify_all&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모든 스레드를 깨우려면 &lt;a href=&quot;struct.condvar#method.notify_all&quot;&gt; &lt;code&gt;notify_all&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="43d932c297a4d2b73e1f772e97d55db4b8e0dc93" translate="yes" xml:space="preserve">
          <source>To wake up only one thread, see &lt;a href=&quot;#method.notify_one&quot;&gt;&lt;code&gt;notify_one&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">하나의 스레드 만 깨우려면 &lt;a href=&quot;#method.notify_one&quot;&gt; &lt;code&gt;notify_one&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bee8651caa9f53e075921bde6a903cb8a56a8a73" translate="yes" xml:space="preserve">
          <source>To wake up only one thread, see &lt;a href=&quot;struct.condvar#method.notify_one&quot;&gt;&lt;code&gt;notify_one&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">하나의 스레드 만 깨우려면 &lt;a href=&quot;struct.condvar#method.notify_one&quot;&gt; &lt;code&gt;notify_one&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c88cf3ca8e9feae5d3beb7bbd55b97e74623d342" translate="yes" xml:space="preserve">
          <source>To work around this restriction, consider &quot;hiding&quot; the value behind a reference: either &lt;code&gt;&amp;amp;x&lt;/code&gt; or &lt;code&gt;&amp;amp;mut x&lt;/code&gt;. Since a reference has a fixed size, this lets you move it around as usual. Example:</source>
          <target state="translated">이 제한 사항을 해결하려면 &lt;code&gt;&amp;amp;x&lt;/code&gt; 또는 &lt;code&gt;&amp;amp;mut x&lt;/code&gt; 참조의 값 뒤에 &quot;숨김&quot;을 고려하십시오 . 참조의 크기는 고정되어 있기 때문에 평소대로 이동할 수 있습니다. 예:</target>
        </trans-unit>
        <trans-unit id="6500c202f483ded49d90dd12d80754b82fdf0dff" translate="yes" xml:space="preserve">
          <source>To work around this, it can be covered with a local type, &lt;code&gt;MyType&lt;/code&gt;:</source>
          <target state="translated">이 문제를 해결하려면 로컬 유형 &lt;code&gt;MyType&lt;/code&gt; 으로 덮을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="36dd8bd129ed7bbb15977196b4ec891eb2cbcdbb" translate="yes" xml:space="preserve">
          <source>To work around this, we can use &lt;a href=&quot;#method.split_at_mut&quot;&gt;&lt;code&gt;split_at_mut&lt;/code&gt;&lt;/a&gt; to create two distinct mutable sub-slices from a slice:</source>
          <target state="translated">이 문제를 해결하기 위해 &lt;a href=&quot;#method.split_at_mut&quot;&gt; &lt;code&gt;split_at_mut&lt;/code&gt; &lt;/a&gt; 를 사용하여 슬라이스에서 두 개의 서로 다른 가변 하위 슬라이스를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="24f7e027af97b0bcea482e03195ef7fce8ba5648" translate="yes" xml:space="preserve">
          <source>To work around this, we can use &lt;a href=&quot;#method.split_at_mut&quot;&gt;&lt;code&gt;split_at_mut&lt;/code&gt;&lt;/a&gt; to create two distinct sub-slices from a slice:</source>
          <target state="translated">이 문제를 해결하기 위해 &lt;a href=&quot;#method.split_at_mut&quot;&gt; &lt;code&gt;split_at_mut&lt;/code&gt; &lt;/a&gt; 를 사용하여 슬라이스에서 두 개의 별개의 하위 슬라이스를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88426551199f60d0c53bc995bbba2a8ae94e26e1" translate="yes" xml:space="preserve">
          <source>To work with DSTs, Rust has a particular trait called the &lt;code&gt;Sized&lt;/code&gt; trait to determine whether or not a type&amp;rsquo;s size is known at compile time. This trait is automatically implemented for everything whose size is known at compile time. In addition, Rust implicitly adds a bound on &lt;code&gt;Sized&lt;/code&gt; to every generic function. That is, a generic function definition like this:</source>
          <target state="translated">DST와 함께 작업하기 위해 Rust에는 &lt;code&gt;Sized&lt;/code&gt; 특성 이라는 특수 특성이있어 컴파일시 유형의 크기를 알 수 있는지 여부를 결정합니다. 이 특성은 컴파일 타임에 크기가 알려진 모든 항목에 대해 자동으로 구현됩니다. 또한 Rust는 모든 일반 함수 에 &lt;code&gt;Sized&lt;/code&gt; 에 대한 바운드를 암시 적으로 추가 합니다. 즉, 다음과 같은 일반적인 함수 정의는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fb14220cb77cbb7e4cc1fc269b18360bfeb61f7b" translate="yes" xml:space="preserve">
          <source>To yank a version of a crate, run &lt;code&gt;cargo yank&lt;/code&gt; and specify which version you want to yank:</source>
          <target state="translated">상자의 버전을 잡아 당기려면 &lt;code&gt;cargo yank&lt;/code&gt; 를 실행 하고 잡아 당길 버전을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="358ef599a863a7317d7b73949a61a65e9c8b5929" translate="yes" xml:space="preserve">
          <source>ToLowercase</source>
          <target state="translated">ToLowercase</target>
        </trans-unit>
        <trans-unit id="df38106c5dbe8437c114ca2d685149a2779acb46" translate="yes" xml:space="preserve">
          <source>ToLowercase::all</source>
          <target state="translated">ToLowercase::all</target>
        </trans-unit>
        <trans-unit id="bbeaa264c1c37f2bac007b1544ec3f5ad9fa247a" translate="yes" xml:space="preserve">
          <source>ToLowercase::any</source>
          <target state="translated">ToLowercase::any</target>
        </trans-unit>
        <trans-unit id="0a141811b0b02a8a6bc1f88e69b931b80579b5c2" translate="yes" xml:space="preserve">
          <source>ToLowercase::borrow</source>
          <target state="translated">ToLowercase::borrow</target>
        </trans-unit>
        <trans-unit id="cdeca1abdbe65f3026e21a79b8f904e797c979d8" translate="yes" xml:space="preserve">
          <source>ToLowercase::borrow_mut</source>
          <target state="translated">ToLowercase::borrow_mut</target>
        </trans-unit>
        <trans-unit id="04089a7fe4a382bdeab885ef9891fb5765277adf" translate="yes" xml:space="preserve">
          <source>ToLowercase::by_ref</source>
          <target state="translated">ToLowercase::by_ref</target>
        </trans-unit>
        <trans-unit id="a079ce9b966f7512985cc3db6325af88008cc5f5" translate="yes" xml:space="preserve">
          <source>ToLowercase::chain</source>
          <target state="translated">ToLowercase::chain</target>
        </trans-unit>
        <trans-unit id="34f89547554d65a0175fa66474bd90120ecce7b1" translate="yes" xml:space="preserve">
          <source>ToLowercase::clone</source>
          <target state="translated">ToLowercase::clone</target>
        </trans-unit>
        <trans-unit id="0a39078458104a1579ea1ffbefc1eff627ca4db9" translate="yes" xml:space="preserve">
          <source>ToLowercase::clone_from</source>
          <target state="translated">ToLowercase::clone_from</target>
        </trans-unit>
        <trans-unit id="69987693fa5c572002cf4a8687ae06044830821a" translate="yes" xml:space="preserve">
          <source>ToLowercase::clone_into</source>
          <target state="translated">ToLowercase::clone_into</target>
        </trans-unit>
        <trans-unit id="121cb5982b6d466308c6295488de685c5924188f" translate="yes" xml:space="preserve">
          <source>ToLowercase::cloned</source>
          <target state="translated">ToLowercase::cloned</target>
        </trans-unit>
        <trans-unit id="2a56c21b2935dd999e82afb8be288b273e7d2e4e" translate="yes" xml:space="preserve">
          <source>ToLowercase::cmp</source>
          <target state="translated">ToLowercase::cmp</target>
        </trans-unit>
        <trans-unit id="9a83c4a51b2449ab4001a1ea57020189f34eb86e" translate="yes" xml:space="preserve">
          <source>ToLowercase::collect</source>
          <target state="translated">ToLowercase::collect</target>
        </trans-unit>
        <trans-unit id="fc76b0e4ac6af8ee61de5ea6000b4e90b61281f6" translate="yes" xml:space="preserve">
          <source>ToLowercase::copied</source>
          <target state="translated">ToLowercase::copied</target>
        </trans-unit>
        <trans-unit id="ebd8500418acdbe357cc1847a2d0349da2ad6802" translate="yes" xml:space="preserve">
          <source>ToLowercase::count</source>
          <target state="translated">ToLowercase::count</target>
        </trans-unit>
        <trans-unit id="46c2bfc1c56cb3945b434e3354e83dfe8b8c506d" translate="yes" xml:space="preserve">
          <source>ToLowercase::cycle</source>
          <target state="translated">ToLowercase::cycle</target>
        </trans-unit>
        <trans-unit id="17c64b13d578e62f4865fa3a426a453511fad16f" translate="yes" xml:space="preserve">
          <source>ToLowercase::enumerate</source>
          <target state="translated">ToLowercase::enumerate</target>
        </trans-unit>
        <trans-unit id="22c6e7593fef2063b7782e7156f48b60a1a13824" translate="yes" xml:space="preserve">
          <source>ToLowercase::eq</source>
          <target state="translated">ToLowercase::eq</target>
        </trans-unit>
        <trans-unit id="a97a62afe9c15bee17e74d16036987e2c4a3f22a" translate="yes" xml:space="preserve">
          <source>ToLowercase::filter</source>
          <target state="translated">ToLowercase::filter</target>
        </trans-unit>
        <trans-unit id="282e7712aa0755dc3cee721bbb60ae3056ffd1b8" translate="yes" xml:space="preserve">
          <source>ToLowercase::filter_map</source>
          <target state="translated">ToLowercase::filter_map</target>
        </trans-unit>
        <trans-unit id="5e623530b92901b135346a206054ea74de34c74b" translate="yes" xml:space="preserve">
          <source>ToLowercase::find</source>
          <target state="translated">ToLowercase::find</target>
        </trans-unit>
        <trans-unit id="8199273d20714ffb35f8bf63fc8de1aeeb62aaaf" translate="yes" xml:space="preserve">
          <source>ToLowercase::find_map</source>
          <target state="translated">ToLowercase::find_map</target>
        </trans-unit>
        <trans-unit id="4ed7f75d1d13393082ea7b8eeecf7e820cecc331" translate="yes" xml:space="preserve">
          <source>ToLowercase::flat_map</source>
          <target state="translated">ToLowercase::flat_map</target>
        </trans-unit>
        <trans-unit id="8faef9a1d718b76295200253966c7806e7cdc59c" translate="yes" xml:space="preserve">
          <source>ToLowercase::flatten</source>
          <target state="translated">ToLowercase::flatten</target>
        </trans-unit>
        <trans-unit id="d060a84d6f235fd2215550273860f38eeab5eccf" translate="yes" xml:space="preserve">
          <source>ToLowercase::fmt</source>
          <target state="translated">ToLowercase::fmt</target>
        </trans-unit>
        <trans-unit id="8131b5a5bcf84d17a43fb10e483ba9ff1d8d359c" translate="yes" xml:space="preserve">
          <source>ToLowercase::fold</source>
          <target state="translated">ToLowercase::fold</target>
        </trans-unit>
        <trans-unit id="327b78b92e355c99705bbf603c2bb143fa92d2e9" translate="yes" xml:space="preserve">
          <source>ToLowercase::for_each</source>
          <target state="translated">ToLowercase::for_each</target>
        </trans-unit>
        <trans-unit id="c1d00ad3539f24458681e04a1741cd54badd39cf" translate="yes" xml:space="preserve">
          <source>ToLowercase::from</source>
          <target state="translated">ToLowercase::from</target>
        </trans-unit>
        <trans-unit id="7d595874443f42a9e344ead1449f7c72a2522b74" translate="yes" xml:space="preserve">
          <source>ToLowercase::fuse</source>
          <target state="translated">ToLowercase::fuse</target>
        </trans-unit>
        <trans-unit id="5f012ebb8814c9cf77a450ef55b693640b7421e7" translate="yes" xml:space="preserve">
          <source>ToLowercase::ge</source>
          <target state="translated">ToLowercase::ge</target>
        </trans-unit>
        <trans-unit id="a451e0c1969a73439fef2468147038b278d489fd" translate="yes" xml:space="preserve">
          <source>ToLowercase::gt</source>
          <target state="translated">ToLowercase::gt</target>
        </trans-unit>
        <trans-unit id="642b22a76015cab4922545ce0b1b8fce9e09e5ed" translate="yes" xml:space="preserve">
          <source>ToLowercase::inspect</source>
          <target state="translated">ToLowercase::inspect</target>
        </trans-unit>
        <trans-unit id="7ca3893f4299d51675bc4e51e48ab78b6e95e7ae" translate="yes" xml:space="preserve">
          <source>ToLowercase::into</source>
          <target state="translated">ToLowercase::into</target>
        </trans-unit>
        <trans-unit id="9baa58c23f7e0d689b278ecfab3e39c8efae52c3" translate="yes" xml:space="preserve">
          <source>ToLowercase::into_iter</source>
          <target state="translated">ToLowercase::into_iter</target>
        </trans-unit>
        <trans-unit id="41740e63b2346c1e13490d8bb5f5d3524774e936" translate="yes" xml:space="preserve">
          <source>ToLowercase::is_empty</source>
          <target state="translated">ToLowercase::is_empty</target>
        </trans-unit>
        <trans-unit id="0a3555fc3fa048af9c1a10c2d056047061c3acad" translate="yes" xml:space="preserve">
          <source>ToLowercase::is_sorted</source>
          <target state="translated">ToLowercase::is_sorted</target>
        </trans-unit>
        <trans-unit id="d1e0425d483ec70bb6984df2a767d8b9e4f434c4" translate="yes" xml:space="preserve">
          <source>ToLowercase::is_sorted_by</source>
          <target state="translated">ToLowercase::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="a66c5bf8964eab56ac90671d7ee744d61569a85f" translate="yes" xml:space="preserve">
          <source>ToLowercase::is_sorted_by_key</source>
          <target state="translated">ToLowercase::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="f9ef704f171d5f967ad9a902b9e6c885aa657d95" translate="yes" xml:space="preserve">
          <source>ToLowercase::last</source>
          <target state="translated">ToLowercase::last</target>
        </trans-unit>
        <trans-unit id="d3f98dd839d26ad724880104a40c7e70d33d18c3" translate="yes" xml:space="preserve">
          <source>ToLowercase::le</source>
          <target state="translated">ToLowercase::le</target>
        </trans-unit>
        <trans-unit id="e1ba36fd3934ba511b5d0af5c6f135a35664771b" translate="yes" xml:space="preserve">
          <source>ToLowercase::len</source>
          <target state="translated">ToLowercase::len</target>
        </trans-unit>
        <trans-unit id="2eed1cdf88b1cb0a9fa1233f81e8f43967248498" translate="yes" xml:space="preserve">
          <source>ToLowercase::lt</source>
          <target state="translated">ToLowercase::lt</target>
        </trans-unit>
        <trans-unit id="e43226c948078b9cc9aebaa496f80af6656f0917" translate="yes" xml:space="preserve">
          <source>ToLowercase::map</source>
          <target state="translated">ToLowercase::map</target>
        </trans-unit>
        <trans-unit id="e0c53789432635e282bac9afc1520196b7c560e8" translate="yes" xml:space="preserve">
          <source>ToLowercase::max</source>
          <target state="translated">ToLowercase::max</target>
        </trans-unit>
        <trans-unit id="903a830f2d66f982a4644a703e0e8e4957273461" translate="yes" xml:space="preserve">
          <source>ToLowercase::max_by</source>
          <target state="translated">ToLowercase::max_by</target>
        </trans-unit>
        <trans-unit id="18bae373fc9373515a693f2601a3ad81cbde3459" translate="yes" xml:space="preserve">
          <source>ToLowercase::max_by_key</source>
          <target state="translated">ToLowercase::max_by_key</target>
        </trans-unit>
        <trans-unit id="bb9afa7050228536bbc7504f5c5dfc47a13e78c0" translate="yes" xml:space="preserve">
          <source>ToLowercase::min</source>
          <target state="translated">ToLowercase::min</target>
        </trans-unit>
        <trans-unit id="77c4813b999aa04010a0f28c8553bcc6214e1616" translate="yes" xml:space="preserve">
          <source>ToLowercase::min_by</source>
          <target state="translated">ToLowercase::min_by</target>
        </trans-unit>
        <trans-unit id="423a7c3614737a7cb7033368fb85813297ba5915" translate="yes" xml:space="preserve">
          <source>ToLowercase::min_by_key</source>
          <target state="translated">ToLowercase::min_by_key</target>
        </trans-unit>
        <trans-unit id="45cf81c6356fb6305106b81d4e38e7f435f86cc1" translate="yes" xml:space="preserve">
          <source>ToLowercase::ne</source>
          <target state="translated">ToLowercase::ne</target>
        </trans-unit>
        <trans-unit id="a71fc3ee26e013ac8645c417796e09cd264a122e" translate="yes" xml:space="preserve">
          <source>ToLowercase::next</source>
          <target state="translated">ToLowercase::next</target>
        </trans-unit>
        <trans-unit id="1911198040fb257baaa909fbd9e0ff4bd63738b2" translate="yes" xml:space="preserve">
          <source>ToLowercase::nth</source>
          <target state="translated">ToLowercase::nth</target>
        </trans-unit>
        <trans-unit id="8e0ec3fa9f7c6b4e02f5cdbcceafdedd84b428e3" translate="yes" xml:space="preserve">
          <source>ToLowercase::partial_cmp</source>
          <target state="translated">ToLowercase::partial_cmp</target>
        </trans-unit>
        <trans-unit id="47c77ae9e15794fc333d6ed8815d4414bb103610" translate="yes" xml:space="preserve">
          <source>ToLowercase::partition</source>
          <target state="translated">ToLowercase::partition</target>
        </trans-unit>
        <trans-unit id="75ec1c2334a1ca3250b6d8818285245c4e4389b7" translate="yes" xml:space="preserve">
          <source>ToLowercase::peekable</source>
          <target state="translated">ToLowercase::peekable</target>
        </trans-unit>
        <trans-unit id="5bd4eb545154844db83963b7bf6e24d4160c4184" translate="yes" xml:space="preserve">
          <source>ToLowercase::position</source>
          <target state="translated">ToLowercase::position</target>
        </trans-unit>
        <trans-unit id="da1c2a6ce254ef365fc893f21ebcfb9884ec4d92" translate="yes" xml:space="preserve">
          <source>ToLowercase::product</source>
          <target state="translated">ToLowercase::product</target>
        </trans-unit>
        <trans-unit id="7513906fb803029e9d762eb5a94c745eb5662524" translate="yes" xml:space="preserve">
          <source>ToLowercase::rev</source>
          <target state="translated">ToLowercase::rev</target>
        </trans-unit>
        <trans-unit id="418774bd5cf3162562c6090441d234e9d61a03d7" translate="yes" xml:space="preserve">
          <source>ToLowercase::rposition</source>
          <target state="translated">ToLowercase::rposition</target>
        </trans-unit>
        <trans-unit id="9b317c9f2c5a4d58ea3427624437ce70f6752c98" translate="yes" xml:space="preserve">
          <source>ToLowercase::scan</source>
          <target state="translated">ToLowercase::scan</target>
        </trans-unit>
        <trans-unit id="2347172afd0d4f896ed7b4c55d0f9d8e2916251b" translate="yes" xml:space="preserve">
          <source>ToLowercase::size_hint</source>
          <target state="translated">ToLowercase::size_hint</target>
        </trans-unit>
        <trans-unit id="418c2ea2c35afdc50dcf9a90930d3ce62e8f3999" translate="yes" xml:space="preserve">
          <source>ToLowercase::skip</source>
          <target state="translated">ToLowercase::skip</target>
        </trans-unit>
        <trans-unit id="95df49075bec9d23f70a04c44f6a727846e429e6" translate="yes" xml:space="preserve">
          <source>ToLowercase::skip_while</source>
          <target state="translated">ToLowercase::skip_while</target>
        </trans-unit>
        <trans-unit id="b9d44057d9ed2703572ffed49f6eca5288b3d100" translate="yes" xml:space="preserve">
          <source>ToLowercase::step_by</source>
          <target state="translated">ToLowercase::step_by</target>
        </trans-unit>
        <trans-unit id="12fc6d57d9454f947a272a38199873e4fabe30e6" translate="yes" xml:space="preserve">
          <source>ToLowercase::sum</source>
          <target state="translated">ToLowercase::sum</target>
        </trans-unit>
        <trans-unit id="0f151b1e0bb55576903eeeb5a1d3d1df40fa455c" translate="yes" xml:space="preserve">
          <source>ToLowercase::take</source>
          <target state="translated">ToLowercase::take</target>
        </trans-unit>
        <trans-unit id="bb7ec83ca1b296882f68aab3b80d313fe4becdda" translate="yes" xml:space="preserve">
          <source>ToLowercase::take_while</source>
          <target state="translated">ToLowercase::take_while</target>
        </trans-unit>
        <trans-unit id="4ee080cf3eb36fa9ffb413ea40781d5206121d04" translate="yes" xml:space="preserve">
          <source>ToLowercase::to_owned</source>
          <target state="translated">ToLowercase::to_owned</target>
        </trans-unit>
        <trans-unit id="89719f79b975bafdc49f6c2bf1b53c77dd82479f" translate="yes" xml:space="preserve">
          <source>ToLowercase::to_string</source>
          <target state="translated">ToLowercase::to_string</target>
        </trans-unit>
        <trans-unit id="02fb5f5e1e24ebbf9a57d55d395e203de6f1bb79" translate="yes" xml:space="preserve">
          <source>ToLowercase::try_fold</source>
          <target state="translated">ToLowercase::try_fold</target>
        </trans-unit>
        <trans-unit id="24adb2676fd932bafa66d72575c91291c6415cb3" translate="yes" xml:space="preserve">
          <source>ToLowercase::try_for_each</source>
          <target state="translated">ToLowercase::try_for_each</target>
        </trans-unit>
        <trans-unit id="ca18cfcbad0e84fa95fbec8b5bfb913cdebdfd50" translate="yes" xml:space="preserve">
          <source>ToLowercase::try_from</source>
          <target state="translated">ToLowercase::try_from</target>
        </trans-unit>
        <trans-unit id="e06d04b43ebaa98937e8ae299a145ab53f8f8401" translate="yes" xml:space="preserve">
          <source>ToLowercase::try_into</source>
          <target state="translated">ToLowercase::try_into</target>
        </trans-unit>
        <trans-unit id="37b6363c64db2b818bf5770928eeb9cb5799b27c" translate="yes" xml:space="preserve">
          <source>ToLowercase::type_id</source>
          <target state="translated">ToLowercase::type_id</target>
        </trans-unit>
        <trans-unit id="5dab7a97b855d1005e423aac5a301136ccbfbda8" translate="yes" xml:space="preserve">
          <source>ToLowercase::unzip</source>
          <target state="translated">ToLowercase::unzip</target>
        </trans-unit>
        <trans-unit id="8c6300316ee7d9e235cf97abcd7ffe7ee60f526a" translate="yes" xml:space="preserve">
          <source>ToLowercase::zip</source>
          <target state="translated">ToLowercase::zip</target>
        </trans-unit>
        <trans-unit id="6a954abfe9e5f07fb766f0356ed1234d8f9b2362" translate="yes" xml:space="preserve">
          <source>ToOwned</source>
          <target state="translated">ToOwned</target>
        </trans-unit>
        <trans-unit id="88395f188f7e1627b5813c10232224a853eb2ce1" translate="yes" xml:space="preserve">
          <source>ToOwned::clone_into</source>
          <target state="translated">ToOwned::clone_into</target>
        </trans-unit>
        <trans-unit id="b54aeb29a238430e61c4864d679de09e146fc8bd" translate="yes" xml:space="preserve">
          <source>ToOwned::to_owned</source>
          <target state="translated">ToOwned::to_owned</target>
        </trans-unit>
        <trans-unit id="db76836dc2d12f75bc694c079718628342759cd3" translate="yes" xml:space="preserve">
          <source>ToSocketAddrs</source>
          <target state="translated">ToSocketAddrs</target>
        </trans-unit>
        <trans-unit id="0fed83f8d392d8ac77157990f089f9649d9b7750" translate="yes" xml:space="preserve">
          <source>ToSocketAddrs::to_socket_addrs</source>
          <target state="translated">ToSocketAddrs::to_socket_addrs</target>
        </trans-unit>
        <trans-unit id="1dbc7385badbfda548fb27e2160a33cf32c0f545" translate="yes" xml:space="preserve">
          <source>ToString</source>
          <target state="translated">ToString</target>
        </trans-unit>
        <trans-unit id="44b9808561fdc5221237b58497f052b0ab411690" translate="yes" xml:space="preserve">
          <source>ToString::to_string</source>
          <target state="translated">ToString::to_string</target>
        </trans-unit>
        <trans-unit id="0e33b561569f62cb10ee567c1f64d4f901389c05" translate="yes" xml:space="preserve">
          <source>ToUppercase</source>
          <target state="translated">ToUppercase</target>
        </trans-unit>
        <trans-unit id="9ff9a36e95ac5564578763dcb0e10b5a089787be" translate="yes" xml:space="preserve">
          <source>ToUppercase::all</source>
          <target state="translated">ToUppercase::all</target>
        </trans-unit>
        <trans-unit id="65730a9e88411b06193ba55e82da8ee1907a8064" translate="yes" xml:space="preserve">
          <source>ToUppercase::any</source>
          <target state="translated">ToUppercase::any</target>
        </trans-unit>
        <trans-unit id="7bbc3824337aaeab2c429030633a1af5ed905e80" translate="yes" xml:space="preserve">
          <source>ToUppercase::borrow</source>
          <target state="translated">ToUppercase::borrow</target>
        </trans-unit>
        <trans-unit id="054e212cd833cb188e6198592b3d47a12224a8d7" translate="yes" xml:space="preserve">
          <source>ToUppercase::borrow_mut</source>
          <target state="translated">ToUppercase::borrow_mut</target>
        </trans-unit>
        <trans-unit id="6cb0a8be2d9bacab3bc53f929148bf74eddc427a" translate="yes" xml:space="preserve">
          <source>ToUppercase::by_ref</source>
          <target state="translated">ToUppercase::by_ref</target>
        </trans-unit>
        <trans-unit id="f6523db9347a61697b6b9197bca2d6fba8a42d3c" translate="yes" xml:space="preserve">
          <source>ToUppercase::chain</source>
          <target state="translated">ToUppercase::chain</target>
        </trans-unit>
        <trans-unit id="c0aca2868b888310176cab83baeec3b2d775557f" translate="yes" xml:space="preserve">
          <source>ToUppercase::clone</source>
          <target state="translated">ToUppercase::clone</target>
        </trans-unit>
        <trans-unit id="67fd93e201a873e97c66908ead7ceae8bc1e8a92" translate="yes" xml:space="preserve">
          <source>ToUppercase::clone_from</source>
          <target state="translated">ToUppercase::clone_from</target>
        </trans-unit>
        <trans-unit id="b84ef7303ff66cf2803f532b77195b1cf5d457a1" translate="yes" xml:space="preserve">
          <source>ToUppercase::clone_into</source>
          <target state="translated">ToUppercase::clone_into</target>
        </trans-unit>
        <trans-unit id="5ccbf12c4818e31f1595aa777831465b36f69a51" translate="yes" xml:space="preserve">
          <source>ToUppercase::cloned</source>
          <target state="translated">ToUppercase::cloned</target>
        </trans-unit>
        <trans-unit id="a8f2e905cd5750074d352d368e76df6b39f96427" translate="yes" xml:space="preserve">
          <source>ToUppercase::cmp</source>
          <target state="translated">ToUppercase::cmp</target>
        </trans-unit>
        <trans-unit id="1dc5a2f9004fb521903e5e5a3fd364dc11757205" translate="yes" xml:space="preserve">
          <source>ToUppercase::collect</source>
          <target state="translated">ToUppercase::collect</target>
        </trans-unit>
        <trans-unit id="af8f9ceea80fc5e950363e9318dd158d01a4d040" translate="yes" xml:space="preserve">
          <source>ToUppercase::copied</source>
          <target state="translated">ToUppercase::copied</target>
        </trans-unit>
        <trans-unit id="1366fc011a472ff5d53cde6f1ac86461228351e7" translate="yes" xml:space="preserve">
          <source>ToUppercase::count</source>
          <target state="translated">ToUppercase::count</target>
        </trans-unit>
        <trans-unit id="1184c3c693dff48405ca7548cca0ed458ff29830" translate="yes" xml:space="preserve">
          <source>ToUppercase::cycle</source>
          <target state="translated">ToUppercase::cycle</target>
        </trans-unit>
        <trans-unit id="4e91911466f6b5af4078b70e11c4d24775fe742f" translate="yes" xml:space="preserve">
          <source>ToUppercase::enumerate</source>
          <target state="translated">ToUppercase::enumerate</target>
        </trans-unit>
        <trans-unit id="7840d75ecceac6bb8014df3896750d9d72c6c4f4" translate="yes" xml:space="preserve">
          <source>ToUppercase::eq</source>
          <target state="translated">ToUppercase::eq</target>
        </trans-unit>
        <trans-unit id="2a9bfa9a45635d09ff4f0e7dbad7c78cf4865a99" translate="yes" xml:space="preserve">
          <source>ToUppercase::filter</source>
          <target state="translated">ToUppercase::filter</target>
        </trans-unit>
        <trans-unit id="a2ce94b0c7944e165ba6c67b1e1d6438853b3133" translate="yes" xml:space="preserve">
          <source>ToUppercase::filter_map</source>
          <target state="translated">ToUppercase::filter_map</target>
        </trans-unit>
        <trans-unit id="33b7908aaa91c2cca1edd3fbd1eb5ed2b7161ab8" translate="yes" xml:space="preserve">
          <source>ToUppercase::find</source>
          <target state="translated">ToUppercase::find</target>
        </trans-unit>
        <trans-unit id="26582c132713274fb6090fc39fe168d493ee012a" translate="yes" xml:space="preserve">
          <source>ToUppercase::find_map</source>
          <target state="translated">ToUppercase::find_map</target>
        </trans-unit>
        <trans-unit id="d2233ee6bb72d979bc01f41100247c5902cf0607" translate="yes" xml:space="preserve">
          <source>ToUppercase::flat_map</source>
          <target state="translated">ToUppercase::flat_map</target>
        </trans-unit>
        <trans-unit id="bc467f30c7752c24841765febf75cc9fdc574574" translate="yes" xml:space="preserve">
          <source>ToUppercase::flatten</source>
          <target state="translated">ToUppercase::flatten</target>
        </trans-unit>
        <trans-unit id="da04bbd5685fac2d5a4df3c9db6cca8ac3ddfa78" translate="yes" xml:space="preserve">
          <source>ToUppercase::fmt</source>
          <target state="translated">ToUppercase::fmt</target>
        </trans-unit>
        <trans-unit id="dab772b50aae344c74f698ba5170622c5f015ee3" translate="yes" xml:space="preserve">
          <source>ToUppercase::fold</source>
          <target state="translated">ToUppercase::fold</target>
        </trans-unit>
        <trans-unit id="771853b6cd0b3a3d225b473ef9703bb5e4303729" translate="yes" xml:space="preserve">
          <source>ToUppercase::for_each</source>
          <target state="translated">ToUppercase::for_each</target>
        </trans-unit>
        <trans-unit id="8ce8c4bb893f0605c572e1569c0a3c898fc706ea" translate="yes" xml:space="preserve">
          <source>ToUppercase::from</source>
          <target state="translated">ToUppercase::from</target>
        </trans-unit>
        <trans-unit id="e5bc2c74a5fd665c9a82c2a33e80270730f97b12" translate="yes" xml:space="preserve">
          <source>ToUppercase::fuse</source>
          <target state="translated">ToUppercase::fuse</target>
        </trans-unit>
        <trans-unit id="20067e8f8574346c33f6af0deb21cc95edf75430" translate="yes" xml:space="preserve">
          <source>ToUppercase::ge</source>
          <target state="translated">ToUppercase::ge</target>
        </trans-unit>
        <trans-unit id="d691aa9e30d434c7acd37842ea89626858043c5a" translate="yes" xml:space="preserve">
          <source>ToUppercase::gt</source>
          <target state="translated">ToUppercase::gt</target>
        </trans-unit>
        <trans-unit id="2c07bcd9aa88f2987da2c05609b8b051fbd0bd49" translate="yes" xml:space="preserve">
          <source>ToUppercase::inspect</source>
          <target state="translated">ToUppercase::inspect</target>
        </trans-unit>
        <trans-unit id="fdebac9771e781ff415a919dcfc0e2e2f813f95f" translate="yes" xml:space="preserve">
          <source>ToUppercase::into</source>
          <target state="translated">ToUppercase::into</target>
        </trans-unit>
        <trans-unit id="28c925e3769d53d774548da83c53adf049d9614e" translate="yes" xml:space="preserve">
          <source>ToUppercase::into_iter</source>
          <target state="translated">ToUppercase::into_iter</target>
        </trans-unit>
        <trans-unit id="bf3856a1c7cdbe8a6b0b5d5447d4f1dda66c5b87" translate="yes" xml:space="preserve">
          <source>ToUppercase::is_empty</source>
          <target state="translated">ToUppercase::is_empty</target>
        </trans-unit>
        <trans-unit id="e56ebe838b86d90990ba23ebb8e7d7b475bfba70" translate="yes" xml:space="preserve">
          <source>ToUppercase::is_sorted</source>
          <target state="translated">ToUppercase::is_sorted</target>
        </trans-unit>
        <trans-unit id="e213f890c3567bf89ebbd96dd28396c3c8369989" translate="yes" xml:space="preserve">
          <source>ToUppercase::is_sorted_by</source>
          <target state="translated">ToUppercase::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="4214e06077f37c115583c69ea8457f9ca4ca03c8" translate="yes" xml:space="preserve">
          <source>ToUppercase::is_sorted_by_key</source>
          <target state="translated">ToUppercase::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="43c20634324c1e57c53610dd095c7b85f97be6a8" translate="yes" xml:space="preserve">
          <source>ToUppercase::last</source>
          <target state="translated">ToUppercase::last</target>
        </trans-unit>
        <trans-unit id="e15b9289846aa62aa7c399eec130546dddf92570" translate="yes" xml:space="preserve">
          <source>ToUppercase::le</source>
          <target state="translated">ToUppercase::le</target>
        </trans-unit>
        <trans-unit id="bf4ae1725f8c939f34b0f3698672e2eca8d46e36" translate="yes" xml:space="preserve">
          <source>ToUppercase::len</source>
          <target state="translated">ToUppercase::len</target>
        </trans-unit>
        <trans-unit id="6ef86484cb6e83aca67edc255bfe91855fddeaee" translate="yes" xml:space="preserve">
          <source>ToUppercase::lt</source>
          <target state="translated">ToUppercase::lt</target>
        </trans-unit>
        <trans-unit id="36fb30f84e7d12187cc3a5d20674f0ffa2e7e434" translate="yes" xml:space="preserve">
          <source>ToUppercase::map</source>
          <target state="translated">ToUppercase::map</target>
        </trans-unit>
        <trans-unit id="a5794f06c8f621ebfd36483cb2bdfba69962a46b" translate="yes" xml:space="preserve">
          <source>ToUppercase::max</source>
          <target state="translated">ToUppercase::max</target>
        </trans-unit>
        <trans-unit id="54ed5ffb42b174875a2cfcdf299aa03324e7d8e8" translate="yes" xml:space="preserve">
          <source>ToUppercase::max_by</source>
          <target state="translated">ToUppercase::max_by</target>
        </trans-unit>
        <trans-unit id="82140a942c03457466b33d70a38f8b426ee443a8" translate="yes" xml:space="preserve">
          <source>ToUppercase::max_by_key</source>
          <target state="translated">ToUppercase::max_by_key</target>
        </trans-unit>
        <trans-unit id="8c46ff457e70dbefd5377da1fe14a1d716feed69" translate="yes" xml:space="preserve">
          <source>ToUppercase::min</source>
          <target state="translated">ToUppercase::min</target>
        </trans-unit>
        <trans-unit id="1f4f06fa647a15bfd6777e3ad80989539da952c2" translate="yes" xml:space="preserve">
          <source>ToUppercase::min_by</source>
          <target state="translated">ToUppercase::min_by</target>
        </trans-unit>
        <trans-unit id="d2ca7b43662db6e83751c9781321c5f447b69b54" translate="yes" xml:space="preserve">
          <source>ToUppercase::min_by_key</source>
          <target state="translated">ToUppercase::min_by_key</target>
        </trans-unit>
        <trans-unit id="a2c10d642735dd01dd2230f6eb42d2d15de01ca4" translate="yes" xml:space="preserve">
          <source>ToUppercase::ne</source>
          <target state="translated">ToUppercase::ne</target>
        </trans-unit>
        <trans-unit id="bdcf8b574275972312b79411fc90c298fec5c707" translate="yes" xml:space="preserve">
          <source>ToUppercase::next</source>
          <target state="translated">ToUppercase::next</target>
        </trans-unit>
        <trans-unit id="d3b98223ff39c0cf8bc6901176a913dbb5af5a3f" translate="yes" xml:space="preserve">
          <source>ToUppercase::nth</source>
          <target state="translated">ToUppercase::nth</target>
        </trans-unit>
        <trans-unit id="ac55c59ffb3d1b90b5281f1cdb8221031a9f3d86" translate="yes" xml:space="preserve">
          <source>ToUppercase::partial_cmp</source>
          <target state="translated">ToUppercase::partial_cmp</target>
        </trans-unit>
        <trans-unit id="43ba4010531c56c76a71cac5c7783bb9326c06ff" translate="yes" xml:space="preserve">
          <source>ToUppercase::partition</source>
          <target state="translated">ToUppercase::partition</target>
        </trans-unit>
        <trans-unit id="8a67cd96d9e9df3939b7f6b2d037a84acda5915a" translate="yes" xml:space="preserve">
          <source>ToUppercase::peekable</source>
          <target state="translated">ToUppercase::peekable</target>
        </trans-unit>
        <trans-unit id="c5de4cd05b5eea91f6372ea13496d89698a886d9" translate="yes" xml:space="preserve">
          <source>ToUppercase::position</source>
          <target state="translated">ToUppercase::position</target>
        </trans-unit>
        <trans-unit id="3276e7acdf8a52ca46452466df5445f95d4c42ce" translate="yes" xml:space="preserve">
          <source>ToUppercase::product</source>
          <target state="translated">ToUppercase::product</target>
        </trans-unit>
        <trans-unit id="2ec3aca6fa0998e131a8dbb7e0429f53b8e20e3a" translate="yes" xml:space="preserve">
          <source>ToUppercase::rev</source>
          <target state="translated">ToUppercase::rev</target>
        </trans-unit>
        <trans-unit id="1f5b04931231d64a89f93330632ae0491d9a8306" translate="yes" xml:space="preserve">
          <source>ToUppercase::rposition</source>
          <target state="translated">ToUppercase::rposition</target>
        </trans-unit>
        <trans-unit id="bd0bd16a7f62be84e2b4f57e866e556615bf5f51" translate="yes" xml:space="preserve">
          <source>ToUppercase::scan</source>
          <target state="translated">ToUppercase::scan</target>
        </trans-unit>
        <trans-unit id="c12a079f9acc9eb022d00c3c9e691984df24e3dd" translate="yes" xml:space="preserve">
          <source>ToUppercase::size_hint</source>
          <target state="translated">ToUppercase::size_hint</target>
        </trans-unit>
        <trans-unit id="36cc8342ae3ebfcc66e29de8713ad4b5d25ed1ec" translate="yes" xml:space="preserve">
          <source>ToUppercase::skip</source>
          <target state="translated">ToUppercase::skip</target>
        </trans-unit>
        <trans-unit id="bc763b46d6ffe3cde30022e6b310b987fb4690fc" translate="yes" xml:space="preserve">
          <source>ToUppercase::skip_while</source>
          <target state="translated">ToUppercase::skip_while</target>
        </trans-unit>
        <trans-unit id="bdd73144830ccf5acc66a08a0eb4055b58dd100c" translate="yes" xml:space="preserve">
          <source>ToUppercase::step_by</source>
          <target state="translated">ToUppercase::step_by</target>
        </trans-unit>
        <trans-unit id="355510b3a2c94feee0516eb6236e6b26c520c86f" translate="yes" xml:space="preserve">
          <source>ToUppercase::sum</source>
          <target state="translated">ToUppercase::sum</target>
        </trans-unit>
        <trans-unit id="5f1bfaa41ae891ff2a87080b765b405813dfaf1e" translate="yes" xml:space="preserve">
          <source>ToUppercase::take</source>
          <target state="translated">ToUppercase::take</target>
        </trans-unit>
        <trans-unit id="ace4eaaac22836c883eb26f26b69083a1e81c44a" translate="yes" xml:space="preserve">
          <source>ToUppercase::take_while</source>
          <target state="translated">ToUppercase::take_while</target>
        </trans-unit>
        <trans-unit id="aeac81822411ec59962d593c1135903013fb64dd" translate="yes" xml:space="preserve">
          <source>ToUppercase::to_owned</source>
          <target state="translated">ToUppercase::to_owned</target>
        </trans-unit>
        <trans-unit id="c254c93eabb3947af47ca116107ff60db0f65f9f" translate="yes" xml:space="preserve">
          <source>ToUppercase::to_string</source>
          <target state="translated">ToUppercase::to_string</target>
        </trans-unit>
        <trans-unit id="9586835b3ffa68bc81bff272ded62df7bfd896a5" translate="yes" xml:space="preserve">
          <source>ToUppercase::try_fold</source>
          <target state="translated">ToUppercase::try_fold</target>
        </trans-unit>
        <trans-unit id="3285dc30d7466785bb24e349a2a90f48ee1105df" translate="yes" xml:space="preserve">
          <source>ToUppercase::try_for_each</source>
          <target state="translated">ToUppercase::try_for_each</target>
        </trans-unit>
        <trans-unit id="f78675d80da0fb2dc076781338842ee7388e6bbb" translate="yes" xml:space="preserve">
          <source>ToUppercase::try_from</source>
          <target state="translated">ToUppercase::try_from</target>
        </trans-unit>
        <trans-unit id="bbc85f420c55ff506706c343e3d016f559155d33" translate="yes" xml:space="preserve">
          <source>ToUppercase::try_into</source>
          <target state="translated">ToUppercase::try_into</target>
        </trans-unit>
        <trans-unit id="67c5523cb2fdea348c069bcedcae5b194e0fa100" translate="yes" xml:space="preserve">
          <source>ToUppercase::type_id</source>
          <target state="translated">ToUppercase::type_id</target>
        </trans-unit>
        <trans-unit id="59512192fd21e6e15883e4c5f16fa785a7ae4b9e" translate="yes" xml:space="preserve">
          <source>ToUppercase::unzip</source>
          <target state="translated">ToUppercase::unzip</target>
        </trans-unit>
        <trans-unit id="71c5320853e9bf97d3c8e47e587d200e6ab7e991" translate="yes" xml:space="preserve">
          <source>ToUppercase::zip</source>
          <target state="translated">ToUppercase::zip</target>
        </trans-unit>
        <trans-unit id="c38c6c1f3a2743f8626703abb302e403d20ff81c" translate="yes" xml:space="preserve">
          <source>Tokens</source>
          <target state="translated">Tokens</target>
        </trans-unit>
        <trans-unit id="23b07a92f99f26864b1d4cab09dbe7e6ffc01402" translate="yes" xml:space="preserve">
          <source>Tokens are primitive productions in the grammar defined by regular (non-recursive) languages. Rust source input can be broken down into the following kinds of tokens:</source>
          <target state="translated">토큰은 일반 (재귀 적이 지 않은) 언어로 정의 된 문법의 기본 프로덕션입니다. 녹 소스 입력은 다음과 같은 종류의 토큰으로 나눌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3997b5b9595479642fa6a353b8f62de4c85bdb4" translate="yes" xml:space="preserve">
          <source>Too few type arguments were supplied for a function. For example:</source>
          <target state="translated">함수에 제공되는 형식 인수가 너무 적습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b64cc80b4d048074e951f53af2266c9b980ecc1d" translate="yes" xml:space="preserve">
          <source>Too many type arguments were supplied for a function. For example:</source>
          <target state="translated">함수에 너무 많은 유형 인수가 제공되었습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3becdad8640a8a7664cb1587373bbed530e9eaef" translate="yes" xml:space="preserve">
          <source>Tool attributes</source>
          <target state="translated">도구 속성</target>
        </trans-unit>
        <trans-unit id="298b5435880f729f28b40fb8cb4d6d358f7d7bda" translate="yes" xml:space="preserve">
          <source>Tool attributes are not available if the &lt;a href=&quot;items/modules#prelude-items&quot;&gt;&lt;code&gt;no_implicit_prelude&lt;/code&gt;&lt;/a&gt; attribute is used.</source>
          <target state="translated">&lt;a href=&quot;items/modules#prelude-items&quot;&gt; &lt;code&gt;no_implicit_prelude&lt;/code&gt; &lt;/a&gt; 속성을 사용 하면 도구 속성을 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="04ecf72079460c624f56de2aec19167e9b592e5f" translate="yes" xml:space="preserve">
          <source>Tool lint attributes</source>
          <target state="translated">도구 보푸라기 속성</target>
        </trans-unit>
        <trans-unit id="9e4ff695f8d7f54d10234c8c693febf11bceeb0a" translate="yes" xml:space="preserve">
          <source>Tool lints allows using scoped lints, to &lt;code&gt;allow&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, &lt;code&gt;deny&lt;/code&gt; or &lt;code&gt;forbid&lt;/code&gt; lints of certain tools.</source>
          <target state="translated">도구 보푸라기 보푸라기를 사용하여 특정 도구의 보푸라기 를 &lt;code&gt;allow&lt;/code&gt; , &lt;code&gt;warn&lt;/code&gt; , &lt;code&gt;deny&lt;/code&gt; 또는 &lt;code&gt;forbid&lt;/code&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0cfacecf587078db6db43488caa6d580978c4bb" translate="yes" xml:space="preserve">
          <source>Tool lints only get checked when the associated tool is active. If a lint attribute, such as &lt;code&gt;allow&lt;/code&gt;, references a nonexistent tool lint, the compiler will not warn about the nonexistent lint until you use the tool.</source>
          <target state="translated">도구 보풀은 연결된 도구가 활성화 된 경우에만 확인됩니다. &lt;code&gt;allow&lt;/code&gt; 와 같은 lint 속성 이 존재하지 않는 도구 보푸라기를 참조하는 경우 도구를 사용할 때까지 컴파일러는 존재하지 않는 보푸라기에 대해 경고하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2b3bf7074f1000742128073f003a13e0d75375fa" translate="yes" xml:space="preserve">
          <source>Tracking the inebriation of customers at a bar</source>
          <target state="translated">술집에서 고객의 식욕 추적</target>
        </trans-unit>
        <trans-unit id="dad674e48704a92597b8a13244ba1d8ca29324b7" translate="yes" xml:space="preserve">
          <source>Trade-offs</source>
          <target state="translated">Trade-offs</target>
        </trans-unit>
        <trans-unit id="8a6c5b14d85fb7777855348d57172119a05a9066" translate="yes" xml:space="preserve">
          <source>Trade-offs of the State Pattern</source>
          <target state="translated">국가 패턴의 절충</target>
        </trans-unit>
        <trans-unit id="b36366d44b437b0f859e29f4614b0107cecfe355" translate="yes" xml:space="preserve">
          <source>Trait</source>
          <target state="translated">Trait</target>
        </trans-unit>
        <trans-unit id="7418cda1dddd9f707baf2b1acabeb7297ddae8f4" translate="yes" xml:space="preserve">
          <source>Trait Bound Syntax</source>
          <target state="translated">특성 바인딩 구문</target>
        </trans-unit>
        <trans-unit id="79d040a039f209d4b088e4414045e49f19a318f9" translate="yes" xml:space="preserve">
          <source>Trait Implementation Coherence</source>
          <target state="translated">특성 구현 일관성</target>
        </trans-unit>
        <trans-unit id="26b898f7f42ac0607067211907cfe144baef2099" translate="yes" xml:space="preserve">
          <source>Trait Implementations</source>
          <target state="translated">특성 구현</target>
        </trans-unit>
        <trans-unit id="29c33623e3eecc134b62bfbdf8421daa25449235" translate="yes" xml:space="preserve">
          <source>Trait Object Layout</source>
          <target state="translated">특성 개체 레이아웃</target>
        </trans-unit>
        <trans-unit id="1d17f32f109df2cae8776e118c0cd08d010484eb" translate="yes" xml:space="preserve">
          <source>Trait Object Lifetime Bounds</source>
          <target state="translated">특성 개체 수명 한계</target>
        </trans-unit>
        <trans-unit id="0f2fa6f9f52d26ee86cd56ce4895853eea3665a6" translate="yes" xml:space="preserve">
          <source>Trait Objects Perform Dynamic Dispatch</source>
          <target state="translated">특성 객체가 동적 디스패치를 ​​수행</target>
        </trans-unit>
        <trans-unit id="a75e14ab76ff0ab816d5d3c2937abd862e423b2f" translate="yes" xml:space="preserve">
          <source>Trait and lifetime bounds</source>
          <target state="translated">특성과 수명 한계</target>
        </trans-unit>
        <trans-unit id="41af368f93d8a39d7122b161977ffe16f6a12e35" translate="yes" xml:space="preserve">
          <source>Trait and lifetime bounds are also used to name &lt;a href=&quot;types/trait-object&quot;&gt;trait objects&lt;/a&gt;.</source>
          <target state="translated">특성 및 수명 한계는 &lt;a href=&quot;types/trait-object&quot;&gt;특성 오브젝트의&lt;/a&gt; 이름을 지정하는 데에도 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="941497474640686e1a5e201b7a0add49b752830f" translate="yes" xml:space="preserve">
          <source>Trait bounds</source>
          <target state="translated">특성 범위</target>
        </trans-unit>
        <trans-unit id="4fcf62d60d13dd717001ca9dd0618f2bf25f60fb" translate="yes" xml:space="preserve">
          <source>Trait for equality comparisons which are &lt;a href=&quot;http://en.wikipedia.org/wiki/Partial_equivalence_relation&quot;&gt;partial equivalence relations&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Partial_equivalence_relation&quot;&gt;부분 동등 관계인&lt;/a&gt; 동등 비교를위한 특성 .</target>
        </trans-unit>
        <trans-unit id="ef0a7e79d3d4953fe69d9a8d5ee6294c86326bfd" translate="yes" xml:space="preserve">
          <source>Trait for equality comparisons which are &lt;a href=&quot;https://en.wikipedia.org/wiki/Equivalence_relation&quot;&gt;equivalence relations&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Equivalence_relation&quot;&gt;동등성 관계인&lt;/a&gt; 평등 비교를위한 특성 .</target>
        </trans-unit>
        <trans-unit id="eac0088c6ab97a23265d057818a34fc5c7b03fb7" translate="yes" xml:space="preserve">
          <source>Trait for equality comparisons which are &lt;a href=&quot;https://en.wikipedia.org/wiki/Partial_equivalence_relation&quot;&gt;partial equivalence relations&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Partial_equivalence_relation&quot;&gt;부분 동등성 관계인&lt;/a&gt; 동등 비교의 특성 .</target>
        </trans-unit>
        <trans-unit id="8cec9bd7b654341aff1af9f8d64c24f966f7b024" translate="yes" xml:space="preserve">
          <source>Trait for types that form a &lt;a href=&quot;https://en.wikipedia.org/wiki/Total_order&quot;&gt;total order&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Total_order&quot;&gt;전체 주문&lt;/a&gt; 을 구성하는 유형의 장점 .</target>
        </trans-unit>
        <trans-unit id="eda5d9fc229c855a2ef6aa3c2bfb5731468bf0cc" translate="yes" xml:space="preserve">
          <source>Trait for values that can be compared for a sort-order.</source>
          <target state="translated">정렬 순서와 비교할 수있는 값을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="64186133cfc350eebda0888af60b096eb938c6a7" translate="yes" xml:space="preserve">
          <source>Trait implementations</source>
          <target state="translated">특성 구현</target>
        </trans-unit>
        <trans-unit id="ddca8ab133e8a574bb0807189227aaf80ac0b4fc" translate="yes" xml:space="preserve">
          <source>Trait implementations can only implement associated constants that are members of the trait in question.</source>
          <target state="translated">특성 구현은 해당 특성의 구성원 인 연관된 상수 만 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a2ed29df58a98467df7b65482664c061f2e57d4" translate="yes" xml:space="preserve">
          <source>Trait implementations can only implement associated constants that are members of the trait in question. This error indicates that you attempted to implement an associated constant whose name does not match the name of any associated constant in the trait.</source>
          <target state="translated">특성 구현은 해당 특성의 멤버 인 관련 상수 만 구현할 수 있습니다. 이 오류는 이름이 특성의 연관된 상수 이름과 일치하지 않는 연관된 상수를 구현하려고 시도했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="826d4810ddc337c0170d557193ecb3f363cb0584" translate="yes" xml:space="preserve">
          <source>Trait implementations can only implement associated types that are members of the trait in question.</source>
          <target state="translated">특성 구현은 해당 특성의 멤버 인 연관된 유형 만 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc82d5ecd28dae290ae968b51be9ef3018535288" translate="yes" xml:space="preserve">
          <source>Trait implementations can only implement associated types that are members of the trait in question. This error indicates that you attempted to implement an associated type whose name does not match the name of any associated type in the trait.</source>
          <target state="translated">특성 구현은 해당 특성의 구성원 인 연관된 유형 만 구현할 수 있습니다. 이 오류는 이름이 특성에서 연관된 유형의 이름과 일치하지 않는 연관된 유형을 구현하려고 시도했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="24048bbeb068432309ce266edfa2a054d72baec8" translate="yes" xml:space="preserve">
          <source>Trait items syntactically allow a &lt;a href=&quot;../visibility-and-privacy&quot;&gt;&lt;em&gt;Visibility&lt;/em&gt;&lt;/a&gt; annotation, but this is rejected when the trait is validated. This allows items to be parsed with a unified syntax across different contexts where they are used. As an example, an empty &lt;code&gt;vis&lt;/code&gt; macro fragment specifier can be used for trait items, where the macro rule may be used in other situations where visibility is allowed.</source>
          <target state="translated">특성 항목은 구문 상 &lt;a href=&quot;../visibility-and-privacy&quot;&gt;&lt;em&gt;가시성&lt;/em&gt;&lt;/a&gt; 주석을 허용 하지만 특성이 검증되면 거부됩니다. 이를 통해 항목이 사용되는 여러 컨텍스트에서 통합 구문으로 항목을 구문 분석 할 수 있습니다. 예를 들어, 빈 &lt;code&gt;vis&lt;/code&gt; 매크로 조각 지정자는 트레이 트 항목에 사용될 수 있으며, 매크로 규칙은 가시성이 허용되는 다른 상황에서 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93dc7d0661c7c1cf56a871254e1715d367179182" translate="yes" xml:space="preserve">
          <source>Trait methods cannot be declared &lt;code&gt;const&lt;/code&gt; by design. For more information, see &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/911&quot;&gt;RFC 911&lt;/a&gt;.</source>
          <target state="translated">특성 메서드는 의도적으로 &lt;code&gt;const&lt;/code&gt; 로 선언 될 수 없습니다 . 자세한 정보는 &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/911&quot;&gt;RFC 911을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3a51226ce6186ef57bc4f8d39074c6398e097981" translate="yes" xml:space="preserve">
          <source>Trait methods currently cannot take patterns as arguments.</source>
          <target state="translated">특성 메소드는 현재 패턴을 인수로 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2484ce752e551a673766cb07f53076cdd0470999" translate="yes" xml:space="preserve">
          <source>Trait objects</source>
          <target state="translated">특성 개체</target>
        </trans-unit>
        <trans-unit id="d0ff67bb0a0ee2576fc48fed596bc8092c7aa725" translate="yes" xml:space="preserve">
          <source>Trait objects are a form of dynamic dispatch and use a dynamically sized type for the inner type. So, for a given trait &lt;code&gt;Trait&lt;/code&gt;, when &lt;code&gt;Trait&lt;/code&gt; is treated as a type, as in &lt;code&gt;Box&amp;lt;Trait&amp;gt;&lt;/code&gt;, the inner type is 'unsized'. In such cases the boxed pointer is a 'fat pointer' that contains an extra pointer to a table of methods (among other things) for dynamic dispatch. This design mandates some restrictions on the types of traits that are allowed to be used in trait objects, which are collectively termed as 'object safety' rules.</source>
          <target state="translated">특성 객체는 동적 디스패치의 한 형태이며 내부 유형에 대해 동적 크기의 유형을 사용합니다. 따라서 지정된 특성 &lt;code&gt;Trait&lt;/code&gt; 의 경우 &lt;code&gt;Box&amp;lt;Trait&amp;gt;&lt;/code&gt; 에서와 같이 &lt;code&gt;Trait&lt;/code&gt; 이 유형으로 처리 되면 내부 유형은 '크기 조정되지 않습니다'. 이러한 경우 박스형 포인터는 동적 디스패치에 대한 메소드 테이블에 대한 추가 포인터를 포함하는 '지방 포인터'입니다. 이 설계는 집합 적 객체 안전 규칙으로 불리는 형질 개체에 사용될 수있는 형질 유형에 대한 일부 제한을 요구합니다.</target>
        </trans-unit>
        <trans-unit id="5ea53f21fe7d48d8c36beccecda99fd8c1606afe" translate="yes" xml:space="preserve">
          <source>Trait objects are written as the optional keyword &lt;code&gt;dyn&lt;/code&gt; followed by a set of trait bounds, but with the following restrictions on the trait bounds. All traits except the first trait must be auto traits, there may not be more than one lifetime, and opt-out bounds (e.g. &lt;code&gt;?Sized&lt;/code&gt;) are not allowed. Furthermore, paths to traits may be parenthesized.</source>
          <target state="translated">특성 개체는 선택적 키워드 &lt;code&gt;dyn&lt;/code&gt; 다음에 특성 범위가 설정되지만 특성 범위에 대해 다음과 같은 제한이 있습니다. 첫 번째 특성을 제외한 모든 특성은 자동 특성이어야하며 수명이 1 회를 초과 할 수 없으며 옵트 아웃 범위 (예 : &lt;code&gt;?Sized&lt;/code&gt; )는 허용되지 않습니다. 또한 특성의 경로는 괄호로 묶을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59817a6fb01d811236061d6945ce61c60bbb6a8e" translate="yes" xml:space="preserve">
          <source>Trait objects have the same layout as the value the trait object is of.</source>
          <target state="translated">특성 개체는 특성 개체의 값과 동일한 레이아웃을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="1bbbb43369cd1da1e54ccdae8b4bbe0c9a735c31" translate="yes" xml:space="preserve">
          <source>Trait objects implement the base trait, its auto traits, and any &lt;a href=&quot;../items/traits#supertraits&quot;&gt;supertraits&lt;/a&gt; of the base trait.</source>
          <target state="translated">특성은 기본 특성, 자사의 자동차 특성, 및 구현합니다 &lt;a href=&quot;../items/traits#supertraits&quot;&gt;supertraits&lt;/a&gt; 기본 특성의를.</target>
        </trans-unit>
        <trans-unit id="d4f37b1632bc74808bbd4522d9d582acfc5a118f" translate="yes" xml:space="preserve">
          <source>Trait objects like &lt;code&gt;Box&amp;lt;Trait&amp;gt;&lt;/code&gt; can only be constructed when certain requirements are satisfied by the trait in question.</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;Trait&amp;gt;&lt;/code&gt; 과 같은 특성 개체 는 해당 특성이 특정 요구 사항을 충족하는 경우에만 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="046dc44c748313b6f776a3acf8abdd3d74f9acc5" translate="yes" xml:space="preserve">
          <source>Trait objects need to have all associated types specified. Erroneous code example:</source>
          <target state="translated">특성 개체는 모든 관련 유형을 지정해야합니다. 잘못된 코드 예 :</target>
        </trans-unit>
        <trans-unit id="e77aaa69af7e604fc6cf7c5dbf4abb6705458260" translate="yes" xml:space="preserve">
          <source>Trait objects need to have all associated types specified. Please verify that all associated types of the trait were specified and the correct trait was used. Example:</source>
          <target state="translated">특성 개체에는 모든 관련 유형이 지정되어야합니다. 관련된 모든 유형의 특성이 지정되었고 올바른 특성이 사용되었는지 확인하십시오. 예:</target>
        </trans-unit>
        <trans-unit id="ad068a7a9dcf8a835215d9d2bd6df82d37ea9f8e" translate="yes" xml:space="preserve">
          <source>Trait std::alloc::Alloc</source>
          <target state="translated">특성 std :: alloc :: Alloc</target>
        </trans-unit>
        <trans-unit id="eb91cda935fecc3ed63527ec374ccb91480b436e" translate="yes" xml:space="preserve">
          <source>Trait std::alloc::AllocRef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863608218cf19a899841e79768deb9add49e00f3" translate="yes" xml:space="preserve">
          <source>Trait std::alloc::GlobalAlloc</source>
          <target state="translated">특성 std :: alloc :: GlobalAlloc</target>
        </trans-unit>
        <trans-unit id="392d8121c387b6100e7dca67e7c52d32a16a3def" translate="yes" xml:space="preserve">
          <source>Trait std::any::Any</source>
          <target state="translated">특성 std :: any :: Any</target>
        </trans-unit>
        <trans-unit id="0bdbfe0deda36628eacc51abdb83fdbfcea6cc11" translate="yes" xml:space="preserve">
          <source>Trait std::array::FixedSizeArray</source>
          <target state="translated">특성 std :: array :: FixedSizeArray</target>
        </trans-unit>
        <trans-unit id="1eb8a5154ce5a680a452312a74723021b34c3aaa" translate="yes" xml:space="preserve">
          <source>Trait std::ascii::AsciiExt</source>
          <target state="translated">특성 std :: ascii :: AsciiExt</target>
        </trans-unit>
        <trans-unit id="5de77502b5980be7c3473a72d6105527f1215243" translate="yes" xml:space="preserve">
          <source>Trait std::borrow::Borrow</source>
          <target state="translated">특성 std :: borrow :: Borrow</target>
        </trans-unit>
        <trans-unit id="70f054dd274fb96a8db0596d418507c91adce6b6" translate="yes" xml:space="preserve">
          <source>Trait std::borrow::BorrowMut</source>
          <target state="translated">특성 std :: borrow :: BorrowMut</target>
        </trans-unit>
        <trans-unit id="bbcce0cbc4cb2a4bf5264b04d903d25c0a192013" translate="yes" xml:space="preserve">
          <source>Trait std::borrow::ToOwned</source>
          <target state="translated">특성 std :: borrow :: ToOwned</target>
        </trans-unit>
        <trans-unit id="f2b9f8276056ca658e39ee7a72fdcb03a7c37efb" translate="yes" xml:space="preserve">
          <source>Trait std::clone::Clone</source>
          <target state="translated">특성 std :: clone :: Clone</target>
        </trans-unit>
        <trans-unit id="7cd5d0fd30409561bc6e76fd837e1f62470836a8" translate="yes" xml:space="preserve">
          <source>Trait std::cmp::Eq</source>
          <target state="translated">특성 std :: cmp :: Eq</target>
        </trans-unit>
        <trans-unit id="246cf166657201c68115fb66fd9221b8ffeb9ec4" translate="yes" xml:space="preserve">
          <source>Trait std::cmp::Ord</source>
          <target state="translated">특성 std :: cmp :: Ord</target>
        </trans-unit>
        <trans-unit id="72ff4c9778d08578e0f03c27d9d6272685274d91" translate="yes" xml:space="preserve">
          <source>Trait std::cmp::PartialEq</source>
          <target state="translated">특성 std :: cmp :: PartialEq</target>
        </trans-unit>
        <trans-unit id="4fde07025ebb4afc05e6897ef74b43fe5347e982" translate="yes" xml:space="preserve">
          <source>Trait std::cmp::PartialOrd</source>
          <target state="translated">특성 std :: cmp :: PartialOrd</target>
        </trans-unit>
        <trans-unit id="d870aa7cb7664d7c10835889d14c6b391cb4500e" translate="yes" xml:space="preserve">
          <source>Trait std::convert::AsMut</source>
          <target state="translated">특성 std :: convert :: AsMut</target>
        </trans-unit>
        <trans-unit id="d445d52fad68586ece567104043e8c242d2c7a73" translate="yes" xml:space="preserve">
          <source>Trait std::convert::AsRef</source>
          <target state="translated">특성 std :: convert :: AsRef</target>
        </trans-unit>
        <trans-unit id="9ae644602fe63ca3fafb728aff34886ea890d0e0" translate="yes" xml:space="preserve">
          <source>Trait std::convert::FloatToInt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da7f8aa53cf47c39294631d860061958af42da6" translate="yes" xml:space="preserve">
          <source>Trait std::convert::From</source>
          <target state="translated">특성 std :: convert :: From</target>
        </trans-unit>
        <trans-unit id="b6ffd418e0a0b6d0cb5548ea09febb34aa5a1ba4" translate="yes" xml:space="preserve">
          <source>Trait std::convert::Into</source>
          <target state="translated">특성 std :: convert :: Into</target>
        </trans-unit>
        <trans-unit id="4d1380373e375c0e4553b789733d1a89b1fb0101" translate="yes" xml:space="preserve">
          <source>Trait std::convert::TryFrom</source>
          <target state="translated">특성 std :: convert :: TryFrom</target>
        </trans-unit>
        <trans-unit id="052f060bad402d8a2cd358057bd4871783c01ba4" translate="yes" xml:space="preserve">
          <source>Trait std::convert::TryInto</source>
          <target state="translated">특성 std :: convert :: TryInto</target>
        </trans-unit>
        <trans-unit id="36871446454b625eddb2f384614252a30a76670d" translate="yes" xml:space="preserve">
          <source>Trait std::default::Default</source>
          <target state="translated">특성 std :: default :: Default</target>
        </trans-unit>
        <trans-unit id="adf0d0f8b00918a2c28aba66b14f04f6c4e0fded" translate="yes" xml:space="preserve">
          <source>Trait std::error::Error</source>
          <target state="translated">특성 std :: error :: Error</target>
        </trans-unit>
        <trans-unit id="c2d288fe88fdd80f7dd81a3a1f2aeef5dc8ba7dc" translate="yes" xml:space="preserve">
          <source>Trait std::fmt::Binary</source>
          <target state="translated">특성 std :: fmt :: 바이너리</target>
        </trans-unit>
        <trans-unit id="33f44cc3a6de7dd1507041a00c8faf2775c0c8df" translate="yes" xml:space="preserve">
          <source>Trait std::fmt::Debug</source>
          <target state="translated">특성 std :: fmt :: Debug</target>
        </trans-unit>
        <trans-unit id="245d17885bbc5448412416b59b0f51c9d9b68eac" translate="yes" xml:space="preserve">
          <source>Trait std::fmt::Display</source>
          <target state="translated">특성 std :: fmt :: Display</target>
        </trans-unit>
        <trans-unit id="c8de6a747580fa084cc85d42225e02c2e93e67d5" translate="yes" xml:space="preserve">
          <source>Trait std::fmt::LowerExp</source>
          <target state="translated">특성 std :: fmt :: LowerExp</target>
        </trans-unit>
        <trans-unit id="e725d6041bd9bc4d83fca5b07971b62d421e6e64" translate="yes" xml:space="preserve">
          <source>Trait std::fmt::LowerHex</source>
          <target state="translated">특성 std :: fmt :: LowerHex</target>
        </trans-unit>
        <trans-unit id="194006985569f163bb35c90c3abcdbc7deec0e4a" translate="yes" xml:space="preserve">
          <source>Trait std::fmt::Octal</source>
          <target state="translated">특성 std :: fmt :: Octal</target>
        </trans-unit>
        <trans-unit id="8a32cd848a50f19a4618eac36d5bd1b3a315cf4d" translate="yes" xml:space="preserve">
          <source>Trait std::fmt::Pointer</source>
          <target state="translated">특성 std :: fmt :: 포인터</target>
        </trans-unit>
        <trans-unit id="8718228edc98337e120714c5797ad6fa1124ce31" translate="yes" xml:space="preserve">
          <source>Trait std::fmt::UpperExp</source>
          <target state="translated">특성 std :: fmt :: UpperExp</target>
        </trans-unit>
        <trans-unit id="26a977a1233b688edd74d1ce605bed2138e89350" translate="yes" xml:space="preserve">
          <source>Trait std::fmt::UpperHex</source>
          <target state="translated">특성 std :: fmt :: UpperHex</target>
        </trans-unit>
        <trans-unit id="0e6b8aa3448ea0d1e3124dcc61d87f01fb6bfd66" translate="yes" xml:space="preserve">
          <source>Trait std::fmt::Write</source>
          <target state="translated">특성 std :: fmt :: Write</target>
        </trans-unit>
        <trans-unit id="e8d3634caaf52ad6c8639c87d834bc299c37f7d5" translate="yes" xml:space="preserve">
          <source>Trait std::future::Future</source>
          <target state="translated">특성 std :: future :: Future</target>
        </trans-unit>
        <trans-unit id="86e4064ba539203461594226ee88477b56127c23" translate="yes" xml:space="preserve">
          <source>Trait std::future::IntoFuture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9cb7ef33fdeeee2adf1be409e245554e4935f7b" translate="yes" xml:space="preserve">
          <source>Trait std::hash::BuildHasher</source>
          <target state="translated">특성 std :: hash :: BuildHasher</target>
        </trans-unit>
        <trans-unit id="c7747499a3fe2fcc70735dec924c847206626023" translate="yes" xml:space="preserve">
          <source>Trait std::hash::Hash</source>
          <target state="translated">특성 std :: hash :: 해시</target>
        </trans-unit>
        <trans-unit id="2254c3bc605b18ffc7e9aa4bd6f57a17e5b13944" translate="yes" xml:space="preserve">
          <source>Trait std::hash::Hasher</source>
          <target state="translated">특성 std :: hash :: Hasher</target>
        </trans-unit>
        <trans-unit id="fd3fa6f5ef1435b1cb913f92dfb4fe0a0ac0248a" translate="yes" xml:space="preserve">
          <source>Trait std::io::BufRead</source>
          <target state="translated">특성 std :: io :: BufRead</target>
        </trans-unit>
        <trans-unit id="4c4e965bc67dd33a7c09b8db70c86024088aa45b" translate="yes" xml:space="preserve">
          <source>Trait std::io::Read</source>
          <target state="translated">특성 std :: io :: Read</target>
        </trans-unit>
        <trans-unit id="5d0aac0ef2620914932ce91ac2b555eba9c75b6a" translate="yes" xml:space="preserve">
          <source>Trait std::io::Seek</source>
          <target state="translated">특성 std :: io :: Seek</target>
        </trans-unit>
        <trans-unit id="23c37542e0343a876f9566d6681875d507142219" translate="yes" xml:space="preserve">
          <source>Trait std::io::Write</source>
          <target state="translated">특성 std :: io :: Write</target>
        </trans-unit>
        <trans-unit id="557d86b90451662a5be206878fb6037c4adc186c" translate="yes" xml:space="preserve">
          <source>Trait std::iter::DoubleEndedIterator</source>
          <target state="translated">특성 std :: iter :: DoubleEndedIterator</target>
        </trans-unit>
        <trans-unit id="f1b39cf8be9a057d9577992deaebe45e596b1a85" translate="yes" xml:space="preserve">
          <source>Trait std::iter::ExactSizeIterator</source>
          <target state="translated">특성 std :: iter :: ExactSizeIterator</target>
        </trans-unit>
        <trans-unit id="993ad040e2e34adc2956488f0eb4db104a067cbf" translate="yes" xml:space="preserve">
          <source>Trait std::iter::Extend</source>
          <target state="translated">특성 std :: iter :: Extend</target>
        </trans-unit>
        <trans-unit id="5d994406c4beb394a68ed1206fddfd385bea8323" translate="yes" xml:space="preserve">
          <source>Trait std::iter::FromIterator</source>
          <target state="translated">특성 std :: iter :: FromIterator</target>
        </trans-unit>
        <trans-unit id="2fce9eb181dd3ce47112a06174082d5e79cf74c2" translate="yes" xml:space="preserve">
          <source>Trait std::iter::FusedIterator</source>
          <target state="translated">특성 std :: iter :: FusedIterator</target>
        </trans-unit>
        <trans-unit id="73b5b9782c27307aa12c70b9e21ec99ddb587e29" translate="yes" xml:space="preserve">
          <source>Trait std::iter::InPlaceIterable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86b71b89c47a871b78ca20df617b375a62e7185" translate="yes" xml:space="preserve">
          <source>Trait std::iter::IntoIterator</source>
          <target state="translated">특성 std :: iter :: IntoIterator</target>
        </trans-unit>
        <trans-unit id="2da3e674c34b9eab7bfc5aeebb0e4f54178e88c3" translate="yes" xml:space="preserve">
          <source>Trait std::iter::Iterator</source>
          <target state="translated">특성 std :: iter :: Iterator</target>
        </trans-unit>
        <trans-unit id="28c48f7585e0c72c08462070ebcfc21850b855dd" translate="yes" xml:space="preserve">
          <source>Trait std::iter::Product</source>
          <target state="translated">특성 std :: iter :: 제품</target>
        </trans-unit>
        <trans-unit id="06e37aadfebc92508dfec7f48cb36ae23d2d7987" translate="yes" xml:space="preserve">
          <source>Trait std::iter::SourceIter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd139b55d183603c0136ea95dadb637efaf38a2" translate="yes" xml:space="preserve">
          <source>Trait std::iter::Step</source>
          <target state="translated">특성 std :: iter :: Step</target>
        </trans-unit>
        <trans-unit id="5db41fec6d94d07ed5a8c95c380992ba4e70704b" translate="yes" xml:space="preserve">
          <source>Trait std::iter::Sum</source>
          <target state="translated">특성 std :: iter :: Sum</target>
        </trans-unit>
        <trans-unit id="d2c14fdb677cf9e40834e0c15272aef7a318414f" translate="yes" xml:space="preserve">
          <source>Trait std::iter::TrustedLen</source>
          <target state="translated">특성 std :: iter :: TrustedLen</target>
        </trans-unit>
        <trans-unit id="97864c14469b7b4a0942294bc953528cb554eb45" translate="yes" xml:space="preserve">
          <source>Trait std::marker::Copy</source>
          <target state="translated">특성 std :: marker :: Copy</target>
        </trans-unit>
        <trans-unit id="3884613e3e74d695dee222818d0b37300a040b05" translate="yes" xml:space="preserve">
          <source>Trait std::marker::DiscriminantKind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b568be22b28c92ca0e71ed060c7b03cf03fb4f" translate="yes" xml:space="preserve">
          <source>Trait std::marker::Send</source>
          <target state="translated">특성 std :: marker :: Send</target>
        </trans-unit>
        <trans-unit id="00852f537576ef249f511a14cf0e0d88604a985c" translate="yes" xml:space="preserve">
          <source>Trait std::marker::Sized</source>
          <target state="translated">특성 std :: marker :: Sized</target>
        </trans-unit>
        <trans-unit id="3be5f907deaf6a27bd285184a0abe9f9ff5ddb94" translate="yes" xml:space="preserve">
          <source>Trait std::marker::StructuralEq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b09758b5f746fc434e81d9d3fa5f5b9cafe3f8" translate="yes" xml:space="preserve">
          <source>Trait std::marker::StructuralPartialEq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259bdec063434c0a27f0691a2488a4567088a5e0" translate="yes" xml:space="preserve">
          <source>Trait std::marker::Sync</source>
          <target state="translated">특성 std :: marker :: Sync</target>
        </trans-unit>
        <trans-unit id="3f94365e96f98d2913bb838b56a6cb437e2a3543" translate="yes" xml:space="preserve">
          <source>Trait std::marker::Unpin</source>
          <target state="translated">특성 std :: marker :: Unpin</target>
        </trans-unit>
        <trans-unit id="311396699adc0c66b758dcec6485921335dcacf8" translate="yes" xml:space="preserve">
          <source>Trait std::marker::Unsize</source>
          <target state="translated">특성 std :: marker :: Unsize</target>
        </trans-unit>
        <trans-unit id="56b1f3f0f786678bf876540fb69232e234007e31" translate="yes" xml:space="preserve">
          <source>Trait std::net::ToSocketAddrs</source>
          <target state="translated">특성 std :: net :: ToSocketAddrs</target>
        </trans-unit>
        <trans-unit id="37966fc5ec2acafba273f997b504b3bf34ed922b" translate="yes" xml:space="preserve">
          <source>Trait std::ops::Add</source>
          <target state="translated">특성 std :: ops :: Add</target>
        </trans-unit>
        <trans-unit id="eb2302d36fa57d1adc4a45dc1d240d27866b69da" translate="yes" xml:space="preserve">
          <source>Trait std::ops::AddAssign</source>
          <target state="translated">특성 std :: ops :: AddAssign</target>
        </trans-unit>
        <trans-unit id="b5f5f47beac59c26ee424be54e3b7e3d95164b94" translate="yes" xml:space="preserve">
          <source>Trait std::ops::BitAnd</source>
          <target state="translated">특성 std :: ops :: BitAnd</target>
        </trans-unit>
        <trans-unit id="fb181e8cea7de0ad56c4c91c6a0777e1d53fd765" translate="yes" xml:space="preserve">
          <source>Trait std::ops::BitAndAssign</source>
          <target state="translated">특성 std :: ops :: BitAndAssign</target>
        </trans-unit>
        <trans-unit id="b888f514c1fa78a8e8fe84b58a6fbc1d25aaf2c1" translate="yes" xml:space="preserve">
          <source>Trait std::ops::BitOr</source>
          <target state="translated">특성 std :: ops :: BitOr</target>
        </trans-unit>
        <trans-unit id="ca3ae8400b524007a326d21b18e44fb657bdb697" translate="yes" xml:space="preserve">
          <source>Trait std::ops::BitOrAssign</source>
          <target state="translated">특성 std :: ops :: BitOrAssign</target>
        </trans-unit>
        <trans-unit id="8d18eaa27370f1eb1f6ce036dc60c1aa5493c417" translate="yes" xml:space="preserve">
          <source>Trait std::ops::BitXor</source>
          <target state="translated">특성 std :: ops :: BitXor</target>
        </trans-unit>
        <trans-unit id="5961f53888aa07cd5cd15ed30fa1971a719c8b25" translate="yes" xml:space="preserve">
          <source>Trait std::ops::BitXorAssign</source>
          <target state="translated">특성 std :: ops :: BitXorAssign</target>
        </trans-unit>
        <trans-unit id="5e9158651355d13bfdd0cc23ab8ae22e93570742" translate="yes" xml:space="preserve">
          <source>Trait std::ops::CoerceUnsized</source>
          <target state="translated">특성 std :: ops :: CoerceUnsized</target>
        </trans-unit>
        <trans-unit id="e2225eef9926066643795abab6cb04cea79ce68b" translate="yes" xml:space="preserve">
          <source>Trait std::ops::Deref</source>
          <target state="translated">특성 std :: ops :: Deref</target>
        </trans-unit>
        <trans-unit id="8071035f23a5d586519a8248517d2e29e7adcb51" translate="yes" xml:space="preserve">
          <source>Trait std::ops::DerefMut</source>
          <target state="translated">특성 std :: ops :: DerefMut</target>
        </trans-unit>
        <trans-unit id="1bdb82d5309eaed70f5481f05b19a4d41b5808d7" translate="yes" xml:space="preserve">
          <source>Trait std::ops::DispatchFromDyn</source>
          <target state="translated">특성 std :: ops :: DispatchFromDyn</target>
        </trans-unit>
        <trans-unit id="9119f5359ef3817ec9f0b7e45b3f1ecbc08a66ae" translate="yes" xml:space="preserve">
          <source>Trait std::ops::Div</source>
          <target state="translated">특성 std :: ops :: Div</target>
        </trans-unit>
        <trans-unit id="f65e4311dbd340efad891a4945558b2592826b48" translate="yes" xml:space="preserve">
          <source>Trait std::ops::DivAssign</source>
          <target state="translated">특성 std :: ops :: DivAssign</target>
        </trans-unit>
        <trans-unit id="ead9d9ba97193a4d1ac24f05c905c8b13350ed9c" translate="yes" xml:space="preserve">
          <source>Trait std::ops::Drop</source>
          <target state="translated">특성 std :: ops :: Drop</target>
        </trans-unit>
        <trans-unit id="516e4c37897e1d20a60743aea36782c56e8156a9" translate="yes" xml:space="preserve">
          <source>Trait std::ops::Fn</source>
          <target state="translated">특성 std :: ops :: Fn</target>
        </trans-unit>
        <trans-unit id="77005c859f62996c3f249d5673d1b2c4d6da6a8e" translate="yes" xml:space="preserve">
          <source>Trait std::ops::FnMut</source>
          <target state="translated">특성 std :: ops :: FnMut</target>
        </trans-unit>
        <trans-unit id="b435f6c3c75102c4c8177872a25a996a1ff95c72" translate="yes" xml:space="preserve">
          <source>Trait std::ops::FnOnce</source>
          <target state="translated">특성 std :: ops :: FnOnce</target>
        </trans-unit>
        <trans-unit id="9aa827be880a5bea9bb3024a041653fb3a60ff06" translate="yes" xml:space="preserve">
          <source>Trait std::ops::Generator</source>
          <target state="translated">특성 std :: ops :: Generator</target>
        </trans-unit>
        <trans-unit id="59811c59bb31cbb96886cf966994463b72ad700c" translate="yes" xml:space="preserve">
          <source>Trait std::ops::Index</source>
          <target state="translated">특성 std :: ops :: Index</target>
        </trans-unit>
        <trans-unit id="1b08e9090daf7ede77089f8107e6507872bde2ab" translate="yes" xml:space="preserve">
          <source>Trait std::ops::IndexMut</source>
          <target state="translated">특성 std :: ops :: IndexMut</target>
        </trans-unit>
        <trans-unit id="10babff383e103d1471a771d922a28289586b73a" translate="yes" xml:space="preserve">
          <source>Trait std::ops::Mul</source>
          <target state="translated">특성 std :: ops :: Mul</target>
        </trans-unit>
        <trans-unit id="b32e6664a7b4d68e303b33188cda08fc977bd7b7" translate="yes" xml:space="preserve">
          <source>Trait std::ops::MulAssign</source>
          <target state="translated">특성 std :: ops :: MulAssign</target>
        </trans-unit>
        <trans-unit id="7244a7be2c4624654c9b462b1947447297e505fd" translate="yes" xml:space="preserve">
          <source>Trait std::ops::Neg</source>
          <target state="translated">특성 std :: ops :: Neg</target>
        </trans-unit>
        <trans-unit id="598dee8649518d42201f87386801464e34102c60" translate="yes" xml:space="preserve">
          <source>Trait std::ops::Not</source>
          <target state="translated">특성 std :: ops :: Not</target>
        </trans-unit>
        <trans-unit id="bc51ccaddf33118323d7fc1d905d959ce650d2fc" translate="yes" xml:space="preserve">
          <source>Trait std::ops::RangeBounds</source>
          <target state="translated">특성 std :: ops :: RangeBounds</target>
        </trans-unit>
        <trans-unit id="4ee55841b26a89cf9d805e3a28fb34dc38ab767a" translate="yes" xml:space="preserve">
          <source>Trait std::ops::Rem</source>
          <target state="translated">특성 std :: ops :: 램</target>
        </trans-unit>
        <trans-unit id="a0e35ffe757b24704f0ad197b4f1a2195f4a4f69" translate="yes" xml:space="preserve">
          <source>Trait std::ops::RemAssign</source>
          <target state="translated">특성 std :: ops :: RemAssign</target>
        </trans-unit>
        <trans-unit id="5922247946e4630b62a74e89d87c15ed9dbf8321" translate="yes" xml:space="preserve">
          <source>Trait std::ops::Shl</source>
          <target state="translated">특성 std :: ops :: Shl</target>
        </trans-unit>
        <trans-unit id="f84eeb046dfef53ab5217181c0fe9161eb7133b2" translate="yes" xml:space="preserve">
          <source>Trait std::ops::ShlAssign</source>
          <target state="translated">특성 std :: ops :: ShlAssign</target>
        </trans-unit>
        <trans-unit id="55d865e44b6599da1d5b41d269ec7455a02e4d75" translate="yes" xml:space="preserve">
          <source>Trait std::ops::Shr</source>
          <target state="translated">특성 std :: ops :: Shr</target>
        </trans-unit>
        <trans-unit id="e7c92d6f8a50e1ae3b29a226a8335aff1fecf601" translate="yes" xml:space="preserve">
          <source>Trait std::ops::ShrAssign</source>
          <target state="translated">특성 std :: ops :: ShrAssign</target>
        </trans-unit>
        <trans-unit id="cbaeb43954d65c4471777365a4ccdaf3b98314da" translate="yes" xml:space="preserve">
          <source>Trait std::ops::Sub</source>
          <target state="translated">특성 std :: ops :: Sub</target>
        </trans-unit>
        <trans-unit id="60e6a61f8c88f9e6239b7053de7f86d23a70926d" translate="yes" xml:space="preserve">
          <source>Trait std::ops::SubAssign</source>
          <target state="translated">특성 std :: ops :: SubAssign</target>
        </trans-unit>
        <trans-unit id="1e84214c3e8570e12d3f9ef3b558be6c152516f7" translate="yes" xml:space="preserve">
          <source>Trait std::ops::Try</source>
          <target state="translated">특성 std :: ops :: Try</target>
        </trans-unit>
        <trans-unit id="aee85e47c1ef28a026ccdb2b42dd67004cf6d92b" translate="yes" xml:space="preserve">
          <source>Trait std::os::linux::fs::MetadataExt</source>
          <target state="translated">특성 std :: os :: linux :: fs :: MetadataExt</target>
        </trans-unit>
        <trans-unit id="ce6f693798415e4676d8d1ff10beb4360e2b88ea" translate="yes" xml:space="preserve">
          <source>Trait std::os::unix::ffi::OsStrExt</source>
          <target state="translated">특성 std :: os :: unix :: ffi :: OsStrExt</target>
        </trans-unit>
        <trans-unit id="ccee631397fcdd7aa7a9f0bce0da5d850063085b" translate="yes" xml:space="preserve">
          <source>Trait std::os::unix::ffi::OsStringExt</source>
          <target state="translated">특성 std :: os :: unix :: ffi :: OsStringExt</target>
        </trans-unit>
        <trans-unit id="e621c9f13dd9d62e26bc7432de51e95d4d92457d" translate="yes" xml:space="preserve">
          <source>Trait std::os::unix::fs::DirBuilderExt</source>
          <target state="translated">특성 std :: os :: unix :: fs :: DirBuilderExt</target>
        </trans-unit>
        <trans-unit id="0709fdc0b13d2f0cb5f5c17d0f41b133a5719e30" translate="yes" xml:space="preserve">
          <source>Trait std::os::unix::fs::DirEntryExt</source>
          <target state="translated">특성 std :: os :: unix :: fs :: DirEntryExt</target>
        </trans-unit>
        <trans-unit id="030f7ec1f295cca2c02129cf381f726caf5a30ca" translate="yes" xml:space="preserve">
          <source>Trait std::os::unix::fs::FileExt</source>
          <target state="translated">특성 std :: os :: unix :: fs :: FileExt</target>
        </trans-unit>
        <trans-unit id="f955ea7fe9356c94c24f7600e345d8c1f23ecc81" translate="yes" xml:space="preserve">
          <source>Trait std::os::unix::fs::FileTypeExt</source>
          <target state="translated">특성 std :: os :: unix :: fs :: FileTypeExt</target>
        </trans-unit>
        <trans-unit id="062f7bd7816b0a1187ddcd41fdc03811ea335026" translate="yes" xml:space="preserve">
          <source>Trait std::os::unix::fs::MetadataExt</source>
          <target state="translated">특성 std :: os :: unix :: fs :: MetadataExt</target>
        </trans-unit>
        <trans-unit id="5cc7126ad859e04f63e6bf507db0f3f32c1e3609" translate="yes" xml:space="preserve">
          <source>Trait std::os::unix::fs::OpenOptionsExt</source>
          <target state="translated">특성 std :: os :: unix :: fs :: OpenOptionsExt</target>
        </trans-unit>
        <trans-unit id="7b61dfb2986a0864a907b937d464ff43d30cc28a" translate="yes" xml:space="preserve">
          <source>Trait std::os::unix::fs::PermissionsExt</source>
          <target state="translated">특성 std :: os :: unix :: fs :: PermissionsExt</target>
        </trans-unit>
        <trans-unit id="029585bd86a69a9cb4ab7c864e7dc9b2373a14b3" translate="yes" xml:space="preserve">
          <source>Trait std::os::unix::io::AsRawFd</source>
          <target state="translated">특성 std :: os :: unix :: io :: AsRawFd</target>
        </trans-unit>
        <trans-unit id="e4e4a27468811544480dddf3c4047ee3d4694a0c" translate="yes" xml:space="preserve">
          <source>Trait std::os::unix::io::FromRawFd</source>
          <target state="translated">특성 std :: os :: unix :: io :: FromRawFd</target>
        </trans-unit>
        <trans-unit id="ad731bff461d938e10c799939e10ae14e837a1d4" translate="yes" xml:space="preserve">
          <source>Trait std::os::unix::io::IntoRawFd</source>
          <target state="translated">특성 std :: os :: unix :: io :: IntoRawFd</target>
        </trans-unit>
        <trans-unit id="e0e834bab744daaedf71c0c8937cc0857c11c815" translate="yes" xml:space="preserve">
          <source>Trait std::os::unix::process::CommandExt</source>
          <target state="translated">특성 std :: os :: unix :: process :: CommandExt</target>
        </trans-unit>
        <trans-unit id="3fdb072f5381c741536b73b80e58115bb5f3dc4d" translate="yes" xml:space="preserve">
          <source>Trait std::os::unix::process::ExitStatusExt</source>
          <target state="translated">특성 std :: os :: unix :: process :: ExitStatusExt</target>
        </trans-unit>
        <trans-unit id="398944c7337c4aa8b95b799fcb3bb79124d70d16" translate="yes" xml:space="preserve">
          <source>Trait std::os::unix::thread::JoinHandleExt</source>
          <target state="translated">특성 std :: os :: unix :: thread :: JoinHandleExt</target>
        </trans-unit>
        <trans-unit id="775a7a0c3bd36d7ff6360e6cd0ef765ee978cd67" translate="yes" xml:space="preserve">
          <source>Trait std::os::windows::ffi::OsStrExt</source>
          <target state="translated">특성 std :: os :: windows :: ffi :: OsStrExt</target>
        </trans-unit>
        <trans-unit id="fef545ee7fe66334043f38cfbfbf352be492c487" translate="yes" xml:space="preserve">
          <source>Trait std::os::windows::ffi::OsStringExt</source>
          <target state="translated">특성 std :: os :: windows :: ffi :: OsStringExt</target>
        </trans-unit>
        <trans-unit id="ecb052e97ecce0a67db913c47f009bfcbacc3af0" translate="yes" xml:space="preserve">
          <source>Trait std::os::windows::fs::FileExt</source>
          <target state="translated">특성 std :: os :: windows :: fs :: FileExt</target>
        </trans-unit>
        <trans-unit id="91c8fb448f57a608a43c2c6a50e10bec34d5ab25" translate="yes" xml:space="preserve">
          <source>Trait std::os::windows::fs::FileTypeExt</source>
          <target state="translated">특성 std :: os :: windows :: fs :: FileTypeExt</target>
        </trans-unit>
        <trans-unit id="48eaa197d2777c5eb543ac927807cb3bcfa429bf" translate="yes" xml:space="preserve">
          <source>Trait std::os::windows::fs::MetadataExt</source>
          <target state="translated">특성 std :: os :: windows :: fs :: MetadataExt</target>
        </trans-unit>
        <trans-unit id="adfee6aa3be6cbe6237011186a8914e73584ae0c" translate="yes" xml:space="preserve">
          <source>Trait std::os::windows::fs::OpenOptionsExt</source>
          <target state="translated">특성 std :: os :: windows :: fs :: OpenOptionsExt</target>
        </trans-unit>
        <trans-unit id="2cdd2fa8158633908c8d054d4d1297a0e8730a45" translate="yes" xml:space="preserve">
          <source>Trait std::os::windows::io::AsRawHandle</source>
          <target state="translated">특성 std :: os :: windows :: io :: AsRawHandle</target>
        </trans-unit>
        <trans-unit id="0d00fd25b06cb924c3fdd7f42d54ec1498a98e1b" translate="yes" xml:space="preserve">
          <source>Trait std::os::windows::io::AsRawSocket</source>
          <target state="translated">특성 std :: os :: windows :: io :: AsRawSocket</target>
        </trans-unit>
        <trans-unit id="61063f360cb8b5295929ae6072d8fe4c6d6e69db" translate="yes" xml:space="preserve">
          <source>Trait std::os::windows::io::FromRawHandle</source>
          <target state="translated">특성 std :: os :: windows :: io :: FromRawHandle</target>
        </trans-unit>
        <trans-unit id="7942dc2954f8548cc31aadda78e4bf28314f92d8" translate="yes" xml:space="preserve">
          <source>Trait std::os::windows::io::FromRawSocket</source>
          <target state="translated">특성 std :: os :: windows :: io :: FromRawSocket</target>
        </trans-unit>
        <trans-unit id="bb1fb08e33748cf05582377cef8603a0b7d61ea6" translate="yes" xml:space="preserve">
          <source>Trait std::os::windows::io::IntoRawHandle</source>
          <target state="translated">특성 std :: os :: windows :: io :: IntoRawHandle</target>
        </trans-unit>
        <trans-unit id="1fe8126ee24f29a74bcdb4233344f05c1aaeb804" translate="yes" xml:space="preserve">
          <source>Trait std::os::windows::io::IntoRawSocket</source>
          <target state="translated">특성 std :: os :: windows :: io :: IntoRawSocket</target>
        </trans-unit>
        <trans-unit id="03f13d9ed2758f8306f48846a3b40b6e4ee6fb67" translate="yes" xml:space="preserve">
          <source>Trait std::os::windows::process::CommandExt</source>
          <target state="translated">특성 std :: os :: windows :: process :: CommandExt</target>
        </trans-unit>
        <trans-unit id="5474211db770299d01cd13e53280d9a32e0a6eb8" translate="yes" xml:space="preserve">
          <source>Trait std::os::windows::process::ExitStatusExt</source>
          <target state="translated">특성 std :: os :: windows :: process :: ExitStatusExt</target>
        </trans-unit>
        <trans-unit id="f12279b49645006e0e35a65e657e45472c813936" translate="yes" xml:space="preserve">
          <source>Trait std::panic::RefUnwindSafe</source>
          <target state="translated">특성 std :: panic :: RefUnwindSafe</target>
        </trans-unit>
        <trans-unit id="94584086fc586a7b81f5ac90f21ac1115c03a3ce" translate="yes" xml:space="preserve">
          <source>Trait std::panic::UnwindSafe</source>
          <target state="translated">특성 std :: panic :: UnwindSafe</target>
        </trans-unit>
        <trans-unit id="adb81f6851cec81b5352770932f85397129ab8a4" translate="yes" xml:space="preserve">
          <source>Trait std::process::Termination</source>
          <target state="translated">특성 std :: process :: Termination</target>
        </trans-unit>
        <trans-unit id="ded34cefc8f278d5953ceacebaad94241cbf68af" translate="yes" xml:space="preserve">
          <source>Trait std::slice::Concat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d456c4e733533dd7d0fbe862eae7258dcf0c0b5" translate="yes" xml:space="preserve">
          <source>Trait std::slice::Join</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7640946c865124bdea836774595f3568b91b7998" translate="yes" xml:space="preserve">
          <source>Trait std::slice::SliceConcatExt</source>
          <target state="translated">특성 std :: slice :: SliceConcatExt</target>
        </trans-unit>
        <trans-unit id="f46e5f5628a346f08367c4e254d503cf40a8e630" translate="yes" xml:space="preserve">
          <source>Trait std::slice::SliceIndex</source>
          <target state="translated">특성 std :: slice :: SliceIndex</target>
        </trans-unit>
        <trans-unit id="376de5fab14024883dddc8825294275d1ab087fe" translate="yes" xml:space="preserve">
          <source>Trait std::str::FromStr</source>
          <target state="translated">특성 std :: str :: FromStr</target>
        </trans-unit>
        <trans-unit id="44dfa41c6566ca84e623c4ad35fe85e2a3871106" translate="yes" xml:space="preserve">
          <source>Trait std::str::pattern::DoubleEndedSearcher</source>
          <target state="translated">특성 std :: str :: pattern :: DoubleEndedSearcher</target>
        </trans-unit>
        <trans-unit id="60d7ae5ae877268eee71ef1b870695c55f5799dd" translate="yes" xml:space="preserve">
          <source>Trait std::str::pattern::Pattern</source>
          <target state="translated">특성 std :: str :: pattern :: Pattern</target>
        </trans-unit>
        <trans-unit id="57c9157b22b76a9e5814b9b5b2e9d0438b5d56c6" translate="yes" xml:space="preserve">
          <source>Trait std::str::pattern::ReverseSearcher</source>
          <target state="translated">특성 std :: str :: pattern :: ReverseSearcher</target>
        </trans-unit>
        <trans-unit id="c47b1d5d24f300a29158b5903ba66de94f2261c7" translate="yes" xml:space="preserve">
          <source>Trait std::str::pattern::Searcher</source>
          <target state="translated">특성 std :: str :: pattern :: Searcher</target>
        </trans-unit>
        <trans-unit id="44bc0cc22a45fc90a102d47cbd5cd3c88d279925" translate="yes" xml:space="preserve">
          <source>Trait std::string::ToString</source>
          <target state="translated">특성 std :: string :: ToString</target>
        </trans-unit>
        <trans-unit id="0bd7b8ac22a188c807565d30737ca706bfa565b8" translate="yes" xml:space="preserve">
          <source>Trait std::task::Wake</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902e019f3fc71a92236203a22158a6e688676cd4" translate="yes" xml:space="preserve">
          <source>Trait that indicates that this is a pointer or a wrapper for one, where unsizing can be performed on the pointee.</source>
          <target state="translated">포인트가 크기 조정을 수행 할 수있는 포인터 또는 래퍼임을 나타내는 특성입니다.</target>
        </trans-unit>
        <trans-unit id="914213ad374b434003e30cd9d7bcaca26d295c77" translate="yes" xml:space="preserve">
          <source>Trait to represent types that can be created by multiplying elements of an iterator.</source>
          <target state="translated">반복자의 요소를 곱하여 작성할 수있는 유형을 나타내는 특성입니다.</target>
        </trans-unit>
        <trans-unit id="badf961de53295edcdb207c7619b3c8c3ea8ab3f" translate="yes" xml:space="preserve">
          <source>Trait to represent types that can be created by summing up an iterator.</source>
          <target state="translated">반복자를 합산하여 만들 수있는 유형을 나타내는 특성입니다.</target>
        </trans-unit>
        <trans-unit id="d881d840fb21638a45b7fe784d4a5eb2d495d58e" translate="yes" xml:space="preserve">
          <source>Trait types:</source>
          <target state="translated">특성 유형 :</target>
        </trans-unit>
        <trans-unit id="602d794344a5274058fe843b2cdf8ec0429dd8a0" translate="yes" xml:space="preserve">
          <source>Trait types: &lt;a href=&quot;types/trait-object&quot;&gt;Trait objects&lt;/a&gt; and &lt;a href=&quot;types/impl-trait&quot;&gt;impl trait&lt;/a&gt;.</source>
          <target state="translated">특성 유형 : &lt;a href=&quot;types/trait-object&quot;&gt;특성 개체&lt;/a&gt; 및 &lt;a href=&quot;types/impl-trait&quot;&gt;특성&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9bb3c78c542b9f8ec90ade6e9ec8d9a3209bf67e" translate="yes" xml:space="preserve">
          <source>TraitObject</source>
          <target state="translated">TraitObject</target>
        </trans-unit>
        <trans-unit id="6dafbe61d09e60652f6bbad6957562daf88836c1" translate="yes" xml:space="preserve">
          <source>TraitObject::borrow</source>
          <target state="translated">TraitObject::borrow</target>
        </trans-unit>
        <trans-unit id="d4a155778d83f0c6e0941f69c58ed350bc406da6" translate="yes" xml:space="preserve">
          <source>TraitObject::borrow_mut</source>
          <target state="translated">TraitObject::borrow_mut</target>
        </trans-unit>
        <trans-unit id="1ad27b39ed4c34288ce66526e3c4d0c6cfa27a49" translate="yes" xml:space="preserve">
          <source>TraitObject::clone</source>
          <target state="translated">TraitObject::clone</target>
        </trans-unit>
        <trans-unit id="f7e5bbc88cb023be138b61515a8a95359d090a5c" translate="yes" xml:space="preserve">
          <source>TraitObject::clone_from</source>
          <target state="translated">TraitObject::clone_from</target>
        </trans-unit>
        <trans-unit id="fdf0c70ef2387158d4df2cba6555b292ed39d46d" translate="yes" xml:space="preserve">
          <source>TraitObject::clone_into</source>
          <target state="translated">TraitObject::clone_into</target>
        </trans-unit>
        <trans-unit id="743885aa5243b74deebe5c3d51ac4806100e3c4f" translate="yes" xml:space="preserve">
          <source>TraitObject::from</source>
          <target state="translated">TraitObject::from</target>
        </trans-unit>
        <trans-unit id="83e65850a79cb15fc900dff422e0637ecd287f18" translate="yes" xml:space="preserve">
          <source>TraitObject::into</source>
          <target state="translated">TraitObject::into</target>
        </trans-unit>
        <trans-unit id="4d10ca4ab3471cdb18500652e2706f1af91011a7" translate="yes" xml:space="preserve">
          <source>TraitObject::to_owned</source>
          <target state="translated">TraitObject::to_owned</target>
        </trans-unit>
        <trans-unit id="cb08794c131e1ac1a49313ec36f386568341f2c9" translate="yes" xml:space="preserve">
          <source>TraitObject::try_from</source>
          <target state="translated">TraitObject::try_from</target>
        </trans-unit>
        <trans-unit id="368b837c4e44612f1f89ff1a01dc94c771822d93" translate="yes" xml:space="preserve">
          <source>TraitObject::try_into</source>
          <target state="translated">TraitObject::try_into</target>
        </trans-unit>
        <trans-unit id="74e84d6c289e114766c37bd05fe2729da4981e80" translate="yes" xml:space="preserve">
          <source>TraitObject::type_id</source>
          <target state="translated">TraitObject::type_id</target>
        </trans-unit>
        <trans-unit id="d1a616085a1a99a58e14bafaa350abc6783a3160" translate="yes" xml:space="preserve">
          <source>Traits</source>
          <target state="translated">Traits</target>
        </trans-unit>
        <trans-unit id="9c97df5331a0dd1cf9d7e4754c7f28e534496f46" translate="yes" xml:space="preserve">
          <source>Traits and trait bounds let us write code that uses generic type parameters to reduce duplication but also specify to the compiler that we want the generic type to have particular behavior. The compiler can then use the trait bound information to check that all the concrete types used with our code provide the correct behavior. In dynamically typed languages, we would get an error at runtime if we called a method on a type that the type didn&amp;rsquo;t implement. But Rust moves these errors to compile time so we&amp;rsquo;re forced to fix the problems before our code is even able to run. Additionally, we don&amp;rsquo;t have to write code that checks for behavior at runtime because we&amp;rsquo;ve already checked at compile time. Doing so improves performance without having to give up the flexibility of generics.</source>
          <target state="translated">특성과 특성 범위를 통해 일반 형식 매개 변수를 사용하여 중복을 줄이면서 일반 형식에 특정 동작을 수행하도록 컴파일러에 지정하는 코드를 작성할 수 있습니다. 그런 다음 컴파일러는 특성 바인딩 정보를 사용하여 코드와 함께 사용 된 모든 구체적인 유형이 올바른 동작을 제공하는지 확인할 수 있습니다. 동적으로 유형이 지정된 언어에서는 유형이 구현하지 않은 유형에 대해 메소드를 호출하면 런타임시 오류가 발생합니다. 그러나 Rust는 이러한 오류를 컴파일 시간으로 이동하므로 코드를 실행하기 전에 문제를 해결해야합니다. 또한 컴파일 타임에 이미 확인 했으므로 런타임시 동작을 확인하는 코드를 작성할 필요가 없습니다. 이렇게하면 제네릭의 유연성을 포기하지 않고도 성능이 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="3fc76183719059f2c0c8080816f40e16e5dee060" translate="yes" xml:space="preserve">
          <source>Traits and trait bounds let us write code that uses generic type parameters to reduce duplication but also specify to the compiler that we want the generic type to have particular behavior. The compiler can then use the trait bound information to check that all the concrete types used with our code provide the correct behavior. In dynamically typed languages, we would get an error at runtime if we called a method on a type which didn&amp;rsquo;t define the method. But Rust moves these errors to compile time so we&amp;rsquo;re forced to fix the problems before our code is even able to run. Additionally, we don&amp;rsquo;t have to write code that checks for behavior at runtime because we&amp;rsquo;ve already checked at compile time. Doing so improves performance without having to give up the flexibility of generics.</source>
          <target state="translated">특성과 특성 경계를 사용하면 제네릭 형식 매개 변수를 사용하여 중복을 줄이는 코드를 작성할 수 있지만 제네릭 형식이 특정 동작을 갖도록 컴파일러에 지정할 수도 있습니다. 그런 다음 컴파일러는 특성 바인딩 정보를 사용하여 코드에 사용 된 모든 구체적인 유형이 올바른 동작을 제공하는지 확인할 수 있습니다. 동적 형식 언어에서 메서드를 정의하지 않은 형식에 대해 메서드를 호출하면 런타임에 오류가 발생합니다. 그러나 Rust는 이러한 오류를 컴파일 시간으로 이동하므로 코드가 실행되기 전에 문제를 수정해야합니다. 또한 컴파일 타임에 이미 확인했기 때문에 런타임에 동작을 확인하는 코드를 작성할 필요가 없습니다. 이렇게하면 제네릭의 유연성을 포기하지 않고도 성능이 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="30d92be1538d577b3a476ce5c89b01f7242bf547" translate="yes" xml:space="preserve">
          <source>Traits are also compared by their implementation:</source>
          <target state="translated">특성도 구현에 의해 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="e9a67b2444510e46e8948ad83a34775ca31fa40c" translate="yes" xml:space="preserve">
          <source>Traits are declared using the &lt;code&gt;trait&lt;/code&gt; keyword. Types can implement them using &lt;a href=&quot;keyword.impl&quot;&gt;&lt;code&gt;impl&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Trait&lt;/code&gt;&lt;a href=&quot;keyword.for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Type&lt;/code&gt;:</source>
          <target state="translated">특성은 &lt;code&gt;trait&lt;/code&gt; 키워드를 사용하여 선언됩니다 . 유형은 &lt;code&gt;Type&lt;/code&gt; 에&lt;a href=&quot;keyword.for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;keyword.impl&quot;&gt; &lt;code&gt;impl&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Trait&lt;/code&gt; 을 사용하여 구현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="66685be42641df1c5c014df0db7fb2681f6517c0" translate="yes" xml:space="preserve">
          <source>Traits are implemented for specific types through separate &lt;a href=&quot;implementations&quot;&gt;implementations&lt;/a&gt;.</source>
          <target state="translated">특성은 별도의 &lt;a href=&quot;implementations&quot;&gt;구현을&lt;/a&gt; 통해 특정 유형에 대해 구현 됩니다.</target>
        </trans-unit>
        <trans-unit id="68c3dbb43f5798e7691ebd93a6d889062ce5c80e" translate="yes" xml:space="preserve">
          <source>Traits as Parameters</source>
          <target state="translated">매개 변수로서의 특성</target>
        </trans-unit>
        <trans-unit id="4bf9fb060bd902afb2cded8739189581c26cdf0d" translate="yes" xml:space="preserve">
          <source>Traits can also be declared as &lt;code&gt;unsafe&lt;/code&gt;:</source>
          <target state="translated">특성은 &lt;code&gt;unsafe&lt;/code&gt; 것으로 선언 될 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="661e39b3878b924290822d7b53ab6af8bbecce44" translate="yes" xml:space="preserve">
          <source>Traits can be generic, with constraints or without:</source>
          <target state="translated">특성은 제약이 있거나 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9d13ed5586289e0d3d40796b5bf51fc03fcc1f1" translate="yes" xml:space="preserve">
          <source>Traits can be made up of three varieties of associated items:</source>
          <target state="translated">특성은 세 가지 유형의 관련 항목으로 구성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f25be72831238ea3a0070cedc0b27becde04cb1" translate="yes" xml:space="preserve">
          <source>Traits can be used in functions, as parameters:</source>
          <target state="translated">특성은 매개 변수로 함수에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1a444e95cf19cfd56b5bd44d15b0d8f1bb04bba" translate="yes" xml:space="preserve">
          <source>Traits can build upon the requirements of other traits. In the example below &lt;code&gt;Iterator&lt;/code&gt; is a &lt;strong&gt;supertrait&lt;/strong&gt; and &lt;code&gt;ThreeIterator&lt;/code&gt; is a &lt;strong&gt;subtrait&lt;/strong&gt;:</source>
          <target state="translated">특성은 다른 특성의 요구 사항을 기반으로 할 수 있습니다. 아래 예제에서 &lt;code&gt;Iterator&lt;/code&gt; 는 &lt;strong&gt;supertrait&lt;/strong&gt; 이고 &lt;code&gt;ThreeIterator&lt;/code&gt; 는 &lt;strong&gt;subtrait입니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a5bf3800cd574708d91373db1be628b4ff994b51" translate="yes" xml:space="preserve">
          <source>Traits can serve as markers or carry other logical semantics that aren't expressed through their items. When a type implements that trait it is promising to uphold its contract. &lt;a href=&quot;marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt; are two such marker traits present in the standard library.</source>
          <target state="translated">특성은 마커 역할을하거나 항목을 통해 표현되지 않는 다른 논리적 의미를 전달할 수 있습니다. 유형이 그 특성을 구현할 때 계약을 유지할 것을 약속합니다. &lt;a href=&quot;marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; 는 표준 라이브러리에있는 두 가지 마커 특성입니다.</target>
        </trans-unit>
        <trans-unit id="f1779dfd4e53a302206ca9f432ac589991148919" translate="yes" xml:space="preserve">
          <source>Traits for conversions between types.</source>
          <target state="translated">유형 간 변환을위한 특성.</target>
        </trans-unit>
        <trans-unit id="5129fe11a670c9d54f51f82654cb88d2c5359dd3" translate="yes" xml:space="preserve">
          <source>Traits for working with Errors.</source>
          <target state="translated">오류 작업을위한 특성.</target>
        </trans-unit>
        <trans-unit id="e714d1e850bbb5cbfe4cbf81d9f96ff676eaae8d" translate="yes" xml:space="preserve">
          <source>Traits items that begin with the &lt;code&gt;unsafe&lt;/code&gt; keyword indicate that &lt;em&gt;implementing&lt;/em&gt; the trait may be &lt;a href=&quot;../unsafety&quot;&gt;unsafe&lt;/a&gt;. It is safe to use a correctly implemented unsafe trait. The &lt;a href=&quot;implementations#trait-implementations&quot;&gt;trait implementation&lt;/a&gt; must also begin with the &lt;code&gt;unsafe&lt;/code&gt; keyword.</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt; 키워드로 시작하는 특성 항목 은 특성 을 &lt;em&gt;구현&lt;/em&gt; 하는 것이 &lt;a href=&quot;../unsafety&quot;&gt;안전하지&lt;/a&gt; 않을 수 있음을 나타냅니다 . 올바르게 구현 된 안전하지 않은 특성을 사용하는 것이 안전합니다. &lt;a href=&quot;implementations#trait-implementations&quot;&gt;특성 구현&lt;/a&gt; 도 시작해야 &lt;code&gt;unsafe&lt;/code&gt; 키워드.</target>
        </trans-unit>
        <trans-unit id="c4f3eba08a0ef9ddc5179fc934760dae14913d40" translate="yes" xml:space="preserve">
          <source>Traits marked as &lt;code&gt;unsafe&lt;/code&gt; must be &lt;a href=&quot;keyword.impl&quot;&gt;&lt;code&gt;impl&lt;/code&gt;&lt;/a&gt;emented using &lt;code&gt;unsafe impl&lt;/code&gt;. This makes a guarantee to other &lt;code&gt;unsafe&lt;/code&gt; code that the implementation satisfies the trait's safety contract. The &lt;a href=&quot;marker/trait.send&quot;&gt;Send&lt;/a&gt; and &lt;a href=&quot;marker/trait.sync&quot;&gt;Sync&lt;/a&gt; traits are examples of this behaviour in the standard library.</source>
          <target state="translated">로 형질 표시된 &lt;code&gt;unsafe&lt;/code&gt; 있어야합니다 &lt;a href=&quot;keyword.impl&quot;&gt; &lt;code&gt;impl&lt;/code&gt; &lt;/a&gt; 사용 emented &lt;code&gt;unsafe impl&lt;/code&gt; . 이것은 구현이 특성의 안전 계약을 충족한다는 다른 &lt;code&gt;unsafe&lt;/code&gt; 코드를 보장합니다 . &lt;a href=&quot;marker/trait.send&quot;&gt;전송&lt;/a&gt; 및 &lt;a href=&quot;marker/trait.sync&quot;&gt;동기화&lt;/a&gt; 특성은 표준 라이브러리에서이 행동의 예입니다.</target>
        </trans-unit>
        <trans-unit id="a0bb75d5aa409703504921566195fb3122da2052" translate="yes" xml:space="preserve">
          <source>Traits may also contain additional type parameters. Those type parameters or the trait itself can be constrained by other traits.</source>
          <target state="translated">특성에는 추가 유형 매개 변수도 포함될 수 있습니다. 이러한 유형 매개 변수 또는 특성 자체는 다른 특성에 의해 제한 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b45c49a33c4022855bfa5d2a686751214a7126a" translate="yes" xml:space="preserve">
          <source>Traits may be implemented for</source>
          <target state="translated">특성은</target>
        </trans-unit>
        <trans-unit id="986fcbb6a73e7cc26d2d8b2b6164011d8bab7460" translate="yes" xml:space="preserve">
          <source>Traits, helpers, and type definitions for core I/O functionality.</source>
          <target state="translated">핵심 I / O 기능에 대한 특성, 도우미 및 유형 정의</target>
        </trans-unit>
        <trans-unit id="9aa77953b92e4e6c565758326d541910014cfd21" translate="yes" xml:space="preserve">
          <source>Traits: Defining Shared Behavior</source>
          <target state="translated">특성 : 공유 된 행동 정의</target>
        </trans-unit>
        <trans-unit id="d8a8f61d9f0fd714531d17d414abcb212572f131" translate="yes" xml:space="preserve">
          <source>Transcribing</source>
          <target state="translated">Transcribing</target>
        </trans-unit>
        <trans-unit id="2df1d93dea4e259eb26edde2c26eb9c20992b104" translate="yes" xml:space="preserve">
          <source>Transforms an iterator into a collection.</source>
          <target state="translated">이터레이터를 컬렉션으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="81c1484a18bb69461dc41663b8ca61aba770c66a" translate="yes" xml:space="preserve">
          <source>Transforms an iterator into a collection. &lt;a href=&quot;../../../iter/trait.iterator#method.collect&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이터레이터를 컬렉션으로 변환합니다. &lt;a href=&quot;../../../iter/trait.iterator#method.collect&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fe9703c09ae5aff473aa850cc9ea84e177f2a25" translate="yes" xml:space="preserve">
          <source>Transforms an iterator into a collection. &lt;a href=&quot;../../iter/trait.iterator#method.collect&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이터레이터를 컬렉션으로 변환합니다. &lt;a href=&quot;../../iter/trait.iterator#method.collect&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d95c53779cc93ec00cbab50bc8d1d781ee0140b9" translate="yes" xml:space="preserve">
          <source>Transforms an iterator into a collection. &lt;a href=&quot;../iter/trait.iterator#method.collect&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이터레이터를 컬렉션으로 변환합니다. &lt;a href=&quot;../iter/trait.iterator#method.collect&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f6c7d5e9d128d42f6100c26dc454bf0231e3a05" translate="yes" xml:space="preserve">
          <source>Transforms an iterator into a collection. &lt;a href=&quot;iter/trait.iterator#method.collect&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이터레이터를 컬렉션으로 변환합니다. &lt;a href=&quot;iter/trait.iterator#method.collect&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f3c54bd44a2ac346c25bc4bf8dc990a7215290b" translate="yes" xml:space="preserve">
          <source>Transforms an iterator into a collection. &lt;a href=&quot;trait.iterator#method.collect&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이터레이터를 컬렉션으로 변환합니다. &lt;a href=&quot;trait.iterator#method.collect&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d04afdfe20a5d1e30c5697c258379dba1dfdd82" translate="yes" xml:space="preserve">
          <source>Transforms the &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;&lt;/a&gt;, mapping &lt;a href=&quot;#variant.Some&quot;&gt;&lt;code&gt;Some(v)&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok(v)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err(err())&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">변환하는 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 에 &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; &lt;/a&gt; , 매핑 &lt;a href=&quot;#variant.Some&quot;&gt; &lt;code&gt;Some(v)&lt;/code&gt; &lt;/a&gt; 로 &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok(v)&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt; &lt;code&gt;Err(err())&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9a32b0b090c9474f23fede28872bd2f862d58ca7" translate="yes" xml:space="preserve">
          <source>Transforms the &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;&lt;/a&gt;, mapping &lt;a href=&quot;#variant.Some&quot;&gt;&lt;code&gt;Some(v)&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok(v)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err(err)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">변환하는 &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 에 대한 &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; &lt;/a&gt; , 매핑 &lt;a href=&quot;#variant.Some&quot;&gt; &lt;code&gt;Some(v)&lt;/code&gt; &lt;/a&gt; 로 &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok(v)&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt; &lt;code&gt;Err(err)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="398730368239daf72c58a553f251431298c7cfb2" translate="yes" xml:space="preserve">
          <source>Transforms the &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;&lt;/a&gt;, mapping &lt;a href=&quot;enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(v)&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok(v)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err(err())&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 를 &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; &lt;/a&gt; &amp;gt; 로 변환하여 &lt;a href=&quot;enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(v)&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok(v)&lt;/code&gt; &lt;/a&gt; 매핑 하고 &lt;a href=&quot;enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt; &lt;code&gt;Err(err())&lt;/code&gt; &lt;/a&gt; 매핑 합니다.</target>
        </trans-unit>
        <trans-unit id="3d6f8723802ef085327c42e8d97e13f22a876933" translate="yes" xml:space="preserve">
          <source>Transforms the &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; into a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;&lt;/a&gt;, mapping &lt;a href=&quot;enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(v)&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok(v)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err(err)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; 를 &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; &lt;/a&gt; &amp;gt; 로 변환하여 &lt;a href=&quot;enum.option#variant.Some&quot;&gt; &lt;code&gt;Some(v)&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;../result/enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok(v)&lt;/code&gt; &lt;/a&gt; 매핑 하고 &lt;a href=&quot;enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt; &lt;code&gt;Err(err)&lt;/code&gt; &lt;/a&gt; 매핑 합니다.</target>
        </trans-unit>
        <trans-unit id="eeb313d7fccfec96291e799fbdbae78f85b64379" translate="yes" xml:space="preserve">
          <source>Transforms this &lt;code&gt;Read&lt;/code&gt; instance to an &lt;a href=&quot;../../../iter/trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; over its bytes. &lt;a href=&quot;../../../io/trait.read#method.bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Read&lt;/code&gt; 인스턴스를 해당 바이트 에 대한 &lt;a href=&quot;../../../iter/trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; 로&lt;/a&gt; 변환 합니다. &lt;a href=&quot;../../../io/trait.read#method.bytes&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4eb95563ead3e77457aefa3ae80b465ed16f04e" translate="yes" xml:space="preserve">
          <source>Transforms this &lt;code&gt;Read&lt;/code&gt; instance to an &lt;a href=&quot;../iter/trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; over its bytes.</source>
          <target state="translated">이 &lt;code&gt;Read&lt;/code&gt; 인스턴스를 바이트 단위 의 &lt;a href=&quot;../iter/trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; 로&lt;/a&gt; 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="95b63dbe9d04ab6189a2f04a995620130158a036" translate="yes" xml:space="preserve">
          <source>Transforms this &lt;code&gt;Read&lt;/code&gt; instance to an &lt;a href=&quot;../iter/trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; over its bytes. &lt;a href=&quot;../io/trait.read#method.bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Read&lt;/code&gt; 인스턴스를 해당 바이트 에 대한 &lt;a href=&quot;../iter/trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; 로&lt;/a&gt; 변환 합니다. &lt;a href=&quot;../io/trait.read#method.bytes&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87a749feee7f6dbf3973b0c9eb615ab3107735d9" translate="yes" xml:space="preserve">
          <source>Transforms this &lt;code&gt;Read&lt;/code&gt; instance to an &lt;a href=&quot;../iter/trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; over its bytes. &lt;a href=&quot;trait.read#method.bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Read&lt;/code&gt; 인스턴스를 해당 바이트 에 대한 &lt;a href=&quot;../iter/trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; 로&lt;/a&gt; 변환 합니다. &lt;a href=&quot;trait.read#method.bytes&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96b59ca5339cfaac01d1e21047c3e9f00c4f7918" translate="yes" xml:space="preserve">
          <source>Transforms this &lt;code&gt;Read&lt;/code&gt; instance to an &lt;a href=&quot;iter/trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; over its bytes. &lt;a href=&quot;io/trait.read#method.bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Read&lt;/code&gt; 인스턴스를 해당 바이트 에 대한 &lt;a href=&quot;iter/trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; 로&lt;/a&gt; 변환 합니다. &lt;a href=&quot;io/trait.read#method.bytes&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03c96526be3584d2d000005b6f01d7d3341c8987" translate="yes" xml:space="preserve">
          <source>Transforms this &lt;code&gt;Read&lt;/code&gt; instance to an [&lt;code&gt;Iterator&lt;/code&gt;] over its bytes. &lt;a href=&quot;../../../io/trait.read#method.bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Read&lt;/code&gt; 인스턴스를 바이트 단위 의 [ &lt;code&gt;Iterator&lt;/code&gt; ] 로 변환 합니다. &lt;a href=&quot;../../../io/trait.read#method.bytes&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12fec74288b63220271ad545369927ef8290a081" translate="yes" xml:space="preserve">
          <source>Transforms this &lt;code&gt;Read&lt;/code&gt; instance to an [&lt;code&gt;Iterator&lt;/code&gt;] over its bytes. &lt;a href=&quot;../io/trait.read#method.bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Read&lt;/code&gt; 인스턴스를 바이트 단위 의 [ &lt;code&gt;Iterator&lt;/code&gt; ] 로 변환 합니다. &lt;a href=&quot;../io/trait.read#method.bytes&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="caf9cf05351d52e3be9282ae06933a14488056d3" translate="yes" xml:space="preserve">
          <source>Transforms this &lt;code&gt;Read&lt;/code&gt; instance to an [&lt;code&gt;Iterator&lt;/code&gt;] over its bytes. &lt;a href=&quot;io/trait.read#method.bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Read&lt;/code&gt; 인스턴스를 바이트 단위 의 [ &lt;code&gt;Iterator&lt;/code&gt; ] 로 변환 합니다. &lt;a href=&quot;io/trait.read#method.bytes&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="971992e8ed9d30a3c4193fa3cfd51e0926ac6cae" translate="yes" xml:space="preserve">
          <source>Transforms this &lt;code&gt;Read&lt;/code&gt; instance to an [&lt;code&gt;Iterator&lt;/code&gt;] over its bytes. &lt;a href=&quot;trait.read#method.bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">이 &lt;code&gt;Read&lt;/code&gt; 인스턴스를 바이트 단위 의 [ &lt;code&gt;Iterator&lt;/code&gt; ] 로 변환 합니다. &lt;a href=&quot;trait.read#method.bytes&quot;&gt;더 읽어보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a3526b9261f151b08efa12a2cb227e4ab668a50" translate="yes" xml:space="preserve">
          <source>Transmute the slice to a slice of another type, ensuring alignment of the types is maintained.</source>
          <target state="translated">슬라이스를 다른 유형의 슬라이스로 변환하여 유형의 정렬이 유지되도록합니다.</target>
        </trans-unit>
        <trans-unit id="b2cf0502b0b75797a67313725bcf7174bc249f5e" translate="yes" xml:space="preserve">
          <source>Transmute with two differently sized types was attempted.</source>
          <target state="translated">크기가 다른 두 가지 유형으로 변환을 시도했습니다.</target>
        </trans-unit>
        <trans-unit id="f952303e87a91f8044520d869ced49cf3453271e" translate="yes" xml:space="preserve">
          <source>Transmute with two differently sized types was attempted. Erroneous code example:</source>
          <target state="translated">크기가 다른 두 가지 유형의 변환이 시도되었습니다. 잘못된 코드 예 :</target>
        </trans-unit>
        <trans-unit id="b4634eab766a7c67f4a788882ed6708930ac7723" translate="yes" xml:space="preserve">
          <source>Transposes a &lt;code&gt;Result&lt;/code&gt; of an &lt;code&gt;Option&lt;/code&gt; into an &lt;code&gt;Option&lt;/code&gt; of a &lt;code&gt;Result&lt;/code&gt;.</source>
          <target state="translated">조바꿈 &lt;code&gt;Result&lt;/code&gt; 의 &lt;code&gt;Option&lt;/code&gt; 에 &lt;code&gt;Option&lt;/code&gt; (A)의 &lt;code&gt;Result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aeec9f606ca7cc27f401e6245265d892d7c06264" translate="yes" xml:space="preserve">
          <source>Transposes an &lt;code&gt;Option&lt;/code&gt; of a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; of an &lt;code&gt;Option&lt;/code&gt;.</source>
          <target state="translated">조바꿈 &lt;code&gt;Option&lt;/code&gt; (A)의 &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;Option&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86f3938f31467da551894d5bc312a73ba5dfa379" translate="yes" xml:space="preserve">
          <source>Transposes an &lt;code&gt;Option&lt;/code&gt; of a &lt;code&gt;Result&lt;/code&gt; into a &lt;code&gt;Result&lt;/code&gt; of an &lt;code&gt;Option&lt;/code&gt;.</source>
          <target state="translated">조바꿈 &lt;code&gt;Option&lt;/code&gt; (A)의 &lt;code&gt;Result&lt;/code&gt; 에 &lt;code&gt;Result&lt;/code&gt; 의 &lt;code&gt;Option&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9ccf92c436ad92e69f629d1e0488d9928d7d7e6" translate="yes" xml:space="preserve">
          <source>Treating Smart Pointers Like Regular References with the &lt;code id=&quot;treating-smart-pointers-like-regular-references-with-the-deref-trait&quot;&gt;Deref&lt;/code&gt; Trait</source>
          <target state="translated">&lt;code id=&quot;treating-smart-pointers-like-regular-references-with-the-deref-trait&quot;&gt;Deref&lt;/code&gt; Trait을 사용하여 스마트 포인터를 일반 참조처럼 취급</target>
        </trans-unit>
        <trans-unit id="453a0f8e23093d2d468470224b84f666ef425b17" translate="yes" xml:space="preserve">
          <source>Treating a Type Like a Reference by Implementing the &lt;code id=&quot;treating-a-type-like-a-reference-by-implementing-the-deref-trait&quot;&gt;Deref&lt;/code&gt; Trait</source>
          <target state="translated">이행하여 참조처럼 타입을 치료 &lt;code id=&quot;treating-a-type-like-a-reference-by-implementing-the-deref-trait&quot;&gt;Deref&lt;/code&gt; 형질을</target>
        </trans-unit>
        <trans-unit id="dc5f05aecd7821404c68147034c8c8b762c94716" translate="yes" xml:space="preserve">
          <source>Treating each integration test file as its own crate is useful to create separate scopes that are more like the way end users will be using your crate. However, this means files in the &lt;em&gt;tests&lt;/em&gt; directory don&amp;rsquo;t share the same behavior as files in &lt;em&gt;src&lt;/em&gt; do, as you learned in Chapter 7 regarding how to separate code into modules and files.</source>
          <target state="translated">각 통합 테스트 파일을 자체 크레이트로 처리하면 최종 사용자가 크레이트를 사용하는 방식과 유사한 별도의 범위를 만드는 데 유용합니다. 그러나 7 장에서 코드를 모듈과 파일로 분리하는 방법에 대해 배운 것처럼 &lt;em&gt;tests&lt;/em&gt; 디렉토리의 파일은 &lt;em&gt;src의&lt;/em&gt; 파일과 동일한 동작을 공유하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="872845f485ac296c3cd7906d73027227f117e870" translate="yes" xml:space="preserve">
          <source>Tries to reserve capacity for at least &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;HashMap&amp;lt;K, V&amp;gt;&lt;/code&gt;. The collection may reserve more space to avoid frequent reallocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7569cb1679e0c3aa7540702f13a5f8dd4a1739a0" translate="yes" xml:space="preserve">
          <source>Tries to reserve capacity for at least &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;HashMap&amp;lt;K,V&amp;gt;&lt;/code&gt;. The collection may reserve more space to avoid frequent reallocations.</source>
          <target state="translated">주어진 &lt;code&gt;HashMap&amp;lt;K,V&amp;gt;&lt;/code&gt; 삽입 할 요소를 &lt;code&gt;additional&lt;/code&gt; 로 확보하려고합니다 . 컬렉션은 빈번한 재 할당을 피하기 위해 더 많은 공간을 예약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f49475f33b235b7fd68d7b22ade090a001ae44f" translate="yes" xml:space="preserve">
          <source>Tries to reserve capacity for at least &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;HashSet&amp;lt;K, V&amp;gt;&lt;/code&gt;. The collection may reserve more space to avoid frequent reallocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44298809e4f1f115c9f5ba28f46ae5a8d609bfc3" translate="yes" xml:space="preserve">
          <source>Tries to reserve capacity for at least &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;HashSet&amp;lt;K,V&amp;gt;&lt;/code&gt;. The collection may reserve more space to avoid frequent reallocations.</source>
          <target state="translated">주어진 &lt;code&gt;HashSet&amp;lt;K,V&amp;gt;&lt;/code&gt; 삽입 할 요소를 &lt;code&gt;additional&lt;/code&gt; 로 확보하려고합니다 . 컬렉션은 빈번한 재 할당을 피하기 위해 더 많은 공간을 예약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57b7ed7bcbd15d35b279a1bce9bfd658efd71b2a" translate="yes" xml:space="preserve">
          <source>Tries to reserve capacity for at least &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;String&lt;/code&gt;. The collection may reserve more space to avoid frequent reallocations. After calling &lt;code&gt;reserve&lt;/code&gt;, capacity will be greater than or equal to &lt;code&gt;self.len() + additional&lt;/code&gt;. Does nothing if capacity is already sufficient.</source>
          <target state="translated">주어진 &lt;code&gt;String&lt;/code&gt; 삽입 할 요소를 &lt;code&gt;additional&lt;/code&gt; 로 확보하려고합니다 . 컬렉션은 빈번한 재 할당을 피하기 위해 더 많은 공간을 예약 할 수 있습니다. &lt;code&gt;reserve&lt;/code&gt; 를 호출 한 후 용량은 &lt;code&gt;self.len() + additional&lt;/code&gt; 보다 크거나 같습니다 . 용량이 이미 충분한 경우 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1cd7b987cbc0791bfb1324cfd6464263751dd7d3" translate="yes" xml:space="preserve">
          <source>Tries to reserve capacity for at least &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;. The collection may reserve more space to avoid frequent reallocations. After calling &lt;code&gt;reserve&lt;/code&gt;, capacity will be greater than or equal to &lt;code&gt;self.len() + additional&lt;/code&gt;. Does nothing if capacity is already sufficient.</source>
          <target state="translated">주어진 &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 삽입 할 요소를 &lt;code&gt;additional&lt;/code&gt; 로 확보하려고합니다 . 컬렉션은 빈번한 재 할당을 피하기 위해 더 많은 공간을 예약 할 수 있습니다. &lt;code&gt;reserve&lt;/code&gt; 를 호출 한 후 용량은 &lt;code&gt;self.len() + additional&lt;/code&gt; 보다 크거나 같습니다 . 용량이 이미 충분한 경우 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3cfac0433720c8cd13adc91772d417cffa80bddb" translate="yes" xml:space="preserve">
          <source>Tries to reserve capacity for at least &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;. The collection may reserve more space to avoid frequent reallocations. After calling &lt;code&gt;try_reserve&lt;/code&gt;, capacity will be greater than or equal to &lt;code&gt;self.len() + additional&lt;/code&gt;. Does nothing if capacity is already sufficient.</source>
          <target state="translated">주어진 &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 삽입 할 최소한 &lt;code&gt;additional&lt;/code&gt; 요소에 대한 용량을 예약하려고합니다 . 컬렉션은 빈번한 재 할당을 피하기 위해 더 많은 공간을 예약 할 수 있습니다. &lt;code&gt;try_reserve&lt;/code&gt; 를 호출 한 후 용량은 &lt;code&gt;self.len() + additional&lt;/code&gt; 보다 크거나 같습니다 . 용량이 이미 충분하면 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4ddb2f7e963d7384fcd84f59781aafbcb1eefd0c" translate="yes" xml:space="preserve">
          <source>Tries to reserve capacity for at least &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;. The collection may reserve more space to avoid frequent reallocations. After calling &lt;code&gt;reserve&lt;/code&gt;, capacity will be greater than or equal to &lt;code&gt;self.len() + additional&lt;/code&gt;. Does nothing if capacity is already sufficient.</source>
          <target state="translated">주어진 &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; 삽입 할 요소를 &lt;code&gt;additional&lt;/code&gt; 로 확보하려고합니다 . 컬렉션은 빈번한 재 할당을 피하기 위해 더 많은 공간을 예약 할 수 있습니다. &lt;code&gt;reserve&lt;/code&gt; 를 호출 한 후 용량은 &lt;code&gt;self.len() + additional&lt;/code&gt; 보다 크거나 같습니다 . 용량이 이미 충분한 경우 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c6ae8edff340a9bc30d1fc3ea07c88a2d615e594" translate="yes" xml:space="preserve">
          <source>Tries to reserve capacity for at least &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;. The collection may reserve more space to avoid frequent reallocations. After calling &lt;code&gt;try_reserve&lt;/code&gt;, capacity will be greater than or equal to &lt;code&gt;self.len() + additional&lt;/code&gt;. Does nothing if capacity is already sufficient.</source>
          <target state="translated">지정된 &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; 삽입 할 최소한 &lt;code&gt;additional&lt;/code&gt; 요소에 대한 용량을 예약하려고합니다 . 컬렉션은 빈번한 재 할당을 피하기 위해 더 많은 공간을 예약 할 수 있습니다. &lt;code&gt;try_reserve&lt;/code&gt; 를 호출 한 후 용량은 &lt;code&gt;self.len() + additional&lt;/code&gt; 보다 크거나 같습니다 . 용량이 이미 충분하면 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="64c1225ca478afba96e69e3738929c44dc44f818" translate="yes" xml:space="preserve">
          <source>Tries to reserve the minimum capacity for exactly &lt;code&gt;additional&lt;/code&gt; elements to be inserted in the given &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;. After calling &lt;code&gt;try_reserve_exact&lt;/code&gt;, capacity will be greater than or equal to &lt;code&gt;self.len() + additional&lt;/code&gt; if it returns &lt;code&gt;Ok(())&lt;/code&gt;. Does nothing if the capacity is already sufficient.</source>
          <target state="translated">지정된 &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 삽입 할 정확히 &lt;code&gt;additional&lt;/code&gt; 요소에 대한 최소 용량을 예약하려고합니다 . &lt;code&gt;try_reserve_exact&lt;/code&gt; 를 호출 한 후 용량은 &lt;code&gt;self.len() + additional&lt;/code&gt; &lt;code&gt;Ok(())&lt;/code&gt; 반환하면 추가 값보다 크거나 같습니다 . 용량이 이미 충분하면 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1c910716261f7e551f1259edf1ea661f9578f8fe" translate="yes" xml:space="preserve">
          <source>Tries to reserve the minimum capacity for exactly &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;. After calling &lt;code&gt;try_reserve_exact&lt;/code&gt;, capacity will be greater than or equal to &lt;code&gt;self.len() + additional&lt;/code&gt;. Does nothing if the capacity is already sufficient.</source>
          <target state="translated">지정된 &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; 에 정확히 &lt;code&gt;additional&lt;/code&gt; 많은 요소를 삽입하기 위해 최소 용량을 예약하려고합니다 . &lt;code&gt;try_reserve_exact&lt;/code&gt; 를 호출 한 후 용량은 &lt;code&gt;self.len() + additional&lt;/code&gt; 보다 크거나 같습니다 . 용량이 이미 충분하면 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ea826f973c60e61f52c1a1545b1dfe84c909b71b" translate="yes" xml:space="preserve">
          <source>Tries to reserves the minimum capacity for exactly &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;String&lt;/code&gt;. After calling &lt;code&gt;reserve_exact&lt;/code&gt;, capacity will be greater than or equal to &lt;code&gt;self.len() + additional&lt;/code&gt;. Does nothing if the capacity is already sufficient.</source>
          <target state="translated">주어진 &lt;code&gt;String&lt;/code&gt; 에 정확히 &lt;code&gt;additional&lt;/code&gt; 많은 요소를 삽입 할 수 있는 최소 용량을 확보하려고합니다 . &lt;code&gt;reserve_exact&lt;/code&gt; 를 호출 한 후 용량은 &lt;code&gt;self.len() + additional&lt;/code&gt; 보다 크거나 같습니다 . 용량이 이미 충분한 경우 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c6bd5db90f8cb9540fd3f35c2883f8b8a881d37a" translate="yes" xml:space="preserve">
          <source>Tries to reserves the minimum capacity for exactly &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;. After calling &lt;code&gt;reserve_exact&lt;/code&gt;, capacity will be greater than or equal to &lt;code&gt;self.len() + additional&lt;/code&gt;. Does nothing if the capacity is already sufficient.</source>
          <target state="translated">주어진 &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; 에 정확히 &lt;code&gt;additional&lt;/code&gt; 많은 요소를 삽입 할 수 있는 최소 용량을 확보하려고합니다 . &lt;code&gt;reserve_exact&lt;/code&gt; 를 호출 한 후 용량은 &lt;code&gt;self.len() + additional&lt;/code&gt; 보다 크거나 같습니다 . 용량이 이미 충분한 경우 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="90bd1ab7f76bd67110646c064057b5e26a376cef" translate="yes" xml:space="preserve">
          <source>Tries to reserves the minimum capacity for exactly &lt;code&gt;additional&lt;/code&gt; more elements to be inserted in the given &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;. After calling &lt;code&gt;reserve_exact&lt;/code&gt;, capacity will be greater than or equal to &lt;code&gt;self.len() + additional&lt;/code&gt;. Does nothing if the capacity is already sufficient.</source>
          <target state="translated">주어진 &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; 에 정확히 &lt;code&gt;additional&lt;/code&gt; 많은 요소를 삽입 할 수 있는 최소 용량을 확보하려고합니다 . &lt;code&gt;reserve_exact&lt;/code&gt; 를 호출 한 후 용량은 &lt;code&gt;self.len() + additional&lt;/code&gt; 보다 크거나 같습니다 . 용량이 이미 충분한 경우 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6547ac01541509cbac431ef7568ec956f10079ba" translate="yes" xml:space="preserve">
          <source>Triggers a panic without invoking the panic hook.</source>
          <target state="translated">패닉 후크를 호출하지 않고 패닉을 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="27c211f297ff6afd2354cf8148b012cae3b0628b" translate="yes" xml:space="preserve">
          <source>Truncates &lt;code&gt;self&lt;/code&gt; to &lt;a href=&quot;struct.path#method.parent&quot;&gt;&lt;code&gt;self.parent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 를 &lt;a href=&quot;struct.path#method.parent&quot;&gt; &lt;code&gt;self.parent&lt;/code&gt; 로&lt;/a&gt; 자릅니다 .</target>
        </trans-unit>
        <trans-unit id="adb95599ef56aa13caaac1499a3644565e8b6049" translate="yes" xml:space="preserve">
          <source>Truncates &lt;code&gt;self&lt;/code&gt; to &lt;a href=&quot;struct.pathbuf#method.parent&quot;&gt;&lt;code&gt;self.parent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자릅니다의 &lt;code&gt;self&lt;/code&gt; 에 &lt;a href=&quot;struct.pathbuf#method.parent&quot;&gt; &lt;code&gt;self.parent&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5927f0d5ac8801b4254d8379327d991a701a80da" translate="yes" xml:space="preserve">
          <source>Truncates or extends the underlying file, updating the size of this file to become &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">기본 파일을 자르거나 확장하여이 파일의 크기를 &lt;code&gt;size&lt;/code&gt; 가되도록 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="2702cfbf0e58f8f82fb23e8d650e499d7cc927c5" translate="yes" xml:space="preserve">
          <source>Truncates the &lt;code&gt;OsString&lt;/code&gt; to zero length.</source>
          <target state="translated">&lt;code&gt;OsString&lt;/code&gt; 을 0 길이로 자릅니다 .</target>
        </trans-unit>
        <trans-unit id="ed28d8bdecc758ddcef76eed8b86ffa1d4ea3181" translate="yes" xml:space="preserve">
          <source>Truncates this &lt;code&gt;String&lt;/code&gt;, removing all contents.</source>
          <target state="translated">이 &lt;code&gt;String&lt;/code&gt; 을 잘라내어 모든 내용을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="5474aa5946c713a1f6e7a033ad591db623edd6d3" translate="yes" xml:space="preserve">
          <source>Truncating a five element vector to two elements:</source>
          <target state="translated">다섯 요소 벡터를 두 요소로 자르기 :</target>
        </trans-unit>
        <trans-unit id="743f01c9ef69fe480785553858265deba678132e" translate="yes" xml:space="preserve">
          <source>Truncating when &lt;code&gt;len == 0&lt;/code&gt; is equivalent to calling the &lt;a href=&quot;#method.clear&quot;&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;len == 0&lt;/code&gt; 때 잘리는 것은 &lt;a href=&quot;#method.clear&quot;&gt; &lt;code&gt;clear&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="7b9f4a78a76c6893e05b1ff011a47211505551b2" translate="yes" xml:space="preserve">
          <source>Truncating when &lt;code&gt;len == 0&lt;/code&gt; is equivalent to calling the &lt;a href=&quot;struct.vec#method.clear&quot;&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;len == 0&lt;/code&gt; 때 자르는 것은 &lt;a href=&quot;struct.vec#method.clear&quot;&gt; &lt;code&gt;clear&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="63908c3dcfc457f07a333b89f52c763024b846da" translate="yes" xml:space="preserve">
          <source>TrustedLen</source>
          <target state="translated">TrustedLen</target>
        </trans-unit>
        <trans-unit id="72677028b4d0d41af475041fdbe030f7c7146d2c" translate="yes" xml:space="preserve">
          <source>Try</source>
          <target state="translated">Try</target>
        </trans-unit>
        <trans-unit id="93cacc9f6a162523f52bc4401526c741faac95a0" translate="yes" xml:space="preserve">
          <source>Try designing more experiments that vary the values and lifetimes of the references passed in to the &lt;code&gt;longest&lt;/code&gt; function and how the returned reference is used. Make hypotheses about whether or not your experiments will pass the borrow checker before you compile; then check to see if you&amp;rsquo;re right!</source>
          <target state="translated">&lt;code&gt;longest&lt;/code&gt; 함수에 전달 된 참조의 값과 수명 및 반환 된 참조가 사용되는 방법 을 변화시키는 더 많은 실험을 설계하십시오 . 컴파일하기 전에 실험이 차용 검사기를 통과할지 여부에 대한 가설을 세우십시오. 그런 다음 당신이 옳은지 확인하십시오!</target>
        </trans-unit>
        <trans-unit id="b25651affa48a09fef804a246293a9441327deef" translate="yes" xml:space="preserve">
          <source>Try making a request from a different browser or asking for a different address, such as &lt;em&gt;127.0.0.1:7878/test&lt;/em&gt;, to see how the request data changes.</source>
          <target state="translated">다른 브라우저에서 요청하거나 &lt;em&gt;127.0.0.1:7878/test&lt;/em&gt; 와 같은 다른 주소를 요청하여 요청 데이터가 어떻게 변경되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3cdedf03df7f2d7ff7f62a3fe4c0233e49c2605a" translate="yes" xml:space="preserve">
          <source>Try modifying &lt;code&gt;Cacher&lt;/code&gt; to hold a hash map rather than a single value. The keys of the hash map will be the &lt;code&gt;arg&lt;/code&gt; values that are passed in, and the values of the hash map will be the result of calling the closure on that key. Instead of looking at whether &lt;code&gt;self.value&lt;/code&gt; directly has a &lt;code&gt;Some&lt;/code&gt; or a &lt;code&gt;None&lt;/code&gt; value, the &lt;code&gt;value&lt;/code&gt; function will look up the &lt;code&gt;arg&lt;/code&gt; in the hash map and return the value if it&amp;rsquo;s present. If it&amp;rsquo;s not present, the &lt;code&gt;Cacher&lt;/code&gt; will call the closure and save the resulting value in the hash map associated with its &lt;code&gt;arg&lt;/code&gt; value.</source>
          <target state="translated">단일 값이 아닌 해시 맵을 보유 하도록 &lt;code&gt;Cacher&lt;/code&gt; 를 수정하십시오 . 해시 맵의 키 는 전달 된 &lt;code&gt;arg&lt;/code&gt; 값이되고 해시 맵의 값은 해당 키에서 클로저를 호출 한 결과가됩니다. &lt;code&gt;self.value&lt;/code&gt; 에 &lt;code&gt;Some&lt;/code&gt; 또는 &lt;code&gt;None&lt;/code&gt; 값 이 직접 있는지 확인하는 대신 &lt;code&gt;value&lt;/code&gt; 함수는 해시 맵에서 &lt;code&gt;arg&lt;/code&gt; 를 조회하고 존재하는 경우 값을 리턴합니다. 존재하지 않는 경우, &lt;code&gt;Cacher&lt;/code&gt; 는 클로저를 호출하고 결과 값을 &lt;code&gt;arg&lt;/code&gt; 값 과 관련된 해시 맵에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="746db25e46725d2a25a5be38541b8fd90c0e318e" translate="yes" xml:space="preserve">
          <source>Try running the program a few times:</source>
          <target state="translated">프로그램을 몇 번 실행 해보십시오.</target>
        </trans-unit>
        <trans-unit id="40db21ca976b20c4f1a37614a766d7e0fedff356" translate="yes" xml:space="preserve">
          <source>Try running this code; you should see the following output:</source>
          <target state="translated">이 코드를 실행 해보십시오. 다음과 같은 결과가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="0c704dff8c8947b24bdb19d42ed1933021fa9b51" translate="yes" xml:space="preserve">
          <source>Try running this program with the &lt;code&gt;main&lt;/code&gt; function from Listing 13-2. Change the values in the &lt;code&gt;simulated_user_specified_value&lt;/code&gt; and &lt;code&gt;simulated_random_number&lt;/code&gt; variables to verify that in all the cases in the various &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; blocks, &lt;code&gt;calculating slowly...&lt;/code&gt; appears only once and only when needed. The &lt;code&gt;Cacher&lt;/code&gt; takes care of the logic necessary to ensure we aren&amp;rsquo;t calling the expensive calculation more than we need to so &lt;code&gt;generate_workout&lt;/code&gt; can focus on the business logic.</source>
          <target state="translated">&lt;code&gt;main&lt;/code&gt; 으로이 프로그램을 실행 해보십시오목록 13-2 기능 . 다양한 &lt;code&gt;if&lt;/code&gt; 및 &lt;code&gt;else&lt;/code&gt; 블록 의 모든 경우에 &lt;code&gt;calculating slowly...&lt;/code&gt; 것이 필요한 경우에만 한 번만 나타나는지 확인 하려면 &lt;code&gt;simulated_user_specified_value&lt;/code&gt; 및 &lt;code&gt;simulated_random_number&lt;/code&gt; 변수 의 값을 변경하십시오 . &lt;code&gt;Cacher&lt;/code&gt; 는 우리가 우리가 필요보다 더 비싼 계산을 호출되지 않도록하는 데 필요한 로직을 담당 &lt;code&gt;generate_workout&lt;/code&gt; 는 비즈니스 로직에 집중할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f64954535b22680cee23c59284f0821d313912c5" translate="yes" xml:space="preserve">
          <source>Try running this program; you should get the following output:</source>
          <target state="translated">이 프로그램을 실행 해보십시오. 다음과 같은 결과가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="4e2f79e768da3d333677b7768aba6698b9473abe" translate="yes" xml:space="preserve">
          <source>Try the tasks suggested for additional requirements that we mentioned at the start of this section on the &lt;code&gt;blog&lt;/code&gt; crate as it is after Listing 17-20 to see what you think about the design of this version of the code. Note that some of the tasks might be completed already in this design.</source>
          <target state="translated">Listing 17-20 이후로 &lt;code&gt;blog&lt;/code&gt; 상자 에서이 섹션의 시작 부분에서 언급 한 추가 요구 사항에 대해 제안 된 태스크를 시도하여이 코드 버전의 디자인에 대해 어떻게 생각하는지보십시오. 이 작업에서 일부 작업이 이미 완료되었을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bea7aa5241bc934fb93d73fbe72c3c92fd9cb391" translate="yes" xml:space="preserve">
          <source>Try this instead:</source>
          <target state="translated">대신 이것을 시도하십시오 :</target>
        </trans-unit>
        <trans-unit id="cf4dffd1f17e87d4131fe9dbd6ed3566366e3295" translate="yes" xml:space="preserve">
          <source>Try to avoid moving the variable.</source>
          <target state="translated">변수 이동을 피하십시오.</target>
        </trans-unit>
        <trans-unit id="708f496ce718cad5f2bfb9c2203cb73e375d06e0" translate="yes" xml:space="preserve">
          <source>Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type.</source>
          <target state="translated">소스 번호 유형에서 대상 번호 유형을 작성하십시오. 소스 값이 목표 유형의 범위를 벗어나면 오류를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d7bb54d91c5813615d6b6445e2ebf488e82cdc0c" translate="yes" xml:space="preserve">
          <source>Try using &lt;code&gt;{}&lt;/code&gt; instead:</source>
          <target state="translated">대신 &lt;code&gt;{}&lt;/code&gt; 를 사용해보십시오 .</target>
        </trans-unit>
        <trans-unit id="b8a1eb6a4114d62537aa281f5d03abf55ba6e9e3" translate="yes" xml:space="preserve">
          <source>Try using type inference instead. Example:</source>
          <target state="translated">대신 형식 유추를 사용해보십시오. 예:</target>
        </trans-unit>
        <trans-unit id="ea0079401a89dd04fe8291c0c734d4aa5a8c7177" translate="yes" xml:space="preserve">
          <source>Try::from_error</source>
          <target state="translated">Try::from_error</target>
        </trans-unit>
        <trans-unit id="bde6f44b7e04bd6491a07ffb037c4fa48b882a33" translate="yes" xml:space="preserve">
          <source>Try::from_ok</source>
          <target state="translated">Try::from_ok</target>
        </trans-unit>
        <trans-unit id="809111dd75695d75905fa1c8b4bad5d14691a30e" translate="yes" xml:space="preserve">
          <source>Try::into_result</source>
          <target state="translated">Try::into_result</target>
        </trans-unit>
        <trans-unit id="18e77d4b44ff639060d9a2fa2960f190781f7859" translate="yes" xml:space="preserve">
          <source>TryFrom</source>
          <target state="translated">TryFrom</target>
        </trans-unit>
        <trans-unit id="4acc1ac1c58ab4ae6724001d461baf2c8b8dbc3a" translate="yes" xml:space="preserve">
          <source>TryFrom::try_from</source>
          <target state="translated">TryFrom::try_from</target>
        </trans-unit>
        <trans-unit id="ad96c601815ad5f050e0b6351dd0b189e48a31a9" translate="yes" xml:space="preserve">
          <source>TryFromIntError</source>
          <target state="translated">TryFromIntError</target>
        </trans-unit>
        <trans-unit id="f81061adcf59a4b18f6432dc500e16b9a793d0e6" translate="yes" xml:space="preserve">
          <source>TryFromIntError::borrow</source>
          <target state="translated">TryFromIntError::borrow</target>
        </trans-unit>
        <trans-unit id="4d5e6ded3e6e6a7b69de27e74b52df8d33085625" translate="yes" xml:space="preserve">
          <source>TryFromIntError::borrow_mut</source>
          <target state="translated">TryFromIntError::borrow_mut</target>
        </trans-unit>
        <trans-unit id="8c6ac7bc7b08a0164c28c84e181d07ac7264caa1" translate="yes" xml:space="preserve">
          <source>TryFromIntError::cause</source>
          <target state="translated">TryFromIntError::cause</target>
        </trans-unit>
        <trans-unit id="f0da83cb703ff9ab478400076f17fb3b6df58453" translate="yes" xml:space="preserve">
          <source>TryFromIntError::clone</source>
          <target state="translated">TryFromIntError::clone</target>
        </trans-unit>
        <trans-unit id="21c991dfc7c9f46d0f223e9ada6bbb1b3ddc0419" translate="yes" xml:space="preserve">
          <source>TryFromIntError::clone_from</source>
          <target state="translated">TryFromIntError::clone_from</target>
        </trans-unit>
        <trans-unit id="611f56282230f313fea840ae9d1b4022b318faec" translate="yes" xml:space="preserve">
          <source>TryFromIntError::clone_into</source>
          <target state="translated">TryFromIntError::clone_into</target>
        </trans-unit>
        <trans-unit id="05df18eb5e5e51ad418c603a8c9e45f939b7afa0" translate="yes" xml:space="preserve">
          <source>TryFromIntError::description</source>
          <target state="translated">TryFromIntError::description</target>
        </trans-unit>
        <trans-unit id="cffa72c79f028d8b2b67ac3b5a88fa8e893445f1" translate="yes" xml:space="preserve">
          <source>TryFromIntError::eq</source>
          <target state="translated">TryFromIntError::eq</target>
        </trans-unit>
        <trans-unit id="7ec29ac29b26af4ad4e22c908d20f04e34123009" translate="yes" xml:space="preserve">
          <source>TryFromIntError::fmt</source>
          <target state="translated">TryFromIntError::fmt</target>
        </trans-unit>
        <trans-unit id="27af3cbe1fc043a4ba2263a1ddb04f43ed3341d8" translate="yes" xml:space="preserve">
          <source>TryFromIntError::from</source>
          <target state="translated">TryFromIntError::from</target>
        </trans-unit>
        <trans-unit id="88b0ca4bd6e97295df88042c17da3bc4ad1d1e49" translate="yes" xml:space="preserve">
          <source>TryFromIntError::into</source>
          <target state="translated">TryFromIntError::into</target>
        </trans-unit>
        <trans-unit id="b590493dab8454ef91bc8263edc4d90474ae7585" translate="yes" xml:space="preserve">
          <source>TryFromIntError::ne</source>
          <target state="translated">TryFromIntError::ne</target>
        </trans-unit>
        <trans-unit id="34bc40cbf452f309c77160c0bc046a559d512c4c" translate="yes" xml:space="preserve">
          <source>TryFromIntError::source</source>
          <target state="translated">TryFromIntError::source</target>
        </trans-unit>
        <trans-unit id="4650111711913011245aed1cfd4e401bf80b92bd" translate="yes" xml:space="preserve">
          <source>TryFromIntError::to_owned</source>
          <target state="translated">TryFromIntError::to_owned</target>
        </trans-unit>
        <trans-unit id="145d38c6294ea7b0b18a9beaf5c2ba62d71c6d31" translate="yes" xml:space="preserve">
          <source>TryFromIntError::to_string</source>
          <target state="translated">TryFromIntError::to_string</target>
        </trans-unit>
        <trans-unit id="3bd074fd7b824eb16d5c009603fefee21d967354" translate="yes" xml:space="preserve">
          <source>TryFromIntError::try_from</source>
          <target state="translated">TryFromIntError::try_from</target>
        </trans-unit>
        <trans-unit id="2a66975e8a4a9df97b01eea79b97edba1ce4fc13" translate="yes" xml:space="preserve">
          <source>TryFromIntError::try_into</source>
          <target state="translated">TryFromIntError::try_into</target>
        </trans-unit>
        <trans-unit id="853b95e029b9b10b04426ea41bce22a33cadfde3" translate="yes" xml:space="preserve">
          <source>TryFromIntError::type_id</source>
          <target state="translated">TryFromIntError::type_id</target>
        </trans-unit>
        <trans-unit id="f7ae979f3e3e5c6883cf562acec4a3d8911ff6b7" translate="yes" xml:space="preserve">
          <source>TryFromSliceError</source>
          <target state="translated">TryFromSliceError</target>
        </trans-unit>
        <trans-unit id="08abda7dda4132c13ad2de215a8116ad1c512693" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::borrow</source>
          <target state="translated">TryFromSliceError::borrow</target>
        </trans-unit>
        <trans-unit id="a42a16b656b3e78ad3c1fba788c25cca8562aa04" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::borrow_mut</source>
          <target state="translated">TryFromSliceError::borrow_mut</target>
        </trans-unit>
        <trans-unit id="6b154dc43d23a695abe3c26c810c9600a10bbfc7" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::cause</source>
          <target state="translated">TryFromSliceError::cause</target>
        </trans-unit>
        <trans-unit id="06c3cdee5b115341587a81b7640e380fd15333ea" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::clone</source>
          <target state="translated">TryFromSliceError::clone</target>
        </trans-unit>
        <trans-unit id="a4d48a9b9f7dd5e07e2bb398d2d1029a5b1eb76b" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::clone_from</source>
          <target state="translated">TryFromSliceError::clone_from</target>
        </trans-unit>
        <trans-unit id="faf3d5f757e37a47d1e58275eb48efaa726218ad" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::clone_into</source>
          <target state="translated">TryFromSliceError::clone_into</target>
        </trans-unit>
        <trans-unit id="49619f8bf5df143f7d9e552904f6a84fca8093ea" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::description</source>
          <target state="translated">TryFromSliceError::description</target>
        </trans-unit>
        <trans-unit id="fc484006f6aa38bffa40eb517d8b4b32091a5671" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::fmt</source>
          <target state="translated">TryFromSliceError::fmt</target>
        </trans-unit>
        <trans-unit id="630dd1955f1b733df02d2f1446cd6b9ba9cd293b" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::from</source>
          <target state="translated">TryFromSliceError::from</target>
        </trans-unit>
        <trans-unit id="2a5519380aabe238e175f9b6849d0a2d7f53c5a8" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::into</source>
          <target state="translated">TryFromSliceError::into</target>
        </trans-unit>
        <trans-unit id="b1ef9a7f4941a7c7fc1ee4d269c0be752b4049c1" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::source</source>
          <target state="translated">TryFromSliceError::source</target>
        </trans-unit>
        <trans-unit id="46b791fdfec792bbb13fbb3115a245caecffc0d8" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::to_owned</source>
          <target state="translated">TryFromSliceError::to_owned</target>
        </trans-unit>
        <trans-unit id="04f8529255b3a3ba17e31837ca350fb03a1837a0" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::to_string</source>
          <target state="translated">TryFromSliceError::to_string</target>
        </trans-unit>
        <trans-unit id="d39f8030ca01a81b1eedd289678e98a9a8c6374d" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::try_from</source>
          <target state="translated">TryFromSliceError::try_from</target>
        </trans-unit>
        <trans-unit id="87b56d5270282ca8cea8f2ae22fb393b6ef2e185" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::try_into</source>
          <target state="translated">TryFromSliceError::try_into</target>
        </trans-unit>
        <trans-unit id="273ef45502220a3e82cc6cd2ff47d1b967ced192" translate="yes" xml:space="preserve">
          <source>TryFromSliceError::type_id</source>
          <target state="translated">TryFromSliceError::type_id</target>
        </trans-unit>
        <trans-unit id="eb91bb9edb358310d1de44ff46dcb50ed3d4dbf6" translate="yes" xml:space="preserve">
          <source>TryInto</source>
          <target state="translated">TryInto</target>
        </trans-unit>
        <trans-unit id="d4782bb6e82830853df5d390b765742f2ed433ce" translate="yes" xml:space="preserve">
          <source>TryInto::try_into</source>
          <target state="translated">TryInto::try_into</target>
        </trans-unit>
        <trans-unit id="d550a8f93a6fe62cffc66481db4e53166b4de9e5" translate="yes" xml:space="preserve">
          <source>TryIter</source>
          <target state="translated">TryIter</target>
        </trans-unit>
        <trans-unit id="b4f81b18947056193693e5cce08cae5bcc996cf1" translate="yes" xml:space="preserve">
          <source>TryLockError</source>
          <target state="translated">TryLockError</target>
        </trans-unit>
        <trans-unit id="6408d526dcb04978c761f176b4b48253f6e2b3a3" translate="yes" xml:space="preserve">
          <source>TryLockError::borrow</source>
          <target state="translated">TryLockError::borrow</target>
        </trans-unit>
        <trans-unit id="c1162b670a7e56c24667fd355cb74c01579b66f6" translate="yes" xml:space="preserve">
          <source>TryLockError::borrow_mut</source>
          <target state="translated">TryLockError::borrow_mut</target>
        </trans-unit>
        <trans-unit id="645caaf83340c9e36066d5283df40d2289f0c56a" translate="yes" xml:space="preserve">
          <source>TryLockError::cause</source>
          <target state="translated">TryLockError::cause</target>
        </trans-unit>
        <trans-unit id="edc35be2771c53d502f5e8aaee878dd2e15d3b5a" translate="yes" xml:space="preserve">
          <source>TryLockError::description</source>
          <target state="translated">TryLockError::description</target>
        </trans-unit>
        <trans-unit id="c6f2c000c844249e646527b009bb44e488eef5e5" translate="yes" xml:space="preserve">
          <source>TryLockError::fmt</source>
          <target state="translated">TryLockError::fmt</target>
        </trans-unit>
        <trans-unit id="9001bf82d878e70373f04e6654b0f776179b2f53" translate="yes" xml:space="preserve">
          <source>TryLockError::from</source>
          <target state="translated">TryLockError::from</target>
        </trans-unit>
        <trans-unit id="655a2e7bdf752d14f5354358dacab8b46b5c1b0d" translate="yes" xml:space="preserve">
          <source>TryLockError::into</source>
          <target state="translated">TryLockError::into</target>
        </trans-unit>
        <trans-unit id="e4ccb09bacf6984439f523c7aecac39df9844058" translate="yes" xml:space="preserve">
          <source>TryLockError::source</source>
          <target state="translated">TryLockError::source</target>
        </trans-unit>
        <trans-unit id="c61e09fc91fbcfa81bcf718beb714ea63719b4eb" translate="yes" xml:space="preserve">
          <source>TryLockError::to_string</source>
          <target state="translated">TryLockError::to_string</target>
        </trans-unit>
        <trans-unit id="ebcde8097671e82bd0e812397421ce3e5f83aa6a" translate="yes" xml:space="preserve">
          <source>TryLockError::try_from</source>
          <target state="translated">TryLockError::try_from</target>
        </trans-unit>
        <trans-unit id="7b92cc07d0ee9b28099cb947d6053805d66baac1" translate="yes" xml:space="preserve">
          <source>TryLockError::try_into</source>
          <target state="translated">TryLockError::try_into</target>
        </trans-unit>
        <trans-unit id="904eaeeceb270dd726f594af3ac7324866060774" translate="yes" xml:space="preserve">
          <source>TryLockError::type_id</source>
          <target state="translated">TryLockError::type_id</target>
        </trans-unit>
        <trans-unit id="7d779fd6e34ddc3c9ecd145e12eaab2707fb88f2" translate="yes" xml:space="preserve">
          <source>TryLockResult</source>
          <target state="translated">TryLockResult</target>
        </trans-unit>
        <trans-unit id="b00cb1382a524b91c7b6f872f909018a2ba2fcdb" translate="yes" xml:space="preserve">
          <source>TryRecvError</source>
          <target state="translated">TryRecvError</target>
        </trans-unit>
        <trans-unit id="ffa19b2195d0c15e9339c99460878fe4f010d76d" translate="yes" xml:space="preserve">
          <source>TryReserveError</source>
          <target state="translated">TryReserveError</target>
        </trans-unit>
        <trans-unit id="7b782adc98cd68cba60f49733fd7fc4e8ce78c2c" translate="yes" xml:space="preserve">
          <source>TrySendError</source>
          <target state="translated">TrySendError</target>
        </trans-unit>
        <trans-unit id="bb111acc067364e9c3571b77d0ce5c4a9c6b3124" translate="yes" xml:space="preserve">
          <source>Trying to implement this scenario using our definition of &lt;code&gt;List&lt;/code&gt; with &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; won&amp;rsquo;t work, as shown in Listing 15-17:</source>
          <target state="translated">우리의 정의를 사용하여이 시나리오를 구현하려고 &lt;code&gt;List&lt;/code&gt; 에 &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; 목록 15 ~ 17과 같이하지 않습니다 일 :</target>
        </trans-unit>
        <trans-unit id="c41a2be51027c17da2914785c19c9af65da7231f" translate="yes" xml:space="preserve">
          <source>Tuple</source>
          <target state="translated">Tuple</target>
        </trans-unit>
        <trans-unit id="5518f0873d902287241e5e83188a303861d5a9e6" translate="yes" xml:space="preserve">
          <source>Tuple Layout</source>
          <target state="translated">튜플 레이아웃</target>
        </trans-unit>
        <trans-unit id="11dd41e6851bdf449646a773272c37c50a284fc9" translate="yes" xml:space="preserve">
          <source>Tuple and tuple indexing expressions</source>
          <target state="translated">튜플 및 튜플 인덱싱 표현식</target>
        </trans-unit>
        <trans-unit id="6bdf2a89da03771b9bc590f650c8c5b6c77c5197" translate="yes" xml:space="preserve">
          <source>Tuple expression</source>
          <target state="translated">튜플 표현</target>
        </trans-unit>
        <trans-unit id="a63a11d9cdfd9d84d9c0b5569d554b9e83dcf1cc" translate="yes" xml:space="preserve">
          <source>Tuple expression attributes</source>
          <target state="translated">튜플 표현식 속성</target>
        </trans-unit>
        <trans-unit id="e822aa7ad790f9164d76dd24bd82039b2ac65758" translate="yes" xml:space="preserve">
          <source>Tuple expressions</source>
          <target state="translated">튜플 표현식</target>
        </trans-unit>
        <trans-unit id="49e52f54a16d5e893978d9d7c233cca906e4a8cd" translate="yes" xml:space="preserve">
          <source>Tuple expressions are written by listing the &lt;a href=&quot;../expressions&quot;&gt;operands&lt;/a&gt; in a parenthesized, comma-separated list. 1-ary tuple expressions require a comma after their operand to be disambiguated with a &lt;a href=&quot;grouped-expr&quot;&gt;parenthetical expression&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e413cd44223377d7cfb3699dad2f2341e4e6ba" translate="yes" xml:space="preserve">
          <source>Tuple expressions evaluate into &lt;a href=&quot;../types/tuple&quot;&gt;tuple values&lt;/a&gt; with the operands initializing the elements of the tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f601e94cafc9d12d8593dd02c6d703d40de35c4d" translate="yes" xml:space="preserve">
          <source>Tuple index</source>
          <target state="translated">튜플 인덱스</target>
        </trans-unit>
        <trans-unit id="b17e1ada42d80816617817c68a5ec792352c6c67" translate="yes" xml:space="preserve">
          <source>Tuple index expressions are written as an operand, &lt;code&gt;.&lt;/code&gt;, and a tuple index. The index must be written as a &lt;a href=&quot;../tokens#integer-literals&quot;&gt;decimal literal&lt;/a&gt; with no leading zeros, underscores, or suffix. The operand must have the type of a tuple or tuple struct. If the tuple index is not an element of the tuple or tuple struct, it is a compiler error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6c1f43b44b32fa35dca7937a6775d19792506c" translate="yes" xml:space="preserve">
          <source>Tuple indexing</source>
          <target state="translated">튜플 인덱싱</target>
        </trans-unit>
        <trans-unit id="44dc4b3b01b16ad2661df0966d7c7a1cf905b8b9" translate="yes" xml:space="preserve">
          <source>Tuple indexing expressions</source>
          <target state="translated">튜플 인덱싱 표현식</target>
        </trans-unit>
        <trans-unit id="9e4c13ade8d660c6335dcf428421b9b28b1656d1" translate="yes" xml:space="preserve">
          <source>Tuple indexing expressions evaluate like &lt;a href=&quot;field-expr#field-access-expressions&quot;&gt;field access expressions&lt;/a&gt;, but access elements of &lt;a href=&quot;../types/tuple&quot;&gt;tuples&lt;/a&gt; or &lt;a href=&quot;../types/struct&quot;&gt;tuple structs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a1d058f14f452a93d10da089ec69f4c32d794e" translate="yes" xml:space="preserve">
          <source>Tuple indices are compared with the literal token directly. Tuple indices start with &lt;code&gt;0&lt;/code&gt; and each successive index increments the value by &lt;code&gt;1&lt;/code&gt; as a decimal value. Thus, only decimal values will match, and the value must not have any extra &lt;code&gt;0&lt;/code&gt; prefix characters.</source>
          <target state="translated">튜플 인덱스는 리터럴 토큰과 직접 비교됩니다. 튜플 인덱스는 &lt;code&gt;0&lt;/code&gt; 으로 시작 하고 각 연속 인덱스는 값을 10 진수 값 으로 &lt;code&gt;1&lt;/code&gt; 씩 증가시킵니다 . 따라서 10 진수 값만 일치하며 값에는 추가 &lt;code&gt;0&lt;/code&gt; 접두사 문자 가 없어야 합니다.</target>
        </trans-unit>
        <trans-unit id="f28c59e960977888e94a3c34b0278e6e00c6936d" translate="yes" xml:space="preserve">
          <source>Tuple patterns</source>
          <target state="translated">튜플 패턴</target>
        </trans-unit>
        <trans-unit id="49d48b16cda97c82ccd41f82c8b675a2db8b4116" translate="yes" xml:space="preserve">
          <source>Tuple patterns match tuple values that match all criteria defined by its subpatterns. They are also used to &lt;a href=&quot;#destructuring&quot;&gt;destructure&lt;/a&gt; a tuple.</source>
          <target state="translated">튜플 패턴은 하위 패턴으로 정의 된 모든 기준과 일치하는 튜플 값과 일치합니다. 또한 튜플 을 &lt;a href=&quot;#destructuring&quot;&gt;구조화&lt;/a&gt; 하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="0d60a4a77a7ad9b86665dc5ec42ea14f2698ee75" translate="yes" xml:space="preserve">
          <source>Tuple patterns match tuple values that match all criteria defined by its subpatterns. They are also used to &lt;a href=&quot;patterns#destructuring&quot;&gt;destructure&lt;/a&gt; a tuple.</source>
          <target state="translated">튜플 패턴은 하위 패턴으로 정의 된 모든 기준과 일치하는 튜플 값과 일치합니다. 그들은 또한하는 데 사용됩니다 &lt;a href=&quot;patterns#destructuring&quot;&gt;destructure&lt;/a&gt; 튜플을.</target>
        </trans-unit>
        <trans-unit id="f4691e7b0b597791c415f166cd1397c0daec1163" translate="yes" xml:space="preserve">
          <source>Tuple struct expression</source>
          <target state="translated">튜플 구조체 표현</target>
        </trans-unit>
        <trans-unit id="ea9f0838dcbcc88a01e222d90f53e8f39880136f" translate="yes" xml:space="preserve">
          <source>Tuple struct patterns</source>
          <target state="translated">튜플 구조체 패턴</target>
        </trans-unit>
        <trans-unit id="91a08356932d9cf1d09320f96dfca3ba26d2fc8a" translate="yes" xml:space="preserve">
          <source>Tuple struct patterns match tuple struct and enum values that match all criteria defined by its subpatterns. They are also used to &lt;a href=&quot;#destructuring&quot;&gt;destructure&lt;/a&gt; a tuple struct or enum value.</source>
          <target state="translated">튜플 구조체 패턴은 하위 패턴으로 정의 된 모든 기준과 일치하는 튜플 구조체 및 열거 형 값과 일치합니다. 또한 튜플 구조체 또는 열거 형 값 을 &lt;a href=&quot;#destructuring&quot;&gt;구조화&lt;/a&gt; 하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="6ce23bf97599891184ee6af65a034650dc03427a" translate="yes" xml:space="preserve">
          <source>Tuple struct patterns match tuple struct and enum values that match all criteria defined by its subpatterns. They are also used to &lt;a href=&quot;patterns#destructuring&quot;&gt;destructure&lt;/a&gt; a tuple struct or enum value.</source>
          <target state="translated">튜플 구조체 패턴은 해당 서브 패턴에 의해 정의 된 모든 기준과 일치하는 튜플 구조체 및 열거 형 값과 일치합니다. 또한 튜플 구조체 또는 열거 형 값 을 &lt;a href=&quot;patterns#destructuring&quot;&gt;구조화&lt;/a&gt; 하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="dd28158a620f360ba4aa0c759eb104e4dede6329" translate="yes" xml:space="preserve">
          <source>Tuple structs are instantiated in the same way as tuples themselves, except with the struct's name as a prefix: &lt;code&gt;Foo(123, false, 0.1)&lt;/code&gt;.</source>
          <target state="translated">튜플 구조체는 접두사로 구조체 이름을 사용하는 것을 제외하고 튜플 자체와 동일한 방식으로 인스턴스화됩니다 : &lt;code&gt;Foo(123, false, 0.1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="985c4283e220405d4d0ac504a38671b8b680d3c5" translate="yes" xml:space="preserve">
          <source>Tuple structs are similar to regular structs, but its fields have no names. They are used like tuples, with deconstruction possible via &lt;code&gt;let TupleStruct(x, y) = foo;&lt;/code&gt; syntax. For accessing individual variables, the same syntax is used as with regular tuples, namely &lt;code&gt;foo.0&lt;/code&gt;, &lt;code&gt;foo.1&lt;/code&gt;, etc, starting at zero.</source>
          <target state="translated">튜플 구조체는 일반 구조체와 비슷하지만 해당 필드에는 이름이 없습니다. 그것들은 &lt;code&gt;let TupleStruct(x, y) = foo;&lt;/code&gt; 를 통해 해체가 가능한 튜플처럼 사용됩니다 . 통사론. 개별 변수에 액세스하기 위해 일반 튜플과 동일한 구문, 즉 &lt;code&gt;foo.0&lt;/code&gt; , &lt;code&gt;foo.1&lt;/code&gt; 등이 0에서 시작하여 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="405d7b4bc4604c6657b54f4846e0560006e9fc0e" translate="yes" xml:space="preserve">
          <source>Tuple type</source>
          <target state="translated">튜플 타입</target>
        </trans-unit>
        <trans-unit id="5501f69a4f42fb8e135b4df10c2273778be704fd" translate="yes" xml:space="preserve">
          <source>Tuple types</source>
          <target state="translated">튜플 유형</target>
        </trans-unit>
        <trans-unit id="5e273646744d8620cb13d8fba10b333bc84bed1e" translate="yes" xml:space="preserve">
          <source>Tuple types and values are denoted by listing the types or values of their elements, respectively, in a parenthesized, comma-separated list.</source>
          <target state="translated">튜플 유형 및 값은 괄호로 묶은 쉼표로 구분 된 목록에 해당 요소의 유형 또는 값을 각각 나열하여 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a1babd8f3b1a5b3b8804a04ea58994b24b061e4b" translate="yes" xml:space="preserve">
          <source>Tuple types are written by listing the types of their elements in a parenthesized, comma-separated list. 1-ary tuples require a comma after their element type to be disambiguated with a &lt;a href=&quot;../types#parenthesized-types&quot;&gt;parenthesized type&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbd57dd63bac7c82834159ddc9ea56e1515ece9" translate="yes" xml:space="preserve">
          <source>Tuple types, if each component also implements &lt;code&gt;Clone&lt;/code&gt; (e.g., &lt;code&gt;()&lt;/code&gt;, &lt;code&gt;(i32, bool)&lt;/code&gt;)</source>
          <target state="translated">각 구성 요소가 &lt;code&gt;Clone&lt;/code&gt; 를 구현하는 경우 튜플 유형 (예 : &lt;code&gt;()&lt;/code&gt; , &lt;code&gt;(i32, bool)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bd89c408cfdec88fd6d8e898f3566b701ea35d3a" translate="yes" xml:space="preserve">
          <source>Tuple types, if each component also implements &lt;code&gt;Copy&lt;/code&gt; (e.g., &lt;code&gt;()&lt;/code&gt;, &lt;code&gt;(i32, bool)&lt;/code&gt;)</source>
          <target state="translated">튜플 유형 (각 구성 요소가 &lt;code&gt;Copy&lt;/code&gt; (예 : &lt;code&gt;()&lt;/code&gt; , &lt;code&gt;(i32, bool)&lt;/code&gt; ) 도 구현하는 경우 )</target>
        </trans-unit>
        <trans-unit id="56d624bd930abb83c2a720d48bf858a7d49eb690" translate="yes" xml:space="preserve">
          <source>Tuples are &lt;em&gt;finite&lt;/em&gt;. In other words, a tuple has a length. Here's a tuple of length &lt;code&gt;3&lt;/code&gt;:</source>
          <target state="translated">튜플은 &lt;em&gt;유한&lt;/em&gt; 합니다. 즉, 튜플의 길이는 길다. 길이 &lt;code&gt;3&lt;/code&gt; 의 튜플은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="4da05b6b2dc1fb19e334d246d97430b523feb378" translate="yes" xml:space="preserve">
          <source>Tuples are &lt;em&gt;heterogeneous&lt;/em&gt;. This means that each element of the tuple can have a different type. In that tuple above, it has the type:</source>
          <target state="translated">튜플은 &lt;em&gt;이기종&lt;/em&gt; 입니다. 이것은 튜플의 각 요소가 다른 유형을 가질 수 있음을 의미합니다. 위의 튜플에서 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="567f8079007690271f5a29cda47d067992841b99" translate="yes" xml:space="preserve">
          <source>Tuples are a &lt;em&gt;sequence&lt;/em&gt;. This means that they can be accessed by position; this is called 'tuple indexing', and it looks like this:</source>
          <target state="translated">튜플은 &lt;em&gt;시퀀스&lt;/em&gt; 입니다. 이는 위치별로 액세스 할 수 있음을 의미합니다. 이것을 '튜플 인덱싱'이라고하며 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e91ee0fad8731c0386a059fa3bf0652dd08c64d3" translate="yes" xml:space="preserve">
          <source>Tuples are often used as a return type when you want to return more than one value:</source>
          <target state="translated">튜플은 둘 이상의 값을 반환하려는 경우 종종 반환 유형으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d7ee3ba750e08e0013c45b2b001ce78e8459fa90" translate="yes" xml:space="preserve">
          <source>Tuples are written by enclosing zero or more comma-separated expressions in parentheses. They are used to create &lt;a href=&quot;../types/tuple&quot;&gt;tuple-typed&lt;/a&gt; values.</source>
          <target state="translated">튜플은 0 개 이상의 쉼표로 구분 된 표현식을 괄호로 묶어 작성합니다. &lt;a href=&quot;../types/tuple&quot;&gt;튜플 형식의&lt;/a&gt; 값 을 만드는 데 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="5fb8ee22cf29120bf8f87bd0e3ee7ebd9949b96b" translate="yes" xml:space="preserve">
          <source>Tuples do not have any guarantees about their layout.</source>
          <target state="translated">튜플은 레이아웃에 대해 보증하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cf3ce6296bd35ecede807c2ca855fee144afacb9" translate="yes" xml:space="preserve">
          <source>Tuples, if they only contain types that are also &lt;code&gt;Copy&lt;/code&gt;. For example, &lt;code&gt;(i32, i32)&lt;/code&gt; is &lt;code&gt;Copy&lt;/code&gt;, but &lt;code&gt;(i32, String)&lt;/code&gt; is not.</source>
          <target state="translated">튜플은, 그들은 단지 또한 종류가 포함 된 경우 &lt;code&gt;Copy&lt;/code&gt; . 예를 들어 &lt;code&gt;(i32, i32)&lt;/code&gt; 는 &lt;code&gt;Copy&lt;/code&gt; 이지만 &lt;code&gt;(i32, String)&lt;/code&gt; 은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="f9c67af2890eabc2460069a200a1d4229437528f" translate="yes" xml:space="preserve">
          <source>Tuples, where a tuple is a coercion site to type &lt;code&gt;(U_0, U_1, ..., U_n)&lt;/code&gt;. Each sub-expression is a coercion site to the respective type, e.g. the zeroth sub-expression is a coercion site to type &lt;code&gt;U_0&lt;/code&gt;.</source>
          <target state="translated">튜플은 튜플이 &lt;code&gt;(U_0, U_1, ..., U_n)&lt;/code&gt; 을 입력 할 수있는 강제 사이트 입니다. 각 하위 표현은 각 유형에 대한 강제 사이트입니다. 예를 들어, 0 번째 하위 표현은 &lt;code&gt;U_0&lt;/code&gt; 유형에 대한 강제 사이트 입니다.</target>
        </trans-unit>
        <trans-unit id="c9853aa9de5add5fa51a4530e193cc7279fd6159" translate="yes" xml:space="preserve">
          <source>Turn a &lt;a href=&quot;../../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">차례 &lt;a href=&quot;../../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;../struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e89ab8db9a13e916878d1aff18816e183dfae8d6" translate="yes" xml:space="preserve">
          <source>Turn a &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">차례 &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e7311ea0eb58a505bdf5f01b88b3339c4b7cd8b3" translate="yes" xml:space="preserve">
          <source>Turn a &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">차례 &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;struct.vec&quot;&gt; &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b38a71dfcaefc79a39b01d00754205648079aa2" translate="yes" xml:space="preserve">
          <source>Turn a &lt;a href=&quot;../struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">차례 &lt;a href=&quot;../struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;../../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6fe97f664cc043b9cae686cc00711fc73ef1df08" translate="yes" xml:space="preserve">
          <source>Turn a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">차례 &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3fbea64da5a5f06d75e0a8af0090b3b0e2a08380" translate="yes" xml:space="preserve">
          <source>Turn a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">차례 &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4669fd8f77a02ec1c266c7fe545791bb7885dad1" translate="yes" xml:space="preserve">
          <source>Turn a &lt;a href=&quot;struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">차례 &lt;a href=&quot;struct.vec&quot;&gt; &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b09625451991a5b8e805da34776aaedc90525fbd" translate="yes" xml:space="preserve">
          <source>Turn a &lt;a href=&quot;struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; into a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">차례 &lt;a href=&quot;struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="54437abef1f3840afb67899d2d515749e44d9fef" translate="yes" xml:space="preserve">
          <source>Turn a [&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;] into a [&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;].</source>
          <target state="translated">[ &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; ]를 [ &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; ]로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="e6b58be63cc031a2c0fb9a41ef4a5c4c544f30d9" translate="yes" xml:space="preserve">
          <source>Turn a [&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;] into a [&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;].</source>
          <target state="translated">[ &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; ]를 [ &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; ] 로 바꾸 십시오 .</target>
        </trans-unit>
        <trans-unit id="68fccb5986b95d1769fe3ac2f5db1e4528fbe17a" translate="yes" xml:space="preserve">
          <source>Turning Our Single-Threaded Server into a Multithreaded Server</source>
          <target state="translated">단일 스레드 서버를 다중 스레드 서버로 전환</target>
        </trans-unit>
        <trans-unit id="b859b7ff96007e824952102a2b6cf7f2532bb6f5" translate="yes" xml:space="preserve">
          <source>Turning a &lt;code&gt;*mut T&lt;/code&gt; into an &lt;code&gt;&amp;amp;mut T&lt;/code&gt;:</source>
          <target state="translated">터닝 &lt;code&gt;*mut T&lt;/code&gt; 로 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="92f32c54d91cd32dab86c92433ff5bf59fbe670a" translate="yes" xml:space="preserve">
          <source>Turning a &lt;code&gt;Vec&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; into a &lt;code&gt;Vec&amp;lt;Option&amp;lt;&amp;amp;T&amp;gt;&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">선삭 &lt;code&gt;Vec&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; (A) 내로 &lt;code&gt;Vec&amp;lt;Option&amp;lt;&amp;amp;T&amp;gt;&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="25f375d70a4ba87d59382df0fccc95f55dd8020a" translate="yes" xml:space="preserve">
          <source>Turning a &lt;code&gt;fn&lt;/code&gt; into a &lt;code&gt;const fn&lt;/code&gt; has no effect on run-time uses of that function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddddd1c6a422bfc2e73b1e1e06d4513f4b671ef3" translate="yes" xml:space="preserve">
          <source>Turning a pointer into a &lt;code&gt;usize&lt;/code&gt;:</source>
          <target state="translated">포인터를 &lt;code&gt;usize&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0cfcb75a89ff8f3d42e0969a81b68c58ff41ffed" translate="yes" xml:space="preserve">
          <source>Turning a pointer into a function pointer. This is &lt;em&gt;not&lt;/em&gt; portable to machines where function pointers and data pointers have different sizes.</source>
          <target state="translated">포인터를 함수 포인터로 바꾸기 함수 포인터와 데이터 포인터의 크기가 다른 기계에는 이식성 이 &lt;em&gt;없습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="406e60e2392b6e162c75155bdd0eec0802166101" translate="yes" xml:space="preserve">
          <source>Turning an &lt;code&gt;&amp;amp;mut T&lt;/code&gt; into an &lt;code&gt;&amp;amp;mut U&lt;/code&gt;:</source>
          <target state="translated">켜기 &lt;code&gt;&amp;amp;mut T&lt;/code&gt; 로 &lt;code&gt;&amp;amp;mut U&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b7709a825d906324651f42904d312bfc3d9cfdce" translate="yes" xml:space="preserve">
          <source>Turning an &lt;code&gt;&amp;amp;str&lt;/code&gt; into an &lt;code&gt;&amp;amp;[u8]&lt;/code&gt;:</source>
          <target state="translated">선삭 &lt;code&gt;&amp;amp;str&lt;/code&gt; 로 &lt;code&gt;&amp;amp;[u8]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8fe665706a3a9d23c3f80f786fb6f659e7dafb3b" translate="yes" xml:space="preserve">
          <source>Turning raw bytes(&lt;code&gt;&amp;amp;[u8]&lt;/code&gt;) to &lt;code&gt;u32&lt;/code&gt;, &lt;code&gt;f64&lt;/code&gt;, etc.:</source>
          <target state="translated">원시 바이트 ( &lt;code&gt;&amp;amp;[u8]&lt;/code&gt; )를 &lt;code&gt;u32&lt;/code&gt; , &lt;code&gt;f64&lt;/code&gt; 등으로 변환 :</target>
        </trans-unit>
        <trans-unit id="45cfabf1744551752d0d316f8226b7949182c80d" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Arc&lt;/code&gt;s are equal if their inner values are equal, even if they are stored in different allocation.</source>
          <target state="translated">두 개의 &lt;code&gt;Arc&lt;/code&gt; 는 서로 다른 할당에 저장되어 있어도 내부 값이 같으면 동일합니다.</target>
        </trans-unit>
        <trans-unit id="1e4a5ffe0d58bc942e71a31a403ac137dbf193dd" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Arc&lt;/code&gt;s are equal if their inner values are equal.</source>
          <target state="translated">내부 값이 같으면 두 개의 &lt;code&gt;Arc&lt;/code&gt; 가 같습니다.</target>
        </trans-unit>
        <trans-unit id="3b0340dc9882895d2ed9f18ec41d4ee9ceaf4e0c" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Arc&lt;/code&gt;s are unequal if their inner values are unequal.</source>
          <target state="translated">내부 값이 같지 않으면 두 개의 &lt;code&gt;Arc&lt;/code&gt; 가 동일하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="77c963714f423503919254b2ffd83b6fa90a298e" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Rc&lt;/code&gt;s are equal if their inner values are equal, even if they are stored in different allocation.</source>
          <target state="translated">두 &lt;code&gt;Rc&lt;/code&gt; 는 서로 다른 할당에 저장되어 있더라도 내부 값이 같으면 동일합니다.</target>
        </trans-unit>
        <trans-unit id="d6a2d18514777aaae37a7ce067b908310bbd6b4b" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Rc&lt;/code&gt;s are equal if their inner values are equal.</source>
          <target state="translated">내부 값이 같으면 두 개의 &lt;code&gt;Rc&lt;/code&gt; 가 같습니다.</target>
        </trans-unit>
        <trans-unit id="2fa5c112e4e91cdb91570c34d930cf27ff1cdefa" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Rc&lt;/code&gt;s are unequal if their inner values are unequal.</source>
          <target state="translated">내부 값이 같지 않으면 두 개의 &lt;code&gt;Rc&lt;/code&gt; 가 동일하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2b4b2f527e82e5d4b1ed0e9743d509787616d686" translate="yes" xml:space="preserve">
          <source>Two associated items (like methods, associated types, associated functions, etc.) were defined with the same identifier.</source>
          <target state="translated">두 개의 관련 항목 (메서드, 관련 유형, 관련 함수 등)이 동일한 식별자로 정의되었습니다.</target>
        </trans-unit>
        <trans-unit id="f479794ce7a491842f3bc3c9a27aca16db4ad3d3" translate="yes" xml:space="preserve">
          <source>Two empty sequences are lexicographically equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026acb3ca4aa61acf271a2918c10ebc97e741248" translate="yes" xml:space="preserve">
          <source>Two examples of simple paths consisting of only identifier segments:</source>
          <target state="translated">식별자 세그먼트로만 구성된 간단한 경로의 두 가지 예 :</target>
        </trans-unit>
        <trans-unit id="0cd83d672a615733082e8ee7f56c39b0af561a3e" translate="yes" xml:space="preserve">
          <source>Two items of the same name cannot be imported without rebinding one of the items under a new local name.</source>
          <target state="translated">같은 이름의 두 항목은 새 로컬 이름으로 항목 중 하나를 리 바인드하지 않으면 가져올 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="cbb02c3e2b1b62256b2dccb2ec1aec1fddd7391c" translate="yes" xml:space="preserve">
          <source>Two kind of item &lt;em&gt;declarations&lt;/em&gt; are allowed in external blocks: &lt;a href=&quot;functions&quot;&gt;functions&lt;/a&gt; and &lt;a href=&quot;static-items&quot;&gt;statics&lt;/a&gt;. Calling functions or accessing statics that are declared in external blocks is only allowed in an &lt;code&gt;unsafe&lt;/code&gt; context.</source>
          <target state="translated">두 종류의 항목 &lt;em&gt;선언&lt;/em&gt; 이 외부 블록에서 허용됩니다 : &lt;a href=&quot;functions&quot;&gt;함수&lt;/a&gt; 및 &lt;a href=&quot;static-items&quot;&gt;정적&lt;/a&gt; . 외부 블록에서 선언 된 함수를 호출하거나 정적에 액세스하는 것은 &lt;code&gt;unsafe&lt;/code&gt; 컨텍스트 에서만 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="f6d0f0b6138243f294ae08264cc55ed1bd1ca167" translate="yes" xml:space="preserve">
          <source>Two lifetimes cannot have the same name. To fix this example, change the second &lt;code&gt;'a&lt;/code&gt; lifetime into something else (&lt;code&gt;'c&lt;/code&gt; for example):</source>
          <target state="translated">두 개의 수명은 같은 이름을 가질 수 없습니다. 이 예제를 수정하려면 두 번째 &lt;code&gt;'a&lt;/code&gt; 수명을 다른 것으로 변경하십시오 ( 예 : &lt;code&gt;'c&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="30c944c513e67b8c4ff5047db8e7ab8f3c379bad" translate="yes" xml:space="preserve">
          <source>Two or more pointers access the same data at the same time.</source>
          <target state="translated">둘 이상의 포인터가 동시에 동일한 데이터에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="ea818e0ad4fe2dcf3d6dd4c02bacf808745d38d6" translate="yes" xml:space="preserve">
          <source>Two possibilities are available to solve this issue:</source>
          <target state="translated">이 문제를 해결하기 위해 두 가지 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="00651d0b6fd0e23f3452ef97aaddc1cda2303a0d" translate="yes" xml:space="preserve">
          <source>Two sequences are compared element by element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e61db6f0549ccd99ae56429864c2f4cbe98bb50" translate="yes" xml:space="preserve">
          <source>Two such examples are macros and &lt;code&gt;#[cfg]&lt;/code&gt; environments.</source>
          <target state="translated">이러한 두 가지 예는 매크로 및 &lt;code&gt;#[cfg]&lt;/code&gt; 환경입니다.</target>
        </trans-unit>
        <trans-unit id="9d8a406e3a91b6f18f7fee9fffccd411cd7bea0e" translate="yes" xml:space="preserve">
          <source>Two tests that pass! Now let&amp;rsquo;s see what happens to our test results when we introduce a bug in our code. Let&amp;rsquo;s change the implementation of the &lt;code&gt;can_hold&lt;/code&gt; method by replacing the greater than sign with a less than sign when it compares the widths:</source>
          <target state="translated">통과하는 두 가지 테스트! 이제 코드에 버그를 도입 할 때 테스트 결과가 어떻게되는지 봅시다. 너비를 비교할 때보 다 큼 기호를보다 작음 기호로 바꾸어 &lt;code&gt;can_hold&lt;/code&gt; 메소드 의 구현을 변경해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="6831c93d3c0041ecff78583892f51cefdc18f74a" translate="yes" xml:space="preserve">
          <source>Two things are important to note about this function:</source>
          <target state="translated">이 기능에 대해 두 가지 중요한 점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d73651bf2df8af467f41b29a872952ef24a40245" translate="yes" xml:space="preserve">
          <source>Two trait implementations overlap when there is a non-empty intersection of the traits the implementation is for, the implementations can be instantiated with the same type.</source>
          <target state="translated">구현에 대한 특성이 비어 있지 않은 교차가있는 경우 두 가지 특성 구현이 겹치므로 동일한 유형으로 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45049ec7ea97abec9bd8269a665797ccca478bf9" translate="yes" xml:space="preserve">
          <source>Two trait object types alias each other if the base traits alias each other and if the sets of auto traits are the same and the lifetime bounds are the same. For example, &lt;code&gt;dyn Trait + Send + UnwindSafe&lt;/code&gt; is the same as &lt;code&gt;dyn Trait + UnwindSafe + Send&lt;/code&gt;.</source>
          <target state="translated">기본 특성이 서로 별칭을 지정하고 자동 특성 집합이 동일하고 수명 경계가 동일한 경우 두 특성 개체 유형이 서로 별칭을 지정합니다. 예를 들어, &lt;code&gt;dyn Trait + Send + UnwindSafe&lt;/code&gt; 는 &lt;code&gt;dyn Trait + UnwindSafe + Send&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="7b6094fd54b67e7d276ce315b3b79ffc2dd18ae2" translate="yes" xml:space="preserve">
          <source>Two trait object types alias each other if the base traits alias each other and if the sets of auto traits are the same and the lifetime bounds are the same. For example, &lt;code&gt;dyn Trait + Send + UnwindSafe&lt;/code&gt; is the same as &lt;code&gt;dyn Trait + Unwindsafe + Send&lt;/code&gt;.</source>
          <target state="translated">기본 특성이 서로 별명을 설정하고 자동 특성 세트가 동일하고 수명 한계가 동일한 경우 두 특성 오브젝트 유형이 서로 별명을 지정합니다. 예를 들어, &lt;code&gt;dyn Trait + Send + UnwindSafe&lt;/code&gt; 는 &lt;code&gt;dyn Trait + Unwindsafe + Send&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="0d078a0dedfa986439265f5fefabc817ba279445" translate="yes" xml:space="preserve">
          <source>Two traits, &lt;a href=&quot;../std/marker/trait.unsize&quot;&gt;&lt;code&gt;Unsize&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../std/ops/trait.coerceunsized&quot;&gt;&lt;code&gt;CoerceUnsized&lt;/code&gt;&lt;/a&gt;, are used to assist in this process and expose it for library use. The following coercions are built-ins and, if &lt;code&gt;T&lt;/code&gt; can be coerced to &lt;code&gt;U&lt;/code&gt; with one of them, then an implementation of &lt;code&gt;Unsize&amp;lt;U&amp;gt;&lt;/code&gt; for &lt;code&gt;T&lt;/code&gt; will be provided:</source>
          <target state="translated">&lt;a href=&quot;../std/marker/trait.unsize&quot;&gt; &lt;code&gt;Unsize&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../std/ops/trait.coerceunsized&quot;&gt; &lt;code&gt;CoerceUnsized&lt;/code&gt; 의&lt;/a&gt; 두 가지 특성 이이 프로세스를 지원하고 라이브러리 사용을 위해 노출하는 데 사용됩니다. 경우 다음과 강제 변환은 기능을 내장하고 있습니다 &lt;code&gt;T&lt;/code&gt; 는 강제 변환 할 수있다 &lt;code&gt;U&lt;/code&gt; 그들 중 하나의 다음 구현 &lt;code&gt;Unsize&amp;lt;U&amp;gt;&lt;/code&gt; 에 대한 &lt;code&gt;T&lt;/code&gt; 가 제공 될 것입니다 :</target>
        </trans-unit>
        <trans-unit id="0c40881391e5533daaab739e69ccda2bb7bda270" translate="yes" xml:space="preserve">
          <source>TyCtor(&lt;code&gt;T&lt;/code&gt;) to TyCtor(&lt;code&gt;U&lt;/code&gt;), where TyCtor(&lt;code&gt;T&lt;/code&gt;) is one of</source>
          <target state="translated">TyCtor ( &lt;code&gt;T&lt;/code&gt; ) ~ TyCtor ( &lt;code&gt;U&lt;/code&gt; )에서 TyCtor ( &lt;code&gt;T&lt;/code&gt; )는</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="8893ac4ddfe0ea4688a44afc0ddfe4ebc76a84ef" translate="yes" xml:space="preserve">
          <source>Type &lt;a href=&quot;enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt; represents an optional value: every &lt;a href=&quot;enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt; is either &lt;a href=&quot;enum.option#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt; and contains a value, or &lt;a href=&quot;enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, and does not. &lt;a href=&quot;enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt; types are very common in Rust code, as they have a number of uses:</source>
          <target state="translated">Type &lt;a href=&quot;enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; 은 선택적 값을 나타냅니다. 모든 &lt;a href=&quot;enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;enum.option#variant.Some&quot;&gt; &lt;code&gt;Some&lt;/code&gt; &lt;/a&gt; 이며 값을 포함하거나 &lt;a href=&quot;enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; 이며 그렇지 않습니다. &lt;a href=&quot;enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; 유형은 여러 가지 용도로 Rust 코드에서 매우 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="5a34cc9264aacb6462265b18d25bcf726faf398f" translate="yes" xml:space="preserve">
          <source>Type Definition std::fmt::Result</source>
          <target state="translated">유형 정의 std :: fmt :: Result</target>
        </trans-unit>
        <trans-unit id="34dd3e846f6d75301a90ce0c190a60bbb2f75015" translate="yes" xml:space="preserve">
          <source>Type Definition std::io::Result</source>
          <target state="translated">유형 정의 std :: io :: Result</target>
        </trans-unit>
        <trans-unit id="46f6920a49ecfbe5727cafe69a86a93c6dc323b4" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::linux::raw::blkcnt_t</source>
          <target state="translated">타입 정의 std :: os :: linux :: raw :: blkcnt_t</target>
        </trans-unit>
        <trans-unit id="85fbcc37c53b78d2794e588bd5f55d25d53b121b" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::linux::raw::blksize_t</source>
          <target state="translated">타입 정의 std :: os :: linux :: raw :: blksize_t</target>
        </trans-unit>
        <trans-unit id="e2606fd8324f1985d42d98f82ef97532070eae3e" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::linux::raw::dev_t</source>
          <target state="translated">타입 정의 std :: os :: linux :: raw :: dev_t</target>
        </trans-unit>
        <trans-unit id="1a0725c0d449cfcc82b033154c822ab6aa94cb70" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::linux::raw::ino_t</source>
          <target state="translated">타입 정의 std :: os :: linux :: raw :: ino_t</target>
        </trans-unit>
        <trans-unit id="96a7fc18b0419da7fc9a515e767bed1bfbc9562c" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::linux::raw::mode_t</source>
          <target state="translated">타입 정의 std :: os :: linux :: raw :: mode_t</target>
        </trans-unit>
        <trans-unit id="75a060e0f5140a7dabbcb1ba8000909c3c0378d8" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::linux::raw::nlink_t</source>
          <target state="translated">타입 정의 std :: os :: linux :: raw :: nlink_t</target>
        </trans-unit>
        <trans-unit id="7ae7bb16976469a8ad4e67f2c0d76a2afe6847e7" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::linux::raw::off_t</source>
          <target state="translated">타입 정의 std :: os :: linux :: raw :: off_t</target>
        </trans-unit>
        <trans-unit id="76556b9aa9b1d76aecac20fd90dee8158aed1fa4" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::linux::raw::pthread_t</source>
          <target state="translated">타입 정의 std :: os :: linux :: raw :: pthread_t</target>
        </trans-unit>
        <trans-unit id="c8140af217e68caacdab8d2aaef2318b6e02ba66" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::linux::raw::time_t</source>
          <target state="translated">타입 정의 std :: os :: linux :: raw :: time_t</target>
        </trans-unit>
        <trans-unit id="d80e70a5e9f44648db2fa12eba538e96a084706b" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::raw::c_char</source>
          <target state="translated">타입 정의 std :: os :: raw :: c_char</target>
        </trans-unit>
        <trans-unit id="47268ec268f5e51266c8c9b25e903a966387595d" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::raw::c_double</source>
          <target state="translated">타입 정의 std :: os :: raw :: c_double</target>
        </trans-unit>
        <trans-unit id="167acfa92657a06bc69cb3f91777f380110e4dc9" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::raw::c_float</source>
          <target state="translated">타입 정의 std :: os :: raw :: c_float</target>
        </trans-unit>
        <trans-unit id="c27fd9199e90c2472f965bdc0cca23d6c8c570f4" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::raw::c_int</source>
          <target state="translated">타입 정의 std :: os :: raw :: c_int</target>
        </trans-unit>
        <trans-unit id="19f693eccac3c497abf741d0f8baed1d19e53f4b" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::raw::c_long</source>
          <target state="translated">타입 정의 std :: os :: raw :: c_long</target>
        </trans-unit>
        <trans-unit id="8600d6f2d9a4b023e7037b70faa22dc15e66388f" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::raw::c_longlong</source>
          <target state="translated">타입 정의 std :: os :: raw :: c_longlong</target>
        </trans-unit>
        <trans-unit id="38fbb377e146c43dbf57e7ef0b9149de46dd63ee" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::raw::c_schar</source>
          <target state="translated">타입 정의 std :: os :: raw :: c_schar</target>
        </trans-unit>
        <trans-unit id="24f91247eef9f189a56e0d26eb63e94174545d18" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::raw::c_short</source>
          <target state="translated">타입 정의 std :: os :: raw :: c_short</target>
        </trans-unit>
        <trans-unit id="8fd264b0559dbbedb815b835dcd8dc23c60e3e46" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::raw::c_uchar</source>
          <target state="translated">타입 정의 std :: os :: raw :: c_uchar</target>
        </trans-unit>
        <trans-unit id="73ae8275dba1734adb8dd3eb79d165dfd8926f8e" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::raw::c_uint</source>
          <target state="translated">타입 정의 std :: os :: raw :: c_uint</target>
        </trans-unit>
        <trans-unit id="963d890a0fa816ac69f7b2a91122d42f47482af6" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::raw::c_ulong</source>
          <target state="translated">타입 정의 std :: os :: raw :: c_ulong</target>
        </trans-unit>
        <trans-unit id="9529b81e31c700d29c794b44439c31236befee6e" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::raw::c_ulonglong</source>
          <target state="translated">타입 정의 std :: os :: raw :: c_ulonglong</target>
        </trans-unit>
        <trans-unit id="2add572706fcd5310850bb5c41c263a68becd701" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::raw::c_ushort</source>
          <target state="translated">타입 정의 std :: os :: raw :: c_ushort</target>
        </trans-unit>
        <trans-unit id="af576d5699684e5ccc6dd3bdda06f283b79646ba" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::unix::io::RawFd</source>
          <target state="translated">타입 정의 std :: os :: unix :: io :: RawFd</target>
        </trans-unit>
        <trans-unit id="54df1b972115ebdb7492ee1ec118ad059c5b96b9" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::unix::raw::blkcnt_t</source>
          <target state="translated">타입 정의 std :: os :: unix :: raw :: blkcnt_t</target>
        </trans-unit>
        <trans-unit id="24cf96c7673dcafd447d654adb8e4cf01b30bb6f" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::unix::raw::blksize_t</source>
          <target state="translated">타입 정의 std :: os :: unix :: raw :: blksize_t</target>
        </trans-unit>
        <trans-unit id="27da02afd4df0cefb0f36b07dc40fb05a497c94e" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::unix::raw::dev_t</source>
          <target state="translated">타입 정의 std :: os :: unix :: raw :: dev_t</target>
        </trans-unit>
        <trans-unit id="73d1317f78cb687f50d63c8e6d4ee01bdba096f4" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::unix::raw::gid_t</source>
          <target state="translated">타입 정의 std :: os :: unix :: raw :: gid_t</target>
        </trans-unit>
        <trans-unit id="f1c61da35b3b5a8948934b0c33b08607e17ab49a" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::unix::raw::ino_t</source>
          <target state="translated">타입 정의 std :: os :: unix :: raw :: ino_t</target>
        </trans-unit>
        <trans-unit id="f57f89ce06fb76c13960558bcf6af72b48025b0a" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::unix::raw::mode_t</source>
          <target state="translated">타입 정의 std :: os :: unix :: raw :: mode_t</target>
        </trans-unit>
        <trans-unit id="6efe4bc154c56731d72a72033b5e96f1e8e776fa" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::unix::raw::nlink_t</source>
          <target state="translated">타입 정의 std :: os :: unix :: raw :: nlink_t</target>
        </trans-unit>
        <trans-unit id="16d41f66ea53de25694ff8008809453896212992" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::unix::raw::off_t</source>
          <target state="translated">타입 정의 std :: os :: unix :: raw :: off_t</target>
        </trans-unit>
        <trans-unit id="7fcd1c7c7d47846aeea79e3b67b951552799ecac" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::unix::raw::pid_t</source>
          <target state="translated">타입 정의 std :: os :: unix :: raw :: pid_t</target>
        </trans-unit>
        <trans-unit id="15394730cd6adf60683b03d0f547388ed732a617" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::unix::raw::pthread_t</source>
          <target state="translated">타입 정의 std :: os :: unix :: raw :: pthread_t</target>
        </trans-unit>
        <trans-unit id="f5866aac0842b4a721a91364de015f0e36fbc706" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::unix::raw::time_t</source>
          <target state="translated">타입 정의 std :: os :: unix :: raw :: time_t</target>
        </trans-unit>
        <trans-unit id="c10ba42310b44320213f70095552a73e406c10bc" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::unix::raw::uid_t</source>
          <target state="translated">타입 정의 std :: os :: unix :: raw :: uid_t</target>
        </trans-unit>
        <trans-unit id="ccfd242450d8d8e764c541c183e48c95060db965" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::unix::thread::RawPthread</source>
          <target state="translated">타입 정의 std :: os :: unix :: thread :: RawPthread</target>
        </trans-unit>
        <trans-unit id="43663035c10bc49312c1bd0f80dfefc8e89294c1" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::windows::io::RawHandle</source>
          <target state="translated">유형 정의 std :: os :: windows :: io :: RawHandle</target>
        </trans-unit>
        <trans-unit id="3c2575150d67f1e23972163c0fc5f2c5d673b3e4" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::windows::io::RawSocket</source>
          <target state="translated">유형 정의 std :: os :: windows :: io :: RawSocket</target>
        </trans-unit>
        <trans-unit id="05dc66459d6d8527de01519647dff10489bc279b" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::windows::raw::HANDLE</source>
          <target state="translated">유형 정의 std :: os :: windows :: raw :: HANDLE</target>
        </trans-unit>
        <trans-unit id="e2a21128c36897e8cf2791477ca7f265a71b8679" translate="yes" xml:space="preserve">
          <source>Type Definition std::os::windows::raw::SOCKET</source>
          <target state="translated">유형 정의 std :: os :: windows :: raw :: SOCKET</target>
        </trans-unit>
        <trans-unit id="f0f25e562f1eacf92009b3b9edd31757a9d568ee" translate="yes" xml:space="preserve">
          <source>Type Definition std::string::ParseError</source>
          <target state="translated">유형 정의 std :: string :: ParseError</target>
        </trans-unit>
        <trans-unit id="2cb5d5fbdf79715e3b849f3194ff3e1783dcc241" translate="yes" xml:space="preserve">
          <source>Type Definition std::sync::LockResult</source>
          <target state="translated">유형 정의 std :: sync :: LockResult</target>
        </trans-unit>
        <trans-unit id="a007682d472492c4b8b35e81f42caebf855855fb" translate="yes" xml:space="preserve">
          <source>Type Definition std::sync::TryLockResult</source>
          <target state="translated">유형 정의 std :: sync :: TryLockResult</target>
        </trans-unit>
        <trans-unit id="0fbaa33419fbed78ef077708914d095867001a9d" translate="yes" xml:space="preserve">
          <source>Type Definition std::thread::Result</source>
          <target state="translated">타입 정의 std :: thread :: Result</target>
        </trans-unit>
        <trans-unit id="3ba69662a63352acd45295d8a4cf929df3f97fd7" translate="yes" xml:space="preserve">
          <source>Type Definitions</source>
          <target state="translated">타입 정의</target>
        </trans-unit>
        <trans-unit id="9037feed073eee5a9272aeaba9be605266f5d249" translate="yes" xml:space="preserve">
          <source>Type Layout</source>
          <target state="translated">타입 레이아웃</target>
        </trans-unit>
        <trans-unit id="7433446286e8e2d16c8a5d667b180309a3d0c3b1" translate="yes" xml:space="preserve">
          <source>Type System</source>
          <target state="translated">타입 시스템</target>
        </trans-unit>
        <trans-unit id="58cf557846d7f65d34e8a92739eef2665164fad4" translate="yes" xml:space="preserve">
          <source>Type aliases</source>
          <target state="translated">타입 별칭</target>
        </trans-unit>
        <trans-unit id="46e484c635b0e4d4b2d73cd209e4672f43ad07bf" translate="yes" xml:space="preserve">
          <source>Type aliases are also commonly used with the &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; type for reducing repetition. Consider the &lt;code&gt;std::io&lt;/code&gt; module in the standard library. I/O operations often return a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; to handle situations when operations fail to work. This library has a &lt;code&gt;std::io::Error&lt;/code&gt; struct that represents all possible I/O errors. Many of the functions in &lt;code&gt;std::io&lt;/code&gt; will be returning &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; where the &lt;code&gt;E&lt;/code&gt; is &lt;code&gt;std::io::Error&lt;/code&gt;, such as these functions in the &lt;code&gt;Write&lt;/code&gt; trait:</source>
          <target state="translated">타입 별칭은 반복을 줄이기 위해 일반적으로 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 타입 과 함께 사용됩니다 . 표준 라이브러리 의 &lt;code&gt;std::io&lt;/code&gt; 모듈을 고려하십시오 . I / O 작업은 종종 작업이 실패하는 상황을 처리하기 위해 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; 를 반환합니다 . 이 라이브러리에는 가능한 모든 I / O 오류를 나타내는 &lt;code&gt;std::io::Error&lt;/code&gt; 구조체가 있습니다. 의 기능의 많은 &lt;code&gt;std::io&lt;/code&gt; 반환됩니다 &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; &lt;code&gt;E&lt;/code&gt; 가 있다 &lt;code&gt;std::io::Error&lt;/code&gt; 같은 이러한 기능으로, &lt;code&gt;Write&lt;/code&gt; 특성을 :</target>
        </trans-unit>
        <trans-unit id="6d5463932cf5afab710bceb8f1d7684735a25ccf" translate="yes" xml:space="preserve">
          <source>Type and Lifetime Parameters</source>
          <target state="translated">유형 및 수명 매개 변수</target>
        </trans-unit>
        <trans-unit id="46505cd1622c8bbcf00ce8fef2ff0cd36549954e" translate="yes" xml:space="preserve">
          <source>Type bounds may be &lt;em&gt;higher ranked&lt;/em&gt; over lifetimes. These bounds specify a bound is true &lt;em&gt;for all&lt;/em&gt; lifetimes. For example, a bound such as &lt;code&gt;for&amp;lt;'a&amp;gt; &amp;amp;'a T: PartialEq&amp;lt;i32&amp;gt;&lt;/code&gt; would require an implementation like</source>
          <target state="translated">유형 범위는 평생 동안 &lt;em&gt;높은 순위&lt;/em&gt; 를 가질 수 있습니다 . 이 범위는 &lt;em&gt;모든&lt;/em&gt; 수명에 &lt;em&gt;대해&lt;/em&gt; 범위가 참임을 지정합니다 . 예를 들어 &lt;code&gt;for&amp;lt;'a&amp;gt; &amp;amp;'a T: PartialEq&amp;lt;i32&amp;gt;&lt;/code&gt; 와 같은 경계는 다음과 같은 구현이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ee004d162350a5b317e1dbaab9ce920a6f34a9cb" translate="yes" xml:space="preserve">
          <source>Type cast expressions</source>
          <target state="translated">타입 캐스트 표현식</target>
        </trans-unit>
        <trans-unit id="7b7e747774abb621d3a39f39c2761d3405b325bb" translate="yes" xml:space="preserve">
          <source>Type coercions</source>
          <target state="translated">유형 강제</target>
        </trans-unit>
        <trans-unit id="b6d852132e2d9e31234c0b7e2d2b2f126e521734" translate="yes" xml:space="preserve">
          <source>Type expressions</source>
          <target state="translated">타입 표현식</target>
        </trans-unit>
        <trans-unit id="00e950510855acd161003d11973afbcccbd1f3d1" translate="yes" xml:space="preserve">
          <source>Type inference typically proceeds from the top of the function to the bottom, figuring out types as it goes. In some cases -- notably method calls and overloadable operators like &lt;code&gt;*&lt;/code&gt; -- the type checker may not have enough information &lt;em&gt;yet&lt;/em&gt; to make progress. This can be true even if the rest of the function provides enough context (because the type-checker hasn't looked that far ahead yet). In this case, type annotations can be used to help it along.</source>
          <target state="translated">유형 유추는 일반적으로 함수의 상단에서 하단으로 진행하여 유형이 진행되는 시점을 파악합니다. 경우에 따라 (특히 메서드 호출 및 &lt;code&gt;*&lt;/code&gt; 와 같은 오버로드 가능한 연산자) 형식 검사기는 &lt;em&gt;아직&lt;/em&gt; 진행할 정보가 충분하지 않을 수 있습니다 . 나머지 함수가 충분한 컨텍스트를 제공하더라도 (타입 검사기가 아직 그렇게 앞을 보지 않았기 때문에) 이것은 사실 일 수 있습니다. 이 경우 유형 주석을 사용하여 도움을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c11526a8c75cf7eda7350bd42de65837b525d024" translate="yes" xml:space="preserve">
          <source>Type information must be provided if a pointer type being cast from/into another type which cannot be inferred:</source>
          <target state="translated">추론 할 수없는 다른 유형으로 캐스트되는 포인터 유형 인 경우 유형 정보를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="a230d1816e8c1575c2c45ae6cf6a3850545e094f" translate="yes" xml:space="preserve">
          <source>Type layout can be changed with each compilation. Instead of trying to document exactly what is done, we only document what is guaranteed today.</source>
          <target state="translated">컴파일 할 때마다 유형 레이아웃을 변경할 수 있습니다. 수행 된 작업을 정확하게 문서화하는 대신 오늘날 보장되는 작업 만 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="421e94d5ad1cf070315124ce8a70fe7342de0094" translate="yes" xml:space="preserve">
          <source>Type of &lt;code&gt;e&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; 종류</target>
        </trans-unit>
        <trans-unit id="483996222a68497be8a52e043163c1b07da634c0" translate="yes" xml:space="preserve">
          <source>Type of the hasher that will be created.</source>
          <target state="translated">생성 될 Hasher의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="90d41d3e02c3a5714dfb49c0b53d465ea95595cd" translate="yes" xml:space="preserve">
          <source>Type parameter defaults can only use parameters that occur before them. Erroneous code example:</source>
          <target state="translated">유형 매개 변수 기본값은 이전에 발생하는 매개 변수 만 사용할 수 있습니다. 잘못된 코드 예 :</target>
        </trans-unit>
        <trans-unit id="610a43f90945887f546fa9894dbf887213eca6c4" translate="yes" xml:space="preserve">
          <source>Type parameter defaults can only use parameters that occur before them. Since type parameters are evaluated in-order, this issue could be fixed by doing:</source>
          <target state="translated">유형 매개 변수 기본값은 이전에 발생하는 매개 변수 만 사용할 수 있습니다. 유형 매개 변수는 순서대로 평가되므로 다음을 수행하여이 문제를 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dac2f87deb7b8641c81a7d19aab25baf97b67f2a" translate="yes" xml:space="preserve">
          <source>Type parameter defaults cannot use &lt;code&gt;Self&lt;/code&gt; on structs, enums, or unions.</source>
          <target state="translated">유형 매개 변수 기본값은 구조체, 열거 형 또는 공용체에서 &lt;code&gt;Self&lt;/code&gt; 를 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="c9a3646a7ac556f56d25e93e18f2d2b1583d0264" translate="yes" xml:space="preserve">
          <source>Type parameters</source>
          <target state="translated">유형 매개 변수</target>
        </trans-unit>
        <trans-unit id="4a3ece058bb3ba65db202bc18df133e4b49391e3" translate="yes" xml:space="preserve">
          <source>Type parameters can be specified for a trait to make it generic. These appear after the trait name, using the same syntax used in &lt;a href=&quot;functions#generic-functions&quot;&gt;generic functions&lt;/a&gt;.</source>
          <target state="translated">특성에 대해 유형 매개 변수를 지정하여 일반 특성으로 만들 수 있습니다. 이것들은 &lt;a href=&quot;functions#generic-functions&quot;&gt;일반 함수에&lt;/a&gt; 사용 된 것과 동일한 구문을 사용하여 특성 이름 뒤에 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="8de0a3ce745cf3e1cf2895f8f92a4c1b4a8865b7" translate="yes" xml:space="preserve">
          <source>Type parameters for &lt;code&gt;impl Trait&lt;/code&gt; types must be explicitly defined as named generic parameters:</source>
          <target state="translated">&lt;code&gt;impl Trait&lt;/code&gt; 유형에 대한 유형 매개 변수는 명명 된 일반 매개 변수로 명시 적으로 정의되어야합니다.</target>
        </trans-unit>
        <trans-unit id="788f8ff13becde924812f48a846332da2dde1b3b" translate="yes" xml:space="preserve">
          <source>Type parameters in an associated item also cannot shadow parameters from the containing item:</source>
          <target state="translated">연관된 항목의 유형 매개 변수도 포함하는 항목의 매개 변수를 섀도 잉 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d2b6a64cfc2d2019725a350386f952f6ea964501" translate="yes" xml:space="preserve">
          <source>Type parameters in type definitions have lifetimes associated with them that represent how long the data stored within them is guaranteed to live. This lifetime must be as long as the data needs to be alive, and missing the constraint that denotes this will cause this error.</source>
          <target state="translated">유형 정의의 유형 매개 변수에는 그 안에 저장된 데이터의 수명을 나타내는 수명이 연결되어 있습니다. 이 수명은 데이터가 살아 있어야하는만큼 길어야하며이를 나타내는 제약 조건이 없으면이 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="635a70628fcb4cdf2545b82d9a213017cf1ec1dc" translate="yes" xml:space="preserve">
          <source>Type parameters where the parameters only have any &lt;a href=&quot;../trait-bounds&quot;&gt;trait bounds&lt;/a&gt; of the following kind:</source>
          <target state="translated">매개 변수에 다음과 같은 종류의 &lt;a href=&quot;../trait-bounds&quot;&gt;특성 범위&lt;/a&gt; 만있는 매개 변수를 입력 하십시오.</target>
        </trans-unit>
        <trans-unit id="f5436dd7df5cce78281ac167ac45b8ad046b6808" translate="yes" xml:space="preserve">
          <source>Type paths are used within type definitions, trait bounds, type parameter bounds, and qualified paths.</source>
          <target state="translated">유형 경로는 유형 정의, 특성 범위, 유형 매개 변수 범위 및 규정 된 경로 내에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0fc5390ca69aecade222ecf85ac47ee15fecaa1e" translate="yes" xml:space="preserve">
          <source>Type system</source>
          <target state="translated">타입 시스템</target>
        </trans-unit>
        <trans-unit id="40294f1b1dbbecd786588c1ac7a98f52d1946633" translate="yes" xml:space="preserve">
          <source>Type system attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b05abe4f4f396debd3f7c7c7a457e652381139" translate="yes" xml:space="preserve">
          <source>TypeId</source>
          <target state="translated">TypeId</target>
        </trans-unit>
        <trans-unit id="6174852658dcb07e66221cdda0d47c6a79955026" translate="yes" xml:space="preserve">
          <source>TypeId::borrow</source>
          <target state="translated">TypeId::borrow</target>
        </trans-unit>
        <trans-unit id="9240a6191da03dd3e162b4d594573c014ae637e8" translate="yes" xml:space="preserve">
          <source>TypeId::borrow_mut</source>
          <target state="translated">TypeId::borrow_mut</target>
        </trans-unit>
        <trans-unit id="1e830f38943c98994765e5634b28fc734e6d131b" translate="yes" xml:space="preserve">
          <source>TypeId::clamp</source>
          <target state="translated">TypeId::clamp</target>
        </trans-unit>
        <trans-unit id="716fa011ef15618f6c39d058d78de9fd5d26d8a4" translate="yes" xml:space="preserve">
          <source>TypeId::clone</source>
          <target state="translated">TypeId::clone</target>
        </trans-unit>
        <trans-unit id="d206fca55570d1ee7222250a6099efa3eefe5378" translate="yes" xml:space="preserve">
          <source>TypeId::clone_from</source>
          <target state="translated">TypeId::clone_from</target>
        </trans-unit>
        <trans-unit id="795523e4b3053e8ae487bb7ffbfed98163be00e1" translate="yes" xml:space="preserve">
          <source>TypeId::clone_into</source>
          <target state="translated">TypeId::clone_into</target>
        </trans-unit>
        <trans-unit id="ddba09636ddf2c450efd47bdbd5c1086798641ce" translate="yes" xml:space="preserve">
          <source>TypeId::cmp</source>
          <target state="translated">TypeId::cmp</target>
        </trans-unit>
        <trans-unit id="3f0565a2054d47ca089c9dd28d09f714cfe255a6" translate="yes" xml:space="preserve">
          <source>TypeId::eq</source>
          <target state="translated">TypeId::eq</target>
        </trans-unit>
        <trans-unit id="3b66ed765f5e07da8b6a35c0796de577d880004a" translate="yes" xml:space="preserve">
          <source>TypeId::fmt</source>
          <target state="translated">TypeId::fmt</target>
        </trans-unit>
        <trans-unit id="a6d534f62ff1c6a2b12bb6ea7101f9db8f3b6a65" translate="yes" xml:space="preserve">
          <source>TypeId::from</source>
          <target state="translated">TypeId::from</target>
        </trans-unit>
        <trans-unit id="0ad8421f49348cec9c5c0ea27504bddf46f46746" translate="yes" xml:space="preserve">
          <source>TypeId::ge</source>
          <target state="translated">TypeId::ge</target>
        </trans-unit>
        <trans-unit id="98d12bbe982cc4e9feaef864de49f327eade548c" translate="yes" xml:space="preserve">
          <source>TypeId::gt</source>
          <target state="translated">TypeId::gt</target>
        </trans-unit>
        <trans-unit id="e1dea7697f9d16fe9585b0146b54ef1ba2595a7c" translate="yes" xml:space="preserve">
          <source>TypeId::hash</source>
          <target state="translated">TypeId::hash</target>
        </trans-unit>
        <trans-unit id="d7a9744fc39a0fe544964e9b703ad9db8ff88413" translate="yes" xml:space="preserve">
          <source>TypeId::hash_slice</source>
          <target state="translated">TypeId::hash_slice</target>
        </trans-unit>
        <trans-unit id="8f7e7f7b59fc95161e5efd4c331382bf506c5fe2" translate="yes" xml:space="preserve">
          <source>TypeId::into</source>
          <target state="translated">TypeId::into</target>
        </trans-unit>
        <trans-unit id="02f386a913763d6012a9e28821eacb6458ea8546" translate="yes" xml:space="preserve">
          <source>TypeId::le</source>
          <target state="translated">TypeId::le</target>
        </trans-unit>
        <trans-unit id="578f87bf8b84d3b8635f212a617fcec0f23b5476" translate="yes" xml:space="preserve">
          <source>TypeId::lt</source>
          <target state="translated">TypeId::lt</target>
        </trans-unit>
        <trans-unit id="6c7811e3962847e55153d132edc379a97aeab156" translate="yes" xml:space="preserve">
          <source>TypeId::max</source>
          <target state="translated">TypeId::max</target>
        </trans-unit>
        <trans-unit id="5de1024eb47140ae18a0b9ef6b7abda00f5ebc42" translate="yes" xml:space="preserve">
          <source>TypeId::min</source>
          <target state="translated">TypeId::min</target>
        </trans-unit>
        <trans-unit id="19a1b2382c162a3deb2660f8d535151330c4dd68" translate="yes" xml:space="preserve">
          <source>TypeId::ne</source>
          <target state="translated">TypeId::ne</target>
        </trans-unit>
        <trans-unit id="57bbf815ae3734582141e6c3d94d16d795b42238" translate="yes" xml:space="preserve">
          <source>TypeId::of</source>
          <target state="translated">TypeId::of</target>
        </trans-unit>
        <trans-unit id="9387d6c30cfc43859bbce0cd6a9e882f482aa548" translate="yes" xml:space="preserve">
          <source>TypeId::partial_cmp</source>
          <target state="translated">TypeId::partial_cmp</target>
        </trans-unit>
        <trans-unit id="275a8a5c8970873ed0f6e5f7be025d1d88c24b17" translate="yes" xml:space="preserve">
          <source>TypeId::to_owned</source>
          <target state="translated">TypeId::to_owned</target>
        </trans-unit>
        <trans-unit id="b305d0eb27c70d75d6581a7bb24fd3b0cabb8713" translate="yes" xml:space="preserve">
          <source>TypeId::try_from</source>
          <target state="translated">TypeId::try_from</target>
        </trans-unit>
        <trans-unit id="ab6bd512f140c02836e01449097676127e0b1727" translate="yes" xml:space="preserve">
          <source>TypeId::try_into</source>
          <target state="translated">TypeId::try_into</target>
        </trans-unit>
        <trans-unit id="b7aa84284f56989bd040008a9a1842dc034ac075" translate="yes" xml:space="preserve">
          <source>TypeId::type_id</source>
          <target state="translated">TypeId::type_id</target>
        </trans-unit>
        <trans-unit id="ca804ab74bf9fa2667ceb8c95926b696eb69be50" translate="yes" xml:space="preserve">
          <source>Typedefs</source>
          <target state="translated">Typedefs</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="51920e55843cc4f1f030d29bb9494f870acf0911" translate="yes" xml:space="preserve">
          <source>Types and Traits for working with asynchronous tasks.</source>
          <target state="translated">비동기 작업을 수행하기위한 유형 및 특성.</target>
        </trans-unit>
        <trans-unit id="eb96b9196c6d15505da132a08c116566f7a5d2bc" translate="yes" xml:space="preserve">
          <source>Types express that they can be borrowed as some type &lt;code&gt;T&lt;/code&gt; by implementing &lt;code&gt;Borrow&amp;lt;T&amp;gt;&lt;/code&gt;, providing a reference to a &lt;code&gt;T&lt;/code&gt; in the trait&amp;rsquo;s &lt;a href=&quot;#tymethod.borrow&quot;&gt;&lt;code&gt;borrow&lt;/code&gt;&lt;/a&gt; method. A type is free to borrow as several different types. If it wishes to mutably borrow as the type &amp;ndash; allowing the underlying data to be modified, it can additionally implement &lt;a href=&quot;trait.borrowmut&quot;&gt;&lt;code&gt;BorrowMut&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">유형 은 특성의 &lt;a href=&quot;#tymethod.borrow&quot;&gt; &lt;code&gt;borrow&lt;/code&gt; &lt;/a&gt; 방법 에서 &lt;code&gt;T&lt;/code&gt; 에 대한 참조를 제공하여 &lt;code&gt;Borrow&amp;lt;T&amp;gt;&lt;/code&gt; 를 구현 하여 일부 유형 &lt;code&gt;T&lt;/code&gt; 로 차용 할 수 있음 을 나타냅니다 . 유형은 여러 가지 유형으로 자유롭게 빌릴 수 있습니다. 기본 데이터를 수정할 수 있도록 유형으로 변경 가능하게 빌리 &lt;a href=&quot;trait.borrowmut&quot;&gt; &lt;code&gt;BorrowMut&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 추가로 구현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6aef87c840bd9c8d6b5be21927a32724dcebf8ad" translate="yes" xml:space="preserve">
          <source>Types express that they can be borrowed as some type &lt;code&gt;T&lt;/code&gt; by implementing &lt;code&gt;Borrow&amp;lt;T&amp;gt;&lt;/code&gt;, providing a reference to a &lt;code&gt;T&lt;/code&gt; in the trait&amp;rsquo;s &lt;a href=&quot;trait.borrow#tymethod.borrow&quot;&gt;&lt;code&gt;borrow&lt;/code&gt;&lt;/a&gt; method. A type is free to borrow as several different types. If it wishes to mutably borrow as the type &amp;ndash; allowing the underlying data to be modified, it can additionally implement &lt;a href=&quot;trait.borrowmut&quot;&gt;&lt;code&gt;BorrowMut&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">유형은 어떤 형식으로 차용 될 수 있음을 표현하는 &lt;code&gt;T&lt;/code&gt; 구현하여 &lt;code&gt;Borrow&amp;lt;T&amp;gt;&lt;/code&gt; 하는에 대한 참조를 제공하는 &lt;code&gt;T&lt;/code&gt; 형질의에서 &lt;a href=&quot;trait.borrow#tymethod.borrow&quot;&gt; &lt;code&gt;borrow&lt;/code&gt; &lt;/a&gt; 방법. 한 유형은 여러 유형으로 무료로 빌릴 수 있습니다. 유형으로 변경 가능하게 빌려서 기본 데이터를 수정할 수 있도록하려면 &lt;a href=&quot;trait.borrowmut&quot;&gt; &lt;code&gt;BorrowMut&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 추가로 구현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a53d10bc9765156a98cd22298d0dddb08f16d1f" translate="yes" xml:space="preserve">
          <source>Types for which it is safe to share references between threads.</source>
          <target state="translated">스레드간에 참조를 공유하는 것이 안전한 유형입니다.</target>
        </trans-unit>
        <trans-unit id="98c95794e6189dee1201d1bd443780e1c531d39b" translate="yes" xml:space="preserve">
          <source>Types implementing &lt;code&gt;Hash&lt;/code&gt; are able to be &lt;a href=&quot;#tymethod.hash&quot;&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/a&gt;ed with an instance of &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Hash&lt;/code&gt; 구현하는 유형 은 &lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt; 인스턴스 로 &lt;a href=&quot;#tymethod.hash&quot;&gt; &lt;code&gt;hash&lt;/code&gt; &lt;/a&gt; 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e63cf5842f436d926f1be87d5535f3c61b75dd54" translate="yes" xml:space="preserve">
          <source>Types implementing &lt;code&gt;Hash&lt;/code&gt; are able to be &lt;a href=&quot;trait.hash#tymethod.hash&quot;&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/a&gt;ed with an instance of &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Hash&lt;/code&gt; 를 구현하는 유형 은 &lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt; 인스턴스 로 &lt;a href=&quot;trait.hash#tymethod.hash&quot;&gt; &lt;code&gt;hash&lt;/code&gt; &lt;/a&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f882465e79764914f835cc19a5911f31e45f796b" translate="yes" xml:space="preserve">
          <source>Types in type definitions have lifetimes associated with them that represent how long the data stored within them is guaranteed to be live. This lifetime must be as long as the data needs to be alive, and missing the constraint that denotes this will cause this error.</source>
          <target state="translated">유형 정의의 유형에는 저장된 데이터의 유효 기간을 나타내는 수명이 있습니다. 이 수명은 데이터를 유지해야하는 기간이어야하며이를 나타내는 제한이 없으면이 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="777921b6f1b475c9ffaa77c98a5d17f39e3660e5" translate="yes" xml:space="preserve">
          <source>Types like &lt;code&gt;&amp;amp;Mutex&amp;lt;T&amp;gt;&lt;/code&gt;, however, are unwind safe because they implement poisoning by default. They still allow witnessing a broken invariant, but they already provide their own &quot;speed bumps&quot; to do so.</source>
          <target state="translated">그러나 &lt;code&gt;&amp;amp;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; 와 같은 유형 은 기본적으로 중독을 구현하기 때문에 안전합니다. 그들은 여전히 ​​불변을 깨뜨리는 것을 목격 할 수 있지만, 그렇게하기 위해 이미 &quot;스피드 범프&quot;를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b83d85bf5da8e86595350c0dcf9e419a4d654c49" translate="yes" xml:space="preserve">
          <source>Types like Vec therefore just &lt;code&gt;drop_in_place(&amp;amp;mut self[..])&lt;/code&gt; without using &lt;code&gt;needs_drop&lt;/code&gt; explicitly. Types like &lt;a href=&quot;../collections/struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt;, on the other hand, have to drop values one at a time and should use this API.</source>
          <target state="translated">따라서 Vec과 같은 유형은 &lt;code&gt;needs_drop&lt;/code&gt; 을 명시 적으로 사용하지 않고 &lt;code&gt;drop_in_place(&amp;amp;mut self[..])&lt;/code&gt; 뿐입니다 . 반면에 &lt;a href=&quot;../collections/struct.hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; 과 같은 유형은 한 번에 하나씩 값을 삭제해야하며이 API를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a8a83f5b2fb6977b69a3feef08ecd269c85a9244" translate="yes" xml:space="preserve">
          <source>Types like Vec therefore just &lt;code&gt;drop_in_place(&amp;amp;mut self[..])&lt;/code&gt; without using needs_drop explicitly. Types like &lt;code&gt;HashMap&lt;/code&gt;, on the other hand, have to drop values one at a time and should use this API.</source>
          <target state="translated">따라서 Vec과 같은 유형은 needs_drop을 명시 적으로 사용하지 않고 &lt;code&gt;drop_in_place(&amp;amp;mut self[..])&lt;/code&gt; 입니다. 반면에 &lt;code&gt;HashMap&lt;/code&gt; 과 같은 유형은 한 번에 하나씩 값을 삭제해야하며이 API를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7478d20240bfc3f122030bf28d31bd62139a2c2b" translate="yes" xml:space="preserve">
          <source>Types of paths</source>
          <target state="translated">경로의 종류</target>
        </trans-unit>
        <trans-unit id="927769adc55a691f31ed2d50893e6b26e3a7e1f3" translate="yes" xml:space="preserve">
          <source>Types such as &lt;code&gt;&amp;amp;mut T&lt;/code&gt; and &lt;code&gt;&amp;amp;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; are examples which are &lt;strong&gt;not&lt;/strong&gt; unwind safe. The general idea is that any mutable state which can be shared across &lt;code&gt;catch_unwind&lt;/code&gt; is not unwind safe by default. This is because it is very easy to witness a broken invariant outside of &lt;code&gt;catch_unwind&lt;/code&gt; as the data is simply accessed as usual.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; 및 &lt;code&gt;&amp;amp;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; 와 같은 유형 은 풀기 안전 &lt;strong&gt;하지 않은&lt;/strong&gt; 예입니다 . 일반적인 아이디어는 &lt;code&gt;catch_unwind&lt;/code&gt; 에서 공유 할 수있는 변경 가능한 상태 는 기본적으로 해제 안전하지 않다는 것 입니다. 데이터가 평소와 같이 단순히 액세스 되기 때문에 &lt;code&gt;catch_unwind&lt;/code&gt; 외부에서 깨진 불변을 목격하기가 매우 쉽기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="c3195172a47cd29103a9c049d30b8fbf3e8b1360" translate="yes" xml:space="preserve">
          <source>Types that are &lt;a href=&quot;../marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt; should have a trivial implementation of &lt;code&gt;Clone&lt;/code&gt;. More formally: if &lt;code&gt;T: Copy&lt;/code&gt;, &lt;code&gt;x: T&lt;/code&gt;, and &lt;code&gt;y: &amp;amp;T&lt;/code&gt;, then &lt;code&gt;let x = y.clone();&lt;/code&gt; is equivalent to &lt;code&gt;let x = *y;&lt;/code&gt;. Manual implementations should be careful to uphold this invariant; however, unsafe code must not rely on it to ensure memory safety.</source>
          <target state="translated">&lt;a href=&quot;../marker/trait.copy&quot;&gt; &lt;code&gt;Copy&lt;/code&gt; 인&lt;/a&gt; 유형 은 간단한 &lt;code&gt;Clone&lt;/code&gt; 구현이 있어야합니다 . 더 공식적으로 : &lt;code&gt;T: Copy&lt;/code&gt; , &lt;code&gt;x: T&lt;/code&gt; 및 &lt;code&gt;y: &amp;amp;T&lt;/code&gt; 이면 &lt;code&gt;let x = y.clone();&lt;/code&gt; &lt;code&gt;let x = *y;&lt;/code&gt; 와 같습니다 . . 수동 구현은이 불변을 유지하도록주의해야합니다. 그러나 안전하지 않은 코드는 메모리 안전을 위해 코드에 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="f0ac37d244c8fc744b51cd8122917f397c819f37" translate="yes" xml:space="preserve">
          <source>Types that are not &lt;code&gt;Sync&lt;/code&gt; are those that have &quot;interior mutability&quot; in a non-thread-safe form, such as &lt;a href=&quot;../cell/struct.cell&quot;&gt;&lt;code&gt;Cell&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&lt;/code&gt;&lt;/a&gt;. These types allow for mutation of their contents even through an immutable, shared reference. For example the &lt;code&gt;set&lt;/code&gt; method on &lt;a href=&quot;../cell/struct.cell&quot;&gt;&lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; takes &lt;code&gt;&amp;amp;self&lt;/code&gt;, so it requires only a shared reference &lt;a href=&quot;../cell/struct.cell&quot;&gt;&lt;code&gt;&amp;amp;Cell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;. The method performs no synchronization, thus &lt;a href=&quot;../cell/struct.cell&quot;&gt;&lt;code&gt;Cell&lt;/code&gt;&lt;/a&gt; cannot be &lt;code&gt;Sync&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Sync&lt;/code&gt; 가 아닌 유형은 &lt;a href=&quot;../cell/struct.cell&quot;&gt; &lt;code&gt;Cell&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&lt;/code&gt; &lt;/a&gt; 과 같이 스레드로부터 안전 하지 않은 형식으로 &quot;내부 변경 가능성&quot;이있는 유형 입니다. 이러한 유형은 변경 불가능한 공유 참조를 통해서도 내용을 변경할 수 있습니다. 예를 들어 &lt;a href=&quot;../cell/struct.cell&quot;&gt; &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;set&lt;/code&gt; 메서드 는 &lt;code&gt;&amp;amp;self&lt;/code&gt; 를 사용하므로 공유 참조 &lt;a href=&quot;../cell/struct.cell&quot;&gt; &lt;code&gt;&amp;amp;Cell&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 만 필요합니다 . 이 메서드는 동기화를 수행하지 않으므로 &lt;a href=&quot;../cell/struct.cell&quot;&gt; &lt;code&gt;Cell&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;Sync&lt;/code&gt; 가 될 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="052471a32eb0536b190d6178524500a9ab363d4b" translate="yes" xml:space="preserve">
          <source>Types that are not &lt;code&gt;Sync&lt;/code&gt; are those that have &quot;interior mutability&quot; in a non-thread-safe form, such as &lt;a href=&quot;../cell/struct.cell&quot;&gt;&lt;code&gt;cell::Cell&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;cell::RefCell&lt;/code&gt;&lt;/a&gt;. These types allow for mutation of their contents even through an immutable, shared reference. For example the &lt;code&gt;set&lt;/code&gt; method on &lt;a href=&quot;../cell/struct.cell&quot;&gt;&lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; takes &lt;code&gt;&amp;amp;self&lt;/code&gt;, so it requires only a shared reference &lt;a href=&quot;../cell/struct.cell&quot;&gt;&lt;code&gt;&amp;amp;Cell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;. The method performs no synchronization, thus &lt;a href=&quot;../cell/struct.cell&quot;&gt;&lt;code&gt;Cell&lt;/code&gt;&lt;/a&gt; cannot be &lt;code&gt;Sync&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Sync&lt;/code&gt; 가 아닌 유형은 &lt;a href=&quot;../cell/struct.cell&quot;&gt; &lt;code&gt;cell::Cell&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;cell::RefCell&lt;/code&gt; &lt;/a&gt; 과 같이 스레드로부터 안전하지 않은 형태로 &quot;내부 변경 가능성&quot;이있는 유형 입니다. 이러한 유형은 불변의 공유 참조를 통해서도 내용의 돌연변이를 허용합니다. 예를 들어 &lt;a href=&quot;../cell/struct.cell&quot;&gt; &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;set&lt;/code&gt; 메소드 는 &lt;code&gt;&amp;amp;self&lt;/code&gt; 를 사용하므로 공유 참조 &lt;a href=&quot;../cell/struct.cell&quot;&gt; &lt;code&gt;&amp;amp;Cell&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; 만 필요합니다 . 이 메소드는 동기화를 수행하지 않으므로 &lt;a href=&quot;../cell/struct.cell&quot;&gt; &lt;code&gt;Cell&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;Sync&lt;/code&gt; 일 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="a93bcdad638deb7c786807f08f731b7cc346d96e" translate="yes" xml:space="preserve">
          <source>Types that can be &quot;unsized&quot; to a dynamically-sized type.</source>
          <target state="translated">크기를 동적으로 조정할 수있는 유형입니다.</target>
        </trans-unit>
        <trans-unit id="cb55fa05185a6907e8b5c6521da0fcc611e7870b" translate="yes" xml:space="preserve">
          <source>Types that can be referred to by a path directly. Specifically &lt;a href=&quot;items/enumerations&quot;&gt;enums&lt;/a&gt;, &lt;a href=&quot;items/structs&quot;&gt;structs&lt;/a&gt;, &lt;a href=&quot;items/unions&quot;&gt;unions&lt;/a&gt;, and &lt;a href=&quot;types/trait-object&quot;&gt;trait objects&lt;/a&gt;.</source>
          <target state="translated">경로에서 직접 참조 할 수있는 유형입니다. 특히 &lt;a href=&quot;items/enumerations&quot;&gt;열거 형&lt;/a&gt; , &lt;a href=&quot;items/structs&quot;&gt;구조체&lt;/a&gt; , &lt;a href=&quot;items/unions&quot;&gt;공용체&lt;/a&gt; 및 &lt;a href=&quot;types/trait-object&quot;&gt;특성 객체&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="25ee853941e3e88ccc68136bde43188a34e9bb72" translate="yes" xml:space="preserve">
          <source>Types that can be safely moved after being pinned.</source>
          <target state="translated">고정 후 안전하게 이동할 수있는 유형입니다.</target>
        </trans-unit>
        <trans-unit id="1ac756fd205dd639ca5e2fd93c5deef27d4364ad" translate="yes" xml:space="preserve">
          <source>Types that can be transferred across thread boundaries.</source>
          <target state="translated">스레드 경계를 통해 전송할 수있는 유형</target>
        </trans-unit>
        <trans-unit id="320fc78d266da1348d0700937ff111e53e935f29" translate="yes" xml:space="preserve">
          <source>Types that pin data to its location in memory.</source>
          <target state="translated">데이터를 메모리의 해당 위치에 고정하는 유형입니다.</target>
        </trans-unit>
        <trans-unit id="76aa938f99526e648196d0e632e37d9cfcfbe64a" translate="yes" xml:space="preserve">
          <source>Types where all values have the same size and alignment known at compile time implement the &lt;a href=&quot;../std/marker/trait.sized&quot;&gt;&lt;code&gt;Sized&lt;/code&gt;&lt;/a&gt; trait and can be checked with the &lt;a href=&quot;../std/mem/fn.size_of&quot;&gt;&lt;code&gt;size_of&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../std/mem/fn.align_of&quot;&gt;&lt;code&gt;align_of&lt;/code&gt;&lt;/a&gt; functions. Types that are not &lt;a href=&quot;../std/marker/trait.sized&quot;&gt;&lt;code&gt;Sized&lt;/code&gt;&lt;/a&gt; are known as &lt;a href=&quot;dynamically-sized-types&quot;&gt;dynamically sized types&lt;/a&gt;. Since all values of a &lt;code&gt;Sized&lt;/code&gt; type share the same size and alignment, we refer to those shared values as the size of the type and the alignment of the type respectively.</source>
          <target state="translated">컴파일시 알려진 모든 값의 크기와 정렬이 같은 유형은 &lt;a href=&quot;../std/marker/trait.sized&quot;&gt; &lt;code&gt;Sized&lt;/code&gt; &lt;/a&gt; 특성을 구현 하며 &lt;a href=&quot;../std/mem/fn.size_of&quot;&gt; &lt;code&gt;size_of&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../std/mem/fn.align_of&quot;&gt; &lt;code&gt;align_of&lt;/code&gt; &lt;/a&gt; 함수 로 확인할 수 있습니다 . 없는 유형 &lt;a href=&quot;../std/marker/trait.sized&quot;&gt; &lt;code&gt;Sized&lt;/code&gt; &lt;/a&gt; 으로 알려져 있습니다 &lt;a href=&quot;dynamically-sized-types&quot;&gt;동적으로 크기 유형&lt;/a&gt; . &lt;code&gt;Sized&lt;/code&gt; 유형 의 모든 값은 동일한 크기와 정렬을 공유하므로 공유 값을 유형의 크기와 유형의 정렬이라고합니다.</target>
        </trans-unit>
        <trans-unit id="3210f89648e92f030dff845af33244c5ff84d48b" translate="yes" xml:space="preserve">
          <source>Types which can be safely moved after being pinned.</source>
          <target state="translated">고정 후 안전하게 이동할 수있는 유형.</target>
        </trans-unit>
        <trans-unit id="2f9fa3c4c8befc1e893d11ac3d1acf505f4ef9f3" translate="yes" xml:space="preserve">
          <source>Types whose values can be duplicated simply by copying bits.</source>
          <target state="translated">단순히 비트를 복사하여 값을 복제 할 수있는 유형입니다.</target>
        </trans-unit>
        <trans-unit id="184223af25e77a5fba4124f5c744634bac8d8134" translate="yes" xml:space="preserve">
          <source>Types with a built-in &lt;code&gt;Copy&lt;/code&gt; implementation (see above)</source>
          <target state="translated">내장 &lt;code&gt;Copy&lt;/code&gt; 구현 이있는 유형 (위 참조)</target>
        </trans-unit>
        <trans-unit id="484e89278738e43bbfac83c89cf041e830b0fa33" translate="yes" xml:space="preserve">
          <source>Types with a constant size known at compile time.</source>
          <target state="translated">컴파일 타임에 알려진 일정한 크기의 유형.</target>
        </trans-unit>
        <trans-unit id="c606776082303165b5e8cc822f677d6b3746b68d" translate="yes" xml:space="preserve">
          <source>Typically in Rust, it is difficult to perform step (2) because catching a panic involves either spawning a thread (which in turns makes it difficult to later witness broken invariants) or using the &lt;code&gt;catch_unwind&lt;/code&gt; function in this module. Additionally, even if an invariant is witnessed, it typically isn't a problem in Rust because there are no uninitialized values (like in C or C++).</source>
          <target state="translated">일반적으로 Rust에서는 패닉을 잡기 위해 스레드를 생성하거나 (나중에 깨진 불변 값을 확인하기 어렵게 함) 이 모듈에서 &lt;code&gt;catch_unwind&lt;/code&gt; 함수를 사용하기 때문에 단계 2를 수행하기가 어렵습니다 . 또한, 불변이 목격 되더라도 초기화되지 않은 값 (예 : C 또는 C ++)이 없기 때문에 Rust에서는 일반적으로 문제가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cb301c3b538136ec6b1f761774f64171df868f5f" translate="yes" xml:space="preserve">
          <source>Typing &lt;code&gt;quit&lt;/code&gt; actually quits the game, but so will any other non-number input. However, this is suboptimal to say the least. We want the game to automatically stop when the correct number is guessed.</source>
          <target state="translated">&lt;code&gt;quit&lt;/code&gt; 실제로 게임을 종료하지만 숫자가 아닌 다른 입력은 종료 됩니다. 그러나 이것은 가장 적게 말하면 차선책입니다. 올바른 숫자를 추측하면 게임이 자동으로 중지되기를 원합니다.</target>
        </trans-unit>
        <trans-unit id="a153700f851859e0ff4a79a843433857f27950a3" translate="yes" xml:space="preserve">
          <source>U+0021 ..= U+002F &lt;code&gt;! &quot; # $ % &amp;amp; ' ( ) * + , - . /&lt;/code&gt;, or</source>
          <target state="translated">U + 0021 .. = U + 002F &lt;code&gt;! &quot; # $ % &amp;amp; ' ( ) * + , - . /&lt;/code&gt; 또는</target>
        </trans-unit>
        <trans-unit id="9a3efbcf50b26fb17c75edefb4d0573be03644e1" translate="yes" xml:space="preserve">
          <source>U+0030 '0' ..= U+0039 '9', or</source>
          <target state="translated">U + 0030 '0'.. = U + 0039 '9'또는</target>
        </trans-unit>
        <trans-unit id="974d5e574e1e2bc13b31d24cc4a60ea2f16fa049" translate="yes" xml:space="preserve">
          <source>U+0030 '0' ..= U+0039 '9'.</source>
          <target state="translated">U + 0030 '0'.. = U + 0039 '9'.</target>
        </trans-unit>
        <trans-unit id="fc0e8044fa37810bc4ad961db684088868f06aba" translate="yes" xml:space="preserve">
          <source>U+003A ..= U+0040 &lt;code&gt;: ; &amp;lt; = &amp;gt; ? @&lt;/code&gt;, or</source>
          <target state="translated">U + 003A .. = U + 0040 &lt;code&gt;: ; &amp;lt; = &amp;gt; ? @&lt;/code&gt; 또는</target>
        </trans-unit>
        <trans-unit id="302310fbdc6543d9d3ceaffa2ea8c3882849e20a" translate="yes" xml:space="preserve">
          <source>U+0041 'A' ..= U+0046 'F', or</source>
          <target state="translated">U + 0041 'A'.. = U + 0046 'F'또는</target>
        </trans-unit>
        <trans-unit id="0736721e1e5a1d0311260bd3b8011dcd68e67375" translate="yes" xml:space="preserve">
          <source>U+0041 'A' ..= U+005A 'Z', or</source>
          <target state="translated">U + 0041 'A'.. = U + 005A 'Z'또는</target>
        </trans-unit>
        <trans-unit id="db2fb3a2a6da1a41f13ef4503845f3b0b40f0c2e" translate="yes" xml:space="preserve">
          <source>U+005B ..= U+0060 &lt;code&gt;[ \ ] ^ _ ` &lt;/code&gt;, or</source>
          <target state="translated">U + 005B .. = U + 0060 &lt;code&gt;[ \ ] ^ _ ` &lt;/code&gt; _` 또는</target>
        </trans-unit>
        <trans-unit id="d8cc906d3074f1fb9435c008fb8f60999129ec67" translate="yes" xml:space="preserve">
          <source>U+0061 'a' ..= U+0066 'f'.</source>
          <target state="translated">U + 0061 'a'.. = U + 0066 'f'.</target>
        </trans-unit>
        <trans-unit id="c1d839fcec5226b8d1bd246357b031dd87454f54" translate="yes" xml:space="preserve">
          <source>U+0061 'a' ..= U+007A 'z', or</source>
          <target state="translated">U + 0061 'a'.. = U + 007A 'z'또는</target>
        </trans-unit>
        <trans-unit id="94a61fd70b1e7aaf895ebbced86d7174cebf3cb2" translate="yes" xml:space="preserve">
          <source>U+0061 'a' ..= U+007A 'z'.</source>
          <target state="translated">U + 0061 'a'.. = U + 007A 'z'.</target>
        </trans-unit>
        <trans-unit id="2bed9fc1e2abd580e2aa130399315d68f08afda9" translate="yes" xml:space="preserve">
          <source>U+007B ..= U+007E &lt;code&gt;{ | } ~&lt;/code&gt;</source>
          <target state="translated">U + 007B .. = U + 007E &lt;code&gt;{ | } ~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d6732b9263430ba9b754d7ce4c99335950d3da8b" translate="yes" xml:space="preserve">
          <source>UCred</source>
          <target state="translated">UCred</target>
        </trans-unit>
        <trans-unit id="0dd9df57e9839a1ea6ed560675b576be4884654a" translate="yes" xml:space="preserve">
          <source>UNC prefixes consist of the server's hostname and a share name.</source>
          <target state="translated">UNC 접두사는 서버의 호스트 이름과 공유 이름으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="08e32e0a7cca1165daa904dec1d1f04e68736d5e" translate="yes" xml:space="preserve">
          <source>UNICODE_ESCAPE :</source>
          <target state="translated">UNICODE_ESCAPE :</target>
        </trans-unit>
        <trans-unit id="a22641b9fc9c9910a6cdbff4d4c69eb3d13192f7" translate="yes" xml:space="preserve">
          <source>UNICODE_VERSION</source>
          <target state="translated">UNICODE_VERSION</target>
        </trans-unit>
        <trans-unit id="039571ef60c9b1a6527c96a684dccfc0e4f32a75" translate="yes" xml:space="preserve">
          <source>UNIX</source>
          <target state="translated">UNIX</target>
        </trans-unit>
        <trans-unit id="82e26360ac87e10e1e21c7c1d4d889a8777bad06" translate="yes" xml:space="preserve">
          <source>UNIX_EPOCH</source>
          <target state="translated">UNIX_EPOCH</target>
        </trans-unit>
        <trans-unit id="663b90c899fa25a111067be0c22ffc64dcf581c2" translate="yes" xml:space="preserve">
          <source>UTF-8</source>
          <target state="translated">UTF-8</target>
        </trans-unit>
        <trans-unit id="ff463dac21cfe2cbf8ee41ca3cd6ef5584048c23" translate="yes" xml:space="preserve">
          <source>UTF8BOM : &lt;code&gt;\uFEFF&lt;/code&gt;</source>
          <target state="translated">UTF8BOM : &lt;code&gt;\uFEFF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9bc8e71f3f5fe8f28cf7f67493cc988d6461307a" translate="yes" xml:space="preserve">
          <source>UTF8BOM&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">UTF8BOM&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f301189dd0e6ecd6aa5f6cd826f3ac3660574f9f" translate="yes" xml:space="preserve">
          <source>UdpSocket</source>
          <target state="translated">UdpSocket</target>
        </trans-unit>
        <trans-unit id="eef9838e551c21ad60465337cf4a411d0bc3c3b0" translate="yes" xml:space="preserve">
          <source>UdpSocket::as_raw_fd</source>
          <target state="translated">UdpSocket::as_raw_fd</target>
        </trans-unit>
        <trans-unit id="3dead55d6e23751656153f593bd69532bbdd74b4" translate="yes" xml:space="preserve">
          <source>UdpSocket::as_raw_socket</source>
          <target state="translated">UdpSocket::as_raw_socket</target>
        </trans-unit>
        <trans-unit id="e711eb64b283a492f76bc94de05d5beae4ce3446" translate="yes" xml:space="preserve">
          <source>UdpSocket::bind</source>
          <target state="translated">UdpSocket::bind</target>
        </trans-unit>
        <trans-unit id="bd6abe4ecc1b7a3998504825b222c78c7397b977" translate="yes" xml:space="preserve">
          <source>UdpSocket::borrow</source>
          <target state="translated">UdpSocket::borrow</target>
        </trans-unit>
        <trans-unit id="d6dfaba170b099d4935948d95be3a9b2d44c1b67" translate="yes" xml:space="preserve">
          <source>UdpSocket::borrow_mut</source>
          <target state="translated">UdpSocket::borrow_mut</target>
        </trans-unit>
        <trans-unit id="c7601afb8a1f8cbf9600b90ec208697e7f31bb37" translate="yes" xml:space="preserve">
          <source>UdpSocket::broadcast</source>
          <target state="translated">UdpSocket::broadcast</target>
        </trans-unit>
        <trans-unit id="b5425c83fcfa16a56bdac78f93d426c4d76de0d0" translate="yes" xml:space="preserve">
          <source>UdpSocket::connect</source>
          <target state="translated">UdpSocket::connect</target>
        </trans-unit>
        <trans-unit id="4ef0111b75ab32121f2408b7d5f05ebfa5b6081d" translate="yes" xml:space="preserve">
          <source>UdpSocket::fmt</source>
          <target state="translated">UdpSocket::fmt</target>
        </trans-unit>
        <trans-unit id="6967c776a7bd3c84521bc241c391c1e849c635bd" translate="yes" xml:space="preserve">
          <source>UdpSocket::from</source>
          <target state="translated">UdpSocket::from</target>
        </trans-unit>
        <trans-unit id="bb5a7c0a1436e4ab18aa912a9f605f7b18ee8765" translate="yes" xml:space="preserve">
          <source>UdpSocket::from_raw_fd</source>
          <target state="translated">UdpSocket::from_raw_fd</target>
        </trans-unit>
        <trans-unit id="f80335b07809af571cc3df35b472a55569fb682a" translate="yes" xml:space="preserve">
          <source>UdpSocket::from_raw_socket</source>
          <target state="translated">UdpSocket::from_raw_socket</target>
        </trans-unit>
        <trans-unit id="9027e17e6ff5173579151cfa12fc5dbe9441694f" translate="yes" xml:space="preserve">
          <source>UdpSocket::into</source>
          <target state="translated">UdpSocket::into</target>
        </trans-unit>
        <trans-unit id="a803dafad8d15d21084fc92907391bd1b059ddfd" translate="yes" xml:space="preserve">
          <source>UdpSocket::into_raw_fd</source>
          <target state="translated">UdpSocket::into_raw_fd</target>
        </trans-unit>
        <trans-unit id="9cf9f423f72726c7578e2b5f5e2920796c1f2793" translate="yes" xml:space="preserve">
          <source>UdpSocket::into_raw_socket</source>
          <target state="translated">UdpSocket::into_raw_socket</target>
        </trans-unit>
        <trans-unit id="3f8673b9aaf4671a169334c3798e42c1cef61195" translate="yes" xml:space="preserve">
          <source>UdpSocket::join_multicast_v4</source>
          <target state="translated">UdpSocket::join_multicast_v4</target>
        </trans-unit>
        <trans-unit id="fdb0ef8819eb18c412a260ee8e4e9ed4c176ee44" translate="yes" xml:space="preserve">
          <source>UdpSocket::join_multicast_v6</source>
          <target state="translated">UdpSocket::join_multicast_v6</target>
        </trans-unit>
        <trans-unit id="daf0d0331de8a89e9e07829bd3f8f62b73e26c9f" translate="yes" xml:space="preserve">
          <source>UdpSocket::leave_multicast_v4</source>
          <target state="translated">UdpSocket::leave_multicast_v4</target>
        </trans-unit>
        <trans-unit id="19e7ef348410341be9e9f87a0c453576eeabf4f2" translate="yes" xml:space="preserve">
          <source>UdpSocket::leave_multicast_v6</source>
          <target state="translated">UdpSocket::leave_multicast_v6</target>
        </trans-unit>
        <trans-unit id="4541378b6e55fa1b6ff0ecd59a93caf5944114ce" translate="yes" xml:space="preserve">
          <source>UdpSocket::local_addr</source>
          <target state="translated">UdpSocket::local_addr</target>
        </trans-unit>
        <trans-unit id="e1d4fbc9e9ee16f13b25d7e15d3094bef922be02" translate="yes" xml:space="preserve">
          <source>UdpSocket::multicast_loop_v4</source>
          <target state="translated">UdpSocket::multicast_loop_v4</target>
        </trans-unit>
        <trans-unit id="47fea5b479b31e88d1e71ca6bcfb3bb1110ffa70" translate="yes" xml:space="preserve">
          <source>UdpSocket::multicast_loop_v6</source>
          <target state="translated">UdpSocket::multicast_loop_v6</target>
        </trans-unit>
        <trans-unit id="af0afd1673286058b665d369d31b395392204948" translate="yes" xml:space="preserve">
          <source>UdpSocket::multicast_ttl_v4</source>
          <target state="translated">UdpSocket::multicast_ttl_v4</target>
        </trans-unit>
        <trans-unit id="7ea92dd593f0d5cfd6700064620321c00b369e37" translate="yes" xml:space="preserve">
          <source>UdpSocket::peek</source>
          <target state="translated">UdpSocket::peek</target>
        </trans-unit>
        <trans-unit id="618b3359f531c1676b89a79683f9f10d7d9e63d6" translate="yes" xml:space="preserve">
          <source>UdpSocket::peek_from</source>
          <target state="translated">UdpSocket::peek_from</target>
        </trans-unit>
        <trans-unit id="ed605d1f943615e31a607bcc21bab5caa4744d32" translate="yes" xml:space="preserve">
          <source>UdpSocket::peer_addr</source>
          <target state="translated">UdpSocket::peer_addr</target>
        </trans-unit>
        <trans-unit id="e623079f9fa431b1604c2d3e586552e0f51cec43" translate="yes" xml:space="preserve">
          <source>UdpSocket::read_timeout</source>
          <target state="translated">UdpSocket::read_timeout</target>
        </trans-unit>
        <trans-unit id="117a240778e6d7c73d9190f8661f261267ed1dce" translate="yes" xml:space="preserve">
          <source>UdpSocket::recv</source>
          <target state="translated">UdpSocket::recv</target>
        </trans-unit>
        <trans-unit id="6b5d35c54deb341c259817d88dd2d0d29fec7a61" translate="yes" xml:space="preserve">
          <source>UdpSocket::recv_from</source>
          <target state="translated">UdpSocket::recv_from</target>
        </trans-unit>
        <trans-unit id="342543bea1d10360d53cdb0e77dc5cb9afda6331" translate="yes" xml:space="preserve">
          <source>UdpSocket::send</source>
          <target state="translated">UdpSocket::send</target>
        </trans-unit>
        <trans-unit id="22d3f7e464f346e514fa3986fce3b3f1e2571e5b" translate="yes" xml:space="preserve">
          <source>UdpSocket::send_to</source>
          <target state="translated">UdpSocket::send_to</target>
        </trans-unit>
        <trans-unit id="9e2a55f7f7b4b48356483d8d2fb5b602fa0f3530" translate="yes" xml:space="preserve">
          <source>UdpSocket::set_broadcast</source>
          <target state="translated">UdpSocket::set_broadcast</target>
        </trans-unit>
        <trans-unit id="3f47efd4587a1a296613dd09d826c04823707540" translate="yes" xml:space="preserve">
          <source>UdpSocket::set_multicast_loop_v4</source>
          <target state="translated">UdpSocket::set_multicast_loop_v4</target>
        </trans-unit>
        <trans-unit id="e20ba27d970b370c3419b1aeb14d08d71bc56a8c" translate="yes" xml:space="preserve">
          <source>UdpSocket::set_multicast_loop_v6</source>
          <target state="translated">UdpSocket::set_multicast_loop_v6</target>
        </trans-unit>
        <trans-unit id="9cd522d20aa030dbf9138752a7e810a44b5efb38" translate="yes" xml:space="preserve">
          <source>UdpSocket::set_multicast_ttl_v4</source>
          <target state="translated">UdpSocket::set_multicast_ttl_v4</target>
        </trans-unit>
        <trans-unit id="03074d339b260baa1ad044577238a1336825ab4b" translate="yes" xml:space="preserve">
          <source>UdpSocket::set_nonblocking</source>
          <target state="translated">UdpSocket::set_nonblocking</target>
        </trans-unit>
        <trans-unit id="d915caa0f42d8eb7576e0424ad1fb96ff110018c" translate="yes" xml:space="preserve">
          <source>UdpSocket::set_read_timeout</source>
          <target state="translated">UdpSocket::set_read_timeout</target>
        </trans-unit>
        <trans-unit id="00311ef46c51fae7556414d73e84c73f1d7812ff" translate="yes" xml:space="preserve">
          <source>UdpSocket::set_ttl</source>
          <target state="translated">UdpSocket::set_ttl</target>
        </trans-unit>
        <trans-unit id="febfbd7ca83810329de07b88d8fb3393c6ca4798" translate="yes" xml:space="preserve">
          <source>UdpSocket::set_write_timeout</source>
          <target state="translated">UdpSocket::set_write_timeout</target>
        </trans-unit>
        <trans-unit id="9d7c771c5a45977006ca3dfa60a86af6dd8ee823" translate="yes" xml:space="preserve">
          <source>UdpSocket::take_error</source>
          <target state="translated">UdpSocket::take_error</target>
        </trans-unit>
        <trans-unit id="9f4ec7ded42c7be9420f00ecf5a43baac427f3a2" translate="yes" xml:space="preserve">
          <source>UdpSocket::try_clone</source>
          <target state="translated">UdpSocket::try_clone</target>
        </trans-unit>
        <trans-unit id="124c70e6a48a5f998f83b2f8f60af01be757111c" translate="yes" xml:space="preserve">
          <source>UdpSocket::try_from</source>
          <target state="translated">UdpSocket::try_from</target>
        </trans-unit>
        <trans-unit id="419d8221e876e08ccc71dcef9e30956e6a2336ce" translate="yes" xml:space="preserve">
          <source>UdpSocket::try_into</source>
          <target state="translated">UdpSocket::try_into</target>
        </trans-unit>
        <trans-unit id="179be00cc6604f24b28a0eaa033c371e9b537141" translate="yes" xml:space="preserve">
          <source>UdpSocket::ttl</source>
          <target state="translated">UdpSocket::ttl</target>
        </trans-unit>
        <trans-unit id="2e57927ff8f0f2d0d53c88f359b91dce0a9fac1a" translate="yes" xml:space="preserve">
          <source>UdpSocket::type_id</source>
          <target state="translated">UdpSocket::type_id</target>
        </trans-unit>
        <trans-unit id="6e4a0fe28e49c9f074eb8b5bf8aa033213c911d5" translate="yes" xml:space="preserve">
          <source>UdpSocket::write_timeout</source>
          <target state="translated">UdpSocket::write_timeout</target>
        </trans-unit>
        <trans-unit id="ad739a773605a26e0e278e2e21fb10279a5b2fe3" translate="yes" xml:space="preserve">
          <source>Ultimately, lifetime syntax is about connecting the lifetimes of various parameters and return values of functions. Once they&amp;rsquo;re connected, Rust has enough information to allow memory-safe operations and disallow operations that would create dangling pointers or otherwise violate memory safety.</source>
          <target state="translated">궁극적으로 수명 구문은 다양한 매개 변수의 수명과 함수의 반환 값을 연결하는 것입니다. 일단 연결되면 Rust는 메모리 안전 작업을 허용하고 매달려 포인터를 만들거나 메모리 안전을 위반하는 작업을 허용하지 않을만큼 충분한 정보를 가지고 있습니다.</target>
        </trans-unit>
        <trans-unit id="4eb578990ad7468d516f19c1a212e616f769fb7d" translate="yes" xml:space="preserve">
          <source>Ultimately, we want to convert the &lt;code&gt;String&lt;/code&gt; the program reads as input into a real number type so we can compare it numerically to the secret number. We can do that by adding another line to the &lt;code&gt;main&lt;/code&gt; function body:</source>
          <target state="translated">궁극적으로 우리 는 프로그램이 입력으로 읽은 &lt;code&gt;String&lt;/code&gt; 실수 유형 으로 변환하여 숫자로 비밀 번호와 비교할 수 있습니다. &lt;code&gt;main&lt;/code&gt; 함수 본문에 다른 줄을 추가하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="4c83e690d015c2dda5615d91434e066248316e35" translate="yes" xml:space="preserve">
          <source>Ultimately, we want to convert the &lt;code&gt;String&lt;/code&gt; the program reads as input into a real number type so we can compare it numerically to the secret number. We can do that by adding the following two lines to the &lt;code&gt;main&lt;/code&gt; function body:</source>
          <target state="translated">궁극적으로, 우리 는 프로그램이 입력으로 읽은 &lt;code&gt;String&lt;/code&gt; 실수 형 으로 변환하여 숫자와 비밀 번호를 비교할 수 있습니다. &lt;code&gt;main&lt;/code&gt; 함수 본문에 다음 두 줄을 추가하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="f65abf2396d9d0e3036b5edd214ba0117f22347c" translate="yes" xml:space="preserve">
          <source>Unaligned pointer reading and writing outside of &lt;a href=&quot;../std/ptr/fn.read_unaligned&quot;&gt;&lt;code&gt;read_unaligned&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../std/ptr/fn.write_unaligned&quot;&gt;&lt;code&gt;write_unaligned&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">정렬되지 않은 포인터 읽기 및 쓰기 외부 &lt;a href=&quot;../std/ptr/fn.read_unaligned&quot;&gt; &lt;code&gt;read_unaligned&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../std/ptr/fn.write_unaligned&quot;&gt; &lt;code&gt;write_unaligned&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e740f17c2c4678005ceef9e2ecf547507892500" translate="yes" xml:space="preserve">
          <source>Unaligned values cannot be dropped in place, they must be copied to an aligned location first using &lt;a href=&quot;../ptr/fn.read_unaligned&quot;&gt;&lt;code&gt;ptr::read_unaligned&lt;/code&gt;&lt;/a&gt;. For packed structs, this move is done automatically by the compiler. This means the fields of packed structs are not dropped in-place.</source>
          <target state="translated">정렬되지 않은 값은 제자리에 놓을 수 없으며 먼저 &lt;a href=&quot;../ptr/fn.read_unaligned&quot;&gt; &lt;code&gt;ptr::read_unaligned&lt;/code&gt; &lt;/a&gt; 사용하여 정렬 된 위치에 복사해야합니다 . 패킹 된 구조체의 경우이 이동은 컴파일러에 의해 자동으로 수행됩니다. 이는 패킹 된 구조체의 필드가 제자리에 놓이지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="de8646776b21ba1fa4fa08017bad8f9f8fd98a56" translate="yes" xml:space="preserve">
          <source>Unaligned values cannot be dropped in place, they must be copied to an aligned location first using &lt;a href=&quot;fn.read_unaligned&quot;&gt;&lt;code&gt;ptr::read_unaligned&lt;/code&gt;&lt;/a&gt;. For packed structs, this move is done automatically by the compiler. This means the fields of packed structs are not dropped in-place.</source>
          <target state="translated">정렬되지 않은 값은 제자리에 놓을 수 없으며 먼저 &lt;a href=&quot;fn.read_unaligned&quot;&gt; &lt;code&gt;ptr::read_unaligned&lt;/code&gt; &lt;/a&gt; 사용하여 정렬 된 위치에 복사해야합니다 . 패킹 된 구조체의 경우이 이동은 컴파일러에 의해 자동으로 수행됩니다. 이는 패킹 된 구조체의 필드가 제자리에 놓이지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a19c02a20defb4e5a19ad20ddc9f198b595912c2" translate="yes" xml:space="preserve">
          <source>Unaligned values cannot be dropped in place, they must be copied to an aligned location first:</source>
          <target state="translated">정렬되지 않은 값은 제자리에 놓을 수 없으며 정렬 된 위치에 먼저 복사해야합니다.</target>
        </trans-unit>
        <trans-unit id="06561b17b729c80e40714208c692221607fb499c" translate="yes" xml:space="preserve">
          <source>Unary &lt;code&gt;-&lt;/code&gt;&lt;code&gt;*&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;code&gt;&amp;amp;mut&lt;/code&gt;</source>
          <target state="translated">단항 &lt;code&gt;-&lt;/code&gt; &lt;code&gt;*&lt;/code&gt; &lt;code&gt;!&lt;/code&gt; &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;code&gt;&amp;amp;mut&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eaeaaeab2b8c39fed19b6ad2f8f02ca13156250d" translate="yes" xml:space="preserve">
          <source>Unchecked integer addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self + rhs &amp;gt; i128::MAX&lt;/code&gt; or &lt;code&gt;self + rhs &amp;lt; i128::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 더하기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self + rhs&lt;/code&gt; 계산 합니다. 따라서 &lt;code&gt;self + rhs &amp;gt; i128::MAX&lt;/code&gt; 또는 &lt;code&gt;self + rhs &amp;lt; i128::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="bf60089baa8e1b12ead76beae70eb523584bfcff" translate="yes" xml:space="preserve">
          <source>Unchecked integer addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self + rhs &amp;gt; i16::MAX&lt;/code&gt; or &lt;code&gt;self + rhs &amp;lt; i16::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 더하기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self + rhs&lt;/code&gt; 계산 합니다. 따라서 &lt;code&gt;self + rhs &amp;gt; i16::MAX&lt;/code&gt; 또는 &lt;code&gt;self + rhs &amp;lt; i16::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="57d2d3f2c8b1f0f83b5c8311b2489a069d73a68e" translate="yes" xml:space="preserve">
          <source>Unchecked integer addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self + rhs &amp;gt; i32::MAX&lt;/code&gt; or &lt;code&gt;self + rhs &amp;lt; i32::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 더하기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self + rhs&lt;/code&gt; 계산 합니다. 따라서 &lt;code&gt;self + rhs &amp;gt; i32::MAX&lt;/code&gt; 또는 &lt;code&gt;self + rhs &amp;lt; i32::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="04a73576177ebee5f439e851247328471bb0c25a" translate="yes" xml:space="preserve">
          <source>Unchecked integer addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self + rhs &amp;gt; i64::MAX&lt;/code&gt; or &lt;code&gt;self + rhs &amp;lt; i64::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 더하기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self + rhs&lt;/code&gt; 계산 합니다. 따라서 &lt;code&gt;self + rhs &amp;gt; i64::MAX&lt;/code&gt; 또는 &lt;code&gt;self + rhs &amp;lt; i64::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="98456ae98d27b023cd6297deba77970fa8fe5737" translate="yes" xml:space="preserve">
          <source>Unchecked integer addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self + rhs &amp;gt; i8::MAX&lt;/code&gt; or &lt;code&gt;self + rhs &amp;lt; i8::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 더하기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self + rhs&lt;/code&gt; 계산 합니다. 따라서 &lt;code&gt;self + rhs &amp;gt; i8::MAX&lt;/code&gt; 또는 &lt;code&gt;self + rhs &amp;lt; i8::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="181cfbbcfa7badb7116e737475005644ef4b02af" translate="yes" xml:space="preserve">
          <source>Unchecked integer addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self + rhs &amp;gt; isize::MAX&lt;/code&gt; or &lt;code&gt;self + rhs &amp;lt; isize::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 더하기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self + rhs&lt;/code&gt; 계산 합니다. 결과적으로 &lt;code&gt;self + rhs &amp;gt; isize::MAX&lt;/code&gt; 또는 &lt;code&gt;self + rhs &amp;lt; isize::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="6e7dffee5ddf31f6bb308589f3d1034539c1ed44" translate="yes" xml:space="preserve">
          <source>Unchecked integer addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self + rhs &amp;gt; u128::MAX&lt;/code&gt; or &lt;code&gt;self + rhs &amp;lt; u128::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 더하기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self + rhs&lt;/code&gt; 계산 합니다. 따라서 &lt;code&gt;self + rhs &amp;gt; u128::MAX&lt;/code&gt; 또는 &lt;code&gt;self + rhs &amp;lt; u128::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="f17243b2da1ec0e37d5c613451d7b628005e7af8" translate="yes" xml:space="preserve">
          <source>Unchecked integer addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self + rhs &amp;gt; u16::MAX&lt;/code&gt; or &lt;code&gt;self + rhs &amp;lt; u16::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 더하기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self + rhs&lt;/code&gt; 계산 합니다. 따라서 &lt;code&gt;self + rhs &amp;gt; u16::MAX&lt;/code&gt; 또는 &lt;code&gt;self + rhs &amp;lt; u16::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="e8a542644a4285f9d7b2a44c5f2775b79db39a7b" translate="yes" xml:space="preserve">
          <source>Unchecked integer addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self + rhs &amp;gt; u32::MAX&lt;/code&gt; or &lt;code&gt;self + rhs &amp;lt; u32::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 더하기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self + rhs&lt;/code&gt; 계산 합니다. 결과적으로 &lt;code&gt;self + rhs &amp;gt; u32::MAX&lt;/code&gt; 또는 &lt;code&gt;self + rhs &amp;lt; u32::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="bae0a8aba40c37aa489fd12e7bd803aa59ab9b06" translate="yes" xml:space="preserve">
          <source>Unchecked integer addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self + rhs &amp;gt; u64::MAX&lt;/code&gt; or &lt;code&gt;self + rhs &amp;lt; u64::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 더하기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self + rhs&lt;/code&gt; 계산 합니다. 따라서 &lt;code&gt;self + rhs &amp;gt; u64::MAX&lt;/code&gt; 또는 &lt;code&gt;self + rhs &amp;lt; u64::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="217823d7931de445dbac4c7c600ba231f5d01a32" translate="yes" xml:space="preserve">
          <source>Unchecked integer addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self + rhs &amp;gt; u8::MAX&lt;/code&gt; or &lt;code&gt;self + rhs &amp;lt; u8::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 더하기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self + rhs&lt;/code&gt; 계산 합니다. 따라서 &lt;code&gt;self + rhs &amp;gt; u8::MAX&lt;/code&gt; 또는 &lt;code&gt;self + rhs &amp;lt; u8::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="3784f542c08995d9da31ec918116bee7959049c6" translate="yes" xml:space="preserve">
          <source>Unchecked integer addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self + rhs &amp;gt; usize::MAX&lt;/code&gt; or &lt;code&gt;self + rhs &amp;lt; usize::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 더하기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self + rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self + rhs &amp;gt; usize::MAX&lt;/code&gt; 또는 &lt;code&gt;self + rhs &amp;lt; usize::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="e46989e35b2cb886206f7735df0231524fbe7ccd" translate="yes" xml:space="preserve">
          <source>Unchecked integer multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self * rhs &amp;gt; i128::MAX&lt;/code&gt; or &lt;code&gt;self * rhs &amp;lt; i128::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 곱셈. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self * rhs&lt;/code&gt; 계산 합니다. 따라서 &lt;code&gt;self * rhs &amp;gt; i128::MAX&lt;/code&gt; 또는 &lt;code&gt;self * rhs &amp;lt; i128::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="e25f8da52dbbff157dca4617b3f1a59b2bfc36a7" translate="yes" xml:space="preserve">
          <source>Unchecked integer multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self * rhs &amp;gt; i16::MAX&lt;/code&gt; or &lt;code&gt;self * rhs &amp;lt; i16::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 곱셈. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self * rhs&lt;/code&gt; 계산 합니다. 따라서 &lt;code&gt;self * rhs &amp;gt; i16::MAX&lt;/code&gt; 또는 &lt;code&gt;self * rhs &amp;lt; i16::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="35f739b4aaf5e35f8f41b2fc34c5c1af364fd56e" translate="yes" xml:space="preserve">
          <source>Unchecked integer multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self * rhs &amp;gt; i32::MAX&lt;/code&gt; or &lt;code&gt;self * rhs &amp;lt; i32::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 곱셈. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self * rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self * rhs &amp;gt; i32::MAX&lt;/code&gt; 또는 &lt;code&gt;self * rhs &amp;lt; i32::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="68857c1be152e69874bd8a3d7df9e0082927641b" translate="yes" xml:space="preserve">
          <source>Unchecked integer multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self * rhs &amp;gt; i64::MAX&lt;/code&gt; or &lt;code&gt;self * rhs &amp;lt; i64::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 곱셈. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self * rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self * rhs &amp;gt; i64::MAX&lt;/code&gt; 또는 &lt;code&gt;self * rhs &amp;lt; i64::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="43ba5e2f667a70448c2bc30e68127889e33fbcb0" translate="yes" xml:space="preserve">
          <source>Unchecked integer multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self * rhs &amp;gt; i8::MAX&lt;/code&gt; or &lt;code&gt;self * rhs &amp;lt; i8::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 곱셈. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self * rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self * rhs &amp;gt; i8::MAX&lt;/code&gt; 또는 &lt;code&gt;self * rhs &amp;lt; i8::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="2d8ea5bd84cde0d4b308a1762db7027c570a55b6" translate="yes" xml:space="preserve">
          <source>Unchecked integer multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self * rhs &amp;gt; isize::MAX&lt;/code&gt; or &lt;code&gt;self * rhs &amp;lt; isize::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 곱셈. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self * rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self * rhs &amp;gt; isize::MAX&lt;/code&gt; 또는 &lt;code&gt;self * rhs &amp;lt; isize::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="b9ddf676d896b37ebffa48cd9f6ff3ee28c7f039" translate="yes" xml:space="preserve">
          <source>Unchecked integer multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self * rhs &amp;gt; u128::MAX&lt;/code&gt; or &lt;code&gt;self * rhs &amp;lt; u128::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 곱셈. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self * rhs&lt;/code&gt; 계산 합니다. 결과적으로 &lt;code&gt;self * rhs &amp;gt; u128::MAX&lt;/code&gt; 또는 &lt;code&gt;self * rhs &amp;lt; u128::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="a3bb62e69c1601ccfe0ef959e2a876a22790ef04" translate="yes" xml:space="preserve">
          <source>Unchecked integer multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self * rhs &amp;gt; u16::MAX&lt;/code&gt; or &lt;code&gt;self * rhs &amp;lt; u16::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 곱셈. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self * rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self * rhs &amp;gt; u16::MAX&lt;/code&gt; 또는 &lt;code&gt;self * rhs &amp;lt; u16::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="e65b8aaadedff35c0a62f7a135254f90f4ccab0a" translate="yes" xml:space="preserve">
          <source>Unchecked integer multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self * rhs &amp;gt; u32::MAX&lt;/code&gt; or &lt;code&gt;self * rhs &amp;lt; u32::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 곱셈. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self * rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self * rhs &amp;gt; u32::MAX&lt;/code&gt; 또는 &lt;code&gt;self * rhs &amp;lt; u32::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="111c8c208814caa52463838dcecbd292a0ff4bce" translate="yes" xml:space="preserve">
          <source>Unchecked integer multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self * rhs &amp;gt; u64::MAX&lt;/code&gt; or &lt;code&gt;self * rhs &amp;lt; u64::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 곱셈. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self * rhs&lt;/code&gt; 계산 합니다. 따라서 &lt;code&gt;self * rhs &amp;gt; u64::MAX&lt;/code&gt; 또는 &lt;code&gt;self * rhs &amp;lt; u64::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="fa225d3efab56513dbab5c9b4e8a9843ef6fdaf6" translate="yes" xml:space="preserve">
          <source>Unchecked integer multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self * rhs &amp;gt; u8::MAX&lt;/code&gt; or &lt;code&gt;self * rhs &amp;lt; u8::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 곱셈. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self * rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self * rhs &amp;gt; u8::MAX&lt;/code&gt; 또는 &lt;code&gt;self * rhs &amp;lt; u8::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="357967f063fbfe8af622e52b6f92d48adbffb3ef" translate="yes" xml:space="preserve">
          <source>Unchecked integer multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self * rhs &amp;gt; usize::MAX&lt;/code&gt; or &lt;code&gt;self * rhs &amp;lt; usize::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 곱셈. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self * rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self * rhs &amp;gt; usize::MAX&lt;/code&gt; 또는 &lt;code&gt;self * rhs &amp;lt; usize::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="fe8dd13c5dff45f9d9fade7c23010632d824bbc5" translate="yes" xml:space="preserve">
          <source>Unchecked integer subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self - rhs &amp;gt; i128::MAX&lt;/code&gt; or &lt;code&gt;self - rhs &amp;lt; i128::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 빼기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self - rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self - rhs &amp;gt; i128::MAX&lt;/code&gt; 또는 &lt;code&gt;self - rhs &amp;lt; i128::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="4f796122fc9def8df4649d0b2d125dd1cd6e291b" translate="yes" xml:space="preserve">
          <source>Unchecked integer subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self - rhs &amp;gt; i16::MAX&lt;/code&gt; or &lt;code&gt;self - rhs &amp;lt; i16::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 빼기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self - rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self - rhs &amp;gt; i16::MAX&lt;/code&gt; 또는 &lt;code&gt;self - rhs &amp;lt; i16::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="84c8864cef260c48a4e59f2b70d655fdf389430b" translate="yes" xml:space="preserve">
          <source>Unchecked integer subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self - rhs &amp;gt; i32::MAX&lt;/code&gt; or &lt;code&gt;self - rhs &amp;lt; i32::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 빼기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self - rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self - rhs &amp;gt; i32::MAX&lt;/code&gt; 또는 &lt;code&gt;self - rhs &amp;lt; i32::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="31a325f491fcfe3291d440373b764f580c3f0582" translate="yes" xml:space="preserve">
          <source>Unchecked integer subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self - rhs &amp;gt; i64::MAX&lt;/code&gt; or &lt;code&gt;self - rhs &amp;lt; i64::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 빼기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self - rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self - rhs &amp;gt; i64::MAX&lt;/code&gt; 또는 &lt;code&gt;self - rhs &amp;lt; i64::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="c6cd990380c2a0d5b9b2454a9569e6e2c5a42f96" translate="yes" xml:space="preserve">
          <source>Unchecked integer subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self - rhs &amp;gt; i8::MAX&lt;/code&gt; or &lt;code&gt;self - rhs &amp;lt; i8::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 빼기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self - rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self - rhs &amp;gt; i8::MAX&lt;/code&gt; 또는 &lt;code&gt;self - rhs &amp;lt; i8::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="af189c7306f2089208258aece688aaa4cbb8ac02" translate="yes" xml:space="preserve">
          <source>Unchecked integer subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self - rhs &amp;gt; isize::MAX&lt;/code&gt; or &lt;code&gt;self - rhs &amp;lt; isize::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 빼기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self - rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self - rhs &amp;gt; isize::MAX&lt;/code&gt; 또는 &lt;code&gt;self - rhs &amp;lt; isize::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="ba6ec2a37ff7eb25e8c786febab4ab98bbd27660" translate="yes" xml:space="preserve">
          <source>Unchecked integer subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self - rhs &amp;gt; u128::MAX&lt;/code&gt; or &lt;code&gt;self - rhs &amp;lt; u128::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 빼기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self - rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self - rhs &amp;gt; u128::MAX&lt;/code&gt; 또는 &lt;code&gt;self - rhs &amp;lt; u128::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="baacb800b9617663d503dd16c499fbf3c18d485b" translate="yes" xml:space="preserve">
          <source>Unchecked integer subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self - rhs &amp;gt; u16::MAX&lt;/code&gt; or &lt;code&gt;self - rhs &amp;lt; u16::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 빼기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self - rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self - rhs &amp;gt; u16::MAX&lt;/code&gt; 또는 &lt;code&gt;self - rhs &amp;lt; u16::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="026df7825e54c4d4d1564e862d070306e0b0ad6b" translate="yes" xml:space="preserve">
          <source>Unchecked integer subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self - rhs &amp;gt; u32::MAX&lt;/code&gt; or &lt;code&gt;self - rhs &amp;lt; u32::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 빼기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self - rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self - rhs &amp;gt; u32::MAX&lt;/code&gt; 또는 &lt;code&gt;self - rhs &amp;lt; u32::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="7acb45d177f4b13e2bbada8a1a7786dfd123ebb3" translate="yes" xml:space="preserve">
          <source>Unchecked integer subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self - rhs &amp;gt; u64::MAX&lt;/code&gt; or &lt;code&gt;self - rhs &amp;lt; u64::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 빼기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self - rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self - rhs &amp;gt; u64::MAX&lt;/code&gt; 또는 &lt;code&gt;self - rhs &amp;lt; u64::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="474d17a8d47d3b421384881d2bc565471dac82d4" translate="yes" xml:space="preserve">
          <source>Unchecked integer subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self - rhs &amp;gt; u8::MAX&lt;/code&gt; or &lt;code&gt;self - rhs &amp;lt; u8::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 빼기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self - rhs&lt;/code&gt; 계산 합니다. 따라서 &lt;code&gt;self - rhs &amp;gt; u8::MAX&lt;/code&gt; 또는 &lt;code&gt;self - rhs &amp;lt; u8::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="f27d966c87f4516cf43f8b199f1a37517f69d9bb" translate="yes" xml:space="preserve">
          <source>Unchecked integer subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, assuming overflow cannot occur. This results in undefined behavior when &lt;code&gt;self - rhs &amp;gt; usize::MAX&lt;/code&gt; or &lt;code&gt;self - rhs &amp;lt; usize::MIN&lt;/code&gt;.</source>
          <target state="translated">확인되지 않은 정수 빼기. 오버플로가 발생할 수 없다고 가정하고 &lt;code&gt;self - rhs&lt;/code&gt; 계산 합니다. 이로 인해 &lt;code&gt;self - rhs &amp;gt; usize::MAX&lt;/code&gt; 또는 &lt;code&gt;self - rhs &amp;lt; usize::MIN&lt;/code&gt; 때 정의되지 않은 동작이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="1c9a7a4592fa01f0c87a973312a3417b3c758e1e" translate="yes" xml:space="preserve">
          <source>Uncovered type</source>
          <target state="translated">폭로 된 유형</target>
        </trans-unit>
        <trans-unit id="ebb35fed37a359f87ca6b9131bfd7b210eb81cd6" translate="yes" xml:space="preserve">
          <source>Undefined behavior</source>
          <target state="translated">정의되지 않은 동작</target>
        </trans-unit>
        <trans-unit id="370c58f039e07727be3fca997e7473eb72b353e5" translate="yes" xml:space="preserve">
          <source>Under the &lt;a href=&quot;../type-layout#the-default-representation&quot;&gt;default representation&lt;/a&gt;, the specified discriminant is interpreted as an &lt;code&gt;isize&lt;/code&gt; value although the compiler is allowed to use a smaller type in the actual memory layout. The size and thus acceptable values can be changed by using a &lt;a href=&quot;../type-layout#primitive-representations&quot;&gt;primitive representation&lt;/a&gt; or the &lt;a href=&quot;../type-layout#the-c-representation&quot;&gt;&lt;code&gt;C&lt;/code&gt; representation&lt;/a&gt;.</source>
          <target state="translated">언더 &lt;a href=&quot;../type-layout#the-default-representation&quot;&gt;기본 표현&lt;/a&gt; , 지정된 판별은로 해석됩니다 &lt;code&gt;isize&lt;/code&gt; 컴파일러가 실제 메모리 레이아웃에 작은 유형을 사용할 수 있지만 값. &lt;a href=&quot;../type-layout#primitive-representations&quot;&gt;프리미티브 표현&lt;/a&gt; 또는 &lt;a href=&quot;../type-layout#the-c-representation&quot;&gt; &lt;code&gt;C&lt;/code&gt; 표현&lt;/a&gt; 을 사용하여 크기와 허용 가능한 값을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="934025592a349e0ccdf3fcea702e3b4fab1b4701" translate="yes" xml:space="preserve">
          <source>Under the surface, the &lt;code&gt;assert_eq!&lt;/code&gt; and &lt;code&gt;assert_ne!&lt;/code&gt; macros use the operators &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;, respectively. When the assertions fail, these macros print their arguments using debug formatting, which means the values being compared must implement the &lt;code&gt;PartialEq&lt;/code&gt; and &lt;code&gt;Debug&lt;/code&gt; traits. All the primitive types and most of the standard library types implement these traits. For structs and enums that you define, you&amp;rsquo;ll need to implement &lt;code&gt;PartialEq&lt;/code&gt; to assert that values of those types are equal or not equal. You&amp;rsquo;ll need to implement &lt;code&gt;Debug&lt;/code&gt; to print the values when the assertion fails. Because both traits are derivable traits, as mentioned in Listing 5-12 in Chapter 5, this is usually as straightforward as adding the &lt;code&gt;#[derive(PartialEq, Debug)]&lt;/code&gt; annotation to your struct or enum definition. See Appendix C, &lt;a href=&quot;appendix-03-derivable-traits&quot;&gt;&amp;ldquo;Derivable Traits,&amp;rdquo;&lt;/a&gt; for more details about these and other derivable traits.</source>
          <target state="translated">표면 아래에서 &lt;code&gt;assert_eq!&lt;/code&gt; 그리고 &lt;code&gt;assert_ne!&lt;/code&gt; 매크로는 각각 &lt;code&gt;==&lt;/code&gt; 및 &lt;code&gt;!=&lt;/code&gt; 연산자를 사용합니다 . 어설 션이 실패하면 이러한 매크로는 디버그 형식을 사용하여 인수를 인쇄합니다. 이는 비교중인 값이 &lt;code&gt;PartialEq&lt;/code&gt; 및 &lt;code&gt;Debug&lt;/code&gt; 특성을 구현해야 함을 의미합니다 . 모든 기본 유형과 대부분의 표준 라이브러리 유형은 이러한 특성을 구현합니다. 정의한 구조체와 열거 형의 경우 &lt;code&gt;PartialEq&lt;/code&gt; 를 구현 하여 해당 유형의 값이 같거나 같지 않아야합니다. &lt;code&gt;Debug&lt;/code&gt; 를 구현해야합니다어설 션이 실패 할 때 값을 인쇄합니다. 5 장의 목록 5-12에서 언급 한 것처럼 두 특성이 모두 파생 가능한 특성이므로 일반적으로 &lt;code&gt;#[derive(PartialEq, Debug)]&lt;/code&gt; 주석을 구조체 또는 열거 정의에 추가하는 것만 큼 간단 합니다. 이러한 특성 및 기타 파생 &lt;a href=&quot;appendix-03-derivable-traits&quot;&gt;가능한 특성에&lt;/a&gt; 대한 자세한 내용은 부록 C, &quot; 파생 특성 &quot; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c52b1bbb83c6ff68ef901a5b3c68e708f2da78aa" translate="yes" xml:space="preserve">
          <source>Underlying System calls</source>
          <target state="translated">기본 시스템 호출</target>
        </trans-unit>
        <trans-unit id="ca035a5ce4c3df59c37ddda21e0189a6380e3b1f" translate="yes" xml:space="preserve">
          <source>Underscore</source>
          <target state="translated">Underscore</target>
        </trans-unit>
        <trans-unit id="7bd1424f9d38ad3f094e622e30f38d61cffee843" translate="yes" xml:space="preserve">
          <source>Underscore Imports</source>
          <target state="translated">밑줄 수입</target>
        </trans-unit>
        <trans-unit id="e31df2c04ec1e4b0b36bedd38e82d9eeb2726bb3" translate="yes" xml:space="preserve">
          <source>Understanding Ownership</source>
          <target state="translated">소유권 이해</target>
        </trans-unit>
        <trans-unit id="f50d8069b5b46a2b00b55d627b937dadef8d4c8b" translate="yes" xml:space="preserve">
          <source>Undo the effect of leaked guards on the borrow state of the &lt;code&gt;RefCell&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RefCell&lt;/code&gt; 의 차용 상태에서 누출 된 가드의 효과를 취소합니다 .</target>
        </trans-unit>
        <trans-unit id="2bd6a0012c9128bdcdb48f1df7a5232a746b1dd8" translate="yes" xml:space="preserve">
          <source>Unfortunately, &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; is not safe to share across threads. When &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; manages the reference count, it adds to the count for each call to &lt;code&gt;clone&lt;/code&gt; and subtracts from the count when each clone is dropped. But it doesn&amp;rsquo;t use any concurrency primitives to make sure that changes to the count can&amp;rsquo;t be interrupted by another thread. This could lead to wrong counts&amp;mdash;subtle bugs that could in turn lead to memory leaks or a value being dropped before we&amp;rsquo;re done with it. What we need is a type exactly like &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; but one that makes changes to the reference count in a thread-safe way.</source>
          <target state="translated">불행히도 &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 는 스레드간에 공유하기에 안전하지 않습니다. &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 는 참조 횟수를 관리 할 때 &lt;code&gt;clone&lt;/code&gt; 할 각 호출의 개수에 추가하고 각 클론이 삭제 될 때 해당 개수에서 뺍니다. 그러나 다른 스레드가 카운트 변경을 방해 할 수 없도록 동시성 프리미티브를 사용하지 않습니다. 이것은 잘못된 카운트로 이어질 수 있습니다. 미묘한 버그로 인해 메모리 누수가 발생하거나 완료하기 전에 값이 떨어질 수 있습니다. 우리에게 필요한 것은 &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; 와 정확히 같은 유형 이지만 스레드 안전 방식으로 참조 카운트를 변경 하는 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="ccb18a8dd577d217916f372c4de88677ea8361fc" translate="yes" xml:space="preserve">
          <source>Unfortunately, it&amp;rsquo;s not straightforward to disable the automatic &lt;code&gt;drop&lt;/code&gt; functionality. Disabling &lt;code&gt;drop&lt;/code&gt; isn&amp;rsquo;t usually necessary; the whole point of the &lt;code&gt;Drop&lt;/code&gt; trait is that it&amp;rsquo;s taken care of automatically. Occasionally, however, you might want to clean up a value early. One example is when using smart pointers that manage locks: you might want to force the &lt;code&gt;drop&lt;/code&gt; method that releases the lock so that other code in the same scope can acquire the lock. Rust doesn&amp;rsquo;t let you call the &lt;code&gt;Drop&lt;/code&gt; trait&amp;rsquo;s &lt;code&gt;drop&lt;/code&gt; method manually; instead you have to call the &lt;code&gt;std::mem::drop&lt;/code&gt; function provided by the standard library if you want to force a value to be dropped before the end of its scope.</source>
          <target state="translated">불행히도 자동 &lt;code&gt;drop&lt;/code&gt; 기능 을 비활성화하는 것은 간단하지 않습니다 . &lt;code&gt;drop&lt;/code&gt; 비활성화 는 일반적으로 필요하지 않습니다. 의 요점 &lt;code&gt;Drop&lt;/code&gt; 특성은 자동으로 알아서 점이다. 그러나 때때로 값을 일찍 정리해야 할 수 있습니다. 한 가지 예는 잠금을 관리하는 스마트 포인터를 사용하는 경우 입니다. 동일한 범위에있는 다른 코드가 잠금을 획득 할 수 있도록 잠금을 해제하는 &lt;code&gt;drop&lt;/code&gt; 메소드 를 강제로 사용할 수 있습니다. Rust는 &lt;code&gt;Drop&lt;/code&gt; 트레이 트의 &lt;code&gt;drop&lt;/code&gt; 메서드를 수동으로 호출 할 수 없습니다 . 대신 &lt;code&gt;std::mem::drop&lt;/code&gt; 을 호출해야합니다.범위가 끝나기 전에 값을 강제로 삭제하려는 경우 표준 라이브러리에서 제공하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="1444761777045d9a10886b422e6940c76965059f" translate="yes" xml:space="preserve">
          <source>Unfortunately, it&amp;rsquo;s not straightforward to disable the automatic &lt;code&gt;drop&lt;/code&gt; functionality. Disabling &lt;code&gt;drop&lt;/code&gt; isn&amp;rsquo;t usually necessary; the whole point of the &lt;code&gt;Drop&lt;/code&gt; trait is that it&amp;rsquo;s taken care of automatically. Occasionally, however, you might want to clean up a value early. One example is when using smart pointers that manage locks: you might want to force the &lt;code&gt;drop&lt;/code&gt; method that releases the lock to run so other code in the same scope can acquire the lock. Rust doesn&amp;rsquo;t let you call the &lt;code&gt;Drop&lt;/code&gt; trait&amp;rsquo;s &lt;code&gt;drop&lt;/code&gt; method manually; instead you have to call the &lt;code&gt;std::mem::drop&lt;/code&gt; function provided by the standard library if you want to force a value to be dropped before the end of its scope.</source>
          <target state="translated">불행히도 자동 &lt;code&gt;drop&lt;/code&gt; 기능 을 비활성화하는 것은 간단하지 않습니다 . &lt;code&gt;drop&lt;/code&gt; 비활성화 는 일반적으로 필요하지 않습니다. 의 요점 &lt;code&gt;Drop&lt;/code&gt; 특성은 자동으로 알아서 점이다. 그러나 때때로 값을 일찍 정리하고 싶을 수도 있습니다. 잠금을 관리하는 스마트 포인터를 사용하는 경우를 예로들 수 있습니다 . 잠금을 해제하는 &lt;code&gt;drop&lt;/code&gt; 메소드 를 강제 로 실행하여 동일한 범위에있는 다른 코드가 잠금을 획득 할 수 있습니다. Rust는 &lt;code&gt;Drop&lt;/code&gt; 특성의 &lt;code&gt;drop&lt;/code&gt; 메소드를 수동으로 호출 할 수 없습니다 . 대신 &lt;code&gt;std::mem::drop&lt;/code&gt; 을 호출해야합니다. 범위가 끝나기 전에 값을 강제로 삭제하려는 경우 표준 라이브러리에서 제공하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="1a531b7898235009a0cc7b2eec486ea25b9d6d2f" translate="yes" xml:space="preserve">
          <source>Unfortunately, the code in Listing 7-5 still results in an error, as shown in Listing 7-6.</source>
          <target state="translated">불행히도 Listing 7-5에 표시된 것처럼 Listing 7-5의 코드는 여전히 오류를 발생시킨다.</target>
        </trans-unit>
        <trans-unit id="be79a988f81db8bfcf6945f3ba47d61010546fc9" translate="yes" xml:space="preserve">
          <source>Unicode escapes</source>
          <target state="translated">유니 코드 이스케이프</target>
        </trans-unit>
        <trans-unit id="ae0d9cce1182bdae15059a991a47bf01218e3825" translate="yes" xml:space="preserve">
          <source>Unicode escapes are never generated by this function.</source>
          <target state="translated">이 함수는 유니 코드 이스케이프를 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="049c2f43b308773f947249e6515dfdd4cc3c35a2" translate="yes" xml:space="preserve">
          <source>Unicode is designed such that this effectively decodes bytes with the character encoding that IANA calls ISO-8859-1. This encoding is compatible with ASCII.</source>
          <target state="translated">유니 코드는 IANA가 ISO-8859-1이라고 부르는 문자 인코딩으로 바이트를 효과적으로 디코딩하도록 설계되었습니다. 이 인코딩은 ASCII와 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="045e4620605ab61ee2d00d3c61380dde56a437e0" translate="yes" xml:space="preserve">
          <source>Unicode string slices.</source>
          <target state="translated">유니 코드 문자열 조각.</target>
        </trans-unit>
        <trans-unit id="ea8b0aa9835ad896a48c3cd1f5107ad4d8a0d9e1" translate="yes" xml:space="preserve">
          <source>UnicodeVersion</source>
          <target state="translated">UnicodeVersion</target>
        </trans-unit>
        <trans-unit id="2e2480da297a5a795e54a8b1e8174027d5cb3056" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::borrow</source>
          <target state="translated">UnicodeVersion::borrow</target>
        </trans-unit>
        <trans-unit id="89b51103925ce314bbcaaf20a8fe1cadc3924003" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::borrow_mut</source>
          <target state="translated">UnicodeVersion::borrow_mut</target>
        </trans-unit>
        <trans-unit id="88a2e4badb33e94ea8a5b499e6fc153387a0beb3" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::clamp</source>
          <target state="translated">UnicodeVersion::clamp</target>
        </trans-unit>
        <trans-unit id="d17cdcafd0174814c16b4f219e4fed72e9bd469a" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::clone</source>
          <target state="translated">UnicodeVersion::clone</target>
        </trans-unit>
        <trans-unit id="47b2336d0c0eb30610891e9aeb66476192776d1f" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::clone_from</source>
          <target state="translated">UnicodeVersion::clone_from</target>
        </trans-unit>
        <trans-unit id="df3118b48825d7934a06fa42be12de85a41743a3" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::clone_into</source>
          <target state="translated">UnicodeVersion::clone_into</target>
        </trans-unit>
        <trans-unit id="a501e28c8f674e6c8775cd5763a1269e58854a95" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::cmp</source>
          <target state="translated">UnicodeVersion::cmp</target>
        </trans-unit>
        <trans-unit id="eb0f8f28b23626496734a42b66b3d04fceab6e15" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::eq</source>
          <target state="translated">UnicodeVersion::eq</target>
        </trans-unit>
        <trans-unit id="d50614eac8572f390490b398b9df8d2ee6162d01" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::fmt</source>
          <target state="translated">UnicodeVersion::fmt</target>
        </trans-unit>
        <trans-unit id="870f165e6cd936b143cbc0dbc14afac1093420d0" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::from</source>
          <target state="translated">UnicodeVersion::from</target>
        </trans-unit>
        <trans-unit id="2bad969f3e70b400e54b881fe8536995db1f2994" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::ge</source>
          <target state="translated">UnicodeVersion::ge</target>
        </trans-unit>
        <trans-unit id="08f3a8d2999b98ac5f6c67691d5bdd1bc1a0e145" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::gt</source>
          <target state="translated">UnicodeVersion::gt</target>
        </trans-unit>
        <trans-unit id="b5a9d9239e831f7ef74e7e53b12fa0fd62d71a97" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::into</source>
          <target state="translated">UnicodeVersion::into</target>
        </trans-unit>
        <trans-unit id="1ea14b2a7575169ecf16f30acb48c3409c34b763" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::le</source>
          <target state="translated">UnicodeVersion::le</target>
        </trans-unit>
        <trans-unit id="eb08588571d008fa3a48093f6cad0aa8209e47e3" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::lt</source>
          <target state="translated">UnicodeVersion::lt</target>
        </trans-unit>
        <trans-unit id="809dd77e054b744c6372ff89e0b31e14994e27e7" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::max</source>
          <target state="translated">UnicodeVersion::max</target>
        </trans-unit>
        <trans-unit id="1c035e39a67ae5609815950cc75aebf117385e95" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::min</source>
          <target state="translated">UnicodeVersion::min</target>
        </trans-unit>
        <trans-unit id="064f84b6703cb5f6f68f68e7fc2c4d251f631296" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::ne</source>
          <target state="translated">UnicodeVersion::ne</target>
        </trans-unit>
        <trans-unit id="7c59df82b034e552f2c3f4f3995f283f8463f626" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::partial_cmp</source>
          <target state="translated">UnicodeVersion::partial_cmp</target>
        </trans-unit>
        <trans-unit id="cd2d6e2e056d2c57e62b0e2e433f8281504be6b4" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::to_owned</source>
          <target state="translated">UnicodeVersion::to_owned</target>
        </trans-unit>
        <trans-unit id="c51cc398d26afae848ea754f781315242ac4e979" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::try_from</source>
          <target state="translated">UnicodeVersion::try_from</target>
        </trans-unit>
        <trans-unit id="a8b18a0ff13e1e11bb861c761bf0dc70df4c71e0" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::try_into</source>
          <target state="translated">UnicodeVersion::try_into</target>
        </trans-unit>
        <trans-unit id="eecb3bfce19f7a3ae0d89e37123a7c922b8eeab9" translate="yes" xml:space="preserve">
          <source>UnicodeVersion::type_id</source>
          <target state="translated">UnicodeVersion::type_id</target>
        </trans-unit>
        <trans-unit id="6ec76a97b7c965b8294c7506df62a1b9b03c72be" translate="yes" xml:space="preserve">
          <source>Uninhabited</source>
          <target state="translated">Uninhabited</target>
        </trans-unit>
        <trans-unit id="72d1bc1786787b9f5cf6f8701a1fb442f4f59285" translate="yes" xml:space="preserve">
          <source>Union</source>
          <target state="translated">Union</target>
        </trans-unit>
        <trans-unit id="431e2898d7b9070b1bc9e3d0e0fac72fa778d000" translate="yes" xml:space="preserve">
          <source>Union std::mem::MaybeUninit</source>
          <target state="translated">유니온 std :: mem :: MaybeUninit</target>
        </trans-unit>
        <trans-unit id="2697f04d1c34bc0fd003a5d4f2f248be3c9842cb" translate="yes" xml:space="preserve">
          <source>Union types</source>
          <target state="translated">연합 유형</target>
        </trans-unit>
        <trans-unit id="00002b164c08859d5a15579e55c8f17ce6478546" translate="yes" xml:space="preserve">
          <source>Unions</source>
          <target state="translated">Unions</target>
        </trans-unit>
        <trans-unit id="0b4b57a2ff8ee5597f14593b11685d486d14ac1f" translate="yes" xml:space="preserve">
          <source>Unions and &lt;code id=&quot;unions-and-drop&quot;&gt;Drop&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ff5b52f206cf593da36650b6dcc3e0e0087048" translate="yes" xml:space="preserve">
          <source>Unions have no notion of an &quot;active field&quot;. Instead, every union access just interprets the storage at the type of the field used for the access. Reading a union field reads the bits of the union at the field's type. Fields might have a non-zero offset (except when &lt;code&gt;#[repr(C)]&lt;/code&gt; is used); in that case the bits starting at the offset of the fields are read. It is the programmer's responsibility to make sure that the data is valid at the field's type. Failing to do so results in undefined behavior. For example, reading the value &lt;code&gt;3&lt;/code&gt; at type &lt;code&gt;bool&lt;/code&gt; is undefined behavior. Effectively, writing to and then reading from a &lt;code&gt;#[repr(C)]&lt;/code&gt; union is analogous to a &lt;a href=&quot;../../std/mem/fn.transmute&quot;&gt;&lt;code&gt;transmute&lt;/code&gt;&lt;/a&gt; from the type used for writing to the type used for reading.</source>
          <target state="translated">공용체에는 &quot;활성 필드&quot;라는 개념이 없습니다. 대신 모든 공용체 액세스는 액세스에 사용되는 필드의 유형에서 스토리지를 해석합니다. 공용체 필드를 읽으면 필드 유형에서 공용체의 비트를 읽습니다. 필드는 0이 아닌 오프셋을 가질 수 있습니다 ( &lt;code&gt;#[repr(C)]&lt;/code&gt; 가 사용되는 경우 제외 ). 이 경우 필드의 오프셋에서 시작하는 비트를 읽습니다. 데이터가 필드의 유형에서 유효한지 확인하는 것은 프로그래머의 책임입니다. 그렇게하지 않으면 정의되지 않은 동작이 발생합니다. 예를 들어 &lt;code&gt;bool&lt;/code&gt; 유형에서 값 &lt;code&gt;3&lt;/code&gt; 을 읽는 것은 정의되지 않은 동작입니다. 효과적으로 &lt;code&gt;#[repr(C)]&lt;/code&gt; 공용체에 쓰고 읽는 것은 &lt;a href=&quot;../../std/mem/fn.transmute&quot;&gt; &lt;code&gt;transmute&lt;/code&gt; &lt;/a&gt; 과 유사합니다. 쓰기에 사용되는 유형에서 읽기에 사용되는 유형으로.</target>
        </trans-unit>
        <trans-unit id="9ee9dda7ec1e961b1ea8bab0ad66f79036feccce" translate="yes" xml:space="preserve">
          <source>Unions have no notion of an &quot;active field&quot;. Instead, every union access just interprets the storage at the type of the field used for the access. Reading a union field reads the bits of the union at the field's type. It is the programmer's responsibility to make sure that the data is valid at that type. Failing to do so results in undefined behavior. For example, reading the value &lt;code&gt;3&lt;/code&gt; at type &lt;code&gt;bool&lt;/code&gt; is undefined behavior. Effectively, writing to and then reading from a union is analogous to a &lt;a href=&quot;../../std/mem/fn.transmute&quot;&gt;&lt;code&gt;transmute&lt;/code&gt;&lt;/a&gt; from the type used for writing to the type used for reading.</source>
          <target state="translated">노동 조합은 &quot;활동 분야&quot;에 대한 개념이 없습니다. 대신, 모든 유니언 액세스는 액세스에 사용되는 필드 유형에서 스토리지를 해석합니다. 유니온 필드를 읽으면 필드 유형에서 유니온 비트를 읽습니다. 데이터가 해당 유형에 유효한지 확인하는 것은 프로그래머의 책임입니다. 그렇지 않으면 정의되지 않은 동작이 발생합니다. 예를 들어, &lt;code&gt;bool&lt;/code&gt; 유형에서 값 &lt;code&gt;3&lt;/code&gt; 을 읽는 것은 정의되지 않은 동작입니다. 실제로, 공용체 에 쓰고 읽은 것은 읽는 데 사용되는 형식에서 쓰는 형식 의 &lt;a href=&quot;../../std/mem/fn.transmute&quot;&gt; &lt;code&gt;transmute&lt;/code&gt; &lt;/a&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="5078dc66c307401e9db5997fdb77c1b9baee7912" translate="yes" xml:space="preserve">
          <source>Unions have no notion of an &quot;active field&quot;. Instead, every union access transmutes parts of the content of the union to the type of the accessed field. Since transmutes can cause unexpected or undefined behaviour, &lt;code&gt;unsafe&lt;/code&gt; is required to read from a union field or to write to a field that doesn't implement &lt;a href=&quot;../special-types-and-traits#copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;. See the &lt;a href=&quot;../items/unions&quot;&gt;item&lt;/a&gt; documentation for further details.</source>
          <target state="translated">공용체에는 &quot;활성 필드&quot;라는 개념이 없습니다. 대신 모든 공용체 액세스는 공용체 콘텐츠의 일부를 액세스 된 필드의 유형으로 변환합니다. 변환은 예기치 않거나 정의되지 않은 동작을 유발할 수 있으므로 통합 필드에서 읽거나 &lt;a href=&quot;../special-types-and-traits#copy&quot;&gt; &lt;code&gt;Copy&lt;/code&gt; 를&lt;/a&gt; 구현하지 않는 필드에 쓰려면 &lt;code&gt;unsafe&lt;/code&gt; 하지 않아야합니다 . 자세한 내용은 &lt;a href=&quot;../items/unions&quot;&gt;항목&lt;/a&gt; 문서를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="fa92690b772357d1ef06b6b63773a7916e701512" translate="yes" xml:space="preserve">
          <source>Unions have no notion of an &quot;active field&quot;. Instead, every union access transmutes parts of the content of the union to the type of the accessed field. Since transmutes can cause unexpected or undefined behaviour, &lt;code&gt;unsafe&lt;/code&gt; is required to read from a union field, or to write to a field that doesn't implement &lt;a href=&quot;../special-types-and-traits#copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;. See the &lt;a href=&quot;../items/unions&quot;&gt;item&lt;/a&gt; documentation for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2b3efb0aed2e9062949d0d6efb28c840e4bdd0" translate="yes" xml:space="preserve">
          <source>Unique immutable borrows in captures</source>
          <target state="translated">캡처에서 고유 한 불변의 차용</target>
        </trans-unit>
        <trans-unit id="55319d93decd49524c6577ad2944aab8499b8def" translate="yes" xml:space="preserve">
          <source>Unit Tests</source>
          <target state="translated">단위 테스트</target>
        </trans-unit>
        <trans-unit id="fc4dd0d2f506c2585198c093fe3355566c69c50a" translate="yes" xml:space="preserve">
          <source>Unit struct expression</source>
          <target state="translated">유닛 구조체 표현</target>
        </trans-unit>
        <trans-unit id="43b9bb5cd29f3ad5aabe2057140ec12468595ac3" translate="yes" xml:space="preserve">
          <source>Unit structs are most commonly used as marker. They have a size of zero bytes, but unlike empty enums they can be instantiated, making them isomorphic to the unit type &lt;code&gt;()&lt;/code&gt;. Unit structs are useful when you need to implement a trait on something, but don't need to store any data inside it.</source>
          <target state="translated">단위 구조체는 가장 일반적으로 마커로 사용됩니다. 크기는 0 바이트이지만 빈 열거 형과 달리 인스턴스화 할 수 있으므로 단위 유형 &lt;code&gt;()&lt;/code&gt; 과 동형이됩니다 . 유닛 구조체는 무언가에 특성을 구현해야하지만 그 안에 데이터를 저장할 필요는 없을 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="29ad46d73653a34f4423b5d45017917794627b45" translate="yes" xml:space="preserve">
          <source>Unit-Like Structs Without Any Fields</source>
          <target state="translated">필드가없는 단위와 같은 구조</target>
        </trans-unit>
        <trans-unit id="cecc0d8500754b34f5bd7f11dfabb25c3a770aaf" translate="yes" xml:space="preserve">
          <source>Unix</source>
          <target state="translated">Unix</target>
        </trans-unit>
        <trans-unit id="b00eb2991ece231ee34e1193574afcc6b4379e47" translate="yes" xml:space="preserve">
          <source>Unix peer credentials.</source>
          <target state="translated">Unix 피어 자격 증명.</target>
        </trans-unit>
        <trans-unit id="122365e7dc1f75db94d30ca063c2e50b567c06af" translate="yes" xml:space="preserve">
          <source>Unix-specific extension methods for &lt;a href=&quot;../../../fs/struct.direntry&quot;&gt;&lt;code&gt;fs::DirEntry&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../fs/struct.direntry&quot;&gt; &lt;code&gt;fs::DirEntry&lt;/code&gt; &lt;/a&gt; 유닉스 별 확장 메소드 .</target>
        </trans-unit>
        <trans-unit id="40290eba8741a7fb561802cc4fd7a5f03fc12be7" translate="yes" xml:space="preserve">
          <source>Unix-specific extension to the primitives in the &lt;code&gt;std::ffi&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;std::ffi&lt;/code&gt; 모듈 의 프리미티브에 대한 유닉스 별 확장</target>
        </trans-unit>
        <trans-unit id="abb9e72437d43bc0a2c9b376ba3ef37ee9f0016a" translate="yes" xml:space="preserve">
          <source>Unix-specific extension to the primitives in the &lt;code&gt;std::ffi&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;std::ffi&lt;/code&gt; 모듈 의 기본 요소에 대한 유닉스 특정 확장 .</target>
        </trans-unit>
        <trans-unit id="7d8456cebfaf04274630f018fe98c85f0928fd59" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions for &lt;a href=&quot;../../../fs/struct.filetype&quot;&gt;&lt;code&gt;FileType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../fs/struct.filetype&quot;&gt; &lt;code&gt;FileType&lt;/code&gt; 의&lt;/a&gt; 유닉스 별 확장자 .</target>
        </trans-unit>
        <trans-unit id="1f656dcd59d506e815045da5be6675c4c9594d4c" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions for &lt;a href=&quot;../../../fs/struct.filetype&quot;&gt;&lt;code&gt;fs::FileType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../fs/struct.filetype&quot;&gt; &lt;code&gt;fs::FileType&lt;/code&gt; &lt;/a&gt; 대한 Unix 특정 확장 .</target>
        </trans-unit>
        <trans-unit id="44ae3204adf61398987a8d1c1ea0cc0ee7054526" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions to &lt;a href=&quot;../../../fs/struct.dirbuilder&quot;&gt;&lt;code&gt;fs::DirBuilder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../fs/struct.dirbuilder&quot;&gt; &lt;code&gt;fs::DirBuilder&lt;/code&gt; &lt;/a&gt; 대한 유닉스 별 확장 .</target>
        </trans-unit>
        <trans-unit id="5c055cc3e8d38d074a1699c2467aa73f8a67ec8b" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions to &lt;a href=&quot;../../../fs/struct.file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../fs/struct.file&quot;&gt; &lt;code&gt;File&lt;/code&gt; 에&lt;/a&gt; 대한 유닉스 별 확장 .</target>
        </trans-unit>
        <trans-unit id="edc026b1b59822f06029958a23a0df330b02c688" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions to &lt;a href=&quot;../../../fs/struct.file&quot;&gt;&lt;code&gt;fs::File&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../fs/struct.file&quot;&gt; &lt;code&gt;fs::File&lt;/code&gt; &lt;/a&gt; 대한 Unix 특정 확장 .</target>
        </trans-unit>
        <trans-unit id="f808e6d0f3cef15729ba995896155633f9c4e702" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions to &lt;a href=&quot;../../../fs/struct.metadata&quot;&gt;&lt;code&gt;fs::Metadata&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../fs/struct.metadata&quot;&gt; &lt;code&gt;fs::Metadata&lt;/code&gt; &lt;/a&gt; 유닉스 별 확장 .</target>
        </trans-unit>
        <trans-unit id="a398ee8c4edc244dd48383efb674694800d11b42" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions to &lt;a href=&quot;../../../fs/struct.openoptions&quot;&gt;&lt;code&gt;fs::OpenOptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../fs/struct.openoptions&quot;&gt; &lt;code&gt;fs::OpenOptions&lt;/code&gt; &lt;/a&gt; 유닉스 별 확장 .</target>
        </trans-unit>
        <trans-unit id="5c3e2254255ed122649ef706ca6351a05878a982" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions to &lt;a href=&quot;../../../fs/struct.permissions&quot;&gt;&lt;code&gt;fs::Permissions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../fs/struct.permissions&quot;&gt; &lt;code&gt;fs::Permissions&lt;/code&gt; &lt;/a&gt; 유닉스 별 확장 .</target>
        </trans-unit>
        <trans-unit id="debd12446f93bf566a622bdf802607a7783bf6af" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions to &lt;a href=&quot;../../../process/struct.exitstatus&quot;&gt;&lt;code&gt;process::ExitStatus&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">유닉스 특정 확장하는 &lt;a href=&quot;../../../process/struct.exitstatus&quot;&gt; &lt;code&gt;process::ExitStatus&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="04090d3e2df7580a6d7cec986c08600c0473b452" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions to &lt;a href=&quot;../../../thread/struct.joinhandle&quot;&gt;&lt;code&gt;JoinHandle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../thread/struct.joinhandle&quot;&gt; &lt;code&gt;JoinHandle&lt;/code&gt; 에&lt;/a&gt; 대한 Unix 특정 확장 .</target>
        </trans-unit>
        <trans-unit id="a44e2e0da5854a8ebdf4095318d97783ef5ced71" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions to &lt;a href=&quot;../../../thread/struct.joinhandle&quot;&gt;&lt;code&gt;thread::JoinHandle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../thread/struct.joinhandle&quot;&gt; &lt;code&gt;thread::JoinHandle&lt;/code&gt; &lt;/a&gt; 대한 유닉스 고유의 확장 .</target>
        </trans-unit>
        <trans-unit id="d0f569dc194098f87c8bc0882017a7d0c963c955" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions to general I/O primitives</source>
          <target state="translated">일반 I / O 프리미티브에 대한 유닉스 별 확장</target>
        </trans-unit>
        <trans-unit id="8e6df3ed34620f11bd872bbbdadc0905f4158426" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions to general I/O primitives.</source>
          <target state="translated">일반 I / O 프리미티브에 대한 Unix 특정 확장.</target>
        </trans-unit>
        <trans-unit id="3789837939ff4014248adcb7118252ef4bacad14" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions to primitives in the &lt;code&gt;std::fs&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;std::fs&lt;/code&gt; 모듈의 프리미티브에 대한 유닉스 별 확장 .</target>
        </trans-unit>
        <trans-unit id="b4f34673a7f1203fc92e8429aa07449552c09698" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions to primitives in the &lt;code&gt;std::process&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;std::process&lt;/code&gt; 모듈의 프리미티브에 대한 유닉스 별 확장 .</target>
        </trans-unit>
        <trans-unit id="60cfd734bf76c756b8e059f4a9d1700ff9a4713c" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions to primitives in the &lt;code&gt;std::thread&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;std::thread&lt;/code&gt; 모듈의 프리미티브에 대한 유닉스 별 확장 .</target>
        </trans-unit>
        <trans-unit id="2ffca9f4f9cc7c8dd85f78563efe7167f6d2b47d" translate="yes" xml:space="preserve">
          <source>Unix-specific extensions to the &lt;a href=&quot;../../../process/struct.command&quot;&gt;&lt;code&gt;process::Command&lt;/code&gt;&lt;/a&gt; builder.</source>
          <target state="translated">&lt;a href=&quot;../../../process/struct.command&quot;&gt; &lt;code&gt;process::Command&lt;/code&gt; &lt;/a&gt; 빌더 에 대한 유닉스 별 확장 .</target>
        </trans-unit>
        <trans-unit id="e0d68049fb554c75225dfe9c03296f580e460278" translate="yes" xml:space="preserve">
          <source>Unix-specific networking functionality</source>
          <target state="translated">유닉스 전용 네트워킹 기능</target>
        </trans-unit>
        <trans-unit id="547d566a755a9f281512ec4438e2afbe2e8555f4" translate="yes" xml:space="preserve">
          <source>Unix-specific networking functionality.</source>
          <target state="translated">Unix 관련 네트워킹 기능.</target>
        </trans-unit>
        <trans-unit id="6dc7e1fbf723c58f49b9c7b7c9486e8910ff303f" translate="yes" xml:space="preserve">
          <source>Unix-specific primitives available on all unix platforms</source>
          <target state="translated">모든 유닉스 플랫폼에서 사용 가능한 유닉스 관련 프리미티브</target>
        </trans-unit>
        <trans-unit id="5d6c2bdf64d7b2867f336fc3ecf7da3868d50a13" translate="yes" xml:space="preserve">
          <source>Unix-specific primitives available on all unix platforms.</source>
          <target state="translated">모든 유닉스 플랫폼에서 사용할 수있는 유닉스 특정 프리미티브.</target>
        </trans-unit>
        <trans-unit id="559d58e1a8d746d91fa3600f29dbbb56c9ca25cd" translate="yes" xml:space="preserve">
          <source>UnixDatagram</source>
          <target state="translated">UnixDatagram</target>
        </trans-unit>
        <trans-unit id="67d62a4911bb1e0d83beb3b448aab6df455a9a7a" translate="yes" xml:space="preserve">
          <source>UnixListener</source>
          <target state="translated">UnixListener</target>
        </trans-unit>
        <trans-unit id="941c06c80eb53ce02937637ee16d42217c4f223a" translate="yes" xml:space="preserve">
          <source>UnixStream</source>
          <target state="translated">UnixStream</target>
        </trans-unit>
        <trans-unit id="55add9bdacff5201b17fde89c00c759c2cb86e1e" translate="yes" xml:space="preserve">
          <source>Unless you are in such a situation, higher-level and more foolproof APIs like &lt;code&gt;get&lt;/code&gt; should be preferred.</source>
          <target state="translated">이러한 상황에 있지 않으면 &lt;code&gt;get&lt;/code&gt; 과 같은 고급 및 더 안전한 API 가 선호되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a444b89922afd7135047b0a62b434579bde022e6" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#method.compare_exchange&quot;&gt;&lt;code&gt;compare_exchange&lt;/code&gt;&lt;/a&gt;, this function is allowed to spuriously fail even when the comparison succeeds, which can result in more efficient code on some platforms. The return value is a result indicating whether the new value was written and containing the previous value.</source>
          <target state="translated">&lt;a href=&quot;#method.compare_exchange&quot;&gt; &lt;code&gt;compare_exchange&lt;/code&gt; &lt;/a&gt; 와 달리 ,이 함수는 비교가 성공하더라도 허위로 실패 할 수 있으므로 일부 플랫폼에서 더 효율적인 코드가 생성 될 수 있습니다. 리턴 값은 새 값이 작성되었으며 이전 값을 포함하는지 여부를 나타내는 결과입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
